id,title,username,language,date,content
LtbfyFw2,tcunit test file,andrewtc4,C,Tuesday 21st of May 2024 01:01:11 PM CDT,"#include <tcunit/tcunit.h>
#include <stdlib.h>

tc_result test_foo()
{
    return TC_OK;
}

tc_result all_tests()
{
    Test(""foo"", test_foo, NULL, NULL);

    return TC_OK;
}

TC_RUN_TESTS(all_tests);"
Kq9wbiRR,Untitled,Josif_tepe,C++,Tuesday 21st of May 2024 12:59:44 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    int a, b, x, y;
    x = 0; y = 0;
    a = 2; b = 3;
    do 
    {
        x = x + a;
        y = y + b;
        a++;
    } while(a <= b);
    cout << x << endl;
    cout << y << endl;

}
"
iGVnWSNv,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🎁,ssss50w,GetText,Tuesday 21st of May 2024 12:58:50 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
21 May 2024"
gqK0r0Y7,Trigger Hand of Fate,Kojiyama,C++,Tuesday 21st of May 2024 12:49:08 PM CDT,"template <typename Base>
void actions::rogue_action_t<Base>::trigger_hand_of_fate( const action_state_t* state, bool biased, bool trigger_inevitable )
{
  if ( !p()->talent.fatebound.hand_of_fate->ok() )
    return;

  if ( cast_state( state )->get_combo_points() < p()->talent.fatebound.hand_of_fate->effectN( 1 ).base_value() )
    return;

  const bool double_jeopardy = p()->buffs.double_jeopardy->check();
  bool trigger_heads = false;
  bool trigger_tails = false;

  if ( p()->buffs.edge_case->check() )
  {
    p()->buffs.edge_case->expire();
    trigger_heads = trigger_tails = true;
  }
  else if ( p()->buffs.fatebound_coin_tails->check() == p()->buffs.fatebound_coin_heads->check() )
  {
    trigger_heads = !(trigger_tails = p()->rng().roll( 0.5 ));
  }
  else
  {
    double matching_odds = 0.5;
    if ( biased )
    {
      // TODO: Validate how these stack with the presumed base 50/50 chance and one another
      if ( p()->talent.fatebound.mean_streak->ok() )
      {
        matching_odds += matching_odds * p()->talent.fatebound.mean_streak->effectN( 1 ).percent();
      }
      if ( p()->talent.fatebound.destiny_defined->ok() )
      {
        matching_odds += p()->talent.fatebound.destiny_defined->effectN( 3 ).percent();
      }
    }
    if ( p()->talent.fatebound.inevitability->ok() && trigger_inevitable )
    {
      // TODO: Inevitable flips when you have both coins don't always produce a flip
      // for the coin with the higher coin count. There may be an underlying ""order"" to an
      // edge result that is respected; but it's probably just a bug because it makes no sense.
      matching_odds = 1.0;
    }

    const bool is_match = p()->rng().roll( matching_odds );
    const bool current_is_heads = p()->buffs.fatebound_coin_heads->check() > p()->buffs.fatebound_coin_tails->check();
    trigger_tails = !(trigger_heads = ( current_is_heads && is_match ));
  }

  if ( trigger_heads )
  {
    p()->buffs.fatebound_coin_heads->increment( 1 + double_jeopardy );
    if ( !trigger_tails )
      p()->buffs.fatebound_coin_tails->expire();
  }

  if ( trigger_tails )
  {
    p()->buffs.fatebound_coin_tails->increment();
    if ( !trigger_heads )
      p()->buffs.fatebound_coin_heads->expire();

    if ( !ab::is_precombat )
    {
      auto tails_action = ( p()->talent.fatebound.delivered_doom->ok() && p()->sim->target_non_sleeping_list.size() <= 1 )
        ? p()->active.fatebound.fatebound_coin_tails_delivered
        : p()->active.fatebound.fatebound_coin_tails;
      tails_action->execute_on_target( state->target );

      if ( double_jeopardy )
      {
        p()->buffs.fatebound_coin_tails->increment();
        tails_action->execute_on_target( state->target );
      }
    }
  }
  
  p()->buffs.double_jeopardy->expire();
}"
8LKekzvp,Untitled,Josif_tepe,C++,Tuesday 21st of May 2024 12:47:18 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    int a, b;
    a = 0;
    b = 2;
    do  
    {
        b = b + a;
        a++;
    } while(b > 2);
    cout << a << endl;
    return 0;
}
"
ZfUjrT84,Game Creator 2 - Character Controller,MaximilianPs,C#,Tuesday 21st of May 2024 12:42:23 PM CDT,"using System.Threading.Tasks;
using UnityEngine;
using GameCreator.Runtime.Common;
using GameCreator.Runtime.Characters;
using BrokenWings.Player;
using BrokenWings.Character.StateMachine;
using System.Collections.Generic;

 [System.Serializable]
 public class CharacterState
 {
     [SerializeField] private StateData m_State = new StateData(StateData.StateType.State);
     [SerializeField] private PropertyGetInteger m_Layer = new PropertyGetInteger(1);
     [SerializeField] private BlendMode m_BlendMode = BlendMode.Blend;

     private float m_Delay = 0f;
     private float m_Speed = 1f;
     private float m_Weight = 1f;
     private float m_Transition = 0.1f;

     public PropertyGetGameObject m_Character;
     private Task DefaultResult;

     public Task Run(GameCreator.Runtime.Characters.Character character)
     {
         Args args = character.Args;

         m_Character = GetGameObjectPlayer.Create();
         character = this.m_Character.Get<GameCreator.Runtime.Characters.Character>(args);

         if (character == null) return DefaultResult;

         if (!this.m_State.IsValid(character)) return DefaultResult;

         ConfigState configuration = new ConfigState(
             this.m_Delay, this.m_Speed, this.m_Weight,
             this.m_Transition, 0f
         );

         int layer = (int)this.m_Layer.Get(args);

         _ = character.States.SetState(
             this.m_State, layer,
             this.m_BlendMode, configuration
         );

         return DefaultResult;
     }
 }

 public class GCPlayerController : MonoBehaviour
 {
     private BWSystemInputs input;
     public BWSystemInputs Input { get; set; }
   
     private GameCreator.Runtime.Characters.Character character;
     
     public List<CharacterState> characterStates = new List<CharacterState>();

     private bool walk = true;
     private bool run = false;

     void Start()
     {
         input = GetComponent<BWSystemInputs>();
        // SetState(new IdleState(this));

         character = GetComponent<GameCreator.Runtime.Characters.Character>();
     }

     void Update()
     {
         if(input.Sprint && run == false)
         {
             run = true;
             walk = false;
             characterStates[1].Run(character);
         }
         
         if(!input.Sprint && walk == false) 
         { 
             run = false;
             walk = true;
             characterStates[0].Run(character);
         }
     }
  }
}
"
SK5sZbC7,Untitled,Josif_tepe,C++,Tuesday 21st of May 2024 12:30:47 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    int n;
    cin >> n;

    int i = 1;
    int proizvod = 1;
    while(i <= n) 
    {
        if(i % 5 == 0) 
        {
            proizvod *= i;
        }
        i += 1;
    }
    cout << proizvod << endl;
    return 0;
}
"
s5sSDsAL,Untitled,Josif_tepe,C++,Tuesday 21st of May 2024 12:15:11 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    int i = 100;
    int zbir = 0;

    while(i > 50) 
    {
        if(i % 3 == 0) 
        {
            zbir += i;
        }
        i -= 1;
    }
    cout << zbir << endl;
    return 0;
}
"
dBPpqFJ0,Untitled,Rahulpck,Prolog,Tuesday 21st of May 2024 12:12:59 PM CDT,"Aim: Write a program to implement Water Jug Problem.
Source code
Domains
A,B=integer
Predicates
go
water(A,B)
clauses
go:-
write(""enter capacity of jug A""),
readint(A),nl,
A<=4,
write(""enter capacity of jug B""),
readint(B),nl,
B<=3,
write(A,"" "",B),nl,
water(A,B).
water(2,0):-
write(""goal achieved""),nl.
water(2,_):-
write(""2_0""),nl,
water(2,0).
water(0,2):-
write(""2_0""),nl,
water(2,0).
water(_,2):-
write(""0_2""),nl,
water(0,2).
water(4,2):-
write(""0_2""),nl,

water(0,2).
water(3,3):-
write(""4_2""),nl,
water(4,2).
water(3,0):-
write(""3_3""),nl,
water(3,3).
water(0,3):-
write(""3_0""),nl,
water(3,0).
water(4,3):-
write(""0_3""),nl,
water(0,3).

Output
                                
 
Program 3
Aim: Write a program to find a disease from given symptoms.
Source Code

domians
A,B,C=string
predicates
go
disease(A,B,C)
clauses
go:-
write(""Enter the first symptoms: ""),
readln(A),nl,
write(""Enter the second symptoms: ""),
readln(B),nl,
write(""Enter the third symptoms: ""),
readln(C),
disease(A,B,C).
disease(""cough"",""runny nose"",""fever""):-
write(""common cold""),nl.
disease(""sore throat"",""cold"",""congestion""):-
write(""Seasonal Allergy""),nl.
disease(""dizzy"",""dehydration"",""hyperthermia""):-
write(""sun stroke""),nl.
disease(""cold"",""hypothermia"",""fever""):-
write(""frostbite""),nl.



Program 4
Aim: Write a program to implement Monkey Banana Problem.

Source Code
domains
Height,Jump,Stick,Table=integer
predicates
go
attempt(integer,integer,integer,integer,integer)
task(integer)
clauses
go:-
write(""1.monkey jump""),nl,
readint(Jump),
write(""2.Stick Length""),nl,
readint(Stick),
write(""3.Height of ceiling""),nl,
readint(Height),
write(""4.Height of table""),nl,
readint(Table),
attempt(_,Height,Jump,Stick,Table),
readint(_).
attempt(0,Height,Jump,,):-
write(""monkey jumped to catch banana""),nl,
Height<=Jump,
task(1).
attempt(1,Height,Jump,Stick,_):-
write(""monkey jumped with stick to catch banana""),nl,
Height<=Jump+Stick,
task(1).
attempt(2,Height,Jump,Stick,Table):-
write(""monkey jumped with table having stick to catch banana""),nl,
Height<=Jump+Stick+Table,
task(1).
attempt(3,Height,Jump,_,Table):-
write(""monkey jumped with table to catch banana""),nl,
Height<=Jump+Table,
task(1).
attempt(4,Height,Jump,Stick,Table):-
write(""monkey jumped with table having stick to catch banana""),nl,
Height>=Jump+Table+Stick,
write(""unsuccessful"").
task(1):-
write(""successful"").

Output

 


Program 5
Aim: Write a program to implement Travelling Salesman Problem.
Source Code
domains
A,B,C,D=symbol
predicates
go
route(symbol,symbol,integer)
direct(symbol,symbol,integer)
indirect(symbol,symbol,integer)
clauses
route(a,a,0).
route(a,b,5).
route(a,c,6).
route(b,b,0).
route(c,c,0).
route(a,d,7).
route(d,d,0).
route(b,d,2).
route(c,d,1).
go:-
write(""enter first city""),nl,
readln(A),
write(""enter destination city""),nl,
readln(B),
direct(A,B,X),
indirect(A,B,Y),
X>Y,
write(""choose indirect path""),nl,
Y>X,
write(""choose direct path""),nl.
direct(A,B,X):-
route(A,B,X),
write(""successfull""),nl.
indirect(A,B,Y):-
route(A,R,T),
route(R,B,Z),
write(""successfull""),
Y=T+Z.




Output
Program 6

Aim: Write a program to implement Towers of Hanoi Problem.

Source Code
domains
N,J=integer
FROM,TEMP,TO=char
predicates
go
transfer(integer,char,char,char)
clauses
go:-
write(""enter no of disks""),nl,
readint(N),
transfer(N,'A','B','C').
transfer(N,FROM,TO,TEMP):-
N>0,
J=N-1,
transfer(J,FROM,TEMP,TO),
write(""add disk"",J,""from"",FROM,""to"",TO),nl,
readchar(_),
transfer(J,TEMP,TO,FROM),
true.
transfer(N,FROM,TEMP,TO):-
true.

Output

Program 7

Aim:  Write a program to implement Depth First Search.

Source Code
domains
A,B,X,Y=symbol
L=symbol*
predicates
go
childnode(X,Y)
child(X,Y,L)
path(X,Y,L)
clauses
go:-
write(""Enter point: ""),
readln(A),nl,
write(""Exit point: ""),
readln(B),nl,
childnode(a,b).
childnode(a,c).
childnode(c,d).
childnode(c,e).
path(A,B,[A|L]):-
child(A,B,L).
child(A,B,[B|[]]):-
childnode(A,B),!.
child(A,B,[X|L]):-
childnode(A,X),
child(X,B,L).


Output
AIM: Write a python program to implement hangman game. 

SOURCE CODE
#importing the time module
import time
import random

#welcoming the user
name = input(""What is your name? "")

print(""Hello, "" + name, ""Time to play hangman!"")

#wait for 1 second
time.sleep(1)

print(""Start guessing..."")
time.sleep(0.5)

# List of words to choose from
words = [""python"", ""hangman"", ""programming"", ""computer"", ""science"", ""algorithm""]

# Randomly select a word from the list
word = random.choice(words)

#creates an variable with an empty value
guesses = ''

#determine the number of turns
turns = 10

# Create a while loop

#check if the turns are more than zero
while turns > 0:

    # make a counter that starts with zero
    failed = 0

    # for every character in secret_word    
    for char in word:

        # see if the character is in the players guess
        if char in guesses:    

            # print then out the character
            print(char, end="" "")

        else:

            # if not found, print a dash
            print(""_"", end="" "")

            # and increase the failed counter with one
            failed += 1    

    # if failed is equal to zero

    # print You Won
    if failed == 0:        
        print(""\nYou won"")
        break  # exit the script

    # ask the user to guess a character
    guess = input(""\nguess a character: "").lower()

    # set the players guess to guesses
    guesses += guess

    # if the guess is not found in the secret word
    if guess not in word:  

        # turns counter decreases with 1 (now 9)
        turns -= 1        

        # print wrong
        print(""Wrong"")  

        # how many turns are left
        print(""You have"", turns, 'more guesses' )

        # if the turns are equal to zero
        if turns == 0:           

            # print ""You Lose""
            print(""You Lose"")





Write a program for Face Detection using machine learning.

SOURCE CODE
import cv2
import mediapipe as mp
mp_face_detection = mp.solutions.face_detection
mp_drawing = mp.solutions.drawing_utils

# For static images:
IMAGE_FILES = []
with mp_face_detection.FaceDetection(
    model_selection=1, min_detection_confidence=0.5) as face_detection:
  for idx, file in enumerate(IMAGE_FILES):
    image = cv2.imread(file)
    # Convert the BGR image to RGB and process it with MediaPipe Face Detection.
    results = face_detection.process(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))

    # Draw face detections of each face.
    if not results.detections:
      continue
    annotated_image = image.copy()
    for detection in results.detections:
      print('Nose tip:')
      print(mp_face_detection.get_key_point(
          detection, mp_face_detection.FaceKeyPoint.NOSE_TIP))
      
mp_drawing.draw_detection(annotated_image, detection)
    cv2.imwrite('/tmp/annotated_image' + str(idx) + '.png', annotated_image)

# For webcam input:
cap = cv2.VideoCapture(0)
with mp_face_detection.FaceDetection(
    model_selection=0, min_detection_confidence=0.5) as face_detection:
  while cap.isOpened():
    success, image = cap.read()
    if not success:
      print(""Ignoring empty camera frame."")
      
      continue

    # To improve performance, optionally mark the image as not writeable to
    # pass by reference.
    image.flags.writeable = False
    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    results = face_detection.process(image)

    # Draw the face detection annotations on the image.
    image.flags.writeable = True
    image = cv2.cvtColor(image, cv2.COLOR_RGB2BGR)
    if results.detections:
      for detection in results.detections:
       
 mp_drawing.draw_detection(image, detection)
    
# Flip the image horizontally for a selfie-view display.
    cv2.imshow('MediaPipe Face Detection', cv2.flip(image, 1))
    if cv2.waitKey(5) & 0xFF == 27:
      break
cap.release()



PROGRAM NO – 10
AIM: Write a program for Text Classification for the given sentence using NTLK Library.

SOURCE CODE
import nltk
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
from nltk.stem import WordNetLemmatizer
from nltk import NaiveBayesClassifier
from nltk.classify import accuracy

# Sample training data
training_data = [
    (""I love this sandwich."", ""positive""),
    (""This is an amazing place!"", ""positive""),
    (""I feel very good about these beers."", ""positive""),
    (""This is my best work."", ""positive""),
    (""What an awesome view"", ""positive""),
    (""I do not like this restaurant"", ""negative""),
    (""I am tired of this stuff."", ""negative""),
    (""I can't deal with this"", ""negative""),
    (""He is my sworn enemy!"", ""negative""),
    (""My boss is horrible."", ""negative"")
]
# Preprocessing function


def preprocess(text):
    lemmatizer = WordNetLemmatizer()
    stop_words = set(stopwords.words('english'))
    words = word_tokenize(text.lower())
    filtered_words = [lemmatizer.lemmatize(w) for w in words if w.isalnum() and w not in stop_words]
    return dict([(word, True) for word in filtered_words])

# Preprocess and label the training data
processed_training_data = [(preprocess(text), label) for text, label in training_data]

# Train the Naive Bayes classifier
classifier = NaiveBayesClassifier.train(processed_training_data)

# Test sentence
test_sentence = ""This sandwich is not good.""

# Preprocess the test sentence
processed_test_sentence = preprocess(test_sentence)

# Classify the test sentence
classification = classifier.classify(processed_test_sentence)

print(""Test Sentence:"", test_sentence)
print(""Classification:"", classification)


"
qS0S1vKz,"""Display Readings"" rev_01",pleasedontcode,Arduino,Tuesday 21st of May 2024 12:09:58 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Display Readings""
	- Source Code NOT compiled for: Arduino Nano
	- Source Code created on: 2024-05-21 17:08:26

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Monitor and display temperature and humidity data */
	/* using a DHT11 sensor connected to an Arduino. The */
	/* sensor is connected to digital pin 2 (D2). The */
	/* system should initialize the sensor and read data */
	/* continuously. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <DHT.h>  //https://github.com/adafruit/DHT-sensor-library
#include <LiquidCrystal_I2C.h>  //https://github.com/marcoschwartz/LiquidCrystal_I2C

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t TempSensor_DHT11_DOUT_PIN_D2 = 2;  // DHT11 sensor connected to digital pin 2 (D2)

/***** DEFINITION OF I2C PINS *****/
const uint8_t myDisplay_LCD1602I2C_I2C_PIN_SDA_A4 = A4;  // I2C SDA pin
const uint8_t myDisplay_LCD1602I2C_I2C_PIN_SCL_A5 = A5;  // I2C SCL pin
const uint8_t myDisplay_LCD1602I2C_I2C_SLAVE_ADDRESS = 0x27;  // I2C address for the LCD

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
DHT dht(TempSensor_DHT11_DOUT_PIN_D2, DHT11);  // Initialize DHT sensor for DHT11
LiquidCrystal_I2C lcd(myDisplay_LCD1602I2C_I2C_SLAVE_ADDRESS, 16, 2);  // Initialize LCD with address 0x27 for 16 chars and 2 lines

void setup(void)
{
  // Initialize serial communication at 9600 bits per second
  Serial.begin(9600);
  Serial.println(F(""DHTxx test!""));

  // Set the DHT11 sensor pin as input with pull-up resistor
  pinMode(TempSensor_DHT11_DOUT_PIN_D2, INPUT_PULLUP);
  dht.begin();  // Initialize the DHT sensor

  // Initialize the LCD
  lcd.init();  
  lcd.backlight();  // Turn on the backlight
}

void loop(void)
{
  // Wait a few seconds between measurements
  delay(2000);

  // Reading temperature or humidity takes about 250 milliseconds!
  float h = dht.readHumidity();  // Read humidity
  float t = dht.readTemperature();  // Read temperature in Celsius
  float f = dht.readTemperature(true);  // Read temperature in Fahrenheit

  // Check if any reads failed and exit early (to try again)
  if (isnan(h) || isnan(t) || isnan(f)) {
    Serial.println(F(""Failed to read from DHT sensor!""));
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print(""Sensor error!"");
    return;
  }

  // Compute heat index in Fahrenheit and Celsius
  float hif = dht.computeHeatIndex(f, h);
  float hic = dht.computeHeatIndex(t, h, false);

  // Print the results to the Serial Monitor
  Serial.print(F(""Humidity: ""));
  Serial.print(h);
  Serial.print(F(""%  Temperature: ""));
  Serial.print(t);
  Serial.print(F(""°C ""));
  Serial.print(f);
  Serial.print(F(""°F  Heat index: ""));
  Serial.print(hic);
  Serial.print(F(""°C ""));
  Serial.print(hif);
  Serial.println(F(""°F""));

  // Display the results on the LCD
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print(""Humidity: "");
  lcd.print(h);
  lcd.print(""%"");
  lcd.setCursor(0, 1);
  lcd.print(""Temp: "");
  lcd.print(t);
  lcd.print(""C "");
  lcd.print(f);
  lcd.print(""F"");
}

/* END CODE */"
G6E8NqeW,Untitled,Josif_tepe,C++,Tuesday 21st of May 2024 12:07:59 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    int n;
    cin >> n;

    int i = n, cifra, zbir = 0;
    while(i > 0) 
    {
        cifra = i % 10;
        i /= 10;
        zbir += cifra;
    }    
    cout << zbir << endl;
    return 0;
}
"
aBvrKn7n,Untitled,rado_dimitrov66,C++,Tuesday 21st of May 2024 12:00:49 PM CDT,"#include <iostream>
using namespace std;

struct Node {
    int key;
    Node* left;
    Node* right;
} *root = NULL; // Външен указател

// Функция за създаване на нов възел
Node* createNode(int key) {
    Node* newNode = new Node();
    newNode->key = key;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}

// Функция за добавяне на нов възел в дървото
Node* insertNode(Node* root, int key) {
    if (root == NULL) {
        return createNode(key);
    }

    if (key < root->key) {
        root->left = insertNode(root->left, key);
    } else {
        root->right = insertNode(root->right, key);
    }
    return root;
}

// Функция за намиране на минималния възел в дясното поддърво
Node* findMin(Node* root) {
    while (root->left != NULL) {
        root = root->left;
    }
    return root;
}

// Функция за изтриване на възел от дървото
Node* deleteNode(Node* root, int key) {
    if (root == NULL) {
        return root;
    }

    if (key < root->key) {
        root->left = deleteNode(root->left, key);
    } else if (key > root->key) {
        root->right = deleteNode(root->right, key);
    } else {
        // Възел с един наследник или без наследници
        if (root->left == NULL) {
            Node* temp = root->right;
            delete root;
            return temp;
        } else if (root->right == NULL) {
            Node* temp = root->left;
            delete root;
            return temp;
        }

        // Възел с два наследника
        Node* temp = findMin(root->right);
        root->key = temp->key;
        root->right = deleteNode(root->right, temp->key);
    }
    return root;
}

// Функция за принтиране на дървото (in-order)
void inorderPrint(Node* root) {
    if (root != NULL) {
        inorderPrint(root->left);
        cout << root->key << "" "";
        inorderPrint(root->right);
    }
}

// Функция за преброяване на възлите с по един наследник
int countNodesWithOneChild(Node* root) {
    if (root == NULL) {
        return 0;
    }

    int count = 0;
    if ((root->left == NULL && root->right != NULL) || (root->left != NULL && root->right == NULL)) {
        count = 1;
    }

    return count + countNodesWithOneChild(root->left) + countNodesWithOneChild(root->right);
}

// Основно меню
void menu() {
    int choice, key;

    while (true) {
        cout << ""\nМеню:\n"";
        cout << ""1. Добавяне на елемент\n"";
        cout << ""2. Изтриване на елемент\n"";
        cout << ""3. Принтиране на всички елементи\n"";
        cout << ""4. Преброяване на възлите с по един наследник\n"";
        cout << ""5. Изход\n"";
        cout << ""Вашият избор: "";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << ""Въведете ключ за добавяне: "";
                cin >> key;
                root = insertNode(root, key);
                break;
            case 2:
                cout << ""Въведете ключ за изтриване: "";
                cin >> key;
                root = deleteNode(root, key);
                break;
            case 3:
                cout << ""Елементите на дървото са: "";
                inorderPrint(root);
                cout << endl;
                break;
            case 4:
                cout << ""Броят на възлите с по един наследник е: "" << countNodesWithOneChild(root) << endl;
                break;
            case 5:
                return;
            default:
                cout << ""Невалиден избор. Опитайте отново.\n"";
        }
    }
}

int main() {
    menu();
    return 0;
}
"
xhuVHy83,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Tuesday 21st of May 2024 12:00:25 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_865434.pdf

Working as of:
21 May 2024"
X52ffxQJ,python_geom_unused,zergon321,Python,Tuesday 21st of May 2024 11:47:31 AM CDT,"def mesh_uv_vertices_correspondance_single(object, uv_vertices):
    mesh_uv = {}

    for uv_vertex in uv_vertices:
        mesh_vertex_index = object.data.loops[uv_vertex[0]].vertex_index
        mesh_uv[mesh_vertex_index] = uv_vertex
    
    return mesh_uv

def mesh_uv_vertices_correspondance_multiple(object, uv_vertices):
    mesh_uvs = {}

    for uv_vertex in uv_vertices:
        vertex_index = object.data.loops[uv_vertex[0]].vertex_index

        if vertex_index in mesh_uvs:
            mesh_uvs[vertex_index].append(uv_vertex)
        else:
            mesh_uvs[vertex_index] = [uv_vertex]
    
    return mesh_uvs"
zRKbpxkU,Untitled,LA_,PHP,Tuesday 21st of May 2024 11:39:04 AM CDT,"<?php


namespace SimpleUI;

use pocketmine\player\Player;
use pocketmine\plugin\PluginBase;

use pocketmine\command\CommandSender;
use pocketmine\command\Command;

use jojoe77777\FormAPI;
use jojoe77777\formapi\SimpleForm;


class Main extends PluginBase{

public function onEnable():void{

    }


    public function onCommand(CommandSender $sender, Command $command, string $label, array $args):bool{

        if($command->getName() == ""ui""){
            if($sender instanceof Player){
                $this->onSimpleForm($sender);
            }
        }
        return true;
    }

    public function onSimpleForm(Player $player):void{
        $form = new SimpleForm(function (Player $player, $data) {
            if(!isset($data)){
                return;
            } 

            switch ($data){
                case 0:
                    $inv = $player->getInventory();
                    $inv->setItem(0, VanillaItems::DIAMOND()->setCount(30));
                    $player->sendMessage(""Now you have diamonds in your inventory"");
                    break;
                case 1:
                    $inv = $player->getInventory();
                    $inv->setItem(1, VanillaItems::BLEACH()->setCount(30));
                    $player->sendMessage(""Now you have bleach in your inventory"");
                    break;

            }

        });
        $form->setTitle(""Simple Form"");
        $form->setContent(""Test"");
        $form->addButton(""Diamond"");
        $form->addButton(""Cancel"");
        $player->sendForm($form);
}
}"
puknDQp0,Untitled,irmantas_radavicius,C++,Tuesday 21st of May 2024 11:23:05 AM CDT,"#include <iostream>
#include <fstream>
#include <string>
#include <sstream>
#include <ctime>
#include <vector>
#include <cstdlib>
#include <cstring>
#include <cstdio>

using namespace std;

struct Slaptazodis {
    char s[16];
    int ilgis;
    int didz;
    int maz;
    int skait;
    int spec;
    char stipr[10];
};

Slaptazodis gauti(const char eil[], int ilgis){
    Slaptazodis s;
    memset(s.s, ' ', 15);
    strncpy(s.s, eil, 15);
    memset(s.stipr, ' ', 9);
    sscanf(eil+15, ""%d%d%d%d%d%*c%s"", &s.ilgis, &s.didz, &s.maz, &s.skait, &s.spec, s.stipr);
    memset(s.stipr+strlen(s.stipr), ' ', 9-strlen(s.stipr));
    return s;
}


int nustatytiPanasuma(Slaptazodis n, Slaptazodis v){
    int x = 0;
    x += abs(n.ilgis - v.ilgis);
    x += abs(n.didz - v.didz);
    x += abs(n.maz - v.maz);
    x += abs(n.skait - v.skait);
    x += abs(n.spec - v.spec);
    return x;
}

void surikiuoti(Slaptazodis s[], int dydis){
    for(int i = 0; i < dydis; i++){
        for(int j = 0; j < dydis-1; j++){
            if(s[j].ilgis < s[j+1].ilgis){
                Slaptazodis temp = s[j];
                s[j] = s[j+1];
                s[j+1] = temp;
            }
        }
    }

}

int main(){

    ofstream out(""U2rez.txt"");

    Slaptazodis naud[5], vaid[25];

    ifstream in(""U1.txt"");

    int kiekN, kiekV;
    in >> kiekN >> kiekV;

    string line;
    getline(in, line);

    for(int i = 0; i < kiekN; ++i){
        getline(in, line);
        Slaptazodis s = gauti(line.c_str(), line.size());
        //spausdinti(s);
        naud[i] = s;
    }

    for(int i = 0; i < kiekV; ++i){
        getline(in, line);
        Slaptazodis s = gauti(line.c_str(), line.size());
        //spausdinti(s);
        vaid[i] = s;
    }

    for(int i = 0; i < kiekV; ++i){
        //spausdinti(vaid[i]);
    }
    //cout << endl << endl;
    surikiuoti(vaid, kiekV);
    for(int i = 0; i < kiekV; ++i){
        //spausdinti(vaid[i]);
    }


    //spausdinti(naud[0]);
    //spausdinti(vaid[2]);
    //cout << nustatytiPanasuma(naud[0], vaid[2]);

    for(int i = 0; i < kiekN; ++i){
        Slaptazodis n = naud[i];
        out << n.s;
        int minPan = 9999999;
        string str = """";
        for(int ii = 0; ii < kiekV; ++ii){
            int pan = nustatytiPanasuma(n, vaid[ii]);
            if(pan < minPan){
                minPan = pan;
                str = vaid[ii].stipr;
            }
        }
        out << str << "" "" << minPan << endl;

        for(int ii = 0; ii < kiekV; ++ii){
            int pan = nustatytiPanasuma(n, vaid[ii]);
            if(pan == minPan){
                out << vaid[ii].s << endl;
            }

        }

    }


    in.close();
    out.close();
    return 0;
}
"
Au2CCfFS,Untitled,Knogle,Bash,Tuesday 21st of May 2024 11:20:54 AM CDT," chairman  ~  sudo btrfs check --readonly --force /dev/disk/by-uuid/0841a95d-ffa9-42b4-b62c-418b9801ac58
[sudo] password for chairman: 
Opening filesystem to check...
WARNING: filesystem mounted, continuing because of --force
Checking filesystem on /dev/disk/by-uuid/0841a95d-ffa9-42b4-b62c-418b9801ac58
UUID: 0841a95d-ffa9-42b4-b62c-418b9801ac58
[1/7] checking root items
[2/7] checking extents
checksum verify failed on 2897966333952 wanted 0xec63fc2d found 0xed0ea5d8
checksum verify failed on 2897966333952 wanted 0xf0f71c7f found 0x5b85cfe6
checksum verify failed on 2897966333952 wanted 0xec63fc2d found 0xed0ea5d8
bad tree block 2897966333952, bytenr mismatch, want=2897966333952, have=8501998792390856779
ERROR: errors found in extent allocation tree or chunk allocation
[3/7] checking free space tree
[4/7] checking fs roots
checksum verify failed on 2897966333952 wanted 0xec63fc2d found 0xed0ea5d8
checksum verify failed on 2897966333952 wanted 0xf0f71c7f found 0x5b85cfe6
checksum verify failed on 2897966333952 wanted 0xec63fc2d found 0xed0ea5d8
bad tree block 2897966333952, bytenr mismatch, want=2897966333952, have=8501998792390856779
checksum verify failed on 2897006690304 wanted 0x33b2ed1d found 0x5acb7b59
checksum verify failed on 2897006690304 wanted 0xb65f714a found 0xb4ba849e
checksum verify failed on 2897006690304 wanted 0x33b2ed1d found 0x5acb7b59
bad tree block 2897006690304, bytenr mismatch, want=2897006690304, have=6563265706747242742
ERROR: errors found in fs roots
found 3196264169472 bytes used, error(s) found
total csum bytes: 3076832380
total tree bytes: 8264056832
total fs tree bytes: 3693740032
total extent tree bytes: 862535680
btree space waste bytes: 1437880625
file data blocks allocated: 17139004248064
 referenced 3233415860224
"
geWqz9cB,full,vip-fran,Lua,Tuesday 21st of May 2024 11:16:57 AM CDT,"if gg.getTargetInfo().processName ~= 'com.dts.freefireth' then gg.alert('❌Selecione El Proceso De Free Fire❌','🔙Salir🔙') os.exit(print('❤️Subscríbete A Fran•Hacker™❤️')) end
if gg.getTargetInfo().versionCode ~= '2019117295' then gg.alert('⚠️Su Versión Es De 64 Bits⚠️\n\n❌Script No Compatible Con Esta Versión❌ \n\n🐢Tienes Que Instalar La Versión De 32 Bits🐢','🔙Salir🔙') os.exit(print('❤️Subscríbete A Fran•Hacker™❤️')) end
gg.setVisible(false) gg.alert('🔥Script Full🔥','❤️Happy Game❤️') memFrom, memTo, lib, num, lim, results, src, ok = 0, -1, nil, 0, 32, {}, nil, false function name(n) if lib ~= n then lib = n ranges = gg.getRangesList(lib) if #ranges == 0 then os.exit() else memFrom = ranges[1].start memTo = ranges[#ranges]['end'] end end end function hex2tbl(hex) ret = {} hex:gsub('%S%S', function (ch) ret[#ret + 1] = ch return '' end) return ret end function original(orig) tbl = hex2tbl(orig) len = #tbl if len == 0 then return end used = len if len > lim then used = lim end s = '' for i = 1, used do if i ~= 1 then s = s..';' end v = tbl[i] if v == '??' or v == '**' then v = '0~~0' end s = s..v..'r' end s = s..'::'..used gg.searchNumber(s, 1, false, gg.SIGN_EQUAL, memFrom, memTo) if len > used then for i = used + 1, len do v = tbl[i] if v == '??' or v == '**' then v = 256 else v = ('0x'..v) + 0 if v > 127 then v = v - 256 end end tbl[i] = v end end found = gg.getResultCount(); results = {} count = 0 checked = 0 while true do if checked >= found then break end all = gg.getResults(8) total = #all start = checked if checked + used > total then break end for i, v in ipairs(all) do v.address = v.address + of end gg.loadResults(all) while start < total do good = true of = all[1 + start].address - 1 if used < len then get = {} for i = lim + 1, len do get[i - lim] = {address = of + i, flags = 1, value = 0} end get = gg.getValues(get) for i = lim + 1, len do ch = tbl[i] if ch ~= 256 and get[i - lim].value ~= ch then good = false break end end end if good then count = count + 1 results[count] = of checked = checked + used else del = {} for i = 1, used do del[i] = all[i + start] end gg.removeResults(del) end start = start + used end end end function replaced(repl) num = num + 1 tbl = hex2tbl(repl) if src ~= nil then source = hex2tbl(src) for i, v in ipairs(tbl) do if v ~= '??' and v ~= '**' and v == source[i] then tbl[i] = '**' end end src = nil end cnt = #tbl set = {} s = 0 for _, addr in ipairs(results) do for i, v in ipairs(tbl) do if v ~= '??' and v ~= '**' then s = s + 1 set[s] = { ['address'] = addr + i,  ['value'] = v..'r', ['flags'] = 1,} end end end if s ~= 0 then gg.setValues(set) end ok = true end
gg.setVisible(true) 
function script()
menuprincipal = gg.choice({
invisibl..'',
paracaida..'',
'MENU ANTENAS📡📶',
'MENU ARMAS🔫☢️',
'MENU MAPA🌍🗺️',
'MENU PERSONAJES👥🙋',
'MENU ESCONDERSE🙈👁️‍🗨️',
'MENU VEHÍCULO🚘',
'MENU CÁMARA📸🤳',
'BORRAR CUENTA🗑️🚮✅ ',
'DESACTIVAR BORRAR CUENTA🗑️🚮❌ ',
'CERRAR SCRIPT👋🤑'
},nil,'⭐SCRIPT VIP PREMIUM⭐\n🇪🇦CREADOR: FRAN•HACKER™🇪🇦\n▶️YOUTUBE: FRAN•HACKER™▶️')
if menuprincipal == nil then gg.toast('❤️SUBSCRÍBETE A FRAN•HACKER™❤️') else
if menuprincipal == 1 then invisible() end
if menuprincipal == 2 then paracaidas() end
if menuprincipal == 3 then menugps() end
if menuprincipal == 4 then menuarmas() end
if menuprincipal == 5 then menumapa() end
if menuprincipal == 6 then menupersonajes() end
if menuprincipal == 7 then menuesconderse() end
if menuprincipal == 8 then menuvehiculo() end
if menuprincipal == 9 then menucamara() end
if menuprincipal == 10 then borrarcuenta() end
if menuprincipal == 11 then desactivarborrarcuenta() end
if menuprincipal == 12 then gg.setVisible(true) os.exit(print('❤️SUBSCRÍBETE A FRAN•HACKER™❤️')) end
end end
invisibl = 'ACTIVAR MODO FANTASMA👻✅ '
function invisible()
if invisibl == 'ACTIVAR MODO FANTASMA👻✅ ' then
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x1b3f924
original('7F 45 4C 46 01 01 01 00')
replaced('00 00 A0 E3 1E FF 2F E1')
gg.clearResults()
gg.toast('ACTIVAR MODO FANTASMA👻✅')
invisibl = 'DESACTIVAR MODO FANTASMA👻❌'
elseif invisibl == 'DESACTIVAR MODO FANTASMA👻❌' then
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x1b3f924
original('7F 45 4C 46 01 01 01 00')
replaced('F0 4F 2D E9 1C B0 8D E2')
gg.clearResults()
gg.toast('DESACTIVAR MODO FANTASMA👻❌')
invisibl = 'ACTIVAR MODO FANTASMA👻✅ '
end end
paracaida = 'ACTIVAR NO PARACAÍDAS ☂️✅'
function paracaidas()
if paracaida == 'ACTIVAR NO PARACAÍDAS ☂️✅' then
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x10aece4
original('7F 45 4C 46 01 01 01 00')
replaced('00 00 A0 E3 1E FF 2F E1')
gg.clearResults()
gg.toast('ACTIVAR NO PARACAÍDAS ☂️✅')
paracaida = 'DESACTIVAR NO PARACAÍDAS ☂️❌'
elseif paracaida == 'DESACTIVAR NO PARACAÍDAS ☂️❌' then
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x10aece4
original('7F 45 4C 46 01 01 01 00')
replaced('30 48 2D E9 08 B0 8D E2')
gg.clearResults()
gg.toast('DESACTIVAR NO PARACAÍDAS ☂️❌')
paracaida = 'ACTIVAR NO PARACAÍDAS ☂️✅'
end end
function menugps()
gps = gg.multiChoice({
'ANTENA CABEZA📡📶💆(LOGIN)',
'ANTENA CUELLO📡📶🧣(LOGIN)',
'ANTENA HOMBRO📡📶🤷💪(LOGIN)',
'ANTENA MANO📡📶✋(LOGIN)',
'ANTENA DEDO📡📶☝️(LOGIN)',
'ANTENA PIE📡📶👣(LOGIN)',
'REGRESAR🔙'
})
if gps == nil then gg.toast('❤️SUBSCRÍBETE A FRAN•HACKER™❤️') else
if gps [1] then gpscabeza() end
if gps [2] then gpscuello() end
if gps [3] then gpshombro() end
if gps [4] then gpsmano() end
if gps [5] then gpsdedo() end
if gps [6] then gpspie() end
if gps [7] then gg.setVisible(true) end
end end
function gpscabeza()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('5.9762459e-7;1::5 ', gg.TYPE_FLOAT)
gg.refineNumber('1', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('3000', gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber('7.5538861e-7;1::5', gg.TYPE_FLOAT)
gg.refineNumber('1', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('3000', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('ANTENA CABEZA📡📶💆(LOGIN)')
end
function gpscuello()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('7.15025408e-8;1::5', gg.TYPE_FLOAT)
gg.refineNumber('1', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('3000', gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber('3.93490495e-7;1::5', gg.TYPE_FLOAT)
gg.refineNumber('1', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('3000', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('ANTENA CUELLO📡📶🧣(LOGIN)')
end
function gpshombro()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('-0.30576485395;0.01430506539;-0.73534429073;1::13', gg.TYPE_FLOAT)
gg.refineNumber('1', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('3000', gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber('-0.2212036103;0.03038031235;-0.76885718107;1::13', gg.TYPE_FLOAT)
gg.refineNumber('1', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('3000', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('ANTENA HOMBRO📡📶🤷💪(LOGIN)')
end
function gpsmano()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('-0.02980032004;1;0.48141112924::9', gg.TYPE_FLOAT)
gg.refineNumber('1', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('3000', gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber('0.09043131769;1;0.14753369987::9', gg.TYPE_FLOAT)
gg.refineNumber('1', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('3000', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('ANTENA MANO📡📶✋(LOGIN)')
end
function gpsdedo()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('1;3.2404066e-7::5', gg.TYPE_FLOAT)
gg.refineNumber('1', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('3000', gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber('-0.39830258489;1;0.5870424509::9', gg.TYPE_FLOAT)
gg.refineNumber('1', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('3000', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('ANTENA DEDO📡📶☝️(LOGIN)')
end
function gpspie()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('0.02564372122;0.10784503818;1.0;-0.11345791817;0.07249621302::17', gg.TYPE_FLOAT)
gg.refineNumber('1', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('1000000', gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber('0.0959668979;1;-0.0812920332;0.0119578382::13', gg.TYPE_FLOAT)
gg.refineNumber('1', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('3000', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('ANTENA PIE📡📶👣(LOGIN)')
end
function menuarmas()
armas = gg.multiChoice({
'NO RECOIL O NO RETROCESO (LAS BALAS NO SE DISPERSAN)🔫🎯 ',
'BALAS MÁGICAS (AUMENTO DE LA HITBOX)🔫🎯 ',
'REGEDIT 55 ""LA MIRA SUBE Y BAJA🔫😀(LOGIN)',
'REGEDIT 65 ""LA MIRA SUBE Y BAJA🔫🥴(LOGIN)',
'REGEDIT 80 ""LA MIRA SUBE Y BAJA🔫🤤(LOGIN)',
'REGEDIT 90 ""LA MIRA SUBE Y BAJA🔫🤯(LOGIN)',
'REGEDIT 100 ""LA MIRA SUBE Y BAJA🔫☠️(LOGIN)',
'SENSIBILIDAD (AUMENTA LA SENSIBILIDAD DEL TOUCH x2)✍️🆙 ',
'SENSIBILIDAD (AUMENTA LA SENSIBILIDAD DEL TOUCH x5)✍️🆙 ',
'SENSIBILIDAD (AUMENTA LA SENSIBILIDAD DEL TOUCH x10)✍️🆙 ',
'SEMIAIMBOT (DESTRUCCIÓN DE GLOO CON LOS PUÑOS)👊❄️ ',
'AIMBOT MIRA ""AUTO APUNTADO AL DISPARA CON LA MIRA🎯🔎(LOGIN) ',
'AIMLOCK DISPARO (MIRA BLOQUEADA EN EL PECHO)🎯❌🤱 ',
'FAMAS Y SMG HACK (UTILIZAR SOLO CON FAMAS Y SMG)✅🔫🐆 ',
'DESACTIVAR FAMAS Y SMG HACK❌🔫🐆 ',
'REMOVER MIRAS (QUITAR LA MIRAS X2 Y X4 Y X8)🔎❌ ',
'LIBERTAD DISPARANDO (PUEDES DISPARAR MIENTRAS TE MUEVES)🔫🏃 ',
'AIMBOT FULL♻️🔫🔥 (EN PARTIDA)',
'REGRESAR🔙'
})
if armas == nil then gg.toast('❤️SUBSCRÍBETE A FRAN•HACKER™❤️') else
if armas [1] then balasrectas() end
if armas [2] then balasnofallan() end
if armas [3] then tiroalacabeza55() end
if armas [4] then tiroalacabeza65() end
if armas [5] then tiroalacabeza80() end
if armas [6] then tiroalacabeza90() end
if armas [7] then tiroalacabeza100() end
if armas [8] then sensibilidadx2() end
if armas [9] then sensibilidadx5() end
if armas [10] then sensibilidadx10() end
if armas [11] then semiaimbot() end
if armas [12] then aimbotmira() end
if armas [13] then aimlockdisparo() end
if armas [14] then famashack() end
if armas [15] then famashackoff() end
if armas [16] then removermiras() end
if armas [17] then libertaddisparando() end
if armas [18] then aimbotfull() end
if armas [19] then gg.setVisible(true) end
end end
function balasrectas()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber('-7.1608877e24;1000;-1.30930378e25::9', gg.TYPE_FLOAT)
gg.refineNumber('1000', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('0', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('NO RECOIL O NO RETROCESO (LAS BALAS NO SE DISPERSAN)🔫🎯')
end
function balasnofallan()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber('0.00001;-1.30928164e25;-3.69511377e20::9', gg.TYPE_FLOAT)
gg.refineNumber('0.00001', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('1', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('BALAS MÁGICAS (AUMENTO DE LA HITBOX)🔫🎯')
end
function tiroalacabeza55()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('0.6;0.6;1;3D;10;20;1D;2D::53', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('0.6;0.6;1;3D;55;55;1D;2D', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('REGEDIT 55 ""LA MIRA SUBE Y BAJA🔫😀(LOGIN)')
end
function tiroalacabeza65()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('0.6;0.6;1;3D;10;20;1D;2D::53', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('0.6;0.6;1;3D;65;65;1D;2D', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('REGEDIT 65 ""LA MIRA SUBE Y BAJA🔫🥴(LOGIN)')
end
function tiroalacabeza80()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('0.6;0.6;1;3D;10;20;1D;2D::53', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('0.6;0.6;1;3D;80;80;1D;2D', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('REGEDIT 80 ""LA MIRA SUBE Y BAJA🔫🤤(LOGIN)')
end
function tiroalacabeza90()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('0.6;0.6;1;3D;10;20;1D;2D::53', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('0.6;0.6;1;3D;90;90;1D;2D', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('REGEDIT 90 ""LA MIRA SUBE Y BAJA🔫🤯(LOGIN)')
end
function tiroalacabeza100()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('15;35;10;20::13', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('25;45;60;80', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('REGEDIT 100 ""LA MIRA SUBE Y BAJA🔫☠️(LOGIN)')
end
function sensibilidadx2()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber('300', gg.TYPE_FLOAT)
gg.getResults(1)
gg.editAll('180', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('SENSIBILIDAD (AUMENTA LA SENSIBILIDAD DEL TOUCH x2)✍️🆙')
end
function sensibilidadx5()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber('300', gg.TYPE_FLOAT)
gg.getResults(1)
gg.editAll('100', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('SENSIBILIDAD (AUMENTA LA SENSIBILIDAD DEL TOUCH x5)✍️🆙')
end
function sensibilidadx10()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber('300', gg.TYPE_FLOAT)
gg.getResults(1)
gg.editAll('50', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('SENSIBILIDAD (AUMENTA LA SENSIBILIDAD DEL TOUCH x10)✍️🆙')
end
function semiaimbot()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x16b58c0
original('7F 45 4C 46 01 01 01 00')
replaced('FF 0F 46 E3 1E FF 2F E1')
gg.clearResults()
gg.toast('SEMIAIMBOT (DESTRUCCIÓN DE GLOO CON LOS PUÑOS)👊❄️')
end
function aimbotmira()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('1075000115;1065353216::9', gg.TYPE_DWORD)
gg.getResults(gg.getResultsCount())
gg.editAll('-10;981668463', gg.TYPE_DWORD)
gg.clearResults()
gg.toast('AIMBOT MIRA ""AUTO APUNTADO AL DISPARA CON LA MIRA🎯🔎(LOGIN)')
end
function aimlockdisparo()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x16e2304
original('7F 45 4C 46 01 01 01 00')
replaced('32 00 A0 E3 1E FF 2F E1')
gg.clearResults()
gg.toast('AIMLOCK DISPARO (MIRA BLOQUEADA EN EL PECHO)🎯❌🤱')
end
function famashack()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x16b8be0
original('7F 45 4C 46 01 01 01 00')
replaced('00 00 A0 E3 1E FF 2F E1')
gg.clearResults()
gg.toast('FAMAS Y SMG HACK (UTILIZAR SOLO CON FAMAS Y SMG)✅🔫🐆')
end
function famashackoff()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x16b8be0
original('7F 45 4C 46 01 01 01 00')
replaced('F0 4D 2D E9 18 B0 8D E2')
gg.clearResults()
gg.toast('DESACTIVAR FAMAS Y SMG HACK❌🔫🐆')
end
function removermiras()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x10f4f90
original('7F 45 4C 46 01 01 01 00')
replaced('00 00 A0 E3 1E FF 2F E1')
gg.clearResults()
gg.toast('REMOVER MIRAS (QUITAR LA MIRAS X2 Y X4 Y X8)🔎❌')
end
function libertaddisparando()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x108ec88
original('7F 45 4C 46 01 01 01 00')
replaced('01 00 A0 E3 1E FF 2F E1')
gg.clearResults()
gg.toast('LIBERTAD DISPARANDO (PUEDES DISPARAR MIENTRAS TE MUEVES)🔫🏃')
end
function aimbotfull()
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber('4,629,700,418,046,263,296', gg.TYPE_QWORD) 
gg.getResults(1000) 
gg.editAll('-95,441,653,858,304', gg.TYPE_QWORD) 
gg.clearResults() 
end
function menumapa()
mapa = gg.multiChoice({
'CIELO NEGRO (ACTIVA EL MODO NOCHE)🌑🌃 ',
'QUITAR HIERBAS (QUITA EL PASTO DEL PISO)🏜️🌿❌ ',
'QUITAR ÁRBOLES LEJANOS (LA DISTANCIA DE DIBUJADO DE LOS ÁRBOLES DISMINUYE)🌴🌳🌲❌ ',
'REGRESAR🔙'
})
if mapa == nil then gg.toast('❤️SUBSCRÍBETE A FRAN•HACKER™❤️') else
if mapa [1] then cielonegro() end
if mapa [2] then quitarhierbas() end
if mapa [3] then quitararboleslejanos() end
if mapa [4] then gg.setVisible(true) end
end end
function cielonegro()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber('0.99;0.57735025883;1e-6::13', gg.TYPE_FLOAT)
gg.refineNumber('1e-6', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('-1', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('CIELO NEGRO (ACTIVA EL MODO NOCHE)🌑🌃')
end
function quitarhierbas()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x4db9244
original('7F 45 4C 46 01 01 01 00')
replaced('00 00 A0 E3 1E FF 2F E1')
gg.clearResults()
gg.toast('QUITAR HIERBAS (QUITA EL PASTO DEL PISO)🏜️🌿❌')
end
function quitararboleslejanos()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x4dbfbe4
original('7F 45 4C 46 01 01 01 00')
replaced('00 00 A0 E3 1E FF 2F E1')
gg.clearResults()
gg.toast('QUITAR ÁRBOLES LEJANOS (LA DISTANCIA DE DIBUJADO DE LOS ÁRBOLES DISMINUYE)🌴🌳🌲❌')
end
function menupersonajes()
personaje = gg.multiChoice({
'CUERPOS BLANCOS (LA TEXTURA DE LA SKIN ES FULL BLANCO)🧍🏻⚪ ',
'CUERPOS NEGROS (LA TEXTURA DE LA SKIN ES FULL NEGRA)⬛🧍🏿',
'CABEZA GRANDE ""LA CABEZA AUMENTA Y AYUDA A LA HITBOX A PEGAR ROJIZA"" 🤕☢️💀(LOGIN)',
'MODO T POSE (LOS PERSONAJES ESTAN TIESO Y AYUDA A PEGAR ROJOS) 😵👹💯 ',
'CORRER RÁPIDO (ACTIVA EL MODO CUCHAU)🏃🏻🐆 ',
'BOTIQUÍN RÁPIDO (MAXIM PREMIUM)❤️‍🩹🤑 ',
'SUPER VELOCIDAD CON JOYSTICK ⚡🔥',
'REGRESAR🔙'
})
if personaje == nil then gg.toast('❤️SUBSCRÍBETE A FRAN•HACKER™❤️') else
if personaje [1] then cuerposblancos() end
if personaje [2] then cuerposnegro() end
if personaje [3] then cabezagrande() end
if personaje [4] then jugadorestiesos() end
if personaje [5] then correrrapido() end
if personaje [6] then botiquinrapido() end
if personaje [7] then supervelocidad() end
if personaje [8] then gg.setVisible(true) end
end end
function cuerposblancos()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x442d318
original('7F 45 4C 46 01 01 01 00')
replaced('00 00 A0 E3 1E FF 2F E1')
gg.clearResults()
name('libil2cpp.so')
of = 0x10ae4dc
original('7F 45 4C 46 01 01 01 00')
replaced('00 00 A0 E3 1E FF 2F E1')
gg.clearResults()
gg.toast('CUERPOS BLANCOS (LA TEXTURA DE LA SKIN ES FULL BLANCO)🧍🏻⚪')
end
function cuerposnegro()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x442bf2c
original('7F 45 4C 46 01 01 01 00')
replaced('00 00 A0 E3 1E FF 2F E1')
gg.clearResults()
gg.toast('CUERPOS NEGROS (LA TEXTURA DE LA SKIN ES FULL NEGRA)⬛🧍🏿')
end
function cabezagrande()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('h 62 00 6F 00 6E 00 65 00 5F 00 4C 00 65 00 66 00 74 00 5F 00 57 00 65 00 61 00 70 00 6F 00 6E 00', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h 62 00 6F 00 6E 00 65 00 5F 00 4E 00 65 00 63 00 6B 00', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('h 23 AA A6 B8 46 0A CD 70', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h 23 AA A6 B8 B2 F7 1F A4', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('h 57 27 13 BE C5 26 27 BC 1F 02 81 B3 D6 2D 8B 29 73 4E D6 34 CB 5F 13 BE BA 55 7D 3F 00 00 80 3F 00 00 80 3F 00 00 80 3F', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h EC 51 B8 BD 3B 64 29 BD 1F 02 81 B3 D6 2D 8B 29 73 4E D6 34 CB 5F 13 BE BA 55 7D 3F 72 1C C7 3F 72 1C C7 3F 72 1C C7 3F', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('h 7B D5 FE BD 6B F1 AE BC DA 65 8F B3 38 C2 15 2A 1F CD 04 35 42 A6 36 BE 0D E5 7B 3F 01 00 80 3F 01 00 80 3F 00 00 80 3F', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h EC 51 B8 BD 3B 64 29 BD DA 65 8F B3 38 C2 15 2A 1F CD 04 35 42 A6 36 BE 0D E5 7B 3F 00 00 C0 3F 00 00 C0 3F 00 00 C0 3F', gg.TYPE_BYTE)
gg.clearResults()
gg.toast('CABEZA GRANDE ""LA CABEZA AUMENTA Y AYUDA A LA HITBOX A PEGAR ROJIZA"" 🤕☢️💀(LOGIN)')
end
function jugadorestiesos()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x31e88d4
original('7F 45 4C 46 01 01 01 00')
replaced('00 00 A0 E3 1E FF 2F E1')
gg.clearResults()
gg.toast('MODO T POSE (LOS PERSONAJES ESTAN TIESO Y AYUDA A PEGAR ROJOS) 😵👹💯')
end
function correrrapido()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x15e4448
original('7F 45 4C 46 01 01 01 00')
replaced('B2 0F 43 E3 1E FF 2F E1')
gg.clearResults()
gg.toast('CORRER RÁPIDO (ACTIVA EL MODO CUCHAU)🏃🏻🐆')
end
function botiquinrapido()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x15e6a48
original('7F 45 4C 46 01 01 01 00')
replaced('3F 0F 43 E3 1E FF 2F E1')
gg.clearResults()
gg.toast('BOTIQUÍN RÁPIDO (MAXIM PREMIUM)❤️‍🩹🤑')
end
function supervelocidad()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x115a1f4
original('7F 45 4C 46 01 01 01 00')
replaced('01 00 A0 E3 1E FF 2F E1')
gg.clearResults()
name('libil2cpp.so')
of = 0x5136808
original('7F 45 4C 46 01 01 01 00')
replaced('01 00 A0 E3 1E FF 2F E1')
gg.clearResults()
gg.toast('SUPER VELOCIDAD CON JOYSTICK ⚡🔥')
end
function menuesconderse()
esconderse = gg.multiChoice({
'ATRAVESAR ESTRUCTURAS 3 SEGUNDOS (WALLHACK TEMPORAL)🏢⏱️✅ ',
'ATRAVESAR PIEDRAS (WALLHACK STONE)🗿✅ ',
'ATRAVESAR TIENDA ""WALLHACK SHOP"" (LOGIN)🏪✅ ',
'ATRAVESAR PAQUETE AÉREO ""WALLHACK AIRDROPS"" (LOGIN)📦✅✈️ ',
'REGRESAR🔙'
})
if esconderse == nil then gg.toast('❤️SUBSCRÍBETE A FRAN•HACKER™❤️') else
if esconderse [1] then atravesarestructuras() end
if esconderse [2] then atravesarpiedras() end
if esconderse [3] then atravesartienda() end
if esconderse [4] then atravesarairdrops() end
if esconderse [5] then gg.setVisible(true) end
end end
function atravesarestructuras()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber('-6.11142992e27', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('0', gg.TYPE_FLOAT)
gg.sleep(3500)
gg.editAll('-6.11142992e27', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('ATRAVESAR ESTRUCTURAS 3 SEGUNDOS (WALLHACK TEMPORAL)🏢⏱️✅')
end
function atravesarpiedras()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber('-8388395.5;-8388393.5;-8388387.5::65', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('-1', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('ATRAVESAR PIEDRAS (WALLHACK STONE)🗿✅')
end
function atravesartienda()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('Q ""ingame/assistantitem/ingame_shop""', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('Q ""effects/ff_fx_guide_arrow"" 00 00 00 00 00 00 00 00 00 00 00 00 00 00', gg.TYPE_BYTE)
gg.clearResults()
gg.toast('ATRAVESAR TIENDA ""WALLHACK SHOP"" (LOGIN)🏪✅')
end
function atravesarairdrops()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('Q ""ingame/pickup/item/pickup_airdrop""', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('Q ""ingame/sceneedit/sceneeditgroupbox""', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('Q ""ingame/levelobject/levellockairdrop""', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('Q ""ingame/sceneedit/sceneeditgroupbox""', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('Q ""ingame/pickup/item/pickup_carepackage""', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('Q ""ingame/sceneedit/sceneeditgroupbox""', gg.TYPE_BYTE)
gg.clearResults()
gg.toast('ATRAVESAR PAQUETE AÉREO ""WALLHACK AIRDROPS"" (LOGIN)📦✅✈️')
end
function menuvehiculo()
vehiculo = gg.multiChoice({
'VEHÍCULOS ACUÁTICOS (MODO ANFIBIO PARA TODOS LOS VEHÍCULOS)🚘⛴️ ',
'VEHÍCULO BAJO TIERRA (MODO UNDERGROUND)🚘🔽🗺✅️',
'DESACTIVAR VEHÍCULO BAJO TIERRA🚘🔽🗺️❌',
'VEHÍCULO VOLADOR🚘✈️✅ ',
'DESACTIVAR VEHÍCULO VOLADOR🚘✈️❌',
'REGRESAR🔙'
})
if vehiculo == nil then gg.toast('❤️SUBSCRÍBETE A FRAN•HACKER™❤️') else
if vehiculo [1] then vehiculosacuaticos() end
if vehiculo [2] then vehiculobajotierra() end
if vehiculo [3] then desactivarvehiculobajotierra() end
if vehiculo [4] then vehiculovolador() end
if vehiculo [5] then desactivarvehiculovolador() end
if vehiculo [6] then gg.setVisible(true) end
end end
function vehiculosacuaticos()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x1c0cad4
original('7F 45 4C 46 01 01 01 00')
replaced('00 00 A0 E3 1E FF 2F E1')
gg.clearResults()
gg.toast('VEHÍCULOS ACUÁTICOS (MODO ANFIBIO PARA TODOS LOS VEHÍCULOS)🚘⛴️')
end
function vehiculobajotierra()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber('0.0001', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('-2.0001523', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('VEHÍCULO BAJO TIERRA (MODO UNDERGROUND)🚘🔽🗺✅️')
end
function desactivarvehiculobajotierra()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber('-2.0001523', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('0.0001', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('DESACTIVAR VEHÍCULO BAJO TIERRA🚘🔽🗺️❌')
end
function vehiculovolador()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber('1000', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('2500', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('VEHÍCULO VOLADOR🚘✈️✅')
end
function desactivarvehiculovolador()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber('1000', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('2500', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('DESACTIVAR VEHÍCULO VOLADOR🚘✈️❌')
end
function menucamara()
camara = gg.multiChoice({
'CÁMARA HACKER (EL PUNTO DE LA MIRA SE ELEVA)📷🧑‍💻⏫ ',
'DESACTIVAR CÁMARA HACKER (EL PUNTO DE LA MIRA SE ELEVA)📷❌',
'CÁMARA DRON (LA CÁMARA TIENE UNA VISTA AÉREA)📷🦅 ',
'CÁMARA SÚPER FOV (LA CÁMARA SE ALEJA SÚPER ATRÁS)📷⏮️',
'REGRESAR🔙'
})
if camara == nil then gg.toast('❤️SUBSCRÍBETE A FRAN•HACKER™❤️') else
if camara [1] then camaraalta() end
if camara [2] then desactivarcamaraalta() end
if camara [3] then camaralejana() end
if camara [4] then camaraancha() end
if camara [5] then gg.setVisible(true) end
end end
function camaraalta()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x10a5aa0
original('7F 45 4C 46 01 01 01 00')
replaced('01 00 A0 E3 1E FF 2F E1')
gg.clearResults()
gg.toast('CÁMARA HACKER (EL PUNTO DE LA MIRA SE ELEVA)📷🧑‍💻⏫')
end
function desactivarcamaraalta()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x10a5aa0
original('7F 45 4C 46 01 01 01 00')
replaced('30 48 2D E9 08 B0 8D E2')
gg.clearResults()
gg.toast('DESACTIVAR CÁMARA HACKER (EL PUNTO DE LA MIRA SE ELEVA)📷❌')
end
function camaralejana()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x19e671c
original('7F 45 4C 46 01 01 01 00')
replaced('7F 00 44 E3 1E FF 2F E1')
gg.clearResults()
gg.toast('CÁMARA DRON (LA CÁMARA TIENE UNA VISTA AÉREA)📷🦅')
end
function camaraancha()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber('360;3.14159274101;-9.91623292e27::9', gg.TYPE_FLOAT)
gg.refineNumber('360', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('300', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('CÁMARA SÚPER FOV (LA CÁMARA SE ALEJA SÚPER ATRÁS)📷⏮️')
end
function borrarcuenta()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x14610e8
original('7F 45 4C 46 01 01 01 00')
replaced('01 00 A0 E3 1E FF 2F E1')
gg.clearResults()
gg.toast('BORRAR CUENTA🗑️🚮✅')
end
function desactivarborrarcuenta()
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x14610e8
original('7F 45 4C 46 01 01 01 00')
replaced('10 4C 2D E9 08 B0 8D E2')
gg.clearResults()
gg.toast('DESACTIVAR BORRAR CUENTA🗑️🚮❌')
end
while true do if gg.isVisible() then gg.setVisible(false) script() end end"
Z1Q4CcY9,cuenta principal,vip-fran,Lua,Tuesday 21st of May 2024 11:11:10 AM CDT,"if gg.getTargetInfo().processName ~= 'com.dts.freefireth' then gg.alert('❌Selecione El Proceso De Free Fire❌','🔙Salir🔙') os.exit(print('❤️Subscríbete A Fran•Hacker™❤️')) end
if gg.getTargetInfo().versionCode ~= '2019117295' then gg.alert('⚠️Su Versión Es De 64 Bits⚠️\n\n❌Script No Compatible Con Esta Versión❌ \n\n🐢Tienes Que Instalar La Versión De 32 Bits🐢','🔙Salir🔙') os.exit(print('❤️Subscríbete A Fran•Hacker™❤️')) end
gg.setVisible(false) gg.alert('🔥Script Para Cuentas Principales🔥','❤️Happy Game❤️') function edit(offset,hex) r=gg.getRangesList(""libil2cpp.so"")[1].start local h={} h[1]={} h[1].address=r+offset h[1].flags=0x20 h[1].value=hex gg.setValues(h) end function unity(offset,hex) r=gg.getRangesList(""libunity.so"")[1].start local h={} h[1]={} h[1].address=r+offset h[1].flags=0x20 h[1].value=hex gg.setValues(h) end gg.setVisible(true)
function script()
a = gg.multiChoice({
'▫️Close Script▫️',
'🔹Neck (Pre-Login) (No Net)🔹',
'🔹Hand (Pre-Login) (No Net)🔹',
'🔹Headshot + (Pre-Login) (No Net)🔹',
'🔹Headshot ++ (Pre-Login) (No Net)🔹',
'🔹Big Head (Pre-Login) (No Net)🔹'
})
if a == nil then else
if a [1] then gg.setVisible(true) os.exit(print('❤️Subscríbete A Fran•Hacker™❤️')) end
if a [2] then neck() end
if a [3] then hand() end
if a [4] then headshot80() end
if a [5] then headshot100() end
if a [6] then bighead() end
end end
function neck()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('h F0 8C 99 33 00 00 80 3F', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h F0 8C 99 33 00 00 96 43', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('h EC 40 D3 34 00 00 80 3F', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h EC 40 D3 34 00 00 96 43', gg.TYPE_BYTE)
gg.clearResults()
end
function hand()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('h CD 1F F4 BC 00 00 80 3F 85 7B F6 3E', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h CD 1F F4 BC 00 00 96 43 85 7B F6 3E', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('h 0E 34 B9 3D 00 00 80 3F 13 13 17 3E', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h 0E 34 B9 3D 00 00 96 43 13 13 17 3E', gg.TYPE_BYTE)
gg.clearResults()
end
function headshot80()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('0.6;0.6;1;3D;15;35;10;20::29', gg.TYPE_FLOAT)
gg.refineNumber('15;35;10;20::13', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('15;35;80;80', gg.TYPE_FLOAT)
gg.clearResults()
end
function headshot100()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('0.6;0.6;1;3D;15;35;10;20::29', gg.TYPE_FLOAT)
gg.refineNumber('15;35;10;20::13', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('25;45;60;80', gg.TYPE_FLOAT)
gg.clearResults()
end
function bighead()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('h 62 00 6F 00 6E 00 65 00 5F 00 4C 00 65 00 66 00 74 00 5F 00 57 00 65 00 61 00 70 00 6F 00 6E 00', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h 62 00 6F 00 6E 00 65 00 5F 00 4E 00 65 00 63 00 6B 00', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('h 23 AA A6 B8 46 0A CD 70', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h 23 AA A6 B8 B2 F7 1F A4', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('h 57 27 13 BE C5 26 27 BC 1F 02 81 B3 D6 2D 8B 29 73 4E D6 34 CB 5F 13 BE BA 55 7D 3F 00 00 80 3F 00 00 80 3F 00 00 80 3F', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h EC 51 B8 BD 3B 64 29 BD 1F 02 81 B3 D6 2D 8B 29 73 4E D6 34 CB 5F 13 BE BA 55 7D 3F 72 1C C7 3F 72 1C C7 3F 72 1C C7 3F', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('h 7B D5 FE BD 6B F1 AE BC DA 65 8F B3 38 C2 15 2A 1F CD 04 35 42 A6 36 BE 0D E5 7B 3F 01 00 80 3F 01 00 80 3F 00 00 80 3F', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h EC 51 B8 BD 3B 64 29 BD DA 65 8F B3 38 C2 15 2A 1F CD 04 35 42 A6 36 BE 0D E5 7B 3F 00 00 C0 3F 00 00 C0 3F 00 00 C0 3F', gg.TYPE_BYTE)
gg.clearResults()
end
while true do if gg.isVisible() then gg.setVisible(false) script() end end"
AUBUEjVH,Untitled,fi5hii,Lua,Tuesday 21st of May 2024 11:08:21 AM CDT,"local monitor = peripheral.find(""monitor"", function(name) return name == ""monitor_0"" end) -- name of the monitor connected to the network
local maxRPM = 64 -- rpm that engines run at full power (for displaying green color)
local CreateTarget = ""create_target_0"" -- name of the CC:C Bridge target block on the network
local EngineNumber = 1 -- number of total engines connected to the target block
local spinPos = {} -- table for all engines to log what sprite is rendered
local buttonPos = {} -- table for button coords for all engines
local maxW, maxH = monitor.getSize() -- gets screen dimensions
local EnginesDisplayed = math.floor(maxW/18) -- number of engines that can fit on your monitor
local firstPos = math.floor((maxW/EnginesDisplayed)-18) -- position of cursor for first engine
local padding -- padding for centering
local text = ""ENGINE CONTROL"" -- text that's on top of the engine monitor 
rednet.open(""left"") -- opens the side of the PC that has the wireless modem installed
print(""your monitor can display ""..EnginesDisplayed.."" engines in a row"")


for i = 1, EngineNumber do -- sets an array table for every engine to store button coords
    buttonPos[i] = {}
    for j = 1, 4 do -- 4 times for coordinates x1 x2 x3 x4
        buttonPos[i][j] = 0
    end
end

local function TextColor(rpm) -- decides the color for the engine sprite 
    if rpm == 0 then
        return ""gray"" -- gray color if engine is off
    elseif rpm > 0 and rpm < maxRPM then
        return ""orange"" -- orange color if engine is on but not at max speed
    else
        return ""green"" -- green color if engine is on and at max speed
    end
end

local function EngineStatus(rpm) -- returns the engine status in text
    if rpm == 0 then
        return ""OFF""
    else
        return ""ON""
    end
end

function isSpinning (rpm) -- rdetermines if the engine is spinning
    if rpm == 0 then
        return 0
    else
        return 1
    end
end

function lineBreak (line) -- returns the RPM for a motor 
    local stat = peripheral.call(CreateTarget, ""getLine"", line) -- separates the different lines in the target block
    local number = tonumber(stat:match(""^%d+"")) -- removes ""RPM"" and only keeps the number
    return number
end

local function fillArrays(x, z, pos) -- fills arrays with ON & OFF button coords
    buttonPos[pos][z+0] = x -- starting coord
    buttonPos[pos][z+1] = x+3 -- ending coord
end

local function Row(pos) -- calculates in which row the current engine has to be 
	if pos%EnginesDisplayed == 0 then
		return(math.floor(((pos-1)/EnginesDisplayed)+1))
	else
		return(math.floor((pos/EnginesDisplayed)+1))
	end
end

local function DrawStill(rpm, pos) -- draws the still sprite of the engine
    local y=4
	row = Row(pos)
	local x
	if EnginesDisplayed == 1 and maxW < 20 then 
		y = y+(5*(row-1))
		x = 2
	elseif EnginesDisplayed == 1 then 
		y = y+(5*(row-1))
		x = (math.floor(maxW/2)/2)
	elseif (pos - (EnginesDisplayed * (row - 1))) == 1 then -- determines if the engine is far left (1st pos)
	 padding = ((maxW-(19*EnginesDisplayed))/2)+2
 	x = padding
		y = y+(5*(row-1))
	else -- running for engines in position 2 or higher from the left
		x = (padding+(19*(pos - (EnginesDisplayed * (row - 1))-1)))
		y = y+(5*(row-1))
	end
	
    monitor.setTextColor(colors[TextColor(rpm)])
    monitor.setCursorPos(x, y)
    monitor.write("" ___"")
    y = y + 1
    monitor.setCursorPos(x, y)
    monitor.write(""/ I \\ "")
    y = y + 1
    monitor.setCursorPos(x, y)
    monitor.write(""|-O-|"")
    y = y + 1
    monitor.setCursorPos(x, y)
    monitor.write(""\\_I_/"")
    x = x + 6
    y = y - 2
    monitor.setTextColor(colors.white)
    monitor.setCursorPos(x, y)
    monitor.write(""Engine #""..pos)
    y = y + 1
    monitor.setCursorPos(x, y)
    monitor.setTextColor(colors.yellow)
    monitor.write(""Status: ""..EngineStatus(rpm))
    y = y + 1
    x = x + 2
    monitor.setCursorPos(x, y)
    monitor.setTextColor(colors.green)
    monitor.write(""ON"")
    fillArrays(x, ""1"", pos)
    x = x + 5
    monitor.setCursorPos(x, y)
    monitor.setTextColor(colors.red)
    monitor.write(""OFF"")
    fillArrays(x, ""3"", pos)
    spinPos[pos] = 0 -- sets that the current sprite for the engine is still
end

local function DrawMoving(rpm, pos) -- draws the moving sprite of the engine ADD ANOTHER PARAMETER TO FUNC
	local y=4
	row = Row(pos)
	local x
	if EnginesDisplayed == 1 and maxW < 20 then 
		y = y+(5*(row-1))
		x = 2
	elseif EnginesDisplayed == 1 then 
		y = y+(5*(row-1))
		x = (math.floor(maxW/2)/2)
	elseif (pos - (EnginesDisplayed * (row - 1))) == 1 then -- determines if the engine is far left (1st pos)
		padding = ((maxW-(19*EnginesDisplayed))/2)+2
		x = padding
		y = y+(5*(row-1))
	else -- running for engines in position 2 or higher from the left
		x = (padding+(19*(pos - (EnginesDisplayed * (row - 1))-1)))
		y = y+(5*(row-1))
	end
	
    monitor.setTextColor(colors[TextColor(rpm)])
    monitor.setCursorPos(x, y)
    monitor.write("" ___"")
    y = y + 1
    monitor.setCursorPos(x, y)
    monitor.write(""/\\ /\\ "")
    y = y + 1
    monitor.setCursorPos(x, y)
    monitor.write(""| O |"")
    y = y + 1
    monitor.setCursorPos(x, y)
    monitor.write(""\\/_\\/"")
    x = x + 6
    y = y - 2
    monitor.setTextColor(colors.white)
    monitor.setCursorPos(x, y)
    monitor.write(""Engine #""..pos)
    y = y + 1
    monitor.setCursorPos(x, y)
    monitor.setTextColor(colors.yellow)
    monitor.write(""Status: ""..EngineStatus(rpm))
    y = y + 1
    x = x + 2
    monitor.setCursorPos(x, y)
    monitor.setTextColor(colors.green)
	-- IF STATEMENT TO WRINTE ON & OFF BUTTONS OR TUNRING ON AND OFF TEXT 
    monitor.write(""ON"")
    fillArrays(x, ""1"", pos)
    x = x + 5
    monitor.setCursorPos(x, y)
    monitor.setTextColor(colors.red)
    monitor.write(""OFF"")
    fillArrays(x, ""3"", pos)
    spinPos[pos] = 1 -- sets that the current sprite for the engine is moving
end

local arrayCount = 1

while arrayCount <= EngineNumber do -- sets the spin position of all engines to still
    spinPos[arrayCount] = 0
    arrayCount = arrayCount + 1
    sleep(0.05) -- waits one ingame tick
end

monitor.clear()

function Screen() -- calls all the functions to draw all the engines
    while true do 
        local loop=1
        while loop <= EngineNumber do
            if isSpinning(lineBreak(loop)) == 1 and spinPos[loop] == 0 then -- if the engine is spinning and the current sprite is still it will draw a moving one
                DrawMoving(lineBreak(loop), loop)
            else
                DrawStill(lineBreak(loop), loop)
            end
            loop = loop + 1
        end
        loop = 1
        coroutine.yield() -- pauses the function until resumed
    end
end

function handleTouch(x, y) -- handles the touch on the monitor
    local i = 1
    local check_y = 7; -- line of the first buttons
    if x and y then
        for loop = 1, EngineNumber do 
			if Row(i) == 1 then -- checks if the engine is in first row to set button y coords
				check_y = 7
			else
				check_y = 7+(5*(Row(i)-1)) -- sets button y coords for all other rows
			end
            if y == check_y and x >= buttonPos[i][1] and x <= buttonPos[i][2] then
                rednet.broadcast(i.. ""ON"")
                print(""clicked ON ... engine "", i)
            elseif y == check_y and x >= buttonPos[i][3] and x <= buttonPos[i][4] then
                rednet.broadcast(i.. ""OFF"")
                print(""clicked OFF ... engine "", i)
            end
            i = i + 1
        end
    end
end

local run=1

function wait (time)
    local timer = os.startTimer(time)
    while true do
      local event = {os.pullEvent()}
      if (event[1] == ""timer"" and event[2] == timer) then
          break
      elseif event[1] == ""monitor_touch"" then
            handleTouch(event[3], event[4])
      elseif event[1] == ""modem_message"" then
          local mess = event[5]
          print(""Got modem message ""..mess)
          if mess == ""shutdown_monitor"" then
              shutdownMonitor()
              break
          end
      end
    end
end

screenCoroutine = coroutine.create(Screen)

while run == 1 do
    monitor.setCursorPos((maxW-#text)/2+2,2)
    monitor.setTextColor(colors.white)
    monitor.write(text)
    local success, screenResult = coroutine.resume(screenCoroutine)
    if not success then
        print(""Error in screenCoroutine: "" .. tostring(screenResult))
    end
    wait(1)
    sleep(0.25)
    monitor.clear()
end -- by fi5hii and IceFire (plus a little help from MineNat69)
"
F8hM18TQ,descarado,vip-fran,Lua,Tuesday 21st of May 2024 11:05:17 AM CDT,"if gg.getTargetInfo().processName ~= 'com.dts.freefireth' then gg.alert('❌Selecione El Proceso De Free Fire❌','🔙Salir🔙') os.exit(print('❤️Subscríbete A Fran•Hacker™❤️')) end
if gg.getTargetInfo().versionCode ~= '2019117295' then gg.alert('⚠️Su Versión Es De 64 Bits⚠️\n\n❌Script No Compatible Con Esta Versión❌ \n\n🐢Tienes Que Instalar La Versión De 32 Bits🐢','🔙Salir🔙') os.exit(print('❤️Subscríbete A Fran•Hacker™❤️')) end
gg.setVisible(false) gg.alert('🔥Script Descarado🔥','❤️Happy Game❤️') memFrom, memTo, lib, num, lim, results, src, ok = 0, -1, nil, 0, 32, {}, nil, false function name(n) if lib ~= n then lib = n ranges = gg.getRangesList(lib) if #ranges == 0 then os.exit() else memFrom = ranges[1].start memTo = ranges[#ranges]['end'] end end end function hex2tbl(hex) ret = {} hex:gsub('%S%S', function (ch) ret[#ret + 1] = ch return '' end) return ret end function original(orig) tbl = hex2tbl(orig) len = #tbl if len == 0 then return end used = len if len > lim then used = lim end s = '' for i = 1, used do if i ~= 1 then s = s..';' end v = tbl[i] if v == '??' or v == '**' then v = '0~~0' end s = s..v..'r' end s = s..'::'..used gg.searchNumber(s, 1, false, gg.SIGN_EQUAL, memFrom, memTo) if len > used then for i = used + 1, len do v = tbl[i] if v == '??' or v == '**' then v = 256 else v = ('0x'..v) + 0 if v > 127 then v = v - 256 end end tbl[i] = v end end found = gg.getResultCount(); results = {} count = 0 checked = 0 while true do if checked >= found then break end all = gg.getResults(8) total = #all start = checked if checked + used > total then break end for i, v in ipairs(all) do v.address = v.address + of end gg.loadResults(all) while start < total do good = true of = all[1 + start].address - 1 if used < len then get = {} for i = lim + 1, len do get[i - lim] = {address = of + i, flags = 1, value = 0} end get = gg.getValues(get) for i = lim + 1, len do ch = tbl[i] if ch ~= 256 and get[i - lim].value ~= ch then good = false break end end end if good then count = count + 1 results[count] = of checked = checked + used else del = {} for i = 1, used do del[i] = all[i + start] end gg.removeResults(del) end start = start + used end end end function replaced(repl) num = num + 1 tbl = hex2tbl(repl) if src ~= nil then source = hex2tbl(src) for i, v in ipairs(tbl) do if v ~= '??' and v ~= '**' and v == source[i] then tbl[i] = '**' end end src = nil end cnt = #tbl set = {} s = 0 for _, addr in ipairs(results) do for i, v in ipairs(tbl) do if v ~= '??' and v ~= '**' then s = s + 1 set[s] = { ['address'] = addr + i,  ['value'] = v..'r', ['flags'] = 1,} end end end if s ~= 0 then gg.setValues(set) end ok = true end
function edit(offset,hex) r=gg.getRangesList(""libil2cpp.so"")[1].start local h={} h[1]={} h[1].address=r+offset h[1].flags=0x20 h[1].value=hex gg.setValues(h) end function unity(offset,hex) r=gg.getRangesList(""libunity.so"")[1].start local h={} h[1]={} h[1].address=r+offset h[1].flags=0x20 h[1].value=hex gg.setValues(h) end gg.setVisible(true)
function script()
a = gg.multiChoice({
'▫️Close Script▫️',
'🔥Descarado🤕',
'🔫Auto Apuntado (En Partida)♻️'
})
if a == nil then else
if a [1] then gg.setVisible(true) os.exit(print('❤️Subscríbete A Fran•Hacker™❤️')) end
if a [2] then descarado() end
if a [3] then autoapuntado() end
end end
function descarado()
--gpn neck
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('h F0 8C 99 33 00 00 80 3F', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h F0 8C 99 33 00 00 96 43', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('h EC 40 D3 34 00 00 80 3F', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h EC 40 D3 34 00 00 96 43', gg.TYPE_BYTE)
gg.clearResults()

--medkit 3 seconds
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('00r;00r;80r;40r;00r;00r;00r;00r;03r;00r;00r;00r::12', gg.TYPE_BYTE)
gg.getResults(4)
gg.editAll('00r;00r;40r;40r', gg.TYPE_BYTE)
gg.clearResults()

--speed joystick
edit(0x115a1f4,'h 01 00 A0 E3 1E FF 2F E1')
edit(0x5136808,'h 01 00 A0 E3 1E FF 2F E1')

--no recoil
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber('-7.1608877e24;1000;-1.30930378e25::9', gg.TYPE_FLOAT)
gg.refineNumber('1000', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('0', gg.TYPE_FLOAT)
gg.clearResults()

--wallshot
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber('0.00001;-1.30928164e25;-3.69511377e20::9', gg.TYPE_FLOAT)
gg.refineNumber('0.00001', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('1', gg.TYPE_FLOAT)
gg.clearResults()

--semiaimbot
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x16b58c0
original('7F 45 4C 46 01 01 01 00')
replaced('FF 0F 46 E3 1E FF 2F E1')
gg.clearResults()

--aimbot mira
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('1075000115;1065353216::9', gg.TYPE_DWORD)
gg.getResults(gg.getResultsCount())
gg.editAll('-10;981668463', gg.TYPE_DWORD)
gg.clearResults()

--aimlock disparo
name('libil2cpp.so')
of = 0x16e2304
original('7F 45 4C 46 01 01 01 00')
replaced('32 00 A0 E3 1E FF 2F E1')
gg.clearResults()

--quitar miras
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x10f4f90
original('7F 45 4C 46 01 01 01 00')
replaced('00 00 A0 E3 1E FF 2F E1')
gg.clearResults()

--libertad disparando
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x108ec88
original('7F 45 4C 46 01 01 01 00')
replaced('01 00 A0 E3 1E FF 2F E1')
gg.clearResults()

--cielo negro
unity(0x3022dc,'h 00 00 80 BF 00 00 51 E3')

--quitar hierbas
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x4db9244
original('7F 45 4C 46 01 01 01 00')
replaced('00 00 A0 E3 1E FF 2F E1')
gg.clearResults()

--quitar árboles lejanos
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x4dbfbe4
original('7F 45 4C 46 01 01 01 00')
replaced('00 00 A0 E3 1E FF 2F E1')
gg.clearResults()

--cuerpos blancos
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x442d318
original('7F 45 4C 46 01 01 01 00')
replaced('00 00 A0 E3 1E FF 2F E1')
gg.clearResults()
name('libil2cpp.so')
of = 0x10ae4dc
original('7F 45 4C 46 01 01 01 00')
replaced('00 00 A0 E3 1E FF 2F E1')
gg.clearResults()

--jugadores tiesos
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x31e88d4
original('7F 45 4C 46 01 01 01 00')
replaced('00 00 A0 E3 1E FF 2F E1')
gg.clearResults()

--piedras
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber('-8388395.5;-8388393.5;-8388387.5::65', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('-1', gg.TYPE_FLOAT)
gg.clearResults()

--cámara hacker
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x10a5aa0
original('7F 45 4C 46 01 01 01 00')
replaced('01 00 A0 E3 1E FF 2F E1')
gg.clearResults()

--cámara lejana
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x19e671c
original('7F 45 4C 46 01 01 01 00')
replaced('7F 00 44 E3 1E FF 2F E1')
gg.clearResults()
end

function autoapuntado()
gg.setRanges(gg.REGION_ANONYMOUS) 
gg.searchNumber('4,629,700,418,046,263,296', gg.TYPE_QWORD) 
gg.getResults(1000) 
gg.editAll('-95,441,653,858,304', gg.TYPE_QWORD) 
gg.clearResults()
end
while true do if gg.isVisible() then gg.setVisible(false) script() end end"
VExWZy8F,antiban,vip-fran,Lua,Tuesday 21st of May 2024 10:54:20 AM CDT,"if gg.getTargetInfo().processName ~= 'com.dts.freefireth' then gg.alert('❌Selecione El Proceso De Free Fire❌','🔙Salir🔙') os.exit(print('❤️Subscríbete A Fran•Hacker™❤️')) end
if gg.getTargetInfo().versionCode ~= '2019117295' then gg.alert('⚠️Su Versión Es De 64 Bits⚠️\n\n❌Script No Compatible Con Esta Versión❌ \n\n🐢Tienes Que Instalar La Versión De 32 Bits🐢','🔙Salir🔙') os.exit(print('❤️Subscríbete A Fran•Hacker™❤️')) end
gg.setVisible(false) gg.alert('🔥Script Antiban🔥','❤️Happy Game❤️') function edit(offset,hex) r=gg.getRangesList(""libil2cpp.so"")[1].start local h={} h[1]={} h[1].address=r+offset h[1].flags=0x20 h[1].value=hex gg.setValues(h) end function unity(offset,hex) r=gg.getRangesList(""libunity.so"")[1].start local h={} h[1]={} h[1].address=r+offset h[1].flags=0x20 h[1].value=hex gg.setValues(h) end gg.setVisible(true)
function script()
a = gg.multiChoice({
'▫️Close Script▫️',
'🔹Walls 2 Seconds (In Game)🔹',
'🔹Stones 2 Seconds (In Game)🔹',
'🔹White Bodies (Training Room)🔹',
'🔹Black Sky (Pre-Login) (No Net)🔹',
'🔹Neck (Pre-Login) (No Net)🔹',
'🔹Hand (Pre-Login) (No Net)🔹',
'🔹Headshot + (Pre-Login) (No Net)🔹',
'🔹Headshot ++ (Pre-Login) (No Net)🔹',
'🔹Big Head (Pre-Login) (No Net)🔹',
'🔹Medkit 3 Seconds (Pre-Login) (No Net)🔹'
})
if a == nil then else
if a [1] then gg.setVisible(true) os.exit(print('❤️Subscríbete A Fran•Hacker™❤️')) end
if a [2] then wall() end
if a [3] then stones() end
if a [4] then whitebodies() end
if a [5] then blacksky() end
if a [6] then neck() end
if a [7] then hand() end
if a [8] then headshot80() end
if a [9] then headshot100() end
if a [10] then bighead() end
if a [11] then medkit() end
end end
function wall()
unity(0xb8be60,'h 00 00 00 00 04 DA 68 EE')
gg.sleep(2500)
unity(0xb8be60,'h 0D FA 9D ED 04 DA 68 EE')
gg.clearResults()
gg.toast('✓')
end
function stones()
unity(0xb827f8,'h 00 00 80 BF 0E 00 00 EA') unity(0xb82808,'h 00 00 80 BF 0A 00 00 EA') unity(0xb82838,'h 00 00 80 BF 60 D0 4B E2')
gg.sleep(2500)
unity(0xb827f8,'h 57 FE FF CA 0E 00 00 EA') unity(0xb82808,'h 53 FE FF CA 0A 00 00 EA') unity(0xb82838,'h 47 FE FF CA 60 D0 4B E2')
gg.toast('✓')
end
function whitebodies()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber('25D;49D;195D;25D;49D;193D;4F::77', gg.TYPE_FLOAT)
gg.refineNumber('4', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('1000', gg.TYPE_FLOAT)
gg.clearResults()
end
function blacksky() unity(0x3022dc,'h 00 00 80 BF 00 00 51 E3') end
function neck()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('h F0 8C 99 33 00 00 80 3F', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h F0 8C 99 33 00 00 96 43', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('h EC 40 D3 34 00 00 80 3F', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h EC 40 D3 34 00 00 96 43', gg.TYPE_BYTE)
gg.clearResults()
end
function hand()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('h CD 1F F4 BC 00 00 80 3F 85 7B F6 3E', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h CD 1F F4 BC 00 00 96 43 85 7B F6 3E', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('h 0E 34 B9 3D 00 00 80 3F 13 13 17 3E', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h 0E 34 B9 3D 00 00 96 43 13 13 17 3E', gg.TYPE_BYTE)
gg.clearResults()
end
function headshot80()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('0.6;0.6;1;3D;15;35;10;20::29', gg.TYPE_FLOAT)
gg.refineNumber('15;35;10;20::13', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('15;35;80;80', gg.TYPE_FLOAT)
gg.clearResults()
end
function headshot100()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('0.6;0.6;1;3D;15;35;10;20::29', gg.TYPE_FLOAT)
gg.refineNumber('15;35;10;20::13', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('25;45;60;80', gg.TYPE_FLOAT)
gg.clearResults()
end
function bighead()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('h 62 00 6F 00 6E 00 65 00 5F 00 4C 00 65 00 66 00 74 00 5F 00 57 00 65 00 61 00 70 00 6F 00 6E 00', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h 62 00 6F 00 6E 00 65 00 5F 00 4E 00 65 00 63 00 6B 00', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('h 23 AA A6 B8 46 0A CD 70', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h 23 AA A6 B8 B2 F7 1F A4', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('h 57 27 13 BE C5 26 27 BC 1F 02 81 B3 D6 2D 8B 29 73 4E D6 34 CB 5F 13 BE BA 55 7D 3F 00 00 80 3F 00 00 80 3F 00 00 80 3F', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h EC 51 B8 BD 3B 64 29 BD 1F 02 81 B3 D6 2D 8B 29 73 4E D6 34 CB 5F 13 BE BA 55 7D 3F 72 1C C7 3F 72 1C C7 3F 72 1C C7 3F', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('h 7B D5 FE BD 6B F1 AE BC DA 65 8F B3 38 C2 15 2A 1F CD 04 35 42 A6 36 BE 0D E5 7B 3F 01 00 80 3F 01 00 80 3F 00 00 80 3F', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h EC 51 B8 BD 3B 64 29 BD DA 65 8F B3 38 C2 15 2A 1F CD 04 35 42 A6 36 BE 0D E5 7B 3F 00 00 C0 3F 00 00 C0 3F 00 00 C0 3F', gg.TYPE_BYTE)
gg.clearResults()
end
function medkit()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('00r;00r;80r;40r;00r;00r;00r;00r;03r;00r;00r;00r::12', gg.TYPE_BYTE)
gg.getResults(4)
gg.editAll('00r;00r;40r;40r', gg.TYPE_BYTE)
gg.clearResults()
end
while true do if gg.isVisible() then gg.setVisible(false) script() end end"
mAHPm8dU,xml_upload_invalid_big_img,dkob,XML,Tuesday 21st of May 2024 10:50:06 AM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<root>
    <list-item>
        <external_id>53378502</external_id>
        <images>
		<list-item>https://reactfiles.com/en/download/MHXViWxSmfLmwnq/jN2p3DxA3Ma56/1713344811_368727.jpg</list-item>
		</images>
        <status>active</status>
        <rubric>3290</rubric>
        <city>8</city>
        <description>advert2</description>
        <price>100</price>
        <phone_hide>0</phone_hide>
        <negotiable_price>0</negotiable_price>
        <exchange>0</exchange>
        <attrs>
            <condition>1</condition>
        </attrs>
        <geometry/>
        <title>2 _test</title>
        <district>5756</district>
    </list-item>
</root>
"
xUsizh8y,maximize_profit.py,Abhisek92,Python,Tuesday 21st of May 2024 10:44:17 AM CDT,"import numpy as np


def maximize_profit(prices):
    n = len(prices)
    if n < 2:
        return 0, [], []

    # prices = np.array(prices)

    # Initialize DP arrays
    dp_no_stock = np.zeros(n)
    dp_with_stock = np.full(n, -np.inf)

    # Track transactions
    buy_hours = [-1] * n
    sell_hours = [-1] * n

    # First hour setup
    # dp_no_stock[0] = 0
    # dp_with_stock[0] = -np.inf

    for i in range(1, n):
        if i != 1:  # Cannot sell at the first hour
            if dp_with_stock[i-1] + prices[i] > dp_no_stock[i-1]:
                dp_no_stock[i] = dp_with_stock[i-1] + prices[i]
                sell_hours[i] = i
            else:
                dp_no_stock[i] = dp_no_stock[i-1]
                sell_hours[i] = sell_hours[i-1]

        if i != n-1:  # Cannot buy at the last hour
            if dp_no_stock[i-1] - prices[i] > dp_with_stock[i-1]:
                dp_with_stock[i] = dp_no_stock[i-1] - prices[i]
                buy_hours[i] = i
            else:
                dp_with_stock[i] = dp_with_stock[i-1]
                buy_hours[i] = buy_hours[i-1]

    # Reconstruct transactions
    profit = dp_no_stock[n-1]
    buys = []
    sells = []
    i = n - 1

    while i > 0:
        if sell_hours[i] != -1 and (i == sell_hours[i] or sell_hours[i] != sell_hours[i-1]):
            sells.append(sell_hours[i])
            buy_hour = buy_hours[sell_hours[i] - 1]
            buys.append(buy_hour)
            i = buy_hour - 1
        else:
            i -= 1

    buys.reverse()
    sells.reverse()

    return profit, buys, sells

if __name__ == ""__main__"":
    import pandas as pd
    df = pd.read_excel(io=""data.xlsx"", header=0)
    prices = df[""2024 FCR-N Up""].to_numpy()
    p, b, s = maximize_profit(prices)
    b = df.loc[b, ""Hour #""].tolist()
    s = df.loc[s, ""Hour #""].tolist()
    print(f""Price: {p}"")
    print(f""Buys (Hours): {b}"")
    print(f""Sellss (Hours): {s}"")
"
BuRWuBpc,Pastebin.ai - #1 Pastebin Alternative,xxsa,PHP,Tuesday 21st of May 2024 10:34:19 AM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
..
....................................
"
rMTaXSbG,resources,Igor150195,JavaScript,Tuesday 21st of May 2024 10:25:22 AM CDT,"<script>
    document.querySelectorAll('.all-resources').forEach(function(element) {
        element.classList.add('w--current');
    });

    document.addEventListener('DOMContentLoaded', function () {
        var $tabHeadersItems = $('.resources-tab-wrapper .tab-link-default');
        var $tabBodyItems = $('.article-item');

        $tabHeadersItems.each(function() {
            $(this).on('click', function() {
                var currentData = $(this).data('category');

                // Снимаем выделение с предыдущих вкладок и применяем к текущей
                $('.all-resources').removeClass('w--current');
                $tabHeadersItems.removeClass('w--current');
                $(this).addClass('w--current');

                $(`.article-item`).hide();
                $(`.article-item[data-category=""${currentData}""]`).show();
            });
        });

        $('.all-resources').on('click', function(){
            $tabHeadersItems.removeClass('w--current');
            $(this).addClass('w--current');
            $(`.article-item`).show();
        });
    });
</script>"
ctm9AxFq,xml_upload_valid_img,dkob,XML,Tuesday 21st of May 2024 10:17:50 AM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<root>
    <list-item>
        <external_id>53378501</external_id>
        <images>
		<list-item>https://reactfiles.com/en/download/MHXViWxSmfLmwnq/jN2p3DxA3Ma56/1713344811_368727.jpg</list-item>
		</images>
        <status>active</status>
        <rubric>3290</rubric>
        <city>8</city>
        <description>advert1</description>
        <price>100</price>
        <phone_hide>0</phone_hide>
        <negotiable_price>0</negotiable_price>
        <exchange>0</exchange>
        <attrs>
            <condition>1</condition>
        </attrs>
        <geometry/>
        <title>1 _test</title>
        <district>5756</district>
    </list-item>
</root>
"
1X3Afkdu,live-search,Igor150195,JavaScript,Tuesday 21st of May 2024 09:38:36 AM CDT,"<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Ждем, пока весь контент загрузится, прежде чем выполнять скрипт

        const form = document.querySelector('.live-search'); // Находим форму с классом .live-search
        const input = form.querySelector('.search-input'); // Находим поле ввода с классом .search-input внутри формы
        const articleItems = document.querySelectorAll('.article-item'); // Находим все элементы с классом .article-item
        const noResult = document.querySelector('.resources-no-result'); // Находим поле блок с классом .resources-no-result

        if (form) {
            // Проверяем, существует ли форма
            form.addEventListener('submit', function (e) {
                e.preventDefault(); // Предотвращаем отправку формы, чтобы не перезагружать страницу
            });

            input.addEventListener('input', function () {
                // Добавляем обработчик события ввода в поле поиска
                const searchText = input.value.trim().toLowerCase(); // Получаем введенный текст и приводим его к нижнему регистру

                articleItems.forEach(articleItem => {
                    // Перебираем каждый элемент .article-item
                    const title = articleItem.querySelector('.article-title'); // Находим элемент заголовка с классом .article-title внутри .article-item
                    if (title) {
                        const titleText = title.textContent.trim().toLowerCase(); // Получаем текст заголовка и приводим его к нижнему регистру

                        if (titleText.includes(searchText)) {
                            // Если текст заголовка содержит введенный текст
                            articleItem.classList.add('show-block'); // Добавляем класс для отображения элемента
                            articleItem.classList.remove('hide-block'); // Удаляем класс скрытия элемента
                        } else {
                            // Если текст заголовка не содержит введенный текст
                            articleItem.classList.remove('show-block'); // Удаляем класс отображения элемента
                            articleItem.classList.add('hide-block'); // Добавляем класс скрытия элемента
                        }
                    }
                });

                let hasClassFlag = checkAllElementsHaveClass('show-block');

                if (!hasClassFlag) {
                    noResult.classList.remove('hide-block');
                } else {
                    noResult.classList.add('hide-block');
                }
            });

            function checkAllElementsHaveClass(hasClass) {
                const elements = articleItems;
                let allHaveClass = true;
    
                elements.forEach(element => {
                    if (!element.classList.contains(hasClass)) {
                        allHaveClass = false;
                    }
                });
    
                return allHaveClass;
            }
        }
    });
</script>"
EdEwXU4T,Untitled,irmantas_radavicius,C++,Tuesday 21st of May 2024 09:22:57 AM CDT,"#include <iostream>
#include <fstream>
#include <string>

using namespace std;

struct Kiekiai {
    int kiek1, kiek3, kiek5;
    int kiekA;
};
struct Kainos {
    int islaidos;
    int kaina1, kaina3, kaina5;
};
struct Duomenys {
    Kiekiai k;
    Kainos a;
};

Duomenys gautiDuomenis(string vardas){
    Duomenys d;
    ifstream in(vardas);
    in >> d.k.kiek1 >> d.k.kiek3 >> d.k.kiek5;
    in >> d.k.kiekA >> d.a.islaidos;
    in >> d.a.kaina1 >> d.a.kaina3 >> d.a.kaina5;
    in.close();
    return d;
}

void spausdintiKiekius(Kiekiai duom, ofstream &out){
    out << duom.kiek1 << "" "" << duom.kiek3 << "" "" << duom.kiek5;
}

Kiekiai gautiKiekius(Kiekiai &duom){
    Kiekiai rez = { 0, 0, 0, 0, };
    rez.kiekA = duom.kiekA;

    while(1){
        if(duom.kiek5 > 0 && rez.kiekA >= 5){
            rez.kiekA = rez.kiekA - 5;
            duom.kiek5--;
            rez.kiek5++;
        } else
            break;
    }
    while(1){
        if(duom.kiek3 > 0 && rez.kiekA >= 3){
            rez.kiekA = rez.kiekA - 3;
            duom.kiek3--;
            rez.kiek3++;
        } else
            break;
    }
    while(1){
        if(duom.kiek1 > 0 && rez.kiekA >= 1){
            rez.kiekA = rez.kiekA - 1;
            duom.kiek1--;
            rez.kiek1++;
        } else
            break;
    }
    return rez;
}

int gautiPelna(Kiekiai k1, Kiekiai k2, Kainos a){
    int pelnas = -a.islaidos;
    pelnas += (k1.kiek1+k2.kiek1) * a.kaina1;
    pelnas += (k1.kiek3+k2.kiek3) * a.kaina3;
    pelnas += (k1.kiek5+k2.kiek5) * a.kaina5;
    return pelnas;
}

int main(int argc, char *argv[]){

    string inVardas = ""U1.txt"";
    string outVardas = ""U1rez.txt"";

    if(argc > 1){
        inVardas = argv[1];
    }
    if(argc > 2){
        outVardas = argv[2];
    }

    /*
    cout << argc << endl;
    for(int i = 0; i < argc; ++i)
        cout << argv[i] << endl;
    cout << endl << endl;
    */

    ofstream out(outVardas);

    Duomenys d = gautiDuomenis(inVardas);
    Kiekiai k1 = gautiKiekius(d.k);
    spausdintiKiekius(k1, out);
    out << "" "" << k1.kiekA << endl;
    spausdintiKiekius(d.k, out);
    out << endl;

    Kiekiai k2;
    k2.kiek1 = k1.kiekA;
    k2.kiek3 = k1.kiekA;
    k2.kiek5 = k1.kiekA;
    k2.kiekA = k1.kiekA;
    Kiekiai k3 = gautiKiekius(k2);
    spausdintiKiekius(k3, out);
    out << endl;

    int p = gautiPelna(k1, k3, d.a);
    out << p << endl;

    out.close();

    return 0;
}
"
54VHqaYX,MS-BmpMakerClass-cs,nm9505,C#,Tuesday 21st of May 2024 09:01:47 AM CDT,"using System;
using System.IO;
using System.Linq;
using Xamarin.Forms;
using System.Text;

using System.Collections.Generic;

namespace MandelBrootSet
{
    public class BmpMaker 
    {         
		const int headerSize = 54;
		readonly byte[] buffer;
		public BmpMaker(int width, int height)
		{
			Width = width;
			Height = height;
			int numPixels = Width * Height;
			int numPixelBytes = 4 * numPixels;
			int fileSize = headerSize + numPixelBytes;
			buffer = new byte[fileSize];
			// Escritor y acumulador de encabezados: Buffer.
			using (MemoryStream memoryStream = new MemoryStream(buffer))
			{
				//Asignación binaria del archivo temporal.
				using (BinaryWriter writer = new BinaryWriter(memoryStream, Encoding.UTF8))
				{
					// Constructor del encabezado del BitMap (14 bytes).
					 writer.Write(new char[] { 'B', 'M' });
					 writer.Write(fileSize); 
					 writer.Write((short)0); 
					 writer.Write((short)0); 
					 writer.Write(headerSize);
					 // Constructor BitmapInfoHeader (40 bytes).
					 writer.Write(40); // Header size
					 writer.Write(Width); 
					 writer.Write(Height); 
					 writer.Write((short)1); //Tasa
					 writer.Write((short)32); //Tasa
					 writer.Write(0); // Compresión
					 writer.Write(numPixelBytes); //Balanza de imagen en pixeles.
					 writer.Write(0); //Densidad de Pixels/Color
					 writer.Write(0); 
					 writer.Write(0); 
					 writer.Write(0); 
				}
			}
		}
		//Instanciando Ancho y Altura
		public int Width
		{
			private set;
			get;
		}
		public int Height
		{
			private set;
			get;
		}
		//Funciones de configuración de Color y carga del Buffer
		public void SetPixel(int row, int col, Color color)
		{
			SetPixel(row, col,  (int)(255 * color.R), 
								(int)(255 * color.G), 
								(int)(255 * color.B), 
								(int)(255 * color.A));
		}
		public void SetPixel(int row, int col, int r, int g, int b, int a = 255)
		{
			int index = (row * Width + col) * 4 + headerSize;
			buffer[index + 0] = (byte)b;
			buffer[index + 1] = (byte)g;
			buffer[index + 2] = (byte)r;
			buffer[index + 3] = (byte)a;
		}
		//Método para generar la imagen.
		public ImageSource Generate()
		{
			// Creando el MemoryStream a partir del Buffer colector de bitmaps.
			MemoryStream memoryStream = new MemoryStream(buffer);
			// Conversión a StreamImageSource.
			ImageSource imageSource = ImageSource.FromStream(() =>
			{
				return memoryStream;
			});
			return imageSource;
		}
    }
}"
wGTvwRhA,MS-ComplexClass-cs,nm9505,C#,Tuesday 21st of May 2024 08:59:27 AM CDT,"using System;
using System.Linq;
using System.Collections.Generic;

namespace MandelBrootSet
{
    public struct Complex: IEquatable<Complex>, IFormattable
    {         
        //Definición de variables de entorno global.
        bool gotMagnitude, gotMagnitudeSquared;
		double magnitude, magnitudeSquared;
		public Complex(double real, double imaginary) : this()
		{
			Real = real;
			Imaginary = imaginary;
		}
		public double Real { private set; get; }
		public double Imaginary { private set; get; }
		//Cálculo del módulo y su cuadrado.
		public double MagnitudeSquared
		{
			get
			{
				if (gotMagnitudeSquared)
				{
					return magnitudeSquared;
				}
				magnitudeSquared = Real * Real + Imaginary * Imaginary;
				gotMagnitudeSquared = true;
				return magnitudeSquared;
			}
		}
		public double Magnitude
		{
			get
			{
				 if (gotMagnitude)
				 {
				 return magnitude;
				 }
				 magnitude = Math.Sqrt(magnitudeSquared);
				 gotMagnitude = true;
				 return magnitude;
			}
		}
		//Sección de Operadores y funciones auxiliares
		public static Complex operator +(Complex left, Complex right)
		 {
			return new Complex(left.Real + right.Real, left.Imaginary + right.Imaginary);
		 }
		 public static Complex operator -(Complex left, Complex right)
		 {
			return new Complex(left.Real - right.Real, left.Imaginary - right.Imaginary);
		 }
		 public static Complex operator *(Complex left, Complex right)
		 {
			return new Complex(left.Real * right.Real - left.Imaginary * right.Imaginary,
			left.Real * right.Imaginary + left.Imaginary * right.Real);
		 }
		 public static bool operator ==(Complex left, Complex right)
		 {
			return left.Real == right.Real && left.Imaginary == right.Imaginary;
		 }
		 public static bool operator !=(Complex left, Complex right)
		 {
			return !(left == right);
		 }
		 public static implicit operator Complex(double value)
		 {
			return new Complex(value, 0);
		 }
		 public static implicit operator Complex(int value)
		 {
			return new Complex(value, 0);
		 }
		 public override int GetHashCode()
		 {
			return Real.GetHashCode() + Imaginary.GetHashCode();
		 }
		 public override bool Equals(Object value)
		 {
			return Real.Equals(((Complex)value).Real) && Imaginary.Equals(((Complex)value).Imaginary);
		 }
		 public bool Equals(Complex value)
		 {
			return Real.Equals(value) && Imaginary.Equals(value);
		 }
		 public override string ToString()
		 {
			return String.Format(""{0} {1} {2}i"", Real, RealImaginaryConnector(Imaginary), Math.Abs(Imaginary));
		 }
		 public string ToString(string format)
		 {
			return String.Format(""{0} {1} {2}i"", Real.ToString(format), RealImaginaryConnector(Imaginary), Math.Abs(Imaginary).ToString(format));
		 }
		 public string ToString(IFormatProvider formatProvider)
		 {
			return String.Format(""{0} {1} {2}i"", Real.ToString(formatProvider), RealImaginaryConnector(Imaginary), Math.Abs(Imaginary).ToString(formatProvider));
		 }
		 public string ToString(string format, IFormatProvider formatProvider)
		 {
			return String.Format(""{0} {1} {2}i"", Real.ToString(format, formatProvider), RealImaginaryConnector(Imaginary), Math.Abs(Imaginary).ToString(format, formatProvider));
		 }
		 string RealImaginaryConnector(double value)
		 {
			return Math.Sign(value) > 0 ? ""+"" : ""\u2013"";
		 }
		 
    }
}"
SPsrJmGp,Soal4_Stack_LinkedList,remshixi,C++,Tuesday 21st of May 2024 08:54:15 AM CDT,"/*
Nama: Fairuz Andriansyah
NIM : 225150307111015
*/
 
#include <iostream>
using namespace std;
 
class StackLinkedList
{
private:
    struct Node
    {
        string item;
        Node *next;
    };
 
    Node *head, *tail, *top;
    int n = 0;
 
    /* buat node baru pas manggil fungsi push */
    Node *create_node (string item)
    {
        Node *newNode = new Node();
        newNode->item = item;
        newNode->next = nullptr;
        n++;
        return newNode;
    }
 
    /* nambah list di bagian belakang pas manggil fungsi push */
    void add_last (string item)
    {
        Node *tmp = create_node(item);
        if (isEmpty())
        {
            head = tail = tmp;
        }
        else
        {
            tail->next = tmp;
            tail = tmp;
        }
    }
 
    /* hapus node di bagian belakang pas manggil fungsi pop */
    void remove_last () 
    {
        Node *hapus = tail;
        if (!isEmpty())
        {
            if (head == tail)
            {
                head = tail = nullptr;
                delete hapus;
            }
            else
            {
                Node *p = head;
                while (p->next != tail)
                {
                    p = p->next;
                }
                p->next = nullptr;
                tail = p;
                delete hapus;
            }
            n--;
        }
    }
 
    /*
    cetak semua data dengan urutan terbalik menggunakan rekursif
    yg masuk pertama dicetak terakhir
    */
    void printAll(Node *node)
    {
        if (node == nullptr)
        {
            return;
        }
 
        printAll(node->next); // rekursif
        if (node == top)
        {
        cout << ""|\t"" << node->item << ""\t|  <<---- TOP"" << endl
                << ""----------------"" << endl;
        }
        else
        {
        cout << ""|\t"" << node->item << ""\t|"" << endl
                << ""----------------"" << endl;
        }
    }
 
public:
 
    /* Inisialisasi Node awal */
    void init ()
    {
        head = tail = top = nullptr;
    }
 
    /* Cek apakah LInkedLIst kosong */
    bool isEmpty ()
    {
        return top == nullptr;
    }
 
    /* Fungsi mengembalikan jumlah data dalam LinkedList */
    int size ()
    {
        return n;
    }
 
    /* Fungsi push, add last data */
    void push (string item)
    {
        add_last (item);
        top = tail;
    }
 
    /*
    Fungsi mengambil data paling atas, 
    lalu menghapus data yang telah diambil tersebut dari LinkedList
    */
    string pop ()
    {
        string tempData = top->item;
        remove_last();
        top = tail;
        return tempData;
    }
 
    /* Fungsi mencari data berdasarkan index */
    void searchIndex (int index)
    {
        if (index < 0 || index >= n)
        {
            cout << ""Index "" << index << "" tidak valid. Input antara 0 - "" << n-1 << endl;
        }
        else
        {
            Node *p = head;
            for (int i = 0; i < index; i++)
            {
                p = p->next;
            }
            cout << ""Data pada index ke-"" << index << "" adalah: "" << p->item << endl;
        }
    }
 
    /* Fungsi mencari data berdasarkan item */
    void searchItem(string item)
    {
        Node *temp = head;
        int i = 0;
        while (temp != nullptr)
        {
            if (temp->item == item)
            {
                cout << ""Data '"" << item << ""' ditemukan pada index ke-"" << i  << endl;
                return;
            }
            temp = temp->next;
            i++;
        }
        cout << ""Data '"" << item << ""' tidak ditemukan."" << endl;
    }
 
    /* cetak semua data dalam list */
    void printAll()
    {
        if (isEmpty())
        {
            cout << ""Stack kosong."" << endl;
            return;
        }
        cout << ""Jumlah data dalam Stack: "" << size() << endl
                << ""Data dalam Stack:"" << endl;
        printAll(head); // panggil fungsi rekursif
    }
 
 
    /*menghapus semua node biar ga memory leak*/
    void deleteAll ()
    {
        while (head != nullptr)
        {
            remove_last();
        }
        top = tail;
    }
    
};
 
int main ()
{
    StackLinkedList list;
    list.init();
    int size, idx;
    char choice;
    string item;
 
    menu:
    system(""cls"");
    cout << ""Nama: Fairuz Andriansyah""
            << ""NIM : 225150307111015\n\n"";
    cout << ""Program Stack menggunakan Linked List\n""
            << ""=====================================\n"";
    cout << ""Menu:\n""
            << ""1. Push Data\n"" //done
            << ""2. Pop Data\n"" //done
            << ""3. Search by Index\n"" //done
            << ""4. Search by Item\n"" // done
            << ""5. Print All Data\n"" // done
            << ""0. Exit\n"" // done
            << ""Pilihan Anda (1/2/.../0): "";
    cin >> choice;
    cout << endl;
 
    switch (choice)
    {
        case '1': // Push Data
            cout << ""Masukkan jumlah data yang ingin dimasukkan: ""; 
            cin >> size; // input jumlah item yang ingin dimasukkan
            for (int i = 0; i < size; i++) // perulangan input item sesuai jumlah yang diinginkan
            {
                cout << ""Masukkan data ke-"" << i+1 << "": "";
                getline(cin >> ws, item); // input item (string)
                list.push(item);
            }
            cout << ""Data berhasil dimasukkan!\n"" << endl;
            cout << ""Tekan Enter untuk kembali ke menu..."";
            cin.get();
            goto menu;
            break;
        case '2': // Pop Data
            if (!list.isEmpty())
            {
                cout << ""data '"" << list.pop() << ""' berhasil di-pop."" << endl;
            }
            else
            {
                cout << ""Stack kosong."" << endl;
            }
            cout << ""\nTekan Enter untuk kembali ke menu..."";
            cin.ignore();
            cin.get();
            goto menu;
            break;
        case '3': // Search by Index
            if (list.isEmpty())
            {
                cout << ""Stack kosong."" << endl;
            }
            else
            {
                cout << ""Masukkan index yang ingin dicari: ""; // input index (mulai dari 0)
                cin >> idx;
                list.searchIndex(idx);
            }
            cout << ""\nTekan Enter untuk kembali ke menu..."";
            cin.ignore();
            cin.get();
            goto menu;
            break;
        case '4': // Search by Item
            if (list.isEmpty())
            {
                cout << ""Stack kosong."" << endl;
            }
            else
            {
                cout << ""Masukkan data yang ingin dicari: ""; // input item yang ingin dicari (string)
                getline(cin >> ws, item);
                list.searchItem(item);
            }
            cout << ""\nTekan Enter untuk kembali ke menu..."";
            cin.get();
            goto menu;
            break;
        case '5': // Print All Data
            list.printAll();
            cout << ""\nTekan Enter untuk kembali ke menu..."";
            cin.ignore();
            cin.get();
            goto menu;
            break;
        case '0': // Exit
            cout << ""tks."" << endl;
            break;
        default: // Invalid Input
            cout << ""Pilihan tidak valid."" << endl;
            cout << ""Tekan Enter untuk kembali ke menu..."";
            cin.ignore();
            cin.get();
            goto menu;
            break;
    }
    
    list.deleteAll(); // hapus semua node biar ga memory leak
    list.printAll(); // cek udh kehapus apa blm. udh sih :P
 
    return 0;
}"
hJazdzGm,MS-MainPage-xaml,nm9505,XML,Tuesday 21st of May 2024 08:53:42 AM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<ContentPage xmlns=""http://xamarin.com/schemas/2014/forms""
	xmlns:xct=""http://xamarin.com/schemas/2020/toolkit""
	xmlns:local=""clr-namespace:MandelBrootSet""
	xmlns:x=""http://schemas.microsoft.com/winfx/2009/xaml""
	x:Class=""MandelBrootSet.MainPage"">

	 <StackLayout x:Name=""LayMain"" BackgroundColor=""Black""
		Padding=""10,0,10,10"" >
	 	<Label x:Name=""lbl1"" FontSize=""15"" TextColor=""Yellow"" HorizontalTextAlignment=""Center"" />
	 	<Label x:Name=""lbl2"" FontSize=""13"" TextColor=""LightBlue"" />
	 	<Frame x:Name=""marco"" Padding=""10,10"" Margin=""200,0,15,0"" BackgroundColor=""Black"">  
	 		<Entry x:Name=""Iteraciones"" Placeholder=""# Iteraciones"" Keyboard=""Numeric"" 
	 		HorizontalTextAlignment=""Center"" ClearButtonVisibility=""WhileEditing"" />
	 	</Frame>
		 <Grid VerticalOptions=""CenterAndExpand"" >
			 <ContentView Padding=""10, 0""
			 VerticalOptions=""Center"">

			 </ContentView>
			 <Image x:Name=""image"" Scale=""1""/>
		 </Grid>
		 <Button x:Name=""calculateButton"" Margin=""0,0,0,125""
			 Text=""Graficar"" CornerRadius=""10"" 
			 FontSize=""13"" BackgroundColor=""Blue""
			 HorizontalOptions=""Center"" TextColor=""White""
			 Clicked=""OnCalculateButtonClicked"" />
		 <ActivityIndicator x:Name=""activityIndicator"" Color=""Blue"" Scale=""0.7"" />		 
		 <Button x:Name=""WebCode"" BackgroundColor=""Green"" HeightRequest=""45"" WidthRequest=""5""
				TextColor=""White"" TextTransform=""Lowercase"" CornerRadius=""20"" Margin=""70,0,70,0""
				Clicked=""webCodeClick"" />
	 </StackLayout>
</ContentPage>"
GnLp509y,Quant 3.0 BlackLine,Apparcane,Arduino,Tuesday 21st of May 2024 08:49:14 AM CDT,"static int LeftSpeed = 5;
static int RightSpeed = 10;
static int LeftDir = 6;
static int RightDir = 9;

static int LowSpeed = 50;
static int MediumSpeed = 100;
static int HighSpeed = 150;

const int Sensor_0_Pin = 0;
const int Sensor_1_Pin = 1;
const int Sensor_2_Pin = 2;
const int Sensor_3_Pin = 3;
const int Sensor_4_Pin = 4;
const int Sensor_5_Pin = 5;
const int Sensor_6_Pin = 6;
const int Sensor_7_Pin = 7;

int sensor0 = 0;
int sensor1 = 0;
int sensor2 = 0;
int sensor3 = 0;
int sensor4 = 0;
int sensor5 = 0;
int sensor6 = 0;
int sensor7 = 0;

void ReadSensors() {
  // считываем состояние датчиков
  sensor0 = digitalRead(Sensor_0_Pin);
  sensor1 = digitalRead(Sensor_1_Pin);
  sensor2 = digitalRead(Sensor_2_Pin);
  sensor3 = digitalRead(Sensor_3_Pin);
  sensor4 = digitalRead(Sensor_4_Pin);
  sensor5 = digitalRead(Sensor_5_Pin);
  sensor6 = digitalRead(Sensor_6_Pin);
  sensor7 = digitalRead(Sensor_7_Pin);
}


int config() {

  ReadSensors();
  
  sensor0 = sensor0 * -1;
  sensor1 = sensor1 * -1;
  sensor2 = sensor2 * -1;
  sensor3 = sensor3 * -1;
  
  int position = sensor0 + sensor1 + sensor2 + sensor4 + sensor5 + sensor6 + sensor7;
  
  Serial.println(position);
  
  return position;
}

void Backward() {
  //  Left Wheel
  analogWrite(LeftSpeed, MediumSpeed);
  digitalWrite(LeftDir, HIGH);
  //  Right Wheel
  analogWrite(RightSpeed, MediumSpeed);
  digitalWrite(RightDir, HIGH);
}

void Forward() {
  //  Left Wheel
  analogWrite(LeftSpeed, MediumSpeed);
  digitalWrite(LeftDir, LOW);
  //  Right Wheel
  analogWrite(RightSpeed, MediumSpeed);
  digitalWrite(RightDir, LOW);
}

void Stop() {
  //  Left Wheel
  analogWrite(LeftSpeed, 0);
  //  Right Wheel
  analogWrite(RightSpeed, 0);
}

void Right() {
  //  Left Wheel
  analogWrite(LeftSpeed, MediumSpeed);
  digitalWrite(LeftDir, HIGH);
  //  Right Wheel
  analogWrite(RightSpeed, MediumSpeed);
  digitalWrite(RightDir, LOW);
}

void Left() {
  //  Left Wheel
  analogWrite(LeftSpeed, MediumSpeed);
  digitalWrite(LeftDir, LOW);
  //  Right Wheel
  analogWrite(RightSpeed, MediumSpeed);
  digitalWrite(RightDir, HIGH);
}

void RightCircle() {
  //  Left Wheel
  analogWrite(LeftSpeed, HighSpeed);
  digitalWrite(LeftDir, LOW);
  //  Right Wheel
  analogWrite(RightSpeed, LowSpeed);
  digitalWrite(RightDir, LOW);
}

void LeftCircle() {
  //  Left Wheel
  analogWrite(LeftSpeed, LowSpeed);
  digitalWrite(LeftDir, LOW);
  //  Right Wheel
  analogWrite(RightSpeed, HighSpeed);
  digitalWrite(RightDir, LOW);
}

void setup() {
  pinMode(LeftSpeed, OUTPUT);
  pinMode(LeftDir, OUTPUT);
  pinMode(RightDir, OUTPUT);
  pinMode(RightSpeed, OUTPUT);
}

void loop() {
  int position = config()
  
  if (position == 0) {
    Forward();
  }
  else if (position >= 1 && position <= 2) {
    LeftCircle();
  }
  else if (position >= 3) {
    Left();
  }
  else if (position <= -1 && position >= -2) {
    RightCircle();
  }
  else if (position <= -3) {
    Right();
  }
  else {
    Forward();
  }
}"
cYzRXYEb,make-csv-from-dataset,jayankaghosh,PHP,Tuesday 21st of May 2024 08:37:01 AM CDT,"<?php

$csvFile = __DIR__ . '/output.csv';

$headers = [
    ""Partner Id"",
    ""Partner Company Name"",
    ""Access Point Id"",
    ""External Store Id"",
    ""Store City"",
    ""Store State"",
    ""Store Postal code"",
    ""Line Item Type"",
    ""Event Date"",
    ""Event Time"",
    ""Transaction Id"",
    ""Package Id"",
    ""Tracking Id"",
    ""TimeZone"",
    ""Store Country Code"",
    ""Pickup Reason""
];

$dataSet = [
    [""1.16589E+11"", ""POST OFFICE LIMITED"", ""3031fb74-5edc-4942-aac8-8a32a103f500"", ""POL-0011045"", ""Stanford-le-Hope"", """", ""SS17 0LD"", ""HELIX_BASE"", ""02.04.2024"", ""02.04.2024 15:36:19"", ""PickedUp_5ec8313f-b136-4609-a5d3-2f91a221add2"", ""5ec8313f-b136-4609-a5d3-2f91a221add2"", ""QB0599015925"", ""Europe/London"", ""GB"", ""PickedUp""],
    [""1.16589E+11"", ""POST OFFICE LIMITED"", ""3031fb74-5edc-4942-aac8-8a32a103f500"", ""POL-0011045"", ""Stanford-le-Hope"", """", ""SS17 0LD"", ""HELIX_BASE"", ""02.04.2024"", ""02.04.2024 11:38:34"", ""PickedUp_7f944ffc-9ad0-4c08-a10f-342023abfe89"", ""7f944ffc-9ad0-4c08-a10f-342023abfe89"", ""QB0990618190"", ""Europe/London"", ""GB"", ""PickedUp""],
    [""1.16589E+11"", ""POST OFFICE LIMITED"", ""3031fb74-5edc-4942-aac8-8a32a103f500"", ""POL-0011045"", ""Stanford-le-Hope"", """", ""SS17 0LD"", ""HELIX_BASE"", ""03.04.2024"", ""03.04.2024 09:39:34"", ""PickedUp_a7d54444-d482-4cdd-8c49-6d4c82c30642"", ""a7d54444-d482-4cdd-8c49-6d4c82c30642"", ""QB0998667340"", ""Europe/London"", ""GB"", ""PickedUp""],
    [""1.16589E+11"", ""POST OFFICE LIMITED"", ""3031fb74-5edc-4942-aac8-8a32a103f500"", ""POL-0011045"", ""Stanford-le-Hope"", """", ""SS17 0LD"", ""HELIX_BASE"", ""03.04.2024"", ""03.04.2024 16:21:14"", ""PickedUp_70aac152-2c99-4d98-9767-86e91a4238eb"", ""70aac152-2c99-4d98-9767-86e91a4238eb"", ""QB0556995244"", ""Europe/London"", ""GB"", ""PickedUp""],
    [""1.16589E+11"", ""POST OFFICE LIMITED"", ""3031fb74-5edc-4942-aac8-8a32a103f500"", ""POL-0011045"", ""Stanford-le-Hope"", """", ""SS17 0LD"", ""HELIX_BASE"", ""03.04.2024"", ""03.04.2024 13:44:19"", ""PickedUp_1088a1c2-de1e-440a-9c52-a9ff3ab5f4b4"", ""1088a1c2-de1e-440a-9c52-a9ff3ab5f4b4"", ""QB0560990514"", ""Europe/London"", ""GB"", ""PickedUp""],
    [""1.16589E+11"", ""POST OFFICE LIMITED"", ""09c831eb-16d6-47c1-9a69-1d36c21582a5"", ""POL-0012106"", ""Sleaford"", """", ""NG34 7PD"", ""HELIX_BASE"", ""16.04.2024"", ""16.04.2024 17:16:51"", ""ReturnedByCustomer_01a4b03a-5b40-4231-abbe-5cb85ac2c5cd_1"", ""01a4b03a-5b40-4231-abbe-5cb85ac2c5cd"", ""DRhsvdRvRRMA"", ""Europe/London"", ""GB"", ""ReturnedByCustomer""],
    [""1.16589E+11"", ""POST OFFICE LIMITED"", ""09c831eb-16d6-47c1-9a69-1d36c21582a5"", ""POL-0012106"", ""Sleaford"", """", ""NG34 7PD"", ""HELIX_BASE"", ""16.04.2024"", ""16.04.2024 17:16:51"", ""ReturnedByCustomer_4993ccd1-9f7c-4cde-8270-750577f33031_1"", ""4993ccd1-9f7c-4cde-8270-750577f33031"", ""DSLyxKRbRRMA"", ""Europe/London"", ""GB"", ""ReturnedByCustomer""],
    [""1.16589E+11"", ""POST OFFICE LIMITED"", ""09c831eb-16d6-47c1-9a69-1d36c21582a5"", ""POL-0012106"", ""Sleaford"", """", ""NG34 7PD"", ""HELIX_BASE"", ""16.04.2024"", ""16.04.2024 17:16:51"", ""ReturnedByCustomer_4bdb47c3-fead-440a-910a-89356bc71d72_1"", ""4bdb47c3-fead-440a-910a-89356bc71d72"", ""DNxZvpRJRRMA"", ""Europe/London"", ""GB"", ""ReturnedByCustomer""],
    [""1.16589E+11"", ""POST OFFICE LIMITED"", ""09c831eb-16d6-47c1-9a69-1d36c21582a5"", ""POL-0012106"", ""Sleaford"", """", ""NG34 7PD"", ""HELIX_BASE"", ""16.04.2024"", ""16.04.2024 17:16:51"", ""ReturnedByCustomer_bf712ad1-357e-44e4-bdf5-f854561ca872_1"", ""bf712ad1-357e-44e4-bdf5-f854561ca872"", ""DMxTczRWRRMA"", ""Europe/London"", ""GB"", ""ReturnedByCustomer""],
    [""1.16589E+11"", ""POST OFFICE LIMITED"", ""09c831eb-16d6-47c1-9a69-1d36c21582a5"", ""POL-0012106"", ""Sleaford"", """", ""NG34 7PD"", ""HELIX_BASE"", ""16.04.2024"", ""16.04.2024 17:16:51"", ""ReturnedByCustomer_37dd6477-6fd3-4f9b-93c3-38ca68f0642a_1"", ""37dd6477-6fd3-4f9b-93c3-38ca68f0642a"", ""DbCxzrRGRRMA"", ""Europe/London"", ""GB"", ""ReturnedByCustomer""],
    [""1.16589E+11"", ""POST OFFICE LIMITED"", ""09c831eb-16d6-47c1-9a69-1d36c21582a5"", ""POL-0012106"", ""Sleaford"", """", ""NG34 7PD"", ""HELIX_BASE"", ""23.04.2024"", ""23.04.2024 14:07:41"", ""ReturnedToCarrier_8eae72c2-3569-469f-ba59-03588d0979d3"", ""8eae72c2-3569-469f-ba59-03588d0979d3"", ""QC0079618257"", ""Europe/London"", ""GB"", ""ReturnedToCarrier""],
    [""1.16589E+11"", ""POST OFFICE LIMITED"", ""09c831eb-16d6-47c1-9a69-1d36c21582a5"", ""POL-0012106"", ""Sleaford"", """", ""NG34 7PD"", ""HELIX_BASE"", ""23.04.2024"", ""23.04.2024 14:07:41"", ""ReturnedToCarrier_37390dbb-ca63-48d0-ad84-ca59aea95103"", ""37390dbb-ca63-48d0-ad84-ca59aea95103"", ""QC0079622691"", ""Europe/London"", ""GB"", ""ReturnedToCarrier""],
    [""1.16589E+11"", ""POST OFFICE LIMITED"", ""dc72e7aa-fa77-4d10-b45b-0ae085c72c11"", ""POL-0017116"", ""Londonderry"", """", ""BT48 8JJ"", ""HELIX_BASE"", ""06.04.2024"", ""06.04.2024 11:48:28"", ""ReturnedToCarrier_e6c13f23-39cf-4c9a-981a-339862c2b471"", ""e6c13f23-39cf-4c9a-981a-339862c2b471"", ""QC0073709081"", ""Europe/London"", ""GB"", ""ReturnedToCarrier""],
    [""1.16589E+11"", ""POST OFFICE LIMITED"", ""dc72e7aa-fa77-4d10-b45b-0ae085c72c11"", ""POL-0017116"", ""Londonderry"", """", ""BT48 8JJ"", ""HELIX_BASE"", ""10.04.2024"", ""10.04.2024 13:02:41"", ""ReturnedToCarrier_e753cd96-e3d4-49aa-8d0a-2899ff1e5e5c"", ""e753cd96-e3d4-49aa-8d0a-2899ff1e5e5c"", ""QC0079905126"", ""Europe/London"", ""GB"", ""ReturnedToCarrier""],
    [""1.16589E+11"", ""POST OFFICE LIMITED"", ""dc72e7aa-fa77-4d10-b45b-0ae085c72c11"", ""POL-0017116"", ""Londonderry"", """", ""BT48 8JJ"", ""HELIX_BASE"", ""12.04.2024"", ""12.04.2024 12:10:07"", ""ReturnedToCarrier_205c7041-7869-4e90-83eb-9c80a2847151"", ""205c7041-7869-4e90-83eb-9c80a2847151"", ""QC0079072797"", ""Europe/London"", ""GB"", ""ReturnedToCarrier""],
    [""1.16589E+11"", ""POST OFFICE LIMITED"", ""dc72e7aa-fa77-4d10-b45b-0ae085c72c11"", ""POL-0017116"", ""Londonderry"", """", ""BT48 8JJ"", ""HELIX_BASE"", ""17.04.2024"", ""17.04.2024 12:01:22"", ""ReturnedToCarrier_bdb5bf67-b668-4b82-bd8f-c39a9d918bd1"", ""bdb5bf67-b668-4b82-bd8f-c39a9d918bd1"", ""QC0074399624"", ""Europe/London"", ""GB"", ""ReturnedToCarrier""],
    [""1.16589E+11"", ""POST OFFICE LIMITED"", ""76d6b6ff-91db-411a-ac82-ead49268550a"", ""POL-0019089"", ""Lancing"", """", ""BN15 0LH"", ""HELIX_BASE"", ""04.04.2024"", ""04.04.2024 16:29:06"", ""ReturnedToCarrier_290d5552-c1ee-441e-a2e4-3bb27bbf85da"", ""290d5552-c1ee-441e-a2e4-3bb27bbf85da"", ""QC0073434599"", ""Europe/London"", ""GB"", ""ReturnedToCarrier""]
];

function getRow($row) {
    foreach ($row as &$item) {
        $item = '""' . $item . '""';
    }
    return implode(',', $row);
}

function writeRow($row, $fp)
{
    $row = getRow($row);
    fwrite($fp, $row, strlen($row));
}

if (!file_exists($csvFile)) {
    $fp = fopen($csvFile, ""w"");
    writeRow($headers, $fp);
    fclose($fp);
    $fp = fopen($csvFile, ""a"");
    for ($i = 0; $i < 90; $i++) {
        echo sprintf(""Processing iteration %s\n"", $i+1);
        foreach ($dataSet as $row) {
            fwrite($fp, ""\n"", strlen(""\n""));
            writeRow($row, $fp);
        }
    }
    fclose($fp);
} else {
    throw new \Exception('File already exists');
}
"
QxvC6cBX,colorTable,bragosmagos,Lua,Tuesday 21st of May 2024 08:32:18 AM CDT,"colorTable = {}
    
colorTable['minecraft:acacia_door_bottom'] = '(117, 106, 63)'
colorTable['minecraft:acacia_door_top'] = '(121, 108, 66)'
colorTable['minecraft:acacia_leaves'] = '(86, 86, 86)'
colorTable['minecraft:acacia_log'] = '(87, 103, 88)'
colorTable['minecraft:acacia_log_top'] = '(113, 151, 64)'
colorTable['minecraft:acacia_planks'] = '(147, 168, 50)'
colorTable['minecraft:acacia_sapling'] = '(47, 57, 37)'
colorTable['minecraft:acacia_trapdoor'] = '(120, 111, 60)'
colorTable['minecraft:activator_rail'] = '(69, 71, 52)'
colorTable['minecraft:activator_rail_on'] = '(64, 88, 81)'
colorTable['minecraft:allium'] = '(45, 51, 52)'
colorTable['minecraft:amethyst_block'] = '(97, 113, 192)'
colorTable['minecraft:amethyst_cluster'] = '(89, 115, 107)'
colorTable['minecraft:ancient_debris_side'] = '(96, 82, 53)'
colorTable['minecraft:ancient_debris_top'] = '(95, 86, 51)'
colorTable['minecraft:andesite'] = '(138, 136, 137)'
colorTable['minecraft:anvil'] = '(69, 69, 69)'
colorTable['minecraft:anvil_top'] = '(45, 45, 45)'
colorTable['minecraft:attached_melon_stem'] = '(18, 18, 18)'
colorTable['minecraft:attached_pumpkin_stem'] = '(18, 18, 18)'
colorTable['minecraft:autumn_grass_side'] = '(104, 143, 66)'
colorTable['minecraft:autumn_grass_top'] = '(122, 207, 49)'
colorTable['minecraft:azalea_leaves'] = '(48, 58, 88)'
colorTable['minecraft:azalea_plant'] = '(45, 72, 83)'
colorTable['minecraft:azalea_side'] = '(45, 71, 67)'
colorTable['minecraft:azalea_top'] = '(94, 49, 125)'
colorTable['minecraft:azure_bluet'] = '(49, 54, 47)'
colorTable['minecraft:bamboo_block'] = '(79, 58, 144)'
colorTable['minecraft:bamboo_block_top'] = '(61, 87, 144)'
colorTable['minecraft:bamboo_door_bottom'] = '(85, 199, 188)'
colorTable['minecraft:bamboo_door_top'] = '(83, 155, 109)'
colorTable['minecraft:bamboo_fence'] = '(88, 138, 86)'
colorTable['minecraft:bamboo_fence_gate'] = '(92, 126, 82)'
colorTable['minecraft:bamboo_fence_gate_particle'] = '(85, 207, 198)'
colorTable['minecraft:bamboo_fence_particle'] = '(85, 207, 198)'
colorTable['minecraft:bamboo_large_leaves'] = '(125, 29, 94)'
colorTable['minecraft:bamboo_mosaic'] = '(78, 190, 179)'
colorTable['minecraft:bamboo_planks'] = '(81, 193, 182)'
colorTable['minecraft:bamboo_singleleaf'] = '(244, 235, 227)'
colorTable['minecraft:bamboo_small_leaves'] = '(71, 92, 148)'
colorTable['minecraft:bamboo_stage0'] = '(218, 211, 182)'
colorTable['minecraft:bamboo_stalk'] = '(144, 17, 137)'
colorTable['minecraft:bamboo_trapdoor'] = '(87, 165, 121)'
colorTable['minecraft:barrel_bottom'] = '(52, 116, 49)'
colorTable['minecraft:barrel_side'] = '(64, 108, 55)'
colorTable['minecraft:barrel_top'] = '(65, 135, 59)'
colorTable['minecraft:barrel_top_open'] = '(31, 93, 33)'
colorTable['minecraft:basalt_side'] = '(78, 71, 76)'
colorTable['minecraft:basalt_top'] = '(86, 85, 78)'
colorTable['minecraft:beacon'] = '(112, 181, 221)'
colorTable['minecraft:bedrock'] = '(85, 85, 85)'
colorTable['minecraft:beehive_end'] = '(90, 181, 109)'
colorTable['minecraft:beehive_front'] = '(77, 159, 94)'
colorTable['minecraft:beehive_front_honey'] = '(76, 167, 95)'
colorTable['minecraft:beehive_side'] = '(75, 157, 93)'
colorTable['minecraft:beetroots_stage0'] = '(8, 8, 8)'
colorTable['minecraft:beetroots_stage1'] = '(16, 16, 15)'
colorTable['minecraft:beetroots_stage2'] = '(36, 47, 37)'
colorTable['minecraft:beetroots_stage3'] = '(40, 61, 53)'
colorTable['minecraft:bee_nest_bottom'] = '(95, 161, 87)'
colorTable['minecraft:bee_nest_front'] = '(79, 183, 82)'
colorTable['minecraft:bee_nest_front_honey'] = '(80, 195, 93)'
colorTable['minecraft:bee_nest_side'] = '(78, 196, 89)'
colorTable['minecraft:bee_nest_top'] = '(74, 202, 106)'
colorTable['minecraft:bell_bottom'] = '(47, 44, 38)'
colorTable['minecraft:bell_side'] = '(57, 55, 49)'
colorTable['minecraft:bell_top'] = '(63, 61, 54)'
colorTable['minecraft:big_dripleaf_side'] = '(1, 1, 1)'
colorTable['minecraft:big_dripleaf_stem'] = '(33, 38, 31)'
colorTable['minecraft:big_dripleaf_tip'] = '(19, 19, 18)'
colorTable['minecraft:big_dripleaf_top'] = '(81, 56, 129)'
colorTable['minecraft:birch_door_bottom'] = '(142, 208, 190)'
colorTable['minecraft:birch_door_top'] = '(173, 220, 204)'
colorTable['minecraft:birch_leaves'] = '(74, 73, 73)'
colorTable['minecraft:birch_log'] = '(208, 209, 217)'
colorTable['minecraft:birch_log_top'] = '(136, 193, 173)'
colorTable['minecraft:birch_planks'] = '(122, 192, 171)'
colorTable['minecraft:birch_sapling'] = '(51, 62, 49)'
colorTable['minecraft:birch_trapdoor'] = '(153, 207, 187)'
colorTable['minecraft:blackstone'] = '(37, 45, 33)'
colorTable['minecraft:blackstone_top'] = '(38, 46, 34)'
colorTable['minecraft:black_candle'] = '(237, 239, 232)'
colorTable['minecraft:black_candle_lit'] = '(7, 7, 7)'
colorTable['minecraft:black_concrete'] = '(13, 15, 8)'
colorTable['minecraft:black_concrete_powder'] = '(27, 32, 25)'
colorTable['minecraft:black_glazed_terracotta'] = '(70, 56, 46)'
colorTable['minecraft:black_shulker_box'] = '(25, 30, 25)'
colorTable['minecraft:black_stained_glass'] = '(25, 25, 25)'
colorTable['minecraft:black_stained_glass_pane_top'] = '(3, 3, 3)'
colorTable['minecraft:black_terracotta'] = '(36, 37, 16)'
colorTable['minecraft:black_wool'] = '(20, 26, 20)'
colorTable['minecraft:blast_furnace_front'] = '(107, 108, 108)'
colorTable['minecraft:blast_furnace_front_on'] = '(110, 116, 116)'
colorTable['minecraft:blast_furnace_side'] = '(107, 108, 108)'
colorTable['minecraft:blast_furnace_top'] = '(80, 81, 81)'
colorTable['minecraft:blue_candle'] = '(246, 247, 234)'
colorTable['minecraft:blue_candle_lit'] = '(15, 15, 14)'
colorTable['minecraft:blue_concrete'] = '(45, 143, 76)'
colorTable['minecraft:blue_concrete_powder'] = '(70, 167, 94)'
colorTable['minecraft:blue_glazed_terracotta'] = '(50, 139, 56)'
colorTable['minecraft:blue_grass_side'] = '(68, 125, 149)'
colorTable['minecraft:blue_grass_top'] = '(228, 58, 96)'
colorTable['minecraft:blue_ice'] = '(251, 253, 116)'
colorTable['minecraft:blue_leaves'] = '(71, 164, 124)'
colorTable['minecraft:blue_orchid'] = '(32, 36, 31)'
colorTable['minecraft:blue_sapling'] = '(106, 66, 81)'
colorTable['minecraft:blue_shulker_box'] = '(44, 140, 73)'
colorTable['minecraft:blue_stained_glass'] = '(97, 178, 52)'
colorTable['minecraft:blue_stained_glass_pane_top'] = '(20, 21, 20)'
colorTable['minecraft:blue_terracotta'] = '(61, 60, 91)'
colorTable['minecraft:blue_wool'] = '(53, 157, 76)'
colorTable['minecraft:bone_block_side'] = '(208, 229, 229)'
colorTable['minecraft:bone_block_top'] = '(179, 206, 210)'
colorTable['minecraft:bookshelf'] = '(46, 95, 134)'
colorTable['minecraft:brain_coral'] = '(64, 86, 75)'
colorTable['minecraft:brain_coral_block'] = '(155, 207, 90)'
colorTable['minecraft:brain_coral_fan'] = '(72, 75, 59)'
colorTable['minecraft:brewing_stand'] = '(64, 63, 56)'
colorTable['minecraft:brewing_stand_base'] = '(117, 106, 106)'
colorTable['minecraft:bricks'] = '(151, 134, 83)'
colorTable['minecraft:brown_candle'] = '(243, 233, 231)'
colorTable['minecraft:brown_candle_lit'] = '(12, 12, 12)'
colorTable['minecraft:brown_concrete'] = '(63, 96, 32)'
colorTable['minecraft:brown_concrete_powder'] = '(88, 126, 54)'
colorTable['minecraft:brown_glazed_terracotta'] = '(59, 61, 146)'
colorTable['minecraft:brown_mushroom'] = '(20, 20, 19)'
colorTable['minecraft:brown_mushroom_block'] = '(110, 149, 82)'
colorTable['minecraft:brown_shulker_box'] = '(71, 106, 36)'
colorTable['minecraft:brown_stained_glass'] = '(67, 102, 51)'
colorTable['minecraft:brown_stained_glass_pane_top'] = '(12, 12, 11)'
colorTable['minecraft:brown_terracotta'] = '(65, 77, 36)'
colorTable['minecraft:brown_wool'] = '(80, 114, 41)'
colorTable['minecraft:bubble_coral'] = '(47, 73, 85)'
colorTable['minecraft:bubble_coral_block'] = '(166, 27, 26)'
colorTable['minecraft:bubble_coral_fan'] = '(50, 71, 46)'
colorTable['minecraft:budding_amethyst'] = '(93, 101, 188)'
colorTable['minecraft:cable_core'] = '(126, 126, 126)'
colorTable['minecraft:cable_side'] = '(127, 127, 127)'
colorTable['minecraft:cactus_bottom'] = '(74, 87, 130)'
colorTable['minecraft:cactus_side'] = '(95, 48, 116)'
colorTable['minecraft:cactus_top'] = '(51, 48, 97)'
colorTable['minecraft:cake_bottom'] = '(103, 89, 43)'
colorTable['minecraft:cake_inner'] = '(58, 53, 42)'
colorTable['minecraft:cake_side'] = '(70, 89, 80)'
colorTable['minecraft:cake_top'] = '(169, 167, 190)'
colorTable['minecraft:calcite'] = '(222, 221, 225)'
colorTable['minecraft:calibrated_sculk_sensor_amethyst'] = '(54, 54, 59)'
colorTable['minecraft:calibrated_sculk_sensor_input_side'] = '(51, 47, 36)'
colorTable['minecraft:calibrated_sculk_sensor_top'] = '(101, 17, 16)'
colorTable['minecraft:campfire_fire'] = '(102, 107, 67)'
colorTable['minecraft:campfire_log'] = '(73, 77, 52)'
colorTable['minecraft:campfire_log_lit'] = '(120, 117, 59)'
colorTable['minecraft:candle'] = '(252, 247, 245)'
colorTable['minecraft:candle_lit'] = '(19, 19, 19)'
colorTable['minecraft:carrots_stage0'] = '(7, 7, 7)'
colorTable['minecraft:carrots_stage1'] = '(20, 20, 18)'
colorTable['minecraft:carrots_stage2'] = '(30, 38, 30)'
colorTable['minecraft:carrots_stage3'] = '(42, 60, 50)'
colorTable['minecraft:cartography_table_side1'] = '(25, 82, 57)'
colorTable['minecraft:cartography_table_side2'] = '(30, 94, 80)'
colorTable['minecraft:cartography_table_side3'] = '(33, 68, 21)'
colorTable['minecraft:cartography_table_top'] = '(47, 111, 115)'
colorTable['minecraft:carved_pumpkin'] = '(35, 13, 150)'
colorTable['minecraft:cauldron_bottom'] = '(15, 14, 15)'
colorTable['minecraft:cauldron_inner'] = '(49, 53, 51)'
colorTable['minecraft:cauldron_side'] = '(74, 73, 75)'
colorTable['minecraft:cauldron_top'] = '(45, 46, 46)'
colorTable['minecraft:cave_vines'] = '(41, 63, 53)'
colorTable['minecraft:cave_vines_lit'] = '(45, 73, 58)'
colorTable['minecraft:cave_vines_plant'] = '(39, 61, 48)'
colorTable['minecraft:cave_vines_plant_lit'] = '(45, 77, 61)'
colorTable['minecraft:chain'] = '(15, 16, 16)'
colorTable['minecraft:chain_command_block_back'] = '(147, 125, 163)'
colorTable['minecraft:chain_command_block_conditional'] = '(140, 126, 165)'
colorTable['minecraft:chain_command_block_front'] = '(138, 129, 169)'
colorTable['minecraft:chain_command_block_side'] = '(143, 127, 166)'
colorTable['minecraft:chamelium'] = '(255, 255, 255)'
colorTable['minecraft:cherry_door_bottom'] = '(224, 192, 169)'
colorTable['minecraft:cherry_door_top'] = '(192, 161, 149)'
colorTable['minecraft:cherry_leaves'] = '(142, 196, 191)'
colorTable['minecraft:cherry_log'] = '(41, 55, 33)'
colorTable['minecraft:cherry_log_top'] = '(185, 130, 185)'
colorTable['minecraft:cherry_planks'] = '(227, 193, 173)'
colorTable['minecraft:cherry_sapling'] = '(66, 75, 78)'
colorTable['minecraft:cherry_trapdoor'] = '(195, 169, 155)'
colorTable['minecraft:chipped_anvil_top'] = '(46, 46, 46)'
colorTable['minecraft:chiseled_bookshelf_empty'] = '(40, 90, 46)'
colorTable['minecraft:chiseled_bookshelf_occupied'] = '(137, 65, 49)'
colorTable['minecraft:chiseled_bookshelf_side'] = '(86, 175, 105)'
colorTable['minecraft:chiseled_bookshelf_top'] = '(88, 178, 109)'
colorTable['minecraft:chiseled_deepslate'] = '(54, 55, 55)'
colorTable['minecraft:chiseled_nether_bricks'] = '(24, 47, 44)'
colorTable['minecraft:chiseled_polished_blackstone'] = '(46, 59, 52)'
colorTable['minecraft:chiseled_quartz_block'] = '(218, 232, 220)'
colorTable['minecraft:chiseled_quartz_block_top'] = '(217, 232, 220)'
colorTable['minecraft:chiseled_red_sandstone'] = '(96, 183, 27)'
colorTable['minecraft:chiseled_sandstone'] = '(155, 216, 207)'
colorTable['minecraft:chiseled_stone_bricks'] = '(120, 119, 119)'
colorTable['minecraft:chorus_flower'] = '(152, 110, 118)'
colorTable['minecraft:chorus_flower_dead'] = '(97, 56, 86)'
colorTable['minecraft:chorus_plant'] = '(94, 54, 55)'
colorTable['minecraft:clay'] = '(175, 179, 161)'
colorTable['minecraft:coal_block'] = '(16, 16, 16)'
colorTable['minecraft:coal_ore'] = '(106, 105, 105)'
colorTable['minecraft:coarse_dirt'] = '(90, 119, 60)'
colorTable['minecraft:cobbled_deepslate'] = '(77, 79, 81)'
colorTable['minecraft:cobblestone'] = '(128, 127, 128)'
colorTable['minecraft:cobweb'] = '(95, 96, 96)'
colorTable['minecraft:cocoa_stage0'] = '(25, 24, 23)'
colorTable['minecraft:cocoa_stage1'] = '(51, 48, 40)'
colorTable['minecraft:cocoa_stage2'] = '(89, 83, 50)'
colorTable['minecraft:command_block_back'] = '(176, 102, 149)'
colorTable['minecraft:command_block_conditional'] = '(148, 102, 180)'
colorTable['minecraft:command_block_front'] = '(126, 105, 183)'
colorTable['minecraft:command_block_side'] = '(169, 104, 179)'
colorTable['minecraft:comparator'] = '(168, 156, 154)'
colorTable['minecraft:comparator_on'] = '(177, 171, 161)'
colorTable['minecraft:composter_bottom'] = '(59, 117, 31)'
colorTable['minecraft:composter_compost'] = '(151, 161, 96)'
colorTable['minecraft:composter_ready'] = '(165, 177, 120)'
colorTable['minecraft:composter_side'] = '(54, 112, 29)'
colorTable['minecraft:composter_top'] = '(210, 193, 149)'
colorTable['minecraft:computer_advanced_front'] = '(87, 87, 76)'
colorTable['minecraft:computer_advanced_side'] = '(124, 186, 163)'
colorTable['minecraft:computer_advanced_top'] = '(117, 181, 157)'
colorTable['minecraft:computer_blink'] = '(4, 4, 4)'
colorTable['minecraft:computer_command_front'] = '(96, 88, 69)'
colorTable['minecraft:computer_command_side'] = '(152, 182, 95)'
colorTable['minecraft:computer_command_top'] = '(139, 182, 73)'
colorTable['minecraft:computer_normal_front'] = '(66, 66, 66)'
colorTable['minecraft:computer_normal_side'] = '(126, 126, 126)'
colorTable['minecraft:computer_normal_top'] = '(108, 108, 108)'
colorTable['minecraft:computer_on'] = '(3, 3, 3)'
colorTable['minecraft:conduit'] = '(195, 201, 166)'
colorTable['minecraft:copper_block'] = '(192, 176, 79)'
colorTable['minecraft:copper_ore'] = '(130, 131, 119)'
colorTable['minecraft:cornflower'] = '(237, 245, 225)'
colorTable['minecraft:cracked_deepslate_bricks'] = '(65, 65, 65)'
colorTable['minecraft:cracked_deepslate_tiles'] = '(53, 53, 53)'
colorTable['minecraft:cracked_nether_bricks'] = '(20, 40, 37)'
colorTable['minecraft:cracked_polished_blackstone_bricks'] = '(35, 44, 48)'
colorTable['minecraft:cracked_stone_bricks'] = '(118, 118, 119)'
colorTable['minecraft:crafting_table_front'] = '(71, 129, 65)'
colorTable['minecraft:crafting_table_side'] = '(61, 129, 64)'
colorTable['minecraft:crafting_table_top'] = '(84, 120, 43)'
colorTable['minecraft:crimson_door_bottom'] = '(56, 115, 61)'
colorTable['minecraft:crimson_door_top'] = '(56, 114, 60)'
colorTable['minecraft:crimson_fungus'] = '(28, 33, 27)'
colorTable['minecraft:crimson_nylium'] = '(131, 90, 33)'
colorTable['minecraft:crimson_nylium_side'] = '(107, 82, 27)'
colorTable['minecraft:crimson_planks'] = '(49, 101, 51)'
colorTable['minecraft:crimson_roots'] = '(41, 45, 30)'
colorTable['minecraft:crimson_roots_pot'] = '(31, 24, 31)'
colorTable['minecraft:crimson_stem'] = '(27, 93, 53)'
colorTable['minecraft:crimson_stem_top'] = '(113, 50, 76)'
colorTable['minecraft:crimson_trapdoor'] = '(85, 51, 88)'
colorTable['minecraft:crying_obsidian'] = '(14, 40, 60)'
colorTable['minecraft:cut_copper'] = '(191, 170, 80)'
colorTable['minecraft:cut_red_sandstone'] = '(104, 189, 32)'
colorTable['minecraft:cut_sandstone'] = '(159, 218, 213)'
colorTable['minecraft:cyan_candle'] = '(244, 243, 227)'
colorTable['minecraft:cyan_candle_lit'] = '(12, 12, 11)'
colorTable['minecraft:cyan_concrete'] = '(136, 22, 106)'
colorTable['minecraft:cyan_concrete_powder'] = '(157, 37, 153)'
colorTable['minecraft:cyan_glazed_terracotta'] = '(125, 60, 87)'
colorTable['minecraft:cyan_shulker_box'] = '(135, 20, 112)'
colorTable['minecraft:cyan_stained_glass'] = '(153, 76, 81)'
colorTable['minecraft:cyan_stained_glass_pane_top'] = '(18, 18, 17)'
colorTable['minecraft:cyan_terracotta'] = '(90, 87, 91)'
colorTable['minecraft:cyan_wool'] = '(144, 21, 145)'
colorTable['minecraft:damaged_anvil_top'] = '(45, 45, 45)'
colorTable['minecraft:dandelion'] = '(24, 23, 22)'
colorTable['minecraft:dark_oak_door_bottom'] = '(36, 73, 24)'
colorTable['minecraft:dark_oak_door_top'] = '(38, 77, 25)'
colorTable['minecraft:dark_oak_leaves'] = '(106, 106, 105)'
colorTable['minecraft:dark_oak_log'] = '(26, 60, 29)'
colorTable['minecraft:dark_oak_log_top'] = '(32, 68, 23)'
colorTable['minecraft:dark_oak_planks'] = '(32, 67, 20)'
colorTable['minecraft:dark_oak_sapling'] = '(31, 44, 31)'
colorTable['minecraft:dark_oak_trapdoor'] = '(36, 75, 23)'
colorTable['minecraft:dark_prismarine'] = '(53, 80, 92)'
colorTable['minecraft:daylight_detector_inverted_top'] = '(86, 125, 96)'
colorTable['minecraft:daylight_detector_side'] = '(36, 67, 43)'
colorTable['minecraft:daylight_detector_top'] = '(86, 131, 93)'
colorTable['minecraft:dead_brain_coral'] = '(59, 57, 56)'
colorTable['minecraft:dead_brain_coral_block'] = '(123, 124, 115)'
colorTable['minecraft:dead_brain_coral_fan'] = '(182, 179, 172)'
colorTable['minecraft:dead_bubble_coral'] = '(69, 68, 66)'
colorTable['minecraft:dead_bubble_coral_block'] = '(130, 132, 120)'
colorTable['minecraft:dead_bubble_coral_fan'] = '(193, 191, 185)'
colorTable['minecraft:dead_bush'] = '(33, 30, 27)'
colorTable['minecraft:dead_fire_coral'] = '(58, 57, 56)'
colorTable['minecraft:dead_fire_coral_block'] = '(130, 132, 120)'
colorTable['minecraft:dead_fire_coral_fan'] = '(171, 168, 163)'
colorTable['minecraft:dead_horn_coral'] = '(56, 55, 54)'
colorTable['minecraft:dead_horn_coral_block'] = '(131, 134, 122)'
colorTable['minecraft:dead_horn_coral_fan'] = '(190, 186, 180)'
colorTable['minecraft:dead_tube_coral'] = '(71, 69, 67)'
colorTable['minecraft:dead_tube_coral_block'] = '(129, 130, 120)'
colorTable['minecraft:dead_tube_coral_fan'] = '(202, 199, 196)'
colorTable['minecraft:debug'] = '(149, 191, 107)'
colorTable['minecraft:debug2'] = '(114, 144, 111)'
colorTable['minecraft:deepslate'] = '(83, 79, 81)'
colorTable['minecraft:deepslate_bricks'] = '(71, 71, 71)'
colorTable['minecraft:deepslate_coal_ore'] = '(74, 74, 76)'
colorTable['minecraft:deepslate_copper_ore'] = '(100, 88, 100)'
colorTable['minecraft:deepslate_diamond_ore'] = '(108, 99, 91)'
colorTable['minecraft:deepslate_emerald_ore'] = '(106, 87, 95)'
colorTable['minecraft:deepslate_gold_ore'] = '(92, 97, 117)'
colorTable['minecraft:deepslate_iron_ore'] = '(97, 98, 108)'
colorTable['minecraft:deepslate_lapis_ore'] = '(115, 92, 102)'
colorTable['minecraft:deepslate_redstone_ore'] = '(85, 98, 106)'
colorTable['minecraft:deepslate_tiles'] = '(55, 55, 55)'
colorTable['minecraft:deepslate_top'] = '(89, 87, 87)'
colorTable['minecraft:destroy_stage_0'] = '(253, 253, 253)'
colorTable['minecraft:destroy_stage_1'] = '(249, 249, 249)'
colorTable['minecraft:destroy_stage_2'] = '(244, 244, 244)'
colorTable['minecraft:destroy_stage_3'] = '(238, 238, 238)'
colorTable['minecraft:destroy_stage_4'] = '(231, 231, 231)'
colorTable['minecraft:destroy_stage_5'] = '(222, 222, 222)'
colorTable['minecraft:destroy_stage_6'] = '(213, 213, 213)'
colorTable['minecraft:destroy_stage_7'] = '(195, 195, 195)'
colorTable['minecraft:destroy_stage_8'] = '(178, 178, 178)'
colorTable['minecraft:destroy_stage_9'] = '(168, 168, 168)'
colorTable['minecraft:detector_rail'] = '(70, 76, 61)'
colorTable['minecraft:detector_rail_on'] = '(67, 84, 70)'
colorTable['minecraft:diagnostic_wired_modem_off'] = '(70, 184, 37)'
colorTable['minecraft:diagnostic_wired_modem_on'] = '(133, 192, 30)'
colorTable['minecraft:diagnostic_wireless_modem_off'] = '(71, 187, 38)'
colorTable['minecraft:diagnostic_wireless_modem_on'] = '(135, 195, 30)'
colorTable['minecraft:diamond_barrel_bottom'] = '(167, 85, 235)'
colorTable['minecraft:diamond_barrel_side'] = '(174, 87, 229)'
colorTable['minecraft:diamond_barrel_top'] = '(138, 75, 228)'
colorTable['minecraft:diamond_barrel_top_open'] = '(156, 35, 200)'
colorTable['minecraft:diamond_block'] = '(141, 96, 238)'
colorTable['minecraft:diamond_ore'] = '(127, 142, 133)'
colorTable['minecraft:dimmable_light_level_0'] = '(41, 49, 18)'
colorTable['minecraft:dimmable_light_level_1'] = '(50, 57, 21)'
colorTable['minecraft:dimmable_light_level_10'] = '(83, 117, 36)'
colorTable['minecraft:dimmable_light_level_11'] = '(82, 123, 37)'
colorTable['minecraft:dimmable_light_level_12'] = '(83, 129, 38)'
colorTable['minecraft:dimmable_light_level_13'] = '(84, 134, 39)'
colorTable['minecraft:dimmable_light_level_14'] = '(83, 139, 40)'
colorTable['minecraft:dimmable_light_level_15'] = '(83, 145, 41)'
colorTable['minecraft:dimmable_light_level_2'] = '(53, 64, 23)'
colorTable['minecraft:dimmable_light_level_3'] = '(60, 72, 25)'
colorTable['minecraft:dimmable_light_level_4'] = '(65, 78, 27)'
colorTable['minecraft:dimmable_light_level_5'] = '(70, 85, 29)'
colorTable['minecraft:dimmable_light_level_6'] = '(76, 92, 31)'
colorTable['minecraft:dimmable_light_level_7'] = '(81, 98, 32)'
colorTable['minecraft:dimmable_light_level_8'] = '(81, 106, 33)'
colorTable['minecraft:dimmable_light_level_9'] = '(82, 112, 35)'
colorTable['minecraft:diorite'] = '(189, 188, 189)'
colorTable['minecraft:dirt'] = '(101, 134, 67)'
colorTable['minecraft:dirt_path_side'] = '(93, 128, 67)'
colorTable['minecraft:dirt_path_top'] = '(66, 148, 100)'
colorTable['minecraft:disk_drive_front'] = '(110, 110, 110)'
colorTable['minecraft:disk_drive_front_accepted'] = '(111, 110, 110)'
colorTable['minecraft:disk_drive_front_rejected'] = '(110, 110, 110)'
colorTable['minecraft:disk_drive_side'] = '(126, 126, 126)'
colorTable['minecraft:disk_drive_top'] = '(108, 108, 108)'
colorTable['minecraft:dispenser_front'] = '(122, 122, 122)'
colorTable['minecraft:dispenser_front_vertical'] = '(99, 98, 98)'
colorTable['minecraft:dragon_egg'] = '(16, 11, 15)'
colorTable['minecraft:dried_kelp_bottom'] = '(59, 37, 56)'
colorTable['minecraft:dried_kelp_side'] = '(49, 28, 36)'
colorTable['minecraft:dried_kelp_top'] = '(59, 37, 56)'
colorTable['minecraft:dripstone_block'] = '(128, 134, 93)'
colorTable['minecraft:dropper_front'] = '(122, 122, 122)'
colorTable['minecraft:dropper_front_vertical'] = '(98, 97, 97)'
colorTable['minecraft:emerald_block'] = '(40, 203, 61)'
colorTable['minecraft:emerald_ore'] = '(113, 136, 119)'
colorTable['minecraft:enchanting_table_bottom'] = '(7, 21, 25)'
colorTable['minecraft:enchanting_table_side'] = '(40, 26, 54)'
colorTable['minecraft:enchanting_table_top'] = '(153, 43, 71)'
colorTable['minecraft:end_portal_frame_eye'] = '(21, 22, 27)'
colorTable['minecraft:end_portal_frame_side'] = '(134, 93, 136)'
colorTable['minecraft:end_portal_frame_top'] = '(68, 121, 77)'
colorTable['minecraft:end_rod'] = '(47, 46, 46)'
colorTable['minecraft:end_stone'] = '(158, 177, 225)'
colorTable['minecraft:end_stone_bricks'] = '(162, 171, 225)'
colorTable['minecraft:exposed_copper'] = '(133, 162, 105)'
colorTable['minecraft:exposed_cut_copper'] = '(127, 156, 102)'
colorTable['minecraft:farmland'] = '(106, 143, 71)'
colorTable['minecraft:farmland_moist'] = '(50, 82, 15)'
colorTable['minecraft:fern'] = '(178, 178, 179)'
colorTable['minecraft:fire_0'] = '(178, 202, 56)'
colorTable['minecraft:fire_1'] = '(157, 197, 42)'
colorTable['minecraft:fire_coral'] = '(56, 71, 47)'
colorTable['minecraft:fire_coral_block'] = '(35, 164, 50)'
colorTable['minecraft:fire_coral_fan'] = '(45, 65, 44)'
colorTable['minecraft:fletching_table_front'] = '(107, 173, 123)'
colorTable['minecraft:fletching_table_side'] = '(123, 153, 192)'
colorTable['minecraft:fletching_table_top'] = '(133, 197, 154)'
colorTable['minecraft:flowering_azalea_leaves'] = '(98, 52, 92)'
colorTable['minecraft:flowering_azalea_side'] = '(62, 52, 80)'
colorTable['minecraft:flowering_azalea_top'] = '(133, 63, 53)'
colorTable['minecraft:flower_pot'] = '(24, 22, 22)'
colorTable['minecraft:frogspawn'] = '(35, 33, 32)'
colorTable['minecraft:frosted_ice_0'] = '(248, 253, 141)'
colorTable['minecraft:frosted_ice_1'] = '(248, 253, 140)'
colorTable['minecraft:frosted_ice_2'] = '(247, 252, 139)'
colorTable['minecraft:frosted_ice_3'] = '(247, 252, 136)'
colorTable['minecraft:furnace_front'] = '(92, 91, 91)'
colorTable['minecraft:furnace_front_on'] = '(121, 112, 107)'
colorTable['minecraft:furnace_side'] = '(121, 120, 120)'
colorTable['minecraft:furnace_top'] = '(110, 110, 110)'
colorTable['minecraft:gilded_blackstone'] = '(58, 37, 45)'
colorTable['minecraft:glass'] = '(143, 151, 150)'
colorTable['minecraft:glass_pane_top'] = '(27, 27, 26)'
colorTable['minecraft:glowstone'] = '(94, 172, 76)'
colorTable['minecraft:glow_item_frame'] = '(105, 148, 72)'
colorTable['minecraft:glow_lichen'] = '(50, 51, 54)'
colorTable['minecraft:gold_barrel_bottom'] = '(58, 243, 200)'
colorTable['minecraft:gold_barrel_side'] = '(72, 240, 202)'
colorTable['minecraft:gold_barrel_top'] = '(60, 240, 178)'
colorTable['minecraft:gold_barrel_top_open'] = '(46, 217, 117)'
colorTable['minecraft:gold_block'] = '(61, 246, 215)'
colorTable['minecraft:gold_ore'] = '(145, 134, 118)'
colorTable['minecraft:granite'] = '(149, 145, 86)'
colorTable['minecraft:grass'] = '(80, 80, 80)'
colorTable['minecraft:grass_block_side'] = '(66, 137, 82)'
colorTable['minecraft:grass_block_side_overlay'] = '(27, 27, 27)'
colorTable['minecraft:grass_block_snow'] = '(129, 117, 175)'
colorTable['minecraft:grass_block_top'] = '(147, 147, 147)'
colorTable['minecraft:gravel'] = '(132, 128, 127)'
colorTable['minecraft:gray_candle'] = '(242, 242, 239)'
colorTable['minecraft:gray_candle_lit'] = '(11, 11, 11)'
colorTable['minecraft:gray_concrete'] = '(62, 60, 55)'
colorTable['minecraft:gray_concrete_powder'] = '(85, 81, 77)'
colorTable['minecraft:gray_glazed_terracotta'] = '(86, 83, 94)'
colorTable['minecraft:gray_shulker_box'] = '(62, 60, 55)'
colorTable['minecraft:gray_stained_glass'] = '(76, 76, 76)'
colorTable['minecraft:gray_stained_glass_pane_top'] = '(9, 9, 9)'
colorTable['minecraft:gray_terracotta'] = '(56, 58, 36)'
colorTable['minecraft:gray_wool'] = '(72, 64, 63)'
colorTable['minecraft:green_candle'] = '(242, 233, 227)'
colorTable['minecraft:green_candle_lit'] = '(10, 9, 9)'
colorTable['minecraft:green_concrete'] = '(77, 37, 91)'
colorTable['minecraft:green_concrete_powder'] = '(92, 45, 119)'
colorTable['minecraft:green_glazed_terracotta'] = '(143, 60, 77)'
colorTable['minecraft:green_shulker_box'] = '(79, 32, 101)'
colorTable['minecraft:green_stained_glass'] = '(108, 51, 127)'
colorTable['minecraft:green_stained_glass_pane_top'] = '(15, 15, 14)'
colorTable['minecraft:green_terracotta'] = '(50, 42, 83)'
colorTable['minecraft:green_wool'] = '(81, 28, 110)'
colorTable['minecraft:grindstone_pivot'] = '(17, 15, 14)'
colorTable['minecraft:grindstone_round'] = '(53, 53, 53)'
colorTable['minecraft:grindstone_side'] = '(79, 79, 79)'
colorTable['minecraft:hanging_roots'] = '(47, 43, 41)'
colorTable['minecraft:hay_block_side'] = '(38, 166, 127)'
colorTable['minecraft:hay_block_top'] = '(13, 166, 155)'
colorTable['minecraft:honeycomb_block'] = '(28, 229, 54)'
colorTable['minecraft:honey_block_bottom'] = '(18, 241, 22)'
colorTable['minecraft:honey_block_side'] = '(58, 251, 139)'
colorTable['minecraft:honey_block_top'] = '(53, 251, 129)'
colorTable['minecraft:hopper_inside'] = '(49, 53, 51)'
colorTable['minecraft:hopper_outside'] = '(66, 69, 66)'
colorTable['minecraft:hopper_top'] = '(46, 47, 46)'
colorTable['minecraft:horn_coral'] = '(78, 82, 59)'
colorTable['minecraft:horn_coral_block'] = '(66, 193, 216)'
colorTable['minecraft:horn_coral_fan'] = '(74, 76, 56)'
colorTable['minecraft:ice'] = '(245, 254, 146)'
colorTable['minecraft:iron_barrel_bottom'] = '(213, 213, 213)'
colorTable['minecraft:iron_barrel_side'] = '(197, 197, 197)'
colorTable['minecraft:iron_barrel_top'] = '(199, 199, 199)'
colorTable['minecraft:iron_barrel_top_open'] = '(138, 138, 138)'
colorTable['minecraft:iron_bars'] = '(63, 63, 62)'
colorTable['minecraft:iron_block'] = '(220, 220, 220)'
colorTable['minecraft:iron_door_bottom'] = '(196, 195, 195)'
colorTable['minecraft:iron_door_top'] = '(158, 157, 157)'
colorTable['minecraft:iron_ore'] = '(136, 130, 125)'
colorTable['minecraft:iron_trapdoor'] = '(174, 174, 174)'
colorTable['minecraft:item_frame'] = '(103, 117, 51)'
colorTable['minecraft:jack_o_lantern'] = '(49, 215, 83)'
colorTable['minecraft:jigsaw_bottom'] = '(37, 36, 29)'
colorTable['minecraft:jigsaw_lock'] = '(47, 38, 41)'
colorTable['minecraft:jigsaw_side'] = '(56, 64, 62)'
colorTable['minecraft:jigsaw_top'] = '(76, 71, 81)'
colorTable['minecraft:jukebox_side'] = '(58, 89, 44)'
colorTable['minecraft:jukebox_top'] = '(75, 94, 53)'
colorTable['minecraft:jungle_door_bottom'] = '(118, 158, 78)'
colorTable['minecraft:jungle_door_top'] = '(125, 144, 83)'
colorTable['minecraft:jungle_leaves'] = '(104, 104, 110)'
colorTable['minecraft:jungle_log'] = '(25, 85, 58)'
colorTable['minecraft:jungle_log_top'] = '(85, 150, 68)'
colorTable['minecraft:jungle_planks'] = '(120, 160, 80)'
colorTable['minecraft:jungle_sapling'] = '(22, 27, 20)'
colorTable['minecraft:jungle_trapdoor'] = '(116, 128, 75)'
colorTable['minecraft:kelp'] = '(26, 26, 23)'
colorTable['minecraft:kelp_plant'] = '(38, 51, 38)'
colorTable['minecraft:ladder'] = '(66, 70, 48)'
colorTable['minecraft:lantern'] = '(43, 43, 51)'
colorTable['minecraft:lapis_block'] = '(124, 140, 31)'
colorTable['minecraft:lapis_ore'] = '(115, 139, 141)'
colorTable['minecraft:large_amethyst_bud'] = '(61, 55, 63)'
colorTable['minecraft:large_fern_bottom'] = '(169, 171, 170)'
colorTable['minecraft:large_fern_top'] = '(51, 51, 51)'
colorTable['minecraft:lava_flow'] = '(143, 207, 20)'
colorTable['minecraft:lava_still'] = '(154, 212, 18)'
colorTable['minecraft:lectern_base'] = '(81, 163, 73)'
colorTable['minecraft:lectern_front'] = '(53, 132, 75)'
colorTable['minecraft:lectern_sides'] = '(67, 150, 77)'
colorTable['minecraft:lectern_top'] = '(83, 174, 94)'
colorTable['minecraft:lever'] = '(9, 8, 8)'
colorTable['minecraft:lightning_rod'] = '(31, 28, 28)'
colorTable['minecraft:lightning_rod_on'] = '(255, 255, 255)'
colorTable['minecraft:light_blue_candle'] = '(250, 250, 234)'
colorTable['minecraft:light_blue_candle_lit'] = '(17, 17, 16)'
colorTable['minecraft:light_blue_concrete'] = '(199, 54, 36)'
colorTable['minecraft:light_blue_concrete_powder'] = '(213, 74, 130)'
colorTable['minecraft:light_blue_glazed_terracotta'] = '(209, 88, 94)'
colorTable['minecraft:light_blue_shulker_box'] = '(212, 49, 81)'
colorTable['minecraft:light_blue_stained_glass'] = '(216, 183, 102)'
colorTable['minecraft:light_blue_stained_glass_pane_top'] = '(25, 26, 24)'
colorTable['minecraft:light_blue_terracotta'] = '(109, 138, 137)'
colorTable['minecraft:light_blue_wool'] = '(217, 58, 104)'
colorTable['minecraft:light_gray_candle'] = '(244, 243, 242)'
colorTable['minecraft:light_gray_candle_lit'] = '(13, 13, 12)'
colorTable['minecraft:light_gray_concrete'] = '(115, 120, 125)'
colorTable['minecraft:light_gray_concrete_powder'] = '(148, 151, 155)'
colorTable['minecraft:light_gray_glazed_terracotta'] = '(142, 160, 168)'
colorTable['minecraft:light_gray_shulker_box'] = '(116, 119, 124)'
colorTable['minecraft:light_gray_stained_glass'] = '(153, 153, 153)'
colorTable['minecraft:light_gray_stained_glass_pane_top'] = '(18, 18, 18)'
colorTable['minecraft:light_gray_terracotta'] = '(135, 130, 98)'
colorTable['minecraft:light_gray_wool'] = '(135, 138, 142)'
colorTable['minecraft:lilac_bottom'] = '(57, 48, 60)'
colorTable['minecraft:lilac_top'] = '(47, 45, 53)'
colorTable['minecraft:lily_of_the_valley'] = '(235, 236, 206)'
colorTable['minecraft:lily_pad'] = '(78, 78, 78)'
colorTable['minecraft:lime_candle'] = '(248, 239, 231)'
colorTable['minecraft:lime_candle_lit'] = '(15, 14, 14)'
colorTable['minecraft:lime_concrete'] = '(169, 25, 108)'
colorTable['minecraft:lime_concrete_powder'] = '(189, 42, 172)'
colorTable['minecraft:lime_glazed_terracotta'] = '(120, 52, 212)'
colorTable['minecraft:lime_shulker_box'] = '(173, 23, 126)'
colorTable['minecraft:lime_stained_glass'] = '(204, 26, 189)'
colorTable['minecraft:lime_stained_glass_pane_top'] = '(25, 24, 22)'
colorTable['minecraft:lime_terracotta'] = '(75, 53, 118)'
colorTable['minecraft:lime_wool'] = '(185, 26, 151)'
colorTable['minecraft:lodestone_side'] = '(123, 119, 121)'
colorTable['minecraft:lodestone_top'] = '(153, 150, 148)'
colorTable['minecraft:loom_bottom'] = '(36, 76, 40)'
colorTable['minecraft:loom_front'] = '(93, 148, 81)'
colorTable['minecraft:loom_side'] = '(128, 146, 72)'
colorTable['minecraft:loom_top'] = '(100, 142, 87)'
colorTable['minecraft:magenta_candle'] = '(240, 247, 233)'
colorTable['minecraft:magenta_candle_lit'] = '(15, 15, 14)'
colorTable['minecraft:magenta_concrete'] = '(169, 84, 49)'
colorTable['minecraft:magenta_concrete_powder'] = '(193, 108, 84)'
colorTable['minecraft:magenta_glazed_terracotta'] = '(208, 173, 97)'
colorTable['minecraft:magenta_shulker_box'] = '(174, 86, 54)'
colorTable['minecraft:magenta_stained_glass'] = '(208, 76, 216)'
colorTable['minecraft:magenta_stained_glass_pane_top'] = '(24, 26, 24)'
colorTable['minecraft:magenta_terracotta'] = '(88, 150, 110)'
colorTable['minecraft:magenta_wool'] = '(190, 102, 69)'
colorTable['minecraft:magma'] = '(143, 97, 40)'
colorTable['minecraft:mangrove_door_bottom'] = '(112, 44, 80)'
colorTable['minecraft:mangrove_door_top'] = '(102, 45, 113)'
colorTable['minecraft:mangrove_leaves'] = '(107, 107, 107)'
colorTable['minecraft:mangrove_log'] = '(42, 84, 46)'
colorTable['minecraft:mangrove_log_top'] = '(43, 42, 103)'
colorTable['minecraft:mangrove_planks'] = '(50, 118, 47)'
colorTable['minecraft:mangrove_propagule'] = '(23, 22, 21)'
colorTable['minecraft:mangrove_propagule_hanging'] = '(30, 30, 27)'
colorTable['minecraft:mangrove_roots_side'] = '(40, 41, 30)'
colorTable['minecraft:mangrove_roots_top'] = '(45, 52, 35)'
colorTable['minecraft:mangrove_trapdoor'] = '(95, 97, 44)'
colorTable['minecraft:manipulator'] = '(162, 162, 159)'
colorTable['minecraft:manipulator_bottom'] = '(77, 116, 60)'
colorTable['minecraft:manipulator_side'] = '(154, 170, 143)'
colorTable['minecraft:manipulator_top1'] = '(93, 93, 131)'
colorTable['minecraft:manipulator_top2'] = '(62, 112, 66)'
colorTable['minecraft:maple_leaves'] = '(153, 190, 65)'
colorTable['minecraft:maple_sapling'] = '(72, 59, 50)'
colorTable['minecraft:medium_amethyst_bud'] = '(37, 40, 41)'
colorTable['minecraft:melon_side'] = '(113, 31, 146)'
colorTable['minecraft:melon_stem'] = '(21, 21, 21)'
colorTable['minecraft:melon_top'] = '(118, 31, 145)'
colorTable['minecraft:modem_back'] = '(78, 78, 78)'
colorTable['minecraft:monitor_advanced_0'] = '(113, 179, 154)'
colorTable['minecraft:monitor_advanced_1'] = '(114, 188, 173)'
colorTable['minecraft:monitor_advanced_15'] = '(68, 66, 62)'
colorTable['minecraft:monitor_advanced_16'] = '(58, 56, 53)'
colorTable['minecraft:monitor_advanced_17'] = '(47, 45, 43)'
colorTable['minecraft:monitor_advanced_18'] = '(35, 33, 33)'
colorTable['minecraft:monitor_advanced_19'] = '(46, 44, 43)'
colorTable['minecraft:monitor_advanced_2'] = '(113, 198, 196)'
colorTable['minecraft:monitor_advanced_20'] = '(45, 44, 42)'
colorTable['minecraft:monitor_advanced_21'] = '(34, 33, 32)'
colorTable['minecraft:monitor_advanced_22'] = '(47, 45, 43)'
colorTable['minecraft:monitor_advanced_23'] = '(33, 32, 31)'
colorTable['minecraft:monitor_advanced_24'] = '(18, 17, 17)'
colorTable['minecraft:monitor_advanced_25'] = '(32, 31, 30)'
colorTable['minecraft:monitor_advanced_26'] = '(17, 17, 17)'
colorTable['minecraft:monitor_advanced_27'] = '(0, 0, 0)'
colorTable['minecraft:monitor_advanced_28'] = '(17, 16, 16)'
colorTable['minecraft:monitor_advanced_29'] = '(31, 30, 30)'
colorTable['minecraft:monitor_advanced_3'] = '(113, 188, 173)'
colorTable['minecraft:monitor_advanced_30'] = '(17, 16, 16)'
colorTable['minecraft:monitor_advanced_31'] = '(31, 30, 29)'
colorTable['minecraft:monitor_advanced_32'] = '(122, 186, 161)'
colorTable['minecraft:monitor_advanced_33'] = '(125, 195, 184)'
colorTable['minecraft:monitor_advanced_34'] = '(126, 203, 204)'
colorTable['minecraft:monitor_advanced_35'] = '(123, 195, 180)'
colorTable['minecraft:monitor_advanced_36'] = '(115, 189, 174)'
colorTable['minecraft:monitor_advanced_37'] = '(115, 198, 196)'
colorTable['minecraft:monitor_advanced_38'] = '(123, 195, 180)'
colorTable['minecraft:monitor_advanced_39'] = '(125, 201, 205)'
colorTable['minecraft:monitor_advanced_4'] = '(122, 186, 161)'
colorTable['minecraft:monitor_advanced_40'] = '(125, 193, 215)'
colorTable['minecraft:monitor_advanced_41'] = '(123, 204, 205)'
colorTable['minecraft:monitor_advanced_42'] = '(114, 190, 209)'
colorTable['minecraft:monitor_advanced_43'] = '(112, 175, 219)'
colorTable['minecraft:monitor_advanced_44'] = '(113, 190, 208)'
colorTable['minecraft:monitor_advanced_45'] = '(115, 199, 199)'
colorTable['minecraft:monitor_advanced_46'] = '(113, 190, 208)'
colorTable['minecraft:monitor_advanced_47'] = '(113, 198, 197)'
colorTable['minecraft:monitor_advanced_5'] = '(123, 195, 180)'
colorTable['minecraft:monitor_advanced_6'] = '(115, 198, 196)'
colorTable['minecraft:monitor_advanced_7'] = '(115, 189, 174)'
colorTable['minecraft:monitor_normal_0'] = '(108, 108, 108)'
colorTable['minecraft:monitor_normal_1'] = '(113, 113, 113)'
colorTable['minecraft:monitor_normal_15'] = '(52, 52, 52)'
colorTable['minecraft:monitor_normal_16'] = '(43, 43, 43)'
colorTable['minecraft:monitor_normal_17'] = '(34, 34, 34)'
colorTable['minecraft:monitor_normal_18'] = '(25, 25, 25)'
colorTable['minecraft:monitor_normal_19'] = '(34, 34, 34)'
colorTable['minecraft:monitor_normal_2'] = '(117, 117, 117)'
colorTable['minecraft:monitor_normal_20'] = '(30, 30, 30)'
colorTable['minecraft:monitor_normal_21'] = '(23, 23, 23)'
colorTable['minecraft:monitor_normal_22'] = '(35, 35, 35)'
colorTable['minecraft:monitor_normal_23'] = '(25, 25, 25)'
colorTable['minecraft:monitor_normal_24'] = '(14, 14, 14)'
colorTable['minecraft:monitor_normal_25'] = '(24, 24, 24)'
colorTable['minecraft:monitor_normal_26'] = '(12, 12, 12)'
colorTable['minecraft:monitor_normal_27'] = '(0, 0, 0)'
colorTable['minecraft:monitor_normal_28'] = '(11, 11, 11)'
colorTable['minecraft:monitor_normal_29'] = '(21, 21, 21)'
colorTable['minecraft:monitor_normal_3'] = '(113, 113, 113)'
colorTable['minecraft:monitor_normal_30'] = '(11, 11, 11)'
colorTable['minecraft:monitor_normal_31'] = '(20, 20, 20)'
colorTable['minecraft:monitor_normal_32'] = '(126, 126, 126)'
colorTable['minecraft:monitor_normal_33'] = '(131, 131, 131)'
colorTable['minecraft:monitor_normal_34'] = '(136, 136, 136)'
colorTable['minecraft:monitor_normal_35'] = '(131, 131, 131)'
colorTable['minecraft:monitor_normal_36'] = '(114, 114, 114)'
colorTable['minecraft:monitor_normal_37'] = '(118, 118, 118)'
colorTable['minecraft:monitor_normal_38'] = '(130, 130, 130)'
colorTable['minecraft:monitor_normal_39'] = '(136, 136, 136)'
colorTable['minecraft:monitor_normal_4'] = '(126, 126, 126)'
colorTable['minecraft:monitor_normal_40'] = '(141, 141, 141)'
colorTable['minecraft:monitor_normal_41'] = '(135, 135, 135)'
colorTable['minecraft:monitor_normal_42'] = '(123, 123, 123)'
colorTable['minecraft:monitor_normal_43'] = '(127, 127, 127)'
colorTable['minecraft:monitor_normal_44'] = '(122, 122, 122)'
colorTable['minecraft:monitor_normal_45'] = '(118, 118, 118)'
colorTable['minecraft:monitor_normal_46'] = '(122, 122, 122)'
colorTable['minecraft:monitor_normal_47'] = '(117, 117, 117)'
colorTable['minecraft:monitor_normal_5'] = '(130, 130, 130)'
colorTable['minecraft:monitor_normal_6'] = '(118, 118, 118)'
colorTable['minecraft:monitor_normal_7'] = '(114, 114, 114)'
colorTable['minecraft:mossy_cobblestone'] = '(119, 96, 93)'
colorTable['minecraft:mossy_stone_bricks'] = '(104, 121, 122)'
colorTable['minecraft:moss_block'] = '(92, 46, 110)'
colorTable['minecraft:mud'] = '(60, 57, 63)'
colorTable['minecraft:muddy_mangrove_roots_side'] = '(70, 48, 52)'
colorTable['minecraft:muddy_mangrove_roots_top'] = '(61, 45, 71)'
colorTable['minecraft:mud_bricks'] = '(112, 137, 80)'
colorTable['minecraft:mushroom_block_inside'] = '(121, 202, 136)'
colorTable['minecraft:mushroom_stem'] = '(186, 203, 189)'
colorTable['minecraft:mycelium_side'] = '(99, 114, 71)'
colorTable['minecraft:mycelium_top'] = '(111, 104, 98)'
colorTable['minecraft:netherite_block'] = '(64, 61, 67)'
colorTable['minecraft:netherrack'] = '(98, 38, 38)'
colorTable['minecraft:nether_bricks'] = '(22, 44, 41)'
colorTable['minecraft:nether_gold_ore'] = '(115, 64, 43)'
colorTable['minecraft:nether_portal'] = '(10, 31, 191)'
colorTable['minecraft:nether_quartz_ore'] = '(118, 77, 56)'
colorTable['minecraft:nether_sprouts'] = '(18, 19, 17)'
colorTable['minecraft:nether_wart_block'] = '(115, 3, 2)'
colorTable['minecraft:nether_wart_stage0'] = '(17, 20, 19)'
colorTable['minecraft:nether_wart_stage1'] = '(54, 48, 32)'
colorTable['minecraft:nether_wart_stage2'] = '(60, 69, 32)'
colorTable['minecraft:note_block'] = '(58, 89, 44)'
colorTable['minecraft:oak_door_bottom'] = '(62, 139, 80)'
colorTable['minecraft:oak_door_top'] = '(67, 115, 65)'
colorTable['minecraft:oak_leaves'] = '(97, 98, 97)'
colorTable['minecraft:oak_log'] = '(51, 109, 56)'
colorTable['minecraft:oak_log_top'] = '(73, 151, 88)'
colorTable['minecraft:oak_planks'] = '(78, 162, 96)'
colorTable['minecraft:oak_sapling'] = '(38, 52, 37)'
colorTable['minecraft:oak_trapdoor'] = '(60, 107, 57)'
colorTable['minecraft:observer_back'] = '(72, 70, 70)'
colorTable['minecraft:observer_back_on'] = '(76, 73, 71)'
colorTable['minecraft:observer_front'] = '(104, 103, 103)'
colorTable['minecraft:observer_side'] = '(70, 69, 69)'
colorTable['minecraft:observer_top'] = '(98, 98, 98)'
colorTable['minecraft:obsidian'] = '(7, 21, 25)'
colorTable['minecraft:ochre_froglight_side'] = '(181, 237, 246)'
colorTable['minecraft:ochre_froglight_top'] = '(206, 233, 251)'
colorTable['minecraft:orange_candle'] = '(252, 236, 233)'
colorTable['minecraft:orange_candle_lit'] = '(19, 18, 17)'
colorTable['minecraft:orange_concrete'] = '(107, 224, 1)'
colorTable['minecraft:orange_concrete_powder'] = '(70, 227, 32)'
colorTable['minecraft:orange_glazed_terracotta'] = '(213, 33, 101)'
colorTable['minecraft:orange_shulker_box'] = '(116, 234, 9)'
colorTable['minecraft:orange_stained_glass'] = '(116, 216, 52)'
colorTable['minecraft:orange_stained_glass_pane_top'] = '(26, 24, 24)'
colorTable['minecraft:orange_terracotta'] = '(126, 162, 38)'
colorTable['minecraft:orange_tulip'] = '(38, 41, 34)'
colorTable['minecraft:orange_wool'] = '(116, 241, 19)'
colorTable['minecraft:oxeye_daisy'] = '(55, 65, 53)'
colorTable['minecraft:oxidized_copper'] = '(83, 128, 163)'
colorTable['minecraft:oxidized_cut_copper'] = '(80, 121, 154)'
colorTable['minecraft:packed_ice'] = '(241, 250, 142)'
colorTable['minecraft:packed_mud'] = '(113, 142, 80)'
colorTable['minecraft:pearlescent_froglight_side'] = '(232, 223, 236)'
colorTable['minecraft:pearlescent_froglight_top'] = '(239, 246, 243)'
colorTable['minecraft:peony_bottom'] = '(67, 49, 56)'
colorTable['minecraft:peony_top'] = '(69, 56, 66)'
colorTable['minecraft:pink_candle'] = '(245, 251, 241)'
colorTable['minecraft:pink_candle_lit'] = '(18, 18, 17)'
colorTable['minecraft:pink_concrete'] = '(101, 213, 129)'
colorTable['minecraft:pink_concrete_powder'] = '(153, 229, 172)'
colorTable['minecraft:pink_glazed_terracotta'] = '(190, 235, 155)'
colorTable['minecraft:pink_grass_side'] = '(116, 75, 141)'
colorTable['minecraft:pink_grass_top'] = '(168, 191, 126)'
colorTable['minecraft:pink_petals'] = '(91, 99, 89)'
colorTable['minecraft:pink_petals_stem'] = '(2, 2, 2)'
colorTable['minecraft:pink_shulker_box'] = '(122, 230, 164)'
colorTable['minecraft:pink_stained_glass'] = '(127, 242, 165)'
colorTable['minecraft:pink_stained_glass_pane_top'] = '(27, 29, 28)'
colorTable['minecraft:pink_terracotta'] = '(113, 78, 162)'
colorTable['minecraft:pink_tulip'] = '(32, 35, 31)'
colorTable['minecraft:pink_wool'] = '(141, 238, 181)'
colorTable['minecraft:piston_bottom'] = '(97, 97, 97)'
colorTable['minecraft:piston_inner'] = '(97, 97, 97)'
colorTable['minecraft:piston_side'] = '(110, 104, 100)'
colorTable['minecraft:piston_top'] = '(86, 153, 81)'
colorTable['minecraft:piston_top_sticky'] = '(113, 87, 158)'
colorTable['minecraft:pitcher_crop_bottom'] = '(57, 50, 36)'
colorTable['minecraft:pitcher_crop_bottom_stage_1'] = '(28, 27, 26)'
colorTable['minecraft:pitcher_crop_bottom_stage_2'] = '(39, 43, 38)'
colorTable['minecraft:pitcher_crop_bottom_stage_3'] = '(33, 35, 31)'
colorTable['minecraft:pitcher_crop_bottom_stage_4'] = '(38, 43, 39)'
colorTable['minecraft:pitcher_crop_side'] = '(42, 38, 36)'
colorTable['minecraft:pitcher_crop_top'] = '(76, 76, 62)'
colorTable['minecraft:pitcher_crop_top_stage_3'] = '(44, 48, 43)'
colorTable['minecraft:pitcher_crop_top_stage_4'] = '(91, 78, 73)'
colorTable['minecraft:podzol_side'] = '(80, 123, 56)'
colorTable['minecraft:podzol_top'] = '(25, 92, 28)'
colorTable['minecraft:pointed_dripstone_down_base'] = '(116, 114, 84)'
colorTable['minecraft:pointed_dripstone_down_frustum'] = '(84, 78, 67)'
colorTable['minecraft:pointed_dripstone_down_middle'] = '(95, 90, 74)'
colorTable['minecraft:pointed_dripstone_down_tip'] = '(28, 27, 26)'
colorTable['minecraft:pointed_dripstone_down_tip_merge'] = '(47, 44, 42)'
colorTable['minecraft:pointed_dripstone_up_base'] = '(116, 114, 84)'
colorTable['minecraft:pointed_dripstone_up_frustum'] = '(84, 78, 67)'
colorTable['minecraft:pointed_dripstone_up_middle'] = '(95, 90, 74)'
colorTable['minecraft:pointed_dripstone_up_tip'] = '(28, 27, 26)'
colorTable['minecraft:pointed_dripstone_up_tip_merge'] = '(47, 44, 42)'
colorTable['minecraft:polished_andesite'] = '(132, 136, 136)'
colorTable['minecraft:polished_basalt_side'] = '(92, 89, 86)'
colorTable['minecraft:polished_basalt_top'] = '(101, 98, 99)'
colorTable['minecraft:polished_blackstone'] = '(54, 59, 47)'
colorTable['minecraft:polished_blackstone_bricks'] = '(40, 53, 43)'
colorTable['minecraft:polished_deepslate'] = '(72, 73, 73)'
colorTable['minecraft:polished_diorite'] = '(195, 195, 192)'
colorTable['minecraft:polished_granite'] = '(154, 150, 89)'
colorTable['minecraft:poppy'] = '(24, 24, 21)'
colorTable['minecraft:poster_printer'] = '(49, 48, 48)'
colorTable['minecraft:potatoes_stage0'] = '(8, 7, 7)'
colorTable['minecraft:potatoes_stage1'] = '(14, 13, 13)'
colorTable['minecraft:potatoes_stage2'] = '(24, 24, 21)'
colorTable['minecraft:potatoes_stage3'] = '(38, 45, 35)'
colorTable['minecraft:potted_azalea_bush_plant'] = '(32, 34, 28)'
colorTable['minecraft:potted_azalea_bush_side'] = '(27, 27, 23)'
colorTable['minecraft:potted_azalea_bush_top'] = '(30, 31, 26)'
colorTable['minecraft:potted_flowering_azalea_bush_plant'] = '(31, 36, 29)'
colorTable['minecraft:potted_flowering_azalea_bush_side'] = '(27, 29, 26)'
colorTable['minecraft:potted_flowering_azalea_bush_top'] = '(31, 34, 29)'
colorTable['minecraft:powder_snow'] = '(253, 248, 252)'
colorTable['minecraft:powered_rail'] = '(81, 93, 64)'
colorTable['minecraft:powered_rail_on'] = '(72, 104, 85)'
colorTable['minecraft:printer_bottom'] = '(110, 110, 110)'
colorTable['minecraft:printer_front'] = '(84, 83, 83)'
colorTable['minecraft:printer_front_both_trays'] = '(107, 107, 107)'
colorTable['minecraft:printer_front_bottom_tray'] = '(104, 104, 104)'
colorTable['minecraft:printer_front_empty'] = '(101, 101, 101)'
colorTable['minecraft:printer_front_top_tray'] = '(104, 104, 104)'
colorTable['minecraft:printer_side'] = '(90, 89, 89)'
colorTable['minecraft:printer_top'] = '(107, 102, 140)'
colorTable['minecraft:prismarine'] = '(135, 98, 165)'
colorTable['minecraft:prismarine_bricks'] = '(106, 99, 172)'
colorTable['minecraft:pumpkin_side'] = '(51, 196, 24)'
colorTable['minecraft:pumpkin_stem'] = '(21, 21, 21)'
colorTable['minecraft:pumpkin_top'] = '(43, 198, 24)'
colorTable['minecraft:purple_candle'] = '(242, 247, 232)'
colorTable['minecraft:purple_candle_lit'] = '(13, 13, 12)'
colorTable['minecraft:purple_concrete'] = '(75, 32, 156)'
colorTable['minecraft:purple_concrete_powder'] = '(129, 56, 178)'
colorTable['minecraft:purple_glazed_terracotta'] = '(60, 63, 152)'
colorTable['minecraft:purple_shulker_box'] = '(83, 33, 156)'
colorTable['minecraft:purple_stained_glass'] = '(103, 64, 178)'
colorTable['minecraft:purple_stained_glass_pane_top'] = '(20, 21, 20)'
colorTable['minecraft:purple_terracotta'] = '(71, 118, 88)'
colorTable['minecraft:purple_wool'] = '(114, 42, 173)'
colorTable['minecraft:purpur_block'] = '(170, 126, 127)'
colorTable['minecraft:purpur_pillar'] = '(172, 129, 130)'
colorTable['minecraft:purpur_pillar_top'] = '(172, 128, 129)'
colorTable['minecraft:quartz_block_bottom'] = '(227, 237, 224)'
colorTable['minecraft:quartz_block_side'] = '(225, 236, 223)'
colorTable['minecraft:quartz_block_top'] = '(225, 236, 223)'
colorTable['minecraft:quartz_bricks'] = '(223, 235, 222)'
colorTable['minecraft:quartz_pillar'] = '(226, 235, 224)'
colorTable['minecraft:quartz_pillar_top'] = '(225, 235, 223)'
colorTable['minecraft:rail'] = '(67, 71, 58)'
colorTable['minecraft:rail_corner'] = '(54, 55, 48)'
colorTable['minecraft:raw_copper_block'] = '(79, 160, 80)'
colorTable['minecraft:raw_gold_block'] = '(46, 222, 130)'
colorTable['minecraft:raw_iron_block'] = '(123, 166, 105)'
colorTable['minecraft:redstone_block'] = '(176, 68, 5)'
colorTable['minecraft:redstone_dust_dot'] = '(27, 27, 27)'
colorTable['minecraft:redstone_dust_line0'] = '(19, 19, 19)'
colorTable['minecraft:redstone_dust_line1'] = '(21, 21, 21)'
colorTable['minecraft:redstone_dust_overlay'] = '(0, 0, 0)'
colorTable['minecraft:redstone_integrator'] = '(97, 71, 71)'
colorTable['minecraft:redstone_lamp'] = '(82, 95, 31)'
colorTable['minecraft:redstone_lamp_on'] = '(89, 143, 56)'
colorTable['minecraft:redstone_ore'] = '(140, 119, 119)'
colorTable['minecraft:redstone_torch'] = '(17, 16, 16)'
colorTable['minecraft:redstone_torch_off'] = '(8, 8, 8)'
colorTable['minecraft:red_candle'] = '(247, 232, 231)'
colorTable['minecraft:red_candle_lit'] = '(15, 14, 14)'
colorTable['minecraft:red_concrete'] = '(142, 33, 33)'
colorTable['minecraft:red_concrete_powder'] = '(168, 59, 51)'
colorTable['minecraft:red_glazed_terracotta'] = '(182, 74, 52)'
colorTable['minecraft:red_mushroom'] = '(28, 27, 25)'
colorTable['minecraft:red_mushroom_block'] = '(200, 44, 44)'
colorTable['minecraft:red_nether_bricks'] = '(6, 41, 70)'
colorTable['minecraft:red_sand'] = '(108, 191, 34)'
colorTable['minecraft:red_sandstone'] = '(99, 187, 29)'
colorTable['minecraft:red_sandstone_bottom'] = '(98, 186, 28)'
colorTable['minecraft:red_sandstone_top'] = '(102, 181, 32)'
colorTable['minecraft:red_shulker_box'] = '(140, 47, 30)'
colorTable['minecraft:red_stained_glass'] = '(153, 51, 51)'
colorTable['minecraft:red_stained_glass_pane_top'] = '(18, 17, 17)'
colorTable['minecraft:red_terracotta'] = '(143, 94, 47)'
colorTable['minecraft:red_tulip'] = '(32, 33, 28)'
colorTable['minecraft:red_wool'] = '(161, 46, 35)'
colorTable['minecraft:reinforced_deepslate_bottom'] = '(83, 79, 84)'
colorTable['minecraft:reinforced_deepslate_side'] = '(112, 98, 105)'
colorTable['minecraft:reinforced_deepslate_top'] = '(80, 81, 84)'
colorTable['minecraft:repeater'] = '(158, 162, 150)'
colorTable['minecraft:repeater_on'] = '(161, 171, 159)'
colorTable['minecraft:repeating_command_block_back'] = '(111, 159, 170)'
colorTable['minecraft:repeating_command_block_conditional'] = '(111, 147, 173)'
colorTable['minecraft:repeating_command_block_front'] = '(112, 159, 178)'
colorTable['minecraft:repeating_command_block_side'] = '(112, 159, 174)'
colorTable['minecraft:respawn_anchor_bottom'] = '(14, 40, 60)'
colorTable['minecraft:respawn_anchor_side0'] = '(25, 41, 63)'
colorTable['minecraft:respawn_anchor_side1'] = '(27, 49, 66)'
colorTable['minecraft:respawn_anchor_side2'] = '(28, 57, 68)'
colorTable['minecraft:respawn_anchor_side3'] = '(29, 66, 71)'
colorTable['minecraft:respawn_anchor_side4'] = '(30, 73, 70)'
colorTable['minecraft:respawn_anchor_top'] = '(35, 73, 150)'
colorTable['minecraft:respawn_anchor_top_off'] = '(22, 31, 52)'
colorTable['minecraft:rooted_dirt'] = '(117, 144, 75)'
colorTable['minecraft:rose_bush_bottom'] = '(77, 48, 94)'
colorTable['minecraft:rose_bush_top'] = '(41, 56, 50)'
colorTable['minecraft:sakura_leaves'] = '(163, 120, 111)'
colorTable['minecraft:sakura_sapling'] = '(85, 73, 72)'
colorTable['minecraft:sand'] = '(163, 219, 210)'
colorTable['minecraft:sandstone'] = '(155, 216, 207)'
colorTable['minecraft:sandstone_bottom'] = '(154, 216, 204)'
colorTable['minecraft:sandstone_top'] = '(170, 224, 220)'
colorTable['minecraft:scaffolding_bottom'] = '(189, 224, 156)'
colorTable['minecraft:scaffolding_side'] = '(89, 119, 77)'
colorTable['minecraft:scaffolding_top'] = '(100, 178, 87)'
colorTable['minecraft:sculk'] = '(36, 19, 16)'
colorTable['minecraft:sculk_catalyst_bottom'] = '(109, 82, 115)'
colorTable['minecraft:sculk_catalyst_side'] = '(67, 61, 100)'
colorTable['minecraft:sculk_catalyst_side_bloom'] = '(67, 63, 103)'
colorTable['minecraft:sculk_catalyst_top'] = '(38, 22, 18)'
colorTable['minecraft:sculk_catalyst_top_bloom'] = '(51, 22, 22)'
colorTable['minecraft:sculk_sensor_bottom'] = '(34, 18, 15)'
colorTable['minecraft:sculk_sensor_side'] = '(24, 16, 16)'
colorTable['minecraft:sculk_sensor_tendril_active'] = '(15, 16, 14)'
colorTable['minecraft:sculk_sensor_tendril_inactive'] = '(9, 10, 9)'
colorTable['minecraft:sculk_sensor_top'] = '(84, 7, 50)'
colorTable['minecraft:sculk_shrieker_bottom'] = '(34, 18, 15)'
colorTable['minecraft:sculk_shrieker_can_summon_inner_top'] = '(70, 29, 61)'
colorTable['minecraft:sculk_shrieker_inner_top'] = '(59, 25, 52)'
colorTable['minecraft:sculk_shrieker_side'] = '(76, 81, 50)'
colorTable['minecraft:sculk_shrieker_top'] = '(42, 41, 40)'
colorTable['minecraft:sculk_vein'] = '(18, 40, 19)'
colorTable['minecraft:seagrass'] = '(56, 99, 87)'
colorTable['minecraft:sea_lantern'] = '(166, 200, 195)'
colorTable['minecraft:sea_pickle'] = '(54, 86, 119)'
colorTable['minecraft:shroomlight'] = '(134, 241, 68)'
colorTable['minecraft:shulker_box'] = '(139, 97, 99)'
colorTable['minecraft:shulker_box_diamond'] = '(144, 96, 120)'
colorTable['minecraft:shulker_box_diamond_black'] = '(33, 41, 33)'
colorTable['minecraft:shulker_box_diamond_blue'] = '(44, 145, 52)'
colorTable['minecraft:shulker_box_diamond_brown'] = '(37, 113, 44)'
colorTable['minecraft:shulker_box_diamond_cyan'] = '(140, 21, 120)'
colorTable['minecraft:shulker_box_diamond_gray'] = '(72, 66, 61)'
colorTable['minecraft:shulker_box_diamond_green'] = '(108, 33, 103)'
colorTable['minecraft:shulker_box_diamond_light_blue'] = '(212, 49, 92)'
colorTable['minecraft:shulker_box_diamond_light_gray'] = '(115, 115, 131)'
colorTable['minecraft:shulker_box_diamond_lime'] = '(176, 24, 78)'
colorTable['minecraft:shulker_box_diamond_magenta'] = '(177, 54, 78)'
colorTable['minecraft:shulker_box_diamond_orange'] = '(11, 233, 34)'
colorTable['minecraft:shulker_box_diamond_pink'] = '(140, 230, 117)'
colorTable['minecraft:shulker_box_diamond_purple'] = '(41, 33, 160)'
colorTable['minecraft:shulker_box_diamond_red'] = '(146, 88, 31)'
colorTable['minecraft:shulker_box_diamond_white'] = '(221, 205, 221)'
colorTable['minecraft:shulker_box_diamond_yellow'] = '(31, 223, 246)'
colorTable['minecraft:shulker_box_gold'] = '(144, 97, 145)'
colorTable['minecraft:shulker_box_gold_black'] = '(38, 42, 34)'
colorTable['minecraft:shulker_box_gold_blue'] = '(90, 146, 45)'
colorTable['minecraft:shulker_box_gold_brown'] = '(71, 114, 38)'
colorTable['minecraft:shulker_box_gold_cyan'] = '(99, 22, 141)'
colorTable['minecraft:shulker_box_gold_gray'] = '(73, 62, 62)'
colorTable['minecraft:shulker_box_gold_green'] = '(74, 34, 109)'
colorTable['minecraft:shulker_box_gold_light_blue'] = '(213, 50, 180)'
colorTable['minecraft:shulker_box_gold_light_gray'] = '(116, 124, 132)'
colorTable['minecraft:shulker_box_gold_lime'] = '(177, 25, 159)'
colorTable['minecraft:shulker_box_gold_magenta'] = '(178, 54, 144)'
colorTable['minecraft:shulker_box_gold_orange'] = '(106, 234, 11)'
colorTable['minecraft:shulker_box_gold_pink'] = '(201, 231, 118)'
colorTable['minecraft:shulker_box_gold_purple'] = '(34, 93, 161)'
colorTable['minecraft:shulker_box_gold_red'] = '(147, 31, 35)'
colorTable['minecraft:shulker_box_gold_white'] = '(214, 206, 222)'
colorTable['minecraft:shulker_box_gold_yellow'] = '(31, 247, 156)'
colorTable['minecraft:shulker_box_iron'] = '(137, 103, 144)'
colorTable['minecraft:shulker_box_iron_black'] = '(39, 41, 34)'
colorTable['minecraft:shulker_box_iron_blue'] = '(107, 145, 51)'
colorTable['minecraft:shulker_box_iron_brown'] = '(84, 113, 43)'
colorTable['minecraft:shulker_box_iron_cyan'] = '(84, 29, 140)'
colorTable['minecraft:shulker_box_iron_gray'] = '(72, 64, 65)'
colorTable['minecraft:shulker_box_iron_green'] = '(66, 39, 107)'
colorTable['minecraft:shulker_box_iron_light_blue'] = '(212, 60, 203)'
colorTable['minecraft:shulker_box_iron_light_gray'] = '(121, 127, 130)'
colorTable['minecraft:shulker_box_iron_lime'] = '(171, 33, 175)'
colorTable['minecraft:shulker_box_iron_magenta'] = '(176, 63, 162)'
colorTable['minecraft:shulker_box_iron_orange'] = '(143, 233, 23)'
colorTable['minecraft:shulker_box_iron_pink'] = '(217, 229, 128)'
colorTable['minecraft:shulker_box_iron_purple'] = '(41, 114, 160)'
colorTable['minecraft:shulker_box_iron_red'] = '(145, 38, 57)'
colorTable['minecraft:shulker_box_iron_white'] = '(217, 216, 221)'
colorTable['minecraft:shulker_box_iron_yellow'] = '(43, 245, 131)'
colorTable['minecraft:slime_block'] = '(192, 136, 92)'
colorTable['minecraft:small_amethyst_bud'] = '(23, 24, 23)'
colorTable['minecraft:small_dripleaf_side'] = '(2, 2, 2)'
colorTable['minecraft:small_dripleaf_stem_bottom'] = '(20, 20, 18)'
colorTable['minecraft:small_dripleaf_stem_top'] = '(17, 16, 15)'
colorTable['minecraft:small_dripleaf_top'] = '(29, 30, 25)'
colorTable['minecraft:smithing_table_bottom'] = '(58, 64, 25)'
colorTable['minecraft:smithing_table_front'] = '(55, 61, 37)'
colorTable['minecraft:smithing_table_side'] = '(59, 57, 36)'
colorTable['minecraft:smithing_table_top'] = '(59, 71, 58)'
colorTable['minecraft:smoker_bottom'] = '(107, 104, 103)'
colorTable['minecraft:smoker_front'] = '(60, 88, 60)'
colorTable['minecraft:smoker_front_on'] = '(78, 119, 73)'
colorTable['minecraft:smoker_side'] = '(103, 103, 75)'
colorTable['minecraft:smoker_top'] = '(85, 82, 82)'
colorTable['minecraft:smooth_basalt'] = '(77, 70, 78)'
colorTable['minecraft:smooth_stone'] = '(159, 159, 159)'
colorTable['minecraft:smooth_stone_slab_side'] = '(168, 168, 168)'
colorTable['minecraft:sniffer_egg_not_cracked_bottom'] = '(28, 53, 43)'
colorTable['minecraft:sniffer_egg_not_cracked_east'] = '(45, 84, 95)'
colorTable['minecraft:sniffer_egg_not_cracked_north'] = '(45, 49, 111)'
colorTable['minecraft:sniffer_egg_not_cracked_south'] = '(45, 53, 112)'
colorTable['minecraft:sniffer_egg_not_cracked_top'] = '(64, 110, 78)'
colorTable['minecraft:sniffer_egg_not_cracked_west'] = '(46, 70, 95)'
colorTable['minecraft:sniffer_egg_slightly_cracked_bottom'] = '(27, 52, 41)'
colorTable['minecraft:sniffer_egg_slightly_cracked_east'] = '(43, 79, 90)'
colorTable['minecraft:sniffer_egg_slightly_cracked_north'] = '(44, 43, 106)'
colorTable['minecraft:sniffer_egg_slightly_cracked_south'] = '(45, 44, 107)'
colorTable['minecraft:sniffer_egg_slightly_cracked_top'] = '(60, 105, 75)'
colorTable['minecraft:sniffer_egg_slightly_cracked_west'] = '(45, 69, 93)'
colorTable['minecraft:sniffer_egg_very_cracked_bottom'] = '(27, 51, 42)'
colorTable['minecraft:sniffer_egg_very_cracked_east'] = '(41, 75, 86)'
colorTable['minecraft:sniffer_egg_very_cracked_north'] = '(41, 41, 101)'
colorTable['minecraft:sniffer_egg_very_cracked_south'] = '(46, 41, 101)'
colorTable['minecraft:sniffer_egg_very_cracked_top'] = '(55, 99, 70)'
colorTable['minecraft:sniffer_egg_very_cracked_west'] = '(42, 63, 87)'
colorTable['minecraft:snow'] = '(254, 249, 250)'
colorTable['minecraft:soul_campfire_fire'] = '(102, 69, 99)'
colorTable['minecraft:soul_campfire_log_lit'] = '(63, 76, 120)'
colorTable['minecraft:soul_fire_0'] = '(39, 28, 222)'
colorTable['minecraft:soul_fire_1'] = '(29, 29, 224)'
colorTable['minecraft:soul_lantern'] = '(48, 41, 46)'
colorTable['minecraft:soul_sand'] = '(72, 81, 51)'
colorTable['minecraft:soul_soil'] = '(67, 76, 47)'
colorTable['minecraft:soul_torch'] = '(10, 10, 10)'
colorTable['minecraft:spawner'] = '(29, 37, 43)'
colorTable['minecraft:speaker_front'] = '(66, 66, 66)'
colorTable['minecraft:speaker_side'] = '(126, 126, 126)'
colorTable['minecraft:speaker_top'] = '(108, 108, 108)'
colorTable['minecraft:sponge'] = '(75, 145, 196)'
colorTable['minecraft:spore_blossom'] = '(75, 96, 103)'
colorTable['minecraft:spore_blossom_base'] = '(53, 88, 86)'
colorTable['minecraft:spruce_door_bottom'] = '(61, 106, 48)'
colorTable['minecraft:spruce_door_top'] = '(63, 106, 50)'
colorTable['minecraft:spruce_leaves'] = '(79, 79, 79)'
colorTable['minecraft:spruce_log'] = '(27, 59, 17)'
colorTable['minecraft:spruce_log_top'] = '(51, 109, 47)'
colorTable['minecraft:spruce_planks'] = '(52, 115, 48)'
colorTable['minecraft:spruce_sapling'] = '(18, 21, 18)'
colorTable['minecraft:spruce_trapdoor'] = '(61, 104, 49)'
colorTable['minecraft:stone'] = '(126, 126, 126)'
colorTable['minecraft:stonecutter_bottom'] = '(118, 118, 118)'
colorTable['minecraft:stonecutter_saw'] = '(71, 71, 71)'
colorTable['minecraft:stonecutter_side'] = '(60, 54, 49)'
colorTable['minecraft:stonecutter_top'] = '(123, 115, 111)'
colorTable['minecraft:stone_bricks'] = '(122, 122, 123)'
colorTable['minecraft:stripped_acacia_log'] = '(175, 175, 60)'
colorTable['minecraft:stripped_acacia_log_top'] = '(144, 166, 52)'
colorTable['minecraft:stripped_bamboo_block'] = '(81, 193, 182)'
colorTable['minecraft:stripped_bamboo_block_top'] = '(71, 178, 166)'
colorTable['minecraft:stripped_birch_log'] = '(119, 197, 166)'
colorTable['minecraft:stripped_birch_log_top'] = '(117, 191, 165)'
colorTable['minecraft:stripped_cherry_log'] = '(215, 184, 145)'
colorTable['minecraft:stripped_cherry_log_top'] = '(207, 221, 157)'
colorTable['minecraft:stripped_crimson_stem'] = '(58, 137, 64)'
colorTable['minecraft:stripped_crimson_stem_top'] = '(57, 122, 64)'
colorTable['minecraft:stripped_dark_oak_log'] = '(37, 73, 36)'
colorTable['minecraft:stripped_dark_oak_log_top'] = '(32, 66, 24)'
colorTable['minecraft:stripped_jungle_log'] = '(89, 171, 85)'
colorTable['minecraft:stripped_jungle_log_top'] = '(105, 166, 82)'
colorTable['minecraft:stripped_mangrove_log'] = '(100, 120, 48)'
colorTable['minecraft:stripped_mangrove_log_top'] = '(109, 42, 67)'
colorTable['minecraft:stripped_oak_log'] = '(86, 177, 108)'
colorTable['minecraft:stripped_oak_log_top'] = '(77, 160, 98)'
colorTable['minecraft:stripped_spruce_log'] = '(53, 116, 61)'
colorTable['minecraft:stripped_spruce_log_top'] = '(47, 106, 51)'
colorTable['minecraft:stripped_warped_stem'] = '(117, 58, 151)'
colorTable['minecraft:stripped_warped_stem_top'] = '(91, 53, 129)'
colorTable['minecraft:structure_block'] = '(90, 82, 76)'
colorTable['minecraft:structure_block_corner'] = '(69, 60, 70)'
colorTable['minecraft:structure_block_data'] = '(81, 69, 67)'
colorTable['minecraft:structure_block_load'] = '(71, 60, 68)'
colorTable['minecraft:structure_block_save'] = '(88, 80, 74)'
colorTable['minecraft:sugar_cane'] = '(78, 106, 103)'
colorTable['minecraft:sunflower_back'] = '(25, 26, 22)'
colorTable['minecraft:sunflower_bottom'] = '(28, 30, 25)'
colorTable['minecraft:sunflower_front'] = '(50, 46, 42)'
colorTable['minecraft:sunflower_top'] = '(16, 15, 14)'
colorTable['minecraft:suspicious_gravel_0'] = '(130, 126, 124)'
colorTable['minecraft:suspicious_gravel_1'] = '(129, 124, 123)'
colorTable['minecraft:suspicious_gravel_2'] = '(126, 122, 120)'
colorTable['minecraft:suspicious_gravel_3'] = '(124, 120, 118)'
colorTable['minecraft:suspicious_sand_0'] = '(159, 218, 205)'
colorTable['minecraft:suspicious_sand_1'] = '(156, 217, 204)'
colorTable['minecraft:suspicious_sand_2'] = '(151, 214, 198)'
colorTable['minecraft:suspicious_sand_3'] = '(145, 211, 188)'
colorTable['minecraft:sweet_berry_bush_stage0'] = '(17, 19, 17)'
colorTable['minecraft:sweet_berry_bush_stage1'] = '(41, 37, 51)'
colorTable['minecraft:sweet_berry_bush_stage2'] = '(49, 41, 58)'
colorTable['minecraft:sweet_berry_bush_stage3'] = '(66, 42, 51)'
colorTable['minecraft:tall_grass_bottom'] = '(94, 94, 95)'
colorTable['minecraft:tall_grass_top'] = '(53, 53, 53)'
colorTable['minecraft:tall_seagrass_bottom'] = '(47, 84, 108)'
colorTable['minecraft:tall_seagrass_top'] = '(109, 137, 100)'
colorTable['minecraft:target_side'] = '(188, 229, 162)'
colorTable['minecraft:target_top'] = '(191, 226, 152)'
colorTable['minecraft:terracotta'] = '(144, 152, 68)'
colorTable['minecraft:tinted_glass'] = '(44, 39, 46)'
colorTable['minecraft:tnt_bottom'] = '(57, 165, 167)'
colorTable['minecraft:tnt_side'] = '(156, 185, 75)'
colorTable['minecraft:tnt_top'] = '(145, 65, 84)'
colorTable['minecraft:torch'] = '(11, 10, 10)'
colorTable['minecraft:torchflower'] = '(39, 47, 52)'
colorTable['minecraft:torchflower_crop_stage0'] = '(10, 10, 9)'
colorTable['minecraft:torchflower_crop_stage1'] = '(25, 30, 28)'
colorTable['minecraft:tripwire'] = '(21, 21, 21)'
colorTable['minecraft:tripwire_hook'] = '(26, 25, 25)'
colorTable['minecraft:tube_coral'] = '(64, 118, 67)'
colorTable['minecraft:tube_coral_block'] = '(132, 207, 49)'
colorTable['minecraft:tube_coral_fan'] = '(51, 49, 64)'
colorTable['minecraft:tuff'] = '(110, 101, 102)'
colorTable['minecraft:turtle_advanced'] = '(38, 36, 35)'
colorTable['minecraft:turtle_colour'] = '(36, 36, 36)'
colorTable['minecraft:turtle_crafty_face'] = '(88, 88, 88)'
colorTable['minecraft:turtle_egg'] = '(186, 204, 181)'
colorTable['minecraft:turtle_egg_slightly_cracked'] = '(180, 198, 173)'
colorTable['minecraft:turtle_egg_very_cracked'] = '(174, 193, 166)'
colorTable['minecraft:turtle_elf_overlay'] = '(21, 20, 19)'
colorTable['minecraft:turtle_normal'] = '(27, 27, 27)'
colorTable['minecraft:turtle_rainbow_overlay'] = '(43, 51, 39)'
colorTable['minecraft:turtle_speaker_face'] = '(76, 76, 76)'
colorTable['minecraft:turtle_trans_overlay'] = '(42, 47, 43)'
colorTable['minecraft:twisting_vines'] = '(31, 40, 39)'
colorTable['minecraft:twisting_vines_plant'] = '(34, 39, 49)'
colorTable['minecraft:verdant_froglight_side'] = '(234, 235, 206)'
colorTable['minecraft:verdant_froglight_top'] = '(242, 244, 227)'
colorTable['minecraft:vine'] = '(66, 66, 66)'
colorTable['minecraft:warped_door_bottom'] = '(79, 45, 119)'
colorTable['minecraft:warped_door_top'] = '(87, 47, 128)'
colorTable['minecraft:warped_fungus'] = '(24, 28, 25)'
colorTable['minecraft:warped_nylium'] = '(45, 58, 117)'
colorTable['minecraft:warped_nylium_side'] = '(45, 41, 99)'
colorTable['minecraft:warped_planks'] = '(67, 43, 105)'
colorTable['minecraft:warped_roots'] = '(35, 39, 51)'
colorTable['minecraft:warped_roots_pot'] = '(30, 39, 38)'
colorTable['minecraft:warped_stem'] = '(46, 37, 89)'
colorTable['minecraft:warped_stem_top'] = '(117, 49, 60)'
colorTable['minecraft:warped_trapdoor'] = '(50, 94, 54)'
colorTable['minecraft:warped_wart_block'] = '(106, 24, 125)'
colorTable['minecraft:water_flow'] = '(169, 169, 169)'
colorTable['minecraft:water_overlay'] = '(165, 165, 165)'
colorTable['minecraft:water_still'] = '(177, 177, 177)'
colorTable['minecraft:weathered_copper'] = '(153, 153, 98)'
colorTable['minecraft:weathered_cut_copper'] = '(146, 125, 96)'
colorTable['minecraft:weeping_vines'] = '(11, 10, 10)'
colorTable['minecraft:weeping_vines_plant'] = '(34, 60, 40)'
colorTable['minecraft:wet_sponge'] = '(71, 80, 181)'
colorTable['minecraft:wheat_stage0'] = '(3, 3, 3)'
colorTable['minecraft:wheat_stage1'] = '(8, 8, 7)'
colorTable['minecraft:wheat_stage2'] = '(17, 17, 15)'
colorTable['minecraft:wheat_stage3'] = '(26, 30, 23)'
colorTable['minecraft:wheat_stage4'] = '(30, 41, 30)'
colorTable['minecraft:wheat_stage5'] = '(34, 54, 39)'
colorTable['minecraft:wheat_stage6'] = '(56, 72, 45)'
colorTable['minecraft:wheat_stage7'] = '(73, 91, 63)'
colorTable['minecraft:white'] = '(255, 255, 255)'
colorTable['minecraft:white_candle'] = '(252, 252, 251)'
colorTable['minecraft:white_candle_lit'] = '(18, 18, 18)'
colorTable['minecraft:white_concrete'] = '(214, 207, 212)'
colorTable['minecraft:white_concrete_powder'] = '(227, 226, 228)'
colorTable['minecraft:white_glazed_terracotta'] = '(150, 238, 222)'
colorTable['minecraft:white_shulker_box'] = '(221, 216, 221)'
colorTable['minecraft:white_stained_glass'] = '(255, 255, 255)'
colorTable['minecraft:white_stained_glass_pane_top'] = '(31, 31, 31)'
colorTable['minecraft:white_terracotta'] = '(200, 210, 162)'
colorTable['minecraft:white_tulip'] = '(31, 32, 29)'
colorTable['minecraft:white_wool'] = '(234, 236, 237)'
colorTable['minecraft:wired_modem_face'] = '(97, 97, 97)'
colorTable['minecraft:wired_modem_face_on'] = '(116, 89, 89)'
colorTable['minecraft:wired_modem_face_peripheral'] = '(104, 96, 96)'
colorTable['minecraft:wired_modem_face_peripheral_on'] = '(123, 85, 85)'
colorTable['minecraft:wireless_modem_advanced_face'] = '(109, 157, 118)'
colorTable['minecraft:wireless_modem_advanced_face_on'] = '(81, 177, 100)'
colorTable['minecraft:wireless_modem_normal_face'] = '(99, 99, 99)'
colorTable['minecraft:wireless_modem_normal_face_on'] = '(118, 90, 90)'
colorTable['minecraft:wither_rose'] = '(9, 8, 8)'
colorTable['minecraft:yellow_candle'] = '(251, 240, 236)'
colorTable['minecraft:yellow_candle_lit'] = '(18, 17, 17)'
colorTable['minecraft:yellow_concrete'] = '(22, 241, 122)'
colorTable['minecraft:yellow_concrete_powder'] = '(55, 233, 212)'
colorTable['minecraft:yellow_glazed_terracotta'] = '(89, 234, 162)'
colorTable['minecraft:yellow_shulker_box'] = '(30, 248, 158)'
colorTable['minecraft:yellow_stained_glass'] = '(51, 130, 229)'
colorTable['minecraft:yellow_stained_glass_pane_top'] = '(28, 26, 25)'
colorTable['minecraft:yellow_terracotta'] = '(36, 186, 79)'
colorTable['minecraft:yellow_wool'] = '(40, 249, 184)'

return colorTable"
xWKRXGLQ,Scary Story,Silviya7,JavaScript,Tuesday 21st of May 2024 08:25:38 AM CDT,"
function solve() {
  //TODO ....

  const BtnPublish= document.getElementById('form-btn');
  const PreviewList= document.getElementById('preview-list');
  const DivMain= document.getElementById('main');

  //input fields
  const InputName=document.getElementById('first-name');
  const InputLName=document.getElementById('last-name');
  const InputAge=document.getElementById('age');
  const InputTitle=document.getElementById('story-title');
  const InputGenre=document.getElementById('genre');

  const InputStory= document.getElementById('story');

  BtnPublish.addEventListener('click',(e)=>{

    e.preventDefault();
if(InputName.value =='' || InputLName.value=='' || InputAge.value=='' || InputTitle.value=='' || InputGenre.value==''
|| InputStory.value=='' ){
  return;
}


    const Elementh1= document.createElement('h4');
    Elementh1.textContent=`Name:${InputName.value} ${InputLName.value}`;//6

    const Elp1= document.createElement('p');//5
    Elp1.textContent=`Age: ${InputAge.value}`;

    const Elp2= document.createElement('p');
    Elp2.textContent=`Title: ${InputTitle.value}`;//7

    const Elp3= document.createElement('p');
    Elp3.textContent=`Genre: ${InputGenre.value}`;//7
    const Elp4= document.createElement('p');
    Elp4.textContent=`${InputStory.value}`;

    const Article = document.createElement('article');
    Article.appendChild(Elementh1);
    Article.appendChild(Elp1);
    Article.appendChild(Elp2);
    Article.appendChild(Elp3);
    Article.appendChild(Elp4);

    const BtnSave= document.createElement('button');
    BtnSave.classList.add('save-btn');
    BtnSave.textContent='Save Story';

    const BtnEdit= document.createElement('button');
    BtnEdit.classList.add('edit-btn');
    BtnEdit.textContent='Edit Story';
    const BtnDelete= document.createElement('button');
    BtnDelete.classList.add('delete-btn');
    BtnDelete.textContent='Delete Story';

   

    //
    const LiElement= document.createElement('li');
    LiElement.classList.add('story-info');
    LiElement.appendChild(Article);
    LiElement.appendChild(BtnSave);
    LiElement.appendChild(BtnEdit);
    LiElement.appendChild(BtnDelete);

    //
   
    PreviewList.appendChild(LiElement);

    BtnPublish.setAttribute('disabled','disabled');

     InputName.value='';
     InputLName.value='';
     InputAge.value='';
     InputTitle.value='';
     InputGenre.value='';
  
     InputStory.value='';

     BtnEdit.addEventListener('click',()=>{

      InputName.value=Elementh1.textContent.substring(5);

      let AllNames= Elementh1.textContent.split(' ');
      InputLName.value=AllNames[1];;
      InputAge.value=Elp1.textContent.substring(5);
      InputTitle.value=Elp2.textContent.substring(7);
      InputGenre.value=Elp3.textContent.substring(7);
   
      InputStory.value=Elp4.textContent;

      BtnSave.setAttribute('disabled','disabled');
      BtnEdit.setAttribute('disabled','disabled');
      BtnDelete.setAttribute('disabled','disabled');

      BtnPublish.removeAttribute('disabled');
      LiElement.remove();
     });

     BtnSave.addEventListener('click',()=>{
      DivMain.innerHTML='';

      const Elementh=  document.createElement('h1');
      Elementh.textContent='Your scary story is saved!';

      DivMain.appendChild(Elementh);

     });
     BtnDelete.addEventListener('click',()=>{
      LiElement.remove();
      BtnPublish.removeAttribute('disabled');
     })
    
  })
}
"
zmguHK4k,items.yml,sneyzi,Java,Tuesday 21st of May 2024 06:37:19 AM CDT,"items:
  1:
    STICK:
      price: 0.1
    POLISHED_GRANITE:
      price: 0.4
    COOKED_COD:
      price: 3.1
    COBBLESTONE:
      price: 0.2
    SAND:
      price: 0.3
    GRAVEL:
      price: 0.5
    COAL_BLOCK:
      price: 9.9
    HAY_BLOCK:
      price: 15.5
    BREWING_STAND:
      price: 3.4
    RED_SAND:
      price: 2.4
    CHORUS_FLOWER:
      price: 23.0
    IRON_TRAPDOOR:
      price: 20.9
    OAK_LEAVES:
      price: 0.6
    MAGMA_BLOCK:
      price: 1.2
    NETHERRACK:
      price: 0.1
    ITEM_FRAME:
      price: 4.9
  2:
    ANDESITE:
      price: 0.3
    POLISHED_ANDESITE:
      price: 0.3
    END_STONE:
      price: 0.7
    LEATHER:
      price: 3.2
    WHITE_CARPET:
      price: 1.3
    PUMPKIN:
      price: 3.3
    OAK_LOG:
      price: 1.6
    GLASS:
      price: 0.8
    COBWEB:
      price: 22.8
    FLINT:
      price: 1.1
    STONE:
      price: 0.6
    BROWN_MUSHROOM:
      price: 4.4
    TORCH:
      price: 0.2
    MYCELIUM:
      price: 2.1
    CACTUS:
      price: 2.4
    ENCHANTING_TABLE:
      price: 50.0
    ARROW:
      price: 2.3
  3:
    WHEAT:
      price: 1.8
    REDSTONE:
      price: 1.1
    SNOWBALL:
      price: 0.7
    QUARTZ_BLOCK:
      price: 2.5
    CAKE:
      price: 13.0
    BONE:
      price: 2.6
    SUGAR:
      price: 2.7
    MELON:
      price: 0.8
    COOKED_BEEF:
      price: 3.0
    COOKED_CHICKEN:
      price: 2.8
    WHITE_WOOL:
      price: 4.2
    BROWN_DYE:
      price: 3.4
  4:
    ENDER_PEARL:
      price: 11.4
    BLAZE_ROD:
      price: 3.0
    NETHER_WART:
      price: 2.1
    SPIDER_EYE:
      price: 2.2
    EMERALD:
      price: 3.1
    BAKED_POTATO:
      price: 2.5
    COOKIE:
      price: 1.8
    OBSERVER:
      price: 1.9
    RAIL:
      price: 1.6
  5:
    CARROT:
      price: 2.2
    RABBIT_FOOT:
      price: 21.5
    RABBIT_HIDE:
      price: 5.1
    CHORUS_FRUIT:
      price: 1.1
    PAPER:
      price: 2.9
    COOKED_RABBIT:
      price: 6.5
    EGG:
      price: 5.1
    GLOWSTONE_DUST:
      price: 1.4
    PRISMARINE_SHARD:
      price: 4.6
    BIRCH_WOOD:
      price: 1.7
    LEAD:
      price: 16.7
  6:
    COBBLESTONE:
      price: 0.4
    NETHER_BRICK:
      price: 2.1
    DIORITE:
      price: 0.5
    GRANITE:
      price: 0.6
    APPLE:
      price: 3.1
    COAL:
      price: 1.1
    STRING:
      price: 2.3
    FEATHER:
      price: 1.9
    GUNPOWDER:
      price: 2.6
    OBSIDIAN:
      price: 4.2
    GRASS_BLOCK:
      price: 0.3
    DIAMOND_HOE:
      price: 13.3
    GOLDEN_APPLE:
      price: 26.3
  7:
    OAK_BOAT:
      price: 1.8
    BOW:
      price: 6.8
    TOTEM_OF_UNDYING:
      price: 666.6
    CLAY:
      price: 0.6
    MILK_BUCKET:
      price: 15.1
    BROWN_DYE:
      price: 3.8
    HOPPER:
      price: 34.2
    GOLDEN_SWORD:
      price: 10.6
    JUKEBOX:
      price: 12.3
    LAVA_BUCKET:
      price: 16.8
    JUNGLE_WOOD:
      price: 1.6
    LEVER:
      price: 0.3
    ICE:
      price: 2.4
  8:
    SHIELD:
      price: 8.8
    OAK_SAPLING:
      price: 0.8
    MAGMA_CREAM:
      price: 6.7
    TNT_MINECART:
      price: 26.2
    VINE:
      price: 2.7
    TRIPWIRE_HOOK:
      price: 3.1
    COOKED_PORKCHOP:
      price: 3.3
    ARMOR_STAND:
      price: 1.8
    ANVIL:
      price: 166.6
    CLOCK:
      price: 16.8
    RED_MUSHROOM:
      price: 4.9
    SADDLE:
      price: 69.0
    OAK_SIGN:
      price: 1.4
    PAINTING:
      price: 3.7
    COOKED_MUTTON:
      price: 3.2"
JWVMzjkR,CryptoCurrency,Silviya7,JavaScript,Tuesday 21st of May 2024 06:24:12 AM CDT,"function solve(input){

    let Message= input.shift();


    let cmdline= input.shift();
   
    while (cmdline!='Buy') {
        
        let AllCmds= cmdline.split('?');
        switch (AllCmds[0]) {
        case ""TakeEven"":
                
        let NewMessage='';
        for (let i = 0; i < Message.length; i++) {
            if(i% 2==0)
            {
           NewMessage +=Message[i];
           
            }
          
        }
        Message= NewMessage;
        console.log(NewMessage);     
        break;
        
        case'ChangeAll':
        let substring=AllCmds[1];
        let replacemen =AllCmds[2];

        while(Message.includes(substring)){
           Message= Message.replace(substring,replacemen)

        }

        console.log(Message);
                break;
        case 'Reverse':
            let substring1=AllCmds[1]; 
            if(Message.includes(substring1)){
                Message= Message.replace(substring1,'');

               let reversedMessage='';
               for (let j = substring1.length-1; j >= 0; j--) {
                reversedMessage +=substring1[j];
               }
               Message +=reversedMessage;
               console.log(Message);
            }
            else{
                console.log('error')
            }
            
                    break;
        }

        cmdline= input.shift();
    }


    console.log(`The cryptocurrency is: ${Message}`)
}"
huPT9Cxz,MiningResourceSplitter,problemlow,Lua,Tuesday 21st of May 2024 06:00:52 AM CDT,"function searchString(bigString, searchString)
    if bigString ~= nil and searchString ~= nil then
        if bigString.match(bigString, searchString) == nil then
            return false
        else
            return true
        end
    else
        return false
    end
end


function check()
    for slot = 1, 16 do
        turtle.select(slot)
        if turtle.getItemSpace(slot) ~= 64 then
            temp = turtle.getItemDetail()
            name = temp.name
            if searchString(name, ""raw"") == true or searchString(name, ""sulfur"") == true then
                print(""Drop Forward"")
                turtle.drop(64)
            else
                print(""Drop Down"")
                turtle.dropDown(64)
            end
        end
    end
end

while true do
    check()
    sleep(2.5)
end
shell.run(""reboot"")"
kk6JgaFz,data933,TestGuy1,JSON,Tuesday 21st of May 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '3805e3ee637717fdff386cd1c133142fad915e9b0d645f7857a0b33c9a8e9aa13dcce0ca7577277eb88503c14e12e23bbd3ec412af6ee65330bf8b828c3068c159ff146378f4b91b43636b1e2ed7200ee9ba5517c076d3f6cc00921179fefdd27e423a7ce12b49387609c46fbf41d35ecb6986d1812b8d6442685878a806ba7f',
  otherdata: [
    'f744c531f6b0d3d8d51161303db19618',
    '6abb555405f02184bfea4b4b36bd117b',
    '8c02f5649e0dd6a0c4003cdefd4ab96d',
    'fa06b5b56ea3332aadf3d26e7d7887d1',
    '5602df381c5f14921af1c6aaf70ae46a',
    'd73dedb81672504dc6f95a0c08e0b22a',
    '7fad1efa09ae76925966939cbdd4b037',
    'ac0bf04ecb8daeb6ac722cc10d30027f'
  ]
}"
RXRUj3FJ,Практика (завдання 10),Lavig,Python,Tuesday 21st of May 2024 05:22:13 AM CDT,"while True:
    try:
        first_number = (input(""\033[1m\033[96mВведіть перше число: \033[0m""))
        second_number = (input(""\033[1m\033[33mВведіть друге число: \033[0m""))
        third_number = (input(""\033[1m\033[95mВведіть третє число: \033[0m""))
        float(first_number)
        float(second_number)
        float(third_number)
        break
    except:
        print(""\033[1m\033[31mВводити можна тільки числа. Спробуйте ще раз!\033[0m"")
        continue
first_number = float(first_number)
second_number = float(second_number)
third_number = float(third_number)
if first_number.is_integer() == True:
    first_number = int(first_number)
if second_number.is_integer() == True:
    second_number = int(second_number)
if third_number.is_integer() == True:
    third_number = int(third_number)
m = max(first_number, second_number, third_number)
print(""\033[92;1mНайбільше число –\033[97m"", m, ""\033[0m"")"
0V6Rpep2,Практика (завдання 9),Lavig,Python,Tuesday 21st of May 2024 05:21:20 AM CDT,"while True:
    even = []
    odd = []
    array = input(""\033[1m\033[33mВведіть через пробіл цілі числа, які бажаєте відсортувати: \033[0m"")
    array = array.split()
    try:
        array = list(map(float, array))
    except:
        print(""\033[1m\033[31mВведений масив має складатися тільки з цілих чисел. Спробуйте ввести інший масив!\033[0m"")
        continue
    is_error = 0
    for i in range(len(array)):
        if array[i].is_integer():
            if array[i] % 2 == 0:
                even.append(int(array[i]))
            else:
                odd.append(int(array[i]))
            array[i] = int(array[i])
            continue
        else:
            is_error = 1
        break
    if is_error == 1:
        print(""\033[1m\033[31mВведений масив має складатися тільки з цілих чисел. Спробуйте ввести інший масив!\033[0m"")
        continue
    else:
        break
if len(even) == 0:
    print(""\033[1m\033[95mПарних чисел у масиві немає\033[0m"")
else:
    print(""\033[1m\033[95mПарні числа:"", ""\033[97m"", end='')
    print(*even, sep=', ', end = ""\033[0m\n"")
if len(odd) == 0:
    print(""\033[92;1mНепарних чисел у масиві немає\033[0m"")
else:
    print(""\033[92;1mНепарні числа:"", ""\033[97m"",  end = '')
    print(*odd, sep=', ', end = ""\033[0m\n"")"
ZFFdt7Tt,Untitled,OneTells,Python,Tuesday 21st of May 2024 05:14:24 AM CDT,"def ultra(base, count, command):
    args = [base, count, command]
    commands = [0]
    result = []

    while commands:
        command = commands.pop()

        if command == 0:
            command_arg = args.pop()
            count_arg = args.pop()
            base_arg = args.pop()

            if command_arg == 1:
                commands.append(1)

                result.append(base_arg)
                result.append(count_arg)
                continue

            if count_arg == 1:
                result.append(base_arg)
                continue

            commands.append(0)
            args.append(base_arg)
            args.append(command_arg - 1)

            commands.append(2)

            commands.append(0)
            args.append(base_arg)
            args.append(count_arg - 1)
            args.append(command_arg)
        elif command == 1:
            result.append(result.pop() + result.pop())
        elif command == 2:
            r = result.pop()

            command_arg = args.pop()
            args.append(r)
            args.append(command_arg)

    return result.pop()


print(ultra(2, 4, 4))"
gwqkWxUR,Untitled,35657,C++,Tuesday 21st of May 2024 05:13:28 AM CDT,"
#include <iostream>

using namespace std;

namespace some_namespace {
	void func() {
		cout << ""Hi func!"" << endl;
	}
	void func2() {
		cout << ""Hi func2!"" << endl;
	}
	namespace some2 {
		void some2_func() {
			cout << ""Hi some2_func!"" << endl;
		}
		namespace some3 {
			void some3_func() {
				cout << ""Hi some3_func!"" << endl;
			}
		}
	}
}

using namespace some_namespace::some2::some3; // подключаем вложенное пространство имен


void global_func() {
	cout << ""Hi global_func!"" << endl;
}


namespace other_namespace {
	void func3() {
		cout << ""Hi func3!"" << endl;
	}
	// еще какие-то функции, классы
}


int main() {
	global_func(); 
	some_namespace::func();
	some_namespace::func2();
	some_namespace::some2::some2_func(); 
	some3_func(); // можем обращаться напрямую если подключили данное вложенное пространство
	other_namespace::func3();
}"
GQAcMGBc,Untitled,35657,C++,Tuesday 21st of May 2024 05:12:40 AM CDT,"
#include <iostream>

using namespace std;


void global_func() {
	cout << ""Hi global_func!"" << endl;
}

namespace some_namespace {
	void func() {
		cout << ""Hi func!"" << endl;
	}
	void func2() {
		cout << ""Hi func2!"" << endl;
	}
	namespace some2 {
		void some2_func() {
			cout << ""Hi some2_func!"" << endl;
		}
		namespace some3 {
			void some3_func() {
				cout << ""Hi some3_func!"" << endl;
			}
		}
	}
}

namespace other_namespace {
	void func3() {
		cout << ""Hi func3!"" << endl;
	}
	// еще какие-то функции, классы
}


int main() {
	global_func(); // из глобального пространства имен можно вызывать функции/классы без указания идентификатора
	some_namespace::func();
	some_namespace::func2();
	some_namespace::some2::some2_func(); // обращаемся к функции из вложенного пространства имен
	some_namespace::some2::some3::some3_func(); // обращаемся к функции из вложенного пространства имен
	//some_namespace::some2_func(); // так обратиться не получится
	other_namespace::func3();
}"
pC87AkMW,Untitled,35657,C++,Tuesday 21st of May 2024 05:11:56 AM CDT,"
#include <iostream>

using namespace std;

namespace some_namespace { // объявляем пространство имен (предполагается что это сделано в каком-то из подключаемых файлов)
	void func() {
		cout << ""Hi func!"" << endl;
	}
	void func2() {
		cout << ""Hi func2!"" << endl;
	}
	// еще какие-то функции, классы
}

using namespace some_namespace; // добавляем все имена some_namespace в глобальное пространство имен


void global_func() {
	cout << ""Hi global_func!"" << endl;
}

namespace other_namespace {
	void func3() {
		cout << ""Hi func3!"" << endl;
	}
	// еще какие-то функции, классы
}


int main() {
	global_func(); 
	func(); // теперь func доступна без идентификатора пространтсва имен
	func2(); // и func2 тоже доступна
	other_namespace::func3(); // а func3 нет
}"
mdZJ7T6d,Практика (завдання 8),Lavig,Python,Tuesday 21st of May 2024 05:09:16 AM CDT,"sentence = input(""\033[92;1mВведіть будь-яке речення: \033[0m"")
print(""\033[1m\033[96mКількість симолів у реченні –\033[97m"", len(sentence), ""\033[0m"")"
uEhFBBYb,Практика (завдання 7),Lavig,Python,Tuesday 21st of May 2024 05:07:56 AM CDT,"while True:
    try:
        number = float((input(""\033[1m\033[33mВведіть будь-яке натуральне п'ятизначне число: \033[0m"")))
    except:
        print(""\033[1m\033[31mВводити можна тільки числа. Спробуйте ще раз!\033[0m"")
        continue
    if number < 0:
        print(""\033[1m\033[31mВводити можна тільки натуральні числа. Спробуйте ще раз!\033[0m"")
        continue
    if number.is_integer() == True:
        number = int(number)
    else:
        print(""\033[1m\033[31mВводити можна тільки натуральні числа. Спробуйте ще раз!\033[0m"")
        continue
    number = str(number)
    length = len(number)
    if length != 5:
        print(""\033[1m\033[31mВводити можна тільки п'ятизначні числа. Спробуйте ще раз!\033[0m"")
        continue
    break
number = int(number)
print(""\033[1m\033[95mПерша цифра числа –\033[97m"", number // 10000, ""\033[0m"")
print(""\033[92;1mДруга цифра числа –\033[97m"", number % 10000 // 1000, ""\033[0m"")
print(""\033[1m\033[96mТретя цифра числа –\033[97m"", number % 1000 // 100, ""\033[0m"")
print(""\033[1m\033[33mЧетверта цифра числа –\033[97m"", number % 100 // 10, ""\033[0m"")
print(""\033[1m\033[95mП'ята цифра числа –\033[97m"", number % 10 // 1, ""\033[0m"")"
7H8YfqAJ,Untitled,b_gandurov,C#,Tuesday 21st of May 2024 05:06:32 AM CDT,"using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;

class Program
{
    static void Main()
    {
        var items = new SortedDictionary<string, Tuple<double, string>>();
        var itemsByType = new Dictionary<string, SortedSet<string>>();
        var itemsByPrice = new SortedDictionary<double, SortedSet<string>>();

        while (true)
        {
            string input = Console.ReadLine();
            if (input == ""end"")
            {
                break;
            }

            var inputElements = input.Split();
            var command = inputElements[0];

            switch (command)
            {
                case ""add"":
                    string name = inputElements[1];
                    double price = double.Parse(inputElements[2], CultureInfo.InvariantCulture);
                    string itemType = inputElements[3];
                    if (items.ContainsKey(name))
                    {
                        Console.WriteLine($""Error: Item {name} already exists"");
                    }
                    else
                    {
                        items[name] = Tuple.Create(price, itemType);
                        if (!itemsByType.ContainsKey(itemType))
                        {
                            itemsByType[itemType] = new SortedSet<string>();
                        }
                        itemsByType[itemType].Add(name);

                        if (!itemsByPrice.ContainsKey(price))
                        {
                            itemsByPrice[price] = new SortedSet<string>();
                        }
                        itemsByPrice[price].Add(name);

                        Console.WriteLine($""Ok: Item {name} added successfully"");
                    }
                    break;

                case ""filter"":
                    var filterType = inputElements[2];
                    if (filterType == ""type"")
                    {
                        FilterByType(inputElements[3], items, itemsByType);
                    }
                    else if (filterType == ""price"")
                    {
                        if (inputElements.Length == 7)
                        {
                            double minPrice = double.Parse(inputElements[4], CultureInfo.InvariantCulture);
                            double maxPrice = double.Parse(inputElements[6], CultureInfo.InvariantCulture);
                            FilterByPriceRange(minPrice, maxPrice, items, itemsByPrice);
                        }
                        else if (inputElements[3] == ""from"")
                        {
                            double minPrice = double.Parse(inputElements[4], CultureInfo.InvariantCulture);
                            FilterByPriceFrom(minPrice, items, itemsByPrice);
                        }
                        else if (inputElements[3] == ""to"")
                        {
                            double maxPrice = double.Parse(inputElements[4], CultureInfo.InvariantCulture);
                            FilterByPriceTo(maxPrice, items, itemsByPrice);
                        }
                    }
                    break;
            }
        }
    }

    static void FilterByType(string itemType, SortedDictionary<string, Tuple<double, string>> items, Dictionary<string, SortedSet<string>> itemsByType)
    {
        if (!itemsByType.ContainsKey(itemType))
        {
            Console.WriteLine($""Error: Type {itemType} does not exist"");
            return;
        }

        var filteredItems = itemsByType[itemType]
            .Select(name => new { Name = name, Item = items[name] })
            .OrderBy(price => price.Item.Item1)
            .ThenBy(name => name.Name)
            .ThenBy(type => type.Item.Item2)
            .Take(10)
            .Select(element => $""{element.Name}({element.Item.Item1.ToString(""F2"", CultureInfo.InvariantCulture)})"")
            .ToList();

        PrintFilteredItems(filteredItems);
    }

    static void FilterByPriceRange(double minPrice, double maxPrice, SortedDictionary<string, Tuple<double, string>> items, SortedDictionary<double, SortedSet<string>> itemsByPrice)
    {
        var filteredItems = itemsByPrice
            .Where(kv => kv.Key >= minPrice && kv.Key <= maxPrice)
            .SelectMany(kv => kv.Value.Select(name => new { Name = name, Item = items[name] }))
            .OrderBy(price => price.Item.Item1)
            .ThenBy(name => name.Name)
            .ThenBy(type => type.Item.Item2)
            .Take(10)
            .Select(element => $""{element.Name}({element.Item.Item1.ToString(""F2"", CultureInfo.InvariantCulture)})"")
            .ToList();

        PrintFilteredItems(filteredItems);
    }

    static void FilterByPriceFrom(double minPrice, SortedDictionary<string, Tuple<double, string>> items, SortedDictionary<double, SortedSet<string>> itemsByPrice)
    {
        var filteredItems = itemsByPrice
            .Where(kv => kv.Key >= minPrice)
            .SelectMany(kv => kv.Value.Select(name => new { Name = name, Item = items[name] }))
            .OrderBy(price => price.Item.Item1)
            .ThenBy(name => name.Name)
            .ThenBy(type => type.Item.Item2)
            .Take(10)
            .Select(element => $""{element.Name}({element.Item.Item1.ToString(""F2"", CultureInfo.InvariantCulture)})"")
            .ToList();

        PrintFilteredItems(filteredItems);
    }

    static void FilterByPriceTo(double maxPrice, SortedDictionary<string, Tuple<double, string>> items, SortedDictionary<double, SortedSet<string>> itemsByPrice)
    {
        var filteredItems = itemsByPrice
            .Where(kv => kv.Key <= maxPrice)
            .SelectMany(kv => kv.Value.Select(name => new { Name = name, Item = items[name] }))
            .OrderBy(price => price.Item.Item1)
            .ThenBy(name => name.Name)
            .ThenBy(type => type.Item.Item2)
            .Take(10)
            .Select(element => $""{element.Name}({element.Item.Item1.ToString(""F2"", CultureInfo.InvariantCulture)})"")
            .ToList();

        PrintFilteredItems(filteredItems);
    }

    static void PrintFilteredItems(List<string> filteredItems)
    {
        if (filteredItems.Any())
        {
            Console.WriteLine($""Ok: {string.Join("", "", filteredItems)}"");
        }
        else
        {
            Console.WriteLine(""Ok: "");
        }
    }
}"
