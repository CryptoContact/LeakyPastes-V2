id,title,username,language,date,content
L7RCJtxw,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,Bufayez,JavaScript,Thursday 20th of June 2024 07:05:15 AM CDT,"G2A.com free voucher & games guide.
Any item for free on G2A.com including Amazon gift cards & all else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17th 2024

"
vbcyjTYN,ü§ëG2A.com Free Gift Card Guide June 2024 V2ü§ë,x2w,GetText,Thursday 20th of June 2024 07:04:31 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered!

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
20 June 2024"
3MPgSVu6,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,buch,JavaScript,Thursday 20th of June 2024 06:59:15 AM CDT,"G2A.com complimentary gift card & games guide.
Any voucher for free on G2A.com including Playstation gift cards & everything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17 2024

"
R2YDFtDZ,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,Alfonso1119,JavaScript,Thursday 20th of June 2024 06:53:14 AM CDT,"G2A.com complimentary voucher & games guide.
Any gift card for free on G2A.com including Xbox gift cards & anything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17th 2024

"
bV3GuUus,ü§ëG2A.com Free Gift Card Guide June 2024 V2ü§ë,BitcoinScript2020,GetText,Thursday 20th of June 2024 06:49:27 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.,

This is the most up to date version of this script. Any other one posted will not work!
 

PDF guide here;
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view


Working as of:
20 June 2024"
Fxpm5C16,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,Garoam,JavaScript,Thursday 20th of June 2024 06:47:16 AM CDT,"G2A.com free gift card & gaming guide.
Any item for free on G2A.com including Steam gift cards & everything else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17th 2024

"
YbZwnYFf,ECCS Searcher V2.3,ERROR_CODE,Lua,Thursday 20th of June 2024 06:45:18 AM CDT,"if game:GetService(""CoreGui""):FindFirstChild(""UIGui"") then
game:GetService(""CoreGui""):FindFirstChild(""UIGui""):Destroy()
end
UIGui = Instance.new(""ScreenGui"")
UserInputService = game:GetService(""UserInputService"")
MainFrame = Instance.new(""ImageLabel"")
UIAspectRatioConstraint = Instance.new(""UIAspectRatioConstraint"")
UICorner = Instance.new(""UICorner"")
SearchBox = Instance.new(""TextBox"")
UICorner_3 = Instance.new(""UICorner"")
Title = Instance.new(""TextLabel"")
UICorner_4 = Instance.new(""UICorner"")
UICorner_5 = Instance.new(""UICorner"")
ScriptAuthor = Instance.new(""TextLabel"")
TopbarBottomCover = Instance.new(""Frame"")
ScriptListFrame = Instance.new(""ScrollingFrame"")
UIPadding = Instance.new(""UIPadding"")
Scripts = Instance.new(""Folder"")
UIGridLayout = Instance.new(""UIGridLayout"")
ScriptFrame = Instance.new(""Frame"")
UICorner_6 = Instance.new(""UICorner"")
ScriptTitle = Instance.new(""TextLabel"")
ExecuteButton = Instance.new(""TextButton"")
UICorner_7 = Instance.new(""UICorner"")
ScriptGame = Instance.new(""TextLabel"")
VerifiedScriptFrame = Instance.new(""Frame"")
UICorner_9 = Instance.new(""UICorner"")
ScriptTitle_2 = Instance.new(""TextLabel"")
VerifiedIcon = Instance.new(""ImageLabel"")
ExecuteButton_2 = Instance.new(""TextButton"")
UICorner_10 = Instance.new(""UICorner"")
UICorner_11 = Instance.new(""UICorner"")
ScriptAuthor_2 = Instance.new(""TextLabel"")
ScriptGame_2 = Instance.new(""TextLabel"")
ScriptListBackgroundFrame = Instance.new(""Frame"")
UICorner_12 = Instance.new(""UICorner"")
InfoBoxDescription = Instance.new(""TextButton"")
Author_2 = Instance.new(""TextLabel"")
UICorner_22 = Instance.new(""UICorner"")
UIListLayout_3 = Instance.new(""UIListLayout"")
UIClick = Instance.new(""Sound"") 
OpenCloseSearcherButton = Instance.new(""TextButton"")
OpenCloseSearcherButtonUICorner = Instance.new(""UICorner"")
PlayerIcon = Instance.new(""ImageButton"")
PlayerIconUICorner = Instance.new(""UICorner"")
MenuBarFrame = Instance.new(""Frame"")
MenuBarFrameUICorner = Instance.new(""UICorner"")
SearcherMenuButton = Instance.new(""TextButton"")
SearcherMenuButtonUICorner = Instance.new(""UICorner"")
ExecutorMenuButton = Instance.new(""TextButton"")
ExecutorMenuButtonUICorner = Instance.new(""UICorner"")
ExecutorMenuScrollingFrame = Instance.new(""ScrollingFrame"")
UINoScriptsFound = Instance.new(""Sound"")
PlayerDataFrame = Instance.new(""Frame"")
PlayerPicture = Instance.new(""ImageLabel"")
PlayerPictureUICorner = Instance.new(""UICorner"")
PlayerDataTextLabel = Instance.new(""TextLabel"")
PlayerIP = Instance.new(""TextLabel"")
PlayerID = Instance.new(""TextLabel"")
PlayerDisplayName = Instance.new(""TextLabel"")
PlayerName = Instance.new(""TextLabel"")
PlayerAge = Instance.new(""TextLabel"")
PlayerCountry = Instance.new(""TextLabel"")
LocalizationService = game:GetService(""LocalizationService"")
ReloadPlayerDataButton = Instance.new(""TextButton"")
ReloadPlayerDataButtonUICorner = Instance.new(""UICorner"")
CopyPlayerDataButton = Instance.new(""TextButton"")
CopyPlayerDataButtonUICorner = Instance.new(""UICorner"")
ExecutorTextBox = Instance.new(""TextBox"")
ExecutorTextBoxUICorner = Instance.new(""UICorner"")
ExecuteTextBoxButton = Instance.new(""TextButton"")
ExecuteTextBoxButtonUICorner = Instance.new(""UICorner"")
ClearTextBoxButton = Instance.new(""TextButton"")
ClearTextBoxButtonUICorner = Instance.new(""UICorner"")
CopyTextBoxButton = Instance.new(""TextButton"")
CopyTextBoxButtonUICorner = Instance.new(""UICorner"")
CopyScriptsButton = Instance.new(""TextButton"")
CopyScriptsButtonUICorner = Instance.new(""UICorner"")
CopyScriptsButton_2 = Instance.new(""TextButton"")
CopyScriptsButtonUICorner_2 = Instance.new(""UICorner"")
DevelopersButton = Instance.new(""TextButton"")
DevelopersButtonUICorner = Instance.new(""UICorner"")
DevelopersFrame = Instance.new(""Frame"")
DevIcon = Instance.new(""ImageLabel"")
DevIconUI = Instance.new(""UICorner"")
DevDesc = Instance.new(""TextLabel"")
DevDescUICorner = Instance.new(""UICorner"")
PlayerDataBackground = Instance.new(""Frame"")
PlayerDataBackgroundUICorner = Instance.new(""UICorner"")
ExecutorMenuScrollingFrameUICorner = Instance.new(""UICorner"")
SearchButton = Instance.new(""TextButton"")
SearchButtonUICorner = Instance.new(""UICorner"")
CopyLinkButton = Instance.new(""TextButton"")
CopyLinkButtonUICorner = Instance.new(""UICorner"")
CopyLinkButton_2 = Instance.new(""TextButton"")
CopyLinkButtonUICorner_2 = Instance.new(""UICorner"")
Loading = Instance.new(""TextLabel"")
local DescScriptButton = Instance.new(""TextButton"")
local DescScriptButtonUICorner = Instance.new(""UICorner"")
local DescScriptButton_2 = Instance.new(""TextButton"")
local DescScriptButtonUICorner_2 = Instance.new(""UICorner"")
local DescUICorner = Instance.new(""UICorner"")
local CloseDescButton = Instance.new(""TextButton"")
local CloseDescButtonUICorner = Instance.new(""UICorner"")
local UIAspectRatioConstraint_2 = Instance.new(""UIAspectRatioConstraint"")
local OpenInExecutorButton = Instance.new(""TextButton"")
local OpenInExecutorButtonUICorner = Instance.new(""UICorner"")
local OpenInExecutorButton_2 = Instance.new(""TextButton"")
local OpenInExecutorButtonUICorner_2 = Instance.new(""UICorner"")
local PasteScriptButton = Instance.new(""TextButton"")
local PasteScriptButtonUICorner = Instance.new(""UICorner"")
local AutoExecuteButton = Instance.new(""TextButton"")
local AutoExecuteButtonUICorner = Instance.new(""UICorner"")
local AutoExecuteButton_2 = Instance.new(""TextButton"")
local AutoExecuteButtonUICorner_2 = Instance.new(""UICorner"")
local Hint = Instance.new(""TextLabel"")
local HintUICorner = Instance.new(""UICorner"")

local Region, Country = pcall(function()
return LocalizationService:GetCountryRegionForPlayerAsync(game.Players.LocalPlayer)
end)

UIClick.Parent = game.Workspace
UIClick.SoundId = ""rbxassetid://9119707097""
UIClick.Playing = true
UIClick.Looped = false
UIClick.Volume = 1
UIClick:Stop()

UINoScriptsFound.Parent = game.Workspace
UINoScriptsFound.SoundId = ""rbxassetid://6243040798""
UINoScriptsFound.Playing = true
UINoScriptsFound.Looped = false
UINoScriptsFound.Volume = 1
UINoScriptsFound:Stop()

UIGui.Name = ""UIGui""
UIGui.Parent = game.CoreGui
UIGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
game.CoreGui.UIGui.Enabled = true

OpenCloseSearcherButton.Parent = UIGui
OpenCloseSearcherButton.Size = UDim2.new(0, 43.5, 0, 43.5)
OpenCloseSearcherButton.Position = UDim2.new(0, 160, 0, -45.8)
OpenCloseSearcherButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
OpenCloseSearcherButton.BackgroundTransparency = 0.3
OpenCloseSearcherButton.Text = "" üîé ""
OpenCloseSearcherButton.TextColor3 = Color3.fromRGB(200, 200, 200)
OpenCloseSearcherButton.Font = 'Code'
OpenCloseSearcherButton.TextSize = 20
OpenCloseSearcherButton.AutoButtonColor = false

OpenCloseSearcherButtonUICorner.Parent = OpenCloseSearcherButton
OpenCloseSearcherButtonUICorner.CornerRadius = UDim.new(1, 0)

MainFrame.Name = ""MainFrame""
MainFrame.Parent = UIGui
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
MainFrame.Position = UDim2.new(0.5, 0, -0.5, 0)
MainFrame.Size = UDim2.new(0, 450, 0, 400)
MainFrame.ZIndex = 2
MainFrame.Image = ""rbxassetid://16925670362""

UIAspectRatioConstraint.Parent = MainFrame
UIAspectRatioConstraint.AspectRatio = 1.778

UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = MainFrame

Hint.Name = ""Hint""
Hint.Parent = UIGui
Hint.AnchorPoint = Vector2.new(0.5, 0.5)
Hint.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Hint.BackgroundTransparency = 0.7
Hint.Position = UDim2.new(0.5, 0, 2, 0)
Hint.Size = UDim2.new(0, 180, 0, 120)
Hint.ZIndex = 2
Hint.Font = Enum.Font.FredokaOne
Hint.TextSize = 30
Hint.TextColor3 = Color3.fromRGB(255, 255, 255)
Hint.Text = ""Welcome""
Hint.TextWrapped = true
Hint.TextScaled = true

HintUICorner.CornerRadius = UDim.new(0, 12)
HintUICorner.Parent = Hint

Loading.Name = ""PlayerName""
Loading.Parent = MainFrame
Loading.BackgroundTransparency = 1
Loading.Position = UDim2.new(0, 260, 0.45, 10)
Loading.Size = UDim2.new(0, 5, 0, 5)
Loading.Font = Enum.Font.FredokaOne
Loading.Text = ""Loading...""
Loading.TextColor3 = Color3.fromRGB(255, 255, 255)
Loading.TextSize = 30

OpenCloseSearcherButton.MouseButton1Click:Connect(function()
writefile(""ES.ECCS"", """"..ExecutorTextBox.Text)
if OpenCloseSearcherButton.Text == ""üîé"" then
OpenCloseSearcherButton.Text = "" üîé ""
UIClick:Play()
MainFrame.Position = UDim2.new(0.5, 0, -0.5, 0)
MainFrame:TweenPosition(UDim2.new(0.5, 0, 0.5, 0),""InOut"",""Sine"",0.3)
else
if OpenCloseSearcherButton.Text == "" üîé "" then
OpenCloseSearcherButton.Text = ""üîé""
UIClick:Play()
MainFrame:TweenPosition(UDim2.new(0.5, 0, 2, 0),""InOut"",""Sine"",0.3)
end
end
end)

spawn(function()
while wait() do
if MainFrame.Position == UDim2.new(0.5, 0, 2, 0) then
MainFrame.Visible = false
else
MainFrame.Visible = true
end
if Hint.Position == UDim2.new(0.5, 0, 0.5, 0) then
wait(3)
Hint:TweenPosition(UDim2.new(0.5, 0, 2, 0),""InOut"",""Sine"",0.3)
end
end
end)

DevelopersFrame.Visible = false

ExecutorMenuScrollingFrame.Visible = false

MenuBarFrame.Name = ""MenuBarFrame""
MenuBarFrame.Parent = MainFrame
MenuBarFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
MenuBarFrame.BackgroundTransparency = 0.8
MenuBarFrame.Position = UDim2.new(0, 10, 0.1, 10)
MenuBarFrame.Size = UDim2.new(0, 60, 0, 200)

MenuBarFrameUICorner.CornerRadius = UDim.new(0, 12)
MenuBarFrameUICorner.Parent = MenuBarFrame

SearchBox.Name = ""SearchBox""
SearchBox.Parent = MainFrame
SearchBox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
SearchBox.BackgroundTransparency = 0.85
SearchBox.Position = UDim2.new(0, 9, 0, 5)
SearchBox.Size = UDim2.new(0, 350, 0, 25)
SearchBox.ClearTextOnFocus = false
SearchBox.Font = Enum.Font.FredokaOne
SearchBox.PlaceholderText = ""ECCS‚Ä¢Searcher""
SearchBox.Text = """"
SearchBox.TextColor3 = Color3.fromRGB(255, 255, 255)
SearchBox.TextScaled = true
SearchBox.TextSize = 14.000
SearchBox.TextWrapped = true
SearchBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)

UICorner_3.CornerRadius = UDim.new(0, 12)
UICorner_3.Parent = SearchBox

local Frame = ({
[""01 01""] = ""rbxassetid://16779094159"",
[(function(Year)
local A = math.floor(Year/100)
local B = math.floor((13+8*A)/25)
local C = (15-B+A-math.floor(A/4))%30
local D = (4+A-math.floor(A/4))%7
local E = (19*(Year%19)+C)%30
local F = (2*(Year%4)+4*(Year%7)+6*E+D)%7
local G = (22+E+F)
if E == 29 and F == 6 then
return ""04 19""
elseif E == 28 and F == 6 then
return ""04 18""
elseif 31 < G then
return (""04 %02d""):format(G-31)
end
return (""03 %02d""):format(G)
end)(tonumber(os.date""%Y""))] = ""rbxassetid://16779090090"",
[""10 31""] = ""rbxassetid://16779133028"",
[""12 25""] = ""rbxassetid://16779174392""
})[os.date(""%m %d"")]
if Frame then
MainFrame.Image = Frame
end

SearchButton.Name = ""SearchButton""
SearchButton.Parent = MainFrame
SearchButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
SearchButton.Position = UDim2.new(0, 363, 0, 5)
SearchButton.Size = UDim2.new(0, 80, 0, 25)
SearchButton.AutoButtonColor = false
SearchButton.Font = Enum.Font.Code
SearchButton.Text = ""üîé""
SearchButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SearchButton.TextSize = 15
SearchButton.BackgroundTransparency = 0.85


SearchButtonUICorner.CornerRadius = UDim.new(0, 12)
SearchButtonUICorner.Parent = SearchButton

Title.Name = ""Title""
Title.Parent = MainFrame
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1
Title.Size = UDim2.new(0, 300, 0, 40)
Title.Font = Enum.Font.Code
Title.Text = """"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 28

DevelopersButton.Name = ""DevelopersButton""
DevelopersButton.Position = UDim2.new(0, 20, 0.135, 10)
DevelopersButton.Parent = MainFrame
DevelopersButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
DevelopersButton.BackgroundTransparency = 0.7
DevelopersButton.LayoutOrder = 1
DevelopersButton.Size = UDim2.new(0, 40, 0, 40)
DevelopersButton.AutoButtonColor = false
DevelopersButton.Font = Enum.Font.FredokaOne
DevelopersButton.Text = ""i""
DevelopersButton.TextColor3 = Color3.fromRGB(255, 255, 255)
DevelopersButton.TextSize = 25

DevelopersButtonUICorner.Parent = DevelopersButton
DevelopersButtonUICorner.CornerRadius = UDim.new(0, 12)

DevelopersButton.MouseButton1Click:Connect(function()
UIClick:Play()
PasteScriptButton.Visible = false
ScriptListFrame.Visible = false
PlayerDataFrame.Visible = false
ExecutorMenuScrollingFrame.Visible = false
ClearTextBoxButton.Visible = false
CopyTextBoxButton.Visible = false
ExecuteTextBoxButton.Visible = false
DevelopersFrame.Visible = true
InfoBoxDescription.Visible = false
PlayerIcon.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
DevelopersButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
SearcherMenuButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ExecutorMenuButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
writefile(""ECCS_Searcher_V2.3/Executor.ECCS"", ExecutorTextBox.Text)
end)

DevelopersFrame.Name = ""DevelopersFrame""
DevelopersFrame.Parent = MainFrame
DevelopersFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DevelopersFrame.BackgroundTransparency = 1
DevelopersFrame.BorderSizePixel = 0
DevelopersFrame.Position = UDim2.new(0, 70, 0.1, 10)
DevelopersFrame.Size = UDim2.new(0, 380, 0, 199)
DevelopersFrame.ZIndex = 2

DevIcon.Name = ""DevIcon""
DevIcon.Parent = DevelopersFrame
DevIcon.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
DevIcon.BackgroundTransparency = 0.9
DevIcon.Position = UDim2.new(0, 20, 0.01, 10)
DevIcon.Size = UDim2.new(0, 180, 0, 180)
DevIcon.Image = ""https://www.roblox.com/headshot-thumbnail/image?userId=3323558881&width=999&height=999&format=png""

DevIconUI.Parent = DevIcon
DevIconUI.CornerRadius = UDim.new(0, 12)

DevDesc.Name = ""DevDesc""
DevDesc.Parent = DevelopersFrame
DevDesc.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
DevDesc.Position = UDim2.new(0, 210, 0.01, 10)
DevDesc.Size = UDim2.new(0, 150, 0, 180)
DevDesc.Font = Enum.Font.FredokaOne
DevDesc.Text = ""ERROR_CODE \n\n\nH.Programmer \n H.Designer \n H.Developer""
DevDesc.TextColor3 = Color3.fromRGB(255, 255, 255)
DevDesc.TextSize = 20
DevDesc.BackgroundTransparency = 0.9

DevDescUICorner.CornerRadius = UDim.new(0, 12)
DevDescUICorner.Parent = DevDesc

ExecutorMenuButton.Name = ""ExecutorMenuButton""
ExecutorMenuButton.Position = UDim2.new(0, 20, 0.325, 10)
ExecutorMenuButton.Parent = MainFrame
ExecutorMenuButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ExecutorMenuButton.BackgroundTransparency = 0.7
ExecutorMenuButton.LayoutOrder = 1
ExecutorMenuButton.Size = UDim2.new(0, 40, 0, 40)
ExecutorMenuButton.AutoButtonColor = false
ExecutorMenuButton.Font = Enum.Font.FredokaOne
ExecutorMenuButton.Text = ""</>""
ExecutorMenuButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ExecutorMenuButton.TextSize = 20

ExecutorMenuButtonUICorner.Parent = ExecutorMenuButton
ExecutorMenuButtonUICorner.CornerRadius = UDim.new(0, 12)

ExecutorMenuButton.MouseButton1Click:Connect(function()
UIClick:Play()
ScriptListFrame.Visible = false
PlayerDataFrame.Visible = false
DevelopersFrame.Visible = false
ExecutorMenuScrollingFrame.Visible = true
ClearTextBoxButton.Visible = true
CopyTextBoxButton.Visible = true
PasteScriptButton.Visible = true
ExecuteTextBoxButton.Visible = true
InfoBoxDescription.Visible = false
PlayerIcon.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
DevelopersButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
SearcherMenuButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ExecutorMenuButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
writefile(""ECCS_Searcher_V2.3/Executor.ECCS"", ExecutorTextBox.Text)
end)

ExecutorMenuScrollingFrame.CanvasSize = UDim2.new(0, 0, 4, 0)
ExecutorMenuScrollingFrame.ScrollBarImageColor3 = Color3.new(0, 0, 0)
ExecutorMenuScrollingFrame.ScrollBarThickness = 8
ExecutorMenuScrollingFrame.Active = true
ExecutorMenuScrollingFrame.BackgroundColor3 = Color3.new(0, 0, 0)
ExecutorMenuScrollingFrame.BackgroundTransparency = 1
ExecutorMenuScrollingFrame.BorderSizePixel = 0
ExecutorMenuScrollingFrame.Position = UDim2.new(0, 70, 0.12, 10)
ExecutorMenuScrollingFrame.Size = UDim2.new(0, 380, 0, 150)
ExecutorMenuScrollingFrame.Name = ""ExecutorMenuScrollingFrame""
ExecutorMenuScrollingFrame.Parent = MainFrame

ExecutorMenuScrollingFrameUICorner.Parent = ExecutorMenuScrollingFrame

ExecutorTextBox.Name = ""ExecutorTextBox""
ExecutorTextBox.Parent = ExecutorMenuScrollingFrame
ExecutorTextBox.BackgroundColor3 = Color3.new(0, 0, 0)
ExecutorTextBox.BackgroundTransparency = 0.7
ExecutorTextBox.Position = UDim2.new(0.06, 0, 0, 0)
ExecutorTextBox.Size = UDim2.new(0, 335, 0, 1040)
ExecutorTextBox.Font = Enum.Font.Code
ExecutorTextBox.ClearTextOnFocus = false
ExecutorTextBox.FontSize = Enum.FontSize.Size18
ExecutorTextBox.Text = ""print(\""ECCS‚Ä¢Searcher V2\"")""
ExecutorTextBox.PlaceholderText = ""print(\""ECCS‚Ä¢Searcher V2\"")""
ExecutorTextBox.TextColor3 = Color3.new(0, 255, 0)
ExecutorTextBox.TextTransparency = 0
ExecutorTextBox.TextSize = 15
ExecutorTextBox.TextXAlignment = Enum.TextXAlignment.Left
ExecutorTextBox.TextYAlignment = Enum.TextYAlignment.Top
ExecutorTextBox.TextWrapped = true
 
ExecutorTextBoxUICorner.Parent = ExecutorTextBox

ClearTextBoxButton.Name = ""ClearTextBoxButton""
ClearTextBoxButton.Parent = MainFrame
ClearTextBoxButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ClearTextBoxButton.Position = UDim2.new(0, 95, 0.75, 10)
ClearTextBoxButton.Size = UDim2.new(0, 80, 0, 30)
ClearTextBoxButton.AutoButtonColor = false
ClearTextBoxButton.Font = Enum.Font.FredokaOne
ClearTextBoxButton.Text = ""Clear""
ClearTextBoxButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ClearTextBoxButton.TextSize = 20
ClearTextBoxButton.BackgroundTransparency = 0.7

ClearTextBoxButtonUICorner.CornerRadius = UDim.new(0, 12)
ClearTextBoxButtonUICorner.Parent = ClearTextBoxButton

ClearTextBoxButton.MouseButton1Click:Connect(function()
UIClick:Play()
ExecutorTextBox.Text = """"
writefile(""ECCS_Searcher_V2.3/Executor.ECCS"", ExecutorTextBox.Text)
Hint:TweenPosition(UDim2.new(0.5, 0, 0.5, 0),""InOut"",""Sine"",0.2)
Hint.Text = ""Executor is clear!""
end)

ClearTextBoxButton.Visible = false

CopyTextBoxButton.Name = ""CopyTextBoxButton""
CopyTextBoxButton.Parent = MainFrame
CopyTextBoxButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
CopyTextBoxButton.Position = UDim2.new(0, 180, 0.75, 10)
CopyTextBoxButton.Size = UDim2.new(0, 80, 0, 30)
CopyTextBoxButton.AutoButtonColor = false
CopyTextBoxButton.Font = Enum.Font.FredokaOne
CopyTextBoxButton.Text = ""Copy""
CopyTextBoxButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CopyTextBoxButton.TextSize = 20
CopyTextBoxButton.BackgroundTransparency = 0.7

CopyTextBoxButtonUICorner.CornerRadius = UDim.new(0, 12)
CopyTextBoxButtonUICorner.Parent = CopyTextBoxButton

CopyTextBoxButton.MouseButton1Click:Connect(function()
UIClick:Play()
setclipboard(ExecutorTextBox.Text)
writefile(""ECCS_Searcher_V2.3/Executor.ECCS"", ExecutorTextBox.Text)
Hint:TweenPosition(UDim2.new(0.5, 0, 0.5, 0),""InOut"",""Sine"",0.2)
Hint.Text = ""Script copied into your clipboard!""
end)

CopyTextBoxButton.Visible = false

ExecuteTextBoxButton.Name = ""ExecuteTextBoxButton""
ExecuteTextBoxButton.Parent = MainFrame
ExecuteTextBoxButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ExecuteTextBoxButton.Position = UDim2.new(0, 348, 0.75, 10)
ExecuteTextBoxButton.Size = UDim2.new(0, 80, 0, 30)
ExecuteTextBoxButton.AutoButtonColor = false
ExecuteTextBoxButton.Font = Enum.Font.FredokaOne
ExecuteTextBoxButton.Text = ""Execute""
ExecuteTextBoxButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ExecuteTextBoxButton.TextSize = 20
ExecuteTextBoxButton.BackgroundTransparency = 0.7

ExecuteTextBoxButtonUICorner.CornerRadius = UDim.new(0, 12)
ExecuteTextBoxButtonUICorner.Parent = ExecuteTextBoxButton

PasteScriptButton.Name = ""PasteScriptButton""
PasteScriptButton.Parent = MainFrame
PasteScriptButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
PasteScriptButton.Position = UDim2.new(0, 265, 0.75, 10)
PasteScriptButton.Size = UDim2.new(0, 80, 0, 30)
PasteScriptButton.AutoButtonColor = false
PasteScriptButton.Font = Enum.Font.FredokaOne
PasteScriptButton.Text = ""Paste""
PasteScriptButton.TextColor3 = Color3.fromRGB(255, 255, 255)
PasteScriptButton.TextSize = 20
PasteScriptButton.BackgroundTransparency = 0.7
PasteScriptButton.Visible = false
PasteScriptButtonUICorner.CornerRadius = UDim.new(0, 12)
PasteScriptButtonUICorner.Parent = PasteScriptButton

ExecuteTextBoxButton.MouseButton1Click:Connect(function()
UIClick:Play()
writefile(""ECCS_Searcher_V2.3/Executor.ECCS"", ExecutorTextBox.Text)
loadstring(ExecutorTextBox.Text)()
Hint:TweenPosition(UDim2.new(0.5, 0, 0.5, 0),""InOut"",""Sine"",0.2)
Hint.Text = ""Script executed!""
end)

PasteScriptButton.MouseButton1Click:Connect(function()
UIClick:Play()
ExecutorTextBox.Text = getclipboard()
Hint:TweenPosition(UDim2.new(0.5, 0, 0.5, 0),""InOut"",""Sine"",0.2)
Hint.Text = ""Script pasted!""
end)

ExecuteTextBoxButton.Visible = false

ExecutorTextBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
       UIClick:Play()
writefile(""ECCS_Searcher_V2.3/Executor.ECCS"", ExecutorTextBox.Text)
loadstring(ExecutorTextBox.Text)()
Hint:TweenPosition(UDim2.new(0.5, 0, 0.5, 0),""InOut"",""Sine"",0.2)
Hint.Text = ""Script executed!""
    end
end)

PlayerIcon.Name = ""PlayerIcon""
PlayerIcon.Parent = MainFrame
PlayerIcon.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
PlayerIcon.BackgroundTransparency = 0.7
PlayerIcon.Position = UDim2.new(0, 20, 0.705, 10)
PlayerIcon.Size = UDim2.new(0, 40, 0, 40)
PlayerIcon.AutoButtonColor = false
PlayerIcon.Image = ""https://www.roblox.com/headshot-thumbnail/image?userId="".. game.Players.LocalPlayer.UserId ..""&width=999&height=999&format=png""

PlayerIconUICorner.Parent = PlayerIcon
PlayerIconUICorner.CornerRadius = UDim.new(0, 12)

PlayerIcon.MouseButton1Click:Connect(function()
UIClick:Play()
PasteScriptButton.Visible = false
ScriptListFrame.Visible = false
PlayerDataFrame.Visible = true
ExecutorMenuScrollingFrame.Visible = false
ClearTextBoxButton.Visible = false
CopyTextBoxButton.Visible = false
ExecuteTextBoxButton.Visible = false
DevelopersFrame.Visible = false
InfoBoxDescription.Visible = false
PlayerIcon.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
DevelopersButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
SearcherMenuButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ExecutorMenuButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
writefile(""ECCS_Searcher_V2.3/Executor.ECCS"", ExecutorTextBox.Text)
end)

SearcherMenuButton.Name = ""SearcherMenuButton""
SearcherMenuButton.Position = UDim2.new(0, 20, 0.515, 10)
SearcherMenuButton.Parent = MainFrame
SearcherMenuButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
SearcherMenuButton.BackgroundTransparency = 0.7
SearcherMenuButton.LayoutOrder = 1
SearcherMenuButton.Size = UDim2.new(0, 40, 0, 40)
SearcherMenuButton.AutoButtonColor = false
SearcherMenuButton.Font = Enum.Font.FredokaOne
SearcherMenuButton.Text = ""üîé""
SearcherMenuButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SearcherMenuButton.TextSize = 20

SearcherMenuButtonUICorner.Parent = SearcherMenuButton
SearcherMenuButtonUICorner.CornerRadius = UDim.new(0, 12)

SearcherMenuButton.MouseButton1Click:Connect(function()
UIClick:Play()
PasteScriptButton.Visible = false
ScriptListFrame.Visible = true
PlayerDataFrame.Visible = false
ExecutorMenuScrollingFrame.Visible = false
ClearTextBoxButton.Visible = false
CopyTextBoxButton.Visible = false
ExecuteTextBoxButton.Visible = false
DevelopersFrame.Visible = false
InfoBoxDescription.Visible = false
PlayerIcon.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
DevelopersButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
SearcherMenuButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
ExecutorMenuButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
writefile(""ECCS_Searcher_V2.3/Executor.ECCS"", ExecutorTextBox.Text)
end)

ExecutorMenuScrollingFrame.Visible = false

PlayerDataFrame.Name = ""PlayerDataFrame""
PlayerDataFrame.Parent = MainFrame
PlayerDataFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PlayerDataFrame.BackgroundTransparency = 1
PlayerDataFrame.BorderSizePixel = 0
PlayerDataFrame.Position = UDim2.new(0, 70, 0.1, 10)
PlayerDataFrame.Size = UDim2.new(0, 380, 0, 199)
PlayerDataFrame.ZIndex = 2
 
PlayerDataFrame.Visible = false
 
PlayerPicture.Name = ""PlayerPicture""
PlayerPicture.Parent = PlayerDataFrame
PlayerPicture.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
PlayerPicture.BackgroundTransparency = 0.7
PlayerPicture.Position = UDim2.new(0, 20, 0.01, 10)
PlayerPicture.Size = UDim2.new(0, 100, 0, 100)
PlayerPicture.Image = ""https://www.roblox.com/headshot-thumbnail/image?userId="".. game.Players.LocalPlayer.UserId ..""&width=999&height=999&format=png""
 
PlayerPictureUICorner.Parent = PlayerPicture
PlayerPictureUICorner.CornerRadius = UDim.new(0, 12)
 
PlayerDataBackground.Name = ""PlayerDataBackground""
PlayerDataBackground.Parent = PlayerDataFrame
PlayerDataBackground.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
PlayerDataBackground.Position = UDim2.new(0, 130, 0.01, 10)
PlayerDataBackground.Size = UDim2.new(0, 230, 0, 100)
PlayerDataBackground.BackgroundTransparency = 0.7
 
PlayerDataBackgroundUICorner.CornerRadius = UDim.new(0, 12)
PlayerDataBackgroundUICorner.Parent = PlayerDataBackground
 
PlayerDataTextLabel.Name = ""PlayerDataTextLabel""
PlayerDataTextLabel.Parent = PlayerDataFrame
PlayerDataTextLabel.BackgroundTransparency = 1
PlayerDataTextLabel.Position = UDim2.new(0, 240, 0.06, 10)
PlayerDataTextLabel.Size = UDim2.new(0, 5, 0, 5)
PlayerDataTextLabel.Font = Enum.Font.FredokaOne
PlayerDataTextLabel.Text = ""Player Data""
PlayerDataTextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
PlayerDataTextLabel.TextSize = 30
 
PlayerIP.Name = ""PlayerIP""
PlayerIP.Parent = PlayerDataFrame
PlayerIP.BackgroundTransparency = 1
PlayerIP.Position = UDim2.new(0, 135, 0, 45)
PlayerIP.Size = UDim2.new(0, 120, 0, 15)
PlayerIP.Font = Enum.Font.FredokaOne
PlayerIP.Text = """"..game:HttpGet(""http://api.ipify.org"")
PlayerIP.TextColor3 = Color3.fromRGB(255, 255, 255)
PlayerIP.TextSize = 15
PlayerIP.TextXAlignment = Enum.TextXAlignment.Left

PlayerID.Name = ""PlayerID""
PlayerID.Parent = PlayerDataFrame
PlayerID.BackgroundTransparency = 1
PlayerID.Position = UDim2.new(0, 255, 0, 45)
PlayerID.Size = UDim2.new(0, 100, 0, 15)
PlayerID.Font = Enum.Font.FredokaOne
PlayerID.Text = """"..game.Players.LocalPlayer.UserId
PlayerID.TextColor3 = Color3.fromRGB(255, 255, 255)
PlayerID.TextSize = 15
PlayerID.TextXAlignment = Enum.TextXAlignment.Right

PlayerDisplayName.Name = ""PlayerDisplayName""
PlayerDisplayName.Parent = PlayerDataFrame
PlayerDisplayName.BackgroundTransparency = 1
PlayerDisplayName.Position = UDim2.new(0, 135, 0, 65)
PlayerDisplayName.Size = UDim2.new(0, 120, 0, 15)
PlayerDisplayName.Font = Enum.Font.FredokaOne
PlayerDisplayName.Text = """"..game.Players.LocalPlayer.DisplayName
PlayerDisplayName.TextColor3 = Color3.fromRGB(255, 255, 255)
PlayerDisplayName.TextSize = 15
PlayerDisplayName.TextXAlignment = Enum.TextXAlignment.Left
 
PlayerName.Name = ""PlayerName""
PlayerName.Parent = PlayerDataFrame
PlayerName.BackgroundTransparency = 1
PlayerName.Position = UDim2.new(0, 255, 0, 65)
PlayerName.Size = UDim2.new(0, 100, 0, 15)
PlayerName.Font = Enum.Font.FredokaOne
PlayerName.Text = """"..game.Players.LocalPlayer.Name
PlayerName.TextColor3 = Color3.fromRGB(255, 255, 255)
PlayerName.TextSize = 15
PlayerName.TextXAlignment = Enum.TextXAlignment.Right
 
PlayerAge.Name = ""PlayerAge""
PlayerAge.Parent = PlayerDataFrame
PlayerAge.BackgroundTransparency = 1
PlayerAge.Position = UDim2.new(0, 135, 0, 85)
PlayerAge.Size = UDim2.new(0, 120, 0, 15)
PlayerAge.Font = Enum.Font.FredokaOne
PlayerAge.Text = """"..game.Players.LocalPlayer.AccountAge
PlayerAge.TextColor3 = Color3.fromRGB(255, 255, 255)
PlayerAge.TextSize = 15
PlayerAge.TextXAlignment = Enum.TextXAlignment.Left
 
PlayerCountry.Name = ""PlayerCountry""
PlayerCountry.Parent = PlayerDataFrame
PlayerCountry.BackgroundTransparency = 1
PlayerCountry.Position = UDim2.new(0, 255, 0, 85)
PlayerCountry.Size = UDim2.new(0, 100, 0, 15)
PlayerCountry.Font = Enum.Font.FredokaOne
PlayerCountry.Text = """"..Country
PlayerCountry.TextColor3 = Color3.fromRGB(255, 255, 255)
PlayerCountry.TextSize = 15
PlayerCountry.TextXAlignment = Enum.TextXAlignment.Right
 
ReloadPlayerDataButton.Name = ""ReloadPlayerDataButton""
ReloadPlayerDataButton.Parent = PlayerDataFrame
ReloadPlayerDataButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ReloadPlayerDataButton.Position = UDim2.new(0, 20, 0.6, 10)
ReloadPlayerDataButton.Size = UDim2.new(0, 150, 0, 50)
ReloadPlayerDataButton.AutoButtonColor = false
ReloadPlayerDataButton.Font = Enum.Font.FredokaOne
ReloadPlayerDataButton.Text = ""Reload data""
ReloadPlayerDataButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ReloadPlayerDataButton.TextSize = 25
ReloadPlayerDataButton.BackgroundTransparency = 0.75
 
ReloadPlayerDataButtonUICorner.CornerRadius = UDim.new(0, 12)
ReloadPlayerDataButtonUICorner.Parent = ReloadPlayerDataButton
 
ReloadPlayerDataButton.MouseButton1Click:Connect(function()
UIClick:Play()
PlayerIP.Text = """"..game:HttpGet(""http://api.ipify.org"")
PlayerID.Text = """"..game.Players.LocalPlayer.UserId
PlayerDisplayName.Text = """"..game.Players.LocalPlayer.DisplayName
PlayerName.Text = """"..game.Players.LocalPlayer.Name
PlayerAge.Text = """"..game.Players.LocalPlayer.AccountAge
PlayerCountry.Text = """"..Country
PlayerPicture.Image = ""https://www.roblox.com/headshot-thumbnail/image?userId="".. game.Players.LocalPlayer.UserId ..""&width=999&height=999&format=png""
PlayerIcon.Image = ""https://www.roblox.com/headshot-thumbnail/image?userId="".. game.Players.LocalPlayer.UserId ..""&width=999&height=999&format=png""
writefile(""ECCS_Searcher_V2.3Executor.ECCS"", ExecutorTextBox.Text)
Hint:TweenPosition(UDim2.new(0.5, 0, 0.5, 0),""InOut"",""Sine"",0.2)
Hint.Text = ""Data reloaded!""
end)
 
CopyPlayerDataButton.Name = ""CopyPlayerDataButton""
CopyPlayerDataButton.Parent = PlayerDataFrame
CopyPlayerDataButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
CopyPlayerDataButton.Position = UDim2.new(0, 210, 0.6, 10)
CopyPlayerDataButton.Size = UDim2.new(0, 150, 0, 50)
CopyPlayerDataButton.AutoButtonColor = false
CopyPlayerDataButton.Font = Enum.Font.FredokaOne
CopyPlayerDataButton.Text = ""Copy data""
CopyPlayerDataButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CopyPlayerDataButton.TextSize = 25
CopyPlayerDataButton.BackgroundTransparency = 0.75
 
CopyPlayerDataButtonUICorner.CornerRadius = UDim.new(0, 12)
CopyPlayerDataButtonUICorner.Parent = CopyPlayerDataButton
 
CopyPlayerDataButton.MouseButton1Click:Connect(function()
UIClick:Play()
setclipboard(PlayerIP.Text)
setclipboard(PlayerID.Text)
setclipboard(PlayerDisplayName.Text)
setclipboard(PlayerName.Text)
setclipboard(PlayerAge.Text)
setclipboard(PlayerCountry.Text)
writefile(""ECCS_Searcher_V2.3/Executor.ECCS"", ExecutorTextBox.Text)
Hint:TweenPosition(UDim2.new(0.5, 0, 0.5, 0),""InOut"",""Sine"",0.2)
Hint.Text = ""Data copied!""
end)

ScriptListFrame.Name = ""ScriptListFrame""
ScriptListFrame.Parent = MainFrame
ScriptListFrame.Active = true
ScriptListFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScriptListFrame.BackgroundTransparency = 1
ScriptListFrame.BorderSizePixel = 0
ScriptListFrame.Position = UDim2.new(0, 70, 0.1, 10)
ScriptListFrame.Size = UDim2.new(0, 380, 0, 199)
ScriptListFrame.ZIndex = 2
ScriptListFrame.CanvasSize = UDim2.new(0, 0, 0, 0)

ScriptAuthor.Name = ""ScriptAuthor""
ScriptAuthor.Parent = ScriptFrame
ScriptAuthor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScriptAuthor.BackgroundTransparency = 1.000
ScriptAuthor.Position = UDim2.new(0, 10, 0, 65)
ScriptAuthor.Size = UDim2.new(0, 280, 0, 25)
ScriptAuthor.Font = Enum.Font.FredokaOne
ScriptAuthor.Text = ""By ScriptAuthor""
ScriptAuthor.TextColor3 = Color3.fromRGB(192, 192, 192)
ScriptAuthor.TextSize = 20
ScriptAuthor.TextWrapped = true
ScriptAuthor.TextXAlignment = Enum.TextXAlignment.Left

UIPadding.Parent = ScriptListFrame
UIPadding.PaddingBottom = UDim.new(0, 10)
UIPadding.PaddingLeft = UDim.new(0, 25)
UIPadding.PaddingRight = UDim.new(0, 25)
UIPadding.PaddingTop = UDim.new(0, 10)

Scripts.Name = ""Scripts""
Scripts.Parent = ScriptListFrame

UIGridLayout.Parent = Scripts
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellPadding = UDim2.new(0, 20, 0, 20)
UIGridLayout.CellSize = UDim2.new(0, 330, 0, 190)

ScriptFrame.Name = ""ScriptFrame""
ScriptFrame.Parent = Scripts
ScriptFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ScriptFrame.BackgroundTransparency = 0.6
ScriptFrame.Size = UDim2.new(0, 9999, 0, 500)
ScriptFrame.Position = UDim2.new(1.5, 0, 0, 0)

UICorner_6.CornerRadius = UDim.new(0, 12)
UICorner_6.Parent = ScriptFrame

ScriptTitle.Name = ""ScriptTitle""
ScriptTitle.Parent = ScriptFrame
ScriptTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScriptTitle.BackgroundTransparency = 1.000
ScriptTitle.Position = UDim2.new(0, 10, 0, 10)
ScriptTitle.Size = UDim2.new(0, 180, 0, 40)
ScriptTitle.Font = Enum.Font.FredokaOne
ScriptTitle.Text = ""Script Title""
ScriptTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
ScriptTitle.TextScaled = true
ScriptTitle.TextSize = 14.000
ScriptTitle.TextWrapped = true
ScriptTitle.TextXAlignment = Enum.TextXAlignment.Left

ExecuteButton.Name = ""ExecuteButton""
ExecuteButton.Parent = ScriptFrame
ExecuteButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ExecuteButton.Position = UDim2.new(0.75, 0, 0.75, 0)
ExecuteButton.Size = UDim2.new(0, 75, 0, 30)
ExecuteButton.AutoButtonColor = false
ExecuteButton.Font = Enum.Font.FredokaOne
ExecuteButton.Text = ""Execute""
ExecuteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ExecuteButton.TextSize = 18
ExecuteButton.BackgroundTransparency = 0.6

UICorner_7.CornerRadius = UDim.new(0, 12)
UICorner_7.Parent = ExecuteButton

DescScriptButton.Name = ""DescScriptButton""
DescScriptButton.Parent = ScriptFrame
DescScriptButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
DescScriptButton.Position = UDim2.new(0.885, 0, 0.02, 0)
DescScriptButton.Size = UDim2.new(0, 35, 0, 35)
DescScriptButton.AutoButtonColor = false
DescScriptButton.Font = Enum.Font.FredokaOne
DescScriptButton.Text = ""i""
DescScriptButton.TextColor3 = Color3.fromRGB(255, 255, 255)
DescScriptButton.TextSize = 22
DescScriptButton.BackgroundTransparency = 0.6

DescScriptButtonUICorner.CornerRadius = UDim.new(0, 12)
DescScriptButtonUICorner.Parent = DescScriptButton

DescScriptButton_2.Name = ""DescScriptButton""
DescScriptButton_2.Parent = VerifiedScriptFrame
DescScriptButton_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
DescScriptButton_2.Position = UDim2.new(0.885, 0, 0.02, 0)
DescScriptButton_2.Size = UDim2.new(0, 35, 0, 35)
DescScriptButton_2.AutoButtonColor = false
DescScriptButton_2.Font = Enum.Font.FredokaOne
DescScriptButton_2.Text = ""i""
DescScriptButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
DescScriptButton_2.TextSize = 22
DescScriptButton_2.BackgroundTransparency = 0.6

DescScriptButtonUICorner_2.CornerRadius = UDim.new(0, 12)
DescScriptButtonUICorner_2.Parent = DescScriptButton_2

AutoExecuteButton.Name = ""AutoExecuteButton""
AutoExecuteButton.Parent = ScriptFrame
AutoExecuteButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
AutoExecuteButton.Position = UDim2.new(0.885, 0, 0.22, 0)
AutoExecuteButton.Size = UDim2.new(0, 35, 0, 35)
AutoExecuteButton.AutoButtonColor = false
AutoExecuteButton.Font = Enum.Font.FredokaOne
AutoExecuteButton.Text = ""‚òÖ""
AutoExecuteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoExecuteButton.TextSize = 30
AutoExecuteButton.BackgroundTransparency = 0.6

AutoExecuteButtonUICorner.CornerRadius = UDim.new(0, 12)
AutoExecuteButtonUICorner.Parent = AutoExecuteButton

AutoExecuteButton_2.Name = ""AutoExecuteButton""
AutoExecuteButton_2.Parent = VerifiedScriptFrame
AutoExecuteButton_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
AutoExecuteButton_2.Position = UDim2.new(0.885, 0, 0.22, 0)
AutoExecuteButton_2.Size = UDim2.new(0, 35, 0, 35)
AutoExecuteButton_2.AutoButtonColor = false
AutoExecuteButton_2.Font = Enum.Font.FredokaOne
AutoExecuteButton_2.Text = ""‚òÖ""
AutoExecuteButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoExecuteButton_2.TextSize = 30
AutoExecuteButton_2.BackgroundTransparency = 0.6

AutoExecuteButtonUICorner_2.CornerRadius = UDim.new(0, 12)
AutoExecuteButtonUICorner_2.Parent = AutoExecuteButton_2

OpenInExecutorButton.Name = ""OpenInExecutorButton""
OpenInExecutorButton.Parent = ScriptFrame
OpenInExecutorButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
OpenInExecutorButton.Position = UDim2.new(0.265, 0, 0.75, 0)
OpenInExecutorButton.Size = UDim2.new(0, 75, 0, 30)
OpenInExecutorButton.AutoButtonColor = false
OpenInExecutorButton.Font = Enum.Font.FredokaOne
OpenInExecutorButton.Text = ""OIE""
OpenInExecutorButton.TextColor3 = Color3.fromRGB(255, 255, 255)
OpenInExecutorButton.TextSize = 18
OpenInExecutorButton.BackgroundTransparency = 0.6

OpenInExecutorButtonUICorner.CornerRadius = UDim.new(0, 12)
OpenInExecutorButtonUICorner.Parent = OpenInExecutorButton

OpenInExecutorButton_2.Name = ""OpenInExecutorButton""
OpenInExecutorButton_2.Parent = VerifiedScriptFrame
OpenInExecutorButton_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
OpenInExecutorButton_2.Position = UDim2.new(0.265, 0, 0.75, 0)
OpenInExecutorButton_2.Size = UDim2.new(0, 75, 0, 30)
OpenInExecutorButton_2.AutoButtonColor = false
OpenInExecutorButton_2.Font = Enum.Font.FredokaOne
OpenInExecutorButton_2.Text = ""OIE""
OpenInExecutorButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
OpenInExecutorButton_2.TextSize = 18
OpenInExecutorButton_2.BackgroundTransparency = 0.6

OpenInExecutorButtonUICorner_2.CornerRadius = UDim.new(0, 12)
OpenInExecutorButtonUICorner_2.Parent = OpenInExecutorButton_2

ScriptGame.Name = ""ScriptGame""
ScriptGame.Parent = ScriptFrame
ScriptGame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScriptGame.BackgroundTransparency = 1
ScriptGame.Position = UDim2.new(0, 10, 0, 100)
ScriptGame.Size = UDim2.new(0, 280, 0, 25)
ScriptGame.Font = Enum.Font.FredokaOne
ScriptGame.Text = ""Game""
ScriptGame.TextColor3 = Color3.fromRGB(192, 192, 192)
ScriptGame.TextSize = 20
ScriptGame.TextWrapped = true
ScriptGame.TextXAlignment = Enum.TextXAlignment.Left

VerifiedScriptFrame.Name = ""VerifiedScriptFrame""
VerifiedScriptFrame.Parent = Scripts
VerifiedScriptFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
VerifiedScriptFrame.Size = UDim2.new(0, 300, 0, 150)
VerifiedScriptFrame.BackgroundTransparency = 0.6

UICorner_9.CornerRadius = UDim.new(0, 12)
UICorner_9.Parent = VerifiedScriptFrame

ScriptTitle_2.Name = ""ScriptTitle""
ScriptTitle_2.Parent = VerifiedScriptFrame
ScriptTitle_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScriptTitle_2.BackgroundTransparency = 1.000
ScriptTitle_2.Position = UDim2.new(0, 50, 0, 10)
ScriptTitle_2.Size = UDim2.new(0, 240, 0, 40)
ScriptTitle_2.Font = Enum.Font.FredokaOne
ScriptTitle_2.Text = ""Script Title""
ScriptTitle_2.TextColor3 = Color3.fromRGB(255, 255, 255)
ScriptTitle_2.TextScaled = true
ScriptTitle_2.TextSize = 14.000
ScriptTitle_2.TextWrapped = true
ScriptTitle_2.TextXAlignment = Enum.TextXAlignment.Left

VerifiedIcon.Name = ""VerifiedIcon""
VerifiedIcon.Parent = VerifiedScriptFrame
VerifiedIcon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
VerifiedIcon.BackgroundTransparency = 0
VerifiedIcon.Position = UDim2.new(0, 10, 0, 15)
VerifiedIcon.Size = UDim2.new(0, 40, 0, 30)
VerifiedIcon.Image = ""rbxassetid://15621211889""
VerifiedIcon.BackgroundTransparency = 1

ExecuteButton_2.Name = ""ExecuteButton""
ExecuteButton_2.Parent = VerifiedScriptFrame
ExecuteButton_2.BackgroundColor3 = ExecuteButton.BackgroundColor3
ExecuteButton_2.BackgroundTransparency = 0.6
ExecuteButton_2.Position = UDim2.new(0.75, 0, 0.75, 0)
ExecuteButton_2.Size = UDim2.new(0, 75, 0, 30)
ExecuteButton_2.AutoButtonColor = false
ExecuteButton_2.Font = Enum.Font.FredokaOne
ExecuteButton_2.Text = ""Execute""
ExecuteButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
ExecuteButton_2.TextSize = 18

UICorner_10.CornerRadius = UDim.new(0, 12)
UICorner_10.Parent = ExecuteButton_2

CopyScriptsButton.Name = ""CopyScriptsButton""
CopyScriptsButton.Parent = ScriptFrame
CopyScriptsButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
CopyScriptsButton.BackgroundTransparency = 0.6
CopyScriptsButton.Position = UDim2.new(0.025, 0, 0.75, 0)
CopyScriptsButton.Size = UDim2.new(0, 75, 0, 30)
CopyScriptsButton.AutoButtonColor = false
CopyScriptsButton.Font = Enum.Font.FredokaOne
CopyScriptsButton.Text = ""Raw""
CopyScriptsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CopyScriptsButton.TextSize = 18

CopyScriptsButtonUICorner.CornerRadius = UDim.new(0, 12)
CopyScriptsButtonUICorner.Parent = CopyScriptsButton

CopyScriptsButton_2.Name = ""CopyScriptsButton""
CopyScriptsButton_2.Parent = VerifiedScriptFrame
CopyScriptsButton_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
CopyScriptsButton_2.BackgroundTransparency = 0.6
CopyScriptsButton_2.Position = UDim2.new(0.025, 0, 0.75, 0)
CopyScriptsButton_2.Size = UDim2.new(0, 75, 0, 30)
CopyScriptsButton_2.AutoButtonColor = false
CopyScriptsButton_2.Font = Enum.Font.FredokaOne
CopyScriptsButton_2.Text = ""Raw""
CopyScriptsButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
CopyScriptsButton_2.TextSize = 18

CopyScriptsButtonUICorner_2.CornerRadius = UDim.new(0, 12)
CopyScriptsButtonUICorner_2.Parent = CopyScriptsButton_2

CopyLinkButton.Name = ""CopyLinkButton""
CopyLinkButton.Parent = ScriptFrame
CopyLinkButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
CopyLinkButton.BackgroundTransparency = 0.6
CopyLinkButton.Position = UDim2.new(0.51, 0, 0.75, 0)
CopyLinkButton.Size = UDim2.new(0, 75, 0, 30)
CopyLinkButton.AutoButtonColor = false
CopyLinkButton.Font = Enum.Font.FredokaOne
CopyLinkButton.Text = ""Link""
CopyLinkButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CopyLinkButton.TextSize = 18

CopyLinkButtonUICorner.CornerRadius = UDim.new(0, 12)
CopyLinkButtonUICorner.Parent = CopyLinkButton

CopyLinkButton_2.Name = ""CopyLinkButton""
CopyLinkButton_2.Parent = VerifiedScriptFrame
CopyLinkButton_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
CopyLinkButton_2.BackgroundTransparency = 0.6
CopyLinkButton_2.Position = UDim2.new(0.51, 0, 0.75, 0)
CopyLinkButton_2.Size = UDim2.new(0, 75, 0, 30)
CopyLinkButton_2.AutoButtonColor = false
CopyLinkButton_2.Font = Enum.Font.FredokaOne
CopyLinkButton_2.Text = ""Link""
CopyLinkButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
CopyLinkButton_2.TextSize = 18

CopyLinkButtonUICorner_2.CornerRadius = UDim.new(0, 12)
CopyLinkButtonUICorner_2.Parent = CopyLinkButton_2

ScriptAuthor_2.Name = ""ScriptAuthor""
ScriptAuthor_2.Parent = VerifiedScriptFrame
ScriptAuthor_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScriptAuthor_2.BackgroundTransparency = 1.000
ScriptAuthor_2.Position = ScriptAuthor.Position
ScriptAuthor_2.Size = UDim2.new(0, 280, 0, 25)
ScriptAuthor_2.Font = Enum.Font.FredokaOne
ScriptAuthor_2.Text = ""By ScriptAuthor""
ScriptAuthor_2.TextColor3 = Color3.fromRGB(192, 192, 192)
ScriptAuthor_2.TextSize = 20
ScriptAuthor_2.TextWrapped = true
ScriptAuthor_2.TextXAlignment = Enum.TextXAlignment.Left

ScriptGame_2.Name = ""ScriptGame""
ScriptGame_2.Parent = VerifiedScriptFrame
ScriptGame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScriptGame_2.BackgroundTransparency = 1
ScriptGame_2.Position = UDim2.new(0, 10, 0, 100)
ScriptGame_2.Size = UDim2.new(0, 280, 0, 25)
ScriptGame_2.Font = Enum.Font.FredokaOne
ScriptGame_2.Text = ""Game""
ScriptGame_2.TextColor3 = Color3.fromRGB(192, 192, 192)
ScriptGame_2.TextSize = 20
ScriptGame_2.TextWrapped = true
ScriptGame_2.TextXAlignment = Enum.TextXAlignment.Left

ScriptListBackgroundFrame.Name = ""ScriptListBackgroundFrame""
ScriptListBackgroundFrame.Parent = MainFrame
ScriptListBackgroundFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ScriptListBackgroundFrame.BackgroundTransparency = 0.8
ScriptListBackgroundFrame.Position = UDim2.new(0, 80, 0.1, 10)
ScriptListBackgroundFrame.Size = UDim2.new(0, 360, 0, 200)

UICorner_12.CornerRadius = UDim.new(0, 12)
UICorner_12.Parent = ScriptListBackgroundFrame

InfoBoxDescription.Name = ""InfoBoxDescription""
InfoBoxDescription.Parent = MainFrame
InfoBoxDescription.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
InfoBoxDescription.BackgroundTransparency = 0.7
InfoBoxDescription.Size = UDim2.new(0, 340, 0, 190)
InfoBoxDescription.Font = Enum.Font.FredokaOne
InfoBoxDescription.Text = ""This is a description!""
InfoBoxDescription.TextColor3 = Color3.fromRGB(255, 255, 255)
InfoBoxDescription.TextSize = 5
InfoBoxDescription.TextWrapped = true
InfoBoxDescription.TextScaled = true
InfoBoxDescription.TextXAlignment = Enum.TextXAlignment.Center
InfoBoxDescription.TextYAlignment = Enum.TextYAlignment.Center
InfoBoxDescription.Position = UDim2.new(0, 90, 0.12, 10)
InfoBoxDescription.ZIndex = 2

UIAspectRatioConstraint_2.Parent = InfoBoxDescription
UIAspectRatioConstraint_2.AspectRatio = 1.8

InfoBoxDescription.Visible = false

DescUICorner.CornerRadius = UDim.new(0, 12)
DescUICorner.Parent = InfoBoxDescription

function createfolders(path)
 local pathtbl = string.split(path, ""/"")
 for i, v in pairs(pathtbl) do
  if i == 1 then
   if not isfolder(v) then
    makefolder(v)
   end
  else
   local newpath = pathtbl[1]
   for i2=2, i-1 do
    newpath = newpath.. ""/"" ..pathtbl[i2]
   end
   newpath = newpath.. ""/"" ..v
   if not isfolder(newpath) then
    makefolder(newpath)
   end
  end
 end
end


if not isfolder(""ECCS_Searcher_V2.3"") then
createfolders(""ECCS_Searcher_V2.3"")
end

if not isfile(""ECCS_Searcher_V2.3/Executor.ECCS"") then
writefile(""ECCS_Searcher_V2.3/Executor.ECCS"", ExecutorTextBox.Text)
end

if not isfile(""ECCS_Searcher_V2.3/AutoExecute.ECCS"") then
writefile(""ECCS_Searcher_V2.3/AutoExecute.ECCS"", "" "")
end

local File1 = readfile(""ECCS_Searcher_V2.3/Executor.ECCS"")
ExecutorTextBox.Text = File1

local File2 = readfile(""ECCS_Searcher_V2.3/AutoExecute.ECCS"")
spawn(function()
loadstring(File2)()
end)
spawn(function()
MainFrame:TweenPosition(UDim2.new(0.5, 0, 0.5, 0),""InOut"",""Sine"",0.3)
Hint:TweenPosition(UDim2.new(0.5, 0, 0.5, 0),""InOut"",""Sine"",0.2)
end)
getfakeasset = getcustomasset or getsynasset
HttpService = game:GetService(""HttpService"")
TextService = game:GetService(""TextService"")

page = 1
gquery = """"

function tableConcat(t1,t2)
	for i, v in pairs(t2) do
		table.insert(t1, v)
	end
	return t1
end

ScriptListFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
ScriptListFrame.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)


VerifiedScript = VerifiedScriptFrame:Clone()
Script = ScriptFrame:Clone()
ScriptFrame:Destroy()
VerifiedScriptFrame:Destroy()


function fastmodeExec(func)
	if getgenv().fastmode == true then
		task.spawn(func)
	else
		func()
	end
end
function _if(a, b, c)
    if a then return b else return c end
end
function fetchScripts(query, page)
	page = page or 1
	query = HttpService:UrlEncode(query)
	
	url = _if(query == """", ""https://www.scriptblox.com/api/script/fetch?page=""..tostring(page), ""https://scriptblox.com/api/script/search?q=""..query..""&max=100&mode=free&page="".. tostring(page))
	req = HttpService:JSONDecode(game:HttpGetAsync(url)).result
	
	return req.scripts
end

function fixScript(scriptObj)
	if not scriptObj[""script""] or not scriptObj[""owner""] or not scriptObj[""features""] then
		
			req = HttpService:JSONDecode(game:HttpGetAsync(""https://www.scriptblox.com/api/script/"".. scriptObj.slug)).script
			scriptObj[""script""] = _if(scriptObj[""script""], scriptObj[""script""], req.script)
			scriptObj[""features""] = _if(scriptObj[""features""], scriptObj[""features""], req.features)
			scriptObj[""owner""] = _if(scriptObj[""owner""], scriptObj[""owner""], req.owner)
		end
	
	return scriptObj
end

function refreshScripts(scriptTbl)
	if #scriptTbl <= 0 then
      SearchBox.Text = """"
      SearchBox.PlaceholderText = ""No Script Founded""
UINoScriptsFound:Play()
wait(1)
SearchBox.PlaceholderText = ""ECCS‚Ä¢Searcher""
		return
	else
SearchBox.PlaceholderText = ""ECCS‚Ä¢Searcher""
	end
	
	UIGridLayoutCopy = Scripts.UIGridLayout:Clone()
	Scripts:ClearAllChildren()
	UIGridLayoutCopy.Parent = Scripts
	
	addScripts(scriptTbl)
end

function addScripts(scriptTbl)
	for i, v in pairs(scriptTbl) do
		fastmodeExec(function()
			local newScript

			v = fixScript(v)

			if v.verified == true then
				newScript = VerifiedScript:Clone()
				newScript.ScriptTitle.Text = v.title
				newScript.ScriptAuthor.Text = ""By "".. v.owner.username
				newScript.ScriptGame.Text = v.game.name
				newScript.Parent = Scripts
			else
				newScript = Script:Clone()
				newScript.ScriptTitle.Text = v.title
				newScript.ScriptAuthor.Text = ""By "".. v.owner.username
				newScript.ScriptGame.Text = v.game.name
				newScript.Parent = Scripts
			end


			newScript.DescScriptButton.MouseButton1Click:Connect(function()
			UIClick:Play()
			ScriptListFrame.Visible = false
			InfoBoxDescription.Visible = true
            InfoBoxDescription.Text = v.features or ""API ERROR!""
			end)
            
			newScript.ExecuteButton.MouseButton1Click:Connect(function()
			UIClick:Play()
			loadstring(v.script)()
Hint:TweenPosition(UDim2.new(0.5, 0, 0.5, 0),""InOut"",""Sine"",0.2)
Hint.Text = ""Script executed!""
			end)
			newScript.OpenInExecutorButton.MouseButton1Click:Connect(function()
          	UIClick:Play()
Hint:TweenPosition(UDim2.new(0.5, 0, 0.5, 0),""InOut"",""Sine"",0.2)
Hint.Text = ""Script opened in executor!""
   ExecutorTextBox.Text = """"..v.script
ScriptListFrame.Visible = false
PlayerDataFrame.Visible = false
DevelopersFrame.Visible = false
ExecutorMenuScrollingFrame.Visible = true
ClearTextBoxButton.Visible = true
CopyTextBoxButton.Visible = true
PasteScriptButton.Visible = true
ExecuteTextBoxButton.Visible = true
InfoBoxDescription.Visible = false
PlayerIcon.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
DevelopersButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
SearcherMenuButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ExecutorMenuButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
writefile(""ECCS_Searcher_V2.3/Executor.ECCS"", ExecutorTextBox.Text)
			end)
			newScript.CopyScriptsButton.MouseButton1Click:Connect(function()
		   setclipboard(v.script)
Hint:TweenPosition(UDim2.new(0.5, 0, 0.5, 0),""InOut"",""Sine"",0.2)
Hint.Text = ""Script copied into your clipboard!""
UIClick:Play()
	       end)
newScript.AutoExecuteButton.MouseButton1Click:Connect(function()
UIClick:Play()
if File2 ~= v.script then
writefile(""ECCS_Searcher_V2.3/AutoExecute.ECCS"", v.script)
Hint:TweenPosition(UDim2.new(0.5, 0, 0.5, 0),""InOut"",""Sine"",0.2)
Hint.Text = ""Script added in autoexecute!""
else
if File2 == v.script then
writefile(""ECCS_Searcher_V2.3/AutoExecute.ECCS"", "" "")
Hint:TweenPosition(UDim2.new(0.5, 0, 0.5, 0),""InOut"",""Sine"",0.2)
Hint.Text = ""Script removed from autoexecute!""
end
end
end)



			newScript.CopyLinkButton.MouseButton1Click:Connect(function()
            setclipboard(""https://scriptblox.com/script/"".. v.slug)
UIClick:Play()
Hint:TweenPosition(UDim2.new(0.5, 0, 0.5, 0),""InOut"",""Sine"",0.2)
Hint.Text = ""Link copied into your clipboard!""
            end)
		end)
	end
	
	pagefetchrunning = false
end

SearchBox.FocusLost:Connect(function(enterPressed)
	if enterPressed then
UIClick:Play()
PasteScriptButton.Visible = false
ScriptListFrame.Visible = true
PlayerDataFrame.Visible = false
ExecutorMenuScrollingFrame.Visible = false
ClearTextBoxButton.Visible = false
CopyTextBoxButton.Visible = false
ExecuteTextBoxButton.Visible = false
DevelopersFrame.Visible = false
InfoBoxDescription.Visible = false
PlayerIcon.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
DevelopersButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
SearcherMenuButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
ExecutorMenuButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
writefile(""ECCS_Searcher_V2.3/Executor.ECCS"", ExecutorTextBox.Text)
		gquery = SearchBox.Text
		page = 1
		local scriptsTbl = fetchScripts(SearchBox.Text, 1)
		refreshScripts(scriptsTbl)
	end
end)

SearchButton.MouseButton1Click:Connect(function()
UIClick:Play()
PasteScriptButton.Visible = false
ScriptListFrame.Visible = true
PlayerDataFrame.Visible = false
ExecutorMenuScrollingFrame.Visible = false
ClearTextBoxButton.Visible = false
CopyTextBoxButton.Visible = false
ExecuteTextBoxButton.Visible = false
DevelopersFrame.Visible = false
InfoBoxDescription.Visible = false
PlayerIcon.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
DevelopersButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
SearcherMenuButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
ExecutorMenuButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
writefile(""ECCS_Searcher_V2.3/Executor.ECCS"", ExecutorTextBox.Text)
gquery = SearchBox.Text
		page = 1
		local scriptsTbl = fetchScripts(SearchBox.Text, 1)
		refreshScripts(scriptsTbl)
end)
InfoBoxDescription.MouseButton1Click:Connect(function()
UIClick:Play()
ScriptListFrame.Visible = true
InfoBoxDescription.Visible = false
end)
local gui = MainFrame

local dragging
local dragInput
local dragStart
local startPos
Loading:Destroy()

local function update(input)
	local delta = input.Position - dragStart
	gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

gui.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = gui.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

gui.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)
refreshScripts(fetchScripts(gquery, 1))

ScriptListFrame:GetPropertyChangedSignal(""CanvasPosition""):Connect(function()
	if (ScriptListFrame.CanvasPosition.Y + ScriptListFrame.AbsoluteSize.Y) >= ScriptListFrame.AbsoluteCanvasSize.Y -200 and not pagefetchrunning then
		page = page + 1
		pagefetchrunning = true
		addScripts(fetchScripts(gquery, page))
	end
end)"
DYxraysk,Untitled,mfemtsuccess,JSON,Thursday 20th of June 2024 06:45:00 AM CDT,"ÿ£ŸáŸÖŸäÿ© ÿ≠ÿ¨ÿ≤ ÿ∫ÿ±ŸÅÿ© ŸÖÿ∑ŸÑÿ© ÿπŸÑŸâ ÿßŸÑŸÉÿπÿ®ÿ© ŸÅŸä ŸÅŸÜÿßÿØŸÇ ŸÖŸÉÿ© ÿßŸÑŸÖŸÉÿ±ŸÖÿ©
 ŸÇÿ®ŸÑ ÿ≠ÿ¨ÿ≤ ÿ∫ÿ±ŸÅÿ© ŸÖÿ∑ŸÑÿ© ÿπŸÑŸâ ÿßŸÑŸÉÿπÿ®ÿ©: ŸÖÿß Ÿäÿ¨ÿ® ŸÖÿπÿ±ŸÅÿ™Ÿá - ÿØŸÑŸäŸÑ ÿ¥ÿßŸÖŸÑ ŸÑÿπÿßŸÖ 2025 - ÿ£ŸáŸÖŸäÿ© ÿ≠ÿ¨ÿ≤ ÿ∫ÿ±ŸÅÿ© ŸÖÿ∑ŸÑÿ© ÿπŸÑŸâ ÿßŸÑŸÉÿπÿ®ÿ© ŸÅŸä ŸÅŸÜÿßÿØŸÇ ŸÖŸÉÿ© ÿßŸÑŸÖŸÉÿ±ŸÖÿ©
Source: image-tc.galaxy.tf
ÿ≠ÿ¨ÿ≤ ÿ∫ÿ±ŸÅÿ© ŸÖÿ∑ŸÑÿ© ÿπŸÑŸâ ÿßŸÑŸÉÿπÿ®ÿ© ŸäŸÖŸÜÿ≠ ÿßŸÑÿ≤ÿßÿ¶ÿ± ÿ¥ÿπŸàÿ±Ÿãÿß ÿ®ÿßŸÑÿ≥ŸÉŸäŸÜÿ© ŸàÿßŸÑÿ±ÿßÿ≠ÿ©. ÿ•ŸÜŸá Ÿäÿ™Ÿäÿ≠ ŸÑŸáŸÖ ÿ±ÿ§Ÿäÿ© ÿßŸÑŸÉÿπÿ®ÿ© ÿßŸÑŸÖÿ¥ÿ±ŸÅÿ© ŸÅŸä ŸÉŸÑ ŸÑÿ≠ÿ∏ÿ©ÿå ŸÖŸÖÿß Ÿäÿπÿ≤ÿ≤ ÿ™ÿ¨ÿ±ÿ®ÿ™ŸáŸÖ ÿßŸÑÿØŸäŸÜŸäÿ©. ÿßŸÑÿ•ÿ∑ŸÑÿßŸÑÿ© ÿßŸÑŸÖÿ®ÿßÿ¥ÿ±ÿ© ÿ™Ÿèÿ≥ŸáŸÖ ŸÅŸä ÿ™ÿπÿ≤Ÿäÿ≤ ÿßŸÑÿ±Ÿàÿ≠ÿßŸÜŸäÿ© ÿÆÿßÿµÿ© ÿÆŸÑÿßŸÑ ÿ£ŸàŸÇÿßÿ™ ÿßŸÑÿµŸÑÿßÿ©. Ÿáÿ∞ÿß ÿßŸÑÿÆŸäÿßÿ± ÿ£Ÿäÿ∂Ÿãÿß ŸäŸàŸÅÿ± ŸÑŸÑÿ≤Ÿàÿßÿ± ÿ≥ŸáŸàŸÑÿ© ÿßŸÑŸàÿµŸàŸÑ ÿ•ŸÑŸâ ÿßŸÑÿ≠ÿ±ŸÖ ÿßŸÑŸÖŸÉŸä ÿßŸÑÿ¥ÿ±ŸäŸÅÿå ŸÖŸÖÿß Ÿäÿ¨ŸÜÿ®ŸáŸÖ ÿπŸÜÿßÿ° ÿßŸÑÿ™ŸÜŸÇŸÑ ŸàÿßŸÑŸÖÿ≥ÿßŸÅÿßÿ™ ÿßŸÑÿ∑ŸàŸäŸÑÿ©. ÿ®ÿßŸÑÿ•ÿ∂ÿßŸÅÿ©ÿå ÿßŸÑŸÅŸÜÿßÿØŸÇ ÿßŸÑŸÖÿ∑ŸÑÿ© ÿπŸÑŸâ ÿßŸÑŸÉÿπÿ®ÿ© ÿ∫ÿßŸÑÿ®Ÿãÿß ŸÖÿß ÿ™ŸÇÿØŸÖ ÿÆÿØŸÖÿßÿ™ ÿ±ÿßŸÇŸäÿ© ŸàŸÖÿ±ÿßŸÅŸÇ ÿ≠ÿØŸäÿ´ÿ© ŸÑÿ∂ŸÖÿßŸÜ ÿ•ŸÇÿßŸÖÿ© ŸÖÿ±Ÿäÿ≠ÿ©. ŸäŸÖŸÉŸÜ ŸÑŸÑÿ≠ÿ¨ÿßÿ¨ ŸàÿßŸÑŸÖÿπÿ™ŸÖÿ±ŸäŸÜ ÿßŸÑÿ™ŸÖÿ™ÿπ ÿ®ÿ•ÿ∑ŸÑÿßŸÑÿßÿ™ ÿÆŸÑÿßÿ®ÿ© ÿπŸÑŸâ ÿßŸÑŸÖÿπÿßŸÑŸÖ ÿßŸÑÿ•ÿ≥ŸÑÿßŸÖŸäÿ© ÿßŸÑŸÖŸÇÿØÿ≥ÿ©ÿå ŸÖŸÖÿß Ÿäÿ¨ÿπŸÑ ÿ•ŸÇÿßŸÖÿ™ŸáŸÖ ŸÅŸä ŸÖŸÉÿ© ÿ™ÿ¨ÿ±ÿ®ÿ© ŸÅÿ±ŸäÿØÿ© ŸàŸÑÿß ÿ™ŸèŸÜÿ≥Ÿâ. ÿ®Ÿáÿ∞Ÿá ÿßŸÑÿ∑ÿ±ŸäŸÇÿ©ÿå Ÿäÿ¨ŸÖÿπ ÿßŸÑÿ≤ÿßÿ¶ÿ± ÿ®ŸäŸÜ ÿßŸÑÿ±Ÿàÿ≠ÿßŸÜŸäÿ© ŸàÿßŸÑŸÅÿÆÿßŸÖÿ© ŸÅŸä ÿ¢ŸÜ Ÿàÿßÿ≠ÿØ.

ÿ®ÿßŸÑÿ∑ÿ®ÿπ! ÿ≥ÿ£ŸÉÿ™ÿ® ŸÑŸÉ ŸÖÿ≠ÿ™ŸàŸâ ŸÅŸÇÿ±ÿßÿ™ ŸÖŸáŸäÿ£ ŸÑŸÑÿ≥ŸäŸà ÿ™ÿ≠ÿ™ ÿßŸÑÿπŸÜÿßŸàŸäŸÜ ÿßŸÑŸÖÿ≠ÿØÿØÿ©:

ÿ£ŸÅÿ∂ŸÑ ÿßŸÑŸÅŸÜÿßÿØŸÇ ŸÅŸä ŸÖŸÉÿ© ÿßŸÑŸÖŸÉÿ±ŸÖÿ© ŸÑÿ™ÿ¨ÿ±ÿ®ÿ© ŸÖŸÖŸäÿ≤ÿ©
ÿ™ÿπÿØ ŸÖŸÉÿ© ÿßŸÑŸÖŸÉÿ±ŸÖÿ© Ÿàÿ¨Ÿáÿ© ÿ£ÿ≥ÿßÿ≥Ÿäÿ© ŸàŸÖŸÇÿØÿ≥ÿ© ŸÑŸÑŸÖÿ≥ŸÑŸÖŸäŸÜ ŸÖŸÜ ÿ¨ŸÖŸäÿπ ÿ£ŸÜÿ≠ÿßÿ° ÿßŸÑÿπÿßŸÑŸÖ. ŸàŸÑÿ∂ŸÖÿßŸÜ ÿ™ÿ¨ÿ±ÿ®ÿ© ÿ•ŸäŸÖÿßŸÜŸäÿ© Ÿàÿ≥Ÿäÿßÿ≠Ÿäÿ© ŸÑÿß ÿ™ŸèŸÜÿ≥Ÿâÿå Ÿäÿ™ÿ∑ŸÑÿ® ÿßŸÑÿ£ŸÖÿ± ÿßÿÆÿ™Ÿäÿßÿ± ŸÅŸÜÿØŸÇ ŸäŸàŸÅÿ± ÿßŸÑÿ±ÿßÿ≠ÿ© ŸàÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßŸÑŸÖŸÖÿ™ÿßÿ≤ÿ©. ÿ™ÿ™ŸÜŸàÿπ ÿßŸÑŸÅŸÜÿßÿØŸÇ ŸÅŸä ŸÖŸÉÿ© ÿßŸÑŸÖŸÉÿ±ŸÖÿ© ÿ®ŸäŸÜ ÿßŸÑŸÅÿßÿÆÿ±ÿ© ŸàÿßŸÑŸÖÿ™Ÿàÿ≥ÿ∑ÿ©ÿå ŸÉŸÑ ŸÖŸÜŸáÿß ŸäŸÇÿØŸÖ ŸÖÿ≤ÿßŸäÿß ÿÆÿßÿµÿ© ŸÑŸäÿ∂ŸÖŸÜ ÿ•ŸÇÿßŸÖÿ© ŸÖÿ±Ÿäÿ≠ÿ© ŸÑŸÑÿ≤Ÿàÿßÿ±.

ÿ£ÿ®ÿ±ÿ≤ ÿßŸÑŸÅŸÜÿßÿØŸÇ ŸÅŸä ŸÖŸÉÿ© ÿßŸÑŸÖŸÉÿ±ŸÖÿ© ÿ™ÿ¥ŸÖŸÑ:

ŸÅŸÜÿØŸÇ ÿ®ÿ±ÿ¨ ÿßŸÑÿ≥ÿßÿπÿ© ÿßŸÑŸÖŸÑŸÉŸä ŸÅŸäÿ±ŸÖŸàŸÜÿ™: ŸäŸÇÿπ ÿ®ÿ¨Ÿàÿßÿ± ÿßŸÑŸÖÿ≥ÿ¨ÿØ ÿßŸÑÿ≠ÿ±ÿßŸÖ ŸàŸäŸàŸÅÿ± ŸÖŸÜÿßÿ∏ÿ± ÿÆŸÑÿßÿ®ÿ© ŸÑŸÑŸÉÿπÿ®ÿ© ÿßŸÑŸÖÿ¥ÿ±ŸÅÿ©.
ŸÅŸÜÿØŸÇ ÿ±Ÿàÿ™ÿßŸÜÿß ŸÖŸÉÿ©: ŸäŸÇÿØŸÖ ÿ£ÿ≥ÿπÿßÿ± ŸÖÿπŸÇŸàŸÑÿ© ŸàÿÆÿØŸÖÿßÿ™ ŸÖŸÖÿ™ÿßÿ≤ÿ© ÿ™ŸÜÿßÿ≥ÿ® ÿßŸÑÿπÿßÿ¶ŸÑÿßÿ™.
ŸÅŸÜÿØŸÇ ŸÖŸÉÿ© ŸáŸäŸÑÿ™ŸàŸÜ ŸÑŸÑÿ£ÿ¨ŸÜÿ≠ÿ©: ŸäŸàŸÅÿ± ŸÖÿ¨ŸÖŸàÿπÿ© ŸÖÿ™ŸÜŸàÿπÿ© ŸÖŸÜ ÿßŸÑÿ∫ÿ±ŸÅ ŸàÿßŸÑÿ£ÿ¨ŸÜÿ≠ÿ© ÿßŸÑŸÅÿßÿÆÿ±ÿ©.



reed more:https://alkawtherhotel.com/book-a-room-with-a-view-of-the-kaaba/"
WELY0M6P,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,atakan1983,JavaScript,Thursday 20th of June 2024 06:41:16 AM CDT,"G2A.com complimentary voucher & games guide.
Any gift card for free on G2A.com including Playstation gift cards & all else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
17th of June 2024

"
AA0CG81X,cppm.hpp,alfps,C++,Thursday 20th of June 2024 06:37:57 AM CDT,"#pragma once
// Using C++20 ""ranges"" for `up_to` construct, which otherwise is more than a single line of code.

#include <algorithm>
#include <filesystem>
#include <functional>
#include <iostream>
#include <iterator>         // std::begin, std::end, std::size
#include <numeric>
#include <ranges>
#include <stack>
#include <stdexcept>
#include <string>
#include <string_view>
#include <type_traits>
#include <utility>

#include <assert.h>         // assert
#include <stdlib.h>         // EXIT_...

#define CPPM_ITS_ALL( c )   std::begin( c ), std::end( c )  // TODO: check for lvalue
#define CPPM_FAIL( s )      cppm::fail( std::string() + __func__ + "" - "" + (s) )

namespace cppm {        // ""C++ machinery""
    namespace fs = std::filesystem;
    using   std::find,                                      // <algorithm>
            std::function,                                  // <functional>
            std::cin, std::cerr, std::endl, std::istream,   // <iostream>
            std::end, std::size,                            // <iterator>
            std::accumulate,                                // <numeric>
            std::ranges::iota_view,                         // <ranges>
            std::stack,                                     // <stack>
            std::exception, std::runtime_error,             // <stdexcept>
            std::string,                                    // <string>
            std::string_view,                               // <string_view>
            std::remove_reference_t,                        // <type_traits>
            std::declval;                                   // <utility>

    #if __cplusplus >= 202002
        // For `std::filesystem::path` workarounds.
        using   std::u8string,          // <string>
                std::u8string_view;     // <string_view>
    #endif

    inline namespace basic_types {
        using Byte = unsigned char;
    }  // inline namespace basic_types

    inline namespace type_makers {
        template< class Type > using const_ = const Type;
        template< class Type > using in_ = const Type&;

        template< class Container >
        using Value_type_of_ = remove_reference_t< decltype( *declval<Container>().begin() ) >;
    }  // inline namespace type_makers

    inline namespace x_handling {
        constexpr auto now( const bool condition ) noexcept -> bool { return condition; }

        [[noreturn]] auto fail( in_<string> msg ) -> bool { throw runtime_error( msg ); for(;;){} }

        auto with_exceptions_displayed( in_<function<void()>> app_main )
            -> int
        {
            try {
                app_main();
                return EXIT_SUCCESS;
            } catch( in_<exception> x ) {
                cerr << ""!"" << x.what() << endl;
            }
            return EXIT_FAILURE;
        }
    }  // inline namespace x_handling

    inline namespace control {
        auto up_to( const int n ) -> auto { return iota_view( 0, n ); }
        auto one_through( const int n ) -> auto { return iota_view( 1, n + 1 ); }
        
        void repeat_times( const int n, in_<function<void()>> f )
        {
            // The void cast because MSVC ignores `[[maybe_unused]]` here and warns anyway. :(
            for( const int _: up_to( n ) ) { (void)_; f(); }
        }
    }  // inline namespace control

    inline namespace math {
        template< class Number >
        constexpr auto sign_of( const Number v )
            -> int
        { return (v > 0) - (v < 0); }

        // Adapted from <url: https://stackoverflow.com/a/44719165/464581>.
        template< class Number >
        auto binomial_of( const Number n, const Number k )
            -> Number
        {
            now( k <= n ) or fail( ""binomial_of: k > n."" );
            return (0?0
            : k == 0 or k == n?       1       // Edge case.
            : k == 1 or k == n - 1?   n       // First.
            : k + k < n?              (binomial_of( n - 1, k - 1)*n)/k        // Fastest for k+k < n.
            :                         (binomial_of( n - 1, k )*n)/(n - k)     // Fastest for k+k ‚â• n.
            );
        }
    }  // inline namespace math

    inline namespace collection_util {
        template< class Collection >
        constexpr auto is_empty( in_<Collection> c )
            -> bool
        { return c.empty(); }

        template< class Collection >
        constexpr auto intsize_of( in_<Collection> c )
            -> int
        { return static_cast<int>( size( c ) ); }

        template< class Collection, class Value >
        constexpr auto is_in( in_<Collection> c, in_<Value> v )
            -> bool
        { return (find( CPPM_ITS_ALL( c ), v ) != end( c )); }

        template< class Sequence >
        auto sum_of( in_<Sequence> c )
            -> Value_type_of_<Sequence>
        { return accumulate( c.begin(), c.end(), decltype( Value_type_of_<Sequence>() )() ); }

        template< class Item >
        auto popped_top_of( stack<Item>& st )
            -> Item
        {
            Item result = st.top();
            st.pop();
            return result;
        }
    }  // inline namespace collection_util

    inline namespace io {
        inline auto last_op_succeeded( istream& stream )
            -> bool
        { return not stream.fail(); }

        template< class T >
        auto input_( istream& stream = cin )
        {
            T result;
            stream >> result;
            now( last_op_succeeded( stream ) ) or CPPM_FAIL( ""Input failed."" );
            return result;
        }
    }  // inline namespace io

    inline namespace utf8 {
        inline constexpr auto& oe = ""√∏"";

        constexpr auto literals_are_utf8()
            -> bool
        { return (Byte( oe[0] ) == 195 and Byte( oe[1] ) == 184 ); }

        inline void globally_once_assert_utf8_literals()
        {
            static const int dummy = (  // A globally-once check, on first call of this function.
                assert( literals_are_utf8() or !""Use the compiler option(s) for UTF-8 literals."" ),
                0
                );
            (void) dummy;
        }
    }  // inline namespace utf8

    inline namespace stdlib_workarounds {
        inline auto path_from_u8( in_<string_view> spec )
            -> fs::path
        {
            globally_once_assert_utf8_literals();
            #if __cplusplus < 202002    // `<` b/c `u8path` is deprecated in C++20; ‚á® warnings. 
                return fs::u8path( spec );
            #else
                using U8 = const char8_t;   // `char8_t` is a distinct type in C++20 and later.
                return fs::path( u8string_view( reinterpret_cast<U8*>( spec.data() ), spec.size() ) );
            #endif 
        }

        inline auto to_u8_string( in_<fs::path> p )
            -> string
        {
            globally_once_assert_utf8_literals();
            #if __cplusplus < 202002
                return p.u8string();                    // Returns a `std::string` in C++17.
            #else
                const std::u8string s = p.u8string();
                return string( s.begin(), s.end() );    // Needless copy except for C++20 nonsense.
            #endif 
        }
    }  // inline namespace stdlib_workarounds

    inline namespace filesystem {
        class Simple_path
        {
            fs::path    m_path;

        public:
            Simple_path( in_<string_view> spec ):
                m_path( stdlib_workarounds::path_from_u8( spec ) )
            {}

            template< class Param >
            Simple_path( in_<Param> spec ): Simple_path( string_view( spec ) ) {}

            auto str() const -> string { return stdlib_workarounds::to_u8_string( m_path ); }
            operator string () const { return str(); }      // File open & formatting support.
            auto operator-() const -> string { return str(); }          // Reduction to string.
        };

        using Path = Simple_path;
    }  // inline namespace filesystem
}  // namespace cppm
"
PBqitez2,main.cpp,alfps,C++,Thursday 20th of June 2024 06:36:33 AM CDT,"#include ""cppm.hpp""

#include <cstddef>
#include <cstdint>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <limits>
#include <unordered_map>
#include <stack>
#include <string>
#include <string_view>
#include <utility>

#define FAIL    CPPM_FAIL

namespace app{
    using   cppm::in_;              // ""cppm.hpp""
    using   std::size_t;            // <cstddef>

    auto hash_of( in_<struct Index_span> ) -> size_t;
}  // namespace app

template<>
class std::hash<app::Index_span>
{
public:
    auto operator()( const app::Index_span& span ) const
        -> std::size_t
    { return app::hash_of( span ); }
};

namespace app {
    using   cppm::const_, cppm::in_,
            cppm::now, cppm::up_to, cppm::one_through, cppm::repeat_times,
            cppm::is_empty, cppm::intsize_of, cppm::is_in, cppm::popped_top_of,
            cppm::input_, cppm::Path;
    using   std::int64_t,                       // <cstdint>
            std::ifstream,                      // <fstream>
            std::setw,                          // <iomanip>
            std::cout, std::clog, std::ostream, // <iostream>
            std::numeric_limits,                // <limits>
            std::unordered_map,                 // <unordered_map>
            std::stack,                         // <stack>
            std::string,                        // <string>
            std::string_view,                   // <string_view>
            std::move, std::hash,               // <utility>
            std::vector;                        // <vector>

    using Number = int64_t;
    template< class Key, class Value > using Map_ = unordered_map< Key, Value >;
    auto& out = cout;
    auto& trace = clog;

    struct Operator
    {
        enum Enum{ add = '+', sub = '-', mul = '*', any = '?' };
        static constexpr auto chars = string_view( ""+-*?"" );

        static constexpr auto result_of( const Enum op, const Number a, const Number b )
            -> Number
        {
            assert( op != any );
            switch( op ) {
                case add:   return a + b;
                case sub:   return a - b;
                case mul:   return a * b;
                case any:   for( ;; ) {}        // Should never get here.
            }
        }

        friend
        auto to_string( const Enum op ) -> string { return {char( op )}; }
    };

    struct Eq_data
    {
        vector<Number>              values;
        vector<Operator::Enum>      operators;

        auto is_valid() const
            -> bool
        { return (values.size() == operators.size()); }

        auto n_values() const       -> int { return intsize_of( values ); }
        auto n_operators() const    -> int { return n_values() - 1; }
    };

    struct Index_span
    {
        using Self = Index_span;
    
        int     i_first;
        int     i_beyond;

        constexpr auto length() const -> int { return i_beyond - i_first; }

        friend
        constexpr auto compare( in_<Self> a, in_<Self> b )
            -> int
        {
            if( const int r = a.i_first - b.i_first ) { return r; }
            return a.i_beyond - b.i_beyond;
        }

        friend
        constexpr auto operator==( in_<Self> a, in_<Self> b ) -> bool { return (compare( a, b ) == 0); }
    };

    auto hash_of( in_<Index_span> span )
        -> size_t
    { return hash<int>()( span.i_first ) ^ hash<int>()( span.i_beyond ); }

    class Min_max_searcher
    {
        Map_<Index_span, Number>        m_min;
        Map_<Index_span, Number>        m_max;
        Eq_data                         m_spec;

        auto all_span() const -> auto { return Index_span{ 0, m_spec.n_values() }; }

        void find_min_and_max_for( in_<Index_span> span )
        {
            const int   n_op_indices    = span.length() - 1;
            const int   i_beyond_ops    = span.i_first + n_op_indices;

            Number min  = numeric_limits<Number>::max();
            Number max  = numeric_limits<Number>::min();

            for( int i_op = span.i_first; i_op < i_beyond_ops; ++i_op ) {
                static const Operator::Enum all_ops[] = { Operator::add, Operator::sub, Operator::mul };

                const bool  do_op_substitution  = (m_spec.operators[i_op] == Operator::any);
                const int   n_ops               = (do_op_substitution? intsize_of( all_ops ) : 1);
                const auto  p_first_op          = (n_ops == 1? &m_spec.operators[i_op] : all_ops);
                const auto  span_a              = Index_span{ span.i_first, i_op + 1 };
                const auto  span_b              = Index_span{ i_op + 1, span.i_beyond };
                for( const Operator::Enum* p_op = p_first_op; p_op != p_first_op + n_ops; ++p_op ) {
                    switch( *p_op ) {
                        case Operator::add: {
                            const Number min_sum = m_min[span_a] + m_min[span_b];
                            const Number max_sum = m_max[span_a] + m_max[span_b];
                            if( min_sum < min ) { min = min_sum; }
                            if( max_sum > max ) { max = max_sum; }
                            break;
                        }
                        case Operator::sub: {
                            const Number min_difference = m_min[span_a] - m_max[span_b];
                            const Number max_difference = m_max[span_a] - m_min[span_b];
                            if( min_difference < min ) { min = min_difference; }
                            if( max_difference > max ) { max = max_difference; }
                            break;
                        }
                        case Operator::mul: {
                            const Number a1 = m_min[span_a];  const Number a2 = m_max[span_a];
                            const Number b1 = m_min[span_b];  const Number b2 = m_max[span_b];
                            for( const Number a: {a1, a2} ) for( const Number b: {b1, b2} ) {
                                const Number product = a*b;
                                if( product < min ) { min = product; }
                                if( product > max ) { max = product; }
                            }
                            break;
                        }
                        case Operator::any: for( ;; ) {}        // Should never get here.
                    }    // switch
                }  // for p_op
            }  // for i_op
            m_min.insert( {span, min} );
            m_max.insert( {span, max} );
        }

        void find_min_and_max_values()
        {
            const int k = m_spec.n_values();
            for( const int span_size: one_through( k ) ) {
                for( const int i_first_value: up_to( k + 1 - span_size ) ) {
                    const auto span = Index_span{ i_first_value, i_first_value + span_size };
                    if( span_size == 1 ) {
                        m_min.insert( {span, m_spec.values[span.i_first]} );
                        m_max.insert( {span, m_spec.values[span.i_first]} );
                    } else {
                        find_min_and_max_for( span );
                    }
                }  // for span.i_first
            }  // for span_size
        }

    public:
        Min_max_searcher( Eq_data spec ):
            m_spec( move( spec ) )
        { find_min_and_max_values(); }

        auto min() -> Number { return m_min[all_span()]; }
        auto max() -> Number { return m_max[all_span()]; }
    };

    auto eq_data_from( in_<Path> specfile_path )
        -> Eq_data
    {
        ifstream f( specfile_path );
        now( not f.fail() ) or FAIL( ""Failed to open the spec file."" );

        const int k = input_<int>( f );
        now( 2 <= k and k <= 200 ) or FAIL( ""Invalid problem size (number of pairs k)"" );

        Eq_data result;
        repeat_times( k, [&f, &result]
        {
            const int v = input_<int>( f );
            now( -9 <= v and v <= 9 ) or FAIL( ""Operand value out of range."" );
            result.values.push_back( v );

            const char op = input_<char>( f );
            now( is_in( Operator::chars, op ) ) or FAIL( ""Invalid operator."" );
            result.operators.push_back( static_cast<Operator::Enum>( op ) );
        } );
        assert( result.is_valid() );
        return result;
    }

    auto operator<<( ostream& stream, in_<Eq_data> spec )
        -> ostream&
    {
        for( const int i: up_to( spec.n_values() ) ) {
            out << spec.values[i];
            if( i < spec.n_values() - 1 ) {
                out << ' ' << to_string( spec.operators[i] ) << ' ';
            }
        }
        return stream;
    }

    void run()
    {
        out << ""Running.\n"";
        const Eq_data spec = eq_data_from( ""data/01.txt"" );
        out << ""Data: "" << spec << ""\n"";
        out << ""\n"";
        auto searcher = Min_max_searcher( spec );
        out << ""min = "" << searcher.min() << "", max = "" << searcher.max() << "".\n"";
    }
}  // namespace app

auto main() -> int { return cppm::with_exceptions_displayed( app::run ); }
"
Y8w05wpU,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,tajdiqul,JavaScript,Thursday 20th of June 2024 06:34:58 AM CDT,"G2A.com free voucher & games guide.
Any gift card for free on G2A.com including Amazon gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17 2024

"
9BQXZY8Z,üéÅG2A.com Free Gift Card Guide June 2024 V2üéÅ,ssss50ws,GetText,Thursday 20th of June 2024 06:29:49 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
20 June 2024"
rfretece,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,notgoodatscripting,JavaScript,Thursday 20th of June 2024 06:29:00 AM CDT,"G2A.com free gift card & gaming guide.
Any voucher for free on G2A.com including Steam gift cards & everything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
17th of June 2024

"
5uH88cKc,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,bgill55,JavaScript,Thursday 20th of June 2024 06:23:02 AM CDT,"G2A.com complimentary gift card & gaming guide.
Any voucher for free on G2A.com including Xbox gift cards & everything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
17th of June 2024

"
ZP504mVG,ü§ëG2A.com Free Gift Card Guide June 2024 NEWü§ë,portalxwe,GetText,Thursday 20th of June 2024 06:22:05 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view


Working as of:
20 June 2024"
h7SACrLE,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,FreeRobux12345,JavaScript,Thursday 20th of June 2024 06:17:02 AM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Amazon gift cards & anything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
17th of June 2024

"
41FqpZGN,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,mikyser,JavaScript,Thursday 20th of June 2024 06:11:02 AM CDT,"G2A.com free voucher & games guide.
Any gift card for free on G2A.com including Steam gift cards & anything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
17th of June 2024

"
6f5Ga06b,Bot√£o do Joinchat (WhatsApp) pulsante,supremaux,CSS,Thursday 20th of June 2024 06:03:40 AM CDT,".joinchat__button {
    animation: pulse 2s infinite;
}

@keyframes pulse {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.1);
    }
    100% {
        transform: scale(1);
    }
}"
Ckd1MTsL,M√™me Slim Capella ne le savait pas !,Shpindlier,HTML,Thursday 20th of June 2024 06:02:22 AM CDT,"<!DOCTYPE html>
<html>
	<head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8"">
	</head>
	<body>
		<div style=""background-color: #000;"">
			<table style=""box-sizing: border-box; background: #000; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
				<tbody>
					<tr>
						<td><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" alt=""startimg1""><img src=""https://i.imgur.com/yCnpNVC.png"" alt=""Logo"" class=""CToWUd a6T"" data-bit=""iit"" tabindex=""0""></a></td>
					</tr>
					<tr>
						<td>
							<p style=""color: #fff; font-family: 'Arial'; font-size: 44px; letter-spacing: 0.01em; line-height: 40px; text-decoration: none; width: 500px; padding: 0px 0px 0px 34px;""><strong>M√™me Slim Capella ne le savait pas !</strong></p>
						</td>
					</tr>
				</tbody>
				<tbody>
					<tr>
						<td align=""center""><img src=""https://gen.sendtric.com/countdown/3olw3wj8cb"" style=""display: block; max-width: 100%;""></td>
					</tr>
				</tbody>
				<tbody>
					<tr>
						<td align=""center"" style=""padding-top: 10px;"">
							<p style=""margin: 0; padding: 24px; color: #fff; width: 500px; font-family: 'Arial'; font-size: 19px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">Le 21 juin, un √©v√©nement estival important aura lieu sur Grand RP ! Nous vous annon√ßons un nouveau BattlePass d'√©t√© ! Il est temps de collecter les r√©compenses restantes et de se pr√©parer √† en recevoir de nouvelles !</p>
						</td>
					</tr>
					<tr>
						<td align=""center"" class=""m_392802941358454063b m_392802941358454063n m_392802941358454063e m_392802941358454063g m_392802941358454063mga m_392802941358454063au m_392802941358454063vp m_392802941358454063xb m_392802941358454063qu m_392802941358454063a8"" style=""border-collapse: collapse; font-size: 0; padding: 0; word-break: break-word;"">
							<table border=""0"" cellpadding=""0"" cellspacing=""0"" role=""presentation"" style=""border-collapse: separate; width: 309px; line-height: 100%;"" width=""309"">
								<tbody>
									<tr>
										<td align=""center"" bgcolor=""#fffffe"" role=""presentation"" style=""border-collapse: collapse; background: #fffffe; border: none; border-radius: 15px 15px 15px 15px;"" valign=""middle""><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" style=""display: inline-block; width: 309px; background-color: #fffffe; color: #ffffff; font-family: 'Helvetica Neue','Helvetica',sans-serif; font-size: 13px; font-weight: normal; line-height: 100%; margin: 0; text-decoration: none; text-transform: none; padding: 16px 0px 16px 0px; border-radius: 36px 36px 36px 36px;"" target=""_blank"" data-saferedirecturl=""https://gta5grand.com/?ref=2""><span style=""font-size: 20px; font-family: 'Helvetica Neue','Helvetica',sans-serif; font-weight: bold; color: #0a0d15; line-height: 100%;"">I‚Äôll be there soon!</span></a></td>
									</tr>
								</tbody>
							</table>
						</td>
					</tr>
					<tr>
						<td align=""center""><a rel=""noopener noreferrer"" style=""color: #fff; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; text-decoration-line: underline;"" href=""{{unsubscribe_url}}""><br>If you are not interested</a></td>
					</tr>
					<tr>
						<td align=""center"">
							<p style=""color: #afafaf; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; padding: 15px 34px 0px 40px;"">By the way, I decided to let you know because you play on Grand Rp and registered there. If you're not interested, just let me know.</p>
						</td>
					</tr>
				</tbody>
			</table>
		</div>
	</body>
</html>"
ZzkVgqtD,„Åì„ÅÆ„Åì„Å®„Çí„Çπ„É™„É†„Éª„Ç´„Éö„É©„Åô„Çâ‰∫àÊÉ≥„Åó„Å™„Åã„Å£„Åü!,Shpindlier,HTML,Thursday 20th of June 2024 06:00:14 AM CDT,"<!DOCTYPE html>
<html>
	<head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8"">
	</head>
	<body>
		<div style=""background-color: #000;"">
			<table style=""box-sizing: border-box; background: #000; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
				<tbody>
					<tr>
						<td><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" alt=""startimg1""><img src=""https://i.imgur.com/yCnpNVC.png"" alt=""Logo"" class=""CToWUd a6T"" data-bit=""iit"" tabindex=""0""></a></td>
					</tr>
					<tr>
						<td>
							<p style=""color: #fff; font-family: 'Arial'; font-size: 44px; letter-spacing: 0.01em; line-height: 40px; text-decoration: none; width: 500px; padding: 0px 0px 0px 34px;""><strong>„Åì„ÅÆ„Åì„Å®„Çí„Çπ„É™„É†„Éª„Ç´„Éö„É©„Åô„Çâ‰∫àÊÉ≥„Åó„Å™„Åã„Å£„Åü!</strong></p>
						</td>
					</tr>
				</tbody>
				<tbody>
					<tr>
						<td align=""center""><img src=""https://gen.sendtric.com/countdown/3olw3wj8cb"" style=""display: block; max-width: 100%;""></td>
					</tr>
				</tbody>
				<tbody>
					<tr>
						<td align=""center"" style=""padding-top: 10px;"">
							<p style=""margin: 0; padding: 24px; color: #fff; width: 500px; font-family: 'Arial'; font-size: 19px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">6Êúà21Êó•„Å´„ÅØ„Ç∞„É©„É≥„ÉâRP„ÅßÈáçË¶Å„Å™Â§è„ÅÆ„Ç§„Éô„É≥„Éà„ÅåÈñãÂÇ¨„Åï„Çå„Åæ„ÅôÔºÅÊñ∞„Åó„ÅÑÂ§è„ÅÆ„Éê„Éà„É´„Éë„Çπ„ÇíÁô∫Ë°®„Åó„Åæ„ÅôÔºÅÊÆã„Çä„ÅÆË≥ûÂìÅ„ÇíÈõÜ„ÇÅ„Å¶„ÄÅÊñ∞„Åó„ÅÑË≥ûÂìÅ„Å´ÂÇô„Åà„Åæ„Åó„Çá„ÅÜÔºÅ</p>
						</td>
					</tr>
					<tr>
						<td align=""center"" class=""m_392802941358454063b m_392802941358454063n m_392802941358454063e m_392802941358454063g m_392802941358454063mga m_392802941358454063au m_392802941358454063vp m_392802941358454063xb m_392802941358454063qu m_392802941358454063a8"" style=""border-collapse: collapse; font-size: 0; padding: 0; word-break: break-word;"">
							<table border=""0"" cellpadding=""0"" cellspacing=""0"" role=""presentation"" style=""border-collapse: separate; width: 309px; line-height: 100%;"" width=""309"">
								<tbody>
									<tr>
										<td align=""center"" bgcolor=""#fffffe"" role=""presentation"" style=""border-collapse: collapse; background: #fffffe; border: none; border-radius: 15px 15px 15px 15px;"" valign=""middle""><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" style=""display: inline-block; width: 309px; background-color: #fffffe; color: #ffffff; font-family: 'Helvetica Neue','Helvetica',sans-serif; font-size: 13px; font-weight: normal; line-height: 100%; margin: 0; text-decoration: none; text-transform: none; padding: 16px 0px 16px 0px; border-radius: 36px 36px 36px 36px;"" target=""_blank"" data-saferedirecturl=""https://gta5grand.com/?ref=2""><span style=""font-size: 20px; font-family: 'Helvetica Neue','Helvetica',sans-serif; font-weight: bold; color: #0a0d15; line-height: 100%;"">I‚Äôll be there soon!</span></a></td>
									</tr>
								</tbody>
							</table>
						</td>
					</tr>
					<tr>
						<td align=""center""><a rel=""noopener noreferrer"" style=""color: #fff; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; text-decoration-line: underline;"" href=""{{unsubscribe_url}}""><br>If you are not interested</a></td>
					</tr>
					<tr>
						<td align=""center"">
							<p style=""color: #afafaf; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; padding: 15px 34px 0px 40px;"">By the way, I decided to let you know because you play on Grand Rp and registered there. If you're not interested, just let me know.</p>
						</td>
					</tr>
				</tbody>
			</table>
		</div>
	</body>
</html>"
tX0acd0v,data963,TestGuy1,JSON,Thursday 20th of June 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'd19fd7ebac7bb30eae251f2796e6a53d5146fffef1e138e3a0ef8e3d11ec2a4107b40af162fed32a08ca0cba04d039bcc37bf3e0843a5595ba499b4f6e032b7e10e3672dd2061d831ff878634e8f025c7578913f41dd06bd95a72056e764dd98dfcb508b8fe54866c9f1f97a279acd33a2ee445d84c66228277259717a7b8b5f',
  otherdata: [
    'dced0683665c29772ae4b0ac36e461bd',
    'cf38c1f3e50efdc65154487a0964318f',
    'c8cef188e17a836cbb784a1694cee397',
    '5379023da59bc936bdac7e99bd2c2c3e',
    'b5c1a35012310a79b9fbf91b5372231f',
    '4a5db5cb76bd85bb20e0535dc77022f6',
    'e90512345e2fc63c26daf45ef2dba104',
    'f866236ea99901e140a4f24b34dab71f'
  ]
}"
xQnqNvLi,Untitled,bochkareffsasha,C++,Thursday 20th of June 2024 05:55:58 AM CDT,"2.59.223.213
68.65.122.94
51.79.19.53
112.121.165.75
5.252.177.213
103.117.145.108
107.148.0.182
104.233.167.62
103.117.145.109
104.233.167.82
103.117.145.106
104.233.166.194
103.84.84.251
103.117.146.219
103.117.146.218
112.121.165.77
192.142.18.27
66.29.141.173
192.142.18.15
80.239.140.66
198.187.31.161
192.142.18.25
94.156.8.166
94.224.82.40
116.193.154.28
185.189.241.246
89.36.76.38"
92HHsTA2,CI workflow for GitHub Actions - Ruff and Pytest,joejoinerr,YAML,Thursday 20th of June 2024 05:46:35 AM CDT,"name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install project
        run: poetry install --no-interaction

      - name: Test with pytest
        run: poetry run pytest -v tests

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'poetry'

      - name: Install project
        run: poetry install --no-interaction

      - name: Lint with Ruff
        run: poetry run ruff check --output-format=github
"
ZKbzHZ19,Pizzeria Gabz QB,TZMC-FiveM,Lua,Thursday 20th of June 2024 05:12:26 AM CDT,"-- Pizzeria

-- Front Entry
{
    authorizedJobs = { ['pizzeria']=0 },
    audioRemote = false,
    slides = false,
    garage = false,
    fixText = false,
    lockpick = false,
    maxDistance = 2.5,
    locked = true,
    doors = {
        {
            objHash = -49173194,
            objYaw = 270.00003051758,
            objCoords = vector3(794.2512, -759.4415, 27.02702)
        },
        {
            objHash = 95403626,
            objYaw = 270.00003051758,
            objCoords = vector3(794.2512, -757.0618, 27.02702)
        }
    }
},

-- Left Entry
{
    authorizedJobs = { ['pizzeria']=0 },
    audioRemote = false,
    slides = false,
    garage = false,
    fixText = false,
    lockpick = false,
    maxDistance = 2.5,
    locked = true,
    doors = {
        {
            objHash = -49173194,
            objYaw = 180.00001525879,
            objCoords = vector3(803.2782, -747.9282, 27.02702)
        },
        {
            objHash = 95403626,
            objYaw = 180.00001525879,
            objCoords = vector3(805.658, -747.9282, 27.02702)
        }
    }
},

-- Back Entry
{
    authorizedJobs = { ['pizzeria']=0 },
    audioRemote = false,
    slides = false,
    garage = false,
    fixText = false,
    lockpick = false,
    maxDistance = 2.0,
    locked = true,
    objHash = -420112688,
    objCoords = vector3(814.5675, -762.8239, 27.04651),
    objHeading = 89.999977111816
},

-- WC Ladies
{
    authorizedJobs = { ['pizzeria']=0 },
    audioRemote = false,
    slides = false,
    garage = false,
    fixText = false,
    lockpick = false,
    maxDistance = 2.0,
    locked = true,
    objHash = 1984391163,
    objCoords = vector3(800.403, -765.0848, 26.93464),
    objHeading = 89.999961853027
},

-- WC Gents
{
    authorizedJobs = { ['pizzeria']=0 },
    audioRemote = false,
    slides = false,
    garage = false,
    fixText = false,
    lockpick = false,
    maxDistance = 2.0,
    locked = true,
    objHash = 1984391163,
    objCoords = vector3(800.4145, -763.9932, 26.93464),
    objHeading = 270.00003051758
},

-- Kitchen
{
    authorizedJobs = { ['pizzeria']=0 },
    audioRemote = false,
    slides = false,
    garage = false,
    fixText = false,
    lockpick = false,
    maxDistance = 2.0,
    locked = true,
    objHash = 1984391163,
    objCoords = vector3(810.4092, -756.2733, 26.93464),
    objHeading = 0.0
},

-- Fridge (Sliding Door)
{
    authorizedJobs = { ['pizzeria']=0 },
    audioRemote = false,
    slides = true,
    garage = false,
    fixText = false,
    lockpick = false,
    maxDistance = 2.0,
    locked = true,
    objHash = 2136811971,
    objCoords = vector3(805.9268,-761.663,26.04281),
    objHeading = 90.0,
    setText = true,
    textCoords = vector3(805.832,-761.683,26.781)
},

-- Freezer Room (Sliding Door)
{
    authorizedJobs = { ['pizzeria']=0 },
    audioRemote = false,
    slides = false,
    garage = false,
    fixText = false,
    lockpick = false,
    maxDistance = 2.0,
    locked = true,
    objHash = -357301147,
    objCoords = vector3(805.2613, -758.6738, 25.79361),
    objHeading = 89.999977111816,
    setText = true,
    textCoords = vector3(805.152,-759.427,26.900)
},

-- Cave
{
    authorizedJobs = { ['pizzeria']=0 },
    audioRemote = false,
    slides = false,
    garage = false,
    fixText = false,
    lockpick = false,
    maxDistance = 2.0,
    locked = true,
    objHash = 1984391163,
    objCoords = vector3(806.2781, -765.8099, 26.93464),
    objHeading = 179.99998474121
},

-- Stairs Access
{
    authorizedJobs = { ['pizzeria']=0 },
    audioRemote = false,
    slides = false,
    garage = false,
    fixText = false,
    lockpick = false,
    maxDistance = 2.0,
    locked = true,
    objHash = 1984391163,
    objCoords = vector3(811.9174, -762.428, 26.93464),
    objHeading = 89.999961853027
},

-- Stairs Access (Upper Floor)
{
    authorizedJobs = { ['pizzeria']=0 },
    audioRemote = false,
    slides = false,
    garage = false,
    fixText = false,
    lockpick = false,
    maxDistance = 2.0,
    locked = true,
    objHash = 1984391163,
    objCoords = vector3(804.4858, -767.6975, 31.41847),
    objHeading = 270.00003051758
},

-- Office (Upper Floor)
{
    authorizedJobs = { ['pizzeria']=0 },
    audioRemote = false,
    slides = false,
    garage = false,
    fixText = false,
    lockpick = false,
    maxDistance = 2.0,
    locked = true,
    objHash = 1984391163,
    objCoords = vector3(798.6847, -763.329, 31.41847),
    objHeading = 0.0
},

-- CEO (Upper Floor)
{
    authorizedJobs = { ['pizzeria']=0 },
    audioRemote = false,
    slides = false,
    garage = false,
    fixText = false,
    lockpick = false,
    maxDistance = 2.0,
    locked = true,
    objHash = 1984391163,
    objCoords = vector3(797.4042, -758.2521, 31.41847),
    objHeading = 179.99998474121
},

-- Lockers (Upper Floor)
{
    authorizedJobs = { ['pizzeria']=0 },
    audioRemote = false,
    slides = false,
    garage = false,
    fixText = false,
    lockpick = false,
    maxDistance = 2.0,
    locked = true,
    objHash = 1984391163,
    objCoords = vector3(806.8858, -764.5674, 31.41847),
    objHeading = 270.00003051758
}
"
GSZHkkYY,TZMC Pizzeria Job,TZMC-FiveM,Lua,Thursday 20th of June 2024 04:53:24 AM CDT,"['pizzeria'] = {
    label = 'Pizzeria',
    defaultDuty = false,
    offDutyPay = false,
    grades = {
        ['0'] = {
            name = 'Junior Pizza Chef',
            payment = 50
        },
        ['1'] = {
            name = 'Pizza Chef',
            payment = 100
        },
        ['2'] = {
            name = 'Senior Pizza Chef',
            payment = 150
        },
        ['3'] = {
            name = 'Pizzeria Manager',
            isboss = true,
            payment = 200
        },
    },
},
"
CM1jPtfh,main_thread_kill,shepard127,Python,Thursday 20th of June 2024 04:51:49 AM CDT,"import sys
from PyQt5.QtCore import QThreadPool, QRunnable, pyqtSlot, QMutex, QMutexLocker, QWaitCondition, QObject, pyqtSignal
from PyQt5.QtWidgets import QApplication, QPushButton, QVBoxLayout, QWidget

class WorkerSignals(QObject):
    stop = pyqtSignal()

class Worker(QRunnable):
    def __init__(self):
        super().__init__()
        self.is_running = True
        self.mutex = QMutex()
        self.condition = QWaitCondition()
        self.signals = WorkerSignals()
        self.signals.stop.connect(self.stop)

    @pyqtSlot()
    def run(self):
        while self.is_running:
            with QMutexLocker(self.mutex):
                print(""Thread wokrs..."")
                
                self.condition.wait(self.mutex, 1000) # example only

    def stop(self):
        with QMutexLocker(self.mutex):
            print(""Thread kill"")
            self.is_running = False
            self.condition.wakeAll()    # example only

class MainWindow(QWidget):
    def __init__(self):
        super().__init__()
        self.threadpool = QThreadPool()
        self.worker = Worker()

        self.start_button = QPushButton(""Start"")
        self.stop_button = QPushButton(""Stop"")

        self.start_button.clicked.connect(self.start_task)
        self.stop_button.clicked.connect(self.stop_task)

        layout = QVBoxLayout()
        layout.addWidget(self.start_button)
        layout.addWidget(self.stop_button)
        self.setLayout(layout)

    def start_task(self):
        self.threadpool.start(self.worker)

    def stop_task(self):
        self.worker.signals.stop.emit()

if __name__ == ""__main__"":
    app = QApplication(sys.argv)
    window = MainWindow()
    window.show()
    sys.exit(app.exec_())
"
NEF5GMkw,TZMC Pizzeria Useable Items,TZMC-FiveM,Lua,Thursday 20th of June 2024 04:36:07 AM CDT,"-- Hornys 

QBCore.Functions.CreateUseableItem(""margherita_pizza"", function(source, item)
    local src = source
    local Player = QBCore.Functions.GetPlayer(src)
	if Player.Functions.RemoveItem(item.name, 1, item.slot) then
        TriggerClientEvent(""consumables:client:Eat"", src, item.name)
    end
end)

QBCore.Functions.CreateUseableItem(""pepperoni_pizza"", function(source, item)
    local src = source
    local Player = QBCore.Functions.GetPlayer(src)
	if Player.Functions.RemoveItem(item.name, 1, item.slot) then
        TriggerClientEvent(""consumables:client:Eat"", src, item.name)
    end
end)

QBCore.Functions.CreateUseableItem(""ham_pizza"", function(source, item)
    local src = source
    local Player = QBCore.Functions.GetPlayer(src)
	if Player.Functions.RemoveItem(item.name, 1, item.slot) then
        TriggerClientEvent(""consumables:client:Eat"", src, item.name)
    end
end)

QBCore.Functions.CreateUseableItem(""hawaiian_pizza"", function(source, item)
    local src = source
    local Player = QBCore.Functions.GetPlayer(src)
	if Player.Functions.RemoveItem(item.name, 1, item.slot) then
        TriggerClientEvent(""consumables:client:Eat"", src, item.name)
    end
end)"
XpKbH5xt,–ü–∞–∫–µ—Ç –¥–ª—è —Ç–æ–≤–∞—Ä–∞,LuNa2713,JSON,Thursday 20th of June 2024 04:33:21 AM CDT,"{
""guid"":""c8d1110c-f894-11ee-aaa7-f8f21eb13e75"",
""id"":""85629"",
""title"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä Huawei S5735-S48S4XE-V2"",
""full_title"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä Huawei S5735-S48S4XE-V2"",
""english_name"":""Switch Huawei S5735-S48S4XE-V2+2 PAC180S12-CN"",
""parent"":""87e027d0-bf7a-11ea-926d-005056b295f9"",
""sku"":""S5735-S48S4XE-V2"",
""weight"":""7.2"",
""volume"":""0.05445"",
""unit_type"":""—à—Ç"",
""height"":""0.15"",
""depth"":""0.66"",
""width"":""0.55"",
""coefficient"":""1"",
""seller_guid"":""ce9bf511-040e-11ec-b7d3-3cfdfeac1949"",
""seller_name"":""Abbey Lane Huawei"",
""invoiceName"":""Switch S5735-S48S4XE-V2 include: Switch S5735-S48S4XE-V2 1 pc, AC power supply 2 pcs"",
""invoiceNameRu"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä S5735-S48S4XE-V2 –≤ —Å–æ—Å—Ç–∞–≤–µ: –ö–æ–º–º—É—Ç–∞—Ç–æ—Ä S5735-S48S4XE-V2 1 —à—Ç, –±–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è AC 2 —à—Ç"",
""tax"":20,
""guarantee_ext"":""12 –º–µ—Å—è—Ü–µ–≤"",
""used"":0,
""datecreating"":""2024-04-12T11:16:40"",
""parentAdditional"":{
},
""analogs"":{
},
""EOL"":false,
""guidReplacement"":"""",
""brand"":""58bf25d9-f779-11e8-8a82-d89d671c895e"",
""ProhibitedExport"":false,
""ProhibitedExportPrice"":true,
""Software"":false,
""ReconcilePrice"":true,
""PresalePreparation"":true,
""Service"":false,
""Hide"":false,
""Properties"":[
{
""property_guid"":""d2216845-3e8d-11ea-b105-005056b295f9"",
""value_guid"":""0ad00e4b-3e8e-11ea-b105-005056b295f9"",
""value_name"":""–£–ø—Ä–∞–≤–ª—è–µ–º—ã–π L3""
},
{
""property_guid"":""1fd9e73f-3e8e-11ea-b105-005056b295f9"",
""value_guid"":""d693c565-f0fb-11ea-926d-005056b295f9"",
""value_name"":""GigabitEthernet SFP""
},
{
""property_guid"":""d627fa5e-bc5e-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""57b25152-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""56768279-9e43-11ea-926d-005056b295f9"",
""value_name"":""48""
},
{
""property_guid"":""6ba81701-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""77e41db5-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""87449183-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""629fa031-a73c-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""7e0a9b8c-a73c-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""92ce1900-3e8e-11ea-b105-005056b295f9"",
""value_name"":""4""
},
{
""property_guid"":""f048fb53-a0b6-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""51122e3a-a006-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""9d484fc3-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""ad91fffb-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""c82fd2a6-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""d7017a48-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""e833dae7-a73c-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""38ad503c-3e8f-11ea-b105-005056b295f9"",
""value_name"":""=–ú–ù–û–ñ(100-240V AC)""
},
{
""property_guid"":""2b28adb3-41aa-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""6e8e7315-3e8f-11ea-b105-005056b295f9"",
""value_guid"":""793889b1-3e8f-11ea-b105-005056b295f9"",
""value_name"":""–î–∞""
},
{
""property_guid"":""af58c0c9-3e8f-11ea-b105-005056b295f9"",
""value_name"":""4094""
},
{
""property_guid"":""bc629754-3e8f-11ea-b105-005056b295f9"",
""value_name"":""32768""
},
{
""property_guid"":""d50f5c24-3e8f-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""e4e7033b-3e8f-11ea-b105-005056b295f9"",
""value_name"":""=–ú–ù–û–ñ(PVST; STP; RSTP; MSTP; ERPS)""
},
{
""property_guid"":""24833df1-3e90-11ea-b105-005056b295f9"",
""value_name"":""4094""
},
{
""property_guid"":""8006e4a3-3e90-11ea-b105-005056b295f9"",
""value_name"":""4000""
},
{
""property_guid"":""8bbf326f-3e90-11ea-b105-005056b295f9"",
""value_name"":""=–ú–ù–û–ñ(BGP; ECMP; IS-IS; ICMP; OSPF; PIM; PIM-DM; PIM-SM; RIP; Static route; VRRP)""
},
{
""property_guid"":""e90c9cb0-3e90-11ea-b105-005056b295f9"",
""value_guid"":""4d727f01-62a8-11ee-ba45-30e171602127"",
""value_name"":""–ù–µ—Ç""
},
{
""property_guid"":""f89badf8-3e90-11ea-b105-005056b295f9"",
""value_name"":""=–ú–ù–û–ñ()""
},
{
""property_guid"":""21cdc18b-3e91-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""2c58cef0-3e91-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""3bc8e833-3e91-11ea-b105-005056b295f9"",
""value_guid"":""e08bcd90-40b0-11ed-ba40-30e171602127"",
""value_name"":""–ù–µ—Ç""
},
{
""property_guid"":""c3c9023f-419a-11ea-b105-005056b295f9"",
""value_name"":""CLI, WEB, SSH, TELNET""
},
{
""property_guid"":""aa6628a5-40f7-11ea-b105-005056b295f9"",
""value_name"":""=–¢–ï–ú–ü(-5:50)""
},
{
""property_guid"":""fbd8160d-4194-11ea-b105-005056b295f9"",
""value_guid"":""fbd8160e-4194-11ea-b105-005056b295f9"",
""value_name"":""–ê–∫—Ç–∏–≤–Ω–∞—è""
},
{
""property_guid"":""19bb13c1-4195-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""f82cf738-4196-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""5b027d48-4197-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""68a00c6f-4197-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""ad80cc9f-4199-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""8ad89300-419b-11ea-b105-005056b295f9"",
""value_name"":""=–ú–ù–û–ñ(RJ45)""
},
{
""property_guid"":""a6f57a70-419b-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""21c4d86a-89e6-11ea-bb99-005056b2dbab"",
""value_name"":""""
},
{
""property_guid"":""c899dec7-3e8f-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""4c21e7f9-9e53-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""46d52d08-a0d5-11ea-926d-005056b295f9"",
""value_guid"":""4adaed3d-1cfe-11ec-94ff-005056b2891c"",
""value_name"":""SFP+""
},
{
""property_guid"":""4e7d082f-bcfa-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""97b42e71-cfe9-11ea-926d-005056b295f9"",
""value_name"":""48""
},
{
""property_guid"":""d69c75c1-cfe9-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""f8ee41ff-56c7-11ea-bb99-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""1b766422-f0fc-11ea-926d-005056b295f9"",
""value_guid"":""557f2503-0f81-11eb-926d-005056b295f9"",
""value_name"":""10GigabitEthernet SFP+""
},
{
""property_guid"":""dbfcf7d1-a11e-11ea-926d-005056b295f9"",
""value_name"":""- –ö–æ–º–º—É—Ç–∞—Ç–æ—Ä –≤ —É–ø–∞–∫–æ–≤–∫–µ - –ö—Ä–µ–ø–ª–µ–Ω–∏—è –≤ —Å—Ç–æ–π–∫—É - 2 –±–ª–æ–∫–∞ –ø–∏—Ç–∞–Ω–∏—è AC 180W - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è""
},
{
""property_guid"":""e5548356-27f2-11ec-94ff-005056b2891c"",
""value_name"":""""
},
{
""property_guid"":""f68385fe-27f2-11ec-94ff-005056b2891c"",
""value_name"":""""
},
{
""property_guid"":""afe604ee-b9bd-11ee-aaa5-1402ec40b943"",
""value_name"":""""
},
{
""property_guid"":""e1fb3e93-eb2c-11ee-ba4b-f8f21eb13e24"",
""value_name"":""""
}
],
""kit_composition"":{
},
""SEO_title"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä S5735-S48S4XE-V2"",
""SEO_description"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä S5735-S48S4XE-V2"",
""SEO_keywords"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä S5735-S48S4XE-V2"",
""keywords"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä S5735-S48S4XE-V2"",
""always_getwatersign"":false,
""files"":[
{
""file_name"":""front(1)"",
""file_description"":"""",
""file_owner"":""c8d1110c-f894-11ee-aaa7-f8f21eb13e75"",
""file_tom"":""\\nas.nag.lan\1C-longtime\ERP"",
""file_path"":""20240506\front(1).jpg"",
""file_size"":178836,
""file_type"":""jpg"",
""file_main"":false
},
{
""file_name"":""front_left(1)"",
""file_description"":"""",
""file_owner"":""c8d1110c-f894-11ee-aaa7-f8f21eb13e75"",
""file_tom"":""\\nas.nag.lan\1C-longtime\ERP"",
""file_path"":""20240506\M\front_left(1).jpg"",
""file_size"":141822,
""file_type"":""jpg"",
""file_main"":false
},
{
""file_name"":""front_right(1)"",
""file_description"":"""",
""file_owner"":""c8d1110c-f894-11ee-aaa7-f8f21eb13e75"",
""file_tom"":""\\nas.nag.lan\1C-longtime\ERP"",
""file_path"":""20240506\M\front_right(1).jpg"",
""file_size"":142258,
""file_type"":""jpg"",
""file_main"":false
},
{
""file_name"":""S5735-S48S4XE-V2(1)"",
""file_description"":"""",
""file_owner"":""c8d1110c-f894-11ee-aaa7-f8f21eb13e75"",
""file_tom"":""\\nas.nag.lan\1C-longtime\ERP"",
""file_path"":""20240508\S5735-S48S4XE-V2(1).png"",
""file_size"":1714189,
""file_type"":""png"",
""file_main"":false
},
{
""file_name"":""S5735-S48S4XE-V2"",
""file_description"":"""",
""file_owner"":""c8d1110c-f894-11ee-aaa7-f8f21eb13e75"",
""file_tom"":""\\nas.nag.lan\1C-longtime\ERP"",
""file_path"":""20240508\S5735-S48S4XE-V2.png"",
""file_size"":1921903,
""file_type"":""png"",
""file_main"":true
}
],
""files_number"":5,
""manager_guid"":""81eb03ff-d314-11eb-bb7a-005056b295f9"",
""employee_guid"":""4a1c5a1a-cd90-11eb-bb7a-005056b295f9"",
""employee_name"":""–ë–∞–π–¥–∏–Ω –§–∏–ª–∏–ø–ø –≠–¥—É–∞—Ä–¥–æ–≤–∏—á"",
""employee_outz_guid"":""9879c228-4a25-11e5-9a3f-000c293857ef"",
""employee_outz_name"":""–ú–∞–∫–∞—Ä–æ–≤–∞ –ö–∞—Ä–∏–Ω–∞ –ú–∏—Ö–∞–π–ª–æ–≤–Ω–∞"",
""object_ut11"":true,
""test_site"":""–ù–µ—Ç"",
""kind_nomenclature_guid"":""bcdc06a6-3e8d-11ea-b105-005056b295f9"",
""Code_TNVED"":""8517620003"",
""country_ID"":""156"",
""unit_places"":{
""name"":null,
""mult"":""""
},
""usepackaging"":true,
""unit"":[
""796"",
""796"",
{
""is_active"":true,
""code_numerator"":""166"",
""numerator"":7.2,
""denominator"":1,
""use_in_doc"":false
},
{
""is_active"":true,
""code_numerator"":""113"",
""numerator"":54.45,
""denominator"":1000,
""use_in_doc"":false
},
{
""is_active"":false,
""code_numerator"":null,
""numerator"":0,
""denominator"":0,
""use_in_doc"":false
},
{
""is_active"":false,
""code_numerator"":null,
""numerator"":0,
""denominator"":0,
""use_in_doc"":false
}
],
""kit_packaging"":{
""guid"":""531bddaa-ba91-11e9-8a1a-d89d672a5c53"",
""predefined_name"":""–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π–î–ª—è–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã""
},
""packaging"":[
{
""guid"":""f2adca69-f895-11ee-ba4b-f8f21eb13e24"",
""title"":""—à—Ç"",
""code_numerator"":""796"",
""numerator"":1,
""denominator"":1,
""type"":""–£–ø–∞–∫–æ–≤–∫–∞"",
""packaging_type"":""–ö–æ–Ω–µ—á–Ω–∞—è"",
""weight_code"":""166"",
""volume_code"":""113"",
""height_code"":""006"",
""width_code"":""006"",
""depth_code"":""006"",
""weight"":7.2,
""volume"":0.05445,
""height"":0.15,
""width"":0.55,
""depth"":0.66,
""deleted"":false
}
],
""state"":{
""giud"":""463f1a1e-ee6f-11e9-97df-b42e9969c4ff"",
""name"":""–ù–æ–≤–∏–Ω–∫–∞""
},
""sales_territory"":[
""UZ"",
""RU"",
""KZ""
],
""archive"":false,
""version"":"""",
""lowquality"":false,
""noindex"":false,
""firmwares"":{
},
""is_international"":false,
""title_en"":""Switch Huawei S5735-S48S4XE-V2+2 PAC180S12-CN"",
""deleted"":false,
""productClass"":{
""guid"":""b8f4355c-96bb-11eb-88ca-005056b295f9"",
""name"":""–¢–æ–≤–∞—Ä"",
""registryDomesticSoftware"":{
""number"":"""",
""date"":""""
}
}
}"
W4SWRPyw,Untitled,Astra3,Rust,Thursday 20th of June 2024 04:04:59 AM CDT,"fn main() {
    for seed in 1u32..200_000_000u32 {
        let coll = collatz(seed);
        if seed % 1_000_000 == 0 {
            println!(""Seed: {} Steps: {}"", seed, coll);
        }
    }
}

fn collatz(mut seed: u32) -> u32 {
    let mut steps = 0;
    while seed > 1 {
        while seed % 2 == 0 {
            steps += 1;
            seed /= 2;
        }
        if seed > 1 {
            steps += 1;
            seed = seed * 3 + 1;
        }
    }
    return steps;
}
"
kEQQSDRY,üéÅG2A.com Free Gift Card Guide June 2024 NEWüéÅ,wwxcwx,GetText,Thursday 20th of June 2024 03:50:14 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here;
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
20 June 2024"
3Z7JGWXx,alternatie ifdef,illwieckz,C++,Thursday 20th of June 2024 03:24:40 AM CDT,"inline int CountTrailingZeroes(unsigned int x)
{
	#if defined(DAEMON_USE_COMPILER_INTRINSICS) && defined(__GNUC__)
		return __builtin_ctz(x);
	#elif defined(DAEMON_USE_COMPILER_INTRINSICS) && defined(_MSC_VER)
		unsigned long ans;
		_BitScanForward(&ans, x);
		return ans;
	#else
		int i = 0;
		while (i < 32 && !(x & 1))
		{
			++i;
			x >>= 1;
		}
		return i;
	#endif
}

inline int CountTrailingZeroes(unsigned long x)
{
	#if defined(DAEMON_USE_COMPILER_INTRINSICS) && defined(__GNUC__)
		return __builtin_ctzl(x);
	#elif defined(DAEMON_USE_COMPILER_INTRINSICS) && defined(_MSC_VER)
		unsigned long ans;
		_BitScanForward(&ans, x);
		return ans;
	#else
		int i = 0;
		while (i < 64 && !(x & 1))
		{
			++i;
			x >>= 1;
		}
		return i;
	#endif
}

inline int CountTrailingZeroes(unsigned long long x)
{
	#if defined(DAEMON_USE_COMPILER_INTRINSICS) && defined(__GNUC__)
		return __builtin_ctzll(x);
	#elif defined(DAEMON_USE_COMPILER_INTRINSICS) && defined(_MSC_VER)
		unsigned long ans;
		#ifdef _WIN64
			_BitScanForward64(&ans, x);
		#else
			bool nonzero = _BitScanForward(&ans, static_cast<unsigned long>(x));
			if (!nonzero)
			{
				_BitScanForward(&ans, x >> 32);
			}
		#endif
		return ans;
	#else
		int i = 0;
		while (i < 64 && !(x & 1))
		{
			++i;
			x >>= 1;
		}
		return i;
	#endif
}"
4u6LfF4Y,Untitled,Derga,C++,Thursday 20th of June 2024 03:17:58 AM CDT,"#include <iostream>
#include <algorithm>
#include <vector>

struct Node {
    int data;
    Node* left;
    Node* right;
    Node(int e, Node* l, Node* r) : data(e), left(l), right(r) {}
    Node() : data(0), left(nullptr), right(nullptr) {}
};

struct Tree {
    Node* start = nullptr;

    Node* current = nullptr;
    Node* current_minus_one = nullptr;
    Node* receiver = nullptr;
    Node* receiver_dad = nullptr;

    void add(int element) {
        Node* node = new Node(element, nullptr, nullptr);
        if (start == nullptr) {
            start = node;
            return;
        }
        current = start;
        while (current != nullptr) {
            current_minus_one = current;
            if (element > current->data) {
                current = current->right;
            }
            else {
                current = current->left;
            }
        }
        if (element > current_minus_one->data) {
            current_minus_one->right = node;
        }
        else {
            current_minus_one->left = node;
        }
    }

    int depht(Node* cur) { // –≤–Ω–æ—Å–∏—Ç—Å—è —Å—Ç–∞—Ä—Ç
        if (cur == nullptr) {
            return 0;
        }
        else if ((cur->left == nullptr) && (cur->right == nullptr)) {
            return 1;
        }
        else if ((cur->left != nullptr) && (cur->right == nullptr)) {
            return 1 + this->depht(cur->left);
        }
        else if ((cur->left == nullptr) && (cur->right != nullptr)) {
            return 1 + this->depht(cur->right);
        }
        else if ((cur->left != nullptr) && (cur->right != nullptr)) {
            return 1 + std::max({ this->depht(cur->left), this->depht(cur->right) });
        }
        return -1;
    }

    int elementCount(Node* cur) { // –≤–Ω–æ—Å–∏—Ç—Å—è —Å—Ç–∞—Ä—Ç
        if (cur == nullptr) {
            return 0;
        }
        else if ((cur->left == nullptr) && (cur->right == nullptr)) {
            return 1;
        }
        else if ((cur->left != nullptr) && (cur->right == nullptr)) {
            return 1 + this->depht(cur->left);
        }
        else if ((cur->left == nullptr) && (cur->right != nullptr)) {
            return 1 + this->depht(cur->right);
        }
        else if ((cur->left != nullptr) && (cur->right != nullptr)) {
            return 1 + this->depht(cur->left) + this->depht(cur->right);
        }
        return -1;
    }

    void print(Node* cur) { // –≤–Ω–æ—Å–∏—Ç—Å—è —Å—Ç–∞—Ä—Ç
        if (this->start == nullptr) {
            std::cout << ""–¥–µ—Ä–µ–≤–æ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤ \n"";
            return;
        }
        if (cur->left != nullptr) {
            this->print(cur->left);
        }

        std::cout << cur->data << "" "";

        if (cur->right != nullptr) {
            this->print(cur->right);
        }
    }

    void sumOfEven(Node* cur, int* sum_of_even) { // –≤–Ω–æ—Å–∏—Ç—Å—è —Å—Ç–∞—Ä—Ç
        if (cur == nullptr) {
            return;
        }
        else {
            if (cur->data % 2 == 0) {
                (*sum_of_even) += cur->data;
            }
            this->sumOfEven(cur->left, sum_of_even);
            this->sumOfEven(cur->right, sum_of_even);
        }
    }

    void countOfEven(Node* cur, int* count_of_even) {
        if (cur == nullptr) {
            return;
        }
        if (cur->data % 2 == 0) {
            ++(*count_of_even);
        }
        this->countOfEven(cur->left, count_of_even);
        this->countOfEven(cur->right, count_of_even);

    }

};

int main()
{
    setlocale(LC_ALL, ""Russian"");

    Tree tree;
    int tree_len;
    int element;
    float mean_of_even;
    int count_of_even = 0;
    int sum_of_even = 0;
    std::cout << ""–≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –¥–µ—Ä–µ–≤–µ: \n"";
    std::cin >> tree_len;
    std::cout << ""–≤–≤–µ–¥–∏—Ç–µ —ç–ª–µ–Ω—Ç—ã –¥–µ—Ä–µ–≤–∞: \n"";
    for (int i = 0; i < tree_len; ++i) {
        std::cin >> element;
        tree.add(element);
    }
    tree.print(tree.start);
    std::cout << ""\n"";

    tree.countOfEven(tree.start, &count_of_even);
    tree.sumOfEven(tree.start, &sum_of_even);

    if (count_of_even != 0) {
        mean_of_even = (float)sum_of_even / (float)count_of_even;
        std::cout << ""—Å—Ä–µ–¥–Ω–µ–µ –∑–∞–Ω—á–µ–Ω–∏–µ –≤—Å–µ—Ö —á–µ—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–µ—Ä–µ–≤–∞: "" << mean_of_even << ""\n"";
    }
    else {
        std::cout << ""–¥–µ—Ä–µ–≤–æ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —á–µ—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ \n"";
    }

    return 0;
}
"
Fny98XTm,Top ten list from file,IlyaIlinich,Python,Thursday 20th of June 2024 02:57:46 AM CDT," class Player:
    def __init__(self, name, score):  # score < 100`000; name include only upper letters
        self.name = name
        self.score = score


def file_reader(file_name_in, list_in):
    file = open(file_name_in, 'r')
    for i in range(10):
        name_f = file.readline().strip().upper()
        score_f = int(file.readline().strip())
        player = Player(name_f, score_f)
        list_in.append(player)


def validation(name_in, score_in):
    if len(name_in) != 3:
        print(""inappropriate name, please type another name"")
        return False
    else:
        try:
            if score_in > 100000 or score_in < 1:
                print(""too high or too low, it must be lower than 100`000 and higher than 0"")
                return False
            else:
                return True
        except ValueError:
            print(""this is not a number, try again >> "")
            return False


def new_list_generator(p_in, old_list):
    flag = False
    res_list = []
    for p_old in old_list:
        if p_old.score > p_in.score or flag is True:
            res_list.append(p_old)
        else:
            res_list.append(p_in)
            flag = True
            res_list.append(p_old)
    if len(res_list) > 10:
        res_list.pop()
    return res_list


def print_list(list_in):
    for player in list_in:
        print(player.name, ""        "", player.score)


# Reading data from file to list
top_ten_list = []
file_name = ""data.txt""
file_reader(file_name, top_ten_list)

# Creating a new player and validating input from used
validation_succeed = False
name_new = """"
score_new = 0
while not validation_succeed:
    name_new = input(""please enter the name in 3 letters >> "").upper()
    score_new = int(input(""please type the score, must be lower than 100`000 >> ""))
    if validation(name_new, score_new):
        validation_succeed = True

# Creating a new top ten list adding a new player
p = Player(name_new, score_new)
new_top_ten_list = new_list_generator(p, top_ten_list)

# Printing new top ten list
print_list(new_top_ten_list)

# File data:
# FYI
# 10000
# ABC
# 9092
# KEL
# 8500
# PAI
# 8203
# BBB
# 7980
# ACE
# 7246
# GKL
# 7001
# JSI
# 6490
# EIF
# 6003
# DIS
# 2000
"
8QM3p4vQ,pause button,horozov86,Python,Thursday 20th of June 2024 02:56:04 AM CDT,"paused = False

def pause():
    global paused
    
    if paused:
        pygame.mixer.music.unpause()
        paused = False
    else:
        pygame.mixer.music.pause()
        paused = True
    
    
    
    
pause_btn = Button(controls_frame, image=pause_btn_img, borderwidth=0, command=pause)"
Gz3vSmx8,Profecient || Bypass Cache for List of Demo and Template Library,fauzanjeg,PHP,Thursday 20th of June 2024 02:46:25 AM CDT,"// Fetch Demo
add_filter( 'fetch_demo_data', '__return_true' );

// Fetch template Library
add_filter( 'fetch_template_library_data', '__return_true' );"
K19hJQFb,Untitled,gurenko,C++,Thursday 20th of June 2024 02:40:48 AM CDT,"#include <algorithm>
#include <cmath>
#include <cstdint>
#include <iostream>
#include <random>
#include <vector>

using namespace std;

int EffectiveCount(const vector<int>& v, int n, int i) {
    // –º–µ—Å—Ç–æ –¥–ª—è –≤–∞—à–µ–≥–æ —Ä–µ—à–µ–Ω–∏—è

//    auto tmp = v.begin();
    // auto tmp = static_cast<int64_t>(v.size())*(i + 1)/(n + 1);

    if (static_cast<int64_t>(v.size())*(i + 1)/(n + 1) <= log2(v.size())){
        auto iter = find_if(v.begin(), v.end(),[i](int element){
            return element > i;
        });
        return std::distance(v.begin(), iter);
    } else{
        auto iter = upper_bound(v.begin(), v.end(), i) ;
        return std::distance(v.begin(), iter);
    }
  

}

int main() {
    // static const int NUMBERS = 1'000'000;
    // static const int MAX = 1'000'000'000;
    static const int NUMBERS = 10'000;
    static const int MAX = 4999;

    mt19937 r;
    uniform_int_distribution<int> uniform_dist(0, MAX);

    vector<int> nums;
    for (int i = 0; i < NUMBERS; ++i) {
        int random_number = uniform_dist(r);
        nums.push_back(random_number);
    }
    sort(nums.begin(), nums.end());

    int i;
    cin >> i;
    int result = EffectiveCount(nums, MAX, i);
    cout << ""Total numbers before ""s << i << "": ""s << result << endl;
}"
UU98zs5d,Untitled,Irvannandika,Bash,Thursday 20th of June 2024 02:40:20 AM CDT,wget https://nodejs.org/dist/v22.3.0/node-v22.3.0-darwin-x64.tar.gz && tar xvzf node-v22.3.0-darwin-x64.tar.gz
mqpwhZVN,Untitled,mfemtsuccess,JSON,Thursday 20th of June 2024 02:34:02 AM CDT,"ÿßŸÉÿ™ÿ¥ŸÅ ÿ¨ŸÖÿßŸÑ ÿßŸÑÿ∂ŸäÿßŸÅÿ© ŸÅŸä ÿ£ŸÅÿ∂ŸÑ ŸÅŸÜÿßÿØŸÇ ÿßŸÑŸÄ 5 ŸÜÿ¨ŸàŸÖ ŸÅŸä ŸÖŸÉÿ© ÿßŸÑŸÖŸÉÿ±ŸÖÿ©
 

ÿ™ÿ®ÿØÿ£ ÿßŸÑÿ™ÿ¨ÿ±ÿ®ÿ© ÿßŸÑŸÅÿßÿÆÿ±ÿ© ÿ®ÿßŸÑŸàÿµŸàŸÑ ÿ•ŸÑŸâ ÿßŸÑŸÅŸÜÿØŸÇÿå ÿ≠Ÿäÿ´ Ÿäÿ™ŸÖ ÿßÿ≥ÿ™ŸÇÿ®ÿßŸÑ ÿßŸÑÿ∂ŸäŸàŸÅ ÿ®ÿßŸÑÿ™ÿ±ÿ≠ÿßÿ® ŸàÿßŸÑÿßÿ®ÿ™ÿ≥ÿßŸÖÿßÿ™. ÿßŸÑÿ™ÿµŸÖŸäŸÖÿßÿ™ ÿßŸÑÿØÿßÿÆŸÑŸäÿ© ŸÑŸÑŸÅŸÜÿßÿØŸÇ ÿ™ÿπŸÉÿ≥ ÿßŸÑŸÅÿÆÿßŸÖÿ© ŸàÿßŸÑÿ±Ÿàÿ≠ÿßŸÜŸäÿ© ŸÖÿπÿßŸãÿå ŸÖŸÖÿß ŸäÿÆŸÑŸÇ ÿ£ÿ¨Ÿàÿßÿ° ŸÖÿ±Ÿäÿ≠ÿ© ŸàŸÖŸÑŸáŸÖÿ©. ÿßŸÑÿ∫ÿ±ŸÅ ÿßŸÑŸÅÿ≥Ÿäÿ≠ÿ© ŸàÿßŸÑŸÖÿ¨Ÿáÿ≤ÿ© ÿ®ÿ£ÿ≠ÿØÿ´ Ÿàÿ≥ÿßÿ¶ŸÑ ÿßŸÑÿ±ÿßÿ≠ÿ© ÿ™ÿ¨ÿπŸÑ ŸÖŸÜ ÿßŸÑÿ•ŸÇÿßŸÖÿ© ŸÅŸä Ÿáÿ∞Ÿá ÿßŸÑŸÅŸÜÿßÿØŸÇ ÿ™ÿ¨ÿ±ÿ®ÿ© ŸÖÿ±Ÿäÿ≠ÿ© ŸàŸÖÿ™ŸÖŸäÿ≤ÿ©. ÿßŸÑÿÆÿØŸÖÿ© ŸÑÿß ÿ™ŸÇÿ™ÿµÿ± ÿπŸÑŸâ ÿßŸÑŸÅÿÆÿßŸÖÿ© ŸÅŸÇÿ∑ÿå ÿ®ŸÑ ÿ™ŸÖÿ™ÿØ ŸÑÿ™ÿ∂ŸÖ ÿ£ŸÅÿ∂ŸÑ ŸÖÿ≥ÿ™ŸàŸäÿßÿ™ ÿßŸÑÿ±ÿπÿßŸäÿ© ÿßŸÑÿ¥ÿÆÿµŸäÿ©ÿå ÿ≠Ÿäÿ´ ŸäÿπŸÖŸÑ ÿßŸÑŸÖŸàÿ∏ŸÅŸàŸÜ ÿπŸÑŸâ ÿ™ŸÑÿ®Ÿäÿ© ÿ±ÿ∫ÿ®ÿßÿ™ ÿßŸÑŸÜÿ≤ŸÑÿßÿ° ÿ®ÿ£ŸÇÿµŸâ ŸÇÿØÿ± ŸÖŸÜ ÿßŸÑÿßÿ≠ÿ™ÿ±ÿßŸÅŸäÿ©.

ŸÖÿ∑ÿßÿπŸÖ ÿßŸÑŸÅŸÜÿßÿØŸÇ ÿ™ŸÇÿØŸÖ ÿ™ÿ¨ÿ±ÿ®ÿ© ÿ∑ÿπÿßŸÖ ŸÑÿß ÿ™ŸèŸÜÿ≥Ÿâÿå ÿ≠Ÿäÿ´ ŸäŸÖŸÉŸÜ ŸÑŸÑÿ≤Ÿàÿßÿ± ÿßŸÑÿ™ŸÖÿ™ÿπ ÿ®ÿ£ÿ¥ŸáŸâ ÿßŸÑŸÖÿ£ŸÉŸàŸÑÿßÿ™ ÿßŸÑÿπÿßŸÑŸÖŸäÿ© ŸàÿßŸÑŸÖÿ≠ŸÑŸäÿ©ÿå Ÿàÿ™ÿ≥ÿ™ÿπÿ±ÿ∂ ÿπÿ±Ÿàÿ∂ ÿπŸÑŸâ ÿ£ŸÅÿ∂ŸÑ ŸÅŸÜÿßÿØŸÇ ÿßŸÑŸÄ ÿÆŸÖÿ≥ ŸÜÿ¨ŸàŸÖ. ÿ™ÿ™ŸàŸÅÿ± ÿ£Ÿäÿ∂Ÿãÿß ŸÖÿ≥ÿßÿ≠ÿßÿ™ ÿ±ÿ¨ÿßŸÑ ÿßŸÑÿ£ÿπŸÖÿßŸÑ ŸàŸÇÿßÿπÿßÿ™ ÿßŸÑÿßÿ¨ÿ™ŸÖÿßÿπÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ŸÇÿØŸÖ ŸÖÿ≤ÿßŸäÿß ŸàÿÆÿØŸÖÿßÿ™ ÿ™ŸÑÿ®Ÿä ÿßÿ≠ÿ™Ÿäÿßÿ¨ÿßÿ™ ÿßŸÑÿπŸÖŸÑ ŸàÿßŸÑÿ™ÿ¨ŸÖÿπÿßÿ™ ÿßŸÑŸÉÿ®Ÿäÿ±ÿ©. ŸÉŸÖÿß ÿ™ŸèÿπÿØ ÿÆÿØŸÖÿßÿ™ ÿßŸÑÿ≥ÿ®ÿß ŸàŸÖÿ±ŸÉÿ≤ ÿßŸÑŸÑŸäÿßŸÇÿ© ÿßŸÑÿ®ÿØŸÜŸäÿ© ŸÖŸÜÿßÿ∑ŸÇ ÿ±ÿßÿ¶ÿπÿ© ŸÑŸÑÿßÿ≥ÿ™ÿ¨ŸÖÿßŸÖ ŸàÿßŸÑÿßÿ≥ÿ™ÿ±ÿÆÿßÿ°ÿå ŸÖŸÖÿß Ÿäÿ™Ÿäÿ≠ ŸÑŸÑŸÜÿ≤ŸÑÿßÿ° ÿßŸÑŸÅÿ±ÿµÿ© ŸÑŸÑÿ™ÿ¨ÿØŸäÿØ ÿßŸÑÿ¨ÿ≥ÿØŸä ŸàÿßŸÑÿ∞ŸáŸÜŸä ÿ®ÿπÿØ ŸäŸàŸÖ ÿ∑ŸàŸäŸÑ ŸÖŸÜ ÿßŸÑÿπÿ®ÿßÿØÿ© ÿ£Ÿà ÿßŸÑÿ£ÿπŸÖÿßŸÑ. ÿ™ŸÇÿØŸÖ ÿßŸÑŸÅŸÜÿßÿØŸÇ ÿ∞ÿßÿ™ ÿßŸÑÿÆŸÖÿ≥ ŸÜÿ¨ŸàŸÖ Ÿáÿ∞Ÿá ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿ®ÿ™ŸÅŸàŸÇ.

Read more : https://alkawtherhotel.com/5-star-hotels-in-mecca/"
2NX30gQD,Horrors RNG test1,DeanYTGaming8304,Lua,Thursday 20th of June 2024 02:31:08 AM CDT,"local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = ""ExoticHub | Horrors RNG"", HidePremium = false, IntroEnabled = false, SaveConfig = true, ConfigFolder = ""ExoConfig""})
-- Values
getgenv().setSpeed = 0
getgenv().getLuck = false

-- Functions
function startLuck()
    while getLuck == true do
        task.wait(0.000000000000001)
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
        game:GetService(""ReplicatedStorage"").Events.InventoryEvent:FireServer(""Equip"", ""Super Luck Potion"", ""Usable"")
    end
end

-- Tabs
local luckTab = Window:MakeTab({
	Name = ""Luck"",
	Icon = ""rbxassetid://4483345998"",
	PremiumOnly = false
})
local miscTab = Window:MakeTab({
	Name = ""Misc"",
	Icon = ""rbxassetid://4483345998"",
	PremiumOnly = false
})

-- Toggles
luckTab:AddToggle({
	Name = ""Get Luck"",
	Default = false,
	Callback = function(Value)
		getLuck = Value
        startLuck()
	end
})

-- Buttons
miscTab:AddButton({
	Name = ""Destroy Gui"",
	Callback = function()
      	OrionLib:Destroy()
  	end    
})

OrionLib:Init()"
T1GLDDrf,D,Ankit_132,C++,Thursday 20th of June 2024 02:15:27 AM CDT,"#include <bits/stdc++.h>

using namespace std;


#define endl ""\n""
#define bug(x) cerr << #x << "" = "" << x << endl
#define sz(x) (int)x.size()
#define mp make_pair
#define LL long long

int n;

void solve(){
	cin >> n;
	vector<int> a(n);
	for(int i = 0; i < n; i ++) cin >> a[i];
	
	vector<int> vec; vec.clear();
	int L = 0, R = n;
	for(int i = 0; i < n - 1; i ++){
		if(a[i] > a[i + 1]){
			L = max(L, a[i] - a[i + 1]);
			vec.push_back(i);
		}
	}
	
	if(vec.size() == 0) {
		cout << (1ll + n) * n / 2 << endl;
		return;
	}
	
	for(int i = 0; i < vec.size() - 1; i ++) if(vec[i] + 1 == vec[i + 1]){
		cout << 0 << endl;
		return;
	}
	
	for(int i = 0; i < vec.size() - 1; i ++){
		int st = vec[i] + 1, en = vec[i + 1];
		assert(st < en);
		int tmx = 0;
		while(st != en){
			tmx = max(a[st + 1] - a[st], tmx);
			st ++;
		}
		R = min(tmx, R);
	}
	
	if(R < L) {
		cout << 0 << endl;
	}
	else {
		cout << ((long long)L + R) * (R - L + 1) / 2 << endl;
	}
}

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0), cout.tie(0);

	int Tc = 1;
	cin >> Tc;
	while(Tc --){
		solve();
	}

	return 0;
}"
2GpuKxKP,C,Ankit_132,C++,Thursday 20th of June 2024 02:15:08 AM CDT,"#include <bits/stdc++.h>
using namespace std;
#define int long long
signed main(int argc, char const *argv[])
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int t;
    cin >> t;
    while (t--)
    {
        int n, c;
        cin >> n >> c;
        int total = 0;
        vector<int> a(n);
        for (auto &elem : a)
        {
            cin >> elem;
            total += elem;
        }
        vector<int> v;
        v.push_back(0);
        for (int i = 1; i < n; i++)
            v.push_back(a[i]);
        sort(v.begin(), v.end());
        v.push_back(0);
        vector<int> pre(n + 1, 0);
        vector<int> suf(n + 1, 0);

        for (int i = 1; i <= n - 1; i++)
        {
            pre[i] += pre[i - 1] + v[i];
        }
        for (int i = n - 1; i >= 1; i--)
        {
            suf[i] += suf[i + 1] + v[i];
        }
        int sum = a[0];
        int ans = 1;
        for (int i = 0; i <= n - 1; i++)
        {
            int cost = min((sum + pre[i]) * (total - sum - pre[i]), (sum + suf[n - i]) * (total - sum - suf[n - i]));
            if (cost <= c)
            {
                ans = i + 1;
                break;
            }
        }
        cout << ans << ""\n"";
    }
    return 0;
}"
wm09HmT7,B,Ankit_132,C++,Thursday 20th of June 2024 02:14:48 AM CDT,"#include <bits/stdc++.h>
using namespace std;
#define int long long

bool isprime(int n) {
    if (n <= 1) return false;
    if (n == 2) return true;
    if (n % 2 == 0) return false;
    for (int i = 3; i <= sqrt(n); i += 2) {
        if (n % i == 0) {
            return false;
        }
    }
    return true;
}

vector<int> precomputeSumOfPrimes(int max_n) {
    vector<int> v(max_n + 1, 0);
    int sum = 0;
    for (int i = 2; i <= max_n; ++i) {
        if (isprime(i)) {
            sum += i;
        }
        v[i] = sum;
    }
    return v;
}

int32_t main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int t;
    cin >> t;

    vector<int> v = precomputeSumOfPrimes(1e6);
    while(t--){
        
    int n;
    cin>>n;
        if (isprime(n)) {
            cout << v[n ] * n << endl;
        } else {
            if(n%2==0){
                cout << 2 * n << endl;
            }
            else{
                int p=0;
               for( p=3;p*p<=n;p++){
                   if(n%p==0)break;
               }
               cout<<v[p]*n<<endl;
            }
        }
    }

    return 0;
}"
6d0eSp0R,A,Ankit_132,C++,Thursday 20th of June 2024 02:13:31 AM CDT,"#include <bits/stdc++.h>
#define ll long long int
const int MOD = 1e9 + 7;
using namespace std;

int main() {
    ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);
	int test;cin>>test;
	while(test--)
	{
	    int n;cin>>n;
	    vector<int> a(n),b(n);
	    
	    for(int i=0;i<n;i++)
	    {
	        a[i]=i+1;
	    }
	    int i=n/2;
	    int j=1;
	    for(;i<n;i++)
	    {
	        b[i]=j++;
	    }
	    for(i=0;i<n/2;i++)
	    {
	        b[i]=j++;
	    }
	    
	    for(int i=0;i<n;i++)
	    {
	        cout<<a[i]<<"" "";
	    }
	    cout<<endl;
	    for(int i=0;i<n;i++)
	    {
	        cout<<b[i]<<"" "";
	    }
	    cout<<endl;
	}

}
"
Jasuwha5,Dynamic Electricity Prices (Europe) API - ESP32-3248S035 - including WiFi setup webserver,jgoy,C++,Thursday 20th of June 2024 02:05:59 AM CDT,"/*=================================================================================================
In case of compilation errors in Arduino IDE (library TFT_eSPI) in ESP32 core 3.0.x
Open the library folder TFT_eSPI: 
(i.e. Windows) - C:\Users\Your_User_Name\OneDrive\Documents\Arduino\libraries\TFT_eSPI\
Folder C:\Users\Your_User_Name\OneDrive\Documents\Arduino\libraries\TFT_eSPI\Processors - file: 
- TFT_eSPI_ESP32.h
- TFT_eSPI_ESP32_S3.h 
- TFT_eSPI_ESP32_C3.h
====================================================================================================
just below the line: 
#include ""hal/gpio_ll.h""
add:
#include ""driver/gpio.h""  // add this line to fix problems during compilation (ESP32 core 3.0.x)
====================================================================================================
 sketch for ESP32-3248S035 - VERSION WITHOUT the library WiFiManager.h
 If a WiFi connection cannot be made, a Web server is started to store the WiFi credentials.
 SHOULD COMPILE ON CORE 3.0.x (Arduino IDE: boards manager: ESP32 - espressif)
 ====================================================================================
 Arduino IDE - board: ESP32 Dev Module of DOIT ESP32 DEVKIT V1
 https://nl.aliexpress.com/item/1005006398547061.html
 https://nl.aliexpress.com/item/1005005900820162.html
====================================================================================*/

#include <WiFi.h>
#include <ArduinoJson.h>  // https://github.com/bblanchon/ArduinoJson
#include <WebServer.h>
#include <Preferences.h>
#include <HTTPClient.h>  // for API connection
#include <TFT_eSPI.h>    // https://github.com/Bodmer/TFT_eSPI

TFT_eSPI tft = TFT_eSPI();  // User_Setup.h settings available on: https://espgo.be board ESP32-3248S035
WebServer server(80);
Preferences flash;

#define SHOW_ITEMS 34  // max number of records you want to process.
#define VALUE_RED 100  // electricity price in red color if higher than this value
#define UTC_OFFSET_SUMMER 7200
#define UTC_OFFSET_WINTER 3600
struct tm tInfo;  // https://cplusplus.com/reference/ctime/tm/
bool chart = true, freshStart = true;
const char* time_Zone = ""CET-1CEST,M3.5.0,M10.5.0/3"";  // https://github.com/nayarsystems/posix_tz_db/blob/master/zones.csv
double prijzen[SHOW_ITEMS];                            // most recent 34 prices
double prices[SHOW_ITEMS * 2];                         // all prices returned by the API
double priceNow;                                       // price of current hour
time_t epo[SHOW_ITEMS];                                // most recent 34 epoch times
time_t epoc[SHOW_ITEMS * 2];                           // all epoch times returned by the API
uint8_t API_ITEMS;
String my_link, webText, buttons, Ssid, Pasw;
char* connect[] = { ""WiFi: no connection"", ""Connect to hotspot"", ""S035_ESP"", ""Start a browser - address"",
                    ""192.168.4.1"", ""to save network"", ""and password"" };

void setup() {
  Serial.begin(115200);
  pinMode(0, INPUT_PULLUP);  // flash button
  tft.init();
  tft.setRotation(3);
  tft.setTextWrap(false);
  tft.fillScreen(TFT_BLACK);  // delete output from previous sessions
  connectWiFi();
  configTzTime(time_Zone, ""be.pool.ntp.org"");
  showStartupData();
}

void loop() {
  display_Time();
  if (!digitalRead(0)) changeView();  // flash button changes between chart or list of figures
  // if (priceNow < 0) startHeavyPowerConsumer();  // priceNow = current price
}

void showStartupData() {
  tft.fillScreen(TFT_BLACK);
  tft.drawCentreString(""Retrieving SNTP time"", 240, 160, 4);
  getLocalTime(&tInfo);
  delay(3000);
  tft.fillScreen(TFT_BLACK);
  tft.setTextColor(TFT_ORANGE);
  tft.drawCentreString(""Retrieving Json Data"", 240, 160, 4);
}

void changeView() {
  chart = !chart;
  chart ? show_Chart() : show_Data();
  showCurrentPrice(), delay(800);  // 800 = UI debouncing (button)
}

void display_Time() {
  char theDate[11];
  getLocalTime(&tInfo);  // SNTP sync at startup and every 3 hours thereafter (ESP32)
  time_t now;
  time(&now);  // assign current epoch time (UTC) to ""now""
  tft.drawRect(-1, 26, 482, 2, WiFi.isConnected() ? TFT_GREEN : TFT_RED);
  tft.setTextColor(TFT_GREEN, TFT_BLACK);
  tft.setCursor(0, 0, 4);
  strftime(theDate, sizeof(theDate), ""%d-%m-%G"", &tInfo);  // https://cplusplus.com/reference/ctime/strftime/
  tft.print(theDate);
  tft.setCursor(tft.getCursorX() + 8, 0);
  tft.setTextColor(TFT_WHITE, TFT_BLACK);
  tft.printf(""%02d:%02d:%02d"", tInfo.tm_hour, tInfo.tm_min, tInfo.tm_sec);
  if ((freshStart) || ((((epo[SHOW_ITEMS - 1] - now) / 3600) < 9) && (tInfo.tm_min == 2) && (tInfo.tm_sec == 1))) {
    freshStart = false;  // ^ als laatste data minder dan 9 uur in de toekomst zijn, elk uur data ophalen
    if (WiFi.isConnected()) retrieve_Data();
    chart ? show_Chart() : show_Data(), showCurrentPrice();
    Serial.println(my_link);  // debugging
    Serial.println((epo[SHOW_ITEMS - 1] - now) / 3600);  // aantal uur tussen ""nu"" en laatste verkregen data
  }
  if ((tInfo.tm_min == 0) && (tInfo.tm_sec == 0)) {  // refresh data (local) every hour
    chart ? show_Chart() : show_Data();
    showCurrentPrice(), delay(950);
  }
}

void retrieve_Data() {  // prepare string with epoch times and retrieve energy data
  memset(prijzen, 0, sizeof(prijzen));
  memset(epo, 0, sizeof(epo));
  memset(prices, 0, sizeof(prices));
  memset(epoc, 0, sizeof(epoc));
  my_link = ""https://api.energy-charts.info/price?bzn=BE&start="";
  time_t now;
  time(&now);                // assign current epoch time (UTC) to ""now""
  now = now - (now % 3600);  // round down to the whole hour
  now = now + ((tInfo.tm_isdst) ? UTC_OFFSET_SUMMER : UTC_OFFSET_WINTER);
  my_link = my_link + String(now - (24 * 3600)) + ""&end="" + String(now + (SHOW_ITEMS * 3600));
  if (my_link.length() > 56) get_JsonData();  // do not send empty input (e.g., if SNTP times out)
  else {                                      // composing string (to send to API) = failed
    tft.fillRect(0, 200, 320, 40, TFT_BLACK);
    tft.drawCentreString(""Link API incomplete"", 160, 200, 4);
  }
  tft.setCursor(264, 0, 4);
  tft.setTextColor(TFT_SILVER, TFT_BLACK);
  tft.print(""/MWh:"");
  tft.fillCircle(255, 10, 9, TFT_SILVER);  // euro symbol
  tft.fillCircle(255, 10, 7, TFT_BLACK), tft.fillRect(258, 5, 8, 12, TFT_BLACK);
  tft.drawRect(247, 8, 9, 2, TFT_SILVER), tft.drawRect(249, 11, 6, 2, TFT_SILVER);
}

void show_Chart() {  // Json data in chart on display
  tft.fillRect(0, 28, 480, 292, TFT_BLACK);
  tft.setTextColor(TFT_WHITE);
  for (uint8_t i = 0; i < 6; i++) {  // draw lines with values -50, 0, 50, 100 etc.
    tft.drawFastHLine(0, 40 + i * 50, 480, tft.color565(64, 64, 64));
    for (uint8_t j = 0; j < 3; j++)  // j verwerkt de horizontale co√∂rdinaat
      tft.drawRightString(String(i * 50 - 50), j * 228 + 23, 286 - i * 50, 1);
  }
  for (uint8_t i = 0; i < SHOW_ITEMS; i++) {
    struct tm* cor;              // to convert epoch times to tm structure in local time
    if (epo[i]) {                // do not show empty data
      cor = localtime(&epo[i]);  // adjust epoch times in the list to local time / dst
      if ((cor->tm_hour == tInfo.tm_hour) && (cor->tm_mday == tInfo.tm_mday)) {
        priceNow = prijzen[i];
        tft.drawFastVLine(6 + i * 14, 26, 292, TFT_MAGENTA);
        tft.fillTriangle((i * 14) - 4, 300, (i * 14) - 4, 310, 6 + i * 14, 305, TFT_MAGENTA);
        tft.fillTriangle((i * 14) - 4, 55, (i * 14) - 4, 65, 6 + i * 14, 60, TFT_MAGENTA);
      }
      tft.setTextColor(prijzen[i] > 0 ? TFT_BLACK : TFT_YELLOW);
      uint16_t mijnKleur = prijzen[i] < VALUE_RED ? TFT_CYAN : TFT_RED;
      if (prijzen[i] < 50) mijnKleur = TFT_GREEN;
      if (prijzen[i] < 0) {
        mijnKleur = TFT_YELLOW;
        tft.fillRect(i * 14, 240, 13, 0 - prijzen[i], mijnKleur);
        tft.drawFastVLine(i * 14 + 13, 240, 0 - prijzen[i], TFT_BLACK);
      } else {
        tft.fillRect(i * 14, 240 - prijzen[i], 13, prijzen[i], mijnKleur);
        tft.drawFastVLine(i * 14 + 13, 240 - prijzen[i], prijzen[i], TFT_BLACK);
      }
      tft.setCursor(1 + i * 14, 230, 1);  // hours at the bottom of chart
      tft.printf(""%02d"", cor->tm_hour);
      tft.setTextColor(TFT_RED);
      tft.setCursor(1 + i * 14, 243, 1);
      tft.printf(""%02d"", cor->tm_hour);
    }
  }
}

void show_Data() {  // display Json datas in 2 colums time / price
  tft.fillRect(0, 28, 480, 292, TFT_BLACK);
  tft.drawRect(240, 26, 2, 292, WiFi.isConnected() ? TFT_GREEN : TFT_RED);
  struct tm* cor;
  for (uint8_t i = 0; i < SHOW_ITEMS; i++) {
    if (epo[i]) {
      cor = localtime(&epo[i]);
      tft.setTextColor(TFT_LIGHTGREY, TFT_BLACK);
      tft.setCursor(((i < 18) ? 0 : 260), 33 + (i % 18) * 16, 2);
      tft.printf("" %02d. "", i + 1);
      if ((cor->tm_hour == tInfo.tm_hour) && (cor->tm_mday == tInfo.tm_mday)) {
        priceNow = prijzen[i];
        tft.setTextColor(TFT_MAGENTA, TFT_BLACK);
      } else tft.setTextColor(TFT_WHITE, TFT_BLACK);
      tft.printf(""%02d-%02d-%02d %02d:%02d"", cor->tm_mday, cor->tm_mon + 1, cor->tm_year + 1900, cor->tm_hour, cor->tm_min);
      tft.setTextColor((prijzen[i] < VALUE_RED) ? TFT_CYAN : TFT_RED);
      if (prijzen[i] < 50) tft.setTextColor(TFT_GREEN, TFT_BLACK);
      if (prijzen[i] < 0) tft.setTextColor(TFT_YELLOW, TFT_BLACK);
      tft.drawRightString(String(prijzen[i]), (i < 18 ? 220 : 480), 33 + (i % 18) * 16, 2);
    }
  }
}

void showCurrentPrice() {  // price (upper right corner of display)
  tft.setTextColor(priceNow < VALUE_RED ? TFT_CYAN : TFT_RED);
  if (priceNow < 50) tft.setTextColor(TFT_GREEN);
  if (priceNow < 0) tft.setTextColor(TFT_YELLOW);
  tft.fillRect(344, 0, 136, 22, TFT_BLACK);
  tft.setCursor(344, 0, 4);
  tft.printf(""%3.2F"", priceNow);
}

void get_JsonData() {
  HTTPClient http;
  http.begin(my_link);
  delay(3000);
  if (http.GET() == 200) {
    DynamicJsonDocument doc(8192);  // choose value large enough to contain the data
    auto error = deserializeJson(doc, http.getString());
    if (error) {
      tft.drawCentreString(""deserializeJson() failed"", 240, 200, 4);
      tft.drawCentreString(error.c_str(), 240, 250, 4);
    }
    for (uint8_t i = 0; i < SHOW_ITEMS * 2; i++) {  // actually more data than we can show on display
      prices[i] = doc[""price""][i];
      epoc[i] = doc[""unix_seconds""][i];
      API_ITEMS = i;  // count number of returned items
    }
  } else {  // http.get has failed
    tft.fillScreen(TFT_BLACK);
    tft.drawCentreString(""Error in API response"", 240, 160, 4);
    tft.drawCentreString(""Restart in 18 seconds"", 240, 190, 4);
    delay(2000);
    sleep16Sec();
  }
  http.end();
  uint8_t j = SHOW_ITEMS + 1;
  for (uint8_t i = API_ITEMS; i >= 0; i--) {  // select the most recent Json data
    if (epoc[i] != 0) {                       // ignore empty data
      j--;                                    // counter for results
      prijzen[j - 1] = prices[i];             // transferring valid prices from API results
      epo[j - 1] = epoc[i];                   // also hours to ""local"" array
      if (j == 0) break;                      // stop when we have 34 items
    }
  }
}

void sleep16Sec() {
  esp_sleep_enable_timer_wakeup(16000000);  // 16 seconds
  esp_deep_sleep_start();                   // deep sleep: this will reset the clock & force a new time sync
}

void connectWiFi() {
  WiFi.disconnect();
  flash.begin(""login_data"", true);  // true = read only
  Ssid = flash.getString(""ssid"", """");
  Pasw = flash.getString(""pasw"", """");
  flash.end();
  WiFi.begin(Ssid.c_str(), Pasw.c_str());
  if (testWifi()) return;
  else {  // no WiFi connection
    messageNoConnection();
    setupAP();
    startWebServer();
    server.begin();
  }
  while ((WiFi.status() != WL_CONNECTED)) server.handleClient();
}

bool testWifi() {
  tft.fillScreen(TFT_BLACK);
  tft.setCursor(44, 0, 4);
  tft.setTextColor(TFT_GREEN, TFT_BLACK);
  tft.print(""Connect to WiFi"");
  tft.fillCircle(160, 138, 10, TFT_YELLOW);
  tft.drawRect(10, 190, 300, 20, TFT_CYAN);
  byte c = 0;
  while (c < 180) {
    if (WiFi.isConnected()) {
      WiFi.setAutoReconnect(true);
      WiFi.persistent(true);
      return true;
    }
    delay(20);
    for (byte t = 0; t < 4; t++) {  // animation logo wifi
      tft.drawSmoothArc(160, 140, (c % 20) + 20 + (t * 20), (c % 20) + 14 + (t * 20), 135, 225, TFT_YELLOW, TFT_YELLOW, true);
      tft.drawSmoothArc(160, 140, (c % 20) + 14 + (t * 20), (c % 20) + 13 + (t * 20), 120, 240, TFT_BLACK, TFT_BLACK, true);
    }
    tft.drawFastVLine(c + 11, 192, 16, TFT_CYAN);
    ++c;
  }
  return false;
}

void messageNoConnection() {
  tft.fillScreen(TFT_NAVY);
  tft.setTextColor(TFT_YELLOW), tft.setTextFont(4);
  for (uint8_t i = 0; i < 7; i++) tft.drawCentreString(connect[i], 240, 40 + i * 30, 4);
}

void setupAP(void) {
  WiFi.mode(WIFI_STA);
  WiFi.disconnect();
  delay(500);
  int n = WiFi.scanNetworks();
  delay(5000);
  for (int i = 0; i < n; ++i) {  // html om gevonden netwerken op knoppen te zetten op webpagina
    buttons += ""\n<button onclick='scrollNaar(this.id)' id='"" + WiFi.SSID(i) + ""'>"" + WiFi.SSID(i) + ""</button><br>"";
  }
  delay(1000);
  WiFi.softAP(""S035_ESP"");
  startWebServer();
  server.begin();
}

void startWebServer() {
  server.on(""/"", []() {
    IPAddress ip = WiFi.softAPIP();
    webText = ""<!DOCTYPE HTML>\n<html lang='en'>\n<head><title>Setup</title>\n<meta name='viewport' "";
    webText += ""content='width=device-width, initial-scale=1.0'>"";
    webText += ""\n<style>\np {\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 18px;\n  margin: 0;\n  text-align: "";
    webText += ""center;\n}\n\nbutton, input[type=submit] {\n  width: 250px;\n  border-radius: 5px;\n  color: White;\n  padding:"";
    webText += "" 4px 4px;\n  margin-top: 16px;\n  margin: 0 auto;\n  display:block;\n  font-size: 18px;\n  font-weight: 600;"";
    webText += ""\n  background: DodgerBlue;\n}\n\ninput {\n  width: 250px;\n  font-size: 18px;\n  font-weight: 600;\n}"";
    webText += ""\n</style>\n</head>\n<body><p style='font-family:arial; "";
    webText += ""font-size:240%;'>WiFi setup\n</p><p style='font-family:arial; font-size:160%;'>\n<br>"";
    webText += ""Networks found:<br> Click on item to select or<br>Enter your network data<br> in the boxes below:</p><br>"";
    webText += buttons;
    webText += ""\n<form method='get' action='setting'>\n<p><b>\nSSID: <br>\n<input id='ssid' name='ssid'>"";
    webText += ""<br>PASW: </b><br>\n<input type='password' name='pass'><br><br>\n<input type='submit' value='Save'>"";
    webText += ""\n</p>\n</form>\n<script>\nfunction scrollNaar(tekst) {\n  document.getElementById('ssid')"";
    webText += "".value = tekst;\n  window.scrollTo(0, document.body.scrollHeight);\n}\n</script>\n</body>\n</html>"";
    server.sendHeader(""Access-Control-Allow-Origin"", ""*"");
    server.send(200, ""\ntext/html"", webText);
  });
  server.on(""/setting"", []() {  // store data in flash
    server.sendHeader(""Access-Control-Allow-Origin"", ""*"");
    webText = ""<!DOCTYPE HTML>\n<html lang='en'>\n<head><title>Setup</title>\n<meta name='viewport' "";
    webText += ""content='width=device-width, initial-scale=1.0'>"";
    webText += ""\n<style>\np {\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 18px;\n  margin: 0;\n  text-align: "";
    webText += ""center;\n}\n\nbutton, input[type=submit] {\n  width: 250px;\n  border-radius: 5px;\n  color: White;\n  padding:"";
    webText += "" 4px 4px;\n  margin-top: 16px;\n  margin: 0 auto;\n  display:block;\n  font-size: 18px;\n  font-weight: 600;"";
    webText += ""\n  background: DodgerBlue;\n}\n\ninput {\n  width: 250px;\n  font-size: 18px;\n  font-weight: 600;\n}"";
    webText += ""\n</style>\n</head>\n<body><p style='font-family:arial; "";
    webText += ""font-size:240%;'>ESP will reboot\n<br>"";
    webText += ""Close this window</p><br>"";
    webText += ""\n</body>\n</html>"";
    server.send(200, ""\ntext/html"", webText);
    delay(500);
    String myssid = server.arg(""ssid"");  // store in flash
    String mypasw = server.arg(""pass"");
    if (myssid.length() > 0 && mypasw.length() > 0) {
      flash.begin(""login_data"", false);  // false = write to ""flash/login_data""
      flash.putString(""ssid"", myssid);
      flash.putString(""pasw"", mypasw);
      flash.end();
      ESP.restart();
    }
  });
}"
ZvxK33Wy,–ü–∞–∫–µ—Ç —Ç–æ–≤–∞—Ä–∞,LuNa2713,JSON,Thursday 20th of June 2024 02:03:55 AM CDT,"{
""guid"":""71f2cfcf-0918-11ef-bbad-f8f21eb142cd"",
""id"":""86826"",
""title"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä Huawei S5735-S24ST4XE-V2"",
""full_title"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä Huawei S5735-S24ST4XE-V2"",
""english_name"":""S5735-S24ST4XE-V2+2xPAC180S12-CN"",
""parent"":""87e027d0-bf7a-11ea-926d-005056b295f9"",
""sku"":""S5735-S24ST4XE-V2"",
""weight"":""4.95"",
""volume"":"""",
""unit_type"":""—à—Ç"",
""height"":null,
""depth"":null,
""width"":null,
""coefficient"":""1"",
""seller_guid"":""ce9bf511-040e-11ec-b7d3-3cfdfeac1949"",
""seller_name"":""Abbey Lane Huawei"",
""invoiceName"":""Switch S5735-S24ST4XE-V2 included: Switch S5735-S24ST4XE-V2 1 pc, AC power supply 2 pcs, mounting kit 1 pc, documentation kit 1 pc"",
""invoiceNameRu"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä S5735-S24ST4XE-V2 –≤ —Å–æ—Å—Ç–∞–≤–µ: –ö–æ–º–º—É—Ç–∞—Ç–æ—Ä S5735-S24ST4XE-V2 1 —à—Ç, –±–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è AC 2 —à—Ç, –∫–æ–º–ø–ª–µ–∫—Ç –∫—Ä–µ–ø–ª–µ–Ω–∏—è 1 —à—Ç, –∫–æ–º–ø–ª–µ–∫—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ 1 —à—Ç"",
""tax"":20,
""guarantee_ext"":""12 –º–µ—Å—è—Ü–µ–≤"",
""used"":0,
""datecreating"":""2024-05-03T11:33:21"",
""parentAdditional"":{
},
""analogs"":{
},
""EOL"":false,
""guidReplacement"":"""",
""brand"":""58bf25d9-f779-11e8-8a82-d89d671c895e"",
""ProhibitedExport"":false,
""ProhibitedExportPrice"":true,
""Software"":false,
""ReconcilePrice"":true,
""PresalePreparation"":true,
""Service"":false,
""Hide"":false,
""Properties"":[
{
""property_guid"":""d2216845-3e8d-11ea-b105-005056b295f9"",
""value_guid"":""0ad00e4b-3e8e-11ea-b105-005056b295f9"",
""value_name"":""–£–ø—Ä–∞–≤–ª—è–µ–º—ã–π L3""
},
{
""property_guid"":""1fd9e73f-3e8e-11ea-b105-005056b295f9"",
""value_guid"":""3de48d3f-aedc-11ea-926d-005056b295f9"",
""value_name"":""GigabitEthernet RJ45""
},
{
""property_guid"":""d627fa5e-bc5e-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""57b25152-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""56768279-9e43-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""6ba81701-3e8e-11ea-b105-005056b295f9"",
""value_name"":""8""
},
{
""property_guid"":""77e41db5-3e8e-11ea-b105-005056b295f9"",
""value_name"":""24""
},
{
""property_guid"":""87449183-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""629fa031-a73c-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""7e0a9b8c-a73c-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""92ce1900-3e8e-11ea-b105-005056b295f9"",
""value_name"":""4""
},
{
""property_guid"":""f048fb53-a0b6-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""51122e3a-a006-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""9d484fc3-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""ad91fffb-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""c82fd2a6-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""d7017a48-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""e833dae7-a73c-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""38ad503c-3e8f-11ea-b105-005056b295f9"",
""value_name"":""=–ú–ù–û–ñ(100-240V AC)""
},
{
""property_guid"":""2b28adb3-41aa-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""6e8e7315-3e8f-11ea-b105-005056b295f9"",
""value_guid"":""793889b1-3e8f-11ea-b105-005056b295f9"",
""value_name"":""–î–∞""
},
{
""property_guid"":""af58c0c9-3e8f-11ea-b105-005056b295f9"",
""value_name"":""4094""
},
{
""property_guid"":""bc629754-3e8f-11ea-b105-005056b295f9"",
""value_name"":""32768""
},
{
""property_guid"":""d50f5c24-3e8f-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""e4e7033b-3e8f-11ea-b105-005056b295f9"",
""value_name"":""=–ú–ù–û–ñ(PVST; STP; RSTP; MSTP; ERPS)""
},
{
""property_guid"":""24833df1-3e90-11ea-b105-005056b295f9"",
""value_name"":""4094""
},
{
""property_guid"":""8006e4a3-3e90-11ea-b105-005056b295f9"",
""value_name"":""4000""
},
{
""property_guid"":""8bbf326f-3e90-11ea-b105-005056b295f9"",
""value_name"":""=–ú–ù–û–ñ(BGP; ECMP; IS-IS; ICMP; OSPF; PIM; PIM-DM; PIM-SM; RIP; Static route; VRRP)""
},
{
""property_guid"":""e90c9cb0-3e90-11ea-b105-005056b295f9"",
""value_guid"":""4d727f01-62a8-11ee-ba45-30e171602127"",
""value_name"":""–ù–µ—Ç""
},
{
""property_guid"":""f89badf8-3e90-11ea-b105-005056b295f9"",
""value_name"":""=–ú–ù–û–ñ()""
},
{
""property_guid"":""21cdc18b-3e91-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""2c58cef0-3e91-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""3bc8e833-3e91-11ea-b105-005056b295f9"",
""value_guid"":""e08bcd90-40b0-11ed-ba40-30e171602127"",
""value_name"":""–ù–µ—Ç""
},
{
""property_guid"":""c3c9023f-419a-11ea-b105-005056b295f9"",
""value_name"":""CLI, WEB, SSH, TELNET""
},
{
""property_guid"":""aa6628a5-40f7-11ea-b105-005056b295f9"",
""value_name"":""=–¢–ï–ú–ü(-5:50)""
},
{
""property_guid"":""fbd8160d-4194-11ea-b105-005056b295f9"",
""value_guid"":""fbd8160e-4194-11ea-b105-005056b295f9"",
""value_name"":""–ê–∫—Ç–∏–≤–Ω–∞—è""
},
{
""property_guid"":""19bb13c1-4195-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""f82cf738-4196-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""5b027d48-4197-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""68a00c6f-4197-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""ad80cc9f-4199-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""8ad89300-419b-11ea-b105-005056b295f9"",
""value_name"":""=–ú–ù–û–ñ(RJ45)""
},
{
""property_guid"":""a6f57a70-419b-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""21c4d86a-89e6-11ea-bb99-005056b2dbab"",
""value_name"":""""
},
{
""property_guid"":""c899dec7-3e8f-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""4c21e7f9-9e53-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""46d52d08-a0d5-11ea-926d-005056b295f9"",
""value_guid"":""4adaed3d-1cfe-11ec-94ff-005056b2891c"",
""value_name"":""SFP+""
},
{
""property_guid"":""4e7d082f-bcfa-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""97b42e71-cfe9-11ea-926d-005056b295f9"",
""value_name"":""24""
},
{
""property_guid"":""d69c75c1-cfe9-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""f8ee41ff-56c7-11ea-bb99-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""1b766422-f0fc-11ea-926d-005056b295f9"",
""value_guid"":""557f2503-0f81-11eb-926d-005056b295f9"",
""value_name"":""10GigabitEthernet SFP+""
},
{
""property_guid"":""dbfcf7d1-a11e-11ea-926d-005056b295f9"",
""value_name"":""- –ö–æ–º–º—É—Ç–∞—Ç–æ—Ä –≤ —É–ø–∞–∫–æ–≤–∫–µ - –ö—Ä–µ–ø–ª–µ–Ω–∏—è –≤ —Å—Ç–æ–π–∫—É - 2 –±–ª–æ–∫–∞ –ø–∏—Ç–∞–Ω–∏—è AC 180W - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è""
},
{
""property_guid"":""e5548356-27f2-11ec-94ff-005056b2891c"",
""value_name"":""""
},
{
""property_guid"":""f68385fe-27f2-11ec-94ff-005056b2891c"",
""value_name"":""""
},
{
""property_guid"":""afe604ee-b9bd-11ee-aaa5-1402ec40b943"",
""value_name"":""""
},
{
""property_guid"":""e1fb3e93-eb2c-11ee-ba4b-f8f21eb13e24"",
""value_name"":""""
}
],
""kit_composition"":{
},
""SEO_title"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä S5735-S24ST4XE-V2"",
""SEO_description"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä S5735-S24ST4XE-V2"",
""SEO_keywords"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä S5735-S24ST4XE-V2"",
""keywords"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä S5735-S24ST4XE-V2"",
""always_getwatersign"":false,
""files"":[],
""files_number"":3,
""manager_guid"":""81eb03ff-d314-11eb-bb7a-005056b295f9"",
""employee_guid"":""4a1c5a1a-cd90-11eb-bb7a-005056b295f9"",
""employee_name"":""–ë–∞–π–¥–∏–Ω –§–∏–ª–∏–ø–ø –≠–¥—É–∞—Ä–¥–æ–≤–∏—á"",
""employee_outz_guid"":""9879c228-4a25-11e5-9a3f-000c293857ef"",
""employee_outz_name"":""–ú–∞–∫–∞—Ä–æ–≤–∞ –ö–∞—Ä–∏–Ω–∞ –ú–∏—Ö–∞–π–ª–æ–≤–Ω–∞"",
""object_ut11"":true,
""test_site"":""–ù–µ—Ç"",
""kind_nomenclature_guid"":""bcdc06a6-3e8d-11ea-b105-005056b295f9"",
""Code_TNVED"":""8517620003"",
""country_ID"":""156"",
""unit_places"":{},
""usepackaging"":true,
""unit"":[],
""kit_packaging"":{
""guid"":""531bddaa-ba91-11e9-8a1a-d89d672a5c53"",
""predefined_name"":""–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π–î–ª—è–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã""
},
""packaging"":[
{
""guid"":""ebd50cc1-091a-11ef-bbad-f8f21eb142cd"",
""title"":""—à—Ç"",
""code_numerator"":""796"",
""numerator"":1,
""denominator"":1,
""type"":""–£–ø–∞–∫–æ–≤–∫–∞"",
""packaging_type"":""–ö–æ–Ω–µ—á–Ω–∞—è"",
""weight_code"":null,
""volume_code"":null,
""height_code"":null,
""width_code"":null,
""depth_code"":null,
""weight"":4.95,
""volume"":0,
""height"":0,
""width"":0,
""depth"":0,
""deleted"":false
}
],
""state"":{
""giud"":""463f1a1b-ee6f-11e9-97df-b42e9969c4ff"",
""name"":""–í–≤–æ–¥–∏–º—ã–π""
},
""sales_territory"":[
""UZ"",
""KZ"",
""RU""
],
""archive"":false,
""version"":"""",
""lowquality"":false,
""noindex"":false,
""firmwares"":{
},
""is_international"":false,
""title_en"":""S5735-S24ST4XE-V2+2xPAC180S12-CN"",
""deleted"":false,
""productClass"":{
""guid"":""b8f4355c-96bb-11eb-88ca-005056b295f9"",
""name"":""–¢–æ–≤–∞—Ä"",
""registryDomesticSoftware"":{
""number"":"""",
""date"":""""
}
}
}"
9zGvTGxJ,–ü–∞–∫–µ—Ç —Ç–æ–≤–∞—Ä–∞,LuNa2713,JSON,Thursday 20th of June 2024 01:56:47 AM CDT,"{
""guid"":""99478c8a-0c45-11ef-bbad-f8f21eb142cd"",
""id"":""87283"",
""title"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä Huawei S5735-S48T4XE-V2"",
""full_title"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä Huawei S5735-S48T4XE-V2"",
""english_name"":""S5735-S48T4XE-V2+2*PAC180S12-CN"",
""parent"":""fdeca1d0-6002-11db-b55d-000d61ab47ad"",
""sku"":""S5735-S48T4XE-V2"",
""weight"":"""",
""volume"":"""",
""unit_type"":""—à—Ç"",
""height"":null,
""depth"":null,
""width"":null,
""coefficient"":""1"",
""seller_guid"":""ce9bf511-040e-11ec-b7d3-3cfdfeac1949"",
""seller_name"":""Abbey Lane Huawei"",
""invoiceName"":""Switch S5735-S48T4XE-V2 included 2 *180W power supplies, rack mount, power cables"",
""invoiceNameRu"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä S5735-S48T4XE-V2 –≤ –∫–æ–º–ø–ª–µ–∫—Ç–µ 2 –±–ª–æ–∫–∞ –Ω–∞ 180W –ø–∏—Ç–∞–Ω–∏—è, –∫—Ä–µ–ø–ª–µ–Ω–∏–µ, –∫–∞–±–µ–ª–∏ –ø–∏–∞—Ç–Ω–∏—è"",
""tax"":20,
""guarantee_ext"":""12 –º–µ—Å—è—Ü–µ–≤"",
""used"":0,
""datecreating"":""0001-01-01T00:00:00"",
""parentAdditional"":{
},
""analogs"":{
},
""EOL"":false,
""guidReplacement"":"""",
""brand"":""58bf25d9-f779-11e8-8a82-d89d671c895e"",
""ProhibitedExport"":false,
""ProhibitedExportPrice"":true,
""Software"":false,
""ReconcilePrice"":true,
""PresalePreparation"":true,
""Service"":false,
""Hide"":false,
""Properties"":[
{
""property_guid"":""d2216845-3e8d-11ea-b105-005056b295f9"",
""value_guid"":""0ad00e4b-3e8e-11ea-b105-005056b295f9"",
""value_name"":""–£–ø—Ä–∞–≤–ª—è–µ–º—ã–π L3""
},
{
""property_guid"":""1fd9e73f-3e8e-11ea-b105-005056b295f9"",
""value_guid"":""3de48d3f-aedc-11ea-926d-005056b295f9"",
""value_name"":""GigabitEthernet RJ45""
},
{
""property_guid"":""d627fa5e-bc5e-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""57b25152-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""56768279-9e43-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""6ba81701-3e8e-11ea-b105-005056b295f9"",
""value_name"":""48""
},
{
""property_guid"":""77e41db5-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""87449183-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""629fa031-a73c-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""7e0a9b8c-a73c-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""92ce1900-3e8e-11ea-b105-005056b295f9"",
""value_name"":""4""
},
{
""property_guid"":""f048fb53-a0b6-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""51122e3a-a006-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""9d484fc3-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""ad91fffb-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""c82fd2a6-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""d7017a48-3e8e-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""e833dae7-a73c-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""38ad503c-3e8f-11ea-b105-005056b295f9"",
""value_name"":""=–ú–ù–û–ñ(100-240V AC)""
},
{
""property_guid"":""2b28adb3-41aa-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""6e8e7315-3e8f-11ea-b105-005056b295f9"",
""value_guid"":""793889b1-3e8f-11ea-b105-005056b295f9"",
""value_name"":""–î–∞""
},
{
""property_guid"":""af58c0c9-3e8f-11ea-b105-005056b295f9"",
""value_name"":""4094""
},
{
""property_guid"":""bc629754-3e8f-11ea-b105-005056b295f9"",
""value_name"":""32768""
},
{
""property_guid"":""d50f5c24-3e8f-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""e4e7033b-3e8f-11ea-b105-005056b295f9"",
""value_name"":""=–ú–ù–û–ñ(PVST; STP; RSTP; MSTP; ERPS)""
},
{
""property_guid"":""24833df1-3e90-11ea-b105-005056b295f9"",
""value_name"":""4094""
},
{
""property_guid"":""8006e4a3-3e90-11ea-b105-005056b295f9"",
""value_name"":""4000""
},
{
""property_guid"":""8bbf326f-3e90-11ea-b105-005056b295f9"",
""value_name"":""=–ú–ù–û–ñ(BGP; ECMP; IS-IS; ICMP; OSPF; PIM; PIM-DM; PIM-SM; RIP; Static route; VRRP)""
},
{
""property_guid"":""e90c9cb0-3e90-11ea-b105-005056b295f9"",
""value_guid"":""4d727f01-62a8-11ee-ba45-30e171602127"",
""value_name"":""–ù–µ—Ç""
},
{
""property_guid"":""f89badf8-3e90-11ea-b105-005056b295f9"",
""value_name"":""=–ú–ù–û–ñ()""
},
{
""property_guid"":""21cdc18b-3e91-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""2c58cef0-3e91-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""3bc8e833-3e91-11ea-b105-005056b295f9"",
""value_guid"":""e08bcd90-40b0-11ed-ba40-30e171602127"",
""value_name"":""–ù–µ—Ç""
},
{
""property_guid"":""c3c9023f-419a-11ea-b105-005056b295f9"",
""value_name"":""CLI, WEB, SSH, TELNET""
},
{
""property_guid"":""aa6628a5-40f7-11ea-b105-005056b295f9"",
""value_name"":""=–¢–ï–ú–ü(-5:50)""
},
{
""property_guid"":""fbd8160d-4194-11ea-b105-005056b295f9"",
""value_guid"":""fbd8160e-4194-11ea-b105-005056b295f9"",
""value_name"":""–ê–∫—Ç–∏–≤–Ω–∞—è""
},
{
""property_guid"":""19bb13c1-4195-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""f82cf738-4196-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""5b027d48-4197-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""68a00c6f-4197-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""ad80cc9f-4199-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""8ad89300-419b-11ea-b105-005056b295f9"",
""value_name"":""=–ú–ù–û–ñ(RJ45)""
},
{
""property_guid"":""a6f57a70-419b-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""21c4d86a-89e6-11ea-bb99-005056b2dbab"",
""value_name"":""""
},
{
""property_guid"":""c899dec7-3e8f-11ea-b105-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""4c21e7f9-9e53-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""46d52d08-a0d5-11ea-926d-005056b295f9"",
""value_guid"":""4adaed3d-1cfe-11ec-94ff-005056b2891c"",
""value_name"":""SFP+""
},
{
""property_guid"":""4e7d082f-bcfa-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""97b42e71-cfe9-11ea-926d-005056b295f9"",
""value_name"":""24""
},
{
""property_guid"":""d69c75c1-cfe9-11ea-926d-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""f8ee41ff-56c7-11ea-bb99-005056b295f9"",
""value_name"":""""
},
{
""property_guid"":""1b766422-f0fc-11ea-926d-005056b295f9"",
""value_guid"":""557f2503-0f81-11eb-926d-005056b295f9"",
""value_name"":""10GigabitEthernet SFP+""
},
{
""property_guid"":""dbfcf7d1-a11e-11ea-926d-005056b295f9"",
""value_name"":""- –ö–æ–º–º—É—Ç–∞—Ç–æ—Ä –≤ —É–ø–∞–∫–æ–≤–∫–µ - –ö—Ä–µ–ø–ª–µ–Ω–∏—è –≤ —Å—Ç–æ–π–∫—É - 2 –±–ª–æ–∫–∞ –ø–∏—Ç–∞–Ω–∏—è AC 180W - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è""
},
{
""property_guid"":""e5548356-27f2-11ec-94ff-005056b2891c"",
""value_name"":""""
},
{
""property_guid"":""f68385fe-27f2-11ec-94ff-005056b2891c"",
""value_name"":""""
},
{
""property_guid"":""afe604ee-b9bd-11ee-aaa5-1402ec40b943"",
""value_name"":""""
},
{
""property_guid"":""e1fb3e93-eb2c-11ee-ba4b-f8f21eb13e24"",
""value_name"":""""
}
],
""kit_composition"":{
},
""SEO_title"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä S5735-S48T4XE-V2"",
""SEO_description"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä S5735-S48T4XE-V2"",
""SEO_keywords"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä S5735-S48T4XE-V2"",
""keywords"":""–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä S5735-S48T4XE-V2"",
""always_getwatersign"":false,
""files"":[
{
""file_name"":""S5735-S48T4XE-V2"",
""file_description"":"""",
""file_owner"":""99478c8a-0c45-11ef-bbad-f8f21eb142cd"",
""file_tom"":""\\nas.nag.lan\1C-longtime\ERP"",
""file_path"":""20240507\S5735-S48T4XE-V2.png"",
""file_size"":780506,
""file_type"":""png"",
""file_main"":true
},
{
""file_name"":""S5735-S48T4XE-V2(1)"",
""file_description"":"""",
""file_owner"":""99478c8a-0c45-11ef-bbad-f8f21eb142cd"",
""file_tom"":""\\nas.nag.lan\1C-longtime\ERP"",
""file_path"":""20240507\S5735-S48T4XE-V2(1).png"",
""file_size"":1735202,
""file_type"":""png"",
""file_main"":false
}
],
""files_number"":2,
""manager_guid"":""81eb03ff-d314-11eb-bb7a-005056b295f9"",
""employee_guid"":""4a1c5a1a-cd90-11eb-bb7a-005056b295f9"",
""employee_name"":""–ë–∞–π–¥–∏–Ω –§–∏–ª–∏–ø–ø –≠–¥—É–∞—Ä–¥–æ–≤–∏—á"",
""employee_outz_guid"":""9879c228-4a25-11e5-9a3f-000c293857ef"",
""employee_outz_name"":""–ú–∞–∫–∞—Ä–æ–≤–∞ –ö–∞—Ä–∏–Ω–∞ –ú–∏—Ö–∞–π–ª–æ–≤–Ω–∞"",
""object_ut11"":true,
""test_site"":""–ù–µ—Ç"",
""kind_nomenclature_guid"":""bcdc06a6-3e8d-11ea-b105-005056b295f9"",
""Code_TNVED"":""8517620003"",
""country_ID"":""156"",
""unit_places"":{
""name"":null,
""mult"":""""
},
""usepackaging"":true,
""unit"":[
""796"",
""796"",
{
""is_active"":false,
""code_numerator"":null,
""numerator"":0,
""denominator"":0,
""use_in_doc"":false
},
{
""is_active"":false,
""code_numerator"":null,
""numerator"":0,
""denominator"":0,
""use_in_doc"":false
},
{
""is_active"":false,
""code_numerator"":null,
""numerator"":0,
""denominator"":0,
""use_in_doc"":false
},
{
""is_active"":false,
""code_numerator"":null,
""numerator"":0,
""denominator"":0,
""use_in_doc"":false
}
],
""kit_packaging"":{
""guid"":""531bddaa-ba91-11e9-8a1a-d89d672a5c53"",
""predefined_name"":""–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π–î–ª—è–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã""
},
""packaging"":[
{
""guid"":""99478cbe-0c45-11ef-bbad-f8f21eb142cd"",
""title"":""—à—Ç"",
""code_numerator"":""796"",
""numerator"":1,
""denominator"":1,
""type"":""–£–ø–∞–∫–æ–≤–∫–∞"",
""packaging_type"":""–ö–æ–Ω–µ—á–Ω–∞—è"",
""weight_code"":""166"",
""volume_code"":""113"",
""height_code"":""006"",
""width_code"":""006"",
""depth_code"":""006"",
""weight"":0,
""volume"":0,
""height"":0,
""width"":0,
""depth"":0,
""deleted"":false
}
],
""state"":{
""giud"":""463f1a1b-ee6f-11e9-97df-b42e9969c4ff"",
""name"":""–í–≤–æ–¥–∏–º—ã–π""
},
""sales_territory"":[
""UZ"",
""KZ"",
""RU""
],
""archive"":false,
""version"":"""",
""lowquality"":false,
""noindex"":false,
""firmwares"":{
},
""is_international"":false,
""title_en"":""S5735-S48T4XE-V2+2*PAC180S12-CN"",
""deleted"":false,
""productClass"":{
""guid"":""b8f4355c-96bb-11eb-88ca-005056b295f9"",
""name"":""–¢–æ–≤–∞—Ä"",
""registryDomesticSoftware"":{
""number"":"""",
""date"":""""
}
}
}"
sYr4dbQB,Lab Test 2 DAD,Zuhairy_Harry,Java,Thursday 20th of June 2024 01:56:00 AM CDT,"import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class FileProcessingDemo {
    public static void main(String[] args) {
        // Create the frame
        JFrame frame = new JFrame(""File Processing"");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(500, 300);
        frame.setLayout(new FlowLayout());

        // Create the ""Pick File"" button
        JButton pickFileButton = new JButton(""Pick File"");
        JTextField filePathField = new JTextField(30);
        filePathField.setEditable(false);
        
        // Create the ""Start Processing"" button
        JButton startProcessingButton = new JButton(""Start Processing"");

        // Create the text field to display the key generation result
        JTextField keyGenerateField = new JTextField(30);
        keyGenerateField.setEditable(false);

        // Add action listener to the ""Pick File"" button
        pickFileButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Create a file chooser
                JFileChooser fileChooser = new JFileChooser();

                // Show the open dialog
                int result = fileChooser.showOpenDialog(null);

                // Check if a file was selected
                if (result == JFileChooser.APPROVE_OPTION) {
                    // Get the selected file
                    String selectedFilePath = fileChooser.getSelectedFile().getAbsolutePath();
                    filePathField.setText(selectedFilePath);
                } else {
                    // Display a message if no file was selected
                    JOptionPane.showMessageDialog(frame, ""No file selected"");
                }
            }
        });

        // Add action listener to the ""Start Processing"" button
        startProcessingButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String filePath = filePathField.getText();
                if (!filePath.isEmpty()) {
                    // Create a new thread to process the file
                    new Thread(new Runnable() {
                        @Override
                        public void run() {
                            try {
                                // Use FileReader and BufferedReader to read the file
                                FileReader fileReader = new FileReader(filePath);
                                BufferedReader bufferedReader = new BufferedReader(fileReader);

                                String line;
                                int passwordCount = 0;
                                int bitp3123Count = 0;

                                // Read the file line by line
                                while ((line = bufferedReader.readLine()) != null) {
                                    if (line.contains(""password"")) {
                                        passwordCount++;
                                    }
                                    if (line.contains(""bitp3123"")) {
                                        bitp3123Count++;
                                    }
                                }

                                bufferedReader.close();

                                // Calculate the result
                                int result = passwordCount * bitp3123Count;

                                // Update the keyGenerateField with the result
                                SwingUtilities.invokeLater(new Runnable() {
                                    @Override
                                    public void run() {
                                        keyGenerateField.setText(String.valueOf(result));
                                    }
                                });

                            } catch (IOException ex) {
                                ex.printStackTrace();
                                JOptionPane.showMessageDialog(frame, ""Error reading file: "" + ex.getMessage());
                            }
                        }
                    }).start();
                } else {
                    JOptionPane.showMessageDialog(frame, ""Please select a file first."");
                }
            }
        });

        // Add components to the frame
        frame.add(pickFileButton);
        frame.add(filePathField);
        frame.add(startProcessingButton);
        frame.add(keyGenerateField);

        // Make the frame visible
        frame.setVisible(true);
    }
}
"
AZVfBZFE,CookieClicker1.0/PaleNoobs,palenoobs,Lua,Thursday 20th of June 2024 01:27:45 AM CDT,"-- DISCLAIMER: This game is probably really easy to hack. If you are reading this and want to use the code, you should make your game more secure than this.

local fs = loadlib(""FileSystem"")
local http = loadlib(""Http"")
-- encryption lib?

local gameVersion = ""1.0""

local confirmWindowCreated = false
local rebirthTextCreated = false
local upgradeTextCreated = false

local app = Lime.CreateWindow(""Cookie Clicker "" .. gameVersion)

-- local clickSound = Instance.new(""Sound"")
-- clickSound.SoundId = 6042053626
-- clickSound.Parent = app

-- local cookieSound = Instance.new(""Sound"")
-- cookieSound.SoundId = 6324790483
-- cookieSound.Parent = app

local data = {
    [""gameVersion""] = gameVersion,
    [""cookieAmount""] = 0,
    [""incrementAmount""] = 1,
    [""rebirths""] = 1, -- default 1 because of the multiplier thing
    [""upgrades""] = { -- amount of each upgrade (i.e. 5 cursors, 10 grandmas)
        [""cursor""] = 0,
        [""grandma""] = 0,
        [""bakery""] = 0
    }
}

print(""a"")

-- Loading data
if fs.FileExists(fs.GetDriveLetter() .. "":/System/AppData/CookieClicker.txt"") then
    -- fs.DeleteObject(fs.GetDriveLetter() .. "":/System/AppData/CookieClicker.txt"",""System"") --ONLY FOR TESTING, DO NOT UNCOMMENT
    local fileData = fs.GetFile(fs.GetDriveLetter() .. "":/System/AppData/CookieClicker.txt"").Data
    if fileData == """" then
        fileData = data
    end
    local decodedData = http.JSONDecode(fileData)
    data = decodedData
    print(""Save file found, loaded player data"")
else
    data[""cookieAmount""] = 17500
    local jsonData = http.JSONEncode(data)
    fs.CreateFile(fs.GetDriveLetter() .. "":/System/AppData/CookieClicker.txt"", nil, ""R-W"", ""System"")
    fs.WriteFile(fs.GetDriveLetter() .. "":/System/AppData/CookieClicker.txt"", jsonData, ""System"", true)
    print(""Save file not found, creating new file"")
end

print(""aa"")

-- **UI**
local scrollFrame = Lime.CreateUI(app, ""ScrollingFrame"")
scrollFrame.Size = UDim2.fromScale(1, 1)
scrollFrame.BackgroundTransparency = 1
scrollFrame.CanvasSize = UDim2.new(0, 0, 2, 0)
scrollFrame.AutomaticCanvasSize = ""Y""
scrollFrame.BottomImage = ""rbxasset://textures/ui/Scroll/scroll-middle.png""
scrollFrame.TopImage = ""rbxasset://textures/ui/Scroll/scroll-middle.png""
scrollFrame.ScrollingDirection = ""Y""

local cookies = Lime.CreateUI(app, ""TextLabel"")
cookies.Size = UDim2.fromScale(0.6, 0.2)
cookies.AnchorPoint = Vector2.new(0.5, 0)
cookies.Position = UDim2.fromScale(0.5, 0.1)
cookies.TextScaled = true
cookies.BackgroundTransparency = 1
cookies.TextColor3 = Color3.fromRGB(255, 255, 255)
cookies.Parent = scrollFrame
cookies.Text = ""Cookies: "" .. data[""cookieAmount""]

local perSecondText = Lime.CreateUI(app, ""TextLabel"")
perSecondText.Size = UDim2.fromScale(0.5, 0.075)
perSecondText.AnchorPoint = Vector2.new(0.5, 0)
perSecondText.Position = UDim2.fromScale(0.5, 0.3)
perSecondText.TextScaled = true
perSecondText.BackgroundTransparency = 0.9
perSecondText.TextColor3 = Color3.fromRGB(255, 255, 255)
perSecondText.Parent = scrollFrame
perSecondText.Text = ""Cookies per second: "" .. tostring(data[""upgrades""][""cursor""] + (data[""upgrades""][""grandma""] * 5) + (data[""upgrades""][""bakery""] * 50))

local fakebutton = Lime.CreateUI(app, ""TextLabel"")
-- fake button goes under the real clickable button
fakebutton.Size = UDim2.fromScale(0.7, 0.4)
fakebutton.AnchorPoint = Vector2.new(0.5, 0)
fakebutton.Position = UDim2.fromScale(0.5, 0.475)
fakebutton.Text = """"
fakebutton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
fakebutton.Parent = scrollFrame

local fakebuttonCorner = Lime.CreateUI(app, ""UICorner"")
fakebuttonCorner.CornerRadius = UDim.new(0.1, 0)
fakebuttonCorner.Parent = fakebutton

local button = Lime.CreateUI(app, ""TextButton"")
button.Size = UDim2.fromScale(0.7, 0.4)
button.AnchorPoint = Vector2.new(0.5, 0)
button.Position = UDim2.fromScale(0.5, 0.45)
button.TextScaled = true
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.AutoButtonColor = false
button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
button.Parent = scrollFrame
if data[""incrementAmount""] == 1 then
    button.Text = ""+"" .. data[""incrementAmount""] .. "" Cookie""
else
    button.Text = ""+"" .. data[""incrementAmount""] .. "" Cookies""
end

local buttonStroke = Lime.CreateUI(app, ""UIStroke"")
buttonStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
buttonStroke.Thickness = 4
buttonStroke.Color = Color3.fromRGB(50, 50, 50)
-- buttonStroke.Parent = button

local buttonCorner = Lime.CreateUI(app, ""UICorner"")
buttonCorner.CornerRadius = UDim.new(0.1, 0)
buttonCorner.Parent = button

local upgradesDisclaimer = Lime.CreateUI(app, ""TextLabel"")
upgradesDisclaimer.Size = UDim2.fromScale(0.5, 0.035)
upgradesDisclaimer.AnchorPoint = Vector2.new(0.5, 0)
upgradesDisclaimer.Position = UDim2.fromScale(0.5, 0.015)
upgradesDisclaimer.BackgroundTransparency = 1
upgradesDisclaimer.TextScaled = true
upgradesDisclaimer.TextColor3 = Color3.fromRGB(255, 255, 255)
upgradesDisclaimer.Parent = scrollFrame
upgradesDisclaimer.Text = ""Scroll down for upgrades!""

local upgradesFrame = Lime.CreateUI(app, ""Frame"")
upgradesFrame.BackgroundTransparency = 1
upgradesFrame.AnchorPoint = Vector2.new(0.5, 0)
upgradesFrame.Position = UDim2.fromScale(0.5, 1.2)
upgradesFrame.Size = UDim2.fromScale(0.8, 0.8)
upgradesFrame.Parent = scrollFrame

local upgradesFrameTitle = Lime.CreateUI(app, ""TextLabel"")
upgradesFrameTitle.Size = UDim2.fromScale(1, 0.1)
upgradesFrameTitle.BackgroundTransparency = 1
upgradesFrameTitle.TextScaled = true
upgradesFrameTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
upgradesFrameTitle.Parent = upgradesFrame
upgradesFrameTitle.Text = ""Upgrades""

local upgradesScrollFrame = Lime.CreateUI(app, ""ScrollingFrame"")
upgradesScrollFrame.Position = UDim2.fromScale(0.5, 0.15)
upgradesScrollFrame.AnchorPoint = Vector2.new(0.5, 0)
upgradesScrollFrame.Size = UDim2.fromScale(0.95, 0.8)
upgradesScrollFrame.BackgroundTransparency = 0.9
upgradesScrollFrame.AutomaticCanvasSize = ""Y""
upgradesScrollFrame.CanvasSize = UDim2.new(0, 0, 1, 0)
upgradesScrollFrame.BottomImage = ""rbxasset://textures/ui/Scroll/scroll-middle.png""
upgradesScrollFrame.TopImage = ""rbxasset://textures/ui/Scroll/scroll-middle.png""
upgradesScrollFrame.ScrollingDirection = ""Y""
upgradesScrollFrame.Parent = upgradesFrame

local upgrades = Lime.CreateUI(app, ""Frame"")
upgrades.Size = UDim2.fromScale(0.9, 0.9)
upgrades.AnchorPoint = Vector2.new(0.5, 0)
upgrades.Position = UDim2.fromScale(0.5, 0.1)
upgrades.BackgroundTransparency = 1
upgrades.AutomaticSize = ""Y""
upgrades.Parent = upgradesScrollFrame

local upgradesLayout = Lime.CreateUI(app, ""UIGridLayout"")
upgradesLayout.FillDirection = ""Horizontal""
upgradesLayout.CellSize = UDim2.fromScale(0.4, 0.1)
upgradesLayout.CellPadding = UDim2.fromScale(0.035, 0.075)
upgradesLayout.Parent = upgrades

local function newUpgrade()
    local new = Lime.CreateUI(app, ""TextButton"")
    new.Size = UDim2.fromScale(0.4, 0.1)
    new.BackgroundColor3 = Color3.fromRGB(50, 50, 50)

    -- might remove stroke later
    local stroke = Lime.CreateUI(app, ""UIStroke"")
    stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    stroke.Thickness = 4
    stroke.Color = Color3.fromRGB(50, 50, 50)
    stroke.Parent = new

    return new
end

local cursorUpgradeText = ""Cursor (50 Cookies)""
if data[""upgrades""][""cursor""] > 0 then
    cursorUpgradeText = ""Buy Cursor Lvl"" .. (data[""upgrades""][""cursor""] + 1) .. "" ("" .. ((data[""upgrades""][""cursor""] * 50 * 1.2) * data[""rebirths""]) .. "" Cookies)""
end

local grandmaUpgradeText = ""Grandma (250 Cookies)""
if data[""upgrades""][""grandma""] > 0 then
    cursorUpgradeText = ""Buy Grandma Lvl"" .. (data[""upgrades""][""grandma""] + 1) .. "" ("" .. ((data[""upgrades""][""grandma""] * 250 * 1.5) * data[""rebirths""]) .. "" Cookies)""
end

local bakeryUpgradeText = ""Bakery (2000 Cookies)""
if data[""upgrades""][""bakery""] > 0 then
    cursorUpgradeText = ""Buy Bakery Lvl"" .. (data[""upgrades""][""bakery""] + 1) .. "" ("" .. ((data[""upgrades""][""bakery""] * 2000 * 1.5) * data[""rebirths""]) .. "" Cookies)""
end

local cursorUpgrade = newUpgrade()
cursorUpgrade.Parent = upgrades
cursorUpgrade.Text = cursorUpgradeText
cursorUpgrade.TextColor3 = Color3.fromRGB(255, 255, 255)

local grandmaUpgrade = newUpgrade()
grandmaUpgrade.Parent = upgrades
grandmaUpgrade.Text = grandmaUpgradeText
grandmaUpgrade.TextColor3 = Color3.fromRGB(255, 255, 255)

local bakeryUpgrade = newUpgrade()
bakeryUpgrade.Parent = upgrades
bakeryUpgrade.Text = bakeryUpgradeText
bakeryUpgrade.TextColor3 = Color3.fromRGB(255, 255, 255)

local rebirthTitle = Lime.CreateUI(app, ""TextLabel"")
rebirthTitle.Size = UDim2.fromScale(0.8, 0.1)
rebirthTitle.AnchorPoint = Vector2.new(0.5, 0)
rebirthTitle.Position = UDim2.fromScale(0.5, 2.05)
rebirthTitle.TextScaled = true
rebirthTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
rebirthTitle.TextWrapped = true
rebirthTitle.BackgroundTransparency = 1
rebirthTitle.Text = ""Rebirth for a "" .. tostring(data[""rebirths""] + 1) .. ""x multiplier! (Current: "" .. tostring(data[""rebirths""]) .. ""x)""
rebirthTitle.Parent = scrollFrame

local fakerebirthbutton = Lime.CreateUI(app, ""TextLabel"")
-- fake button goes under the real clickable button
fakerebirthbutton.Size = UDim2.fromScale(0.5, 0.2)
fakerebirthbutton.AnchorPoint = Vector2.new(0.5, 0)
fakerebirthbutton.Position = UDim2.fromScale(0.5, 2.2)
fakerebirthbutton.Text = """"
fakerebirthbutton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
fakerebirthbutton.Parent = scrollFrame

local fakerebirthbuttonCorner = Lime.CreateUI(app, ""UICorner"")
fakerebirthbuttonCorner.CornerRadius = UDim.new(0.1, 0)
fakerebirthbuttonCorner.Parent = fakerebirthbutton

local rebirthButton = Lime.CreateUI(app, ""TextButton"")
rebirthButton.Size = UDim2.fromScale(0.5, 0.2)
rebirthButton.AnchorPoint = Vector2.new(0.5, 0)
rebirthButton.Position = UDim2.fromScale(0.5, 2.175)
rebirthButton.TextScaled = true
rebirthButton.TextColor3 = Color3.fromRGB(255, 255, 255)
rebirthButton.AutoButtonColor = false
rebirthButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
rebirthButton.Text = ""Rebirth ("" .. tostring(10000 * data[""rebirths""] * 1.75) .. "" Cookies)""
rebirthButton.Parent = scrollFrame

local rebirthButtonCorner = Lime.CreateUI(app, ""UICorner"")
rebirthButtonCorner.CornerRadius = UDim.new(0.1, 0)
rebirthButtonCorner.Parent = rebirthButton

print(""aaa"")

-- **Mechanics**
local function updateLabels()
    cookies.Text = ""Cookies: "" .. data[""cookieAmount""]

    perSecondText.Text = ""Cookies per second: "" .. tostring((data[""upgrades""][""cursor""] + (data[""upgrades""][""grandma""] * 5) + (data[""upgrades""][""bakery""] * 50)) * data[""rebirths""])

    if data[""incrementAmount""] == 1 then
        button.Text = ""+"" .. data[""incrementAmount""] .. "" Cookie""
    else
        button.Text = ""+"" .. data[""incrementAmount""] .. "" Cookies""
    end

    local cursorUpgradeText = ""Cursor (50 Cookies)""
    if data[""upgrades""][""cursor""] > 0 then
        cursorUpgradeText = ""Buy Cursor Lvl"" .. (data[""upgrades""][""cursor""] + 1) .. "" ("" .. ((data[""upgrades""][""cursor""] * 50 * 1.2) * data[""rebirths""])  .. "" Cookies)""
    end
    cursorUpgrade.Text = cursorUpgradeText

    local grandmaUpgradeText = ""Grandma (250 Cookies)""
    if data[""upgrades""][""grandma""] > 0 then
        grandmaUpgradeText = ""Buy Grandma Lvl"" .. (data[""upgrades""][""grandma""] + 1) .. "" ("" .. ((data[""upgrades""][""grandma""] * 250 * 1.5) * data[""rebirths""]) .. "" Cookies)""
    end
    grandmaUpgrade.Text = grandmaUpgradeText

    local bakeryUpgradeText = ""Bakery (2000 Cookies)""
    if data[""upgrades""][""bakery""] > 0 then
        bakeryUpgradeText = ""Buy Bakery Lvl"" .. (data[""upgrades""][""bakery""] + 1) .. "" ("" .. ((data[""upgrades""][""bakery""] * 2000 * 1.5) * data[""rebirths""]) .. "" Cookies)""
    end
    bakeryUpgrade.Text = bakeryUpgradeText

    rebirthTitle.Text = ""Rebirth for a "" .. tostring(data[""rebirths""] + 1) .. ""x multiplier! (Current: "" .. tostring(data[""rebirths""]) .. ""x)""

    rebirthButton.Text = ""Rebirth ("" .. tostring(10000 * data[""rebirths""] * 1.75) .. "" Cookies)""
end

cursorUpgrade.Activated:Connect(function()
    -- clickSound:Play()
    if data[""upgrades""][""cursor""] == 0 then
        if data[""cookieAmount""] >= 50 then
            data[""cookieAmount""] = data[""cookieAmount""] - 50
            data[""upgrades""][""cursor""] = data[""upgrades""][""cursor""] + 1
            updateLabels()
        else
            if upgradeTextCreated == false then
                task.spawn(function()
                    local upgradesError = Lime.CreateUI(app, ""TextLabel"")
                    upgradesError.Size = UDim2.fromScale(0.8, 0.04)
                    upgradesError.AnchorPoint = Vector2.new(0.5, 0)
                    upgradesError.Position = UDim2.fromScale(0.5, 0.105)
                    upgradesError.TextColor3 = Color3.fromRGB(255, 0, 0)
                    upgradesError.BackgroundTransparency = 1
                    upgradesError.TextScaled = true
                    upgradesError.Text = ""You cannot afford the Cursor upgrade! (Need "" .. (50 - data[""cookieAmount""]) .. "" more cookies)""
                    upgradesError.Parent = upgradesFrame
                    upgradeTextCreated = true

                    task.wait(5)

                    upgradesError:Destroy()
                    upgradeTextCreated = false
                end)
            end
        end
    else
        if data[""cookieAmount""] >= ((data[""upgrades""][""cursor""] * 50 * 1.2) * data[""rebirths""]) then
            data[""cookieAmount""] = data[""cookieAmount""] - ((data[""upgrades""][""cursor""] * 50 * 1.2) * data[""rebirths""])

            data[""upgrades""][""cursor""] = data[""upgrades""][""cursor""] + 1
            updateLabels()
        else
            if upgradeTextCreated == false then
                task.spawn(function()
                    local upgradesError = Lime.CreateUI(app, ""TextLabel"")
                    upgradesError.Size = UDim2.fromScale(0.8, 0.04)
                    upgradesError.AnchorPoint = Vector2.new(0.5, 0)
                    upgradesError.Position = UDim2.fromScale(0.5, 0.105)
                    upgradesError.TextColor3 = Color3.fromRGB(255, 0, 0)
                    upgradesError.BackgroundTransparency = 1
                    upgradesError.TextScaled = true
                    upgradesError.Text = ""You cannot afford the Cursor upgrade! (Need "" .. (((data[""upgrades""][""cursor""] * data[""rebirths""]) * 50 * 1.2) - data[""cookieAmount""]) .. "" more cookies)""
                    upgradesError.Parent = upgradesFrame
                    upgradeTextCreated = true

                    task.wait(5)

                    upgradesError:Destroy()
                    upgradeTextCreated = false
                end)
            end
        end
    end
end)

grandmaUpgrade.Activated:Connect(function()
    -- clickSound:Play()
    if data[""upgrades""][""grandma""] == 0 then
        if data[""cookieAmount""] >= 250 then
            data[""cookieAmount""] = data[""cookieAmount""] - 250
            data[""upgrades""][""grandma""] = data[""upgrades""][""grandma""] + 1
            updateLabels()
        else
            if upgradeTextCreated == false then
                task.spawn(function()
                    local upgradesError = Lime.CreateUI(app, ""TextLabel"")
                    upgradesError.Size = UDim2.fromScale(0.8, 0.04)
                    upgradesError.AnchorPoint = Vector2.new(0.5, 0)
                    upgradesError.Position = UDim2.fromScale(0.5, 0.105)
                    upgradesError.TextColor3 = Color3.fromRGB(255, 0, 0)
                    upgradesError.BackgroundTransparency = 1
                    upgradesError.TextScaled = true
                    upgradesError.Text = ""You cannot afford the Grandma upgrade! (Need "" .. (250 - data[""cookieAmount""]) .. "" more cookies)""
                    upgradesError.Parent = upgradesFrame
                    upgradeTextCreated = true

                    task.wait(5)

                    upgradesError:Destroy()
                    upgradeTextCreated = false
                end)
            end
        end
    else
        if data[""cookieAmount""] >= ((data[""upgrades""][""grandma""] * 250 * 1.5) * data[""rebirths""]) then
            data[""cookieAmount""] = data[""cookieAmount""] - ((data[""upgrades""][""grandma""] * 250 * 1.5) * data[""rebirths""])

            data[""upgrades""][""grandma""] = data[""upgrades""][""grandma""] + 1
            updateLabels()
        else
            if upgradeTextCreated == false then
                task.spawn(function()
                    local upgradesError = Lime.CreateUI(app, ""TextLabel"")
                    upgradesError.Size = UDim2.fromScale(0.8, 0.04)
                    upgradesError.AnchorPoint = Vector2.new(0.5, 0)
                    upgradesError.Position = UDim2.fromScale(0.5, 0.105)
                    upgradesError.TextColor3 = Color3.fromRGB(255, 0, 0)
                    upgradesError.BackgroundTransparency = 1
                    upgradesError.TextScaled = true
                    upgradesError.Text = ""You cannot afford the Grandma upgrade! (Need "" .. (((data[""upgrades""][""grandma""] * 250 * 1.5) * data[""rebirths""]) - data[""cookieAmount""]) .. "" more cookies)""
                    upgradesError.Parent = upgradesFrame
                    upgradeTextCreated = true

                    task.wait(5)

                    upgradesError:Destroy()
                    upgradeTextCreated = false
                end)
            end
        end
    end
end)

bakeryUpgrade.Activated:Connect(function()
    -- clickSound:Play()
    if data[""upgrades""][""bakery""] == 0 then
        if data[""cookieAmount""] >= 2000 then
            data[""cookieAmount""] = data[""cookieAmount""] - 2000
            data[""upgrades""][""bakery""] = data[""upgrades""][""bakery""] + 1
            updateLabels()
        else
            if upgradeTextCreated == false then
                task.spawn(function()
                    local upgradesError = Lime.CreateUI(app, ""TextLabel"")
                    upgradesError.Size = UDim2.fromScale(0.8, 0.04)
                    upgradesError.AnchorPoint = Vector2.new(0.5, 0)
                    upgradesError.Position = UDim2.fromScale(0.5, 0.105)
                    upgradesError.TextColor3 = Color3.fromRGB(255, 0, 0)
                    upgradesError.BackgroundTransparency = 1
                    upgradesError.TextScaled = true
                    upgradesError.Text = ""You cannot afford the Bakery upgrade! (Need "" .. (2000 - data[""cookieAmount""]) .. "" more cookies)""
                    upgradesError.Parent = upgradesFrame
                    upgradeTextCreated = true

                    task.wait(5)

                    upgradesError:Destroy()
                    upgradeTextCreated = false
                end)
            end
        end
    else
        if data[""cookieAmount""] >= ((data[""upgrades""][""bakery""] * 2000 * 1.5) * data[""rebirths""]) then
            data[""cookieAmount""] = data[""cookieAmount""] - ((data[""upgrades""][""bakery""] * 2000 * 1.5) * data[""rebirths""])

            data[""upgrades""][""bakery""] = data[""upgrades""][""bakery""] + 1
            updateLabels()
        else
            if upgradeTextCreated == false then
                task.spawn(function()
                    local upgradesError = Lime.CreateUI(app, ""TextLabel"")
                    upgradesError.Size = UDim2.fromScale(0.8, 0.04)
                    upgradesError.AnchorPoint = Vector2.new(0.5, 0)
                    upgradesError.Position = UDim2.fromScale(0.5, 0.105)
                    upgradesError.TextColor3 = Color3.fromRGB(255, 0, 0)
                    upgradesError.BackgroundTransparency = 1
                    upgradesError.TextScaled = true
                    upgradesError.Text = ""You cannot afford the Bakery upgrade! (Need "" .. (((data[""upgrades""][""bakery""] * 2000 * 1.5) * data[""rebirths""]) - data[""cookieAmount""]) .. "" more cookies)""
                    upgradesError.Parent = upgradesFrame
                    upgradeTextCreated = true

                    task.wait(5)

                    upgradesError:Destroy()
                    upgradeTextCreated = false
                end)
            end
        end
    end
end)

button.Activated:Connect(function()
    data[""cookieAmount""] = data[""cookieAmount""] + data[""incrementAmount""]
    cookies.Text = ""Cookies: "" .. data[""cookieAmount""]
end)

button.MouseButton1Down:Connect(function()
    button.Position = UDim2.fromScale(0.5, 0.475)
end)

button.MouseButton1Up:Connect(function()
    button.Position = UDim2.fromScale(0.5, 0.45)
end)

rebirthButton.Activated:Connect(function()
    if not confirmWindowCreated then
        if data[""cookieAmount""] >= (10000 * data[""rebirths""] * 1.75) then

            local rebirthWindow = Lime.CreateWindow(""Confirm Rebirth - Cookie Clicker "" .. gameVersion)

            confirmWindowCreated = true

            local textlabel = Lime.CreateUI(rebirthWindow, ""TextLabel"")
            textlabel.Size = UDim2.fromScale(0.6, 0.2)
            textlabel.AnchorPoint = Vector2.new(0.5, 0)
            textlabel.Position = UDim2.fromScale(0.5, 0.1)
            textlabel.TextScaled = true
            textlabel.BackgroundTransparency = 1
            textlabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            textlabel.Text = ""This will reset your progress but give you an additional multiplier, are you sure you would like to continue?""
            textlabel.Parent = rebirthWindow

            local rebirthfakebutton = Lime.CreateUI(app, ""TextLabel"")
            -- fake button goes under the real clickable button
            rebirthfakebutton.Size = UDim2.fromScale(0.7, 0.4)
            rebirthfakebutton.AnchorPoint = Vector2.new(0.5, 0)
            rebirthfakebutton.Position = UDim2.fromScale(0.5, 0.475)
            rebirthfakebutton.Text = """"
            rebirthfakebutton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            rebirthfakebutton.Parent = rebirthWindow

            local rebirthfakebuttonCorner = Lime.CreateUI(app, ""UICorner"")
            rebirthfakebuttonCorner.CornerRadius = UDim.new(0.1, 0)
            rebirthfakebuttonCorner.Parent = rebirthfakebutton

            local rebirthConfirm = Lime.CreateUI(app, ""TextButton"")
            rebirthConfirm.Size = UDim2.fromScale(0.7, 0.4)
            rebirthConfirm.AnchorPoint = Vector2.new(0.5, 0)
            rebirthConfirm.Position = UDim2.fromScale(0.5, 0.45)
            rebirthConfirm.TextScaled = true
            rebirthConfirm.TextColor3 = Color3.fromRGB(255, 255, 255)
            rebirthConfirm.AutoButtonColor = false
            rebirthConfirm.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
            rebirthConfirm.Text = ""Confirm Rebirth""
            rebirthConfirm.Parent = rebirthWindow

            local rebirthbuttonCorner = Lime.CreateUI(app, ""UICorner"")
            rebirthbuttonCorner.CornerRadius = UDim.new(0.1, 0)
            rebirthbuttonCorner.Parent = rebirthConfirm

            rebirthConfirm.MouseButton1Down:Connect(function()
                rebirthConfirm.Position = UDim2.fromScale(0.5, 0.475)
            end)

            rebirthConfirm.MouseButton1Up:Connect(function()
                rebirthConfirm.Position = UDim2.fromScale(0.5, 0.45)
            end)

            rebirthConfirm.Activated:Connect(function()
                data[""cookieAmount""] = 0
                data[""rebirths""] = data[""rebirths""] + 1
                data[""incrementAmount""] = data[""rebirths""]
                data[""upgrades""] = {
                    [""cursor""] = 0,
                    [""grandma""] = 0,
                    [""bakery""] = 0
                }

                loadlib(""ApplicationHandler"").ExitProcess(rebirthWindow.Value.Value)
                confirmWindowCreated = false
                updateLabels()
            end)
        else
            if rebirthTextCreated == false then
                rebirthTextCreated = true

                task.spawn(function()
                    local rebirthError = Lime.CreateUI(app, ""TextLabel"")
                    rebirthError.Size = UDim2.fromScale(0.8, 0.04)
                    rebirthError.AnchorPoint = Vector2.new(0.5, 0)
                    rebirthError.Position = UDim2.fromScale(0.5, 2.135)
                    rebirthError.TextColor3 = Color3.fromRGB(255, 0, 0)
                    rebirthError.BackgroundTransparency = 1
                    rebirthError.TextScaled = true
                    rebirthError.Text = ""You cannot afford to rebirth! (Need "" .. tostring((10000 * data[""rebirths""] * 1.75) - data[""cookieAmount""]) .. "" more cookies)""
                    rebirthError.Parent = scrollFrame

                    task.wait(5)

                    rebirthError:Destroy()
                    rebirthTextCreated = false
                end)
            end
        end
    end
end)

rebirthButton.MouseButton1Down:Connect(function()
    rebirthButton.Position = UDim2.fromScale(0.5, 2.2)
end)

rebirthButton.MouseButton1Up:Connect(function()
    rebirthButton.Position = UDim2.fromScale(0.5, 2.175)
end)

while task.wait(1) do
    -- print(http.JSONEncode(data))

    data[""cookieAmount""] = data[""cookieAmount""] + ((data[""upgrades""][""cursor""] + (data[""upgrades""][""grandma""] * 5) + (data[""upgrades""][""bakery""] * 50)) * data[""rebirths""])

    updateLabels()

    local jsonData = http.JSONEncode(data)
    fs.WriteFile(fs.GetDriveLetter() .. "":/System/AppData/CookieClicker.txt"", jsonData, ""System"", true)
    -- print(fs.GetFile(""fs.GetDriveLetter() .. :/System/AppData/CookieClicker.txt"").Data)
end
"
V2xnE8dS,Admin Panel Solara Support (I made it so be nice :) ),WeExploitersBoys,Lua,Thursday 20th of June 2024 01:17:05 AM CDT,"-- Gui to Lua
-- Version: 3.2

-- Instances:
local ScreenGui = Instance.new(""ScreenGui"")
local Frame = Instance.new(""Frame"")
local TextLabel = Instance.new(""TextLabel"")
local Fly = Instance.new(""TextButton"")
local Close = Instance.new(""TextButton"")
local GodMode = Instance.new(""TextButton"")
local Walkspeed = Instance.new(""TextBox"")
local JumpPower = Instance.new(""TextBox"")
local MakeWalkspeed = Instance.new(""TextButton"")
local MakeJumpPower = Instance.new(""TextButton"")
local Credits = Instance.new(""TextButton"")
local PanelButton1 = Instance.new(""TextButton"")
local Credits2 = Instance.new(""Frame"")
local TextLabel_2 = Instance.new(""TextLabel"")
local Close_2 = Instance.new(""TextButton"")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.205633804, 0, 0.181528658, 0)
Frame.Size = UDim2.new(0, 558, 0, 400)

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 0.900
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 558, 0, 50)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = ""M@E's admin panel""
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextSize = 14.000

Fly.Name = ""Fly""
Fly.Parent = Frame
Fly.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Fly.BackgroundTransparency = 0.800
Fly.BorderColor3 = Color3.fromRGB(0, 0, 0)
Fly.BorderSizePixel = 0
Fly.Position = UDim2.new(0.107526883, 0, 0.267500013, 0)
Fly.Size = UDim2.new(0, 200, 0, 50)
Fly.Font = Enum.Font.SourceSans
Fly.Text = ""Fly (X to toggle)""
Fly.TextColor3 = Color3.fromRGB(0, 0, 0)
Fly.TextSize = 14.000

Close.Name = ""Close""
Close.Parent = Frame
Close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0.894265234, 0, 0, 0)
Close.Size = UDim2.new(0, 58, 0, 50)
Close.Font = Enum.Font.SourceSans
Close.Text = ""X""
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 31.000

GodMode.Name = ""GodMode""
GodMode.Parent = Frame
GodMode.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GodMode.BackgroundTransparency = 0.800
GodMode.BorderColor3 = Color3.fromRGB(0, 0, 0)
GodMode.BorderSizePixel = 0
GodMode.Position = UDim2.new(0.535842299, 0, 0.267500013, 0)
GodMode.Size = UDim2.new(0, 200, 0, 50)
GodMode.Font = Enum.Font.SourceSans
GodMode.Text = ""GodMode""
GodMode.TextColor3 = Color3.fromRGB(0, 0, 0)
GodMode.TextSize = 14.000

Walkspeed.Name = ""Walkspeed""
Walkspeed.Parent = Frame
Walkspeed.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Walkspeed.BackgroundTransparency = 0.800
Walkspeed.BorderColor3 = Color3.fromRGB(0, 0, 0)
Walkspeed.BorderSizePixel = 0
Walkspeed.Position = UDim2.new(0.107526883, 0, 0.522499979, 0)
Walkspeed.Size = UDim2.new(0, 200, 0, 50)
Walkspeed.Font = Enum.Font.SourceSans
Walkspeed.Text = ""Enter WalkSpeed Here""
Walkspeed.TextColor3 = Color3.fromRGB(0, 0, 0)
Walkspeed.TextSize = 14.000
Walkspeed.TextTransparency = 0.500

JumpPower.Name = ""JumpPower""
JumpPower.Parent = Frame
JumpPower.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
JumpPower.BackgroundTransparency = 0.800
JumpPower.BorderColor3 = Color3.fromRGB(0, 0, 0)
JumpPower.BorderSizePixel = 0
JumpPower.Position = UDim2.new(0.535842299, 0, 0.522499979, 0)
JumpPower.Size = UDim2.new(0, 200, 0, 50)
JumpPower.Font = Enum.Font.SourceSans
JumpPower.Text = ""Enter JumpPower Here""
JumpPower.TextColor3 = Color3.fromRGB(0, 0, 0)
JumpPower.TextSize = 14.000
JumpPower.TextTransparency = 0.500

MakeWalkspeed.Name = ""MakeWalkspeed""
MakeWalkspeed.Parent = Frame
MakeWalkspeed.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MakeWalkspeed.BackgroundTransparency = 0.800
MakeWalkspeed.BorderColor3 = Color3.fromRGB(0, 0, 0)
MakeWalkspeed.BorderSizePixel = 0
MakeWalkspeed.Position = UDim2.new(0.161290318, 0, 0.692499995, 0)
MakeWalkspeed.Size = UDim2.new(0, 140, 0, 31)
MakeWalkspeed.Font = Enum.Font.SourceSans
MakeWalkspeed.Text = ""Make Walkspeed""
MakeWalkspeed.TextColor3 = Color3.fromRGB(0, 0, 0)
MakeWalkspeed.TextSize = 14.000

MakeJumpPower.Name = ""MakeJumpPower""
MakeJumpPower.Parent = Frame
MakeJumpPower.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MakeJumpPower.BackgroundTransparency = 0.800
MakeJumpPower.BorderColor3 = Color3.fromRGB(0, 0, 0)
MakeJumpPower.BorderSizePixel = 0
MakeJumpPower.Position = UDim2.new(0.589605749, 0, 0.692499995, 0)
MakeJumpPower.Size = UDim2.new(0, 140, 0, 31)
MakeJumpPower.Font = Enum.Font.SourceSans
MakeJumpPower.Text = ""Make JumpPower""
MakeJumpPower.TextColor3 = Color3.fromRGB(0, 0, 0)
MakeJumpPower.TextSize = 14.000

Credits.Name = ""Credits""
Credits.Parent = Frame
Credits.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Credits.BackgroundTransparency = 0.800
Credits.BorderColor3 = Color3.fromRGB(0, 0, 0)
Credits.BorderSizePixel = 0
Credits.Position = UDim2.new(0.320788532, 0, 0.852500021, 0)
Credits.Size = UDim2.new(0, 200, 0, 50)
Credits.Font = Enum.Font.SourceSans
Credits.Text = ""Credits""
Credits.TextColor3 = Color3.fromRGB(0, 0, 0)
Credits.TextSize = 14.000

PanelButton1.Name = ""PanelButton1""
PanelButton1.Parent = ScreenGui
PanelButton1.BackgroundColor3 = Color3.fromRGB(255, 0, 4)
PanelButton1.BorderColor3 = Color3.fromRGB(0, 0, 0)
PanelButton1.BorderSizePixel = 0
PanelButton1.Position = UDim2.new(0.0112676052, 0, 0.482484072, 0)
PanelButton1.Size = UDim2.new(0, 147, 0, 50)
PanelButton1.Visible = false
PanelButton1.Font = Enum.Font.SourceSans
PanelButton1.Text = ""Panel""
PanelButton1.TextColor3 = Color3.fromRGB(0, 0, 0)
PanelButton1.TextSize = 14.000

Credits2.Name = ""Credits2""
Credits2.Parent = ScreenGui
Credits2.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Credits2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Credits2.BorderSizePixel = 0
Credits2.Position = UDim2.new(0.780281663, 0, 0.181528658, 0)
Credits2.Size = UDim2.new(0, 180, 0, 170)

TextLabel_2.Parent = Credits2
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 0.800
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Size = UDim2.new(0, 180, 0, 170)
TextLabel_2.Font = Enum.Font.SourceSans
TextLabel_2.Text = ""Made By Manny And Easton!""
TextLabel_2.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.TextSize = 30.000
TextLabel_2.TextWrapped = true

Close_2.Name = ""Close""
Close_2.Parent = Credits2
Close_2.BackgroundColor3 = Color3.fromRGB(255, 0, 4)
Close_2.BackgroundTransparency = 1.000
Close_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close_2.BorderSizePixel = 0
Close_2.Position = UDim2.new(0.783154309, 0, 0, 0)
Close_2.Size = UDim2.new(0, 39, 0, 36)
Close_2.Font = Enum.Font.SourceSans
Close_2.Text = ""X""
Close_2.TextColor3 = Color3.fromRGB(0, 0, 0)
Close_2.TextSize = 31.000

-- Scripts:

local function COYQMQ_fake_script() -- Fly.LocalScript 
	local script = Instance.new('LocalScript', Fly)

	local FlyButton = script.Parent
	
	FlyButton.MouseButton1Click:Connect(function()
		-- Press X to fly
	
		local plr = game.Players.LocalPlayer
		local mouse = plr:GetMouse()
	
		local player = plr
	
		if workspace:FindFirstChild(""Core"") then
			workspace.Core:Destroy()
		end
	
		local Core = Instance.new(""Part"")
		Core.Name = ""Core""
		Core.Size = Vector3.new(0.05, 0.05, 0.05)
	
		spawn(function()
			Core.Parent = workspace
			local Weld = Instance.new(""Weld"", Core)
			Weld.Part0 = Core
			Weld.Part1 = player.Character.LowerTorso
			Weld.C0 = CFrame.new(0, 0, 0)
		end)
	
		workspace:WaitForChild(""Core"")
	
		local torso = workspace.Core
		flying = true
		local speed=10
		local keys={a=false,d=false,w=false,s=false}
		local e1
		local e2
		local function start()
			local pos = Instance.new(""BodyPosition"",torso)
			local gyro = Instance.new(""BodyGyro"",torso)
			pos.Name=""EPIXPOS""
			pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
			pos.position = torso.Position
			gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			gyro.cframe = torso.CFrame
			repeat
				wait()
				player.Character.Humanoid.PlatformStand=true
				local new=gyro.cframe - gyro.cframe.p + pos.position
				if not keys.w and not keys.s and not keys.a and not keys.d then
					speed=5
				end
				if keys.w then
					new = new + workspace.CurrentCamera.CoordinateFrame.lookVector * speed
					speed=speed+0
				end
				if keys.s then
					new = new - workspace.CurrentCamera.CoordinateFrame.lookVector * speed
					speed=speed+0
				end
				if keys.d then
					new = new * CFrame.new(speed,0,0)
					speed=speed+0
				end
				if keys.a then
					new = new * CFrame.new(-speed,0,0)
					speed=speed+0
				end
				if speed>10 then
					speed=5
				end
				pos.position=new.p
				if keys.w then
					gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(-math.rad(speed*0),0,0)
				elseif keys.s then
					gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(math.rad(speed*0),0,0)
				else
					gyro.cframe = workspace.CurrentCamera.CoordinateFrame
				end
			until flying == false
			if gyro then gyro:Destroy() end
			if pos then pos:Destroy() end
			flying=false
			player.Character.Humanoid.PlatformStand=false
			speed=10
		end
		e1=mouse.KeyDown:connect(function(key)
			if not torso or not torso.Parent then flying=false e1:disconnect() e2:disconnect() return end
			if key==""w"" then
				keys.w=true
			elseif key==""s"" then
				keys.s=true
			elseif key==""a"" then
				keys.a=true
			elseif key==""d"" then
				keys.d=true
			elseif key==""x"" then
				if flying==true then
					flying=false
				else
					flying=true
					start()
				end
			end
		end)
		e2=mouse.KeyUp:connect(function(key)
			if key==""w"" then
				keys.w=false
			elseif key==""s"" then
				keys.s=false
			elseif key==""a"" then
				keys.a=false
			elseif key==""d"" then
				keys.d=false
			end
		end)
		start()
	end)
	
	FlyButton.MouseButton1Click:Connect(function()
		
		local starterGui = game:GetService(""StarterGui"")
		
		wait(0.2)
		starterGui:SetCore(""SendNotification"", {
			Title = ""Fly"",
			Text = ""Fly Executed!"",
			Icon = ""rbxassetid://6864978825"",
			Duration = 3
		})
	end)
end
coroutine.wrap(COYQMQ_fake_script)()
local function BDECQZI_fake_script() -- Close.LocalScript 
	local script = Instance.new('LocalScript', Close)

	local Frame = script.Parent.Parent
	local CloseButton = script.Parent
	local Panel1 = script.Parent.Parent.Parent.PanelButton1
	
	CloseButton.MouseButton1Click:Connect(function()
		Frame.Visible = false
		if Frame.Visible == false then
			Panel1.Visible = true
		end
	end)
end
coroutine.wrap(BDECQZI_fake_script)()
local function XQCA_fake_script() -- Frame.LocalScript 
	local script = Instance.new('LocalScript', Frame)

	local Frame = script.Parent
	
	Frame.Active = true
	Frame.Selectable = true
	Frame.Draggable = true
end
coroutine.wrap(XQCA_fake_script)()
local function EEKMI_fake_script() -- GodMode.LocalScript 
	local script = Instance.new('LocalScript', GodMode)

	local Godmode = script.Parent
	
	Godmode.MouseButton1Click:Connect(function()
		game.Players.LocalPlayer.Character.Humanoid.Health = 1000000000
	end)
	
	Godmode.MouseButton1Click:Connect(function()
	local starterGui = game:GetService(""StarterGui"")
	
	wait(0.2)
	starterGui:SetCore(""SendNotification"", {
		Title = ""GodMode"",
		Text = ""GodMode Executed"",
		Icon = ""rbxassetid://6864978825"",
		Duration = 3
	})
	end)
end
coroutine.wrap(EEKMI_fake_script)()
local function WNEQNW_fake_script() -- MakeWalkspeed.LocalScript 
	local script = Instance.new('LocalScript', MakeWalkspeed)

	local Humanoid = game.Players.LocalPlayer.Character.Humanoid
	local Walksped = script.Parent.Parent.Walkspeed
	local Button = script.Parent
	
	Button.MouseButton1Click:Connect(function()
		Humanoid.WalkSpeed = Walksped.Text
	end)
	
	Button.MouseButton1Click:Connect(function()
		local starterGui = game:GetService(""StarterGui"")
	
		wait(1)
		starterGui:SetCore(""SendNotification"", {
			Title = ""WalkSpeed"",
			Text = ""WalkSpeed Changed Successfully"",
			Icon = ""rbxassetid://6864978825"",
			Duration = 5
		})
	end)
end
coroutine.wrap(WNEQNW_fake_script)()
local function KWJR_fake_script() -- MakeJumpPower.LocalScript 
	local script = Instance.new('LocalScript', MakeJumpPower)

	local Humanoid = game.Players.LocalPlayer.Character.Humanoid
	local JumpPowr = script.Parent.Parent.JumpPower
	local Button = script.Parent
	
	Button.MouseButton1Click:Connect(function()
		Humanoid.JumpPower = JumpPowr.Text
	end)
	
	
	Button.MouseButton1Click:Connect(function()
	local starterGui = game:GetService(""StarterGui"")
	
	wait(1)
	starterGui:SetCore(""SendNotification"", {
		Title = ""JumpPower"",
		Text = ""JumpPower Changed Successfully"",
		Icon = ""rbxassetid://6864978825"",
		Duration = 5
	})
	end)
end
coroutine.wrap(KWJR_fake_script)()
local function KFGRTVK_fake_script() -- Credits.LocalScript 
	local script = Instance.new('LocalScript', Credits)

	local Button2 = script.Parent
	local Frame = script.Parent.Parent.Parent.Credits2
	
	Button2.MouseButton1Click:Connect(function()
		Frame.Visible = true
	end)
end
coroutine.wrap(KFGRTVK_fake_script)()
local function QHXNUU_fake_script() -- PanelButton1.LocalScript 
	local script = Instance.new('LocalScript', PanelButton1)

	local Frame = script.Parent.Parent.Frame
	local Panel1 = script.Parent
	
	Panel1.MouseButton1Click:Connect(function()
		if Frame.Visible == false then
			Frame.Visible = true
			Panel1.Visible = false
		end
	end)
end
coroutine.wrap(QHXNUU_fake_script)()
local function JWIK_fake_script() -- Close_2.LocalScript 
	local script = Instance.new('LocalScript', Close_2)

	local CloseButton = script.Parent
	local Credits2 = script.Parent.Parent
	
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Active = true
	script.Parent.Parent.Selectable = true
	script.Parent.Parent.Draggable = true
	
	CloseButton.MouseButton1Click:Connect(function()
		Credits2.Visible = false
	end)
end
coroutine.wrap(JWIK_fake_script)()
"
