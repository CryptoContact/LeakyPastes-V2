id,title,username,language,date,content
RqEkdwAZ,G2A.com Free Gift Card Guide Mar 2024,ounnuo,GetText,Wednesday 6th of March 2024 06:04:11 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_621083.pdf

Working as of:
07 March 2024"
W0qt1NLQ,ServerError: received 500 HTTP response,Vault-TecTradingCo,Python,Wednesday 6th of March 2024 05:58:14 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 57, in wrapper
    job_func(*args, **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 91, in comment_listener
    database_manager.load_comment(comment, db_conn)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/database_manager.py"", line 163, in load_comment
    process_command_non_mod_user(comment, db_conn)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/database_manager.py"", line 149, in process_command_non_mod_user
    conversation_checks.checks_for_close_command(comment)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/conversation_checks.py"", line 25, in checks_for_close_command
    if comment.author == comment.submission.author:
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/reddit/base.py"", line 35, in __getattr__
    self._fetch()
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/reddit/submission.py"", line 712, in _fetch
    data = self._fetch_data()
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/reddit/submission.py"", line 731, in _fetch_data
    return self._reddit.request(method=""GET"", params=params, path=path)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 266, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.ServerError: received 500 HTTP response
"
vMVD1gVq,Untitled,iconoclasthero,Bash,Wednesday 6th of March 2024 05:23:15 PM CDT,"prompt(){
read -p ""$1 "" choice
case ""$choice"" in
  y|Y ) return 0;;
  * ) return 1;;
#  n|N ) return 1;;
#  * ) echo ""invalid"";;
esac
}

if prompt ""Add guake PPA and install?""
  then
    sudo add-apt-repository ppa:linuxuprising/guake
     sudo apt install guake
elif [[ $(command -v guake) ]]
  then
    printf ""\n\n\n""
    [[ $(prompt ""Guake is installed.  Do you want to bail out now and start again from guake?"") ]] && exit
elif prompt ""apt install curl git gh python3-gi python3-pip ncdu exa screen reptyr htop lm-sensors fanco...""
  then
     sudo apt install curl git gh python3-gi python3-pip exa ncdu screen reptyr htop lm-sensors fancontol
fi

"
gHZr7fv5,Untitled,MCorange,Lua,Wednesday 6th of March 2024 04:57:12 PM CDT,"local MSG_PING     = '1';
local MSG_PONG     = '2';
local MSG_PULLFILE = '3';
local MSG_NOCHANGE = '4';
local MSG_SENDING  = '5';
 
local ws_url = ""ws://nya-1.mcorangehq.xyz:3000"";
 
local ws = assert(http.websocket(ws_url));
print(""connected"")
 
ws.send(MSG_PULLFILE)
repeat
	sleep(1)
    local msg = ws.receive()
    if string.sub(msg, 1, 1) == MSG_PING then
        ws.send(MSG_PONG)
    elseif string.sub(msg, 1, 1) == MSG_PONG then 
		-- ping
    elseif string.sub(msg, 1, 1) == MSG_NOCHANGE then 
        ws.send(MSG_PULLFILE)
    elseif string.sub(msg, 1, 1) == MSG_SENDING then
        local cmd = loadstring string.sub(msg, 2)
        print(""------ got program"")
        cmd()
        ws.send(MSG_PULLFILE)
    end
 
until false;"
fTXiuSSR,ServerError: received 500 HTTP response,Vault-TecTradingCo,Python,Wednesday 6th of March 2024 04:52:09 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 57, in wrapper
    job_func(*args, **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 85, in comment_listener
    for comment in fallout76marketplace.stream.comments(skip_existing=True):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/util.py"", line 138, in stream_generator
    for item in reversed(list(function(limit=limit, **function_kwargs))):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 63, in __next__
    self._next_batch()
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 712, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 517, in _objectify_request
    self.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 266, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.ServerError: received 500 HTTP response
"
EwB5jrca,ServerError: received 500 HTTP response,basedcount_bot,Python,Wednesday 6th of March 2024 04:51:55 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 45, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 262, in read_comments
    async for comment in pcm_subreddit.stream.comments(skip_existing=True):  # Comment
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/util.py"", line 160, in stream_generator
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/util.py"", line 160, in <listcomp>
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 34, in __anext__
    await self._next_batch()
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 785, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 567, in _objectify_request
    await self.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 1032, in request
    return await self._core.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 370, in request
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 289, in _request_with_retries
    return await self._do_retry(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 166, in _do_retry
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 289, in _request_with_retries
    return await self._do_retry(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 166, in _do_retry
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 307, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status](response)
asyncprawcore.exceptions.ServerError: received 500 HTTP response
"
JeV0M6HR,ServerError: received 500 HTTP response,Vault-TecTradingCo,Python,Wednesday 6th of March 2024 04:51:32 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/main.py"", line 258, in main
    for comment in comment_stream:
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/util.py"", line 138, in stream_generator
    for item in reversed(list(function(limit=limit, **function_kwargs))):
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 63, in __next__
    self._next_batch()
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 712, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 517, in _objectify_request
    self.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 325, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 251, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 161, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 251, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 161, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 264, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.ServerError: received 500 HTTP response
"
4AwxfEUL,Untitled,Martin_Toseski,C++,Wednesday 6th of March 2024 04:51:12 PM CDT,"//Petta Zadaca
// mojot kod za 40/120
#include <bits/stdc++.h>
 
using namespace std;
 
bool bonboni_Ddenovi(long long N, long long arr[], long long P, long long D, long long K) {
    long long reset[N];
    memset(reset, 0, sizeof(reset));
 
    long long bonboni = 0, temp = -1;
    for (int i=0; i < D; i++) {
        for (int j=0; j < N; j++) {
            if (reset[j] == 0) {
                bonboni += arr[j];
                reset[j] = K;
                temp = j;
                break;
            }
        }
 
        if (bonboni >= P)
            return true;
 
        for (int j=0; j < N && j != temp; j++) {
            reset[j]--;
        }
    }
 
    return false;
}
 
int main()
{
    long long N, P, D;
    cin >> N >> P >> D;
 
    long long arr[N];
    for (int i=0; i < N; i++)
        cin >> arr[i];
    sort(arr, arr+N);
    reverse(arr, arr+N);
 
    long long l=1, r=100000;
    while (l+1 < r) {
        long long k = (l+r)/2;
        if (bonboni_Ddenovi(N, arr, P, D, k)) {
            l = k;
        }
        else {
            r = k-1;
        }
        if (l == r-1) {
            if (bonboni_Ddenovi(N, arr, P, D, l+1))
                l++;
        }
    }
 
    if (bonboni_Ddenovi(N, arr, P, D, l) && bonboni_Ddenovi(N, arr, P, D, l+1))
        cout << ""seedno"";
    else if (!bonboni_Ddenovi(N, arr, P, D, l))
        cout << -1;
    else
        cout << l;
 
    return 0;
}







// na marko 
#include <bits/stdc++.h>
 
using namespace std;
 
int main()
{
    long long n, p, d, x;
    cin>>n>>p>>d;
    vector<long long> v;
    for(long long i=0; i<n; i++)
    {
        cin>>x;
        v.push_back(x);
    }
    while(v.size()<d)
    {
        n=d;
        v.push_back(0);
    }
 
    sort(v.begin(), v.end());
 
    if(d*v[n-1]<p)
        cout<<-1;
    else
    {
        long long sum=0, j=0;
        for(long long i=n-1; j<d; i--)
        {
            sum+=v[i];
            j++;
        }
        //cout<<sum<<endl<<endl;
        if(sum>=p)
            cout<<""seedno"";
        else
        {
            long long z;
            for(long long k=d-1; k>0; k--)
            {
                sum-=v[n-k-1];
                z=sum*(d/k);
                j=0;
                for(long long i=n-1; j<d%k; i--)
                {
                    z+=v[i];
                    j++;
                }
                //cout<<z<<endl;
                if(z>=p)
                {
                    cout<<k-1;
                    return 0;
                }
            }
        }
    }
 
    return 0;
}"
q40HwtYK,Untitled,Martin_Toseski,C++,Wednesday 6th of March 2024 04:48:58 PM CDT,"//Cetvrta Zadaca
#include <bits/stdc++.h>
  
using namespace std;
  
int main()
{
    int N, Q, a;
    cin >> N >> Q;
  
    int highest[51];
    memset(highest, -1, sizeof(highest));
  
    for (int i=0; i < N; i++) {
        cin >> a;
        if (highest[a] == -1) highest[a] = i+1;
    }
  
//    for (int i=0; i < N; i++) {
//        cout << highest[i] << "" "";
//    }
//    cout << endl;
  
    for (int i=0; i < Q; i++) {
        cin >> a;
        cout << highest[a] << "" "";
  
        for (int i=1; i <= 50; i++) {
            if (highest[i] < highest[a])
                highest[i]++;
        }
  
        highest[a] = 1;
  
//        for (int i=0; i < N; i++) {
//            cout << highest[i] << "" "";
//        }
//        cout << endl;
    }
  
    return 0;
}"
CNSYS3U3,Untitled,Martin_Toseski,C++,Wednesday 6th of March 2024 04:47:58 PM CDT,"//Treta Zadaca
#include <bits/stdc++.h>
 
using namespace std;
 
int ciklus[8] = {37, 58, 89, 145, 42, 20, 4, 16};
 
int sumSq(int n)
{
    int cN = n, res = 0;
    while (cN > 0)
    {
        res += pow(cN % 10, 2);
        cN /= 10;
    }
    return res;
}
 
int main()
{
    int n, k;
    cin >> n >> k;
 
    int lN = n;
    for (int i = 0; i <= k; i++)
    {
        if (lN == 0)
        {
            cout << 0;
            break;
        }
        else if (lN == 1)
        {
            cout << 1;
            break;
        }
        else if (lN == 37)
        {
            int dist = k - i;
            cout << ciklus[dist % 8];
            break;
        }
 
        if (i + 1 > k)
        {
            cout << lN;
            break;
        }
 
        lN = sumSq(lN);
    }
 
    return 0;
}"
dK74xqSX,Lua-UUID-Library,DaddyTigerOf3,Lua,Wednesday 6th of March 2024 04:13:59 PM CDT,"---------------------------------------------------------------------------------------
-- Copyright 2012 Rackspace (original), 2013-2021 Thijs Schreijer (modifications)
--
-- Licensed under the Apache License, Version 2.0 (the ""License"");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an ""AS-IS"" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--
-- see http://www.ietf.org/rfc/rfc4122.txt
--
-- Note that this is not a true version 4 (random) UUID.  Since `os.time()` precision is only 1 second, it would be hard
-- to guarantee spacial uniqueness when two hosts generate a uuid after being seeded during the same second.  This
-- is solved by using the node field from a version 1 UUID.  It represents the mac address.
--
-- 28-apr-2013 modified by Thijs Schreijer from the original [Rackspace code](https://github.com/kans/zirgo/blob/807250b1af6725bad4776c931c89a784c1e34db2/util/uuid.lua) as a generic Lua module.
-- Regarding the above mention on `os.time()`; the modifications use the `socket.gettime()` function from LuaSocket
-- if available and hence reduce that problem (provided LuaSocket has been loaded before uuid).
--
-- **Important:** the random seed is a global piece of data. Hence setting it is
-- an application level responsibility, libraries should never set it!
--
-- See this issue; [https://github.com/Kong/kong/issues/478](https://github.com/Kong/kong/issues/478)
-- It demonstrates the problem of using time as a random seed. Specifically when used from multiple processes.
-- So make sure to seed only once, application wide. And to not have multiple processes do that
-- simultaneously.


local M = {}
local math = require('math')
local os = require('os')
local string = require('string')

local bitsize = 32  -- bitsize assumed for Lua VM. See randomseed function below.
local lua_version = tonumber(_VERSION:match(""%d%.*%d*""))  -- grab Lua version used

local MATRIX_AND = {{0,0},{0,1} }
local MATRIX_OR = {{0,1},{1,1}}
local HEXES = '0123456789abcdef'

local math_floor = math.floor
local math_random = math.random
local math_abs = math.abs
local string_sub = string.sub
local to_number = tonumber
local assert = assert
local type = type

-- performs the bitwise operation specified by truth matrix on two numbers.
local function BITWISE(x, y, matrix)
  local z = 0
  local pow = 1
  while x > 0 or y > 0 do
    z = z + (matrix[x%2+1][y%2+1] * pow)
    pow = pow * 2
    x = math_floor(x/2)
    y = math_floor(y/2)
  end
  return z
end

local function INT2HEX(x)
  local s,base = '',16
  local d
  while x > 0 do
    d = x % base + 1
    x = math_floor(x/base)
    s = string_sub(HEXES, d, d)..s
  end
  while #s < 2 do s = ""0"" .. s end
  return s
end

----------------------------------------------------------------------------
-- Creates a new uuid. Either provide a unique hex string, or make sure the
-- random seed is properly set. The module table itself is a shortcut to this
-- function, so `my_uuid = uuid.new()` equals `my_uuid = uuid()`.
--
-- For proper use there are 3 options;
--
-- 1. first require `luasocket`, then call `uuid.seed()`, and request a uuid using no
-- parameter, eg. `my_uuid = uuid()`
-- 2. use `uuid` without `luasocket`, set a random seed using `uuid.randomseed(some_good_seed)`,
-- and request a uuid using no parameter, eg. `my_uuid = uuid()`
-- 3. use `uuid` without `luasocket`, and request a uuid using an unique hex string,
-- eg. `my_uuid = uuid(my_networkcard_macaddress)`
--
-- @return a properly formatted uuid string
-- @param hwaddr (optional) string containing a unique hex value (e.g.: `00:0c:29:69:41:c6`), to be used to compensate for the lesser `math_random()` function. Use a mac address for solid results. If omitted, a fully randomized uuid will be generated, but then you must ensure that the random seed is set properly!
-- @usage
-- local uuid = require(""uuid"")
-- print(""here's a new uuid: "",uuid())
function M.new(hwaddr)
  -- bytes are treated as 8bit unsigned bytes.
  local bytes = {
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255)
    }

  if hwaddr then
    assert(type(hwaddr)==""string"", ""Expected hex string, got ""..type(hwaddr))
    -- Cleanup provided string, assume mac address, so start from back and cleanup until we've got 12 characters
    local i,str = #hwaddr, hwaddr
    hwaddr = """"
    while i>0 and #hwaddr<12 do
      local c = str:sub(i,i):lower()
      if HEXES:find(c, 1, true) then
        -- valid HEX character, so append it
        hwaddr = c..hwaddr
      end
      i = i - 1
    end
    assert(#hwaddr == 12, ""Provided string did not contain at least 12 hex characters, retrieved '""..hwaddr..""' from '""..str..""'"")

    -- no split() in lua. :(
    bytes[11] = to_number(hwaddr:sub(1, 2), 16)
    bytes[12] = to_number(hwaddr:sub(3, 4), 16)
    bytes[13] = to_number(hwaddr:sub(5, 6), 16)
    bytes[14] = to_number(hwaddr:sub(7, 8), 16)
    bytes[15] = to_number(hwaddr:sub(9, 10), 16)
    bytes[16] = to_number(hwaddr:sub(11, 12), 16)
  end

  -- set the version
  bytes[7] = BITWISE(bytes[7], 0x0f, MATRIX_AND)
  bytes[7] = BITWISE(bytes[7], 0x40, MATRIX_OR)
  -- set the variant
  bytes[9] = BITWISE(bytes[9], 0x3f, MATRIX_AND)
  bytes[9] = BITWISE(bytes[9], 0x80, MATRIX_OR)
  return INT2HEX(bytes[1])..INT2HEX(bytes[2])..INT2HEX(bytes[3])..INT2HEX(bytes[4])..""-""..
         INT2HEX(bytes[5])..INT2HEX(bytes[6])..""-""..
         INT2HEX(bytes[7])..INT2HEX(bytes[8])..""-""..
         INT2HEX(bytes[9])..INT2HEX(bytes[10])..""-""..
         INT2HEX(bytes[11])..INT2HEX(bytes[12])..INT2HEX(bytes[13])..INT2HEX(bytes[14])..INT2HEX(bytes[15])..INT2HEX(bytes[16])
end

----------------------------------------------------------------------------
-- Improved randomseed function.
-- Lua 5.1 and 5.2 both truncate the seed given if it exceeds the integer
-- range. If this happens, the seed will be 0 or 1 and all randomness will
-- be gone (each application run will generate the same sequence of random
-- numbers in that case). This improved version drops the most significant
-- bits in those cases to get the seed within the proper range again.
-- @param seed the random seed to set (integer from 0 - 2^32, negative values will be made positive)
-- @return the (potentially modified) seed used
-- @usage
-- local socket = require(""socket"")  -- gettime() has higher precision than os.time()
-- local uuid = require(""uuid"")
-- -- see also example at uuid.seed()
-- uuid.randomseed(socket.gettime()*10000)
-- print(""here's a new uuid: "",uuid())
function M.randomseed(seed)
  seed = math_floor(math_abs(seed))
  if seed >= (2^bitsize) then
    -- integer overflow, so reduce to prevent a bad seed
    seed = seed - math_floor(seed / 2^bitsize) * (2^bitsize)
  end
  if lua_version < 5.2 then
    -- 5.1 uses (incorrect) signed int
    math.randomseed(seed - 2^(bitsize-1))
  else
    -- 5.2 uses (correct) unsigned int
    math.randomseed(seed)
  end
  return seed
end

----------------------------------------------------------------------------
-- Seeds the random generator.
-- It does so in 3 possible ways;
--
-- 1. if in ngx_lua, use `ngx.time() + ngx.worker.pid()` to ensure a unique seed
-- for each worker. It should ideally be called from the `init_worker` context.
-- 2. use luasocket `gettime()` function, but it only does so when LuaSocket
-- has been required already.
-- 3. use `os.time()`: this only offers resolution to one second (used when
-- LuaSocket hasn't been loaded)
--
-- **Important:** the random seed is a global piece of data. Hence setting it is
-- an application level responsibility, libraries should never set it!
-- @usage
-- local socket = require(""socket"")  -- gettime() has higher precision than os.time()
-- -- LuaSocket loaded, so below line does the same as the example from randomseed()
-- uuid.seed()
-- print(""here's a new uuid: "",uuid())
function M.seed()
  if _G.ngx ~= nil then
    return M.randomseed(ngx.time() + ngx.worker.pid())
  elseif package.loaded[""socket""] and package.loaded[""socket""].gettime then
    return M.randomseed(package.loaded[""socket""].gettime()*10000)
  else
    return M.randomseed(os.time())
  end
end

return setmetatable( M, { __call = function(self, hwaddr) return self.new(hwaddr) end} )"
6GMas0EK,Untitled,kajs54,C,Wednesday 6th of March 2024 03:58:32 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

// Structure pour représenter un objet
struct Objet {
    int poids;
    int valeur;
    double ratio; // Rapport valeur/poids
};

// Fonction pour comparer deux objets en fonction de leur ratio valeur/poids
int comparer(const void *a, const void *b) {
    const struct Objet *objetA = (const struct Objet *)a;
    const struct Objet *objetB = (const struct Objet *)b;

    // Si le ratio de l'objet B est supérieur à celui de l'objet A, retourner 1, sinon retourner -1
    if (objetB->ratio > objetA->ratio) {
        return 1;
    } else {
        return -1;
    }
}

int maximum(int a, int b) {
    return (a >= b) ? a : b;
}

// Fonction récursive pour explorer toutes les combinaisons d'objets possibles
void explorerSolutions(int poids_sac, struct Objet objets[], int K[], int n, int poids_actuel, int solution[], int *solution_count, int index, bool *solutions_seen) {
    if (poids_actuel == poids_sac) {
        // Nous avons atteint le poids maximal du sac à dos, ajouter cette solution à la liste des solutions
        bool doublon = false;
        for (int i = 0; i < *solution_count; i++) {
            bool identique = true;
            for (int j = 0; j < n; j++) {
                if (solution[i * n + j] != solution[j]) {
                    identique = false;
                    break;
                }
            }
            if (identique) {
                doublon = true;
                break;
            }
        }
        if (!doublon) {
            for (int i = 0; i < n; i++) {
                solutions_seen[*solution_count * n + i] = solution[i]; // Copier la solution actuelle
            }
            (*solution_count)++;
        }
        return;
    }

    if (index == n) {
        return; // Si nous avons examiné tous les objets, retourner
    }

    // Inclure l'objet actuel dans la solution et passer à l'objet suivant
    for (int i = 0; i <= poids_sac / objets[index].poids; i++) {
        int poids_total = poids_actuel + objets[index].poids * i;
        if (poids_total <= poids_sac && K[poids_total] == K[poids_actuel] + objets[index].valeur * i) {
            solution[index] = i;
            // Créer une nouvelle solution pour l'appel récursif suivant
            int *new_solution = (int *)malloc(sizeof(int) * n);
            for (int j = 0; j < n; j++) {
                new_solution[j] = solution[j];
            }
            explorerSolutions(poids_sac, objets, K, n, poids_total, new_solution, solution_count, index + 1, solutions_seen);
            free(new_solution);
        }
    }
}
// Fonction pour afficher toutes les solutions optimales possibles
void afficherSolutions(int poids_sac, struct Objet objets[], int K[], int n) {
    int solution_count = 0;
    int *solution = (int *)malloc(sizeof(int) * n);
    bool *solutions_seen = (bool *)calloc(n * n * n, sizeof(bool));

    explorerSolutions(poids_sac, objets, K, n, 0, solution, &solution_count, 0, solutions_seen);

    printf(""Solutions optimales:\n"");
    for (int i = 0; i < solution_count; i++) {
        printf(""{"");
        for (int j = 0; j < n; j++) {
            printf(""%d"", solution[j]);
            if (j != n - 1) {
                printf("","");
            }
        }
        printf(""}\n"");
    }

    free(solution);
    free(solutions_seen);
}

void sacADos(int poids_sac, struct Objet objets[], int n) {
    // Tri des objets en fonction du rapport valeur/poids
    qsort(objets, n, sizeof(struct Objet), comparer);

    // Tableau pour stocker les valeurs maximales
    int K[poids_sac + 1];
    K[0] = 0;

    // Initialisation du tableau K
    for (int i = 1; i <= poids_sac; i++) {
        K[i] = 0;
    }

    // Recherche dynamique
    for (int i = 0; i < n; i++) {
        for (int j = poids_sac; j >= objets[i].poids; j--) {
            K[j] = maximum(K[j], objets[i].valeur + K[j - objets[i].poids]);
        }
    }

    // Affichage de la valeur maximale
    printf(""La valeur maximale de ce probleme de sac a dos: %d\n"", K[poids_sac]);

    // Affichage de toutes les solutions optimales
    afficherSolutions(poids_sac, objets, K, n);
}

int main() {
    int n, poids_sac;
    printf(""Entrez le nombre d'objet(s): "");
    scanf(""%d"", &n);
    printf(""Entrez la capacite du sac a dos: "");
    scanf(""%d"", &poids_sac);

    // Allocation dynamique d'un tableau d'objets
    struct Objet *objets = (struct Objet *)malloc(n * sizeof(struct Objet));

    printf(""Entrez le poids et la valeur de chaque objet:\n"");
    for (int i = 0; i < n; i++) {
        printf(""Objet %d:\n"", i + 1);
        printf(""Poids: "");
        scanf(""%d"", &objets[i].poids);
        printf(""Valeur: "");
        scanf(""%d"", &objets[i].valeur);
        objets[i].ratio = (double)objets[i].valeur / objets[i].poids; // Calcul du rapport valeur/poids
    }

    // Appel de la fonction sacADos
    sacADos(poids_sac, objets, n);

    // Libération de la mémoire allouée pour le tableau d'objets
    free(objets);

    return 0;
}
"
9nkAEGpN,i think snowy did his manual idk yet,coinwalk,JavaScript,Wednesday 6th of March 2024 03:35:01 PM CDT,"var organic = parseFloat(document.getElementById('pct_balance').value);
var divide = 240;
var beverse = Number((organic/divide).toFixed(8));
var tens = (beverse*10);
var sevens = (beverse*4.9);
var eights = (beverse*5.9);
var james = beverse;
var frances = 0;
var whatever = organic;
 
 
 
function soiled(){
whatever = document.getElementById('pct_balance').value;
var dog = ((whatever-organic).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((whatever>(((Math.floor(whatever/tens))*tens)+sevens))&&(whatever<(((Math.floor(whatever/tens))*tens)+eights))&&(whatever!=frances)){
    james = james*2;
    frances = parseFloat(whatever);
}
if ((whatever<=(james*25))&&(whatever<(((Math.floor(whatever/tens))*tens)+sevens))){
    james = beverse;
    frances = 0;
}
if ((whatever<=(james*25))&&(whatever>(((Math.floor(whatever/tens))*tens)+eights))){
    james = beverse;
    frances = 0;
}
if ((whatever<=(james*25))&&(whatever>(((Math.floor(whatever/tens))*tens)+sevens))&&(whatever<(((Math.floor(whatever/tens))*tens)+eights))){
    james = beverse*2;
    frances = parseFloat(whatever);
}
if ((organic<=(james*10))&&(whatever<(((Math.floor(whatever/tens))*tens)+sevens))){
    james = beverse;
    frances = 0;
}
if ((organic<=(james*10))&&(whatever>(((Math.floor(whatever/tens))*tens)+eights))){
    james = beverse;
    frances = 0;
}
if ((organic<=(james*10))&&(whatever>(((Math.floor(whatever/tens))*tens)+sevens))&&(whatever<(((Math.floor(whatever/tens))*tens)+eights))){
    james = beverse*2;
    frances = parseFloat(whatever);
}
if (whatever>=(organic*24)){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((james*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() =>soiled(), 1000);
}
soiled();"
v0W9xCSr,sudo pacman -Rd plasma5-applets-system-monitor,bluebyt,INI file,Wednesday 6th of March 2024 03:12:28 PM CDT,sudo pacman -Rd plasma5-applets-system-monitor
2trdyXZj,Untitled,GregLeblanc,Perl,Wednesday 6th of March 2024 03:07:49 PM CDT,"#!/usr/bin/perl -w
use strict;
use warnings;

use CGI qw(:standard);

my $particle = param(""particle"");
my $charge = param(""charge"");
my $frequency = param(""frequency"");
my $nmrtable_data = ""/usr/local/lib/nmrtable_data"";
my $line;

# Constants
my $M_zero 		= 	1876.5592;

sub calculate_frequency {
	print p(""In the sub"");
	open (file_handle, ""<$nmrtable_data"") or die qq(Unable to open ""$nmrtable_data"");
	foreach (<file_handle>) {
		if (($_ =~ /$particle/) and ($_ =~ /$charge/)) {
			print p($_);
		}
	}
}

print header, start_html(-title=>""EAL Energy Calculator"",
		author=>""leblanc\@ohio.edu"");
print '<STYLE type=""text/css"">';
print ' H1.myclass {border-with: 1; border: solid; test-align: right;}';
print '</STYLE>';
print '<H1>EAL Energy Calculator</H1>';

if ($frequency eq """") {
	print hr, start_form;
	print p(""Please select particle: "", popup_menu(""particle"",
			['PROTONS','DEUTERONS','HELIUM-3','ALPHAS',
			'LITHIUM-6','LITHIUM-7','BORON-10','BORON-11',
			'CARBON-12','CARBON-13','NITROGEN-14',
			'NITROGEN-15','OXYGEN-16','ALUMINUM-27']));
	print p(""Please select charge state: "", popup_menu(""charge"",
			['+1','+2','+3','+4','+5','+6','+7','+8']));
	print p(""Please enter NMR Value (in MHz): "",textfield(""frequency"",""""));
	print p(submit(""Calculate""), reset(""Clear""));
	print end_form, hr;
} else {
	print hr, start_form,p;
    print ""<TABLE>"";
	print ""<TR><TH>Particle:<TD><big><b><font size=+1 color=#0000ff>$particle</font></b></big></TR>"";
	print ""<TR><TH>Charge State:<TD><big><b><font size +1 color=#0000ff>$charge</font></b></big></TR>"";
	print ""<TR><TH>Energy (MeV):<TD><b><font size=+1 color=#0000ff>$frequency</font> </b></TR></TABLE>"";
	calculate_frequency();
	# print p(""$nmrshow""),hr;
	print p(defaults(""Continue""));
	print end_form;
	$frequency = undef();
}
"
uy8nBNwB,Untitled,alexromanelli,Python,Wednesday 6th of March 2024 03:06:58 PM CDT,"# Desenvolver um programa que seja capaz de:
# 1) Ler uma string da entrada padrão, no formato dd/mm/aaaa.
# 2) Exibir a data na saída padrão, no formato dd/mm/aaaa.
# 3) Exibir a data na saída padrão por extenso. Ex.: ""1º de fevereiro de 2024"".
# 4) Verificar se a data é válida.
# 5) Adicionar dias a uma data.
# 6) Calcular a diferença entre duas datas em anos.

# pastebin.com/PyRXzHUZ

from typing import TypedDict

DIA, MES, ANO = 'dia', 'mês', 'ano'

TipoData = TypedDict('TipoData', {DIA: int, 
                                  MES: int, 
                                  ANO: int})


class Data:
    dia: int
    mes: int
    ano: int
    

def ler_data(texto_data: str) -> TipoData:
    texto_separado = texto_data.split('/')
    dia = int(texto_separado[0])
    mes = int(texto_separado[1])
    ano = int(texto_separado[2])
    data = {DIA: dia, MES: mes, ANO: ano}
    return data


def eh_ano_bissexto(a: int) -> bool:
    """"""O ano é bissexto quando:
       1) É múltiplo de 4;
       2) Não é múltiplo de 100, exceto se for múltiplo de 400.""""""
    if a % 4 == 0:
        if a % 100 == 0:
            if a % 400 == 0:
                return True
            return False
        return True
    return False


dias_no_mes = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]


def data_eh_valida(data: TipoData) -> bool:
    if 1 <= data['mês'] <= 12:
        dias = dias_no_mes[data['mês'] - 1]
        if data['mês'] == 2 and eh_ano_bissexto(data['ano']):
            dias = 29
        if 1 <= data['dia'] <= dias:
            return True
    return False


def exibir_data(data: TipoData) -> None:
    print(f""{data['dia']:02d}/{data['mês']:02d}/{data['ano']:04d}"")


mes_por_extenso = ['janeiro', 'fevereiro', 'março',
                   'abril', 'maio', 'junho', 'julho',
                   'agosto', 'setembro', 'outubro',
                   'novembro', 'dezembro']


def exibir_data_por_extenso(data: TipoData) -> None:
    # 01/03/2024 ~> ""1º de março de 2024""
    # 28/02/2024 ~> ""28 de fevereiro de 2024""
    mes = mes_por_extenso[data['mês'] - 1]
    primeiro = 'º' if data['dia'] == 1 else ''
    print(f""{data['dia']}{primeiro} de {mes} de {data['ano']}"")


def adicionar_dias_a_data(dias: int,
                          data: TipoData) -> TipoData:
    pass


def compara_datas(data1: TipoData,
                  data2: TipoData) -> int:
    """"""Compara duas datas. Retorna 0 se as datas forem iguais.
       Retorna 1 se a data 1 for maior que a data 2.
       Retorna -1 se a data 2 for maior que a data 1.""""""
    if data1['ano'] > data2['ano']:
        return 1
    if data1['ano'] == data2['ano']:
        if data1['mês'] > data2['mês']:
            return 1
        if data1['mês'] == data2['mês']:
            if data1['dia'] > data2['dia']:
                return 1
            if data1['dia'] == data2['dia']:
                return 0
            return -1
        return -1
    return -1


def diferenca_entre_datas_em_anos(data1: TipoData,
                                  data2: TipoData) -> int:
    """"""Calcula a diferença em anos entre duas datas.
       O cálculo deve iniciar com a diferença entre os valores dos anos, a1 - a2 (se a1 >= a2),
       ou a2 - a1 (caso contrário). Se o mês da data mais antiga for maior que o mês da data mais
       nova, subtraia 1 da diferença entre anos. Se os meses forem iguais, e o dia da data
       mais antiga for maior que o dia da data mais nova, subtraia 1 da diferença entre anos.""""""
    if compara_datas(data1, data2) == -1:
        data1, data2 = data2, data1
    dif = data1['ano'] - data2['ano']
    if data1['mês'] < data2['mês']:
        return dif - 1
    if data1['mês'] == data2['mês'] and data1['dia'] < data2['dia']:
        return dif - 1
    return dif


data1 = ler_data(input(""Informe a data 1: ""))
if data_eh_valida(data1):
    print(""Data é válida."")
else:
    print(""Data é inválida."")
data2 = ler_data(input(""Informe a data 2: ""))
c = compara_datas(data1, data2)
if c == 0:
    print(""As datas são iguais."")
elif c == 1:
    print(""Data 1 é maior que data 2."")
else:
    print(""Data 1 é menor que data 2."")
diferenca = diferenca_entre_datas_em_anos(data1, data2)
print(f'Há uma diferença de {diferenca} ano(s).')

# str_data = input(""Informe a data: "")
# dia, mes, ano = ler_data(str_data)
# exibir_data(dia, mes, ano)
# if data_eh_valida(dia, mes, ano):
#     print(""Data válida."")
#     exibir_data_por_extenso(dia, mes, ano)
#     d2, m2, a2 = adicionar_dias_a_data(1400, dia, mes, ano)
#     exibir_data(d2, m2, a2)
#     diferenca = diferenca_entre_datas_em_anos(dia, mes, ano,
#                                               d2, m2, a2)
#     print(f""Diferença em anos: {diferenca}."")
# else:
#     print(""Data inválida."")
"
2smx23AY,Untitled,kajs54,C,Wednesday 6th of March 2024 02:55:26 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#define N 100
int maximum(int a, int b) {
    if (a >= b) {
        return a;
    } else {
        return b;
    }
}
int existence_solution(int solutionSet[][N], int n, int* setIndex, int count[], int taille_solution) {
    int i,j;
    for (i = 0; i < *setIndex; i++) {
        int trouve = 1;
        for (j = 0; j < taille_solution; j++) {
            if (solutionSet[i][j] != count[j]) {
                trouve = 0;
                break;
            }
        }
        if (trouve) {
            return 1;
        }
    }
    return 0;
}
void afficherSolutions(int W, int poids[], int valeur[], int K[], int n, int count[], int solutionSet[][N], int* setIndex) {
    if (W == 0) {
        if (existence_solution(solutionSet, n, setIndex, count, n)) {
            return;
        }
        for (int i = 0; i < n; i++) {
            solutionSet[*setIndex][i] = count[i];
        }
        (*setIndex)++;


        printf(""{"");
        for (int i = 0; i < n; i++) {
            printf(""%d"", count[i]);
            if (i != n - 1) {
                printf("","");
            }
        }
        printf(""}\n"");
    } else {
        for (int i = 0; i < n; i++) {
            if (poids[i] <= W && K[W] == valeur[i] + K[W - poids[i]]) {
                count[i]++;
                afficherSolutions(W - poids[i], poids, valeur, K, n, count, solutionSet, setIndex);
                count[i]--;
            }
        }
    }
}

int sacADos(int poids_sac, int poids[], int valeur[], int n, int count[]) {
    int i, weight;
    int K[poids_sac + 1];

    K[0] = 0;

    for (weight = 1; weight <= poids_sac; weight++) {
        K[weight] = 0;
        for (i = 0; i < n; i++) {
            if (poids[i] <= weight) {
                K[weight] = maximum(K[weight], valeur[i] + K[weight - poids[i]]);
            }
        }
    }

    int solutionSet[N][N];
    int setIndex = 0;

    printf(""Solutions optimales:\n"");
    afficherSolutions(poids_sac, poids, valeur, K, n, count, solutionSet, &setIndex);
    printf("" La valeur maximale de ce probleme de sac a dos: %d\n"", K[poids_sac]);

    return K[poids_sac];
}


int main() {
    int n, poids_sac;
    printf(""Entrez le nombre d'objet(s): "");
    scanf(""%d"", &n);
    printf(""Entrez la capacite du sac a dos:"");
    scanf(""%d"", &poids_sac);
    int poids[n], valeur[n], count[n];
    printf(""-----------------------------------***** S A C     A     D O S *****---------------------------------------\n"");
    printf(""Entrez le poids et la valeur de chaque objet:\n"");
    for (int i = 0; i < n; i++) {
        printf(""Objet %d:\n"", i + 1);
        printf("" poids: "");
        scanf(""%d"", &poids[i]);
        printf("" la valeur de l'objet '%d': "",i+1);
        scanf(""%d"", &valeur[i]);
        count[i] = 0;
    }
    int res = sacADos(poids_sac, poids, valeur, n, count);

    return 0;
}
"
2LyLHSrd,javasc,Bahaeddin,JavaScript,Wednesday 6th of March 2024 02:48:25 PM CDT,"'''
<!DOCTYPE html>
<html lang=""en"">
<head>
<title>Moamalat</title>
</head>
<body>

<input type=""button"" onclick=""Do()"" value=""open"">
<script src=""	https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.0/js/bootstrap.bundle.min.js.map""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js"" integrity=""sha512-E8QSvWZ0eCLGk4km3hxSsNmGWbLtSCSUcewDQPQWZF6pEU8GlT8a5fF32wOl1i8ftdMhssTrF/OhyGWwonTcXA=="" crossorigin=""anonymous"" referrerpolicy=""no-referrer""></script>
<script src=""https://npg.moamalat.net:6006/js/lightbox.js""> </script>
 <script>

// use https://npg.moamalat.net:6006/js/lightbox.js in production environment
function Do(){
    callLightbox();
  //   Lightbox.Checkout.showLightbox();
}
function callLightbox() {

    debugger
var mID='$mID';// use your merchant id here;
var tID='$tID';// use your terminal id here;
var amount=$amount;
var merchantKey='$key';
var merchRef='1234';// this will be user as your reference to the transaction you can manage this string by any format


  //debugger;
  //var dt = new Date().YYYYMMDDHHMMSS();
  var dt = new Date().toGMTString();
  var hmacSHA256 = '';
  
  
  merchantKey = hex_to_ascii(merchantKey);
  var strHashData = 'Amount='+amount+'000&DateTimeLocalTrxn='+dt+'&MerchantId='+mID+'&MerchantReference='+merchRef+'&TerminalId='+tID;
  console.log(strHashData);
  hmacSHA256 = CryptoJS.HmacSHA256(strHashData,merchantKey).toString().toUpperCase();
       
  console.log(hmacSHA256);

 
  
  Lightbox.Checkout.configure = {
    MID: mID,
    TID: tID,
    AmountTrxn: amount+'000',
    MerchantReference: merchRef,
    TrxDateTime: dt,
    SecureHash:  hmacSHA256 ,
    completeCallback: function (data) {
      console.log('completed');
      console.log(data);
    },
    errorCallback: function (data) {
      console.log('error');
      console.log(data);
    },
    cancelCallback:function () {
      console.log('cancel');
    }
  };

  Lightbox.Checkout.showLightbox();
}

function hex_to_ascii(str1)
	 {
		var hex  = str1.toString();
		var str = '';
		for (var n = 0; n < hex.length; n += 2) {
			str += String.fromCharCode(parseInt(hex.substr(n, 2), 16));
		}
		return str;
	 }
Object.defineProperty(Date.prototype, 'YYYYMMDDHHMMSS', {
    value: function() {
        function pad2(n) {  // always returns a string
            return (n < 10 ? '0' : '') + n;
        }

        return this.getFullYear() +
               pad2(this.getMonth() + 1) + 
               pad2(this.getDate()) +
               pad2(this.getHours()) +
               pad2(this.getMinutes()) +
               pad2(this.getSeconds());
    }
});


 </script>

</body>
</html>
''';"
xKfMknhc,PJ01_Python_pyFrameCutter.py,creativesamurai1982,Python,Wednesday 6th of March 2024 02:33:45 PM CDT,"import cv2
import numpy as np
import os
import time
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

# Define the folder to monitor
folder_to_monitor = 'C:\\Users\\david\\Desktop\\TESTING\\scans'

# Define the output folder
output_folder = 'C:\\Users\\david\\Desktop\\TESTING\\output'

# Configure Settings


# ThreshHold Settings
thresholdValue = 205
maxValue = 225

# Canny Edge Detection
upper = 50
lower = 150

# Create a class to handle file system events
class ImageHandler(FileSystemEventHandler):
    def on_created(self, event):
        if event.is_directory:
            return

        if event.src_path.endswith(('.jpg', '.png', '.jpeg')):
            print(f""New image detected: {event.src_path}"")
            process_image(event.src_path)
            
# Initialize a counter for frame filenames
frame_counter = 1

# Function to process an image
def process_image(image_path):
    # Declare frame_counter as global    
    global frame_counter
    
    # Load the original image
    original_image = cv2.imread(image_path)

    # Rotate the original image 180 degrees
    rotated_image = cv2.rotate(original_image, cv2.ROTATE_180)

    # Convert to grayscale
    grey = cv2.cvtColor(rotated_image, cv2.COLOR_BGR2GRAY)

    # Use threshold to convert image to binary
    ret, thresh1 = cv2.threshold(grey, thresholdValue, maxValue, cv2.THRESH_BINARY) # 213

    # Apply morphological operations to remove specs or dirt/noise from the sprocket holes
    kernel = np.ones((8, 8), np.uint8)
    closing = cv2.morphologyEx(thresh1, cv2.MORPH_CLOSE, kernel, iterations=2)

    # Edge Detection for detecting contours
    edge = cv2.Canny(closing, upper, lower, apertureSize=7, L2gradient=True)

    # Finding Contours
    cnts, _ = cv2.findContours(edge, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    cnts = sorted(cnts, key=lambda x: cv2.boundingRect(x)[0])

    # Create a list to store the cropped ROIs
    cropped_rotated_rois = []

    for c in cnts:
        x, y, w, h = cv2.boundingRect(c)

        if h > 200 and w > 20:
            # Adjust the coordinates to create a larger bounding box
            x -= -50  # Move the left edge 10 pixels to the left
            y -= 10  # Move the top edge 10 pixels up
            w += 600  # Increase the width by 20 pixels
            h += 1050  # Increase the height by 20 pixels

            # Crop the ROI from the original image
            roi = rotated_image[y:y+h, x:x+w]

            # Rotate the cropped ROI (90 degrees clockwise)
            rotated_roi = cv2.rotate(roi, cv2.ROTATE_90_CLOCKWISE)

            # Flip the rotated ROI vertically
            flipped_roi = cv2.flip(rotated_roi, 1)

            # Append the rotated and flipped ROI to the list
            cropped_rotated_rois.append(flipped_roi)

    # Discard the last ROI if there are more than one
    if len(cropped_rotated_rois) > 1:
        cropped_rotated_rois.pop()

    # Save each cropped ROI to the output folder
    for idx, roi in enumerate(cropped_rotated_rois):
        output_filename = f""frame{frame_counter:06}.jpg""
        output_path = os.path.join(output_folder, output_filename)
        cv2.imwrite(output_path, roi)
        print(f""Processed image saved: {output_path}"")
        
        # Increment the frame counter
        frame_counter += 1

# Set up the watchdog observer
event_handler = ImageHandler()
observer = Observer()
observer.schedule(event_handler, folder_to_monitor, recursive=False)
observer.start()

print(f""Monitoring folder: {folder_to_monitor}"")
try:
    while True:
        time.sleep(1)
except KeyboardInterrupt:
    observer.stop()

observer.join()

# Call the process_image function for each image
for image_filename in image_filenames:
    image_path = os.path.join(input_folder, image_filename)
    process_image(image_path)"
C0tjpx4e,PJ01_Python_pyCineScan.py,creativesamurai1982,Python,Wednesday 6th of March 2024 02:32:42 PM CDT,"# pyCineScan.py
# by David Holt
# RUN THIS SCRIPT AS ADMINISTRATOR

import datetime
import logging
import os
import sys
import time

import serial.tools.list_ports
import win32ui
from pywinauto.application import Application

# from py_cinescan_timer import time_functions


# Set up logging configuration
logging.basicConfig(filename='pyCineScan.log', level=logging.INFO, format='%(asctime)s - %(levelname)s: %(message)s')


def time_functions(scan, moveFilm):
    # Initialize total time
    total_time = 0
    count = 0

    # Start the loop
    while True:
        # Timing scan()
        start_time_scan = time.perf_counter()
        scan()
        end_time_scan = time.perf_counter()

        # Calculating time taken for scan()
        time_taken_scan = end_time_scan - start_time_scan

        # Timing moveFilm()
        start_time_moveFilm = time.perf_counter()
        moveFilm()
        end_time_moveFilm = time.perf_counter()

        # Calculating time taken for moveFilm()
        time_taken_moveFilm = end_time_moveFilm - start_time_moveFilm

        # Calculating total time for this iteration
        iteration_total_time = time_taken_scan + time_taken_moveFilm

        # Adding the iteration time to the total time
        total_time += iteration_total_time

        # Increment the count
        count += 1

        # Convert total_time to days, hours, minutes, and seconds
        total_time_td = datetime.timedelta(seconds=int(total_time))

        # Extract the number of days from total_time
        total_days = total_time_td.days

        # Format the remaining time (hours, minutes, seconds) as HH:MM:SS
        remaining_time_str = str(total_time_td - datetime.timedelta(days=total_days))

        # Print the individual times and current cumulative time in the desired format
        print(f""Scan: {count}"")
        print()
        print(f""Time taken for scan: {datetime.timedelta(seconds=int(time_taken_scan))}"")
        print(f""Time taken for moveFilm: {datetime.timedelta(seconds=int(time_taken_moveFilm))}"")
        print()
        print(f""Total time elapsed: Day(s) {total_days}, {remaining_time_str}"")
        print()


def get_ports():
    os.system('cls')
    ports = serial.tools.list_ports.comports()
    return ports


def findArduino(portsFound):
    commPort = 'None'
    numConnection = len(portsFound)

    for i in range(0, numConnection):
        port = foundPorts[i]
        strPort = str(port)

        if 'Arduino' in strPort:
            splitPort = strPort.split(' ')
            commPort = (splitPort[0])

    return commPort


foundPorts = get_ports()
connectPort = findArduino(foundPorts)

if connectPort != 'None':
    ser = serial.Serial(connectPort, baudrate=9600, timeout=None)
    print('Searching for Arduino UNO')
    time.sleep(0.5)
    print('Arduino UNO Connected to ' + connectPort)
    print()
    print('Waiting for the Arduino UNO to reset....')
    time.sleep(3)


else:
    print('Serial connection FAILED!')
    time.sleep(1.5)
    sys.exit()

print('Arduino Is Ready')
print()


def clear_receive_buffer():
    ser.reset_input_buffer()

# Main Menu Start
def mainMenu():
    os.system('cls')
    print()
    print(""		  Cine Scan"")
    print(""		  =-=-=-=-="")
    print(""		Version 1.0.0"")
    print(""		By David Holt"")
    print()
    print(""Main Menu"")
    print(""---------"")
    print()

    print(""1 - Enable Takeup Reel."")
    print(""2 - Align Film With Scanner."")
    print(""3 - Start Scanning."")
    print(""4 - Advance by 10 frames."") # not used yet!
    print(""5 - Advance by 20 frames."") # not used yet!
    print()
    print(""0. Quit "")
    print()
    while True:
        try:
            selection = int(input(""Enter choice: ""))
            if selection == 1:
                one()  # 1 - Enable Takeup Reel
                break
            elif selection == 2:
                global main_window
                two()  # 2 - Align Film With Scanner
                break
            elif selection == 3:
                global main_window
                three()  # 3 - Start Scanning
                break
            elif selection == 0:
                sys.exit(1)
                break
            else:
                print(""Invalid choice. Enter 1-3"")
                mainMenu()
        except ValueError:
            print(""Invalid choice. Enter 1-3"")
    exit


def one():
    ser.write(b'T')
    mainMenu()


def two():
    ser.write(b'X')
    mainMenu()


def three():
    global main_window
    if main_window:
        main_window.set_focus()
    repeatFunc()
    mainMenu()


# Main Menu Finish


def loadProg():
    global main_window
    # Start VueScan
    print(""Checking If VueScan Is Installed..."")
    time.sleep(0.5)
    if os.path.exists(r""D:\Apps_Portable\VueScan""):
        vuescan_file = r""D:\Apps_Portable\VueScan\vuescan.exe""
        print(""VueScan Found at "" + vuescan_file)
        print()
        time.sleep(0.5)
        print(""Checking if VueScan is currently running..."")
        time.sleep(0.5)

        def vuescanExists(classname):
            try:
                win32ui.FindWindow(classname, None)
            except win32ui.error:
                return False
            else:
                return True
    else:
        print(""Can't find VueScan on your computer"")
        print(""Terminating Script!"")
        print()
        time.sleep(0.5)
        sys.exit(1)

    if vuescanExists(""wxWindowNR""):
        print(""VueScan already running"")
        print()
        time.sleep(0.5)
        print(""Attempting to connect...."")
        time.sleep(0.5)
        app = Application(backend=""win32"").connect(title_re=""VueScan 9 x64*."", class_name=""wxWindowNR"")
        time.sleep(6)
        print('Connected')
        print()
        time.sleep(0.5)
    else:
        print(""Loading VueScan..."")
        print()
        app = Application(backend=""win32"").start(vuescan_file)
        time.sleep(7.5)
        app = Application(backend=""win32"").connect(title_re=""VueScan 9 x64*."", class_name=""wxWindowNR"")

    # Select the main GUI window
    print(""Selecting main window..."")
    time.sleep(0.5)
    main_window = app.wxWindowNR
    print(""Done"")
    print()

    time.sleep(2)
    print(""Loading scanner config..."")
    time.sleep(0.5)
    menu_item = main_window.menu_item(u'&File->Load film_scan\tF1')
    menu_item.select()
    print(""Done"")
    time.sleep(0.5)


def scan():  # Main Scan Function, Use This When Not Testing.
    try:
        while True:
            main_window.set_focus()
            print()
            print(""-------------------------------------------------------------"")
            print()
            button = main_window.Preview
            button.wait('enabled', timeout=30)
            print(""Scanning Film Strip..."", end='')
            button.click()
            button.wait_not('enabled', timeout=600)
            print("" OK!"")
            print()
            break
    except KeyboardInterrupt:
        print()
        mainMenu()


def moveFilm():  # Main moveFilm Function, Use This When Not Testing.
    startMove = time.perf_counter()
    ser.write(b'M')
    clear_receive_buffer()  # Clear the receive buffer after sending the command
    print()
    print(""Moving Film..."", end='')
    ser.read_until(b'S\r\n')
    print("" OK!"")
    print()


def repeatFunc():
    time_functions(scan, moveFilm)


if __name__ == '__main__':
    get_ports()
    print()
    loadProg()
    mainMenu()
    repeatFunc()

    print(""If your seeing this, Something has gone wrong!!!!"")

"
fnrxUT06,PJ01_Arduino_pyCineScan.ino,creativesamurai1982,C++,Wednesday 6th of March 2024 02:30:46 PM CDT,"/*
Pins for the CNC Shield v3

 X_STP_PIN           2
 Y_STP_PIN           3
 Z_STP_PIN           4

 X_DIR_PIN           5
 Y_DIR_PIN           6
 Z_DIR_PIN           7

 SHIELD_EN_PIN       8 pos useage for turning steppers off for realligment
*/


// INCLUDES
#include <AccelStepper.h>
#include <ezButton.h>

// Define the stepper motor connections
const int Z_DIR_PIN = 7;   //  Z Takeup Reels Direction Pin
const int Z_STP_PIN = 4;  //  Z Takeup Reels Step Pin
const int X_DIR_PIN = 5;   //  X Capstans Direction Pin
const int X_STP_PIN = 2;  //  X Capstans Step Pin

const int stepsPerRev = 200;   // Number of steps for a full rotation(360) // SPROCKET(CAPSTAN)
const int stepsPerRev2 = 200;  // Number of steps for a full rotation(360) // Takeup Reel
const int microSteps = 16;     // 16th microstepping
//const int takeupMaxSpeed = 250;     // Takeup Reel Max Speed
//const int takeupSpeed = 250;        // Takeup Reel Speed
//const int capstanMaxSpeed = 600;    // Capstan Reel Max Speed
//const int capstanSpeed = 600;       // Capstan Reel Speed 120
//const int capstanAccel = 99999999;  // * Sets the steppers acceleration to a high number so that the stepper
//const int takeupAccel = 99999999;   // * number so that the stepper Doesn't acceralate. 99999999

const int takeupMaxSpeed = 450;   // Takeup Reel Max Speed
const int takeupSpeed = 450;      // Takeup Reel Speed
const int capstanMaxSpeed = 900;  // Capstan Reel Max Speed
const int capstanSpeed = 900;     // Capstan Reel Speed 120

const int capstanAccel = 800;      // * Sets the steppers acceleration to a high number so that the stepper
const int takeupAccel = 99999999;  // * number so that the stepper Doesn't acceralate. 99999999

int steps = 800;  //  Number of steps to move x amount of 8mm cine film frames.
/*
__________________
| STEPS | FRAMES |
|-------|--------|
|  100  |   6    |
|  200  |   12   | 1
|  300  |   18   |
|  400  |   24   | 2
|  500  |   30   |
|  600  |   36   | 3
|  700  |   42   |
|  800  |   48   | 4
|  900  |   54   |
| 1000  |   60   | 5
*/

// Create two new instances of the AccelStepper class
AccelStepper takeup(AccelStepper::DRIVER, Z_STP_PIN, Z_DIR_PIN);   // Runs all the time unless switch is pressed!
AccelStepper capstan(AccelStepper::DRIVER, X_STP_PIN, X_DIR_PIN);  // Runs only when told to via serial coms

// SWITCH SETUP
ezButton tensionSW(9);   // Create ezButton object that attach to pin 7;
ezButton stopButton(11);  // Create ezButton object that attach to pin 3;

bool isTakeupActive = false;       // Flag to track the status of the takeup stepper
bool isCapstanContinuous = false;  // Flag to indicate capstan continuous movement

void setup() {
  Serial.begin(9600);  // Initialize serial communication at 9600 baud

  Serial.println("""");
  Serial.println(""M = Move"");  //
  Serial.println(""T = Activate Takeup Stepper"");  //
  Serial.println(""X = enable capstan continuous movement"");  //
  Serial.println("""");

  tensionSW.setDebounceTime(50);  // set debounce time to 50 milliseconds

  takeup.setMaxSpeed(takeupMaxSpeed);   // Set the maximum speed of the stepper motor
  takeup.setSpeed(takeupSpeed);         // Set the speed of the stepper motor
  takeup.setAcceleration(takeupAccel);  // Set the acceleration of the stepper motor

  capstan.setMaxSpeed(capstanMaxSpeed);   // Set the maximum speed of the stepper motor
  capstan.setSpeed(capstanSpeed);         // Set the speed of the stepper motor
  capstan.setAcceleration(capstanAccel);  // Set the acceleration of the stepper motor

  takeup.move(999999999);  // * Tells the Takeup stepper to to move x steps
                           // * when takeup.run() is called in the loop.
}

void loop() {
  serialCheck();
  tensionSW.loop();  // Checks that status of the switch
  stopButton.loop();
  switchReleased();  // code for when the switch is released
  switchPressed();   // code for when the switch is pressed

  if (isTakeupActive) {
    takeup.run();
  }

  if (isCapstanContinuous) {
    capstan.move(steps * microSteps);
    capstan.run();
    if (stopButton.isPressed()) {
      isCapstanContinuous = false;  // Stop the capstan continuous movement
      capstan.stop();
      Serial.println(""Capstan movement stopped."");
    }
  } else {
    capstan.run();
  }
}

void serialCheck() {
  // Note: we shall process one command at a time! This means: reset the
  // following variable to zero as soon as the command is done processing.
  static char current_command;

  // Do not proceed with another command until we're done with the current one!
  if (current_command == 0) {
    if (Serial.available() > 0) {
      current_command = Serial.read();
      // Perform a single action upon receiving a command. Makes code easier to read.
      switch (current_command) {
        default:
          current_command = 0;
          break;  // Ignore unknown commands
        case 'M':
          capstan.move(steps * 16);
          break;   // Move the motor 100 steps
        case 'T':  // Activate the takeup stepper
          isTakeupActive = true;
          break;
        case 'A':  // Activate the takeup stepper
          isTakeupActive = false; //not sure this is working!
          break;
        case 'X':  // enable capstan continuous movement
          isCapstanContinuous = true;
          break;
      }
    }
  } else {
    // Send a message when the motor is done moving:
    if (capstan.isRunning() == false) {
      current_command = 0;  // Reset the current_command
      Serial.println(""S"");  // Send message ""We're done!""
    }
  }
}

void switchReleased() {

  if (tensionSW.isReleased()) {
    Serial.println(""MOVING - Trigger Released"");
    takeup.move(999999999);
  }
}

void switchPressed() {
  if (tensionSW.isPressed()) {
    Serial.println(""STOPPED - Trigger Pressed"");
    takeup.stop();
  }
}"
0tNZRPbT,zad7_php,ppiso,PHP,Wednesday 6th of March 2024 02:23:23 PM CDT,"<?php
if ($_SERVER[""REQUEST_METHOD""] == ""POST"") {
    $file = $_FILES[""file""];
    $fileName = $file[""name""];
    $fileSize = $file[""size""];
    $fileType = $file[""type""];

    // Sprawdzenie, czy plik jest graficznym (jpg, png, gif)
    $allowedExtensions = [""jpg"", ""jpeg"", ""png"", ""gif""];
    $fileExtension = strtolower(pathinfo($fileName, PATHINFO_EXTENSION));
    if (!in_array($fileExtension, $allowedExtensions)) {
        echo ""Błąd: Wybrany plik nie jest plikiem graficznym."";
        exit;
    }

    // Zamiana znaków polskich na ""bezogonkowe"" w nazwie pliku
    $fileNameWithoutDiacritics = strtr($fileName, [
        'ą' => 'a', 'ć' => 'c', 'ę' => 'e', 'ł' => 'l', 'ń' => 'n',
        'ó' => 'o', 'ś' => 's', 'ź' => 'z', 'ż' => 'z',
        'Ą' => 'A', 'Ć' => 'C', 'Ę' => 'E', 'Ł' => 'L', 'Ń' => 'N',
        'Ó' => 'O', 'Ś' => 'S', 'Ź' => 'Z', 'Ż' => 'Z'
    ]);

    // Przesłanie pliku do katalogu ""upload""
    $uploadDirectory = ""upload/"";
    if (!is_dir($uploadDirectory)) {
        mkdir($uploadDirectory);
    }
    $targetPath = $uploadDirectory . $fileNameWithoutDiacritics;
    move_uploaded_file($file[""tmp_name""], $targetPath);

    echo ""Plik \""$fileNameWithoutDiacritics\"" o rozmiarze $fileSize bajtów został przesłany i zapisany w katalogu \""upload\""."";
}
?>
"
cK5zPBY6,zad7_html,ppiso,HTML,Wednesday 6th of March 2024 02:23:01 PM CDT,"<!DOCTYPE html>
<html lang=""pl"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Formularz przesyłania pliku</title>
</head>
<body>
    <h1>Formularz przesyłania pliku</h1>
    <form method=""post"" action=""operacja.php"" enctype=""multipart/form-data"">
        <label for=""file"">Wybierz plik:</label>
        <input type=""file"" name=""file"" id=""file"">
        <input type=""submit"" value=""Prześlij"">
    </form>
</body>
</html>
"
SkjrVK4G,Untitled,smj007,Python,Wednesday 6th of March 2024 02:19:51 PM CDT,"# easier and simpler

HASH_NUM = 524287

class MyHashSet:
    def __init__(self):

        self.tables = [0]*HASH_NUM
        
    def add(self, key: int) -> None:

        key = key%HASH_NUM
        self.tables[key] = 1
        
    def remove(self, key: int) -> None:
        key = key%HASH_NUM
        if self.tables[key]:
            self.tables[key] = 0
            return 

        return 

    def contains(self, key: int) -> bool:
        key = key%HASH_NUM
        return self.tables[key]   



HASH_NUM = 2069

class Node:
    def __init__(self, val):
        self.val = val
        self.next = None

class MyHashSet:

    def __init__(self):

        self.tables = [None]*HASH_NUM
        
    def add(self, key: int) -> None:
  
        # address collision
        if self.tables[key%HASH_NUM]:
            current = self.tables[key%HASH_NUM]
            prev = current

            while current:
                if current.val == key:
                    return 
                prev = current
                current = current.next
            prev.next = Node(key)

        self.tables[key%HASH_NUM] = Node(key)

    
    def remove(self, key: int) -> None:
        if self.tables[key%HASH_NUM]:
            current = self.tables[key%HASH_NUM]
            prev = current

            # if key matches at the head of the node
            if key == current.val:
                self.tables[key%HASH_NUM] = current.next
                return

            while current:
                if key == current.val:
                    prev.next = current.next
                    return
                prev = current
                current = current.next


    def contains(self, key: int) -> bool:
        
        current = self.tables[key%HASH_NUM]
        while current:
            if current.val == key:
                return True
            current = current.next
        
        return False


# Your MyHashSet object will be instantiated and called as such:
# obj = MyHashSet()
# obj.add(key)
# obj.remove(key)
# param_3 = obj.contains(key)"
0U6NkmVU,REDUwriteMap,Taupe,JavaScript,Wednesday 6th of March 2024 02:19:09 PM CDT,"function writeMap(){
    let map = GM_getValue(""map"");
    if(map === undefined || !Array.isArray(map) || map.length !== 2 || map[0].length !== MAP_HEIGHT || map[0][0].length !== MAP_WIDTH){
        map = blankMap();
        GM_setValue(""map"", map);
    }

    ruineExplorerFloorTxt.textContent = `Étage ${visibleFloor}`;

    for(let i = 0; i < MAP_HEIGHT; i++){
        for(let j = 0; j < MAP_WIDTH; j++){
            let currentDivIndex = i * MAP_WIDTH + j;
            if(currentDivIndex < mapGrid.children.length) {
                let currentDiv = mapGrid.children[currentDivIndex];
                let currentTile = map[visibleFloor][i][j];
                currentDiv.textContent = """";
                currentDiv.className = ""z"" + currentTile.zombies;
                if(currentTile.door !== NOTHING){
                    let doorImage = DOORS_IMG[currentTile.door].cloneNode(true);
                    currentDiv.appendChild(doorImage);
                }
                if(currentTile.directions !== EMPTY && DIRECTIONS_IMG[currentTile.directions]){
                    let directions = DIRECTIONS_IMG[currentTile.directions].cloneNode(true);
                    currentDiv.appendChild(directions);
                }
            }
        }
    }

    let position = GM_getValue(""position"");
    if(position !== undefined && position[2] === visibleFloor){
        if(position[1] * MAP_WIDTH + position[0] < mapGrid.children.length) {
            let positionTemp = mapGrid.children[position[1] * MAP_WIDTH + position[0]];
            if(positionTemp && positionTemp.children.length > 0) {
                positionTemp.children[0].before(PLAYER_POSITION_IMG.cloneNode(true));
            } else if(positionTemp) {
                positionTemp.appendChild(PLAYER_POSITION_IMG.cloneNode(true));
            }
        }
    }
}"
PyRXzHUZ,Untitled,alexromanelli,Python,Wednesday 6th of March 2024 02:17:00 PM CDT,"# Desenvolver um programa que seja capaz de:
# 1) Ler uma string da entrada padrão, no formato dd/mm/aaaa.
# 2) Exibir a data na saída padrão, no formato dd/mm/aaaa.
# 3) Exibir a data na saída padrão por extenso. Ex.: ""1º de fevereiro de 2024"".
# 4) Verificar se a data é válida.
# 5) Adicionar dias a uma data.
# 6) Calcular a diferença entre duas datas em anos.

# pastebin.com/qZb1WPEP


def ler_data(texto_data: str) -> tuple[int, int, int]:
    texto_separado = texto_data.split('/')
    dia = int(texto_separado[0])
    mes = int(texto_separado[1])
    ano = int(texto_separado[2])
    data = (dia, mes, ano)
    return data


def eh_ano_bissexto(a: int) -> bool:
    """"""O ano é bissexto quando:
       1) É múltiplo de 4;
       2) Não é múltiplo de 100, exceto se for múltiplo de 400.""""""
    if a % 4 == 0:
        if a % 100 == 0:
            if a % 400 == 0:
                return True
            return False
        return True
    return False


dias_no_mes = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]


def data_eh_valida(data: tuple[int, int, int]) -> bool:
    if 1 <= data[1] <= 12:
        dias = dias_no_mes[data[1] - 1]
        if data[1] == 2 and eh_ano_bissexto(data[2]):
            dias = 29
        if 1 <= data[0] <= dias:
            return True
    return False


def exibir_data(d: int, m: int, a: int) -> None:
    print(f""{d:02d}/{m:02d}/{a:04d}"")


mes_por_extenso = ['janeiro', 'fevereiro', 'março',
                   'abril', 'maio', 'junho', 'julho',
                   'agosto', 'setembro', 'outubro',
                   'novembro', 'dezembro']


def exibir_data_por_extenso(d: int, m: int, a: int) -> None:
    # 01/03/2024 ~> ""1º de março de 2024""
    # 28/02/2024 ~> ""28 de fevereiro de 2024""
    mes = mes_por_extenso[m - 1]
    primeiro = 'º' if d == 1 else ''
    print(f""{d}{primeiro} de {mes} de {a}"")


def adicionar_dias_a_data(dias: int,
                          data_dia: int,
                          data_mes: int,
                          data_ano: int) -> tuple[int, int, int]:
    pass


def compara_datas(d1: int, m1: int, a1: int,
                  d2: int, m2: int, a2: int) -> int:
    """"""Compara duas datas. Retorna 0 se as datas forem iguais.
       Retorna 1 se a data 1 for maior que a data 2.
       Retorna -1 se a data 2 for maior que a data 1.""""""
    if a1 > a2:
        return 1
    if a1 == a2:
        if m1 > m2:
            return 1
        if m1 == m2:
            if d1 > d2:
                return 1
            if d1 == d2:
                return 0
            return -1
        return -1
    return -1


def diferenca_entre_datas_em_anos(d1: int, m1: int, a1: int,
                                  d2: int, m2: int, a2: int) -> int:
    """"""Calcula a diferença em anos entre duas datas.
       O cálculo deve iniciar com a diferença entre os valores dos anos, a1 - a2 (se a1 >= a2),
       ou a2 - a1 (caso contrário). Se o mês da data mais antiga for maior que o mês da data mais
       nova, subtraia 1 da diferença entre anos. Se os meses forem iguais, e o dia da data
       mais antiga for maior que o dia da data mais nova, subtraia 1 da diferença entre anos.""""""
    if compara_datas(d1, m1, a1, d2, m2, a2) == -1:
        d1, m1, a1, d2, m2, a2 = d2, m2, a2, d1, m1, a1
    dif = a1 - a2
    if m1 < m2:
        return dif - 1
    if m1 == m2 and d1 < d2:
        return dif - 1
    return dif


data1 = ler_data(input(""Informe a data 1: ""))
if data_eh_valida(data1):
    print(""Data é válida."")
else:
    print(""Data é inválida."")
data2 = ler_data(input(""Informe a data 2: ""))
c = compara_datas(d1, m1, a1, d2, m2, a2)
if c == 0:
    print(""As datas são iguais."")
elif c == 1:
    print(""Data 1 é maior que data 2."")
else:
    print(""Data 1 é menor que data 2."")
diferenca = diferenca_entre_datas_em_anos(d1, m1, a1, d2, m2, a2)
print(f'Há uma diferença de {diferenca} ano(s).')

# str_data = input(""Informe a data: "")
# dia, mes, ano = ler_data(str_data)
# exibir_data(dia, mes, ano)
# if data_eh_valida(dia, mes, ano):
#     print(""Data válida."")
#     exibir_data_por_extenso(dia, mes, ano)
#     d2, m2, a2 = adicionar_dias_a_data(1400, dia, mes, ano)
#     exibir_data(d2, m2, a2)
#     diferenca = diferenca_entre_datas_em_anos(dia, mes, ano,
#                                               d2, m2, a2)
#     print(f""Diferença em anos: {diferenca}."")
# else:
#     print(""Data inválida."")
"
LetUYXeb,zad6_php,ppiso,PHP,Wednesday 6th of March 2024 02:13:12 PM CDT,"<?php
if (isset($_POST['calculateWords'])) {
    $inputText = $_POST['inputText'];

    // Podziel tekst na słowa
    $words = str_word_count($inputText, 1);

    // Wyświetl długość każdego słowa
    echo ""<h2>Długość słów w tekście:</h2>"";
    foreach ($words as $word) {
        echo ""<p>Słowo \""$word\"" ma długość "" . strlen($word) . "" znaków.</p>"";
    }
}
?>
"
sSgcea8e,zad6_html,ppiso,HTML,Wednesday 6th of March 2024 02:12:52 PM CDT,"<!DOCTYPE html>
<html>
<head>
    <title>Kalkulator długości słów</title>
</head>
<body>
    <form action=""operacja.php"" method=""post"">
        <label for=""inputText"">Wprowadź zdanie lub tekst:</label>
        <textarea id=""inputText"" name=""inputText"" rows=""4"" cols=""50"" required></textarea>
        <br>
        <input type=""submit"" name=""calculateWords"" value=""Policz długość słów"">
    </form>
</body>
</html>
"
Te8py4LQ,zad5_php,ppiso,PHP,Wednesday 6th of March 2024 02:09:48 PM CDT,"<?php
if (isset($_POST['convertDate'])) {
    $inputDate = $_POST['inputDate'];
    $outputFormat = $_POST['outputFormat'];

    // Sprawdź, czy wprowadzona data jest poprawna
    if (strtotime($inputDate) === false) {
        echo ""Nieprawidłowa data. Wprowadź datę w formacie YYYY-MM-DD."";
    } else {
        // Konwertuj datę na wybrany format
        $convertedDate = date($outputFormat, strtotime($inputDate));
        echo ""Wprowadzona data w formacie $outputFormat: $convertedDate"";
    }
}
?>
"
z6A76Tav,zad5_html,ppiso,HTML,Wednesday 6th of March 2024 02:09:25 PM CDT,"<!DOCTYPE html>
<html>
<head>
    <title>Konwerter daty</title>
</head>
<body>
    <form action=""operacja.php"" method=""post"">
        <label for=""inputDate"">Wprowadź datę (YYYY-MM-DD):</label>
        <input type=""text"" id=""inputDate"" name=""inputDate"" required>
        <br>
        <label for=""outputFormat"">Wybierz format docelowy:</label>
        <select id=""outputFormat"" name=""outputFormat"">
            <option value=""Y-m-d"">YYYY-MM-DD</option>
            <option value=""y-m-d"">YY-MM-DD</option>
            <option value=""d-m-Y"">DD-MM-YYYY</option>
            <option value=""m-d-Y"">MM-DD-YYYY</option>
        </select>
        <br>
        <input type=""submit"" name=""convertDate"" value=""Konwertuj datę"">
    </form>
</body>
</html>
"
FyVw3G3r,zad4_php,ppiso,PHP,Wednesday 6th of March 2024 02:05:10 PM CDT,"<?php
if (isset($_POST['show_date'])) {
    // Pobierz aktualną datę
    $currentDate = date('Y-m-d H:i:s');

    // Wyświetl datę na stronie
    echo ""Aktualna data: $currentDate"";
}
?>
"
dEkdbJVR,zad4_html,ppiso,HTML,Wednesday 6th of March 2024 02:04:45 PM CDT,"<!DOCTYPE html>
<html>
<head>
    <title>Formularz z datą</title>
</head>
<body>
    <form action=""operacja.php"" method=""post"">
        <input type=""submit"" name=""show_date"" value=""Pokaż datę"">
    </form>
</body>
</html>
"
dVuxuTH2,zad3_php,ppiso,PHP,Wednesday 6th of March 2024 01:58:50 PM CDT,"<?php
if ($_SERVER[""REQUEST_METHOD""] == ""POST"") {
    $birthdate = $_POST[""birthdate""];

    // Tworzenie obiektu DateTime na podstawie daty urodzenia
    $birthDateObj = new DateTime($birthdate);
    $now = new DateTime();

    // Obliczanie różnicy w latach
    $age = $now->diff($birthDateObj)->y;

    // Wyświetlanie wyniku
    echo ""Twój wiek to: $age lat."";
}
?>
"
AGsAQ372,zad3_html,ppiso,HTML,Wednesday 6th of March 2024 01:58:31 PM CDT,"<!DOCTYPE html>
<html lang=""pl"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Kalkulator wieku</title>
</head>
<body>
    <h1>Kalkulator wieku</h1>
    <form action=""operacja.php"" method=""post"">
        <label for=""birthdate"">Data urodzenia:</label>
        <input type=""date"" id=""birthdate"" name=""birthdate"" required><br>
        <input type=""submit"" value=""Oblicz wiek"">
    </form>
</body>
</html>
"
gHN5NPSN,zad2_php,ppiso,PHP,Wednesday 6th of March 2024 01:55:44 PM CDT,"<?php
if ($_SERVER[""REQUEST_METHOD""] == ""POST"") {
    $userText = $_POST[""userText""];
    $operation = $_POST[""operation""];

    switch ($operation) {
        case ""lowercase"":
            $result = strtolower($userText);
            break;
        case ""uppercase"":
            $result = strtoupper($userText);
            break;
        case ""length"":
            $result = strlen($userText);
            break;
        default:
            $result = ""Nieprawidłowa operacja."";
    }

    echo ""Wynik operacji: $result"";
}
?>
"
xqza2ZPg,zad2_html,ppiso,HTML,Wednesday 6th of March 2024 01:54:59 PM CDT,"<!DOCTYPE html>
<html lang=""pl"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Kalkulator tekstu</title>
</head>
<body>
    <h1>Kalkulator tekstu</h1>
    <form action=""operacja.php"" method=""post"">
        <label for=""userText"">Wprowadź tekst:</label>
        <textarea id=""userText"" name=""userText"" rows=""4"" cols=""50"" required></textarea><br>
        <label for=""operation"">Wybierz operację:</label>
        <select id=""operation"" name=""operation"">
            <option value=""lowercase"">Zamień na małe litery</option>
            <option value=""uppercase"">Zamień na duże litery</option>
            <option value=""length"">Długość tekstu</option>
        </select><br>
        <input type=""submit"" value=""Wykonaj operację"">
    </form>
</body>
</html>
"
vK2BgAyF,zad1_php,ppiso,PHP,Wednesday 6th of March 2024 01:47:32 PM CDT,"<?php
if ($_SERVER[""REQUEST_METHOD""] == ""POST"") {
    $date1 = $_POST[""date1""];
    $date2 = $_POST[""date2""];

    // Tworzenie obiektów DateTime
    $dateTime1 = new DateTime($date1);
    $dateTime2 = new DateTime($date2);

    // Obliczanie różnicy w godzinach
    $interval = $dateTime1->diff($dateTime2);
    $hours = $interval->h + ($interval->days * 24);

    // Wyświetlanie wyniku
    echo ""Różnica między datami wynosi: $hours godzin."";
}
?>
"
qVYv39Xi,zad1_html,ppiso,HTML,Wednesday 6th of March 2024 01:47:01 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Kalkulator różnicy dat</title>
</head>
<body>
    <h1>Kalkulator różnicy dat</h1>
    <form action=""kalkulator.php"" method=""post"">
        <label for=""date1"">Data 1:</label>
        <input type=""datetime-local"" id=""date1"" name=""date1"" required><br>
        <label for=""date2"">Data 2:</label>
        <input type=""datetime-local"" id=""date2"" name=""date2"" required><br>
        <input type=""submit"" value=""Oblicz różnicę"">
    </form>
</body>
</html>
"
mxdR7EU1,del sr mode on exit connected output,Ri0n,Bash,Wednesday 6th of March 2024 01:43:23 PM CDT,"#!/bin/bash
#
output=$(xrandr | grep -o '.* connected' | awk '{print $1}')
xrandr --listModes | grep 'SR-1_' | awk '{print $2}' | while read -r mode; do
    xrandr --delmode ""$output"" ""$mode""
done
"
ZMiqEqU6,Nigerian scammers [6-3-3/2024],bombaires,AIMMS,Wednesday 6th of March 2024 01:28:59 PM CDT,"<a href=""mailto:mrguterres098@gmail.com"">mrguterres098@gmail.com</a>
<a href=""mailto:m.r.gu.terr.e.s.098@gmail.com"">m.r.gu.terr.e.s.098@gmail.com</a>
<a href=""mailto:mr.gu.te.rr.es0.9.8@gmail.com"">mr.gu.te.rr.es0.9.8@gmail.com</a>
<a href=""mailto:m.r.gu.te.r.re.s098@gmail.com"">m.r.gu.te.r.re.s098@gmail.com</a>
<a href=""mailto:m.rgu.ter.re.s.098@gmail.com"">m.rgu.ter.re.s.098@gmail.com</a>
<a href=""mailto:mrgu.t.er.res0.9.8@gmail.com"">mrgu.t.er.res0.9.8@gmail.com</a>
<a href=""mailto:m.rg.uter.r.es098@gmail.com"">m.rg.uter.r.es098@gmail.com</a>
<a href=""mailto:m.rguterr.es.0.9.8@gmail.com"">m.rguterr.es.0.9.8@gmail.com</a>
<a href=""mailto:mrg.u.ter.r.es.098@gmail.com"">mrg.u.ter.r.es.098@gmail.com</a>
<a href=""mailto:mr.gute.r.re.s098@gmail.com"">mr.gute.r.re.s098@gmail.com</a>
<a href=""mailto:mr.g.ut.e.rres09.8@gmail.com"">mr.g.ut.e.rres09.8@gmail.com</a>
<a href=""mailto:mr.g.ut.err.e.s.098@gmail.com"">mr.g.ut.err.e.s.098@gmail.com</a>
<a href=""mailto:m.rguterres.0.98@gmail.com"">m.rguterres.0.98@gmail.com</a>
<a href=""mailto:mr.guter.r.es0.98@gmail.com"">mr.guter.r.es0.98@gmail.com</a>
<a href=""mailto:mr.gut.e.rr.es.09.8@gmail.com"">mr.gut.e.rr.es.09.8@gmail.com</a>
<a href=""mailto:m.r.g.ut.err.es098@gmail.com"">m.r.g.ut.err.es098@gmail.com</a>
<a href=""mailto:m.rguter.res098@gmail.com"">m.rguter.res098@gmail.com</a>
<a href=""mailto:m.r.g.u.ter.r.es.0.9.8@gmail.com"">m.r.g.u.ter.r.es.0.9.8@gmail.com</a>
<a href=""mailto:m.r.g.u.te.rre.s0.9.8@gmail.com"">m.r.g.u.te.rre.s0.9.8@gmail.com</a>
<a href=""mailto:mrg.u.te.r.r.es.0.9.8@gmail.com"">mrg.u.te.r.r.es.0.9.8@gmail.com</a>
<a href=""mailto:m.rgute.r.re.s09.8@gmail.com"">m.rgute.r.re.s09.8@gmail.com</a>
<a href=""mailto:m.rgu.t.erre.s0.9.8@gmail.com"">m.rgu.t.erre.s0.9.8@gmail.com</a>
<a href=""mailto:mr.g.u.te.rr.e.s.0.98@gmail.com"">mr.g.u.te.rr.e.s.0.98@gmail.com</a>
<a href=""mailto:mr.gut.e.r.res0.9.8@gmail.com"">mr.gut.e.r.res0.9.8@gmail.com</a>
<a href=""mailto:m.rg.u.t.e.r.re.s0.98@gmail.com"">m.rg.u.t.e.r.re.s0.98@gmail.com</a>
<a href=""mailto:mr.gu.te.rre.s.0.98@gmail.com"">mr.gu.te.rre.s.0.98@gmail.com</a>
<a href=""mailto:mrguter.r.e.s.0.98@gmail.com"">mrguter.r.e.s.0.98@gmail.com</a>
<a href=""mailto:m.rg.uterr.es0.98@gmail.com"">m.rg.uterr.es0.98@gmail.com</a>
<a href=""mailto:m.r.guterr.e.s0.9.8@gmail.com"">m.r.guterr.e.s0.9.8@gmail.com</a>
<a href=""mailto:m.rgu.t.er.r.es09.8@gmail.com"">m.rgu.t.er.r.es09.8@gmail.com</a>
<a href=""mailto:m.rgu.t.erres098@gmail.com"">m.rgu.t.erres098@gmail.com</a>
<a href=""mailto:m.rgut.e.r.res.0.98@gmail.com"">m.rgut.e.r.res.0.98@gmail.com</a>
<a href=""mailto:m.rgut.e.r.res0.9.8@gmail.com"">m.rgut.e.r.res0.9.8@gmail.com</a>
<a href=""mailto:mr.g.uterres.0.98@gmail.com"">mr.g.uterres.0.98@gmail.com</a>
<a href=""mailto:m.rg.ut.e.r.re.s09.8@gmail.com"">m.rg.ut.e.r.re.s09.8@gmail.com</a>
<a href=""mailto:m.rgut.err.es09.8@gmail.com"">m.rgut.err.es09.8@gmail.com</a>
<a href=""mailto:mr.gu.t.e.rre.s.0.9.8@gmail.com"">mr.gu.t.e.rre.s.0.9.8@gmail.com</a>
<a href=""mailto:mrg.u.t.erres.0.9.8@gmail.com"">mrg.u.t.erres.0.9.8@gmail.com</a>
<a href=""mailto:m.r.gu.t.er.res0.98@gmail.com"">m.r.gu.t.er.res0.98@gmail.com</a>
<a href=""mailto:m.rgu.t.e.r.r.e.s.09.8@gmail.com"">m.rgu.t.e.r.r.e.s.09.8@gmail.com</a>
<a href=""mailto:m.r.g.uter.r.es098@gmail.com"">m.r.g.uter.r.es098@gmail.com</a>
<a href=""mailto:m.r.g.u.te.rr.es098@gmail.com"">m.r.g.u.te.rr.es098@gmail.com</a>
<a href=""mailto:mrgu.ter.r.es09.8@gmail.com"">mrgu.ter.r.es09.8@gmail.com</a>
<a href=""mailto:mrg.ut.erre.s.0.9.8@gmail.com"">mrg.ut.erre.s.0.9.8@gmail.com</a>
<a href=""mailto:mr.g.ut.er.re.s0.98@gmail.com"">mr.g.ut.er.re.s0.98@gmail.com</a>
<a href=""mailto:mrgu.terres0.9.8@gmail.com"">mrgu.terres0.9.8@gmail.com</a>
<a href=""mailto:mr.g.u.t.erres.0.98@gmail.com"">mr.g.u.t.erres.0.98@gmail.com</a>
<a href=""mailto:mrgu.t.e.rr.es098@gmail.com"">mrgu.t.e.rr.es098@gmail.com</a>
<a href=""mailto:m.r.g.ut.e.r.res098@gmail.com"">m.r.g.ut.e.r.res098@gmail.com</a>
<a href=""mailto:mrgute.rr.es0.98@gmail.com"">mrgute.rr.es0.98@gmail.com</a>
<a href=""mailto:mrgute.r.r.e.s09.8@gmail.com"">mrgute.r.r.e.s09.8@gmail.com</a>
<a href=""mailto:m.r.g.ute.rr.e.s.09.8@gmail.com"">m.r.g.ute.rr.e.s.09.8@gmail.com</a>
<a href=""mailto:mr.gut.e.rr.e.s09.8@gmail.com"">mr.gut.e.rr.e.s09.8@gmail.com</a>
<a href=""mailto:mrg.ut.e.rres.0.9.8@gmail.com"">mrg.ut.e.rres.0.9.8@gmail.com</a>
<a href=""mailto:mr.g.uterres0.98@gmail.com"">mr.g.uterres0.98@gmail.com</a>
<a href=""mailto:m.r.gute.rr.e.s.09.8@gmail.com"">m.r.gute.rr.e.s.09.8@gmail.com</a>
<a href=""mailto:m.r.gu.te.rr.es.0.98@gmail.com"">m.r.gu.te.rr.es.0.98@gmail.com</a>
<a href=""mailto:m.r.g.u.terr.es098@gmail.com"">m.r.g.u.terr.es098@gmail.com</a>
<a href=""mailto:mrg.u.te.r.re.s09.8@gmail.com"">mrg.u.te.r.re.s09.8@gmail.com</a>
<a href=""mailto:m.r.gu.t.er.re.s.0.9.8@gmail.com"">m.r.gu.t.er.re.s.0.9.8@gmail.com</a>
<a href=""mailto:mr.g.ute.r.re.s0.98@gmail.com"">mr.g.ute.r.re.s0.98@gmail.com</a>
<a href=""mailto:mrg.u.ter.re.s.0.9.8@gmail.com"">mrg.u.ter.re.s.0.9.8@gmail.com</a>
<a href=""mailto:m.r.g.ute.r.r.es098@gmail.com"">m.r.g.ute.r.r.es098@gmail.com</a>
<a href=""mailto:mrg.ute.rre.s.09.8@gmail.com"">mrg.ute.rre.s.09.8@gmail.com</a>
<a href=""mailto:mr.g.ut.e.rres.09.8@gmail.com"">mr.g.ut.e.rres.09.8@gmail.com</a>
<a href=""mailto:m.r.gu.t.e.rre.s.09.8@gmail.com"">m.r.gu.t.e.rre.s.09.8@gmail.com</a>
<a href=""mailto:mr.gut.e.r.r.e.s.0.9.8@gmail.com"">mr.gut.e.r.r.e.s.0.9.8@gmail.com</a>
<a href=""mailto:mr.g.u.te.rres0.9.8@gmail.com"">mr.g.u.te.rres0.9.8@gmail.com</a>
<a href=""mailto:m.rgu.te.r.re.s0.98@gmail.com"">m.rgu.te.r.re.s0.98@gmail.com</a>
<a href=""mailto:mrg.ute.rres0.9.8@gmail.com"">mrg.ute.rres0.9.8@gmail.com</a>
<a href=""mailto:mr.gu.t.e.rr.e.s09.8@gmail.com"">mr.gu.t.e.rr.e.s09.8@gmail.com</a>
<a href=""mailto:mrgut.er.r.e.s0.9.8@gmail.com"">mrgut.er.r.e.s0.9.8@gmail.com</a>
<a href=""mailto:m.rgut.err.e.s0.9.8@gmail.com"">m.rgut.err.e.s0.9.8@gmail.com</a>
<a href=""mailto:mrgut.e.rr.es098@gmail.com"">mrgut.e.rr.es098@gmail.com</a>
<a href=""mailto:mrg.u.ter.res0.98@gmail.com"">mrg.u.ter.res0.98@gmail.com</a>
<a href=""mailto:mrguter.res.0.9.8@gmail.com"">mrguter.res.0.9.8@gmail.com</a>
<a href=""mailto:mr.g.ute.rr.e.s09.8@gmail.com"">mr.g.ute.rr.e.s09.8@gmail.com</a>
<a href=""mailto:mr.gu.t.err.es0.98@gmail.com"">mr.gu.t.err.es0.98@gmail.com</a>
<a href=""mailto:m.r.g.u.ter.r.e.s09.8@gmail.com"">m.r.g.u.ter.r.e.s09.8@gmail.com</a>
<a href=""mailto:mrg.ut.e.r.r.e.s.09.8@gmail.com"">mrg.ut.e.r.r.e.s.09.8@gmail.com</a>
<a href=""mailto:m.r.g.u.terr.e.s09.8@gmail.com"">m.r.g.u.terr.e.s09.8@gmail.com</a>
<a href=""mailto:m.rg.u.t.er.re.s0.9.8@gmail.com"">m.rg.u.t.er.re.s0.9.8@gmail.com</a>
<a href=""mailto:m.rg.u.t.er.res.09.8@gmail.com"">m.rg.u.t.er.res.09.8@gmail.com</a>
<a href=""mailto:mrgu.ter.r.es.0.9.8@gmail.com"">mrgu.ter.r.es.0.9.8@gmail.com</a>
<a href=""mailto:mr.gute.r.res09.8@gmail.com"">mr.gute.r.res09.8@gmail.com</a>
<a href=""mailto:m.rgute.r.r.es.0.98@gmail.com"">m.rgute.r.r.es.0.98@gmail.com</a>
<a href=""mailto:mr.gute.r.r.e.s.0.9.8@gmail.com"">mr.gute.r.r.e.s.0.9.8@gmail.com</a>
<a href=""mailto:m.r.gut.e.r.r.e.s098@gmail.com"">m.r.gut.e.r.r.e.s098@gmail.com</a>
<a href=""mailto:mrg.ute.r.r.es.09.8@gmail.com"">mrg.ute.r.r.es.09.8@gmail.com</a>
<a href=""mailto:m.rgu.t.er.r.es098@gmail.com"">m.rgu.t.er.r.es098@gmail.com</a>
<a href=""mailto:m.r.guter.re.s0.9.8@gmail.com"">m.r.guter.re.s0.9.8@gmail.com</a>
<a href=""mailto:mrgu.t.erres.098@gmail.com"">mrgu.t.erres.098@gmail.com</a>
<a href=""mailto:mr.g.uter.res09.8@gmail.com"">mr.g.uter.res09.8@gmail.com</a>
<a href=""mailto:mrguterres.0.98@gmail.com"">mrguterres.0.98@gmail.com</a>
<a href=""mailto:m.r.gu.t.err.e.s098@gmail.com"">m.r.gu.t.err.e.s098@gmail.com</a>
<a href=""mailto:m.r.gute.r.r.es09.8@gmail.com"">m.r.gute.r.r.es09.8@gmail.com</a>
<a href=""mailto:mrgu.te.rr.es.0.98@gmail.com"">mrgu.te.rr.es.0.98@gmail.com</a>
<a href=""mailto:m.r.g.ute.r.re.s09.8@gmail.com"">m.r.g.ute.r.re.s09.8@gmail.com</a>
<a href=""mailto:mrgu.ter.r.e.s0.9.8@gmail.com"">mrgu.ter.r.e.s0.9.8@gmail.com</a>
<a href=""mailto:mrguterre.s0.98@gmail.com"">mrguterre.s0.98@gmail.com</a>
<a href=""mailto:m.r.gu.terres0.9.8@gmail.com"">m.r.gu.terres0.9.8@gmail.com</a>
<a href=""mailto:mr.g.ute.rr.e.s0.98@gmail.com"">mr.g.ute.rr.e.s0.98@gmail.com</a>
<a href=""mailto:mrg.u.ter.re.s.09.8@gmail.com"">mrg.u.ter.re.s.09.8@gmail.com</a>
<a href=""mailto:mrgut.e.rr.es0.9.8@gmail.com"">mrgut.e.rr.es0.9.8@gmail.com</a>
<a href=""mailto:mrg.ute.rres.09.8@gmail.com"">mrg.ute.rres.09.8@gmail.com</a>
<a href=""mailto:m.rg.uter.re.s098@gmail.com"">m.rg.uter.re.s098@gmail.com</a>
<a href=""mailto:mr.g.uter.re.s098@gmail.com"">mr.g.uter.re.s098@gmail.com</a>
<a href=""mailto:m.rg.ute.r.r.e.s0.98@gmail.com"">m.rg.ute.r.r.e.s0.98@gmail.com</a>
<a href=""mailto:mrgu.terr.e.s.09.8@gmail.com"">mrgu.terr.e.s.09.8@gmail.com</a>
<a href=""mailto:m.r.guter.re.s.0.9.8@gmail.com"">m.r.guter.re.s.0.9.8@gmail.com</a>
<a href=""mailto:mrguterre.s.0.9.8@gmail.com"">mrguterre.s.0.9.8@gmail.com</a>
<a href=""mailto:m.rg.uter.res.0.9.8@gmail.com"">m.rg.uter.res.0.9.8@gmail.com</a>
<a href=""mailto:mr.g.u.t.e.rres.0.9.8@gmail.com"">mr.g.u.t.e.rres.0.9.8@gmail.com</a>
<a href=""mailto:m.rg.uterre.s0.9.8@gmail.com"">m.rg.uterre.s0.9.8@gmail.com</a>
<a href=""mailto:mrgu.terre.s0.9.8@gmail.com"">mrgu.terre.s0.9.8@gmail.com</a>
<a href=""mailto:mrg.u.t.e.rr.es.09.8@gmail.com"">mrg.u.t.e.rr.es.09.8@gmail.com</a>
<a href=""mailto:mrg.uter.r.e.s0.9.8@gmail.com"">mrg.uter.r.e.s0.9.8@gmail.com</a>
<a href=""mailto:mrg.ute.r.r.es.0.9.8@gmail.com"">mrg.ute.r.r.es.0.9.8@gmail.com</a>
<a href=""mailto:mr.gu.t.e.rre.s.0.98@gmail.com"">mr.gu.t.e.rre.s.0.98@gmail.com</a>
<a href=""mailto:mrg.u.t.er.r.es0.98@gmail.com"">mrg.u.t.er.r.es0.98@gmail.com</a>
<a href=""mailto:m.rg.ute.rres0.98@gmail.com"">m.rg.ute.rres0.98@gmail.com</a>
<a href=""mailto:m.rgu.terr.e.s.098@gmail.com"">m.rgu.terr.e.s.098@gmail.com</a>
<a href=""mailto:mrgu.te.r.res0.98@gmail.com"">mrgu.te.r.res0.98@gmail.com</a>
<a href=""mailto:mrgu.t.erres098@gmail.com"">mrgu.t.erres098@gmail.com</a>
<a href=""mailto:m.rg.u.te.r.r.es0.9.8@gmail.com"">m.rg.u.te.r.r.es0.9.8@gmail.com</a>
<a href=""mailto:m.rgu.t.err.e.s09.8@gmail.com"">m.rgu.t.err.e.s09.8@gmail.com</a>
<a href=""mailto:m.r.gu.ter.r.es098@gmail.com"">m.r.gu.ter.r.es098@gmail.com</a>
<a href=""mailto:m.rg.ut.e.rr.e.s.098@gmail.com"">m.rg.ut.e.rr.e.s.098@gmail.com</a>
<a href=""mailto:m.rgu.te.r.r.e.s09.8@gmail.com"">m.rgu.te.r.r.e.s09.8@gmail.com</a>
<a href=""mailto:mr.gu.t.er.r.es098@gmail.com"">mr.gu.t.er.r.es098@gmail.com</a>
<a href=""mailto:m.rgu.ter.re.s.0.98@gmail.com"">m.rgu.ter.re.s.0.98@gmail.com</a>
<a href=""mailto:m.rg.uter.re.s.098@gmail.com"">m.rg.uter.re.s.098@gmail.com</a>
<a href=""mailto:m.rgu.terres.0.98@gmail.com"">m.rgu.terres.0.98@gmail.com</a>
<a href=""mailto:m.r.g.u.t.er.r.e.s.0.98@gmail.com"">m.r.g.u.t.er.r.e.s.0.98@gmail.com</a>
<a href=""mailto:m.rguter.r.es.0.98@gmail.com"">m.rguter.r.es.0.98@gmail.com</a>
<a href=""mailto:mrg.u.t.e.r.r.e.s09.8@gmail.com"">mrg.u.t.e.r.r.e.s09.8@gmail.com</a>
<a href=""mailto:m.r.g.u.t.e.r.res.09.8@gmail.com"">m.r.g.u.t.e.r.res.09.8@gmail.com</a>
<a href=""mailto:m.rgut.e.rr.es.09.8@gmail.com"">m.rgut.e.rr.es.09.8@gmail.com</a>
<a href=""mailto:mrgu.te.r.r.e.s.09.8@gmail.com"">mrgu.te.r.r.e.s.09.8@gmail.com</a>
<a href=""mailto:mrgu.t.e.r.res.0.9.8@gmail.com"">mrgu.t.e.r.res.0.9.8@gmail.com</a>
<a href=""mailto:m.r.g.ute.rr.es.0.98@gmail.com"">m.r.g.ute.rr.es.0.98@gmail.com</a>
<a href=""mailto:mr.g.uter.r.es.09.8@gmail.com"">mr.g.uter.r.es.09.8@gmail.com</a>
<a href=""mailto:mr.g.ute.r.r.e.s.09.8@gmail.com"">mr.g.ute.r.r.e.s.09.8@gmail.com</a>
<a href=""mailto:m.r.g.u.t.e.r.res.0.98@gmail.com"">m.r.g.u.t.e.r.res.0.98@gmail.com</a>
<a href=""mailto:mr.g.u.t.err.e.s0.9.8@gmail.com"">mr.g.u.t.err.e.s0.9.8@gmail.com</a>
<a href=""mailto:m.r.gu.t.e.rres0.9.8@gmail.com"">m.r.gu.t.e.rres0.9.8@gmail.com</a>
<a href=""mailto:mrg.ute.rr.es098@gmail.com"">mrg.ute.rr.es098@gmail.com</a>
<a href=""mailto:mr.g.u.ter.re.s.0.9.8@gmail.com"">mr.g.u.ter.re.s.0.9.8@gmail.com</a>
<a href=""mailto:m.rg.u.t.er.res.0.9.8@gmail.com"">m.rg.u.t.er.res.0.9.8@gmail.com</a>
<a href=""mailto:mrg.ut.er.res.09.8@gmail.com"">mrg.ut.er.res.09.8@gmail.com</a>
<a href=""mailto:mrgute.r.re.s.0.9.8@gmail.com"">mrgute.r.re.s.0.9.8@gmail.com</a>
<a href=""mailto:mr.gu.ter.r.es0.98@gmail.com"">mr.gu.ter.r.es0.98@gmail.com</a>
<a href=""mailto:m.r.g.ut.er.r.es.098@gmail.com"">m.r.g.ut.er.r.es.098@gmail.com</a>
<a href=""mailto:m.r.gut.erres.0.9.8@gmail.com"">m.r.gut.erres.0.9.8@gmail.com</a>
<a href=""mailto:m.r.gut.er.r.e.s0.98@gmail.com"">m.r.gut.er.r.e.s0.98@gmail.com</a>
<a href=""mailto:mrgu.te.rr.es09.8@gmail.com"">mrgu.te.rr.es09.8@gmail.com</a>
<a href=""mailto:m.r.g.u.t.e.r.re.s098@gmail.com"">m.r.g.u.t.e.r.re.s098@gmail.com</a>
<a href=""mailto:mrg.u.t.e.rr.es.0.9.8@gmail.com"">mrg.u.t.e.rr.es.0.9.8@gmail.com</a>
<a href=""mailto:mrg.ut.e.rr.es09.8@gmail.com"">mrg.ut.e.rr.es09.8@gmail.com</a>
<a href=""mailto:m.r.g.uter.res.09.8@gmail.com"">m.r.g.uter.res.09.8@gmail.com</a>
<a href=""mailto:m.r.g.ute.rr.e.s.098@gmail.com"">m.r.g.ute.rr.e.s.098@gmail.com</a>
<a href=""mailto:m.rguterres.098@gmail.com"">m.rguterres.098@gmail.com</a>
<a href=""mailto:m.r.gu.t.er.res098@gmail.com"">m.r.gu.t.er.res098@gmail.com</a>
<a href=""mailto:mr.gute.r.r.es0.98@gmail.com"">mr.gute.r.r.es0.98@gmail.com</a>
<a href=""mailto:mrg.u.te.r.res098@gmail.com"">mrg.u.te.r.res098@gmail.com</a>
<a href=""mailto:m.rgu.te.r.r.es.0.98@gmail.com"">m.rgu.te.r.r.es.0.98@gmail.com</a>
<a href=""mailto:mr.g.ut.e.r.res0.98@gmail.com"">mr.g.ut.e.r.res0.98@gmail.com</a>
<a href=""mailto:mr.g.ute.r.res0.9.8@gmail.com"">mr.g.ute.r.res0.9.8@gmail.com</a>
<a href=""mailto:m.r.g.uterr.es.09.8@gmail.com"">m.r.g.uterr.es.09.8@gmail.com</a>
<a href=""mailto:mrgu.terr.e.s.0.98@gmail.com"">mrgu.terr.e.s.0.98@gmail.com</a>
<a href=""mailto:mr.gu.t.e.rr.es0.9.8@gmail.com"">mr.gu.t.e.rr.es0.9.8@gmail.com</a>
<a href=""mailto:mrgu.t.er.res098@gmail.com"">mrgu.t.er.res098@gmail.com</a>
<a href=""mailto:m.r.g.u.t.e.r.r.e.s.0.98@gmail.com"">m.r.g.u.t.e.r.r.e.s.0.98@gmail.com</a>
<a href=""mailto:mrgu.t.e.r.r.e.s.0.9.8@gmail.com"">mrgu.t.e.r.r.e.s.0.9.8@gmail.com</a>
<a href=""mailto:m.r.gut.e.r.r.e.s0.9.8@gmail.com"">m.r.gut.e.r.r.e.s0.9.8@gmail.com</a>
<a href=""mailto:m.rguter.r.e.s.0.98@gmail.com"">m.rguter.r.e.s.0.98@gmail.com</a>
<a href=""mailto:m.rg.ute.rre.s0.98@gmail.com"">m.rg.ute.rre.s0.98@gmail.com</a>
<a href=""mailto:mrg.uter.r.e.s09.8@gmail.com"">mrg.uter.r.e.s09.8@gmail.com</a>
<a href=""mailto:m.rgute.r.res0.9.8@gmail.com"">m.rgute.r.res0.9.8@gmail.com</a>
<a href=""mailto:m.rg.u.t.err.es.0.9.8@gmail.com"">m.rg.u.t.err.es.0.9.8@gmail.com</a>
<a href=""mailto:m.r.g.u.ter.r.es.0.98@gmail.com"">m.r.g.u.ter.r.es.0.98@gmail.com</a>
<a href=""mailto:m.rg.ut.e.rr.e.s0.98@gmail.com"">m.rg.ut.e.rr.e.s0.98@gmail.com</a>
<a href=""mailto:mrgu.te.r.res.0.98@gmail.com"">mrgu.te.r.res.0.98@gmail.com</a>
<a href=""mailto:mr.gu.te.rres0.9.8@gmail.com"">mr.gu.te.rres0.9.8@gmail.com</a>
<a href=""mailto:mrg.ut.er.r.es09.8@gmail.com"">mrg.ut.er.r.es09.8@gmail.com</a>
<a href=""mailto:mr.gut.e.r.r.e.s09.8@gmail.com"">mr.gut.e.r.r.e.s09.8@gmail.com</a>
<a href=""mailto:mr.g.ut.er.r.es.09.8@gmail.com"">mr.g.ut.er.r.es.09.8@gmail.com</a>
<a href=""mailto:m.rg.ut.e.rres09.8@gmail.com"">m.rg.ut.e.rres09.8@gmail.com</a>
<a href=""mailto:mr.g.u.t.e.rr.e.s.0.9.8@gmail.com"">mr.g.u.t.e.rr.e.s.0.9.8@gmail.com</a>
<a href=""mailto:mrg.u.terres09.8@gmail.com"">mrg.u.terres09.8@gmail.com</a>
<a href=""mailto:mr.g.ute.rr.es.09.8@gmail.com"">mr.g.ute.rr.es.09.8@gmail.com</a>
<a href=""mailto:m.rg.u.t.e.r.re.s.0.98@gmail.com"">m.rg.u.t.e.r.re.s.0.98@gmail.com</a>
<a href=""mailto:m.r.g.u.terr.e.s.09.8@gmail.com"">m.r.g.u.terr.e.s.09.8@gmail.com</a>
<a href=""mailto:mrg.ut.e.r.r.e.s.0.98@gmail.com"">mrg.ut.e.r.r.e.s.0.98@gmail.com</a>
<a href=""mailto:m.r.gute.r.res0.98@gmail.com"">m.r.gute.r.res0.98@gmail.com</a>
<a href=""mailto:m.rgut.err.es.0.98@gmail.com"">m.rgut.err.es.0.98@gmail.com</a>
<a href=""mailto:m.r.g.u.t.erre.s.09.8@gmail.com"">m.r.g.u.t.erre.s.09.8@gmail.com</a>
<a href=""mailto:m.r.g.ut.err.es.09.8@gmail.com"">m.r.g.ut.err.es.09.8@gmail.com</a>
<a href=""mailto:mrgu.t.e.rres.0.98@gmail.com"">mrgu.t.e.rres.0.98@gmail.com</a>
<a href=""mailto:mrgut.e.r.r.es.0.9.8@gmail.com"">mrgut.e.r.r.es.0.9.8@gmail.com</a>
<a href=""mailto:m.rgut.err.es.098@gmail.com"">m.rgut.err.es.098@gmail.com</a>
<a href=""mailto:vanjohnson764@gmail.com"">vanjohnson764@gmail.com</a>
<a href=""mailto:va.n.j.o.h.n.s.on76.4@gmail.com"">va.n.j.o.h.n.s.on76.4@gmail.com</a>
<a href=""mailto:v.anj.ohn.s.o.n7.6.4@gmail.com"">v.anj.ohn.s.o.n7.6.4@gmail.com</a>
<a href=""mailto:v.a.n.j.o.h.ns.o.n7.64@gmail.com"">v.a.n.j.o.h.ns.o.n7.64@gmail.com</a>
<a href=""mailto:van.jo.hn.so.n.7.6.4@gmail.com"">van.jo.hn.so.n.7.6.4@gmail.com</a>
<a href=""mailto:vanj.oh.n.s.on.764@gmail.com"">vanj.oh.n.s.on.764@gmail.com</a>
<a href=""mailto:v.an.jo.h.n.so.n76.4@gmail.com"">v.an.jo.h.n.so.n76.4@gmail.com</a>
<a href=""mailto:va.n.jo.hns.o.n.7.6.4@gmail.com"">va.n.jo.hns.o.n.7.6.4@gmail.com</a>
<a href=""mailto:v.a.n.joh.n.s.o.n.764@gmail.com"">v.a.n.joh.n.s.o.n.764@gmail.com</a>
<a href=""mailto:va.n.joh.ns.on764@gmail.com"">va.n.joh.ns.on764@gmail.com</a>
<a href=""mailto:va.n.j.oh.nso.n7.6.4@gmail.com"">va.n.j.oh.nso.n7.6.4@gmail.com</a>
<a href=""mailto:v.a.n.jo.hn.son764@gmail.com"">v.a.n.jo.hn.son764@gmail.com</a>
<a href=""mailto:van.johns.on76.4@gmail.com"">van.johns.on76.4@gmail.com</a>
<a href=""mailto:v.a.n.j.o.h.n.son764@gmail.com"">v.a.n.j.o.h.n.son764@gmail.com</a>
<a href=""mailto:va.njo.h.n.son7.6.4@gmail.com"">va.njo.h.n.son7.6.4@gmail.com</a>
<a href=""mailto:va.nj.o.hn.s.on.764@gmail.com"">va.nj.o.hn.s.on.764@gmail.com</a>
<a href=""mailto:van.jo.hns.on.7.6.4@gmail.com"">van.jo.hns.on.7.6.4@gmail.com</a>
<a href=""mailto:v.anj.oh.n.so.n7.6.4@gmail.com"">v.anj.oh.n.so.n7.6.4@gmail.com</a>
<a href=""mailto:v.anjoh.n.s.on7.6.4@gmail.com"">v.anjoh.n.s.on7.6.4@gmail.com</a>
<a href=""mailto:vanj.o.hns.on7.6.4@gmail.com"">vanj.o.hns.on7.6.4@gmail.com</a>
<a href=""mailto:v.a.njo.h.nson.7.6.4@gmail.com"">v.a.njo.h.nson.7.6.4@gmail.com</a>
<a href=""mailto:van.john.so.n7.64@gmail.com"">van.john.so.n7.64@gmail.com</a>
<a href=""mailto:van.jo.hnso.n7.64@gmail.com"">van.jo.hnso.n7.64@gmail.com</a>
<a href=""mailto:vanjohn.so.n7.64@gmail.com"">vanjohn.so.n7.64@gmail.com</a>
<a href=""mailto:v.anj.o.h.n.son.7.64@gmail.com"">v.anj.o.h.n.son.7.64@gmail.com</a>
<a href=""mailto:v.an.jo.h.ns.o.n.7.64@gmail.com"">v.an.jo.h.ns.o.n.7.64@gmail.com</a>
<a href=""mailto:v.a.nj.o.h.ns.on.7.6.4@gmail.com"">v.a.nj.o.h.ns.on.7.6.4@gmail.com</a>
<a href=""mailto:v.an.john.so.n76.4@gmail.com"">v.an.john.so.n76.4@gmail.com</a>
<a href=""mailto:van.j.oh.n.so.n.7.64@gmail.com"">van.j.oh.n.so.n.7.64@gmail.com</a>
<a href=""mailto:v.a.njohn.so.n7.64@gmail.com"">v.a.njohn.so.n7.64@gmail.com</a>
<a href=""mailto:v.a.n.j.ohnso.n.764@gmail.com"">v.a.n.j.ohnso.n.764@gmail.com</a>
<a href=""mailto:v.an.joh.n.s.o.n7.64@gmail.com"">v.an.joh.n.s.o.n7.64@gmail.com</a>
<a href=""mailto:v.a.nj.o.hnson7.6.4@gmail.com"">v.a.nj.o.hnson7.6.4@gmail.com</a>
<a href=""mailto:van.j.o.hns.o.n7.6.4@gmail.com"">van.j.o.hns.o.n7.6.4@gmail.com</a>
<a href=""mailto:v.a.njo.hn.s.on.7.64@gmail.com"">v.a.njo.hn.s.on.7.64@gmail.com</a>
<a href=""mailto:vanjo.hn.s.o.n76.4@gmail.com"">vanjo.hn.s.o.n76.4@gmail.com</a>
<a href=""mailto:va.nj.o.hn.s.o.n76.4@gmail.com"">va.nj.o.hn.s.o.n76.4@gmail.com</a>
<a href=""mailto:v.a.njoh.ns.o.n.7.64@gmail.com"">v.a.njoh.ns.o.n.7.64@gmail.com</a>
<a href=""mailto:va.n.j.o.h.ns.o.n764@gmail.com"">va.n.j.o.h.ns.o.n764@gmail.com</a>
<a href=""mailto:v.anjohns.on764@gmail.com"">v.anjohns.on764@gmail.com</a>
<a href=""mailto:va.njoh.ns.on76.4@gmail.com"">va.njoh.ns.on76.4@gmail.com</a>
<a href=""mailto:vanjoh.n.so.n7.6.4@gmail.com"">vanjoh.n.so.n7.6.4@gmail.com</a>
<a href=""mailto:v.a.njo.hn.so.n.7.64@gmail.com"">v.a.njo.hn.so.n.7.64@gmail.com</a>
<a href=""mailto:v.a.njohn.s.o.n.7.6.4@gmail.com"">v.a.njohn.s.o.n.7.6.4@gmail.com</a>
<a href=""mailto:v.a.njo.h.ns.on.764@gmail.com"">v.a.njo.h.ns.on.764@gmail.com</a>
<a href=""mailto:v.a.n.joh.n.s.on764@gmail.com"">v.a.n.joh.n.s.on764@gmail.com</a>
<a href=""mailto:v.anjohns.o.n.7.6.4@gmail.com"">v.anjohns.o.n.7.6.4@gmail.com</a>
<a href=""mailto:v.a.nj.ohns.on.7.6.4@gmail.com"">v.a.nj.ohns.on.7.6.4@gmail.com</a>
<a href=""mailto:v.anjo.h.n.s.on.764@gmail.com"">v.anjo.h.n.s.on.764@gmail.com</a>
<a href=""mailto:vanjo.h.ns.on.764@gmail.com"">vanjo.h.ns.on.764@gmail.com</a>
<a href=""mailto:van.jo.hnson764@gmail.com"">van.jo.hnson764@gmail.com</a>
<a href=""mailto:v.a.njo.hn.son7.6.4@gmail.com"">v.a.njo.hn.son7.6.4@gmail.com</a>
<a href=""mailto:va.n.jo.hn.s.on.7.64@gmail.com"">va.n.jo.hn.s.on.7.64@gmail.com</a>
<a href=""mailto:v.an.jo.hn.so.n7.6.4@gmail.com"">v.an.jo.hn.so.n7.6.4@gmail.com</a>
<a href=""mailto:van.j.o.h.nso.n.7.64@gmail.com"">van.j.o.h.nso.n.7.64@gmail.com</a>
<a href=""mailto:va.n.joh.n.son.7.6.4@gmail.com"">va.n.joh.n.son.7.6.4@gmail.com</a>
<a href=""mailto:vanjo.h.n.s.on76.4@gmail.com"">vanjo.h.n.s.on76.4@gmail.com</a>
<a href=""mailto:v.a.njohn.s.o.n.7.64@gmail.com"">v.a.njohn.s.o.n.7.64@gmail.com</a>
<a href=""mailto:vanj.ohn.s.on.764@gmail.com"">vanj.ohn.s.on.764@gmail.com</a>
<a href=""mailto:v.anjoh.n.son764@gmail.com"">v.anjoh.n.son764@gmail.com</a>
<a href=""mailto:v.an.j.oh.n.son7.6.4@gmail.com"">v.an.j.oh.n.son7.6.4@gmail.com</a>
<a href=""mailto:va.njo.hnson.764@gmail.com"">va.njo.hnson.764@gmail.com</a>
<a href=""mailto:van.j.oh.nso.n764@gmail.com"">van.j.oh.nso.n764@gmail.com</a>
<a href=""mailto:va.n.j.o.h.ns.on.76.4@gmail.com"">va.n.j.o.h.ns.on.76.4@gmail.com</a>
<a href=""mailto:v.an.j.ohnso.n7.6.4@gmail.com"">v.an.j.ohnso.n7.6.4@gmail.com</a>
<a href=""mailto:va.n.j.o.hnso.n.76.4@gmail.com"">va.n.j.o.hnso.n.76.4@gmail.com</a>
<a href=""mailto:v.anj.o.hn.son.764@gmail.com"">v.anj.o.hn.son.764@gmail.com</a>
<a href=""mailto:v.a.nj.oh.n.son764@gmail.com"">v.a.nj.oh.n.son764@gmail.com</a>
<a href=""mailto:v.anj.o.h.n.so.n.76.4@gmail.com"">v.anj.o.h.n.so.n.76.4@gmail.com</a>
<a href=""mailto:v.a.n.jo.h.ns.on.764@gmail.com"">v.a.n.jo.h.ns.on.764@gmail.com</a>
<a href=""mailto:van.j.oh.n.s.on.7.64@gmail.com"">van.j.oh.n.s.on.7.64@gmail.com</a>
<a href=""mailto:va.nj.oh.n.s.o.n76.4@gmail.com"">va.nj.oh.n.s.o.n76.4@gmail.com</a>
<a href=""mailto:v.a.nj.o.h.ns.on7.64@gmail.com"">v.a.nj.o.h.ns.on7.64@gmail.com</a>
<a href=""mailto:va.njo.hn.s.o.n.764@gmail.com"">va.njo.hn.s.o.n.764@gmail.com</a>
<a href=""mailto:v.anj.oh.n.s.o.n.7.64@gmail.com"">v.anj.oh.n.s.o.n.7.64@gmail.com</a>
<a href=""mailto:v.a.n.jo.h.ns.o.n7.6.4@gmail.com"">v.a.n.jo.h.ns.o.n7.6.4@gmail.com</a>
<a href=""mailto:v.a.n.joh.nson.7.6.4@gmail.com"">v.a.n.joh.nson.7.6.4@gmail.com</a>
<a href=""mailto:va.n.jo.h.nso.n764@gmail.com"">va.n.jo.h.nso.n764@gmail.com</a>
<a href=""mailto:v.anjo.h.n.s.o.n.7.6.4@gmail.com"">v.anjo.h.n.s.o.n.7.6.4@gmail.com</a>
<a href=""mailto:van.j.o.hns.o.n764@gmail.com"">van.j.o.hns.o.n764@gmail.com</a>
<a href=""mailto:v.anj.oh.n.so.n.7.6.4@gmail.com"">v.anj.oh.n.so.n.7.6.4@gmail.com</a>
<a href=""mailto:v.an.john.s.on76.4@gmail.com"">v.an.john.s.on76.4@gmail.com</a>
<a href=""mailto:v.an.j.o.h.ns.on764@gmail.com"">v.an.j.o.h.ns.on764@gmail.com</a>
<a href=""mailto:van.john.s.o.n.7.6.4@gmail.com"">van.john.s.o.n.7.6.4@gmail.com</a>
<a href=""mailto:v.anj.oh.nso.n764@gmail.com"">v.anj.oh.nso.n764@gmail.com</a>
<a href=""mailto:v.anj.o.hn.s.on76.4@gmail.com"">v.anj.o.hn.s.on76.4@gmail.com</a>
<a href=""mailto:vanj.o.hn.son7.64@gmail.com"">vanj.o.hn.son7.64@gmail.com</a>
<a href=""mailto:va.njo.h.nso.n.76.4@gmail.com"">va.njo.h.nso.n.76.4@gmail.com</a>
<a href=""mailto:va.nj.ohn.s.on7.64@gmail.com"">va.nj.ohn.s.on7.64@gmail.com</a>
<a href=""mailto:v.a.n.j.o.h.n.son76.4@gmail.com"">v.a.n.j.o.h.n.son76.4@gmail.com</a>
<a href=""mailto:van.johnso.n.76.4@gmail.com"">van.johnso.n.76.4@gmail.com</a>
<a href=""mailto:v.a.nj.o.hns.on.7.6.4@gmail.com"">v.a.nj.o.hns.on.7.6.4@gmail.com</a>
<a href=""mailto:va.njoh.nson.764@gmail.com"">va.njoh.nson.764@gmail.com</a>
<a href=""mailto:v.a.n.j.oh.ns.on764@gmail.com"">v.a.n.j.oh.ns.on764@gmail.com</a>
<a href=""mailto:va.n.j.ohn.s.on764@gmail.com"">va.n.j.ohn.s.on764@gmail.com</a>
<a href=""mailto:v.an.j.o.hnson7.64@gmail.com"">v.an.j.o.hnson7.64@gmail.com</a>
<a href=""mailto:va.n.johnso.n.7.64@gmail.com"">va.n.johnso.n.7.64@gmail.com</a>
<a href=""mailto:v.a.n.johnso.n7.64@gmail.com"">v.a.n.johnso.n7.64@gmail.com</a>
<a href=""mailto:v.a.nj.ohnso.n7.64@gmail.com"">v.a.nj.ohnso.n7.64@gmail.com</a>
<a href=""mailto:va.n.j.oh.n.s.on.7.6.4@gmail.com"">va.n.j.oh.n.s.on.7.6.4@gmail.com</a>
<a href=""mailto:va.n.john.son76.4@gmail.com"">va.n.john.son76.4@gmail.com</a>
<a href=""mailto:v.anjo.hns.on7.64@gmail.com"">v.anjo.hns.on7.64@gmail.com</a>
<a href=""mailto:v.an.j.o.hns.on.76.4@gmail.com"">v.an.j.o.hns.on.76.4@gmail.com</a>
<a href=""mailto:va.n.johnson7.6.4@gmail.com"">va.n.johnson7.6.4@gmail.com</a>
<a href=""mailto:van.joh.nson764@gmail.com"">van.joh.nson764@gmail.com</a>
<a href=""mailto:vanjo.h.n.son.76.4@gmail.com"">vanjo.h.n.son.76.4@gmail.com</a>
<a href=""mailto:va.n.joh.n.s.o.n.7.6.4@gmail.com"">va.n.joh.n.s.o.n.7.6.4@gmail.com</a>
<a href=""mailto:va.nj.oh.n.son.76.4@gmail.com"">va.nj.oh.n.son.76.4@gmail.com</a>
<a href=""mailto:va.nj.oh.n.so.n7.6.4@gmail.com"">va.nj.oh.n.so.n7.6.4@gmail.com</a>
<a href=""mailto:va.nj.oh.n.s.o.n7.64@gmail.com"">va.nj.oh.n.s.o.n7.64@gmail.com</a>
<a href=""mailto:va.njoh.n.s.on.7.64@gmail.com"">va.njoh.n.s.on.7.64@gmail.com</a>
<a href=""mailto:vanjo.hn.s.o.n7.6.4@gmail.com"">vanjo.hn.s.o.n7.6.4@gmail.com</a>
<a href=""mailto:v.an.j.oh.n.s.o.n764@gmail.com"">v.an.j.oh.n.s.o.n764@gmail.com</a>
<a href=""mailto:va.n.j.o.h.ns.o.n76.4@gmail.com"">va.n.j.o.h.ns.o.n76.4@gmail.com</a>
<a href=""mailto:v.anjo.h.n.son.76.4@gmail.com"">v.anjo.h.n.son.76.4@gmail.com</a>
<a href=""mailto:va.n.j.o.h.n.son7.6.4@gmail.com"">va.n.j.o.h.n.son7.6.4@gmail.com</a>
<a href=""mailto:va.n.j.o.hn.s.o.n.7.6.4@gmail.com"">va.n.j.o.hn.s.o.n.7.6.4@gmail.com</a>
<a href=""mailto:van.joh.n.s.o.n.7.6.4@gmail.com"">van.joh.n.s.o.n.7.6.4@gmail.com</a>
<a href=""mailto:va.nj.o.hn.son7.6.4@gmail.com"">va.nj.o.hn.son7.6.4@gmail.com</a>
<a href=""mailto:v.a.n.john.son7.6.4@gmail.com"">v.a.n.john.son7.6.4@gmail.com</a>
<a href=""mailto:v.anj.ohn.s.on.7.6.4@gmail.com"">v.anj.ohn.s.on.7.6.4@gmail.com</a>
<a href=""mailto:vanjohn.son764@gmail.com"">vanjohn.son764@gmail.com</a>
<a href=""mailto:vanjoh.n.son.7.64@gmail.com"">vanjoh.n.son.7.64@gmail.com</a>
<a href=""mailto:v.a.nj.ohnson764@gmail.com"">v.a.nj.ohnson764@gmail.com</a>
<a href=""mailto:van.j.o.hns.on.76.4@gmail.com"">van.j.o.hns.on.76.4@gmail.com</a>
<a href=""mailto:va.nj.ohn.s.o.n764@gmail.com"">va.nj.ohn.s.o.n764@gmail.com</a>
<a href=""mailto:v.an.joh.n.s.o.n.7.64@gmail.com"">v.an.joh.n.s.o.n.7.64@gmail.com</a>
<a href=""mailto:va.n.joh.n.son.764@gmail.com"">va.n.joh.n.son.764@gmail.com</a>
<a href=""mailto:v.an.j.o.hnso.n.764@gmail.com"">v.an.j.o.hnso.n.764@gmail.com</a>
<a href=""mailto:v.a.njoh.nson.7.64@gmail.com"">v.a.njoh.nson.7.64@gmail.com</a>
<a href=""mailto:v.an.j.oh.n.s.on7.64@gmail.com"">v.an.j.oh.n.s.on7.64@gmail.com</a>
<a href=""mailto:va.n.joh.nson764@gmail.com"">va.n.joh.nson764@gmail.com</a>
<a href=""mailto:van.johnso.n.764@gmail.com"">van.johnso.n.764@gmail.com</a>
<a href=""mailto:v.anj.ohns.on.76.4@gmail.com"">v.anj.ohns.on.76.4@gmail.com</a>
<a href=""mailto:va.nj.o.h.nso.n.764@gmail.com"">va.nj.o.h.nso.n.764@gmail.com</a>
<a href=""mailto:va.n.john.s.o.n.7.64@gmail.com"">va.n.john.s.o.n.7.64@gmail.com</a>
<a href=""mailto:v.anj.oh.nso.n7.64@gmail.com"">v.anj.oh.nso.n7.64@gmail.com</a>
<a href=""mailto:van.jo.hn.so.n76.4@gmail.com"">van.jo.hn.so.n76.4@gmail.com</a>
<a href=""mailto:v.a.n.j.ohnso.n7.6.4@gmail.com"">v.a.n.j.ohnso.n7.6.4@gmail.com</a>
<a href=""mailto:vanj.o.h.ns.o.n764@gmail.com"">vanj.o.h.ns.o.n764@gmail.com</a>
<a href=""mailto:v.anjo.h.nso.n.764@gmail.com"">v.anjo.h.nso.n.764@gmail.com</a>
<a href=""mailto:v.anj.ohn.so.n76.4@gmail.com"">v.anj.ohn.so.n76.4@gmail.com</a>
<a href=""mailto:va.n.joh.n.s.o.n7.6.4@gmail.com"">va.n.joh.n.s.o.n7.6.4@gmail.com</a>
<a href=""mailto:va.n.john.so.n.76.4@gmail.com"">va.n.john.so.n.76.4@gmail.com</a>
<a href=""mailto:van.john.so.n.764@gmail.com"">van.john.so.n.764@gmail.com</a>
<a href=""mailto:va.n.j.o.hnson.7.6.4@gmail.com"">va.n.j.o.hnson.7.6.4@gmail.com</a>
<a href=""mailto:va.n.j.o.hns.on.7.64@gmail.com"">va.n.j.o.hns.on.7.64@gmail.com</a>
<a href=""mailto:vanjoh.nson.76.4@gmail.com"">vanjoh.nson.76.4@gmail.com</a>
<a href=""mailto:v.an.jo.h.n.s.on7.64@gmail.com"">v.an.jo.h.n.s.on7.64@gmail.com</a>
<a href=""mailto:va.n.j.ohn.s.on7.6.4@gmail.com"">va.n.j.ohn.s.on7.6.4@gmail.com</a>
<a href=""mailto:va.n.jo.h.nson.7.6.4@gmail.com"">va.n.jo.h.nson.7.6.4@gmail.com</a>
<a href=""mailto:v.a.n.j.o.hnson.764@gmail.com"">v.a.n.j.o.hnson.764@gmail.com</a>
<a href=""mailto:v.a.n.j.oh.n.so.n.76.4@gmail.com"">v.a.n.j.oh.n.so.n.76.4@gmail.com</a>
<a href=""mailto:va.n.j.o.h.nson76.4@gmail.com"">va.n.j.o.h.nson76.4@gmail.com</a>
<a href=""mailto:v.anjo.h.n.s.o.n764@gmail.com"">v.anjo.h.n.s.o.n764@gmail.com</a>
<a href=""mailto:va.nj.oh.n.so.n.7.64@gmail.com"">va.nj.oh.n.so.n.7.64@gmail.com</a>
<a href=""mailto:v.an.jo.hn.so.n.7.6.4@gmail.com"">v.an.jo.hn.so.n.7.6.4@gmail.com</a>
<a href=""mailto:v.anj.oh.n.son.7.64@gmail.com"">v.anj.oh.n.son.7.64@gmail.com</a>
<a href=""mailto:v.anj.ohns.o.n7.64@gmail.com"">v.anj.ohns.o.n7.64@gmail.com</a>
<a href=""mailto:van.jo.h.ns.o.n.7.6.4@gmail.com"">van.jo.h.ns.o.n.7.6.4@gmail.com</a>
<a href=""mailto:v.a.n.j.ohnso.n7.64@gmail.com"">v.a.n.j.ohnso.n7.64@gmail.com</a>
<a href=""mailto:va.n.j.o.hns.o.n7.64@gmail.com"">va.n.j.o.hns.o.n7.64@gmail.com</a>
<a href=""mailto:vanjo.h.ns.o.n7.64@gmail.com"">vanjo.h.ns.o.n7.64@gmail.com</a>
<a href=""mailto:v.a.n.jo.h.nso.n.7.6.4@gmail.com"">v.a.n.jo.h.nso.n.7.6.4@gmail.com</a>
<a href=""mailto:v.anj.ohnso.n764@gmail.com"">v.anj.ohnso.n764@gmail.com</a>
<a href=""mailto:v.an.joh.ns.o.n.7.6.4@gmail.com"">v.an.joh.ns.o.n.7.6.4@gmail.com</a>
<a href=""mailto:v.anj.ohn.son7.64@gmail.com"">v.anj.ohn.son7.64@gmail.com</a>
<a href=""mailto:va.nj.o.hn.son.7.64@gmail.com"">va.nj.o.hn.son.7.64@gmail.com</a>
<a href=""mailto:va.nj.o.h.ns.o.n.764@gmail.com"">va.nj.o.h.ns.o.n.764@gmail.com</a>
<a href=""mailto:va.nj.ohn.s.o.n.76.4@gmail.com"">va.nj.ohn.s.o.n.76.4@gmail.com</a>
<a href=""mailto:va.nj.o.hns.o.n.76.4@gmail.com"">va.nj.o.hns.o.n.76.4@gmail.com</a>
<a href=""mailto:vanjoh.nso.n.7.64@gmail.com"">vanjoh.nso.n.7.64@gmail.com</a>
<a href=""mailto:van.j.oh.n.son.76.4@gmail.com"">van.j.oh.n.son.76.4@gmail.com</a>
<a href=""mailto:vanjohnso.n7.6.4@gmail.com"">vanjohnso.n7.6.4@gmail.com</a>
<a href=""mailto:v.a.n.j.o.hns.on.76.4@gmail.com"">v.a.n.j.o.hns.on.76.4@gmail.com</a>
<a href=""mailto:v.a.njoh.n.so.n.76.4@gmail.com"">v.a.njoh.n.so.n.76.4@gmail.com</a>
<a href=""mailto:v.anj.oh.n.son764@gmail.com"">v.anj.oh.n.son764@gmail.com</a>
<a href=""mailto:vanj.ohn.so.n764@gmail.com"">vanj.ohn.so.n764@gmail.com</a>
<a href=""mailto:va.nj.o.h.ns.on7.64@gmail.com"">va.nj.o.h.ns.on7.64@gmail.com</a>
<a href=""mailto:v.a.nj.o.hn.s.on.7.64@gmail.com"">v.a.nj.o.hn.s.on.7.64@gmail.com</a>
<a href=""mailto:va.njo.h.n.s.on76.4@gmail.com"">va.njo.h.n.s.on76.4@gmail.com</a>
<a href=""mailto:van.j.oh.n.so.n7.6.4@gmail.com"">van.j.oh.n.so.n7.6.4@gmail.com</a>
<a href=""mailto:va.n.j.oh.n.so.n7.64@gmail.com"">va.n.j.oh.n.so.n7.64@gmail.com</a>
<a href=""mailto:v.anj.o.hnso.n.7.6.4@gmail.com"">v.anj.o.hnso.n.7.6.4@gmail.com</a>
<a href=""mailto:v.a.n.jo.hns.o.n.764@gmail.com"">v.a.n.jo.hns.o.n.764@gmail.com</a>
<a href=""mailto:v.anjo.h.ns.on.7.64@gmail.com"">v.anjo.h.ns.on.7.64@gmail.com</a>
<a href=""mailto:v.a.n.j.o.hn.s.on764@gmail.com"">v.a.n.j.o.hn.s.on764@gmail.com</a>
<a href=""mailto:vanj.oh.n.so.n7.6.4@gmail.com"">vanj.oh.n.so.n7.6.4@gmail.com</a>
<a href=""mailto:v.an.j.o.hn.s.o.n.76.4@gmail.com"">v.an.j.o.hn.s.o.n.76.4@gmail.com</a>
<a href=""mailto:van.joh.ns.o.n7.64@gmail.com"">van.joh.ns.o.n7.64@gmail.com</a>
<a href=""mailto:va.n.j.o.hn.son.764@gmail.com"">va.n.j.o.hn.son.764@gmail.com</a>
<a href=""mailto:va.n.jo.h.ns.on76.4@gmail.com"">va.n.jo.h.ns.on76.4@gmail.com</a>
<a href=""mailto:v.a.nj.o.hn.s.o.n.764@gmail.com"">v.a.nj.o.hn.s.o.n.764@gmail.com</a>
<a href=""mailto:va.njo.hn.s.on764@gmail.com"">va.njo.hn.s.on764@gmail.com</a>
<a href=""mailto:v.anjo.hn.s.o.n764@gmail.com"">v.anjo.hn.s.o.n764@gmail.com</a>
<a href=""mailto:va.njo.hns.on764@gmail.com"">va.njo.hns.on764@gmail.com</a>
<a href=""mailto:vanj.ohn.so.n.76.4@gmail.com"">vanj.ohn.so.n.76.4@gmail.com</a>
<a href=""mailto:van.j.oh.n.s.on.76.4@gmail.com"">van.j.oh.n.s.on.76.4@gmail.com</a>
<a href=""mailto:v.anjoh.ns.o.n7.6.4@gmail.com"">v.anjoh.ns.o.n7.6.4@gmail.com</a>
<a href=""mailto:v.an.j.o.h.n.s.on.764@gmail.com"">v.an.j.o.h.n.s.on.764@gmail.com</a>
<a href=""mailto:vanjo.h.n.s.o.n7.64@gmail.com"">vanjo.h.n.s.o.n7.64@gmail.com</a>
<a href=""mailto:rbrianmoynihan0167@gmail.com"">rbrianmoynihan0167@gmail.com</a>
<a href=""mailto:rbr.ia.nmo.ynih.a.n01.67@gmail.com"">rbr.ia.nmo.ynih.a.n01.67@gmail.com</a>
<a href=""mailto:rb.r.i.a.n.moy.n.ih.an.0.1.67@gmail.com"">rb.r.i.a.n.moy.n.ih.an.0.1.67@gmail.com</a>
<a href=""mailto:r.b.rianmo.y.ni.ha.n0.16.7@gmail.com"">r.b.rianmo.y.ni.ha.n0.16.7@gmail.com</a>
<a href=""mailto:rbr.i.an.mo.yni.h.a.n.01.67@gmail.com"">rbr.i.an.mo.yni.h.a.n.01.67@gmail.com</a>
<a href=""mailto:rb.r.ia.nm.o.y.ni.h.a.n.01.67@gmail.com"">rb.r.ia.nm.o.y.ni.h.a.n.01.67@gmail.com</a>
<a href=""mailto:rbr.i.a.n.moyn.iha.n.0167@gmail.com"">rbr.i.a.n.moyn.iha.n.0167@gmail.com</a>
<a href=""mailto:r.bri.anm.oyn.ihan.016.7@gmail.com"">r.bri.anm.oyn.ihan.016.7@gmail.com</a>
<a href=""mailto:rb.ri.anm.o.y.n.iha.n0.167@gmail.com"">rb.ri.anm.o.y.n.iha.n0.167@gmail.com</a>
<a href=""mailto:r.b.rian.m.o.y.ni.ha.n01.6.7@gmail.com"">r.b.rian.m.o.y.ni.ha.n01.6.7@gmail.com</a>
<a href=""mailto:rb.ri.an.mo.yn.ih.an.016.7@gmail.com"">rb.ri.an.mo.yn.ih.an.016.7@gmail.com</a>
<a href=""mailto:rb.r.i.a.nm.oyn.iha.n0.16.7@gmail.com"">rb.r.i.a.nm.oyn.iha.n0.16.7@gmail.com</a>
<a href=""mailto:rb.r.i.anmoy.ni.h.a.n01.67@gmail.com"">rb.r.i.anmoy.ni.h.a.n01.67@gmail.com</a>
<a href=""mailto:r.b.ri.anmo.y.n.ih.a.n0.167@gmail.com"">r.b.ri.anmo.y.n.ih.a.n0.167@gmail.com</a>
<a href=""mailto:rbri.a.n.m.o.y.nih.a.n.0.16.7@gmail.com"">rbri.a.n.m.o.y.nih.a.n.0.16.7@gmail.com</a>
<a href=""mailto:r.b.ria.nm.o.y.nih.an.0.167@gmail.com"">r.b.ria.nm.o.y.nih.an.0.167@gmail.com</a>
<a href=""mailto:rb.r.ianm.o.yniha.n01.67@gmail.com"">rb.r.ianm.o.yniha.n01.67@gmail.com</a>
<a href=""mailto:r.b.r.i.a.nmo.y.nihan.0.1.6.7@gmail.com"">r.b.r.i.a.nmo.y.nihan.0.1.6.7@gmail.com</a>
<a href=""mailto:r.b.ria.nmoyn.ih.a.n.0.16.7@gmail.com"">r.b.ria.nmoyn.ih.a.n.0.16.7@gmail.com</a>
<a href=""mailto:rbr.i.a.n.mo.yni.h.an01.67@gmail.com"">rbr.i.a.n.mo.yni.h.an01.67@gmail.com</a>
<a href=""mailto:rb.r.ia.nm.oynih.an.0.16.7@gmail.com"">rb.r.ia.nm.oynih.an.0.16.7@gmail.com</a>
<a href=""mailto:rb.ri.an.mo.y.nih.an0.1.6.7@gmail.com"">rb.ri.an.mo.y.nih.an0.1.6.7@gmail.com</a>
<a href=""mailto:rb.ri.a.n.mo.yn.i.ha.n.0167@gmail.com"">rb.ri.a.n.mo.yn.i.ha.n.0167@gmail.com</a>
<a href=""mailto:r.b.ri.a.n.moy.n.iha.n.0.1.67@gmail.com"">r.b.ri.a.n.moy.n.iha.n.0.1.67@gmail.com</a>
<a href=""mailto:rbri.a.nmo.yn.i.h.an0.1.67@gmail.com"">rbri.a.nmo.yn.i.h.an0.1.67@gmail.com</a>
<a href=""mailto:r.b.ria.n.mo.y.n.ih.an01.67@gmail.com"">r.b.ria.n.mo.y.n.ih.an01.67@gmail.com</a>
<a href=""mailto:r.brian.m.oy.n.i.ha.n016.7@gmail.com"">r.brian.m.oy.n.i.ha.n016.7@gmail.com</a>
<a href=""mailto:rb.r.ian.m.o.y.n.ihan.0.16.7@gmail.com"">rb.r.ian.m.o.y.n.ihan.0.16.7@gmail.com</a>
<a href=""mailto:r.br.ianmoy.ni.h.an0.167@gmail.com"">r.br.ianmoy.ni.h.an0.167@gmail.com</a>
<a href=""mailto:r.br.ia.nm.oy.n.iha.n.0167@gmail.com"">r.br.ia.nm.oy.n.iha.n.0167@gmail.com</a>
<a href=""mailto:rbr.i.an.mo.y.n.i.ha.n.0.1.6.7@gmail.com"">rbr.i.an.mo.y.n.i.ha.n.0.1.6.7@gmail.com</a>
<a href=""mailto:rb.ri.a.nmoynih.a.n01.6.7@gmail.com"">rb.ri.a.nmoynih.a.n01.6.7@gmail.com</a>
<a href=""mailto:rbria.n.mo.y.n.ih.a.n.0.1.6.7@gmail.com"">rbria.n.mo.y.n.ih.a.n.0.1.6.7@gmail.com</a>
<a href=""mailto:rbr.ianmoy.nihan0.1.67@gmail.com"">rbr.ianmoy.nihan0.1.67@gmail.com</a>
<a href=""mailto:r.br.ia.nmoyn.ih.a.n0.1.67@gmail.com"">r.br.ia.nmoyn.ih.a.n0.1.67@gmail.com</a>
<a href=""mailto:r.b.ria.n.m.o.y.n.i.h.a.n0167@gmail.com"">r.b.ria.n.m.o.y.n.i.h.a.n0167@gmail.com</a>
<a href=""mailto:rb.r.i.anmoyn.i.han.0167@gmail.com"">rb.r.i.anmoyn.i.han.0167@gmail.com</a>
<a href=""mailto:r.brianm.oynih.a.n.0.16.7@gmail.com"">r.brianm.oynih.a.n.0.16.7@gmail.com</a>
<a href=""mailto:r.br.i.anmo.y.n.i.han.0.1.6.7@gmail.com"">r.br.i.anmo.y.n.i.han.0.1.6.7@gmail.com</a>
<a href=""mailto:rb.ri.a.nmoy.n.iha.n01.67@gmail.com"">rb.ri.a.nmoy.n.iha.n01.67@gmail.com</a>
<a href=""mailto:r.b.r.i.anmoyn.i.h.an01.67@gmail.com"">r.b.r.i.anmoyn.i.h.an01.67@gmail.com</a>
<a href=""mailto:r.bria.nm.oy.nih.a.n.016.7@gmail.com"">r.bria.nm.oy.nih.a.n.016.7@gmail.com</a>
<a href=""mailto:r.bri.a.n.m.oyniha.n01.67@gmail.com"">r.bri.a.n.m.oyniha.n01.67@gmail.com</a>
<a href=""mailto:rbr.ia.nmo.y.n.i.h.a.n.01.6.7@gmail.com"">rbr.ia.nmo.y.n.i.h.a.n.01.6.7@gmail.com</a>
<a href=""mailto:rb.r.ianmoy.n.iha.n01.6.7@gmail.com"">rb.r.ianmoy.n.iha.n01.6.7@gmail.com</a>
<a href=""mailto:r.br.ia.nmoy.nihan0.1.67@gmail.com"">r.br.ia.nmoy.nihan0.1.67@gmail.com</a>
<a href=""mailto:rbri.a.n.m.oyni.h.an0167@gmail.com"">rbri.a.n.m.oyni.h.an0167@gmail.com</a>
<a href=""mailto:r.b.ri.an.m.oy.n.ihan.016.7@gmail.com"">r.b.ri.an.m.oy.n.ihan.016.7@gmail.com</a>
<a href=""mailto:r.br.ianmoy.n.ihan0.167@gmail.com"">r.br.ianmoy.n.ihan0.167@gmail.com</a>
<a href=""mailto:rb.rianmoy.n.i.h.a.n0167@gmail.com"">rb.rianmoy.n.i.h.a.n0167@gmail.com</a>
<a href=""mailto:rb.r.i.anmoy.n.i.ha.n0.167@gmail.com"">rb.r.i.anmoy.n.i.ha.n0.167@gmail.com</a>
<a href=""mailto:r.brianm.oy.n.ihan01.67@gmail.com"">r.brianm.oy.n.ihan01.67@gmail.com</a>
<a href=""mailto:r.br.ianmo.yn.i.ha.n.0.167@gmail.com"">r.br.ianmo.yn.i.ha.n.0.167@gmail.com</a>
<a href=""mailto:r.br.ia.n.m.o.ynihan01.67@gmail.com"">r.br.ia.n.m.o.ynihan01.67@gmail.com</a>
<a href=""mailto:rbr.ia.nm.o.y.n.ih.a.n.016.7@gmail.com"">rbr.ia.nm.o.y.n.ih.a.n.016.7@gmail.com</a>
<a href=""mailto:r.br.i.an.m.o.y.n.i.h.an016.7@gmail.com"">r.br.i.an.m.o.y.n.i.h.an016.7@gmail.com</a>
<a href=""mailto:r.b.r.ia.nm.oyniha.n016.7@gmail.com"">r.b.r.ia.nm.oyniha.n016.7@gmail.com</a>
<a href=""mailto:r.br.i.a.nm.oynih.a.n016.7@gmail.com"">r.br.i.a.nm.oynih.a.n016.7@gmail.com</a>
<a href=""mailto:rbrian.moyniha.n.01.6.7@gmail.com"">rbrian.moyniha.n.01.6.7@gmail.com</a>
<a href=""mailto:r.brian.mo.yniha.n0.1.67@gmail.com"">r.brian.mo.yniha.n0.1.67@gmail.com</a>
<a href=""mailto:rb.rianmoy.ni.h.an.0.16.7@gmail.com"">rb.rianmoy.ni.h.an.0.16.7@gmail.com</a>
<a href=""mailto:r.b.r.ia.nm.oy.ni.h.a.n01.67@gmail.com"">r.b.r.ia.nm.oy.ni.h.a.n01.67@gmail.com</a>
<a href=""mailto:rb.r.ia.nmoyn.i.h.an0167@gmail.com"">rb.r.ia.nmoyn.i.h.an0167@gmail.com</a>
<a href=""mailto:rb.rian.m.oy.ni.h.a.n0167@gmail.com"">rb.rian.m.oy.ni.h.a.n0167@gmail.com</a>
<a href=""mailto:rb.ri.a.n.mo.yn.iha.n.01.67@gmail.com"">rb.ri.a.n.mo.yn.iha.n.01.67@gmail.com</a>
<a href=""mailto:r.bria.nmo.ynih.an0.167@gmail.com"">r.bria.nmo.ynih.an0.167@gmail.com</a>
<a href=""mailto:rb.r.i.anm.oy.n.iha.n01.6.7@gmail.com"">rb.r.i.anm.oy.n.iha.n01.6.7@gmail.com</a>
<a href=""mailto:r.b.r.ia.n.mo.ynih.an016.7@gmail.com"">r.b.r.ia.n.mo.ynih.an016.7@gmail.com</a>
<a href=""mailto:r.brianmo.y.n.i.ha.n0167@gmail.com"">r.brianmo.y.n.i.ha.n0167@gmail.com</a>
<a href=""mailto:r.br.i.a.nmo.yn.ih.an0.1.67@gmail.com"">r.br.i.a.nmo.yn.ih.an0.1.67@gmail.com</a>
<a href=""mailto:rb.ri.anm.o.y.n.i.h.an0.1.67@gmail.com"">rb.ri.anm.o.y.n.i.h.an0.1.67@gmail.com</a>
<a href=""mailto:rb.r.i.a.nm.oynihan01.6.7@gmail.com"">rb.r.i.a.nm.oynihan01.6.7@gmail.com</a>
<a href=""mailto:r.bri.anm.o.y.n.i.h.a.n0.16.7@gmail.com"">r.bri.anm.o.y.n.i.h.a.n0.16.7@gmail.com</a>
<a href=""mailto:rb.rianmoyn.ih.a.n0.1.67@gmail.com"">rb.rianmoyn.ih.a.n0.1.67@gmail.com</a>
<a href=""mailto:rbr.ian.mo.y.n.i.h.an.0.1.67@gmail.com"">rbr.ian.mo.y.n.i.h.an.0.1.67@gmail.com</a>
<a href=""mailto:r.b.ria.n.mo.ynih.an0.167@gmail.com"">r.b.ria.n.mo.ynih.an0.167@gmail.com</a>
<a href=""mailto:r.b.ria.nm.oyni.ha.n0.1.67@gmail.com"">r.b.ria.nm.oyni.ha.n0.1.67@gmail.com</a>
<a href=""mailto:rb.r.ia.n.moy.n.ih.an.0.167@gmail.com"">rb.r.ia.n.moy.n.ih.an.0.167@gmail.com</a>
<a href=""mailto:r.bri.an.moy.nihan.0167@gmail.com"">r.bri.an.moy.nihan.0167@gmail.com</a>
<a href=""mailto:rbr.ianmo.y.n.i.han.0167@gmail.com"">rbr.ianmo.y.n.i.han.0167@gmail.com</a>
<a href=""mailto:r.b.ri.an.m.oy.n.i.ha.n01.67@gmail.com"">r.b.ri.an.m.oy.n.i.ha.n01.67@gmail.com</a>
<a href=""mailto:r.bria.nmo.y.niha.n0167@gmail.com"">r.bria.nmo.y.niha.n0167@gmail.com</a>
<a href=""mailto:rbri.anm.o.y.n.ih.a.n0.167@gmail.com"">rbri.anm.o.y.n.ih.a.n0.167@gmail.com</a>
<a href=""mailto:r.bria.nm.oynih.a.n0.167@gmail.com"">r.bria.nm.oynih.a.n0.167@gmail.com</a>
<a href=""mailto:r.br.i.an.m.o.y.n.i.han.0.16.7@gmail.com"">r.br.i.an.m.o.y.n.i.han.0.16.7@gmail.com</a>
<a href=""mailto:rb.r.i.an.moy.niha.n01.67@gmail.com"">rb.r.i.an.moy.niha.n01.67@gmail.com</a>
<a href=""mailto:rb.r.i.an.m.oy.n.i.h.a.n01.67@gmail.com"">rb.r.i.an.m.oy.n.i.h.a.n01.67@gmail.com</a>
<a href=""mailto:r.br.i.a.n.m.oy.n.iha.n016.7@gmail.com"">r.br.i.a.n.m.oy.n.iha.n016.7@gmail.com</a>
<a href=""mailto:r.b.rianmoyn.i.h.a.n.0.1.6.7@gmail.com"">r.b.rianmoyn.i.h.a.n.0.1.6.7@gmail.com</a>
<a href=""mailto:r.bri.anmoy.n.iha.n.01.67@gmail.com"">r.bri.anmoy.n.iha.n.01.67@gmail.com</a>
<a href=""mailto:r.b.ri.anm.o.yni.h.an0.1.6.7@gmail.com"">r.b.ri.anm.o.yni.h.an0.1.6.7@gmail.com</a>
<a href=""mailto:rbrian.m.oy.n.i.han.0.167@gmail.com"">rbrian.m.oy.n.i.han.0.167@gmail.com</a>
<a href=""mailto:rbr.i.a.nmoyn.ih.an0.167@gmail.com"">rbr.i.a.nmoyn.ih.an0.167@gmail.com</a>
<a href=""mailto:rbr.i.a.n.mo.y.ni.h.a.n016.7@gmail.com"">rbr.i.a.n.mo.y.ni.h.a.n016.7@gmail.com</a>
<a href=""mailto:r.br.i.an.m.o.yni.h.a.n.0.1.6.7@gmail.com"">r.br.i.an.m.o.yni.h.a.n.0.1.6.7@gmail.com</a>
<a href=""mailto:rbr.i.a.n.m.o.y.ni.ha.n.0.16.7@gmail.com"">rbr.i.a.n.m.o.y.ni.ha.n.0.16.7@gmail.com</a>
<a href=""mailto:rb.r.ia.nm.oy.n.i.han.0167@gmail.com"">rb.r.ia.nm.oy.n.i.han.0167@gmail.com</a>
<a href=""mailto:rb.rianm.oy.nih.a.n0167@gmail.com"">rb.rianm.oy.nih.a.n0167@gmail.com</a>
<a href=""mailto:r.b.r.ianm.oy.n.ih.an01.67@gmail.com"">r.b.r.ianm.oy.n.ih.an01.67@gmail.com</a>
<a href=""mailto:rb.r.i.a.nm.oyni.h.a.n0167@gmail.com"">rb.r.i.a.nm.oyni.h.a.n0167@gmail.com</a>
<a href=""mailto:r.b.r.i.a.nmo.yni.h.a.n.01.6.7@gmail.com"">r.b.r.i.a.nmo.yni.h.a.n.01.6.7@gmail.com</a>
<a href=""mailto:r.bri.an.mo.yn.i.han016.7@gmail.com"">r.bri.an.mo.yn.i.han016.7@gmail.com</a>
<a href=""mailto:r.b.r.i.a.nm.o.y.n.ih.a.n.0.1.6.7@gmail.com"">r.b.r.i.a.nm.o.y.n.ih.a.n.0.1.6.7@gmail.com</a>
<a href=""mailto:rb.r.i.anmoy.nih.a.n.0.16.7@gmail.com"">rb.r.i.anmoy.nih.a.n.0.16.7@gmail.com</a>
<a href=""mailto:rb.rianm.o.y.n.ih.an01.6.7@gmail.com"">rb.rianm.o.y.n.ih.an01.6.7@gmail.com</a>
<a href=""mailto:rbr.ianm.o.yn.i.han0167@gmail.com"">rbr.ianm.o.yn.i.han0167@gmail.com</a>
<a href=""mailto:rbr.ianm.o.y.ni.ha.n0.167@gmail.com"">rbr.ianm.o.y.ni.ha.n0.167@gmail.com</a>
<a href=""mailto:r.br.i.a.n.moy.n.i.h.a.n.01.67@gmail.com"">r.br.i.a.n.moy.n.i.h.a.n.01.67@gmail.com</a>
<a href=""mailto:r.b.r.ianmo.yni.ha.n.0.1.6.7@gmail.com"">r.b.r.ianmo.yni.ha.n.0.1.6.7@gmail.com</a>
<a href=""mailto:r.b.r.ianm.oy.nih.an.0.16.7@gmail.com"">r.b.r.ianm.oy.nih.an.0.16.7@gmail.com</a>
<a href=""mailto:r.br.ianm.oy.ni.h.an01.67@gmail.com"">r.br.ianm.oy.ni.h.an01.67@gmail.com</a>
<a href=""mailto:r.bri.a.nm.o.y.ni.ha.n.0.167@gmail.com"">r.bri.a.nm.o.y.ni.ha.n.0.167@gmail.com</a>
<a href=""mailto:rbri.a.n.mo.y.niha.n016.7@gmail.com"">rbri.a.n.mo.y.niha.n016.7@gmail.com</a>
<a href=""mailto:r.br.i.anm.oyn.i.h.a.n.0.16.7@gmail.com"">r.br.i.anm.oyn.i.h.a.n.0.16.7@gmail.com</a>
<a href=""mailto:rbr.ian.mo.yn.i.ha.n0.167@gmail.com"">rbr.ian.mo.yn.i.ha.n0.167@gmail.com</a>
<a href=""mailto:r.brianm.o.y.nihan0.1.6.7@gmail.com"">r.brianm.o.y.nihan0.1.6.7@gmail.com</a>
<a href=""mailto:r.b.ri.an.m.oy.n.i.ha.n.01.67@gmail.com"">r.b.ri.an.m.oy.n.i.ha.n.01.67@gmail.com</a>
<a href=""mailto:rb.ria.n.m.oy.niha.n01.67@gmail.com"">rb.ria.n.m.oy.niha.n01.67@gmail.com</a>
<a href=""mailto:r.br.ia.n.m.o.yn.i.h.an.0.1.67@gmail.com"">r.br.ia.n.m.o.yn.i.h.an.0.1.67@gmail.com</a>
<a href=""mailto:rb.ri.a.nm.oyn.ihan.0.1.67@gmail.com"">rb.ri.a.nm.oyn.ihan.0.1.67@gmail.com</a>
<a href=""mailto:r.brianmoyn.iha.n0.1.67@gmail.com"">r.brianmoyn.iha.n0.1.67@gmail.com</a>
<a href=""mailto:r.b.r.i.anmo.yn.iha.n.0.1.6.7@gmail.com"">r.b.r.i.anmo.yn.iha.n.0.1.6.7@gmail.com</a>
<a href=""mailto:rbr.ianmo.yni.han0.16.7@gmail.com"">rbr.ianmo.yni.han0.16.7@gmail.com</a>
<a href=""mailto:rbria.nm.oynih.a.n.016.7@gmail.com"">rbria.nm.oynih.a.n.016.7@gmail.com</a>
<a href=""mailto:rbri.a.nmo.yni.h.an0.167@gmail.com"">rbri.a.nmo.yni.h.an0.167@gmail.com</a>
<a href=""mailto:r.brianmo.yn.i.h.a.n0167@gmail.com"">r.brianmo.yn.i.h.a.n0167@gmail.com</a>
<a href=""mailto:rb.r.i.an.mo.y.n.ih.a.n0167@gmail.com"">rb.r.i.an.mo.y.n.ih.a.n0167@gmail.com</a>
<a href=""mailto:rbr.i.a.n.moy.n.i.ha.n.016.7@gmail.com"">rbr.i.a.n.moy.n.i.ha.n.016.7@gmail.com</a>
<a href=""mailto:rb.ri.a.n.mo.yn.iha.n.0.167@gmail.com"">rb.ri.a.n.mo.yn.iha.n.0.167@gmail.com</a>
<a href=""mailto:rbri.a.nmoy.nihan.0.16.7@gmail.com"">rbri.a.nmoy.nihan.0.16.7@gmail.com</a>
<a href=""mailto:r.b.ri.anm.o.ynih.an.0.1.67@gmail.com"">r.b.ri.anm.o.ynih.an.0.1.67@gmail.com</a>
<a href=""mailto:rbria.n.m.o.y.n.iha.n0.1.67@gmail.com"">rbria.n.m.o.y.n.iha.n0.1.67@gmail.com</a>
<a href=""mailto:rb.r.ianmo.y.ni.ha.n0.167@gmail.com"">rb.r.ianmo.y.ni.ha.n0.167@gmail.com</a>
<a href=""mailto:r.b.rian.mo.yni.han016.7@gmail.com"">r.b.rian.mo.yni.han016.7@gmail.com</a>
<a href=""mailto:r.br.i.a.n.m.oy.n.i.h.a.n.0.1.67@gmail.com"">r.br.i.a.n.m.oy.n.i.h.a.n.0.1.67@gmail.com</a>
<a href=""mailto:rb.ri.a.nm.o.yn.i.h.a.n.01.67@gmail.com"">rb.ri.a.nm.o.yn.i.h.a.n.01.67@gmail.com</a>
<a href=""mailto:rbri.an.mo.y.n.i.han.01.6.7@gmail.com"">rbri.an.mo.y.n.i.han.01.6.7@gmail.com</a>
<a href=""mailto:r.br.ian.mo.yni.ha.n0167@gmail.com"">r.br.ian.mo.yni.ha.n0167@gmail.com</a>
<a href=""mailto:r.brianmoy.n.ihan.0.167@gmail.com"">r.brianmoy.n.ihan.0.167@gmail.com</a>
<a href=""mailto:r.brian.m.oy.ni.han.016.7@gmail.com"">r.brian.m.oy.ni.han.016.7@gmail.com</a>
<a href=""mailto:r.bri.an.m.oy.nihan.016.7@gmail.com"">r.bri.an.m.oy.nihan.016.7@gmail.com</a>
<a href=""mailto:rb.r.ia.nm.oy.n.i.ha.n0.167@gmail.com"">rb.r.ia.nm.oy.n.i.ha.n0.167@gmail.com</a>
<a href=""mailto:r.b.rian.mo.yn.ihan.0167@gmail.com"">r.b.rian.mo.yn.ihan.0167@gmail.com</a>
<a href=""mailto:r.b.r.ian.m.oy.n.i.han.0.167@gmail.com"">r.b.r.ian.m.oy.n.i.han.0.167@gmail.com</a>
<a href=""mailto:rbri.anmo.yni.h.an.01.6.7@gmail.com"">rbri.anmo.yni.h.an.01.6.7@gmail.com</a>
<a href=""mailto:rbr.i.an.moy.nih.a.n0.1.67@gmail.com"">rbr.i.an.moy.nih.a.n0.1.67@gmail.com</a>
<a href=""mailto:rbri.a.nm.o.y.nih.an.0.1.67@gmail.com"">rbri.a.nm.o.y.nih.an.0.1.67@gmail.com</a>
<a href=""mailto:rbr.ian.m.oy.n.i.ha.n.0.1.67@gmail.com"">rbr.ian.m.oy.n.i.ha.n.0.1.67@gmail.com</a>
<a href=""mailto:rb.r.i.an.m.oy.n.i.h.an0.1.6.7@gmail.com"">rb.r.i.an.m.oy.n.i.h.an0.1.6.7@gmail.com</a>
<a href=""mailto:r.b.r.ianmoy.nih.an.0.167@gmail.com"">r.b.r.ianmoy.nih.an.0.167@gmail.com</a>
<a href=""mailto:r.br.ianm.oy.nih.an016.7@gmail.com"">r.br.ianm.oy.nih.an016.7@gmail.com</a>
<a href=""mailto:r.b.r.ia.nmoy.n.ihan016.7@gmail.com"">r.b.r.ia.nmoy.n.ihan016.7@gmail.com</a>
<a href=""mailto:r.b.ri.a.nmoy.n.i.h.an.0.1.67@gmail.com"">r.b.ri.a.nmoy.n.i.h.an.0.1.67@gmail.com</a>
<a href=""mailto:rbr.ia.n.mo.y.n.ih.an0.167@gmail.com"">rbr.ia.n.mo.y.n.ih.an0.167@gmail.com</a>
<a href=""mailto:r.b.ria.n.moy.ni.ha.n0.16.7@gmail.com"">r.b.ria.n.moy.ni.ha.n0.16.7@gmail.com</a>
<a href=""mailto:rb.rian.mo.yn.i.ha.n.0.167@gmail.com"">rb.rian.mo.yn.i.ha.n.0.167@gmail.com</a>
<a href=""mailto:rb.r.ian.mo.ynihan.01.6.7@gmail.com"">rb.r.ian.mo.ynihan.01.6.7@gmail.com</a>
<a href=""mailto:rb.r.i.a.n.m.oyn.i.han0167@gmail.com"">rb.r.i.a.n.m.oyn.i.han0167@gmail.com</a>
<a href=""mailto:rb.rian.m.o.y.ni.h.a.n.01.6.7@gmail.com"">rb.rian.m.o.y.ni.h.a.n.01.6.7@gmail.com</a>
<a href=""mailto:rbria.n.m.oyni.h.an0.1.6.7@gmail.com"">rbria.n.m.oyni.h.an0.1.6.7@gmail.com</a>
<a href=""mailto:r.br.ianm.oy.niha.n0167@gmail.com"">r.br.ianm.oy.niha.n0167@gmail.com</a>
<a href=""mailto:rb.r.ianmoy.ni.h.a.n.0.167@gmail.com"">rb.r.ianmoy.ni.h.a.n.0.167@gmail.com</a>
<a href=""mailto:r.bria.nmoyni.ha.n.0.1.67@gmail.com"">r.bria.nmoyni.ha.n.0.1.67@gmail.com</a>
<a href=""mailto:r.bri.an.m.oy.ni.h.an.0.1.6.7@gmail.com"">r.bri.an.m.oy.ni.h.an.0.1.6.7@gmail.com</a>
<a href=""mailto:r.b.ria.n.m.o.y.niha.n0167@gmail.com"">r.b.ria.n.m.o.y.niha.n0167@gmail.com</a>
<a href=""mailto:rbri.an.mo.ynihan0167@gmail.com"">rbri.an.mo.ynihan0167@gmail.com</a>
<a href=""mailto:rbrianmo.y.nih.a.n.0.167@gmail.com"">rbrianmo.y.nih.a.n.0.167@gmail.com</a>
<a href=""mailto:r.b.ri.an.m.oyn.i.h.an0.1.67@gmail.com"">r.b.ri.an.m.oyn.i.h.an0.1.67@gmail.com</a>
<a href=""mailto:r.b.ria.nmo.y.nihan.0.1.6.7@gmail.com"">r.b.ria.nmo.y.nihan.0.1.6.7@gmail.com</a>
<a href=""mailto:rbr.ian.mo.y.n.i.ha.n0.16.7@gmail.com"">rbr.ian.mo.y.n.i.ha.n0.16.7@gmail.com</a>
<a href=""mailto:rb.r.ianmo.y.n.ihan.0.1.67@gmail.com"">rb.r.ianmo.y.n.ihan.0.1.67@gmail.com</a>
<a href=""mailto:rb.rianm.oyni.han.0.1.6.7@gmail.com"">rb.rianm.oyni.han.0.1.6.7@gmail.com</a>
<a href=""mailto:r.b.r.i.anmo.y.n.i.h.an.0.167@gmail.com"">r.b.r.i.anmo.y.n.i.h.an.0.167@gmail.com</a>
<a href=""mailto:r.brianm.oyni.ha.n.016.7@gmail.com"">r.brianm.oyni.ha.n.016.7@gmail.com</a>
<a href=""mailto:rbr.ian.m.o.y.n.i.h.a.n0167@gmail.com"">rbr.ian.m.o.y.n.i.h.a.n0167@gmail.com</a>
<a href=""mailto:r.br.ia.nmo.y.n.i.h.an0167@gmail.com"">r.br.ia.nmo.y.n.i.h.an0167@gmail.com</a>
<a href=""mailto:r.bri.anm.o.yn.i.han.0.16.7@gmail.com"">r.bri.anm.o.yn.i.han.0.16.7@gmail.com</a>
<a href=""mailto:rbr.i.anm.o.ynihan0.16.7@gmail.com"">rbr.i.anm.o.ynihan0.16.7@gmail.com</a>
<a href=""mailto:r.brian.moyn.ihan0.1.6.7@gmail.com"">r.brian.moyn.ihan0.1.6.7@gmail.com</a>
<a href=""mailto:rb.r.ian.mo.yni.ha.n01.6.7@gmail.com"">rb.r.ian.mo.yni.ha.n01.6.7@gmail.com</a>
<a href=""mailto:rbr.i.anm.o.y.ni.h.a.n.0.16.7@gmail.com"">rbr.i.anm.o.y.ni.h.a.n.0.16.7@gmail.com</a>
<a href=""mailto:r.b.r.ia.nmo.y.ni.ha.n.0.1.6.7@gmail.com"">r.b.r.ia.nmo.y.ni.ha.n.0.1.6.7@gmail.com</a>
<a href=""mailto:r.b.r.i.a.nmoyni.han0.1.67@gmail.com"">r.b.r.i.a.nmoyni.han0.1.67@gmail.com</a>
<a href=""mailto:rbri.a.n.m.oynih.an0.167@gmail.com"">rbri.a.n.m.oynih.an0.167@gmail.com</a>
<a href=""mailto:rb.r.i.an.mo.ynih.an01.67@gmail.com"">rb.r.i.an.mo.ynih.an01.67@gmail.com</a>
<a href=""mailto:r.b.r.i.a.n.moyni.h.an.016.7@gmail.com"">r.b.r.i.a.n.moyni.h.an.016.7@gmail.com</a>
<a href=""mailto:r.b.ri.a.n.m.oy.n.i.han0167@gmail.com"">r.b.ri.a.n.m.oy.n.i.han0167@gmail.com</a>
<a href=""mailto:rbr.i.an.m.o.y.n.i.han.01.67@gmail.com"">rbr.i.an.m.o.y.n.i.han.01.67@gmail.com</a>
<a href=""mailto:r.bria.n.m.oy.n.i.ha.n.0.167@gmail.com"">r.bria.n.m.oy.n.i.ha.n.0.167@gmail.com</a>
<a href=""mailto:rb.ri.a.nmoyn.ih.an.01.67@gmail.com"">rb.ri.a.nmoyn.ih.an.01.67@gmail.com</a>
<a href=""mailto:r.b.ri.a.n.m.o.y.niha.n.01.67@gmail.com"">r.b.ri.a.n.m.o.y.niha.n.01.67@gmail.com</a>
<a href=""mailto:r.b.r.ian.moyn.i.h.an0.16.7@gmail.com"">r.b.r.ian.moyn.i.h.an0.16.7@gmail.com</a>
<a href=""mailto:r.br.i.an.m.o.yn.ih.a.n.0.1.6.7@gmail.com"">r.br.i.an.m.o.yn.ih.a.n.0.1.6.7@gmail.com</a>
<a href=""mailto:r.b.r.ianmo.y.n.i.ha.n0167@gmail.com"">r.b.r.ianmo.y.n.i.ha.n0167@gmail.com</a>
<a href=""mailto:r.bria.nm.o.y.ni.han.0.167@gmail.com"">r.bria.nm.o.y.ni.han.0.167@gmail.com</a>
<a href=""mailto:r.bria.nm.o.y.n.i.h.a.n.0167@gmail.com"">r.bria.nm.o.y.n.i.h.a.n.0167@gmail.com</a>
<a href=""mailto:rbri.anmo.y.ni.ha.n.0.1.6.7@gmail.com"">rbri.anmo.y.ni.ha.n.0.1.6.7@gmail.com</a>
<a href=""mailto:rbrian.m.o.ynihan0.1.67@gmail.com"">rbrian.m.o.ynihan0.1.67@gmail.com</a>
<a href=""mailto:r.bri.anm.o.y.ni.han01.67@gmail.com"">r.bri.anm.o.y.ni.han01.67@gmail.com</a>
<a href=""mailto:rbri.an.m.oyn.ih.a.n0.1.67@gmail.com"">rbri.an.m.oyn.ih.a.n0.1.67@gmail.com</a>
<a href=""mailto:r.br.i.anmoy.ni.ha.n0.167@gmail.com"">r.br.i.anmoy.ni.ha.n0.167@gmail.com</a>"
0c8t3g3N,Bridge,FuturedPanda,Lua,Wednesday 6th of March 2024 01:01:54 PM CDT,"--Set up
turtle.forward()
turtle.turnLeft()
turtle.turnLeft()
turtle.down()


function checkforRack()
    
    
    for i=1,16 do
        
        turtle.select(i)
        local itemDetails=turtle.getItemDetail()
        if itemDetails ~= nill then
            
            if itemDetails.name == ""minecraft:netherrack"" then
                break
            end
            
        end
    end
    
    
end

--Create the Loop
 
for i = 1, 256, 1 do

    while turtle.getFuelLevel() <= 150 do
        print(""Refuel"")
        turtle.refuel()
    end
 	checkforRack()
    turtle.back()
    turtle.place()
    
 	
 
    
end
--Turn 180 Degrees
function TurnAround()
    turtle.turnLeft()
    turtle.turnLeft()    
end

 
 

        
    
            "
qZb1WPEP,Untitled,alexromanelli,Python,Wednesday 6th of March 2024 01:01:41 PM CDT,"# Desenvolver um programa que seja capaz de:
# 1) Ler uma string da entrada padrão, no formato dd/mm/aaaa.
# 2) Exibir a data na saída padrão, no formato dd/mm/aaaa.
# 3) Exibir a data na saída padrão por extenso. Ex.: ""1º de fevereiro de 2024"".
# 4) Verificar se a data é válida.
# 5) Adicionar dias a uma data.
# 6) Calcular a diferença entre duas datas em anos.

def ler_data(texto_data: str) -> tuple[int, int, int]:
    texto_separado = texto_data.split('/')
    dia = int(texto_separado[0])
    mes = int(texto_separado[1])
    ano = int(texto_separado[2])
    data = dia, mes, ano
    return data


def eh_ano_bissexto(a: int) -> bool:
    """"""O ano é bissexto quando:
       1) É múltiplo de 4;
       2) Não é múltiplo de 100, exceto se for múltiplo de 400.""""""
    if a % 4 == 0:
        if a % 100 == 0:
            if a % 400 == 0:
                return True
            return False
        return True
    return False


dias_no_mes = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]


def data_eh_valida(d: int, m: int, a: int) -> bool:
    if 1 <= m <= 12:
        dias = dias_no_mes[m - 1]
        if m == 2 and eh_ano_bissexto(a):
            dias = 29
        if 1 <= d <= dias:
            return True
    return False


def exibir_data(d: int, m: int, a: int) -> None:
    print(f""{d:02d}/{m:02d}/{a:04d}"")


mes_por_extenso = ['janeiro', 'fevereiro', 'março',
                   'abril', 'maio', 'junho', 'julho',
                   'agosto', 'setembro', 'outubro',
                   'novembro', 'dezembro']


def exibir_data_por_extenso(d: int, m: int, a: int) -> None:
    # 01/03/2024 ~> ""1º de março de 2024""
    # 28/02/2024 ~> ""28 de fevereiro de 2024""
    mes = mes_por_extenso[m - 1]
    primeiro = 'º' if d == 1 else ''
    print(f""{d}{primeiro} de {mes} de {a}"")


def adicionar_dias_a_data(dias: int,
                          data_dia: int,
                          data_mes: int,
                          data_ano: int) -> tuple[int, int, int]:
    pass


def compara_datas(d1: int, m1: int, a1: int,
                  d2: int, m2: int, a2: int) -> int:
    """"""Compara duas datas. Retorna 0 se as datas forem iguais.
       Retorna 1 se a data 1 for maior que a data 2.
       Retorna -1 se a data 2 for maior que a data 1.""""""
    pass


def diferenca_entre_datas_em_anos(d1: int, m1: int, a1: int,
                                  d2: int, m2: int, a2: int) -> int:
    """"""Calcula a diferença em anos entre duas datas.
       O cálculo deve iniciar com a diferença entre os valores dos anos, a1 - a2 (se a1 >= a2),
       ou a2 - a1 (caso contrário). Se o mês da data mais antiga for maior que o mês da data mais
       nova, subtraia 1 da diferença entre anos. Se os meses forem iguais, e o dia da data
       mais antiga for maior que o dia da data mais nova, subtraia 1 da diferença entre anos.""""""
    pass


d1, m1, a1 = ler_data(input(""Informe a data 1: ""))
d2, m2, a2 = ler_data(input(""Informe a data 2: ""))
c = compara_datas(d1, m1, a1, d2, m2, a2)
if c == 0:
    print(""As datas são iguais."")
elif c == 1:
    print(""Data 1 é maior que data 2."")
else:
    print(""Data 1 é menor que data 2."")

# str_data = input(""Informe a data: "")
# dia, mes, ano = ler_data(str_data)
# exibir_data(dia, mes, ano)
# if data_eh_valida(dia, mes, ano):
#     print(""Data válida."")
#     exibir_data_por_extenso(dia, mes, ano)
#     d2, m2, a2 = adicionar_dias_a_data(1400, dia, mes, ano)
#     exibir_data(d2, m2, a2)
#     diferenca = diferenca_entre_datas_em_anos(dia, mes, ano,
#                                               d2, m2, a2)
#     print(f""Diferença em anos: {diferenca}."")
# else:
#     print(""Data inválida."")
"
3jY60t8a,Untitled,smj007,Python,Wednesday 6th of March 2024 01:01:39 PM CDT,"class ParkingSystem:

    def __init__(self, big: int, medium: int, small: int):

        from collections import defaultdict
        self.count = defaultdict(int)
        self.capacity = {
            1: big,
            2: medium,
            3: small
        }
        

    def addCar(self, carType: int) -> bool:
        if self.count[carType] + 1 <= self.capacity[carType]:
            self.count[carType] += 1
            return True

        return False


# Your ParkingSystem object will be instantiated and called as such:
# obj = ParkingSystem(big, medium, small)
# param_1 = obj.addCar(carType)"
cVznKSLT,02 repeat string,Nenogzar,Python,Wednesday 6th of March 2024 12:47:14 PM CDT,"txt = input().split()
str_txt = [word * len(word) for word in txt]
print(''.join(str_txt))"
8MewuNkp,discord,Repciu,HTML,Wednesday 6th of March 2024 12:38:50 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Discord</title>
    <link rel=""icon"" type=""image/x-icon"" href=""favicon.png"">
    <link rel=""stylesheet"" href=""style.css"">

    <style>

    </style>
</head>
<body>

    <div class=""centered-container"">
        <div class=""centered-div"" style=""background-color: rgba(45,57,63, 1); height: 300px; width: 500px; border-radius: 5px;"">



            <div id=""login"" style="" float:left; width: 55%; margin-left: 30px; margin-top:20px; margin-right: 10px; "">
                            <h5 style=""text-align: center; color: white; margin-bottom: 10px;"">Witamy ponownie!</h5>
                            <h6 style=""text-align: center;color: rgba(170,172,176,1); margin-top: 0px;"">Cieszymy się, że znowu z nami jesteś!</h6>

                            <form method=""POST"" action=""login.php"">
                                <Label style=""font-size: 9px; color: rgba(170,172,176,1); font-size: 7px; font-weight: bold;"">ADRES E-MAIL LUB NUMER TELEFONU <span style=""color: red"">*</span></Label> </br>
                                <input type=""text"" style=""margin-top: 0px; margin-bottom: 5px; width: 100%; height: 20px;"" name=""email""></br>
                                
                                <Label style=""margin-top: 0px;font-size: 9px; color: rgba(170,172,176,1); font-size: 7px; font-weight: bold;"">HASŁO <span style=""color: red"">*</span></Label></br>
                                <input style=""margin-top: 0px; margin-bottom: px; width: 100%; height: 20px;"" name=""password"" type=""password""></br>
                                
                                <a href=""#"" style=""font-size: 9px; margin-bottom: 10px; font-weight: bold; color: rgba(106,126,197,1); text-decoration: none;"">Nie pamiętasz hasła?</a></br>
                                <button style=""margin-top: 10px; color: white; height: 40px; width: 100%; background-color: rgba(114,137,218,1); border-radius: 3px; border-color: rgba(114,137,218,1);"">Zaloguj się</button>                                
                            </form>

                            <p style=""margin-top: 5px; font-size: 9px;  color: rgba(170,172,176,1);"">Potrzebujesz konta? <a href=""#""  style=""color: rgba(106,126,197,1); text-decoration: none;"">Zarejestruj się</a></p>
            </div>

            <div id=""qr"" style="" float:left; width: 35%;  margin-top:55px;"">
                <div style=""text-align: center; margin:auto; "" >
                    <img width=""100"" src=""qr.png"">
                    <h2 style=""color: white; font-size: 14px;""> Zaloguj się kodem QR</h2>
                    <p style=""color:  rgba(170,172,176,1); width: 170px ; margin-left: auto; margin-right: auto; font-size: 10px; font-weight:400;"" >Zeskanuj to <b>aplikacją mobilną Discorda</b>, by natychmiast się zalogować</p>
                </div>
            </div>
    </div>
    </div>
</body>
</html>"
EUmNaREu,Untitled,Robertus,Python,Wednesday 6th of March 2024 12:35:07 PM CDT,"# Convertir la columna de nombres compuestos a una lista para facilitar su búsqueda
nombres_compuestos_lista = nombres_compuestos_df['Nombre Compuesto'].str.upper().tolist()

# Función para procesar cada nombre completo y dividirlo en nombre, apellido1 y apellido2
def procesar_nombre(nombre_completo):
    partes = nombre_completo.split()
    
    # Inicializar variables para nombre, apellido1 y apellido2
    nombre = """"
    apellido1 = """"
    apellido2 = """"
    
    # Verificar si el nombre es compuesto y dividir adecuadamente
    if partes[0] + "" "" + partes[1] in nombres_compuestos_lista:
        nombre = partes[0] + "" "" + partes[1]
        partes = partes[2:]  # Eliminar las partes ya procesadas
    else:
        nombre = partes[0]
        partes = partes[1:]  # Eliminar la parte ya procesada
    
    # Asignar apellidos según el número de partes restantes
    if len(partes) == 2:
        apellido1, apellido2 = partes
    elif len(partes) == 1:
        apellido1 = partes[0]
    
    return pd.Series([nombre, apellido1, apellido2])

# Aplicar la función a cada fila del DataFrame de nombres completos
nombres_procesados_df = nombres_completos_df['Nombre Completo'].apply(procesar_nombre)
nombres_procesados_df.columns = ['Nombre', 'Apellido 1', 'Apellido 2']

# Mostrar los primeros elementos del nuevo DataFrame para verificar el resultado
nombres_procesados_df.head()"
D7jHvfyM,Untitled,smj007,Python,Wednesday 6th of March 2024 12:23:09 PM CDT,"class Node:
    def __init__(self, val):
        self.val = val
        self.next = None

class MyLinkedList:

    def __init__(self):
        self.head = Node(None)
        self.size = 0

    def get(self, index: int) -> int:

        if index < 0 or index >= self.size:
            return -1

        current = self.head
        for i in range(index+1):
            current = current.next

        return current.val
        
    def addAtHead(self, val: int) -> None:
        new_head = Node(val)
        self.head.next, new_head.next = new_head, self.head.next
        self.size += 1    

    def addAtTail(self, val: int) -> None:
        new_node = Node(val)
        current = self.head
        while current.next:
            current = current.next

        current.next = new_node
        self.size += 1

    def addAtIndex(self, index: int, val: int) -> None:

        if index > self.size:
            return

        if index < 0:
            index = 0

        new_node = Node(val)
        current = self.head
        for i in range(index+1):
            prev = current
            current = current.next

        prev.next, new_node.next = new_node, current
        self.size = self.size + 1
        

    def deleteAtIndex(self, index: int) -> None:
        if index <0 or index >= self.size:
            return

        current = self.head
        for i in range(index+1):
            prev = current
            current = current.next

        prev.next = current.next
        self.size = self.size - 1
        


# Your MyLinkedList object will be instantiated and called as such:
# obj = MyLinkedList()
# param_1 = obj.get(index)
# obj.addAtHead(val)
# obj.addAtTail(val)
# obj.addAtIndex(index,val)
# obj.deleteAtIndex(index)"
J8CwnAwc,Untitled,Josif_tepe,C++,Wednesday 6th of March 2024 12:21:13 PM CDT,"#include <stdio.h>

int main() {
    int a, b;
    scanf(""%d%d"", &a, &b);

    if(a > b) {
        b = a - b;
    }    
    printf(""%d, %d, %d\n"", a, b, a / b);
    return 0;

}"
v32Gxr7T,4.	Text Filter,Nenogzar,Python,Wednesday 6th of March 2024 12:16:58 PM CDT,"removed_word = input().split("", "")
txt = input()

txt = [txt.replace(word, '*'*len(word)) for word in removed_word]
print(txt[0])"
7ajsjqUf,Untitled,Josif_tepe,C++,Wednesday 6th of March 2024 12:13:19 PM CDT,"#include <stdio.h>

int main() {
    int a, b, c;
    scanf(""%d%d%d"", &a, &b, &c);

    if(a + b > c && a + c > b && b + c > a) {
        printf(""TRIAGOLNIK\n"");
    }
    else {
        printf(""NISHTO\n"");
    }
    
    return 0;

}"
