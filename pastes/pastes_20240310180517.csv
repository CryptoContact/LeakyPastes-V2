id,title,username,language,date,content
gNxn54e0,Encoding_messages,Anonymous0069,Python,Sunday 10th of March 2024 01:02:32 PM CDT,"
''' Basically this program, reverses a word of less than 3 letters and for more than 3 letters,
	it places the first letter of the world at the last and starts and ends the word with 3 random letters''''

''' Have fun chatting with ur friends in groups where there is someone, that must not catch what u r talking about! :)'''

c =1 

while c == 1:


    choice = input(""\nWhat you want to do?(C/D/E):"")
    #Coding:
    if choice.upper() == ""C"":
        s = input(""\nEnter your message:"")
        MsgList = s.split(' ')
        print(""\nYour encrypted message is here:"")
        for i in MsgList:
            
            if len(i) <= 2:
                print(i[-1::-1], end = "" "")

            else:
                print(""hjk"",end="""")
                print(i[1:], end = """")
                print(i[0],end = ""hfg "")


    #Decoding
    elif choice.upper() == ""D"":
        s = input(""\nEnter the message you received:"")
        MsgRcv = s.split("" "") 
        print(""\nYour decrypted message is here:"")
        for i in MsgRcv:
            
            
            if len(i) <= 2:
                print(i[-1::-1], end = "" "")

            else:
                print(i[-4], end = """")
                print(i[3:-4], end = "" "")

    elif choice.upper() == ""E"":
        print(""\n-Signing off!"")
        print(""\n- Made for dirty stuff( By Anonymous0069 :) )"")
        break
            
"
AQvESq1m,G2A.com Free Gift Card Guide Mar 2024 Updated,HastyBasher0,GetText,Sunday 10th of March 2024 12:40:59 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!

You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.

This is not my pastebin account and im using a random inactive one to post this.
 
PDF guide here:
https://smallpdf.com/file#s=e45853d1-004b-4ae4-968e-c4f2afc13e32
 
Working as of:
10 March 2024























"
2RRsdWgE,G2A.com Free Gift Card Guide Mar 2024,ounnuo,GetText,Sunday 10th of March 2024 12:36:23 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_605902.pdf

Working as of:
10 March 2024





















"
1LanAx2G,Algoritmi lezione 16 - Shell Sort,fcamuso,C#,Sunday 10th of March 2024 12:08:37 PM CDT,"#include <iostream>
#include <chrono>
#include <ctime>
#include <random>

using namespace std;
#include ""../../min_max/utility_vettori.h""


using namespace std;

//i due array contengono gli stessi elementi?
//ATTENZIONE: modifica il secondo!
bool stessi_elementi(unsigned long v1[], unsigned long v2[], int QUANTI_ELEMENTI)
{

  int rimasti = QUANTI_ELEMENTI;
  for (int i=0; i<QUANTI_ELEMENTI; i++)
  {
      bool trovato = false;

      for (int j=0; j<rimasti; j++)

      //trovato una corripondenza la sposto
      //a fine array per non riconsiderarla
      //al passo successivo gestendo
      //le occorrenze multiple di un certo valore
      if (v1[i] == v2[j]) {
        trovato=true;
        swap(v2[j], v2[rimasti-1]);
        rimasti --;
        break;
      }

      if (!trovato) return false;
  }
  return true;
}

void insertion_sort_interi(unsigned long v[], int numero_elementi)
{
  //porta il minimo in prima posizione a fare da sentinella
  int pos_min = 0;
  for (int i=1; i<numero_elementi; i++)
    if (v[i] < v[pos_min]) pos_min = i;

  swap(v[0], v[pos_min]);

  for (int i = 1; i < numero_elementi; i++) {

    int elemento_corrente = v[i];

    int j = i - 1;
    while( v[j] > elemento_corrente)
    {
      v[j + 1] = v[j];
      j--;
    }
    v[j + 1] = elemento_corrente;
  }
}

void shell_sort_interi(unsigned long v[], int numero_elementi)
{
  int distanza = numero_elementi/2; //'gap'

  while (distanza>0)
  {
    for (int i = distanza; i < numero_elementi; i++) {

      int elemento_corrente = v[i];

      int j = i;
      while( j>=distanza && v[j - distanza] > elemento_corrente)
      {
        v[j] = v[j - distanza];
        j -= distanza;
      }
      v[j] = elemento_corrente;
    }

    distanza = distanza / 2;
  }
}




const int QUANTI_ELEMENTI = 100000;
const int LUNGHEZZA = 1000;
unsigned long v[QUANTI_ELEMENTI];
unsigned long vcopia[QUANTI_ELEMENTI];


int main()
{
  carica_vettore_interi(v, QUANTI_ELEMENTI);

  //stampa_vettore_interi(v, QUANTI_ELEMENTI);
  //cout << string(40, '*') << endl;

  //duplico vettore per controlli finali
  for (int i=0; i<QUANTI_ELEMENTI; i++) vcopia[i] = v[i];

  Cronometro(Stato::START);

  //lo ordino crescente
  shell_sort_interi(v, QUANTI_ELEMENTI);

  cout << ""Tempo impiegato: "" << Cronometro(Stato::STOP) << endl;
  if (verifica_ordine_crescente(v, QUANTI_ELEMENTI)) cout <<""IN ORDINE!\n"";

  //sono gli stessi elementi?
  if (!stessi_elementi(v, vcopia, QUANTI_ELEMENTI))
    cout << ""Array difformi!!\n"";
  else
    cout << ""L'array ordinato contiene gli stessi elementi di quello iniziale\n"";

  //stampa_vettore_interi(v, QUANTI_ELEMENTI);


    return 0;
}
"
AStjYiYc,MedkitScript (Break In Style),Sungmingamerpro13,CSS,Sunday 10th of March 2024 12:07:44 PM CDT,"local Tool = script.Parent
-- Create the Heal function
local function Heal(player)
	-- Check if the player is alive
	if player.Character and player.Character:FindFirstChild(""Humanoid"") and player.Character.Humanoid.Health > 0 then
		-- Create a selection box on the player
		local selectionBox = Instance.new(""SelectionBox"")
		selectionBox.Adornee = player.Character
		selectionBox.LineThickness = 0.1
		selectionBox.Parent = player.Character

		-- Wait for a short duration to show the selection box
		wait(3)

		-- Heal the player
		player.Character.Humanoid.Health = player.Character.Humanoid.MaxHealth

		-- Remove the selection box
		selectionBox:Destroy()
	end
end

-- Handle equipped event
Tool.Equipped:Connect(function(mouse)
	-- Create a selection box for the local player
	local selectionBox = Instance.new(""SelectionBox"")
	selectionBox.Adornee = game.Players.LocalPlayer.Character
	selectionBox.LineThickness = 0.1
	selectionBox.Parent = game.Players.LocalPlayer.Character

	-- Wait for a short duration to show the selection box
	wait(1)

	-- Remove the selection box
	selectionBox:Destroy()
end)

-- Handle mouse button click
Tool.Activated:Connect(function()
	-- Check if the player is healing themselves
	local humanoid = game.Players.LocalPlayer.Character:FindFirstChild(""Humanoid"")
	if humanoid and humanoid.Health > 0 then
		Heal(game.Players.LocalPlayer)
		script.Parent.healed:Play()
	elseif humanoid and humanoid.Health < humanoid.MaxHealth then
		Tool:Destroy()
	end
end)"
vpcZG0Ea,Controller,JackHack2,Lua,Sunday 10th of March 2024 12:04:19 PM CDT,"channel = {[""rx""]=1,[""tx""]=2}
settings = {[""modemFound""]=false}
material = {[""1""]=0,[""2""]=0,[""3""]=0,[""4""]=0,[""5""]=0,[""6""]=0,[""7""]=0,[""8""]=0}
position = {[""horizonal""]=1,[""vertical""]=1,[""direction""]=0}
block = {[""0101""]=""X"",[""0201""]=""X"",[""0301""]=""X"",[""0401""]=""X"",[""0501""]=""X"",[""0601""]=""X"",[""0701""]=""X"",[""0801""]=""X"",[""0901""]=""X"",[""1001""]=""X"",[""1101""]=""X"",[""1201""]=""X"",[""1301""]=""X"",[""1401""]=""X"",[""1501""]=""X"",[""1601""]=""X"",[""1701""]=""X"",[""1801""]=""X"",[""1901""]=""X"",[""2001""]=""X"",[""2101""]=""X"",[""2201""]=""X"",[""2301""]=""X"",[""2401""]=""X"",[""2501""]=""X"",[""2601""]=""X"",
		 [""0102""]=""X"",[""0202""]=""X"",[""0302""]=""X"",[""0402""]=""X"",[""0502""]=""X"",[""0602""]=""X"",[""0702""]=""X"",[""0802""]=""X"",[""0902""]=""X"",[""1002""]=""X"",[""1102""]=""X"",[""1202""]=""X"",[""1302""]=""X"",[""1402""]=""X"",[""1502""]=""X"",[""1602""]=""X"",[""1702""]=""X"",[""1802""]=""X"",[""1902""]=""X"",[""2002""]=""X"",[""2102""]=""X"",[""2202""]=""X"",[""2302""]=""X"",[""2402""]=""X"",[""2502""]=""X"",[""2602""]=""X"",
		 [""0103""]=""X"",[""0203""]=""X"",[""0303""]=""X"",[""0403""]=""X"",[""0503""]=""X"",[""0603""]=""X"",[""0703""]=""X"",[""0803""]=""X"",[""0903""]=""X"",[""1003""]=""X"",[""1103""]=""X"",[""1203""]=""X"",[""1303""]=""X"",[""1403""]=""X"",[""1503""]=""X"",[""1603""]=""X"",[""1703""]=""X"",[""1803""]=""X"",[""1903""]=""X"",[""2003""]=""X"",[""2103""]=""X"",[""2203""]=""X"",[""2303""]=""X"",[""2403""]=""X"",[""2503""]=""X"",[""2603""]=""X"",
		 [""0104""]=""X"",[""0204""]=""X"",[""0304""]=""X"",[""0404""]=""X"",[""0504""]=""X"",[""0604""]=""X"",[""0704""]=""X"",[""0804""]=""X"",[""0904""]=""X"",[""1004""]=""X"",[""1104""]=""X"",[""1204""]=""X"",[""1304""]=""X"",[""1404""]=""X"",[""1504""]=""X"",[""1604""]=""X"",[""1704""]=""X"",[""1804""]=""X"",[""1904""]=""X"",[""2004""]=""X"",[""2104""]=""X"",[""2204""]=""X"",[""2304""]=""X"",[""2404""]=""X"",[""2504""]=""X"",[""2604""]=""X"",
		 [""0105""]=""X"",[""0205""]=""X"",[""0305""]=""X"",[""0405""]=""X"",[""0505""]=""X"",[""0605""]=""X"",[""0705""]=""X"",[""0805""]=""X"",[""0905""]=""X"",[""1005""]=""X"",[""1105""]=""X"",[""1205""]=""X"",[""1305""]=""X"",[""1405""]=""X"",[""1505""]=""X"",[""1605""]=""X"",[""1705""]=""X"",[""1805""]=""X"",[""1905""]=""X"",[""2005""]=""X"",[""2105""]=""X"",[""2205""]=""X"",[""2305""]=""X"",[""2405""]=""X"",[""2505""]=""X"",[""2605""]=""X"",
		 [""0106""]=""X"",[""0206""]=""X"",[""0306""]=""X"",[""0406""]=""X"",[""0506""]=""X"",[""0606""]=""X"",[""0706""]=""X"",[""0806""]=""X"",[""0906""]=""X"",[""1006""]=""X"",[""1106""]=""X"",[""1206""]=""X"",[""1306""]=""X"",[""1406""]=""X"",[""1506""]=""X"",[""1606""]=""X"",[""1706""]=""X"",[""1806""]=""X"",[""1906""]=""X"",[""2006""]=""X"",[""2106""]=""X"",[""2206""]=""X"",[""2306""]=""X"",[""2406""]=""X"",[""2506""]=""X"",[""2606""]=""X"",
		 [""0107""]=""X"",[""0207""]=""X"",[""0307""]=""X"",[""0407""]=""X"",[""0507""]=""X"",[""0607""]=""X"",[""0707""]=""X"",[""0807""]=""X"",[""0907""]=""X"",[""1007""]=""X"",[""1107""]=""X"",[""1207""]=""X"",[""1307""]=""X"",[""1407""]=""X"",[""1507""]=""X"",[""1607""]=""X"",[""1707""]=""X"",[""1807""]=""X"",[""1907""]=""X"",[""2007""]=""X"",[""2107""]=""X"",[""2207""]=""X"",[""2307""]=""X"",[""2407""]=""X"",[""2507""]=""X"",[""2607""]=""X"",
		 [""0108""]=""X"",[""0208""]=""X"",[""0308""]=""X"",[""0408""]=""X"",[""0508""]=""X"",[""0608""]=""X"",[""0708""]=""X"",[""0808""]=""X"",[""0908""]=""X"",[""1008""]=""X"",[""1108""]=""X"",[""1208""]=""X"",[""1308""]=""X"",[""1408""]=""X"",[""1508""]=""X"",[""1608""]=""X"",[""1708""]=""X"",[""1808""]=""X"",[""1908""]=""X"",[""2008""]=""X"",[""2108""]=""X"",[""2208""]=""X"",[""2308""]=""X"",[""2408""]=""X"",[""2508""]=""X"",[""2608""]=""X"",
		 [""0109""]=""X"",[""0209""]=""X"",[""0309""]=""X"",[""0409""]=""X"",[""0509""]=""X"",[""0609""]=""X"",[""0709""]=""X"",[""0809""]=""X"",[""0909""]=""X"",[""1009""]=""X"",[""1109""]=""X"",[""1209""]=""X"",[""1309""]=""X"",[""1409""]=""X"",[""1509""]=""X"",[""1609""]=""X"",[""1709""]=""X"",[""1809""]=""X"",[""1909""]=""X"",[""2009""]=""X"",[""2109""]=""X"",[""2209""]=""X"",[""2309""]=""X"",[""2409""]=""X"",[""2509""]=""X"",[""2609""]=""X"",
		 [""0110""]=""X"",[""0210""]=""X"",[""0310""]=""X"",[""0410""]=""X"",[""0510""]=""X"",[""0610""]=""X"",[""0710""]=""X"",[""0810""]=""X"",[""0910""]=""X"",[""1010""]=""X"",[""1110""]=""X"",[""1210""]=""X"",[""1310""]=""X"",[""1410""]=""X"",[""1510""]=""X"",[""1610""]=""X"",[""1710""]=""X"",[""1810""]=""X"",[""1910""]=""X"",[""2010""]=""X"",[""2110""]=""X"",[""2210""]=""X"",[""2310""]=""X"",[""2410""]=""X"",[""2510""]=""X"",[""2610""]=""X"",
		 [""0111""]=""X"",[""0211""]=""X"",[""0311""]=""X"",[""0411""]=""X"",[""0511""]=""X"",[""0611""]=""X"",[""0711""]=""X"",[""0811""]=""X"",[""0911""]=""X"",[""1011""]=""X"",[""1111""]=""X"",[""1211""]=""X"",[""1311""]=""X"",[""1411""]=""X"",[""1511""]=""X"",[""1611""]=""X"",[""1711""]=""X"",[""1811""]=""X"",[""1911""]=""X"",[""2011""]=""X"",[""2111""]=""X"",[""2211""]=""X"",[""2311""]=""X"",[""2411""]=""X"",[""2511""]=""X"",[""2611""]=""X"",
		 [""0112""]=""X"",[""0212""]=""X"",[""0312""]=""X"",[""0412""]=""X"",[""0512""]=""X"",[""0612""]=""X"",[""0712""]=""X"",[""0812""]=""X"",[""0912""]=""X"",[""1012""]=""X"",[""1112""]=""X"",[""1212""]=""X"",[""1312""]=""X"",[""1412""]=""X"",[""1512""]=""X"",[""1612""]=""X"",[""1712""]=""X"",[""1812""]=""X"",[""1912""]=""X"",[""2012""]=""X"",[""2112""]=""X"",[""2212""]=""X"",[""2312""]=""X"",[""2412""]=""X"",[""2512""]=""X"",[""2612""]=""X"",
		 [""0113""]=""X"",[""0213""]=""X"",[""0313""]=""X"",[""0413""]=""X"",[""0513""]=""X"",[""0613""]=""X"",[""0713""]=""X"",[""0813""]=""X"",[""0913""]=""X"",[""1013""]=""X"",[""1113""]=""X"",[""1213""]=""X"",[""1313""]=""X"",[""1413""]=""X"",[""1513""]=""X"",[""1613""]=""X"",[""1713""]=""X"",[""1813""]=""X"",[""1913""]=""X"",[""2013""]=""X"",[""2113""]=""X"",[""2213""]=""X"",[""2313""]=""X"",[""2413""]=""X"",[""2513""]=""X"",[""2613""]=""X"",
		 [""0114""]=""X"",[""0214""]=""X"",[""0314""]=""X"",[""0414""]=""X"",[""0514""]=""X"",[""0614""]=""X"",[""0714""]=""X"",[""0814""]=""X"",[""0914""]=""X"",[""1014""]=""X"",[""1114""]=""X"",[""1214""]=""X"",[""1314""]=""X"",[""1414""]=""X"",[""1514""]=""X"",[""1614""]=""X"",[""1714""]=""X"",[""1814""]=""X"",[""1914""]=""X"",[""2014""]=""X"",[""2114""]=""X"",[""2214""]=""X"",[""2314""]=""X"",[""2414""]=""X"",[""2514""]=""X"",[""2614""]=""X"",
		 [""0115""]=""X"",[""0215""]=""X"",[""0315""]=""X"",[""0415""]=""X"",[""0515""]=""X"",[""0615""]=""X"",[""0715""]=""X"",[""0815""]=""X"",[""0915""]=""X"",[""1015""]=""X"",[""1115""]=""X"",[""1215""]=""X"",[""1315""]=""X"",[""1415""]=""X"",[""1515""]=""X"",[""1615""]=""X"",[""1715""]=""X"",[""1815""]=""X"",[""1915""]=""X"",[""2015""]=""X"",[""2115""]=""X"",[""2215""]=""X"",[""2315""]=""X"",[""2415""]=""X"",[""2515""]=""X"",[""2615""]=""X"",
		 [""0116""]=""X"",[""0216""]=""X"",[""0316""]=""X"",[""0416""]=""X"",[""0516""]=""X"",[""0616""]=""X"",[""0716""]=""X"",[""0816""]=""X"",[""0916""]=""X"",[""1016""]=""X"",[""1116""]=""X"",[""1216""]=""X"",[""1316""]=""X"",[""1416""]=""X"",[""1516""]=""X"",[""1616""]=""X"",[""1716""]=""X"",[""1816""]=""X"",[""1916""]=""X"",[""2016""]=""X"",[""2116""]=""X"",[""2216""]=""X"",[""2316""]=""X"",[""2416""]=""X"",[""2516""]=""X"",[""2616""]=""X"",
		 [""0117""]=""X"",[""0217""]=""X"",[""0317""]=""X"",[""0417""]=""X"",[""0517""]=""X"",[""0617""]=""X"",[""0717""]=""X"",[""0817""]=""X"",[""0917""]=""X"",[""1017""]=""X"",[""1117""]=""X"",[""1217""]=""X"",[""1317""]=""X"",[""1417""]=""X"",[""1517""]=""X"",[""1617""]=""X"",[""1717""]=""X"",[""1817""]=""X"",[""1917""]=""X"",[""2017""]=""X"",[""2117""]=""X"",[""2217""]=""X"",[""2317""]=""X"",[""2417""]=""X"",[""2517""]=""X"",[""2617""]=""X"",
		 [""0118""]=""X"",[""0218""]=""X"",[""0318""]=""X"",[""0418""]=""X"",[""0518""]=""X"",[""0618""]=""X"",[""0718""]=""X"",[""0818""]=""X"",[""0918""]=""X"",[""1018""]=""X"",[""1118""]=""X"",[""1218""]=""X"",[""1318""]=""X"",[""1418""]=""X"",[""1518""]=""X"",[""1618""]=""X"",[""1718""]=""X"",[""1818""]=""X"",[""1918""]=""X"",[""2018""]=""X"",[""2118""]=""X"",[""2218""]=""X"",[""2318""]=""X"",[""2418""]=""X"",[""2518""]=""X"",[""2618""]=""X"",
		 [""0119""]=""X"",[""0219""]=""X"",[""0319""]=""X"",[""0419""]=""X"",[""0519""]=""X"",[""0619""]=""X"",[""0719""]=""X"",[""0819""]=""X"",[""0919""]=""X"",[""1019""]=""X"",[""1119""]=""X"",[""1219""]=""X"",[""1319""]=""X"",[""1419""]=""X"",[""1519""]=""X"",[""1619""]=""X"",[""1719""]=""X"",[""1819""]=""X"",[""1919""]=""X"",[""2019""]=""X"",[""2119""]=""X"",[""2219""]=""X"",[""2319""]=""X"",[""2419""]=""X"",[""2519""]=""X"",[""2619""]=""X""}

function checkModem()
	for a, b in pairs(rs.getSides()) do
		if peripheral.getType(b) == ""modem"" then
			modem = peripheral.wrap(b)
			settings[""modemFound""]=true
			modem.closeAll()
			modem.open(channel[""rx""])
			modem.open(channel[""tx""])
			rednet.open(b)
			if modem then
				if modem.isOpen(channel[""tx""])==true then
					print(""tx channel ""..channel[""tx""].."" online"")
				else print(""tx channel ""..channel[""tx""].."" offline"")
				end
				if modem.isOpen(channel[""rx""]) == true then
					print(""rx channel ""..channel[""rx""].."" online"")
				else print(""rx channel ""..channel[""rx""].."" offline"")
				end
			end
		end
	end	
end
function backround1()
	test2= 00000000011111111112222222
	test1= 12345678901234567890123456
	print(""+------------------------+"")--01
	print(""|                        |"")--02
	print(""|                        |"")--03
	print(""|                        |"")--04
	print(""|                        |"")--05
	print(""|                        |"")--06
	print(""|                        |"")--07
	print(""|                        |"")--08
	print(""|                        |"")--09
	print(""|                        |"")--10
	print(""|                        |"")--11
	print(""|                        |"")--12
	print(""|                        |"")--13
	print(""|                        |"")--14
	print(""|                        |"")--15
	print(""|                        |"")--16
	print(""|                        |"")--17
	print(""|                        |"")--18
	print(""+------------------------+"")--19
end
function screen()
	term.clear()
	term.setTextColour(1)
	term.setCursorPos(1,1)
	local vertical
	local horizonal
	for b = 1,19 do
		if b < 10 then
			vertical = ""0""..tostring(b)
		else
			vertical = tostring(b)
		end
		for a = 1,26 do
			if a < 10 then
				horizonal = ""0""..tostring(a)
			else
				horizonal = tostring(a)
			end
			if block[horizonal..vertical] == ""X"" then
				term.setTextColour(16384)
			else
				term.setTextColour(1)
			end
			term.setCursorPos(a,b)
			print(block[horizonal..vertical])
		end
	end
end


"
4pB3F6Nh,Heltec OLED functional sketch,JudMeherg,Arduino,Sunday 10th of March 2024 12:00:49 PM CDT,"/*

  OLED examples

*/

#include <Arduino.h>
#include <SPI.h>
#include <U8g2lib.h>

#define oled_scl 18
#define oled_sda 17
#define oled_rst 21

U8G2_SSD1306_128X64_NONAME_1_SW_I2C u8g2(U8G2_R0, /* clock=*/oled_scl, /* data=*/oled_sda, /* reset=*/oled_rst);
// U8G2_SSD1306_128X64_NONAME_1_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);   // All Boards without Reset of the Display
// U8G2_SSD1306_128X64_NONAME_1_SW_I2C u8g2(U8G2_R0, /* clock=*/ 16, /* data=*/ 17, /* reset=*/ U8X8_PIN_NONE);   // ESP32 Thing, pure SW emulated I2C

void setup()
{
  Serial.begin(9600);
  while (!Serial)
    ;
  Serial.println(""OLED Test"");
  u8g2.begin();
}

void loop()
{
  u8g2.firstPage();
  do
  {
    u8g2.setFont(u8g2_font_ncenB10_tr);
    u8g2.drawStr(0, 24, ""Hello World (::"");
  } while (u8g2.nextPage());
}"
cC2bzyeW,140.213.40.10-/sdcard/Premium/useragent.py.py,OBF-XIn,Python,Sunday 10th of March 2024 11:56:37 AM CDT,"# useragent
import random

class Useragent:
    def __init__(self) -> None:
        pass
        
    def useragent_api(self):
        self.nexus = ['Galaxy Nexus', 'Nexus 10', 'Nexus 2', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 5', 'phone/Nexus 5', 'Nexus 5X', 'Nexus 6', 'Nexus 7', 'Nexus 9', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus Player', 'Nexus Player', 'Nexus S', 'Nexus S', 'Nexus S 4G', 'nexus S', 'Nexus S', 'Nexus s', 'Nexus S', 'Nexus S', 'Nexus S', 'Nexus S', 'Nexus S']
        self.micromax = ['Micromax 10', 'Micromax 1J', 'Micromax 86519', 'Micromax A064', 'Micromax_A064', 'Micromax A065', 'Micromax_A065', 'Micromax A066', 'Micromax_A066', 'Micromax A067', 'Micromax_A067', 'MICROMAX_A068', 'MICROMAX A068', 'Micromax A068', 'Micromax A069', 'Micromax_A069', 'Micromax A075', 'Micromax A082', 'Micromax_A082', 'Micromax A089', 'Micromax_A089', 'Micromax A091', 'Micromax A092', 'Micromax_A092', 'Micromax A093', 'Micromax_A093', 'Micromax A095', 'Micromax A096', 'Micromax_A101', 'Micromax A102', 'Micromax_A102', 'Micromax A104', 'Micromax a104', 'Micromax A105', 'Micromax_A105', 'Micromax A106', 'Micromax-A106', 'Micromax A108', 'Micromax_A109', 'Micromax A109', 'Micromax A110', 'Micromax_A110', 'Micromax A110Q', 'Micromax_A110Q', 'Micromax A111', 'Micromax A114', 'Micromax A114R', 'Micromax_A114R', 'Micromax A115', 'Micromax_A115', 'Micromax A116', 'Micromax_A116', 'Micromax A116i', 'Micromax_A116i', 'Micromax A117', 'Micromax_A117', 'Micromax A118R', 'Micromax A119', 'Micromax A120', 'Micromax A121', 'Micromax_A121', 'Micromax A15', 'Micromax A177', 'Micromax A190', 'Micromax_A190', 'Micromax A200', 'Micromax_A200', 'Micromax A21', 'Micromax A210', 'Micromax A24', 'Micromax_A24', 'Micromax A25 Smarty', 'Micromax A250', 'Micromax A255', 'Micromax_A255', 'Micromax A26', 'Micromax_A26', 'Micromax_A27', 'Micromax A27', 'Micromax_A28', 'Micromax A28/GRI40', 'Micromax A28', 'Micromax A290', 'Micromax A30', 'Micromax A300', 'Micromax A310', 'Micromax A311', 'Micromax A315', 'Micromax_A315', 'Micromax_A316', 'Micromax A316', 'Micromax_A34', 'Micromax A34', 'Micromax_A35', 'Micromax A35', 'Micromax A350', 'Micromax_A36', 'Micromax A36', 'Micromax_A37', 'Micromax A37', 'Micromax A37B', 'Micromax_A37B', 'Micromax A40', 'Micromax_A40', 'Micromax A46', 'Micromax_A46', 'Micromax A47', 'MicromaxA47', 'Micromax_A50', 'Micromax A50', 'Micromax A51', 'Micromax A52', 'Micromax A54', 'Micromax A56', 'Micromax_A57', 'Micromax A57', 'Micromax A58', 'Micromax_A58', 'Micromax A59', 'Micromax A60', 'Micromax A61', 'Micromax A62', 'Micromax_A62', 'Micromax A63', 'Micromax_A63', 'Micromax_A65', 'Micromax A65', 'Micromax_A66', 'Micromax A66', 'Micromax A67', 'Micromax A68', 'Micromax A69', 'Micromax_A69', 'Micromax_A70', 'Micromax A700', 'Micromax A71', 'Micromax_A71', 'Micromax A72', 'Micromax_A72', 'Micromax A73', 'Micromax_A74', 'Micromax A74', 'Micromax A75', 'Micromax_A76', 'Micromax A76', 'Micromax A77', 'Micromax A78', 'Micromax A79', 'en_us Micromax A80', 'Micromax A80', 'Micromax A82', 'Micromax_A82', 'Micromax A84', 'Micromax A85', 'Micromax A86', 'Micromax_A86', 'Micromax_A87', 'Micromax A87', 'Micromax A87 . Ninja 4.0', 'Micromax A88', 'Micromax_A88', 'Micromax A89', 'Micromax A90', 'Micromax A90s', 'MIcromax_A90s', 'Micromax A90S', 'Micromax A91', 'Micromax_A91', 'Micromax_A92', 'Micromax A92', 'MicromaxA93', 'Micromax A93', 'Micromax A94', 'Micromax_A94', 'Micromax A96', 'Micromax_A96', 'Micromax A97', 'Micromax_A99', 'Micromax A99', 'Micromax_AD3520', 'Micromax AD3520', 'Micromax AD3550', 'Micromax AD4500', 'Micromax_AD4500', 'Micromax AE90', 'Micromax AO5510', 'Micromax AQ5000', 'Micromax B4A', 'Micromax B5 Pro', 'B5Pro', 'Micromax_Bharat_5_Plus', 'Micromax Q402Plus', 'Micromax Q440', 'Micromax Bharat 5', 'Micromax Q4204', 'Micromax Bharat 5 Plus', 'Micromax Bharat 5 Pro', 'Micromax Bolt 3425', 'Micromax Bolt 2', 'Micromax Q402+', 'Micromax Q306', 'Micromax Q3001', 'Micromax Q301', 'Micromax Q303', 'Micromax Q324', 'Micromax Q326', 'Q327', 'Micromax Q327', 'Micromax Q3301', 'Micromax Q333', 'Micromax_Q333', 'Micromax Q338', 'Micromax Q346', 'Micromax Q354', 'Micromax Q357', 'Micromax Q383', 'Micromax_S302', 'Micromax S302', 'Micromax Q424', 'Micromax Q352', 'Micromax Q4101', 'Micromax C2A', 'Micromax C9', 'Micromax C1', 'Micromax C1A', 'Micromax C2APLS', 'Micromax Q4310', 'Micromax E4815', 'arm_64 Micromax E481', 'Micromax E481', 'Micromax E4816', 'Micromax Q462', 'Micromax Q463', 'Micromax E485', 'Micromax E484', 'Micromax AQ4501', 'Micromax AQ4502', 'A240', 'Micromax A240', 'Micromax Q391', 'Micromax E453', 'Micromax A107', 'Micromax HS2', 'Micromax HS1', 'Micromax_HS3', 'en Micromax_HS3', 'AQ5001', 'Micromax AQ5001', 'AQ5001 Canvas Power', 'Micromax Q392', 'Micromax Q465', 'Micromax Q461', 'Micromax Q350R', 'Micromax Q421', 'Micromax Q417', 'Micromax Q426', 'Micromax Q4260', 'Micromax E311', 'Micromax E352', 'Micromax E455', 'Micromax Q415', 'Micromax Q355', 'Micromax Q469', 'Micromax E451', 'Micromax E451', 'Micromax Q340', 'Micromax Q349', 'Micromax Q345', 'Micromax Q450', 'Micromax Q480', 'arm_64 Micromax Q480', 'Micromax Q380', 'Micromax Q3502', 'Micromax Q351', 'Micromax Q385', 'P70221', 'Micromax P681', 'MicromaxP802', 'Micromax Q427', 'Micromax_Q427', 'Micromax Q413', 'Micromax E313', 'Micromax D2', 'Micromax D200', 'Micromax_D200', 'Micromax D303', 'Micromax D304', 'Micromax_D304', 'Micromax D305', 'Micromax D306', 'Micromax D320', 'Micromax D321', 'Micromax D333', 'Micromax D340', 'Micromax D7517', 'Micromax DM5003', 'Micromax E353', 'Micromax E457', 'Micromax E458', 'Micromax E460', 'Micromax E471', 'Micromax E4817', 'Micromax E482', 'Micromax E483', 'Micromax E5018M', 'Micromax EG111', 'Micromax EG116', 'micromax F', 'micromax F189', 'Micromax F601', 'MicromaxF666', 'Micromax IN', 'Micromax E7533', 'Micromax E6523', 'IN_2b', 'IN_Note1', 'MICROMAX IN1', 'N8216', 'N8301', 'ione note', 'MICROMAX ione note', 'Micromax N4120', 'Micromax N8202', 'Micromax Ninja', 'Micromax Nitro', 'Micromax Note 1+', 'Micromax Note 5', 'Micromax Note3', 'Micromax NX', 'Micromax P001', 'Micromax P250(Funbook)', 'Micromax P255', 'Micromax P256', 'xx Micromax P275', 'Micromax_P275', 'Micromax P275', 'Micromax P280', 'Micromax P290', 'Micromax P310', 'Micromax P350', 'xx Micromax P350', 'Micromax P360', 'Micromax P362', 'Micromax P365', 'Micromax P410', 'Micromax P410i', 'Micromax_P410i', 'Micromax P420', 'Micromax P469', 'Micromax P470', 'MicromaxP480', 'Micromax P500(Funbook)', 'Micromax P560', 'Micromax P580', 'Micromax P580i', 'Micromax P600', 'Micromax P650', 'Micromax P650E', 'Micromax P660', 'Micromax P660', 'Micromax_P666', 'Micromax P666', 'MicromaxP680', 'Micromax P690', 'Micromax P701', 'MicromaxP702', 'Micromax P810', 'en Micromax Q300', 'Micromax_Q300', 'Micromax Q323', 'Micromax_Q323', 'Micromax Q325', 'Micromax_Q325', 'Micromax Q331', 'Micromax_Q331', 'Micromax Q332', 'Micromax_Q332', 'Micromax Q334', 'Micromax Q335', 'Micromax_Q335', 'Micromax Q336', 'Micromax_Q336', 'Micromax Q341', 'Micromax Q343', 'Micromax Q348', 'Micromax_Q353', 'en Micromax_Q353', 'Micromax_Q353P', 'Micromax Q3551', 'Micromax Q3555', 'Micromax Q361', 'Micromax Q370', 'Micromax_Q370', 'Micromax Q371', 'Micromax_Q371', 'Micromax Q375', 'Micromax_Q375', 'Micromax Q379', 'Micromax Q381', 'Micromax Q382', 'Micromax Q386', 'Micromax Q394', 'Micromax_Q394', 'Micromax Q395', 'Micromax Q397', 'Micromax Q398', 'arm Micromax Q398', 'Micromax Q400', 'Micromax_Q400', 'Micromax Q4002', 'en Micromax Q4002', 'Micromax Q401', 'Micromax Q402', 'Micromax Q402 Ultra', 'Micromax Q404', 'Micromax Q411', 'Micromax_Q411', 'Micromax Q412', 'Micromax Q414', 'Micromax Q416', 'Micromax Q419', 'Micromax Q4201', 'Micromax Q422', 'Micromax Q4220', 'Micromax Q423', 'Micromax Q428', 'Micromax_Q428', 'Micromax Q429', '720X1280 Micromax Q4309', 'Micromax Q4312', 'en_US Micromax Q437', 'Micromax Q440Plus', 'Micromax Q454', 'Micromax Q470', 'Micromax Q479', 'Micromax Q491', 'Micromax_Q491', 'Micromax Q502+', 'Micromax Q666', 'Micromax Q67', 'micromax Q68', 'micromax Q78', 'Micromax S300', 'Micromax_S300', 'Micromax S301', 'Micromax_S301', 'Micromax Q4311', 'Micromax Q4601', 'Micromax Q409A', 'Micromax Q409', 'Micromax Q452', 'Micromax Unite 3', 'Micromax Unite 2', 'Micromax Unite 2 A106', 'Micromax Q372', 'Micromax V89', 'Micromax Q4001', 'Micromax Q4202', 'Micromax Q4251', 'arm Micromax Q4251', 'Micromax W5509', 'Micromax X5098', 'Micromax-Xzoom A52', 'YU5530', 'YU5040', 'Micromax YU5900', 'YU5012', 'Micromax Z59']
        self.dix = random.choice(['114.0.0.20.2','114.0.0.38.120','114.0.0.20.70','114.0.0.28.120','114.0.0.0.24','114.0.0.0.41'])
        self.dpi_pxl = random.choice(['240dpi; 1760x792', '240dpi; 1920x864', '320dpi; 2400x1080', '400dpi; 3200x1440', '480dpi; 1080x1920', '320dpi; 900x1600', '320dpi; 720x1280', '240dpi; 540x960', '280dpi; 1920x1080', '240dpi; 160x900', '240dpi; 1280x720', '160dpi; 960x540'])
        self.dvc = random.choice([""30/11"",""31/12"",""29/10""])
        return(random.choice([
            f'Instagram {self.dix} Android ({self.dvc}; 235dpi; 1080x2280; NEXUS MOBILITY LIMITED/Nexus; {str(random.choice(self.nexus))}; mt6761; in_ID; 164094530)',
            f'Instagram {self.dix} Android ({self.dvc}; 235dpi; 1080x2280; MICROMAX MOBILITY LIMITED/Micromax; {str(random.choice(self.micromax))}; qcom; mt6761; 164094530)',
        ]))
        
    def useragent_ajax(self):
        self.micromax = ['Micromax 10', 'Micromax 1J', 'Micromax 86519', 'Micromax A064', 'Micromax_A064', 'Micromax A065', 'Micromax_A065', 'Micromax A066', 'Micromax_A066', 'Micromax A067', 'Micromax_A067', 'MICROMAX_A068', 'MICROMAX A068', 'Micromax A068', 'Micromax A069', 'Micromax_A069', 'Micromax A075', 'Micromax A082', 'Micromax_A082', 'Micromax A089', 'Micromax_A089', 'Micromax A091', 'Micromax A092', 'Micromax_A092', 'Micromax A093', 'Micromax_A093', 'Micromax A095', 'Micromax A096', 'Micromax_A101', 'Micromax A102', 'Micromax_A102', 'Micromax A104', 'Micromax a104', 'Micromax A105', 'Micromax_A105', 'Micromax A106', 'Micromax-A106', 'Micromax A108', 'Micromax_A109', 'Micromax A109', 'Micromax A110', 'Micromax_A110', 'Micromax A110Q', 'Micromax_A110Q', 'Micromax A111', 'Micromax A114', 'Micromax A114R', 'Micromax_A114R', 'Micromax A115', 'Micromax_A115', 'Micromax A116', 'Micromax_A116', 'Micromax A116i', 'Micromax_A116i', 'Micromax A117', 'Micromax_A117', 'Micromax A118R', 'Micromax A119', 'Micromax A120', 'Micromax A121', 'Micromax_A121', 'Micromax A15', 'Micromax A177', 'Micromax A190', 'Micromax_A190', 'Micromax A200', 'Micromax_A200', 'Micromax A21', 'Micromax A210', 'Micromax A24', 'Micromax_A24', 'Micromax A25 Smarty', 'Micromax A250', 'Micromax A255', 'Micromax_A255', 'Micromax A26', 'Micromax_A26', 'Micromax_A27', 'Micromax A27', 'Micromax_A28', 'Micromax A28/GRI40', 'Micromax A28', 'Micromax A290', 'Micromax A30', 'Micromax A300', 'Micromax A310', 'Micromax A311', 'Micromax A315', 'Micromax_A315', 'Micromax_A316', 'Micromax A316', 'Micromax_A34', 'Micromax A34', 'Micromax_A35', 'Micromax A35', 'Micromax A350', 'Micromax_A36', 'Micromax A36', 'Micromax_A37', 'Micromax A37', 'Micromax A37B', 'Micromax_A37B', 'Micromax A40', 'Micromax_A40', 'Micromax A46', 'Micromax_A46', 'Micromax A47', 'MicromaxA47', 'Micromax_A50', 'Micromax A50', 'Micromax A51', 'Micromax A52', 'Micromax A54', 'Micromax A56', 'Micromax_A57', 'Micromax A57', 'Micromax A58', 'Micromax_A58', 'Micromax A59', 'Micromax A60', 'Micromax A61', 'Micromax A62', 'Micromax_A62', 'Micromax A63', 'Micromax_A63', 'Micromax_A65', 'Micromax A65', 'Micromax_A66', 'Micromax A66', 'Micromax A67', 'Micromax A68', 'Micromax A69', 'Micromax_A69', 'Micromax_A70', 'Micromax A700', 'Micromax A71', 'Micromax_A71', 'Micromax A72', 'Micromax_A72', 'Micromax A73', 'Micromax_A74', 'Micromax A74', 'Micromax A75', 'Micromax_A76', 'Micromax A76', 'Micromax A77', 'Micromax A78', 'Micromax A79', 'en_us Micromax A80', 'Micromax A80', 'Micromax A82', 'Micromax_A82', 'Micromax A84', 'Micromax A85', 'Micromax A86', 'Micromax_A86', 'Micromax_A87', 'Micromax A87', 'Micromax A87 . Ninja 4.0', 'Micromax A88', 'Micromax_A88', 'Micromax A89', 'Micromax A90', 'Micromax A90s', 'MIcromax_A90s', 'Micromax A90S', 'Micromax A91', 'Micromax_A91', 'Micromax_A92', 'Micromax A92', 'MicromaxA93', 'Micromax A93', 'Micromax A94', 'Micromax_A94', 'Micromax A96', 'Micromax_A96', 'Micromax A97', 'Micromax_A99', 'Micromax A99', 'Micromax_AD3520', 'Micromax AD3520', 'Micromax AD3550', 'Micromax AD4500', 'Micromax_AD4500', 'Micromax AE90', 'Micromax AO5510', 'Micromax AQ5000', 'Micromax B4A', 'Micromax B5 Pro', 'B5Pro', 'Micromax_Bharat_5_Plus', 'Micromax Q402Plus', 'Micromax Q440', 'Micromax Bharat 5', 'Micromax Q4204', 'Micromax Bharat 5 Plus', 'Micromax Bharat 5 Pro', 'Micromax Bolt 3425', 'Micromax Bolt 2', 'Micromax Q402+', 'Micromax Q306', 'Micromax Q3001', 'Micromax Q301', 'Micromax Q303', 'Micromax Q324', 'Micromax Q326', 'Q327', 'Micromax Q327', 'Micromax Q3301', 'Micromax Q333', 'Micromax_Q333', 'Micromax Q338', 'Micromax Q346', 'Micromax Q354', 'Micromax Q357', 'Micromax Q383', 'Micromax_S302', 'Micromax S302', 'Micromax Q424', 'Micromax Q352', 'Micromax Q4101', 'Micromax C2A', 'Micromax C9', 'Micromax C1', 'Micromax C1A', 'Micromax C2APLS', 'Micromax Q4310', 'Micromax E4815', 'arm_64 Micromax E481', 'Micromax E481', 'Micromax E4816', 'Micromax Q462', 'Micromax Q463', 'Micromax E485', 'Micromax E484', 'Micromax AQ4501', 'Micromax AQ4502', 'A240', 'Micromax A240', 'Micromax Q391', 'Micromax E453', 'Micromax A107', 'Micromax HS2', 'Micromax HS1', 'Micromax_HS3', 'en Micromax_HS3', 'AQ5001', 'Micromax AQ5001', 'AQ5001 Canvas Power', 'Micromax Q392', 'Micromax Q465', 'Micromax Q461', 'Micromax Q350R', 'Micromax Q421', 'Micromax Q417', 'Micromax Q426', 'Micromax Q4260', 'Micromax E311', 'Micromax E352', 'Micromax E455', 'Micromax Q415', 'Micromax Q355', 'Micromax Q469', 'Micromax E451', 'Micromax E451', 'Micromax Q340', 'Micromax Q349', 'Micromax Q345', 'Micromax Q450', 'Micromax Q480', 'arm_64 Micromax Q480', 'Micromax Q380', 'Micromax Q3502', 'Micromax Q351', 'Micromax Q385', 'P70221', 'Micromax P681', 'MicromaxP802', 'Micromax Q427', 'Micromax_Q427', 'Micromax Q413', 'Micromax E313', 'Micromax D2', 'Micromax D200', 'Micromax_D200', 'Micromax D303', 'Micromax D304', 'Micromax_D304', 'Micromax D305', 'Micromax D306', 'Micromax D320', 'Micromax D321', 'Micromax D333', 'Micromax D340', 'Micromax D7517', 'Micromax DM5003', 'Micromax E353', 'Micromax E457', 'Micromax E458', 'Micromax E460', 'Micromax E471', 'Micromax E4817', 'Micromax E482', 'Micromax E483', 'Micromax E5018M', 'Micromax EG111', 'Micromax EG116', 'micromax F', 'micromax F189', 'Micromax F601', 'MicromaxF666', 'Micromax IN', 'Micromax E7533', 'Micromax E6523', 'IN_2b', 'IN_Note1', 'MICROMAX IN1', 'N8216', 'N8301', 'ione note', 'MICROMAX ione note', 'Micromax N4120', 'Micromax N8202', 'Micromax Ninja', 'Micromax Nitro', 'Micromax Note 1+', 'Micromax Note 5', 'Micromax Note3', 'Micromax NX', 'Micromax P001', 'Micromax P250(Funbook)', 'Micromax P255', 'Micromax P256', 'xx Micromax P275', 'Micromax_P275', 'Micromax P275', 'Micromax P280', 'Micromax P290', 'Micromax P310', 'Micromax P350', 'xx Micromax P350', 'Micromax P360', 'Micromax P362', 'Micromax P365', 'Micromax P410', 'Micromax P410i', 'Micromax_P410i', 'Micromax P420', 'Micromax P469', 'Micromax P470', 'MicromaxP480', 'Micromax P500(Funbook)', 'Micromax P560', 'Micromax P580', 'Micromax P580i', 'Micromax P600', 'Micromax P650', 'Micromax P650E', 'Micromax P660', 'Micromax P660', 'Micromax_P666', 'Micromax P666', 'MicromaxP680', 'Micromax P690', 'Micromax P701', 'MicromaxP702', 'Micromax P810', 'en Micromax Q300', 'Micromax_Q300', 'Micromax Q323', 'Micromax_Q323', 'Micromax Q325', 'Micromax_Q325', 'Micromax Q331', 'Micromax_Q331', 'Micromax Q332', 'Micromax_Q332', 'Micromax Q334', 'Micromax Q335', 'Micromax_Q335', 'Micromax Q336', 'Micromax_Q336', 'Micromax Q341', 'Micromax Q343', 'Micromax Q348', 'Micromax_Q353', 'en Micromax_Q353', 'Micromax_Q353P', 'Micromax Q3551', 'Micromax Q3555', 'Micromax Q361', 'Micromax Q370', 'Micromax_Q370', 'Micromax Q371', 'Micromax_Q371', 'Micromax Q375', 'Micromax_Q375', 'Micromax Q379', 'Micromax Q381', 'Micromax Q382', 'Micromax Q386', 'Micromax Q394', 'Micromax_Q394', 'Micromax Q395', 'Micromax Q397', 'Micromax Q398', 'arm Micromax Q398', 'Micromax Q400', 'Micromax_Q400', 'Micromax Q4002', 'en Micromax Q4002', 'Micromax Q401', 'Micromax Q402', 'Micromax Q402 Ultra', 'Micromax Q404', 'Micromax Q411', 'Micromax_Q411', 'Micromax Q412', 'Micromax Q414', 'Micromax Q416', 'Micromax Q419', 'Micromax Q4201', 'Micromax Q422', 'Micromax Q4220', 'Micromax Q423', 'Micromax Q428', 'Micromax_Q428', 'Micromax Q429', '720X1280 Micromax Q4309', 'Micromax Q4312', 'en_US Micromax Q437', 'Micromax Q440Plus', 'Micromax Q454', 'Micromax Q470', 'Micromax Q479', 'Micromax Q491', 'Micromax_Q491', 'Micromax Q502+', 'Micromax Q666', 'Micromax Q67', 'micromax Q68', 'micromax Q78', 'Micromax S300', 'Micromax_S300', 'Micromax S301', 'Micromax_S301', 'Micromax Q4311', 'Micromax Q4601', 'Micromax Q409A', 'Micromax Q409', 'Micromax Q452', 'Micromax Unite 3', 'Micromax Unite 2', 'Micromax Unite 2 A106', 'Micromax Q372', 'Micromax V89', 'Micromax Q4001', 'Micromax Q4202', 'Micromax Q4251', 'arm Micromax Q4251', 'Micromax W5509', 'Micromax X5098', 'Micromax-Xzoom A52', 'YU5530', 'YU5040', 'Micromax YU5900', 'YU5012', 'Micromax Z59']
        return(f'UCWEB/2.0 (Java; U; MIDP-2.0; en_US; {str(random.choice(self.micromax))}) U2/{random.randint(1,9)}.0.0 UCBrowser/{random.randint(1,9)}.{random.randint(1,9)}.0.{random.randint(30,999)} U2/1.0.0 Mobile UNTRUSTED/{random.randint(1,9)}.0')
        


"
v7pSddug,New-Mapcycle.ps1,Combreal,PowerShell,Sunday 10th of March 2024 11:46:36 AM CDT,"<#
.DESCRIPTION
Generates a random mapcycle.txt for Halo PC SAPP server from the mapList.txt and gametypeList.txt. 
Creates mapList.txt and gametypeList.txt with originals maps and gametypes if they don't exist.
#>

$scriptPath = Split-Path -Parent $MyInvocation.MyCommand.Definition
$mapListPath = ""$scriptPath\mapList.txt""
$gametypeListPath = ""$scriptPath\gametypeList.txt""
$mapcyclePath = ""$scriptPath\mapcycle.txt""

$mapcycleSize = 7

$mapList = @(
    ""bloodgulch"",
    ""beavercreek"",
    ""boardingaction"",
    ""carousel"",
    ""chillout"",
    ""dangercanyon"",
    ""deathisland"",
    ""direlict"",
    ""gephyrophobia"",
    ""hangemhigh"",
    ""icefield"",
    ""infinity"",
    ""longest"",
    ""prisoner"",
    ""putput"",
    ""ratrace"",
    ""sidewinder"",
    ""timberland"",
    ""wizard""
)

$gametypeList = @(
    ""oddball"",
    ""slayer"",
    ""juggernaut"",
    ""king"",
    ""crazy king"",
    ""race"",
    ""ctf"",
    ""assault"",
    ""team slayer"",
    ""team oddball"",
    ""team race""
)

If (-Not (Test-Path -Path $mapListPath)) {
    Out-File -FilePath $mapListPath -InputObject $mapList
}

If (-Not (Test-Path -Path $gametypeListPath)) {
    Out-File -FilePath $gametypeListPath -InputObject $gametypeList
}

$finalMapList = Get-Content $mapListPath
$finalGametypeList = Get-Content $gametypeListPath

$mapcycle = """"
For ($i=0; $i -lt $mapcycleSize;$i++) {
    $mapcycle = $mapcycle + ""$($finalMapList[$(Get-Random -Minimum 0 -Maximum $finalMapList.Length)]):$($finalGametypeList[$(Get-Random -Minimum 0 -Maximum $finalGametypeList.Length)]):0:16`n"" 
}

$mapcycle = $mapcycle.Trim()
[System.IO.File]::WriteAllText($mapcyclePath, $mapcycle)"
54C7nwt4,СПРИНТ № 5 | Распределение кода по файлам | Урок 4: Заголовочные файлы и файлы с реализацией 2/2,chevengur,C++,Sunday 10th of March 2024 11:44:02 AM CDT,"carpenter.h

#include ""wall.h""

class Carpenter {
public:
    int CalcShelves(const Wall& wall) const;
};
***************************************************************************************************************************************

#include ""carpenter.h""
#include ""square_calculation.h""
#include <iostream>

int Carpenter::CalcShelves(const Wall& wall) const
{
	int x = CalcSquare(wall.GetHeight(), wall.GetWidth());
	return x / 2;
}
***************************************************************************************************************************************

square_calculation.cpp

#include ""square_calculation.h""

double CalcSquare(double width, double height) {
    return width * height;
}
***************************************************************************************************************************************

square_calculation.h

double CalcSquare(double width, double height);
***************************************************************************************************************************************

wall.cpp

#include ""wall.h""

Wall::Wall(double width, double height)
        : width_(width), height_(height), color_(Color::WHITE)
{
}

double Wall::GetHeight() const {
    return height_;
}
double Wall::GetWidth() const {
    return width_;
}
void Wall::SetColor(Color color) {
    color_ = color;
}
Wall::Color Wall::GetColor() const {
    return color_;
}
***************************************************************************************************************************************

wall.h

class Wall {
public:
    enum class Color {
        BLUE,
        GREEN,
        RED,
        WHITE,
        YELLOW
    };

    Wall(double width, double height);

    double GetHeight() const;
    double GetWidth() const;
    void SetColor(Color color);
    Color GetColor() const;

private:
    double width_;
    double height_;
    Color color_;
};
"
7zTyhK6u,mp1-part1,maruma,C,Sunday 10th of March 2024 11:36:28 AM CDT,"#include ""kernel/types.h""
#include ""user/setjmp.h""
#include ""user/threads.h""
#include ""user/user.h""
#define NULL 0

static struct thread* current_thread = NULL;
static int id = 1;
static jmp_buf env_st;
static int main_jmped = 0; 
// static jmp_buf env_tmp;
//static int count = 0;
struct thread *thread_create(void (*f)(void *), void *arg){
    struct thread *t = (struct thread*) malloc(sizeof(struct thread));
    unsigned long new_stack_p;
    unsigned long new_stack;
    new_stack = (unsigned long) malloc(sizeof(unsigned long)*0x100);
    new_stack_p = new_stack +0x100*8-0x2*8;
    t->fp = f;
    t->arg = arg;
    t->ID  = id;
    id++;
    t->buf_set = 0;
    t->stack = (void*) new_stack;
    t->stack_p = (void*) new_stack_p;
    return t;
}
void thread_add_runqueue(struct thread *t){
    if(current_thread == NULL){
        current_thread = t;
        current_thread -> next = current_thread;
        current_thread -> previous = current_thread;
    }
    else{
        current_thread -> previous -> next = t;
        t -> previous = current_thread -> previous;
        t -> next = current_thread;
        current_thread -> previous = t; 
    }
}
void thread_yield(void){
    //printf(""yeild!"");
    printf(""before: thread %d: %lu\n"", current_thread -> ID, current_thread -> env -> sp);
    //current_thread -> env -> sp = (unsigned long) current_thread -> stack_p;
    printf(""middle: thread %d: %lu\n"", current_thread -> ID, current_thread -> env -> sp);
    current_thread -> buf_set = !setjmp(current_thread -> env);                           
    if(current_thread -> buf_set){ 
        printf(""after: thread %d: %lu\n======================================\n"", current_thread -> ID, current_thread -> env -> sp);
        //current_thread -> stack_p = (void *)current_thread -> env -> sp;
        schedule();/*
        count++;
        if(count == 6)
            exit(0);*/
        dispatch();                                                         
    }   
}
void dispatch(void){
    // TODO
    if(current_thread -> buf_set){/*
        printf(""======================================\nset!\n"");
        printf(""before: thread %d: %lu\n"", current_thread -> ID, current_thread -> env -> sp);
        printf(""dispatching Buf_set %d!\n"", current_thread -> ID);
        current_thread -> env -> sp = (unsigned long)current_thread -> stack_p;
        printf(""after: thread %d: %lu\n"", current_thread -> ID, current_thread -> env -> sp);*/
        longjmp(current_thread -> env, 1); 
    }
    else{
        printf(""======================================\n"");
        printf(""before: thread %d: %lu\n"", current_thread -> ID, current_thread -> env -> sp);
        current_thread -> env -> sp = (unsigned long) current_thread -> stack_p;
        printf(""after: thread %d: %lu\n"", current_thread -> ID, current_thread -> env -> sp);
        current_thread -> buf_set = !setjmp(current_thread -> env); 
        if(current_thread -> buf_set){
            (current_thread -> fp)(current_thread -> arg);
        }
    }
    thread_exit();
}
void schedule(void){
    current_thread = current_thread -> next;
    //printf(""schedule to %d!\n"", current_thread -> ID);
}
void thread_exit(void){
    //printf(""exiting?!\n"");
    if(current_thread->next != current_thread){
        struct thread* tmp = current_thread;
        current_thread = current_thread -> next;
        free(current_thread -> stack);
        free(tmp);
        dispatch();
    }
    else{
        // TODO
        // Hint: No more thread to execute
        longjmp(env_st, 1);
    }
}
void thread_start_threading(void){
    // TODO
    main_jmped = ! setjmp(env_st);
    if(main_jmped){
        //longjmp(env_st, 1);
        dispatch();
    }
}

// part 2
void thread_assign_task(struct thread *t, void (*f)(void *), void *arg){
    // TODO
}
"
fCu3Ji6n,Claude 3 Issue,xbsd,Python,Sunday 10th of March 2024 11:29:34 AM CDT,"import anthropic

client = anthropic.Anthropic(
    # defaults to os.environ.get(""ANTHROPIC_API_KEY"")
    api_key=os.environ[""ANTHROPIC_API_KEY""],
)


def create_anthropic_message(system_prompt, user_prompt, anthropic_model = ""claude-3-opus-20240229"", 
                             max_tokens = 200, temperature = 1, **kwargs):
    message = client.messages.create(
        model=anthropic_model,
        max_tokens=max_tokens,
        temperature=temperature,
        system=system_prompt,
        # Also include any other arguments in the def function kwargs
        **kwargs,
        messages=[{""role"": ""user"",""content"": [{""type"": ""text"",""text"": user_prompt}]}])
    return (message)

for i in range(20):
  try:
    r = create_anthropic_message(""You are an oncology expert"",""Compose a brief 1-sentence presentation of a US-based patient presenting with Skin Cancer."")
    print(r.content[0])
  except Exception as error:
    # handle the exception
    print(""An exception occurred:"", error)
    
# Results with Temperature 0
ContentBlock(text='A 62-year-old Caucasian male with a history of excessive sun exposure presents with a rapidly growing, asymmetric, irregularly bordered, 8mm diameter, dark brown to black pigmented lesion on his left upper back.', type='text')
ContentBlock(text='A 62-year-old Caucasian male with a history of excessive sun exposure presents with a rapidly growing, asymmetric, irregularly bordered, 8mm diameter, dark brown to black pigmented lesion on his left upper back.', type='text')
ContentBlock(text='A 62-year-old Caucasian male with a history of excessive sun exposure presents with a rapidly growing, asymmetric, irregularly bordered, 8mm diameter, dark brown to black pigmented lesion on his left upper back.', type='text')
ContentBlock(text='A 62-year-old Caucasian male with a history of excessive sun exposure presents with a rapidly growing, asymmetric, irregularly bordered, 8mm diameter, dark brown to black pigmented lesion on his left upper back.', type='text')


# Results with Temperature 1
ContentBlock(text='A 62-year-old Caucasian male from Florida presented with a rapidly growing, asymmetric, irregularly bordered, 8mm diameter, dark brown to black lesion on his left upper back that had changed in size and color over the past 3 months.', type='text')
ContentBlock(text='A 45-year-old fair-skinned female from Florida presents with a slowly growing, asymmetric, irregularly bordered, multicolored, 8mm diameter mole on her left forearm that has recently started to itch and bleed.', type='text')
ContentBlock(text='A 45-year-old Caucasian male construction worker from Florida presented with a rapidly growing, irregularly bordered, darkly pigmented lesion on his left shoulder that had changed in size and color over the past 3 months.', type='text')
ContentBlock(text='A 62-year-old Caucasian male with a history of extensive sun exposure presents with a rapidly growing, irregularly bordered, and multicolored lesion on his left forearm, suspicious for melanoma.', type='text')
"
CxT4dhMH,Arduino Analog Read,enrico1998,C++,Sunday 10th of March 2024 11:23:07 AM CDT,"int nilai_ldr;    // Mendefinisikan variabel untuk menyimpan nilai bacaan LDR

void setup() {
  Serial.begin(9600); // Memulai komunikasi serial untuk melihat nilai LDR di Serial Monitor
}

void loop() {
  nilai_ldr = analogRead(A0); // Membaca nilai dari LDR
  Serial.println(nilai_ldr);  // Menampilkan nilai di Serial Monitor
  delay(500);                 // Menunda selama 0,5 detik
}
"
n5nw2aA0,5. Print DNA,alexandaryordanov,JavaScript,Sunday 10th of March 2024 11:22:15 AM CDT,"function solve(number) {
    let sequence = [""A"", ""T"", ""C"", ""G"", ""T"", ""T"", ""A"", ""G"", ""G"", ""G""]
    let asterixSequence = [2, 1, 0, 1]
    let minusSequence = [0, 2, 4, 2]
    for (let i = 1; i <= number; i++) {
        let row = ""*"".repeat(asterixSequence[0]) + sequence[0] + ""-"".repeat(minusSequence[0]) + sequence[1] + ""*"".repeat(asterixSequence[0])
        console.log(row);
        sequence.push(sequence.shift());
        sequence.push(sequence.shift());
        asterixSequence.push(asterixSequence.shift())
        minusSequence.push(minusSequence.shift())
    }
}
"
rnkt5yme,СПРИНТ № 5 | Распределение кода по файлам | Урок 4: Заголовочные файлы и файлы с реализацией 1/2,chevengur,C++,Sunday 10th of March 2024 11:16:12 AM CDT,"wall.cpp

#include ""wall.h""

Wall::Wall(double width, double height)
    : width_(width)
    , height_(height)
    , color_(Color::WHITE) {
}
double Wall::GetHeight() const
{
    return height_;
}

double Wall::GetWidth() const
{
    return width_;
}

void Wall::SetColor(Color color)
{
    color_ = color;
}

Wall::Color Wall::GetColor() const
{
    return color_;
}

***************************************************************************************************************************************

wall.h

class Wall {
public:
    enum class Color { BLUE, GREEN, RED, WHITE, YELLOW };

    Wall(double width, double height);

    double GetHeight() const;
    double GetWidth() const;
    void SetColor(Color color);
    Color GetColor() const;

private:
    double width_;
    double height_;
    Color color_;
};
"
5DEnkrDz,arduino basic,enrico1998,C++,Sunday 10th of March 2024 11:10:47 AM CDT,"void setup() {
  // coding di sini akan dijalankan sekali saat Arduino pertama kali dinyalakan
}

void loop() {
  // coding di sini akan dijalankan berulang-ulang selama Arduino tetap dinyalakan
}
"
GXVXmD4v,Delta X Keyless UI SOURCE,Artani,Lua,Sunday 10th of March 2024 10:44:42 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/NathTheDev/Project/main/Delta_X""))()
DELTA X KEYLESS UI SOURCE"
e2fMRJ4e,CODEX EXECUTOR UI SOURCE KEYLESS,Artani,Lua,Sunday 10th of March 2024 10:44:10 AM CDT,"Codex Executor UI Source Keyless
loadstring(game:HttpGet(""https://raw.githubusercontent.com/NathTheDev/Project/main/Codex""))()"
dkEZhwuG,Nigerian scammers [10-3-1/2024],bombaires,AIMMS,Sunday 10th of March 2024 10:27:43 AM CDT,"<a href=""mailto:anpc@africamail.com"">anpc@africamail.com</a>
<a href=""mailto:oftc@collector.org"">oftc@collector.org</a>
<a href=""mailto:UFCU@dr.com"">UFCU@dr.com</a>
<a href=""mailto:mrjamesknight32@gmail.com"">mrjamesknight32@gmail.com</a>
<a href=""mailto:m.rjame.s.kn.ight.32@gmail.com"">m.rjame.s.kn.ight.32@gmail.com</a>
<a href=""mailto:m.r.jame.skni.g.h.t32@gmail.com"">m.r.jame.skni.g.h.t32@gmail.com</a>
<a href=""mailto:mr.ja.meskn.i.gh.t.32@gmail.com"">mr.ja.meskn.i.gh.t.32@gmail.com</a>
<a href=""mailto:m.r.j.a.meskni.gh.t32@gmail.com"">m.r.j.a.meskni.gh.t32@gmail.com</a>
<a href=""mailto:m.rjam.eskn.i.ght.3.2@gmail.com"">m.rjam.eskn.i.ght.3.2@gmail.com</a>
<a href=""mailto:mr.ja.m.eskn.i.gh.t3.2@gmail.com"">mr.ja.m.eskn.i.gh.t3.2@gmail.com</a>
<a href=""mailto:m.rj.ame.s.k.ni.g.h.t3.2@gmail.com"">m.rj.ame.s.k.ni.g.h.t3.2@gmail.com</a>
<a href=""mailto:m.r.ja.me.s.k.night3.2@gmail.com"">m.r.ja.me.s.k.night3.2@gmail.com</a>
<a href=""mailto:m.r.ja.mes.kni.g.ht32@gmail.com"">m.r.ja.mes.kni.g.ht32@gmail.com</a>
<a href=""mailto:mr.jam.es.k.n.i.g.h.t.32@gmail.com"">mr.jam.es.k.n.i.g.h.t.32@gmail.com</a>
<a href=""mailto:mrj.a.mes.k.n.ight.32@gmail.com"">mrj.a.mes.k.n.ight.32@gmail.com</a>
<a href=""mailto:m.rj.a.mes.k.n.i.g.h.t.32@gmail.com"">m.rj.a.mes.k.n.i.g.h.t.32@gmail.com</a>
<a href=""mailto:m.r.jame.s.k.nigh.t32@gmail.com"">m.r.jame.s.k.nigh.t32@gmail.com</a>
<a href=""mailto:m.rj.a.me.s.kn.i.gh.t32@gmail.com"">m.rj.a.me.s.kn.i.gh.t32@gmail.com</a>
<a href=""mailto:mrj.ame.s.kn.i.ght.3.2@gmail.com"">mrj.ame.s.kn.i.ght.3.2@gmail.com</a>
<a href=""mailto:mrjame.s.kn.i.ght3.2@gmail.com"">mrjame.s.kn.i.ght3.2@gmail.com</a>
<a href=""mailto:mrj.a.m.esk.nig.ht3.2@gmail.com"">mrj.a.m.esk.nig.ht3.2@gmail.com</a>
<a href=""mailto:mr.ja.meskn.ig.h.t3.2@gmail.com"">mr.ja.meskn.ig.h.t3.2@gmail.com</a>
<a href=""mailto:mr.j.am.eskn.i.ght32@gmail.com"">mr.j.am.eskn.i.ght32@gmail.com</a>
<a href=""mailto:mrjame.skni.gh.t.32@gmail.com"">mrjame.skni.gh.t.32@gmail.com</a>
<a href=""mailto:mrj.ame.sk.n.i.g.ht.3.2@gmail.com"">mrj.ame.sk.n.i.g.ht.3.2@gmail.com</a>
<a href=""mailto:mr.j.ame.s.kn.i.g.ht.32@gmail.com"">mr.j.ame.s.kn.i.g.ht.32@gmail.com</a>
<a href=""mailto:mrj.amesk.night3.2@gmail.com"">mrj.amesk.night3.2@gmail.com</a>
<a href=""mailto:mrj.am.e.sk.n.ight3.2@gmail.com"">mrj.am.e.sk.n.ight3.2@gmail.com</a>
<a href=""mailto:m.rja.meskni.ght32@gmail.com"">m.rja.meskni.ght32@gmail.com</a>
<a href=""mailto:m.rjam.e.s.knig.h.t3.2@gmail.com"">m.rjam.e.s.knig.h.t3.2@gmail.com</a>
<a href=""mailto:m.r.jam.esk.n.ig.ht.3.2@gmail.com"">m.r.jam.esk.n.ig.ht.3.2@gmail.com</a>
<a href=""mailto:mrja.m.es.k.night.32@gmail.com"">mrja.m.es.k.night.32@gmail.com</a>
<a href=""mailto:mrjam.esknig.h.t3.2@gmail.com"">mrjam.esknig.h.t3.2@gmail.com</a>
<a href=""mailto:m.r.j.ames.kn.i.g.h.t32@gmail.com"">m.r.j.ames.kn.i.g.h.t32@gmail.com</a>
<a href=""mailto:mrj.ame.s.k.nig.h.t3.2@gmail.com"">mrj.ame.s.k.nig.h.t3.2@gmail.com</a>
<a href=""mailto:mrj.a.m.es.k.night.3.2@gmail.com"">mrj.a.m.es.k.night.3.2@gmail.com</a>
<a href=""mailto:mrj.a.me.sk.n.igh.t.32@gmail.com"">mrj.a.me.sk.n.igh.t.32@gmail.com</a>
<a href=""mailto:mr.jam.e.skn.i.gh.t.3.2@gmail.com"">mr.jam.e.skn.i.gh.t.3.2@gmail.com</a>
<a href=""mailto:m.rjam.e.sknight.32@gmail.com"">m.rjam.e.sknight.32@gmail.com</a>
<a href=""mailto:m.r.j.a.m.es.kni.g.h.t.3.2@gmail.com"">m.r.j.a.m.es.kni.g.h.t.3.2@gmail.com</a>
<a href=""mailto:mr.ja.mesk.ni.gh.t.32@gmail.com"">mr.ja.mesk.ni.gh.t.32@gmail.com</a>
<a href=""mailto:mrjame.sk.n.i.gh.t.32@gmail.com"">mrjame.sk.n.i.gh.t.32@gmail.com</a>
<a href=""mailto:m.rjame.skni.ght32@gmail.com"">m.rjame.skni.ght32@gmail.com</a>
<a href=""mailto:mr.ja.mesk.n.i.gh.t.32@gmail.com"">mr.ja.mesk.n.i.gh.t.32@gmail.com</a>
<a href=""mailto:m.r.j.a.me.sk.nig.h.t3.2@gmail.com"">m.r.j.a.me.sk.nig.h.t3.2@gmail.com</a>
<a href=""mailto:m.rja.mesknig.h.t3.2@gmail.com"">m.rja.mesknig.h.t3.2@gmail.com</a>
<a href=""mailto:mr.j.a.mes.knig.h.t.3.2@gmail.com"">mr.j.a.mes.knig.h.t.3.2@gmail.com</a>
<a href=""mailto:m.r.j.ame.skn.i.ght32@gmail.com"">m.r.j.ame.skn.i.ght32@gmail.com</a>
<a href=""mailto:mrj.am.es.kn.i.gh.t.3.2@gmail.com"">mrj.am.es.kn.i.gh.t.3.2@gmail.com</a>
<a href=""mailto:mr.ja.mesk.n.ig.h.t.32@gmail.com"">mr.ja.mesk.n.ig.h.t.32@gmail.com</a>
<a href=""mailto:m.r.j.am.e.skni.gh.t32@gmail.com"">m.r.j.am.e.skni.gh.t32@gmail.com</a>
<a href=""mailto:mr.jame.s.k.ni.ght3.2@gmail.com"">mr.jame.s.k.ni.ght3.2@gmail.com</a>
<a href=""mailto:mr.j.a.me.skn.i.g.h.t.3.2@gmail.com"">mr.j.a.me.skn.i.g.h.t.3.2@gmail.com</a>
<a href=""mailto:m.r.j.a.m.es.k.ni.g.h.t32@gmail.com"">m.r.j.a.m.es.k.ni.g.h.t32@gmail.com</a>
<a href=""mailto:m.rj.a.m.esk.ni.g.h.t.32@gmail.com"">m.rj.a.m.esk.ni.g.h.t.32@gmail.com</a>
<a href=""mailto:mr.j.a.m.eskn.i.ght3.2@gmail.com"">mr.j.a.m.eskn.i.ght3.2@gmail.com</a>
<a href=""mailto:mrj.am.e.sknig.ht32@gmail.com"">mrj.am.e.sknig.ht32@gmail.com</a>
<a href=""mailto:mr.j.amesk.n.igh.t.3.2@gmail.com"">mr.j.amesk.n.igh.t.3.2@gmail.com</a>
<a href=""mailto:mrja.m.e.sknigh.t.3.2@gmail.com"">mrja.m.e.sknigh.t.3.2@gmail.com</a>
<a href=""mailto:mrj.a.m.es.kn.ig.h.t.32@gmail.com"">mrj.a.m.es.kn.ig.h.t.32@gmail.com</a>
<a href=""mailto:mrjames.kni.gh.t.3.2@gmail.com"">mrjames.kni.gh.t.3.2@gmail.com</a>
<a href=""mailto:mrjame.sk.ni.ght32@gmail.com"">mrjame.sk.ni.ght32@gmail.com</a>
<a href=""mailto:m.r.j.a.mes.k.nig.h.t.3.2@gmail.com"">m.r.j.a.mes.k.nig.h.t.3.2@gmail.com</a>
<a href=""mailto:mr.ja.m.esknig.ht32@gmail.com"">mr.ja.m.esknig.ht32@gmail.com</a>
<a href=""mailto:mr.ja.m.es.knig.h.t.32@gmail.com"">mr.ja.m.es.knig.h.t.32@gmail.com</a>
<a href=""mailto:mrj.a.m.e.s.k.ni.g.ht3.2@gmail.com"">mrj.a.m.e.s.k.ni.g.ht3.2@gmail.com</a>
<a href=""mailto:m.r.ja.mes.k.nig.h.t.32@gmail.com"">m.r.ja.mes.k.nig.h.t.32@gmail.com</a>
<a href=""mailto:mr.ja.m.es.kn.i.g.h.t32@gmail.com"">mr.ja.m.es.kn.i.g.h.t32@gmail.com</a>
<a href=""mailto:mrja.m.e.s.kn.i.g.ht.32@gmail.com"">mrja.m.e.s.kn.i.g.ht.32@gmail.com</a>
<a href=""mailto:mr.jame.s.k.ni.g.h.t3.2@gmail.com"">mr.jame.s.k.ni.g.h.t3.2@gmail.com</a>
<a href=""mailto:mrja.m.e.skn.i.ght32@gmail.com"">mrja.m.e.skn.i.ght32@gmail.com</a>
<a href=""mailto:m.rja.m.e.skni.gh.t.32@gmail.com"">m.rja.m.e.skni.gh.t.32@gmail.com</a>
<a href=""mailto:m.rjam.es.kni.g.ht.32@gmail.com"">m.rjam.es.kni.g.ht.32@gmail.com</a>
<a href=""mailto:mrja.m.e.s.kn.i.g.h.t.32@gmail.com"">mrja.m.e.s.kn.i.g.h.t.32@gmail.com</a>
<a href=""mailto:m.rj.a.m.e.s.kni.g.ht3.2@gmail.com"">m.rj.a.m.e.s.kni.g.ht3.2@gmail.com</a>
<a href=""mailto:mr.j.ames.kn.i.g.h.t3.2@gmail.com"">mr.j.ames.kn.i.g.h.t3.2@gmail.com</a>
<a href=""mailto:m.rj.ames.kni.gh.t3.2@gmail.com"">m.rj.ames.kni.gh.t3.2@gmail.com</a>
<a href=""mailto:m.r.ja.mes.k.n.ig.h.t3.2@gmail.com"">m.r.ja.mes.k.n.ig.h.t3.2@gmail.com</a>
<a href=""mailto:mr.jam.esk.n.i.gh.t3.2@gmail.com"">mr.jam.esk.n.i.gh.t3.2@gmail.com</a>
<a href=""mailto:m.rja.mes.kn.i.ght.3.2@gmail.com"">m.rja.mes.kn.i.ght.3.2@gmail.com</a>
<a href=""mailto:m.r.ja.me.s.k.nig.ht.32@gmail.com"">m.r.ja.me.s.k.nig.ht.32@gmail.com</a>
<a href=""mailto:m.r.jam.esk.ni.gh.t32@gmail.com"">m.r.jam.esk.ni.gh.t32@gmail.com</a>
<a href=""mailto:mr.ja.mes.k.n.ig.h.t3.2@gmail.com"">mr.ja.mes.k.n.ig.h.t3.2@gmail.com</a>
<a href=""mailto:mr.j.am.e.s.kni.gh.t.32@gmail.com"">mr.j.am.e.s.kni.gh.t.32@gmail.com</a>
<a href=""mailto:mr.ja.meskn.igh.t3.2@gmail.com"">mr.ja.meskn.igh.t3.2@gmail.com</a>
<a href=""mailto:mr.j.am.e.sk.n.i.gh.t.3.2@gmail.com"">mr.j.am.e.sk.n.i.gh.t.3.2@gmail.com</a>
<a href=""mailto:mrj.am.e.s.k.n.i.g.h.t3.2@gmail.com"">mrj.am.e.s.k.n.i.g.h.t3.2@gmail.com</a>
<a href=""mailto:mrj.a.m.es.kn.i.gh.t.3.2@gmail.com"">mrj.a.m.es.kn.i.gh.t.3.2@gmail.com</a>
<a href=""mailto:mr.ja.m.esk.n.i.g.h.t.32@gmail.com"">mr.ja.m.esk.n.i.g.h.t.32@gmail.com</a>
<a href=""mailto:m.r.j.a.m.esk.n.i.ght32@gmail.com"">m.r.j.a.m.esk.n.i.ght32@gmail.com</a>
<a href=""mailto:m.rj.a.me.s.k.n.i.g.h.t.32@gmail.com"">m.rj.a.me.s.k.n.i.g.h.t.32@gmail.com</a>
<a href=""mailto:mrjam.e.s.kn.ig.h.t.32@gmail.com"">mrjam.e.s.kn.ig.h.t.32@gmail.com</a>
<a href=""mailto:mrjames.kn.ig.ht3.2@gmail.com"">mrjames.kn.ig.ht3.2@gmail.com</a>
<a href=""mailto:m.r.j.am.esk.n.ig.h.t.32@gmail.com"">m.r.j.am.esk.n.ig.h.t.32@gmail.com</a>
<a href=""mailto:m.r.j.a.m.esk.n.ig.ht.3.2@gmail.com"">m.r.j.a.m.esk.n.ig.ht.3.2@gmail.com</a>
<a href=""mailto:mrj.a.mes.knig.ht3.2@gmail.com"">mrj.a.mes.knig.ht3.2@gmail.com</a>
<a href=""mailto:m.rj.ame.s.k.n.ig.h.t.3.2@gmail.com"">m.rj.ame.s.k.n.ig.h.t.3.2@gmail.com</a>
<a href=""mailto:m.rj.amesk.n.igh.t.32@gmail.com"">m.rj.amesk.n.igh.t.32@gmail.com</a>
<a href=""mailto:m.r.jamesk.ni.g.h.t.3.2@gmail.com"">m.r.jamesk.ni.g.h.t.3.2@gmail.com</a>
<a href=""mailto:mrja.mes.k.n.ight.32@gmail.com"">mrja.mes.k.n.ight.32@gmail.com</a>
<a href=""mailto:m.rja.mesk.n.igh.t32@gmail.com"">m.rja.mesk.n.igh.t32@gmail.com</a>
<a href=""mailto:m.r.ja.m.e.s.k.n.i.gh.t32@gmail.com"">m.r.ja.m.e.s.k.n.i.gh.t32@gmail.com</a>
<a href=""mailto:mr.ja.m.e.skn.igh.t3.2@gmail.com"">mr.ja.m.e.skn.igh.t3.2@gmail.com</a>
<a href=""mailto:m.r.jame.sk.ni.gh.t32@gmail.com"">m.r.jame.sk.ni.gh.t32@gmail.com</a>
<a href=""mailto:mrj.a.m.es.kn.i.g.h.t32@gmail.com"">mrj.a.m.es.kn.i.g.h.t32@gmail.com</a>
<a href=""mailto:m.r.j.a.m.eskn.i.gh.t.3.2@gmail.com"">m.r.j.a.m.eskn.i.gh.t.3.2@gmail.com</a>
<a href=""mailto:mrjam.es.k.n.i.g.ht32@gmail.com"">mrjam.es.k.n.i.g.ht32@gmail.com</a>
<a href=""mailto:m.r.j.am.e.s.k.n.igh.t32@gmail.com"">m.r.j.am.e.s.k.n.igh.t32@gmail.com</a>
<a href=""mailto:mr.jam.es.kn.i.g.ht.32@gmail.com"">mr.jam.es.kn.i.g.ht.32@gmail.com</a>
<a href=""mailto:m.r.j.am.eskni.g.ht32@gmail.com"">m.r.j.am.eskni.g.ht32@gmail.com</a>
<a href=""mailto:m.r.j.amesk.nig.h.t.32@gmail.com"">m.r.j.amesk.nig.h.t.32@gmail.com</a>
<a href=""mailto:m.r.j.a.me.s.k.n.igh.t32@gmail.com"">m.r.j.a.me.s.k.n.igh.t32@gmail.com</a>
<a href=""mailto:m.r.j.am.es.kni.gh.t3.2@gmail.com"">m.r.j.am.es.kni.gh.t3.2@gmail.com</a>
<a href=""mailto:mrja.mes.k.n.ig.ht.32@gmail.com"">mrja.mes.k.n.ig.ht.32@gmail.com</a>
<a href=""mailto:m.rja.m.e.s.kni.g.ht32@gmail.com"">m.rja.m.e.s.kni.g.ht32@gmail.com</a>
<a href=""mailto:m.r.j.a.mes.k.n.i.ght.3.2@gmail.com"">m.r.j.a.mes.k.n.i.ght.3.2@gmail.com</a>
<a href=""mailto:m.rj.ame.sk.n.ig.h.t.32@gmail.com"">m.rj.ame.sk.n.ig.h.t.32@gmail.com</a>
<a href=""mailto:m.r.james.kni.gh.t.3.2@gmail.com"">m.r.james.kni.gh.t.3.2@gmail.com</a>
<a href=""mailto:mrja.m.eskni.ght3.2@gmail.com"">mrja.m.eskni.ght3.2@gmail.com</a>
<a href=""mailto:m.rj.a.me.skn.i.gh.t32@gmail.com"">m.rj.a.me.skn.i.gh.t32@gmail.com</a>
<a href=""mailto:m.r.ja.m.es.k.ni.g.ht.32@gmail.com"">m.r.ja.m.es.k.ni.g.ht.32@gmail.com</a>
<a href=""mailto:mrjam.e.s.k.n.i.ght.3.2@gmail.com"">mrjam.e.s.k.n.i.ght.3.2@gmail.com</a>
<a href=""mailto:mrj.a.mes.k.ni.gh.t.32@gmail.com"">mrj.a.mes.k.ni.gh.t.32@gmail.com</a>
<a href=""mailto:m.rjam.eskni.gh.t.3.2@gmail.com"">m.rjam.eskni.gh.t.3.2@gmail.com</a>
<a href=""mailto:m.rj.amesk.n.i.g.h.t.3.2@gmail.com"">m.rj.amesk.n.i.g.h.t.3.2@gmail.com</a>
<a href=""mailto:m.r.j.ames.kn.i.g.h.t.3.2@gmail.com"">m.r.j.ames.kn.i.g.h.t.3.2@gmail.com</a>
<a href=""mailto:mr.j.am.es.knig.ht.32@gmail.com"">mr.j.am.es.knig.ht.32@gmail.com</a>
<a href=""mailto:m.rjam.eskn.i.g.h.t3.2@gmail.com"">m.rjam.eskn.i.g.h.t3.2@gmail.com</a>
<a href=""mailto:mrja.m.esk.ni.ght.3.2@gmail.com"">mrja.m.esk.ni.ght.3.2@gmail.com</a>
<a href=""mailto:m.r.j.ame.s.k.n.ig.h.t32@gmail.com"">m.r.j.ame.s.k.n.ig.h.t32@gmail.com</a>
<a href=""mailto:mrja.m.e.sk.n.i.ght.3.2@gmail.com"">mrja.m.e.sk.n.i.ght.3.2@gmail.com</a>
<a href=""mailto:m.rj.ames.k.n.ig.ht.32@gmail.com"">m.rj.ames.k.n.ig.ht.32@gmail.com</a>
<a href=""mailto:mr.j.am.es.knigh.t.32@gmail.com"">mr.j.am.es.knigh.t.32@gmail.com</a>
<a href=""mailto:mr.ja.mesk.ni.ght3.2@gmail.com"">mr.ja.mesk.ni.ght3.2@gmail.com</a>
<a href=""mailto:mrj.a.me.s.k.night.3.2@gmail.com"">mrj.a.me.s.k.night.3.2@gmail.com</a>
<a href=""mailto:mrj.am.e.s.kn.ight.3.2@gmail.com"">mrj.am.e.s.kn.ight.3.2@gmail.com</a>
<a href=""mailto:mr.j.amesk.n.ig.h.t.3.2@gmail.com"">mr.j.amesk.n.ig.h.t.3.2@gmail.com</a>
<a href=""mailto:m.r.j.am.esk.ni.gh.t3.2@gmail.com"">m.r.j.am.esk.ni.gh.t3.2@gmail.com</a>
<a href=""mailto:m.rj.am.e.s.kn.i.g.ht.3.2@gmail.com"">m.rj.am.e.s.kn.i.g.ht.3.2@gmail.com</a>
<a href=""mailto:m.r.j.a.me.s.k.ni.ght3.2@gmail.com"">m.r.j.a.me.s.k.ni.ght3.2@gmail.com</a>
<a href=""mailto:mr.jam.e.skn.i.g.h.t32@gmail.com"">mr.jam.e.skn.i.g.h.t32@gmail.com</a>
<a href=""mailto:mrj.ame.s.knigh.t32@gmail.com"">mrj.ame.s.knigh.t32@gmail.com</a>
<a href=""mailto:m.rj.a.m.es.k.n.i.gh.t.3.2@gmail.com"">m.rj.a.m.es.k.n.i.gh.t.3.2@gmail.com</a>
<a href=""mailto:mr.ja.m.e.skni.g.h.t32@gmail.com"">mr.ja.m.e.skni.g.h.t32@gmail.com</a>
<a href=""mailto:m.rjame.skn.ig.h.t.32@gmail.com"">m.rjame.skn.ig.h.t.32@gmail.com</a>
<a href=""mailto:m.rja.m.es.knig.h.t.32@gmail.com"">m.rja.m.es.knig.h.t.32@gmail.com</a>
<a href=""mailto:m.r.j.a.me.s.knight32@gmail.com"">m.r.j.a.me.s.knight32@gmail.com</a>
<a href=""mailto:m.r.ja.m.e.s.kn.i.gh.t.3.2@gmail.com"">m.r.ja.m.e.s.kn.i.gh.t.3.2@gmail.com</a>
<a href=""mailto:m.r.j.ame.s.kn.i.ght.32@gmail.com"">m.r.j.ame.s.kn.i.ght.32@gmail.com</a>
<a href=""mailto:m.rjameskn.i.ght32@gmail.com"">m.rjameskn.i.ght32@gmail.com</a>
<a href=""mailto:m.rj.a.m.es.kn.i.ght3.2@gmail.com"">m.rj.a.m.es.kn.i.ght3.2@gmail.com</a>
<a href=""mailto:m.r.jam.e.s.k.n.i.g.ht.32@gmail.com"">m.r.jam.e.s.k.n.i.g.ht.32@gmail.com</a>
<a href=""mailto:m.r.j.ames.k.nig.ht.3.2@gmail.com"">m.r.j.ames.k.nig.ht.3.2@gmail.com</a>
<a href=""mailto:mr.j.am.esk.ni.ght.3.2@gmail.com"">mr.j.am.esk.ni.ght.3.2@gmail.com</a>
<a href=""mailto:mrj.a.m.e.s.kn.i.g.h.t.32@gmail.com"">mrj.a.m.e.s.kn.i.g.h.t.32@gmail.com</a>
<a href=""mailto:mrja.m.e.s.k.n.ig.h.t.32@gmail.com"">mrja.m.e.s.k.n.ig.h.t.32@gmail.com</a>
<a href=""mailto:m.r.j.am.es.knig.ht.32@gmail.com"">m.r.j.am.es.knig.ht.32@gmail.com</a>
<a href=""mailto:m.r.j.ames.k.ni.g.h.t32@gmail.com"">m.r.j.ames.k.ni.g.h.t32@gmail.com</a>
<a href=""mailto:m.r.j.ame.skn.ig.ht.3.2@gmail.com"">m.r.j.ame.skn.ig.ht.3.2@gmail.com</a>
<a href=""mailto:m.rja.m.es.knigh.t32@gmail.com"">m.rja.m.es.knigh.t32@gmail.com</a>
<a href=""mailto:m.rj.am.e.sk.night.3.2@gmail.com"">m.rj.am.e.sk.night.3.2@gmail.com</a>
<a href=""mailto:mrj.am.e.s.k.nigh.t32@gmail.com"">mrj.am.e.s.k.nigh.t32@gmail.com</a>
<a href=""mailto:m.r.james.k.nig.h.t3.2@gmail.com"">m.r.james.k.nig.h.t3.2@gmail.com</a>
<a href=""mailto:m.rja.mes.k.n.ig.h.t.3.2@gmail.com"">m.rja.mes.k.n.ig.h.t.3.2@gmail.com</a>
<a href=""mailto:m.rj.a.mes.kn.i.g.ht.3.2@gmail.com"">m.rj.a.mes.kn.i.g.ht.3.2@gmail.com</a>
<a href=""mailto:mr.jame.s.k.n.i.ght.3.2@gmail.com"">mr.jame.s.k.n.i.ght.3.2@gmail.com</a>
<a href=""mailto:mr.j.a.me.s.k.nig.ht3.2@gmail.com"">mr.j.a.me.s.k.nig.ht3.2@gmail.com</a>
<a href=""mailto:mrja.m.esk.n.i.ght.32@gmail.com"">mrja.m.esk.n.i.ght.32@gmail.com</a>
<a href=""mailto:m.rjam.esk.n.i.g.h.t32@gmail.com"">m.rjam.esk.n.i.g.h.t32@gmail.com</a>
<a href=""mailto:m.rjamesk.ni.g.h.t.3.2@gmail.com"">m.rjamesk.ni.g.h.t.3.2@gmail.com</a>
<a href=""mailto:m.rj.a.me.skn.i.g.ht.32@gmail.com"">m.rj.a.me.skn.i.g.ht.32@gmail.com</a>
<a href=""mailto:m.rj.am.es.kn.i.gh.t.32@gmail.com"">m.rj.am.es.kn.i.gh.t.32@gmail.com</a>
<a href=""mailto:m.r.j.a.me.s.k.nig.h.t.32@gmail.com"">m.r.j.a.me.s.k.nig.h.t.32@gmail.com</a>
<a href=""mailto:m.rja.m.e.sk.ni.g.ht.3.2@gmail.com"">m.rja.m.e.sk.ni.g.ht.3.2@gmail.com</a>
<a href=""mailto:mrj.am.e.skni.g.ht32@gmail.com"">mrj.am.e.skni.g.ht32@gmail.com</a>
<a href=""mailto:mr.jam.e.s.k.n.ight32@gmail.com"">mr.jam.e.s.k.n.ight32@gmail.com</a>
<a href=""mailto:m.r.j.a.m.e.s.k.n.i.g.h.t.3.2@gmail.com"">m.r.j.a.m.e.s.k.n.i.g.h.t.3.2@gmail.com</a>
<a href=""mailto:mrjame.s.knig.ht3.2@gmail.com"">mrjame.s.knig.ht3.2@gmail.com</a>
<a href=""mailto:m.r.j.ame.skn.ig.ht32@gmail.com"">m.r.j.ame.skn.ig.ht32@gmail.com</a>
<a href=""mailto:m.rjam.esk.n.i.g.ht.32@gmail.com"">m.rjam.esk.n.i.g.ht.32@gmail.com</a>
<a href=""mailto:mr.jamesknig.ht3.2@gmail.com"">mr.jamesknig.ht3.2@gmail.com</a>
<a href=""mailto:m.r.ja.mes.k.n.i.ght3.2@gmail.com"">m.r.ja.mes.k.n.i.ght3.2@gmail.com</a>
<a href=""mailto:m.rj.a.meskn.ig.ht32@gmail.com"">m.rj.a.meskn.ig.ht32@gmail.com</a>
<a href=""mailto:m.r.ja.mesk.ni.ght3.2@gmail.com"">m.r.ja.mesk.ni.ght3.2@gmail.com</a>
<a href=""mailto:mrjame.s.k.n.ig.ht.3.2@gmail.com"">mrjame.s.k.n.ig.ht.3.2@gmail.com</a>
<a href=""mailto:m.r.ja.m.e.skn.ig.h.t.32@gmail.com"">m.r.ja.m.e.skn.ig.h.t.32@gmail.com</a>
<a href=""mailto:mr.j.a.mesk.n.ig.h.t3.2@gmail.com"">mr.j.a.mesk.n.ig.h.t3.2@gmail.com</a>
<a href=""mailto:m.r.j.ame.skni.g.h.t32@gmail.com"">m.r.j.ame.skni.g.h.t32@gmail.com</a>
<a href=""mailto:m.rj.a.m.es.kn.ig.ht.32@gmail.com"">m.rj.a.m.es.kn.ig.ht.32@gmail.com</a>
<a href=""mailto:m.r.ja.mes.kn.igh.t.32@gmail.com"">m.r.ja.mes.kn.igh.t.32@gmail.com</a>
<a href=""mailto:mr.j.a.me.s.k.n.ig.h.t32@gmail.com"">mr.j.a.me.s.k.n.ig.h.t32@gmail.com</a>
<a href=""mailto:mrj.ameskn.ight.3.2@gmail.com"">mrj.ameskn.ight.3.2@gmail.com</a>
<a href=""mailto:mr.jam.es.knight32@gmail.com"">mr.jam.es.knight32@gmail.com</a>
<a href=""mailto:m.r.jame.skn.i.ght32@gmail.com"">m.r.jame.skn.i.ght32@gmail.com</a>
<a href=""mailto:m.rjam.e.s.k.ni.g.ht.32@gmail.com"">m.rjam.e.s.k.ni.g.ht.32@gmail.com</a>
<a href=""mailto:mrj.ame.s.knig.h.t32@gmail.com"">mrj.ame.s.knig.h.t32@gmail.com</a>
<a href=""mailto:m.r.ja.m.e.s.k.n.ight32@gmail.com"">m.r.ja.m.e.s.k.n.ight32@gmail.com</a>
<a href=""mailto:mrj.a.m.e.sknigh.t.32@gmail.com"">mrj.a.m.e.sknigh.t.32@gmail.com</a>
<a href=""mailto:mrja.me.s.knight.3.2@gmail.com"">mrja.me.s.knight.3.2@gmail.com</a>
<a href=""mailto:m.r.jame.s.kn.igh.t3.2@gmail.com"">m.r.jame.s.kn.igh.t3.2@gmail.com</a>
<a href=""mailto:mr.j.am.es.k.ni.g.h.t.32@gmail.com"">mr.j.am.es.k.ni.g.h.t.32@gmail.com</a>
<a href=""mailto:m.r.j.am.e.s.kni.ght.32@gmail.com"">m.r.j.am.e.s.kni.ght.32@gmail.com</a>
<a href=""mailto:m.r.j.ames.k.n.i.gh.t32@gmail.com"">m.r.j.ames.k.n.i.gh.t32@gmail.com</a>
<a href=""mailto:mr.ja.me.s.kni.g.ht.32@gmail.com"">mr.ja.me.s.kni.g.ht.32@gmail.com</a>
<a href=""mailto:bkjp32252@gmail.com"">bkjp32252@gmail.com</a>
<a href=""mailto:bk.jp.32.252@gmail.com"">bk.jp.32.252@gmail.com</a>
<a href=""mailto:bk.jp.3.2.25.2@gmail.com"">bk.jp.3.2.25.2@gmail.com</a>
<a href=""mailto:b.k.jp.32252@gmail.com"">b.k.jp.32252@gmail.com</a>
<a href=""mailto:bkj.p.32.2.52@gmail.com"">bkj.p.32.2.52@gmail.com</a>
<a href=""mailto:bk.jp32.2.52@gmail.com"">bk.jp32.2.52@gmail.com</a>
<a href=""mailto:bk.j.p3.2.2.52@gmail.com"">bk.j.p3.2.2.52@gmail.com</a>
<a href=""mailto:b.kjp32.2.5.2@gmail.com"">b.kjp32.2.5.2@gmail.com</a>
<a href=""mailto:bkjp3.22.5.2@gmail.com"">bkjp3.22.5.2@gmail.com</a>
<a href=""mailto:bk.j.p.32252@gmail.com"">bk.j.p.32252@gmail.com</a>
<a href=""mailto:bk.j.p32.252@gmail.com"">bk.j.p32.252@gmail.com</a>
<a href=""mailto:bk.j.p32252@gmail.com"">bk.j.p32252@gmail.com</a>
<a href=""mailto:b.kjp.3225.2@gmail.com"">b.kjp.3225.2@gmail.com</a>
<a href=""mailto:bk.jp.3.2.2.52@gmail.com"">bk.jp.3.2.2.52@gmail.com</a>
<a href=""mailto:b.kj.p32.2.5.2@gmail.com"">b.kj.p32.2.5.2@gmail.com</a>
<a href=""mailto:b.kjp32252@gmail.com"">b.kjp32252@gmail.com</a>
<a href=""mailto:bk.j.p3.2.25.2@gmail.com"">bk.j.p3.2.25.2@gmail.com</a>
<a href=""mailto:bk.jp.32.2.52@gmail.com"">bk.jp.32.2.52@gmail.com</a>
<a href=""mailto:b.k.j.p.3.2252@gmail.com"">b.k.j.p.3.2252@gmail.com</a>
<a href=""mailto:b.kj.p3.22.5.2@gmail.com"">b.kj.p3.22.5.2@gmail.com</a>
<a href=""mailto:bk.j.p32.25.2@gmail.com"">bk.j.p32.25.2@gmail.com</a>
<a href=""mailto:b.kj.p.3.225.2@gmail.com"">b.kj.p.3.225.2@gmail.com</a>
<a href=""mailto:bk.jp.3.2.252@gmail.com"">bk.jp.3.2.252@gmail.com</a>
<a href=""mailto:b.kjp3.2.252@gmail.com"">b.kjp3.2.252@gmail.com</a>
<a href=""mailto:bk.j.p3.225.2@gmail.com"">bk.j.p3.225.2@gmail.com</a>
<a href=""mailto:bk.j.p3.22.5.2@gmail.com"">bk.j.p3.22.5.2@gmail.com</a>
<a href=""mailto:b.kjp3.22.52@gmail.com"">b.kjp3.22.52@gmail.com</a>
<a href=""mailto:bkjp32.252@gmail.com"">bkjp32.252@gmail.com</a>
<a href=""mailto:bk.j.p.3.2.25.2@gmail.com"">bk.j.p.3.2.25.2@gmail.com</a>
<a href=""mailto:b.k.j.p.322.5.2@gmail.com"">b.k.j.p.322.5.2@gmail.com</a>
<a href=""mailto:b.k.j.p322.52@gmail.com"">b.k.j.p322.52@gmail.com</a>
<a href=""mailto:b.k.j.p.32.2.5.2@gmail.com"">b.k.j.p.32.2.5.2@gmail.com</a>
<a href=""mailto:b.k.jp3.2252@gmail.com"">b.k.jp3.2252@gmail.com</a>
<a href=""mailto:b.k.j.p.32252@gmail.com"">b.k.j.p.32252@gmail.com</a>
<a href=""mailto:b.k.j.p.32.25.2@gmail.com"">b.k.j.p.32.25.2@gmail.com</a>
<a href=""mailto:b.kj.p.32.2.52@gmail.com"">b.kj.p.32.2.52@gmail.com</a>
<a href=""mailto:b.k.j.p32252@gmail.com"">b.k.j.p32252@gmail.com</a>
<a href=""mailto:bkj.p3.225.2@gmail.com"">bkj.p3.225.2@gmail.com</a>
<a href=""mailto:bkjp.32.25.2@gmail.com"">bkjp.32.25.2@gmail.com</a>
<a href=""mailto:b.kjp.32252@gmail.com"">b.kjp.32252@gmail.com</a>
<a href=""mailto:b.kjp32.252@gmail.com"">b.kjp32.252@gmail.com</a>
<a href=""mailto:b.k.jp.3.2.2.52@gmail.com"">b.k.jp.3.2.2.52@gmail.com</a>
<a href=""mailto:b.k.jp.322.5.2@gmail.com"">b.k.jp.322.5.2@gmail.com</a>
<a href=""mailto:bkjp3.2.252@gmail.com"">bkjp3.2.252@gmail.com</a>
<a href=""mailto:bk.j.p3.2.2.5.2@gmail.com"">bk.j.p3.2.2.5.2@gmail.com</a>
<a href=""mailto:bkjp3.22.52@gmail.com"">bkjp3.22.52@gmail.com</a>
<a href=""mailto:b.kj.p3225.2@gmail.com"">b.kj.p3225.2@gmail.com</a>
<a href=""mailto:b.k.j.p32.2.52@gmail.com"">b.k.j.p32.2.52@gmail.com</a>
<a href=""mailto:b.kjp.322.5.2@gmail.com"">b.kjp.322.5.2@gmail.com</a>
<a href=""mailto:b.kjp.32.2.5.2@gmail.com"">b.kjp.32.2.5.2@gmail.com</a>
<a href=""mailto:b.kj.p3.225.2@gmail.com"">b.kj.p3.225.2@gmail.com</a>
<a href=""mailto:bkj.p3.22.5.2@gmail.com"">bkj.p3.22.5.2@gmail.com</a>
<a href=""mailto:b.k.j.p.32.252@gmail.com"">b.k.j.p.32.252@gmail.com</a>
<a href=""mailto:b.kj.p.322.5.2@gmail.com"">b.kj.p.322.5.2@gmail.com</a>
<a href=""mailto:b.kj.p32.25.2@gmail.com"">b.kj.p32.25.2@gmail.com</a>
<a href=""mailto:bkj.p3.2252@gmail.com"">bkj.p3.2252@gmail.com</a>
<a href=""mailto:bk.jp.3.22.5.2@gmail.com"">bk.jp.3.22.5.2@gmail.com</a>
<a href=""mailto:b.kjp3.2.2.52@gmail.com"">b.kjp3.2.2.52@gmail.com</a>
<a href=""mailto:bkjp322.5.2@gmail.com"">bkjp322.5.2@gmail.com</a>
<a href=""mailto:bk.jp32252@gmail.com"">bk.jp32252@gmail.com</a>
<a href=""mailto:b.kjp.3.225.2@gmail.com"">b.kjp.3.225.2@gmail.com</a>
<a href=""mailto:b.kjp.3.2.252@gmail.com"">b.kjp.3.2.252@gmail.com</a>
<a href=""mailto:b.k.jp32.2.5.2@gmail.com"">b.k.jp32.2.5.2@gmail.com</a>
<a href=""mailto:b.k.j.p3.2252@gmail.com"">b.k.j.p3.2252@gmail.com</a>
<a href=""mailto:bk.j.p.3.22.5.2@gmail.com"">bk.j.p.3.22.5.2@gmail.com</a>
<a href=""mailto:bkjp.32252@gmail.com"">bkjp.32252@gmail.com</a>
<a href=""mailto:b.kj.p3.2252@gmail.com"">b.kj.p3.2252@gmail.com</a>
<a href=""mailto:b.k.jp.3.2252@gmail.com"">b.k.jp.3.2252@gmail.com</a>
<a href=""mailto:bkj.p.322.5.2@gmail.com"">bkj.p.322.5.2@gmail.com</a>
<a href=""mailto:b.k.j.p.3225.2@gmail.com"">b.k.j.p.3225.2@gmail.com</a>
<a href=""mailto:b.k.j.p.3.22.52@gmail.com"">b.k.j.p.3.22.52@gmail.com</a>
<a href=""mailto:bkjp3.225.2@gmail.com"">bkjp3.225.2@gmail.com</a>
<a href=""mailto:bk.j.p.32.2.52@gmail.com"">bk.j.p.32.2.52@gmail.com</a>
<a href=""mailto:bk.jp3.22.5.2@gmail.com"">bk.jp3.22.5.2@gmail.com</a>
<a href=""mailto:bkj.p32252@gmail.com"">bkj.p32252@gmail.com</a>
<a href=""mailto:bk.j.p3.22.52@gmail.com"">bk.j.p3.22.52@gmail.com</a>
<a href=""mailto:bkjp32.25.2@gmail.com"">bkjp32.25.2@gmail.com</a>
<a href=""mailto:b.k.jp322.52@gmail.com"">b.k.jp322.52@gmail.com</a>
<a href=""mailto:b.kjp.3.2.25.2@gmail.com"">b.kjp.3.2.25.2@gmail.com</a>
<a href=""mailto:b.kj.p.3.2252@gmail.com"">b.kj.p.3.2252@gmail.com</a>
<a href=""mailto:bk.j.p322.5.2@gmail.com"">bk.j.p322.5.2@gmail.com</a>
<a href=""mailto:bkjp.3.2.252@gmail.com"">bkjp.3.2.252@gmail.com</a>
<a href=""mailto:bkj.p3.22.52@gmail.com"">bkj.p3.22.52@gmail.com</a>
<a href=""mailto:bk.jp3.225.2@gmail.com"">bk.jp3.225.2@gmail.com</a>
<a href=""mailto:bk.jp.3.22.52@gmail.com"">bk.jp.3.22.52@gmail.com</a>
<a href=""mailto:b.kjp.32.25.2@gmail.com"">b.kjp.32.25.2@gmail.com</a>
<a href=""mailto:b.kj.p.3.2.25.2@gmail.com"">b.kj.p.3.2.25.2@gmail.com</a>
<a href=""mailto:b.kjp.3.22.5.2@gmail.com"">b.kjp.3.22.5.2@gmail.com</a>
<a href=""mailto:b.kj.p3.2.2.52@gmail.com"">b.kj.p3.2.2.52@gmail.com</a>
<a href=""mailto:bk.j.p.32.252@gmail.com"">bk.j.p.32.252@gmail.com</a>
<a href=""mailto:bk.jp322.5.2@gmail.com"">bk.jp322.5.2@gmail.com</a>
<a href=""mailto:bkj.p32.252@gmail.com"">bkj.p32.252@gmail.com</a>
<a href=""mailto:bk.jp3.2.252@gmail.com"">bk.jp3.2.252@gmail.com</a>
<a href=""mailto:b.kjp3.2.2.5.2@gmail.com"">b.kjp3.2.2.5.2@gmail.com</a>
<a href=""mailto:bk.j.p.3.2.2.52@gmail.com"">bk.j.p.3.2.2.52@gmail.com</a>
<a href=""mailto:b.kj.p.3225.2@gmail.com"">b.kj.p.3225.2@gmail.com</a>
<a href=""mailto:b.k.jp.32.2.52@gmail.com"">b.k.jp.32.2.52@gmail.com</a>
<a href=""mailto:b.k.j.p.3.2.25.2@gmail.com"">b.k.j.p.3.2.25.2@gmail.com</a>
<a href=""mailto:b.k.jp.3.225.2@gmail.com"">b.k.jp.3.225.2@gmail.com</a>
<a href=""mailto:b.kjp3.2.25.2@gmail.com"">b.kjp3.2.25.2@gmail.com</a>
<a href=""mailto:b.k.jp3.22.52@gmail.com"">b.k.jp3.22.52@gmail.com</a>
<a href=""mailto:bkjp.32.252@gmail.com"">bkjp.32.252@gmail.com</a>
<a href=""mailto:bk.jp3.2.2.52@gmail.com"">bk.jp3.2.2.52@gmail.com</a>
<a href=""mailto:b.kjp322.52@gmail.com"">b.kjp322.52@gmail.com</a>
<a href=""mailto:bkjp.32.2.5.2@gmail.com"">bkjp.32.2.5.2@gmail.com</a>
<a href=""mailto:b.k.j.p32.252@gmail.com"">b.k.j.p32.252@gmail.com</a>
<a href=""mailto:b.kjp322.5.2@gmail.com"">b.kjp322.5.2@gmail.com</a>
<a href=""mailto:b.kjp3.225.2@gmail.com"">b.kjp3.225.2@gmail.com</a>
<a href=""mailto:b.kj.p3.22.52@gmail.com"">b.kj.p3.22.52@gmail.com</a>
<a href=""mailto:b.kj.p.3.22.52@gmail.com"">b.kj.p.3.22.52@gmail.com</a>
<a href=""mailto:bk.j.p322.52@gmail.com"">bk.j.p322.52@gmail.com</a>
<a href=""mailto:bk.j.p.3.2252@gmail.com"">bk.j.p.3.2252@gmail.com</a>
<a href=""mailto:bkj.p32.2.5.2@gmail.com"">bkj.p32.2.5.2@gmail.com</a>
<a href=""mailto:bk.jp.3.225.2@gmail.com"">bk.jp.3.225.2@gmail.com</a>
<a href=""mailto:bk.j.p.32.2.5.2@gmail.com"">bk.j.p.32.2.5.2@gmail.com</a>
<a href=""mailto:b.k.jp.3.22.5.2@gmail.com"">b.k.jp.3.22.5.2@gmail.com</a>
<a href=""mailto:bk.j.p.3.2.252@gmail.com"">bk.j.p.3.2.252@gmail.com</a>
<a href=""mailto:bk.jp.32252@gmail.com"">bk.jp.32252@gmail.com</a>
<a href=""mailto:bk.jp32.252@gmail.com"">bk.jp32.252@gmail.com</a>
<a href=""mailto:b.kjp32.2.52@gmail.com"">b.kjp32.2.52@gmail.com</a>
<a href=""mailto:bk.j.p.3.2.2.5.2@gmail.com"">bk.j.p.3.2.2.5.2@gmail.com</a>
<a href=""mailto:bk.j.p32.2.5.2@gmail.com"">bk.j.p32.2.5.2@gmail.com</a>
<a href=""mailto:b.k.jp322.5.2@gmail.com"">b.k.jp322.5.2@gmail.com</a>
<a href=""mailto:bkjp32.2.52@gmail.com"">bkjp32.2.52@gmail.com</a>
<a href=""mailto:b.k.jp.32.2.5.2@gmail.com"">b.k.jp.32.2.5.2@gmail.com</a>
<a href=""mailto:b.k.jp.3225.2@gmail.com"">b.k.jp.3225.2@gmail.com</a>
<a href=""mailto:bkjp.3.22.5.2@gmail.com"">bkjp.3.22.5.2@gmail.com</a>
<a href=""mailto:b.kj.p.3.22.5.2@gmail.com"">b.kj.p.3.22.5.2@gmail.com</a>
<a href=""mailto:b.kjp.3.2.2.5.2@gmail.com"">b.kjp.3.2.2.5.2@gmail.com</a>
<a href=""mailto:b.k.jp3.2.2.5.2@gmail.com"">b.k.jp3.2.2.5.2@gmail.com</a>
<a href=""mailto:b.kj.p322.52@gmail.com"">b.kj.p322.52@gmail.com</a>
<a href=""mailto:bkjp322.52@gmail.com"">bkjp322.52@gmail.com</a>
<a href=""mailto:bkjp.3.2.2.52@gmail.com"">bkjp.3.2.2.52@gmail.com</a>
<a href=""mailto:b.kj.p32252@gmail.com"">b.kj.p32252@gmail.com</a>
<a href=""mailto:b.k.j.p3.22.5.2@gmail.com"">b.k.j.p3.22.5.2@gmail.com</a>
<a href=""mailto:bk.j.p.3.22.52@gmail.com"">bk.j.p.3.22.52@gmail.com</a>
<a href=""mailto:bkjp3.2.2.52@gmail.com"">bkjp3.2.2.52@gmail.com</a>
<a href=""mailto:b.k.j.p.3.2.252@gmail.com"">b.k.j.p.3.2.252@gmail.com</a>
<a href=""mailto:b.kj.p.32.2.5.2@gmail.com"">b.kj.p.32.2.5.2@gmail.com</a>
<a href=""mailto:bkj.p.3.2.2.52@gmail.com"">bkj.p.3.2.2.52@gmail.com</a>
<a href=""mailto:b.kj.p32.252@gmail.com"">b.kj.p32.252@gmail.com</a>
<a href=""mailto:b.k.jp3225.2@gmail.com"">b.k.jp3225.2@gmail.com</a>
<a href=""mailto:bkjp.3.225.2@gmail.com"">bkjp.3.225.2@gmail.com</a>
<a href=""mailto:bk.j.p32.2.52@gmail.com"">bk.j.p32.2.52@gmail.com</a>
<a href=""mailto:b.k.jp.322.52@gmail.com"">b.k.jp.322.52@gmail.com</a>
<a href=""mailto:b.kjp3.2252@gmail.com"">b.kjp3.2252@gmail.com</a>
<a href=""mailto:bkj.p.3.2.25.2@gmail.com"">bkj.p.3.2.25.2@gmail.com</a>
<a href=""mailto:bkjp32.2.5.2@gmail.com"">bkjp32.2.5.2@gmail.com</a>
<a href=""mailto:b.k.jp.3.2.25.2@gmail.com"">b.k.jp.3.2.25.2@gmail.com</a>
<a href=""mailto:bkjp3.2.25.2@gmail.com"">bkjp3.2.25.2@gmail.com</a>
<a href=""mailto:b.k.jp32252@gmail.com"">b.k.jp32252@gmail.com</a>
<a href=""mailto:b.kjp.322.52@gmail.com"">b.kjp.322.52@gmail.com</a>
<a href=""mailto:b.kj.p.32.252@gmail.com"">b.kj.p.32.252@gmail.com</a>
<a href=""mailto:b.k.jp3.2.252@gmail.com"">b.k.jp3.2.252@gmail.com</a>
<a href=""mailto:b.k.j.p.3.2.2.5.2@gmail.com"">b.k.j.p.3.2.2.5.2@gmail.com</a>
<a href=""mailto:bkj.p322.52@gmail.com"">bkj.p322.52@gmail.com</a>
<a href=""mailto:bkj.p.3.22.52@gmail.com"">bkj.p.3.22.52@gmail.com</a>
<a href=""mailto:b.kj.p3.2.25.2@gmail.com"">b.kj.p3.2.25.2@gmail.com</a>
<a href=""mailto:bkj.p.3.2.252@gmail.com"">bkj.p.3.2.252@gmail.com</a>
<a href=""mailto:b.k.j.p3.2.2.5.2@gmail.com"">b.k.j.p3.2.2.5.2@gmail.com</a>
<a href=""mailto:b.k.j.p3.22.52@gmail.com"">b.k.j.p3.22.52@gmail.com</a>
<a href=""mailto:b.k.jp.3.22.52@gmail.com"">b.k.jp.3.22.52@gmail.com</a>
<a href=""mailto:bkj.p3.2.252@gmail.com"">bkj.p3.2.252@gmail.com</a>
<a href=""mailto:b.k.j.p.3.2.2.52@gmail.com"">b.k.j.p.3.2.2.52@gmail.com</a>
<a href=""mailto:bkjp.322.5.2@gmail.com"">bkjp.322.5.2@gmail.com</a>
<a href=""mailto:b.k.jp.32.25.2@gmail.com"">b.k.jp.32.25.2@gmail.com</a>
<a href=""mailto:b.kjp3.22.5.2@gmail.com"">b.kjp3.22.5.2@gmail.com</a>
<a href=""mailto:bkj.p3.2.2.52@gmail.com"">bkj.p3.2.2.52@gmail.com</a>
<a href=""mailto:b.k.j.p322.5.2@gmail.com"">b.k.j.p322.5.2@gmail.com</a>
<a href=""mailto:b.kj.p.3.2.2.5.2@gmail.com"">b.kj.p.3.2.2.5.2@gmail.com</a>
<a href=""mailto:b.k.j.p.322.52@gmail.com"">b.k.j.p.322.52@gmail.com</a>
<a href=""mailto:bk.jp3.22.52@gmail.com"">bk.jp3.22.52@gmail.com</a>
<a href=""mailto:bk.jp.3225.2@gmail.com"">bk.jp.3225.2@gmail.com</a>
<a href=""mailto:bkjp.322.52@gmail.com"">bkjp.322.52@gmail.com</a>
<a href=""mailto:bk.jp.3.2252@gmail.com"">bk.jp.3.2252@gmail.com</a>
<a href=""mailto:bkj.p.32.25.2@gmail.com"">bkj.p.32.25.2@gmail.com</a>
<a href=""mailto:bk.j.p.322.5.2@gmail.com"">bk.j.p.322.5.2@gmail.com</a>
<a href=""mailto:bk.jp.32.25.2@gmail.com"">bk.jp.32.25.2@gmail.com</a>
<a href=""mailto:b.k.j.p32.25.2@gmail.com"">b.k.j.p32.25.2@gmail.com</a>
<a href=""mailto:bk.j.p3.2252@gmail.com"">bk.j.p3.2252@gmail.com</a>
<a href=""mailto:bk.j.p.3.225.2@gmail.com"">bk.j.p.3.225.2@gmail.com</a>
<a href=""mailto:bkj.p.32252@gmail.com"">bkj.p.32252@gmail.com</a>
<a href=""mailto:bk.jp32.25.2@gmail.com"">bk.jp32.25.2@gmail.com</a>
<a href=""mailto:b.kjp.32.2.52@gmail.com"">b.kjp.32.2.52@gmail.com</a>
<a href=""mailto:b.k.jp32.252@gmail.com"">b.k.jp32.252@gmail.com</a>
<a href=""mailto:bk.jp.32.2.5.2@gmail.com"">bk.jp.32.2.5.2@gmail.com</a>
<a href=""mailto:bkj.p.32.252@gmail.com"">bkj.p.32.252@gmail.com</a>
<a href=""mailto:bkjp32252@gmail.com"">bkjp32252@gmail.com</a>
<a href=""mailto:bk.jp3.2.25.2@gmail.com"">bk.jp3.2.25.2@gmail.com</a>
<a href=""mailto:b.kjp.3.2.2.52@gmail.com"">b.kjp.3.2.2.52@gmail.com</a>
<a href=""mailto:bk.jp.3.2.2.5.2@gmail.com"">bk.jp.3.2.2.5.2@gmail.com</a>
<a href=""mailto:b.k.j.p32.2.5.2@gmail.com"">b.k.j.p32.2.5.2@gmail.com</a>
<a href=""mailto:bkj.p3.2.25.2@gmail.com"">bkj.p3.2.25.2@gmail.com</a>
<a href=""mailto:bk.jp3225.2@gmail.com"">bk.jp3225.2@gmail.com</a>
<a href=""mailto:b.k.j.p.32.2.52@gmail.com"">b.k.j.p.32.2.52@gmail.com</a>
<a href=""mailto:bkj.p3225.2@gmail.com"">bkj.p3225.2@gmail.com</a>
<a href=""mailto:bkjp.3225.2@gmail.com"">bkjp.3225.2@gmail.com</a>
<a href=""mailto:b.k.jp3.22.5.2@gmail.com"">b.k.jp3.22.5.2@gmail.com</a>
<a href=""mailto:bkjp3.2.2.5.2@gmail.com"">bkjp3.2.2.5.2@gmail.com</a>
<a href=""mailto:b.kj.p.3.2.2.52@gmail.com"">b.kj.p.3.2.2.52@gmail.com</a>
<a href=""mailto:bk.j.p.3225.2@gmail.com"">bk.j.p.3225.2@gmail.com</a>"
PAcWarNC,"fibonacci,py",FranzVuttke,Python,Sunday 10th of March 2024 10:08:53 AM CDT,"
import sys
def fib(max):
    a = 0
    b = 1
    while a < max:
        print(a, end="" "")
        a, b = b, a+b
    print()


# 
#  generating Fibonacci series using recursion
#  gen. function enclosed by external function
# 
def fibre(max) -> list:

    lst = []
    def genfib(prev:int, act:int, n:int, l:list) -> list:
        if prev < n:
            l.append(prev)
            genfib(act, prev+act, n, l)
        return l

    return genfib(0,1, max,lst)

def fiboyield(N):
    a, b = 0, 1
    while a <= N:
        yield a
        a, b = b, a + b
    ...


def main(args):
	N = 108
	if len(args) > 1:
		N = int(args[1])
	for n in (fiboyield(N)):
		print(n, end="", "")
	print()


if __name__ == ""__main__"":
    sys.exit(main(sys.argv))
"
BuZ4xPQK,basic_quarry.lua,Erdioner,Lua,Sunday 10th of March 2024 09:46:44 AM CDT,"local logger = require(""logger"")

logger.log(logger.INFO, ""Basic quarry started"")

local width = 0
local length = 0
local depth = 0

local NORTH = 0
local EAST = 1
local SOUTH = 2
local WEST = 3

local POSITIVE_X = EAST
local NEGATIVE_X = WEST
local POSITIVE_Z = NORTH
local NEGATIVE_Z = SOUTH

local delta_x = 0
local delta_y = 0
local delta_z = 0
local direction = NORTH

local stored_x = 0
local stored_y = 0
local stored_z = 0
local stored_direction = NORTH

local function turn_right(i)
    i = i or 1
    for _ = 1, i or 1 do
        turtle.turnRight()

        if direction == NORTH then
            direction = EAST
        elseif direction == EAST then
            direction = SOUTH
        elseif direction == SOUTH then
            direction = WEST
        elseif direction == WEST then
            direction = NORTH
        end
    end
end

local function turn_left(i)
    i = i or 1
    for _ = 1, i or 1 do
        turtle.turnLeft()

        if direction == NORTH then
            direction = WEST
        elseif direction == WEST then
            direction = SOUTH
        elseif direction == SOUTH then
            direction = EAST
        elseif direction == EAST then
            direction = NORTH
        end
    end
end

local function update_delta_after_move()
    if direction == POSITIVE_X then
        delta_x = delta_x + 1
    elseif direction == NEGATIVE_X then
        delta_x = delta_x - 1
    elseif direction == POSITIVE_Z then
        delta_z = delta_z + 1
    elseif direction == NEGATIVE_Z then
        delta_z = delta_z - 1
    end
end

local function move_forward(i)
    i = i or 1

    for _ = 1, i or 1 do
        update_delta_after_move()
        turtle.forward()
    end
end

local function move_down(i)
    i = i or 1

    for _ = 1, i or 1 do
        delta_y = delta_y - 1
        turtle.down()
    end
end

local function move_up(i)
    i = i or 1

    for _ = 1, i or 1 do
        delta_y = delta_y + 1
        turtle.up()
    end
end

local function goto_position(x, y, z)
    if delta_x < x then
        while direction ~= POSITIVE_X do
            turn_right()
        end
        move_forward(x - delta_x)
    elseif delta_x > x then
        while direction ~= NEGATIVE_X do
            turn_right()
        end
        move_forward(delta_x - x)
    end

    if delta_z < z then
        while direction ~= POSITIVE_Z do
            turn_right()
        end
        move_forward(z - delta_z)
    elseif delta_z > z then
        while direction ~= NEGATIVE_Z do
            turn_right()
        end
        move_forward(delta_z - z)
    end

    if delta_y < y then
        move_up(y - delta_y)
    elseif delta_y > y then
        move_down(delta_y - y)
    end
end

local function store_position()
    stored_x = delta_x
    stored_y = delta_y
    stored_z = delta_z
    stored_direction = direction
end

local function return_to_stored_position()
    goto_position(stored_x, stored_y, stored_z)

    while direction ~= stored_direction do
        turn_right()
    end
end

local function return_to_start()
    logger.log(logger.INFO, ""Returning to start"")
    store_position()
    goto_position(0, 0, 0)
end

local function empty_inventory_into_chest()
    while direction ~= SOUTH do
        turn_right()
    end

    for i = 1, 16 do
        turtle.select(i)
        local item_detail = turtle.getItemDetail()
        if item_detail then
            logger.log(logger.INFO, ""Dropping item "" .. item_detail.name .. "" into chest"")
            turtle.drop()
        end
    end
end

local function use_fuel_in_inventory()
    logger.log(logger.INFO, ""Using fuel in inventory"")
    for i = 1, 16 do
        turtle.select(i)
        if turtle.refuel(0) then
            turtle.refuel()
        end
    end
end

local function wait_for_refuel()
    while turtle.getFuelLevel() < 100 do
        logger.log(logger.INFO, ""Waiting for refuel"")
        use_fuel_in_inventory()
        os.sleep(1)
    end
end

local function check_fuel()
    if turtle.getFuelLevel() < 100 then
        return_to_start()
        empty_inventory_into_chest()
        wait_for_refuel()
        return_to_stored_position()
    end
end

local function setup_settings()
    write(""Width: "")
    width = tonumber(read())
    write(""Length: "")
    length = tonumber(read())
    write(""Depth: "")
    depth = tonumber(read())

    logger.log(logger.INFO, ""Settings: "" .. width .. ""x"" .. length .. ""x"" .. depth)
end

local function inventory_slots_empty()
    local empty_slots = 0
    for i = 1, 16 do
        if turtle.getItemCount(i) == 0 then
            empty_slots = empty_slots + 1
        end
    end

    return empty_slots
end

local function dig()
    turtle.dig()

    if inventory_slots_empty() < 2 then
        return_to_start()
        empty_inventory_into_chest()
        return_to_stored_position()
    end
end

local function dig_layer()
    for i = 1, width do
        for j = 1, length - 1 do
            dig()
            move_forward()
        end

        if i < width then
            if i % 2 == 0 then
                turn_left()
                dig()
                move_forward()
                turn_left()
            else
                turn_right()
                dig()
                move_forward()
                turn_right()
            end
        end
    end
end

local function dig_quarry()
    logger.log(logger.INFO, ""Digging a "" .. width .. ""x"" .. length .. ""x"" .. depth .. "" quarry"")

    wait_for_refuel()

    for i = 1, depth do
        check_fuel()
        turtle.digDown()
        move_down()

        dig_layer()
        turn_right(2)

        logger.log(logger.INFO, ""Layer "" .. i .. "" dug"")
    end

    return_to_start()
    empty_inventory_into_chest()
end

setup_settings()
dig_quarry()
"
HqK9iENt,logger.lua,Erdioner,Lua,Sunday 10th of March 2024 09:46:08 AM CDT,"local module = {}

log_settings = {
    use_console_log = true,
    use_network_log = false,
    network_settings_file = ""network_settings.txt"",
    use_log_file = true,
    log_file = ""log.txt""
}

module.INFO = 0
module.WARN = 1
module.ERROR = 2

---@param text string
local function log_to_file(text)
    local file = fs.open(log_settings.log_file, ""a"")
    file.write(text .. ""\n"")
    file.close()
end

---@param text string
local function log_to_network(text)
    if log_settings.network_settings == nil then
        if (not fs.exists(log_settings.network_settings_file)) then
            error(""Network settings file not found at "" .. log_settings.network_settings_file)
            return
        end

        local file = fs.open(log_settings.network_settings_file, ""r"")
        log_settings.network_settings = textutils.unserialize(file.readAll())
        log_settings.network_settings.modem = peripheral.wrap(log_settings.network_settings.side)
        file.close()
    end

    local device_name = """"
    if log_settings.network_settings.device_name then
        device_name = log_settings.network_settings.device_name
    elseif os.getComputerLabel() then
        device_name = os.getComputerLabel()
    else
        device_name = os.getComputerID()
    end

    log_settings.network_settings.modem.transmit(
        log_settings.network_settings.channel,
        log_settings.network_settings.channel,
        device_name .. "": "" .. text)
end

local function get_text(type, message)
    local text = """"
    local date = os.date(""%Y-%m-%d %H:%M:%S"")

    if type == module.INFO then
        text = date .. "" [INFO] "" .. message
    elseif type == module.WARN then
        text = date .. "" [WARN] "" .. message
    elseif type == module.ERROR then
        text = date .. "" [ERROR] "" .. message
    end

    return text
end

---@param type number
---@param message string
function module.log(type, message)
    local text = get_text(type, message)

    if log_settings.use_log_file then
        log_to_file(text)
    end

    if log_settings.use_network_log then
        log_to_network(text)
    end

    if log_settings.use_console_log then
        print(text)
    end
end

local function setup_settings()
    if fs.exists(""log_settings.txt"") then
        local file = fs.open(""log_settings.txt"", ""r"")
        log_settings = textutils.unserialize(file.readAll())
        file.close()
    end
end

setup_settings()

return module
"
75na0neB,Untitled,Aaroy777,Bash,Sunday 10th of March 2024 09:38:17 AM CDT,"andrewings@171332bbaf68:/workspace/concurrency-course/tasks/fiber/yield$ clippy push
--------------------------------------------------------------------------------
Hello, andrewings!

Command running: ['push'], cwd: /workspace/concurrency-course/tasks/fiber/yield
Time: 2024-03-10 17:37:15
Platform: Linux-6.5.0-21-generic-x86_64-with-glibc2.35
Python: 3.10.12, CPython, /workspace/concurrency-course/client/venv/bin/python
C++ compiler: /usr/bin/clang++-17 (Ubuntu clang version 17.0.6 (++20231209124227+6009708b4367-1~exp1~20231209124336.77))
Repository root directory: /workspace/concurrency-course
Git commit: 558ebea7efe9d93683ee8a0d7127599f011c2bbd

Moving to repo /workspace/hse-y-andrew-y-roy-y-Aaroy777
Running git: ['checkout', 'fiber/yield', '--']
Already on 'fiber/yield'
Running git: ['push', 'origin', 'fiber/yield']
error: object file .git/objects/d9/e87fa656dc9448ca12a665ce07643b4f28ba96 is empty
error: object file .git/objects/d9/e87fa656dc9448ca12a665ce07643b4f28ba96 is empty
fatal: loose object d9e87fa656dc9448ca12a665ce07643b4f28ba96 (stored in .git/objects/d9/e87fa656dc9448ca12a665ce07643b4f28ba96) is corrupt
fatal: the remote end hung up unexpectedly
send-pack: unexpected disconnect while reading sideband packet
fatal: the remote end hung up unexpectedly
error: failed to push some refs to 'https://gitlab.com/concurrency-course-workspace/2024/solutions/hse-y-andrew-y-roy-y-Aaroy777.git'

Command '['git', 'push', 'origin', 'fiber/yield']' returned non-zero exit status 1.
Traceback (most recent call last):
  File ""/workspace/concurrency-course/client/client.py"", line 383, in main
    args.cmd(args)
  File ""/workspace/concurrency-course/client/client.py"", line 223, in push_command
    client.push_commits(current_task)
  File ""/workspace/concurrency-course/client/clippy/course.py"", line 404, in push_commits
    self.solutions.push(task)
  File ""/workspace/concurrency-course/client/clippy/solutions.py"", line 263, in push
    self._git([""push"", ""origin"", task_branch], cwd=self.repo_dir)
  File ""/workspace/concurrency-course/client/clippy/solutions.py"", line 142, in _git
    subprocess.check_call([""git""] + cmd, **kwargs)
  File ""/usr/lib/python3.10/subprocess.py"", line 369, in check_call
    raise CalledProcessError(retcode, cmd)
subprocess.CalledProcessError: Command '['git', 'push', 'origin', 'fiber/yield']' returned non-zero exit status 1."
zknySNZB,سكربت مستودع,hadyproxml,Lua,Sunday 10th of March 2024 09:21:05 AM CDT,"gg.alert(""تفعيل الهيدشوت"") 

gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""23;25;30.5"", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.searchNumber(""25;30.5"", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(100)
gg.editAll(""70;70"", gg.TYPE_FLOAT)
gg.clearResults()
gg.toast(""تم التفعيل"")
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""1,850,305,641"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(20)
gg.editAll(""0"", gg.TYPE_DWORD)
gg.clearResults()
gg.toast(""تم التفعيل"")

gg.alert (""تم التفعيل"") "
jBAvDxq7,作業,excellent940707,C++,Sunday 10th of March 2024 09:08:00 AM CDT,"#include<bits/stdc++.h>
using namespace std;

void findAndInvertMinimum(int arr[], int size){
    if(size<0)return;
    int min_idx=0;
    for(int i=1;i<size;++i)
        if(arr[i]<arr[min_idx])min_idx=i;
    arr[min_idx]*=-1;
}

void negateElements(int arr[], int size){
    for(int i=0;i<size;++i){
        if(arr[i]>0)arr[i]*=-1;
    }
}

void mergeAndDoubleSecondArrayElements(int arr1[], int arr1Size, const int arr2[], int arr2Size, int combinedCapacity){
    if(arr1Size+arr2Size>combinedCapacity)return;
    int idx=arr1Size;
    for(int i=0;i<arr2Size;++i){
        arr1[idx++]=arr2[i]*2;
    }
}

int main(){
    int act;
    cout<<""題目:"";
    cin>>act;

    int arr1[8]={9,1,2,3};
    int arr2[4]={4,5,6,7};

    if(act==1){
        findAndInvertMinimum(arr1, 4);
        for(int i=0;i<4;++i)cout<<arr1[i]<<' ';
        cout<<'\n';
    }else if(act==2){
        negateElements(arr2, 4);
        for(int i=0;i<4;++i)cout<<arr2[i]<<' ';
        cout<<'\n';
    }else{
        mergeAndDoubleSecondArrayElements(arr1, 4, arr2, 4, 8);
        for(int i=0;i<8;++i)cout<<arr1[i]<<' ';
        cout<<'\n';
    }

    return 0;
}
"
QJ6GBKaF,Roles for Main Game (STORY GAME),Sungmingamerpro13,CSS,Sunday 10th of March 2024 09:01:32 AM CDT,"if player:WaitForChild(""Role"").Value == ""Normal Kid"" then
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.BodyDepthScale.Value = 0.7
			player.Character.Humanoid.BodyHeightScale.Value = 0.7
			player.Character.Humanoid.BodyWidthScale.Value = 0.6
		elseif player:WaitForChild(""Role"").Value == ""Protector 1"" then
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.BodyDepthScale.Value = 1
			player.Character.Humanoid.BodyHeightScale.Value = 1
			player.Character.Humanoid.BodyWidthScale.Value = 1
		elseif player:WaitForChild(""Role"").Value == ""Medic"" then
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.BodyDepthScale.Value = 1
			player.Character.Humanoid.BodyHeightScale.Value = 1
			player.Character.Humanoid.BodyWidthScale.Value = 1
		elseif player:WaitForChild(""Role"").Value == ""Fighter"" then
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.BodyDepthScale.Value = 0.7
			player.Character.Humanoid.BodyHeightScale.Value = 0.7
			player.Character.Humanoid.BodyWidthScale.Value = 0.6
		elseif player:WaitForChild(""Role"").Value == ""Protector 3"" then
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.BodyDepthScale.Value = 1
			player.Character.Humanoid.BodyHeightScale.Value = 1
			player.Character.Humanoid.BodyWidthScale.Value = 1
		elseif player:WaitForChild(""Role"").Value == ""PREMIUM"" then
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.BodyDepthScale.Value = 1
			player.Character.Humanoid.BodyHeightScale.Value = 1
			player.Character.Humanoid.BodyWidthScale.Value = 1
		elseif player:WaitForChild(""Role"").Value == ""Default Kid"" then
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.BodyDepthScale.Value = 1
			player.Character.Humanoid.BodyHeightScale.Value = 1
			player.Character.Humanoid.BodyWidthScale.Value = 1
		elseif player:WaitForChild(""Role"").Value == ""Adventure"" then
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.BodyDepthScale.Value = 1
			player.Character.Humanoid.BodyHeightScale.Value = 1
			player.Character.Humanoid.BodyWidthScale.Value = 1
		elseif player:WaitForChild(""Role"").Value == ""Fat Kid"" then
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.BodyDepthScale.Value = 0.9
			player.Character.Humanoid.BodyHeightScale.Value = 0.7
			player.Character.Humanoid.BodyWidthScale.Value = 0.7
		end"
0mvpKEhy,whale language,BojidarDosev,JavaScript,Sunday 10th of March 2024 08:32:29 AM CDT,"let input='turpentine and turtles';
const vowels = ['a','e','i','o','u'];
let resultArray = [];
let resultString = [];
for(let i = 0; i<input.length; i++)
{
  for(let j = 0; j<vowels.length;j++)
  {
    if(input[i]===vowels[j])
    {
      if(input[i]==='e' || input[i] ==='u')
      {
        resultArray.push(input[i]);
        resultArray.push(input[i]);
      }
      else resultArray.push(input[i]);
      
    }
  }
  //console.log(i);
}

for(let i = 0; i<resultArray.length;i++)
{
  console.log(resultArray[i]);
}
resultString = resultArray;
console.log(resultString.join("""").toUpperCase());"
a41dQ1sU,config.yaml для pool-reference,soulchel,YAML,Sunday 10th of March 2024 08:29:00 AM CDT,"pool_info:
  default_res: Chia reference pool
  name: The Reference Pool
  logo_url: https://www.chia.net/img/chia_logo.svg
  description: (example) The Reference Pool allows you to pool with low fees, paying out daily using Chia.
welcome_message: ""Welcome to the reference pool!""
pool_fee: 0.01
block_claim_fee: 0
pool_url: http://192.168.0.37
min_difficulty: 10
default_difficulty: 10
default_target_address: txch1... # поменять на main pool (посмотреть можно командой chia wallet show)
pool_fee_address: txch1... # поменять на fees pool (посмотреть можно командой chia wallet show)
wallet_fingerprint: 396....394 # поменять на main pool (посмотреть можно командой chia wallet show)
authentication_token_timeout: 5
wallet_id: 1
node_rpc_port: 8555
wallet_rpc_port: 9256
partial_time_limit: 25
partial_confirmation_delay: 300
scan_start_height: 1000
collect_pool_rewards_interval: 600
confirmation_security_threshold: 32
payment_interval: 600
max_additions_per_transaction: 400
number_of_partials_target: 300
time_target: 86400
relative_lock_height: 32
logging:
  log_path: /var/log/chia
  log_filename: pool-server.log
  log_level: INFO
  log_maxfilesrotation: 7
  log_stdout: false
server:
  server_host: 0.0.0.0
  server_port: 80
  server_use_ssl: false
  server_ssl_crt: config/ssl/domain/domain_srv.crt
  server_ssl_key: config/ssl/domain/domain_srv.key"
wQQ5XpTc,exam_list.py,DrAungWinHtut,Python,Sunday 10th of March 2024 08:27:32 AM CDT,"#question.txt
#=============
# Q:The longest river in the world? * 1. Nile, 2. Maykha, 3. Malikha * 1
# Q:The highest mountain in the world? * 1. Everest, 2. Fuji , 3. Kharkaborazi * 1
# Q:The longest river in the world? * 1. Nile, 2. Maykha, 3. Malikha * 1
# Q:The highest mountain in the world? * 1. Everest, 2. Fuji , 3. Kharkaborazi * 1
# Q:The longest river in the world? * 1. Nile, 2. Maykha, 3. Malikha * 1
# Q:The highest mountain in the world? * 1. Everest, 2. Fuji , 3. Kharkaborazi * 1
# Q:The longest river in the world? * 1. Nile, 2. Maykha, 3. Malikha * 1
# Q:The highest mountain in the world? * 1. Everest, 2. Fuji , 3. Kharkaborazi * 1
# Q:The longest river in the world? * 1. Nile, 2. Maykha, 3. Malikha * 1
# Q:The highest mountain in the world? * 1. Everest, 2. Fuji , 3. Kharkaborazi * 1



# pip install icecream
from icecream import ic   #ic is used for detailed printing

def quiz():
    marks = 0
    question = [] #empty list to store one question
    questions = [] #empty list to store all questions which concat with '*'

    #collect all questions from file question.txt
    input_file = open('question.txt','r')
    questions = input_file.readlines()    # questions - List , one item contains q, options, correct ans, concat with '*'
    input_file.close()
    
    #print(questions)

    for q in questions:
        # q is one item of questioncontains q, options, correct ans, concat with '*'
        question = q.split('*')  # question list contains [0]Q, [1]options, [2]correct ans
        correct_ans = question[2].strip() #strip is used to eliminate unwanted space or '\n' '\r' etc..
        print(question[0])
        print(question[1])
        user_ans = input('Choose correct answer: ')
        #ic(user_ans)
        #ic(correct_ans)

        if user_ans == correct_ans:
            print('Correct')
            marks += 1
        else:
            print('Wrong ans')
        
        print(f'Total marks = {marks}')


if __name__ == ""__main__"":
    quiz()"
nWQMLHUz,Установка pool-reference,soulchel,Bash,Sunday 10th of March 2024 08:24:39 AM CDT,"# установка и запуск скрипта пула https://github.com/Chia-Network/pool-reference
git clone https://github.com/Chia-Network/pool-reference

cd pool-reference
cp ./config-example.yaml ./config.yaml # путь для конфига пула под вопросом
python3 -m venv ./venv
source ./venv/bin/activate
pip install ../chia-blockchain/ 
sudo CHIA_ROOT=""/your/home/dir/.chia/mainnet"" ./venv/bin/python -m pool"
UfRTmbG6,GSITS assignment 3,tampurus,MySQL,Sunday 10th of March 2024 07:56:32 AM CDT,"create database gourav_ass_3;
use gourav_ass_3;
create table depts(deptno varchar(5),dname varchar(30));
alter table depts add primary key(deptno);
alter table depts add constraint chk1 check(deptno like 'D%');	

create table skill(skill_code varchar(5),description varchar(30),charge_outrage numeric(3));
alter table skill add primary key(skill_code);
alter table skill add constraint chk2 check(skill_code like 'S%');

CREATE TABLE STAFF (STAFFNO numeric (5), NAME VARCHAR(30), DOB DATE, GENDER CHAR (2), DOJ DATE, DESIGNATION VARCHAR(30), BASIC_PAY numeric (6), DEPTNO VARCHAR(5)); 
ALTER TABLE STAFF ADD PRIMARY KEY(STAFFNO); 
ALTER TABLE STAFF ADD FOREIGN KEY(DEPTNO) REFERENCES DEPTS (DEPTNO); 
ALTER TABLE STAFF ADD CONSTRAINT CHK3 CHECK(GENDER IN('M','F'));

CREATE TABLE STAFF_SKILL (STAFFNO NUMERIC(5), SKILL_CODE VARCHAR(5)); 
ALTER TABLE STAFF_SKILL ADD PRIMARY KEY (STAFFNO, SKILL_CODE); 
ALTER TABLE STAFF_SKILL ADD FOREIGN KEY(STAFFNO) REFERENCES STAFF(STAFFNO); 
ALTER TABLE STAFF_SKILL ADD FOREIGN KEY(SKILL_CODE) REFERENCES SKILL(SKILL_CODE); 

CREATE TABLE PROJECT(PROJECTNO VARCHAR(5), PNAME VARCHAR(30), START_DATE DATE, END_DATE DATE, PROJECT_MANAGER_STAFFNO numeric(5));
ALTER TABLE PROJECT ADD PRIMARY KEY (PROJECTNO);
ALTER TABLE PROJECT ADD CONSTRAINT CHK4 CHECK(PROJECTNO LIKE 'P%');
ALTER TABLE PROJECT ADD FOREIGN KEY (PROJECT_MANAGER_STAFFNO) REFERENCES STAFF(STAFFNO);

CREATE TABLE WORKS (STAFFNO NUMERIC(5), PROJECTNO VARCHAR(5),DATE_WORKED_ON DATE, INTIME TIMESTAMP, OUTTIME TIMESTAMP); 
ALTER TABLE WORKS ADD PRIMARY KEY (STAFFNO,PROJECTNO);
ALTER TABLE WORKS ADD FOREIGN KEY(STAFFNO) REFERENCES STAFF(STAFFNO);
ALTER TABLE WORKS ADD FOREIGN KEY(PROJECTNO) REFERENCES PROJECT(PROJECTNO); 

INSERT INTO depts VALUES('D0001','Accounts');
INSERT INTO depts VALUES('D0002','Human Resources');
INSERT INTO depts VALUES('D0003','Marketing');
INSERT INTO depts VALUES('D0004','Information Technology');
INSERT INTO depts VALUES('D0005','Operations');
INSERT INTO depts VALUES('D0006','Sales');
INSERT INTO depts VALUES('D0007','Research and Development');
INSERT INTO depts VALUES('D0008','Customer Service');


INSERT INTO STAFF VALUES (10001, 'Gourav Upadhyay', '1990-05-15', 'M', '2015-03-20', 'Manager', 50000, 'D0001');
INSERT INTO STAFF VALUES (10002, 'Rahul Sharma', '1992-07-10', 'M', '2016-05-25', 'Assistant Manager', 45000, 'D0002');
INSERT INTO STAFF VALUES (10003, 'Priya Patel', '1988-11-30', 'F', '2014-02-15', 'Senior Developer', 55000, 'D0003');
INSERT INTO STAFF VALUES (10004, 'Amit Kumar', '1995-04-20', 'M', '2017-09-10', 'HR Specialist', 48000, 'D0004');
INSERT INTO STAFF VALUES (10005, 'Neha Gupta', '1993-08-05', 'M', '2016-12-12', 'Sales Executive', 42000, 'D0005');
INSERT INTO STAFF VALUES (10006, 'Anjali Singh', '1990-01-25', 'F', '2015-08-20', 'Financial Analyst', 49000, 'D0006');
INSERT INTO STAFF VALUES (10007, 'Rajesh Sharma', '1987-03-18', 'M', '2013-04-30', 'Marketing Coordinator', 47000, 'D0007');
INSERT INTO STAFF VALUES (10008, 'Sneha Kapoor', '1991-06-12', 'F', '2016-10-08', 'Operations Manager', 52000, 'D0008');
INSERT INTO STAFF VALUES (10009, 'Ravi Singh', '1989-09-08', 'M', '2015-07-05', 'Customer Service', 43000, 'D0001');
INSERT INTO STAFF VALUES (10010, 'Pooja Sharma', '1994-02-28', 'F', '2017-11-15', 'Finance Manager', 56000, 'D0002');
INSERT INTO STAFF VALUES (10011, 'Manoj Patel', '1996-06-20', 'M', '2018-03-03', 'Research Analyst', 46000, 'D0001');
INSERT INTO STAFF VALUES (10012, 'Deepak Gupta', '1992-10-15', 'F', '2016-06-18', 'Sales Manager', 53000, 'D0004');
INSERT INTO STAFF VALUES (10013, 'Smita Sharma', '1986-12-05', 'M', '2012-09-22', 'IT Specialist', 48000, 'D0005');
INSERT INTO STAFF VALUES (10014, 'Vikram Singh', '1990-04-30', 'F', '2015-02-10', 'HR Assistant', 44000, 'D0006');
INSERT INTO STAFF VALUES (10015, 'Nisha Kapoor', '1988-08-15', 'M', '2013-11-05', 'Operations Coordinator', 51000, 'D0001');
INSERT INTO STAFF VALUES (10016, 'Rahul Gupta', '1993-03-10', 'F', '2016-08-28', 'Marketing Manager', 54000, 'D0008');
INSERT INTO STAFF VALUES (10017, 'Suresh Singh', '1987-07-20', 'M', '2014-04-15', 'Customer Service Supervisor', 47000, 'D0001');
INSERT INTO STAFF VALUES (10018, 'Preeti Patel', '1991-11-12', 'F', '2017-10-08', 'Finance Analyst', 49000, 'D0002');
INSERT INTO STAFF VALUES (10019, 'Ajay Kumar', '1995-01-25', 'M', '2018-06-20', 'Research Coordinator', 45000, 'D0003');
INSERT INTO STAFF VALUES (10020, 'Kavita Sharma', '1990-05-08', 'F', '2015-09-05', 'Sales Associate', 42000, 'D0004');
INSERT INTO STAFF VALUES (10021, 'Prakash Singh', '1986-09-30', 'M', '2012-12-20', 'IT Manager', 55000, 'D0001');
INSERT INTO STAFF VALUES (10022, 'Anita Gupta', '1994-01-15', 'F', '2017-02-10', 'HR Coordinator', 46000, 'D0006');
INSERT INTO STAFF VALUES (10023, 'Rajiv Kapoor', '1989-05-05', 'M', '2014-08-18', 'Operations Supervisor', 51000, 'D0007');
INSERT INTO STAFF VALUES (10024, 'Sunita Sharma', '1992-07-10', 'F', '2016-10-25', 'Marketing Assistant', 48000, 'D0008');
INSERT INTO STAFF VALUES (10025, 'Vijay Singh', '1988-11-15', 'M', '2013-03-03', 'Customer Service Manager', 53000, 'D0001');

INSERT INTO SKILL VALUES ('S0001', 'Programming', 100);
INSERT INTO SKILL VALUES ('S0002', 'Database Management', 120);
INSERT INTO SKILL VALUES ('S0003', 'Web Development', 110);
INSERT INTO SKILL VALUES ('S0004', 'Network Administration', 130);
INSERT INTO SKILL VALUES ('S0005', 'Cybersecurity', 260);
INSERT INTO SKILL VALUES ('S0006', 'Data Analysis', 150);
INSERT INTO SKILL VALUES ('S0007', 'Project Management', 110);
INSERT INTO SKILL VALUES ('S0008', 'UI/UX Design', 120);
INSERT INTO SKILL VALUES ('S0009', 'Mobile App Development', 180);
INSERT INTO SKILL VALUES ('S0010', 'Cloud Computing', 100);
INSERT INTO SKILL VALUES ('S0011', 'Machine Learning', 200);
INSERT INTO SKILL VALUES ('S0012', 'Artificial Intelligence', 210);
INSERT INTO SKILL VALUES ('S0013', 'Digital Marketing', 110);
INSERT INTO SKILL VALUES ('S0014', 'Business Intelligence', 230);
INSERT INTO SKILL VALUES ('S0015', 'Quality Assurance', 200);
INSERT INTO SKILL VALUES ('S0016', 'Accounting', 120);
INSERT INTO SKILL VALUES ('S0017', 'Finance', 260);
INSERT INTO SKILL VALUES ('S0018', 'Human Resources', 100);
INSERT INTO SKILL VALUES ('S0019', 'Sales', 110);
INSERT INTO SKILL VALUES ('S0020', 'Marketing', 120);

INSERT INTO STAFF_SKILL VALUES
(10001, 'S0001'), (10001, 'S0002'), (10001, 'S0003'), (10001, 'S0004'), 
(10001, 'S0005'), (10001, 'S0006'), (10004, 'S0007'), (10004, 'S0008'), 
(10005, 'S0009'), (10005, 'S0010'), (10006, 'S0011'), (10006, 'S0012'), 
(10007, 'S0013'), (10007, 'S0014'), (10008, 'S0015'), (10008, 'S0001'), 
(10009, 'S0002'), (10009, 'S0003'), (10010, 'S0004'), (10010, 'S0005'), 
(10011, 'S0004'), (10011, 'S0007'), (10012, 'S0004'), (10012, 'S0009'), 
(10013, 'S0004'), (10013, 'S0011'), (10014, 'S0004'), (10014, 'S0013'), 
(10015, 'S0014'), (10015, 'S0015'), (10016, 'S0001'), (10016, 'S0002'), 
(10017, 'S0003'), (10017, 'S0004'), (10018, 'S0005'), (10018, 'S0006'), 
(10019, 'S0007'), (10019, 'S0008'), (10020, 'S0009'), (10020, 'S0010');

INSERT INTO PROJECT (PROJECTNO, PNAME, START_DATE, END_DATE, PROJECT_MANAGER_STAFFNO) VALUES
('P0001', 'Project Alpha', '2023-01-15', '2023-07-15', 10001),
('P0002', 'Project Beta', '2023-03-20', '2023-09-20', 10002),
('P0003', 'Project Gamma', '2023-05-10', '2024-01-10', 10003),
('P0004', 'Project Delta', '2023-07-25', '2024-02-25', 10004),
('P0005', 'Project Epsilon', '2023-09-05', '2024-03-05', 10005),
('P0006', 'Project Zeta', '2023-11-15', '2024-05-15', 10006),
('P0007', 'Project Eta', '2024-01-20', '2024-07-20', 10007);

INSERT INTO WORKS (STAFFNO, PROJECTNO, DATE_WORKED_ON, INTIME, OUTTIME) VALUES
(10001, 'P0001', '2023-01-15', '2023-01-15 09:00:00', '2023-01-15 17:00:00'),
(10001, 'P0002', '2023-03-20', '2023-03-20 08:30:00', '2023-03-20 16:30:00'),
(10002, 'P0001', '2023-01-16', '2023-01-16 09:15:00', '2023-01-16 17:15:00'),
(10002, 'P0003', '2023-05-11', '2023-05-11 08:45:00', '2023-05-11 16:45:00'),
(10003, 'P0004', '2023-07-26', '2023-07-26 09:30:00', '2023-07-26 17:30:00'),
(10003, 'P0002', '2023-03-21', '2023-03-21 08:00:00', '2023-03-21 16:00:00'),
(10004, 'P0005', '2023-09-06', '2023-09-06 09:45:00', '2023-09-06 17:45:00'),
(10004, 'P0006', '2023-11-16', '2023-11-16 08:30:00', '2023-11-16 16:30:00'),
(10005, 'P0003', '2023-05-12', '2023-05-12 10:00:00', '2023-05-12 18:00:00'),
(10005, 'P0007', '2024-01-21', '2024-01-21 08:15:00', '2024-01-21 16:15:00'),
(10006, 'P0001', '2023-01-17', '2023-01-17 10:15:00', '2023-01-17 18:15:00'),
(10006, 'P0004', '2023-07-27', '2023-07-27 08:45:00', '2023-07-27 16:45:00'),
(10007, 'P0002', '2023-03-22', '2023-03-22 10:30:00', '2023-03-22 18:30:00'),
(10007, 'P0005', '2023-09-07', '2023-09-07 08:00:00', '2023-09-07 16:00:00'),
(10008, 'P0006', '2023-11-17', '2023-11-17 10:45:00', '2023-11-17 18:45:00'),
(10008, 'P0003', '2023-05-13', '2023-05-13 08:30:00', '2023-05-13 16:30:00'),
(10009, 'P0001', '2023-01-18', '2023-01-18 11:00:00', '2023-01-18 19:00:00'),
(10009, 'P0004', '2023-07-28', '2023-07-28 09:00:00', '2023-07-28 17:00:00'),
(10010, 'P0002', '2023-03-23', '2023-03-23 11:15:00', '2023-03-23 19:15:00'),
(10010, 'P0005', '2023-09-08', '2023-09-08 08:45:00', '2023-09-08 16:45:00'),
(10011, 'P0006', '2023-11-18', '2023-11-18 11:30:00', '2023-11-18 19:30:00'),
(10011, 'P0003', '2023-05-14', '2023-05-14 09:30:00', '2023-05-14 17:30:00'),
(10012, 'P0001', '2023-01-19', '2023-01-19 11:45:00', '2023-01-19 19:45:00'),
(10012, 'P0004', '2023-07-29', '2023-07-29 10:00:00', '2023-07-29 18:00:00');"
U0h8aU64,turrtlev2.2,Ruja404,Lua,Sunday 10th of March 2024 07:51:10 AM CDT,"local file = fs.open(""output.csv"", ""r"")
local lines = {}
local coordinates = {}
local ci = 0
local logger = fs.open(""turtle_instructions"", ""w"")

local function has_value (tab, val)
    for index, value in ipairs(tab) do
        if value == val then
            return true
        end
    end

    return false
end

while true do
    local line = file.readLine()
 
    if not line then break end
    local coordinate = {x = 0, y = 0}
    
    for coord, value in string.gmatch(line, ""(%w+)=(%w+)"") do
        coordinate[coord] = tonumber(value)
    end
    coordinates[ci] = coordinate
    ci = ci + 1
    
    lines[#lines + 1] = line
end
 
file.close()

-- Function to split a string into parts based on a delimiter
function split(inputstr, sep)
    if sep == nil then
        sep = ""%s""
    end
    local t = {}
    for str in string.gmatch(inputstr, ""([^"" .. sep .. ""]+)"") do
        table.insert(t, str)
    end
    return t
end

function createEmptyMatrix(width, height)
    local matrix = {}
    for i = 0, height do
        matrix[i] = {}
        for j = 0, width do
            matrix[i][j] = """"
        end
    end
    return matrix
end
 
-- Read the CSV file and construct the adjacency matrix
function createVertexMap(filename)
    local vertex_map = {}
    local file = fs.open(filename, ""r"")
    local line = file.readLine()
    local width, height = string.match(line , ""(%d+)%,(%d+)"")
    vertex_map = createEmptyMatrix(tonumber(width) - 1, tonumber(height) - 1)
 
    -- Iterate through each line in the file
    line = file.readLine()
    while true do
        if not line then break end
        
        local vertices= split(line, "";"")
        local vertex1, vertex2 = string.match(line, ""(%a%d%a%d);(%a%d%a%d)"")
        if not vertex1 or not vertex2 then break end
 
        -- Initialize an empty list if the vertex doesn't exist in the map
        vertex_map[vertex1] = vertex_map[vertex1] or {}
        vertex_map[vertex2] = vertex_map[vertex2] or {}
 
        table.insert(vertex_map[vertex1], vertex2)
        table.insert(vertex_map[vertex2], vertex1)
 
        line = file.readLine()
    end
 
    file.close()
    return vertex_map
end
 
-- Function to check if two vertices are connected
function areVerticesConnected(vertex_map, given_vertex, check_vertex)
    local connected_vertices = getConnectedVertices(vertex_map, given_vertex)
    for _, vertex in ipairs(connected_vertices) do
        if vertex == check_vertex then
            return true
        end
    end
    return false
end
 
-- Function to get connected vertices of a given vertex
function getConnectedVertices(vertex_map, vertex)
    return vertex_map[vertex] or {}
end


function moveToCoordinates(position, x, y)
	local first = true
	local moveAfterTransission = """"
	local vector = {}
	vector.x = x - position.x
	vector.y = y - position.y
		
	logger.writeLine(""current position: "" .. position.x .. "", "" .. position.y)
    logger.writeLine(""transitioning to coordinates: "" .. x .. "", "" .. y)
    logger.writeLine(""vector to that position: "" .. vector.x .. "", "" .. vector.y)
    logger.writeLine(""/////////////////////////"")
	--move until on the same x coord
	while position.x ~= x do
		if x > position.x then
			position.x = position.x + 1


				logger.writeLine(""2times moving forward: "" .. position.x .. "", "" .. position.y)
				moveTurtle(""forward"")
				moveTurtle(""forward"")
				

		else
			position.x = position.x - 1

				logger.writeLine(""2times moving backward: "" .. position.x .. "", "" .. position.y)
				moveTurtle(""backward"")
				moveTurtle(""backward"")
		end
	end

	--move until on the same y coord
	while position.y ~= y do
		if y > position.y then
			position.y = position.y + 1

				logger.writeLine(""2times moving right: "" .. position.x .. "", "" .. position.y)
				moveTurtle(""right"")
				moveTurtle(""right"")

		else
			position.y = position.y - 1
				
				logger.writeLine(""2times moving left: "" .. position.x .. "", "" .. position.y)
				moveTurtle(""left"")
				moveTurtle(""left"")
				

		end

	end
		
    logger.writeLine(""========Transitioning ended========"")
    logger.writeLine(""current position: "" .. position.x .. "", "" .. position.y)
    logger.writeLine(""vector: "" .. vector.x .. "", "" .. vector.y)
    logger.writeLine(""current vertex should be: "" .. x .. "", "" .. y)
    logger.writeLine(""==================================="")
end

function moveTurtle(direction)
	if direction == ""forward"" then
		moveForward()
	elseif direction == ""left"" then
		moveLeft()
	elseif direction == ""right"" then
		moveRight()
	elseif direction == ""backward"" then
		moveBack()
	end
end

function getDirection(position, x, y)
	if x > position.x then
        return ""forward""
    elseif x < position.x then
        return ""backward""
    end
    
    if y > position.y then
        return ""right""
    elseif y < position.y then
        return ""left""
    end
end

function createHole()
	turtle.digDown()
	turtle.down()
	turtle.digDown()

	turtle.dig()
	turtle.forward()

	turtle.turnRight()
	turtle.digDown()
	turtle.dig()
	turtle.forward()

	turtle.turnRight()
	turtle.digDown()
	turtle.dig()	
	turtle.forward()

	turtle.turnRight()
	turtle.digDown()
	turtle.forward()

	turtle.turnRight()
	turtle.up()
	
end

function moveLeft()
	turtle.turnLeft()
	turtle.forward()
	turtle.forward()
	turtle.turnRight()
end

function moveRight()
	turtle.turnRight()
	turtle.forward()
	turtle.forward()
	turtle.turnLeft()
end

function moveForward()
	turtle.forward()
	turtle.forward()
end

function moveBack()
	turtle.back()
	turtle.back()
end

turtle.refuel()
turtle.forward()

--============================================================

local vertex_map = createVertexMap(""adjaceny.csv"")
local position = {x=0,y=0}
 
local debug = fs.open(""debug"", ""w"")

local visited = {""x0y0""}

for i=0, #coordinates, 1 do

	if not coordinates[i+1] then 
		createHole()
		break 
	end
    local x = coordinates[i+1].x
    local y = coordinates[i+1].y
    
    position.x = coordinates[i].x
    position.y = coordinates[i].y 

	--initialize
	logger.writeLine(""digging down"")
	logger.writeLine(""coming back up"")
    logger.writeLine("""")
	createHole()

	local vertex1 = ""x"" .. tostring(position.x) .. ""y"" .. tostring(position.y)
	local vertex2 = ""x"" .. tostring(x) .. ""y"" .. tostring(y)

	if (position.x + 1 == x or position.x - 1 == x) and areVerticesConnected(vertex_map, vertex1 , vertex2 ) then
		logger.writeLine(""2times position: "" .. position.x .. "", "" .. position.y .. "" >>> "" .. getDirection(position, x, y))

		moveTurtle(getDirection(position, x, y))
		createHole()
		moveTurtle(getDirection(position, x, y))

	elseif (position.y + 1 == y or position.y - 1 == y) and areVerticesConnected(vertex_map, vertex1 , vertex2 ) then
		logger.writeLine(""2times position: "" .. position.x .. "", "" .. position.y .. "" >>> "" .. getDirection(position, x, y))

		moveTurtle(getDirection(position, x, y))
		createHole()
		moveTurtle(getDirection(position, x, y))

	else
        moveToCoordinates(position, x, y)
        logger.writeLine(""////////////////////////"")
        logger.writeLine(""Searching for connected vertices to create a tunnel"")
 
        local connected_vertices = getConnectedVertices(vertex_map, vertex2)
        local break_flag = false
        for _, vertex in ipairs(connected_vertices) do
            for _, visited in ipairs(visited) do
                if break_flag then break end
                logger.writeLine(""Comparing "" .. vertex .. "" || "" .. visited)
                if visited == vertex then
                    local tunnel_x = tonumber(string.sub(visited, 2, 2))
                    local tunnel_y = tonumber(string.sub(visited, 4, 4))
                    local tunnel_direction = getDirection(position, tunnel_x , tunnel_y )
                    logger.writeLine(""tunnel in the direction: "" .. tunnel_direction )
                    moveTurtle(tunnel_direction)
                        logger.writeLine(""DIGGING HOLE FOR TUNNEL"")
                    createHole()
                    
                    local back_direction = getDirection({x=tunnel_x,y=tunnel_y}, position.x, position.y)
                    logger.writeLine(""moving back in the direction: "" .. back_direction )
                    moveTurtle(back_direction)
                    break_flag = true
                    break
                end
            end
        end
	end

    table.insert(visited, vertex1)
end
 
"
LMND4Ta5,G2A.com Free Gift Card Guide Mar 2024,ounnuo,GetText,Sunday 10th of March 2024 07:33:02 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_675605.pdf

Working as of:
10 March 2024





















"
ywJv63hQ,Установка chia blockchain,soulchel,Bash,Sunday 10th of March 2024 07:09:47 AM CDT,"# https://docs.chia.net/installation/
# Download chia-blockchain
git clone https://github.com/Chia-Network/chia-blockchain -b latest --recurse-submodules

# Change directory
cd chia-blockchain

# Install dependencies
sh install.sh

# Activate virtual environment
. ./activate

# Initialize
chia init
# создаём три ключа (кошелёк пула, кошелёк для приёма комиссии, тестовый фермера)
chia keys generate
chia keys generate
chia keys generate

# запуск фермера с полной нодой
chia start farmer

# посмотреть wallet id, fingerprint и активировать кошелёк для синхронизации
chia wallet show"
PQLHydZJ,data865,TestGuy1,JSON,Sunday 10th of March 2024 07:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '8ddc96d8849c785e69b5a56be516a948f8e59856453e24c92b37bfb96962f3b506c190c9029fe38855b6dd51df79207dafa401497a812656bed1c586235fa79df6d6b0de302e9743ac45143bc63276c32bbd609e2a989668192f0eea159590025e77ee7f3a33bae8af83b90b7b4e04ca2d488393c45dcab3a901c5bbb4070605',
  otherdata: [
    'b930fb5dbbd5fbed9821ef00704e9b4d',
    '0a17437f1c137c81a81071cc4bef920b',
    '7189865e7c509d6e03812ff2ff4ae378',
    '715e7541e1fcd1bdd75a5e29453e5991',
    '5547f97026141327fd78427cd43d09ff',
    '8dfbf6e09338ec23ccb2804d69765530',
    'c1f513883bc26e3297fd8a93da54083c',
    '2f97ef9b6e6ba1b97da62678e7d23da0'
  ]
}"
cq8tb5Ff,Untitled,Sora_7672,Java,Sunday 10th of March 2024 06:40:02 AM CDT,"var beeGenes ={MaxH: 50, Mate: {Chromosomes: [{UID1: ""forestry.speciesHermitic"", UID0: ""forestry.speciesHermitic"", Slot: 0 as byte}, {UID1: ""forestry.speedSlower"", UID0: ""forestry.speedSlower"", Slot: 1 as byte}, {UID1: ""forestry.lifespanLong"", UID0: ""forestry.lifespanLong"", Slot: 2 as byte}, {UID1: ""forestry.fertilityLow"", UID0: ""forestry.fertilityLow"", Slot: 3 as byte}, {UID1: ""forestry.toleranceBoth1"", UID0: ""forestry.toleranceBoth1"", Slot: 4 as byte}, {UID1: ""forestry.boolFalse"", UID0: ""forestry.boolFalse"", Slot: 5 as byte}, {UID1: ""forestry.toleranceBoth1"", UID0: ""forestry.toleranceBoth1"", Slot: 6 as byte}, {UID1: ""forestry.boolFalse"", UID0: ""forestry.boolFalse"", Slot: 7 as byte}, {UID1: ""forestry.boolTrue"", UID0: ""forestry.boolTrue"", Slot: 8 as byte}, {UID1: ""forestry.flowersWheat"", UID0: ""forestry.flowersWheat"", Slot: 9 as byte}, {UID1: ""forestry.floweringFastest"", UID0: ""forestry.floweringFastest"", Slot: 10 as byte}, {UID1: ""forestry.territoryAverage"", UID0: ""forestry.territoryAverage"", Slot: 11 as byte}, {UID1: ""forestry.effectRepulsion"", UID0: ""forestry.effectRepulsion"", Slot: 12 as byte}]}, 	Health: 50, IsAnalyzed: 0 as byte, 	Genome: {Chromosomes: [{UID1: ""forestry.speciesHermitic"", UID0: ""forestry.speciesHermitic"", Slot: 0 as byte}, {UID1: ""forestry.speedSlower"", UID0: ""forestry.speedSlower"", Slot: 1 as byte}, {UID1: ""forestry.lifespanLong"", UID0: ""forestry.lifespanLong"", Slot: 2 as byte}, {UID1: ""forestry.fertilityLow"", UID0: ""forestry.fertilityLow"", Slot: 3 as byte}, {UID1: ""forestry.toleranceBoth1"", UID0: ""forestry.toleranceBoth1"", Slot: 4 as byte}, {UID1: ""forestry.boolFalse"", UID0: ""forestry.boolFalse"", Slot: 5 as byte}, {UID1: ""forestry.toleranceBoth1"", UID0: ""forestry.toleranceBoth1"", Slot: 6 as byte}, {UID1: ""forestry.boolFalse"", UID0: ""forestry.boolFalse"", Slot: 7 as byte}, {UID1: ""forestry.boolTrue"", UID0: ""forestry.boolTrue"", Slot: 8 as byte}, {UID1: ""forestry.flowersWheat"", UID0: ""forestry.flowersWheat"", Slot: 9 as byte}, {UID1: ""forestry.floweringFastest"", UID0: ""forestry.floweringFastest"", Slot: 10 as byte}, {UID1: ""forestry.territoryAverage"", UID0: ""forestry.territoryAverage"", Slot: 11 as byte}, {UID1: ""forestry.effectRepulsion"", UID0: ""forestry.effectRepulsion"", Slot: 12 as byte}]}}
as IData;//define it 1x
hide(<forestry:bee_queen_ge>.withTag(beeGenes)); hide(<forestry:bee_princess_ge>.withTag(beeGenes)); hide(<forestry:bee_drone_ge>.withTag(beeGenes));

"
QUWeKDNP,Smart cities - Temperature registration,zhexo,Arduino,Sunday 10th of March 2024 06:35:29 AM CDT,"/*****************************************/
#include <ArduinoHttpClient.h>
#include <WiFi101.h>

#include ""arduino_secrets.h""
///////please enter your sensitive data in the Secret tab/arduino_secrets.h
/////// WiFi Settings ///////
char ssid[] = SECRET_SSID;
char pass[] = SECRET_PASS;

const char serverAddress[] = ""maker.ifttt.com"";  // server address
int port = 80;

WiFiClient wifi;
HttpClient client = HttpClient(wifi, serverAddress, port);
int status = WL_IDLE_STATUS;

const int sensorPin = A0; 
float sensorValue;
float voltageOut;

float temperatureC;

void setup() {
  pinMode(sensorPin, INPUT);
  Serial.begin(9600);
  
  while ( status != WL_CONNECTED) {
  Serial.print(""Attempting to connect to Network named: "");
  Serial.println(ssid);                   // print the network name (SSID);

  // Connect to WPA/WPA2 network:
  status = WiFi.begin(ssid, pass);
  } 

}

void loop() {
  sensorValue = analogRead(sensorPin);
  voltageOut = (sensorValue * 5000) / 1024;
  
  // calculate temperature for LM35
  temperatureC = voltageOut / 10;
  
  /********** POST to maker.ifttt.com ***/
  // assemble the path for the POST message:
  String iftttName = ""Sensor01"";
  String path = ""/trigger/"" + iftttName + ""/with/key/PsyIA63fO9W6vGY_4ilmv"";
  String contentType = ""application/json"";

  // assemble the body of the POST message:
  String postData = ""{\""value1\"":\""""; 
  postData += temperatureC;
  postData += ""\""}"";

  Serial.println(""making POST request"");

  // send the POST request
  client.post(path, contentType, postData);

  // print to console
  Serial.print(""Temperature(ºC): "");
  Serial.print(temperatureC);
  Serial.print(""  Voltage(mV): "");
  Serial.println(voltageOut);
  
  // wait for 1 hour
  delay(3600000); 
}"
LraFnyKC,photo_nn_new,boolit,Python,Sunday 10th of March 2024 06:34:44 AM CDT,"import os
os.environ['KMP_DUPLICATE_LIB_OK'] = 'True'

''' import libraries '''
import ssl
import face_alignment
import numpy as np
import matplotlib.image as mpimg
from skimage import io
from sklearn.cluster import OPTICS

ssl._create_default_https_context = ssl._create_unverified_context

class PhotoModeration:
    def __init__(
        self,
        image_path: str,
                ) -> None:
        self.image_path = image_path        
        self.face_model = face_alignment.FaceAlignment(face_alignment.LandmarksType.TWO_D, flip_input=False, device='cpu')
        self.image = io.imread(image_path, pilmode='RGB')
        ''' compute width and height of the uploaded photo '''
        self.W = self.image.shape[1]
        self.H = self.image.shape[0]
        
        self.error = None
#         self.final_image = None
        self.num_landmarks = None
        self.real_width_ratio = None
        self.real_height_ratio = None
        self.X_face_center = None
        self.Y_face_center = None
        self.X_img_center = int(self.image.shape[1]/2)
        self.Y_img_center = int(self.image.shape[0]/2)
        self.const_face_width_ratio = 0.2
        
    def find_non_crossed_intervals(self, landmarks):
        ''' find uncrossed landmarks by x-axis '''
        ''' compute distence between center of image and center of 1 landmark '''
        x_arr0 = landmarks[0][:,0]
        y_arr0 = landmarks[0][:,1]
        x_center_arr0 = np.mean(x_arr0)
        y_center_arr0 = np.mean(y_arr0)
        ''' bound of unit width of crossed min max face width '''
        min_x0, max_x0 = min(x_arr0), max(x_arr0)
        ind_2_and_more_faces = 0
        dist0 = np.sqrt( (x_center_arr0 - self.X_img_center)**2 + (y_center_arr0 - self.Y_img_center)**2 )
        ''' id of landmark which is the nearest to photo center '''
        target_nearest_landmark_ind = 0
        ''' compute distence between center of image and center of other landmarks '''
        for i in range(1, len(landmarks)):
            x_arr1 = landmarks[i][:,0]
            y_arr1 = landmarks[i][:,1]
            x_center_arr1 = np.mean(x_arr1)
            y_center_arr1 = np.mean(y_arr1)
            dist1 = np.sqrt( (x_center_arr1 - self.X_img_center)**2 + (y_center_arr1 - self.Y_img_center)**2 )
            if dist1 < dist0:
                target_nearest_landmark_ind = i
                dist0 = dist1
            min_x1, max_x1 = min(x_arr1), max(x_arr1)
            ''' if width of min max faces is crossed along x-axis recompute min max of unit width '''
            if min_x0 < min_x1 and min_x1 < max_x0 and max_x1 > max_x0:
                min_x0, max_x0 = min_x0, max_x1
                
            elif min_x0 < min_x1 and min_x1 < max_x0 and max_x1 < max_x0:
                min_x0, max_x0 = min_x0, max_x0

            elif min_x1 < min_x0 and min_x0 < max_x1 and max_x0 > max_x1:
                min_x0, max_x0 = min_x1, max_x0

            elif min_x1 < min_x0 and min_x0 < max_x1 and max_x0 < max_x1:
                min_x0, max_x0 = min_x1, max_x1
            else:
                ''' if width of min max faces is  uncrossed along x-axis make ind_2_and_more_faces + 1 '''
                ind_2_and_more_faces += 1
        ''' return ind_2_and_more_faces and id ladmark which is the nearest to the center '''  
        return ind_2_and_more_faces, target_nearest_landmark_ind

    
    def if_landmark_only_one(self, landmarks):
        ''' compute X_face_center and Y_face_center over found landmark '''
        x_array = landmarks[:,0]
        y_array = landmarks[:,1]
        self.X_face_center = np.mean(x_array)
        self.Y_face_center = np.mean(y_array)
        # ''' compute width and height of the uploaded photo '''
        # W = self.image.shape[1]
        # H = self.image.shape[0]
        ''' compute the ratio of X_face_center to W '''
        x_center_to_w = self.X_face_center/self.W
        ''' compute the ratio of Y_face_center to H '''
        y_center_to_H = 1 - self.Y_face_center/self.H
        ''' set ellipse parameters, ellipse must include face center '''
        ''' parameters were selected empirically based on 7000 photos '''
        u = 0.4984#np.mean(x_center_to_w)     #x-position of the center
        v = 0.5783#np.mean([1-i for i in y_center_to_H])    #y-position of the center
        a =.15#radius on the x-axis
        b =.23#radius on the y-axis
        ''' if center of face is outside the min max values of ellipse return error 2 - The detected face is not centered'''
        if x_center_to_w <= u - a or x_center_to_w >= u + a or y_center_to_H <= v - b or y_center_to_H >= v + b:
            self.error =  'The detected face is not centered'
        else:
            y0 = v + np.sqrt( (1 - (x_center_to_w - u)**2/a**2)*b**2 )
            y1 = v - np.sqrt( (1 - (x_center_to_w - u)**2/a**2)*b**2 )
            x0 = u + np.sqrt( (1 - (y_center_to_H - v)**2/b**2)*a**2 )
            x1 = u - np.sqrt( (1 - (y_center_to_H - v)**2/b**2)*a**2 )
            ''' if center of landmark is located outside ellipse return error 2 - The detected face is not centered '''
            if y_center_to_H < y1 or y_center_to_H > y0 or x_center_to_w < x1 or x_center_to_w > x0:
                self.error =  'The detected face is not centered'
                ''' if center of landmark is located inside ellipse '''
            else:
                ''' compute the ratio landmark width to photo width '''
                self.real_width_ratio = abs(max(x_array) - min(x_array))/self.W
                ''' compute the ratio landmark height to photo height '''
                self.real_height_ratio = abs(max(y_array) - min(y_array))/self.H
                ''' if real_width_ratio < const_face_width_ratio and real_height_ratio <= real_width_ratio error 4 - The detected face is too small on the photo '''
                if self.real_width_ratio < self.const_face_width_ratio:
                    self.error =  'The detected face is too small on the photo'
                elif self.real_width_ratio > 0.6: 
                    if self.real_height_ratio <= self.real_width_ratio and self.real_height_ratio > 0.56*self.real_width_ratio:
                        ''' if real_width_ratio > 0.6 and real_height_ratio <= real_width_ratio an real_height_ratio > 0.56*real_width_ratio error 5 - The face is too large on the photo, the photo size is standard '''
                        self.error =  'The face is too large on the photo, the photo size is standard'
                        ''' if real_width_ratio > 0.6 and real_height_ratio <= 0.56*real_width_ratio error 6 - The face is too large on the photo, the photo is elongated vertically '''
                    elif self.real_height_ratio <= 0.56*self.real_width_ratio:
                        self.error =  'The face is too large on the photo, the photo is elongated vertically'               
                elif self.real_width_ratio >= self.const_face_width_ratio and self.real_width_ratio <= 0.6: 
                    ''' if real_width_ratio >= const_face_width_ratio and real_width_ratio <= 0.6 and real_height_ratio < 0.56*real_width_ratio error 7 - The face is standard size on the photo, the photo is elongated vertically '''
                    if self.real_height_ratio < 0.56*self.real_width_ratio:
                        self.error =  'The face is standard size on the photo, the photo is elongated vertically'
                        ''' if real_width_ratio >= const_face_width_ratio and real_width_ratio <= 0.6 and real_height_ratio >= 0.56*real_width_ratio 
                        photo size is standard and face size is standard '''
                    elif self.real_height_ratio >= 0.56*self.real_width_ratio:
                        ''' search dark glasses '''
                        ''' select landmark dots which are located upper face center along y axis '''
                        indexes_of_up_landmarks = [i for i, x in enumerate(y_array) if x < self.Y_face_center]
                        x_up_landmarks = landmarks[:,0][indexes_of_up_landmarks]
                        y_up_landmarks = landmarks[:,1][indexes_of_up_landmarks]
                        landmarks_eye = np.vstack([x_up_landmarks, y_up_landmarks]).T
                        ''' split up landmark dots into 2 clusters, main idea: 1 cluster - 1 eye '''
                        clustering = OPTICS(min_samples = 5).fit(landmarks_eye)
                        ''' dark ratio around each eye '''
                        cluster_domain_dark_ratio = []
                        min_x, max_x = int(min(x_array)), int(max(x_array))
                        face_scale_x = np.abs(max_x - min_x)
                        for cluster in range(0, len(set(clustering.labels_))):
                            ind_of_labels = [i for i, x in enumerate(clustering.labels_) if x == cluster]
                            if len(ind_of_labels) > 0:                
                                sub_x = landmarks_eye[:,0][ind_of_labels]
                                sub_y = landmarks_eye[:,1][ind_of_labels]
                                k = 0.2
                                h = 0.15
                                min_sub_x = int(np.mean(sub_x) - face_scale_x*k)
                                max_sub_x = int(np.mean(sub_x) + face_scale_x*k)

                                min_sub_y = int(np.mean(sub_y) - face_scale_x*h)
                                max_sub_y = int(np.mean(sub_y) + face_scale_x*h)
                                normalized_img = self.image/self.image.max()
                                cropped_image_glass = normalized_img[min_sub_y:max_sub_y, min_sub_x:max_sub_x]               
                                color_bound = 0.3
                                cropped_image_glass[cropped_image_glass[:,:,0] > color_bound] = 1
                                cropped_image_glass[cropped_image_glass[:,:,1] > color_bound] = 1
                                cropped_image_glass[cropped_image_glass[:,:,2] > color_bound] = 1
                                #compute_dark_ratio
                                unique_x, counts_x = np.unique(cropped_image_glass[:,:,0], return_counts = True)
                                unique_y, counts_y = np.unique(cropped_image_glass[:,:,1], return_counts = True)
                                unique_z, counts_z = np.unique(cropped_image_glass[:,:,2], return_counts = True)
                                if 1 in unique_x or 1 in unique_y or 1 in unique_z:
                                    x_count = dict(zip(unique_x, counts_x))[1]
                                    y_count = dict(zip(unique_y, counts_y))[1]
                                    z_count = dict(zip(unique_z, counts_z))[1]
                                    dark_ratio = (1 - (x_count + y_count + z_count)/(3*cropped_image_glass.shape[0]*cropped_image_glass.shape[1]))
                                    cluster_domain_dark_ratio.append(dark_ratio)
                        ''' min dark ratio >= 0.42 error 8 - The area around the eyes is dark or you have dark glasses '''
                        if min(cluster_domain_dark_ratio) >= 0.42:
                            self.error = 'The area around the eyes is dark or you have dark glasses'
                            ''' min dark ratio < 0.42 the area around the eyes is not dark or you don't have dark glasses'''
#                         else:
#                             const_x = 0.44
#                             const_y = 0.32
#                             delta_x = (max(x_array) - min(x_array))/const_x/2
#                             delta_y = (max(y_array) - min(y_array))/const_y/2
#                             left_bound_x = int(self.X_face_center - delta_x)
#                             if left_bound_x < 0:
#                                 left_bound_x = 0
#                             up_bound_y = int(self.Y_face_center - delta_y)
#                             if up_bound_y < 0:
#                                 up_bound_y = 0
#                             ''' crop photo 3 to 4 ratio around landmark '''
#                             cropped_image = self.image[up_bound_y:int(self.Y_face_center + delta_y), left_bound_x:int(self.X_face_center + delta_x), :]#.astype(int)
#                             ''' if width of cropped photo < 200 px error 9 - Low quality of photo (cropprd 3 to 4 face landmark) '''
#                             if cropped_image.shape[0] < 200:
#                                 self.error = 'Low quality of photo (cropprd 3 to 4 face landmark)'
    #                         else:
    #                             ''' if width of cropped photo > 200 px return cropped final image '''
    #                             self.image = mpimg.imread(self.image_path)
    #                             self.final_image = self.image[up_bound_y:int(self.Y_face_center + delta_y), left_bound_x:int(self.X_face_center + delta_x), :]#.astype(int)
        return self.error#, self.final_image

    def moderation_photo(self):
        ''' detect file format '''
        if str(self.image_path.split('.')[-1]).lower() not in ['png', 'jpg', 'jpeg', 'heic', 'jfif']:
            self.error = 'File format error. The format must be jpg, jpeg, png or heic'
            ''' if the photo is oriented horizontally return error 3 - The height of the photos is less than the width '''
        elif self.W > self.H:
            self.error =  'The height of the photos is less than the width'
        else:
            ''' if width or height of photo <  200 px error 9 - One of photo side <  200 px '''
            if self.image.shape[0] <  200 or self.image.shape[1] < 200:
                self.error = 'One of photo side < 200 px'
            else:
                '''check if min(width, hight) > 3000 px'''
                min_side_size = sorted([i for i in self.image.shape])[1]
                if min_side_size  > 3000:
                    width = self.image.shape[0]
                    hight = self.image.shape[1]
                    cut_y = 0.2
                    cut_x = 0.2
                    ''' cut out 80% of width and hight '''
                    image_cropped = self.image[int((cut_y-0.1)*width):-int((cut_y+0.1)*width), int(cut_x*hight):-int(cut_x*hight)]
                    ''' search landmarks by using face_alignment '''
                    landmarks = self.face_model.get_landmarks(image_cropped)
                    ''' if len(landmarks) > 0 transform searched landmarks over initial sizes of photo with higher resolution '''
                    if landmarks != None:
                        for i in range(0, len(landmarks)):
                            landmarks[i][:,0] = landmarks[i][:,0] + int(cut_x*hight)
                            landmarks[i][:,1] = landmarks[i][:,1] + int((cut_y-0.1)*width)            
                            ''' if min(width, hight) >= 3000 px'''
                else:
                    ''' search landmarks by using face_alignment '''
                    landmarks = self.face_model.get_landmarks(self.image)
                ''' if there is no landmarks, return error 0 - No faces were found on the photo '''
                if landmarks == None:
                    self.error = 'No faces were found on the photo'
                    ''' if there is 1 landmark only run if_landmark_only_one() '''
                elif len(landmarks) == 1:
        #             self.error, self.final_image = self.if_landmark_only_one(landmarks[0])
                    self.error = self.if_landmark_only_one(landmarks[0])
                    ''' if there is more than 1 landmark '''
                elif len(landmarks) > 1:
                    ''' remove landmarks which are 10 times smaller in width than the widest landmark '''
                    times_smaller = 10
                    widths_of_landmarks = [max(landmarks[r][:,0]) - min(landmarks[r][:,0]) for r in range(0, len(landmarks))]
                    max_width_landmarks = max(widths_of_landmarks)
                    bound = max_width_landmarks/times_smaller
                    index_of_big_landmarks = [(t) for t, p in enumerate(widths_of_landmarks) if p > bound]
                    landmarks = [landmarks[s] for s in index_of_big_landmarks]
                    ''' check if w/h in [a,b] where w - face width, h - face hight. w and h are computed based on found landmarks '''
                    a = 0.86
                    b = 1.25
                    good_landmarks_indexes = []
                    for ind, ld in enumerate(landmarks):
                        w = abs(max(ld[:,0]) - min(ld[:,0]))
                        h = abs(max(ld[:,1]) - min(ld[:,1]))
                        if w/h >= a and w/h <= b:
                            good_landmarks_indexes.append(ind)
                            ''' if number of landmarks in [a,b] = 0 return error 0 - No faces were found on the photo '''
                    if len(good_landmarks_indexes) == 0:
                        self.error = 'No faces were found on the photo'            
                        ''' if number of landmarks in [a,b] = 1 run if_landmark_only_one() '''
                    elif len(good_landmarks_indexes) == 1:
        #                 self.error, self.final_image = self.if_landmark_only_one(landmarks[ind])
                        self.error = self.if_landmark_only_one(landmarks[ind])
                        ''' if number of landmarks in [a,b] > 1 '''
                    elif len(good_landmarks_indexes) > 1:
                        ''' choose landmarks in [a,b] '''
                        landmarks = [landmarks[ind] for ind in good_landmarks_indexes]               
                        ''' run find_non_crossed_intervals() '''
                        indicator_2_and_more_faces, target_average_landmark_ind = self.find_non_crossed_intervals(landmarks)
                        ''' if there is any uncrossed interval return error 1 - Several people were found on the photo '''
                        if indicator_2_and_more_faces >= 1: 
                            self.num_landmarks = len(landmarks)
                            self.error = 'Several people were found on the photo'
                            ''' if there is all crossed interval run if_landmark_only_one() '''
                        elif indicator_2_and_more_faces == 0: 
        #                     self.error, self.final_image = self.if_landmark_only_one(landmarks[target_average_landmark_ind])
                            self.error = self.if_landmark_only_one(landmarks[target_average_landmark_ind])

        return self.error#, self.final_image"
F0nN71Rx,09. Fish Tank,GabrielHr00,Java,Sunday 10th of March 2024 06:34:01 AM CDT,"import java.util.Scanner;

public class FishTank {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int width = Integer.parseInt(scanner.nextLine());
        int height = Integer.parseInt(scanner.nextLine());
        int length = Integer.parseInt(scanner.nextLine());
        double percent = Double.parseDouble(scanner.nextLine());

        int volumeInSm = width * height * length;
        // 1l = 1dm3
        // 1dm = 10sm
        // 1dm3 = 10sm^3 = 10sm * 10sm * 10sm = 1000sm3 = 1l

        double volume = volumeInSm / 1000.0;
        double finalVolume = volume - (volume * (percent/100));

        System.out.println(finalVolume);
    }
}"
TszCcVBk,08. Basketball Equipment,GabrielHr00,Java,Sunday 10th of March 2024 06:32:53 AM CDT,"import java.util.Scanner;

public class BasketballEquipment {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int annualFee = Integer.parseInt(scanner.nextLine());

        double shoesPrice = annualFee - (annualFee * 0.40);
        // double shoesPrice = annualFee * 0.60;
        double setPrice = shoesPrice - (shoesPrice * 0.20);
        // double setPrice = shoesPrice * 0.80;
        double ballPrice = setPrice * 1/4;
        double accPrice = ballPrice * 1/5 ;

        double finalSum = annualFee + shoesPrice + setPrice + ballPrice + accPrice;
        System.out.println(finalSum);
    }
}"
KFNtJK3L,Code review.,SarahC,JavaScript,Sunday 10th of March 2024 06:32:02 AM CDT,"HTML____________________________

<h1>Click to start</h1>
<div id=""content"">
  Ultrasonic transmitter:</br>
  <canvas id=""c""></canvas></br>
  <label for=""textInput"">Text to send: </label>
  <input type=""text"" name=""textInput"" length=50 onKeyUp=""setText(this);"" onKeyDown=""setText(this);"">
</div>


CSS____________________________

* {
  background: #2e2e2e;
  color: #f0f0f0;
  font-family: arial, sans-serif;
  font-size: 20pt;
}

body {
  padding: 5px;
  margin: 0px;
}

canvas {
  border: 1px solid orange;
}

h1 {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  margin: 0;
}

#content {
  visibility : hidden;
}

JavaScript____________________________
/*
Ultrasonic message maker! 

--      --           ----------          -- <<<< Each row is a single pitch.
--      --               --              --
--      --               --              -- 
----------               --              -- 
--      --               --              -- 
--      --               --                 
--      --           ----------          -- 

*/

let baseFrequency = 19000; // 19000 : Inaudible.  700 : Listen to the message.


//____________________________

// Class to display given text, and enables pixel columns to be examined for color.
// Contains a simple ""cursor"" for current pixel column, and the end of available text.
class TextScanner{
  constructor(canvas, cWidth, cHeight, textYNudge, font){
    this._initialiseCanvas(canvas, cWidth, cHeight, textYNudge, font);
    this._clearAndDrawText("""");
    this._takePixelSnapshot();
    this._drawTextEndCursor(1);
    this._drawReadCursor(0);
  }
  // Interface ------
  // Given a column (0 based) updates read cursor display.
  setReadColumn(xPosition){
    if(xPosition > this.textPixelWidth)
      this.readCursorPosition = this.textPixelWidth;
    else
      this.readCursorPosition = xPosition;
    this._drawAllTextAndCursors();
    return true;
  }
  // True if specified cursor position is past all the text content.
  cursorReachedEnd(requestedCursorPosition){
    return (requestedCursorPosition >= this.textPixelWidth);
  }
  // Clear the text display, and redraw with new text.
  // Resets both cursors and draws them.
  setText(text){
    this.readCursorPosition = 0;
    this._clearAndDrawText(text);
    this.textPixelWidth = this._getTextPixelWidth(text);
    this._takePixelSnapshot();
    this._drawTextEndCursor(this.textPixelWidth);
    this._drawReadCursor(this.readCursorPosition);
  }
  // Returns the column of pixels in a basic array from the current read cursor position.
  readColumn(){
    let pixelStrip = [];
    for(let y = this.cHeight - 1; y >= 0; y--){
      let ptr = ((y * this.cWidth) + this.readCursorPosition) * 4;
      pixelStrip.push(this.pixels8[ptr + 1]);// Take red for the sample
    }
    return pixelStrip;
  }
  // ""Private""
  _initialiseCanvas(canvas, cWidth, cHeight, textYNudge, font){
    this.canvas = canvas;
    canvas.width = cWidth;
    canvas.height = cHeight;
    canvas.style.cssText = ""image-rendering: pixelated;"";
    canvas.style.width = (cWidth * 4) + ""px"";
    canvas.style.height = (cHeight * 4) + ""px"";
    this.cWidth = cWidth;
    this.cHeight = cHeight;
    this.textYNudge = textYNudge;
    this.ctx = canvas.getContext(""2d"");
    this.ctx.lineWidth = 1;
    this.ctx.strokeStyle = ""white"";
    this.ctx.font = font;
    this.ctx.textAlign = ""left"";
    this.readCursorPosition = 0;
    this.textPixelWidth = 0;
  }
  // Redraw the cached text to clear the panel, and draws the two cursors.
  _drawAllTextAndCursors(){
    this._reloadOriginalSnapshot();
    this._drawTextEndCursor(this.textPixelWidth);
    this._drawReadCursor(this.readCursorPosition);
  }
  // Returns the width of the given text in real pixels.
  _getTextPixelWidth(text){
    return Math.round(this.ctx.measureText(text).width + 0.5) ;
  }
  // Clears the panel and draws the supplied text to it.
  _clearAndDrawText(text){
    this.ctx.fillStyle = ""black"";
    this.ctx.fillRect(0, 0, this.cWidth, this.cHeight);
    this.ctx.fillStyle = ""white"";
    this.ctx.fillText(text, 0, this.cHeight - this.textYNudge);
  }
  // Extract the pixel data from the panel, and make a shallow copy too. (to quickly redraw text later)
  _takePixelSnapshot(){
    this.imageData = this.ctx.getImageData(0, 0, this.cWidth, this.cHeight);
    this.pixels8 = this.imageData.data;
    this.pixels32 = new Uint32Array(this.pixels8.buffer);
    this.imageDataOriginal = this.ctx.createImageData(this.cWidth, this.cHeight);
    this.imageDataOriginal.data.set(this.pixels8);
  }
  // Return the pixel snapshot to the panel - in effect redrawing the text very fast.
  _reloadOriginalSnapshot(){
    this.ctx.putImageData(this.imageData, 0, 0);
  }
  // Given the X position, draw the text end cursor.
  _drawTextEndCursor(xPosition){
    xPosition += 0.5;
    this.ctx.strokeStyle = ""rgba(255, 0, 0, 0.5)"";
    this.ctx.beginPath();
    this.ctx.moveTo(xPosition, 0);
    this.ctx.lineTo(xPosition, this.cHeight);
    this.ctx.stroke();
  }
  // Given the X position, draw the current pixel column cursor.
  _drawReadCursor(xPosition){
    xPosition += 0.5;
    this.ctx.strokeStyle = ""rgba(0, 255, 0, 0.5)"";
    this.ctx.beginPath();
    this.ctx.moveTo(xPosition, 0);
    this.ctx.lineTo(xPosition, this.cHeight);
    this.ctx.stroke();
  }
}


//____________________________

// This class is concerned with capturing a new Audio contexts after user action, and creating 
// a basic oscillator and volume node from it.
class NoteGenerator{
  constructor(f){
    this.frequency = f;
    // Note: EVERY oscillator needs a new context, not one for all of them
    // else the system can't keep up with volume changes and lots of buzzing happens.
    this.audioCtx = new AudioContext();

    this.voiceGain = this.audioCtx.createGain();
    this.voiceGain.gain.setValueAtTime(0, this.audioCtx.currentTime);

    this.oscillator = this.audioCtx.createOscillator();
    this.oscillator.type = ""sine"";
    this.oscillator.frequency.setValueAtTime(f, this.audioCtx.currentTime);

    this.oscillator.connect(this.voiceGain);
    this.voiceGain.connect(this.audioCtx.destination);

    this.oscillator.start();
  }
  on(){
    this.voiceGain.gain.setValueAtTime(1, this.audioCtx.currentTime);
  }
  off(){
    this.voiceGain.gain.setValueAtTime(0, this.audioCtx.currentTime);
  } 
  volume(vol){
    this.voiceGain.gain.setValueAtTime(vol, this.audioCtx.currentTime);
  }
}

//____________________________

// This class creates a ""frequency ramp"" of oscillators that can have their volumes controlled individually.
class Chords{
  constructor(setup){
    this.notes = [];
    for(let note = 0; note < setup.numberOfNotes; note++ ){
      let frequency = setup.startFrequency + (note * setup.frequencyStep);
      this.addNote(frequency);
    }
  }
  addNote(frequency){
    let newNote = new NoteGenerator(frequency);
    this.notes.push(newNote);
  }
  stopAllNotes(){
    this.notes.forEach((note) => note.off());
  }
  playChord(notesIndex){
    notesIndex.forEach((noteIndex) => this.notes[noteIndex].on());
  }
  setVolumes(notesVolumes){
    for(let index = 0; index < this.notes.length; index++)
      this.notes[index].volume(notesVolumes[index] / 255); 
  }
  
}


//____________________________

// One page app global variables by choice. 
// Main code starts here.

let canvas = document.getElementById(""c"");
let cWidth = 300;
let cHeight = 20;
let textYNudge = 4; // Needed to center vertically on the display box.
let textScanner = new TextScanner(canvas, cWidth, cHeight, textYNudge, ""20px Arial"");

let keyTimeoutReset = 4;
let keyTimeout = keyTimeoutReset;
let cursorPosition = 0;

let chords = null;
const controller = new AbortController();
const { signal } = controller;
window.addEventListener(""click"", begin);

function begin(){
  window.removeEventListener(""click"", begin);
  document.querySelector(""h1"").remove();
  document.getElementById(""content"").style.visibility = ""visible"";
  chords = new Chords({startFrequency: baseFrequency, frequencyStep: 155, numberOfNotes: cHeight});
  requestAnimationFrame(update);
}

function ultrasonicTransmit(channelVolumes){
  chords.setVolumes(channelVolumes);
}

function setText(txtBox){
  textScanner.setText(txtBox.value);
  keyTimeout = keyTimeoutReset;
  cursorPosition = 0;
  textScanner.setReadColumn(cursorPosition);
  r = textScanner.readColumn();
  ultrasonicTransmit(r);  
}

function update(){
  requestAnimationFrame(update);
  if(keyTimeout > 0) {
    keyTimeout -= 1;
    return;
  }
  cursorPosition += 1;
  keyTimeout = keyTimeoutReset;
  if(textScanner.cursorReachedEnd(cursorPosition)) cursorPosition = 0;
  textScanner.setReadColumn(cursorPosition);
  channelVolumes = textScanner.readColumn();
  ultrasonicTransmit(channelVolumes);
}
"
PjWAi8Mj,07. Food Delivery,GabrielHr00,Java,Sunday 10th of March 2024 06:31:53 AM CDT,"import java.util.Scanner;

public class FoodDelivery {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int chickenMenuCount = Integer.parseInt(scanner.nextLine());
        int fishMenuCount = Integer.parseInt(scanner.nextLine());
        int vegetarianMenuCount = Integer.parseInt(scanner.nextLine());

        double totalSum = (chickenMenuCount * 10.35) + (fishMenuCount * 12.40) + (vegetarianMenuCount * 8.15);
        double dessertPrice = totalSum * 0.20;

        double finalPrice = totalSum + dessertPrice + 2.50;
        System.out.println(finalPrice);
    }
}"
sPwvQAk5,06. Repainting,GabrielHr00,Java,Sunday 10th of March 2024 06:30:30 AM CDT,"import java.util.Scanner;

public class Repainting {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int plasticCount = Integer.parseInt(scanner.nextLine());
        int paintLiters = Integer.parseInt(scanner.nextLine());
        int thinnerLiters = Integer.parseInt(scanner.nextLine());
        int hoursTotalWorkers = Integer.parseInt(scanner.nextLine());

        double plasticSum = (plasticCount + 2) * 1.50;
        double paintSum = (paintLiters + (paintLiters * 0.10)) * 14.50;
        double thinnerSum = thinnerLiters * 5.0;
        double totalSum = plasticSum + paintSum + thinnerSum + 0.40;

        double priceWorkersForOneHour = totalSum * 0.30;
        double priceWorkersAll = priceWorkersForOneHour * hoursTotalWorkers;
        System.out.println(totalSum + priceWorkersAll);
    }
}"
WhXXrDpv,05. Supplies for School,GabrielHr00,Java,Sunday 10th of March 2024 06:28:08 AM CDT,"import java.util.Scanner;

public class SuppliesForSchool {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int pensCount = Integer.parseInt(scanner.nextLine());
        int markersCount = Integer.parseInt(scanner.nextLine());
        int detergentLiters = Integer.parseInt(scanner.nextLine());
        int discountPercent = Integer.parseInt(scanner.nextLine());

        double pensSum = pensCount * 5.80;
        double markersSum = markersCount * 7.20;
        double detergentSum = detergentLiters * 1.20;

        double totalSum = pensSum + markersSum + detergentSum;

        double finalSum = totalSum - (totalSum * (discountPercent/100.0));
        System.out.println(finalSum);
    }
}"
zEg99sMc,04. Vacation Books List,GabrielHr00,Java,Sunday 10th of March 2024 06:26:29 AM CDT,"import java.util.Scanner;

public class VacationBooksList {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int pagesCount = Integer.parseInt(scanner.nextLine());
        int pagesPerHour = Integer.parseInt(scanner.nextLine());
        int days = Integer.parseInt(scanner.nextLine());

        int allHours = pagesCount / pagesPerHour;
        int hoursPerDay = allHours / days;

        System.out.println(hoursPerDay);
    }
}"
d5uWpFxT,03. Deposit Calculator,GabrielHr00,Java,Sunday 10th of March 2024 06:25:33 AM CDT,"import java.util.Scanner;

public class DepositCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double depositSum = Double.parseDouble(scanner.nextLine());
        int depositDue = Integer.parseInt(scanner.nextLine());
        double interestPercent = Double.parseDouble(scanner.nextLine());

        double monthlyInterest = (depositSum * (interestPercent/100)) / 12;
        double finalSum = depositSum + depositDue * monthlyInterest;

        System.out.println(finalSum);
    }
}
"
phgCfcF4,02. Radians to Degrees,GabrielHr00,Java,Sunday 10th of March 2024 06:24:29 AM CDT,"import java.util.Scanner;

public class RadiansToDegrees {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double radians = Double.parseDouble(scanner.nextLine());

        double degrees = radians * 180 / Math.PI;
        System.out.println(degrees);
    }
}
"
SLnHRkkm,01. USD to BGN,GabrielHr00,Java,Sunday 10th of March 2024 06:23:40 AM CDT,"import java.util.Scanner;

public class USDToBGN {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double usd = Double.parseDouble(scanner.nextLine());

        double bgn = usd * 1.79549;
        System.out.println(bgn);
    }
}"
07LpdKpW,GM - Flickr Buddy Interesting - MATCH - TWEAK 2020 - NO TAMPERMONKEY (Why?) / OK VIOLENTMONKEY,decembre,JavaScript,Sunday 10th of March 2024 06:20:57 AM CDT,"// ==UserScript==
// @name	        Flickr Buddy Interesting - MATCH - TWEAK 2020 - NO TAMPERMONKEY (Why?) / OK VIOLENTMONKEY -
// @namespace	    http://6v8.gamboni.org/
// @description     Pierre Andrews (Mortimer) - TWEAK Localize / Number of Pics displayed - 2017.06 - Quick access to user's interesting photos from the Buddy Icon Menu
// @version         0.5
// @identifier	    http://6v8.gamboni.org/IMG/js/flickrbuddyinteresting.user.js
// @date           2009-04-17
// @creator        Pierre Andrews (mortimer.pa@free.fr)
// @contributor    Stephen Fernandez ( http://steeev.freehostia.com )
// @contributor    Ricardo Mendonca Ferreira
//
// @include http://*flickr.com*
// @include http*://*flickr.com/*

// @exclude	   http*://*flickr.com/groups/
// @exclude	   http*://*flickr.com/photos/*/map*
// @exclude	   http*://*flickr.com/photos/*/page*

// 2019
// @exclude	   http*://*flickr.com/photos/*/favorites*
// @exclude	   http*://*flickr.com/photos/*/favorites/*
// @exclude	   http*://*flickr.com/photos/*/albums*
// @exclude	   http*://*flickr.com/groups?view=tn
// @exclude	   http*://*flickr.com/groups?view=ls
// @exclude	   http*://*flickr.com/groups/*/pool/*

// @exclude	    http*://services.addons.mozilla.org/*

// @grant       none

// ==/UserScript==

// --------------------------------------------------------------------
//
// This is a Greasemonkey user script.
//
// To install, you need Greasemonkey: http://greasemonkey.mozdev.org/
// Then restart Firefox and revisit this script.
// Under Tools, there will be a new menu item to ""Install User Script"".
// Accept the default configuration and install.
//
// --------------------------------------------------------------------
// Copyright (C) 2006 Pierre Andrews
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// The GNU General Public License is available by visiting
//   http://www.gnu.org/copyleft/gpl.html
// or by writing to
//   Free Software Foundation, Inc.
//   51 Franklin Street, Fifth Floor
//   Boston, MA  02110-1301
//   USA

debugger;

(function () {

	//update information
	var SCRIPT = {
		name: ""Flickr Buddy Interesting"",
		namespace: ""http://6v8.gamboni.org/"",
		description: ""Quick access to user's interesting photos from the Buddy Icon Menu"",
		identifier: ""http://6v8.gamboni.org/IMG/js/flickrbuddyinteresting.user.js"",
		version: ""0.5"",								// version
		date: (new Date(""2009-04-17""))		// update date
		.valueOf()
	};


	function $x1(xpath) {
		return document.evaluate(
								 xpath,
								 document,
								 null,
								 XPathResult.FIRST_ORDERED_NODE_TYPE, null
								 ).singleNodeValue;
	}


	/***********************************************************************
	 * Flickr Localisation (changes TAMPERMONKEY : line 83>85 )
	 **********************************************************************/

		// LOCALISATION TWEAKED
	//FlickrLocalisation, script to help localise user script for Flickr
	//version 0.2
	//release 26 Jun 2007
	//author: Pierre Andrews

	// --------------------------------------------------------------------
	// Copyright (C) 2007 Pierre Andrews
	// This script can be redistributed under the terms of the GNU LGPL, without
	// modification of this licence and copyright notice. Attribution to the author should be
	// kept at least in the source of the scripts.
	// For reference: http://6v8.gamboni.org/Localising-Flickr-Greasemonkey.html
	//
	// This program is free software; you can redistribute it and/or
	// modify it under the terms of the GNU Lesser General Public License
	// as published by the Free Software Foundation;
	//
	// This program is distributed in the hope that it will be useful,
	// but WITHOUT ANY WARRANTY; without even the implied warranty of
	// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	// GNU General Public License for more details.
	//
	// The GNU Lesser General Public License is available by visiting
	//   http://www.gnu.org/copyleft/lgpl.html
	// or by writing to
	//   Free Software Foundation, Inc.
	//   51 Franklin Street, Fifth Floor
	//   Boston, MA  02110-1301
	//   USA


	var FlickrLocaliser = function(locals) {
		this.init(locals);
	}
	FlickrLocaliser.prototype = {
		selectedLang: undefined,
		localisations: undefined,
		getLanguage: function() {
			if(!this.selectedLang) {
				var langA = document.evaluate(
//""//p[@class='LanguageSelector']//a[contains(@class,'selected')]"",
// TWEAK DECEMBRE
// PB Localisation example :
// FIXED for HELP Forum - https://www.flickr.com/help/forum/88857/?search=sans
//""//p[@class='.ui-dropdown.simple-drop.drop-up']//a[contains(@class,'selected')]"",
"".//*[@id='foot']/footer/div/div[1]/div/ul/li[10]/div//a[contains(@class,'selected')]"",
								 document,
								 null,
								 XPathResult.FIRST_ORDERED_NODE_TYPE, null
								 ).singleNodeValue;
                if (!langA) { // new photo page layout
                    var langA = document.evaluate(
                                ""//div[@id='foot-lang']//a[contains(@class,'selected')]"",
                                document,
                                null,
                                XPathResult.FIRST_ORDERED_NODE_TYPE, null
                                ).singleNodeValue;
                }
				if(langA) {
					var matches = /\/change_language.gne\?lang=([^&]+)&.*/.exec(langA.href);
					if(matches && matches[1]) {
						this.selectedLang = matches[1];
						return this.selectedLang;
					}
				}
				return false;
			} else return this.selectedLang;
		},

		init: function(locals) {
			this.localisations = locals;
		},

		localise: function(string, params) {
			if(this.localisations && this.getLanguage()) {
				var currentLang = this.localisations[this.selectedLang];
				if(!currentLang) currentLang = this.localisations[this.localisations.defaultLang];
				var local = currentLang[string];
				if(!local) {
					local = this.localisations[this.localisations.defaultLang][string];
				}
				if(!local) return string;
				for(arg in params) {
					var rep = new RegExp('@'+arg+'@','g');
					local = local.replace(rep,params[arg]);
				}
				local =local.replace(/@[^@]+@/g,'');
				return local;
			} else return undefined;
		}

	}

	/*****************************Flickr Localisation**********************/


	var localiser =  new FlickrLocaliser({
			'en-us' : {
				'pool_interesting' : 'Pool Interestingness',
				'quick_interesting' : 'Quick Interestingness',
				'close' : 'Close'
			},
			'fr-fr' : {
				'pool_interesting' : 'Interestingness du Groupe',
				'quick_interesting' : 'Interestingness Rapide',
				'close' : 'Fermer'
			},
			'it-it' : {
				'pool_interesting' : 'Interestingness del Gruppo',
				'quick_interesting' : 'Interestingness Rapida',
				'close' : 'Chiudi'
			},
			defaultLang: 'en-us'
		});

	function M8_log() {
		if(unsafeWindow.console)
			unsafeWindow.console.log(arguments);
		else
			GM_log(arguments);
	}

	/*
	  Xpath trickery, from:
	  http://ecmanaut.blogspot.com/2006/07/expressive-user-scripts-with-xpath-and.html
	*/
	function $x( xpath, root )
		{
			var doc = root ? root.evaluate?root:root.ownerDocument : document;
			var got = doc.evaluate( xpath, root||doc, null, 0, null ), next;
			var result = [];
			while( next = got.iterateNext() )
				result.push( next );
			return result;
		}


	function foreach( xpath, cb, root )
	{
		var nodes = $x( xpath, root ), e = 0;
		for( var i=0; i<nodes.length; i++ )
			e += cb( nodes[i], i ) || 0;
		return e;
	}



	function getObjectMethodClosure(object, method) {
		return function(arg) {
			return object[method](arg);
		}
	}

	/*
	  LightWeightBox - Thom Shannon
	  http://www.ts0.com
	  V 1.0 2006
	  BSD License
	*/

	var LightWeightBoxOn=false;
	var LightWeightBox = function(ele){
		this.ele = ele;
		this.backgroundColor = '#CCC';
		this.opacity = 0.5;
	}
	with (LightWeightBox){
		prototype.Render = function(){
			if (!LightWeightBoxOn){
				bgDiv = document.createElement('div');
				bgDiv.innerHTML = ''
				bgDiv.style.backgroundColor = this.backgroundColor;
				bgDiv.style.position='fixed';
				bgDiv.style.height='100%';
				bgDiv.style.width='100%';
				bgDiv.style.top=0;
				bgDiv.style.left='0';
				bgDiv.style.opacity=this.opacity;
				this.ele.style.position='fixed';
				this.bgDiv=bgDiv;
				document.body.appendChild(this.bgDiv);
				document.body.appendChild(this.ele);
				this.CheckSize();
				LightWeightBoxOn = true;
				var oSelf=this;
				this.sizeCheck = setInterval(function(){oSelf.CheckSize();},20);
			}
		}
		prototype.CheckSize = function(){
			if (this.ele.offsetHeight!=this.currentHeight) {
				this.offsetTop = (self.innerHeight/2)-(this.ele.offsetHeight/2);
				this.ele.style.top = this.offsetTop+'px';
				this.currentHeight=this.ele.offsetHeight;
			}
			if (this.ele.offsetWidth!=this.currentWidth) {
				this.offsetLeft = (self.innerWidth/2)-(this.ele.offsetWidth/2);
				this.ele.style.left = this.offsetLeft+'px';
				this.currentWidth=this.ele.offsetWidth;
			}
		}

		prototype.Close=function(oSelf){
			document.body.removeChild(oSelf.bgDiv);
			document.body.removeChild(oSelf.ele);
			LightWeightBoxOn = false;
		}
	}



	var flickrbuddyinteresting = function() {this.init();}

	flickrbuddyinteresting.prototype = {
		init: function() {
			var menu = document.getElementById('personmenu_contacts_link');
			if(menu) {
				var link =document.createElement('a');
				link.setAttribute('class','block');
				link.setAttribute('id','tag_person_link');
				link.setAttribute('href','javascript:;');
				link.addEventListener('click',getObjectMethodClosure(this,'showInteresting'),true);
				link.textContent=localiser.localise('quick_interesting');

				menu.parentNode.insertBefore(link,menu.nextSibling);
			}

// decembre CONTACTS page - OK
			//var who = getElementsByClassName('Icon');
			//var menu = getElementsByClassName('personmenu-sep-bottom');

// <head>
// <title>Who calls you a contact? | Contacts | flickr.com</title>

// <td class=""contact-list-bicon"">
// <a rel=""contact"" href=""/photos/muhammetsen/"">
// <img class=""BuddyIconX"" width=""24"" height=""24"" border=""0"" alt=""senmuhammet"" src=""https://farm8.staticflickr.com/7122/buddyicons/135724433@N06.jpg?1462861443#135724433@N06"">

// div id=""person_hover"" style=""left: 242px; top: 107px; display: block;"">
// <div id=""person_hover_shadow"" class=""shadowDark""></div>
// <div id=""person_hover_inner"">
// <a id=""person_hover_link"" href=""https://www.flickr.com/photos/muhammetsen/"" style=""display: block;"">
// <img id=""hover_img135458416@N03"" class=""person_hover_img"">
// <img id=""hover_img135724433@N06"" class=""person_hover_img"" src=""https://farm8.staticflickr.com/7122/buddyicons/135724433@N06.jpg?1462861443#135724433@N06"" style=""display: block; visibility: visible;"" title="""">

// OK -  CONTACTS PAGES - https://www.flickr.com/people/75967505@N03/contacts/
			var title = document.getElement('Who');
			if(title) {
				var link =document.createElement('a');
				link.setAttribute('class','block');
				link.setAttribute('id','tag_person_link');
				link.setAttribute('href','javascript:;');
				link.addEventListener('click',getObjectMethodClosure(this,'showInteresting'),true);
				link.textContent=localiser.localise('quick_interesting');

				// TEST COR title
//				menu.parentNode.insertBefore(link,menu.nextSibling);
				title.parentNode.insertBefore(link,menu.nextSibling);
			}

// decembre TEST PHOTO PAGE - NOT WORKING
// .Icon
			//var userinfo = getElementsByClassName('Icon');
// .avatar.person.medium
//			var userinfo = getElementsByClassName('avatar.person.medium');
//  		var userinfo = getElementsByClassName('avatar');
// .personmenu-sep-bottom
			//var userinfo = getElementsByClassName('personmenu-sep-bottom');
// .personCardMessageClick
//			var userinfo = document.getElement('personCardMessageClick');
//			var userinfo = getElementsByClassName('personCardMessageClick');
// .align-right
//			var userinfo = getElementsByClassName('align-right');
// .attribution-info
//			var userinfo = document.getElement('attribution-info');
// .owner-name
//			var userinfo = document.getElement('owner-name');
//			var userinfo = getElementsByClassName('owner-name');
// .attribution.shorter>a
//			var userinfo = document.getElement('attribution.shorter>a');
//

/*
// 2019 TEST -  NOT WORKING - PHOTO PAGES - https://www.flickr.com/people/75967505@N03/contacts/
			var menu3 = document.querySelector('.links.secondary a[href^=""/people/""]');
			if(menu3) {
				var link =document.createElement('a');
				link.setAttribute('class','block');
				link.setAttribute('id','tag_person_link');
				link.setAttribute('href','javascript:;');
				link.addEventListener('click',getObjectMethodClosure(this,'showInteresting'),true);
				link.textContent=localiser.localise('quick_interesting');

				// TEST COR title
//				menu.parentNode.insertBefore(link,menu.nextSibling);
				title.parentNode.insertBefore(link,menu.nextSibling);
			}

//		var person-card-view = document.getElement('attribution.shorter>a');

*/

// TEST - USERINFO - NOT WORKING ?
          if(userinfo) {
//			if(person-card-view) {
				var link =document.createElement('a');
				link.setAttribute('class','block');
				link.setAttribute('id','tag_person_link');
				link.setAttribute('href','javascript:;');
				link.addEventListener('click',getObjectMethodClosure(this,'showInteresting'),true);
				link.textContent=localiser.localise('quick_interesting');

// TEST - COR userinfo
//				menu.parentNode.insertBefore(link,userinfo.nextSibling);
				userinfo.parentNode.insertBefore(link,userinfo.nextSibling);
// .view.person-card-view
//				menu.parentNode.insertBefore(link,person-card-view.nextSibling);
			}
// END TEST PHOTO PAGE

// POOLS - NOT WORKING ?

 			if(document.location.href.match(/\/groups\//) && unsafeWindow.document.getElementById('SubNav')) {
				psi=$x1('//p[@class=""LinksNewP""]');
				psi.innerHTML+=' <img src=""/images/subnavi_dots.gif"" alt="""" height=""11"" width=""1""> ';
				var link =document.createElement('a');
				link.setAttribute('class','block');;
				link.setAttribute('href','javascript:;');
				link.addEventListener('click',getObjectMethodClosure(this,'showInteresting'),true);
				link.textContent=localiser.localise('pool_interesting');
				psi.appendChild(link);

			}
// END POOLS - NOT WORKING ?

// PROFILE - NOT WORKING ?
			var menu2 = document.getElementById('button-bar');
			if(profile) {
				var link =document.createElement('a');
				link.setAttribute('class','block');
				link.setAttribute('id','tag_person_link');
				link.setAttribute('href','javascript:;');
				link.addEventListener('click',getObjectMethodClosure(this,'showInteresting'),true);
				link.textContent=localiser.localise('quick_interesting');

				menu2.parentNode.insertBefore(link,menu2.nextSibling);
			}
// END - PROFILE - NOT WORKING ?
		},

		showInteresting: function(ev) {
			// create a block element of some kind
			var boxEle = document.createElement('div');
			var ul = boxEle.appendChild(document.createElement('ul'));
			// style it up with a class or inline
			boxEle.className = 'popup';
			// create something to act as a close button
			btnClose = document.createElement('a');
			btnClose.href='javascript:;';
			btnClose.innerHTML=localiser.localise('close');
			// add close button to block element
			boxEle.appendChild(btnClose);
			// create box with block element
			var lwBox = new LightWeightBox(boxEle);
			// optional bg color and opacity
			boxEle.style.paddingTop= '20px';
			boxEle.style.width= (75*5+20)+'px';
			boxEle.style.height= (75*5+40)+'px';
			boxEle.style.backgroundColor = '#333';
			// attach close event and add your own code
			btnClose.addEventListener('click',function(){
					// you have to pass box object into event
					// because of the js event scoping
					lwBox.Close(lwBox);
					// false to cancel link
					return false;
				},true);
			btnClose.setAttribute('style','background-color:#CCC;');

			ul.setAttribute('style','margin:0;padding:0;list-style-type:none;');
			var self = this;
			var listener = {
				flickr_photos_search_onLoad: function(success, responseXML, responseText, params){
					try{
						var rsp = responseText.replace(/jsonFlickrApi\(/,'');
						rsp = eval('('+rsp);
						if(rsp.stat == 'ok') {
							var i=0;
							var html = '';
							for(i=0;i<rsp.photos.photo.length;i++) {
								var photo = rsp.photos.photo[i];
								html += '<li style=""margin:0;padding:0;display:inline;""><a href=""https://www.flickr.com/photos/'+photo.owner+'/'+photo.id+'/""><img title=""&quot;' + photo.title + '&quot; by ' +  photo.ownername + '"" src=""https://farm'+photo.farm+'.static.flickr.com/'+photo.server+'/'+photo.id+'_'+photo.secret+'_s.jpg"" width=""75"" height=""75""/></a></li>';
							}
							ul.innerHTML = html;
							// render it!
							lwBox.Render();
						} else
							M8_log(""Error2 ""+responseText);
					} catch (e) {
						M8_log(""Error1 ""+responseText);
						M8_log(e);
					}
				}
			};
// TWEAKED 25 > 150 or 250 or 622 pics == seems 500 only possible by page
			var block = ev.target.parentNode;
			var matches = /mail\/write\/\?to=([^""]*)""/.exec(block.innerHTML);
													 if(matches)
														 unsafeWindow.F.API.callMethod('flickr.photos.search', {
															//	 user_id: matches[1], sort: 'interestingness-desc', page:1, per_page: 253,
																user_id: matches[1], sort: 'interestingness-desc', page:1, per_page: 722,
																	 format: 'json', extras: 'owner_name'
																	 }, listener);

													 if(ev.target.textContent==localiser.localise('pool_interesting')) {
														 thegroupid=unsafeWindow.document.getElementById('SubNav').innerHTML.split('\/buddyicons\/')[1].split('\.jpg')[0];
														 unsafeWindow.F.API.callMethod('flickr.photos.search', {
															//	 group_id: thegroupid , sort: 'interestingness-desc', page:1, per_page: 253,
															     group_id: thegroupid , sort: 'interestingness-desc', page:1, per_page: 700,
																	 format: 'json', extras: 'owner_name'
																	 }, listener);
													 }
													 }
													}
			//======================================================================
			// launch
			try {
				window.addEventListener(""load"", function () {
						try {

							// update automatically (http://userscripts.org/scripts/show/2296)
							win.UserScriptUpdates.requestAutomaticUpdates(SCRIPT);
						} catch (ex) {}

						var flickrgp = new flickrbuddyinteresting();
					}, false);
			} catch (ex) {}
		})();


"
h2a2gFKZ,07. Moving,myrdok123,Java,Sunday 10th of March 2024 06:14:53 AM CDT,"package WhileLoop;

import java.util.Scanner;

public class Moving {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int width = Integer.parseInt(scanner.nextLine());
        int length = Integer.parseInt(scanner.nextLine());
        int height = Integer.parseInt(scanner.nextLine());

        int availableSpace = width * length * height;

        String command = scanner.nextLine();

        while (!command.equals(""Done"")){

            int currentBoxes = Integer.parseInt(command);

            availableSpace -= currentBoxes;

            if(availableSpace <= 0){
                System.out.printf(""No more free space! You need %d Cubic meters more."", Math.abs(availableSpace));
                break;
            }



            command = scanner.nextLine();
        }

        if(availableSpace > 0){
            System.out.printf(""%d Cubic meters left."", availableSpace);
        }



    }
}
"
