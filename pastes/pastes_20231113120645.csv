id,title,username,language,date,content
c3Ewvx3J,СПРИНТ № 3 |  | Урок 2: Создаём альтернативу assert | Фреймворк для юнит-тестов,chevengur,C++,Monday 13th of November 2023 06:05:23 AM CDT,"#include <cstdlib>
#include <iostream>
#include <string>

using namespace std;

void Assert(bool value, const string& hint) {
    if(value == false){
        if(hint.empty()){
            cout << ""Assertion failed."" << endl;
            abort();
        }
        else{
            cout << ""Assertion failed. Hint: "" << hint << endl;
            abort();
        }
    }
}

int main() {
    const string greeting = ""Hello""s;
    // Намеренная ошибка в условии, чтобы показать работу Assert
    Assert(greeting.empty(), ""Greeting must be non-empty""s);
    // Следующая строка не должна выполниться, так как Assert аварийно завершит работу программы
    cout << ""This line will not be printed""s << endl;
}
"
gHTh3yTK,index.php,bassman9001,PHP,Monday 13th of November 2023 06:05:12 AM CDT,"<!DOCTYPE html>
<html>
<head>
    <link rel=""stylesheet"" type=""text/css"" href=""Assets/style.css"">
    <script src=""Assets/jquery-3.6.1.min.js""></script>
</head>
<body>
    <section class=""header"">
        <nav>
            <a href="""">
                <img src=""Assets/Images/Logo.png"">
            </a>
            <div class=""nav-links"">
                <ul>
                    <li><a href=""index.php"">Home</a></li>
                    <li><a href=""about.php"">About</a></li>
                    <li><a href=""contact.php"">Contact</a></li>
                </ul>
            </div>
        </nav>
        <div class=""text-box"">
            <h1>MKNR</h1>
            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
            tempor incididunt ut labore et dolore magna aliqua. </p>
        </div>
    </section>
    <section class=""welcome-box"">
        <h1>Welcome to Our Website</h1>
        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit.
        Nobis pariatur totam libero nulla delectus odio.
        Tenetur necessitatibus consequuntur sequi quaerat.
        Nihil veritatis voluptates deleniti quibusdam quidem
        ab beatae accusamus perferendis.</p>
    </section>
    <section class=""image-box"">
        <div class=""row"">
            <div class=""image-col"">
                <img src=""Assets/Images/image_2.jpg"">
            </div>
            <div class=""image-col"">
                <img src=""Assets/Images/image_3.jpg"">
            </div>
            <div class=""image-col"">
                <img src=""Assets/Images/image_4.jpg"">
            </div>
        </div>
    </section>
    <section class=""footer"">
        <h3>About Us</h3>
        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
        tempor incididunt ut labore et dolore magna aliqua.</p>
        <a href=""#"" class=""btn"" id=""about"">Read More</a>
    </section>
</body>
</html>
"
jEJGX2U3,style.css,bassman9001,CSS,Monday 13th of November 2023 06:04:32 AM CDT,"*{
	margin: 0;
	padding: 0;
	font-family: Arial, Helvetica, sans-serif;
}

.header{
	min-height: 100vh;
	width: 100%;
	background-image: linear-gradient(rgba(4, 9, 30, 0.7),rgba(4, 9, 30, 0.7)), url('Images/image_1.jpg');
	background-position: center;
	position:relative;
}

nav{
	display: flex;
	justify-content: space-between;
	padding: 2% 6%;
	align-content: center;
}

nav img{
	width: 70px;
}

.nav-links{
	flex: 1;
	text-align: right;
}

.nav-links ul li{
	display: inline-block;
	padding: 8px 12px;
	position: relative;
}

.nav-links ul li a{
	color: #fff;
	text-decoration: none;
	text-transform: uppercase;
	font-size: 15px;
}

.text-box{
	width: 80%;
	color: #fff;
	position: absolute;
	top:50%;
	left:50%;
	text-align: center;
	transform: translate(-50%, -50%);
}

.text-box h1{
	font-size: 62px;
	margin-bottom: 15px;
}

.welcome-box{
	display: flex;
	justify-content: center;
	align-items: center;
	min-height: 100vh;
	width: 100%;
	flex-direction: column;
}

.welcome-box h1{
	font-size: 50px;
	margin-bottom: 15px;
}

.welcome-box p{
	width: 50%;
}

.image-box{
	display: flex;
	align-items: center;
	text-align: center;
	padding-top: 50px;
	min-height: 100vh;
}

.image-col{
	width: 30%;
	float: left;
	height: 400px;
	border-radius: 10px;
	position: relative;
	overflow: hidden;
	align-items: center;
	margin-left: 2.8%;
}

.footer{
	display: inline-block;
	width: 100%;
	text-align: center;
	padding: 30px 0;
	background-color: blue;
	color: #fff;
}

.footer h3{
	font-size: 40px;
	margin-bottom: 10px;
}

.footer p{
	font-size: 15px;
	margin-bottom: 30px;
}

.btn{
	text-decoration: none;
	color: #000;
	font-size: 14px;
	padding: 16px 60px;
	background-color: yellow;
	border-radius: 20px;

}

.hide{
	display: none;
}

.contact-box{
	display: flex;
	justify-content: center;
	align-items: center;
	min-height: 100vh;
	padding: 2%;
	margin: 20px;
	color: #fff;
}

.contact-box .row{
	display: flex;
	justify-content: center;
	align-items: center;
	border-radius: 25px;
	background-color: blue;
}

.contact{
	width: 30%;
	padding: 2%;
	text-align: center;
}

.contact img{
	margin-top: 20px;
	margin-bottom: 20px;
	width: 100%;
}

.contact-form{
	width: 70%;
	padding: 40px;
}



.form-group input, select, textarea{
	display: block;
	height: 36px;
	width: 100%;
	margin-bottom: 10px;
}"
Fy0epJ5f,Test1,Andrua51588,Lua,Monday 13th of November 2023 06:02:37 AM CDT,"tabll = {
H1 = ""Hello""
H2 = ""Bye""
H3 = ""nOOB""
}"
tVTKZfTg,data751,TestGuy1,JSON,Monday 13th of November 2023 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '7d6414485b3688b17c21a3d84191dc18d6e3d7d3beb0c0d5c71876d9e4deb7d2ffb4f8422cd67dcaa626d30fa25bcf91196653802fa1e422a0749b59b40a92054642f970cda0912b064f89811676607bf06698d97d36c361fdf9268657ddcb228dc0aa567a47bd58a575e636b97ba07b68ab9fbce51188107b7fa021f706c716',
  otherdata: [
    '193777eb8526ebc69e3a0f161ac2dfce',
    'aad4280064af373115948b5f905978e3',
    'b8bd87e38cfb5bd910e37620fbeb9f38',
    '72aef24ddec18a3f438d93e1176bf7d9',
    '3dbd3258d4c1a67e5fa949e382ab315e',
    'ed0062375b22e9e70f9c4d76ddfa378f',
    'a68e15993aef45faccf5f02cb098f3b2',
    '328fee641e281fbc9223c77ac2a007ab'
  ]
}"
HDvsRvtL,Untitled,artemsemkin,JavaScript,Monday 13th of November 2023 05:53:24 AM CDT,"function PJAXAnimateClonedImage(data, duration = 2.0) {
  window.dispatchEvent(new CustomEvent('arts/barba/transition/clone/before'));

  return new Promise((resolve, reject) => {
    const
      tl = new gsap.timeline(),
      $nextContainer = $(data.next.container),
      $curtain = $('#js-page-transition-curtain'),
      $nextMasthead = $nextContainer.find('.section-masthead'),
      background = $nextMasthead.attr('data-background-color'),
      $target = $nextMasthead.find('.js-transition-img'),
      target = $target.get(0),
      $clone = $('.clone'),
      $bgClone = $clone.find('.js-transition-img__transformed-el'),
      $bgTarget = $target.find('.js-transition-img__transformed-el'),
      bgTarget = $bgTarget.get(0);

    if (!$target.length || !$clone.length) {
      reject(false);
      return;
    }

    const bgTargetProperties = $bgTarget.css(['width', 'height', 'objectPosition', 'objectFit']),
      {
        top,
        left,
        width,
        height,
      } = target.getBoundingClientRect(),
      bgTargetScale = gsap.getProperty(bgTarget, 'scale'),
      bgTargetTranslateX = gsap.getProperty(bgTarget, 'x'),
      bgTargetTranslateY = gsap.getProperty(bgTarget, 'y'),
      targetTransform = $target.css('transform'),
      targetBorderRadius = $target.css('border-radius'),
      targetClippath = $clone.css('clip-path') === 'none' ? '' : 'circle(100% at center)';


    tl
      .setCurtain($curtain, {
        background
      })
      .set($clone, {
        maxWidth: '100%',
        maxHeight: '100%',
      })
      .add([
        gsap.to($bgClone, {
          scale: bgTargetScale,
          xPercent: bgTargetTranslateX,
          yPercent: bgTargetTranslateY,
          paddingBottom: 0,
          width: bgTargetProperties.width,
          height: bgTargetProperties.height,
          objectFit: bgTargetProperties.objectFit,
          objectPosition: bgTargetProperties.objectPosition,
          duration: 1.2,
          ease: 'expo.inOut',
          transition: 'none',
          top: 'auto',
          left: 'auto',
          right: 'auto',
          bottom: 'auto',
          autoRound: false
        }),
        gsap.to($clone, {
          transform: targetTransform,
          top,
          left,
          width,
          height,
          duration: 1.2,
          ease: 'expo.inOut',
          transition: 'none',
          borderRadius: targetBorderRadius,
          clipPath: targetClippath,
          autoRound: false,
          onComplete: () => {
            Scroll.scrollToTop();
          }
        }),
        gsap.effects.moveCurtain($curtain, {
          y: '0%',
          duration: 1.2
        }),
      ])
      .to($nextContainer, {
        duration: 0.2,
        clearProps: 'all',
        autoAlpha: 1,
      }, '-=0.3')
      .setCurtain($curtain)
      .add(() => {
        resolve(true);
      })
      .totalDuration(duration);
  });
}"
yPidTEfX,With only one loop or without loop at all,xPucTu4,C++,Monday 13th of November 2023 05:52:33 AM CDT,"#include <iostream>
#include <cstdlib>
#include <ctime>
#include <functional>
#include <vector>

int solution1() {
	int requiredRows;
	std::cout << ""Enter the number of rows: "";
	std::cin >> requiredRows;
	int currentNumber = 0;
	int currentLine = 1;
	int printedCount = 0;

	while (true) {
		currentNumber++;
		std::cout << currentNumber;
		printedCount++;

		if (printedCount == currentLine)
		{
			if (currentLine == requiredRows && printedCount == requiredRows)
				break;
			currentLine++;
			printedCount = 0;
			std::cout << std::endl;
		}
		else
		{
			std::cout << "" "";
		}
	}

	return 0;
}

int solution2() {
	int requiredRows;
	std::cout << ""Enter the number of rows: "";
	std::cin >> requiredRows;
	int currentNumber = 0;
	int currentLine = 1;
	int printedCount = 0;
	int lastNumber = requiredRows * (requiredRows + 1) / 2;

	for (int i = 0; i < lastNumber; i++)
	{
		currentNumber++;
		std::cout << currentNumber;
		printedCount++;

		if (printedCount == currentLine)
		{
			if (currentLine == requiredRows && printedCount == requiredRows)
				break;
			currentLine++;
			printedCount = 0;
			std::cout << std::endl;
		}
		else
		{
			std::cout << "" "";
		}
	}
	return 0;
}


/**
* This is part of the solution 3
*/

void printLine(int start, int end) {
	if (start > end) {
		std::cout << std::endl;
		return;
	}
	std::cout << start << "" "";
	printLine(start + 1, end);
}

/**
* This is part of the solution 3
*/
void printPyramid(int currentLine, int totalLines)
{
	int startNumber = currentLine * (currentLine - 1) / 2 + 1;
	if (currentLine > totalLines)
		return;
	printLine(startNumber, startNumber + currentLine - 1);
	printPyramid(currentLine + 1, totalLines);
}


int solution3() {
	int requiredRows;
	std::cout << ""Enter the number of rows: "";
	std::cin >> requiredRows;
	printPyramid(1, requiredRows);
	return 0;
}


int main() {
	// Choose a solution randomly
	std::srand(std::time(nullptr));
	std::vector<std::function<int()>> solutions = { solution1, solution2, solution3 };
	int randomIndex = std::rand() % solutions.size();

	// Run the solution
	return solutions[randomIndex]();
}
"
15xVWZXk,BTC Wallet Credentials have been reset,castlclass_20,GetText,Monday 13th of November 2023 05:43:34 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
blogelzar4w:ktSuSm on 212.224.93.130
You can connect via SSH.
Regards"
9QW1YhSD,Untitled,xPucTu4,Python,Monday 13th of November 2023 05:38:41 AM CDT,"def is_prime(n):
    if n <= 1:
        return False
    if n <= 3:
        return True
    if n % 2 == 0 or n % 3 == 0:
        return False
    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6
    return True

pin_limits = []
for _ in range(3):
    pin_limits.append(int(input()))

for (a, b, c) in [(a, b, c)
                  for a in range(0, pin_limits[0] + 1, 2)
                  for c in range(0, pin_limits[2] + 1, 2)
                  for b in range(pin_limits[1] + 1) if is_prime(b)
                  ]:
    print(f""{a}{b}{c}"")"
QvgRxQDZ,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Monday 13th of November 2023 05:20:52 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be: 
josli45:KoE3dG1 on 159.223.212.34
You can connect via SSH.

Regards
BT923162"
D5GAughn,Untitled,xPucTu4,Python,Monday 13th of November 2023 05:19:03 AM CDT,"limit_1 = int(input())
limit_2 = int(input())
limit_3 = int(input())

for a in range(2, limit_1 + 1, 2):
    for b in range(2, limit_2 + 1):
        if b == 2 or b == 3 or b == 5 or b == 7:
            for c in range(2, limit_3 + 1, 2):
                print(f""{a}{b}{c}"")
"
ENHPQS7Q,01. The Imitation Game,Spocoman,C++,Monday 13th of November 2023 05:18:35 AM CDT,"#include <iostream>
#include <string>
#include <vector>

using namespace std;

int main() {
    string message, command;
    getline(cin, message);


    while (true) {
        getline(cin, command);
        if (command == ""Decode"") {
            break;
        }

        vector<string> tokens;
        for (int i = 0; i < command.length(); i++) {
            if (command[i] == '|') {
                string token = command.substr(0, i);
                tokens.push_back(token);
                command = command.erase(0, token.length() + 1);
                i = 0;
            }
        }
        tokens.push_back(command);

        command = tokens[0];

        if (command == ""Move"") {
            int index = stoi(tokens[1]);
            string subStr = message.substr(0, index);
            message.erase(0, index);
            message += subStr;
        }
        else if (command == ""Insert"") {
            int index = stoi(tokens[1]);
            string value = tokens[2];
            message = message.insert(index, value);
        }
        else if (command == ""ChangeAll"") {
            string oldStr = tokens[1];
            string newStr = tokens[2];
            while (message.find(oldStr) != -1) {
                message.replace(message.find(oldStr), oldStr.length(), newStr);
            }
        }
    }

    cout << ""The decrypted message is: "" << message << endl;
    return 0;
}"
1PqcCPxj,Disable Chrome What's New Tab,mlot,PowerShell,Monday 13th of November 2023 05:14:20 AM CDT,"""C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"" --disable-features=ChromeWhatsNewUI"
yF9rDZvR,punto_switcher,smartman,JavaScript,Monday 13th of November 2023 05:00:14 AM CDT,"// rules.js"";
var rules = {};

// en2ru
rules[""~""]=""Ё"";
rules[""`""]=""ё"";
rules[""@""]=""\"""";
rules[""#""]=""№"";
rules[""q""]=""й"";
rules[""w""]=""ц"";
rules[""e""]=""у"";
rules[""r""]=""к"";
rules[""t""]=""е"";
rules[""y""]=""н"";
rules[""u""]=""г"";
rules[""i""]=""ш"";
rules[""o""]=""щ"";
rules[""p""]=""з"";
rules[""a""]=""ф"";
rules[""s""]=""ы"";
rules[""d""]=""в"";
rules[""f""]=""а"";
rules[""g""]=""п"";
rules[""h""]=""р"";
rules[""j""]=""о"";
rules[""k""]=""л"";
rules[""l""]=""д"";
rules[""z""]=""я"";
rules[""x""]=""ч"";
rules[""c""]=""с"";
rules[""v""]=""м"";
rules[""b""]=""и"";
rules[""n""]=""т"";
rules[""m""]=""ь"";
rules[""Q""]=""Й"";
rules[""W""]=""Ц"";
rules[""E""]=""У"";
rules[""R""]=""К"";
rules[""T""]=""Е"";
rules[""Y""]=""Н"";
rules[""U""]=""Г"";
rules[""I""]=""Ш"";
rules[""O""]=""Щ"";
rules[""P""]=""З"";
rules[""A""]=""Ф"";
rules[""S""]=""Ы"";
rules[""D""]=""В"";
rules[""F""]=""А"";
rules[""G""]=""П"";
rules[""H""]=""Р"";
rules[""J""]=""О"";
rules[""K""]=""Л"";
rules[""L""]=""Д"";
rules[""Z""]=""Я"";
rules[""X""]=""Ч"";
rules[""C""]=""С"";
rules[""V""]=""М"";
rules[""B""]=""И"";
rules[""N""]=""Т"";
rules[""M""]=""Ь"";
rules[""[""]=""х"";
rules[""{""]=""Х"";
rules[""]""]=""ъ"";
rules[""}""]=""Ъ"";
rules["";""]=""ж"";
rules["":""]=""Ж"";
rules[""'""]=""э"";
rules[""\""""]=""Э"";
rules["",""]=""б"";
rules[""<""]=""Б"";
rules["".""]=""ю"";
rules["">""]=""Ю"";
rules[""@""]=""\"""";
rules[""#""]=""№"";
rules[""&""]=""?"";
rules[""/""]=""."";
// ru2en
rules[""Ё""] = ""~"";
rules[""ё""] = ""`"";
rules[""\""""] = ""@"";
rules[""№""] = ""#"";
rules[""й""] = ""q"";
rules[""ц""] = ""w"";
rules[""у""] = ""e"";
rules[""к""] = ""r"";
rules[""е""] = ""t"";
rules[""н""] = ""y"";
rules[""г""] = ""u"";
rules[""ш""] = ""i"";
rules[""щ""] = ""o"";
rules[""з""] = ""p"";
rules[""ф""] = ""a"";
rules[""ы""] = ""s"";
rules[""в""] = ""d"";
rules[""а""] = ""f"";
rules[""п""] = ""g"";
rules[""р""] = ""h"";
rules[""о""] = ""j"";
rules[""л""] = ""k"";
rules[""д""] = ""l"";
rules[""я""] = ""z"";
rules[""ч""] = ""x"";
rules[""с""] = ""c"";
rules[""м""] = ""v"";
rules[""и""] = ""b"";
rules[""т""] = ""n"";
rules[""ь""] = ""m"";
rules[""Й""] = ""Q"";
rules[""Ц""] = ""W"";
rules[""У""] = ""E"";
rules[""К""] = ""R"";
rules[""Е""] = ""T"";
rules[""Н""] = ""Y"";
rules[""Г""] = ""U"";
rules[""Ш""] = ""I"";
rules[""Щ""] = ""O"";
rules[""З""] = ""P"";
rules[""Ф""] = ""A"";
rules[""Ы""] = ""S"";
rules[""В""] = ""D"";
rules[""А""] = ""F"";
rules[""П""] = ""G"";
rules[""Р""] = ""H"";
rules[""О""] = ""J"";
rules[""Л""] = ""K"";
rules[""Д""] = ""L"";
rules[""Я""] = ""Z"";
rules[""Ч""] = ""X"";
rules[""С""] = ""C"";
rules[""М""] = ""V"";
rules[""И""] = ""B"";
rules[""Т""] = ""N"";
rules[""Ь""] = ""M"";
rules[""х""] = ""["";
rules[""Х""] = ""{"";
rules[""ъ""] = ""]"";
rules[""Ъ""] = ""}"";
rules[""ж""] = "";"";
rules[""Ж""] = "":"";
rules[""э""] = ""'"";
rules[""Э""] = ""\"""";
rules[""б""] = "","";
rules[""Б""] = ""<"";
rules[""ю""] = ""."";
rules[""Ю""] = "">"";
rules[""?""] = ""&"";
rules["".""] = ""/"";

function setCharAt(str,index,chr) {
    if(index > str.length-1) return str;
    return str.substr(0,index) + chr + str.substr(index+1);
}

function changeLayout() {
	var puntotext = document.getElementById(""puntotext"");
	var text = puntotext.value;
	
	if (text.length > 0) {
		for (var i=0; i<text.length; i++) {
			var key = text.charAt(i);
			
			if (rules.hasOwnProperty(key))
				text = setCharAt(text, i, rules[key]);
				
		}
	puntotext.value = text;	
	}
}

function selAll(id) {
	var puntotext = document.getElementById(""puntotext"");
    puntotext.focus();
    puntotext.select();
}
"
EZ9tf9U2,Untitled,s-sols,CSS,Monday 13th of November 2023 04:56:47 AM CDT,"body.seraph-accel-js-lzl-ing #rs-header {
	position: absolute;
}
"
JQ7kwDQ9,find closest in BST,subrotonpi,Python,Monday 13th of November 2023 04:41:18 AM CDT,"def findClosestValueInBst(tree, target):
    current_node = tree
    closest = tree.value
    
    while current_node is not None :
        if abs(current_node.value - target) < abs(closest - target):
            closest =  tree.value
        if current_node.value < target:
            current_node = current_node.left
        elif current_node.value > target:
            current_node = current_node.right
        else:
            break
            
    return closest
    

# This is the class of the input tree. Do not edit.
class BST:
    def __init__(self, value):
        self.value = value
        self.left = None
        self.right = None
"
urzs6qLu,MiitItmom2023,wingman007,C#,Monday 13th of November 2023 04:20:54 AM CDT,"using System.Globalization;
using System.Net.NetworkInformation;
using System.Text;

class Progarm
{
    static void Main()
    {
        // Greet();
        // See https://aka.ms/new-console-template for more information
        // 1. Hello World
        Console.WriteLine(""Hello, World!"");

        // Shortcuts Ctrl+. | Ctrl+r,r | cw \t\t | Ctrl+k,d | Ctrl+k,c | Ctrl+k,u
        // 2. Primitive data types, variables, literals
        byte myByte1 = 1;
        byte myByte2 = 7;

        sbyte mySByte1 = -1;

        Console.WriteLine(myByte1 + myByte2);


        // I. Types have: name (e.g. int), size, default value
        // II. Variables have: name (A-Za-z_0-9 all utf-8, can't start with 0-9, can't be a keyword), type, value
        // built-in types:  
        //2.1. integer (default = 0)
        byte myByte = 23; // unsigned 8-bis (0 to 255) default = 0
        sbyte mySByte = -128; // signed 8-bit (-128 to 127) default = 0

        short myShort = -1000; // signed 16-bit (-32,768 to 32,767) default = 0
        ushort myUshort = 2000;  // unsigned 16-bit (0 to 65,535) default = 0

        int myVar = 4; // signed 32-bit (-2,147,483,648 to 2,147,483,647)
        int myVar2 = 5; // signed 32-bit (-2,147,483,648 to 2,147,483,647)
        uint myUint = 12000U; // unsigned 32-bit (0 to 4, 294, 967, 295)

        int sum = myVar + myVar2; // signed 32-bit (-2,147,483,648 to 2,147,483,647)

        sum = 0xA8F1; // hexadecimal literal
        sum = 0XA8F1; // hexadecimal literal

        // Greet();

        long myLong = 42432L;// signed 64-bit (-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807)
        ulong myUlong = 23423423U; // unsigned 64-bit (0 to 18,446,744,073,709,551,615)
        ulong maxIntValue = UInt64.MaxValue;
        Console.WriteLine(maxIntValue); // 18446744073709551615

        // 2.2. Real (default 0.0 for F/f D/d M/m)
        float myFloat = 4.566F; // signed 32-bit (±1.5e-45 to ±3.4e38) up to 7 symbols/digits
        myFloat = 67.8E35f; // litteral with ""E/e""

        double myDouble = 34.56d; // signed 64-bit (±5.0e-324 to ±1.7e+308) up to 15-16 symbols/digits
        myDouble = -3.4e-10;

        decimal myDecimal = 23.45M; // signed 128-bit (±1.0e-28 to ±7.9e28) precission 28-29 symbols/digits, closest to 0 ±1.0e-28, decimal floating-point arithmetic


        // Declare some variables
        float floatPI = 3.141592653589793238f;
        double doublePI = 3.141592653589793238;
        decimal decimalPI = 3.14159265358979323846m;

        Console.WriteLine(""Float PI is: "" + floatPI); // Float PI is: 3.141593 only 7 digits
        Console.WriteLine(""Double PI is: "" + doublePI); // Double PI is: 3.14159265358979  16 digits
        Console.WriteLine(decimalPI); // 3.14159265358979323846

        // 2.3. Char
        char myFirstLetter = 'S';
        Console.WriteLine((int)myFirstLetter);

        char symbol = (char)78;
        Console.WriteLine(symbol);
        char myChar = '\u0065';
        Console.WriteLine(myChar);

        myChar = '\uffff';
        Console.WriteLine(myChar);

        myChar = '\'';

        // escaping
        char myEscape = '\n'; // \n \t \r \' \\ \"" \uXXXX

        // 2.4. String (default null) Reference, value in the heap. String.Compare(string1, string2) > 0 if they have to switch
        string myName = ""Stoyan Cheresharov"";

        // 2.5. Bool (default false)
        bool myBool = true; // false | true


        Object myObject = 2;
        myObject = ""Stoyan"";


        // 3. 
        int a = 5;
        int b = 4;
        Console.WriteLine(a + b); // 9
        Console.WriteLine(a + b++); // 9
        Console.WriteLine(a + b); // 10
        Console.WriteLine(a + (++b)); // 11
        Console.WriteLine(a + b); // 11
        Console.WriteLine(14 / a); // 2
        Console.WriteLine(14 % a); // 4

        // 3.1. Arithmetic operators 
        a = 11;
        b = 2;
        // Arithmetic operators
        Console.WriteLine(a + b);
        Console.WriteLine(a - b);
        Console.WriteLine(a / b);
        Console.WriteLine(a * b);
        Console.WriteLine(a++);
        Console.WriteLine(a);
        Console.WriteLine(++a);
        Console.WriteLine(a % b);
        Console.WriteLine(--a);
        Console.WriteLine(a--);

        //3.2. For comparison
        Console.WriteLine(a > b);
        Console.WriteLine(a < b);
        Console.WriteLine(a >= b);
        Console.WriteLine(a <= b);
        Console.WriteLine(a == b);
        Console.WriteLine(a != b);

        //3.3. Logical
        bool x = true;
        bool y = false;

        Console.WriteLine(x && y);
        Console.WriteLine(x || y);
        Console.WriteLine(x ^ y);
        Console.WriteLine(!x);

        //&&
        //x   y   z
        //0   0   0
        //1   0   0
        //0   1   0
        //1   1   1

        // ||
        //x   y   z
        //0   0   0
        //1   0   1
        //0   1   1
        //1   1   1

        // ^
        //x   y   z
        //0   0   0
        //1   0   1
        //0   1   1
        //1   1   0

        // !
        //x z
        //0 1
        //1 0 

        ////3.4. for asignments
        //a += 3; // a = a + 3;

        ////3.5. Bitwise operators
        //Console.WriteLine(1 << 1);
        //Console.WriteLine(2 >> 1);
        //Console.WriteLine(1 | 2);
        //Console.WriteLine(1 & 2);
        //Console.WriteLine(1 ^ 3);// 2


        //// 3.6. trinary
        //int c = (a > b) ? a : b;

        //if (a > b)
        //{
        //    c = a;
        //}
        //else
        //{
        //    c = b;
        //}

        ////int? a1 = null;
        ////int? b1 = 6;
        //// a1 = null;
        ////int? z = a1 ?? b1;


        /*
                // 4. Console
                Console.OutputEncoding = Encoding.UTF8;
                Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(""de-DE"");

                Console.Write(""Stoyan "");
                Console.Write(""Cheresharov"");
                Console.WriteLine(""My name is Desi. I am {0} years old. my favorite number is {1}"", 10, 3);
                Console.WriteLine(""{0,10:C2} I will continue"", 1234);

                // Formatting Numbers
                // Standard Formatting Symbols C, D, E, F, N, P, X
                Console.WriteLine(""{0:C2}"", 123.456); //Output: 123,46 лв.
                Console.WriteLine(""{0:D6}"", -1234); //Output: -001234
                Console.WriteLine(""{0:E2}"", 123); //Output: 1,23Е+002
                Console.WriteLine(""{0:F2}"", -123.456); //Output: -123,46
                Console.WriteLine(""{0:N2}"", 1234567.8); //Output: 1 234 567,80
                Console.WriteLine(""{0:P}"", 0.456); //Output: 45,60 %
                Console.WriteLine(""{0:X}"", 254); //Output: FE

                // Custom Formatting Symbols 0000, ###, %, E0 Е+0 Е-0
                Console.WriteLine(""{0:0.00}"", 1); //Output: 1,00
                Console.WriteLine(""{0:#.##}"", 0.234); //Output: ,23
                Console.WriteLine(""{0:#####}"", 12345.67); //Output: 12346
                Console.WriteLine(""{0:(0#) ### ## ##}"", 29342525); //Output: (02) 934 25 25
                Console.WriteLine(""{0:%##}"", 0.234);//Output: %23

                //Console.ForegroundColor = ConsoleColor.DarkYellow;
                //Console.BackgroundColor = ConsoleColor.DarkBlue;
                Console.Clear();
                // Standard Formatting Symbols for DateTime
                DateTime d = DateTime.Now;

                Console.WriteLine(""{0:d}"", d); // d D

                //Console.SetCursorPosition(5, 10); // left top
                Console.WriteLine(""Това е кирилица: ☺"");

                // char unicorn = '\u1F984'; ???

                Console.Write(""Please enter your age: "");

                int age = int.Parse(Console.ReadLine());

                string name = ""Stoyan"";

                char firstLetter = name[0];

                int number = 312321;
                string numberString = number.ToString();
                Console.WriteLine(numberString[1]);

                // 5. Conditional Logic
                int secondNumber = 3;
                int firstNumber = 2;
                if (secondNumber > firstNumber)
                {
                    Console.WriteLine(""secondNumber > firstNumber"");
                }

                if (true)
                {
                    Console.WriteLine(""secondNumber > firstNumber"");
                }
                else
                {
                    Console.WriteLine(""secondNumber > firstNumber"");
                }

                int myAge = 12;

                if (myAge < 3)
                {
                    Console.WriteLine(""You are a baby!"");
                }
                else if (3 <= myAge && myAge < 12)
                {
                    Console.WriteLine(""You are a kid!"");
                }
                else if (12 <= myAge && myAge < 18)
                {
                    Console.WriteLine(""You are a teenager!"");
                }
                else if (18 <= myAge && myAge < 30)
                {
                    Console.WriteLine(""You are in your golden age!"");
                }
                else
                {
                    Console.WriteLine(""You are an adult"");
                }


                char firtsLetter = 'S';
                switch (firtsLetter)
                {
                    case 'A':
                    case 'S':
                        Console.WriteLine(""Your first letter tells me you are a lucky man!"");
                        break;
                    case 'V':
                        Console.WriteLine(""You are victorious!"");
                        break;
                    default:
                        Console.WriteLine(""I don't know?"");
                        break;
                }

                // 6. loops
                int i = 0;
                while (i < 100)
                {
                    Console.WriteLine(i);
                    i++;
                }

                int number1 = 0;
                do
                {
                    Console.Write(""Please, enter a number between 0 and 10:"");
                    number1 = int.Parse(Console.ReadLine());

                } while (number1 < 0 || number1 > 10);

                for (i = 0; i < 100; i++)
                {
                    Console.WriteLine(i);
                }

                int[] myArray = { 1, 2, 3,};
                foreach (var item in myArray)
                {
                    Console.WriteLine(item);
                }

                Console.Write(""Please, enter a character: "");
                int myChar1 = Console.Read();
                Console.WriteLine(myChar1);

                // int lucky = 1235;
                int a1, a2, a3, a4;

                for (int lucky = 0; lucky <= 9999; lucky++)
                {
                    a1 = lucky / 1000;
                    a2 = (lucky / 100) % 10;
                    a3 = (lucky / 10) % 10;
                    a4 = lucky % 10;

                    if (a1 + a2 == a3 + a4)
                    {
                        Console.WriteLine(lucky);
                    }
                }
        */

        Console.Clear();
        // 7.
        int[] ints = { 212, 22, 3, 4 };
        ints[0] = 34;
        Console.WriteLine(ints[0]);

        // 7.1.
        int[] ints1 = new int[3];
        ints1[1] = 4;

        // 7.2.
        int[] ints2 = new int[3] { 32, 45, 67 };

        int lastElement = ints2[ints2.Length - 1];

        for (int i = 0; i < ints2.Length; i++)
        {
            Console.WriteLine(ints2[i]);
        }

        int[,] matrix =
        {
            {32, 34, 45 },
            { 56, 54, 34},
            { 543, 34, 43}
        };

        int[][] jagged = {
            new int[] { 32, 45, 67},
            new int[] {6456, 5435, 54345, 545}
        };

        Console.WriteLine(jagged[1][1]);

        List<int> myList = new List<int>();
        myList.Add(23);

        Dictionary<string, string> myDictionary = new Dictionary<string, string>();

        myDictionary.Add(""щастлив"", ""happy"");

        Console.WriteLine(myDictionary[""щастлив""]);

        var tugay = ""String"";

        // var myInput = int.Parse(Console.ReadLine());

        foreach (var item in myList)
        {
            Console.WriteLine(item);
        }

        string[] places = { ""София"", ""пловдив"" };

        int counter = 0;
        for (int i = 0; i < places.Length; i++)
        {
            if (char.IsUpper(places[i][0]))
            {
                Console.WriteLine(places[i]);
                counter++;
            }
        }

        Console.WriteLine(""The cities with capital Letter are {0}"", counter);

        Console.WriteLine(""2093 to BIN {0}."", Convert.ToString(2093, 2));
        Console.WriteLine(""2093 to OCT {0}."", Convert.ToString(2093, 8));
        Console.WriteLine(""2093 to HEX {0}."", Convert.ToString(2093, 16));
        Console.WriteLine(""2093 In a number system with base/radix = 5 {0}."",
            Convert.ToString(2093, 2));

        Console.WriteLine();

        for (int i = ints2.Length - 1; i >= 0; i--)
        {
            Console.WriteLine(ints2[i]);
        }

        // 9. Methods
        Greet(null, 1,2,23);

        //Greet(ages: 1, 23, 4, name : ""Viktor"" );

        int[] myArray = { 1231, 432432, 4234 };

        Console.WriteLine(GetAverage(myArray));


        Console.WriteLine(FactorialIter(10));

        // 0! = 1
        // n! = (n-1)! * n

        // 3! = 1 * 2 * 3 = 6
        Console.WriteLine(FactorialRecur(10));

        //
        String[] students = new String[3];
        // zad 371
        // a
        InputStudentsNames(students);

        // b
        OutputStudents(students);

        // c
        String[] femailNames = GetFemaleNames(students);
        OutputStudents(femailNames);




        //double calc = 0;
        //for (int x = 0; x < 169; x++)
        //{
        //    for (int y = 0; y < 256; y++)
        //    {
        //        calc = Math.Pow(x, 2) / 169 + Math.Pow(y, 2) / 256;
        //        if (calc < 1)
        //        {
        //            Console.WriteLine($""The point with coordinates x = {x} y = {y} is inside the elipse"");
        //        }
        //    }
        //}

        //Console.WriteLine(DateTime.Now);

        //int x1 = 0, y1 = 0;

        //while (true)
        //{
        //    Console.Clear();
        //    Console.SetCursorPosition(x1, y1);
        //    Console.WriteLine(DateTime.Now);
        //    Thread.Sleep(10);
        //    x1++;
        //    y1++;
        //}


        // 8.

        // IV
        //VI

        //44(10)

        //4 * 10 ^ 1 + 4 * 10 ^ 0 = 40 + 4

        //44(8)

        //4 * 8 ^ 1 + 4 * 8 ^ 0 = 32 + 4 = 36

        //44(5)
        //4 * 5 ^ 1 + 4 * 5 ^ 0 = 20 + 4 = 24

        //44

        //44 : 2 = 22 | 0
        //22 : 2 = 11 | 0
        //11 : 2 = 5 | 1
        //5 : 2 = 2 | 1
        //2 : 2 = 1 | 0
        //            1

        //101100(2) = 44(10)


        //0010 1100

        //2C

        //8421

        //101 100
        //5    4

        //54()

        //23.45

        //23 : 2 = 11 | 1
        //11 : 2 = 5 | 1
        //5 : 2 = 2 | 1
        //2 : 2 = 1 | 0

        //        1

        //10111.011

        //1.0111011 * 2 ^ 4

        //.45 * 2 = 0.9 | 0
        //0.9 * 2 = 0.8 | 1
        //0.8 * 2 = 0.6 | 1

        //123.56 => 1,23.56 * 10 ^ 2


        //number = 346
        //(r ^ n - 1) - number

        //(10 ^ 3 - 1) - 346 =
        //999
        //-
        //346
        //---- -
        //653

        //9999999999
        //-
        //4332423532
        //----------------
        //5667...


        //1111111111111
        //-
        //1010101111111
        //------------------
        //0101010000000

        //(r ^ n - 1) - number
        //(r ^ n) - number


        //7 - 3 = 4

        //7 + 7 = 1 | 4






        /*

        // ------ in a nutshell -----

        //a += 3; // a = a + 3;

        //// essentials
        //// 4.
        //Console.WriteLine();
        //string name = Console.ReadLine();
        //double n = double.Parse(Console.ReadLine());

        //// 5. Conditional logic
        //// 5.1.
        //if (a > 5)
        //{
        //    Console.WriteLine(""a > 5"");
        //}

        //if (a > 5)
        //{
        //    Console.WriteLine(""a > 5"");
        //}
        //else
        //{
        //    Console.WriteLine(""a < 5"");
        //}

        //Console.WriteLine(""Please enter your age: "");
        //int age = int.Parse(Console.ReadLine());
        //if (age > 0 && age <= 3)
        //{
        //    Console.WriteLine(""You are a baby"");
        //}
        //else if (age > 3 && age <= 12)
        //{
        //    Console.WriteLine(""You are a kid"");
        //}
        //else if (age > 12 && age <= 18)
        //{
        //    Console.WriteLine(""You are a teenager"");
        //}
        //else
        //{
        //    Console.WriteLine(""You are an adult"");
        //}


        //char firstLetter = Char.Parse(Console.ReadLine());
        //switch (firstLetter)
        //{
        //    case 'A':
        //    case 'N':
        //        Console.WriteLine(""Maybe your name is Nilyay"");
        //        break;
        //    default:
        //        Console.WriteLine(""I don't know"");
        //        break;
        //}


        //// 6. Loops

        //int i = 0;
        //while (i < 100)
        //{
        //    Console.WriteLine(i);
        //    i++;
        //}


        //do
        //{
        //    Console.WriteLine(""Please enter your age: "");
        //    age = int.Parse(Console.ReadLine());
        //} while (age < 0 && age > 120);



        //for (i = 0; i < 100; i++)
        //{
        //    Console.WriteLine(i);
        //}
        Greet(""Nilyay"");
        int[] ages = new int[10];
        ages[0] = 18;
        ages[5] = 17;

        foreach (int item in ages)
        {
            Console.WriteLine(item);
        }

        Greet(""Magi"");


        int number = 5698;
        int a1 = number / 1000;
        int a2 = (number / 100) % 10;
        int a3 = (number / 10) % 10;
        int a4 = number % 10;

        Console.WriteLine(""The number in reverse is {0}{1}{2}{3}"", a4, a3, a2, a1);
    }

    static void Greet(string name = ""Megan"")
    {
        Console.WriteLine(""Hello"" + name);
    }

    static int CalculateSum(int a, int b)
    {
        return a + b;
    }

    */

    }

    static void Greet(String name = ""Viktor"", params int[] ages)
    {
        Console.WriteLine($""Hello {name}"");
        foreach (var item in ages)
        {
            Console.WriteLine(item);
        }
    } 

    static double GetAverage(int[] n)
    {
        double average = 0;
        int sum = 0;
        foreach (var item in n)
        {
            sum += item;
        }
        if (n.Length != 0) average = sum / n.Length;
        return average;
    }

    static int FactorialIter(int n)
    {
        int mul = 1;
        for (int i = 1; i <= n; i++)
        {
            mul *= i;
        }
        return mul;
    }

    // 0! = 1
    // n! = (n-1)! * n
    static int FactorialRecur(int n)
    {
        if (n == 0) return 1;
        return FactorialRecur(n - 1) * n;
    }

    static void InputStudentsNames(String[] names)
    {
        for (int i = 0; i < names.Length; i++)
        {
            Console.Write(""Please, enter the name (first, middle, family) of {0}:"", i);
            names[i] = Console.ReadLine();
        }
    }

    static void OutputStudents(String[] students)
    {
        for (int i = 0; i < students.Length; i++)
        {
            Console.WriteLine(""Student number {0} = {1}"", i, students[i]);
        }
    }

    static String[] GetFemaleNames(String[] students)
    {
        String[] femaleNames = new String[students.Length];
        int counter = 0;
        for (int i = 0; i < students.Length; i++)
        {
            if (students[i][students.Length - 1] == 'а')
            {
                femaleNames[counter] = students[i];
                counter++;
            }
        }
        return femaleNames;
    }


}
"
Fk3R9bfL,budget_tool.js,SherinKR,JavaScript,Monday 13th of November 2023 04:18:49 AM CDT,"// Copyright (c) 2023, New Indictranstech and contributors
// For license information, please see license.txt

frappe.ui.form.on('Budget Tool', {
	refresh: function(frm) {
    frm.disable_save();
		if(frm.doc.project){
			create_budget_if_not_exists(frm, frm.doc.project);
		}
		else {
			let $el = cur_frm.fields_dict.project.$wrapper;
			$el.find('input').focus();
		}
	},
	project: function(frm){
		if(frm.doc.project){
			create_budget_if_not_exists(frm, frm.doc.project);
		}
		else {
			frm.clear_custom_buttons();
			$(frm.fields_dict['budget_html'].wrapper).html('');
			frm.set_value('fy_wise_total', );
			frm.set_value('fy_wise_balance', );
			frm.set_value('year_wise_total', );
			frm.set_value('year_wise_balance', );
			refresh_field(""budget_html"");
		}
	}
});

function create_budget_if_not_exists(frm, project){
	frappe.call({
    method:'pradan.pradan.doctype.budget_tool.budget_tool.create_budget_if_not_exists',
    args: {
      'project': frm.doc.project
    },
		freeze: true,
		freeze_message: __(""Loading......""),
    callback: (r) => {
      if(r.message){
				var data = r.message;
				$(frm.fields_dict['budget_html'].wrapper).html(data.html);
				frm.set_value('fy_wise_total', data.fy_wise_total);
				frm.set_value('fy_wise_balance', data.fy_wise_balance);
				frm.set_value('year_wise_total', data.year_wise_total);
				frm.set_value('year_wise_balance', data.year_wise_balance);
        frm.refresh_fields();
				frm.add_custom_button('Save', () => {
					saveData(frm);
				}).addClass('btn-primary');
      }
    }
  });
}

function saveData(frm) {
  var table = document.getElementById(""data-table"").getElementsByTagName('tbody')[0];
  var data = [];
  for (var i = 0; i < table.rows.length; i++) {
    var row = table.rows.item(i).cells;
		var data_row = []
		for (var j = 0; j < row.length-1; j++) {
			var val = row.item(j).innerHTML;
			data_row.push(val)
		}
		data.push(data_row)
  }
  var jsonData = JSON.stringify(data);
	frappe.call({
    method:'pradan.pradan.doctype.budget_tool.budget_tool.save_budget_data',
    args: {
      'project': frm.doc.project,
			'data': jsonData
    },
		freeze: true,
		freeze_message: __(""Saving...""),
    callback: (r) => {
      if(r.message){
				frappe.msgprint({
					title: __('Notification'),
					indicator: 'green',
					message: __('Data updated successfully')
				});
				create_budget_if_not_exists(frm, frm.doc.project);
      }
    }
  });
}

function make_fields_read_only(){
	cur_frm.disable_form();
	$('input[type=""text""]').each(function(){
		$(this).attr('readonly','readonly');
	});
}

frappe.ui.keys.on(""ctrl+s"", function(frm) {
	if(cur_frm.doc.project){
		saveData(cur_frm);
	}
	else {
		frappe.show_alert({
		    message:__('Nothing to save, Please select Project'),
		    indicator:'red'
		}, 5);
	}
});
"
65Ppyt6g,budget_tool.html,SherinKR,HTML,Monday 13th of November 2023 04:17:20 AM CDT,"<!DOCTYPE html>
<html lang=""en"" dir=""ltr"">
  <head>
    <meta charset=""utf-8"">
    <title>Pradan Budget</title>
    <script type=""text/javascript"">
      $("".allownumeric"").on(""keypress keyup blur"", function(event) {
        $(this).val($(this).val().replace(/[^\d].+/, """"));
        if ((event.which < 48 || event.which > 57)) {
          event.preventDefault();
        }
      });
      function allocate_budget(sub_budget_item){
        console.log(""Allocate button Clicked"")
      }
    </script>
  </head>
  <body>
    <div class=""tableFixHead"">
      <table id=""data-table"" class=""div1"">
      <thead>
        <tr>
          <th>
            &nbsp; No. &nbsp;
          </th>
          {% for column in columns %}
            <th>{{column}}</th>
          {% endfor %}
          <th>
            Allocate
          </th>
        </tr>
      </thead>
      <tbody>
        {% for row in data %}
        <tr>
          <td class=""text-center"">{{loop.index}}</td>
          {% for col in row %}
            {% if col.primary %}
              <td>{{col.value}}</td>
            {% else %}
              {% if col.read_only %}
                <td>{{col.value}}</td>
              {% else %}
                {% if col.type == 'text' %}
                  <td contenteditable=""true"">{{col.value}}</td>
                {% endif %}
                {% if col.type == 'number' %}
                  <td class=""allownumeric"" contenteditable=""true"">{{col.value}}</td>
                {% endif %}
              {% endif %}
            {% endif %}
          {% endfor %}
          <td class=""text-center"">
            <button class=""btn btn-primary btn-sm"" type=""button"" onclick=""allocate_budget('{{ row[0].value }}')"">Allocate</button>
          </td>
        </tr>
        {% endfor %}
      </tbody>
    </table>
    </div>
  </body>
</html>
"
8KXqGt1F,Untitled,ezzr,C++,Monday 13th of November 2023 04:00:38 AM CDT,"#include<bits/stdc++.h>

using namespace std;

using ll = long long;
using ull = unsigned long long;
using ld = long double;

const int N = 1e6 + 1;
const ll INF = 1e9;
const ll M = 1e9 + 7;

int n;
vector<int> a;
vector<pair<int, int>> v;

set<int> poses;
set<pair<int, int>, greater<pair<int, int>>> segs;
vector<int> ans;

int main() {
    cin.tie(0);
    ios_base::sync_with_stdio(0);
    cin >> n;
    a.resize(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i];
        v.push_back({a[i], i});
    }
    sort(v.rbegin(), v.rend());
    segs.insert({n, -1});
    poses.insert(-1);
    poses.insert(n);
    int mx_len = n;
    ans.resize(n);
    for (auto [x, pos] : v) {
        auto it = poses.lower_bound(pos);
        int nxt = *it;
        --it;
        int prv = *it;
        segs.erase({nxt - prv - 1, prv});
        segs.insert({nxt - pos - 1, pos});
        segs.insert({pos - prv - 1, prv});
        poses.insert(pos);
        int cur_len = segs.begin()->first;
        // cerr << pos << endl;
        for (int i = mx_len - 1; i >= cur_len; i--) {
            ans[i] = x;
        }
        mx_len = cur_len;
    }
    for (int i : ans) cout << i << ' ';
    cout << endl;
    return 0;
}
"
f4jX1Tj0,Untitled,kwest87,C#,Monday 13th of November 2023 03:40:50 AM CDT,"[StartCode]
using System;

namespace ConsoleApp31
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string MenuHit = ""1"";
            const string MenuRage = ""2"";
            const string MenuMadness = ""3"";
            const string MenuSpray = ""4"";

            int trollRage = 100;
            int trollMadness = 200;
            int trollSpray = 100;
            int trollHealth = 1500;
            int trollDamage = 100;
            int bossHealth = 2000;
            int bossDamage = 100;
            int durationSpray = 3;
            int durationRage = 3;
            int durationMadness = 1;
            int durationDamage = 1;
            int countdounDamage = 0;
            int countdounSpray = 0;
            int countdounRage = 0;
            int countdounMadness = 0;
            int doubleDamage = 2;
            string menuInput;

            while (bossHealth > 0 && trollHealth > 0)
            {
                Console.WriteLine();
                Console.WriteLine($""Вы троль рукопашник и в вашем арсенали 4 приема :"" +
                    $""\n {MenuHit}) Удар по роже - наносит {trollDamage} урона."" +
                    $""\n {MenuRage}) Ярость берсерка - отнимет {trollRage} хп владельца , но следующие {durationRage} атаки двойной урон."" +
                    $""\n {MenuMadness}) Безумие берсерка (только при ярости берсерка) - отнимает {trollMadness} хп владельца а весь урон удваивается ."" +
                    $""\n {MenuSpray}) Распылить споры - восстанавливает {trollSpray} хп и отравляет врага на {durationSpray} хода."");
                Console.WriteLine($""Ваше здоровье - {trollHealth}\nЗдоровье босса - {bossHealth}"");
                Console.WriteLine(""Ваши действия:"");
                menuInput = Console.ReadLine();

                if (countdounSpray > 0)
                {
                    bossHealth -= trollSpray;
                    countdounSpray--;
                    Console.WriteLine($""Споры отняли у босса {trollSpray} жизней , действует еще {countdounSpray} ходов."");
                }
                switch (menuInput)
                {
                    case MenuHit:
                        Console.WriteLine(""Вы выбрали удар по роже."");
                        trollHealth -= bossDamage;
                        countdounDamage = durationDamage;
                        break;

                    case MenuRage:
                        trollHealth -= bossDamage + trollRage;
                        countdounRage = durationRage;
                        countdounDamage = durationDamage;
                        Console.WriteLine($""Вы впали в ярость берсерка на {durationRage} хода отняв себе {trollRage} здоровья."");
                        break;

                    case MenuMadness:
                        Console.WriteLine($""Вы впадаете в безумие отняв себе {trollMadness} здоровья."");
                        trollHealth -= bossDamage + trollMadness;
                        countdounMadness = durationMadness;
                        break;

                    case MenuSpray:
                        Console.WriteLine(""Вы выбрали пустить споры."");
                        trollHealth -= bossDamage - trollSpray;
                        countdounSpray = durationSpray;
                        Console.WriteLine($""Вы пустили споры восстановив себе {trollSpray} здоровья."");
                        Console.WriteLine($""Вас ударили на {bossDamage} урона."");
                        break;
                }
                if (countdounDamage > 0)
                {
                    if (countdounRage > 0)
                    {
                        bossHealth -= trollDamage * doubleDamage;
                        countdounRage--;
                        Console.WriteLine($""Вы ударили в состоянии ярости берсерка, действует {countdounRage} хода."");
                        Console.WriteLine($""Вас ударили на {bossDamage} урона."");
                    }
                    else if (countdounRage <= 0)
                    {
                        bossHealth -= trollDamage;
                        Console.WriteLine($""Вы ударили на {trollDamage} урона."");
                        Console.WriteLine($""Вас ударили на {bossDamage} урона."");
                    }
                }
                if (countdounMadness > 0 && countdounRage > 0)
                {
                    countdounRage--;
                    countdounMadness = 0;
                    bossHealth -= trollDamage * doubleDamage * doubleDamage;
                }
                else if (countdounMadness > 0 && countdounRage <= 0)
                {
                    Console.WriteLine(""Без ярости , безумие не наступает."");
                    countdounMadness = 0;
                    countdounRage = 0;
                    Console.WriteLine($""Вас ударили на {bossDamage} урона."");
                }

                Console.ReadKey();
                countdounDamage = 0;
            }
            if (bossHealth <= 0 && trollHealth > 0)
            {
                Console.WriteLine(""Троль победил."");
            }
            else if (bossHealth > 0 && trollHealth <= 0)
            {
                Console.WriteLine(""Босс победил"");
            }
            else
            {
                Console.WriteLine(""Произошла ничья."");
            }
        }
    }
}
[EndCode]"
ZMaWJysn,emanual snowybot,coinwalk,JavaScript,Monday 13th of November 2023 03:28:14 AM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((originalbal/100).toFixed(8));
var floatingbase = base;
var taget = (originalbal*1.2);
var groupedten = (base*10);
var groupedseven = (base*6.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var over = 6.9;
var under = 2.9;
var freak = true;
var oldbolance = ((Math.floor(originalbal/groupedten))*groupedten);

 
 function getR(minz, maxz) {
  minz = Math.ceil(minz);
  maxz = Math.floor(maxz);
  return Math.floor(Math.random() * (maxz - minz + 1)) + minz;
}
 
 
function get(){
console.clear();
setTimeout(function(){
bolance = document.getElementById('pct_balance').value;
if (bolance>(oldbolance+(floatingbase*over))){
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9
    freak = true;
    oldbolance = parseFloat(bolance);
}
if ((bolance<(oldbolance-(floatingbase*under)))&&(freak)){
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 6.9;
    freak = false;
    oldbolance = parseFloat(bolance);
}
if ((bolance<(oldbolance-(floatingbase*under)))&&(!freak)){
    floatingbase = base;
    over = 6.9;
    under = 2.9;
    freak = true;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
if ((floatingbase>=(originalbal/20))&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    freak = true;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
if ((floatingbase>=(bolance/20))&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    freak = true;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
 
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = ((floatingbase*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
}, (getR(100,200)));
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), (getR(1000,1300)));
}
get();"
Xzb4RH85,Untitled,xPucTu4,C++,Monday 13th of November 2023 02:35:26 AM CDT,"#include <iostream>
#include <string>

int main() {
    std::string input;

    std::cout << ""Input number of rows: "";
    std::getline(std::cin, input);
    int requiredRows = std::stoi(input);
    int currentNumber = 1;

    for (int row = 1; row < requiredRows + 1; row++)
    {
        for (int cols = 1; cols < row + 1; cols++)
        {
			std::cout << currentNumber << "" "";
			currentNumber++;
		}
        std::cout << std::endl;
    }

    return 0;
}
"
cgVN11wa,emanual snowybot,coinwalk,JavaScript,Monday 13th of November 2023 02:31:31 AM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((originalbal/300).toFixed(8));
var floatingbase = base;
var taget = (originalbal*1.2);
var groupedten = (base*10);
var groupedseven = (base*6.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var over = 6.9;
var under = 2.9;
var freak = true;
var oldbolance = ((Math.floor(originalbal/groupedten))*groupedten);

 
 function getR(minz, maxz) {
  minz = Math.ceil(minz);
  maxz = Math.floor(maxz);
  return Math.floor(Math.random() * (maxz - minz + 1)) + minz;
}
 
 
function get(){
console.clear();
setTimeout(function(){
bolance = document.getElementById('pct_balance').value;
if (bolance>(oldbolance+(floatingbase*over))){
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 6.9
    oldbolance = parseFloat(bolance);
}
if ((bolance<(oldbolance-(floatingbase*under)))&&(freak)){
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 6.9;
    freak = false;
    oldbolance = parseFloat(bolance);
}
if ((bolance<(oldbolance-(floatingbase*under)))&&(!freak)){
    floatingbase = base;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
if (floatingbase>=(originalbal/20)){
    floatingbase = base;
    freak = true;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
if (floatingbase>=(bolance/30)){
    floatingbase = base;
    freak = true;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
}
 
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = ((floatingbase*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
}, (getR(100,200)));
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), (getR(1000,1300)));
}
get();"
ChV9kwst,py/def - Source IP Formatted,mashiahd,Python,Monday 13th of November 2023 02:26:58 AM CDT,"def formatted_ip():
    # Get the source IP address
    source_ip = request.remote_addr
    return 'Your IP address is {}'.format(source_ip)"
sJUUQXsR,Squid Server Install,mashiahd,Bash,Monday 13th of November 2023 02:24:35 AM CDT,"#!/bin/bash

# Update the package lists
sudo apt update

# Install Squid and Apache Utilities (for htpasswd)
sudo apt install -y squid apache2-utils

# Create a username and password for the proxy
read -p ""Enter the proxy username: "" proxy_user
sudo htpasswd -c /etc/squid/passwd $proxy_user

# Backup the original Squid configuration file
sudo cp /etc/squid/squid.conf /etc/squid/squid.conf.backup

# Add authentication configuration to Squid
cat <<EOL | sudo tee /etc/squid/squid.conf
auth_param basic program /usr/lib/squid/basic_ncsa_auth /etc/squid/passwd
auth_param basic children 5
auth_param basic realm Proxy
auth_param basic credentialsttl 2 hours
acl authenticated proxy_auth REQUIRED
http_access allow authenticated
http_port 3128
EOL

# Restart Squid to apply the changes
sudo systemctl restart squid

echo ""HTTP proxy is set up and running on port 3128. Use the username and password you set up to access it.""
"
VPhs8PLL,IO lab,amitdutta121,C,Monday 13th of November 2023 02:09:15 AM CDT,"//Author: Your Name
//Date: / /
//File IO Activity

#include <stdio.h>

#define FILENAME ""inventory.dat""
#define MAX_DATA 150

int getData(FILE* fin, double array[], int max);
void displayData(double array[], int size);

int main(){
  double data[MAX_DATA];
  int numItems = 0;

  FILE* fptr;
  fptr = fopen(FILENAME, ""r"");

  if(fptr == NULL){
    printf(""Cannot open file.\n"");
  }
  else{
    numItems = getData(fptr, data, MAX_DATA);
    displayData(data, numItems);
    fclose(fptr);
  }

  return 0;
}

int getData(FILE* fin, double array[], int max){
int index = 0;
  while(fscanf(fin, ""%lf"", &array[index]) == 1 && index < max){
    index++;
  }
  return index;
}

void displayData(double array[], int size){
  for(int index = 0; index < size; index++){
    printf(""%.2lf"", array[index]);
    if(index < size - 1){
      printf("", "");
    }
  }
  printf(""\n"");
}"
Acn0KaF4,v_template.php,yocky12k,PHP,Monday 13th of November 2023 01:48:31 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
    <head>
        <meta charset=""utf-8"" />
        <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"" />
        <meta name=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no"" />
        <meta name=""description"" content="""" />
        <meta name=""author"" content="""" />
        <title>Static Navigation - SB Admin</title>
        <link href=""<?= base_url('sbadmin/')?>css/styles.css"" rel=""stylesheet"" />
        <script src=""https://use.fontawesome.com/releases/v6.3.0/js/all.js"" crossorigin=""anonymous""></script>
    </head>
    <body>
        <nav class=""sb-topnav navbar navbar-expand navbar-dark bg-dark"">
            <!-- Navbar Brand-->
            <a class=""navbar-brand ps-3"" href=""index.html"">Web Sekolah</a>
            <!-- Sidebar Toggle-->
            <button class=""btn btn-link btn-sm order-1 order-lg-0 me-4 me-lg-0"" id=""sidebarToggle"" href=""#!""><i class=""fas fa-bars""></i></button>
            <!-- Navbar Search-->
            <form class=""d-none d-md-inline-block form-inline ms-auto me-0 me-md-3 my-2 my-md-0"">
                <div class=""input-group"">
                    <input class=""form-control"" type=""text"" placeholder=""Search for..."" aria-label=""Search for..."" aria-describedby=""btnNavbarSearch"" />
                    <button class=""btn btn-primary"" id=""btnNavbarSearch"" type=""button""><i class=""fas fa-search""></i></button>
                </div>
            </form>
            <!-- Navbar-->
            <ul class=""navbar-nav ms-auto ms-md-0 me-3 me-lg-4"">
                <li class=""nav-item dropdown"">
                    <a class=""nav-link dropdown-toggle"" id=""navbarDropdown"" href=""#"" role=""button"" data-bs-toggle=""dropdown"" aria-expanded=""false""><i class=""fas fa-user fa-fw""></i></a>
                    <ul class=""dropdown-menu dropdown-menu-end"" aria-labelledby=""navbarDropdown"">
                        <li><a class=""dropdown-item"" href=""#!"">Settings</a></li>
                        <li><a class=""dropdown-item"" href=""#!"">Activity Log</a></li>
                        <li><hr class=""dropdown-divider"" /></li>
                        <li><a class=""dropdown-item"" href=""#!"">Logout</a></li>
                    </ul>
                </li>
            </ul>
        </nav>
        <div id=""layoutSidenav"">
            <div id=""layoutSidenav_nav"">
                <nav class=""sb-sidenav accordion sb-sidenav-dark"" id=""sidenavAccordion"">
                    <div class=""sb-sidenav-menu"">
                        <div class=""nav"">
                            <a class=""nav-link"" href=""<?= base_url('Home/index') ?>"">
                                <div class=""sb-nav-link-icon""><i class=""fas fa-tachometer-alt""></i></div>
                                Dashboard
                            </a>
                            <a class=""nav-link"" href=""<?= base_url('Guru/index') ?>"">
                                <div class=""sb-nav-link-icon""><i class=""fas fa-chart-area""></i></div>
                                Guru
                            </a>
                            <a class=""nav-link"" href=""<?= base_url('Siswa/index') ?>"">
                                <div class=""sb-nav-link-icon""><i class=""fas fa-table""></i></div>
                                Siswa
                            </a>
                            <a class=""nav-link"" href=""<?= base_url('User/index') ?>"">
                                <div class=""sb-nav-link-icon""><i class=""fas fa-table""></i></div>
                                User
                            </a>
                            <a class=""nav-link"" href=""<?= base_url('Dosen/index') ?>"">
                                <div class=""sb-nav-link-icon""><i class=""fas fa-table""></i></div>
                                Dosen
                            </a>
                        </div>
                    </div>
                    <div class=""sb-sidenav-footer"">
                        <div class=""small"">Logged in as:</div>
                        Start Bootstrap
                    </div>
                </nav>
            </div>
            <div id=""layoutSidenav_content"">
                <main>
                    <div class=""container-fluid px-4"">
                        <h1 class=""mt-4""><?= $judul ?></h1>
                        <!-- Konten -->
                        <?php
                            if ($page) {
                                    echo view($page);
                            }
                        ?>
                        <!-- Konten -->
                    </div>
                </main>
                <footer class=""py-4 bg-light mt-auto"">
                    <div class=""container-fluid px-4"">
                        <div class=""d-flex align-items-center justify-content-between small"">
                            <div class=""text-muted"">Copyright &copy; Your Website 2023</div>
                            <div>
                                <a href=""#"">Privacy Policy</a>
                                &middot;
                                <a href=""#"">Terms &amp; Conditions</a>
                            </div>
                        </div>
                    </div>
                </footer>
            </div>
        </div>
        <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"" crossorigin=""anonymous""></script>
        <script src=""<?= base_url('sbadmin/')?>js/scripts.js""></script>
    </body>
</html>
"
WCAhvs9Z,v_input_dosen.php,yocky12k,PHP,Monday 13th of November 2023 01:48:05 AM CDT,"<?php echo form_open('Dosen/insertData') ?>
<div class=""form-group"">
    <label>NIDN</label>
    <input name=""nidn"" class=""form-control"" placeholder=""NIDN"">
    <p class=""text-danger""><?= validation_show_error('nidn') ?></p>
</div>
<div class=""form-group"">
    <label>Nama Dosen</label>
    <input name=""nama_dosen"" class=""form-control"" placeholder=""Nama Dosen"">
    <p class=""text-danger""><?= validation_show_error('nama_dosen') ?></p>
</div>
<div class=""form-group"">
    <label>Tempat Lahir Dosen</label>
    <input name=""tmpt_lahir_dosen"" class=""form-control"" placeholder=""Tempat Lahir Dosen"">
    <p class=""text-danger""><?= validation_show_error('tmpt_lahir_dosen') ?></p>
</div>
<div class=""form-group"">
    <label>Tanggal Lahir Dosen</label>
    <input type=""date"" name=""tgl_lahir_dosen"" class=""form-control"" placeholder=""Tanggal Lahir Dosen"">
    <p class=""text-danger""><?= validation_show_error('tgl_lahir_dosen') ?></p>
</div>
<div class=""form-group"">
    <label>Pendidikan</label>
    <select name=""pendidikan"" class=""form-control"">
       <option value="""">--Pilihan--</option>
        <option value=""S2"">Strata 2</option>
        <option value=""S3"">Strata 3</option>
    </select>
    <p class=""text-danger""><?= validation_show_error('pendidikan') ?></p>
</div>
<div class=""form-group"">
    <label>Prodi</label>
    <select name=""prodi"" class=""form-control"">
       <option value="""">--Pilihan--</option>
        <option value=""SI"">Sistem Informasi</option>
        <option value=""SK"">Sistem komputer</option>
        <option value=""TI"">Teknik Informatika</option>
        <option value=""MI"">Manajemen Informatika</option>
        <option value=""TK"">Teknik Komputer</option>
    </select>
    <p class=""text-danger""><?= validation_show_error('prodi') ?></p>
</div>
<div class=""form-group"">
    <label>Status Dosen</label>
    <select name=""status_dosen"" class=""form-control"">
       <option value="""">--Pilihan--</option>
        <option value=""T"">Dosen Tetap</option>
        <option value=""LB"">Dosen Luar Biasa</option>
    </select>
    <p class=""text-danger""><?= validation_show_error('status_dosen') ?></p>
</div>
<br>
<div class=""form-group"">
    <button type=""submit"" class=""btn btn-primary"">Simpan</button>
    <a href=""<?= base_url('User/index') ?>"" class=""btn btn-success"">Kembali</a>
</div>
<?php echo form_close() ?>"
stAauMBe,v_data_dosen.php,yocky12k,PHP,Monday 13th of November 2023 01:46:45 AM CDT,"<a href=""<?= base_url('Dosen/inputData') ?>"" class=""btn btn-primary"">Tambah</a>
<?php
if(session()->get('pesan'))
{
    echo '<div class=""alert alert-success"">';
    echo session()->get('pesan');
    echo '</div>';
}
?>
<table class=""table table-bordered"">
    <tr>
        <th>No</th>
        <th>NIDN</th>
        <th>Nama Dosen</th>
        <th>Tempat Dan Tanggal Lahir Dosen</th>
        <th>Pendidikan</th>
        <th>Prodi</th>
        <th>Status Dosen</th>
        <th>Aksi</th>
    </tr>
    <?php $no=1; foreach ($dosen as $key => $value) { ?>
        <tr>
            <td><?= $no++ ?></td>
            <td><?= $value['nidn'] ?></td>
            <td><?= $value['nama_dosen'] ?></td>
            <td><?= $value['tmpt_lahir_dosen']."", "". $value['tgl_lahir_dosen'] ?></td>
            <td><?= $value['pendidikan'] == 'S2' ? 'Strata 2' : 'Strata 3' ?></td>
            <td>
                <?php
                if($value['prodi'] == 'SI'){
                    echo ""Sistem Informasi"";
                }elseif($value['prodi'] == 'SK'){
                    echo ""Sistem Komputer"";
                }elseif($value['prodi'] == 'TI'){
                    echo ""Teknik Informatika"";
                }elseif($value['prodi'] == 'MI'){
                    echo ""Manajemen Informatika"";
                }elseif($value['prodi'] == 'TK'){
                    echo ""Teknik Komputer"";
                }else{
                    echo ""Prodi Ini Tidak Ada"";
                }
                ?>
            </td>
            <td><?= $value['status_dosen'] == 'T' ? 'Dosen Tetap' : 'Dosen Luar Biasa' ?></td>
            <td>
                <a href=""<?= base_url('Dosen/editData/'.$value['id_dosen']) ?>"" class=""btn btn-warning btn-sm"">Edit</a>
                <a href=""<?= base_url('Dosen/deleteData/'.$value['id_dosen']) ?>"" class=""btn btn-danger btn-sm"" onclick=""return confirm('Yakin Hapus Data ?')"">Delete</a>
            </td>
        </tr>
    <?php } ?>
</table>"
cTgXr7M9,dwadaw,xcage88,TypeScript,Monday 13th of November 2023 01:24:00 AM CDT,"import { Fragment } from '@fullcalendar/core/preact';
import { useEffect, useState } from 'react';
import { useDispatch } from 'react-redux';

//* store
import { setPageTitle } from '../../../store/themeConfigSlice';
import WithAuth from '@/middlewares/WithAuth';

//* component
import { showMessage } from '@/components/core/Alert/ShowMessage';
import Breadcrumb from '@/components/core/Breadcrumb';
import FormLabel from '@/components/core/Label';
import TextInput from '@/components/core/TextInput';
import { CircularProgress, Skeleton } from '@mui/material';

//* utils
import { getData, putData } from '@/utils/fetch';
import { requiredMsg } from '@/utils/regex';

//* type
import { CostRule } from '@/types/cost-rule';
import Button from '@/components/core/Button';
import ModalUpdateCostRule from '@/components/core/Modal/ModalUpdateCostRule';

//* hooks form
import { yupResolver } from '@hookform/resolvers/yup';
import { useForm } from 'react-hook-form';
import * as yup from 'yup';
import 'yup-phone';

const schema = yup.object({
    service_fee: yup.string().required(requiredMsg('Nama')),
    transaction_percentage: yup.string().required(requiredMsg('Presentase Transaksi')),
    refund_fee: yup.string().required(requiredMsg('Biaya Pengembalian Dana')),
});

const CostRules = () => {
    //* hooks form
    const {
        register,
        handleSubmit,
        reset,
        formState: { errors },
    } = useForm({
        resolver: yupResolver(schema),
    });

    const dispatch = useDispatch();

    const [costRules, setCostRules] = useState<CostRule>();

    const [form, setForm] = useState({
        service_fee: 0,
        transaction_percentage: 0,
        refund_fee: 0,
    });
    const [editFeeRuleModal, setEditFeeRuleModal] = useState<boolean>(false);

    const [indicator, setIndicator] = useState<boolean>(false);
    const [isLoading, setIsLoading] = useState<boolean>(false);

    useEffect(() => {
        dispatch(setPageTitle('Statistik Transaksi - Aturan Biaya'));
    });

    //* get data
    const getCostRules = async () => {
        try {
            setIsLoading(true);
            const { data } = await getData(`/fee-rules`);

            setCostRules(data.fee_rules);
            setForm({
                service_fee: data.fee_rules.service_fee,
                transaction_percentage: data.fee_rules.transaction_percentage,
                refund_fee: data.fee_rules.refund_fee,
            });

            setIsLoading(false);
        } catch (error: any) {
            setIsLoading(false);
        }
    };

    useEffect(() => {
        getCostRules();
    }, [indicator]);

    function formatNumber(number: number) {
        return number.toLocaleString('id-ID', { style: 'decimal', minimumFractionDigits: 0 });
    }

    //* modal add-update
    const handleEditFeeRuleeModal = async (id?: string) => {
        reset();
        setEditFeeRuleModal(true);
    };

    //* onChange input
    const handleChangeInput = (e: any) => {
        const { name, value } = e.target;
        setForm({ ...form, [name]: value });
    };

    //* save action
    const handleSaveAction = async (e: any) => {
        setIsLoading(true);
        //* UPDATE FEE RULE ACTION
        try {
            // const idToRemove = costRules?.id;
            await putData(`/fee-rules/${costRules?.id}`, form);
            showMessage('Aturan biaya berhasil diupdate');
            setIndicator(!indicator);
            setEditFeeRuleModal(false);
        } catch (error: any) {
            showMessage(`Aturan biaya gagal diupdate : ${error.response?.data.message}`, 'error');
        } finally {
            setIsLoading(false);
        }
    };

    return (
        <Fragment>
            <section className=""mb-3 items-center md:flex md:justify-between"">
                <Breadcrumb textFirst=""Orderia"" textSecond=""Aturan Biaya"" url_link=""./cost-rule"" />
            </section>

            <section className=""panel"">
                <div className=""mb-5 flex flex-col justify-between gap-5 md:flex-row md:items-center"">
                    <h5 className=""py-[7px] text-[22px] text-lg font-semibold dark:text-white-light"">Aturan Biaya</h5>

                    {/* Button add */}
                    <Button
                        className={`flex w-full cursor-pointer items-center justify-center rounded-[8px] bg-[#2684FC] py-[7px] font-semibold text-[#FFFFFF] hover:bg-[#196fe1] md:w-[120px] md:gap-1 lg:gap-2`}
                        onClick={() => handleEditFeeRuleeModal()}
                    >
                        Atur
                    </Button>
                </div>
                <div className=""grid gap-6"">
                    <div>
                        <p className=""mb-2 font-semibold"">Biaya Layanan</p>
                        {isLoading ? <Skeleton width={150} height={30} variant=""text"" /> : <h5 className=""text-[16px] font-bold"">{formatNumber(costRules?.service_fee || 0)}</h5>}
                    </div>
                    <div>
                        <p className=""mb-2 font-semibold"">Persentase Transaksi</p>
                        {isLoading ? <Skeleton width={150} height={30} variant=""text"" /> : <h5 className=""text-[16px] font-bold"">{costRules?.transaction_percentage}%</h5>}
                    </div>
                    <div>
                        <p className=""mb-2 font-semibold"">Biaya Pengembalian Dana</p>
                        {isLoading ? <Skeleton width={150} height={30} variant=""text"" /> : <h5 className=""text-[16px] font-bold"">{formatNumber(costRules?.refund_fee || 0)}</h5>}
                    </div>
                </div>
            </section>

            {/* modal add and update data */}
            <ModalUpdateCostRule form={form} setShow={setEditFeeRuleModal} show={editFeeRuleModal}>
                <form onSubmit={handleSubmit(handleSaveAction)}>
                    <div className=""mb-5"">
                        <div className=""flex"">
                            <FormLabel label=""Biaya Layanan"" labelFor=""service_fee"" />
                            <span className=""ml-1 text-[#FF0000]"">*</span>
                        </div>
                        <TextInput
                            register={register}
                            errors={errors}
                            id=""service_fee""
                            name=""service_fee""
                            type=""number""
                            placeholder=""Masukan Biaya Layanan""
                            value={form?.service_fee}
                            onChange={handleChangeInput}
                        />
                    </div>
                    <div className=""mb-5"">
                        <div className=""flex"">
                            <FormLabel label=""Presentasi Transaksi"" labelFor=""transaction_percentage"" />
                            <span className=""ml-1 text-[#FF0000]"">*</span>
                        </div>
                        <TextInput
                            register={register}
                            errors={errors}
                            id=""transaction_percentage""
                            name=""transaction_percentage""
                            type=""number""
                            placeholder=""Masukan Presentase Transaksi""
                            value={form?.transaction_percentage}
                            onChange={handleChangeInput}
                        />
                    </div>
                    <div className=""mb-5"">
                        <div className=""flex"">
                            <FormLabel label=""Biaya Pengembalian Dana"" labelFor=""refund_fee"" />
                            <span className=""ml-1 text-[#FF0000]"">*</span>
                        </div>
                        <TextInput
                            register={register}
                            errors={errors}
                            id=""refund_fee""
                            name=""refund_fee""
                            type=""number""
                            placeholder=""Masukan Biaya Pengembalian Dana""
                            value={form?.refund_fee}
                            onChange={handleChangeInput}
                        />
                    </div>

                    <div className=""mt-8 flex items-center justify-center"">
                        <Button
                            type=""button""
                            className=""w-[150px] gap-2 rounded-lg bg-[#F9F9F9] py-2 text-[#909090] hover:bg-[#f0f0f0]""
                            onClick={() => {
                                setEditFeeRuleModal(false);
                                setIndicator(!indicator);
                            }}
                        >
                            Batal
                        </Button>
                        <Button
                            type=""submit""
                            className=""flex w-[150px] items-center justify-center rounded-lg bg-[#2684FC] py-2 text-[#FFFFFF] hover:bg-[#1f75e7] ltr:ml-4 rtl:mr-4""
                            disabled={isLoading}
                        >
                            {isLoading ? <CircularProgress size={20} /> : 'Ubah'}
                        </Button>
                    </div>
                </form>
            </ModalUpdateCostRule>
        </Fragment>
    );
};

export default WithAuth(CostRules);
"
hGdXPvQK,SMI_LAB7_FCT_CALCUL_TEMP,varli_ketanpl,C++,Monday 13th of November 2023 01:16:12 AM CDT,"float GetTemp1(void) {
    float wADC;
    float rezultat;
    float aux;

    wADC = analogRead(1);
    aux = wADC * (5.0 / 1023.0);   
    rezultat = (aux - 0.5) / 0.01;

    return (rezultat);
}"
CjCNqvgn,sample,amitdutta121,C,Monday 13th of November 2023 01:15:52 AM CDT,"// Genesis Mendoza
// Programming Assignment 7: songs
// 11/11/23

#include <stdio.h>
#define SIZE 100 

void displayList(char name[]);
void createList (char name[]);
void addToList (char name[]);

int main(){

	int choice;
	char pName[SIZE + 1], junk;

	do{
		printf(""\nSONG PLAYLIST MANAGER \n1. See a Playlist \n2. Create a Playlist \n3. Add to a Playlist \n0. Exit \nYour choice: "");
		scanf("" %d"", &choice);
		
		if(choice != 1 && choice != 2 && choice != 3 && choice != 0){
			printf(""Please enter a valid option.\n"");
		}
		else if(choice == 1){
			printf(""Enter the name of your playlist file: "");
			scanf(""%c"", &junk);
			fgets(pName, SIZE, stdin);
			displayList(pName);
		}
		else if(choice == 2){
			printf(""Enter a name for your new playlist file: "");
			scanf(""%c"", &junk);
			fgets(pName, SIZE, stdin);
			createList(pName);
		}
	}while (choice != 0);
		printf(""Goodbye!\n"");
		
		
	return 0;
}
void displayList(char name[]){
    FILE *fp;
    char tmpStr[SIZE];
    int songCount = 1;

    fp = fopen(name, ""r"");

    if(fp != NULL){
        while(fgets(tmpStr, SIZE, fp) != NULL){
            printf(""%d: %s"", songCount, tmpStr);
            songCount++;
        }
        fclose(fp);  // Close the file only if it was successfully opened
    }
    else{
        printf(""Sorry, could not find playlist"");
    }
}


void createList (char name[]){
	FILE *fp;
	char input[SIZE];
	
	fp = fopen(name,""w"");
	
	if(fp == NULL){
		printf(""Cannot open file for writing"");
	}else{
		while(1){
			printf(""Enter a song for your new playlist or 0 when playlist is complete: "");
			fgets(input, SIZE, stdin);
			if (input[0] == '0')
				break;
			else fprintf(fp, ""%s"", input);
		}
		fclose(fp);
	}
	
void addToList(char name[]){
	FILE *fp;
	char input[SIZE];
	
	fp = fopen(name, ""a"");
	
	if(fp == NULL){
		printf(""Cannot open file for appending"");
	}else{
		while(1){
			printf(""Enter a song to add to the end of your playlist or 0 when playlist is complete: "");
			fgets(input, SIZE, stdin);
			if (input[0] == '0')
				break;
			else fprintf(fp, ""%s"", input);
		}
		fclose(fp);
	}
	
}

}
"
QnPMnZay,args.py,larrylailai,Python,Monday 13th of November 2023 01:05:20 AM CDT,"import argparse

def get_args():
    parser = argparse.ArgumentParser()

    parser.add_argument(""--input_dir"")
    parser.add_argument(""--output_dir"")

    args = parser.parse_args()
    return args
"
RqSVV9E7,main.py,larrylailai,Python,Monday 13th of November 2023 01:03:18 AM CDT,"import os
from args import get_args

class TicTacToe:
    def __init__(self):
        self.board = [[' ' for _ in range(3)] for _ in range(3)]
        self.current_player = 'X'

    def print_board(self, file=None):
        for row in self.board:
            row_str = "" | "".join(row)
            print(row_str, file=file)
            print(""-"" * 9, file=file)

    def check_winner(self):
        for player in ['X', 'O']:
            for i in range(3):
                status = True
                # 橫
                for j in range(3):
                    if self.board[i][j]!=player: status = False
                if status: return True
                status=True
                #直
                for j in range(3):
                    if self.board[j][i]!=player: status = False
                if status: return True
                status=True
                #右下
                for i in range(3):
                    if self.board[i][i]!=player: status=False
                if status: return True
                status=True
                #左下
                for i in range(3):
                    if self.board[i][2-i]!=player: status=False
                if status: return True
                status=True
        return False

    def is_board_full(self):
        full=True
        for i in range(3):
            for j in range(3):
                if (self.board[i][j]==' '): full=False
        return full
    
    def play_game(self, input_file, output_file):
        win = None
        with open(input_file, ""r"") as f:
            # print(f.readlines())
            for line in f.readlines():
                try:
                    a, b = line.split(' ')
                    a = int(a)-1; b = int(b)-1
                    if (a>2 or a<0 or b>2 or b<0): continue
                except:
                    break
                self.board[a][b] = self.current_player
                if self.check_winner():
                    win = self.check_winner()
                    break
                if self.is_board_full(): break
                self.current_player = 'X' if self.current_player=='O' else 'O'

        with open(output_file, ""w+"") as r:
            self.print_board(r)
            if win: print(f'Player {self.current_player} wins!', file=r)
            else: print(""It's a draw!"", file=r)

if __name__ == ""__main__"":
    args = get_args()
    input_folder = args.input_dir  # 輸入資料夾的名稱
    output_folder = args.output_dir  # 輸出資料夾的名稱

    for filename in os.listdir(input_folder):
        input_file = os.path.join(input_folder, filename)
        output_file = os.path.join(output_folder, filename)
        if not os.path.exists(output_folder):
            os.makedirs(output_folder)
        game = TicTacToe()
        game.play_game(input_file, output_file)
        if not os.path.exists(""check_functions""):
            os.makedirs(""check_functions"")
        with open(""check_functions/"" + filename, 'w') as f:
            print(game.check_winner(), file=f)
            print(game.is_board_full(), file=f)"
JEZTm1nH,UserDataProcessing,just_ulik,C#,Monday 13th of November 2023 12:44:39 AM CDT,"using System.Security.AccessControl;
using System.Xml;
using CsvDataUtility;

namespace CSVDataProcessing;

public static class UserDataProcessing
{
    public static string[][] GetCsvDataFile()
    {
        Console.Clear();
        bool isRead = false;
        string[][] data = null;
        do
        {
            Console.WriteLine(""Please enter absolute file path. File exstension should be csv:"");
            string filePath = Console.ReadLine();
            try
            {
                /*if (filePath != Path.GetFullPath(Path.GetFileName(filePath)))
                {
                    Console.WriteLine(filePath);
                    Console.WriteLine(Path.GetFullPath(Path.GetFileName(filePath)));
                    isRead = false;
                    Console.WriteLine(""It is not absolute path. Please try again"");
                    continue;
                }*/
                CsvDataUtility.CsvProcessing.fPath = filePath;
                string[] notFormatedData = CsvDataUtility.CsvProcessing.Read();
                data = CsvDataUtility.CsvProcessing.RefactorData(notFormatedData);
                isRead = true;
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
                Console.WriteLine(""Try again:"");
                isRead = false;
            }
        } while (!isRead);

        return data;
    }

    public static void PrintSelection(in string[] selection)
    {
        if (selection is null)
        {
            return;
        }

        try
        {
            for (int i = 0; i < 2; ++i)
            {
                Console.WriteLine($""Номер строки в исходных данных | {selection[i],20}"");
            }
            for (int i = 2; i < selection.Length; ++i)
            {
                Console.WriteLine($""{i,30} | {selection[i],20}"");
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }
    
    public static void GiveUserSelection(in string[] selection)
    {
        Console.Clear();
        PrintSelection(in selection);
        Console.WriteLine();

        bool read = false;
        do
        {
            
            Console.WriteLine(""Choose next action:"");
            Console.WriteLine(""1. "");
            var cmd = Console.ReadKey().Key;
            switch (cmd)
            {
                case ConsoleKey.Y:
                    read = true;
                    CsvDataUtility.CsvProcessing.Write(selection);
                    break;
                case ConsoleKey.N:
                    read = true;
                    Console.Clear();
                    return;
                default:
                    read = false;
                    break;

            }
        } while (!read);
    }
    
    public static void GiveUserSelection(in string[][] selection)
    {
        
    }

    public static void SelectionMenu(in string[][] data)
    {
        bool isRecievedTrainsition = false;
        
        do
        {
            Console.Clear();
            Console.WriteLine(""Make a selection by:"");
            Console.WriteLine(""1. StationStart"");
            Console.WriteLine(""2. StationEnd"");
            Console.WriteLine(""3. StationStart and StationEnd"");
            Console.WriteLine(""4. Stop the program"");
            
            var cmd = Console.ReadKey().Key;
            string forException = """";
            string[] SelectionOne;
            string[][] SelectionTwo;
            try
            {
                switch (cmd)
                {
                    case ConsoleKey.D1:
                        isRecievedTrainsition = true;
                        SelectionOne = CsvDataUtility.DataProcessing.GetSelectionByOne(in data, ""StationStart"", ref forException);
                        GiveUserSelection(in SelectionOne);
                        break;
                    case ConsoleKey.D2:
                        isRecievedTrainsition = true;
                        SelectionOne = CsvDataUtility.DataProcessing.GetSelectionByOne(in data, ""StationEnd"", ref forException);
                        GiveUserSelection(in SelectionOne);
                        break;
                    case ConsoleKey.D3:
                        isRecievedTrainsition = true;
                        SelectionTwo = new string[2][];
                        SelectionTwo[0] = CsvDataUtility.DataProcessing.GetSelectionByOne(in data, ""StationStart"", ref forException);
                        SelectionTwo[1] = CsvDataUtility.DataProcessing.GetSelectionByOne(in data, ""StationEnd"", ref forException);
                        GiveUserSelection(SelectionTwo);
                        return;
                    default:
                        isRecievedTrainsition = false;
                        break;
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
                isRecievedTrainsition = false;
            }

            if (!isRecievedTrainsition)
            {
                Console.WriteLine(""Try again"");
            }
        } while (!isRecievedTrainsition);
    }
    public static void MainMenu(in string[][] data)
    {
        bool isRecievedTrainsition = false;

        do
        {
            Console.Clear();
            Console.WriteLine(""For this file choose one option and press the corresponding number:"");
            Console.WriteLine(""1. Make a selection by column"");
            Console.WriteLine(""2. To sort by column"");
            Console.WriteLine(""3. Stop the program"");

            var cmd = Console.ReadKey().Key;
            switch (cmd)
            {
                case ConsoleKey.D1:
                    isRecievedTrainsition = true;
                    SelectionMenu(in data);
                    break;
                case ConsoleKey.D2:
                    isRecievedTrainsition = true;
                    //SortMenu();
                    break;
                case ConsoleKey.D3:
                    isRecievedTrainsition = true;
                    return;
                default:
                    isRecievedTrainsition = false;
                    break;
            }
        } while (!isRecievedTrainsition);
    }
}"
ruJ4ufP7,Basic Character Profile (F2U HTML for Toyhouse),augustisabignerd,HTML,Monday 13th of November 2023 12:42:14 AM CDT,"<!--Colors - use ctrl + f to replace all colors
        Headers/Buttons Background: #7c7c7c
        Headers/Buttons Text: #fff
        Headers/Buttons Borders: #b3b3b3
        Subheaders Text: #414141
        Subheaders Border: #5b5b5b
        Main Text Background: #dcdcdc
        Main Text: #000
        -->
 
<!--BACKGROUND-->
<!--if you want a solid color instead of an image, replace ""background-image"" with ""background-color"" and replace the url with the hex code of your choosing-->
<div class=""card p-3"" style=""background-image:url(https://file.garden/ZTl_PNekRGKF3YJS/PLACEHOLDER.png)"">
    
<!-- CHARACTER NAME-->    
<div class=""card p-2 mb-2 text-center"" style=""background-color:#7c7c7c;color:#fff;border:2px solid #b3b3b3;font-family:georgia;font-variant:small-caps;letter-spacing:2px"">
    <h1>Character Name</h1>
</div>

<div class=""card p-2 text-center"" style=""background-color:#7c7c7c;color:#fff;border:2px solid #b3b3b3;font-family:georgia;letter-spacing:2px"">
    <p><b>JUMP TO:</b></p>
</div>

<!-- BUTTONS-->
<div class=""row no-gutters mb-2"" style=""font-family:georgia"">
    <div class=""card col-3 p-2 text-center"" style=""background-color:#7c7c7c;border:1px solid #b3b3b3""><a href=""#basics"" style=""color:#fff;"">Basics</a></div>
    <div class=""card col-3 p-2 text-center"" style=""background-color:#7c7c7c;border:1px solid #b3b3b3""><a href=""#story"" style=""color:#fff;"">Story</a></div>
    <div class=""card col-3 p-2 text-center"" style=""background-color:#7c7c7c;border:1px solid #b3b3b3""><a href=""#trivia"" style=""color:#fff;"">Trivia</a></div>
    <div class=""card col-3 p-2 text-center"" style=""background-color:#7c7c7c;border:1px solid #b3b3b3""><a href=""#links"" style=""color:#fff;"">Relations</a></div>
</div>

<div class=""card p-2 mb-2 text-center"" style=""background-color:#7c7c7c;color:#fff;border:2px solid #b3b3b3;max-height:50px;font-family:georgia;letter-spacing:3px"" id=""basics"">
    <h1>INTRO</h1>
</div>



<div class=""row no-gutters"">
    
<!--IMAGE-->
<div class=""col-lg-5 justify-content-center"">
    <img class=""img-thumbnail mb-2 rounded-circle"" src=""https://file.garden/ZTl_PNekRGKF3YJS/PLACEHOLDER.png"" style=""max-height:330px;"">
</div>

<!--BASIC INFO-->
<div class=""col-lg-7"">
    <div class=""card p-2 mb-2"" style=""max-height:50px;background-color:#dcdcdc"">
        <h1 class=""text-center"" style=""border:dashed #5b5b5b;color:#414141"">BASIC INFO</h1></div>
    
    <div class=""row no-gutters text-center mb-1"">
        <div class=""card col-6"" style=""color:#414141;background-color:#dcdcdc""><h1>NAME</h1></div>
        <div class=""card col-6"" style=""color:#000;background-color:#dcdcdc""><h3>Content</h3></div>
    </div>
    
    <div class=""row no-gutters text-center mb-1"">
        <div class=""card col-6"" style=""color:#414141;background-color:#dcdcdc""><h1>AGE</h1></div>
        <div class=""card col-6"" style=""color:#000;background-color:#dcdcdc""><h3>Content</h3></div>
    </div>

    
    <div class=""row no-gutters text-center mb-1"">
        <div class=""card col-6"" style=""color:#414141;background-color:#dcdcdc""><h1>GENDER</h1></div>
        <div class=""card col-6"" style=""color:#000;background-color:#dcdcdc""><h3>Content</h3></div>
    </div>
    
    <div class=""row no-gutters text-center mb-1"">
        <div class=""card col-6"" style=""color:#414141;background-color:#dcdcdc""><h1>PRONOUNS</h1></div>
        <div class=""card col-6"" style=""color:#000;background-color:#dcdcdc""><h3>Content</h3></div>
    </div>
    
    <div class=""row no-gutters text-center mb-1"">
        <div class=""card col-6"" style=""color:#414141;background-color:#dcdcdc""><h1>ORIENTATION</h1></div>
        <div class=""card col-6"" style=""color:#000;background-color:#dcdcdc""><h3>Content</h3></div>
    </div>
    
    <div class=""row no-gutters text-center mb-1"">
        <div class=""card col-6"" style=""color:#414141;background-color:#dcdcdc""><h1>BIRTHDAY</h1></div>
        <div class=""card col-6"" style=""color:#000;background-color:#dcdcdc""><h3>Content</h3></div>
    </div>
    
    <div class=""row no-gutters text-center mb-2"">
        <div class=""card col-6"" style=""color:#414141;background-color:#dcdcdc""><h1>HEIGHT</h1></div>
        <div class=""card col-6"" style=""color:#000;background-color:#dcdcdc""><h3>Content</h3></div>
    </div>
</div>
</div>

<!--INTRODUCTION PARAGRAPH-->
<div class=""card p-2 mb-2"" style=""color:#000;background-color:#dcdcdc"">
        <h1 class=""text-center"" style=""border:dashed #5b5b5b;color:#414141"">INTRODUCTION</h1>
        
        <p>Write a short introduction here. This box will expand to fit your writing. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam semper velit id dui varius, ut fringilla augue semper. Donec ut libero venenatis, ultrices libero sed, aliquam nulla. Integer in mi elementum ante volutpat iaculis. Duis orci ligula, laoreet quis urna id, dapibus scelerisque tortor. Vestibulum in mi ipsum. Quisque quis nulla tristique, mollis ligula ac, aliquam libero. Suspendisse ullamcorper commodo aliquet. Sed ut bibendum ex.</p>
</div>

<div class=""card p-2 mb-2 text-center"" style=""background-color:#7c7c7c;color:#fff;border:2px solid #b3b3b3;max-height:50px;font-family:georgia;letter-spacing:3px"" id=""story"">
    <h1>STORY</h1>
</div>

<!--STORY PARAGRAPHS-->
<div class=""card p-2 mb-2"" style=""color:#000;background-color:#dcdcdc"">
        <h1 class=""text-center"" style=""border:dashed #5b5b5b;color:#414141"">SUBHEADER 1</h1>
        
        <p>Write about your character's story here. This box will expand to fit your writing.  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam semper velit id dui varius, ut fringilla augue semper. Donec ut libero venenatis, ultrices libero sed, aliquam nulla. Integer in mi elementum ante volutpat iaculis. Duis orci ligula, laoreet quis urna id, dapibus scelerisque tortor. Vestibulum in mi ipsum. Quisque quis nulla tristique, mollis ligula ac, aliquam libero. Suspendisse ullamcorper commodo aliquet. Sed ut bibendum ex. Duis venenatis sagittis massa, sed mattis nunc suscipit sed. In feugiat, magna eu lobortis placerat, metus quam tempor massa, nec facilisis nisi quam nec nisl. In laoreet tellus eu blandit euismod. Phasellus faucibus urna quis est viverra varius. Maecenas aliquet enim vitae ex faucibus rutrum.</p>
        <p>Nunc eleifend lectus ac nunc ultricies lobortis. Sed blandit tortor eget nulla mollis, a tincidunt diam lacinia. Quisque pretium lectus non dui vehicula laoreet. Phasellus eu erat vulputate, imperdiet purus vitae, venenatis eros. Aliquam eget iaculis lorem. Cras viverra blandit velit, eu pulvinar est. Etiam orci massa, mollis quis aliquam in, finibus vitae mauris. Nunc at gravida justo. Quisque ultricies lectus mattis diam varius, in fermentum tellus lobortis. Duis facilisis, massa eget luctus tincidunt, quam odio rhoncus enim, vel pellentesque magna turpis eu augue. Mauris porta, turpis vel lacinia lacinia, mauris mauris viverra lectus, quis accumsan ligula velit quis tellus. Duis semper neque in purus suscipit faucibus. Curabitur id arcu erat. </p>
        
         <h1 class=""text-center"" style=""border:dashed #7c7c7c;color:#414141"">SUBHEADER 2</h1>
         
         <p>Donec id ultrices velit, sit amet maximus orci. Maecenas cursus, urna vel vehicula varius, metus nibh malesuada augue, quis lacinia libero urna nec urna. Phasellus tempor at felis vitae lobortis. Integer lobortis, dui eget consequat rhoncus, sapien felis posuere leo, vel venenatis sem erat sit amet odio. Aliquam erat volutpat. Maecenas aliquet vitae orci id tincidunt. Cras laoreet feugiat vestibulum. Curabitur hendrerit turpis consequat, auctor magna vel, suscipit turpis. </p>
         <p>Nunc sed ante porta, ultrices ante vitae, rhoncus mi. Ut faucibus sapien eu sodales scelerisque. Nullam ac dui risus. Vivamus sodales mauris non tortor efficitur, sit amet finibus leo aliquam. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Suspendisse dapibus suscipit nulla, a dignissim enim ornare sollicitudin. Ut id libero quis felis gravida faucibus id sed diam. Etiam at cursus neque. Vivamus vel efficitur urna. Quisque vitae lacus non justo commodo tempus. Duis eget mattis augue. In risus lacus, vestibulum at lacus ac, dapibus aliquam neque. Pellentesque felis leo, suscipit ut finibus eu, consectetur et augue. </p>
</div>

<div class=""card p-2 mb-2 text-center"" style=""background-color:#7c7c7c;color:#fff;border:2px solid #b3b3b3;max-height:50px;font-family:georgia;letter-spacing:3px"" id=""trivia"">
    <h1>TRIVIA & NOTES</h1>
</div>

<!--TRIVIA-->
<div class=""card p-2 mb-2"" style=""color:#000;background-color:#dcdcdc"">
    <h1 class=""text-center"" style=""border:dashed #5b5b5b;color:#414141"">TRIVIA</h1>
    <ul class=""fa-ul"" style=""font-weight:530;letter-spacing:1px"">
        <li><span class=""fa-li""><i class=""fas fa-heart""></i></span>Trivia fact 1</li>
        <li><span class=""fa-li""><i class=""fas fa-heart""></i></span>Trivia fact 2</li>
        <li><span class=""fa-li""><i class=""fas fa-heart""></i></span>Trivia fact 3</li>
        
        <!--Add more above this line-->
    </ul>

<!--DESIGN NOTES-->    
    <h1 class=""text-center"" style=""border:dashed #5b5b5b;color:#414141"">DESIGN NOTES</h1>
    <ul class=""fa-ul"" style=""font-weight:530;letter-spacing:1px"">
        <li><span class=""fa-li""><i class=""fas fa-paintbrush""></i></span>Design note 1</li>
        <li><span class=""fa-li""><i class=""fas fa-paintbrush""></i></span>Design note 2</li>
        <li><span class=""fa-li""><i class=""fas fa-paintbrush""></i></span>Design note 3</li>
        
        <!--Add more above this line-->
    </ul>
</div>

<div class=""card p-2 mb-2 text-center"" style=""background-color:#7c7c7c;color:#fff;border:2px solid #b3b3b3;max-height:50px;font-family:georgia;letter-spacing:3px"" id=""links"">
    <h1>RELATIONSHIPS</h1>
</div>

<!--RELATIONSHIP BLOCK 1-->
<div class=""row no-gutters justify-content-center"">
    
<img class=""img-thumbnail mb-2 rounded-circle"" src=""https://file.garden/ZTl_PNekRGKF3YJS/PLACEHOLDER.png"" style=""height:200px;width:200px"">
    
    <div class=""card p-2 mb-2"" style=""color:#000;background-color:#dcdcdc"">
        <h1 class=""text-center"" style=""border:dashed #5b5b5b;color:#414141"" data-toggle=""tooltip"" title=""CHARACTER RELATIONSHIP"">CHARACTER NAME</h1>
        
        <p>Write about the relationship between the two characters here. This box will expand to fit your writing. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam semper velit id dui varius, ut fringilla augue semper. Donec ut libero venenatis, ultrices libero sed, aliquam nulla. Integer in mi elementum ante volutpat iaculis. Duis orci ligula, laoreet quis urna id, dapibus scelerisque tortor. Vestibulum in mi ipsum. Quisque quis nulla tristique, mollis ligula ac, aliquam libero. Suspendisse ullamcorper commodo aliquet. Sed ut bibendum ex.</p>
    </div>
</div>

<!--RELATIONSHIP BLOCK 2-->
<div class=""row no-gutters justify-content-center"">
    
<img class=""img-thumbnail mb-2 rounded-circle"" src=""https://file.garden/ZTl_PNekRGKF3YJS/PLACEHOLDER.png"" style=""height:200px;width:200px"">
    
    <div class=""card p-2 mb-2"" style=""color:#000;background-color:#dcdcdc"">
        <h1 class=""text-center"" style=""border:dashed #5b5b5b;color:#414141"" data-toggle=""tooltip"" title=""CHARACTER RELATIONSHIP"">CHARACTER NAME</h1>
        
        <p>Write about the relationship between the two characters here. This box will expand to fit your writing. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam semper velit id dui varius, ut fringilla augue semper. Donec ut libero venenatis, ultrices libero sed, aliquam nulla. Integer in mi elementum ante volutpat iaculis. Duis orci ligula, laoreet quis urna id, dapibus scelerisque tortor. Vestibulum in mi ipsum. Quisque quis nulla tristique, mollis ligula ac, aliquam libero. Suspendisse ullamcorper commodo aliquet. Sed ut bibendum ex.</p>
    </div>
</div>

<!--RELATIONSHIP BLOCK 3-->
<div class=""row no-gutters justify-content-center"">
    
<img class=""img-thumbnail mb-2 rounded-circle"" src=""https://file.garden/ZTl_PNekRGKF3YJS/PLACEHOLDER.png"" style=""height:200px;width:200px"">
    
    <div class=""card p-2 mb-2"" style=""color:#000;background-color:#dcdcdc"">
        <h1 class=""text-center"" style=""border:dashed #5b5b5b;color:#414141"" data-toggle=""tooltip"" title=""CHARACTER RELATIONSHIP"">CHARACTER NAME</h1>
        
        <p>Write about the relationship between the two characters here. This box will expand to fit your writing. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam semper velit id dui varius, ut fringilla augue semper. Donec ut libero venenatis, ultrices libero sed, aliquam nulla. Integer in mi elementum ante volutpat iaculis. Duis orci ligula, laoreet quis urna id, dapibus scelerisque tortor. Vestibulum in mi ipsum. Quisque quis nulla tristique, mollis ligula ac, aliquam libero. Suspendisse ullamcorper commodo aliquet. Sed ut bibendum ex.</p>
    </div>
</div>

<!--CREDIT - DO NOT REMOVE-->
<div class=""text-center"">
<a href=""https://toyhou.se/CandyTrashPanda/characters/folder:3821653"" data-toggle=""tooltip"" title=""code by CandyTrashPanda""><i class=""fas fa-code"" style=""color:#7c7c7c""></i></a>
</div>

</div>"
6feqfEvu,Untitled,SomewhereOutInSpace,Rust,Monday 13th of November 2023 12:16:15 AM CDT,"use std::fs::File;

use memmap2::Mmap;
use rayon::prelude::*;

fn main() -> anyhow::Result<()> {
    let file = File::open(""wikipedia.dat"")?;

    let data = unsafe {
        Mmap::map(&file)?
    };

    let res = data
        .par_chunks(1024)
        .map(|chunk| {
            let mut freq = [0; 128];

            for byte in chunk.iter().filter(|b| b <= &&0x7F) {
                freq[*byte as usize] += 1;
            }

            freq
        })
        .reduce(|| [0_usize; 128], |mut acc, freq| {
            acc.iter_mut().zip(freq).for_each(|(a, n)| *a += n);
            acc
        });

    for (i, c) in res.iter().enumerate() {
        println!(
            ""{} ({}) {}"",
            i as u8 as char,
            i,
            c
        )
    }

    Ok(())
}
"
1xVWvgUH,m01710_a0-optimized.cl,little2379,C,Sunday 12th of November 2023 11:29:41 PM CDT,"/**
 * Author......: See docs/credits.txt
 * License.....: MIT
 */

#define NEW_SIMD_CODE

#ifdef KERNEL_STATIC
#include M2S(INCLUDE_PATH/inc_vendor.h)
#include M2S(INCLUDE_PATH/inc_types.h)
#include M2S(INCLUDE_PATH/inc_platform.cl)
#include M2S(INCLUDE_PATH/inc_common.cl)
#include M2S(INCLUDE_PATH/inc_rp_optimized.h)
#include M2S(INCLUDE_PATH/inc_rp_optimized.cl)
#include M2S(INCLUDE_PATH/inc_simd.cl)
#include M2S(INCLUDE_PATH/inc_hash_sha512.cl)
#endif

DECLSPEC void sha512_transform_intern (PRIVATE_AS const u32x *w0, PRIVATE_AS const u32x *w1, PRIVATE_AS const u32x *w2, PRIVATE_AS const u32x *w3, PRIVATE_AS u64x *digest)
{
  u64x w0_t = hl32_to_64 (w0[0], w0[1]);
  u64x w1_t = hl32_to_64 (w0[2], w0[3]);
  u64x w2_t = hl32_to_64 (w1[0], w1[1]);
  u64x w3_t = hl32_to_64 (w1[2], w1[3]);
  u64x w4_t = hl32_to_64 (w2[0], w2[1]);
  u64x w5_t = hl32_to_64 (w2[2], w2[3]);
  u64x w6_t = hl32_to_64 (w3[0], w3[1]);
  u64x w7_t = 0;
  u64x w8_t = 0;
  u64x w9_t = 0;
  u64x wa_t = 0;
  u64x wb_t = 0;
  u64x wc_t = 0;
  u64x wd_t = 0;
  u64x we_t = 0;
  u64x wf_t = hl32_to_64 (w3[2], w3[3]);

  u64x a = digest[0];
  u64x b = digest[1];
  u64x c = digest[2];
  u64x d = digest[3];
  u64x e = digest[4];
  u64x f = digest[5];
  u64x g = digest[6];
  u64x h = digest[7];

  #define ROUND_EXPAND()                            \
  {                                                 \
    w0_t = SHA512_EXPAND (we_t, w9_t, w1_t, w0_t);  \
    w1_t = SHA512_EXPAND (wf_t, wa_t, w2_t, w1_t);  \
    w2_t = SHA512_EXPAND (w0_t, wb_t, w3_t, w2_t);  \
    w3_t = SHA512_EXPAND (w1_t, wc_t, w4_t, w3_t);  \
    w4_t = SHA512_EXPAND (w2_t, wd_t, w5_t, w4_t);  \
    w5_t = SHA512_EXPAND (w3_t, we_t, w6_t, w5_t);  \
    w6_t = SHA512_EXPAND (w4_t, wf_t, w7_t, w6_t);  \
    w7_t = SHA512_EXPAND (w5_t, w0_t, w8_t, w7_t);  \
    w8_t = SHA512_EXPAND (w6_t, w1_t, w9_t, w8_t);  \
    w9_t = SHA512_EXPAND (w7_t, w2_t, wa_t, w9_t);  \
    wa_t = SHA512_EXPAND (w8_t, w3_t, wb_t, wa_t);  \
    wb_t = SHA512_EXPAND (w9_t, w4_t, wc_t, wb_t);  \
    wc_t = SHA512_EXPAND (wa_t, w5_t, wd_t, wc_t);  \
    wd_t = SHA512_EXPAND (wb_t, w6_t, we_t, wd_t);  \
    we_t = SHA512_EXPAND (wc_t, w7_t, wf_t, we_t);  \
    wf_t = SHA512_EXPAND (wd_t, w8_t, w0_t, wf_t);  \
  }

  #define ROUND_STEP(i)                                                                   \
  {                                                                                       \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, a, b, c, d, e, f, g, h, w0_t, k_sha512[i +  0]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, h, a, b, c, d, e, f, g, w1_t, k_sha512[i +  1]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, g, h, a, b, c, d, e, f, w2_t, k_sha512[i +  2]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, f, g, h, a, b, c, d, e, w3_t, k_sha512[i +  3]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, e, f, g, h, a, b, c, d, w4_t, k_sha512[i +  4]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, d, e, f, g, h, a, b, c, w5_t, k_sha512[i +  5]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, c, d, e, f, g, h, a, b, w6_t, k_sha512[i +  6]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, b, c, d, e, f, g, h, a, w7_t, k_sha512[i +  7]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, a, b, c, d, e, f, g, h, w8_t, k_sha512[i +  8]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, h, a, b, c, d, e, f, g, w9_t, k_sha512[i +  9]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, g, h, a, b, c, d, e, f, wa_t, k_sha512[i + 10]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, f, g, h, a, b, c, d, e, wb_t, k_sha512[i + 11]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, e, f, g, h, a, b, c, d, wc_t, k_sha512[i + 12]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, d, e, f, g, h, a, b, c, wd_t, k_sha512[i + 13]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, c, d, e, f, g, h, a, b, we_t, k_sha512[i + 14]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, b, c, d, e, f, g, h, a, wf_t, k_sha512[i + 15]); \
  }

  ROUND_STEP (0);

  #if defined IS_CUDA
  ROUND_EXPAND (); ROUND_STEP (16);
  ROUND_EXPAND (); ROUND_STEP (32);
  ROUND_EXPAND (); ROUND_STEP (48);
  ROUND_EXPAND (); ROUND_STEP (64);
  #else
  #ifdef _unroll
  #pragma unroll
  #endif
  for (int i = 16; i < 80; i += 16)
  {
    ROUND_EXPAND (); ROUND_STEP (i);
  }
  #endif

  /* rev
  digest[0] += a;
  digest[1] += b;
  digest[2] += c;
  digest[3] += d;
  digest[4] += e;
  digest[5] += f;
  digest[6] += g;
  digest[7] += h;
  */

  digest[0] = a;
  digest[1] = b;
  digest[2] = c;
  digest[3] = d;
  digest[4] = e;
  digest[5] = f;
  digest[6] = g;
  digest[7] = h;
}

KERNEL_FQ void m01710_m04 (KERN_ATTR_RULES ())
{
  /**
   * modifier
   */

  const u64 lid = get_local_id (0);

  /**
   * base
   */

  const u64 gid = get_global_id (0);

  if (gid >= GID_CNT) return;

  u32 pw_buf0[4];
  u32 pw_buf1[4];

  pw_buf0[0] = pws[gid].i[0];
  pw_buf0[1] = pws[gid].i[1];
  pw_buf0[2] = pws[gid].i[2];
  pw_buf0[3] = pws[gid].i[3];
  pw_buf1[0] = pws[gid].i[4];
  pw_buf1[1] = pws[gid].i[5];
  pw_buf1[2] = pws[gid].i[6];
  pw_buf1[3] = pws[gid].i[7];

  const u32 pw_len = pws[gid].pw_len & 63;

  /**
   * salt
   */

  u32 salt_buf0[4];
  u32 salt_buf1[4];
  u32 salt_buf2[4];
  u32 salt_buf3[4];

  salt_buf0[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 0];
  salt_buf0[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 1];
  salt_buf0[2] = salt_bufs[SALT_POS_HOST].salt_buf[ 2];
  salt_buf0[3] = salt_bufs[SALT_POS_HOST].salt_buf[ 3];
  salt_buf1[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 4];
  salt_buf1[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 5];
  salt_buf1[2] = salt_bufs[SALT_POS_HOST].salt_buf[ 6];
  salt_buf1[3] = salt_bufs[SALT_POS_HOST].salt_buf[ 7];
  salt_buf2[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 8];
  salt_buf2[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 9];
  salt_buf2[2] = salt_bufs[SALT_POS_HOST].salt_buf[10];
  salt_buf2[3] = salt_bufs[SALT_POS_HOST].salt_buf[11];
  salt_buf3[0] = salt_bufs[SALT_POS_HOST].salt_buf[12];
  salt_buf3[1] = salt_bufs[SALT_POS_HOST].salt_buf[13];
  salt_buf3[2] = salt_bufs[SALT_POS_HOST].salt_buf[14];
  salt_buf3[3] = salt_bufs[SALT_POS_HOST].salt_buf[15];

  const u32 salt_len = salt_bufs[SALT_POS_HOST].salt_len;

  /**
   * loop
   */

  for (u32 il_pos = 0; il_pos < IL_CNT; il_pos += VECT_SIZE)
  {
    u32x w0[4] = { 0 };
    u32x w1[4] = { 0 };
    u32x w2[4] = { 0 };
    u32x w3[4] = { 0 };

    const u32x out_len = apply_rules_vect_optimized (pw_buf0, pw_buf1, pw_len, rules_buf, il_pos, w0, w1);

    /**
     * append salt
     */

    u32x s0[4];
    u32x s1[4];
    u32x s2[4];
    u32x s3[4];

    s0[0] = salt_buf0[0];
    s0[1] = salt_buf0[1];
    s0[2] = salt_buf0[2];
    s0[3] = salt_buf0[3];
    s1[0] = salt_buf1[0];
    s1[1] = salt_buf1[1];
    s1[2] = salt_buf1[2];
    s1[3] = salt_buf1[3];
    s2[0] = salt_buf2[0];
    s2[1] = salt_buf2[1];
    s2[2] = salt_buf2[2];
    s2[3] = salt_buf2[3];
    s3[0] = salt_buf3[0];
    s3[1] = salt_buf3[1];
    s3[2] = salt_buf3[2];
    s3[3] = salt_buf3[3];

    switch_buffer_by_offset_le_VV (s0, s1, s2, s3, out_len);

    const u32x pw_salt_len = out_len + salt_len;

    w0[0] |= s0[0];
    w0[1] |= s0[1];
    w0[2] |= s0[2];
    w0[3] |= s0[3];
    w1[0] |= s1[0];
    w1[1] |= s1[1];
    w1[2] |= s1[2];
    w1[3] |= s1[3];
    w2[0] |= s2[0];
    w2[1] |= s2[1];
    w2[2] |= s2[2];
    w2[3] |= s2[3];
    w3[0] |= s3[0];
    w3[1] |= s3[1];
    w3[2] |= s3[2];
    w3[3] |= s3[3];

    /**
     * sha512
     */

    u32x w0_t[4];
    u32x w1_t[4];
    u32x w2_t[4];
    u32x w3_t[4];

    w0_t[0] = hc_swap32 (w0[0]);
    w0_t[1] = hc_swap32 (w0[1]);
    w0_t[2] = hc_swap32 (w0[2]);
    w0_t[3] = hc_swap32 (w0[3]);
    w1_t[0] = hc_swap32 (w1[0]);
    w1_t[1] = hc_swap32 (w1[1]);
    w1_t[2] = hc_swap32 (w1[2]);
    w1_t[3] = hc_swap32 (w1[3]);
    w2_t[0] = hc_swap32 (w2[0]);
    w2_t[1] = hc_swap32 (w2[1]);
    w2_t[2] = hc_swap32 (w2[2]);
    w2_t[3] = hc_swap32 (w2[3]);
    w3_t[0] = hc_swap32 (w3[0]);
    w3_t[1] = hc_swap32 (w3[1]);
    w3_t[2] = 0;
    w3_t[3] = pw_salt_len * 8;

    u64x digest[8];

    digest[0] = SHA512M_A;
    digest[1] = SHA512M_B;
    digest[2] = SHA512M_C;
    digest[3] = SHA512M_D;
    digest[4] = SHA512M_E;
    digest[5] = SHA512M_F;
    digest[6] = SHA512M_G;
    digest[7] = SHA512M_H;

    sha512_transform_intern (w0_t, w1_t, w2_t, w3_t, digest);

    const u32x r0 = l32_from_64 (digest[7]);
    const u32x r1 = h32_from_64 (digest[7]);
    const u32x r2 = l32_from_64 (digest[3]);
    const u32x r3 = h32_from_64 (digest[3]);

    COMPARE_M_SIMD (r0, r1, r2, r3);
  }
}

KERNEL_FQ void m01710_m08 (KERN_ATTR_RULES ())
{
}

KERNEL_FQ void m01710_m16 (KERN_ATTR_RULES ())
{
}

KERNEL_FQ void m01710_s04 (KERN_ATTR_RULES ())
{
  /**
   * modifier
   */

  const u64 lid = get_local_id (0);

  /**
   * base
   */

  const u64 gid = get_global_id (0);

  if (gid >= GID_CNT) return;

  u32 pw_buf0[4];
  u32 pw_buf1[4];

  pw_buf0[0] = pws[gid].i[0];
  pw_buf0[1] = pws[gid].i[1];
  pw_buf0[2] = pws[gid].i[2];
  pw_buf0[3] = pws[gid].i[3];
  pw_buf1[0] = pws[gid].i[4];
  pw_buf1[1] = pws[gid].i[5];
  pw_buf1[2] = pws[gid].i[6];
  pw_buf1[3] = pws[gid].i[7];

  const u32 pw_len = pws[gid].pw_len & 63;

  /**
   * salt
   */

  u32 salt_buf0[4];
  u32 salt_buf1[4];
  u32 salt_buf2[4];
  u32 salt_buf3[4];

  salt_buf0[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 0];
  salt_buf0[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 1];
  salt_buf0[2] = salt_bufs[SALT_POS_HOST].salt_buf[ 2];
  salt_buf0[3] = salt_bufs[SALT_POS_HOST].salt_buf[ 3];
  salt_buf1[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 4];
  salt_buf1[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 5];
  salt_buf1[2] = salt_bufs[SALT_POS_HOST].salt_buf[ 6];
  salt_buf1[3] = salt_bufs[SALT_POS_HOST].salt_buf[ 7];
  salt_buf2[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 8];
  salt_buf2[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 9];
  salt_buf2[2] = salt_bufs[SALT_POS_HOST].salt_buf[10];
  salt_buf2[3] = salt_bufs[SALT_POS_HOST].salt_buf[11];
  salt_buf3[0] = salt_bufs[SALT_POS_HOST].salt_buf[12];
  salt_buf3[1] = salt_bufs[SALT_POS_HOST].salt_buf[13];
  salt_buf3[2] = salt_bufs[SALT_POS_HOST].salt_buf[14];
  salt_buf3[3] = salt_bufs[SALT_POS_HOST].salt_buf[15];

  const u32 salt_len = salt_bufs[SALT_POS_HOST].salt_len;

  /**
   * digest
   */

  const u32 search[4] =
  {
    digests_buf[DIGESTS_OFFSET_HOST].digest_buf[DGST_R0],
    digests_buf[DIGESTS_OFFSET_HOST].digest_buf[DGST_R1],
    digests_buf[DIGESTS_OFFSET_HOST].digest_buf[DGST_R2],
    digests_buf[DIGESTS_OFFSET_HOST].digest_buf[DGST_R3]
  };

  /**
   * loop
   */

  for (u32 il_pos = 0; il_pos < IL_CNT; il_pos += VECT_SIZE)
  {
    u32x w0[4] = { 0 };
    u32x w1[4] = { 0 };
    u32x w2[4] = { 0 };
    u32x w3[4] = { 0 };

    const u32x out_len = apply_rules_vect_optimized (pw_buf0, pw_buf1, pw_len, rules_buf, il_pos, w0, w1);

    /**
     * append salt
     */

    u32x s0[4];
    u32x s1[4];
    u32x s2[4];
    u32x s3[4];

    s0[0] = salt_buf0[0];
    s0[1] = salt_buf0[1];
    s0[2] = salt_buf0[2];
    s0[3] = salt_buf0[3];
    s1[0] = salt_buf1[0];
    s1[1] = salt_buf1[1];
    s1[2] = salt_buf1[2];
    s1[3] = salt_buf1[3];
    s2[0] = salt_buf2[0];
    s2[1] = salt_buf2[1];
    s2[2] = salt_buf2[2];
    s2[3] = salt_buf2[3];
    s3[0] = salt_buf3[0];
    s3[1] = salt_buf3[1];
    s3[2] = salt_buf3[2];
    s3[3] = salt_buf3[3];

    switch_buffer_by_offset_le_VV (s0, s1, s2, s3, out_len);

    const u32x pw_salt_len = out_len + salt_len;

    w0[0] |= s0[0];
    w0[1] |= s0[1];
    w0[2] |= s0[2];
    w0[3] |= s0[3];
    w1[0] |= s1[0];
    w1[1] |= s1[1];
    w1[2] |= s1[2];
    w1[3] |= s1[3];
    w2[0] |= s2[0];
    w2[1] |= s2[1];
    w2[2] |= s2[2];
    w2[3] |= s2[3];
    w3[0] |= s3[0];
    w3[1] |= s3[1];
    w3[2] |= s3[2];
    w3[3] |= s3[3];

    /**
     * sha512
     */

    u32x w0_t[4];
    u32x w1_t[4];
    u32x w2_t[4];
    u32x w3_t[4];

    w0_t[0] = hc_swap32 (w0[0]);
    w0_t[1] = hc_swap32 (w0[1]);
    w0_t[2] = hc_swap32 (w0[2]);
    w0_t[3] = hc_swap32 (w0[3]);
    w1_t[0] = hc_swap32 (w1[0]);
    w1_t[1] = hc_swap32 (w1[1]);
    w1_t[2] = hc_swap32 (w1[2]);
    w1_t[3] = hc_swap32 (w1[3]);
    w2_t[0] = hc_swap32 (w2[0]);
    w2_t[1] = hc_swap32 (w2[1]);
    w2_t[2] = hc_swap32 (w2[2]);
    w2_t[3] = hc_swap32 (w2[3]);
    w3_t[0] = hc_swap32 (w3[0]);
    w3_t[1] = hc_swap32 (w3[1]);
    w3_t[2] = 0;
    w3_t[3] = pw_salt_len * 8;

    u64x digest[8];

    digest[0] = SHA512M_A;
    digest[1] = SHA512M_B;
    digest[2] = SHA512M_C;
    digest[3] = SHA512M_D;
    digest[4] = SHA512M_E;
    digest[5] = SHA512M_F;
    digest[6] = SHA512M_G;
    digest[7] = SHA512M_H;

    sha512_transform_intern (w0_t, w1_t, w2_t, w3_t, digest);

    const u32x r0 = l32_from_64 (digest[7]);
    const u32x r1 = h32_from_64 (digest[7]);
    const u32x r2 = l32_from_64 (digest[3]);
    const u32x r3 = h32_from_64 (digest[3]);

    COMPARE_S_SIMD (r0, r1, r2, r3);
  }
}

KERNEL_FQ void m01710_s08 (KERN_ATTR_RULES ())
{
}

KERNEL_FQ void m01710_s16 (KERN_ATTR_RULES ())
{
}"
Ze5r4XHh,m01712_a0-optimized.cl,little2379,C,Sunday 12th of November 2023 10:46:25 PM CDT,"/**
 * Author......: See docs/credits.txt
 * License.....: MIT
 */

#define NEW_SIMD_CODE

#ifdef KERNEL_STATIC
#include M2S(INCLUDE_PATH/inc_vendor.h)
#include M2S(INCLUDE_PATH/inc_types.h)
#include M2S(INCLUDE_PATH/inc_platform.cl)
#include M2S(INCLUDE_PATH/inc_common.cl)
#include M2S(INCLUDE_PATH/inc_rp_optimized.h)
#include M2S(INCLUDE_PATH/inc_rp_optimized.cl)
#include M2S(INCLUDE_PATH/inc_simd.cl)
#include M2S(INCLUDE_PATH/inc_hash_sha512.cl)
#endif

DECLSPEC void sha512_transform_intern (PRIVATE_AS const u32x *w0, PRIVATE_AS const u32x *w1, PRIVATE_AS const u32x *w2, PRIVATE_AS const u32x *w3, PRIVATE_AS u64x *digest)
{
  u64x w0_t = hl32_to_64 (w0[0], w0[1]);
  u64x w1_t = hl32_to_64 (w0[2], w0[3]);
  u64x w2_t = hl32_to_64 (w1[0], w1[1]);
  u64x w3_t = hl32_to_64 (w1[2], w1[3]);
  u64x w4_t = hl32_to_64 (w2[0], w2[1]);
  u64x w5_t = hl32_to_64 (w2[2], w2[3]);
  u64x w6_t = hl32_to_64 (w3[0], w3[1]);
  u64x w7_t = 0;
  u64x w8_t = 0;
  u64x w9_t = 0;
  u64x wa_t = 0;
  u64x wb_t = 0;
  u64x wc_t = 0;
  u64x wd_t = 0;
  u64x we_t = 0;
  u64x wf_t = hl32_to_64 (w3[2], w3[3]);

  u64x a = digest[0];
  u64x b = digest[1];
  u64x c = digest[2];
  u64x d = digest[3];
  u64x e = digest[4];
  u64x f = digest[5];
  u64x g = digest[6];
  u64x h = digest[7];

  #define ROUND_EXPAND()                            \
  {                                                 \
    w0_t = SHA512_EXPAND (we_t, w9_t, w1_t, w0_t);  \
    w1_t = SHA512_EXPAND (wf_t, wa_t, w2_t, w1_t);  \
    w2_t = SHA512_EXPAND (w0_t, wb_t, w3_t, w2_t);  \
    w3_t = SHA512_EXPAND (w1_t, wc_t, w4_t, w3_t);  \
    w4_t = SHA512_EXPAND (w2_t, wd_t, w5_t, w4_t);  \
    w5_t = SHA512_EXPAND (w3_t, we_t, w6_t, w5_t);  \
    w6_t = SHA512_EXPAND (w4_t, wf_t, w7_t, w6_t);  \
    w7_t = SHA512_EXPAND (w5_t, w0_t, w8_t, w7_t);  \
    w8_t = SHA512_EXPAND (w6_t, w1_t, w9_t, w8_t);  \
    w9_t = SHA512_EXPAND (w7_t, w2_t, wa_t, w9_t);  \
    wa_t = SHA512_EXPAND (w8_t, w3_t, wb_t, wa_t);  \
    wb_t = SHA512_EXPAND (w9_t, w4_t, wc_t, wb_t);  \
    wc_t = SHA512_EXPAND (wa_t, w5_t, wd_t, wc_t);  \
    wd_t = SHA512_EXPAND (wb_t, w6_t, we_t, wd_t);  \
    we_t = SHA512_EXPAND (wc_t, w7_t, wf_t, we_t);  \
    wf_t = SHA512_EXPAND (wd_t, w8_t, w0_t, wf_t);  \
  }


  #define ROUND_STEP(i)                                                                   \
  {                                                                                       \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, a, b, c, d, e, f, g, h, w0_t, k_sha512[i +  0]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, h, a, b, c, d, e, f, g, w1_t, k_sha512[i +  1]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, g, h, a, b, c, d, e, f, w2_t, k_sha512[i +  2]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, f, g, h, a, b, c, d, e, w3_t, k_sha512[i +  3]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, e, f, g, h, a, b, c, d, w4_t, k_sha512[i +  4]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, d, e, f, g, h, a, b, c, w5_t, k_sha512[i +  5]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, c, d, e, f, g, h, a, b, w6_t, k_sha512[i +  6]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, b, c, d, e, f, g, h, a, w7_t, k_sha512[i +  7]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, a, b, c, d, e, f, g, h, w8_t, k_sha512[i +  8]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, h, a, b, c, d, e, f, g, w9_t, k_sha512[i +  9]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, g, h, a, b, c, d, e, f, wa_t, k_sha512[i + 10]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, f, g, h, a, b, c, d, e, wb_t, k_sha512[i + 11]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, e, f, g, h, a, b, c, d, wc_t, k_sha512[i + 12]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, d, e, f, g, h, a, b, c, wd_t, k_sha512[i + 13]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, c, d, e, f, g, h, a, b, we_t, k_sha512[i + 14]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, b, c, d, e, f, g, h, a, wf_t, k_sha512[i + 15]); \
  }

  ROUND_STEP (0);

  #if defined IS_CUDA
  ROUND_EXPAND (); ROUND_STEP (16);
  ROUND_EXPAND (); ROUND_STEP (32);
  ROUND_EXPAND (); ROUND_STEP (48);
  ROUND_EXPAND (); ROUND_STEP (64);
  #else
  #ifdef _unroll
  #pragma unroll
  #endif
  for (int i = 16; i < 80; i += 16)
  {
    ROUND_EXPAND (); ROUND_STEP (i);
  }
  #endif

  digest[0] = a;
  digest[1] = b;
  digest[2] = c;
  digest[3] = d;
  digest[4] = e;
  digest[5] = f;
  digest[6] = g;
  digest[7] = h;
}

KERNEL_FQ void m01712_m04 (KERN_ATTR_RULES ())
{
  /**
   * modifier
   */

  const u64 lid = get_local_id (0);

  /**
   * base
   */

  const u64 gid = get_global_id (0);

  if (gid >= GID_CNT) return;

  u32 pw_buf0[4];
  u32 pw_buf1[4];

  pw_buf0[0] = pws[gid].i[0];
  pw_buf0[1] = pws[gid].i[1];
  pw_buf0[2] = pws[gid].i[2];
  pw_buf0[3] = pws[gid].i[3];
  pw_buf1[0] = pws[gid].i[4];
  pw_buf1[1] = pws[gid].i[5];
  pw_buf1[2] = pws[gid].i[6];
  pw_buf1[3] = pws[gid].i[7];

  const u32 pw_len = pws[gid].pw_len & 63;

  /**
   * salt
   */

  u32 salt_buf0[4];
  u32 salt_buf1[4];
  u32 salt_buf2[4];
  u32 salt_buf3[4];

  salt_buf0[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 0];
  salt_buf0[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 1];
  salt_buf0[2] = salt_bufs[SALT_POS_HOST].salt_buf[ 2];
  salt_buf0[3] = salt_bufs[SALT_POS_HOST].salt_buf[ 3];
  salt_buf1[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 4];
  salt_buf1[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 5];
  salt_buf1[2] = salt_bufs[SALT_POS_HOST].salt_buf[ 6];
  salt_buf1[3] = salt_bufs[SALT_POS_HOST].salt_buf[ 7];
  salt_buf2[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 8];
  salt_buf2[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 9];
  salt_buf2[2] = salt_bufs[SALT_POS_HOST].salt_buf[10];
  salt_buf2[3] = salt_bufs[SALT_POS_HOST].salt_buf[11];
  salt_buf3[0] = salt_bufs[SALT_POS_HOST].salt_buf[12];
  salt_buf3[1] = salt_bufs[SALT_POS_HOST].salt_buf[13];
  salt_buf3[2] = salt_bufs[SALT_POS_HOST].salt_buf[14];
  salt_buf3[3] = salt_bufs[SALT_POS_HOST].salt_buf[15];

  const u32 salt_len = salt_bufs[SALT_POS_HOST].salt_len;

  /**
   * loop
   */

  for (u32 il_pos = 0; il_pos < IL_CNT; il_pos += VECT_SIZE)
  {
    u32x w0[4] = { 0 };
    u32x w1[4] = { 0 };
    u32x w2[4] = { 0 };
    u32x w3[4] = { 0 };

        const u32x out_len = apply_rules_vect_optimized (pw_buf0, pw_buf1, pw_len, rules_buf, il_pos, w0, w1);

    /**
     * append salt
     */

    u32x s0[4];
    u32x s1[4];
    u32x s2[4];
    u32x s3[4];

    s0[0] = salt_buf0[0];
    s0[1] = salt_buf0[1];
    s0[2] = salt_buf0[2];
    s0[3] = salt_buf0[3];
    s1[0] = salt_buf1[0];
    s1[1] = salt_buf1[1];
    s1[2] = salt_buf1[2];
    s1[3] = salt_buf1[3];
    s2[0] = salt_buf2[0];
    s2[1] = salt_buf2[1];
    s2[2] = salt_buf2[2];
    s2[3] = salt_buf2[3];
    s3[0] = salt_buf3[0];
    s3[1] = salt_buf3[1];
    s3[2] = salt_buf3[2];
    s3[3] = salt_buf3[3];

    switch_buffer_by_offset_le_VV (s0, s1, s2, s3, out_len);

    const u32x pw_salt_len = out_len + salt_len;

    w0[0] |= s0[0];
    w0[1] |= s0[1];
    w0[2] |= s0[2];
    w0[3] |= s0[3];
    w1[0] |= s1[0];
    w1[1] |= s1[1];
    w1[2] |= s1[2];
    w1[3] |= s1[3];
    w2[0] |= s2[0];
    w2[1] |= s2[1];
    w2[2] |= s2[2];
    w2[3] |= s2[3];
    w3[0] |= s3[0];
    w3[1] |= s3[1];
    w3[2] |= s3[2];
    w3[3] |= s3[3];

    /**
     * sha512 with 12 rounds
     */

    u64x digest[8];

    digest[0] = SHA512M_A;
    digest[1] = SHA512M_B;
    digest[2] = SHA512M_C;
    digest[3] = SHA512M_D;
    digest[4] = SHA512M_E;
    digest[5] = SHA512M_F;
    digest[6] = SHA512M_G;
    digest[7] = SHA512M_H;

    for (int round = 0; round < 12; round++)
    {
        u32x w0_t[4] = { hc_swap32 (w0[0]), hc_swap32 (w0[1]), hc_swap32 (w0[2]), hc_swap32 (w0[3]) };
        u32x w1_t[4] = { hc_swap32 (w1[0]), hc_swap32 (w1[1]), hc_swap32 (w1[2]), hc_swap32 (w1[3]) };
        u32x w2_t[4] = { hc_swap32 (w2[0]), hc_swap32 (w2[1]), hc_swap32 (w2[2]), hc_swap32 (w2[3]) };
        u32x w3_t[4] = { hc_swap32 (w3[0]), hc_swap32 (w3[1]), 0, pw_salt_len * 8 };

        sha512_transform_intern (w0_t, w1_t, w2_t, w3_t, digest);

        // Prepare for the next round
        if (round < 11)
        {
            w0[0] = l32_from_64 (digest[0]);
            w0[1] = h32_from_64 (digest[0]);
            w0[2] = l32_from_64 (digest[1]);
            w0[3] = h32_from_64 (digest[1]);
            w1[0] = l32_from_64 (digest[2]);
            w1[1] = h32_from_64 (digest[2]);
            w1[2] = l32_from_64 (digest[3]);
            w1[3] = h32_from_64 (digest[3]);
            w2[0] = l32_from_64 (digest[4]);
            w2[1] = h32_from_64 (digest[4]);
            w2[2] = l32_from_64 (digest[5]);
            w2[3] = h32_from_64 (digest[5]);
            w3[0] = l32_from_64 (digest[6]);
            w3[1] = h32_from_64 (digest[6]);
            w3[2] = 0;
            w3[3] = pw_salt_len * 8;
        }
    }

    const u32x r0 = l32_from_64 (digest[7]);
    const u32x r1 = h32_from_64 (digest[7]);
    const u32x r2 = l32_from_64 (digest[3]);
    const u32x r3 = h32_from_64 (digest[3]);

    COMPARE_M_SIMD (r0, r1, r2, r3);
  }
}

KERNEL_FQ void m01712_m08 (KERN_ATTR_RULES ())
{
}

KERNEL_FQ void m01712_m16 (KERN_ATTR_RULES ())
{
}

KERNEL_FQ void m01712_s04 (KERN_ATTR_RULES ())
{
  /**
   * modifier
   */
  const u64 lid = get_local_id (0);

  /**
   * base
   */
  const u64 gid = get_global_id (0);

  if (gid >= GID_CNT) return;

  u32 pw_buf0[4];
  u32 pw_buf1[4];

  pw_buf0[0] = pws[gid].i[0];
  pw_buf0[1] = pws[gid].i[1];
  pw_buf0[2] = pws[gid].i[2];
  pw_buf0[3] = pws[gid].i[3];
  pw_buf1[0] = pws[gid].i[4];
  pw_buf1[1] = pws[gid].i[5];
  pw_buf1[2] = pws[gid].i[6];
  pw_buf1[3] = pws[gid].i[7];

  const u32 pw_len = pws[gid].pw_len & 63;

  /**
   * salt
   */
  u32 salt_buf0[4];
  u32 salt_buf1[4];
  u32 salt_buf2[4];
  u32 salt_buf3[4];

  salt_buf0[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 0];
  salt_buf0[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 1];
  salt_buf0[2] = salt_bufs[SALT_POS_HOST].salt_buf[ 2];
  salt_buf0[3] = salt_bufs[SALT_POS_HOST].salt_buf[ 3];
  salt_buf1[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 4];
  salt_buf1[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 5];
  salt_buf1[2] = salt_bufs[SALT_POS_HOST].salt_buf[ 6];
  salt_buf1[3] = salt_bufs[SALT_POS_HOST].salt_buf[ 7];
  salt_buf2[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 8];
  salt_buf2[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 9];
  salt_buf2[2] = salt_bufs[SALT_POS_HOST].salt_buf[10];
  salt_buf2[3] = salt_bufs[SALT_POS_HOST].salt_buf[11];
  salt_buf3[0] = salt_bufs[SALT_POS_HOST].salt_buf[12];
  salt_buf3[1] = salt_bufs[SALT_POS_HOST].salt_buf[13];
  salt_buf3[2] = salt_bufs[SALT_POS_HOST].salt_buf[14];
  salt_buf3[3] = salt_bufs[SALT_POS_HOST].salt_buf[15];

  const u32 salt_len = salt_bufs[SALT_POS_HOST].salt_len;

  /**
   * loop
   */
  for (u32 il_pos = 0; il_pos < IL_CNT; il_pos += VECT_SIZE)
  {
    u32x w0[4] = { 0 };
    u32x w1[4] = { 0 };
    u32x w2[4] = { 0 };
    u32x w3[4] = { 0 };

    const u32x out_len = apply_rules_vect_optimized (pw_buf0, pw_buf1, pw_len, rules_buf, il_pos, w0, w1);

    /**
     * append salt
     */
    u32x s0[4];
    u32x s1[4];
    u32x s2[4];
    u32x s3[4];

    s0[0] = salt_buf0[0];
    s0[1] = salt_buf0[1];
    s0[2] = salt_buf0[2];
    s0[3] = salt_buf0[3];
    s1[0] = salt_buf1[0];
    s1[1] = salt_buf1[1];
    s1[2] = salt_buf1[2];
    s1[3] = salt_buf1[3];
    s2[0] = salt_buf2[0];
    s2[1] = salt_buf2[1];
    s2[2] = salt_buf2[2];
    s2[3] = salt_buf2[3];
    s3[0] = salt_buf3[0];
    s3[1] = salt_buf3[1];
    s3[2] = salt_buf3[2];
    s3[3] = salt_buf3[3];

    switch_buffer_by_offset_le_VV (s0, s1, s2, s3, out_len);

    const u32x pw_salt_len = out_len + salt_len;

    w0[0] |= s0[0];
    w0[1] |= s0[1];
    w0[2] |= s0[2];
    w0[3] |= s0[3];
    w1[0] |= s1[0];
    w1[1] |= s1[1];
    w1[2] |= s1[2];
    w1[3] |= s1[3];
    w2[0] |= s2[0];
    w2[1] |= s2[1];
    w2[2] |= s2[2];
    w2[3] |= s2[3];
    w3[0] |= s3[0];
    w3[1] |= s3[1];
    w3[2] |= s3[2];
    w3[3] |= s3[3];

    /**
     * sha512 with 12 rounds
     */
    u64x digest[8];

    digest[0] = SHA512M_A;
    digest[1] = SHA512M_B;
    digest[2] = SHA512M_C;
    digest[3] = SHA512M_D;
    digest[4] = SHA512M_E;
    digest[5] = SHA512M_F;
    digest[6] = SHA512M_G;
    digest[7] = SHA512M_H;

    for (int round = 0; round < 12; round++)
    {
      u32x w0_t[4] = { hc_swap32 (w0[0]), hc_swap32 (w0[1]), hc_swap32 (w0[2]), hc_swap32 (w0[3]) };
      u32x w1_t[4] = { hc_swap32 (w1[0]), hc_swap32 (w1[1]), hc_swap32 (w1[2]), hc_swap32 (w1[3]) };
      u32x w2_t[4] = { hc_swap32 (w2[0]), hc_swap32 (w2[1]), hc_swap32 (w2[2]), hc_swap32 (w2[3]) };
      u32x w3_t[4] = { hc_swap32 (w3[0]), hc_swap32 (w3[1]), 0, pw_salt_len * 8 };

      sha512_transform_intern (w0_t, w1_t, w2_t, w3_t, digest);

      if (round < 11)
      {
        w0[0] = l32_from_64 (digest[0]);
        w0[1] = h32_from_64 (digest[0]);
        w0[2] = l32_from_64 (digest[1]);
        w0[3] = h32_from_64 (digest[1]);
        w1[0] = l32_from_64 (digest[2]);
        w1[1] = h32_from_64 (digest[2]);
        w1[2] = l32_from_64 (digest[3]);
        w1[3] = h32_from_64 (digest[3]);
        w2[0] = l32_from_64 (digest[4]);
        w2[1] = h32_from_64 (digest[4]);
        w2[2] = l32_from_64 (digest[5]);
        w2[3] = h32_from_64 (digest[5]);
        w3[0] = l32_from_64 (digest[6]);
        w3[1] = h32_from_64 (digest[6]);
        w3[2] = 0;
        w3[3] = pw_salt_len * 8;
      }
    }

    const u32x r0 = l32_from_64 (digest[7]);
    const u32x r1 = h32_from_64 (digest[7]);
    const u32x r2 = l32_from_64 (digest[3]);
    const u32x r3 = h32_from_64 (digest[3]);

    COMPARE_S_SIMD (r0, r1, r2, r3);
  }
}

KERNEL_FQ void m01712_s08 (KERN_ATTR_RULES ())
{
}

KERNEL_FQ void m01712_s16 (KERN_ATTR_RULES ())
{
}
"
rfBqxNAw,Rapid Dijkstra,Ernazar00,C++,Sunday 12th of November 2023 10:36:47 PM CDT,"#include <bits/stdc++.h>

using namespace std;

int main() {

    int N, K, S, T, x, y, z;
    cin >> N >> K;
    N++;
    vector<vector<pair<long long,long long>>> g(N);
    for (int i = 0; i < K; ++i) {
        cin >> x >> y >> z;
        g[x].push_back({ z, y });
        g[y].push_back({ z, x });
    }
    cin >> S >> T;
    //cout << S << "" "" << T;

    long long inf = 1e18;
    priority_queue<pair<long long, long long>> q;
    vector<long long> d(N, inf);
    vector<int> prev(N, -1);
    d[S] = 0;
    q.push({ d[S], S });
    int cnt = 0;
    while(!q.empty()){
        long long v = q.top().second;
        long long cur_d = -q.top().first;
        q.pop();
        cnt++;
        if(cur_d > d[v])continue;
        for(auto x: g[v]){
            long long to = x.second;
            long long len = x.first;
            if(d[v] + len < d[to]){
                d[to] = d[v] + len;
                prev[to] = v;
                q.push(make_pair(-d[to], to));
            }
        }
    }
    //cout << cnt << ""\n"";
    if(d[T] < inf){
        cout << d[T] << ""\n"";
        return 0;
        stack<int> path;
        while(T != -1){
            path.push(T + 1);
            T = prev[T];
        }
        while(!path.empty()){
            cout << path.top() << "" ""; path.pop();
        }
    }
    else{
        cout << -1;
    }

    return 0;
}
"
Z9XeWqsY,m01712_a0-pure.cl,little2379,C,Sunday 12th of November 2023 10:22:26 PM CDT,"/**
 * Author......: See docs/credits.txt
 * License.....: MIT
 */

//#define NEW_SIMD_CODE

#ifdef KERNEL_STATIC
#include M2S(INCLUDE_PATH/inc_vendor.h)
#include M2S(INCLUDE_PATH/inc_types.h)
#include M2S(INCLUDE_PATH/inc_platform.cl)
#include M2S(INCLUDE_PATH/inc_common.cl)
#include M2S(INCLUDE_PATH/inc_rp.h)
#include M2S(INCLUDE_PATH/inc_rp.cl)
#include M2S(INCLUDE_PATH/inc_scalar.cl)
#include M2S(INCLUDE_PATH/inc_hash_sha512.cl)
#endif

KERNEL_FQ void m01710_mxx (KERN_ATTR_RULES ())
{
  const u64 lid = get_local_id (0);
  const u64 gid = get_global_id (0);

  if (gid >= GID_CNT) return;

  COPY_PW (pws[gid]);

  const u32 salt_len = salt_bufs[SALT_POS_HOST].salt_len;

  u32 s[64] = { 0 };

  for (u32 i = 0, idx = 0; i < salt_len; i += 4, idx += 1)
  {
    s[idx] = hc_swap32_S (salt_bufs[SALT_POS_HOST].salt_buf[idx]);
  }

  for (u32 il_pos = 0; il_pos < IL_CNT; il_pos++)
  {
    pw_t tmp = PASTE_PW;

    tmp.pw_len = apply_rules (rules_buf[il_pos].cmds, tmp.i, tmp.pw_len);

    sha512_ctx_t ctx;
    sha512_init (&ctx);
    sha512_update_swap (&ctx, tmp.i, tmp.pw_len);
    sha512_update (&ctx, s, salt_len);

    // Loop for 12 rounds
  for (int round = 0; round < 11; round++) {
    u64 digest[8];
    for (int i = 0; i < 8; i++) {
        digest[i] = ctx.h[i];
}


    sha512_init(&ctx);

    u32 digest32[16];
    for (int i = 0; i < 8; i++) {
      digest32[i * 2]     = l32_from_64 (digest[i]);
      digest32[i * 2 + 1] = h32_from_64 (digest[i]);
    }

  sha512_update(&ctx, digest32, sizeof(digest32) * 8);
  }

    sha512_final (&ctx);

    const u32 r0 = l32_from_64_S (ctx.h[7]);
    const u32 r1 = h32_from_64_S (ctx.h[7]);
    const u32 r2 = l32_from_64_S (ctx.h[3]);
    const u32 r3 = h32_from_64_S (ctx.h[3]);

    COMPARE_M_SCALAR (r0, r1, r2, r3);
  }
}

KERNEL_FQ void m01710_sxx (KERN_ATTR_RULES ())
{
  const u64 lid = get_local_id (0);
  const u64 gid = get_global_id (0);

  if (gid >= GID_CNT) return;

  const u32 search[4] =
  {
    digests_buf[DIGESTS_OFFSET_HOST].digest_buf[DGST_R0],
    digests_buf[DIGESTS_OFFSET_HOST].digest_buf[DGST_R1],
    digests_buf[DIGESTS_OFFSET_HOST].digest_buf[DGST_R2],
    digests_buf[DIGESTS_OFFSET_HOST].digest_buf[DGST_R3]
  };

  COPY_PW (pws[gid]);

  const u32 salt_len = salt_bufs[SALT_POS_HOST].salt_len;

  u32 s[64] = { 0 };

  for (u32 i = 0, idx = 0; i < salt_len; i += 4, idx += 1)
  {
    s[idx] = hc_swap32_S (salt_bufs[SALT_POS_HOST].salt_buf[idx]);
  }

  for (u32 il_pos = 0; il_pos < IL_CNT; il_pos++)
  {
    pw_t tmp = PASTE_PW;

    tmp.pw_len = apply_rules (rules_buf[il_pos].cmds, tmp.i, tmp.pw_len);

    sha512_ctx_t ctx;
    sha512_init (&ctx);
    sha512_update_swap (&ctx, tmp.i, tmp.pw_len);
    sha512_update (&ctx, s, salt_len);

    // Loop for 12 rounds
    for (int round = 0; round < 11; round++) {
        u64 digest[8];
        for (int i = 0; i < 8; i++) {
            digest[i] = ctx.h[i];
}


        sha512_init(&ctx);

        u32 digest32[16];
        for (int i = 0; i < 8; i++) {
            digest32[i * 2]     = l32_from_64 (digest[i]);
            digest32[i * 2 + 1] = h32_from_64 (digest[i]);
        }

        sha512_update(&ctx, digest32, sizeof(digest32) * 8);
    }

    sha512_final (&ctx);

    const u32 r0 = l32_from_64_S (ctx.h[7]);
    const u32 r1 = h32_from_64_S (ctx.h[7]);
    const u32 r2 = l32_from_64_S (ctx.h[3]);
    const u32 r3 = h32_from_64_S (ctx.h[3]);

    COMPARE_S_SCALAR (r0, r1, r2, r3);
  }
}"
BZ2c8zsu,module_01712.c,little2379,C,Sunday 12th of November 2023 10:18:24 PM CDT,"/**
 * Author......: See docs/credits.txt
 * License.....: MIT
 */

#include ""common.h""
#include ""types.h""
#include ""modules.h""
#include ""bitops.h""
#include ""convert.h""
#include ""shared.h""

static const u32   ATTACK_EXEC    = ATTACK_EXEC_INSIDE_KERNEL;
static const u32   DGST_POS0      = 14;
static const u32   DGST_POS1      = 15;
static const u32   DGST_POS2      = 6;
static const u32   DGST_POS3      = 7;
static const u32   DGST_SIZE      = DGST_SIZE_8_8;
static const u32   HASH_CATEGORY  = HASH_CATEGORY_RAW_HASH_SALTED;
static const char *HASH_NAME      = ""sha512($pass.$salt) [12 rounds]"";
static const u64   KERN_TYPE      = 1712; // Updated for -m 1712
static const u32   OPTI_TYPE      = OPTI_TYPE_ZERO_BYTE
                                  | OPTI_TYPE_PRECOMPUTE_INIT
                                  | OPTI_TYPE_EARLY_SKIP
                                  | OPTI_TYPE_APPENDED_SALT
                                  | OPTI_TYPE_USES_BITS_64
                                  | OPTI_TYPE_RAW_HASH;
static const u64   OPTS_TYPE      = OPTS_TYPE_STOCK_MODULE
                                  | OPTS_TYPE_PT_GENERATE_BE
                                  | OPTS_TYPE_ST_ADD80
                                  | OPTS_TYPE_ST_ADDBITS15;
static const u32   SALT_TYPE      = SALT_TYPE_GENERIC;
static const char *ST_PASS        = ""Lucyluna1"";
static const char *ST_HASH        = ""fa050d5a1659a626dfc90602dfdf9b0b8ab8140fd10979e8fb594286776c26b96bdb206dff323ea9b7bbe505937e125bc5e18db421d745730953f540045a9e58:eaGXQa2bH6uBjnmSqoxd"";

u32         module_attack_exec    (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return ATTACK_EXEC;     }
u32         module_dgst_pos0      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return DGST_POS0;       }
u32         module_dgst_pos1      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return DGST_POS1;       }
u32         module_dgst_pos2      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return DGST_POS2;       }
u32         module_dgst_pos3      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return DGST_POS3;       }
u32         module_dgst_size      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return DGST_SIZE;       }
u32         module_hash_category  (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return HASH_CATEGORY;   }
const char *module_hash_name      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return HASH_NAME;       }
u64         module_kern_type      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return KERN_TYPE;       }
u32         module_opti_type      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return OPTI_TYPE;       }
u64         module_opts_type      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return OPTS_TYPE;       }
u32         module_salt_type      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return SALT_TYPE;       }
const char *module_st_hash        (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return ST_HASH;         }
const char *module_st_pass        (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return ST_PASS;         }

char *module_jit_build_options (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra, MAYBE_UNUSED const hashes_t *hashes, MAYBE_UNUSED const hc_device_param_t *device_param)
{
  char *jit_build_options = NULL;

  // Extra treatment for Apple systems
  if (device_param->opencl_platform_vendor_id == VENDOR_ID_APPLE)
  {
    // Metal
    if (device_param->is_metal == true)
    {
      hc_asprintf (&jit_build_options, ""-D _unroll"");
    }

    return jit_build_options;
  }

  // HIP
  if (device_param->opencl_device_vendor_id == VENDOR_ID_AMD_USE_HIP)
  {
    hc_asprintf (&jit_build_options, ""-D _unroll"");
  }

  // ROCM
  if ((device_param->opencl_device_vendor_id == VENDOR_ID_AMD) && (device_param->has_vperm == true))
  {
    hc_asprintf (&jit_build_options, ""-D _unroll"");
  }

  return jit_build_options;
}

int module_hash_decode (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED void *digest_buf, MAYBE_UNUSED salt_t *salt, MAYBE_UNUSED void *esalt_buf, MAYBE_UNUSED void *hook_salt_buf, MAYBE_UNUSED hashinfo_t *hash_info, const char *line_buf, MAYBE_UNUSED const int line_len)
{
  u64 *digest = (u64 *) digest_buf;

  hc_token_t token;

  memset (&token, 0, sizeof (hc_token_t));

  token.token_cnt  = 2;

  token.sep[0]     = hashconfig->separator;
  token.len[0]     = 128;
  token.attr[0]    = TOKEN_ATTR_FIXED_LENGTH
                   | TOKEN_ATTR_VERIFY_HEX;

  token.len_min[1] = SALT_MIN;
  token.len_max[1] = SALT_MAX;
  token.attr[1]    = TOKEN_ATTR_VERIFY_LENGTH;

  if (hashconfig->opts_type & OPTS_TYPE_ST_HEX)
  {
    token.len_min[1] *= 2;
    token.len_max[1] *= 2;

    token.attr[1] |= TOKEN_ATTR_VERIFY_HEX;
  }

  const int rc_tokenizer = input_tokenizer ((const u8 *) line_buf, line_len, &token);

  if (rc_tokenizer != PARSER_OK) return (rc_tokenizer);

  const u8 *hash_pos = token.buf[0];

  digest[0] = hex_to_u64 (hash_pos +   0);
  digest[1] = hex_to_u64 (hash_pos +  16);
  digest[2] = hex_to_u64 (hash_pos +  32);
  digest[3] = hex_to_u64 (hash_pos +  48);
  digest[4] = hex_to_u64 (hash_pos +  64);
  digest[5] = hex_to_u64 (hash_pos +  80);
  digest[6] = hex_to_u64 (hash_pos +  96);
  digest[7] = hex_to_u64 (hash_pos + 112);

  digest[0] = byte_swap_64 (digest[0]);
  digest[1] = byte_swap_64 (digest[1]);
  digest[2] = byte_swap_64 (digest[2]);
  digest[3] = byte_swap_64 (digest[3]);
  digest[4] = byte_swap_64 (digest[4]);
  digest[5] = byte_swap_64 (digest[5]);
  digest[6] = byte_swap_64 (digest[6]);
  digest[7] = byte_swap_64 (digest[7]);

  if (hashconfig->opti_type & OPTI_TYPE_OPTIMIZED_KERNEL)
  {
    digest[0] -= SHA512M_A;
    digest[1] -= SHA512M_B;
    digest[2] -= SHA512M_C;
    digest[3] -= SHA512M_D;
    digest[4] -= SHA512M_E;
    digest[5] -= SHA512M_F;
    digest[6] -= SHA512M_G;
    digest[7] -= SHA512M_H;
  }

  const u8 *salt_pos = token.buf[1];
  const int salt_len = token.len[1];

  const bool parse_rc = generic_salt_decode (hashconfig, salt_pos, salt_len, (u8 *) salt->salt_buf, (int *) &salt->salt_len);

  if (parse_rc == false) return (PARSER_SALT_LENGTH);

  return (PARSER_OK);
}

int module_hash_encode (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const void *digest_buf, MAYBE_UNUSED const salt_t *salt, MAYBE_UNUSED const void *esalt_buf, MAYBE_UNUSED const void *hook_salt_buf, MAYBE_UNUSED const hashinfo_t *hash_info, char *line_buf, MAYBE_UNUSED const int line_size)
{
  const u64 *digest = (const u64 *) digest_buf;

  // we can not change anything in the original buffer, otherwise destroying sorting
  // therefore create some local buffer

  u64 tmp[8];

  tmp[0] = digest[0];
  tmp[1] = digest[1];
  tmp[2] = digest[2];
  tmp[3] = digest[3];
  tmp[4] = digest[4];
  tmp[5] = digest[5];
  tmp[6] = digest[6];
  tmp[7] = digest[7];

  if (hashconfig->opti_type & OPTI_TYPE_OPTIMIZED_KERNEL)
  {
    tmp[0] += SHA512M_A;
    tmp[1] += SHA512M_B;
    tmp[2] += SHA512M_C;
    tmp[3] += SHA512M_D;
    tmp[4] += SHA512M_E;
    tmp[5] += SHA512M_F;
    tmp[6] += SHA512M_G;
    tmp[7] += SHA512M_H;
  }

  tmp[0] = byte_swap_64 (tmp[0]);
  tmp[1] = byte_swap_64 (tmp[1]);
  tmp[2] = byte_swap_64 (tmp[2]);
  tmp[3] = byte_swap_64 (tmp[3]);
  tmp[4] = byte_swap_64 (tmp[4]);
  tmp[5] = byte_swap_64 (tmp[5]);
  tmp[6] = byte_swap_64 (tmp[6]);
  tmp[7] = byte_swap_64 (tmp[7]);

  u8 *out_buf = (u8 *) line_buf;

  int out_len = 0;

  u64_to_hex (tmp[0], out_buf + out_len); out_len += 16;
  u64_to_hex (tmp[1], out_buf + out_len); out_len += 16;
  u64_to_hex (tmp[2], out_buf + out_len); out_len += 16;
  u64_to_hex (tmp[3], out_buf + out_len); out_len += 16;
  u64_to_hex (tmp[4], out_buf + out_len); out_len += 16;
  u64_to_hex (tmp[5], out_buf + out_len); out_len += 16;
  u64_to_hex (tmp[6], out_buf + out_len); out_len += 16;
  u64_to_hex (tmp[7], out_buf + out_len); out_len += 16;

  out_buf[out_len] = hashconfig->separator;

  out_len += 1;

  out_len += generic_salt_encode (hashconfig, (const u8 *) salt->salt_buf, (const int) salt->salt_len, out_buf + out_len);

  return out_len;
}

void module_init (module_ctx_t *module_ctx)
{
  module_ctx->module_context_size             = MODULE_CONTEXT_SIZE_CURRENT;
  module_ctx->module_interface_version        = MODULE_INTERFACE_VERSION_CURRENT;

  module_ctx->module_attack_exec              = module_attack_exec;
  module_ctx->module_benchmark_esalt          = MODULE_DEFAULT;
  module_ctx->module_benchmark_hook_salt      = MODULE_DEFAULT;
  module_ctx->module_benchmark_mask           = MODULE_DEFAULT;
  module_ctx->module_benchmark_charset        = MODULE_DEFAULT;
  module_ctx->module_benchmark_salt           = MODULE_DEFAULT;
  module_ctx->module_build_plain_postprocess  = MODULE_DEFAULT;
  module_ctx->module_deep_comp_kernel         = MODULE_DEFAULT;
  module_ctx->module_deprecated_notice        = MODULE_DEFAULT;
  module_ctx->module_dgst_pos0                = module_dgst_pos0;
  module_ctx->module_dgst_pos1                = module_dgst_pos1;
  module_ctx->module_dgst_pos2                = module_dgst_pos2;
  module_ctx->module_dgst_pos3                = module_dgst_pos3;
  module_ctx->module_dgst_size                = module_dgst_size;
  module_ctx->module_dictstat_disable         = MODULE_DEFAULT;
  module_ctx->module_esalt_size               = MODULE_DEFAULT;
  module_ctx->module_extra_buffer_size        = MODULE_DEFAULT;
  module_ctx->module_extra_tmp_size           = MODULE_DEFAULT;
  module_ctx->module_extra_tuningdb_block     = MODULE_DEFAULT;
  module_ctx->module_forced_outfile_format    = MODULE_DEFAULT;
  module_ctx->module_hash_binary_count        = MODULE_DEFAULT;
  module_ctx->module_hash_binary_parse        = MODULE_DEFAULT;
  module_ctx->module_hash_binary_save         = MODULE_DEFAULT;
  module_ctx->module_hash_decode_postprocess  = MODULE_DEFAULT;
  module_ctx->module_hash_decode_potfile      = MODULE_DEFAULT;
  module_ctx->module_hash_decode_zero_hash    = MODULE_DEFAULT;
  module_ctx->module_hash_decode              = module_hash_decode;
  module_ctx->module_hash_encode_status       = MODULE_DEFAULT;
  module_ctx->module_hash_encode_potfile      = MODULE_DEFAULT;
  module_ctx->module_hash_encode              = module_hash_encode;
  module_ctx->module_hash_init_selftest       = MODULE_DEFAULT;
  module_ctx->module_hash_mode                = MODULE_DEFAULT;
  module_ctx->module_hash_category            = module_hash_category;
  module_ctx->module_hash_name                = module_hash_name;
  module_ctx->module_hashes_count_min         = MODULE_DEFAULT;
  module_ctx->module_hashes_count_max         = MODULE_DEFAULT;
  module_ctx->module_hlfmt_disable            = MODULE_DEFAULT;
  module_ctx->module_hook_extra_param_size    = MODULE_DEFAULT;
  module_ctx->module_hook_extra_param_init    = MODULE_DEFAULT;
  module_ctx->module_hook_extra_param_term    = MODULE_DEFAULT;
  module_ctx->module_hook12                   = MODULE_DEFAULT;
  module_ctx->module_hook23                   = MODULE_DEFAULT;
  module_ctx->module_hook_salt_size           = MODULE_DEFAULT;
  module_ctx->module_hook_size                = MODULE_DEFAULT;
  module_ctx->module_jit_build_options        = module_jit_build_options;
  module_ctx->module_jit_cache_disable        = MODULE_DEFAULT;
  module_ctx->module_kernel_accel_max         = MODULE_DEFAULT;
  module_ctx->module_kernel_accel_min         = MODULE_DEFAULT;
  module_ctx->module_kernel_loops_max         = MODULE_DEFAULT;
  module_ctx->module_kernel_loops_min         = MODULE_DEFAULT;
  module_ctx->module_kernel_threads_max       = MODULE_DEFAULT;
  module_ctx->module_kernel_threads_min       = MODULE_DEFAULT;
  module_ctx->module_kern_type                = module_kern_type;
  module_ctx->module_kern_type_dynamic        = MODULE_DEFAULT;
  module_ctx->module_opti_type                = module_opti_type;
  module_ctx->module_opts_type                = module_opts_type;
  module_ctx->module_outfile_check_disable    = MODULE_DEFAULT;
  module_ctx->module_outfile_check_nocomp     = MODULE_DEFAULT;
  module_ctx->module_potfile_custom_check     = MODULE_DEFAULT;
  module_ctx->module_potfile_disable          = MODULE_DEFAULT;
  module_ctx->module_potfile_keep_all_hashes  = MODULE_DEFAULT;
  module_ctx->module_pwdump_column            = MODULE_DEFAULT;
  module_ctx->module_pw_max                   = MODULE_DEFAULT;
  module_ctx->module_pw_min                   = MODULE_DEFAULT;
  module_ctx->module_salt_max                 = MODULE_DEFAULT;
  module_ctx->module_salt_min                 = MODULE_DEFAULT;
  module_ctx->module_salt_type                = module_salt_type;
  module_ctx->module_separator                = MODULE_DEFAULT;
  module_ctx->module_st_hash                  = module_st_hash;
  module_ctx->module_st_pass                  = module_st_pass;
  module_ctx->module_tmp_size                 = MODULE_DEFAULT;
  module_ctx->module_unstable_warning         = MODULE_DEFAULT;
  module_ctx->module_warmup_disable           = MODULE_DEFAULT;
}"
F2VP4GWL,going well snowybot,coinwalk,JavaScript,Sunday 12th of November 2023 10:15:12 PM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var divide = 300;
var changer = (divide/7);
var base = Number((originalbal/divide).toFixed(8));
var floatingbase = base;
var taget = (originalbal*7);
var groupedten = (base*10);
var groupedseven = (base*6.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var over = 6.9;
var under = 2.9;
var fart = 1;
var freak = false;
var oldbolance = ((Math.floor(originalbal/groupedten))*groupedten);
var oldbolancetree = ((Math.floor(originalbal/groupedten))*groupedten);
var oldbolancetwo = ((Math.floor(originalbal/groupedten))*groupedten);
 
 function getR(minz, maxz) {
  minz = Math.ceil(minz);
  maxz = Math.floor(maxz);
  return Math.floor(Math.random() * (maxz - minz + 1)) + minz;
}
 
 
function get(){
console.clear();
setTimeout(function(){
bolance = document.getElementById('pct_balance').value;
if (bolance>(oldbolance+(floatingbase*over))){
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    freak = true;
    oldbolance = parseFloat(bolance);
}
if (bolance<(oldbolance-(floatingbase*under))){
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    freak = false;
    oldbolance = parseFloat(bolance);
}
if ((bolance>=(oldbolancetree+(oldbolancetree/changer)))&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    fart = 1;   
    over = 6.9;
    under = 2.9;
    freak = false;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
    oldbolancetwo = ((Math.floor(bolance/groupedten))*groupedten);
    oldbolancetree = ((Math.floor(bolance/groupedten))*groupedten);
}
if (((bolance-floatingbase)<=(oldbolancetwo-(oldbolancetwo/changer)))&&(bolance<oldbolancetwo)&&(floatingbase>base)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    fart = 0;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
    oldbolancetwo = ((Math.floor(bolance/groupedten))*groupedten);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = ((floatingbase*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
}, (getR(100,200)));
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), (getR(200,300)));
}
get();"
rmzJcPjc,Untitled,adalrigopisano,HTML,Sunday 12th of November 2023 10:13:05 PM CDT,"<!DOCTYPE html>
<html>
<head>
<title>Page Title</title>
</head>
<body>
<script src=""https://ssl.p.jwpcdn.com/player/v/8.30.0/jwplayer.js""></script>
<script> jwplayer.key = 'XSuP4qMl+9tK17QNb+4+th2Pm9AWgMO/cYH8CI0HGGr7bdjo';
</script>
    <div id=""player""></div>
    <script> 
        var playerInstance = jwplayer(""player""); 
        playerInstance.setup({ 
            playlist: [{
                ""title"": """",
                ""description"": """",
                ""sources"": [
                    {
                        ""default"": false,
                        ""type"": ""mpd"",
                        ""file"":'https://dce-ac-live.cdn.indazn.com/dashdrm/dazn-linear-024/stream.mpd?p=web',
                        ""drm"": {
                            ""clearkey"": { ""keyId"": ""82f8e2a17dac44c0a18f660479349c59"", ""key"": ""1b144f73e6fefe91cd05f850e2b589d0"" }
                        },
                        ""label"": ""0"",
                        ""label"": ""Italian"",
                        ""kind"": ""captions""
                    }
                ]
            }],
            width: ""100%"",
            height: ""100%"",
            aspectratio: ""16:9"",
            allowfullscreen: true,
            autostart: true,
            skin: {
                name: """",
                active: ""RED"", 
                inactive: ""yellow"",
                background: """"
            },
            logo: {
                file: """", // URL o percorso del tuo logo
                link: """", // Link opzionale al tuo sito web
                position: ""top-left"", // Posizione del logo (puoi personalizzarla)
                margin: 0
            }
        });

        jwplayer(""player"").on(""play"", function(e){
            jwplayer(""player"").setCurrentAudioTrack(0);
        });
    </script>
    <style>
        @keyframes blink {
            0% { opacity: 1; }
            50% { opacity: 0; }
            100% { opacity: 1; }
        }
        
        .jw-text-live::before {
            background-color: red !important;
            animation: blink 1s infinite;
        }
    </style>
</body>
</html>"
ujsRc1E9,Nigerian scammers [12-11-3/2023],bombaires,AIMMS,Sunday 12th of November 2023 09:05:57 PM CDT,"<a href=""mailto:jwala0061@gmail.com"">jwala0061@gmail.com</a>
<a href=""mailto:j.w.ala.0.0.6.1@gmail.com"">j.w.ala.0.0.6.1@gmail.com</a>
<a href=""mailto:jw.a.la006.1@gmail.com"">jw.a.la006.1@gmail.com</a>
<a href=""mailto:jwa.l.a.006.1@gmail.com"">jwa.l.a.006.1@gmail.com</a>
<a href=""mailto:j.w.a.l.a.0061@gmail.com"">j.w.a.l.a.0061@gmail.com</a>
<a href=""mailto:jwal.a.00.61@gmail.com"">jwal.a.00.61@gmail.com</a>
<a href=""mailto:j.wa.l.a.0.0.6.1@gmail.com"">j.wa.l.a.0.0.6.1@gmail.com</a>
<a href=""mailto:j.w.a.l.a0061@gmail.com"">j.w.a.l.a0061@gmail.com</a>
<a href=""mailto:jwa.l.a0.06.1@gmail.com"">jwa.l.a0.06.1@gmail.com</a>
<a href=""mailto:jw.al.a00.61@gmail.com"">jw.al.a00.61@gmail.com</a>
<a href=""mailto:jw.a.la00.61@gmail.com"">jw.a.la00.61@gmail.com</a>
<a href=""mailto:jwal.a0061@gmail.com"">jwal.a0061@gmail.com</a>
<a href=""mailto:jwa.la0.0.61@gmail.com"">jwa.la0.0.61@gmail.com</a>
<a href=""mailto:j.wal.a0.061@gmail.com"">j.wal.a0.061@gmail.com</a>
<a href=""mailto:jwala.0061@gmail.com"">jwala.0061@gmail.com</a>
<a href=""mailto:j.wala.00.6.1@gmail.com"">j.wala.00.6.1@gmail.com</a>
<a href=""mailto:jw.ala.006.1@gmail.com"">jw.ala.006.1@gmail.com</a>
<a href=""mailto:j.wala.00.61@gmail.com"">j.wala.00.61@gmail.com</a>
<a href=""mailto:jwal.a0.06.1@gmail.com"">jwal.a0.06.1@gmail.com</a>
<a href=""mailto:j.wa.la.0061@gmail.com"">j.wa.la.0061@gmail.com</a>
<a href=""mailto:j.w.ala0061@gmail.com"">j.w.ala0061@gmail.com</a>
<a href=""mailto:jwala0.0.6.1@gmail.com"">jwala0.0.6.1@gmail.com</a>
<a href=""mailto:jw.ala.0061@gmail.com"">jw.ala.0061@gmail.com</a>
<a href=""mailto:jw.a.l.a.0.061@gmail.com"">jw.a.l.a.0.061@gmail.com</a>
<a href=""mailto:jw.ala.0.0.61@gmail.com"">jw.ala.0.0.61@gmail.com</a>
<a href=""mailto:j.w.a.la.006.1@gmail.com"">j.w.a.la.006.1@gmail.com</a>
<a href=""mailto:j.w.a.la0.0.6.1@gmail.com"">j.w.a.la0.0.6.1@gmail.com</a>
<a href=""mailto:jwal.a006.1@gmail.com"">jwal.a006.1@gmail.com</a>
<a href=""mailto:jwa.la.0.06.1@gmail.com"">jwa.la.0.06.1@gmail.com</a>
<a href=""mailto:j.w.a.l.a0.0.61@gmail.com"">j.w.a.l.a0.0.61@gmail.com</a>
<a href=""mailto:j.wa.la0061@gmail.com"">j.wa.la0061@gmail.com</a>
<a href=""mailto:jwala006.1@gmail.com"">jwala006.1@gmail.com</a>
<a href=""mailto:jw.al.a.0.0.6.1@gmail.com"">jw.al.a.0.0.6.1@gmail.com</a>
<a href=""mailto:jw.a.la.00.6.1@gmail.com"">jw.a.la.00.6.1@gmail.com</a>
<a href=""mailto:j.wal.a.0061@gmail.com"">j.wal.a.0061@gmail.com</a>
<a href=""mailto:jw.a.la0.06.1@gmail.com"">jw.a.la0.06.1@gmail.com</a>
<a href=""mailto:jw.al.a.0.06.1@gmail.com"">jw.al.a.0.06.1@gmail.com</a>
<a href=""mailto:jwala.0.061@gmail.com"">jwala.0.061@gmail.com</a>
<a href=""mailto:jw.a.l.a0.061@gmail.com"">jw.a.l.a0.061@gmail.com</a>
<a href=""mailto:j.wal.a.006.1@gmail.com"">j.wal.a.006.1@gmail.com</a>
<a href=""mailto:j.wala0061@gmail.com"">j.wala0061@gmail.com</a>
<a href=""mailto:j.w.a.l.a0.06.1@gmail.com"">j.w.a.l.a0.06.1@gmail.com</a>
<a href=""mailto:j.wa.la.00.6.1@gmail.com"">j.wa.la.00.6.1@gmail.com</a>
<a href=""mailto:j.w.a.la.0.0.6.1@gmail.com"">j.w.a.la.0.0.6.1@gmail.com</a>
<a href=""mailto:jwa.la0061@gmail.com"">jwa.la0061@gmail.com</a>
<a href=""mailto:jwa.l.a0.0.6.1@gmail.com"">jwa.l.a0.0.6.1@gmail.com</a>
<a href=""mailto:j.w.ala.0.06.1@gmail.com"">j.w.ala.0.06.1@gmail.com</a>
<a href=""mailto:jw.al.a006.1@gmail.com"">jw.al.a006.1@gmail.com</a>
<a href=""mailto:jwal.a0.0.61@gmail.com"">jwal.a0.0.61@gmail.com</a>
<a href=""mailto:jw.al.a.00.6.1@gmail.com"">jw.al.a.00.6.1@gmail.com</a>
<a href=""mailto:jwa.l.a.0.061@gmail.com"">jwa.l.a.0.061@gmail.com</a>
<a href=""mailto:j.wala.0.0.6.1@gmail.com"">j.wala.0.0.6.1@gmail.com</a>
<a href=""mailto:j.wala.0061@gmail.com"">j.wala.0061@gmail.com</a>
<a href=""mailto:jwa.l.a.00.61@gmail.com"">jwa.l.a.00.61@gmail.com</a>
<a href=""mailto:jw.ala.0.06.1@gmail.com"">jw.ala.0.06.1@gmail.com</a>
<a href=""mailto:jw.a.la0.0.61@gmail.com"">jw.a.la0.0.61@gmail.com</a>
<a href=""mailto:j.w.a.la0061@gmail.com"">j.w.a.la0061@gmail.com</a>
<a href=""mailto:jwala.0.06.1@gmail.com"">jwala.0.06.1@gmail.com</a>
<a href=""mailto:j.wa.l.a0.0.6.1@gmail.com"">j.wa.l.a0.0.6.1@gmail.com</a>
<a href=""mailto:jwa.la.0.0.61@gmail.com"">jwa.la.0.0.61@gmail.com</a>
<a href=""mailto:jw.a.la0061@gmail.com"">jw.a.la0061@gmail.com</a>
<a href=""mailto:jw.a.l.a00.6.1@gmail.com"">jw.a.l.a00.6.1@gmail.com</a>
<a href=""mailto:j.wa.la.0.0.61@gmail.com"">j.wa.la.0.0.61@gmail.com</a>
<a href=""mailto:jw.a.la.00.61@gmail.com"">jw.a.la.00.61@gmail.com</a>
<a href=""mailto:jwala00.6.1@gmail.com"">jwala00.6.1@gmail.com</a>
<a href=""mailto:jw.ala.0.061@gmail.com"">jw.ala.0.061@gmail.com</a>
<a href=""mailto:jwa.l.a.0.0.6.1@gmail.com"">jwa.l.a.0.0.6.1@gmail.com</a>
<a href=""mailto:jwa.la.00.61@gmail.com"">jwa.la.00.61@gmail.com</a>
<a href=""mailto:j.wal.a0061@gmail.com"">j.wal.a0061@gmail.com</a>
<a href=""mailto:j.wa.la00.61@gmail.com"">j.wa.la00.61@gmail.com</a>
<a href=""mailto:j.wala.0.0.61@gmail.com"">j.wala.0.0.61@gmail.com</a>
<a href=""mailto:jw.a.l.a0061@gmail.com"">jw.a.l.a0061@gmail.com</a>
<a href=""mailto:jw.al.a.00.61@gmail.com"">jw.al.a.00.61@gmail.com</a>
<a href=""mailto:jw.ala0.0.6.1@gmail.com"">jw.ala0.0.6.1@gmail.com</a>
<a href=""mailto:jw.al.a.0.0.61@gmail.com"">jw.al.a.0.0.61@gmail.com</a>
<a href=""mailto:jw.ala0.0.61@gmail.com"">jw.ala0.0.61@gmail.com</a>
<a href=""mailto:j.w.ala.0.061@gmail.com"">j.w.ala.0.061@gmail.com</a>
<a href=""mailto:j.w.ala.0061@gmail.com"">j.w.ala.0061@gmail.com</a>
<a href=""mailto:jwal.a.0.06.1@gmail.com"">jwal.a.0.06.1@gmail.com</a>
<a href=""mailto:j.wa.la.0.06.1@gmail.com"">j.wa.la.0.06.1@gmail.com</a>
<a href=""mailto:jw.al.a0.061@gmail.com"">jw.al.a0.061@gmail.com</a>
<a href=""mailto:jw.ala00.61@gmail.com"">jw.ala00.61@gmail.com</a>
<a href=""mailto:jwala00.61@gmail.com"">jwala00.61@gmail.com</a>
<a href=""mailto:j.w.al.a.0061@gmail.com"">j.w.al.a.0061@gmail.com</a>
<a href=""mailto:jw.a.l.a.00.6.1@gmail.com"">jw.a.l.a.00.6.1@gmail.com</a>
<a href=""mailto:j.wal.a006.1@gmail.com"">j.wal.a006.1@gmail.com</a>
<a href=""mailto:jwala0.061@gmail.com"">jwala0.061@gmail.com</a>
<a href=""mailto:j.wa.l.a.0.0.61@gmail.com"">j.wa.l.a.0.0.61@gmail.com</a>
<a href=""mailto:j.w.a.la00.61@gmail.com"">j.w.a.la00.61@gmail.com</a>
<a href=""mailto:j.wala.0.061@gmail.com"">j.wala.0.061@gmail.com</a>
<a href=""mailto:j.wa.la0.06.1@gmail.com"">j.wa.la0.06.1@gmail.com</a>
<a href=""mailto:j.w.ala.00.61@gmail.com"">j.w.ala.00.61@gmail.com</a>
<a href=""mailto:j.w.al.a.006.1@gmail.com"">j.w.al.a.006.1@gmail.com</a>
<a href=""mailto:jwal.a.00.6.1@gmail.com"">jwal.a.00.6.1@gmail.com</a>
<a href=""mailto:j.wa.l.a.006.1@gmail.com"">j.wa.l.a.006.1@gmail.com</a>
<a href=""mailto:jw.ala.0.0.6.1@gmail.com"">jw.ala.0.0.6.1@gmail.com</a>
<a href=""mailto:j.w.a.l.a.006.1@gmail.com"">j.w.a.l.a.006.1@gmail.com</a>
<a href=""mailto:j.wala00.61@gmail.com"">j.wala00.61@gmail.com</a>
<a href=""mailto:j.wa.l.a.00.6.1@gmail.com"">j.wa.l.a.00.6.1@gmail.com</a>
<a href=""mailto:j.wa.la.0.0.6.1@gmail.com"">j.wa.la.0.0.6.1@gmail.com</a>
<a href=""mailto:jw.ala.00.6.1@gmail.com"">jw.ala.00.6.1@gmail.com</a>
<a href=""mailto:j.wa.l.a0061@gmail.com"">j.wa.l.a0061@gmail.com</a>
<a href=""mailto:jwa.l.a.0.0.61@gmail.com"">jwa.l.a.0.0.61@gmail.com</a>
<a href=""mailto:jwala.0.0.61@gmail.com"">jwala.0.0.61@gmail.com</a>
<a href=""mailto:jw.a.l.a0.06.1@gmail.com"">jw.a.l.a0.06.1@gmail.com</a>
<a href=""mailto:jwala0.0.61@gmail.com"">jwala0.0.61@gmail.com</a>
<a href=""mailto:j.wal.a0.0.61@gmail.com"">j.wal.a0.0.61@gmail.com</a>
<a href=""mailto:j.w.a.l.a.0.0.6.1@gmail.com"">j.w.a.l.a.0.0.6.1@gmail.com</a>
<a href=""mailto:jw.a.l.a.0.0.6.1@gmail.com"">jw.a.l.a.0.0.6.1@gmail.com</a>
<a href=""mailto:j.w.a.la.0.0.61@gmail.com"">j.w.a.la.0.0.61@gmail.com</a>
<a href=""mailto:j.wal.a.00.61@gmail.com"">j.wal.a.00.61@gmail.com</a>
<a href=""mailto:j.w.al.a0.061@gmail.com"">j.w.al.a0.061@gmail.com</a>
<a href=""mailto:j.wal.a.0.06.1@gmail.com"">j.wal.a.0.06.1@gmail.com</a>
<a href=""mailto:jwa.la0.06.1@gmail.com"">jwa.la0.06.1@gmail.com</a>
<a href=""mailto:jw.a.l.a.006.1@gmail.com"">jw.a.l.a.006.1@gmail.com</a>
<a href=""mailto:j.wa.l.a0.061@gmail.com"">j.wa.l.a0.061@gmail.com</a>
<a href=""mailto:jwa.la006.1@gmail.com"">jwa.la006.1@gmail.com</a>
<a href=""mailto:j.wa.l.a00.6.1@gmail.com"">j.wa.l.a00.6.1@gmail.com</a>
<a href=""mailto:j.wa.la0.0.61@gmail.com"">j.wa.la0.0.61@gmail.com</a>
<a href=""mailto:j.wa.l.a0.0.61@gmail.com"">j.wa.l.a0.0.61@gmail.com</a>
<a href=""mailto:j.wal.a0.0.6.1@gmail.com"">j.wal.a0.0.6.1@gmail.com</a>
<a href=""mailto:jw.al.a0.0.61@gmail.com"">jw.al.a0.0.61@gmail.com</a>
<a href=""mailto:jwa.l.a.0061@gmail.com"">jwa.l.a.0061@gmail.com</a>
<a href=""mailto:j.w.ala.0.0.61@gmail.com"">j.w.ala.0.0.61@gmail.com</a>
<a href=""mailto:j.w.a.l.a00.6.1@gmail.com"">j.w.a.l.a00.6.1@gmail.com</a>
<a href=""mailto:jwal.a00.61@gmail.com"">jwal.a00.61@gmail.com</a>
<a href=""mailto:j.w.a.l.a.0.0.61@gmail.com"">j.w.a.l.a.0.0.61@gmail.com</a>
<a href=""mailto:jw.a.la00.6.1@gmail.com"">jw.a.la00.6.1@gmail.com</a>
<a href=""mailto:jw.a.l.a.0061@gmail.com"">jw.a.l.a.0061@gmail.com</a>
<a href=""mailto:jw.ala0061@gmail.com"">jw.ala0061@gmail.com</a>
<a href=""mailto:j.w.ala0.061@gmail.com"">j.w.ala0.061@gmail.com</a>
<a href=""mailto:j.w.a.la0.0.61@gmail.com"">j.w.a.la0.0.61@gmail.com</a>
<a href=""mailto:j.wal.a.00.6.1@gmail.com"">j.wal.a.00.6.1@gmail.com</a>
<a href=""mailto:jw.a.l.a.0.06.1@gmail.com"">jw.a.l.a.0.06.1@gmail.com</a>
<a href=""mailto:j.w.al.a0.0.6.1@gmail.com"">j.w.al.a0.0.6.1@gmail.com</a>
<a href=""mailto:j.wa.la0.0.6.1@gmail.com"">j.wa.la0.0.6.1@gmail.com</a>
<a href=""mailto:jw.al.a0061@gmail.com"">jw.al.a0061@gmail.com</a>
<a href=""mailto:jw.ala.00.61@gmail.com"">jw.ala.00.61@gmail.com</a>
<a href=""mailto:jwa.la.0.0.6.1@gmail.com"">jwa.la.0.0.6.1@gmail.com</a>
<a href=""mailto:j.wa.la0.061@gmail.com"">j.wa.la0.061@gmail.com</a>
<a href=""mailto:j.w.ala00.61@gmail.com"">j.w.ala00.61@gmail.com</a>
<a href=""mailto:j.w.a.l.a.00.6.1@gmail.com"">j.w.a.l.a.00.6.1@gmail.com</a>
<a href=""mailto:j.w.a.l.a006.1@gmail.com"">j.w.a.l.a006.1@gmail.com</a>
<a href=""mailto:jwa.l.a0.0.61@gmail.com"">jwa.l.a0.0.61@gmail.com</a>
<a href=""mailto:jwal.a.0.0.6.1@gmail.com"">jwal.a.0.0.6.1@gmail.com</a>
<a href=""mailto:j.wa.l.a.0061@gmail.com"">j.wa.l.a.0061@gmail.com</a>
<a href=""mailto:jw.a.la.0.061@gmail.com"">jw.a.la.0.061@gmail.com</a>
<a href=""mailto:jwala.006.1@gmail.com"">jwala.006.1@gmail.com</a>
<a href=""mailto:j.w.ala0.0.6.1@gmail.com"">j.w.ala0.0.6.1@gmail.com</a>
<a href=""mailto:jwa.la00.6.1@gmail.com"">jwa.la00.6.1@gmail.com</a>
<a href=""mailto:jw.a.l.a006.1@gmail.com"">jw.a.l.a006.1@gmail.com</a>
<a href=""mailto:j.w.al.a.00.61@gmail.com"">j.w.al.a.00.61@gmail.com</a>
<a href=""mailto:jwala.00.6.1@gmail.com"">jwala.00.6.1@gmail.com</a>
<a href=""mailto:j.wa.l.a006.1@gmail.com"">j.wa.l.a006.1@gmail.com</a>
<a href=""mailto:j.wala.0.06.1@gmail.com"">j.wala.0.06.1@gmail.com</a>
<a href=""mailto:j.wal.a.0.0.61@gmail.com"">j.wal.a.0.0.61@gmail.com</a>
<a href=""mailto:jwala.0.0.6.1@gmail.com"">jwala.0.0.6.1@gmail.com</a>
<a href=""mailto:jw.a.la0.0.6.1@gmail.com"">jw.a.la0.0.6.1@gmail.com</a>
<a href=""mailto:jw.al.a.006.1@gmail.com"">jw.al.a.006.1@gmail.com</a>
<a href=""mailto:jw.al.a0.0.6.1@gmail.com"">jw.al.a0.0.6.1@gmail.com</a>
<a href=""mailto:jwa.l.a006.1@gmail.com"">jwa.l.a006.1@gmail.com</a>
<a href=""mailto:jw.a.la.0.06.1@gmail.com"">jw.a.la.0.06.1@gmail.com</a>
<a href=""mailto:jwal.a.0.0.61@gmail.com"">jwal.a.0.0.61@gmail.com</a>
<a href=""mailto:j.wal.a00.6.1@gmail.com"">j.wal.a00.6.1@gmail.com</a>
<a href=""mailto:j.w.a.la.0.061@gmail.com"">j.w.a.la.0.061@gmail.com</a>
<a href=""mailto:j.w.ala.00.6.1@gmail.com"">j.w.ala.00.6.1@gmail.com</a>
<a href=""mailto:j.w.ala.006.1@gmail.com"">j.w.ala.006.1@gmail.com</a>
<a href=""mailto:j.w.a.la006.1@gmail.com"">j.w.a.la006.1@gmail.com</a>
<a href=""mailto:jw.a.l.a0.0.6.1@gmail.com"">jw.a.l.a0.0.6.1@gmail.com</a>
<a href=""mailto:j.w.al.a0061@gmail.com"">j.w.al.a0061@gmail.com</a>
<a href=""mailto:j.w.a.l.a.0.061@gmail.com"">j.w.a.l.a.0.061@gmail.com</a>
<a href=""mailto:j.wa.la.006.1@gmail.com"">j.wa.la.006.1@gmail.com</a>
<a href=""mailto:j.w.al.a.00.6.1@gmail.com"">j.w.al.a.00.6.1@gmail.com</a>
<a href=""mailto:j.wala006.1@gmail.com"">j.wala006.1@gmail.com</a>
<a href=""mailto:jwa.l.a.00.6.1@gmail.com"">jwa.l.a.00.6.1@gmail.com</a>
<a href=""mailto:j.w.a.la0.061@gmail.com"">j.w.a.la0.061@gmail.com</a>
<a href=""mailto:jwa.la0.0.6.1@gmail.com"">jwa.la0.0.6.1@gmail.com</a>
<a href=""mailto:j.wal.a.0.061@gmail.com"">j.wal.a.0.061@gmail.com</a>
<a href=""mailto:j.wa.l.a00.61@gmail.com"">j.wa.l.a00.61@gmail.com</a>
<a href=""mailto:j.w.al.a.0.0.6.1@gmail.com"">j.w.al.a.0.0.6.1@gmail.com</a>
<a href=""mailto:j.w.a.l.a.0.06.1@gmail.com"">j.w.a.l.a.0.06.1@gmail.com</a>
<a href=""mailto:jwal.a.0.061@gmail.com"">jwal.a.0.061@gmail.com</a>
<a href=""mailto:j.wala0.06.1@gmail.com"">j.wala0.06.1@gmail.com</a>
<a href=""mailto:j.wa.la.00.61@gmail.com"">j.wa.la.00.61@gmail.com</a>
<a href=""mailto:jwa.la.0.061@gmail.com"">jwa.la.0.061@gmail.com</a>
<a href=""mailto:j.w.al.a.0.061@gmail.com"">j.w.al.a.0.061@gmail.com</a>
<a href=""mailto:jw.a.la.0061@gmail.com"">jw.a.la.0061@gmail.com</a>
<a href=""mailto:jwala.00.61@gmail.com"">jwala.00.61@gmail.com</a>
<a href=""mailto:jwa.la00.61@gmail.com"">jwa.la00.61@gmail.com</a>
<a href=""mailto:j.w.ala0.06.1@gmail.com"">j.w.ala0.06.1@gmail.com</a>
<a href=""mailto:j.w.a.la.00.6.1@gmail.com"">j.w.a.la.00.6.1@gmail.com</a>
<a href=""mailto:jw.a.l.a00.61@gmail.com"">jw.a.l.a00.61@gmail.com</a>
<a href=""mailto:j.wal.a00.61@gmail.com"">j.wal.a00.61@gmail.com</a>
<a href=""mailto:j.w.a.la.0061@gmail.com"">j.w.a.la.0061@gmail.com</a>
<a href=""mailto:j.wa.l.a.0.061@gmail.com"">j.wa.l.a.0.061@gmail.com</a>
<a href=""mailto:jw.a.l.a0.0.61@gmail.com"">jw.a.l.a0.0.61@gmail.com</a>
<a href=""mailto:j.w.a.la00.6.1@gmail.com"">j.w.a.la00.6.1@gmail.com</a>
<a href=""mailto:j.w.a.l.a0.061@gmail.com"">j.w.a.l.a0.061@gmail.com</a>
<a href=""mailto:j.w.al.a00.61@gmail.com"">j.w.al.a00.61@gmail.com</a>
<a href=""mailto:j.wala0.0.6.1@gmail.com"">j.wala0.0.6.1@gmail.com</a>
<a href=""mailto:j.w.a.la.0.06.1@gmail.com"">j.w.a.la.0.06.1@gmail.com</a>
<a href=""mailto:gudajim5@googlemail.com"">gudajim5@googlemail.com</a>
<a href=""mailto:gudajim5@googlemail.com"">gudajim5@googlemail.com</a>
<a href=""mailto:g.u.da.j.i.m.5@googlemail.com"">g.u.da.j.i.m.5@googlemail.com</a>
<a href=""mailto:guda.j.i.m5@googlemail.com"">guda.j.i.m5@googlemail.com</a>
<a href=""mailto:g.u.d.ajim5@googlemail.com"">g.u.d.ajim5@googlemail.com</a>
<a href=""mailto:gud.ajim.5@googlemail.com"">gud.ajim.5@googlemail.com</a>
<a href=""mailto:gu.d.a.j.i.m.5@googlemail.com"">gu.d.a.j.i.m.5@googlemail.com</a>
<a href=""mailto:gu.d.a.jim.5@googlemail.com"">gu.d.a.jim.5@googlemail.com</a>
<a href=""mailto:gudaj.i.m.5@googlemail.com"">gudaj.i.m.5@googlemail.com</a>
<a href=""mailto:g.u.daj.i.m5@googlemail.com"">g.u.daj.i.m5@googlemail.com</a>
<a href=""mailto:g.ud.aji.m.5@googlemail.com"">g.ud.aji.m.5@googlemail.com</a>
<a href=""mailto:g.ud.aj.im5@googlemail.com"">g.ud.aj.im5@googlemail.com</a>
<a href=""mailto:guda.jim5@googlemail.com"">guda.jim5@googlemail.com</a>
<a href=""mailto:gud.a.jim.5@googlemail.com"">gud.a.jim.5@googlemail.com</a>
<a href=""mailto:gu.da.j.i.m5@googlemail.com"">gu.da.j.i.m5@googlemail.com</a>
<a href=""mailto:g.udajim5@googlemail.com"">g.udajim5@googlemail.com</a>
<a href=""mailto:gud.aj.i.m.5@googlemail.com"">gud.aj.i.m.5@googlemail.com</a>
<a href=""mailto:gu.da.j.i.m.5@googlemail.com"">gu.da.j.i.m.5@googlemail.com</a>
<a href=""mailto:gudaji.m5@googlemail.com"">gudaji.m5@googlemail.com</a>
<a href=""mailto:g.udaj.i.m5@googlemail.com"">g.udaj.i.m5@googlemail.com</a>
<a href=""mailto:gud.a.j.im5@googlemail.com"">gud.a.j.im5@googlemail.com</a>
<a href=""mailto:g.u.da.j.im.5@googlemail.com"">g.u.da.j.im.5@googlemail.com</a>
<a href=""mailto:g.uda.j.im5@googlemail.com"">g.uda.j.im5@googlemail.com</a>
<a href=""mailto:g.u.daj.im.5@googlemail.com"">g.u.daj.im.5@googlemail.com</a>
<a href=""mailto:gudaj.i.m5@googlemail.com"">gudaj.i.m5@googlemail.com</a>
<a href=""mailto:g.u.d.aj.i.m.5@googlemail.com"">g.u.d.aj.i.m.5@googlemail.com</a>
<a href=""mailto:g.u.d.a.jim.5@googlemail.com"">g.u.d.a.jim.5@googlemail.com</a>
<a href=""mailto:g.ud.a.j.i.m5@googlemail.com"">g.ud.a.j.i.m5@googlemail.com</a>
<a href=""mailto:gu.d.ajim5@googlemail.com"">gu.d.ajim5@googlemail.com</a>
<a href=""mailto:g.u.dajim.5@googlemail.com"">g.u.dajim.5@googlemail.com</a>
<a href=""mailto:g.ud.a.jim.5@googlemail.com"">g.ud.a.jim.5@googlemail.com</a>
<a href=""mailto:g.ud.a.j.im.5@googlemail.com"">g.ud.a.j.im.5@googlemail.com</a>
<a href=""mailto:gu.daj.i.m.5@googlemail.com"">gu.daj.i.m.5@googlemail.com</a>
<a href=""mailto:gu.d.a.ji.m.5@googlemail.com"">gu.d.a.ji.m.5@googlemail.com</a>
<a href=""mailto:gud.ajim5@googlemail.com"">gud.ajim5@googlemail.com</a>
<a href=""mailto:gud.a.jim5@googlemail.com"">gud.a.jim5@googlemail.com</a>
<a href=""mailto:g.uda.ji.m.5@googlemail.com"">g.uda.ji.m.5@googlemail.com</a>
<a href=""mailto:guda.j.i.m.5@googlemail.com"">guda.j.i.m.5@googlemail.com</a>
<a href=""mailto:gu.daji.m.5@googlemail.com"">gu.daji.m.5@googlemail.com</a>
<a href=""mailto:g.u.d.a.j.i.m5@googlemail.com"">g.u.d.a.j.i.m5@googlemail.com</a>
<a href=""mailto:g.ud.aj.i.m5@googlemail.com"">g.ud.aj.i.m5@googlemail.com</a>
<a href=""mailto:gu.d.aj.im5@googlemail.com"">gu.d.aj.im5@googlemail.com</a>
<a href=""mailto:gu.daj.i.m5@googlemail.com"">gu.daj.i.m5@googlemail.com</a>
<a href=""mailto:gudaj.im.5@googlemail.com"">gudaj.im.5@googlemail.com</a>
<a href=""mailto:gu.d.aj.im.5@googlemail.com"">gu.d.aj.im.5@googlemail.com</a>
<a href=""mailto:g.u.daji.m5@googlemail.com"">g.u.daji.m5@googlemail.com</a>
<a href=""mailto:gud.aji.m5@googlemail.com"">gud.aji.m5@googlemail.com</a>
<a href=""mailto:g.u.d.a.jim5@googlemail.com"">g.u.d.a.jim5@googlemail.com</a>
<a href=""mailto:gu.d.a.jim5@googlemail.com"">gu.d.a.jim5@googlemail.com</a>
<a href=""mailto:g.udaj.im.5@googlemail.com"">g.udaj.im.5@googlemail.com</a>
<a href=""mailto:gu.d.a.j.i.m5@googlemail.com"">gu.d.a.j.i.m5@googlemail.com</a>
<a href=""mailto:g.ud.ajim5@googlemail.com"">g.ud.ajim5@googlemail.com</a>
<a href=""mailto:gu.d.aji.m.5@googlemail.com"">gu.d.aji.m.5@googlemail.com</a>
<a href=""mailto:g.udajim.5@googlemail.com"">g.udajim.5@googlemail.com</a>
<a href=""mailto:gu.d.aji.m5@googlemail.com"">gu.d.aji.m5@googlemail.com</a>
<a href=""mailto:g.ud.a.j.i.m.5@googlemail.com"">g.ud.a.j.i.m.5@googlemail.com</a>
<a href=""mailto:g.ud.a.jim5@googlemail.com"">g.ud.a.jim5@googlemail.com</a>
<a href=""mailto:gu.da.jim.5@googlemail.com"">gu.da.jim.5@googlemail.com</a>
<a href=""mailto:g.udaji.m5@googlemail.com"">g.udaji.m5@googlemail.com</a>
<a href=""mailto:gudaji.m.5@googlemail.com"">gudaji.m.5@googlemail.com</a>
<a href=""mailto:gu.daji.m5@googlemail.com"">gu.daji.m5@googlemail.com</a>
<a href=""mailto:gu.da.ji.m.5@googlemail.com"">gu.da.ji.m.5@googlemail.com</a>
<a href=""mailto:g.u.da.j.i.m5@googlemail.com"">g.u.da.j.i.m5@googlemail.com</a>
<a href=""mailto:g.uda.jim5@googlemail.com"">g.uda.jim5@googlemail.com</a>
<a href=""mailto:g.u.dajim5@googlemail.com"">g.u.dajim5@googlemail.com</a>
<a href=""mailto:g.ud.a.ji.m5@googlemail.com"">g.ud.a.ji.m5@googlemail.com</a>
<a href=""mailto:g.u.d.aj.im5@googlemail.com"">g.u.d.aj.im5@googlemail.com</a>
<a href=""mailto:g.ud.a.j.im5@googlemail.com"">g.ud.a.j.im5@googlemail.com</a>
<a href=""mailto:guda.ji.m5@googlemail.com"">guda.ji.m5@googlemail.com</a>
<a href=""mailto:gu.d.aj.i.m.5@googlemail.com"">gu.d.aj.i.m.5@googlemail.com</a>
<a href=""mailto:gu.da.j.im.5@googlemail.com"">gu.da.j.im.5@googlemail.com</a>
<a href=""mailto:g.u.da.j.im5@googlemail.com"">g.u.da.j.im5@googlemail.com</a>
<a href=""mailto:gud.aj.im5@googlemail.com"">gud.aj.im5@googlemail.com</a>
<a href=""mailto:g.udaji.m.5@googlemail.com"">g.udaji.m.5@googlemail.com</a>
<a href=""mailto:g.u.d.aji.m5@googlemail.com"">g.u.d.aji.m5@googlemail.com</a>
<a href=""mailto:gu.da.jim5@googlemail.com"">gu.da.jim5@googlemail.com</a>
<a href=""mailto:gu.da.ji.m5@googlemail.com"">gu.da.ji.m5@googlemail.com</a>
<a href=""mailto:g.u.d.aj.im.5@googlemail.com"">g.u.d.aj.im.5@googlemail.com</a>
<a href=""mailto:gu.daj.im.5@googlemail.com"">gu.daj.im.5@googlemail.com</a>
<a href=""mailto:g.u.da.ji.m.5@googlemail.com"">g.u.da.ji.m.5@googlemail.com</a>
<a href=""mailto:guda.j.im.5@googlemail.com"">guda.j.im.5@googlemail.com</a>
<a href=""mailto:gudaj.im5@googlemail.com"">gudaj.im5@googlemail.com</a>
<a href=""mailto:gud.a.ji.m.5@googlemail.com"">gud.a.ji.m.5@googlemail.com</a>
<a href=""mailto:gud.aji.m.5@googlemail.com"">gud.aji.m.5@googlemail.com</a>
<a href=""mailto:gud.a.j.i.m.5@googlemail.com"">gud.a.j.i.m.5@googlemail.com</a>
<a href=""mailto:g.uda.jim.5@googlemail.com"">g.uda.jim.5@googlemail.com</a>
<a href=""mailto:g.u.daji.m.5@googlemail.com"">g.u.daji.m.5@googlemail.com</a>
<a href=""mailto:gu.dajim5@googlemail.com"">gu.dajim5@googlemail.com</a>
<a href=""mailto:g.ud.aj.i.m.5@googlemail.com"">g.ud.aj.i.m.5@googlemail.com</a>
<a href=""mailto:g.u.d.a.ji.m5@googlemail.com"">g.u.d.a.ji.m5@googlemail.com</a>
<a href=""mailto:gu.daj.im5@googlemail.com"">gu.daj.im5@googlemail.com</a>
<a href=""mailto:gud.aj.i.m5@googlemail.com"">gud.aj.i.m5@googlemail.com</a>
<a href=""mailto:gu.dajim.5@googlemail.com"">gu.dajim.5@googlemail.com</a>
<a href=""mailto:gu.d.a.j.im.5@googlemail.com"">gu.d.a.j.im.5@googlemail.com</a>
<a href=""mailto:g.u.da.ji.m5@googlemail.com"">g.u.da.ji.m5@googlemail.com</a>
<a href=""mailto:gud.aj.im.5@googlemail.com"">gud.aj.im.5@googlemail.com</a>
<a href=""mailto:g.uda.j.im.5@googlemail.com"">g.uda.j.im.5@googlemail.com</a>
<a href=""mailto:g.u.d.aji.m.5@googlemail.com"">g.u.d.aji.m.5@googlemail.com</a>
<a href=""mailto:gud.a.j.i.m5@googlemail.com"">gud.a.j.i.m5@googlemail.com</a>
<a href=""mailto:g.u.da.jim5@googlemail.com"">g.u.da.jim5@googlemail.com</a>
<a href=""mailto:g.u.d.a.j.im.5@googlemail.com"">g.u.d.a.j.im.5@googlemail.com</a>
<a href=""mailto:g.u.d.ajim.5@googlemail.com"">g.u.d.ajim.5@googlemail.com</a>
<a href=""mailto:g.u.daj.im5@googlemail.com"">g.u.daj.im5@googlemail.com</a>
<a href=""mailto:g.ud.aj.im.5@googlemail.com"">g.ud.aj.im.5@googlemail.com</a>
<a href=""mailto:g.ud.a.ji.m.5@googlemail.com"">g.ud.a.ji.m.5@googlemail.com</a>
<a href=""mailto:g.ud.ajim.5@googlemail.com"">g.ud.ajim.5@googlemail.com</a>
<a href=""mailto:gud.a.ji.m5@googlemail.com"">gud.a.ji.m5@googlemail.com</a>
<a href=""mailto:g.u.d.a.j.i.m.5@googlemail.com"">g.u.d.a.j.i.m.5@googlemail.com</a>
<a href=""mailto:gu.d.a.ji.m5@googlemail.com"">gu.d.a.ji.m5@googlemail.com</a>
<a href=""mailto:gu.d.aj.i.m5@googlemail.com"">gu.d.aj.i.m5@googlemail.com</a>
<a href=""mailto:gu.d.ajim.5@googlemail.com"">gu.d.ajim.5@googlemail.com</a>
<a href=""mailto:g.uda.ji.m5@googlemail.com"">g.uda.ji.m5@googlemail.com</a>
<a href=""mailto:guda.ji.m.5@googlemail.com"">guda.ji.m.5@googlemail.com</a>
<a href=""mailto:g.ud.aji.m5@googlemail.com"">g.ud.aji.m5@googlemail.com</a>
<a href=""mailto:g.uda.j.i.m.5@googlemail.com"">g.uda.j.i.m.5@googlemail.com</a>
<a href=""mailto:gu.da.j.im5@googlemail.com"">gu.da.j.im5@googlemail.com</a>
<a href=""mailto:g.u.d.a.ji.m.5@googlemail.com"">g.u.d.a.ji.m.5@googlemail.com</a>
<a href=""mailto:g.u.da.jim.5@googlemail.com"">g.u.da.jim.5@googlemail.com</a>
<a href=""mailto:g.u.daj.i.m.5@googlemail.com"">g.u.daj.i.m.5@googlemail.com</a>
<a href=""mailto:gu.d.a.j.im5@googlemail.com"">gu.d.a.j.im5@googlemail.com</a>
<a href=""mailto:guda.j.im5@googlemail.com"">guda.j.im5@googlemail.com</a>
<a href=""mailto:g.uda.j.i.m5@googlemail.com"">g.uda.j.i.m5@googlemail.com</a>
<a href=""mailto:gudajim.5@googlemail.com"">gudajim.5@googlemail.com</a>
<a href=""mailto:g.u.d.a.j.im5@googlemail.com"">g.u.d.a.j.im5@googlemail.com</a>
<a href=""mailto:g.u.d.aj.i.m5@googlemail.com"">g.u.d.aj.i.m5@googlemail.com</a>
<a href=""mailto:gud.a.j.im.5@googlemail.com"">gud.a.j.im.5@googlemail.com</a>
<a href=""mailto:guda.jim.5@googlemail.com"">guda.jim.5@googlemail.com</a>
<a href=""mailto:g.udaj.i.m.5@googlemail.com"">g.udaj.i.m.5@googlemail.com</a>
<a href=""mailto:g.udaj.im5@googlemail.com"">g.udaj.im5@googlemail.com</a>"
94RqBJ0F,Semaforo,cypictronic,Arduino,Sunday 12th of November 2023 08:38:46 PM CDT,"int verde = 13;
int amarillo = 12;
int rojo = 11;


void setup() {
  // put your setup code here, to run once:
 pinMode(verde,OUTPUT);
 pinMode(amarillo,OUTPUT);
 pinMode(rojo,OUTPUT);
}

void loop() {
  // put your main code here, to run repeatedly:
  digitalWrite(verde,HIGH); // LED VERDE ON
  digitalWrite(amarillo,LOW); // LED AMARILLO OFF
  digitalWrite(rojo,LOW); // LED ROJO OFF

  delay(2000);

  digitalWrite(verde,LOW);
  digitalWrite(amarillo,LOW);
  digitalWrite(rojo,HIGH);

  delay(2000);

  digitalWrite(verde, LOW);
  digitalWrite(amarillo,HIGH);
  digitalWrite(rojo,LOW);

  delay(1000);
}"
iaMHTQJW,Arduino COM I2C,LucasZds,C,Sunday 12th of November 2023 07:56:02 PM CDT,"/*CONTROL SENSORES M1*/
int TRIGGER_PINS[] = {A2, A0, 5, 12};
int ECHO_PINS[] = {A3, A1, 4, 11};
int LEDS[] = {7, 8, 6, 13};
int SENSOR_LIMIT[] = {60, 60, 60, 60};

// sensor 1 | sensor 2 | sensor 3 | sensor 4
// adelante | atras | izquierda | derecha
int distance = 0; 
#define NUM_SENSORS  4
byte sensorState = 0;
unsigned long tiempoAnterior = 0;
const unsigned long INTERVALO_LECTURA = 10; // Intervalo entre lecturas en milisegundos

void setup() {
  Serial.begin(9600);
  for (int i = 0; i < NUM_SENSORS; ++i) {
    pinMode(TRIGGER_PINS[i], OUTPUT);
    pinMode(ECHO_PINS[i], INPUT);
    pinMode(LEDS[i], OUTPUT);
  }
}

int getDistance(int triggerPin, int echoPin) {
  long duration;
  digitalWrite(triggerPin, LOW);
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(20);
  digitalWrite(triggerPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  return (duration / 2) / 29.1;
}

void loop() {
  if (millis() - tiempoAnterior >= INTERVALO_LECTURA) {
    for (int i = 0; i < NUM_SENSORS; ++i) {
      distance = getDistance(TRIGGER_PINS[i], ECHO_PINS[i]);
      distance = i*30;
      sensorState = (sensorState & ~(1 << i)) | ((distance >= SENSOR_LIMIT[i]) << i);
      digitalWrite(LEDS[i], (distance >= SENSOR_LIMIT[i]) ? HIGH : LOW);
    }
    Serial.write(sensorState);
    tiempoAnterior = millis();
  }
}
/*CONTROL SENSORES M1*/

/*CONTROL MANDO M1*/
#include <SoftwareSerial.h>

SoftwareSerial bluetoothSerial(12, 11); // RX (pin 12) y TX (pin 11) para la comunicación Bluetooth

#define NUM_SENSORS 4
byte receivedSensorState = 0;

#define NUM_SALIDAS 2
#define TIEMPO_MOVIMIENTO 5000 //ms
unsigned char PINES_OUT[] = {5, 10};
unsigned char LEDS[] = {4, 2, 3, 9};
unsigned long tiempoInicioMovimiento = 0;

#define ADELANTE 0
#define ATRAS 1
#define IZQUIERDA 2
#define DERECHA 3

#define BLINK_INTERVAL 100
unsigned long tiempoAnterior = 0; // tiempo del último cambio de estado del led
bool estadoLED = LOW;             // Estado actual de los LEDs

void led_onoff(unsigned char led) {
  if (millis() - tiempoAnterior >= BLINK_INTERVAL) {
    digitalWrite(led, estadoLED);
    tiempoAnterior = millis();
    estadoLED = !estadoLED;
  }
}

unsigned char State_Sensors(unsigned char movimiento) {
  led_onoff(LEDS[3]); // led para movimiento
  receivedSensorState = Serial.read();
  if(receivedSensorState != 0xFF){
    if ((receivedSensorState & (1 << movimiento)) != 0) {
        return 1;
    } else return 0;
  }
  
}

void movimiento_adelante() {
  // adelante
  analogWrite(PINES_OUT[1], 200);
}

void movimiento_atras() {
  // atras
  analogWrite(PINES_OUT[1], 56);
}

void movimiento_izquierda() {
  // izquierda
  analogWrite(PINES_OUT[0], 200);
}

void movimiento_derecha() {
  // derecha
  analogWrite(PINES_OUT[0], 56);
}

void movimiento_stop() {
  // stop
  digitalWrite(LEDS[3], LOW);
  analogWrite(PINES_OUT[0], 128);
  analogWrite(PINES_OUT[1], 128);
}

void setup() {
  Serial.begin(9600);
  bluetoothSerial.begin(9600);
  for (int i = 0; i < NUM_SENSORS; i++) {
    pinMode(LEDS[i], OUTPUT);
  }
  for (int i = 0; i < NUM_SALIDAS; i++) {
    pinMode(PINES_OUT[i], OUTPUT);
  }
}

void loop() {
  if (Serial.available() > 0) {
    digitalWrite(LEDS[0], LOW);
    // verificar bt, obtención del movimiento, comparo y mando a las funciones
    if (bluetoothSerial.available() > 0) {
      digitalWrite(LEDS[1], LOW);
      char sentido = bluetoothSerial.read();
      tiempoInicioMovimiento = millis();

      switch (sentido) {
        case 0x11:
          movimiento_adelante();
          while ((millis() - tiempoInicioMovimiento < TIEMPO_MOVIMIENTO) && (State_Sensors( ADELANTE) != 1));
          movimiento_stop();

          break;
        case 0x12:
          movimiento_atras();
          while ((millis() - tiempoInicioMovimiento < TIEMPO_MOVIMIENTO) && (State_Sensors( ATRAS) != 1));
          movimiento_stop();

          break;
        case 0x14:
          movimiento_izquierda();
          while ((millis() - tiempoInicioMovimiento < TIEMPO_MOVIMIENTO) && (State_Sensors( IZQUIERDA) != 1));
          movimiento_stop();

          break;
        case 0x18:
          movimiento_derecha();
          while ((millis() - tiempoInicioMovimiento < TIEMPO_MOVIMIENTO) && (State_Sensors( DERECHA) != 1));
          movimiento_stop();

          break;
        default:
          movimiento_stop();
      }

    } else
      led_onoff(LEDS[1]);
    // verificar bt, obtención del movimiento, comparo y mando a las funciones
  } else
    led_onoff(LEDS[0]);
}  // verificar serial, obtención de distancias comparo y entro
/*CONTROL MANDO M1*/"
48uwZ40f,ny kig,iconoclasthero,Bash,Sunday 12th of November 2023 07:52:47 PM CDT,"$ cat mylogfile 
$ bash dev_setup.sh 
Creating /var/log/mycroft/ directory

                    Welcome to Mycroft!  

This script is designed to make working with Mycroft easy.  During this
first run of dev_setup we will ask you a few questions to help setup
your environment.

Do you want to run on 'master' or against a dev branch?  Unless you are
a developer modifying mycroft-core itself, you should run on the
'master' branch.  It is updated bi-weekly with a stable release.
  Y)es, run on the stable 'master' branch
  N)o, I want to run unstable branches
Choice [Y/N]:  Y - using 'master' branch 
Branch 'master' set up to track remote branch 'master' from 'origin'.
Switched to a new branch 'master'

Mycroft is actively developed and constantly evolving.  It is recommended
that you update regularly.  Would you like to automatically update
whenever launching Mycroft?  This is highly recommended, especially for
those running against the 'master' branch.
  Y)es, automatically check for updates
  N)o, I will be responsible for keeping Mycroft updated.
Choice [Y/N]:  Y - update automatically 

Mycroft uses its Mimic technology to speak to you.  Mimic can run both
locally and from a server.  The local Mimic is more robotic, but always
available regardless of network connectivity.  It will act as a fallback
if unable to contact the Mimic server.

However, building the local Mimic is time consuming -- it can take hours
on slower machines.  This can be skipped, but Mycroft will be unable to
talk if you lose network connectivity.  Would you like to build Mimic
locally?
Choice [Y/N]:  Y - Mimic will be built 


There are several Mycroft helper commands in the bin folder.  These
can be added to your system PATH, making it simpler to use Mycroft.
Would you like this to be added to your PATH in the .profile?
Choice [Y/N]:  Y - Adding Mycroft commands to your PATH 
Type mycroft-help to see available commands.

The standard location for Mycroft skills is under /opt/mycroft/skills.
This script will create that folder for you.  This requires sudo
permission and might ask you for a password...
Created!
For convenience, a soft link has been created called 'skills' which leads
to /opt/mycroft/skills.

(Developer) Do you want to automatically check code-style when submitting code.
If unsure answer yes.

Choice [Y/N]: Will install PEP8 pre-commit hook...

Interactive portion complete, now installing dependencies...

Installing packages...
 Installing packages for Debian/Ubuntu/Mint...

We have detected that your computer has the libjack-jackd2-0 package installed.
Mycroft requires a conflicting package, and will likely uninstall this package.
On some systems, this can cause other programs to be marked for removal.
Please review the following package changes carefully.
Press enter to continue
[sudo] password for user: 
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
autoconf is already the newest version (2.71-2).
automake is already the newest version (1:1.16.5-1.3).
build-essential is already the newest version (12.9ubuntu3).
jq is already the newest version (1.6-2.1ubuntu3).
libffi-dev is already the newest version (3.4.2-4).
libffi-dev set to manually installed.
libicu-dev is already the newest version (70.1-2).
libjpeg-dev is already the newest version (8c-2ubuntu10).
libtool is already the newest version (2.4.6-15build2).
pkg-config is already the newest version (0.29.2-1ubuntu3).
curl is already the newest version (7.81.0-1ubuntu1.14).
git is already the newest version (1:2.34.1-1ubuntu1.10).
libglib2.0-dev is already the newest version (2.72.4-0ubuntu2.2).
libssl-dev is already the newest version (3.0.2-0ubuntu1.12).
pulseaudio is already the newest version (1:15.99.1+dfsg1-1ubuntu2.1).
pulseaudio set to manually installed.
pulseaudio-utils is already the newest version (1:15.99.1+dfsg1-1ubuntu2.1).
pulseaudio-utils set to manually installed.
python3 is already the newest version (3.10.6-1~22.04).
python3-dev is already the newest version (3.10.6-1~22.04).
python3-dev set to manually installed.
python3-setuptools is already the newest version (59.6.0-1.2ubuntu0.22.04.1).
python3-setuptools set to manually installed.
flac is already the newest version (1.3.3-2ubuntu0.2).
The following additional packages will be installed:
  libfann2 libportaudiocpp0 swig4.0
Suggested packages:
  bison-doc libfann-doc jackd oss-compat oss4-base portaudio19-doc byobu | screenie | iselect swig-doc swig-examples swig4.0-examples swig4.0-doc
The following NEW packages will be installed:
  bison libfann-dev libfann2 libportaudiocpp0 mpg123 portaudio19-dev screen swig swig4.0
0 upgraded, 9 newly installed, 0 to remove and 16 not upgraded.
Need to get 2964 kB of archives.
After this operation, 11.5 MB of additional disk space will be used.
Do you want to continue? [Y/n] 
Get:1 http://us.archive.ubuntu.com/ubuntu jammy/main amd64 bison amd64 2:3.8.2+dfsg-1build1 [748 kB]
Get:2 http://us.archive.ubuntu.com/ubuntu jammy/universe amd64 libfann2 amd64 2.2.0+ds-6 [63.5 kB]
Get:3 http://us.archive.ubuntu.com/ubuntu jammy/universe amd64 libfann-dev amd64 2.2.0+ds-6 [88.0 kB]
Get:4 http://us.archive.ubuntu.com/ubuntu jammy/universe amd64 libportaudiocpp0 amd64 19.6.0-1.1 [16.1 kB]
Get:5 http://us.archive.ubuntu.com/ubuntu jammy/universe amd64 mpg123 amd64 1.29.3-1build1 [155 kB]
Get:6 http://us.archive.ubuntu.com/ubuntu jammy/universe amd64 portaudio19-dev amd64 19.6.0-1.1 [106 kB]
Get:7 http://us.archive.ubuntu.com/ubuntu jammy/main amd64 screen amd64 4.9.0-1 [672 kB]
Get:8 http://us.archive.ubuntu.com/ubuntu jammy/universe amd64 swig4.0 amd64 4.0.2-1ubuntu1 [1110 kB]
Get:9 http://us.archive.ubuntu.com/ubuntu jammy/universe amd64 swig all 4.0.2-1ubuntu1 [5632 B]
Fetched 2964 kB in 1s (4624 kB/s)
Selecting previously unselected package bison.
(Reading database ... 478165 files and directories currently installed.)
Preparing to unpack .../0-bison_2%3a3.8.2+dfsg-1build1_amd64.deb ...
Unpacking bison (2:3.8.2+dfsg-1build1) ...
Selecting previously unselected package libfann2:amd64.
Preparing to unpack .../1-libfann2_2.2.0+ds-6_amd64.deb ...
Unpacking libfann2:amd64 (2.2.0+ds-6) ...
Selecting previously unselected package libfann-dev:amd64.
Preparing to unpack .../2-libfann-dev_2.2.0+ds-6_amd64.deb ...
Unpacking libfann-dev:amd64 (2.2.0+ds-6) ...
Selecting previously unselected package libportaudiocpp0:amd64.
Preparing to unpack .../3-libportaudiocpp0_19.6.0-1.1_amd64.deb ...
Unpacking libportaudiocpp0:amd64 (19.6.0-1.1) ...
Selecting previously unselected package mpg123.
Preparing to unpack .../4-mpg123_1.29.3-1build1_amd64.deb ...
Unpacking mpg123 (1.29.3-1build1) ...
Selecting previously unselected package portaudio19-dev:amd64.
Preparing to unpack .../5-portaudio19-dev_19.6.0-1.1_amd64.deb ...
Unpacking portaudio19-dev:amd64 (19.6.0-1.1) ...
Selecting previously unselected package screen.
Preparing to unpack .../6-screen_4.9.0-1_amd64.deb ...
Unpacking screen (4.9.0-1) ...
Selecting previously unselected package swig4.0.
Preparing to unpack .../7-swig4.0_4.0.2-1ubuntu1_amd64.deb ...
Unpacking swig4.0 (4.0.2-1ubuntu1) ...
Selecting previously unselected package swig.
Preparing to unpack .../8-swig_4.0.2-1ubuntu1_all.deb ...
Unpacking swig (4.0.2-1ubuntu1) ...
Setting up screen (4.9.0-1) ...
Setting up mpg123 (1.29.3-1build1) ...
update-alternatives: using /usr/bin/mpg123.bin to provide /usr/bin/mpg123 (mpg123) in auto mode
update-alternatives: using /usr/bin/mpg123.bin to provide /usr/bin/mp3-decoder (mp3-decoder) in auto mode
Setting up libportaudiocpp0:amd64 (19.6.0-1.1) ...
Setting up portaudio19-dev:amd64 (19.6.0-1.1) ...
Setting up bison (2:3.8.2+dfsg-1build1) ...
update-alternatives: using /usr/bin/bison.yacc to provide /usr/bin/yacc (yacc) in auto mode
Setting up swig4.0 (4.0.2-1ubuntu1) ...
Setting up libfann2:amd64 (2.2.0+ds-6) ...
Setting up libfann-dev:amd64 (2.2.0+ds-6) ...
Setting up swig (4.0.2-1ubuntu1) ...
Processing triggers for man-db (2.10.2-1) ...
Processing triggers for install-info (6.8-4build1) ...
Processing triggers for mailcap (3.70+nmu1ubuntu1) ...
Processing triggers for libc-bin (2.35-0ubuntu3.4) ...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 2570k  100 2570k    0     0  3596k      0 --:--:-- --:--:-- --:--:-- 3595k
Collecting pip==20.0.2
  Downloading pip-20.0.2-py2.py3-none-any.whl (1.4 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.4/1.4 MB 5.4 MB/s eta 0:00:00
Collecting setuptools
  Downloading setuptools-68.2.2-py3-none-any.whl.metadata (6.3 kB)
Collecting wheel
  Downloading wheel-0.41.3-py3-none-any.whl.metadata (2.2 kB)
Downloading setuptools-68.2.2-py3-none-any.whl (807 kB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 807.9/807.9 kB 5.8 MB/s eta 0:00:00
Downloading wheel-0.41.3-py3-none-any.whl (65 kB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 65.8/65.8 kB 7.5 MB/s eta 0:00:00
Installing collected packages: wheel, setuptools, pip
Successfully installed pip-20.0.2 setuptools-68.2.2 wheel-0.41.3

[notice] A new release of pip is available: 20.0.2 -> 23.3.1
[notice] To update, run: python3 -m pip install --upgrade pip
Installing PEP8 check as precommit-hook
Adding mycroft-core to virtualenv path
Collecting requests<2.26.0,>=2.20.0
  Downloading requests-2.25.1-py2.py3-none-any.whl (61 kB)
     |████████████████████████████████| 61 kB 2.6 MB/s 
Collecting gTTS<2.3.0,>=2.2.2
  Downloading gTTS-2.2.4-py3-none-any.whl (26 kB)
Collecting PyAudio==0.2.11
  Downloading PyAudio-0.2.11.tar.gz (37 kB)
Collecting pyee==8.1.0
  Downloading pyee-8.1.0-py2.py3-none-any.whl (12 kB)
Collecting SpeechRecognition==3.8.1
  Downloading SpeechRecognition-3.8.1-py2.py3-none-any.whl (32.8 MB)
     |████████████████████████████████| 32.8 MB 5.0 MB/s 
Collecting tornado~=6.1
  Downloading tornado-6.3.3-cp38-abi3-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (427 kB)
     |████████████████████████████████| 427 kB 4.9 MB/s 
Collecting websocket-client~=1.2.1
  Downloading websocket_client-1.2.3-py3-none-any.whl (53 kB)
     |████████████████████████████████| 53 kB 5.6 MB/s 
Collecting requests-futures==0.9.5
  Downloading requests-futures-0.9.5.tar.gz (5.3 kB)
Collecting pyserial==3.0
  Downloading pyserial-3.0.tar.gz (133 kB)
     |████████████████████████████████| 133 kB 2.8 MB/s 
Collecting psutil==5.6.6
  Downloading psutil-5.6.6.tar.gz (447 kB)
     |████████████████████████████████| 447 kB 5.7 MB/s 
Collecting pocketsphinx==0.1.0
  Downloading pocketsphinx-0.1.0.tar.gz (503 kB)
     |████████████████████████████████| 503 kB 5.4 MB/s 
Collecting inflection==0.3.1
  Downloading inflection-0.3.1.tar.gz (8.7 kB)
Collecting pillow==8.3.2
  Downloading Pillow-8.3.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)
     |████████████████████████████████| 3.0 MB 5.7 MB/s 
Collecting python-dateutil==2.6.0
  Downloading python_dateutil-2.6.0-py2.py3-none-any.whl (194 kB)
     |████████████████████████████████| 194 kB 5.8 MB/s 
Collecting fasteners==0.14.1
  Downloading fasteners-0.14.1-py2.py3-none-any.whl (20 kB)
Collecting PyYAML==5.4
  Downloading PyYAML-5.4.tar.gz (174 kB)
     |████████████████████████████████| 174 kB 5.7 MB/s 
  Installing build dependencies ... done
  Getting requirements to build wheel ... error
  ERROR: Command errored out with exit status 1:
   command: /home/user/bin/gits/mycroft-core/.venv/bin/python3 /home/user/bin/gits/mycroft-core/.venv/lib/python3.10/site-packages/pip/_vendor/pep517/_in_process.py get_requires_for_build_wheel /tmp/tmpfe5vyzd0
       cwd: /tmp/pip-install-2zhk_4cu/PyYAML
  Complete output (62 lines):
  /tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/config/setupcfg.py:293: _DeprecatedConfig: Deprecated config in `setup.cfg`
  !!
  
          ********************************************************************************
          The license_file parameter is deprecated, use license_files instead.
  
          This deprecation is overdue, please update your project and remove deprecated
          calls to avoid build errors in the future.
  
          See https://setuptools.pypa.io/en/latest/userguide/declarative_config.html for details.
          ********************************************************************************
  
  !!
    parsed = self.parsers.get(option_name, lambda x: x)(value)
  running egg_info
  writing lib3/PyYAML.egg-info/PKG-INFO
  writing dependency_links to lib3/PyYAML.egg-info/dependency_links.txt
  writing top-level names to lib3/PyYAML.egg-info/top_level.txt
  Traceback (most recent call last):
    File ""/home/user/bin/gits/mycroft-core/.venv/lib/python3.10/site-packages/pip/_vendor/pep517/_in_process.py"", line 257, in <module>
      main()
    File ""/home/user/bin/gits/mycroft-core/.venv/lib/python3.10/site-packages/pip/_vendor/pep517/_in_process.py"", line 240, in main
      json_out['return_val'] = hook(**hook_input['kwargs'])
    File ""/home/user/bin/gits/mycroft-core/.venv/lib/python3.10/site-packages/pip/_vendor/pep517/_in_process.py"", line 91, in get_requires_for_build_wheel
      return hook(config_settings)
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/build_meta.py"", line 355, in get_requires_for_build_wheel
      return self._get_build_requires(config_settings, requirements=['wheel'])
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/build_meta.py"", line 325, in _get_build_requires
      self.run_setup()
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/build_meta.py"", line 341, in run_setup
      exec(code, locals())
    File ""<string>"", line 271, in <module>
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/__init__.py"", line 103, in setup
      return distutils.core.setup(**attrs)
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/_distutils/core.py"", line 185, in setup
      return run_commands(dist)
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/_distutils/core.py"", line 201, in run_commands
      dist.run_commands()
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/_distutils/dist.py"", line 969, in run_commands
      self.run_command(cmd)
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/dist.py"", line 989, in run_command
      super().run_command(command)
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/_distutils/dist.py"", line 988, in run_command
      cmd_obj.run()
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/command/egg_info.py"", line 318, in run
      self.find_sources()
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/command/egg_info.py"", line 326, in find_sources
      mm.run()
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/command/egg_info.py"", line 548, in run
      self.add_defaults()
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/command/egg_info.py"", line 586, in add_defaults
      sdist.add_defaults(self)
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/command/sdist.py"", line 113, in add_defaults
      super().add_defaults()
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/_distutils/command/sdist.py"", line 251, in add_defaults
      self._add_defaults_ext()
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/_distutils/command/sdist.py"", line 336, in _add_defaults_ext
      self.filelist.extend(build_ext.get_source_files())
    File ""<string>"", line 201, in get_source_files
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/_distutils/cmd.py"", line 107, in __getattr__
      raise AttributeError(attr)
  AttributeError: cython_sources
  ----------------------------------------
ERROR: Command errored out with exit status 1: /home/user/bin/gits/mycroft-core/.venv/bin/python3 /home/user/bin/gits/mycroft-core/.venv/lib/python3.10/site-packages/pip/_vendor/pep517/_in_process.py get_requires_for_build_wheel /tmp/tmpfe5vyzd0 Check the logs for full command output.
Warning: Failed to install required dependencies. Continue? y/N
"
qkPay9Sd,Day04 perimeter,HarrJ,Java,Sunday 12th of November 2023 07:47:38 PM CDT,"public class Day04C {
    public static void main(String[] args) {
        double base = 13;
        double height = 10;
        double area;
        
        area = (base * height) / 2;
        
        System.out.println(""the area of a triangle with "");
        System.out.println(""a base of "" + base);
        System.out.println(""and a height of "" + height);
        System.out.println(""is "" + area);
        
        double lenght;
        double width;
        double perimeter;
        // make a formula to get the perimiter of a rectangle
        
        
        System.out.println(""the perimeter of a rectangle with "");
        System.out.println(""a length of "" + lenght);
        System.out.println(""and a width of "" + width);
        System.out.println(""is "" + perimeter);
    }
}
"
