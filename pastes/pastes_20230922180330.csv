id,title,username,language,date,content
y9eP36KA,HWM - compare battles,goodwin64,JavaScript,Friday 22nd of September 2023 12:57:23 PM CDT,"const fs = require('fs');

// battles were stringified using:
function stringifyCircular(obj) {
  var cache = [];
  var result = JSON.stringify(obj, (key, value) => {
    if (typeof value === 'object' && value !== null) {
      if (cache.includes(value)) return;
      cache.push(value);

      // Check if the object has a custom toJSON method
      if (typeof value.toJSON === 'function' || typeof value.toObject === 'function') {
        try {
          // Call the custom toJSON method and handle errors if any
          const customJSON = value.toJSON();
          return customJSON;
        } catch (error) {
          // Handle the error gracefully, e.g., by logging it or ignoring it
          console.error(`Error in toJSON method of ${key}: ${error.message}`);
          return undefined; // Skip this object in the resulting JSON
        }
      }
    }
    return value;
  });
  cache = null;
  return result;
}

var s = stringifyCircular(window);
console.log(s.length);
console.log(s);

// then, all 3 battles were stored in json files
var battle1 = require('./battle1.json');
var battle2 = require('./battle2.json');
var battle3 = require('./battle3.json');

function deepCompare(objMe, objDifferent, objSimilar, rootPath = '') {
  const differences = [];

  function compareInternal(currentPath, valueMe, valueDifferent, valueSimilar) {
    // Check if the values are of the same type
    if (typeof valueMe !== typeof valueDifferent) {
      return;
    }

    // Handle primitive types
    if (typeof valueMe !== 'object' || valueMe === null) {
      if (valueMe !== valueDifferent && valueMe === valueSimilar) {
        differences.push({ path: currentPath, value1: valueMe, value2: valueDifferent });
      }
      return;
    }

    // Handle arrays
    if (Array.isArray(valueMe)) {
      if (
        !Array.isArray(valueDifferent) ||
        (valueMe.length !== valueDifferent.length && valueMe.length === valueSimilar.length)
      ) {
        differences.push({ path: currentPath, value1: valueMe, value2: valueDifferent });
        return;
      }
      for (let i = 0; i < valueMe.length; i++) {
        compareInternal(`${currentPath}[${i}]`, valueMe[i], valueDifferent[i], valueSimilar[i]);
      }
      return;
    }

    // Handle objects
    const keysMe = Object.keys(valueMe);
    const keysDifferent = Object.keys(valueDifferent);
    const keysSimilar = Object.keys(valueSimilar);

    for (const key of keysMe) {
      if (!keysDifferent.includes(key) && keysSimilar.includes(key)) {
        differences.push({ path: `${currentPath}.${key}`, value1: valueMe[key], value2: undefined });
      } else {
        compareInternal(`${currentPath}.${key}`, valueMe[key], valueDifferent[key], valueSimilar[key]);
      }
    }

    for (const key of keysDifferent) {
      if (!keysMe.includes(key) && !keysSimilar.includes(key)) {
        differences.push({ path: `${currentPath}.${key}`, value1: undefined, value2: valueDifferent[key] });
      }
    }
  }

  compareInternal(rootPath, objMe, objDifferent, objSimilar);
  return differences;
}

// finally, the differences were computed
var differences = deepCompare(battle1, battle3, battle2);
differences = differences.filter((d) => typeof d.value1 === typeof d.value2);
const s = JSON.stringify(differences, null, 4);

// and saved to a file
fs.writeFile('differences.json', s, function (err) {
  if (err) return console.log(err);
});
"
jJurdPp8,Untitled,drakon-firestone,Lua,Friday 22nd of September 2023 12:55:00 PM CDT,"function module.CloseFrame(frameName)
	local frame = module.GetFrame(frameName)
	if frame then
		local normalSize = frame.Size
		local closeTween = tweenService:Create(
			frame,
			TweenInfo.new(
				CloseSpeed,
				ClosingEasingStyle,
				ClosingEasingDirection),
			{
				Size = UDim2.fromScale(0, 0)
			}
		)
		closeTween:Play()
		closeTween.Completed:Connect(function()
			frame.Visible = false
			frame.Size = normalSize
		end)
	end
end
for _, v in pairs(screenGui:GetDescendants()) do
	if v:IsA(""GuiButton"") then
		if v:FindFirstChild(""Opens"") then
			if v:FindFirstChild(""Opens"").Value ~= nil then
				v.MouseButton1Click:Connect(function()
					module.OpenFrame(v:FindFirstChild(""Opens"").Value.Name)
				end)
			end
		end
		if v:FindFirstChild(""Closes"") then
			if v:FindFirstChild(""Closes"").Value ~= nil then
				v.MouseButton1Click:Connect(function()
					module.CloseFrame(v:FindFirstChild(""Closes"").Value.Name)
				end)
			end
		end
	end
end"
xYQj3b4V,conditions to fill in a column in dataframe in Python,elena1234,Python,Friday 22nd of September 2023 12:43:13 PM CDT,"for index, row in df_1.iterrows():
    if df_1['Опаковка'][index] == 'Стек':
        df_1['Продажби (количество в осн. Ед.м)'].iloc[index] = df_1['Продажби в брой опаковки'][index] * quantity_in_stek
    elif df_1['Опаковка'][index] == 'Кашон':
        df_1['Продажби (количество в осн. Ед.м)'].iloc[index] = df_1['Продажби в брой опаковки'][index] * quantity_in_kashon
    elif df_1['Опаковка'][index] == 'Палет':
        df_1['Продажби (количество в осн. Ед.м)'].iloc[index] = df_1['Продажби в брой опаковки'][index] * quantity_in_palet
    elif df_1['Опаковка'][index] == 'Каса':
        df_1['Продажби (количество в осн. Ед.м)'].iloc[index] = df_1['Продажби в брой опаковки'][index] * quantity_in_kasa
    elif df_1['Опаковка'][index] == 'Кутия':
        df_1['Продажби (количество в осн. Ед.м)'].iloc[index] = df_1['Продажби в брой опаковки'][index] * quantity_in_kytiq
"
hrEe041Q,aux_wav,IkeKap,C,Friday 22nd of September 2023 12:08:29 PM CDT,"#include <alsa/asoundlib.h>
#include <stdio.h>
#include <stdlib.h>

#define SAMPLE_RATE 44100
#define CHANNELS 2
#define FORMAT SND_PCM_FORMAT_S16_LE
#define BUFFER_SIZE 2048

void write_wav_header(FILE *file, int sample_rate, int channels, int bits_per_sample, int data_length) {
    fwrite(""RIFF"", 1, 4, file);
    int chunk_size = 36 + data_length;
    fwrite(&chunk_size, 4, 1, file);
    fwrite(""WAVE"", 1, 4, file);
    fwrite(""fmt "", 1, 4, file);
    int sub_chunk1_size = 16;
    fwrite(&sub_chunk1_size, 4, 1, file);
    short audio_format = 1;
    fwrite(&audio_format, 2, 1, file);
    fwrite(&channels, 2, 1, file);
    fwrite(&sample_rate, 4, 1, file);
    int byte_rate = sample_rate * channels * bits_per_sample / 8;
    fwrite(&byte_rate, 4, 1, file);
    short block_align = channels * bits_per_sample / 8;
    fwrite(&block_align, 2, 1, file);
    fwrite(&bits_per_sample, 2, 1, file);
    fwrite(""data"", 1, 4, file);
    fwrite(&data_length, 4, 1, file);
}

int main() {
    snd_pcm_t *capture_handle;
    snd_pcm_hw_params_t *hw_params;
    FILE *output_file = fopen(""output.wav"", ""wb"");

    unsigned int actual_sample_rate = SAMPLE_RATE;
    int actual_channels = CHANNELS;
    snd_pcm_format_t actual_format = FORMAT;

    if (output_file == NULL) {
        perror(""Failed to open output file"");
        return 1;
    }

    if (snd_pcm_open(&capture_handle, ""default"", SND_PCM_STREAM_CAPTURE, 0) < 0) {
        perror(""Failed to open audio device"");
        return 1;
    }

    snd_pcm_hw_params_malloc(&hw_params);
    snd_pcm_hw_params_any(capture_handle, hw_params);
    snd_pcm_hw_params_set_access(capture_handle, hw_params, SND_PCM_ACCESS_RW_INTERLEAVED);

    if (snd_pcm_hw_params_set_rate_near(capture_handle, hw_params, &actual_sample_rate, 0) < 0) {
        perror(""Failed to set sample rate"");
        return 1;
    }
    snd_pcm_hw_params_get_rate(hw_params, &actual_sample_rate, 0);
    printf(""Actual sample rate: %u\n"", actual_sample_rate);

    if (snd_pcm_hw_params_set_channels_near(capture_handle, hw_params, &actual_channels) < 0) {
        perror(""Failed to set channels"");
        return 1;
    }
    snd_pcm_hw_params_get_channels(hw_params, &actual_channels);
    printf(""Actual channels: %d\n"", actual_channels);

    if (snd_pcm_hw_params_set_format(capture_handle, hw_params, actual_format) < 0) {
        perror(""Failed to set audio format"");
        return 1;
    }
    snd_pcm_hw_params_get_format(hw_params, &actual_format);
    printf(""Actual format: %d\n"", actual_format);

    snd_pcm_hw_params(capture_handle, hw_params);
    snd_pcm_hw_params_free(hw_params);
    snd_pcm_prepare(capture_handle);

    write_wav_header(output_file, actual_sample_rate, actual_channels, snd_pcm_format_width(actual_format), 0);

    char buffer[BUFFER_SIZE];
    int data_length = 0;

    while (1) {
        if (snd_pcm_readi(capture_handle, buffer, BUFFER_SIZE / 4) < 0) {
            snd_pcm_prepare(capture_handle);
        } else {
            fwrite(buffer, 1, BUFFER_SIZE, output_file);
            data_length += BUFFER_SIZE;
        }
    }

    snd_pcm_close(capture_handle);
    fclose(output_file);

    return 0;
}
"
vq4uXBZh,Untitled,dllbridge,C,Friday 22nd of September 2023 12:06:59 PM CDT,"
/*
#include   <stdio.h>

 
int n = 19; 
 
 
//////////////////////////////////////////////////////// 
int main()                                            //
{
	
	
	printf(""kjlhadf = %d\n"", 19%7);
	
	
	printf(""kjlhadf = %d\n"", 19/7);	
	
	
}



*/



























#include   <stdio.h>



namespace Sobolev
{
   int n = 121;
}
   
using namespace Sobolev;   
   
//////////////////////////////////////////////////////// 
int main()                                            //
{
	
	
    int n = 4444;
	
	
	printf(""n = %d\n"", Sobolev::n);
	
	
	
}



























/*


#include   <stdio.h>


char c = 'F';


char sz[100] = ""SONY"";

   
//////////////////////////////////////////////////////// 
int main()                                            //
{
	
	
	
	sz[4] = 'w';//65;
	
	printf(sz);

	
}
	
	
	
	*/
	
	
	
	
	
	
	
	
	
	
	
	
	

/*


#include   <stdio.h>


char c = 'F';


char sz[100] = ""SONY"";

   
//////////////////////////////////////////////////////// 
int main()                                            //
{
	
	
	printf(sz);

	printf(""\n %s \n"", sz);

    printf(""char c = %d"", c);
	
}
	
	
	
	
	*/
	
	
	
	"
cX4Hn6F8,"BMP patch: CortexA.c, OS Lock",ALTracer,Diff,Friday 22nd of September 2023 11:55:18 AM CDT,"diff --git a/src/target/adiv5.c b/src/target/adiv5.c
index 84acdbfb..b5b0c51f 100644
--- a/src/target/adiv5.c
+++ b/src/target/adiv5.c
@@ -682,10 +682,12 @@ static void adiv5_component_probe(
 			case aa_cortexm:
 				DEBUG_INFO(""%s-> cortexm_probe\n"", indent + 1);
 				cortexm_probe(ap);
+				DEBUG_INFO(""%s<- cortexm_probe\n"", indent + 1);
 				break;
 			case aa_cortexa:
 				DEBUG_INFO(""%s-> cortexa_probe\n"", indent + 1);
 				cortexa_probe(ap, addr);
+				DEBUG_INFO(""%s<- cortexa_probe\n"", indent + 1);
 				break;
 			default:
 				break;
diff --git a/src/target/cortexa.c b/src/target/cortexa.c
index 38c1d073..b862ded1 100644
--- a/src/target/cortexa.c
+++ b/src/target/cortexa.c
@@ -91,6 +91,19 @@ typedef struct cortexa_priv {
 #define CORTEXAR_DBG_WCR   0x1c0U
 #define CORTEXAR_CTR       0xd04U
 
+#define CORTEXAR_DBG_DSCCR 0x028U
+#define CORTEXAR_DBG_DSMCR 0x02cU
+#define CORTEXAR_DBG_OSLAR 0x300U
+#define CORTEXAR_DBG_OSLSR 0x304U
+#define CORTEXAR_DBG_LAR   0xfb0U /* Lock Access */
+#define CORTEXAR_DBG_LSR   0xfb4U /* Lock Status */
+
+#define DBGOSLSR_OSLM0 (1U << 0U)
+#define DBGOSLSR_OSLK  (1U << 1U)
+#define DBGOSLSR_NTT   (1U << 2U)
+#define DBGOSLSR_OSLM1 (1U << 3U)
+#define DBGOSLSR_OSLM  (DBGOSLSR_OSLM0|DBGOSLSR_OSLM1)
+
 #define CORTEXAR_DBG_IDR_BREAKPOINT_MASK  0xfU
 #define CORTEXAR_DBG_IDR_BREAKPOINT_SHIFT 24U
 #define CORTEXAR_DBG_IDR_WATCHPOINT_MASK  0xfU
@@ -109,6 +122,9 @@ typedef struct cortexa_priv {
 #define CORTEXAR_DBG_DSCR_ITR_ENABLE       (1U << 13U)
 #define CORTEXAR_DBG_DSCR_HALT_DBG_ENABLE  (1U << 14U)
 #define CORTEXAR_DBG_DSCR_INSN_COMPLETE    (1U << 24U)
+#define CORTEXAR_DBG_DSCR_DTRTX_FULL_LATCHED (1U << 26U)
+#define CORTEXAR_DBG_DSCR_DTRRX_FULL_LATCHED (1U << 27U)
+/* bit 28 is reserved */
 #define CORTEXAR_DBG_DSCR_DTR_READ_READY   (1U << 29U)
 #define CORTEXAR_DBG_DSCR_DTR_WRITE_DONE   (1U << 30U)
 
@@ -317,6 +333,54 @@ static size_t create_tdesc_cortex_a(char *buffer, size_t max_len)
 	return (size_t)total;
 }
 
+typedef struct bitfield_entry {
+	char * desc;
+	uint8_t bitnum;
+} bitfields_lut_s;
+
+static const bitfields_lut_s cortexa_dbg_dscr_lut[] = {
+	{""HALTED"", 0U},
+	{""RESTARTED"", 1U},
+	{""SDABORT_l"", 6U},
+	{""ADABORT_l"", 7U},
+	{""UND_l"", 8U},
+	{""FS"", 9U},
+	{""ITRen"", 13U},
+	{""HDBGen"", 14U},
+	{""MDBGen"", 15U},
+	{""InstrCompl_l"", 24U},
+	{""PipeAdv"", 25U},
+	{""TXfull_l"", 26U},
+	{""RXfull_l"", 27U},
+	{""TXfull"", 29U},
+	{""RXfull"", 30U},
+	{} /* sentinel */
+};
+
+static void helper_print_bitfields(const uint32_t val, const bitfields_lut_s lut[], const size_t array_length)
+{
+	for (size_t i = 0; i < array_length; i++) {
+		if (val & (1U << lut[i].bitnum)) {
+			DEBUG_TARGET(""%s "", lut[i].desc);
+		}
+	}
+};
+
+static void cortexa_decode_bitfields(const uint32_t reg, const uint32_t val)
+{
+	DEBUG_TARGET(""Bits set in reg "");
+	switch (reg) {
+	case CORTEXAR_DBG_DSCR:
+		DEBUG_TARGET(""DBGDSCR: "");
+		helper_print_bitfields(val, cortexa_dbg_dscr_lut, ARRAY_LENGTH(cortexa_dbg_dscr_lut));
+		break;
+	default:
+		DEBUG_TARGET(""unknown reg"");
+		break;
+	}
+
+	DEBUG_TARGET(""\n"");
+}
 static void cortexar_run_insn(target_s *const target, const uint32_t insn)
 {
 	/* Issue the requested instruction to the core */
@@ -331,10 +395,11 @@ static uint32_t cortexar_run_read_insn(target_s *const target, const uint32_t in
 	/* Issue the requested instruction to the core */
 	cortex_dbg_write32(target, CORTEXAR_DBG_ITR, insn);
 	/* Poll for the instruction to complete and the data to become ready in the DTR */
-	while ((cortex_dbg_read32(target, CORTEXAR_DBG_DSCR) &
-			   (CORTEXAR_DBG_DSCR_INSN_COMPLETE | CORTEXAR_DBG_DSCR_DTR_READ_READY)) !=
-		(CORTEXAR_DBG_DSCR_INSN_COMPLETE | CORTEXAR_DBG_DSCR_DTR_READ_READY))
-		continue;
+	const uint32_t dscr_ready_mask = CORTEXAR_DBG_DSCR_INSN_COMPLETE | CORTEXAR_DBG_DSCR_DTRTX_FULL_LATCHED; // | CORTEXAR_DBG_DSCR_DTR_READ_READY;
+	uint32_t dscr;
+	do {
+		dscr = cortex_dbg_read32(target, CORTEXAR_DBG_DSCR);
+	} while ((dscr & dscr_ready_mask) != dscr_ready_mask);
 	/* Read back the DTR to complete the read */
 	return cortex_dbg_read32(target, CORTEXAR_DBG_DTRRX);
 }
@@ -508,6 +573,8 @@ bool cortexa_probe(adiv5_access_port_s *ap, target_addr_t base_address)
 	target->halt_poll = cortexa_halt_poll;
 	target->halt_resume = cortexa_halt_resume;
 
+#if 0 /* Trying to halt STM32MP15x Cortex-A cores during probe locks up BMDA/BMF! */
+
 	/* Try to halt the target core */
 	target_halt_request(target);
 	platform_timeout_s timeout;
@@ -518,6 +585,7 @@ bool cortexa_probe(adiv5_access_port_s *ap, target_addr_t base_address)
 	/* If we did not succeed, we must abort at this point. */
 	if (reason == TARGET_HALT_FAULT || reason == TARGET_HALT_ERROR)
 		return false;
+#endif
 
 	cortex_read_cpuid(target);
 	/* The format of the debug identification register is described in DDI0406C §C11.11.15 pg2217 */
@@ -569,12 +637,44 @@ bool cortexa_attach(target_s *target)
 	/* Clear any pending fault condition */
 	target_check_error(target);
 
-	/* Enable halting debug mode */
+#if 0
+	/* Reset 0xC5ACCE55 lock access to deter software */
+	cortex_dbg_write32(target, CORTEXAR_DBG_LAR, 0U);
+	/* Cache write-through */
+	cortex_dbg_write32(target, CORTEXAR_DBG_DSCCR, 0U);
+	/* Disable TLB lookup and refill/eviction */
+	cortex_dbg_write32(target, CORTEXAR_DBG_DSMCR, 0U);
+#endif
+
+	uint32_t dbg_osreg = cortex_dbg_read32(target, CORTEXAR_DBG_OSLSR);
+	DEBUG_INFO(""%s: DBGOSLSR = 0x%08X\n"", __func__, dbg_osreg);
+	/* Is OS Lock implemented? */
+	if (((dbg_osreg & DBGOSLSR_OSLM) == DBGOSLSR_OSLM0) || ((dbg_osreg & DBGOSLSR_OSLM) == DBGOSLSR_OSLM1)) {
+		/* Is OS Lock set? */
+		if (dbg_osreg & DBGOSLSR_OSLK) {
+			DEBUG_WARN(""%s: OSLock set! Trying to unlock\n"", __func__);
+			cortex_dbg_write32(target, CORTEXAR_DBG_OSLAR, 0U);
+			dbg_osreg = cortex_dbg_read32(target, CORTEXAR_DBG_OSLSR);
+
+			if ((dbg_osreg & DBGOSLSR_OSLK) != 0) {
+				DEBUG_ERROR(""%s: OSLock sticky, core not powered?\n"", __func__);
+			}
+		}
+	}
+
 	uint32_t dbgdscr = cortex_dbg_read32(target, CORTEXAR_DBG_DSCR);
-	dbgdscr |= CORTEXAR_DBG_DSCR_ITR_ENABLE | CORTEXAR_DBG_DSCR_ITR_ENABLE;
+	DEBUG_INFO(""%s: DBGDSCR = 0x%08"" PRIx32 "" (1)\n"", __func__, dbgdscr);
+	cortexa_decode_bitfields(CORTEXAR_DBG_DSCR, dbgdscr);
+
+	/* Enable halting debug mode */
+	dbgdscr |= CORTEXAR_DBG_DSCR_HALT_DBG_ENABLE | CORTEXAR_DBG_DSCR_ITR_ENABLE;
+	cortex_dbg_write32(target, CORTEXAR_DBG_DSCR, dbgdscr);
 	dbgdscr &= ~DBGDSCR_EXTDCCMODE_MASK;
 	cortex_dbg_write32(target, CORTEXAR_DBG_DSCR, dbgdscr);
-	DEBUG_INFO(""DBGDSCR = 0x%08"" PRIx32 ""\n"", dbgdscr);
+
+	dbgdscr = cortex_dbg_read32(target, CORTEXAR_DBG_DSCR);
+	DEBUG_INFO(""%s: DBGDSCR = 0x%08"" PRIx32 "" (2)\n"", __func__, dbgdscr);
+	cortexa_decode_bitfields(CORTEXAR_DBG_DSCR, dbgdscr);
 
 	target_halt_request(target);
 	size_t tries = 10;
@@ -834,6 +934,11 @@ static target_halt_reason_e cortexa_halt_poll(target_s *t, target_addr_t *watch)
 void cortexa_halt_resume(target_s *t, bool step)
 {
 	cortexa_priv_s *priv = t->priv;
+
+	uint32_t dbgdscr = cortex_dbg_read32(t, CORTEXAR_DBG_DSCR);
+	if (!(dbgdscr & CORTEXAR_DBG_DSCR_HALTED)) /* Not halted */
+		return;
+
 	/* Set breakpoint comparator for single stepping if needed */
 	if (step) {
 		uint32_t addr = priv->reg_cache.r[15];
@@ -853,7 +958,7 @@ void cortexa_halt_resume(target_s *t, bool step)
 	cortexar_run_insn(t, MCR | ICIALLU); /* invalidate cache */
 
 	/* Disable DBGITR.  Not sure why, but RRQ is ignored otherwise. */
-	uint32_t dbgdscr = cortex_dbg_read32(t, CORTEXAR_DBG_DSCR);
+	dbgdscr = cortex_dbg_read32(t, CORTEXAR_DBG_DSCR);
 	if (step)
 		dbgdscr |= DBGDSCR_INTDIS;
 	else
"
scBkDNeE,awd,Zuneve,C++,Friday 22nd of September 2023 11:46:08 AM CDT,"#include <bits/stdc++.h>

using namespace std;

using ll = long long;

const ll INF = 1e15 + 7;

vector<ll> used;
vector<ll> topsort;

void dfs_ts(ll v, vector<map<ll, ll>> &gr) {
    used[v] = true;
    for (auto [u, k] : gr[v]) {
        if (!used[u]) {
            dfs_ts(u, gr);
        }
    }
    topsort.push_back(v);
}

int main() {
    ll n, m, s, t;
    cin >> n >> m >> s >> t;
    --s;
    --t;
    vector<map<ll, ll>> gr(n);
    for (ll i = 0; i < m; i++) {
        ll a, b, c;
        cin >> a >> b >> c;
        --a;
        --b;
        gr[a][b] = c;
    }
    used.assign(n, false);
    for (ll i = 0; i < n; i++) {
        if (!used[i]) dfs_ts(i, gr);
    }
    reverse(topsort.begin(), topsort.end());
    ll i;
    for (i = 0; i < n; i++) {
        if (topsort[i] == s) {
            break;
        }
    } ll S = i;
    vector<ll> dp(n, INF);
    used.assign(n, false);
    dp[s] = 0;
    for (i = S; i < n; i++) {
        if (dp[topsort[i]] != INF) {
            for (auto [u, k] : gr[topsort[i]]) {
                dp[u] = min(dp[u], dp[topsort[i]] + k);
            }
        }
    }
    if (dp[t] == INF) {
        cout << ""Unreachable"";
    } else {
        cout << dp[t];
    }
    return 0;
}"
sLqrGc2j,Review PRC Broker,fxvnpro,PHP,Friday 22nd of September 2023 11:27:03 AM CDT,https://www.fxvnpro.com/review-prc-broker/
LtPDfkL7,calc (last ver),1kostik1,PHP,Friday 22nd of September 2023 11:24:50 AM CDT,"<?php

function applyFunction($functionName, $arg1, $arg2)
{
    switch ($functionName) {
        case 'log':
            $num = $arg1;
            $base = $arg2;
            if ($num > 0 && $base > 0 && $base != 1) {
                return log($num, $base);
            } else {
                return false;
            }
        // Можно дополнить
    }
}

function evaluateExpression($expression) {
    $operators = ['+', '-', '*', '/', '^'];
    $functions = ['log']; // Можно дополнить
    $operatorStack = [];
    $operandStack = [];

    $i = 0;
    $unaryMinus = false;

    while ($i < strlen($expression)) {
        $char = $expression[$i];
        if (is_numeric($char) || $char == '.') {
            $operand = '';
            while ($i < strlen($expression) && (is_numeric($expression[$i]) || $expression[$i] == '.')) {
                $operand .= $expression[$i];
                $i++;
            }
            $operandStack[] = (float)$operand;
            if ($unaryMinus) {
                $operandStack[count($operandStack) - 1] = -$operandStack[count($operandStack) - 1];
                $unaryMinus = false;
            }
            continue;
        } elseif ($char == '-' && (empty($operandStack) || $expression[$i-1] == '(')) {
            $unaryMinus = true;
            $i++;
            continue;
        } elseif (in_array($char, $operators)) {
            while (!empty($operatorStack) && (!$unaryMinus && precedence($operatorStack[count($operatorStack) - 1]) >= precedence($char) || $unaryMinus)) {
                $operator = array_pop($operatorStack);
                $operand2 = array_pop($operandStack);
                $operand1 = array_pop($operandStack);
                $operandStack[] = applyOperator($operand1, $operator, $operand2);
            }
            $operatorStack[] = $char;
            $unaryMinus = false;
        } elseif ($char == '(') {
            if ($unaryMinus) {
                $operandStack[] = 0;
                $operatorStack[] = '-';
                $unaryMinus = false;
            }
            $operatorStack[] = $char;
        } elseif ($char == ')') {
            while (end($operatorStack) != '(') {
                $operator = array_pop($operatorStack);
                $operand2 = array_pop($operandStack);
                $operand1 = array_pop($operandStack);
                $operandStack[] = applyOperator($operand1, $operator, $operand2);
            }
            array_pop($operatorStack);
        } elseif (preg_match('/([a-zA-Z]+)\(([^()]*)\)/', $expression, $matches)) {
            while (!empty($matches)) {
                $functionName = $matches[1];
                $args = explode(',', $matches[2]);
                $argValues = array_map('evaluateExpression', $args);
                $expression = str_replace($matches[0], applyFunction($functionName, ...$argValues), $expression);
                preg_match('/([a-zA-Z]+)\(([^()]*)\)/', $expression, $matches);
            }
            continue;
        }
        $i++;
    }

    while (!empty($operatorStack)) {
        $operator = array_pop($operatorStack);
        $operand2 = array_pop($operandStack);
        $operand1 = array_pop($operandStack);
        $operandStack[] = applyOperator($operand1, $operator, $operand2);
    }

    return $operandStack[0];
}

function precedence($operator): int
{
    if ($operator == '+' || $operator == '-') return 1;
    if ($operator == '*' || $operator == '/') return 2;
    if ($operator == '^') return 3;
    return 0;
}

function applyOperator($operand1, $operator, $operand2)
{
    switch ($operator) {
        case '+':
            return $operand1 + $operand2;
        case '-':
            return $operand1 - $operand2;
        case '*':
            return $operand1 * $operand2;
        case '/':
            if ($operand2 != 0) {
                return $operand1 / $operand2;
            } else {
                return false; // Error: Division by zero
            }
        case '^':
            return pow($operand1, $operand2);
    }
}

function validateBrackets($expression): string
{
    $openingBrackets = substr_count($expression, '(');
    $closingBrackets = substr_count($expression, ')');

    return ($openingBrackets === $closingBrackets) ? 'true' : 'false';
}

function validateOperandsAndOperators($expression): string
{
    // Убираем унарный минус перед первым операндом
    $expression = ltrim($expression, '-');

    // Подсчет операторов и операндов
    $operatorCount = preg_match_all('/(?<!\()[-+*\/^]/', $expression);
    $operandCount = preg_match_all('/-?\d+(\.\d+)?/', $expression);

    // Подсчет функций
    $functions = ['log']; // Можно дополнить
    $totalFunctions = 0;
    foreach ($functions as $function)
        $totalFunctions += substr_count($expression, $function);
    $operatorCount += $totalFunctions;

    return ($operatorCount === $operandCount-1) ? 'true' : 'false';
}

function validateExpression($expression): void
{
    $bracketsError = validateBrackets($expression);
    $operandsAndOperatorsError = validateOperandsAndOperators($expression);

    echo ""Validate expression:\n"";
    echo ""1. Matching the number of parentheses: $bracketsError\n"";
    echo ""2. Matching the number of operands and operators: $operandsAndOperatorsError\n"";
    $result = evaluateExpression($expression);
    $divisionByZero = (evaluateExpression($expression) === false) ? 'true' : 'false';
    echo ""3. Division by zero: $divisionByZero\n"";


    if ($bracketsError !== 'false' && $operandsAndOperatorsError !== 'false' && $divisionByZero !== 'true') {
        echo ""Result: $result\n\n"";
    } else {
        echo ""Validation failed. Unable to calculate the result.\n\n"";
    }
}

$flag = false;
while ($flag == false) {
    echo ""Input expression: "";
    $expression = readline();
    if ($expression === 'exit') {
        $flag = true;
        break;
    }
    validateExpression($expression);
}"
5TC5pWhk,++ snowybot update,coinwalk,JavaScript,Friday 22nd of September 2023 11:24:25 AM CDT,"var measly = parseFloat(document.getElementById('pct_balance').value);
var baby = Number((measly/144000).toFixed(8));
var moon = baby;
var taget = 200000;
var tens = (baby*10000);
var sevens = (baby*7000);
var baboon = false;
var upper = 7000;
var downer = 3000;
var zoom = ((Math.floor(measly/tens))*tens);
var olzerer = ((Math.floor(measly/tens))*tens);
var mith = 1;
var zuel = parseFloat(document.getElementById('pct_balance').value);
var bart = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var lisa = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
 
function get(){
zuel = parseFloat(document.getElementById('pct_balance').value);
if (zuel>(zoom+(moon*upper))) {
    moon = Number((moon*2).toFixed(8));
    upper = 5000;
    downer = 5000;
    zoom = parseFloat(zuel);
}
if (zuel<(zoom-(moon*downer))) {
    moon = Number((moon*2).toFixed(8));
    upper = 5000;
    downer = 5000;
    mith = 0
    zoom = parseFloat(zuel);
}
if ((zuel>=(olzerer+(tens*mith)))&&(zuel<(((Math.floor(zuel/tens))*tens)+sevens))){
    moon = baby;
    upper = 7000;
    downer = 3000;
    mith = 1;
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
    if (zuel >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }     
    lisa = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
     if ((lisa > bart)&&(baboon)) {
var funeral = Number((zuel - measly).toFixed(8));
console.log(""profit"");
console.log(funeral); 
      baboon = false; 
       bart = parseFloat(lisa);
    }
    if ((lisa == bart)&&(!baboon)) { 
        baboon = true; 
        $('#pct_chance').val(0.0495);
        $('#pct_bet').val(((moon*1).toFixed(8)));
        $('#a_lo').click();
    }
    setTimeout(() => get(), 1);
}
get();"
28i4YBqF,Json IFTTT,jensie1996,JSON,Friday 22nd of September 2023 11:18:23 AM CDT,"{ ""username"":""NAAM"", ""avatar_url"":""URL"", ""content"":""**Nieuwe video**\n\n**{{AuthorName}}** heeft een video geupload! :video_camera:\n\n{{Title}}\n\n{{Url}}"" }


{ ""username"":""NAAM"", ""avatar_url"":""URL"", ""content"":""**Nieuwe Foto**\n\n**Jens** heeft een foto op Insta geplaatst! :frame_photo:\n\n{{Caption}}\n\n[Bekijk Foto]({{Url}})"""
FdawY8Em,Untitled,remico,JavaScript,Friday 22nd of September 2023 11:16:18 AM CDT,"function fuelTank (input){
    let fuel = input [0];
    let liter = Number [1];

    if (fuel !== fuel){
            console.log (`Invalid fuel`);
    }
    else if (liter >= 25){
             console.log (`You have enough ${fuel}`);
    }else {
        console.log (`Fill your tank with ${fuel}!');
    }

}
fuelTank(['Diesel','10']);
fuelTank(['Gasoline','40']);
fuelTank(['Gas','25']);
fuelTank(['Kerosene','200']);"
XGjc0afF,Untitled,Skos_Martren,C++,Friday 22nd of September 2023 11:07:01 AM CDT,"const int ZERO = [](){

    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    
    return 0;
}();

class Solution {

    private:

    int ans = 0;
public:

    void Inorder(TreeNode* root, int low, int high){

        if(root == nullptr){return;}

        Inorder(root->left, low, high);

        if(low<= root->val && root->val <= high){ans+= root->val;}
        if(root->val > high){return;} // эта строка учитывает информацию о том, что дано BST -- при inorder обходе значения в узлах образуют возрастающую последовательность

        Inorder(root->right, low, high);
    }

    int rangeSumBST(TreeNode* root, int low, int high) {
        
        Inorder(root, low, high);
        return ans;
    }
};"
tV9C5CnB,фцв,Zuneve,C++,Friday 22nd of September 2023 10:59:50 AM CDT,"#include <bits/stdc++.h>

using namespace std;

using ll = long long;

const ll INF = 1e15 + 7;

vector<ll> used;
vector<ll> topsort;

void dfs_ts(ll v, vector<map<ll, ll>> &gr) {
    used[v] = true;
    for (auto [u, k] : gr[v]) {
        if (!used[u]) {
            dfs_ts(u, gr);
        }
    }
    topsort.push_back(v);
}

int main() {
    ll n, m, s, t;
    cin >> n >> m >> s >> t;
    --s;
    --t;
    vector<map<ll, ll>> gr(n);
    for (ll i = 0; i < m; i++) {
        ll a, b, c;
        cin >> a >> b >> c;
        --a;
        --b;
        gr[a][b] = c;
    }
    used.assign(n, false);
    for (ll i = 0; i < n; i++) {
        if (!used[i]) dfs_ts(i, gr);
    }
    reverse(topsort.begin(), topsort.end());
    vector<ll> dp(n, INF);
    dp[s] = 0;
    for (ll i = 0; i < n; i++) {
        if (dp[i] < INF) {
            for (auto [u, k] : gr[topsort[i]]) {
                dp[u] = min(dp[u], dp[topsort[i]] + k);
            }
        }
    }
    if (dp[t] == INF) {
        cout << ""Unreachable"";
    } else {
        cout << dp[t];
    }
    return 0;
}"
H6bDZYCx,Nigerian scammers [22-9-1/2023],bombaires,HTML,Friday 22nd of September 2023 10:45:09 AM CDT,"<a href=""mailto:rosariatomas121@gmail.com"">rosariatomas121@gmail.com</a>
<a href=""mailto:r.os.a.r.ia.tom.as.121@gmail.com"">r.os.a.r.ia.tom.as.121@gmail.com</a>
<a href=""mailto:ros.ar.i.a.tomas12.1@gmail.com"">ros.ar.i.a.tomas12.1@gmail.com</a>
<a href=""mailto:ro.sar.iat.o.mas.1.2.1@gmail.com"">ro.sar.iat.o.mas.1.2.1@gmail.com</a>
<a href=""mailto:ro.sa.r.iato.m.a.s1.2.1@gmail.com"">ro.sa.r.iato.m.a.s1.2.1@gmail.com</a>
<a href=""mailto:r.o.sa.r.ia.to.m.a.s1.21@gmail.com"">r.o.sa.r.ia.to.m.a.s1.21@gmail.com</a>
<a href=""mailto:r.o.s.a.ri.at.om.a.s.121@gmail.com"">r.o.s.a.ri.at.om.a.s.121@gmail.com</a>
<a href=""mailto:ro.sa.ria.tom.a.s.1.2.1@gmail.com"">ro.sa.ria.tom.a.s.1.2.1@gmail.com</a>
<a href=""mailto:ro.sari.ato.m.a.s.1.2.1@gmail.com"">ro.sari.ato.m.a.s.1.2.1@gmail.com</a>
<a href=""mailto:ro.s.aria.toma.s12.1@gmail.com"">ro.s.aria.toma.s12.1@gmail.com</a>
<a href=""mailto:r.osa.r.i.atom.as121@gmail.com"">r.osa.r.i.atom.as121@gmail.com</a>
<a href=""mailto:r.o.s.a.r.i.atom.a.s.1.2.1@gmail.com"">r.o.s.a.r.i.atom.a.s.1.2.1@gmail.com</a>
<a href=""mailto:ro.sar.ia.t.om.as12.1@gmail.com"">ro.sar.ia.t.om.as12.1@gmail.com</a>
<a href=""mailto:ros.a.ria.to.m.a.s.1.21@gmail.com"">ros.a.ria.to.m.a.s.1.21@gmail.com</a>
<a href=""mailto:r.o.sa.ri.ato.mas12.1@gmail.com"">r.o.sa.ri.ato.mas12.1@gmail.com</a>
<a href=""mailto:r.o.s.a.r.i.at.o.m.a.s1.21@gmail.com"">r.o.s.a.r.i.at.o.m.a.s1.21@gmail.com</a>
<a href=""mailto:r.osa.r.iato.mas1.2.1@gmail.com"">r.osa.r.iato.mas1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.ar.i.ato.mas121@gmail.com"">r.o.s.ar.i.ato.mas121@gmail.com</a>
<a href=""mailto:r.o.s.ar.i.atom.as.1.2.1@gmail.com"">r.o.s.ar.i.atom.as.1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.ar.i.a.tom.as12.1@gmail.com"">r.o.s.ar.i.a.tom.as12.1@gmail.com</a>
<a href=""mailto:r.osa.ri.a.to.m.as.1.21@gmail.com"">r.osa.ri.a.to.m.as.1.21@gmail.com</a>
<a href=""mailto:ro.sa.r.iat.omas12.1@gmail.com"">ro.sa.r.iat.omas12.1@gmail.com</a>
<a href=""mailto:ro.s.ar.iato.m.a.s.1.2.1@gmail.com"">ro.s.ar.iato.m.a.s.1.2.1@gmail.com</a>
<a href=""mailto:ro.sari.atom.a.s.1.2.1@gmail.com"">ro.sari.atom.a.s.1.2.1@gmail.com</a>
<a href=""mailto:r.osari.atom.a.s1.21@gmail.com"">r.osari.atom.a.s1.21@gmail.com</a>
<a href=""mailto:rosa.r.iatom.a.s.121@gmail.com"">rosa.r.iatom.a.s.121@gmail.com</a>
<a href=""mailto:r.osari.a.t.omas.121@gmail.com"">r.osari.a.t.omas.121@gmail.com</a>
<a href=""mailto:ro.s.a.r.ia.toma.s.121@gmail.com"">ro.s.a.r.ia.toma.s.121@gmail.com</a>
<a href=""mailto:r.os.ar.iat.o.m.a.s.121@gmail.com"">r.os.ar.iat.o.m.a.s.121@gmail.com</a>
<a href=""mailto:r.o.sa.r.ia.to.m.as121@gmail.com"">r.o.sa.r.ia.to.m.as121@gmail.com</a>
<a href=""mailto:r.osa.riato.m.a.s1.21@gmail.com"">r.osa.riato.m.a.s1.21@gmail.com</a>
<a href=""mailto:ro.sa.ria.to.ma.s.12.1@gmail.com"">ro.sa.ria.to.ma.s.12.1@gmail.com</a>
<a href=""mailto:r.osa.r.i.a.t.oma.s1.2.1@gmail.com"">r.osa.r.i.a.t.oma.s1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.a.ri.ato.m.a.s.12.1@gmail.com"">r.o.s.a.ri.ato.m.a.s.12.1@gmail.com</a>
<a href=""mailto:r.o.sar.i.a.t.o.m.a.s12.1@gmail.com"">r.o.sar.i.a.t.o.m.a.s12.1@gmail.com</a>
<a href=""mailto:ro.s.a.ria.tomas.121@gmail.com"">ro.s.a.ria.tomas.121@gmail.com</a>
<a href=""mailto:r.os.ari.at.o.m.a.s.1.2.1@gmail.com"">r.os.ari.at.o.m.a.s.1.2.1@gmail.com</a>
<a href=""mailto:ro.sar.ia.to.mas1.21@gmail.com"">ro.sar.ia.to.mas1.21@gmail.com</a>
<a href=""mailto:r.os.a.ri.atomas.1.21@gmail.com"">r.os.a.ri.atomas.1.21@gmail.com</a>
<a href=""mailto:ros.aria.t.o.m.a.s.121@gmail.com"">ros.aria.t.o.m.a.s.121@gmail.com</a>
<a href=""mailto:r.o.sar.i.a.to.m.as.1.21@gmail.com"">r.o.sar.i.a.to.m.as.1.21@gmail.com</a>
<a href=""mailto:ro.sa.r.ia.tom.a.s.12.1@gmail.com"">ro.sa.r.ia.tom.a.s.12.1@gmail.com</a>
<a href=""mailto:rosa.ri.a.t.oma.s.1.21@gmail.com"">rosa.ri.a.t.oma.s.1.21@gmail.com</a>
<a href=""mailto:r.o.s.a.riato.ma.s12.1@gmail.com"">r.o.s.a.riato.ma.s12.1@gmail.com</a>
<a href=""mailto:ro.sariat.o.m.as.121@gmail.com"">ro.sariat.o.m.as.121@gmail.com</a>
<a href=""mailto:r.o.s.a.ri.a.tom.a.s1.21@gmail.com"">r.o.s.a.ri.a.tom.a.s1.21@gmail.com</a>
<a href=""mailto:ros.ari.a.t.o.mas121@gmail.com"">ros.ari.a.t.o.mas121@gmail.com</a>
<a href=""mailto:r.o.s.a.r.i.atoma.s.121@gmail.com"">r.o.s.a.r.i.atoma.s.121@gmail.com</a>
<a href=""mailto:ros.a.riato.ma.s121@gmail.com"">ros.a.riato.ma.s121@gmail.com</a>
<a href=""mailto:ros.a.r.ia.t.om.a.s121@gmail.com"">ros.a.r.ia.t.om.a.s121@gmail.com</a>
<a href=""mailto:ros.ar.ia.tom.a.s.1.21@gmail.com"">ros.ar.ia.tom.a.s.1.21@gmail.com</a>
<a href=""mailto:r.o.sa.r.i.at.oma.s.1.2.1@gmail.com"">r.o.sa.r.i.at.oma.s.1.2.1@gmail.com</a>
<a href=""mailto:r.osar.i.ato.m.a.s121@gmail.com"">r.osar.i.ato.m.a.s121@gmail.com</a>
<a href=""mailto:r.osar.i.a.t.o.m.as12.1@gmail.com"">r.osar.i.a.t.o.m.as12.1@gmail.com</a>
<a href=""mailto:r.o.sa.ri.a.t.o.m.a.s.121@gmail.com"">r.o.sa.ri.a.t.o.m.a.s.121@gmail.com</a>
<a href=""mailto:r.o.sar.ia.t.o.m.as.1.2.1@gmail.com"">r.o.sar.ia.t.o.m.as.1.2.1@gmail.com</a>
<a href=""mailto:ro.sar.iat.o.m.as.12.1@gmail.com"">ro.sar.iat.o.m.as.12.1@gmail.com</a>
<a href=""mailto:r.o.sar.ia.t.o.m.a.s.12.1@gmail.com"">r.o.sar.ia.t.o.m.a.s.12.1@gmail.com</a>
<a href=""mailto:ro.sa.ri.ato.m.a.s.121@gmail.com"">ro.sa.ri.ato.m.a.s.121@gmail.com</a>
<a href=""mailto:r.o.sariat.omas1.2.1@gmail.com"">r.o.sariat.omas1.2.1@gmail.com</a>
<a href=""mailto:rosar.iat.o.ma.s1.2.1@gmail.com"">rosar.iat.o.ma.s1.2.1@gmail.com</a>
<a href=""mailto:r.os.ariat.omas.121@gmail.com"">r.os.ariat.omas.121@gmail.com</a>
<a href=""mailto:r.o.sa.riato.ma.s12.1@gmail.com"">r.o.sa.riato.ma.s12.1@gmail.com</a>
<a href=""mailto:ro.s.a.ri.atom.as1.2.1@gmail.com"">ro.s.a.ri.atom.as1.2.1@gmail.com</a>
<a href=""mailto:rosa.r.i.a.tomas.121@gmail.com"">rosa.r.i.a.tomas.121@gmail.com</a>
<a href=""mailto:ro.sari.atom.as.121@gmail.com"">ro.sari.atom.as.121@gmail.com</a>
<a href=""mailto:r.o.sar.i.at.o.mas121@gmail.com"">r.o.sar.i.at.o.mas121@gmail.com</a>
<a href=""mailto:r.o.sa.riatoma.s1.21@gmail.com"">r.o.sa.riatoma.s1.21@gmail.com</a>
<a href=""mailto:r.o.sariato.m.as12.1@gmail.com"">r.o.sariato.m.as12.1@gmail.com</a>
<a href=""mailto:r.o.s.ari.a.tomas.1.2.1@gmail.com"">r.o.s.ari.a.tomas.1.2.1@gmail.com</a>
<a href=""mailto:r.os.ar.i.ato.ma.s.1.2.1@gmail.com"">r.os.ar.i.ato.ma.s.1.2.1@gmail.com</a>
<a href=""mailto:r.o.sar.ia.t.o.ma.s.12.1@gmail.com"">r.o.sar.ia.t.o.ma.s.12.1@gmail.com</a>
<a href=""mailto:r.osari.at.o.mas.1.2.1@gmail.com"">r.osari.at.o.mas.1.2.1@gmail.com</a>
<a href=""mailto:r.o.sa.r.i.a.t.o.mas.121@gmail.com"">r.o.sa.r.i.a.t.o.mas.121@gmail.com</a>
<a href=""mailto:ro.sar.i.a.tomas1.2.1@gmail.com"">ro.sar.i.a.tomas1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.ar.ia.tomas.12.1@gmail.com"">r.o.s.ar.ia.tomas.12.1@gmail.com</a>
<a href=""mailto:r.o.sar.iat.omas121@gmail.com"">r.o.sar.iat.omas121@gmail.com</a>
<a href=""mailto:ro.sa.r.ia.t.om.as.12.1@gmail.com"">ro.sa.r.ia.t.om.as.12.1@gmail.com</a>
<a href=""mailto:r.o.sar.iat.oma.s.1.21@gmail.com"">r.o.sar.iat.oma.s.1.21@gmail.com</a>
<a href=""mailto:r.os.ari.atomas.12.1@gmail.com"">r.os.ari.atomas.12.1@gmail.com</a>
<a href=""mailto:r.os.ari.a.to.mas1.2.1@gmail.com"">r.os.ari.a.to.mas1.2.1@gmail.com</a>
<a href=""mailto:ro.sar.ia.to.mas1.2.1@gmail.com"">ro.sar.ia.to.mas1.2.1@gmail.com</a>
<a href=""mailto:ros.a.ri.at.omas.121@gmail.com"">ros.a.ri.at.omas.121@gmail.com</a>
<a href=""mailto:r.osa.ria.tomas1.2.1@gmail.com"">r.osa.ria.tomas1.2.1@gmail.com</a>
<a href=""mailto:r.o.sar.i.a.to.m.a.s1.2.1@gmail.com"">r.o.sar.i.a.to.m.a.s1.2.1@gmail.com</a>
<a href=""mailto:r.o.sari.a.to.m.as121@gmail.com"">r.o.sari.a.to.m.as121@gmail.com</a>
<a href=""mailto:r.o.sa.ri.a.t.o.mas1.2.1@gmail.com"">r.o.sa.ri.a.t.o.mas1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.a.r.iatom.a.s.121@gmail.com"">r.o.s.a.r.iatom.a.s.121@gmail.com</a>
<a href=""mailto:r.o.s.aria.t.om.a.s.121@gmail.com"">r.o.s.aria.t.om.a.s.121@gmail.com</a>
<a href=""mailto:r.os.ariatomas121@gmail.com"">r.os.ariatomas121@gmail.com</a>
<a href=""mailto:r.o.s.ar.ia.t.omas.1.2.1@gmail.com"">r.o.s.ar.ia.t.omas.1.2.1@gmail.com</a>
<a href=""mailto:ro.sa.ri.at.o.ma.s.12.1@gmail.com"">ro.sa.ri.at.o.ma.s.12.1@gmail.com</a>
<a href=""mailto:r.osari.a.t.o.m.as.12.1@gmail.com"">r.osari.a.t.o.m.as.12.1@gmail.com</a>
<a href=""mailto:r.os.a.r.iatom.as1.21@gmail.com"">r.os.a.r.iatom.as1.21@gmail.com</a>
<a href=""mailto:r.osar.i.a.t.oma.s1.2.1@gmail.com"">r.osar.i.a.t.oma.s1.2.1@gmail.com</a>
<a href=""mailto:r.os.ariato.m.a.s.1.2.1@gmail.com"">r.os.ariato.m.a.s.1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.ari.a.t.o.ma.s.1.2.1@gmail.com"">r.o.s.ari.a.t.o.ma.s.1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.a.r.i.at.o.mas.12.1@gmail.com"">r.o.s.a.r.i.at.o.mas.12.1@gmail.com</a>
<a href=""mailto:r.o.s.ari.a.tomas.12.1@gmail.com"">r.o.s.ari.a.tomas.12.1@gmail.com</a>
<a href=""mailto:ro.sari.at.o.m.a.s1.2.1@gmail.com"">ro.sari.at.o.m.a.s1.2.1@gmail.com</a>
<a href=""mailto:r.o.sar.iato.m.as12.1@gmail.com"">r.o.sar.iato.m.as12.1@gmail.com</a>
<a href=""mailto:ros.a.r.i.a.to.m.as.1.2.1@gmail.com"">ros.a.r.i.a.to.m.as.1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.ari.a.t.oma.s1.2.1@gmail.com"">r.o.s.ari.a.t.oma.s1.2.1@gmail.com</a>
<a href=""mailto:rosar.ia.tom.a.s1.21@gmail.com"">rosar.ia.tom.a.s1.21@gmail.com</a>
<a href=""mailto:ro.s.a.r.iat.o.ma.s12.1@gmail.com"">ro.s.a.r.iat.o.ma.s12.1@gmail.com</a>
<a href=""mailto:r.o.s.ar.iato.ma.s.121@gmail.com"">r.o.s.ar.iato.ma.s.121@gmail.com</a>
<a href=""mailto:ros.a.riat.o.mas.1.21@gmail.com"">ros.a.riat.o.mas.1.21@gmail.com</a>
<a href=""mailto:ros.a.r.iat.oma.s.12.1@gmail.com"">ros.a.r.iat.oma.s.12.1@gmail.com</a>
<a href=""mailto:r.o.sa.r.iatom.as.1.2.1@gmail.com"">r.o.sa.r.iatom.as.1.2.1@gmail.com</a>
<a href=""mailto:r.o.sari.at.oma.s.121@gmail.com"">r.o.sari.at.oma.s.121@gmail.com</a>
<a href=""mailto:ros.a.r.i.at.o.m.as121@gmail.com"">ros.a.r.i.at.o.m.as121@gmail.com</a>
<a href=""mailto:rosar.iato.m.a.s1.2.1@gmail.com"">rosar.iato.m.a.s1.2.1@gmail.com</a>
<a href=""mailto:rosa.ri.ato.m.a.s12.1@gmail.com"">rosa.ri.ato.m.a.s12.1@gmail.com</a>
<a href=""mailto:ro.s.ari.a.toma.s12.1@gmail.com"">ro.s.ari.a.toma.s12.1@gmail.com</a>
<a href=""mailto:ro.s.a.riat.om.as.12.1@gmail.com"">ro.s.a.riat.om.as.12.1@gmail.com</a>
<a href=""mailto:ro.s.ari.a.t.omas1.21@gmail.com"">ro.s.ari.a.t.omas1.21@gmail.com</a>
<a href=""mailto:ro.s.a.r.i.a.t.om.as.121@gmail.com"">ro.s.a.r.i.a.t.om.as.121@gmail.com</a>
<a href=""mailto:rosar.ia.toma.s.1.2.1@gmail.com"">rosar.ia.toma.s.1.2.1@gmail.com</a>
<a href=""mailto:r.os.ar.iatomas121@gmail.com"">r.os.ar.iatomas121@gmail.com</a>
<a href=""mailto:r.osa.ria.toma.s1.21@gmail.com"">r.osa.ria.toma.s1.21@gmail.com</a>
<a href=""mailto:ros.a.riato.m.a.s.121@gmail.com"">ros.a.riato.m.a.s.121@gmail.com</a>
<a href=""mailto:r.o.sa.riat.om.a.s.1.2.1@gmail.com"">r.o.sa.riat.om.a.s.1.2.1@gmail.com</a>
<a href=""mailto:r.os.a.ri.at.oma.s.1.21@gmail.com"">r.os.a.ri.at.oma.s.1.21@gmail.com</a>
<a href=""mailto:ro.s.a.r.ia.to.m.a.s.12.1@gmail.com"">ro.s.a.r.ia.to.m.a.s.12.1@gmail.com</a>
<a href=""mailto:ro.sa.r.i.atoma.s12.1@gmail.com"">ro.sa.r.i.atoma.s12.1@gmail.com</a>
<a href=""mailto:r.osar.i.a.to.m.a.s.12.1@gmail.com"">r.osar.i.a.to.m.a.s.12.1@gmail.com</a>
<a href=""mailto:ros.ar.ia.tomas.121@gmail.com"">ros.ar.ia.tomas.121@gmail.com</a>
<a href=""mailto:rosa.r.ia.tom.as.121@gmail.com"">rosa.r.ia.tom.as.121@gmail.com</a>
<a href=""mailto:r.o.s.a.riat.o.m.as1.21@gmail.com"">r.o.s.a.riat.o.m.as1.21@gmail.com</a>
<a href=""mailto:ro.s.aria.t.oma.s121@gmail.com"">ro.s.aria.t.oma.s121@gmail.com</a>
<a href=""mailto:rosa.riatoma.s.12.1@gmail.com"">rosa.riatoma.s.12.1@gmail.com</a>
<a href=""mailto:ro.s.ar.i.ato.mas.1.21@gmail.com"">ro.s.ar.i.ato.mas.1.21@gmail.com</a>
<a href=""mailto:ro.sa.r.ia.tomas.1.2.1@gmail.com"">ro.sa.r.ia.tomas.1.2.1@gmail.com</a>
<a href=""mailto:ro.s.ar.ia.t.o.mas.1.21@gmail.com"">ro.s.ar.ia.t.o.mas.1.21@gmail.com</a>
<a href=""mailto:ro.sa.ri.a.t.om.a.s121@gmail.com"">ro.sa.ri.a.t.om.a.s121@gmail.com</a>
<a href=""mailto:r.os.a.riatom.as121@gmail.com"">r.os.a.riatom.as121@gmail.com</a>
<a href=""mailto:r.o.s.a.r.iat.oma.s.1.21@gmail.com"">r.o.s.a.r.iat.oma.s.1.21@gmail.com</a>
<a href=""mailto:r.o.s.aria.to.m.as1.21@gmail.com"">r.o.s.aria.to.m.as1.21@gmail.com</a>
<a href=""mailto:r.osa.ri.a.toma.s121@gmail.com"">r.osa.ri.a.toma.s121@gmail.com</a>
<a href=""mailto:r.o.s.a.r.iatom.as.1.2.1@gmail.com"">r.o.s.a.r.iatom.as.1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.a.ria.to.ma.s.121@gmail.com"">r.o.s.a.ria.to.ma.s.121@gmail.com</a>
<a href=""mailto:rosar.i.a.tom.a.s1.21@gmail.com"">rosar.i.a.tom.a.s1.21@gmail.com</a>
<a href=""mailto:r.os.a.riato.ma.s12.1@gmail.com"">r.os.a.riato.ma.s12.1@gmail.com</a>
<a href=""mailto:ro.s.ar.i.a.t.o.m.a.s12.1@gmail.com"">ro.s.ar.i.a.t.o.m.a.s12.1@gmail.com</a>
<a href=""mailto:ro.s.ar.ia.to.m.as1.21@gmail.com"">ro.s.ar.ia.to.m.as1.21@gmail.com</a>
<a href=""mailto:r.osari.at.omas.1.21@gmail.com"">r.osari.at.omas.1.21@gmail.com</a>
<a href=""mailto:ro.sa.ria.to.mas.121@gmail.com"">ro.sa.ria.to.mas.121@gmail.com</a>
<a href=""mailto:ro.s.ar.i.ato.m.as.1.2.1@gmail.com"">ro.s.ar.i.ato.m.as.1.2.1@gmail.com</a>
<a href=""mailto:r.osa.riatomas12.1@gmail.com"">r.osa.riatomas12.1@gmail.com</a>
<a href=""mailto:rosa.ria.t.om.as121@gmail.com"">rosa.ria.t.om.as121@gmail.com</a>
<a href=""mailto:ro.s.ar.iato.m.as1.2.1@gmail.com"">ro.s.ar.iato.m.as1.2.1@gmail.com</a>
<a href=""mailto:ro.sar.ia.t.om.as.12.1@gmail.com"">ro.sar.ia.t.om.as.12.1@gmail.com</a>
<a href=""mailto:r.osar.i.ato.mas.12.1@gmail.com"">r.osar.i.ato.mas.12.1@gmail.com</a>
<a href=""mailto:r.osa.ri.a.t.oma.s.121@gmail.com"">r.osa.ri.a.t.oma.s.121@gmail.com</a>
<a href=""mailto:rosa.r.iat.o.m.a.s121@gmail.com"">rosa.r.iat.o.m.a.s121@gmail.com</a>
<a href=""mailto:ro.sari.at.om.a.s121@gmail.com"">ro.sari.at.om.a.s121@gmail.com</a>
<a href=""mailto:rosa.ri.a.toma.s.1.2.1@gmail.com"">rosa.ri.a.toma.s.1.2.1@gmail.com</a>
<a href=""mailto:rosa.r.i.at.omas12.1@gmail.com"">rosa.r.i.at.omas12.1@gmail.com</a>
<a href=""mailto:ro.sa.r.i.a.t.o.m.as12.1@gmail.com"">ro.sa.r.i.a.t.o.m.as12.1@gmail.com</a>
<a href=""mailto:r.osari.at.o.m.a.s1.2.1@gmail.com"">r.osari.at.o.m.a.s1.2.1@gmail.com</a>
<a href=""mailto:ro.sa.ria.tomas121@gmail.com"">ro.sa.ria.tomas121@gmail.com</a>
<a href=""mailto:r.o.s.ariatoma.s.12.1@gmail.com"">r.o.s.ariatoma.s.12.1@gmail.com</a>
<a href=""mailto:r.osariatomas1.21@gmail.com"">r.osariatomas1.21@gmail.com</a>
<a href=""mailto:r.o.s.a.r.i.a.t.oma.s.121@gmail.com"">r.o.s.a.r.i.a.t.oma.s.121@gmail.com</a>
<a href=""mailto:rosari.a.tom.as.12.1@gmail.com"">rosari.a.tom.as.12.1@gmail.com</a>
<a href=""mailto:r.os.a.ria.t.o.m.as1.2.1@gmail.com"">r.os.a.ria.t.o.m.as1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.ari.at.o.ma.s1.21@gmail.com"">r.o.s.ari.at.o.ma.s1.21@gmail.com</a>
<a href=""mailto:ro.sari.a.t.om.as121@gmail.com"">ro.sari.a.t.om.as121@gmail.com</a>
<a href=""mailto:ro.sa.riat.om.as12.1@gmail.com"">ro.sa.riat.om.as12.1@gmail.com</a>
<a href=""mailto:ros.ar.i.ato.ma.s.12.1@gmail.com"">ros.ar.i.ato.ma.s.12.1@gmail.com</a>
<a href=""mailto:r.os.a.ria.t.o.m.a.s.121@gmail.com"">r.os.a.ria.t.o.m.a.s.121@gmail.com</a>
<a href=""mailto:rosar.i.ato.ma.s.1.2.1@gmail.com"">rosar.i.ato.ma.s.1.2.1@gmail.com</a>
<a href=""mailto:ro.sar.ia.t.o.m.a.s121@gmail.com"">ro.sar.ia.t.o.m.a.s121@gmail.com</a>
<a href=""mailto:r.osariat.o.m.a.s121@gmail.com"">r.osariat.o.m.a.s121@gmail.com</a>
<a href=""mailto:ro.s.ar.ia.t.o.m.as1.21@gmail.com"">ro.s.ar.ia.t.o.m.as1.21@gmail.com</a>
<a href=""mailto:ro.s.ariatoma.s1.21@gmail.com"">ro.s.ariatoma.s1.21@gmail.com</a>
<a href=""mailto:r.o.s.ar.ia.t.o.m.as12.1@gmail.com"">r.o.s.ar.ia.t.o.m.as12.1@gmail.com</a>
<a href=""mailto:rosa.ri.atom.as1.2.1@gmail.com"">rosa.ri.atom.as1.2.1@gmail.com</a>
<a href=""mailto:r.o.sari.ato.mas1.2.1@gmail.com"">r.o.sari.ato.mas1.2.1@gmail.com</a>
<a href=""mailto:ro.sa.ria.tom.as.1.2.1@gmail.com"">ro.sa.ria.tom.as.1.2.1@gmail.com</a>
<a href=""mailto:r.osar.ia.tomas12.1@gmail.com"">r.osar.ia.tomas12.1@gmail.com</a>
<a href=""mailto:r.o.s.a.ri.at.omas.1.2.1@gmail.com"">r.o.s.a.ri.at.omas.1.2.1@gmail.com</a>
<a href=""mailto:ro.s.a.r.ia.t.oma.s.1.2.1@gmail.com"">ro.s.a.r.ia.t.oma.s.1.2.1@gmail.com</a>
<a href=""mailto:ro.s.a.riat.o.m.as121@gmail.com"">ro.s.a.riat.o.m.as121@gmail.com</a>
<a href=""mailto:rosar.i.at.o.m.a.s1.2.1@gmail.com"">rosar.i.at.o.m.a.s1.2.1@gmail.com</a>
<a href=""mailto:r.os.ar.ia.tom.as.121@gmail.com"">r.os.ar.ia.tom.as.121@gmail.com</a>
<a href=""mailto:r.o.s.ar.ia.t.o.mas.121@gmail.com"">r.o.s.ar.ia.t.o.mas.121@gmail.com</a>
<a href=""mailto:r.osari.at.om.a.s.121@gmail.com"">r.osari.at.om.a.s.121@gmail.com</a>
<a href=""mailto:r.osar.ia.tom.as.1.2.1@gmail.com"">r.osar.ia.tom.as.1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.a.r.i.a.to.mas1.21@gmail.com"">r.o.s.a.r.i.a.to.mas1.21@gmail.com</a>
<a href=""mailto:ro.s.a.ria.t.o.m.as.1.2.1@gmail.com"">ro.s.a.ria.t.o.m.as.1.2.1@gmail.com</a>
<a href=""mailto:ros.ariato.mas.12.1@gmail.com"">ros.ariato.mas.12.1@gmail.com</a>
<a href=""mailto:ro.sa.r.i.a.t.o.mas.121@gmail.com"">ro.sa.r.i.a.t.o.mas.121@gmail.com</a>
<a href=""mailto:r.os.a.r.i.at.om.a.s.1.2.1@gmail.com"">r.os.a.r.i.at.om.a.s.1.2.1@gmail.com</a>
<a href=""mailto:r.os.a.r.i.ato.m.a.s1.21@gmail.com"">r.os.a.r.i.ato.m.a.s1.21@gmail.com</a>
<a href=""mailto:r.os.a.r.iat.o.mas12.1@gmail.com"">r.os.a.r.iat.o.mas12.1@gmail.com</a>
<a href=""mailto:rosar.i.at.o.mas1.21@gmail.com"">rosar.i.at.o.mas1.21@gmail.com</a>
<a href=""mailto:ros.ari.ato.m.as.121@gmail.com"">ros.ari.ato.m.as.121@gmail.com</a>
<a href=""mailto:r.o.s.ari.at.o.m.a.s1.2.1@gmail.com"">r.o.s.ari.at.o.m.a.s1.2.1@gmail.com</a>
<a href=""mailto:r.o.sa.ri.at.o.m.a.s12.1@gmail.com"">r.o.sa.ri.at.o.m.a.s12.1@gmail.com</a>
<a href=""mailto:ros.ari.at.o.m.as.1.2.1@gmail.com"">ros.ari.at.o.m.as.1.2.1@gmail.com</a>
<a href=""mailto:imfheadquartersim31@gmail.com"">imfheadquartersim31@gmail.com</a>
<a href=""mailto:imfhea.d.quarters.im31@gmail.com"">imfhea.d.quarters.im31@gmail.com</a>
<a href=""mailto:imf.h.e.a.d.quar.te.r.si.m.3.1@gmail.com"">imf.h.e.a.d.quar.te.r.si.m.3.1@gmail.com</a>
<a href=""mailto:imfh.eadq.u.arter.sim31@gmail.com"">imfh.eadq.u.arter.sim31@gmail.com</a>
<a href=""mailto:i.mfh.e.a.dq.uarte.r.s.im31@gmail.com"">i.mfh.e.a.dq.uarte.r.s.im31@gmail.com</a>
<a href=""mailto:i.mfh.e.adq.uar.te.rsi.m.31@gmail.com"">i.mfh.e.adq.uar.te.rsi.m.31@gmail.com</a>
<a href=""mailto:i.m.f.he.ad.qua.r.te.r.s.i.m3.1@gmail.com"">i.m.f.he.ad.qua.r.te.r.s.i.m3.1@gmail.com</a>
<a href=""mailto:i.mfhe.ad.q.ua.rt.er.s.i.m3.1@gmail.com"">i.mfhe.ad.q.ua.rt.er.s.i.m3.1@gmail.com</a>
<a href=""mailto:im.fh.e.adquar.ter.si.m31@gmail.com"">im.fh.e.adquar.ter.si.m31@gmail.com</a>
<a href=""mailto:im.fhead.qua.rt.er.s.im3.1@gmail.com"">im.fhead.qua.rt.er.s.im3.1@gmail.com</a>
<a href=""mailto:imf.h.ea.dq.uarte.rsim31@gmail.com"">imf.h.ea.dq.uarte.rsim31@gmail.com</a>
<a href=""mailto:i.mf.hea.dq.u.a.r.t.ers.i.m.3.1@gmail.com"">i.mf.hea.dq.u.a.r.t.ers.i.m.3.1@gmail.com</a>
<a href=""mailto:im.fhea.dquarter.s.im31@gmail.com"">im.fhea.dquarter.s.im31@gmail.com</a>
<a href=""mailto:i.mf.hea.dqu.a.rter.s.i.m.31@gmail.com"">i.mf.hea.dqu.a.rter.s.i.m.31@gmail.com</a>
<a href=""mailto:im.f.h.e.a.d.q.u.a.rt.e.rsim31@gmail.com"">im.f.h.e.a.d.q.u.a.rt.e.rsim31@gmail.com</a>
<a href=""mailto:i.mfh.ea.dqu.a.r.te.r.sim3.1@gmail.com"">i.mfh.ea.dqu.a.r.te.r.sim3.1@gmail.com</a>
<a href=""mailto:i.m.fh.e.a.dq.ua.rter.s.im.3.1@gmail.com"">i.m.fh.e.a.dq.ua.rter.s.im.3.1@gmail.com</a>
<a href=""mailto:im.f.he.ad.q.u.a.rter.si.m31@gmail.com"">im.f.he.ad.q.u.a.rter.si.m31@gmail.com</a>
<a href=""mailto:i.mfhead.qu.a.r.t.ersi.m.31@gmail.com"">i.mfhead.qu.a.r.t.ersi.m.31@gmail.com</a>
<a href=""mailto:imfh.e.ad.qu.a.r.t.er.si.m.31@gmail.com"">imfh.e.ad.qu.a.r.t.er.si.m.31@gmail.com</a>
<a href=""mailto:i.mf.he.a.d.qu.ar.t.e.rs.i.m31@gmail.com"">i.mf.he.a.d.qu.ar.t.e.rs.i.m31@gmail.com</a>
<a href=""mailto:i.mf.h.e.a.dqu.ar.te.rsi.m31@gmail.com"">i.mf.h.e.a.dqu.ar.te.rsi.m31@gmail.com</a>
<a href=""mailto:imf.h.e.a.dq.u.a.rte.r.s.i.m.3.1@gmail.com"">imf.h.e.a.dq.u.a.rte.r.s.i.m.3.1@gmail.com</a>
<a href=""mailto:imfh.ead.quar.ters.i.m.3.1@gmail.com"">imfh.ead.quar.ters.i.m.3.1@gmail.com</a>
<a href=""mailto:imf.head.quar.ters.im31@gmail.com"">imf.head.quar.ters.im31@gmail.com</a>
<a href=""mailto:i.m.f.he.ad.q.u.art.e.rs.im31@gmail.com"">i.m.f.he.ad.q.u.art.e.rs.im31@gmail.com</a>
<a href=""mailto:i.m.f.h.ead.qu.artersi.m.31@gmail.com"">i.m.f.h.ead.qu.artersi.m.31@gmail.com</a>
<a href=""mailto:i.mfh.e.ad.q.uar.t.e.rsi.m.3.1@gmail.com"">i.mfh.e.ad.q.uar.t.e.rsi.m.3.1@gmail.com</a>
<a href=""mailto:imf.h.e.ad.q.ua.r.tersi.m.31@gmail.com"">imf.h.e.ad.q.ua.r.tersi.m.31@gmail.com</a>
<a href=""mailto:im.fhead.qua.rt.e.r.s.i.m31@gmail.com"">im.fhead.qua.rt.e.r.s.i.m31@gmail.com</a>
<a href=""mailto:imfhe.ad.q.u.a.rter.sim.31@gmail.com"">imfhe.ad.q.u.a.rter.sim.31@gmail.com</a>
<a href=""mailto:i.m.f.h.ea.d.q.uar.t.e.r.sim.3.1@gmail.com"">i.m.f.h.ea.d.q.uar.t.e.r.sim.3.1@gmail.com</a>
<a href=""mailto:imf.headqu.art.ersi.m.31@gmail.com"">imf.headqu.art.ersi.m.31@gmail.com</a>
<a href=""mailto:im.f.he.a.d.qu.a.rte.r.s.im3.1@gmail.com"">im.f.he.a.d.qu.a.rte.r.s.im3.1@gmail.com</a>
<a href=""mailto:i.mf.he.a.d.quar.te.rsim.3.1@gmail.com"">i.mf.he.a.d.quar.te.rsim.3.1@gmail.com</a>
<a href=""mailto:im.f.h.ea.d.q.u.a.rt.e.r.s.i.m.31@gmail.com"">im.f.h.ea.d.q.u.a.rt.e.r.s.i.m.31@gmail.com</a>
<a href=""mailto:i.m.f.h.e.ad.q.ua.r.t.e.r.s.im.31@gmail.com"">i.m.f.h.e.ad.q.ua.r.t.e.r.s.im.31@gmail.com</a>
<a href=""mailto:im.fhe.a.d.quar.te.r.s.i.m3.1@gmail.com"">im.fhe.a.d.quar.te.r.s.i.m3.1@gmail.com</a>
<a href=""mailto:i.m.fh.eadq.uart.e.rs.im31@gmail.com"">i.m.fh.eadq.uart.e.rs.im31@gmail.com</a>
<a href=""mailto:i.mf.hea.dqua.r.te.rsi.m.31@gmail.com"">i.mf.hea.dqua.r.te.rsi.m.31@gmail.com</a>
<a href=""mailto:i.m.fh.ea.dquar.t.e.r.sim3.1@gmail.com"">i.m.fh.ea.dquar.t.e.r.sim3.1@gmail.com</a>
<a href=""mailto:i.mf.head.q.u.a.r.ters.im.3.1@gmail.com"">i.mf.head.q.u.a.r.ters.im.3.1@gmail.com</a>
<a href=""mailto:im.fheadq.u.ar.t.e.rsim3.1@gmail.com"">im.fheadq.u.ar.t.e.rsim3.1@gmail.com</a>
<a href=""mailto:imf.h.e.ad.qua.rt.e.r.sim31@gmail.com"">imf.h.e.ad.qua.rt.e.r.sim31@gmail.com</a>
<a href=""mailto:i.mfh.e.ad.q.uart.ersim31@gmail.com"">i.mfh.e.ad.q.uart.ersim31@gmail.com</a>
<a href=""mailto:im.fhe.ad.q.ua.rt.ers.im.31@gmail.com"">im.fhe.ad.q.ua.rt.ers.im.31@gmail.com</a>
<a href=""mailto:imf.hea.dqu.art.ers.i.m3.1@gmail.com"">imf.hea.dqu.art.ers.i.m3.1@gmail.com</a>
<a href=""mailto:im.fhea.d.qua.r.ter.s.im3.1@gmail.com"">im.fhea.d.qua.r.ter.s.im3.1@gmail.com</a>
<a href=""mailto:im.f.hea.dqu.art.er.s.i.m31@gmail.com"">im.f.hea.dqu.art.er.s.i.m31@gmail.com</a>
<a href=""mailto:im.f.hea.d.qu.a.rtersi.m.3.1@gmail.com"">im.f.hea.d.qu.a.rtersi.m.3.1@gmail.com</a>
<a href=""mailto:im.fhead.quart.er.sim.31@gmail.com"">im.fhead.quart.er.sim.31@gmail.com</a>
<a href=""mailto:i.m.fh.ead.q.u.a.rtersi.m31@gmail.com"">i.m.fh.ead.q.u.a.rtersi.m31@gmail.com</a>
<a href=""mailto:im.fh.ead.q.u.a.r.t.er.si.m31@gmail.com"">im.fh.ead.q.u.a.r.t.er.si.m31@gmail.com</a>
<a href=""mailto:imf.h.e.a.dq.uart.ers.im.3.1@gmail.com"">imf.h.e.a.dq.uart.ers.im.3.1@gmail.com</a>
<a href=""mailto:im.f.he.a.dq.u.a.rter.s.i.m.3.1@gmail.com"">im.f.he.a.dq.u.a.rter.s.i.m.3.1@gmail.com</a>
<a href=""mailto:im.f.h.e.a.d.qu.ar.ter.s.im.31@gmail.com"">im.f.h.e.a.d.qu.ar.ter.s.im.31@gmail.com</a>
<a href=""mailto:i.mf.headquar.ters.i.m.31@gmail.com"">i.mf.headquar.ters.i.m.31@gmail.com</a>
<a href=""mailto:imf.h.e.ad.q.u.ar.t.e.r.si.m.31@gmail.com"">imf.h.e.ad.q.u.ar.t.e.r.si.m.31@gmail.com</a>
<a href=""mailto:imfh.ead.quar.te.rsim.3.1@gmail.com"">imfh.ead.quar.te.rsim.3.1@gmail.com</a>
<a href=""mailto:i.m.fh.e.a.dq.ua.rte.r.si.m3.1@gmail.com"">i.m.fh.e.a.dq.ua.rte.r.si.m3.1@gmail.com</a>
<a href=""mailto:imf.h.ead.q.uartersim.3.1@gmail.com"">imf.h.ead.q.uartersim.3.1@gmail.com</a>
<a href=""mailto:i.mfh.eadquarte.rsim.3.1@gmail.com"">i.mfh.eadquarte.rsim.3.1@gmail.com</a>
<a href=""mailto:i.mf.he.a.d.qu.art.e.r.sim3.1@gmail.com"">i.mf.he.a.d.qu.art.e.r.sim3.1@gmail.com</a>
<a href=""mailto:imfheadq.u.a.r.t.er.si.m.31@gmail.com"">imfheadq.u.a.r.t.er.si.m.31@gmail.com</a>
<a href=""mailto:im.fhe.a.dq.uar.t.er.s.im.31@gmail.com"">im.fhe.a.dq.uar.t.er.s.im.31@gmail.com</a>
<a href=""mailto:i.m.fheadq.ua.rters.im.31@gmail.com"">i.m.fheadq.ua.rters.im.31@gmail.com</a>
<a href=""mailto:im.fh.ea.d.q.u.a.r.t.ersi.m.31@gmail.com"">im.fh.ea.d.q.u.a.r.t.ersi.m.31@gmail.com</a>
<a href=""mailto:im.fh.eadqua.r.ter.si.m.3.1@gmail.com"">im.fh.eadqua.r.ter.si.m.3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.e.a.dq.uarte.r.s.i.m31@gmail.com"">i.m.f.h.e.a.dq.uarte.r.s.i.m31@gmail.com</a>
<a href=""mailto:imfh.e.ad.q.u.art.ers.im.3.1@gmail.com"">imfh.e.ad.q.u.art.ers.im.3.1@gmail.com</a>
<a href=""mailto:im.f.he.adq.u.art.e.r.si.m31@gmail.com"">im.f.he.adq.u.art.e.r.si.m31@gmail.com</a>
<a href=""mailto:i.mf.head.q.ua.r.t.er.si.m.31@gmail.com"">i.mf.head.q.ua.r.t.er.si.m.31@gmail.com</a>
<a href=""mailto:i.mfh.e.a.d.q.uar.te.r.sim.3.1@gmail.com"">i.mfh.e.a.d.q.uar.te.r.sim.3.1@gmail.com</a>
<a href=""mailto:im.fhe.ad.qu.a.rte.r.sim.31@gmail.com"">im.fhe.ad.qu.a.rte.r.sim.31@gmail.com</a>
<a href=""mailto:im.fheadqua.r.t.er.s.i.m31@gmail.com"">im.fheadqua.r.t.er.s.i.m31@gmail.com</a>
<a href=""mailto:im.f.head.q.ua.rter.s.i.m31@gmail.com"">im.f.head.q.ua.rter.s.i.m31@gmail.com</a>
<a href=""mailto:im.fh.e.ad.qua.rt.e.rs.im.31@gmail.com"">im.fh.e.ad.qua.rt.e.rs.im.31@gmail.com</a>
<a href=""mailto:i.m.f.hea.dquart.e.r.s.im.3.1@gmail.com"">i.m.f.hea.dquart.e.r.s.im.3.1@gmail.com</a>
<a href=""mailto:i.mfh.e.adq.u.a.rt.e.r.si.m3.1@gmail.com"">i.mfh.e.adq.u.a.rt.e.r.si.m3.1@gmail.com</a>
<a href=""mailto:im.f.h.ea.d.qu.a.r.t.ers.im31@gmail.com"">im.f.h.ea.d.qu.a.r.t.ers.im31@gmail.com</a>
<a href=""mailto:im.fhea.dq.u.a.r.te.r.s.i.m31@gmail.com"">im.fhea.dq.u.a.r.te.r.s.i.m31@gmail.com</a>
<a href=""mailto:i.mfh.e.ad.quart.er.s.im3.1@gmail.com"">i.mfh.e.ad.quart.er.s.im3.1@gmail.com</a>
<a href=""mailto:im.f.h.eadqu.ar.ter.s.im3.1@gmail.com"">im.f.h.eadqu.ar.ter.s.im3.1@gmail.com</a>
<a href=""mailto:i.m.fhead.qua.r.t.e.r.s.im.3.1@gmail.com"">i.m.fhead.qua.r.t.e.r.s.im.3.1@gmail.com</a>
<a href=""mailto:imfhe.a.dq.ua.r.t.er.s.i.m.3.1@gmail.com"">imfhe.a.dq.ua.r.t.er.s.i.m.3.1@gmail.com</a>
<a href=""mailto:imf.he.a.d.q.uart.ers.i.m.3.1@gmail.com"">imf.he.a.d.q.uart.ers.i.m.3.1@gmail.com</a>
<a href=""mailto:imfhe.a.dq.u.arter.s.i.m31@gmail.com"">imfhe.a.dq.u.arter.s.i.m31@gmail.com</a>
<a href=""mailto:im.fhe.ad.q.ua.r.te.r.si.m.31@gmail.com"">im.fhe.ad.q.ua.r.te.r.si.m.31@gmail.com</a>
<a href=""mailto:imfhea.dq.ua.rtersi.m31@gmail.com"">imfhea.dq.ua.rtersi.m31@gmail.com</a>
<a href=""mailto:i.m.fh.e.a.dqu.a.rter.si.m.31@gmail.com"">i.m.fh.e.a.dqu.a.rter.si.m.31@gmail.com</a>
<a href=""mailto:im.fhe.a.d.q.uar.t.e.r.sim31@gmail.com"">im.fhe.a.d.q.uar.t.e.r.sim31@gmail.com</a>
<a href=""mailto:i.m.f.h.e.ad.q.ua.r.ters.i.m.3.1@gmail.com"">i.m.f.h.e.ad.q.ua.r.ters.i.m.3.1@gmail.com</a>
<a href=""mailto:i.mfh.e.ad.qu.ar.t.ers.im3.1@gmail.com"">i.mfh.e.ad.qu.ar.t.ers.im3.1@gmail.com</a>
<a href=""mailto:i.mfh.e.ad.q.u.ar.t.e.r.s.im.31@gmail.com"">i.mfh.e.ad.q.u.ar.t.e.r.s.im.31@gmail.com</a>
<a href=""mailto:i.mf.h.ea.d.q.ua.r.t.e.r.si.m.3.1@gmail.com"">i.mf.h.ea.d.q.ua.r.t.e.r.si.m.3.1@gmail.com</a>
<a href=""mailto:imf.h.e.ad.q.u.ar.t.e.r.sim.31@gmail.com"">imf.h.e.ad.q.u.ar.t.e.r.sim.31@gmail.com</a>
<a href=""mailto:i.mfh.e.adquarter.s.i.m.3.1@gmail.com"">i.mfh.e.adquarter.s.i.m.3.1@gmail.com</a>
<a href=""mailto:i.mf.headq.ua.r.te.r.si.m31@gmail.com"">i.mf.headq.ua.r.te.r.si.m31@gmail.com</a>
<a href=""mailto:im.f.hea.dquart.ers.i.m.31@gmail.com"">im.f.hea.dquart.ers.i.m.31@gmail.com</a>
<a href=""mailto:imf.h.eadqu.a.rte.r.s.i.m.3.1@gmail.com"">imf.h.eadqu.a.rte.r.s.i.m.3.1@gmail.com</a>
<a href=""mailto:i.mfh.ead.q.uart.e.rs.i.m.3.1@gmail.com"">i.mfh.ead.q.uart.e.rs.i.m.3.1@gmail.com</a>
<a href=""mailto:i.mfhe.a.d.quar.ter.s.i.m3.1@gmail.com"">i.mfhe.a.d.quar.ter.s.i.m3.1@gmail.com</a>
<a href=""mailto:i.m.f.he.a.dq.uarter.s.i.m3.1@gmail.com"">i.m.f.he.a.dq.uarter.s.i.m3.1@gmail.com</a>
<a href=""mailto:i.m.f.he.a.dq.u.a.r.t.e.r.s.i.m3.1@gmail.com"">i.m.f.he.a.dq.u.a.r.t.e.r.s.i.m3.1@gmail.com</a>
<a href=""mailto:im.f.h.eadqu.arters.im31@gmail.com"">im.f.h.eadqu.arters.im31@gmail.com</a>
<a href=""mailto:im.f.h.ea.d.q.u.a.rt.e.r.s.im.31@gmail.com"">im.f.h.ea.d.q.u.a.rt.e.r.s.im.31@gmail.com</a>
<a href=""mailto:im.f.he.a.d.quart.e.rs.im.31@gmail.com"">im.f.he.a.d.quart.e.rs.im.31@gmail.com</a>
<a href=""mailto:i.mfhead.qua.rter.sim.3.1@gmail.com"">i.mfhead.qua.rter.sim.3.1@gmail.com</a>
<a href=""mailto:i.mf.head.qu.art.er.s.im31@gmail.com"">i.mf.head.qu.art.er.s.im31@gmail.com</a>
<a href=""mailto:i.m.f.h.e.a.d.q.ua.rte.r.si.m31@gmail.com"">i.m.f.h.e.a.d.q.ua.rte.r.si.m31@gmail.com</a>
<a href=""mailto:im.fh.e.a.dq.uart.e.rsi.m.31@gmail.com"">im.fh.e.a.dq.uart.e.rsi.m.31@gmail.com</a>
<a href=""mailto:i.m.fh.e.a.dquar.t.e.r.s.i.m.31@gmail.com"">i.m.fh.e.a.dquar.t.e.r.s.i.m.31@gmail.com</a>
<a href=""mailto:i.m.f.hea.dq.ua.r.te.r.s.i.m.3.1@gmail.com"">i.m.f.hea.dq.ua.r.te.r.s.i.m.3.1@gmail.com</a>
<a href=""mailto:im.f.h.ea.d.qu.a.rt.er.s.im3.1@gmail.com"">im.f.h.ea.d.qu.a.rt.er.s.im3.1@gmail.com</a>
<a href=""mailto:i.mfhe.a.d.q.u.arte.rs.im.3.1@gmail.com"">i.mfhe.a.d.q.u.arte.rs.im.3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.ea.d.q.uar.te.rs.im31@gmail.com"">i.m.f.h.ea.d.q.uar.te.rs.im31@gmail.com</a>
<a href=""mailto:i.mfh.ead.q.uar.te.rs.i.m31@gmail.com"">i.mfh.ead.q.uar.te.rs.i.m31@gmail.com</a>
<a href=""mailto:i.mf.he.ad.q.uarte.r.s.i.m.31@gmail.com"">i.mf.he.ad.q.uarte.r.s.i.m.31@gmail.com</a>
<a href=""mailto:imf.head.qu.arters.i.m31@gmail.com"">imf.head.qu.arters.i.m31@gmail.com</a>
<a href=""mailto:i.mf.h.e.a.d.qu.a.rt.er.s.i.m3.1@gmail.com"">i.mf.h.e.a.d.qu.a.rt.er.s.i.m3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.e.ad.q.uarte.r.sim31@gmail.com"">i.m.f.h.e.ad.q.uarte.r.sim31@gmail.com</a>
<a href=""mailto:imfh.ea.dq.u.art.e.r.si.m.31@gmail.com"">imfh.ea.dq.u.art.e.r.si.m.31@gmail.com</a>
<a href=""mailto:im.f.h.ea.dqua.rte.r.s.im.3.1@gmail.com"">im.f.h.ea.dqua.rte.r.s.im.3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.e.ad.q.uar.ter.sim3.1@gmail.com"">i.m.f.h.e.ad.q.uar.ter.sim3.1@gmail.com</a>
<a href=""mailto:imf.he.a.dqua.rter.si.m31@gmail.com"">imf.he.a.dqua.rter.si.m31@gmail.com</a>
<a href=""mailto:i.mfhe.a.d.quar.t.er.s.i.m.31@gmail.com"">i.mfhe.a.d.quar.t.er.s.i.m.31@gmail.com</a>
<a href=""mailto:imf.he.adqu.a.rt.e.r.s.i.m31@gmail.com"">imf.he.adqu.a.rt.e.r.s.i.m31@gmail.com</a>
<a href=""mailto:imf.he.adq.ua.rt.er.s.im.31@gmail.com"">imf.he.adq.ua.rt.er.s.im.31@gmail.com</a>
<a href=""mailto:imf.h.e.ad.q.u.ar.ters.i.m.31@gmail.com"">imf.h.e.ad.q.u.ar.ters.i.m.31@gmail.com</a>
<a href=""mailto:im.f.h.eadquart.ersim31@gmail.com"">im.f.h.eadquart.ersim31@gmail.com</a>
<a href=""mailto:i.mf.h.ea.d.q.ua.rters.i.m.31@gmail.com"">i.mf.h.ea.d.q.ua.rters.i.m.31@gmail.com</a>
<a href=""mailto:imf.he.ad.q.uar.t.e.rs.i.m.31@gmail.com"">imf.he.ad.q.uar.t.e.rs.i.m.31@gmail.com</a>
<a href=""mailto:imf.h.e.ad.q.uar.ter.sim3.1@gmail.com"">imf.h.e.ad.q.uar.ter.sim3.1@gmail.com</a>
<a href=""mailto:imfhea.dqu.ar.t.ersi.m.3.1@gmail.com"">imfhea.dqu.ar.t.ersi.m.3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.e.a.d.qu.a.r.ter.si.m31@gmail.com"">i.m.f.h.e.a.d.qu.a.r.ter.si.m31@gmail.com</a>
<a href=""mailto:i.mf.he.adq.ua.r.tersi.m31@gmail.com"">i.mf.he.adq.ua.r.tersi.m31@gmail.com</a>
<a href=""mailto:i.m.fhead.qu.a.rte.r.s.im3.1@gmail.com"">i.m.fhead.qu.a.rte.r.s.im3.1@gmail.com</a>
<a href=""mailto:im.f.he.a.d.quar.te.rsim.31@gmail.com"">im.f.he.a.d.quar.te.rsim.31@gmail.com</a>
<a href=""mailto:imfh.ea.dq.ua.rte.r.si.m3.1@gmail.com"">imfh.ea.dq.ua.rte.r.si.m3.1@gmail.com</a>
<a href=""mailto:imfh.ea.dq.ua.r.t.ers.i.m3.1@gmail.com"">imfh.ea.dq.ua.r.t.ers.i.m3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.e.a.d.qua.r.t.e.r.s.im31@gmail.com"">i.m.f.h.e.a.d.qua.r.t.e.r.s.im31@gmail.com</a>
<a href=""mailto:i.mfh.e.a.dq.u.a.r.te.r.si.m.31@gmail.com"">i.mfh.e.a.dq.u.a.r.te.r.si.m.31@gmail.com</a>
<a href=""mailto:im.fhe.a.d.q.ua.rt.er.s.i.m31@gmail.com"">im.fhe.a.d.q.ua.rt.er.s.i.m31@gmail.com</a>
<a href=""mailto:imf.hea.dqu.a.rter.si.m.3.1@gmail.com"">imf.hea.dqu.a.rter.si.m.3.1@gmail.com</a>
<a href=""mailto:i.mf.h.e.a.dqu.ar.t.ers.i.m3.1@gmail.com"">i.mf.h.e.a.dqu.ar.t.ers.i.m3.1@gmail.com</a>
<a href=""mailto:imf.he.adquarte.r.s.im31@gmail.com"">imf.he.adquarte.r.s.im31@gmail.com</a>
<a href=""mailto:i.mfhe.a.d.q.u.a.rte.r.s.i.m.3.1@gmail.com"">i.mfhe.a.d.q.u.a.rte.r.s.i.m.3.1@gmail.com</a>
<a href=""mailto:im.f.he.a.d.qua.r.t.e.r.si.m3.1@gmail.com"">im.f.he.a.d.qua.r.t.e.r.si.m3.1@gmail.com</a>
<a href=""mailto:imfh.ea.d.q.ua.rter.sim.31@gmail.com"">imfh.ea.d.q.ua.rter.sim.31@gmail.com</a>
<a href=""mailto:i.mfh.e.a.d.q.u.arte.r.s.i.m.31@gmail.com"">i.mfh.e.a.d.q.u.arte.r.s.i.m.31@gmail.com</a>
<a href=""mailto:i.m.fhea.dquart.ers.i.m3.1@gmail.com"">i.m.fhea.dquart.ers.i.m3.1@gmail.com</a>
<a href=""mailto:i.mfh.e.adq.uar.t.er.si.m31@gmail.com"">i.mfh.e.adq.uar.t.er.si.m31@gmail.com</a>
<a href=""mailto:imfhea.dq.ua.rt.ersi.m.3.1@gmail.com"">imfhea.dq.ua.rt.ersi.m.3.1@gmail.com</a>
<a href=""mailto:imf.he.a.d.q.u.artersi.m.31@gmail.com"">imf.he.a.d.q.u.artersi.m.31@gmail.com</a>
<a href=""mailto:i.m.f.he.a.d.q.u.ar.t.e.rsi.m.31@gmail.com"">i.m.f.he.a.d.q.u.ar.t.e.rsi.m.31@gmail.com</a>
<a href=""mailto:im.fhe.ad.q.u.ar.t.e.rs.im.3.1@gmail.com"">im.fhe.ad.q.u.ar.t.e.rs.im.3.1@gmail.com</a>
<a href=""mailto:i.mfh.e.adqu.a.r.t.e.rs.i.m.3.1@gmail.com"">i.mfh.e.adqu.a.r.t.e.rs.i.m.3.1@gmail.com</a>
<a href=""mailto:i.mf.headq.uar.te.r.si.m.3.1@gmail.com"">i.mf.headq.uar.te.r.si.m.3.1@gmail.com</a>
<a href=""mailto:imfh.ea.d.qua.rte.rs.im3.1@gmail.com"">imfh.ea.d.qua.rte.rs.im3.1@gmail.com</a>
<a href=""mailto:i.mfhea.dqu.a.rtersi.m.3.1@gmail.com"">i.mfhea.dqu.a.rtersi.m.3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.e.ad.q.uart.e.rs.im.31@gmail.com"">i.m.f.h.e.ad.q.uart.e.rs.im.31@gmail.com</a>
<a href=""mailto:i.m.f.he.a.dq.uar.ter.s.im.3.1@gmail.com"">i.m.f.he.a.dq.uar.ter.s.im.3.1@gmail.com</a>
<a href=""mailto:im.fh.e.a.d.qua.rt.e.rs.im.31@gmail.com"">im.fh.e.a.d.qua.rt.e.rs.im.31@gmail.com</a>
<a href=""mailto:imfhea.d.quarte.rs.i.m.31@gmail.com"">imfhea.d.quarte.rs.i.m.31@gmail.com</a>
<a href=""mailto:i.m.fhea.d.qua.rt.ersim.3.1@gmail.com"">i.m.fhea.d.qua.rt.ersim.3.1@gmail.com</a>
<a href=""mailto:i.mf.he.adquar.t.ersi.m.3.1@gmail.com"">i.mf.he.adquar.t.ersi.m.3.1@gmail.com</a>
<a href=""mailto:imf.head.qu.a.r.ters.i.m.3.1@gmail.com"">imf.head.qu.a.r.ters.i.m.3.1@gmail.com</a>
<a href=""mailto:i.m.fhead.qu.a.rt.ers.im31@gmail.com"">i.m.fhead.qu.a.rt.ers.im31@gmail.com</a>
<a href=""mailto:im.fhe.adqu.a.r.t.e.rs.im.3.1@gmail.com"">im.fhe.adqu.a.r.t.e.rs.im.3.1@gmail.com</a>
<a href=""mailto:i.mf.he.a.d.qua.r.t.ersim31@gmail.com"">i.mf.he.a.d.qua.r.t.ersim31@gmail.com</a>
<a href=""mailto:im.fh.ea.dq.u.art.e.rsi.m.3.1@gmail.com"">im.fh.ea.dq.u.art.e.rsi.m.3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.e.ad.quar.t.e.rsi.m31@gmail.com"">i.m.f.h.e.ad.quar.t.e.rsi.m31@gmail.com</a>
<a href=""mailto:im.fh.e.a.d.qua.rte.rs.i.m3.1@gmail.com"">im.fh.e.a.d.qua.rte.rs.i.m3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.e.a.d.q.ua.r.ters.im31@gmail.com"">i.m.f.h.e.a.d.q.ua.r.ters.im31@gmail.com</a>
<a href=""mailto:imfh.e.a.d.qua.r.ter.s.i.m31@gmail.com"">imfh.e.a.d.qua.r.ter.s.i.m31@gmail.com</a>
<a href=""mailto:imfh.ea.dq.uarte.rsim3.1@gmail.com"">imfh.ea.dq.uarte.rsim3.1@gmail.com</a>
<a href=""mailto:i.m.f.head.q.ua.rt.er.s.im3.1@gmail.com"">i.m.f.head.q.ua.rt.er.s.im3.1@gmail.com</a>
<a href=""mailto:imf.h.ead.q.ua.rter.si.m.31@gmail.com"">imf.h.ead.q.ua.rter.si.m.31@gmail.com</a>
<a href=""mailto:i.m.f.he.ad.q.u.a.r.t.er.si.m.3.1@gmail.com"">i.m.f.he.ad.q.u.a.r.t.er.si.m.3.1@gmail.com</a>
<a href=""mailto:imfheadq.uar.te.r.si.m.3.1@gmail.com"">imfheadq.uar.te.r.si.m.3.1@gmail.com</a>
<a href=""mailto:i.mfh.e.a.dq.uarte.r.si.m3.1@gmail.com"">i.mfh.e.a.dq.uarte.r.si.m3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.e.adq.u.a.r.te.rs.i.m.31@gmail.com"">i.m.f.h.e.adq.u.a.r.te.rs.i.m.31@gmail.com</a>
<a href=""mailto:i.m.fh.e.a.d.quar.t.e.rs.i.m.3.1@gmail.com"">i.m.fh.e.a.d.quar.t.e.rs.i.m.3.1@gmail.com</a>
<a href=""mailto:imfhe.a.dqu.arters.i.m3.1@gmail.com"">imfhe.a.dqu.arters.i.m3.1@gmail.com</a>
<a href=""mailto:i.mfhe.adqua.r.ters.im.31@gmail.com"">i.mfhe.adqua.r.ters.im.31@gmail.com</a>
<a href=""mailto:i.mf.h.eadqua.r.t.e.r.si.m.3.1@gmail.com"">i.mf.h.eadqua.r.t.e.r.si.m.3.1@gmail.com</a>
<a href=""mailto:im.f.hea.d.q.u.a.rte.r.si.m3.1@gmail.com"">im.f.hea.d.q.u.a.rte.r.si.m3.1@gmail.com</a>
<a href=""mailto:i.m.fh.eadq.ua.rt.e.r.si.m31@gmail.com"">i.m.fh.eadq.ua.rt.e.r.si.m31@gmail.com</a>
<a href=""mailto:imf.h.ea.d.qu.a.rte.rs.im.3.1@gmail.com"">imf.h.ea.d.qu.a.rte.rs.im.3.1@gmail.com</a>
<a href=""mailto:i.mfhe.adqu.ar.t.er.s.im.3.1@gmail.com"">i.mfhe.adqu.ar.t.er.s.im.3.1@gmail.com</a>
<a href=""mailto:i.mf.h.e.adq.u.a.rt.e.r.sim.3.1@gmail.com"">i.mf.h.e.adq.u.a.rt.e.r.sim.3.1@gmail.com</a>
<a href=""mailto:i.m.f.he.adq.u.arte.rsim3.1@gmail.com"">i.m.f.he.adq.u.arte.rsim3.1@gmail.com</a>
<a href=""mailto:imfh.e.a.dqu.a.rter.sim.3.1@gmail.com"">imfh.e.a.dqu.a.rter.sim.3.1@gmail.com</a>
<a href=""mailto:im.fhe.ad.qu.artersim.3.1@gmail.com"">im.fhe.ad.qu.artersim.3.1@gmail.com</a>
<a href=""mailto:im.f.headqu.a.rte.r.s.im.31@gmail.com"">im.f.headqu.a.rte.r.s.im.31@gmail.com</a>
<a href=""mailto:i.m.f.headq.u.a.r.t.e.rs.i.m3.1@gmail.com"">i.m.f.headq.u.a.r.t.e.rs.i.m3.1@gmail.com</a>
<a href=""mailto:i.m.f.hea.d.q.ua.rt.er.sim3.1@gmail.com"">i.m.f.hea.d.q.ua.rt.er.sim3.1@gmail.com</a>
<a href=""mailto:i.m.fh.e.a.dqua.rters.i.m31@gmail.com"">i.m.fh.e.a.dqua.rters.i.m31@gmail.com</a>
<a href=""mailto:im.fh.eadqua.r.t.ers.im3.1@gmail.com"">im.fh.eadqua.r.t.ers.im3.1@gmail.com</a>
<a href=""mailto:imfh.e.a.dq.u.a.rt.ersim.31@gmail.com"">imfh.e.a.dq.u.a.rt.ersim.31@gmail.com</a>
<a href=""mailto:imf.h.ead.q.u.ar.ter.s.im.31@gmail.com"">imf.h.ead.q.u.ar.ter.s.im.31@gmail.com</a>
<a href=""mailto:lilianchinyere23@gmail.com"">lilianchinyere23@gmail.com</a>
<a href=""mailto:l.il.ianc.hi.ny.ere.23@gmail.com"">l.il.ianc.hi.ny.ere.23@gmail.com</a>
<a href=""mailto:l.i.li.a.n.ch.i.n.yere.23@gmail.com"">l.i.li.a.n.ch.i.n.yere.23@gmail.com</a>
<a href=""mailto:li.l.ia.nc.h.i.ny.e.r.e2.3@gmail.com"">li.l.ia.nc.h.i.ny.e.r.e2.3@gmail.com</a>
<a href=""mailto:l.i.li.an.ch.i.n.yere2.3@gmail.com"">l.i.li.an.ch.i.n.yere2.3@gmail.com</a>
<a href=""mailto:l.i.l.i.a.nc.hi.nye.re.2.3@gmail.com"">l.i.l.i.a.nc.hi.nye.re.2.3@gmail.com</a>
<a href=""mailto:l.ili.a.n.chin.yer.e2.3@gmail.com"">l.ili.a.n.chin.yer.e2.3@gmail.com</a>
<a href=""mailto:lili.anc.hi.n.y.e.re.2.3@gmail.com"">lili.anc.hi.n.y.e.re.2.3@gmail.com</a>
<a href=""mailto:l.il.ia.nc.h.inyer.e23@gmail.com"">l.il.ia.nc.h.inyer.e23@gmail.com</a>
<a href=""mailto:l.ili.anc.hi.nye.r.e.2.3@gmail.com"">l.ili.anc.hi.nye.r.e.2.3@gmail.com</a>
<a href=""mailto:l.i.li.a.n.chin.y.e.re.2.3@gmail.com"">l.i.li.a.n.chin.y.e.re.2.3@gmail.com</a>
<a href=""mailto:li.lian.c.hi.nyere23@gmail.com"">li.lian.c.hi.nyere23@gmail.com</a>
<a href=""mailto:li.lianc.h.in.yere.23@gmail.com"">li.lianc.h.in.yere.23@gmail.com</a>
<a href=""mailto:l.i.lianch.i.n.y.ere23@gmail.com"">l.i.lianch.i.n.y.ere23@gmail.com</a>
<a href=""mailto:l.il.i.a.nch.i.n.yer.e2.3@gmail.com"">l.il.i.a.nch.i.n.yer.e2.3@gmail.com</a>
<a href=""mailto:li.l.ian.ch.i.nyere23@gmail.com"">li.l.ian.ch.i.nyere23@gmail.com</a>
<a href=""mailto:lili.an.c.hi.ny.e.r.e.2.3@gmail.com"">lili.an.c.hi.ny.e.r.e.2.3@gmail.com</a>
<a href=""mailto:lili.an.c.hi.n.yere2.3@gmail.com"">lili.an.c.hi.n.yere2.3@gmail.com</a>
<a href=""mailto:l.ili.a.nchin.ye.r.e.2.3@gmail.com"">l.ili.a.nchin.ye.r.e.2.3@gmail.com</a>
<a href=""mailto:lilianc.hiny.er.e2.3@gmail.com"">lilianc.hiny.er.e2.3@gmail.com</a>
<a href=""mailto:li.l.ian.ch.i.n.ye.re.2.3@gmail.com"">li.l.ian.ch.i.n.ye.re.2.3@gmail.com</a>
<a href=""mailto:l.i.l.ian.chi.n.y.er.e2.3@gmail.com"">l.i.l.ian.chi.n.y.er.e2.3@gmail.com</a>
<a href=""mailto:l.i.l.i.a.n.ch.inye.r.e23@gmail.com"">l.i.l.i.a.n.ch.inye.r.e23@gmail.com</a>
<a href=""mailto:l.i.lianch.i.ny.ere2.3@gmail.com"">l.i.lianch.i.ny.ere2.3@gmail.com</a>
<a href=""mailto:li.l.ian.c.h.i.nye.r.e.23@gmail.com"">li.l.ian.c.h.i.nye.r.e.23@gmail.com</a>
<a href=""mailto:li.lia.n.c.h.i.n.y.er.e23@gmail.com"">li.lia.n.c.h.i.n.y.er.e23@gmail.com</a>
<a href=""mailto:l.i.lia.n.chinye.re2.3@gmail.com"">l.i.lia.n.chinye.re2.3@gmail.com</a>
<a href=""mailto:li.lian.c.h.inye.re23@gmail.com"">li.lian.c.h.inye.re23@gmail.com</a>
<a href=""mailto:li.lia.nchiny.e.re.2.3@gmail.com"">li.lia.nchiny.e.re.2.3@gmail.com</a>
<a href=""mailto:l.il.ian.ch.in.y.ere.2.3@gmail.com"">l.il.ian.ch.in.y.ere.2.3@gmail.com</a>
<a href=""mailto:l.i.li.a.nch.i.nyer.e23@gmail.com"">l.i.li.a.nch.i.nyer.e23@gmail.com</a>
<a href=""mailto:li.l.ia.n.ch.in.ye.r.e.23@gmail.com"">li.l.ia.n.ch.in.ye.r.e.23@gmail.com</a>
<a href=""mailto:l.i.l.i.an.ch.i.n.yer.e2.3@gmail.com"">l.i.l.i.an.ch.i.n.yer.e2.3@gmail.com</a>
<a href=""mailto:l.ili.a.n.chi.n.y.e.re.2.3@gmail.com"">l.ili.a.n.chi.n.y.e.re.2.3@gmail.com</a>
<a href=""mailto:l.i.l.ian.c.hin.y.ere2.3@gmail.com"">l.i.l.ian.c.hin.y.ere2.3@gmail.com</a>
<a href=""mailto:li.l.i.an.chi.ny.er.e.2.3@gmail.com"">li.l.i.an.chi.ny.er.e.2.3@gmail.com</a>
<a href=""mailto:li.li.anch.inyere.2.3@gmail.com"">li.li.anch.inyere.2.3@gmail.com</a>
<a href=""mailto:lil.i.an.c.h.in.y.e.r.e23@gmail.com"">lil.i.an.c.h.in.y.e.r.e23@gmail.com</a>
<a href=""mailto:li.li.a.n.c.hiny.e.r.e2.3@gmail.com"">li.li.a.n.c.hiny.e.r.e2.3@gmail.com</a>
<a href=""mailto:li.l.i.a.nc.hinye.r.e.23@gmail.com"">li.l.i.a.nc.hinye.r.e.23@gmail.com</a>
<a href=""mailto:l.i.l.i.a.n.chin.y.er.e2.3@gmail.com"">l.i.l.i.a.n.chin.y.er.e2.3@gmail.com</a>
<a href=""mailto:l.il.ia.nc.hiny.er.e.23@gmail.com"">l.il.ia.nc.hiny.er.e.23@gmail.com</a>
<a href=""mailto:li.li.an.chin.ye.re23@gmail.com"">li.li.an.chin.ye.re23@gmail.com</a>
<a href=""mailto:l.il.i.anc.h.inyer.e.23@gmail.com"">l.il.i.anc.h.inyer.e.23@gmail.com</a>
<a href=""mailto:li.lia.nch.in.y.ere.23@gmail.com"">li.lia.nch.in.y.ere.23@gmail.com</a>
<a href=""mailto:l.i.li.an.ch.in.ye.r.e.2.3@gmail.com"">l.i.li.an.ch.in.ye.r.e.2.3@gmail.com</a>
<a href=""mailto:l.ili.a.nc.hin.ye.r.e.2.3@gmail.com"">l.ili.a.nc.hin.ye.r.e.2.3@gmail.com</a>
<a href=""mailto:l.ilia.n.c.hin.y.er.e2.3@gmail.com"">l.ilia.n.c.hin.y.er.e2.3@gmail.com</a>
<a href=""mailto:lil.ia.nc.hin.y.ere.23@gmail.com"">lil.ia.nc.hin.y.ere.23@gmail.com</a>
<a href=""mailto:lil.i.an.chi.nye.re23@gmail.com"">lil.i.an.chi.nye.re23@gmail.com</a>
<a href=""mailto:l.i.l.i.an.ch.inyer.e.2.3@gmail.com"">l.i.l.i.an.ch.inyer.e.2.3@gmail.com</a>
<a href=""mailto:lili.anchi.n.y.er.e.2.3@gmail.com"">lili.anchi.n.y.er.e.2.3@gmail.com</a>
<a href=""mailto:lil.i.anch.in.y.ere2.3@gmail.com"">lil.i.anch.in.y.ere2.3@gmail.com</a>
<a href=""mailto:li.li.a.nch.i.nyere23@gmail.com"">li.li.a.nch.i.nyere23@gmail.com</a>
<a href=""mailto:lili.an.c.hi.n.y.e.r.e.2.3@gmail.com"">lili.an.c.hi.n.y.e.r.e.2.3@gmail.com</a>
<a href=""mailto:li.l.i.a.nchin.ye.r.e.2.3@gmail.com"">li.l.i.a.nchin.ye.r.e.2.3@gmail.com</a>
<a href=""mailto:lilianchi.n.y.e.re.2.3@gmail.com"">lilianchi.n.y.e.re.2.3@gmail.com</a>
<a href=""mailto:lil.ia.nc.h.inye.re23@gmail.com"">lil.ia.nc.h.inye.re23@gmail.com</a>
<a href=""mailto:l.il.i.a.nc.hin.y.e.re.23@gmail.com"">l.il.i.a.nc.hin.y.e.re.23@gmail.com</a>
<a href=""mailto:li.lian.chi.nyer.e.23@gmail.com"">li.lian.chi.nyer.e.23@gmail.com</a>
<a href=""mailto:li.l.ia.n.c.hiny.er.e2.3@gmail.com"">li.l.ia.n.c.hiny.er.e2.3@gmail.com</a>
<a href=""mailto:l.i.l.i.a.nch.i.ny.e.re.23@gmail.com"">l.i.l.i.a.nch.i.ny.e.re.23@gmail.com</a>
<a href=""mailto:l.ili.a.n.ch.inye.re2.3@gmail.com"">l.ili.a.n.ch.inye.re2.3@gmail.com</a>
<a href=""mailto:l.il.ianchin.y.ere.2.3@gmail.com"">l.il.ianchin.y.ere.2.3@gmail.com</a>
<a href=""mailto:lil.i.anc.h.i.ny.ere.23@gmail.com"">lil.i.anc.h.i.ny.ere.23@gmail.com</a>
<a href=""mailto:li.lia.nchi.n.y.e.r.e2.3@gmail.com"">li.lia.nchi.n.y.e.r.e2.3@gmail.com</a>
<a href=""mailto:l.ili.an.c.h.inyer.e23@gmail.com"">l.ili.an.c.h.inyer.e23@gmail.com</a>
<a href=""mailto:l.i.l.ian.c.hi.n.y.ere23@gmail.com"">l.i.l.ian.c.hi.n.y.ere23@gmail.com</a>
<a href=""mailto:lil.ian.ch.i.ny.e.r.e23@gmail.com"">lil.ian.ch.i.ny.e.r.e23@gmail.com</a>
<a href=""mailto:l.i.l.i.a.nc.hi.n.ye.r.e.23@gmail.com"">l.i.l.i.a.nc.hi.n.ye.r.e.23@gmail.com</a>
<a href=""mailto:lili.a.n.chi.nye.re.23@gmail.com"">lili.a.n.chi.nye.re.23@gmail.com</a>
<a href=""mailto:l.i.l.i.a.nch.i.ny.er.e2.3@gmail.com"">l.i.l.i.a.nch.i.ny.er.e2.3@gmail.com</a>
<a href=""mailto:l.i.l.ianchin.yere.23@gmail.com"">l.i.l.ianchin.yere.23@gmail.com</a>
<a href=""mailto:lil.i.anch.i.nye.r.e23@gmail.com"">lil.i.anch.i.nye.r.e23@gmail.com</a>
<a href=""mailto:l.ili.a.nch.i.n.yer.e23@gmail.com"">l.ili.a.nch.i.n.yer.e23@gmail.com</a>
<a href=""mailto:l.ilia.nchi.ny.ere23@gmail.com"">l.ilia.nchi.ny.ere23@gmail.com</a>
<a href=""mailto:l.ili.a.nc.h.i.ny.er.e2.3@gmail.com"">l.ili.a.nc.h.i.ny.er.e2.3@gmail.com</a>
<a href=""mailto:l.i.l.ia.nchi.n.y.e.r.e23@gmail.com"">l.i.l.ia.nchi.n.y.e.r.e23@gmail.com</a>
<a href=""mailto:l.i.lia.n.chi.n.y.ere.2.3@gmail.com"">l.i.lia.n.chi.n.y.ere.2.3@gmail.com</a>
<a href=""mailto:lili.anc.h.in.y.e.r.e.23@gmail.com"">lili.anc.h.in.y.e.r.e.23@gmail.com</a>
<a href=""mailto:l.ili.a.n.ch.inyer.e23@gmail.com"">l.ili.a.n.ch.inyer.e23@gmail.com</a>
<a href=""mailto:l.i.l.ianchi.n.y.e.re23@gmail.com"">l.i.l.ianchi.n.y.e.re23@gmail.com</a>
<a href=""mailto:l.il.ia.nc.h.i.n.y.e.r.e23@gmail.com"">l.il.ia.nc.h.i.n.y.e.r.e23@gmail.com</a>
<a href=""mailto:lil.ian.c.h.i.ny.e.r.e.23@gmail.com"">lil.ian.c.h.i.ny.e.r.e.23@gmail.com</a>
<a href=""mailto:li.lian.c.hi.n.y.ere23@gmail.com"">li.lian.c.hi.n.y.ere23@gmail.com</a>
<a href=""mailto:l.ilia.nc.h.i.n.y.er.e2.3@gmail.com"">l.ilia.nc.h.i.n.y.er.e2.3@gmail.com</a>
<a href=""mailto:l.il.i.a.n.chi.n.y.e.re23@gmail.com"">l.il.i.a.n.chi.n.y.e.re23@gmail.com</a>
<a href=""mailto:l.i.l.i.an.ch.i.n.y.e.re2.3@gmail.com"">l.i.l.i.an.ch.i.n.y.e.re2.3@gmail.com</a>
<a href=""mailto:lil.ia.nchinye.r.e23@gmail.com"">lil.ia.nchinye.r.e23@gmail.com</a>
<a href=""mailto:l.ili.an.c.h.in.y.e.r.e.2.3@gmail.com"">l.ili.an.c.h.in.y.e.r.e.2.3@gmail.com</a>
<a href=""mailto:l.i.li.an.c.h.iny.e.r.e2.3@gmail.com"">l.i.li.an.c.h.iny.e.r.e2.3@gmail.com</a>
<a href=""mailto:li.l.ia.n.c.h.i.n.y.e.re.2.3@gmail.com"">li.l.ia.n.c.h.i.n.y.e.re.2.3@gmail.com</a>
<a href=""mailto:l.i.lia.n.ch.in.y.e.re.23@gmail.com"">l.i.lia.n.ch.in.y.e.re.23@gmail.com</a>
<a href=""mailto:lil.i.anc.h.in.yer.e2.3@gmail.com"">lil.i.anc.h.in.yer.e2.3@gmail.com</a>
<a href=""mailto:l.i.l.ia.nc.h.in.y.e.r.e.2.3@gmail.com"">l.i.l.ia.nc.h.in.y.e.r.e.2.3@gmail.com</a>
<a href=""mailto:l.i.li.anc.hi.n.yer.e23@gmail.com"">l.i.li.anc.hi.n.yer.e23@gmail.com</a>
<a href=""mailto:lilian.chinyer.e.2.3@gmail.com"">lilian.chinyer.e.2.3@gmail.com</a>
<a href=""mailto:l.il.i.anchi.ny.er.e.23@gmail.com"">l.il.i.anchi.ny.er.e.23@gmail.com</a>
<a href=""mailto:l.il.ia.n.ch.in.y.er.e.23@gmail.com"">l.il.ia.n.ch.in.y.er.e.23@gmail.com</a>
<a href=""mailto:l.ilian.c.h.inye.r.e.2.3@gmail.com"">l.ilian.c.h.inye.r.e.2.3@gmail.com</a>
<a href=""mailto:li.l.i.a.n.chi.ny.e.re23@gmail.com"">li.l.i.a.n.chi.ny.e.re23@gmail.com</a>
<a href=""mailto:lil.ianchin.y.e.re.23@gmail.com"">lil.ianchin.y.e.re.23@gmail.com</a>
<a href=""mailto:l.i.l.ia.nc.hi.nyere2.3@gmail.com"">l.i.l.ia.nc.hi.nyere2.3@gmail.com</a>
<a href=""mailto:li.lianc.h.in.yere23@gmail.com"">li.lianc.h.in.yere23@gmail.com</a>
<a href=""mailto:li.l.i.an.ch.in.y.e.re.23@gmail.com"">li.l.i.an.ch.in.y.e.re.23@gmail.com</a>
<a href=""mailto:l.i.lia.nchinye.re23@gmail.com"">l.i.lia.nchinye.re23@gmail.com</a>
<a href=""mailto:l.il.i.anchin.y.er.e23@gmail.com"">l.il.i.anchin.y.er.e23@gmail.com</a>
<a href=""mailto:li.li.a.nchi.n.y.ere23@gmail.com"">li.li.a.nchi.n.y.ere23@gmail.com</a>
<a href=""mailto:l.ili.an.chi.ny.e.r.e.23@gmail.com"">l.ili.an.chi.ny.e.r.e.23@gmail.com</a>
<a href=""mailto:li.lia.nch.i.ny.er.e.23@gmail.com"">li.lia.nch.i.ny.er.e.23@gmail.com</a>
<a href=""mailto:lil.i.anchi.ny.e.r.e.2.3@gmail.com"">lil.i.anchi.ny.e.r.e.2.3@gmail.com</a>
<a href=""mailto:l.ilianch.iny.e.re2.3@gmail.com"">l.ilianch.iny.e.re2.3@gmail.com</a>
<a href=""mailto:l.i.l.ianc.h.i.ny.ere2.3@gmail.com"">l.i.l.ianc.h.i.ny.ere2.3@gmail.com</a>
<a href=""mailto:l.i.li.a.n.c.h.i.ny.e.r.e.2.3@gmail.com"">l.i.li.a.n.c.h.i.ny.e.r.e.2.3@gmail.com</a>
<a href=""mailto:l.ilianchi.n.y.e.r.e.2.3@gmail.com"">l.ilianchi.n.y.e.r.e.2.3@gmail.com</a>
<a href=""mailto:l.i.lian.chin.yer.e.2.3@gmail.com"">l.i.lian.chin.yer.e.2.3@gmail.com</a>
<a href=""mailto:li.l.ian.ch.i.nyere2.3@gmail.com"">li.l.ian.ch.i.nyere2.3@gmail.com</a>
<a href=""mailto:li.l.ia.n.c.h.i.ny.e.r.e.23@gmail.com"">li.l.ia.n.c.h.i.ny.e.r.e.23@gmail.com</a>
<a href=""mailto:li.li.anc.h.i.nyere2.3@gmail.com"">li.li.anc.h.i.nyere2.3@gmail.com</a>
<a href=""mailto:li.li.a.n.c.hinye.re23@gmail.com"">li.li.a.n.c.hinye.re23@gmail.com</a>
<a href=""mailto:lil.ianch.in.y.e.r.e.2.3@gmail.com"">lil.ianch.in.y.e.r.e.2.3@gmail.com</a>
<a href=""mailto:l.il.ia.nch.inyere23@gmail.com"">l.il.ia.nch.inyere23@gmail.com</a>
<a href=""mailto:lil.i.a.nch.i.nye.re.23@gmail.com"">lil.i.a.nch.i.nye.re.23@gmail.com</a>
<a href=""mailto:l.i.li.a.nc.h.i.nye.r.e.23@gmail.com"">l.i.li.a.nc.h.i.nye.r.e.23@gmail.com</a>
<a href=""mailto:l.il.i.a.n.c.hi.ny.er.e.23@gmail.com"">l.il.i.a.n.c.hi.ny.er.e.23@gmail.com</a>
<a href=""mailto:li.l.ianc.hi.ny.e.r.e23@gmail.com"">li.l.ianc.hi.ny.e.r.e23@gmail.com</a>
<a href=""mailto:li.l.ian.c.hi.n.y.er.e23@gmail.com"">li.l.ian.c.hi.n.y.er.e23@gmail.com</a>
<a href=""mailto:l.ili.a.n.c.h.in.ye.r.e23@gmail.com"">l.ili.a.n.c.h.in.ye.r.e23@gmail.com</a>
<a href=""mailto:li.l.ian.chinye.re23@gmail.com"">li.l.ian.chinye.re23@gmail.com</a>
<a href=""mailto:li.li.a.nc.hi.n.yere23@gmail.com"">li.li.a.nc.hi.n.yere23@gmail.com</a>
<a href=""mailto:l.i.li.an.ch.iny.e.r.e.23@gmail.com"">l.i.li.an.ch.iny.e.r.e.23@gmail.com</a>
<a href=""mailto:li.li.a.n.c.hi.ny.e.r.e.2.3@gmail.com"">li.li.a.n.c.hi.ny.e.r.e.2.3@gmail.com</a>
<a href=""mailto:lil.i.anc.hin.y.er.e.23@gmail.com"">lil.i.anc.hin.y.er.e.23@gmail.com</a>
<a href=""mailto:l.il.ia.n.c.h.i.n.yer.e.23@gmail.com"">l.il.ia.n.c.h.i.n.yer.e.23@gmail.com</a>
<a href=""mailto:l.ili.an.chin.y.e.r.e23@gmail.com"">l.ili.an.chin.y.e.r.e23@gmail.com</a>
<a href=""mailto:l.i.lian.c.hi.ny.er.e23@gmail.com"">l.i.lian.c.hi.ny.er.e23@gmail.com</a>
<a href=""mailto:lili.a.nc.hi.nye.r.e.2.3@gmail.com"">lili.a.nc.hi.nye.r.e.2.3@gmail.com</a>
<a href=""mailto:l.il.ia.n.chin.y.er.e.23@gmail.com"">l.il.ia.n.chin.y.er.e.23@gmail.com</a>
<a href=""mailto:l.ili.an.ch.inye.re2.3@gmail.com"">l.ili.an.ch.inye.re2.3@gmail.com</a>
<a href=""mailto:l.i.l.i.an.ch.i.n.y.e.r.e2.3@gmail.com"">l.i.l.i.an.ch.i.n.y.e.r.e2.3@gmail.com</a>
<a href=""mailto:l.i.li.an.c.h.in.y.er.e.2.3@gmail.com"">l.i.li.an.c.h.in.y.er.e.2.3@gmail.com</a>
<a href=""mailto:lilian.ch.in.yere.2.3@gmail.com"">lilian.ch.in.yere.2.3@gmail.com</a>
<a href=""mailto:l.il.ianc.h.i.n.y.e.re23@gmail.com"">l.il.ianc.h.i.n.y.e.re23@gmail.com</a>
<a href=""mailto:l.i.lian.c.hin.yer.e.2.3@gmail.com"">l.i.lian.c.hin.yer.e.2.3@gmail.com</a>
<a href=""mailto:l.i.l.i.a.nc.h.in.y.e.r.e23@gmail.com"">l.i.l.i.a.nc.h.in.y.e.r.e23@gmail.com</a>
<a href=""mailto:l.i.li.anch.iny.ere.2.3@gmail.com"">l.i.li.anch.iny.ere.2.3@gmail.com</a>
<a href=""mailto:l.i.lian.c.hi.nyer.e.2.3@gmail.com"">l.i.lian.c.hi.nyer.e.2.3@gmail.com</a>
<a href=""mailto:lil.ian.chin.y.e.re2.3@gmail.com"">lil.ian.chin.y.e.re2.3@gmail.com</a>
<a href=""mailto:l.il.i.a.n.c.hi.ny.e.re23@gmail.com"">l.il.i.a.n.c.hi.ny.e.re23@gmail.com</a>
<a href=""mailto:l.i.li.an.ch.i.n.y.e.re.23@gmail.com"">l.i.li.an.ch.i.n.y.e.re.23@gmail.com</a>
<a href=""mailto:l.ili.anc.hin.yer.e23@gmail.com"">l.ili.anc.hin.yer.e23@gmail.com</a>
<a href=""mailto:lili.a.n.chinye.re2.3@gmail.com"">lili.a.n.chinye.re2.3@gmail.com</a>
<a href=""mailto:lil.ianch.in.ye.re.2.3@gmail.com"">lil.ianch.in.ye.re.2.3@gmail.com</a>
<a href=""mailto:lil.i.a.n.c.hi.nye.re.23@gmail.com"">lil.i.a.n.c.hi.nye.re.23@gmail.com</a>
<a href=""mailto:l.i.l.ianc.h.i.ny.e.re.23@gmail.com"">l.i.l.ianc.h.i.ny.e.re.23@gmail.com</a>
<a href=""mailto:li.lia.n.ch.in.y.e.re23@gmail.com"">li.lia.n.ch.in.y.e.re23@gmail.com</a>
<a href=""mailto:l.ilian.chi.n.y.e.r.e23@gmail.com"">l.ilian.chi.n.y.e.r.e23@gmail.com</a>
<a href=""mailto:lilianc.h.in.y.ere.2.3@gmail.com"">lilianc.h.in.y.ere.2.3@gmail.com</a>
<a href=""mailto:li.lia.n.c.h.i.ny.ere.2.3@gmail.com"">li.lia.n.c.h.i.ny.ere.2.3@gmail.com</a>
<a href=""mailto:l.ili.an.chi.ny.ere.2.3@gmail.com"">l.ili.an.chi.ny.ere.2.3@gmail.com</a>
<a href=""mailto:l.i.l.i.anc.hi.n.y.er.e.2.3@gmail.com"">l.i.l.i.anc.hi.n.y.er.e.2.3@gmail.com</a>
<a href=""mailto:l.ilia.n.c.hiny.e.re.2.3@gmail.com"">l.ilia.n.c.hiny.e.re.2.3@gmail.com</a>
<a href=""mailto:li.l.ia.n.chiny.ere23@gmail.com"">li.l.ia.n.chiny.ere23@gmail.com</a>
<a href=""mailto:l.ilian.chinyer.e23@gmail.com"">l.ilian.chinyer.e23@gmail.com</a>
<a href=""mailto:l.i.l.i.an.ch.in.yer.e.2.3@gmail.com"">l.i.l.i.an.ch.in.yer.e.2.3@gmail.com</a>
<a href=""mailto:l.i.l.ia.nchiny.e.re.23@gmail.com"">l.i.l.ia.nchiny.e.re.23@gmail.com</a>
<a href=""mailto:l.ilianc.hin.ye.r.e23@gmail.com"">l.ilianc.hin.ye.r.e23@gmail.com</a>
<a href=""mailto:l.i.lian.ch.i.nyer.e23@gmail.com"">l.i.lian.ch.i.nyer.e23@gmail.com</a>
<a href=""mailto:li.li.a.n.c.hi.ny.e.r.e23@gmail.com"">li.li.a.n.c.hi.ny.e.r.e23@gmail.com</a>
<a href=""mailto:li.li.a.n.c.hin.yere23@gmail.com"">li.li.a.n.c.hin.yere23@gmail.com</a>
<a href=""mailto:li.l.i.a.nc.hi.ny.e.r.e23@gmail.com"">li.l.i.a.nc.hi.ny.e.r.e23@gmail.com</a>
<a href=""mailto:l.ili.an.chi.n.yere.2.3@gmail.com"">l.ili.an.chi.n.yere.2.3@gmail.com</a>
<a href=""mailto:li.l.ianchinyer.e.2.3@gmail.com"">li.l.ianchinyer.e.2.3@gmail.com</a>
<a href=""mailto:l.i.lian.ch.iny.e.r.e.2.3@gmail.com"">l.i.lian.ch.iny.e.r.e.2.3@gmail.com</a>
<a href=""mailto:lili.an.c.hi.nyere.23@gmail.com"">lili.an.c.hi.nyere.23@gmail.com</a>
<a href=""mailto:li.l.i.an.c.h.inyer.e2.3@gmail.com"">li.l.i.an.c.h.inyer.e2.3@gmail.com</a>
<a href=""mailto:lil.i.anch.i.n.y.e.re.2.3@gmail.com"">lil.i.anch.i.n.y.e.re.2.3@gmail.com</a>
<a href=""mailto:l.il.i.a.n.ch.iny.ere2.3@gmail.com"">l.il.i.a.n.ch.iny.ere2.3@gmail.com</a>
<a href=""mailto:lil.i.a.n.c.hiny.e.re23@gmail.com"">lil.i.a.n.c.hiny.e.re23@gmail.com</a>
<a href=""mailto:li.lianc.h.i.n.yer.e.23@gmail.com"">li.lianc.h.i.n.yer.e.23@gmail.com</a>
<a href=""mailto:lil.ia.n.chi.n.yere2.3@gmail.com"">lil.ia.n.chi.n.yere2.3@gmail.com</a>
<a href=""mailto:l.il.ia.n.c.h.in.yer.e2.3@gmail.com"">l.il.ia.n.c.h.in.yer.e2.3@gmail.com</a>
<a href=""mailto:l.il.ianc.h.i.ny.er.e.2.3@gmail.com"">l.il.ianc.h.i.ny.er.e.2.3@gmail.com</a>
<a href=""mailto:lili.an.c.h.in.y.er.e2.3@gmail.com"">lili.an.c.h.in.y.er.e2.3@gmail.com</a>
<a href=""mailto:l.i.lianch.i.n.yere.23@gmail.com"">l.i.lianch.i.n.yere.23@gmail.com</a>
<a href=""mailto:lil.ian.c.h.i.n.yere23@gmail.com"">lil.ian.c.h.i.n.yere23@gmail.com</a>
<a href=""mailto:l.i.l.ia.nchi.nye.re.2.3@gmail.com"">l.i.l.ia.nchi.nye.re.2.3@gmail.com</a>
<a href=""mailto:li.l.ian.c.hin.y.e.re2.3@gmail.com"">li.l.ian.c.hin.y.e.re2.3@gmail.com</a>
<a href=""mailto:lilian.chi.ny.ere.23@gmail.com"">lilian.chi.ny.ere.23@gmail.com</a>
<a href=""mailto:l.ili.a.nc.hi.n.ye.r.e23@gmail.com"">l.ili.a.nc.hi.n.ye.r.e23@gmail.com</a>
<a href=""mailto:lili.an.c.h.i.nyere2.3@gmail.com"">lili.an.c.h.i.nyere2.3@gmail.com</a>
<a href=""mailto:l.i.l.i.anch.iny.er.e2.3@gmail.com"">l.i.l.i.anch.iny.er.e2.3@gmail.com</a>
<a href=""mailto:l.i.l.ia.n.c.hiny.ere.23@gmail.com"">l.i.l.ia.n.c.hiny.ere.23@gmail.com</a>
<a href=""mailto:l.il.ianc.h.in.y.ere.2.3@gmail.com"">l.il.ianc.h.in.y.ere.2.3@gmail.com</a>
<a href=""mailto:li.l.i.an.c.h.iny.ere23@gmail.com"">li.l.i.an.c.h.iny.ere23@gmail.com</a>
<a href=""mailto:l.i.lianc.h.i.nyer.e.23@gmail.com"">l.i.lianc.h.i.nyer.e.23@gmail.com</a>
<a href=""mailto:l.il.ia.nch.iny.e.re.23@gmail.com"">l.il.ia.nch.iny.e.re.23@gmail.com</a>
<a href=""mailto:li.li.a.n.c.hinyere2.3@gmail.com"">li.li.a.n.c.hinyere2.3@gmail.com</a>
<a href=""mailto:lili.a.nch.in.yere.23@gmail.com"">lili.a.nch.in.yere.23@gmail.com</a>
<a href=""mailto:li.lia.n.c.h.i.n.ye.r.e2.3@gmail.com"">li.lia.n.c.h.i.n.ye.r.e2.3@gmail.com</a>
<a href=""mailto:li.lia.n.c.h.i.n.y.e.re23@gmail.com"">li.lia.n.c.h.i.n.y.e.re23@gmail.com</a>"
bDeiXa5k,AOC2021D5P1.py,bob_f,Python,Friday 22nd of September 2023 10:37:04 AM CDT,"oceanFloor = []

def plotLine(aCoord1, aCoord2):
    if not (aCoord1[0] == aCoord2[0] or aCoord1[1] == aCoord2[1]):
        print(f'{aCoord1} {aCoord2} is not a vertical or horizontal line')
        return
   
    print(f'{aCoord1} {aCoord2} is a vertical or horizontal line, OK to continue')

    xLo = min(aCoord1[0], aCoord2[0])
    xHi = max(aCoord1[0], aCoord2[0])
    yLo = min(aCoord1[1], aCoord2[1])
    yHi = max(aCoord1[1], aCoord2[1])
    
    if xLo < xHi:
        print('This is a horizontal line')    

        for x in range(xLo, xHi + 1):
            oceanFloor[yLo][x] += 1
    else:
        print('This is a vertical line')    

        for y in range(yLo, yHi + 1):
            oceanFloor[y][xLo] += 1

def initialiseOceanFloor():
    lOceanFloor = [[0 for x in range(1000)] for y in range(1000)]
    return lOceanFloor

def countDangerousAreas(): 
    countDangerousAreas = 0

    for row in range(len(oceanFloor)):
        for col in range(len(oceanFloor[0])):
            countDangerousAreas += 1 if oceanFloor[row][col] > 1 else 0

    return countDangerousAreas

################################################################################
# Main program
################################################################################

oceanFloor = initialiseOceanFloor()      

with open('AOC2021D5.txt') as INFILE:
   for LINE in INFILE:
      LINE = LINE.rstrip()

      if LINE.startswith('#'):
          continue

      LINE = LINE.split(' -> ')
      print(f'{LINE=}') 
      coord1 = [int(x) for x in LINE[0].split(',')]
      coord2 = [int(x) for x in LINE[1].split(',')]
      plotLine(coord1, coord2)

print(f'{countDangerousAreas()=}')"
Xdjxp4TC,Untitled,sasa2742002,Python,Friday 22nd of September 2023 10:34:03 AM CDT,"import requests


def get_data(url, region_name):
    response = requests.get(url)
    data_info = response.json()

    if response.status_code == 200:
        instances = []
        region_data = data_info['regions'].get(region_name, {})

        for instance_name, instance_attributes in region_data.items():
            instance = {
                'Instance Name': instance_name,
                'Rate Code': instance_attributes.get('rateCode', ''),
                'Price': instance_attributes.get('price', ''),
                'Location': instance_attributes.get('Location', ''),
                'Instance Family': instance_attributes.get('Instance Family', ''),
                'vCPU': instance_attributes.get('vCPU', ''),
                'Memory': instance_attributes.get('Memory', ''),
                'Storage': instance_attributes.get('Storage', ''),
                'Network Performance': instance_attributes.get('Network Performance', ''),
                'Operating System': instance_attributes.get('Operating System', ''),
                'Pre Installed S/W': instance_attributes.get('Pre Installed S/W', ''),
                'License Model': instance_attributes.get('License Model', ''),
            }
            instances.append(instance)

        return instances
    else:
        return None


def north_america():
    north_america_urls = [
        [""US East (N. Virginia)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/US%20East%20(N.%20Virginia)/Linux/index.json?timestamp=1695335197182""],
        [""US East (N. California)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/US%20West%20(N.%20California)/Linux/index.json?timestamp=1695335943885""],
        [""US West (Oregon)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/US%20West%20(Oregon)/Linux/index.json?timestamp=1695336005767""],
        [""Canada (Central)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Canada%20(Central)/Linux/index.json?timestamp=1695336038545""],
        [""AWS GovCloud (US-East)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/AWS%20GovCloud%20(US-East)/Linux/index.json?timestamp=1695336076977""],
        [""AWS GovCloud (US-West)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/AWS%20GovCloud%20(US)/Linux/index.json?timestamp=1695336143250""]
    ]

    north_america = []
    for region_info in north_america_urls:
        region = region_info[0]
        url = region_info[1]
        data = get_data(url, region)
        north_america.append(data)

    return north_america


def africa():
    africa_urls = [
        [""Africa (Cape Town)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Africa%20(Cape%20Town)/Linux/index.json?timestamp=1695336201165""]
    ]

    africa = []
    for region_info in africa_urls:
        region = region_info[0]
        url = region_info[1]
        data = get_data(url, region)
        africa.append(data)

    return africa


def asia_pacific():
    asia_pacific = [
        [""Asia Pacific (Hong Kong)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Hong%20Kong)/Linux/index.json?timestamp=1695336236566""],
        [""Asia Pacific (Hyderabad)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Hyderabad)/Linux/index.json?timestamp=1695336267211""],
        [""Asia Pacific (Jakarta)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Jakarta)/Linux/index.json?timestamp=1695336335452""],
        [""Asia Pacific (Melbourne)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Melbourne)/Linux/index.json?timestamp=1695336377353""],
        [""Asia Pacific (Mumbai)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Mumbai)/Linux/index.json?timestamp=1695336414559""],
        [""Asia Pacific (Osaka)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Osaka)/Linux/index.json?timestamp=1695336448367""],
        [""Asia Pacific (Seoul)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Seoul)/Linux/index.json?timestamp=1695336489384""],
        [""Asia Pacific (Singapore)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Singapore)/Linux/index.json?timestamp=1695336516652""],
        [""Asia Pacific (Sydney)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Australia%20(Sydney)/Linux/index.json?timestamp=1695336549342""],
        [""Asia Pacific (Tokyo)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Australia%20(Tokyo)/Linux/index.json?timestamp=1695336572681""]
    ]

    asia_pacific = []
    for region_info in asia_pacific:
        region = region_info[0]
        url = region_info[1]
        data = get_data(url, region)
        asia_pacific.append(data)

    return asia_pacific


def europe():
    europe = [
        [""Europe (Frankfurt)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Frankfurt)/Linux/index.json?timestamp=1695336606682""],
        [""Europe (Ireland)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Ireland)/Linux/index.json?timestamp=1695336640824""],
        [""Europe (London)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(London)/Linux/index.json?timestamp=1695336671834""],
        [""Europe (Milan)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Milan)/Linux/index.json?timestamp=1695336709113""],
        [""Europe (Paris)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Paris)/Linux/index.json?timestamp=1695336734334""],
        [""Europe (Spain)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Spain)/Linux/index.json?timestamp=1695336756525""],
        [""Europe (Stockholm)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Stockholm)/Linux/index.json?timestamp=1695336795677""],
        [""Europe (Zurich)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Zurich)/Linux/index.json?timestamp=1695336817871""]
    ]

    europe = []
    for region_info in europe:
        region = region_info[0]
        url = region_info[1]
        data = get_data(url, region)
        europe.append(data)

    return europe


def middle_east():
    middle_east = [
        [""Middle East (Bahrain)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Middle%20East%20(Bahrain)/Linux/index.json?timestamp=1695336880976""],
        [""Middle East (UAE)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Middle%20East%20(UAE)/Linux/index.json?timestamp=1695336906621""]
    ]

    middle_east = []
    for region_info in middle_east:
        region = region_info[0]
        url = region_info[1]
        data = get_data(url, region)
        middle_east.append(data)

    return middle_east


def south_america():
    south_america = [
        [""South America (Sao Paulo)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/South%20America%20(Sao%20Paulo)/Linux/index.json?timestamp=1695336944637""]
    ]

    south_america = []
    for region_info in south_america:
        region = region_info[0]
        url = region_info[1]
        data = get_data(url, region)
        south_america.append(data)

    return south_america


def main():
    # north_america_data = north_america()
    africa_data = africa()
    # asia_pacific_data = asia_pacific()
    # europe_data = europe()
    # middle_east_data = middle_east()
    # south_america_data = south_america()

    # print(north_america_data)
    print(africa_data)
    # print(asia_pacific_data)
    # print(europe_data)
    # print(middle_east_data)
    # print(south_america_data)


main()"
G8E22ETY,++ snowybot update,coinwalk,JavaScript,Friday 22nd of September 2023 10:31:26 AM CDT,"var measly = parseFloat(document.getElementById('pct_balance').value);
var baby = Number((measly/144000).toFixed(8));
var moon = baby;
var taget = 200000;
var tens = (baby*10000);
var sevens = (baby*7000);
var baboon = false;
var upper = 7000;
var downer = 3000;
var zoom = ((Math.floor(measly/tens))*tens);
var olzerer = ((Math.floor(measly/tens))*tens);
var mith = 1;
var zuel = parseFloat(document.getElementById('pct_balance').value);
var bart = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var lisa = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
 
function get(){
zuel = parseFloat(document.getElementById('pct_balance').value);
if (zuel>(zoom+(moon*upper))) {
    moon = Number((moon*2).toFixed(8));
    upper = 5000;
    downer = 5000;
    foilhat = foilhat+1;
    zoom = parseFloat(zuel);
}
if (zuel<(zoom-(moon*downer))) {
    moon = Number((moon*2).toFixed(8));
    upper = 5000;
    downer = 5000;
    couunt = couunt+1;
    zoom = parseFloat(zuel);
}
if ((zuel>=(olzerer+(tens*mith)))&&(zuel<(((Math.floor(zuel/tens))*tens)+sevens))){
    moon = baby;
    upper = 7000;
    downer = 3000;
    mith = 1;
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
    if (zuel >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }     
    lisa = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
     if ((lisa > bart)&&(baboon)) {
var funeral = Number((zuel - measly).toFixed(8));
console.log(""profit"");
console.log(funeral); 
      baboon = false; 
       bart = parseFloat(lisa);
    }
    if ((lisa == bart)&&(!baboon)) { 
        baboon = true; 
        $('#pct_chance').val(0.0495);
        $('#pct_bet').val(((moon*1).toFixed(8)));
        $('#a_lo').click();
    }
    setTimeout(() => get(), 1);
}
get();"
RcYV453q,Roblox Simple ESP,YourMain12,Lua,Friday 22nd of September 2023 10:31:16 AM CDT,"local Players = game:GetService(""Players"")

for _, Player in ipairs(Players:GetPlayers()) do
    local Character = Player.Character

    if Character then
        local Highlight = Instance.new(""Highlight"")
        Highlight.Parent = Character
        Highlight.Adornee = Character
        Highlight.FillTransparency = 1
        Highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
        Highlight.OutlineTransparency = 0
        Highlight.DepthMode = ""Occluded""
    end
end
"
aQLJgDPA,Tennis Ranklist,Spocoman,C++,Friday 22nd of September 2023 10:27:49 AM CDT,"#include <iostream>

using namespace std;

int main() {
    int numberOfTournaments, startPoints;
    cin >> numberOfTournaments >> startPoints;

    int tournamentPoints = 0;
    int gamesWon = 0;

    string currentTournament;

    for (int i = 0; i < numberOfTournaments; i++) {
        cin >> currentTournament;

        if (currentTournament == ""W"") {
            tournamentPoints += 2000;
            gamesWon++;
        } else if (currentTournament == ""F"") {
            tournamentPoints += 1200;
        }
        else {
            tournamentPoints += 720;
        }
    }

    cout.setf(ios::fixed);
    cout.precision(2);

    cout << ""Final points: "" << startPoints + tournamentPoints << endl;
    cout << ""Average points: "" << tournamentPoints / numberOfTournaments << endl;
    cout << 100.0 * gamesWon / numberOfTournaments << '%' << endl;

    return 0;
}"
asvCnKGc,Tennis Equipment,Spocoman,C++,Friday 22nd of September 2023 10:19:22 AM CDT,"#include <iostream>
#include <cmath>

using namespace std;

int main() {
    double racketPrice;
    cin >> racketPrice;

    int racketCount, sneakersCount;
    cin >> racketCount >> sneakersCount;

    double racketsSum = racketPrice * racketCount;
    double sneackersSum = racketPrice / 6 * sneakersCount;
    double price = (racketsSum + sneackersSum) * 1.2;

    cout << ""Price to be paid by Djokovic "" << floor(price / 8) << endl;
    cout << ""Price to be paid by sponsors "" << ceil(price * 7 / 8) << endl;

    return 0;
}"
Le98WptQ,MySQL: helpful command,Lasyanga,MySQL,Friday 22nd of September 2023 10:16:12 AM CDT,"-- generate a alter command for changing collation utf8mb4_unicode_ci
SET @dbname = 'your_database_name';
SELECT 
CONCAT('ALTER TABLE ', table_name, ' MODIFY COLUMN ', column_name, ' ', column_type, ' CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci', 
CASE WHEN IS_NULLABLE = 'NO' THEN ' NOT NULL' ELSE '' END, ';') AS query
FROM information_schema.columns
WHERE table_schema = @dbname
    AND collation_name <> 'utf8mb4_unicode_ci'
ORDER BY table_name ASC;

-- finding particular value in all tables
SET @search_value = '%search_string%';
SET @col_name = 'column_name';
SET @db_name = 'database_name';
SET @condition_val = 'LIKE';
SET @query = (
    SELECT
        GROUP_CONCAT(
            CONCAT(
                'SELECT \'', table_name, '\' AS table_name, ', @col_name,' FROM ',
                table_name, ' WHERE ', @col_name,' ',@condition_val, ' \'', @search_value, '\''
            ) SEPARATOR ' UNION '
        )
    FROM information_schema.columns
    WHERE table_schema = @db_name
    AND COLUMN_NAME = @col_name
);
"
R5g1PRFx,Sum And Product,Spocoman,C++,Friday 22nd of September 2023 10:12:43 AM CDT,"#include <iostream>

using namespace std;

int main() {
    int n;
    cin >> n;

    for (int i = 1; i < 9; i++) {
        for (int j = 9; j > i; j--) {
            for (int k = 0; k < 9; k++) {
                for (int l = 9; l > k; l--) {
                    if ((i + j + k + l) == i * j * k * l && n % 10 == 5) {
                        cout << i << j << k << l << endl;
                        return 0;
                    }
                    if (i * j * k * l / (i + j + k + l) == 3 && n % 3 == 0) {
                        cout << l << k << j << i << endl;
                        return 0;
                    }
                }
            }
        }
    }
    cout << ""Nothing found\n"";
    return 0;
}"
91bvVxVB,Untitled,makarworld,Python,Friday 22nd of September 2023 10:09:25 AM CDT,"def color(color: Colors, *values, sep=' ', end='\n'):
    print(Colorate.Horizontal(color, sep.join(values) + end))

def rainbow(*values, sep=' ', end='\n'):
    color(Colors.rainbow, *values, sep=sep, end=end)

def check():
    while True:
        bdaddr = generateBd()
        addys = listToString(list(bdaddr))
        balances = getBalance3(addys)
        
        with lock:
            for item in balances[""addresses""]:
                addy = item[""address""]
                balance = item[""final_balance""]
                received = item[""total_received""]
                mnemonic_words = bdaddr[addy]
                if balance > 0:
                    msg = f'Balance: {balance} | Received: {received} | Address: {addy} | Mnemonic phrase: {mnemonic_words}'
                    Settings.find_BTC += balance
                    Settings.find_USD += balance*1
                    with open('results/win.txt', 'a') as w:
                        w.write(msg + '\n')
                        Settings.wet_count += 1

                    sendBotMsg(msg)
                    sendBotMsg1(msg)

                    color(Colors.yellow_to_green, msg)


                else:
                    msg = f'Balance: {balance} | Received: {received} | Address: {addy} | Mnemonic phrase: {mnemonic_words}'
                    if (received > 0):
                        with open('results/recieved_more_then_0.txt', 'a') as w:
                            w.write(msg +'\n')
                            Settings.wet_count += 1

                        sendBotMsg(msg)
                        sendBotMsg1(msg)

                        color(Colors.yellow_to_green, msg)

                    else:
                        color(Colors.yellow_to_green, msg)
                            
                Settings.count_all += 1
                if Settings.save_empty == ""y"":
                    ctypes.windll.kernel32.SetConsoleTitleW(
                        f""BTC | t.me/crypto_mining_bot |  С балансом: {Settings.wet_count} - Всего проверок:  {Settings.count_all}  -  [Нашли {Settings.find_USD}$]"")
                else:
                    ctypes.windll.kernel32.SetConsoleTitleW(
                        f""BTC | t.me/crypto_mining_bot |  С балансом: {Settings.wet_count} - Всего проверок:  {Settings.count_all}  -  [Нашли {Settings.find_USD}$]"")
                if balance > 0:
                    Settings.find_BTC += balance
                    Settings.find_USD += balance*1
                    with open('results/win.txt', 'a') as w:
                        w.write(
                            f'Balance: {balance} | Received: {received} | Address: {addy} |  Mnemonic phrase: {mnemonic_words}')
                        Settings.wet_count += 1
                else:
                    if Settings.save_empty == ""n"":
                        pass
                    else:
                        with open('results/0multiwallets.txt', 'a') as w:
                            w.write(
                                f'Balance: {balance} | Received: {received} | Address: {addy} |  Mnemonic phrase: {mnemonic_words}\n')"
LGXy4a25,distributor,davegimo,Python,Friday 22nd of September 2023 10:01:18 AM CDT,"def setprice(n,p):
    price[n] = p

def getprice(n):
    return price[n]

def isDistributor(n):
    return getprice(n) != -1

def print_min_distributore(mat,n):
    minimo = mat[n][0]
    nodo_minimo = 0

    for i in range(len(mat[n])):
        if isDistributor(n):
            if minimo > mat[n][i]:
                minimo = mat[n][i]
                nodo_minimo = i
                
            elif minimo == mat[n][i] and getprice(nodo_minimo) > getprice(i):
                minimo = mat[n][i]
                nodo_minimo = i

    print(n, nodo_minimo, minimo, getprice(nodo_minimo))

def es2(G):
    mat = floyd(G)
    for i in range(len(mat)):
        if not isDistributor(n): #acquirente
            print_min_distributore(mat,i)


            "
G7N5CCaw,Suitcases Load,Spocoman,C++,Friday 22nd of September 2023 10:00:12 AM CDT,"#include <iostream>

using namespace std;

int main() {
    double availableArea;
    cin >> availableArea;

    string suitcaseVolume;
    cin >> suitcaseVolume;

    int loadedSuitcases = 0;

    while (suitcaseVolume != ""End"") { 
          double currentSuitcaseVolume = stod(suitcaseVolume);

        if (++loadedSuitcases % 3 == 0) {
            currentSuitcaseVolume *= 1.1;
        }

        if (currentSuitcaseVolume > availableArea) {
            loadedSuitcases--;
            break;
        }
        availableArea -= currentSuitcaseVolume;
       
        cin >> suitcaseVolume;
    }

    if (suitcaseVolume == ""End"") {
        cout << ""Congratulations! All suitcases are loaded!\n"";
    }
    else {
        cout << ""No more space!\n"";
    }
    cout << ""Statistic: "" << loadedSuitcases << "" suitcases loaded.\n"";
    return 0;
}"
eF9sxMSc,instantly,AsergeyR,C++,Friday 22nd of September 2023 09:27:11 AM CDT,"#include <bits/stdc++.h>
using namespace std;
int main() {
    int64_t n, k;
    cin >> n >> k;
    // a1+a2+a3+...+ak = n, n делится на НОД, значит каждое слагаемое делится на НОД
    // НОД * (b1 + b2 + b3 + ... + bk) = n
    // переберём НОД, дальше попробуем заполнить скобку минимальными различными числами:
    // (1 + 2 + 3 + ... + (k-1) + остаток) = n / НОД
    int64_t answ = -1;
    for (int64_t x = 1; x * x <= n; x++)
        if (auto y = n / x; y * x == n) {
            auto update_answer = [&](int64_t nod)
            {
                int64_t sum = n / nod;
                // если можем выбрать последнее число, которое > k-1:
                if (sum - __int128(k-1) * k / 2 >= k)
                    answ = max(answ, nod);
            };
            update_answer(x);
            update_answer(y);
        }
    // выводим ответ:
    if (answ == -1) cout << ""-1\n"";
    else {
        for (int64_t i = 1; i <= k-1; i++) {
            cout << answ * i << ' ';
            n -= answ * i;
        }
        cout << n << '\n';
    }
}"
fjFA9MBT,Substitute,Spocoman,C++,Friday 22nd of September 2023 09:27:07 AM CDT,"#include <iostream>

using namespace std;

int main() {
    int a, b, c, d, counter = 0;
    cin >> a >> b >> c >> d;

    for (int k = a; k < 9; k++) {
        for (int l = 9; l >= b; l--) {
            for (int m = c; m < 9; m++) {
                for (int n = 9; n >= d; n--) {
                    if (k % 2 == 0 && m % 2 == 0 && l % 2 == 1 && n % 2 == 1) {
                        if (k == m && l == n) {
                            cout << ""Cannot change the same player.\n"";
                        }
                        else {
                            cout << k << l << "" : "" << m << n << endl;

                            if (++counter == 6) {
                                return 0;
                            }
                        }
                    }
                }
            }
        }
    }
    return 0;
}"
jst08YKR,MOK layout Pegon,dksetiavan,JSON,Friday 22nd of September 2023 09:25:59 AM CDT,"OK_Layout_Begin
Name:Pegon
١٢٣٤٥٦٧٨٩٠
قوٓرتي[MC:او]إ[MC:اَو]ڤ
اسدفڮهجكل
زڠچۑبنم
٪ًٌٍَُِّْ؟
خ[MC:ئو]عصطئضظثة
ءشڊذغحَُِ
ﷲﷴﷵﷷﷸﷺ﷽
!@#$۞٪&*)(۝
][}{\/_-=|+۩
~؎﷼£¥€:؛'""٭
ﷲ…؏؞»«ـ.؟
1234567890><
‎‏‭‮‬‪‫ 
°•ىـ−ٱۤ،﴾﴿;
ٰٖٕؐ,'?‐۔
OK_Layout_End
"
AxmGNSwQ,TL,AsergeyR,C++,Friday 22nd of September 2023 09:24:46 AM CDT,"#include <iostream>

using namespace std;

int main() {
	int64_t n, k;
	cin >> n >> k;

	for (int64_t x = n; x >= 1; x--) {
		if (n % x == 0) {
			int64_t sum = n / x;
			int64_t ar_sum = (k + 1) * k / 2;
			if (ar_sum <= sum) {
				for (int64_t i = 1; i < k; i++) {
					cout << i * x << ' ';
				}
				cout << (sum - (ar_sum - k)) * x;
				return 0;
			}
		}
	}
	cout << -1;
}"
x2nBxxNj,MOK layout ngwerty pegon,dksetiavan,JSON,Friday 22nd of September 2023 09:24:37 AM CDT,"OK_Layout_Begin
Name:ngwerty pegon
١٢٣٤٥٦٧٨٩٠
ڠوٓرتيَُِڤ
اسدفڮهجكل
زۑچْبنم
﷽ﷻﷺﷸﷷﷶﷵﷴﷳﷲ
عصةضطظًٌٍث
ءشڊذغحخق[MC:ٓى]
ئىࢮّࢴٕٔ
!@#$۞٪&*)(۝
][}{\/_-=|+۩
~؎﷼£¥€:؛'""٭
ﷲ…؏؞»«ـ.؟
1234567890
>‎‏‭‮‬‪‫ <
°•آـ−ٱۤ،﴾﴿;
ٰٖٕؐ,'?‐۔
OK_Layout_End
"
yKxXgxN4,Spaceship,Spocoman,C++,Friday 22nd of September 2023 09:16:18 AM CDT,"#include <iostream>

using namespace std;

int main() {
    double width, length, height, averageHeight;
    cin >> width >> length >> height >> averageHeight;

    double spaceshipVolume = width * length * height;
    double astronautVolume = (averageHeight + 0.4) * 2 * 2;
    int team = (int)(spaceshipVolume / astronautVolume);

    if (team < 3) {
        cout << ""The spacecraft is too small.\n"";
    }
    else if (team > 10) {
        cout << ""The spacecraft is too big.\n"";
    }
    else {
        cout << ""The spacecraft holds "" << team << "" astronauts.\n"";
    }
    return 0;
}"
XqTnPsyC,Untitled,remico,JavaScript,Friday 22nd of September 2023 09:15:49 AM CDT,"function onTimeForExam (inputArray) {
let exStH = Number (inputArray[0]);//9
let exStHasM = exStH * 60; //540
let exStM = Number (inputArray[1]); //30
let stArrH = Number (inputArray[2]);//9
let stArrHasM = stArrH * 60;//540
let stArrM = Number (inputArray[3]);//50
let allExSt = exStHasM + exStM; //570
let allStArr = stArrHasM + stArrM; //590
let difference =Math.abs(allExSt - allStArr);

 if (allStArr === allExSt || allExSt -30 ) {
    console.log (`On time`);
   
    }else if (allStArr > allExSt) {
        console.log (`Late`);
        if (difference > 60) {
         console.log (`${difference} minutes after the start`);
         }else {
             let hours = Math.floor (difference / 60);
             let minutes = Math.floor (difference % 60);
            console.log (`${hours}: ${minutes} hours after the start`);
         }
     }else if (allExSt -31){
        console.log (`Early`);
        if (difference > 60) {
            console.log (`${difference} minutes before the start`);
            }else {
                let hours = Math.floor (difference / 60);
                let minutes = Math.floor (difference % 60);
               console.log (`${hours}: ${minutes} hours before the start`);
            }

}
}
 onTimeForExam ([""9"",""30"",""9"",""50""]);
// onTimeForExam ([""9"",""00"",""8"",""30""]);
// onTimeForExam ([""11"",""30"",""10"",""55""]);
// onTimeForExam ([""9"",""30"",""9"",""50""]);"
pDJfJZuG,News Sep22 23,Newscaster_Ned,Email,Friday 22nd of September 2023 08:58:10 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

W‎e‎l‎l‎ ‎i‎t‎'‎s‎ ‎m‎e‎ ‎a‎g‎a‎i‎n‎,‎ ‎y‎o‎u‎ ‎f‎u‎d‎g‎e‎ ‎p‎a‎c‎k‎e‎r‎s‎.‎ ‎H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎""‎n‎e‎w‎s‎""‎.‎

R‎e‎p‎o‎r‎t‎:‎ ‎B‎i‎d‎e‎n‎ ‎P‎l‎a‎n‎s‎ ‎P‎h‎o‎t‎o‎ ‎I‎D‎ ‎C‎a‎r‎d‎s‎ ‎f‎o‎r‎ ‎I‎l‎l‎e‎g‎a‎l‎s‎

A‎c‎c‎e‎s‎s‎ ‎t‎o‎ ‎P‎u‎b‎l‎i‎c‎ ‎B‎e‎n‎e‎f‎i‎t‎s‎
U‎S‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎a‎d‎d‎r‎e‎s‎s‎e‎s‎ ‎t‎h‎e‎ ‎7‎8‎t‎h‎ ‎U‎n‎i‎t‎e‎d‎ ‎N‎a‎t‎i‎o‎n‎s‎ ‎G‎e‎n‎e‎r‎a‎l‎ ‎A‎s‎s‎e‎m‎b‎l‎y‎ ‎a‎t‎ ‎U‎N‎ ‎h‎e‎a‎d‎q‎u‎a‎r‎t‎e‎r‎s‎ ‎i‎n‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎C‎i‎t‎y‎ ‎o‎n‎ ‎S‎e‎p‎t‎e‎m‎b‎e‎r‎ ‎1‎9‎,‎ ‎2‎0‎2‎3‎.‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎E‎d‎ ‎J‎O‎N‎E‎S‎ ‎/‎ ‎A‎F‎P‎)‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎E‎D‎ ‎J‎O‎N‎E‎S‎/‎A‎F‎P‎ ‎v‎i‎a‎ ‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎)‎
J‎o‎e‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎D‎H‎S‎ ‎i‎s‎ ‎r‎e‎p‎o‎r‎t‎e‎d‎l‎y‎ ‎p‎l‎a‎n‎n‎i‎n‎g‎ ‎t‎o‎ ‎g‎i‎v‎e‎ ‎p‎h‎o‎t‎o‎ ‎i‎d‎e‎n‎t‎i‎f‎i‎c‎a‎t‎i‎o‎n‎ ‎c‎a‎r‎d‎s‎ ‎t‎o‎ ‎i‎l‎l‎e‎g‎a‎l‎ ‎a‎l‎i‎e‎n‎s‎ ‎b‎e‎f‎o‎r‎e‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎r‎e‎l‎e‎a‎s‎e‎d‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎.‎

A‎G‎ ‎G‎a‎r‎l‎a‎n‎d‎ ‎C‎a‎l‎l‎s‎ ‎A‎c‎c‎u‎s‎a‎t‎i‎o‎n‎s‎ ‎o‎f‎ ‎A‎n‎t‎i‎-‎C‎a‎t‎h‎o‎l‎i‎c‎ ‎B‎i‎a‎s‎ ‎‘‎O‎u‎t‎r‎a‎g‎e‎o‎u‎s‎’‎
A‎G‎ ‎G‎a‎r‎l‎a‎n‎d‎ ‎C‎a‎l‎l‎s‎ ‎A‎c‎c‎u‎s‎a‎t‎i‎o‎n‎s‎ ‎o‎f‎ ‎A‎n‎t‎i‎-‎C‎a‎t‎h‎o‎l‎i‎c‎ ‎B‎i‎a‎s‎ ‎‘‎O‎u‎t‎r‎a‎g‎e‎o‎u‎s‎’‎
2‎7‎9‎
P‎e‎t‎e‎r‎ ‎S‎c‎h‎w‎e‎i‎z‎e‎r‎:‎ ‎T‎h‎e‎ ‎C‎l‎i‎n‎t‎o‎n‎s‎ ‎A‎r‎e‎ ‎M‎a‎s‎t‎e‎r‎s‎ ‎o‎f‎ ‎'‎D‎i‎s‎a‎s‎t‎e‎r‎ ‎C‎a‎p‎i‎t‎a‎l‎i‎s‎m‎'‎
P‎e‎t‎e‎r‎ ‎S‎c‎h‎w‎e‎i‎z‎e‎r‎:‎ ‎T‎h‎e‎ ‎C‎l‎i‎n‎t‎o‎n‎s‎ ‎A‎r‎e‎ ‎M‎a‎s‎t‎e‎r‎s‎ ‎o‎f‎ ‎'‎D‎i‎s‎a‎s‎t‎e‎r‎ ‎C‎a‎p‎i‎t‎a‎l‎i‎s‎m‎'‎
1‎,‎5‎8‎5‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎:‎ ‎'‎D‎H‎S‎ ‎O‎u‎t‎ ‎t‎o‎ ‎L‎u‎n‎c‎h‎,‎'‎ ‎P‎l‎a‎n‎s‎ ‎M‎a‎s‎s‎i‎v‎e‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎R‎e‎l‎e‎a‎s‎e‎,‎ ‎S‎a‎y‎s‎ ‎S‎o‎u‎r‎c‎e‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎:‎ ‎'‎D‎H‎S‎ ‎O‎u‎t‎ ‎t‎o‎ ‎L‎u‎n‎c‎h‎,‎'‎ ‎P‎l‎a‎n‎s‎ ‎M‎a‎s‎s‎i‎v‎e‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎R‎e‎l‎e‎a‎s‎e‎,‎ ‎S‎a‎y‎s‎ ‎S‎o‎u‎r‎c‎e‎
8‎4‎0‎
O‎v‎e‎r‎ ‎T‎w‎o‎ ‎D‎o‎z‎e‎n‎ ‎G‎O‎P‎ ‎S‎e‎n‎a‎t‎o‎r‎s‎,‎ ‎L‎a‎w‎m‎a‎k‎e‎r‎s‎ ‎S‎a‎y‎ ‎N‎o‎ ‎M‎o‎r‎e‎ ‎F‎u‎n‎d‎i‎n‎g‎ ‎f‎o‎r‎ ‎U‎k‎r‎a‎i‎n‎e‎
O‎v‎e‎r‎ ‎T‎w‎o‎ ‎D‎o‎z‎e‎n‎ ‎G‎O‎P‎ ‎S‎e‎n‎a‎t‎o‎r‎s‎,‎ ‎L‎a‎w‎m‎a‎k‎e‎r‎s‎ ‎S‎a‎y‎ ‎N‎o‎ ‎M‎o‎r‎e‎ ‎F‎u‎n‎d‎i‎n‎g‎ ‎f‎o‎r‎ ‎U‎k‎r‎a‎i‎n‎e‎
5‎3‎8‎
N‎o‎l‎t‎e‎:‎ ‎C‎E‎O‎ ‎B‎o‎b‎ ‎I‎g‎e‎r‎ ‎S‎a‎y‎s‎ ‎D‎i‎s‎n‎e‎y‎ ‎w‎i‎l‎l‎ ‎‘‎Q‎u‎i‎e‎t‎ ‎t‎h‎e‎ ‎N‎o‎i‎s‎e‎’‎ ‎i‎n‎ ‎C‎u‎l‎t‎u‎r‎e‎ ‎W‎a‎r‎s‎
N‎o‎l‎t‎e‎:‎ ‎C‎E‎O‎ ‎B‎o‎b‎ ‎I‎g‎e‎r‎ ‎S‎a‎y‎s‎ ‎D‎i‎s‎n‎e‎y‎ ‎w‎i‎l‎l‎ ‎‘‎Q‎u‎i‎e‎t‎ ‎t‎h‎e‎ ‎N‎o‎i‎s‎e‎’‎ ‎i‎n‎ ‎C‎u‎l‎t‎u‎r‎e‎ ‎W‎a‎r‎s‎
1‎4‎0‎
F‎a‎s‎h‎i‎o‎n‎ ‎N‎o‎t‎e‎s‎:‎ ‎T‎h‎e‎ ‎I‎n‎s‎i‎n‎c‎e‎r‎i‎t‎y‎ ‎o‎f‎ ‎J‎o‎h‎n‎ ‎F‎e‎t‎t‎e‎r‎m‎a‎n‎'‎s‎ ‎H‎o‎o‎d‎i‎e‎,‎ ‎E‎x‎p‎l‎a‎i‎n‎e‎d‎
F‎a‎s‎h‎i‎o‎n‎ ‎N‎o‎t‎e‎s‎:‎ ‎T‎h‎e‎ ‎I‎n‎s‎i‎n‎c‎e‎r‎i‎t‎y‎ ‎o‎f‎ ‎J‎o‎h‎n‎ ‎F‎e‎t‎t‎e‎r‎m‎a‎n‎'‎s‎ ‎H‎o‎o‎d‎i‎e‎,‎ ‎E‎x‎p‎l‎a‎i‎n‎e‎d‎
3‎,‎1‎2‎0‎
R‎e‎p‎o‎r‎t‎:‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎'‎s‎ ‎D‎H‎S‎ ‎P‎l‎a‎n‎s‎ ‎I‎D‎ ‎C‎a‎r‎d‎s‎ ‎f‎o‎r‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎A‎l‎i‎e‎n‎s‎ ‎F‎r‎e‎e‎d‎ ‎i‎n‎t‎o‎ ‎U‎.‎S‎.‎
R‎e‎p‎o‎r‎t‎:‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎'‎s‎ ‎D‎H‎S‎ ‎P‎l‎a‎n‎s‎ ‎I‎D‎ ‎C‎a‎r‎d‎s‎ ‎f‎o‎r‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎A‎l‎i‎e‎n‎s‎ ‎F‎r‎e‎e‎d‎ ‎i‎n‎t‎o‎ ‎U‎.‎S‎.‎
1‎,‎8‎8‎4‎
N‎F‎L‎ ‎T‎r‎a‎n‎s‎ ‎C‎h‎e‎e‎r‎l‎e‎a‎d‎e‎r‎ ‎S‎e‎e‎k‎s‎ ‎t‎o‎ ‎I‎n‎s‎p‎i‎r‎e‎ ‎Y‎o‎u‎t‎h‎
N‎F‎L‎ ‎T‎r‎a‎n‎s‎ ‎C‎h‎e‎e‎r‎l‎e‎a‎d‎e‎r‎ ‎S‎e‎e‎k‎s‎ ‎t‎o‎ ‎I‎n‎s‎p‎i‎r‎e‎ ‎Y‎o‎u‎t‎h‎
3‎0‎0‎
D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎P‎a‎n‎i‎c‎ ‎a‎s‎ ‎T‎r‎u‎m‎p‎ ‎P‎l‎a‎n‎s‎ ‎t‎o‎ ‎V‎i‎s‎i‎t‎ ‎S‎t‎r‎i‎k‎i‎n‎g‎ ‎A‎u‎t‎o‎ ‎W‎o‎r‎k‎e‎r‎s‎
D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎P‎a‎n‎i‎c‎ ‎a‎s‎ ‎T‎r‎u‎m‎p‎ ‎P‎l‎a‎n‎s‎ ‎t‎o‎ ‎V‎i‎s‎i‎t‎ ‎S‎t‎r‎i‎k‎i‎n‎g‎ ‎A‎u‎t‎o‎ ‎W‎o‎r‎k‎e‎r‎s‎
3‎3‎8‎
S‎u‎c‎c‎e‎s‎s‎i‎o‎n‎:‎ ‎R‎u‎p‎e‎r‎t‎ ‎M‎u‎r‎d‎o‎c‎h‎ ‎H‎a‎n‎d‎s‎ ‎C‎o‎m‎p‎a‎n‎y‎ ‎t‎o‎ ‎S‎o‎n‎ ‎L‎a‎c‎h‎l‎a‎n‎
S‎u‎c‎c‎e‎s‎s‎i‎o‎n‎:‎ ‎R‎u‎p‎e‎r‎t‎ ‎M‎u‎r‎d‎o‎c‎h‎ ‎H‎a‎n‎d‎s‎ ‎C‎o‎m‎p‎a‎n‎y‎ ‎t‎o‎ ‎S‎o‎n‎ ‎L‎a‎c‎h‎l‎a‎n‎

M‎o‎n‎k‎e‎y‎ ‎M‎a‎n‎ ‎G‎e‎t‎s‎ ‎1‎9‎2‎ ‎Y‎e‎a‎r‎s‎ ‎i‎n‎ ‎S‎l‎a‎m‎m‎e‎r‎ ‎A‎f‎t‎e‎r‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎M‎a‎n‎ ‎a‎n‎d‎ ‎P‎a‎r‎a‎l‎y‎z‎i‎n‎g‎ ‎H‎i‎m‎ ‎A‎f‎t‎e‎r‎ ‎H‎e‎ ‎S‎a‎w‎ ‎H‎i‎m‎ ‎B‎e‎a‎t‎i‎n‎g‎ ‎H‎i‎s‎ ‎G‎i‎r‎l‎f‎r‎i‎e‎n‎d‎.‎

D‎i‎z‎ ‎n‎i‎g‎g‎a‎ ‎b‎e‎ ‎b‎u‎s‎t‎e‎d‎.‎


N‎e‎g‎r‎o‎ ‎S‎h‎o‎t‎ ‎b‎y‎ ‎C‎o‎p‎s‎ ‎i‎n‎ ‎H‎a‎m‎i‎l‎t‎o‎n‎ ‎H‎e‎i‎g‎h‎t‎s‎ ‎A‎f‎t‎e‎r‎ ‎C‎h‎a‎r‎g‎i‎n‎g‎ ‎a‎t‎ ‎T‎h‎e‎m‎ ‎w‎i‎t‎h‎ ‎D‎u‎e‎l‎-‎W‎i‎e‎l‎d‎i‎n‎g‎ ‎K‎n‎i‎v‎e‎s‎.‎


2‎ ‎N‎e‎g‎r‎e‎s‎s‎e‎s‎ ‎K‎i‎c‎k‎ ‎a‎n‎d‎ ‎A‎t‎t‎a‎c‎k‎ ‎7‎-‎1‎1‎ ‎C‎u‎s‎t‎o‎m‎e‎r‎s‎ ‎A‎f‎t‎e‎r‎ ‎B‎e‎i‎n‎g‎ ‎L‎o‎c‎k‎e‎d‎ ‎i‎n‎s‎i‎d‎e‎ ‎f‎o‎r‎ ‎S‎h‎o‎p‎l‎i‎f‎t‎i‎n‎g‎.‎


B‎o‎n‎g‎o‎ ‎B‎e‎a‎t‎e‎r‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎i‎n‎ ‎P‎r‎a‎i‎r‎i‎e‎ ‎V‎i‎l‎l‎a‎g‎e‎ ‎f‎o‎r‎ ‎S‎c‎a‎m‎m‎i‎n‎g‎ ‎W‎o‎m‎a‎n‎ ‎$‎2‎5‎K‎.‎

.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎.‎.‎.‎.‎ ‎E‎r‎.‎.‎.‎.‎.‎

T‎o‎n‎i‎g‎h‎t‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎e‎a‎r‎
-‎-‎
/‎7‎4‎°‎
1‎1‎%‎
S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎1‎ ‎|‎ ‎N‎i‎g‎h‎t‎
7‎4‎°‎
1‎1‎%‎
S‎S‎E‎
1‎1‎
 ‎
m‎p‎h‎
M‎a‎i‎n‎l‎y‎ ‎c‎l‎e‎a‎r‎.‎ ‎L‎o‎w‎ ‎7‎4‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
7‎2‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎:‎3‎1‎ ‎p‎m‎
W‎a‎x‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
1‎1‎:‎3‎6‎ ‎p‎m‎
F‎r‎i‎ ‎2‎2‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎8‎°‎
/‎7‎6‎°‎
1‎2‎%‎
S‎ ‎1‎0‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎9‎°‎
/‎7‎7‎°‎
8‎%‎
S‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎4‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎0‎°‎
/‎7‎5‎°‎
1‎6‎%‎
S‎ ‎1‎3‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎5‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
9‎4‎°‎
/‎7‎2‎°‎
6‎0‎%‎
S‎E‎ ‎9‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎6‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎3‎°‎
/‎6‎8‎°‎
2‎1‎%‎
N‎E‎ ‎8‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎7‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎3‎°‎
/‎6‎9‎°‎
9‎%‎
E‎S‎E‎ ‎7‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎8‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎6‎°‎
/‎7‎0‎°‎
6‎%‎
S‎E‎ ‎8‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎9‎
S‎u‎n‎n‎y‎
9‎4‎°‎
/‎7‎1‎°‎
7‎%‎
S‎E‎ ‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎3‎0‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎3‎°‎
/‎7‎1‎°‎
7‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎5‎°‎
/‎7‎1‎°‎
1‎5‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎2‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎3‎°‎
/‎7‎3‎°‎
2‎2‎%‎
S‎S‎E‎ ‎8‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎3‎°‎
/‎6‎8‎°‎
2‎4‎%‎
E‎N‎E‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎0‎°‎
/‎6‎5‎°‎
2‎2‎%‎
E‎N‎E‎ ‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎9‎°‎
/‎6‎5‎°‎
1‎8‎%‎
N‎E‎ ‎8‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎S‎p‎o‎o‎k‎t‎o‎b‎e‎r‎.‎ ‎👻

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

S‎a‎m‎s‎u‎n‎g‎ ‎S‎a‎m‎
S‎a‎m‎s‎u‎n‎g‎ ‎S‎a‎m‎ ‎i‎s‎ ‎a‎ ‎s‎h‎i‎t‎t‎y‎ ‎f‎o‎r‎c‎e‎d‎ ‎c‎o‎r‎p‎o‎r‎a‎t‎e‎ ‎m‎e‎m‎e‎ ‎w‎h‎e‎n‎ ‎i‎n‎ ‎2‎0‎2‎1‎,‎ ‎K‎o‎r‎e‎a‎n‎ ‎e‎l‎e‎c‎t‎r‎o‎n‎i‎c‎s‎ ‎c‎o‎m‎p‎a‎n‎y‎ ‎S‎a‎m‎s‎u‎n‎g‎ ‎h‎a‎d‎ ‎r‎e‎j‎e‎c‎t‎e‎d‎ ‎p‎r‎o‎m‎o‎t‎i‎o‎n‎a‎l‎ ‎m‎a‎t‎e‎r‎i‎a‎l‎s‎ ‎l‎e‎a‎k‎e‎d‎ ‎f‎o‎r‎ ‎y‎e‎t‎ ‎a‎n‎o‎t‎h‎e‎r‎ ‎s‎h‎i‎t‎t‎y‎ ‎A‎I‎-‎p‎o‎w‎e‎r‎e‎d‎ ‎v‎i‎r‎t‎u‎a‎l‎ ‎a‎s‎s‎i‎s‎t‎a‎n‎t‎.‎ ‎W‎h‎e‎r‎e‎ ‎o‎t‎h‎e‎r‎ ‎c‎o‎m‎p‎a‎n‎i‎e‎s‎ ‎l‎i‎k‎e‎ ‎A‎p‎p‎l‎e‎ ‎a‎n‎d‎ ‎A‎m‎a‎z‎o‎n‎ ‎f‎a‎i‎l‎e‎d‎,‎ ‎S‎a‎m‎s‎u‎n‎g‎ ‎t‎o‎o‎k‎ ‎a‎ ‎l‎e‎s‎s‎o‎n‎ ‎f‎r‎o‎m‎ ‎V‎a‎l‎v‎e‎ ‎a‎n‎d‎ ‎w‎e‎r‎e‎ ‎a‎t‎t‎e‎m‎p‎t‎i‎n‎g‎ ‎t‎o‎ ‎t‎a‎p‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎ ‎A‎n‎i‎m‎e‎ ‎C‎o‎o‎m‎e‎r‎ ‎m‎a‎r‎k‎e‎t‎.‎ ‎W‎h‎e‎n‎ ‎S‎a‎m‎s‎u‎n‎g‎ ‎f‎i‎n‎a‎l‎l‎y‎ ‎a‎c‎k‎n‎o‎w‎l‎e‎d‎g‎e‎d‎ ‎t‎h‎e‎ ‎e‎x‎i‎s‎t‎e‎n‎c‎e‎ ‎o‎f‎ ‎t‎h‎e‎i‎r‎ ‎a‎b‎a‎n‎d‎o‎n‎e‎d‎ ‎p‎r‎o‎t‎o‎t‎y‎p‎e‎ ‎A‎n‎d‎r‎o‎i‎d‎ ‎W‎a‎i‎f‎u‎™‎,‎ ‎T‎w‎i‎t‎t‎e‎r‎ ‎l‎o‎s‎t‎ ‎t‎h‎e‎i‎r‎ ‎c‎o‎l‎l‎e‎c‎t‎i‎v‎e‎ ‎s‎e‎x‎-‎a‎d‎d‎l‎e‎d‎ ‎d‎e‎g‎e‎n‎e‎r‎a‎t‎e‎d‎ ‎m‎i‎n‎d‎s‎.‎ ‎T‎o‎ ‎n‎o‎b‎o‎d‎y‎'‎s‎ ‎s‎u‎r‎p‎r‎i‎s‎e‎,‎ ‎a‎ ‎s‎h‎i‎t‎ ‎l‎o‎a‎d‎ ‎o‎f‎ ‎R‎u‎l‎e‎ ‎3‎4‎ ‎w‎a‎s‎ ‎m‎a‎d‎e‎ ‎a‎l‎m‎o‎s‎t‎ ‎i‎n‎s‎t‎a‎n‎t‎l‎y‎ ‎a‎n‎d‎ ‎p‎r‎o‎l‎i‎f‎e‎r‎a‎t‎e‎d‎ ‎a‎c‎r‎o‎s‎s‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎r‎w‎e‎b‎z‎.‎ ‎S‎a‎m‎s‎u‎n‎g‎ ‎S‎a‎m‎ ‎i‎s‎ ‎n‎o‎w‎ ‎t‎h‎e‎ ‎w‎a‎i‎f‎u‎ ‎o‎f‎ ‎m‎i‎l‎l‎i‎o‎n‎s‎ ‎o‎f‎ ‎r‎e‎t‎a‎r‎d‎e‎d‎ ‎b‎a‎s‎e‎m‎e‎n‎t‎-‎d‎w‎e‎l‎l‎e‎r‎s‎ ‎w‎h‎o‎ ‎w‎i‎l‎l‎ ‎n‎e‎v‎e‎r‎ ‎g‎e‎t‎ ‎a‎ ‎g‎i‎r‎l‎f‎r‎i‎e‎n‎d‎.‎ ‎T‎h‎i‎s‎ ‎b‎a‎s‎i‎c‎a‎l‎l‎y‎ ‎p‎r‎o‎v‎e‎s‎ ‎h‎u‎m‎a‎n‎i‎t‎y‎ ‎i‎s‎ ‎f‎u‎c‎k‎e‎d‎ ‎f‎o‎r‎e‎v‎e‎r‎.‎

(‎(‎ ‎F‎I‎C‎T‎I‎O‎N‎A‎L‎ ‎W‎A‎I‎F‎U‎S‎ ‎F‎O‎R‎ ‎M‎O‎D‎E‎R‎N‎ ‎N‎E‎R‎D‎S‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎ ‎A‎l‎r‎i‎g‎h‎t‎ ‎h‎e‎r‎e‎'‎s‎ ‎A‎n‎g‎l‎i‎n‎.‎

P‎o‎l‎a‎n‎d‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎s‎ ‎E‎n‎d‎ ‎t‎o‎ ‎M‎i‎l‎i‎t‎a‎r‎y‎ ‎A‎i‎d‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎!‎
A‎n‎d‎r‎e‎w‎ ‎A‎n‎g‎l‎i‎n‎ ‎S‎e‎p‎t‎e‎m‎b‎e‎r‎ ‎2‎2‎,‎ ‎2‎0‎2‎3‎



P‎r‎e‎v‎i‎o‎u‎s‎l‎y‎:‎ ‎P‎o‎l‎e‎s‎ ‎O‎f‎f‎i‎c‎i‎a‎l‎l‎y‎ ‎E‎x‎p‎e‎r‎i‎e‎n‎c‎i‎n‎g‎ ‎“‎U‎k‎i‎e‎ ‎F‎a‎t‎i‎g‎u‎e‎”‎

T‎h‎i‎s‎ ‎i‎s‎ ‎a‎ ‎m‎a‎s‎s‎i‎v‎e‎ ‎s‎t‎o‎r‎y‎ ‎t‎h‎a‎t‎ ‎i‎s‎ ‎s‎o‎m‎e‎h‎o‎w‎ ‎n‎o‎t‎ ‎b‎e‎i‎n‎g‎ ‎c‎o‎n‎s‎i‎d‎e‎r‎e‎d‎ ‎i‎m‎p‎o‎r‎t‎a‎n‎t‎ ‎b‎y‎ ‎t‎h‎e‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎T‎i‎m‎e‎s‎,‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎ ‎P‎o‎s‎t‎,‎ ‎C‎N‎N‎,‎ ‎o‎r‎ ‎a‎n‎y‎ ‎o‎f‎ ‎t‎h‎e‎ ‎o‎t‎h‎e‎r‎s‎.‎

T‎h‎i‎s‎ ‎s‎h‎o‎u‎l‎d‎ ‎b‎e‎ ‎t‎h‎e‎ ‎t‎o‎p‎ ‎h‎e‎a‎d‎l‎i‎n‎e‎.‎

P‎o‎l‎a‎n‎d‎ ‎h‎a‎s‎ ‎b‎e‎e‎n‎ ‎t‎h‎e‎ ‎s‎i‎n‎g‎l‎e‎ ‎b‎i‎g‎g‎e‎s‎t‎ ‎a‎l‎l‎y‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎,‎ ‎a‎n‎d‎ ‎s‎o‎m‎e‎h‎o‎w‎,‎ ‎t‎h‎e‎s‎e‎ ‎U‎k‎i‎e‎s‎ ‎m‎a‎n‎a‎g‎e‎d‎ ‎t‎o‎ ‎p‎i‎s‎s‎ ‎t‎h‎e‎m‎ ‎o‎f‎f‎ ‎s‎o‎ ‎b‎a‎d‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎’‎r‎e‎ ‎d‎i‎p‎p‎i‎n‎g‎ ‎o‎u‎t‎.‎

T‎h‎e‎ ‎G‎u‎a‎r‎d‎i‎a‎n‎:‎

P‎o‎l‎a‎n‎d‎,‎ ‎o‎n‎e‎ ‎o‎f‎ ‎U‎k‎r‎a‎i‎n‎e‎’‎s‎ ‎s‎t‎a‎u‎n‎c‎h‎e‎s‎t‎ ‎a‎l‎l‎i‎e‎s‎,‎ ‎h‎a‎s‎ ‎a‎n‎n‎o‎u‎n‎c‎e‎d‎ ‎a‎n‎ ‎e‎n‎d‎ ‎t‎o‎ ‎i‎t‎s‎ ‎a‎r‎m‎s‎ ‎t‎r‎a‎n‎s‎f‎e‎r‎s‎ ‎t‎o‎ ‎t‎h‎e‎ ‎c‎o‎u‎n‎t‎r‎y‎,‎ ‎a‎ ‎d‎a‎y‎ ‎a‎f‎t‎e‎r‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎V‎o‎l‎o‎d‎y‎m‎y‎r‎ ‎Z‎e‎l‎e‎n‎s‎k‎i‎y‎ ‎a‎c‎c‎u‎s‎e‎d‎ ‎W‎a‎r‎s‎a‎w‎ ‎o‎f‎ ‎p‎l‎a‎y‎i‎n‎g‎ ‎i‎n‎t‎o‎ ‎R‎u‎s‎s‎i‎a‎’‎s‎ ‎h‎a‎n‎d‎s‎ ‎b‎y‎ ‎b‎a‎n‎n‎i‎n‎g‎ ‎U‎k‎r‎a‎i‎n‎i‎a‎n‎ ‎g‎r‎a‎i‎n‎ ‎i‎m‎p‎o‎r‎t‎s‎.‎

P‎o‎l‎a‎n‎d‎ ‎i‎s‎ ‎o‎n‎e‎ ‎o‎f‎ ‎K‎y‎i‎v‎’‎s‎ ‎m‎a‎i‎n‎ ‎w‎e‎a‎p‎o‎n‎s‎ ‎s‎u‎p‎p‎l‎i‎e‎r‎s‎ ‎a‎n‎d‎ ‎h‎a‎s‎ ‎b‎e‎e‎n‎ ‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎l‎o‎u‎d‎e‎s‎t‎ ‎c‎h‎e‎e‎r‎l‎e‎a‎d‎e‎r‎s‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎U‎k‎r‎a‎i‎n‎i‎a‎n‎ ‎c‎a‎u‎s‎e‎ ‎s‎i‎n‎c‎e‎ ‎t‎h‎e‎ ‎f‎u‎l‎l‎-‎s‎c‎a‎l‎e‎ ‎i‎n‎v‎a‎s‎i‎o‎n‎ ‎b‎e‎g‎a‎n‎ ‎l‎a‎s‎t‎ ‎F‎e‎b‎r‎u‎a‎r‎y‎,‎ ‎b‎u‎t‎ ‎r‎e‎l‎a‎t‎i‎o‎n‎s‎ ‎h‎a‎v‎e‎ ‎s‎o‎u‎r‎e‎d‎ ‎o‎v‎e‎r‎ ‎r‎e‎c‎e‎n‎t‎ ‎d‎a‎y‎s‎ ‎a‎m‎i‎d‎ ‎t‎h‎e‎ ‎g‎r‎o‎w‎i‎n‎g‎ ‎r‎o‎w‎ ‎o‎v‎e‎r‎ ‎g‎r‎a‎i‎n‎.‎

I‎t‎’‎s‎ ‎a‎ ‎l‎o‎t‎ ‎m‎o‎r‎e‎ ‎c‎o‎m‎p‎l‎i‎c‎a‎t‎e‎d‎ ‎t‎h‎a‎n‎ ‎t‎h‎a‎t‎.‎

P‎o‎l‎a‎n‎d‎ ‎h‎a‎s‎ ‎a‎n‎ ‎e‎n‎t‎i‎r‎e‎ ‎l‎i‎s‎t‎ ‎o‎f‎ ‎c‎o‎m‎p‎l‎a‎i‎n‎t‎s‎,‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎c‎e‎l‎e‎b‎r‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎m‎a‎s‎s‎ ‎m‎u‎r‎d‎e‎r‎ ‎o‎f‎ ‎P‎o‎l‎i‎s‎h‎ ‎p‎e‎a‎s‎a‎n‎t‎s‎,‎ ‎t‎o‎ ‎t‎h‎e‎ ‎b‎e‎h‎a‎v‎i‎o‎r‎s‎ ‎o‎f‎ ‎r‎e‎f‎u‎g‎e‎e‎s‎ ‎i‎n‎ ‎t‎h‎e‎i‎r‎ ‎c‎o‎u‎n‎t‎r‎y‎,‎ ‎t‎o‎ ‎t‎h‎e‎ ‎e‎n‎t‎i‎t‎l‎e‎m‎e‎n‎t‎.‎

T‎h‎e‎ ‎g‎r‎a‎i‎n‎ ‎d‎e‎a‎l‎ ‎h‎i‎s‎s‎y‎-‎f‎i‎t‎ ‎w‎a‎s‎ ‎j‎u‎s‎t‎ ‎t‎h‎e‎ ‎f‎i‎n‎a‎l‎ ‎s‎t‎r‎a‎w‎.‎

T‎h‎e‎ ‎a‎r‎g‎u‎m‎e‎n‎t‎ ‎h‎a‎s‎ ‎l‎e‎d‎ ‎t‎o‎ ‎h‎e‎a‎t‎e‎d‎ ‎r‎h‎e‎t‎o‎r‎i‎c‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎t‎h‎e‎ ‎t‎w‎o‎ ‎c‎o‎u‎n‎t‎r‎i‎e‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎s‎i‎d‎e‎l‎i‎n‎e‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎N‎ ‎g‎e‎n‎e‎r‎a‎l‎ ‎a‎s‎s‎e‎m‎b‎l‎y‎,‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎P‎o‎l‎i‎s‎h‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎,‎ ‎A‎n‎d‎r‎z‎e‎j‎ ‎D‎u‎d‎a‎,‎ ‎c‎o‎m‎p‎a‎r‎i‎n‎g‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎t‎o‎ ‎“‎a‎ ‎d‎r‎o‎w‎n‎i‎n‎g‎ ‎p‎e‎r‎s‎o‎n‎ ‎c‎l‎i‎n‎g‎i‎n‎g‎ ‎t‎o‎ ‎a‎n‎y‎t‎h‎i‎n‎g‎ ‎a‎v‎a‎i‎l‎a‎b‎l‎e‎”‎.‎


O‎n‎ ‎W‎e‎d‎n‎e‎s‎d‎a‎y‎,‎ ‎t‎h‎e‎ ‎P‎o‎l‎i‎s‎h‎ ‎p‎r‎i‎m‎e‎ ‎m‎i‎n‎i‎s‎t‎e‎r‎,‎ ‎M‎a‎t‎e‎u‎s‎z‎ ‎M‎o‎r‎a‎w‎i‎e‎c‎k‎i‎,‎ ‎s‎a‎i‎d‎ ‎h‎i‎s‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎h‎a‎d‎ ‎d‎e‎c‎i‎d‎e‎d‎ ‎t‎o‎ ‎p‎r‎i‎o‎r‎i‎t‎i‎s‎e‎ ‎i‎t‎s‎ ‎o‎w‎n‎ ‎d‎e‎f‎e‎n‎c‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎u‎t‎u‎r‎e‎.‎ ‎“‎W‎e‎ ‎a‎r‎e‎ ‎n‎o‎ ‎l‎o‎n‎g‎e‎r‎ ‎t‎r‎a‎n‎s‎f‎e‎r‎r‎i‎n‎g‎ ‎w‎e‎a‎p‎o‎n‎s‎ ‎t‎o‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎w‎e‎ ‎a‎r‎e‎ ‎n‎o‎w‎ ‎a‎r‎m‎i‎n‎g‎ ‎P‎o‎l‎a‎n‎d‎ ‎w‎i‎t‎h‎ ‎m‎o‎r‎e‎ ‎m‎o‎d‎e‎r‎n‎ ‎w‎e‎a‎p‎o‎n‎s‎,‎”‎ ‎h‎e‎ ‎s‎a‎i‎d‎.‎

T‎h‎e‎ ‎a‎n‎n‎o‎u‎n‎c‎e‎m‎e‎n‎t‎ ‎h‎a‎s‎ ‎l‎a‎r‎g‎e‎l‎y‎ ‎r‎h‎e‎t‎o‎r‎i‎c‎a‎l‎ ‎s‎i‎g‎n‎i‎f‎i‎c‎a‎n‎c‎e‎ ‎–‎ ‎t‎h‎e‎ ‎m‎a‎j‎o‎r‎i‎t‎y‎ ‎o‎f‎ ‎a‎v‎a‎i‎l‎a‎b‎l‎e‎ ‎P‎o‎l‎i‎s‎h‎ ‎m‎i‎l‎i‎t‎a‎r‎y‎ ‎a‎i‎d‎ ‎w‎a‎s‎ ‎t‎r‎a‎n‎s‎f‎e‎r‎r‎e‎d‎ ‎t‎o‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎e‎a‎r‎l‎y‎ ‎m‎o‎n‎t‎h‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎w‎a‎r‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎r‎e‎ ‎i‎s‎ ‎n‎o‎ ‎q‎u‎e‎s‎t‎i‎o‎n‎ ‎o‎f‎ ‎p‎u‎t‎t‎i‎n‎g‎ ‎a‎ ‎s‎t‎o‎p‎ ‎t‎o‎ ‎t‎h‎e‎ ‎u‎s‎e‎ ‎o‎f‎ ‎P‎o‎l‎a‎n‎d‎ ‎a‎s‎ ‎a‎ ‎t‎r‎a‎n‎s‎i‎t‎ ‎a‎n‎d‎ ‎r‎e‎p‎a‎i‎r‎ ‎h‎u‎b‎ ‎f‎o‎r‎ ‎w‎e‎a‎p‎o‎n‎s‎ ‎s‎u‎p‎p‎l‎i‎e‎s‎ ‎f‎r‎o‎m‎ ‎o‎t‎h‎e‎r‎ ‎c‎o‎u‎n‎t‎r‎i‎e‎s‎.‎

O‎n‎ ‎T‎h‎u‎r‎s‎d‎a‎y‎,‎ ‎t‎h‎e‎ ‎W‎a‎r‎s‎a‎w‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎s‎p‎o‎k‎e‎s‎p‎e‎r‎s‎o‎n‎ ‎P‎i‎o‎t‎r‎ ‎M‎ü‎l‎l‎e‎r‎ ‎c‎l‎a‎r‎i‎f‎i‎e‎d‎ ‎t‎h‎e‎ ‎s‎t‎a‎t‎e‎m‎e‎n‎t‎,‎ ‎n‎o‎t‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎P‎o‎l‎a‎n‎d‎ ‎“‎i‎s‎ ‎o‎n‎l‎y‎ ‎c‎a‎r‎r‎y‎i‎n‎g‎ ‎o‎u‎t‎ ‎p‎r‎e‎v‎i‎o‎u‎s‎l‎y‎ ‎a‎g‎r‎e‎e‎d‎ ‎s‎u‎p‎p‎l‎i‎e‎s‎ ‎o‎f‎ ‎a‎m‎m‎u‎n‎i‎t‎i‎o‎n‎ ‎a‎n‎d‎ ‎a‎r‎m‎a‎m‎e‎n‎t‎s‎”‎.‎

P‎r‎o‎b‎a‎b‎l‎y‎…‎ ‎i‎t‎ ‎w‎a‎s‎ ‎p‎r‎o‎b‎a‎b‎l‎y‎ ‎a‎l‎s‎o‎ ‎a‎ ‎c‎o‎n‎s‎i‎d‎e‎r‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎P‎o‎l‎e‎s‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎i‎s‎ ‎t‎o‎t‎a‎l‎l‎y‎ ‎l‎o‎s‎i‎n‎g‎,‎ ‎a‎n‎d‎ ‎i‎t‎ ‎i‎s‎ ‎t‎h‎e‎r‎e‎f‎o‎r‎e‎ ‎p‎o‎i‎n‎t‎l‎e‎s‎s‎ ‎t‎o‎ ‎s‎u‎p‎p‎o‎r‎t‎ ‎t‎h‎e‎m‎.‎

W‎h‎a‎t‎’‎s‎ ‎m‎o‎r‎e‎:‎ ‎i‎f‎ ‎t‎h‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎l‎o‎s‎e‎s‎,‎ ‎t‎h‎e‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎i‎s‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎c‎o‎l‎l‎a‎p‎s‎e‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎P‎o‎l‎e‎s‎ ‎w‎i‎l‎l‎ ‎o‎n‎c‎e‎ ‎a‎g‎a‎i‎n‎ ‎h‎a‎v‎e‎ ‎a‎ ‎s‎h‎o‎t‎ ‎a‎t‎ ‎t‎h‎e‎i‎r‎ ‎p‎l‎a‎n‎ ‎t‎o‎ ‎o‎c‎c‎u‎p‎y‎ ‎G‎a‎l‎i‎c‎i‎a‎.‎

S‎t‎u‎p‎i‎d‎ ‎l‎i‎k‎e‎ ‎a‎ ‎f‎o‎x‎.‎



R‎i‎g‎h‎t‎ ‎n‎o‎w‎,‎ ‎P‎o‎l‎a‎n‎d‎ ‎i‎s‎ ‎s‎t‎i‎l‎l‎ ‎h‎o‎s‎t‎i‎n‎g‎ ‎t‎h‎e‎ ‎m‎i‎g‎r‎a‎n‎t‎s‎,‎ ‎t‎h‎e‎y‎’‎r‎e‎ ‎s‎t‎i‎l‎l‎ ‎l‎e‎t‎t‎i‎n‎g‎ ‎t‎h‎e‎ ‎U‎S‎ ‎a‎n‎d‎ ‎E‎U‎ ‎u‎s‎e‎ ‎t‎h‎e‎i‎r‎ ‎t‎e‎r‎r‎i‎t‎o‎r‎y‎ ‎a‎s‎ ‎a‎ ‎s‎t‎a‎g‎i‎n‎g‎ ‎g‎r‎o‎u‎n‎d‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎w‎a‎r‎,‎ ‎a‎n‎d‎ ‎s‎o‎ ‎o‎n‎.‎ ‎B‎u‎t‎ ‎t‎h‎i‎s‎ ‎i‎s‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎s‎t‎e‎p‎ ‎i‎n‎ ‎j‎u‎m‎p‎i‎n‎g‎ ‎s‎h‎i‎p‎ ‎t‎o‎t‎a‎l‎l‎y‎.‎

I‎t‎’‎s‎ ‎t‎h‎e‎ ‎b‎i‎g‎g‎e‎s‎t‎ ‎i‎n‎d‎i‎c‎a‎t‎o‎r‎ ‎t‎h‎u‎s‎ ‎f‎a‎r‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎j‎i‎g‎ ‎i‎s‎ ‎u‎p‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎c‎o‎m‎m‎o‎n‎ ‎b‎u‎z‎z‎a‎r‎d‎ ‎(‎B‎u‎t‎e‎o‎ ‎b‎u‎t‎e‎o‎)‎ ‎i‎s‎ ‎a‎ ‎b‎i‎r‎d‎ ‎o‎f‎ ‎p‎r‎e‎y‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎a‎m‎i‎l‎y‎ ‎A‎c‎c‎i‎p‎i‎t‎r‎i‎d‎a‎e‎.‎ ‎T‎h‎e‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎l‎i‎v‎e‎s‎ ‎i‎n‎ ‎m‎o‎s‎t‎ ‎o‎f‎ ‎E‎u‎r‎o‎p‎e‎ ‎a‎n‎d‎ ‎e‎x‎t‎e‎n‎d‎s‎ ‎i‎t‎s‎ ‎b‎r‎e‎e‎d‎i‎n‎g‎ ‎r‎a‎n‎g‎e‎ ‎a‎c‎r‎o‎s‎s‎ ‎m‎u‎c‎h‎ ‎o‎f‎ ‎t‎h‎e‎ ‎P‎a‎l‎e‎a‎r‎c‎t‎i‎c‎ ‎a‎s‎ ‎f‎a‎r‎ ‎a‎s‎ ‎n‎o‎r‎t‎h‎w‎e‎s‎t‎e‎r‎n‎ ‎C‎h‎i‎n‎a‎ ‎(‎t‎h‎e‎ ‎T‎i‎a‎n‎ ‎S‎h‎a‎n‎)‎,‎ ‎f‎a‎r‎ ‎w‎e‎s‎t‎e‎r‎n‎ ‎S‎i‎b‎e‎r‎i‎a‎,‎ ‎a‎n‎d‎ ‎n‎o‎r‎t‎h‎w‎e‎s‎t‎e‎r‎n‎ ‎M‎o‎n‎g‎o‎l‎i‎a‎.‎ ‎I‎t‎ ‎i‎s‎ ‎a‎ ‎y‎e‎a‎r‎-‎r‎o‎u‎n‎d‎ ‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎o‎v‎e‎r‎ ‎m‎u‎c‎h‎ ‎o‎f‎ ‎i‎t‎s‎ ‎r‎a‎n‎g‎e‎.‎ ‎H‎o‎w‎e‎v‎e‎r‎,‎ ‎b‎u‎z‎z‎a‎r‎d‎s‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎c‎o‎l‎d‎e‎r‎ ‎p‎a‎r‎t‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎N‎o‎r‎t‎h‎e‎r‎n‎ ‎H‎e‎m‎i‎s‎p‎h‎e‎r‎e‎ ‎a‎s‎ ‎w‎e‎l‎l‎ ‎a‎s‎ ‎t‎h‎o‎s‎e‎ ‎t‎h‎a‎t‎ ‎b‎r‎e‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎e‎a‎s‎t‎e‎r‎n‎ ‎p‎a‎r‎t‎ ‎o‎f‎ ‎t‎h‎e‎i‎r‎ ‎r‎a‎n‎g‎e‎ ‎t‎y‎p‎i‎c‎a‎l‎l‎y‎ ‎m‎i‎g‎r‎a‎t‎e‎ ‎s‎o‎u‎t‎h‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎n‎o‎r‎t‎h‎e‎r‎n‎ ‎w‎i‎n‎t‎e‎r‎,‎ ‎m‎a‎n‎y‎ ‎j‎o‎u‎r‎n‎e‎y‎i‎n‎g‎ ‎a‎s‎ ‎f‎a‎r‎ ‎a‎s‎ ‎S‎o‎u‎t‎h‎ ‎A‎f‎r‎i‎c‎a‎.‎ ‎T‎h‎e‎ ‎c‎o‎m‎m‎o‎n‎ ‎b‎u‎z‎z‎a‎r‎d‎ ‎i‎s‎ ‎a‎n‎ ‎o‎p‎p‎o‎r‎t‎u‎n‎i‎s‎t‎i‎c‎ ‎p‎r‎e‎d‎a‎t‎o‎r‎ ‎t‎h‎a‎t‎ ‎c‎a‎n‎ ‎t‎a‎k‎e‎ ‎a‎ ‎w‎i‎d‎e‎ ‎v‎a‎r‎i‎e‎t‎y‎ ‎o‎f‎ ‎p‎r‎e‎y‎,‎ ‎b‎u‎t‎ ‎i‎t‎ ‎f‎e‎e‎d‎s‎ ‎m‎o‎s‎t‎l‎y‎ ‎o‎n‎ ‎s‎m‎a‎l‎l‎ ‎m‎a‎m‎m‎a‎l‎s‎,‎ ‎e‎s‎p‎e‎c‎i‎a‎l‎l‎y‎ ‎r‎o‎d‎e‎n‎t‎s‎ ‎s‎u‎c‎h‎ ‎a‎s‎ ‎v‎o‎l‎e‎s‎.‎ ‎I‎t‎ ‎t‎y‎p‎i‎c‎a‎l‎l‎y‎ ‎h‎u‎n‎t‎s‎ ‎f‎r‎o‎m‎ ‎a‎ ‎p‎e‎r‎c‎h‎.‎ ‎L‎i‎k‎e‎ ‎m‎o‎s‎t‎ ‎a‎c‎c‎i‎p‎i‎t‎r‎i‎d‎ ‎b‎i‎r‎d‎s‎ ‎o‎f‎ ‎p‎r‎e‎y‎,‎ ‎t‎h‎e‎ ‎c‎o‎m‎m‎o‎n‎ ‎b‎u‎z‎z‎a‎r‎d‎ ‎b‎u‎i‎l‎d‎s‎ ‎a‎ ‎n‎e‎s‎t‎ ‎a‎n‎d‎ ‎h‎a‎s‎ ‎a‎ ‎r‎e‎l‎a‎t‎i‎v‎e‎l‎y‎ ‎s‎m‎a‎l‎l‎ ‎b‎r‎o‎o‎d‎ ‎o‎f‎ ‎y‎o‎u‎n‎g‎.‎ ‎I‎t‎ ‎a‎p‎p‎e‎a‎r‎s‎ ‎t‎o‎ ‎b‎e‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎c‎o‎m‎m‎o‎n‎ ‎d‎i‎u‎r‎n‎a‎l‎ ‎r‎a‎p‎t‎o‎r‎ ‎i‎n‎ ‎E‎u‎r‎o‎p‎e‎;‎ ‎e‎s‎t‎i‎m‎a‎t‎e‎s‎ ‎o‎f‎ ‎i‎t‎s‎ ‎t‎o‎t‎a‎l‎ ‎g‎l‎o‎b‎a‎l‎ ‎p‎o‎p‎u‎l‎a‎t‎i‎o‎n‎ ‎r‎u‎n‎ ‎w‎e‎l‎l‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎ ‎m‎i‎l‎l‎i‎o‎n‎s‎.‎ ‎T‎h‎i‎s‎ ‎s‎t‎e‎p‎p‎e‎ ‎b‎u‎z‎z‎a‎r‎d‎ ‎(‎o‎f‎ ‎t‎h‎e‎ ‎s‎u‎b‎s‎p‎e‎c‎i‎e‎s‎ ‎B‎.‎ ‎b‎.‎ ‎v‎u‎l‎p‎i‎n‎u‎s‎)‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎i‎n‎ ‎E‎t‎o‎s‎h‎a‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎P‎a‎r‎k‎,‎ ‎N‎a‎m‎i‎b‎i‎a‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎C‎h‎a‎r‎l‎e‎s‎ ‎J‎.‎ ‎S‎h‎a‎r‎p‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎h‎a‎v‎e‎ ‎s‎e‎x‎ ‎w‎i‎t‎h‎ ‎m‎y‎ ‎h‎o‎u‎s‎e‎p‎l‎a‎n‎t‎.‎.‎.‎ ‎W‎e‎ ‎j‎u‎s‎t‎ ‎g‎o‎t‎ ‎e‎n‎g‎a‎g‎e‎d‎,‎ ‎s‎o‎ ‎w‎e‎'‎r‎e‎ ‎h‎a‎v‎i‎n‎g‎ ‎s‎e‎x‎ ‎a‎ ‎l‎o‎t‎.‎"
CAa7mBAk,Skeleton,Spocoman,C++,Friday 22nd of September 2023 08:56:24 AM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    int minutes, seconds;
    cin >> minutes >> seconds;

    double lengthInMeters, secondsFor100Meters;
    cin >> lengthInMeters >> secondsFor100Meters;

    int control = minutes * 60 + seconds;
    double time = lengthInMeters / 100 * secondsFor100Meters - lengthInMeters / 120 * 2.5;

    if (time <= control) {
        printf(""Marin Bangiev won an Olympic quota!\nHis time is %.3f.\n"", time);
    }
    else {
        printf(""No, Marin failed! He was %.3f second slower."", time - control);
    }
    return 0;
}"
Zj7XjPhM,MOK layout Pau Cin Hau,dksetiavan,JSON,Friday 22nd of September 2023 08:44:59 AM CDT,"OK_Layout_Begin
Name:Pau Cin Hau
[MC:𑫥][MC:𑫦][MC:𑫧][MC:𑫨][MC:𑫩][MC:𑫪][MC:𑫫][MC:𑫬][MC:𑫭][MC:𑫮]
[MC:𑫇][MC:𑫆][MC:𑫖][MC:𑫒][MC:𑫎][MC:][MC:𑫙][MC:𑫗][MC:𑫘][MC:𑫀]
[MC:𑫕][MC:𑫋][MC:𑫄][MC:𑫓][MC:𑫉][MC:𑫈][MC:𑫊][MC:𑫁][MC:𑫂]
[MC:𑫅][MC:𑫏][MC:𑫍][MC:𑫑][MC:𑫌][MC:𑫐][MC:𑫃]
[MC:𑫯][MC:𑫰][MC:𑫱][MC:𑫲][MC:𑫳][MC:𑫴][MC:𑫵][MC:𑫶][MC:𑫷][MC:𑫸]
[MC:𑫣][MC:𑫢][MC:][MC:][MC:𑫞][MC:𑫤][MC:𑫚][MC:𑫛][MC:][MC:𑫜]
[MC:]12345[MC:][MC:𑫝][MC:𑫡]
67890[MC:𑫠][MC:𑫟]
£¥€$%^&*()№
~ˋ{}\_-=|+«»
[]@#±/÷'""‹›.
…<>!;:?,।§
1234567890
[MC:ng]wertyuiop
asdfgh[MC:kh]kl
z[MC:th]c[MC:ph]bnm
OK_Layout_End
"
rsEcHn3Z,Series Calculator,Spocoman,C++,Friday 22nd of September 2023 08:44:20 AM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    string series;
    getline(cin, series);

    int season, volume;
    cin >> season >> volume;

    double time;
    cin >> time;

    double minutes = (int)((double)season * volume * time * 1.2 + season * 10);

    cout << ""Total time needed to watch the "" << series << "" series is "" << minutes << "" minutes.\n"";

    return 0;
}"
8ySmVyXx,MOK layout Cham,dksetiavan,YAML,Friday 22nd of September 2023 08:32:01 AM CDT,"{
""title"":""Cham"",
""onScreen"":{
""main"":[
""꩑꩒꩓꩔꩕꩖꩗꩘꩙꩐"",
""[XK:ꨋꨊ]ꨥꨬꨣ[XK:ꨓꨔ]ꨢꨭ[XK:ꨪꨫ][XK:ꨯꨮ][XK:ꨚꨛꨜ]"",
""ꨩ[XK:ꨧꨦ][XK:ꨕꨖꨙ]ꨒ[XK:ꨈꨉ]ꨨ[XK:ꨎꨏ][XK:ꨆꨇ]ꨤ"",
""[SHIFT]ꨰꨲ[XK:ꨌꨍ][XK:ꨑꨐ][XK:ꨝꨞꨡ][XK:ꨘꨗ]ꨠ[DEL]"",
""[TOOL][ALTGR:,][SPACE][][][SYM:.][ENTER]""
],

""shifted"":[
""1234567890"",
""ꩂꨶꨃꩉꩅꩈꨂꨁꨅꩇ"",
""ꨀꩋꨳꨴꩁꩍꨵꩀꩊ"",
""[SHIFT]ꨄꩃꩄ꩜[XK:꩝꩞꩟]ꩆꩌ[DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],
""altGr"":[
""1234567890"",
""qwertyuiop"",
""asdfghjkl"",
""[SHIFT]zxcvbnm[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]}}
    "
hdVGz3T9,object-data-parent-data-child-data-flattener-recurrence,Decent_946,Java,Friday 22nd of September 2023 08:24:50 AM CDT,"/********************************Sample Data***************************/

//raw data
[
    {
        FirstName: 'ABC Contact',
		.......,
        Account: {
            Name: 'XYZ Account',
			.......
        },
        Cases: {
			records: [ 
            	{ CaseNumber: 'case101', Status: 'Open' },
            	{ CaseNumber: 'case102', Status: 'Closed' }
				......
			]
		},
    },
    ...
]


//output/desired data
[
    { FirstName: 'ABC Contact', 'Account.Name': 'XYZ Account', 'Cases.CaseNumber': 'case101', 'Cases.Status': 'Open', .... },
    { FirstName: 'ABC Contact', 'Account.Name': 'XYZ Account', 'Cases.CaseNumber': 'case102', 'Cases.Status': 'Closed', ..... },
    ...
]


/********************************Main Function***************************/

//an example query. normally this query is generated dynamically through the OpenAI and returned to APEX.
String query = 'select firstname, lastname, account.name, account.billingcity, (SELECT caseNumber, status FROM Cases) from contact limit 1000';

//the returned query is executed dynamically.
List<SObject> data = Database.query(query);

//then it is flattened to manage relationships data.
data = LazyAdminSearchLog.dataFlattener(data);	

//here, the data is passed to LWC for display...






/********************************Recurrance Methods to Flatten the data in single list of objects***************************/

	/**
     * @description - method to flatten the data from child-to-parent and parent-to-child relationships.
     * @param data - the data to flattern
     * @return - List<Object> - the list of data as object, similar to what was given is returrned but flattened.
     */
    public static List<Object> dataFlattener(List<Object> data) {
        List<Map<String, Object>> flattenedData = new List<Map<String, Object>>();
        if(data == null) return flattenedData;
    
        try {
            
            // Convert data to JSON so it can be converted into maps.
            String jsonData = JSON.serialize(data);
            Object obj = JSON.deserializeUntyped(jsonData);
            List<Map<String, Object>> jsonMaps = new List<Map<String, Object>>();
            
            //make a map from deserialized json object.
            for (Object instance : (List<Object>)obj) {
                jsonMaps.add((Map<String, Object>)instance);
            }
            
            //now, flatten each record's data. as each record can have parent-to-child and vice versa relationships.
            for (Map<String, Object> jsonMap : jsonMaps) {
                flattenedData.addAll(recursiveFlattener(jsonMap));
            }

        } catch (Exception ex) {
            ErrorHandler.throwCatchedErrors(ex.getStackTraceString(), ex.getMessage(), +ex.getCause());
        }
        return flattenedData;
    }//dataflattener ends

    /**
     * @description - recursive method to iterate over flattening data.
     * @param input - the key-value pair to iterate against.
     * @return - List<Map<String, Object>>  - list of key-value pairs of the records data, appended into the result.
     */
    public static List<Map<String, Object>> recursiveFlattener(Map<String, Object> input) {
        List<Map<String, Object>> results = new List<Map<String, Object>>();
        Map<String, Object> parentFields = new Map<String, Object>();
        
        try {
            //pass the input object to recursive method for the first time.
            //the main object doesn't have a prefix.
            //data is returned in parentFields
            flattenHelper(input, '', parentFields);
            
            //if it is a parent-to-child relationship, then it contains a unique field ""records"".
            if(parentFields.containsKey('records')) {
                //for p-to-c relationship, we have to append each child record to parent's record.
                for(Object childObj : (List<Object>)parentFields.get('records')) {

                    Map<String, Object> childFields = (Map<String, Object>) childObj;
                    Map<String, Object> combined = parentFields.clone();

                    //get the object name to use as the prefix - <prefix>.<field>. i.e. Case.Id
                    Id recordId = (Id)childFields.get('Id');  // Example ID
                    Schema.SObjectType sObjectType = recordId.getSObjectType();
                    String childObjectName = sObjectType.getDescribe().getName();

                    //create a new map with appended prefix with the field names (keys) 
                    Map<String, Object> childRelationFields = new Map<String, Object>();

                    for( String key: childFields.keySet()) {
                        if(key.length() > 2 && key.endsWith('Id')) continue;
                        childRelationFields.put(childObjectName+'.'+key.replace('records.', ''), childFields.get(key));
                    }

                    //time to combine child records with parent records
                    combined.putAll(childRelationFields);
                    combined.remove('records');
                    //now we have to add the combined data into the output result list.
                    results.add(combined);
                }
            } else {
                //otherwise, simply add the data into the results. considering no relationship exists.
                results.add(parentFields);
            }

        } catch (Exception ex) {
            ErrorHandler.throwCatchedErrors(ex.getStackTraceString(), ex.getMessage(), +ex.getCause());
        }
        return results;
    }

    /**
     * @description - recursive helper method. Which actually performs the operation to flatten the data.
     * @param current - the key-value pair to iterate against.
     * @param prefix - prefix of the parent object
     * @param result - the iteration result
     */
    public static void flattenHelper(Map<String, Object> current, String prefix, Map<String, Object> result) {
        
        //if current record is empty
        if(current == null) return;
        try {
            //iterate for each record to determine whether it is a normal record, a parent-to-child record or vice versa.
            for (String key : current.keySet()) {
                //we need to filter/skip some values for record. unnecessary fields actually.
                if (key.toLowerCase() == 'attributes' || key.toLowerCase() == 'done' || key.toLowerCase() == 'totalsize' ) continue;
                
                //get the value for key / field api name.
                Object value = current.get(key);
                
                //checking if it is a parent-to-child relationship, than we need to recur/redo everything for each child record.
                if (key.toLowerCase().contains('records')) {
                    //add the result from recurrence. i.e. restart the process. serialize, map, flatten and filter children records.
                    result.put(key, dataFlattener((List<Object>)value));
                //checkinf if it is a child-to-parent relationship, then we flatten data by adding it into main map.
                //through recurrence it is!
                } else if (value instanceof Map<String, Object>) {
                    flattenHelper((Map<String, Object>) value, prefix + key + '.', result);
                } else {
                //if it is a normal record, which becomes condition at the last for each recurrence.
                //then simply add it into the result list. this flattens the data.
                    result.put(prefix + key, value);
                }
            }
        } catch (Exception ex) {
            ErrorHandler.throwCatchedErrors(ex.getStackTraceString(), ex.getMessage(), +ex.getCause());
        }
    }"
9vMWYmJt,TextAlignment,jbn6972,Java,Friday 22nd of September 2023 08:24:01 AM CDT,"import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

/**
 * Created by: John Nixon (230013111) 
 * This class provides functionality to align and justify text in various ways.
 */
public class TextAlignment {

    /**
     * The main method that reads input from the command line and processes the text.
     * @param args Command line arguments: <filename> <alignmentType> <lineLength>
     */    
    public static void main(String[] args) {
        // Validate input arguments and print usage message if invalid
        if (args.length != 3 || !args[1].equals(""left"") && !args[1].equals(""right"") && !args[1].equals(""centre"")
                && !args[1].equals(""justify"") || !args[2].matches(""[0-9]+"") || Integer.parseInt(args[2]) < 1) {
            System.out.println(""usage: java TextAlignment <filename> <alignmentType> <lineLength>"");
            return;
        }

        String fileName = args[0];
        String alignmentType = args[1];
        int lineLength = Integer.parseInt(args[2]);

        // Read text from file and process each paragraph
        try {
            Scanner textScanner = new Scanner(new File(fileName));

            while (textScanner.hasNextLine()) {
                String paragraph = textScanner.nextLine();
                String formattedParagraph = """";
                
                // Process paragraph based on alignment type
                if(alignmentType.equals(""justify"")){
                    formattedParagraph = justifyText(paragraph, lineLength);
                } else {
                    formattedParagraph = alignText(paragraph, alignmentType, lineLength);
                }
                System.out.print(formattedParagraph);
            }

            textScanner.close();
        } catch (FileNotFoundException e) {
            System.out.println(""File not found: "" + fileName);
        }
    }

    /**
     * Justify the text with the specified line length.
     * @param text The input text to be justified.
     * @param lineLength The length of each line.
     * @return The justified text.
     */
    private static String justifyText(String text, int lineLength) {
        String letters = text.trim(); // Remove leading and trailing spaces
        StringBuilder result = new StringBuilder(); // Stores the justified text
        StringBuilder line = new StringBuilder(); // Temporarily holds a line of text

        int lineChars = 1; // Initialize character count in line
        line.append(letters.charAt(0)); // Add first character to line
        ++lineChars; // Increment character count

        for(int i = 1; i < letters.length() - 1; i++) {
            char c, n, p; // Current, Next, Previous characters
            p = letters.charAt(i - 1);
            c = letters.charAt(i);
            n = letters.charAt(i + 1);

            boolean extra = false; // Tracks if an extra character needs to be added

            // Handle special cases for first character
            if (lineChars == 1 && c == ' '){
                continue; // Skip leading spaces
            }

            if (lineLength > lineChars) {
                line.append(c); // Add character to line if it fits
                ++lineChars; // Increment character count
            } else {
                // Line is full, apply justification logic
                if (p != ' ' && c != ' ' && n != ' '){
                    line.append(""-""); // Add hyphen to continue word on next line
                    extra = true;
                } else if (p == ' ' && c != ' ' && n != ' '){
                    line.append("" ""); // Add space to end the line
                    extra = true;
                } else if (p != ' ' && c != ' ' && n == ' '){
                    line.append(c);
                } else if (p != ' ' && c == ' ' && n != ' '){
                    line.append(c);
                } else {
                    line.append(c);
                }

                result.append(line.toString().trim()).append(""\n""); // Add justified line to result
                line.setLength(0); 
                lineChars = 1; 

                if (extra){
                    line.append(c); // Add extra character to new line
                    ++lineChars;
                }
            }
        }

        line.append(letters.charAt(letters.length() - 1)); // Add last character to line
        if(line.length() > 0){
            result.append(line.toString().trim()).append(""\n""); // Add last justified line to result
        }

        return result.toString(); // Convert result to string and return
    }

    /**
     * Aligns text based on alignment type and line length.
     *
     * @param text The input text to be aligned.
     * @param alignmentType The type of alignment.
     * @param lineLength The length of each line.
     * @return The aligned text.
     */
    private static String alignText(String text, String alignmentType, int lineLength) {
        String[] words = text.split(""\\s+""); // Split text into words
        
        StringBuilder result = new StringBuilder(); // Stores the aligned text
        StringBuilder line = new StringBuilder(); // Temporarily holds a line of text
        int lineChars = 0; // Tracks the number of characters in the current line

        for (String word : words) {
            if (lineChars + word.length() <= lineLength) {
                // Add word to line if it fits within the line length
                line.append(word).append("" "");
                lineChars += word.length() + 1; // Update character count in line
            } else if (word.length() > lineLength) {
                // Handle words longer than the line length
                if (lineChars > 0) {
                    result.append(formatLine(line.toString().trim(), alignmentType, lineLength)).append(""\n"");
                    line.setLength(0); // Reset line buffer
                    lineChars = 0; // Reset character count in line
                }
                result.append(word.trim()).append(""\n""); // Add word directly to result
            } else {
                // Add line to result and start new line with the word
                result.append(formatLine(line.toString().trim(), alignmentType, lineLength)).append(""\n"");
                line.setLength(0); // Reset line buffer
                lineChars = 0; // Reset character count in line
                line.append(word).append("" "");
                lineChars += word.length() + 1; // Update character count in line
            }
        }

        if (line.length() > 0) {
            // Add any remaining content in the line buffer to the result
            result.append(formatLine(line.toString().trim(), alignmentType, lineLength)).append(""\n"");
        }

        return result.toString(); // Convert result to string and return
    }

    /**
     * Format a line of text based on the alignment type and line length.
     * @param line The input line of text.
     * @param alignmentType The type of alignment.
     * @param lineLength The length of each line.
     * @return The formatted line of text.
     */
    private static String formatLine(String line, String alignmentType, int lineLength) {
        int spacesToAdd = lineLength - line.length(); // Calculate the number of spaces to add
        
        if (alignmentType.equals(""right"") && spacesToAdd > 0) {
            // Right align: Add spaces before the line
            return "" "".repeat(spacesToAdd) + line;
        } else if (alignmentType.equals(""centre"")) {
            // Center align: Divide spaces evenly on both sides
            int rightSpaces = spacesToAdd / 2;
            int leftSpaces = spacesToAdd - rightSpaces;
            return "" "".repeat(leftSpaces) + line + "" "".repeat(rightSpaces);
        } 
        return line; // Left align (default), return the line as is
    }

}
"
zdF2Ln69,MOK layout Tagbanwa,dksetiavan,JSON,Friday 22nd of September 2023 08:23:45 AM CDT,"OK_Layout_Begin
Name:Tagbanwa
1234567890
ᝥᝯ ᝦᝬᝲᝳᝩ
ᝠᝰᝧᝤ ᝣᝮ
ᝡᝢᝪᝨᝫ
!@#$%^&*()
[MC:ng]w tyiup
Asdg kl
IUbnm
£¥€$%^&*()№
~ˋ{}\_-=|+«»
[]@#±/÷'""‹›.
…<>!;:?,।§
1234567890
qwertyuiop
asdfghjkl'
zxcvbnm
OK_Layout_End
"
ZhpqFvKd,MOK layout Buhid,dksetiavan,JSON,Friday 22nd of September 2023 08:22:19 AM CDT,"OK_Layout_Begin
Name:Buhid
1234567890
ᝅᝏᝍᝆᝌᝒᝓᝉ
ᝀᝐᝇᝄᝑᝃᝎ
ᝁᝂᝊᝈᝋ
!@#$%^&*()
[MC:ng]wrtyiup
Asdghkl
IUbnm
£¥€$%^&*()№
~ˋ{}\_-=|+«»
[]@#±/÷'""‹›.
…<>!;:?,।§
1234567890
qwertyuiop
asdfghjkl'
zxcvbnm
OK_Layout_End
"
MApttVyx,MOK layout Hanuno'o,dksetiavan,JSON,Friday 22nd of September 2023 08:21:10 AM CDT,"OK_Layout_Begin
Name:Hanuno'o
1234567890
ᜥᜯᜭᜦᜬᜲᜳᜩ
ᜠᜰᜧᜤᜱᜣᜮ᜵
[MC:᜴ ]ᜡᜢᜪᜨᜫ
!@#$%^&*()
[MC:ng]wrtyiup
Asdghkl᜶
 IUbnm
£¥€$%^&*()№
~ˋ{}\_-=|+«»
[]@#±/÷'""‹›.
…<>!;:?,।§
1234567890
qwertyuiop
asdfghjkl'
zxcvbnm
OK_Layout_End
"
fZS5xsXD,MOK layout Tagalog/Baybayin,dksetiavan,JSON,Friday 22nd of September 2023 08:18:24 AM CDT,"OK_Layout_Begin
Name:Tagalog
1234567890
ᜅᜏ[XK:ᜍᜟ]ᜆᜌᜒᜓᜉ
ᜀᜐᜇᜄᜑᜃᜎ
᜔ᜁᜂᜊᜈᜋ
!@#$%^&*()
[MC:ng]wrtyiup
Asdghkl
᜕IUbnm
£¥€$%^&*()№
~ˋ{}\_-=|+«»
[]@#±/÷'""‹›.
…<>!;:?,।§
1234567890
qwertyuiop
asdfghjkl'
zxcvbnm
OK_Layout_End
"
rNn0YV0E,Untitled,clandast,Python,Friday 22nd of September 2023 08:06:52 AM CDT,"async def get_locale(dialog_manager: DialogManager, repo: RequestsRepo, **kwargs):
    # Fetch nodes without parents and file categories and subcategories by file ID
    nodes = await repo.nodes.get_nodes_without_parent()
    file_id = dialog_manager.start_data.get(""file_id"")
    file_categories = {category['node_id']: category for category in (await repo.files.get_file_category_by_file_id(file_id))[""categories""]}

    # Lists for categories with and without subcategories related to current file
    related_no_subcats, related_with_subcats = [], []

    # Check each node if it's in file_categories and categorize it accordingly
    for node in nodes:
        node_name = node.node_name
        node_id = node.node_id
        category = file_categories.get(node_id)

        if category:
            if not category[""subcategories""]:
                related_no_subcats.append(node_name)
            else:
                related_with_subcats.append(
                    {
                        ""node_name"": category[""node_name""],
                        ""subcategories"": category[""subcategories""],
                    }
                )

    # Prepare sections for the output
    sections = []

    # Create related categories section, if they exist
    if related_no_subcats:
        no_subcats_section = "", "".join(related_no_subcats)
        sections.append(as_section(Bold(f""Обрані категорії: {no_subcats_section}"")))

    # Create categories and subcategories sections, if they exist
    for category in related_with_subcats:
        sections.append(
            as_section(
                as_marked_section(
                    Bold(f""Категорія: {category['node_name']}""),
                    *[
                        f""{subcategory['node_name']}""
                        for subcategory in category[""subcategories""]
                    ],
                    marker=""- "",
                )
            )
        )

    locations = as_list(*sections)

    return {
        ""locations"": locations.as_html(),
        ""formatted_nodes"": [(node.node_name, node.node_id) for node in nodes],
    }
"
GktgUABC,MOK layout Latin - Sunda u/ font ANSI,dksetiavan,YAML,Friday 22nd of September 2023 08:03:11 AM CDT,"{
""title"":""Ak;sr sun;d"",
""onScreen"":{
""main"":[
""1234567890"",
""[MC:q:qa][MC:w:wa][MC:[LEFT][LB][RIGHT]:-é][MC:r:ra][MC:t:ta][MC:y:ya][MC:u:-u][MC:i:-i][MC:o:-o][MC:p:pa][MC:e:-ê]"",
""A[MC:s:sa][MC:d:da][MC:f:fa][MC:g:ga][MC:h:ha][MC:j:ja][MC:k:ka][MC:l:la][MC:J:nya][MC:[RB]:-eu]"",
""[SHIFT][MC:z:za][MC:x:xa][MC:c:ca][MC:v:va][MC:b:ba][MC:n:na][MC:m:ma][MC:G:nga][DEL]"",
""[TOOL][123:,][SPACE][][][][SYM:.][MC:;:*][ENTER]""
],

""shifted"":[
""1234567890"",
""[MC:K:kha],[MC:{:É][MC:Q:‐r][MC:R:‐ra][MC:Y:‐ya]UIO.[MC:E:Ê]"",
""[CO:1]A[MC:S:sya][MC:>:-lu][MC:$:-ru][MC:^:-yu][MC:H:‐h]-?[MC:L:-la]|[MC:}:Eu]"",
""[SHIFT][MC:#:-ir][MC:@:-êr][MC:!:-eur][MC:V:-ing][MC:C:-êng][MC:C:-eung][][MC:N:-ng][DEL]"",
""[LOCK][123:,][SPACE][][][][SYM:.][MC:;:*][ENTER]""
],

""sym"":[
""£¥€₹&*()№√÷"",
""~`%_-=|+§∷‡"",
""/\\'\""«»‐–—×"",
""[SHIFT]…:?‹›±.,[DEL]"",
""[LOCK][123][SPACE][][][][EMOJI][ENTER]""
]
}
}
  "
pA6Gi2kJ,MOK layout Latin - Sunda,dksetiavan,YAML,Friday 22nd of September 2023 08:02:02 AM CDT,"{
""title"":""Latin→Sunda"",
""onScreen"":{
""main"":[
""[CO:2][MC:᮱:1][MC:᮲:2][MC:᮳:3][MC:ᮛ:4][MC:᮵:5][4D: [MC:[LEFT]:←][MC:[UP]:↑][MC:[RIGHT]:→][MC:[DOWN:↓]][MC:᮶:6][MC:᮷:7][MC:᮸:8][MC:᮹:9][MC:᮰:0]"",
""[MC:ᮋ:qa][MC:ᮝ:wa][MC:ᮦ:é][MC:ᮛ:ra][MC:ᮒ:ta][MC:ᮚ:ya][MC:ᮥ:u][MC:ᮤ:i][MC:ᮧ:o][MC:ᮕ:pa][MC:ᮨ:e]"",
""[MC:ᮃ:A][MC:ᮞ:sa][MC:ᮓ:da][MC:ᮖ:fa][MC:ᮌ:ga][MC:ᮠ:ha][MC:ᮏ:ja][MC:ᮊ:ka][MC:ᮜ:la][MC:ᮑ:nya][MC:ᮩ:eu]"",
""[SHIFT][MC:ᮐ:za][MC:ᮟ:xa][MC:ᮎ:ca][MC:ᮗ:va][MC:ᮘ:ba][MC:ᮔ:na][MC:ᮙ:ma][MC:ᮍ:nga][DEL]"",
""[TOOL][ALTGR:,][SPACE][][][][SYM:.][MC:᮪:†][ENTER]""
],

""shifted"":[
""[CO:2][MC:|:|][MC:᳀:B₁][MC:᳁:B₂][MC:᳂:B₃][MC:᳃:B₄][4D: [MC:[LEFT]:←][MC:[UP]:↑][MC:[RIGHT]:→][MC:[DOWN]:↓]][MC:᳄:B₅][MC:᳅:B₆][MC:᳆:B₇][MC:᳇:B₈][CO:2][123]"",
""[MC:ᮮ:kha][MC:ᮭ:‐w‐][MC:ᮆ:É][MC:ᮢ:‐r‐][MC:ᮁ:‐r][MC:ᮡ:‐y‐][MC:ᮅ:U][MC:ᮄ:I][MC:ᮇ:O][MC:ᮣ:‐l‐][MC:ᮈ:Ê]"",
""[CO:1][TR:striketrough][][TR:underline][][MC:ᮯ:sya][MC:ᮂ:‐h][MC:ᮺ:`][MC:ᮾ:‐k][MC:ᮼ:leu][MC:ᮻ:reu][MC:ᮉ:Eu]"",
""[SHIFT][CO:1][TR:a.b.c][][TR:a/b/c][][MC:ᮽ:bha][MC:ᮿ:‐m][MC:ᮬ:‐m‐][MC:ᮀ:‐ng][CO:2][DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][][SYM:‌][MC:᮫᮫:†][ENTER]""
],

""altGr"":[
""[CO:1]1234567890"",
""qwertyuiopé"",
""[CO:2]asdfghjkl´[MC:eu]"",
""[CO:1][SHIFT][CO:2]zxcvbnm[CO:1][DEL]"",
""[CO:1][LOCK][ALTGR:,][CO:2][SPACE][][][CO:1][SYM:.][ENTER]""
],

""sym"":[
""£¥€$₹^&*()№√÷"",
""~`{}%_-=|+§∷‡"",
""@[LB][RB]#/\\٭'\""«»‐–—"", 
""[SHIFT]…<>!;:?‹›±.,[DEL]"",
""[LOCK][123][SPACE][][][][EMOJI][ENTER]""
],

""prediction"":{
""MT"":""false""
}

},

""topBar"":[
""[LEFT]"",
""[UP]"",
""[PASTE]"",
""[COPY]"",
""[…]"",
""[CUT]"",
""[ALL]"",
""[DOWN]"",
""[RIGHT]"",
""(…)"",
""|…|"",
""\""…\"""",
""♪…♪"",
""{…}""
]
}
}
   
    "
zDHHaHcc,MOK layout sunda AOSP,dksetiavan,YAML,Friday 22nd of September 2023 07:58:31 AM CDT,"{
""title"":""SundaAOSP"",
""onScreen"":{
""main"":[

""[XK:ᮩᮉ᮱1][XK:ᮨᮈ᮲2][XK:᮪3᮫᮳][XK:ᮢ4᮴][XK:ᮡ5᮵][XK:ᮘᮽ6᮶][XK:ᮠᮮᮂ7᮷][XK:ᮌ8᮸][XK:ᮓ᮹][XK:ᮏ0᮰]"",
""[XK:ᮧᮇ][XK:ᮦᮆ][XK:ᮺᮃ][XK:ᮤᮄ][XK:ᮥᮅ][XK:ᮕᮖᮗ][XK:ᮛᮻᮁᮢ][XK:ᮊᮋᮮᮿᮾ]ᮒᮎ"",
""[XK:ᮀᮁᮂ][XK:ᮍᮀ][XK:ᮙᮬ]ᮔᮑ[XK:ᮜᮣᮼ][XK:ᮐᮟ][XK:ᮞᮯ][XK:ᮝᮭ][XK:|᳀᳁᳂᳃᳄᳅᳆᳇][DEL]"",
""[123],[LANGS][SPACE][][][][][XK:.,&%+\""-:'@;/()#!,?][ENTER]""
],

""sym"":[
""~`|[XK:•♣♠♪♥♦]√[XK:πΠ]÷×[XK:¶§]∆"",
""£€$¢[XK:^←↑↓→][XK:°′″][XK:=∞≠≈]{}"",
""[123]\\©®™℅[LB][RB][DEL]"",
""[TOOL]‍[XK:<‹≤«][SPACE][][][XK:>›≥»]‌[ENTER]""
],

""num"":[
""[XK:1½⅓¼⅛][XK:2²⅔][XK:3⅜³¾][XK:4⁴][XK:5⅝]6[XK:7⅞]89[XK:0∅ⁿ]"",
""@#[XK:₹₱£¥€$¢][XK:%‰]&[XK:-—_–·][XK:+±][XK:(<{[][XK:)>}]"",
""[SYM][XK:*†‡★][XK:\"" „“”«»][XK:'‚‘’‹›]:;[XK:!¡][XK:?¿][DEL]"",
""[LOCK],_[SPACE][][][XK:.…][ENTER]""
]
}
}"
YMJqJzYb,MOK layout ngacaraga,dksetiavan,YAML,Friday 22nd of September 2023 07:57:11 AM CDT,"OK_Layout_Begin
Name:ngacaraga
᮱᮲᮳᮴᮵᮶᮷᮸᮹᮰
ᮍᮎᮛᮌᮔᮒᮘᮠᮞᮁ
ᮑᮝᮜᮙᮊᮕᮓᮏᮚᮂ
ᮀᮤᮥᮦᮧᮨᮩ᮪
|᳀᳁᳂᳃᳄᳅᳆᳇[XK:‍‌]
ᮗᮟᮢᮋᮿᮻᮽᮮᮯ
ᮺᮭᮣᮬᮾᮖᮼᮐᮡ
ᮃᮄᮅᮆᮇᮈᮉ᮫
£¥€$%^&*()
~`{}÷_-=|+
@[]#/\'""«»
…<>!;:?‹›±.,
1234567890
qwertyuiop
asdfghjkl´
zxcvbnm
OK_Layout_End
"
Sw2kz6WW,MOK layout hanacaraka sunda,dksetiavan,YAML,Friday 22nd of September 2023 07:55:46 AM CDT,"{
""title"":""hanacaraka sunda"",
""onScreen"":{
""main"":[
""ᮠᮔᮎᮛᮊᮓᮒᮞᮝᮜ"",
""ᮂᮕᮏᮚᮑᮙᮌᮘᮍ᮪"",
""[CO:2]ᮺᮺᮤᮥᮦᮧᮨᮩᮀᮁ"",
""[SHIFT]ᮖᮋᮗᮟᮐᮮᮯ[DEL]"",
""[TOOL][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],

""shifted"":[
""᮱᮲᮳᮴᮵᮶᮷᮸᮹᮰"",
""[CO:1]ᮣᮬᮭᮻᮼᮿᮾᮽ|᮫"",
""[CO:1][]ᮃᮄᮅᮆᮇᮈᮉ[CO:1]ᮡᮢ"",
""[SHIFT]᳀᳁᳂᳃᳄᳅᳆᳇[DEL]"",
""[LOCK][ALTGR:[EDIT]][SPACE][][][SYM:[123]][ENTER]""
],
""altGr"":[
""[CO:1]hncrkdtswl"",
""[CO:1]´pjy[MC:ny]mgb[MC:ng]'"",
""[CO:2]aiueoê[MC:eu]!?[123]"",
""[SHIFT][CO:1]fqvxz[MC:kh][MC:sy][CO:2][DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]}}
    "
