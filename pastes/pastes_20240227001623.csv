id,title,username,language,date,content
yt5KGyei,2024-02-26_stats.json,rdp_snitch,JSON,Monday 26th of February 2024 06:15:10 PM CDT,"{
  ""ip"": {
    ""98.159.37.184"": 1,
    ""27.254.239.57"": 1,
    ""103.47.194.205"": 1,
    ""167.94.146.51"": 1,
    ""198.235.24.171"": 3,
    ""45.227.254.55"": 2,
    ""43.133.48.153"": 1,
    ""51.81.69.64"": 1,
    ""45.227.254.54"": 2,
    ""87.251.75.145"": 3,
    ""167.94.145.51"": 1,
    ""185.170.144.3"": 1,
    ""58.218.204.183"": 3,
    ""212.70.149.142"": 4,
    ""185.11.61.106"": 1,
    ""27.184.195.229"": 1,
    ""15.235.189.149"": 1,
    ""15.235.189.145"": 1,
    ""36.91.222.100"": 1,
    ""36.139.61.15"": 2,
    ""198.235.24.115"": 6,
    ""212.70.149.146"": 1,
    ""222.252.27.66"": 2,
    ""103.143.207.200"": 2,
    ""185.196.220.41"": 1,
    ""193.142.146.227"": 1,
    ""62.210.90.78"": 1,
    ""62.204.41.107"": 4,
    ""194.165.16.73"": 2,
    ""165.154.32.235"": 1,
    ""40.87.91.70"": 1,
    ""194.165.16.76"": 2,
    ""180.183.139.118"": 2,
    ""61.91.50.166"": 2,
    ""205.210.31.213"": 3,
    ""120.240.145.8"": 1,
    ""124.123.42.247"": 3,
    ""46.19.143.42"": 1,
    ""173.237.25.68"": 1,
    ""205.210.31.217"": 3,
    ""45.94.168.233"": 1
  },
  ""asn"": {
    ""AS62240"": 1,
    ""AS4750"": 1,
    ""AS140832"": 1,
    ""AS398705"": 2,
    ""AS396982"": 15,
    ""AS267784"": 4,
    ""AS132203"": 1,
    ""AS16276"": 3,
    ""AS208091"": 3,
    ""AS197414"": 1,
    ""AS4134"": 4,
    ""AS204428"": 5,
    ""AS57523"": 1,
    ""AS7713"": 1,
    ""AS56041"": 2,
    ""AS45899"": 2,
    ""AS18403"": 2,
    ""AS208046"": 2,
    ""AS12876"": 1,
    ""AS59425"": 4,
    ""AS48721"": 4,
    ""AS135377"": 1,
    ""AS8075"": 1,
    ""AS45629"": 2,
    ""AS7470"": 2,
    ""AS56040"": 1,
    ""AS55577"": 3,
    ""AS51852"": 1,
    ""AS7979"": 1,
    ""AS400810"": 1
  },
  ""isp"": {
    ""LogicWeb Inc."": 1,
    ""CS Loxinfo Public Company Limited"": 1,
    ""FTECH"": 1,
    ""Censys, Inc."": 2,
    ""Google LLC"": 15,
    ""Flyservers S.A."": 8,
    ""Aceville Pte.ltd"": 1,
    ""OVH SAS"": 1,
    ""Xhost Internet Solutions LP"": 4,
    ""Chinanet"": 4,
    ""SS-Net"": 5,
    ""Chang Way Technologies Co. Limited"": 1,
    ""OVH Singapore PTE. LTD"": 2,
    ""PT Telekomunikasi Indonesia"": 1,
    ""China Mobile Communications Corporation"": 2,
    ""VietNam Post and Telecom Corporation"": 2,
    ""Vietnam Internet Network Information Center"": 2,
    ""ColocationX Ltd."": 2,
    ""Online S.A.S."": 1,
    ""Horizon LLC"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Microsoft Corporation"": 1,
    ""Triple T Broadband Public Company Limited"": 2,
    ""True Internet Corporation CO. Ltd."": 2,
    ""China Mobile communications corporation"": 1,
    ""Beam Telecom Pvt Ltd"": 3,
    ""Private Layer INC"": 1,
    ""Servers.com, Inc."": 1,
    ""BreezeHost"": 1
  },
  ""org"": {
    ""Dedicated Servers"": 1,
    ""Unknown"": 3,
    ""Censys, Inc."": 2,
    ""Palo Alto Networks, Inc"": 15,
    ""UAB Host Baltic"": 4,
    ""OVH US LLC"": 1,
    ""Xhost Internet Solutions"": 3,
    ""Xhostis"": 1,
    ""Chinanet JS"": 3,
    ""4Media Ltd"": 5,
    ""Starcrecium Limited"": 1,
    ""Chinanet HE"": 1,
    ""Patrice, Auffret"": 2,
    ""Telekomunikasi Indonesia"": 1,
    ""China Mobile Communications Corporation"": 2,
    ""Hanoi Post and Telecom Company"": 2,
    ""Everest Global Joint Stock Company"": 2,
    ""Makut Investments"": 1,
    ""ColocationX Ltd"": 1,
    ""ONLINE"": 1,
    ""Horizon LLC"": 4,
    ""Flyservers S.A"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Microsoft Azure Cloud (eastus)"": 1,
    ""Triple T Broadband Public Company Limited"": 2,
    ""True Internet Corporation CO. LTD"": 2,
    ""China Mobile"": 1,
    ""Atria Convergence Technologies Ltd."": 3,
    ""Client1096"": 1,
    ""Servers.com, Inc."": 1,
    ""BreezeHost"": 1
  },
  ""regionName"": {
    ""California"": 16,
    ""Bangkok"": 5,
    ""Thanh H\u00f3a Province"": 1,
    ""Hesse"": 2,
    ""Vilnius"": 4,
    ""North West"": 3,
    ""Virginia"": 3,
    ""North Holland"": 5,
    ""Jiangsu"": 3,
    ""Plovdiv"": 5,
    ""Chechnya"": 1,
    ""Hebei"": 1,
    ""Jakarta"": 1,
    ""Zhejiang"": 2,
    ""Hanoi"": 4,
    ""\u00cele-de-France"": 1,
    ""Moscow"": 4,
    ""Kaunas"": 4,
    ""Metro Manila"": 1,
    ""Guangdong"": 1,
    ""Telangana"": 3,
    ""Zurich"": 1,
    ""Texas"": 1,
    ""North Carolina"": 1
  },
  ""country"": {
    ""United States"": 21,
    ""Thailand"": 5,
    ""Vietnam"": 5,
    ""Germany"": 2,
    ""Lithuania"": 8,
    ""Singapore"": 3,
    ""The Netherlands"": 5,
    ""China"": 7,
    ""Bulgaria"": 5,
    ""Russia"": 5,
    ""Indonesia"": 1,
    ""France"": 1,
    ""Philippines"": 1,
    ""India"": 3,
    ""Switzerland"": 1
  },
  ""account"": {
    ""(empty)"": 5,
    ""Almaz"": 1,
    ""hello"": 23,
    ""NaiWRbemN"": 1,
    ""oZkNcu"": 1,
    ""RpogyZ"": 1,
    ""Test"": 10,
    ""Administr"": 10,
    ""Administrator"": 3,
    ""LgLZwxyEo"": 1,
    ""VqZPspGZS"": 1,
    ""ZlZDItLEr"": 1,
    ""mKvBPesQu"": 1,
    ""VwIgqu"": 1,
    ""PitYBQ"": 1,
    ""Domain"": 6,
    ""RHAOZYxXt"": 1,
    ""edPeEa"": 1,
    ""ECwNou"": 1,
    ""gbAMOkcUw"": 1,
    ""cUDumR"": 1,
    ""DRogBw"": 1
  },
  ""keyboard"": {
    ""Unknown"": 69,
    ""English - United Kingdom"": 4
  },
  ""client_build"": {
    ""Unknown"": 69,
    ""RDP 5.1"": 4
  },
  ""client_name"": {
    ""Unknown"": 69,
    ""EMP-LAP-0014"": 4
  },
  ""ip_type"": {
    ""hosting & proxy"": 2,
    ""Unknown"": 40,
    ""hosting"": 23,
    ""proxy"": 2,
    ""mobile"": 6
  }
}"
hJD6Uvdr,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Monday 26th of February 2024 05:43:15 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_659395.pdf

Working as of:
26 February 2024"
ZRAYpet7,Untitled,Katthew,Bash,Monday 26th of February 2024 05:41:43 PM CDT,"Test targets ['model_tests'] in profile Matrix

make output:
[  2%] Built target backward
[  2%] Built target fmt
[  8%] Built target gflags_nothreads_static
[ 43%] Built target wheels
[ 51%] Built target sure
[ 91%] Built target twist
[ 97%] Built target course-testing
[100%] Building CXX object tasks/future/std/CMakeFiles/task_future_std_model_tests.dir/tests/model.cpp.o
[100%] Linking CXX executable bin/task_future_std_model_tests
[100%] Built target task_future_std_model_tests

Run target task_future_std_model_tests

/tmp/clippy-build/Matrix/tasks/future/std/bin/task_future_std_model_tests output:
Compiler: Ubuntu Clang 17.0.6 (++20231209124227+6009708b4367-1~exp1~20231209124336.77)
Run tests in subprocesses (set --disable_forks flag to disable forks)
--------------------------------------------------------------------------------
Test 'SetValue' from suite 'ModelFuture' is running...
Executed in subprocess with pid = 3752555
3
3
3
3
3
3
[Scheduler] Running thread #1
------------------------------
[Thread #1] [Iter 2] Sync action mutex::mutex / addr = 0x7f988347c040 <- false at /workspace/concurrency-course/tasks/future/std/exe/shared_state.hpp:9 [SharedState]

  8: template <typename T>
> 9: struct SharedState {  //  <- false
  10:   bool flag = false;
  11:   std::expected<T, std::exception_ptr> exp;

------------------------------
[Thread #1] [Iter 3] Sync action atomic::atomic / addr = 0x7f988347c070 <- 0 at /workspace/concurrency-course/tasks/future/std/exe/shared_state.hpp:9 [SharedState]

  8: template <typename T>
> 9: struct SharedState {  //  <- 0
  10:   bool flag = false;
  11:   std::expected<T, std::exception_ptr> exp;

3
------------------------------
[Thread #1] [Iter 4] Sync action atomic::atomic / addr = 0x7f988347c2a8 <- 2 at /workspace/concurrency-course/tasks/future/std/tests/model.cpp:14 [TwistModelBodySetValue]

  12:     auto f = p.MakeFuture();
  13: 
> 14:     twist::ed::std::thread t([p = std::move(p)]() mutable {  //  <- 2
  15:       p.SetValue(1);
  16:     });

------------------------------
[Thread #1] [Iter 5] Sync action mutex::lock / [R]mw / addr = 0x7f988347c040 -> false at /usr/lib/llvm-17/bin/../include/c++/v1/__mutex/unique_lock.h:41 [unique_lock]

  39:   _LIBCPP_HIDE_FROM_ABI unique_lock() _NOEXCEPT : __m_(nullptr), __owns_(false) {}
  40:   _LIBCPP_HIDE_FROM_ABI explicit unique_lock(mutex_type& __m) : __m_(std::addressof(__m)), __owns_(true) {
> 41:     __m_->lock();  //  -> false
  42:   }

------------------------------
[Thread #1] [Iter 6] Sync action mutex::lock / rm[W] / addr = 0x7f988347c040 <- true at /usr/lib/llvm-17/bin/../include/c++/v1/__mutex/unique_lock.h:41 [unique_lock]

  39:   _LIBCPP_HIDE_FROM_ABI unique_lock() _NOEXCEPT : __m_(nullptr), __owns_(false) {}
  40:   _LIBCPP_HIDE_FROM_ABI explicit unique_lock(mutex_type& __m) : __m_(std::addressof(__m)), __owns_(true) {
> 41:     __m_->lock();  //  <- true
  42:   }

------------------------------
[Thread #1] [Iter 7] Sync action atomic::load / addr = 0x7f988347c070 -> 0 at /workspace/concurrency-course/tasks/future/std/exe/future.hpp:38 [Get]

  36:         throw BrokenPromiseError();
  37:       }
> 38:       state_ptr_->cv_.wait(lock);  //  -> 0
  39:     }

------------------------------
[Thread #1] [Iter 8] Sync action mutex::unlock / addr = 0x7f988347c040 <- false at /workspace/concurrency-course/tasks/future/std/exe/future.hpp:38 [Get]

  36:         throw BrokenPromiseError();
  37:       }
> 38:       state_ptr_->cv_.wait(lock);  //  <- false
  39:     }

------------------------------
[Thread #1] [Iter 8] Entering FutexWait(0x7f988347c070, 0) / user operation condition_variable::wait at /workspace/concurrency-course/tasks/future/std/exe/future.hpp:38 [Get]

  36:         throw BrokenPromiseError();
  37:       }
> 38:       state_ptr_->cv_.wait(lock);  // FutexWait(0x7f988347c070, 0)
  39:     }

------------------------------
Thread #1 has been suspended (condition_variable::wait) at /workspace/concurrency-course/tasks/future/std/exe/future.hpp:38 [Get]

  36:         throw BrokenPromiseError();
  37:       }
> 38:       state_ptr_->cv_.wait(lock);
  39:     }

------------------------------
[Scheduler] Switching to thread #2
------------------------------
[Thread #2] [Iter 10] Sync action mutex::lock / [R]mw / addr = 0x7f988347c040 -> false at /usr/lib/llvm-17/bin/../include/c++/v1/__mutex/lock_guard.h:35 [lock_guard]

  33:       _LIBCPP_THREAD_SAFETY_ANNOTATION(acquire_capability(__m))
  34:       : __m_(__m) {
> 35:     __m_.lock();  //  -> false
  36:   }

------------------------------
[Thread #2] [Iter 11] Sync action mutex::lock / rm[W] / addr = 0x7f988347c040 <- true at /usr/lib/llvm-17/bin/../include/c++/v1/__mutex/lock_guard.h:35 [lock_guard]

  33:       _LIBCPP_THREAD_SAFETY_ANNOTATION(acquire_capability(__m))
  34:       : __m_(__m) {
> 35:     __m_.lock();  //  <- true
  36:   }

------------------------------
[Thread #2] [Iter 12] Sync action atomic::fetch_add / [R]mw / addr = 0x7f988347c070 -> 0 at /workspace/concurrency-course/tasks/future/std/exe/promise.hpp:41 [SetValue]

  39:     state_ptr_->exp = std::move(item);
  40:     state_ptr_->flag = true;
> 41:     state_ptr_->cv_.notify_one();  //  -> 0
  42:   }

------------------------------
[Thread #2] [Iter 13] Sync action atomic::fetch_add / rm[W] / addr = 0x7f988347c070 <- 1 at /workspace/concurrency-course/tasks/future/std/exe/promise.hpp:41 [SetValue]

  39:     state_ptr_->exp = std::move(item);
  40:     state_ptr_->flag = true;
> 41:     state_ptr_->cv_.notify_one();  //  <- 1
  42:   }

------------------------------
[Thread #2] [Iter 13] FutexWake(0x7f988347c070, 1)

  39:     state_ptr_->exp = std::move(item);
  40:     state_ptr_->flag = true;
> 41:     state_ptr_->cv_.notify_one();  // FutexWake(0x7f988347c070, 1)
  42:   }

------------------------------
[Scheduler] Wake thread #1 from thread #2, reason: futex::Wake
------------------------------
[Thread #2] [Iter 14] Sync action mutex::unlock / addr = 0x7f988347c040 <- false at /usr/lib/llvm-17/bin/../include/c++/v1/__mutex/lock_guard.h:41 [~lock_guard]

  39:       _LIBCPP_THREAD_SAFETY_ANNOTATION(requires_capability(__m))
  40:       : __m_(__m) {}
> 41:   _LIBCPP_HIDE_FROM_ABI ~lock_guard() _LIBCPP_THREAD_SAFETY_ANNOTATION(release_capability()) { __m_.unlock(); }  //  <- false
  42: 
  43: private:

------------------------------
[Thread #2] [Iter 16] FutexWake(0x7f988347c2a8, 1)

  12:     auto f = p.MakeFuture();
  13: 
> 14:     twist::ed::std::thread t([p = std::move(p)]() mutable {  // FutexWake(0x7f988347c2a8, 1)
  15:       p.SetValue(1);
  16:     });

------------------------------
[Scheduler] Thread #2 terminated
------------------------------
[Scheduler] Switching to thread #1
------------------------------
[Thread #1] [Iter 17] Exiting FutexWait(0x7f988347c070, 0) / user operation condition_variable::wait at /workspace/concurrency-course/tasks/future/std/exe/future.hpp:38 [Get]

  36:         throw BrokenPromiseError();
  37:       }
> 38:       state_ptr_->cv_.wait(lock);  // FutexWait(0x7f988347c070, 0)
  39:     }

------------------------------
[Thread #1] [Iter 18] Sync action mutex::lock / [R]mw / addr = 0x7f988347c040 -> false at /workspace/concurrency-course/tasks/future/std/exe/future.hpp:38 [Get]

  36:         throw BrokenPromiseError();
  37:       }
> 38:       state_ptr_->cv_.wait(lock);  //  -> false
  39:     }

------------------------------
[Thread #1] [Iter 19] Sync action mutex::lock / rm[W] / addr = 0x7f988347c040 <- true at /workspace/concurrency-course/tasks/future/std/exe/future.hpp:38 [Get]

  36:         throw BrokenPromiseError();
  37:       }
> 38:       state_ptr_->cv_.wait(lock);  //  <- true
  39:     }

------------------------------
[Thread #1] [Iter 20] Sync action atomic::~atomic / addr = 0x7f988347c070 at /workspace/concurrency-course/tasks/future/std/exe/shared_state.hpp:9 [SharedState]

  8: template <typename T>
> 9: struct SharedState {
  10:   bool flag = false;
  11:   std::expected<T, std::exception_ptr> exp;

------------------------------
[Thread #1] [Iter 21] Sync action mutex::~mutex / addr = 0x7f988347c040 at /workspace/concurrency-course/tasks/future/std/exe/shared_state.hpp:9 [SharedState]

  8: template <typename T>
> 9: struct SharedState {
  10:   bool flag = false;
  11:   std::expected<T, std::exception_ptr> exp;


Test 'SetValue' FAILED [¬º-°]¬: Test subprocess terminated by signal 6, stderr: 
Simulation failure (Invalid memory access): Accessing destroyed atomic: addr = 0x7f988347c040, source location = /workspace/concurrency-course/tasks/future/std/exe/shared_state.hpp:9 [SharedState], operation = mutex::unlock, access source location = /usr/lib/llvm-17/bin/../include/c++/v1/__mutex/unique_lock.h:63 [~unique_lock]



Command '['/tmp/clippy-build/Matrix/tasks/future/std/bin/task_future_std_model_tests']' died with <Signals.SIGABRT: 6>."
TcsmyVYr,Quick reliable pseudo-shuffler,banovski,Haskell,Monday 26th of February 2024 04:28:28 PM CDT,"import Data.List
import Data.Function

merge :: [a] -> [a] -> [a]
merge xs [] = xs
merge [] ys = ys
merge (x:xs) (y:ys) = x : y : merge xs ys

main :: IO ()
main = do
  input <- getContents
  mapM_ putStrLn . foldl1 merge $
    sortBy (on compare length) (group . sort $ lines input)
"
YR0bRPsw,vacation,zarkoto223,JavaScript,Monday 26th of February 2024 04:27:59 PM CDT,"function asd(input) {
    let neededMoney = Number(input[0])
    let startMoney = Number(input[1])

    let daysSpend = 0
    let savedMoney = startMoney
    let days = 0

    let index = 2
    let curentDayAction = input[index]
    let curentDayMoney = Number(input[index + 1])
    while (savedMoney < neededMoney) {
        days++
        if (curentDayAction === 'spend') {
            savedMoney -= curentDayMoney
            daysSpend++
            if (savedMoney <= 0) {
                savedMoney = 0
            }
        }
        if (curentDayAction === 'save') {
            savedMoney += curentDayMoney
        }
        if (daysSpend === 5) {
            console.log(`You can't save the money.`)
            console.log(`${days}`)
            break

        }

        index += 2
        curentDayAction = input[index]
        curentDayMoney = Number(input[index + 1])

    }
    if (savedMoney >= neededMoney) {
        console.log(`You saved the money for ${days} days.`)
    }


}
asd([""2000"",
    ""1000"",
    ""spend"",
    ""1200"",
    ""save"",
    ""2000""])

// asd([""110"",
// ""60"",
// ""spend"",
// ""10"",
// ""spend"",
// ""10"",
// ""spend"",
// ""10"",
// ""spend"",
// ""10"",
// ""spend"",
// ""10""])

// asd([""250"",
// ""150"",
// ""spend"",
// ""50"",
// ""spend"",
// ""50"",
// ""save"",
// ""100"",
// ""save"",
// ""100""])
"
WirMJG3c,змейка,boris-vlasenko,Python,Monday 26th of February 2024 04:13:27 PM CDT,"from random import choice, randint

import pygame

# Инициализация PyGame:
pygame.init()

# Константы для размеров поля и сетки:
SCREEN_WIDTH, SCREEN_HEIGHT = 640, 480
GRID_SIZE = 20
GRID_WIDTH = SCREEN_WIDTH // GRID_SIZE
GRID_HEIGHT = SCREEN_HEIGHT // GRID_SIZE

# Направления движения:
UP = (0, -1)
DOWN = (0, 1)
LEFT = (-1, 0)
RIGHT = (1, 0)

# Цвет фона - черный:
BOARD_BACKGROUND_COLOR = (0, 0, 0)

# Цвет границы ячейки
BORDER_COLOR = (93, 216, 228)

# Цвет яблока
APPLE_COLOR = (255, 0, 0)

# Цвет змейки
SNAKE_COLOR = (0, 255, 0)

# Скорость движения змейки:
SPEED = 15

# Настройка игрового окна:
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT), 0, 32)

# Заголовок окна игрового поля:
pygame.display.set_caption('Змейка')

# Настройка времени:
clock = pygame.time.Clock()


class GameObject:
    """"""Это базовый класс.""""""

    def __init__(self, bg_color=None):
        self.position = (SCREEN_WIDTH // 2), (SCREEN_HEIGHT // 2)
        self.body_color = bg_color

    def draw_cell(self, surface, position):
        """"""Создание ячейки.""""""
        rect = pygame.Rect(position, (GRID_SIZE, GRID_SIZE, ))
        pygame.draw.rect(surface, self.body_color, rect)
        #pygame.draw.rect(surface, BORDER_COLOR, rect, 1)
        #pygame.draw.rect(surface, self.body_color, rect)

    def draw(self, surface):
        """"""Отрисовка объекта. По умолчанию pass.""""""
        pass


class Apple(GameObject):
    """"""Класс для яблока, наследуется от GameObject.""""""

    def __init__(self, bg_color=APPLE_COLOR):
        super().__init__(bg_color)
        self.randomize_position()

    def randomize_position(self):
        """"""Реализация рандомного появления яблока.""""""
        self.position = (
            randint(0, GRID_WIDTH - 1) * GRID_SIZE,
            randint(0, GRID_HEIGHT - 1) * GRID_SIZE
        )

    def draw(self, surface):
        """"""Метод draw класса Apple.""""""
        self.draw_cell(surface, self.position)


class Snake(GameObject):
    """"""Класс для змейки, наследуется от GameObject.""""""

    def __init__(self, body_color=SNAKE_COLOR):
        """"""Инициализация змейки с заданными позицией и цветом.""""""
        super().__init__(body_color)
        self.reset()
        self.positions = [self.position]
        self.direction = RIGHT
        self.next_direction = None
        self.last = None

    def update_direction(self):
        """"""Метод обновления направления после нажатия на кнопку.""""""
        if self.next_direction:
            self.direction = self.next_direction
            self.next_direction = None

    def move(self):
        """"""
        Обновляем позицию змейки.
        Управление её движением по игровому полю.
        """"""
        head_x, head_y = self.get_head_position()
        xd, yd = self.direction
        x_new = (GRID_SIZE * xd + head_x) % SCREEN_WIDTH
        y_new = (GRID_SIZE * yd + head_y) % SCREEN_HEIGHT

        self.positions.insert(0, (x_new, y_new))
        if len(self.positions) > self.length:
            self.last = self.positions.pop()

    def get_head_position(self):
        """"""Возвращает позицию головы змейки.""""""
        return self.positions[0]

    def reset(self):
        """"""Сбрасывает змейку в начальное состояние.""""""
        self.length = 1
        self.positions = [self.position]
        self.direction = choice([UP, DOWN, LEFT, RIGHT])
        self.last = None

    def draw(self, surface):
        """"""Метод draw класса Snake. Отрисовывает змейку.""""""
        for position in self.positions[:-1]:
            self.draw_cell(surface, position)

        self.draw_cell(surface, self.positions[0])

        if self.last:
            last_rect = pygame.Rect(
                self.last,
                (GRID_SIZE, GRID_SIZE)
            )
            pygame.draw.rect(surface, BOARD_BACKGROUND_COLOR, last_rect)


def handle_keys(game_object):
    """"""Функция обработки действий пользователя.""""""
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            raise SystemExit
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP and game_object.direction != DOWN:
                game_object.next_direction = UP
            elif event.key == pygame.K_DOWN and game_object.direction != UP:
                game_object.next_direction = DOWN
            elif event.key == pygame.K_LEFT and game_object.direction != RIGHT:
                game_object.next_direction = LEFT
            elif event.key == pygame.K_RIGHT and game_object.direction != LEFT:
                game_object.next_direction = RIGHT


def main():
    """"""Создаем экземпляры классов""""""
    apple = Apple()
    snake = Snake()

    while True:
        clock.tick(SPEED)
        apple.draw(screen)
        snake.draw(screen)
        handle_keys(snake)
        snake.update_direction()
        snake.move()

        if snake.get_head_position() in snake.positions[2:]:
            snake.reset()
            screen.fill(BOARD_BACKGROUND_COLOR)

        if snake.get_head_position() == apple.position:
            snake.length += 1
            apple.randomize_position()
            apple.draw(screen)

        pygame.display.update()


if __name__ == '__main__':
    main()
"
7hyb7g5R,Toggle Zombie AI (7DtD),Tcip,Autohotkey,Monday 26th of February 2024 04:02:47 PM CDT,"#SingleInstance force

; Toggle Zombie AI for 7 Days to Die
; I created this for my Microsoft Surface Laptop 4 that does not have numpad keyboard so i couldn't press the key
; to turn off zombie AI you need to enable DebugMenu. Open the Console (F1) and write dm to enable it
; Tested on Alpha 21.2 b30

; Alt + A
!a::SendInput, {NumpadMult}
return
"
GpQZb7MV,esercizio_per_matedì,buonaseva_fatelo,C++,Monday 26th of February 2024 03:54:06 PM CDT,"#include <iostream>
#include <cstring>
using namespace std;


/*
Scrivere un programma in C/C++ che visualizzi il seguente menu:

1) Crea rubrica
2) Cerca un elemento
3) Visualizza la tabella
4) Esci

1) La rubrica (array di struct) deve contenere al massimo 100 elementi. Ogni elemento è
composto dai seguenti campi
 nome
 cognome
 indirizzo
 città di residenza
 telefono
Tutti i suddetti campi devono essere rappresentati come stringhe.
Dopo avere inserito un elemento il programma chiede: “Vuoi continuare s/n”?
Se la risposta è “s” si aggiunge un nuovo elemento, se è “n” si torna al menu.

2) Visualizza un sottomenu che chiede per quale campo si vuole cercare:

1. nome
2. cognome
3. indirizzo
4. città di residenza
5. telefono
6. Torna al menu precedente

Si fa inserire il valore del campo che si è scelto per la ricerca
Si cerca nella tabella tutti gli elementi in cui appare quel campo.
Es. se ho scelto come campo di ricerca “città di residenza” e ho inserito come valore di
ricerca “Torino” bisogna mostrare tutti gli elementi che hanno il valore “Torino”.
Se non si trova nessun elemento con quel valore bisogna visualizzare il messaggio:
“Non trovato nessun elemento”.

3) Si visualizza tutta la tabella
*/

const int N = 20;
int g_inseriti;
struct Contatto{
    char nome[N];
    char cognome[N];
    char indirizzo[N];
    char residenza[N];
    int numero;
};

void inserisciNumero(Contatto* param1){
    char nome[N], cognome[N], indirizzo[N], residenza[N];
    int numero;
    cout << ""Nome"";
    cin >> nome;
    cout << ""cognome"";
    cin >> cognome;
    cout << ""\nindirizzo"";
    cin >> indirizzo;
    cout << ""\nresidenza"";
    cin >> residenza;
    cout << ""numero"";
    cin >> numero;

    strcpy(param1[g_inseriti].nome, nome);
    strcpy(param1[g_inseriti].cognome, cognome);
    strcpy(param1[g_inseriti].indirizzo, indirizzo);
    strcpy(param1[g_inseriti].residenza, residenza);
    param1[g_inseriti].numero = numero;
    g_inseriti = g_inseriti + 1;
}



void cercaElemento(Contatto* parametro_contatti) {
    int input;
    char parolaChiave[N];
    char* inizioSottostringa;
    bool trovato = false;
    cout << ""Scegliere per quale campo cercare (numero 1-6)""
            ""1. nome\n""
            ""2. cognome\n""
            ""3. indirizzo\n""
            ""4. città di residenza\n""
            ""5. telefono\n""
            ""6. Torna al menu precedente"";
    cin >> input;
    cout << ""\nInserire parola chiave:"";
    cin >> parolaChiave;
    for(int i = 0; i< g_inseriti; i = i+1){
        switch(input){
            case 1:
                //cercare per nome
                inizioSottostringa = strstr(parametro_contatti[i].nome, parolaChiave);
                break;
            case 2:
                //cercare per cognome
                inizioSottostringa = strstr(parametro_contatti[i].cognome, parolaChiave);

                break;
            case 3:
                //cercare per indirizzo
                inizioSottostringa = strstr(parametro_contatti[i].indirizzo, parolaChiave);

                break;
            case 4:
                //cercare per città di residenza
                inizioSottostringa = strstr(parametro_contatti[i].residenza, parolaChiave);

            case 5:
                //cercare per numero di telefono

            case 6:
                break;
            default:
                cout << ""Scelta errata"";
        }
        if(inizioSottostringa != NULL){
            trovato = true;
            cout << ""\ntrovata corrispondenza:"";
            cout << parametro_contatti[i].nome << endl;
            cout << parametro_contatti[i].cognome << endl;
            cout << parametro_contatti[i].indirizzo << endl;
            cout << parametro_contatti[i].residenza << endl;
            cout << parametro_contatti[i].numero << endl;
        }
    }//TI VEDO CHE SCRIVI e vai a mangiare lol dio por
    if(trovato == false)
        cout << ""Non trovato nessun elemento"";
}

void visualizzaTabella(Contatto* contatti){
    for(int i = 0; i<g_inseriti;i=i+1){
        cout << contatti[i].nome << endl;
        cout << contatti[i].cognome << endl;
        cout << contatti[i].indirizzo << endl;
        cout << contatti[i].residenza << endl;
        cout << contatti[i].numero << endl;
    }
}


int main(){
    int input;
    g_inseriti = 0;
    Contatto rubrica[100];

    cout <<""Inserire un numero:\n""
           ""1) Crea rubrica\n""
        ""2) Cerca un elemento\n""
        ""3) Visualizza la tabella\n""
        ""4) Esci\n"";
    cin >> input;

    switch(input){
        case 1:
            inserisciNumero(rubrica);
            break;
        case 2:
            cercaElemento(rubrica);
            break;
        case 3:
            visualizzaTabella(rubrica);
            break;
        case 4:
            break;
        default:
            cout << ""Scelta errata\n"";
    }


    return 0;
};"
HVVb1NT8,PasswordThingyForCCTweaked,Royalzombie222,Lua,Monday 26th of February 2024 03:48:31 PM CDT,"local Monitor = peripheral.wrap(""top"")

Monitor.write(""Please enter your password: "")
while true do
    write(""Password> "")
    local pwd = read(""*"")
    if pwd == ""218627"" then break end
    print(""Incorrect password, try again."")
end
print(""Logged in!"")"
s7Msj5dE,Untitled,Sashaiolh,Lua,Monday 26th of February 2024 03:47:33 PM CDT,"-- (c) Max K https://github.com/asgmax

local component = require(""component"")
local computer = require(""computer"")
local term = require(""term"")
local event = require(""event"")
local gpu = component.gpu
local serialization = require(""serialization"")
local unicode = require(""unicode"")

local const = {
	strongPrincessCount = 3, -- >=
	strongCount = 10,
	strongCountRoof = 15,
	trashInterface = component.proxy(""0754958d-c770-4a2c-a7ef-1a563e2bbb39""),
	analyzerInterface = component.proxy(""5592b112-616f-4c65-96d5-b01e46b113d6""),
	analyzerChestSide = ""WEST"", -- relative to analyzerInterface
	exportSide = ""WEST"", -- side to export for test purposes
	houseSide = ""EAST"", -- side of apiary (relative to interface)
	trashSide = ""SOUTH"", -- side of chest (relative to intTrash (trashing interface)) to drop notNatural princesses
}

local int = {
	[1] = component.proxy(""0a192f91-eac2-4760-962f-aa9e85f80108""),
}

local apiary = {
	[1] = component.proxy(""d1941dd6-644f-4f3c-a029-4cac682097dd""),
}

function isBee(table) if table.individual then return true else return false end end
function isNatural(table) if table.individual.isNatural == true then return true else return false end end
function isAnalyzed(table) if table.individual.isAnalyzed == true then return true else return false end end
function isDrone(table) if string.find(table.label,""Drone"") then return true else return false end end
function isPrincess(table) if string.find(table.label,""Princess"") then return true else return false end end
function isQueen(table) if string.find(table.label,""Queen"") then return true else return false end end
function isPure(table) if table.individual.isAnalyzed and table.individual.active.species == table.individual.inactive.species then return true else return false end end
function isUnpure(table) if table.individual.isAnalyzed and table.individual.active.species ~= table.individual.inactive.species then return true else return false end end
function isSpecie(table,specie) if string.lower(specie) == string.lower(table.individual.displayName) then return true else return false end end
function isAl1(table,specie) if string.lower(specie) == string.lower(table.individual.active.species) then return true else return false end end
function isAl2(table,specie) if string.lower(specie) == string.lower(table.individual.inactive.species) then return true else return false end end

function isAlx(table,specie) if string.lower(specie) == string.lower(table.individual.active.species) or string.lower(specie) == string.lower(table.individual.inactive.species) then return true else return false end end
function isPureSpec(table,specie) if string.lower(specie) == string.lower(table.individual.active.species) and string.lower(specie) == string.lower(table.individual.inactive.species) then return true else return false end end

function isVanilla(table) if isSpecie(table,""meadows"") or isSpecie(table,""forest"") then return true else return false end end
function canFind(string1,string2) if string.find(string1,string2) then return true else return false end end

function totalBeesCount()
	local ti = int[1].getItemsInNetwork()
	local ta = int[1].getAvailableItems()
	local count = 0
	for i in ipairs(ti) do
		if isBee(ti[i]) then
			count = count + ti[i].size
		end
	end
	return count
end

function removeUnnatural()
	local ti = int[1].getItemsInNetwork()
	local ta = int[1].getAvailableItems()
	local totalExported = 0
	for i in ipairs(ti) do
		if isBee(ti[i]) and not isNatural(ti[i]) then
			local toexport = ti[i].size
			repeat
				local exported = const.trashInterface.exportItem(ta[i].fingerprint,const.trashSide,toexport)
				toexport = toexport - exported.size
				totalExported = totalExported + exported.size
			until toexport == 0
		end
	end
	io.write(""removeUnnatural() - removed "" .. totalExported .. "" \n"")
end

function clearNetwork()
	local ti = int[1].getItemsInNetwork()
	local ta = int[1].getAvailableItems()
	local totalExported = 0
	for i in ipairs(ti) do
		if isBee(ti[i]) then
			local toexport = ti[i].size
			repeat
				local exported = const.trashInterface.exportItem(ta[i].fingerprint,const.trashSide,toexport)
				toexport = toexport - exported.size
				totalExported = totalExported + exported.size
			until toexport == 0
		end
	end
	io.write(""clearNetwork() - removed "" .. totalExported .. "" \n"")
end

function isApiaryFree(num)
	for i = 1,9 do
		if apiary[num].getStackInSlot(i) then
			return false
		end
	end
	return true
end

function waitForApiary(num)
	
	io.write(""waitForApiary("" .. num .. "") "")
	if isApiaryFree(num) ~= true then
		repeat
			io.write("". "")
			os.sleep(3)
		until isApiaryFree(num) == true
			io.write("" \n"")
	else
		io.write(""waitForApiary("" .. num .. "") - is free \n"" )
	end
end

function waitForAnalyze()
	local count1 = totalBeesCount()
	local a = analyzeAll()
	if a ~= false then
		io.write(""waitForAnalyze() - analyzing "")
		repeat
			io.write("" ."")
			os.sleep(5)
		until totalBeesCount() == count1
		io.write(""\nwaitForAnalyze() - analysis finished\n"")
	else
		io.write(""waitForAnalyze() - nothing to analyze\n"")
	end
end

function analyze(table) -- ta[i]
	local toexport = const.analyzerInterface.getItemDetail(table.fingerprint).basic().qty
	local sent = 0
	repeat
		local exported = const.analyzerInterface.exportItem(table.fingerprint,const.analyzerChestSide,toexport)
		toexport = toexport - exported.size
		sent = sent + exported.size
	until toexport == 0
	return sent
end

function analyzeAll()
	local ti = int[1].getItemsInNetwork()
	local ta = int[1].getAvailableItems()
	local unknownStacks = 0
	local knownStacks = 0
	local beesSent = 0
	local knownBees = 0
	for i in ipairs(ti) do
		if isBee(ti[i]) then
			if not isAnalyzed(ti[i]) then
				unknownStacks = unknownStacks + 1
				beesSent = beesSent + analyze(ta[i])
			else
				knownStacks = knownStacks + 1
				knownBees = knownBees + ti[i].size
			end
		end
	end
	io.write(""analyzeAll() - known: "" .. knownBees .. "" bees ("" .. knownStacks .. "" stacks), being analyzed: "" .. beesSent .. "" bees ("" .. unknownStacks .. "" stacks) \n"")
	if unknownStacks == 0 then
		return false
	end
end

function isType(table,type) -- ""drone"" or ""princess"" or ""queen""
	if string.lower(type) == ""drone"" then
		return isDrone(table)
	elseif string.lower(type) == ""princess"" then
		return isPrincess(table)
	elseif string.lower(type) == ""queen"" then
		return isQueen(table)
	else
		io.write(""isType() - incorrect argument "" .. tostring(type) .. "" \n"")
	end
end

function isPurity(table,purity)
	if string.lower(purity) == ""pure"" then
		return isPure(table)
	elseif string.lower(purity) == ""unpure"" then
		return isUnpure(table)
	else
		io.write(""isPurity() - incorrect argument "" .. tostring(purity) .. "" \n"")
	end
end

function countPrincess(al1,al2)
	local ti = int[1].getItemsInNetwork()
	local ta = int[1].getAvailableItems()
	local count = 0
	for i in ipairs(ti) do
		if isBee(ti[i]) and isAnalyzed(ti[i]) and isPrincess(ti[i]) then
			if al1check(ti[i],al1) and al2check(ti[i],al2) then
				count = count + ti[i].size
			end
		end
	end
	io.write(""countPrincess() - "" .. tostring(al1) .. ""/"" .. tostring(al2) .. "" - "" .. count .. ""\n"")
	return count
end

function countDrone(al1,al2)
	local ti = int[1].getItemsInNetwork()
	local ta = int[1].getAvailableItems()
	local count = 0
	for i in ipairs(ti) do
		if isBee(ti[i]) and isAnalyzed(ti[i]) and isDrone(ti[i]) then
			if al1check(ti[i],al1) and al2check(ti[i],al2) then
				count = count + ti[i].size
			end
		end
	end
	io.write(""countDrone() - "" .. tostring(al1) .. ""/"" .. tostring(al2) .. "" - "" .. count .. ""\n"")
	return count
end



function al1check(table,al1)
	if al1 then
		if string.lower(al1) == string.lower(table.individual.active.species) then
			return true
		else
			return false
		end
	else
		return true
	end
end

function al2check(table,al2)
	if al2 then
		if string.lower(al2) == string.lower(table.individual.inactive.species) then
			return true
		else
			return false
		end
	else
		return true
	end
end


function move(interface,side,table,number) -- table = ta[i] ONLY
	local toexport = math.min(number or 1,table.size)
	local totalExported = 0
	repeat
		local exported = int[interface].exportItem(table.fingerprint,side,toexport)
		toexport = toexport - exported.size
		totalExported = totalExported + exported.size
	until toexport == 0
	io.write(""move() - moved:"" .. totalExported .. "", int:"" .. interface .. "", side:"" .. side .. "", "" .. table.fingerprint.id .. "":"" .. table.fingerprint.dmg .. "" \n"")
	return totalExported 
end

function house1(table)
	move(1,const.houseSide,table,1)
end

function getParents(spec)
	if string.lower(spec) == ""common"" then
		return ""forest"",""meadows""
	elseif string.lower(spec) == ""cultivated"" then
		return ""common"",""forest""
	else
		local t = apiary[1].getBeeParents(spec)
		local par1 = t[1].allele1.name
		local par2 = t[1].allele2.name
		return par1, par2
	end
end

function GET(purity,type,spec) -- RETURNS ta[i], (""pure"",""princess"",""common"") or (""unpure"",""drone"",""meadows""), pure means al1 == al2
	local ti = int[1].getItemsInNetwork()
	local ta = int[1].getAvailableItems()
	local count = 0
	local tai
	local speed = 0
	for i in ipairs(ti) do
		if isBee(ti[i]) and isAnalyzed(ti[i]) then
			if isType(ti[i],type) and isPurity(ti[i],purity) and isAlx(ti[i],spec) then
				count = count + ti[i].size
				if ti[i].individual.active.speed + ti[i].individual.inactive.speed > speed then
					speed = ti[i].individual.active.speed + ti[i].individual.inactive.speed
					tai = ta[i]
				end
			end
		end
	end
	io.write(""GET() - "" .. purity .. "" "" .. type .. "" "" .. spec .. "" - found "" .. count .. "" (returned avg speed: "" .. speed/2 .. "") \n"")
	return count, tai
end

function GET1(type,spec1,spec2) -- RETURNS ta[i], gets only bees with BOTH spec genes present
	local ti = int[1].getItemsInNetwork()
	local ta = int[1].getAvailableItems()
	local count = 0
	local tai
	local speed = 0
	for i in ipairs(ti) do
		if isBee(ti[i]) and isAnalyzed(ti[i]) then
			if isType(ti[i],type) and isAlx(ti[i],spec1) and isAlx(ti[i],spec2) then
				count = count + ti[i].size
				if ti[i].individual.active.speed + ti[i].individual.inactive.speed > speed then
					speed = ti[i].individual.active.speed + ti[i].individual.inactive.speed
					tai = ta[i]
				end
			end
		end
	end
	io.write(""GET1() - "" .. type .. "" "" .. spec1 .. ""+"" .. spec2 .. "" - found "" .. count .. "" (returned avg speed: "" .. speed/2 .. "") \n"")
	return count, tai
end

function GET3(type,spec) -- RETURNS ta[i], counts bees of TYPE and at least 1 of genes SPEC
	local ti = int[1].getItemsInNetwork()
	local ta = int[1].getAvailableItems()
	local count = 0
	local tai
	local speed = 0
	for i in ipairs(ti) do
		if isBee(ti[i]) and isAnalyzed(ti[i]) then
			if isType(ti[i],type) and isAlx(ti[i],spec) then
				count = count + ti[i].size
				if ti[i].individual.active.speed + ti[i].individual.inactive.speed > speed then
					speed = ti[i].individual.active.speed + ti[i].individual.inactive.speed
					tai = ta[i]
				end
			end
		end
	end
	io.write(""GET3() - found "" .. count .. "" "" .. spec .. "" "" .. type .. "" \n"")
	return count, tai
end

function GET4(purity,type) -- RETURNS ta[i],
	local ti = int[1].getItemsInNetwork()
	local ta = int[1].getAvailableItems()
	local count = 0
	local tai
	local speed = 0
	local reportedSpecs
	for i in ipairs(ti) do
		if isBee(ti[i]) and isAnalyzed(ti[i]) then
			if isType(ti[i],type) and isPurity(ti[i],purity) then
				count = count + ti[i].size
				if ti[i].individual.active.speed + ti[i].individual.inactive.speed > speed then
					speed = ti[i].individual.active.speed + ti[i].individual.inactive.speed
					reportedSpecs = ti[i].individual.active.species .. ""/"" .. ti[i].individual.inactive.species
					tai = ta[i]
				end
			end
		end
	end
	io.write(""GET4() - "" .. purity .. "" "" .. type .. "" - found "" .. tostring(reportedSpecs) .. "" "" .. count .. "" (returned avg speed: "" .. speed/2 .. "") \n"")
	return count, tai
end

function breed(spec)
	local par1, par2 = getParents(spec)
	local princess = nil
	local drone = nil
	local function getDrone(num) -- num is 1 for par1, 2 for par2, 3 for par1 AND par2
		if num == 2 then
			if GET(""pure"",""drone"",par2) > 0 then
				_,drone = GET(""pure"",""drone"",par2)
			elseif GET1(""drone"",par1,par2) > 0 then
					_,drone = GET1(""drone"",par1,par2)
			elseif GET(""unpure"",""drone"",par2) > 0 then
				_,drone = GET(""unpure"",""drone"",par2)
			end
		elseif num == 1 then
			if GET(""pure"",""drone"",par1) > 0 then
				_,drone = GET(""pure"",""drone"",par1)
			elseif GET1(""drone"",par1,par2) > 0 then
				_,drone = GET1(""drone"",par1,par2)
			elseif GET(""unpure"",""drone"",par1) > 0 then
				_,drone = GET(""unpure"",""drone"",par1)
			end
		elseif num == 3 then
			if GET1(""drone"",par1,par2) > 0 then
				_,drone = GET1(""drone"",par1,par2)
			elseif GET(""pure"",""drone"",par1) > 0 then
				_,drone = GET(""pure"",""drone"",par1)
			elseif GET(""pure"",""drone"",par2) > 0 then
				_,drone = GET(""pure"",""drone"",par2)
			elseif GET(""unpure"",""drone"",par1) > 0 then
				_,drone = GET(""unpure"",""drone"",par1)
			elseif GET(""unpure"",""drone"",par2) > 0 then
				_,drone = GET(""unpure"",""drone"",par2)
			end
		end
	end
	if not isStrong(par1) and par1 ~= ""forest"" and par1 ~= ""meadows"" then
		io.write(""breed() - "" .. par1 .. "" is not Strong, calling multiply() for "".. par1 .. "" \n"")
		multiply(par1)
		return true
	elseif not isStrong(par2) and par1 ~= ""forest"" and par1 ~= ""meadows"" then
		io.write(""breed() - "" .. par2 .. "" is not Strong, calling multiply() for "".. par2 .. "" \n"")
		multiply(par2)
		return true
	end
	if GET(""pure"",""princess"",par1) > 2 then
		_,princess = GET(""pure"",""princess"",par1)
		getDrone(2)
	end

	if drone == nil then
		if GET(""pure"",""princess"",par2) > 2 then
			_,princess = GET(""pure"",""princess"",par2)
			getDrone(1)
		end
	end

	if drone == nil then
		if GET1(""princess"",par1,par2) > 0 then
			_,princess = GET1(""princess"",par1,par2)
			getDrone(3)
		end
	end

	if drone == nil then
		if GET(""unpure"",""princess"",par1) > 0 then
			_,princess = GET(""unpure"",""princess"",par1)
			getDrone(2)
		end
	end

	if drone == nil then
		if GET(""unpure"",""princess"",par2) > 0 then
			_,princess = GET(""unpure"",""princess"",par2)
			getDrone(1)
		end
	end

	if princess and drone then
		io.write(""breed("".. spec .."") - housing \n"")
		house1(princess)
		house1(drone)
	else
		local missingSpecGene = nil
		local isPrincessMissing = nil
		local isDroneMissing = nil
		io.write(""breed() - cant find (enough) princesses OR a drone to breed "" .. spec .. "" \n"")
		if GET3(""drone"",par1) < 1 then
			io.write(""breed("".. spec .."") - missing drone with at least 1 gene of spec "" .. par1 .. "" \n"")
			missingSpecGene = par1
			isDroneMissing = true
		end
		if	GET3(""drone"",par2) < 1 then
			io.write(""breed("".. spec .."") - missing drone with at least 1 gene of spec "" .. par2 .. "" \n"")
			if missingSpecGene == nil then
				missingSpecGene = par2
			end
			isDroneMissing = true
		end
		if GET3(""princess"",par1) < 3 then
			io.write(""breed("".. spec .."") - missing princess (or not enough pures) with at least 1 gene of spec "" .. par1 .. "" \n"")
			if missingSpecGene == nil then
				missingSpecGene = par1
			end
			isPrincessMissing = true
		end
		if	GET3(""drone"",par2) < 3 then
			io.write(""breed("".. spec .."") - missing princess (or not enough pures) with at least 1 gene of spec "" .. par2 .. "" \n"")
			if missingSpecGene == nil then
				missingSpecGene = par2
			end
			isPrincessMissing = true
		end
		gpu.setForeground(0x00FF00)
		io.write(""breed("".. spec .."") - calling multiply for species "" .. missingSpecGene .. "" \n"")
		gpu.setForeground(0xFFFFFF)
		multiply(missingSpecGene)
	end
end



function isStrong(spec)
	if GET(""pure"",""princess"",spec) >= const.strongPrincessCount and GET(""pure"",""drone"",spec) >= const.strongCount then
		return true
	else
		return false
	end
end



function multiply(spec)
	local princess = nil
	local drone = nil

	local function getPrincessAndDrone()
		if GET(""pure"",""princess"",spec) > 0 then
			_,princess = GET(""pure"",""princess"",spec)
		else
			if
				GET(""unpure"",""princess"",spec) > 0 then
				_,princess = GET(""unpure"",""princess"",spec)
			end
		end

		if GET(""pure"",""drone"",spec) > 0 then
			_,drone = GET(""pure"",""drone"",spec)
		else
			if
				GET(""unpure"",""drone"",spec) > 0 then
				_,drone = GET(""unpure"",""drone"",spec)
			end
		end
	end

	local function makePrincess()
		local princess1 = nil
		local drone1 = nil
		if GET(""unpure"",""princess"",spec) > 0 then
			_,princess1 = GET(""unpure"",""princess"",spec)
		elseif GET4(""unpure"",""princess"") > 0 then
			_,princess1 =  GET4(""unpure"",""princess"")
		elseif GET(""pure"",""princess"",""rocky"") > 0 then
			_,princess1 = GET(""pure"",""princess"",""rocky"")
		else
			gpu.setForeground(0x00FF00)
			io.write(""makePrincess() - ERROR#2 - no princesses with Rocky gene available \n"")
			gpu.setForeground(0xFFFFFF)
			error(""ERROR#2"")
		end
		_,drone1 = GET(""pure"",""drone"",spec)
		house1(princess1)
		house1(drone1)
	end
	if isStrong(spec) then
		gpu.setForeground(0x00FF00)
		io.write(""multiply() - called to multiply "" .. spec .. "" - strong species ("" .. const.strongCount .. "" drones and "".. const.strongPrincessCount .. "" pure princesses) achieved! \n"")
		gpu.setForeground(0xFFFFFF)
	else
		getPrincessAndDrone()
		if princess and drone then
			if GET(""pure"",""princess"",spec) < const.strongPrincessCount and GET(""pure"",""drone"",spec) >= const.strongCount then
				gpu.setForeground(0x00FF00)
				io.write(""multiply() - found <"" .. const.strongPrincessCount .. "" pure princesses of "" .. spec .. "" and >="" .. const.strongCount .."" drones, calling makePrincess() "" .. spec .. "" \n"")
				gpu.setForeground(0xFFFFFF)
				makePrincess()
			elseif GET(""pure"",""princess"",spec) > 0 and GET(""pure"",""drone"",spec) < const.strongCount then
				gpu.setForeground(0xff9933)
				io.write(""multiply() - forming strong specie of "" .. spec .. "" \n"")
				gpu.setForeground(0xFFFFFF)
				
				house1(princess)
				house1(drone)
			else	
				gpu.setForeground(0x00FF00)
				io.write(""multiply() - attempting to multiply specie of "" .. spec .. "" \n"")
				gpu.setForeground(0xFFFFFF)
				
				house1(princess)
				house1(drone)
			end
		elseif not princess and not drone then
			io.write(""multiply() - cant find princess NOR drone of species "" .. spec .. "" \n"")
			gpu.setForeground(0x00FF00)
			io.write(""multiply() - calling breed() "" .. spec .. "" \n"")
			gpu.setForeground(0xFFFFFF)
			breed(spec)
		elseif princess == nil and GET(""pure"",""drone"",spec) > 0 then
			io.write(""multiply() - cant find princess (have pure drone) of species "" .. spec .. "" \n"")
			gpu.setForeground(0x00FF00)
			io.write(""multiply() - calling makePrincess() "" .. spec .. "" \n"")
			gpu.setForeground(0xFFFFFF)
			makePrincess()
		else
			io.write(""multiply() - cant find princess AND drone of species "" .. spec .. "" \n"")
			gpu.setForeground(0x00FF00)
			io.write(""multiply() - calling breed() "" .. spec .. "" \n"")
			gpu.setForeground(0xFFFFFF)
			breed(spec)
		end
	end
end


function houseBee(interface,type,al1,al2)
	local ti = int[interface].getItemsInNetwork()
	local ta = int[interface].getAvailableItems()
	for i in ipairs(ti) do
		if isBee(ti[i]) and isAnalyzed(ti[i]) and isType(ti[i],type) then
			if al1check(ti[i],al1) and al2check(ti[i],al2) then
				house1(ta[i])
				io.write(""houseBee() - "" .. tostring(al1) .. ""/"" .. tostring(al2) .. "" "" .. tostring(type) .. "" housed \n"")
				return true
			end
		end
	end
	io.write(""houseBee() - nothing found \n"")
end

function console()
	while true do
		gpu.setForeground(0x00FF00)
		io.write(""Console >> "")
		gpu.setForeground(0x99ccff)
		local command = io.read()
		gpu.setForeground(0xFFFFFF)
		if command == ""close"" then
			return true
		else
			local a,err = pcall((load(command)))
			if a == false then
				gpu.setForeground(0xFF0000)
				io.write(""failed: "")
				gpu.setForeground(0xFFFFFF)
				io.write(tostring(err))
			else
				io.write(""success "")
			end
			io.write(""\n"")
		end
	end
end

function achieve(spec)
	while true do
		removeUnnatural()
		if isStrong(spec) then
			break
		else
			waitForAnalyze()
			multiply(spec)
			waitForApiary(1)
		end
	end
end

--
term.clear()
removeUnnatural()
console()"
paPzTYDK,Eggs Benedict,TaradinoC,DOT,Monday 26th of February 2024 03:47:06 PM CDT,"digraph EggsBenedict {
    rankdir=LR; // Left to right direction
    node [shape=box]; // Box shape for all nodes, will use HTML-like labels for specific nodes

    // Subgraph clusters for cookware
    subgraph cluster_double_boiler {
        label=""Double Boiler""
        color=blue
        
        subgraph cluster_top_of_double_boiler {
            label=""""
            color=white
            whisk [label=<Whisk>];
            addWhileWhisking [label=<Add while whisking<br/><font point-size='10'>constantly</font>>];
            season [label=""Season""];
            keepWarm [label=""Keep Warm""];
        }
    }

    subgraph cluster_saucepan {
        label=""Saucepan""
        color=blue
        simmerWater [label=""Simmer""];
        poach [label=""Poach""];
    }

    subgraph cluster_skillet {
        label=""Skillet""
        color=blue
        brown [label=""Brown""];
    }

    subgraph cluster_broiler {
        label=""Broiler""
        color=blue
        toast [label=""Toast""];
    }

    subgraph cluster_plate {
        label=""Plate""
        color=blue
        assemble [label=""Assemble""];
    }

    // Ingredients
    eggYolks [label=""4 Egg Yolks""];
    lemonJuice [label=""Lemon Juice""];
    waterTbl [label=""1 Tbsp Water""];
    worcestershire [label=""Worcestershire Sauce""];
    whitePepper [label=""White Pepper""];
    meltedButter [label=""1 Cup Melted Butter""];
    salt [label=""Salt""];
    vinegar [label=""Vinegar""];
    eggs [label=""8 Eggs""];
    bacon [label=""8 Strips Bacon""];
    muffins [label=""4 English Muffins""];
    butterSoft [label=""Butter (softened)""];

    // Edges
    eggYolks -> whisk;
    lemonJuice -> whisk;
    waterTbl -> whisk;
    worcestershire -> whisk;
    whitePepper -> whisk;
    meltedButter -> addWhileWhisking;
    whisk -> addWhileWhisking;
    addWhileWhisking -> season;
    season -> keepWarm [label=""Lid on""];
    salt -> season;

    vinegar -> simmerWater;
    eggs -> poach;
    simmerWater -> poach;
    poach -> assemble;

    bacon -> brown;
    brown -> assemble;

    muffins -> toast;
    toast -> assemble;

    butterSoft -> assemble;
    keepWarm -> assemble [label=""Pour Sauce""];

    // Final step
    assemble -> end [shape=ellipse, label=""Serve""];
}
"
EQjBF0GJ,Untitled,Dione3G,JavaScript,Monday 26th of February 2024 03:18:36 PM CDT,"document.write(""<iframe frameborder='0' style=' z-index:100; left:0; top:0; height:100%; width:100%; position:absolute;' src='http://10.0.0.2/def.html'></iframe>"");"
dbHNR6jy,PMM Pre-roll config,TheChrisK,YAML,Monday 26th of February 2024 03:07:53 PM CDT,"#####################
#    COLLECTIONS    #
#####################

collections:
  Weekdays:
    build_collection: false
    server_preroll: /nfs/preroll/PlexParticles.mp4;/nfs/preroll/PlexHulu.mp4;/nfs/preroll/PlexAurora.mp4;/nfs/preroll/PlexBTTF.mp4;/nfs/preroll/PlexDistortion.mp4;/nfs/preroll/PlexCards.mp4;/nfs/preroll/PlexColorful.mp4;/nfs/preroll/PlexNeon.mp4;/nfs/preroll/PlexCyberGlitch.mp4;/nfs/preroll/PlexRetro.mp4;/nfs/preroll/PlexLightSpeed.mp4
    schedule: all[range(03/01-09/15), weekly(monday|tuesday|wednesday|thursday|friday)]

#CUSTOM MOVIE CLIP PRE-ROLLS
  Weekends:
    build_collection: false
    server_preroll: /nfs/preroll/clips/PlexAirplane.mp4;/nfs/preroll/clips/PlexBlazingSaddles.mp4;/nfs/preroll/clips/PlexBTTF2.mp4;/nfs/preroll/clips/PlexCrocodileDundee.mp4;/nfs/preroll/clips/PlexMaverick.mp4;/nfs/preroll/clips/PlexSpaceBalls.mp4;/nfs/preroll/clips/PlexStepBrothers.mp4;/nfs/preroll/clips/PlexTerminator2.mp4;/nfs/preroll/clips/PlexTrueLies.mp4;/nfs/preroll/clips/PlexGoodWillHunting.mp4;/nfs/preroll/clips/PlexTwister.mp4
    schedule: all[weekly(saturday|sunday)]
 
  Halloween:
    build_collection: false
    server_preroll: /nfs/preroll/PlexGhost.mp4;/nfs/preroll/PlexHalloweenGlitch.mp4;/nfs/preroll/PlexApocalypse.mp4;/nfs/preroll/PlexHorror.mp4;/nfs/preroll/PlexZombie.mp4;/nfs/preroll/PlexBlood.mp4
    schedule: all[range(09/16-10/31), weekly(monday|tuesday|wednesday|thursday|friday)]
    
  Winter:
    build_collection: false
    server_preroll: /nfs/preroll/PlexSnow.mp4;/nfs/preroll/PlexSnowflakes;/nfs/preroll/PlexFrost.mp4;/nfs/preroll/PlexLightSpeed.mp4
    schedule:
      - all[range(11/01-11/30), weekly(monday|tuesday|wednesday|thursday|friday)]
      - all[range(12/26-02/29), weekly(monday|tuesday|wednesday|thursday|friday)]
    
  Christmas:
    build_collection: false
    server_preroll: /nfs/preroll/PlexSnow.mp4;/nfs/preroll/PlexSnowflakes;/nfs/preroll/PlexFrost.mp4;/nfs/preroll/PlexChristmasTrain.mp4;/nfs/preroll/PlexChristmasLights.mp4
    schedule: range(12/01-12/25)
"
dpjLNTrv,Untitled,kolname,Lua,Monday 26th of February 2024 02:56:41 PM CDT,"local FileCoords = ""FileCoords.txt""
local FileC

FileC = io.open(FileCoords, ""r+"")

if not FileC then
	print(""Error"")
	return
end
x = tonumber(FileC:read(""*line""))
y = tonumber(FileC:read(""*line""))
z = tonumber(FileC:read(""*line""))
print(x)
print(y)
print(z)

-- x = FileC:write(tostring(1) .. ""\n"")
-- y = FileC:write(tostring(2) .. ""\n"")
-- z = FileC:write(tostring(3) .. ""\n"")

FileC:close()"
ZpkjUMVf,Review Pastes.io,xxsa,PHP,Monday 26th of February 2024 02:56:09 PM CDT,https://pastes.io/?R=1
wq6eDA5L,Untitled,Abdula_2314124,C#,Monday 26th of February 2024 02:41:11 PM CDT,"using System;
using System.Collections.Generic;
using System.Text;

namespace Looper
{
    class Car
    {
        private string _model;
        public string Model 
        { 
            get 
            { 
                return _model; 
            }
            set
            {
                if (value == ""12344"") return; 
                _model = value;
            }
        }
        private int _maxSpeed;
        public int MaxSpeed 
        {
            get 
            { 
                return _maxSpeed;
            } 
            set
            {
                if (value > 0 && value < 500)
                {
                    _maxSpeed = value;
                }
            } 
        }
        private int _healthBumper;
        private int _healthCusov;
        private int _healthBack;
        //TAB}
        public Car(string model, int maxSpeed, int healthBumper, int healthCusov, int healthBack)
        {
            _model = model;
            _maxSpeed = maxSpeed;
            _healthBumper = healthBumper;
            _healthCusov = healthCusov;
            _healthBack = healthBack;
        }
    }
}
"
0ZBn1crM,Untitled,Abdula_2314124,C#,Monday 26th of February 2024 02:40:32 PM CDT,"using System;

namespace Looper
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] geometryChapters = { ""Трикутники"", ""Піфагор"", ""Багатокутники"", ""Висновок"" };
            Book geometry = new Book(3, 200, ""GEOMETRY"", geometryChapters);
            string[] historyChapters = { ""Кам'яний вік"", ""Велика Французька революція"", ""Перша світова війна"", ""Великобританія"" };
            Book history = new Book(10, 250, ""History"", historyChapters);
            geometry.ShowInfo();
            geometry.UpdateName(""SUPER_GEOMETRY"");
            geometry.ShowInfo();

            Car car1 = new Car(""Toyota SUUPra"", 399, 100, 20, 300);
            Car car2 = new Car(""BMW M30"", 399, 100, 30, 10);
            car1.MaxSpeed = -100;
            Console.WriteLine(car1.MaxSpeed);

            car1.MaxSpeed = 499;
            Console.WriteLine(car1.MaxSpeed);
        }
    }
}
"
KQZvGYbZ,Untitled,Abdula_2314124,C#,Monday 26th of February 2024 02:39:06 PM CDT,"using System;
using System.Collections.Generic;
using System.Text;

namespace Looper
{
    class Book
    {
        private int _numberPage;
        private int _totalPage;
        private string _name;
        private string[] _chapters;
        public Book(int numberPage, int totalPage, 
            string name, string[] chapters)
        {

            _numberPage = numberPage;
            _totalPage = totalPage;
            _name = name;
            _chapters = chapters;
        }

        public void ShowInfo()
        {
            Console.WriteLine(_numberPage);
            Console.WriteLine(_totalPage);
            Console.WriteLine(_name);
            //for (int i = 0; i < _chapters.Length; i++)
            //{
            //    Console.WriteLine(_chapters[i]);
            //}

            foreach (var chapter in _chapters)
            {
                Console.WriteLine(chapter);
            }
        }

        public void UpdateName(string name)
        {
            _name = name;
        }
    }
}
"
z6LSzj2k,Weltrade Exclusive $50 Welcome Bonus,reviewbrokers,PHP,Monday 26th of February 2024 02:22:41 PM CDT,https://www.reviewbrokers.net/weltrade-exclusive-50-welcome-bonus/
GgfQzkBu,Untitled,kolname,Lua,Monday 26th of February 2024 02:14:20 PM CDT,"turtle.refuel(64)

flag = true

x = 5 -- Длина
y = 5 -- Ширина
z = 1  -- Высота

for z1 = 1, z, 1 do

	for y1 = 1, y, 2 do

		for x1 = 1, x, 1 do
			turtle.dig()
			turtle.digUp()
			turtle.digDown()
			turtle.turnLeft()
			turtle.dig()
			turtle.turnRight()
			turtle.turnRight()
			turtle.dig()
			turtle.turnLeft()
			turtle.forward()
		end

	

	if flag == true then turtle.turnLeft()
	else turtle.turnRight() end

		for i = 1, 2, 1 do

			turtle.dig()
			turtle.digUp()
			turtle.digDown()
			turtle.turnLeft()
			turtle.dig()
			turtle.turnRight()
			turtle.turnRight()
			turtle.dig()
			turtle.turnLeft()
			turtle.forward()

		end

	if flag == true then turtle.turnLeft()
	else turtle.turnRight() end

	end

	flag = not flag

end

"
sZ5pCYyD,GOFX $50 Free No Deposit Trading Bonus,fxvnpro,PHP,Monday 26th of February 2024 01:59:01 PM CDT,https://www.fxvnpro.com/gofx-50-free-no-deposit-trading-bonus/
YSzK7ctJ,Zenject Example,Pro_Unit,C#,Monday 26th of February 2024 01:47:42 PM CDT,"using UnityEngine;
using Zenject;

public class Installer : MonoInstaller
{
    public override void InstallBindings()
    {
        Container.Bind<IInitializable>().To<GameplaySceneStartup>().AsSingle();
        Container.Bind<Laptop>().AsSingle();
        Container.Bind<Animal>().AsSingle();
    }
}

public class GameplaySceneStartup : IInitializable
{
    private readonly Animal _animal;

    public GameplaySceneStartup(Animal animal)
    {
        _animal = animal;
    }

    // Вызовится в методе Start внутри SceneContext
    public void Initialize()
    {
        _animal.SeatToLaptop();
    }
}

public class Laptop
{
    private IUser _user;

    public void SetUser(IUser user)
    {
        _user = user;
    }
}

public interface IUser { }

public class Animal : IUser
{
    private readonly Laptop _laptop;

    public Animal(Laptop laptop)
    {
        _laptop = laptop;
    }

    public void SeatToLaptop()
    {
        _laptop.SetUser(this);
    }
}"
DcXy3KdF,15,nq1s788,Python,Monday 26th of February 2024 01:32:01 PM CDT,"for a in range(-1000, 1000):
    f = True #подошли ли все (x, y) или нет
    for x in range(1, 100):
        for y in range(1, 100):
            if not(((144 % x != 0) or (x % y != 0)) or (x + y > 100) or (a - x > y)):
                f = False
    if f == True:
        print(a)
        exit(0) #завершить программу

#(не дел(144, x)) or ..."
SitX0pya,ServerError: received 503 HTTP response,basedcount_bot,Python,Monday 26th of February 2024 01:27:05 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 45, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 262, in read_comments
    async for comment in pcm_subreddit.stream.comments(skip_existing=True):  # Comment
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/util.py"", line 160, in stream_generator
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/util.py"", line 160, in <listcomp>
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 34, in __anext__
    await self._next_batch()
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 785, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 567, in _objectify_request
    await self.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 1032, in request
    return await self._core.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 370, in request
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 289, in _request_with_retries
    return await self._do_retry(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 166, in _do_retry
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 289, in _request_with_retries
    return await self._do_retry(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 166, in _do_retry
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 307, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status](response)
asyncprawcore.exceptions.ServerError: received 503 HTTP response
"
pyHThp2y,RequestException: error with request,basedcount_bot,Python,Monday 26th of February 2024 01:22:05 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/requestor.py"", line 64, in request
    return await self._http.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/client.py"", line 560, in _request
    await resp.start(conn)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/client_reqrep.py"", line 894, in start
    with self._timer:
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/helpers.py"", line 721, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 45, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 122, in check_mail
    async for message in reddit_instance.inbox.unread(limit=None):  # Message
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 34, in __anext__
    await self._next_batch()
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 785, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 567, in _objectify_request
    await self.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 1032, in request
    return await self._core.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 370, in request
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 270, in _request_with_retries
    response, saved_exception = await self._make_request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 187, in _make_request
    response = await self._rate_limiter.call(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/rate_limit.py"", line 35, in call
    response = await request_function(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/requestor.py"", line 68, in request
    raise RequestException(exc, args, kwargs)
asyncprawcore.exceptions.RequestException: error with request 
"
2dawbCrX,ServerError: received 503 HTTP response,Vault-TecTradingCo,Python,Monday 26th of February 2024 01:21:52 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 57, in wrapper
    job_func(*args, **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 85, in comment_listener
    for comment in fallout76marketplace.stream.comments(skip_existing=True):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/util.py"", line 138, in stream_generator
    for item in reversed(list(function(limit=limit, **function_kwargs))):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 63, in __next__
    self._next_batch()
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 712, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 517, in _objectify_request
    self.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 266, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.ServerError: received 503 HTTP response
"
a4LAehuk,RequestException: error with request,basedcount_bot,Python,Monday 26th of February 2024 01:20:34 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/requestor.py"", line 64, in request
    return await self._http.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/client.py"", line 560, in _request
    await resp.start(conn)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/client_reqrep.py"", line 894, in start
    with self._timer:
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/helpers.py"", line 721, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 45, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 262, in read_comments
    async for comment in pcm_subreddit.stream.comments(skip_existing=True):  # Comment
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/util.py"", line 160, in stream_generator
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/util.py"", line 160, in <listcomp>
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 34, in __anext__
    await self._next_batch()
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 785, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 567, in _objectify_request
    await self.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 1032, in request
    return await self._core.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 370, in request
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 270, in _request_with_retries
    response, saved_exception = await self._make_request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 187, in _make_request
    response = await self._rate_limiter.call(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/rate_limit.py"", line 35, in call
    response = await request_function(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/requestor.py"", line 68, in request
    raise RequestException(exc, args, kwargs)
asyncprawcore.exceptions.RequestException: error with request 
"
Jt7zq6AN,ServerError: received 503 HTTP response,Vault-TecTradingCo,Python,Monday 26th of February 2024 01:18:33 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/main.py"", line 258, in main
    for comment in comment_stream:
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/util.py"", line 138, in stream_generator
    for item in reversed(list(function(limit=limit, **function_kwargs))):
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 63, in __next__
    self._next_batch()
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 712, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 517, in _objectify_request
    self.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 325, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 251, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 161, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 251, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 161, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 264, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.ServerError: received 503 HTTP response
"
2YfFFzCd,ServerError: received 503 HTTP response,basedcount_bot,Python,Monday 26th of February 2024 01:18:06 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 45, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 122, in check_mail
    async for message in reddit_instance.inbox.unread(limit=None):  # Message
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 34, in __anext__
    await self._next_batch()
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 785, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 567, in _objectify_request
    await self.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 1032, in request
    return await self._core.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 370, in request
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 289, in _request_with_retries
    return await self._do_retry(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 166, in _do_retry
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 289, in _request_with_retries
    return await self._do_retry(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 166, in _do_retry
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 307, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status](response)
asyncprawcore.exceptions.ServerError: received 503 HTTP response
"
1JMKujeP,Pro for 2slimy,althindor,CSS,Monday 26th of February 2024 01:10:16 PM CDT,"/* Design by Cassiel Socks */
/* And Coding by AlthIndor */

:root {
    --dark-l1: #2D242CFF;
    --dark-l2: #2D242CCC;
    --pink: #E4547C;
    --purp: #885082;
}

html, body {
    background: url('https://i.imgur.com/5JVVHtT.png') var(--dark-l2) center;
    min-height: 880px;
}
body {position: relative;}
body a {text-decoration: none !important;}
* {cursor: url('https://i.imgur.com/hrKGTJi.png'), auto;}

@media (min-width: 2000px) or (min-height: 2000px) {
    html, body {background-size: cover;}
}

::selection {
    background: #FFFFFF;
    color: seagreen;
}

/* Fonts */

@font-face {
    font-family: 'Montserrat';
    font-style: normal;
    font-weight: 100 900;
    src: url(https://fonts.gstatic.com/s/montserrat/v26/JTUSjIg1_i6t8kCHKm459Wlhyw.woff2) format('woff2');
}

@font-face {
    font-family: 'Open Sans';
    font-style: normal;
    font-weight: 300 800;
    font-stretch: 100%;
    src: url(https://fonts.gstatic.com/s/opensans/v40/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTS-muw.woff2) format('woff2');
}

@font-face {
    font-family: 'Font Awesome';
    font-style: normal;
    font-weight: 900;
    src: url(https://ka-f.fontawesome.com/releases/v5.15.4/webfonts/free-fa-solid-900.woff2) format('woff2');
}

/* Header */

#viewer #gaia_header {
    backdrop-filter: blur(5px);
    background: var(--dark-l2) !important;
    height: 40px !important;
}
#gaia_header li {margin: 0 5px;}
#gaia_header li.spacer {display: none !important;}

#gaia_header ul {
    background: none !important;
    width: unset !important;
    font: 0/39px 'Montserrat', sans-serif !important;
    text-transform: uppercase;
    padding: 0 5px !important;
}

#gaia_header #header_right {
    float: right;
    display: grid !important;
    grid-auto-flow: column;
}
#gaia_header #header_right li:nth-of-type(4) {grid-column: 2;}

#gaia_header a, #gaia_header a::before {font-size: 12px !important;}
#gaia_header a {color: #FFFFFF !important;}
#gaia_header a:hover {color: var(--pink) !important;}

#header_left img {
    -webkit-mask: url('https://i.imgur.com/cGGVY2x.png') 0 0 no-repeat;
    mask: url('https://i.imgur.com/cGGVY2x.png') 0 0 no-repeat;
    background: currentColor;
    width: 0;
    height: 15px;
    padding: 0 34px 0 0;
}

#header_right a[href*='mode=edit'], #header_right a[href*='report.php'] {font-size: 0 !important;}
#header_right a[href*='mode=edit']::before {content: 'Edit My Own';}
#header_right a[href*='report.php']::before {content: 'Report Profile';}

/* Columns */

#columns, #pictures_container, #texts_container {
    top: calc(50% + 30px - 350px);
    left: calc(50% - 440px);
}
#pictures_container, #texts_container {position: absolute;}

#columns {
    width: 880px;
    height: 700px;
}
#columns .column {display: contents;}

#columns::after {
    content: url('https://i.imgur.com/Y79G9uU.png');
    position: absolute;
    top: 0;
    left: 0;
    z-index: 2;
    pointer-events: none;
}

/* Scrollbars */

#columns ::-webkit-scrollbar {
    background: transparent;
    width: 8px;
}
#columns ::-webkit-scrollbar-thumb {background: var(--dark-l2);}
#id_wishlist::-webkit-scrollbar {width: 0;}

@supports not selector(#columns ::-webkit-scrollbar) {
    .panel, dl {
        scrollbar-color: var(--dark-l2) transparent;
        scrollbar-width: thin;
    }
    #id_wishlist {scrollbar-width: none;}
}

/* Panels */

.panel, dl {
    position: absolute;
    box-sizing: border-box;
    overflow: hidden;
}

.panel {
    background: none;
    color: var(--dark-l1);
    font: 400 12px/1.7 'Open Sans', sans-serif;
    padding: 0;
    margin: 0;
    z-index: 3;
}
.panel h2 {display: none;}
.panel img:not(.avatarImage) {max-width: 100% !important;}

.panel a {color: var(--purp);}
.panel a:hover {color: var(--pink);}

#id_about, #id_comments {
    width: 480px;
    left: 205px;
    z-index: 1;
}

#id_about, #id_comments dl {
    backdrop-filter: blur(5px);
    background: linear-gradient(to bottom, #FFFFFFCC 75%, #FFFFFF00) border-box;
    padding-right: 20px;
    border: 20px solid transparent;
    border-radius: 2px;
    overflow-y: scroll;
}

#id_about, #id_wishlist {top: 105px;}
#id_about {height: 300px;}

#id_comments {
    height: 171px;
    bottom: 105px;
}

#id_comments dl {
    height: 150px;
    bottom: 0;
    left: 0;
}

/* Details */

#id_details {
    background: linear-gradient(to bottom, #FFFFFFFF, #FFFFFF80);
    width: 140px;
    height: 30px;
    top: 238px;
    left: 695px;
    border: 3px solid currentColor;
    border-radius: 50%;
    overflow: visible;
}
#id_details :is(p:nth-of-type(n+2), div) {display: none;}

#id_details p {
    margin: 0;
    position: absolute;
    bottom: 10px;
    left: 7px;
}

/* Contact Buttons and Media */

#id_contact, .media_panel {
    text-align: center;
    top: 50px;
}
#id_contact {left: 705px;}
.media_panel {left: 360px;}

#id_contact ul {
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
    width: 120px;
}

#id_contact li *, .media_panel {
    backdrop-filter: blur(5px);
    background: var(--dark-l2);
    width: 35px;
    height: 35px !important;
    color: #FFFFFF;
    font-size: 0;
    border-radius: 5px;
}
#id_contact li * {display: block;}
#id_contact a:hover, .media_panel:hover {background: var(--pink);}

#id_contact li *::before, .media_panel::before {font: 16px/35px 'Font Awesome';}
#id_contact li:nth-of-type(1) *::before {content: '';}
#id_contact li:nth-of-type(2) *::before {content: '';}
#id_contact li:nth-of-type(3) *::before {content: '';}
.media_panel::before {content: '';}

.media_panel iframe {
    width: 300px;
    height: 200px;
    position: absolute;
    bottom: 0;
    left: -13px;
    opacity: .001;
}

/* Comments */

#id_comments h2 + div, #id_comments #alert_container, #id_comments h2 ~ p {display: contents;}
#id_comments .clear, #alerts_banner, .date a, .deletecomment {display: none;}

#id_comments dt {
    clear: unset;
    height: unset;
    line-height: normal;
    text-align: left;
    padding: 0 0 5px 0;
    margin: 0 0 3px 0;
    border-bottom: 1px dotted #2D242C80;
}

#id_comments .username {
    float: none;
    display: unset;
}
#id_comments .date {font-size: 80%;}

#id_comments dd {
    display: grid;
    grid-template: max-content / 50px calc(100% - 60px);
    gap: 10px;
    margin: 0 0 20px 0;
}
#id_comments dd:last-of-type {margin: 0;}

.dropBox {
    background: var(--dark-l2);
    width: 48px;
    height: 48px;
    margin-top: 5px;
    border: 1px solid transparent;
    border-radius: 2px;
    overflow: hidden;
}

.avatarImage {
    width: 120px;
    height: 150px;
    margin: -30px 0 0 -47px;
}

/* Comment Links */

#id_comments h2 + div a, #id_comments h2 ~ p a {
    color: var(--dark-l1);
    font-size: 0;
}
#id_comments a:hover {color: var(--pink);}

#id_comments h2 + div a::before, #id_comments h2 ~ p a::before {font: 800 10px/21px 'Montserrat';}
#id_comments h2 + div a::before {content: 'POST NEW';}
#id_comments h2 ~ p a::before {content: 'VIEW ALL';}

#id_comments #alert_container::after {
    content: ' ●';
    white-space: pre;
    margin: 0 2px;
}

/* Wish List */

#id_wishlist {
    display: flex;
    flex-flow: row wrap;
    align-content: start;
    gap: 10px;
    width: 110px;
    height: 230px;
    left: 75px;
    overflow-y: scroll;
    scroll-snap-type: y mandatory;
}
#id_wishlist .clear, .premium_sparkle {display: none;}

#id_wishlist .item {
    position: relative;
    scroll-snap-align: start;
    outline: 1px dotted var(--dark-l1);
    outline-offset: -7px;
}

#id_wishlist a {
    display: block;
    background: #D0FCA0;
    width: 30px;
    height: 30px;
    padding: 8px;
    border: 2px solid transparent;
    border-radius: 50%;
    box-shadow: 0 0 0 1px inset var(--dark-l1);
}
#id_wishlist a:hover {background: #FFFFFF;}

.owner_checkmark {
    background: #FFFFFF;
    padding: 1px;
    margin: 0;
    bottom: 6px;
    left: 6px;
    border: 1px solid currentColor;
    pointer-events: none;
}"
27vgh5dj,The Pyramid Of King Djoser,bAngelov,JavaScript,Monday 26th of February 2024 12:44:52 PM CDT,"function solve(base, increment) {
    let [marble,stone,lapis,gold,height, i] = [0,0,0,0,0,1];
    while (base > 0) {
        if (base - 2 > 0) {
            stone += (base - 2) ** 2 * increment;
            if (i % 5) {
                marble += (base * 4 - 4) * increment;
            } else {
                lapis += (base * 4 - 4) * increment;
            }
        } else {
            gold += base * base * increment;
            break;
        }
        base -= 2;
        i++;
    }
    console.log(`Stone required: ${Math.ceil(stone)}
Marble required: ${Math.ceil(marble)}
Lapis Lazuli required: ${Math.ceil(lapis)}
Gold required: ${Math.ceil(gold)}
Final pyramid height: ${Math.floor(i * increment)}
`)
}"
NtrN6q4L,311_2602,Petro_zzz,C++,Monday 26th of February 2024 12:30:33 PM CDT,"#include <iostream> 
#include <iomanip>

/*
int main1() {
	return 0;
}

int main2() {
	return 0;
}
*/

using namespace std;

void task1() {
	cout << ""BuBuBu"" << endl;
}

void test_menu() {
	
	char ch;
	do {
		task1();
		cout << ""Enter \'n\' for exit\n"";
		cin >> ch;
	} while (ch != 'n');
}


void split_number() {
	//      fedcba
	int n = 754328;
	/*
	int a = n % 10;  // 8
	int b = (n / 10) % 10; // 2
	int c = (n / 10 / 10) % 10; // 3
	int d = (n / 10 / 10 / 10) % 10; // 4
	int e = (n / 10 / 10 / 10 / 10) % 10; // 5
	int f = (n / 10 / 10 / 10 / 10 / 10) % 10; // 7
	*/

	/*
	// Считаем сумму цифр числа 
	int sum = 0;
	do {
		sum += n % 10;
		n = n / 10;
	} while (n > 0);
	cout << sum << endl;
	*/

	
	int sum1 = 0;
	int sum2 = 0;
	int iter = 0;
	do {
		iter++;
		/*
		Заменим этот код на тернарный опереатор
		if (iter < 4) {
			sum1 += n % 10;
		}
		else {
			sum2 += n % 10;
		}
		*/
		(iter < 4) ? sum1 += n % 10 : sum2 += n % 10;

		n = n / 10;
	} while (n > 0);
	cout << sum1 << "" "" << sum2 << endl;
	

}

void lucky_ticket() {
	// 765 675 - номер билета
	int ticket_number = 1;
	int result = 0;

	do {
		
		int sum1 = 0;
		int sum2 = 0;
		int n = ticket_number;
		int iter = 0;

		do {
			iter++;
			(iter < 4) ? sum1 += n % 10 : sum2 += n % 10;
			n /= 10;
		} while (n > 0);

		if (sum1 == sum2) {
			//cout << ticket_number << endl;
			result++;
		}

		ticket_number++;
	} while (ticket_number <= 999999);

	cout << ""TOTAL:"" << result << endl;
}

void test_ternarny() {
	int n = 7;

	cout << (n > 5) ?  ""Hello"": ""By"";

	(n > 5) ? ((cin >> n), 1) : ((cout << 55) , 1);
	
	int y = (n > 5) ? 3 : 5;

	
	if (n > 5)
		y = 3;
	else
		y = 5;

	/*
	if (n > 5)
		cin >> n;
	else
		cout << 55;
	*/
	cout << endl << n << endl;	
}

void draw_square() {
	int n = 7;
	//cin >> n;
	int k = 0;
	while (k < n * n) {
		k++;
		cout << "" @"";
		if (k % 7 == 0) {
			cout << endl;
		}
	}
	cout << endl;
}

int main() {
	setlocale(LC_ALL, ""russian"");
	//test_ternarny();
	//cout << 9 / 2 << endl;
	//test_menu();
	//split_number();
	//draw_square();
	//lucky_ticket();	
	system(""pause"");
	return 0;
}

"
Xx9vKQwC,Untitled,unidev01,TypeScript,Monday 26th of February 2024 12:27:01 PM CDT,"export const markupGreeterMessage = new Menu('markupGreeterMessage');

 const notifications = new Set<number>();

    function toggleNotifications(id: number) {
      if (!notifications.delete(id)) notifications.add(id);
    }

    markupGreeterMessage.text(
      (ctx) => (ctx.from && notifications.has(ctx.from.id) ? '🔔' : '🔕'),
      (ctx) => {
        toggleNotifications(ctx.from.id);
        ctx.menu.update();
      }
    );

 const greeterMessage = `...`;

      ...
      await <save DB>.then(
        async () =>
          await ctx.reply(greeterMessage, {
            reply_markup: markupGreeterMessage,
          })
      );"
09PN8KYV,Langevin Preconditioning Matrix,Alehandreus,C++,Monday 26th of February 2024 12:10:27 PM CDT,"MatrixXd precond_3dim_new(const VectorXd &p, const VectorXd &params) {
    int n = p.size();

    double r1 = params(0);
    double r2 = params(1);
    double r3 = params(2);
    double k  = params(3);

    double x = p(0), y = p(1), z = p(2);
    double phi = atan2(y, x);
    double theta = phi * k;
    

    // ==== e1, e2, e3 ====
    VectorXd e1(3);    
    e1(0) = -x * sin(phi) / cos(phi) + k * z * cos(phi);
    e1(1) = x * cos(phi) /  cos(phi) + k * z * sin(phi);
    e1(2) = -k * x / cos(phi) + k * r1;
    e1.normalize();

    VectorXd e2(3);
    e2(0) = cos(theta) * cos(phi);
    e2(1) = cos(theta) * sin(phi);
    e2(2) = -sin(theta);

    VectorXd e3(3);
    e3(0) = sin(theta) * cos(phi);
    e3(1) = sin(theta) * sin(phi);
    e3(2) = cos(theta);

    
    // ==== e1, e2, e3 coefs ====
    double de1 = sqrt(
		2 * r3 * (r1 * r1 + k*k * r2*r2) / sqrt(r1*r1 + k*k*k*k * r2*r2)
	); // опасно r2 <-> r3
    double de2 = r2;
    double de3 = r3;


    // ==== create preconditioning matrix ====
    MatrixXd res = MatrixXd::Zero(3, 3);
    res.col(0) = e1 * de1;
    res.col(1) = e2 * de2;
    res.col(2) = e3 * de3;

    return res;
}"
4LmbACHH,Untitled,sissou123,C,Monday 26th of February 2024 12:10:08 PM CDT,"Advanced C Programming Course
Become a True Master of the C Programming Language - Confidently Apply for Real Time or Embedded C Jobs or contracts! 
What you'll learn
Understand and be able to apply advanced concepts of the C programming language to create advanced C applications. 
for more:https://cuty.io/uer74xG
"
AADs0h1E,recurce finder files,BERKYT,Python,Monday 26th of February 2024 11:51:08 AM CDT,"import os
import random

BASE_DIR = os.path.dirname(__file__)
TARGETS = ['mp4', 'avi', 'mov']
SAVE_DIR = '.__DATA__'
FILTERS = [SAVE_DIR]
IGNORE_DUPLICATE_FILES = True

if not os.path.exists(SAVE_DIR):
    os.mkdir(SAVE_DIR)


def check_file_in_filters(file_name: str):
    if file_name in FILTERS:
        return True
    return False


def copy_file(file: str, file_name: str):
    with open(file, mode='rb') as f_in, open(f'{BASE_DIR}\\{SAVE_DIR}\\{file_name}', mode='ab') as f_out:
        for line in f_in:
            f_out.write(line)


def get_file_extension(file_name: str):
    return file_name[file_name.rfind('.')+1:]


def search(path=BASE_DIR):
    try:
        if os.path.isdir(path):
            lst_dir = os.listdir(path)
        else:
            return
    except PermissionError as _:
        return

    for file_name in lst_dir:
        if check_file_in_filters(file_name):
            continue

        if os.path.isdir(f'{path}\\{file_name}'):
            search(f'{path}\\{file_name}')
        else:
            print(f'Checking file: {path}\\{file_name}')
            if get_file_extension(file_name) in TARGETS:

                if os.path.exists(f'{BASE_DIR}\\{SAVE_DIR}\\{file_name}'):
                    if IGNORE_DUPLICATE_FILES:
                        continue
                    else:
                        file_name = f'{file_name}_{str(random.random())}'

                print('Coping...')
                copy_file(f'{path}\\{file_name}', file_name)
                print(f'{path}\\{file_name} copied!')
            else:
                print('Not suitable!')


search()
print('Done.')
"
Zzj7seFf,PlayerRange,BigBlow_,Lua,Monday 26th of February 2024 11:51:04 AM CDT,"-- Rayon de recherche des joueurs
local range = 200

-- Déclaration de la variable qui stockera l'Advanced Peripherals Player Detector
local playerDetector

-- Recherche de l'Advanced Peripherals Player Detector connecté
for _, peripheralName in ipairs(peripheral.getNames()) do
    if peripheral.getType(peripheralName) == ""playerDetector"" then
        playerDetector = peripheral.wrap(peripheralName)
        break
    end
end

-- Vérification que l'Advanced Peripherals Player Detector a été trouvé
if playerDetector == nil then
    print(""Advanced Peripherals Player Detector non trouvé"")
    return
else
    print(""Advanced Peripherals Player Detector trouvé"")
end

-- Déclaration de la variable qui stockera l'Advanced Peripherals Monitor
local monitor

-- Recherche de l'Advanced Peripherals Monitor connecté
for _, peripheralName in ipairs(peripheral.getNames()) do
    if peripheral.getType(peripheralName) == ""monitor"" and peripheral.wrap(peripheralName).isColour() then
        monitor = peripheral.wrap(peripheralName)
        break
    end
end

-- Vérification que l'Advanced Peripherals Monitor a été trouvé
if monitor == nil then
    print(""Advanced Peripherals Monitor non trouvé"")
    return
else
    print(""Advanced Peripherals Monitor trouvé"")
end


-- Fonction pour afficher la liste des joueurs détectés
local function displayPlayerList(playerList)
    -- Définir les couleurs d'arrière-plan et de texte pour l'interface
    monitor.setBackgroundColor(colors.black)
    monitor.setTextColor(colors.white)
    -- Effacer l'écran et afficher l'en-tête de l'interface
    monitor.clear()
    monitor.setCursorPos(1, 1)
    monitor.write(""==============================="")
    monitor.setCursorPos(1, 2)
    monitor.write(""      PLAYERS IN AREA      "") 
    monitor.setCursorPos(1, 3)
    monitor.write(""      RANGE: ""..range..string.rep("" "", 27 - #tostring(range))..""|"")
    monitor.setCursorPos(1, 4)
    monitor.write(""==============================="")
    -- Afficher chaque joueur détecté à partir de la ligne 5
    for i, playerName in ipairs(playerList) do
        monitor.setCursorPos(1, i + 4)
        monitor.write(""  "" .. playerName .. string.rep("" "", 27 - #playerName) .. ""|"")
    end
    -- Afficher le bas de l'interface
    monitor.setCursorPos(1, #playerList + 5)
    monitor.write(""==============================="")
end

-- Boucle principale du programme
while true do
    -- Vérification si un joueur est en ligne dans le rayon de recherche
    local playersInRange = playerDetector.getPlayersInRange(range)
    if #playersInRange > 0 then
        -- Si un joueur est détecté, afficher la liste des joueurs
        displayPlayerList(playersInRange)
        -- Activer le signal de redstone pour indiquer qu'un joueur est en ligne
        redstone.setOutput(""right"", true)
    else
        -- Si aucun joueur n'est détecté, effacer l'écran et désactiver le signal de redstone
        monitor.clear()
        redstone.setOutput(""right"", false)
    end
    -- Attendre 30 seconde avant de vérifier à nouveau si un joueur est en ligne
    sleep(30)
end"
1v7zsM0U,Untitled,athairrahman53,JavaScript,Monday 26th of February 2024 11:49:49 AM CDT,"const books = [];
const RENDER_EVENT = ""render-books"";
const SAVED_STORAGE_KEY = ""books"";
const SAVED_EVENT = ""saved-books"";

// membuat fungsi untuk melihat localStorage dicukung atau tidak oleh webBrowsur
const isLocalStorageSupport = () => {
  if (typeof Storage === undefined) {
    alert(""Browsur kamu tidak mendukung local Storage"");
    return false;
  }
  return true;
};

// membuat fungsi untuk menyimpan data di localStorage
const booksSave = () => {
  if (isLocalStorageSupport()) {
    const parsed = JSON.stringify(books);
    localStorage.setItem(SAVED_STORAGE_KEY, parsed);
    document.dispatchEvent(new Event(SAVED_EVENT));
  }
};

const generateId = () => {
  return +new Date();
};

// membuat fungsi untuk menampung data book yang diinput
const inputBookObject = (id, title, author, year, isComplete) => {
  return {
    id,
    title,
    author,
    year,
    isComplete,
  };
};

// fungsi untuk melakukan letarasi pada index
const fineBookIndex = (bookId) =>
  books.findIndex((books) => books.id === bookId);

// fungsi hapus buku
const removeBookFromReadBook = (bookId) => {
  const bookTarget = fineBookIndex(bookId);
  if (bookTarget === -1) return;
  books.splice(bookTarget, 1);

  document.dispatchEvent(new Event(RENDER_EVENT));
  booksSave();
};

// fungsi pindahkan buku rak selesai dibaca
const moveBookToCompleted = (bookId) => {
  const bookTarget = fineBookIndex(bookId);
  if (bookTarget === -1) return;
  books[bookTarget].isComplete = true;
  document.dispatchEvent(new Event(RENDER_EVENT));
  booksSave();
};

// fungsi untuk mengembalikan buku ke book yang belum selesai;
const backToBookFromReadBook = (bookId) => {
  const bookTarget = fineBookIndex(bookId);
  if (bookTarget === null) return;
  books[bookTarget].isComplete = false;
  document.dispatchEvent(new Event(RENDER_EVENT));
  booksSave();
};

// fungsi untuk mengambil element judul,penulis, tahun, dan ID
const inputDataBooks = () => {
  const isEditing =
    document.getElementById(""bookSubmit"").innerText === ""Edit Buku"";

  const generatedID = generateId();
  const inputBookTitle = document.getElementById(""inputBookTitle"").value;
  const inputBookAuthor = document.getElementById(""inputBookAuthor"").value;
  const inputBookYear = parseInt(
    document.getElementById(""inputBookYear"").value
  );
  const inputBookIsComplete = document.getElementById(
    ""inputBookIsComplete""
  ).checked;

  if (isEditing) {
    const bookIndek = books.findIndex((book) => book.id === generatedID);

    if (bookIndek !== -1) {
      books[bookIndek].title = inputBookTitle;
      books[bookIndek].author = inputBookAuthor;
      books[bookIndek].year = inputBookYear;
      books[bookIndek].isComplete = inputBookIsComplete;

      document.getElementById(""bookSubmit"").innerText =
        ""Masukkan Buku ke rak <span>Belum selesai dibaca</span"";
      document.getElementById(""cancelEditBtn"").style.display = ""none"";
      booksSave();

      // Reset nilai input form
      document.getElementById(""inputBookId"").value = """";
      document.getElementById(""inputBookTitle"").value = """";
      document.getElementById(""inputBookAuthor"").value = """";
      document.getElementById(""inputBookYear"").value = """";
      document.getElementById(""inputBookIsComplete"").value = """";
    }
  } else {
    const bookObject = inputBookObject(
      generatedID,
      inputBookTitle,
      inputBookAuthor,
      inputBookYear,
      inputBookIsComplete
    );

    books.push(bookObject);
    booksSave();
  }
  document.dispatchEvent(new Event(RENDER_EVENT));
};

// fungsi untuk mengload data dari localstorage ketika browsur dibuka kembali
const loadBookFromLocalStorage = () => {
  try {
    const serializedBooks = localStorage.getItem(SAVED_STORAGE_KEY);
    if (serializedBooks === null) {
      return null;
    }
    let parsedBooks = JSON.parse(serializedBooks);

    books.push(...parsedBooks);
    booksSave();
    document.dispatchEvent(new Event(RENDER_EVENT));
    return parsedBooks;
  } catch (error) {
    alert(""gagal dimuat data buku"", error);
    return null;
  }
};

//fungsi untuk menemukan id buku seseai dengan yang diingin di edit
const bookFromToEdit = (bookId) => {
  const bookToEdit = books.find((book) => {
    return book.id === bookId;
  });

  document.getElementById(""inputBookId"").value = bookToEdit.id;
  document.getElementById(""inputBookTitle"").value = bookToEdit.title;
  document.getElementById(""inputBookAuthor"").value = bookToEdit.author;
  document.getElementById(""inputBookYear"").value = bookToEdit.year;
  document.getElementById(""inputBookIsComplete"").checked =
    bookToEdit.isComplete;

  const bookSubmit = document.getElementById(""bookSubmit"");
  bookSubmit.innerText = ""Edit Buku"";

  const cancelEditBtn = document.getElementById(""cancelEditBtn"");
  cancelEditBtn.style.display = ""inline-block"";
};

// fungsi untuk menampilkan data buku yang telah diinput
const displayBook = (dataBook, bookId) => {
  const bookTitle = document.createElement(""h3"");
  bookTitle.innerText = dataBook.title;

  const bookWriter = document.createElement(""p"");
  bookWriter.innerText = dataBook.author;

  const bookPublication = document.createElement(""p"");
  bookPublication.innerText = dataBook.year;

  // fungsi untuk membuat button
  const createButton = (text) => {
    const button = document.createElement(""Button"");
    button.innerText = text;
    button.classList.add(""material-symbols-outlined"");
    return button;
  };

  const clearBook = createButton(""delete"");
  const finisRead = createButton(""done"");
  const backButton = createButton(""undo"");

  const editBook = document.createElement(""Button"");
  editBook.innerText = ""Edit"";
  editBook.classList.add(""edit-button"");
  // menambahkan attribute data-book-id untuk menyimpan ID buku
  editBook.dataset.bookId = bookId;

  const action = document.createElement(""div"");
  action.classList.add(""action"");
  action.append(clearBook);

  if (dataBook.isComplete) {
    action.append(backButton);
    backButton.addEventListener(""click"", () => {
      backToBookFromReadBook(dataBook.id);
    });
  } else {
    action.append(finisRead, editBook);
    finisRead.addEventListener(""click"", () => {
      moveBookToCompleted(dataBook.id);
    });
    editBook.addEventListener(""click"", () => {
      bookFromToEdit(bookId);
    });
  }
  const containerBookItem = document.createElement(""article"");
  containerBookItem.classList.add(""book_item"");
  containerBookItem.append(bookTitle, bookWriter, bookPublication);
  containerBookItem.append(action);
  containerBookItem.setAttribute(""id"", `book-${dataBook.id}`);

  clearBook.addEventListener(""click"", () => {
    Swal.fire({
      title: ""Apakah anda yakin?"",
      text: ""Anda tidak dapat mengembalikan lagi!"",
      icon: ""warning"",
      showCancelButton: true,
      confirmButtonColor: ""#3085d6"",
      cancelButtonColor: ""#d33"",
      confirmButtonText: ""Ya, hapus saja!"",
      cancelButtonText: ""Batal"",
    }).then((result) => {
      if (result.isConfirmed) {
        removeBookFromReadBook(dataBook.id);
        Swal.fire({
          title: ""Terhapus!"",
          text: ""Buku telah dihapus"",
          icon: ""success"",
        });
      } else {
        Swal.fire({
          title: ""Batal!"",
          icon: ""error"",
        });
      }
    });
  });
  return containerBookItem;
};

// fungsi untuk mencari judul buku
const searchBookTitle = document.getElementById(""searchBookTitle"");
searchBookTitle.addEventListener(""input"", () => {
  const keyword = searchBookTitle.value.toLowerCase();
  const filteredBooks = books.filter((book) =>
    book.title.toLowerCase().includes(keyword)
  );
  renderBooks(filteredBooks);
});

// fungsi untuk merender buku pada pencaharian
const renderBooks = (books) => {
  const incompleteBookshelfList = document.getElementById(
    ""incompleteBookshelfList""
  );
  incompleteBookshelfList.innerHTML = "" "";

  const completeBookshelfList = document.getElementById(
    ""completeBookshelfList""
  );
  completeBookshelfList.innerHTML = "" "";

  books.forEach((book) => {
    const bookElement = displayBook(book);

    if (book.isComplete) {
      completeBookshelfList.appendChild(bookElement);
    } else {
      incompleteBookshelfList.appendChild(bookElement);
    }
  });
};

// Event mengedit buku
bookSubmit.addEventListener(""click"", () => {
  const bookId = editBook.dataset.bookId;
  bookFromToEdit(bookId);
});

// membuat event submit untuk melakukan penyimpanan data pada form yang telah diinput
document.addEventListener(""DOMContentLoaded"", () => {
  const inuputAllDataBook = document.getElementById(""inputBook"");
  inuputAllDataBook.addEventListener(""submit"", (e) => {
    e.preventDefault();
    Swal.fire({
      text: ""Terkirim"",
      icon: ""success"",
    });
    inputDataBooks();
  });

  if (isLocalStorageSupport()) {
    const loadedBooks = loadBookFromLocalStorage();
    if (!loadedBooks) {
      alert(""tidak ada buku yang disimpan"");
    }
  }
});

// Event untuk merender semua data
document.addEventListener(RENDER_EVENT, () => {
  const incompleteBookshelfList = document.getElementById(
    ""incompleteBookshelfList""
  );
  incompleteBookshelfList.innerHTML = "" "";

  const completeBookshelfList = document.getElementById(
    ""completeBookshelfList""
  );
  completeBookshelfList.innerHTML = "" "";

  for (const bookItem of books) {
    const bookElement = displayBook(bookItem);
    if (bookItem.isComplete) {
      completeBookshelfList.append(bookElement);
    } else {
      incompleteBookshelfList.append(bookElement);
    }
  }
});
"
WX6da9vP,Terminal Central Turtle Command,D34dP0ol64,Lua,Monday 26th of February 2024 11:40:26 AM CDT,"

peripheral.find(""modem"", rednet.open)

function try200()
    for a = 1, 200 do
        local id = rednet.receive(nil, 5)
        if not id then
            printError(""No message received"")
        else
            print((""Computer %d requested to connect""):format(id))
        end
end"
eZG5AiS8,Untitled,sissou123,C,Monday 26th of February 2024 11:40:25 AM CDT,"C Programming Bootcamp - The Complete C Language Course
C Programming 2023: Master the Fundamentals of C Programming Language. Join the Comprehensive C Bootcamp Masterclass! 
What you'll learn
Fundamentals of Programming
Summarized & Concise Material [Saving TONS of Time!]
OVER 100 Practical Exercises! 
for more:https://cuty.io/1XlvX
"
sLu6E9H7,Untitled,MrShtein,Go,Monday 26th of February 2024 11:23:44 AM CDT,"func TestRequestDto(t *testing.T) {
	testCases := []struct {
		desc   string
		input  GetCategoryRequestDto
		expect string
	}{
		{
			desc: ""is valid dto"",
			input: GetCategoryRequestDto{
				ID: ""00000000-0000-0000-1000-000000000000"",
			},
			expect: """",
		},
		{
			desc: ""not valid dto: ID is not uuid"",
			input: GetCategoryRequestDto{
				ID: ""00000000-0000-0000-1000"",
			},
			expect: ""invalid uuid"",
		},
	}
	for _, tc := range testCases {
		t.Run(tc.desc, func(t *testing.T) {
			got := tc.input.Validate()
			if tc.expect == """" {
				if got != nil {
					t.Errorf(""Incorrected result. Expect %s, got %s"", tc.expect, got.Error())
				}
			} else {
				if got == nil {
					t.Errorf(""Incorrected result. Expect %s, got nil"", tc.expect)
				}
			}
		})
	}
}"
KVM2WBvn,Untitled,sissou123,HTML,Monday 26th of February 2024 11:22:59 AM CDT,"Modern HTML & CSS From The Beginning (Including Sass)
Build modern responsive websites & UIs with HTML5, CSS3 & Sass! Learn Flex & CSS Grid 
What you'll learn
Build Multiple High Quality Website & UI Projects
HTML5 Semantic Layout & CSS Fundamentals 
for more:https://cuty.io/M67P
"
zNLnBcEw,DatSystems Security,JJfriends1234,JavaScript,Monday 26th of February 2024 11:08:03 AM CDT,"//{profile}

var user=""4398964"";
var uid=""4398964"";
var usid=""z289upir47qs70z3"";
var login=""2"";
var password=""2"";
var email="""";
var login_last=""02/26/2024"";
var login_count=""1"";
var reg_days=""0"";
var exp_date="""";
var exp_days="""";
var exp_hits="""";
var group_name=""default"";
var reg_date=""02/26/2024"";
var reg_type=""M"";
var reg_billtype="""";


var auth_acc=""datsystems"";
var auth_res=""ok"";
var auth_ip=""174.210.0.207"";
var auth_country=""US"";
var auth_fail_url=""https://sites.google.com/view/datbanksite/register?authuser=0"";
var auth_ajax=true;

var adcode=""<p style='text-align:center'><table width='100%'><tr><td style='background:#000080; text-align:center; font-family:arial; color:#FFFFFF'>Protected by <a href='http://www.authpro.com' target='_blank' style='color:#FFFFFF'>AuthPro</a></td></tr></table></center></p>"";

var pp_popup=false;

var pp_user=""datsystems"";
var pp_exp=""30"";
var pp_drc="""";
var pp_drc_mes="""";
var pp_dst="""";
var pp_dsb="""";
var pp_redir=true;
var pp_top=false;

var ap_return=false;
if (auth_fail_url=='return') { 
  auth_fail_url='https://www.authpro.com/auth/'+pp_user+'/?action=ppreturn&url='+escape(document.location.href);
  ap_return=true;
}



verify_login();

if (adcode != '') { 
  document.write(adcode); 
  //document.onload = print_authpro();
  //ap_div.innerHTML=adcode;
  //document.body[0].innerHTML+=adcode;
  //alert(adcode);
}

function print_authpro() {
  document.write(adcode); 
  var ap_div = document.createElement('div');
  document.body.appendChild(ap_div);
  document.body.innerHTML=ap_div;
}

function verify_login() {
  if (auth_res==""fail"") {
    //alert(auth_res+' '+pp_redir+' '+pp_popup);
    if ((pp_redir)&&(! pp_popup)) {
      if (document.body) document.body.style.visibility='hidden';
      if (pp_top) {
        top.location.replace(auth_fail_url);
      } else {
        document.location.replace(auth_fail_url);
      }
    }
    return false;
  }
  if (auth_res==""ok"") {
    return true;
  }
}
function go_eurl(url,winname,winpar) { 
  if (typeof(winname)==='undefined') { document.location.href=unescape(url.replace(/(..)/g,""%$1""));} else { window.open(unescape(url.replace(/(..)/g,""%$1"")),winname,winpar);}
}





function ap_popup() {
  if (auth_res=='ok') { return; }
  var ap_pop_css = document.createElement('style');
  ap_pop_css.innerHTML = ""#ap-modal-pop { display: none; position: fixed; z-index: 10000; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgb(0,0,0); background-color: rgba(0,0,0,0.8); backdrop-filter: blur(3px);}"";
  document.head.appendChild(ap_pop_css);
  var ap_pop_div=document.createElement(""div"");
  ap_pop_div.id = 'ap-modal-pop';
  ap_pop_div.innerHTML = '<span id=""ap_login_up""></span>';
  var ap_pop_script = document.createElement(""script"");
  var ap_set_urlok=''; //if (!ap_return) { ap_set_urlok='&set_urlok='+escape('https://www.authpro.com/auth/'+pp_user+'/?action=home'); }
  if (ap_return) { ap_set_urlok='&set_urlok=ap_popup:close'; }
  if ((ap_return)&&(!auth_ajax)) { ap_set_urlok='&set_urlok='+escape(document.location.href); }
  ap_pop_script.src = 'https://www.authpro.com/auth/'+pp_user+'/?mode=JS&JSid=ap_login_up'+ap_set_urlok;
  ap_pop_div.appendChild(ap_pop_script); 
  document.body.appendChild(ap_pop_div);
  document.getElementById(""ap-modal-pop"").style.display = ""block"";
  if (typeof(ap_popup_ext) == 'function') { ap_popup_ext(ap_pop_div); } 
}



function ap_ready() {
  if (document.getElementById('ap_cover')) {
    if (auth_res=='ok') { document.getElementById('ap_cover').style.display = 'none'; }
  }
  if (typeof(ap_ready_ext) == 'function') { ap_ready_ext(); } 
}

if (document.addEventListener) { document.addEventListener(""DOMContentLoaded"", ap_ready); }
if (window.addEventListener) { window.addEventListener('load', ap_ready); } 
else { window.attachEvent('onload', ap_ready); }

function gravatar_url(email,def,size) {
  if (typeof(def)=='undefined') { def=''; }
  if (typeof(size)=='undefined') { size=''; }
  return ""https://authpro.com/cgi-bin/auth.fcgi?action=gravatar&email=""+encodeURIComponent(email)+""&default=""+encodeURIComponent(def)+""&size=""+size;
}
function gravatar_img(email,def,size) {
  return '<img src=""'+gravatar_url(email,def,size)+'"" width=""'+size+'"">';
}"
1cJnZa4s,Untitled,sissou123,HTML,Monday 26th of February 2024 11:05:51 AM CDT,"Build Mega Responsive Website: HTML, CSS, JavaScript (2024)
Build and deploy a professional-looking website from scratch with these technologies: HTML, CSS, and JavaScript 
What you'll learn
Create and structure HTML documents using semantic elements and proper markup.
Use CSS to style HTML elements and create modern and cool responsive layouts. 
for more:https://cuty.io/2Ky4Hd3muK
"
4v48wmCd,Untitled,Josif_tepe,C++,Monday 26th of February 2024 10:58:36 AM CDT,"#include <iostream>
#include <map>
#include <cmath>
#include <set>
#include <vector>
#include <queue>
using namespace std;
const int maxn = 1050;
char mat[maxn][maxn];
int main() {
    ios_base::sync_with_stdio(false);
    int n, m, k;
    cin >> n >> m >> k;
    int si, sj, ei, ej;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cin >> mat[i][j];
            if(mat[i][j] == 'M') {
                si = i;
                sj = j;
            }
            if(mat[i][j] == 'V') {
                ei = i;
                ej = j;
            }
        }
    }
    mat[si][sj] = '.';
    mat[ei][ej] = '.';
    int di[] = {-1, 1, 0, 0};
    int dj[] = {0, 0, -1, 1};
     
    vector<vector<bool> > visited(n + 1, vector<bool> (m + 1, false));
    visited[si][sj] = true;
    queue<int> q;
    q.push(si);
    q.push(sj);
    vector<pair<int, int> > points_from_walls;
    while(!q.empty()) {
        int ci = q.front(); q.pop();
        int cj = q.front(); q.pop();
        if(ci == ei and cj == ej) {
            cout << ""DA"" << endl;
            return 0;
        }
        for(int i = 0; i < 4; i++) {
            int ti = ci + di[i];
            int tj = cj + dj[i];
            if(ti >= 0 and ti < n and tj >= 0 and tj < m and !visited[ti][tj]) {
                if(mat[ti][tj] == '#') {
                    points_from_walls.push_back(make_pair(ci, cj));
                }
                else {
                    visited[ti][tj] = true;
                    q.push(ti);
                    q.push(tj);
                }
            }
        }
    }
    vector<vector<int> > dist(n + 1, vector<int>(m + 1, -1));
 
    for(pair<int, int> x : points_from_walls) {
        q.push(x.first);
        q.push(x.second);
        dist[x.first][x.second] = 0;
    }
     
    dist[si][sj] = 0;
    while(!q.empty()) {
        int ci = q.front(); q.pop();
        int cj = q.front(); q.pop();
         
        for(int i = 0; i < 4; i++) {
            int ti = ci + di[i];
            int tj = cj + dj[i];
            if(ti >= 0 and ti < n and tj >= 0 and tj < m and dist[ti][tj] == -1) {
                dist[ti][tj] = dist[ci][cj] + 1;
                q.push(ti);
                q.push(tj);
            }
        }
         
    }
    q.push(ei);
    q.push(ej);
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            visited[i][j] = false;
        }
    }
    visited[ei][ej] = true;
    while(!q.empty()) {
        int ci = q.front(); q.pop();
        int cj = q.front(); q.pop();
        if(mat[ci][cj] == '.' and dist[ci][cj] <= k) {
            cout << ""DA"" << endl;
            return 0;
        }
        for(int i = 0; i < 4; i++) {
            int ti = ci + di[i];
            int tj = cj + dj[i];
            if(ti >= 0 and ti < n and tj >= 0 and tj < m and mat[ti][tj] != '#' and !visited[ti][tj]) {
                visited[ti][tj] = true;
                q.push(ti);
                q.push(tj);
            }
        }
    }
     
    cout << ""NE"" << endl;
    return 0;
}"
jZ40eQ2E,Nigerian scammers [26-2-2/2024],bombaires,AIMMS,Monday 26th of February 2024 10:49:39 AM CDT,"<a href=""mailto:jefffrank@post.com"">jefffrank@post.com</a>
<a href=""mailto:mails@mymai1box.com"">mails@mymai1box.com</a>
<a href=""mailto:franksjeffimf@gmail.com"">franksjeffimf@gmail.com</a>
<a href=""mailto:f.r.an.k.s.j.e.ff.i.m.f@gmail.com"">f.r.an.k.s.j.e.ff.i.m.f@gmail.com</a>
<a href=""mailto:fran.ks.j.e.f.fimf@gmail.com"">fran.ks.j.e.f.fimf@gmail.com</a>
<a href=""mailto:f.r.an.k.s.j.effimf@gmail.com"">f.r.an.k.s.j.effimf@gmail.com</a>
<a href=""mailto:f.rank.sjef.fi.mf@gmail.com"">f.rank.sjef.fi.mf@gmail.com</a>
<a href=""mailto:f.rank.sj.ef.fimf@gmail.com"">f.rank.sj.ef.fimf@gmail.com</a>
<a href=""mailto:fr.an.k.sjef.f.im.f@gmail.com"">fr.an.k.sjef.f.im.f@gmail.com</a>
<a href=""mailto:frank.sjeffimf@gmail.com"">frank.sjeffimf@gmail.com</a>
<a href=""mailto:f.ra.n.k.s.jeff.i.mf@gmail.com"">f.ra.n.k.s.jeff.i.mf@gmail.com</a>
<a href=""mailto:fra.n.ks.je.f.fi.m.f@gmail.com"">fra.n.ks.je.f.fi.m.f@gmail.com</a>
<a href=""mailto:fra.nk.s.jef.f.im.f@gmail.com"">fra.nk.s.jef.f.im.f@gmail.com</a>
<a href=""mailto:f.ra.n.ksjef.fim.f@gmail.com"">f.ra.n.ksjef.fim.f@gmail.com</a>
<a href=""mailto:f.ran.ks.jeffi.mf@gmail.com"">f.ran.ks.jeffi.mf@gmail.com</a>
<a href=""mailto:f.r.a.n.k.s.je.ff.i.mf@gmail.com"">f.r.a.n.k.s.je.ff.i.mf@gmail.com</a>
<a href=""mailto:fra.nksje.ffi.mf@gmail.com"">fra.nksje.ffi.mf@gmail.com</a>
<a href=""mailto:fr.a.nk.s.jeffim.f@gmail.com"">fr.a.nk.s.jeffim.f@gmail.com</a>
<a href=""mailto:f.r.an.k.s.je.f.f.imf@gmail.com"">f.r.an.k.s.je.f.f.imf@gmail.com</a>
<a href=""mailto:fr.ank.sje.ff.i.m.f@gmail.com"">fr.ank.sje.ff.i.m.f@gmail.com</a>
<a href=""mailto:f.r.a.n.k.s.jeff.im.f@gmail.com"">f.r.a.n.k.s.jeff.im.f@gmail.com</a>
<a href=""mailto:frank.sje.ff.i.mf@gmail.com"">frank.sje.ff.i.mf@gmail.com</a>
<a href=""mailto:fra.nksj.eff.imf@gmail.com"">fra.nksj.eff.imf@gmail.com</a>
<a href=""mailto:fra.nk.s.je.ffimf@gmail.com"">fra.nk.s.je.ffimf@gmail.com</a>
<a href=""mailto:fran.k.sje.ff.imf@gmail.com"">fran.k.sje.ff.imf@gmail.com</a>
<a href=""mailto:fr.anksj.e.f.f.i.m.f@gmail.com"">fr.anksj.e.f.f.i.m.f@gmail.com</a>
<a href=""mailto:f.ran.k.s.j.e.f.f.i.mf@gmail.com"">f.ran.k.s.j.e.f.f.i.mf@gmail.com</a>
<a href=""mailto:fra.nks.jeffi.m.f@gmail.com"">fra.nks.jeffi.m.f@gmail.com</a>
<a href=""mailto:fra.n.k.s.jef.fi.m.f@gmail.com"">fra.n.k.s.jef.fi.m.f@gmail.com</a>
<a href=""mailto:f.ran.k.s.je.f.fi.m.f@gmail.com"">f.ran.k.s.je.f.fi.m.f@gmail.com</a>
<a href=""mailto:frank.s.j.eff.i.mf@gmail.com"">frank.s.j.eff.i.mf@gmail.com</a>
<a href=""mailto:f.ranks.j.e.f.fim.f@gmail.com"">f.ranks.j.e.f.fim.f@gmail.com</a>
<a href=""mailto:f.r.a.n.ksje.f.fi.mf@gmail.com"">f.r.a.n.ksje.f.fi.mf@gmail.com</a>
<a href=""mailto:fra.nks.jeffim.f@gmail.com"">fra.nks.jeffim.f@gmail.com</a>
<a href=""mailto:fran.ksj.effi.m.f@gmail.com"">fran.ksj.effi.m.f@gmail.com</a>
<a href=""mailto:fra.nk.s.j.eff.imf@gmail.com"">fra.nk.s.j.eff.imf@gmail.com</a>
<a href=""mailto:fra.nk.s.j.e.ff.i.mf@gmail.com"">fra.nk.s.j.e.ff.i.mf@gmail.com</a>
<a href=""mailto:fran.ks.je.ffim.f@gmail.com"">fran.ks.je.ffim.f@gmail.com</a>
<a href=""mailto:fr.a.n.k.s.jeffim.f@gmail.com"">fr.a.n.k.s.jeffim.f@gmail.com</a>
<a href=""mailto:fran.k.sj.eff.i.m.f@gmail.com"">fran.k.sj.eff.i.m.f@gmail.com</a>
<a href=""mailto:f.r.a.n.ksjef.f.i.m.f@gmail.com"">f.r.a.n.ksjef.f.i.m.f@gmail.com</a>
<a href=""mailto:f.rank.sj.e.ff.i.mf@gmail.com"">f.rank.sj.e.ff.i.mf@gmail.com</a>
<a href=""mailto:fra.nksj.ef.fimf@gmail.com"">fra.nksj.ef.fimf@gmail.com</a>
<a href=""mailto:f.r.an.ksj.eff.i.m.f@gmail.com"">f.r.an.ksj.eff.i.m.f@gmail.com</a>
<a href=""mailto:f.ran.ks.j.ef.fimf@gmail.com"">f.ran.ks.j.ef.fimf@gmail.com</a>
<a href=""mailto:f.r.ank.s.j.e.f.fi.mf@gmail.com"">f.r.ank.s.j.e.f.fi.mf@gmail.com</a>
<a href=""mailto:fr.an.k.s.j.eff.i.mf@gmail.com"">fr.an.k.s.j.eff.i.mf@gmail.com</a>
<a href=""mailto:fr.a.n.k.sje.f.fim.f@gmail.com"">fr.a.n.k.sje.f.fim.f@gmail.com</a>
<a href=""mailto:frank.s.j.e.ff.i.mf@gmail.com"">frank.s.j.e.ff.i.mf@gmail.com</a>
<a href=""mailto:fra.nksj.ef.f.imf@gmail.com"">fra.nksj.ef.f.imf@gmail.com</a>
<a href=""mailto:fra.nk.s.jeffi.mf@gmail.com"">fra.nk.s.jeffi.mf@gmail.com</a>
<a href=""mailto:franks.j.e.f.fi.m.f@gmail.com"">franks.j.e.f.fi.m.f@gmail.com</a>
<a href=""mailto:f.ran.k.sj.ef.f.i.mf@gmail.com"">f.ran.k.sj.ef.f.i.mf@gmail.com</a>
<a href=""mailto:f.r.a.n.ks.jeff.i.m.f@gmail.com"">f.r.a.n.ks.jeff.i.m.f@gmail.com</a>
<a href=""mailto:f.r.a.n.ksjeff.im.f@gmail.com"">f.r.a.n.ksjeff.im.f@gmail.com</a>
<a href=""mailto:f.r.a.n.k.s.je.f.f.i.mf@gmail.com"">f.r.a.n.k.s.je.f.f.i.mf@gmail.com</a>
<a href=""mailto:f.ra.nk.sje.ff.imf@gmail.com"">f.ra.nk.sje.ff.imf@gmail.com</a>
<a href=""mailto:f.ra.nk.sje.ffim.f@gmail.com"">f.ra.nk.sje.ffim.f@gmail.com</a>
<a href=""mailto:f.r.ank.s.jeffimf@gmail.com"">f.r.ank.s.jeffimf@gmail.com</a>
<a href=""mailto:fr.ank.s.jef.f.imf@gmail.com"">fr.ank.s.jef.f.imf@gmail.com</a>
<a href=""mailto:f.ra.nksje.f.f.i.mf@gmail.com"">f.ra.nksje.f.f.i.mf@gmail.com</a>
<a href=""mailto:f.r.an.k.s.jef.fim.f@gmail.com"">f.r.an.k.s.jef.fim.f@gmail.com</a>
<a href=""mailto:fra.nks.j.e.f.f.imf@gmail.com"">fra.nks.j.e.f.f.imf@gmail.com</a>
<a href=""mailto:fra.n.ksj.e.ffi.mf@gmail.com"">fra.n.ksj.e.ffi.mf@gmail.com</a>
<a href=""mailto:frank.s.jeff.i.mf@gmail.com"">frank.s.jeff.i.mf@gmail.com</a>
<a href=""mailto:fran.ks.j.effimf@gmail.com"">fran.ks.j.effimf@gmail.com</a>
<a href=""mailto:fr.ank.sje.f.f.i.mf@gmail.com"">fr.ank.sje.f.f.i.mf@gmail.com</a>
<a href=""mailto:f.ran.k.sjeffim.f@gmail.com"">f.ran.k.sjeffim.f@gmail.com</a>
<a href=""mailto:fr.an.k.s.j.ef.f.imf@gmail.com"">fr.an.k.s.j.ef.f.imf@gmail.com</a>
<a href=""mailto:fran.k.s.je.f.fi.mf@gmail.com"">fran.k.s.je.f.fi.mf@gmail.com</a>
<a href=""mailto:franksj.ef.f.i.mf@gmail.com"">franksj.ef.f.i.mf@gmail.com</a>
<a href=""mailto:f.r.a.nk.sje.f.fimf@gmail.com"">f.r.a.nk.sje.f.fimf@gmail.com</a>
<a href=""mailto:f.r.a.nksj.ef.fi.mf@gmail.com"">f.r.a.nksj.ef.fi.mf@gmail.com</a>
<a href=""mailto:fr.a.nk.s.j.e.ff.i.m.f@gmail.com"">fr.a.nk.s.j.e.ff.i.m.f@gmail.com</a>
<a href=""mailto:f.ra.nksj.e.f.fim.f@gmail.com"">f.ra.nksj.e.f.fim.f@gmail.com</a>
<a href=""mailto:fran.k.sj.e.f.f.imf@gmail.com"">fran.k.sj.e.f.f.imf@gmail.com</a>
<a href=""mailto:f.r.anks.je.f.f.i.mf@gmail.com"">f.r.anks.je.f.f.i.mf@gmail.com</a>
<a href=""mailto:fr.a.n.ks.j.e.f.fim.f@gmail.com"">fr.a.n.ks.j.e.f.fim.f@gmail.com</a>
<a href=""mailto:f.ranks.je.ffi.mf@gmail.com"">f.ranks.je.ffi.mf@gmail.com</a>
<a href=""mailto:fr.a.nksje.f.fi.mf@gmail.com"">fr.a.nksje.f.fi.mf@gmail.com</a>
<a href=""mailto:fr.a.nks.j.ef.fi.m.f@gmail.com"">fr.a.nks.j.ef.fi.m.f@gmail.com</a>
<a href=""mailto:fr.an.ksj.e.ffi.m.f@gmail.com"">fr.an.ksj.e.ffi.m.f@gmail.com</a>
<a href=""mailto:fra.n.k.sje.f.fimf@gmail.com"">fra.n.k.sje.f.fimf@gmail.com</a>
<a href=""mailto:f.r.a.n.ksj.ef.fimf@gmail.com"">f.r.a.n.ksj.ef.fimf@gmail.com</a>
<a href=""mailto:f.r.a.nks.jeff.i.m.f@gmail.com"">f.r.a.nks.jeff.i.m.f@gmail.com</a>
<a href=""mailto:fra.n.ksj.e.ffim.f@gmail.com"">fra.n.ksj.e.ffim.f@gmail.com</a>
<a href=""mailto:franks.je.ff.i.mf@gmail.com"">franks.je.ff.i.mf@gmail.com</a>
<a href=""mailto:fr.ank.s.jef.fi.mf@gmail.com"">fr.ank.s.jef.fi.mf@gmail.com</a>
<a href=""mailto:fra.nks.je.f.f.i.mf@gmail.com"">fra.nks.je.f.f.i.mf@gmail.com</a>
<a href=""mailto:fr.anks.jef.fim.f@gmail.com"">fr.anks.jef.fim.f@gmail.com</a>
<a href=""mailto:fr.a.nk.sj.ef.f.im.f@gmail.com"">fr.a.nk.sj.ef.f.im.f@gmail.com</a>
<a href=""mailto:f.r.a.n.ksj.e.f.f.i.mf@gmail.com"">f.r.a.n.ksj.e.f.f.i.mf@gmail.com</a>
<a href=""mailto:fr.an.ks.je.ff.imf@gmail.com"">fr.an.ks.je.ff.imf@gmail.com</a>
<a href=""mailto:f.ra.n.ks.jeffi.m.f@gmail.com"">f.ra.n.ks.jeffi.m.f@gmail.com</a>
<a href=""mailto:f.r.an.k.sjef.fi.mf@gmail.com"">f.r.an.k.sjef.fi.mf@gmail.com</a>
<a href=""mailto:fr.a.nksj.e.ffim.f@gmail.com"">fr.a.nksj.e.ffim.f@gmail.com</a>
<a href=""mailto:fr.anks.j.e.f.fi.mf@gmail.com"">fr.anks.j.e.f.fi.mf@gmail.com</a>
<a href=""mailto:f.r.a.nksj.e.ffi.m.f@gmail.com"">f.r.a.nksj.e.ffi.m.f@gmail.com</a>
<a href=""mailto:f.ra.n.ks.je.ffim.f@gmail.com"">f.ra.n.ks.je.ffim.f@gmail.com</a>
<a href=""mailto:f.ra.n.ksjef.fimf@gmail.com"">f.ra.n.ksjef.fimf@gmail.com</a>
<a href=""mailto:f.r.an.ksj.e.f.fi.m.f@gmail.com"">f.r.an.ksj.e.f.fi.m.f@gmail.com</a>
<a href=""mailto:f.r.ank.sj.eff.imf@gmail.com"">f.r.ank.sj.eff.imf@gmail.com</a>
<a href=""mailto:f.ran.k.sj.e.f.f.im.f@gmail.com"">f.ran.k.sj.e.f.f.im.f@gmail.com</a>
<a href=""mailto:fr.a.nksje.f.f.im.f@gmail.com"">fr.a.nksje.f.f.im.f@gmail.com</a>
<a href=""mailto:fr.a.nksjef.fim.f@gmail.com"">fr.a.nksjef.fim.f@gmail.com</a>
<a href=""mailto:f.r.a.nk.s.jef.f.im.f@gmail.com"">f.r.a.nk.s.jef.f.im.f@gmail.com</a>
<a href=""mailto:f.ra.n.ksjeffimf@gmail.com"">f.ra.n.ksjeffimf@gmail.com</a>
<a href=""mailto:f.ran.k.s.jef.fi.mf@gmail.com"">f.ran.k.s.jef.fi.mf@gmail.com</a>
<a href=""mailto:fra.n.ks.jef.f.i.m.f@gmail.com"">fra.n.ks.jef.f.i.m.f@gmail.com</a>
<a href=""mailto:f.ra.n.ks.j.effimf@gmail.com"">f.ra.n.ks.j.effimf@gmail.com</a>
<a href=""mailto:franksj.e.f.f.i.m.f@gmail.com"">franksj.e.f.f.i.m.f@gmail.com</a>
<a href=""mailto:f.r.a.nk.s.je.f.fim.f@gmail.com"">f.r.a.nk.s.je.f.fim.f@gmail.com</a>
<a href=""mailto:f.ra.n.k.sje.f.f.i.m.f@gmail.com"">f.ra.n.k.sje.f.f.i.m.f@gmail.com</a>
<a href=""mailto:f.r.ank.sjef.fim.f@gmail.com"">f.r.ank.sjef.fim.f@gmail.com</a>
<a href=""mailto:fr.a.nk.s.je.ffi.m.f@gmail.com"">fr.a.nk.s.je.ffi.m.f@gmail.com</a>
<a href=""mailto:fr.a.nk.sjeff.im.f@gmail.com"">fr.a.nk.sjeff.im.f@gmail.com</a>
<a href=""mailto:fr.a.n.ksj.ef.f.i.mf@gmail.com"">fr.a.n.ksj.ef.f.i.mf@gmail.com</a>
<a href=""mailto:f.r.a.nksj.ef.fimf@gmail.com"">f.r.a.nksj.ef.fimf@gmail.com</a>
<a href=""mailto:f.ra.nks.jef.f.imf@gmail.com"">f.ra.nks.jef.f.imf@gmail.com</a>
<a href=""mailto:f.ran.ksj.e.f.fi.mf@gmail.com"">f.ran.ksj.e.f.fi.mf@gmail.com</a>
<a href=""mailto:f.r.anksj.effi.m.f@gmail.com"">f.r.anksj.effi.m.f@gmail.com</a>
<a href=""mailto:f.r.an.k.s.j.ef.fim.f@gmail.com"">f.r.an.k.s.j.ef.fim.f@gmail.com</a>
<a href=""mailto:f.r.an.k.s.jeffi.m.f@gmail.com"">f.r.an.k.s.jeffi.m.f@gmail.com</a>
<a href=""mailto:fra.n.ksjeffim.f@gmail.com"">fra.n.ksjeffim.f@gmail.com</a>
<a href=""mailto:f.r.an.k.sj.eff.i.m.f@gmail.com"">f.r.an.k.sj.eff.i.m.f@gmail.com</a>
<a href=""mailto:f.ranksje.f.f.imf@gmail.com"">f.ranksje.f.f.imf@gmail.com</a>
<a href=""mailto:f.r.a.n.ksjeff.i.mf@gmail.com"">f.r.a.n.ksjeff.i.mf@gmail.com</a>
<a href=""mailto:f.r.a.nk.s.jef.fim.f@gmail.com"">f.r.a.nk.s.jef.fim.f@gmail.com</a>
<a href=""mailto:fran.ks.jef.fi.m.f@gmail.com"">fran.ks.jef.fi.m.f@gmail.com</a>
<a href=""mailto:fr.a.n.k.sj.effimf@gmail.com"">fr.a.n.k.sj.effimf@gmail.com</a>
<a href=""mailto:fr.a.nk.sje.f.fi.m.f@gmail.com"">fr.a.nk.sje.f.fi.m.f@gmail.com</a>
<a href=""mailto:franks.j.effimf@gmail.com"">franks.j.effimf@gmail.com</a>
<a href=""mailto:f.r.a.nksjef.f.imf@gmail.com"">f.r.a.nksjef.f.imf@gmail.com</a>
<a href=""mailto:f.r.ank.sje.f.fimf@gmail.com"">f.r.ank.sje.f.fimf@gmail.com</a>
<a href=""mailto:fran.k.sjef.fi.mf@gmail.com"">fran.k.sjef.fi.mf@gmail.com</a>
<a href=""mailto:f.ra.n.k.s.je.f.f.i.mf@gmail.com"">f.ra.n.k.s.je.f.f.i.mf@gmail.com</a>
<a href=""mailto:fr.a.nksj.eff.imf@gmail.com"">fr.a.nksj.eff.imf@gmail.com</a>
<a href=""mailto:f.ra.n.k.sje.ffi.mf@gmail.com"">f.ra.n.k.sje.ffi.mf@gmail.com</a>
<a href=""mailto:f.ra.n.ks.j.e.ffim.f@gmail.com"">f.ra.n.ks.j.e.ffim.f@gmail.com</a>
<a href=""mailto:f.ran.ksjef.f.i.mf@gmail.com"">f.ran.ksjef.f.i.mf@gmail.com</a>
<a href=""mailto:fr.anks.j.e.ff.i.m.f@gmail.com"">fr.anks.j.e.ff.i.m.f@gmail.com</a>
<a href=""mailto:f.r.a.nk.s.j.e.f.f.i.mf@gmail.com"">f.r.a.nk.s.j.e.f.f.i.mf@gmail.com</a>
<a href=""mailto:fr.a.nk.s.jef.f.i.m.f@gmail.com"">fr.a.nk.s.jef.f.i.m.f@gmail.com</a>
<a href=""mailto:fran.ksj.ef.fimf@gmail.com"">fran.ksj.ef.fimf@gmail.com</a>
<a href=""mailto:f.r.ank.s.j.e.f.fim.f@gmail.com"">f.r.ank.s.j.e.f.fim.f@gmail.com</a>
<a href=""mailto:f.r.a.nk.sj.ef.fimf@gmail.com"">f.r.a.nk.sj.ef.fimf@gmail.com</a>
<a href=""mailto:fran.ks.jeff.imf@gmail.com"">fran.ks.jeff.imf@gmail.com</a>
<a href=""mailto:f.ra.n.k.sjef.fi.m.f@gmail.com"">f.ra.n.k.sjef.fi.m.f@gmail.com</a>
<a href=""mailto:fra.n.k.sje.f.fim.f@gmail.com"">fra.n.k.sje.f.fim.f@gmail.com</a>
<a href=""mailto:f.ranks.j.effi.mf@gmail.com"">f.ranks.j.effi.mf@gmail.com</a>
<a href=""mailto:f.ranksje.ffi.m.f@gmail.com"">f.ranksje.ffi.m.f@gmail.com</a>
<a href=""mailto:f.ra.nksjef.f.i.m.f@gmail.com"">f.ra.nksjef.f.i.m.f@gmail.com</a>
<a href=""mailto:fr.an.ks.j.ef.f.i.m.f@gmail.com"">fr.an.ks.j.ef.f.i.m.f@gmail.com</a>
<a href=""mailto:franks.j.e.ff.i.mf@gmail.com"">franks.j.e.ff.i.mf@gmail.com</a>
<a href=""mailto:f.r.anks.je.ff.i.mf@gmail.com"">f.r.anks.je.ff.i.mf@gmail.com</a>
<a href=""mailto:fr.an.ks.jeffim.f@gmail.com"">fr.an.ks.jeffim.f@gmail.com</a>
<a href=""mailto:fran.k.s.j.e.f.fim.f@gmail.com"">fran.k.s.j.e.f.fim.f@gmail.com</a>
<a href=""mailto:f.ra.nk.sj.e.f.fi.mf@gmail.com"">f.ra.nk.sj.e.f.fi.mf@gmail.com</a>
<a href=""mailto:fran.ksj.e.ff.imf@gmail.com"">fran.ksj.e.ff.imf@gmail.com</a>
<a href=""mailto:f.ra.nk.sjeffi.m.f@gmail.com"">f.ra.nk.sjeffi.m.f@gmail.com</a>
<a href=""mailto:f.r.an.ks.j.e.ffim.f@gmail.com"">f.r.an.ks.j.e.ffim.f@gmail.com</a>
<a href=""mailto:fr.ank.s.j.ef.fim.f@gmail.com"">fr.ank.s.j.ef.fim.f@gmail.com</a>
<a href=""mailto:f.r.a.n.ksjeffim.f@gmail.com"">f.r.a.n.ksjeffim.f@gmail.com</a>
<a href=""mailto:fra.nk.s.jef.fi.mf@gmail.com"">fra.nk.s.jef.fi.mf@gmail.com</a>
<a href=""mailto:fran.ksjef.f.im.f@gmail.com"">fran.ksjef.f.im.f@gmail.com</a>
<a href=""mailto:f.r.a.n.k.sjef.fi.mf@gmail.com"">f.r.a.n.k.sjef.fi.mf@gmail.com</a>
<a href=""mailto:f.ranksjeffimf@gmail.com"">f.ranksjeffimf@gmail.com</a>
<a href=""mailto:f.r.a.nksj.e.ffimf@gmail.com"">f.r.a.nksj.e.ffimf@gmail.com</a>
<a href=""mailto:fr.anks.je.ff.imf@gmail.com"">fr.anks.je.ff.imf@gmail.com</a>
<a href=""mailto:fr.a.nksj.ef.f.i.m.f@gmail.com"">fr.a.nksj.ef.f.i.m.f@gmail.com</a>
<a href=""mailto:f.ra.nk.s.jef.fimf@gmail.com"">f.ra.nk.s.jef.fimf@gmail.com</a>
<a href=""mailto:f.ra.nks.je.f.fi.mf@gmail.com"">f.ra.nks.je.f.fi.mf@gmail.com</a>
<a href=""mailto:f.rank.sje.ffim.f@gmail.com"">f.rank.sje.ffim.f@gmail.com</a>
<a href=""mailto:f.ra.nk.s.je.f.fimf@gmail.com"">f.ra.nk.s.je.f.fimf@gmail.com</a>
<a href=""mailto:frank.sj.e.ffim.f@gmail.com"">frank.sj.e.ffim.f@gmail.com</a>
<a href=""mailto:f.ran.k.s.j.e.f.f.imf@gmail.com"">f.ran.k.s.j.e.f.f.imf@gmail.com</a>
<a href=""mailto:fra.nksj.ef.f.i.m.f@gmail.com"">fra.nksj.ef.f.i.m.f@gmail.com</a>
<a href=""mailto:f.r.an.ksjef.f.im.f@gmail.com"">f.r.an.ksjef.f.im.f@gmail.com</a>
<a href=""mailto:fr.a.nksj.e.f.f.i.mf@gmail.com"">fr.a.nksj.e.f.f.i.mf@gmail.com</a>
<a href=""mailto:f.ra.nksj.e.f.fimf@gmail.com"">f.ra.nksj.e.f.fimf@gmail.com</a>
<a href=""mailto:f.r.a.nks.jeff.i.mf@gmail.com"">f.r.a.nks.jeff.i.mf@gmail.com</a>
<a href=""mailto:fra.nk.s.j.e.f.fi.mf@gmail.com"">fra.nk.s.j.e.f.fi.mf@gmail.com</a>
<a href=""mailto:f.ran.ks.je.f.fim.f@gmail.com"">f.ran.ks.je.f.fim.f@gmail.com</a>
<a href=""mailto:f.r.anksj.eff.im.f@gmail.com"">f.r.anksj.eff.im.f@gmail.com</a>
<a href=""mailto:f.r.a.n.k.sjeff.imf@gmail.com"">f.r.a.n.k.sjeff.imf@gmail.com</a>
<a href=""mailto:f.ra.nk.s.j.ef.fi.m.f@gmail.com"">f.ra.nk.s.j.ef.fi.m.f@gmail.com</a>
<a href=""mailto:f.ra.n.k.s.j.eff.im.f@gmail.com"">f.ra.n.k.s.j.eff.im.f@gmail.com</a>
<a href=""mailto:f.ra.n.ks.j.ef.fi.mf@gmail.com"">f.ra.n.ks.j.ef.fi.mf@gmail.com</a>
<a href=""mailto:f.r.a.nk.sj.effim.f@gmail.com"">f.r.a.nk.sj.effim.f@gmail.com</a>
<a href=""mailto:f.r.anksj.e.ffimf@gmail.com"">f.r.anksj.e.ffimf@gmail.com</a>
<a href=""mailto:fr.an.ks.je.ff.i.m.f@gmail.com"">fr.an.ks.je.ff.i.m.f@gmail.com</a>
<a href=""mailto:f.ra.nks.j.ef.fim.f@gmail.com"">f.ra.nks.j.ef.fim.f@gmail.com</a>
<a href=""mailto:f.rank.s.jeffi.m.f@gmail.com"">f.rank.s.jeffi.m.f@gmail.com</a>
<a href=""mailto:f.ra.nksj.effimf@gmail.com"">f.ra.nksj.effimf@gmail.com</a>
<a href=""mailto:f.ra.n.ksje.ffimf@gmail.com"">f.ra.n.ksje.ffimf@gmail.com</a>
<a href=""mailto:f.r.ank.s.je.ffim.f@gmail.com"">f.r.ank.s.je.ffim.f@gmail.com</a>
<a href=""mailto:fr.an.k.sj.ef.fim.f@gmail.com"">fr.an.k.sj.ef.fim.f@gmail.com</a>
<a href=""mailto:fr.a.nks.je.f.fimf@gmail.com"">fr.a.nks.je.f.fimf@gmail.com</a>
<a href=""mailto:f.ra.n.k.sj.e.ffimf@gmail.com"">f.ra.n.k.sj.e.ffimf@gmail.com</a>
<a href=""mailto:fr.a.nksje.ff.i.m.f@gmail.com"">fr.a.nksje.ff.i.m.f@gmail.com</a>
<a href=""mailto:f.r.an.k.sje.f.f.i.m.f@gmail.com"">f.r.an.k.sje.f.f.i.m.f@gmail.com</a>
<a href=""mailto:f.ra.nk.sj.ef.fim.f@gmail.com"">f.ra.nk.sj.ef.fim.f@gmail.com</a>
<a href=""mailto:f.r.ank.s.jeff.imf@gmail.com"">f.r.ank.s.jeff.imf@gmail.com</a>
<a href=""mailto:serenasunderland578@gmail.com"">serenasunderland578@gmail.com</a>
<a href=""mailto:s.e.renasu.n.d.e.r.l.and5.7.8@gmail.com"">s.e.renasu.n.d.e.r.l.and5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.enasu.nd.erl.and.5.78@gmail.com"">s.e.r.enasu.nd.erl.and.5.78@gmail.com</a>
<a href=""mailto:s.erena.su.n.de.r.lan.d.578@gmail.com"">s.erena.su.n.de.r.lan.d.578@gmail.com</a>
<a href=""mailto:s.e.renas.u.n.de.rla.n.d578@gmail.com"">s.e.renas.u.n.de.rla.n.d578@gmail.com</a>
<a href=""mailto:ser.enas.u.n.de.rla.nd578@gmail.com"">ser.enas.u.n.de.rla.nd578@gmail.com</a>
<a href=""mailto:se.r.ena.s.u.n.d.er.la.nd.578@gmail.com"">se.r.ena.s.u.n.d.er.la.nd.578@gmail.com</a>
<a href=""mailto:s.er.e.na.s.u.nd.e.r.l.a.n.d.5.7.8@gmail.com"">s.er.e.na.s.u.nd.e.r.l.a.n.d.5.7.8@gmail.com</a>
<a href=""mailto:seren.a.sunderl.a.n.d.57.8@gmail.com"">seren.a.sunderl.a.n.d.57.8@gmail.com</a>
<a href=""mailto:s.er.enas.unde.rlan.d.5.78@gmail.com"">s.er.enas.unde.rlan.d.5.78@gmail.com</a>
<a href=""mailto:ser.ena.sunderland578@gmail.com"">ser.ena.sunderland578@gmail.com</a>
<a href=""mailto:se.ren.as.u.nderlan.d5.78@gmail.com"">se.ren.as.u.nderlan.d5.78@gmail.com</a>
<a href=""mailto:se.renas.u.n.d.e.rlan.d.5.7.8@gmail.com"">se.renas.u.n.d.e.rlan.d.5.7.8@gmail.com</a>
<a href=""mailto:seren.a.sund.e.r.la.nd.5.7.8@gmail.com"">seren.a.sund.e.r.la.nd.5.7.8@gmail.com</a>
<a href=""mailto:s.er.e.na.s.u.nderl.a.nd57.8@gmail.com"">s.er.e.na.s.u.nderl.a.nd57.8@gmail.com</a>
<a href=""mailto:seren.a.su.n.de.r.land57.8@gmail.com"">seren.a.su.n.de.r.land57.8@gmail.com</a>
<a href=""mailto:s.e.re.n.asu.n.d.e.rl.a.nd.57.8@gmail.com"">s.e.re.n.asu.n.d.e.rl.a.nd.57.8@gmail.com</a>
<a href=""mailto:se.r.en.a.s.unde.rlan.d5.78@gmail.com"">se.r.en.a.s.unde.rlan.d5.78@gmail.com</a>
<a href=""mailto:s.e.r.ena.s.under.l.and.5.7.8@gmail.com"">s.e.r.ena.s.under.l.and.5.7.8@gmail.com</a>
<a href=""mailto:s.e.re.n.a.s.und.er.la.n.d578@gmail.com"">s.e.re.n.a.s.und.er.la.n.d578@gmail.com</a>
<a href=""mailto:serena.s.un.d.e.r.land57.8@gmail.com"">serena.s.un.d.e.r.land57.8@gmail.com</a>
<a href=""mailto:ser.en.asun.de.rla.nd.5.78@gmail.com"">ser.en.asun.de.rla.nd.5.78@gmail.com</a>
<a href=""mailto:s.eren.as.u.n.derland5.7.8@gmail.com"">s.eren.as.u.n.derland5.7.8@gmail.com</a>
<a href=""mailto:se.ren.asund.er.l.a.nd.5.7.8@gmail.com"">se.ren.asund.er.l.a.nd.5.7.8@gmail.com</a>
<a href=""mailto:s.e.re.n.a.s.un.d.e.rl.a.nd578@gmail.com"">s.e.re.n.a.s.un.d.e.rl.a.nd578@gmail.com</a>
<a href=""mailto:s.er.en.asu.n.der.l.a.n.d5.7.8@gmail.com"">s.er.en.asu.n.der.l.a.n.d5.7.8@gmail.com</a>
<a href=""mailto:s.e.ren.asun.de.r.l.a.n.d57.8@gmail.com"">s.e.ren.asun.de.r.l.a.n.d57.8@gmail.com</a>
<a href=""mailto:s.er.e.n.as.u.n.de.rl.an.d.5.78@gmail.com"">s.er.e.n.as.u.n.de.rl.an.d.5.78@gmail.com</a>
<a href=""mailto:se.ren.as.underl.and5.7.8@gmail.com"">se.ren.as.underl.and5.7.8@gmail.com</a>
<a href=""mailto:se.r.en.as.u.nd.erla.n.d.5.78@gmail.com"">se.r.en.as.u.nd.erla.n.d.5.78@gmail.com</a>
<a href=""mailto:serena.s.u.n.d.e.r.l.and57.8@gmail.com"">serena.s.u.n.d.e.r.l.and57.8@gmail.com</a>
<a href=""mailto:sere.na.sunde.rla.nd5.78@gmail.com"">sere.na.sunde.rla.nd5.78@gmail.com</a>
<a href=""mailto:se.r.en.a.su.nd.er.l.a.nd.5.7.8@gmail.com"">se.r.en.a.su.nd.er.l.a.nd.5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.e.n.a.su.n.der.land.5.7.8@gmail.com"">s.e.r.e.n.a.su.n.der.land.5.7.8@gmail.com</a>
<a href=""mailto:s.er.e.na.sun.derland57.8@gmail.com"">s.er.e.na.sun.derland57.8@gmail.com</a>
<a href=""mailto:sere.n.a.su.n.d.e.rl.a.n.d5.78@gmail.com"">sere.n.a.su.n.d.e.rl.a.n.d5.78@gmail.com</a>
<a href=""mailto:s.er.e.n.as.u.nd.er.l.and.5.78@gmail.com"">s.er.e.n.as.u.nd.er.l.and.5.78@gmail.com</a>
<a href=""mailto:se.r.e.n.as.und.e.rla.nd.578@gmail.com"">se.r.e.n.as.und.e.rla.nd.578@gmail.com</a>
<a href=""mailto:s.e.re.n.as.u.n.d.erlan.d.578@gmail.com"">s.e.re.n.as.u.n.d.erlan.d.578@gmail.com</a>
<a href=""mailto:se.re.nas.un.de.rla.n.d.57.8@gmail.com"">se.re.nas.un.de.rla.n.d.57.8@gmail.com</a>
<a href=""mailto:s.e.r.enasu.nder.la.n.d57.8@gmail.com"">s.e.r.enasu.nder.la.n.d57.8@gmail.com</a>
<a href=""mailto:se.r.enas.u.n.de.rla.n.d5.7.8@gmail.com"">se.r.enas.u.n.de.rla.n.d5.7.8@gmail.com</a>
<a href=""mailto:se.ren.a.s.u.n.d.er.l.a.n.d5.7.8@gmail.com"">se.ren.a.s.u.n.d.er.l.a.n.d5.7.8@gmail.com</a>
<a href=""mailto:se.r.e.nasunde.rl.a.n.d578@gmail.com"">se.r.e.nasunde.rl.a.n.d578@gmail.com</a>
<a href=""mailto:ser.en.a.sun.derl.an.d.5.7.8@gmail.com"">ser.en.a.sun.derl.an.d.5.7.8@gmail.com</a>
<a href=""mailto:ser.en.asunder.l.a.nd.5.7.8@gmail.com"">ser.en.asunder.l.a.nd.5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.e.nas.u.n.d.e.r.la.n.d57.8@gmail.com"">s.e.r.e.nas.u.n.d.e.r.la.n.d57.8@gmail.com</a>
<a href=""mailto:se.r.enasu.n.de.r.l.a.nd5.7.8@gmail.com"">se.r.enasu.n.de.r.l.a.nd5.7.8@gmail.com</a>
<a href=""mailto:se.r.enas.u.nd.erl.a.nd.5.78@gmail.com"">se.r.enas.u.nd.erl.a.nd.5.78@gmail.com</a>
<a href=""mailto:seren.asun.der.la.nd.578@gmail.com"">seren.asun.der.la.nd.578@gmail.com</a>
<a href=""mailto:s.e.r.enas.u.nder.la.nd5.78@gmail.com"">s.e.r.enas.u.nder.la.nd5.78@gmail.com</a>
<a href=""mailto:s.er.en.as.u.n.der.l.an.d5.78@gmail.com"">s.er.en.as.u.n.der.l.an.d5.78@gmail.com</a>
<a href=""mailto:ser.e.n.a.s.unde.r.l.an.d.57.8@gmail.com"">ser.e.n.a.s.unde.r.l.an.d.57.8@gmail.com</a>
<a href=""mailto:s.ere.n.a.sun.der.land57.8@gmail.com"">s.ere.n.a.sun.der.land57.8@gmail.com</a>
<a href=""mailto:s.eren.asu.n.d.e.rl.a.nd.578@gmail.com"">s.eren.asu.n.d.e.rl.a.nd.578@gmail.com</a>
<a href=""mailto:se.re.nasu.nd.e.r.l.a.n.d57.8@gmail.com"">se.re.nasu.nd.e.r.l.a.n.d57.8@gmail.com</a>
<a href=""mailto:sere.n.a.sun.der.lan.d578@gmail.com"">sere.n.a.sun.der.lan.d578@gmail.com</a>
<a href=""mailto:se.r.ena.s.un.d.erl.a.n.d5.7.8@gmail.com"">se.r.ena.s.un.d.erl.a.n.d5.7.8@gmail.com</a>
<a href=""mailto:sere.n.asunde.rla.n.d.578@gmail.com"">sere.n.asunde.rla.n.d.578@gmail.com</a>
<a href=""mailto:s.e.r.en.asun.d.erla.nd.5.78@gmail.com"">s.e.r.en.asun.d.erla.nd.5.78@gmail.com</a>
<a href=""mailto:s.e.re.n.asu.n.der.l.and57.8@gmail.com"">s.e.re.n.asu.n.der.l.and57.8@gmail.com</a>
<a href=""mailto:s.e.r.enas.u.nd.e.r.land5.7.8@gmail.com"">s.e.r.enas.u.nd.e.r.land5.7.8@gmail.com</a>
<a href=""mailto:se.rena.sun.d.er.la.nd57.8@gmail.com"">se.rena.sun.d.er.la.nd57.8@gmail.com</a>
<a href=""mailto:ser.enas.u.n.d.er.l.a.nd5.7.8@gmail.com"">ser.enas.u.n.d.er.l.a.nd5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.enas.u.nd.e.rla.nd.5.78@gmail.com"">s.e.r.enas.u.nd.e.rla.nd.5.78@gmail.com</a>
<a href=""mailto:serenas.u.nd.erl.a.nd57.8@gmail.com"">serenas.u.nd.erl.a.nd57.8@gmail.com</a>
<a href=""mailto:se.r.ena.s.und.erl.a.n.d57.8@gmail.com"">se.r.ena.s.und.erl.a.n.d57.8@gmail.com</a>
<a href=""mailto:s.e.r.en.a.s.u.nderland5.78@gmail.com"">s.e.r.en.a.s.u.nderland5.78@gmail.com</a>
<a href=""mailto:sere.na.sund.e.r.land.5.78@gmail.com"">sere.na.sund.e.r.land.5.78@gmail.com</a>
<a href=""mailto:se.r.en.asunde.rla.n.d578@gmail.com"">se.r.en.asunde.rla.n.d578@gmail.com</a>
<a href=""mailto:sere.n.a.su.n.de.r.l.and5.78@gmail.com"">sere.n.a.su.n.de.r.l.and5.78@gmail.com</a>
<a href=""mailto:se.r.en.a.su.nd.erl.a.n.d578@gmail.com"">se.r.en.a.su.nd.erl.a.n.d578@gmail.com</a>
<a href=""mailto:se.r.en.a.su.nde.r.lan.d.578@gmail.com"">se.r.en.a.su.nde.r.lan.d.578@gmail.com</a>
<a href=""mailto:s.e.re.nasu.nd.e.rl.a.n.d.57.8@gmail.com"">s.e.re.nasu.nd.e.rl.a.n.d.57.8@gmail.com</a>
<a href=""mailto:se.re.n.a.s.u.nd.e.rlan.d.578@gmail.com"">se.re.n.a.s.u.nd.e.rlan.d.578@gmail.com</a>
<a href=""mailto:s.er.enasu.nd.e.r.land5.78@gmail.com"">s.er.enasu.nd.e.r.land5.78@gmail.com</a>
<a href=""mailto:s.eren.as.und.e.rl.a.n.d5.78@gmail.com"">s.eren.as.und.e.rl.a.n.d5.78@gmail.com</a>
<a href=""mailto:s.e.r.enas.un.derl.an.d5.78@gmail.com"">s.e.r.enas.un.derl.an.d5.78@gmail.com</a>
<a href=""mailto:se.r.e.n.as.un.d.e.rl.a.n.d578@gmail.com"">se.r.e.n.as.un.d.e.rl.a.n.d578@gmail.com</a>
<a href=""mailto:s.ere.n.a.su.nde.rla.n.d5.78@gmail.com"">s.ere.n.a.su.nde.rla.n.d5.78@gmail.com</a>
<a href=""mailto:se.r.en.a.su.nd.er.l.a.nd5.7.8@gmail.com"">se.r.en.a.su.nd.er.l.a.nd5.7.8@gmail.com</a>
<a href=""mailto:s.ere.nasun.d.e.r.land.57.8@gmail.com"">s.ere.nasun.d.e.r.land.57.8@gmail.com</a>
<a href=""mailto:ser.ena.s.und.e.r.land578@gmail.com"">ser.ena.s.und.e.r.land578@gmail.com</a>
<a href=""mailto:ser.e.n.as.u.n.derla.n.d5.78@gmail.com"">ser.e.n.as.u.n.derla.n.d5.78@gmail.com</a>
<a href=""mailto:s.e.re.n.a.sund.er.l.and5.78@gmail.com"">s.e.re.n.a.sund.er.l.and5.78@gmail.com</a>
<a href=""mailto:s.e.r.e.n.a.su.nd.e.rlan.d5.7.8@gmail.com"">s.e.r.e.n.a.su.nd.e.rlan.d5.7.8@gmail.com</a>
<a href=""mailto:sere.nas.u.n.d.e.rland.5.7.8@gmail.com"">sere.nas.u.n.d.e.rland.5.7.8@gmail.com</a>
<a href=""mailto:s.er.e.n.as.u.n.d.e.rl.and5.7.8@gmail.com"">s.er.e.n.as.u.n.d.e.rl.and5.7.8@gmail.com</a>
<a href=""mailto:se.r.en.a.s.u.n.de.r.l.a.nd5.78@gmail.com"">se.r.en.a.s.u.n.de.r.l.a.nd5.78@gmail.com</a>
<a href=""mailto:se.r.en.asu.n.d.erland.5.7.8@gmail.com"">se.r.en.asu.n.d.erland.5.7.8@gmail.com</a>
<a href=""mailto:s.er.e.nas.u.n.d.er.l.and.5.78@gmail.com"">s.er.e.nas.u.n.d.er.l.and.5.78@gmail.com</a>
<a href=""mailto:s.e.r.ena.s.un.der.land578@gmail.com"">s.e.r.ena.s.un.der.land578@gmail.com</a>
<a href=""mailto:s.e.re.n.as.und.erl.a.n.d.5.78@gmail.com"">s.e.re.n.as.und.erl.a.n.d.5.78@gmail.com</a>
<a href=""mailto:ser.en.asu.nderl.an.d578@gmail.com"">ser.en.asu.nderl.an.d578@gmail.com</a>
<a href=""mailto:s.er.ena.sunder.lan.d578@gmail.com"">s.er.ena.sunder.lan.d578@gmail.com</a>
<a href=""mailto:s.ere.nas.u.nd.er.l.a.n.d57.8@gmail.com"">s.ere.nas.u.nd.er.l.a.n.d57.8@gmail.com</a>
<a href=""mailto:s.erena.s.u.n.d.e.r.l.and.5.7.8@gmail.com"">s.erena.s.u.n.d.e.r.l.and.5.7.8@gmail.com</a>
<a href=""mailto:se.ren.as.un.d.erl.and5.78@gmail.com"">se.ren.as.un.d.erl.and5.78@gmail.com</a>
<a href=""mailto:s.e.r.ena.s.un.derl.a.n.d57.8@gmail.com"">s.e.r.ena.s.un.derl.a.n.d57.8@gmail.com</a>
<a href=""mailto:s.er.e.n.a.s.u.n.derl.an.d5.78@gmail.com"">s.er.e.n.a.s.u.n.derl.an.d5.78@gmail.com</a>
<a href=""mailto:s.e.r.e.na.s.u.nd.e.r.l.and.5.7.8@gmail.com"">s.e.r.e.na.s.u.nd.e.r.l.and.5.7.8@gmail.com</a>
<a href=""mailto:s.ere.n.asu.nderl.a.nd.5.78@gmail.com"">s.ere.n.asu.nderl.a.nd.5.78@gmail.com</a>
<a href=""mailto:se.re.na.sund.e.r.la.n.d.5.7.8@gmail.com"">se.re.na.sund.e.r.la.n.d.5.7.8@gmail.com</a>
<a href=""mailto:sere.n.as.un.de.r.l.and5.78@gmail.com"">sere.n.as.un.de.r.l.and5.78@gmail.com</a>
<a href=""mailto:se.r.e.nas.u.nd.e.r.land5.78@gmail.com"">se.r.e.nas.u.nd.e.r.land5.78@gmail.com</a>
<a href=""mailto:ser.e.na.su.nd.e.rl.an.d5.78@gmail.com"">ser.e.na.su.nd.e.rl.an.d5.78@gmail.com</a>
<a href=""mailto:s.e.ren.asund.e.r.l.a.nd5.78@gmail.com"">s.e.ren.asund.e.r.l.a.nd5.78@gmail.com</a>
<a href=""mailto:se.r.e.na.s.un.d.er.la.nd5.78@gmail.com"">se.r.e.na.s.un.d.er.la.nd5.78@gmail.com</a>
<a href=""mailto:s.e.ren.a.s.u.n.d.e.r.l.a.n.d.57.8@gmail.com"">s.e.ren.a.s.u.n.d.e.r.l.a.n.d.57.8@gmail.com</a>
<a href=""mailto:s.e.r.ena.s.u.n.der.la.nd5.7.8@gmail.com"">s.e.r.ena.s.u.n.der.la.nd5.7.8@gmail.com</a>
<a href=""mailto:s.er.en.as.un.de.r.lan.d.5.7.8@gmail.com"">s.er.en.as.un.de.r.lan.d.5.7.8@gmail.com</a>
<a href=""mailto:s.ere.nasunde.r.l.an.d5.78@gmail.com"">s.ere.nasunde.r.l.an.d5.78@gmail.com</a>
<a href=""mailto:se.r.e.n.a.su.nd.e.rland5.7.8@gmail.com"">se.r.e.n.a.su.nd.e.rland5.7.8@gmail.com</a>
<a href=""mailto:se.r.enasun.de.rl.a.n.d578@gmail.com"">se.r.enasun.de.rl.a.n.d578@gmail.com</a>
<a href=""mailto:seren.as.und.erlan.d5.78@gmail.com"">seren.as.und.erlan.d5.78@gmail.com</a>
<a href=""mailto:s.er.enas.un.d.er.la.nd578@gmail.com"">s.er.enas.un.d.er.la.nd578@gmail.com</a>
<a href=""mailto:s.e.r.e.n.a.su.nderl.an.d.5.7.8@gmail.com"">s.e.r.e.n.a.su.nderl.an.d.5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.en.as.under.la.n.d5.7.8@gmail.com"">s.e.r.en.as.under.la.n.d5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.e.n.asu.n.der.l.an.d5.7.8@gmail.com"">s.e.r.e.n.asu.n.der.l.an.d5.7.8@gmail.com</a>
<a href=""mailto:s.e.re.n.asu.nderl.and.578@gmail.com"">s.e.re.n.asu.nderl.and.578@gmail.com</a>
<a href=""mailto:ser.e.nas.under.la.nd5.78@gmail.com"">ser.e.nas.under.la.nd5.78@gmail.com</a>
<a href=""mailto:seren.as.unde.rl.an.d578@gmail.com"">seren.as.unde.rl.an.d578@gmail.com</a>
<a href=""mailto:s.e.ren.a.su.n.derla.n.d578@gmail.com"">s.e.ren.a.su.n.derla.n.d578@gmail.com</a>
<a href=""mailto:se.ren.as.u.nd.er.l.an.d.578@gmail.com"">se.ren.as.u.nd.er.l.an.d.578@gmail.com</a>
<a href=""mailto:se.re.n.asun.d.e.rla.nd.5.7.8@gmail.com"">se.re.n.asun.d.e.rla.nd.5.7.8@gmail.com</a>
<a href=""mailto:se.ren.a.s.u.nd.er.l.and.578@gmail.com"">se.ren.a.s.u.nd.er.l.and.578@gmail.com</a>
<a href=""mailto:s.er.e.nas.u.nderlan.d.5.78@gmail.com"">s.er.e.nas.u.nderlan.d.5.78@gmail.com</a>
<a href=""mailto:se.r.en.asu.n.der.l.and578@gmail.com"">se.r.en.asu.n.der.l.and578@gmail.com</a>
<a href=""mailto:ser.e.na.su.n.de.rland.5.7.8@gmail.com"">ser.e.na.su.n.de.rland.5.7.8@gmail.com</a>
<a href=""mailto:ser.e.n.asunde.r.l.a.n.d5.78@gmail.com"">ser.e.n.asunde.r.l.a.n.d5.78@gmail.com</a>
<a href=""mailto:s.e.ren.a.su.n.de.r.l.an.d.5.7.8@gmail.com"">s.e.ren.a.su.n.de.r.l.an.d.5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.enas.un.de.r.lan.d5.78@gmail.com"">s.e.r.enas.un.de.r.lan.d5.78@gmail.com</a>
<a href=""mailto:s.er.e.nas.under.la.n.d.5.7.8@gmail.com"">s.er.e.nas.under.la.n.d.5.7.8@gmail.com</a>
<a href=""mailto:se.ren.a.s.u.n.d.er.land.5.78@gmail.com"">se.ren.a.s.u.n.d.er.land.5.78@gmail.com</a>
<a href=""mailto:s.e.r.e.na.s.und.e.rl.a.n.d5.78@gmail.com"">s.e.r.e.na.s.und.e.rl.a.n.d5.78@gmail.com</a>
<a href=""mailto:se.r.ena.sunde.r.l.a.nd.5.7.8@gmail.com"">se.r.ena.sunde.r.l.a.nd.5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.e.nasun.d.erl.a.nd578@gmail.com"">s.e.r.e.nasun.d.erl.a.nd578@gmail.com</a>
<a href=""mailto:ser.en.a.sun.de.r.land.5.7.8@gmail.com"">ser.en.a.sun.de.r.land.5.7.8@gmail.com</a>
<a href=""mailto:s.e.re.na.s.un.de.rl.a.n.d5.7.8@gmail.com"">s.e.re.na.s.un.de.rl.a.n.d5.7.8@gmail.com</a>
<a href=""mailto:ser.en.asu.nderla.n.d5.78@gmail.com"">ser.en.asu.nderla.n.d5.78@gmail.com</a>
<a href=""mailto:s.eren.asund.e.r.l.a.nd5.7.8@gmail.com"">s.eren.asund.e.r.l.a.nd5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.en.as.und.er.l.a.n.d.5.78@gmail.com"">s.e.r.en.as.und.er.l.a.n.d.5.78@gmail.com</a>
<a href=""mailto:sere.n.as.u.n.de.r.l.a.nd.57.8@gmail.com"">sere.n.as.u.n.de.r.l.a.nd.57.8@gmail.com</a>
<a href=""mailto:seren.a.s.u.n.d.e.r.lan.d.5.7.8@gmail.com"">seren.a.s.u.n.d.e.r.lan.d.5.7.8@gmail.com</a>
<a href=""mailto:se.ren.as.u.n.der.l.a.n.d.578@gmail.com"">se.ren.as.u.n.der.l.a.n.d.578@gmail.com</a>
<a href=""mailto:sere.n.a.su.n.de.r.la.n.d5.7.8@gmail.com"">sere.n.a.su.n.de.r.la.n.d5.7.8@gmail.com</a>
<a href=""mailto:s.e.re.n.a.su.n.d.er.lan.d.5.7.8@gmail.com"">s.e.re.n.a.su.n.d.er.lan.d.5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.ena.s.un.d.er.la.nd.578@gmail.com"">s.e.r.ena.s.un.d.er.la.nd.578@gmail.com</a>
<a href=""mailto:s.eren.as.u.n.de.r.la.nd5.7.8@gmail.com"">s.eren.as.u.n.de.r.la.nd5.7.8@gmail.com</a>
<a href=""mailto:se.re.nasu.n.de.rla.n.d.578@gmail.com"">se.re.nasu.n.de.rla.n.d.578@gmail.com</a>
<a href=""mailto:ser.e.n.a.s.un.der.la.nd578@gmail.com"">ser.e.n.a.s.un.der.la.nd578@gmail.com</a>
<a href=""mailto:se.re.nas.u.n.d.er.la.n.d578@gmail.com"">se.re.nas.u.n.d.er.la.n.d578@gmail.com</a>
<a href=""mailto:ser.e.nasu.n.de.r.land57.8@gmail.com"">ser.e.nasu.n.de.r.land57.8@gmail.com</a>
<a href=""mailto:s.e.re.nasund.er.la.n.d.5.7.8@gmail.com"">s.e.re.nasund.er.la.n.d.5.7.8@gmail.com</a>
<a href=""mailto:s.er.ena.sund.e.r.l.a.nd57.8@gmail.com"">s.er.ena.sund.e.r.l.a.nd57.8@gmail.com</a>
<a href=""mailto:s.er.e.na.s.und.er.l.a.nd578@gmail.com"">s.er.e.na.s.und.er.l.a.nd578@gmail.com</a>
<a href=""mailto:s.e.rena.s.unde.r.la.n.d.57.8@gmail.com"">s.e.rena.s.unde.r.la.n.d.57.8@gmail.com</a>
<a href=""mailto:s.er.e.n.as.u.n.d.e.r.lan.d57.8@gmail.com"">s.er.e.n.as.u.n.d.e.r.lan.d57.8@gmail.com</a>
<a href=""mailto:s.e.ren.a.su.n.d.e.rl.and5.78@gmail.com"">s.e.ren.a.su.n.d.e.rl.and5.78@gmail.com</a>
<a href=""mailto:s.er.ena.s.u.nde.r.lan.d.5.78@gmail.com"">s.er.ena.s.u.nde.r.lan.d.5.78@gmail.com</a>
<a href=""mailto:s.e.r.e.n.asu.n.d.e.rlan.d.578@gmail.com"">s.e.r.e.n.asu.n.d.e.rlan.d.578@gmail.com</a>
<a href=""mailto:s.e.r.e.na.s.un.de.rl.a.nd5.7.8@gmail.com"">s.e.r.e.na.s.un.de.rl.a.nd5.7.8@gmail.com</a>
<a href=""mailto:ser.enasu.nd.er.land.57.8@gmail.com"">ser.enasu.nd.er.land.57.8@gmail.com</a>
<a href=""mailto:serena.s.und.er.la.nd5.7.8@gmail.com"">serena.s.und.er.la.nd5.7.8@gmail.com</a>
<a href=""mailto:se.r.e.n.a.s.und.er.l.and.578@gmail.com"">se.r.e.n.a.s.und.er.l.and.578@gmail.com</a>
<a href=""mailto:se.re.n.asun.der.land.578@gmail.com"">se.re.n.asun.der.land.578@gmail.com</a>
<a href=""mailto:serena.sun.d.erl.a.nd.5.78@gmail.com"">serena.sun.d.erl.a.nd.5.78@gmail.com</a>
<a href=""mailto:se.renas.un.d.e.rl.a.n.d.57.8@gmail.com"">se.renas.un.d.e.rl.a.n.d.57.8@gmail.com</a>
<a href=""mailto:s.erena.s.un.de.r.l.a.nd5.78@gmail.com"">s.erena.s.un.de.r.l.a.nd5.78@gmail.com</a>
<a href=""mailto:ser.e.nas.u.n.d.er.l.an.d5.7.8@gmail.com"">ser.e.nas.u.n.d.er.l.an.d5.7.8@gmail.com</a>
<a href=""mailto:s.er.e.n.as.underl.a.nd5.78@gmail.com"">s.er.e.n.as.underl.a.nd5.78@gmail.com</a>
<a href=""mailto:se.r.e.n.as.u.n.d.erland5.7.8@gmail.com"">se.r.e.n.as.u.n.d.erland5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.ena.s.und.e.r.la.nd5.7.8@gmail.com"">s.e.r.ena.s.und.e.r.la.nd5.7.8@gmail.com</a>
<a href=""mailto:s.er.e.n.asu.n.de.rland.5.7.8@gmail.com"">s.er.e.n.asu.n.de.rland.5.7.8@gmail.com</a>
<a href=""mailto:s.er.e.na.s.under.l.a.nd.5.78@gmail.com"">s.er.e.na.s.under.l.a.nd.5.78@gmail.com</a>
<a href=""mailto:ser.e.nasu.nderla.nd.5.7.8@gmail.com"">ser.e.nasu.nderla.nd.5.7.8@gmail.com</a>
<a href=""mailto:s.ere.n.asund.e.r.l.an.d.5.7.8@gmail.com"">s.ere.n.asund.e.r.l.an.d.5.7.8@gmail.com</a>
<a href=""mailto:sere.na.s.un.der.la.nd5.78@gmail.com"">sere.na.s.un.der.la.nd5.78@gmail.com</a>
<a href=""mailto:s.er.ena.s.un.de.rl.a.n.d.5.78@gmail.com"">s.er.ena.s.un.de.rl.a.n.d.5.78@gmail.com</a>
<a href=""mailto:sere.n.a.su.nderl.a.n.d.5.78@gmail.com"">sere.n.a.su.nderl.a.n.d.5.78@gmail.com</a>
<a href=""mailto:s.e.r.e.n.as.u.n.d.erlan.d5.7.8@gmail.com"">s.e.r.e.n.as.u.n.d.erlan.d5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.ena.su.nde.r.l.a.nd5.7.8@gmail.com"">s.e.r.ena.su.nde.r.l.a.nd5.7.8@gmail.com</a>
<a href=""mailto:s.er.e.nas.underl.and5.78@gmail.com"">s.er.e.nas.underl.and5.78@gmail.com</a>
<a href=""mailto:sere.nasun.derl.and.578@gmail.com"">sere.nasun.derl.and.578@gmail.com</a>
<a href=""mailto:s.e.ren.a.s.un.der.la.nd5.78@gmail.com"">s.e.ren.a.s.un.der.la.nd5.78@gmail.com</a>
<a href=""mailto:s.ere.n.asu.n.der.lan.d.578@gmail.com"">s.ere.n.asu.n.der.lan.d.578@gmail.com</a>
<a href=""mailto:serena.su.nde.r.l.an.d.578@gmail.com"">serena.su.nde.r.l.an.d.578@gmail.com</a>
<a href=""mailto:s.er.en.as.u.nd.e.rland5.78@gmail.com"">s.er.en.as.u.nd.e.rland5.78@gmail.com</a>
<a href=""mailto:se.r.en.as.und.er.l.an.d5.7.8@gmail.com"">se.r.en.as.und.er.l.an.d5.7.8@gmail.com</a>
<a href=""mailto:s.e.re.nasu.nd.erland.578@gmail.com"">s.e.re.nasu.nd.erland.578@gmail.com</a>
<a href=""mailto:s.e.re.na.s.u.n.d.e.r.l.a.n.d5.78@gmail.com"">s.e.re.na.s.u.n.d.e.r.l.a.n.d5.78@gmail.com</a>
<a href=""mailto:s.e.re.n.asunde.rla.n.d.578@gmail.com"">s.e.re.n.asunde.rla.n.d.578@gmail.com</a>
<a href=""mailto:s.er.e.n.a.s.u.nde.r.l.a.nd57.8@gmail.com"">s.er.e.n.a.s.u.nde.r.l.a.nd57.8@gmail.com</a>
<a href=""mailto:se.r.e.n.as.u.n.de.rl.a.nd.578@gmail.com"">se.r.e.n.as.u.n.de.rl.a.nd.578@gmail.com</a>
<a href=""mailto:s.e.r.en.a.s.u.nde.rla.n.d5.78@gmail.com"">s.e.r.en.a.s.u.nde.rla.n.d5.78@gmail.com</a>
<a href=""mailto:ser.en.a.s.u.nderl.a.nd.57.8@gmail.com"">ser.en.a.s.u.nderl.a.nd.57.8@gmail.com</a>
<a href=""mailto:s.e.r.en.a.su.nde.rl.an.d5.7.8@gmail.com"">s.e.r.en.a.su.nde.rl.an.d5.7.8@gmail.com</a>
<a href=""mailto:ser.e.n.asunde.r.la.nd5.78@gmail.com"">ser.e.n.asunde.r.la.nd5.78@gmail.com</a>
<a href=""mailto:se.r.en.a.su.nder.land.5.78@gmail.com"">se.r.en.a.su.nder.land.5.78@gmail.com</a>
<a href=""mailto:se.r.e.na.s.un.der.lan.d57.8@gmail.com"">se.r.e.na.s.un.der.lan.d57.8@gmail.com</a>
<a href=""mailto:ser.e.n.asund.e.r.l.a.n.d5.78@gmail.com"">ser.e.n.asund.e.r.l.a.n.d5.78@gmail.com</a>"
E4E597VK,Untitled,Josif_tepe,C++,Monday 26th of February 2024 10:48:19 AM CDT,"#include <iostream>
#include <map>
#include <cmath>
#include <set>
#include <vector>
using namespace std;
 
int main() {
    ios_base::sync_with_stdio(false);
    int n, k;
    cin >> n >> k;
     
    string s;
    cin >> s;
     
    multiset<int> ms;
    for(int i = 0; i < 26; i++) {
        ms.insert(0);
    }
    int i = 0, j = 0;
    int question_marks = 0;
    int sum = 0;
    vector<int> cnt(26, 0);
    while(j < n) {
        if(*ms.begin() <= k and *ms.rbegin() <= k) {
            if(s[j] != '?') {
                sum++;
                ms.erase(ms.find(cnt[s[j] - 'a']));
                cnt[s[j] - 'a']++;
                ms.insert(cnt[s[j] - 'a']);
            }
            else {
                question_marks++;
            }
            
            j++;
            if(sum + question_marks == 26 * k) {
                cout << i + 1 << endl;
                return 0;
            }
        }
        else {
            if(s[i] != '?') {
                sum--;
                ms.erase(ms.find(cnt[s[i] - 'a']));
                cnt[s[i] - 'a']--;
                ms.insert(cnt[s[i] - 'a']);
            }
            else {
                question_marks--;
            }
            i++;
            if(sum + question_marks == 26 * k) {
                cout << i << endl;
                return 0;
            }
             
        }
    }
    cout << -1 << endl;
    return 0;
}
// a?cdefghijklmnopqrstuvwxyza?"
Ma8zCL9Z,Untitled,Josif_tepe,C++,Monday 26th of February 2024 10:37:30 AM CDT,"#include <iostream>
//#include <bits/stdc++.h>
#include <fstream>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
typedef long long ll;
using namespace std;


int main() {
    int n, k;
    cin >> n;
    
    vector<int> v(n);
    for(int i = 0; i < n; i++) {
        cin >> v[i];
    }
    map<ll, ll> cnt;
    ll sum = 0, res = 0;
    for(int i = 0; i < n; i++) {
        sum += v[i];
        if(sum == 0) {
            res++;
        }
        if(cnt.count(sum)) {
            res += cnt[sum];
        }
        cnt[sum]++;
    }
    cout << res << endl;
        return 0;
}
"
m2irGfSR,courseera,nirajs,Python,Monday 26th of February 2024 10:30:59 AM CDT,"from collections import defaultdict
import math
import os
import random
import re
import sys

""""""
4,A,B,C
3,B,C,A
2,C,B,A
2,C,A,B


Count 
A -> x
B -> b 

1.) Creat a count Map [A] -> count 
2.a) create a list and sort [(4,A), (2,B)]
2.b) creata a heap with these elements 
    pick up top element
2.c) Scan the map entries get the max


A
A
B
B
C
C
D
D

2
[1,2,3,4] -> [1,3,4] ->

rep

1.) check if we have winner
    a.) if yes  then return the winner
    b.) No
        2.) delete min entry from all got0 step 1 with new input 



""""""

class BallotGroup:
    def __init__(self, votes: int, candidates: list[str]):
        self.votes = votes
        self.candidates = candidates

# vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

def pluralityWinner(ballots: list[BallotGroup]) -> str:
    countMap = defaultdict(int)
    candidate = None
    maxCount = 0 
    for entry in ballots:
        count = entry.votes
        candidates = entry.candidates
       
        countMap[candidates[0]] += count
        
    for entry in countMap:
        key = entry
        val = countMap[key]
        if candidate == None:
            candidate = key 
            maxCount = val 
            continue

        if val > maxCount:
            candidate = key
            maxCount = val 
        elif val == maxCount and key < candidate:
            candidate = key 
    
    return candidate


def checkForWinner(votes) -> str:
    countMap = defaultdict(int)
    maxCount = 0
    candidate = None
    sz = len(votes)
    for entry in votes:
        countMap[entry[0]] += 1
    
    for key in countMap:
        if candidate == None:
            candidate = key 
            maxCount = countMap[key]
            continue
        if maxCount < countMap[key]:
            candidate = key
            maxCount = countMap[key]
             
            
    
    if (maxCount > sz//2):
        return candidate
    
    else:
        return None
        
    
def getMinandTrim(votes: list[list[str]]) -> list[list[str]]:
    countMap = defaultdict(int)
    maxCount = len(votes) + 1
    candidate = None
    for entry in votes:
        countMap[entry[0]] += 1
    
    for key in countMap:
        if candidate == None:
            candidate = key 
            maxCount = countMap[key]
            continue
        elif maxCount > countMap[key]:
            candidate = key
            maxCount = countMap[key]
            
        elif maxCount == countMap[key] and candidate < countMap[key]:
            candidate = key
    
    newVotes = []
    for entry in votes:
        temp = []
        for ele in entry:
            if ele != candidate:
                temp.append(ele)
        newVotes.append(temp)         
        
    return newVotes
    
        
    
    
        
    
    
def rankedChoiceWinner(ballots: list[BallotGroup]) -> str:
    
    votes = []
    for entry in ballots:
        for _ in range(entry.votes):
            votes.append(entry.candidates)
    
    while True:
        winner = checkForWinner(votes)
        if winner != None:
            return winner 
        votes = getMinandTrim(votes) 

# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

def main():
    ballotsCount = int(input().strip().split("","")[0])

    ballots = list[BallotGroup]()
    for _ in range(ballotsCount):
        ballotLine = input().strip().split("","")
        ballots.append(BallotGroup(int(ballotLine[0]), ballotLine[1:]))

    with open(os.environ[""OUTPUT_PATH""], ""w"") as outfile:
        outfile.write(f""pluralityWinner: {pluralityWinner(ballots)}\n"")
        outfile.write(f""rankedChoiceWinner: {rankedChoiceWinner(ballots)}\n"")

    # Disable unused import warnings for the default imports.
    _ = math, random, re, sys

if __name__ == ""__main__"":
    main()"
Ayqg2inM,Untitled,Josif_tepe,C++,Monday 26th of February 2024 10:26:25 AM CDT,"#include <iostream>
//#include <bits/stdc++.h>
#include <fstream>
#include <algorithm>
#include <set>
#include <vector>
using namespace std;


int main() {
    int n, k;
    cin >> n >> k;
    
    vector<int> v(n);
    for(int i = 0; i < n; i++) {
        cin >> v[i];
    }
    multiset<int> ms;
    for(int i = 0; i < k; i++) {
        ms.insert(0);
    }
    vector<int> cnt(k, 0);
    int i = 0, j = 0;
    int res = 0;
    while(j < n) {
        if(*ms.begin() <= 3 and *ms.rbegin() <= 3) {
            if(v[j] < k) {
                ms.erase(ms.find(cnt[v[j]]));
                cnt[v[j]]++;
                ms.insert(cnt[v[j]]);
            }
            j++;
            if(*ms.begin() == 3 and *ms.rbegin() == 3) {
                res = max(res, j - i);
            }
        }
        else {
            if(v[i] < k) {
                ms.erase(ms.find(cnt[v[i]]));
                cnt[v[i]]--;
                ms.insert(cnt[v[i]]);
            }
            i++;
            if(*ms.begin() == 3 and *ms.rbegin() == 3) {
                res = max(res, j - i);
            }
        }
    }
    cout << res << endl;
    return 0;
}
"
