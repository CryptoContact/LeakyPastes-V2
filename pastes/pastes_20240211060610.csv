id,title,username,language,date,content
f70tTin4,News Feb10 24,Newscaster_Ned,Email,Saturday 10th of February 2024 11:46:43 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

O‎o‎o‎o‎h‎ ‎d‎a‎ ‎K‎u‎ ‎K‎r‎u‎x‎ ‎K‎r‎a‎n‎ ‎i‎s‎ ‎d‎a‎ ‎b‎e‎s‎t‎!‎ ‎R‎e‎t‎'‎s‎ ‎g‎a‎s‎ ‎d‎o‎s‎e‎ ‎k‎y‎k‎e‎s‎!‎

P‎i‎n‎k‎e‎r‎t‎o‎n‎:‎ ‎I‎f‎ ‎B‎i‎d‎e‎n‎ ‎C‎a‎n‎’‎t‎ ‎W‎i‎n‎ ‎i‎n‎ ‎2‎0‎2‎4‎,‎ ‎M‎a‎y‎b‎e‎ ‎A‎I‎ ‎C‎a‎n‎ ‎W‎i‎n‎ ‎f‎o‎r‎ ‎H‎i‎m‎

W‎i‎l‎l‎ ‎B‎i‎l‎l‎ ‎G‎a‎t‎e‎s‎’‎ ‎M‎i‎c‎r‎o‎s‎o‎f‎t‎ ‎’‎T‎e‎c‎h‎-‎T‎o‎t‎a‎l‎i‎t‎a‎r‎i‎a‎n‎i‎s‎m‎’‎ ‎S‎u‎c‎c‎e‎e‎d‎?‎
(‎J‎o‎n‎a‎t‎h‎a‎n‎ ‎R‎a‎a‎,‎ ‎L‎e‎o‎n‎ ‎N‎e‎a‎l‎/‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎;‎ ‎B‎N‎N‎)‎
B‎i‎g‎ ‎T‎e‎c‎h‎ ‎h‎a‎s‎ ‎a‎ ‎p‎l‎a‎n‎ ‎t‎o‎ ‎u‎s‎e‎ ‎A‎I‎ ‎t‎o‎ ‎c‎r‎e‎a‎t‎e‎ ‎a‎ ‎“‎h‎e‎a‎l‎t‎h‎y‎ ‎i‎n‎f‎o‎r‎m‎a‎t‎i‎o‎n‎ ‎e‎c‎o‎s‎y‎s‎t‎e‎m‎”‎ ‎j‎u‎s‎t‎ ‎i‎n‎ ‎t‎i‎m‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎2‎0‎2‎4‎ ‎e‎l‎e‎c‎t‎i‎o‎n‎.‎

T‎h‎e‎ ‎L‎i‎s‎t‎:‎ ‎6‎4‎ ‎W‎a‎y‎s‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎O‎p‎e‎n‎e‎d‎ ‎A‎m‎e‎r‎i‎c‎a‎’‎s‎ ‎B‎o‎r‎d‎e‎r‎s‎ ‎t‎o‎ ‎t‎h‎e‎ ‎W‎o‎r‎l‎d‎’‎s‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎
T‎h‎e‎ ‎L‎i‎s‎t‎:‎ ‎6‎4‎ ‎W‎a‎y‎s‎ ‎B‎i‎d‎e‎n‎ ‎O‎p‎e‎n‎e‎d‎ ‎A‎m‎e‎r‎i‎c‎a‎'‎s‎ ‎B‎o‎r‎d‎e‎r‎s‎ ‎t‎o‎ ‎t‎h‎e‎ ‎W‎o‎r‎l‎d‎'‎s‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎
2‎,‎3‎4‎9‎
F‎e‎t‎t‎e‎r‎m‎a‎n‎ ‎o‎n‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎I‎s‎r‎a‎e‎l‎ ‎C‎r‎i‎t‎i‎c‎i‎s‎m‎:‎ ‎H‎a‎m‎a‎s‎ ‎I‎s‎ ‎‘‎R‎e‎s‎p‎o‎n‎s‎i‎b‎l‎e‎ ‎f‎o‎r‎ ‎A‎l‎l‎’‎ ‎C‎i‎v‎i‎l‎i‎a‎n‎ ‎C‎a‎
F‎e‎t‎t‎e‎r‎m‎a‎n‎ ‎o‎n‎ ‎B‎i‎d‎e‎n‎'‎s‎ ‎I‎s‎r‎a‎e‎l‎ ‎C‎r‎i‎t‎i‎c‎i‎s‎m‎:‎ ‎H‎a‎m‎a‎s‎ ‎I‎s‎ ‎R‎e‎s‎p‎o‎n‎s‎i‎b‎l‎e‎ ‎f‎o‎r‎ ‎C‎a‎s‎u‎a‎l‎t‎i‎e‎s‎
1‎4‎6‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎F‎o‎r‎m‎e‎r‎ ‎W‎H‎ ‎D‎o‎c‎ ‎R‎o‎n‎n‎y‎ ‎J‎a‎c‎k‎s‎o‎n‎:‎ ‎T‎i‎m‎e‎ ‎t‎o‎ ‎T‎h‎i‎n‎k‎ ‎A‎b‎o‎u‎t‎ ‎I‎n‎v‎o‎k‎i‎n‎g‎ ‎2‎5‎t‎h‎ ‎A‎m‎e‎n‎d‎m‎e‎n‎t‎ ‎t‎o‎ ‎R‎e‎m‎o‎v‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎-‎-‎ ‎F‎o‎r‎m‎e‎r‎ ‎W‎H‎ ‎D‎o‎c‎ ‎R‎o‎n‎n‎y‎ ‎J‎a‎c‎k‎s‎o‎n‎:‎ ‎T‎i‎m‎e‎ ‎t‎o‎ ‎T‎h‎i‎n‎k‎ ‎A‎b‎o‎u‎t‎ ‎I‎n‎v‎o‎k‎i‎n‎g‎ ‎2‎5‎t‎h‎
2‎,‎4‎1‎8‎
P‎i‎n‎k‎e‎r‎t‎o‎n‎:‎ ‎I‎f‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎C‎a‎n‎’‎t‎ ‎W‎i‎n‎ ‎i‎n‎ ‎2‎0‎2‎4‎,‎ ‎M‎a‎y‎b‎e‎ ‎A‎I‎ ‎C‎a‎n‎ ‎W‎i‎n‎ ‎f‎o‎r‎ ‎H‎i‎m‎
P‎i‎n‎k‎e‎r‎t‎o‎n‎:‎ ‎I‎f‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎C‎a‎n‎'‎t‎ ‎W‎i‎n‎ ‎i‎n‎ ‎2‎0‎2‎4‎,‎ ‎M‎a‎y‎b‎e‎ ‎A‎I‎ ‎C‎a‎n‎ ‎W‎i‎n‎ ‎f‎o‎r‎ ‎H‎i‎m‎
1‎,‎2‎2‎9‎
T‎r‎u‎m‎p‎:‎ ‎I‎f‎ ‎B‎i‎d‎e‎n‎ ‎‘‎T‎o‎o‎ ‎M‎e‎n‎t‎a‎l‎l‎y‎ ‎I‎n‎c‎o‎m‎p‎e‎t‎e‎n‎t‎ ‎t‎o‎ ‎C‎o‎n‎v‎i‎c‎t‎,‎’‎ ‎H‎e‎’‎s‎ ‎U‎n‎f‎i‎t‎ ‎t‎o‎ ‎S‎e‎r‎v‎e‎
T‎r‎u‎m‎p‎:‎ ‎I‎f‎ ‎B‎i‎d‎e‎n‎ ‎'‎T‎o‎o‎ ‎M‎e‎n‎t‎a‎l‎l‎y‎ ‎I‎n‎c‎o‎m‎p‎e‎t‎e‎n‎t‎ ‎t‎o‎ ‎C‎o‎n‎v‎i‎c‎t‎,‎'‎ ‎H‎e‎’‎s‎ ‎U‎n‎f‎i‎t‎ ‎t‎o‎ ‎S‎e‎r‎v‎e‎
1‎,‎0‎9‎3‎
G‎O‎P‎ ‎S‎e‎n‎a‎t‎o‎r‎s‎ ‎B‎l‎o‎c‎k‎ ‎M‎c‎C‎o‎n‎n‎e‎l‎l‎’‎s‎ ‎M‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎B‎a‎i‎l‎o‎u‎t‎ ‎f‎o‎r‎ ‎S‎a‎n‎c‎t‎u‎a‎r‎y‎ ‎C‎i‎t‎i‎e‎s‎
G‎O‎P‎ ‎S‎e‎n‎a‎t‎o‎r‎s‎ ‎B‎l‎o‎c‎k‎ ‎M‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎B‎a‎i‎l‎o‎u‎t‎ ‎f‎o‎r‎ ‎S‎a‎n‎c‎t‎u‎a‎r‎y‎ ‎C‎i‎t‎i‎e‎s‎
7‎1‎0‎
B‎i‎d‎e‎n‎,‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎G‎i‎v‎e‎ ‎I‎s‎r‎a‎e‎l‎ ‎4‎5‎ ‎D‎a‎y‎s‎ ‎t‎o‎ ‎S‎u‎b‎m‎i‎t‎ ‎H‎u‎m‎a‎n‎ ‎R‎i‎g‎h‎t‎s‎ ‎R‎e‎p‎o‎r‎t‎
B‎i‎d‎e‎n‎,‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎G‎i‎v‎e‎ ‎I‎s‎r‎a‎e‎l‎ ‎4‎5‎ ‎D‎a‎y‎s‎ ‎t‎o‎ ‎S‎u‎b‎m‎i‎t‎ ‎H‎u‎m‎a‎n‎ ‎R‎i‎g‎h‎t‎s‎ ‎R‎e‎p‎o‎r‎t‎
1‎,‎0‎8‎9‎
W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎L‎a‎w‎y‎e‎r‎s‎ ‎B‎l‎a‎m‎e‎ ‎T‎i‎m‎i‎n‎g‎ ‎o‎f‎ ‎S‎p‎e‎c‎i‎a‎l‎ ‎C‎o‎u‎n‎s‎e‎l‎’‎s‎ ‎I‎n‎t‎e‎r‎v‎i‎e‎w‎ ‎f‎o‎r‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎‘‎P‎o‎o‎r‎ ‎M‎e‎m‎o‎r‎y‎’‎
L‎a‎w‎y‎e‎r‎s‎ ‎B‎l‎a‎m‎e‎ ‎D‎O‎J‎ ‎I‎n‎t‎e‎r‎v‎i‎e‎w‎ ‎T‎i‎m‎i‎n‎g‎ ‎f‎o‎r‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎‘‎P‎o‎o‎r‎ ‎M‎e‎m‎o‎r‎y‎
6‎,‎7‎2‎9‎
A‎m‎e‎r‎i‎c‎a‎ ‎L‎a‎s‎t‎:‎ ‎1‎2‎ ‎S‎e‎n‎a‎t‎e‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎V‎o‎t‎e‎ ‎t‎o‎ ‎S‎e‎n‎d‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎A‎n‎o‎t‎h‎e‎r‎ ‎$‎6‎0‎B‎ ‎A‎f‎t‎e‎r‎ ‎V‎o‎w‎i‎n‎g‎ ‎t‎o‎ ‎P‎u‎t‎ ‎U‎.‎S‎.‎ ‎B‎o‎r‎d‎
A‎m‎e‎r‎i‎c‎a‎ ‎L‎a‎s‎t‎:‎ ‎1‎7‎ ‎G‎O‎P‎s‎ ‎A‎p‎p‎r‎o‎v‎e‎ ‎$‎6‎0‎B‎ ‎f‎o‎r‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎A‎f‎t‎e‎r‎ ‎V‎o‎w‎i‎n‎g‎ ‎t‎o‎ ‎P‎u‎t‎ ‎U‎S‎ ‎F‎i‎r‎s‎t‎
6‎,‎5‎7‎0‎
9‎ ‎i‎n‎ ‎1‎0‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎H‎a‎v‎e‎ ‎C‎o‎n‎c‎e‎r‎n‎s‎ ‎A‎b‎o‎u‎t‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎P‎h‎y‎s‎i‎c‎a‎l‎,‎ ‎M‎e‎n‎t‎a‎l‎ ‎H‎e‎a‎l‎t‎h‎
9‎ ‎i‎n‎ ‎1‎0‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎H‎a‎v‎e‎ ‎C‎o‎n‎c‎e‎r‎n‎s‎ ‎A‎b‎o‎u‎t‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎P‎h‎y‎s‎i‎c‎a‎l‎,‎ ‎M‎e‎n‎t‎a‎l‎ ‎H‎e‎a‎l‎t‎h‎

I‎n‎d‎i‎a‎n‎a‎p‎o‎l‎i‎s‎ ‎M‎a‎c‎a‎q‎u‎e‎ ‎C‎h‎a‎r‎g‎e‎d‎ ‎i‎n‎ ‎B‎r‎u‎t‎a‎l‎ ‎S‎t‎a‎b‎b‎i‎n‎g‎ ‎D‎e‎a‎t‎h‎ ‎o‎f‎ ‎2‎ ‎W‎h‎i‎t‎e‎ ‎W‎o‎m‎e‎n‎ ‎o‎n‎ ‎M‎i‎t‎t‎h‎o‎e‎f‎f‎e‎r‎ ‎R‎o‎a‎d‎.‎

T‎i‎m‎e‎'‎s‎ ‎u‎p‎,‎ ‎N‎e‎i‎l‎ ‎d‎e‎G‎r‎a‎s‎s‎e‎ ‎T‎y‎s‎o‎n‎!‎


D‎e‎s‎ ‎M‎o‎i‎n‎e‎s‎ ‎N‎i‎g‎ ‎G‎e‎t‎s‎ ‎L‎i‎f‎e‎ ‎f‎o‎r‎ ‎M‎u‎r‎d‎e‎r‎ ‎o‎f‎ ‎2‎ ‎P‎e‎o‎p‎l‎e‎.‎


B‎o‎n‎d‎ ‎H‎i‎l‎l‎ ‎C‎o‎o‎n‎ ‎I‎n‎d‎i‎c‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎T‎h‎r‎o‎w‎i‎n‎g‎ ‎W‎o‎m‎a‎n‎'‎s‎ ‎B‎o‎d‎y‎ ‎o‎u‎t‎ ‎H‎i‎s‎ ‎W‎i‎n‎d‎o‎w‎.‎


P‎o‎r‎t‎ ‎A‎l‎l‎e‎n‎ ‎N‎e‎g‎r‎e‎s‎s‎ ‎C‎u‎n‎t‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎S‎e‎t‎t‎i‎n‎g‎ ‎W‎o‎m‎a‎n‎'‎s‎ ‎H‎a‎i‎r‎ ‎o‎n‎ ‎F‎i‎r‎e‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎o‎u‎c‎a‎n‎ ‎S‎a‎m‎.‎.‎.‎.‎.‎.‎ ‎W‎h‎y‎?‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎F‎u‎c‎k‎.‎

T‎o‎d‎a‎y‎
P‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
6‎8‎°‎
/‎5‎7‎°‎
6‎3‎%‎
N‎N‎E‎ ‎9‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎0‎ ‎|‎ ‎D‎a‎y‎
6‎8‎°‎
6‎3‎%‎
N‎N‎E‎
9‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎ ‎t‎h‎i‎s‎ ‎m‎o‎r‎n‎i‎n‎g‎ ‎f‎o‎l‎l‎o‎w‎e‎d‎ ‎b‎y‎ ‎t‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎P‎o‎t‎e‎n‎t‎i‎a‎l‎ ‎f‎o‎r‎ ‎s‎e‎v‎e‎r‎e‎ ‎t‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎.‎ ‎H‎i‎g‎h‎ ‎6‎8‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎6‎0‎%‎.‎
H‎u‎m‎i‎d‎i‎t‎y‎
8‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
2‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎1‎4‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
6‎:‎1‎4‎ ‎p‎m‎
S‎a‎t‎ ‎1‎0‎ ‎|‎ ‎N‎i‎g‎h‎t‎
5‎7‎°‎
8‎8‎%‎
E‎N‎E‎
8‎
m‎p‎h‎
A‎ ‎f‎e‎w‎ ‎s‎h‎o‎w‎e‎r‎s‎ ‎t‎h‎i‎s‎ ‎e‎v‎e‎n‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎n‎u‎m‎e‎r‎o‎u‎s‎ ‎t‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎ ‎d‎e‎v‎e‎l‎o‎p‎i‎n‎g‎ ‎o‎v‎e‎r‎n‎i‎g‎h‎t‎.‎ ‎L‎o‎w‎ ‎5‎7‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎E‎N‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎9‎0‎%‎.‎
H‎u‎m‎i‎d‎i‎t‎y‎
9‎4‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
7‎:‎5‎9‎ ‎a‎m‎
W‎a‎x‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
7‎:‎2‎0‎ ‎p‎m‎
S‎u‎n‎ ‎1‎1‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
6‎7‎°‎
/‎4‎0‎°‎
7‎9‎%‎
N‎W‎ ‎1‎5‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎2‎
S‎u‎n‎n‎y‎
6‎3‎°‎
/‎3‎7‎°‎
3‎%‎
N‎N‎W‎ ‎1‎5‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎3‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎5‎°‎
/‎4‎2‎°‎
5‎%‎
S‎ ‎7‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎4‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎0‎°‎
/‎5‎4‎°‎
7‎%‎
S‎E‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎5‎
S‎h‎o‎w‎e‎r‎s‎
6‎8‎°‎
/‎5‎5‎°‎
4‎6‎%‎
S‎E‎ ‎7‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎6‎
R‎a‎i‎n‎
6‎3‎°‎
/‎4‎9‎°‎
7‎4‎%‎
E‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎7‎
S‎h‎o‎w‎e‎r‎s‎
6‎2‎°‎
/‎4‎4‎°‎
4‎8‎%‎
N‎ ‎1‎3‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎6‎°‎
/‎4‎7‎°‎
1‎9‎%‎
S‎E‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎7‎°‎
/‎4‎8‎°‎
2‎4‎%‎
W‎S‎W‎ ‎1‎0‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎0‎°‎
/‎5‎0‎°‎
2‎4‎%‎
S‎W‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎1‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎2‎°‎
/‎5‎4‎°‎
1‎2‎%‎
S‎S‎W‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎2‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎1‎°‎
/‎4‎9‎°‎
3‎9‎%‎
W‎ ‎1‎2‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎7‎°‎
/‎4‎5‎°‎
2‎4‎%‎
N‎N‎W‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎8‎°‎
/‎4‎7‎°‎
1‎2‎%‎
N‎E‎ ‎1‎0‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎R‎a‎c‎i‎s‎m‎.‎ ‎👦🏼🧑🏿‍🦲

.‎.‎.‎.‎.‎.‎.‎.‎.‎

D‎e‎x‎t‎r‎o‎m‎e‎t‎h‎o‎r‎p‎h‎a‎n‎
E‎r‎o‎w‎i‎d‎.‎g‎i‎f‎ ‎D‎e‎x‎t‎r‎o‎m‎e‎t‎h‎o‎r‎p‎h‎a‎n‎ ‎a‎t‎ ‎E‎r‎o‎w‎i‎d‎ ‎(‎a‎b‎b‎r‎e‎v‎i‎a‎t‎e‎d‎ ‎a‎s‎ ‎D‎X‎M‎)‎ ‎i‎s‎ ‎a‎ ‎q‎u‎e‎s‎t‎i‎o‎n‎a‎b‎l‎y‎ ‎e‎f‎f‎i‎c‎a‎c‎i‎o‎u‎s‎ ‎c‎o‎u‎g‎h‎ ‎s‎u‎p‎p‎r‎e‎s‎s‎a‎n‎t‎ ‎a‎n‎d‎ ‎d‎i‎s‎s‎o‎c‎i‎a‎t‎i‎v‎e‎ ‎h‎a‎l‎l‎u‎c‎i‎n‎o‎g‎e‎n‎ ‎i‎n‎ ‎t‎h‎e‎ ‎s‎a‎m‎e‎ ‎c‎l‎a‎s‎s‎ ‎a‎s‎ ‎k‎e‎t‎a‎m‎i‎n‎e‎ ‎a‎n‎d‎ ‎P‎C‎P‎.‎ ‎T‎o‎ ‎t‎h‎e‎ ‎g‎r‎e‎a‎t‎ ‎f‎o‎r‎t‎u‎n‎e‎ ‎o‎f‎ ‎m‎i‎d‎d‎l‎e‎ ‎s‎c‎h‎o‎o‎l‎e‎r‎s‎ ‎e‎v‎e‎r‎y‎w‎h‎e‎r‎e‎,‎ ‎i‎t‎ ‎i‎s‎ ‎a‎v‎a‎i‎l‎a‎b‎l‎e‎ ‎o‎v‎e‎r‎-‎t‎h‎e‎-‎c‎o‎u‎n‎t‎e‎r‎ ‎i‎n‎ ‎R‎o‎b‎i‎t‎u‎s‎s‎i‎n‎ ‎a‎n‎d‎ ‎m‎o‎s‎t‎ ‎o‎t‎h‎e‎r‎ ‎b‎r‎a‎n‎d‎s‎ ‎o‎f‎ ‎c‎h‎e‎r‎r‎y‎-‎f‎l‎a‎v‎o‎r‎e‎d‎ ‎s‎n‎a‎k‎e‎ ‎o‎i‎l‎ ‎t‎h‎a‎t‎ ‎p‎e‎o‎p‎l‎e‎ ‎b‎u‎y‎ ‎w‎h‎e‎n‎ ‎t‎h‎e‎y‎ ‎h‎a‎v‎e‎ ‎a‎ ‎n‎a‎s‎t‎y‎ ‎c‎o‎u‎g‎h‎ ‎o‎r‎ ‎f‎e‎e‎d‎ ‎t‎o‎ ‎t‎h‎e‎i‎r‎ ‎s‎i‎c‎k‎ ‎k‎i‎d‎s‎ ‎t‎o‎ ‎g‎e‎t‎ ‎t‎h‎e‎m‎ ‎t‎o‎ ‎S‎T‎F‎U‎ ‎I‎R‎L‎.‎

O‎n‎e‎ ‎d‎a‎y‎,‎ ‎a‎ ‎r‎o‎g‎u‎e‎ ‎p‎s‎e‎u‎d‎o‎-‎n‎e‎u‎r‎o‎s‎c‎i‎e‎n‎t‎i‎s‎t‎ ‎n‎a‎m‎e‎d‎ ‎W‎i‎l‎l‎i‎a‎m‎ ‎W‎h‎i‎t‎e‎ ‎d‎e‎c‎i‎d‎e‎d‎ ‎t‎h‎a‎t‎ ‎k‎i‎d‎s‎ ‎n‎e‎e‎d‎e‎d‎ ‎h‎e‎l‎p‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎h‎i‎g‎h‎ ‎o‎f‎f‎ ‎o‎f‎ ‎c‎h‎e‎r‎r‎y‎-‎m‎e‎n‎t‎h‎o‎l‎ ‎s‎y‎r‎u‎p‎,‎ ‎s‎o‎ ‎h‎e‎ ‎c‎r‎e‎a‎t‎e‎d‎ ‎a‎n‎ ‎e‎x‎t‎e‎n‎s‎i‎v‎e‎ ‎F‎A‎Q‎ ‎d‎e‎s‎c‎r‎i‎b‎i‎n‎g‎ ‎h‎o‎w‎ ‎t‎o‎ ‎d‎o‎ ‎i‎t‎.‎ ‎P‎u‎r‎p‎o‎r‎t‎e‎d‎l‎y‎,‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎n‎t‎ ‎w‎a‎s‎ ‎t‎o‎ ‎k‎e‎e‎p‎ ‎k‎i‎d‎s‎ ‎f‎r‎o‎m‎ ‎k‎i‎l‎l‎i‎n‎g‎ ‎t‎h‎e‎i‎r‎ ‎l‎i‎v‎e‎r‎s‎ ‎a‎n‎d‎/‎o‎r‎ ‎t‎h‎e‎m‎s‎e‎l‎v‎e‎s‎ ‎b‎y‎ ‎t‎a‎k‎i‎n‎g‎ ‎r‎a‎n‎d‎o‎m‎ ‎d‎o‎s‎e‎s‎ ‎o‎f‎ ‎r‎a‎n‎d‎o‎m‎ ‎o‎v‎e‎r‎-‎t‎h‎e‎-‎c‎o‎u‎n‎t‎e‎r‎ ‎p‎r‎o‎d‎u‎c‎t‎s‎ ‎(‎e‎.‎g‎.‎ ‎N‎y‎q‎u‎i‎l‎ ‎o‎r‎ ‎C‎o‎r‎i‎c‎i‎d‎i‎n‎)‎ ‎i‎n‎ ‎a‎ ‎d‎e‎s‎p‎e‎r‎a‎t‎e‎ ‎a‎t‎t‎e‎m‎p‎t‎ ‎t‎o‎ ‎g‎e‎t‎ ‎h‎i‎g‎h‎.‎ ‎C‎o‎n‎s‎e‎q‎u‎e‎n‎t‎l‎y‎,‎ ‎h‎e‎ ‎d‎e‎c‎i‎d‎e‎d‎ ‎h‎e‎ ‎w‎o‎u‎l‎d‎ ‎i‎n‎s‎t‎r‎u‎c‎t‎ ‎t‎h‎e‎m‎ ‎o‎n‎ ‎w‎h‎e‎r‎e‎ ‎t‎o‎ ‎b‎u‎y‎ ‎i‎t‎,‎ ‎h‎o‎w‎ ‎m‎u‎c‎h‎ ‎t‎o‎ ‎t‎a‎k‎e‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎o‎h‎-‎s‎o‎-‎a‎w‎e‎s‎o‎m‎e‎ ‎t‎h‎i‎n‎g‎s‎ ‎t‎o‎ ‎d‎o‎ ‎w‎h‎i‎l‎e‎ ‎u‎n‎d‎e‎r‎ ‎t‎h‎e‎ ‎i‎n‎f‎l‎u‎e‎n‎c‎e‎]‎.‎

O‎n‎l‎i‎n‎e‎ ‎c‎o‎m‎m‎u‎n‎i‎t‎i‎e‎s‎ ‎c‎e‎n‎t‎e‎r‎e‎d‎ ‎a‎r‎o‎u‎n‎d‎ ‎t‎h‎i‎s‎ ‎d‎r‎u‎g‎ ‎-‎ ‎D‎X‎M‎ ‎c‎o‎m‎m‎u‎n‎i‎t‎i‎e‎s‎ ‎-‎ ‎a‎r‎e‎ ‎l‎i‎k‎e‎ ‎a‎n‎y‎ ‎o‎t‎h‎e‎r‎ ‎s‎t‎u‎p‎i‎d‎ ‎s‎h‎i‎t‎t‎y‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎o‎n‎l‎i‎n‎e‎ ‎c‎o‎m‎m‎u‎n‎i‎t‎y‎:‎ ‎f‎i‎l‎l‎e‎d‎ ‎w‎i‎t‎h‎ ‎d‎r‎a‎m‎a‎ ‎a‎n‎d‎ ‎l‎u‎l‎z‎.‎


(‎(‎ ‎F‎o‎r‎ ‎W‎h‎e‎n‎ ‎Y‎o‎u‎'‎r‎e‎ ‎J‎u‎s‎t‎ ‎T‎o‎o‎ ‎D‎u‎m‎b‎ ‎T‎o‎ ‎F‎a‎k‎e‎ ‎A‎ ‎C‎o‎n‎v‎i‎n‎c‎i‎n‎g‎ ‎C‎o‎u‎g‎h‎ ‎A‎n‎d‎ ‎G‎e‎t‎ ‎Y‎o‎u‎r‎ ‎L‎e‎a‎n‎ ‎O‎n‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎h‎i‎l‎l‎o‎n‎ ‎C‎a‎s‎t‎l‎e‎ ‎i‎s‎ ‎a‎n‎ ‎i‎s‎l‎a‎n‎d‎ ‎c‎a‎s‎t‎l‎e‎ ‎l‎o‎c‎a‎t‎e‎d‎ ‎o‎n‎ ‎L‎a‎k‎e‎ ‎G‎e‎n‎e‎v‎a‎ ‎t‎o‎ ‎t‎h‎e‎ ‎s‎o‎u‎t‎h‎ ‎o‎f‎ ‎V‎e‎y‎t‎a‎u‎x‎ ‎i‎n‎ ‎V‎a‎u‎d‎,‎ ‎S‎w‎i‎t‎z‎e‎r‎l‎a‎n‎d‎.‎ ‎I‎t‎ ‎i‎s‎ ‎s‎i‎t‎u‎a‎t‎e‎d‎ ‎a‎t‎ ‎t‎h‎e‎ ‎e‎a‎s‎t‎e‎r‎n‎ ‎e‎n‎d‎ ‎o‎f‎ ‎t‎h‎e‎ ‎l‎a‎k‎e‎,‎ ‎o‎n‎ ‎t‎h‎e‎ ‎n‎a‎r‎r‎o‎w‎ ‎s‎h‎o‎r‎e‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎M‎o‎n‎t‎r‎e‎u‎x‎ ‎a‎n‎d‎ ‎V‎i‎l‎l‎e‎n‎e‎u‎v‎e‎,‎ ‎a‎n‎d‎ ‎c‎l‎o‎s‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎F‎o‎r‎t‎ ‎d‎e‎ ‎C‎h‎i‎l‎l‎o‎n‎,‎ ‎w‎h‎i‎c‎h‎ ‎i‎s‎ ‎e‎m‎b‎e‎d‎d‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎n‎e‎i‎g‎h‎b‎o‎u‎r‎i‎n‎g‎ ‎h‎i‎l‎l‎s‎i‎d‎e‎.‎ ‎T‎h‎e‎ ‎o‎l‎d‎e‎s‎t‎ ‎p‎a‎r‎t‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎c‎a‎s‎t‎l‎e‎ ‎h‎a‎v‎e‎ ‎n‎o‎t‎ ‎b‎e‎e‎n‎ ‎d‎a‎t‎e‎d‎ ‎d‎e‎f‎i‎n‎i‎t‎i‎v‎e‎l‎y‎,‎ ‎b‎u‎t‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎w‎r‎i‎t‎t‎e‎n‎ ‎r‎e‎c‎o‎r‎d‎ ‎o‎f‎ ‎t‎h‎e‎ ‎c‎a‎s‎t‎l‎e‎ ‎w‎a‎s‎ ‎i‎n‎ ‎1‎0‎0‎5‎.‎ ‎I‎t‎ ‎w‎a‎s‎ ‎b‎u‎i‎l‎t‎ ‎t‎o‎ ‎c‎o‎n‎t‎r‎o‎l‎ ‎t‎h‎e‎ ‎r‎o‎a‎d‎ ‎f‎r‎o‎m‎ ‎B‎u‎r‎g‎u‎n‎d‎y‎ ‎t‎o‎ ‎t‎h‎e‎ ‎G‎r‎e‎a‎t‎ ‎S‎t‎ ‎B‎e‎r‎n‎a‎r‎d‎ ‎P‎a‎s‎s‎,‎ ‎o‎n‎ ‎t‎h‎e‎ ‎s‎i‎t‎e‎ ‎o‎f‎ ‎a‎n‎ ‎e‎a‎r‎l‎i‎e‎r‎ ‎R‎o‎m‎a‎n‎ ‎o‎u‎t‎p‎o‎s‎t‎.‎ ‎F‎r‎o‎m‎ ‎t‎h‎e‎ ‎m‎i‎d‎ ‎1‎2‎t‎h‎ ‎c‎e‎n‎t‎u‎r‎y‎,‎ ‎t‎h‎e‎ ‎c‎a‎s‎t‎l‎e‎ ‎b‎e‎c‎a‎m‎e‎ ‎t‎h‎e‎ ‎s‎u‎m‎m‎e‎r‎ ‎h‎o‎m‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎C‎o‎u‎n‎t‎s‎ ‎o‎f‎ ‎S‎a‎v‎o‎y‎,‎ ‎w‎h‎o‎ ‎k‎e‎p‎t‎ ‎a‎ ‎f‎l‎e‎e‎t‎ ‎o‎f‎ ‎s‎h‎i‎p‎s‎ ‎o‎n‎ ‎L‎a‎k‎e‎ ‎G‎e‎n‎e‎v‎a‎.‎ ‎I‎t‎ ‎w‎a‎s‎ ‎g‎r‎e‎a‎t‎l‎y‎ ‎e‎x‎p‎a‎n‎d‎e‎d‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎1‎3‎t‎h‎ ‎c‎e‎n‎t‎u‎r‎y‎.‎ ‎T‎h‎e‎ ‎c‎a‎s‎t‎l‎e‎ ‎b‎e‎c‎a‎m‎e‎ ‎a‎ ‎p‎r‎i‎s‎o‎n‎ ‎i‎n‎ ‎t‎h‎e‎ ‎1‎6‎t‎h‎ ‎c‎e‎n‎t‎u‎r‎y‎,‎ ‎h‎o‎u‎s‎i‎n‎g‎ ‎a‎m‎o‎n‎g‎ ‎o‎t‎h‎e‎r‎s‎ ‎t‎h‎e‎ ‎G‎e‎n‎v‎o‎i‎s‎ ‎m‎o‎n‎k‎ ‎F‎r‎a‎n‎ç‎o‎i‎s‎ ‎B‎o‎n‎i‎v‎a‎r‎d‎,‎ ‎b‎e‎f‎o‎r‎e‎ ‎r‎e‎v‎e‎r‎t‎i‎n‎g‎ ‎t‎o‎ ‎b‎e‎i‎n‎g‎ ‎a‎ ‎r‎e‎s‎i‎d‎e‎n‎c‎e‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎ ‎a‎g‎a‎i‎n‎ ‎b‎e‎c‎o‎m‎i‎n‎g‎ ‎a‎ ‎p‎r‎i‎s‎o‎n‎ ‎i‎n‎ ‎1‎7‎3‎3‎.‎ ‎S‎i‎n‎c‎e‎ ‎t‎h‎e‎ ‎e‎n‎d‎ ‎o‎f‎ ‎t‎h‎e‎ ‎1‎8‎t‎h‎ ‎c‎e‎n‎t‎u‎r‎y‎,‎ ‎t‎h‎e‎ ‎c‎a‎s‎t‎l‎e‎ ‎h‎a‎s‎ ‎b‎e‎e‎n‎ ‎a‎ ‎t‎o‎u‎r‎i‎s‎t‎ ‎a‎t‎t‎r‎a‎c‎t‎i‎o‎n‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎G‎i‎l‎e‎s‎ ‎L‎a‎u‎r‎e‎n‎t‎

.‎.‎.‎.‎.‎.‎.‎.‎

A‎l‎r‎i‎g‎h‎t‎,‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎p‎l‎a‎y‎ ‎M‎i‎k‎e‎ ‎T‎y‎s‎o‎n‎'‎s‎ ‎P‎u‎n‎c‎h‎ ‎o‎u‎t‎ ‎a‎n‎d‎ ‎p‎u‎n‎c‎h‎ ‎t‎h‎a‎t‎ ‎s‎t‎u‎p‎i‎d‎ ‎s‎p‎i‎c‎ ‎D‎o‎n‎ ‎F‎l‎a‎m‎e‎n‎c‎o‎.‎"
SJVn417u,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Saturday 10th of February 2024 11:38:31 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_924749.pdf
 
Working as of
11 February 2024"
S3693qzt,Grabbing Mechanic For JavaScript,quhluh,JavaScript,Saturday 10th of February 2024 10:50:54 PM CDT,"<!DOCTYPE html>
<html>
<head>
  <title>Grabbing Mechanic Example</title>
  <style>
    canvas {
      border: 1px solid black;
    }
  </style>
</head>
<body>
  <canvas id=""canvas"" width=""400"" height=""400""></canvas>

  <script>
    // Get the canvas element
    const canvas = document.getElementById('canvas');
    const ctx = canvas.getContext('2d');

    // Create a circle object representing the object to be grabbed
    const circle = {
      x: canvas.width / 2,
      y: canvas.height / 2,
      radius: 20,
      color: 'blue',
      isGrabbed: false
    };

    // Add event listeners for mouse down, move, and up events
    canvas.addEventListener('mousedown', handleMouseDown);
    canvas.addEventListener('mousemove', handleMouseMove);
    canvas.addEventListener('mouseup', handleMouseUp);

    // Function to check if the mouse is within the circle
    function isInsideCircle(mouseX, mouseY) {
      const dx = mouseX - circle.x;
      const dy = mouseY - circle.y;
      return Math.sqrt(dx * dx + dy * dy) < circle.radius;
    }

    // Event handlers
    function handleMouseDown(event) {
      const mouseX = event.clientX - canvas.offsetLeft;
      const mouseY = event.clientY - canvas.offsetTop;
      if (isInsideCircle(mouseX, mouseY)) {
        circle.isGrabbed = true;
      }
    }

    function handleMouseMove(event) {
      const mouseX = event.clientX - canvas.offsetLeft;
      const mouseY = event.clientY - canvas.offsetTop;
      if (circle.isGrabbed) {
        circle.x = mouseX;
        circle.y = mouseY;
      }
    }

    function handleMouseUp() {
      circle.isGrabbed = false;
    }

    // Function to draw the circle
    function draw() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.beginPath();
      ctx.arc(circle.x, circle.y, circle.radius, 0, Math.PI * 2);
      ctx.fillStyle = circle.color;
      ctx.fill();
      ctx.closePath();
    }

    // Update and draw the scene
    function update() {
      draw();
      requestAnimationFrame(update);
    }

    update();
  </script>
</body>
</html>"
kbebcG01,Mad,Unknown_No_1,PHP,Saturday 10th of February 2024 10:45:26 PM CDT,FreeHacksJoinTelegramMadGamerTG
u56z5Zpa,Nigerian scammers [10-2-2/2024],bombaires,AIMMS,Saturday 10th of February 2024 10:44:01 PM CDT,"<a href=""mailto:mtomac@kbsd.hr"">mtomac@kbsd.hr</a>
<a href=""mailto:09254@crscn-cn.com"">09254@crscn-cn.com</a>
<a href=""mailto:ubaafrica@yeah.net"">ubaafrica@yeah.net</a>
<a href=""mailto:joshuaadamsmadugu@gmail.com"">joshuaadamsmadugu@gmail.com</a>
<a href=""mailto:jo.shu.a.adamsmadu.gu@gmail.com"">jo.shu.a.adamsmadu.gu@gmail.com</a>
<a href=""mailto:jo.s.h.u.a.a.da.m.s.madugu@gmail.com"">jo.s.h.u.a.a.da.m.s.madugu@gmail.com</a>
<a href=""mailto:j.o.s.h.uaada.ms.madu.g.u@gmail.com"">j.o.s.h.uaada.ms.madu.g.u@gmail.com</a>
<a href=""mailto:j.o.sh.ua.a.da.msmad.u.gu@gmail.com"">j.o.sh.ua.a.da.msmad.u.gu@gmail.com</a>
<a href=""mailto:j.o.shu.a.ad.a.msmadu.gu@gmail.com"">j.o.shu.a.ad.a.msmadu.gu@gmail.com</a>
<a href=""mailto:josh.ua.a.d.amsma.d.ugu@gmail.com"">josh.ua.a.d.amsma.d.ugu@gmail.com</a>
<a href=""mailto:j.o.shu.a.ada.msmad.u.gu@gmail.com"">j.o.shu.a.ada.msmad.u.gu@gmail.com</a>
<a href=""mailto:josh.u.aada.msmad.u.g.u@gmail.com"">josh.u.aada.msmad.u.g.u@gmail.com</a>
<a href=""mailto:j.os.h.uaa.d.am.sm.a.d.ug.u@gmail.com"">j.os.h.uaa.d.am.sm.a.d.ug.u@gmail.com</a>
<a href=""mailto:j.o.shuaad.a.m.sma.dug.u@gmail.com"">j.o.shuaad.a.m.sma.dug.u@gmail.com</a>
<a href=""mailto:josh.uaa.dams.m.a.du.g.u@gmail.com"">josh.uaa.dams.m.a.du.g.u@gmail.com</a>
<a href=""mailto:jos.h.uaa.da.ms.ma.d.ug.u@gmail.com"">jos.h.uaa.da.ms.ma.d.ug.u@gmail.com</a>
<a href=""mailto:j.o.s.huaada.ms.m.adugu@gmail.com"">j.o.s.huaada.ms.m.adugu@gmail.com</a>
<a href=""mailto:joshuaa.da.ms.madu.gu@gmail.com"">joshuaa.da.ms.madu.gu@gmail.com</a>
<a href=""mailto:jo.sh.uaada.msma.du.g.u@gmail.com"">jo.sh.uaada.msma.du.g.u@gmail.com</a>
<a href=""mailto:josh.ua.a.d.a.ms.ma.d.u.gu@gmail.com"">josh.ua.a.d.a.ms.ma.d.u.gu@gmail.com</a>
<a href=""mailto:joshu.aa.damsma.d.ug.u@gmail.com"">joshu.aa.damsma.d.ug.u@gmail.com</a>
<a href=""mailto:j.os.huaad.am.s.m.a.du.g.u@gmail.com"">j.os.huaad.am.s.m.a.du.g.u@gmail.com</a>
<a href=""mailto:jo.sh.u.aa.da.m.s.m.adugu@gmail.com"">jo.sh.u.aa.da.m.s.m.adugu@gmail.com</a>
<a href=""mailto:jos.h.u.aa.d.a.m.smad.ug.u@gmail.com"">jos.h.u.aa.d.a.m.smad.ug.u@gmail.com</a>
<a href=""mailto:j.os.h.uaa.damsm.a.dugu@gmail.com"">j.os.h.uaa.damsm.a.dugu@gmail.com</a>
<a href=""mailto:j.oshu.a.a.dams.ma.du.gu@gmail.com"">j.oshu.a.a.dams.ma.du.gu@gmail.com</a>
<a href=""mailto:j.o.sh.ua.ad.am.s.ma.d.u.g.u@gmail.com"">j.o.sh.ua.ad.am.s.ma.d.u.g.u@gmail.com</a>
<a href=""mailto:j.o.s.h.ua.a.d.am.sm.ad.u.g.u@gmail.com"">j.o.s.h.ua.a.d.am.sm.ad.u.g.u@gmail.com</a>
<a href=""mailto:josh.u.aa.da.msma.d.ug.u@gmail.com"">josh.u.aa.da.msma.d.ug.u@gmail.com</a>
<a href=""mailto:joshu.a.a.d.a.msm.ad.u.g.u@gmail.com"">joshu.a.a.d.a.msm.ad.u.g.u@gmail.com</a>
<a href=""mailto:josh.ua.ad.am.sm.a.d.u.g.u@gmail.com"">josh.ua.ad.am.sm.a.d.u.g.u@gmail.com</a>
<a href=""mailto:j.o.s.hu.a.a.dam.s.m.a.d.ugu@gmail.com"">j.o.s.hu.a.a.dam.s.m.a.d.ugu@gmail.com</a>
<a href=""mailto:joshu.a.adams.m.a.d.ugu@gmail.com"">joshu.a.adams.m.a.d.ugu@gmail.com</a>
<a href=""mailto:j.o.s.hu.a.ad.a.msm.a.d.ugu@gmail.com"">j.o.s.hu.a.ad.a.msm.a.d.ugu@gmail.com</a>
<a href=""mailto:jo.sh.u.a.a.d.a.msm.a.d.ug.u@gmail.com"">jo.sh.u.a.a.d.a.msm.a.d.ug.u@gmail.com</a>
<a href=""mailto:j.o.s.hu.a.ad.amsm.a.dug.u@gmail.com"">j.o.s.hu.a.ad.amsm.a.dug.u@gmail.com</a>
<a href=""mailto:jos.h.uaadam.s.m.a.d.ug.u@gmail.com"">jos.h.uaadam.s.m.a.d.ug.u@gmail.com</a>
<a href=""mailto:j.o.sh.ua.a.da.ms.m.a.dug.u@gmail.com"">j.o.sh.ua.a.da.ms.m.a.dug.u@gmail.com</a>
<a href=""mailto:jo.shuaa.d.a.ms.ma.du.gu@gmail.com"">jo.shuaa.d.a.ms.ma.du.gu@gmail.com</a>
<a href=""mailto:j.o.s.h.u.a.a.d.a.ms.ma.d.u.gu@gmail.com"">j.o.s.h.u.a.a.d.a.ms.ma.d.u.gu@gmail.com</a>
<a href=""mailto:jo.s.hua.ad.a.msm.a.d.u.g.u@gmail.com"">jo.s.hua.ad.a.msm.a.d.u.g.u@gmail.com</a>
<a href=""mailto:j.o.shua.adam.s.m.a.d.u.g.u@gmail.com"">j.o.shua.adam.s.m.a.d.u.g.u@gmail.com</a>
<a href=""mailto:j.o.sh.u.aa.damsma.du.g.u@gmail.com"">j.o.sh.u.aa.damsma.du.g.u@gmail.com</a>
<a href=""mailto:jos.h.u.aa.dam.s.m.adug.u@gmail.com"">jos.h.u.aa.dam.s.m.adug.u@gmail.com</a>
<a href=""mailto:j.oshu.aa.dams.madu.gu@gmail.com"">j.oshu.aa.dams.madu.gu@gmail.com</a>
<a href=""mailto:j.o.shuaad.am.s.mad.u.gu@gmail.com"">j.o.shuaad.am.s.mad.u.gu@gmail.com</a>
<a href=""mailto:jo.sh.uaa.dams.mad.u.g.u@gmail.com"">jo.sh.uaa.dams.mad.u.g.u@gmail.com</a>
<a href=""mailto:jo.s.h.u.a.a.dams.m.ad.u.gu@gmail.com"">jo.s.h.u.a.a.dams.m.ad.u.gu@gmail.com</a>
<a href=""mailto:j.osh.u.aad.am.s.m.adugu@gmail.com"">j.osh.u.aad.am.s.m.adugu@gmail.com</a>
<a href=""mailto:jos.h.u.a.a.da.m.sm.adu.g.u@gmail.com"">jos.h.u.a.a.da.m.sm.adu.g.u@gmail.com</a>
<a href=""mailto:jo.sh.uaa.d.a.msm.adug.u@gmail.com"">jo.sh.uaa.d.a.msm.adug.u@gmail.com</a>
<a href=""mailto:jo.sh.u.a.a.da.ms.m.a.dug.u@gmail.com"">jo.sh.u.a.a.da.ms.m.a.dug.u@gmail.com</a>
<a href=""mailto:jo.shu.aad.am.smadugu@gmail.com"">jo.shu.aad.am.smadugu@gmail.com</a>
<a href=""mailto:jos.hu.aad.a.ms.m.ad.u.g.u@gmail.com"">jos.hu.aad.a.ms.m.ad.u.g.u@gmail.com</a>
<a href=""mailto:jo.sh.u.a.adams.m.adu.g.u@gmail.com"">jo.sh.u.a.adams.m.adu.g.u@gmail.com</a>
<a href=""mailto:j.oshu.a.ada.msm.a.d.ugu@gmail.com"">j.oshu.a.ada.msm.a.d.ugu@gmail.com</a>
<a href=""mailto:jo.s.h.uaa.d.a.m.sma.d.ug.u@gmail.com"">jo.s.h.uaa.d.a.m.sma.d.ug.u@gmail.com</a>
<a href=""mailto:j.o.s.h.uaad.a.msm.ad.u.gu@gmail.com"">j.o.s.h.uaad.a.msm.ad.u.gu@gmail.com</a>
<a href=""mailto:jos.h.uaa.damsm.a.du.g.u@gmail.com"">jos.h.uaa.damsm.a.du.g.u@gmail.com</a>
<a href=""mailto:jos.hua.ada.m.sm.adu.gu@gmail.com"">jos.hua.ada.m.sm.adu.gu@gmail.com</a>
<a href=""mailto:j.osh.uaad.a.m.s.ma.d.u.g.u@gmail.com"">j.osh.uaad.a.m.s.ma.d.u.g.u@gmail.com</a>
<a href=""mailto:jos.h.ua.a.d.ams.m.a.d.ugu@gmail.com"">jos.h.ua.a.d.ams.m.a.d.ugu@gmail.com</a>
<a href=""mailto:jo.sh.u.aa.da.m.smadu.g.u@gmail.com"">jo.sh.u.aa.da.m.smadu.g.u@gmail.com</a>
<a href=""mailto:j.os.h.u.aad.a.msm.a.dugu@gmail.com"">j.os.h.u.aad.a.msm.a.dugu@gmail.com</a>
<a href=""mailto:jo.s.h.uaa.d.a.ms.m.adu.g.u@gmail.com"">jo.s.h.uaa.d.a.ms.m.adu.g.u@gmail.com</a>
<a href=""mailto:joshua.a.d.ams.mad.u.gu@gmail.com"">joshua.a.d.ams.mad.u.gu@gmail.com</a>
<a href=""mailto:j.os.h.u.aadam.sm.ad.ug.u@gmail.com"">j.os.h.u.aadam.sm.ad.ug.u@gmail.com</a>
<a href=""mailto:j.osh.ua.adamsm.adugu@gmail.com"">j.osh.ua.adamsm.adugu@gmail.com</a>
<a href=""mailto:jo.shua.ad.ams.m.adu.g.u@gmail.com"">jo.shua.ad.ams.m.adu.g.u@gmail.com</a>
<a href=""mailto:joshu.a.a.da.ms.m.ad.u.gu@gmail.com"">joshu.a.a.da.ms.m.ad.u.gu@gmail.com</a>
<a href=""mailto:j.osh.ua.a.da.ms.m.a.d.u.g.u@gmail.com"">j.osh.ua.a.da.ms.m.a.d.u.g.u@gmail.com</a>
<a href=""mailto:j.osh.u.aa.d.am.s.m.a.d.ugu@gmail.com"">j.osh.u.aa.d.am.s.m.a.d.ugu@gmail.com</a>
<a href=""mailto:joshu.aada.m.s.m.adugu@gmail.com"">joshu.aada.m.s.m.adugu@gmail.com</a>
<a href=""mailto:jo.s.hua.a.d.amsm.a.dugu@gmail.com"">jo.s.hua.a.d.amsm.a.dugu@gmail.com</a>
<a href=""mailto:jos.huaa.da.msm.a.d.ugu@gmail.com"">jos.huaa.da.msm.a.d.ugu@gmail.com</a>
<a href=""mailto:j.o.s.h.uaa.damsma.d.ugu@gmail.com"">j.o.s.h.uaa.damsma.d.ugu@gmail.com</a>
<a href=""mailto:j.o.shuaad.a.ms.mad.ugu@gmail.com"">j.o.shuaad.a.ms.mad.ugu@gmail.com</a>
<a href=""mailto:j.o.sh.u.a.ad.ams.m.ad.ug.u@gmail.com"">j.o.sh.u.a.ad.ams.m.ad.ug.u@gmail.com</a>
<a href=""mailto:jos.hua.a.damsm.a.du.g.u@gmail.com"">jos.hua.a.damsm.a.du.g.u@gmail.com</a>
<a href=""mailto:jos.huaad.a.m.sm.a.d.u.gu@gmail.com"">jos.huaad.a.m.sm.a.d.u.gu@gmail.com</a>
<a href=""mailto:j.os.h.u.a.a.d.ams.m.adug.u@gmail.com"">j.os.h.u.a.a.d.ams.m.adug.u@gmail.com</a>
<a href=""mailto:jo.s.huaadam.s.m.ad.ugu@gmail.com"">jo.s.huaadam.s.m.ad.ugu@gmail.com</a>
<a href=""mailto:joshua.ad.a.msm.a.d.ugu@gmail.com"">joshua.ad.a.msm.a.d.ugu@gmail.com</a>
<a href=""mailto:joshu.aa.damsm.ad.u.gu@gmail.com"">joshu.aa.damsm.ad.u.gu@gmail.com</a>
<a href=""mailto:j.o.shu.aadam.sm.a.dug.u@gmail.com"">j.o.shu.aadam.sm.a.dug.u@gmail.com</a>
<a href=""mailto:j.o.shu.a.a.damsma.dugu@gmail.com"">j.o.shu.a.a.damsma.dugu@gmail.com</a>
<a href=""mailto:jo.s.hu.aada.ms.m.a.du.gu@gmail.com"">jo.s.hu.aada.ms.m.a.du.gu@gmail.com</a>
<a href=""mailto:j.o.shua.a.d.a.m.s.m.ad.ug.u@gmail.com"">j.o.shua.a.d.a.m.s.m.ad.ug.u@gmail.com</a>
<a href=""mailto:jo.shu.a.a.d.a.msma.d.ug.u@gmail.com"">jo.shu.a.a.d.a.msma.d.ug.u@gmail.com</a>
<a href=""mailto:j.osh.u.aadams.m.ad.ugu@gmail.com"">j.osh.u.aadams.m.ad.ugu@gmail.com</a>
<a href=""mailto:j.o.sh.u.a.a.da.msm.a.d.u.gu@gmail.com"">j.o.sh.u.a.a.da.msm.a.d.u.gu@gmail.com</a>
<a href=""mailto:jo.s.hu.aad.a.m.s.m.ad.u.gu@gmail.com"">jo.s.hu.aad.a.m.s.m.ad.u.gu@gmail.com</a>
<a href=""mailto:jo.sh.ua.a.d.a.ms.m.a.d.ug.u@gmail.com"">jo.sh.ua.a.d.a.ms.m.a.d.ug.u@gmail.com</a>
<a href=""mailto:jo.s.h.u.a.ada.msma.d.u.gu@gmail.com"">jo.s.h.u.a.ada.msma.d.u.gu@gmail.com</a>
<a href=""mailto:josh.ua.a.d.ams.m.adu.gu@gmail.com"">josh.ua.a.d.ams.m.adu.gu@gmail.com</a>
<a href=""mailto:j.o.s.h.uaa.d.a.m.sm.a.d.u.g.u@gmail.com"">j.o.s.h.uaa.d.a.m.sm.a.d.u.g.u@gmail.com</a>
<a href=""mailto:joshu.aada.ms.ma.du.g.u@gmail.com"">joshu.aada.ms.ma.du.g.u@gmail.com</a>
<a href=""mailto:jo.sh.u.a.a.dam.s.m.a.du.g.u@gmail.com"">jo.sh.u.a.a.dam.s.m.a.du.g.u@gmail.com</a>
<a href=""mailto:j.osh.uaad.a.msmadu.gu@gmail.com"">j.osh.uaad.a.msmadu.gu@gmail.com</a>
<a href=""mailto:jo.sh.uaadams.m.adu.g.u@gmail.com"">jo.sh.uaadams.m.adu.g.u@gmail.com</a>
<a href=""mailto:j.os.h.u.aa.da.m.sma.du.gu@gmail.com"">j.os.h.u.aa.da.m.sma.du.gu@gmail.com</a>
<a href=""mailto:jos.hu.a.a.dam.sma.du.g.u@gmail.com"">jos.hu.a.a.dam.sma.du.g.u@gmail.com</a>
<a href=""mailto:jo.s.h.ua.ada.m.sm.a.d.u.g.u@gmail.com"">jo.s.h.ua.ada.m.sm.a.d.u.g.u@gmail.com</a>
<a href=""mailto:j.os.hu.a.ad.am.sm.adug.u@gmail.com"">j.os.hu.a.ad.am.sm.adug.u@gmail.com</a>
<a href=""mailto:j.os.h.uaa.d.amsma.d.u.gu@gmail.com"">j.os.h.uaa.d.amsma.d.u.gu@gmail.com</a>
<a href=""mailto:j.o.shu.a.a.dam.sm.a.d.ug.u@gmail.com"">j.o.shu.a.a.dam.sm.a.d.ug.u@gmail.com</a>
<a href=""mailto:jos.huaadams.ma.dugu@gmail.com"">jos.huaadams.ma.dugu@gmail.com</a>
<a href=""mailto:j.o.shu.aa.d.a.msm.adu.gu@gmail.com"">j.o.shu.aa.d.a.msm.adu.gu@gmail.com</a>
<a href=""mailto:jo.s.h.u.aa.da.m.sm.a.dugu@gmail.com"">jo.s.h.u.aa.da.m.sm.a.dugu@gmail.com</a>
<a href=""mailto:joshu.aa.da.ms.madu.gu@gmail.com"">joshu.aa.da.ms.madu.gu@gmail.com</a>
<a href=""mailto:jos.h.ua.a.da.m.sm.adu.gu@gmail.com"">jos.h.ua.a.da.m.sm.adu.gu@gmail.com</a>
<a href=""mailto:jo.shuaad.a.m.s.madu.gu@gmail.com"">jo.shuaad.a.m.s.madu.gu@gmail.com</a>
<a href=""mailto:j.o.s.hu.a.a.d.a.msm.a.du.g.u@gmail.com"">j.o.s.hu.a.a.d.a.msm.a.du.g.u@gmail.com</a>
<a href=""mailto:josh.u.a.a.da.ms.m.adu.gu@gmail.com"">josh.u.a.a.da.ms.m.adu.gu@gmail.com</a>
<a href=""mailto:jo.s.h.ua.ad.amsm.adugu@gmail.com"">jo.s.h.ua.ad.amsm.adugu@gmail.com</a>
<a href=""mailto:jos.huaad.a.ms.ma.du.gu@gmail.com"">jos.huaad.a.ms.ma.du.gu@gmail.com</a>
<a href=""mailto:jos.h.u.a.ad.ams.m.a.d.ug.u@gmail.com"">jos.h.u.a.ad.ams.m.a.d.ug.u@gmail.com</a>
<a href=""mailto:j.o.shuaada.m.smad.ugu@gmail.com"">j.o.shuaada.m.smad.ugu@gmail.com</a>
<a href=""mailto:j.o.s.hua.ad.am.sma.du.gu@gmail.com"">j.o.s.hua.ad.am.sma.du.gu@gmail.com</a>
<a href=""mailto:joshu.a.adamsm.adu.gu@gmail.com"">joshu.a.adamsm.adu.gu@gmail.com</a>
<a href=""mailto:jo.s.huaad.a.ms.madug.u@gmail.com"">jo.s.huaad.a.ms.madug.u@gmail.com</a>
<a href=""mailto:jo.s.hu.a.a.da.m.sma.d.ug.u@gmail.com"">jo.s.hu.a.a.da.m.sma.d.ug.u@gmail.com</a>
<a href=""mailto:jo.s.h.u.a.ad.a.ms.m.a.d.ug.u@gmail.com"">jo.s.h.u.a.ad.a.ms.m.a.d.ug.u@gmail.com</a>
<a href=""mailto:j.o.sh.u.aa.d.a.msm.ad.u.g.u@gmail.com"">j.o.sh.u.aa.d.a.msm.ad.u.g.u@gmail.com</a>
<a href=""mailto:jos.h.uaa.d.amsma.dugu@gmail.com"">jos.h.uaa.d.amsma.dugu@gmail.com</a>
<a href=""mailto:j.osh.u.aada.m.sm.ad.ugu@gmail.com"">j.osh.u.aada.m.sm.ad.ugu@gmail.com</a>
<a href=""mailto:jo.s.h.uaa.dam.sma.d.u.g.u@gmail.com"">jo.s.h.uaa.dam.sma.d.u.g.u@gmail.com</a>
<a href=""mailto:joshu.a.ad.a.m.smad.ug.u@gmail.com"">joshu.a.ad.a.m.smad.ug.u@gmail.com</a>
<a href=""mailto:jo.s.h.u.aa.dam.sm.adu.g.u@gmail.com"">jo.s.h.u.aa.dam.sm.adu.g.u@gmail.com</a>
<a href=""mailto:josh.u.aada.msma.d.ugu@gmail.com"">josh.u.aada.msma.d.ugu@gmail.com</a>
<a href=""mailto:j.o.sh.u.a.a.da.msma.d.u.gu@gmail.com"">j.o.sh.u.a.a.da.msma.d.u.gu@gmail.com</a>
<a href=""mailto:jo.s.h.uaad.a.m.sm.a.dug.u@gmail.com"">jo.s.h.uaad.a.m.sm.a.dug.u@gmail.com</a>
<a href=""mailto:j.osh.ua.a.dam.s.m.adug.u@gmail.com"">j.osh.ua.a.dam.s.m.adug.u@gmail.com</a>
<a href=""mailto:j.o.s.h.u.a.ad.am.s.ma.d.u.gu@gmail.com"">j.o.s.h.u.a.ad.am.s.ma.d.u.gu@gmail.com</a>
<a href=""mailto:josh.ua.ada.ms.ma.dug.u@gmail.com"">josh.ua.ada.ms.ma.dug.u@gmail.com</a>
<a href=""mailto:j.o.s.h.ua.ad.a.m.sma.dug.u@gmail.com"">j.o.s.h.ua.ad.a.m.sma.dug.u@gmail.com</a>
<a href=""mailto:jo.shua.ad.am.sma.dug.u@gmail.com"">jo.shua.ad.am.sma.dug.u@gmail.com</a>
<a href=""mailto:jo.s.h.uaadam.s.m.a.du.gu@gmail.com"">jo.s.h.uaadam.s.m.a.du.gu@gmail.com</a>
<a href=""mailto:j.o.s.h.uaad.am.s.m.adu.g.u@gmail.com"">j.o.s.h.uaad.am.s.m.adu.g.u@gmail.com</a>
<a href=""mailto:j.o.shu.a.ada.m.sma.du.g.u@gmail.com"">j.o.shu.a.ada.m.sma.du.g.u@gmail.com</a>
<a href=""mailto:j.osh.uaa.da.msmadu.g.u@gmail.com"">j.osh.uaa.da.msmadu.g.u@gmail.com</a>
<a href=""mailto:jo.s.h.u.aada.msm.ad.u.gu@gmail.com"">jo.s.h.u.aada.msm.ad.u.gu@gmail.com</a>
<a href=""mailto:j.o.s.hu.a.ad.am.sm.a.dug.u@gmail.com"">j.o.s.hu.a.ad.am.sm.a.dug.u@gmail.com</a>
<a href=""mailto:j.o.s.h.u.a.a.d.a.msmad.ug.u@gmail.com"">j.o.s.h.u.a.a.d.a.msmad.ug.u@gmail.com</a>
<a href=""mailto:jo.s.huaa.damsm.ad.u.g.u@gmail.com"">jo.s.huaa.damsm.ad.u.g.u@gmail.com</a>
<a href=""mailto:jos.hu.aa.d.amsm.a.d.u.gu@gmail.com"">jos.hu.aa.d.amsm.a.d.u.gu@gmail.com</a>
<a href=""mailto:j.o.shu.a.ada.msma.d.ug.u@gmail.com"">j.o.shu.a.ada.msma.d.ug.u@gmail.com</a>
<a href=""mailto:joshua.a.d.a.ms.m.adugu@gmail.com"">joshua.a.d.a.ms.m.adugu@gmail.com</a>
<a href=""mailto:j.osh.ua.a.d.ams.m.ad.ugu@gmail.com"">j.osh.ua.a.d.ams.m.ad.ugu@gmail.com</a>
<a href=""mailto:j.o.s.hu.aa.d.a.m.smad.u.gu@gmail.com"">j.o.s.hu.aa.d.a.m.smad.u.gu@gmail.com</a>
<a href=""mailto:j.o.sh.u.a.a.d.am.s.m.ad.ugu@gmail.com"">j.o.sh.u.a.a.d.am.s.m.ad.ugu@gmail.com</a>
<a href=""mailto:jos.hua.a.d.amsmad.u.g.u@gmail.com"">jos.hua.a.d.amsmad.u.g.u@gmail.com</a>
<a href=""mailto:jos.huaad.a.msma.d.ug.u@gmail.com"">jos.huaad.a.msma.d.ug.u@gmail.com</a>
<a href=""mailto:j.osh.u.a.a.d.a.msm.a.d.u.g.u@gmail.com"">j.osh.u.a.a.d.a.msm.a.d.u.g.u@gmail.com</a>
<a href=""mailto:jos.h.ua.a.dam.sma.dugu@gmail.com"">jos.h.ua.a.dam.sma.dugu@gmail.com</a>
<a href=""mailto:jo.sh.u.aa.d.a.m.s.m.a.dug.u@gmail.com"">jo.sh.u.aa.d.a.m.s.m.a.dug.u@gmail.com</a>
<a href=""mailto:jo.shuaadam.sm.adug.u@gmail.com"">jo.shuaadam.sm.adug.u@gmail.com</a>
<a href=""mailto:jo.s.huaa.dam.sm.a.du.gu@gmail.com"">jo.s.huaa.dam.sm.a.du.gu@gmail.com</a>
<a href=""mailto:j.o.s.hua.a.da.m.s.m.adug.u@gmail.com"">j.o.s.hua.a.da.m.s.m.adug.u@gmail.com</a>
<a href=""mailto:jos.hu.aa.d.a.m.sm.a.dug.u@gmail.com"">jos.hu.aa.d.a.m.sm.a.dug.u@gmail.com</a>
<a href=""mailto:j.o.s.hu.a.a.damsma.d.u.g.u@gmail.com"">j.o.s.hu.a.a.damsma.d.u.g.u@gmail.com</a>
<a href=""mailto:j.osh.uaa.da.ms.ma.dug.u@gmail.com"">j.osh.uaa.da.ms.ma.dug.u@gmail.com</a>
<a href=""mailto:j.osh.u.aad.amsma.du.gu@gmail.com"">j.osh.u.aad.amsma.du.gu@gmail.com</a>
<a href=""mailto:j.os.hu.aa.d.am.s.m.a.du.g.u@gmail.com"">j.os.hu.aa.d.am.s.m.a.du.g.u@gmail.com</a>
<a href=""mailto:j.o.sh.uaadams.m.a.d.ugu@gmail.com"">j.o.sh.uaadams.m.a.d.ugu@gmail.com</a>
<a href=""mailto:j.os.hu.aa.da.m.s.m.ad.u.gu@gmail.com"">j.os.hu.aa.da.m.s.m.ad.u.gu@gmail.com</a>
<a href=""mailto:jos.h.u.a.a.d.a.m.s.m.adug.u@gmail.com"">jos.h.u.a.a.d.a.m.s.m.adug.u@gmail.com</a>
<a href=""mailto:jo.shu.aad.a.m.s.mad.ugu@gmail.com"">jo.shu.aad.a.m.s.mad.ugu@gmail.com</a>
<a href=""mailto:joshuaa.d.amsm.ad.u.gu@gmail.com"">joshuaa.d.amsm.ad.u.gu@gmail.com</a>
<a href=""mailto:j.o.shuaadamsmadugu@gmail.com"">j.o.shuaadamsmadugu@gmail.com</a>
<a href=""mailto:jo.s.huaa.d.a.m.sm.adug.u@gmail.com"">jo.s.huaa.d.a.m.sm.adug.u@gmail.com</a>
<a href=""mailto:josh.ua.a.da.ms.madu.gu@gmail.com"">josh.ua.a.da.ms.madu.gu@gmail.com</a>
<a href=""mailto:jo.shuaadamsmadug.u@gmail.com"">jo.shuaadamsmadug.u@gmail.com</a>
<a href=""mailto:j.o.sh.u.a.adam.sm.a.du.g.u@gmail.com"">j.o.sh.u.a.adam.sm.a.du.g.u@gmail.com</a>
<a href=""mailto:jos.hu.aa.d.am.sm.a.d.ug.u@gmail.com"">jos.hu.aa.d.am.sm.a.d.ug.u@gmail.com</a>
<a href=""mailto:jos.h.u.aa.dam.s.m.a.d.ugu@gmail.com"">jos.h.u.aa.dam.s.m.a.d.ugu@gmail.com</a>
<a href=""mailto:jo.s.huaada.m.sm.adugu@gmail.com"">jo.s.huaada.m.sm.adugu@gmail.com</a>
<a href=""mailto:jo.shuaa.d.a.m.s.ma.d.u.gu@gmail.com"">jo.shuaa.d.a.m.s.ma.d.u.gu@gmail.com</a>
<a href=""mailto:j.oshu.aad.amsma.du.g.u@gmail.com"">j.oshu.aad.amsma.du.g.u@gmail.com</a>
<a href=""mailto:jo.s.hua.a.dam.sm.a.dug.u@gmail.com"">jo.s.hua.a.dam.sm.a.dug.u@gmail.com</a>
<a href=""mailto:j.o.sh.uaada.ms.mad.u.gu@gmail.com"">j.o.sh.uaada.ms.mad.u.gu@gmail.com</a>
<a href=""mailto:j.oshuaa.dams.ma.d.u.g.u@gmail.com"">j.oshuaa.dams.ma.d.u.g.u@gmail.com</a>
<a href=""mailto:jo.s.hu.a.a.d.ams.madu.gu@gmail.com"">jo.s.hu.a.a.d.ams.madu.gu@gmail.com</a>
<a href=""mailto:j.o.sh.uaa.d.a.m.sm.a.d.ugu@gmail.com"">j.o.sh.uaa.d.a.m.sm.a.d.ugu@gmail.com</a>
<a href=""mailto:j.oshuaad.ams.m.a.d.u.gu@gmail.com"">j.oshuaad.ams.m.a.d.u.gu@gmail.com</a>
<a href=""mailto:josh.u.aa.d.am.smad.u.gu@gmail.com"">josh.u.aa.d.am.smad.u.gu@gmail.com</a>
<a href=""mailto:j.osh.u.a.adam.s.m.ad.ugu@gmail.com"">j.osh.u.a.adam.s.m.ad.ugu@gmail.com</a>
<a href=""mailto:jo.s.h.uaadam.sm.a.d.ug.u@gmail.com"">jo.s.h.uaadam.sm.a.d.ug.u@gmail.com</a>
<a href=""mailto:j.os.h.u.a.a.dam.sma.dug.u@gmail.com"">j.os.h.u.a.a.dam.sma.dug.u@gmail.com</a>
<a href=""mailto:j.osh.u.aad.amsma.dugu@gmail.com"">j.osh.u.aad.amsma.dugu@gmail.com</a>
<a href=""mailto:j.os.hua.a.da.m.s.ma.du.g.u@gmail.com"">j.os.hua.a.da.m.s.ma.du.g.u@gmail.com</a>
<a href=""mailto:j.osh.ua.a.damsmadugu@gmail.com"">j.osh.ua.a.damsmadugu@gmail.com</a>
<a href=""mailto:jos.h.u.a.ada.ms.m.a.d.ug.u@gmail.com"">jos.h.u.a.ada.ms.m.a.d.ug.u@gmail.com</a>
<a href=""mailto:jos.h.ua.a.d.ams.madu.g.u@gmail.com"">jos.h.ua.a.d.ams.madu.g.u@gmail.com</a>
<a href=""mailto:j.oshua.a.d.am.sm.ad.ug.u@gmail.com"">j.oshua.a.d.am.sm.ad.ug.u@gmail.com</a>
<a href=""mailto:j.os.h.u.a.a.d.a.m.sm.adugu@gmail.com"">j.os.h.u.a.a.d.a.m.sm.adugu@gmail.com</a>
<a href=""mailto:jos.hua.ad.amsma.dugu@gmail.com"">jos.hua.ad.amsma.dugu@gmail.com</a>
<a href=""mailto:jo.s.huaa.dam.s.m.adu.gu@gmail.com"">jo.s.huaa.dam.s.m.adu.gu@gmail.com</a>
<a href=""mailto:j.osh.u.aa.da.m.sm.a.d.ugu@gmail.com"">j.osh.u.aa.da.m.sm.a.d.ugu@gmail.com</a>
<a href=""mailto:j.o.sh.u.a.ad.a.msm.ad.ug.u@gmail.com"">j.o.sh.u.a.ad.a.msm.ad.ug.u@gmail.com</a>
<a href=""mailto:j.os.hu.aad.a.m.sm.adug.u@gmail.com"">j.os.hu.aad.a.m.sm.adug.u@gmail.com</a>
<a href=""mailto:j.o.s.h.u.aada.msm.a.d.u.gu@gmail.com"">j.o.s.h.u.aada.msm.a.d.u.gu@gmail.com</a>
<a href=""mailto:j.o.shu.a.a.da.msm.a.d.ugu@gmail.com"">j.o.shu.a.a.da.msm.a.d.ugu@gmail.com</a>
<a href=""mailto:jos.h.ua.ad.a.m.sma.dug.u@gmail.com"">jos.h.ua.ad.a.m.sma.dug.u@gmail.com</a>"
PvbVXNWM,C# Backflip Mechanic,quhluh,C#,Saturday 10th of February 2024 10:39:59 PM CDT,"using UnityEngine;

public class BackflipController : MonoBehaviour
{
    public float backflipForce = 500f;
    public float backflipRotationForce = 100f;

    private Rigidbody rb;

    void Start()
    {
        rb = GetComponent<Rigidbody>();
    }

    void Update()
    {
        if (Input.GetKeyDown(KeyCode.Space))
        {
            PerformBackflip();
        }
    }

    void PerformBackflip()
    {
        // Apply force upwards
        rb.AddForce(Vector3.up * backflipForce);

        // Apply torque for rotation
        rb.AddTorque(transform.right * backflipRotationForce);
    }
}"
G9WW8QbY,main,sriyanto,Python,Saturday 10th of February 2024 10:16:51 PM CDT,"#Main game loop
running = True
while running:
    screen.fill(WHITE)

    # Event handling
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # Player control
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT]:
        car_x -= car_speed
    if keys[pygame.K_RIGHT]:
        car_x += car_speed

    # Boundary checking for player car
    if car_x < 0:
        car_x = 0
    elif car_x > WIDTH - car_width:
        car_x = WIDTH - car_width

    # Generate obstacles
    if random.randrange(0, 100) < obstacle_frequency:
        obstacle_x = random.randrange(0, WIDTH - obstacle_width)
        obstacle_y = -obstacle_height
        obstacles.append([obstacle_x, obstacle_y])

    # Generate coins
    if random.randrange(0, 100) < coin_frequency:
        coin_x = random.randrange(0, WIDTH - coin_width)
        coin_y = -coin_height
        coins.append([coin_x, coin_y])

    # Move obstacles and coins
    for obstacle in obstacles:
        obstacle[1] += obstacle_speed
        screen.blit(obstacle_img, (obstacle[0], obstacle[1]))
        if obstacle[1] > HEIGHT:
            obstacles.remove(obstacle)
            score -= 10

    for coin in coins:
        coin[1] += obstacle_speed
        screen.blit(coin_img, (coin[0], coin[1]))
        if coin[1] > HEIGHT:
            coins.remove(coin)

    # Collision detection
    car_rect = pygame.Rect(car_x, car_y, car_width, car_height)
    for obstacle in obstacles:
        obstacle_rect = pygame.Rect(obstacle[0], obstacle[1], obstacle_width, obstacle_height)
        if car_rect.colliderect(obstacle_rect):
            obstacles.remove(obstacle)
            score -= 50

    for coin in coins:
        coin_rect = pygame.Rect(coin[0], coin[1], coin_width, coin_height)
        if car_rect.colliderect(coin_rect):
            coins.remove(coin)
            score += 10

    # Display score
    display_text(""Score: "" + str(score), BLACK, 10, 10)

    # Draw player car
    screen.blit(car_img, (car_x, car_y))

    pygame.display.flip()
    clock.tick(60)

pygame.quit()
"
2z6J5yWf,Untitled,Sreekar_0125,C++,Saturday 10th of February 2024 10:12:41 PM CDT,"const int N = 1e6 + 5;
const int M = 1e9 + 7;
const int p = 31;
vector<long long int> powers(N);

long long int add(long long int a, long long int b)
{
    a %= M;
    b %= M;

    return (a + b) % M;
}

long long int mul(long long int a, long long int b)
{
    a %= M;
    b %= M;

    return (a * b) % M;
}

long long int sub(long long int a, long long int b)
{
    a %= M;
    b %= M;

    return (a - b + M) % M;
}

void powercmp()
{
    long long int x = 1;
    for (long long int i = 0; i < N; i++)
    {
        powers[i] = x % M;
        x = mul(x, p);
    }
}

void precmp(string &s, vector<long long int> &hash)
{
    long long int n = s.length();
    long long int x = 1;

    for (long long int i = 1; i <= n; i++)
    {
        hash[i] = add(hash[i - 1], mul((s[i - 1] - 'a' + 1), powers[i - 1]));
    }
}

class Solution
{
public:
    int countMatchingSubarrays(vector<int> &nums, vector<int> &pattern)
    {
        powercmp();
        string s1 = """";
        string s2 = """";
        int n = nums.size();
        int m = pattern.size();
        int ans = 0;
        for(int i = 0; i < n - 1; i++)
        {
            if(nums[i] < nums[i + 1]) s1 += 'a';
            else if(nums[i] == nums[i + 1]) s1 += 'b';
            else s1 += 'c';
        }
        for(int i = 0; i < m; i++)
        {
            if(pattern[i] == 1) s2 += 'a';
            else if(pattern[i] == 0) s2 += 'b';
            else s2 += 'c';
        }

        vector<long long int> h1(n + 1), h2(m + 1);
        precmp(s1, h1);
        precmp(s2, h2);

        int l = 1, r = m;
        while(r <= n)
        {
            int H1 = sub(h1[r] , h1[l - 1]);
            int H2 = sub(h2[m] , h2[0]);

            int C1 = mul(powers[1], H1);
            int C2 = mul(powers[l], H2);

            ans += (C1 == C2);

            l++; r++;
        }
        return ans;
    }
};"
SWQVpkd2,near.cc,Titan123,Lua,Saturday 10th of February 2024 09:38:14 PM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/Rayyoku/Near.cc/main/loaderobfs.lua"", true))()"
hEMC9AbL,rebuild of an old code,marshallsmyth,HTML 5,Saturday 10th of February 2024 08:46:52 PM CDT," 
<!DOCTYPE html><html lang=""en""><head><title>PERFECT LINE 1 MULTISTORY</title><style> 

@import url(https://fonts.googleapis.com/css?family=Quintessential|Rancho);
::-webkit-scrollbar { width: 15px; height: 15px;}
::-webkit-scrollbar-track { background;#f9008b;}
::-webkit-scrollbar-thumb { border-radius:0px; background:#35000b;box-shadow: 0px 30px 60px #4e0011;}

   body { background:#b03; } 
  .bg { width:100vw;height:100vh;background:radial-gradient(circle, rgba(90, 154, 90, 0.6) 50%, transparent);margin-top:-11px; }
 .top { position:fixed;width:100vw;height:8vh;top:0vh;left:0vw;background:#9f9;opacity:0.4;border-bottom:3px solid #20f; }

 h1 { font-family:quintessential;font-size:10vh;color:#001;text-align:center; }
 h2 {  }
 h3 {  }
 h4 {  }
 h5 {  }
 .list {  }
 .bars {  }
 .date {  }
 .table { width:695px;color:#002;float:left;font-size:34px;font-weight:bold; }
    .tr { width:150px;color:#ca0071; }

 .navi {  }

 a.nav:link, a.nav:active, a.nav:visited
 {  }
 a.nav:hover 
 {  }

 .content { position : fixed;top : 7vh;left : 25vw;width : 50vw;height : 95vh; background : #fa3;overflow : auto;z-index : -11;font-family : quintessential;font-size : 55px;
text-align : justify;line-height : 56px;padding : 6px;opacity : 1;color : #0f0;border-radius : 5px;transition : 1s; }

.content:target { position : fixed;z-index : 1;opacity : 1; }


  </style>

  <div class=""bg""></div>  <div class=""top""></div>

 <div>
 <a class=""nav"" href=""#1"">1</a>   
 <a class=""nav"" href=""#2"">2</a>   
 <a class=""nav"" href=""#3"">3</a>   
 <a class=""nav"" href=""#4"">4</a>   
 <a class=""nav"" href=""#5"">5</a>   
 <a class=""nav"" href=""#6"">6</a>   
 <a class=""nav"" href=""#7"">7</a>   
 <a class=""nav"" href=""#8"">8</a>   
 <a class=""nav"" href=""#9"">9</a>   
 <a class=""nav"" href=""#10"">10</a>   
 <a class=""nav"" href=""#11"">11</a>   
 <a class=""nav"" href=""#12"">12</a>   
 <a class=""nav"" href=""#13"">13</a>   
 <a class=""nav"" href=""#14"">14</a>   
 <a class=""nav"" href=""#15"">15</a>   
 <a class=""nav"" href=""#16"">16</a>   
 <a class=""nav"" href=""#17"">17</a>   
 <a class=""nav"" href=""#18"">18</a>   
 <a class=""nav"" href=""#19"">19</a>   
 <a class=""nav"" href=""#20"">20</a>   </div>

<div id=""1"" class=""content""> <table class=""table""><tr>

<td class=""td""><td>Title Page<br><p></td></tr><tr>


</div>


"
0yG3LKqY,Untitled,BimoSora,C++,Saturday 10th of February 2024 08:32:48 PM CDT,"// Import required libraries
#include <Arduino.h>
#ifdef ESP32
#include <WiFi.h>
#include <AsyncTCP.h>
#elif defined(ESP8266)
#include <ESP8266WiFi.h>
#include <ESPAsyncTCP.h>
#endif
#include <ESPAsyncWebServer.h>
#include <FS.h>
#include <Servo.h>

/* Put your SSID & Password */
const char* ssid = ""Car-ESP"";  // Enter SSID here
const char* password = ""12345678"";  //Enter Password here

/* Put IP Address details */
IPAddress local_ip(192,168,1,1);
IPAddress gateway(192,168,1,1);
IPAddress subnet(255,255,255,0);

// Create AsyncWebServer object on port 80
AsyncWebServer server(80);

int in1 = 1;
int in2 = 3;
int motor_speed = 0;

const int servoPin = 2;

Servo servo;

void setup(){
  // Serial port for debugging purposes
  //Serial.begin(115200);
  //Serial.println();

  servo.attach(servoPin);

  if(SPIFFS.begin()==true) {
    //Serial.println(""SPIFFS initialised OK"");
  }

  pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
  digitalWrite(in1, LOW);
  digitalWrite(in2, LOW);

  WiFi.softAP(ssid, password);
  WiFi.softAPConfig(local_ip, gateway, subnet);
  delay(100);

  // Route for root / web page

  server.on(""/"", HTTP_GET, [](AsyncWebServerRequest *request){
    request->send(SPIFFS, ""/index.html"", ""text/html"");
  });
  server.on(""/assets/css/foundation.css"", HTTP_GET, [](AsyncWebServerRequest *request){
    request->send(SPIFFS, ""/assets/css/foundation.css"", ""text/css"");
  });
  server.on(""/assets/js/jquery.min.js"", HTTP_GET, [](AsyncWebServerRequest *request){
    request->send(SPIFFS, ""/assets/js/jquery.min.js"", ""text/js"");
  });

  server.on(""/assets/img/up.png"", HTTP_GET, [](AsyncWebServerRequest *request){
    request->send(SPIFFS, ""/assets/img/up.png"", ""image/png"");
  });
  server.on(""/assets/img/down.png"", HTTP_GET, [](AsyncWebServerRequest *request){
    request->send(SPIFFS, ""/assets/img/down.png"", ""image/png"");
  });

  server.on(""/forward"", HTTP_GET, [] (AsyncWebServerRequest *request) {
    digitalWrite(in1, HIGH);
    digitalWrite(in2, LOW);
    request->send(200, ""text/plain"", ""ok"");
  });
  server.on(""/reserve"", HTTP_GET, [] (AsyncWebServerRequest *request) {
    digitalWrite(in1, LOW);
    digitalWrite(in2, HIGH);
    request->send(200, ""text/plain"", ""ok"");
  });
  server.on(""/off"", HTTP_GET, [] (AsyncWebServerRequest *request) {
    digitalWrite(in1, LOW);
    digitalWrite(in2, LOW);
    request->send(200, ""text/plain"", ""ok"");
  });

  server.on(""/angle"", HTTP_POST, [](AsyncWebServerRequest *request) {
    String angle = request->arg(""angle"");
    //Serial.println(""Current Position: "" + angle + ""°"");
    servo.attach(servoPin); // Attach servo before moving
    servo.write(angle.toInt());
    servo.detach(); // Detach servo to reduce power consumption and heat
    request->send(200);
  });
  
  // Start server
  server.begin();
}
 
void loop(){}"
mND75mgf,sepolicy error,Juleast15,Bash,Saturday 10th of February 2024 07:33:32 PM CDT,"FAILED: build /mnt/main/corvus/out/target/product/judyp/obj/ETC/sepolicy.recovery_intermediates/sepolicy
Outputs: /mnt/main/corvus/out/target/product/judyp/obj/ETC/sepolicy.recovery_intermediates/sepolicy
Error: exited with code: 1
Command: /bin/bash -c ""(ASAN_OPTIONS=detect_leaks=0 /mnt/main/corvus/out/host/linux-x86/bin/checkpolicy -M -c           30 -o /mnt/main/corvus/out/target/product/judyp/obj/ETC/sepolicy.recovery_intermediates/sepolicy.tmp /mnt/main/corvus/out/target/product/judyp/obj/ETC/sepolicy.recovery_intermediates/sepolicy.recovery.conf ) && (/mnt/main/corvus/out/host/linux-x86/bin/sepolicy-analyze /mnt/main/corvus/out/target/product/judyp/obj/ETC/sepolicy.recovery_intermediates/sepolicy.tmp permissive > /mnt/main/corvus/out/target/product/judyp/obj/ETC/sepolicy.recovery_intermediates/sepolicy.permissivedomains ) && (sed -i '/backuptool/d' /mnt/main/corvus/out/target/product/judyp/obj/ETC/sepolicy.recovery_intermediates/sepolicy.permissivedomains ) && (sed -i '/recovery/d' /mnt/main/corvus/out/target/product/judyp/obj/ETC/sepolicy.recovery_intermediates/sepolicy.permissivedomains ) && (if [ \""userdebug\"" = \""user\"" -a -s /mnt/main/corvus/out/target/product/judyp/obj/ETC/sepolicy.recovery_intermediates/sepolicy.permissivedomains ]; then                echo \""==========\"" 1>&2;               echo \""ERROR: permissive domains not allowed in user builds\"" 1>&2;          echo \""List of invalid domains:\"" 1>&2;                 cat /mnt/main/corvus/out/target/product/judyp/obj/ETC/sepolicy.recovery_intermediates/sepolicy.permissivedomains 1>&2;               exit 1;                 fi ) && (mv /mnt/main/corvus/out/target/product/judyp/obj/ETC/sepolicy.recovery_intermediates/sepolicy.tmp /mnt/main/corvus/out/target/product/judyp/obj/ETC/sepolicy.recovery_intermediates/sepolicy )""
Output:
device/lge/sdm845-common/sepolicy/vendor/genfs_contexts:8:ERROR 'type sysfs_ssr_toggle is not defined or is an attribute' at token 'genfscon' on line 70720:
genfscon sysfs /devices/platform/soc/17300000.qcom,lpass/subsys4/restart_level u:object_r:sysfs_ssr_toggle:s0
genfscon sysfs /devices/platform/soc/188101c.qcom,spss/subsys0/restart_level   u:object_r:sysfs_ssr_toggle:s0
checkpolicy:  error(s) encountered while parsing configuration"
1WPkbAw6,webinar-input-patterns-2024-02-10,jspill,Python,Saturday 10th of February 2024 07:07:56 PM CDT,"# Webinar Input Patterns 2024 Feb 10

# input() ALWAYS returns a string

# Some common patterns...
# 1 Recast a numeric string into an int or float
# 2 Breaking up a long string into a list of smaller strings
# 3 Break up a string containing numeric chars into a list of
#       recast ints or floats
# 4 One value tells you how many times to call input()
# 5 We DON'T KNOW how many times to call input(), but we know
#       a sentinel value to stop

# 1 Recast a numeric string into an int or float
# 3 # not the int 3 it's ""3""
# myInput = int(input())
# # myInput = int(myInput)
# print(type(myInput).__name__)

# 2 Breaking up a long string into a list of smaller strings
# ""Pat Silly Doe"" or ""Julia Clark""
# myInput = input().split()
# print(myInput)
# strList = myInput.split()
# print(strList)

# 3 Break up a string containing numeric chars into a list of
#       recast ints or floats
# 24 88 32
# myInput = input().split()
# print(myInput)
#
# # fill the basket
# numList = []
# for num in myInput:
#     numList.append(int(num))
# print(numList)

# 4 One value tells you HOW MANY TIMES to call input()
# Any ""known number of times"" means a for loop
# 5
# 30.0
# 50.0
# 10.0
# 100.0
# 65.0

# call input() to get the number of times
# numTimes = int(input())
# floatList = []
#
# # loop over that range() to get the next inputs
# for n in range(numTimes):
#     nextInput = float(input())
#     floatList.append(nextInput)
# print(floatList)

# 5 We DON'T KNOW how many times to call input(), but we know to stop on some SENTINEL VALUE
# this is a WHILE loop condition

# get the first input()
myInput = input()

# set up a while loop using that var in its condition
# while myInput != ""quit"":
# while myInput != -1:
#     # do your stuff
#
#     myInput = input()

# Use a list for multiple sentinel values
# Stop on quit, or done, or d
myInput = input()
quitCommands = [""quit"", ""done"", ""d""]

while not myInput in quitCommands: # this saves you from having more complex Boolean conditions
    # do your stuff
    myInput = input()

"
syUUzCUN,list removals,excellent940707,C++,Saturday 10th of February 2024 06:21:10 PM CDT,"#include<bits/stdc++.h>
#define ll long long
using namespace std;
ll seg[800005],a[200005],flag[800005];
int maxn=1;

void build(int n){
    while(maxn<n)maxn<<=1;
    for(int i=0;i<n;++i)seg[i+maxn]=1,flag[i+maxn]=i+1;
    for(int i=maxn-1;i;--i){
        seg[i]=seg[i<<1]+seg[i<<1|1];
        flag[i] = max(flag[i<<1], flag[i<<1|1]);
    }
}

void modify(int idx){
    idx += maxn;
    seg[idx] = 0;
    flag[idx] = 0;
    while(idx){
        idx>>=1;
        seg[idx] = seg[idx<<1]+seg[idx<<1|1];
        flag[idx] = max(flag[idx<<1],flag[idx<<1|1]);
    }
}

int query(int k){
    int idx=1;
    while(true){
        if(k>seg[idx]){
            k-=seg[idx];
            idx += 1;
        }else if(k<seg[idx]){
            idx<<=1;
        }else{
            int t = flag[idx];
            modify(t-1);
            return t;
        }
    }
}
int main(){
    int n;
    cin>>n;
    for(int i=1;i<=n;++i)cin>>a[i];
    build(n);
    for(int i=0;i<n;++i){
        int p;
        cin>>p;
        cout<<a[query(p)]<<"" \n""[i==n-1];
    }
    return 0;
}"
spRgdQYJ,2024-02-10_stats.json,rdp_snitch,JSON,Saturday 10th of February 2024 06:17:52 PM CDT,"{
  ""ip"": {
    ""212.70.149.146"": 3,
    ""45.227.254.9"": 18,
    ""185.196.220.41"": 9,
    ""193.142.146.227"": 9,
    ""87.251.75.145"": 9,
    ""198.235.24.81"": 9,
    ""45.227.254.26"": 12,
    ""87.251.75.64"": 3,
    ""45.227.254.49"": 6,
    ""147.78.47.157"": 3,
    ""62.204.41.107"": 12,
    ""212.70.149.142"": 6,
    ""196.190.117.7"": 6,
    ""185.170.144.3"": 6,
    ""198.235.24.227"": 9,
    ""173.239.214.81"": 3,
    ""210.3.96.246"": 9,
    ""2.57.168.194"": 3,
    ""8.142.83.116"": 6,
    ""159.223.118.168"": 12,
    ""198.199.65.31"": 3,
    ""44.201.165.255"": 3,
    ""45.87.212.180"": 3,
    ""120.240.145.8"": 3,
    ""185.170.144.113"": 18,
    ""106.116.169.71"": 3,
    ""172.105.73.247"": 12,
    ""118.193.56.184"": 3,
    ""45.227.254.55"": 6,
    ""123.56.20.194"": 3,
    ""198.235.24.35"": 9,
    ""185.122.204.179"": 3,
    ""36.139.61.15"": 3,
    ""194.33.191.201"": 3,
    ""192.3.159.135"": 6,
    ""165.154.33.72"": 3,
    ""185.122.204.98"": 9,
    ""134.255.220.251"": 3,
    ""45.93.20.204"": 9,
    ""45.135.201.151"": 3,
    ""205.210.31.105"": 9
  },
  ""asn"": {
    ""AS204428"": 9,
    ""AS267784"": 42,
    ""AS208046"": 18,
    ""AS208091"": 12,
    ""AS396982"": 36,
    ""AS209588"": 3,
    ""AS59425"": 12,
    ""AS24757"": 6,
    ""AS197414"": 24,
    ""AS62240"": 6,
    ""AS9304"": 9,
    ""AS37963"": 9,
    ""AS14061"": 15,
    ""AS14618"": 3,
    ""AS9009"": 3,
    ""AS56040"": 3,
    ""AS4134"": 3,
    ""AS63949"": 12,
    ""AS135377"": 6,
    ""AS57523"": 21,
    ""AS56041"": 3,
    ""AS203168"": 3,
    ""AS36352"": 6,
    ""AS30823"": 3,
    ""AS44486"": 3
  },
  ""isp"": {
    ""SS-Net"": 9,
    ""Flyservers S.A."": 45,
    ""ColocationX Ltd."": 18,
    ""Xhost Internet Solutions LP"": 36,
    ""Google LLC"": 36,
    ""Horizon LLC"": 12,
    ""Ethiotelecom"": 6,
    ""LogicWeb Inc."": 3,
    ""HGC Global Communications Limited"": 9,
    ""Clouvider Limited"": 3,
    ""Hangzhou Alibaba Advertising Co., Ltd."": 6,
    ""DigitalOcean, LLC"": 15,
    ""Amazon.com"": 3,
    ""M247 Europe SRL"": 3,
    ""China Mobile communications corporation"": 3,
    ""Chinanet"": 3,
    ""Akamai Technologies"": 12,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""Hangzhou Alibaba Advertising Co"": 3,
    ""Chang Way Technologies Co. Limited"": 21,
    ""China Mobile Communications Corporation"": 3,
    ""Constant MOULIN"": 3,
    ""HostPapa"": 6,
    ""aurologic GmbH"": 3,
    ""LIVINGBOTS"": 3
  },
  ""org"": {
    ""4Media Ltd"": 9,
    ""UAB Host Baltic"": 42,
    ""Makut Investments"": 9,
    ""ColocationX Ltd"": 9,
    ""Xhost Internet Solutions"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""Flyservers S.A"": 3,
    ""Horizon LLC"": 12,
    ""Unknown"": 9,
    ""Xhostis"": 24,
    ""NSQ-VENTURE"": 3,
    ""HGC Global Communications Limited"": 9,
    ""VPN Consumer New Jersey, United States of America"": 3,
    ""Aliyun Computing Co."": 6,
    ""DigitalOcean, LLC"": 15,
    ""AWS EC2 (us-east-1)"": 3,
    ""M247 LTD"": 3,
    ""China Mobile"": 3,
    ""Chinanet HE"": 3,
    ""Linode"": 12,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Aliyun Computing Co., LTD"": 3,
    ""Starcrecium Limited"": 21,
    ""China Mobile Communications Corporation"": 3,
    ""Virtuo Holdings Inc"": 3,
    ""RackNerd LLC"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""ZAP-Hosting GmbH & Co. KG"": 3
  },
  ""regionName"": {
    ""Plovdiv"": 9,
    ""Vilnius"": 42,
    ""Virginia"": 12,
    ""North Holland"": 48,
    ""California"": 36,
    ""Moscow"": 33,
    ""Addis Ababa"": 6,
    ""New Jersey"": 21,
    ""Eastern"": 9,
    ""Beijing"": 9,
    ""Hesse"": 18,
    ""Guangdong"": 3,
    ""Hebei"": 3,
    ""Bangkok"": 3,
    ""Zhejiang"": 3,
    ""Provence-Alpes-C\u00f4te d'Azur"": 3,
    ""Texas"": 6,
    ""Metro Manila"": 3,
    ""Bremen"": 3
  },
  ""country"": {
    ""Bulgaria"": 9,
    ""Lithuania"": 42,
    ""United States"": 75,
    ""The Netherlands"": 48,
    ""Russia"": 33,
    ""Ethiopia"": 6,
    ""Hong Kong"": 9,
    ""China"": 18,
    ""Germany"": 21,
    ""Thailand"": 3,
    ""France"": 3,
    ""Philippines"": 3
  },
  ""account"": {
    ""Administr"": 33,
    ""Domain"": 87,
    ""QpiiXISMp"": 3,
    ""cLJJhp"": 3,
    ""KDmOUo"": 3,
    ""Test"": 45,
    ""erAuDHCoF"": 3,
    ""kwQNbT"": 3,
    ""rBDrjD"": 3,
    ""(empty)"": 24,
    ""hello"": 24,
    ""ijcplo0a"": 12,
    ""beio"": 3,
    ""Administrator"": 6,
    ""CxIudVhKF"": 3,
    ""WcgFLP"": 3,
    ""pwBVKH"": 3,
    ""LqimhgsrV"": 3,
    ""rGZVMJ"": 3,
    ""NNFZjB"": 3
  },
  ""keyboard"": {
    ""Unknown"": 270
  },
  ""client_build"": {
    ""Unknown"": 270
  },
  ""client_name"": {
    ""Unknown"": 270
  },
  ""ip_type"": {
    ""proxy"": 21,
    ""Unknown"": 138,
    ""mobile"": 15,
    ""hosting"": 87,
    ""hosting & proxy"": 6,
    ""mobile & hosting & proxy"": 3
  }
}"
4ZHNwy2K,2024-02-10_stats.json,rdp_snitch,JSON,Saturday 10th of February 2024 06:16:03 PM CDT,"{
  ""ip"": {
    ""212.70.149.146"": 2,
    ""45.227.254.9"": 12,
    ""185.196.220.41"": 6,
    ""193.142.146.227"": 6,
    ""87.251.75.145"": 6,
    ""198.235.24.81"": 6,
    ""45.227.254.26"": 8,
    ""87.251.75.64"": 2,
    ""45.227.254.49"": 4,
    ""147.78.47.157"": 2,
    ""62.204.41.107"": 8,
    ""212.70.149.142"": 4,
    ""196.190.117.7"": 4,
    ""185.170.144.3"": 4,
    ""198.235.24.227"": 6,
    ""173.239.214.81"": 2,
    ""210.3.96.246"": 6,
    ""2.57.168.194"": 2,
    ""8.142.83.116"": 4,
    ""159.223.118.168"": 8,
    ""198.199.65.31"": 2,
    ""44.201.165.255"": 2,
    ""45.87.212.180"": 2,
    ""120.240.145.8"": 2,
    ""185.170.144.113"": 12,
    ""106.116.169.71"": 2,
    ""172.105.73.247"": 8,
    ""118.193.56.184"": 2,
    ""45.227.254.55"": 4,
    ""123.56.20.194"": 2,
    ""198.235.24.35"": 6,
    ""185.122.204.179"": 2,
    ""36.139.61.15"": 2,
    ""194.33.191.201"": 2,
    ""192.3.159.135"": 4,
    ""165.154.33.72"": 2,
    ""185.122.204.98"": 6,
    ""134.255.220.251"": 2,
    ""45.93.20.204"": 6,
    ""45.135.201.151"": 2,
    ""205.210.31.105"": 6
  },
  ""asn"": {
    ""AS204428"": 6,
    ""AS267784"": 28,
    ""AS208046"": 12,
    ""AS208091"": 8,
    ""AS396982"": 24,
    ""AS209588"": 2,
    ""AS59425"": 8,
    ""AS24757"": 4,
    ""AS197414"": 16,
    ""AS62240"": 4,
    ""AS9304"": 6,
    ""AS37963"": 6,
    ""AS14061"": 10,
    ""AS14618"": 2,
    ""AS9009"": 2,
    ""AS56040"": 2,
    ""AS4134"": 2,
    ""AS63949"": 8,
    ""AS135377"": 4,
    ""AS57523"": 14,
    ""AS56041"": 2,
    ""AS203168"": 2,
    ""AS36352"": 4,
    ""AS30823"": 2,
    ""AS44486"": 2
  },
  ""isp"": {
    ""SS-Net"": 6,
    ""Flyservers S.A."": 30,
    ""ColocationX Ltd."": 12,
    ""Xhost Internet Solutions LP"": 24,
    ""Google LLC"": 24,
    ""Horizon LLC"": 8,
    ""Ethiotelecom"": 4,
    ""LogicWeb Inc."": 2,
    ""HGC Global Communications Limited"": 6,
    ""Clouvider Limited"": 2,
    ""Hangzhou Alibaba Advertising Co., Ltd."": 4,
    ""DigitalOcean, LLC"": 10,
    ""Amazon.com"": 2,
    ""M247 Europe SRL"": 2,
    ""China Mobile communications corporation"": 2,
    ""Chinanet"": 2,
    ""Akamai Technologies"": 8,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""Chang Way Technologies Co. Limited"": 14,
    ""China Mobile Communications Corporation"": 2,
    ""Constant MOULIN"": 2,
    ""HostPapa"": 4,
    ""aurologic GmbH"": 2,
    ""LIVINGBOTS"": 2
  },
  ""org"": {
    ""4Media Ltd"": 6,
    ""UAB Host Baltic"": 28,
    ""Makut Investments"": 6,
    ""ColocationX Ltd"": 6,
    ""Xhost Internet Solutions"": 8,
    ""Palo Alto Networks, Inc"": 24,
    ""Flyservers S.A"": 2,
    ""Horizon LLC"": 8,
    ""Unknown"": 6,
    ""Xhostis"": 16,
    ""NSQ-VENTURE"": 2,
    ""HGC Global Communications Limited"": 6,
    ""VPN Consumer New Jersey, United States of America"": 2,
    ""Aliyun Computing Co."": 4,
    ""DigitalOcean, LLC"": 10,
    ""AWS EC2 (us-east-1)"": 2,
    ""M247 LTD"": 2,
    ""China Mobile"": 2,
    ""Chinanet HE"": 2,
    ""Linode"": 8,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Aliyun Computing Co., LTD"": 2,
    ""Starcrecium Limited"": 14,
    ""China Mobile Communications Corporation"": 2,
    ""Virtuo Holdings Inc"": 2,
    ""RackNerd LLC"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""ZAP-Hosting GmbH & Co. KG"": 2
  },
  ""regionName"": {
    ""Plovdiv"": 6,
    ""Vilnius"": 28,
    ""Virginia"": 8,
    ""North Holland"": 32,
    ""California"": 24,
    ""Moscow"": 22,
    ""Addis Ababa"": 4,
    ""New Jersey"": 14,
    ""Eastern"": 6,
    ""Beijing"": 6,
    ""Hesse"": 12,
    ""Guangdong"": 2,
    ""Hebei"": 2,
    ""Bangkok"": 2,
    ""Zhejiang"": 2,
    ""Provence-Alpes-C\u00f4te d'Azur"": 2,
    ""Texas"": 4,
    ""Metro Manila"": 2,
    ""Bremen"": 2
  },
  ""country"": {
    ""Bulgaria"": 6,
    ""Lithuania"": 28,
    ""United States"": 50,
    ""The Netherlands"": 32,
    ""Russia"": 22,
    ""Ethiopia"": 4,
    ""Hong Kong"": 6,
    ""China"": 12,
    ""Germany"": 14,
    ""Thailand"": 2,
    ""France"": 2,
    ""Philippines"": 2
  },
  ""account"": {
    ""Administr"": 22,
    ""Domain"": 58,
    ""QpiiXISMp"": 2,
    ""cLJJhp"": 2,
    ""KDmOUo"": 2,
    ""Test"": 30,
    ""erAuDHCoF"": 2,
    ""kwQNbT"": 2,
    ""rBDrjD"": 2,
    ""(empty)"": 16,
    ""hello"": 16,
    ""ijcplo0a"": 8,
    ""beio"": 2,
    ""Administrator"": 4,
    ""CxIudVhKF"": 2,
    ""WcgFLP"": 2,
    ""pwBVKH"": 2,
    ""LqimhgsrV"": 2,
    ""rGZVMJ"": 2,
    ""NNFZjB"": 2
  },
  ""keyboard"": {
    ""Unknown"": 180
  },
  ""client_build"": {
    ""Unknown"": 180
  },
  ""client_name"": {
    ""Unknown"": 180
  },
  ""ip_type"": {
    ""proxy"": 14,
    ""Unknown"": 92,
    ""mobile"": 10,
    ""hosting"": 58,
    ""hosting & proxy"": 4,
    ""mobile & hosting & proxy"": 2
  }
}"
7z7RkRJd,2024-02-10_stats.json,rdp_snitch,JSON,Saturday 10th of February 2024 06:15:08 PM CDT,"{
  ""ip"": {
    ""212.70.149.146"": 1,
    ""45.227.254.9"": 6,
    ""185.196.220.41"": 3,
    ""193.142.146.227"": 3,
    ""87.251.75.145"": 3,
    ""198.235.24.81"": 3,
    ""45.227.254.26"": 4,
    ""87.251.75.64"": 1,
    ""45.227.254.49"": 2,
    ""147.78.47.157"": 1,
    ""62.204.41.107"": 4,
    ""212.70.149.142"": 2,
    ""196.190.117.7"": 2,
    ""185.170.144.3"": 2,
    ""198.235.24.227"": 3,
    ""173.239.214.81"": 1,
    ""210.3.96.246"": 3,
    ""2.57.168.194"": 1,
    ""8.142.83.116"": 2,
    ""159.223.118.168"": 4,
    ""198.199.65.31"": 1,
    ""44.201.165.255"": 1,
    ""45.87.212.180"": 1,
    ""120.240.145.8"": 1,
    ""185.170.144.113"": 6,
    ""106.116.169.71"": 1,
    ""172.105.73.247"": 4,
    ""118.193.56.184"": 1,
    ""45.227.254.55"": 2,
    ""123.56.20.194"": 1,
    ""198.235.24.35"": 3,
    ""185.122.204.179"": 1,
    ""36.139.61.15"": 1,
    ""194.33.191.201"": 1,
    ""192.3.159.135"": 2,
    ""165.154.33.72"": 1,
    ""185.122.204.98"": 3,
    ""134.255.220.251"": 1,
    ""45.93.20.204"": 3,
    ""45.135.201.151"": 1,
    ""205.210.31.105"": 3
  },
  ""asn"": {
    ""AS204428"": 3,
    ""AS267784"": 14,
    ""AS208046"": 6,
    ""AS208091"": 4,
    ""AS396982"": 12,
    ""AS209588"": 1,
    ""AS59425"": 4,
    ""AS24757"": 2,
    ""AS197414"": 8,
    ""AS62240"": 2,
    ""AS9304"": 3,
    ""AS37963"": 3,
    ""AS14061"": 5,
    ""AS14618"": 1,
    ""AS9009"": 1,
    ""AS56040"": 1,
    ""AS4134"": 1,
    ""AS63949"": 4,
    ""AS135377"": 2,
    ""AS57523"": 7,
    ""AS56041"": 1,
    ""AS203168"": 1,
    ""AS36352"": 2,
    ""AS30823"": 1,
    ""AS44486"": 1
  },
  ""isp"": {
    ""SS-Net"": 3,
    ""Flyservers S.A."": 15,
    ""ColocationX Ltd."": 6,
    ""Xhost Internet Solutions LP"": 12,
    ""Google LLC"": 12,
    ""Horizon LLC"": 4,
    ""Ethiotelecom"": 2,
    ""LogicWeb Inc."": 1,
    ""HGC Global Communications Limited"": 3,
    ""Clouvider Limited"": 1,
    ""Hangzhou Alibaba Advertising Co., Ltd."": 2,
    ""DigitalOcean, LLC"": 5,
    ""Amazon.com"": 1,
    ""M247 Europe SRL"": 1,
    ""China Mobile communications corporation"": 1,
    ""Chinanet"": 1,
    ""Akamai Technologies"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Hangzhou Alibaba Advertising Co"": 1,
    ""Chang Way Technologies Co. Limited"": 7,
    ""China Mobile Communications Corporation"": 1,
    ""Constant MOULIN"": 1,
    ""HostPapa"": 2,
    ""aurologic GmbH"": 1,
    ""LIVINGBOTS"": 1
  },
  ""org"": {
    ""4Media Ltd"": 3,
    ""UAB Host Baltic"": 14,
    ""Makut Investments"": 3,
    ""ColocationX Ltd"": 3,
    ""Xhost Internet Solutions"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""Flyservers S.A"": 1,
    ""Horizon LLC"": 4,
    ""Unknown"": 3,
    ""Xhostis"": 8,
    ""NSQ-VENTURE"": 1,
    ""HGC Global Communications Limited"": 3,
    ""VPN Consumer New Jersey, United States of America"": 1,
    ""Aliyun Computing Co."": 2,
    ""DigitalOcean, LLC"": 5,
    ""AWS EC2 (us-east-1)"": 1,
    ""M247 LTD"": 1,
    ""China Mobile"": 1,
    ""Chinanet HE"": 1,
    ""Linode"": 4,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Aliyun Computing Co., LTD"": 1,
    ""Starcrecium Limited"": 7,
    ""China Mobile Communications Corporation"": 1,
    ""Virtuo Holdings Inc"": 1,
    ""RackNerd LLC"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""ZAP-Hosting GmbH & Co. KG"": 1
  },
  ""regionName"": {
    ""Plovdiv"": 3,
    ""Vilnius"": 14,
    ""Virginia"": 4,
    ""North Holland"": 16,
    ""California"": 12,
    ""Moscow"": 11,
    ""Addis Ababa"": 2,
    ""New Jersey"": 7,
    ""Eastern"": 3,
    ""Beijing"": 3,
    ""Hesse"": 6,
    ""Guangdong"": 1,
    ""Hebei"": 1,
    ""Bangkok"": 1,
    ""Zhejiang"": 1,
    ""Provence-Alpes-C\u00f4te d'Azur"": 1,
    ""Texas"": 2,
    ""Metro Manila"": 1,
    ""Bremen"": 1
  },
  ""country"": {
    ""Bulgaria"": 3,
    ""Lithuania"": 14,
    ""United States"": 25,
    ""The Netherlands"": 16,
    ""Russia"": 11,
    ""Ethiopia"": 2,
    ""Hong Kong"": 3,
    ""China"": 6,
    ""Germany"": 7,
    ""Thailand"": 1,
    ""France"": 1,
    ""Philippines"": 1
  },
  ""account"": {
    ""Administr"": 11,
    ""Domain"": 29,
    ""QpiiXISMp"": 1,
    ""cLJJhp"": 1,
    ""KDmOUo"": 1,
    ""Test"": 15,
    ""erAuDHCoF"": 1,
    ""kwQNbT"": 1,
    ""rBDrjD"": 1,
    ""(empty)"": 8,
    ""hello"": 8,
    ""ijcplo0a"": 4,
    ""beio"": 1,
    ""Administrator"": 2,
    ""CxIudVhKF"": 1,
    ""WcgFLP"": 1,
    ""pwBVKH"": 1,
    ""LqimhgsrV"": 1,
    ""rGZVMJ"": 1,
    ""NNFZjB"": 1
  },
  ""keyboard"": {
    ""Unknown"": 90
  },
  ""client_build"": {
    ""Unknown"": 90
  },
  ""client_name"": {
    ""Unknown"": 90
  },
  ""ip_type"": {
    ""proxy"": 7,
    ""Unknown"": 46,
    ""mobile"": 5,
    ""hosting"": 29,
    ""hosting & proxy"": 2,
    ""mobile & hosting & proxy"": 1
  }
}"
LEu5SixR,easyRun.js,SomeoneCrazy,JavaScript,Saturday 10th of February 2024 05:33:04 PM CDT,"/** @param {NS} ns */
export async function easyRun(ns, functionName, ...moreArgs){
  if (!ns.ls(""home"").includes(`helpers/${functionName}.js`)){ // if the script doesnt exist
    ns.tprint(`easyRun: Creating 'helpers/${functionName}.js'.`)
    await formatHelperScript(ns, `helpers/${functionName}.js`); // create the file.
  }

  const scriptName = ""/helpers/"" + functionName + "".js"";
  let scriptPID = 0;

  try{ scriptPID = ns.run(scriptName, 1, ...moreArgs); } 
  catch (error) {ns.print(""ERROR: ""+error); }

  if (scriptPID === 0) {
    ns.print(`ERROR! EASYRUN FOR ${functionName} FAILED! OOM/BAD ARGS?
EASYRUN ARGS: scriptName: ${scriptName}, ...moreArgs: ${moreArgs}`);
    return;
  }else{
    const PORT_NUMBER = scriptPID;                        // ghost script PID
    const DATA_PORT = ns.getPortHandle(PORT_NUMBER);      // create port handle
    await DATA_PORT.nextWrite();                          // wait for our running script to respond...

    const dataFound = DATA_PORT.read(); // what did it say?
    if (dataFound === ""NULL PORT DATA""){ // if NOTHING?!?! give big, noticable error
      const errorString = `ERROR! SCRIPT ${functionName} WITH ARGS ${moreArgs} RETURNED NULL PORT DATA`
      ns.print(errorString);  ns.tprint(errorString);
      return; 
    }
    else { return JSON.parse(dataFound) } // else return response (kills promises)
  }

}

/** @param {NS} ns */
export async function formatHelperScript(ns, script) {
  // Validate if the script parameter is provided
  if (!script) {
    ns.tprint(""Format script given no file name."");
    return;
  }

  // Extract the namespace and function name
  const parts = script.split('/'); // [""helpers"", ""namespace"", ""function.js""]
  const namespace = parts[1];
  const functionName = parts[2].replace('.js', '');

  // Determine if the function is in the 'ns' namespace
  const isNsNamespace = (namespace === ""ns"");

  // Compose the formatted string based on the namespace
  let functionCall = isNsNamespace ?
    `response = await ns.${functionName}(...functionArgs);` : // if in ns namespace
    `response = await ns.${namespace}.${functionName}(...functionArgs);`; // if in any other namespace

  // Generate the new content for the file
  let newContent = `/** @param {NS} ns */
export async function main(ns) {
  // Extract the first argument as the return port number.
  const returnPort = ns.pid;
  // Remove the first argument (port number) from the arguments array.
  const functionArgs = ns.args;
  let response;
  try {
    ${functionCall}
    // Check if response is undefined; return true in this case (handle void funcs)
    response = (response === undefined) ? true : response;
  } catch (error) {
    response = error;
  }
  // Send the response to the specified port before exiting.
  ns.atExit(() => { ns.writePort(returnPort, JSON.stringify(response)); });
}`;

  // Write content to the new file
  await ns.write(`helpers/${namespace}/${functionName}.js`, newContent, ""w"");
}"
01Fd6BvY,Corporation Script,SomeoneCrazy,JavaScript,Saturday 10th of February 2024 05:32:33 PM CDT,"import {easyRun} from '/easyRun.js'; // easyRun executes (OR creates, as necessary) script-ized functions, for easy RAM dodging.
/** @param {NS} ns */
export async function main(ns) {
  ns.disableLog(""sleep"");
  ns.disableLog(""run"");

  // PRETTY COLORS! (ANSI escape codes for text colorifcation)
  const COLOR_BLACK = ""\u001b[30m""; 
  const COLOR_RED = ""\u001b[31m""; 
  const COLOR_GREEN = ""\u001b[32m""; 
  const COLOR_YELLOW = ""\u001b[33m""; 
  const COLOR_BLUE = ""\u001b[34m""; 
  const COLOR_MAGENTA = ""\u001b[35m""; 
  const COLOR_CYAN = ""\u001b[36m""; 
  const COLOR_WHITE = ""\u001b[37m""; 
  const COLOR_RESET = ""\u001b[0m"";

  // HARD CONSTANTS
  
  const STORAGE_USED_BEFORE_UPGRADE = 0.85;

  const USEFUL_MATERIAL_STORAGE_RATIO = 0.75;

  const SPENDING_MODIFIER = .1;

  const INDUSTRY_NAMES = [""Agriculture"", ""Chemical"", ""Computer Hardware"", ""Fishing"", ""Healthcare"", ""Mining"", ""Pharmaceutical"", ""Real Estate"", ""Refinery"", ""Restaurant"", ""Robotics"", ""Software"", ""Spring Water"", ""Tobacco"", ""Water Utilities""]

  const MATERIALS = [""Water"", ""Food"", ""Plants"", ""Chemicals"", ""Ore"", ""Hardware"", ""Metal"", ""Robots"", ""AI Cores"", ""Drugs"", ""Minerals""];

  const MATERIAL_FACTORS = [""realEstateFactpr"", ""hardwareFactor"", ""robotFactor"", ""aiCoreFactor""];

  const UNLOCKS = [""Export"", ""Market Research - Demand"", ""Market Data - Competition"", ""VeChain"", ""Shady Accounting"",""Government Partnership""];

  const UPGRADES = [""Smart Factories"", ""Smart Storage"", ""DreamSense"", ""Wilson Analytics"", ""Nuoptimal Nootropic Injector Implants"", ""Speech Processor Implants"", ""Neural Accelerators"", ""FocusWires"", ""ABC SalesBots"", ""Project Insight""];

  const EMPLOYEE_POSITIONS = [""Operations"", ""Engineer"", ""Business"", ""Management"", ""Research & Development"", ""Intern""];

  const CITIES = [""Aevum"", ""Chongqing"", ""Sector-12"", ""New Tokyo"", ""Ishima"", ""Volhaven""];

  // SETUP
  // staging flags - assume stage one by default
  let STAGE1 = true; 
  let STAGE2 = false; let STAGE3 = false; let STAGE4 = false;

  const DEBUGFLAG = ns.args.includes('-d');

  // initialize and set SLEEP_TIMER based on bonus time
  let SLEEP_TIMER = 1000 * 9.1;
  async function relcalculateSleepTimer(){
    let remainingBonusTime = await easyRun(ns, ""corporation/getBonusTime"");
    if (remainingBonusTime > 1000){ SLEEP_TIMER = 910}
    else if (DEBUGFLAG) {SLEEP_TIMER = 29*1000}
    else {SLEEP_TIMER = 9.1 * 1000}
    return;
  }

  await relcalculateSleepTimer();

  async function synchronizeToCorpUpdates(){
    let corpData = await easyRun(ns, ""corporation/getCorporation"");
    // if called while ALREADY in 'synch cycle', wait until we exit it.
    while (corpData.prevState === ""PRODUCTION""){
      await ns.sleep(100);
      corpData = await easyRun(ns, ""corporation/getCorporation"");
    }
    // wait until we reach the sync cycle
    while (corpData.prevState !== ""PRODUCTION""){
      await ns.sleep(100);
      corpData = await easyRun(ns, ""corporation/getCorporation"");
    }
    await relcalculateSleepTimer(); 
  }

  async function getCorpFunds(){
    let corpData = await easyRun(ns, ""corporation/getCorporation"");
    return corpData.funds;
  }

  //  IF NO CORP, AND HAVE MONEY, MAKE CORP
  let hasCorporation = await easyRun(ns, ""corporation/hasCorporation"");
  let playerData = await easyRun(ns, ""ns/getPlayer"");
  if (!hasCorporation && playerData.money > 150000000000) {
    await easyRun(ns, ""corporation/createCorporation"", ""Aphelion"", true);
    ns.toast(""Created new corporation: Aphelion!"", ""success"", 5000);
    //await ns.sleep(5000);
  }

  let counter = 0;
  let corporationData = await easyRun(ns, ""corporation/getCorporation"");
  let corporationIncome = corporationData.revenue - corporationData.expenses;

  let investmentOffer = await easyRun(ns, ""corporation/getInvestmentOffer"");
  let investmentRound = investmentOffer.round;

  // these comparisons are only for initial run of the script, restarting into appropriate stage 
  if(corporationIncome >= 1000000000 || investmentRound >= 4){ // if we making BANK or 4 investment rounds deep, skip to stage 4
    STAGE1 = false;
    STAGE4 = true;
  } else if (investmentRound == 3){ // if we are on investment round 3...
    STAGE1 = false;
    STAGE3 = true;
  } else if (investmentRound == 2){ // if we are on investment round 2...
    STAGE1 = false;
    STAGE2 = true;
  }

  //ns.print(`STAGE1: ${STAGE1}, STAGE2: ${STAGE2}, STAGE3: ${STAGE3}, STAGE4:${STAGE4}`)
  //ns.tprint(`STAGE1: ${STAGE1}, STAGE2: ${STAGE2}, STAGE3: ${STAGE3}, STAGE4:${STAGE4}`)
  //await ns.sleep(5000);

  //  STAGE 1: Agriculture - 0-2m/s, funding round 0 -> 1
  if (STAGE1) {
  // agri div initialization logic
  const haveAgriDiv = (await easyRun(ns, ""corporation/getCorporation"")).divisions.includes(""APH-Agri"");
  
  let corpFunds;
  let divisionName = ""APH-Agri"";

  if (!haveAgriDiv){
    ns.toast(""ENTERING CORPORATION DEVELOPMENT STAGE 1: AGRICULTURE!"", ""info"", SLEEP_TIMER)
    //await ns.sleep(1000*10);


    // ------------------------------- initialization -----------------------------
    // Expand into Agriculture
    await easyRun(ns, ""corporation/expandIndustry"", ""Agriculture"", divisionName); 
    ns.toast(""STAGE1: Expanded corporation into an Agriculture division!"", ""success"", SLEEP_TIMER);
    ns.print(""Expanded corporation into an Agriculture division!"");
    // Setup in each city
    for (const city of CITIES) {
      // Expand division into city
      await easyRun(ns, ""corporation/expandCity"", divisionName, city);
      ns.print(`Expanded ${divisionName} into ${city}`);
      // Purchase and setup warehouse
      await easyRun(ns, ""corporation/purchaseWarehouse"", divisionName, city);
      await easyRun(ns, ""corporation/upgradeWarehouse"", divisionName, city, 5);
      corpFunds = await getCorpFunds();
      ns.print(`Purchased and upgraded warehouse, corp funds:${ns.formatNumber(corpFunds)}!`);
      // Hire employees and assign to Research & Development
      let officeData = await easyRun(ns, ""corporation/getOffice"", divisionName, city);
      let positionsToFill = officeData.size - officeData.numEmployees;
      for (let i = 0; i < positionsToFill; ++i) {
        await easyRun(ns, ""corporation/hireEmployee"", divisionName, city);
      }
      officeData = await easyRun(ns, ""corporation/getOffice"", divisionName, city);
      let numEmployees = officeData.numEmployees;
      await easyRun(ns, ""corporation/setAutoJobAssignment"", divisionName, city, ""Research & Development"", numEmployees);
    }
    ns.toast(""STAGE1: Purchased and upgraded warehouses, and hired employees!"", ""success"", SLEEP_TIMER);
    corpFunds = await getCorpFunds();
    ns.print(`Purchased and upgraded warehouses, corp funds:${ns.formatNumber(corpFunds)}!`);

    // Upgrade Smart Storage 
    for (let i = 0; i < 9; ++i) { await easyRun(ns, ""corporation/levelUpgrade"", ""Smart Storage""); }
    ns.toast(""STAGE1: Purchased Smart Storage!"", ""success"", SLEEP_TIMER);
    corpFunds = await getCorpFunds();
    ns.print(`Purchased Smart Storage x9, corp funds:${ns.formatNumber(corpFunds)}!`); 
    for (let i = 0; i < 2; ++i) { await easyRun(ns, ""corporation/hireAdVert"", divisionName); }
    ns.toast(""STAGE1: Purchased 2 AdVerts!"", ""success"", SLEEP_TIMER);
    ns.print(""Purchased 2 AdVerts!"");
    // emnployee statuses...
    let notAllOfficesEnergized = true; let notAllOfficesHappy = true;
    ns.print(""Buying tea and throwing parties."");
    while (notAllOfficesEnergized || notAllOfficesHappy) {
      notAllOfficesEnergized = false; notAllOfficesHappy = false;
      for (const city of CITIES) {
        let officeData = await easyRun(ns, ""corporation/getOffice"", divisionName, city);
        if (officeData.avgEnergy < 95) { notAllOfficesEnergized = true; await easyRun(ns, ""corporation/buyTea"", divisionName, city); }
        if (officeData.avgMorale < 95) { notAllOfficesHappy = true; await easyRun(ns, ""corporation/throwParty"", divisionName, city, 1e6); }
      }
      await relcalculateSleepTimer();
      await ns.sleep(SLEEP_TIMER);
    }
    ns.toast(""STAGE1: Subdivisions energized and happy!"", ""success"", SLEEP_TIMER);
    ns.print(""Subdivisions energized and happy!"");
    // Wait for more research points to accumulate
    let divisionData = await easyRun(ns, ""corporation/getDivision"", divisionName);
    let researchTarget = 200;
    let notEnoughResearch = divisionData.researchPoints < researchTarget;
    while (notEnoughResearch) {
      ns.print(`Waiting for research points to accumulate: ${ns.formatNumber(divisionData.researchPoints, 1)} of ${researchTarget}`);
      await relcalculateSleepTimer();
      await ns.sleep(3*SLEEP_TIMER);
      divisionData = await easyRun(ns, ""corporation/getDivision"", divisionName);
      notEnoughResearch = divisionData.researchPoints < researchTarget;
    }
    ns.toast(""STAGE1: Accumulated 100 research points!"", ""success"", SLEEP_TIMER);
    ns.print(""Accumulated 100 research points!"");
    // reassign employees
    for (const city of CITIES) { await easyRun(ns, ""corporation/setAutoJobAssignment"", divisionName, city, ""Research & Development"", 0); }
    //------------------------------- end initialization block --------------------------------------------
  }
  // stage 1 maintenance loop
    // main loop
    // purchaseUsefulItems() WILL send corp into debt
    let haveNotInvested = true;
    while(haveNotInvested){
      ns.toast(""STAGE1: Waiting for sufficient investment offer!"", ""info"", SLEEP_TIMER);
      ns.print(`\n${COLOR_CYAN}STAGE 1: Looping... ${counter++}`);
      ns.print(""Waiting for investment!"");
      let investmentOffer = await easyRun(ns, ""corporation/getInvestmentOffer"");
      corpFunds = await getCorpFunds();
      let postInvestmentFunds = corpFunds + investmentOffer.funds
      ns.print(`Investment offer: ${ns.formatNumber(investmentOffer.funds, 2)}, post-investment funds: ${ns.formatNumber(postInvestmentFunds, 2)}, investment round: ${investmentOffer.round}`);

      if(postInvestmentFunds >= 435e9){
        await easyRun(ns, ""corporation/acceptInvestmentOffer"");
        STAGE1 = false;
        STAGE2 = true;
        await cancelAllBuys();
        await cancelAllExports();
        await cancelAllSells();
        break;
      }

      await manageEmployees();
      await manageMaterials();
      await purchaseUsefulItems();
      await synchronizeToCorpUpdates();
    }

    ns.toast(""STAGE1: Took investment offer! "", ""success"", 20*1000);
    corpFunds = await getCorpFunds();
    ns.print(""Took investment offer! Corp funds: ""+ corpFunds);

    // Buy 6 more adverts for a total of 8
    for (let i = 0; i < 6; ++i) { 
      await easyRun(ns, ""corporation/hireAdVert"", divisionName); 
      corpFunds = await getCorpFunds();
      ns.print(`Remaining funds after buying advert ${i+1}: ${ns.formatNumber(corpFunds, 2)}`)
    }

    // complete agriculture buildout, and set all emplyoees to R&D
    for (const city of CITIES){
      ns.print(`In City ${city}`)
      // upgrade warehouses
      await easyRun(ns, ""corporation/upgradeWarehouse"", divisionName, city, 9);
      let corpFunds = await getCorpFunds();
      ns.print(`  Remaining funds after warehouse upgrades: ${ns.formatNumber(corpFunds, 2)}`)

      // reset employees
      for (const position of EMPLOYEE_POSITIONS){ await easyRun(ns, ""corporation/setAutoJobAssignment"", divisionName, city, position, 0); }

      // Expand offices
      await easyRun(ns, ""corporation/upgradeOfficeSize"", divisionName, city, 3);
      corpFunds = await getCorpFunds();
      ns.print(`  Remaining funds after expanding office: ${ns.formatNumber(corpFunds, 2)}`)

      // Hire employees, and assign to Research & Development
      let officeData = await easyRun(ns, ""corporation/getOffice"", divisionName, city);
      let positionsToFill = officeData.size - officeData.numEmployees;
      for (let i = 0; i < positionsToFill; ++i) { await easyRun(ns, ""corporation/hireEmployee"", divisionName, city); }
      officeData = await easyRun(ns, ""corporation/getOffice"", divisionName, city);
      await easyRun(ns, ""corporation/setAutoJobAssignment"", divisionName, city, ""Research & Development"", officeData.numEmployees);
    }

    corpFunds = await getCorpFunds();
    ns.print(`Agriculture buildout completed! Moving into STAGE2 with ${ns.formatNumber(corpFunds, 2)}`);
  }// END STAGE 1 ---------------------------------------------------------------------
  
  
  
// STAGE 2: Chemical - 2.5m-3.5m, funding round 1->2
// using investment funds to grow profit
  if (STAGE2){
  // stage 2 initialization logic...
  let divisionName = ""APH-Chem"";
  const haveChemDiv = (await easyRun(ns, ""corporation/getCorporation"")).divisions.includes(divisionName);
  let corpFunds;
  if (!haveChemDiv){
    ns.toast(""ENTERING CORPORATION DEVELOPMENT STAGE 2: CHEMICALS!"", ""info"", 10000);

    // Expand into Chemical
    await easyRun(ns, ""corporation/expandIndustry"", ""Chemical"", divisionName);
    corpFunds = await getCorpFunds();
    ns.print(`Remaining funds after expanding into Chemical: ${ns.formatNumber(corpFunds, 2)}`)

    // corporation unlock: Export
    await easyRun(ns, ""corporation/purchaseUnlock"", ""Export"");
    corpFunds = await getCorpFunds();
    ns.print(`Remaining funds after unlocking Exports: ${ns.formatNumber(corpFunds, 2)}`)

    // Upgrade Smart Storage 
    for (let i = 0; i < 16; ++i) {
      await easyRun(ns, ""corporation/levelUpgrade"", ""Smart Storage""); // bring smart storage to level 25
      await easyRun(ns, ""corporation/levelUpgrade"", ""Smart Factories""); // bring smart factories to level 16
    }
    corpFunds = await getCorpFunds();
    ns.print(`Remaining funds after upgrading Smart Storage and Smart Factories: ${ns.formatNumber(corpFunds, 2)}`)

    // Setup in each city
    for (const city of CITIES) {
      // Expand division into city
      await easyRun(ns, ""corporation/expandCity"", divisionName, city);
      ns.print(`Expanded ${divisionName} into ${city}`);

      // Purchase and initial upgrade warehouse
      await easyRun(ns, ""corporation/purchaseWarehouse"", divisionName, city);
      await easyRun(ns, ""corporation/upgradeWarehouse"", divisionName, city, 2);
      
      corpFunds = await getCorpFunds();
      ns.print(`Remaining funds after purchasing & upgrading ${city} warehouse: ${ns.formatNumber(corpFunds, 2)}`)

      // Hire employees
      const officeData1 = await easyRun(ns, ""corporation/getOffice"", divisionName, city);
      //ns.print(`officeData1: ${JSON.stringify(officeData1)}`)
      let positionsToFill = officeData1.size - officeData1.numEmployees;
      for (let i = 0; i < positionsToFill; ++i) {
        await easyRun(ns, ""corporation/hireEmployee"", divisionName, city);
      }

      const officeData2 = await easyRun(ns, ""corporation/getOffice"", divisionName, city);
      //ns.print(`officeData2: ${JSON.stringify(officeData2)}`)
      let employeeCount = officeData2.numEmployees
      //ns.print(""employeeCount: ""+employeeCount)
      await easyRun(ns, ""corporation/setAutoJobAssignment"", divisionName, city, ""Research & Development"", officeData2.numEmployees);
    }

    // increase energy and morale
    let notAllOfficesEnergized = true; let notAllOfficesHappy = true;
    while (notAllOfficesEnergized || notAllOfficesHappy) {
      notAllOfficesEnergized = false; notAllOfficesHappy = false;
      let corpData = await easyRun(ns, ""corporation/getCorporation"");
      for(const division of corpData.divisions){
        for (const city of CITIES) {
          let officeData = await easyRun(ns, ""corporation/getOffice"", division, city);
          if (officeData.avgEnergy < 99) { notAllOfficesEnergized = true; await easyRun(ns, ""corporation/buyTea"", division, city); }
          if (officeData.avgMorale < 99) { notAllOfficesHappy = true;await easyRun(ns, ""corporation/throwParty"", division, city, 1e6); }
        }
      }
      ns.print(""Waiting for energy & morale..."" + counter++) 
      await relcalculateSleepTimer();
      await ns.sleep(SLEEP_TIMER);
    }// energy and morale above 97%

    // wait for reserach to build up
    let agriData = await easyRun(ns, ""corporation/getDivision"", ""APH-Agri"");
    let notEnoughAgriResearch = agriData.researchPoints < 600;

    let chemData = await easyRun(ns, ""corporation/getDivision"", ""APH-Chem"");
    let notEnoughChemResearch = chemData.researchPoints < 400;
    while (notEnoughAgriResearch || notEnoughChemResearch){
      ns.print(`${COLOR_CYAN}Waiting for research points... ${counter++}${COLOR_RESET}`)
      agriData = await easyRun(ns, ""corporation/getDivision"", ""APH-Agri"");
      notEnoughAgriResearch = agriData.researchPoints < 600;

      chemData = await easyRun(ns, ""corporation/getDivision"", ""APH-Chem"");
      notEnoughChemResearch = chemData.researchPoints < 400;
      ns.print(`Agri research: ${ns.formatNumber(agriData.researchPoints,1)}, Chem research: ${ns.formatNumber(chemData.researchPoints,1)}`);
      await relcalculateSleepTimer();
      await ns.sleep(3*SLEEP_TIMER);
    }// sufficient research; return to normal operations

    // reassign employees
    for (const city of CITIES){
      await easyRun(ns, ""corporation/setAutoJobAssignment"", ""APH-Agri"", city, ""Research & Development"", 0);
      await easyRun(ns, ""corporation/setAutoJobAssignment"", ""APH-Agri"", city, ""Operations"", 2);
      await easyRun(ns, ""corporation/setAutoJobAssignment"", ""APH-Agri"", city, ""Engineer"", 1);
      await easyRun(ns, ""corporation/setAutoJobAssignment"", ""APH-Agri"", city, ""Business"", 2);
      await easyRun(ns, ""corporation/setAutoJobAssignment"", ""APH-Agri"", city, ""Management"", 1);

      await easyRun(ns, ""corporation/setAutoJobAssignment"", ""APH-Chem"", city, ""Research & Development"", 0);
      await easyRun(ns, ""corporation/setAutoJobAssignment"", ""APH-Chem"", city, ""Operations"", 1);
      await easyRun(ns, ""corporation/setAutoJobAssignment"", ""APH-Chem"", city, ""Engineer"", 1);
      await easyRun(ns, ""corporation/setAutoJobAssignment"", ""APH-Chem"", city, ""Business"", 1);
    }
  }
  // stage 2 maintenance loop
    //  while (have not taken investment offer)
    //  probably go into debt on this stage, too
    let haveNotInvested = true;
    while(haveNotInvested){
      ns.print(`\n${COLOR_CYAN}STAGE 2: Looping... ${counter++}`);
      await manageEmployees();
      await manageMaterials();
      await purchaseUsefulItems();
      let investmentOffer = await easyRun(ns, ""corporation/getInvestmentOffer"");
      let bitnodeMultis = await easyRun(ns, ""ns/getBitNodeMultipliers"");
      let corpValuationModifier = bitnodeMultis.CorporationValuation;
      let modifiedInvestmentTarget = 9e12*corpValuationModifier;
      modifiedInvestmentTarget = Math.max(modifiedInvestmentTarget, 3e12); // AT LEAST 3 trillion (need money for buildout)
      ns.print(`Investment offer: ${ns.formatNumber(investmentOffer.funds, 2)}, investment target: ${ns.formatNumber(modifiedInvestmentTarget, 2)}, investment round: ${investmentOffer.round}`);

      // tobacco buildout is expensive, but only a few trillion. (may run into issues in some BNs with exceptionally low evaluations?)
      if(investmentOffer.funds >= modifiedInvestmentTarget){
        await easyRun(ns, ""corporation/acceptInvestmentOffer"");
        haveNotInvested = false;
        STAGE2 = false;
        STAGE3 = true;
        await cancelAllBuys();
        await cancelAllExports();
        await cancelAllSells();
      }
      await synchronizeToCorpUpdates();
    }
    ns.toast(""STAGE2: Investment taken! Moving to STAGE3!"", ""success"", SLEEP_TIMER);
    corpFunds = await getCorpFunds();
    ns.print(""Moving to STAGE3! Corp funds: "" + ns.formatNumber(corpFunds,2));
  }// END STAGE 2 ---------------------------------------------------------------------
  
  
    
// STAGE THREE: BUILD Tobacco
  let corpFunds = await getCorpFunds();
  let immediatelyPostInvestment = corpFunds > 3e12
  if(STAGE3 && immediatelyPostInvestment){
    ns.toast(""ENTERING CORPORATION DEVELOPMENT STAGE 3: TOBACCO!"", ""info"", 10000)
    //await ns.sleep(1000*10);
    let divisionName = ""APH-Tobacco"";
    let productName = ""SmokEmsV1""

    // Expand into Tobacco
    await easyRun(ns, ""corporation/expandIndustry"", ""Tobacco"", divisionName);

    // Setup in each city
    for (const city of CITIES) {
      // Expand division into city
      await easyRun(ns, ""corporation/expandCity"", divisionName, city);
      ns.print(`Expanded ${divisionName} into ${city}`);

      // Purchase and setup warehouse
      await easyRun(ns, ""corporation/purchaseWarehouse"", divisionName, city);

      // Expand the offices
      await easyRun(ns, ""corporation/upgradeOfficeSize"", divisionName, city, 30);
      
      // Hire employees
      let officeData = await easyRun(ns, ""corporation/getOffice"", divisionName, city);
      let positionsToFill = officeData.size - officeData.numEmployees;
      for (let i = 0; i < positionsToFill; ++i) {
        await easyRun(ns, ""corporation/hireEmployee"", divisionName, city);
      }
    }

    await manageEmployees();

    let notAllOfficesEnergized = true;
    let notAllOfficesHappy = true;
    let corpData = await easyRun(ns, ""corporation/getCorporation"");

    //  increase morale & energy
    while (notAllOfficesEnergized || notAllOfficesHappy) {
      notAllOfficesEnergized = false; notAllOfficesHappy = false;

      let corpData = await easyRun(ns, ""corporation/getCorporation"");
      for(const division of corpData.divisions){
        for (const city of CITIES) {
          let officeData = await easyRun(ns, ""corporation/getOffice"", division, city);

          // Check and improve energy
          if (officeData.avgEnergy < 95) {
            notAllOfficesEnergized = true;
            ns.print(""Low energy in "" + division + ""-"" + city + "", buying tea."");
            let purchasedTea = await easyRun(ns, ""corporation/buyTea"", division, city);
            if (purchasedTea) { ns.print(""Successfully purchased tea.""); }
            else { ns.print(COLOR_YELLOW + ""Too poor for tea time."" + COLOR_RESET); }
          }
          // Check and improve morale
          if (officeData.avgMorale < 95) {
            notAllOfficesHappy = true;
            let corpData = await easyRun(ns, ""corporation/getCorporation""); let corpCash = corpData.funds;
            let spendPerEmployee = 1e6;
            ns.print(""Low morale in "" + division + ""-"" + city + "", throwing party."");
            let moraleImprovement = await easyRun(ns, ""corporation/throwParty"", division, city, spendPerEmployee);
            ns.print(""Morale increased by "" + moraleImprovement.toFixed(2) + ""%"");
          }
        }
      }
      // Wait before the next iteration
      await relcalculateSleepTimer();
      await ns.sleep(SLEEP_TIMER);
    }

    // create an initial product
    await easyRun(ns, ""corporation/makeProduct"", divisionName, ""Sector-12"", productName, 1e9, 1e9);
    
    //  purchase as many 'wilson analytics' as possible
    corpData = await easyRun(ns, ""corporation/getCorporation"");
    let corpFunds = corpData.funds;
    let wilsonPrice = await easyRun(ns, ""corporation/getUpgradeLevelCost"", ""Wilson Analytics"");
    while (corpFunds > wilsonPrice){
      await easyRun(ns, ""corporation/levelUpgrade"", ""Wilson Analytics"");
      corpFunds -= wilsonPrice
      wilsonPrice = await easyRun(ns, ""corporation/getUpgradeLevelCost"", ""Wilson Analytics"");
      await ns.sleep(25);
    }
    // one dreamsense, to ensure numbers WILL go up (eventually)
    await easyRun(ns, ""corporation/levelUpgrade"", ""DreamSense"");

    // waste some money on unlockables
    await getUnlockables();

    await advertDivisions();

    ns.toast(""STAGE3: Tobacco buildout complete! Moving to STAGE4: Infinite growth!"", ""success"", 5*SLEEP_TIMER);
    corpFunds = await getCorpFunds();
    ns.print(""Moving to STAGE4! Corp funds: "" + corpFunds);
    STAGE3 = false;
    STAGE4 = true;

  } else if (STAGE3){STAGE3 = false; STAGE4 = true; }
  // END STAGE 3 ---------------------------------------------------------------------


// STAGE FOUR: TO INFINITY!
//  if we get here, we should have enough profit (>1b/s) OR a completed three-division buildout, so we can spend without worry!
//  (functions have targeted ratios to encourage spending in the right places first)
  ns.toast(""ENTERING CORPORATION STAGE 4: INFINITE GROWTH!"", ""info"", 10000)
  ns.print(""ENTERING CORPORATION STAGE 4: INFINITE GROWTH!"")
  await ns.sleep(1000*10);
  while (STAGE4) {
    
    ns.print(""\n\n\n\n"");
        
    ns.print(`${COLOR_CYAN}Managing products...${COLOR_RESET}`);
    await manageProducts();

    ns.print(`${COLOR_CYAN}Advertising divisions...${COLOR_RESET}`);
    await advertDivisions();

    ns.print(`${COLOR_CYAN}Upgrading corporation...${COLOR_RESET}`);
    await upgragradeCorporation();
    
    ns.print(`${COLOR_CYAN}Managing materials...${COLOR_RESET}`);
    await manageMaterials();

    ns.print(`${COLOR_CYAN}Expanding divisions...${COLOR_RESET}`);
    await expandDivisions(); 
    
    ns.print(`${COLOR_CYAN}Purchasing any needed warehouses...${COLOR_RESET}`);
    await purchaseDivisionWarehouses();

    ns.print(`${COLOR_CYAN}Upgrading storages...${COLOR_RESET}`);
    await upgradeStorage();

    ns.print(`${COLOR_CYAN}Upgrading subdivisions...${COLOR_RESET}`);
    await upgradeSubdivisions();

    ns.print(`${COLOR_CYAN}Manging employees...${COLOR_RESET}`);
    await manageEmployees();

    ns.print(`${COLOR_CYAN}Purchasing useful items...${COLOR_RESET}`);
    await purchaseUsefulItems();

    ns.print(`${COLOR_CYAN}Handling research upgrades...${COLOR_RESET}`);
    await unlockResearch();

    //Round 3 & 4 investment handling.
    let investmentOffer = await easyRun(ns, ""corporation/getInvestmentOffer"");
    if (investmentOffer !== undefined && investmentOffer !== null){
      let bitnodeMultis = await easyRun(ns, ""ns/getBitNodeMultipliers"");
      let corpValuationModifier = bitnodeMultis.CorporationValuation;
      let investmentRound = investmentOffer.round;
      let investmentGoal;

      if (investmentRound === 3){
        let baseRound3Investment = 1e15; // 1 quad
        let round3InvestmentGoal = baseRound3Investment * corpValuationModifier;
        investmentGoal = round3InvestmentGoal;
        if(investmentOffer.funds >= round3InvestmentGoal){
          await easyRun(ns, ""corporation/acceptInvestmentOffer"");
        }
      }
      if(investmentRound === 4){
        let baseRound4Investment = 1e18; // 1 Quint
        let round4InvestmentGoal = baseRound4Investment * corpValuationModifier;
        investmentGoal = round4InvestmentGoal;
        if(investmentOffer.funds >= round4InvestmentGoal){
          await easyRun(ns, ""corporation/acceptInvestmentOffer"");
        }
        await easyRun(ns, ""corporation/goPublic"", 0);
        await easyRun(ns, ""corporation/issueDividends"", 0.01);
      }
      ns.print(`  Investment offer: ${ns.formatNumber(investmentOffer.funds,2)}, goal: ${ns.formatNumber(investmentGoal,2)}`)
    }
    
    await profitReport(); // display a report on corp
    await relcalculateSleepTimer();
    await synchronizeToCorpUpdates();
    
  } // ---------------------------------- END OF WHILE -----------------------------------



  async function profitReport(){
    // a counter, and profit report
    ns.print(COLOR_CYAN + ""Looping away the day...           "" + counter++ + COLOR_RESET);
    let corporationData = await easyRun(ns, ""corporation/getCorporation"");
    let corporationProfit = corporationData.revenue - corporationData.expenses;
    let profitSign = corporationProfit>0 ? (COLOR_RESET + COLOR_GREEN + ""+""):(COLOR_RESET + COLOR_RED + """");
    ns.print(`${COLOR_CYAN}Company funds: ${""$""}${ns.formatNumber(corporationData.funds, 2)} (${profitSign}${ns.formatNumber(corporationProfit,2)}/s${COLOR_RESET}${COLOR_CYAN})${COLOR_RESET}`);
    if (corporationProfit > 0) { ns.toast(""Corporation profit: ""+ns.formatNumber(corporationProfit, 2), ""success"", SLEEP_TIMER) }
    else { ns.toast(""Corporation profit: ""+ns.formatNumber(corporationProfit,2), ""warning"", SLEEP_TIMER) }
  }


  async function unlockResearch(){
    const corporationData = await easyRun(ns, ""corporation/getCorporation"");
    const corporationDivisions = corporationData.divisions;

    const RESEARCH_UPGRADES = 
      [""Hi-Tech R&D Laboratory"",            // 0
        ""AutoBrew"",                         // 1
        ""AutoPartyManager"",                 // 2
        ""Automatic Drug Administration"",    // 3
          ""CPH4 Injections"",                // 4
          ""Go-Juice"",                       // 5
        ""Drones"",                           // 6
          ""Drones - Assembly"",              // 7
          ""Drones - Transport"",             // 8
        ""Market-TA.I"",                      // 9
          ""Market-TA.II"",                   // 10
        ""Overclock"",                        // 11
          ""Sti.mu"",                         // 12
        ""Self-Correcting Assemblers""]       // 13

    const PRODUCT_RESERACH_UPGRADES = [
      ""uPgrade: Fulcrum"",           // 0
        ""uPgrade: Capacity.I"",      // 1
          ""uPgrade: Capacity.II"",   // 2
        ""uPgrade: Dashboard""];      // 3

    async function unlockResearchUpgrade(division, upgradeName){
      const haveUpgrade = await easyRun(ns, ""corporation/hasResearched"", division.name, upgradeName);
      if (haveUpgrade) return [true, division];
      const divisionResearch = division.researchPoints;
      const upgradeCost = await easyRun(ns, ""corporation/getResearchCost"", division.name, upgradeName);
      if (upgradeCost < divisionResearch/2) { 
        ns.print(`  Unlocking ${upgradeName} for ${division.name}`)
        await easyRun(ns, ""corporation/research"", division.name, upgradeName);
        division = await easyRun(ns, ""corporation/getDivision"", division.name);
        return [true, division]; 
      } else { return [false, division]; }
    }

    for( const divisionName of corporationDivisions){
      let divisionData = await easyRun(ns, ""corporation/getDivision"", divisionName);
      let haveRnDLab; [haveRnDLab, divisionData] = await unlockResearchUpgrade(divisionData, RESEARCH_UPGRADES[0]);
      if (haveRnDLab){
        let _;
        [_,divisionData] = await unlockResearchUpgrade(divisionData, RESEARCH_UPGRADES[1]);
        [_,divisionData] = await unlockResearchUpgrade(divisionData, RESEARCH_UPGRADES[2]);
        let haveAutoDrugAdmin; [haveAutoDrugAdmin, divisionData] = await unlockResearchUpgrade(divisionData, RESEARCH_UPGRADES[3]);
        if (haveAutoDrugAdmin){
          [_,divisionData] = await unlockResearchUpgrade(divisionData, RESEARCH_UPGRADES[4]);
          [_,divisionData] = await unlockResearchUpgrade(divisionData, RESEARCH_UPGRADES[5]);
        }
        let haveDrones; [haveDrones, divisionData] = await unlockResearchUpgrade(divisionData, RESEARCH_UPGRADES[6]);
        if (haveDrones){
          [_,divisionData] = await unlockResearchUpgrade(divisionData, RESEARCH_UPGRADES[7]);
          [_,divisionData] = await unlockResearchUpgrade(divisionData, RESEARCH_UPGRADES[8]);
        }
        let haveTAI; [haveTAI, divisionData] = await unlockResearchUpgrade(divisionData, RESEARCH_UPGRADES[9]);
        if (haveTAI){ 
          [_,divisionData] = await unlockResearchUpgrade(divisionData, RESEARCH_UPGRADES[10]);
        }
        let haveOverclock; [haveOverclock, divisionData] = await unlockResearchUpgrade(divisionData, RESEARCH_UPGRADES[11]);
        if (haveOverclock){ 
          [_,divisionData] = await unlockResearchUpgrade(divisionData, RESEARCH_UPGRADES[12]);
        }
        [_,divisionData] = await unlockResearchUpgrade(divisionData, RESEARCH_UPGRADES[13]);
        [_,divisionData] = await unlockResearchUpgrade(divisionData, RESEARCH_UPGRADES[11]);

        if (divisionData.makesProducts){
          let haveFulcrum; [haveFulcrum, divisionData]  = await unlockResearchUpgrade(divisionData, PRODUCT_RESERACH_UPGRADES[0]);
          if (haveFulcrum){
            let haveCapacityI; [haveCapacityI,divisionData] = await unlockResearchUpgrade(divisionData, PRODUCT_RESERACH_UPGRADES[1]);
            if (haveCapacityI){
              [_,divisionData] = await unlockResearchUpgrade(divisionData, PRODUCT_RESERACH_UPGRADES[2]);
            }
            [_,divisionData] = await unlockResearchUpgrade(divisionData, PRODUCT_RESERACH_UPGRADES[3]);
          }
        }
      }
      
      // ELSE
        // 
    }
    

  }
    



  async function expandDivisions() {
    let corpData = await easyRun(ns, ""corporation/getCorporation"");
    let corporationDivisions = corpData.divisions;
    //ns.print(""expandDivisions corporationDivisions:"" + corporationDivisions);
    for (let divisionName of corporationDivisions) {
      let divisionData = await easyRun(ns, ""corporation/getDivision"", divisionName);
      //ns.print(""Checking if we can expand division "" + divisionName +""..."")
      for (let city of CITIES) {
        // Check if the division is not in the city and if expansion is affordable
        if (!divisionData.cities.includes(city) && await corpData.funds >= 4000000000) {
          try { 
            await easyRun(ns, ""corporation/expandCity"", divisionName, city);
            ns.print(`Expanded ${divisionName} into ${city}.`);
            purchaseDivisionWarehouses(divisionName);
          } catch (error) {
            ns.print(`Error expanding ${divisionName} into ${city}: ${error}`);
          }
        }
      }
    }
  }//------------------------------------------------------------------------



  async function purchaseDivisionWarehouses() {
    let corpData = await easyRun(ns, ""corporation/getCorporation"");
    
    let corporationDivisions = corpData.divisions;

    for (let divisionName of corporationDivisions) {
      let divisionData = await easyRun(ns, ""corporation/getDivision"", divisionName);
      let divisionCites = divisionData.cities
      for (let city of divisionCites) {
        let warehouseInSubdiv = await easyRun(ns, ""corporation/hasWarehouse"", divisionData.name, city);
        if (!warehouseInSubdiv && corpData.funds >= 5000000000) {
          try {  
            await easyRun(ns, ""corporation/purchaseWarehouse"", divisionData.name, city);
            ns.print(`Purchased warehouse for ${divisionName} in ${city}.`);
          } catch (error) {
            ns.print(`Error purchasing warehouse for ${divisionName} in ${city}: ${error}`);
          }
        }
      }
    }
  }//------------------------------------------------------------------------



  async function upgragradeCorporation(){
    await getUnlockables();
    await getUpgradables();
    return;
  } //------------------------------------------------------------------------
  async function getUnlockables(){
    let availableFunds = await getCorpFunds();

    // Purchase one-time unlocks if affordable
    for (let unlockable of UNLOCKS) {
      let unlockCost = await easyRun(ns, ""corporation/getUnlockCost"", unlockable);
      let dontHaveUnlock = !(await easyRun(ns, ""corporation/hasUnlock"", unlockable));
      if (availableFunds/10 >= unlockCost && dontHaveUnlock) {
        ns.print(""Purchasing unlock: "" + unlockable);
        await easyRun(ns, ""corporation/purchaseUnlock"", unlockable).catch((error) => ns.print(error));
        availableFunds -= unlockCost; // Update available funds
        ns.print(""Purchased "" + unlockable + ""!"");
        ns.toast(""Purchased "" + unlockable + ""!"", ""success"", SLEEP_TIMER/4);
      }
    }
  }//------------------------------------------------------------------------
  async function getUpgradables(){
    let availableFunds = await getCorpFunds();

    async function getLeastExpensiveUpgrade(){
      let lowestPrice = 999e99;
      for (let upgradable of UPGRADES) {
        let upgradeCost = await easyRun(ns, ""corporation/getUpgradeLevelCost"", upgradable);
        if (upgradeCost < lowestPrice) lowestPrice = upgradeCost;
      }
      return lowestPrice;
    }

    // Purchase repeatable upgrades if affordable
    let lowestUpgradeCost = await getLeastExpensiveUpgrade();
    let counter = 0;
    while (availableFunds/10 >= lowestUpgradeCost) {
      if ((counter++)%10===0) await ns.sleep(1);
      for (let upgradable of UPGRADES) {
        let upgradeCost = await easyRun(ns, ""corporation/getUpgradeLevelCost"", upgradable);
        if (availableFunds/10 >= upgradeCost) {
          //ns.print(""  Upgrading "" + upgradable + ""!"");
          //ns.toast(""  Upgrading "" + upgradable + ""!"", ""success"", SLEEP_TIMER/4);
          await easyRun(ns, ""corporation/levelUpgrade"", upgradable);
          availableFunds -= upgradeCost; // Update available funds
        }
      }
      lowestUpgradeCost = await getLeastExpensiveUpgrade();
    }
  }//---------------------------------------------------------------------------



  async function cancelAllBuys(){
    let corporationData = await easyRun(ns, ""corporation/getCorporation"");
    let corporationDivisions = corporationData.divisions;
    for (let division of corporationDivisions) {// cancel buys
      let divisionData = await easyRun(ns, ""corporation/getDivision"", division);
      let divisionCities = divisionData.cities;
      for (let city of divisionCities) {
        let subdivisionHasWarehouse = await easyRun(ns, ""corporation/hasWarehouse"", division, city);
        if (!subdivisionHasWarehouse) continue;
        for (let material of MATERIALS) {
          // Cancel buy orders
          if (DEBUGFLAG) ns.print(""Canceling buy of "" + material + "" in "" + division + "" - "" + city);
          await easyRun(ns, ""corporation/buyMaterial"", division, city, material, 0);
        }
        await easyRun(ns, ""corporation/buyMaterial"", division, city, ""Real Estate"", 0);
    } }
    return;
  }
  async function cancelAllExports(){
    let corporationData = await easyRun(ns, ""corporation/getCorporation"");
    let corporationDivisions = corporationData.divisions;
    for (let division of corporationDivisions) { // cancel sells
      let divisionData = await easyRun(ns, ""corporation/getDivision"", division);
      let divisionCities = divisionData.cities;
      for (let city of divisionCities) {
        let subdivisionHasWarehouse = await easyRun(ns, ""corporation/hasWarehouse"", division, city);
        if (!subdivisionHasWarehouse) continue;
        for (let material of MATERIALS) {
          // Cancel buy orders
          if (DEBUGFLAG) ns.print(""Canceling sell of "" + material + "" in "" + division + "" - "" + city);
          await easyRun(ns, ""corporation/sellMaterial"", division, city, material, 0, 0);
    } } }
    return;
  }
  async function cancelAllSells(){
    let corporationData = await easyRun(ns, ""corporation/getCorporation"");
    let corporationDivisions = corporationData.divisions;
    for (let division of corporationDivisions){ // cancel exports
      let divisionData = await easyRun(ns, ""corporation/getDivision"", division);
      let divisionCities = divisionData.cities;
      let divisionType = divisionData.type;
      for (let city of divisionCities) {
        let subdivisionHasWarehouse = await easyRun(ns, ""corporation/hasWarehouse"", division, city)
        if (!subdivisionHasWarehouse) continue; // skip if subdiv doesnt have a warehouse
        for (let material of MATERIALS) {
          await easyRun(ns, ""corporation/buyMaterial"", division, city, material, 0);
          for (let division2 of corporationDivisions){
            let division2Data = await easyRun(ns, ""corporation/getDivision"", division2);
            let division2Cities = division2Data.cities;
            for (let city2 of division2Cities) {            
              if (DEBUGFLAG) ns.print(""Attempting to cancel export of ""+material+"" from ""+division+"" - ""+city+"" to ""+division2+"" - ""+city2);
              await easyRun(ns, ""corporation/cancelExportMaterial"", division, city, division2, city2, material);
    } } } } }
    return;
  }



  async function manageMaterials(profitSearch = false) {
    let corporationData = await easyRun(ns, ""corporation/getCorporation"");
    let corporationDivisions = corporationData.divisions;

    await cancelAllBuys();
    await cancelAllExports();
    await cancelAllSells();

    //ns.print(""Creating supplyAndDemand object..."");
    
    let supplyAndDemand = {}; // Initialize demand tracking object
    // Calculate production amounts and populate object
    for (let division of corporationDivisions) {
      let divisionData = await easyRun(ns, ""corporation/getDivision"", division);
      let divisionType = divisionData.type;
      let industryData = await easyRun(ns, ""corporation/getIndustryData"", divisionType);
      supplyAndDemand[division] = supplyAndDemand[division] || {};
      for (let city of divisionData.cities) {
        // check if the subdivision even HAS a warehouse before proceeding further
        let subdivisionHasWarehouse = await easyRun(ns, ""corporation/hasWarehouse"", division, city);
        if (!subdivisionHasWarehouse) continue; 

        supplyAndDemand[division][city] = supplyAndDemand[division][city] || {};
        for (let material of MATERIALS) {
          // if subdivision produces any materials, does it produce the specific one we are on?
          let divisionProducesMaterial = false;
          if (industryData.producedMaterials && industryData.producedMaterials.length > 0) divisionProducesMaterial = industryData.producedMaterials.includes(material);

          let materialData = await easyRun(ns, ""corporation/getMaterial"", divisionData.name, city, material);
          // IF subdivision produces specific material we are processing, provide production OR storage amount - whatever is larger. 
          // this ensures full warehouses and stopped production DOESNT prevent exports from producers. if it does NOT produce the material, it will provide it's demand, or 0 if no demand.

          let productionAmount = materialData.productionAmount;
          // if the division demands the material
          if (productionAmount < 0 && !divisionProducesMaterial) { 
            //ns.print(`Demand for ${material} in ${division} - ${city}: ${ns.formatNumber(productionAmount,1)}`);
            supplyAndDemand[division][city][material] = productionAmount; 
            continue; 
          }

          // if the division doesnt produce AND doesnt demand or supply the material
          if (productionAmount === 0 && !divisionProducesMaterial) { 
            supplyAndDemand[division][city][material] = 0; 
            continue; 
          }

          // if the division produces the material
          if (divisionProducesMaterial){
            let storedAmount = materialData.stored/10;
            let providableAmount = Math.max(productionAmount, storedAmount);
            //ns.print(`${division} - ${city} provides: ${ns.formatNumber(providableAmount,1)}, Produces: ${ns.formatNumber(productionAmount,1)}, Stored: ${ns.formatNumber(storedAmount,1)}, `);
            
            if (providableAmount > 1 && DEBUGFLAG) { ns.print(`${division} - ${city} providing ${material}: ${providableAmount.toFixed(2)}`); }
            
            supplyAndDemand[division][city][material] = providableAmount;
          }
        } 
      } 
    }

    // add a print of sum of productionAmounts for each material
    let totalProduction = {};
    MATERIALS.forEach(material => {
      totalProduction[material] = 0;
      for (let divisionName in supplyAndDemand) {
        for (let city in supplyAndDemand[divisionName]) {
          totalProduction[material] += supplyAndDemand[divisionName][city][material];
        }
      }
      if (totalProduction[material] !== 0) ns.print(`  Total production of ${material}: ${ns.formatNumber(totalProduction[material],2)}`);
    });

    let exportOrders = {}; // Initialize export orders object

    //ns.print(""Calculating necessary exports..."");

    let usedCombinations = new Set(); // Set to track used combinations
    // Calculate necessary exports to balance negative production
    for (let targetDivision in supplyAndDemand) {
      for (let targetCity in supplyAndDemand[targetDivision]) {
        materialLoop: for (let material of MATERIALS) {
          // for all materials, cities, divisions
          let amountNeeded = -supplyAndDemand[targetDivision][targetCity][material];
          if (amountNeeded > 0) {// If there is a demand in the target city

            // first, try to fullfill from the same city, different division
            for (let sourceDivision in supplyAndDemand){
              let availableSupplyInSameCity = supplyAndDemand[sourceDivision][targetCity][material];
              if (availableSupplyInSameCity > 0) {
                let exportAmount = Math.min(amountNeeded, availableSupplyInSameCity);
                // Create or update export order within the same city
                exportOrders[sourceDivision] = exportOrders[sourceDivision] || {};
                exportOrders[sourceDivision][targetCity] = exportOrders[sourceDivision][targetCity] || {};
                exportOrders[sourceDivision][targetCity][material] = exportOrders[sourceDivision][targetCity][material] || [];
                exportOrders[sourceDivision][targetCity][material].push([targetDivision, targetCity, exportAmount]);
                // Update the remaining demand and available supply
                amountNeeded -= exportAmount;
                supplyAndDemand[sourceDivision][targetCity][material] -= exportAmount;
                //ns.print(`Planning intra-city export from ${sourceDivision} to ${targetDivision} within ${targetCity} of ${ns.formatNumber(exportAmount,1)} ${material}!`);
                usedCombinations.add(`${sourceDivision}-${targetCity}-${material}`); // Add to used combinations
                if (amountNeeded <= 0) continue; // if demand fulfilled, move to next material
              }
            }

            if (amountNeeded <= 0) continue; // if demand fulfilled, move to next material
            
            for (let sourceDivision in supplyAndDemand) { 
              if (amountNeeded <= 0) continue;
              for (let sourceCity in supplyAndDemand[sourceDivision]) { 
                if (amountNeeded <= 0 || usedCombinations.has(`${sourceDivision}-${targetCity}-${material}`)) continue; // Skip used combinations
                let availableSupply = supplyAndDemand[sourceDivision][sourceCity][material];
                if (availableSupply > 0) {// If there is a supply in the source city and still a demand
                  let exportAmount = Math.min(amountNeeded, availableSupply);
                  // Create or update export order
                  exportOrders[sourceDivision] = exportOrders[sourceDivision] || {};
                  exportOrders[sourceDivision][sourceCity] = exportOrders[sourceDivision][sourceCity] || {};
                  exportOrders[sourceDivision][sourceCity][material] = exportOrders[sourceDivision][sourceCity][material] || [];
                  exportOrders[sourceDivision][sourceCity][material].push([targetDivision, targetCity, exportAmount]);
                  // Update the remaining demand and available supply
                  amountNeeded -= exportAmount;
                  supplyAndDemand[sourceDivision][sourceCity][material] -= exportAmount;
                  //ns.print(`Planning inter-city export from ${sourceDivision}-${sourceCity} to ${targetDivision}-${targetCity} of ${ns.formatNumber(exportAmount,1)} ${material}!`)
                  if (amountNeeded <= 0) continue; // move to next material if we have covered need
                }
              }
            }
          }
        }
      }
    }

    // Process all export orders
    for (let sourceDivision in exportOrders) {
      for (let sourceCity in exportOrders[sourceDivision]) {
        for (let material in exportOrders[sourceDivision][sourceCity]) {
          for (let order of exportOrders[sourceDivision][sourceCity][material]) {
            let [targetDivision, targetCity, amount] = order;
            try { 
              //ns.print(`Exporting ${ns.formatNumber(amount,1)} of ${material} from ${sourceDivision} - ${sourceCity} to ${targetDivision} ${targetCity}.`);
              await easyRun(ns, ""corporation/exportMaterial"", sourceDivision, sourceCity, targetDivision, targetCity, material, amount);
              //supplyAndDemand[sourceDivision][sourceCity][material] -= amount; // adjust supplyAndDemand to ensure we dont sell material we want to export
            } catch (error) { 
              ns.print(`Error processing export: ${error.message}`); 
            }
          }
        }
      }
    }

    // Sell remaining surplus materials and adjust prices
    for (let divisionName in supplyAndDemand) {
      for (let city in supplyAndDemand[divisionName]) {
        for (let material in supplyAndDemand[divisionName][city]) {
          let surplus = supplyAndDemand[divisionName][city][material];
          if (surplus > 0) {
            if (profitSearch){
              let materialData = await easyRun(ns, ""corporation/getMaterial"", divisionName, city, material);
              let currentPriceMultiplier = parseMultiplier(materialData.sellPrice);
              let sellAmount = materialData.actualSellAmount;
              // Adjust price based on surplus and sell amount
              if (sellAmount < surplus) {
                currentPriceMultiplier *= 0.995; // Decrease price
              } else if (sellAmount >= surplus*1.1) {
                currentPriceMultiplier *= 1.001; // Increase price
              }

              try {
                await easyRun(ns, ""corporation/sellMaterial"", divisionName, city, material, surplus.toString(), `MP*${currentPriceMultiplier}`);
                ns.print(`Selling ${material} in ${divisionName} at ${city}. MP*${ns.formatNumber(currentPriceMultiplier,3)}`);
              } catch (error) {
                if (DEBUGFLAG) ns.print(`Error adjusting sell price for surplus material: ${error.message}`);
              }
            } else {
              if(material === ""Food""){
                try {
                  await easyRun(ns, ""corporation/sellMaterial"", divisionName, city, material, surplus.toString(), ""MP"");
                  //ns.print(`Selling ${material} in ${divisionName} at ${city}.`);
                } catch (error) { if (DEBUGFLAG) ns.print(`Error adjusting sell price for surplus material: ${error.message}`); }
              }else {
                try {
                  await easyRun(ns, ""corporation/sellMaterial"", divisionName, city, material, surplus.toString(), ""MP"");
                  //ns.print(`Selling ${material} in ${divisionName} at ${city}.`);
                } catch (error) {
                  if (DEBUGFLAG) ns.print(`Error adjusting sell price for surplus material: ${error.message}`);
                }
              }
            }
          }
        } 
      }
    }
 
    // Purchase any required materials
    for (let divisionName in supplyAndDemand) {
      // if corporation has smart supply, flag
      let divisionData = await easyRun(ns, ""corporation/getDivision"", divisionName);
      let divisionType = divisionData.type;
      let industryData = await easyRun(ns, ""corporation/getIndustryData"", divisionType);
      let requiredMaterials = industryData.requiredMaterials;
      for (let city in supplyAndDemand[divisionName]) {
        // if smart supply flag, enable smart supply with leftovers, and continue to next city
        for (let material in supplyAndDemand[divisionName][city]) {
          // check if the industry needs the material
          let industryRequiresMaterial = false;
          if (requiredMaterials[material] !== undefined) { industryRequiresMaterial = true; }
          if (!industryRequiresMaterial) { continue; }

          let materialData = await easyRun(ns, ""corporation/getMaterial"", divisionName, city, material);
          let materialProduction = -materialData.productionAmount;
          let materialImports = -materialData.exports;
          //if (!STAGE1) ns.print(`materialData.exports: ${materialData.exports}`);
          let materialStored = materialData.stored;

          let productionMultScalar = (divisionData.productionMult * 1)/50;

          let purchaseAmount = materialProduction - (materialImports/10) - (materialStored/10);
          let flatAdditional = ((materialProduction - (materialImports/10)) < 5) ? 1 : 0; // break perfect production-import stalemates

          let minimalMaterialBeingUsed = materialProduction < 10;
          let minimalMaterialStored = materialStored <= 5;

          // if none in storage and none being used, kickstart production
          if (minimalMaterialBeingUsed && minimalMaterialStored){
            //ns.print(`${divisionName} - ${city} - ${material}: low storage and no purchases - initialization buy.`);
            purchaseAmount = materialProduction - (materialImports/10) - (materialStored/10) + productionMultScalar;
            purchaseAmount += flatAdditional;
            await easyRun(ns, ""corporation/buyMaterial"", divisionName, city, material, purchaseAmount);
            continue;
          }

          let significantMaterialsStored = materialStored >= Math.abs(11 * materialProduction);

          if (significantMaterialsStored){
            purchaseAmount = materialProduction - (materialImports/10) - (materialStored/10);
            purchaseAmount += flatAdditional;
            //ns.print(`${divisionName} - ${city} - ${material}: buying continuous, ${ns.formatNumber(purchaseAmount, 2)}`);
            await easyRun(ns, ""corporation/buyMaterial"", divisionName, city, material, purchaseAmount);
            continue;
          }
          
          // otherwise, scale up purchase amount
          purchaseAmount = materialProduction*1.2 - (materialImports/10) - (materialStored/10) + productionMultScalar;
          purchaseAmount += flatAdditional;
          //ns.print(`${divisionName} - ${city} - ${material}: buying ${ns.formatNumber(purchaseAmount, 2)}`);
          await easyRun(ns, ""corporation/buyMaterial"", divisionName, city, material, purchaseAmount);
        }
      }
    }

    // Helper function to parse the current price multiplier
    function parseMultiplier(priceString) {
      let parts;
      try{ parts = priceString.split(""*"") } 
      catch { return 1; }
      return parts.length === 2 ? parseFloat(parts[1]) : 1;
    }
    
    return;
  }//------------------------------------------------------------------------



  //  see if any locations in any divisions need a storage upgrade.
  async function upgradeStorage(){
    let corporationData = await easyRun(ns, ""corporation/getCorporation"");
    let corporationFunds = corporationData.funds;
    let spendingMoney = corporationFunds * SPENDING_MODIFIER;
    let approximateUpgradeCost = 0;
    //do{
      // collect viable-upgrade array:
        //  across all divisions and cities
          //  record

      for (let division of corporationData.divisions){
        //ns.print(""Checking for upgrabilitity in "" + division);
        let divisionData = await easyRun(ns, ""corporation/getDivision"", division);
        for (let city of divisionData.cities) {
          //ns.print(""Checking for upgrabilitity in "" + city);
          let subdivisionsHasWarehouse = await easyRun(ns, ""corporation/hasWarehouse"", divisionData.name, city);
          if (subdivisionsHasWarehouse){
            //ns.print(""Subdiv has warehouse."");
            let warehouseData = await easyRun(ns, ""corporation/getWarehouse"", divisionData.name, city);
            //ns.print(""warehouseData: "" + warehouseData);
            let warehouseUpgradeCost = await easyRun(ns, ""corporation/getUpgradeWarehouseCost"", divisionData.name, city);
            approximateUpgradeCost = warehouseUpgradeCost;
            //ns.print(""warehouseUpgradeCost: "" + warehouseUpgradeCost);
            let warehouseUsage = warehouseData.sizeUsed / warehouseData.size;
            //ns.print(""warehouseUsage: "" + warehouseUsage);
            let canUpgradeWarehouse = spendingMoney >= warehouseUpgradeCost ? true:false;
            //ns.print(""canUpgradeWarehouse: "" + canUpgradeWarehouse);
            if (warehouseUsage > STORAGE_USED_BEFORE_UPGRADE && canUpgradeWarehouse){
              ns.print(""  Upgrading warehouse for "" + divisionData.name + ""-"" + city + ""!"");
              spendingMoney -= warehouseUpgradeCost;
              await easyRun(ns, ""corporation/upgradeWarehouse"", divisionData.name, city);
            }
            let canEasilyUpgradeWarehouse = spendingMoney/2 >= warehouseUpgradeCost ? true:false;
            let upgradeAgricultureAggressively = (spendingMoney*5 >= warehouseUpgradeCost) && (divisionData.type === ""Agriculture"") ? true:false;
            let counter = 0;
            if (canEasilyUpgradeWarehouse || (upgradeAgricultureAggressively && warehouseData.size < 2500)){
              ns.print(""  Upgrading warehouse for "" + divisionData.name + ""-"" + city + ""!"");
              ns.toast(""  Upgrading warehouse for "" + divisionData.name + ""-"" + city + ""!"", ""success"", SLEEP_TIMER/4);
            }
            while (canEasilyUpgradeWarehouse || (upgradeAgricultureAggressively && warehouseData.size < 2500)){
              if ((counter++)%10===0) await ns.sleep(1);
              //ns.print(""  Upgrading warehouse for "" + divisionData.name + ""-"" + city + ""!"");
              //ns.toast(""  Upgrading warehouse for "" + divisionData.name + ""-"" + city + ""!"", ""success"", SLEEP_TIMER/4);
              await easyRun(ns, ""corporation/upgradeWarehouse"", divisionData.name, city);
              corporationData = await easyRun(ns, ""corporation/getCorporation"");
              corporationFunds = corporationData.funds;
              spendingMoney = corporationFunds * SPENDING_MODIFIER;
              warehouseUpgradeCost = await easyRun(ns, ""corporation/getUpgradeWarehouseCost"", divisionData.name, city);
              canEasilyUpgradeWarehouse = spendingMoney/2 >= warehouseUpgradeCost ? true:false;
              warehouseData = await easyRun(ns, ""corporation/getWarehouse"", divisionData.name, city);
              upgradeAgricultureAggressively = (spendingMoney*5 >= warehouseUpgradeCost) && (divisionData.type === ""Agriculture"") ? true:false;
            }
          } else{
            try{
              await easyRun(ns, ""corporation/purchaseWarehouse"", divisionData.name, city);
            }catch(error){
              ns.print(""Error upgrading storage: "" + error.message);
            }
          }
        }
      }
    //} while (spendingMoney > 2*approximateUpgradeCost)
  }//------------------------------------------------------------------------



  //  manage products ( in product-producing divisions only) (ASSUMES WE HAVE A DIVISION BASE IN SECTOR-12)
  async function manageProducts() {
    let corporationData = await easyRun(ns, ""corporation/getCorporation"");
    //ns.print(corporationData);
    for (let division of corporationData.divisions){
      let divisionData = await easyRun(ns, ""corporation/getDivision"", division);
      //ns.print(divisionData);
      // Exit the function if the division doesn't make products or has no products
      if (!divisionData.makesProducts || divisionData.products.length === 0) continue;
      ns.print(""  Managing products for "" + divisionData.name);

      
      // Extract the base product name (without number) from an existing product
      let baseProductName = divisionData.products[0].replace(/[0-9]/g, '');

      // Find the highest product number
      let maxProductNumber = divisionData.products
        .map(product => parseInt(product.replace(/[^0-9]/g, ''), 10))
        .filter(num => !isNaN(num))
        .reduce((max, num) => Math.max(max, num), 0);

  // ASYNC HELPER FUNCS
      // extract highest product multiplier from all products in division, sector 12
      async function getHighestProductValue(division) {
        // min 1
        let highestValue = 25e3;

        // Iterating over each product asynchronously
        for (const product of division.products) {
          let newValue = 0;
          try {
            let productData = await easyRun(ns, ""corporation/getProduct"", division.name, ""Sector-12"", product);
            if (productData && productData.desiredSellPrice && typeof productData.desiredSellPrice === ""number"") {
              newValue = productData.desiredSellPrice;
            }
          } catch { newValue = 25000; }
          if (isNaN(newValue)) { newValue = 25000;  }
          highestValue = Math.max(highestValue, newValue);
        }
        return highestValue;
      }

      async function checkAnyProductInDevelopment(division) {
        
        for (let product of division.products) {
          let productData = await easyRun(ns, ""corporation/getProduct"", division.name, ""Sector-12"", product);
          if (productData.developmentProgress < 100) { return true; }
        }
        return false;
      }

      async function getLowestRatedProduct(division) {
        let lowestRatedProduct = null;
        for (let product of division.products) {
          let productData = await easyRun(ns, ""corporation/getProduct"", division.name, ""Sector-12"", product);
          if (!lowestRatedProduct || productData.rating < lowestRatedProduct.rating) { lowestRatedProduct = productData; }
        }
        return lowestRatedProduct;
      }

      let intializiationMultiplier = await getHighestProductValue(divisionData).catch(error => { ns.print(""An error occurred:"", error); });;

      // process prices for products
      for (let productName of divisionData.products) {
        // if market TA 2 is researched in this division, enable it for the product (covers all cities), and continue.
        const haveTAII = await easyRun(ns, ""corporation/hasResearched"", division, ""Market-TA.II"");
        const divisionProducts = divisionData.products
        if (haveTAII && divisionProducts.length > 0){ // if we have TA2 and at least one product
          ns.print(`${division} has Market-TA II! Enabling for all products.`); // reporting
          await easyRun(ns, ""corporation/sellProduct"", division, CITIES[0], productName, ""MAX"", `MP*${corporationData.revenue}`, true); // set product to sell in all cities
          await easyRun(ns, ""corporation/setProductMarketTA2"", division, productName, true); // then enable TA2 on product
          ns.print(`    Selling ${productName} in ${CITIES[1].padEnd(10)} with Market TAII pricing.`); // reporting sell price
          continue;
        } else {
          // process pricing per city
          for (const city of CITIES){
            let productData = await easyRun(ns, ""corporation/getProduct"", divisionData.name, city, productName);
            let prodSellAmount = productData.actualSellAmount;
            let prodProductionAmount = productData.productionAmount

            // if the product isnt finished, skip it! set prices ON COMPLETION
            if(productData.developmentProgress < 100){ continue; }


            // Extract multiplier from desiredSellPrice
            let splitPrice;
            let badFormat = true;
            let value = 10000; // default if parsing fails without error
            // see if the product has a 'properly' formatted price
            if (typeof productData.desiredSellPrice === ""string""){
              //ns.print(`productData.desiredSellPrice is string.`)

              try{ splitPrice = productData.desiredSellPrice.split(""*"");
                badFormat = false; value = parseFloat(splitPrice[1]);
              } catch{ badFormat = true; }
              try{ splitPrice = productData.desiredSellPrice.split(""+"");
                badFormat = false; value = parseFloat(splitPrice[1]);
              } catch{ badFormat = true; }

            } else if (typeof productData.desiredSellPrice === ""number""){
              //ns.print(`productData.desiredSellPrice is number.`);
              value = productData.desiredSellPrice;
              badFormat = false;
            } else {
              ns.print(`ERROR: Bad desiredSellPrice format.`);
            }
            

            if (isNaN(value)) {
              badFormat = true; // Default to 1 if parsing fails
            }

            if (badFormat) { value = intializiationMultiplier; } //  if parsing fails, reinitialize
            else {
              // Price adjustment logic
              let notSellingEnoughProduct = prodSellAmount < .95 * prodProductionAmount;
              let accumulatingProductInStorage =  productData.stored > prodProductionAmount * 10 ; // prodProductionAmount is /s... I think?
              let sellingMostOfProduction = prodSellAmount >= .9 * prodProductionAmount;
              let sellingBarelyAnyProduct = prodSellAmount <= 0.1;

              if (notSellingEnoughProduct || accumulatingProductInStorage) { value *= 0.98; } 
              else if (sellingMostOfProduction)       { value *= 1.01; }
              else if (sellingBarelyAnyProduct)       { value *= .9; } 
              else { ns.print(""ERROR: Product comparison shenanigans."") }
            }
            ns.print(`    Selling ${productName} in ${city.padEnd(10)} for ${""$""}${ns.formatNumber(value,2)}/ea`);
            await easyRun(ns, ""corporation/sellProduct"", divisionData.name, city, productName, ""MAX"", value);
          }// city
        }

        
      }// product

      // generate new products, always in sector-12
      if (divisionData.products.length < divisionData.maxProducts) {
        const MAX_PURCHASE_POWER_FACTOR = 0.1;
        // Create new product with incremented number
        let corpData = await easyRun(ns, ""corporation/getCorporation"");
        let corpFunds = corpData.funds;
        let newProductName = baseProductName + (maxProductNumber + 1);
        let investAmount = corpFunds * MAX_PURCHASE_POWER_FACTOR;
        await easyRun(ns, ""corporation/makeProduct"", divisionData.name, ""Sector-12"", newProductName, investAmount, investAmount);
      } else {
        // Check if any product is still in development
        let anyProductInDevelopment = await checkAnyProductInDevelopment(divisionData);

        if (!anyProductInDevelopment) {
          let lowestRatedProduct = await getLowestRatedProduct(divisionData);

          if (lowestRatedProduct) {
            await easyRun(ns, ""corporation/discontinueProduct"", divisionData.name, lowestRatedProduct.name);
            let newProductName = baseProductName + (maxProductNumber + 1);
            let corpData = await easyRun(ns, ""corporation/getCorporation"");
            let corpFunds = corpData.funds;
            let investAmount = corpFunds * 0.01;
            ns.print(divisionData.name + "" creating new product "" + newProductName + "", with "" + investAmount.toFixed(1) + "" design and marketing investment."");
            await easyRun(ns, ""corporation/makeProduct"", divisionData.name, ""Sector-12"", newProductName, investAmount, investAmount);
          }
        }
      }
    }
  }//------------------------------------------------------------------------



  async function advertDivisions(){ 
    //ns.print(""Starting advert func"");
    let corporationData = await easyRun(ns, ""corporation/getCorporation"");
    let corpAdvertCash = corporationData.funds; 
    for (let division of corporationData.divisions){
      //ns.print(""Found division: "" + division);
      let divisionData = await easyRun(ns, ""corporation/getDivision"", division);
      //ns.print(""divisionData: "" + divisionData);
      let advertCost = await easyRun(ns, ""corporation/getHireAdVertCost"", division);
      //ns.print(""advertCost: "" + advertCost);
      // spend any cent we have on advertising products
      // if this division makes products, has max products designed/being designed, and we have the cash to buy it
      if (divisionData.makesProducts && divisionData.products.length === divisionData.maxProducts && corpAdvertCash >= advertCost){
        ns.print(""Hiring AdVert(s) for "" + division + ""!"")
        // upgrade tobacco as many times as we can with cash on hand
        if (divisionData.type === ""Tobacco""){
          let counter = 0;
          while(corpAdvertCash >= advertCost){
            if((counter++)%10===0) await ns.sleep(1);
            await easyRun(ns, ""corporation/hireAdVert"", division);
            advertCost = await easyRun(ns, ""corporation/getHireAdVertCost"", division);
            corpAdvertCash -= advertCost;
          } 
        }
        await easyRun(ns, ""corporation/hireAdVert"", division);
      }
      if (corpAdvertCash >= 25*advertCost){
        ns.print(""Hiring AdVert for "" + division + ""!"")
        // upgrade tobacco as many times as we can with cash on hand
        if (divisionData.type === ""Tobacco""){
          while(corpAdvertCash >= advertCost){
            ns.toast(""Hiring AdVert for ""+ division, ""success"", SLEEP_TIMER/4);
            await easyRun(ns, ""corporation/hireAdVert"", division);
            advertCost = await easyRun(ns, ""corporation/getHireAdVertCost"", division);
            corpAdvertCash -= advertCost;
            if (corpAdvertCash >= advertCost) ns.print(""And another!"");
            await ns.sleep(25);
          }
          return;
        }
        await easyRun(ns, ""corporation/hireAdVert"", division);
      }

    }
  }//------------------------------------------------------------------------



  async function upgradeSubdivisions(){
    let corporationData = await easyRun(ns, ""corporation/getCorporation"");
    for (let division of corporationData.divisions){
      let divisionData = await easyRun(ns, ""corporation/getDivision"", division);
      corporationData = await easyRun(ns, ""corporation/getCorporation"")
      let spendingMoney = corporationData.funds;
      for(let city of divisionData.cities){
        let upgradeCost = await easyRun(ns, ""corporation/getOfficeSizeUpgradeCost"", divisionData.name, city, 3);
        // if we can afford it, buy more office space
        let cityHasWarehouse = await easyRun(ns, ""corporation/hasWarehouse"", divisionData.name, city);
        if (cityHasWarehouse){
          let counter = 0;
          if (spendingMoney/10 >= upgradeCost) ns.print(""  Upgrading office size for "" + divisionData.name + "" - "" + city + ""!"");
          while (spendingMoney/10 >= upgradeCost){
            if ((counter++) % 10 === 0) await ns.sleep(1);
            //ns.print(""  Upgrading office size for "" + divisionData.name + "" - "" + city + ""!"");
            //ns.toast(""  Upgrading office size for "" + divisionData.name + "" - "" + city + ""!"", ""success"", SLEEP_TIMER/4);
            await easyRun(ns, ""corporation/upgradeOfficeSize"", divisionData.name, city, 3); 
            upgradeCost = await easyRun(ns, ""corporation/getOfficeSizeUpgradeCost"", divisionData.name, city, 3);
            corporationData = await easyRun(ns, ""corporation/getCorporation"")
            spendingMoney = corporationData.funds;
          }
        }
      }
    }
    return;
  }//------------------------------------------------------------------------



  async function manageEmployees() {
    let corporationData = await easyRun(ns, ""corporation/getCorporation"");
    let isCorporationInDebt = corporationData.funds < 0;
    for (let division of corporationData.divisions){
      let hiredEmployee = false;
      let divisionData = await easyRun(ns, ""corporation/getDivision"", division);
      
      let isDivisionProfitable = (divisionData.lastCycleRevenue - divisionData.lastCycleExpenses) > 0;
      //ns.print(""Managing employees for "" + divisionData.name + ""..."");

      // for all cities that the division has
      for (let city of divisionData.cities) {
        let officeData = await easyRun(ns, ""corporation/getOffice"", divisionData.name, city);
        if (officeData.avgEnergy < 100){
          ns.print(""Low energy in "" + divisionData.name + ""-"" + city + "", buying tea."");
          await easyRun(ns, ""corporation/buyTea"", divisionData.name, city);
        }

        if (officeData.avgMorale < 100){
          let corpData = await easyRun(ns, ""corporation/getCorporation"");
          let corpCash = corpData.funds
          let spendPerEmployee = (corpCash * .05) / officeData.numEmployees;
          spendPerEmployee = spendPerEmployee > 100000 ? spendPerEmployee : 100000;
          ns.print(""Low morale in "" + divisionData.name + ""-"" + city + "", throwing party."");
          await easyRun(ns, ""corporation/throwParty"", divisionData.name, city, spendPerEmployee);
        }

        // Hire employees if there are job openings
        let positionsToFill = officeData.size - officeData.numEmployees;
        if (positionsToFill <= 0) {hiredEmployee = false;}
        for (let i = 0; i < positionsToFill; i++) {
          await easyRun(ns, ""corporation/hireEmployee"", divisionData.name, city);
          hiredEmployee = true;
        }
        
        officeData = await easyRun(ns, ""corporation/getOffice"", divisionData.name, city);
        // if we have hired a new employee OR have any unassigned employees OR corp is in debt OR divisions isnt profitable, redistribute employees.
        //if (hiredEmployee || officeData.employeeJobs.Unassigned > 0 || isCorporationInDebt || !isDivisionProfitable) {

          let jobAssignments = {};

          //ns.print(""Managing employee count in "" + divisionData.name + "" - "" + city);
          // unassign all people for reassignments
          for (let position of EMPLOYEE_POSITIONS) {
            await easyRun(ns, ""corporation/setAutoJobAssignment"", divisionData.name, city, position, 0);
          }

          const verySmallOffice = officeData.numEmployees < 6;
          let internRatio = 
            verySmallOffice ? 0: // if in a very small office, we do not need interns.
              // is corp in debt? if yes, further logic; if no, 0 interns - can buy tea
              (isCorporationInDebt ?
                // is the division profitable? if yes, 1/9th; if no, 1/6th
                (isDivisionProfitable ? officeData.numEmployees / 9 : officeData.numEmployees / 6)
                :0);
          let internCount = Math.ceil(internRatio);
          jobAssignments[""Intern""] = internCount;

          let remainingEmployees = officeData.numEmployees - internCount;

          // PRODUCT PRODUCING:
          let assignedCounts = {};
          if (divisionData.makesProducts === true) {
            // Product production strategy:
            if (city === ""Sector-12"") {
              // Sector-12 is the product creation office
              // Assign 30% engineers, 25% management, remaining split between other roles
              assignedCounts[""Engineer""] = Math.floor(remainingEmployees * 0.30);
              assignedCounts[""Management""] = Math.floor(remainingEmployees * 0.25);
            } else {
              // others focused on research too - need some BIG research numbers for quality increases
              // Assign 75% research and development, remaining split between other roles
              assignedCounts[""Research & Development""] = Math.floor(remainingEmployees * 0.75);
            }
          } /* else {
            // Material product strategy:
            assignedCounts[""Operations""] = Math.floor(remainingEmployees * 2/9);
            assignedCounts[""Engineer""] = Math.floor(remainingEmployees * 2/9);
            assignedCounts[""Management""] = Math.floor(remainingEmployees * 3/9);
            assignedCounts[""Research & Development""] = Math.floor(remainingEmployees * 1/9);
          }*/

          // Accumulate job assignments
          for (const [position, count] of Object.entries(assignedCounts)) {
            jobAssignments[position] = (jobAssignments[position] || 0) + count;
            remainingEmployees -= count;
          }

          // Generic employee reassignment, excluding interns
          let positionsExcludingInterns = EMPLOYEE_POSITIONS.filter(p => p !== ""Intern"");
          let index = 0;
          while (remainingEmployees > 0) {
            let position = positionsExcludingInterns[index];
            jobAssignments[position] = (jobAssignments[position] || 0) + 1;
            remainingEmployees--;
            index = (index + 1) % positionsExcludingInterns.length;
          }

          // Assign employees based on accumulated counts
          for (const [position, count] of Object.entries(jobAssignments)) {
            if (DEBUGFLAG) {ns.print(""Assigning "" + count + "" employees to "" + position + ""."");}
            await easyRun(ns, ""corporation/setAutoJobAssignment"", divisionData.name, city, position, count);
          }
        //} // end of hiredEmployee if
      } // end of city loop
    }
    return;
  }//------------------------------------------------------------------------



  // 200 GB
  //  balance real estate within a division between all cities
  async function balanceRealEstate(divisionIn){
    let divisionData = await easyRun(ns, ""getDivision"", divisionIn);
    // if division NOT in more than one city, return

    // if the difference between the city with the most real estate and the least is less than 15%, reset land exports.

    // if difference between the city with the most real estate and the least is more than 15%, start land exports
      // idenfity city with the highest amount of real estate
      // get difference from highest cities to average of other cities amount of real estate
      //  export (1/10th of (1/cities-1 of (difference between largest amount and average))) to other cities

    return;
  }//------------------------------------------------------------------------



  async function purchaseUsefulItems() { 
    let corporationData = await easyRun(ns, ""corporation/getCorporation"");
    for (let division of corporationData.divisions){
      //ns.print(""Processing    items      for       "" + division);
      
      let divisionData = await easyRun(ns, ""corporation/getDivision"", division);
      let industryData = await easyRun(ns, ""corporation/getIndustryData"", divisionData.type); 

      // Materials and factor names {material: materialFactorName}
      const MATERIAL_TABLE = { ""Hardware"": ""hardwareFactor"", 
                              ""Robots"": ""robotFactor"", 
                              ""AI Cores"": ""aiCoreFactor"", 
                              ""Real Estate"": ""realEstateFactor"" };

      let totalFactor = 0;
      let materialRatios = {};

      // get normalized materialRatios: (factor/size) / totalfactor
      for (const [material, factorName] of Object.entries(MATERIAL_TABLE)) {
        let factorValue = industryData[factorName];
        if (factorValue) {
          const materialData = await easyRun(ns, ""corporation/getMaterialData"", material);
          const materialSize = materialData.size;
          //let relativeBonus = factorValue / Math.pow(materialSize, .8); // weight a BIT less towards real estate (lowest size)
          const relativeBonus = factorValue / materialSize; // weight a BIT less towards real estate (lowest size)
          materialRatios[material] = relativeBonus;
          totalFactor += relativeBonus;
        }
      }
      for (const material in materialRatios) { materialRatios[material] /= totalFactor; }

      for (const city of divisionData.cities) {
        const cityHasWarehouse = await easyRun(ns, ""corporation/hasWarehouse"", divisionData.name, city);
        if (!cityHasWarehouse){ continue; }
        //ns.print(""Processing items for "" + city);
        // stop all sells of useful materials
        for (const material in materialRatios) {
          //ns.print(""Canceling sell of "" + material);
          await easyRun(ns, ""corporation/sellMaterial"", divisionData.name, city, material, ""0"", ""MP"");
        }

        let warehouse = await easyRun(ns, ""corporation/getWarehouse"", divisionData.name, city);
        for (const material in materialRatios) {
          if (STAGE1){
            // Assuming we ONLY have an agriculture division.
            // Targetting SPECIFIC values:
            const targetAmounts = { ""AI Cores"": 2114, ""Hardware"": 2404, ""Real Estate"": 124960, ""Robots"": 23 };

            const targetAmount = targetAmounts[material];
            if (targetAmount) {
              let materialProperties = await easyRun(ns, ""corporation/getMaterial"", divisionData.name, city, material);
              let storedMaterial = materialProperties.stored;

              let amountToPurchase = targetAmount - storedMaterial;
              if (amountToPurchase > 0) {
                try{
                  await easyRun(ns, ""corporation/buyMaterial"", divisionData.name, city, material, amountToPurchase/10 );
                  ns.print(`Purchased ${amountToPurchase} of ${material} for ${divisionData.name} in ${city}.`);
                }catch (error){ ns.print(""Error purchasing useful items: "" + error); }
              } else if (amountToPurchase < 0){
                ns.print(`${COLOR_RED}Excess of ${ns.formatNumber(-amountToPurchase)} of ${material} at ${divisionData.name} in ${city}.${COLOR_RESET}`);
                await easyRun(ns, ""corporation/sellMaterial"", divisionData.name, city, material, (-amountToPurchase/10).toString(), ""MP"");
              }
            }
          }// END STAGE1 HANDLING

          if (STAGE2){
            // Define target amounts for each division and material
            const targetAmounts = {
              ""Agriculture"": { ""AI Cores"": 8446, ""Hardware"": 9440, ""Real Estate"": 428895, ""Robots"": 1289 },
              ""Chemical"": { ""AI Cores"": 1732, ""Hardware"": 3220, ""Real Estate"": 55306, ""Robots"": 58 } };

            const divisionTargets = targetAmounts[divisionData.type];
            if (divisionTargets) {
              const targetAmount = divisionTargets[material];
              if (targetAmount) {
                let materialProperties = await easyRun(ns, ""corporation/getMaterial"", divisionData.name, city, material);
                let storedMaterial = materialProperties.stored;

                let amountToPurchase = targetAmount - storedMaterial;
                if (amountToPurchase > 0) {
                  try {
                    await easyRun(ns, ""corporation/buyMaterial"", divisionData.name, city, material, amountToPurchase / 10);
                    ns.print(`Purchased ${amountToPurchase} of ${material} for ${divisionData.name} in ${city}.`);
                  } catch (error) { ns.print(""Error purchasing useful items: "" + error); }
                } else if (amountToPurchase < 0) {
                  ns.print(`${COLOR_RED}Excess of ${ns.formatNumber(-amountToPurchase)} of ${material} at ${divisionData.name} in ${city}.${COLOR_RESET}`);
                  await easyRun(ns, ""corporation/sellMaterial"", divisionData.name, city, material, (-amountToPurchase / 10).toString(), ""MP"");
                }
              }
            }
          }// END STAGE2 HANDLING


          if (STAGE4){
            corporationData = await easyRun(ns, ""corporation/getCorporation"");
            let materialProperties = await easyRun(ns, ""corporation/getMaterial"", divisionData.name, city, material);
            let materialData = await easyRun(ns, ""corporation/getMaterialData"", material);
            let storedMaterial = materialProperties.stored; // amount stored, in material units
            const materialSize = materialData.size; // material units in warehouse size
            let warehouseSizeToFill = warehouse.size * USEFUL_MATERIAL_STORAGE_RATIO; // amount of storage to fill with useful materials

            // at this stage, agriculture production can start to be hampered by overful warehouses.
            if (warehouse.size >= 10000 && divisionData.type === ""Agriculture""){ warehouseSizeToFill = warehouse.size * .65; }

            let warehouseSizeForMaterial = warehouseSizeToFill * materialRatios[material];  // percentage of storage to fill with specific material
            let goalAmount = warehouseSizeForMaterial / materialSize; // calculated target quantity of material to fill to warehouse size

            let excessAmount = goalAmount * 1.05; // five percent more than goal
            let amountToPurchase = goalAmount - storedMaterial;
            let warehouseUsage = warehouse.sizeUsed / warehouse.size;
            
            if ((amountToPurchase > 0) && ( warehouseUsage < 0.75)) {

              try{
                await easyRun(ns, ""corporation/buyMaterial"", divisionData.name, city, material, (amountToPurchase/10) );
                if ((amountToPurchase/10) > 1) ns.print(`Purchased ${ns.formatNumber(amountToPurchase, 2)} of ${material} for ${divisionData.name} in ${city}.`);
              }catch (error){
                ns.print(COLOR_RED + ""Error purchasing useful items: "" + error + COLOR_RESET);
              }

            } else{ // we are over goal amount, or over warehouse size limit
              // only sell if useful materials OVER excessAmount
              if (storedMaterial > excessAmount){
                let amountToSellToGoal = storedMaterial - goalAmount;
                ns.print(COLOR_RED + ""Excess of "" + amountToSellToGoal.toFixed(1) + "" of "" + material + "" at "" + divisionData.name + "" in "" + city + ""."" + COLOR_RESET);
                await easyRun(ns, ""corporation/sellMaterial"", divisionData.name, city, material, (amountToSellToGoal/10).toString(), ""MP"");
              }
            }
          }// END STAGE4 HANDLING
        }
      }
    }
  }//------------------------------------------------------------------------

  function numberWithCommas(x) { return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, "",""); }

  await ns.atExit(async() => {
    await cancelAllBuys();
    await cancelAllExports();
    await cancelAllSells();
  });

}"
S97ePMKL,kilda,MUSTAFA733737,Python,Saturday 10th of February 2024 04:43:02 PM CDT,kilwq
4Lqzdv2L,polyoverflow.py for Dolphin (Felk's python build),MrCheeze,Python,Saturday 10th of February 2024 04:09:14 PM CDT,"from dolphin import event, gui, controller, memory, registers, savestate

addr_globalContext = 0x801C9660 + 0xB1C140
addr_colCtx = addr_globalContext + 0x7C0
addr_exitList = addr_globalContext + 0x11E04
colCtx_colHeader = memory.read_u32(addr_colCtx) + 0xB1C140
exitList = memory.read_u32(addr_exitList) + 0xB1C140
colCtx_colHeader_vtxList = memory.read_u32(colCtx_colHeader + 0x10) + 0xB1C140
colCtx_colHeader_polyList = memory.read_u32(colCtx_colHeader + 0x18) + 0xB1C140
colCtx_colHeader_surfaceTypeList = memory.read_u32(colCtx_colHeader + 0x1C) + 0xB1C140
'''
def sign(p1x, p1z, p2x, p2z, p3x, p3z):
    return (p1x - p3x) * (p2z - p3z) - (p2x - p3x) * (p1z - p3z)

def pointInTriangle(px, pz, v1x, v1z, v2x, v2z, v3x, v3z):

    if v1x==v2x and v1z == v2z:
        return False
    if v2x==v3x and v2z == v3z:
        return False
    if v3x==v1x and v3z == v1z:
        return False

    d1 = sign(px, pz, v1x, v1z, v2x, v2z)
    d2 = sign(px, pz, v2x, v2z, v3x, v3z)
    d3 = sign(px, pz, v3x, v3z, v1x, v1z)
    has_neg = (d1 < 0) or (d2 < 0) or (d3 < 0)
    has_pos = (d1 > 0) or (d2 > 0) or (d3 > 0)
    return not (has_neg and has_pos)

def findYPosOfTriangleForXZ(x, z, p1x, p1y, p1z, p2x, p2y, p2z, p3x, p3y, p3z):
    b = (x*(p2z-p1z) - p1x*(p2z-p1z) - z*(p2x-p1x) + p1z*(p2x-p1x))/((p3x-p1x)*(p2z-p1z) - (p3z-p1z)*(p2x-p1x))
    a = (x - p1x - b*(p3x-p1x))/(p2x-p1x)
    return p1y + a*(p2y-p1y) + b*(p3y-p1y)
'''

def IS_ZERO(f):
    return abs(f) < 0.008

def SQ(x):
    return x*x

def Math3D_CirSquareVsTriSquare(x0, y0, x1, y1, x2, y2, centerX, centerY, radius):
    minX = maxX = x0
    minY = maxY = y0
    if x1 < minX:
        minX = x1
    elif maxX < x1:
        maxX = x1
    if y1 < minY:
        minY = y1
    elif maxY < y1:
        maxY = y1
    if x2 < minX:
        minX = x2
    elif maxX < x2:
        maxX = x2
    if y2 < minY:
        minY = y2
    elif maxY < y2:
        maxY = y2
    return (minX - radius) <= centerX and (maxX + radius) >= centerX and (minY - radius) <= centerY and (maxY + radius) >= centerY
    
def Math3D_PointDistSqToLine2D(x0, y0, x1, y1, x2, y2):
    ret = False
    xDiff = x2 - x1
    yDiff = y2 - y1
    distSq = SQ(xDiff) + SQ(yDiff)
    if IS_ZERO(distSq):
        return False, 0.0
    perpendicularRatio = (((x0 - x1) * xDiff) + (y0 - y1) * yDiff) / distSq
    if perpendicularRatio >= 0.0 and perpendicularRatio <= 1.0:
        ret = True
    perpendicularPoint = [(xDiff * perpendicularRatio) + x1, (yDiff * perpendicularRatio) + y1]
    lineLenSq = SQ(perpendicularPoint[0] - x0) + SQ(perpendicularPoint[1] - y0)
    return ret, lineLenSq

def Math3D_TriChkPointParaYImpl(v0, v1, v2, z, x, detMax, chkDist, ny):
    if not Math3D_CirSquareVsTriSquare(v0[2], v0[0], v1[2], v1[0], v2[2], v2[0], z, x, chkDist):
        return False
    chkDistSq = SQ(chkDist)
    if ((SQ(v0[2] - z) + SQ(v0[0] - x)) < chkDistSq) or ((SQ(v1[2] - z) + SQ(v1[0] - x)) < chkDistSq) or ((SQ(v2[2] - z) + SQ(v2[0] - x)) < chkDistSq):
        return True
    detv0v1 = ((v0[2] - z) * (v1[0] - x)) - ((v0[0] - x) * (v1[2] - z))
    detv1v2 = ((v1[2] - z) * (v2[0] - x)) - ((v1[0] - x) * (v2[2] - z))
    detv2v0 = ((v2[2] - z) * (v0[0] - x)) - ((v2[0] - x) * (v0[2] - z))
    if ((detMax >= detv0v1) and (detMax >= detv1v2) and (detMax >= detv2v0)) or ((-detMax <= detv0v1) and (-detMax <= detv1v2) and (-detMax <= detv2v0)):
        return True
    if abs(ny) > 0.5:
        ret, distToEdgeSq = Math3D_PointDistSqToLine2D(z, x, v0[2], v0[0], v1[2], v1[0])
        if ret and distToEdgeSq < chkDistSq:
            return True
        ret, distToEdgeSq = Math3D_PointDistSqToLine2D(z, x, v1[2], v1[0], v2[2], v2[0])
        if ret and distToEdgeSq < chkDistSq:
            return True
        ret, distToEdgeSq = Math3D_PointDistSqToLine2D(z, x, v2[2], v2[0], v0[2], v0[0])
        if ret and distToEdgeSq < chkDistSq:
            return True
    return False

def Math3D_TriChkPointParaYIntersectInsideTri(v0, v1, v2, nx, ny, nz, originDist, z, x, chkDist):
    if IS_ZERO(ny):
        return False, None
    if Math3D_TriChkPointParaYImpl(v0, v1, v2, z, x, 0.0, chkDist, ny):
        yIntersect = (((-nx * x) - (nz * z)) - originDist) / ny
        return True, yIntersect
    return False, None

def CollisionPoly_CheckYIntersect(polyVertA, polyVertB, polyVertC, polyNormX, polyNormY, polyNormZ, polyDist, x, z, chkDist):
    return Math3D_TriChkPointParaYIntersectInsideTri(polyVertA, polyVertB, polyVertC, polyNormX, polyNormY, polyNormZ, polyDist, z, x, chkDist)

framecount = 0
while True:
    await event.frameadvance()
    framecount = (framecount+1)%2
    if framecount == 0:
        memory.write_u16(0x80CE4340, 1)
    else:
        memory.write_u16(0x80CE4340, 0)
    for i,polyAddr in enumerate([0x80F0CE28-0x25800,0x80F0CE28]):
        polySurfaceTypeId = memory.read_u16(polyAddr)
        vertIdAHex = memory.read_u16(polyAddr+2)
        vertIdBHex = memory.read_u16(polyAddr+4)
        vertIdC = memory.read_u16(polyAddr+6)
        normXHex = memory.read_s16(polyAddr+8)
        normYHex = memory.read_s16(polyAddr+10)
        normZHex = memory.read_s16(polyAddr+12)
        dist = memory.read_s16(polyAddr+14)
        
        good = True
        surfaceExitIndex = memory.read_u8(colCtx_colHeader_surfaceTypeList + 8*polySurfaceTypeId + 2) & 0x1F
        if surfaceExitIndex == 0 or memory.read_u16(exitList + 2*(surfaceExitIndex-1)) != 0x1E00:
            good = False
        ignoreEntity = vertIdAHex & 0x4000
        if ignoreEntity:
            good = False
        vertAX = memory.read_s16(colCtx_colHeader_vtxList + 6*(vertIdAHex&0x1FFF) + 0)
        vertAY = memory.read_s16(colCtx_colHeader_vtxList + 6*(vertIdAHex&0x1FFF) + 2)
        vertAZ = memory.read_s16(colCtx_colHeader_vtxList + 6*(vertIdAHex&0x1FFF) + 4)
        vertBX = memory.read_s16(colCtx_colHeader_vtxList + 6*(vertIdBHex&0x1FFF) + 0)
        vertBY = memory.read_s16(colCtx_colHeader_vtxList + 6*(vertIdBHex&0x1FFF) + 2)
        vertBZ = memory.read_s16(colCtx_colHeader_vtxList + 6*(vertIdBHex&0x1FFF) + 4)
        vertCX = memory.read_s16(colCtx_colHeader_vtxList + 6*vertIdC + 0)
        vertCY = memory.read_s16(colCtx_colHeader_vtxList + 6*vertIdC + 2)
        vertCZ = memory.read_s16(colCtx_colHeader_vtxList + 6*vertIdC + 4)
        if vertAY > 25 and vertBY > 25 and vertCY > 25:
            good = False
        normX = normXHex / 0x7FFF
        normY = normYHex / 0x7FFF
        normZ = normZHex / 0x7FFF
        if -0.008 < normY < 0.008:
            good = False
        ret, ypos = CollisionPoly_CheckYIntersect([vertAX,vertAY,vertAZ],[vertBX,vertBY,vertBZ],[vertCX,vertCY,vertCZ],normX,normY,normZ,dist,494,-1214,1.0)
        if not ret:
            good = False
            ypos = 9999
        if ypos > 25 or ypos < -32000:
            good = False
        
        polystr = ""%04X %04X(%d,%d,%d) %04X(%d,%d,%d) %04X(%d,%d,%d) %04X %04X %04X %04X - %d""%(polySurfaceTypeId,vertIdAHex,vertAX,vertAY,vertAZ,vertIdBHex,vertBX,vertBY,vertBZ,vertIdC,vertCX,vertCY,vertCZ,normXHex,normYHex,normZHex,dist,ypos)
        if good:
            gui.draw_text((10, 100+10*i), 0xFF00FF00, polystr)
            print(""%08X %08X %08X %04X - %s""%(memory.read_u32(0x80CF7D14), memory.read_u32(0x80CF7D18), memory.read_u32(0x80CF7D1C), memory.read_u16(0x80CF7DA6), polystr))
        else:
            gui.draw_text((10, 100+10*i), 0xFFFF0000, polystr)"
T6PzaCZG,snowybot lua,coinwalk,JavaScript,Saturday 10th of February 2024 04:02:57 PM CDT,"doc     = balance
chance  = 49.5  
blob    = (doc/1000)
bethigh = false
sad     = (blob*10)
idiot   = (blob*6.9)
tom     = ((math.floor(balance/sad))*sad)
plane      = 6.9
submarine    = 2.9
nextbet = blob
resetstats();
 
function dobet()
    if (balance>(tom+(nextbet*plane))) then
        plane      = 4.9
        submarine    = 4.9
        nextbet = previousbet*2 
        tom     = tostring(balance)
    end
    if (balance<(tom-(nextbet*submarine))) then
        plane      = 4.9
        submarine    = 4.9
        nextbet = previousbet*2 
        tom     = tostring(balance)
    end  
    if ((nextbet>=(balance/300)) and (balance<(((math.floor(balance/sad))*sad)+idiot))) then  
        nextbet = blob
        plane      = 6.9
        submarine    = 2.9
        tom     = ((math.floor(balance/sad))*sad) 
    end
    if (balance<blob) then
        stop()
    end
    if (balance>=144) then
       stop()
   end
end"
BfiRPGxd,Adelwolf_Raven_Cawthorne.json,BlackDragonBE,JSON,Saturday 10th of February 2024 04:00:43 PM CDT,"{
  ""name"": ""Adelwolf \""Raven\"" Cawthorne"",
  ""type"": ""character"",
  ""img"": ""icons/vtt-512.png"",
  ""system"": {
    ""abilities"": {
      ""str"": {
        ""value"": 8,
        ""proficient"": 0,
        ""bonuses"": {
          ""check"": """",
          ""save"": """"
        },
        ""mod"": -1,
        ""save"": -1,
        ""prof"": 0,
        ""saveBonus"": null,
        ""checkBonus"": null,
        ""dc"": null
      },
      ""dex"": {
        ""value"": 16,
        ""proficient"": 0,
        ""bonuses"": {
          ""check"": """",
          ""save"": """"
        },
        ""mod"": 3,
        ""save"": 3,
        ""prof"": 0,
        ""saveBonus"": null,
        ""checkBonus"": null,
        ""dc"": null
      },
      ""con"": {
        ""value"": 14,
        ""proficient"": 0,
        ""bonuses"": {
          ""check"": """",
          ""save"": """"
        },
        ""mod"": 2,
        ""save"": 2,
        ""prof"": 0,
        ""saveBonus"": null,
        ""checkBonus"": null,
        ""dc"": null
      },
      ""int"": {
        ""value"": 18,
        ""proficient"": 1,
        ""bonuses"": {
          ""check"": """",
          ""save"": """"
        },
        ""mod"": 4,
        ""save"": 4,
        ""prof"": 0,
        ""saveBonus"": null,
        ""checkBonus"": null,
        ""dc"": null
      },
      ""wis"": {
        ""value"": 12,
        ""proficient"": 1,
        ""bonuses"": {
          ""check"": """",
          ""save"": """"
        },
        ""mod"": 1,
        ""save"": 1,
        ""prof"": 0,
        ""saveBonus"": null,
        ""checkBonus"": null,
        ""dc"": null
      },
      ""cha"": {
        ""value"": 8,
        ""proficient"": 0,
        ""bonuses"": {
          ""check"": """",
          ""save"": """"
        },
        ""mod"": -1,
        ""save"": -1,
        ""prof"": 0,
        ""saveBonus"": null,
        ""checkBonus"": null,
        ""dc"": null
      }
    },
    ""attributes"": {
      ""ac"": {
        ""flat"": null,
        ""calc"": ""custom"",
        ""formula"": ""@attributes.ac.armor + 3"",
        ""min"": null
      },
      ""hp"": {
        ""value"": 66,
        ""min"": null,
        ""max"": 76,
        ""temp"": 0,
        ""tempmax"": null
      },
      ""init"": {
        ""value"": null,
        ""bonus"": 0,
        ""mod"": null,
        ""prof"": null,
        ""total"": null
      },
      ""movement"": {
        ""burrow"": 0,
        ""climb"": 0,
        ""fly"": 0,
        ""swim"": 0,
        ""walk"": 30,
        ""units"": ""ft"",
        ""hover"": false
      },
      ""attunement"": {
        ""max"": 3
      },
      ""senses"": {
        ""darkvision"": 30,
        ""blindsight"": 0,
        ""tremorsense"": 0,
        ""truesight"": 0,
        ""units"": ""ft"",
        ""special"": """"
      },
      ""spellcasting"": ""int"",
      ""death"": {
        ""success"": 0,
        ""failure"": 0
      },
      ""exhaustion"": 0,
      ""inspiration"": false,
      ""encumbrance"": null,
      ""hd"": null,
      ""prof"": null,
      ""spelldc"": 1
    },
    ""details"": {
      ""biography"": {
        ""value"": ""<p><b>Age</b>: </p><p><b>Height</b>: </p><p><b>Weight</b>: </p><p><b>Eyes</b>: </p><p><b>Skin</b>: </p><p><b>Hair</b>: </p><p><b>Allies</b>: </p>"",
        ""public"": """"
      },
      ""alignment"": ""Neutral"",
      ""race"": ""Shadow (Shadar-kai) Elf"",
      ""background"": ""Prismari Student"",
      ""originalClass"": ""z1xtuix2w8sjskct"",
      ""xp"": {
        ""value"": 48000,
        ""max"": 64000,
        ""min"": null,
        ""pct"": null
      },
      ""appearance"": """",
      ""trait"": """",
      ""ideal"": """",
      ""bond"": """",
      ""flaw"": """",
      ""level"": 0,
      ""hd"": null
    },
    ""traits"": {
      ""size"": ""med"",
      ""di"": {
        ""value"": [],
        ""bypasses"": [],
        ""custom"": """"
      },
      ""dr"": {
        ""value"": [],
        ""bypasses"": [],
        ""custom"": """"
      },
      ""dv"": {
        ""value"": [],
        ""bypasses"": [],
        ""custom"": """"
      },
      ""ci"": {
        ""value"": [],
        ""custom"": """"
      },
      ""languages"": {
        ""value"": [
          ""common"",
          ""dwarvish"",
          ""elvish"",
          ""goblin"",
          ""common"",
          ""sylvan"",
          ""draconic""
        ],
        ""custom"": """"
      },
      ""weaponProf"": {
        ""value"": [
          ""mar"",
          ""sim""
        ],
        ""custom"": null
      },
      ""armorProf"": {
        ""value"": [
          ""lgt"",
          ""med"",
          ""hvy"",
          ""shl""
        ],
        ""custom"": null
      },
      ""toolProf"": {
        ""value"": [
          ""forg""
        ],
        ""custom"": ""Dragonchess;Calligrapher's Supplies""
      },
      ""perception"": null
    },
    ""currency"": {
      ""pp"": 0,
      ""gp"": 10,
      ""ep"": 0,
      ""sp"": 0,
      ""cp"": 0
    },
    ""skills"": {
      ""acr"": {
        ""value"": 1,
        ""ability"": ""dex"",
        ""bonuses"": {
          ""check"": """",
          ""passive"": """"
        },
        ""bonus"": null,
        ""mod"": null,
        ""passive"": null,
        ""prof"": null,
        ""total"": null
      },
      ""ani"": {
        ""value"": 0,
        ""ability"": ""wis"",
        ""bonuses"": {
          ""check"": """",
          ""passive"": """"
        },
        ""bonus"": null,
        ""mod"": null,
        ""passive"": null,
        ""prof"": null,
        ""total"": null
      },
      ""arc"": {
        ""value"": 2,
        ""ability"": ""int"",
        ""bonuses"": {
          ""check"": """",
          ""passive"": """"
        },
        ""bonus"": null,
        ""mod"": null,
        ""passive"": null,
        ""prof"": null,
        ""total"": null
      },
      ""ath"": {
        ""value"": 1,
        ""ability"": ""str"",
        ""bonuses"": {
          ""check"": """",
          ""passive"": """"
        },
        ""bonus"": null,
        ""mod"": null,
        ""passive"": null,
        ""prof"": null,
        ""total"": null
      },
      ""dec"": {
        ""value"": 0,
        ""ability"": ""cha"",
        ""bonuses"": {
          ""check"": """",
          ""passive"": """"
        },
        ""bonus"": null,
        ""mod"": null,
        ""passive"": null,
        ""prof"": null,
        ""total"": null
      },
      ""his"": {
        ""value"": 1,
        ""ability"": ""int"",
        ""bonuses"": {
          ""check"": """",
          ""passive"": """"
        },
        ""bonus"": null,
        ""mod"": null,
        ""passive"": null,
        ""prof"": null,
        ""total"": null
      },
      ""ins"": {
        ""value"": 0,
        ""ability"": ""wis"",
        ""bonuses"": {
          ""check"": """",
          ""passive"": """"
        },
        ""bonus"": null,
        ""mod"": null,
        ""passive"": null,
        ""prof"": null,
        ""total"": null
      },
      ""itm"": {
        ""value"": 0,
        ""ability"": ""cha"",
        ""bonuses"": {
          ""check"": """",
          ""passive"": """"
        },
        ""bonus"": null,
        ""mod"": null,
        ""passive"": null,
        ""prof"": null,
        ""total"": null
      },
      ""inv"": {
        ""value"": 1,
        ""ability"": ""int"",
        ""bonuses"": {
          ""check"": """",
          ""passive"": """"
        },
        ""bonus"": null,
        ""mod"": null,
        ""passive"": null,
        ""prof"": null,
        ""total"": null
      },
      ""med"": {
        ""value"": 0,
        ""ability"": ""wis"",
        ""bonuses"": {
          ""check"": """",
          ""passive"": """"
        },
        ""bonus"": null,
        ""mod"": null,
        ""passive"": null,
        ""prof"": null,
        ""total"": null
      },
      ""nat"": {
        ""value"": 0,
        ""ability"": ""int"",
        ""bonuses"": {
          ""check"": """",
          ""passive"": """"
        },
        ""bonus"": null,
        ""mod"": null,
        ""passive"": null,
        ""prof"": null,
        ""total"": null
      },
      ""prc"": {
        ""value"": 1,
        ""ability"": ""wis"",
        ""bonuses"": {
          ""check"": """",
          ""passive"": """"
        },
        ""bonus"": null,
        ""mod"": null,
        ""passive"": null,
        ""prof"": null,
        ""total"": null
      },
      ""prf"": {
        ""value"": 0,
        ""ability"": ""cha"",
        ""bonuses"": {
          ""check"": """",
          ""passive"": """"
        },
        ""bonus"": null,
        ""mod"": null,
        ""passive"": null,
        ""prof"": null,
        ""total"": null
      },
      ""per"": {
        ""value"": 0,
        ""ability"": ""cha"",
        ""bonuses"": {
          ""check"": """",
          ""passive"": """"
        },
        ""bonus"": null,
        ""mod"": null,
        ""passive"": null,
        ""prof"": null,
        ""total"": null
      },
      ""rel"": {
        ""value"": 0,
        ""ability"": ""int"",
        ""bonuses"": {
          ""check"": """",
          ""passive"": """"
        },
        ""bonus"": null,
        ""mod"": null,
        ""passive"": null,
        ""prof"": null,
        ""total"": null
      },
      ""slt"": {
        ""value"": 0,
        ""ability"": ""dex"",
        ""bonuses"": {
          ""check"": """",
          ""passive"": """"
        },
        ""bonus"": null,
        ""mod"": null,
        ""passive"": null,
        ""prof"": null,
        ""total"": null
      },
      ""ste"": {
        ""value"": 0,
        ""ability"": ""dex"",
        ""bonuses"": {
          ""check"": """",
          ""passive"": """"
        },
        ""bonus"": null,
        ""mod"": null,
        ""passive"": null,
        ""prof"": null,
        ""total"": null
      },
      ""sur"": {
        ""value"": 0,
        ""ability"": ""wis"",
        ""bonuses"": {
          ""check"": """",
          ""passive"": """"
        },
        ""bonus"": null,
        ""mod"": null,
        ""passive"": null,
        ""prof"": null,
        ""total"": null
      }
    },
    ""spells"": {
      ""spell1"": {
        ""value"": 4,
        ""override"": 4,
        ""max"": 4,
        ""level"": null
      },
      ""spell2"": {
        ""value"": 3,
        ""override"": 3,
        ""max"": 3,
        ""level"": null
      },
      ""spell3"": {
        ""value"": 2,
        ""override"": 2,
        ""max"": 2,
        ""level"": null
      },
      ""spell4"": {
        ""value"": 0,
        ""override"": 0,
        ""max"": 0,
        ""level"": null
      },
      ""spell5"": {
        ""value"": 0,
        ""override"": 0,
        ""max"": 0,
        ""level"": null
      },
      ""spell6"": {
        ""value"": 0,
        ""override"": 0,
        ""max"": 0,
        ""level"": null
      },
      ""spell7"": {
        ""value"": 0,
        ""override"": 0,
        ""max"": 0,
        ""level"": null
      },
      ""spell8"": {
        ""value"": 0,
        ""override"": 0,
        ""max"": 0,
        ""level"": null
      },
      ""spell9"": {
        ""value"": 0,
        ""override"": 0,
        ""max"": 0,
        ""level"": null
      },
      ""pact"": {
        ""value"": 0,
        ""override"": null,
        ""max"": null,
        ""level"": null
      },
      ""spell0"": {
        ""deprecated"": null,
        ""max"": null,
        ""value"": 0
      }
    },
    ""bonuses"": {
      ""mwak"": {
        ""attack"": null,
        ""damage"": null
      },
      ""rwak"": {
        ""attack"": null,
        ""damage"": null
      },
      ""msak"": {
        ""attack"": null,
        ""damage"": null
      },
      ""rsak"": {
        ""attack"": null,
        ""damage"": null
      },
      ""abilities"": {
        ""check"": null,
        ""save"": null,
        ""skill"": null
      },
      ""spell"": {
        ""dc"": null
      }
    },
    ""resources"": {
      ""primary"": {
        ""value"": null,
        ""max"": null,
        ""sr"": false,
        ""lr"": false,
        ""label"": """"
      },
      ""secondary"": {
        ""value"": null,
        ""max"": null,
        ""sr"": false,
        ""lr"": false,
        ""label"": """"
      },
      ""tertiary"": {
        ""value"": null,
        ""max"": null,
        ""sr"": false,
        ""lr"": false,
        ""label"": """"
      }
    }
  },
  ""prototypeToken"": {
    ""flags"": {},
    ""name"": ""Adelwolf \""Raven\"" Cawthorne"",
    ""displayName"": 30,
    ""width"": 1,
    ""height"": 1,
    ""lockRotation"": false,
    ""rotation"": 0,
    ""actorLink"": true,
    ""disposition"": 1,
    ""displayBars"": 20,
    ""bar1"": {
      ""attribute"": ""attributes.hp""
    },
    ""bar2"": {
      ""attribute"": ""attributes.ac.value""
    },
    ""randomImg"": false,
    ""alpha"": 1,
    ""light"": {
      ""alpha"": 1,
      ""angle"": 360,
      ""bright"": 0,
      ""coloration"": 1,
      ""dim"": 0,
      ""luminosity"": 0.5,
      ""saturation"": 0,
      ""contrast"": 0,
      ""shadows"": 0,
      ""animation"": {
        ""speed"": 5,
        ""intensity"": 5,
        ""type"": null,
        ""reverse"": false
      },
      ""darkness"": {
        ""min"": 0,
        ""max"": 1
      },
      ""color"": null,
      ""attenuation"": 0.5
    },
    ""texture"": {
      ""src"": ""icons/vtt-512.png"",
      ""tint"": null,
      ""scaleX"": null,
      ""scaleY"": null,
      ""offsetX"": null,
      ""offsetY"": null,
      ""rotation"": null
    },
    ""sight"": {
      ""angle"": null,
      ""enabled"": true,
      ""range"": 30,
      ""brightness"": null,
      ""visionMode"": null,
      ""color"": null,
      ""attenuation"": null,
      ""saturation"": null,
      ""contrast"": null
    },
    ""detectionModes"": []
  },
  ""items"": [
    {
      ""id"": null,
      ""name"": ""Magus"",
      ""type"": ""class"",
      ""system"": {
        ""description"": {
          ""value"": null,
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": ""No description found for custom class."",
        ""activation"": null,
        ""duration"": null,
        ""target"": null,
        ""range"": null,
        ""uses"": null,
        ""consume"": null,
        ""ability"": ""empty"",
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": null,
        ""critical"": null,
        ""damage"": null,
        ""formula"": null,
        ""save"": null,
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": false,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": ""magus"",
        ""levels"": 9,
        ""hitDice"": ""d10"",
        ""hitDiceUsed"": 0,
        ""advancement"": [],
        ""saves"": [
          ""cha""
        ],
        ""skills"": {
          ""number"": 0,
          ""choices"": [],
          ""value"": []
        },
        ""spellcasting"": {
          ""progression"": ""none"",
          ""ability"": ""int""
        },
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": """",
        ""bonus"": """"
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/vtt-512.png"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Oath of Conquest"",
      ""type"": ""subclass"",
      ""system"": {
        ""description"": {
          ""value"": """",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": null,
        ""activation"": null,
        ""duration"": null,
        ""target"": null,
        ""range"": null,
        ""uses"": null,
        ""consume"": null,
        ""ability"": ""empty"",
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": null,
        ""critical"": null,
        ""damage"": null,
        ""formula"": null,
        ""save"": null,
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": false,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": ""oath_of_conquest"",
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": 0,
        ""advancement"": [],
        ""saves"": [
          ""cha""
        ],
        ""skills"": {
          ""number"": 0,
          ""choices"": [],
          ""value"": []
        },
        ""spellcasting"": {
          ""progression"": ""None"",
          ""ability"": ""empty""
        },
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": ""magus"",
        ""attuned"": null,
        ""toolType"": """",
        ""bonus"": """"
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/vtt-512.png"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Prismari Student"",
      ""type"": ""background"",
      ""system"": {
        ""description"": {
          ""value"": """",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": ""SCC"",
        ""activation"": null,
        ""duration"": null,
        ""target"": null,
        ""range"": null,
        ""uses"": null,
        ""consume"": null,
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": null,
        ""critical"": null,
        ""damage"": null,
        ""formula"": null,
        ""save"": null,
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/sundries/documents/document-bound-white-tan.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Background Feature: Prismari Initiate"",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": ""<p>You gain the {@feat Strixhaven Initiate|SCC} feat and must choose Prismari within it.</p><p>In addition, if you have the Spellcasting or Pact Magic feature, the spells on the Prismari Spells table are added to the spell list of your spellcasting class. (If you are a multiclass character with multiple spell lists, these spells are added to all of them.)</p><p></p><p>Consider customizing how your spells look when you cast them. You might wield your Prismari spells with dynamic, gestural movement—as much dance as somatic component. Even a blast of fire in your hands is a sculpted work of art; elemental forces make grand designs as you hurl spells. These forces might linger on your body or in your clothes as decorative elements after your spells are dissipated, as sparks dance in your hair and your touch leaves tracings of frost on whatever you touch.</p>"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": ""SCC"",
        ""activation"": {
          ""type"": """",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": ""Prismari Student"",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/sundries/documents/document-bound-white-tan.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Racial Trait: Shadar-kai"",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": ""my creature type is humanoid, elf"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": ""MPMB"",
        ""activation"": {
          ""type"": """",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": """",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/environment/people/group.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Racial Trait: • Trance"",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": ""I don't need to sleep, and magic can't put me to sleep. I can finish a long rest in 4 hours while meditating consciously. At the end of the trance, I gain 2 weapon/tool proficiencies until the end of my next long rest."",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": ""MPMB"",
        ""activation"": {
          ""type"": """",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": """",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/environment/people/group.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Racial Trait: • Blessing of the Raven Queen"",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": ""Prof Bonus per long rest, as a bonus action, I can magically teleport up to 30 ft to an unoccupied space I can see. Once I reach 3rd level, I then also appear translucent and have resistance to all damage until the start of my next turn."",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": ""MPMB"",
        ""activation"": {
          ""type"": ""bonus"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": """",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/environment/people/group.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Class Feature: Magus  , level 9:"",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": """",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": "" level 9:"",
        ""activation"": {
          ""type"": """",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": ""Oath of Conquest)"",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/vtt-512.png"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Class Feature: Arcane Sight   [Intelligence modifier per long rest]"",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": ""I can cast detect magic as a ritual. Additionally, as an action, I can touch a creature\nor object and cast identify without requiring any components. I can cast it this way a\nnumber of times equal to my Int mod. When I finish a long rest, I regain all expended uses.\n"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": "" PHB 84) [Intelligence modifier per long rest]"",
        ""activation"": {
          ""type"": """",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": 1,
          ""max"": 1,
          ""per"": ""lr"",
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": ""Magus 1"",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/vtt-512.png"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Class Feature: Touch of Magic   [9× per long rest]"",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": ""As an action, I touch a creature and spend up to my Int mod. They gain 5 temp hp per use.\nAt any point, they can give up remaining temp hp to get a bonus to an attack, check, or save\nequal to the uses spent.\n"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": "" PHB 84) [9× per long rest]"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": 9,
          ""max"": 9,
          ""per"": ""lr"",
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": ""Magus 1"",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/vtt-512.png"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Class Feature: Elemental Smite  "",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": ""When I hit a melee weapon attack, I can expend a spell slot to do +[[/r 2d8]] radiant damage.\nThis damage must be of a type dealt by a leveled Magus spell I have prepared.\n"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": "" PHB 85)"",
        ""activation"": {
          ""type"": """",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": ""Magus 2"",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/vtt-512.png"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Class Feature: Knowledge Arcana  "",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": ""I have advantage on Arcana checks to reveal info about something I see.\n"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": "" PHB 85)"",
        ""activation"": {
          ""type"": """",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": ""Magus 3"",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/vtt-512.png"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Class Feature: Channel Arcana   [1× per short rest]"",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": ""\n"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": "" PHB 85) [1× per short rest]"",
        ""activation"": {
          ""type"": """",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": 1,
          ""max"": 1,
          ""per"": ""sr"",
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": ""Magus 3"",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/vtt-512.png"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Class Feature: Channel Divinity: Guided Strike  "",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": ""When I make an attack roll, I can add a +10 bonus to the roll after seeing the [[/r d20]] roll.\n\n"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": "" XGtE 38)"",
        ""activation"": {
          ""type"": """",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": ""Oath of Conquest 3"",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/vtt-512.png"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Class Feature: Form of Dread  "",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": ""As a bonus action, I can transform for 1 minute and gain the following benefits:\n• Once per turns when I hit an attack, I can force the target to make a Wis save.\nIf the target fails this save, it is frightened of me until the end of my next turn.\n"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": "" VRGtR 30)"",
        ""activation"": {
          ""type"": ""bonus"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": ""Oath of Conquest 3"",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/vtt-512.png"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Class Feature: Aura of Protection   [10-foot aura]"",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": ""While I'm conscious, allies within range and I can add my Int mod (min 1) to saves.\n"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": "" PHB 85) [10-foot aura]"",
        ""activation"": {
          ""type"": """",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": ""Magus 6"",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/vtt-512.png"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Class Feature: Aura of Conquest   [10-foot aura; 4 psychic damage]"",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": ""Creatures that are frightened of me have their speed reduced to 0 while in my aura\nThey also take psychic damage whenever they start theirs turn within my aura.\n"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": "" XGtE 38) [10-foot aura; 4 psychic damage]"",
        ""activation"": {
          ""type"": """",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": ""Oath of Conquest 7"",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/vtt-512.png"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Class Feature: Channel Arcana: Harness Arcane Power   [2× per long rest]"",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": ""As a bonus action, I can expend a use of my channel arcana to regain one used spell slot.\nThe level of this spell slot can be no more than half my Proficiency Bonus (rounded up).\nI can only do this so many times per long rest, even if I have uses of channel divinity left.\n"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": "" TCoE 52) [2× per long rest]"",
        ""activation"": {
          ""type"": ""bonus"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": 2,
          ""max"": 2,
          ""per"": ""lr"",
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": ""Optional Magus 3"",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/vtt-512.png"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Class Feature: Spellstrike: As a bonus action while holding a melee weapon, I can expend a spell slot to imbue a Magus spell of 1st-level or higher into the weapon. The next time that I hit a creature with a weapon imbued with a spell, the target of the attack becomes the target of the imbued spell along with the normal damage of the weapon."",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": ""Area of Effect. Only the creature hit by the weapon attack suffers the effects of the spell.\nSaving Throws. It makes the saving throw when hit by the attack.\nSpell Attacks. The spell takes effect when the target is hit, without a spell attack roll.\nConcentration. I do not need to concentrate on the spell until the spell takes effect on hit.\nSpells imbued within a weapon are expended on hit. Unused spells dispel at the end of my next long rest.\n"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": """",
        ""activation"": {
          ""type"": """",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": """",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/vtt-512.png"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Class Feature: Extra Attack"",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": ""Beginning at 5th level, you can attack twice, instead of once, whenever you take the @action[Attack] action on your turn.\r\n\r\nThe number of attacks increases to three when you reach 11th level in this class and to four when you reach 20th level in this class."",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": """",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": ""Fighter 5, Barbarian 5, Monk 5, Paladin 5, Ranger 5"",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/vtt-512.png"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Feat: Strixhaven Initiate [Prismari]"",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": ""I learn two cantrips (Fire Bolt, Prestidigitation, or Ray of Frost) and a 1st-level spell from the bard or sorcerer spell list. I can cast the spell once per long rest at its lowest level without expending a spell slot, and can cast it if I have a spell slot to do so. I can choose Int, Wis, or Cha as my spellcasting ability for this."",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": ""MPMB"",
        ""activation"": {
          ""type"": """",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": """",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/skills/social/intimidation-impressing.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Feat: Skill Expert"",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": ""I gain proficiency in one skill and expertise in that same skill or another skill I'm proficient with. [+1 to one ability score of my choice]"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": ""MPMB"",
        ""activation"": {
          ""type"": """",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": """",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/skills/social/intimidation-impressing.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Feat: Observant"",
      ""type"": ""feat"",
      ""system"": {
        ""description"": {
          ""value"": ""If I can see a creature's mouth while it is speaking a language I understand, I can interpret what it's saying by reading its lips. I have a +5 bonus to passive Wisdom (Perception) and passive Intelligence (Investigation) scores. [+1 Intelligence or Wisdom]"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": ""MPMB"",
        ""activation"": {
          ""type"": """",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""empty""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""empty"",
          ""dc"": null,
          ""scaling"": ""spell"",
          ""value"": null
        },
        ""requirements"": """",
        ""recharge"": {
          ""value"": null,
          ""charged"": false
        },
        ""featType"": {
          ""value"": """",
          ""deprecated"": null,
          ""type"": null,
          ""label"": null
        },
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": [],
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/skills/social/intimidation-impressing.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Black ink, 1 ounce bottle of"",
      ""type"": ""loot"",
      ""system"": {
        ""description"": {
          ""value"": ""No description"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""none"",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""empty""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""none""
        },
        ""range"": {
          ""value"": 0,
          ""long"": 0,
          ""units"": """"
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": false,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": 0
        },
        ""ability"": ""empty"",
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": null,
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": 1,
        ""weight"": 0.0,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": ""empty"",
        ""identified"": true,
        ""consumableType"": """",
        ""armor"": {
          ""value"": null,
          ""type"": null,
          ""dex"": null
        },
        ""hp"": {
          ""value"": null,
          ""max"": null,
          ""dt"": null,
          ""conditions"": """"
        },
        ""weaponType"": null,
        ""baseItem"": """",
        ""properties"": {
          ""ver"": null,
          ""amm"": null,
          ""hvy"": null,
          ""fin"": null,
          ""fir"": null,
          ""foc"": null,
          ""lgt"": null,
          ""lod"": null,
          ""rch"": null,
          ""rel"": null,
          ""ret"": null,
          ""spc"": null,
          ""thr"": null,
          ""two"": null,
          ""mgc"": null,
          ""value"": null
        },
        ""proficient"": true,
        ""speed"": {
          ""value"": null,
          ""conditions"": """"
        },
        ""strength"": null,
        ""stealth"": false,
        ""capacity"": {
          ""type"": ""Unknown capacity"",
          ""value"": null,
          ""weightless"": false
        },
        ""currency"": {
          ""pp"": 0,
          ""gp"": 0,
          ""ep"": 0,
          ""sp"": 0,
          ""cp"": 0
        },
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": """",
        ""bonus"": """"
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/containers/chest/chest-simple-walnut.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Ink Pen"",
      ""type"": ""consumable"",
      ""system"": {
        ""description"": {
          ""value"": """",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""Phb"",
        ""activation"": {
          ""type"": ""none"",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""empty""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""none""
        },
        ""range"": {
          ""value"": 0,
          ""long"": 0,
          ""units"": """"
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": false,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": 0
        },
        ""ability"": ""empty"",
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": null,
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": 1,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": ""empty"",
        ""identified"": true,
        ""consumableType"": """",
        ""armor"": {
          ""value"": null,
          ""type"": null,
          ""dex"": null
        },
        ""hp"": {
          ""value"": null,
          ""max"": null,
          ""dt"": null,
          ""conditions"": """"
        },
        ""weaponType"": null,
        ""baseItem"": """",
        ""properties"": {
          ""ver"": null,
          ""amm"": null,
          ""hvy"": null,
          ""fin"": null,
          ""fir"": null,
          ""foc"": null,
          ""lgt"": null,
          ""lod"": null,
          ""rch"": null,
          ""rel"": null,
          ""ret"": null,
          ""spc"": null,
          ""thr"": null,
          ""two"": null,
          ""mgc"": null,
          ""value"": null
        },
        ""proficient"": true,
        ""speed"": {
          ""value"": null,
          ""conditions"": """"
        },
        ""strength"": null,
        ""stealth"": false,
        ""capacity"": {
          ""type"": ""Unknown capacity"",
          ""value"": null,
          ""weightless"": false
        },
        ""currency"": {
          ""pp"": 0,
          ""gp"": 0,
          ""ep"": 0,
          ""sp"": 0,
          ""cp"": 0
        },
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": """",
        ""bonus"": """"
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/containers/chest/chest-simple-walnut.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Artisan's tools or musical instrument"",
      ""type"": ""loot"",
      ""system"": {
        ""description"": {
          ""value"": ""No description"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""none"",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""empty""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""none""
        },
        ""range"": {
          ""value"": 0,
          ""long"": 0,
          ""units"": """"
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": false,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": 0
        },
        ""ability"": ""empty"",
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": null,
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": 1,
        ""weight"": 0.0,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": ""empty"",
        ""identified"": true,
        ""consumableType"": """",
        ""armor"": {
          ""value"": null,
          ""type"": null,
          ""dex"": null
        },
        ""hp"": {
          ""value"": null,
          ""max"": null,
          ""dt"": null,
          ""conditions"": """"
        },
        ""weaponType"": null,
        ""baseItem"": """",
        ""properties"": {
          ""ver"": null,
          ""amm"": null,
          ""hvy"": null,
          ""fin"": null,
          ""fir"": null,
          ""foc"": null,
          ""lgt"": null,
          ""lod"": null,
          ""rch"": null,
          ""rel"": null,
          ""ret"": null,
          ""spc"": null,
          ""thr"": null,
          ""two"": null,
          ""mgc"": null,
          ""value"": null
        },
        ""proficient"": true,
        ""speed"": {
          ""value"": null,
          ""conditions"": """"
        },
        ""strength"": null,
        ""stealth"": false,
        ""capacity"": {
          ""type"": ""Unknown capacity"",
          ""value"": null,
          ""weightless"": false
        },
        ""currency"": {
          ""pp"": 0,
          ""gp"": 0,
          ""ep"": 0,
          ""sp"": 0,
          ""cp"": 0
        },
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": """",
        ""bonus"": """"
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/tools/hand/hammer-and-nail.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""1 vials of captured rain water"",
      ""type"": ""loot"",
      ""system"": {
        ""description"": {
          ""value"": ""No description"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""none"",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""empty""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""none""
        },
        ""range"": {
          ""value"": 0,
          ""long"": 0,
          ""units"": """"
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": false,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": 0
        },
        ""ability"": ""empty"",
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": null,
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": 1,
        ""weight"": 0.0,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": ""empty"",
        ""identified"": true,
        ""consumableType"": """",
        ""armor"": {
          ""value"": null,
          ""type"": null,
          ""dex"": null
        },
        ""hp"": {
          ""value"": null,
          ""max"": null,
          ""dt"": null,
          ""conditions"": """"
        },
        ""weaponType"": null,
        ""baseItem"": """",
        ""properties"": {
          ""ver"": null,
          ""amm"": null,
          ""hvy"": null,
          ""fin"": null,
          ""fir"": null,
          ""foc"": null,
          ""lgt"": null,
          ""lod"": null,
          ""rch"": null,
          ""rel"": null,
          ""ret"": null,
          ""spc"": null,
          ""thr"": null,
          ""two"": null,
          ""mgc"": null,
          ""value"": null
        },
        ""proficient"": true,
        ""speed"": {
          ""value"": null,
          ""conditions"": """"
        },
        ""strength"": null,
        ""stealth"": false,
        ""capacity"": {
          ""type"": ""Unknown capacity"",
          ""value"": null,
          ""weightless"": false
        },
        ""currency"": {
          ""pp"": 0,
          ""gp"": 0,
          ""ep"": 0,
          ""sp"": 0,
          ""cp"": 0
        },
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": """",
        ""bonus"": """"
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/equipment/head/cap-leather-brown.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Scroll Bless (DC 11 INT to learn)"",
      ""type"": ""loot"",
      ""system"": {
        ""description"": {
          ""value"": ""No description"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""none"",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""empty""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""none""
        },
        ""range"": {
          ""value"": 0,
          ""long"": 0,
          ""units"": """"
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": false,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": 0
        },
        ""ability"": ""empty"",
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": null,
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": 1,
        ""weight"": 0.0,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": ""empty"",
        ""identified"": true,
        ""consumableType"": """",
        ""armor"": {
          ""value"": null,
          ""type"": null,
          ""dex"": null
        },
        ""hp"": {
          ""value"": null,
          ""max"": null,
          ""dt"": null,
          ""conditions"": """"
        },
        ""weaponType"": null,
        ""baseItem"": """",
        ""properties"": {
          ""ver"": null,
          ""amm"": null,
          ""hvy"": null,
          ""fin"": null,
          ""fir"": null,
          ""foc"": null,
          ""lgt"": null,
          ""lod"": null,
          ""rch"": null,
          ""rel"": null,
          ""ret"": null,
          ""spc"": null,
          ""thr"": null,
          ""two"": null,
          ""mgc"": null,
          ""value"": null
        },
        ""proficient"": true,
        ""speed"": {
          ""value"": null,
          ""conditions"": """"
        },
        ""strength"": null,
        ""stealth"": false,
        ""capacity"": {
          ""type"": ""Unknown capacity"",
          ""value"": null,
          ""weightless"": false
        },
        ""currency"": {
          ""pp"": 0,
          ""gp"": 0,
          ""ep"": 0,
          ""sp"": 0,
          ""cp"": 0
        },
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": """",
        ""bonus"": """"
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/containers/chest/chest-simple-walnut.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Potion of Aura Extension (30')"",
      ""type"": ""loot"",
      ""system"": {
        ""description"": {
          ""value"": ""No description"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""none"",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""empty""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""none""
        },
        ""range"": {
          ""value"": 0,
          ""long"": 0,
          ""units"": """"
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": false,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": 0
        },
        ""ability"": ""empty"",
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": null,
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": 1,
        ""weight"": 0.0,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": ""empty"",
        ""identified"": true,
        ""consumableType"": """",
        ""armor"": {
          ""value"": null,
          ""type"": null,
          ""dex"": null
        },
        ""hp"": {
          ""value"": null,
          ""max"": null,
          ""dt"": null,
          ""conditions"": """"
        },
        ""weaponType"": null,
        ""baseItem"": """",
        ""properties"": {
          ""ver"": null,
          ""amm"": null,
          ""hvy"": null,
          ""fin"": null,
          ""fir"": null,
          ""foc"": null,
          ""lgt"": null,
          ""lod"": null,
          ""rch"": null,
          ""rel"": null,
          ""ret"": null,
          ""spc"": null,
          ""thr"": null,
          ""two"": null,
          ""mgc"": null,
          ""value"": null
        },
        ""proficient"": true,
        ""speed"": {
          ""value"": null,
          ""conditions"": """"
        },
        ""strength"": null,
        ""stealth"": false,
        ""capacity"": {
          ""type"": ""Unknown capacity"",
          ""value"": null,
          ""weightless"": false
        },
        ""currency"": {
          ""pp"": 0,
          ""gp"": 0,
          ""ep"": 0,
          ""sp"": 0,
          ""cp"": 0
        },
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": """",
        ""bonus"": """"
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/consumables/potions/bottle-bulb-corked-green.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Handy Haversack"",
      ""type"": ""loot"",
      ""system"": {
        ""description"": {
          ""value"": ""No description"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""none"",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""empty""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""none""
        },
        ""range"": {
          ""value"": 0,
          ""long"": 0,
          ""units"": """"
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": false,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": 0
        },
        ""ability"": ""empty"",
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": null,
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": 1,
        ""weight"": 0.0,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": ""empty"",
        ""identified"": true,
        ""consumableType"": """",
        ""armor"": {
          ""value"": null,
          ""type"": null,
          ""dex"": null
        },
        ""hp"": {
          ""value"": null,
          ""max"": null,
          ""dt"": null,
          ""conditions"": """"
        },
        ""weaponType"": null,
        ""baseItem"": """",
        ""properties"": {
          ""ver"": null,
          ""amm"": null,
          ""hvy"": null,
          ""fin"": null,
          ""fir"": null,
          ""foc"": null,
          ""lgt"": null,
          ""lod"": null,
          ""rch"": null,
          ""rel"": null,
          ""ret"": null,
          ""spc"": null,
          ""thr"": null,
          ""two"": null,
          ""mgc"": null,
          ""value"": null
        },
        ""proficient"": true,
        ""speed"": {
          ""value"": null,
          ""conditions"": """"
        },
        ""strength"": null,
        ""stealth"": false,
        ""capacity"": {
          ""type"": ""Unknown capacity"",
          ""value"": null,
          ""weightless"": false
        },
        ""currency"": {
          ""pp"": 0,
          ""gp"": 0,
          ""ep"": 0,
          ""sp"": 0,
          ""cp"": 0
        },
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": """",
        ""bonus"": """"
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/containers/chest/chest-simple-walnut.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Golem crystal"",
      ""type"": ""loot"",
      ""system"": {
        ""description"": {
          ""value"": ""No description"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""none"",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""empty""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""none""
        },
        ""range"": {
          ""value"": 0,
          ""long"": 0,
          ""units"": """"
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": false,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": 0
        },
        ""ability"": ""empty"",
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": null,
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": 1,
        ""weight"": 0.0,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": ""empty"",
        ""identified"": true,
        ""consumableType"": """",
        ""armor"": {
          ""value"": null,
          ""type"": null,
          ""dex"": null
        },
        ""hp"": {
          ""value"": null,
          ""max"": null,
          ""dt"": null,
          ""conditions"": """"
        },
        ""weaponType"": null,
        ""baseItem"": """",
        ""properties"": {
          ""ver"": null,
          ""amm"": null,
          ""hvy"": null,
          ""fin"": null,
          ""fir"": null,
          ""foc"": null,
          ""lgt"": null,
          ""lod"": null,
          ""rch"": null,
          ""rel"": null,
          ""ret"": null,
          ""spc"": null,
          ""thr"": null,
          ""two"": null,
          ""mgc"": null,
          ""value"": null
        },
        ""proficient"": true,
        ""speed"": {
          ""value"": null,
          ""conditions"": """"
        },
        ""strength"": null,
        ""stealth"": false,
        ""capacity"": {
          ""type"": ""Unknown capacity"",
          ""value"": null,
          ""weightless"": false
        },
        ""currency"": {
          ""pp"": 0,
          ""gp"": 0,
          ""ep"": 0,
          ""sp"": 0,
          ""cp"": 0
        },
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": """",
        ""bonus"": """"
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/commodities/treasure/crystal-pedastal-red-gold.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Academy uniform"",
      ""type"": ""loot"",
      ""system"": {
        ""description"": {
          ""value"": ""No description"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""none"",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""empty""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""none""
        },
        ""range"": {
          ""value"": 0,
          ""long"": 0,
          ""units"": """"
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": false,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": 0
        },
        ""ability"": ""empty"",
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": null,
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": 1,
        ""weight"": 0.0,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": ""empty"",
        ""identified"": true,
        ""consumableType"": """",
        ""armor"": {
          ""value"": null,
          ""type"": null,
          ""dex"": null
        },
        ""hp"": {
          ""value"": null,
          ""max"": null,
          ""dt"": null,
          ""conditions"": """"
        },
        ""weaponType"": null,
        ""baseItem"": """",
        ""properties"": {
          ""ver"": null,
          ""amm"": null,
          ""hvy"": null,
          ""fin"": null,
          ""fir"": null,
          ""foc"": null,
          ""lgt"": null,
          ""lod"": null,
          ""rch"": null,
          ""rel"": null,
          ""ret"": null,
          ""spc"": null,
          ""thr"": null,
          ""two"": null,
          ""mgc"": null,
          ""value"": null
        },
        ""proficient"": true,
        ""speed"": {
          ""value"": null,
          ""conditions"": """"
        },
        ""strength"": null,
        ""stealth"": false,
        ""capacity"": {
          ""type"": ""Unknown capacity"",
          ""value"": null,
          ""weightless"": false
        },
        ""currency"": {
          ""pp"": 0,
          ""gp"": 0,
          ""ep"": 0,
          ""sp"": 0,
          ""cp"": 0
        },
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": """",
        ""bonus"": """"
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/containers/chest/chest-simple-walnut.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Pouch"",
      ""type"": ""backpack"",
      ""system"": {
        ""description"": {
          ""value"": ""A cloth or leather pouch can hold up to 20 sling bullets or 50 blowgun needles, among other things. A compartmentalized pouch for holding spell components is called a component pouch. A pouch can hold up to ⅕ cubic foot or 6 pounds of gear."",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""Phb"",
        ""activation"": {
          ""type"": ""none"",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""empty""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""none""
        },
        ""range"": {
          ""value"": 0,
          ""long"": 0,
          ""units"": """"
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": false,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": 0
        },
        ""ability"": ""empty"",
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": null,
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": 1,
        ""weight"": 1.0,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": ""empty"",
        ""identified"": true,
        ""consumableType"": """",
        ""armor"": {
          ""value"": null,
          ""type"": null,
          ""dex"": null
        },
        ""hp"": {
          ""value"": null,
          ""max"": null,
          ""dt"": null,
          ""conditions"": """"
        },
        ""weaponType"": null,
        ""baseItem"": """",
        ""properties"": {
          ""ver"": null,
          ""amm"": null,
          ""hvy"": null,
          ""fin"": null,
          ""fir"": null,
          ""foc"": null,
          ""lgt"": null,
          ""lod"": null,
          ""rch"": null,
          ""rel"": null,
          ""ret"": null,
          ""spc"": null,
          ""thr"": null,
          ""two"": null,
          ""mgc"": null,
          ""value"": null
        },
        ""proficient"": true,
        ""speed"": {
          ""value"": null,
          ""conditions"": """"
        },
        ""strength"": null,
        ""stealth"": false,
        ""capacity"": {
          ""type"": ""Unknown capacity"",
          ""value"": null,
          ""weightless"": false
        },
        ""currency"": {
          ""pp"": 0,
          ""gp"": 0,
          ""ep"": 0,
          ""sp"": 0,
          ""cp"": 0
        },
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": """",
        ""bonus"": """"
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/containers/bags/coinpouch-simple-leather-brown.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Silver dragon's wrath rapier (stirring)"",
      ""type"": ""weapon"",
      ""system"": {
        ""description"": {
          ""value"": ""Finesse; +[[/r 1d6]] cold damage; On 20: 5 cold damage to chosen in 5 ft of target<br>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""MPMB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""empty""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""none""
        },
        ""range"": {
          ""value"": 5,
          ""long"": null,
          ""units"": ""ft""
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": false,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": 0
        },
        ""ability"": ""dex"",
        ""actionType"": ""mwak"",
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [
            [
              ""1d8 + @mod + 1"",
              ""piercing""
            ]
          ],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": 1,
        ""weight"": 0.0,
        ""price"": null,
        ""equipped"": true,
        ""rarity"": ""common"",
        ""identified"": true,
        ""consumableType"": """",
        ""armor"": {
          ""value"": null,
          ""type"": null,
          ""dex"": null
        },
        ""hp"": {
          ""value"": null,
          ""max"": null,
          ""dt"": null,
          ""conditions"": """"
        },
        ""weaponType"": ""simpleM"",
        ""baseItem"": """",
        ""properties"": {
          ""ver"": null,
          ""amm"": null,
          ""hvy"": null,
          ""fin"": true,
          ""fir"": null,
          ""foc"": null,
          ""lgt"": null,
          ""lod"": null,
          ""rch"": null,
          ""rel"": null,
          ""ret"": null,
          ""spc"": null,
          ""thr"": null,
          ""two"": null,
          ""mgc"": null,
          ""value"": null
        },
        ""proficient"": true,
        ""speed"": {
          ""value"": null,
          ""conditions"": """"
        },
        ""strength"": null,
        ""stealth"": false,
        ""capacity"": {
          ""type"": ""Unknown capacity"",
          ""value"": null,
          ""weightless"": false
        },
        ""currency"": {
          ""pp"": 0,
          ""gp"": 0,
          ""ep"": 0,
          ""sp"": 0,
          ""cp"": 0
        },
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": """",
        ""bonus"": """"
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/weapons/swords/sword-simple-white.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Whip of wounding"",
      ""type"": ""weapon"",
      ""system"": {
        ""description"": {
          ""value"": ""Finesse<br>reach<br>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""MPMB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""empty""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""none""
        },
        ""range"": {
          ""value"": 5,
          ""long"": null,
          ""units"": ""ft""
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": false,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": 0
        },
        ""ability"": ""dex"",
        ""actionType"": ""mwak"",
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": [
            [
              ""1d4 + @mod"",
              ""slashing""
            ]
          ],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": 1,
        ""weight"": 0.0,
        ""price"": null,
        ""equipped"": true,
        ""rarity"": ""common"",
        ""identified"": true,
        ""consumableType"": """",
        ""armor"": {
          ""value"": null,
          ""type"": null,
          ""dex"": null
        },
        ""hp"": {
          ""value"": null,
          ""max"": null,
          ""dt"": null,
          ""conditions"": """"
        },
        ""weaponType"": ""simpleM"",
        ""baseItem"": """",
        ""properties"": {
          ""ver"": null,
          ""amm"": null,
          ""hvy"": null,
          ""fin"": true,
          ""fir"": null,
          ""foc"": null,
          ""lgt"": null,
          ""lod"": null,
          ""rch"": true,
          ""rel"": null,
          ""ret"": null,
          ""spc"": null,
          ""thr"": null,
          ""two"": null,
          ""mgc"": null,
          ""value"": null
        },
        ""proficient"": true,
        ""speed"": {
          ""value"": null,
          ""conditions"": """"
        },
        ""strength"": null,
        ""stealth"": false,
        ""capacity"": {
          ""type"": ""Unknown capacity"",
          ""value"": null,
          ""weightless"": false
        },
        ""currency"": {
          ""pp"": 0,
          ""gp"": 0,
          ""ep"": 0,
          ""sp"": 0,
          ""cp"": 0
        },
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": """",
        ""bonus"": """"
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/weapons/misc/whip-red-yellow.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Serpent Scale Armor"",
      ""type"": ""loot"",
      ""system"": {
        ""description"": {
          ""value"": ""No description"",
          ""chat"": """",
          ""unidentified"": """"
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""none"",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""empty""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""none""
        },
        ""range"": {
          ""value"": 0,
          ""long"": 0,
          ""units"": """"
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": false,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": 0
        },
        ""ability"": ""empty"",
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": null,
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": 1,
        ""weight"": 0.0,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": ""empty"",
        ""identified"": true,
        ""consumableType"": """",
        ""armor"": {
          ""value"": null,
          ""type"": null,
          ""dex"": null
        },
        ""hp"": {
          ""value"": null,
          ""max"": null,
          ""dt"": null,
          ""conditions"": """"
        },
        ""weaponType"": null,
        ""baseItem"": """",
        ""properties"": {
          ""ver"": null,
          ""amm"": null,
          ""hvy"": null,
          ""fin"": null,
          ""fir"": null,
          ""foc"": null,
          ""lgt"": null,
          ""lod"": null,
          ""rch"": null,
          ""rel"": null,
          ""ret"": null,
          ""spc"": null,
          ""thr"": null,
          ""two"": null,
          ""mgc"": null,
          ""value"": null
        },
        ""proficient"": true,
        ""speed"": {
          ""value"": null,
          ""conditions"": """"
        },
        ""strength"": null,
        ""stealth"": false,
        ""capacity"": {
          ""type"": ""Unknown capacity"",
          ""value"": null,
          ""weightless"": false
        },
        ""currency"": {
          ""pp"": 0,
          ""gp"": 0,
          ""ep"": 0,
          ""sp"": 0,
          ""cp"": 0
        },
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": """",
        ""bonus"": """"
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/equipment/chest/breastplate-cuirass-steel-grey.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Shield"",
      ""type"": ""equipment"",
      ""system"": {
        ""description"": {
          ""value"": ""A shield is made from wood or metal and is carried in one hand. Wielding a shield increases your Armor Class by 2. You can benefit from only one shield at a time."",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": """",
        ""activation"": {
          ""type"": ""none"",
          ""cost"": null,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 0,
          ""units"": ""empty""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": """",
          ""type"": ""none""
        },
        ""range"": {
          ""value"": 0,
          ""long"": 0,
          ""units"": """"
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": false,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": """",
          ""target"": null,
          ""amount"": 0
        },
        ""ability"": ""empty"",
        ""actionType"": null,
        ""attackBonus"": null,
        ""chatFlavor"": """",
        ""critical"": null,
        ""damage"": {
          ""parts"": null,
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": 1,
        ""weight"": 6.0,
        ""price"": null,
        ""equipped"": true,
        ""rarity"": ""empty"",
        ""identified"": true,
        ""consumableType"": """",
        ""armor"": {
          ""value"": 2,
          ""type"": ""shield"",
          ""dex"": null
        },
        ""hp"": {
          ""value"": null,
          ""max"": null,
          ""dt"": null,
          ""conditions"": """"
        },
        ""weaponType"": null,
        ""baseItem"": """",
        ""properties"": {
          ""ver"": null,
          ""amm"": null,
          ""hvy"": null,
          ""fin"": null,
          ""fir"": null,
          ""foc"": null,
          ""lgt"": null,
          ""lod"": null,
          ""rch"": null,
          ""rel"": null,
          ""ret"": null,
          ""spc"": null,
          ""thr"": null,
          ""two"": null,
          ""mgc"": null,
          ""value"": null
        },
        ""proficient"": true,
        ""speed"": {
          ""value"": null,
          ""conditions"": """"
        },
        ""strength"": null,
        ""stealth"": false,
        ""capacity"": {
          ""type"": ""Unknown capacity"",
          ""value"": null,
          ""weightless"": false
        },
        ""currency"": {
          ""pp"": 0,
          ""gp"": 0,
          ""ep"": 0,
          ""sp"": 0,
          ""cp"": 0
        },
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": null,
        ""school"": null,
        ""components"": null,
        ""materials"": null,
        ""preparation"": null,
        ""scaling"": null,
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": """",
        ""bonus"": """"
      },
      ""sort"": null,
      ""flags"": null,
      ""img"": ""icons/equipment/shield/heater-wooden-brown-axe.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Booming Blade"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Radius: 5 feet<br><b>Duration:</b> Timed: 1 round<br><b>Material components:</b> A melee weapon worth at least 1 sp<br></p><p>You brandish the weapon used in the spell's casting and make a melee attack with it against one creature within 5 feet of you. On a hit, the target suffers the weapon attack's normal effects and then becomes sheathed in booming energy until the start of your next turn. If the target willingly moves 5 feet or more before then, the target takes [[/r 1d8]] thunder damage, and the spell ends.<br>This spell's damage increases when you reach certain levels. At 5th level, the melee attack deals an extra [[/r 1d8]] thunder damage to the target on a hit, and the damage the target takes for moving increases to [[/r 2d8]]. Both damage rolls increase by [[/r 1d8]] at 11th level ([[/r 2d8]] and [[/r 3d8]]) and again at 17th level ([[/r 3d8]] and [[/r 4d8]]).<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""TCE"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": 1,
          ""width"": null,
          ""units"": """",
          ""type"": ""creature""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [
            [
              ""(floor(((@details.level + @details.spellLevel) + 1) / 6))d8[on hit]"",
              ""thunder""
            ]
          ],
          ""versatile"": ""(floor(((@details.level + @details.spellLevel) + 1) / 6) + 1)d8[on willing movement]"",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 0,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": false,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": ""A melee weapon worth at least 1 sp"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": null,
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/skills/melee/strike-sword-dagger-runes-red.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Frostbite"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 60 feet<br><b>Duration:</b> Instant<br></p><p>You cause numbing frost to form on one creature that you can see within range. The target must make a Constitution saving throw. On a failed save, the target takes [[/r 1d6]] cold damage, and it has disadvantage on the next weapon attack roll it makes before the end of its next turn.<br>The spell's damage increases by [[/r 1d6]] when you reach 5th level ([[/r 2d6]]), 11th level ([[/r 3d6]]), and 17th level ([[/r 4d6]]).<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""XGE"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": null,
          ""units"": ""inst""
        },
        ""target"": {
          ""value"": 1,
          ""width"": null,
          ""units"": """",
          ""type"": ""creature""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""con"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 0,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": ""cantrip"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/water/projectile-ice-snowball.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Prestidigitation"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 10 feet<br><b>Duration:</b> Timed: 1 hour<br></p><p>This spell is a minor magical trick that novice spellcasters use for practice. You create one of the following magical effects within range:<br>    \""You create an instantaneous, harmless sensory effect, such as a shower of sparks, a puff of wind, faint musical notes, or an odd odor.\"",\r<br>    \""You instantaneously light or snuff out a candle, a torch, or a small campfire.\"",\r<br>    \""You instantaneously clean or soil an object no larger than 1 cubic foot.\"",\r<br>    \""You chill, warm, or flavor up to 1 cubic foot of nonliving material for 1 hour.\"",\r<br>    \""You make a color, a small mark, or a symbol appear on an object or a surface for 1 hour.\"",\r<br>    \""You create a nonmagical trinket or an illusory image that can fit in your hand and that lasts until the end of your next turn.\""\r<br>If you cast this spell multiple times, you can have up to three of its non-instantaneous effects active at a time, and you can dismiss such an effect as an action.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""hour""
        },
        ""target"": {
          ""value"": 10,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""space""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 0,
        ""school"": ""trs"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": ""cantrip"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/air/wind-vortex-swirl-blue.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Ray of Frost"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 60 feet<br><b>Duration:</b> Instant<br></p><p>A frigid beam of blue-white light streaks toward a creature within range. Make a ranged spell attack against the target. On a hit, it takes [[/r 1d8]] cold damage, and its speed is reduced by 10 feet until the start of your next turn.<br>The spell's damage increases by [[/r 1d8]] when you reach 5th level ([[/r 2d8]]), 11th level ([[/r 3d8]]), and 17th level ([[/r 4d8]]).<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": null,
          ""units"": ""inst""
        },
        ""target"": {
          ""value"": 60,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""space""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""rsak"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 0,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": ""cantrip"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/water/projectile-ice-snowball.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Command"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 60 feet<br><b>Duration:</b> Timed: 1 round<br></p><p>You speak a one-word command to a creature you can see within range. The target must succeed on a Wisdom saving throw or follow the command on its next turn. The spell has no effect if the target is undead, if it doesn't understand your language, or if your command is directly harmful to it.<br>Some typical commands and their effects follow. You might issue a command other than one described here. If you do so, the DM determines how the target behaves. If the target can't follow your command, the spell ends.<br>  Approach\r<br>    \""The target moves toward you by the shortest and most direct route, ending its turn if it moves within 5 feet of you.\""\r<br>  Drop\r<br>    \""The target drops whatever it is holding and then ends its turn.\""\r<br>  Flee\r<br>    \""The target spends its turn moving away from you by the fastest available means.\""\r<br>  Grovel\r<br>    \""The target falls @condition[prone] and then ends its turn.\""\r<br>  Halt\r<br>    \""The target doesn't move and takes no actions. A flying creature stays aloft, provided that it is able to do so. If it must move to stay aloft, it flies the minimum distance needed to remain in the air.\""\r<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 2nd level or higher, you can affect one additional creature for each slot level above 1st. The creatures must be within 30 feet of each other when you target them.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": 60,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""space""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""wis"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": false,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/skills/social/diplomacy-handshake.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Compelled Duel"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 bonus <br><b>Range:</b> Point: 30 feet<br><b>Duration:</b> Timed: 1 minute<br></p><p>You attempt to compel a creature into a duel. One creature that you can see within range must make a Wisdom saving throw. On a failed save, the creature is drawn to you, compelled by your divine demand. For the duration, it has disadvantage on attack rolls against creatures other than you, and must make a Wisdom saving throw each time it attempts to move to a space that is more than 30 feet away from you; if it succeeds on this saving throw, this spell doesn't restrict the target's movement for that turn.<br>The spell ends if you attack any other creature, if you cast a spell that targets a hostile creature other than the target, if a creature friendly to you damages the target or casts a harmful spell on it, or if you end your turn more than 30 feet away from the target.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""bonus"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 30,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""space""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""wis"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": false,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/weapons/swords/swords-short.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Comprehend Languages"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: self<br><b>Duration:</b> Timed: 1 hour<br><b>Material components:</b> A pinch of soot and salt<br></p><p>For the duration, you understand the literal meaning of any spoken language that you hear. You also understand any written language that you see, but you must be touching the surface on which the words are written. It takes about 1 minute to read one page of text.<br>This spell doesn't decode secret messages in a text or a glyph, such as an arcane sigil, that isn't part of a written language.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""hour""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": null,
          ""type"": ""self""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""div"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": true,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": ""A pinch of soot and salt"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/symbols/runes-etched-steel-blade.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Detect Magic"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: self<br><b>Duration:</b> Timed: 10 minute<br></p><p>For the duration, you sense the presence of magic within 30 feet of you. If you sense magic in this way, you can use your action to see a faint aura around any visible creature or object in the area that bears magic, and you learn its @book[school of magic|PHB|10|The Schools of Magic], if any.<br>The spell can penetrate most barriers, but it is blocked by 1 foot of stone, 1 inch of common metal, a thin sheet of lead, or 3 feet of wood or dirt.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 10,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": null,
          ""type"": ""self""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""div"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": true,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/perception/eye-ringed-glow-angry-teal.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Disguise Self"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: self<br><b>Duration:</b> Timed: 1 hour<br></p><p>You make yourself—including your clothing, armor, weapons, and other belongings on your person—look different until the spell ends or until you use your action to dismiss it. You can seem 1 foot shorter or taller and can appear thin, fat, or in between. You can't change your body type, so you must adopt a form that has the same basic arrangement of limbs. Otherwise, the extent of the illusion is up to you.<br>The changes wrought by this spell fail to hold up to physical inspection. For example, if you use this spell to add a hat to your outfit, objects pass through the hat, and anyone who touches it would feel nothing or would feel your head and hair. If you use this spell to appear thinner than you are, the hand of someone who reaches out to touch you would bump into you while it was seemingly still in midair.<br>To discern that you are disguised, a creature can use its action to inspect your appearance and must succeed on an Intelligence (@skill[Investigation]) check against your spell save DC.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""hour""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": null,
          ""type"": ""self""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""ill"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/creatures/eyes/humanoid-single-blind.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Dissonant Whispers"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 60 feet<br><b>Duration:</b> Instant<br></p><p>You whisper a discordant melody that only one creature of your choice within range can hear, wracking it with terrible pain. The target must make a Wisdom saving throw. On a failed save, it takes [[/r 3d6]] psychic damage and must immediately use its reaction, if available, to move as far as its speed allows away from you. The creature doesn't move into obviously dangerous ground, such as a fire or a pit. On a successful save, the target takes half as much damage and doesn't have to move away. A @condition[deafened] creature automatically succeeds on the save.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 2nd level or higher, the damage increases by [[/r 1d6]] for each slot level above 1st.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": null,
          ""units"": ""inst""
        },
        ""target"": {
          ""value"": 60,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""space""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""wis"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": false,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/light/projectiles-star-purple.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Faerie Fire"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 60 feet<br><b>Duration:</b> Timed: 1 minute<br></p><p>Each object in a 20-foot cube within range is outlined in blue, green, or violet light (your choice). Any creature in the area when the spell is cast is also outlined in light if it fails a Dexterity saving throw. For the duration, objects and affected creatures shed dim light in a 10-foot radius.<br>Any attack roll against an affected creature or object has advantage if the attacker can see it, and the affected creature or object can't benefit from being @condition[invisible].<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 20,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""cube""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""dex"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": false,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/fire/beam-jet-stream-trails-orange.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Find Familiar"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 hour <br><b>Range:</b> Point: 10 feet<br><b>Duration:</b> Instant<br><b>Material components:</b> 10 gp worth of charcoal, incense, and herbs that must be consumed by fire in a brass brazier<br></p><p>You gain the service of a familiar, a spirit that takes an animal form you choose: @creature[bat], @creature[cat], @creature[crab], @creature[frog] (toad), @creature[hawk], @creature[lizard], @creature[octopus], @creature[owl], @creature[poisonous snake], fish (@creature[quipper]), @creature[rat], @creature[raven], @creature[sea horse], @creature[spider], or @creature[weasel]. Appearing in an unoccupied space within range, the familiar has the statistics of the chosen form, though it is a celestial, fey, or fiend (your choice) instead of a beast.<br>@note[Additional {@filter animal form choices|bestiary|Miscellaneous=Familiar] may be available at the DM's discretion.}<br>Your familiar acts independently of you, but it always obeys your commands. In combat, it rolls its own initiative and acts on its own turn. A familiar can't attack, but it can take other actions as normal.<br>When the familiar drops to 0 hit points, it disappears, leaving behind no physical form. It reappears after you cast this spell again. As an action, you can temporarily dismiss the familiar to a pocket dimension. Alternatively, you can dismiss it forever. As an action while it is temporarily dismissed, you can cause it to reappear in any unoccupied space within 30 feet of you. Whenever the familiar drops to 0 hit points or disappears into the pocket dimension, it leaves behind in its space anything it was wearing or carrying.<br>While your familiar is within 100 feet of you, you can communicate with it telepathically. Additionally, as an action, you can see through your familiar's eyes and hear what it hears until the start of your next turn, gaining the benefits of any special senses that the familiar has. During this time, you are @condition[deafened||deaf] and @condition[blinded||blind] with regard to your own senses.<br>You can't have more than one familiar at a time. If you cast this spell while you already have a familiar, you instead cause it to adopt a new form. Choose one of the forms from the above list. Your familiar transforms into the chosen creature.<br>Finally, when you cast a spell with a range of touch, your familiar can deliver the spell as if it had cast the spell. Your familiar must be within 100 feet of you, and it must use its reaction to deliver the spell when you cast it. If the spell requires an attack roll, you use your attack modifier for the roll.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""hour"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": null,
          ""units"": ""inst""
        },
        ""target"": {
          ""value"": 10,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""space""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""con"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": true,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": ""10 gp worth of charcoal, incense, and herbs that must be consumed by fire in a brass brazier"",
          ""consumed"": true,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/creatures/mammals/rodent-rat-diseaed-gray.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Ice Knife"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 60 feet<br><b>Duration:</b> Instant<br><b>Material components:</b> A drop of water or piece of ice<br></p><p>You create a shard of ice and fling it at one creature within range. Make a ranged spell attack against the target. On a hit, the target takes [[/r 1d10]] piercing damage. Hit or miss, the shard then explodes. The target and each creature within 5 feet of it must succeed on a Dexterity saving throw or take [[/r 2d6]] cold damage.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 2nd level or higher, the cold damage increases by [[/r 1d6]] for each slot level above 1st.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""XGE"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": null,
          ""units"": ""inst""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": null,
          ""type"": null
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [
            [
              ""1d10[to target]"",
              ""piercing""
            ],
            [
              ""(floor(@item.level + 1))d6[splash]"",
              ""cold""
            ]
          ],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""dex"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""con"",
        ""components"": {
          ""value"": null,
          ""vocal"": false,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": ""A drop of water or piece of ice"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": null,
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/water/strike-ice-blade-fang.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Identify"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 minute <br><b>Range:</b> Point: touch<br><b>Duration:</b> Instant<br><b>Material components:</b> A pearl worth at least 100 gp and an owl feather<br></p><p>You choose one object that you must touch throughout the casting of the spell. If it is a magic item or some other magic-imbued object, you learn its properties and how to use them, whether it requires attunement to use, and how many charges it has, if any. You learn whether any spells are affecting the item and what they are. If the item was created by a spell, you learn which spell created it.<br>If you instead touch a creature throughout the casting, you learn what spells, if any, are currently affecting it.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""minute"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": null,
          ""units"": ""inst""
        },
        ""target"": {
          ""value"": 1,
          ""width"": null,
          ""units"": null,
          ""type"": ""creature""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""div"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": true,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": ""A pearl worth at least 100 gp and an owl feather"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/perception/orb-eye-scrying.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Mage Armor"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: touch<br><b>Duration:</b> Timed: 8 hour<br><b>Material components:</b> A piece of cured leather<br></p><p>You touch a willing creature who isn't wearing armor, and a protective magical force surrounds it until the spell ends. The target's base AC becomes 13 + its Dexterity modifier. The spell ends if the target dons armor or if you dismiss the spell as an action.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 8,
          ""units"": ""hour""
        },
        ""target"": {
          ""value"": 1,
          ""width"": null,
          ""units"": null,
          ""type"": ""ally""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""abj"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": ""A piece of cured leather"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/defensive/shield-barrier-flaming-pentagon-blue.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Protection from Evil and Good"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: touch<br><b>Duration:</b> Timed: 10 minute<br><b>Material components:</b> Holy water or powdered silver and iron, which the spell consumes<br></p><p>Until the spell ends, one willing creature you touch is protected against certain types of creatures: aberrations, celestials, elementals, fey, fiends, and undead.<br>The protection grants several benefits. Creatures of those types have disadvantage on attack rolls against the target. The target also can't be @condition[charmed], @condition[frightened], or possessed by them. If the target is already @condition[charmed], @condition[frightened], or possessed by such a creature, the target has advantage on any new saving throw against the relevant effect.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 10,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 1,
          ""width"": null,
          ""units"": null,
          ""type"": ""creature""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""abj"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": ""Holy water or powdered silver and iron, which the spell consumes"",
          ""consumed"": true,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/defensive/shield-barrier-flaming-pentagon-blue.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Searing Smite"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 bonus <br><b>Range:</b> Point: self<br><b>Duration:</b> Timed: 1 minute<br></p><p>The next time you hit a creature with a melee weapon attack during the spell's duration, your weapon flares with white-hot intensity, and the attack deals an extra [[/r 1d6]] fire damage to the target and causes the target to ignite in flames. At the start of each of its turns until the spell ends, the target must make a Constitution saving throw. On a failed save, it takes [[/r 1d6]] fire damage. On a successful save, the spell ends. If the target or a creature within 5 feet of it uses an action to put out the flames, or if some other effect douses the flames (such as the target being submerged in water), the spell ends.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 2nd level or higher, the initial extra damage dealt by the attack increases by [[/r 1d6]] for each slot level above 1st.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""bonus"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": null,
          ""type"": ""self""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""con"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": false,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/lightning/bolt-strike-streak-yellow.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Shield"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 reaction  which you take when you are hit by an attack or targeted by the @spell[magic missile] spell<br><b>Range:</b> Point: self<br><b>Duration:</b> Timed: 1 round<br></p><p>An invisible barrier of magical force appears and protects you. Until the start of your next turn, you have a +5 bonus to AC, including against the triggering attack, and you take no damage from @spell[magic missile].<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""reaction"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": null,
          ""type"": ""self""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""abj"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/defensive/shield-barrier-blue.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Thunderous Smite"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 bonus <br><b>Range:</b> Point: self<br><b>Duration:</b> Timed: 1 minute<br></p><p>The first time you hit with a melee weapon attack during this spell's duration, your weapon rings with thunder that is audible within 300 feet of you, and the attack deals an extra [[/r 2d6]] thunder damage to the target. Additionally, if the target is a creature, it must succeed on a Strength saving throw or be pushed 10 feet away from you and knocked @condition[prone].<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""bonus"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": null,
          ""type"": ""self""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""str"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": false,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/lightning/bolt-strike-streak-yellow.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Thunderwave"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Cube: 15 feet<br><b>Duration:</b> Instant<br></p><p>A wave of thunderous force sweeps out from you. Each creature in a 15-foot cube originating from you must make a Constitution saving throw. On a failed save, a creature takes [[/r 2d8]] thunder damage and is pushed 10 feet away from you. On a successful save, the creature takes half as much damage and isn't pushed.<br>In addition, unsecured objects that are completely within the area of effect are automatically pushed 10 feet away from you by the spell's effect, and the spell emits a thunderous boom audible out to 300 feet.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 2nd level or higher, the damage increases by [[/r 1d8]] for each slot level above 1st.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": null,
          ""units"": ""inst""
        },
        ""target"": {
          ""value"": 15,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""cube""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""con"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/sonic/explosion-impact-shock-wave.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Wrathful Smite"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 bonus <br><b>Range:</b> Point: self<br><b>Duration:</b> Timed: 1 minute<br></p><p>The next time you hit with a melee weapon attack during this spell's duration, your attack deals an extra [[/r 1d6]] psychic damage. Additionally, if the target is a creature, it must make a Wisdom saving throw or be @condition[frightened] of you until the spell ends. As an action, the creature can make a Wisdom check against your spell save DC to steel its resolve and end this spell.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""bonus"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": null,
          ""type"": ""self""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""wis"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": false,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/lightning/bolt-strike-streak-yellow.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Absorb Elements"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 reaction  which you take when you take acid, cold, fire, lightning, or thunder damage<br><b>Range:</b> Point: self<br><b>Duration:</b> Timed: 1 round<br></p><p>The spell captures some of the incoming energy, lessening its effect on you and storing it for your next melee attack. You have resistance to the triggering damage type until the start of your next turn. Also, the first time you hit with a melee attack on your next turn, the target takes an extra [[/r 1d6]] damage of the triggering type, and the spell ends.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 2nd level or higher, the extra damage increases by [[/r 1d6]] for each slot level above 1st.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""XGE"",
        ""activation"": {
          ""type"": ""reaction"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": null,
          ""type"": ""self""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""abj"",
        ""components"": {
          ""value"": null,
          ""vocal"": false,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/water/orb-ice-opaque.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Armor of Agathys"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: self<br><b>Duration:</b> Timed: 1 hour<br><b>Material components:</b> A cup of water<br></p><p>A protective magical force surrounds you, manifesting as a spectral frost that covers you and your gear. You gain 5 temporary hit points for the duration. If a creature hits you with a melee attack while you have these hit points, the creature takes 5 cold damage.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 2nd level or higher, both the temporary hit points and the cold damage increase by 5 for each slot level above 1st.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""hour""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": null,
          ""type"": ""self""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""abj"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": ""A cup of water"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/defensive/shield-barrier-flaming-pentagon-blue.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Bane"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 30 feet<br><b>Duration:</b> Timed: 1 minute<br><b>Material components:</b> A drop of blood<br></p><p>Up to three creatures of your choice that you can see within range must make Charisma saving throws. Whenever a target that fails this saving throw makes an attack roll or a saving throw before the spell ends, the target must roll a [[/r d4]] and subtract the number rolled from the attack roll or saving throw.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 2nd level or higher, you can target one additional creature for each slot level above 1st.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 30,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""space""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""cha"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": ""A drop of blood"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/control/fear-fright-shadow-monster-green.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Chromatic Orb"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 90 feet<br><b>Duration:</b> Instant<br><b>Material components:</b> A diamond worth at least 50 gp<br></p><p>You hurl a 4-inch-diameter sphere of energy at a creature that you can see within range. You choose acid, cold, fire, lightning, poison, or thunder for the type of orb you create, and then make a ranged spell attack against the target. If the attack hits, the creature takes [[/r 3d8]] damage of the type you chose.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 2nd level or higher, the damage increases by [[/r 1d8]] for each slot level above 1st.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": null,
          ""units"": ""inst""
        },
        ""target"": {
          ""value"": 90,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""space""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""rsak"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": ""A diamond worth at least 50 gp"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/water/orb-ice-opaque.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Magic Missile"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 120 feet<br><b>Duration:</b> Instant<br></p><p>You create three glowing darts of magical force. Each dart hits a creature of your choice that you can see within range. A dart deals [[/r 1d4]] + 1 force damage to its target. The darts all strike simultaneously, and you can direct them to hit one creature or several.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 2nd level or higher, the spell creates one more dart for each slot level above 1st.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": null,
          ""units"": ""inst""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": null,
          ""type"": null
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [
            [
              ""(1d4 + 1) * (2 + @item.level)"",
              ""force""
            ]
          ],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 1,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/light/projectiles-star-purple.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Blindness/Deafness"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 30 feet<br><b>Duration:</b> Timed: 1 minute<br></p><p>You can blind or deafen a foe. Choose one creature that you can see within range to make a Constitution saving throw. If it fails, the target is either @condition[blinded] or @condition[deafened] (your choice) for the duration. At the end of each of its turns, the target can make a Constitution saving throw. On a success, the spell ends.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 3rd level or higher, you can target one additional creature for each slot level above 2nd.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 30,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""space""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""con"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 2,
        ""school"": ""nec"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": false,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/creatures/eyes/humanoid-single-blind.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Branding Smite"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 bonus <br><b>Range:</b> Point: self<br><b>Duration:</b> Timed: 1 minute<br></p><p>The next time you hit a creature with a weapon attack before this spell ends, the weapon gleams with astral radiance as you strike. The attack deals an extra [[/r 2d6]] radiant damage to the target, which becomes visible if it's @condition[invisible], and the target sheds dim light in a 5-foot radius and can't become @condition[invisible] until the spell ends.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 3rd level or higher, the extra damage increases by [[/r 1d6]] for each slot level above 2nd.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""bonus"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": null,
          ""type"": ""self""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 2,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": false,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/lightning/bolt-strike-streak-yellow.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Darkness"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 60 feet<br><b>Duration:</b> Timed: 10 minute<br><b>Material components:</b> Bat fur and a drop of pitch or piece of coal<br></p><p>Magical darkness spreads from a point you choose within range to fill a 15-foot-radius sphere for the duration. The darkness spreads around corners. A creature with @sense[darkvision] can't see through this darkness, and nonmagical light can't illuminate it.<br>If the point you choose is on an object you are holding or one that isn't being worn or carried, the darkness emanates from the object and moves with it. Completely covering the source of the darkness with an opaque object, such as a bowl or a helm, blocks the darkness.<br>If any of this spell's area overlaps with an area of light created by a spell of 2nd level or lower, the spell that created the light is dispelled.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 10,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 15,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""sphere""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 2,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": false,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": ""Bat fur and a drop of pitch or piece of coal"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/unholy/barrier-shield-glowing-pink.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Find Steed"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 10 minute <br><b>Range:</b> Point: 30 feet<br><b>Duration:</b> Instant<br></p><p>You summon a spirit that assumes the form of an unusually intelligent, strong, and loyal steed, creating a long-lasting bond with it. Appearing in an unoccupied space within range, the steed takes on a form that you choose: a @creature[warhorse], a @creature[pony], a @creature[camel], an @creature[elk], or a @creature[mastiff]. (Your DM might allow other animals to be summoned as steeds.) The steed has the statistics of the chosen form, though it is a celestial, fey, or fiend (your choice) instead of its normal type. Additionally, if your steed has an Intelligence of 5 or less, its Intelligence becomes 6, and it gains the ability to understand one language of your choice that you speak.<br>Your steed serves you as a mount, both in combat and out, and you have an instinctive bond with it that allows you to fight as a seamless unit. While mounted on your steed, you can make any spell you cast that targets only you also target your steed.<br>When the steed drops to 0 hit points, it disappears, leaving behind no physical form. You can also dismiss your steed at any time as an action, causing it to disappear. In either case, casting this spell again summons the same steed, restored to its hit point maximum.<br>While your steed is within 1 mile of you, you can communicate with each other telepathically.<br>You can't have more than one steed bonded by this spell at a time. As an action, you can release the steed from its bond at any time, causing it to disappear.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""minute"",
          ""cost"": 10,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": null,
          ""units"": ""inst""
        },
        ""target"": {
          ""value"": 30,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""space""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 2,
        ""school"": ""con"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/perception/third-eye-blue-red.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Flaming Sphere"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 60 feet<br><b>Duration:</b> Timed: 1 minute<br><b>Material components:</b> A bit of tallow, a pinch of brimstone, and a dusting of powdered iron<br></p><p>A 5-foot-diameter sphere of fire appears in an unoccupied space of your choice within range and lasts for the duration. Any creature that ends its turn within 5 feet of the sphere must make a Dexterity saving throw. The creature takes [[/r 2d6]] fire damage on a failed save, or half as much damage on a successful one.<br>As a bonus action, you can move the sphere up to 30 feet. If you ram the sphere into a creature, that creature must make the saving throw against the sphere's damage, and the sphere stops moving this turn.<br>When you move the sphere, you can direct it over barriers up to 5 feet tall and jump it across pits up to 10 feet wide. The sphere ignites flammable objects not being worn or carried, and it sheds bright light in a 20-foot radius and dim light for an additional 20 feet.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 3rd level or higher, the damage increases by [[/r 1d6]] for each slot level above 2nd.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 3,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""sphere""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""dex"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 2,
        ""school"": ""con"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": ""A bit of tallow, a pinch of brimstone, and a dusting of powdered iron"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/light/projectiles-star-purple.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Hold Person"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 60 feet<br><b>Duration:</b> Timed: 1 minute<br><b>Material components:</b> A small, straight piece of iron<br></p><p>Choose a humanoid that you can see within range. The target must succeed on a Wisdom saving throw or be @condition[paralyzed] for the duration. At the end of each of its turns, the target can make another Wisdom saving throw. On a success, the spell ends on the target.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 3rd level or higher, you can target one additional humanoid for each slot level above 2nd. The humanoids must be within 30 feet of each other when you target them.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 60,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""space""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""wis"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 2,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": ""A small, straight piece of iron"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/control/silhouette-hold-change-blue.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Kinetic Jaunt"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 bonus <br><b>Range:</b> Point: self<br><b>Duration:</b> Timed: 1 minute<br></p><p>You magically empower your movement with dance-like steps, giving yourself the following benefits for the duration.<br>    \""Your walking speed increases by 10 feet.\"",\r<br>    \""You don't provoke opportunity attacks.\"",\r<br>    \""You can move through the space of another creature, and it doesn't count as @quickref[difficult terrain||3]. If you end your turn in another creature's space, you are shunted to the last unoccupied space you occupied, and you take [[/r 1d8]] force damage.\""\r<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""SCC"",
        ""activation"": {
          ""type"": ""bonus"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": null,
          ""type"": ""self""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 2,
        ""school"": ""trs"",
        ""components"": {
          ""value"": null,
          ""vocal"": false,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/light/projectiles-star-purple.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Mind Spike"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 60 feet<br><b>Duration:</b> Timed: 1 hour<br></p><p>You reach into the mind of one creature you can see within range. The target must make a Wisdom saving throw, taking [[/r 3d8]] psychic damage on a failed save, or half as much damage on a successful one. On a failed save, you also always know the target's location until the spell ends, but only while the two of you are on the same plane of existence. While you have this knowledge, the target can't become hidden from you, and if it's @condition[invisible], it gains no benefit from that condition against you.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 3rd level or higher, the damage increases by [[/r 1d8]] for each slot level above 2nd.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""XGE"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""hour""
        },
        ""target"": {
          ""value"": 60,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""space""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""wis"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 2,
        ""school"": ""div"",
        ""components"": {
          ""value"": null,
          ""vocal"": false,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/perception/eye-ringed-glow-angry-large-red.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Mirror Image"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: self<br><b>Duration:</b> Timed: 1 minute<br></p><p>Three illusory duplicates of yourself appear in your space. Until the spell ends, the duplicates move with you and mimic your actions, shifting position so it's impossible to track which image is real. You can use your action to dismiss the illusory duplicates.<br>Each time a creature targets you with an attack during the spell's duration, roll a [[/r d20]] to determine whether the attack instead targets one of your duplicates.<br>If you have three duplicates, you must roll a 6 or higher to change the attack's target to a duplicate. With two duplicates, you must roll an 8 or higher. With one duplicate, you must roll an 11 or higher.<br>A duplicate's AC equals 10 + your Dexterity modifier. If an attack hits a duplicate, the duplicate is destroyed. A duplicate can be destroyed only by an attack that hits it. It ignores all other damage and effects. The spell ends when all three duplicates are destroyed.<br>A creature is unaffected by this spell if it can't see, if it relies on senses other than sight, such as blindsight, or if it can perceive illusions as false, as with @sense[truesight].<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": null,
          ""type"": ""self""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 2,
        ""school"": ""ill"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/defensive/illusion-evasion-echo-purple.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Phantasmal Force"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 60 feet<br><b>Duration:</b> Timed: 1 minute<br><b>Material components:</b> A bit of fleece<br></p><p>You craft an illusion that takes root in the mind of a creature that you can see within range. The target must make an Intelligence saving throw. On a failed save, you create a phantasmal object, creature, or other visible phenomenon of your choice that is no larger than a 10-foot cube and that is perceivable only to the target for the duration. This spell has no effect on undead or constructs.<br>The phantasm includes sound, temperature, and other stimuli, also evident only to the creature.<br>The target can use its action to examine the phantasm with an Intelligence (@skill[Investigation]) check against your spell save DC. If the check succeeds, the target realizes that the phantasm is an illusion, and the spell ends.<br>While a target is affected by the spell, the target treats the phantasm as if it were real. The target rationalizes any illogical outcomes from interacting with the phantasm. For example, a target attempting to walk across a phantasmal bridge that spans a chasm falls once it steps onto the bridge. If the target survives the fall, it still believes that the bridge exists and comes up with some other explanation for its fall—it was pushed, it slipped, or a strong wind might have knocked it off.<br>An affected target is so convinced of the phantasm's reality that it can even take damage from the illusion. A phantasm created to appear as a creature can attack the target. Similarly, a phantasm created to appear as fire, a pool of acid, or lava can burn the target. Each round on your turn, the phantasm can deal [[/r 1d6]] psychic damage to the target if it is in the phantasm's area or within 5 feet of the phantasm, provided that the illusion is of a creature or hazard that could logically deal damage, such as by attacking. The target perceives the damage as a type appropriate to the illusion.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 10,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""cube""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""int"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 2,
        ""school"": ""ill"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": ""A bit of fleece"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/unholy/hand-light-green.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Silence"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 120 feet<br><b>Duration:</b> Timed: 10 minute<br></p><p>For the duration, no sound can be created within or pass through a 20-foot-radius sphere centered on a point you choose within range. Any creature or object entirely inside the sphere is immune to thunder damage, and creatures are @condition[deafened] while entirely inside it. Casting a spell that includes a verbal component is impossible there.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 10,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 20,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""sphere""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 2,
        ""school"": ""ill"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": true,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/control/energy-stream-link-large-blue.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Spiritual Weapon"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 bonus <br><b>Range:</b> Point: 60 feet<br><b>Duration:</b> Timed: 1 minute<br></p><p>You create a floating, spectral weapon within range that lasts for the duration or until you cast this spell again. When you cast the spell, you can make a melee spell attack against a creature within 5 feet of the weapon. On a hit, the target takes force damage equal to [[/r 1d8]] + your spellcasting ability modifier.<br>As a bonus action on your turn, you can move the weapon up to 20 feet and repeat the attack against a creature within 5 feet of it.<br>The weapon can take whatever form you choose. Clerics of deities who are associated with a particular weapon (as St. Cuthbert is known for his mace and Thor for his hammer) make this spell's effect resemble that weapon.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 3rd level or higher, the damage increases by [[/r 1d8]] for every two slot levels above 2nd.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": null,
          ""type"": null
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""msak"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [
            [
              ""(floor((@item.level) / 2))d8 + @mod"",
              ""force""
            ]
          ],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 2,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": null,
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/skills/melee/strike-sword-slashing-red.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Tasha's Mind Whip"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 90 feet<br><b>Duration:</b> Timed: 1 round<br></p><p>You psychically lash out at one creature you can see within range. The target must make an Intelligence saving throw. On a failed save, the target takes [[/r 3d6]] psychic damage, and it can't take a reaction until the end of its next turn. Moreover, on its next turn, it must choose whether it gets a move, an action, or a bonus action; it gets only one of the three. On a successful save, the target takes half as much damage and suffers none of the spell's other effects.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 3rd level or higher, you can target one additional creature for each slot level above 2nd. The creatures must be within 30 feet of each other when you target them.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""TCE"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""round""
        },
        ""target"": {
          ""value"": 90,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""space""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""int"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 2,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": false,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/perception/eye-ringed-glow-angry-large-red.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Warding Bond"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: touch<br><b>Duration:</b> Timed: 1 hour<br><b>Material components:</b> A pair of platinum rings worth at least 50 gp each, which you and the target must wear for the duration<br></p><p>This spell wards a willing creature you touch and creates a mystic connection between you and the target until the spell ends. While the target is within 60 feet of you, it gains a +1 bonus to AC and saving throws, and it has resistance to all damage. Also, each time it takes damage, you take the same amount of damage.<br>The spell ends if you drop to 0 hit points or if you and the target become separated by more than 60 feet. It also ends if the spell is cast again on either of the connected creatures. You can also dismiss the spell as an action.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""hour""
        },
        ""target"": {
          ""value"": 1,
          ""width"": null,
          ""units"": null,
          ""type"": ""ally""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 2,
        ""school"": ""abj"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": ""A pair of platinum rings worth at least 50 gp each, which you and the target must wear for the duration"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/defensive/shield-barrier-flaming-diamond-acid.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Zone of Truth"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 60 feet<br><b>Duration:</b> Timed: 10 minute<br></p><p>You create a magical zone that guards against deception in a 15-foot-radius sphere centered on a point of your choice within range. Until the spell ends, a creature that enters the spell's area for the first time on a turn or starts its turn there must make a Charisma saving throw. On a failed save, a creature can't speak a deliberate lie while in the radius. You know whether each creature succeeds or fails on its saving throw.<br>An affected creature is aware of the spell and can thus avoid answering questions to which it would normally respond with a lie. Such creatures can be evasive in its answers as long as it remains within the boundaries of the truth.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 10,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 15,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""sphere""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""cha"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 2,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/control/buff-flight-wings-runes-blue-white.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Haste"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 30 feet<br><b>Duration:</b> Timed: 1 minute<br><b>Material components:</b> A shaving of licorice root<br></p><p>Choose a willing creature that you can see within range. Until the spell ends, the target's speed is doubled, it gains a +2 bonus to AC, it has advantage on Dexterity saving throws, and it gains an additional action on each of its turns. That action can be used only to take the @action[Attack] (one weapon attack only), @action[Dash], @action[Disengage], @action[Hide], or @action[Use an Object] action.<br>When the spell ends, the target can't move or take actions until after its next turn, as a wave of lethargy sweeps over it.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 30,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""space""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""dex"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 3,
        ""school"": ""trs"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": ""A shaving of licorice root"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/light/projectiles-star-purple.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Hunger of Hadar"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 150 feet<br><b>Duration:</b> Timed: 1 minute<br><b>Material components:</b> A pickled octopus tentacle<br></p><p>You open a gateway to the dark between the stars, a region infested with unknown horrors. A 20-foot-radius sphere of blackness and bitter cold appears, centered on a point within range and lasting for the duration. This void is filled with a cacophony of soft whispers and slurping noises that can be heard up to 30 feet away. No light, magical or otherwise, can illuminate the area, and creatures fully within the area are @condition[blinded].<br>The void creates a warp in the fabric of space, and the area is @quickref[difficult terrain||3]. Any creature that starts its turn in the area takes [[/r 2d6]] cold damage. Any creature that ends its turn in the area must succeed on a Dexterity saving throw or take [[/r 2d6]] acid damage as milky, otherworldly tentacles rub against it.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 20,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""sphere""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""dex"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 3,
        ""school"": ""con"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": ""A pickled octopus tentacle"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/unholy/hand-marked-pink.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Major Image"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 120 feet<br><b>Duration:</b> Timed: 10 minute<br><b>Material components:</b> A bit of fleece<br></p><p>You create the image of an object, a creature, or some other visible phenomenon that is no larger than a 20-foot cube. The image appears at a spot that you can see within range and lasts for the duration. It seems completely real, including sounds, smells, and temperature appropriate to the thing depicted. You can't create sufficient heat or cold to cause damage, a sound loud enough to deal thunder damage or deafen a creature, or a smell that might sicken a creature (like a @creature[troglodyte||troglodyte's] stench).<br>As long as you are within range of the illusion, you can use your action to cause the image to move to any other spot within range. As the image changes location, you can alter its appearance so that its movements appear natural for the image. For example, if you create an image of a creature and move it, you can alter the image so that it appears to be walking. Similarly, you can cause the illusion to make different sounds at different times, even making it carry on a conversation, for example.<br>Physical interaction with the image reveals it to be an illusion, because things can pass through it. A creature that uses its action to examine the image can determine that it is an illusion with a successful Intelligence (@skill[Investigation]) check against your spell save DC. If a creature discerns the illusion for what it is, the creature can see through the image, and its other sensory qualities become faint to the creature.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 6th level or higher, the spell lasts until dispelled, without requiring your concentration.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 10,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 20,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""cube""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 3,
        ""school"": ""ill"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": ""A bit of fleece"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/light/projectiles-star-purple.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Sleet Storm"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 150 feet<br><b>Duration:</b> Timed: 1 minute<br><b>Material components:</b> A pinch of dust and a few drops of water<br></p><p>Until the spell ends, freezing rain and sleet fall in a 20-foot-tall cylinder with a 40-foot radius centered on a point you choose within range. The area is heavily obscured, and exposed flames in the area are doused.<br>The ground in the area is covered with slick ice, making it @quickref[difficult terrain||3]. When a creature enters the spell's area for the first time on a turn or starts its turn there, it must make a Dexterity saving throw. On a failed save, it falls @condition[prone].<br>If a creature starts its turn in the spell's area and is concentrating on a spell, the creature must make a successful Constitution saving throw against your spell save DC or lose concentration.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 40,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""cylinder""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""dex"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 3,
        ""school"": ""con"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": ""A pinch of dust and a few drops of water"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/water/water-hand.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Slow"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 120 feet<br><b>Duration:</b> Timed: 1 minute<br><b>Material components:</b> A drop of molasses<br></p><p>You alter time around up to six creatures of your choice in a 40-foot cube within range. Each target must succeed on a Wisdom saving throw or be affected by this spell for the duration.<br>An affected target's speed is halved, it takes a −2 penalty to AC and Dexterity saving throws, and it can't use reactions. On its turn, it can use either an action or a bonus action, not both. Regardless of the creature's abilities or magic items, it can't make more than one melee or ranged attack during its turn.<br>If the creature attempts to cast a spell with a casting time of 1 action, roll a [[/r d20]]. On an 11 or higher, the spell doesn't take effect until the creature's next turn, and the creature must use its action on that turn to complete the spell. If it can't, the spell is wasted.<br>A creature affected by this spell makes another Wisdom saving throw at the end of each of its turns. On a successful save, the effect ends for it.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 40,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""cube""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""dex"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 3,
        ""school"": ""trs"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": ""A drop of molasses"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/time/hourglass-brown-orange.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Speak with Dead"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 10 feet<br><b>Duration:</b> Timed: 10 minute<br><b>Material components:</b> Burning incense<br></p><p>You grant the semblance of life and intelligence to a corpse of your choice within range, allowing it to answer the questions you pose. The corpse must still have a mouth and can't be undead. The spell fails if the corpse was the target of this spell within the last 10 days.<br>Until the spell ends, you can ask the corpse up to five questions. The corpse knows only what it knew in life, including the languages it knew. Answers are usually brief, cryptic, or repetitive, and the corpse is under no compulsion to offer a truthful answer if you are hostile to it or it recognizes you as an enemy. This spell doesn't return the creature's soul to its body, only its animating spirit. Thus, the corpse can't learn new information, doesn't comprehend anything that has happened since it died, and can't speculate about future events.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 10,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 10,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""space""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 3,
        ""school"": ""nec"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": ""Burning incense"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/light/projectiles-star-purple.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Spirit Shroud"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 bonus <br><b>Range:</b> Point: self<br><b>Duration:</b> Timed: 1 minute<br></p><p>You call forth spirits of the dead, which flit around you for the spell's duration. The spirits are intangible and invulnerable.<br>Until the spell ends, any attack you make deals [[/r 1d8]] extra damage when you hit a creature within 10 feet of you. This damage is radiant, necrotic, or cold (your choice when you cast the spell). Any creature that takes this damage can't regain hit points until the start of your next turn.<br>In addition, any creature of your choice that you can see that starts its turn within 10 feet of you has its speed reduced by 10 feet until the start of your next turn.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 4th level or higher, the damage increases by [[/r 1d8]] for every two slot levels above 3rd.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""TCE"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": null,
          ""type"": null
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""heal"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": ""(floor(((@item.level) - 1) / 2))d8"",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 3,
        ""school"": ""nec"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": null,
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/light/projectiles-star-purple.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Water Walk"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 30 feet<br><b>Duration:</b> Timed: 1 hour<br><b>Material components:</b> A piece of cork<br></p><p>This spell grants the ability to move across any liquid surface—such as water, acid, mud, snow, quicksand, or lava—as if it were harmless solid ground (creatures crossing molten lava can still take damage from the heat). Up to ten willing creatures you can see within range gain this ability for the duration.<br>If you target a creature submerged in a liquid, the spell carries the target to the surface of the liquid at a rate of 60 feet per round.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""hour""
        },
        ""target"": {
          ""value"": 30,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""space""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 3,
        ""school"": ""trs"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": true,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": ""A piece of cork"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/water/wave-water-teal.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Bestow Curse"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: touch<br><b>Duration:</b> Timed: 1 minute<br></p><p>You touch a creature, and that creature must succeed on a Wisdom saving throw or become cursed for the duration of the spell. When you cast this spell, choose the nature of the curse from the following options:<br>    \""Choose one ability score. While cursed, the target has disadvantage on ability checks and saving throws made with that ability score.\"",\r<br>    \""While cursed, the target has disadvantage on attack rolls against you.\"",\r<br>    \""While cursed, the target must make a Wisdom saving throw at the start of each of its turns. If it fails, it wastes its action that turn doing nothing.\"",\r<br>    \""While the target is cursed, your attacks and spells deal an extra [[/r 1d8]] necrotic damage to the target.\""\r<br>A @spell[remove curse] spell ends this effect. At the DM's option, you may choose an alternative curse effect, but it should be no more powerful than those described above. The DM has final say on such a curse's effect.<br></p><p><b>Higher Levels. </b>If you cast this spell using a spell slot of 4th level or higher, the duration is concentration, up to 10 minutes. If you use a spell slot of 5th level or higher, the duration is 8 hours. If you use a spell slot of 7th level or higher, the duration is 24 hours. If you use a 9th level spell slot, the spell lasts until it is dispelled. Using a spell slot of 5th level or higher grants a duration that doesn't require concentration.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 1,
          ""width"": null,
          ""units"": null,
          ""type"": ""creature""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""wis"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 3,
        ""school"": ""nec"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/light/projectiles-star-purple.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Blinding Smite"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 bonus <br><b>Range:</b> Point: self<br><b>Duration:</b> Timed: 1 minute<br></p><p>The next time you hit a creature with a melee weapon attack during this spell's duration, your weapon flares with bright light, and the attack deals an extra [[/r 3d8]] radiant damage to the target. Additionally, the target must succeed on a Constitution saving throw or be @condition[blinded] until the spell ends.<br>A creature @condition[blinded] by this spell makes another Constitution saving throw at the end of each of its turns. On a successful save, it is no longer @condition[blinded].<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""bonus"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": null,
          ""type"": ""self""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""con"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 3,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": false,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/lightning/bolt-strike-streak-yellow.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Counterspell"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 reaction  which you take when you see a creature within 60 feet of you casting a spell<br><b>Range:</b> Point: 60 feet<br><b>Duration:</b> Instant<br></p><p>You attempt to interrupt a creature in the process of casting a spell. If the creature is casting a spell of 3rd level or lower, its spell fails and has no effect. If it is casting a spell of 4th level or higher, make an ability check using your spellcasting ability. The DC equals 10 + the spell's level. On a success, the creature's spell fails and has no effect.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 4th level or higher, the interrupted spell has no effect if its level is less than or equal to the level of the spell slot you used.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""reaction"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": null,
          ""units"": ""inst""
        },
        ""target"": {
          ""value"": 60,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""space""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""abil"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 3,
        ""school"": ""abj"",
        ""components"": {
          ""value"": null,
          ""vocal"": false,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/light/projectiles-star-purple.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Daylight"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 60 feet<br><b>Duration:</b> Timed: 1 hour<br></p><p>A 60-foot-radius sphere of light spreads out from a point you choose within range. The sphere is bright light and sheds dim light for an additional 60 feet.<br>If you chose a point on an object you are holding or one that isn't being worn or carried, the light shines from the object and moves with it. Completely covering the affected object with an opaque object, such as a bowl or a helm, blocks the light.<br>If any of this spell's area overlaps with an area of darkness created by a spell of 3rd level or lower, the spell that created the darkness is dispelled.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""hour""
        },
        ""target"": {
          ""value"": 120,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""sphere""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 3,
        ""school"": ""evo"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/light/orb-shadow-blue.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Dispel Magic"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: 120 feet<br><b>Duration:</b> Instant<br></p><p>Choose one creature, object, or magical effect within range. Any spell of 3rd level or lower on the target ends. For each spell of 4th level or higher on the target, make an ability check using your spellcasting ability. The DC equals 10 + the spell's level. On a successful check, the spell ends.<br></p><p><b>Higher Levels. </b>When you cast this spell using a spell slot of 4th level or higher, you automatically end the effects of a spell on the target if the spell's level is equal to or less than the level of the spell slot you used.<br></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": null,
          ""units"": ""inst""
        },
        ""target"": {
          ""value"": 120,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""space""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""abil"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 3,
        ""school"": ""abj"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": false,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": """",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/light/projectiles-star-purple.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Fear"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Cone: 30 feet<br><b>Duration:</b> Timed: 1 minute<br><b>Material components:</b> A white feather or the heart of a hen<br></p><p>You project a phantasmal image of a creature's worst fears. Each creature in a 30-foot cone must succeed on a Wisdom saving throw or drop whatever it is holding and become @condition[frightened] for the duration.<br>While @condition[frightened] by this spell, a creature must take the @action[Dash] action and move away from you by the safest available route on each of its turns, unless there is nowhere to move. If the creature ends its turn in a location where it doesn't have line of sight to you, the creature can make a Wisdom saving throw. On a successful save, the spell ends for that creature.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 30,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""cone""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""wis"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 3,
        ""school"": ""ill"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": ""A white feather or the heart of a hen"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/control/fear-fright-white.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Feign Death"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 action <br><b>Range:</b> Point: touch<br><b>Duration:</b> Timed: 1 hour<br><b>Material components:</b> A pinch of graveyard dirt<br></p><p>You touch a willing creature and put it into a cataleptic state that is indistinguishable from death.<br>For the spell's duration, or until you use an action to touch the target and dismiss the spell, the target appears dead to all outward inspection and to spells used to determine the target's status. The target is @condition[blinded] and @condition[incapacitated], and its speed drops to 0. The target has resistance to all damage except psychic damage. If the target is diseased or @condition[poisoned] when you cast the spell, or becomes diseased or @condition[poisoned] while under the spell's effect, the disease and poison have no effect until the spell ends.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""action"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""hour""
        },
        ""target"": {
          ""value"": 1,
          ""width"": null,
          ""units"": null,
          ""type"": ""ally""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 3,
        ""school"": ""nec"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": true,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": ""A pinch of graveyard dirt"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": false
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/light/projectiles-star-purple.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Legend Lore"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 10 minute <br><b>Range:</b> Point: self<br><b>Duration:</b> Instant<br><b>Material components:</b> Incense worth at least 250 gp, which the spell consumes, and four ivory strips worth at least 50 gp each<br></p><p>Name or describe a person, place, or object. The spell brings to your mind a brief summary of the significant lore about the thing you named. The lore might consist of current tales, forgotten stories, or even secret lore that has never been widely known. If the thing you named isn't of legendary importance, you gain no information. The more information you already have about the thing, the more precise and detailed the information you receive is.<br>The information you learn is accurate but might be couched in figurative language. For example, if you have a mysterious magic axe on hand, the spell might yield this information: \""Woe to the evildoer whose hand touches the axe, for even the haft slices the hand of the evil ones. Only a true Child of Stone, lover and beloved of Moradin, may awaken the true powers of the axe, and only with the sacred word Rudnogg on the lips.\""<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""PHB"",
        ""activation"": {
          ""type"": ""minute"",
          ""cost"": 10,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": null,
          ""units"": ""inst""
        },
        ""target"": {
          ""value"": null,
          ""width"": null,
          ""units"": null,
          ""type"": ""self""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""util"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": null,
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 5,
        ""school"": ""div"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": false
        },
        ""materials"": {
          ""value"": ""Incense worth at least 250 gp, which the spell consumes, and four ivory strips worth at least 50 gp each"",
          ""consumed"": true,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/light/projectiles-star-purple.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    },
    {
      ""id"": null,
      ""name"": ""Fizban's Platinum Shield"",
      ""type"": ""spell"",
      ""system"": {
        ""description"": {
          ""value"": ""<p><b>Casting Time:</b> 1 bonus <br><b>Range:</b> Point: 60 feet<br><b>Duration:</b> Timed: 1 minute<br><b>Material components:</b> A platinum-plated dragon scale, worth at least 500 gp<br></p><p>You create a field of silvery light that surrounds a creature of your choice within range (you can choose yourself). The field sheds dim light out to 5 feet. While surrounded by the field, a creature gains the following benefits:<br>  \""style\"": \""list-hang-notitle\"",\r<br>    {\r<br>      Cover\r<br>        \""The creature has half cover.\""\r<br>      ]\r<br>    },\r<br>    {\r<br>      Damage Resistance\r<br>        \""The creature has resistance to acid, cold, fire, lightning, and poison damage.\""\r<br>      ]\r<br>    },\r<br>    {\r<br>      Evasion\r<br>        \""If the creature is subjected to an effect that allows it to make a Dexterity saving throw to take only half damage, the creature instead takes no damage if it succeeds on the saving throw, and only half damage if it fails.\""\r<br>      ]\r<br>    }\r<br>As a bonus action on subsequent turns, you can move the field to another creature within 60 feet of the field.<br></p><p></p>"",
          ""chat"": null,
          ""unidentified"": null
        },
        ""source"": ""FTD"",
        ""activation"": {
          ""type"": ""bonus"",
          ""cost"": 1,
          ""condition"": """"
        },
        ""duration"": {
          ""value"": 1,
          ""units"": ""minute""
        },
        ""target"": {
          ""value"": 60,
          ""width"": null,
          ""units"": ""ft"",
          ""type"": ""space""
        },
        ""range"": {
          ""value"": null,
          ""long"": null,
          ""units"": null
        },
        ""uses"": {
          ""value"": null,
          ""max"": null,
          ""per"": null,
          ""recovery"": """",
          ""type"": null,
          ""autoDestroy"": null,
          ""autoUse"": null
        },
        ""consume"": {
          ""type"": null,
          ""target"": null,
          ""amount"": null
        },
        ""ability"": null,
        ""actionType"": ""save"",
        ""attackBonus"": 0,
        ""chatFlavor"": """",
        ""critical"": {
          ""threshold"": null,
          ""damage"": null
        },
        ""damage"": {
          ""parts"": [],
          ""versatile"": """",
          ""value"": null
        },
        ""formula"": """",
        ""save"": {
          ""ability"": ""dex"",
          ""dc"": null,
          ""scaling"": ""flat"",
          ""value"": null
        },
        ""requirements"": null,
        ""recharge"": null,
        ""featType"": null,
        ""time"": null,
        ""damageType"": null,
        ""attributes"": null,
        ""attunement"": null,
        ""quantity"": null,
        ""weight"": null,
        ""price"": null,
        ""equipped"": null,
        ""rarity"": null,
        ""identified"": null,
        ""consumableType"": null,
        ""armor"": null,
        ""hp"": null,
        ""weaponType"": null,
        ""baseItem"": null,
        ""properties"": null,
        ""proficient"": null,
        ""speed"": null,
        ""strength"": null,
        ""stealth"": null,
        ""capacity"": null,
        ""currency"": null,
        ""details"": null,
        ""identifier"": null,
        ""levels"": null,
        ""hitDice"": null,
        ""hitDiceUsed"": null,
        ""advancement"": null,
        ""saves"": null,
        ""skills"": null,
        ""spellcasting"": null,
        ""level"": 6,
        ""school"": ""abj"",
        ""components"": {
          ""value"": null,
          ""vocal"": true,
          ""somatic"": true,
          ""material"": true,
          ""ritual"": false,
          ""concentration"": true
        },
        ""materials"": {
          ""value"": ""A platinum-plated dragon scale, worth at least 500 gp"",
          ""consumed"": false,
          ""cost"": null,
          ""supply"": null
        },
        ""preparation"": {
          ""mode"": ""prepared"",
          ""prepared"": true
        },
        ""scaling"": {
          ""mode"": ""level"",
          ""formula"": """"
        },
        ""classIdentifier"": null,
        ""attuned"": null,
        ""toolType"": null,
        ""bonus"": null
      },
      ""sort"": null,
      ""flags"": {
        ""adnd5E"": null,
        ""core"": null,
        ""dnd5E"": null,
        ""plutonium"": null
      },
      ""img"": ""icons/magic/defensive/shield-barrier-blue.webp"",
      ""effects"": null,
      ""folder"": null,
      ""ownership"": null,
      ""stats"": null
    }
  ],
  ""effects"": [],
  ""flags"": {
    ""core"": null,
    ""dnd5E"": {
      ""diamondSoul"": false,
      ""initiativeAdv"": false,
      ""initiativeAlert"": false,
      ""jackOfAllTrades"": false,
      ""observantFeat"": false,
      ""reliableTalent"": false,
      ""remarkableAthlete"": false,
      ""elvenAccuracy"": false,
      ""halflingLucky"": false,
      ""powerfulBuild"": false
    },
    ""exportSource"": null
  },
  ""stats"": null
}"
VbnYkqp5,snowybot lua,coinwalk,JavaScript,Saturday 10th of February 2024 03:48:06 PM CDT,"doc     = balance
chance  = 49.5  
blob    = (doc/1000)
bethigh = false
sad     = (blob*10)
idiot   = (blob*6.9)
tom     = ((math.floor(balance/sad))*sad)
plane      = 6.9
submarine    = 2.9
nextbet = blob
resetstats();
 
function dobet()
    if (balance>(tom+(nextbet*plane))) then
        plane      = 4.9
        submarine    = 4.9
        nextbet = previousbet*2 
        tom     = balance
    end
    if (balance<(tom-(nextbet*submarine))) then
        plane      = 4.9
        submarine    = 4.9
        nextbet = previousbet*2 
        tom     = balance
    end  
    if ((nextbet>=(balance/300)) and (balance<(((math.floor(balance/sad))*sad)+idiot))) then  
        nextbet = blob
        plane      = 6.9
        submarine    = 2.9
        tom     = ((math.floor(balance/sad))*sad) 
    end
    if (balance<blob) then
        stop()
    end
    if (balance>=144) then
       stop()
   end
end"
PAnweG3X,Untitled,rand17,Lua,Saturday 10th of February 2024 02:46:33 PM CDT,"routes:

	1) get all vaults # получить список всех волтов
		output = vaults: Vault[]

	2) get user vaults # получить список волтов, где юзер может взаимодействовать
		input = userAddress: String
		output = userVaults: Vault[]

	3) get vault # получить инфу о волте
		input = vaultAddress: String
		output = vault: Vault

"
JCRLCmgS,good reti almost BandW,max2201111,Python,Saturday 10th of February 2024 02:45:46 PM CDT,"import chess
import collections
import time
import psutil
import pickle
import os

# Utility functions
def format_time(seconds):
    days, seconds = divmod(seconds, 86400)
    hours, seconds = divmod(seconds, 3600)
    minutes, seconds = divmod(seconds, 60)
    return f""{int(days)}d {int(hours):02d}h {int(minutes):02d}m {int(seconds):02d}s""

def simplify_fen(fen):
    parts = fen.split(' ')
    return ' '.join(parts[:4])

# def generate_all_game_states(initial_board):
#     simplified_initial_fen = simplify_fen(initial_board.fen())
#     queue = collections.deque([(simplified_initial_fen, 0, None)])  # Queue items are (fen, depth, parent_fen)
#     game_states = {simplified_initial_fen: {'move': None, 'depth': 0, 'parent': None, 'outcome': None, 'children': []}}
#     max_depth_reached = -1
#     start_time = time.time()

#     while queue:
#         current_fen, current_depth, parent_fen = queue.popleft()
#         board = chess.Board(current_fen)
#         if current_depth > max_depth_reached:
#             max_depth_reached = current_depth
#             print(f""\nReached new depth: {current_depth}, FEN: {current_fen}"")
#             print(board)

#         for move in board.legal_moves:
#             board.push(move)
#             next_fen = simplify_fen(board.fen())
#             board.pop()

#             if next_fen not in game_states:
#                 game_states[next_fen] = {'move': move.uci(), 'depth': current_depth + 1, 'parent': current_fen, 'outcome': None, 'children': []}
#                 queue.append((next_fen, current_depth + 1, current_fen))
#                 game_states[current_fen]['children'].append(next_fen)

#     elapsed = format_time(time.time() - start_time)
#     print(f""\nTotal elapsed time: {elapsed}"")
#     print(f""Total game states generated: {len(game_states)}"")
#     return game_states

def generate_all_game_states(initial_board):
    simplified_initial_fen = simplify_fen(initial_board.fen())
    queue = collections.deque([(simplified_initial_fen, None, 0, None)])
    game_states = {simplified_initial_fen: [None, 0, None]}
    max_depth_reached = -1
    start_time = time.time()
    last_time_check = start_time
    last_serialization_time = start_time

    while queue:
        current_time = time.time()
        if current_time - last_time_check >= 1:
            elapsed = format_time(current_time - start_time)
            available_memory = psutil.virtual_memory().available / (1024**2)
            print(f""\rElapsed time: {elapsed}, Available memory: {available_memory:.2f} MB"", end='')
            last_time_check = current_time

        current_fen, parent_fen, depth, last_move = queue.popleft()
        board = chess.Board(current_fen)

        if depth > max_depth_reached:
            print(f""\nReached new depth: {depth}"")
            max_depth_reached = depth
            print(board)

        for move in board.legal_moves:
            if move.promotion:
                move = chess.Move(move.from_square, move.to_square, promotion=chess.QUEEN)
            board.push(move)
            next_fen = simplify_fen(board.fen())
            if next_fen not in game_states:
                game_states[next_fen] = [move.uci(), depth + 1, current_fen]
                queue.append((next_fen, current_fen, depth + 1, move.uci()))
            board.pop()

        if current_time - last_serialization_time >= 600:
            filename = 'game_states.pickle'
            with open(filename, 'wb') as f:
                pickle.dump(game_states, f)
            file_size = os.path.getsize(filename) / (1024**2)
            print(f""\nSerialized {len(game_states)} game states to disk. File size: {file_size:.2f} MB"")
            last_serialization_time = current_time

    elapsed = format_time(time.time() - start_time)
    print(f""\nTotal elapsed time: {elapsed}\nTotal game states generated: {len(game_states)}"")
    return game_states


def propagate_outcomes(game_states):
    # Initial labeling based on direct outcomes
    for fen, state in game_states.items():
        board = chess.Board(fen)
        if board.is_checkmate():
            state['outcome'] = 'loss' if board.turn == chess.WHITE else 'win'
        elif board.can_claim_draw() or board.is_stalemate() or board.is_insufficient_material():
            state['outcome'] = 'draw'

    # Outcome propagation
    changed = True
    while changed:
        changed = False
        for fen, state in game_states.items():
            if state['outcome'] is None:
                board = chess.Board(fen)
                outcomes = set(game_states[child]['outcome'] for child in state['children'] if game_states[child]['outcome'] is not None)
                
                # Propagate win or draw based on children outcomes
                if board.turn == chess.WHITE:
                    if 'loss' in outcomes:
                        state['outcome'] = 'win'
                        changed = True
                    elif 'win' not in outcomes and outcomes:
                        state['outcome'] = 'draw'
                        changed = True
                else:  # For black, the logic is inverted
                    if 'win' in outcomes:
                        state['outcome'] = 'loss'
                        changed = True
                    elif 'loss' not in outcomes and outcomes:
                        state['outcome'] = 'draw'
                        changed = True

def find_optimal_path(game_states, initial_fen):
    path = []
    current_fen = initial_fen
    while current_fen in game_states and game_states[current_fen]['move'] is not None:
        path.append((current_fen, game_states[current_fen]['move']))
        # Find the next state based on the current state's children and their outcomes
        current_state = game_states[current_fen]
        next_states = [game_states[child] for child in current_state['children']]
        winning_next_states = [s for s in next_states if s['outcome'] == 'win']
        draw_next_states = [s for s in next_states if s['outcome'] == 'draw']
        
        if winning_next_states:
            current_fen = winning_next_states[0]['parent']  # Proceed to a winning state if available
        elif draw_next_states:
            current_fen = draw_next_states[0]['parent']  # Otherwise, proceed to a drawing state
        else:
            break  # No further progression possible

    return path

# Main execution
def main():
    initial_fen = ""7K/8/k1P5/7p/8/8/8/8 w - - 0 1""  # Example initial position
    initial_fen = ""7k/8/6K1/3Q4/8/8/8/8 w - - 0 1""
    initial_board = chess.Board(initial_fen)
    print(""Initial position:"")
    print(initial_board, ""\nGenerating all game states..."")

    game_states = generate_all_game_states(initial_board)
    propagate_outcomes(game_states)

    optimal_path = find_optimal_path(game_states, simplify_fen(initial_fen))
    print(""\nOptimal path for the stronger side to win or draw:"")
    board = chess.Board(initial_fen)
    for fen, move_uci in optimal_path:
        print(f""Move: {move_uci}, FEN: {fen}"")
        board.push(chess.Move.from_uci(move_uci))
        print(board)

if __name__ == ""__main__"":
    main()"
P2DWHxZf,IP/PORT Forwarding ipv6,rezadfx,Bash,Saturday 10th of February 2024 02:31:50 PM CDT,"echo 1 > /proc/sys/net/ipv4/ip_forward
echo 1 > /proc/sys/net/ipv6/conf/all/forwarding

ip6tables -F

ip6tables -t nat -F

ip6tables -X

iptables -t nat -A PREROUTING -p tcp --dport __PORT__ -j DNAT --to-destination __IPv6_KHAREJ__:__PORT__

either:
ip6tables -t nat -A POSTROUTING -p tcp -d __IPv6_KHAREJ__ --dport __PORT__ -j SNAT --to-source __IPv6_IRAN__
or:
ip6tables -t nat -A POSTROUTING -p tcp -d __IPv6_KHAREJ__ --dport __PORT__ -j SNAT --to-source __IPv4_IRAN__


"
brXNwGHP,Untitled,cosenza987,C++,Saturday 10th of February 2024 02:24:01 PM CDT,"//Слава Україні, Героям слава

#include <bits/stdc++.h>

using namespace std;

using ld = long double;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << setprecision(15) << fixed;
    ld x, y;
    cin >> x >> y;
    ld xi, yi;
    cin >> xi >> yi;
    ld vr, vs;
    cin >> vr >> vs;
    int n, s;
    cin >> n >> s;
    vector<pair<int, int>> v(n);
    for(int i = 0; i < n; i++) {
        cin >> v[i].first >> v[i].second;
    }
    vector<vector<ld>> f_tsp(n, vector<ld>(1 << n, numeric_limits<ld>::infinity())), dist(n, vector<ld>(n)), dp(n, vector<ld>(1 << n, numeric_limits<ld>::infinity()));
    vector<ld> to_icecream(1 << n, numeric_limits<ld>::infinity()), b2b(1 << n, numeric_limits<ld>::infinity());
    function<ld(ld, ld, ld, ld)> calc = [&](ld a, ld b, ld c, ld d) {
        ld l = -1e6, r = 1e6;
        for(int _ = 0; _ < 100; _++) {
            ld m1 = l + (r - l) / 3, m2 = r - (r - l) / 3;
            ld t1 = sqrtl((a - m1) * (a - m1) + b * b) / vr + sqrtl((c - m1) * (c - m1) + d * d) / vs;
            ld t2 = sqrtl((a - m2) * (a - m2) + b * b) / vr + sqrtl((c - m2) * (c - m2) + d * d) / vs;
            if(t1 > t2) {
                l = m1;
            } else {
                r = m2;
            }
        }
        return sqrtl((a - l) * (a - l) + b * b) / vr + sqrtl((c - l) * (c - l) + d * d) / vs;
    };
    for(int i = 0; i < n; i++) {
        f_tsp[i][1 << i] = calc(x, y, v[i].first, v[i].second);
        dp[i][1 << i] = calc(xi, yi, v[i].first, v[i].second);
    }
    function<ld(int, int)> calc2 = [&](int i, int j) {
        ld l = 0, r = abs(v[i].first - v[j].first);
        for(int _ = 0; _ < 100; _++) {
            ld m1 = l + (r - l) / 3, m2 = r - (r - l) / 3;
            ld t1 = hypotl(abs(v[i].first - v[j].first) - m1, v[i].second + v[j].second) / vs + m1 / vr;
            ld t2 = hypotl(abs(v[i].first - v[j].first) - m2, v[i].second + v[j].second) / vs + m2 / vr;
            if(t1 > t2) {
                l = m1;
            } else {
                r = m2;
            }
        }
        return hypotl(abs(v[i].first - v[j].first) - l, v[i].second + v[j].second) / vs + l / vr;
    };
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            if(i == j) {
                dist[i][j] = 0;
                continue;
            }
            dist[i][j] = hypotl(v[i].first - v[j].first, v[i].second - v[j].second) / vs;
            dist[i][j] = min(dist[i][j], calc2(i, j));
        }
    }
    for(int msk = 1; msk < (1 << n); msk++) {
        for(int j = 0; j < n; j++) {
            for(int k = 0; k < n; k++) {
                if((msk >> j) & 1 and !((msk >> k) & 1)) {
                    f_tsp[k][msk ^ (1 << k)] = min(f_tsp[k][msk ^ (1 << k)], f_tsp[j][msk] + dist[j][k]);
                }
            }
            if((msk >> j) & 1) {
                to_icecream[msk] = min(to_icecream[msk], f_tsp[j][msk] + calc(xi, yi, v[j].first, v[j].second));
            }
        }
    }
    for(int msk = 1; msk < (1 << n); msk++) {
        for(int j = 0; j < n; j++) {
            for(int k = 0; k < n; k++) {
                if((msk >> j) & 1 and !((msk >> k) & 1)) {
                    dp[k][msk ^ (1 << k)] = min(dp[k][msk ^ (1 << k)], dp[j][msk] + dist[j][k]);
                }
            }
            if((msk >> j) & 1) {
                b2b[msk] = min(b2b[msk], dp[j][msk] + calc(xi, yi, v[j].first, v[j].second));
            }
        }
    }
    vector<ld> dp2(1 << n, numeric_limits<ld>::infinity());
    dp2[0] = 0;
    for(int msk = 1; msk < (1 << n); msk++) {
        if(__builtin_popcount(msk) <= s) {
            dp2[msk] = to_icecream[msk];
        }
        for(int sm = msk; sm; sm = (sm - 1) & msk) {
            int falta = msk ^ sm;
            if(__builtin_popcount(falta) <= s) {
                dp2[msk] = min(dp2[msk], dp2[sm] + b2b[falta]);
            }
        }
    }
    cout << dp2.back() << ""\n"";
    return 0;
}"
ujG1mraf,9_anonymous_threat,Nenogzar,Python,Saturday 10th of February 2024 02:06:23 PM CDT,"main_string = input().split()
commands = input()

while commands != ""3:1"":
    command, start_index, end_index = [int(x) if x[-1].isdigit() else x for x in commands.split()]

    if command == ""merge"":
        if start_index < 0:
            start_index = 0
        if start_index < end_index:
            how_long = len(main_string)
            if end_index >= how_long:
                end_index = how_long - 1
            for num in range(start_index, end_index):
                main_string[start_index] += f""{main_string.pop(start_index + 1)}""

    elif command == ""divide"":
        index_ = start_index
        partitions = end_index
        if 0 <= index_ < len(main_string):
            how_long = len(main_string[index_])
            space_between = how_long // partitions
            string_to_change = main_string.pop(index_)
            result_ = []
            for x in range(partitions - 1):
                result_.append(string_to_change[:space_between])
                string_to_change = string_to_change[space_between:]
            result_.append(string_to_change)
            for x in result_[::-1]:
                main_string.insert(index_, x)

    commands = input()

print("" "".join(main_string))"
QizpTYBG,Untitled,rand17,Lua,Saturday 10th of February 2024 02:00:03 PM CDT,"// - пример данных
# - описание, что это такое
там, где стоит ?, выбирай тип сам, по своему усмотрению, как лучше

amount? - сколько у меня токенов
value portfolio? - рыночная цена * amount
ex value portfolio? - цена волта floor price * amount

models: 
	
	1) Vault:
		id: Number // 1 # внутренний айди для массива волтов
		vaultAddress: String, // ""0x00..0"" # адрес контракта волта
		vaultToken: Token, # primary token
		floorPrice: String or Number? // ""$1.05"" или 1.05 # сколько мы получим долларов за вывод 1 токена
		floorMarketCap: String or Number? // ""$1,123,000"" or 1123000 # общая стоимость активов reserves в долларах
		backedPercent: String or Number? // ""58%"" or 58, # отношение между флур маркет капом и маркет капом
		value: String or Number? // ""$1,123"" or 1123,
		reserves: Token[] # массив токенов которые находятся в волте
		reservesAllocation: Number[0 : 4] // [25, 25, 25, 25], [25, 21] # процент каждого токена резерва в волте, если 								резервов больше 3, то всегда на первых 3 местах 3 токена у которых наибольшие показатели, 4 							элемент - суммарно показатель всех остальных резервов
		extractableValue: Number // 123 # floorPrice * vaultToken.amount, показывает юзеру, сколько он может					 							получить от волта за свои токены(подумай ДВАЖДЫ о формуле, она правильная? или 
 									нужно иначе считать?)

		
	2) Token:
		name: String, // ""Router Protocol"" # название токена
		ticker: String, // ""$ROUTER"", # тикер токена
		marketCap: String or Number? // ""$1,123,000"" or 1123000 # маркет капа токена
		tokenAddress: String # ""0x00...000""
		amount: Number # используется, если использует User, показывает сколько у него этих токенов
		value: Number // 123 # amount * price, используется если User, показывает сколько у юзера долларов в токене

	3) User:
		userAddress: String # ""0x000..00""
		walletBalance: String or Number // ""$1,233"" or 1233 # общий баланс кошелька в долларах
		tokens: Token[] # массив токенов юзера
		"
i2Zirvzj,replace all NaN with zeros in Python,elena1234,Python,Saturday 10th of February 2024 01:33:27 PM CDT,"df['budget_musd'] = df['budget_musd'].fillna(0)
df['revenue_musd'] = df['revenue_musd'].fillna(0)
df['vote_count'] = df['vote_count'].fillna(0)
"
AH0F1ZYH,snowybot supersnowzy strikes back,coinwalk,JavaScript,Saturday 10th of February 2024 01:18:42 PM CDT,"var original=  parseFloat(document.getElementById('pct_balance').value);
var dockiez = original;
var base = (dockiez/1000);
var sad = (base*10);
var frock = (base*2);
var idiot = (base*6.9);
var plane = 6.9;
var submarine = 2.9;
var bob = original;
var timmy = ((Math.floor(original/sad))*sad);
var neatoh = base;
var fleif = original;
 
function dobet(){
bilance = document.getElementById('pct_balance').value;
    if (bilance>(timmy+(neatoh*plane))) {
        plane = 4.9;
        submarine = 4.9;
        neatoh = neatoh*2; 
        timmy = parseFloat(bilance);
    }
    if (bilance<(timmy-(neatoh*submarine))) {
        plane = 4.9;
        submarine = 4.9;
        neatoh = neatoh*2; 
        timmy = parseFloat(bilance);
    }  
if ((neatoh>=(bilance/300))&&(bilance<(((Math.floor(bilance/sad))*sad)+idiot))) {  
        plane = 6.9;
        submarine = 2.9;
        timmy = ((Math.floor(bilance/sad))*sad);
        neatoh = base
   } 
    if (bilance<base) {
        console.log(""busted"");     
        return;
    }
    if (bilance>=(dockiez*2)) {
       console.log(""winner winner chicken dinner"");
       return;
   }
$('#pct_chance').val(49.5);
$('#pct_bet').val(((neatoh*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => dobet(), 1000);
} 
dobet();"
G5SQk3wU,snowybot supersnowzy strikes back,coinwalk,JavaScript,Saturday 10th of February 2024 01:06:47 PM CDT,"var original=  parseFloat(document.getElementById('pct_balance').value);
var dockiez = original;
var base = (dockiez/1000);
var sad = (base*10);
var frock = (base*2);
var idiot = (base*6.9);
var plane = 6.9;
var submarine = 2.9;
var bob = original;
var timmy = ((Math.floor(original/sad))*sad);
var neatoh = base;
var fleif = original;
 
function dobet(){
bilance = document.getElementById('pct_balance').value;
    if (bilance>(timmy+(neatoh*plane))) {
        plane = 4.9;
        submarine = 4.9;
        neatoh = neatoh*2; 
        timmy = parseFloat(bilance);
    }
    if (bilance<(timmy-(neatoh*submarine))) {
        plane = 4.9;
        submarine = 4.9;
        neatoh = neatoh*2; 
        timmy = parseFloat(bilance);
    }  
if ((neatoh>=(bilance/300))&&(bilance<(((Math.floor(bilance/sad))*sad)+idiot))) {  
        plane = 6.9;
        submarine = 2.9;
        timmy = ((Math.floor(bilance/sad))*sad);
        neatoh = base
   } 
    if (bilance<base) {
        console.log(""busted"");     
        return;
    }
    if (bilance>=(dockiez*2)) {
       console.log(""winner winner chicken dinner"");
       return;
   }
$('#pct_chance').val(49.5);
$('#pct_bet').val(((neatoh*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => dobet(), 1);
} 
dobet();"
FejMA9Yc,printMessage and its macros,Kitomas,C++,Saturday 10th of February 2024 12:33:39 PM CDT,"//these are for enabling and disabling what messages are printed
 //simply comment these out to disable them

#define KIT_PM_WM_UNKNOWN                        //0x????
#define KIT_PM_WM_NULL                           //0x0000
#define KIT_PM_WM_CREATE                         //0x0001
#define KIT_PM_WM_DESTROY                        //0x0002
#define KIT_PM_WM_MOVE                           //0x0003
#define KIT_PM_WM_SIZE                           //0x0005
#define KIT_PM_WM_ACTIVATE                       //0x0006
#define KIT_PM_WM_SETFOCUS                       //0x0007
#define KIT_PM_WM_KILLFOCUS                      //0x0008
#define KIT_PM_WM_ENABLE                         //0x000A
#define KIT_PM_WM_SETREDRAW                      //0x000B
#define KIT_PM_WM_SETTEXT                        //0x000C
#define KIT_PM_WM_GETTEXT                        //0x000D
#define KIT_PM_WM_GETTEXTLENGTH                  //0x000E
#define KIT_PM_WM_PAINT                          //0x000F
#define KIT_PM_WM_CLOSE                          //0x0010
#define KIT_PM_WM_QUERYENDSESSION                //0x0011
#define KIT_PM_WM_QUIT                           //0x0012
#define KIT_PM_WM_QUERYOPEN                      //0x0013
#define KIT_PM_WM_ERASEBKGND                     //0x0014
#define KIT_PM_WM_SYSCOLORCHANGE                 //0x0015
#define KIT_PM_WM_ENDSESSION                     //0x0016
#define KIT_PM_WM_SHOWWINDOW                     //0x0018
#define KIT_PM_WM_SETTINGCHANGE                  //0x001A
#define KIT_PM_WM_DEVMODECHANGE                  //0x001B
#define KIT_PM_WM_ACTIVATEAPP                    //0x001C
#define KIT_PM_WM_FONTCHANGE                     //0x001D
#define KIT_PM_WM_TIMECHANGE                     //0x001E
#define KIT_PM_WM_CANCELMODE                     //0x001F
#define KIT_PM_WM_SETCURSOR                      //0x0020
#define KIT_PM_WM_MOUSEACTIVATE                  //0x0021
#define KIT_PM_WM_CHILDACTIVATE                  //0x0022
#define KIT_PM_WM_QUEUESYNC                      //0x0023
#define KIT_PM_WM_GETMINMAXINFO                  //0x0024
#define KIT_PM_WM_PAINTICON                      //0x0026
#define KIT_PM_WM_ICONERASEBKGND                 //0x0027
#define KIT_PM_WM_NEXTDLGCTL                     //0x0028
#define KIT_PM_WM_SPOOLERSTATUS                  //0x002A
#define KIT_PM_WM_DRAWITEM                       //0x002B
#define KIT_PM_WM_MEASUREITEM                    //0x002C
#define KIT_PM_WM_DELETEITEM                     //0x002D
#define KIT_PM_WM_VKEYTOITEM                     //0x002E
#define KIT_PM_WM_CHARTOITEM                     //0x002F
#define KIT_PM_WM_SETFONT                        //0x0030
#define KIT_PM_WM_GETFONT                        //0x0031
#define KIT_PM_WM_SETHOTKEY                      //0x0032
#define KIT_PM_WM_GETHOTKEY                      //0x0033
#define KIT_PM_WM_QUERYDRAGICON                  //0x0037
#define KIT_PM_WM_COMPAREITEM                    //0x0039
#define KIT_PM_WM_GETOBJECT                      //0x003D
#define KIT_PM_WM_COMPACTING                     //0x0041
#define KIT_PM_WM_COMMNOTIFY                     //0x0044
#define KIT_PM_WM_WINDOWPOSCHANGING              //0x0046
#define KIT_PM_WM_WINDOWPOSCHANGED               //0x0047
#define KIT_PM_WM_POWER                          //0x0048
#define KIT_PM_WM_COPYDATA                       //0x004A
#define KIT_PM_WM_CANCELJOURNAL                  //0x004B
#define KIT_PM_WM_NOTIFY                         //0x004E
#define KIT_PM_WM_INPUTLANGCHANGEREQUEST         //0x0050
#define KIT_PM_WM_INPUTLANGCHANGE                //0x0051
#define KIT_PM_WM_TCARD                          //0x0052
#define KIT_PM_WM_HELP                           //0x0053
#define KIT_PM_WM_USERCHANGED                    //0x0054
#define KIT_PM_WM_NOTIFYFORMAT                   //0x0055
#define KIT_PM_WM_CONTEXTMENU                    //0x007B
#define KIT_PM_WM_STYLECHANGING                  //0x007C
#define KIT_PM_WM_STYLECHANGED                   //0x007D
#define KIT_PM_WM_DISPLAYCHANGE                  //0x007E
#define KIT_PM_WM_GETICON                        //0x007F
#define KIT_PM_WM_SETICON                        //0x0080
#define KIT_PM_WM_NCCREATE                       //0x0081
#define KIT_PM_WM_NCDESTROY                      //0x0082
#define KIT_PM_WM_NCCALCSIZE                     //0x0083
#define KIT_PM_WM_NCHITTEST                      //0x0084
#define KIT_PM_WM_NCPAINT                        //0x0085
#define KIT_PM_WM_NCACTIVATE                     //0x0086
#define KIT_PM_WM_GETDLGCODE                     //0x0087
#define KIT_PM_WM_SYNCPAINT                      //0x0088
#define KIT_PM_WM_NCMOUSEMOVE                    //0x00A0
#define KIT_PM_WM_NCLBUTTONDOWN                  //0x00A1
#define KIT_PM_WM_NCLBUTTONUP                    //0x00A2
#define KIT_PM_WM_NCLBUTTONDBLCLK                //0x00A3
#define KIT_PM_WM_NCRBUTTONDOWN                  //0x00A4
#define KIT_PM_WM_NCRBUTTONUP                    //0x00A5
#define KIT_PM_WM_NCRBUTTONDBLCLK                //0x00A6
#define KIT_PM_WM_NCMBUTTONDOWN                  //0x00A7
#define KIT_PM_WM_NCMBUTTONUP                    //0x00A8
#define KIT_PM_WM_NCMBUTTONDBLCLK                //0x00A9
#define KIT_PM_WM_NCXBUTTONDOWN                  //0x00AB
#define KIT_PM_WM_NCXBUTTONUP                    //0x00AC
#define KIT_PM_WM_NCXBUTTONDBLCLK                //0x00AD
#define KIT_PM_WM_INPUT_DEVICE_CHANGE            //0x00FE
#define KIT_PM_WM_INPUT                          //0x00FF
#define KIT_PM_WM_KEYDOWN                        //0x0100
#define KIT_PM_WM_KEYUP                          //0x0101
#define KIT_PM_WM_CHAR                           //0x0102
#define KIT_PM_WM_DEADCHAR                       //0x0103
#define KIT_PM_WM_SYSKEYDOWN                     //0x0104
#define KIT_PM_WM_SYSKEYUP                       //0x0105
#define KIT_PM_WM_SYSCHAR                        //0x0106
#define KIT_PM_WM_SYSDEADCHAR                    //0x0107
#define KIT_PM_WM_UNICHAR                        //0x0109
#define KIT_PM_WM_IME_STARTCOMPOSITION           //0x010D
#define KIT_PM_WM_IME_ENDCOMPOSITION             //0x010E
#define KIT_PM_WM_IME_COMPOSITION                //0x010F
#define KIT_PM_WM_INITDIALOG                     //0x0110
#define KIT_PM_WM_COMMAND                        //0x0111
#define KIT_PM_WM_SYSCOMMAND                     //0x0112
#define KIT_PM_WM_TIMER                          //0x0113
#define KIT_PM_WM_HSCROLL                        //0x0114
#define KIT_PM_WM_VSCROLL                        //0x0115
#define KIT_PM_WM_INITMENU                       //0x0116
#define KIT_PM_WM_INITMENUPOPUP                  //0x0117
#define KIT_PM_WM_GESTURE                        //0x0119
#define KIT_PM_WM_GESTURENOTIFY                  //0x011A
#define KIT_PM_WM_MENUSELECT                     //0x011F
#define KIT_PM_WM_MENUCHAR                       //0x0120
#define KIT_PM_WM_ENTERIDLE                      //0x0121
#define KIT_PM_WM_MENURBUTTONUP                  //0x0122
#define KIT_PM_WM_MENUDRAG                       //0x0123
#define KIT_PM_WM_MENUGETOBJECT                  //0x0124
#define KIT_PM_WM_UNINITMENUPOPUP                //0x0125
#define KIT_PM_WM_MENUCOMMAND                    //0x0126
#define KIT_PM_WM_CHANGEUISTATE                  //0x0127
#define KIT_PM_WM_UPDATEUISTATE                  //0x0128
#define KIT_PM_WM_QUERYUISTATE                   //0x0129
#define KIT_PM_WM_CTLCOLORMSGBOX                 //0x0132
#define KIT_PM_WM_CTLCOLOREDIT                   //0x0133
#define KIT_PM_WM_CTLCOLORLISTBOX                //0x0134
#define KIT_PM_WM_CTLCOLORBTN                    //0x0135
#define KIT_PM_WM_CTLCOLORDLG                    //0x0136
#define KIT_PM_WM_CTLCOLORSCROLLBAR              //0x0137
#define KIT_PM_WM_CTLCOLORSTATIC                 //0x0138
#define KIT_PM_MN_GETHMENU                       //0x01E1
#define KIT_PM_WM_MOUSEMOVE                      //0x0200
#define KIT_PM_WM_LBUTTONDOWN                    //0x0201
#define KIT_PM_WM_LBUTTONUP                      //0x0202
#define KIT_PM_WM_LBUTTONDBLCLK                  //0x0203
#define KIT_PM_WM_RBUTTONDOWN                    //0x0204
#define KIT_PM_WM_RBUTTONUP                      //0x0205
#define KIT_PM_WM_RBUTTONDBLCLK                  //0x0206
#define KIT_PM_WM_MBUTTONDOWN                    //0x0207
#define KIT_PM_WM_MBUTTONUP                      //0x0208
#define KIT_PM_WM_MBUTTONDBLCLK                  //0x0209
#define KIT_PM_WM_MOUSEWHEEL                     //0x020A
#define KIT_PM_WM_XBUTTONDOWN                    //0x020B
#define KIT_PM_WM_XBUTTONUP                      //0x020C
#define KIT_PM_WM_XBUTTONDBLCLK                  //0x020D
#define KIT_PM_WM_PARENTNOTIFY                   //0x0210
#define KIT_PM_WM_ENTERMENULOOP                  //0x0211
#define KIT_PM_WM_EXITMENULOOP                   //0x0212
#define KIT_PM_WM_NEXTMENU                       //0x0213
#define KIT_PM_WM_SIZING                         //0x0214
#define KIT_PM_WM_CAPTURECHANGED                 //0x0215
#define KIT_PM_WM_MOVING                         //0x0216
#define KIT_PM_WM_POWERBROADCAST                 //0x0218
#define KIT_PM_WM_DEVICECHANGE                   //0x0219
#define KIT_PM_WM_MDICREATE                      //0x0220
#define KIT_PM_WM_MDIDESTROY                     //0x0221
#define KIT_PM_WM_MDIACTIVATE                    //0x0222
#define KIT_PM_WM_MDIRESTORE                     //0x0223
#define KIT_PM_WM_MDINEXT                        //0x0224
#define KIT_PM_WM_MDIMAXIMIZE                    //0x0225
#define KIT_PM_WM_MDITILE                        //0x0226
#define KIT_PM_WM_MDICASCADE                     //0x0227
#define KIT_PM_WM_MDIICONARRANGE                 //0x0228
#define KIT_PM_WM_MDIGETACTIVE                   //0x0229
#define KIT_PM_WM_MDISETMENU                     //0x0230
#define KIT_PM_WM_ENTERSIZEMOVE                  //0x0231
#define KIT_PM_WM_EXITSIZEMOVE                   //0x0232
#define KIT_PM_WM_DROPFILES                      //0x0233
#define KIT_PM_WM_MDIREFRESHMENU                 //0x0234
#define KIT_PM_WM_POINTERDEVICECHANGE            //0x0238
#define KIT_PM_WM_POINTERDEVICEINRANGE           //0x0239
#define KIT_PM_WM_POINTERDEVICEOUTOFRANGE        //0x023A
#define KIT_PM_WM_TOUCH                          //0x0240
#define KIT_PM_WM_NCPOINTERUPDATE                //0x0241
#define KIT_PM_WM_NCPOINTERDOWN                  //0x0242
#define KIT_PM_WM_NCPOINTERUP                    //0x0243
#define KIT_PM_WM_POINTERUPDATE                  //0x0245
#define KIT_PM_WM_POINTERDOWN                    //0x0246
#define KIT_PM_WM_POINTERUP                      //0x0247
#define KIT_PM_WM_POINTERENTER                   //0x0249
#define KIT_PM_WM_POINTERLEAVE                   //0x024A
#define KIT_PM_WM_POINTERACTIVATE                //0x024B
#define KIT_PM_WM_POINTERCAPTURECHANGED          //0x024C
#define KIT_PM_WM_TOUCHHITTESTING                //0x024D
#define KIT_PM_WM_POINTERWHEEL                   //0x024E
#define KIT_PM_WM_POINTERHWHEEL                  //0x024F
#define KIT_PM_DM_POINTERHITTEST                 //0x0250
#define KIT_PM_WM_POINTERROUTEDTO                //0x0251
#define KIT_PM_WM_POINTERROUTEDAWAY              //0x0252
#define KIT_PM_WM_POINTERROUTEDRELEASED          //0x0253
#define KIT_PM_WM_IME_SETCONTEXT                 //0x0281
#define KIT_PM_WM_IME_NOTIFY                     //0x0282
#define KIT_PM_WM_IME_CONTROL                    //0x0283
#define KIT_PM_WM_IME_COMPOSITIONFULL            //0x0284
#define KIT_PM_WM_IME_SELECT                     //0x0285
#define KIT_PM_WM_IME_CHAR                       //0x0286
#define KIT_PM_WM_IME_REQUEST                    //0x0288
#define KIT_PM_WM_IME_KEYDOWN                    //0x0290
#define KIT_PM_WM_IME_KEYUP                      //0x0291
#define KIT_PM_WM_MOUSEHOVER                     //0x02A1
#define KIT_PM_WM_MOUSELEAVE                     //0x02A3
#define KIT_PM_WM_NCMOUSEHOVER                   //0x02A0
#define KIT_PM_WM_NCMOUSELEAVE                   //0x02A2
#define KIT_PM_WM_WTSSESSION_CHANGE              //0x02B1
#define KIT_PM_WM_DPICHANGED                     //0x02E0
#define KIT_PM_WM_DPICHANGED_BEFOREPARENT        //0x02E2
#define KIT_PM_WM_DPICHANGED_AFTERPARENT         //0x02E3
#define KIT_PM_WM_GETDPISCALEDSIZE               //0x02E4
#define KIT_PM_WM_CUT                            //0x0300
#define KIT_PM_WM_COPY                           //0x0301
#define KIT_PM_WM_PASTE                          //0x0302
#define KIT_PM_WM_CLEAR                          //0x0303
#define KIT_PM_WM_UNDO                           //0x0304
#define KIT_PM_WM_RENDERFORMAT                   //0x0305
#define KIT_PM_WM_RENDERALLFORMATS               //0x0306
#define KIT_PM_WM_DESTROYCLIPBOARD               //0x0307
#define KIT_PM_WM_DRAWCLIPBOARD                  //0x0308
#define KIT_PM_WM_PAINTCLIPBOARD                 //0x0309
#define KIT_PM_WM_VSCROLLCLIPBOARD               //0x030A
#define KIT_PM_WM_SIZECLIPBOARD                  //0x030B
#define KIT_PM_WM_ASKCBFORMATNAME                //0x030C
#define KIT_PM_WM_CHANGECBCHAIN                  //0x030D
#define KIT_PM_WM_HSCROLLCLIPBOARD               //0x030E
#define KIT_PM_WM_QUERYNEWPALETTE                //0x030F
#define KIT_PM_WM_PALETTEISCHANGING              //0x0310
#define KIT_PM_WM_PALETTECHANGED                 //0x0311
#define KIT_PM_WM_HOTKEY                         //0x0312
#define KIT_PM_WM_PRINT                          //0x0317
#define KIT_PM_WM_PRINTCLIENT                    //0x0318
#define KIT_PM_WM_APPCOMMAND                     //0x0319
#define KIT_PM_WM_THEMECHANGED                   //0x031A
#define KIT_PM_WM_CLIPBOARDUPDATE                //0x031D
#define KIT_PM_WM_DWMCOMPOSITIONCHANGED          //0x031E
#define KIT_PM_WM_DWMNCRENDERINGCHANGED          //0x031F
#define KIT_PM_WM_DWMCOLORIZATIONCOLORCHANGED    //0x0320
#define KIT_PM_WM_DWMWINDOWMAXIMIZEDCHANGE       //0x0321
#define KIT_PM_WM_DWMSENDICONICTHUMBNAIL         //0x0323
#define KIT_PM_WM_DWMSENDICONICLIVEPREVIEWBITMAP //0x0326
#define KIT_PM_WM_GETTITLEBARINFOEX              //0x033F




static void printMessage(HWND hwnd, UINT message,
                         WPARAM wParam, LPARAM lParam)
{
#if defined(_DEBUG) //this function will do nothing otherwise
  char* messageName = nullptr;


  switch(message){
#  ifdef KIT_PM_WM_NULL
  case WM_NULL                          : messageName = ""WM_NULL"";              break; //0x0000
#  endif

#  ifdef KIT_PM_WM_CREATE
  case WM_CREATE                        : messageName = ""WM_CREATE"";            break; //0x0001
#  endif

#  ifdef KIT_PM_WM_DESTROY
  case WM_DESTROY                       : messageName = ""WM_DESTROY"";           break; //0x0002
#  endif

#  ifdef KIT_PM_WM_MOVE
  case WM_MOVE                          : messageName = ""WM_MOVE"";              break; //0x0003
#  endif

#  ifdef KIT_PM_WM_SIZE
  case WM_SIZE                          : messageName = ""WM_SIZE"";              break; //0x0005
#  endif

#  ifdef KIT_PM_WM_ACTIVATE
  case WM_ACTIVATE                      : messageName = ""WM_ACTIVATE"";          break; //0x0006
#  endif

#  ifdef KIT_PM_WM_SETFOCUS
  case WM_SETFOCUS                      : messageName = ""WM_SETFOCUS"";          break; //0x0007
#  endif

#  ifdef KIT_PM_WM_KILLFOCUS
  case WM_KILLFOCUS                     : messageName = ""WM_KILLFOCUS"";         break; //0x0008
#  endif

#  ifdef KIT_PM_WM_ENABLE
  case WM_ENABLE                        : messageName = ""WM_ENABLE"";            break; //0x000A
#  endif

#  ifdef KIT_PM_WM_SETREDRAW
  case WM_SETREDRAW                     : messageName = ""WM_SETREDRAW"";         break; //0x000B
#  endif

#  ifdef KIT_PM_WM_SETTEXT
  case WM_SETTEXT                       : messageName = ""WM_SETTEXT"";           break; //0x000C
#  endif

#  ifdef KIT_PM_WM_GETTEXT
  case WM_GETTEXT                       : messageName = ""WM_GETTEXT"";           break; //0x000D
#  endif

#  ifdef KIT_PM_WM_GETTEXTLENGTH
  case WM_GETTEXTLENGTH                 : messageName = ""WM_GETTEXTLENGTH"";     break; //0x000E
#  endif

#  ifdef KIT_PM_WM_PAINT
  case WM_PAINT                         : messageName = ""WM_PAINT"";             break; //0x000F
#  endif

#  ifdef KIT_PM_WM_CLOSE
  case WM_CLOSE                         : messageName = ""WM_CLOSE"";             break; //0x0010
#  endif

#  ifdef KIT_PM_WM_QUERYENDSESSION
  case WM_QUERYENDSESSION               : messageName = ""WM_QUERYENDSESSION"";   break; //0x0011
#  endif

#  ifdef KIT_PM_WM_QUIT
  case WM_QUIT                          : messageName = ""WM_QUIT"";              break; //0x0012
#  endif

#  ifdef KIT_PM_WM_QUERYOPEN
  case WM_QUERYOPEN                     : messageName = ""WM_QUERYOPEN"";         break; //0x0013
#  endif

#  ifdef KIT_PM_WM_ERASEBKGND
  case WM_ERASEBKGND                    : messageName = ""WM_ERASEBKGND"";        break; //0x0014
#  endif

#  ifdef KIT_PM_WM_SYSCOLORCHANGE
  case WM_SYSCOLORCHANGE                : messageName = ""WM_SYSCOLORCHANGE"";    break; //0x0015
#  endif

#  ifdef KIT_PM_WM_ENDSESSION
  case WM_ENDSESSION                    : messageName = ""WM_ENDSESSION"";        break; //0x0016
#  endif

#  ifdef KIT_PM_WM_SHOWWINDOW
  case WM_SHOWWINDOW                    : messageName = ""WM_SHOWWINDOW"";        break; //0x0018
#  endif

#  ifdef KIT_PM_WM_SETTINGCHANGE
  case WM_SETTINGCHANGE                 : messageName = ""WM_SETTINGCHANGE"";     break; //0x001A
#  endif

#  ifdef KIT_PM_WM_DEVMODECHANGE
  case WM_DEVMODECHANGE                 : messageName = ""WM_DEVMODECHANGE"";     break; //0x001B
#  endif

#  ifdef KIT_PM_WM_ACTIVATEAPP
  case WM_ACTIVATEAPP                   : messageName = ""WM_ACTIVATEAPP"";       break; //0x001C
#  endif

#  ifdef KIT_PM_WM_FONTCHANGE
  case WM_FONTCHANGE                    : messageName = ""WM_FONTCHANGE"";        break; //0x001D
#  endif

#  ifdef KIT_PM_WM_TIMECHANGE
  case WM_TIMECHANGE                    : messageName = ""WM_TIMECHANGE"";        break; //0x001E
#  endif

#  ifdef KIT_PM_WM_CANCELMODE
  case WM_CANCELMODE                    : messageName = ""WM_CANCELMODE"";        break; //0x001F
#  endif

#  ifdef KIT_PM_WM_SETCURSOR
  case WM_SETCURSOR                     : messageName = ""WM_SETCURSOR"";         break; //0x0020
#  endif

#  ifdef KIT_PM_WM_MOUSEACTIVATE
  case WM_MOUSEACTIVATE                 : messageName = ""WM_MOUSEACTIVATE"";     break; //0x0021
#  endif

#  ifdef KIT_PM_WM_CHILDACTIVATE
  case WM_CHILDACTIVATE                 : messageName = ""WM_CHILDACTIVATE"";     break; //0x0022
#  endif

#  ifdef KIT_PM_WM_QUEUESYNC
  case WM_QUEUESYNC                     : messageName = ""WM_QUEUESYNC"";         break; //0x0023
#  endif

#  ifdef KIT_PM_WM_GETMINMAXINFO
  case WM_GETMINMAXINFO                 : messageName = ""WM_GETMINMAXINFO"";     break; //0x0024
#  endif

#  ifdef KIT_PM_WM_PAINTICON
  case WM_PAINTICON                     : messageName = ""WM_PAINTICON"";         break; //0x0026
#  endif

#  ifdef KIT_PM_WM_ICONERASEBKGND
  case WM_ICONERASEBKGND                : messageName = ""WM_ICONERASEBKGND"";    break; //0x0027
#  endif

#  ifdef KIT_PM_WM_NEXTDLGCTL
  case WM_NEXTDLGCTL                    : messageName = ""WM_NEXTDLGCTL"";        break; //0x0028
#  endif

#  ifdef KIT_PM_WM_SPOOLERSTATUS
  case WM_SPOOLERSTATUS                 : messageName = ""WM_SPOOLERSTATUS"";     break; //0x002A
#  endif

#  ifdef KIT_PM_WM_DRAWITEM
  case WM_DRAWITEM                      : messageName = ""WM_DRAWITEM"";          break; //0x002B
#  endif

#  ifdef KIT_PM_WM_MEASUREITEM
  case WM_MEASUREITEM                   : messageName = ""WM_MEASUREITEM"";       break; //0x002C
#  endif

#  ifdef KIT_PM_WM_DELETEITEM
  case WM_DELETEITEM                    : messageName = ""WM_DELETEITEM"";        break; //0x002D
#  endif

#  ifdef KIT_PM_WM_VKEYTOITEM
  case WM_VKEYTOITEM                    : messageName = ""WM_VKEYTOITEM"";        break; //0x002E
#  endif

#  ifdef KIT_PM_WM_CHARTOITEM
  case WM_CHARTOITEM                    : messageName = ""WM_CHARTOITEM"";        break; //0x002F
#  endif

#  ifdef KIT_PM_WM_SETFONT
  case WM_SETFONT                       : messageName = ""WM_SETFONT"";           break; //0x0030
#  endif

#  ifdef KIT_PM_WM_GETFONT
  case WM_GETFONT                       : messageName = ""WM_GETFONT"";           break; //0x0031
#  endif

#  ifdef KIT_PM_WM_SETHOTKEY
  case WM_SETHOTKEY                     : messageName = ""WM_SETHOTKEY"";         break; //0x0032
#  endif

#  ifdef KIT_PM_WM_GETHOTKEY
  case WM_GETHOTKEY                     : messageName = ""WM_GETHOTKEY"";         break; //0x0033
#  endif

#  ifdef KIT_PM_WM_QUERYDRAGICON
  case WM_QUERYDRAGICON                 : messageName = ""WM_QUERYDRAGICON"";     break; //0x0037
#  endif

#  ifdef KIT_PM_WM_COMPAREITEM
  case WM_COMPAREITEM                   : messageName = ""WM_COMPAREITEM"";       break; //0x0039
#  endif


#if(WINVER >= 0x0500)
#ifndef _WIN32_WCE
#  ifdef KIT_PM_WM_GETOBJECT
  case WM_GETOBJECT                     : messageName = ""WM_GETOBJECT"";         break; //0x003D
#  endif
#endif
#endif /* WINVER >= 0x0500 */


#  ifdef KIT_PM_WM_COMPACTING
  case WM_COMPACTING                    : messageName = ""WM_COMPACTING"";        break; //0x0041
#  endif

#  ifdef KIT_PM_WM_COMMNOTIFY
  case WM_COMMNOTIFY                    : messageName = ""WM_COMMNOTIFY"";        break; //0x0044
#  endif

#  ifdef KIT_PM_WM_WINDOWPOSCHANGING
  case WM_WINDOWPOSCHANGING             : messageName = ""WM_WINDOWPOSCHANGING""; break; //0x0046
#  endif

#  ifdef KIT_PM_WM_WINDOWPOSCHANGED
  case WM_WINDOWPOSCHANGED              : messageName = ""WM_WINDOWPOSCHANGED"";  break; //0x0047
#  endif

#  ifdef KIT_PM_WM_POWER
  case WM_POWER                         : messageName = ""WM_POWER"";             break; //0x0048
#  endif

#  ifdef KIT_PM_WM_COPYDATA
  case WM_COPYDATA                      : messageName = ""WM_COPYDATA"";          break; //0x004A
#  endif

#  ifdef KIT_PM_WM_CANCELJOURNAL
  case WM_CANCELJOURNAL                 : messageName = ""WM_CANCELJOURNAL"";     break; //0x004B
#  endif


#if(WINVER >= 0x0400)
#  ifdef KIT_PM_WM_NOTIFY
  case WM_NOTIFY                        : messageName = ""WM_NOTIFY"";            break; //0x004E
#  endif

#  ifdef KIT_PM_WM_INPUTLANGCHANGEREQUEST
  case WM_INPUTLANGCHANGEREQUEST        : messageName = ""WM_INPUTLANGCHANGEREQUEST""; break; //0x0050
#  endif

#  ifdef KIT_PM_WM_INPUTLANGCHANGE
  case WM_INPUTLANGCHANGE               : messageName = ""WM_INPUTLANGCHANGE"";   break; //0x0051
#  endif

#  ifdef KIT_PM_WM_TCARD
  case WM_TCARD                         : messageName = ""WM_TCARD"";             break; //0x0052
#  endif

#  ifdef KIT_PM_WM_HELP
  case WM_HELP                          : messageName = ""WM_HELP"";              break; //0x0053
#  endif

#  ifdef KIT_PM_WM_USERCHANGED
  case WM_USERCHANGED                   : messageName = ""WM_USERCHANGED"";       break; //0x0054
#  endif

#  ifdef KIT_PM_WM_NOTIFYFORMAT
  case WM_NOTIFYFORMAT                  : messageName = ""WM_NOTIFYFORMAT"";      break; //0x0055
#  endif

#  ifdef KIT_PM_WM_CONTEXTMENU
  case WM_CONTEXTMENU                   : messageName = ""WM_CONTEXTMENU"";       break; //0x007B
#  endif

#  ifdef KIT_PM_WM_STYLECHANGING
  case WM_STYLECHANGING                 : messageName = ""WM_STYLECHANGING"";     break; //0x007C
#  endif

#  ifdef KIT_PM_WM_STYLECHANGED
  case WM_STYLECHANGED                  : messageName = ""WM_STYLECHANGED"";      break; //0x007D
#  endif

#  ifdef KIT_PM_WM_DISPLAYCHANGE
  case WM_DISPLAYCHANGE                 : messageName = ""WM_DISPLAYCHANGE"";     break; //0x007E
#  endif

#  ifdef KIT_PM_WM_GETICON
  case WM_GETICON                       : messageName = ""WM_GETICON"";           break; //0x007F
#  endif

#  ifdef KIT_PM_WM_SETICON
  case WM_SETICON                       : messageName = ""WM_SETICON"";           break; //0x0080
#  endif
#endif /* WINVER >= 0x0400 */


#  ifdef KIT_PM_WM_NCCREATE
  case WM_NCCREATE                      : messageName = ""WM_NCCREATE"";          break; //0x0081
#  endif

#  ifdef KIT_PM_WM_NCDESTROY
  case WM_NCDESTROY                     : messageName = ""WM_NCDESTROY"";         break; //0x0082
#  endif

#  ifdef KIT_PM_WM_NCCALCSIZE
  case WM_NCCALCSIZE                    : messageName = ""WM_NCCALCSIZE"";        break; //0x0083
#  endif

#  ifdef KIT_PM_WM_NCHITTEST
  case WM_NCHITTEST                     : messageName = ""WM_NCHITTEST"";         break; //0x0084
#  endif

#  ifdef KIT_PM_WM_NCPAINT
  case WM_NCPAINT                       : messageName = ""WM_NCPAINT"";           break; //0x0085
#  endif

#  ifdef KIT_PM_WM_NCACTIVATE
  case WM_NCACTIVATE                    : messageName = ""WM_NCACTIVATE"";        break; //0x0086
#  endif

#  ifdef KIT_PM_WM_GETDLGCODE
  case WM_GETDLGCODE                    : messageName = ""WM_GETDLGCODE"";        break; //0x0087
#  endif


#ifndef _WIN32_WCE
#  ifdef KIT_PM_WM_SYNCPAINT
  case WM_SYNCPAINT                     : messageName = ""WM_SYNCPAINT"";         break; //0x0088
#  endif
#endif


#  ifdef KIT_PM_WM_NCMOUSEMOVE
  case WM_NCMOUSEMOVE                   : messageName = ""WM_NCMOUSEMOVE"";       break; //0x00A0
#  endif

#  ifdef KIT_PM_WM_NCLBUTTONDOWN
  case WM_NCLBUTTONDOWN                 : messageName = ""WM_NCLBUTTONDOWN"";     break; //0x00A1
#  endif

#  ifdef KIT_PM_WM_NCLBUTTONUP
  case WM_NCLBUTTONUP                   : messageName = ""WM_NCLBUTTONUP"";       break; //0x00A2
#  endif

#  ifdef KIT_PM_WM_NCLBUTTONDBLCLK
  case WM_NCLBUTTONDBLCLK               : messageName = ""WM_NCLBUTTONDBLCLK"";   break; //0x00A3
#  endif

#  ifdef KIT_PM_WM_NCRBUTTONDOWN
  case WM_NCRBUTTONDOWN                 : messageName = ""WM_NCRBUTTONDOWN"";     break; //0x00A4
#  endif

#  ifdef KIT_PM_WM_NCRBUTTONUP
  case WM_NCRBUTTONUP                   : messageName = ""WM_NCRBUTTONUP"";       break; //0x00A5
#  endif

#  ifdef KIT_PM_WM_NCRBUTTONDBLCLK
  case WM_NCRBUTTONDBLCLK               : messageName = ""WM_NCRBUTTONDBLCLK"";   break; //0x00A6
#  endif

#  ifdef KIT_PM_WM_NCMBUTTONDOWN
  case WM_NCMBUTTONDOWN                 : messageName = ""WM_NCMBUTTONDOWN"";     break; //0x00A7
#  endif

#  ifdef KIT_PM_WM_NCMBUTTONUP
  case WM_NCMBUTTONUP                   : messageName = ""WM_NCMBUTTONUP"";       break; //0x00A8
#  endif

#  ifdef KIT_PM_WM_NCMBUTTONDBLCLK
  case WM_NCMBUTTONDBLCLK               : messageName = ""WM_NCMBUTTONDBLCLK"";   break; //0x00A9
#  endif


#if(_WIN32_WINNT >= 0x0500)
#  ifdef KIT_PM_WM_NCXBUTTONDOWN
  case WM_NCXBUTTONDOWN                 : messageName = ""WM_NCXBUTTONDOWN"";     break; //0x00AB
#  endif

#  ifdef KIT_PM_WM_NCXBUTTONUP
  case WM_NCXBUTTONUP                   : messageName = ""WM_NCXBUTTONUP"";       break; //0x00AC
#  endif

#  ifdef KIT_PM_WM_NCXBUTTONDBLCLK
  case WM_NCXBUTTONDBLCLK               : messageName = ""WM_NCXBUTTONDBLCLK"";   break; //0x00AD
#  endif
#endif /* _WIN32_WINNT >= 0x0500 */


#if(_WIN32_WINNT >= 0x0501)
#  ifdef KIT_PM_WM_INPUT_DEVICE_CHANGE
  case WM_INPUT_DEVICE_CHANGE           : messageName = ""WM_INPUT_DEVICE_CHANGE""; break; //0x00FE
#  endif

#  ifdef KIT_PM_WM_INPUT
  case WM_INPUT                         : messageName = ""WM_INPUT"";             break; //0x00FF
#  endif
#endif /* _WIN32_WINNT >= 0x0501 */


#  ifdef KIT_PM_WM_KEYDOWN
  case WM_KEYDOWN                       : messageName = ""WM_KEYDOWN"";           break; //0x0100
#  endif

#  ifdef KIT_PM_WM_KEYUP
  case WM_KEYUP                         : messageName = ""WM_KEYUP"";             break; //0x0101
#  endif

#  ifdef KIT_PM_WM_CHAR
  case WM_CHAR                          : messageName = ""WM_CHAR"";              break; //0x0102
#  endif

#  ifdef KIT_PM_WM_DEADCHAR
  case WM_DEADCHAR                      : messageName = ""WM_DEADCHAR"";          break; //0x0103
#  endif

#  ifdef KIT_PM_WM_SYSKEYDOWN
  case WM_SYSKEYDOWN                    : messageName = ""WM_SYSKEYDOWN"";        break; //0x0104
#  endif

#  ifdef KIT_PM_WM_SYSKEYUP
  case WM_SYSKEYUP                      : messageName = ""WM_SYSKEYUP"";          break; //0x0105
#  endif

#  ifdef KIT_PM_WM_SYSCHAR
  case WM_SYSCHAR                       : messageName = ""WM_SYSCHAR"";           break; //0x0106
#  endif

#  ifdef KIT_PM_WM_SYSDEADCHAR
  case WM_SYSDEADCHAR                   : messageName = ""WM_SYSDEADCHAR"";       break; //0x0107
#  endif


#if(_WIN32_WINNT >= 0x0501)
#  ifdef KIT_PM_WM_UNICHAR
  case WM_UNICHAR                       : messageName = ""WM_UNICHAR"";           break; //0x0109
#  endif
#endif /* _WIN32_WINNT >= 0x0501 */


#if(WINVER >= 0x0400)
#  ifdef KIT_PM_WM_IME_STARTCOMPOSITION
  case WM_IME_STARTCOMPOSITION          : messageName = ""WM_IME_STARTCOMPOSITION""; break; //0x010D
#  endif

#  ifdef KIT_PM_WM_IME_ENDCOMPOSITION
  case WM_IME_ENDCOMPOSITION            : messageName = ""WM_IME_ENDCOMPOSITION"";   break; //0x010E
#  endif

#  ifdef KIT_PM_WM_IME_COMPOSITION
  case WM_IME_COMPOSITION               : messageName = ""WM_IME_COMPOSITION"";      break; //0x010F
#  endif
#endif /* WINVER >= 0x0400 */


#  ifdef KIT_PM_WM_INITDIALOG
  case WM_INITDIALOG                    : messageName = ""WM_INITDIALOG"";        break; //0x0110
#  endif

#  ifdef KIT_PM_WM_COMMAND
  case WM_COMMAND                       : messageName = ""WM_COMMAND"";           break; //0x0111
#  endif

#  ifdef KIT_PM_WM_SYSCOMMAND
  case WM_SYSCOMMAND                    : messageName = ""WM_SYSCOMMAND"";        break; //0x0112
#  endif

#  ifdef KIT_PM_WM_TIMER
  case WM_TIMER                         : messageName = ""WM_TIMER"";             break; //0x0113
#  endif

#  ifdef KIT_PM_WM_HSCROLL
  case WM_HSCROLL                       : messageName = ""WM_HSCROLL"";           break; //0x0114
#  endif

#  ifdef KIT_PM_WM_VSCROLL
  case WM_VSCROLL                       : messageName = ""WM_VSCROLL"";           break; //0x0115
#  endif

#  ifdef KIT_PM_WM_INITMENU
  case WM_INITMENU                      : messageName = ""WM_INITMENU"";          break; //0x0116
#  endif

#  ifdef KIT_PM_WM_INITMENUPOPUP
  case WM_INITMENUPOPUP                 : messageName = ""WM_INITMENUPOPUP"";     break; //0x0117
#  endif


#if(WINVER >= 0x0601)
#  ifdef KIT_PM_WM_GESTURE
  case WM_GESTURE                       : messageName = ""WM_GESTURE"";           break; //0x0119
#  endif

#  ifdef KIT_PM_WM_GESTURENOTIFY
  case WM_GESTURENOTIFY                 : messageName = ""WM_GESTURENOTIFY"";     break; //0x011A
#  endif
#endif /* WINVER >= 0x0601 */


#  ifdef KIT_PM_WM_MENUSELECT
  case WM_MENUSELECT                    : messageName = ""WM_MENUSELECT"";        break; //0x011F
#  endif

#  ifdef KIT_PM_WM_MENUCHAR
  case WM_MENUCHAR                      : messageName = ""WM_MENUCHAR"";          break; //0x0120
#  endif

#  ifdef KIT_PM_WM_ENTERIDLE
  case WM_ENTERIDLE                     : messageName = ""WM_ENTERIDLE"";         break; //0x0121
#  endif


/* WHY IS THIS SET UP THIS WAY! */
#if(WINVER >= 0x0500)
#ifndef _WIN32_WCE
#  ifdef KIT_PM_WM_MENURBUTTONUP
  case WM_MENURBUTTONUP                 : messageName = ""WM_MENURBUTTONUP"";     break; //0x0122
#  endif

#  ifdef KIT_PM_WM_MENUDRAG
  case WM_MENUDRAG                      : messageName = ""WM_MENUDRAG"";          break; //0x0123
#  endif

#  ifdef KIT_PM_WM_MENUGETOBJECT
  case WM_MENUGETOBJECT                 : messageName = ""WM_MENUGETOBJECT"";     break; //0x0124
#  endif

#  ifdef KIT_PM_WM_UNINITMENUPOPUP
  case WM_UNINITMENUPOPUP               : messageName = ""WM_UNINITMENUPOPUP"";   break; //0x0125
#  endif

#  ifdef KIT_PM_WM_MENUCOMMAND
  case WM_MENUCOMMAND                   : messageName = ""WM_MENUCOMMAND"";       break; //0x0126
#  endif
#ifndef _WIN32_WCE
#if(_WIN32_WINNT >= 0x0500)
#  ifdef KIT_PM_WM_CHANGEUISTATE
  case WM_CHANGEUISTATE                 : messageName = ""WM_CHANGEUISTATE"";     break; //0x0127
#  endif

#  ifdef KIT_PM_WM_UPDATEUISTATE
  case WM_UPDATEUISTATE                 : messageName = ""WM_UPDATEUISTATE"";     break; //0x0128
#  endif

#  ifdef KIT_PM_WM_QUERYUISTATE
  case WM_QUERYUISTATE                  : messageName = ""WM_QUERYUISTATE"";      break; //0x0129
#  endif
#endif /* _WIN32_WINNT >= 0x0500 */
#endif

#endif
#endif /* WINVER >= 0x0500 */
/* WHY IS THIS SET UP THIS WAY! */



#  ifdef KIT_PM_WM_CTLCOLORMSGBOX
  case WM_CTLCOLORMSGBOX                : messageName = ""WM_CTLCOLORMSGBOX"";    break; //0x0132
#  endif

#  ifdef KIT_PM_WM_CTLCOLOREDIT
  case WM_CTLCOLOREDIT                  : messageName = ""WM_CTLCOLOREDIT"";      break; //0x0133
#  endif

#  ifdef KIT_PM_WM_CTLCOLORLISTBOX
  case WM_CTLCOLORLISTBOX               : messageName = ""WM_CTLCOLORLISTBOX"";   break; //0x0134
#  endif

#  ifdef KIT_PM_WM_CTLCOLORBTN
  case WM_CTLCOLORBTN                   : messageName = ""WM_CTLCOLORBTN"";       break; //0x0135
#  endif

#  ifdef KIT_PM_WM_CTLCOLORDLG
  case WM_CTLCOLORDLG                   : messageName = ""WM_CTLCOLORDLG"";       break; //0x0136
#  endif

#  ifdef KIT_PM_WM_CTLCOLORSCROLLBAR
  case WM_CTLCOLORSCROLLBAR             : messageName = ""WM_CTLCOLORSCROLLBAR""; break; //0x0137
#  endif

#  ifdef KIT_PM_WM_CTLCOLORSTATIC
  case WM_CTLCOLORSTATIC                : messageName = ""WM_CTLCOLORSTATIC"";    break; //0x0138
#  endif

#  ifdef KIT_PM_MN_GETHMENU
  case MN_GETHMENU                      : messageName = ""MN_GETHMENU"";          break; //0x01E1
#  endif

#  ifdef KIT_PM_WM_MOUSEMOVE
  case WM_MOUSEMOVE                     : messageName = ""WM_MOUSEMOVE"";         break; //0x0200
#  endif

#  ifdef KIT_PM_WM_LBUTTONDOWN
  case WM_LBUTTONDOWN                   : messageName = ""WM_LBUTTONDOWN"";       break; //0x0201
#  endif

#  ifdef KIT_PM_WM_LBUTTONUP
  case WM_LBUTTONUP                     : messageName = ""WM_LBUTTONUP"";         break; //0x0202
#  endif

#  ifdef KIT_PM_WM_LBUTTONDBLCLK
  case WM_LBUTTONDBLCLK                 : messageName = ""WM_LBUTTONDBLCLK"";     break; //0x0203
#  endif

#  ifdef KIT_PM_WM_RBUTTONDOWN
  case WM_RBUTTONDOWN                   : messageName = ""WM_RBUTTONDOWN"";       break; //0x0204
#  endif

#  ifdef KIT_PM_WM_RBUTTONUP
  case WM_RBUTTONUP                     : messageName = ""WM_RBUTTONUP"";         break; //0x0205
#  endif

#  ifdef KIT_PM_WM_RBUTTONDBLCLK
  case WM_RBUTTONDBLCLK                 : messageName = ""WM_RBUTTONDBLCLK"";     break; //0x0206
#  endif

#  ifdef KIT_PM_WM_MBUTTONDOWN
  case WM_MBUTTONDOWN                   : messageName = ""WM_MBUTTONDOWN"";       break; //0x0207
#  endif

#  ifdef KIT_PM_WM_MBUTTONUP
  case WM_MBUTTONUP                     : messageName = ""WM_MBUTTONUP"";         break; //0x0208
#  endif

#  ifdef KIT_PM_WM_MBUTTONDBLCLK
  case WM_MBUTTONDBLCLK                 : messageName = ""WM_MBUTTONDBLCLK"";     break; //0x0209
#  endif


#if (_WIN32_WINNT >= 0x0400) || (_WIN32_WINDOWS > 0x0400)
#  ifdef KIT_PM_WM_MOUSEWHEEL
  case WM_MOUSEWHEEL                    : messageName = ""WM_MOUSEWHEEL"";        break; //0x020A
#  endif
#endif


#if (_WIN32_WINNT >= 0x0500)
#  ifdef KIT_PM_WM_XBUTTONDOWN
  case WM_XBUTTONDOWN                   : messageName = ""WM_XBUTTONDOWN"";       break; //0x020B
#  endif

#  ifdef KIT_PM_WM_XBUTTONUP
  case WM_XBUTTONUP                     : messageName = ""WM_XBUTTONUP"";         break; //0x020C
#  endif

#  ifdef KIT_PM_WM_XBUTTONDBLCLK
  case WM_XBUTTONDBLCLK                 : messageName = ""WM_XBUTTONDBLCLK"";     break; //0x020D
#  endif
#endif


#  ifdef KIT_PM_WM_PARENTNOTIFY
  case WM_PARENTNOTIFY                  : messageName = ""WM_PARENTNOTIFY"";      break; //0x0210
#  endif

#  ifdef KIT_PM_WM_ENTERMENULOOP
  case WM_ENTERMENULOOP                 : messageName = ""WM_ENTERMENULOOP"";     break; //0x0211
#  endif

#  ifdef KIT_PM_WM_EXITMENULOOP
  case WM_EXITMENULOOP                  : messageName = ""WM_EXITMENULOOP"";      break; //0x0212
#  endif


#if(WINVER >= 0x0400)
#  ifdef KIT_PM_WM_NEXTMENU
  case WM_NEXTMENU                      : messageName = ""WM_NEXTMENU"";          break; //0x0213
#  endif

#  ifdef KIT_PM_WM_SIZING
  case WM_SIZING                        : messageName = ""WM_SIZING"";            break; //0x0214
#  endif

#  ifdef KIT_PM_WM_CAPTURECHANGED
  case WM_CAPTURECHANGED                : messageName = ""WM_CAPTURECHANGED"";    break; //0x0215
#  endif

#  ifdef KIT_PM_WM_MOVING
  case WM_MOVING                        : messageName = ""WM_MOVING"";            break; //0x0216
#  endif

#  ifdef KIT_PM_WM_POWERBROADCAST
  case WM_POWERBROADCAST                : messageName = ""WM_POWERBROADCAST"";    break; //0x0218
#  endif

#  ifdef KIT_PM_WM_DEVICECHANGE
  case WM_DEVICECHANGE                  : messageName = ""WM_DEVICECHANGE"";      break; //0x0219
#  endif
#endif /* WINVER >= 0x0400 */


#  ifdef KIT_PM_WM_MDICREATE
  case WM_MDICREATE                     : messageName = ""WM_MDICREATE"";         break; //0x0220
#  endif

#  ifdef KIT_PM_WM_MDIDESTROY
  case WM_MDIDESTROY                    : messageName = ""WM_MDIDESTROY"";        break; //0x0221
#  endif

#  ifdef KIT_PM_WM_MDIACTIVATE
  case WM_MDIACTIVATE                   : messageName = ""WM_MDIACTIVATE"";       break; //0x0222
#  endif

#  ifdef KIT_PM_WM_MDIRESTORE
  case WM_MDIRESTORE                    : messageName = ""WM_MDIRESTORE"";        break; //0x0223
#  endif

#  ifdef KIT_PM_WM_MDINEXT
  case WM_MDINEXT                       : messageName = ""WM_MDINEXT"";           break; //0x0224
#  endif

#  ifdef KIT_PM_WM_MDIMAXIMIZE
  case WM_MDIMAXIMIZE                   : messageName = ""WM_MDIMAXIMIZE"";       break; //0x0225
#  endif

#  ifdef KIT_PM_WM_MDITILE
  case WM_MDITILE                       : messageName = ""WM_MDITILE"";           break; //0x0226
#  endif

#  ifdef KIT_PM_WM_MDICASCADE
  case WM_MDICASCADE                    : messageName = ""WM_MDICASCADE"";        break; //0x0227
#  endif

#  ifdef KIT_PM_WM_MDIICONARRANGE
  case WM_MDIICONARRANGE                : messageName = ""WM_MDIICONARRANGE"";    break; //0x0228
#  endif

#  ifdef KIT_PM_WM_MDIGETACTIVE
  case WM_MDIGETACTIVE                  : messageName = ""WM_MDIGETACTIVE"";      break; //0x0229
#  endif

#  ifdef KIT_PM_WM_MDISETMENU
  case WM_MDISETMENU                    : messageName = ""WM_MDISETMENU"";        break; //0x0230
#  endif

#  ifdef KIT_PM_WM_ENTERSIZEMOVE
  case WM_ENTERSIZEMOVE                 : messageName = ""WM_ENTERSIZEMOVE"";     break; //0x0231
#  endif

#  ifdef KIT_PM_WM_EXITSIZEMOVE
  case WM_EXITSIZEMOVE                  : messageName = ""WM_EXITSIZEMOVE"";      break; //0x0232
#  endif

#  ifdef KIT_PM_WM_DROPFILES
  case WM_DROPFILES                     : messageName = ""WM_DROPFILES"";         break; //0x0233
#  endif

#  ifdef KIT_PM_WM_MDIREFRESHMENU
  case WM_MDIREFRESHMENU                : messageName = ""WM_MDIREFRESHMENU"";    break; //0x0234
#  endif


#if(WINVER >= 0x0602)
#  ifdef KIT_PM_WM_POINTERDEVICECHANGE
  case WM_POINTERDEVICECHANGE           : messageName = ""WM_POINTERDEVICECHANGE"";     break; //0x0238
#  endif

#  ifdef KIT_PM_WM_POINTERDEVICEINRANGE
  case WM_POINTERDEVICEINRANGE          : messageName = ""WM_POINTERDEVICEINRANGE"";    break; //0x0239
#  endif

#  ifdef KIT_PM_WM_POINTERDEVICEOUTOFRANGE
  case WM_POINTERDEVICEOUTOFRANGE       : messageName = ""WM_POINTERDEVICEOUTOFRANGE""; break; //0x023A
#  endif
#endif /* WINVER >= 0x0602 */


#if(WINVER >= 0x0601)
#  ifdef KIT_PM_WM_TOUCH
  case WM_TOUCH                         : messageName = ""WM_TOUCH"";             break; //0x0240
#  endif
#endif /* WINVER >= 0x0601 */


#if(WINVER >= 0x0602)
#  ifdef KIT_PM_WM_NCPOINTERUPDATE
  case WM_NCPOINTERUPDATE               : messageName = ""WM_NCPOINTERUPDATE"";   break; //0x0241
#  endif

#  ifdef KIT_PM_WM_NCPOINTERDOWN
  case WM_NCPOINTERDOWN                 : messageName = ""WM_NCPOINTERDOWN"";     break; //0x0242
#  endif

#  ifdef KIT_PM_WM_NCPOINTERUP
  case WM_NCPOINTERUP                   : messageName = ""WM_NCPOINTERUP"";       break; //0x0243
#  endif

#  ifdef KIT_PM_WM_POINTERUPDATE
  case WM_POINTERUPDATE                 : messageName = ""WM_POINTERUPDATE"";     break; //0x0245
#  endif

#  ifdef KIT_PM_WM_POINTERDOWN
  case WM_POINTERDOWN                   : messageName = ""WM_POINTERDOWN"";       break; //0x0246
#  endif

#  ifdef KIT_PM_WM_POINTERUP
  case WM_POINTERUP                     : messageName = ""WM_POINTERUP"";         break; //0x0247
#  endif

#  ifdef KIT_PM_WM_POINTERENTER
  case WM_POINTERENTER                  : messageName = ""WM_POINTERENTER"";      break; //0x0249
#  endif

#  ifdef KIT_PM_WM_POINTERLEAVE
  case WM_POINTERLEAVE                  : messageName = ""WM_POINTERLEAVE"";      break; //0x024A
#  endif

#  ifdef KIT_PM_WM_POINTERACTIVATE
  case WM_POINTERACTIVATE               : messageName = ""WM_POINTERACTIVATE"";   break; //0x024B
#  endif

#  ifdef KIT_PM_WM_POINTERCAPTURECHANGED
  case WM_POINTERCAPTURECHANGED         : messageName = ""WM_POINTERCAPTURECHANGED""; break; //0x024C
#  endif

#  ifdef KIT_PM_WM_TOUCHHITTESTING
  case WM_TOUCHHITTESTING               : messageName = ""WM_TOUCHHITTESTING"";   break; //0x024D
#  endif

#  ifdef KIT_PM_WM_POINTERWHEEL
  case WM_POINTERWHEEL                  : messageName = ""WM_POINTERWHEEL"";      break; //0x024E
#  endif

#  ifdef KIT_PM_WM_POINTERHWHEEL
  case WM_POINTERHWHEEL                 : messageName = ""WM_POINTERHWHEEL"";     break; //0x024F
#  endif

#  ifdef KIT_PM_DM_POINTERHITTEST
  case DM_POINTERHITTEST                : messageName = ""DM_POINTERHITTEST"";    break; //0x0250
#  endif

#  ifdef KIT_PM_WM_POINTERROUTEDTO
  case WM_POINTERROUTEDTO               : messageName = ""WM_POINTERROUTEDTO"";   break; //0x0251
#  endif

#  ifdef KIT_PM_WM_POINTERROUTEDAWAY
  case WM_POINTERROUTEDAWAY             : messageName = ""WM_POINTERROUTEDAWAY""; break; //0x0252
#  endif

#  ifdef KIT_PM_WM_POINTERROUTEDRELEASED2
  case WM_POINTERROUTEDRELEASED         : messageName = ""WM_POINTERROUTEDRELEASED""; break; //0x0253
#  endif
#endif /* WINVER >= 0x0602 */


#if(WINVER >= 0x0400)
#  ifdef KIT_PM_WM_IME_SETCONTEXT
  case WM_IME_SETCONTEXT                : messageName = ""WM_IME_SETCONTEXT"";    break; //0x0281
#  endif

#  ifdef KIT_PM_WM_IME_NOTIFY
  case WM_IME_NOTIFY                    : messageName = ""WM_IME_NOTIFY"";        break; //0x0282
#  endif

#  ifdef KIT_PM_WM_IME_CONTROL
  case WM_IME_CONTROL                   : messageName = ""WM_IME_CONTROL"";       break; //0x0283
#  endif

#  ifdef KIT_PM_WM_IME_COMPOSITIONFULL
  case WM_IME_COMPOSITIONFULL           : messageName = ""WM_IME_COMPOSITIONFULL""; break; //0x0284
#  endif

#  ifdef KIT_PM_WM_IME_SELECT
  case WM_IME_SELECT                    : messageName = ""WM_IME_SELECT"";        break; //0x0285
#  endif

#  ifdef KIT_PM_WM_IME_CHAR
  case WM_IME_CHAR                      : messageName = ""WM_IME_CHAR"";          break; //0x0286
#  endif
#endif /* WINVER >= 0x0400 */


#if(WINVER >= 0x0500)
#  ifdef KIT_PM_WM_IME_REQUEST
  case WM_IME_REQUEST                   : messageName = ""WM_IME_REQUEST"";       break; //0x0288
#  endif
#endif /* WINVER >= 0x0500 */


#if(WINVER >= 0x0400)
#  ifdef KIT_PM_WM_IME_KEYDOWN
  case WM_IME_KEYDOWN                   : messageName = ""WM_IME_KEYDOWN"";       break; //0x0290
#  endif

#  ifdef KIT_PM_WM_IME_KEYUP
  case WM_IME_KEYUP                     : messageName = ""WM_IME_KEYUP"";         break; //0x0291
#  endif
#endif /* WINVER >= 0x0400 */


#if((_WIN32_WINNT >= 0x0400) || (WINVER >= 0x0500))
#  ifdef KIT_PM_WM_MOUSEHOVER
  case WM_MOUSEHOVER                    : messageName = ""WM_MOUSEHOVER"";        break; //0x02A1
#  endif

#  ifdef KIT_PM_WM_MOUSELEAVE
  case WM_MOUSELEAVE                    : messageName = ""WM_MOUSELEAVE"";        break; //0x02A3
#  endif
#endif


#if(WINVER >= 0x0500)
#  ifdef KIT_PM_WM_NCMOUSEHOVER
  case WM_NCMOUSEHOVER                  : messageName = ""WM_NCMOUSEHOVER"";      break; //0x02A0
#  endif

#  ifdef KIT_PM_WM_NCMOUSELEAVE
  case WM_NCMOUSELEAVE                  : messageName = ""WM_NCMOUSELEAVE"";      break; //0x02A2
#  endif
#endif /* WINVER >= 0x0500 */


#if(_WIN32_WINNT >= 0x0501)
#  ifdef KIT_PM_WM_WTSSESSION_CHANGE
  case WM_WTSSESSION_CHANGE             : messageName = ""WM_WTSSESSION_CHANGE""; break; //0x02B1
#  endif
#endif /* _WIN32_WINNT >= 0x0501 */


#if(WINVER >= 0x0601)
#  ifdef KIT_PM_WM_DPICHANGED
  case WM_DPICHANGED                    : messageName = ""WM_DPICHANGED"";        break; //0x02E0
#  endif
#endif /* WINVER >= 0x0601 */


#if(WINVER >= 0x0605)
#  ifdef KIT_PM_WM_DPICHANGED_BEFOREPARENT
  case WM_DPICHANGED_BEFOREPARENT       : messageName = ""WM_DPICHANGED_BEFOREPARENT""; break; //0x02E2
#  endif

#  ifdef KIT_PM_WM_DPICHANGED_AFTERPARENT
  case WM_DPICHANGED_AFTERPARENT        : messageName = ""WM_DPICHANGED_AFTERPARENT"";  break; //0x02E3
#  endif

#  ifdef KIT_PM_WM_GETDPISCALEDSIZE
  case WM_GETDPISCALEDSIZE              : messageName = ""WM_GETDPISCALEDSIZE"";  break; //0x02E4
#  endif
#endif /* WINVER >= 0x0605 */


#  ifdef KIT_PM_WM_CUT
  case WM_CUT                           : messageName = ""WM_CUT"";               break; //0x0300
#  endif

#  ifdef KIT_PM_WM_COPY
  case WM_COPY                          : messageName = ""WM_COPY"";              break; //0x0301
#  endif

#  ifdef KIT_PM_WM_PASTE
  case WM_PASTE                         : messageName = ""WM_PASTE"";             break; //0x0302
#  endif

#  ifdef KIT_PM_WM_CLEAR
  case WM_CLEAR                         : messageName = ""WM_CLEAR"";             break; //0x0303
#  endif

#  ifdef KIT_PM_WM_UNDO
  case WM_UNDO                          : messageName = ""WM_UNDO"";              break; //0x0304
#  endif

#  ifdef KIT_PM_WM_RENDERFORMAT
  case WM_RENDERFORMAT                  : messageName = ""WM_RENDERFORMAT"";      break; //0x0305
#  endif

#  ifdef KIT_PM_WM_RENDERALLFORMATS
  case WM_RENDERALLFORMATS              : messageName = ""WM_RENDERALLFORMATS"";  break; //0x0306
#  endif

#  ifdef KIT_PM_WM_DESTROYCLIPBOARD
  case WM_DESTROYCLIPBOARD              : messageName = ""WM_DESTROYCLIPBOARD"";  break; //0x0307
#  endif

#  ifdef KIT_PM_WM_DRAWCLIPBOARD
  case WM_DRAWCLIPBOARD                 : messageName = ""WM_DRAWCLIPBOARD"";     break; //0x0308
#  endif

#  ifdef KIT_PM_WM_PAINTCLIPBOARD
  case WM_PAINTCLIPBOARD                : messageName = ""WM_PAINTCLIPBOARD"";    break; //0x0309
#  endif

#  ifdef KIT_PM_WM_VSCROLLCLIPBOARD
  case WM_VSCROLLCLIPBOARD              : messageName = ""WM_VSCROLLCLIPBOARD"";  break; //0x030A
#  endif

#  ifdef KIT_PM_WM_SIZECLIPBOARD
  case WM_SIZECLIPBOARD                 : messageName = ""WM_SIZECLIPBOARD"";     break; //0x030B
#  endif

#  ifdef KIT_PM_WM_ASKCBFORMATNAME
  case WM_ASKCBFORMATNAME               : messageName = ""WM_ASKCBFORMATNAME"";   break; //0x030C
#  endif

#  ifdef KIT_PM_WM_CHANGECBCHAIN
  case WM_CHANGECBCHAIN                 : messageName = ""WM_CHANGECBCHAIN"";     break; //0x030D
#  endif

#  ifdef KIT_PM_WM_HSCROLLCLIPBOARD
  case WM_HSCROLLCLIPBOARD              : messageName = ""WM_HSCROLLCLIPBOARD"";  break; //0x030E
#  endif

#  ifdef KIT_PM_WM_QUERYNEWPALETTE
  case WM_QUERYNEWPALETTE               : messageName = ""WM_QUERYNEWPALETTE"";   break; //0x030F
#  endif

#  ifdef KIT_PM_WM_PALETTEISCHANGING
  case WM_PALETTEISCHANGING             : messageName = ""WM_PALETTEISCHANGING""; break; //0x0310
#  endif

#  ifdef KIT_PM_WM_PALETTECHANGED
  case WM_PALETTECHANGED                : messageName = ""WM_PALETTECHANGED"";    break; //0x0311
#  endif

#  ifdef KIT_PM_WM_HOTKEY
  case WM_HOTKEY                        : messageName = ""WM_HOTKEY"";            break; //0x0312
#  endif


#if(WINVER >= 0x0400)
#  ifdef KIT_PM_WM_PRINT
  case WM_PRINT                         : messageName = ""WM_PRINT"";       break; //0x0317
#  endif

#  ifdef KIT_PM_WM_PRINTCLIENT
  case WM_PRINTCLIENT                   : messageName = ""WM_PRINTCLIENT""; break; //0x0318
#  endif
#endif /* WINVER >= 0x0400 */


#if(_WIN32_WINNT >= 0x0500)
#  ifdef KIT_PM_WM_APPCOMMAND
  case WM_APPCOMMAND                    : messageName = ""WM_APPCOMMAND""; break; //0x0319
#  endif
#endif /* _WIN32_WINNT >= 0x0500 */


#if(_WIN32_WINNT >= 0x0501)
#  ifdef KIT_PM_WM_THEMECHANGED
  case WM_THEMECHANGED                  : messageName = ""WM_THEMECHANGED""; break; //0x031A
#  endif
#endif /* _WIN32_WINNT >= 0x0501 */


#if(_WIN32_WINNT >= 0x0501)
#  ifdef KIT_PM_WM_CLIPBOARDUPDATE
  case WM_CLIPBOARDUPDATE               : messageName = ""WM_CLIPBOARDUPDATE""; break; //0x031D
#  endif
#endif /* _WIN32_WINNT >= 0x0501 */


#if(_WIN32_WINNT >= 0x0600)
#  ifdef KIT_PM_WM_DWMCOMPOSITIONCHANGED
  case WM_DWMCOMPOSITIONCHANGED         : messageName = ""WM_DWMCOMPOSITIONCHANGED"";       break; //0x031E
#  endif

#  ifdef KIT_PM_WM_DWMNCRENDERINGCHANGED
  case WM_DWMNCRENDERINGCHANGED         : messageName = ""WM_DWMNCRENDERINGCHANGED"";       break; //0x031F
#  endif

#  ifdef KIT_PM_WM_DWMCOLORIZATIONCOLORCHANGED
  case WM_DWMCOLORIZATIONCOLORCHANGED   : messageName = ""WM_DWMCOLORIZATIONCOLORCHANGED""; break; //0x0320
#  endif

#  ifdef KIT_PM_WM_DWMWINDOWMAXIMIZEDCHANGE
  case WM_DWMWINDOWMAXIMIZEDCHANGE      : messageName = ""WM_DWMWINDOWMAXIMIZEDCHANGE"";    break; //0x0321
#  endif
#endif /* _WIN32_WINNT >= 0x0600 */


#if(_WIN32_WINNT >= 0x0601)
#  ifdef KIT_PM_WM_DWMSENDICONICTHUMBNAIL
  case WM_DWMSENDICONICTHUMBNAIL        : messageName = ""WM_DWMSENDICONICTHUMBNAIL"";         break; //0x0323
#  endif

#  ifdef KIT_PM_WM_DWMSENDICONICLIVEPREVIEWBITMAP
  case WM_DWMSENDICONICLIVEPREVIEWBITMAP: messageName = ""WM_DWMSENDICONICLIVEPREVIEWBITMAP""; break; //0x0326
#  endif
#endif /* _WIN32_WINNT >= 0x0601 */


#if(WINVER >= 0x0600)
#  ifdef KIT_PM_WM_GETTITLEBARINFOEX
  case WM_GETTITLEBARINFOEX             : messageName = ""WM_GETTITLEBARINFOEX""; break; //0x033F
#  endif
#endif /* WINVER >= 0x0600 */


  default:;
#  ifdef KIT_PM_WM_UNKNOWN
  messageName = ""(unknown)"";
#  endif
  }



  if(messageName != nullptr){
    printf(""hwnd=%p, wParam=0x%08X, lParam=%p, msg={ 0x%04X \""%s\"" }\n"",
           hwnd, (u32)wParam, (void*)lParam, message, messageName);
  }
#endif /* _DEBUG */
}"
HeU1F7wd,SandwormAI - Updating,283375,C#,Saturday 10th of February 2024 12:33:11 PM CDT,"public override void DoAIInterval()
{
	base.DoAIInterval();
	if (StartOfRound.Instance.livingPlayers == 0 || isEnemyDead)
	{
		return;
	}
	PlayerControllerB playerControllerB = null;
	switch (currentBehaviourStateIndex)
	{
	case 0:
		if (!emerged && !inEmergingState)
		{
			if (!roamMap.inProgress)
			{
				StartSearch(base.transform.position, roamMap);
			}
			agent.speed = 4f;
			playerControllerB = GetClosestPlayer(requireLineOfSight: false, cannotBeInShip: true, cannotBeNearShip: true);
			if (playerControllerB != null && mostOptimalDistance < 15f)
			{
				SetMovingTowardsTargetPlayer(playerControllerB);
				SwitchToBehaviourState(1);
				chaseTimer = 0f;
			}
		}
		break;
	case 1:
		if (roamMap.inProgress)
		{
			StopSearch(roamMap);
		}
		targetPlayer = GetClosestPlayer(requireLineOfSight: false, cannotBeInShip: true, cannotBeNearShip: true);
		if (mostOptimalDistance > 19f)
		{
			targetPlayer = null;
		}
		if (targetPlayer == null)
		{
			SwitchToBehaviourState(0);
			break;
		}
		SetMovingTowardsTargetPlayer(targetPlayer);
		if (chaseTimer < 1.5f && Vector3.Distance(base.transform.position, targetPlayer.transform.position) < 4f && !(Vector3.Distance(StartOfRound.Instance.shipInnerRoomBounds.ClosestPoint(base.transform.position), base.transform.position) < 9f) && UnityEngine.Random.Range(0, 100) < 17)
		{
			StartEmergeAnimation();
		}
		break;
	}
}

public override void Update()
{
	base.Update();
	if (isEnemyDead)
	{
		return;
	}
	if (stateLastFrame != currentBehaviourStateIndex)
	{
		stateLastFrame = currentBehaviourStateIndex;
		chaseTimer = 0f;
	}
	switch (currentBehaviourStateIndex)
	{
	case 0:
		if (creatureSFX.isPlaying)
		{
			creatureSFX.Stop();
		}
		break;
	case 1:
		if (!creatureSFX.isPlaying && !inEmergingState && !emerged)
		{
			int num = UnityEngine.Random.Range(0, ambientRumbleSFX.Length);
			creatureSFX.clip = ambientRumbleSFX[num];
			creatureSFX.Play();
		}
		if (!base.IsOwner)
		{
			break;
		}
		if (targetPlayer == null)
		{
			SwitchToBehaviourState(0);
			break;
		}
		if (!PlayerIsTargetable(targetPlayer, cannotBeInShip: true) || Vector3.Distance(targetPlayer.transform.position, base.transform.position) > 22f)
		{
			chaseTimer += Time.deltaTime;
		}
		else
		{
			chaseTimer = 0f;
		}
		if (chaseTimer > 6f)
		{
			SwitchToBehaviourState(0);
		}
		break;
	}
}"
LhmdCn86,SandwormAI - Emerging,283375,C#,Saturday 10th of February 2024 12:32:00 PM CDT,"private IEnumerator EmergeFromGround(int rot)
{
	RoundManager.PlayRandomClip(creatureSFX, groundRumbleSFX);
	emergeFromGroundParticle1.Play(withChildren: true);

	yield return new WaitForSeconds((float)sandWormRandom.Next(1, 7) / 3f);
	creatureAnimator.SetBool(""emerge"", value: true);
	inEmergingState = false;
	emerged = true;
	yield return new WaitForSeconds(0.1f);
	creatureSFX.PlayOneShot(emergeFromGroundSFX);
	emergeFromGroundParticle2.Play();
	ShakePlayerCameraInProximity(base.transform.position);
	yield return new WaitForSeconds((float)sandWormRandom.Next(2, 5) / 3f);
	creatureVoice.PlayOneShot(roarSFX[sandWormRandom.Next(0, roarSFX.Length)]);

	yield return new WaitUntil(() => hitGroundInAnimation);
	hitGroundParticle.Play(withChildren: true);
	groundAudio.PlayOneShot(hitGroundSFX);
	ShakePlayerCameraInProximity(groundAudio.transform.position);
	yield return new WaitForSeconds(10f);
	SetInGround();
}

public void SetInGround()
{
	base.transform.position = endOfFlightPathPosition;
	inSpecialAnimation = false;
	emerged = false;
	inEmergingState = false;
	creatureAnimator.SetBool(""emerge"", value: false);
	if (base.IsOwner)
	{
		agent.enabled = true;
	}
}"
e7Ccxxze,SandwormAI - OnCollide,283375,C#,Saturday 10th of February 2024 12:28:16 PM CDT,"// SandwormAI
public override void OnCollideWithPlayer(Collider other)
{
	base.OnCollideWithPlayer(other);
	if (!isEnemyDead && emerged)
	{
		PlayerControllerB component = other.gameObject.GetComponent<PlayerControllerB>();
		if (component != null && component.inAnimationWithEnemy == null && component == GameNetworkManager.Instance.localPlayerController)
		{
			EatPlayer(component);
		}
	}
}

public void EatPlayer(PlayerControllerB playerScript)
{
	if (playerScript.inSpecialInteractAnimation && playerScript.currentTriggerInAnimationWith != null)
	{
		playerScript.currentTriggerInAnimationWith.CancelAnimationExternally();
	}
	playerScript.inAnimationWithEnemy = null;
	playerScript.inSpecialInteractAnimation = false;
	playerScript.KillPlayer(Vector3.zero, spawnBody: false);
}

public override void OnCollideWithEnemy(Collider other, EnemyAI enemyScript = null)
{
	base.OnCollideWithEnemy(other);
	if (base.IsServer && emerged)
	{
		enemyScript.KillEnemyOnOwnerClient(overrideDestroy: true);
	}
}

// EnemyAI
public void KillEnemyOnOwnerClient(bool overrideDestroy = false)
{
	if (!enemyType.canDie || !base.IsOwner)  // <-- only killable entities
	{
		return;
	}
	// ...
}"
yp1SK5Zv,# either_instance.py,here2share,Python,Saturday 10th of February 2024 12:03:26 PM CDT,"# either_instance.py

class Square:
    pass

class Circle:
    pass

class Triangle:
    pass

def detect_shape(shape):
    if isinstance(shape, (Square, Circle)):
        print(""It's either a Square or a Circle."")
        # Your further logic goes here
    else:
        print(""It's NOT a Square or a Circle."")

# Example usage
square_instance = Square()
circle_instance = Circle()
triangle_instance = Triangle()

detect_shape(square_instance) # Output: It's either a Square or a Circle.
detect_shape(triangle_instance) # Output: It's NOT a Square or a Circle.
detect_shape(circle_instance) # Output: It's either a Square or a Circle."
msvDUnxp,snowybot supersnowzy strikes back,coinwalk,JavaScript,Saturday 10th of February 2024 11:54:10 AM CDT,"var original=  parseFloat(document.getElementById('pct_balance').value);
var dockiez = original;
var base = (dockiez/1000);
var sad = (base*10);
var frock = (base*2);
var idiot = (base*6.9);
var plane = 6.9;
var submarine = 2.9;
var bob = original;
var timmy = ((Math.floor(original/sad))*sad);
var neatoh = base;
var fleif = original;
 
function dobet(){
bilance = document.getElementById('pct_balance').value;
    if (bilance>(timmy+(neatoh*plane))) {
        plane = 4.9;
        submarine = 4.9;
        neatoh = neatoh*2; 
        timmy = parseFloat(bilance);
    }
    if (bilance<(timmy-(neatoh*submarine))) {
        plane = 4.9;
        submarine = 4.9;
        neatoh = neatoh*2; 
        timmy = parseFloat(bilance);
    }  
if ((neatoh>=(bilance/300))&&(((Math.floor(((bob-bilance)/5)/frock))*frock)>base)&&(bilance<bob)&&(bilance<(((Math.floor(bilance/sad))*sad)+idiot))) {  
        plane = 4.9;
        submarine = 4.9;
        timmy = parseFloat(bilance);
        neatoh = parseFloat((Math.floor(((bob-bilance)/5)/frock))*frock);
   } 
if ((neatoh>=(bilance/300))&&(((Math.floor(((bilance-bob)/5)/frock))*frock)>base)&&(bilance>bob)&&(bilance<(((Math.floor(bilance/sad))*sad)+idiot))) {  
        plane = 4.9;
        submarine = 4.9;
        timmy = parseFloat(bilance);
        neatoh = parseFloat((Math.floor(((bilance-bob)/5)/frock))*frock);
        }
    if (bilance<base) {
        console.log(""busted"");     
        return;
    }
    if (bilance>=(dockiez*2)) {
       console.log(""winner winner chicken dinner"");
       return;
   }
$('#pct_chance').val(49.5);
$('#pct_bet').val(((neatoh*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => dobet(), 1000);
} 
dobet();"
Q37jRZZY,snowybot supersnowzy strikes back,coinwalk,JavaScript,Saturday 10th of February 2024 11:51:34 AM CDT,"var original=  parseFloat(document.getElementById('pct_balance').value);
var dockiez = original;
var base = (dockiez/1000);
var sad = (base*10);
var frock = (base*2);
var idiot = (base*6.9);
var plane = 6.9;
var submarine = 2.9;
var bob = original;
var timmy = ((Math.floor(original/sad))*sad);
var neatoh = base;
var fleif = original;
 
function dobet(){
bilance = document.getElementById('pct_balance').value;
    if (bilance>(timmy+(neatoh*plane))) {
        plane = 4.9;
        submarine = 4.9;
        neatoh = neatoh*2; 
        timmy = parseFloat(bilance);
    }
    if (bilance<(timmy-(neatoh*submarine))) {
        plane = 4.9;
        submarine = 4.9;
        neatoh = neatoh*2; 
        timmy = parseFloat(bilance);
    }  
if ((neatoh>=(bilance/300))&&(((Math.floor(((bob-bilance)/5)/frock))*frock)>base)&&(bilance<bob)&&(bilance<(((Math.floor(bilance/sad))*sad)+idiot))) {  
        plane = 4.9;
        submarine = 4.9;
        timmy = parseFloat(bilance);
        neatoh = parseFloat((Math.floor(((bob-bilance)/5)/frock))*frock);
        bob = parseFloat(bilance);
   } 
if ((neatoh>=(bilance/300))&&(((Math.floor(((bilance-bob)/5)/frock))*frock)>base)&&(bilance>bob)&&(bilance<(((Math.floor(bilance/sad))*sad)+idiot))) {  
        plane = 4.9;
        submarine = 4.9;
        timmy = parseFloat(bilance);
        neatoh = parseFloat((Math.floor(((bilance-bob)/5)/frock))*frock);
        bob = parseFloat(bilance);
        }
    if (bilance<base) {
        console.log(""busted"");     
        return;
    }
    if (bilance>=(dockiez*2)) {
       console.log(""winner winner chicken dinner"");
       return;
   }
$('#pct_chance').val(49.5);
$('#pct_bet').val(((neatoh*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => dobet(), 1000);
} 
dobet();"
4pmLMc0i,"СПРИНТ № 5 | Алгоритмы поиска | Урок 4: Поиск в отсортированном векторе, словаре и множестве 3/3",chevengur,C++,Saturday 10th of February 2024 11:48:02 AM CDT,"#include <algorithm>
#include <iostream>
#include <string>
#include <vector>

using namespace std;
template <typename RandomIt>
pair<RandomIt, RandomIt> FindStartsWith(RandomIt range_begin, RandomIt range_end, string prefix) {
    // Все строки, начинающиеся с prefix, больше или равны строке ""<prefix>""
    auto left = lower_bound(range_begin, range_end, prefix);
    // Составим строку, которая в рамках буквенных строк является точной верхней гранью
    // множества строк, начинающихся с prefix
    string upper_bound = prefix;
    ++upper_bound[upper_bound.size() - 1];
    // Первое встреченное слово, не меньшее upper_bound, обязательно является концом полуинтервала
    auto right = lower_bound(range_begin, range_end, upper_bound);
    return {left, right};
}

int main() {
    const vector<string> sorted_strings = {""moscow"", ""motovilikha"", ""murmansk""};
    const auto mo_result = FindStartsWith(begin(sorted_strings), end(sorted_strings), ""mo"");
    for (auto it = mo_result.first; it != mo_result.second; ++it) {
        cout << *it << "" "";
    }
    cout << endl;
    const auto mt_result = FindStartsWith(begin(sorted_strings), end(sorted_strings), ""mt"");
    cout << (mt_result.first - begin(sorted_strings)) << "" "" << (mt_result.second - begin(sorted_strings)) << endl;
    const auto na_result = FindStartsWith(begin(sorted_strings), end(sorted_strings), ""na"");
    cout << (na_result.first - begin(sorted_strings)) << "" "" << (na_result.second - begin(sorted_strings)) << endl;
    return 0;
} "
6aptLDuP,For,LEGEND2004,C++,Saturday 10th of February 2024 10:42:19 AM CDT,"#include <bits/stdc++.h>
using namespace std;

int main()
{
    int n;
    cin >> n;
    for(int i = 1; i <= n; i++){ // 1 2 ... n
      cout << i << "" "";
    }
    cout << '\n';
    for(int i = n; i >= 1; i--){ // n n-1 ... 1
      cout << i << "" "";
    }
    cout << '\n';
    for(int i = 1; i <= n; i *= 2){ // 1 2 4 ... 
      cout << i << "" "";
    }
    cout << '\n';
    int a , b;
    cin >> a >> b;
    for(int i = a; i <= b; i++){ // a a+1 .. b-1 b
      cout << i << "" "";
    }
    cout << '\n';
}
"
bLHesDCr,User Schema,Yonkow,JavaScript,Saturday 10th of February 2024 10:34:27 AM CDT,"const mongoose = require('mongoose');
const bcrypt = require('bcrypt');

const userSchema = new mongoose.Schema({
    username: {
        type: String,
        required: [true, 'Username is required'],
        minLength: [3, 'Username is too short']
    },
    email: {
        type: String,
        required: [true, 'Email is required'],
        minLength: [10, 'Email should be at least 10 characters long']
    },
    password: {
        type: String,
        required: [true, 'Password is required'],
        minLength: [4, 'Password should be at least 4 characters long']
    }
});

userSchema.pre('save', async function (next) {
    try {
        const hash = await bcrypt.hash(this.password, 12);

        this.password = hash;
    } catch (error) {
        return next(error);
    }
});

userSchema.virtual('rePassword')
    .set(function (value) {
        this._rePassword = value
    });

userSchema.path('password').validate(function(v) {
    if (this.password && this._rePassword) {
        if (this.password !== this._rePassword) {
            this.invalidate('rePassword', 'Passwords missmatch!');
        }
    } else (
        this.invalidate('rePassword', 'Repeat password is required field.')
    )
}, null);

const User = mongoose.model('User', userSchema);

module.exports = User;"
MKrPjF0K,Untitled,cosenza987,C++,Saturday 10th of February 2024 09:22:26 AM CDT,"//Слава Україні, Героям слава

#include <bits/stdc++.h>

using namespace std;

const int N = 1e6 + 7, LOG = 18, M = 1e9 + 7;
const int NN = N * LOG;

namespace pseg {
    long long seg[NN];
    int roots[N], L[NN], R[NN], cnt = 1;
    void insert(int x, int val, int pcur = -1, int p = -1, int l = 1, int r = M) {
        if(pcur == -1) {
            pcur = roots[x] = cnt++;
        }
        if(p == -1) {
            p = roots[x - 1];
        }
        seg[pcur] = seg[p] + 1;
        if(l == r) {
            return;
        }
        int mid = (l + r) >> 1;
        if(val > mid) {
            L[pcur] = L[p];
            R[pcur] = cnt++;
            insert(x, val, R[pcur], R[p], mid + 1, r);
        } else {
            R[pcur] = R[p];
            L[pcur] = cnt++;
            insert(x, val, L[pcur], L[p], l, mid);
        }
    }
    long long find(int p1, int p2, int i, int j, int l = 1, int r = M) {
        if(i > r or j < l) {
            return 0;
        }
        if(i <= l and r <= j) {
            return seg[p1] - seg[p2];
        }
        int mid = (l + r) >> 1;
        return find(L[p1], L[p2], i, j, l, mid) + find(R[p1], R[p2], i, j, mid + 1, r);
    }
};

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    int n, q;
    cin >> n >> q;
    vector<int> v(n + 1);
    for(int i = 1; i <= n; i++) {
        cin >> v[i];
        pseg::insert(i, v[i]);
    }
    while(q--) {
        char c;
        cin >> c;
        if(c == 'Q') {
            int a, b, x;
            cin >> a >> b >> x;
            int l = 0, r = 1e9, ans = 0;
            while(l <= r) {
                int mid = (l + r) >> 1;
                if(pseg::find(pseg::roots[b], pseg::roots[a - 1], 0, mid) >= x) {
                    ans = mid;
                    r = mid - 1;
                } else {
                    l = mid + 1;
                }
            }
            cout << ans << ""\n"";
        } else {
            int x;
            cin >> x;
            swap(v[x], v[x + 1]);
            pseg::insert(x, v[x], pseg::roots[x], pseg::roots[x - 1]);
            pseg::insert(x + 1, v[x + 1], pseg::roots[x + 1], pseg::roots[x]);
        }
    }
    return 0;
}"
28WvhYu8,script,Sterkiherz,Python,Saturday 10th of February 2024 09:20:46 AM CDT,"#script code
#--------------------------------------
# The script of the game goes in this file.

# Declare characters used by this game. The color argument colorizes the
# name of the character.

define e = Character(""Eileen"")
define d = Character(""Dog"")
define m = Character(""Tuscon Rong"")
define m2 = Character(""Tucson Rong"", what_color='#add8e6')
define s = Character(""Mr. Sun"")
define n = Character(None)

define picked_up_ball = False
define seen_ladder = False
define threw_ball = False
define dangans = False

# our main scene for this demo
screen sun_n_friends:
    imagebutton:
        xpos 10
        ypos 10
        auto ""mr_sun_%s.png""
        action Jump ('sun')

    imagebutton:
        xpos 200
        ypos 200
        auto ""ladder_%s.png""
        if seen_ladder == False:
            action Jump ('ladder')
        else:
            action Jump ('seenladder')

    imagebutton:
        xpos 800
        ypos 400
        auto ""dog_%s.png""
        action Jump ('dog')

    if picked_up_ball == False:
        imagebutton:
            xpos 90
            ypos 500
            idle ""ball_0.png""
            hover ""ball_hover.png""
            action Jump ('ball')

 


label start:
    # Here's where I'll declare my evidence

    # I've pulled out the multi-line evidence descriptions for the sake of readability
    # That's not necessary, but do make sure that the info section is formatted as a list even if it's only one string
    $ info_sun = [""This is the sun. Yeah, THE sun."", ""Ironically, he's a pretty cool guy""]
    $ info_ball = [""BALL!!"", ""(It's just a ball)""]
    $ info_dog = [""Woof woof"", ""Arf arf"", ""Bark bork""]
    $ info_badge = [""This is my attorney's badge."", ""It's my proof of lawyerhood.""]

    # Here are the profiles. They can be customized over in court_record.rpy 
        # Current format: short name, full name, occupation, info, image base name
    $ p_eileen =  profile(""Eileen"", ""Eileen"", ""Assistant"", [""She'll be helping us out today.""], ""eileen"")
    $ p_dog = profile(""Dog"", ""Baroness Doggetta von Pupperstein"", ""Dog"", info_dog, ""dog"")
    $ p_mr_sun = profile(""Sun"", ""The Sun"", ""The Sun"", info_sun, ""mr_sun"")
    $ p_tucson = profile(""Tucson"", ""Tucson Rong"", ""Defense Attorney"", [""This is me.""], ""tucson"")

    # more profiles to show multiple evidence pages
    $ mikan = profile(""Clementine"", ""Clementine Wormwood"", ""Former Assistant"", [""This is my former assistant who was recently accused of murder."", ""She's a bit clumsy, but her heart is in the right place."", ""I'm sure she'd never hurt anyone!""], ""mikan"")
    $ kuzu = profile(""BB"", ""Boss Baby"", ""Yakuza"", [""The yakuza is recruiting younger and younger these days."", ""They're worse than the prosecution office.""], ""kuzu"")
    $ ibuki = profile(""Josie"", ""Josie Jem"", ""Pop Star"", [""A sweet girl full of energy and heart."", ""I haven't heard her music yet, but I love a nice, wholesome pop song."", ""I'm looking forward to seeing her up on stage.""], ""ibuki"")
    $ sonia = profile(""Teena"", ""Teena Spi'rhit"", ""Princess"", [""The elegant princess of Neh'vermind."", """", ""...Do you think she'd go out with me?""], ""sonia"")
    $ teruteru = profile(""Terry"", ""Terry Yaki"", ""Chef"", [""He's weird, but you can't hate his cooking."" ""Seriously, this guy makes the best tempura in town""], ""teruteru"")   
    $ gundam = profile(""Simon"", ""Simon Blackquill"", ""Prosecutor/Prisoner"", [""Age: 28"", ""Gender: Male"", ""A skilled prosecutor known as the Twisted Samurai""], ""gundam"")
    $ akane = profile(""Pam"", ""Final Pam"", ""Athlete"", [""I WILL FIX THE BABY""], ""akane"")

    #And here's the evidence:
        #name, info, base name
    $ e_ball = evidence(""Ball"", info_ball, ""ball"")
    $ e_ladder = evidence(""Stepladder"", [""YOU'RE NOT MY REAL LADDER!!""], ""ladder"")
    $ e_badge = evidence(""Attorney's Badge"", info_badge, ""badge"")

    # You can present evidence to NPCs. They don't respond to everything. Here's where you set the evidence they are interested in talking about
    # note that these lists refer to whatever you've set as the evidence's base names 
    # each of these corresponds to a label below, ex. dog_badge
    $ sunlist = [""ladder"", ""ball"", ""dog"", ""eileen"", ""tucson"", ""badge"", ""mr_sun""]
    $ doglist = [""ball"", ""badge"", ""dog""]
    $ eileenlist = [""eileen"", ""badge"", ""tucson""]

    n ""Monday, 8:25 AM. Year: 201X. Location: Persons Park"" (what_color=""#7FFFA9"")
    m2 ""(My name is Tuscon Rong. I'm a defense attorney and I'm in big trouble - my assistant has been arrested for murder!)""
    m2 ""(Thankfully, the agency has sent me a replacement. I won't let another assistant go to jail!)""
    m2 ""(Fourth time's the charm, right?)""
    show eileen happy
    e ""Good morning. My name's Eileen. I'll be helping you out today.""
    hide eileen 
    show tucson
    m ""Nice to meet you.""
    m ""...Wow, it's obvious our art assets weren't created by the same person.""
    hide tucson 
    m ""I think I'll stay off-screen. That gives a cool 'first person' type of feel, anyway.""
    m2 ""(That and I only have the one expression...)""
    show eileen concerned
    e ""If you say so...""
    show eileen happy
    e ""Anyway, let's try out the demo. If you need help, click the 'Assistant' button in the upper-right-hand corner.""
    hide eileen with fade

    # the items you start out with
    $ my_evidence = [e_badge]
    $ my_profiles = [p_tucson, p_eileen, p_dog, p_mr_sun]

    # your assistant (the ""assistant"" button goes to a label of the same name)
    $ assistant = ""eileen""



label park:
    scene lovely_background

    #the buttons in the upper-right-hand corner
    show screen evidence_menu

    #this tells the evidence screen where to go when it closes
    $ current_scene = ""park""

    # There's nobody to show evidence to on this screen
    $ npc = False

    call screen sun_n_friends


label sun:
    $ npc = currentChar(""sun"", sunlist)
    show sun
    menu:
        ""Sun"":
            m ""What's up, Sun?""
            s ""ME. HA HA HA""
        ""Ball"" if threw_ball == True:
            s ""THAT DOG LOVES BALLS.""
            m ""Too much! She won't drop it."" 
            s ""HERE'S ANOTHER ONE""
            $ my_evidence.append(e_ball)
            n ""A fresh new ball added to the Court Record""
        ""Never mind"":
            pass
    jump park


label dog:
    $ npc = currentChar(""dog"", doglist)
    m2 ""(The dog is barking... but thankfully, I can speak dog!)""
    show dog
    menu:
        ""BARK! WOOF, BARK! (What's wrong, girl?)"":    
            d ""BOOF! (BALL?)""
            m ""She seems to want something...""
        ""ARF ARF *PANT* (Who's a good girl?)"":
            d ""???""
            m2 ""(She doesn't know!? I'll have to show her some evidence!)""
    jump park

label ball:
    m ""This is a nice ball. I'll pick it up just in case it's important to my murder case.""
    n ""Ball added to Court Record.""
    $ picked_up_ball = True
    $ my_evidence.append(e_ball)    
    jump park

label ladder:
    $ seen_ladder = True
    m ""(I came to this park last night and surreptitiously placed this stepladder in order to fulfill my long-time dream: Having a ladder-vs-stepladder verbal debate with my assistant!)""
    m ""*ahem*""
    m ""Say, Eileen... what would you call this object here?""
    show eileen happy
    e ""You mean the stepladder?""
    m ""Aha! So you think it's a stepladder! But what if I said it's just a ladder?""
    e ""I would agree.""
    m ""BUT IF WE EXAMINE THE FUNCTION OF THE DEVICE- huh?""
    e ""A stepladder is a type of ladder. You could refer to it either way.""
    show eileen concerned
    e ""I am a bit curious as to why it's been set up here in the middle of this park, though.""
    hide eileen with fade
    m ""Never mind... *grumble, mumble*""
    m2 ""(I'll add it to the Court Record so I remember to come pick it up again later.)""
    $ my_evidence.append(e_ladder)
    n ""Stepladder added to Court Record""
    jump park

label seenladder:
    m ""Ladder. Stepladder. The eternal question.""
    show eileen concerned
    e ""...?""
    jump park


# The sun's reactions to evidence
label sun_ladder:
    show sun
    s ""EVEN WITH THAT LADDER, YOU CAN'T REACH ME.""
    m ""But I can dream, Mr. Sun. I can dream.""
    jump park

label sun_eileen:
    show sun
    s ""I SEE YOU HAVE A NEW ASSISTANT, TUCSON.""
    m ""This is Eileen. She's helping me get my previous assistant out of jail.""
    hide sun
    show eileen happy
    e ""Actually, I'm here to help demonstrate the court record.""
    m ""H-huh? You're really not going to help out in court?""
    e ""I can't make any promises. But if there's ever a version of this that includes a trial, I'd be happy to help.""
    jump park

label sun_ball:
    show sun
    m ""What do you think of this?""
    s ""I LIKE IT. IT REMINDS ME OF ME.""
    jump park

label sun_dog:
    show sun
    m ""Have you seen this dog before?""
    s ""IVE SEEN EVERYTHING UNDER THE ME. WHAT ABOUT THE DOG?""
    m ""Oh. Nothing, really. I just think she's a good dog.""
    s ""I AGREE.""
    jump park

label sun_badge:
    show sun
    s ""FLASHING YOUR BADGE AROUND AS USUAL, EH TUCSON?""
    m ""You know it!""
    jump park

label sun_default:
    show sun
    s ""I AM THE ALMIGTY SUN. BOW TO MY RESPLENDENCE.""
    m2 ""(It seems like he doesn't have anything to say about this.)""
    jump park

label sun_tucson:
    show sun
    s ""I REMEMBER WHEN YOU WERE JUST A BOY-""
    m ""Wow, look at the time! Talk to you later, Mr. Sun!""
    jump park 

# consult Eileen
label eileen:
    show eileen happy
    $ npc = currentChar(""eileen"", eileenlist)
    menu:
        ""How does this work?"":
            m ""Could you tell me more about this... 'court record' thing?""
            show eileen concerned
            e ""That question is a bit concerning from a lawyer...""
            show eileen happy
            e ""But I'm happy to explain. This is meant to replicate the feel of the Ace Attorney games.""
            e ""You collect evidence by clicking on it and interacting with the characters on the scene.""
            e ""When you speak to a character, a menu pops up with dialogue options. However, you can also choose to present them evidence by selecting that evidence in the Court Record and hitting the 'present' button.""
            show eileen vhappy
            e ""Why don't you try showing something to me?""            
        ""The murder case"" if dangans == False:
            $ dangans = True
            m ""Sssso, I have this murder case coming up...""
            show eileen concerned
            e ""...About that. It seems like the demo doesn't go that far...""
            m ""What!? So I'm not going to be able to defend my assistant in court?""            
            show eileen happy
            e ""That would seem to be the case, yes. I'm sorry. But I can show you something. Here.""
            $ my_profiles.append(mikan)
            $ my_profiles.append(gundam)
            $ my_profiles.append(kuzu)
            $ my_profiles.append(ibuki)
            $ my_profiles.append(sonia)
            $ my_profiles.append(teruteru)
            $ my_profiles.append(akane)
            n ""Eileen hands Tucson the files he forgot in the office.""
            e ""As you can see, if you have more than eight profiles, the court record will have more than one page.""
            pass
        ""Never mind"":
            jump park
    jump eileen

label eileen_default:
    show eileen happy
    e ""There are a number of inventory screens that can be used in Ren'py games, but this one's unique feature is the ability to present evidence to NPCs.""
    e ""If they don't have anything to say about the evidence, it'll go to a default response, like this one.""
    m2 ""(In other words... you don't have anything to say about it.)""
    jump park

label eileen_badge:
    m ""What do you think? It's my lawyer's badge.""
    show eileen concerned
    e ""Actually, I've been wondering... is that a real lawyer's badge?""
    m ""*gulp* Wh-what do you mean?""
    e ""I feel like Ive seen that design somewhere else...""
    m ""*double gulp* You've probably just seen a lot of defense attorneys.""
    e ""And doesn't the lettering seem a bit shaky? It looks like it was written in marker.""
    m ""That's a common misunderstanding. Here, I'll amend the Court Record to prove it.""
    $ e_badge.change([""This is my completely authentic lawyer's badge."", ""It's definitely a real badge and not a toy from a vending machine that I wrote on with a Sharpie.""])    
    jump park

label eileen_tucson:
    m ""So I have this photo...""
    show eileen vhappy
    e ""You're getting the hang of presenting evidence. Good job, Tucson!""
    m2 ""(She seems proud of me. Now I'm too self-conscious to ask if she thinks this is a good photo...)""
    jump park

label eileen_eileen:
    m ""Tell me about yourself. If we're going to work together, I want to be friends.""
    show eileen happy
    e ""Well, I-""
    m ""Like what's your favorite Saturday morning children's show?""
    m ""Do you prefer burgers or ramen?""
    m ""Do you believe in justice, evidence, the truth, or your clients? How about ghosts?"" 
    m ""How about your tragic backstory? Were your parents neglectful, murderers, or both?""
    show eileen concerned
    e ""...""
    show eileen happy
    ""Let's keep a professional relationship.""
    hide eileen with fade
    m2 ""(Was it something I said?)""
    jump park

# The dog's reactions to evidence

label dog_ball:
    show dog
    d ""BALL!! THROW THE BALL!!""
    m ""D'aww, I can't say no to that face. Do you want to throw the ball, Eileen?""
    hide dog
    show eileen vhappy
    e ""Sure!""
    n ""Eileen throws the ball and the dog runs to fetch it. She returns with the ball in her mouth, tail wagging.""
    $ my_evidence.remove(e_ball)
    hide eileen
    show dog
    d ""THROW BALL!!""
    hide dog
    show eileen concerned
    e ""Drop it.""
    hide eileen
    show dog
    d ""NO DROP... ONLY THROW!!""
    hide dog
    m2 ""(I don't think we're getting that back...)""
    $ threw_ball = True
    jump park

label dog_dog:
    show dog
    m ""Who's a good girl?""
    d ""Rrr? (Who among us is truly good?)""
    m ""Take a look at this evidence.""
    d ""!""
    m ""That's right! It's youuuu!""
    d ""*aggressive tail wagging* (OH MY GOD)""
    jump park

label dog_badge:
    show dog
    d ""Shiny!""
    m ""Thanks!!""

    jump park

label dog_default:
    show dog
    d ""*sniff, sniff*""
    m ""Hmm, she doesn't seem interested in this.""
    hide dog
    show eileen vhappy
    e ""She's still a good girl, though.""
    n ""We spend some time petting the dog.""
    jump park


"
e9Zb7hda,court record-code,Sterkiherz,Python,Saturday 10th of February 2024 09:19:32 AM CDT,"#court record code:
#------------------------------------------
init python:

    class profile:
        """""" basically, whatever fields you want for your profiles will go here
        base: all files/references to this character have this name""""""
        def __init__(self, name, fullname, occupation, info, base):
            self.name = name 
            self.fullname = fullname
            self.occupation = occupation
            self.info = info 
            self.base = base
        def change(self, info): 
            # this allows you to change the ""info"" field. 
            if info:
                self.info = info

    class evidence:
        #this follows exactly the same format as profiles
        def __init__(self, name, info, base):
            self.name = name 
            self.info = info 
            self.base = base
        def change(self, info): 
            if info:
                self.info = info


    class currentChar:
        #  the character you are presenting evidence to
        def __init__(self, name, evidenceList):
            self.name = name
            self.evidenceList = evidenceList
        def checkEvidence(self, currentEvidence):
            if str(currentEvidence) in self.evidenceList:
                return currentEvidence
            else:
                return ""default""

    class courtRec:
        i = 0
        def __init__(self, evidence):
            self.evidence = evidence
            self.evidenceDict = {}
            if evidence_type == ""profiles"":
                for e in evidence:
                    self.evidenceDict[e.base] = [e.fullname, e.occupation, e.info]
            else:
                for e in evidence:
                    self.evidenceDict[e.base] = [e.name, e.info]
                
        def currentPic(self):
            for e in self.evidence:
                self.i += 1
                if self.i <= (ev_page + 1) * ev_icons and self.i > ev_page * ev_icons:
                    current_pic = ""images/"" + e.base + ""_0.png""
                    renpy.ui.imagebutton(idle=str(current_pic), hover=str(current_pic), action=[SetVariable(""current"", e.base), ShowMenu(""cr_detail"")])                    
        def getPage(self):
            next_ev_page = ev_page + 1
            if next_ev_page > int(len(self.evidence)/ev_icons):
                next_ev_page = 0
            prev_ev_page = ev_page - 1
            if prev_ev_page < 0:
                prev_ev_page = 0
            return [prev_ev_page, next_ev_page]
        def baseList(self):
            baselist = []
            for e in self.evidence:
                baselist.append(e.base)
            return baselist
        def entryNumbers(self, currentEntry):
            self.currentEntry = currentEntry
            baselist = self.baseList()
            numdic = {k: v for v, k in enumerate(baselist)}
            currentEntryIndex = numdic[self.currentEntry]
            prevEntryIndex = currentEntryIndex - 1
            nextEntryIndex = currentEntryIndex + 1               
            if prevEntryIndex < 0:
                prevEntryIndex = len(self.evidence) -1
            nextEntryIndex = currentEntryIndex + 1
            if nextEntryIndex > len(self.evidence) - 1:
                nextEntryIndex = 0
            return [prevEntryIndex, nextEntryIndex]
        def getDetails(self):
            return self.evidenceDict[current]


##### COURT RECORD SCREEN

init -2:
    $ ev_xpos = 0
    $ ev_ypos = 120
    $ ev_icon_size = 270
    $ ev_row1 = 120
    $ ev_row2 = 520
    $ ev_row3 = 120

    #Icon grid 
    $ ev_icon_column = 4
    $ ev_icon_row = 2
    $ ev_icons = ev_icon_column * ev_icon_row
    $ ev_page = 0
    $ next_ev_page = 0
    $ prev_ev_page = 0

    $ info = """"
    $ current = """" 
    $ evidence_type = ""profiles"" 

screen court_record:
    tag menu
    modal True

    if evidence_type == ""evidence"":
        $ records = courtRec(my_evidence)
    elif evidence_type == ""profiles"":
        $ records = courtRec(my_profiles)

    frame:
        $ pages = records.getPage()
        xsize 1280
        ysize 720
        background Frame(""evidence_window.png"") 
        if ev_page > 0:
            imagebutton:
                idle ""0_left_button.png""
                hover ""1_left_button.png""
                action [SetVariable('ev_page', pages[0])]

        hbox:
            xpos 105
            xsize 1080

            vpgrid: 
                cols ev_icon_column 
                rows ev_icon_row
                draggable False
                mousewheel False
                
                
                $ records.currentPic()

        hbox: 
            xpos 1180
            xsize 100
            if pages[1] > 0:
                imagebutton:
                    yalign 0.5
                    idle ""0_right_button.png""
                    hover ""1_right_button.png""
                    action [SetVariable('ev_page', pages[1])]

    vbox:
        ypos 500
        xpos 20
        xsize 880
        hbox:
            xpos 640
            xanchor 0.5
            if evidence_type == ""evidence"":
                imagebutton auto ""profile_button_%s.png"" action [SetVariable(""current"", """"), SetVariable(""ev_page"", 0), SetVariable(""evidence_type"", ""profiles"")] 

            elif evidence_type == ""profiles"":
                imagebutton auto ""evidence_button_%s.png"" action [SetVariable(""current"", """"), SetVariable(""ev_page"", 0), SetVariable(""next_ev_page"", 0), SetVariable(""evidence_type"", ""evidence"")] 
            imagebutton auto ""close_%s.png"" action [SetVariable(""ev_page"", 0), Hide('court_record'), Jump(current_scene)]

screen cr_detail:
    tag menu
    modal True

    if npc != False:
        $ ev_label = npc.name + ""_"" + npc.checkEvidence(str(current))

    if evidence_type == ""evidence"":
        $ records = courtRec(my_evidence)
        $ 
    elif evidence_type == ""profiles"":
        $ records = courtRec(my_profiles)
    $ entryNumbers = records.entryNumbers(current)
    $ baselist = records.baseList()
    $ prev_detail_page = entryNumbers[0]
    $ next_detail_page = entryNumbers[1]



    frame:
        xsize 1280
        ysize 720
        background Frame(""evidence_detail_window.png"") 



        imagebutton:
            idle ""0_left_button.png""
            hover ""1_left_button.png""
            action [SetVariable('current', baselist[prev_detail_page])]

        hbox:
            xpos 105
            xsize 400

            $ current_pic = ""/images/"" + current + ""_1.png""
            add current_pic
                
        hbox:
            xpos 680
            ypos 60
            vbox:
                ysize 200
                xsize 500
                if current == """":
                    text """"
                else:
                    $ details = records.getDetails()
                if evidence_type == ""profiles"":
                    text ""{size=+5}{b}Name:{/b} "" + details[0] + ""{/size}""
                if evidence_type == ""evidence"":
                    text details[0]

                vbox:
                    ysize 120
                if evidence_type == ""profiles"":
                    text ""{b}Occupation:{/b} "" + details[1]
                    $ evinfo = details[2]
                if evidence_type == ""evidence"":
                    $ evinfo = details[1]
                for e in evinfo:
                    text e

        hbox: 
            xpos 1180
            xsize 100
            imagebutton:
                yalign 0.5
                idle ""0_right_button.png""
                hover ""1_right_button.png""
                action [SetVariable('current', baselist[next_detail_page])]

        vbox:
            xpos 20
            ypos 500
            hbox:
                xpos 640
                xanchor 0.5
                imagebutton auto ""profile_button_%s.png"" action [Hide(""cr_detail""), SetVariable(""current"", """"), SetVariable(""ev_page"", 0), SetVariable(""evidence_type"", ""profiles""), Show(""court_record "")] 
                imagebutton auto ""evidence_button_%s.png"" action [Hide(""cr_detail""), SetVariable(""current"", """"), SetVariable(""ev_page"", 0), SetVariable(""next_ev_page"", 0), SetVariable(""evidence_type"", ""evidence""), Show(""court_record "")]                 
                if npc != False:
                    $ ev_label = npc.name + ""_"" + npc.checkEvidence(current)
                    imagebutton auto ""present_button_%s.png"" action [Hide(""cr_detail""), Jump(ev_label)]
                imagebutton auto ""close_%s.png"" action [Hide('cr_detail'), Jump(current_scene)]



############ Evidence Menu Buttons
#the menu for the corner of the screen
screen evidence_menu:
    imagebutton auto ""profile_button_sm_%s.png"" action [SetVariable(""current"", """"), SetVariable(""evidence_type"", ""profiles""), ShowMenu(""court_record"")]  xalign .90 yalign .02  focus_mask True
    imagebutton auto ""evidence_button_sm_%s.png"" action [SetVariable(""current"", """"), SetVariable(""evidence_type"", ""evidence""), ShowMenu(""court_record"")]  xalign .98 yalign .02 focus_mask True
    imagebutton auto ""assistant_%s.png"" action [Jump(assistant)] xalign .977 yalign .16  focus_mask True





"
XvsNFqQY,01. Sino The Walker,Spocoman,C++,Saturday 10th of February 2024 09:13:31 AM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <limits>

using namespace std;

int main() {
    string line;
    getline(cin, line);

    int hours = stoi(line.substr(0, line.find(':'))),
        minutes = stoi(line.substr(line.find(':') + 1, line.find_last_of(':'))),
        seconds = stoi(line.substr(line.find_last_of(':') + 1));

    long int steps, stepPerSeconds;
    cin >> steps >> stepPerSeconds;

    unsigned long int totalSeconds = hours * 3600 + minutes * 60 + seconds + steps * stepPerSeconds;

    printf(""Time Arrival: %0.2d:%0.2d:%0.2d"", totalSeconds / 3600 % 24, totalSeconds % 3600 / 60, totalSeconds % 60);

    return 0;
}"
7GWesLJU,Building,MladenKarachanov,Java,Saturday 10th of February 2024 08:49:32 AM CDT,"package nestedLoops;
 
import java.util.Scanner;
 
public class P06Building {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
 
        int floors = Integer.parseInt(scanner.nextLine());
        int rooms = Integer.parseInt(scanner.nextLine());
 
        for (int f = floors; f >= 1; f--) {
            for (int r = 0; r < rooms; r++) {
                String typeRoom = """";
                if (f == floors) {
                    typeRoom = ""L"";
                } else if (f % 2 != 0) {
                    typeRoom = ""A"";
                } else {
                    typeRoom = ""O"";
                }
 
                System.out.printf(""%s%d%d "",typeRoom, f, r);
            }
            System.out.println();
        }
    }
}"
KAffcF63,Nigerian scammers [10-2-1/2024],bombaires,AIMMS,Saturday 10th of February 2024 08:26:40 AM CDT,"<a href=""mailto:royalbankofcanada008@gmail.com"">royalbankofcanada008@gmail.com</a>
<a href=""mailto:royalb.an.kofcana.d.a.0.08@gmail.com"">royalb.an.kofcana.d.a.0.08@gmail.com</a>
<a href=""mailto:r.oyal.b.ankofcana.da.0.0.8@gmail.com"">r.oyal.b.ankofcana.da.0.0.8@gmail.com</a>
<a href=""mailto:r.oyalban.k.ofc.a.n.ada.00.8@gmail.com"">r.oyalban.k.ofc.a.n.ada.00.8@gmail.com</a>
<a href=""mailto:royalban.kof.c.a.na.da0.0.8@gmail.com"">royalban.kof.c.a.na.da0.0.8@gmail.com</a>
<a href=""mailto:r.oy.al.ba.n.k.ofcan.ad.a.00.8@gmail.com"">r.oy.al.ba.n.k.ofcan.ad.a.00.8@gmail.com</a>
<a href=""mailto:ro.yalb.a.nk.o.fcan.ad.a008@gmail.com"">ro.yalb.a.nk.o.fcan.ad.a008@gmail.com</a>
<a href=""mailto:roy.al.b.ank.ofca.na.da.008@gmail.com"">roy.al.b.ank.ofca.na.da.008@gmail.com</a>
<a href=""mailto:r.o.ya.lb.an.k.of.canad.a00.8@gmail.com"">r.o.ya.lb.an.k.of.canad.a00.8@gmail.com</a>
<a href=""mailto:roya.lbankofc.an.ada0.08@gmail.com"">roya.lbankofc.an.ada0.08@gmail.com</a>
<a href=""mailto:roy.a.l.b.a.nko.f.ca.na.da.00.8@gmail.com"">roy.a.l.b.a.nko.f.ca.na.da.00.8@gmail.com</a>
<a href=""mailto:r.oy.a.l.b.anko.fc.a.n.ada0.08@gmail.com"">r.oy.a.l.b.anko.fc.a.n.ada0.08@gmail.com</a>
<a href=""mailto:r.o.y.a.l.b.a.nk.ofc.ana.d.a.0.0.8@gmail.com"">r.o.y.a.l.b.a.nk.ofc.ana.d.a.0.0.8@gmail.com</a>
<a href=""mailto:r.o.yal.bankofcan.ad.a008@gmail.com"">r.o.yal.bankofcan.ad.a008@gmail.com</a>
<a href=""mailto:roy.alba.n.ko.f.c.a.nada.0.0.8@gmail.com"">roy.alba.n.ko.f.c.a.nada.0.0.8@gmail.com</a>
<a href=""mailto:roya.l.ba.nk.of.c.an.a.da008@gmail.com"">roya.l.ba.nk.of.c.an.a.da008@gmail.com</a>
<a href=""mailto:r.oyalba.n.kof.c.ana.da.0.08@gmail.com"">r.oyalba.n.kof.c.ana.da.0.08@gmail.com</a>
<a href=""mailto:r.oy.al.ba.n.k.of.c.ana.d.a.00.8@gmail.com"">r.oy.al.ba.n.k.of.c.ana.d.a.00.8@gmail.com</a>
<a href=""mailto:ro.y.a.l.ba.n.k.o.fcan.ada008@gmail.com"">ro.y.a.l.ba.n.k.o.fcan.ada008@gmail.com</a>
<a href=""mailto:ro.y.a.l.b.ank.of.c.a.nad.a.0.0.8@gmail.com"">ro.y.a.l.b.ank.of.c.a.nad.a.0.0.8@gmail.com</a>
<a href=""mailto:r.oy.a.l.bank.o.f.canada00.8@gmail.com"">r.oy.a.l.bank.o.f.canada00.8@gmail.com</a>
<a href=""mailto:ro.yal.ban.k.o.f.c.a.na.d.a.008@gmail.com"">ro.yal.ban.k.o.f.c.a.na.d.a.008@gmail.com</a>
<a href=""mailto:roya.l.ba.nk.o.f.cana.d.a0.0.8@gmail.com"">roya.l.ba.nk.o.f.cana.d.a0.0.8@gmail.com</a>
<a href=""mailto:ro.ya.l.b.a.nkofca.n.ada008@gmail.com"">ro.ya.l.b.a.nkofca.n.ada008@gmail.com</a>
<a href=""mailto:r.o.y.a.lba.nk.of.c.an.a.d.a0.0.8@gmail.com"">r.o.y.a.lba.nk.of.c.an.a.d.a0.0.8@gmail.com</a>
<a href=""mailto:roy.a.l.b.an.k.ofc.a.nada0.08@gmail.com"">roy.a.l.b.an.k.ofc.a.nada0.08@gmail.com</a>
<a href=""mailto:r.oyal.ba.nkof.c.a.n.a.d.a00.8@gmail.com"">r.oyal.ba.nkof.c.a.n.a.d.a00.8@gmail.com</a>
<a href=""mailto:r.oy.al.bankof.c.a.na.da00.8@gmail.com"">r.oy.al.bankof.c.a.na.da00.8@gmail.com</a>
<a href=""mailto:r.oy.a.lban.ko.fc.an.a.da0.0.8@gmail.com"">r.oy.a.lban.ko.fc.an.a.da0.0.8@gmail.com</a>
<a href=""mailto:roy.a.lb.anko.fca.nad.a.00.8@gmail.com"">roy.a.lb.anko.fca.nad.a.00.8@gmail.com</a>
<a href=""mailto:r.o.ya.lba.nko.fcan.ad.a008@gmail.com"">r.o.ya.lba.nko.fcan.ad.a008@gmail.com</a>
<a href=""mailto:ro.y.al.ban.k.o.f.cana.da.00.8@gmail.com"">ro.y.al.ban.k.o.f.cana.da.00.8@gmail.com</a>
<a href=""mailto:r.oy.a.l.ba.n.k.o.f.c.a.n.ada00.8@gmail.com"">r.oy.a.l.ba.n.k.o.f.c.a.n.ada00.8@gmail.com</a>
<a href=""mailto:r.oy.al.b.an.k.of.canad.a008@gmail.com"">r.oy.al.b.an.k.of.canad.a008@gmail.com</a>
<a href=""mailto:r.o.ya.l.b.anko.fca.n.ad.a.008@gmail.com"">r.o.ya.l.b.anko.fca.n.ad.a.008@gmail.com</a>
<a href=""mailto:roy.a.lba.n.ko.f.c.a.n.a.da.008@gmail.com"">roy.a.lba.n.ko.f.c.a.n.a.da.008@gmail.com</a>
<a href=""mailto:r.o.y.a.lb.an.k.o.f.c.ana.d.a.0.08@gmail.com"">r.o.y.a.lb.an.k.o.f.c.ana.d.a.0.08@gmail.com</a>
<a href=""mailto:r.o.ya.l.b.a.nk.o.f.c.an.ada00.8@gmail.com"">r.o.ya.l.b.a.nk.o.f.c.an.ada00.8@gmail.com</a>
<a href=""mailto:roy.albank.ofcanad.a.0.08@gmail.com"">roy.albank.ofcanad.a.0.08@gmail.com</a>
<a href=""mailto:r.o.ya.l.b.ank.ofc.an.a.da.008@gmail.com"">r.o.ya.l.b.ank.ofc.an.a.da.008@gmail.com</a>
<a href=""mailto:r.o.y.al.b.a.n.kofc.an.a.d.a0.08@gmail.com"">r.o.y.al.b.a.n.kofc.an.a.d.a0.08@gmail.com</a>
<a href=""mailto:r.o.ya.lb.an.kofc.a.n.a.da0.0.8@gmail.com"">r.o.ya.lb.an.kofc.a.n.a.da0.0.8@gmail.com</a>
<a href=""mailto:roy.a.l.b.a.nk.of.ca.nad.a.008@gmail.com"">roy.a.l.b.a.nk.of.ca.nad.a.008@gmail.com</a>
<a href=""mailto:r.o.ya.lb.a.nkof.can.ad.a.0.0.8@gmail.com"">r.o.ya.lb.a.nkof.can.ad.a.0.0.8@gmail.com</a>
<a href=""mailto:r.o.y.al.ban.ko.f.can.ad.a.008@gmail.com"">r.o.y.al.ban.ko.f.can.ad.a.008@gmail.com</a>
<a href=""mailto:ro.yalb.a.n.k.ofca.na.da.00.8@gmail.com"">ro.yalb.a.n.k.ofca.na.da.00.8@gmail.com</a>
<a href=""mailto:r.o.y.a.lba.nk.o.fca.n.ad.a0.08@gmail.com"">r.o.y.a.lba.nk.o.fca.n.ad.a0.08@gmail.com</a>
<a href=""mailto:ro.y.a.lba.nkofc.an.ad.a.0.08@gmail.com"">ro.y.a.lba.nkofc.an.ad.a.0.08@gmail.com</a>
<a href=""mailto:r.oy.a.lb.an.k.of.c.an.a.da.00.8@gmail.com"">r.oy.a.lb.an.k.of.c.an.a.da.00.8@gmail.com</a>
<a href=""mailto:royal.ba.n.k.o.fca.n.ada.008@gmail.com"">royal.ba.n.k.o.fca.n.ada.008@gmail.com</a>
<a href=""mailto:r.oyal.b.ank.o.f.c.a.n.ad.a.008@gmail.com"">r.oyal.b.ank.o.f.c.a.n.ad.a.008@gmail.com</a>
<a href=""mailto:r.oyal.b.ankofcanad.a.00.8@gmail.com"">r.oyal.b.ankofcanad.a.00.8@gmail.com</a>
<a href=""mailto:roy.a.l.b.a.nk.o.f.c.a.nad.a.0.08@gmail.com"">roy.a.l.b.a.nk.o.f.c.a.nad.a.0.08@gmail.com</a>
<a href=""mailto:ro.y.a.lban.kof.ca.n.ad.a008@gmail.com"">ro.y.a.lban.kof.ca.n.ad.a008@gmail.com</a>
<a href=""mailto:r.o.yalba.nkof.ca.n.a.da0.0.8@gmail.com"">r.o.yalba.nkof.ca.n.a.da0.0.8@gmail.com</a>
<a href=""mailto:r.o.y.al.b.a.n.k.ofc.an.ad.a00.8@gmail.com"">r.o.y.al.b.a.n.k.ofc.an.ad.a00.8@gmail.com</a>
<a href=""mailto:r.oy.alba.n.ko.f.c.an.a.da.008@gmail.com"">r.oy.alba.n.ko.f.c.an.a.da.008@gmail.com</a>
<a href=""mailto:roy.al.ba.n.kofca.n.a.d.a.00.8@gmail.com"">roy.al.ba.n.kofca.n.a.d.a.00.8@gmail.com</a>
<a href=""mailto:ro.yalb.a.n.k.ofc.anada008@gmail.com"">ro.yalb.a.n.k.ofc.anada008@gmail.com</a>
<a href=""mailto:roy.alba.n.kofc.ana.da008@gmail.com"">roy.alba.n.kofc.ana.da008@gmail.com</a>
<a href=""mailto:ro.y.a.l.b.a.nko.f.ca.nada.008@gmail.com"">ro.y.a.l.b.a.nko.f.ca.nada.008@gmail.com</a>
<a href=""mailto:roya.l.ba.n.k.of.c.a.n.ad.a0.0.8@gmail.com"">roya.l.ba.n.k.of.c.a.n.ad.a0.0.8@gmail.com</a>
<a href=""mailto:r.o.ya.l.ban.kofca.n.ada0.08@gmail.com"">r.o.ya.l.ban.kofca.n.ada0.08@gmail.com</a>
<a href=""mailto:r.o.y.alb.a.n.ko.fc.a.nada.0.08@gmail.com"">r.o.y.alb.a.n.ko.fc.a.nada.0.08@gmail.com</a>
<a href=""mailto:r.o.ya.lb.an.k.of.c.an.a.d.a.0.08@gmail.com"">r.o.ya.lb.an.k.of.c.an.a.d.a.0.08@gmail.com</a>
<a href=""mailto:r.o.y.a.lb.a.n.kof.can.a.d.a0.08@gmail.com"">r.o.y.a.lb.a.n.kof.can.a.d.a0.08@gmail.com</a>
<a href=""mailto:r.o.y.a.lb.a.nk.o.f.canada00.8@gmail.com"">r.o.y.a.lb.a.nk.o.f.canada00.8@gmail.com</a>
<a href=""mailto:r.o.ya.lb.anko.fcanad.a008@gmail.com"">r.o.ya.lb.anko.fcanad.a008@gmail.com</a>
<a href=""mailto:r.oya.l.ba.nkofcanada.00.8@gmail.com"">r.oya.l.ba.nkofcanada.00.8@gmail.com</a>
<a href=""mailto:r.oy.al.ba.n.ko.fcanada.00.8@gmail.com"">r.oy.al.ba.n.ko.fcanada.00.8@gmail.com</a>
<a href=""mailto:roya.l.ba.n.k.of.c.a.na.da0.0.8@gmail.com"">roya.l.ba.n.k.of.c.a.na.da0.0.8@gmail.com</a>
<a href=""mailto:r.o.y.a.l.b.ank.o.fcan.ada0.0.8@gmail.com"">r.o.y.a.l.b.ank.o.fcan.ada0.0.8@gmail.com</a>
<a href=""mailto:ro.y.alb.a.n.ko.fc.an.a.da0.08@gmail.com"">ro.y.alb.a.n.ko.fc.an.a.da0.08@gmail.com</a>
<a href=""mailto:r.o.y.alb.an.kof.c.a.nad.a0.08@gmail.com"">r.o.y.alb.an.kof.c.a.nad.a0.08@gmail.com</a>
<a href=""mailto:r.o.ya.lb.a.n.kofcana.da.00.8@gmail.com"">r.o.ya.lb.a.n.kofcana.da.00.8@gmail.com</a>
<a href=""mailto:r.o.y.a.lba.n.ko.f.c.an.a.da0.08@gmail.com"">r.o.y.a.lba.n.ko.f.c.an.a.da0.08@gmail.com</a>
<a href=""mailto:ro.y.al.ba.nkofcanada00.8@gmail.com"">ro.y.al.ba.nkofcanada00.8@gmail.com</a>
<a href=""mailto:r.oyal.b.ank.o.fc.a.n.ad.a00.8@gmail.com"">r.oyal.b.ank.o.fc.a.n.ad.a00.8@gmail.com</a>
<a href=""mailto:roy.a.lb.an.kof.can.a.da00.8@gmail.com"">roy.a.lb.an.kof.can.a.da00.8@gmail.com</a>
<a href=""mailto:r.o.yalb.a.n.kofc.anada.0.08@gmail.com"">r.o.yalb.a.n.kofc.anada.0.08@gmail.com</a>
<a href=""mailto:r.o.yal.banko.fca.nad.a00.8@gmail.com"">r.o.yal.banko.fca.nad.a00.8@gmail.com</a>
<a href=""mailto:r.oyalban.k.of.c.a.n.a.d.a.008@gmail.com"">r.oyalban.k.of.c.a.n.a.d.a.008@gmail.com</a>
<a href=""mailto:r.o.y.alb.an.k.o.f.ca.n.a.da00.8@gmail.com"">r.o.y.alb.an.k.o.f.ca.n.a.da00.8@gmail.com</a>
<a href=""mailto:ro.yalban.ko.fc.anad.a.0.0.8@gmail.com"">ro.yalban.ko.fc.anad.a.0.0.8@gmail.com</a>
<a href=""mailto:roy.alb.ank.of.canada008@gmail.com"">roy.alb.ank.of.canada008@gmail.com</a>
<a href=""mailto:r.o.y.alba.nkofca.na.d.a.0.08@gmail.com"">r.o.y.alba.nkofca.na.d.a.0.08@gmail.com</a>
<a href=""mailto:roy.a.l.ba.nko.f.c.an.a.d.a.0.08@gmail.com"">roy.a.l.ba.nko.f.c.an.a.d.a.0.08@gmail.com</a>
<a href=""mailto:royalb.a.n.k.of.cana.da00.8@gmail.com"">royalb.a.n.k.of.cana.da00.8@gmail.com</a>
<a href=""mailto:r.o.y.al.ba.n.k.o.f.ca.n.ada.008@gmail.com"">r.o.y.al.ba.n.k.o.f.ca.n.ada.008@gmail.com</a>
<a href=""mailto:ro.y.a.lb.a.n.kofc.a.nad.a.0.0.8@gmail.com"">ro.y.a.lb.a.n.kofc.a.nad.a.0.0.8@gmail.com</a>
<a href=""mailto:ro.y.a.lb.an.kof.ca.na.d.a0.0.8@gmail.com"">ro.y.a.lb.an.kof.ca.na.d.a0.0.8@gmail.com</a>
<a href=""mailto:r.o.y.a.lb.an.k.o.fca.n.a.d.a008@gmail.com"">r.o.y.a.lb.an.k.o.fca.n.a.d.a008@gmail.com</a>
<a href=""mailto:r.oyalban.ko.fc.ana.da00.8@gmail.com"">r.oyalban.ko.fc.ana.da00.8@gmail.com</a>
<a href=""mailto:r.oy.alb.a.nko.fca.n.ad.a0.0.8@gmail.com"">r.oy.alb.a.nko.fca.n.ad.a0.0.8@gmail.com</a>
<a href=""mailto:roya.l.bankofca.n.ada0.0.8@gmail.com"">roya.l.bankofca.n.ada0.0.8@gmail.com</a>
<a href=""mailto:r.o.ya.l.b.an.k.of.can.ada0.08@gmail.com"">r.o.ya.l.b.an.k.of.can.ada0.08@gmail.com</a>
<a href=""mailto:roya.lb.an.ko.f.c.a.nad.a0.0.8@gmail.com"">roya.lb.an.ko.f.c.a.nad.a0.0.8@gmail.com</a>
<a href=""mailto:r.oyal.b.anko.f.can.ada0.0.8@gmail.com"">r.oyal.b.anko.f.can.ada0.0.8@gmail.com</a>
<a href=""mailto:r.oy.al.b.an.kofca.nad.a.0.08@gmail.com"">r.oy.al.b.an.kofca.nad.a.0.08@gmail.com</a>
<a href=""mailto:roya.lb.a.n.k.ofcanad.a0.0.8@gmail.com"">roya.lb.a.n.k.ofcanad.a0.0.8@gmail.com</a>
<a href=""mailto:r.oy.alb.ank.of.c.a.n.ad.a008@gmail.com"">r.oy.alb.ank.of.c.a.n.ad.a008@gmail.com</a>
<a href=""mailto:r.oya.l.b.ankofcan.ada.0.0.8@gmail.com"">r.oya.l.b.ankofcan.ada.0.0.8@gmail.com</a>
<a href=""mailto:ro.yalb.a.nkof.c.an.a.d.a.00.8@gmail.com"">ro.yalb.a.nkof.c.an.a.d.a.00.8@gmail.com</a>
<a href=""mailto:r.oy.a.l.b.a.nko.f.c.a.n.a.da0.0.8@gmail.com"">r.oy.a.l.b.a.nko.f.c.a.n.a.da0.0.8@gmail.com</a>
<a href=""mailto:roy.al.ban.kof.ca.na.d.a00.8@gmail.com"">roy.al.ban.kof.ca.na.d.a00.8@gmail.com</a>
<a href=""mailto:r.oya.lb.a.nko.f.ca.na.d.a.0.08@gmail.com"">r.oya.lb.a.nko.f.ca.na.d.a.0.08@gmail.com</a>
<a href=""mailto:ro.yalb.a.nkof.ca.n.a.d.a.008@gmail.com"">ro.yalb.a.nkof.ca.n.a.d.a.008@gmail.com</a>
<a href=""mailto:roy.a.lban.k.o.fca.n.a.da.008@gmail.com"">roy.a.lban.k.o.fca.n.a.da.008@gmail.com</a>
<a href=""mailto:r.o.ya.l.ba.n.k.ofc.ana.da.00.8@gmail.com"">r.o.ya.l.ba.n.k.ofc.ana.da.00.8@gmail.com</a>
<a href=""mailto:roy.alb.a.n.kofcana.da.008@gmail.com"">roy.alb.a.n.kofcana.da.008@gmail.com</a>
<a href=""mailto:r.oy.alb.ank.o.fc.ana.da.008@gmail.com"">r.oy.alb.ank.o.fc.ana.da.008@gmail.com</a>
<a href=""mailto:ro.yal.bank.ofc.an.ada0.0.8@gmail.com"">ro.yal.bank.ofc.an.ada0.0.8@gmail.com</a>
<a href=""mailto:roya.l.b.a.nkofcan.a.da0.0.8@gmail.com"">roya.l.b.a.nkofcan.a.da0.0.8@gmail.com</a>
<a href=""mailto:r.o.yalb.a.nkofc.a.n.a.da.00.8@gmail.com"">r.o.yalb.a.nkofc.a.n.a.da.00.8@gmail.com</a>
<a href=""mailto:royal.ba.n.kofc.an.ada.0.0.8@gmail.com"">royal.ba.n.kofc.an.ada.0.0.8@gmail.com</a>
<a href=""mailto:ro.y.alba.n.k.of.ca.n.ada0.0.8@gmail.com"">ro.y.alba.n.k.of.ca.n.ada0.0.8@gmail.com</a>
<a href=""mailto:r.o.y.a.lban.k.of.c.an.a.d.a00.8@gmail.com"">r.o.y.a.lban.k.of.c.an.a.d.a00.8@gmail.com</a>
<a href=""mailto:r.oyal.b.a.nko.fc.a.nada.008@gmail.com"">r.oyal.b.a.nko.fc.a.nada.008@gmail.com</a>
<a href=""mailto:ro.ya.lb.a.nk.ofcan.ad.a008@gmail.com"">ro.ya.lb.a.nk.ofcan.ad.a008@gmail.com</a>
<a href=""mailto:r.oya.lbank.o.fca.n.ada.0.08@gmail.com"">r.oya.lbank.o.fca.n.ada.0.08@gmail.com</a>
<a href=""mailto:ro.y.al.b.a.n.ko.fc.anad.a.00.8@gmail.com"">ro.y.al.b.a.n.ko.fc.anad.a.00.8@gmail.com</a>
<a href=""mailto:r.o.y.a.l.b.a.nk.ofcan.a.d.a008@gmail.com"">r.o.y.a.l.b.a.nk.ofcan.a.d.a008@gmail.com</a>
<a href=""mailto:r.oy.al.b.a.n.k.of.cana.d.a0.08@gmail.com"">r.oy.al.b.a.n.k.of.cana.d.a0.08@gmail.com</a>
<a href=""mailto:r.o.y.alb.a.nk.o.fc.an.ada.00.8@gmail.com"">r.o.y.alb.a.nk.o.fc.an.ada.00.8@gmail.com</a>
<a href=""mailto:roya.l.ba.n.k.o.fca.n.ad.a008@gmail.com"">roya.l.ba.n.k.o.fca.n.ad.a008@gmail.com</a>
<a href=""mailto:r.oy.al.b.ank.of.c.a.na.da.008@gmail.com"">r.oy.al.b.ank.of.c.a.na.da.008@gmail.com</a>
<a href=""mailto:roya.lba.n.kofcan.ad.a0.08@gmail.com"">roya.lba.n.kofcan.ad.a0.08@gmail.com</a>
<a href=""mailto:r.o.ya.l.ba.n.k.ofc.a.na.da0.08@gmail.com"">r.o.ya.l.ba.n.k.ofc.a.na.da0.08@gmail.com</a>
<a href=""mailto:roy.a.lbank.of.ca.nada.00.8@gmail.com"">roy.a.lbank.of.ca.nada.00.8@gmail.com</a>
<a href=""mailto:r.o.ya.l.b.a.nko.fc.a.n.ad.a0.0.8@gmail.com"">r.o.ya.l.b.a.nko.fc.a.n.ad.a0.0.8@gmail.com</a>
<a href=""mailto:ro.yal.b.ank.ofc.a.na.da0.0.8@gmail.com"">ro.yal.b.ank.ofc.a.na.da0.0.8@gmail.com</a>
<a href=""mailto:r.oyalbank.of.ca.n.a.da0.0.8@gmail.com"">r.oyalbank.of.ca.n.a.da0.0.8@gmail.com</a>
<a href=""mailto:r.o.y.al.ba.nkof.c.an.a.d.a.0.0.8@gmail.com"">r.o.y.al.ba.nkof.c.an.a.d.a.0.0.8@gmail.com</a>
<a href=""mailto:ro.ya.lb.ankofc.a.na.da0.0.8@gmail.com"">ro.ya.lb.ankofc.a.na.da0.0.8@gmail.com</a>
<a href=""mailto:ro.y.al.b.a.nk.of.ca.na.da008@gmail.com"">ro.y.al.b.a.nk.of.ca.na.da008@gmail.com</a>
<a href=""mailto:roy.alb.a.nk.o.fca.nada0.0.8@gmail.com"">roy.alb.a.nk.o.fca.nada0.0.8@gmail.com</a>
<a href=""mailto:ro.y.al.b.ank.ofc.an.a.d.a0.0.8@gmail.com"">ro.y.al.b.ank.ofc.an.a.d.a0.0.8@gmail.com</a>
<a href=""mailto:royalbankofc.a.n.a.da.008@gmail.com"">royalbankofc.a.n.a.da.008@gmail.com</a>
<a href=""mailto:roya.l.ban.k.o.f.c.anada008@gmail.com"">roya.l.ban.k.o.f.c.anada008@gmail.com</a>
<a href=""mailto:ro.y.alb.a.n.k.o.fcana.da008@gmail.com"">ro.y.alb.a.n.k.o.fcana.da008@gmail.com</a>
<a href=""mailto:ro.yalb.a.nko.fc.an.ad.a.0.0.8@gmail.com"">ro.yalb.a.nko.fc.an.ad.a.0.0.8@gmail.com</a>
<a href=""mailto:ro.y.a.lb.ank.of.c.an.a.d.a008@gmail.com"">ro.y.a.lb.ank.of.c.an.a.d.a008@gmail.com</a>
<a href=""mailto:ro.y.a.l.b.a.nko.fc.a.n.ad.a.008@gmail.com"">ro.y.a.l.b.a.nko.fc.a.n.ad.a.008@gmail.com</a>
<a href=""mailto:r.oya.lba.n.kof.c.anad.a0.08@gmail.com"">r.oya.lba.n.kof.c.anad.a0.08@gmail.com</a>
<a href=""mailto:r.o.y.a.l.banko.f.can.ada.0.08@gmail.com"">r.o.y.a.l.banko.f.can.ada.0.08@gmail.com</a>
<a href=""mailto:roya.l.ba.n.kofca.n.a.d.a0.0.8@gmail.com"">roya.l.ba.n.kofca.n.a.d.a0.0.8@gmail.com</a>
<a href=""mailto:ro.y.alban.k.o.fca.nada.0.08@gmail.com"">ro.y.alban.k.o.fca.nada.0.08@gmail.com</a>
<a href=""mailto:r.oy.alba.n.kofc.a.n.ada008@gmail.com"">r.oy.alba.n.kofc.a.n.ada008@gmail.com</a>
<a href=""mailto:r.o.yal.ban.k.o.fcanad.a.0.0.8@gmail.com"">r.o.yal.ban.k.o.fcanad.a.0.0.8@gmail.com</a>
<a href=""mailto:r.oy.a.lban.k.o.fca.na.d.a008@gmail.com"">r.oy.a.lban.k.o.fca.na.d.a008@gmail.com</a>
<a href=""mailto:ro.ya.l.b.anko.f.canada0.08@gmail.com"">ro.ya.l.b.anko.f.canada0.08@gmail.com</a>
<a href=""mailto:royal.b.an.k.o.fca.n.ada.0.08@gmail.com"">royal.b.an.k.o.fca.n.ada.0.08@gmail.com</a>
<a href=""mailto:roy.alba.n.ko.fcan.ada0.08@gmail.com"">roy.alba.n.ko.fcan.ada0.08@gmail.com</a>
<a href=""mailto:r.oya.lbank.of.c.a.n.ad.a.00.8@gmail.com"">r.oya.lbank.of.c.a.n.ad.a.00.8@gmail.com</a>
<a href=""mailto:roya.lba.n.ko.f.c.an.ad.a0.0.8@gmail.com"">roya.lba.n.ko.f.c.an.ad.a0.0.8@gmail.com</a>
<a href=""mailto:r.o.yalb.an.kofcan.a.d.a0.08@gmail.com"">r.o.yalb.an.kofcan.a.d.a0.08@gmail.com</a>
<a href=""mailto:ro.y.al.bank.o.f.c.anada.0.0.8@gmail.com"">ro.y.al.bank.o.f.c.anada.0.0.8@gmail.com</a>
<a href=""mailto:r.o.ya.l.ban.k.o.f.ca.nad.a.008@gmail.com"">r.o.ya.l.ban.k.o.f.ca.nad.a.008@gmail.com</a>
<a href=""mailto:r.oya.l.b.a.n.kofca.n.a.da.0.0.8@gmail.com"">r.oya.l.b.a.n.kofca.n.a.da.0.0.8@gmail.com</a>
<a href=""mailto:ro.ya.l.b.an.k.o.f.c.a.nada.0.0.8@gmail.com"">ro.ya.l.b.an.k.o.f.c.a.nada.0.0.8@gmail.com</a>
<a href=""mailto:roya.lb.a.n.kof.can.ada.0.0.8@gmail.com"">roya.lb.a.n.kof.can.ada.0.0.8@gmail.com</a>
<a href=""mailto:r.oy.alb.a.n.kof.c.an.a.da.008@gmail.com"">r.oy.alb.a.n.kof.c.an.a.da.008@gmail.com</a>
<a href=""mailto:r.oya.l.ban.k.of.c.a.n.ada.008@gmail.com"">r.oya.l.ban.k.of.c.a.n.ada.008@gmail.com</a>
<a href=""mailto:r.o.ya.lbanko.fc.anad.a.008@gmail.com"">r.o.ya.lbanko.fc.anad.a.008@gmail.com</a>
<a href=""mailto:ro.yal.b.a.nk.o.fc.a.n.a.d.a0.0.8@gmail.com"">ro.yal.b.a.nk.o.fc.a.n.a.d.a0.0.8@gmail.com</a>
<a href=""mailto:royal.b.a.n.k.o.f.can.a.da.00.8@gmail.com"">royal.b.a.n.k.o.f.can.a.da.00.8@gmail.com</a>
<a href=""mailto:roya.l.b.a.nko.f.c.anada.00.8@gmail.com"">roya.l.b.a.nko.f.c.anada.00.8@gmail.com</a>
<a href=""mailto:r.oya.lba.n.kof.ca.n.a.da0.08@gmail.com"">r.oya.lba.n.kof.ca.n.a.da0.08@gmail.com</a>
<a href=""mailto:ro.y.a.lb.ankofcan.ada00.8@gmail.com"">ro.y.a.lb.ankofcan.ada00.8@gmail.com</a>
<a href=""mailto:roya.lba.n.k.ofca.n.a.da00.8@gmail.com"">roya.lba.n.k.ofca.n.a.da00.8@gmail.com</a>
<a href=""mailto:r.oy.a.l.ba.n.k.o.f.c.a.n.a.da00.8@gmail.com"">r.oy.a.l.ba.n.k.o.f.c.a.n.a.da00.8@gmail.com</a>
<a href=""mailto:r.oya.lb.an.ko.f.can.ad.a.0.0.8@gmail.com"">r.oya.lb.an.ko.f.can.ad.a.0.0.8@gmail.com</a>
<a href=""mailto:roy.alba.nkof.can.ad.a.0.0.8@gmail.com"">roy.alba.nkof.can.ad.a.0.0.8@gmail.com</a>
<a href=""mailto:roy.al.ba.n.ko.f.ca.n.a.da.0.08@gmail.com"">roy.al.ba.n.ko.f.ca.n.a.da.0.08@gmail.com</a>
<a href=""mailto:ro.yalb.a.n.k.ofc.an.a.da.00.8@gmail.com"">ro.yalb.a.n.k.ofc.an.a.da.00.8@gmail.com</a>
<a href=""mailto:ro.yal.ba.nk.o.fca.na.d.a.008@gmail.com"">ro.yal.ba.nk.o.fca.na.d.a.008@gmail.com</a>
<a href=""mailto:r.oy.al.ban.k.of.canada00.8@gmail.com"">r.oy.al.ban.k.of.canada00.8@gmail.com</a>
<a href=""mailto:roy.a.l.b.ank.o.f.c.a.nada0.0.8@gmail.com"">roy.a.l.b.ank.o.f.c.a.nada0.0.8@gmail.com</a>
<a href=""mailto:roy.a.lban.k.ofcana.da008@gmail.com"">roy.a.lban.k.ofcana.da008@gmail.com</a>
<a href=""mailto:roya.l.b.an.ko.f.canada00.8@gmail.com"">roya.l.b.an.ko.f.canada00.8@gmail.com</a>
<a href=""mailto:ro.y.a.lb.a.n.k.of.ca.n.a.d.a008@gmail.com"">ro.y.a.lb.a.n.k.of.ca.n.a.d.a008@gmail.com</a>
<a href=""mailto:r.o.y.al.b.ank.ofc.a.n.ad.a00.8@gmail.com"">r.o.y.al.b.ank.ofc.a.n.ad.a00.8@gmail.com</a>
<a href=""mailto:r.oyal.b.a.n.ko.fc.a.nada00.8@gmail.com"">r.oyal.b.a.n.ko.fc.a.nada00.8@gmail.com</a>
<a href=""mailto:roy.a.l.b.a.n.k.ofc.ana.da.0.0.8@gmail.com"">roy.a.l.b.a.n.k.ofc.ana.da.0.0.8@gmail.com</a>
<a href=""mailto:r.o.y.alb.a.n.kof.c.a.n.ad.a.00.8@gmail.com"">r.o.y.alb.a.n.kof.c.a.n.ad.a.00.8@gmail.com</a>
<a href=""mailto:ro.ya.l.b.a.n.kof.cana.da.00.8@gmail.com"">ro.ya.l.b.a.n.kof.cana.da.00.8@gmail.com</a>
<a href=""mailto:r.oya.lb.a.n.k.o.fc.a.nad.a.0.08@gmail.com"">r.oya.lb.a.n.k.o.fc.a.nad.a.0.08@gmail.com</a>
<a href=""mailto:r.oy.a.lban.kofc.an.a.da.00.8@gmail.com"">r.oy.a.lban.kofc.an.a.da.00.8@gmail.com</a>
<a href=""mailto:r.oy.a.l.b.ank.o.f.canad.a0.0.8@gmail.com"">r.oy.a.l.b.ank.o.f.canad.a0.0.8@gmail.com</a>
<a href=""mailto:r.o.y.alb.ank.of.c.a.na.d.a.0.0.8@gmail.com"">r.o.y.alb.ank.of.c.a.na.d.a.0.0.8@gmail.com</a>
<a href=""mailto:r.oy.a.lbank.o.f.canad.a00.8@gmail.com"">r.oy.a.lbank.o.f.canad.a00.8@gmail.com</a>
<a href=""mailto:royalb.a.nko.fc.a.n.a.d.a.0.08@gmail.com"">royalb.a.nko.fc.a.n.a.d.a.0.08@gmail.com</a>
<a href=""mailto:r.o.yalbanko.fc.anada.008@gmail.com"">r.o.yalbanko.fc.anada.008@gmail.com</a>
<a href=""mailto:roy.al.b.an.kofc.ana.d.a0.0.8@gmail.com"">roy.al.b.an.kofc.ana.d.a0.0.8@gmail.com</a>
<a href=""mailto:ro.yalb.anko.f.c.an.a.da.00.8@gmail.com"">ro.yalb.anko.f.c.an.a.da.00.8@gmail.com</a>
<a href=""mailto:r.o.y.alban.ko.fcan.a.d.a.008@gmail.com"">r.o.y.alban.ko.fcan.a.d.a.008@gmail.com</a>
<a href=""mailto:ro.ya.lban.k.ofc.ana.d.a008@gmail.com"">ro.ya.lban.k.ofc.ana.d.a008@gmail.com</a>
<a href=""mailto:ro.ya.lba.nko.fcan.a.da00.8@gmail.com"">ro.ya.lba.nko.fcan.a.da00.8@gmail.com</a>
<a href=""mailto:r.oy.al.b.an.ko.f.c.an.a.da0.08@gmail.com"">r.oy.al.b.an.ko.f.c.an.a.da0.08@gmail.com</a>
<a href=""mailto:ro.yal.b.an.ko.fca.n.ada.0.0.8@gmail.com"">ro.yal.b.an.ko.fca.n.ada.0.0.8@gmail.com</a>
<a href=""mailto:ro.yalb.a.n.k.of.ca.n.a.d.a0.08@gmail.com"">ro.yalb.a.n.k.of.ca.n.a.d.a0.08@gmail.com</a>
<a href=""mailto:bernnadlauwers@gmail.com"">bernnadlauwers@gmail.com</a>
<a href=""mailto:b.e.rnn.ad.l.a.u.w.er.s@gmail.com"">b.e.rnn.ad.l.a.u.w.er.s@gmail.com</a>
<a href=""mailto:be.r.n.n.a.dl.a.u.we.r.s@gmail.com"">be.r.n.n.a.dl.a.u.we.r.s@gmail.com</a>
<a href=""mailto:ber.nnadl.auwers@gmail.com"">ber.nnadl.auwers@gmail.com</a>
<a href=""mailto:b.er.n.n.ad.la.u.wers@gmail.com"">b.er.n.n.ad.la.u.wers@gmail.com</a>
<a href=""mailto:be.r.n.nadl.au.w.e.r.s@gmail.com"">be.r.n.nadl.au.w.e.r.s@gmail.com</a>
<a href=""mailto:b.e.rnn.a.dl.auwe.rs@gmail.com"">b.e.rnn.a.dl.auwe.rs@gmail.com</a>
<a href=""mailto:be.rn.n.a.d.la.uwers@gmail.com"">be.rn.n.a.d.la.uwers@gmail.com</a>
<a href=""mailto:b.e.r.nn.a.d.la.u.w.ers@gmail.com"">b.e.r.nn.a.d.la.u.w.ers@gmail.com</a>
<a href=""mailto:b.er.nna.d.lau.wer.s@gmail.com"">b.er.nna.d.lau.wer.s@gmail.com</a>
<a href=""mailto:bern.na.dlau.we.r.s@gmail.com"">bern.na.dlau.we.r.s@gmail.com</a>
<a href=""mailto:b.e.rn.n.ad.lauwe.rs@gmail.com"">b.e.rn.n.ad.lauwe.rs@gmail.com</a>
<a href=""mailto:ber.nnadla.uwe.rs@gmail.com"">ber.nnadla.uwe.rs@gmail.com</a>
<a href=""mailto:b.e.rn.nadla.u.wers@gmail.com"">b.e.rn.nadla.u.wers@gmail.com</a>
<a href=""mailto:be.r.nn.a.dla.u.we.rs@gmail.com"">be.r.nn.a.dla.u.we.rs@gmail.com</a>
<a href=""mailto:bernnad.l.au.w.e.rs@gmail.com"">bernnad.l.au.w.e.rs@gmail.com</a>
<a href=""mailto:bern.nadla.uwers@gmail.com"">bern.nadla.uwers@gmail.com</a>
<a href=""mailto:be.r.nna.dla.u.w.er.s@gmail.com"">be.r.nna.dla.u.w.er.s@gmail.com</a>
<a href=""mailto:be.rnna.d.la.u.wer.s@gmail.com"">be.rnna.d.la.u.wer.s@gmail.com</a>
<a href=""mailto:b.e.r.nn.adla.uwe.r.s@gmail.com"">b.e.r.nn.adla.uwe.r.s@gmail.com</a>
<a href=""mailto:bern.nadl.auwers@gmail.com"">bern.nadl.auwers@gmail.com</a>
<a href=""mailto:bern.n.adla.uwe.rs@gmail.com"">bern.n.adla.uwe.rs@gmail.com</a>
<a href=""mailto:b.ernna.d.l.a.u.w.e.rs@gmail.com"">b.ernna.d.l.a.u.w.e.rs@gmail.com</a>
<a href=""mailto:b.ern.n.adla.u.w.e.rs@gmail.com"">b.ern.n.adla.u.w.e.rs@gmail.com</a>
<a href=""mailto:be.rnna.dl.au.wer.s@gmail.com"">be.rnna.dl.au.wer.s@gmail.com</a>
<a href=""mailto:ber.nn.a.d.lauw.e.r.s@gmail.com"">ber.nn.a.d.lauw.e.r.s@gmail.com</a>
<a href=""mailto:b.ernnadlauwe.r.s@gmail.com"">b.ernnadlauwe.r.s@gmail.com</a>
<a href=""mailto:bernna.dl.a.u.w.e.r.s@gmail.com"">bernna.dl.a.u.w.e.r.s@gmail.com</a>
<a href=""mailto:b.ernna.dla.u.w.e.rs@gmail.com"">b.ernna.dla.u.w.e.rs@gmail.com</a>
<a href=""mailto:b.er.nn.ad.l.a.u.w.er.s@gmail.com"">b.er.nn.ad.l.a.u.w.er.s@gmail.com</a>
<a href=""mailto:ber.nna.d.l.auwers@gmail.com"">ber.nna.d.l.auwers@gmail.com</a>
<a href=""mailto:be.r.n.n.a.dla.u.we.r.s@gmail.com"">be.r.n.n.a.dla.u.we.r.s@gmail.com</a>
<a href=""mailto:ber.nn.a.d.lauwers@gmail.com"">ber.nn.a.d.lauwers@gmail.com</a>
<a href=""mailto:b.e.r.nnad.lauwe.rs@gmail.com"">b.e.r.nnad.lauwe.rs@gmail.com</a>
<a href=""mailto:b.e.r.n.nad.l.a.u.w.e.r.s@gmail.com"">b.e.r.n.nad.l.a.u.w.e.r.s@gmail.com</a>
<a href=""mailto:be.rnnad.l.a.uw.e.r.s@gmail.com"">be.rnnad.l.a.uw.e.r.s@gmail.com</a>
<a href=""mailto:be.r.n.n.ad.lauwe.rs@gmail.com"">be.r.n.n.ad.lauwe.rs@gmail.com</a>
<a href=""mailto:b.e.r.n.n.ad.lau.wers@gmail.com"">b.e.r.n.n.ad.lau.wers@gmail.com</a>
<a href=""mailto:b.ernna.d.la.u.w.e.rs@gmail.com"">b.ernna.d.la.u.w.e.rs@gmail.com</a>
<a href=""mailto:bern.n.a.d.la.u.w.er.s@gmail.com"">bern.n.a.d.la.u.w.er.s@gmail.com</a>
<a href=""mailto:b.er.nn.adlauwe.r.s@gmail.com"">b.er.nn.adlauwe.r.s@gmail.com</a>
<a href=""mailto:b.er.nna.dl.auw.e.r.s@gmail.com"">b.er.nna.dl.auw.e.r.s@gmail.com</a>
<a href=""mailto:be.r.n.nad.l.a.u.w.er.s@gmail.com"">be.r.n.nad.l.a.u.w.er.s@gmail.com</a>
<a href=""mailto:be.rn.n.a.dl.au.wers@gmail.com"">be.rn.n.a.dl.au.wers@gmail.com</a>
<a href=""mailto:b.e.r.n.n.a.d.la.u.w.ers@gmail.com"">b.e.r.n.n.a.d.la.u.w.ers@gmail.com</a>
<a href=""mailto:ber.n.n.adl.au.w.e.r.s@gmail.com"">ber.n.n.adl.au.w.e.r.s@gmail.com</a>
<a href=""mailto:b.e.r.n.na.d.lau.wer.s@gmail.com"">b.e.r.n.na.d.lau.wer.s@gmail.com</a>
<a href=""mailto:b.e.r.nn.a.d.l.auwer.s@gmail.com"">b.e.r.nn.a.d.l.auwer.s@gmail.com</a>
<a href=""mailto:b.e.rnn.adl.au.wer.s@gmail.com"">b.e.rnn.adl.au.wer.s@gmail.com</a>
<a href=""mailto:ber.nna.dlau.wers@gmail.com"">ber.nna.dlau.wers@gmail.com</a>
<a href=""mailto:b.ernna.dlauw.ers@gmail.com"">b.ernna.dlauw.ers@gmail.com</a>
<a href=""mailto:b.e.r.n.n.a.d.l.a.u.w.e.rs@gmail.com"">b.e.r.n.n.a.d.l.a.u.w.e.rs@gmail.com</a>
<a href=""mailto:b.ern.n.ad.lau.w.er.s@gmail.com"">b.ern.n.ad.lau.w.er.s@gmail.com</a>
<a href=""mailto:bern.n.adla.uw.er.s@gmail.com"">bern.n.adla.uw.er.s@gmail.com</a>
<a href=""mailto:bernn.a.dlau.wer.s@gmail.com"">bernn.a.dlau.wer.s@gmail.com</a>
<a href=""mailto:b.ern.n.a.d.l.auwer.s@gmail.com"">b.ern.n.a.d.l.auwer.s@gmail.com</a>
<a href=""mailto:ber.n.n.a.dl.auw.er.s@gmail.com"">ber.n.n.a.dl.auw.er.s@gmail.com</a>
<a href=""mailto:b.er.n.n.a.d.la.u.w.e.rs@gmail.com"">b.er.n.n.a.d.la.u.w.e.rs@gmail.com</a>
<a href=""mailto:be.r.n.nad.l.a.uwe.rs@gmail.com"">be.r.n.nad.l.a.uwe.rs@gmail.com</a>
<a href=""mailto:b.ernnadla.uw.er.s@gmail.com"">b.ernnadla.uw.er.s@gmail.com</a>
<a href=""mailto:ber.n.nadla.u.we.rs@gmail.com"">ber.n.nadla.u.we.rs@gmail.com</a>
<a href=""mailto:ber.nn.a.dl.a.u.wer.s@gmail.com"">ber.nn.a.dl.a.u.wer.s@gmail.com</a>
<a href=""mailto:be.r.n.nad.l.auwe.rs@gmail.com"">be.r.n.nad.l.auwe.rs@gmail.com</a>
<a href=""mailto:b.er.n.n.a.dla.uwer.s@gmail.com"">b.er.n.n.a.dla.uwer.s@gmail.com</a>
<a href=""mailto:b.e.rnnadla.uwe.rs@gmail.com"">b.e.rnnadla.uwe.rs@gmail.com</a>
<a href=""mailto:ber.nna.d.la.uwe.rs@gmail.com"">ber.nna.d.la.uwe.rs@gmail.com</a>
<a href=""mailto:be.rn.n.a.d.lauw.e.rs@gmail.com"">be.rn.n.a.d.lauw.e.rs@gmail.com</a>
<a href=""mailto:b.er.nn.adlau.we.rs@gmail.com"">b.er.nn.adlau.we.rs@gmail.com</a>
<a href=""mailto:bernn.a.dl.a.uw.ers@gmail.com"">bernn.a.dl.a.uw.ers@gmail.com</a>
<a href=""mailto:ber.nn.a.dlauwers@gmail.com"">ber.nn.a.dlauwers@gmail.com</a>
<a href=""mailto:b.er.n.n.adl.a.uwer.s@gmail.com"">b.er.n.n.adl.a.uwer.s@gmail.com</a>
<a href=""mailto:b.e.r.n.nad.la.u.w.e.r.s@gmail.com"">b.e.r.n.nad.la.u.w.e.r.s@gmail.com</a>
<a href=""mailto:b.er.nn.ad.lauwers@gmail.com"">b.er.nn.ad.lauwers@gmail.com</a>
<a href=""mailto:be.rnnadl.au.we.r.s@gmail.com"">be.rnnadl.au.we.r.s@gmail.com</a>
<a href=""mailto:ber.n.n.ad.l.au.w.er.s@gmail.com"">ber.n.n.ad.l.au.w.er.s@gmail.com</a>
<a href=""mailto:ber.nn.ad.lauwer.s@gmail.com"">ber.nn.ad.lauwer.s@gmail.com</a>
<a href=""mailto:b.e.r.nn.a.dla.uw.e.rs@gmail.com"">b.e.r.nn.a.dla.uw.e.rs@gmail.com</a>
<a href=""mailto:be.rn.na.d.la.uwe.r.s@gmail.com"">be.rn.na.d.la.uwe.r.s@gmail.com</a>
<a href=""mailto:be.r.nna.d.lau.wers@gmail.com"">be.r.nna.d.lau.wers@gmail.com</a>
<a href=""mailto:bern.n.ad.l.a.uw.e.rs@gmail.com"">bern.n.ad.l.a.uw.e.rs@gmail.com</a>
<a href=""mailto:b.e.r.n.nad.l.a.uw.e.rs@gmail.com"">b.e.r.n.nad.l.a.uw.e.rs@gmail.com</a>
<a href=""mailto:b.e.rnnad.l.a.u.w.e.r.s@gmail.com"">b.e.rnnad.l.a.u.w.e.r.s@gmail.com</a>
<a href=""mailto:ber.n.n.a.d.l.a.u.wer.s@gmail.com"">ber.n.n.a.d.l.a.u.wer.s@gmail.com</a>
<a href=""mailto:b.er.nn.ad.la.u.w.er.s@gmail.com"">b.er.nn.ad.la.u.w.er.s@gmail.com</a>
<a href=""mailto:b.er.nnad.l.au.w.ers@gmail.com"">b.er.nnad.l.au.w.ers@gmail.com</a>
<a href=""mailto:b.e.rnnad.l.a.uw.er.s@gmail.com"">b.e.rnnad.l.a.uw.er.s@gmail.com</a>
<a href=""mailto:b.ernna.d.lauwers@gmail.com"">b.ernna.d.lauwers@gmail.com</a>
<a href=""mailto:b.er.n.n.a.dl.a.u.w.e.rs@gmail.com"">b.er.n.n.a.dl.a.u.w.e.rs@gmail.com</a>
<a href=""mailto:be.r.n.na.d.lau.we.rs@gmail.com"">be.r.n.na.d.lau.we.rs@gmail.com</a>
<a href=""mailto:ber.n.n.a.d.lauw.er.s@gmail.com"">ber.n.n.a.d.lauw.er.s@gmail.com</a>
<a href=""mailto:b.ernn.a.d.lau.w.e.r.s@gmail.com"">b.ernn.a.d.lau.w.e.r.s@gmail.com</a>
<a href=""mailto:b.er.nnadl.a.u.we.r.s@gmail.com"">b.er.nnadl.a.u.we.r.s@gmail.com</a>
<a href=""mailto:b.e.r.nn.ad.lau.w.er.s@gmail.com"">b.e.r.nn.ad.lau.w.er.s@gmail.com</a>
<a href=""mailto:be.r.n.n.ad.l.a.u.wer.s@gmail.com"">be.r.n.n.ad.l.a.u.wer.s@gmail.com</a>
<a href=""mailto:be.rn.na.dl.a.uwer.s@gmail.com"">be.rn.na.dl.a.uwer.s@gmail.com</a>
<a href=""mailto:b.e.rnnadlau.w.e.r.s@gmail.com"">b.e.rnnadlau.w.e.r.s@gmail.com</a>
<a href=""mailto:bernnad.la.uw.e.rs@gmail.com"">bernnad.la.uw.e.rs@gmail.com</a>
<a href=""mailto:b.ernn.a.dla.uw.er.s@gmail.com"">b.ernn.a.dla.uw.er.s@gmail.com</a>
<a href=""mailto:b.e.rn.nadl.a.u.we.rs@gmail.com"">b.e.rn.nadl.a.u.we.rs@gmail.com</a>
<a href=""mailto:ber.n.nad.lauwe.rs@gmail.com"">ber.n.nad.lauwe.rs@gmail.com</a>
<a href=""mailto:be.rn.na.d.l.auw.e.rs@gmail.com"">be.rn.na.d.l.auw.e.rs@gmail.com</a>
<a href=""mailto:b.er.n.n.a.dla.uw.ers@gmail.com"">b.er.n.n.a.dla.uw.ers@gmail.com</a>
<a href=""mailto:b.er.n.n.adl.au.wer.s@gmail.com"">b.er.n.n.adl.au.wer.s@gmail.com</a>
<a href=""mailto:b.e.rn.na.d.l.a.u.we.r.s@gmail.com"">b.e.rn.na.d.l.a.u.we.r.s@gmail.com</a>
<a href=""mailto:b.e.rnnadla.uwer.s@gmail.com"">b.e.rnnadla.uwer.s@gmail.com</a>
<a href=""mailto:be.rnna.d.lau.wers@gmail.com"">be.rnna.d.lau.wers@gmail.com</a>
<a href=""mailto:b.ern.na.d.l.a.uw.e.rs@gmail.com"">b.ern.na.d.l.a.uw.e.rs@gmail.com</a>
<a href=""mailto:b.e.r.nn.a.dla.u.we.rs@gmail.com"">b.e.r.nn.a.dla.u.we.rs@gmail.com</a>
<a href=""mailto:bernnadl.a.uwer.s@gmail.com"">bernnadl.a.uwer.s@gmail.com</a>
<a href=""mailto:ber.nn.adl.auw.er.s@gmail.com"">ber.nn.adl.auw.er.s@gmail.com</a>
<a href=""mailto:b.ernn.ad.la.u.w.e.rs@gmail.com"">b.ernn.ad.la.u.w.e.rs@gmail.com</a>
<a href=""mailto:b.e.rnn.a.dlau.w.er.s@gmail.com"">b.e.rnn.a.dlau.w.er.s@gmail.com</a>
<a href=""mailto:b.e.rn.n.ad.l.auwe.rs@gmail.com"">b.e.rn.n.ad.l.auwe.rs@gmail.com</a>
<a href=""mailto:b.e.r.n.nadl.a.uwe.rs@gmail.com"">b.e.r.n.nadl.a.uwe.rs@gmail.com</a>
<a href=""mailto:ber.nna.dl.au.wers@gmail.com"">ber.nna.dl.au.wers@gmail.com</a>
<a href=""mailto:b.ern.n.adlauw.e.rs@gmail.com"">b.ern.n.adlauw.e.rs@gmail.com</a>
<a href=""mailto:b.ern.na.dlauw.ers@gmail.com"">b.ern.na.dlauw.ers@gmail.com</a>
<a href=""mailto:b.e.r.nna.dl.a.uwers@gmail.com"">b.e.r.nna.dl.a.uwers@gmail.com</a>
<a href=""mailto:be.rn.nad.lauw.ers@gmail.com"">be.rn.nad.lauw.ers@gmail.com</a>
<a href=""mailto:b.e.rnn.a.d.la.uw.e.rs@gmail.com"">b.e.rnn.a.d.la.uw.e.rs@gmail.com</a>
<a href=""mailto:be.r.n.nadlauwe.r.s@gmail.com"">be.r.n.nadlauwe.r.s@gmail.com</a>
<a href=""mailto:b.e.r.nnad.la.u.w.ers@gmail.com"">b.e.r.nnad.la.u.w.ers@gmail.com</a>
<a href=""mailto:b.er.n.n.a.dl.a.uwer.s@gmail.com"">b.er.n.n.a.dl.a.uwer.s@gmail.com</a>
<a href=""mailto:b.e.r.n.n.adl.au.w.e.rs@gmail.com"">b.e.r.n.n.adl.au.w.e.rs@gmail.com</a>
<a href=""mailto:bern.na.dla.u.we.r.s@gmail.com"">bern.na.dla.u.we.r.s@gmail.com</a>
<a href=""mailto:be.rnnad.l.a.u.w.ers@gmail.com"">be.rnnad.l.a.u.w.ers@gmail.com</a>
<a href=""mailto:b.e.rn.na.d.l.a.uw.e.rs@gmail.com"">b.e.rn.na.d.l.a.uw.e.rs@gmail.com</a>
<a href=""mailto:bernna.d.l.auw.e.r.s@gmail.com"">bernna.d.l.auw.e.r.s@gmail.com</a>
<a href=""mailto:be.rnn.a.dl.au.we.rs@gmail.com"">be.rnn.a.dl.au.we.rs@gmail.com</a>
<a href=""mailto:b.er.n.n.ad.lau.w.e.rs@gmail.com"">b.er.n.n.ad.lau.w.e.rs@gmail.com</a>
<a href=""mailto:be.r.n.n.ad.la.u.we.r.s@gmail.com"">be.r.n.n.ad.la.u.we.r.s@gmail.com</a>
<a href=""mailto:b.e.r.nnadlauwe.r.s@gmail.com"">b.e.r.nnadlauwe.r.s@gmail.com</a>
<a href=""mailto:bern.n.adla.uw.ers@gmail.com"">bern.n.adla.uw.ers@gmail.com</a>
<a href=""mailto:b.e.rnn.a.dla.u.w.er.s@gmail.com"">b.e.rnn.a.dla.u.w.er.s@gmail.com</a>
<a href=""mailto:b.e.r.nna.dlau.w.ers@gmail.com"">b.e.r.nna.dlau.w.ers@gmail.com</a>
<a href=""mailto:be.r.nn.adl.a.uwe.rs@gmail.com"">be.r.nn.adl.a.uwe.rs@gmail.com</a>
<a href=""mailto:b.er.n.n.adl.au.w.ers@gmail.com"">b.er.n.n.adl.au.w.ers@gmail.com</a>
<a href=""mailto:ber.nnad.la.uw.e.r.s@gmail.com"">ber.nnad.la.uw.e.r.s@gmail.com</a>
<a href=""mailto:ber.n.nadl.a.uw.ers@gmail.com"">ber.n.nadl.a.uw.ers@gmail.com</a>
<a href=""mailto:b.ernn.a.dlau.w.e.rs@gmail.com"">b.ernn.a.dlau.w.e.rs@gmail.com</a>
<a href=""mailto:b.ern.n.adl.auw.e.r.s@gmail.com"">b.ern.n.adl.auw.e.r.s@gmail.com</a>
<a href=""mailto:b.e.rnnad.l.auw.er.s@gmail.com"">b.e.rnnad.l.auw.er.s@gmail.com</a>
<a href=""mailto:b.ern.n.a.dla.u.w.e.rs@gmail.com"">b.ern.n.a.dla.u.w.e.rs@gmail.com</a>
<a href=""mailto:b.e.rnnad.l.a.uw.e.r.s@gmail.com"">b.e.rnnad.l.a.uw.e.r.s@gmail.com</a>
<a href=""mailto:be.rn.n.a.dl.a.u.wer.s@gmail.com"">be.rn.n.a.dl.a.u.wer.s@gmail.com</a>
<a href=""mailto:ber.nn.a.dla.u.w.er.s@gmail.com"">ber.nn.a.dla.u.w.er.s@gmail.com</a>
<a href=""mailto:b.e.r.n.n.a.d.lauw.ers@gmail.com"">b.e.r.n.n.a.d.lauw.ers@gmail.com</a>
<a href=""mailto:bernn.a.dl.a.u.w.e.r.s@gmail.com"">bernn.a.dl.a.u.w.e.r.s@gmail.com</a>
<a href=""mailto:b.er.nnad.l.a.u.wer.s@gmail.com"">b.er.nnad.l.a.u.wer.s@gmail.com</a>
<a href=""mailto:b.e.rnna.d.l.a.uw.ers@gmail.com"">b.e.rnna.d.l.a.uw.ers@gmail.com</a>
<a href=""mailto:be.rn.na.d.l.a.u.w.e.r.s@gmail.com"">be.rn.na.d.l.a.u.w.e.r.s@gmail.com</a>
<a href=""mailto:b.ern.nadl.a.u.w.e.rs@gmail.com"">b.ern.nadl.a.u.w.e.rs@gmail.com</a>
<a href=""mailto:ber.nn.a.dl.au.w.e.r.s@gmail.com"">ber.nn.a.dl.au.w.e.r.s@gmail.com</a>
<a href=""mailto:ber.n.n.adl.a.uw.ers@gmail.com"">ber.n.n.adl.a.uw.ers@gmail.com</a>
<a href=""mailto:b.e.r.nna.d.l.auwers@gmail.com"">b.e.r.nna.d.l.auwers@gmail.com</a>
<a href=""mailto:b.ernna.d.l.a.uwers@gmail.com"">b.ernna.d.l.a.uwers@gmail.com</a>
<a href=""mailto:b.e.rnnadl.au.wers@gmail.com"">b.e.rnnadl.au.wers@gmail.com</a>
<a href=""mailto:b.er.nn.adl.a.u.w.ers@gmail.com"">b.er.nn.adl.a.u.w.ers@gmail.com</a>
<a href=""mailto:b.ern.nad.lau.wer.s@gmail.com"">b.ern.nad.lau.wer.s@gmail.com</a>
<a href=""mailto:be.rnn.a.dlau.w.er.s@gmail.com"">be.rnn.a.dlau.w.er.s@gmail.com</a>
<a href=""mailto:b.e.r.n.nad.la.u.wers@gmail.com"">b.e.r.n.nad.la.u.wers@gmail.com</a>
<a href=""mailto:be.rnn.a.dl.a.uw.e.r.s@gmail.com"">be.rnn.a.dl.a.uw.e.r.s@gmail.com</a>
<a href=""mailto:b.e.r.nn.adla.u.w.ers@gmail.com"">b.e.r.nn.adla.u.w.ers@gmail.com</a>
<a href=""mailto:b.ern.n.a.dla.uw.er.s@gmail.com"">b.ern.n.a.dla.uw.er.s@gmail.com</a>
<a href=""mailto:bernnadl.auwers@gmail.com"">bernnadl.auwers@gmail.com</a>
<a href=""mailto:ber.n.n.ad.l.auwe.r.s@gmail.com"">ber.n.n.ad.l.auwe.r.s@gmail.com</a>
<a href=""mailto:bernna.dlau.w.e.r.s@gmail.com"">bernna.dlau.w.e.r.s@gmail.com</a>
<a href=""mailto:bernnad.l.au.w.er.s@gmail.com"">bernnad.l.au.w.er.s@gmail.com</a>
<a href=""mailto:be.rn.nadl.auw.e.r.s@gmail.com"">be.rn.nadl.auw.e.r.s@gmail.com</a>
<a href=""mailto:be.r.nna.dlau.w.er.s@gmail.com"">be.r.nna.dlau.w.er.s@gmail.com</a>
<a href=""mailto:b.er.nna.d.la.u.wer.s@gmail.com"">b.er.nna.d.la.u.wer.s@gmail.com</a>
<a href=""mailto:bern.n.a.d.la.uw.er.s@gmail.com"">bern.n.a.d.la.uw.er.s@gmail.com</a>
<a href=""mailto:bernn.adlauwe.rs@gmail.com"">bernn.adlauwe.rs@gmail.com</a>
<a href=""mailto:ber.nn.adl.a.uwers@gmail.com"">ber.nn.adl.a.uwers@gmail.com</a>
<a href=""mailto:b.ern.na.d.la.u.w.er.s@gmail.com"">b.ern.na.d.la.u.w.er.s@gmail.com</a>
<a href=""mailto:b.e.rn.na.d.lau.w.er.s@gmail.com"">b.e.rn.na.d.lau.w.er.s@gmail.com</a>
<a href=""mailto:ber.nnadla.u.we.rs@gmail.com"">ber.nnadla.u.we.rs@gmail.com</a>
<a href=""mailto:bern.nadl.a.uw.e.r.s@gmail.com"">bern.nadl.a.uw.e.r.s@gmail.com</a>
<a href=""mailto:b.e.rnna.d.lauwers@gmail.com"">b.e.rnna.d.lauwers@gmail.com</a>
<a href=""mailto:bernn.a.d.l.au.we.rs@gmail.com"">bernn.a.d.l.au.we.rs@gmail.com</a>
<a href=""mailto:b.e.r.nn.adl.auw.ers@gmail.com"">b.e.r.nn.adl.auw.ers@gmail.com</a>
<a href=""mailto:be.rn.n.a.d.lau.we.r.s@gmail.com"">be.rn.n.a.d.lau.we.r.s@gmail.com</a>
<a href=""mailto:b.ernn.adla.u.w.e.rs@gmail.com"">b.ernn.adla.u.w.e.rs@gmail.com</a>
<a href=""mailto:be.r.nna.d.l.auw.er.s@gmail.com"">be.r.nna.d.l.auw.er.s@gmail.com</a>
<a href=""mailto:bernn.ad.l.a.u.wer.s@gmail.com"">bernn.ad.l.a.u.wer.s@gmail.com</a>
<a href=""mailto:b.er.n.na.dl.au.we.r.s@gmail.com"">b.er.n.na.dl.au.we.r.s@gmail.com</a>
<a href=""mailto:be.r.nn.ad.la.u.wers@gmail.com"">be.r.nn.ad.la.u.wers@gmail.com</a>
<a href=""mailto:b.e.rn.n.adla.uwers@gmail.com"">b.e.rn.n.adla.uwers@gmail.com</a>
<a href=""mailto:b.er.n.na.d.la.uw.er.s@gmail.com"">b.er.n.na.d.la.uw.er.s@gmail.com</a>
<a href=""mailto:be.rn.nad.la.u.we.r.s@gmail.com"">be.rn.nad.la.u.we.r.s@gmail.com</a>
<a href=""mailto:bernnadl.a.u.we.r.s@gmail.com"">bernnadl.a.u.we.r.s@gmail.com</a>
<a href=""mailto:be.r.n.n.a.d.l.a.uwe.r.s@gmail.com"">be.r.n.n.a.d.l.a.uwe.r.s@gmail.com</a>
<a href=""mailto:b.ernn.ad.lauw.e.rs@gmail.com"">b.ernn.ad.lauw.e.rs@gmail.com</a>
<a href=""mailto:b.ern.nadl.a.uw.er.s@gmail.com"">b.ern.nadl.a.uw.er.s@gmail.com</a>
<a href=""mailto:ber.nn.ad.l.a.u.we.r.s@gmail.com"">ber.nn.ad.l.a.u.we.r.s@gmail.com</a>
<a href=""mailto:bern.nadla.u.wers@gmail.com"">bern.nadla.u.wers@gmail.com</a>
<a href=""mailto:be.r.n.n.a.d.la.u.wer.s@gmail.com"">be.r.n.n.a.d.la.u.wer.s@gmail.com</a>
<a href=""mailto:be.rn.n.a.dl.a.uw.e.r.s@gmail.com"">be.rn.n.a.dl.a.uw.e.r.s@gmail.com</a>
<a href=""mailto:be.rn.nad.la.u.w.ers@gmail.com"">be.rn.nad.la.u.w.ers@gmail.com</a>
<a href=""mailto:b.er.nn.a.d.l.auwe.r.s@gmail.com"">b.er.nn.a.d.l.auwe.r.s@gmail.com</a>
<a href=""mailto:be.rnnad.la.u.we.r.s@gmail.com"">be.rnnad.la.u.we.r.s@gmail.com</a>"
s8quDx4u,snowzy,coinwalk,JavaScript,Saturday 10th of February 2024 07:50:33 AM CDT,"var original=  parseFloat(document.getElementById('pct_balance').value);
var dockiez = original;
var base = (dockiez/1000);
var sad = (base*10);
var frock = (base*2);
var idiot = (base*6.9);
var plane = 6.9;
var submarine = 2.9;
var bob = original;
var timmy = ((Math.floor(original/sad))*sad);
var neatoh = base;
var fleif = original;

function dobet(){
bilance = document.getElementById('pct_balance').value;
    if (bilance>(timmy+(neatoh*plane))) {
        plane = 4.9;
        submarine = 4.9;
        neatoh = neatoh*2; 
        timmy = bilance;
    }
    if (bilance<(timmy-(neatoh*submarine))) {
        plane = 4.9;
        submarine = 4.9;
        neatoh = neatoh*2; 
        timmy = bilance;
    }  
if ((bilance<=(bob-(base*7)))&&(((Math.floor(((bob-bilance)/5)/frock))*frock)>base)&&(bilance<bob)&&(bilance<(((Math.floor(bilance/sad))*sad)+idiot))) {  
        plane = 4.9;
        submarine = 4.9;
        timmy = parseFloat(bilance);
        neatoh = parseFloat((Math.floor(((bob-bilance)/5)/frock))*frock);
        bob = parseFloat(bilance);
   } 
if ((bilance>=(bob+(base*40)))&&(((Math.floor(((bilance-bob)/5)/frock))*frock)>base)&&(bilance>bob)&&(bilance<(((Math.floor(bilance/sad))*sad)+idiot))) {  
        plane = 4.9;
        submarine = 4.9;
        timmy = parseFloat(bilance);
        neatoh = parseFloat((Math.floor(((bob-bilance)/5)/frock))*frock);
        bob = parseFloat(bilance);
        }
    if (bilance<base) {
        console.log(""busted"");     
        return;
    }
    if (bilance>=(dockiez*2)) {
       console.log(""winner winner chicken dinner"");
       return;
   }
$('#pct_chance').val(49.5);
$('#pct_bet').val(((neatoh*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => dobet(), 1000);
} 
dobet();"
