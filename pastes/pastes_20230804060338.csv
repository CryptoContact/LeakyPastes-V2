id,title,username,language,date,content
UEjM73k3,IOI Training 23' Day 4 A,huz_n,C++,Friday 4th of August 2023 12:30:44 AM CDT,"#pragma GCC target(""arch=icelake-server"")
#pragma GCC optimize(""Ofast"")
#pragma GCC optimize(""unroll-loops"")
#pragma GCC target(""avx,avx2,sse2,sse3,ssse3,sse4,lzcnt,popcnt"")

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define ll long long
#define point pair<int, int>
#define X first
#define Y second
#define L first
#define R second
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define show(x) cerr << (#x) << "" = "" << x << '\n'
#define print(x) if (1) {cerr << (#x) << "" = ""; for (auto it : x) \
      cerr << it << ' '; cerr << '\n';}
#define fast_io ios_base::sync_with_stdio(0), cin.tie(0)

const int N = 128;
const int NN = 2 * N;
const int S = 1e7 + 64;
const int INF = 2e9 + 64;
const ll MAX = 2e18 + 64;
const int LOG = 30;
const int MOD = 998244353;
const int P = 79;
const int B = 800;

using namespace std;
using namespace __gnu_pbds;

// запих світового масштабу

int n, nn, l, r, comp[2 * N][2];
bool g[2 * N][2][2 * N][2], gr[2 * N][2][2 * N][2], vis[2 * N][2];
int next_free[NN][2][NN][2], next_free_rv[NN][2][NN][2];
point a[N][2];

inline int inv(int v) {
    return v + (v < n ? n : -n);
}

inline bool intersect(point p, point q) {
    return max(p.X, q.X) <= min(p.Y, q.Y);
}

inline void add_edges(int u, int i, int v, int j) {
    g[inv(u)][i][v][j] = true;
    g[inv(v)][j][u][i] = true;
    gr[v][j][inv(u)][i] = true;
    gr[u][i][inv(v)][j] = true;
}

vector<point> order;

void dfs1(int u, int i) {
    vis[u][i] = true;
    for (int j = 0; j < 2; ++j)
        for (int v = l; v <= r; v = next_free[u][i][v][j])
            if (g[u][i][v][j] && !vis[v][j])
                dfs1(v, j);

    for (int j = 0; j < 2; ++j)
        for (int v = l + n; v <= r + n; v = next_free[u][i][v][j])
            if (g[u][i][v][j] && !vis[v][j])
                dfs1(v, j);

    order.pb({u, i});
}

bool dfs2(int u, int i, int c) {
    comp[u][i] = c;
    vis[u][i] = true;
    if (comp[inv(u)][i] == c)
        return false;

    for (int j = 0; j < 2; ++j)
        for (int v = l; v <= r; v = next_free_rv[u][i][v][j])
            if (gr[u][i][v][j] && !vis[v][j] && !dfs2(v, j, c))
                    return false;

    for (int j = 0; j < 2; ++j)
        for (int v = l + n; v <= r + n; v = next_free_rv[u][i][v][j])
            if (gr[u][i][v][j] && !vis[v][j] && !dfs2(v, j, c))
                    return false;

    return true;
}

bool check(int p, int q) {
    l = p, r = q;
    order.clear();
    for (int i = l; i <= r; ++i)
        vis[i][0] = vis[i][1] = vis[i + n][0] = vis[i + n][1] = 0;

    for (int u = l; u <= r; ++u)
        for (int i = 0; i < 2; ++i)
            if (!vis[u][i])
                dfs1(u, i);

    for (int u = l + n; u <= r + n; ++u)
        for (int i = 0; i < 2; ++i)
            if (!vis[u][i])
                dfs1(u, i);

    reverse(all(order));
    for (int i = l; i <= r; ++i)
        vis[i][0] = vis[i][1] = vis[i + n][0] = vis[i + n][1] = 0;
    memset(comp, 0, sizeof(comp));

    int ptr = 1;

    for (point p : order)
        if (!vis[p.X][p.Y] && !dfs2(p.X, p.Y, ptr++))
            return false;

    return true;
}

mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());

void solve() {
    n = 100; 
    cin >> n;
    nn = 2 * n;
    memset(g, 0, sizeof(g));
    memset(gr, 0, sizeof(gr));
    memset(next_free, 5, sizeof(next_free));
    memset(next_free_rv, 5, sizeof(next_free_rv));

    for (int i = 0; i < n; ++i) {
        // a[i][0].L = rnd() % 86400, a[i][0].R = a[i][0].L + 1000; // rnd() % 86400;
        // a[i][1].L = rnd() % 86400, a[i][1].R = a[i][1].L + 1000; //rnd() % 86400;

        // if (a[i][0].L > a[i][0].R)
        //     swap(a[i][0].L, a[i][0].R);
        // if (a[i][1].L > a[i][1].R)
        //     swap(a[i][1].L, a[i][1].R);

        cin >> a[i][0].L >> a[i][0].R >> a[i][1].L >> a[i][1].R;
    }

    for (int u = 0; u < n; ++u) {
        add_edges(u, 0, u, 1);
        for (int v = 0; v < u; ++v)
            for (int i = 0; i < 2; ++i)
                for (int j = 0; j < 2; ++j)
                    if (intersect(a[u][i], a[v][j]))
                        add_edges(inv(u), i, inv(v), j);
    }

    for (int u = 0; u < 2 * n; ++u) {
        for (int i = 0; i < 2; ++i) {
            for (int v = 2 * n - 1; v >= 0; --v)
                for (int j = 0; j < 2; ++j) {
                    if (g[u][i][v + 1][j])
                        next_free[u][i][v][j] = v + 1;
                    else
                        next_free[u][i][v][j] = next_free[u][i][v + 1][j]; 

                    if (gr[u][i][v + 1][j])
                        next_free_rv[u][i][v][j] = v + 1;
                    else
                        next_free_rv[u][i][v][j] = next_free_rv[u][i][v + 1][j]; 
                }
        }
    }

    int j = 0;
    point ans = {0, -1};

    for (int i = 0; i < n; ++i) {
        j = max(j, i);
        while (j + 1 < n && check(i, j + 1))
            ++j;
        if (ans.R - ans.L < j - i)
            ans = {i, j};
    }

    cout << ans.L + 1 << ' ' << ans.R + 1 << '\n';
}

signed main() {
    fast_io;

    // double start = clock();

    int tt = 100;
    cin >> tt;

    while (tt--)
        solve();

    // cerr << fixed << setprecision(3) << ""Execution time : "" << (double)(clock() - start) / CLOCKS_PER_SEC << ""s."";
}"
RJkpcwyW,Untitled,Josif_tepe,C++,Friday 4th of August 2023 12:24:36 AM CDT,"#include <iostream>
#include <algorithm>
#include <cstring>
#include <vector>
#include <set>
#include <map>
#include <stack>
using namespace std;
typedef long long ll;
const int maxn = 1e5 + 10;
const int INF = 2e9;
int n;
int a[maxn], b[maxn];
int L[maxn], R[maxn];
int segment_tree[4 * maxn];
void solve_subtask2() {
    int x = b[0];
    int res = 0;
    for(int i = 0; i < n; i++) {
        if(a[i] == x) {
            res++;
            int j = i - 1;
            while(j >= 0 and a[j] <= x) {
                j--;
                res++;
            }
            j = i + 1;
            while(j < n and a[j] <= x) {
                res++;
                j++;
            }
            i = j - 1;
        }
    }
    cout << res << endl;
}
int dp[5005][5005];
int rec(int i, int j) {
    if(i < 0 or j < 0) {
        return 0;
    }
    if(dp[i][j] != -1) {
        return dp[i][j];
    }
    int res = 0;
    if(a[i] == b[j] and L[i] < j and R[i] > j) {
        res = max(res, rec(i, j - 1) + 1);
    }
    res = max(res, rec(i - 1, j));
    res = max(res, rec(i, j - 1));
    return dp[i][j] = res;
}
void build_tree(int L, int R, int node) {
    if(L == R) {
        segment_tree[node] = 0;
        return;
    }
    int middle = (L + R) / 2;
    build_tree(L, middle, 2 * node);
    build_tree(middle + 1, R, 2 * node + 1);
    segment_tree[node] = max(segment_tree[2 * node], segment_tree[2 * node + 1]);
}
int query(int i, int j, int L, int R, int node) {
    // L  R i L R j L R
    if(i <= L and R <= j) {
        return segment_tree[node];
    }
    if(R < i or j < L) {
        return 0;
    }
    int middle = (L + R) / 2;
    return max(query(i, j, L, middle, 2 * node), query(i, j, middle + 1, R, 2 * node + 1));
}
void update(int idx, int new_value, int L, int R, int node) {
    if(L == R) {
        segment_tree[node] = new_value;
        return;
    }
    int middle = (L + R) / 2;
    if(idx <= middle) {
        update(idx, new_value, L, middle, 2 * node);
    }
    else {
        update(idx, new_value, middle + 1, R, 2 * node + 1);
    }
    segment_tree[node] = max(segment_tree[2 * node], segment_tree[2 * node + 1]);
}
int main() {
    ios_base::sync_with_stdio(false);
    cin >> n;
    set<int> st;
    vector<int> t(n + 5);
    for(int i = 0; i < n; i++) {
        cin >> a[i];
        t[i + 1] = a[i];
    }
    for(int i = 0; i < n; i++) {
        cin >> b[i];
        st.insert(b[i]);
    }
    t[0] = INF;
    t[n + 1] = INF;
    stack<int> s;
    s.push(0);
    for(int i = 1; i <= n; i++) {
        while(t[s.top()] <= t[i]) {
            s.pop();
        }
        L[i - 1] = s.top() - 1;
        s.push(i);
    }
    while(!s.empty()) {
        s.pop();
    }
    s.push(n + 1);
    for(int i = n; i > 0; i--) {
        while(t[s.top()] <= t[i]) {
            s.pop();
        }
        R[i - 1] = s.top() - 1;
        s.push(i);
    }
    
    if((int) st.size() == 1) {
        solve_subtask2();
        return 0;
    }
    else if(n <= 5005){
        memset(dp, -1, sizeof dp);
        cout << rec(n - 1, n - 1) << endl;
    }
    else {
        build_tree(0, n - 1, 1);
        map<int, int> m;
        for(int i = 0; i < n; i++) {
            m[a[i]] = i;
        }
        
        for(int i = 0; i < n; i++) {
            map<int, int>::iterator it = m.find(b[i]);
            if(it != m.end()) {
                int idx = it->second;
                if(L[idx] < i and i < R[idx]) {
                    int dp = query(0, idx, 0, n - 1, 1);
                    update(idx, dp + 1, 0, n - 1, 1);
                }
            }
        }
        cout << query(0, n - 1, 0, n - 1, 1) << endl;
    }
    
    return 0;
}
"
QQYnKeGV,Nigerian scammers [4-8-1/2023],bombaires,HTML,Thursday 3rd of August 2023 11:24:00 PM CDT,"<a href=""mailto:mrmichaelflowerss@outlook.com"">mrmichaelflowerss@outlook.com</a>
<a href=""mailto:hsbcbank1969@gmail.com"">hsbcbank1969@gmail.com</a>
<a href=""mailto:hs.b.c.b.a.n.k.1.9.6.9@gmail.com"">hs.b.c.b.a.n.k.1.9.6.9@gmail.com</a>
<a href=""mailto:h.sb.cbank.1.969@gmail.com"">h.sb.cbank.1.969@gmail.com</a>
<a href=""mailto:h.s.b.cbank.196.9@gmail.com"">h.s.b.cbank.196.9@gmail.com</a>
<a href=""mailto:hs.bc.ba.nk1969@gmail.com"">hs.bc.ba.nk1969@gmail.com</a>
<a href=""mailto:hs.bc.b.an.k.1.969@gmail.com"">hs.bc.b.an.k.1.969@gmail.com</a>
<a href=""mailto:h.s.bcb.a.nk19.69@gmail.com"">h.s.bcb.a.nk19.69@gmail.com</a>
<a href=""mailto:hs.bcba.nk.19.69@gmail.com"">hs.bcba.nk.19.69@gmail.com</a>
<a href=""mailto:hs.bcb.ank1.96.9@gmail.com"">hs.bcb.ank1.96.9@gmail.com</a>
<a href=""mailto:hsb.c.ban.k1.969@gmail.com"">hsb.c.ban.k1.969@gmail.com</a>
<a href=""mailto:h.s.bc.bank19.6.9@gmail.com"">h.s.bc.bank19.6.9@gmail.com</a>
<a href=""mailto:h.sb.cb.a.nk.196.9@gmail.com"">h.sb.cb.a.nk.196.9@gmail.com</a>
<a href=""mailto:hsb.c.bank.1.9.69@gmail.com"">hsb.c.bank.1.9.69@gmail.com</a>
<a href=""mailto:hs.b.c.ba.nk1.96.9@gmail.com"">hs.b.c.ba.nk1.96.9@gmail.com</a>
<a href=""mailto:hs.bc.bank.1.969@gmail.com"">hs.bc.bank.1.969@gmail.com</a>
<a href=""mailto:hs.b.cb.a.n.k1969@gmail.com"">hs.b.cb.a.n.k1969@gmail.com</a>
<a href=""mailto:hs.b.cb.ank.1.9.6.9@gmail.com"">hs.b.cb.ank.1.9.6.9@gmail.com</a>
<a href=""mailto:h.s.bc.b.ank.1969@gmail.com"">h.s.bc.b.ank.1969@gmail.com</a>
<a href=""mailto:h.s.b.cb.ank1969@gmail.com"">h.s.b.cb.ank1969@gmail.com</a>
<a href=""mailto:hs.b.cb.a.n.k.1.96.9@gmail.com"">hs.b.cb.a.n.k.1.96.9@gmail.com</a>
<a href=""mailto:hs.b.cb.a.nk1969@gmail.com"">hs.b.cb.a.nk1969@gmail.com</a>
<a href=""mailto:h.s.b.cb.a.nk1969@gmail.com"">h.s.b.cb.a.nk1969@gmail.com</a>
<a href=""mailto:h.sb.cban.k.1.9.6.9@gmail.com"">h.sb.cban.k.1.9.6.9@gmail.com</a>
<a href=""mailto:h.s.b.cba.nk.196.9@gmail.com"">h.s.b.cba.nk.196.9@gmail.com</a>
<a href=""mailto:h.sbc.ba.n.k196.9@gmail.com"">h.sbc.ba.n.k196.9@gmail.com</a>
<a href=""mailto:h.s.bcb.a.n.k19.6.9@gmail.com"">h.s.bcb.a.n.k19.6.9@gmail.com</a>
<a href=""mailto:hsbc.ban.k.1.9.6.9@gmail.com"">hsbc.ban.k.1.9.6.9@gmail.com</a>
<a href=""mailto:h.s.bc.b.a.nk196.9@gmail.com"">h.s.bc.b.a.nk196.9@gmail.com</a>
<a href=""mailto:hsbc.ban.k1969@gmail.com"">hsbc.ban.k1969@gmail.com</a>
<a href=""mailto:hs.b.cb.an.k1969@gmail.com"">hs.b.cb.an.k1969@gmail.com</a>
<a href=""mailto:h.sbcba.n.k.1.96.9@gmail.com"">h.sbcba.n.k.1.96.9@gmail.com</a>
<a href=""mailto:h.s.b.cb.an.k.1.96.9@gmail.com"">h.s.b.cb.an.k.1.96.9@gmail.com</a>
<a href=""mailto:h.sbc.ba.n.k1.9.69@gmail.com"">h.sbc.ba.n.k1.9.69@gmail.com</a>
<a href=""mailto:h.s.b.cba.n.k1.9.69@gmail.com"">h.s.b.cba.n.k1.9.69@gmail.com</a>
<a href=""mailto:h.sbc.b.ank19.69@gmail.com"">h.sbc.b.ank19.69@gmail.com</a>
<a href=""mailto:hs.b.c.ban.k.1.9.6.9@gmail.com"">hs.b.c.ban.k.1.9.6.9@gmail.com</a>
<a href=""mailto:hsb.c.b.a.n.k1.96.9@gmail.com"">hsb.c.b.a.n.k1.96.9@gmail.com</a>
<a href=""mailto:h.s.b.c.ban.k19.69@gmail.com"">h.s.b.c.ban.k19.69@gmail.com</a>
<a href=""mailto:h.sbcb.a.n.k.19.6.9@gmail.com"">h.sbcb.a.n.k.19.6.9@gmail.com</a>
<a href=""mailto:hsb.c.bank1.9.69@gmail.com"">hsb.c.bank1.9.69@gmail.com</a>
<a href=""mailto:h.s.b.cba.nk.19.69@gmail.com"">h.s.b.cba.nk.19.69@gmail.com</a>
<a href=""mailto:hs.bcba.n.k.1969@gmail.com"">hs.bcba.n.k.1969@gmail.com</a>
<a href=""mailto:h.sb.cb.a.nk1.96.9@gmail.com"">h.sb.cb.a.nk1.96.9@gmail.com</a>
<a href=""mailto:hsbc.b.a.nk19.6.9@gmail.com"">hsbc.b.a.nk19.6.9@gmail.com</a>
<a href=""mailto:hsbc.b.ank.1.9.6.9@gmail.com"">hsbc.b.ank.1.9.6.9@gmail.com</a>
<a href=""mailto:h.sbcb.a.n.k.1.96.9@gmail.com"">h.sbcb.a.n.k.1.96.9@gmail.com</a>
<a href=""mailto:h.sb.cba.nk19.69@gmail.com"">h.sb.cba.nk19.69@gmail.com</a>
<a href=""mailto:h.s.b.cba.n.k.1.96.9@gmail.com"">h.s.b.cba.n.k.1.96.9@gmail.com</a>
<a href=""mailto:hsbc.ba.n.k.19.6.9@gmail.com"">hsbc.ba.n.k.19.6.9@gmail.com</a>
<a href=""mailto:hs.bcban.k1969@gmail.com"">hs.bcban.k1969@gmail.com</a>
<a href=""mailto:hs.bc.b.a.n.k.196.9@gmail.com"">hs.bc.b.a.n.k.196.9@gmail.com</a>
<a href=""mailto:h.s.b.cbank1.9.69@gmail.com"">h.s.b.cbank1.9.69@gmail.com</a>
<a href=""mailto:h.sbcban.k196.9@gmail.com"">h.sbcban.k196.9@gmail.com</a>
<a href=""mailto:hsb.c.ba.n.k1.969@gmail.com"">hsb.c.ba.n.k1.969@gmail.com</a>
<a href=""mailto:h.sb.cb.ank1.969@gmail.com"">h.sb.cb.ank1.969@gmail.com</a>
<a href=""mailto:hsb.c.ba.n.k196.9@gmail.com"">hsb.c.ba.n.k196.9@gmail.com</a>
<a href=""mailto:h.sbcba.n.k1.9.69@gmail.com"">h.sbcba.n.k1.9.69@gmail.com</a>
<a href=""mailto:hsbc.ba.n.k19.69@gmail.com"">hsbc.ba.n.k19.69@gmail.com</a>
<a href=""mailto:hsbc.ban.k.19.6.9@gmail.com"">hsbc.ban.k.19.6.9@gmail.com</a>
<a href=""mailto:h.sb.c.b.a.nk1969@gmail.com"">h.sb.c.b.a.nk1969@gmail.com</a>
<a href=""mailto:hsbcb.a.nk.1.9.69@gmail.com"">hsbcb.a.nk.1.9.69@gmail.com</a>
<a href=""mailto:h.sb.c.b.a.n.k1.9.69@gmail.com"">h.sb.c.b.a.n.k1.9.69@gmail.com</a>
<a href=""mailto:h.s.bc.bank1.96.9@gmail.com"">h.s.bc.bank1.96.9@gmail.com</a>
<a href=""mailto:hs.bc.ba.nk.1969@gmail.com"">hs.bc.ba.nk.1969@gmail.com</a>
<a href=""mailto:hsb.c.b.a.n.k.19.6.9@gmail.com"">hsb.c.b.a.n.k.19.6.9@gmail.com</a>
<a href=""mailto:h.s.b.cbank19.69@gmail.com"">h.s.b.cbank19.69@gmail.com</a>
<a href=""mailto:h.sbc.b.an.k19.6.9@gmail.com"">h.sbc.b.an.k19.6.9@gmail.com</a>
<a href=""mailto:hs.b.c.b.ank.1.9.69@gmail.com"">hs.b.c.b.ank.1.9.69@gmail.com</a>
<a href=""mailto:hs.bcb.an.k196.9@gmail.com"">hs.bcb.an.k196.9@gmail.com</a>
<a href=""mailto:h.sb.cban.k1.96.9@gmail.com"">h.sb.cban.k1.96.9@gmail.com</a>
<a href=""mailto:hs.bc.b.ank1969@gmail.com"">hs.bc.b.ank1969@gmail.com</a>
<a href=""mailto:h.s.b.c.ba.nk1969@gmail.com"">h.s.b.c.ba.nk1969@gmail.com</a>
<a href=""mailto:hs.b.cb.ank1.969@gmail.com"">hs.b.cb.ank1.969@gmail.com</a>
<a href=""mailto:hs.b.c.b.a.nk196.9@gmail.com"">hs.b.c.b.a.nk196.9@gmail.com</a>
<a href=""mailto:hsbcb.an.k.19.69@gmail.com"">hsbcb.an.k.19.69@gmail.com</a>
<a href=""mailto:hsbc.bank.1.9.69@gmail.com"">hsbc.bank.1.9.69@gmail.com</a>
<a href=""mailto:hsb.cb.a.n.k.1.9.69@gmail.com"">hsb.cb.a.n.k.1.9.69@gmail.com</a>
<a href=""mailto:hsbc.b.a.n.k196.9@gmail.com"">hsbc.b.a.n.k196.9@gmail.com</a>
<a href=""mailto:hs.b.c.ban.k1.9.6.9@gmail.com"">hs.b.c.ban.k1.9.6.9@gmail.com</a>
<a href=""mailto:h.sb.cb.an.k1.9.69@gmail.com"">h.sb.cb.an.k1.9.69@gmail.com</a>
<a href=""mailto:hsbc.ban.k1.969@gmail.com"">hsbc.ban.k1.969@gmail.com</a>
<a href=""mailto:h.s.b.cb.a.nk.1969@gmail.com"">h.s.b.cb.a.nk.1969@gmail.com</a>
<a href=""mailto:h.s.b.cba.nk1969@gmail.com"">h.s.b.cba.nk1969@gmail.com</a>
<a href=""mailto:hs.bc.b.a.n.k1969@gmail.com"">hs.bc.b.a.n.k1969@gmail.com</a>
<a href=""mailto:h.s.b.c.b.ank1.9.6.9@gmail.com"">h.s.b.c.b.ank1.9.6.9@gmail.com</a>
<a href=""mailto:hs.b.cb.ank.1.9.69@gmail.com"">hs.b.cb.ank.1.9.69@gmail.com</a>
<a href=""mailto:hs.bcb.a.nk19.6.9@gmail.com"">hs.bcb.a.nk19.6.9@gmail.com</a>
<a href=""mailto:h.sbc.b.an.k1.969@gmail.com"">h.sbc.b.an.k1.969@gmail.com</a>
<a href=""mailto:hsb.cban.k1.9.6.9@gmail.com"">hsb.cban.k1.9.6.9@gmail.com</a>
<a href=""mailto:hs.b.cb.a.n.k1.96.9@gmail.com"">hs.b.cb.a.n.k1.96.9@gmail.com</a>
<a href=""mailto:hs.b.cbank1.96.9@gmail.com"">hs.b.cbank1.96.9@gmail.com</a>
<a href=""mailto:hsb.cban.k.1.969@gmail.com"">hsb.cban.k.1.969@gmail.com</a>
<a href=""mailto:h.sbc.b.a.nk1.9.69@gmail.com"">h.sbc.b.a.nk1.9.69@gmail.com</a>
<a href=""mailto:h.s.b.c.b.an.k.19.6.9@gmail.com"">h.s.b.c.b.an.k.19.6.9@gmail.com</a>
<a href=""mailto:h.s.bcban.k.196.9@gmail.com"">h.s.bcban.k.196.9@gmail.com</a>
<a href=""mailto:h.sbcba.n.k1.9.6.9@gmail.com"">h.sbcba.n.k1.9.6.9@gmail.com</a>
<a href=""mailto:hsbcban.k1.9.69@gmail.com"">hsbcban.k1.9.69@gmail.com</a>
<a href=""mailto:h.s.bc.bank1969@gmail.com"">h.s.bc.bank1969@gmail.com</a>
<a href=""mailto:hs.bc.ba.n.k1.9.6.9@gmail.com"">hs.bc.ba.n.k1.9.6.9@gmail.com</a>
<a href=""mailto:hs.bcb.a.nk.1.96.9@gmail.com"">hs.bcb.a.nk.1.96.9@gmail.com</a>
<a href=""mailto:h.sb.c.b.a.nk.196.9@gmail.com"">h.sb.c.b.a.nk.196.9@gmail.com</a>
<a href=""mailto:h.s.bcb.a.nk1.96.9@gmail.com"">h.s.bcb.a.nk1.96.9@gmail.com</a>
<a href=""mailto:hs.b.cba.nk19.69@gmail.com"">hs.b.cba.nk19.69@gmail.com</a>
<a href=""mailto:h.sbc.ba.n.k.1.969@gmail.com"">h.sbc.ba.n.k.1.969@gmail.com</a>
<a href=""mailto:h.s.bcb.an.k.196.9@gmail.com"">h.s.bcb.an.k.196.9@gmail.com</a>
<a href=""mailto:hsb.c.ban.k.1969@gmail.com"">hsb.c.ban.k.1969@gmail.com</a>
<a href=""mailto:hs.bcb.a.n.k.1.9.69@gmail.com"">hs.bcb.a.n.k.1.9.69@gmail.com</a>
<a href=""mailto:hsbcb.a.n.k.1.96.9@gmail.com"">hsbcb.a.n.k.1.96.9@gmail.com</a>
<a href=""mailto:h.sbcba.nk.1.969@gmail.com"">h.sbcba.nk.1.969@gmail.com</a>
<a href=""mailto:hsb.c.ba.nk1.9.69@gmail.com"">hsb.c.ba.nk1.9.69@gmail.com</a>
<a href=""mailto:h.sb.c.b.an.k1969@gmail.com"">h.sb.c.b.an.k1969@gmail.com</a>
<a href=""mailto:hs.b.c.b.ank.1.9.6.9@gmail.com"">hs.b.c.b.ank.1.9.6.9@gmail.com</a>
<a href=""mailto:h.s.b.cb.an.k.1.969@gmail.com"">h.s.b.cb.an.k.1.969@gmail.com</a>
<a href=""mailto:h.s.b.c.bank.1.9.6.9@gmail.com"">h.s.b.c.bank.1.9.6.9@gmail.com</a>
<a href=""mailto:hs.b.c.b.an.k1.969@gmail.com"">hs.b.c.b.an.k1.969@gmail.com</a>
<a href=""mailto:h.s.b.c.b.a.nk19.69@gmail.com"">h.s.b.c.b.a.nk19.69@gmail.com</a>
<a href=""mailto:hsbc.ba.n.k1.9.6.9@gmail.com"">hsbc.ba.n.k1.9.6.9@gmail.com</a>
<a href=""mailto:h.sb.c.b.an.k1.969@gmail.com"">h.sb.c.b.an.k1.969@gmail.com</a>
<a href=""mailto:h.s.b.cb.ank.1.9.69@gmail.com"">h.s.b.cb.ank.1.9.69@gmail.com</a>
<a href=""mailto:h.sb.c.b.ank.19.6.9@gmail.com"">h.sb.c.b.ank.19.6.9@gmail.com</a>
<a href=""mailto:hsb.c.b.ank19.69@gmail.com"">hsb.c.b.ank19.69@gmail.com</a>
<a href=""mailto:h.s.bc.b.ank.1.969@gmail.com"">h.s.bc.b.ank.1.969@gmail.com</a>
<a href=""mailto:hs.b.c.b.a.n.k1.9.69@gmail.com"">hs.b.c.b.a.n.k1.9.69@gmail.com</a>
<a href=""mailto:h.sb.c.ba.n.k.1969@gmail.com"">h.sb.c.ba.n.k.1969@gmail.com</a>
<a href=""mailto:hs.bc.b.a.n.k.1.96.9@gmail.com"">hs.bc.b.a.n.k.1.96.9@gmail.com</a>
<a href=""mailto:hsbcba.n.k.19.6.9@gmail.com"">hsbcba.n.k.19.6.9@gmail.com</a>
<a href=""mailto:h.sb.cb.a.n.k1.9.69@gmail.com"">h.sb.cb.a.n.k1.9.69@gmail.com</a>
<a href=""mailto:hs.b.c.ba.nk.196.9@gmail.com"">hs.b.c.ba.nk.196.9@gmail.com</a>
<a href=""mailto:hsb.cbank1.9.69@gmail.com"">hsb.cbank1.9.69@gmail.com</a>
<a href=""mailto:hsb.c.ban.k.19.69@gmail.com"">hsb.c.ban.k.19.69@gmail.com</a>
<a href=""mailto:hs.bc.b.an.k1.9.6.9@gmail.com"">hs.bc.b.an.k1.9.6.9@gmail.com</a>
<a href=""mailto:hs.b.cban.k1969@gmail.com"">hs.b.cban.k1969@gmail.com</a>
<a href=""mailto:hs.bc.b.a.nk.1.9.69@gmail.com"">hs.bc.b.a.nk.1.9.69@gmail.com</a>
<a href=""mailto:h.sb.cb.a.n.k19.69@gmail.com"">h.sb.cb.a.n.k19.69@gmail.com</a>
<a href=""mailto:hs.bcba.n.k19.69@gmail.com"">hs.bcba.n.k19.69@gmail.com</a>
<a href=""mailto:hsbc.ba.n.k.1.969@gmail.com"">hsbc.ba.n.k.1.969@gmail.com</a>
<a href=""mailto:h.sbc.b.an.k.1969@gmail.com"">h.sbc.b.an.k.1969@gmail.com</a>
<a href=""mailto:hs.b.cb.a.nk1.96.9@gmail.com"">hs.b.cb.a.nk1.96.9@gmail.com</a>
<a href=""mailto:hsbc.bank19.69@gmail.com"">hsbc.bank19.69@gmail.com</a>
<a href=""mailto:hsbc.bank1.9.69@gmail.com"">hsbc.bank1.9.69@gmail.com</a>
<a href=""mailto:h.s.b.cb.an.k1.969@gmail.com"">h.s.b.cb.an.k1.969@gmail.com</a>
<a href=""mailto:hs.b.c.b.an.k.1.9.69@gmail.com"">hs.b.c.b.an.k.1.9.69@gmail.com</a>
<a href=""mailto:h.sb.c.b.ank1.969@gmail.com"">h.sb.c.b.ank1.969@gmail.com</a>
<a href=""mailto:h.sb.c.b.an.k19.6.9@gmail.com"">h.sb.c.b.an.k19.6.9@gmail.com</a>
<a href=""mailto:hs.bcban.k1.969@gmail.com"">hs.bcban.k1.969@gmail.com</a>
<a href=""mailto:hs.b.c.bank.1.9.6.9@gmail.com"">hs.b.c.bank.1.9.6.9@gmail.com</a>
<a href=""mailto:h.sb.c.bank1969@gmail.com"">h.sb.c.bank1969@gmail.com</a>
<a href=""mailto:h.sbc.bank.1.9.69@gmail.com"">h.sbc.bank.1.9.69@gmail.com</a>
<a href=""mailto:h.sb.cbank.19.6.9@gmail.com"">h.sb.cbank.19.6.9@gmail.com</a>
<a href=""mailto:h.s.bcbank.1.96.9@gmail.com"">h.s.bcbank.1.96.9@gmail.com</a>
<a href=""mailto:h.s.b.cb.ank.1.9.6.9@gmail.com"">h.s.b.cb.ank.1.9.6.9@gmail.com</a>
<a href=""mailto:h.s.bc.bank.1969@gmail.com"">h.s.bc.bank.1969@gmail.com</a>
<a href=""mailto:hsb.cba.n.k.1.96.9@gmail.com"">hsb.cba.n.k.1.96.9@gmail.com</a>
<a href=""mailto:h.sb.c.b.an.k.19.69@gmail.com"">h.sb.c.b.an.k.19.69@gmail.com</a>
<a href=""mailto:h.s.b.c.b.a.n.k.1.969@gmail.com"">h.s.b.c.b.a.n.k.1.969@gmail.com</a>
<a href=""mailto:h.sbc.ba.nk.1.96.9@gmail.com"">h.sbc.ba.nk.1.96.9@gmail.com</a>
<a href=""mailto:hs.b.c.b.ank1.96.9@gmail.com"">hs.b.c.b.ank1.96.9@gmail.com</a>
<a href=""mailto:h.sbcbank.1969@gmail.com"">h.sbcbank.1969@gmail.com</a>
<a href=""mailto:h.s.b.cba.n.k.196.9@gmail.com"">h.s.b.cba.n.k.196.9@gmail.com</a>
<a href=""mailto:h.sb.cb.ank.196.9@gmail.com"">h.sb.cb.ank.196.9@gmail.com</a>
<a href=""mailto:h.s.b.cb.ank1.969@gmail.com"">h.s.b.cb.ank1.969@gmail.com</a>
<a href=""mailto:hs.bcbank.1.9.69@gmail.com"">hs.bcbank.1.9.69@gmail.com</a>
<a href=""mailto:h.sbc.b.an.k1.96.9@gmail.com"">h.sbc.b.an.k1.96.9@gmail.com</a>
<a href=""mailto:hs.bc.ba.n.k1.96.9@gmail.com"">hs.bc.ba.n.k1.96.9@gmail.com</a>
<a href=""mailto:hs.b.c.ba.nk.1.96.9@gmail.com"">hs.b.c.ba.nk.1.96.9@gmail.com</a>
<a href=""mailto:hsb.c.b.a.nk.196.9@gmail.com"">hsb.c.b.a.nk.196.9@gmail.com</a>
<a href=""mailto:hsbc.b.a.nk.1.9.6.9@gmail.com"">hsbc.b.a.nk.1.9.6.9@gmail.com</a>
<a href=""mailto:h.sb.c.ba.nk.1.96.9@gmail.com"">h.sb.c.ba.nk.1.96.9@gmail.com</a>
<a href=""mailto:h.sb.c.ba.nk1.9.6.9@gmail.com"">h.sb.c.ba.nk1.9.6.9@gmail.com</a>
<a href=""mailto:hsbcban.k.196.9@gmail.com"">hsbcban.k.196.9@gmail.com</a>
<a href=""mailto:h.sb.c.ban.k.1.96.9@gmail.com"">h.sb.c.ban.k.1.96.9@gmail.com</a>
<a href=""mailto:hs.bcb.a.nk.19.69@gmail.com"">hs.bcb.a.nk.19.69@gmail.com</a>
<a href=""mailto:hsb.cban.k.19.69@gmail.com"">hsb.cban.k.19.69@gmail.com</a>
<a href=""mailto:h.s.b.c.ba.n.k.19.69@gmail.com"">h.s.b.c.ba.n.k.19.69@gmail.com</a>
<a href=""mailto:hsb.c.ba.nk.1.969@gmail.com"">hsb.c.ba.nk.1.969@gmail.com</a>
<a href=""mailto:hs.b.c.b.a.nk1.969@gmail.com"">hs.b.c.b.a.nk1.969@gmail.com</a>
<a href=""mailto:hs.bcb.ank1.9.69@gmail.com"">hs.bcb.ank1.9.69@gmail.com</a>
<a href=""mailto:h.s.bcb.a.nk1969@gmail.com"">h.s.bcb.a.nk1969@gmail.com</a>
<a href=""mailto:h.sb.c.b.a.nk.1.969@gmail.com"">h.sb.c.b.a.nk.1.969@gmail.com</a>
<a href=""mailto:h.sbc.ba.n.k.1.9.6.9@gmail.com"">h.sbc.ba.n.k.1.9.6.9@gmail.com</a>
<a href=""mailto:hsb.c.b.a.n.k1.9.6.9@gmail.com"">hsb.c.b.a.n.k1.9.6.9@gmail.com</a>
<a href=""mailto:h.s.b.c.bank.1.9.69@gmail.com"">h.s.b.c.bank.1.9.69@gmail.com</a>
<a href=""mailto:hsbc.b.a.nk.1969@gmail.com"">hsbc.b.a.nk.1969@gmail.com</a>
<a href=""mailto:hsb.c.b.a.nk.1969@gmail.com"">hsb.c.b.a.nk.1969@gmail.com</a>
<a href=""mailto:hsb.cb.a.nk.1.96.9@gmail.com"">hsb.cb.a.nk.1.96.9@gmail.com</a>
<a href=""mailto:hs.b.c.b.a.nk.1969@gmail.com"">hs.b.c.b.a.nk.1969@gmail.com</a>
<a href=""mailto:h.sbcba.n.k.1.9.6.9@gmail.com"">h.sbcba.n.k.1.9.6.9@gmail.com</a>
<a href=""mailto:hsb.cba.nk19.6.9@gmail.com"">hsb.cba.nk19.6.9@gmail.com</a>
<a href=""mailto:h.sb.c.b.a.n.k.1.969@gmail.com"">h.sb.c.b.a.n.k.1.969@gmail.com</a>
<a href=""mailto:hsb.c.b.an.k.19.6.9@gmail.com"">hsb.c.b.an.k.19.6.9@gmail.com</a>
<a href=""mailto:h.sbc.b.a.nk.1.9.6.9@gmail.com"">h.sbc.b.a.nk.1.9.6.9@gmail.com</a>
<a href=""mailto:h.sb.cbank.1969@gmail.com"">h.sb.cbank.1969@gmail.com</a>
<a href=""mailto:hs.b.cba.n.k.19.6.9@gmail.com"">hs.b.cba.n.k.19.6.9@gmail.com</a>
<a href=""mailto:h.s.bcba.nk196.9@gmail.com"">h.s.bcba.nk196.9@gmail.com</a>
<a href=""mailto:hsb.cban.k1969@gmail.com"">hsb.cban.k1969@gmail.com</a>
<a href=""mailto:hs.bcba.nk1.969@gmail.com"">hs.bcba.nk1.969@gmail.com</a>
<a href=""mailto:h.s.bcb.an.k.1969@gmail.com"">h.s.bcb.an.k.1969@gmail.com</a>
<a href=""mailto:h.sb.cb.ank1.9.6.9@gmail.com"">h.sb.cb.ank1.9.6.9@gmail.com</a>
<a href=""mailto:h.sb.cb.a.n.k.196.9@gmail.com"">h.sb.cb.a.n.k.196.9@gmail.com</a>
<a href=""mailto:h.s.b.cb.an.k.1.9.6.9@gmail.com"">h.s.b.cb.an.k.1.9.6.9@gmail.com</a>
<a href=""mailto:h.sb.cba.n.k.1969@gmail.com"">h.sb.cba.n.k.1969@gmail.com</a>
<a href=""mailto:jackymschan@gmail.com"">jackymschan@gmail.com</a>
<a href=""mailto:j.a.c.kymsc.han@gmail.com"">j.a.c.kymsc.han@gmail.com</a>
<a href=""mailto:jac.k.y.msc.ha.n@gmail.com"">jac.k.y.msc.ha.n@gmail.com</a>
<a href=""mailto:j.a.c.kyms.c.h.an@gmail.com"">j.a.c.kyms.c.h.an@gmail.com</a>
<a href=""mailto:j.ac.kyms.c.h.an@gmail.com"">j.ac.kyms.c.h.an@gmail.com</a>
<a href=""mailto:ja.c.ky.msc.h.an@gmail.com"">ja.c.ky.msc.h.an@gmail.com</a>
<a href=""mailto:j.a.c.ky.m.s.chan@gmail.com"">j.a.c.ky.m.s.chan@gmail.com</a>
<a href=""mailto:j.acky.m.sc.h.a.n@gmail.com"">j.acky.m.sc.h.a.n@gmail.com</a>
<a href=""mailto:ja.ckym.sc.ha.n@gmail.com"">ja.ckym.sc.ha.n@gmail.com</a>
<a href=""mailto:jac.k.y.m.sch.an@gmail.com"">jac.k.y.m.sch.an@gmail.com</a>
<a href=""mailto:j.ackyms.chan@gmail.com"">j.ackyms.chan@gmail.com</a>
<a href=""mailto:j.ac.ky.m.sch.a.n@gmail.com"">j.ac.ky.m.sch.a.n@gmail.com</a>
<a href=""mailto:jackym.s.c.ha.n@gmail.com"">jackym.s.c.ha.n@gmail.com</a>
<a href=""mailto:j.a.c.k.ymsch.a.n@gmail.com"">j.a.c.k.ymsch.a.n@gmail.com</a>
<a href=""mailto:j.a.c.ky.mschan@gmail.com"">j.a.c.ky.mschan@gmail.com</a>
<a href=""mailto:ja.c.k.ym.sc.ha.n@gmail.com"">ja.c.k.ym.sc.ha.n@gmail.com</a>
<a href=""mailto:ja.c.k.y.msch.a.n@gmail.com"">ja.c.k.y.msch.a.n@gmail.com</a>
<a href=""mailto:j.ac.ky.m.scha.n@gmail.com"">j.ac.ky.m.scha.n@gmail.com</a>
<a href=""mailto:j.ac.kym.scha.n@gmail.com"">j.ac.kym.scha.n@gmail.com</a>
<a href=""mailto:j.ack.y.m.sc.h.a.n@gmail.com"">j.ack.y.m.sc.h.a.n@gmail.com</a>
<a href=""mailto:j.ac.kyms.chan@gmail.com"">j.ac.kyms.chan@gmail.com</a>
<a href=""mailto:j.ack.y.m.sch.a.n@gmail.com"">j.ack.y.m.sch.a.n@gmail.com</a>
<a href=""mailto:jac.kymschan@gmail.com"">jac.kymschan@gmail.com</a>
<a href=""mailto:j.ac.k.ym.s.c.ha.n@gmail.com"">j.ac.k.ym.s.c.ha.n@gmail.com</a>
<a href=""mailto:jackymsc.ha.n@gmail.com"">jackymsc.ha.n@gmail.com</a>
<a href=""mailto:j.a.ck.ym.s.c.h.a.n@gmail.com"">j.a.ck.ym.s.c.h.a.n@gmail.com</a>
<a href=""mailto:ja.c.kym.s.chan@gmail.com"">ja.c.kym.s.chan@gmail.com</a>
<a href=""mailto:jacky.msc.h.a.n@gmail.com"">jacky.msc.h.a.n@gmail.com</a>
<a href=""mailto:j.ac.k.ym.s.c.han@gmail.com"">j.ac.k.ym.s.c.han@gmail.com</a>
<a href=""mailto:jac.k.ym.sch.an@gmail.com"">jac.k.ym.sch.an@gmail.com</a>
<a href=""mailto:ja.c.k.ym.schan@gmail.com"">ja.c.k.ym.schan@gmail.com</a>
<a href=""mailto:jacky.ms.chan@gmail.com"">jacky.ms.chan@gmail.com</a>
<a href=""mailto:jacky.m.sc.h.a.n@gmail.com"">jacky.m.sc.h.a.n@gmail.com</a>
<a href=""mailto:j.ackyms.ch.a.n@gmail.com"">j.ackyms.ch.a.n@gmail.com</a>
<a href=""mailto:j.acky.m.s.ch.a.n@gmail.com"">j.acky.m.s.ch.a.n@gmail.com</a>
<a href=""mailto:j.a.c.k.y.ms.ch.a.n@gmail.com"">j.a.c.k.y.ms.ch.a.n@gmail.com</a>
<a href=""mailto:ja.c.ky.m.s.c.h.a.n@gmail.com"">ja.c.ky.m.s.c.h.a.n@gmail.com</a>
<a href=""mailto:ja.ck.y.m.s.chan@gmail.com"">ja.ck.y.m.s.chan@gmail.com</a>
<a href=""mailto:jack.y.msc.h.an@gmail.com"">jack.y.msc.h.an@gmail.com</a>
<a href=""mailto:j.ac.k.ym.s.ch.an@gmail.com"">j.ac.k.ym.s.ch.an@gmail.com</a>
<a href=""mailto:j.a.c.ky.msch.a.n@gmail.com"">j.a.c.ky.msch.a.n@gmail.com</a>
<a href=""mailto:ja.ckymsc.han@gmail.com"">ja.ckymsc.han@gmail.com</a>
<a href=""mailto:jack.ym.scha.n@gmail.com"">jack.ym.scha.n@gmail.com</a>
<a href=""mailto:ja.c.ky.mscha.n@gmail.com"">ja.c.ky.mscha.n@gmail.com</a>
<a href=""mailto:j.ack.y.m.s.ch.a.n@gmail.com"">j.ack.y.m.s.ch.a.n@gmail.com</a>
<a href=""mailto:jac.k.y.m.sc.han@gmail.com"">jac.k.y.m.sc.han@gmail.com</a>
<a href=""mailto:jacky.m.sch.an@gmail.com"">jacky.m.sch.an@gmail.com</a>
<a href=""mailto:j.a.ckyms.cha.n@gmail.com"">j.a.ckyms.cha.n@gmail.com</a>
<a href=""mailto:ja.ck.yms.c.h.a.n@gmail.com"">ja.ck.yms.c.h.a.n@gmail.com</a>
<a href=""mailto:j.a.c.kym.s.c.han@gmail.com"">j.a.c.kym.s.c.han@gmail.com</a>
<a href=""mailto:jac.kym.scha.n@gmail.com"">jac.kym.scha.n@gmail.com</a>
<a href=""mailto:jac.k.yms.c.ha.n@gmail.com"">jac.k.yms.c.ha.n@gmail.com</a>
<a href=""mailto:jack.y.m.schan@gmail.com"">jack.y.m.schan@gmail.com</a>
<a href=""mailto:ja.c.k.y.ms.c.han@gmail.com"">ja.c.k.y.ms.c.han@gmail.com</a>
<a href=""mailto:jac.k.ym.sc.ha.n@gmail.com"">jac.k.ym.sc.ha.n@gmail.com</a>
<a href=""mailto:jac.k.ymsc.ha.n@gmail.com"">jac.k.ymsc.ha.n@gmail.com</a>
<a href=""mailto:j.acky.msch.an@gmail.com"">j.acky.msch.an@gmail.com</a>
<a href=""mailto:ja.c.k.y.m.s.cha.n@gmail.com"">ja.c.k.y.m.s.cha.n@gmail.com</a>
<a href=""mailto:j.ac.ky.mschan@gmail.com"">j.ac.ky.mschan@gmail.com</a>
<a href=""mailto:ja.ck.ymsch.a.n@gmail.com"">ja.ck.ymsch.a.n@gmail.com</a>
<a href=""mailto:j.ac.kymschan@gmail.com"">j.ac.kymschan@gmail.com</a>
<a href=""mailto:j.a.cky.m.schan@gmail.com"">j.a.cky.m.schan@gmail.com</a>
<a href=""mailto:j.a.ckym.scha.n@gmail.com"">j.a.ckym.scha.n@gmail.com</a>
<a href=""mailto:ja.c.k.y.ms.c.h.an@gmail.com"">ja.c.k.y.ms.c.h.an@gmail.com</a>
<a href=""mailto:j.a.ck.ymsc.h.an@gmail.com"">j.a.ck.ymsc.h.an@gmail.com</a>
<a href=""mailto:jack.yms.c.ha.n@gmail.com"">jack.yms.c.ha.n@gmail.com</a>
<a href=""mailto:jack.ymscha.n@gmail.com"">jack.ymscha.n@gmail.com</a>
<a href=""mailto:jac.k.y.m.sc.h.a.n@gmail.com"">jac.k.y.m.sc.h.a.n@gmail.com</a>
<a href=""mailto:jac.kym.s.c.h.a.n@gmail.com"">jac.kym.s.c.h.a.n@gmail.com</a>
<a href=""mailto:jackymsc.h.a.n@gmail.com"">jackymsc.h.a.n@gmail.com</a>
<a href=""mailto:j.ac.k.ym.s.chan@gmail.com"">j.ac.k.ym.s.chan@gmail.com</a>
<a href=""mailto:j.a.c.k.y.ms.c.ha.n@gmail.com"">j.a.c.k.y.ms.c.ha.n@gmail.com</a>
<a href=""mailto:jac.k.ym.s.c.ha.n@gmail.com"">jac.k.ym.s.c.ha.n@gmail.com</a>
<a href=""mailto:j.ac.k.ymsch.a.n@gmail.com"">j.ac.k.ymsch.a.n@gmail.com</a>
<a href=""mailto:jac.k.y.ms.c.h.a.n@gmail.com"">jac.k.y.ms.c.h.a.n@gmail.com</a>
<a href=""mailto:jac.k.ym.s.c.h.an@gmail.com"">jac.k.ym.s.c.h.an@gmail.com</a>
<a href=""mailto:jac.k.ymschan@gmail.com"">jac.k.ymschan@gmail.com</a>
<a href=""mailto:jac.k.y.mschan@gmail.com"">jac.k.y.mschan@gmail.com</a>
<a href=""mailto:j.a.c.kym.schan@gmail.com"">j.a.c.kym.schan@gmail.com</a>
<a href=""mailto:jac.ky.m.sch.a.n@gmail.com"">jac.ky.m.sch.a.n@gmail.com</a>
<a href=""mailto:j.a.c.k.y.ms.cha.n@gmail.com"">j.a.c.k.y.ms.cha.n@gmail.com</a>
<a href=""mailto:jack.yms.chan@gmail.com"">jack.yms.chan@gmail.com</a>
<a href=""mailto:j.a.ck.y.m.s.cha.n@gmail.com"">j.a.ck.y.m.s.cha.n@gmail.com</a>
<a href=""mailto:ja.ckyms.cha.n@gmail.com"">ja.ckyms.cha.n@gmail.com</a>
<a href=""mailto:jac.k.yms.cha.n@gmail.com"">jac.k.yms.cha.n@gmail.com</a>
<a href=""mailto:ja.cky.m.sc.ha.n@gmail.com"">ja.cky.m.sc.ha.n@gmail.com</a>
<a href=""mailto:j.a.c.k.ym.s.c.han@gmail.com"">j.a.c.k.ym.s.c.han@gmail.com</a>
<a href=""mailto:j.a.c.k.yms.c.ha.n@gmail.com"">j.a.c.k.yms.c.ha.n@gmail.com</a>
<a href=""mailto:j.a.c.kymsc.ha.n@gmail.com"">j.a.c.kymsc.ha.n@gmail.com</a>
<a href=""mailto:j.ac.kym.sc.han@gmail.com"">j.ac.kym.sc.han@gmail.com</a>
<a href=""mailto:ja.ckym.sc.h.an@gmail.com"">ja.ckym.sc.h.an@gmail.com</a>
<a href=""mailto:j.a.c.k.y.m.s.cha.n@gmail.com"">j.a.c.k.y.m.s.cha.n@gmail.com</a>
<a href=""mailto:jac.ky.msc.han@gmail.com"">jac.ky.msc.han@gmail.com</a>
<a href=""mailto:j.acky.m.sch.a.n@gmail.com"">j.acky.m.sch.a.n@gmail.com</a>
<a href=""mailto:ja.cky.msch.an@gmail.com"">ja.cky.msch.an@gmail.com</a>
<a href=""mailto:j.ackym.s.ch.a.n@gmail.com"">j.ackym.s.ch.a.n@gmail.com</a>
<a href=""mailto:ja.cky.msch.a.n@gmail.com"">ja.cky.msch.a.n@gmail.com</a>
<a href=""mailto:j.ack.y.msc.han@gmail.com"">j.ack.y.msc.han@gmail.com</a>
<a href=""mailto:j.ac.ky.ms.ch.an@gmail.com"">j.ac.ky.ms.ch.an@gmail.com</a>
<a href=""mailto:jacky.m.sc.ha.n@gmail.com"">jacky.m.sc.ha.n@gmail.com</a>
<a href=""mailto:j.a.ck.y.m.s.c.ha.n@gmail.com"">j.a.ck.y.m.s.c.ha.n@gmail.com</a>
<a href=""mailto:jac.ky.mschan@gmail.com"">jac.ky.mschan@gmail.com</a>
<a href=""mailto:j.a.ck.y.m.s.c.han@gmail.com"">j.a.ck.y.m.s.c.han@gmail.com</a>
<a href=""mailto:ja.c.k.yms.cha.n@gmail.com"">ja.c.k.yms.cha.n@gmail.com</a>
<a href=""mailto:j.ac.ky.m.s.chan@gmail.com"">j.ac.ky.m.s.chan@gmail.com</a>
<a href=""mailto:ja.c.k.y.m.sc.han@gmail.com"">ja.c.k.y.m.sc.han@gmail.com</a>
<a href=""mailto:ja.c.k.ymsc.ha.n@gmail.com"">ja.c.k.ymsc.ha.n@gmail.com</a>
<a href=""mailto:jacky.msch.a.n@gmail.com"">jacky.msch.a.n@gmail.com</a>
<a href=""mailto:j.ack.ymsch.an@gmail.com"">j.ack.ymsch.an@gmail.com</a>
<a href=""mailto:j.ac.k.yms.ch.an@gmail.com"">j.ac.k.yms.ch.an@gmail.com</a>
<a href=""mailto:j.a.ckymsc.han@gmail.com"">j.a.ckymsc.han@gmail.com</a>
<a href=""mailto:j.acky.m.s.c.han@gmail.com"">j.acky.m.s.c.han@gmail.com</a>
<a href=""mailto:ja.ck.ymsc.han@gmail.com"">ja.ck.ymsc.han@gmail.com</a>
<a href=""mailto:jac.k.ym.sch.a.n@gmail.com"">jac.k.ym.sch.a.n@gmail.com</a>
<a href=""mailto:ja.cky.ms.chan@gmail.com"">ja.cky.ms.chan@gmail.com</a>
<a href=""mailto:jack.ym.s.cha.n@gmail.com"">jack.ym.s.cha.n@gmail.com</a>
<a href=""mailto:jac.kym.schan@gmail.com"">jac.kym.schan@gmail.com</a>
<a href=""mailto:ja.c.ky.m.schan@gmail.com"">ja.c.ky.m.schan@gmail.com</a>
<a href=""mailto:ja.ck.ymsc.h.an@gmail.com"">ja.ck.ymsc.h.an@gmail.com</a>
<a href=""mailto:j.a.cky.m.sch.a.n@gmail.com"">j.a.cky.m.sch.a.n@gmail.com</a>
<a href=""mailto:j.a.ckymsc.h.an@gmail.com"">j.a.ckymsc.h.an@gmail.com</a>
<a href=""mailto:jack.y.m.sc.h.an@gmail.com"">jack.y.m.sc.h.an@gmail.com</a>
<a href=""mailto:j.a.cky.ms.cha.n@gmail.com"">j.a.cky.ms.cha.n@gmail.com</a>
<a href=""mailto:jac.kymscha.n@gmail.com"">jac.kymscha.n@gmail.com</a>
<a href=""mailto:j.a.c.k.y.m.s.c.ha.n@gmail.com"">j.a.c.k.y.m.s.c.ha.n@gmail.com</a>
<a href=""mailto:ja.ck.y.msc.h.an@gmail.com"">ja.ck.y.msc.h.an@gmail.com</a>
<a href=""mailto:j.a.c.ky.m.s.c.han@gmail.com"">j.a.c.ky.m.s.c.han@gmail.com</a>
<a href=""mailto:j.ack.ym.schan@gmail.com"">j.ack.ym.schan@gmail.com</a>
<a href=""mailto:jac.kym.s.c.h.an@gmail.com"">jac.kym.s.c.h.an@gmail.com</a>
<a href=""mailto:j.a.c.k.y.ms.c.h.an@gmail.com"">j.a.c.k.y.ms.c.h.an@gmail.com</a>
<a href=""mailto:j.ac.k.y.m.sch.a.n@gmail.com"">j.ac.k.y.m.sch.a.n@gmail.com</a>
<a href=""mailto:j.a.cky.msc.h.a.n@gmail.com"">j.a.cky.msc.h.a.n@gmail.com</a>
<a href=""mailto:jackym.sch.a.n@gmail.com"">jackym.sch.a.n@gmail.com</a>
<a href=""mailto:j.ac.ky.ms.chan@gmail.com"">j.ac.ky.ms.chan@gmail.com</a>
<a href=""mailto:j.ac.kymsc.h.an@gmail.com"">j.ac.kymsc.h.an@gmail.com</a>
<a href=""mailto:j.a.ck.yms.c.ha.n@gmail.com"">j.a.ck.yms.c.ha.n@gmail.com</a>
<a href=""mailto:j.a.cky.mscha.n@gmail.com"">j.a.cky.mscha.n@gmail.com</a>
<a href=""mailto:j.acky.ms.chan@gmail.com"">j.acky.ms.chan@gmail.com</a>
<a href=""mailto:jac.ky.m.s.c.ha.n@gmail.com"">jac.ky.m.s.c.ha.n@gmail.com</a>
<a href=""mailto:j.ac.kyms.cha.n@gmail.com"">j.ac.kyms.cha.n@gmail.com</a>
<a href=""mailto:j.ack.y.ms.c.ha.n@gmail.com"">j.ack.y.ms.c.ha.n@gmail.com</a>
<a href=""mailto:jack.ymsc.h.a.n@gmail.com"">jack.ymsc.h.a.n@gmail.com</a>
<a href=""mailto:j.a.cky.m.sc.h.a.n@gmail.com"">j.a.cky.m.sc.h.a.n@gmail.com</a>
<a href=""mailto:ja.ckyms.chan@gmail.com"">ja.ckyms.chan@gmail.com</a>
<a href=""mailto:j.acky.m.sc.han@gmail.com"">j.acky.m.sc.han@gmail.com</a>
<a href=""mailto:j.a.c.k.y.m.s.c.h.a.n@gmail.com"">j.a.c.k.y.m.s.c.h.a.n@gmail.com</a>
<a href=""mailto:j.ac.ky.msch.a.n@gmail.com"">j.ac.ky.msch.a.n@gmail.com</a>
<a href=""mailto:j.ac.kym.sch.an@gmail.com"">j.ac.kym.sch.an@gmail.com</a>
<a href=""mailto:ja.ck.yms.cha.n@gmail.com"">ja.ck.yms.cha.n@gmail.com</a>
<a href=""mailto:ja.ckym.s.ch.an@gmail.com"">ja.ckym.s.ch.an@gmail.com</a>
<a href=""mailto:jac.kymsch.an@gmail.com"">jac.kymsch.an@gmail.com</a>
<a href=""mailto:j.ackymsc.ha.n@gmail.com"">j.ackymsc.ha.n@gmail.com</a>
<a href=""mailto:jac.k.y.msc.h.an@gmail.com"">jac.k.y.msc.h.an@gmail.com</a>
<a href=""mailto:j.ackyms.c.h.a.n@gmail.com"">j.ackyms.c.h.a.n@gmail.com</a>
<a href=""mailto:j.a.ckymsc.h.a.n@gmail.com"">j.a.ckymsc.h.a.n@gmail.com</a>
<a href=""mailto:ja.c.kym.schan@gmail.com"">ja.c.kym.schan@gmail.com</a>
<a href=""mailto:j.ack.y.mschan@gmail.com"">j.ack.y.mschan@gmail.com</a>
<a href=""mailto:j.a.c.ky.ms.chan@gmail.com"">j.a.c.ky.ms.chan@gmail.com</a>
<a href=""mailto:j.ac.ky.m.sc.han@gmail.com"">j.ac.ky.m.sc.han@gmail.com</a>
<a href=""mailto:ja.c.k.y.ms.chan@gmail.com"">ja.c.k.y.ms.chan@gmail.com</a>
<a href=""mailto:ja.ck.ym.sc.han@gmail.com"">ja.ck.ym.sc.han@gmail.com</a>
<a href=""mailto:j.a.c.k.ymscha.n@gmail.com"">j.a.c.k.ymscha.n@gmail.com</a>
<a href=""mailto:j.acky.m.s.cha.n@gmail.com"">j.acky.m.s.cha.n@gmail.com</a>
<a href=""mailto:j.ac.kyms.ch.an@gmail.com"">j.ac.kyms.ch.an@gmail.com</a>
<a href=""mailto:jack.ym.s.c.ha.n@gmail.com"">jack.ym.s.c.ha.n@gmail.com</a>
<a href=""mailto:j.a.c.k.ymsc.h.an@gmail.com"">j.a.c.k.ymsc.h.an@gmail.com</a>
<a href=""mailto:j.a.c.k.y.msc.ha.n@gmail.com"">j.a.c.k.y.msc.ha.n@gmail.com</a>
<a href=""mailto:j.acky.ms.cha.n@gmail.com"">j.acky.ms.cha.n@gmail.com</a>
<a href=""mailto:j.a.ck.y.m.sc.han@gmail.com"">j.a.ck.y.m.sc.han@gmail.com</a>
<a href=""mailto:j.a.ck.ym.sc.h.an@gmail.com"">j.a.ck.ym.sc.h.an@gmail.com</a>
<a href=""mailto:j.ac.k.ymsc.h.an@gmail.com"">j.ac.k.ymsc.h.an@gmail.com</a>
<a href=""mailto:ja.c.ky.m.sc.h.an@gmail.com"">ja.c.ky.m.sc.h.an@gmail.com</a>
<a href=""mailto:jacky.mscha.n@gmail.com"">jacky.mscha.n@gmail.com</a>
<a href=""mailto:j.a.c.ky.msc.h.an@gmail.com"">j.a.c.ky.msc.h.an@gmail.com</a>
<a href=""mailto:jac.ky.ms.ch.an@gmail.com"">jac.ky.ms.ch.an@gmail.com</a>
<a href=""mailto:jacky.ms.ch.a.n@gmail.com"">jacky.ms.ch.a.n@gmail.com</a>
<a href=""mailto:j.a.c.ky.ms.c.h.an@gmail.com"">j.a.c.ky.ms.c.h.an@gmail.com</a>
<a href=""mailto:ja.cky.msc.h.an@gmail.com"">ja.cky.msc.h.an@gmail.com</a>
<a href=""mailto:ja.cky.m.scha.n@gmail.com"">ja.cky.m.scha.n@gmail.com</a>
<a href=""mailto:j.ack.y.msc.ha.n@gmail.com"">j.ack.y.msc.ha.n@gmail.com</a>
<a href=""mailto:j.a.c.k.y.m.sc.h.a.n@gmail.com"">j.a.c.k.y.m.sc.h.a.n@gmail.com</a>
<a href=""mailto:j.a.ckyms.c.ha.n@gmail.com"">j.a.ckyms.c.ha.n@gmail.com</a>
<a href=""mailto:ja.ck.y.m.schan@gmail.com"">ja.ck.y.m.schan@gmail.com</a>
<a href=""mailto:jack.ymsc.ha.n@gmail.com"">jack.ymsc.ha.n@gmail.com</a>
<a href=""mailto:j.ackymsc.han@gmail.com"">j.ackymsc.han@gmail.com</a>
<a href=""mailto:ja.cky.mscha.n@gmail.com"">ja.cky.mscha.n@gmail.com</a>
<a href=""mailto:j.a.ck.y.m.sc.h.an@gmail.com"">j.a.ck.y.m.sc.h.an@gmail.com</a>
<a href=""mailto:j.a.c.k.ym.s.ch.a.n@gmail.com"">j.a.c.k.ym.s.ch.a.n@gmail.com</a>
<a href=""mailto:j.ac.kym.sc.h.a.n@gmail.com"">j.ac.kym.sc.h.a.n@gmail.com</a>
<a href=""mailto:ja.c.ky.msc.han@gmail.com"">ja.c.ky.msc.han@gmail.com</a>
<a href=""mailto:j.a.ck.y.ms.cha.n@gmail.com"">j.a.ck.y.ms.cha.n@gmail.com</a>
<a href=""mailto:ja.c.k.ymscha.n@gmail.com"">ja.c.k.ymscha.n@gmail.com</a>
<a href=""mailto:j.a.ckyms.c.han@gmail.com"">j.a.ckyms.c.han@gmail.com</a>
<a href=""mailto:jac.k.ym.scha.n@gmail.com"">jac.k.ym.scha.n@gmail.com</a>
<a href=""mailto:jac.k.yms.chan@gmail.com"">jac.k.yms.chan@gmail.com</a>
<a href=""mailto:j.ack.ym.sch.a.n@gmail.com"">j.ack.ym.sch.a.n@gmail.com</a>
<a href=""mailto:jac.ky.m.sc.ha.n@gmail.com"">jac.ky.m.sc.ha.n@gmail.com</a>
<a href=""mailto:ja.c.k.y.m.scha.n@gmail.com"">ja.c.k.y.m.scha.n@gmail.com</a>
<a href=""mailto:j.a.ck.y.ms.c.han@gmail.com"">j.a.ck.y.ms.c.han@gmail.com</a>
<a href=""mailto:jacky.m.s.chan@gmail.com"">jacky.m.s.chan@gmail.com</a>
<a href=""mailto:jack.ymschan@gmail.com"">jack.ymschan@gmail.com</a>
<a href=""mailto:flowersmrmichael@gmail.com"">flowersmrmichael@gmail.com</a>
<a href=""mailto:f.l.o.we.rsmr.mi.ch.a.el@gmail.com"">f.l.o.we.rsmr.mi.ch.a.el@gmail.com</a>
<a href=""mailto:flo.w.e.r.smrm.ich.ael@gmail.com"">flo.w.e.r.smrm.ich.ael@gmail.com</a>
<a href=""mailto:f.lo.wer.smr.mi.c.ha.e.l@gmail.com"">f.lo.wer.smr.mi.c.ha.e.l@gmail.com</a>
<a href=""mailto:flower.s.m.rmich.a.e.l@gmail.com"">flower.s.m.rmich.a.e.l@gmail.com</a>
<a href=""mailto:f.l.ow.e.r.smrmi.cha.e.l@gmail.com"">f.l.ow.e.r.smrmi.cha.e.l@gmail.com</a>
<a href=""mailto:f.l.ow.e.r.s.mrmi.ch.ael@gmail.com"">f.l.ow.e.r.s.mrmi.ch.ael@gmail.com</a>
<a href=""mailto:fl.o.w.e.r.smr.micha.e.l@gmail.com"">fl.o.w.e.r.smr.micha.e.l@gmail.com</a>
<a href=""mailto:fl.owersmr.mic.hael@gmail.com"">fl.owersmr.mic.hael@gmail.com</a>
<a href=""mailto:flo.w.ers.mrm.i.ch.a.e.l@gmail.com"">flo.w.ers.mrm.i.ch.a.e.l@gmail.com</a>
<a href=""mailto:f.lo.w.er.s.m.r.m.ic.h.ael@gmail.com"">f.lo.w.er.s.m.r.m.ic.h.ael@gmail.com</a>
<a href=""mailto:flow.e.r.smr.mi.cha.e.l@gmail.com"">flow.e.r.smr.mi.cha.e.l@gmail.com</a>
<a href=""mailto:flo.w.e.r.smr.m.ich.a.el@gmail.com"">flo.w.e.r.smr.m.ich.a.el@gmail.com</a>
<a href=""mailto:f.low.er.sm.rm.i.c.h.a.e.l@gmail.com"">f.low.er.sm.rm.i.c.h.a.e.l@gmail.com</a>
<a href=""mailto:f.lower.sm.rmi.chael@gmail.com"">f.lower.sm.rmi.chael@gmail.com</a>
<a href=""mailto:f.l.owe.r.sm.r.m.i.c.h.ae.l@gmail.com"">f.l.owe.r.sm.r.m.i.c.h.ae.l@gmail.com</a>
<a href=""mailto:f.lower.sm.r.m.ich.ae.l@gmail.com"">f.lower.sm.r.m.ich.ae.l@gmail.com</a>
<a href=""mailto:f.lo.wersm.r.micha.e.l@gmail.com"">f.lo.wersm.r.micha.e.l@gmail.com</a>
<a href=""mailto:fl.owers.m.r.m.ic.h.ae.l@gmail.com"">fl.owers.m.r.m.ic.h.ae.l@gmail.com</a>
<a href=""mailto:f.lo.w.e.rsmrm.ic.hae.l@gmail.com"">f.lo.w.e.rsmrm.ic.hae.l@gmail.com</a>
<a href=""mailto:f.l.ow.e.rs.m.r.mic.hae.l@gmail.com"">f.l.ow.e.rs.m.r.mic.hae.l@gmail.com</a>
<a href=""mailto:fl.ow.e.rsmr.mi.c.h.ael@gmail.com"">fl.ow.e.rsmr.mi.c.h.ael@gmail.com</a>
<a href=""mailto:f.lo.w.e.r.s.m.r.m.icha.e.l@gmail.com"">f.lo.w.e.r.s.m.r.m.icha.e.l@gmail.com</a>
<a href=""mailto:fl.ow.e.rs.mr.mi.ch.a.el@gmail.com"">fl.ow.e.rs.mr.mi.ch.a.el@gmail.com</a>
<a href=""mailto:f.l.ow.ers.mr.m.ich.a.e.l@gmail.com"">f.l.ow.ers.mr.m.ich.a.e.l@gmail.com</a>
<a href=""mailto:fl.owe.r.s.mr.mi.c.hae.l@gmail.com"">fl.owe.r.s.mr.mi.c.hae.l@gmail.com</a>
<a href=""mailto:flower.s.m.rm.i.chae.l@gmail.com"">flower.s.m.rm.i.chae.l@gmail.com</a>
<a href=""mailto:fl.o.w.e.r.s.m.rm.i.ch.ae.l@gmail.com"">fl.o.w.e.r.s.m.rm.i.ch.ae.l@gmail.com</a>
<a href=""mailto:f.low.e.r.s.m.r.m.i.c.ha.el@gmail.com"">f.low.e.r.s.m.r.m.i.c.ha.el@gmail.com</a>
<a href=""mailto:flo.w.e.rs.m.r.mi.c.ha.el@gmail.com"">flo.w.e.rs.m.r.mi.c.ha.el@gmail.com</a>
<a href=""mailto:f.low.e.r.smr.michael@gmail.com"">f.low.e.r.smr.michael@gmail.com</a>
<a href=""mailto:flow.er.s.m.r.mich.ae.l@gmail.com"">flow.er.s.m.r.mich.ae.l@gmail.com</a>
<a href=""mailto:flowe.r.s.mr.mic.ha.el@gmail.com"">flowe.r.s.mr.mic.ha.el@gmail.com</a>
<a href=""mailto:flo.w.er.s.mr.m.ich.ael@gmail.com"">flo.w.er.s.mr.m.ich.ael@gmail.com</a>
<a href=""mailto:fl.owe.rs.mrm.i.c.hae.l@gmail.com"">fl.owe.rs.mrm.i.c.hae.l@gmail.com</a>
<a href=""mailto:flo.we.rs.mrmi.c.ha.e.l@gmail.com"">flo.we.rs.mrmi.c.ha.e.l@gmail.com</a>
<a href=""mailto:fl.o.we.r.smr.mi.ch.a.e.l@gmail.com"">fl.o.we.r.smr.mi.ch.a.e.l@gmail.com</a>
<a href=""mailto:flowersmr.m.ic.hael@gmail.com"">flowersmr.m.ic.hael@gmail.com</a>
<a href=""mailto:f.l.o.we.rsmrm.i.c.h.a.el@gmail.com"">f.l.o.we.rsmrm.i.c.h.a.el@gmail.com</a>
<a href=""mailto:fl.ower.s.m.r.m.i.c.h.a.e.l@gmail.com"">fl.ower.s.m.r.m.i.c.h.a.e.l@gmail.com</a>
<a href=""mailto:flow.e.r.s.m.rmichael@gmail.com"">flow.e.r.s.m.rmichael@gmail.com</a>
<a href=""mailto:flo.w.e.r.s.m.rmi.c.hael@gmail.com"">flo.w.e.r.s.m.rmi.c.hael@gmail.com</a>
<a href=""mailto:f.lo.wer.sm.rm.i.chae.l@gmail.com"">f.lo.wer.sm.rm.i.chae.l@gmail.com</a>
<a href=""mailto:flo.w.er.smr.m.i.cha.e.l@gmail.com"">flo.w.er.smr.m.i.cha.e.l@gmail.com</a>
<a href=""mailto:fl.ow.er.sm.r.m.i.c.hae.l@gmail.com"">fl.ow.er.sm.r.m.i.c.hae.l@gmail.com</a>
<a href=""mailto:f.lo.wer.smrmi.c.h.ael@gmail.com"">f.lo.wer.smrmi.c.h.ael@gmail.com</a>
<a href=""mailto:flo.w.ersmrm.ic.ha.el@gmail.com"">flo.w.ersmrm.ic.ha.el@gmail.com</a>
<a href=""mailto:flo.wer.s.m.rm.ic.h.a.el@gmail.com"">flo.wer.s.m.rm.ic.h.a.el@gmail.com</a>
<a href=""mailto:flower.s.m.r.m.icha.el@gmail.com"">flower.s.m.r.m.icha.el@gmail.com</a>
<a href=""mailto:flo.w.e.r.sm.rm.i.c.hael@gmail.com"">flo.w.e.r.sm.rm.i.c.hael@gmail.com</a>
<a href=""mailto:fl.ow.e.r.smr.m.ic.h.a.el@gmail.com"">fl.ow.e.r.smr.m.ic.h.a.el@gmail.com</a>
<a href=""mailto:flower.sm.r.m.i.ch.a.e.l@gmail.com"">flower.sm.r.m.i.ch.a.e.l@gmail.com</a>
<a href=""mailto:f.l.o.w.ersm.rmichael@gmail.com"">f.l.o.w.ersm.rmichael@gmail.com</a>
<a href=""mailto:fl.o.wers.m.rmic.ha.e.l@gmail.com"">fl.o.wers.m.rmic.ha.e.l@gmail.com</a>
<a href=""mailto:flo.wers.mrmic.h.a.el@gmail.com"">flo.wers.mrmic.h.a.el@gmail.com</a>
<a href=""mailto:flower.s.mr.mi.cha.e.l@gmail.com"">flower.s.mr.mi.cha.e.l@gmail.com</a>
<a href=""mailto:f.lo.wers.mrmi.c.h.a.el@gmail.com"">f.lo.wers.mrmi.c.h.a.el@gmail.com</a>
<a href=""mailto:f.lower.smr.mi.chae.l@gmail.com"">f.lower.smr.mi.chae.l@gmail.com</a>
<a href=""mailto:flow.ers.m.rm.ic.h.ae.l@gmail.com"">flow.ers.m.rm.ic.h.ae.l@gmail.com</a>
<a href=""mailto:fl.o.w.e.rsm.r.mich.ae.l@gmail.com"">fl.o.w.e.rsm.r.mich.ae.l@gmail.com</a>
<a href=""mailto:fl.o.wers.mr.m.ic.h.a.el@gmail.com"">fl.o.wers.mr.m.ic.h.a.el@gmail.com</a>
<a href=""mailto:fl.owe.rs.mr.mi.c.ha.e.l@gmail.com"">fl.owe.rs.mr.mi.c.ha.e.l@gmail.com</a>
<a href=""mailto:flo.w.ers.m.r.m.ichael@gmail.com"">flo.w.ers.m.r.m.ichael@gmail.com</a>
<a href=""mailto:flo.we.r.smr.m.ic.h.a.e.l@gmail.com"">flo.we.r.smr.m.ic.h.a.e.l@gmail.com</a>
<a href=""mailto:f.l.o.wer.s.m.r.m.i.chael@gmail.com"">f.l.o.wer.s.m.r.m.i.chael@gmail.com</a>
<a href=""mailto:fl.o.w.e.rsmr.mi.ch.ae.l@gmail.com"">fl.o.w.e.rsmr.mi.ch.ae.l@gmail.com</a>
<a href=""mailto:f.lo.w.e.rs.mr.mi.c.hae.l@gmail.com"">f.lo.w.e.rs.mr.mi.c.hae.l@gmail.com</a>
<a href=""mailto:flow.er.smr.m.ich.a.e.l@gmail.com"">flow.er.smr.m.ich.a.e.l@gmail.com</a>
<a href=""mailto:f.l.owe.rsmrm.i.chae.l@gmail.com"">f.l.owe.rsmrm.i.chae.l@gmail.com</a>
<a href=""mailto:flow.e.rsmr.mi.cha.el@gmail.com"">flow.e.rsmr.mi.cha.el@gmail.com</a>
<a href=""mailto:f.l.o.we.r.sm.rmic.hae.l@gmail.com"">f.l.o.we.r.sm.rmic.hae.l@gmail.com</a>
<a href=""mailto:flo.we.r.smrmich.a.el@gmail.com"">flo.we.r.smrmich.a.el@gmail.com</a>
<a href=""mailto:fl.ow.er.smr.m.ic.h.ae.l@gmail.com"">fl.ow.er.smr.m.ic.h.ae.l@gmail.com</a>
<a href=""mailto:f.l.o.we.rs.mr.mic.hae.l@gmail.com"">f.l.o.we.rs.mr.mic.hae.l@gmail.com</a>
<a href=""mailto:fl.ow.e.rsmrmi.ch.a.e.l@gmail.com"">fl.ow.e.rsmrmi.ch.a.e.l@gmail.com</a>
<a href=""mailto:fl.o.we.rs.m.r.mi.c.h.ae.l@gmail.com"">fl.o.we.rs.m.r.mi.c.h.ae.l@gmail.com</a>
<a href=""mailto:f.low.ers.m.r.mi.ch.a.el@gmail.com"">f.low.ers.m.r.mi.ch.a.el@gmail.com</a>
<a href=""mailto:f.low.ers.mr.mic.ha.e.l@gmail.com"">f.low.ers.mr.mic.ha.e.l@gmail.com</a>
<a href=""mailto:f.l.ow.ersm.rm.i.c.h.ae.l@gmail.com"">f.l.ow.ersm.rm.i.c.h.ae.l@gmail.com</a>
<a href=""mailto:f.l.o.w.e.rs.mrm.ic.h.ae.l@gmail.com"">f.l.o.w.e.rs.mrm.ic.h.ae.l@gmail.com</a>
<a href=""mailto:fl.ow.ersmrmi.c.h.a.e.l@gmail.com"">fl.ow.ersmrmi.c.h.a.e.l@gmail.com</a>
<a href=""mailto:fl.owe.rs.mrmicha.e.l@gmail.com"">fl.owe.rs.mrmicha.e.l@gmail.com</a>
<a href=""mailto:flo.wer.s.m.r.mi.c.hae.l@gmail.com"">flo.wer.s.m.r.mi.c.hae.l@gmail.com</a>
<a href=""mailto:flower.smr.m.i.c.hael@gmail.com"">flower.smr.m.i.c.hael@gmail.com</a>
<a href=""mailto:flower.sm.rm.ic.h.ael@gmail.com"">flower.sm.rm.ic.h.ael@gmail.com</a>
<a href=""mailto:f.l.owe.rsmrmic.hae.l@gmail.com"">f.l.owe.rsmrmic.hae.l@gmail.com</a>
<a href=""mailto:flo.we.r.sm.r.mi.chae.l@gmail.com"">flo.we.r.sm.r.mi.chae.l@gmail.com</a>
<a href=""mailto:flow.ers.m.rm.i.chael@gmail.com"">flow.ers.m.rm.i.chael@gmail.com</a>
<a href=""mailto:f.l.ow.ers.m.r.m.icha.e.l@gmail.com"">f.l.ow.ers.m.r.m.icha.e.l@gmail.com</a>
<a href=""mailto:f.lowers.m.r.m.ic.h.a.e.l@gmail.com"">f.lowers.m.r.m.ic.h.a.e.l@gmail.com</a>
<a href=""mailto:fl.o.wersm.rmi.chael@gmail.com"">fl.o.wersm.rmi.chael@gmail.com</a>
<a href=""mailto:flo.we.r.smrmic.h.a.e.l@gmail.com"">flo.we.r.smrmic.h.a.e.l@gmail.com</a>
<a href=""mailto:fl.o.we.rs.m.r.michael@gmail.com"">fl.o.we.rs.m.r.michael@gmail.com</a>
<a href=""mailto:f.l.o.w.ersmr.m.ichae.l@gmail.com"">f.l.o.w.ersmr.m.ichae.l@gmail.com</a>
<a href=""mailto:fl.ower.sm.r.micha.e.l@gmail.com"">fl.ower.sm.r.micha.e.l@gmail.com</a>
<a href=""mailto:f.low.ersm.r.mi.chae.l@gmail.com"">f.low.ersm.r.mi.chae.l@gmail.com</a>
<a href=""mailto:fl.o.wersm.r.m.icha.e.l@gmail.com"">fl.o.wersm.r.m.icha.e.l@gmail.com</a>
<a href=""mailto:flo.we.r.sm.r.mi.ch.ae.l@gmail.com"">flo.we.r.sm.r.mi.ch.ae.l@gmail.com</a>
<a href=""mailto:f.l.owe.r.s.mr.m.ichael@gmail.com"">f.l.owe.r.s.mr.m.ichael@gmail.com</a>
<a href=""mailto:f.l.o.w.e.rsmr.m.i.chae.l@gmail.com"">f.l.o.w.e.rsmr.m.i.chae.l@gmail.com</a>
<a href=""mailto:fl.o.w.ersm.rm.i.chael@gmail.com"">fl.o.w.ersm.rm.i.chael@gmail.com</a>
<a href=""mailto:flo.w.e.r.s.mr.micha.el@gmail.com"">flo.w.e.r.s.mr.micha.el@gmail.com</a>
<a href=""mailto:flo.w.e.rs.m.r.mi.c.h.ael@gmail.com"">flo.w.e.rs.m.r.mi.c.h.ael@gmail.com</a>
<a href=""mailto:flo.wer.sm.rm.ic.h.a.el@gmail.com"">flo.wer.sm.rm.ic.h.a.el@gmail.com</a>
<a href=""mailto:f.low.e.rsmrmi.c.ha.el@gmail.com"">f.low.e.rsmrmi.c.ha.el@gmail.com</a>
<a href=""mailto:f.l.o.we.r.s.m.r.mi.c.h.a.e.l@gmail.com"">f.l.o.we.r.s.m.r.mi.c.h.a.e.l@gmail.com</a>
<a href=""mailto:f.lower.s.mr.m.i.c.hae.l@gmail.com"">f.lower.s.mr.m.i.c.hae.l@gmail.com</a>
<a href=""mailto:f.l.o.wer.smrm.ich.a.el@gmail.com"">f.l.o.wer.smrm.ich.a.el@gmail.com</a>
<a href=""mailto:f.l.o.we.r.sm.r.mic.hael@gmail.com"">f.l.o.we.r.sm.r.mic.hael@gmail.com</a>
<a href=""mailto:flo.w.ersmr.m.ic.hae.l@gmail.com"">flo.w.ersmr.m.ic.hae.l@gmail.com</a>
<a href=""mailto:flow.er.sm.rm.ich.ael@gmail.com"">flow.er.sm.rm.ich.ael@gmail.com</a>
<a href=""mailto:flower.s.mr.mi.c.h.ae.l@gmail.com"">flower.s.mr.mi.c.h.ae.l@gmail.com</a>
<a href=""mailto:f.l.ow.ers.m.rmi.c.ha.e.l@gmail.com"">f.l.ow.ers.m.rmi.c.ha.e.l@gmail.com</a>
<a href=""mailto:f.l.ow.er.s.mr.m.i.c.h.ae.l@gmail.com"">f.l.ow.er.s.mr.m.i.c.h.ae.l@gmail.com</a>
<a href=""mailto:flo.wers.mr.m.ic.ha.el@gmail.com"">flo.wers.mr.m.ic.ha.el@gmail.com</a>
<a href=""mailto:f.l.o.wers.mr.m.ich.ael@gmail.com"">f.l.o.wers.mr.m.ich.ael@gmail.com</a>
<a href=""mailto:f.low.e.rs.m.rmi.ch.ae.l@gmail.com"">f.low.e.rs.m.rmi.ch.ae.l@gmail.com</a>
<a href=""mailto:flow.er.sm.rm.i.cha.el@gmail.com"">flow.er.sm.rm.i.cha.el@gmail.com</a>
<a href=""mailto:f.low.ersm.r.mich.ae.l@gmail.com"">f.low.ersm.r.mich.ae.l@gmail.com</a>
<a href=""mailto:f.lower.s.m.rm.ichael@gmail.com"">f.lower.s.m.rm.ichael@gmail.com</a>
<a href=""mailto:f.l.ow.er.s.m.r.m.i.chael@gmail.com"">f.l.ow.er.s.m.r.m.i.chael@gmail.com</a>
<a href=""mailto:f.lowersmr.m.ic.h.a.el@gmail.com"">f.lowersmr.m.ic.h.a.el@gmail.com</a>
<a href=""mailto:flo.w.e.rs.mr.m.i.cha.e.l@gmail.com"">flo.w.e.rs.mr.m.i.cha.e.l@gmail.com</a>
<a href=""mailto:flow.ers.m.rmic.ha.el@gmail.com"">flow.ers.m.rmic.ha.el@gmail.com</a>
<a href=""mailto:f.lower.smr.m.i.cha.e.l@gmail.com"">f.lower.smr.m.i.cha.e.l@gmail.com</a>
<a href=""mailto:f.lo.w.ers.mr.mi.c.h.a.el@gmail.com"">f.lo.w.ers.mr.mi.c.h.a.el@gmail.com</a>
<a href=""mailto:f.lo.we.rsm.r.mi.c.ha.e.l@gmail.com"">f.lo.we.rsm.r.mi.c.ha.e.l@gmail.com</a>
<a href=""mailto:f.low.e.rs.m.rm.i.ch.ael@gmail.com"">f.low.e.rs.m.rm.i.ch.ael@gmail.com</a>
<a href=""mailto:f.lowe.r.s.m.rmi.chael@gmail.com"">f.lowe.r.s.m.rmi.chael@gmail.com</a>
<a href=""mailto:fl.ow.ers.mrmic.h.ael@gmail.com"">fl.ow.ers.mrmic.h.ael@gmail.com</a>
<a href=""mailto:fl.ow.e.r.smr.m.i.ch.ae.l@gmail.com"">fl.ow.e.r.smr.m.i.ch.ae.l@gmail.com</a>
<a href=""mailto:f.l.o.w.e.rs.mr.m.ichae.l@gmail.com"">f.l.o.w.e.rs.mr.m.ichae.l@gmail.com</a>
<a href=""mailto:f.low.e.r.s.m.rmi.cha.e.l@gmail.com"">f.low.e.r.s.m.rmi.cha.e.l@gmail.com</a>
<a href=""mailto:f.l.o.w.ersmrm.i.c.h.ael@gmail.com"">f.l.o.w.ersmrm.i.c.h.ael@gmail.com</a>
<a href=""mailto:flow.ers.mr.m.i.c.ha.e.l@gmail.com"">flow.ers.mr.m.i.c.ha.e.l@gmail.com</a>
<a href=""mailto:fl.ow.ersmr.m.i.chael@gmail.com"">fl.ow.ersmr.m.i.chael@gmail.com</a>
<a href=""mailto:f.low.er.sm.r.mi.cha.e.l@gmail.com"">f.low.er.sm.r.mi.cha.e.l@gmail.com</a>
<a href=""mailto:flo.w.e.rsm.r.m.ic.ha.el@gmail.com"">flo.w.e.rsm.r.m.ic.ha.el@gmail.com</a>
<a href=""mailto:f.l.ow.ers.m.r.mi.ch.a.el@gmail.com"">f.l.ow.ers.m.r.mi.ch.a.el@gmail.com</a>
<a href=""mailto:fl.o.wer.s.m.rmicha.e.l@gmail.com"">fl.o.wer.s.m.rmicha.e.l@gmail.com</a>
<a href=""mailto:flo.we.rsm.r.mi.c.hae.l@gmail.com"">flo.we.rsm.r.mi.c.hae.l@gmail.com</a>
<a href=""mailto:f.lo.w.e.rs.mrm.i.ch.ael@gmail.com"">f.lo.w.e.rs.mrm.i.ch.ael@gmail.com</a>
<a href=""mailto:flow.e.rs.mr.michael@gmail.com"">flow.e.rs.mr.michael@gmail.com</a>
<a href=""mailto:f.lo.w.ers.m.rmi.c.hael@gmail.com"">f.lo.w.ers.m.rmi.c.hael@gmail.com</a>
<a href=""mailto:fl.o.w.e.rsmrmic.hael@gmail.com"">fl.o.w.e.rsmrmic.hael@gmail.com</a>
<a href=""mailto:f.lo.w.e.rs.m.r.mi.c.h.ael@gmail.com"">f.lo.w.e.rs.m.r.mi.c.h.ael@gmail.com</a>
<a href=""mailto:flowe.r.s.mrmi.chae.l@gmail.com"">flowe.r.s.mrmi.chae.l@gmail.com</a>
<a href=""mailto:flo.we.r.s.mrmi.c.ha.e.l@gmail.com"">flo.we.r.s.mrmi.c.ha.e.l@gmail.com</a>
<a href=""mailto:flo.w.e.rs.mr.mi.c.ha.e.l@gmail.com"">flo.w.e.rs.mr.mi.c.ha.e.l@gmail.com</a>
<a href=""mailto:flow.e.rsmr.m.ich.a.e.l@gmail.com"">flow.e.rsmr.m.ich.a.e.l@gmail.com</a>
<a href=""mailto:fl.o.wersmr.m.ic.ha.el@gmail.com"">fl.o.wersmr.m.ic.ha.el@gmail.com</a>
<a href=""mailto:f.l.o.we.rsm.r.mic.hael@gmail.com"">f.l.o.we.rsm.r.mic.hael@gmail.com</a>
<a href=""mailto:f.l.o.w.er.s.mr.m.ichae.l@gmail.com"">f.l.o.w.er.s.mr.m.ichae.l@gmail.com</a>
<a href=""mailto:fl.o.we.rs.mr.mi.cha.e.l@gmail.com"">fl.o.we.rs.mr.mi.cha.e.l@gmail.com</a>
<a href=""mailto:f.lowersm.rmi.c.ha.el@gmail.com"">f.lowersm.rmi.c.ha.el@gmail.com</a>
<a href=""mailto:fl.owers.mrm.i.chael@gmail.com"">fl.owers.mrm.i.chael@gmail.com</a>
<a href=""mailto:f.low.e.rsmrm.ichae.l@gmail.com"">f.low.e.rsmrm.ichae.l@gmail.com</a>
<a href=""mailto:f.l.o.w.er.sm.rm.i.ch.a.e.l@gmail.com"">f.l.o.w.er.sm.rm.i.ch.a.e.l@gmail.com</a>
<a href=""mailto:flow.ers.m.rm.i.c.hae.l@gmail.com"">flow.ers.m.rm.i.c.hae.l@gmail.com</a>
<a href=""mailto:flo.wersmr.mi.ch.ae.l@gmail.com"">flo.wersmr.mi.ch.ae.l@gmail.com</a>
<a href=""mailto:f.l.owers.mrmi.chael@gmail.com"">f.l.owers.mrmi.chael@gmail.com</a>
<a href=""mailto:fl.o.wer.smrmic.h.a.e.l@gmail.com"">fl.o.wer.smrmic.h.a.e.l@gmail.com</a>
<a href=""mailto:f.l.owersm.rm.ich.a.e.l@gmail.com"">f.l.owersm.rm.ich.a.e.l@gmail.com</a>
<a href=""mailto:fl.o.w.er.s.m.rm.i.c.ha.e.l@gmail.com"">fl.o.w.er.s.m.rm.i.c.ha.e.l@gmail.com</a>
<a href=""mailto:f.lo.w.e.r.s.mrm.ic.h.ael@gmail.com"">f.lo.w.e.r.s.mrm.ic.h.ael@gmail.com</a>
<a href=""mailto:fl.o.wer.sm.rm.ic.h.a.el@gmail.com"">fl.o.wer.sm.rm.ic.h.a.el@gmail.com</a>
<a href=""mailto:f.lo.we.rsmr.m.ic.h.ael@gmail.com"">f.lo.we.rsmr.m.ic.h.ael@gmail.com</a>
<a href=""mailto:fl.ow.er.sm.rm.ic.h.ael@gmail.com"">fl.ow.er.sm.rm.ic.h.ael@gmail.com</a>
<a href=""mailto:f.lo.wers.mr.mich.ael@gmail.com"">f.lo.wers.mr.mich.ael@gmail.com</a>
<a href=""mailto:f.lo.we.r.s.m.r.mic.h.a.el@gmail.com"">f.lo.we.r.s.m.r.mic.h.a.el@gmail.com</a>
<a href=""mailto:f.low.er.s.m.r.mi.c.h.ael@gmail.com"">f.low.er.s.m.r.mi.c.h.ael@gmail.com</a>
<a href=""mailto:f.lower.s.m.r.mi.c.h.ael@gmail.com"">f.lower.s.m.r.mi.c.h.ael@gmail.com</a>
<a href=""mailto:fl.owers.mrm.i.c.h.ae.l@gmail.com"">fl.owers.mrm.i.c.h.ae.l@gmail.com</a>
<a href=""mailto:flo.w.e.r.smrmic.ha.el@gmail.com"">flo.w.e.r.smrmic.ha.el@gmail.com</a>
<a href=""mailto:flow.er.s.mrm.ichae.l@gmail.com"">flow.er.s.mrm.ichae.l@gmail.com</a>
<a href=""mailto:fl.ow.e.rsm.rmic.hae.l@gmail.com"">fl.ow.e.rsm.rmic.hae.l@gmail.com</a>
<a href=""mailto:f.lo.w.e.rsm.r.mic.ha.e.l@gmail.com"">f.lo.w.e.rsm.r.mic.ha.e.l@gmail.com</a>
<a href=""mailto:flo.wer.sm.r.m.ic.hael@gmail.com"">flo.wer.sm.r.m.ic.hael@gmail.com</a>
<a href=""mailto:f.lowe.r.s.mr.mich.ael@gmail.com"">f.lowe.r.s.mr.mich.ael@gmail.com</a>
<a href=""mailto:flo.we.rs.mr.mi.c.ha.el@gmail.com"">flo.we.rs.mr.mi.c.ha.el@gmail.com</a>
<a href=""mailto:f.l.ow.er.sm.r.mi.cha.e.l@gmail.com"">f.l.ow.er.sm.r.mi.cha.e.l@gmail.com</a>
<a href=""mailto:fl.o.we.rsmrmich.a.e.l@gmail.com"">fl.o.we.rsmrmich.a.e.l@gmail.com</a>
<a href=""mailto:f.lo.wersm.r.m.ich.a.e.l@gmail.com"">f.lo.wersm.r.m.ich.a.e.l@gmail.com</a>
<a href=""mailto:f.l.o.w.er.smrmi.chae.l@gmail.com"">f.l.o.w.er.smrmi.chae.l@gmail.com</a>
<a href=""mailto:f.l.o.wer.sm.rm.ic.hael@gmail.com"">f.l.o.wer.sm.rm.ic.hael@gmail.com</a>
<a href=""mailto:f.l.o.w.ers.m.rmi.ch.a.el@gmail.com"">f.l.o.w.ers.m.rmi.ch.a.el@gmail.com</a>
<a href=""mailto:fl.owe.r.sm.r.mic.ha.e.l@gmail.com"">fl.owe.r.sm.r.mic.ha.e.l@gmail.com</a>
<a href=""mailto:flow.e.r.s.m.r.michae.l@gmail.com"">flow.e.r.s.m.r.michae.l@gmail.com</a>
<a href=""mailto:flow.e.r.sm.rm.ic.hael@gmail.com"">flow.e.r.sm.rm.ic.hael@gmail.com</a>
<a href=""mailto:f.lowers.mrm.ic.h.ael@gmail.com"">f.lowers.mrm.ic.h.ael@gmail.com</a>
<a href=""mailto:f.lo.w.ersmrm.ichae.l@gmail.com"">f.lo.w.ersmrm.ichae.l@gmail.com</a>
<a href=""mailto:f.l.o.w.e.rsmrm.ic.hael@gmail.com"">f.l.o.w.e.rsmrm.ic.hael@gmail.com</a>
<a href=""mailto:flower.s.m.r.mic.h.a.el@gmail.com"">flower.s.m.r.mic.h.a.el@gmail.com</a>
<a href=""mailto:fl.ow.e.r.s.m.r.mi.chae.l@gmail.com"">fl.ow.e.r.s.m.r.mi.chae.l@gmail.com</a>
<a href=""mailto:f.l.o.w.e.rs.m.r.mic.h.a.el@gmail.com"">f.l.o.w.e.rs.m.r.mic.h.a.el@gmail.com</a>
<a href=""mailto:f.l.o.wer.smr.mi.ch.a.el@gmail.com"">f.l.o.wer.smr.mi.ch.a.el@gmail.com</a>
<a href=""mailto:f.l.o.wer.smrmich.a.e.l@gmail.com"">f.l.o.wer.smrmich.a.e.l@gmail.com</a>
<a href=""mailto:fl.o.wer.smr.mich.a.e.l@gmail.com"">fl.o.wer.smr.mich.a.e.l@gmail.com</a>
<a href=""mailto:flo.wer.smrm.i.c.h.a.e.l@gmail.com"">flo.wer.smrm.i.c.h.a.e.l@gmail.com</a>
<a href=""mailto:fl.owe.rsm.r.m.i.ch.a.e.l@gmail.com"">fl.owe.rsm.r.m.i.ch.a.e.l@gmail.com</a>
<a href=""mailto:f.l.o.wer.s.mrmich.a.e.l@gmail.com"">f.l.o.wer.s.mrmich.a.e.l@gmail.com</a>
<a href=""mailto:peteralexandra021@gmail.com"">peteralexandra021@gmail.com</a>
<a href=""mailto:p.e.t.e.ral.exand.r.a02.1@gmail.com"">p.e.t.e.ral.exand.r.a02.1@gmail.com</a>
<a href=""mailto:p.e.t.eral.ex.a.nd.r.a.0.2.1@gmail.com"">p.e.t.eral.ex.a.nd.r.a.0.2.1@gmail.com</a>
<a href=""mailto:pet.e.r.al.exa.n.dra02.1@gmail.com"">pet.e.r.al.exa.n.dra02.1@gmail.com</a>
<a href=""mailto:p.ete.r.a.l.e.xa.n.d.ra.02.1@gmail.com"">p.ete.r.a.l.e.xa.n.d.ra.02.1@gmail.com</a>
<a href=""mailto:pe.te.ralexandra02.1@gmail.com"">pe.te.ralexandra02.1@gmail.com</a>
<a href=""mailto:p.etera.l.ex.a.n.dra021@gmail.com"">p.etera.l.ex.a.n.dra021@gmail.com</a>
<a href=""mailto:pe.t.e.rale.xan.dra.0.21@gmail.com"">pe.t.e.rale.xan.dra.0.21@gmail.com</a>
<a href=""mailto:p.e.t.er.a.le.x.and.ra021@gmail.com"">p.e.t.er.a.le.x.and.ra021@gmail.com</a>
<a href=""mailto:pete.r.a.le.x.andra0.21@gmail.com"">pete.r.a.le.x.andra0.21@gmail.com</a>
<a href=""mailto:pe.te.ralex.andra0.2.1@gmail.com"">pe.te.ralex.andra0.2.1@gmail.com</a>
<a href=""mailto:pe.tera.l.exandr.a0.21@gmail.com"">pe.tera.l.exandr.a0.21@gmail.com</a>
<a href=""mailto:p.e.te.r.al.e.xa.n.dra.02.1@gmail.com"">p.e.te.r.al.e.xa.n.dra.02.1@gmail.com</a>
<a href=""mailto:pe.t.e.r.a.lex.an.d.ra.0.2.1@gmail.com"">pe.t.e.r.a.lex.an.d.ra.0.2.1@gmail.com</a>
<a href=""mailto:pe.t.e.r.a.lex.a.n.d.r.a.021@gmail.com"">pe.t.e.r.a.lex.a.n.d.r.a.021@gmail.com</a>
<a href=""mailto:pet.er.a.lex.a.ndra.02.1@gmail.com"">pet.er.a.lex.a.ndra.02.1@gmail.com</a>
<a href=""mailto:pe.t.e.ra.le.x.a.ndr.a0.21@gmail.com"">pe.t.e.ra.le.x.a.ndr.a0.21@gmail.com</a>
<a href=""mailto:pete.ral.exa.nd.ra0.21@gmail.com"">pete.ral.exa.nd.ra0.21@gmail.com</a>
<a href=""mailto:pe.te.r.alexa.n.d.ra.02.1@gmail.com"">pe.te.r.alexa.n.d.ra.02.1@gmail.com</a>
<a href=""mailto:p.et.e.r.a.le.x.a.n.dra.021@gmail.com"">p.et.e.r.a.le.x.a.n.dra.021@gmail.com</a>
<a href=""mailto:p.et.e.r.al.ex.a.nd.r.a.0.21@gmail.com"">p.et.e.r.al.ex.a.nd.r.a.0.21@gmail.com</a>
<a href=""mailto:pete.ra.lexan.d.ra02.1@gmail.com"">pete.ra.lexan.d.ra02.1@gmail.com</a>
<a href=""mailto:pete.ral.ex.an.d.ra0.2.1@gmail.com"">pete.ral.ex.an.d.ra0.2.1@gmail.com</a>
<a href=""mailto:peteralexa.nd.r.a021@gmail.com"">peteralexa.nd.r.a021@gmail.com</a>
<a href=""mailto:pe.t.e.r.ale.x.a.nd.ra.021@gmail.com"">pe.t.e.r.ale.x.a.nd.ra.021@gmail.com</a>
<a href=""mailto:p.e.tera.l.ex.and.ra.021@gmail.com"">p.e.tera.l.ex.and.ra.021@gmail.com</a>
<a href=""mailto:pe.te.ra.l.exandra.021@gmail.com"">pe.te.ra.l.exandra.021@gmail.com</a>
<a href=""mailto:pet.e.r.al.exa.nd.ra.02.1@gmail.com"">pet.e.r.al.exa.nd.ra.02.1@gmail.com</a>
<a href=""mailto:pete.r.a.l.e.xan.d.r.a.02.1@gmail.com"">pete.r.a.l.e.xan.d.r.a.02.1@gmail.com</a>
<a href=""mailto:peter.ale.x.and.ra021@gmail.com"">peter.ale.x.and.ra021@gmail.com</a>
<a href=""mailto:p.e.t.e.ra.l.e.xandr.a0.2.1@gmail.com"">p.e.t.e.ra.l.e.xandr.a0.2.1@gmail.com</a>
<a href=""mailto:pe.te.ra.l.e.x.an.dr.a.02.1@gmail.com"">pe.te.ra.l.e.x.an.dr.a.02.1@gmail.com</a>
<a href=""mailto:pete.r.al.e.xa.nd.r.a0.2.1@gmail.com"">pete.r.al.e.xa.nd.r.a0.2.1@gmail.com</a>
<a href=""mailto:pe.te.ral.e.xan.dr.a02.1@gmail.com"">pe.te.ral.e.xan.dr.a02.1@gmail.com</a>
<a href=""mailto:pe.t.e.r.al.exand.ra.0.21@gmail.com"">pe.t.e.r.al.exand.ra.0.21@gmail.com</a>
<a href=""mailto:pet.e.r.a.lexan.dra0.21@gmail.com"">pet.e.r.a.lexan.dra0.21@gmail.com</a>
<a href=""mailto:pe.t.e.ral.e.x.a.n.d.r.a02.1@gmail.com"">pe.t.e.ral.e.x.a.n.d.r.a02.1@gmail.com</a>
<a href=""mailto:p.etera.l.ex.an.d.ra0.21@gmail.com"">p.etera.l.ex.an.d.ra0.21@gmail.com</a>
<a href=""mailto:p.e.tera.l.ex.a.nd.r.a.021@gmail.com"">p.e.tera.l.ex.a.nd.r.a.021@gmail.com</a>
<a href=""mailto:pe.ter.al.e.xan.dr.a.0.21@gmail.com"">pe.ter.al.e.xan.dr.a.0.21@gmail.com</a>
<a href=""mailto:peter.al.exan.dr.a.02.1@gmail.com"">peter.al.exan.dr.a.02.1@gmail.com</a>
<a href=""mailto:p.ete.r.a.lex.a.nd.ra0.2.1@gmail.com"">p.ete.r.a.lex.a.nd.ra0.2.1@gmail.com</a>
<a href=""mailto:p.e.te.ra.le.x.a.n.dra021@gmail.com"">p.e.te.ra.le.x.a.n.dra021@gmail.com</a>
<a href=""mailto:pe.t.e.r.al.e.x.a.nd.ra.0.2.1@gmail.com"">pe.t.e.r.al.e.x.a.nd.ra.0.2.1@gmail.com</a>
<a href=""mailto:p.ete.r.a.l.e.xandra0.21@gmail.com"">p.ete.r.a.l.e.xandra0.21@gmail.com</a>
<a href=""mailto:pete.ral.e.xa.n.dra.021@gmail.com"">pete.ral.e.xa.n.dra.021@gmail.com</a>
<a href=""mailto:pe.t.eralexa.ndr.a0.21@gmail.com"">pe.t.eralexa.ndr.a0.21@gmail.com</a>
<a href=""mailto:p.e.te.ralex.and.ra021@gmail.com"">p.e.te.ralex.and.ra021@gmail.com</a>
<a href=""mailto:pe.tera.lex.an.dra0.2.1@gmail.com"">pe.tera.lex.an.dra0.2.1@gmail.com</a>
<a href=""mailto:p.e.t.e.ra.le.xand.r.a021@gmail.com"">p.e.t.e.ra.le.xand.r.a021@gmail.com</a>
<a href=""mailto:pete.r.ale.x.and.ra.021@gmail.com"">pete.r.ale.x.and.ra.021@gmail.com</a>
<a href=""mailto:p.et.er.al.e.xan.d.ra.0.2.1@gmail.com"">p.et.er.al.e.xan.d.ra.0.2.1@gmail.com</a>
<a href=""mailto:peter.al.e.xand.ra.0.21@gmail.com"">peter.al.e.xand.ra.0.21@gmail.com</a>
<a href=""mailto:p.e.ter.a.lexandr.a0.21@gmail.com"">p.e.ter.a.lexandr.a0.21@gmail.com</a>
<a href=""mailto:pe.te.ral.exa.n.d.r.a0.21@gmail.com"">pe.te.ral.exa.n.d.r.a0.21@gmail.com</a>
<a href=""mailto:p.e.t.eral.ex.and.ra.02.1@gmail.com"">p.e.t.eral.ex.and.ra.02.1@gmail.com</a>
<a href=""mailto:pete.ral.exand.ra.02.1@gmail.com"">pete.ral.exand.ra.02.1@gmail.com</a>
<a href=""mailto:pe.t.er.a.l.e.x.an.d.r.a02.1@gmail.com"">pe.t.er.a.l.e.x.an.d.r.a02.1@gmail.com</a>
<a href=""mailto:pet.e.ra.l.exa.n.dr.a021@gmail.com"">pet.e.ra.l.exa.n.dr.a021@gmail.com</a>
<a href=""mailto:pe.teralex.an.dr.a0.21@gmail.com"">pe.teralex.an.dr.a0.21@gmail.com</a>
<a href=""mailto:p.et.era.lexa.n.d.r.a.021@gmail.com"">p.et.era.lexa.n.d.r.a.021@gmail.com</a>
<a href=""mailto:p.et.er.ale.x.an.d.r.a0.2.1@gmail.com"">p.et.er.ale.x.an.d.r.a0.2.1@gmail.com</a>
<a href=""mailto:pete.r.a.l.ex.an.d.r.a0.2.1@gmail.com"">pete.r.a.l.ex.an.d.r.a0.2.1@gmail.com</a>
<a href=""mailto:p.ete.ra.le.xan.d.r.a021@gmail.com"">p.ete.ra.le.xan.d.r.a021@gmail.com</a>
<a href=""mailto:pe.ter.a.l.e.xa.n.dr.a.02.1@gmail.com"">pe.ter.a.l.e.xa.n.dr.a.02.1@gmail.com</a>
<a href=""mailto:pe.t.er.a.lex.a.ndr.a.02.1@gmail.com"">pe.t.er.a.lex.a.ndr.a.02.1@gmail.com</a>
<a href=""mailto:p.e.t.era.l.ex.and.ra.02.1@gmail.com"">p.e.t.era.l.ex.and.ra.02.1@gmail.com</a>
<a href=""mailto:p.e.ter.a.l.e.xan.d.r.a.02.1@gmail.com"">p.e.ter.a.l.e.xan.d.r.a.02.1@gmail.com</a>
<a href=""mailto:p.e.te.ral.exa.n.dr.a.02.1@gmail.com"">p.e.te.ral.exa.n.dr.a.02.1@gmail.com</a>
<a href=""mailto:p.e.t.er.ale.xa.nd.r.a.02.1@gmail.com"">p.e.t.er.ale.xa.nd.r.a.02.1@gmail.com</a>
<a href=""mailto:pe.ter.a.le.x.a.n.dr.a.021@gmail.com"">pe.ter.a.le.x.a.n.dr.a.021@gmail.com</a>
<a href=""mailto:p.e.teral.e.x.a.nd.ra.021@gmail.com"">p.e.teral.e.x.a.nd.ra.021@gmail.com</a>
<a href=""mailto:pe.t.e.ral.ex.an.dra02.1@gmail.com"">pe.t.e.ral.ex.an.dra02.1@gmail.com</a>
<a href=""mailto:p.e.t.e.ral.e.x.an.d.r.a.021@gmail.com"">p.e.t.e.ral.e.x.an.d.r.a.021@gmail.com</a>
<a href=""mailto:pe.t.eralex.a.ndra021@gmail.com"">pe.t.eralex.a.ndra021@gmail.com</a>
<a href=""mailto:p.e.terale.xan.dr.a0.2.1@gmail.com"">p.e.terale.xan.dr.a0.2.1@gmail.com</a>
<a href=""mailto:pet.e.r.alex.an.d.r.a.02.1@gmail.com"">pet.e.r.alex.an.d.r.a.02.1@gmail.com</a>
<a href=""mailto:pet.er.al.e.x.and.r.a.021@gmail.com"">pet.er.al.e.x.and.r.a.021@gmail.com</a>
<a href=""mailto:p.e.te.ralexa.n.dra.02.1@gmail.com"">p.e.te.ralexa.n.dra.02.1@gmail.com</a>
<a href=""mailto:pe.t.eral.e.x.an.dra0.21@gmail.com"">pe.t.eral.e.x.an.dra0.21@gmail.com</a>
<a href=""mailto:p.e.tera.l.ex.a.nd.r.a.0.2.1@gmail.com"">p.e.tera.l.ex.a.nd.r.a.0.2.1@gmail.com</a>
<a href=""mailto:petera.lexa.n.dra02.1@gmail.com"">petera.lexa.n.dra02.1@gmail.com</a>
<a href=""mailto:pe.teral.exa.n.d.ra0.2.1@gmail.com"">pe.teral.exa.n.d.ra0.2.1@gmail.com</a>
<a href=""mailto:pe.terale.x.a.n.d.r.a.0.2.1@gmail.com"">pe.terale.x.a.n.d.r.a.0.2.1@gmail.com</a>
<a href=""mailto:pe.t.e.ra.l.e.x.a.n.d.r.a0.2.1@gmail.com"">pe.t.e.ra.l.e.x.a.n.d.r.a0.2.1@gmail.com</a>
<a href=""mailto:petera.lex.a.n.d.r.a021@gmail.com"">petera.lex.a.n.d.r.a021@gmail.com</a>
<a href=""mailto:pe.t.er.al.e.x.an.d.r.a0.2.1@gmail.com"">pe.t.er.al.e.x.an.d.r.a0.2.1@gmail.com</a>
<a href=""mailto:pe.t.e.ra.l.e.xan.dr.a021@gmail.com"">pe.t.e.ra.l.e.xan.dr.a021@gmail.com</a>
<a href=""mailto:pe.t.er.al.exa.n.d.r.a02.1@gmail.com"">pe.t.er.al.exa.n.d.r.a02.1@gmail.com</a>
<a href=""mailto:p.ete.r.ale.x.andra02.1@gmail.com"">p.ete.r.ale.x.andra02.1@gmail.com</a>
<a href=""mailto:pete.ral.exand.r.a.0.21@gmail.com"">pete.ral.exand.r.a.0.21@gmail.com</a>
<a href=""mailto:p.e.t.e.r.al.ex.an.d.ra.0.21@gmail.com"">p.e.t.e.r.al.ex.an.d.ra.0.21@gmail.com</a>
<a href=""mailto:p.eter.alexand.ra.02.1@gmail.com"">p.eter.alexand.ra.02.1@gmail.com</a>
<a href=""mailto:p.et.er.a.l.e.x.and.r.a.021@gmail.com"">p.et.er.a.l.e.x.and.r.a.021@gmail.com</a>
<a href=""mailto:p.e.t.e.ral.exand.ra0.2.1@gmail.com"">p.e.t.e.ral.exand.ra0.2.1@gmail.com</a>
<a href=""mailto:pe.ter.a.l.exa.n.dr.a021@gmail.com"">pe.ter.a.l.exa.n.dr.a021@gmail.com</a>
<a href=""mailto:p.e.tera.le.x.and.ra.021@gmail.com"">p.e.tera.le.x.and.ra.021@gmail.com</a>
<a href=""mailto:p.et.e.ral.e.x.andr.a.02.1@gmail.com"">p.et.e.ral.e.x.andr.a.02.1@gmail.com</a>
<a href=""mailto:pe.te.r.al.e.x.and.ra021@gmail.com"">pe.te.r.al.e.x.and.ra021@gmail.com</a>
<a href=""mailto:pete.r.a.l.exandr.a.0.21@gmail.com"">pete.r.a.l.exandr.a.0.21@gmail.com</a>
<a href=""mailto:p.e.t.erale.xa.n.dra.021@gmail.com"">p.e.t.erale.xa.n.dra.021@gmail.com</a>
<a href=""mailto:peter.a.l.exan.dra0.21@gmail.com"">peter.a.l.exan.dra0.21@gmail.com</a>
<a href=""mailto:p.e.t.era.l.exa.n.d.ra0.2.1@gmail.com"">p.e.t.era.l.exa.n.d.ra0.2.1@gmail.com</a>
<a href=""mailto:p.eteral.e.xa.nd.r.a.02.1@gmail.com"">p.eteral.e.xa.nd.r.a.02.1@gmail.com</a>
<a href=""mailto:p.ete.ra.le.xa.n.d.ra.0.2.1@gmail.com"">p.ete.ra.le.xa.n.d.ra.0.2.1@gmail.com</a>
<a href=""mailto:pe.t.e.ra.lex.and.ra0.21@gmail.com"">pe.t.e.ra.lex.and.ra0.21@gmail.com</a>
<a href=""mailto:p.ete.ralexa.n.dr.a0.2.1@gmail.com"">p.ete.ralexa.n.dr.a0.2.1@gmail.com</a>
<a href=""mailto:pe.te.ra.l.e.x.andra.0.2.1@gmail.com"">pe.te.ra.l.e.x.andra.0.2.1@gmail.com</a>
<a href=""mailto:p.e.t.er.a.le.xa.n.dr.a0.21@gmail.com"">p.e.t.er.a.le.xa.n.dr.a0.21@gmail.com</a>
<a href=""mailto:p.e.ter.al.exa.ndr.a0.21@gmail.com"">p.e.ter.al.exa.ndr.a0.21@gmail.com</a>
<a href=""mailto:p.etera.l.e.x.a.ndra.021@gmail.com"">p.etera.l.e.x.a.ndra.021@gmail.com</a>
<a href=""mailto:pe.ter.a.l.exa.n.d.r.a.021@gmail.com"">pe.ter.a.l.exa.n.d.r.a.021@gmail.com</a>
<a href=""mailto:pe.t.er.a.l.ex.an.d.r.a.02.1@gmail.com"">pe.t.er.a.l.ex.an.d.r.a.02.1@gmail.com</a>
<a href=""mailto:pe.t.era.le.x.a.n.dr.a0.2.1@gmail.com"">pe.t.era.le.x.a.n.dr.a0.2.1@gmail.com</a>
<a href=""mailto:p.e.te.rale.x.and.r.a.0.21@gmail.com"">p.e.te.rale.x.and.r.a.0.21@gmail.com</a>
<a href=""mailto:p.e.ter.alex.a.n.dr.a.0.21@gmail.com"">p.e.ter.alex.a.n.dr.a.0.21@gmail.com</a>
<a href=""mailto:p.e.t.e.rale.x.and.r.a.0.21@gmail.com"">p.e.t.e.rale.x.and.r.a.0.21@gmail.com</a>
<a href=""mailto:p.e.t.eralexa.n.d.ra.0.21@gmail.com"">p.e.t.eralexa.n.d.ra.0.21@gmail.com</a>
<a href=""mailto:pe.t.er.a.l.e.xand.ra021@gmail.com"">pe.t.er.a.l.e.xand.ra021@gmail.com</a>
<a href=""mailto:pe.tera.l.e.xand.r.a021@gmail.com"">pe.tera.l.e.xand.r.a021@gmail.com</a>
<a href=""mailto:pe.te.ral.e.x.andra021@gmail.com"">pe.te.ral.e.x.andra021@gmail.com</a>
<a href=""mailto:p.eterale.x.an.d.ra.0.21@gmail.com"">p.eterale.x.an.d.ra.0.21@gmail.com</a>
<a href=""mailto:pe.teralexan.dra.02.1@gmail.com"">pe.teralexan.dra.02.1@gmail.com</a>
<a href=""mailto:p.et.e.ra.lexa.n.d.r.a.0.2.1@gmail.com"">p.et.e.ra.lexa.n.d.r.a.0.2.1@gmail.com</a>
<a href=""mailto:p.et.e.r.a.lex.an.d.r.a.02.1@gmail.com"">p.et.e.r.a.lex.an.d.r.a.02.1@gmail.com</a>
<a href=""mailto:pet.e.ral.e.xandra.021@gmail.com"">pet.e.ral.e.xandra.021@gmail.com</a>
<a href=""mailto:p.e.ter.a.le.x.a.n.dr.a0.21@gmail.com"">p.e.ter.a.le.x.a.n.dr.a0.21@gmail.com</a>
<a href=""mailto:pe.t.era.l.exand.ra.021@gmail.com"">pe.t.era.l.exand.ra.021@gmail.com</a>
<a href=""mailto:pe.ter.al.ex.a.n.dra.021@gmail.com"">pe.ter.al.ex.a.n.dra.021@gmail.com</a>
<a href=""mailto:p.e.te.ra.lex.an.dr.a.0.2.1@gmail.com"">p.e.te.ra.lex.an.dr.a.0.2.1@gmail.com</a>
<a href=""mailto:pete.r.a.lex.a.n.d.r.a02.1@gmail.com"">pete.r.a.lex.a.n.d.r.a02.1@gmail.com</a>
<a href=""mailto:p.e.te.r.alexa.n.dra.021@gmail.com"">p.e.te.r.alexa.n.dra.021@gmail.com</a>
<a href=""mailto:pe.te.rale.xan.d.r.a.02.1@gmail.com"">pe.te.rale.xan.d.r.a.02.1@gmail.com</a>
<a href=""mailto:pet.e.r.al.exandr.a.02.1@gmail.com"">pet.e.r.al.exandr.a.02.1@gmail.com</a>
<a href=""mailto:pe.te.ra.lex.an.d.r.a.0.21@gmail.com"">pe.te.ra.lex.an.d.r.a.0.21@gmail.com</a>
<a href=""mailto:pet.e.r.al.e.x.andr.a.02.1@gmail.com"">pet.e.r.al.e.x.andr.a.02.1@gmail.com</a>
<a href=""mailto:p.et.e.r.a.l.exa.n.dra.02.1@gmail.com"">p.et.e.r.a.l.exa.n.dra.02.1@gmail.com</a>
<a href=""mailto:peter.alex.andr.a.0.21@gmail.com"">peter.alex.andr.a.0.21@gmail.com</a>
<a href=""mailto:pe.te.ra.le.x.an.d.r.a0.21@gmail.com"">pe.te.ra.le.x.an.d.r.a0.21@gmail.com</a>
<a href=""mailto:p.e.ter.ale.x.a.nd.ra0.21@gmail.com"">p.e.ter.ale.x.a.nd.ra0.21@gmail.com</a>
<a href=""mailto:p.e.te.r.a.le.xan.dra.021@gmail.com"">p.e.te.r.a.le.xan.dra.021@gmail.com</a>
<a href=""mailto:p.ete.r.ale.x.a.ndra021@gmail.com"">p.ete.r.ale.x.a.ndra021@gmail.com</a>
<a href=""mailto:pete.r.al.ex.a.n.d.ra021@gmail.com"">pete.r.al.ex.a.n.d.ra021@gmail.com</a>
<a href=""mailto:pet.e.r.a.le.x.a.n.d.r.a.0.21@gmail.com"">pet.e.r.a.le.x.a.n.d.r.a.0.21@gmail.com</a>
<a href=""mailto:p.et.e.r.ale.x.andr.a.0.2.1@gmail.com"">p.et.e.r.ale.x.andr.a.0.2.1@gmail.com</a>
<a href=""mailto:p.et.e.r.al.e.x.a.nd.ra.02.1@gmail.com"">p.et.e.r.al.e.x.a.nd.ra.02.1@gmail.com</a>
<a href=""mailto:pe.teral.e.xa.n.dra.02.1@gmail.com"">pe.teral.e.xa.n.dra.02.1@gmail.com</a>
<a href=""mailto:pet.e.ralex.a.nd.r.a0.21@gmail.com"">pet.e.ralex.a.nd.r.a0.21@gmail.com</a>
<a href=""mailto:p.ete.r.a.lex.an.d.ra.02.1@gmail.com"">p.ete.r.a.lex.an.d.ra.02.1@gmail.com</a>
<a href=""mailto:pet.e.ra.le.xan.d.ra021@gmail.com"">pet.e.ra.le.xan.d.ra021@gmail.com</a>
<a href=""mailto:pete.r.a.le.x.and.ra021@gmail.com"">pete.r.a.le.x.and.ra021@gmail.com</a>
<a href=""mailto:p.e.te.ra.le.xandra0.21@gmail.com"">p.e.te.ra.le.xandra0.21@gmail.com</a>
<a href=""mailto:pete.ra.le.xa.ndr.a.021@gmail.com"">pete.ra.le.xa.ndr.a.021@gmail.com</a>
<a href=""mailto:pe.ter.a.le.xand.ra0.2.1@gmail.com"">pe.ter.a.le.xand.ra0.2.1@gmail.com</a>
<a href=""mailto:p.et.e.r.ale.x.a.n.dr.a0.2.1@gmail.com"">p.et.e.r.ale.x.a.n.dr.a0.2.1@gmail.com</a>
<a href=""mailto:p.e.t.er.ale.xa.nd.r.a.0.2.1@gmail.com"">p.e.t.er.ale.xa.nd.r.a.0.2.1@gmail.com</a>
<a href=""mailto:pete.r.ale.xand.r.a.0.21@gmail.com"">pete.r.ale.xand.r.a.0.21@gmail.com</a>
<a href=""mailto:p.e.t.er.a.l.exa.nd.ra.021@gmail.com"">p.e.t.er.a.l.exa.nd.ra.021@gmail.com</a>
<a href=""mailto:p.e.tera.l.exa.nd.ra02.1@gmail.com"">p.e.tera.l.exa.nd.ra02.1@gmail.com</a>
<a href=""mailto:p.e.te.ral.ex.a.ndra.0.2.1@gmail.com"">p.e.te.ral.ex.a.ndra.0.2.1@gmail.com</a>
<a href=""mailto:p.e.te.r.a.lex.a.ndr.a.0.21@gmail.com"">p.e.te.r.a.lex.a.ndr.a.0.21@gmail.com</a>
<a href=""mailto:p.et.er.ale.xand.ra.0.2.1@gmail.com"">p.et.er.ale.xand.ra.0.2.1@gmail.com</a>
<a href=""mailto:pe.te.ral.e.xan.d.ra021@gmail.com"">pe.te.ral.e.xan.d.ra021@gmail.com</a>
<a href=""mailto:p.e.teralex.a.n.dra.0.21@gmail.com"">p.e.teralex.a.n.dra.0.21@gmail.com</a>
<a href=""mailto:pe.t.e.r.al.ex.a.ndr.a02.1@gmail.com"">pe.t.e.r.al.ex.a.ndr.a02.1@gmail.com</a>
<a href=""mailto:p.ete.r.alex.a.n.dr.a021@gmail.com"">p.ete.r.alex.a.n.dr.a021@gmail.com</a>
<a href=""mailto:p.ete.ra.le.x.andr.a021@gmail.com"">p.ete.ra.le.x.andr.a021@gmail.com</a>
<a href=""mailto:p.et.er.a.l.e.xa.ndra0.2.1@gmail.com"">p.et.er.a.l.e.xa.ndra0.2.1@gmail.com</a>
<a href=""mailto:pe.t.era.lex.a.nd.r.a.0.21@gmail.com"">pe.t.era.lex.a.nd.r.a.0.21@gmail.com</a>
<a href=""mailto:p.e.ter.al.ex.an.d.ra.0.21@gmail.com"">p.e.ter.al.ex.an.d.ra.0.21@gmail.com</a>
<a href=""mailto:pe.t.e.r.alex.andr.a.02.1@gmail.com"">pe.t.e.r.alex.andr.a.02.1@gmail.com</a>
<a href=""mailto:p.eter.al.ex.a.ndr.a021@gmail.com"">p.eter.al.ex.a.ndr.a021@gmail.com</a>
<a href=""mailto:pet.e.ra.lex.a.ndr.a.021@gmail.com"">pet.e.ra.lex.a.ndr.a.021@gmail.com</a>
<a href=""mailto:pe.t.e.ra.le.xa.ndr.a.02.1@gmail.com"">pe.t.e.ra.le.xa.ndr.a.02.1@gmail.com</a>
<a href=""mailto:p.et.e.r.al.e.xan.d.r.a.021@gmail.com"">p.et.e.r.al.e.xan.d.r.a.021@gmail.com</a>
<a href=""mailto:p.eterale.xa.ndr.a0.2.1@gmail.com"">p.eterale.xa.ndr.a0.2.1@gmail.com</a>
<a href=""mailto:p.et.er.al.ex.a.n.d.r.a.02.1@gmail.com"">p.et.er.al.ex.a.n.d.r.a.02.1@gmail.com</a>
<a href=""mailto:peterale.xa.ndra.02.1@gmail.com"">peterale.xa.ndra.02.1@gmail.com</a>
<a href=""mailto:pe.te.ra.lex.a.n.dra.0.21@gmail.com"">pe.te.ra.lex.a.n.dra.0.21@gmail.com</a>
<a href=""mailto:p.e.te.ra.lexa.nd.ra.021@gmail.com"">p.e.te.ra.lexa.nd.ra.021@gmail.com</a>
<a href=""mailto:p.e.ter.a.le.xand.ra.02.1@gmail.com"">p.e.ter.a.le.xand.ra.02.1@gmail.com</a>
<a href=""mailto:pet.erale.xand.r.a0.21@gmail.com"">pet.erale.xand.r.a0.21@gmail.com</a>
<a href=""mailto:p.ete.ra.l.e.xand.r.a.0.2.1@gmail.com"">p.ete.ra.l.e.xand.r.a.0.2.1@gmail.com</a>
<a href=""mailto:p.eter.al.exand.ra021@gmail.com"">p.eter.al.exand.ra021@gmail.com</a>
<a href=""mailto:p.e.te.ra.l.e.x.an.dra.02.1@gmail.com"">p.e.te.ra.l.e.x.an.dra.02.1@gmail.com</a>
<a href=""mailto:pe.t.e.ra.l.e.xand.ra.021@gmail.com"">pe.t.e.ra.l.e.xand.ra.021@gmail.com</a>
<a href=""mailto:pe.ter.a.lex.an.dr.a0.2.1@gmail.com"">pe.ter.a.lex.an.dr.a0.2.1@gmail.com</a>
<a href=""mailto:p.et.eral.exa.ndra.02.1@gmail.com"">p.et.eral.exa.ndra.02.1@gmail.com</a>
<a href=""mailto:p.e.t.er.alexandr.a.021@gmail.com"">p.e.t.er.alexandr.a.021@gmail.com</a>
<a href=""mailto:p.et.er.al.e.x.a.n.dra.0.2.1@gmail.com"">p.et.er.al.e.x.a.n.dra.0.2.1@gmail.com</a>
<a href=""mailto:p.e.tera.l.e.xan.d.r.a.021@gmail.com"">p.e.tera.l.e.xan.d.r.a.021@gmail.com</a>
<a href=""mailto:pe.te.r.alex.an.dra0.21@gmail.com"">pe.te.r.alex.an.dra0.21@gmail.com</a>
<a href=""mailto:p.e.ter.a.l.e.x.a.n.d.ra0.21@gmail.com"">p.e.ter.a.l.e.x.a.n.d.ra0.21@gmail.com</a>
<a href=""mailto:p.et.er.a.lexa.n.d.ra021@gmail.com"">p.et.er.a.lexa.n.d.ra021@gmail.com</a>
<a href=""mailto:pete.ralexa.nd.ra0.21@gmail.com"">pete.ralexa.nd.ra0.21@gmail.com</a>
<a href=""mailto:p.ete.r.a.l.ex.a.nd.r.a.0.2.1@gmail.com"">p.ete.r.a.l.ex.a.nd.r.a.0.2.1@gmail.com</a>
<a href=""mailto:pe.t.er.ale.xa.n.dr.a0.2.1@gmail.com"">pe.t.er.ale.xa.n.dr.a0.2.1@gmail.com</a>
<a href=""mailto:pe.teralexa.ndra0.2.1@gmail.com"">pe.teralexa.ndra0.2.1@gmail.com</a>
<a href=""mailto:p.e.ter.al.e.x.a.n.d.ra0.2.1@gmail.com"">p.e.ter.al.e.x.a.n.d.ra0.2.1@gmail.com</a>
<a href=""mailto:pe.t.e.r.ale.xa.n.d.ra.0.2.1@gmail.com"">pe.t.e.r.ale.xa.n.d.ra.0.2.1@gmail.com</a>
<a href=""mailto:pe.t.er.a.l.e.xa.n.d.ra.02.1@gmail.com"">pe.t.er.a.l.e.xa.n.d.ra.02.1@gmail.com</a>"
F5eYKSit,Miner's Haven GUI by .jaba. on discord,Plieax,Lua,Thursday 3rd of August 2023 10:08:53 PM CDT,"-- Gui to Lua
-- Version: 3.2

-- Instances:

local MHHub = Instance.new(""ScreenGui"")
local MF = Instance.new(""Frame"")
local Top = Instance.new(""Frame"")
local Close = Instance.new(""TextButton"")
local Minimize = Instance.new(""TextButton"")
local TextLabel = Instance.new(""TextLabel"")
local Navigation = Instance.new(""ScrollingFrame"")
local UIListLayout = Instance.new(""UIListLayout"")
local Autos = Instance.new(""TextButton"")
local Content = Instance.new(""Frame"")
local Autos_2 = Instance.new(""ScrollingFrame"")
local AutoFarm = Instance.new(""Frame"")
local One = Instance.new(""Frame"")
local TextLabel_2 = Instance.new(""TextLabel"")
local Selection = Instance.new(""Frame"")
local None = Instance.new(""TextButton"")
local _1 = Instance.new(""TextButton"")
local _3 = Instance.new(""TextButton"")
local _2 = Instance.new(""TextButton"")
local Two = Instance.new(""Frame"")
local TextLabel_3 = Instance.new(""TextLabel"")
local Selection_2 = Instance.new(""Frame"")
local None_2 = Instance.new(""TextButton"")
local _1_2 = Instance.new(""TextButton"")
local _3_2 = Instance.new(""TextButton"")
local _2_2 = Instance.new(""TextButton"")
local Three = Instance.new(""Frame"")
local TextLabel_4 = Instance.new(""TextLabel"")
local Selection_3 = Instance.new(""Frame"")
local None_3 = Instance.new(""TextButton"")
local _1_3 = Instance.new(""TextButton"")
local _3_3 = Instance.new(""TextButton"")
local _2_3 = Instance.new(""TextButton"")
local Toggle = Instance.new(""TextButton"")
local Cost = Instance.new(""TextBox"")
local ToggleAutoBox = Instance.new(""TextButton"")
local UIListLayout_2 = Instance.new(""UIListLayout"")
local UIPadding = Instance.new(""UIPadding"")
local ToggleAutoSkip = Instance.new(""TextButton"")
local ToggleAutoOpenBox = Instance.new(""TextButton"")
local Drag = Instance.new(""TextButton"")

--Properties:

MHHub.Name = ""MH Hub""
MHHub.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")
MHHub.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
MHHub.ResetOnSpawn = false

MF.Name = ""MF""
MF.Parent = MHHub
MF.Active = true
MF.BackgroundColor3 = Color3.fromRGB(178, 162, 255)
MF.BorderColor3 = Color3.fromRGB(0, 0, 0)
MF.BorderSizePixel = 0
MF.Position = UDim2.new(0.491440088, 0, 0.592896163, 0)
MF.Size = UDim2.new(0.300000012, 0, 0.150000006, 0)
MF.SizeConstraint = Enum.SizeConstraint.RelativeXX
MF.ZIndex = 5

Top.Name = ""Top""
Top.Parent = MF
Top.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Top.BorderColor3 = Color3.fromRGB(0, 0, 0)
Top.BorderSizePixel = 0
Top.Size = UDim2.new(1, 0, 0.100000001, 0)

Close.Name = ""Close""
Close.Parent = Top
Close.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
Close.BackgroundTransparency = 0.500
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0.926481605, 0, 0, 0)
Close.Size = UDim2.new(0.968076944, 0, 0.99999994, 0)
Close.SizeConstraint = Enum.SizeConstraint.RelativeYY
Close.Font = Enum.Font.SourceSans
Close.Text = ""X""
Close.TextColor3 = Color3.fromRGB(255, 255, 255)
Close.TextSize = 14.000

Minimize.Name = ""Minimize""
Minimize.Parent = Top
Minimize.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
Minimize.BackgroundTransparency = 0.500
Minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
Minimize.BorderSizePixel = 0
Minimize.Position = UDim2.new(0.822419882, 0, 0, 0)
Minimize.Size = UDim2.new(0.968076944, 0, 0.99999994, 0)
Minimize.SizeConstraint = Enum.SizeConstraint.RelativeYY
Minimize.Font = Enum.Font.SourceSans
Minimize.Text = ""-""
Minimize.TextColor3 = Color3.fromRGB(255, 255, 255)
Minimize.TextSize = 14.000

TextLabel.Parent = Top
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0.800000012, 0, 1, 0)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "".jaba. on Discord""
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 14.000

Navigation.Name = ""Navigation""
Navigation.Parent = MF
Navigation.Active = true
Navigation.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Navigation.BackgroundTransparency = 0.600
Navigation.BorderColor3 = Color3.fromRGB(0, 0, 0)
Navigation.BorderSizePixel = 0
Navigation.Position = UDim2.new(0, 0, 0.0999999642, 0)
Navigation.Size = UDim2.new(0.25, 0, 0.899999857, 0)
Navigation.ScrollBarThickness = 6

UIListLayout.Parent = Navigation
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 10)

Autos.Name = ""Autos""
Autos.Parent = Navigation
Autos.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Autos.BackgroundTransparency = 0.400
Autos.BorderColor3 = Color3.fromRGB(0, 0, 0)
Autos.BorderSizePixel = 0
Autos.Size = UDim2.new(0.850000024, 0, 0.075000003, 0)
Autos.Font = Enum.Font.SourceSans
Autos.Text = ""Auto""
Autos.TextColor3 = Color3.fromRGB(255, 255, 255)
Autos.TextScaled = true
Autos.TextSize = 14.000
Autos.TextWrapped = true

Content.Name = ""Content""
Content.Parent = MF
Content.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Content.BackgroundTransparency = 1.000
Content.BorderColor3 = Color3.fromRGB(0, 0, 0)
Content.BorderSizePixel = 0
Content.Position = UDim2.new(0.246401563, 0, 0.0964391679, 0)
Content.Size = UDim2.new(0.75, 0, 0.899999976, 0)

Autos_2.Name = ""Autos""
Autos_2.Parent = Content
Autos_2.Active = true
Autos_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Autos_2.BackgroundTransparency = 0.900
Autos_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Autos_2.BorderSizePixel = 0
Autos_2.Size = UDim2.new(1, 0, 1, 0)
Autos_2.ScrollBarThickness = 6

AutoFarm.Name = ""AutoFarm""
AutoFarm.Parent = Autos_2
AutoFarm.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
AutoFarm.BorderColor3 = Color3.fromRGB(255, 255, 255)
AutoFarm.BorderSizePixel = 3
AutoFarm.Position = UDim2.new(0.048792392, 0, 0.0659388006, 0)
AutoFarm.Size = UDim2.new(0.899999976, 0, 0.200000003, 0)

One.Name = ""One""
One.Parent = AutoFarm
One.BackgroundColor3 = Color3.fromRGB(112, 112, 112)
One.BorderColor3 = Color3.fromRGB(0, 0, 0)
One.BorderSizePixel = 0
One.Position = UDim2.new(0, 0, -5.9117383e-07, 0)
One.Size = UDim2.new(0.333699971, 0, 0.599971652, 0)

TextLabel_2.Parent = One
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Size = UDim2.new(1, 0, 0.25, 0)
TextLabel_2.Font = Enum.Font.SourceSans
TextLabel_2.Text = ""Save 1""
TextLabel_2.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.TextSize = 14.000

Selection.Name = ""Selection""
Selection.Parent = One
Selection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Selection.BackgroundTransparency = 1.000
Selection.BorderColor3 = Color3.fromRGB(0, 0, 0)
Selection.BorderSizePixel = 0
Selection.Position = UDim2.new(0, 0, 0.200000003, 0)
Selection.Size = UDim2.new(1, 0, 0.800000012, 0)

None.Name = ""None""
None.Parent = Selection
None.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
None.BorderColor3 = Color3.fromRGB(0, 0, 0)
None.BorderSizePixel = 0
None.Position = UDim2.new(0.200000003, 0, 0.200000003, 0)
None.Size = UDim2.new(0.200000003, 0, 0.200000003, 0)
None.SizeConstraint = Enum.SizeConstraint.RelativeXX
None.ZIndex = 3
None.Font = Enum.Font.SourceSans
None.Text = ""None""
None.TextColor3 = Color3.fromRGB(0, 0, 0)
None.TextScaled = true
None.TextSize = 14.000
None.TextWrapped = true

_1.Name = ""1""
_1.Parent = Selection
_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
_1.BorderSizePixel = 0
_1.Position = UDim2.new(0.600000024, 0, 0.200000003, 0)
_1.Size = UDim2.new(0.200000003, 0, 0.200000003, 0)
_1.SizeConstraint = Enum.SizeConstraint.RelativeXX
_1.ZIndex = 3
_1.Font = Enum.Font.SourceSans
_1.Text = ""1""
_1.TextColor3 = Color3.fromRGB(0, 0, 0)
_1.TextScaled = true
_1.TextSize = 14.000
_1.TextWrapped = true

_3.Name = ""3""
_3.Parent = Selection
_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
_3.BorderSizePixel = 0
_3.Position = UDim2.new(0.600000024, 0, 0.600000024, 0)
_3.Size = UDim2.new(0.200000003, 0, 0.200000003, 0)
_3.SizeConstraint = Enum.SizeConstraint.RelativeXX
_3.ZIndex = 3
_3.Font = Enum.Font.SourceSans
_3.Text = ""3""
_3.TextColor3 = Color3.fromRGB(0, 0, 0)
_3.TextScaled = true
_3.TextSize = 14.000
_3.TextWrapped = true

_2.Name = ""2""
_2.Parent = Selection
_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
_2.BorderSizePixel = 0
_2.Position = UDim2.new(0.200000003, 0, 0.600000024, 0)
_2.Size = UDim2.new(0.200000003, 0, 0.200000003, 0)
_2.SizeConstraint = Enum.SizeConstraint.RelativeXX
_2.ZIndex = 3
_2.Font = Enum.Font.SourceSans
_2.Text = ""2""
_2.TextColor3 = Color3.fromRGB(0, 0, 0)
_2.TextScaled = true
_2.TextSize = 14.000
_2.TextWrapped = true

Two.Name = ""Two""
Two.Parent = AutoFarm
Two.BackgroundColor3 = Color3.fromRGB(112, 112, 112)
Two.BorderColor3 = Color3.fromRGB(0, 0, 0)
Two.BorderSizePixel = 0
Two.Position = UDim2.new(0.330000073, 0, -5.9117383e-07, 0)
Two.Size = UDim2.new(0.333699971, 0, 0.599971652, 0)

TextLabel_3.Parent = Two
TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.BackgroundTransparency = 1.000
TextLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_3.BorderSizePixel = 0
TextLabel_3.Size = UDim2.new(1, 0, 0.25, 0)
TextLabel_3.Font = Enum.Font.SourceSans
TextLabel_3.Text = ""Save 2""
TextLabel_3.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_3.TextSize = 14.000

Selection_2.Name = ""Selection""
Selection_2.Parent = Two
Selection_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Selection_2.BackgroundTransparency = 1.000
Selection_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Selection_2.BorderSizePixel = 0
Selection_2.Position = UDim2.new(0, 0, 0.200000003, 0)
Selection_2.Size = UDim2.new(1, 0, 0.800000012, 0)

None_2.Name = ""None""
None_2.Parent = Selection_2
None_2.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
None_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
None_2.BorderSizePixel = 0
None_2.Position = UDim2.new(0.200000003, 0, 0.200000003, 0)
None_2.Size = UDim2.new(0.200000003, 0, 0.200000003, 0)
None_2.SizeConstraint = Enum.SizeConstraint.RelativeXX
None_2.ZIndex = 3
None_2.Font = Enum.Font.SourceSans
None_2.Text = ""None""
None_2.TextColor3 = Color3.fromRGB(0, 0, 0)
None_2.TextScaled = true
None_2.TextSize = 14.000
None_2.TextWrapped = true

_1_2.Name = ""1""
_1_2.Parent = Selection_2
_1_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
_1_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
_1_2.BorderSizePixel = 0
_1_2.Position = UDim2.new(0.600000024, 0, 0.200000003, 0)
_1_2.Size = UDim2.new(0.200000003, 0, 0.200000003, 0)
_1_2.SizeConstraint = Enum.SizeConstraint.RelativeXX
_1_2.ZIndex = 3
_1_2.Font = Enum.Font.SourceSans
_1_2.Text = ""1""
_1_2.TextColor3 = Color3.fromRGB(0, 0, 0)
_1_2.TextScaled = true
_1_2.TextSize = 14.000
_1_2.TextWrapped = true

_3_2.Name = ""3""
_3_2.Parent = Selection_2
_3_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
_3_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
_3_2.BorderSizePixel = 0
_3_2.Position = UDim2.new(0.600000024, 0, 0.600000024, 0)
_3_2.Size = UDim2.new(0.200000003, 0, 0.200000003, 0)
_3_2.SizeConstraint = Enum.SizeConstraint.RelativeXX
_3_2.ZIndex = 3
_3_2.Font = Enum.Font.SourceSans
_3_2.Text = ""3""
_3_2.TextColor3 = Color3.fromRGB(0, 0, 0)
_3_2.TextScaled = true
_3_2.TextSize = 14.000
_3_2.TextWrapped = true

_2_2.Name = ""2""
_2_2.Parent = Selection_2
_2_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
_2_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
_2_2.BorderSizePixel = 0
_2_2.Position = UDim2.new(0.200000003, 0, 0.600000024, 0)
_2_2.Size = UDim2.new(0.200000003, 0, 0.200000003, 0)
_2_2.SizeConstraint = Enum.SizeConstraint.RelativeXX
_2_2.ZIndex = 3
_2_2.Font = Enum.Font.SourceSans
_2_2.Text = ""2""
_2_2.TextColor3 = Color3.fromRGB(0, 0, 0)
_2_2.TextScaled = true
_2_2.TextSize = 14.000
_2_2.TextWrapped = true

Three.Name = ""Three""
Three.Parent = AutoFarm
Three.BackgroundColor3 = Color3.fromRGB(112, 112, 112)
Three.BorderColor3 = Color3.fromRGB(0, 0, 0)
Three.BorderSizePixel = 0
Three.Position = UDim2.new(0.670000017, 0, -5.9117383e-07, 0)
Three.Size = UDim2.new(0.333699971, 0, 0.599971116, 0)

TextLabel_4.Parent = Three
TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_4.BackgroundTransparency = 1.000
TextLabel_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_4.BorderSizePixel = 0
TextLabel_4.Size = UDim2.new(1, 0, 0.25, 0)
TextLabel_4.Font = Enum.Font.SourceSans
TextLabel_4.Text = ""Save 3""
TextLabel_4.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_4.TextSize = 14.000

Selection_3.Name = ""Selection""
Selection_3.Parent = Three
Selection_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Selection_3.BackgroundTransparency = 1.000
Selection_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Selection_3.BorderSizePixel = 0
Selection_3.Position = UDim2.new(0, 0, 0.200000003, 0)
Selection_3.Size = UDim2.new(1, 0, 0.800000012, 0)

None_3.Name = ""None""
None_3.Parent = Selection_3
None_3.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
None_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
None_3.BorderSizePixel = 0
None_3.Position = UDim2.new(0.200000003, 0, 0.200000003, 0)
None_3.Size = UDim2.new(0.200000003, 0, 0.200000003, 0)
None_3.SizeConstraint = Enum.SizeConstraint.RelativeXX
None_3.ZIndex = 3
None_3.Font = Enum.Font.SourceSans
None_3.Text = ""None""
None_3.TextColor3 = Color3.fromRGB(0, 0, 0)
None_3.TextScaled = true
None_3.TextSize = 14.000
None_3.TextWrapped = true

_1_3.Name = ""1""
_1_3.Parent = Selection_3
_1_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
_1_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
_1_3.BorderSizePixel = 0
_1_3.Position = UDim2.new(0.600000024, 0, 0.200000003, 0)
_1_3.Size = UDim2.new(0.200000003, 0, 0.200000003, 0)
_1_3.SizeConstraint = Enum.SizeConstraint.RelativeXX
_1_3.ZIndex = 3
_1_3.Font = Enum.Font.SourceSans
_1_3.Text = ""1""
_1_3.TextColor3 = Color3.fromRGB(0, 0, 0)
_1_3.TextScaled = true
_1_3.TextSize = 14.000
_1_3.TextWrapped = true

_3_3.Name = ""3""
_3_3.Parent = Selection_3
_3_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
_3_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
_3_3.BorderSizePixel = 0
_3_3.Position = UDim2.new(0.600000024, 0, 0.600000024, 0)
_3_3.Size = UDim2.new(0.200000003, 0, 0.200000003, 0)
_3_3.SizeConstraint = Enum.SizeConstraint.RelativeXX
_3_3.ZIndex = 3
_3_3.Font = Enum.Font.SourceSans
_3_3.Text = ""3""
_3_3.TextColor3 = Color3.fromRGB(0, 0, 0)
_3_3.TextScaled = true
_3_3.TextSize = 14.000
_3_3.TextWrapped = true

_2_3.Name = ""2""
_2_3.Parent = Selection_3
_2_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
_2_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
_2_3.BorderSizePixel = 0
_2_3.Position = UDim2.new(0.200000003, 0, 0.600000024, 0)
_2_3.Size = UDim2.new(0.200000003, 0, 0.200000003, 0)
_2_3.SizeConstraint = Enum.SizeConstraint.RelativeXX
_2_3.ZIndex = 3
_2_3.Font = Enum.Font.SourceSans
_2_3.Text = ""2""
_2_3.TextColor3 = Color3.fromRGB(0, 0, 0)
_2_3.TextScaled = true
_2_3.TextSize = 14.000
_2_3.TextWrapped = true

Toggle.Name = ""Toggle""
Toggle.Parent = AutoFarm
Toggle.BackgroundColor3 = Color3.fromRGB(255, 165, 165)
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0, 0, 0.800000012, 0)
Toggle.Size = UDim2.new(1, 0, 0.200000003, 0)
Toggle.Font = Enum.Font.SourceSans
Toggle.Text = ""Auto Farm OFF""
Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
Toggle.TextScaled = true
Toggle.TextSize = 14.000
Toggle.TextWrapped = true

Cost.Name = ""Cost""
Cost.Parent = AutoFarm
Cost.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Cost.BorderColor3 = Color3.fromRGB(0, 0, 0)
Cost.BorderSizePixel = 0
Cost.Position = UDim2.new(0, 0, 0.629999995, 0)
Cost.Size = UDim2.new(1, 0, 0.200000003, 0)
Cost.Font = Enum.Font.SourceSans
Cost.PlaceholderColor3 = Color3.fromRGB(255, 0, 0)
Cost.PlaceholderText = ""Required Cash to Rebirth""
Cost.Text = ""0""
Cost.TextColor3 = Color3.fromRGB(0, 0, 0)
Cost.TextScaled = true
Cost.TextSize = 14.000
Cost.TextWrapped = true

ToggleAutoBox.Name = ""ToggleAutoBox""
ToggleAutoBox.Parent = Autos_2
ToggleAutoBox.BackgroundColor3 = Color3.fromRGB(255, 165, 165)
ToggleAutoBox.BorderColor3 = Color3.fromRGB(255, 255, 255)
ToggleAutoBox.BorderSizePixel = 3
ToggleAutoBox.Size = UDim2.new(0.899999976, 0, 0.100000001, 0)
ToggleAutoBox.Font = Enum.Font.SourceSans
ToggleAutoBox.Text = ""Auto Collect Crates OFF""
ToggleAutoBox.TextColor3 = Color3.fromRGB(0, 0, 0)
ToggleAutoBox.TextSize = 14.000

UIListLayout_2.Parent = Autos_2
UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_2.Padding = UDim.new(0, 10)

UIPadding.Parent = Autos_2
UIPadding.PaddingTop = UDim.new(0, 10)

ToggleAutoSkip.Name = ""ToggleAutoSkip""
ToggleAutoSkip.Parent = Autos_2
ToggleAutoSkip.BackgroundColor3 = Color3.fromRGB(197, 255, 176)
ToggleAutoSkip.BorderColor3 = Color3.fromRGB(255, 255, 255)
ToggleAutoSkip.BorderSizePixel = 3
ToggleAutoSkip.Size = UDim2.new(0.899999976, 0, 0.100000001, 0)
ToggleAutoSkip.Font = Enum.Font.SourceSans
ToggleAutoSkip.Text = ""Auto Skip Lives ON""
ToggleAutoSkip.TextColor3 = Color3.fromRGB(0, 0, 0)
ToggleAutoSkip.TextSize = 14.000

ToggleAutoOpenBox.Name = ""ToggleAutoOpenBox""
ToggleAutoOpenBox.Parent = Autos_2
ToggleAutoOpenBox.BackgroundColor3 = Color3.fromRGB(255, 165, 165)
ToggleAutoOpenBox.BorderColor3 = Color3.fromRGB(255, 255, 255)
ToggleAutoOpenBox.BorderSizePixel = 3
ToggleAutoOpenBox.Size = UDim2.new(0.899999976, 0, 0.100000001, 0)
ToggleAutoOpenBox.Font = Enum.Font.SourceSans
ToggleAutoOpenBox.Text = ""Auto Open Boxes OFF""
ToggleAutoOpenBox.TextColor3 = Color3.fromRGB(0, 0, 0)
ToggleAutoOpenBox.TextSize = 14.000

Drag.Name = ""Drag""
Drag.Parent = MF
Drag.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Drag.BackgroundTransparency = 1.000
Drag.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drag.BorderSizePixel = 0
Drag.Position = UDim2.new(-0.00146615494, 0, 4.09769399e-07, 0)
Drag.Size = UDim2.new(0.823886037, 0, 0.0956428424, 0)
Drag.Font = Enum.Font.SourceSans
Drag.Text = """"
Drag.TextColor3 = Color3.fromRGB(0, 0, 0)
Drag.TextSize = 14.000

-- Scripts:

local function UPZXQXS_fake_script() -- MF.CTRL 
	local script = Instance.new('LocalScript', MF)

	local con = script.Parent.Content
	local nav = script.Parent.Navigation
	local top = script.Parent.Top
	local loadFunction = game.ReplicatedStorage.Layouts
	local destroyFunction = game.ReplicatedStorage.DestroyAll
	
	---
	---
	---   GAME FUNCTIONS
	---
	---
	
	local function inventoryTbl()
		local tbl = {}
		local remote = game.ReplicatedStorage.FetchInventory
		local rt = remote:InvokeServer()
		for i,v in pairs(rt)do
			if v[""Quantity""] ~= nil and v[""Quantity""] > 0 then
				for ii = 1, v[""Quantity""] do
					table.insert(tbl, i)
				end
			end
		end
	
		return tbl
	end
	
	local function layoutTbl(name)
		local tbl = {}
		local split = string.split( game.Players.LocalPlayer.Layouts:FindFirstChild(name).Value, '""ItemId"":')
	
		for i=2, #split do
			table.insert(tbl, split[i]:split(""}"")[1])
		end
	
		return tbl
	end
	
	local function getItemPrice(id)
		for i,v in pairs(game.ReplicatedStorage.Items:GetChildren())do
			if v.ItemId.Value == tonumber(id) then
				return v.Cost.Value
			end
		end
	end
	
	local function getPrice(name)
		local costTbl = layoutTbl(name)
		local plrTbl = inventoryTbl()
	
		local total = 0
	
		for i,v in pairs(costTbl)do
			local invSearch = table.find(plrTbl, tonumber(v))
			if invSearch == nil then 
				total = total + getItemPrice(v)
			else
				table.remove(plrTbl, invSearch)
			end
		end
	
		return total
	end
	
	local order = {""0"",""k"", ""t"", ""t"", ""t"", ""qd"", ""qn"", ""sx"", ""sp"", ""o"", ""n"", ""de"", ""ud"", ""dd"", ""tdd"", ""qdd"", ""qnd"", ""sxd"", ""spd"", ""ocd"", ""nvd"", ""vgn"", ""uvg"", ""tvg"", ""qtv"", ""qnv"", ""sev"", ""spg"", ""ovg"", ""nvg"", ""tgn"", ""utg"", ""dtg"", ""tstg"", ""qttg"", ""qntg"", ""sstg"", ""sptg"", ""octg"", ""notg"", ""qddr"", ""uqdr"", ""dqdr"", ""tqdr"", ""qdqdr"", ""qnqdr"", ""sxqdr"", ""spqdr"", ""oqddr"", ""nqddr""}
	
	local function eval(user, actual)
		local userI = -1
		local actualI = -1
		
		for i=50,1, -1 do
			local v = order[i]
			print(v)
			local findUser = string.find(user:lower(),v)
			warn(findUser)
			if findUser ~= nil then
				userI = i
				break
			end
		end
		
		for i=50,1, -1 do
			local v = order[i]
			local findActual = string.find(actual:lower(),v)
			if findActual ~= nil then
				actualI = i
				break
			end
		end
		
		warn(userI)
		warn(actualI)
		
		
		
		return true
		
	end
	
	---
	---
	---
	---
	---
	
	
	
	---
	---
	---   BUTTON FUNCTIONS
	---
	---
	
	local min = false
	_G.autoFarmBaseEnabled = false
	_G.autoCrateEnabled = false
	_G.autoSkipLives = true
	_G.autoBoxes = false
	game.ReplicatedStorage.ChangeSetting:InvokeServer(""LifeSkip"", true)
	local layouts = game.Players.LocalPlayer.Layouts
	local items = game.ReplicatedStorage.Items
	
	top.Close.Activated:Connect(function()
		_G.autoFarmBaseEnabled = false
		_G.autoCrateEnabled = false
		script.Parent:Destroy()
	end)
	
	top.Minimize.Activated:Connect(function()
		if min then
			min = false
			script.Parent.BackgroundTransparency = 1
			nav.Visible = false
			con.Visible = false
		else
			min = true
			script.Parent.BackgroundTransparency = 0
			nav.Visible = true
			con.Visible = true
		end
	end)
	
	for i,v in pairs(nav:GetChildren())do
		if v:IsA(""TextButton"") then
			v.Activated:Connect(function()
				for ii,vv in pairs(con:GetChildren())do
					if vv:IsA(""TextButton"") then
						vv.Visible = false
					end
				end
				
				con:FindFirstChild(v.Name).Visible = true
			end)
		end
	end
	
	for i,v in pairs(con.Autos.AutoFarm:GetChildren())do
		if v:IsA(""Frame"") then
			local nval = Instance.new(""StringValue"", v)
			nval.Name = ""Selected""
			nval.Value = ""None""
		end
	end
	
	for i,v in pairs(con.Autos.AutoFarm.One.Selection:GetChildren())do
		v.Activated:Connect(function()
			if ((v.Text == ""None"") or (con.Autos.AutoFarm.Two.Selected.Value ~= v.Text and con.Autos.AutoFarm.Three.Selected.Value ~= v.Text)) then
				con.Autos.AutoFarm.One.Selection:FindFirstChild(con.Autos.AutoFarm.One.Selected.Value).BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				con.Autos.AutoFarm.One.Selected.Value = v.Text
				con.Autos.AutoFarm.One.Selection:FindFirstChild(con.Autos.AutoFarm.One.Selected.Value).BackgroundColor3 = Color3.fromRGB(0, 255, 0)
			end
		end)
	end
	
	for i,v in pairs(con.Autos.AutoFarm.Two.Selection:GetChildren())do
		v.Activated:Connect(function()
			if ((v.Text == ""None"") or (con.Autos.AutoFarm.One.Selected.Value ~= v.Text and con.Autos.AutoFarm.Three.Selected.Value ~= v.Text)) then
				con.Autos.AutoFarm.Two.Selection:FindFirstChild(con.Autos.AutoFarm.Two.Selected.Value).BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				con.Autos.AutoFarm.Two.Selected.Value = v.Text
				con.Autos.AutoFarm.Two.Selection:FindFirstChild(con.Autos.AutoFarm.Two.Selected.Value).BackgroundColor3 = Color3.fromRGB(0, 255, 0)
			end
		end)
	end
	
	for i,v in pairs(con.Autos.AutoFarm.Three.Selection:GetChildren())do
		v.Activated:Connect(function()
			if ((v.Text == ""None"") or (con.Autos.AutoFarm.Two.Selected.Value ~= v.Text and con.Autos.AutoFarm.One.Selected.Value ~= v.Text)) then
				con.Autos.AutoFarm.Three.Selection:FindFirstChild(con.Autos.AutoFarm.Three.Selected.Value).BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				con.Autos.AutoFarm.Three.Selected.Value = v.Text
				con.Autos.AutoFarm.Three.Selection:FindFirstChild(con.Autos.AutoFarm.Three.Selected.Value).BackgroundColor3 = Color3.fromRGB(0, 255, 0)
			end
		end)
	end
	
	con.Autos.AutoFarm.Toggle.Activated:Connect(function()
		if _G.autoFarmBaseEnabled == false then
			_G.autoFarmBaseEnabled = true
			con.Autos.AutoFarm.Toggle.Text = ""Auto Farm ON""
			con.Autos.AutoFarm.Toggle.BackgroundColor3 = Color3.fromRGB(197, 255, 176)
			pcall(function()
				local activeSlot = 1
				local hasLoaded = false
				
				while _G.autoFarmBaseEnabled do
					if activeSlot == 1 and not hasLoaded and con.Autos.AutoFarm.One.Selected.Value ~= ""None""  then
						hasLoaded = true
						destroyFunction:InvokeServer()
						wait(.1)
						loadFunction:InvokeServer(""Load"", ""Layout""..con.Autos.AutoFarm.One.Selected.Value)
						activeSlot = 2
						
					elseif activeSlot == 2 and con.Autos.AutoFarm.Two.Selected.Value ~= ""None"" and getPrice(""Layout""..con.Autos.AutoFarm.Two.Selected.Value) <= game.ReplicatedStorage.MoneyMirror:FindFirstChild(game.Players.LocalPlayer.Name).Value  then
						destroyFunction:InvokeServer()
						wait(.1)
						loadFunction:InvokeServer(""Load"", ""Layout""..con.Autos.AutoFarm.Two.Selected.Value)
						activeSlot = 3
					elseif activeSlot == 3 and con.Autos.AutoFarm.Three.Selected.Value ~= ""None"" and getPrice(""Layout""..con.Autos.AutoFarm.Three.Selected.Value) <= game.ReplicatedStorage.MoneyMirror:FindFirstChild(game.Players.LocalPlayer.Name).Value  then
						hasLoaded = true
						destroyFunction:InvokeServer()
						wait(.1)
						loadFunction:InvokeServer(""Load"", ""Layout""..con.Autos.AutoFarm.Three.Selected.Value)
					end
					
					local rebirthed = false
					if _G.autoSkipLives then
						if eval(con.Autos.AutoFarm.Cost.Text, game.Players.LocalPlayer.leaderstats.Cash.Value) then
							rebirthed = game.ReplicatedStorage.Rebirth:InvokeServer(game.Players.LocalPlayer.Rebirths.Value + 1)
						end
					else
						if eval(con.Autos.AutoFarm.Cost.Text, game.Players.LocalPlayer.leaderstats.Cash.Value) then
							rebirthed = game.ReplicatedStorage.Rebirth:InvokeServer(game.Players.LocalPlayer.Rebirths.Value + 100)
							
						end
					end
					if rebirthed then
						activeSlot = 1
						hasLoaded = false
					end
					
					wait(2)
				end
			end)
		else
			con.Autos.AutoFarm.Toggle.Text = ""Auto Farm OFF""
			con.Autos.AutoFarm.Toggle.BackgroundColor3 = Color3.fromRGB(255, 165, 165)
			_G.autoFarmBaseEnabled = false
		end
	end)
	
	con.Autos.ToggleAutoBox.Activated:Connect(function()
		if _G.autoCrateEnabled then
			_G.autoCrateEnabled = false
			con.Autos.ToggleAutoBox.Text = ""Auto Collect Crates OFF""
			con.Autos.ToggleAutoBox.BackgroundColor3 = Color3.fromRGB(255, 165, 165)
		else
			_G.autoCrateEnabled = true
			con.Autos.ToggleAutoBox.Text = ""Auto Collect Crates ON""
			con.Autos.ToggleAutoBox.BackgroundColor3 = Color3.fromRGB(197, 255, 176)
			pcall(function()
				while _G.autoCrateEnabled do
					local ogc = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
					for i,v in pairs(workspace.Boxes:GetChildren())do
						game.Players.LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false) game.Players.LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
						wait(.1)
						firetouchinterest(v, game.Players.LocalPlayer.Character.HumanoidRootPart, 0)
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame * CFrame.new(0,.5,0)
						wait(.05)
					end
					
					wait(1)
					game.Players.LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false) game.Players.LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = ogc * CFrame.new(0,2,0)
					game.Players.LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false) game.Players.LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
					wait(15)
				end
			end)
		end
	end)
	
	con.Autos.ToggleAutoSkip.Activated:Connect(function()
		if _G.autoSkipLives then
			_G.autoSkipLives = false
			con.Autos.ToggleAutoSkip.Text = ""Auto Skip Lives OFF""
			con.Autos.ToggleAutoSkip.BackgroundColor3 = Color3.fromRGB(255, 165, 165)
			game.ReplicatedStorage.ChangeSetting:InvokeServer(""LifeSkip"", false)
		else
			_G.autoSkipLives = true
			con.Autos.ToggleAutoSkip.Text = ""Auto Skip Lives ON""
			con.Autos.ToggleAutoSkip.BackgroundColor3 = Color3.fromRGB(197, 255, 176)
			game.ReplicatedStorage.ChangeSetting:InvokeServer(""LifeSkip"", true)
		end
	end)
	
	con.Autos.ToggleAutoBox.Activated:Connect(function()
		if _G.autoBoxes == true then
			_G.autoBoxes = false
			con.Autos.ToggleAutoBox.Text = ""Auto Open Boxes OFF""
			con.Autos.ToggleAutoBox.BackgroundColor3 = Color3.fromRGB(255,165,165)
		else
			
		pcall(function()
			_G.autoBoxes = true
			con.Autos.ToggleAutoBox.Text = ""Auto Open Boxes ON""
			con.Autos.ToggleAutoBox.BackgroundColor3 = Color3.fromRGB(197,255,176)
			
				while _G.autoBoxes do
					game.ReplicatedStorage.MysteryBox:InvokeServer(""Inferno"")
					game.ReplicatedStorage.MysteryBox:InvokeServer(""Unreal"")
					game.ReplicatedStorage.MysteryBox:InvokeServer(""Regular"")
					wait(2)
				end
		end)
		end
	end)
	
	game.StarterGui:SetCore(""SendNotification"", {
		Title = ""Pastebin Link"",
		Text = ""https://pastebin.com/F5eYKSit"",
		Duration = 13.5,
	})
	
	---
	---
	---
	---
	---
end
coroutine.wrap(UPZXQXS_fake_script)()
local function VVIVIF_fake_script() -- Drag.Drag 
	local script = Instance.new('LocalScript', Drag)

	local mouseStartX = nil
	local mouseStartY = nil
	local moving = false
	local mf = script.Parent.Parent
	local mouse = game.Players.LocalPlayer:GetMouse()
	local startPos = UDim2.new(.6,0,.65,0)
	local uip = game:GetService(""UserInputService"")
	
	script.Parent.MouseButton1Down:Connect(function()
		mouse = game.Players.LocalPlayer:GetMouse()
		mouseStartX = mouse.X
		mouseStartY = mouse.Y
		moving = true
		while moving do
			mf.Position = startPos + UDim2.new(0,mouse.X - mouseStartX, 0, mouse.Y - mouseStartY)
			wait(.01)
		end
	end)
	
	--[[
	script.Parent.MouseButton1Up:Connect(function()
		moving = false
		startPos = mf.Position
	end)
	]]
	
	uip.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			moving = false
			startPos = mf.Position
		end
	end)
end
coroutine.wrap(VVIVIF_fake_script)()
"
Sw7KtYW8,Day 4 String variables,HarrJ,Java,Thursday 3rd of August 2023 10:07:18 PM CDT,"package mng2023b5;

public class Day04B {
    public static void main(String[] args) {
        String txtSample = ""22"";
        String txt1, txt2, txt3;
        
        System.out.println(""Variable value: "" + txtSample);
        
        txt1 = ""Sometimes I'm alone,"";
        txt2 = ""Sometimes I'm not,"";
        txt3 = ""Hello?"";
        
        System.out.println(txt1);
        System.out.println(txt2);
        System.out.println(txt1);
        System.out.println(txt3);
    }
}"
BeDUnKAa,F2U // Artifice _ Apollyna @ TH -- relationships section,Apollyna,HTML,Thursday 3rd of August 2023 09:55:44 PM CDT,"<div class=""mb-3"">
	<div class=""row no-gutters align-items-center"">
		<div class=""col-auto mr-2 display-4"" style=""letter-spacing:1px;font-size:1.3em;font-weight:400;color:#407071;"">
            <em>relationships</em>
        </div>
		<div class=""col""><hr></div>
	</div>
	<ul class=""pl-4 m-0"" style=""list-style-type:circle;"">
		<li><a href=""#"">[ NAME ]</a>&nbsp; — &nbsp;pronouns, relationship, some info about the relation, lorem ipsum dolor sit amet.</li>
		<li><a href=""#"">[ NAME ]</a>&nbsp; — &nbsp;pronouns, relationship, some info about the relation, lorem ipsum dolor sit amet.</li>
		<li><a href=""#"">[ NAME ]</a>&nbsp; — &nbsp;pronouns, relationship, some info about the relation, lorem ipsum dolor sit amet.</li>
	</ul>
</div>"
CmYv6m4M,white-belt-final,qishidaeto,C++,Thursday 3rd of August 2023 09:29:41 PM CDT,"/*Наша БД должна понимать определённые команды, чтобы с ней можно было взаимодействовать:

- добавление события:                        Add Дата Событие
- удаление события:                          Del Дата Событие
- удаление всех событий за конкретную дату:  Del Дата
- поиск событий за конкретную дату:          Find Дата
- печать всех событий за все даты:           Print*/

#include <iostream>
#include <string>
#include <map>
#include <set>
#include <iomanip>
#include <vector>

class Date
{
public:
	Date(const int& year, const int& month, const int& day)
		: year(year), month(month), day(day)
	{
	}

	int
	GetYear() const
	{
		return year;
	}

	int
	GetMonth() const
	{
		return month;
	}

	int
	GetDay() const
	{
		return day;
	}

private:
	//Определим дату как строку вида Год-Месяц-День, где Год, Месяц и День — целые числа
	int year, month, day;
};

class Database
{
public:

	/*Добавление события (Add Дата Событие)

	При добавлении события БД должна его запомнить и затем показывать его
	при поиске (командой Find) или печати (командой Print).
	Если указанное событие для данной даты уже существует, повторное его добавление нужно игнорировать.
	В случае корректного ввода (см. раздел «Обработка ошибок ввода») программа ничего не должна выводить на экран.*/
	void
	AddEvent(const Date& date,
		const std::string& event)
	{
		db[date].insert(event);
	}

	/*Удаление события (Del Дата Событие)

	Команда должна удалить добавленное ранее событие с указанным именем в указанную дату, если оно существует.
	Если событие найдено и удалено, программа должна вывести строку «Deleted successfully» (без кавычек).
	Если событие в указанную дату не найдено, программа должна вывести строку «Event not found» (без кавычек).*/
	bool
	DeleteEvent(const Date& date,
		const std::string& event)
	{
		if (db.count(date))
			if (db[date].count(event))
			{
				db[date].erase(event);

				if (db[date].empty())
					db.erase(date);

				return true;
			}

		return false;
	}

	/*Удаление нескольких событий (Del Дата)

	Команда удаляет все ранее добавленные события за указанную дату.
	Программа всегда должна выводить строку вида «Deleted N events»,
	где N — это количество всех найденных и удалённых событий.
	N может быть равно нулю, если в указанную дату не было ни одного события.*/
	int
	DeleteDate(const Date& date)
	{
		int deletedEvents = 0;

		if (db.count(date))
		{
			deletedEvents = db[date].size();
			db.erase(date);
		}

		return deletedEvents;
	}

	std::set<std::string>
	Find(const Date& date) const
	{
		std::set<std::string> events;

		if (db.count(date))
			for (const auto& i : db.at(date))
				events.insert(i);

		return events;
	}

	void
	Print() const
	{
		for (const auto& date_events : db)
			for (const auto& event :
				date_events.second)
				std::cout << std::setw(4) << std::setfill('0') << date_events.first.GetYear() << '-'
						  << std::setw(2) << std::setfill('0') << date_events.first.GetMonth() << '-'
						  << std::setw(2) << std::setfill('0') << date_events.first.GetDay() << "" "" << event
						  << std::endl;
	}

private:
	/*Будем хранить в нашей БД пары вида: дата, событие (в одну и ту же дату может произойти много разных событий).
	Одинаковые события, произошедшие в один и тот же день, сохранять не нужно: достаточно сохранить только одно из них*/
	std::map<Date, std::set<std::string>> db;
};

struct Query
{
	std::string text_request;

	//Все команды, даты и события являются непустыми строками и не содержат пробелов и прочих пробельных символов.
	std::string command;
	std::string date_str;
	std::string event;

	void Clear()
	{
		command.clear();
		date_str.clear();
		event.clear();
	}

};

std::ostream& operator<<(std::ostream& os, const std::set<std::string>& set);
std::istream& operator>>(std::istream& is, const Date& date);
Date ParseDate(const std::string& date_str);
void CheckDateFormatCorrect(const std::string& date_str);
void CheckMonthCorrectness(const int& month);
void CheckDayCorrectness(const int& day);
bool operator<(const Date& lhs, const Date& rhs);

int main()
{
	Database db;
	Query query;

	/*Каждая команда занимает целиком ровно одну строку,
	хотя во вводе могут быть и пустые строки (их нужно игнорировать).*/
	while (getline(std::cin, query.text_request))
	{
		std::istringstream iss(query.text_request);
		query.Clear();
		iss >> query.command >> query.date_str >> query.event;

		if (query.command.empty())
			continue;

		else if (query.command == ""Print"")
			db.Print();

		else if (query.command == ""Add"" || query.command == ""Del"" || query.command == ""Del"" || query.command == ""Find"")
		{
			try
			{
				CheckDateFormatCorrect(query.date_str);
				CheckMonthCorrectness(ParseDate(query.date_str).GetMonth());
				CheckDayCorrectness(ParseDate(query.date_str).GetDay());
			}
			catch (std::invalid_argument& ex)
			{
				std::cout << ex.what() << std::endl;
				continue;
			}

			//После команды Add всегда следуют дата и событие
			if (query.command == ""Add"")
				db.AddEvent(ParseDate(query.date_str), query.event);

				//После команды Del всегда следует дата и, возможно, событие
			else if (query.command == ""Del"")
			{
				if (query.event.empty())
					std::cout << ""Deleted "" << db.DeleteDate(ParseDate(query.date_str)) << "" events"" << std::endl;

				else
				{
					if (db.DeleteEvent(ParseDate(query.date_str), query.event))
						std::cout << ""Deleted successfully"" << std::endl;

					else std::cout << ""Event not found"" << std::endl;
				}
			}

				//После команды Find всегда следует дата
			else if (query.command == ""Find"")
				std::cout << db.Find(ParseDate(query.date_str));
		}

			/*Если пользователь ввёл неизвестную команду, то программа должна об этом сообщить,
			 выведя строку «Unknown command: COMMAND», где COMMAND — это та команда, которую ввёл пользователь.
			 Командой считается первое слово в строке (до пробела).*/
		else std::cout << ""Unknown command: "" << query.command << std::endl;
	}

	return 0;
}

std::ostream& operator<<(std::ostream& os, const std::set<std::string>& set)
{
	for (const auto& element : set)
		os << element << std::endl;

	return os;
}

Date ParseDate(const std::string& date_str)
{
	std::istringstream date_iss(date_str);
	int year, month, day;

	date_iss >> year;
	date_iss.ignore();

	date_iss >> month;
	date_iss.ignore();

	date_iss >> day;
	date_iss.ignore();

	return Date(year, month, day);
}

void CheckDateFormatCorrect(const std::string& date_str)
{
	std::istringstream date_iss(date_str);
	std::string year_str, month_str, day_str;

	std::getline(date_iss, year_str, '-');
	std::getline(date_iss, month_str, '-');
	std::getline(date_iss, day_str, '-');

	if (year_str[0] != '+' && year_str[0] != '-' && !std::isdigit(year_str[0]))
		throw std::invalid_argument(""Wrong date format: "" + date_str);

	for (int letter_index = 1; letter_index < year_str.size(); ++letter_index)
		if (!std::isdigit(year_str[letter_index]))
			throw std::invalid_argument(""Wrong date format: "" + date_str);

	if (month_str[0] != '+' && month_str[0] != '-' && !std::isdigit(month_str[0]))
		throw std::invalid_argument(""Wrong date format: "" + date_str);

	for (int letter_index = 1; letter_index < month_str.size(); ++letter_index)
		if (!std::isdigit(month_str[letter_index]))
			throw std::invalid_argument(""Wrong date format: "" + date_str);

	if (day_str[0] != '+' && day_str[0] != '-' && !std::isdigit(day_str[0]))
		throw std::invalid_argument(""Wrong date format: "" + date_str);

	for (int letter_index = 1; letter_index < day_str.size(); ++letter_index)
		if (!std::isdigit(day_str[letter_index]))
			throw std::invalid_argument(""Wrong date format: "" + date_str);
}

void CheckMonthCorrectness(const int& month)
{
	if (month < 1 || month > 12)
		throw std::invalid_argument(""Month value is invalid: "" + std::to_string(month));
}

void CheckDayCorrectness(const int& day)
{
	if (day < 1 || day > 31)
		throw std::invalid_argument(""Day value is invalid: "" + std::to_string(day));
}

bool operator<(const Date& lhs, const Date& rhs)
{
	if (lhs.GetYear() != rhs.GetYear())
		return lhs.GetYear() < rhs.GetYear();

	else if (lhs.GetMonth() != rhs.GetMonth())
		return lhs.GetMonth() < rhs.GetMonth();

	return lhs.GetDay() < rhs.GetDay();
}"
w9Up5icb,Crusader Wars Plus+ Playset 1.3.4,MellyKusjes,JSON,Thursday 3rd of August 2023 09:06:17 PM CDT,"{
    ""game"": ""ck3"",
    ""name"": ""Crusader Wars Plus+"",
    ""mods"": [
        {
            ""displayName"": ""Unofficial Patch"",
            ""enabled"": true,
            ""position"": 0,
            ""steamId"": ""2871648329""
        },
        {
            ""displayName"": ""Kingdom Come: Deliverance - Mood Music"",
            ""enabled"": true,
            ""position"": 1,
            ""steamId"": ""2991670034""
        },
        {
            ""displayName"": ""Crusader Kings II Music - Complete"",
            ""enabled"": true,
            ""position"": 2,
            ""steamId"": ""2362033330""
        },
        {
            ""displayName"": ""Ultimate Graphics Collection (Reloaded-Lite)"",
            ""enabled"": true,
            ""position"": 3,
            ""steamId"": ""2974625246""
        },
        {
            ""displayName"": ""IR Terrain Fantasy295 version"",
            ""enabled"": true,
            ""position"": 4,
            ""steamId"": ""2919243647""
        },
        {
            ""displayName"": ""Simple border 简洁的边境线"",
            ""enabled"": true,
            ""position"": 5,
            ""steamId"": ""2749577487""
        },
        {
            ""displayName"": ""better camera zoom 更好的镜头缩放"",
            ""enabled"": true,
            ""position"": 6,
            ""steamId"": ""2243723476""
        },
        {
            ""displayName"": ""More Background Illustrations"",
            ""enabled"": true,
            ""position"": 7,
            ""steamId"": ""2986496756""
        },
        {
            ""displayName"": ""Battle Backgrounds"",
            ""enabled"": true,
            ""position"": 8,
            ""steamId"": ""2986982581""
        },
        {
            ""displayName"": ""Beautiful Portraits"",
            ""enabled"": true,
            ""position"": 9,
            ""steamId"": ""2700696193""
        },
        {
            ""displayName"": ""[KET] Court Environments"",
            ""enabled"": true,
            ""position"": 10,
            ""steamId"": ""3008532032""
        },
        {
            ""displayName"": ""Brighter Portraits Final Version"",
            ""enabled"": true,
            ""position"": 11,
            ""steamId"": ""2845969254""
        },
        {
            ""displayName"": ""MONIKER"",
            ""enabled"": true,
            ""position"": 12,
            ""steamId"": ""2974569755""
        },
        {
            ""displayName"": ""Clear Artifact Levels"",
            ""enabled"": true,
            ""position"": 13,
            ""steamId"": ""2748508571""
        },
        {
            ""displayName"": ""Configurable News Feed - Updated"",
            ""enabled"": true,
            ""position"": 14,
            ""steamId"": ""2906140118""
        },
        {
            ""displayName"": ""Clear Notifications"",
            ""enabled"": true,
            ""position"": 15,
            ""steamId"": ""2261468688""
        },
        {
            ""displayName"": ""Enhanced Dynasty Tree Viewer"",
            ""enabled"": true,
            ""position"": 16,
            ""steamId"": ""2427934113""
        },
        {
            ""displayName"": ""Knight Manager Continued"",
            ""enabled"": true,
            ""position"": 17,
            ""steamId"": ""2974850904""
        },
        {
            ""displayName"": ""Patrum Scuta"",
            ""enabled"": true,
            ""position"": 18,
            ""steamId"": ""2877995588""
        },
        {
            ""displayName"": ""Patrum Scuta Expanded"",
            ""enabled"": true,
            ""position"": 19,
            ""steamId"": ""2904116708""
        },
        {
            ""displayName"": ""Nameplates"",
            ""enabled"": true,
            ""position"": 20,
            ""steamId"": ""2220762808""
        },
        {
            ""displayName"": ""Hostile Scheme Exposure Improvement"",
            ""enabled"": true,
            ""position"": 21,
            ""steamId"": ""2920479099""
        },
        {
            ""displayName"": ""Invite Debutantes"",
            ""enabled"": true,
            ""position"": 22,
            ""steamId"": ""2677152091""
        },
        {
            ""displayName"": ""Invite Nobles"",
            ""enabled"": true,
            ""position"": 23,
            ""steamId"": ""2686352443""
        },
        {
            ""displayName"": ""More Interactive Vassals"",
            ""enabled"": true,
            ""position"": 24,
            ""steamId"": ""2712590542""
        },
        {
            ""displayName"": ""Warden Vassal Contract"",
            ""enabled"": true,
            ""position"": 25,
            ""steamId"": ""2683654050""
        },
        {
            ""displayName"": ""Great Empire Wars"",
            ""enabled"": true,
            ""position"": 26,
            ""steamId"": ""2688782754""
        },
        {
            ""displayName"": ""Better Rebellions"",
            ""enabled"": true,
            ""position"": 27,
            ""steamId"": ""2921911789""
        },
        {
            ""displayName"": ""Stressful Conquests"",
            ""enabled"": true,
            ""position"": 28,
            ""steamId"": ""2976500950""
        },
        {
            ""displayName"": ""Raid Event Expanded"",
            ""enabled"": true,
            ""position"": 29,
            ""steamId"": ""2865758328""
        },
        {
            ""displayName"": ""Regional Travel Events"",
            ""enabled"": true,
            ""position"": 30,
            ""steamId"": ""3000657129""
        },
        {
            ""displayName"": ""Population Control (Reduce late-game lag)"",
            ""enabled"": true,
            ""position"": 31,
            ""steamId"": ""2276469612""
        },
        {
            ""displayName"": ""Warriors without Wombs: No More Pregnant Knights!"",
            ""enabled"": true,
            ""position"": 32,
            ""steamId"": ""2980522731""
        },
        {
            ""displayName"": ""To Live And Learn"",
            ""enabled"": true,
            ""position"": 33,
            ""steamId"": ""2924005232""
        },
        {
            ""displayName"": ""Education Automation"",
            ""enabled"": true,
            ""position"": 34,
            ""steamId"": ""2879799963""
        },
        {
            ""displayName"": ""Ward Limit Based On Learning"",
            ""enabled"": true,
            ""position"": 35,
            ""steamId"": ""2906654841""
        },
        {
            ""displayName"": ""Better AI Education"",
            ""enabled"": true,
            ""position"": 36,
            ""steamId"": ""2753934263""
        },
        {
            ""displayName"": ""Ward Limit + Better AI Education Compatch"",
            ""enabled"": true,
            ""position"": 37,
            ""steamId"": ""2906656010""
        },
        {
            ""displayName"": ""Better Marriage (AI)"",
            ""enabled"": true,
            ""position"": 38,
            ""steamId"": ""2749533543""
        },
        {
            ""displayName"": ""Councillor's experience trait"",
            ""enabled"": true,
            ""position"": 39,
            ""steamId"": ""2721974781""
        },
        {
            ""displayName"": ""Inspirational"",
            ""enabled"": true,
            ""position"": 40,
            ""steamId"": ""2783743664""
        },
        {
            ""displayName"": ""Dynamic Lifestyle XP Redux (Lite)"",
            ""enabled"": true,
            ""position"": 41,
            ""steamId"": ""2986710399""
        },
        {
            ""displayName"": ""[KET] Population Variations"",
            ""enabled"": true,
            ""position"": 42,
            ""steamId"": ""2894033194""
        },
        {
            ""displayName"": ""Sawwhet's Court Position Mod Pack"",
            ""enabled"": true,
            ""position"": 43,
            ""steamId"": ""3000869291""
        },
        {
            ""displayName"": ""Houses Traditions"",
            ""enabled"": true,
            ""position"": 44,
            ""steamId"": ""2590650832""
        },
        {
            ""displayName"": ""More Legacies"",
            ""enabled"": true,
            ""position"": 45,
            ""steamId"": ""2859278694""
        },
        {
            ""displayName"": ""More Legacies + House Traditions Patch"",
            ""enabled"": true,
            ""position"": 46,
            ""steamId"": ""2866745171""
        },
        {
            ""displayName"": ""More Legacies Art + Submod"",
            ""enabled"": true,
            ""position"": 47,
            ""steamId"": ""2977838440""
        },
        {
            ""displayName"": ""Medieval Arts"",
            ""enabled"": true,
            ""position"": 48,
            ""steamId"": ""2452585382""
        },
        {
            ""displayName"": ""Medieval Arts - More Special Buildings"",
            ""enabled"": true,
            ""position"": 49,
            ""steamId"": ""2692079378""
        },
        {
            ""displayName"": ""Cities of Wonder 3"",
            ""enabled"": true,
            ""position"": 50,
            ""steamId"": ""2901477267""
        },
        {
            ""displayName"": ""VIET Events - A Flavor and Immersion Event Mod"",
            ""enabled"": true,
            ""position"": 51,
            ""steamId"": ""2227658180""
        },
        {
            ""displayName"": ""Succession Expanded"",
            ""enabled"": true,
            ""position"": 52,
            ""steamId"": ""2650385452""
        },
        {
            ""displayName"": ""Social Relations Expanded (SRE)"",
            ""enabled"": true,
            ""position"": 53,
            ""steamId"": ""2825977309""
        },
        {
            ""displayName"": ""Inheritable Relations"",
            ""enabled"": true,
            ""position"": 54,
            ""steamId"": ""2829009590""
        },
        {
            ""displayName"": ""Holding Sprawl"",
            ""enabled"": true,
            ""position"": 55,
            ""steamId"": ""2818728722""
        },
        {
            ""displayName"": ""Regional Immersion and Cultural Enrichment (RICE)"",
            ""enabled"": true,
            ""position"": 56,
            ""steamId"": ""2273832430""
        },
        {
            ""displayName"": ""Community Flavor Pack"",
            ""enabled"": true,
            ""position"": 57,
            ""steamId"": ""2220098919""
        },
        {
            ""displayName"": ""Ethnicities & Portraits Expanded"",
            ""enabled"": true,
            ""position"": 58,
            ""steamId"": ""2507209632""
        },
        {
            ""displayName"": ""CFP + EPE Compatibility Patch"",
            ""enabled"": true,
            ""position"": 59,
            ""steamId"": ""2996881191""
        },
        {
            ""displayName"": ""RICE + EPE Compatibility Patch"",
            ""enabled"": true,
            ""position"": 60,
            ""steamId"": ""2553043828""
        },
        {
            ""displayName"": ""Unit Packs Expanded"",
            ""enabled"": true,
            ""position"": 61,
            ""steamId"": ""2818979385""
        },
        {
            ""displayName"": ""Traditions Art +"",
            ""enabled"": true,
            ""position"": 62,
            ""steamId"": ""2976385354""
        },
        {
            ""displayName"": ""Traditions Art + Medieval Arts submod"",
            ""enabled"": true,
            ""position"": 63,
            ""steamId"": ""2992308709""
        },
        {
            ""displayName"": ""Traditions Art + Rice submod"",
            ""enabled"": true,
            ""position"": 64,
            ""steamId"": ""2990017583""
        },
        {
            ""displayName"": ""Chat GPT Flavor Pack"",
            ""enabled"": true,
            ""position"": 65,
            ""steamId"": ""3006888930""
        },
        {
            ""displayName"": ""Balanced Royal Court for Dukes"",
            ""enabled"": true,
            ""position"": 66,
            ""steamId"": ""3006877184""
        },
        {
            ""displayName"": ""UCS Petty inheritable Traits (standalone)"",
            ""enabled"": true,
            ""position"": 67,
            ""steamId"": ""2934189139""
        },
        {
            ""displayName"": ""UCS Rellom's Overhauled Traits (standalone)"",
            ""enabled"": true,
            ""position"": 68,
            ""steamId"": ""2934189332""
        },
        {
            ""displayName"": ""UCS Rellom's New Traits (standalone)"",
            ""enabled"": true,
            ""position"": 69,
            ""steamId"": ""2934189458""
        },
        {
            ""displayName"": ""UCS - Attributes/Ethos Matters! (discontinued)"",
            ""enabled"": true,
            ""position"": 70,
            ""steamId"": ""3006987174""
        },
        {
            ""displayName"": ""Foundational Framework"",
            ""enabled"": true,
            ""position"": 71,
            ""steamId"": ""2975079361""
        },
        {
            ""displayName"": ""Trick or Trait"",
            ""enabled"": true,
            ""position"": 72,
            ""steamId"": ""2664692789""
        },
        {
            ""displayName"": ""Search & Trade Artifacts"",
            ""enabled"": true,
            ""position"": 73,
            ""steamId"": ""2962238514""
        },
        {
            ""displayName"": ""The Catholic Trinity 1.9.2 \""Lance\"""",
            ""enabled"": true,
            ""position"": 74,
            ""steamId"": ""2730456007""
        },
        {
            ""displayName"": ""Crusader Wars 0.9.6.2"",
            ""enabled"": true,
            ""position"": 75,
            ""steamId"": ""2977969008""
        },
        {
            ""displayName"": ""obfusCKate - Hidden Information"",
            ""enabled"": true,
            ""position"": 76,
            ""steamId"": ""2874007571""
        },
        {
            ""displayName"": ""ObfusCKate + CW Compatibility Patch"",
            ""enabled"": true,
            ""position"": 77,
            ""steamId"": ""3010117969""
        },
        {
            ""displayName"": ""ObfusCKate + KMC Compatibility Patch"",
            ""enabled"": true,
            ""position"": 78,
            ""steamId"": ""3010131193""
        },
        {
            ""displayName"": ""ObfusCKate + CT Compatibility Patch"",
            ""enabled"": true,
            ""position"": 79,
            ""steamId"": ""3014365752""
        }
    ]
}"
FT1dJFYS,CC: Inventory Test,QarthO,Lua,Thursday 3rd of August 2023 09:04:44 PM CDT,"player = peripheral.find(""inventoryManager"")

for slot in pairs(player.list()) do
    player.removeItemFromPlayer(""up"", 64, slot)
end"
m0hTN3Eh,Sokoban Prototype,Ayab_,C++,Thursday 3rd of August 2023 08:58:34 PM CDT,"#include <iostream>
using namespace std;


int pushbox(int player_x, int player_y, int boxes_x[], int boxes_y[], int offset_x, int offset_y){
    int y = -1;
    for(int a = 0; a < 4; a+=1){
        if(player_x == boxes_x[a] && player_y == boxes_y[a]){ //Determins if the player is on the way of a box
            for(int b = 0; b < 4; b+=1){ //Checks if that box also has another box in the way
                if(boxes_x[a] == boxes_x[b] + offset_x && boxes_y[a] == boxes_y[b] + offset_y && a != b){
                    y = -2;
                    return y;
                }
            }
            y = a;
            return y;
        }
    }
    return y;
}

void show(int border_x,int border_y, int player_x, int player_y, int boxes_x[], int boxes_y[], int goal_x, int goal_y){
    //shows the whole grid
bool box = false;
    for(int x = 0; x < border_x; x+=1){
        for(int y = 0; y < border_y; y+=1){
            box = false;
            for(int z = 0; z < 4; z+=1){
                if(x == boxes_x[z] && y == boxes_y[z]){
                    box = true;
                }
            }
            if(box){
                cout << "" X""; //box
            }else if(x == player_x && y == player_y){
                cout << "" O""; //playerr
            }else if(x == goal_x && y == goal_y){
                cout << "" Z""; //goal (for box)
            }else{
                cout << "" -""; //empty
            }
        }
        cout << endl;
    }
}

bool finished(int boxes_x[], int boxes_y[], int goal_x, int goal_y){ //Checks if a box is in the goal (not working)
    for(int a = 0; a < 4; a+=1){
        if(boxes_x[a] != goal_x || boxes_y[a] != goal_y){
            return true;
        }
    }
    return false;

}
int main()
{
    char input; bool boxin = true;
    int allowpush;
    int border_x = 10, border_y = 10;
    int player_x = 5, player_y = 5;
    int boxes_x[4] = {6, 2, 5, 6};
    int boxes_y[4] = {6, 8, 7, 4};
    int goal_x = 3, goal_y = 2;
    boxin = finished(boxes_x, boxes_y, goal_x, goal_y);
    while(boxin){
        show(border_x, border_y, player_x, player_y, boxes_x, boxes_y, goal_x, goal_y);
        cout << endl;
        cout << ""move: WASD"";
        cout << endl << ""Input: "";
        cin >> input;
        if(input == 'W' || input == 'w'){
            if(player_x != 0){
                player_x -= 1;
            }

            allowpush = pushbox(player_x, player_y, boxes_x, boxes_y, 1, 0);
            if(allowpush != -1){
                if(allowpush == -2){
                    player_x += 1;
                }else if(boxes_x[allowpush] != 0){
                    boxes_x[allowpush] -= 1;
                }else{
                    player_x += 1;
                }
            }
        }else if(input == 'S' || input == 's'){
            if(player_x != border_x-1){
                player_x += 1;
            }
            allowpush = pushbox(player_x, player_y, boxes_x, boxes_y, -1, 0);
            if(allowpush != -1){
                if(allowpush == -2){
                    player_x -= 1;
                }else if(boxes_x[allowpush] != border_x-1){
                    boxes_x[allowpush] += 1;
                }else{
                    player_x -= 1;
                }
            }
        }else if(input == 'A' || input == 'a'){
            if(player_y != 0){
                player_y -= 1;
            }
            allowpush = pushbox(player_x, player_y, boxes_x, boxes_y, 0, 1);
            if(allowpush != -1){
                if(allowpush == -2){
                    player_y += 1;
                }else if(boxes_y[allowpush] != 0){
                    boxes_y[allowpush] -= 1;
                }else{
                    player_y += 1;
                }
            }
        }else if(input == 'D' || input == 'd'){
            if(player_y != border_y-1){
                player_y += 1;
            }
            allowpush = pushbox(player_x, player_y, boxes_x, boxes_y, 0, -1);
            if(allowpush != -1){
                if(allowpush == -2){
                    player_y -= 1;
                }else if(boxes_y[allowpush] != border_y-1){
                    boxes_y[allowpush] += 1;
                }else{
                    player_y -= 1;
                }
            }
        }
        boxin = finished(boxes_x, boxes_y, goal_x, goal_y);
        system(""CLS"");
    }
    show(border_x, border_y, player_x, player_y, boxes_x, boxes_y, goal_x, goal_y);
    cout << ""Congardulations!"" << endl;
    return 0;
}
"
9MNzM8Uv,Gopher II,danielvitor23,C++,Thursday 3rd of August 2023 08:53:46 PM CDT,"#include <bits/stdc++.h>
#define fi first
#define se second

using namespace std;
using ftype = long double;

const ftype eps = 1e-9;

int n, k;

vector<vector<int>> gr;
vector<int> mt;
vector<bool> used;

bool try_kuhn(int v) {
	if (used[v]) return false;
	used[v] = true;
	for (int to : gr[v]) {
		if (mt[to] == -1 or try_kuhn(mt[to])) {
			mt[to] = v;
			return true;
		}
	}
	return false;
}

ftype getDistance(ftype a, ftype b, ftype c, ftype d) {
  return sqrtl((a - c) * (a - c) + (b - d) * (b - d));
}

int main() {

  int s, v;
  while (cin >> n >> k >> s >> v and n) {
    vector<pair<ftype, ftype>> coord, coordHoles;

    gr.assign(n + k, vector<int>());
    used.assign(n + k, false);

    for (int i = 0; i < n; ++i) {
      ftype a, b; cin >> a >> b;
      coord.push_back({a, b});
    }

    for (int i = 0; i < k; ++i) {
      ftype a, b; cin >> a >> b;
      coordHoles.push_back({a, b});
    }

    for (int i = 0; i < n; ++i) {
      for (int j = 0; j < k; ++j) {
        ftype distance = getDistance(coord[i].fi, coord[i].se, coordHoles[j].fi, coordHoles[j].se);
        if (distance <= (ftype)s * v+eps) {
          gr[i].push_back(n + j);
          gr[n + j].push_back(i);
        }
      }
    }

    mt.assign(n + k, -1);
    vector<bool> used1(n, false);

    for (int v = 0; v < n; ++v) {
      for (int to : gr[v]) {
        if (mt[to] == -1) {
          mt[to] = v;
          used1[v] = true;
          break;
        }
      }
    }

    int cnt = 0;
    for (int v = 0; v < n + k; ++v) {
      if (used1[v]) continue;
      used.assign(n + k, false);
      int r = try_kuhn(v);
      // cout << r << '\n';
      cnt += r;
    }

    // for (int i = 0; i < n + k; ++i)
    //   if (mt[i] != -1)
    //     cout << mt[i] << ' ' << i << '\n';

    // cout << cnt << '\n';
    cout << max(0, n-cnt) << '\n';
  }

}"
4HGkDK3U,VideoTube,phpface,PHP,Thursday 3rd of August 2023 08:27:59 PM CDT,"add_filter( 'do_ajax_submit_video_errors', function( $errors, $data ){

	$data = wp_parse_args( $data, array(
		'_thumbnail_id'	=>	0
	) );

	if( ! $data['_thumbnail_id'] ){
		$errors->add(
			'no_thumbnail',
			esc_html__( 'Thumbnail image is required', 'videotube' )
		);
	}

	return $errors;

}, 10, 2 );"
bKaPDiRJ,Crusader Wars Plus+ Playset 1.3.4,MellyKusjes,JSON,Thursday 3rd of August 2023 08:25:04 PM CDT,"{
    ""game"": ""ck3"",
    ""name"": ""Crusader Wars Plus+"",
    ""mods"": [
        {
            ""displayName"": ""Unofficial Patch"",
            ""enabled"": true,
            ""position"": 0,
            ""steamId"": ""2871648329""
        },
        {
            ""displayName"": ""Kingdom Come: Deliverance - Mood Music"",
            ""enabled"": true,
            ""position"": 1,
            ""steamId"": ""2991670034""
        },
        {
            ""displayName"": ""Crusader Kings II Music - Complete"",
            ""enabled"": true,
            ""position"": 2,
            ""steamId"": ""2362033330""
        },
        {
            ""displayName"": ""Ultimate Graphics Collection (Reloaded-Lite)"",
            ""enabled"": true,
            ""position"": 3,
            ""steamId"": ""2974625246""
        },
        {
            ""displayName"": ""IR Terrain Fantasy295 version"",
            ""enabled"": true,
            ""position"": 4,
            ""steamId"": ""2919243647""
        },
        {
            ""displayName"": ""Simple border 简洁的边境线"",
            ""enabled"": true,
            ""position"": 5,
            ""steamId"": ""2749577487""
        },
        {
            ""displayName"": ""better camera zoom 更好的镜头缩放"",
            ""enabled"": true,
            ""position"": 6,
            ""steamId"": ""2243723476""
        },
        {
            ""displayName"": ""More Background Illustrations"",
            ""enabled"": true,
            ""position"": 7,
            ""steamId"": ""2986496756""
        },
        {
            ""displayName"": ""Battle Backgrounds"",
            ""enabled"": true,
            ""position"": 8,
            ""steamId"": ""2986982581""
        },
        {
            ""displayName"": ""Beautiful Portraits"",
            ""enabled"": true,
            ""position"": 9,
            ""steamId"": ""2700696193""
        },
        {
            ""displayName"": ""[KET] Court Environments"",
            ""enabled"": true,
            ""position"": 10,
            ""steamId"": ""3008532032""
        },
        {
            ""displayName"": ""Brighter Portraits Final Version"",
            ""enabled"": true,
            ""position"": 11,
            ""steamId"": ""2845969254""
        },
        {
            ""displayName"": ""MONIKER"",
            ""enabled"": true,
            ""position"": 12,
            ""steamId"": ""2974569755""
        },
        {
            ""displayName"": ""Clear Artifact Levels"",
            ""enabled"": true,
            ""position"": 13,
            ""steamId"": ""2748508571""
        },
        {
            ""displayName"": ""Configurable News Feed - Updated"",
            ""enabled"": true,
            ""position"": 14,
            ""steamId"": ""2906140118""
        },
        {
            ""displayName"": ""Clear Notifications"",
            ""enabled"": true,
            ""position"": 15,
            ""steamId"": ""2261468688""
        },
        {
            ""displayName"": ""Enhanced Dynasty Tree Viewer"",
            ""enabled"": true,
            ""position"": 16,
            ""steamId"": ""2427934113""
        },
        {
            ""displayName"": ""Knight Manager Continued"",
            ""enabled"": true,
            ""position"": 17,
            ""steamId"": ""2974850904""
        },
        {
            ""displayName"": ""Patrum Scuta"",
            ""enabled"": true,
            ""position"": 18,
            ""steamId"": ""2877995588""
        },
        {
            ""displayName"": ""Patrum Scuta Expanded"",
            ""enabled"": true,
            ""position"": 19,
            ""steamId"": ""2904116708""
        },
        {
            ""displayName"": ""Nameplates"",
            ""enabled"": true,
            ""position"": 20,
            ""steamId"": ""2220762808""
        },
        {
            ""displayName"": ""Hostile Scheme Exposure Improvement"",
            ""enabled"": true,
            ""position"": 21,
            ""steamId"": ""2920479099""
        },
        {
            ""displayName"": ""Invite Debutantes"",
            ""enabled"": true,
            ""position"": 22,
            ""steamId"": ""2677152091""
        },
        {
            ""displayName"": ""Invite Nobles"",
            ""enabled"": true,
            ""position"": 23,
            ""steamId"": ""2686352443""
        },
        {
            ""displayName"": ""More Interactive Vassals"",
            ""enabled"": true,
            ""position"": 24,
            ""steamId"": ""2712590542""
        },
        {
            ""displayName"": ""Warden Vassal Contract"",
            ""enabled"": true,
            ""position"": 25,
            ""steamId"": ""2683654050""
        },
        {
            ""displayName"": ""Great Empire Wars"",
            ""enabled"": true,
            ""position"": 26,
            ""steamId"": ""2688782754""
        },
        {
            ""displayName"": ""Better Rebellions"",
            ""enabled"": true,
            ""position"": 27,
            ""steamId"": ""2921911789""
        },
        {
            ""displayName"": ""Stressful Conquests"",
            ""enabled"": true,
            ""position"": 28,
            ""steamId"": ""2976500950""
        },
        {
            ""displayName"": ""Raid Event Expanded"",
            ""enabled"": true,
            ""position"": 29,
            ""steamId"": ""2865758328""
        },
        {
            ""displayName"": ""Regional Travel Events"",
            ""enabled"": true,
            ""position"": 30,
            ""steamId"": ""3000657129""
        },
        {
            ""displayName"": ""Population Control (Reduce late-game lag)"",
            ""enabled"": true,
            ""position"": 31,
            ""steamId"": ""2276469612""
        },
        {
            ""displayName"": ""Warriors without Wombs: No More Pregnant Knights!"",
            ""enabled"": true,
            ""position"": 32,
            ""steamId"": ""2980522731""
        },
        {
            ""displayName"": ""Farewell, Chaplain!"",
            ""enabled"": true,
            ""position"": 33,
            ""steamId"": ""2453009990""
        },
        {
            ""displayName"": ""To Live And Learn"",
            ""enabled"": true,
            ""position"": 34,
            ""steamId"": ""2924005232""
        },
        {
            ""displayName"": ""Education Automation"",
            ""enabled"": true,
            ""position"": 35,
            ""steamId"": ""2879799963""
        },
        {
            ""displayName"": ""Ward Limit Based On Learning"",
            ""enabled"": true,
            ""position"": 36,
            ""steamId"": ""2906654841""
        },
        {
            ""displayName"": ""Better AI Education"",
            ""enabled"": true,
            ""position"": 37,
            ""steamId"": ""2753934263""
        },
        {
            ""displayName"": ""Ward Limit + Better AI Education Compatch"",
            ""enabled"": true,
            ""position"": 38,
            ""steamId"": ""2906656010""
        },
        {
            ""displayName"": ""Better Marriage (AI)"",
            ""enabled"": true,
            ""position"": 39,
            ""steamId"": ""2749533543""
        },
        {
            ""displayName"": ""Councillor's experience trait"",
            ""enabled"": true,
            ""position"": 40,
            ""steamId"": ""2721974781""
        },
        {
            ""displayName"": ""Inspirational"",
            ""enabled"": true,
            ""position"": 41,
            ""steamId"": ""2783743664""
        },
        {
            ""displayName"": ""Dynamic Lifestyle XP Redux (Lite)"",
            ""enabled"": true,
            ""position"": 42,
            ""steamId"": ""2986710399""
        },
        {
            ""displayName"": ""[KET] Population Variations"",
            ""enabled"": true,
            ""position"": 43,
            ""steamId"": ""2894033194""
        },
        {
            ""displayName"": ""Sawwhet's Court Position Mod Pack"",
            ""enabled"": true,
            ""position"": 44,
            ""steamId"": ""3000869291""
        },
        {
            ""displayName"": ""Houses Traditions"",
            ""enabled"": true,
            ""position"": 45,
            ""steamId"": ""2590650832""
        },
        {
            ""displayName"": ""More Legacies"",
            ""enabled"": true,
            ""position"": 46,
            ""steamId"": ""2859278694""
        },
        {
            ""displayName"": ""More Legacies + House Traditions Patch"",
            ""enabled"": true,
            ""position"": 47,
            ""steamId"": ""2866745171""
        },
        {
            ""displayName"": ""More Legacies Art + Submod"",
            ""enabled"": true,
            ""position"": 48,
            ""steamId"": ""2977838440""
        },
        {
            ""displayName"": ""Medieval Arts"",
            ""enabled"": true,
            ""position"": 49,
            ""steamId"": ""2452585382""
        },
        {
            ""displayName"": ""Medieval Arts - More Special Buildings"",
            ""enabled"": true,
            ""position"": 50,
            ""steamId"": ""2692079378""
        },
        {
            ""displayName"": ""Cities of Wonder 3"",
            ""enabled"": true,
            ""position"": 51,
            ""steamId"": ""2901477267""
        },
        {
            ""displayName"": ""VIET Events - A Flavor and Immersion Event Mod"",
            ""enabled"": true,
            ""position"": 52,
            ""steamId"": ""2227658180""
        },
        {
            ""displayName"": ""Succession Expanded"",
            ""enabled"": true,
            ""position"": 53,
            ""steamId"": ""2650385452""
        },
        {
            ""displayName"": ""Social Relations Expanded (SRE)"",
            ""enabled"": true,
            ""position"": 54,
            ""steamId"": ""2825977309""
        },
        {
            ""displayName"": ""Inheritable Relations"",
            ""enabled"": true,
            ""position"": 55,
            ""steamId"": ""2829009590""
        },
        {
            ""displayName"": ""Holding Sprawl"",
            ""enabled"": true,
            ""position"": 56,
            ""steamId"": ""2818728722""
        },
        {
            ""displayName"": ""Regional Immersion and Cultural Enrichment (RICE)"",
            ""enabled"": true,
            ""position"": 57,
            ""steamId"": ""2273832430""
        },
        {
            ""displayName"": ""Community Flavor Pack"",
            ""enabled"": true,
            ""position"": 58,
            ""steamId"": ""2220098919""
        },
        {
            ""displayName"": ""Ethnicities & Portraits Expanded"",
            ""enabled"": true,
            ""position"": 59,
            ""steamId"": ""2507209632""
        },
        {
            ""displayName"": ""CFP + EPE Compatibility Patch"",
            ""enabled"": true,
            ""position"": 60,
            ""steamId"": ""2996881191""
        },
        {
            ""displayName"": ""RICE + EPE Compatibility Patch"",
            ""enabled"": true,
            ""position"": 61,
            ""steamId"": ""2553043828""
        },
        {
            ""displayName"": ""Unit Packs Expanded"",
            ""enabled"": true,
            ""position"": 62,
            ""steamId"": ""2818979385""
        },
        {
            ""displayName"": ""Traditions Art +"",
            ""enabled"": true,
            ""position"": 63,
            ""steamId"": ""2976385354""
        },
        {
            ""displayName"": ""Traditions Art + Medieval Arts submod"",
            ""enabled"": true,
            ""position"": 64,
            ""steamId"": ""2992308709""
        },
        {
            ""displayName"": ""Traditions Art + Rice submod"",
            ""enabled"": true,
            ""position"": 65,
            ""steamId"": ""2990017583""
        },
        {
            ""displayName"": ""Chat GPT Flavor Pack"",
            ""enabled"": true,
            ""position"": 66,
            ""steamId"": ""3006888930""
        },
        {
            ""displayName"": ""Balanced Royal Court for Dukes"",
            ""enabled"": true,
            ""position"": 67,
            ""steamId"": ""3006877184""
        },
        {
            ""displayName"": ""UCS Petty inheritable Traits (standalone)"",
            ""enabled"": true,
            ""position"": 68,
            ""steamId"": ""2934189139""
        },
        {
            ""displayName"": ""UCS Rellom's Overhauled Traits (standalone)"",
            ""enabled"": true,
            ""position"": 69,
            ""steamId"": ""2934189332""
        },
        {
            ""displayName"": ""UCS Rellom's New Traits (standalone)"",
            ""enabled"": true,
            ""position"": 70,
            ""steamId"": ""2934189458""
        },
        {
            ""displayName"": ""UCS - Attributes/Ethos Matters! (discontinued)"",
            ""enabled"": true,
            ""position"": 71,
            ""steamId"": ""3006987174""
        },
        {
            ""displayName"": ""Foundational Framework"",
            ""enabled"": true,
            ""position"": 72,
            ""steamId"": ""2975079361""
        },
        {
            ""displayName"": ""Trick or Trait"",
            ""enabled"": true,
            ""position"": 73,
            ""steamId"": ""2664692789""
        },
        {
            ""displayName"": ""Search & Trade Artifacts"",
            ""enabled"": true,
            ""position"": 74,
            ""steamId"": ""2962238514""
        },
        {
            ""displayName"": ""The Catholic Trinity 1.9.2 \""Lance\"""",
            ""enabled"": true,
            ""position"": 75,
            ""steamId"": ""2730456007""
        },
        {
            ""displayName"": ""Crusader Wars 0.9.6.2"",
            ""enabled"": true,
            ""position"": 76,
            ""steamId"": ""2977969008""
        },
        {
            ""displayName"": ""obfusCKate - Hidden Information"",
            ""enabled"": true,
            ""position"": 77,
            ""steamId"": ""2874007571""
        },
        {
            ""displayName"": ""ObfusCKate + CW Compatibility Patch"",
            ""enabled"": true,
            ""position"": 78,
            ""steamId"": ""3010117969""
        },
        {
            ""displayName"": ""ObfusCKate + KMC Compatibility Patch"",
            ""enabled"": true,
            ""position"": 79,
            ""steamId"": ""3010131193""
        },
        {
            ""displayName"": ""ObfusCKate + CT Compatibility Patch"",
            ""enabled"": true,
            ""position"": 80,
            ""steamId"": ""3014365752""
        }
    ]
}"
yHghzwFg,slstatus dell config,PackRat-2017,VIM,Thursday 3rd of August 2023 07:58:54 PM CDT,"/* See LICENSE file for copyright and license details. */

/* interval between updates (in ms) */
const unsigned int interval = 1000;

/* text to show if no value can be retrieved */
static const char unknown_str[] = ""n/a"";

/* maximum output string length */
#define MAXLEN 2048

/*
 * function            description                     argument (example)
 *
 * battery_perc        battery percentage              battery name (BAT0)
 *                                                     NULL on OpenBSD/FreeBSD
 * battery_remaining   battery remaining HH:MM         battery name (BAT0)
 *                                                     NULL on OpenBSD/FreeBSD
 * battery_state       battery charging state          battery name (BAT0)
 *                                                     NULL on OpenBSD/FreeBSD
 * cat                 read arbitrary file             path
 * cpu_freq            cpu frequency in MHz            NULL
 * cpu_perc            cpu usage in percent            NULL
 * datetime            date and time                   format string (%F %T)
 * disk_free           free disk space in GB           mountpoint path (/)
 * disk_perc           disk usage in percent           mountpoint path (/)
 * disk_total          total disk space in GB          mountpoint path (/)
 * disk_used           used disk space in GB           mountpoint path (/)
 * entropy             available entropy               NULL
 * gid                 GID of current user             NULL
 * hostname            hostname                        NULL
 * ipv4                IPv4 address                    interface name (eth0)
 * ipv6                IPv6 address                    interface name (eth0)
 * kernel_release      `uname -r`                      NULL
 * keyboard_indicators caps/num lock indicators        format string (c?n?)
 *                                                     see keyboard_indicators.c
 * keymap              layout (variant) of current     NULL
 *                     keymap
 * load_avg            load average                    NULL
 * netspeed_rx         receive network speed           interface name (wlan0)
 * netspeed_tx         transfer network speed          interface name (wlan0)
 * num_files           number of files in a directory  path
 *                                                     (/home/foo/Inbox/cur)
 * ram_free            free memory in GB               NULL
 * ram_perc            memory usage in percent         NULL
 * ram_total           total memory size in GB         NULL
 * ram_used            used memory in GB               NULL
 * run_command         custom shell command            command (echo foo)
 * swap_free           free swap in GB                 NULL
 * swap_perc           swap usage in percent           NULL
 * swap_total          total swap size in GB           NULL
 * swap_used           used swap in GB                 NULL
 * temp                temperature in degree celsius   sensor file
 *                                                     (/sys/class/thermal/...)
 *                                                     NULL on OpenBSD
 *                                                     thermal zone on FreeBSD
 *                                                     (tz0, tz1, etc.)
 * uid                 UID of current user             NULL
 * uptime              system uptime                   NULL
 * username            username of current user        NULL
 * vol_perc            OSS/ALSA volume in percent      mixer file (/dev/mixer)
 *                                                     NULL on OpenBSD/FreeBSD
 * wifi_essid          WiFi ESSID                      interface name (wlan0)
 * wifi_perc           WiFi signal in percent          interface name (wlan0)
 */
static const struct arg args[] = {
	/* function format          argument */
	{ uptime,			""UP: %s    "",			NULL    },
	{ cpu_perc,			""CPU: %3s %%    "",		NULL    },
	{ load_avg,			""%s    "",				NULL    },
	{ temp,				""CPU: %3s °C    "",		""/sys/devices/platform/coretemp.0/hwmon/hwmon4/temp1_input"" },
	{ temp,				""SSD: %3s °C    "",		""/sys/devices/pci0000:00/0000:00:1d.4/0000:03:00.0/nvme/nvme0/hwmon0/temp1_input"" },
	{ ram_perc,			""MEM: %3s %%    "",		NULL    },
	{ battery_perc,		""BAT: %3s %%  "",		""BAT0""  },
	{ battery_state,	""%s    "",				""BAT0""  },
	{ wifi_perc,		""NET: %3s %%    "",		""wlp2s0""    },
	{ netspeed_tx,		""%6s    "",				""wlp2s0""    },
	{ netspeed_rx,		""%6s    "",				""wlp2s0""    },
	{ datetime,			""%s"",					""%a %e %b  %R  ""    },
};
"
r7FvSyup,Cannon,GoodNoodle,C#,Thursday 3rd of August 2023 07:57:52 PM CDT,"using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Cannon : MonoBehaviour
{
    public GameObject lavaRock;

    [SerializeField] public bool IsInstanciated;

    public PlayerController player;

    public int ballAmout = 3;

    public bool canShoot;

    public GameManager gameManager;


    private void Start()
    {
        canShoot = true;
        if (player != null)
        {
            player = FindObjectOfType<PlayerController>();
        }

    }
    private void Update()
    {
        if (!lavaRock.activeInHierarchy)
        {
            if (player != null)
            {
                StartCoroutine(SpawnLavaRock());
            }
        }
    }

    IEnumerator SpawnLavaRock()
    {
        if (canShoot)
        {
            if (Vector2.Distance(player.transform.position, this.transform.position) < 5)
            {

                if (!IsInstanciated)
                {
                    IsInstanciated = true;
                    ballAmout--;
                    Instantiate(lavaRock, transform.position, Quaternion.identity);
                    yield return new WaitForSeconds(1f);
                    IsInstanciated = false;
                }
            }
        }

        if(ballAmout <= 0)
        {
            canShoot= false;
            StopCoroutine(SpawnLavaRock());
            gameManager.EndGame();
        }
        
    }
   
}
"
J8bSG9ad,2023-08-03_stats.json,rdp_snitch,JSON,Thursday 3rd of August 2023 07:18:11 PM CDT,"{
  ""ip"": {
    ""85.14.32.53"": 7362,
    ""195.19.96.41"": 1419,
    ""16.162.172.33"": 2985,
    ""45.79.108.4"": 21,
    ""112.5.87.34"": 6,
    ""62.204.41.134"": 12,
    ""139.162.38.147"": 3,
    ""87.251.75.145"": 3,
    ""103.252.119.150"": 3,
    ""159.223.84.25"": 6,
    ""31.43.185.32"": 15,
    ""87.251.75.64"": 3,
    ""194.26.135.176"": 9,
    ""35.221.222.250"": 12,
    ""60.205.170.161"": 18,
    ""39.108.174.140"": 180,
    ""159.223.197.227"": 3,
    ""166.62.100.52"": 3,
    ""103.116.52.3"": 3,
    ""106.116.169.71"": 3,
    ""87.251.75.120"": 9,
    ""68.183.32.9"": 3,
    ""207.154.255.215"": 3,
    ""185.170.144.113"": 12,
    ""167.248.133.124"": 3,
    ""62.122.184.166"": 12,
    ""62.122.184.168"": 12,
    ""31.43.185.3"": 6,
    ""45.227.254.19"": 3,
    ""45.119.81.119"": 9,
    ""104.167.221.242"": 3,
    ""179.60.150.59"": 6,
    ""193.29.13.175"": 3,
    ""193.111.77.85"": 18,
    ""104.152.52.231"": 3,
    ""198.235.24.254"": 9,
    ""185.11.61.116"": 3,
    ""194.165.16.10"": 6,
    ""202.165.15.46"": 3,
    ""193.29.13.22"": 6,
    ""89.248.170.132"": 3,
    ""71.6.199.23"": 9,
    ""80.82.67.121"": 3,
    ""191.101.174.86"": 3,
    ""45.140.17.16"": 9,
    ""141.98.11.128"": 3
  },
  ""asn"": {
    ""AS34376"": 7362,
    ""AS12389"": 1419,
    ""AS16509"": 2985,
    ""AS63949"": 24,
    ""AS9808"": 6,
    ""AS59425"": 12,
    ""AS208091"": 15,
    ""AS64022"": 3,
    ""AS14061"": 15,
    ""AS211736"": 21,
    ""AS57523"": 36,
    ""AS396982"": 21,
    ""AS37963"": 198,
    ""AS26496"": 3,
    ""AS150830"": 3,
    ""AS4134"": 3,
    ""AS48080"": 12,
    ""AS398722"": 3,
    ""AS267784"": 3,
    ""AS131386"": 9,
    ""AS399045"": 3,
    ""AS211179"": 6,
    ""AS42397"": 9,
    ""AS60721"": 18,
    ""AS14987"": 3,
    ""AS48721"": 6,
    ""AS18206"": 3,
    ""AS202425"": 6,
    ""AS10439"": 9,
    ""AS32780"": 3,
    ""AS198953"": 9,
    ""AS209605"": 3
  },
  ""isp"": {
    ""Telecom Group"": 7362,
    ""PJSC Rostelecom"": 1419,
    ""Amazon.com"": 2985,
    ""Akamai Technologies, Inc."": 24,
    ""China Mobile"": 6,
    ""Horizon LLC"": 12,
    ""Xhost Internet Solutions LP"": 15,
    ""CLOUDWEBMANAGE"": 3,
    ""DigitalOcean, LLC"": 15,
    ""FOP Dmytro Nedilskyi"": 21,
    ""Chang Way Technologies Co. Limited"": 36,
    ""Google LLC"": 21,
    ""Hangzhou Alibaba Advertising Co"": 198,
    ""GoDaddy.com, LLC"": 3,
    ""Chieu Minh Company Limited"": 3,
    ""Chinanet"": 3,
    ""Dmitriy Panchenko"": 12,
    ""Censys, Inc."": 3,
    ""Flyservers S.A."": 9,
    ""Long Van System Solution"": 9,
    ""DediOutlet, LLC"": 3,
    ""Veraton Projects LTD"": 6,
    ""Bunea TELECOM SRL"": 9,
    ""Bursabil Teknoloji A.S."": 18,
    ""Rethem Hosting LLC"": 3,
    ""VADS Sdn Bhd"": 3,
    ""IP Volume inc"": 6,
    ""CariNet, Inc."": 9,
    ""Hosting Services"": 3,
    ""Proton66 OOO"": 9,
    ""UAB Host Baltic"": 3
  },
  ""org"": {
    ""TelecomGroup"": 7362,
    ""PJSC Rostelecom"": 1419,
    ""AWS EC2 (ap-east-1)"": 2985,
    ""Linode"": 21,
    ""China Mobile Communications Corporation"": 6,
    ""Horizon LLC"": 12,
    ""Linode, LLC"": 3,
    ""Xhost Internet Solutions"": 15,
    ""Unknown"": 15,
    ""DigitalOcean, LLC"": 15,
    ""FOP Dmytro Nedilskyi"": 21,
    ""Chang Way Technologies Co. Limited"": 33,
    ""Google Cloud (asia-east1)"": 12,
    ""Aliyun Computing Co., LTD"": 198,
    ""GoDaddy.com, LLC"": 3,
    ""Chieu Minh Company Limited"": 3,
    ""Chinanet HE"": 3,
    ""Xhostis"": 12,
    ""Censys, Inc."": 3,
    ""UAB Host Baltic"": 3,
    ""DediOutlet, LLC"": 3,
    ""Maxwell Group LTD"": 6,
    ""Bunea TELECOM SRL"": 9,
    ""Hostumo Bilisim Teknolojileri Sanayi Ticaret Limited Sirketi"": 18,
    ""Rethem Hosting LLC"": 3,
    ""Palo Alto Networks, Inc"": 9,
    ""Starcrecium Limited"": 3,
    ""Flyservers S.A"": 6,
    ""TM VADS"": 3,
    ""Quasi Networks LTD."": 3,
    ""CariNet, Inc."": 9,
    ""IP Volume inc"": 3,
    ""Ipxo"": 3,
    ""Proton66 LLC"": 9
  },
  ""regionName"": {
    ""Blagoevgrad"": 7362,
    ""St.-Petersburg"": 1419,
    ""Central and Western"": 2985,
    ""California"": 42,
    ""Guangdong"": 186,
    ""Moscow"": 66,
    ""North West"": 3,
    ""England"": 18,
    ""Central and Western District"": 3,
    ""South West"": 6,
    ""North Holland"": 27,
    ""Taiwan"": 12,
    ""Beijing"": 18,
    ""Arizona"": 3,
    ""Ho Chi Minh"": 12,
    ""Hebei"": 3,
    ""Hesse"": 3,
    ""Michigan"": 3,
    ""Vilnius"": 3,
    ""Missouri"": 3,
    ""Distrito Federal"": 6,
    ""Timis"": 9,
    ""Bursa Province"": 18,
    ""Illinois"": 3,
    ""Chechnya"": 3,
    ""Kaunas"": 9,
    ""Kuala Lumpur"": 3,
    ""New Jersey"": 3
  },
  ""country"": {
    ""Bulgaria"": 7362,
    ""Russia"": 1488,
    ""Hong Kong"": 2988,
    ""United States"": 57,
    ""China"": 207,
    ""Singapore"": 9,
    ""United Kingdom"": 18,
    ""Netherlands"": 27,
    ""Taiwan"": 12,
    ""Vietnam"": 12,
    ""Germany"": 3,
    ""Lithuania"": 12,
    ""Venezuela"": 6,
    ""Romania"": 9,
    ""Turkey"": 18,
    ""Malaysia"": 3
  },
  ""account"": {
    ""hello"": 12057,
    ""(empty)"": 15,
    ""Test"": 12,
    ""Administr"": 63,
    ""Almaz"": 3,
    ""nmap"": 6,
    ""Domain"": 57,
    ""eFkXSeNky"": 3,
    ""wPohBk"": 3,
    ""MAGTYf"": 3,
    ""root"": 9
  },
  ""keyboard"": {
    ""Unknown"": 12231
  },
  ""client_build"": {
    ""Unknown"": 12231
  },
  ""client_name"": {
    ""Unknown"": 12231
  },
  ""ip_type"": {
    ""Unknown"": 8934,
    ""hosting"": 3273,
    ""mobile"": 9,
    ""hosting & proxy"": 15
  }
}"
rc37NRLN,2023-08-03_stats.json,rdp_snitch,JSON,Thursday 3rd of August 2023 07:16:06 PM CDT,"{
  ""ip"": {
    ""85.14.32.53"": 4908,
    ""195.19.96.41"": 946,
    ""16.162.172.33"": 1990,
    ""45.79.108.4"": 14,
    ""112.5.87.34"": 4,
    ""62.204.41.134"": 8,
    ""139.162.38.147"": 2,
    ""87.251.75.145"": 2,
    ""103.252.119.150"": 2,
    ""159.223.84.25"": 4,
    ""31.43.185.32"": 10,
    ""87.251.75.64"": 2,
    ""194.26.135.176"": 6,
    ""35.221.222.250"": 8,
    ""60.205.170.161"": 12,
    ""39.108.174.140"": 120,
    ""159.223.197.227"": 2,
    ""166.62.100.52"": 2,
    ""103.116.52.3"": 2,
    ""106.116.169.71"": 2,
    ""87.251.75.120"": 6,
    ""68.183.32.9"": 2,
    ""207.154.255.215"": 2,
    ""185.170.144.113"": 8,
    ""167.248.133.124"": 2,
    ""62.122.184.166"": 8,
    ""62.122.184.168"": 8,
    ""31.43.185.3"": 4,
    ""45.227.254.19"": 2,
    ""45.119.81.119"": 6,
    ""104.167.221.242"": 2,
    ""179.60.150.59"": 4,
    ""193.29.13.175"": 2,
    ""193.111.77.85"": 12,
    ""104.152.52.231"": 2,
    ""198.235.24.254"": 6,
    ""185.11.61.116"": 2,
    ""194.165.16.10"": 4,
    ""202.165.15.46"": 2,
    ""193.29.13.22"": 4,
    ""89.248.170.132"": 2,
    ""71.6.199.23"": 6,
    ""80.82.67.121"": 2,
    ""191.101.174.86"": 2,
    ""45.140.17.16"": 6,
    ""141.98.11.128"": 2
  },
  ""asn"": {
    ""AS34376"": 4908,
    ""AS12389"": 946,
    ""AS16509"": 1990,
    ""AS63949"": 16,
    ""AS9808"": 4,
    ""AS59425"": 8,
    ""AS208091"": 10,
    ""AS64022"": 2,
    ""AS14061"": 10,
    ""AS211736"": 14,
    ""AS57523"": 24,
    ""AS396982"": 14,
    ""AS37963"": 132,
    ""AS26496"": 2,
    ""AS150830"": 2,
    ""AS4134"": 2,
    ""AS48080"": 8,
    ""AS398722"": 2,
    ""AS267784"": 2,
    ""AS131386"": 6,
    ""AS399045"": 2,
    ""AS211179"": 4,
    ""AS42397"": 6,
    ""AS60721"": 12,
    ""AS14987"": 2,
    ""AS48721"": 4,
    ""AS18206"": 2,
    ""AS202425"": 4,
    ""AS10439"": 6,
    ""AS32780"": 2,
    ""AS198953"": 6,
    ""AS209605"": 2
  },
  ""isp"": {
    ""Telecom Group"": 4908,
    ""PJSC Rostelecom"": 946,
    ""Amazon.com"": 1990,
    ""Akamai Technologies, Inc."": 16,
    ""China Mobile"": 4,
    ""Horizon LLC"": 8,
    ""Xhost Internet Solutions LP"": 10,
    ""CLOUDWEBMANAGE"": 2,
    ""DigitalOcean, LLC"": 10,
    ""FOP Dmytro Nedilskyi"": 14,
    ""Chang Way Technologies Co. Limited"": 24,
    ""Google LLC"": 14,
    ""Hangzhou Alibaba Advertising Co"": 132,
    ""GoDaddy.com, LLC"": 2,
    ""Chieu Minh Company Limited"": 2,
    ""Chinanet"": 2,
    ""Dmitriy Panchenko"": 8,
    ""Censys, Inc."": 2,
    ""Flyservers S.A."": 6,
    ""Long Van System Solution"": 6,
    ""DediOutlet, LLC"": 2,
    ""Veraton Projects LTD"": 4,
    ""Bunea TELECOM SRL"": 6,
    ""Bursabil Teknoloji A.S."": 12,
    ""Rethem Hosting LLC"": 2,
    ""VADS Sdn Bhd"": 2,
    ""IP Volume inc"": 4,
    ""CariNet, Inc."": 6,
    ""Hosting Services"": 2,
    ""Proton66 OOO"": 6,
    ""UAB Host Baltic"": 2
  },
  ""org"": {
    ""TelecomGroup"": 4908,
    ""PJSC Rostelecom"": 946,
    ""AWS EC2 (ap-east-1)"": 1990,
    ""Linode"": 14,
    ""China Mobile Communications Corporation"": 4,
    ""Horizon LLC"": 8,
    ""Linode, LLC"": 2,
    ""Xhost Internet Solutions"": 10,
    ""Unknown"": 10,
    ""DigitalOcean, LLC"": 10,
    ""FOP Dmytro Nedilskyi"": 14,
    ""Chang Way Technologies Co. Limited"": 22,
    ""Google Cloud (asia-east1)"": 8,
    ""Aliyun Computing Co., LTD"": 132,
    ""GoDaddy.com, LLC"": 2,
    ""Chieu Minh Company Limited"": 2,
    ""Chinanet HE"": 2,
    ""Xhostis"": 8,
    ""Censys, Inc."": 2,
    ""UAB Host Baltic"": 2,
    ""DediOutlet, LLC"": 2,
    ""Maxwell Group LTD"": 4,
    ""Bunea TELECOM SRL"": 6,
    ""Hostumo Bilisim Teknolojileri Sanayi Ticaret Limited Sirketi"": 12,
    ""Rethem Hosting LLC"": 2,
    ""Palo Alto Networks, Inc"": 6,
    ""Starcrecium Limited"": 2,
    ""Flyservers S.A"": 4,
    ""TM VADS"": 2,
    ""Quasi Networks LTD."": 2,
    ""CariNet, Inc."": 6,
    ""IP Volume inc"": 2,
    ""Ipxo"": 2,
    ""Proton66 LLC"": 6
  },
  ""regionName"": {
    ""Blagoevgrad"": 4908,
    ""St.-Petersburg"": 946,
    ""Central and Western"": 1990,
    ""California"": 28,
    ""Guangdong"": 124,
    ""Moscow"": 44,
    ""North West"": 2,
    ""England"": 12,
    ""Central and Western District"": 2,
    ""South West"": 4,
    ""North Holland"": 18,
    ""Taiwan"": 8,
    ""Beijing"": 12,
    ""Arizona"": 2,
    ""Ho Chi Minh"": 8,
    ""Hebei"": 2,
    ""Hesse"": 2,
    ""Michigan"": 2,
    ""Vilnius"": 2,
    ""Missouri"": 2,
    ""Distrito Federal"": 4,
    ""Timis"": 6,
    ""Bursa Province"": 12,
    ""Illinois"": 2,
    ""Chechnya"": 2,
    ""Kaunas"": 6,
    ""Kuala Lumpur"": 2,
    ""New Jersey"": 2
  },
  ""country"": {
    ""Bulgaria"": 4908,
    ""Russia"": 992,
    ""Hong Kong"": 1992,
    ""United States"": 38,
    ""China"": 138,
    ""Singapore"": 6,
    ""United Kingdom"": 12,
    ""Netherlands"": 18,
    ""Taiwan"": 8,
    ""Vietnam"": 8,
    ""Germany"": 2,
    ""Lithuania"": 8,
    ""Venezuela"": 4,
    ""Romania"": 6,
    ""Turkey"": 12,
    ""Malaysia"": 2
  },
  ""account"": {
    ""hello"": 8038,
    ""(empty)"": 10,
    ""Test"": 8,
    ""Administr"": 42,
    ""Almaz"": 2,
    ""nmap"": 4,
    ""Domain"": 38,
    ""eFkXSeNky"": 2,
    ""wPohBk"": 2,
    ""MAGTYf"": 2,
    ""root"": 6
  },
  ""keyboard"": {
    ""Unknown"": 8154
  },
  ""client_build"": {
    ""Unknown"": 8154
  },
  ""client_name"": {
    ""Unknown"": 8154
  },
  ""ip_type"": {
    ""Unknown"": 5956,
    ""hosting"": 2182,
    ""mobile"": 6,
    ""hosting & proxy"": 10
  }
}"
fU1XBW4C,2023-08-03_stats.json,rdp_snitch,JSON,Thursday 3rd of August 2023 07:15:09 PM CDT,"{
  ""ip"": {
    ""85.14.32.53"": 2454,
    ""195.19.96.41"": 473,
    ""16.162.172.33"": 995,
    ""45.79.108.4"": 7,
    ""112.5.87.34"": 2,
    ""62.204.41.134"": 4,
    ""139.162.38.147"": 1,
    ""87.251.75.145"": 1,
    ""103.252.119.150"": 1,
    ""159.223.84.25"": 2,
    ""31.43.185.32"": 5,
    ""87.251.75.64"": 1,
    ""194.26.135.176"": 3,
    ""35.221.222.250"": 4,
    ""60.205.170.161"": 6,
    ""39.108.174.140"": 60,
    ""159.223.197.227"": 1,
    ""166.62.100.52"": 1,
    ""103.116.52.3"": 1,
    ""106.116.169.71"": 1,
    ""87.251.75.120"": 3,
    ""68.183.32.9"": 1,
    ""207.154.255.215"": 1,
    ""185.170.144.113"": 4,
    ""167.248.133.124"": 1,
    ""62.122.184.166"": 4,
    ""62.122.184.168"": 4,
    ""31.43.185.3"": 2,
    ""45.227.254.19"": 1,
    ""45.119.81.119"": 3,
    ""104.167.221.242"": 1,
    ""179.60.150.59"": 2,
    ""193.29.13.175"": 1,
    ""193.111.77.85"": 6,
    ""104.152.52.231"": 1,
    ""198.235.24.254"": 3,
    ""185.11.61.116"": 1,
    ""194.165.16.10"": 2,
    ""202.165.15.46"": 1,
    ""193.29.13.22"": 2,
    ""89.248.170.132"": 1,
    ""71.6.199.23"": 3,
    ""80.82.67.121"": 1,
    ""191.101.174.86"": 1,
    ""45.140.17.16"": 3,
    ""141.98.11.128"": 1
  },
  ""asn"": {
    ""AS34376"": 2454,
    ""AS12389"": 473,
    ""AS16509"": 995,
    ""AS63949"": 8,
    ""AS9808"": 2,
    ""AS59425"": 4,
    ""AS208091"": 5,
    ""AS64022"": 1,
    ""AS14061"": 5,
    ""AS211736"": 7,
    ""AS57523"": 12,
    ""AS396982"": 7,
    ""AS37963"": 66,
    ""AS26496"": 1,
    ""AS150830"": 1,
    ""AS4134"": 1,
    ""AS48080"": 4,
    ""AS398722"": 1,
    ""AS267784"": 1,
    ""AS131386"": 3,
    ""AS399045"": 1,
    ""AS211179"": 2,
    ""AS42397"": 3,
    ""AS60721"": 6,
    ""AS14987"": 1,
    ""AS48721"": 2,
    ""AS18206"": 1,
    ""AS202425"": 2,
    ""AS10439"": 3,
    ""AS32780"": 1,
    ""AS198953"": 3,
    ""AS209605"": 1
  },
  ""isp"": {
    ""Telecom Group"": 2454,
    ""PJSC Rostelecom"": 473,
    ""Amazon.com"": 995,
    ""Akamai Technologies, Inc."": 8,
    ""China Mobile"": 2,
    ""Horizon LLC"": 4,
    ""Xhost Internet Solutions LP"": 5,
    ""CLOUDWEBMANAGE"": 1,
    ""DigitalOcean, LLC"": 5,
    ""FOP Dmytro Nedilskyi"": 7,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Google LLC"": 7,
    ""Hangzhou Alibaba Advertising Co"": 66,
    ""GoDaddy.com, LLC"": 1,
    ""Chieu Minh Company Limited"": 1,
    ""Chinanet"": 1,
    ""Dmitriy Panchenko"": 4,
    ""Censys, Inc."": 1,
    ""Flyservers S.A."": 3,
    ""Long Van System Solution"": 3,
    ""DediOutlet, LLC"": 1,
    ""Veraton Projects LTD"": 2,
    ""Bunea TELECOM SRL"": 3,
    ""Bursabil Teknoloji A.S."": 6,
    ""Rethem Hosting LLC"": 1,
    ""VADS Sdn Bhd"": 1,
    ""IP Volume inc"": 2,
    ""CariNet, Inc."": 3,
    ""Hosting Services"": 1,
    ""Proton66 OOO"": 3,
    ""UAB Host Baltic"": 1
  },
  ""org"": {
    ""TelecomGroup"": 2454,
    ""PJSC Rostelecom"": 473,
    ""AWS EC2 (ap-east-1)"": 995,
    ""Linode"": 7,
    ""China Mobile Communications Corporation"": 2,
    ""Horizon LLC"": 4,
    ""Linode, LLC"": 1,
    ""Xhost Internet Solutions"": 5,
    ""Unknown"": 5,
    ""DigitalOcean, LLC"": 5,
    ""FOP Dmytro Nedilskyi"": 7,
    ""Chang Way Technologies Co. Limited"": 11,
    ""Google Cloud (asia-east1)"": 4,
    ""Aliyun Computing Co., LTD"": 66,
    ""GoDaddy.com, LLC"": 1,
    ""Chieu Minh Company Limited"": 1,
    ""Chinanet HE"": 1,
    ""Xhostis"": 4,
    ""Censys, Inc."": 1,
    ""UAB Host Baltic"": 1,
    ""DediOutlet, LLC"": 1,
    ""Maxwell Group LTD"": 2,
    ""Bunea TELECOM SRL"": 3,
    ""Hostumo Bilisim Teknolojileri Sanayi Ticaret Limited Sirketi"": 6,
    ""Rethem Hosting LLC"": 1,
    ""Palo Alto Networks, Inc"": 3,
    ""Starcrecium Limited"": 1,
    ""Flyservers S.A"": 2,
    ""TM VADS"": 1,
    ""Quasi Networks LTD."": 1,
    ""CariNet, Inc."": 3,
    ""IP Volume inc"": 1,
    ""Ipxo"": 1,
    ""Proton66 LLC"": 3
  },
  ""regionName"": {
    ""Blagoevgrad"": 2454,
    ""St.-Petersburg"": 473,
    ""Central and Western"": 995,
    ""California"": 14,
    ""Guangdong"": 62,
    ""Moscow"": 22,
    ""North West"": 1,
    ""England"": 6,
    ""Central and Western District"": 1,
    ""South West"": 2,
    ""North Holland"": 9,
    ""Taiwan"": 4,
    ""Beijing"": 6,
    ""Arizona"": 1,
    ""Ho Chi Minh"": 4,
    ""Hebei"": 1,
    ""Hesse"": 1,
    ""Michigan"": 1,
    ""Vilnius"": 1,
    ""Missouri"": 1,
    ""Distrito Federal"": 2,
    ""Timis"": 3,
    ""Bursa Province"": 6,
    ""Illinois"": 1,
    ""Chechnya"": 1,
    ""Kaunas"": 3,
    ""Kuala Lumpur"": 1,
    ""New Jersey"": 1
  },
  ""country"": {
    ""Bulgaria"": 2454,
    ""Russia"": 496,
    ""Hong Kong"": 996,
    ""United States"": 19,
    ""China"": 69,
    ""Singapore"": 3,
    ""United Kingdom"": 6,
    ""Netherlands"": 9,
    ""Taiwan"": 4,
    ""Vietnam"": 4,
    ""Germany"": 1,
    ""Lithuania"": 4,
    ""Venezuela"": 2,
    ""Romania"": 3,
    ""Turkey"": 6,
    ""Malaysia"": 1
  },
  ""account"": {
    ""hello"": 4019,
    ""(empty)"": 5,
    ""Test"": 4,
    ""Administr"": 21,
    ""Almaz"": 1,
    ""nmap"": 2,
    ""Domain"": 19,
    ""eFkXSeNky"": 1,
    ""wPohBk"": 1,
    ""MAGTYf"": 1,
    ""root"": 3
  },
  ""keyboard"": {
    ""Unknown"": 4077
  },
  ""client_build"": {
    ""Unknown"": 4077
  },
  ""client_name"": {
    ""Unknown"": 4077
  },
  ""ip_type"": {
    ""Unknown"": 2978,
    ""hosting"": 1091,
    ""mobile"": 3,
    ""hosting & proxy"": 5
  }
}"
fRaN8ja5,MOK layout fullwidth latin 2,dksetiavan,YAML,Thursday 3rd of August 2023 07:00:18 PM CDT,"{
""title"":""ｆｕｌｌｗｉｄｔｈ ｌａｔｉｎ"",
""onScreen"":{
""main"":[
""１２３４５６７８９０"",
""ｑｗｅｒｔｙｕｉｏｐ"",
""ａｓｄｆｇｈｊｋｌ"",
""[SHIFT]ｚｘｃｖｂｎｍ[DEL]"",
""[TOOL][ALTGR:,][SPACE][][][SYM:．][ENTER]""
],

""shifted"":[
""！@#$％＾＆*（）"",
""ＱＷＥＲＴＹＵＩＯＰ"",
""ＡＳＤＦＧＨＪＫＬ"",
""[SHIFT]ＺＸＣＶＢＮＭ[DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],""altGr"":[
""　　　　　﹐　　　ˆ"",
""―∑ｅə®†Ωｏｏπ•·¡"",
""ａｓ∂ðƒ©ａｏ∆≠℥∞¿'"",
""[SHIFT]ʒΩ≈ｃþ∫ｎμ≤≥°[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]}}"
XAeEhLT1,Wolfe's Mekanism Induction Matrix Monitor v2,Kman3107,Lua,Thursday 3rd of August 2023 06:45:42 PM CDT,"--[[
  Wolfe's Mekanism Induction Matrix Monitor v2
  Usage: Put computer near an Induction Port and a monitor (2x3 array should work fine) and install. Optionally add a modem for wireless functionality (requires restart).
  Installation: pastebin run LMdUZY4Z install
  Configuration: Edit the ""config"" file, refer to the comments below for what each field means

  Wireless Usage: Doesn't require a Monitor on main PC, just a Modem, just make sure you add an identifier on config file.
  Wireless Receiver: Use script at https://pastebin.com/3naSaR8X
]]

-- Default settings, do not change
local options = {
  -- Unique identifier for this matrix on rednet, required for rednet functionality
  rednet_identifier = '',

  -- Energy type being displayed (J, FE)
  energy_type = 'FE',

  -- Update frequency, in seconds
  update_frequency = 1,

  -- Text scale on the monitor
  text_scale = 1,

  -- Output debug data to the computer's internal display
  debug = true,
}

--------------------------------------------------
--- Internal variables, DO NOT CHANGE
--------------------------------------------------

--- This will be used as the installer source (Pastebin)
local INSTALLER_ID = 'LMdUZY4Z'

--- Supported energy suffixes
local energy_suffixes = { 'k', 'M', 'G', 'T', 'P' }

--- Supported time periods when converting seconds
local time_periods = {
  { 'weeks', 604800 },
  { 'days', 86400 },
  { 'hours', 3600 },
  { 'minutes', 60 },
  { 'seconds', 1 },
}

--- This is our Induction Matrix, we'll auto-detect it later
local induction_matrix = nil

--- This is our Monitor, we'll auto-detect it later
local monitor = nil

--- This is our Modem, we'll auto-detect it later
local modem = nil

--- Prefix used for rednet channels
local rednet_prefix = 'WL_Mek_Matrix'

--------------------------------------------------
--- Helper functions
--------------------------------------------------

--- Reads a file's contents
---@return string
function file_read (file)
  local handle = fs.open(file, 'r')
  local data = handle.readAll()
  handle.close()
  return data
end

--- Writes data to a file (overrides existing data)
function file_write (file, data)
  local handle = fs.open(file, 'w')
  handle.write(data)
  handle.close()
end

--- Holds the current buffer of data being printed
local machine_term = term.current()
local print_buffer = {}

--- Writes data to the output monitor buffer
function print_r (text)
  table.insert(print_buffer, text)
end

--- Writes formatted data to the output monitor buffer
function print_f (format, ...)
  print_r(string.format(format, ...))
end

--- Writes the buffer into the output monitor
function print_flush ()
  if monitor then
    -- Redirects writes to monitor (if any)
    if monitor then
      term.redirect(monitor)
    end

    -- Clears terminal
    term.clear()
    term.setCursorPos(1, 1)

    -- Writes new data
    print(table.concat(print_buffer or {}, '\n'))

    -- Redirects writes back to computer (if using monitor)
    if monitor then
      term.redirect(machine_term)
    end
  end

  -- Clears buffer
  print_buffer = {}
end

--- Writes debug info to the machine
function debug (...)
  if options.debug then
    print(...)
  end
end

--- Rounds a number with N decimals
function round_decimal (number, decimals)
  local multiplier = math.pow(10, decimals or 0)
  return math.floor(number * multiplier) / multiplier
end

--- Rounds a percentage (0..1) to a number of decimals
function round_percentage (number, decimals)
  return ('%s%%'):format(round_decimal(100 * number, decimals or 1))
end

--- The current energy type
local energy_type = 'J'

--- Converts energy values
local energy_convert = function (energy) return energy end
if mekanismEnergyHelper and mekanismEnergyHelper[('joulesTo%s'):format(options.energy_type)] then
  energy_type = options.energy_type
  energy_convert = mekanismEnergyHelper[('joulesTo%s'):format(options.energy_type)]
end

--- Prints an energy value
local energy_string = function (energy, decimals)
  local prefix = ''
  local suffix = ''

  -- Prepares a prefix for negative numbers
  if energy < 0 then
    prefix = '-'
  end

  -- We need a positive number here for calculating multipliers (k, M, G, T), we'll add the minus later, we also convert it to the right unit
  local amount = energy_convert(math.abs(energy))

  -- Finds the proper suffix/multiplier
  for _, multiplier in pairs(energy_suffixes) do
    -- Stops when amount is less than 1000
    if amount < 1000 then
      break
    end

    -- Updates suffix and amount to new value
    amount = amount / 1000
    suffix = multiplier
  end

  -- Returns the formatted string
  return ('%s%s%s%s'):format(prefix, round_decimal(amount, decimals or 1), suffix, energy_type)
end

--- Generates an ETA string when given a number of seconds
function eta_string (seconds)
  -- Makes sure we're only dealing with integers
  seconds = math.floor(seconds)

  -- Processes time periods
  local time = {}
  for _, period in pairs(time_periods) do
    local count = math.floor(seconds / period[2])
    time[period[1]] = count
    seconds = seconds - (count * period[2])
  end

  -- If we have more than 72h worth of storage, switch to week, day, hour format
  if time.weeks > 0 then
    return ('%dwk %dd %dh'):format(time.weeks, time.days, time.hours)
  elseif time.days >= 3 then
    return ('%dd %dh'):format(time.days, time.hours)
  end

  -- For all other cases, we'll just use H:MM:SS
  return ('%d:%02d:%02d'):format(time.hours, time.minutes, time.seconds)
end

--- Prints the Induction Matrix information
function print_matrix_info (matrix_info)
  print_r('Ind.Matrix Monitor')
  print_r('------------------')
  print_r('')
  print_f('Power : %s', energy_string(matrix_info.energy_stored))
  print_f('Limit : %s', energy_string(matrix_info.energy_capacity))
  print_r('')
  print_f('Input : %s/t', energy_string(matrix_info.io_input))
  print_f('Output: %s/t', energy_string(matrix_info.io_output))
  print_f('Max IO: %s/t', energy_string(matrix_info.io_capacity))
  print_r('')

  -- If we have negative value here, we'll save a character by removing the space so it fits same line
  if matrix_info.change_amount < 0 then
    print_f('Change:%s/s', energy_string(matrix_info.change_amount_per_second))
  else
    print_f('Change: %s/s', energy_string(matrix_info.change_amount_per_second))
  end

  -- Charge/discharge status
  print_r('Status:')
  if matrix_info.is_charging then
    print_f('Charg. %s', eta_string((matrix_info.energy_capacity - matrix_info.energy_stored) / matrix_info.change_amount_per_second))
  elseif matrix_info.is_discharging then
    print_f('Disch. %s', eta_string(matrix_info.energy_stored / math.abs(matrix_info.change_amount_per_second)))
  else
    print_r('Idle')
  end
end

--------------------------------------------------
--- Program initialization
--------------------------------------------------

args = {...}

-- Loads custom options from filesystem
if fs.exists('config') then
  debug('Loading settings from ""config"" file...')

  -- Reads custom options
  local custom_options = textutils.unserialize(file_read('config'))

  -- Overrides each of the existing options
  for k, v in pairs(custom_options) do
    options[k] = v
  end
end

-- Writes back config file
print('Updating config file...')
file_write('config', textutils.serialize(options))

-- Handles special case when ""install"" is executed from the pastebin
if 'install' == args[1] then
  print('Installing Matrix Monitor...')

  -- Are we on first install? If so, we'll run open the config for editing later
  local has_existing_install = fs.exists('startup.lua')

  -- Removes existing version
  if fs.exists('startup.lua') then
    fs.delete('startup.lua')
  end

  -- Downloads script from Pastebin
  shell.run('pastebin', 'get', INSTALLER_ID, 'startup.lua')

  -- Runs config editor
  if not has_existing_install then
    print('Opening config file for editing...')
    sleep(2.5)
    shell.run('edit', 'config')
  end

  -- Reboots the computer after everything is done
  print('Install complete! Restarting computer...')
  sleep(2.5)
  os.reboot()
end

-- Detects peripherals
monitor = peripheral.find('monitor')
modem = peripheral.find('modem')

--- The rednet channel/protocol we'll be using
local rednet_channel = nil

-- Checks for an existing monitor
if monitor then
  debug('Monitor detected, enabling output!')
  monitor.setTextScale(options.text_scale)
else
  debug('No monitor detected, entering headless mode!')

  -- Makes sure we have a connected modem
  if not modem then
    error('No monitor or modem detected, cannot enter headless mode!')
  end
end

-- Conencts to rednet if modem available
if peripheral.find('modem') then
  if not options.rednet_identifier or options.rednet_identifier == '' then
    debug('Modem has been found, but no wireless identifier found on configs, will not connect!')
  else
    peripheral.find('modem', rednet.open)
    debug('Connected to rednet!')
    rednet_channel = ('%s#%s'):format(rednet_prefix, options.rednet_identifier)
  end
end

--------------------------------------------------
--- Main runtime
--------------------------------------------------

debug('Entering main loop...')

--- This will be updated after every energy collection, it is used to calculate how much power is actually being added/removed from the system
local energy_stored_previous = nil

while true do
  local status, err = pcall(function () 
    -- Attempts to auto-detect missing Induction Port
    if not induction_matrix then
      induction_matrix = peripheral.find('Induction Matrix')

      -- Checks if it worked
      if not induction_matrix then
        error('Induction Port not connected!')
      end
    end

    --- This is our main information
    local matrix_info = {
      energy_stored = induction_matrix.getEnergy(),
      energy_capacity = induction_matrix.getMaxEnergy(),
      io_input = induction_matrix.getInput(),
      io_output = induction_matrix.getOutput(),
      io_capacity = induction_matrix.getTransferCap(),
    }

    -- Detects power changes
    if not energy_stored_previous then
      energy_stored_previous = matrix_info.energy_stored
    end

    -- Calculates power changes and adds them to our information
    matrix_info.change_interval = options.update_frequency
    matrix_info.change_amount = matrix_info.energy_stored - energy_stored_previous
    matrix_info.change_amount_per_second = matrix_info.change_amount / options.update_frequency

    -- General stats
    matrix_info.is_charging = matrix_info.change_amount > 0
    matrix_info.is_discharging = matrix_info.change_amount < 0

    -- Sets the new ""previous"" value
    energy_stored_previous = matrix_info.energy_stored

    -- Broadcasts our matrix info if we have a modem
    if rednet.isOpen() and rednet_channel then
      rednet.broadcast(textutils.serialize(matrix_info), rednet_channel)
    end

    -- Prints the matrix information
    print_matrix_info(matrix_info)
  end)

  -- Checks for errors (might be disconnected)
  if not status then
    -- Clears buffer first
    print_buffer = {}

    -- Shows error message
    print_r('Error reading data')
    print_r('Check connections.')
    print_r('------------------')
    print_r(err)
  end

  -- Outputs text to screen
  print_flush()

  -- Waits for next cycle
  os.sleep(options.update_frequency)
end"
yAst0Xh8,Fixed_Shield_Shader,noradninja,C#,Thursday 3rd of August 2023 06:01:40 PM CDT,"Shader ""Halo/ArmorShader"" {
    Properties{
        _ColorArmadura(""Color Armadura"", Color) = (1,1,1,1)
        _MainTex(""Albedo (RGB)"", 2D) = ""white"" {}
        _Multipurpose(""Multipurpose (RGB)"", 2D) = ""white"" {}
        _Cubemap(""Cubemap"", CUBE) = """" {}
        _CubemapPower(""Cubemap Power"", Range(0,1)) = 0.5
        _VisorTexture(""Visor Texture"", 2D) = ""white"" {}
        _CubemapVisor(""Cubemap Visor"", CUBE) = """" {}
        _ShieldColor(""Shield Color"", Color) = (1,1,1,1)
        _ShieldActive(""Shield Active"", Range(0,1)) = 0.5
        _ShieldTex(""Shield Texture"", 2D) = ""white"" {}
        _ShieldEdge(""Shield Edge"", Range(0,1)) = 0.5
        _ShieldTransparency(""Shield Transparency"", Range(0,2)) = 0.5
        _ShieldMovement(""Shield Movement"", Range(0,0.1)) = 0.05
    }
        SubShader{
            Tags { ""RenderType"" = ""Opaque"" }
            LOD 100

            Pass {
                CGPROGRAM
// Upgrade NOTE: excluded shader from DX11; has structs without semantics (struct v2f members color)

                #pragma vertex vert
                #pragma fragment frag

                #include ""UnityCG.cginc""

                sampler2D _MainTex;
                sampler2D _Multipurpose;
                samplerCUBE _Cubemap;
                float4 _ColorArmadura;
                float _CubemapPower;
                sampler2D _VisorTexture;
                samplerCUBE _CubemapVisor;
                float4 _ShieldColor;
                float _ShieldActive;
                sampler2D _ShieldTex;
                float _ShieldEdge;
                float _ShieldTransparency;
                float _ShieldMovement;
            struct appdata {
                    float4 vertex : POSITION;
                    float2 uv : TEXCOORD0;
                    float3 normal : NORMAL;
            };
			struct v2f {
			    float4 vertex : POSITION;
				float2 uv : TEXCOORD0;
			    float3 worldRefl : TEXCOORD1;
                float3 worldNormal : TEXCOORD2;
			    float3 worldPosition: TEXCOORD3;
			};
                
                v2f vert(appdata v) {
                    v2f o;
                    o.vertex = UnityObjectToClipPos(v.vertex);
                    o.uv = v.uv;
                    o.worldNormal = normalize(mul(v.normal, (float3x3)unity_ObjectToWorld));
                    float3 worldView = normalize(_WorldSpaceCameraPos - mul(unity_ObjectToWorld, v.vertex).xyz);
                    o.worldRefl = reflect(-worldView, o.worldNormal);
                    //////This normalize function in your fragment shader was breaking it
                    //////I think because of the _WorldSpaceCameraPos access,
                    //////Vita has no POSITION semantic to access this in the fragmant shader 
                    float3 worldPos = normalize(_WorldSpaceCameraPos - v.vertex.xyz);
                    o.worldPosition = worldPos;
                    return o;
                }

                fixed4 frag(v2f i) : SV_Target
                {
                    fixed4 col = tex2D(_MainTex, i.uv);
                    fixed4 multipurpose = tex2D(_Multipurpose, i.uv);
                    fixed4 visor = tex2D(_VisorTexture, i.uv);
                    col.rgb = lerp(col.rgb, _ColorArmadura.rgb * multipurpose.r, multipurpose.b);
                    float3 viewDir = reflect(i.worldNormal, i.worldRefl);
                    float opacity = 1 - visor.a;
                    col.rgb += texCUBE(_Cubemap, i.worldRefl).rgb * multipurpose.r * _CubemapPower * opacity;
                    col.rgb += texCUBE(_CubemapVisor, viewDir).rgb * visor.a * multipurpose.r;
                    
                    //the commented out part below is what is causing your shader to break, it should compile fine now
                    float fresnel = pow(1 - max(dot(i.worldNormal, i.worldPosition), 0.0f), 5.0f);
                    fresnel = lerp(1, fresnel, _ShieldEdge);
                    fixed4 shield = tex2D(_ShieldTex, i.uv + float2(_Time.y * _ShieldMovement, _Time.y * _ShieldMovement));
                    shield.rgb *= _ShieldColor.rgb;
                    col.rgb = lerp(col.rgb, shield.rgb, shield.a * _ShieldTransparency * fresnel * _ShieldActive);
                    return col;
                }

                ENDCG
            }
        }
}
"
TTU6nHZs,MOK layout fullwidth Latin,dksetiavan,JSON,Thursday 3rd of August 2023 05:36:33 PM CDT,"OK_Layout_Begin
Name:Fullwidth latin
１２３４５６７８９０
ｑｗｅｒｔｙｕｉｏｐ
ａｓｄｆｇｈｊｋｌ
ｚｘｃｖｂｎｍ
！@#$％＾＆*（）
ＱＷＥＲＴＹＵＩＯＰ
ＡＳＤＦＧＨＪＫＬ
ＺＸＣＶＢＮＭ
£￥€$％＾＆*（）№√⁙
～｀｛｝÷＿-＝｜+§∷‡
@［］#／＼'＂《》—‐–
…＜＞！；：？〈〉±．,
ˉˋˇ　　　　　﹐　　　ˆ
―∑ｅə®†Ωｏｏπ•·¡
ａｓ∂ðƒ©ａｏ∆≠℥∞¿
ʒΩ≈ｃþ∫ｎμ≤≥°
OK_Layout_End
"
gYDrDhcH,Auto Chess,danielvitor23,C++,Thursday 3rd of August 2023 05:36:04 PM CDT,"#include <bits/stdc++.h>
#define fi first
#define se second
using namespace std;

#define eps 1e-9
#define eq(a, b) (abs(a - b) < eps)
#define lt(a, b) (a < b - eps)
#define gt(a, b) (a > b + eps)
#define le(a, b) (a < b + eps)
#define ge(a, b) (a > b - eps)
#define ftype float

const ftype PI = acos(-1.0);

// Begin Point 2D
struct point2d {
    ftype x, y;

    point2d() : x(0.0), y(0.0) {}
    point2d(const ftype& x, const ftype& y) : x(x), y(y) {}

    point2d& operator=(const point2d& oth) {
        x = oth.x; y = oth.y;
        return (*this);
    }
    point2d& operator+=(const point2d& oth) {
        x += oth.x; y += oth.y;
        return (*this);
    }
    point2d& operator-=(const point2d& oth) {
        x -= oth.x; y -= oth.y;
        return (*this);
    }
    point2d& operator*=(const ftype& factor) {
        x *= factor; y *= factor;
        return (*this);
    }
    point2d& operator/=(const ftype& factor) {
        x /= factor; y /= factor;
        return (*this);
    }
};
point2d operator+(const point2d& a, const point2d& b) {
    return point2d(a.x + b.x, a.y + b.y);
}
point2d operator-(const point2d& a, const point2d& b) {
    return point2d(a.x - b.x, a.y - b.y);
}
point2d operator*(const point2d& a, const ftype& factor) {
    return point2d(a.x * factor, a.y * factor);
}
point2d operator*(const ftype& factor, const point2d& a) {
    return point2d(factor * a.x, factor * a.y);
}
point2d operator/(const point2d& a, const ftype& factor) {
    return point2d(a.x / factor, a.y / factor);
}
bool operator==(const point2d& a, const point2d& b) {
    return (eq(a.x, b.x) and eq(a.y, b.y));
}
bool operator!=(const point2d& a, const point2d& b) {
    return !(a==b);
}
bool operator < (const point2d& a, const point2d& b) {
    return (lt(a.x, b.x) or (eq(a.x, b.x) and lt(a.y, b.y)));
}
bool operator > (const point2d& a, const point2d& b) {
    return (b < a);
}
bool operator <= (const point2d& a, const point2d& b) {
    return !(a > b);
}
bool operator >= (const point2d& a, const point2d& b) {
    return !(a < b);
}
// > 0 if |angle| < pi/2
// = 0 if |angle| = pi
// < 0 if |angle| > pi/2
ftype operator*(const point2d& a, const point2d& b) {
    return (a.x * b.x + a.y * b.y);
}
// < 0 if a comes before b in ccw
// = 0 if a is collinear to b
// > 0 if a comes after b in ccw
ftype operator^(const point2d& a, const point2d& b) {
    return (a.x * b.y - a.y * b.x);
}
ftype ccw(const point2d& a, const point2d& b) { 
    return (a ^ b);
}
// ccw(a, b, c) : > 0 if a comes before b counterclockwise in origin
// ccw(a, b, c) : < 0 if a comes after b counterclockwise in origin
ftype ccw(const point2d& a, const point2d& b, const point2d& origin) {
    return ccw(a - origin, b - origin);
}
ftype abs(const point2d& a) {
    return (a * a);
}
ftype norm(const point2d& a) {
    return sqrt(abs(a));
}
ftype dist(const point2d& a, const point2d& b) {
    return norm(a - b);
}
// Left rotation. Angle (rad)
point2d rotate(const point2d& a, const ftype& angleSin, const ftype& angleCos) {
    return point2d(a.x * angleCos - a.y * angleSin, a.x * angleSin + a.y * angleCos);
}
point2d rotate(const point2d& a, const ftype& angle) {
    return rotate(a, sin(angle), cos(angle));
}
// 0 to 1 and 2 quadrant. 1 to 3 and 4
int half(const point2d& p) {
    if (gt(p.y, 0) or (eq(p.y, 0) and ge(p.x, 0))) return 0;
    return 1;
}
// angle(a) < angle(b)
bool cmpByAngle(const point2d& a, const point2d& b) {
    int ha = half(a), hb = half(b);
    if (ha != hb) return ha < hb;
    ftype c = a^b;
    if (eq(c, 0)) return lt(norm(a), norm(b));
    return gt(c, 0);
}
// End Point 2D

const ftype angleBase = PI/4.0;

int main() {
  cin.tie(0)->sync_with_stdio(0);

  int n; cin >> n;

  vector<point2d> pts(n);
  for (int i = 0; i < n; ++i) {
    cin >> pts[i].x >> pts[i].y;
  }

  sort(pts.begin(), pts.end(), cmpByAngle);

  int ans = 0, r = 0;
  for (int i = 0; i < n; ++i) {
    point2d rotated = rotate(pts[i], angleBase);

    while (r < n and cmpByAngle(pts[r], rotated)) {
      ++r;
    }

    ans = max(ans, r - i);
  }

  cout << ans << '\n';
}"
dx1xUUSk,coin hack working / 🔥🔥🔥🔥🔥 RBX,droui,Lua,Thursday 3rd of August 2023 05:22:20 PM CDT,Local game = coins (autofarm) = collect. coins)(bypass game devs)
5Z6AVpcS,Infinite Jump Script | Roblox,ELtc,Lua,Thursday 3rd of August 2023 04:41:44 PM CDT,"-- by Lua
-- Press [T] to turn off and to turn on

_G.infinjump = true
 
local Player = game:GetService(""Players"").LocalPlayer
local Mouse = Player:GetMouse()
Mouse.KeyDown:connect(function(k)
if _G.infinjump then
if k:byte() == 32 then
Humanoid = game:GetService(""Players"").LocalPlayer.Character:FindFirstChildOfClass(""Humanoid"")
Humanoid:ChangeState(""Jumping"")
wait(0.1)
Humanoid:ChangeState(""Seated"")
end
end
end)
 
local Player = game:GetService(""Players"").LocalPlayer
local Mouse = Player:GetMouse()
Mouse.KeyDown:connect(function(k)
k = k:lower()
if k == ""t"" then
if _G.infinjump == true then
_G.infinjump = false
else
_G.infinjump = true
end
end
end)"
qErtCKTY,houseconnection,rungholt,Lua,Thursday 3rd of August 2023 04:28:40 PM CDT,"local function checkFuel()
    while turtle.getFuelLevel() <= 200 do
        turtle.select(16)
        turtle.refuel(16)
        turtle.select(1)
    end
end

turtle.forward()
turtle.forward()
while turtle.detectDown() == false do
    checkFuel()
    turtle.select(1)
    turtle.placeDown()
    turtle.forward()
end"
Tk0TTwM1,Untitled,smj007,Python,Thursday 3rd of August 2023 04:24:58 PM CDT,"class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:

        """"""
        At each step, right pointer points to a locations where we
        are trying to calculate length of longest string ending there.
        When we are iterating over the character corresponding to right pointer,
        we might have added one of the duplicate characters already in the hashset
        so we have to remove characters from left untill duplicate of s[right] is removed

        Think of it this way: 
        how will you calcuate the longest substring ending at aright pointer
        """"""

        left = 0
        hashset = set()
        ans = 0

        for right in range(len(s)):
            while(s[right] in hashset):
                hashset.remove(s[left])
                left=left+1

            hashset.add(s[right])
            ans = max(ans, right - left + 1)

        return ans
            "
da6mm2Md,multiples of 3 and 5,butumusho,Ruby,Thursday 3rd of August 2023 04:22:07 PM CDT,"def multiple_of_three?(number)
    number % 3 == 0
end

def multiple_of_five?(number)
    number % 5 == 0
end

def ping_pong_iterate(range)
    range.each do |number|
        word = word_or_number(number)
        puts word
    end
end

def word_or_number(word = '', number)
    word << 'APing' if multiple_of_three?(number)
    word << 'BPong' if multiple_of_five?(number)
    
    word.empty? ? number : word
end

range = (1..100)
ping_pong_iterate(range)"
hVQaaep7,/salesApiLeads?action=bulkSaveByMembers,kopyl,Python,Thursday 3rd of August 2023 04:04:19 PM CDT,"params = {
    'action': 'bulkSaveByMembers',
}

data = {""entities"": [""urn:li:fs_salesProfile:(ACwAADZP0XgBQ05NSUoLL0BqgKh1Wcyk5LWxzCE,NAME_SEARCH,KIg9)""] }

response = requests.post(
    'https://www.linkedin.com/sales-api/salesApiLeads',
    params=params,
    cookies=cookies,
    headers=headers,
    data=json.dumps(data)
)
print(response.json())"
Y37b7Euz,housecorner,rungholt,Lua,Thursday 3rd of August 2023 04:00:22 PM CDT,"local function foundation()
    turtle.up()
    turtle.select(1)
    turtle.placeDown()
    turtle.forward()
    turtle.placeDown()
    turtle.back()
    turtle.turnLeft()
    turtle.forward()
    turtle.placeDown()
    turtle.back()
    turtle.turnRight()
end

local function upPlace()
    for i = 1, 8 do
        turtle.up()
        turtle.placeDown()
    end
end

local function completeBuild()
    foundation()
    upPlace()
    foundation()
end

local args = {...}
    times = args[1]
    for i = 1, times do
        completeBuild()
    end"
kwra0aLy,/salesApiConnection?action=connectV2,kopyl,Python,Thursday 3rd of August 2023 03:36:34 PM CDT,"params = {
    'action': 'connectV2',
}

data = {""member"": ""ACwAADZP0XgBQ05NSUoLL0BqgKh1Wcyk5LWxzCE"", ""message"": ""Hey :)""}

response = requests.post(
    'https://www.linkedin.com/sales-api/salesApiConnection',
    params=params,
    cookies=cookies,
    headers=headers,
    data=json.dumps(data)
)
print(response.json())"
GjYmNd1K,/salesApiConnection?action=isEmailRequired,kopyl,Python,Thursday 3rd of August 2023 03:00:28 PM CDT,"params = {
    'action': 'isEmailRequired',
}

data = {""member"":""ACwAAABIts8BpcO3opPUarG6T_voqH8XywDRCX0""}

response = requests.post(
    'https://www.linkedin.com/sales-api/salesApiConnection',
    params=params,
    cookies=cookies,
    headers=headers,
    data=json.dumps(data)
)"
VRgbj2kA,Inditorias (Main),shadowking35,Lua,Thursday 3rd of August 2023 02:44:51 PM CDT,"print(""script version:0"")
print(""Changelog:"")
print(""Nothing was changed"")
print(""Hold ctrl + T to terminate at any time"")
print(""Waiting for 5 seconds"")
sleep(5)
print(""Deleteing Update program"")
delete = shell.execute(""rom/programs/delete.lua"", ""Update"")
print(""Waiting for 2 seconds"")
sleep(2)
shell.execute(""rom/programs/clear.lua"")
print(""Starting Main"")
print(""Checking if Update program was deleted"")
print(""Update program deletion: "", delete)
print(""waiting for 5 seconds incase of any error that I need to see"")
sleep(5)
print(""Waiting for 5 seconds and then updating"")
sleep(5)

--Code here--

print(""Updating"")
shell.execute(""rom/programs/pastebin.lua"", ""get"", ""8zqsArss"", ""Update"")
print(""Update program installed"")
print(""Now running update program"")
sleep(2)
shell.execute(""Update"")"
8zqsArss,Inditorias (auto update),shadowking35,Lua,Thursday 3rd of August 2023 02:34:46 PM CDT,"print(""Removing old Main"")
shell.execute(""rom/programs/delete.lua"", ""Main"")
print(""Deletion complete"")
print(""Waiting for 3 seconds"")
sleep(3)
print(""Installing updated Main"")
shell.execute(""rom/programs/pastebin.lua"", ""get"", ""VRgbj2kA"", ""Main"")
shell.execute(""rom/programs/clear.lua"")
print(""Installation complete"")
print(""Waiting for 3 seconds then running new Main"")
sleep(3)
shell.execute(""rom/programs/clear.lua"")
shell.execute(""Main"")"
AtSZcK2U,Untitled,microrobotics,Python,Thursday 3rd of August 2023 02:30:30 PM CDT,"# Import necessary libraries
import time
import pew

# Initialize PewPew Gaming Console
pew.init()

# Initialize the dot's position
dot_x, dot_y = 3, 3

# Main loop
while True:
    # Clear the LED grid
    pew.pixels.fill((0, 0, 0))

    # Display the dot at its current position
    pew.pixels[dot_x, dot_y] = (255, 0, 0)

    # Update the LED display
    pew.show()

    # Delay for a short period to control the dot's speed
    time.sleep(0.2)

    # Check button presses and move the dot accordingly
    keys = pew.keys()
    if keys & pew.K_UP:
        dot_y = max(dot_y - 1, 0)
    if keys & pew.K_DOWN:
        dot_y = min(dot_y + 1, 7)
    if keys & pew.K_LEFT:
        dot_x = max(dot_x - 1, 0)
    if keys & pew.K_RIGHT:
        dot_x = min(dot_x + 1, 7)"
GcN7tYWK,3461 - Interferência em Luzes Hexagonais Lights,danielvitor23,C++,Thursday 3rd of August 2023 02:27:47 PM CDT,"#include <bits/stdc++.h>
#define fi first
#define se second
using namespace std;

using i64 = long long;

const int TARGET = (1 << 10) - 1;
const int INF = 0x3f3f3f3f;

int a[10] = {
  (1 << 1) | (1 << 4), // 1
  (1 << 0) | (1 << 4) | (1 << 5) | (1 << 2), // 2
  (1 << 1) | (1 << 5) | (1 << 6) | (1 << 3), // 3
  (1 << 2) | (1 << 6), // 4
  (1 << 0) | (1 << 1) | (1 << 5) | (1 << 7), // 5
  (1 << 1) | (1 << 2) | (1 << 4) | (1 << 6) | (1 << 7) | (1 << 8), // 6
  (1 << 2) | (1 << 3) | (1 << 5) | (1 << 8), // 7
  (1 << 4) | (1 << 5) | (1 << 8) | (1 << 9), // 8
  (1 << 5) | (1 << 6) | (1 << 7) | (1 << 9), // 9
  (1 << 7) | (1 << 8) // 10
};

string get(int mask) {
  string s;

  for (int i = 0; i < 10; ++i) {
    s += ((mask & (1 << i)) ? ""1"" : ""0"");
  }

  return s;
}

bool cmp(string a, string b) {
  int sz = a.size();

  vector<int> aa, bb;

  for (int i = 0; i < sz; ++i) {
    if (a[i] == '1') {
      aa.push_back(i + 1);
    }
    if (b[i] == '1') {
      bb.push_back(i + 1);
    }
  }

  for (int i = 0; i < aa.size(); ++i) {
    if (aa[i] < bb[i]) return true;
    if (aa[i] > bb[i]) return false;
  }

  return false;
}

int main() {
  cin.tie(0)->sync_with_stdio(0);

  int initialMask = 0;
  for (int i = 0; i < 10; ++i) {
    int x; cin >> x;
    if (x)
      initialMask |= (1 << i);
  }

  int answer = INF;
  string strAns;
  for (int mask = 0; mask < (1 << 10); ++mask) {
    int allMasks = initialMask;

    for (int i = 0; i < 10; ++i) {
      if (mask & (1 << i)) {
        allMasks ^= a[i];
      }
    }

    if (allMasks == TARGET) {
      int qtd = __builtin_popcount(mask);
      if (qtd < answer or (qtd == answer and cmp(get(mask), strAns))) {
        answer = qtd;
        strAns = get(mask);
      }
    }
  }

  if (answer != INF) {
    cout << answer << '\n';
    bool first = true;
    vector<int> a;

    for (int i = 0; i < 10; ++i) {
      if (strAns[i] == '1') {
        a.push_back(i + 1);
      }
    }

    for (int i = 0; i < answer; ++i) {
      cout << a[i] << "" \n""[i==answer-1];
    }
  } else {
    cout << ""-1\n"";
  }
}"
KcfC6fea,Pydantic base model,alaex777,Python,Thursday 3rd of August 2023 02:05:51 PM CDT,"# 03.08.23

'''
One of the best way to parse json in python
is to use pydantic library. Starting from
this post, I will give some useful examples of it
'''

from pydantic import BaseModel

class Iphone(BaseModel):
    model: str
    price: float
    amount: int

print(Iphone.model_validate({
    'model': 'iphone 14',
    'price': 999.99,
    'amount': 100,
    'description': 'designed in california'
}))

# model='iphone 14' price=999.99 amount=100"
xDeFuNA2,YP_English_20230803,DinEqu,Python,Thursday 3rd of August 2023 01:57:02 PM CDT,"#american_oxford
oxford = load_files(r'C:\Users\...\OneDrive\Документы\yp\English_level_movie-main\Oxford_CEFR_level\\', shuffle=False, encoding='utf-8-sig')
oxford.data[0][:30]

---------------------------------------------------------------------------
UnicodeDecodeError                        Traceback (most recent call last)
~\AppData\Local\Temp\ipykernel_14588\3358638790.py in <module>
      1 #american_oxford
----> 2 oxford = load_files(r'C:\Users\...\OneDrive\Документы\yp\English_level_movie-main\Oxford_CEFR_level\\', shuffle=False, encoding='utf-8-sig')
      3 oxford.data[0][:30]

~\anaconda3\lib\site-packages\sklearn\datasets\_base.py in load_files(container_path, description, categories, load_content, shuffle, encoding, decode_error, random_state)
    231                 data.append(f.read())
    232         if encoding is not None:
--> 233             data = [d.decode(encoding, decode_error) for d in data]
    234         return Bunch(
    235             data=data,

~\anaconda3\lib\site-packages\sklearn\datasets\_base.py in <listcomp>(.0)
    231                 data.append(f.read())
    232         if encoding is not None:
--> 233             data = [d.decode(encoding, decode_error) for d in data]
    234         return Bunch(
    235             data=data,

~\anaconda3\lib\encodings\utf_8_sig.py in decode(input, errors)
     21         input = input[3:]
     22         prefix = 3
---> 23     (output, consumed) = codecs.utf_8_decode(input, errors, True)
     24     return (output, consumed+prefix)
     25 

UnicodeDecodeError: 'utf-8' codec can't decode byte 0xfb in position 37: invalid start byte
"
bKsVqx6M,Untitled,Aedwick,Python,Thursday 3rd of August 2023 01:56:26 PM CDT,"import keyboard
import time
import os

#define console clearance
def clearConsole():
    command = 'clear'
    if os.name in ('nt', 'dos'):  # If Machine is running on Windows, use cls
        command = 'cls'
    os.system(command)

#function for keyboard reading
def keyPressed():
    while True:
        if keyboard.is_pressed('w'):
            return('w')
        elif keyboard.is_pressed('d'):
            return('d')
        elif keyboard.is_pressed('s'):
            return('s')
        elif keyboard.is_pressed('a'):
            return('a')
        elif keyboard.is_pressed('q'):
            return('q')
        else:
            break

#actor is an object
class Object():
    timeToAct = -1
    passable = True
    character = ' '
    
#create free space object
objFloor = Object()
objFloor.character = '.'
#create impassable wall object
objWall = Object()
objWall.character = '#'
objWall.passable = False
#create player object
objPlayer = Object()
objPlayer.character = '@'
objPlayer.passable = False

#creation of map
def mapCreation(parameter):
    theMap = ['.']*parameter
    for i in range(parameter):
        theMap[i] = ['']*parameter
        for j in range(parameter):
            theMap[i][j] = [objFloor, '', '']
            if (i == 0) or (j == 0) or (i == (parameter - 1)) or (j == (parameter - 1)):
                theMap[i][j][0] = objWall
    return theMap
    
    
    
#function to show all objects on the map
def displayMap(Map):
    for i in range(len(Map)):
        for j in range(len(Map[i])):
            if isinstance(Map[i][j][1], str) == True:
                print(Map[i][j][0].character, end= '')
            elif isinstance(Map[i][j][1], Object) == True:
                print(Map[i][j][1].character, end= '')
        print('')
   
#create map
theMap = mapCreation(10)
#place the player
theMap[5][5] = objPlayer
clearConsole()
displayMap(theMap)


"
aHMM8qz6,GUI_pyqt6,Dynamic_Fantasy,Python,Thursday 3rd of August 2023 01:51:58 PM CDT,"from PyQt6.QtWidgets import QApplication , QWidget , QPushButton ,QHBoxLayout ,QLineEdit
from PyQt6.QtGui import QFont , QIcon 
import pyautogui as p
import time as t

#This is not exactly what i intended to create tho it works perfectly fine for now and yeah its gonna take me a crazy amount of time to 
#to acc wrap my head around pyqt6 let alone youtube module lol
#you can use it whatever the way you feel like make sure you change the logic inside the ""def click"" you could use youtube module as well


class window(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle(""YouTube Downloader"")
        self.hbx()    #calling the hbx
        self.setGeometry(400,100,400,400)
        self.setStyleSheet(""background-color:#101010"")       #sets up universal background color





    def hbx(self):
        hbox = QHBoxLayout(self)    #horizontal widget alignment 

        self.entry = QLineEdit()
        self.entry.setPlaceholderText("" ""+'Enter your link')
        self.entry.setFont(QFont(""Calibri"",19))
        
        # Entry widget with a bit of css properties
        
        self.entry.setStyleSheet(""""""     

        QLineEdit{
                background-color :#171717 ;
                color :#f3f3f3;
                height : 50px;
                width : 100px;
                border-radius : 25px;
                border : none ;                
        }
        QLineEdit:hover{
                border: 1px solid #d128a6;
                                 
        }




        """""")

        btn = QPushButton(""Download"")    #setting up a button 
        btn.clicked.connect(self.click)
        btn.setFont(QFont(""Calibri"",16))      
        
        
        #adding css properties to the button
        
        btn.setStyleSheet(""""""
        
            QPushButton {
                background-color: #9603a3; 
                color: white;
                height : 50px;
                width : 100px;
                border: none;
                border-radius: 20px;  
            }
            QPushButton:hover {
                background-color: #871bec;
            }
            QPushButton:focus {
                background-color: #871bec;
            }
            """""")
        hbox.addWidget(self.entry)

        hbox.addWidget(btn)

        self.setLayout(hbox)

    def click(self):
        link =self.entry.text()
        p.write('chrome')
        p.press('enter')
        t.sleep(2)
        p.click(846,454)
        p.write('https://tiktokmate.io/')
        p.press('enter')
        t.sleep(4)
        p.click(811,745) #enter box
        p.write(link)#download button
        p.click(942,830) 
        t.sleep(3)
        p.click(1526,395) #download
        t.sleep(3)
        p.doubleClick(876,386) #maximize
        t.sleep(3)
        p.click(1859,1008) #options
        
        t.sleep(2)
        p.click(1758,899) #final download
        t.sleep(2)
        p.press('enter') #saving file

















app = QApplication([])  
app_ =window()
app_.show()         

app.exec()"
HT85ekgy,login serializer,darkor,Python,Thursday 3rd of August 2023 01:48:33 PM CDT,"class CustomLoginSerializer(JWTSerializer):
    is_first_login = serializers.SerializerMethodField()

    def get_is_first_login(self, obj: dict) -> bool:
        if obj[""user""].country.code is None:
            return True
        return False

    def to_representation(self, instance: dict) -> dict:
        ret = super().to_representation(instance)
        del ret[""user""]
        return ret


class CustomLoginSerializerV2(serializers.Serializer):
    access = serializers.CharField()
    refresh = serializers.CharField()
    is_first_login = serializers.SerializerMethodField()

    def get_is_first_login(self, obj: dict) -> bool:
        if obj[""user""].country.code is None:
            return True
        return False"
5dggUzp3,Untitled,D3ENNY,Python,Thursday 3rd of August 2023 01:40:07 PM CDT,"    ~/projects/python/winitaTool_bot/bot   development !4 ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── 20:35:31 
❯ ipython bot.py
---ventoy.py---
---rufus.py---
---request ventoy---
524288
Telegram says: [400 PEER_ID_INVALID] - The peer id being used is invalid or not known yet. Make sure you meet the peer before interacting with it 
Traceback (most recent call last):
  File ""/home/denny/.local/lib/python3.11/site-packages/pyrogram/methods/advanced/resolve_peer.py"", line 62, in resolve_peer
    return await self.storage.get_peer_by_id(peer_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/denny/.local/lib/python3.11/site-packages/pyrogram/storage/sqlite_storage.py"", line 142, in get_peer_by_id
    raise KeyError(f""ID not found: {peer_id}"")
KeyError: 'ID not found: 524288'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/denny/.local/lib/python3.11/site-packages/pyrogram/methods/advanced/resolve_peer.py"", line 123, in resolve_peer
    return await self.storage.get_peer_by_id(peer_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/denny/.local/lib/python3.11/site-packages/pyrogram/storage/sqlite_storage.py"", line 142, in get_peer_by_id
    raise KeyError(f""ID not found: {peer_id}"")
KeyError: 'ID not found: 524288'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/denny/.local/lib/python3.11/site-packages/pyrogram/methods/advanced/save_file.py"", line 195, in save_file
    await func()
  File ""/home/denny/projects/python/winitaTool_bot/bot/bot.py"", line 162, in progressFile
    await app.send_chat_action(chat_id, enums.ChatAction.UPLOAD_DOCUMENT)
  File ""/home/denny/.local/lib/python3.11/site-packages/pyrogram/methods/messages/send_chat_action.py"", line 77, in send_chat_action
    peer=await self.resolve_peer(chat_id),
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/denny/.local/lib/python3.11/site-packages/pyrogram/methods/advanced/resolve_peer.py"", line 125, in resolve_peer
    raise PeerIdInvalid
pyrogram.errors.exceptions.bad_request_400.PeerIdInvalid: Telegram says: [400 PEER_ID_INVALID] - The peer id being used is invalid or not known yet. Make sure you meet the peer before interacting with it 
'NoneType' object has no attribute 'write'
Traceback (most recent call last):
  File ""/home/denny/.local/lib/python3.11/site-packages/pyrogram/dispatcher.py"", line 240, in handler_worker
    await handler.callback(self.client, *args)
  File ""/home/denny/projects/python/winitaTool_bot/bot/bot.py"", line 217, in ventoy
    file= await bot.send_document(chat_id, document, file_name=ventoyScript.getFile().replace('download/ventoy/', '').strip(), progress=progressFile, progress_args=(chat_id, ))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/denny/.local/lib/python3.11/site-packages/pyrogram/methods/messages/send_document.py"", line 193, in send_document
    r = await self.invoke(
        ^^^^^^^^^^^^^^^^^^
  File ""/home/denny/.local/lib/python3.11/site-packages/pyrogram/methods/advanced/invoke.py"", line 79, in invoke
    r = await self.session.invoke(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/denny/.local/lib/python3.11/site-packages/pyrogram/session/session.py"", line 389, in invoke
    return await self.send(query, timeout=timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/denny/.local/lib/python3.11/site-packages/pyrogram/session/session.py"", line 318, in send
    message = self.msg_factory(data)
              ^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/denny/.local/lib/python3.11/site-packages/pyrogram/session/internals/msg_factory.py"", line 37, in __call__
    len(body)
  File ""/home/denny/.local/lib/python3.11/site-packages/pyrogram/raw/core/tl_object.py"", line 79, in __len__
    return len(self.write())
               ^^^^^^^^^^^^
  File ""/home/denny/.local/lib/python3.11/site-packages/pyrogram/raw/functions/messages/send_media.py"", line 167, in write
    b.write(self.media.write())
            ^^^^^^^^^^^^^^^^^^
  File ""/home/denny/.local/lib/python3.11/site-packages/pyrogram/raw/types/input_media_uploaded_document.py"", line 122, in write
    b.write(self.file.write())
            ^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'write'

"
nuKJK0kv,divisible_sum_subarray,kub3,Python,Thursday 3rd of August 2023 01:35:42 PM CDT,"""""""
Задача:

Дан массив A из N элементов (N <= 10^6),
все элементы A_i – неотрицательные целые числа, не превышающие 10^6.
Найти любую пару индексов L, R (L <= R) таких, что сумма
элементов на отрезке массива A_L + … + A_R делится нацело на N.
Доказать, что такая пара индексов всегда существует.
""""""


def prefix_sums(a: list) -> list:
    """"""
    return: массив префиксных сумм массива а

    b[i] — это сумма элементов массива a на полуинтервале [0; i)
    len(b) == n + 1

    b[0] = 0
    b[1] = a[0]
    b[2] = a[0] + a[1]
    b[i] = a[0] + ... + a[i - 1]
    b[n] = a[0] + ... + a[n - 1]

    Рекуррентная формула:
    b[0] = 0
    b[i + 1] = b[i] + a[i]
    """"""
    n = len(a)
    b = [0 for _ in range(n + 1)]
    for i in range(n):
        b[i + 1] = b[i] + a[i]
    return b


def find_divisible_sum_segment(a: list):
    """"""
    ##

    сумма элементов массива а на полуинтервале [left; right)

    b[l] = a[0] + ... + a[l - 1]
    b[r] = a[0] + ... + a[r - 1]
    a[l] + ... + a[r - 1] = b[r] - b[l]

    ##

    S = a[l] + ... + a[r - 1]
    S делится на n, когда S % n == 0

    S % n =
    = (b[r] - b[l]) % n =
    = b[r] % n - b[l] % n

    b[r] % n - b[l] % n == 0
    b[l] % n == b[r] % n

    ##

    почему всегда найдется решение

    все остатки от n находятся на отрезке [0; n - 1]

    1) если хотя бы один остаток = 0, то решение найдено
    2) если же нет ни одной делящейся на n префиксной суммы,
    тогда все остатки находятся в диапазоне от 1 по n-1,
    всего (n-1) остатков,
    но мы считаем остатки от b[1] по b[n], всего посчитаем n остатков,
    по принципу Дирихле хотя бы два остатка совпадут
    """"""

    b = prefix_sums(a)

    # создаем словарь: ключи - это остатки, значения - это индексы
    remainders = {}
    for i in range(1, n + 1):
        rem = b[i] % n
        if rem == 0:
            """"""
            b[i] делится на n
            a[0] + ... + a[i - 1] делится на n
            т.е. мы нашли пару индексов: L = 0, R = i - 1
            """"""
            return 0, i - 1
        if rem in remainders:
            """"""
            если rem есть в словаре, значит такой остаток уже был
            мы нашли два равных остатка

            l = remainders[rem]
            b[l] % n == rem == b[i] % n
            a[l] + ... + a[i - 1] делится на n

            мы нашли пару индексов: L = remainder[rem], R = i - 1
            """"""
            return remainders[rem], i - 1
        remainders[rem] = i
    return None, None


if __name__ == ""__main__"":
    n = int(input(""N: ""))
    assert(n > 0)
    a = list(map(int, input(""A: "").split()))

    L, R = find_divisible_sum_segment(a)
    print(f""{L = }, {R = }"")
"
B3WfJU3b,.prettierrc,gabrieleb,JSON,Thursday 3rd of August 2023 01:26:00 PM CDT,"{
    ""semi"": true,
    ""trailingComma"": ""es5"",
    ""singleQuote"": false,
    ""printWidth"": 120,
    ""useTabs"": false,
    ""tabWidth"": 2,
    ""quoteProps"": ""as-needed"",
    ""bracketSpacing"": true,
    ""bracketSameLine"": false,
    ""arrowParens"": ""avoid""
}"
bjY3RXJv,podróbka millis,sdfdsfdsfhhhh,C,Thursday 3rd of August 2023 01:25:28 PM CDT," *
 * Created: 03.08.2023 18:09:10
 * Author : wojte
 */ 
#define F_CPU 16000000UL

#include <avr/io.h>
#include <avr/interrupt.h>
#include <stdbool.h>

volatile uint16_t timE = 0;
uint16_t czasPetli = 0;
bool state = 0;

ISR(TIMER0_COMPA_vect)
{
	timE++; 
}

int millis(void)
{
	int ret = timE;
	return ret;
}

int main(void)
{
    /* Replace with your application code */
	TCCR0A |= (1 << 1); //BIT WGM01 = 1 - TRYB PRACY CTC
	TCCR0B |= (1 << 1);
	TCCR0B |= (1 << 0); //BIT CS01 I CS00 USTAWIONE NA 1 - ZRODLO ZEGARA WEWNETZNRZNE I DZIELNIK /64
	OCR0A = 249; //DZIELNIK /64 I POROWNANIE Z 249 ZAPEWNI CZESTOTLIWOSC 1000HZ PRZY ZEGARZE 16MHZ
	TIMSK0 |= (1<<1); //wlaczenie przerwan licznka
	sei(); //wlaczenie obslugi przerwan
	DDRB |= (1<<5);
	PORTB &= ~(1<<5);
    while (1) 
    {
		
		if(millis() - czasPetli > 1000)
		{
			state = !state;
			czasPetli = millis();
			//PORTB |= (1<<5);
		}
		
		if(state)
		{
			PORTB |= (1<<5);
		}
		else
		{
			PORTB &= ~(1<<5);
		}
    }
}
"
Z7HMhzNk,onelayeraway,rungholt,Lua,Thursday 3rd of August 2023 01:10:17 PM CDT,"local function checkFuel()
    while turtle.getFuelLevel() <= 200 do
        turtle.select(16)
        turtle.refuel(16)
        turtle.select(1)
    end
end

while turtle.detect() == false do
    checkFuel()
    turtle.digDown()
    turtle.forward()
end"
LZ78Lrb5,Untitled,smj007,Python,Thursday 3rd of August 2023 12:59:16 PM CDT,"class Solution:
    def maxProfit(self, prices: List[int]) -> int:

        """"""
        max_current_profit is either obtained by immediately adding current_profit at current index (2) to max_current_profit
        max_current_profit is either obtained by current profit
        """"""
        max_current_profit = 0
        max_profit_so_far = 0

        for i in range(1, len(prices)):
            max_current_profit = max(
                prices[i] - prices[i-1],
                max_current_profit + (prices[i] - prices[i-1])
            )
            max_profit_so_far = max(max_profit_so_far, max_current_profit)

        return max_profit_so_far
        "
FRgYGMuM,K80 Driver,chuk_finley,Bash,Thursday 3rd of August 2023 12:30:17 PM CDT,"#commands to install Nvidia Tesla K80 driver on debian 11/12
#add repo to /etc/apt/sources.list
# Debian 11 ""Bullseye""
deb http://deb.debian.org/debian/ bullseye main contrib non-free
#install the drivers
sudo apt update
sudo apt install nvidia-driver firmware-misc-nonfree nvidia-cuda-toolkit"
WUu68gQz,Untitled,BusinessBurrito,PowerShell,Thursday 3rd of August 2023 12:29:42 PM CDT,"Import-Module ActiveDirectory
    # get active directory

Set-PSDebug -Trace 1
    # set commands to print on screen

$users = get-aduser -filter * -properties Name, PasswordNeverExpires | where {$_.passwordNeverExpires -eq ""true"" } | select-object Distinghuishedname,name,enabled
    # get user filtered list where passwordneverexpires is true

$password = ConvertTo-SecureString -AsPlainText 'NewP@$$wOrd' -Force
    # change password to new password

$param    = @{
    LDAPFilter = ""(userAccountControl:1.2.840.113556.1.4.803:=65536)""
    SearchBase = 'OU=Marketing,DC=PRACTICELABS,DC=COM'
}
    # specify ou of dedicated change

$results = Get-ADUser @param | Set-ADAccountPassword -NewPassword $password -Reset -PassThru
    # get results

$results | Format-Table
    # print results

Read-Host -Prompt ""Press key to exit...""
    # wait for user to acknowledge input/output"
SjzNxeew,Untitled,smj007,Python,Thursday 3rd of August 2023 12:27:04 PM CDT,"class Solution:
    def maxProfit(self, prices: List[int]) -> int:

        """"""
        2D DP: each row cell stores [min_price_so_far, max_profit_so_far]
        """"""
        dp = [[0, 0] for _ in range(len(prices))]
        dp[0][0] = prices[0]

        for i in range(1, len(prices)):
            dp[i][0] = min(dp[i-1][0], prices[i])
            dp[i][1] = max(dp[i-1][1], prices[i] - dp[i][0])

        return dp[len(prices)-1][1]"
