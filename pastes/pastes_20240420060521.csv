id,title,username,language,date,content
rjkBZJ4k,Untitled,35657,C++,Saturday 20th of April 2024 12:58:37 AM CDT,"#include <iostream>
#include <Windows.h>
#include <string.h>

using namespace std;

int main() {
    
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
   
    char line[100];

    cout << ""–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: "";
    gets_s(line);

    char ch;

    cout << ""–í–≤–µ–¥–∏—Ç–µ —Å–∏–º–≤–æ–ª: "";
    cin >> ch;
    
    for (int i = strlen(line) - 1; i >= 0; i--) {
        if (line[i] == ch) {
            cout << i + 1 << "" "";
            return 0;
        }
    }
    cout << ""–ù–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–∏–º–≤–æ–ª–∞"" << endl;
    
    // –≤—Ç–æ—Ä–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
    /*int i = strlen(line) - 1;

    for (; i >= 0; i--) {
        if (line[i] == ch) {
            cout << i + 1 << "" "";
            break;
        }
    }
    if (i == -1) {
        cout << ""–ù–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–∏–º–≤–æ–ª–∞"" << endl;
    }*/
}

"
BEzjF5pq,Untitled,35657,C++,Saturday 20th of April 2024 12:48:19 AM CDT,"#include <iostream>
#include <Windows.h>
#include <string.h>

using namespace std;

int main() {
    
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
   
    char line[100];

    cout << ""–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: "";
    gets_s(line);

    char ch;

    cout << ""–í–≤–µ–¥–∏—Ç–µ —Å–∏–º–≤–æ–ª: "";
    cin >> ch;
    
    for (int i = 0; i < strlen(line); i++) {
        if (line[i] == ch) {
            cout << i + 1 << "" "";
        }
    }
}

"
XZ4wbmTr,Untitled,35657,C++,Saturday 20th of April 2024 12:37:51 AM CDT,"#include <iostream>
#include <Windows.h>
#include <string.h>

using namespace std;

int main() {
    
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
   
    char line[100];

    cout << ""–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: "";
    gets_s(line);

    int m, n;

    cout << ""–í–≤–µ–¥–∏—Ç–µ m: "";
    cin >> m;
    cout << ""–í–≤–µ–¥–∏—Ç–µ n: "";
    cin >> n;

    char* result = new char[strlen(line) - (n - m)];

    int k = 0;
    for (int i = 0; i < m; i++, k++) {
        result[k] = line[i];
    }
    for (int i = n + 1; i < strlen(line); i++, k++) {
        result[k] = line[i];
    }
    result[k] = '\0';

    cout << result << endl;
    delete[] result;
}

"
FYp6fRp3,Untitled,35657,C++,Saturday 20th of April 2024 12:04:23 AM CDT,"#include <iostream>
#include <Windows.h>

using namespace std;

int main() {
    
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
   
    char line[100];

    cout << ""–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: "";
    gets_s(line);

    int m, n;

    cout << ""–í–≤–µ–¥–∏—Ç–µ m: "";
    cin >> m;
    cout << ""–í–≤–µ–¥–∏—Ç–µ n: "";
    cin >> n;

    char* result = new char[n - m + 2];

    int k = 0;
    for (int i = m; i <= n; i++, k++) {
        result[k] = line[i];
    }
    result[k] = '\0';

    cout << result << endl;
    delete[] result;
}

"
DvpMMyST,ü§ë G2A.com Free Gift Card Guide Apr 2024 FIX ü§ë,jusst2k4,GetText,Saturday 20th of April 2024 12:03:04 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_260268.pdf

Working as of:
20 April 2024"
Pmd2z3du,madoka font,elroseria,CSS,Saturday 20th of April 2024 12:02:58 AM CDT,"<style>
 
@font-face {
font-family: madomagi;
src: url(https://dl.dropbox.com/s/jw7da2jevt4m7mx/GD-MadoMaruGoJA-Rev001.otf);
}
 
div {
font-family: madomagi;
}
 
</style>
 
<div> madomarugoja </div>"
3WjtNi9C,session,magnetos,Lua,Friday 19th of April 2024 11:16:22 PM CDT,05f96b7905e3b65c6dd362e64bdacba977ace7b35786790aa9f4e750d617712924
AEdAgt3n,Untitled,35657,C++,Friday 19th of April 2024 10:52:12 PM CDT,"#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, ""ru"");
   
    char line[100];

    gets_s(line);

    int num = strlen(line);

    cout << ""–ó–∞–Ω—è—Ç–æ: "" << num + 1 << "". –°–≤–æ–±–æ–¥–Ω–æ: "" << 100 - num - 1 << endl; // —Å —É—á–µ—Ç–æ–º —Å–∏–º–≤–æ–ª–∞ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏

}

"
VZkyBrkQ,Untitled,retroman,FreeBasic,Friday 19th of April 2024 09:15:03 PM CDT,"#define NameOf(_NAME) #_NAME

Type Box
    As Long X, Y, Z
End Type

Type _18654 '1x1x1 beam https://www.brickowl.com/catalog/lego-beam-1-18654
    As Long X = 1, Y = 1, Z = 1
End Type

Function Main() As Integer
    Dim As Box _2Lx2Lx1L_BOX
    _2Lx2Lx1L_BOX.X = 1
    _2Lx2Lx1L_BOX.Y = 1
    _2Lx2Lx1L_BOX.Z = 1
    
    Dim As _18654 LA1 ' Liftarm-1

    If LA1.X = 1 And LA1.Y = 1 And LA1.Z = 1 Then
        Dim As Integer NumReps = (_2Lx2Lx1L_BOX.X \ LA1.X) * (_2Lx2Lx1L_BOX.Y \ LA1.Y) * (_2Lx2Lx1L_BOX.Z \ LA1.Z)
        
        Print ""Part: ""; NameOf(LA1); "" (of type '""; Mid(NameOf(_18654), 2); ""') fits into ""; Mid(NameOf(_2Lx2Lx1L_BOX), 2); "" ""; NumReps; "" times.""
    End If

    Return 0
End Function

Main()
"
AHcB73dD,BWR - Changelog 19/04/24,SSilver,Diff,Friday 19th of April 2024 07:54:45 PM CDT,"Airblast
~ Fixed pressure to recharge during deploy
Third Degree
~ Fixes to how obstructions block linked damage consistently
Conniver's Kunai
~ Fixed interaction after switching from Spy-cicle causing massive health boost
Fixes for more consistent behavior with these changes

Manmelter
+ Added 25% faster firing speed
A bonus added to help better capitalize on the shorter afterburn at range for gaining crits, while also helping close out some kills with crits faster.

Thermal Thruster
~ Replaced Hover with Mini-Boost, providing a single upward thrust instead of the consistent force
+ Increased the height gained from the mini-boost
- Reduced horizontal momentum from the mini-boost
The hover has proven somewhat polarizing for how easy the pyro can throw off enemy aim. It's been reworked into a single thrust in a specific direction, providing a more predictable arc for enemies to account for while still giving the pyro additional height to make use of passively.

Loch-n-Load
+ Decreased reload speed penalty to 20% slower (was 35%)
+ Added: Mini-crits targets launched airborne by explosions, grapple hooks or rocket packs
- Removed damage bonus vs players
The bonus damage wasn't very welcome on a grenade launcher with bonus range and especially with its bonus firing speed. This on top of the slower reload made fighting it and using it awkward. This change attempts to make it less extreme on either end; still great for precision shooting and still leaving you vulnerable after both shots, but less punishing for both.

Buffalo Steak Sandvich
+ Damage resistance under effects increased to -25% (was -15%)
+ Added 75% resistance to push force from damage and airblast under effects
- User is Marked for Death for an additional 3 seconds after effect ends
- Damage resistance only applies to ranged damage sources
The steak still was hard to justify running with a minigun, with it still being hard to clear space with it. These updates attempt to remedy this by giving the Heavy additional bulk and the ability to close the gap on enemies easier. As downsides, the heavy is left a bit more vulnerable after the effect runs its course, meant to incentivize smarter use of it when pushing back enemies.

The Classic
- Increasing critical headshot threshold to 50% charge (from 33%)
The threshold was a tad too low, it it's been increased to about 1.5 seconds rather than 1 second.

Issues
- Bison and Pomson projectile speed have reverted due to supporting plugin's incompatibility with TF2 post-update
These changes will be restored when supporting plugins get updated to work properly."
TgvF2Y4H,–°–ü–†–ò–ù–¢ ‚Ññ 7 | –ú–æ–¥–µ–ª—å –ø–∞–º—è—Ç–∏ –≤ C++ | –£—Ä–æ–∫ 8: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤. –ß–∞—Å—Ç—å –≤—Ç–æ—Ä–∞—è 2/2,chevengur,C++,Friday 19th of April 2024 07:46:52 PM CDT,"#include <cassert>
#include <iostream>
#include <string>

using namespace std;


// –£–º–Ω—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å, —É–¥–∞–ª—è—é—â–∏–π —Å–≤—è–∑–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –ø—Ä–∏ —Å–≤–æ—ë–º —Ä–∞–∑—Ä—É—à–µ–Ω–∏–∏.
// –ü–∞—Ä–∞–º–µ—Ç—Ä —à–∞–±–ª–æ–Ω–∞ T –∑–∞–¥–∞—ë—Ç —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Å—Å—ã–ª–∞–µ—Ç—Å—è —É–∫–∞–∑–∞—Ç–µ–ª—å
template <typename T>
class ScopedPtr {
public:
    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–æ–∑–¥–∞—ë—Ç –Ω—É–ª–µ–≤–æ–π —É–∫–∞–∑–∞—Ç–µ–ª—å,
    // —Ç–∞–∫ –∫–∞–∫ –ø–æ–ª–µ ptr_ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é nullptr
    ScopedPtr() = default;

    // –°–æ–∑–¥–∞—ë—Ç —É–∫–∞–∑–∞—Ç–µ–ª—å, —Å—Å—ã–ª–∞—é—â–∏–π—Å—è –Ω–∞ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π raw_ptr.
    // raw_ptr —Å—Å—ã–ª–∞–µ—Ç—Å—è –ª–∏–±–æ –Ω–∞ –æ–±—ä–µ–∫—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –≤ –∫—É—á–µ –ø—Ä–∏ –ø–æ–º–æ—â–∏ new,
    // –ª–∏–±–æ —è–≤–ª—è–µ—Ç—Å—è –Ω—É–ª–µ–≤—ã–º —É–∫–∞–∑–∞—Ç–µ–ª–µ–º
    // –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ç–æ—Ä noexcept –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –º–µ—Ç–æ–¥ –Ω–µ –±—Ä–æ—Å–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–π
    explicit ScopedPtr(T* raw_ptr) noexcept {
        if (raw_ptr != nullptr)
        {
            ptr_ = raw_ptr;
        }
    }

    // –£–¥–∞–ª—è–µ–º —É –∫–ª–∞—Å—Å–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    ScopedPtr(const ScopedPtr&) = delete;

    // –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä. –£–¥–∞–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Å—Å—ã–ª–∞–µ—Ç—Å—è —É–º–Ω—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å.
    ~ScopedPtr() {

        delete ptr_;
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–∫–∞–∑–∞—Ç–µ–ª—å, —Ö—Ä–∞–Ω—è—â–∏–π—Å—è –≤–Ω—É—Ç—Ä–∏ ScopedPtr
    T* GetRawPtr() const noexcept {

        return ptr_;
    }

    // –ü—Ä–µ–∫—Ä–∞—â–∞–µ—Ç –≤–ª–∞–¥–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–º, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Å—Å—ã–ª–∞–µ—Ç—Å—è —É–º–Ω—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å.
    // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–µ–∂–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ""—Å—ã—Ä–æ–≥–æ"" —É–∫–∞–∑–∞—Ç–µ–ª—è –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–æ–ª–µ ptr_ –≤ null
    T* Release() noexcept {
        T* new_ptr = ptr_;
        ptr_ = nullptr;
        return new_ptr;

    }

    // –û–ø–µ—Ä–∞—Ç–æ—Ä -> –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –æ–±—ä–µ–∫—Ç
    // –í—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ std::logic_error, –µ—Å–ª–∏ —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω—É–ª–µ–≤–æ–π
    T* operator->() const {
        if (ptr_ != nullptr)
        {
            return ptr_;
        }
        throw logic_error(""Null pointer"");
    }

    // –û–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—ä–µ–∫—Ç
    // –í—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ std::logic_error, –µ—Å–ª–∏ —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω—É–ª–µ–≤–æ–π
    T& operator*() const {
        if (ptr_ != nullptr)
        {
            return *ptr_;
        }
        throw logic_error(""Null pointer"");
    }

    // –û–ø–µ—Ä–∞—Ç–æ—Ä –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è –∫ —Ç–∏–ø—É bool –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–∑–Ω–∞—Ç—å, —Å—Å—ã–ª–∞–µ—Ç—Å—è –ª–∏ —É–º–Ω—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å
    // –Ω–∞ –∫–∞–∫–æ–π-–ª–∏–±–æ –æ–±—ä–µ–∫—Ç
    explicit operator bool() const noexcept {
        return ptr_ != nullptr;
    }

private:
    T* ptr_ = nullptr;
};

// –≠—Ç–æ—Ç main —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–ª–∞—Å—Å ScopedPtr
int main() {
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è –∫ —Ç–∏–ø—É bool
    {
        // –î–ª—è –Ω—É–ª–µ–≤–æ–≥–æ —É–∫–∞–∑–∞—Ç–µ–ª—è –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ —Ç–∏–ø—É bool –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç false
        const ScopedPtr<int> empty_ptr;
        assert(!empty_ptr);

        // –î–ª—è –Ω–µ–Ω—É–ª–µ–≤–æ–≥–æ —É–∫–∞–∑–∞—Ç–µ–ª—è –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ —Ç–∏–ø—É bool –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true
        const ScopedPtr<int> ptr_to_existing_object(new int(0));
        assert(ptr_to_existing_object);

        static_assert(noexcept(static_cast<bool>(ptr_to_existing_object)));
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏—è *
    {
        string* raw_ptr = new string(""hello"");
        ScopedPtr<string> smart_ptr(raw_ptr);
        // –°—Å—ã–ª–∫–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–∞—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏—è, –¥–æ–ª–∂–Ω–∞ —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ –æ–±—ä–µ–∫—Ç,
        // –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑—ã–≤–∞–µ—Ç —É–º–Ω—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å
        assert(&*smart_ptr == raw_ptr);

        try {
            ScopedPtr<int> empty_ptr;
            // –ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞—Ç—å –ø—É—Å—Ç–æ–π —É–∫–∞–∑–∞—Ç–µ–ª—å –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤—ã–±—Ä–æ—à–µ–Ω–æ
            // –∏—Å–∫–ª—é—á–µ–Ω–∏–µ logic_error
            *empty_ptr;
            // –°—é–¥–∞ –ø–æ–ø–∞—Å—Ç—å –º—ã –Ω–µ –¥–æ–ª–∂–Ω—ã
            assert(false);
        }
        catch (const logic_error&) {
            // –º—ã —Ç–∞–º, –≥–¥–µ –Ω—É–∂–Ω–æ
        }
        catch (...) {
            // –î—Ä—É–≥–∏—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å—Å—è –Ω–µ –¥–æ–ª–∂–Ω–æ
            assert(false);
        }
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ ->
    {
        string* raw_ptr = new string(""hello"");
        ScopedPtr<string> smart_ptr(raw_ptr);
        // –î–æ—Å—Ç—É–ø –∫ —á–ª–µ–Ω–∞–º –∫–ª–∞—Å—Å–∞ —á–µ—Ä–µ–∑ —É–º–Ω—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–Ω–∞–ª–æ–≥–∏—á–µ–Ω
        // –¥–æ—Å—Ç—É–ø—É —á–µ—Ä–µ–∑ ""—Å—ã—Ä–æ–π"" —É–∫–∞–∑–∞—Ç–µ–ª—å
        assert(smart_ptr->data() == raw_ptr->data());

        try {
            ScopedPtr<string> empty_ptr;
            // –ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞—Ç—å –ø—É—Å—Ç–æ–π —É–∫–∞–∑–∞—Ç–µ–ª—å –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤—ã–±—Ä–æ—à–µ–Ω–æ
            // –∏—Å–∫–ª—é—á–µ–Ω–∏–µ logic_error
            empty_ptr->clear();
            // –°—é–¥–∞ –ø–æ–ø–∞—Å—Ç—å –º—ã –Ω–µ –¥–æ–ª–∂–Ω—ã
            assert(false);
        }
        catch (const logic_error&) {
            // –º—ã —Ç–∞–º, –≥–¥–µ –Ω—É–∂–Ω–æ
        }
        catch (...) {
            // –î—Ä—É–≥–∏—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å—Å—è –Ω–µ –¥–æ–ª–∂–Ω–æ
            assert(false);
        }
    }

    // –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    {
        // –ù–∞ —ç—Ç–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å—Å—è —Ä–∞–±–æ—Ç–∞ —É–º–Ω–æ–≥–æ —É–∫–∞–∑–∞—Ç–µ–ª—è
        struct Object {
            Object() {
                cout << ""Object is default constructed""s << endl;
            }
            void DoSomething() {
                cout << ""Doing something""s << endl;
            }
            ~Object() {
                cout << ""Object is destroyed""s << endl;
            }
        };

        // –°–∫–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —É–∫–∞–∑–∞—Ç–µ–ª—å —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ nullptr
        ScopedPtr<Object> empty_smart_ptr;
        // –ü–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è –∫ —Ç–∏–ø—É bool –≤–µ—Ä–Ω—ë—Ç false –¥–ª—è –ø—É—Å—Ç–æ–≥–æ —É–∫–∞–∑–∞—Ç–µ–ª—è
        assert(!empty_smart_ptr);

        ScopedPtr<Object> smart_ptr(new Object());
        // –ü–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä bool –≤–µ—Ä–Ω—ë—Ç true –¥–ª—è —É–∫–∞–∑–∞—Ç–µ–ª—è, —Å—Å—ã–ª–∞—é—â–µ–≥–æ—Å—è –Ω–∞ –æ–±—ä–µ–∫—Ç
        assert(smart_ptr);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏—è
        (*smart_ptr).DoSomething();
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —á–ª–µ–Ω–∞–º –∫–ª–∞—Å—Å–∞
        smart_ptr->DoSomething();
    }
}"
dPbGqcir,2024-04-19_stats.json,rdp_snitch,JSON,Friday 19th of April 2024 07:18:26 PM CDT,"{
  ""ip"": {
    ""162.142.125.210"": 3,
    ""167.94.146.58"": 3,
    ""87.251.67.195"": 18,
    ""205.210.31.97"": 9,
    ""164.90.214.125"": 3,
    ""103.166.184.11"": 6,
    ""198.50.153.168"": 9,
    ""213.202.230.4"": 3,
    ""87.251.75.145"": 9,
    ""36.137.3.251"": 24,
    ""103.245.237.31"": 78,
    ""36.91.222.100"": 6,
    ""91.238.181.16"": 6,
    ""139.59.56.11"": 24,
    ""40.160.6.116"": 294,
    ""185.170.144.3"": 6,
    ""185.161.248.148"": 3,
    ""164.92.103.151"": 3,
    ""2.57.149.186"": 6,
    ""45.227.254.55"": 6,
    ""165.154.32.235"": 3,
    ""190.92.175.108"": 9,
    ""205.210.31.140"": 9,
    ""62.204.41.225"": 12,
    ""80.66.76.92"": 3,
    ""64.226.75.54"": 3,
    ""58.218.204.183"": 9,
    ""82.48.48.234"": 3,
    ""128.14.209.30"": 18,
    ""173.237.25.68"": 3,
    ""185.81.68.38"": 9,
    ""216.74.107.251"": 3,
    ""167.94.138.49"": 3,
    ""198.235.24.254"": 9,
    ""87.251.75.64"": 3,
    ""84.201.2.2"": 6,
    ""45.227.254.8"": 6,
    ""112.4.139.162"": 3,
    ""196.190.117.7"": 3,
    ""194.165.16.73"": 6,
    ""185.161.248.219"": 6,
    ""116.140.196.215"": 3,
    ""205.210.31.68"": 9,
    ""94.232.46.132"": 3
  },
  ""asn"": {
    ""AS398324"": 6,
    ""AS398705"": 3,
    ""AS208091"": 33,
    ""AS396982"": 36,
    ""AS14061"": 33,
    ""AS135905"": 6,
    ""AS16276"": 303,
    ""AS24961"": 3,
    ""AS9808"": 24,
    ""AS150867"": 78,
    ""AS7713"": 6,
    ""AS49434"": 6,
    ""AS197414"": 6,
    ""AS49202"": 9,
    ""AS208312"": 6,
    ""AS267784"": 12,
    ""AS135377"": 3,
    ""Unknown"": 9,
    ""AS59425"": 12,
    ""AS4134"": 9,
    ""AS3269"": 3,
    ""AS21859"": 18,
    ""AS7979"": 3,
    ""AS57523"": 9,
    ""AS14315"": 3,
    ""AS44066"": 6,
    ""AS56046"": 3,
    ""AS24757"": 3,
    ""AS48721"": 6,
    ""AS4837"": 3,
    ""AS212482"": 3
  },
  ""isp"": {
    ""Censys, Inc."": 9,
    ""Xhost Internet Solutions LP"": 42,
    ""Google LLC"": 36,
    ""DigitalOcean, LLC"": 33,
    ""CLOUDFLY"": 6,
    ""OVH Hosting"": 9,
    ""myLoc managed IT AG"": 3,
    ""China Mobile"": 24,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 78,
    ""PT Telekomunikasi Indonesia"": 6,
    ""Datacenter location PAR1 France"": 6,
    ""OVH SAS"": 294,
    ""Kisara LLC"": 9,
    ""Red Byte LLC"": 6,
    ""Flyservers S.A."": 18,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""WHG Hosting Services Ltd"": 9,
    ""Horizon LLC"": 12,
    ""Chinanet"": 9,
    ""Telecom Italia S.p.A. TIN EASY LITE"": 3,
    ""Zenlayer Inc"": 18,
    ""Servers.com, Inc."": 3,
    ""Chang Way Technologies Co. Limited"": 9,
    ""Colocation America Corporation"": 3,
    ""www.accelerated.de"": 6,
    ""China Mobile Communications Corporation"": 3,
    ""Ethiotelecom"": 3,
    ""China Unicom CHINA169 Network"": 3
  },
  ""org"": {
    ""Censys Inc"": 3,
    ""Censys, Inc."": 3,
    ""Xhost Internet Solutions"": 33,
    ""Palo Alto Networks, Inc"": 36,
    ""DigitalOcean, LLC"": 33,
    ""Cloudfly Corporation"": 6,
    ""OVH (NWK)"": 9,
    ""myLoc managed IT AG"": 3,
    ""China Mobile Communications Corporation"": 27,
    ""LP Technology Electronic Commerce Company Limited"": 78,
    ""Telekomunikasi Indonesia"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""OVH US LLC"": 294,
    ""Xhostis"": 6,
    ""Kisara LLC"": 9,
    ""Chang Way Technologies Co. Limited"": 6,
    ""UAB Host Baltic"": 12,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""WHG Hosting Services Ltd"": 9,
    ""Horizon LLC"": 12,
    ""Chinanet JS"": 9,
    ""INTERBUSINESS"": 3,
    ""ZENLA"": 18,
    ""Servers.com, Inc."": 3,
    ""Starcrecium Limited"": 9,
    ""Lucid Growth LLC"": 3,
    ""Censys, Inc"": 3,
    ""diva-e Datacenters GmbH"": 6,
    ""Unknown"": 3,
    ""Flyservers S.A"": 6,
    ""China United Network Communications Corporation Limited"": 3,
    ""Dmitriy Panchenko"": 3
  },
  ""regionName"": {
    ""Michigan"": 6,
    ""Hesse"": 15,
    ""Lower Silesia"": 18,
    ""California"": 57,
    ""Hanoi"": 6,
    ""New Jersey"": 9,
    ""North Rhine-Westphalia"": 3,
    ""North Holland"": 21,
    ""Guangdong"": 24,
    ""Ho Chi Minh"": 78,
    ""Jakarta"": 6,
    ""\u00cele-de-France"": 6,
    ""Karnataka"": 24,
    ""Virginia"": 294,
    ""Moscow"": 30,
    ""Lesser Poland"": 6,
    ""Vilnius"": 12,
    ""Metro Manila"": 3,
    ""Ohio"": 9,
    ""Jiangsu"": 12,
    ""Veneto"": 3,
    ""Texas"": 3,
    ""Delaware"": 3,
    ""Addis Ababa"": 3,
    ""Kaunas"": 6,
    ""Beijing"": 3,
    ""Perm Krai"": 3
  },
  ""country"": {
    ""United States"": 381,
    ""Germany"": 18,
    ""Poland"": 24,
    ""Vietnam"": 84,
    ""The Netherlands"": 21,
    ""China"": 39,
    ""Indonesia"": 6,
    ""France"": 6,
    ""India"": 24,
    ""Russia"": 33,
    ""Lithuania"": 18,
    ""Philippines"": 3,
    ""Italy"": 3,
    ""Ethiopia"": 3
  },
  ""account"": {
    ""(empty)"": 18,
    ""Domain"": 33,
    ""gBCaaDSxT"": 3,
    ""OLylSD"": 3,
    ""EheDbG"": 3,
    ""hello"": 462,
    ""Administr"": 36,
    ""Test"": 54,
    ""Administrator"": 3,
    ""AEzsViNLP"": 3,
    ""vTfOAs"": 3,
    ""vjfMUa"": 3,
    ""a"": 3,
    ""root"": 18,
    ""hXOHWQVMY"": 3,
    ""gslayJ"": 3,
    ""ZIyxXL"": 3,
    ""BlvMfYWjC"": 3,
    ""yIUQlK"": 3,
    ""cVbEqR"": 3
  },
  ""keyboard"": {
    ""Unknown"": 663
  },
  ""client_build"": {
    ""Unknown"": 663
  },
  ""client_name"": {
    ""Unknown"": 663
  },
  ""ip_type"": {
    ""Unknown"": 210,
    ""hosting"": 408,
    ""hosting & proxy"": 6,
    ""mobile"": 27,
    ""proxy"": 12
  }
}"
B7Shp6eF,2024-04-19_stats.json,rdp_snitch,JSON,Friday 19th of April 2024 07:16:18 PM CDT,"{
  ""ip"": {
    ""162.142.125.210"": 2,
    ""167.94.146.58"": 2,
    ""87.251.67.195"": 12,
    ""205.210.31.97"": 6,
    ""164.90.214.125"": 2,
    ""103.166.184.11"": 4,
    ""198.50.153.168"": 6,
    ""213.202.230.4"": 2,
    ""87.251.75.145"": 6,
    ""36.137.3.251"": 16,
    ""103.245.237.31"": 52,
    ""36.91.222.100"": 4,
    ""91.238.181.16"": 4,
    ""139.59.56.11"": 16,
    ""40.160.6.116"": 196,
    ""185.170.144.3"": 4,
    ""185.161.248.148"": 2,
    ""164.92.103.151"": 2,
    ""2.57.149.186"": 4,
    ""45.227.254.55"": 4,
    ""165.154.32.235"": 2,
    ""190.92.175.108"": 6,
    ""205.210.31.140"": 6,
    ""62.204.41.225"": 8,
    ""80.66.76.92"": 2,
    ""64.226.75.54"": 2,
    ""58.218.204.183"": 6,
    ""82.48.48.234"": 2,
    ""128.14.209.30"": 12,
    ""173.237.25.68"": 2,
    ""185.81.68.38"": 6,
    ""216.74.107.251"": 2,
    ""167.94.138.49"": 2,
    ""198.235.24.254"": 6,
    ""87.251.75.64"": 2,
    ""84.201.2.2"": 4,
    ""45.227.254.8"": 4,
    ""112.4.139.162"": 2,
    ""196.190.117.7"": 2,
    ""194.165.16.73"": 4,
    ""185.161.248.219"": 4,
    ""116.140.196.215"": 2,
    ""205.210.31.68"": 6,
    ""94.232.46.132"": 2
  },
  ""asn"": {
    ""AS398324"": 4,
    ""AS398705"": 2,
    ""AS208091"": 22,
    ""AS396982"": 24,
    ""AS14061"": 22,
    ""AS135905"": 4,
    ""AS16276"": 202,
    ""AS24961"": 2,
    ""AS9808"": 16,
    ""AS150867"": 52,
    ""AS7713"": 4,
    ""AS49434"": 4,
    ""AS197414"": 4,
    ""AS49202"": 6,
    ""AS208312"": 4,
    ""AS267784"": 8,
    ""AS135377"": 2,
    ""Unknown"": 6,
    ""AS59425"": 8,
    ""AS4134"": 6,
    ""AS3269"": 2,
    ""AS21859"": 12,
    ""AS7979"": 2,
    ""AS57523"": 6,
    ""AS14315"": 2,
    ""AS44066"": 4,
    ""AS56046"": 2,
    ""AS24757"": 2,
    ""AS48721"": 4,
    ""AS4837"": 2,
    ""AS212482"": 2
  },
  ""isp"": {
    ""Censys, Inc."": 6,
    ""Xhost Internet Solutions LP"": 28,
    ""Google LLC"": 24,
    ""DigitalOcean, LLC"": 22,
    ""CLOUDFLY"": 4,
    ""OVH Hosting"": 6,
    ""myLoc managed IT AG"": 2,
    ""China Mobile"": 16,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 52,
    ""PT Telekomunikasi Indonesia"": 4,
    ""Datacenter location PAR1 France"": 4,
    ""OVH SAS"": 196,
    ""Kisara LLC"": 6,
    ""Red Byte LLC"": 4,
    ""Flyservers S.A."": 12,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""WHG Hosting Services Ltd"": 6,
    ""Horizon LLC"": 8,
    ""Chinanet"": 6,
    ""Telecom Italia S.p.A. TIN EASY LITE"": 2,
    ""Zenlayer Inc"": 12,
    ""Servers.com, Inc."": 2,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Colocation America Corporation"": 2,
    ""www.accelerated.de"": 4,
    ""China Mobile Communications Corporation"": 2,
    ""Ethiotelecom"": 2,
    ""China Unicom CHINA169 Network"": 2
  },
  ""org"": {
    ""Censys Inc"": 2,
    ""Censys, Inc."": 2,
    ""Xhost Internet Solutions"": 22,
    ""Palo Alto Networks, Inc"": 24,
    ""DigitalOcean, LLC"": 22,
    ""Cloudfly Corporation"": 4,
    ""OVH (NWK)"": 6,
    ""myLoc managed IT AG"": 2,
    ""China Mobile Communications Corporation"": 18,
    ""LP Technology Electronic Commerce Company Limited"": 52,
    ""Telekomunikasi Indonesia"": 4,
    ""ThinkTech Technology Industrial CO. Limited"": 4,
    ""OVH US LLC"": 196,
    ""Xhostis"": 4,
    ""Kisara LLC"": 6,
    ""Chang Way Technologies Co. Limited"": 4,
    ""UAB Host Baltic"": 8,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""WHG Hosting Services Ltd"": 6,
    ""Horizon LLC"": 8,
    ""Chinanet JS"": 6,
    ""INTERBUSINESS"": 2,
    ""ZENLA"": 12,
    ""Servers.com, Inc."": 2,
    ""Starcrecium Limited"": 6,
    ""Lucid Growth LLC"": 2,
    ""Censys, Inc"": 2,
    ""diva-e Datacenters GmbH"": 4,
    ""Unknown"": 2,
    ""Flyservers S.A"": 4,
    ""China United Network Communications Corporation Limited"": 2,
    ""Dmitriy Panchenko"": 2
  },
  ""regionName"": {
    ""Michigan"": 4,
    ""Hesse"": 10,
    ""Lower Silesia"": 12,
    ""California"": 38,
    ""Hanoi"": 4,
    ""New Jersey"": 6,
    ""North Rhine-Westphalia"": 2,
    ""North Holland"": 14,
    ""Guangdong"": 16,
    ""Ho Chi Minh"": 52,
    ""Jakarta"": 4,
    ""\u00cele-de-France"": 4,
    ""Karnataka"": 16,
    ""Virginia"": 196,
    ""Moscow"": 20,
    ""Lesser Poland"": 4,
    ""Vilnius"": 8,
    ""Metro Manila"": 2,
    ""Ohio"": 6,
    ""Jiangsu"": 8,
    ""Veneto"": 2,
    ""Texas"": 2,
    ""Delaware"": 2,
    ""Addis Ababa"": 2,
    ""Kaunas"": 4,
    ""Beijing"": 2,
    ""Perm Krai"": 2
  },
  ""country"": {
    ""United States"": 254,
    ""Germany"": 12,
    ""Poland"": 16,
    ""Vietnam"": 56,
    ""The Netherlands"": 14,
    ""China"": 26,
    ""Indonesia"": 4,
    ""France"": 4,
    ""India"": 16,
    ""Russia"": 22,
    ""Lithuania"": 12,
    ""Philippines"": 2,
    ""Italy"": 2,
    ""Ethiopia"": 2
  },
  ""account"": {
    ""(empty)"": 12,
    ""Domain"": 22,
    ""gBCaaDSxT"": 2,
    ""OLylSD"": 2,
    ""EheDbG"": 2,
    ""hello"": 308,
    ""Administr"": 24,
    ""Test"": 36,
    ""Administrator"": 2,
    ""AEzsViNLP"": 2,
    ""vTfOAs"": 2,
    ""vjfMUa"": 2,
    ""a"": 2,
    ""root"": 12,
    ""hXOHWQVMY"": 2,
    ""gslayJ"": 2,
    ""ZIyxXL"": 2,
    ""BlvMfYWjC"": 2,
    ""yIUQlK"": 2,
    ""cVbEqR"": 2
  },
  ""keyboard"": {
    ""Unknown"": 442
  },
  ""client_build"": {
    ""Unknown"": 442
  },
  ""client_name"": {
    ""Unknown"": 442
  },
  ""ip_type"": {
    ""Unknown"": 140,
    ""hosting"": 272,
    ""hosting & proxy"": 4,
    ""mobile"": 18,
    ""proxy"": 8
  }
}"
0FgTjcBt,2024-04-19_stats.json,rdp_snitch,JSON,Friday 19th of April 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""162.142.125.210"": 1,
    ""167.94.146.58"": 1,
    ""87.251.67.195"": 6,
    ""205.210.31.97"": 3,
    ""164.90.214.125"": 1,
    ""103.166.184.11"": 2,
    ""198.50.153.168"": 3,
    ""213.202.230.4"": 1,
    ""87.251.75.145"": 3,
    ""36.137.3.251"": 8,
    ""103.245.237.31"": 26,
    ""36.91.222.100"": 2,
    ""91.238.181.16"": 2,
    ""139.59.56.11"": 8,
    ""40.160.6.116"": 98,
    ""185.170.144.3"": 2,
    ""185.161.248.148"": 1,
    ""164.92.103.151"": 1,
    ""2.57.149.186"": 2,
    ""45.227.254.55"": 2,
    ""165.154.32.235"": 1,
    ""190.92.175.108"": 3,
    ""205.210.31.140"": 3,
    ""62.204.41.225"": 4,
    ""80.66.76.92"": 1,
    ""64.226.75.54"": 1,
    ""58.218.204.183"": 3,
    ""82.48.48.234"": 1,
    ""128.14.209.30"": 6,
    ""173.237.25.68"": 1,
    ""185.81.68.38"": 3,
    ""216.74.107.251"": 1,
    ""167.94.138.49"": 1,
    ""198.235.24.254"": 3,
    ""87.251.75.64"": 1,
    ""84.201.2.2"": 2,
    ""45.227.254.8"": 2,
    ""112.4.139.162"": 1,
    ""196.190.117.7"": 1,
    ""194.165.16.73"": 2,
    ""185.161.248.219"": 2,
    ""116.140.196.215"": 1,
    ""205.210.31.68"": 3,
    ""94.232.46.132"": 1
  },
  ""asn"": {
    ""AS398324"": 2,
    ""AS398705"": 1,
    ""AS208091"": 11,
    ""AS396982"": 12,
    ""AS14061"": 11,
    ""AS135905"": 2,
    ""AS16276"": 101,
    ""AS24961"": 1,
    ""AS9808"": 8,
    ""AS150867"": 26,
    ""AS7713"": 2,
    ""AS49434"": 2,
    ""AS197414"": 2,
    ""AS49202"": 3,
    ""AS208312"": 2,
    ""AS267784"": 4,
    ""AS135377"": 1,
    ""Unknown"": 3,
    ""AS59425"": 4,
    ""AS4134"": 3,
    ""AS3269"": 1,
    ""AS21859"": 6,
    ""AS7979"": 1,
    ""AS57523"": 3,
    ""AS14315"": 1,
    ""AS44066"": 2,
    ""AS56046"": 1,
    ""AS24757"": 1,
    ""AS48721"": 2,
    ""AS4837"": 1,
    ""AS212482"": 1
  },
  ""isp"": {
    ""Censys, Inc."": 3,
    ""Xhost Internet Solutions LP"": 14,
    ""Google LLC"": 12,
    ""DigitalOcean, LLC"": 11,
    ""CLOUDFLY"": 2,
    ""OVH Hosting"": 3,
    ""myLoc managed IT AG"": 1,
    ""China Mobile"": 8,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 26,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Datacenter location PAR1 France"": 2,
    ""OVH SAS"": 98,
    ""Kisara LLC"": 3,
    ""Red Byte LLC"": 2,
    ""Flyservers S.A."": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""WHG Hosting Services Ltd"": 3,
    ""Horizon LLC"": 4,
    ""Chinanet"": 3,
    ""Telecom Italia S.p.A. TIN EASY LITE"": 1,
    ""Zenlayer Inc"": 6,
    ""Servers.com, Inc."": 1,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Colocation America Corporation"": 1,
    ""www.accelerated.de"": 2,
    ""China Mobile Communications Corporation"": 1,
    ""Ethiotelecom"": 1,
    ""China Unicom CHINA169 Network"": 1
  },
  ""org"": {
    ""Censys Inc"": 1,
    ""Censys, Inc."": 1,
    ""Xhost Internet Solutions"": 11,
    ""Palo Alto Networks, Inc"": 12,
    ""DigitalOcean, LLC"": 11,
    ""Cloudfly Corporation"": 2,
    ""OVH (NWK)"": 3,
    ""myLoc managed IT AG"": 1,
    ""China Mobile Communications Corporation"": 9,
    ""LP Technology Electronic Commerce Company Limited"": 26,
    ""Telekomunikasi Indonesia"": 2,
    ""ThinkTech Technology Industrial CO. Limited"": 2,
    ""OVH US LLC"": 98,
    ""Xhostis"": 2,
    ""Kisara LLC"": 3,
    ""Chang Way Technologies Co. Limited"": 2,
    ""UAB Host Baltic"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""WHG Hosting Services Ltd"": 3,
    ""Horizon LLC"": 4,
    ""Chinanet JS"": 3,
    ""INTERBUSINESS"": 1,
    ""ZENLA"": 6,
    ""Servers.com, Inc."": 1,
    ""Starcrecium Limited"": 3,
    ""Lucid Growth LLC"": 1,
    ""Censys, Inc"": 1,
    ""diva-e Datacenters GmbH"": 2,
    ""Unknown"": 1,
    ""Flyservers S.A"": 2,
    ""China United Network Communications Corporation Limited"": 1,
    ""Dmitriy Panchenko"": 1
  },
  ""regionName"": {
    ""Michigan"": 2,
    ""Hesse"": 5,
    ""Lower Silesia"": 6,
    ""California"": 19,
    ""Hanoi"": 2,
    ""New Jersey"": 3,
    ""North Rhine-Westphalia"": 1,
    ""North Holland"": 7,
    ""Guangdong"": 8,
    ""Ho Chi Minh"": 26,
    ""Jakarta"": 2,
    ""\u00cele-de-France"": 2,
    ""Karnataka"": 8,
    ""Virginia"": 98,
    ""Moscow"": 10,
    ""Lesser Poland"": 2,
    ""Vilnius"": 4,
    ""Metro Manila"": 1,
    ""Ohio"": 3,
    ""Jiangsu"": 4,
    ""Veneto"": 1,
    ""Texas"": 1,
    ""Delaware"": 1,
    ""Addis Ababa"": 1,
    ""Kaunas"": 2,
    ""Beijing"": 1,
    ""Perm Krai"": 1
  },
  ""country"": {
    ""United States"": 127,
    ""Germany"": 6,
    ""Poland"": 8,
    ""Vietnam"": 28,
    ""The Netherlands"": 7,
    ""China"": 13,
    ""Indonesia"": 2,
    ""France"": 2,
    ""India"": 8,
    ""Russia"": 11,
    ""Lithuania"": 6,
    ""Philippines"": 1,
    ""Italy"": 1,
    ""Ethiopia"": 1
  },
  ""account"": {
    ""(empty)"": 6,
    ""Domain"": 11,
    ""gBCaaDSxT"": 1,
    ""OLylSD"": 1,
    ""EheDbG"": 1,
    ""hello"": 154,
    ""Administr"": 12,
    ""Test"": 18,
    ""Administrator"": 1,
    ""AEzsViNLP"": 1,
    ""vTfOAs"": 1,
    ""vjfMUa"": 1,
    ""a"": 1,
    ""root"": 6,
    ""hXOHWQVMY"": 1,
    ""gslayJ"": 1,
    ""ZIyxXL"": 1,
    ""BlvMfYWjC"": 1,
    ""yIUQlK"": 1,
    ""cVbEqR"": 1
  },
  ""keyboard"": {
    ""Unknown"": 221
  },
  ""client_build"": {
    ""Unknown"": 221
  },
  ""client_name"": {
    ""Unknown"": 221
  },
  ""ip_type"": {
    ""Unknown"": 70,
    ""hosting"": 136,
    ""hosting & proxy"": 2,
    ""mobile"": 9,
    ""proxy"": 4
  }
}"
YeavjqrY,Input.ini,Sticky2000,INI file,Friday 19th of April 2024 07:14:44 PM CDT,"[/Script/Engine.InputSettings]
AxisMappings=(AxisName=""Turn"",Key=MouseX,Scale=1.000000)
AxisMappings=(AxisName=""LookUp"",Key=MouseY,Scale=-1.428571)
AxisMappings=(AxisName=""WorldMapZoom"",Key=MouseWheelAxis,Scale=1.000000)
AxisMappings=(AxisName=""UI_MapMoveX"",Key=MouseX,Scale=1.000000)
AxisMappings=(AxisName=""UI_MapMoveY"",Key=MouseY,Scale=-1.000000)
AxisMappings=(AxisName=""MoveForward"", Key=W, Scale=1.000000)
AxisMappings=(AxisName=""MoveForward"", Key=S, Scale=-1.000000)
AxisMappings=(AxisName=""MoveRight"", Key=D, Scale=1.000000)
AxisMappings=(AxisName=""MoveRight"", Key=A, Scale=-1.000000)"
QEHjyNqT,Patch For 1.10 D2Template LightRadius,atirjavid,C++,Friday 19th of April 2024 06:57:25 PM CDT,"#pragma once

#ifndef _D2PATCH_H
#define _D2PATCH_H

#include ""D2PatchConst.h""

DWORD calculateRelativeOffsetD2Common(DWORD offset) {
    return offset - 0x6F600000;
}

DWORD calculateRelativeOffsetD2Client(DWORD offset) {
    return offset - 0x6FAA0000;
}

const char* filePath = ""./D2Mod.ini"";
int iniValue = GetPrivateProfileIntA(""LightRadius"", ""radius"", 0x00, filePath);

BYTE lightRadius = static_cast<BYTE>(iniValue & 0xFF);

static const DLLPatchStrc gptTemplatePatches[] =
{
        // 1st set
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4293), (DWORD)0xFD83, FALSE,0},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4295), (DWORD)lightRadius, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4296), (DWORD)0x057C, FALSE, 0},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4298), (DWORD)0xBD, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4299), (DWORD)0x00, FALSE, 0x1},
	    { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA429A), (DWORD)0x00, FALSE, 0x1},
	    { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA429B), (DWORD)0x00, FALSE, 0x1},
	    { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA429C), (DWORD)lightRadius, FALSE, 0x1},
        
        
        // 2nd set
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43A4), (DWORD)0xFA83, FALSE,0},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43A6), (DWORD)lightRadius, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43A7), (DWORD)0x057C, FALSE, 0},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43A9), (DWORD)0xBA, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43AA), (DWORD)0x00, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43AB), (DWORD)0x00, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43AC), (DWORD)0x00, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43AD), (DWORD)lightRadius, FALSE, 0x1},


        // 3rd set
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43E7), (DWORD)0xFA83, FALSE,0},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43E9), (DWORD)lightRadius, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43EA), (DWORD)0x057C, FALSE, 0},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43EC), (DWORD)0xBA, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43ED), (DWORD)0x00, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43EE), (DWORD)0x00, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43EF), (DWORD)0x00, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43F0), (DWORD)lightRadius, FALSE, 0x1},

        // 4th set
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4413), (DWORD)0xFA83, FALSE,0},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4415), (DWORD)lightRadius, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4416), (DWORD)0x057C, FALSE, 0},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4418), (DWORD)0xBA, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4419), (DWORD)lightRadius, FALSE, 0},

        //{ D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FB489A0), (DWORD)0x1F6A, FALSE, 0},
        //{ D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FACCC9C), (DWORD)0xB8, FALSE, 0x1},
        //{ D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FACCC9D), (DWORD)0x0000001F, FALSE, 0},

        {D2DLL_INVALID}
};
#endif
"
35e7J6y5,auto_update_all_packages,Python253,Bash,Friday 19th of April 2024 06:37:06 PM CDT,"@echo off
for /f ""tokens=1"" %%i in ('pip list --outdated') do pip install --upgrade %%i
"
Kdw8awCU,update_packages,Python253,Python,Friday 19th of April 2024 06:36:11 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: update_packages.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script checks for outdated Python packages using pip and upgrades them if necessary. 
It logs the upgrade results to a file named 'upgrade_log.txt' in the current working directory.

Requirements:
    - Python 3.x
    - pip

Usage:
    - Run the script using Python 3.x from the command line.
    - Navigate to the current working directory and use the terminal command:
            
            'python upgrade_packages.py'
            
    - The script will automatically upgrade outdated packages if any are found.

Additional Notes:
    - The script will create a log file named 'upgrade_log.txt' in the current working directory.
""""""

import subprocess
import datetime
import os

# Function to run pip list command and check for outdated packages
def check_outdated_packages():
    result = subprocess.run(['pip', 'list', '--outdated'], capture_output=True, text=True)
    outdated_packages = result.stdout.strip().split('\n')[2:]  # Extract outdated packages, skipping header
    return outdated_packages

# Function to upgrade outdated packages and log the results
def upgrade_packages(outdated_packages):
    log_path = os.path.join(os.getcwd(), 'upgrade_log.txt')
    if not outdated_packages:
        print(""All packages are already up to date."")
        with open(log_path, 'a', encoding='utf-8') as log_file:
            log_file.write(f'{datetime.datetime.now()}: All packages are already up to date\n')
        print(f""Log file saved to: {log_path}"")
    else:
        print(""Updating outdated packages..."")
        for package in outdated_packages:
            subprocess.run(['pip', 'install', '--upgrade', package.split()[0]])
        with open(log_path, 'a', encoding='utf-8') as log_file:
            log_file.write(f'{datetime.datetime.now()}: Upgraded packages: {"", "".join(outdated_packages)}\n')
        print(f""Log file saved to: {log_path}"")

# Main function
def main():
    outdated_packages = check_outdated_packages()
    upgrade_packages(outdated_packages)

if __name__ == ""__main__"":
    main()

"
e7N8afxV,basalt_test.lua,Antonderman,Lua,Friday 19th of April 2024 06:12:38 PM CDT,"local basalt = require(""basalt"")

local redstoneIntegrators = peripheral.find(""redstoneIntegrator"")

local monitor = peripheral.find(""monitor"")
local main = basalt.createFrame();
-- main:setMonitor(monitor)

local currentStationLabel = main:addLabel()
currentStationLabel:setText(""You are on:"")
currentStationLabel:setPosition(""parent.w/2 - self.w/2"", 2)
currentStationLabel:setFontSize(2)

local stationLabel = main:addLabel()
stationLabel:setText(""M-Link Factory"")
stationLabel:setPosition(""parent.w/2 - self.w/2"", 6)
stationLabel:setFontSize(2)


local progressBar = main:addProgressbar()
progressBar:setPosition(""parent.w/2 - self.w/2"", ""parent.h/2 - self.h/2"")
progressBar:setDirection(""right"")
progressBar:setSize(50,3)
progressBar:setProgress(50)
progressBar:setProgressBar(colors.blue)

for a,b in pairs(redstoneIntegrators) do 
    print(a)
    print(b)
end

basalt.autoUpdate()"
Qi5RC5Dd,Untitled,Mysoft,FreeBasic,Friday 19th of April 2024 06:12:07 PM CDT,"type Array
  redim au(any) as long
end type

dim as Array ArrayList(3)
dim as ulong Num=100

color 3
for N as long = 0 to ubound(ArrayList)
  redim (ArrayList(N).au)(N+10)
  print ""Array"";N;"" Created with 0 to"";ubound(ArrayList(N).au);"" elements""
  for M as long = 0 to N+10
    ArrayList(N).au(M) = Num
    Num += 1
  next M  
next N

print

for N as long = 0 to ubound(ArrayList)
  color 10 : print ""--- #"" & N & "" ---"" : color 7
  with ArrayList(N)
    for M as long = 0 to ubound(.au)
      print .au(M);
    next M
  end with
  print
next N

sleep
"
YtyBbdAz,clipboard_fix_csv_reset,Python253,Python,Friday 19th of April 2024 04:23:19 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: clipboard_fix_csv_reset.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script is designed to fix issues related to clipboard functionality on Windows systems by resetting and restarting essential services.
Specifically, it targets the ""Remote Desktop Services UserMode Port Redirector"" and ""ClipSVC"" services, which are critical for clipboard operations.

The script first stops these services using the 'net stop' command, ensuring that any existing processes associated with them are terminated gracefully.
It then starts the services again using the 'net start' command, effectively resetting them to their default state.

By executing this script, users can resolve common clipboard problems on Windows, such as malfunctioning clipboard operations or locked memory issues.
This script provides a convenient and efficient way to address these issues without the need for manual intervention or complex troubleshooting steps.

Requirements:
    - Python 3.x
    - Administrative privileges may be required for execution.
    
Usage:
    - Run the script with Python 3.x from the command line.
    - Ensure administrative privileges are granted if prompted.
    
Additional Notes:
    - Ensure 'net stop' and 'net start' commands are available.
    - Verify service status post-execution for confirmation.
""""""

import subprocess

def stop_service(service_name):
    """"""Stop the specified Windows service.""""""
    subprocess.run([""net"", ""stop"", service_name], shell=True)

def start_service(service_name):
    """"""Start the specified Windows service.""""""
    subprocess.run([""net"", ""start"", service_name], shell=True)

def main():
    """"""Main function to stop and start essential services.""""""
    services = [
        ""Remote Desktop Services UserMode Port Redirector"",
        ""ClipSVC""
    ]
    print(""\n\t\t[CLIPBOARD FIX CSV RESET]\n\n"")
    for service in services:
        print(f""\nStopping service:\n{service}"")
        stop_service(service)
        print(f""\nStarting service:\n{service}"")
        start_service(service)
    print(""\n\t\tAll Processes Have Completed.\n\n\t\tEnding Program... GoodBye!\n"")
if __name__ == ""__main__"":
    main()

"
spKntYFp,Untitled,Zeinab_Hamdy,C++,Friday 19th of April 2024 04:07:53 PM CDT,"#include<bits/stdc++.h>
using namespace std;
#define nl ""\n""
#define cnl cout << nl;
#define fi first
#define se second
#define pb push_back
#define ll long long
#define ull unsigned ll
#define RV return void
#define sz(x) int(x.size())
#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define fixed(n) fixed << setprecision(n)
#define cin(v) for(auto&x:v) cin >> i;
#define cout(v) for(auto&x:v) cout << i << "" "";
void files(){
    #ifndef ONLINE_JUDGE
       freopen(""input.txt"", ""r"", stdin);
       freopen(""output.txt"", ""w"", stdout);
    #endif
}


void solve( int test ){

    int n ;
    cin >> n ;
    vector < pair < ll , ll> > p;
    vector < pair < ll , pair < ll , ll > > > v(n);
    for(int i =0 ; i < n ; i++){
        cin >> v[i].fi >> v[i].se.fi >> v[i].se.se;
        ll mx= max({v[i].fi , v[i].se.fi , v[i].se.se})
        , sum = v[i].fi + v[i].se.fi + v[i].se.se - mx;
        p.pb({sum , mx });
    }

    sort(all(p) , [&] ( auto a , auto b){
        if(a.fi == b.fi) {
            return a.se < b.se;
        }
        return a.fi < b.fi;
    });
    auto lwr=[&]( ll sum ){
        int l=0 ,r =n-1 , best =0;
        while(l <= r ){
            int mid = r- (r-l)/2;
            if(p[mid].fi + 2 <= sum){
                best = mid;
                l=mid+1;
            }else{
                r=mid-1;
            }
        }
        return best;
    };
    
    for(int i =0 ; i < n ;i++){
        ll sum = v[i].fi + v[i].se.fi + v[i].se.se;
        cout << lwr(sum) << "" "";
    }
   
    

}
 
 
int main(){
    ios_base::sync_with_stdio(false); 
    cin.tie(nullptr); 
    cout.tie(nullptr);
                            
    //  files();
    int testCase=1;
        // cin >> testCase ;
    for(int i=1 ; i <= testCase ; i++){
        solve(i);
    }
 
    return 0;
}"
U8TXC8n4,JPMorgan CEO Jamie Dimon Continues Criticism of Bitcoin,livebetpro,PHP,Friday 19th of April 2024 03:47:15 PM CDT,"https://www.livebetpro.com/jpmorgan-ceo-jamie-dimon-continues-criticism-of-bitcoin/
 
Jamie Dimon, CEO of¬†JPMorgan, remains a formidable adversary to¬†Bitcoin. According to Dimon, it is not a real currency but rather a swindle. Dimon admitted his skepticism about the veracity and practicality of digital currencies like Bitcoin during a recent interview with Bloomberg TV.



He reiterated his belief that Bitcoin is a Ponzi scheme rather than a real currency. The massive fluctuations in the cryptocurrency‚Äôs value over the years stand in stark contrast to this resolute stance.



Pessimism Persists



Bitcoin has a lengthy history of bad associations with numerous illegal acts, and Jamie Dimon has a history of making disparaging remarks about it. Because of its decentralization and anonymity, he said, Bitcoin can facilitate illegal activities like tax avoidance, money laundering, and even the financing of terrorists. Despite the growing interest in digital currencies in the financial arena, this pessimism persists.



Amidst Jamie Dimon‚Äôs criticisms, the market price of Bitcoin has been very volatile. Bitcoin has been both resilient and unstable, going as high as $65,000 in November 2021 and as low as about $16,000.



Jamie Dimon¬†drew a parallel between investing in Bitcoin and smoking cigarettes in another CNBC interview earlier, arguing that both are dangerous choices that should be left to individuals. Despite his stance against Bitcoin, he does not oppose investors‚Äô freedom to purchase it. Despite one‚Äôs own cynicism, this position demonstrates a balanced vision by recognizing the need of safeguarding consumer investment choices. At the time of writing, Bitcoin is trading at $63,546, up 4.91% in the last 24 hours as per data from¬†CoinMarketCap.
"
jm8QKT3J,estructura cuestonario entrevista,jcarlosriverae,JSON,Friday 19th of April 2024 02:56:23 PM CDT,"{
	""vacante"":{
		""id"":909,
		""nombre"" : ""Administrador de edificio"",
		""empresa"": ""CHUCHITO SA"",
	}

	""candidato"": {
		""id"":791,
		""apellidoPaterno"": ""Perez"",
		""apellidoMaterno"": ""Hernandez"",
		""nombre"": ""Victoria""
	}
  	""cuestionario"": [
    {
		""pregunta"": ""Pregunta1"",
      	""respuesta"": ""Respuesta1"",
		""entrevistador"":""nombre usuario"",
		""fechaHoraRespuesta"":""2024-04-19 13:50:08""
    },
    {
      	""pregunta"": ""Pregunta2"",
      	""respuesta"": ""Respuesta2"",
		""entrevistador"":""nombre usuario"",
		""fechaHoraRespuesta"":""2024-04-19 13:50:08""
    },
    {
      	""pregunta"": ""Pregunta3"",
      	""respuesta"": ""Respuesta3"",
		""entrevistador"":""nombre usuario"",
		""fechaHoraRespuesta"":""2024-04-19 13:50:08""
    }
  ]
}"
y2bx73tG,win_env_var_explorer2,Python253,Python,Friday 19th of April 2024 02:43:43 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: win_env_var_explorer2.py
# Version: 1.0.1
# Author: Jeoi Reqi

""""""
This script allows users to explore and display Windows environment variables grouped by categories. 
Users can navigate through a menu to select a category of environment variables and then choose a specific variable 
within that category to display its current value. The script provides a user-friendly interface for interacting with 
environment variables, making it easier for users to manage and understand their Windows environment configuration.

Additionally, users can select all categories to display and save the output data from all variables within each category to a text file.

Requirements:
- Python 3
- Windows operating system

Usage:
- Run the script using Python 3 in a Windows environment.

Additional Notes:
- Ensure that Python 3 is installed on your system.
- This script provides read-only access to environment variables and does not modify them.
- Output data is saved to 'environment_output.txt' in the current working directory.
""""""

import os

# Dictionary of environment variables by category
variables = {
    ""System Information"": {
        1: ""ALLUSERSPROFILE"",
        2: ""COMPUTERNAME"",
        3: ""NUMBER_OF_PROCESSORS"",
        4: ""OS"",
        5: ""PROCESSOR_ARCHITECTURE"",
        6: ""SYSTEMDRIVE"",
        7: ""SYSTEMROOT"",
        8: ""WINDIR""
    },
    ""User Information"": {
        1: ""APPDATA"",
        2: ""HOMEDRIVE"",
        3: ""HOMEPATH"",
        4: ""LOCALAPPDATA"",
        5: ""USERDOMAIN"",
        6: ""USERNAME"",
        7: ""USERPROFILE""
    },
    ""File Paths"": {
        1: ""CD"",
        2: ""CommonProgramFiles"",
        3: ""COMMONPROGRAMFILES(x86)"",
        4: ""ProgramData"",
        5: ""ProgramFiles"",
        6: ""ProgramFiles(x86)"",
        7: ""ProgramW6432"",
        8: ""PSModulePath"",
        9: ""Public"",
        10: ""TEMP"",
        11: ""TMP""
    },
    ""Network"": {
        1: ""ClientName"",
        2: ""LOGONSERVER"",
        3: ""HOMESHARE"",
        4: ""OneDrive"",
        5: ""OneDriveCommercial"",
        6: ""OneDriveConsumer"",
        7: ""UserDnsDomain"",
        8: ""%SessionName%""
    },
    ""Command Interpreter"": {
        1: ""COMSPEC"",
        2: ""CMDEXTVERSION"",
        3: ""CMDCMDLINE"",
        4: ""PROMPT""
    },
    ""Date and Time"": {
        1: ""DATE"",
        2: ""TIME""
    },
    ""Miscellaneous"": {
        1: ""ERRORLEVEL"",
        2: ""PATHEXT"",
        3: ""RANDOM""
    }
}

# Function to save environment output to a text file
def save_environment_output(output_data):
    with open(""environment_output.txt"", ""w"") as f:
        for category, data in output_data.items():
            f.write(f""{category}:\n"")
            for variable, value in data.items():
                f.write(f""{variable}: {value}\n"")
            f.write(""\n"")

# Main loop
while True:
    # Display categories menu
    print(""\nChoose a category of environment variables (type '0' to exit):\n"")
    for num, category in enumerate(variables.keys(), 1):
        print(f""{num:02}. {category}"")
    print(f""{len(variables) + 1:02}. Select all & save the output to file."")

    # Get user input for category choice
    category_choice = input(""\nEnter the number of the category you want to explore: "")

    # Exit if category choice is '0'
    if category_choice == '0':
        print(""\nExiting...\tGoodBye!\n"")
        break

    # Validate category choice
    if category_choice.isdigit() and 1 <= int(category_choice) <= len(variables) + 1:
        category_choice = int(category_choice)
        
        # Initialize output data dictionary
        output_data = {}
        
        if category_choice == len(variables) + 1:
            # Select all categories
            selected_categories = list(variables.keys())
        else:
            # Select single category
            category_name = list(variables.keys())[category_choice - 1]
            selected_categories = [category_name]

        # Iterate over selected categories
        for category_name in selected_categories:
            # Display variables submenu for selected category
            print(f""\n{category_name} variables:\n"")
            category_variables = variables[category_name]
            category_output = {}
            for num, var in sorted(category_variables.items()):
                value = os.environ.get(var)
                category_output[var] = value
                print(f""{num:02}. {var}: {value}"")
            
            output_data[category_name] = category_output
        
        # Save environment output to text file
        save_environment_output(output_data)
        print(""\nEnvironment output saved to 'environment_output.txt'."")
    else:
        print(""\nInvalid category choice!\n"")

"
cBAJt5pJ,Untitled,Tkap1,C++,Friday 19th of April 2024 02:42:53 PM CDT,"func b8 set_clipboard(char* str)
{
	b8 result = false;
	b8 close = false;
	int len;
	char* locked;
	HGLOBAL mem;
	HGLOBAL temp;

	if(!OpenClipboard(null)) { goto clipboard_end; }
	close = true;
	if(!EmptyClipboard()) { goto clipboard_end; }

	len = strleni(str);
	mem = GlobalAlloc(GMEM_MOVEABLE, len + 1);
	locked = (char*)GlobalLock(mem);
	memcpy(locked, str, len);
	locked[len] = 0;
	GlobalUnlock(mem);
	if(!SetClipboardData(CF_TEXT, mem)) { goto clipboard_end; }
	result = true;
	temp = GlobalFree(mem);
	assert(temp == null);

clipboard_end:
	if(close) { CloseClipboard(); }
	return result;
}
"
nSScqnjX,–°–ü–†–ò–ù–¢ ‚Ññ 7 | –ú–æ–¥–µ–ª—å –ø–∞–º—è—Ç–∏ –≤ C++ | –£—Ä–æ–∫ 8: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤. –ß–∞—Å—Ç—å –≤—Ç–æ—Ä–∞—è 1/2,chevengur,C++,Friday 19th of April 2024 02:36:31 PM CDT,"#include <cassert>

// –£–º–Ω—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å, —É–¥–∞–ª—è—é—â–∏–π —Å–≤—è–∑–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –ø—Ä–∏ —Å–≤–æ—ë–º —Ä–∞–∑—Ä—É—à–µ–Ω–∏–∏.
// –ü–∞—Ä–∞–º–µ—Ç—Ä —à–∞–±–ª–æ–Ω–∞ T –∑–∞–¥–∞—ë—Ç —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Å—Å—ã–ª–∞–µ—Ç—Å—è —É–∫–∞–∑–∞—Ç–µ–ª—å
template <typename T>
class ScopedPtr {
public:
    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–æ–∑–¥–∞—ë—Ç –Ω—É–ª–µ–≤–æ–π —É–∫–∞–∑–∞—Ç–µ–ª—å,
    // —Ç–∞–∫ –∫–∞–∫ –ø–æ–ª–µ ptr_ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é nullptr
    ScopedPtr() = default;

    // –°–æ–∑–¥–∞—ë—Ç —É–∫–∞–∑–∞—Ç–µ–ª—å, —Å—Å—ã–ª–∞—é—â–∏–π—Å—è –Ω–∞ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π raw_ptr.
    // raw_ptr —Å—Å—ã–ª–∞–µ—Ç—Å—è –ª–∏–±–æ –Ω–∞ –æ–±—ä–µ–∫—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –≤ –∫—É—á–µ –ø—Ä–∏ –ø–æ–º–æ—â–∏ new,
    // –ª–∏–±–æ —è–≤–ª—è–µ—Ç—Å—è –Ω—É–ª–µ–≤—ã–º —É–∫–∞–∑–∞—Ç–µ–ª–µ–º
    // –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ç–æ—Ä noexcept –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –º–µ—Ç–æ–¥ –Ω–µ –±—Ä–æ—Å–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–π
    explicit ScopedPtr(T* raw_ptr) noexcept {
        if (raw_ptr != nullptr)
        {
            ptr_ = raw_ptr;
        }
    }

    // –£–¥–∞–ª—è–µ–º —É –∫–ª–∞—Å—Å–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    ScopedPtr(const ScopedPtr&) = delete;

    // –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä. –£–¥–∞–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Å—Å—ã–ª–∞–µ—Ç—Å—è —É–º–Ω—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å.
    ~ScopedPtr() {
        // –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ç–µ–ª–æ –¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ
        delete ptr_;
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–∫–∞–∑–∞—Ç–µ–ª—å, —Ö—Ä–∞–Ω—è—â–∏–π—Å—è –≤–Ω—É—Ç—Ä–∏ ScopedPtr
    T* GetRawPtr() const noexcept {

        return ptr_;
        // –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –º–µ—Ç–æ–¥–∞ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ
    }

    // –ü—Ä–µ–∫—Ä–∞—â–∞–µ—Ç –≤–ª–∞–¥–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–º, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Å—Å—ã–ª–∞–µ—Ç—Å—è —É–º–Ω—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å.
    // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–µ–∂–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ""—Å—ã—Ä–æ–≥–æ"" —É–∫–∞–∑–∞—Ç–µ–ª—è –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–æ–ª–µ ptr_ –≤ null
    T* Release() noexcept {
        // –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ
        T* new_ptr = ptr_;
        ptr_ = nullptr;
        return new_ptr;
        
    }

private:
    T* ptr_ = nullptr;
};

// –≠—Ç–æ—Ç main —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–ª–∞—Å—Å ScopedPtr
int main() {
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π ""—à–ø–∏–æ–Ω"", –ø–æ–∑–≤–æ–ª—è—é—â–∏–π —É–∑–Ω–∞—Ç—å –æ —Å–≤–æ—ë–º —É–¥–∞–ª–µ–Ω–∏–∏
    struct DeletionSpy {
        explicit DeletionSpy(bool& is_deleted)
            : is_deleted_(is_deleted) {
        }
        ~DeletionSpy() {
            is_deleted_ = true;
        }
        bool& is_deleted_;
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
    {
        bool is_deleted = false;
        {
            // –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º ""—à–ø–∏–æ–Ω"", —á—Ç–æ–±—ã –ø—Ä–∏ —Å–≤–æ—ë–º —É–¥–∞–ª–µ–Ω–∏–∏ –æ–Ω –≤—ã—Å—Ç–∞–≤–∏–ª is_deleted –≤ true
            DeletionSpy* raw_ptr = new DeletionSpy(is_deleted);
            ScopedPtr<DeletionSpy> p(raw_ptr);
            assert(p.GetRawPtr() == raw_ptr);
            assert(!is_deleted);
            // –ü—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ –±–ª–æ–∫–∞ –¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä p –¥–æ–ª–∂–µ–Ω —É–¥–∞–ª–∏—Ç—å ""—à–ø–∏–æ–Ω–∞""
        }
        // –ï—Å–ª–∏ –¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä —É–º–Ω–æ–≥–æ —É–∫–∞–∑–∞—Ç–µ–ª—è —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ, —à–ø–∏–æ–Ω –ø–µ—Ä–µ–¥ —Å–≤–æ–µ–π ""—Å–º–µ—Ä—Ç—å—é""
        // –¥–æ–ª–∂–µ–Ω –≤—ã—Å—Ç–∞–≤–∏—Ç—å is_deleted –≤ true
        assert(is_deleted);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É –º–µ—Ç–æ–¥–∞ Release
    {
        bool is_deleted = false;
        DeletionSpy* raw_ptr = new DeletionSpy(is_deleted);
        {
            ScopedPtr<DeletionSpy> scoped_ptr(raw_ptr);
            assert(scoped_ptr.Release() == raw_ptr);
            assert(scoped_ptr.GetRawPtr() == nullptr);
            // –ü–æ—Å–ª–µ Release —É–º–Ω—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–µ —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –æ–±—ä–µ–∫—Ç –∏ –Ω–µ —É–¥–∞–ª—è–µ—Ç –µ–≥–æ –ø—Ä–∏ —Å–≤–æ—ë–º —É–¥–∞–ª–µ–Ω–∏–∏
        }
        assert(!is_deleted);
        delete raw_ptr;
        assert(is_deleted);
    }
}"
hLQHd3WN,win_env_var_explorer,Python253,Python,Friday 19th of April 2024 02:34:44 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: win_env_var_explorer.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script allows users to explore and display Windows environment variables grouped by categories. 
Users can navigate through a menu to select a category of environment variables and then choose a specific variable 
within that category to display its current value. 
The script provides a user-friendly interface for interacting with 
environment variables, making it easier for users to manage and understand their Windows environment configuration.

Requirements:
- Python 3
- Windows operating system

Usage:
- Run the script using Python 3 in a Windows environment.

Additional Notes:
- Ensure that Python 3 is installed on your system.
- This script provides read-only access to environment variables and does not modify them.
""""""

import os

# Dictionary of environment variables by category
variables = {
    ""System Information"": {
        1: ""ALLUSERSPROFILE"",
        2: ""COMPUTERNAME"",
        3: ""NUMBER_OF_PROCESSORS"",
        4: ""OS"",
        5: ""PROCESSOR_ARCHITECTURE"",
        6: ""SYSTEMDRIVE"",
        7: ""SYSTEMROOT"",
        8: ""WINDIR""
    },
    ""User Information"": {
        1: ""APPDATA"",
        2: ""HOMEDRIVE"",
        3: ""HOMEPATH"",
        4: ""LOCALAPPDATA"",
        5: ""USERDOMAIN"",
        6: ""USERNAME"",
        7: ""USERPROFILE""
    },
    ""File Paths"": {
        1: ""CD"",
        2: ""CommonProgramFiles"",
        3: ""COMMONPROGRAMFILES(x86)"",
        4: ""ProgramData"",
        5: ""ProgramFiles"",
        6: ""ProgramFiles(x86)"",
        7: ""ProgramW6432"",
        8: ""PSModulePath"",
        9: ""Public"",
        10: ""TEMP"",
        11: ""TMP""
    },
    ""Network"": {
        1: ""ClientName"",
        2: ""LOGONSERVER"",
        3: ""HOMESHARE"",
        4: ""OneDrive"",
        5: ""OneDriveCommercial"",
        6: ""OneDriveConsumer"",
        7: ""UserDnsDomain"",
        8: ""%SessionName%""
    },
    ""Command Interpreter"": {
        1: ""COMSPEC"",
        2: ""CMDEXTVERSION"",
        3: ""CMDCMDLINE"",
        4: ""PROMPT""
    },
    ""Date and Time"": {
        1: ""DATE"",
        2: ""TIME""
    },
    ""Miscellaneous"": {
        1: ""ERRORLEVEL"",
        2: ""PATHEXT"",
        3: ""RANDOM""
    }
}

# Main loop
while True:
    # Display categories menu
    print(""\nChoose a category of environment variables (type '0' to exit):\n"")
    for num, category in enumerate(variables.keys(), 1):
        print(f""{num:02}. {category}"")

    # Get user input for category choice
    category_choice = input(""\nEnter the number of the category you want to explore: "")

    # Exit if category choice is '0'
    if category_choice == '0':
        print(""\nExiting...\tGoodBye!\n"")
        break

    # Validate category choice
    if category_choice.isdigit() and 1 <= int(category_choice) <= len(variables):
        category_choice = int(category_choice)
        category_name = list(variables.keys())[category_choice - 1]

        # Display variables submenu for selected category
        print(f""\n{category_name} variables:\n"")
        category_variables = variables[category_name]
        for num, var in sorted(category_variables.items()):
            print(f""{num:02}. {var}"")

        # Get user input for variable choice
        variable_choice = input(""\nEnter the number of the variable you want to display (or '0' to go back): "")

        # Exit submenu if variable choice is '0'
        if variable_choice == '0':
            continue

        # Validate variable choice
        if variable_choice.isdigit() and int(variable_choice) in category_variables:
            selected_variable = category_variables[int(variable_choice)]
            value = os.environ.get(selected_variable)
            if value:
                print(f""\n\nThe value of {selected_variable} is: {value}\n\n"")
            else:
                print(f""\n{selected_variable} is not set.\n"")
        else:
            print(""\nInvalid choice!\n"")
    else:
        print(""\nInvalid category choice!\n"")
"
K6VLbisM,js max product of 2 numbers in array,Pearlfromsu,C#,Friday 19th of April 2024 02:18:13 PM CDT,"//PRINT MAX PRODUCT OF TWO ELEMENTS IN ARRAY
function maxProduct(arr) { //–Ω–∞–±—Ä–∞—Ç—å 2 –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö, 2 –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö –∏ —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —Å–ª—É—á–∞–∏: –µ—Å—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –∏–ª–∏ –Ω–µ—Ç. –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∏—Ö –≤—ã–≤–æ–¥–∏—Ç—å –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –¥–≤—É—Ö –Ω–∞–∏–º–µ–Ω—å—à–∏—Ö, –º–µ–Ω—å—à–µ–µ*–±–æ–ª—å—à–µ–µ –∏–ª–∏ –Ω–∞ 2 –Ω–∞–∏–±–æ–ª—å—à–∏—Ö
    if(arr.length === 2)
        return arr[0]*arr[1];
    let a1 = Number.MaxValue;
    let b1 = Number.MaxValue;
    let mx = Number.MinValue;
    for(let i = 0; i < arr.length; i++) {
        if(arr[i] <= a) {
            b = a;
            a = arr[i];
        } else if(arr[i] <= b)
            b = a;
        mx = Math.max(mx, arr[i]);
    }
    return Math.min(a*b, a*mx);
}


let tests = [
    [
        [1, 2],
        2
    ],
    [
        [-2, 1, 0, -1],
        -2
    ],
    [
        [1, 2],
        2
    ],
    [
        [0, 1, 1, 5, -1, 2],
        10
    ],
    [
        [0, 1, 1, 5, -1, 2],
        10
    ]
]

console.log(""Starting tests..."")
for(let [ind, test] of tests.entries())
    if(maxProduct(test[0]) !== test[1])
        console.log(`WRONG TEST #${ind}: Expected ${test[1]}; got ${maxProduct(test[0])}`);
console.log(""Tests are done"")"
w42jM9xj,Reto UF3,VictorMunoz,C#,Friday 19th of April 2024 02:15:39 PM CDT,"using System.Collections;
using System.Collections.Generic;
using Unity.VisualScripting;
using UnityEngine;
using UnityEngine.UI; // Librer√≠a necesaria para cargar elementos de la interfaz ('text')

public class Player2D : MonoBehaviour
{
    // Velocidad de la barra controladora
    public float vel;
    // Eje horizontal de movimiento de la barra
    protected float x_mov;
    // Bloqueo al tocar los limites horizontales
    private bool bloqDer, bloqIzq = false;
    // N√∫mero de toques
    private int nToques = 0;
    // Variable para mostrar la puntuaci√≥n
    public GameObject puntuacion;

    // Start is called before the first frame update
    void Start()
    {
        // Definir velocidad inicial
        vel = 8.0f;
        // Definir tiempo inicial
        Time.timeScale = 1.0f;
    }

    // Update is called once per frame
    void Update()
    {
        // Obtener el valor de desplazamiento horizontal (entre -1 y 1). Se multiplica por el tiempo y velocidad para reducirlo y ajustarlo
        x_mov = Input.GetAxis(""Horizontal"") * Time.deltaTime * vel;

        // Si se selecciona el movimiento a la derecha (n√∫meros positivos)
        if (x_mov > 0.0f) {
            // Comprobar que el movimiento a la derecha no est√© bloqueado
            if (!bloqDer) {
                // Mover ESTE objeto (barra controladora)
                this.gameObject.transform.Translate(x_mov, 0.0f, 0.0f);
            }
        } 
        // Si se selecciona el movimiento a la izquierda (n√∫meros negativos)
        else if (x_mov < 0.0f) {
            // Comprobar que el movimiento a la izquierda no est√© bloqueado
            if (!bloqIzq) {
                // Mover ESTE objeto (barra controladora)
                this.gameObject.transform.Translate(x_mov, 0.0f, 0.0f);
            }
        }
    }

    // M√©todo para manejar la colisi√≥n con las barras laterales (other)
    private void OnTriggerEnter2D(Collider2D other) {
        // Si OTHER tiene el tag ""LimiteDerecho"", activar bloqDer para bloquear el movimiento a la derecha
        if (other.gameObject.CompareTag(""LimiteDerecho"")) {
            bloqDer = true;
        }
        // Si OTHER tiene el tag ""LimiteIzquierdo"", activar bloqIzq para bloquear el movimiento a la izquierda
        if (other.gameObject.CompareTag(""LimiteIzquierdo"")) {
            bloqIzq = true;
        }
    }
    
    // M√©todo para volver a permitir el movimiento cuando la barra no est√© colisionando
    private void OnTriggerExit2D(Collider2D other) {
        // Si se ha apartado de ""LimiteDerecho"", poner bloqDer en false
        if (other.gameObject.CompareTag(""LimiteDerecho"")) {
            bloqDer = false;
        }
        // Si se ha apartado de ""LimiteIzquierdo"", poner bloqIzq en false
        if (other.gameObject.CompareTag(""LimiteIzquierdo"")) {
            bloqIzq = false;
        }
    }

    // M√©todo para puntuar los toques con el bal√≥n
    private void OnCollisionEnter2D(Collision2D other) {
        // Si toca el objeto con el tag ""Balon""
        if (other.gameObject.CompareTag(""Balon"")) {
            // Incrementar el n√∫mero de toques
            nToques++;
            // Asignar el n√∫mero de toques al texto de puntuaci√≥n
            // Como es un elemento de UI (dentro de un canvas) es necesario a√±adir la librer√≠a 'UnityEngine.UI'
            puntuacion.GetComponent<Text>().text = nToques.ToString();
        }
    }
}
"
1SqAu62p,Untitled,kirkarr,Lua,Friday 19th of April 2024 02:11:40 PM CDT,"v 0.437500 0.164062 0.765625
v -0.437500 0.164062 0.765625
v 0.500000 0.093750 0.687500
v -0.500000 0.093750 0.687500
v 0.546875 0.054688 0.578125
v -0.546875 0.054688 0.578125
v 0.351562 -0.023438 0.617188
v -0.351562 -0.023438 0.617188
v 0.351562 0.031250 0.718750
v -0.351562 0.031250 0.718750
v 0.351562 0.132812 0.781250
v -0.351562 0.132812 0.781250
v 0.273438 0.164062 0.796875
v -0.273438 0.164062 0.796875
v 0.203125 0.093750 0.742188
v -0.203125 0.093750 0.742188
v 0.156250 0.054688 0.648438
v -0.156250 0.054688 0.648438
v 0.078125 0.242188 0.656250
v -0.078125 0.242188 0.656250
v 0.140625 0.242188 0.742188
v -0.140625 0.242188 0.742188
v 0.242188 0.242188 0.796875
v -0.242188 0.242188 0.796875
v 0.273438 0.328125 0.796875
v -0.273438 0.328125 0.796875
v 0.203125 0.390625 0.742188
v -0.203125 0.390625 0.742188
v 0.156250 0.437500 0.648438
v -0.156250 0.437500 0.648438
v 0.351562 0.515625 0.617188
v -0.351562 0.515625 0.617188
v 0.351562 0.453125 0.718750
v -0.351562 0.453125 0.718750
v 0.351562 0.359375 0.781250
v -0.351562 0.359375 0.781250
v 0.437500 0.328125 0.765625
v -0.437500 0.328125 0.765625
v 0.500000 0.390625 0.687500
v -0.500000 0.390625 0.687500
v 0.546875 0.437500 0.578125
v -0.546875 0.437500 0.578125
v 0.625000 0.242188 0.562500
v -0.625000 0.242188 0.562500
v 0.562500 0.242188 0.671875
v -0.562500 0.242188 0.671875
v 0.468750 0.242188 0.757812
v -0.468750 0.242188 0.757812
v 0.476562 0.242188 0.773438
v -0.476562 0.242188 0.773438
v 0.445312 0.335938 0.781250
v -0.445312 0.335938 0.781250
v 0.351562 0.375000 0.804688
v -0.351562 0.375000 0.804688
v 0.265625 0.335938 0.820312
v -0.265625 0.335938 0.820312
v 0.226562 0.242188 0.820312
v -0.226562 0.242188 0.820312
v 0.265625 0.156250 0.820312
v -0.265625 0.156250 0.820312
v 0.351562 0.242188 0.828125
v -0.351562 0.242188 0.828125
v 0.351562 0.117188 0.804688
v -0.351562 0.117188 0.804688
v 0.445312 0.156250 0.781250
v -0.445312 0.156250 0.781250
v 0.000000 0.429688 0.742188
v 0.000000 0.351562 0.820312
v 0.000000 -0.679688 0.734375
v 0.000000 -0.320312 0.781250
v 0.000000 -0.187500 0.796875
v 0.000000 -0.773438 0.718750
v 0.000000 0.406250 0.601562
v 0.000000 0.570312 0.570312
v 0.000000 0.898438 -0.546875
v 0.000000 0.562500 -0.851562
v 0.000000 0.070312 -0.828125
v 0.000000 -0.382812 -0.351562
v 0.203125 -0.187500 0.562500
v -0.203125 -0.187500 0.562500
v 0.312500 -0.437500 0.570312
v -0.312500 -0.437500 0.570312
v 0.351562 -0.695312 0.570312
v -0.351562 -0.695312 0.570312
v 0.367188 -0.890625 0.531250
v -0.367188 -0.890625 0.531250
v 0.328125 -0.945312 0.523438
v -0.328125 -0.945312 0.523438
v 0.179688 -0.968750 0.554688
v -0.179688 -0.968750 0.554688
v 0.000000 -0.984375 0.578125
v 0.437500 -0.140625 0.531250
v -0.437500 -0.140625 0.531250
v 0.632812 -0.039062 0.539062
v -0.632812 -0.039062 0.539062
v 0.828125 0.148438 0.445312
v -0.828125 0.148438 0.445312
v 0.859375 0.429688 0.593750
v -0.859375 0.429688 0.593750
v 0.710938 0.484375 0.625000
v -0.710938 0.484375 0.625000
v 0.492188 0.601562 0.687500
v -0.492188 0.601562 0.687500
v 0.320312 0.757812 0.734375
v -0.320312 0.757812 0.734375
v 0.156250 0.718750 0.757812
v -0.156250 0.718750 0.757812
v 0.062500 0.492188 0.750000
v -0.062500 0.492188 0.750000
v 0.164062 0.414062 0.773438
v -0.164062 0.414062 0.773438
v 0.125000 0.304688 0.765625
v -0.125000 0.304688 0.765625
v 0.203125 0.093750 0.742188
v -0.203125 0.093750 0.742188
v 0.375000 0.015625 0.703125
v -0.375000 0.015625 0.703125
v 0.492188 0.062500 0.671875
v -0.492188 0.062500 0.671875
v 0.625000 0.187500 0.648438
v -0.625000 0.187500 0.648438
v 0.640625 0.296875 0.648438
v -0.640625 0.296875 0.648438
v 0.601562 0.375000 0.664062
v -0.601562 0.375000 0.664062
v 0.429688 0.437500 0.718750
v -0.429688 0.437500 0.718750
v 0.250000 0.468750 0.757812
v -0.250000 0.468750 0.757812
v 0.000000 -0.765625 0.734375
v 0.109375 -0.718750 0.734375
v -0.109375 -0.718750 0.734375
v 0.117188 -0.835938 0.710938
v -0.117188 -0.835938 0.710938
v 0.062500 -0.882812 0.695312
v -0.062500 -0.882812 0.695312
v 0.000000 -0.890625 0.687500
v 0.000000 -0.195312 0.750000
v 0.000000 -0.140625 0.742188
v 0.101562 -0.148438 0.742188
v -0.101562 -0.148438 0.742188
v 0.125000 -0.226562 0.750000
v -0.125000 -0.226562 0.750000
v 0.085938 -0.289062 0.742188
v -0.085938 -0.289062 0.742188
v 0.398438 -0.046875 0.671875
v -0.398438 -0.046875 0.671875
v 0.617188 0.054688 0.625000
v -0.617188 0.054688 0.625000
v 0.726562 0.203125 0.601562
v -0.726562 0.203125 0.601562
v 0.742188 0.375000 0.656250
v -0.742188 0.375000 0.656250
v 0.687500 0.414062 0.726562
v -0.687500 0.414062 0.726562
v 0.437500 0.546875 0.796875
v -0.437500 0.546875 0.796875
v 0.312500 0.640625 0.835938
v -0.312500 0.640625 0.835938
v 0.203125 0.617188 0.851562
v -0.203125 0.617188 0.851562
v 0.101562 0.429688 0.843750
v -0.101562 0.429688 0.843750
v 0.125000 -0.101562 0.812500
v -0.125000 -0.101562 0.812500
v 0.210938 -0.445312 0.710938
v -0.210938 -0.445312 0.710938
v 0.250000 -0.703125 0.687500
v -0.250000 -0.703125 0.687500
v 0.265625 -0.820312 0.664062
v -0.265625 -0.820312 0.664062
v 0.234375 -0.914062 0.632812
v -0.234375 -0.914062 0.632812
v 0.164062 -0.929688 0.632812
v -0.164062 -0.929688 0.632812
v 0.000000 -0.945312 0.640625
v 0.000000 0.046875 0.726562
v 0.000000 0.210938 0.765625
v 0.328125 0.476562 0.742188
v -0.328125 0.476562 0.742188
v 0.164062 0.140625 0.750000
v -0.164062 0.140625 0.750000
v 0.132812 0.210938 0.757812
v -0.132812 0.210938 0.757812
v 0.117188 -0.687500 0.734375
v -0.117188 -0.687500 0.734375
v 0.078125 -0.445312 0.750000
v -0.078125 -0.445312 0.750000
v 0.000000 -0.445312 0.750000
v 0.000000 -0.328125 0.742188
v 0.093750 -0.273438 0.781250
v -0.093750 -0.273438 0.781250
v 0.132812 -0.226562 0.796875
v -0.132812 -0.226562 0.796875
v 0.109375 -0.132812 0.781250
v -0.109375 -0.132812 0.781250
v 0.039062 -0.125000 0.781250
v -0.039062 -0.125000 0.781250
v 0.000000 -0.203125 0.828125
v 0.046875 -0.148438 0.812500
v -0.046875 -0.148438 0.812500
v 0.093750 -0.156250 0.812500
v -0.093750 -0.156250 0.812500
v 0.109375 -0.226562 0.828125
v -0.109375 -0.226562 0.828125
v 0.078125 -0.250000 0.804688
v -0.078125 -0.250000 0.804688
v 0.000000 -0.289062 0.804688
v 0.257812 -0.312500 0.554688
v -0.257812 -0.312500 0.554688
v 0.164062 -0.242188 0.710938
v -0.164062 -0.242188 0.710938
v 0.179688 -0.312500 0.710938
v -0.179688 -0.312500 0.710938
v 0.234375 -0.250000 0.554688
v -0.234375 -0.250000 0.554688
v 0.000000 -0.875000 0.687500
v 0.046875 -0.867188 0.687500
v -0.046875 -0.867188 0.687500
v 0.093750 -0.820312 0.710938
v -0.093750 -0.820312 0.710938
v 0.093750 -0.742188 0.726562
v -0.093750 -0.742188 0.726562
v 0.000000 -0.781250 0.656250
v 0.093750 -0.750000 0.664062
v -0.093750 -0.750000 0.664062
v 0.093750 -0.812500 0.640625
v -0.093750 -0.812500 0.640625
v 0.046875 -0.851562 0.632812
v -0.046875 -0.851562 0.632812
v 0.000000 -0.859375 0.632812
v 0.171875 0.218750 0.781250
v -0.171875 0.218750 0.781250
v 0.187500 0.156250 0.773438
v -0.187500 0.156250 0.773438
v 0.335938 0.429688 0.757812
v -0.335938 0.429688 0.757812
v 0.273438 0.421875 0.773438
v -0.273438 0.421875 0.773438
v 0.421875 0.398438 0.773438
v -0.421875 0.398438 0.773438
v 0.562500 0.351562 0.695312
v -0.562500 0.351562 0.695312
v 0.585938 0.289062 0.687500
v -0.585938 0.289062 0.687500
v 0.578125 0.195312 0.679688
v -0.578125 0.195312 0.679688
v 0.476562 0.101562 0.718750
v -0.476562 0.101562 0.718750
v 0.375000 0.062500 0.742188
v -0.375000 0.062500 0.742188
v 0.226562 0.109375 0.781250
v -0.226562 0.109375 0.781250
v 0.179688 0.296875 0.781250
v -0.179688 0.296875 0.781250
v 0.210938 0.375000 0.781250
v -0.210938 0.375000 0.781250
v 0.234375 0.359375 0.757812
v -0.234375 0.359375 0.757812
v 0.195312 0.296875 0.757812
v -0.195312 0.296875 0.757812
v 0.242188 0.125000 0.757812
v -0.242188 0.125000 0.757812
v 0.375000 0.085938 0.726562
v -0.375000 0.085938 0.726562
v 0.460938 0.117188 0.703125
v -0.460938 0.117188 0.703125
v 0.546875 0.210938 0.671875
v -0.546875 0.210938 0.671875
v 0.554688 0.281250 0.671875
v -0.554688 0.281250 0.671875
v 0.531250 0.335938 0.679688
v -0.531250 0.335938 0.679688
v 0.414062 0.390625 0.750000
v -0.414062 0.390625 0.750000
v 0.281250 0.398438 0.765625
v -0.281250 0.398438 0.765625
v 0.335938 0.406250 0.750000
v -0.335938 0.406250 0.750000
v 0.203125 0.171875 0.750000
v -0.203125 0.171875 0.750000
v 0.195312 0.226562 0.750000
v -0.195312 0.226562 0.750000
v 0.109375 0.460938 0.609375
v -0.109375 0.460938 0.609375
v 0.195312 0.664062 0.617188
v -0.195312 0.664062 0.617188
v 0.335938 0.687500 0.593750
v -0.335938 0.687500 0.593750
v 0.484375 0.554688 0.554688
v -0.484375 0.554688 0.554688
v 0.679688 0.453125 0.492188
v -0.679688 0.453125 0.492188
v 0.796875 0.406250 0.460938
v -0.796875 0.406250 0.460938
v 0.773438 0.164062 0.375000
v -0.773438 0.164062 0.375000
v 0.601562 0.000000 0.414062
v -0.601562 0.000000 0.414062
v 0.437500 -0.093750 0.468750
v -0.437500 -0.093750 0.468750
v 0.000000 0.898438 0.289062
v 0.000000 0.984375 -0.078125
v 0.000000 -0.195312 -0.671875
v 0.000000 -0.460938 0.187500
v 0.000000 -0.976562 0.460938
v 0.000000 -0.804688 0.343750
v 0.000000 -0.570312 0.320312
v 0.000000 -0.484375 0.281250
v 0.851562 0.234375 0.054688
v -0.851562 0.234375 0.054688
v 0.859375 0.320312 -0.046875
v -0.859375 0.320312 -0.046875
v 0.773438 0.265625 -0.437500
v -0.773438 0.265625 -0.437500
v 0.460938 0.437500 -0.703125
v -0.460938 0.437500 -0.703125
v 0.734375 -0.046875 0.070312
v -0.734375 -0.046875 0.070312
v 0.593750 -0.125000 -0.164062
v -0.593750 -0.125000 -0.164062
v 0.640625 -0.007812 -0.429688
v -0.640625 -0.007812 -0.429688
v 0.335938 0.054688 -0.664062
v -0.335938 0.054688 -0.664062
v 0.234375 -0.351562 0.406250
v -0.234375 -0.351562 0.406250
v 0.179688 -0.414062 0.257812
v -0.179688 -0.414062 0.257812
v 0.289062 -0.710938 0.382812
v -0.289062 -0.710938 0.382812
v 0.250000 -0.500000 0.390625
v -0.250000 -0.500000 0.390625
v 0.328125 -0.914062 0.398438
v -0.328125 -0.914062 0.398438
v 0.140625 -0.757812 0.367188
v -0.140625 -0.757812 0.367188
v 0.125000 -0.539062 0.359375
v -0.125000 -0.539062 0.359375
v 0.164062 -0.945312 0.437500
v -0.164062 -0.945312 0.437500
v 0.218750 -0.281250 0.429688
v -0.218750 -0.281250 0.429688
v 0.210938 -0.226562 0.468750
v -0.210938 -0.226562 0.468750
v 0.203125 -0.171875 0.500000
v -0.203125 -0.171875 0.500000
v 0.210938 -0.390625 0.164062
v -0.210938 -0.390625 0.164062
v 0.296875 -0.312500 -0.265625
v -0.296875 -0.312500 -0.265625
v 0.343750 -0.148438 -0.539062
v -0.343750 -0.148438 -0.539062
v 0.453125 0.867188 -0.382812
v -0.453125 0.867188 -0.382812
v 0.453125 0.929688 -0.070312
v -0.453125 0.929688 -0.070312
v 0.453125 0.851562 0.234375
v -0.453125 0.851562 0.234375
v 0.460938 0.523438 0.429688
v -0.460938 0.523438 0.429688
v 0.726562 0.406250 0.335938
v -0.726562 0.406250 0.335938
v 0.632812 0.453125 0.281250
v -0.632812 0.453125 0.281250
v 0.640625 0.703125 0.054688
v -0.640625 0.703125 0.054688
v 0.796875 0.562500 0.125000
v -0.796875 0.562500 0.125000
v 0.796875 0.617188 -0.117188
v -0.796875 0.617188 -0.117188
v 0.640625 0.750000 -0.195312
v -0.640625 0.750000 -0.195312
v 0.640625 0.679688 -0.445312
v -0.640625 0.679688 -0.445312
v 0.796875 0.539062 -0.359375
v -0.796875 0.539062 -0.359375
v 0.617188 0.328125 -0.585938
v -0.617188 0.328125 -0.585938
v 0.484375 0.023438 -0.546875
v -0.484375 0.023438 -0.546875
v 0.820312 0.328125 -0.203125
v -0.820312 0.328125 -0.203125
v 0.406250 -0.171875 0.148438
v -0.406250 -0.171875 0.148438
v 0.429688 -0.195312 -0.210938
v -0.429688 -0.195312 -0.210938
v 0.890625 0.406250 -0.234375
v -0.890625 0.406250 -0.234375
v 0.773438 -0.140625 -0.125000
v -0.773438 -0.140625 -0.125000
v 1.039062 -0.101562 -0.328125
v -1.039062 -0.101562 -0.328125
v 1.281250 0.054688 -0.429688
v -1.281250 0.054688 -0.429688
v 1.351562 0.320312 -0.421875
v -1.351562 0.320312 -0.421875
v 1.234375 0.507812 -0.421875
v -1.234375 0.507812 -0.421875
v 1.023438 0.476562 -0.312500
v -1.023438 0.476562 -0.312500
v 1.015625 0.414062 -0.289062
v -1.015625 0.414062 -0.289062
v 1.187500 0.437500 -0.390625
v -1.187500 0.437500 -0.390625
v 1.265625 0.289062 -0.406250
v -1.265625 0.289062 -0.406250
v 1.210938 0.078125 -0.406250
v -1.210938 0.078125 -0.406250
v 1.031250 -0.039062 -0.304688
v -1.031250 -0.039062 -0.304688
v 0.828125 -0.070312 -0.132812
v -0.828125 -0.070312 -0.132812
v 0.921875 0.359375 -0.218750
v -0.921875 0.359375 -0.218750
v 0.945312 0.304688 -0.289062
v -0.945312 0.304688 -0.289062
v 0.882812 -0.023438 -0.210938
v -0.882812 -0.023438 -0.210938
v 1.039062 0.000000 -0.367188
v -1.039062 0.000000 -0.367188
v 1.187500 0.093750 -0.445312
v -1.187500 0.093750 -0.445312
v 1.234375 0.250000 -0.445312
v -1.234375 0.250000 -0.445312
v 1.171875 0.359375 -0.437500
v -1.171875 0.359375 -0.437500
v 1.023438 0.343750 -0.359375
v -1.023438 0.343750 -0.359375
v 0.843750 0.289062 -0.210938
v -0.843750 0.289062 -0.210938
v 0.835938 0.171875 -0.273438
v -0.835938 0.171875 -0.273438
v 0.757812 0.093750 -0.273438
v -0.757812 0.093750 -0.273438
v 0.820312 0.085938 -0.273438
v -0.820312 0.085938 -0.273438
v 0.843750 0.015625 -0.273438
v -0.843750 0.015625 -0.273438
v 0.812500 -0.015625 -0.273438
v -0.812500 -0.015625 -0.273438
v 0.726562 0.000000 -0.070312
v -0.726562 0.000000 -0.070312
v 0.718750 -0.023438 -0.171875
v -0.718750 -0.023438 -0.171875
v 0.718750 0.039062 -0.187500
v -0.718750 0.039062 -0.187500
v 0.796875 0.203125 -0.210938
v -0.796875 0.203125 -0.210938
v 0.890625 0.242188 -0.265625
v -0.890625 0.242188 -0.265625
v 0.890625 0.234375 -0.320312
v -0.890625 0.234375 -0.320312
v 0.812500 -0.015625 -0.320312
v -0.812500 -0.015625 -0.320312
v 0.851562 0.015625 -0.320312
v -0.851562 0.015625 -0.320312
v 0.828125 0.078125 -0.320312
v -0.828125 0.078125 -0.320312
v 0.765625 0.093750 -0.320312
v -0.765625 0.093750 -0.320312
v 0.843750 0.171875 -0.320312
v -0.843750 0.171875 -0.320312
v 1.039062 0.328125 -0.414062
v -1.039062 0.328125 -0.414062
v 1.187500 0.343750 -0.484375
v -1.187500 0.343750 -0.484375
v 1.257812 0.242188 -0.492188
v -1.257812 0.242188 -0.492188
v 1.210938 0.085938 -0.484375
v -1.210938 0.085938 -0.484375
v 1.046875 0.000000 -0.421875
v -1.046875 0.000000 -0.421875
v 0.882812 -0.015625 -0.265625
v -0.882812 -0.015625 -0.265625
v 0.953125 0.289062 -0.343750
v -0.953125 0.289062 -0.343750
v 0.890625 0.109375 -0.328125
v -0.890625 0.109375 -0.328125
v 0.937500 0.062500 -0.335938
v -0.937500 0.062500 -0.335938
v 1.000000 0.125000 -0.367188
v -1.000000 0.125000 -0.367188
v 0.960938 0.171875 -0.351562
v -0.960938 0.171875 -0.351562
v 1.015625 0.234375 -0.375000
v -1.015625 0.234375 -0.375000
v 1.054688 0.187500 -0.382812
v -1.054688 0.187500 -0.382812
v 1.109375 0.210938 -0.390625
v -1.109375 0.210938 -0.390625
v 1.085938 0.273438 -0.390625
v -1.085938 0.273438 -0.390625
v 1.023438 0.437500 -0.484375
v -1.023438 0.437500 -0.484375
v 1.250000 0.468750 -0.546875
v -1.250000 0.468750 -0.546875
v 1.367188 0.296875 -0.500000
v -1.367188 0.296875 -0.500000
v 1.312500 0.054688 -0.531250
v -1.312500 0.054688 -0.531250
v 1.039062 -0.085938 -0.492188
v -1.039062 -0.085938 -0.492188
v 0.789062 -0.125000 -0.328125
v -0.789062 -0.125000 -0.328125
v 0.859375 0.382812 -0.382812
v -0.859375 0.382812 -0.382812"
F6F3HjmG,Untitled,vpeter,Bash,Friday 19th of April 2024 01:59:54 PM CDT,"need on dirty build

./scripts/clean TexturePacker

--- a/tools/depends/native/TexturePacker/src/TexturePacker.cpp	2024-04-19 20:58:28.914534551 +0200
+++ b/tools/depends/native/TexturePacker/src/TexturePacker.cpp	2024-04-19 21:00:15.099483818 +0200
@@ -312,7 +312,7 @@ int TexturePacker::createBundle(const st
       continue;
     }
 
-    printf(""%s\n"", output.c_str());
+    //printf(""%s\n"", output.c_str());
     bool skip=false;
     if (m_dupecheck)
     {
@@ -322,7 +322,7 @@ int TexturePacker::createBundle(const st
 
       if (CheckDupe(&ctx, i))
       {
-        printf(""****  duplicate of %s\n"", files[m_dupes[i]].GetPath().c_str());
+        //printf(""****  duplicate of %s\n"", files[m_dupes[i]].GetPath().c_str());
         file.GetFrames().insert(file.GetFrames().end(),
                                 files[m_dupes[i]].GetFrames().begin(),
                                 files[m_dupes[i]].GetFrames().end());
@@ -340,11 +340,11 @@ int TexturePacker::createBundle(const st
       {
         CXBTFFrame frame = CreateXBTFFrame(frames.frameList[j], writer);
         file.GetFrames().push_back(frame);
-        printf(""    frame %4i (delay:%4i)                         %s%c (%d,%d @ %"" PRIu64
-               "" bytes)\n"",
-               j, frame.GetDuration(), GetFormatString(frame.GetFormat()),
-               frame.HasAlpha() ? ' ' : '*', frame.GetWidth(), frame.GetHeight(),
-               frame.GetUnpackedSize());
+        //printf(""    frame %4i (delay:%4i)                         %s%c (%d,%d @ %"" PRIu64
+        //       "" bytes)\n"",
+        //       j, frame.GetDuration(), GetFormatString(frame.GetFormat()),
+        //       frame.HasAlpha() ? ' ' : '*', frame.GetWidth(), frame.GetHeight(),
+        //       frame.GetUnpackedSize());
       }
     }
     file.SetLoop(0);
"
zj7a5rSz,klicova_slova.sql,KitSaels,SQL,Friday 19th of April 2024 01:46:28 PM CDT,"INSERT INTO xhorak_klicova_slova (knihy_id, vyrazy_id) VALUES
('13','541'),
('13','542'),
('13','543'),
('13','544'),
('13','545'),
('16','20'),
('16','443'),
('16','590'),
('16','591'),
('17','44'),
('17','56'),
('17','58'),
('17','210'),
('20','175'),
('20','176'),
('32','24'),
('32','26'),
('36','227'),
('42','97'),
('42','150'),
('42','209'),
('44','21'),
('44','285'),
('44','286'),
('44','287'),
('44','288'),
('46','148'),
('46','149'),
('58','27'),
('58','28'),
('58','29'),
('60','82'),
('60','84'),
('60','133'),
('60','429'),
('60','435'),
('66','27'),
('66','171'),
('67','14'),
('67','15'),
('67','16'),
('74','20'),
('74','47'),
('74','70'),
('75','259'),
('75','301'),
('89','121'),
('89','122'),
('90','121'),
('90','122'),
('95','26'),
('95','146'),
('96','26'),
('96','264'),
('96','265'),
('96','266'),
('96','267'),
('96','268'),
('96','269'),
('96','270'),
('99','146'),
('99','271'),
('99','373'),
('99','374'),
('100','55'),
('100','436'),
('102','32'),
('102','558'),
('109','150'),
('109','212'),
('109','285'),
('109','441'),
('110','146'),
('110','373'),
('111','88'),
('111','324'),
('118','21'),
('118','170'),
('118','442'),
('128','444'),
('129','32'),
('129','82'),
('129','483'),
('141','320'),
('143','32'),
('143','369'),
('143','424'),
('159','296'),
('166','67'),
('166','72'),
('166','73'),
('171','477'),
('171','501'),
('171','505'),
('171','506'),
('180','206'),
('180','462'),
('182','119'),
('182','157'),
('192','33'),
('192','34'),
('197','85'),
('197','86'),
('197','371'),
('197','420'),
('206','123'),
('206','124'),
('214','477'),
('214','478'),
('214','479'),
('218','20'),
('218','66'),
('221','43'),
('221','265'),
('224','98'),
('224','400'),
('224','401'),
('230','176'),
('230','260'),
('230','397'),
('230','398'),
('230','399'),
('231','125'),
('231','398'),
('234','43'),
('234','445'),
('234','446'),
('240','62'),
('240','76'),
('240','120'),
('240','150'),
('240','219'),
('246','27'),
('246','171'),
('247','35'),
('247','172'),
('248','62'),
('248','181'),
('248','358'),
('248','368'),
('248','369'),
('248','370'),
('262','352'),
('262','454'),
('266','395'),
('266','396'),
('277','216'),
('278','60'),
('278','185'),
('278','186'),
('278','187'),
('278','188'),
('278','189'),
('278','190'),
('283','26'),
('283','47'),
('290','208'),
('290','243'),
('290','244'),
('290','245'),
('309','26'),
('309','133'),
('314','174'),
('316','137'),
('316','138'),
('316','139'),
('319','468'),
('319','469'),
('323','180'),
('323','421'),
('326','538'),
('326','539'),
('326','540'),
('333','165'),
('333','166'),
('337','27'),
('337','29'),
('337','30'),
('339','269'),
('339','364'),
('339','366'),
('340','184'),
('350','430'),
('350','431'),
('350','432'),
('350','433'),
('364','163'),
('364','223'),
('364','224'),
('364','225'),
('367','24'),
('367','473'),
('367','474'),
('373','57'),
('373','533'),
('373','534'),
('379','324'),
('379','389'),
('379','390'),
('379','391'),
('379','392'),
('385','44'),
('385','45'),
('385','158'),
('398','70'),
('398','171'),
('399','70'),
('399','171'),
('400','70'),
('400','171'),
('405','20'),
('405','21'),
('407','163'),
('408','163'),
('409','161'),
('409','405'),
('409','406'),
('409','408'),
('412','301'),
('413','146'),
('413','147'),
('423','292'),
('423','293'),
('425','140'),
('425','141'),
('454','26'),
('454','70'),
('454','71'),
('455','334'),
('457','208'),
('457','236'),
('457','352'),
('457','460'),
('486','352'),
('486','457'),
('486','458'),
('489','425'),
('489','426'),
('489','427'),
('489','428'),
('489','429'),
('517','163'),
('519','5'),
('519','226'),
('519','227'),
('519','228'),
('527','380'),
('527','381'),
('527','382'),
('527','383'),
('527','384'),
('527','385'),
('527','386'),
('527','387'),
('527','388'),
('528','88'),
('528','326'),
('531','294'),
('531','295'),
('543','409'),
('543','481'),
('543','482'),
('545','222'),
('545','263'),
('554','126'),
('554','159'),
('556','43'),
('556','49'),
('556','265'),
('556','379'),
('560','236'),
('560','243'),
('560','245'),
('560','422'),
('565','236'),
('565','237'),
('586','122'),
('586','231'),
('586','232'),
('586','233'),
('586','234'),
('588','88'),
('588','299'),
('588','301'),
('590','163'),
('611','58'),
('611','74'),
('611','303'),
('612','21'),
('612','56'),
('612','58'),
('620','121'),
('622','74'),
('639','21'),
('639','44'),
('639','115'),
('639','336'),
('639','337'),
('655','44'),
('655','58'),
('655','97'),
('655','513'),
('658','232'),
('658','235'),
('662','48'),
('662','356'),
('662','357'),
('662','358'),
('663','120'),
('663','409'),
('663','410'),
('663','411'),
('663','412'),
('671','94'),
('671','220'),
('671','221'),
('681','152'),
('681','164'),
('688','70'),
('688','208'),
('688','332'),
('688','333'),
('690','161'),
('690','180'),
('701','26'),
('706','124'),
('706','126'),
('706','213'),
('706','218'),
('708','97'),
('708','340'),
('709','120'),
('709','150'),
('709','151'),
('713','139'),
('727','269'),
('727','352'),
('727','364'),
('731','249'),
('731','250'),
('731','251'),
('731','252'),
('733','43'),
('733','239'),
('733','240'),
('734','43'),
('735','20'),
('735','21'),
('735','282'),
('735','338'),
('740','1'),
('740','295'),
('740','341'),
('740','342'),
('743','20'),
('743','70'),
('743','444'),
('745','20'),
('745','70'),
('745','444'),
('752','219'),
('755','477'),
('755','500'),
('755','501'),
('755','502'),
('755','503'),
('757','62'),
('757','133'),
('757','216'),
('757','464'),
('757','465'),
('757','466'),
('763','26'),
('763','68'),
('763','520'),
('781','3'),
('781','8'),
('788','36'),
('788','37'),
('789','53'),
('789','455'),
('789','456'),
('800','204'),
('800','423'),
('812','22'),
('812','47'),
('812','207'),
('812','601'),
('812','602'),
('826','66'),
('826','180'),
('826','329'),
('834','27'),
('834','35'),
('835','26'),
('835','442'),
('835','462'),
('835','515'),
('835','516'),
('856','36'),
('856','37'),
('856','88'),
('856','347'),
('856','348'),
('863','152'),
('863','153'),
('874','236'),
('874','327'),
('886','413'),
('886','414'),
('886','415'),
('907','26'),
('907','124'),
('907','313'),
('912','161'),
('912','162'),
('916','56'),
('923','76'),
('923','361'),
('928','33'),
('928','182'),
('937','49'),
('937','121'),
('937','122'),
('938','108'),
('938','109'),
('938','110'),
('939','106'),
('939','107'),
('939','108'),
('939','109'),
('950','24'),
('950','25'),
('950','26'),
('959','518'),
('959','519'),
('967','27'),
('967','31'),
('997','44'),
('997','509'),
('997','510'),
('997','511'),
('1006','171'),
('1006','532'),
('1012','20'),
('1012','46'),
('1012','70'),
('1024','308'),
('1024','309'),
('1034','297'),
('1034','298'),
('1042','21'),
('1042','113'),
('1045','161'),
('1045','402'),
('1045','403'),
('1045','404'),
('1045','405'),
('1045','406'),
('1045','407'),
('1052','53'),
('1052','54'),
('1054','76'),
('1054','77'),
('1054','78'),
('1063','44'),
('1063','45'),
('1063','46'),
('1065','51'),
('1065','52'),
('1067','56'),
('1067','57'),
('1067','58'),
('1069','62'),
('1069','63'),
('1071','21'),
('1071','26'),
('1071','55'),
('1077','75'),
('1077','85'),
('1077','86'),
('1078','78'),
('1078','87'),
('1080','87'),
('1080','88'),
('1080','89'),
('1080','90'),
('1081','80'),
('1084','1'),
('1084','91'),
('1085','1'),
('1085','60'),
('1086','1'),
('1088','2'),
('1088','59'),
('1089','2'),
('1089','59'),
('1090','1'),
('1090','2'),
('1091','92'),
('1091','93'),
('1091','94'),
('1093','102'),
('1096','113'),
('1100','125'),
('1100','126'),
('1101','123'),
('1101','127'),
('1103','113'),
('1104','21'),
('1104','113'),
('1105','21'),
('1105','113'),
('1106','128'),
('1106','129'),
('1106','130'),
('1107','131'),
('1108','132'),
('1109','21'),
('1109','76'),
('1109','133'),
('1110','134'),
('1114','54'),
('1117','21'),
('1117','208'),
('1117','561'),
('1118','54'),
('1120','21'),
('1120','562'),
('1123','113'),
('1123','161'),
('1123','170'),
('1125','308'),
('1126','161'),
('1127','565'),
('1127','566'),
('1127','567'),
('1129','47'),
('1136','113'),
('1143','21'),
('1143','47'),
('1143','48'),
('1144','21'),
('1144','208'),
('1144','245'),
('1144','352'),
('1144','575'),
('1146','21'),
('1146','207'),
('1150','21'),
('1150','576'),
('1152','47'),
('1152','419'),
('1152','578'),
('1153','108'),
('1153','579'),
('1158','583'),
('1160','32'),
('1160','82'),
('1160','585'),
('1160','586'),
('1164','76'),
('1164','433'),
('1167','592'),
('1169','199'),
('1170','58'),
('1172','54'),
('1172','64'),
('1172','562'),
('1174','2'),
('1174','88'),
('1174','423'),
('1182','32'),
('1182','604'),
('1192','308'),
('1192','610'),
('1246','20'),
('1246','66'),
('1250','56'),
('1250','613'),
('1250','614'),
('1259','20'),
('1259','21'),
('1264','176'),
('1265','176'),
('1267','370'),
('1271','260'),
('1271','261'),
('1278','106'),
('1278','625'),
('1278','627'),
('1280','94'),
('1280','227'),
('1281','646'),
('1283','21'),
('1283','145'),
('1283','171'),
('1285','21'),
('1285','158'),
('1285','170'),
('1286','20'),
('1286','21'),
('1286','639'),
('1292','21'),
('1292','158'),
('1292','645'),
('1301','649'),
('1302','96'),
('1302','308'),
('1302','650'),
('1302','653'),
('1303','656'),
('1303','657'),
('1303','658'),
('1305','659'),
('1305','660'),
('1305','661'),
('1307','21'),
('1307','238'),
('1315','120'),
('1315','340'),
('1315','667'),
('1318','670'),
('1318','671'),
('1319','152'),
('1319','672'),
('1321','21'),
('1321','43'),
('1322','21'),
('1322','240'),
('1325','170'),
('1325','560'),
('1330','21'),
('1330','681'),
('1330','682'),
('1333','21'),
('1333','689'),
('1336','692'),
('1336','693'),
('1337','113'),
('1337','161'),
('1341','650'),
('1341','701'),
('1343','161'),
('1343','702'),
('1344','28'),
('1344','704'),
('1345','705'),
('1385','97'),
('1423','20'),
('1423','21'),
('1423','56'),
('1423','147'),
('1423','713'),
('1453','152'),
('1453','657'),
('1502','712'),
('1506','49'),
('1506','132'),
('1539','714'),
('1539','715');
"
vQAtqhJw,Roblox Universal Script GUI Anti Afk etc,quikzyYTbtw,Lua,Friday 19th of April 2024 01:44:11 PM CDT,"-- i randomly made a small GUI with some universal features 
-- kinda open sourced
loadstring(game:HttpGet((""https://raw.githubusercontent.com/venoxw/venoxw/main/test"")))()"
Arx3uFZG,clear_temp,Python253,Python,Friday 19th of April 2024 01:41:46 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: clear_temp.py
# Version: 1.0.1
# Author: Jeoi Reqi

""""""
This script is designed to find and optionally remove temporary files in Windows system's temporary directories.

Requirements:
- Python 3.x installed on the system.
- The script is intended to run on Windows due to its reliance on Windows environment variables.

Functions:
- get_temp_directories(): Retrieves the temporary directories on the Windows system.
- get_files_in_temp_directories(): Finds all files in the temporary directories.
- print_files(files): Prints the files found in temporary directories.
- remove_temp_files(): Prompts the user whether to remove all temporary files found. If the user agrees, it attempts to delete each file.

Usage:
1: Save the script as ""clear_temp.py"".
2: Run the script using Python.
3: Follow the prompts to view the temporary files and choose whether to delete them.

Additional Notes:
- Be cautious when deleting temporary files, as some may be in use by running applications.
- Deleting certain temporary files may cause unexpected behavior in applications that rely on them.
- The script permanently deletes files; they are not moved to the system's Recycle Bin.
""""""

import os

def get_temp_directories():
    """"""
    Retrieves the temporary directories on the Windows system.

    Returns:
        list: A list of temporary directories.
    """"""
    temp_dirs = []
    for temp_var in ['TEMP', 'TMP']:
        if temp_var in os.environ:
            temp_dirs.append(os.environ[temp_var])
    return temp_dirs

def get_files_in_temp_directories():
    """"""
    Finds all files in the temporary directories.

    Returns:
        list: A list of tuples containing file paths and sizes.
    """"""
    temp_dirs = get_temp_directories()
    files = []
    for temp_dir in temp_dirs:
        for root, _, filenames in os.walk(temp_dir):
            for filename in filenames:
                file_path = os.path.join(root, filename)
                file_size = os.path.getsize(file_path)
                files.append((file_path, file_size))
    return files

def print_files(files):
    """"""
    Prints the files found in temporary directories.

    Args:
        files (list): A list of tuples containing file paths and sizes.
    """"""
    if not files:
        print(""\nNo files found in temp directories.\n"")
    else:
        print(""\nFiles in temp directories:\n"")
        for file_path, file_size in files:
            print(f""{file_path} - {file_size} bytes"")

def remove_temp_files():
    """"""
    Prompts the user whether to remove all temporary files found.

    If the user agrees, it attempts to delete each file.
    """"""
    files = get_files_in_temp_directories()
    print_files(files)
    if files:
        choice = input(""\nDo you want to attempt to remove all temp files?\n\n1: Yes\n2: No\n\nMake your selection (1 or 2): "").strip().lower()
        if choice == ""1"":
            deleted_count = 0
            for file_path, _ in files:
                if os.path.exists(file_path):  # Check if file exists before attempting to delete
                    try:
                        os.remove(file_path)
                        deleted_count += 1
                    except Exception as e:
                        pass  # Ignore errors during deletion
            if deleted_count == 1:
                files_text = ""file""
            else:
                files_text = ""files""
            print(f""\n- Deleted {deleted_count} {files_text}.\n"")
            not_deleted_count = len(files) - deleted_count
            if not_deleted_count > 0:
                if not_deleted_count == 1:
                    files_text = ""file""
                else:
                    files_text = ""files""
                print(f""\n- {not_deleted_count} file(s) were not deleted due to being in use by the system.\n"")
                print(""\nYou can manually delete them with elevated permissions, but be cautious as it may lead to undesirable effects on the system.\n"")
        else:
            print(""\nNo files were deleted.\n"")

remove_temp_files()
"
xJx5L4eM,make_temp,Python253,Python,Friday 19th of April 2024 01:41:09 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: make_temp.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script creates a simple text file containing specified content and saves it to the system's temporary directory.

Requirements:
- Python 3.x installed on the system.

Functions:
- create_test_file(content=""""): Creates a sample text file with the specified content
(default is ""THIS IS A SIMPLE TEXT FILE WE SEND TO THE TEMP DIRECTORY"") and saves it to the system's temporary directory.
Returns the path of the created file.
- echo_file_content(file_path): Outputs the content of the specified file to the terminal.

Usage:
1. Save the script as ""make_temp.py"".
2. Run the script using Python.
3. The script will create a test file in the temporary directory.
4. The content of this file will be output to the terminal.

Additional Notes:
- Not all files will be removed since many are in use by the system and you will need elevated permissions to delete them.
- Be cautious when running scripts that create files in the temporary directory, as they may clutter the system if not handled properly.
""""""

import os
import tempfile

def create_test_file(content=""THIS IS A SIMPLE TEXT FILE WE SEND TO THE TEMP DIRECTORY""):
    """"""
    Creates a test file with the specified content and saves it to the system's temporary directory.

    Args:
        content (str, optional): The content to be written to the test file.
        Defaults to ""THIS IS A SIMPLE TEXT FILE WE SEND TO THE TEMP DIRECTORY"".

    Returns:
        str: The path of the created test file.
    """"""
    file_path = os.path.join(tempfile.gettempdir(), ""sample_test.txt"")
    with open(file_path, ""w"") as file:
        file.write(content)
    print(f""\nTest file created at:\n{file_path}"")
    return file_path

def echo_file_content(file_path):
    """"""
    Outputs the content of the specified file to the terminal.

    Args:
        file_path (str): The path of the file to output its content.
    """"""
    with open(file_path, ""r"") as file:
        file_content = file.read()
        print(""\nFile content:"")
        print(""'"",file_content,""'"")

# Create the test file in the temporary directory
test_file_path = create_test_file()

# Output the content of the test file to the terminal
echo_file_content(test_file_path)

"
dgNwC6Kf,–°–ü–†–ò–ù–¢ ‚Ññ 7 | –ú–æ–¥–µ–ª—å –ø–∞–º—è—Ç–∏ –≤ C++ | –£—Ä–æ–∫ 7: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤. –ß–∞—Å—Ç—å –ø–µ—Ä–≤–∞—è,chevengur,C++,Friday 19th of April 2024 01:39:56 PM CDT,"#include <iostream>
#include <string>
#include <vector>



using namespace std;

// –©—É–ø–∞–ª—å—Ü–µ
class Tentacle {
public:
    explicit Tentacle(int id)
            : id_(id) {
    }

    int GetId() const {
        return id_;
    }

private:
    int id_ = 0;
};

// –û—Å—å–º–∏–Ω–æ–≥
class Octopus {
public:
    Octopus() {
        Tentacle* t = nullptr;
        try {
            for (int i = 1; i <= 8; ++i) {
                t = new Tentacle(i);      // –ú–æ–∂–µ—Ç –≤—ã–±—Ä–æ—Å–∏—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ bad_alloc
                tentacles_.push_back(t);  // –ú–æ–∂–µ—Ç –≤—ã–±—Ä–æ—Å–∏—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ bad_alloc

                // –û–±–Ω—É–ª—è–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —â—É–ø–∞–ª—å—Ü–µ, –∫–æ—Ç–æ—Ä–æ–µ —É–∂–µ –¥–æ–±–∞–≤–∏–ª–∏ –≤ tentacles_,
                // —á—Ç–æ–±—ã –Ω–µ —É–¥–∞–ª–∏—Ç—å –µ–≥–æ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ catch –ø–æ–≤—Ç–æ—Ä–Ω–æ
                t = nullptr;
            }
        } catch (const bad_alloc&) {
            // –£–¥–∞–ª—è–µ–º —â—É–ø–∞–ª—å—Ü–∞, –∫–æ—Ç–æ—Ä—ã–µ —É—Å–ø–µ–ª–∏ –ø–æ–ø–∞—Å—Ç—å –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä tentacles_
            Cleanup();
            // –£–¥–∞–ª—è–µ–º —â—É–ø–∞–ª—å—Ü–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–∑–¥–∞–ª–∏, –Ω–æ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –≤ tentacles_
            delete t;
            // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –Ω–µ —Å–º–æ–≥ —Å–æ–∑–¥–∞—Ç—å –æ—Å—å–º–∏–Ω–æ–≥–∞ —Å –≤–æ—Å–µ–º—å—é —â—É–ø–∞–ª—å—Ü–∞–º–∏,
            // –ø–æ—ç—Ç–æ–º—É –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, —á—Ç–æ–±—ã —Å–æ–æ–±—â–∏—Ç—å –≤—ã–∑—ã–≤–∞—é—â–µ–º—É –∫–æ–¥—É –æ–± –æ—à–∏–±–∫–µ
            // throw –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤–Ω—É—Ç—Ä–∏ catch –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ü–ï–†–ï–í–´–ë–†–û–° –ø–æ–π–º–∞–Ω–Ω–æ–≥–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
            throw;
        }
    }

    const Tentacle& GetTentacle(int index) const {
        if (index < 0 || static_cast<size_t>(index) >= tentacles_.size()) {
            throw out_of_range(""Invalid tentacle index""s);
        }
        // –ß—Ç–æ–±—ã –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å —É–∫–∞–∑–∞—Ç–µ–ª—å –≤ —Å—Å—ã–ª–∫—É, —Ä–∞–∑—ã–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –µ–≥–æ
        return *tentacles_[index];
    }

    ~Octopus() {
        // –û—Å—å–º–∏–Ω–æ–≥ –≤–ª–∞–¥–µ–µ—Ç –æ–±—ä–µ–∫—Ç–∞–º–∏ –≤ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏ (—â—É–ø–∞–ª—å—Ü–∞),
        // –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã –ø—Ä–∏ –µ–≥–æ —Ä–∞–∑—Ä—É—à–µ–Ω–∏–∏.
        // –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä - –ª—É—á—à–µ–µ –º–µ—Å—Ç–æ, —á—Ç–æ–±—ã –ø—Ä–∏–±—Ä–∞—Ç—å—Å—è –∑–∞ —Å–æ–±–æ–π.
        Cleanup();
    }

private:
    void Cleanup() {
        // –£–¥–∞–ª—è–µ–º —â—É–ø–∞–ª—å—Ü–∞ –æ—Å—å–º–∏–Ω–æ–≥–∞ –∏–∑ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏
        for (Tentacle* t : tentacles_) {
            delete t;
        }
        // –û—á–∏—â–∞–µ–º –º–∞—Å—Å–∏–≤ —É–∫–∞–∑–∞—Ç–µ–ª–µ–π –Ω–∞ —â—É–ø–∞–ª—å—Ü–∞
        tentacles_.clear();
    }

    // –í–µ–∫—Ç–æ—Ä —Ö—Ä–∞–Ω–∏—Ç —É–∫–∞–∑–∞—Ç–µ–ª–∏ –Ω–∞ —â—É–ø–∞–ª—å—Ü–∞. –°–∞–º–∏ –æ–±—ä–µ–∫—Ç—ã —â—É–ø–∞–ª–µ—Ü –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –∫—É—á–µ
    vector<Tentacle*> tentacles_;
};

int main() {
    // –û–¥–∏–Ω –∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —Å–ø–æ—Å–æ–±–æ–≤ –≤—ã–∑–≤–∞—Ç—å –Ω–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
    for (int i = 1; i <= 1000; ++i) {
        Octopus octopus;
        cout << ""Copying octopus ""s << i << "" "" << octopus.GetTentacle(0).GetId() << endl;
        Octopus octopus_copy0(octopus);
//        Octopus octopus_copy1(octopus);
        // octopus_copy1, octopus_copy0 –∏ octopus –æ—Ç–æ—Ä–≤—É—Ç —â—É–ø–∞–ª—å—Ü–∞ –¥—Ä—É–≥ –¥—Ä—É–≥—É
    }
    // –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–∞ –Ω–∞–¥–ø–∏—Å—å –Ω–µ –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–∞
    cout << ""Congratulations, everything is ok""s << endl;
}"
T6vS7f4y,Ramp Network Facilitates USDt on TON Transactions for Global Users,livebetpro,PHP,Friday 19th of April 2024 01:08:27 PM CDT,"https://www.livebetpro.com/ramp-network-facilitates-usdt-on-ton-transactions-for-global-users/
 
Ramp Network, a financial technology firm&nbsp;creating&nbsp;payment rails that link cryptocurrencies to the international financial system, announced that it has made it possible to buy and sell USDt on Tether‚Äôs TON stablecoin.



The network boosts Tether‚Äôs use case with native USDt on TON by facilitating a seamless, borderless experience for P2P payments in&nbsp;the Telegram Messenger ecosystem, which has over 900 million users worldwide. Launching on the TON network, which is closely linked with the Telegram Wallet, will allow for the continued expansion of Telegram‚Äôs Apps and decentralized services on TON. USDt, with a market cap of over 107 billion dollars, is already the most widely-utilized&nbsp;stablecoin in the world and&nbsp;is supported by dozens of leading blockchains.



The whole TON ecosystem will benefit from Ramp‚Äôs (a top supplier of finance infrastructure in the crypto sector) decision to provide support for USDt on TON, which will make in-and-out transactions much easier. Fast and simple cryptocurrency purchases and withdrawals in over 150 countries are made possible with Ramp‚Äôs easy-to-use crypto on- and off-ramps, which developers can integrate&nbsp;into any application with ease. With its streamlined Know Your Customer (KYC) procedure, it makes onboarding new customers easier and offers crypto-to-fiat and fiat-to-crypto swaps&nbsp;for more than 100 digital assets.



Szymon Sypniewicz, CEO of Ramp Network stated:




‚ÄúCrypto transactions should be as simple as texting. At Ramp Network we share TON Foundation‚Äôs vision. We are excited to contribute to making it a reality by introducing on-ramping and off-ramping for USDt on TON across more than 150 countries. We look forward to seeing how enabling access to instant, low-cost crypto transactions can improve the lives of hundreds of millions of users in the TON ecosystem.‚Äù




In a phased approach, Ramp will gradually deploy USDt on TON via its on-ramping on Ramp‚Äôs main website and interfaces with third-party wallets that have chosen to support&nbsp;TON assets. Subsequently, USDt on TON will be added to the fiat off-ramp.



Back in December 2023, when ramp allowed on-ramp for the network‚Äôs native asset Toncoin (TON), it first announced TON support.
"
W1eZEgMi,CHATGPT Online Player List,MigasRocha,Lua,Friday 19th of April 2024 01:02:21 PM CDT,"-- Open the peripheral connected to the Advanced Computer
local playerDetector = peripheral.wrap(""side_of_player_detector"")  -- Replace ""side_of_player_detector"" with the actual side of the Player Detector

-- Function to get online players
local function getOnlinePlayers()
    local onlinePlayers = playerDetector.getOnlinePlayers()
    return onlinePlayers
end

-- Function to display online players on the terminal
local function displayOnlinePlayers()
    local onlinePlayers = getOnlinePlayers()
    term.clear()  -- Clear the terminal screen
    print(""Online Players:"")
    for _, player in ipairs(onlinePlayers) do
        print(""- "" .. player)
    end
end

-- Main loop to continuously display online players
while true do
    displayOnlinePlayers()
    os.sleep(5)  -- Refresh every 5 seconds (adjust as needed)
end
"
du5kx2rH,Untitled,Josif_tepe,C++,Friday 19th of April 2024 01:01:28 PM CDT,"#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;
    
    
    for(int i = 0; i < n; i++) {
        int x;
        cin >> x;
        
        int dali_e_sostaven_od_parni = 1;
        while(x > 0) {
            int cifra = x % 10;
            if(cifra % 2 == 1) {
                dali_e_sostaven_od_parni = 0;
            }
            x /= 10;
        }
    }
    return 0;
}
"
5x7YXv1P,Homework nested structs,Denis_Hristov,C,Friday 19th of April 2024 12:59:03 PM CDT,"#include <stdio.h>
#include <stdlib.h>

struct Student{
    char name[20];
    float grade;
};

struct Klas{
    unsigned int klasNumber;
    struct Student students[30];
    unsigned int studentsNum;
};

struct Vipusk{
    unsigned int year;
    struct Klas klasove[5];
    unsigned int klasoveNum;
};

float calcAverageKlas(struct Klas klas){
    float sum = 0;

    for(int i = 0; i < klas.studentsNum; i++){
        sum += klas.students[i].grade;
    }

    return sum / klas.studentsNum;
}

float calcAverageVipusk(struct Vipusk* vipusk){
    float sum = 0;
    for(int i = 0; i < vipusk->klasoveNum; i++){
        sum += calcAverageKlas(vipusk->klasove[i]);
    }

    return sum / vipusk->klasoveNum;
}

int main()
{

    struct Vipusk vipusk;

    printf(""Enter the number of classes: "");
    scanf(""%d"", &vipusk.klasoveNum);

    for(int i = 0; i < vipusk.klasoveNum; i++){
        printf(""Enter the number of students for class %d: "", i + 1);
        scanf(""%d"", &(vipusk.klasove[i].studentsNum));
        for(int j = 0; j < vipusk.klasove[i].studentsNum; j++){
            getchar();
            printf(""Please enter student name: \n"");
            fgets(vipusk.klasove[i].students[j].name, sizeof(vipusk.klasove[i].students[j].name), stdin);
            printf(""Please enter the grade: \n"");
            scanf(""%f"", &(vipusk.klasove[i].students[j].grade));

        }
    }

    for (int i = 0; i < vipusk.klasoveNum; i++) {
        printf(""Average grade of class %d: %.2f\n"", i + 1, calcAverageKlas(vipusk.klasove[i]));
    }

    printf(""Average grade of the vipusk: %.2f\n"", calcAverageVipusk(&vipusk));

    return 0;
}
"
hjbR0AKi,How can I obtain the InstaForex No Deposit Bonus and initiate trading,reviewbrokers,PHP,Friday 19th of April 2024 12:57:53 PM CDT,https://www.reviewbrokers.net/how-can-i-obtain-the-instaforex-no-deposit-bonus-and-initiate-trading/
AQrJ8N4F,Untitled,Tkap1,C,Friday 19th of April 2024 12:54:17 PM CDT,"

int entity_get_personality_count(Entity entity)
{
	int result = 0;
	for(int i = 0; i < Personality_Count; i++) {
		if(entity.personality_values[i] > 0) { result += 1; }
	}
	return result;
}

bool entity_has_personality(Entity entity, Personality personality)
{
	return entity.personality_values[personality] > 0;
}"
BYPV6Tav,How Can You Claim the $500 Forex Trading Bonus for Free from InstaForex?,fxvnpro,PHP,Friday 19th of April 2024 12:38:29 PM CDT,"https://www.fxvnpro.com/how-can-you-claim-the-500-forex-trading-bonus-for-free-from-instaforex/
 
Table of Contents : InstaForex

 	Introduction: InstaForex $500 Deposit-Free Trading Opportunity
 	Bonus Joining Link
 	About InstaForex
 	Bonus Details
 	How to Join the Forex Free Trading Bonus
 	Withdrawal Terms
 	Deposit-Free Trading Bonus Terms
 	Conclusion: Seize the Opportunity with InstaForex


1. Introduction: InstaForex $500 Deposit-Free Trading Opportunity
Exciting news for all aspiring traders! InstaForex, a reputable brokerage firm renowned for its innovative services and user-friendly platform, is offering a remarkable opportunity for newcomers to kickstart their trading journey. With a generous $500 virtual cash bonus, accessible without any initial deposit, InstaForex is paving the way for traders to explore the thrilling world of Forex without financial constraints.


2. Bonus Joining Link
As an established player in the brokerage industry, InstaForex prides itself on providing traders with unparalleled benefits, including leverage up to 1:1000 and seamless withdrawal options. Whether you're a novice or an experienced trader, this bonus presents an ideal opportunity to bolster your trading career and achieve your financial goals.


3. About InstaForex
InstaForex is a well-known brokerage firm recognized for its reliability, transparency, and commitment to providing exceptional trading services to its clients. With a diverse range of trading instruments, cutting-edge technology, and comprehensive educational resources, InstaForex caters to the needs of traders worldwide.


4. Bonus Details

 	Expire Date: Unlimited
 	Applicable for: All Traders


5. How to Join the Forex Free Trading Bonus

 	Opening a Trading Account: Sign up for an account with InstaForex to unlock access to the exciting bonus offer.
 	Crediting the Bonus: Once your account is set up, the $500 bonus will be credited to your account, ready for you to start trading.
 	Kickstarting Your Trading: With your bonus funds in hand, dive into the dynamic world of Forex trading and seize lucrative opportunities to maximize your profits.


6. Withdrawal Terms

 	Bonus: No
 	Profits: Yes


7. Deposit-Free Trading Bonus Terms

 	Starting without a Deposit: Enjoy the freedom to commence your trading journey without the need for an initial deposit, empowering you to explore the market with ease.
 	Verification Procedure not Mandatory: Skip the cumbersome verification process and dive straight into trading, eliminating unnecessary delays and ensuring a swift onboarding experience.
 	Downloading MT4 for Enhanced Trading Experience: Enhance your trading experience with the industry-leading MetaTrader 4 (MT4) platform, renowned for its speed, reliability, and advanced features.


8. Conclusion: Seize the Opportunity with InstaForex
Seize this golden opportunity to embark on your trading journey with InstaForex and unleash your full potential in the dynamic world of Forex. Don't miss out on this lucrative offer ‚Äì claim your $500 deposit-free trading bonus today and chart a course towards financial success!

Read InstaForex Review"
JRgsZBVp,Untitled,MeehoweCK,C++,Friday 19th of April 2024 12:24:15 PM CDT,"#include <ctime>
#include <cstdlib>
#include <iostream>
#include <conio.h>

double szacowaniePi(int N) {
	int n{};		// licznik okre≈õlajƒÖcy ile punkt√≥w zawiera siƒô w ƒáwiartce ko≈Ça
	auto podstawa{ N / 100 };
	auto nastProg{ 0 };

	for (long long i{ 0 }; i < N; ++i) {
		if (i == nastProg) {
			system(""cls"");		// zresetowanie konsoli
			std::cout << ""Wykonano "" << 100 * i / N << ""%\n"";
			nastProg += podstawa;
		}
		// wylosowanie wsp√≥≈Çrzƒôdnych punktu (x, y):
		auto x{ 1.0 * rand() / RAND_MAX };
		auto y{ 1.0 * rand() / RAND_MAX };
		// sprawdzenie czy wylosowany punkt zawiera siƒô w ƒáwiartce ko≈Ça:
		if (x * x + y * y <= 1) {
			// zwiƒôkszamy liczbƒô punkt√≥w zawierajƒÖcych siƒô w ƒáwiartce ko≈Ça o 1
			++n;
		}
	}
	system(""cls"");
	return 4.0 * n / N;
}

int main() {
	srand(time(nullptr));
	int punkty;
	std::cout << ""Ile punktow ma byc losowanych? "";
	std::cin >> punkty;
	std::cout << ""Liczbe pi oszacowano na "" << szacowaniePi(punkty) << std::endl;
	return 0;
}"
h7gxG7Vr,SkyLine-Practical-D&C,alisadafi,Python,Friday 19th of April 2024 12:15:53 PM CDT,"class Building:
    def __init__(self, left, ht, right):
        self.left = left
        self.ht = ht
        self.right = right

class Strip:
    def __init__(self, left=0, ht=0):
        self.left = left
        self.ht = ht

class SkyLine:
    def __init__(self, cap):
        self.arr = []
        self.capacity = cap
        self.n = 0

    def count(self):
        return self.n

    def merge(self, other):
        res = SkyLine(self.n + other.n)
        h1, h2, i, j = 0, 0, 0, 0
        while i < self.n and j < other.n:
            if self.arr[i].left < other.arr[j].left:
                x1, h1 = self.arr[i].left, self.arr[i].ht
                maxh = max(h1, h2)
                res.append(Strip(x1, maxh))
                i += 1
            else:
                x2, h2 = other.arr[j].left, other.arr[j].ht
                maxh = max(h1, h2)
                res.append(Strip(x2, maxh))
                j += 1
        while i < self.n:
            res.append(self.arr[i])
            i += 1
        while j < other.n:
            res.append(other.arr[j])
            j += 1
        return res

    def append(self, st):
        if self.n > 0 and self.arr[self.n-1].ht == st.ht:
            return
        if self.n > 0 and self.arr[self.n-1].left == st.left:
            self.arr[self.n-1].ht = max(self.arr[self.n-1].ht, st.ht)
            return
        self.arr.append(st)
        self.n += 1

    def print_skyline(self):
        print(""Skyline for given buildings is"")
        for i in range(self.n):
            print("" ({}, {}),"".format(self.arr[i].left, self.arr[i].ht), end="""")
        print()

def find_skyline(arr, l, h):
    if l == h:
        res = SkyLine(2)
        res.append(Strip(arr[l].left, arr[l].ht))
        res.append(Strip(arr[l].right, 0))
        return res
    mid = (l + h) // 2
    sl = find_skyline(arr, l, mid)
    sr = find_skyline(arr, mid+1, h)
    res = sl.merge(sr)
    return res

arr = [Building(1, 11, 5), Building(2, 6, 7), Building(3, 13, 9), Building(12, 7, 16), Building(14, 3, 25), Building(19, 18, 22), Building(23, 13, 29), Building(24, 4, 28)]
n = len(arr)
skyline = find_skyline(arr, 0, n-1)
skyline.print_skyline()"
wxwXKmcU,Untitled,MeehoweCK,C++,Friday 19th of April 2024 11:57:21 AM CDT,"#include <ctime>
#include <cstdlib>
#include <iostream>

const int N{ 100'000'000 };		// liczba losowanych punkt√≥w

double szacowaniePi() {
	int n{};		// licznik okre≈õlajƒÖcy ile punkt√≥w zawiera siƒô w ƒáwiartce ko≈Ça
	for (auto i{ 0 }; i < N; ++i) {
		// wylosowanie wsp√≥≈Çrzƒôdnych punktu (x, y):
		auto x{ 1.0 * rand() / RAND_MAX };
		auto y{ 1.0 * rand() / RAND_MAX };
		// sprawdzenie czy wylosowany punkt zawiera siƒô w ƒáwiartce ko≈Ça:
		if (x * x + y * y <= 1) {
			// zwiƒôkszamy liczbƒô punkt√≥w zawierajƒÖcych siƒô w ƒáwiartce ko≈Ça o 1
			++n;
		}
	}
	return 4.0 * n / N;
}

int main() {
	srand(time(nullptr));
	std::cout << ""Liczbe pi oszacowano na "" << szacowaniePi() << std::endl;
	return 0;
}"
LwC1A8Zz,Untitled,MeehoweCK,C++,Friday 19th of April 2024 11:25:46 AM CDT,"#include <iostream>
#include <cstdlib>
#include <ctime>

const unsigned int N{ 1'000'000'000 };

double szacujPi() {
	unsigned int n{};	// licznik okre≈õlajƒÖcy ile punkt√≥w zawiera siƒô w ƒáwiartce ko≈Ça
	for (unsigned int i{}; i < N; ++i) {
		// losowanie punktu (x, y):
		auto x{ 1.0 * rand() / RAND_MAX };
		auto y{ 1.0 * rand() / RAND_MAX };
		// sprawdzamy czy punkt (x, y) zawiera siƒô w ƒáwiartce ko≈Ça:
		if (x * x + y * y <= 1) {
			// punkt zawiera siƒô w ƒáwiartce ko≈Ça, wiƒôc zwiƒôkszamy n o 1:
			++n;
		}
	}
	return 4.0 * n / N;
}

int main() {
	srand(time(nullptr));
	std::cout << ""Wartosc liczby pi oszacowano na "" << szacujPi() << std::endl;
	return 0;
}"
ezR4Jg23,Semi primes,ifigazsi,Python,Friday 19th of April 2024 11:20:59 AM CDT,"from itertools import combinations_with_replacement

def primes(n: int) -> iter:
    return [i for i in range(2, n + 1) if sum(i % k == 0 for k in range(1, int(i ** 0.5) + 1)) == 1]

def at_least20(number):
    if number < 20:
        return 20
    return number

def semi_primes(number_of_semi_primes):
    list_of_primes = primes(at_least20(number_of_semi_primes))
    comb = combinations_with_replacement(list_of_primes, 2)
    c = set()
    for i in comb:
        c.add(i[0] * i[1])
        if len(c) == number_of_semi_primes:
            break
    print(sorted(c))

if __name__ == '__main__':

    semi_primes2(10000)"
EVzaJKVt,Untitled,juanchixd,Python,Friday 19th of April 2024 10:54:23 AM CDT,"""""""
Created on 2024
@Creator: Juan Bautista Gonzalez
@Position: Student electronic engineering and programmer part-time
@Contact:
    - Email: contacto@juangonzalez.com.ar
""""""
import os
import requests
from bs4 import BeautifulSoup
from urllib.parse import urljoin

html_content= """"""AQUI DATA 
""""""

url = ""https://www.fceia.unr.edu.ar/tesys/html/""
soup = BeautifulSoup(html_content, ""html.parser"")

download_folder = ""descargas""
os.makedirs(download_folder, exist_ok=True)
file_number = 1
previous_number = None

for row in soup.find_all(""tr""):
    columns = row.find_all(""td"")
    if len(columns) >= 4:
        number = columns[1].text.strip().zfill(3) 
        if number != previous_number:
            file_number = 1 
        for link in columns[3].find_all(""a""):
            href = link.get(""href"")
            if href:
                file_url = urljoin(url, href) 
                file_name = os.path.join(download_folder, f""{number}_{file_number:03d}_{os.path.basename(href)}"")
                try:
                    response = requests.get(file_url)
                    with open(file_name, ""wb"") as file:
                        file.write(response.content)
                    print(f""Archivo descargado: {file_name}"")
                except Exception as e:
                    print(f""Error al descargar {file_url}: {e}"")
            file_number += 1 
        previous_number = number"
