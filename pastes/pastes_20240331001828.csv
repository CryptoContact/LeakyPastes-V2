id,title,username,language,date,content
KtTkXmYD,2024-03-29_stats.json,rdp_snitch,JSON,Saturday 30th of March 2024 07:16:19 PM CDT,"{
  ""ip"": {
    ""128.199.242.196"": 4295,
    ""58.218.204.183"": 9,
    ""2.57.149.186"": 27,
    ""62.204.41.222"": 18,
    ""212.70.149.146"": 9,
    ""198.235.24.230"": 9,
    ""194.165.16.78"": 6,
    ""199.45.154.55"": 3,
    ""117.2.137.179"": 9,
    ""87.251.75.145"": 9,
    ""185.16.38.89"": 6,
    ""194.165.16.76"": 6,
    ""36.78.201.10"": 3,
    ""103.214.8.137"": 12,
    ""196.171.104.218"": 6,
    ""185.170.144.3"": 6,
    ""164.90.160.126"": 9,
    ""167.94.138.36"": 3,
    ""196.190.117.7"": 3,
    ""198.235.24.126"": 9,
    ""180.76.119.217"": 18,
    ""2.57.149.92"": 3,
    ""185.196.220.41"": 9,
    ""193.142.146.227"": 9,
    ""81.19.135.2"": 9,
    ""152.32.245.196"": 3,
    ""14.225.9.184"": 57,
    ""205.210.31.168"": 9,
    ""144.217.24.29"": 3,
    ""45.227.254.8"": 6,
    ""206.168.34.49"": 3,
    ""87.251.75.64"": 3,
    ""45.227.254.119"": 6,
    ""113.160.91.206"": 3,
    ""205.210.31.206"": 9,
    ""144.16.111.79"": 3,
    ""112.4.139.162"": 3,
    ""128.1.43.27"": 528
  },
  ""asn"": {
    ""AS14061"": 4304,
    ""AS4134"": 9,
    ""AS208312"": 30,
    ""AS59425"": 18,
    ""AS204428"": 9,
    ""AS396982"": 36,
    ""AS48721"": 12,
    ""AS398722"": 3,
    ""AS7552"": 9,
    ""AS208091"": 12,
    ""AS201814"": 6,
    ""AS7713"": 3,
    ""AS140810"": 12,
    ""AS24691"": 6,
    ""AS197414"": 6,
    ""AS398324"": 6,
    ""AS24757"": 3,
    ""AS38365"": 18,
    ""AS208046"": 18,
    ""AS209588"": 9,
    ""AS135377"": 531,
    ""AS135905"": 57,
    ""AS16276"": 3,
    ""AS267784"": 12,
    ""AS45899"": 3,
    ""AS2697"": 3,
    ""AS56046"": 3
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 4304,
    ""Chinanet"": 9,
    ""Red Byte LLC"": 30,
    ""Horizon LLC"": 18,
    ""SS-Net"": 9,
    ""Google LLC"": 36,
    ""Flyservers S.A."": 33,
    ""Censys, Inc."": 6,
    ""Viettel Corporation"": 9,
    ""Xhost Internet Solutions LP"": 18,
    ""MEVSPACE sp. z o.o."": 6,
    ""PT. TELKOM INDONESIA"": 3,
    ""MEGACORE"": 12,
    ""TogoTelecom"": 6,
    ""Ethiotelecom"": 3,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 18,
    ""ColocationX Ltd."": 18,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Vietnam Posts and Telecommunications Group"": 57,
    ""OVH Hosting"": 3,
    ""Censys"": 3,
    ""VietNam Post and Telecom Corporation"": 3,
    ""ERNET India"": 3,
    ""China Mobile Communications Corporation"": 3,
    ""Zenlayer Inc"": 528
  },
  ""org"": {
    ""DigitalOcean, LLC"": 4304,
    ""Chinanet JS"": 9,
    ""Chang Way Technologies Co. Limited"": 30,
    ""Horizon LLC"": 18,
    ""4Media Ltd"": 9,
    ""Palo Alto Networks, Inc"": 36,
    ""Flyservers S.A"": 12,
    ""Censys, Inc."": 6,
    ""Unknown"": 21,
    ""Xhost Internet Solutions"": 12,
    ""MEVSPACE sp. z o.o"": 6,
    ""Megacore Technology Company Limited"": 12,
    ""Xhostis"": 6,
    ""Censys, Inc"": 3,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 18,
    ""Makut Investments"": 9,
    ""ColocationX Ltd"": 9,
    ""Alviva Holding Limited"": 9,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""VNPT"": 57,
    ""SAS, ONYPHE"": 3,
    ""UAB Host Baltic"": 12,
    ""Vietnam Posts and Telecommunications Group"": 3,
    ""ERNET India"": 3,
    ""China Mobile Communications Corporation"": 3,
    ""UCLOUD"": 528
  },
  ""regionName"": {
    ""South West"": 4295,
    ""Jiangsu"": 12,
    ""Lesser Poland"": 30,
    ""Moscow"": 546,
    ""Sliven"": 9,
    ""California"": 36,
    ""Kaunas"": 12,
    ""Central and Western District"": 3,
    ""L\u00e2m \u0110\u1ed3ng Province"": 9,
    ""North Holland"": 27,
    ""Mazovia"": 6,
    ""East Kalimantan"": 3,
    ""Hanoi"": 72,
    ""Maritime"": 6,
    ""Hesse"": 18,
    ""Michigan"": 6,
    ""Addis Ababa"": 3,
    ""Beijing"": 18,
    ""Virginia"": 9,
    ""Bangkok"": 3,
    ""Quebec"": 3,
    ""Vilnius"": 12,
    ""National Capital Territory of Delhi"": 3
  },
  ""country"": {
    ""Singapore"": 4295,
    ""China"": 30,
    ""Poland"": 36,
    ""Russia"": 546,
    ""Bulgaria"": 9,
    ""United States"": 51,
    ""Lithuania"": 24,
    ""Hong Kong"": 3,
    ""Vietnam"": 81,
    ""The Netherlands"": 27,
    ""Indonesia"": 3,
    ""Togo"": 6,
    ""Germany"": 18,
    ""Ethiopia"": 3,
    ""Thailand"": 3,
    ""Canada"": 3,
    ""India"": 3
  },
  ""account"": {
    ""hello"": 4427,
    ""Administr"": 48,
    ""Test"": 42,
    ""qhyMCZkNs"": 3,
    ""ocdcRH"": 3,
    ""WCcilM"": 3,
    ""(empty)"": 15,
    ""SfEnehAbI"": 3,
    ""urkbgD"": 3,
    ""AxwAdG"": 3,
    ""Domain"": 39,
    ""Administrator"": 6,
    ""hEZBygWNm"": 3,
    ""yMCqXY"": 3,
    ""UlkBmK"": 3,
    ""rhqokGzIW"": 3,
    ""MVLJLM"": 3,
    ""mLZXbr"": 3,
    ""1948287240"": 528
  },
  ""keyboard"": {
    ""Unknown"": 5141
  },
  ""client_build"": {
    ""Unknown"": 5141
  },
  ""client_name"": {
    ""Unknown"": 5141
  },
  ""ip_type"": {
    ""hosting & proxy"": 4295,
    ""Unknown"": 237,
    ""hosting"": 597,
    ""mobile"": 12
  }
}"
iiuWCF3M,2024-03-29_stats.json,rdp_snitch,JSON,Saturday 30th of March 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""128.199.242.196"": 4294,
    ""58.218.204.183"": 9,
    ""2.57.149.186"": 27,
    ""62.204.41.222"": 18,
    ""212.70.149.146"": 9,
    ""198.235.24.230"": 9,
    ""194.165.16.78"": 6,
    ""199.45.154.55"": 3,
    ""117.2.137.179"": 9,
    ""87.251.75.145"": 9,
    ""185.16.38.89"": 6,
    ""194.165.16.76"": 6,
    ""36.78.201.10"": 3,
    ""103.214.8.137"": 12,
    ""196.171.104.218"": 6,
    ""185.170.144.3"": 6,
    ""164.90.160.126"": 9,
    ""167.94.138.36"": 3,
    ""196.190.117.7"": 3,
    ""198.235.24.126"": 9,
    ""180.76.119.217"": 18,
    ""2.57.149.92"": 3,
    ""185.196.220.41"": 9,
    ""193.142.146.227"": 9,
    ""81.19.135.2"": 9,
    ""152.32.245.196"": 3,
    ""14.225.9.184"": 57,
    ""205.210.31.168"": 9,
    ""144.217.24.29"": 3,
    ""45.227.254.8"": 6,
    ""206.168.34.49"": 3,
    ""87.251.75.64"": 3,
    ""45.227.254.119"": 6,
    ""113.160.91.206"": 3,
    ""205.210.31.206"": 9,
    ""144.16.111.79"": 3,
    ""112.4.139.162"": 3,
    ""128.1.43.27"": 528
  },
  ""asn"": {
    ""AS14061"": 4303,
    ""AS4134"": 9,
    ""AS208312"": 30,
    ""AS59425"": 18,
    ""AS204428"": 9,
    ""AS396982"": 36,
    ""AS48721"": 12,
    ""AS398722"": 3,
    ""AS7552"": 9,
    ""AS208091"": 12,
    ""AS201814"": 6,
    ""AS7713"": 3,
    ""AS140810"": 12,
    ""AS24691"": 6,
    ""AS197414"": 6,
    ""AS398324"": 6,
    ""AS24757"": 3,
    ""AS38365"": 18,
    ""AS208046"": 18,
    ""AS209588"": 9,
    ""AS135377"": 531,
    ""AS135905"": 57,
    ""AS16276"": 3,
    ""AS267784"": 12,
    ""AS45899"": 3,
    ""AS2697"": 3,
    ""AS56046"": 3
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 4303,
    ""Chinanet"": 9,
    ""Red Byte LLC"": 30,
    ""Horizon LLC"": 18,
    ""SS-Net"": 9,
    ""Google LLC"": 36,
    ""Flyservers S.A."": 33,
    ""Censys, Inc."": 6,
    ""Viettel Corporation"": 9,
    ""Xhost Internet Solutions LP"": 18,
    ""MEVSPACE sp. z o.o."": 6,
    ""PT. TELKOM INDONESIA"": 3,
    ""MEGACORE"": 12,
    ""TogoTelecom"": 6,
    ""Ethiotelecom"": 3,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 18,
    ""ColocationX Ltd."": 18,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Vietnam Posts and Telecommunications Group"": 57,
    ""OVH Hosting"": 3,
    ""Censys"": 3,
    ""VietNam Post and Telecom Corporation"": 3,
    ""ERNET India"": 3,
    ""China Mobile Communications Corporation"": 3,
    ""Zenlayer Inc"": 528
  },
  ""org"": {
    ""DigitalOcean, LLC"": 4303,
    ""Chinanet JS"": 9,
    ""Chang Way Technologies Co. Limited"": 30,
    ""Horizon LLC"": 18,
    ""4Media Ltd"": 9,
    ""Palo Alto Networks, Inc"": 36,
    ""Flyservers S.A"": 12,
    ""Censys, Inc."": 6,
    ""Unknown"": 21,
    ""Xhost Internet Solutions"": 12,
    ""MEVSPACE sp. z o.o"": 6,
    ""Megacore Technology Company Limited"": 12,
    ""Xhostis"": 6,
    ""Censys, Inc"": 3,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 18,
    ""Makut Investments"": 9,
    ""ColocationX Ltd"": 9,
    ""Alviva Holding Limited"": 9,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""VNPT"": 57,
    ""SAS, ONYPHE"": 3,
    ""UAB Host Baltic"": 12,
    ""Vietnam Posts and Telecommunications Group"": 3,
    ""ERNET India"": 3,
    ""China Mobile Communications Corporation"": 3,
    ""UCLOUD"": 528
  },
  ""regionName"": {
    ""South West"": 4294,
    ""Jiangsu"": 12,
    ""Lesser Poland"": 30,
    ""Moscow"": 546,
    ""Sliven"": 9,
    ""California"": 36,
    ""Kaunas"": 12,
    ""Central and Western District"": 3,
    ""L\u00e2m \u0110\u1ed3ng Province"": 9,
    ""North Holland"": 27,
    ""Mazovia"": 6,
    ""East Kalimantan"": 3,
    ""Hanoi"": 72,
    ""Maritime"": 6,
    ""Hesse"": 18,
    ""Michigan"": 6,
    ""Addis Ababa"": 3,
    ""Beijing"": 18,
    ""Virginia"": 9,
    ""Bangkok"": 3,
    ""Quebec"": 3,
    ""Vilnius"": 12,
    ""National Capital Territory of Delhi"": 3
  },
  ""country"": {
    ""Singapore"": 4294,
    ""China"": 30,
    ""Poland"": 36,
    ""Russia"": 546,
    ""Bulgaria"": 9,
    ""United States"": 51,
    ""Lithuania"": 24,
    ""Hong Kong"": 3,
    ""Vietnam"": 81,
    ""The Netherlands"": 27,
    ""Indonesia"": 3,
    ""Togo"": 6,
    ""Germany"": 18,
    ""Ethiopia"": 3,
    ""Thailand"": 3,
    ""Canada"": 3,
    ""India"": 3
  },
  ""account"": {
    ""hello"": 4426,
    ""Administr"": 48,
    ""Test"": 42,
    ""qhyMCZkNs"": 3,
    ""ocdcRH"": 3,
    ""WCcilM"": 3,
    ""(empty)"": 15,
    ""SfEnehAbI"": 3,
    ""urkbgD"": 3,
    ""AxwAdG"": 3,
    ""Domain"": 39,
    ""Administrator"": 6,
    ""hEZBygWNm"": 3,
    ""yMCqXY"": 3,
    ""UlkBmK"": 3,
    ""rhqokGzIW"": 3,
    ""MVLJLM"": 3,
    ""mLZXbr"": 3,
    ""1948287240"": 528
  },
  ""keyboard"": {
    ""Unknown"": 5140
  },
  ""client_build"": {
    ""Unknown"": 5140
  },
  ""client_name"": {
    ""Unknown"": 5140
  },
  ""ip_type"": {
    ""hosting & proxy"": 4294,
    ""Unknown"": 237,
    ""hosting"": 597,
    ""mobile"": 12
  }
}"
TTq0ZEpE,💲 G2A.com Free Gift Card Guide Mar 2024 💲,ssss50w,GetText,Saturday 30th of March 2024 06:36:51 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
31 March 2024
 "
hp9TCAXZ,Untitled,RenSafaray,Java,Saturday 30th of March 2024 05:26:43 PM CDT,"import java.util.ArrayList; // Импортируем класс ArrayList для создания списков
import java.util.HashMap; // Импортируем класс HashMap для создания хэш-таблиц
import java.util.List; // Импортируем интерфейс List для работы со списками
import java.util.Map; // Импортируем интерфейс Map для работы с хэш-таблицами
import java.util.Scanner; // Импортируем класс Scanner для чтения данных с клавиатуры

public class lab3 { // Объявляем класс lab3

    static class Article { // Объявляем статический класс Article (Статья)
        private String title; // Объявляем приватное поле title (Заголовок) типа String
        private String description; // Объявляем приватное поле description (Описание) типа String
        private double fine; // Объявляем приватное поле fine (Штраф) типа double

        public Article(String title, String description, double fine) { // Объявляем конструктор для класса Article
            this.title = title; // Инициализируем поле title
            this.description = description; // Инициализируем поле description
            this.fine = fine; // Инициализируем поле fine
        }

        public String getTitle() { // Объявляем метод getTitle для получения значения поля title
            return title; // Возвращаем значение поля title
        }

        public String getDescription() { // Объявляем метод getDescription для получения значения поля description
            return description; // Возвращаем значение поля description
        }

        public double getFine() { // Объявляем метод getFine для получения значения поля fine
            return fine; // Возвращаем значение поля fine
        }
    }

    static class Violation { // Объявляем статический класс Violation (Нарушение)
        private String fullName; // Объявляем приватное поле fullName (ФИО) типа String
        private String carBrand; // Объявляем приватное поле carBrand (Марка машины) типа String
        private String licensePlate; // Объявляем приватное поле licensePlate (Номерные знаки) типа String
        private String violation; // Объявляем приватное поле violation (Нарушение) типа String
        private double fine; // Объявляем приватное поле fine (Штраф) типа double

        public Violation(String fullName, String carBrand, String licensePlate, String violation, double fine) { // Объявляем конструктор для класса Violation
            this.fullName = fullName; // Инициализируем поле fullName
            this.carBrand = carBrand; // Инициализируем поле carBrand
            this.licensePlate = licensePlate; // Инициализируем поле licensePlate
            this.violation = violation; // Инициализируем поле violation
            this.fine = fine; // Инициализируем поле fine
        }

        public String getFullName() { // Объявляем метод getFullName для получения значения поля fullName
            return fullName; // Возвращаем значение поля fullName
        }

        public String getCarBrand() { // Объявляем метод getCarBrand для получения значения поля carBrand
            return carBrand; // Возвращаем значение поля carBrand
        }

        public String getLicensePlate() { // Объявляем метод getLicensePlate для получения значения поля licensePlate
            return licensePlate; // Возвращаем значение поля licensePlate
        }

        public String getViolation() { // Объявляем метод getViolation для получения значения поля violation
            return violation; // Возвращаем значение поля violation
        }

        public double getFine() { // Объявляем метод getFine для получения значения поля fine
            return fine; // Возвращаем значение поля fine
        }
    }

    static class DriverViolations { // Объявляем статический класс DriverViolations (Нарушения водителя)
        private Map<String, List<Violation>> violations; // Объявляем приватное поле violations (Нарушения) типа Map<String, List<Violation>>

        public DriverViolations() { // Объявляем конструктор для класса DriverViolations
            violations = new HashMap<>(); // Инициализируем поле violations
        }

        public void addViolation(Violation violation) { // Объявляем метод addViolation для добавления нарушения
            String fullName = violation.getFullName(); // Получаем ФИО водителя из объекта Violation
            if (!violations.containsKey(fullName)) { // Проверяем, есть ли уже в списке нарушений водитель с таким ФИО
                violations.put(fullName, new ArrayList<>()); // Если нет, то добавляем нового водителя в список
            }
            violations.get(fullName).add(violation); // Добавляем нарушение в список нарушений водителя
        }

        public List<Violation> getViolationsByFullName(String fullName) { // Объявляем метод getViolationsByFullName для получения списка нарушений водителя по его ФИО
            return violations.getOrDefault(fullName, new ArrayList<>()); // Возвращаем список нарушений водителя или пустой список, если нарушений нет
        }
    }

    public static void main(String[] args) { // Объявляем главный метод main
        Scanner scanner = new Scanner(System.in); // Создаем объект Scanner для чтения данных с клавиатуры
        HashMap<String, Article> articles = new HashMap<>(); // Создаем хэш-таблицу articles для хранения статей
        articles.put(""Парковка на тротуаре"", new Article(""Парковка на тротуаре"", ""Штраф за парковку на тротуаре составляет 500 рублей"", 500)); // Добавляем статью ""Парковка на тротуаре"" в хэш-таблицу articles
        articles.put(""Превышение скорости"", new Article(""Превышение скорости"", ""Штраф за превышение скорости зависит от величины превышения и может достигать 5000 рублей"", 5000)); // Добавляем статью ""Превышение скорости"" в хэш-таблицу articles

        DriverViolations driverViolations = new DriverViolations(); // Создаем объект DriverViolations для хранения нарушений водителей

        boolean exit = false; // Объявляем переменную exit типа boolean для выхода из цикла
        while (!exit) { // Запускаем цикл while, пока exit равно false
            System.out.println(""\n1. Добавить правонарушителя""); // Выводим меню на экран
            System.out.println(""2. Правонарушения"");
            System.out.println(""3. Проверить правонарушения водителя"");
            System.out.println(""0. Выход"");
            System.out.println(""Ваш выбор: "");
            String operation = scanner.nextLine(); // Считываем выбор пользователя с клавиатуры

            switch (operation) { // Запускаем оператор switch для выбора действия в зависимости от выбора пользователя
                case ""1"": // Если пользователь выбрал ""1""
                    System.out.print(""Введите ФИО: "");
                    String fullName = scanner.nextLine(); // Считываем ФИО водителя с клавиатуры
                    System.out.print(""Введите марку машины: "");
                    String carBrand = scanner.nextLine(); // Считываем марку машины с клавиатуры
                    System.out.print(""Введите номерные знаки: "");
                    String licensePlate = scanner.nextLine(); // Считываем номерные знаки машины с клавиатуры
                    System.out.print(""Введите название правонарушения: "");
                    String violation = scanner.nextLine(); // Считываем название правонарушения с клавиатуры
                    System.out.print(""Введите сумму штрафа: "");
                    double fine = scanner.nextDouble(); // Считываем сумму штрафа с клавиатуры
                    scanner.nextLine(); // Считываем символ перевода строки
                    Article article = articles.getOrDefault(violation, new Article(violation, """", fine)); // Получаем статью из хэш-таблицы articles или создаем новую статью, если ее нет в таблице
                    Violation violationObj = new Violation(fullName, carBrand, licensePlate, violation, fine); // Создаем объект Violation с данными о нарушении
                    driverViolations.addViolation(violationObj); // Добавляем нарушение в список нарушений водителя
                    articles.putIfAbsent(violation, article); // Добавляем статью в хэш-таблицу articles, если ее еще нет там
                    System.out.println(""Правонарушение добавлено: "");
                    System.out.println(""ФИО: "" + violationObj.getFullName());
                    System.out.println(""Марка машины: "" + violationObj.getCarBrand());
                    System.out.println(""Номерные знаки: "" + violationObj.getLicensePlate());
                    System.out.println(""Правонарушение: "" + violationObj.getViolation());
                    System.out.println(""Штраф: "" + violationObj.getFine());
                    System.out.println(""Описание: "" + article.getDescription());
                    break;
                case ""2"": // Если пользователь выбрал ""2""
                    System.out.println(""Список правонарушений:"");
                    for (Map.Entry<String, Article> entry : articles.entrySet()) { // Перебираем все элементы хэш-таблицы articles
                        System.out.println(entry.getKey() + "": "" + entry.getValue().getDescription()); // Выводим название и описание каждой статьи
                    }
                    break;
                case ""3"": // Если пользователь выбрал ""3""
                    System.out.print(""Введите ФИО водителя: "");
                    String driverFullName = scanner.nextLine(); // Считываем ФИО водителя с клавиатуры
                    List<Violation> driverViolationsList = driverViolations.getViolationsByFullName(driverFullName); // Получаем список нарушений водителя по его ФИО
                    if (driverViolationsList.isEmpty()) { // Проверяем, пустой ли список нарушений
                        System.out.println(""У водителя нет правонарушений."");
                    } else {
                        System.out.println(""Список правонарушений водителя:"");
                        for (Violation violation1 : driverViolationsList) { // Перебираем все нарушения водителя
                            System.out.println(""Марка машины: "" + violation1.getCarBrand());
                            System.out.println(""Номерные знаки: "" + violation1.getLicensePlate());
                            System.out.println(""Правонарушение: "" + violation1.getViolation());
                            System.out.println(""Штраф: "" + violation1.getFine());
                            System.out.println(""------------------------"");
                        }
                    }
                    break;
                case ""0"": // Если пользователь выбрал ""0""
                    exit = true; // Устанавливаем значение переменной exit в true для выхода из цикла
                    break;
                default: // Если пользователь ввел неверное значение
                    System.out.println(""Неверный выбор. Пожалуйста, выберите снова."");
            }
        }
    }
}"
0Ui23PFH,Untitled,Moolah60,JSON,Saturday 30th of March 2024 05:09:36 PM CDT,"[
  4509501,
  7723665,
  33366123,
  17353148,
  14489786,
  14651325,
  10819476,
  13193505,
  13965600,
  33798390,
  10051029,
  33653472,
  11624425,
  15700448,
  6318932,
  5914632,
  16060146,
  33154222,
  32604690,
  9300900,
  12889206,
  33732815,
  33016460,
  32013821,
  6490315,
  33073580,
  2638421,
  11850535,
  33686754,
  16033044,
  3586493,
  33207666,
  33439413,
  5934331,
  33357547,
  11230068,
  9874860,
  16511472,
  14152505,
  13471319,
  33731427,
  2957933,
  32613468,
  33765401,
  10906247,
  9354508,
  33874487,
  13757859,
  6571810,
  6394573,
  6799749,
  15830469,
  17131395,
  33787132,
  32662742,
  6319686,
  33465803,
  16860350,
  33259089,
  11228344,
  14496034,
  17316383,
  33011545,
  14716519,
  15761985,
  6625692,
  13600566,
  17143628,
  14338021,
  12718163,
  15078607,
  5249413,
  15267450,
  33583359,
  15198455,
  32326761,
  4688859,
  32555681,
  15467460,
  15473257,
  14178942,
  12787451,
  16516552,
  32346926,
  13805677,
  32674827,
  33402968,
  11421939,
  16040382,
  13332729,
  12233977,
  13406756,
  32457745,
  9748251,
  6538349,
  33510448,
  16469066,
  9075857,
  16435820,
  13672968,
  12428983,
  15858229,
  12290925,
  33777444,
  9068571,
  4920061,
  10581509,
  16402879,
  33895505,
  33773758,
  5503006,
  14574242,
  16999757,
  32993268,
  11508298,
  11219056,
  32966777,
  10009169,
  16749439,
  8107166,
  32896853,
  33077349,
  17260168,
  10823089,
  33312888,
  6154628,
  33007967,
  7813166,
  13774881,
  32796226,
  17133315,
  33722078,
  5323387,
  2906970,
  33525074,
  11839641,
  15420036,
  12639493,
  9466817,
  14464414,
  13467389,
  32553180,
  11720790,
  32735240,
  33870456,
  33750783,
  33548519,
  32772928,
  13743051,
  13222458,
  16275441,
  33776581,
  15297912,
  9472843,
  8456041,
  17355382,
  8299520,
  34020672,
  11490264,
  32461782,
  16304908,
  15192790,
  33131194,
  9155601,
  16492724,
  15203030,
  15259630,
  32952773,
  8172803,
  15928709,
  16281895,
  13868982,
  17286171,
  9573598,
  32976718,
  33676138,
  9275473,
  16415140,
  8994381,
  32683443,
  32741858,
  33141793,
  32324215,
  11751295,
  33878102,
  6666526,
  8295360,
  33775733,
  5157826,
  33824379,
  33467400,
  11306609,
  17082675,
  16806763,
  33656620,
  14050328,
  14156653,
  16560204,
  32846007,
  14767631,
  33238318,
  17289731,
  10430757,
  14240932,
  32538645,
  33368062,
  12457806,
  32542108,
  12682001,
  11315399,
  16959922,
  14699674,
  16667785,
  15504835,
  14621082,
  9065501,
  6516913,
  33819020,
  33169815,
  14344605,
  33717191,
  17409413,
  10501344,
  33764032,
  11367112,
  33704153,
  13095012,
  6413830,
  12299376,
  16386698,
  33249977,
  9316017,
  4309942,
  11133165,
  11229354,
  32605391,
  33385811,
  16875437,
  11840802,
  16442364,
  16860749,
  7619971,
  14216267,
  16332989,
  10550223,
  15612911,
  11288692,
  11606797,
  4765039,
  16358317,
  8226917,
  5636073,
  32435711,
  32811037,
  15526051,
  32886114,
  33640350,
  7064985,
  33638708,
  6485540,
  11422140,
  32997763,
  32731217,
  14488144,
  32915558,
  9239390,
  33088845,
  13051691,
  13142711,
  10236333,
  17053581,
  552087,
  9209286,
  32453412,
  16943339,
  10758509,
  32366020,
  32440712,
  7435589,
  33399497,
  32471166,
  6645839,
  15931776,
  33022021,
  32652688,
  16608404,
  7084049,
  33489792,
  33745166,
  10849258,
  15108399,
  32535883,
  6971022,
  7201482,
  33344990,
  5102717,
  6148897,
  32416628,
  9099970,
  14800180,
  16447057,
  33009759,
  8783296,
  33464480,
  11219410,
  14205137,
  15166788,
  15722845,
  15692930,
  32914950,
  4976946,
  13167819,
  33837265,
  33684142,
  13206727,
  8475630,
  7378428,
  10897900,
  32612016,
  33734142,
  10699196,
  32628226,
  32359262,
  16932189,
  8787109,
  14127421,
  15333200,
  33003063,
  14910435,
  33339812,
  33691907,
  5546732,
  6459877,
  13810468,
  13262908,
  11121152,
  16435123,
  4766644,
  10931034,
  33517844,
  15662011,
  12254090,
  32471428,
  14131036,
  33729700,
  32991252,
  7667476,
  15149364,
  32671151,
  32808758,
  15844936,
  9499729,
  4812854,
  11490375,
  33394341,
  3572251,
  10846546,
  16414116,
  15930879,
  3324500,
  17351882,
  13043112,
  15869028,
  32453419,
  32480538,
  15278142,
  3769505,
  32917372,
  14852641,
  15716214,
  10927183,
  32348792,
  14797223,
  33580297,
  4322431,
  32044435,
  329316,
  15166629,
  16220241,
  6389664,
  33623201,
  32677564,
  14562935,
  6625821,
  13303019,
  16590070,
  33483064,
  33764041,
  17120912,
  33621808,
  12718029,
  33290370,
  11454686,
  10729907,
  17102803,
  11405146,
  7785101,
  10796844,
  16961335,
  15778811,
  14427969,
  32813594,
  12000582,
  33384051,
  15132922,
  8974572,
  12399147,
  4331645,
  6614821,
  11096629,
  10341223,
  16268671,
  10145818,
  33652671,
  33191985,
  9285001,
  8217973,
  33844851,
  15936730,
  33890549,
  11098326,
  32485950,
  15360007,
  14761987,
  9182203,
  33440432,
  8086321,
  6488827,
  16050626,
  15031778,
  33537234,
  12241352,
  16580245,
  32824078,
  33347011,
  13126568,
  16381731,
  33696343,
  33462136,
  33521470,
  32492725,
  15225622,
  7493010,
  17144169,
  33699973,
  9002178,
  10932086,
  17292431,
  10455128,
  33337020,
  13169626,
  5556913,
  15297521,
  10725634,
  16656224,
  33676804,
  33236941,
  17351077,
  13345116,
  33753223,
  12619199,
  8910183,
  16701316,
  32761837,
  33546055,
  9838682,
  5703319,
  33067542,
  5034208,
  14390281,
  32479622,
  12775255,
  32690069,
  8101676,
  9278389,
  16401584,
  11538418,
  17088966,
  32486233,
  33742918,
  32990580,
  4733809,
  8172722,
  33546743,
  15485906,
  16586199,
  6103086,
  33126348,
  32599699,
  6143217,
  33340088,
  17332829,
  33380254,
  33800109,
  9702104,
  8190388,
  5492009,
  32792727,
  32427906,
  15831716,
  7408684,
  10251337,
  33473534,
  16840158,
  6023256,
  8046205,
  33523103,
  33182174,
  13952186,
  32510953,
  9985665,
  9973784,
  33046128,
  11985329,
  11270361,
  6068358,
  3149254,
  32872847,
  33788764,
  17055379,
  5833475,
  32830051,
  33605294,
  32961632,
  16441424,
  11129864,
  17264240,
  33318291,
  32710617,
  32634865,
  32326065,
  33883650,
  16440326,
  33033661,
  32984344,
  33417220,
  33744922,
  33751789,
  32796187,
  10584742,
  17326179,
  32501183,
  33083919,
  14812542,
  14732139,
  16700733,
  16901667,
  32734952,
  32791674,
  7699249,
  8668427,
  14842403,
  33002230,
  5872960,
  16372911,
  12149185,
  7687354,
  14099318,
  33095017,
  17263763,
  8574429,
  15015435,
  12380315,
  15302746,
  33259857,
  9894797,
  11204764,
  15824256,
  7720780,
  6542279,
  32759560,
  32822320,
  9644159,
  33441684,
  8674362,
  16710429,
  11517289,
  17262224,
  5915557,
  32662175,
  9127655,
  16570445,
  11445532,
  8668635,
  33279429,
  212218,
  15318406,
  32625043,
  32522138,
  15926711,
  12419283,
  5993870,
  13261737,
  4864662,
  14396251,
  11779594,
  14162671,
  33766796,
  33022768,
  11907843,
  33825725,
  32734669,
  8912888,
  15832466,
  34081986,
  13454174,
  33782086,
  3650448,
  11729927,
  32395525,
  32902477,
  33386145,
  17227707,
  15040063,
  9628075,
  33796436,
  32577872,
  9377907,
  33507720,
  33419563,
  17247048,
  13091855,
  12351979,
  32687656,
  32970034,
  4989074,
  32633857,
  33732086,
  33640688,
  4488580,
  16438321,
  15726106,
  12954330,
  15754145,
  33128605,
  33697697,
  6452782,
  33388263,
  33031188,
  33651870,
  10744172,
  15306221,
  32398880,
  33478076,
  10129179,
  16581742,
  13584653,
  33028897,
  16402411,
  11164627,
  5865439,
  10045076,
  6031944,
  32596450,
  33553066,
  33656518,
  8526430,
  7908626,
  9620466,
  33169711,
  17112898,
  14593295,
  12239571,
  5217294,
  6317962,
  12263920,
  33658669,
  16963735,
  8006459,
  33364738,
  33022665,
  33816689,
  17013945,
  14472201,
  32703731,
  33774912,
  9497826,
  13625338,
  16756710,
  4810063,
  33734455,
  33275266,
  11417443,
  33173499,
  12912311,
  33375522,
  9917562,
  32442170,
  32312075,
  8607851,
  33106244,
  33198593,
  10102596,
  32741705,
  33165249,
  33942845,
  12680644,
  13972730,
  15252327,
  16340254,
  9039691,
  12242933,
  8223854,
  33726106,
  32734322,
  33735053,
  32760272,
  15849360,
  15761629,
  16689384,
  13161408,
  32408549,
  7102024,
  15508313,
  11589844,
  33402828,
  8661587,
  33849272,
  10841476,
  10174286,
  15653948,
  33211500,
  17394037,
  15226559,
  33592019,
  16392820,
  14290586,
  12799853,
  16612074,
  13075729,
  15422300,
  33785658,
  33270187,
  33435312,
  16287904,
  10449972,
  14541074,
  33934937,
  32911200,
  16800929,
  5277661,
  33477146,
  5813797,
  10070749,
  33196460,
  13183633,
  33219017,
  32464449,
  10352376,
  9133141,
  33371203,
  10247866,
  15332523,
  7956046,
  33483614,
  5088421,
  10963689,
  8852249,
  5273886,
  32042256,
  33356925,
  33271391,
  17209817,
  32559793,
  15616576,
  13837776,
  33526470,
  10568683,
  16900324,
  7757626,
  32714542,
  9607456,
  16182289,
  17336344,
  14426432,
  12311312,
  33023858,
  33311559,
  15348547,
  15654616,
  15894194,
  16427230,
  33961498,
  33668326,
  16712962,
  33375407,
  13868201,
  33251205,
  32710608,
  17241262,
  12623499,
  9070996,
  33101332,
  33397134,
  7556015,
  7171156,
  33830193,
  15765896,
  16717835,
  5329913,
  3500813,
  10310502,
  33453581,
  11059502,
  10741720,
  5765897,
  17344736,
  15388763,
  11974154,
  11981107,
  13692599,
  33095412,
  32888187,
  32371498,
  32368438,
  33456745,
  33216891,
  10950369,
  9085892,
  11821133,
  11078445,
  33196397,
  8792422,
  17406675,
  33720129,
  9076112,
  16348483,
  8442510,
  33862135,
  14610197,
  9024640,
  16058844,
  32695574,
  13009024,
  15340164,
  12119358,
  33387780,
  32864546,
  15929107,
  33376247,
  2731256,
  8755852,
  16063185,
  15296168,
  33363897,
  16874179,
  14614480,
  32893144,
  10894325,
  17111676,
  33403798,
  16814260,
  33098261,
  11944585,
  32776307,
  13992044,
  12253998,
  33238625,
  6791461,
  33333396,
  9041119,
  32552739,
  8419478,
  33582341,
  33657171,
  32777554,
  7702820,
  8549414,
  32948298,
  3194286,
  32926956,
  6049215,
  4845885,
  17077294,
  16374753,
  32870726,
  17386341,
  16581283,
  8740787,
  14881280,
  32563236,
  16436450,
  9489570,
  32796391,
  5686178,
  15836525,
  13848407,
  16418298,
  5613434,
  16017775,
  33620790,
  5767582,
  33501522,
  11238319,
  33186804,
  12910458,
  10949109,
  16874523,
  16096829,
  13452036,
  33654691,
  13869815,
  15417925,
  11750424,
  33490485,
  16564483,
  33036366,
  13571855,
  8149142,
  9280787,
  2635146,
  5423611,
  33548204,
  33088990,
  33426922,
  16451662,
  15994597,
  7225620,
  12453472,
  4988068,
  14393712,
  6054421,
  32495275,
  14076412,
  7625531,
  9323324,
  16210279,
  16544970,
  9540452,
  33763727,
  17250992,
  8907737,
  11820614,
  10463165,
  33363097,
  9020362,
  16690541,
  32617990,
  32554451,
  6719720,
  17044206,
  9001144,
  14162247,
  32730728,
  8231463,
  15921900,
  7885782,
  12800732,
  17239528,
  15272044,
  12334878,
  9472388,
  15093456,
  33349138,
  13308476,
  33193011,
  11994883,
  16164276,
  11948629,
  13603947,
  33413953,
  9162064,
  33407310,
  14219498,
  11382534,
  14180537,
  10030562,
  11557382,
  33073902,
  33253736,
  7488544,
  32666212,
  32996666,
  33607436,
  32931014,
  9013430,
  33567386,
  9882595,
  12381648,
  9599024,
  33853171,
  15443244,
  16662865,
  10338730,
  32405777,
  9529731,
  33485374,
  14777233,
  32839442,
  17382941,
  16106093,
  33654978,
  33820737,
  14451079,
  32637588,
  16705639,
  5682818,
  14579827,
  8049466,
  15082452,
  11288434,
  14129664,
  13603899,
  16857906,
  33741915,
  32684656,
  9636991,
  32677912,
  7036456,
  11250802,
  9009375,
  12386196,
  16613134,
  33455812,
  33940402,
  6327187,
  33772711,
  5270376,
  14057352,
  7548568,
  13372021,
  14332095,
  33547971,
  10713530,
  16508413,
  7370938,
  9093905,
  13175067,
  5883476,
  32384043,
  32971713,
  13245591,
  15800561,
  7871142,
  11712527,
  14232778,
  32454685,
  33468731,
  10882755,
  7443785,
  7672049,
  7330634,
  14735271,
  15000589,
  32919180,
  33335732,
  32782646,
  6812164,
  16175489,
  11062394,
  33371230,
  15311520,
  32883087,
  16389306,
  14681145,
  12416905,
  33198074,
  16007521,
  32862815,
  15645550,
  12614759,
  5148867,
  13041232,
  16309651,
  33391449,
  9035539,
  15276224,
  9174831,
  14815979,
  33360764,
  6083158,
  32684887,
  33089312,
  14367263,
  33410435,
  15450933,
  33172755,
  33397694,
  4348027,
  33182753,
  10452185,
  14771857,
  12586997,
  15963427,
  33435847,
  32670583,
  33819253,
  4920785,
  33939064,
  6683704,
  15198843,
  11674058,
  13104235,
  9009658,
  33190528,
  32952854,
  3831805,
  12484367,
  32005503,
  33079073,
  921756,
  13097611,
  14141072,
  9460306,
  15444985,
  11185539,
  6929214,
  12067180,
  8556418,
  15778363,
  15327283,
  15278176,
  13000527,
  12045393,
  17041921,
  6884890,
  33363959,
  12827589,
  8236491,
  3848553,
  14969365,
  17289997,
  32625636,
  32488877,
  33342655,
  33634666,
  10819070,
  13187821,
  13467571,
  6493778,
  32815907,
  8223454,
  16302880,
  16597711,
  32859937,
  33445074,
  6491912,
  4902136,
  15758085,
  33825560,
  7495597,
  6885062,
  10454781,
  7115704,
  14591596,
  32052635,
  10189853,
  33479505,
  33998568,
  13994830,
  6229979,
  32745781,
  33514978,
  11283544,
  14625067,
  9844020,
  32828671,
  17321138,
  14409720,
  14608310,
  33881681,
  4685719,
  15588483,
  33563356,
  9589214,
  33820165,
  33701024,
  7031193,
  13570343,
  33488662,
  32730441,
  15437706,
  15823035,
  13808157,
  15532239,
  8412276,
  12425320,
  12429481,
  5566227,
  32372857,
  10634777,
  11713479,
  33780818,
  11724879,
  9645932,
  9058732,
  5363832,
  8294245,
  32398602,
  15197578,
  13067945,
  32543572,
  32078211,
  17280840,
  14105505,
  33104458,
  1119379,
  13353865,
  13589164,
  6090430,
  32686221,
  16738353,
  14234553,
  10571200,
  33220581,
  32462598,
  11935131,
  33751090,
  14218867,
  32767640,
  33907888,
  10119590,
  3136620,
  8521981,
  8632762,
  17390625,
  14997427,
  32936244,
  6513088,
  14616828,
  11937105,
  16985581,
  5998337,
  33311578,
  12975862,
  9537974,
  6936547,
  14796410,
  33450586,
  15552432,
  33328859,
  32901806,
  32740239,
  17036027,
  32428061,
  14229697,
  17188228,
  33692521,
  10318915,
  3269552,
  14688481,
  33865709,
  15904046,
  16929536,
  32579951,
  33722087,
  7084148,
  14290933,
  17315812,
  17277629,
  33730826,
  32810046,
  32536901,
  4418553,
  16432722,
  32752693,
  13850932,
  9527112,
  10355952,
  34036240,
  32458482,
  11066167,
  32801975,
  32519585,
  33768993,
  10172766,
  4950863,
  32461924,
  13681674,
  5047795,
  14743356,
  33829688,
  6448874,
  33711192,
  33063380,
  9343632,
  12427881,
  33034350,
  2853350,
  33111123,
  32448759,
  8598018,
  16142164,
  2997791,
  9157211,
  32598730,
  9789977,
  13800941,
  33059119,
  32752505,
  33064066,
  10481554,
  33823901,
  15225522,
  11817328,
  32726530,
  33367031,
  32970133,
  33486382,
  32931586,
  13812081,
  11423700,
  33044250,
  33065365,
  13413320,
  9744604,
  1079524,
  15392605,
  14316068,
  32715738,
  33802222,
  33769341,
  32849883,
  5637085,
  13532195,
  15828110,
  8677832,
  15092120,
  33827508,
  15236875,
  33498779,
  32413424,
  32891195,
  15442562,
  10646353,
  32848691,
  17170780,
  16931915,
  11502408,
  13162082,
  8617012,
  33535155,
  32542562,
  13846473,
  33239216,
  13383936,
  6425912,
  16568204,
  10920061,
  33355414,
  13271928,
  33496460,
  32911492,
  33714739,
  33547565,
  33723383,
  33238786,
  33500618,
  8622286,
  13841963,
  33551400,
  33864273,
  8098976,
  13802656,
  17404648,
  10271625,
  8966841,
  32752276,
  13970810,
  8289961,
  14686906,
  13933854,
  8638570,
  13328643,
  15878778,
  33550702,
  33791946,
  32456857,
  16759602,
  33179489,
  32026800,
  9865732,
  32930356,
  13247684,
  33318865,
  33102505,
  32505276,
  13443769,
  14630266,
  32812588,
  7323668,
  768265,
  33653100,
  17308503,
  33827828,
  33198787,
  32521679,
  32318151,
  32692881,
  33683634,
  33727617,
  5403322,
  8724716,
  13754364,
  32461013,
  7385371,
  5217264,
  7401131,
  9483159,
  13568366,
  33028590,
  8970048,
  33782921,
  15585522,
  7957879,
  33492533,
  13441348,
  15277532,
  8035530,
  14120260,
  33179293,
  9244668,
  12976711,
  14015969,
  2819096,
  33863939,
  11418361,
  33782412,
  32780889,
  32699411,
  32924612,
  13790743,
  11082678,
  32790917,
  9481530,
  14055386,
  33587184,
  13851707,
  33520495,
  32772056,
  12675765,
  9333752,
  12242835,
  6122187,
  15418689,
  16898541,
  14072168,
  12126853,
  11225860,
  15712799,
  33331704,
  2979442,
  10951664
]"
r7h38PNy,Untitled,Madi_Perth,Linden Scripting,Saturday 30th of March 2024 04:58:32 PM CDT,"    dataserver( key queryid, string data )
    {
        if(queryid == read_key)
        {
            integer count = (integer) data;
            integer index;

            for(index = 0; index < (count+1); ++index)
            {
                string line = llGetNotecardLineSync(""!Playlists"", index);
                if(line == NAK)
                {
                    DS(""NAK"");
                }
                else if(line == EOF)
                {
                    DS(""Notecard Loaded in "" + getTime((integer) llGetTime()));

                    state running;
                }
                else 
                {
                    DS((string) index +"" "" + line);
                    llSetText((string) index+""/""+(string) count, RED, TRUE);
                }
            }
        }"
XKXNiwaQ,Untitled,RenSafaray,Java,Saturday 30th of March 2024 04:53:46 PM CDT,"// Эта программа позволяет пользователю рассчитать кредит, посмотреть кредитные ставки и проверить, будет ли одобрен кредит

// Импортируем необходимые классы для работы с вводом данных и хранением данных в виде пар ""ключ-значение""
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

// Определяем класс Credit для хранения информации о кредите
public class lab2_21 {
    static class Credit {
        // Объявляем переменные для хранения суммы, срока и процентной ставки кредита
        private double amount;
        private int term;
        private double rate;

        // Определяем конструктор для создания объекта класса Credit с заданными параметрами
        public Credit(double amount, int term, double rate) {
            this.amount = amount;
            this.term = term;
            this.rate = rate;
        }

        // Определяем метод для расчета ежемесячного платежа по кредиту
        public double getMonthlyPayment() {
            // Вычисляем месячную процентную ставку и коэффициент аннуитетного платежа
            double monthlyRate = rate / 100 / 12;
            double coefficient = (monthlyRate * Math.pow(1 + monthlyRate, term)) / (Math.pow(1 + monthlyRate, term) - 1);
            // Возвращаем произведение суммы кредита на коэффициент аннуитетного платежа
            return amount * coefficient;
        }

        // Определяем метод для расчета общей суммы выплат по кредиту
        public double getTotalAmount() {
            // Возвращаем произведение ежемесячного платежа на срок кредита
            return getMonthlyPayment() * term;
        }

        // Определяем метод для расчета переплаты по кредиту
        public double getOverpayment() {
            // Возвращаем разность между общей суммой выплат и суммой кредита
            return getTotalAmount() - amount;
        }
    }

    // Определяем класс CreditRate для хранения информации о кредитной ставке
    static class CreditRate {
        // Объявляем переменные для хранения суммы, процентной ставки и срока кредитной ставки
        private double amount;
        private double rate;
        private int months;

        // Определяем конструктор для создания объекта класса CreditRate с заданными параметрами
        public CreditRate(double amount, double rate, int months) {
            this.amount = amount;
            this.rate = rate;
            this.months = months;
        }

        // Определяем методы для получения значений переменных класса CreditRate
        public double getAmount() {
            return amount;
        }

        public double getRate() {
            return rate;
        }

        public int getMonths() {
            return months;
        }
    }

    // Определяем класс CreditCheck для проверки одобрения кредита
    static class CreditCheck {
        // Объявляем переменные для хранения дохода, выплат по другим кредитам и максимального процента от дохода, который готов тратить пользователь
        private double income;
        private double otherPayments;
        private double maxPayment;

        // Определяем конструктор для создания объекта класса CreditCheck с заданными параметрами
        public CreditCheck(double income, double otherPayments, double maxPayment) {
            this.income = income;
            this.otherPayments = otherPayments;
            this.maxPayment = maxPayment;
        }

        // Определяем метод для проверки одобрения кредита
        public boolean isApproved(Credit credit) {
            // Вычисляем ежемесячный платеж по кредиту и общий доход пользователя
            double monthlyPayment = credit.getMonthlyPayment();
            double totalIncome = income - otherPayments;
            // Возвращаем true, если ежемесячный платеж не превышает максимальный процент от дохода, иначе false
            return monthlyPayment <= totalIncome * maxPayment / 100;
        }

        // Определяем метод для расчета максимальной суммы кредита, которую может взять пользователь
        public double getMaxCreditAmount(int term, double rate) {
            // Вычисляем ежемесячный платеж, который может позволить себе пользователь, и коэффициент аннуитетного платежа
            double monthlyPayment = (income - otherPayments) * maxPayment / 100;
            double coefficient = (rate / 100 / 12) * Math.pow(1 + rate / 100 / 12, term) / (Math.pow(1 + rate / 100 / 12, term) - 1);
            // Возвращаем максимальную сумму кредита, которую может взять пользователь
            return monthlyPayment / coefficient;
        }

        // Определяем метод для проверки возможности выплаты ежемесячного платежа
        public boolean canAffordMonthlyPayment(double monthlyPayment) {
            // Вычисляем общий доход пользователя
            double totalIncome = income - otherPayments;
            // Возвращаем true, если ежемесячный платеж не превышает максимальный процент от дохода, иначе false
            return monthlyPayment <= totalIncome * maxPayment / 100;
        }

        // Определяем метод для проверки корректности значения максимального процента от дохода
        public boolean isValidMaxPayment() {
            // Возвращаем true, если максимальный процент от дохода находится в диапазоне от 0 до 100, иначе false
            return maxPayment <= 100 && maxPayment >= 0;
        }

        // Определяем метод для проверки корректности значения дохода
        public boolean isValidIncome() {
            // Возвращаем true, если доход не меньше выплат по другим кредитам, иначе false
            return income >= otherPayments;
        }
    }

    // Определяем главный метод программы
    public static void main(String[] args) {
        // Создаем объект класса Scanner для чтения данных с клавиатуры
        Scanner scanner = new Scanner(System.in);

        // Объявляем переменную для управления циклом программы
        boolean exit = false;
        while (!exit) {
            // Выводим меню программы
            System.out.println(""\n1. Расчитать кредит"");
            System.out.println(""2. Кредитные ставки"");
            System.out.println(""3. Проверить одобрение кредита"");
            System.out.println(""Ваш выбор: "");
            // Считываем выбор пользователя
            String operation = scanner.nextLine();

            // Выполняем действия в соответствии с выбором пользователя
            switch (operation) {
                case ""1"":
                    // Считываем сумму, срок и процентную ставку кредита
                    System.out.print(""Введите сумму кредита: "");
                    double amount = scanner.nextDouble();
                    scanner.nextLine(); // добавлено для очистки буфера ввода

                    System.out.print(""Введите срок кредита в месяцах: "");
                    int term = scanner.nextInt();
                    scanner.nextLine(); // добавлено для очистки буфера ввода

                    System.out.print(""Введите годовую ставку в процентах: "");
                    double rate = scanner.nextDouble();
                    scanner.nextLine(); // добавлено для очистки буфера ввода

                    // Создаем объект класса Credit с заданными параметрами и выводим информацию о кредите
                    lab2_21.Credit credit = new lab2_21.Credit(amount, term, rate);

                    System.out.println(""Ежемесячный платеж: "" + credit.getMonthlyPayment());
                    System.out.println(""Общая сумма выплат: "" + credit.getTotalAmount());
                    System.out.println(""Переплата: "" + credit.getOverpayment());
                    break;
                case ""2"":
                    // Создаем объект класса HashMap для хранения кредитных ставок
                    Map<CreditRate, Integer> creditRates = new HashMap<>();

                    // Создаем объекты класса CreditRate с заданными параметрами и добавляем их в HashMap
                    CreditRate rate1 = new CreditRate(50000, 12, 12);
                    CreditRate rate2 = new CreditRate(100000, 10, 24);
                    CreditRate rate3 = new CreditRate(200000, 8, 36);

                    creditRates.put(rate1, 100);
                    creditRates.put(rate2, 200);
                    creditRates.put(rate3, 300);

                    // Выводим информацию о кредитных ставках
                    System.out.println(""Кредитные ставки:"");
                    for (Map.Entry<CreditRate, Integer> entry : creditRates.entrySet()) {
                        CreditRate key = entry.getKey();
                        System.out.println(""Сумма: "" + key.getAmount() + "" руб., процент: "" + key.getRate() + ""%, срок: "" + key.getMonths() + "" мес."");
                    }
                    break;
                case ""3"":
                    // Считываем доход, выплаты по другим кредитам и максимальный процент от дохода, который готов тратить пользователь
                    System.out.print(""Введите ваш доход: "");
                    double income = scanner.nextDouble();
                    scanner.nextLine(); // добавлено для очистки буфера ввода

                    System.out.print(""Введите ваши выплаты других кредитов в месяц: "");
                    double otherPayments = scanner.nextDouble();
                    scanner.nextLine(); // добавлено для очистки буфера ввода

                    System.out.print(""Введите максимальный процент от дохода, который вы готовы тратить на кредит: "");
                    double maxPayment = scanner.nextDouble();
                    scanner.nextLine(); // добавлено для очистки буфера ввода

                    // Проверяем корректность значений дохода и максимального процента от дохода
                    if (!new lab2_21.CreditCheck(income, otherPayments, maxPayment).isValidIncome()) {
                        System.out.println(""Ошибка: сумма выплат других кредитов не может превышать ваш доход."");
                        break;
                    }

                    if (!new lab2_21.CreditCheck(income, otherPayments, maxPayment).isValidMaxPayment()) {
                        System.out.println(""Ошибка: максимальный процент от дохода, который вы готовы тратить на кредит, должен быть в диапазоне от 0 до 100."");
                        break;
                    }

                    // Создаем объект класса CreditCheck с заданными параметрами
                    lab2_21.CreditCheck creditCheck = new lab2_21.CreditCheck(income, otherPayments, maxPayment);

                    // Считываем сумму, срок и процентную ставку кредита, который хочет взять пользователь
                    System.out.print(""Введите сумму кредита, которую вы хотите взять: "");
                    double requestedAmount = scanner.nextDouble();
                    scanner.nextLine(); // добавлено для очистки буфера ввода

                    System.out.print(""Введите срок кредита в месяцах: "");
                    int requestedTerm = scanner.nextInt();
                    scanner.nextLine(); // добавлено для очистки буфера ввода

                    System.out.print(""Введите годовую ставку в процентах: "");
                    double requestedRate = scanner.nextDouble();
                    scanner.nextLine(); // добавлено для очистки буфера ввода

                    // Создаем объект класса Credit с заданными параметрами и проверяем одобрение кредита
                    lab2_21.Credit requestedCredit = new lab2_21.Credit(requestedAmount, requestedTerm, requestedRate);

                    if (creditCheck.isApproved(requestedCredit)) {
                        double monthlyPayment = requestedCredit.getMonthlyPayment();
                        if (creditCheck.canAffordMonthlyPayment(monthlyPayment)) {
                            System.out.println(""Кредит одобрен! Ежемесячный платеж: "" + monthlyPayment + "" руб."");
                        } else {
                            System.out.println(""Кредит не одобрен. Вы не сможете платить ежемесячный платеж в размере "" + monthlyPayment + "" руб."");
                        }
                    } else {
                        double maxCreditAmount = creditCheck.getMaxCreditAmount(requestedTerm, requestedRate);
                        System.out.println(""Кредит не одобрен. Максимальная сумма кредита, которую вы можете взять: "" + maxCreditAmount + "" руб."");
                    }
                    break;
                default:
                    System.out.println(""Неверный выбор. Пожалуйста, выберите снова."");
            }
        }
    }
}
"
YQV4z7D5,BWR - Changelog 30/03/24,SSilver,Diff,Saturday 30th of March 2024 04:43:26 PM CDT,"On-Kill Effects
~ Fixed incorrect effects being triggered for posthumous or delayed weapon kills (projectiles and such)
Iron Bomber
- Blocks hits from rollers reaching targets behind walls
Third Degree
- Blocks hits from reaching target's teammates behind walls
Medieval
~ Fixed touching resupply while holding a building being stuck
Vita-Saw
~ Fix interactions based on variable max HP (IE Dalokohs Bar)
Fixing unintended behavior to make the items/changes more consistent.

Eyelander
~ Reverted speed boost to being on-kill and not consumed with heads
- Added: -15 max health on wearer
There was little windup or warning for the demo using his heads. Reverting it to an on-kill bonus should make it more predictable for the enemy and without using a resource provides more immediate benefit to the demo. In exchange, the weapon was given a more persistent downside it was lacking, returning it's max health penalty but to a lesser degree.

Syringe Guns
+ Increased crit heal recovery rate to 100% on hitting teammate (was 33%)
+ Recovered teammates briefly have +100% increased uber build rate (2 seconds)
~ Changed effect: Aura appears when teammate has crit heals reset, with no effect when it's already at limit
The process of resetting crit heals was potentially too cumbersome, especially for a larger group as it was intended to be more useful for. The process should be faster now, while also providing additional uber build for a short period to make up for less time spent on healing teammates.

Brass Beast
+ Increased spun up resistance to -25% damage resistance
+ Removed capture rate penalty
- Reverted resistance to only kick in when spun up below 50% HP (was 90%)
The interactions with the weapon were a bit too extreme on either end with the changes. As a test, nearly all changes for the weapon were reverted save for the resistance being slightly buffed on the weapon. However it appears that the universal spin down buff might be enough to make this weapon more consistent.

Blutsauger
+ Added: Heals 10 HP on-hit for recovering teammates
- Reverted health regeneration penalty
The weapon was given some additional benefits to interact with the crit heal potential. Reverting the weapon's regen penalty will incentivize using the weapon to heal both when fighting enemies and helping teammates recover, as well as make shooting at enemies with teammates around less deadly for yourself.

Overdose
+ Increased max speed bonus to +25% (was +20%)
- -50% reduced uber build rate bonus on crit heal recovery
The speed boost was slightly buffed as it was considered a tad underwhelming. However it was also considered a slightly overbuffed compared to other syringe guns. It is being given this uber rate penalty at the moment to contrast the buffs it has for your own survivability, but has the potential to change."
qPswVEqn,5.SchoolRegister,Silviya7,JavaScript,Saturday 30th of March 2024 04:26:34 PM CDT,"function Grades(input){

   let ArrStudents=[];

   let ArrNewYearStudents=[];
   let gradesArr=[];

    let GradesAvgScore={};
    for (const stud of input) {
        
        let [studentName,Grade,AverageScore]= stud.split(',');
        let indexst=studentName.indexOf(':');
        let name=studentName.substring(indexst+1,studentName.length);     

        let idexgr=Grade.indexOf(':');
        let grade=Grade.substring(idexgr+1,Grade.length);
        let iavr=AverageScore.indexOf(':');
        let avgscore=AverageScore.substring(iavr+1,AverageScore.length);
        
        let gradenum=Number(grade.trim());
        let avgnum=Number(avgscore.trim());
         
        if(avgnum >3){
        let student={name:name.trim(), grade:gradenum, avgeragescore:avgnum};
        ArrStudents.push(student);
    
        let objStudent=ArrNewYearStudents.find(s=> s.grade==gradenum);
        if(!objStudent && avgnum > 3){
            gradesArr.push(grade.trim());
        ArrNewYearStudents.push({grade:gradenum, students:'', avgscore:0});
        }
    }

    }

    let namestudents='';
    
     
       for (const student of ArrNewYearStudents) {
        let allstudents='';
        let avggr=0;
        let sumavg=0;
        let countst=0;
        let CStudents=[];
        for (let i=0; i< ArrStudents.length; i++) {
            let g=ArrStudents[i].grade;
                
        if(student.grade== g && ArrStudents[i].avgeragescore >3){
            countst ++;
            sumavg += ArrStudents[i].avgeragescore;
            CStudents.push(ArrStudents[i].name)
        }
      
       }
       avggr= sumavg/countst;
        
       student.avgscore=avggr;
       student.students=CStudents.join(', ');
     
      }

      gradesArr.sort((a,b)=> a-b);
    

for (let j = 0; j < gradesArr.length; j++) {
    let student= ArrNewYearStudents.find(s=> s.grade==gradesArr[j] );
    console.log(`${student.grade+1} Grade`);
    console.log(`List of students: ${student.students}`);
 
    console.log(`Average annual score from last year: ${student.avgscore.toFixed(2)}\n`)
  
}
}"
EqHraLG6,Untitled,RenSafaray,Java,Saturday 30th of March 2024 04:14:15 PM CDT,"import java.util.Scanner;

public class lab3_21 {

    public static void main(String[] args) {

        // Создаем объект Scanner для считывания данных с клавиатуры
        Scanner scanner = new Scanner(System.in);

        // Считываем количество строк и столбцов матрицы
        System.out.print(""Введите количество строк: "");
        int m = scanner.nextInt();
        System.out.print(""Введите количество столбцов: "");
        int n = scanner.nextInt();

        // Создаем матрицу размером m x n
        double[][] matrix = new double[m][n];

        // Считываем элементы матрицы
        System.out.println(""Введите элементы матрицы:"");
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                matrix[i][j] = scanner.nextDouble();
            }
        }

        // Выводим исходную матрицу
        System.out.println(""Исходная матрица:"");
        printMatrix(matrix);

        // Вычисляем средние арифметические для каждой строки
        double[] averages = new double[m];
        for (int i = 0; i < m; i++) {
            double sum = 0;
            int count = 0;
            for (int j = 0; j < n; j++) {
                sum += matrix[i][j];
                count++;
            }
            averages[i] = sum / count;
        }

        // Выводим средние арифметические для каждой строки
        System.out.println(""Средние арифметические для каждой строки:"");
        for (double average : averages) {
            System.out.println(average);
        }

        // Заменяем четные элементы на средние арифметические в данной строке
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (matrix[i][j] % 2 == 0) {
                    matrix[i][j] = averages[i];
                }
            }
        }

        // Выводим результирующую матрицу
        System.out.println(""Результирующая матрица:"");
        printMatrix(matrix);
    }

    // Метод для вывода матрицы на экран
    private static void printMatrix(double[][] matrix) {
        for (double[] row : matrix) {
            for (double element : row) {
                System.out.print(element + "" "");
            }
            System.out.println();
        }
    }
}"
4KRn0mBs,castle_fusion_probs.py,Shuraken007,Python,Saturday 30th of March 2024 03:59:30 PM CDT,"import numpy as np

def get_prob(probs, values):
  p = np.array(probs)
  v = np.array(values)
  return np.dot(p, v)
  
low = get_prob(
  [30, 60, 10],
  [-10, 6, 36]
)

medium = get_prob(
  [15, 70, 15],
  [-10, 6, 36]
)

high = get_prob(
  [0, 60, 40],
  [0, 6, 36]
)

E = [low, medium, high]
values = [4, 9, 21]

M = np.divide(E, values)

print(M)"
42xGjagf,Notecard Inventory Shuffler,Madi_Perth,Linden Scripting,Saturday 30th of March 2024 03:44:44 PM CDT,"default
{
    state_entry()
    {
        integer numberCards = llGetInventoryNumber(INVENTORY_NOTECARD);
        integer i;
        list numberList;

        for(i = 0; i < numberCards; i++)
            numberList += i;

        numberList = llListRandomize(numberList, 1);

        for(i = 0; i < numberCards; i++)
            llOwnerSay(llGetInventoryName(INVENTORY_NOTECARD , llList2Integer(numberList, i)));


    }
}
"
6WFfuBL9,Computer 3 paste,Archer2o2x,Lua,Saturday 30th of March 2024 03:09:59 PM CDT,"local routes = {
    [""Vert""] = ""top"",
    [""Hori""] = ""left"",
    [""ReverseVert""] = ""bottom"",
    [""ReverseHori""] = ""front""
}

peripheral.find(""modem"", rednet.open)

while true do

    local _, message = rednet.receive(""Red Router v1.0"")

    print(""RCV "" .. message)

    local data = textutils.unserialize(message)

    if routes[data.route] ~= nil then

        redstone.setOutput(routes[data.route], data.value)

    end

end
"
VQFyTceS,Computer 2 paste,Archer2o2x,Lua,Saturday 30th of March 2024 03:08:02 PM CDT,"local routes = {
    [""Fire""] = ""top"",
    [""Reset""] = ""back"",
    [""Reload""] = ""bottom""
}

peripheral.find(""modem"", rednet.open)

while true do

    local _, message = rednet.receive(""Red Router v1.0"")

    print(""RCV "" .. message)

    local data = textutils.unserialize(message)

    if routes[data.route] ~= nil then

        redstone.setOutput(routes[data.route], data.value)

    end

end"
cWZpA6ap,Computer 1 paste,Archer2o2x,Lua,Saturday 30th of March 2024 03:04:20 PM CDT,"shell.execute(""pastebin"", ""get"", ""FpbkURf2"", ""artui"")
shell.execute(""pastebin"", ""get"", ""9UtmiZ5U"", ""artillery"")
shell.execute(""pastebin"", ""get"", ""nkWsHcS5"", ""vec"")
shell.execute(""pastebin"", ""get"", ""pWWvEVPf"", ""defaults"")
shell.execute(""pastebin"", ""get"", ""GyLKqLa0"", ""redroute"")
"
0MuD9EsT,Local Max in Matrix,Manitejaaaa,Java,Saturday 30th of March 2024 02:53:01 PM CDT,"import java.io.*;
import java.util.*;

public class Main {
    static int max(int[][] arr, int i, int j){
        int max = arr[i][j];
        for(int k = i; k < i + 3; k++){
            for(int l = j; l < j + 3; l++){
                max = Math.max(max, arr[k][l]);
            }
        }
        return max;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] arr = new int[n][n];
        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                arr[i][j] = sc.nextInt();
            }
        }
        for(int i = 0; i < n - 2; i++){
            for(int j = 0; j < n - 2; j++){
                System.out.print(max(arr, i, j) + "" "");
            }
            System.out.println();
        }
    }
}"
uPJ3fBrw,Random Binary Code Machine,mrmrcoder,Lua,Saturday 30th of March 2024 02:44:00 PM CDT,"--[[
Generate a random, 24 bit code in binary.
Each set has 8 bits, which will correspond to a number.
Generate a 3 Digit password and convert into 3 8-bit sets of binary.
Every time the button is pressed, move to the next set, showing the binary for that set.
--]]

local binary_table = {
	128,
	64,
	32,
	16,
	8,
	4,
	2,
	1
}

local Machine = script.Parent
local Button = Machine.Button
local Display = Machine.Display
local SetDisplay = Machine.Sets

local CurrentSetIndex = 1

function GenerateRandomSet()
	local set = {}
	
	for i = 1, 8 do
		table.insert(set, math.random(0,1))
	end
	
	return set
end

function DecodeSet(set)
	local true_decimals = {}
	local final_code = 0
	
	for i = 1, 8 do
		local IsNumberTrue = set[i] == 1
		
		if IsNumberTrue == true then
			local binary_value = binary_table[i]
			table.insert(true_decimals, binary_value)
		end
	end
	
	for i, v in true_decimals do
		final_code = final_code + v
	end
	
	return final_code
end

function DisplaySet(set)
	local binary_string = """"
	
	for i = 1, #set do
		local light_name = ""Light""..tostring(i)
		
		if set[i] == 1 then
			Display:FindFirstChild(light_name).BrickColor = BrickColor.Green()
		else
			Display:FindFirstChild(light_name).BrickColor = BrickColor.Black()
		end
		
		binary_string = binary_string..tostring(set[i])
	end
	
	print(""binary string: "".. binary_string)
end

function DisplaySetIndex()
	local SetName = ""Set""..CurrentSetIndex
	local chosen_set = SetDisplay:FindFirstChild(SetName)
	
	for _, set_btn in SetDisplay:GetChildren() do
		set_btn.BrickColor = BrickColor.Black()
	end
	
	chosen_set.BrickColor = BrickColor.Green()
end

local sets = {}

sets[1] = GenerateRandomSet()
sets[2] = GenerateRandomSet()
sets[3] = GenerateRandomSet()

DisplaySet(sets[CurrentSetIndex])
DisplaySetIndex()

local code = tostring(DecodeSet(sets[1])..DecodeSet(sets[2])..DecodeSet(sets[3]))
print(""code: "".. code)

game.Players.PlayerAdded:Connect(function(plr)
	plr.Chatted:Connect(function(msg)
		if msg == code then
			print(""Player guessed the code."")
		end
	end)
end)

Button.ClickDetector.MouseClick:Connect(function()
	Button.ClickAudio.TimePosition = 0
	Button.ClickAudio:Play()
	if CurrentSetIndex < 3 then
		CurrentSetIndex = CurrentSetIndex + 1
	else
		CurrentSetIndex = 1
	end
	
	DisplaySet(sets[CurrentSetIndex])
	DisplaySetIndex()
end)"
kq0KvPTS,Untitled,Mysoft,FreeBasic,Saturday 30th of March 2024 02:36:09 PM CDT,"dim st as string = !""hello\0 world""
dim x as ubyte ptr = @st[0]
do until st[x] = asc(!""\0"")
	print chr(st[x])
	x += 1
loop "
nQD9X0r7,stripmine,Last1k,Lua,Saturday 30th of March 2024 02:34:41 PM CDT,"local Direction = {
    UP = ""up"",
    DOWN = ""down"",
    FORWARD = ""forward"",
    BACKWARD = ""backward"",
    NONE = ""none"" -- Moving in none direction doesn't do anything
}

local moveActions = {
    [Direction.FORWARD] = { move = turtle.forward, dig = turtle.dig },
    [Direction.UP] = { move = turtle.up, dig = turtle.digUp },
    [Direction.DOWN] = { move = turtle.down, dig = turtle.digDown },
    [Direction.BACKWARD] = { move = turtle.back, dig = function() end }
}

function moveTurtle(direction)
    if direction == Direction.NONE then
        return true
    end

    local action = moveActions[direction]
    if not action then
        error(""Invalid direction. Use Direction.UP, Direction.DOWN, Direction.FORWARD or Direction.BACKWARD."")
        return false
    end

    while not action.move() do
        action.dig()
    end
    return true
end

function copyFile(sourcePath, destinationPath)
    -- Open the source file for reading
    local sourceFile, sourceErr = io.open(sourcePath, ""rb"") -- ""rb"" mode for binary read, to ensure all file types are supported
    if not sourceFile then
        error(""Could not open source file: "" .. sourceErr)
    end

    -- Read the entire content of the source file
    local content = sourceFile:read(""*a"") -- ""*a"" reads the whole file
    sourceFile:close()                    -- Close the source file after reading

    -- Open the destination file for writing
    local destinationFile, destErr = io.open(destinationPath, ""wb"") -- ""wb"" mode for binary write
    if not destinationFile then
        error(""Could not open destination file: "" .. destErr)
    end

    -- Write the content to the destination file
    destinationFile:write(content)
    destinationFile:close() -- Close the destination file after writing
end

function placeDiskAndWriteData()
    moveTurtle(Direction.FORWARD)

    turtle.select(1)
    while not turtle.placeUp() do
        turtle.digUp()
    end
    turtle.select(2)
    turtle.dropUp()

    copyFile(""minerArsenal.lua"", ""disk/minerArsenal.lua"")
    copyFile(""slavetartup.lua"", ""disk/startup.lua"")

    moveTurtle(Direction.BACKWARD)
end

function placeTurtle()
    turtle.select(3)
    while not turtle.place() do
        turtle.dig()
    end

    -- Have to wait before interacting with the turtle
    os.sleep(1)

    local computer = peripheral.wrap(""front"")
    computer.turnOn()
end

placeDiskAndWriteData()
placeTurtle()"
yJHpyW8c,slaveStartup,Last1k,Lua,Saturday 30th of March 2024 02:33:47 PM CDT,"function copyFile(sourcePath, destinationPath)
    -- Open the source file for reading
    local sourceFile, sourceErr = io.open(sourcePath, ""rb"") -- ""rb"" mode for binary read, to ensure all file types are supported
    if not sourceFile then
        error(""Could not open source file: "" .. sourceErr)
    end

    -- Read the entire content of the source file
    local content = sourceFile:read(""*a"") -- ""*a"" reads the whole file
    sourceFile:close() -- Close the source file after reading

    -- Open the destination file for writing
    local destinationFile, destErr = io.open(destinationPath, ""wb"") -- ""wb"" mode for binary write
    if not destinationFile then
        error(""Could not open destination file: "" .. destErr)
    end

    -- Write the content to the destination file
    destinationFile:write(content)
    destinationFile:close() -- Close the destination file after writing
end

copyFile(""disk/minerArsenal.lua"", ""minerArsenal.lua"")

local miner = require(""minerArsenal"")
Direction = miner.Direction

os.setComputerLabel(""worker"")
turtle.suckDown()
turtle.refuel()

miner.moveTurtle(Direction.FORWARD)

height = 3
length = 4
miner.digTunnel(length, height)

turtle.turnRight()
turtle.turnRight()

for i = 1, length do
    miner.moveTurtle(Direction.FORWARD)
end

miner.moveTurtle(Direction.FORWARD)

turtle.turnRight()
turtle.turnRight()
"
yXPYvuyW,minerArsenal,Last1k,Lua,Saturday 30th of March 2024 02:33:18 PM CDT,"local Direction = {
    UP = ""up"",
    DOWN = ""down"",
    FORWARD = ""forward"",
    BACKWARD = ""backward"",
    NONE = ""none"" -- Moving in none direction doesn't do anything
}

-- Function to get the opposite direction
function getOppositeDirection(direction)
    local opposite = {
        [Direction.UP] = Direction.DOWN,
        [Direction.DOWN] = Direction.UP,
        [Direction.FORWARD] = Direction.BACKWARD,
        [Direction.BACKWARD] = Direction.FORWARD,
        [Direction.NONE] = Direction.NONE,
    }

    return opposite[direction]
end

function isOre(blockData)
    if blockData and blockData.tags then
        if blockData.tags[""forge:ores""] then
            return true
        end
    end
    return false
end

-- Function to inspect a block in a given direction and check if it's an ore
function hasOre(direction)
    local success, data
    if direction == Direction.UP then
        success, data = turtle.inspectUp()
    elseif direction == Direction.DOWN then
        success, data = turtle.inspectDown()
    elseif direction == Direction.FORWARD then
        success, data = turtle.inspect()
    else
        error(""Invalid direction."")
    end

    if success then
        return isOre(data)
    else
        return false
    end
end

local moveActions = {
    [Direction.FORWARD] = { move = turtle.forward, dig = turtle.dig },
    [Direction.UP] = { move = turtle.up, dig = turtle.digUp },
    [Direction.DOWN] = { move = turtle.down, dig = turtle.digDown },
    [Direction.BACKWARD] = { move = turtle.back, dig = function() end }
}

function moveTurtle(direction)
    if direction == Direction.NONE then
        return true
    end

    local action = moveActions[direction]
    if not action then
        error(""Invalid direction. Use Direction.UP, Direction.DOWN, Direction.FORWARD or Direction.BACKWARD."")
        return false
    end

    while not action.move() do
        action.dig()
    end
    return true
end

Stack = {}
function Stack:new()
    local instance = { items = {} }
    setmetatable(instance, self)
    self.__index = self
    return instance
end

function Stack:push(item)
    table.insert(self.items, item)
end

function Stack:pop()
    return table.remove(self.items)
end

function Stack:isEmpty()
    return #self.items == 0
end

-- Define actions
local digActions = {
    CheckSide = ""checkSide"",
    CheckTop = ""checkTop"",
    CheckBottom = ""checkBottom""
}

-- Function to create a new state with a predefined set of actions
function newState(headingDirection)
    local actionStack = Stack:new()
    -- Add actions in reverse order since we're using a stack
    actionStack:push(digActions.CheckTop)
    actionStack:push(digActions.CheckSide)
    actionStack:push(digActions.CheckSide)
    actionStack:push(digActions.CheckSide)
    actionStack:push(digActions.CheckSide)
    actionStack:push(digActions.CheckBottom)
    return {
        actionStack = actionStack,
        getBackDirection = getOppositeDirection(headingDirection)
    }
end

function mineVein(direction)
    stateStack = Stack:new()
    stateStack:push(newState(direction))
    moveTurtle(direction)

    while not stateStack:isEmpty() do
        local currentState = stateStack:pop()

        while not currentState.actionStack:isEmpty() do
            local action = currentState.actionStack:pop()
            local checkDirection
            if action == digActions.CheckSide then
                turtle.turnRight()
                checkDirection = Direction.FORWARD
            elseif action == digActions.CheckTop then
                checkDirection = Direction.UP
            elseif action == digActions.CheckBottom then
                checkDirection = Direction.DOWN
            end

            if hasOre(checkDirection) then
                stateStack:push(currentState)
                moveTurtle(checkDirection)
                currentState = newState(checkDirection)
            end
        end

        moveTurtle(currentState.getBackDirection)
    end
end

function digColumn(height)
    if hasOre(Direction.DOWN) then
        mineVein(Direction.DOWN)
    end

    turtle.turnLeft()

    for h = 1, height do
        if hasOre(Direction.FORWARD) then
            mineVein(Direction.FORWARD)
        end
        if h ~= height then
            moveTurtle(Direction.UP)
        end
    end

    if hasOre(Direction.UP) then
        mineVein(Direction.UP)
    end

    turtle.turnRight()
    turtle.turnRight()

    for h = height, 1, -1 do
        if hasOre(Direction.FORWARD) then
            mineVein(Direction.FORWARD)
        end
        if h ~= 1 then
            moveTurtle(Direction.DOWN)
        end
    end

    turtle.turnLeft()
end

function digTunnel(length, height)
    for i = 1, length do
        moveTurtle(Direction.FORWARD)
        digColumn(height)
    end
end

function penetrate(length)
    for i = 1, length do
        moveTurtle(Direction.FORWARD)
        if hasOre(Direction.DOWN) then
            mineVein(Direction.DOWN)
        end
        if hasOre(Direction.UP) then
            mineVein(Direction.UP)
        end
    end
end

local M = {}

M.digTunnel = digTunnel
M.penetrate = penetrate
M.moveTurtle = moveTurtle

M.Direction = Direction

return M"
wBc5nGZv,[site-reviews] prevent users from reviewing their own posts,geminilabs,PHP,Saturday 30th of March 2024 02:05:01 PM CDT,"/**
 * @param bool|string $isValid
 * @param \GeminiLabs\SiteReviews\Request $request
 * @return bool|string
 */
add_filter('site-reviews/validate/custom', function ($isValid, $request) {
    if (!is_user_logged_in()) {
        return $isValid;
    }
    $postIds = $request->sanitize('assigned_posts', 'array-int');
    $userId = get_current_user_id();
    foreach ($postIds as $postId) {
		$postAuthorId = (int) (get_post($postId)->post_author ?? 0);
        if ($userId === $postAuthorId) {
            return 'You are not allowed to review your own post.';
        }
    }
    return $isValid;
}, 10, 2);"
ySd7f1qC,Unit_10,lovelyvook,C#,Saturday 30th of March 2024 01:43:04 PM CDT,"using System;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();
            int minRandomNumber = 1;
            int maxRandomNumber = 101;
            int number = random.Next(minRandomNumber, maxRandomNumber);
            int dividedNumber1 = 3;
            int dividedNumber2 = 5;
            int sum = 0;

            Console.WriteLine(""Рандомное число: "" + number);

            for (int i = 1; i <= number; i++)
            {
                if (i % dividedNumber1 == 0 || i % dividedNumber2 == 0)
                {
                    sum += i;
                }
            }

            Console.WriteLine($""Сумма чисел кратная {dividedNumber1} и {dividedNumber2} равна {sum}"");
        }
    }
}"
sky959RR,Powershell XAMMP script,RehabCZ,PowerShell,Saturday 30th of March 2024 01:36:35 PM CDT,"# Check if the script is running with administrative privileges
if (-not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {
    Write-Host ""Please run this script as an administrator.""
    Exit
}

# Prompt for IP address
$ipAddress = Read-Host -Prompt ""Enter IP address""

# Prompt for hostname
$hostname = Read-Host -Prompt ""Enter hostname""

# Prompt for directory
$directory = Read-Host -Prompt ""Enter directory""

# Construct the hosts file entry
$hostsEntry = ""$ipAddress`t$hostname""

# Path to the hosts file
$hostsFilePath = ""$env:SystemRoot\System32\drivers\etc\hosts""

# Check if the entry already exists in the hosts file
if (Select-String -Path $hostsFilePath -Pattern ""^$hostname"") {
    Write-Host ""Entry for $ipAddress already exists in hosts file.""
}
else {
    # Add the entry to the hosts file
    Add-Content -Path $hostsFilePath -Value $hostsEntry
    Write-Host ""Entry added to hosts file:""
    Write-Host $hostsEntry
}

# Check if in vhosts
$apacheVhostsFile = ""C:\Program Files\XAMPP\apache\conf\extra\httpd-vhosts.conf""

$apacheEntry = @""
<VirtualHost $hostname:80>
    DocumentRoot ""$directory""
    ServerName ""$hostname""
    <Directory ""$directory"">
        Options All
        AllowOverride All
        Allow from all
    </Directory>
##</VirtualHost>
""@

# Check if the entry already exists in the vhosts file
if (Select-String -Path $apacheVhostsFile -Pattern '^ServerName ""$hostname""') {
    Write-Host ""Entry for $hostname exists in vhosts file.""
}
else {
    # Add the entry to the hosts file
    Add-Content -Path $apacheVhostsFile -Value $apacheEntry
    Write-Host ""Entry added to hosts file:""
    Write-Host $apacheVhostsFile
}
"
w5jd1SHC,OneTimeEvent,zORg_alex,C#,Saturday 30th of March 2024 01:20:15 PM CDT,"using System;

// This initially was my first Chat GPT experiment... I should have done that myself and saved a couple of hours :)

/// <summary>
/// An event that supposed to be fired once, and after that any subscription will be fired immediately. <code>
/// private static OneTimeEvent onHadInitialized = new OneTimeEvent();
/// public static event Action OnHadInitialized { add => onHadInitialized += value; remove => onHadInitialized -= value; }
/// </code>
/// </summary>
public class OneTimeEvent
{
	private event Action _event;
	private bool _wasInvoked;
	private static object _staticlock = new object();
	private object _lock = new object();

	public bool WasInvoked
	{
		get
		{
			lock (_lock)
			{
				return _wasInvoked;
			}
		}
	}

	public static OneTimeEvent operator +(OneTimeEvent oneTimeEvent, Action handler)
	{
		lock (_staticlock)
		{
			if (oneTimeEvent == null)
			{
				oneTimeEvent = new OneTimeEvent();

				return Subscribe(oneTimeEvent, handler);
			}
		}
		lock (oneTimeEvent._lock)
		{
			return Subscribe(oneTimeEvent, handler);
		}

		static OneTimeEvent Subscribe(OneTimeEvent oneTimeEvent, Action handler)
		{
			if (oneTimeEvent._wasInvoked)
			{
				handler?.Invoke();
			}
			else
			{
				oneTimeEvent._event += handler;
			}
			return oneTimeEvent;
		}
	}
	public static OneTimeEvent operator -(OneTimeEvent oneTimeEvent, Action handler)
	{
		lock (_staticlock)
		{
			if (oneTimeEvent == null)
			{
				oneTimeEvent = new OneTimeEvent();

				return Unsubscribe(oneTimeEvent, handler);
			}
		}
		lock (oneTimeEvent._lock)
		{
			return Unsubscribe(oneTimeEvent, handler);
		}

		static OneTimeEvent Unsubscribe(OneTimeEvent oneTimeEvent, Action handler)
		{
			if (oneTimeEvent._wasInvoked)
			{
				handler?.Invoke();
			}
			else
			{
				oneTimeEvent._event -= handler;
			}
			return oneTimeEvent;
		}
	}

	public void Invoke()
	{
		Action temp;
		lock (_lock)
		{
			if (_wasInvoked)
			{
				return;
			}

			_wasInvoked = true;
			temp = _event;
			_event = null;
		}
			temp?.Invoke();
	}

	public IAsyncResult BeginInvoking()
	{
		Action temp;
		lock (_lock)
		{
			if (_wasInvoked)
			{
				return null;
			}

			_wasInvoked = true;
			temp = _event;
			_event = null;
		}
		return temp?.BeginInvoke(temp.EndInvoke, null);
	}
}

/// <summary>
/// An event that supposed to be fired once, and after that any subscription will be fired immediately.<para/>
/// Thanks Chat GPT to helping improving it... Although, I should have done that myself and saved a couple of hours
/// </summary>
public class OneTimeEvent<T>
{
	private Action<T> _event;
	private T _arg;
	private bool _wasInvoked;
	private static object _staticlock = new object();
	private object _lock = new object();

	public bool WasInvoked
	{
		get
		{
			lock (_lock)
			{
				return _wasInvoked;
			}
		}
	}

	public static OneTimeEvent<T> operator +(OneTimeEvent<T> oneTimeEvent, Action<T> handler)
	{
		lock (_staticlock)
		{
			if (oneTimeEvent == null)
			{
				oneTimeEvent = new OneTimeEvent<T>();

				return Subscribe(oneTimeEvent, handler);
			}
		}
		lock (oneTimeEvent._lock)
		{
			return Subscribe(oneTimeEvent, handler);
		}

		static OneTimeEvent<T> Subscribe(OneTimeEvent<T> oneTimeEvent, Action<T> handler)
		{
			if (oneTimeEvent._wasInvoked)
			{
				handler?.Invoke(oneTimeEvent._arg);
			}
			else
			{
				oneTimeEvent._event += handler;
			}
			return oneTimeEvent;
		}
	}

	public static OneTimeEvent<T> operator -(OneTimeEvent<T> oneTimeEvent, Action<T> handler)
	{
		lock (_staticlock)
		{
			if (oneTimeEvent == null)
			{
				oneTimeEvent = new OneTimeEvent<T>();

				return Unsubscribe(oneTimeEvent, handler);
			}
		}
		lock (oneTimeEvent._lock)
		{
			return Unsubscribe(oneTimeEvent, handler);
		}

		static OneTimeEvent<T> Unsubscribe(OneTimeEvent<T> oneTimeEvent, Action<T> handler)
		{
			if (oneTimeEvent._wasInvoked)
			{
				handler?.Invoke(oneTimeEvent._arg);
			}
			else
			{
				oneTimeEvent._event -= handler;
			}
			return oneTimeEvent;
		}
	}

	public void Invoke(T arg)
	{
		Action<T> temp;
		lock (_lock)
		{
			if (_wasInvoked)
			{
				return;
			}

			_wasInvoked = true;
			temp = _event;
			_event = null;
		}
		temp?.Invoke(arg);
	}
}"
K3rbF96X,Unit_09,lovelyvook,C#,Saturday 30th of March 2024 12:54:06 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int minNumber = 5;
            int maxNumber = 103;
            int incincreaseNumber = 7;

            for (int i = minNumber; i <= maxNumber; i += incincreaseNumber)
            {
                Console.WriteLine(i);
            }
        }
    }
}"
rUF8gS35,OnlineStore v2,RedFlys,C#,Saturday 30th of March 2024 12:51:21 PM CDT,"Good iPhone12 = new Good(""IPhone 12"");
Good iPhone11 = new Good(""IPhone 11"");

Warehouse warehouse = new Warehouse();

Shop shop = new Shop(warehouse);

warehouse.Delive(iPhone12, 10);
warehouse.Delive(iPhone11, 1);

//Вывод всех товаров на складе с их остатком

Cart cart = shop.Cart();
cart.Add(iPhone12, 4);
cart.Add(iPhone11, 3); //при такой ситуации возникает ошибка так, как нет нужного количества товара на складе

//Вывод всех товаров в корзине

Console.WriteLine(cart.Order().Paylink);

cart.Add(iPhone12, 9); //Ошибка, после заказа со склада убираются заказанные товары


public class Warehouse : IDeliveryWarehouse
{
    private readonly Dictionary<Good, int> _goods;

    public Warehouse()
    {
        GoodEqualityCompare goodEqualityCompare = new();
        _goods = new(goodEqualityCompare);
    }

    public void Delive(Good good, int countGoods)
    {
        good = good ?? throw new ArgumentNullException();

        if (countGoods < 0)
            throw new ArgumentOutOfRangeException();

        if (_goods.ContainsKey(good))
            _goods[good] += countGoods;
        else
            _goods.Add(good, countGoods);
    }

    public bool CanIssue(Good good, int countGoods)
    {
        good = good ?? throw new ArgumentNullException();

        if (countGoods < 0)
            throw new ArgumentOutOfRangeException();

        if (_goods.TryGetValue(good, out int count))
            return count >= countGoods;
        else
            return false;
    }

    public void TransferForDelivery(Good good, int countGoods)
    {
        good = good ?? throw new ArgumentNullException();

        if (countGoods < 0)
            throw new ArgumentOutOfRangeException();

        if (_goods.ContainsKey(good) && _goods[good] >= countGoods)
            _goods[good] -= countGoods;
        else
            throw new ArgumentOutOfRangeException();
    }
}

public class Shop
{
    private readonly Warehouse _warehouse;

    public Shop(Warehouse warehouse) => _warehouse = warehouse ?? throw new ArgumentNullException();
    
    public Cart Cart()
    {
        return new Cart(_warehouse);
    }
}

public class Cart
{
    private readonly Dictionary<Good, int> _goods;
    private readonly IDeliveryWarehouse _warehouse;

    public Cart(IDeliveryWarehouse warehouse) 
    {
        _warehouse = warehouse ?? throw new ArgumentNullException();

        GoodEqualityCompare goodEqualityCompare = new();
        _goods = new(goodEqualityCompare);
    }

    public void Add(Good good, int countGoods)
    {
        good = good ?? throw new ArgumentNullException();

        if (countGoods < 0)
            throw new ArgumentOutOfRangeException();

        if (_goods.ContainsKey(good))
            _goods[good] += countGoods;
        else
            _goods.Add(good, countGoods);
    }

    public PayOrder Order()
    {
        foreach(var goods in _goods)
        {
            _warehouse.TransferForDelivery(goods.Key, goods.Value);
        }

        _goods.Clear();
        return new PayOrder();
    }
}

public class Good
{
    public Good(string name)
    {
        if (string.IsNullOrEmpty(name))
            throw new ArgumentNullException();

        Name = name;
    }

    public string Name { get; }
}

public class PayOrder
{
    public PayOrder() { }

    public string Paylink { get; }
}

public interface IDeliveryWarehouse
{
    public bool CanIssue(Good good, int countGoods);

    public void TransferForDelivery(Good good, int countGoods);
}

public class GoodEqualityCompare : IEqualityComparer<Good>
{
    public bool Equals(Good? good1, Good? good2)
    {
        if (ReferenceEquals(good1, good2)) 
            return true;

        if (good1 == null || good2 == null)
            return false;

        return good1.Name == good2.Name;
    }

    public int GetHashCode(Good good) => good.Name.GetHashCode();
}"
P0XHFypd,Unit_08,lovelyvook,C#,Saturday 30th of March 2024 12:35:12 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string exit = ""exit"";
            string userInput = """";

            Console.WriteLine($""Для выхода из программы введите {exit}"");

            while (userInput != exit)
            {
                Console.Write(""Введите ваше сообщение: "");
                userInput = Console.ReadLine();
            }
        }
    }
}"
sSs1QQmQ,psimedia patch,KukuRuzo,C++,Saturday 30th of March 2024 12:32:29 PM CDT,"

diff --git a/plugins/generic/psimedia/CMakeLists.txt b/plugins/generic/psimedia/CMakeLists.txt
index bc184283..6a789224 100644
--- a/plugins/generic/psimedia/CMakeLists.txt
+++ b/plugins/generic/psimedia/CMakeLists.txt
@@ -17,23 +17,29 @@ if( (CMAKE_CROSSCOMPILING) AND (DEFINED MSYS) )
     message(STATUS ""MXE root path: ${CMAKE_PREFIX_PATH}"")
 endif()
 
+if(POLICY CMP0053)
+    cmake_policy(SET CMP0053 NEW)
+endif()
+
 # On Windows debug library should have 'd' postfix.
 if(WIN32)
+    unset(GST_SDK)
     set(CMAKE_DEBUG_POSTFIX ""d"")
     if(NOT USE_MXE)
         if(CMAKE_SIZEOF_VOID_P MATCHES ""8"")
             if(MSVC)
-                set(GST_SDK $ENV{GSTREAMER_1_0_ROOT_MSVC_X86_64} CACHE STRING ""Path to gstreamer SDK"")
+                set(GST_SDK_PATH $ENV{GSTREAMER_1_0_ROOT_MSVC_X86_64} CACHE STRING ""Path to gstreamer SDK"")
             else()
-                set(GST_SDK $ENV{GSTREAMER_1_0_ROOT_X86_64}  CACHE STRING ""Path to gstreamer SDK"")
+                set(GST_SDK_PATH $ENV{GSTREAMER_1_0_ROOT_X86_64}  CACHE STRING ""Path to gstreamer SDK"")
             endif()
         else()
             if(MSVC)
-                set(GST_SDK $ENV{GSTREAMER_1_0_ROOT_MSVC_X86} CACHE STRING ""Path to gstreamer SDK"")
+                set(GST_SDK_PATH $ENV{GSTREAMER_1_0_ROOT_MSVC_X86} CACHE STRING ""Path to gstreamer SDK"")
             else()
-                set(GST_SDK $ENV{GSTREAMER_1_0_ROOT_x86}  CACHE STRING ""Path to gstreamer SDK"")
+                set(GST_SDK_PATH $ENV{GSTREAMER_1_0_ROOT_x86}  CACHE STRING ""Path to gstreamer SDK"")
             endif()
         endif()
+        string(REPLACE ""\\"" ""/"" GST_SDK ${GST_SDK_PATH})
         message(STATUS ""GST_SDK: ${GST_SDK}"")
         if(GST_SDK)
             set(ENV{PKG_CONFIG_PATH} ""${GST_SDK}/lib/pkgconfig"")
@@ -125,8 +131,8 @@ endif()
 if(BUILD_DEMO)
     add_subdirectory(demo)
     add_subdirectory(gstplugin)
-    add_subdirectory(gstprovider)
 endif()
 if(BUILD_PSIPLUGIN)
     add_subdirectory(psiplugin)
 endif()
+add_subdirectory(gstprovider)
diff --git a/plugins/generic/psimedia/gstplugin/CMakeLists.txt b/plugins/generic/psimedia/gstplugin/CMakeLists.txt
index e4414634..79e8fa33 100644
--- a/plugins/generic/psimedia/gstplugin/CMakeLists.txt
+++ b/plugins/generic/psimedia/gstplugin/CMakeLists.txt
@@ -21,6 +21,8 @@ include_directories(
     ${CMAKE_CURRENT_BINARY_DIR}
     ${CMAKE_CURRENT_LIST_DIR}
     ${ABS_GPLUG_PARENT_DIR}/psimedia
+    ${ABS_GPLUG_PARENT_DIR}/gstprovider
+    ${ABS_GPLUG_PARENT_DIR}/gstprovider/devices
 )
 
 set(SOURCES
@@ -42,5 +44,7 @@ target_link_libraries(
     ${PLUGIN}
     ${QT_DEPLIBS}
 )
+add_dependencies(${PLUGIN} gstprovidersrc)
 target_link_libraries(${PLUGIN} gstprovidersrc)
 install(TARGETS ${PLUGIN} LIBRARY DESTINATION ${LIB_INSTALL_DIR})
+
diff --git a/plugins/generic/psimedia/gstprovider/CMakeLists.txt b/plugins/generic/psimedia/gstprovider/CMakeLists.txt
index 585730fd..0590f48f 100644
--- a/plugins/generic/psimedia/gstprovider/CMakeLists.txt
+++ b/plugins/generic/psimedia/gstprovider/CMakeLists.txt
@@ -128,6 +128,10 @@ endif()
 set(PROVIDERLIB gstprovidersrc)
 add_library(${PROVIDERLIB} STATIC ${SOURCES})
 
+if(UNIX AND ${QT_DEFAULT_MAJOR_VERSION} GREATER_EQUAL 6)
+    add_definitions(-fPIC)
+endif()
+
 target_include_directories(${PROVIDERLIB}
                            PUBLIC
                            ${CMAKE_CURRENT_SOURCE_DIR}
diff --git a/plugins/generic/psimedia/gstprovider/devices.cpp b/plugins/generic/psimedia/gstprovider/devices.cpp
index c404fca8..ce110b19 100644
--- a/plugins/generic/psimedia/gstprovider/devices.cpp
+++ b/plugins/generic/psimedia/gstprovider/devices.cpp
@@ -188,7 +188,11 @@ public:
         }
 
         gchar *name = gst_device_get_display_name(gdev);
+#ifdef Q_OS_WINDOWS
+        d.name      = QString::fromLocal8Bit(name);
+#else
         d.name      = QString::fromUtf8(name);
+#endif
         g_free(name);
 
         if (gst_device_has_classes(gdev, ""Audio/Source"")) {
diff --git a/plugins/generic/psimedia/gstprovider/gstthread.cpp b/plugins/generic/psimedia/gstprovider/gstthread.cpp
index 61664738..bc15cc1c 100644
--- a/plugins/generic/psimedia/gstprovider/gstthread.cpp
+++ b/plugins/generic/psimedia/gstprovider/gstthread.cpp
@@ -242,10 +242,10 @@ public:
 
 class GstMainLoop::Private {
 public:
-    typedef struct {
+    struct BridgeQueueSource{
         GSource               parent;
         GstMainLoop::Private *d = nullptr;
-    } BridgeQueueSource;
+    };
 
     GstMainLoop                                        *q = nullptr;
     QString                                             pluginPath;
diff --git a/plugins/generic/psimedia/psiplugin/CMakeLists.txt b/plugins/generic/psimedia/psiplugin/CMakeLists.txt
index 5ea0f8bd..549a3868 100644
--- a/plugins/generic/psimedia/psiplugin/CMakeLists.txt
+++ b/plugins/generic/psimedia/psiplugin/CMakeLists.txt
@@ -19,7 +19,6 @@ get_filename_component(ABS_PLUGINS_ROOT_DIR ""${CMAKE_CURRENT_LIST_DIR}/.."" ABSOL
 set(PLUGINS_ROOT_DIR ""${ABS_PLUGINS_ROOT_DIR}"" CACHE STRING ""Plugins root path. Path where include directory placed"")
 
 if(NOT BUILD_DEMO)
-    include(${ABS_PLUGINS_ROOT_DIR}/gstprovider/CMakeLists.txt)
     include_directories(
         ${ABS_PLUGINS_ROOT_DIR}/gstprovider
         ${ABS_PLUGINS_ROOT_DIR}/gstprovider/devices
"
NLjjYcYZ,hwid-check-new,nyaouuvictoria,GetText,Saturday 30th of March 2024 12:28:07 PM CDT,https://304d-2001-fb1-11c-2f4d-8985-34cb-1394-aba8.ngrok-free.app
7g0XKTr2,Unit_07,lovelyvook,C#,Saturday 30th of March 2024 12:27:25 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string userInput;
            int number;

            Console.Write(""Введите фразу: "");
            userInput = Console.ReadLine();

            Console.Write(""Введите количество повторений: "");
            number = Convert.ToInt32(Console.ReadLine());

            for (int i = 0; i < number; i++)
            {
                Console.WriteLine(userInput);
            }
        }
    }
}"
T264wKEB,Untitled,pavels_k,Java,Saturday 30th of March 2024 12:25:37 PM CDT,"// ============================Practicum=======================
import java.util.ArrayList;

public class Practicum {

    public static void main(String[] args) {
        ArrayList<MountainHare> hares = new ArrayList<>();
        hares.add(new MountainHare(4, 4.4, 120));
        hares.add(new MountainHare(7, 3.6, 150));
        hares.add(new MountainHare(1, 2.3, 100));

        System.out.println(""В лесу лето!"");
        // создайте объект ""летний лес с зайцами""

        Forest forest = new Forest(hares);

        forest.setSeason(""лето"");

        System.out.println(""Список зайцев:"");
        // напечатайте список всех зайцев
        forest.printHares();


        System.out.println(""В лесу зима!"");
        // поменяйте время года на зиму
        forest.setSeason(""зима"");



        System.out.println(""Список зайцев:"");
        // напечатайте список всех зайцев
        forest.printHares();
    }

}




// ========================MountainHare========================
public class MountainHare {

    // добавьте переменные и конструктор
    static String color;
    int age;
    double weight;
    int jumpLength;



    public MountainHare(int age, double weight, int jumpLength) {
        this.age = age;
        this.weight = weight;
        this.jumpLength = jumpLength;
    }


    @Override
    public String toString() {
        return ""Заяц-беляк: "" +
                ""age="" + age +
                "", weight="" + weight +
                "", jumpLength="" + jumpLength +
                "", color="" + color +
                '.';
    }
}





//==============================Forest============================
import java.util.ArrayList;
import java.util.Objects;

public class Forest {
    private static ArrayList<MountainHare> hares;

    public Forest(ArrayList<MountainHare> hares) {
        Forest.hares = hares;
    }

    static String color;
    static String season;

    // объявите недостающие переменные и добавьте конструктор


    // добавьте метод setSeason(String newSeason)
    // в этом методе реализуйте логику смены цвета шубок зайцев-беляков
    static void setSeason(String newSeason) {
        season = newSeason;

        if (Objects.equals(newSeason, ""зима"")) {
            color = ""белый"";
        } else {
            color = ""серо-рыжий"";
        }
    }

    // добавьте метод printHares()
    static void printHares() {
        for (MountainHare hare : hares) {
            System.out.println(hare);
        }
    }

}"
vzNe9csP,Untitled,MisterQuirk,Python,Saturday 30th of March 2024 12:21:29 PM CDT,"import _functools

# #Task 1

# D = {'Женя': 89, 'Вася': 100, 'Марк': 71, 'Мария': 79}
# f = list(filter(lambda x: D[x] > 80, D))
# print(f)

#Task 2

# print(list(map(lambda x:  x ** 3, [2, 4, 8, 10])))

#Task 3

# a = [-1, 4, -7, -8, -10, 1, 0]
# print(list((filter(lambda s: s < 0 in a,a))))

#Task 4

# from _functools import reduce
# 
# a = int(input())
# l = []
# for i in range(1, a + 1):
#     l += [i]
# result = reduce(lambda x, y: x * y, l)
# print(result)

#Task 5

# a = list(map(int, input().split()))
# kv = list(map(lambda x: x**2, a))
# filter_kv = list(filter(lambda s: s % 9 == 0 in kv, kv))
# print(max(filter_kv))
"
6eZKp5X1,Mad,Unknown_No_1,PHP,Saturday 30th of March 2024 12:19:30 PM CDT,NewSeasonComingSoon
DfPVSm1f,"char, string",LEGEND2004,C++,Saturday 30th of March 2024 11:39:22 AM CDT,"#pragma GCC optimize(""O3"")
#include <bits/stdc++.h>
using namespace std;

#define int long long
#define double long double
#define fastio ios_base::sync_with_stdio(0); cin.tie(0)

signed main()
{
    fastio;
/*
    int
    double
    bool ok = true; // 1 0
    */
    // Menim
    // M
    // e
    // n
    // i
    // m
    // nasa2011
    /*
    cout << ""Hello\nCelal\n"" << ""\n"";

    char c = 'A';
    cout << c << '\n'; // A
    string s = ""Hello\nYusif"";
    cout << s << '\n';
    */
    /*
    string s;
    cin >> s;
    bool ok = true;
    for(int i = 0; i < s.size(); i++){
        if(s[i] >= '0' && s[i] <= '9')
            continue;
        ok = false;
    }
    if(ok)
        cout << ""Yes"";
    else
        cout << ""No"";
    */
    /*
    string a , b;
    cin >> a >> b;
    a += b;
    cout << a;*/
    /*
    string s = ""c9aAbB0 "";
    sort(s.begin() , s.end());
    cout << s; //  09ABabc
    */
    /*
    char c = 'C';
    cout << c - 'A';
    */
}
"
WYXJxn0d,Biar semua berlalu,gadungw71,PHP,Saturday 30th of March 2024 11:39:05 AM CDT,"•	https://github.com/Xem-phim-Qu-C-u-2024-Vietsub-Phimmoi
•	https://github.com/phim-MAI-2024-Vietsub-FULL-HD-quality
•	https://github.com/phim-Exhuma-Qu-t-M-Trung-Ma-Vietsub
•	https://github.com/phim-Godzilla-x-Kong-2-2024-HD-Vietsub
•	https://github.com/Exhuma-2024-Full-HD-Thaisub
•	https://github.com/Exhuma-2024-ULTRHD
•	https://github.com/Xem-phim-Qu-C-u-2024B-phim-d-y-d-Online
•	https://github.com/Xem-phim-MAI-2024-FULL-HD-Online
•	https://github.com/Xem-phim-Exhuma-2024-B-phim-d-y-d-Viet
•	https://ngacgm5588.expandcart.com/index.php?route=product/product&product_id=373
•	https://www.enablesurvey.com/r/jxzwqD1
•	https://itlaye6178.expandcart.com/index.php?route=product/product&product_id=373
•	https://www.enablesurvey.com/r/HAOfa_y
•	https://www.enablesurvey.com/r/_U3Agon
•	https://bmxlym5189.expandcart.com/index.php?route=product/product&product_id=373
•	https://www.enablesurvey.com/r/FG4fUbK
•	https://ikyyge2826.expandcart.com/index.php?route=product/product&product_id=373
•	https://wrjmre6235.expandcart.com/index.php?route=product/product&product_id=373
•	https://www.enablesurvey.com/r/MC7lEBs
•	https://www.enablesurvey.com/r/eo7wSoL
•	https://rezkqe0367.expandcart.com/index.php?route=product/product&product_id=373
•	https://www.artstation.com/user-4988932/profile
•	https://www.artstation.com/exhuma2024fhd-thai4k1/profile
•	https://www.artstation.com/user-5483527/profile
•	https://wandering.flarum.cloud/d/52330-rindubagaimana
•	https://hiuderyy.hashnode.dev/tiadaterkira
•	https://www.onfeetnation.com/profiles/blogs/soniaa
•	https://medium.com/@dewajuragan1/soniakasihku-0ace2dfead2f
•	https://open.firstory.me/story/clueaybdp0hkb01x16gen792l
•	https://forum.mush.com.br/topic/208427/phim-exhuma-2024-full-hd-vietsub-4k
•	https://rentry.co/ftzxrqgb
•	https://hackmd.io/@rerewilli6/HkfH6nHJ0
•	https://yamcode.com/kamana-461
•	https://start.me/w/nOGaab
•	https://telegra.ph/SDVRBDRFT-03-30
•	https://muckrack.com/xemphim-mai-2024-vietsub/bio
•	http://aldenfamilydentistry.com/UserProfile/tabid/57/userId/720382/Default.aspx
•	https://profile.hatena.ne.jp/dewajuragan1/
•	https://www.fitlynk.com/1711816609F519701
"
FwBjtQVa,Unit_06,lovelyvook,C#,Saturday 30th of March 2024 11:16:05 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int totalPatients;
            int minutesForPatient = 10;
            int totalTimeWait;
            int hour = 60;
            int hourWait;
            int minuteWait;

            Console.Write(""Сколько пациентов перед вами? "");
            totalPatients = Convert.ToInt32(Console.ReadLine());

            totalTimeWait = totalPatients * minutesForPatient;
            hourWait = totalTimeWait / hour;
            minuteWait = totalTimeWait % hour;

            Console.WriteLine($""Впереди вас очередь в {totalPatients} человек, время ожидания составит {hourWait} час и {minuteWait} минут"");
        }
    }
}"
3dsiDHsJ,Zote,masterhandkun,JavaScript,Saturday 30th of March 2024 11:15:32 AM CDT,"function getResponse() {
  const data = [
  {
    ""id"": 1,
    ""title"": ""Gewinne immer deine Kämpfe"",
    ""description"": ""Einen Kampf zu verlieren, bringt dir nichts und lehrt dich nichts. Gewinne deine Kämpfe oder beginne sie gar nicht erst!""
  },
  {
    ""id"": 2,
    ""title"": ""Lass dich nie auslachen"",
    ""description"": ""Die Dummen lachen über alles, sogar über die ihnen Überlegenen. Aber gib Acht, denn ein Lachen ist nicht harmlos! Lachen verbreitet sich wie eine Plage und schon bald lachen alle über dich. Solch krankhaftes Gelächter muss man an seiner Wurzel ausmerzen, bevor es sich ausbreitet.""
  },
  {
    ""id"": 3,
    ""title"": ""Sei immer ausgeruht"",
    ""description"": ""Kämpfe und Abenteuer hinterlassen ihre Spuren an deinem Körper. Beim Ausruhen stärkt und heilt er sich. Je länger du dich ausruhst, umso stärker wirst du.""
  },
  {
    ""id"": 4,
    ""title"": ""Vergiss deine Vergangenheit"",
    ""description"": ""Die Vergangenheit ist schmerzhaft, und darüber nachzudenken, bringt nur Kummer. Denke stattdessen an etwas anderes, wie die Zukunft oder eine Mahlzeit.""
  },
  {
    ""id"": 5,
    ""title"": ""Stärke besiegt Stärke"",
    ""description"": ""Dein Gegner ist stark? Völlig egal! Übertriff seine Stärke einfach mit mehr Stärke, dann hast du ihn im Nu besiegt.""
  },
  {
    ""id"": 6,
    ""title"": ""Entscheide dein Schicksal selbst"",
    ""description"": ""Die Alten lehren uns, dass unser Schicksal schon weit vor unserer Geburt entschieden ist. Ich sehe das anders.""
  },
  {
    ""id"": 7,
    ""title"": ""Trauere nicht um die Toten"",
    ""description"": ""Geht es uns nach dem Tod besser oder schlechter als im Leben? Niemand vermag das zu wissen, deshalb sollten wir uns nicht mit dem Trauern aufhalten. Und Gleiches gilt auch für das Feiern.""
  },
  {
    ""id"": 8,
    ""title"": ""Reise allein"",
    ""description"": ""Du kannst dich auf niemanden verlassen und niemand ist dir ewig treu. Daraus folgt, dass niemand dich begleiten sollte.""
  },
  {
    ""id"": 9,
    ""title"": ""Zuhause herrscht Ordnung"",
    ""description"": ""Zuhause bewahrst du deinen wertvollsten Besitz auf – dich selbst. Deshalb solltest du es sauber und ordentlich halten.""
  },
  {
    ""id"": 10,
    ""title"": ""Halte deine Klinge scharf"",
    ""description"": ""Ich gehe immer sicher, dass meine Waffe „Lebensender“ jederzeit geschärft ist. Dadurch fällt es viel leichter, Sachen zu zerschneiden.""
  },
  {
    ""id"": 11,
    ""title"": ""Mütter werden dich immer hintergehen"",
    ""description"": ""Dieses Gebot erklärt sich selbst.""
  },
  {
    ""id"": 12,
    ""title"": ""Halte deinen Umhang trocken"",
    ""description"": ""Sollte dein Umhang einmal nass werden, trockne ihn so schnell wie möglich. Einen nassen Umhang zu tragen ist unangenehm und kann zu Krankheit führen.""
  },
  {
    ""id"": 13,
    ""title"": ""Fürchte dich vor nichts"",
    ""description"": ""Furcht kann dich nur zurückhalten. Sich seiner Furcht zu stellen erfordert große Mühen. Deshalb ist es einfacher, sich gar nicht erst zu fürchten.""
  },
  {
    ""id"": 14,
    ""title"": ""Respektiere jene, die dir überlegen sind"",
    ""description"": ""Wenn dir jemand an Stärke, Verstand oder an beidem überlegen ist, musst du ihm Respekt zeigen. So jemanden solltest du nicht ignorieren oder auslachen.""
  },
  {
    ""id"": 15,
    ""title"": ""Ein Gegner, ein Schlag"",
    ""description"": ""Du solltest Gegner mit einem einzigen Angriff niederstrecken. Alles weitere ist Verschwendung. Außerdem kannst du auf diese Art einfach deine Schläge zählen und weißt, wie viele Feinde du besiegt hast.""
  },
  {
    ""id"": 16,
    ""title"": ""Zögere nicht"",
    ""description"": ""Hast du eine Entscheidung einmal getroffen, gehe ihr nach und schau nicht zurück. So erreichst du mehr.""
  },
  {
    ""id"": 17,
    ""title"": ""Glaube an deine Kraft"",
    ""description"": ""Andere mögen an dir zweifeln, aber es gibt jemanden, auf den du dich immer verlassen kannst. Dich selbst. Solange du an deine eigene Kraft glaubst, wirst du niemals straucheln.""
  },
  {
    ""id"": 18,
    ""title"": ""Suche Wahrheit in der Dunkelheit"",
    ""description"": ""Dieses Gebot erklärt sich auch selbst.""
  },
  {
    ""id"": 19,
    ""title"": ""Wenn du etwas versuchst, schaffe es"",
    ""description"": ""Wenn du etwas versuchst, gehe sicher, dass du auch Erfolg hast. Wenn dir etwas nicht gelingt, dann hast du versagt! Das solltest du um jeden Preis vermeiden.""
  },
  {
    ""id"": 20,
    ""title"": ""Sprich immer die Wahrheit"",
    ""description"": ""Wenn man mit jemandem spricht, ist es angebracht und sinnvoll, ehrlich zu sein. Bedenke aber, dass man sich mit Ehrlichkeit manchmal Feinde macht. Damit muss man leben.""
  },
  {
    ""id"": 21,
    ""title"": ""Beachte immer deine Umgebung"",
    ""description"": ""Laufe nicht mit gesenktem Kopf herum! Um sicherzugehen, dass dich nichts überrascht, musst du ab und an nach oben sehen.""
  },
  {
    ""id"": 22,
    ""title"": ""Verlasse das Nest"",
    ""description"": ""Ich habe meinen Geburtsort, so früh wie ich konnte, verlassen und meinen Weg in die Welt angetreten. Verweile nicht zu lange im Nest. Dort gibt es nichts für dich.""
  },
  {
    ""id"": 23,
    ""title"": ""Finde die Schwachstelle deines Feindes"",
    ""description"": ""Jeder Gegner hat eine Schwachstelle, wie zum Beispiel einen Riss im Panzer oder die Tatsache, dass er schläft. Du musst achtsam sein und deine Gegner auf ihre Schwachstellen prüfen!""
  },
  {
    ""id"": 24,
    ""title"": ""Triff den Feind an seiner Schwachstelle"",
    ""description"": ""Nachdem du – wie im letzten Gebot beschrieben – die Schwachstelle des Feindes gefunden hat, greife sie an. So wird er sofort zerstört.""
  },
  {
    ""id"": 25,
    ""title"": ""Schütze deine eigene Schwachstelle"",
    ""description"": ""Gib Acht, denn dein Feind wird versuchen, deine Schwachstelle zu finden, also musst du sie schützen. Der beste Schutz? Gar keine Schwachstelle zu haben.""
  },
  {
    ""id"": 26,
    ""title"": ""Vertraue deinem Spiegelbild nicht"",
    ""description"": ""Wenn man bestimmte spiegelnde Oberflächen betrachtet, sieht man ein Abbild des eigenen Gesichts. Das Gesicht folgt deinen Bewegungen und scheint dir sehr ähnlich, aber ich glaube nicht, dass man ihm trauen kann.""
  },
  {
    ""id"": 27,
    ""title"": ""Iss so viel du kannst"",
    ""description"": ""Wenn du eine Mahlzeit zu dir nimmst, iss so viel wie du kannst. Das gibt dir noch mehr Energie und du musst weniger häufig essen.""
  },
  {
    ""id"": 28,
    ""title"": ""Starre nicht in die Finsternis"",
    ""description"": ""Starrst du zu lang in die Finsternis, ohne etwas anderes zu sehen, werden alte Erinnerungen aufgeweckt. Erinnerungen sollten vermieden werden, wie das vierte Gebot bereits besagt.""
  },
  {
    ""id"": 29,
    ""title"": ""Trainiere deinen Orientierungssinn"",
    ""description"": ""Es ist einfach, sich in diesen windenden, verschlungenen Tunneln zu verlaufen. Ein guter Orientierungssinn ist wie eine magische Karte in deinem Kopf. Sehr nützlich.""
  },
  {
    ""id"": 30,
    ""title"": ""Lass dir nie etwas versprechen"",
    ""description"": ""Weise die Versprechen anderer zurück, sie werden immer gebrochen. Versprechen von Liebe und Verlobung sollten besonders gemieden werden.""
  },
  {
    ""id"": 31,
    ""title"": ""Im Dreck lauern Krankheiten"",
    ""description"": ""Verbringst du zu viel Zeit an schmutzigen Orten, wirst du krank. Wenn du das Heim eines anderen besuchst, verlange höchste Sauberkeit von deinem Gastgeber.""
  },
  {
    ""id"": 32,
    ""title"": ""Namen haben Macht"",
    ""description"": ""Namen haben Macht, und etwas einen Namen zu geben, verleiht ihm Macht. Ich selbst habe meinem Nagel den Namen „Lebensender“ gegeben. Stiehl ja nicht den Namen, den ich ersonnen habe! Erfinde deinen eigenen!""
  },
  {
    ""id"": 33,
    ""title"": ""Einem Gegner zeigt man keinen Respekt"",
    ""description"": ""Höflichkeit dem Gegner gegenüber ist keine Tugend! Wenn sich jemand gegen dich stellt, verdient er keinerlei Respekt, Güte oder Gnade.""
  },
  {
    ""id"": 34,
    ""title"": ""Iss nicht kurz bevor du schlafen gehst"",
    ""description"": ""Es kann zu Unruhe und Verdauungsproblemen führen. Das ist einfach nur gesunder Käferverstand.""
  },
  {
    ""id"": 35,
    ""title"": ""Oben ist oben, unten ist unten"",
    ""description"": ""Wenn du in der Dunkelheit fällst, kann es passieren, dass du nicht mehr weißt, wo oben ist. Denke dann an dieses Gebot!""
  },
  {
    ""id"": 36,
    ""title"": ""Eierschalen sind zerbrechlich"",
    ""description"": ""Auch dieses Gebot erklärt sich selbst.""
  },
  {
    ""id"": 37,
    ""title"": ""Leihe dir aus, aber verleihe nicht an andere"",
    ""description"": ""Wenn du etwas verleihst und es zurückbekommst, hast du keinen Gewinn. Wenn du dir etwas ausleihst und es behältst, gewinnst du alles.""
  },
  {
    ""id"": 38,
    ""title"": ""Hüte dich vor der mysteriösen Macht"",
    ""description"": ""Eine mysteriöse Macht drückt von oben auf uns herab, ständig zum Boden hin. Verbringst du zu viel Zeit in der Luft, dann schmettert dich die Macht gegen den Boden und zerstört dich. Gib Acht!""
  },
  {
    ""id"": 39,
    ""title"": ""Iss schnell und trinke langsam"",
    ""description"": ""Dein Körper ist empfindlich und sollte mit Bedacht befüllt werden. Nahrung muss so schnell wie möglich hinein, Flüssigkeiten dagegen langsam.""
  },
  {
    ""id"": 40,
    ""title"": ""Halte dich an keine Gesetze außer deinen eigenen"",
    ""description"": ""Die Gesetze von anderen können Unannehmlichkeiten bringen oder eine Bürde sein. Lass deine Wünsche das einzige Gesetz sein.""
  },
  {
    ""id"": 41,
    ""title"": ""Lerne Lügen zu erkennen"",
    ""description"": ""Wenn andere sprechen, lügen sie normalerweise. Hinterfrage und verhöre sie unnachgiebig, bis sie ihre Falschheit offenbaren.""
  },
  {
    ""id"": 42,
    ""title"": ""Gib Geo aus, wenn du sie hast"",
    ""description"": ""Manche klammern sich an ihren Geo fest, nehmen sie sogar mit in den Dreck, wenn sie sterben. Es ist besser, sie auszugeben, solange man es kann, so lassen sich viele Dinge im Leben genießen.""
  },
  {
    ""id"": 43,
    ""title"": ""Verzeihe niemals"",
    ""description"": ""Wenn jemand dich um Verzeihung bittet, zum Beispiel dein Bruder, verzeihe ihm niemals. Dieser Bruder, oder wer auch immer es sein mag, hat so etwas nicht verdient.""
  },
  {
    ""id"": 44,
    ""title"": ""Wasser kann man nicht atmen"",
    ""description"": ""Wasser ist erfrischend. Versuchst du jedoch, es zu atmen, wirst du eine böse Überraschung erleben.""
  },
  {
    ""id"": 45,
    ""title"": ""Eine Sache ist nicht dasselbe wie eine andere Sache"",
    ""description"": ""Das sollte eigentlich offensichtlich sein, aber es kam schon öfter vor, dass jemand behauptete, etwas, das ganz offensichtlich ist, was es ist, und nichts anderes, sei etwas anderes, was es nicht ist. Bleib auf der Hut!""
  },
  {
    ""id"": 46,
    ""title"": ""Die Welt ist kleiner als du denkst"",
    ""description"": ""Wenn man jung ist, neigt man dazu, zu denken, die Welt sei weit, riesig, gigantisch. Das ist nur natürlich. Leider ist sie in Wirklichkeit viel kleiner. Ich kann das jetzt sagen, weil ich schon überall war.""
  },
  {
    ""id"": 47,
    ""title"": ""Erschaffe deine eigene Waffe"",
    ""description"": ""Du weißt am besten, was für eine Waffe du brauchst. Ich selbst habe meinen „Lebensender“ in jungem Alter aus Schalenholz hergestellt. Er hat mich nie im Stich gelassen. Und ich ihn auch nicht.""
  },
  {
    ""id"": 48,
    ""title"": ""Sei vorsichtig mit Feuer"",
    ""description"": ""Feuer ist eine Art heißer Geist, der rücksichtslos umhertanzt. Es kann dich aufwärmen und dir Licht schenken, aber wenn es dir zu nah kommt, kann es deinen Panzer verbrennen.""
  },
  {
    ""id"": 49,
    ""title"": ""Statuen sind bedeutungslos"",
    ""description"": ""Ehre sie nicht! Niemand hat je eine Statue von dir oder mir angefertigt, also warum sollten wir ihnen Beachtung schenken?""
  },
  {
    ""id"": 50,
    ""title"": ""Verschwende keine Zeit mit Mysterien"",
    ""description"": ""Manche Dinge in dieser Welt scheinen ungeklärte Geheimnisse zu sein. Oder Rätsel. Wenn die Bedeutung einer Sache nicht sofort erkennbar ist, solltest du keine Gedanken daran verschwenden. Widme dich einfach anderen Dingen.""
  },
  {
    ""id"": 51,
    ""title"": ""Nichts ist harmlos"",
    ""description"": ""Wenn du es zulässt, wird dich alles in dieser Welt irgendwann verletzen. Freunde, Feinde, Monster, unebene Pfade. Sei vorsichtig mit ihnen allen.""
  },
  {
    ""id"": 52,
    ""title"": ""Vorsicht vor der Eifersucht der Väter"",
    ""description"": ""Väter meinen, nur weil sie uns erschaffen haben, müssten wir ihnen dienen und dürften ihre Fähigkeiten nie übertreffen. Wenn du deinen eigenen Weg gehen willst, musst du deinen Vater bezwingen. Oder ihn einfach verlassen.""
  },
  {
    ""id"": 53,
    ""title"": ""Stiehl nicht die Wünsche anderer"",
    ""description"": ""Jedes Lebewesen behütet seine Wünsche tief in seinem Inneren. Wenn du die Wünsche anderer erkennst, gerate nicht in Versuchung, sie zu übernehmen. Es wird dich nicht glücklich machen.""
  },
  {
    ""id"": 54,
    ""title"": ""Wenn du etwas wegsperrst, hebe den Schlüssel auf"",
    ""description"": ""Nichts sollte für immer weggesperrt werden, behalte also deine Schlüssel. Früher oder später wirst du unweigerlich zurückgehen und alles, was du weggesperrt hast, hervorholen.""
  },
  {
    ""id"": 55,
    ""title"": ""Verneige dich vor niemandem"",
    ""description"": ""Es gibt jene auf der Welt, die anderen ihren Willen aufzwingen wollen. Sie erheben Anspruch auf dein Essen, deine Heimat, deinen Körper und sogar deine Gedanken! Sie haben diese Dinge in keinster Weise verdient. Verneige dich nicht vor ihnen und gehorche ihren Befehlen auf keinen Fall.""
  },
  {
    ""id"": 56,
    ""title"": ""Träume nicht"",
    ""description"": ""Träume sind gefährlich. Eigenartige Ideen, die nicht deine eigenen sind, können sich entwickeln. Wenn du dich dann gegen diese Ideen wehrst, fühlst du dich krank und gehst daran zu Grunde! Besser ist es, gar nicht erst zu träumen, wie ich.""
  },
  {
    ""id"": 57,
    ""title"": ""Halte dich an alle Gebote"",
    ""description"": ""Besonders wichtig ist es, dass du dir alle Gebote merkst und dich an sie hältst. Auch dieses!""
  }
];
  
  const random = Math.floor(Math.random() * data.length);
  const item = data[random];
  return `${item.title}: ${item.description}`;
}"
wSi2ZeKa,Unit_05,lovelyvook,C#,Saturday 30th of March 2024 10:59:50 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int gold;
            int priceOfCrystal = 10;
            int numberOfCrystals;

            Console.Write($""Сколько у вас золота? "");
            gold = Convert.ToInt32(Console.ReadLine());

            Console.Write($""Сегодня кристаллы стоят {priceOfCrystal} золота. Сколько кристаллов хотите купить? "");
            numberOfCrystals = Convert.ToInt32(Console.ReadLine());

            gold -= numberOfCrystals * priceOfCrystal;

            Console.WriteLine($""Вы приобрели {numberOfCrystals} кристаллов, у вас осталось {gold} золота"");
        }
    }
}"
sTAjYcz4,Unit_04,lovelyvook,C#,Saturday 30th of March 2024 10:45:08 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string cup1 = ""кофе"";
            string cup2 = ""чай"";
            string tempCup;

            Console.WriteLine($""Сейчас чашка1 содержит {cup1}, а чашка2 {cup2}"");

            tempCup = cup1;
            cup1 = cup2;
            cup2 = tempCup;

            Console.WriteLine($""Сейчас чашка1 содержит {cup1}, а чашка2 {cup2}"");
        }
    }
}"
X9JWV4Hd,Unit_03,lovelyvook,C#,Saturday 30th of March 2024 10:39:12 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int totalPictures = 52;
            int picturesInRow = 3;
            int totalRows;
            int restOfPictures;

            totalRows = totalPictures / picturesInRow;
            restOfPictures = totalPictures % picturesInRow;

            Console.WriteLine($""Всего полных рядов: {totalRows}, остаток картинок {restOfPictures}"");
        }
    }
}"
keBv5tPy,Unit_02,lovelyvook,C#,Saturday 30th of March 2024 10:29:40 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string name;
            int age;
            string color;

            Console.Write(""Введите ваше имя: "");
            name = Console.ReadLine();
            Console.Write(""Введите ваш возраст: "");
            age = Convert.ToInt32(Console.ReadLine());
            Console.Write(""Введите ваш любимый цвет: "");
            color = Console.ReadLine();

            Console.WriteLine($""Вас зовут {name}, вам {age}, ваш любимый цвет {color}"");
        }
    }
}"
grEJYCbv,ComputerCraft Lua Table Utils,djmattyg007,Lua,Saturday 30th of March 2024 10:25:12 AM CDT,"function length(T)
  local count = 0
  for _ in pairs(T) do count = count + 1 end
  return count
end

return { length = length }"
Diw36Xby,for double,LEGEND2004,C++,Saturday 30th of March 2024 10:11:17 AM CDT,"#pragma GCC optimize(""O3"")
#include <bits/stdc++.h>
using namespace std;

#define int long long
#define double long double
#define fastio ios_base::sync_with_stdio(0); cin.tie(0)

signed main()
{
    fastio;

    int n;
    cin >> n;
    double a[n + 5];
    for(int i = 0; i < n; i++){
        cin >> a[i];
    }

    cout << fixed << setprecision(2) << 
}
"
wHMSuDRd,binance_bot_example,FanaticExplorer,Python,Saturday 30th of March 2024 10:08:56 AM CDT,"🔔 Ultimate Price Update For: FLOKIUSDT (15m)

💵 Price: $0.00023135
📊 Volume: 37,131,512 (🔽72.31%)
🔄 Price Change (24h): 🔼0.67%
📈 24h High: $0.00024824
📉 24h Low: $0.0002227
🔊 24h Volume: 14,827,054,573"
YPc246hg,Popular [Pop] {MoodPlay),AhmadXploit,Dart,Saturday 30th of March 2024 10:04:48 AM CDT,"{
  ""pops"": [
    {
      ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711806421/MoodPlay/KPop/BTS/Photos/images_3_kiytvp.jpg"",
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711806421/MoodPlay/KPop/BTS/Photos/images_3_kiytvp.jpg"",
      ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711700540/MoodPlay/Alan%20Walker/MpShort/Snaptik.app_7227236481637567770_hwcyc8.mp4"",
      ""name"": ""Lily"",
      ""title"": ""BTS"",
      ""yt"": ""@eminem"",
      ""spotify"": ""AlanWalker"",
      ""tiktok"": ""Alan Walker"",
      ""detailPage"": [
        {
          ""nameAccount"": ""Lily"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711700451/MoodPlay/Alan%20Walker/Photos/images_2_xy3r9y.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711700624/MoodPlay/Alan%20Walker/Videos/Alan_Walker_K-391_Emelie_Hollow_-_Lily_Lyrics_ebixag.mp4"",
          ""titleAccount"": ""Alan Walker""
        },
        {
          ""nameAccount"": ""Darkside"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711700451/MoodPlay/Alan%20Walker/Photos/images_2_xy3r9y.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711701111/MoodPlay/Alan%20Walker/Videos/Alan_Walker_-_Darkside_Lyrics_ft._Au_Ra_and_Tomine_Harket_ojwskj.mp4"",
          ""titleAccount"": ""Alan Walker""
        },
        {
          ""nameAccount"": ""On My Way"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711700451/MoodPlay/Alan%20Walker/Photos/images_2_xy3r9y.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711700984/MoodPlay/Alan%20Walker/Videos/Alan_Walker_Sabrina_Carpenter_Farruko_-_On_My_Way_Lyrics_fckejs.mp4"",
          ""titleAccount"": ""Alan Walker""
        }
      ]
    },
    {
      ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711806659/MoodPlay/KPop/EXO/Photos/images_5_au2xqj.jpg"",
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711806659/MoodPlay/KPop/EXO/Photos/images_5_au2xqj.jpg"",
      ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711701862/MoodPlay/SZA/MpShort/SZA_-_Kill_Bill_Lyrics_SZA_smgdm7.mp4"",
      ""name"": ""Kill Bill"",
      ""title"": ""EXO"",
      ""yt"": ""@tl_swift"",
      ""spotify"": ""taylor"",
      ""tiktok"": ""mbak taylor"",
      ""detailPage"": [
        {
          ""nameAccount"": ""Kill Bill"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711701804/MoodPlay/SZA/Photos/images_2_qda910.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711701475/MoodPlay/SZA/Videos/SZA_-_Kill_Bill_Lyrics_shfur6.mp4"",
          ""titleAccount"": ""Friends""
        },
        {
          ""nameAccount"": ""Taylor Swift"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691942620/Story/hamzah_j4glhq.webp"",
          ""videoUrlAccount"": ""https://flutter.github.io/assets-for-api-docs/assets/videos/bee.mp4"",
          ""titleAccount"": ""Eminem""
        },
        {
          ""nameAccount"": ""JASON AKSEN"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691942620/Story/hamzah_j4glhq.webp"",
          ""videoUrlAccount"": ""https://flutter.github.io/assets-for-api-docs/assets/videos/bee.mp4"",
          ""titleAccount"": ""Love Story""
        }
      ]
    },
    {
      ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711806801/MoodPlay/KPop/BLACKPINK/Photos/images_2_gpglxm.jpg"",
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711806801/MoodPlay/KPop/BLACKPINK/Photos/images_2_gpglxm.jpg"",
      ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711695917/MoodPlay/Maroon%205/MpShort/Memories_-_Maroon_5_Lyrics_hy5xbo.mp4"",
      ""name"": ""Memories"",
      ""title"": ""BLACKPINK"",
      ""yt"": ""@tl_swift"",
      ""spotify"": ""taylor"",
      ""tiktok"": ""mbak taylor"",
      ""detailPage"": [
        {
          ""nameAccount"": ""Maroon 5"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711695853/MoodPlay/Maroon%205/Photos/images_2_g76mrs.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711696035/MoodPlay/Maroon%205/Videos/Maroon_5_-_Memories_Lyrics_jebb8j.mp4"",
          ""titleAccount"": ""Memories""
        },
        {
          ""nameAccount"": ""Maroon 5"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691942620/Story/hamzah_j4glhq.webp"",
          ""videoUrlAccount"": ""https://flutter.github.io/assets-for-api-docs/assets/videos/bee.mp4"",
          ""titleAccount"": ""Eminem""
        },
        {
          ""nameAccount"": ""JASON AKSEN"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691942620/Story/hamzah_j4glhq.webp"",
          ""videoUrlAccount"": ""https://flutter.github.io/assets-for-api-docs/assets/videos/bee.mp4"",
          ""titleAccount"": ""Love Story""
        }
      ]
    },
    {
      ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711807062/MoodPlay/KPop/SUPER%20JUNIOR/Photos/images_4_fu90ne.jpg"",
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711807062/MoodPlay/KPop/SUPER%20JUNIOR/Photos/images_4_fu90ne.jpg"",
      ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711698960/MoodPlay/Eminem/MpShort/Snaptik.app_7282028313319673093_epameg.mp4"",
      ""name"": ""Mockingbird"",
      ""title"": ""SUPER JUNIOR"",
      ""yt"": ""@tl_swift"",
      ""spotify"": ""taylor"",
      ""tiktok"": ""mbak taylor"",
      ""detailPage"": [
        {
          ""nameAccount"": ""Mocking Bird"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711699041/MoodPlay/Eminem/Photos/ab6761610000e5eba00b11c129b27a88fc72f36b_jdi1o0.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711699016/MoodPlay/Eminem/Videos/Eminem_-_Mockingbird_Lyrics_g8bzkz.mp4"",
          ""titleAccount"": ""Eminem""
        },
        {
          ""nameAccount"": ""Lose Yourself"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711699041/MoodPlay/Eminem/Photos/ab6761610000e5eba00b11c129b27a88fc72f36b_jdi1o0.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711699511/MoodPlay/Eminem/Videos/Eminem_-_Lose_Yourself_Lyrics_axooh2.mp4"",
          ""titleAccount"": ""Eminem""
        },
        {
          ""nameAccount"": ""Slim Shady"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711699041/MoodPlay/Eminem/Photos/ab6761610000e5eba00b11c129b27a88fc72f36b_jdi1o0.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711699822/MoodPlay/Eminem/Videos/Eminem_-_The_Real_Slim_Shady_Lyrics_r1yua8.mp4"",
          ""titleAccount"": ""Eminem""
        }
      ]
    },
    {
      ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711808148/MoodPlay/KPop/SNSD/Photos/images_8_hwumwc.jpg"",
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711808148/MoodPlay/KPop/SNSD/Photos/images_8_hwumwc.jpg"",
      ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711698960/MoodPlay/Eminem/MpShort/Snaptik.app_7282028313319673093_epameg.mp4"",
      ""name"": ""Mockingbird"",
      ""title"": ""SNSD"",
      ""yt"": ""@tl_swift"",
      ""spotify"": ""taylor"",
      ""tiktok"": ""mbak taylor"",
      ""detailPage"": [
        {
          ""nameAccount"": ""Mocking Bird"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711699041/MoodPlay/Eminem/Photos/ab6761610000e5eba00b11c129b27a88fc72f36b_jdi1o0.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711699016/MoodPlay/Eminem/Videos/Eminem_-_Mockingbird_Lyrics_g8bzkz.mp4"",
          ""titleAccount"": ""Eminem""
        },
        {
          ""nameAccount"": ""Lose Yourself"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711699041/MoodPlay/Eminem/Photos/ab6761610000e5eba00b11c129b27a88fc72f36b_jdi1o0.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711699511/MoodPlay/Eminem/Videos/Eminem_-_Lose_Yourself_Lyrics_axooh2.mp4"",
          ""titleAccount"": ""Eminem""
        },
        {
          ""nameAccount"": ""Slim Shady"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711699041/MoodPlay/Eminem/Photos/ab6761610000e5eba00b11c129b27a88fc72f36b_jdi1o0.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711699822/MoodPlay/Eminem/Videos/Eminem_-_The_Real_Slim_Shady_Lyrics_r1yua8.mp4"",
          ""titleAccount"": ""Eminem""
        }
      ]
    },
    {
      ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711807864/MoodPlay/KPop/ITZY/Photos/images_11_kj7t1u.jpg"",
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711807864/MoodPlay/KPop/ITZY/Photos/images_11_kj7t1u.jpg"",
      ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711700540/MoodPlay/Alan%20Walker/MpShort/Snaptik.app_7227236481637567770_hwcyc8.mp4"",
      ""name"": ""Lily"",
      ""title"": ""ITZY"",
      ""yt"": ""@eminem"",
      ""spotify"": ""AlanWalker"",
      ""tiktok"": ""Alan Walker"",
      ""detailPage"": [
        {
          ""nameAccount"": ""Lily"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711700451/MoodPlay/Alan%20Walker/Photos/images_2_xy3r9y.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711700624/MoodPlay/Alan%20Walker/Videos/Alan_Walker_K-391_Emelie_Hollow_-_Lily_Lyrics_ebixag.mp4"",
          ""titleAccount"": ""Alan Walker""
        },
        {
          ""nameAccount"": ""Darkside"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711700451/MoodPlay/Alan%20Walker/Photos/images_2_xy3r9y.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711701111/MoodPlay/Alan%20Walker/Videos/Alan_Walker_-_Darkside_Lyrics_ft._Au_Ra_and_Tomine_Harket_ojwskj.mp4"",
          ""titleAccount"": ""Alan Walker""
        },
        {
          ""nameAccount"": ""On My Way"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711700451/MoodPlay/Alan%20Walker/Photos/images_2_xy3r9y.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711700984/MoodPlay/Alan%20Walker/Videos/Alan_Walker_Sabrina_Carpenter_Farruko_-_On_My_Way_Lyrics_fckejs.mp4"",
          ""titleAccount"": ""Alan Walker""
        }
      ]
    }
  ]
}"
hLMChSu0,Untitled,Mysoft,FreeBasic,Saturday 30th of March 2024 10:03:00 AM CDT,"#include ""fbgfx.bi""

const iRoadWid = 20
locate ,,0

dim as integer ConWid = loword(width()) , ConHei = hiword(width())
dim as integer iPos = rnd*(ConWid-iRoadWid), iCar=iPos+iRoadWid\2
for I as long = 0 to 99999
  locate ConHei,1 : print space(iPos);
  color 15,6 : print space(iRoadWid) : color 9
  if I < ConHei then color 7,0 : continue for
  if iCar <= iPos orelse (iCar+2) >= (iPos+iRoadWid) then 
    color 12
    for N as long = ConHei-3 to ConHei-1
      locate N,iCar : print ""***"";
    next N
    color 7,0
    locate 1,1 : print ""Game over... you travelled "" & I\100 & ""km""
    do : sleep : loop
  end if
  locate ConHei-3,iCar : print ""._."";
  locate ConHei-2,iCar : print "" | "";
  locate ConHei-1,iCar : print "".-."";
  sleep 100,1
  for N as long = ConHei-3 to ConHei-1
    locate N,iCar : print ""   "";
  next N
  color 7,0
  do
    var sKey = inkey() : if len(sKey)=0 then exit do
    if iCar > 1      andalso sKey = chr(255,fb.SC_LEFT)  then iCar -= 1
    if iCar < ConWid andalso sKey = chr(255,fb.SC_RIGHT) then iCar += 1
  loop
  iPos -= 1-int(rnd*3)
    
next I"
11pBMEyd,ComponentDiagram.xml,Nancok,XML,Saturday 30th of March 2024 09:27:19 AM CDT,"<mxfile host=""app.diagrams.net"" modified=""2024-03-30T16:28:20.343Z"" agent=""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36"" etag=""EzOON7v8qwiJU9LFfTTp"" version=""24.2.1"" type=""device"">
  <diagram name=""Página-1"" id=""8cFhBFtxJ8WcgCCSlpae"">
    <mxGraphModel dx=""2037"" dy=""1034"" grid=""1"" gridSize=""10"" guides=""1"" tooltips=""1"" connect=""1"" arrows=""1"" fold=""1"" page=""1"" pageScale=""1"" pageWidth=""827"" pageHeight=""1169"" math=""0"" shadow=""0"">
      <root>
        <mxCell id=""0"" />
        <mxCell id=""1"" parent=""0"" />
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-8"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0;entryDx=0;entryDy=0;exitX=1;exitY=0;exitDx=0;exitDy=0;"" edge=""1"" parent=""1"" source=""mx3zInj1Q97KcvaE7-Ox-1"" target=""mx3zInj1Q97KcvaE7-Ox-4"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-1"" value=""Entity"" style=""whiteSpace=wrap;html=1;align=center;"" vertex=""1"" parent=""1"">
          <mxGeometry x=""313"" y=""60"" width=""100"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-4"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""1"">
          <mxGeometry x=""480"" y=""60"" width=""210"" height=""86"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-5"" value=""Track and fetch components"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-4"">
          <mxGeometry y=""26"" width=""210"" height=""30"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-6"" value=""Save and load data"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-4"">
          <mxGeometry y=""56"" width=""210"" height=""30"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-104"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""1"" source=""mx3zInj1Q97KcvaE7-Ox-13"" target=""mx3zInj1Q97KcvaE7-Ox-101"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-13"" value=""Inventory"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;"" vertex=""1"" parent=""1"">
          <mxGeometry x=""650"" y=""680"" width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-79"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""1"">
          <mxGeometry x=""653"" y=""240"" width=""150"" height=""200"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-53"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-79"" source=""mx3zInj1Q97KcvaE7-Ox-11"" target=""mx3zInj1Q97KcvaE7-Ox-48"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-11"" value=""Faction"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-79"">
          <mxGeometry width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-48"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-79"">
          <mxGeometry y=""80"" width=""150"" height=""170"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-49"" value=""Stores the faction of the entity"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-48"">
          <mxGeometry y=""26"" width=""150"" height=""44"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-50"" value=""Returns the relationship with other entity&#39;s Faction components"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-48"">
          <mxGeometry y=""70"" width=""150"" height=""50"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-111"" value=""Note: Factions should probably be resources as to store more data"" style=""text;strokeColor=#d6b656;fillColor=#fff2cc;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;container=0;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-48"">
          <mxGeometry y=""120"" width=""150"" height=""50"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-80"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""1"">
          <mxGeometry x=""-80"" y=""240"" width=""600"" height=""1440"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-23"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-80"" source=""mx3zInj1Q97KcvaE7-Ox-15"" target=""mx3zInj1Q97KcvaE7-Ox-19"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-15"" value=""Movement"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-80"">
          <mxGeometry x=""100"" width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-19"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-80"">
          <mxGeometry x=""100"" y=""80"" width=""150"" height=""200"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-20"" value=""Move entity on the board"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-19"">
          <mxGeometry y=""26"" width=""150"" height=""44"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-21"" value=""Interpolate trough cells in an array"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-19"">
          <mxGeometry y=""70"" width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-24"" value=""Return pathing status of a cell"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-19"">
          <mxGeometry y=""110"" width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-25"" value=""Return cells that can be pathed to from the current position"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-19"">
          <mxGeometry y=""150"" width=""150"" height=""50"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-100"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""mx3zInj1Q97KcvaE7-Ox-80"">
          <mxGeometry x=""100"" y=""440"" width=""500"" height=""1000"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-94"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""mx3zInj1Q97KcvaE7-Ox-100"">
          <mxGeometry width=""150"" height=""220"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-31"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-94"" source=""mx3zInj1Q97KcvaE7-Ox-17"" target=""mx3zInj1Q97KcvaE7-Ox-26"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-17"" value=""Turn"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-94"">
          <mxGeometry width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-26"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-94"">
          <mxGeometry y=""90"" width=""150"" height=""130"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-27"" value=""Communicates with all other Turn components to fetch their data"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-26"">
          <mxGeometry y=""26"" width=""150"" height=""54"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-28"" value=""Ends turns and advances time for all Turn components"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-26"">
          <mxGeometry y=""80"" width=""150"" height=""50"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-81"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""1"">
          <mxGeometry x=""20"" y=""1400"" width=""150"" height=""200"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-43"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-81"" source=""mx3zInj1Q97KcvaE7-Ox-10"" target=""mx3zInj1Q97KcvaE7-Ox-39"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-10"" value=""Display"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-81"">
          <mxGeometry width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-39"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-81"">
          <mxGeometry y=""80"" width=""150"" height=""120"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-40"" value=""Displays the main model of the entity and plays animations"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-39"">
          <mxGeometry y=""26"" width=""150"" height=""54"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-41"" value=""Places temporary nodes like pathing markers"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-39"">
          <mxGeometry y=""80"" width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-45"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fillColor=#60a917;strokeColor=#2D7600;"" edge=""1"" parent=""1"" source=""mx3zInj1Q97KcvaE7-Ox-15"" target=""mx3zInj1Q97KcvaE7-Ox-10"">
          <mxGeometry relative=""1"" as=""geometry"">
            <mxPoint x=""-80"" y=""1200"" as=""targetPoint"" />
            <Array as=""points"">
              <mxPoint x=""-80"" y=""260"" />
              <mxPoint x=""-80"" y=""1420"" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-47"" value=""Used to display the pathing markers"" style=""edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];container=0;fontStyle=1;labelBorderColor=default;"" vertex=""1"" connectable=""0"" parent=""mx3zInj1Q97KcvaE7-Ox-45"">
          <mxGeometry relative=""1"" as=""geometry"">
            <mxPoint as=""offset"" />
          </mxGeometry>
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-82"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""1"">
          <mxGeometry x=""20"" y=""1680"" width=""150"" height=""150"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-67"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-82"" source=""mx3zInj1Q97KcvaE7-Ox-68"" target=""mx3zInj1Q97KcvaE7-Ox-69"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-68"" value=""Status"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-82"">
          <mxGeometry width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-69"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-82"">
          <mxGeometry y=""80"" width=""150"" height=""70"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-70"" value=""Stores and triggers temporary status effects"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-69"">
          <mxGeometry y=""26"" width=""150"" height=""44"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-72"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fillColor=#60a917;strokeColor=#2D7600;"" edge=""1"" parent=""1"" source=""mx3zInj1Q97KcvaE7-Ox-16"" target=""mx3zInj1Q97KcvaE7-Ox-68"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-73"" value=""Takes into account when&amp;nbsp;&lt;div style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;returning stats&lt;/span&gt;&lt;/div&gt;"" style=""edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontStyle=1;labelBorderColor=default;"" vertex=""1"" connectable=""0"" parent=""mx3zInj1Q97KcvaE7-Ox-72"">
          <mxGeometry relative=""1"" as=""geometry"">
            <mxPoint as=""offset"" />
          </mxGeometry>
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-75"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0;exitDx=0;exitDy=0;entryX=1;entryY=1;entryDx=0;entryDy=0;fillColor=#1ba1e2;strokeColor=#006EAF;"" edge=""1"" parent=""1"" source=""mx3zInj1Q97KcvaE7-Ox-16"" target=""mx3zInj1Q97KcvaE7-Ox-9"">
          <mxGeometry relative=""1"" as=""geometry"">
            <mxPoint x=""229.99999999999977"" y=""920"" as=""targetPoint"" />
            <Array as=""points"">
              <mxPoint x=""420"" y=""1720"" />
              <mxPoint x=""420"" y=""1080"" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-76"" value=""&lt;span style=&quot;font-weight: 700;&quot;&gt;Takes into account when&amp;nbsp;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;returning stats&lt;/span&gt;&lt;/div&gt;"" style=""edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];labelBorderColor=default;"" vertex=""1"" connectable=""0"" parent=""mx3zInj1Q97KcvaE7-Ox-75"">
          <mxGeometry relative=""1"" as=""geometry"">
            <mxPoint as=""offset"" />
          </mxGeometry>
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-90"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""1"">
          <mxGeometry x=""653"" y=""1680"" width=""150"" height=""260"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-66"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-90"" source=""mx3zInj1Q97KcvaE7-Ox-16"" target=""mx3zInj1Q97KcvaE7-Ox-63"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-16"" value=""Stats"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;container=0;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-90"">
          <mxGeometry width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-114"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""mx3zInj1Q97KcvaE7-Ox-90"">
          <mxGeometry y=""80"" width=""150"" height=""180"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-63"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;container=0;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-114"">
          <mxGeometry width=""150"" height=""120"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-64"" value=""Stores and returns stats and their bonuses"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;container=0;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-63"">
          <mxGeometry y=""26"" width=""150"" height=""44"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-65"" value=""Note: missing arbitrary boost and load from resource functions"" style=""text;strokeColor=#d6b656;fillColor=#fff2cc;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;container=0;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-63"">
          <mxGeometry y=""70"" width=""150"" height=""50"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-93"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""1"">
          <mxGeometry x=""20"" y=""1040"" width=""150"" height=""254"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-36"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-93"" source=""mx3zInj1Q97KcvaE7-Ox-9"" target=""mx3zInj1Q97KcvaE7-Ox-33"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-9"" value=""Capability"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-93"">
          <mxGeometry width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-33"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-93"">
          <mxGeometry y=""80"" width=""150"" height=""174"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-34"" value=""Stores sets of stats and other base properties for the Stats component"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-33"">
          <mxGeometry y=""26"" width=""150"" height=""54"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-38"" value=""Caches all related resources"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-33"">
          <mxGeometry y=""80"" width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-37"" value=""Note: may be suitable to merge with Stats component"" style=""text;strokeColor=#d6b656;fillColor=#fff2cc;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-33"">
          <mxGeometry y=""120"" width=""150"" height=""54"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-95"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""1"">
          <mxGeometry x=""653"" y=""1000"" width=""150"" height=""190"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-77"" value="""" style=""group;"" vertex=""1"" connectable=""0"" parent=""mx3zInj1Q97KcvaE7-Ox-95"">
          <mxGeometry width=""150"" height=""190"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-60"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-77"" source=""mx3zInj1Q97KcvaE7-Ox-12"" target=""mx3zInj1Q97KcvaE7-Ox-54"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-12"" value=""Input"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;glass=0;shadow=0;gradientColor=none;noLabel=0;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-77"">
          <mxGeometry width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-54"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-77"">
          <mxGeometry y=""80"" width=""150"" height=""110"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-55"" value=""Stores the current input state"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-54"">
          <mxGeometry y=""26"" width=""150"" height=""34"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-56"" value=""Controls other components directly based on input"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-54"">
          <mxGeometry y=""60"" width=""150"" height=""50"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-61"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fillColor=#60a917;strokeColor=#2D7600;verticalAlign=middle;horizontal=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-95"" source=""mx3zInj1Q97KcvaE7-Ox-12"" target=""mx3zInj1Q97KcvaE7-Ox-15"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-62"" value=""AWAITING_MOVEMENT causes&amp;nbsp;&lt;div&gt;the entity to move to cell when&lt;/div&gt;&lt;div&gt;a cell is clicked&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;"" style=""edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];labelBorderColor=default;fontStyle=1;spacingBottom=0;comic=0;spacing=2;"" vertex=""1"" connectable=""0"" parent=""mx3zInj1Q97KcvaE7-Ox-61"">
          <mxGeometry relative=""1"" as=""geometry"">
            <mxPoint as=""offset"" />
          </mxGeometry>
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-101"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""1"">
          <mxGeometry x=""650"" y=""760"" width=""150"" height=""178"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-109"" value=""Stores a static dictionary of items, separated by ownership"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-101"">
          <mxGeometry y=""26"" width=""150"" height=""54"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-110"" value=""Stores the entity &#39;s equipment"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-101"">
          <mxGeometry y=""80"" width=""150"" height=""54"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-102"" value=""Note: No functionality yet"" style=""text;strokeColor=#b85450;fillColor=#f8cecc;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-101"">
          <mxGeometry y=""134"" width=""150"" height=""44"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-98"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0;entryDx=0;entryDy=0;fillColor=#60a917;strokeColor=#2D7600;"" edge=""1"" parent=""1"" source=""mx3zInj1Q97KcvaE7-Ox-17"" target=""mx3zInj1Q97KcvaE7-Ox-16"">
          <mxGeometry relative=""1"" as=""geometry"">
            <Array as=""points"">
              <mxPoint x=""520"" y=""700"" />
              <mxPoint x=""520"" y=""1680"" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-99"" value=""&lt;span style=&quot;&quot;&gt;Fetches the base delay&lt;/span&gt;"" style=""edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontStyle=1;labelBorderColor=default;"" vertex=""1"" connectable=""0"" parent=""mx3zInj1Q97KcvaE7-Ox-98"">
          <mxGeometry relative=""1"" as=""geometry"">
            <mxPoint as=""offset"" />
          </mxGeometry>
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-117"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""1"">
          <mxGeometry x=""650"" y=""1320"" width=""150"" height=""194"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-107"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-117"" source=""mx3zInj1Q97KcvaE7-Ox-14"" target=""mx3zInj1Q97KcvaE7-Ox-105"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-14"" value=""Lore"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-117"">
          <mxGeometry width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-105"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-117"">
          <mxGeometry y=""80"" width=""150"" height=""114"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-108"" value=""Contains the name, backstory and other fluff"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-105"">
          <mxGeometry y=""26"" width=""150"" height=""44"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-106"" value=""Note: No functionality yet"" style=""text;strokeColor=#b85450;fillColor=#f8cecc;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-105"">
          <mxGeometry y=""70"" width=""150"" height=""44"" as=""geometry"" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
"
xUkp6bG9,News March30 24,Newscaster_Ned,Email,Saturday 30th of March 2024 08:54:35 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎f‎u‎s‎e‎.‎.‎.‎ ‎T‎h‎a‎t‎ ‎I‎'‎m‎ ‎a‎b‎o‎u‎t‎ ‎t‎o‎ ‎b‎l‎o‎w‎ ‎i‎f‎ ‎t‎h‎e‎y‎ ‎d‎o‎n‎'‎t‎ ‎s‎t‎o‎p‎ ‎t‎a‎l‎k‎i‎n‎g‎ ‎a‎b‎o‎u‎t‎ ‎t‎h‎o‎s‎e‎ ‎c‎o‎m‎m‎i‎e‎s‎.‎

‘‎J‎e‎s‎u‎s‎ ‎P‎a‎i‎d‎ ‎I‎t‎ ‎A‎l‎l‎’‎

C‎o‎n‎s‎e‎r‎v‎a‎t‎i‎v‎e‎ ‎L‎a‎w‎m‎a‎k‎e‎r‎s‎,‎ ‎M‎o‎r‎e‎ ‎O‎b‎s‎e‎r‎v‎e‎ ‎G‎o‎o‎d‎ ‎F‎r‎i‎d‎a‎y‎
J‎e‎s‎u‎s‎ ‎G‎o‎o‎d‎ ‎F‎r‎i‎d‎a‎y‎
C‎h‎r‎i‎s‎t‎i‎a‎n‎s‎ ‎o‎n‎ ‎F‎r‎i‎d‎a‎y‎ ‎o‎b‎s‎e‎r‎v‎e‎d‎ ‎G‎o‎o‎d‎ ‎F‎r‎i‎d‎a‎y‎,‎ ‎a‎s‎ ‎s‎o‎m‎e‎ ‎p‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎f‎i‎g‎u‎r‎e‎s‎ ‎t‎r‎i‎u‎m‎p‎h‎a‎n‎t‎l‎y‎ ‎d‎e‎c‎l‎a‎r‎e‎d‎ ‎t‎h‎a‎t‎ ‎“‎J‎e‎s‎u‎s‎ ‎p‎a‎i‎d‎ ‎i‎t‎ ‎a‎l‎l‎.‎”‎

B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎B‎u‎s‎i‎n‎e‎s‎s‎ ‎D‎i‎g‎e‎s‎t‎:‎ ‎I‎t‎’‎l‎l‎ ‎T‎a‎k‎e‎ ‎a‎t‎ ‎L‎e‎a‎s‎t‎ ‎a‎ ‎D‎e‎c‎a‎d‎e‎ ‎a‎n‎d‎ ‎$‎2‎ ‎B‎i‎l‎l‎i‎o‎n‎ ‎t‎o‎ ‎R‎e‎b‎u‎i‎l‎d‎ ‎t‎h‎e‎ ‎B‎r‎i‎d‎g‎e‎
B‎B‎D‎:‎ ‎I‎t‎'‎l‎l‎ ‎T‎a‎k‎e‎ ‎a‎t‎ ‎L‎e‎a‎s‎t‎ ‎a‎ ‎D‎e‎c‎a‎d‎e‎ ‎a‎n‎d‎ ‎$‎2‎ ‎B‎i‎l‎l‎i‎o‎n‎ ‎t‎o‎ ‎R‎e‎b‎u‎i‎l‎d‎ ‎t‎h‎e‎ ‎B‎r‎i‎d‎g‎e‎
8‎8‎7‎
L‎e‎s‎l‎i‎e‎ ‎J‎o‎n‎e‎s‎ ‎C‎o‎m‎p‎a‎r‎e‎s‎ ‎R‎e‎e‎l‎e‎c‎t‎i‎n‎g‎ ‎T‎r‎u‎m‎p‎ ‎t‎o‎ ‎A‎s‎k‎i‎n‎g‎ ‎J‎e‎f‎f‎r‎e‎y‎ ‎E‎p‎s‎t‎e‎i‎n‎ ‎o‎r‎ ‎a‎ ‎‘‎P‎e‎d‎o‎p‎h‎i‎l‎e‎ ‎P‎r‎i‎e‎s‎t‎ ‎t‎o‎ ‎W‎a‎
L‎e‎s‎l‎i‎e‎ ‎J‎o‎n‎e‎s‎:‎ ‎R‎e‎e‎l‎e‎c‎t‎i‎n‎g‎ ‎T‎r‎u‎m‎p‎ ‎L‎i‎k‎e‎ ‎A‎s‎k‎i‎n‎g‎ ‎J‎e‎f‎f‎r‎e‎y‎ ‎E‎p‎s‎t‎e‎i‎n‎ ‎t‎o‎ ‎W‎a‎t‎c‎h‎ ‎K‎i‎d‎s‎
5‎9‎1‎
G‎r‎a‎m‎m‎y‎-‎w‎i‎n‎n‎e‎r‎ ‎L‎i‎z‎z‎o‎ ‎R‎e‎l‎e‎a‎s‎e‎s‎ ‎S‎a‎d‎ ‎M‎e‎s‎s‎a‎g‎e‎:‎ ‎‘‎T‎h‎e‎ ‎W‎o‎r‎l‎d‎ ‎D‎o‎e‎s‎n‎’‎t‎ ‎W‎a‎n‎t‎ ‎M‎e‎ ‎i‎n‎ ‎I‎t‎ ‎…‎ ‎I‎ ‎Q‎u‎
L‎i‎z‎z‎o‎ ‎R‎e‎l‎e‎a‎s‎e‎s‎ ‎S‎a‎d‎ ‎M‎e‎s‎s‎a‎g‎e‎:‎ ‎'‎T‎h‎e‎ ‎W‎o‎r‎l‎d‎ ‎D‎o‎e‎s‎n‎'‎t‎ ‎W‎a‎n‎t‎ ‎M‎e‎ ‎i‎n‎ ‎I‎t‎'‎
1‎,‎0‎2‎7‎
T‎r‎o‎u‎b‎l‎e‎ ‎i‎n‎ ‎P‎a‎r‎a‎d‎i‎s‎e‎:‎ ‎D‎i‎v‎i‎s‎i‎o‎n‎ ‎o‎n‎ ‎L‎e‎f‎t‎ ‎I‎m‎p‎e‎r‎i‎l‎s‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎R‎e‎e‎l‎e‎c‎t‎i‎o‎n‎ ‎P‎r‎o‎s‎p‎e‎c‎t‎s‎
T‎r‎o‎u‎b‎l‎e‎ ‎i‎n‎ ‎P‎a‎r‎a‎d‎i‎s‎e‎:‎ ‎D‎i‎v‎i‎s‎i‎o‎n‎ ‎o‎n‎ ‎L‎e‎f‎t‎ ‎I‎m‎p‎e‎r‎i‎l‎s‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎'‎s‎ ‎R‎e‎e‎l‎e‎c‎t‎i‎o‎n‎ ‎B‎i‎d‎
2‎,‎1‎7‎0‎
B‎i‎d‎e‎n‎ ‎C‎a‎m‎p‎a‎i‎g‎n‎ ‎B‎o‎t‎c‎h‎e‎s‎ ‎R‎o‎l‎l‎o‎u‎t‎ ‎o‎f‎ ‎H‎i‎s‎p‎a‎n‎i‎c‎ ‎O‎u‎t‎r‎e‎a‎c‎h‎ ‎E‎f‎f‎o‎r‎t‎ ‎i‎n‎ ‎M‎i‎a‎m‎i‎
B‎i‎d‎e‎n‎ ‎C‎a‎m‎p‎a‎i‎g‎n‎ ‎B‎o‎t‎c‎h‎e‎s‎ ‎R‎o‎l‎l‎o‎u‎t‎ ‎o‎f‎ ‎H‎i‎s‎p‎a‎n‎i‎c‎ ‎O‎u‎t‎r‎e‎a‎c‎h‎ ‎E‎f‎f‎o‎r‎t‎ ‎i‎n‎ ‎M‎i‎a‎m‎i‎
2‎5‎4‎
L‎e‎t‎i‎t‎i‎a‎ ‎J‎a‎m‎e‎s‎ ‎F‎a‎c‎e‎s‎ ‎G‎r‎o‎w‎i‎n‎g‎ ‎P‎r‎e‎s‎s‎u‎r‎e‎ ‎t‎o‎ ‎P‎r‎o‎s‎e‎c‎u‎t‎e‎ ‎J‎o‎n‎ ‎S‎t‎e‎w‎a‎r‎t‎ ‎o‎v‎e‎r‎ ‎P‎r‎o‎p‎e‎r‎t‎y‎ ‎O‎v‎e‎r‎v‎a‎l‎u‎a‎t‎i‎o‎n‎
L‎e‎t‎i‎t‎i‎a‎ ‎J‎a‎m‎e‎s‎ ‎F‎a‎c‎e‎s‎ ‎G‎r‎o‎w‎i‎n‎g‎ ‎P‎r‎e‎s‎s‎u‎r‎e‎ ‎t‎o‎ ‎P‎r‎o‎s‎e‎c‎u‎t‎e‎ ‎J‎o‎n‎ ‎S‎t‎e‎w‎a‎r‎t‎
2‎,‎4‎9‎8‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎:‎ ‎T‎r‎u‎m‎p‎ ‎C‎a‎m‎p‎ ‎S‎m‎a‎s‎h‎e‎s‎ ‎‘‎T‎h‎r‎e‎e‎ ‎S‎t‎o‎o‎g‎e‎s‎’‎ ‎B‎i‎d‎e‎n‎,‎ ‎O‎b‎a‎m‎a‎,‎ ‎C‎l‎i‎n‎t‎o‎n‎ ‎f‎o‎r‎ ‎S‎k‎i‎p‎p‎i‎n‎g‎ ‎S‎l‎a‎i‎n‎ ‎N‎Y‎C‎ ‎O‎f‎f‎i‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎:‎ ‎T‎r‎u‎m‎p‎ ‎C‎a‎m‎p‎ ‎S‎m‎a‎s‎h‎e‎s‎ ‎‘‎T‎h‎r‎e‎e‎ ‎S‎t‎o‎o‎g‎e‎s‎’‎ ‎B‎i‎d‎e‎n‎,‎ ‎O‎b‎a‎m‎a‎,‎ ‎C‎l‎i‎n‎t‎o‎n‎
5‎,‎4‎3‎5‎
T‎e‎n‎s‎e‎ ‎S‎t‎a‎n‎d‎o‎f‎f‎ ‎a‎s‎ ‎D‎r‎i‎n‎k‎e‎r‎s‎ ‎T‎a‎k‎e‎n‎ ‎H‎o‎s‎t‎a‎g‎e‎ ‎a‎t‎ ‎D‎u‎t‎c‎h‎ ‎B‎a‎r‎
N‎e‎t‎h‎e‎r‎l‎a‎n‎d‎s‎ ‎H‎o‎s‎t‎a‎g‎e‎ ‎T‎a‎k‎i‎n‎g‎:‎ ‎T‎e‎n‎s‎e‎ ‎P‎o‎l‎i‎c‎e‎ ‎S‎t‎a‎n‎d‎o‎f‎f‎ ‎a‎t‎ ‎P‎o‎p‎u‎l‎a‎r‎ ‎B‎a‎r‎
1‎3‎7‎
B‎u‎t‎t‎i‎g‎i‎e‎g‎ ‎M‎e‎s‎s‎:‎ ‎T‎r‎a‎n‎s‎p‎o‎r‎t‎a‎t‎i‎o‎n‎ ‎D‎e‎p‎t‎ ‎W‎i‎l‎l‎ ‎N‎o‎t‎ ‎S‎a‎y‎ ‎H‎o‎w‎ ‎M‎a‎n‎y‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎D‎e‎f‎e‎n‎s‎e‎ ‎S‎h‎i‎p‎s‎ ‎S‎t‎u‎c‎k‎ ‎i‎n‎ ‎H‎a‎r‎b‎o‎r‎
B‎a‎l‎t‎i‎m‎o‎r‎e‎ ‎B‎r‎i‎d‎g‎e‎ ‎M‎e‎s‎s‎:‎ ‎D‎O‎T‎ ‎W‎i‎l‎l‎ ‎N‎o‎t‎ ‎S‎a‎y‎ ‎H‎o‎w‎ ‎M‎a‎n‎y‎ ‎R‎e‎s‎e‎r‎v‎e‎ ‎S‎h‎i‎p‎s‎ ‎S‎t‎u‎c‎k‎
3‎,‎2‎7‎5‎
O‎b‎a‎m‎a‎ ‎S‎n‎a‎p‎s‎ ‎a‎t‎ ‎P‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎a‎t‎ ‎G‎l‎i‎t‎z‎y‎ ‎F‎u‎n‎d‎r‎a‎i‎s‎e‎r‎ ‎w‎i‎t‎h‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎,‎ ‎B‎i‎l‎l‎ ‎C‎l‎i‎n‎t‎o‎n‎
O‎b‎a‎m‎a‎ ‎S‎n‎a‎p‎s‎ ‎a‎t‎ ‎P‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎a‎t‎ ‎G‎l‎i‎t‎z‎y‎ ‎F‎u‎n‎d‎r‎a‎i‎s‎e‎r‎ ‎w‎i‎t‎h‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎,‎ ‎B‎i‎l‎l‎ ‎C‎l‎i‎n‎t‎o‎n‎

J‎i‎v‎e‎ ‎T‎a‎l‎k‎e‎r‎ ‎G‎e‎t‎s‎ ‎4‎0‎ ‎Y‎e‎a‎r‎s‎ ‎A‎f‎t‎e‎r‎ ‎B‎e‎a‎t‎i‎n‎g‎ ‎H‎i‎s‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎G‎f‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎ ‎w‎i‎t‎h‎ ‎R‎o‎c‎k‎ ‎i‎n‎ ‎Y‎o‎r‎k‎ ‎B‎e‎a‎c‎h‎.‎

N‎e‎x‎t‎ ‎t‎i‎m‎e‎,‎ ‎t‎h‎i‎n‎k‎ ‎a‎b‎o‎u‎t‎ ‎c‎o‎o‎k‎i‎n‎g‎ ‎t‎h‎e‎ ‎f‎r‎i‎e‎d‎ ‎c‎h‎i‎c‎k‎e‎n‎ ‎w‎i‎t‎h‎ ‎d‎o‎u‎b‎l‎e‎ ‎b‎r‎e‎a‎d‎,‎ ‎b‎i‎t‎c‎h‎!‎


N‎e‎g‎r‎o‎ ‎P‎o‎s‎e‎s‎ ‎a‎s‎ ‎A‎m‎a‎z‎o‎n‎ ‎W‎o‎r‎k‎e‎r‎ ‎a‎n‎d‎ ‎S‎t‎e‎a‎l‎s‎ ‎a‎ ‎B‎u‎n‎c‎h‎ ‎o‎f‎ ‎K‎i‎d‎s‎'‎ ‎P‎h‎o‎n‎e‎s‎.‎


P‎a‎c‎k‎ ‎o‎f‎ ‎N‎e‎g‎r‎o‎ ‎G‎u‎n‎m‎a‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎B‎e‎i‎n‎g‎ ‎C‎a‎u‎g‎h‎t‎ ‎w‎i‎t‎h‎ ‎$‎8‎M‎ ‎W‎o‎r‎t‎h‎ ‎o‎f‎ ‎W‎e‎e‎d‎.‎


C‎o‎o‎n‎ ‎S‎t‎a‎b‎s‎ ‎W‎o‎m‎a‎n‎ ‎A‎f‎t‎e‎r‎ ‎H‎e‎ ‎R‎e‎j‎e‎c‎t‎e‎d‎ ‎H‎i‎s‎ ‎A‎d‎v‎a‎n‎c‎e‎s‎ ‎a‎n‎d‎ ‎T‎h‎e‎n‎ ‎S‎t‎a‎b‎s‎ ‎H‎e‎r‎ ‎T‎w‎i‎n‎ ‎S‎i‎s‎t‎e‎r‎.‎


S‎a‎n‎d‎ ‎N‎i‎g‎g‎e‎r‎ ‎H‎a‎s‎ ‎R‎a‎n‎t‎ ‎A‎b‎o‎u‎t‎ ‎""‎B‎l‎u‎e‎-‎E‎y‎e‎d‎ ‎W‎h‎i‎t‎e‎ ‎D‎e‎v‎i‎l‎s‎""‎ ‎o‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎A‎i‎r‎l‎i‎n‎e‎s‎ ‎F‎l‎i‎g‎h‎t‎ ‎a‎n‎d‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎s‎ ‎t‎o‎ ‎H‎i‎j‎a‎c‎k‎ ‎i‎t‎.‎


C‎u‎m‎b‎e‎r‎l‎a‎n‎d‎ ‎C‎o‎u‎n‎t‎y‎:‎ ‎S‎h‎e‎b‎o‎o‎n‎ ‎C‎r‎a‎s‎h‎e‎s‎ ‎H‎e‎r‎ ‎C‎a‎r‎ ‎a‎n‎d‎ ‎T‎h‎e‎n‎ ‎S‎h‎o‎o‎t‎s‎ ‎B‎y‎s‎t‎a‎n‎d‎e‎r‎ ‎W‎h‎o‎ ‎T‎r‎i‎e‎d‎ ‎t‎o‎ ‎H‎e‎l‎p‎ ‎H‎e‎r‎.‎


T‎r‎i‎a‎l‎ ‎U‎n‎d‎e‎r‎w‎a‎y‎ ‎f‎o‎r‎ ‎P‎u‎b‎e‎h‎e‎a‎d‎ ‎W‎h‎o‎ ‎K‎i‎l‎l‎e‎d‎ ‎4‎ ‎P‎e‎o‎p‎l‎e‎ ‎i‎n‎ ‎T‎a‎c‎o‎m‎a‎.‎ ‎(‎1‎ ‎o‎f‎ ‎T‎h‎e‎m‎ ‎W‎h‎i‎t‎e‎)‎


N‎e‎g‎r‎o‎ ‎H‎a‎i‎t‎i‎a‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎E‎n‎t‎e‎r‎i‎n‎g‎ ‎C‎o‎u‎n‎t‎r‎y‎ ‎I‎l‎l‎e‎g‎a‎l‎l‎y‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎0‎°‎
/‎6‎4‎°‎
3‎%‎
S‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎3‎0‎ ‎|‎ ‎D‎a‎y‎
8‎0‎°‎
3‎%‎
S‎
1‎2‎
 ‎
m‎p‎h‎
M‎o‎s‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎.‎ ‎H‎i‎g‎h‎ ‎a‎r‎o‎u‎n‎d‎ ‎8‎0‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
7‎4‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
6‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎2‎1‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎4‎7‎ ‎p‎m‎
S‎a‎t‎ ‎3‎0‎ ‎|‎ ‎N‎i‎g‎h‎t‎
6‎4‎°‎
2‎0‎%‎
S‎
1‎3‎
 ‎
m‎p‎h‎
O‎v‎e‎r‎c‎a‎s‎t‎.‎ ‎L‎o‎w‎ ‎6‎4‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎6‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎2‎:‎0‎9‎ ‎a‎m‎
W‎a‎n‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
1‎0‎:‎2‎1‎ ‎a‎m‎
S‎u‎n‎ ‎3‎1‎
C‎l‎o‎u‎d‎y‎
8‎1‎°‎
/‎6‎9‎°‎
1‎8‎%‎
S‎ ‎1‎6‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎1‎
C‎l‎o‎u‎d‎y‎
8‎6‎°‎
/‎6‎1‎°‎
1‎1‎%‎
S‎ ‎1‎7‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎2‎
S‎u‎n‎n‎y‎
7‎5‎°‎
/‎4‎9‎°‎
2‎%‎
N‎ ‎1‎6‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎3‎
S‎u‎n‎n‎y‎
7‎4‎°‎
/‎4‎5‎°‎
1‎%‎
N‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎4‎
S‎u‎n‎n‎y‎
7‎6‎°‎
/‎4‎9‎°‎
2‎%‎
E‎N‎E‎ ‎8‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎5‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎0‎°‎
/‎5‎5‎°‎
8‎%‎
E‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎6‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎8‎°‎
/‎6‎3‎°‎
1‎3‎%‎
S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎7‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎7‎°‎
/‎6‎2‎°‎
5‎8‎%‎
S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎8‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎9‎°‎
/‎6‎6‎°‎
4‎2‎%‎
S‎E‎ ‎1‎4‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎9‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎8‎°‎
/‎6‎5‎°‎
5‎6‎%‎
S‎S‎E‎ ‎1‎5‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎0‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎7‎°‎
/‎6‎2‎°‎
5‎8‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎1‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎6‎°‎
/‎6‎0‎°‎
5‎8‎%‎
E‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎2‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎7‎°‎
/‎6‎0‎°‎
4‎0‎%‎
E‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎3‎
S‎h‎o‎w‎e‎r‎s‎
7‎5‎°‎
/‎5‎9‎°‎
5‎8‎%‎
E‎ ‎1‎1‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎E‎a‎s‎t‎e‎r‎.‎ ‎🐣

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

H‎8‎
H‎8‎'‎ ‎i‎s‎ ‎n‎e‎t‎s‎p‎e‎a‎k‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎w‎o‎r‎d‎ ‎""‎H‎a‎t‎e‎""‎.‎ ‎I‎t‎ ‎i‎s‎ ‎g‎e‎n‎e‎r‎a‎l‎l‎y‎ ‎u‎s‎e‎d‎ ‎t‎o‎ ‎d‎e‎s‎c‎r‎i‎b‎e‎ ‎a‎ ‎p‎e‎r‎s‎o‎n‎ ‎w‎h‎o‎ ‎i‎s‎ ‎""‎h‎a‎t‎i‎n‎g‎ ‎o‎n‎""‎ ‎a‎n‎o‎t‎h‎e‎r‎ ‎p‎e‎r‎s‎o‎n‎ ‎f‎o‎r‎ ‎r‎e‎l‎i‎g‎i‎o‎u‎s‎,‎ ‎r‎a‎c‎i‎a‎l‎,‎ ‎p‎o‎l‎i‎t‎i‎c‎a‎l‎,‎ ‎o‎r‎ ‎s‎e‎x‎u‎a‎l‎ ‎b‎e‎l‎i‎e‎f‎s‎.‎

N‎e‎t‎s‎p‎e‎a‎k‎ ‎s‎u‎c‎h‎ ‎a‎s‎ ‎t‎h‎i‎s‎ ‎c‎a‎n‎ ‎b‎e‎ ‎f‎o‎u‎n‎d‎ ‎i‎n‎ ‎m‎a‎n‎y‎ ‎g‎a‎y‎,‎ ‎b‎i‎s‎e‎x‎u‎a‎l‎ ‎a‎n‎d‎ ‎c‎o‎n‎s‎e‎r‎v‎a‎t‎i‎v‎e‎ ‎c‎o‎m‎m‎u‎n‎i‎t‎i‎e‎s‎ ‎o‎n‎ ‎L‎i‎v‎e‎J‎o‎u‎r‎n‎a‎l‎ ‎a‎n‎d‎ ‎v‎a‎r‎i‎o‎u‎s‎ ‎o‎t‎h‎e‎r‎ ‎b‎l‎o‎g‎g‎i‎n‎g‎ ‎w‎e‎b‎s‎i‎t‎e‎s‎.‎ ‎I‎t‎ ‎i‎s‎ ‎a‎l‎s‎o‎ ‎t‎h‎e‎ ‎e‎a‎s‎y‎ ‎w‎a‎y‎ ‎o‎u‎t‎ ‎o‎f‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎t‎a‎k‎i‎n‎g‎ ‎t‎h‎e‎ ‎t‎i‎m‎e‎ ‎t‎o‎ ‎t‎y‎p‎e‎ ‎a‎n‎ ‎e‎n‎t‎i‎r‎e‎ ‎w‎o‎r‎d‎ ‎i‎n‎ ‎a‎n‎ ‎o‎n‎-‎l‎i‎n‎e‎ ‎c‎h‎a‎t‎.‎ ‎G‎o‎d‎ ‎f‎o‎r‎b‎i‎d‎ ‎y‎o‎u‎ ‎p‎r‎e‎s‎s‎ ‎f‎o‎u‎r‎ ‎k‎e‎y‎s‎ ‎w‎h‎e‎n‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎p‎r‎e‎s‎s‎ ‎T‎W‎O‎ ‎i‎n‎s‎t‎e‎a‎d‎.‎


(‎(‎ ‎Y‎o‎u‎ ‎N‎e‎e‎d‎n‎'‎t‎ ‎W‎o‎r‎r‎y‎.‎ ‎W‎e‎ ‎L‎o‎v‎e‎ ‎O‎u‎r‎ ‎R‎e‎a‎d‎e‎r‎s‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎C‎i‎t‎y‎ ‎P‎a‎l‎a‎c‎e‎ ‎o‎f‎ ‎J‎a‎i‎p‎u‎r‎,‎ ‎c‎o‎n‎s‎t‎r‎u‎c‎t‎e‎d‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎1‎7‎2‎7‎ ‎a‎n‎d‎ ‎1‎7‎3‎2‎,‎ ‎i‎s‎ ‎a‎ ‎r‎o‎y‎a‎l‎ ‎r‎e‎s‎i‎d‎e‎n‎c‎e‎ ‎l‎o‎c‎a‎t‎e‎d‎ ‎i‎n‎ ‎J‎a‎i‎p‎u‎r‎,‎ ‎R‎a‎j‎a‎s‎t‎h‎a‎n‎,‎ ‎I‎n‎d‎i‎a‎.‎ ‎I‎t‎ ‎w‎a‎s‎ ‎t‎h‎e‎ ‎c‎e‎r‎e‎m‎o‎n‎i‎a‎l‎ ‎a‎n‎d‎ ‎a‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎i‎v‎e‎ ‎s‎e‎a‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎K‎i‎n‎g‎d‎o‎m‎ ‎o‎f‎ ‎A‎m‎b‎e‎r‎,‎ ‎a‎n‎d‎ ‎h‎o‎m‎e‎ ‎o‎f‎ ‎i‎t‎s‎ ‎r‎u‎l‎e‎r‎s‎,‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎t‎i‎m‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎t‎a‎t‎e‎'‎s‎ ‎f‎o‎u‎n‎d‎a‎t‎i‎o‎n‎ ‎i‎n‎ ‎1‎7‎2‎7‎ ‎b‎y‎ ‎M‎a‎h‎a‎r‎a‎j‎a‎ ‎S‎a‎w‎a‎i‎ ‎J‎a‎i‎ ‎S‎i‎n‎g‎h‎ ‎I‎I‎ ‎u‎n‎t‎i‎l‎ ‎3‎0‎ ‎M‎a‎r‎c‎h‎ ‎1‎9‎4‎9‎.‎ ‎T‎h‎e‎ ‎p‎a‎l‎a‎c‎e‎ ‎c‎o‎n‎t‎i‎n‎u‎e‎s‎ ‎t‎o‎ ‎b‎e‎ ‎a‎ ‎r‎e‎s‎i‎d‎e‎n‎c‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎r‎o‎y‎a‎l‎ ‎f‎a‎m‎i‎l‎y‎ ‎o‎f‎ ‎J‎a‎i‎p‎u‎r‎ ‎a‎n‎d‎ ‎i‎s‎ ‎a‎ ‎p‎o‎p‎u‎l‎a‎r‎ ‎t‎o‎u‎r‎i‎s‎t‎ ‎a‎t‎t‎r‎a‎c‎t‎i‎o‎n‎.‎ ‎T‎h‎i‎s‎ ‎p‎i‎c‎t‎u‎r‎e‎ ‎s‎h‎o‎w‎s‎ ‎t‎h‎e‎ ‎L‎e‎h‎e‎r‎i‎y‎a‎ ‎g‎a‎t‎e‎,‎ ‎o‎n‎e‎ ‎o‎f‎ ‎f‎o‎u‎r‎ ‎i‎n‎t‎r‎i‎c‎a‎t‎e‎l‎y‎ ‎d‎e‎s‎i‎g‎n‎e‎d‎ ‎g‎a‎t‎e‎s‎ ‎i‎n‎ ‎a‎n‎ ‎i‎n‎n‎e‎r‎ ‎c‎o‎u‎r‎t‎y‎a‎r‎d‎ ‎o‎f‎ ‎t‎h‎e‎ ‎p‎a‎l‎a‎c‎e‎.‎ ‎T‎h‎e‎ ‎g‎a‎t‎e‎ ‎i‎s‎ ‎d‎e‎d‎i‎c‎a‎t‎e‎d‎ ‎t‎o‎ ‎H‎i‎n‎d‎u‎ ‎g‎o‎d‎ ‎G‎a‎n‎e‎s‎h‎a‎ ‎(‎c‎a‎r‎v‎e‎d‎ ‎a‎b‎o‎v‎e‎ ‎t‎h‎e‎ ‎d‎o‎o‎r‎)‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎g‎r‎e‎e‎n‎ ‎c‎o‎l‎o‎u‎r‎ ‎r‎e‎p‎r‎e‎s‎e‎n‎t‎i‎n‎g‎ ‎t‎h‎e‎ ‎s‎e‎a‎s‎o‎n‎ ‎o‎f‎ ‎s‎p‎r‎i‎n‎g‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎J‎a‎k‎u‎b‎ ‎H‎a‎ł‎u‎n‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎t‎'‎s‎ ‎t‎i‎m‎e‎ ‎f‎o‎r‎ ‎m‎e‎ ‎t‎o‎ ‎p‎u‎t‎ ‎o‎n‎ ‎m‎y‎ ‎s‎u‎n‎g‎l‎a‎s‎s‎e‎s‎ ‎a‎n‎d‎ ‎s‎p‎e‎e‎d‎o‎ ‎a‎n‎d‎ ‎g‎o‎ ‎c‎r‎o‎s‎s‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎s‎k‎i‎i‎n‎g‎ ‎t‎h‎r‎o‎u‎g‎h‎o‎u‎t‎ ‎t‎h‎e‎ ‎C‎a‎n‎a‎d‎i‎a‎n‎ ‎A‎l‎p‎s‎.‎"
P8uLP28k,snowybot python the best python code ever written,coinwalk,JavaScript,Saturday 30th of March 2024 08:53:40 AM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
try:
    import selenium
except ImportError:
    subprocess.check_call([sys.executable, ""-m"", ""pip"", ""install"", 'selenium'])
finally:
    import selenium
import sys
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
from selenium.common.exceptions import NoSuchElementException
import time, re, math
from selenium.webdriver.firefox.options import Options
 
 
sys.setrecursionlimit(1000000000)
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
from selenium.common.exceptions import NoSuchElementException
import time, re, math
from decimal import Decimal
from selenium.webdriver.firefox.options import Options

options = Options()
options.add_argument(""--headless"")
driver = webdriver.Firefox(options=options)
print(""please wait loading page and login"")
driver.get(""https://just-dice.com"")
time.sleep(20)
driver.find_element(By.CSS_SELECTOR, ""a.fancybox-item.fancybox-close"").click()
time.sleep(5)
driver.find_element(By.LINK_TEXT, ""Account"").click()
time.sleep(2)
driver.find_element(By.ID, ""myuser"").clear()
driver.find_element(By.ID, ""myuser"").send_keys(""USERNAME"")
time.sleep(0.01)
driver.find_element(By.ID, ""mypass"").clear()
driver.find_element(By.ID, ""mypass"").send_keys(""PASSWORD"")
time.sleep(0.01)
driver.find_element(By.ID, ""myok"").click()
time.sleep(20)  
print(""logged in"")
gold = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
freather = 0.0	
fumble = (float(gold)/1440000)
fart = 1
base = (float(gold)/1440000)
tens = (base*10)
sevens = (base*6.9)
eights = (base*7.1)
good = ((math.floor(float(gold)/tens))*tens)
print(""should see bets"")

def go(): 
    global base
    global tens
    global sevens
    global eights
    balance = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
    global fumble 
    global freather
    global good
    global fart
    global gold
    if ((float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights)) and (float(balance)>float(good)) and (not (float(balance)==freather))):
        fumble = float(fumble)*2
        freather = float(balance)
    if ((float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights)) and (float(balance)<float(good)) and (not (float(balance)==freather))):
        fumble = float(fumble)*2
        fart = 0
        freather = float(balance)
    if ((float(balance)>=(float(good)+(tens*fart))) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+sevens))):
        base = (float(balance)/1440000)
        tens = (base*10)
        sevens = (base*6.9)
        eights = (base*7.9)
        fumble = base
        freather = 0.0
        fart = 1
        good = ((math.floor(float(balance)/tens))*tens)
    if (float(balance)>=144000.0):
        sys.exit()
    time.sleep(0.1)
    number = float(fumble)
    rounded_number = f""{number:.8f}""
    driver.find_element(By.ID, ""pct_chance"").clear()
    driver.find_element(By.ID, ""pct_chance"").send_keys(""49.5000"")
    driver.find_element(By.ID, ""pct_bet"").clear()
    driver.find_element(By.ID, ""pct_bet"").send_keys(rounded_number)
    driver.find_element(By.ID, ""a_lo"").click()
    time.sleep(1.2)
    go()
    
if (1==1):
    go()"
