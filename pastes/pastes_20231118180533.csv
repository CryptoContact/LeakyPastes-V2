id,title,username,language,date,content
cwcVqX6e,Trip,Hristomir,Python,Saturday 18th of November 2023 12:03:36 PM CDT,"count_nights = int(input())
type_room = input()
comment = input()

# 	""room for one person"" – 18.00 лв за нощувка
# 	""apartment"" – 25.00 лв за нощувка
# 	""president apartment"" – 35.00 лв за нощувка
price = 0
discount = 0
if type_room == ""room for one person"":
    price = (count_nights - 1) * 18
elif type_room == ""apartment"":
    price = (count_nights - 1) * 25
    if count_nights < 10:
        price = price - ((price * 30) / 100)
    elif 10 <= count_nights <= 15:
        price = price - ((price * 35) / 100)
    else:
        price = price - ((price * 50) / 100)
elif type_room == ""president apartment"":
    price = (count_nights - 1) * 35
    if count_nights < 10:
        price = price - ((price * 10) / 100)
    elif 10 <= count_nights <= 15:
        price = price - ((price * 15) / 100)
    else:
        price = price - ((price * 20) / 100)
if comment == ""positive"":
    price = price + ((price * 25) / 100)
elif comment == ""negative"":
    price = price - ((price * 10) / 100)
print(f""{price:.2f}"")"
vAjXHpXW,Elder Gods,marcusa3000,Lua,Saturday 18th of November 2023 11:58:03 AM CDT,"{
	Tools = ordered() {
		DeltaKeyer1 = DeltaKeyer {
			Inputs = {
				BackgroundRed = Input { Value = 0.1771240234375, },
				BackgroundGreen = Input { Value = 0.28271484375, },
				BackgroundBlue = Input { Value = 0.2294921875, },
				TuningRanges = Input {
					Value = ColorCurves {
						Curves = {
							{
								Points = {
									{ 0, 1 },
									{ 0.4, 0.2 },
									{ 0.6, 0 },
									{ 1, 0 }
								}
							},
							{
								Points = {
									{ 0, 0 },
									{ 0.4, 0 },
									{ 0.6, 0.2 },
									{ 1, 1 }
								}
							}
						}
					},
				},
				Input = Input {
					SourceOp = ""MediaIn2"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -165, -49.5 } },
		},
		CleanPlate1 = CleanPLate {
			Inputs = {
				GrowEdges = Input { Value = 0.0236, },
				InsideFill = Input { Value = 1, },
				HoldTime = Input { Value = 44, },
				Input = Input {
					SourceOp = ""DeltaKeyer1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -55, -49.5 } },
		},
		Bitmap1 = BitmapMask {
			Inputs = {
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				Invert = Input { Value = 1, },
				MaskWidth = Input { Value = 1080, },
				MaskHeight = Input { Value = 1080, },
				PixelAspect = Input { Value = { 1, 1 }, },
				UseFrameFormatSettings = Input { Value = 1, },
				ClippingMode = Input { Value = FuID { ""None"" }, },
				Image = Input {
					SourceOp = ""DeltaKeyer1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -55, 16.5 } },
		},
		Blur = Blur {
			NameSet = true,
			Inputs = {
				EffectMask = Input {
					SourceOp = ""Bitmap1"",
					Source = ""Mask"",
				},
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				XBlurSize = Input { Value = 22, },
				Input = Input {
					SourceOp = ""Merge3"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { 55, 16.5 } },
		},
		MediaIn2 = MediaIn {
			ExtentSet = true,
			CustomData = {
				MEDIA_ID = ""a05f3d4f-5057-4830-8481-ebd05b0c5158"",
				MediaProps = {
					MEDIA_FORMAT_TYPE = ""QuickTime"",
					MEDIA_HEIGHT = 1080,
					MEDIA_IS_SOURCE_RES = true,
					MEDIA_MARK_IN = 0,
					MEDIA_MARK_OUT = 194,
					MEDIA_NAME = ""Would anyone know how to remove the reflection of the fire around my face.mp4"",
					MEDIA_NUM_FRAMES = 195,
					MEDIA_NUM_LAYERS = 1,
					MEDIA_PAR = 1,
					MEDIA_PATH = ""/Users/marcus/Downloads/Would anyone know how to remove the reflection of the fire around my face.mp4"",
					MEDIA_SRC_FRAME_RATE = 30,
					MEDIA_START_FRAME = 0,
					MEDIA_WIDTH = 1920
				},
			},
			Inputs = {
				GlobalOut = Input { Value = 194, },
				MediaSource = Input { Value = FuID { ""MediaPool"" }, },
				MediaID = Input { Value = ""a05f3d4f-5057-4830-8481-ebd05b0c5158"", },
				AudioTrack = Input { Value = FuID { ""Timeline Audio"" }, },
				Layer = Input {
					Value = Text {
					},
				},
				ClipTimeEnd = Input { Value = 194, },
				[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
				LeftAudio = Input {
					SourceOp = ""Left"",
					Source = ""Data"",
				},
				RightAudio = Input {
					SourceOp = ""Right"",
					Source = ""Data"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { 55, -148.5 } },
		},
		Left = AudioDisplay {
			CtrlWZoom = false,
		},
		Right = AudioDisplay {
			CtrlWZoom = false,
		},
		Ellipse1 = EllipseMask {
			Inputs = {
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				SoftEdge = Input { Value = 0.0362, },
				MaskWidth = Input { Value = 1080, },
				MaskHeight = Input { Value = 1080, },
				PixelAspect = Input { Value = { 1, 1 }, },
				UseFrameFormatSettings = Input { Value = 1, },
				ClippingMode = Input { Value = FuID { ""None"" }, },
				Center = Input {
					SourceOp = ""Path1"",
					Source = ""Position"",
				},
				Width = Input { Value = 0.293504966768367, },
				Height = Input { Value = 0.293504966768367, },
			},
			ViewInfo = OperatorInfo { Pos = { -55, 82.5 } },
		},
		Path1 = PolyPath {
			DrawMode = ""InsertAndModify"",
			CtrlWZoom = false,
			Inputs = {
				Displacement = Input {
					SourceOp = ""Path1Displacement"",
					Source = ""Value"",
				},
				PolyLine = Input {
					Value = Polyline {
						Points = {
							{ Linear = true, LockY = true, X = 0.109704641350211, Y = 0.273664479850047, RX = 0.00635918646828045, RY = 0.00249099787895226 },
							{ Linear = true, LockY = true, X = 0.128782200755052, Y = 0.281137473486904, LX = -0.00635918646828045, LY = -0.00249099787895226, RX = 0.00744642460581831, RY = 0.0052697347868265 },
							{ Linear = true, LockY = true, X = 0.151121474572507, Y = 0.296946677847383, LX = -0.00744642460581831, LY = -0.0052697347868265, RX = -0.00557204288050391, RY = -0.0130132778482801 },
							{ Linear = true, LockY = true, X = 0.134405345930996, Y = 0.257906844302543, LX = 0.00557204288050391, LY = 0.0130132778482801, RX = -0.00049798450864406, RY = -0.0059939402907883 },
							{ Linear = true, LockY = true, X = 0.132911392405063, Y = 0.239925023430178, LX = 0.00049798450864406, LY = 0.0059939402907883, RX = 0.000535798004152414, RY = -0.00284137397539459 },
							{ Linear = true, LockY = true, X = 0.134518786417521, Y = 0.231400901503994, LX = -0.000535798004152414, LY = 0.00284137397539459, RX = 0.00840792777160289, RY = -0.00527536778310282 },
							{ Linear = true, LockY = true, X = 0.159742569732329, Y = 0.215574798154686, LX = -0.00840792777160289, LY = 0.00527536778310282, RX = 0.000753053321133882, RY = -0.0118110370218139 },
							{ Linear = true, LockY = true, X = 0.162001729695731, Y = 0.180141687089244, LX = -0.000753053321133882, LY = 0.0118110370218139, RX = -0.00618060469463884, RY = 0.0205525835288274 },
							{ Linear = true, LockY = true, X = 0.143459915611814, Y = 0.241799437675726, LX = 0.00618060469463884, LY = -0.0205525835288274, RX = 0.012327198085712, RY = -0.00160052276067151 },
							{ Linear = true, LockY = true, X = 0.18044150986895, Y = 0.236997869393711, LX = -0.012327198085712, LY = 0.00160052276067151, RX = 0.00871441694086542, RY = 0.0361009998949297 },
							{ Linear = true, LockY = true, X = 0.206584760691546, Y = 0.345300869078501, LX = -0.00871441694086542, LY = -0.0361009998949297, RX = 0.0363480653491395, RY = 0.00225109496195164 },
							{ Linear = true, LockY = true, X = 0.315628956738965, Y = 0.352054153964355, LX = -0.0363480653491395, LY = -0.00225109496195164, RX = -0.00116373263526863, RY = -0.00109292291630991 },
							{ Linear = true, LockY = true, X = 0.312137758833159, Y = 0.348775385215426, LX = 0.00116373263526863, LY = 0.00109292291630991, RX = 0.0212204154202006, RY = -0.00218584583261957 },
							{ Linear = true, LockY = true, X = 0.375799005093761, Y = 0.342217847717567, LX = -0.0212204154202006, LY = 0.00218584583261957 }
						}
					},
				},
			},
		},
		Path1Displacement = BezierSpline {
			SplineColor = { Red = 255, Green = 0, Blue = 255 },
			CtrlWZoom = false,
			KeyFrames = {
				[0] = { 0, RH = { 3, 0.0119096383351156 }, Flags = { Linear = true, LockedY = true } },
				[9] = { 0.0357289150053469, LH = { 6, 0.0238192766702313 }, RH = { 11.3333333333333, 0.0516367589068048 }, Flags = { Linear = true, LockedY = true } },
				[16] = { 0.0834524467097207, LH = { 13.6666666666667, 0.0675446028082628 }, RH = { 19.3333333333333, 0.108137866513138 }, Flags = { Linear = true, LockedY = true } },
				[26] = { 0.157508706119972, LH = { 22.6666666666667, 0.132823286316555 }, RH = { 30, 0.167997010917854 }, Flags = { Linear = true, LockedY = true } },
				[38] = { 0.188973620513618, LH = { 34, 0.178485315715736 }, RH = { 44.3333333333333, 0.194015760827761 }, Flags = { Linear = true, LockedY = true } },
				[57] = { 0.204100041456046, LH = { 50.6666666666667, 0.199057901141903 }, RH = { 59, 0.221408860970895 }, Flags = { Linear = true, LockedY = true } },
				[63] = { 0.256026500000594, LH = { 61, 0.238717680485745 }, RH = { 64.6666666666667, 0.276664525824144 }, Flags = { Linear = true, LockedY = true } },
				[68] = { 0.317940577471245, LH = { 66.3333333333333, 0.297302551647695 }, RH = { 72, 0.355365868021059 }, Flags = { Linear = true, LockedY = true } },
				[80] = { 0.430216449120686, LH = { 76, 0.392791158570872 }, RH = { 87, 0.45189317142732 }, Flags = { Linear = true, LockedY = true } },
				[101] = { 0.495246616040589, LH = { 94, 0.473569893733955 }, RH = { 111, 0.560008050851342 }, Flags = { Linear = true, LockedY = true } },
				[131] = { 0.689530920472848, LH = { 121, 0.624769485662095 }, RH = { 142, 0.753036481558896 }, Flags = { Linear = true, LockedY = true } },
				[164] = { 0.880047603730992, LH = { 153, 0.816542042644944 }, RH = { 167.333333333333, 0.882831564744417 }, Flags = { Linear = true, LockedY = true } },
				[174] = { 0.888399486771268, LH = { 170.666666666667, 0.885615525757843 }, RH = { 180.666666666667, 0.925599657847512 }, Flags = { Linear = true, LockedY = true } },
				[194] = { 1, LH = { 187.333333333333, 0.962799828923756 }, Flags = { Linear = true, LockedY = true } }
			}
		},
		Merge3 = Merge {
			Inputs = {
				Blend = Input { Value = 0.717, },
				Background = Input {
					SourceOp = ""MediaIn2"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""CleanPlate1"",
					Source = ""Output"",
				},
				PerformDepthMerge = Input { Value = 0, },
			},
			ViewInfo = OperatorInfo { Pos = { 55, -49.5 } },
		},
		Merge4 = Merge {
			Inputs = {
				EffectMask = Input {
					SourceOp = ""Ellipse1"",
					Source = ""Mask"",
				},
				Background = Input {
					SourceOp = ""PipeRouter2"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""Blur"",
					Source = ""Output"",
				},
				PerformDepthMerge = Input { Value = 0, },
			},
			ViewInfo = OperatorInfo { Pos = { 110, 82.5 } },
		},
		Polygon1 = PolylineMask {
			DrawMode = ""InsertAndModify"",
			DrawMode2 = ""InsertAndModify"",
			Inputs = {
				EffectMask = Input {
					SourceOp = ""Ellipse1"",
					Source = ""Mask"",
				},
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				SoftEdge = Input { Value = 0.0693, },
				MaskWidth = Input { Value = 1080, },
				MaskHeight = Input { Value = 1080, },
				PixelAspect = Input { Value = { 1, 1 }, },
				UseFrameFormatSettings = Input { Value = 1, },
				ClippingMode = Input { Value = FuID { ""None"" }, },
				Polyline = Input {
					SourceOp = ""Polygon1Polyline"",
					Source = ""Value"",
				},
				Polyline2 = Input {
					Value = Polyline {
					},
					Disabled = true,
				},
			},
			ViewInfo = OperatorInfo { Pos = { 0, 214.5 } },
		},
		Polygon1Polyline = BezierSpline {
			SplineColor = { Red = 173, Green = 255, Blue = 47 },
			CtrlWZoom = false,
			KeyFrames = {
				[121] = { 0, RH = { 125.666666666667, 0.333333333333333 }, Flags = { Linear = true, LockedY = true }, Value = Polyline {
						Closed = true,
						Points = {
							{ Linear = true, X = 0.0368916797488226, Y = -0.173640167364017, LX = 0.0266875981161696, LY = -0.0892608089260809, RX = 0.0193615907901622, RY = 0.111576011157601 },
							{ Linear = true, X = 0.0949764521193093, Y = 0.161087866108787, LX = -0.0193615907901622, LY = -0.111576011157601, RX = 0.0345368916797488, RY = 0.0781032078103208 },
							{ Linear = true, X = 0.198587127158556, Y = 0.395397489539749, LX = -0.0345368916797488, LY = -0.0781032078103208, RX = 0.0429094714809, RY = -0.0139470013947001 },
							{ Linear = true, X = 0.327315541601256, Y = 0.353556485355649, LX = -0.0429094714809, LY = 0.0139470013947001, RX = 0.0350601779173208, RY = -0.200836820083682 },
							{ Linear = true, X = 0.432496075353218, Y = -0.248953974895398, LX = -0.0350601779173208, LY = 0.200836820083682, RX = -0.0470957613814757, RY = -0.0548582054858205 },
							{ Linear = true, X = 0.291208791208791, Y = -0.413528591352859, LX = 0.0470957613814757, LY = 0.0548582054858205, RX = -0.0580847723704866, RY = -0.0092980009298001 },
							{ Linear = true, X = 0.116954474097331, Y = -0.441422594142259, LX = 0.0580847723704866, LY = 0.0092980009298001, RX = -0.0266875981161696, RY = 0.0892608089260809 }
						}
					} },
				[135] = { 1, LH = { 130.333333333333, 0.666666666666667 }, RH = { 140.333333333333, 1.33333333333333 }, Flags = { Linear = true, LockedY = true }, Value = Polyline {
						Closed = true,
						Points = {
							{ Linear = true, X = 0.0622502774021658, Y = -0.0265397755394142, LX = -0.00444445167921116, LY = -0.0925445042165369, RX = 0.0462410560934561, RY = 0.0689388027285735 },
							{ Linear = true, X = 0.200973445682534, Y = 0.180276632646306, LX = -0.0462410560934561, LY = -0.0689388027285735, RX = 0.0485621706195347, RY = 0.0296532186401443 },
							{ Linear = true, X = 0.346659957541138, Y = 0.269236288566739, LX = -0.0485621706195347, LY = -0.0296532186401443, RX = 0.0292013141491721, RY = -0.0488060432525773 },
							{ Linear = true, X = 0.434263899988655, Y = 0.122818158809007, LX = -0.0292013141491721, LY = 0.0488060432525773, RX = 0.00459054117085896, RY = -0.214931634153158 },
							{ Linear = true, X = 0.448035523501231, Y = -0.521976743650465, LX = -0.00459054117085896, LY = 0.214931634153158, RX = -0.0903161091169495, RY = 0.00689392810037463 },
							{ Linear = true, X = 0.177087196150383, Y = -0.501294959349341, LX = 0.0903161091169495, LY = -0.00689392810037463, RX = -0.0427234245952836, RY = 0.0657072237201056 },
							{ Linear = true, X = 0.0489169223645323, Y = -0.304173288189025, LX = 0.0427234245952836, LY = -0.0657072237201056, RX = 0.00444445167921116, RY = 0.0925445042165369 }
						}
					} },
				[151] = { 2, LH = { 145.666666666667, 1.66666666666667 }, RH = { 158, 2.33333333333333 }, Flags = { Linear = true, LockedY = true }, Value = Polyline {
						Closed = true,
						Points = {
							{ Linear = true, X = 0.0419830763321764, Y = -0.103893870979562, LX = 0.00327886419991534, LY = -0.0877432813837496, RX = 0.0377367816581132, RY = 0.0762679626703704 },
							{ Linear = true, X = 0.155193421306516, Y = 0.124910017031549, LX = -0.0377367816581132, LY = -0.0762679626703704, RX = 0.0430668440590524, RY = 0.0400894430873377 },
							{ Linear = true, X = 0.284393953483673, Y = 0.245178346293563, LX = -0.0430668440590524, LY = -0.0400894430873377, RX = 0.0312530087471392, RY = -0.0382604424406281 },
							{ Linear = true, X = 0.37815297972509, Y = 0.130397018971678, LX = -0.0312530087471392, LY = 0.0382604424406281, RX = 0.0253347598998373, RY = -0.215145024950719 },
							{ Linear = true, X = 0.454157259424602, Y = -0.515038055880478, LX = -0.0253347598998373, LY = 0.215145024950719, RX = -0.0992387105676078, RY = -0.003372337742746 },
							{ Linear = true, X = 0.156441127721779, Y = -0.525155069108716, LX = 0.0992387105676078, LY = 0.003372337742746, RX = -0.0348738195966188, RY = 0.0526771179926352 },
							{ Linear = true, X = 0.0518196689319224, Y = -0.367123715130811, LX = 0.0348738195966188, LY = -0.0526771179926352, RX = -0.00327886419991534, RY = 0.0877432813837496 }
						}
					} },
				[172] = { 3, LH = { 165, 2.66666666666667 }, RH = { 179.333333333333, 3.33333333333333 }, Flags = { Linear = true, LockedY = true }, Value = Polyline {
						Closed = true,
						Points = {
							{ Linear = true, X = 0.0233416725091063, Y = -0.0509946086731352, LX = -0.00775861236268999, LY = -0.0886922847526557, RX = 0.047167456499764, RY = 0.0609761347536271 },
							{ Linear = true, X = 0.164844042008398, Y = 0.131933795587746, LX = -0.047167456499764, LY = -0.0609761347536271, RX = 0.0479305154402636, RY = 0.0228266415274754 },
							{ Linear = true, X = 0.308635588329189, Y = 0.200413720170172, LX = -0.0479305154402636, LY = -0.0228266415274754, RX = 0.0263201341846216, RY = -0.0505168434977075 },
							{ Linear = true, X = 0.387595990883054, Y = 0.04886318967705, LX = -0.0263201341846216, LY = 0.0505168434977075, RX = 0.0150732545732865, RY = -0.169726072732609 },
							{ Linear = true, X = 0.432815754602913, Y = -0.460315028520777, LX = -0.0150732545732865, LY = 0.169726072732609, RX = -0.104894434519335, RY = -0.0238538020998082 },
							{ Linear = true, X = 0.118132451044909, Y = -0.531876434820201, LX = 0.104894434519335, LY = 0.0238538020998082, RX = -0.0393555385412909, RY = 0.0716016572963663 },
							{ Linear = true, X = 6.58354210363171e-05, Y = -0.317071462931102, LX = 0.0393555385412909, LY = -0.0716016572963663, RX = 0.00775861236268999, RY = 0.0886922847526557 }
						}
					} },
				[194] = { 4, LH = { 186.666666666667, 3.66666666666667 }, Flags = { Linear = true, LockedY = true }, Value = Polyline {
						Closed = true,
						Points = {
							{ Linear = true, X = 0.0378207761654913, Y = 0.0232259832198405, LX = -0.0302736544133824, LY = -0.0855681585730749, RX = 0.0640745552355095, RY = 0.025659759838673 },
							{ Linear = true, X = 0.23004444187202, Y = 0.100205262735859, LX = -0.0640745552355095, LY = -0.025659759838673, RX = 0.0552931091360541, RY = -0.0143969530156047 },
							{ Linear = true, X = 0.395923769280182, Y = 0.0570144036890453, LX = -0.0552931091360541, LY = 0.0143969530156047, RX = 0.0145454121620819, RY = -0.0731097079397915 },
							{ Linear = true, X = 0.439560005766428, Y = -0.162314720130329, LX = -0.0145454121620819, LY = 0.0731097079397915, RX = 0.0119706089361069, RY = -0.134863121847772 },
							{ Linear = true, X = 0.475471832574749, Y = -0.566904085673645, LX = -0.0119706089361069, LY = 0.134863121847772, RX = -0.14376587895191, RY = 0.0141091803908383 },
							{ Linear = true, X = 0.0441741957190183, Y = -0.52457654450113, LX = 0.14376587895191, LY = -0.0141091803908383, RX = -0.0323914609312247, RY = 0.0970326840005821 },
							{ Linear = true, X = -0.0530001870746558, Y = -0.233478492499384, LX = 0.0323914609312247, LY = -0.0970326840005821, RX = 0.0302736544133824, RY = 0.0855681585730749 }
						}
					} }
			}
		},
		Merge1 = Merge {
			Inputs = {
				EffectMask = Input {
					SourceOp = ""Polygon1"",
					Source = ""Mask"",
				},
				ApplyMaskInverted = Input { Value = 1, },
				Background = Input {
					SourceOp = ""Merge5"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""Merge5"",
					Source = ""Output"",
				},
				PerformDepthMerge = Input { Value = 0, },
			},
			ViewInfo = OperatorInfo { Pos = { 220, 214.5 } },
		},
		Merge5 = Merge {
			Inputs = {
				Background = Input {
					SourceOp = ""Merge4"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""LumaKeyer1"",
					Source = ""Output"",
				},
				PerformDepthMerge = Input { Value = 0, },
			},
			ViewInfo = OperatorInfo { Pos = { 220, 148.5 } },
		},
		LumaKeyer1_1 = LumaKeyer {
			Inputs = {
				Channel = Input { Value = 1, },
				High = Input { Value = 0.111, },
				Low = Input { Value = 0.089, },
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				MatteContrast = Input { Value = 0.33, },
				MatteGamma = Input { Value = 2.02, },
				Input = Input {
					SourceOp = ""Merge1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { 110, 280.5 } },
		},
		ErodeDilate1 = ErodeDilate {
			Inputs = {
				Filter = Input { Value = 3, },
				XAmount = Input { Value = 0.0067, },
				Input = Input {
					SourceOp = ""LumaKeyer1_1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { 110, 313.5 } },
		},
		PipeRouter2 = PipeRouter {
			Inputs = {
				Input = Input {
					SourceOp = ""PipeRouter1"",
					Source = ""Output"",
				},
			},
			ViewInfo = PipeRouterInfo { Pos = { 220, 49.5 } },
		},
		PipeRouter1 = PipeRouter {
			Inputs = {
				Input = Input {
					SourceOp = ""MediaIn2"",
					Source = ""Output"",
				},
			},
			ViewInfo = PipeRouterInfo { Pos = { 220, -82.5 } },
		},
		Rectangle1 = RectangleMask {
			Inputs = {
				EffectMask = Input {
					SourceOp = ""Ellipse2"",
					Source = ""Mask"",
				},
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				SoftEdge = Input { Value = 0.1827, },
				MaskWidth = Input { Value = 1080, },
				MaskHeight = Input { Value = 1080, },
				PixelAspect = Input { Value = { 1, 1 }, },
				UseFrameFormatSettings = Input { Value = 1, },
				ClippingMode = Input { Value = FuID { ""None"" }, },
				Center = Input { Value = { 0.861512027491409, -0.0567765567765568 }, },
				Width = Input { Value = 0.730927835051546, },
				Height = Input { Value = 0.908125020828964, },
				Angle = Input { Value = 22.1382123598119, },
			},
			ViewInfo = OperatorInfo { Pos = { 0, 346.5 } },
		},
		Bitmap1_2 = BitmapMask {
			Inputs = {
				EffectMask = Input {
					SourceOp = ""Rectangle1"",
					Source = ""Mask"",
				},
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				PaintMode = Input { Value = FuID { ""Add"" }, },
				MaskWidth = Input { Value = 1080, },
				MaskHeight = Input { Value = 1080, },
				PixelAspect = Input { Value = { 1, 1 }, },
				UseFrameFormatSettings = Input { Value = 1, },
				ClippingMode = Input { Value = FuID { ""None"" }, },
				Image = Input {
					SourceOp = ""ErodeDilate1"",
					Source = ""Output"",
				},
				Channel = Input { Value = FuID { ""Luminance"" }, },
				High = Input { Value = 0.567, },
			},
			ViewInfo = OperatorInfo { Pos = { 110, 346.5 } },
		},
		Ellipse2 = EllipseMask {
			Inputs = {
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				SoftEdge = Input { Value = 0.1024, },
				MaskWidth = Input { Value = 1080, },
				MaskHeight = Input { Value = 1080, },
				PixelAspect = Input { Value = { 1, 1 }, },
				UseFrameFormatSettings = Input { Value = 1, },
				ClippingMode = Input { Value = FuID { ""None"" }, },
				Center = Input { Value = { -0.379016829563419, -0.15900377149297 }, },
				Width = Input { Value = 2.51621272575637, },
				Height = Input { Value = 1.62794130557217, },
			},
			ViewInfo = OperatorInfo { Pos = { -110, 346.5 } },
		},
		LumaKeyer1 = LumaKeyer {
			Inputs = {
				Channel = Input { Value = 1, },
				High = Input { Value = 0.127, },
				Low = Input { Value = 0.033, },
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				Invert = Input { Value = 1, },
				Input = Input {
					SourceOp = ""PipeRouter2"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { 330, 82.5 } },
		},
		BrightnessContrast1 = BrightnessContrast {
			Inputs = {
				EffectMask = Input {
					SourceOp = ""Bitmap1_2"",
					Source = ""Mask"",
				},
				Blend = Input {
					SourceOp = ""BrightnessContrast1Blend"",
					Source = ""Value"",
				},
				ApplyMaskInverted = Input { Value = 1, },
				Gain = Input { Value = 0.25, },
				Input = Input {
					SourceOp = ""Merge1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { 220, 379.5 } },
		},
		BrightnessContrast1Blend = BezierSpline {
			SplineColor = { Red = 205, Green = 205, Blue = 205 },
			CtrlWZoom = false,
			KeyFrames = {
				[110] = { 0, RH = { 114.666666666667, 0.333333333333333 }, Flags = { Linear = true } },
				[124] = { 1, LH = { 119.333333333333, 0.666666666666667 }, Flags = { Linear = true } }
			}
		},
		ChangeDepth1 = ChangeDepth {
			Inputs = {
				Depth = Input { Value = 1, },
				Input = Input {
					SourceOp = ""BrightnessContrast1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { 220, 445.5 } },
		},
		MediaOut1 = MediaOut {
			Inputs = {
				Index = Input { Value = ""0"", },
				Input = Input {
					SourceOp = ""ChangeDepth1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { 220, 478.5 } },
			Colors = { TileColor = { R = 0.913725490196078, G = 0.549019607843137, B = 0.709803921568627 }, }
		}
	}
}"
qFrE5LsJ,laboratorio.zone,Sergio_Istea,Nginx,Saturday 18th of November 2023 11:51:07 AM CDT,"zone ""laboratorio"" {

        type master;

        # Fichero con registros y configuraciones de la zona (SOA)
        file ""/etc/bind/local-zones/laboratorio.db"";

        allow-update {
                none;
        };


};

"
zSXf2aew,Java Fork Join example,ven4coding,Java,Saturday 18th of November 2023 11:46:50 AM CDT,"package forkjoinexample;

import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.RecursiveTask;

public class Example {
    public static void main(String[] args) {
        ForkJoinPool forkJoinPool =
                new ForkJoinPool(Runtime.getRuntime().availableProcessors() - 1);
        int[] elements = new int[]{1,1,1,1,1,3,4,5,5,6,7,234,346,334,524,6455,245
                ,345,234,234,234,234};
        SearchTask task = new SearchTask(elements, 0, elements.length - 1, 234);
        int result = forkJoinPool.invoke(task);
        System.out.println(result);
    }
}

class SearchTask extends RecursiveTask<Integer> {

    private final int[] elements;
    private final int start;
    private final int end;
    private final int searchElement;

    public SearchTask(int[] elements, int start, int end, int searchElement) {
        this.elements = elements;
        this.start = start;
        this.end = end;
        this.searchElement = searchElement;
    }

    @Override
    protected Integer compute() {
        if (end - start + 1 > 3) {
            System.out.println(""forking"" + Thread.currentThread().getName());
            int mid = (start + (end - start) / 2);
            SearchTask task1 = new SearchTask(elements, start, mid, searchElement);
            SearchTask task2 = new SearchTask(elements, mid + 1, end, searchElement);
            task1.fork();
            task2.fork();
            System.out.println(""joining"" + Thread.currentThread().getName());
            return task1.join() + task2.join();
        }
        return processSearch();
    }

    private Integer processSearch() {
        int count = 0;
        for (int i = start; i <= end; i++) {
            if (elements[i] == searchElement) {
                count++;
            }
        }
        return count;
    }
}
"
2LBW2xgT,OliverJ Banking System,olliejohnson,Lua,Saturday 18th of November 2023 11:46:28 AM CDT,"repo = ""https://raw.githubusercontent.com/olliejohnson/banker/main/""

function getFile(file)
    local data = http.get(repo..file).readAll()
    local file = fs.open(file, ""w"")
    file.write(data)
    file.close()
end

getFile(""system.lua"")
getFile(""startup.lua"")
getFile(""remove.lua"")
getFile(""install.lua"")
getFile(""install_media/startup.lua"")
getFile(""install_media/calls/withdrawal.lua"")
getFile(""install_media/calls/deposit.lua"")
getFile(""install_media/calls/add.lua"")
getFile(""install_media/calls/remove.lua"")"
KXTJEyXD,BTC Wallet Credentials have been reset,castlclass_20,GetText,Saturday 18th of November 2023 11:39:17 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
sfragilitync:XzE6pK on 212.224.93.130
You can connect via SSH.
Regards"
GRR52w5T,DoorControlMk6,QIPZ,Lua,Saturday 18th of November 2023 11:27:59 AM CDT,"redstone.setOutput(""left"", true)
redstone.setOutput(""right"", true)
local SendID
local Command

function commandOpen()
 redstone.setOutput(""left"", true)
 redstone.setOutput(""right"", true)
 redstone.setOutput(""right"", false)
end
       
function commandClose()
 redstone.setOutput(""left"", true)
 redstone.setOutput(""right"", true)
 redstone.setOutput(""left"", false)
end

print(""DoorBrainMk6. All hail Rasputin"")

repeat
 rednet.open(""back"")
 SendID, Command = rednet.receive()
 print(""ID: ""..SendID.."". Message: ""..Command)
       
 if SendID =! 100 then
  if Command == ""open"" then
   commandOpen()
  end
  if Command == ""close"" then
   commandClose()
  end
  if Command ~= ""open"" or Command ~= ""close"" then
   rednet.send(SendID, ""WARNING: Term not recognised. Command not processed."")
  end
 else
  rednet.send(12,""WARNING: Rasputin help! Sniffer detected. Request Assistance."")
 end
       
until X==10"
ZUATr2de,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Saturday 18th of November 2023 11:23:35 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be: 
josli45:KoE3dG1 on 159.223.212.34
You can connect via SSH.

Regards
BT604162"
Zss71WqX,邀您一起看：云口令,xiaomianao666,JavaScript,Saturday 18th of November 2023 11:19:15 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥云口令@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5LqR5Y+j5LukXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImh0dHBzOi8vd3d3LjEyM3Bhbi5jb20vcy9mYWpBLVgwNlFoLmh0bWxcXFwiLFxcbmRlc2M6XFxcIjEwMCUmJmZsb2F0XFxcIixcXG5leHRyYTp7Y2FuQmFjazogdHJ1ZX1cXG59XSk7XCIsXCJncm91cFwiOlwiXCJ9IiwidGl0bGUiOiLkupHlj6Pku6QifQ==
0NtwQ9Vh,Amicable numbers,hpolzer,C,Saturday 18th of November 2023 11:17:29 AM CDT,"/*	
	This program (ANSI C) computes the amicable numbers
	(therefore ""an.c"") within a given range. The method used by
	this program is rather simplistic. Last change, including minor
	improvements and conversion into ANSI C: Sept. 10th, 2023.
	Compile:	gcc -ansi -pedantic -O3 -o an an.c
	Invoke:		an [lower_limit] upper_limit
	Copyright (C) <March 19th, 2015> Henning POLZER.
	Send comment and error reports to: h underscore polzer at gmx dot de

	Example:
	an 1 10000	# ""an 10000"" yields the same (lower_limit==1 by default)

	 220;		 284
	1184;		1210
	2620;		2924
	5020;		5564
	6232;		6368

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

					/* Erforderlich fuer: */
#include <math.h>	/* floor () */
#include <stdio.h>	/* printf () */
#include <stdlib.h>	/* atoi () */

typedef long ganz;	/* signed! */
typedef struct {
			ganz erster,zweiter;
	} freunde; /* speichert Zahlwerte des Freundepaares */

/*
	Gibt die TeilerSumme einer gegebenen Zahl zurueck.
*/
ganz ts(ganz z)
{
	ganz i=2,gegenteiler,schleife=z,summe=1;

	do {
	  gegenteiler=floor(schleife/i);
	  if (schleife%i==0)
	    /* Teiler=Gegenteiler? Nur Teiler beachten: */
	    (i==gegenteiler)?summe++:(summe+=gegenteiler+i);
	  i++;
	} while (gegenteiler>=i);
	return summe; 
} /* ts */

/*
	Prueft, ob zu der uebergebenen Zahl z eine befreundete
	Zahl existiert und liefert in diesem Falle das Paar
	befreundeter Zahlen zurueck. Andernfalls liefert 
	die Funktion die gepruefte Zahl und die Teilersumme
	derselben als negative Zahlen zurueck, fuer den Fall,
	dass diese weiter betrachtet werden sollen. (-1 als 
	Rueckgabewert von f.zweiter steht fuer eine
	Primzahl, wenn z>1.)
*/
freunde auf_freundschaft_pruefen(ganz z)
{
	ganz hilf,j=z,startwert=z;
	freunde f;

	/* Berechnungen nur fuer Zahlen>3: */
	(j<3)?j=3:0;

	hilf=ts(j);
	if((ts(hilf)==j)&&(hilf>j)) {
	  f.erster=j; /* Paar gefunden */
	  f.zweiter=hilf;
	} else {
	    f.erster=startwert*-1; /* Kein Paar */
	    f.zweiter=hilf*-1;
	  } /* else */
	     
	return f;
} /* auf_freundschaft_pruefen */

int main(int argc,char *argv[])
{
	ganz i,ug=1,og=1;
	freunde f;

	if(argc==2) og=atoi(argv[1]);
	if(argc==3) {
	  ug=atoi(argv[1]);
	  og=atoi(argv[2]);
	} /* if(argc==3) */

	for(i=ug;i<=og;i++) {
	  f=auf_freundschaft_pruefen(i);
	  /*
	     Wenn mindestens ein Rueckgabewert positiv ist, hat
	     das Programm ein Paar befreundeter Zahlen gefunden:
	  */
	  if(f.erster>0) printf(""%15.ld;%15.ld\n"",f.erster,f.zweiter);
	  /* Kommentarmarkierungen folgender Zeile entfernen, um Primzahlen auszugeben: */
	  /*if((f.zweiter==-1)&&(i>1)) printf(""%15.ld: Primzahl\n"",i);*/
	} /* for(i=ug;i<=og;i++) */

	return 0;
} /* main */
"
UZ2txCMx,antennas,leomaster,HTML,Saturday 18th of November 2023 11:10:02 AM CDT,"<script src=""jquery.js""></script>
<script>
    let antennas = [
    {
        ""id"": ""20473"",
        ""num"": ""1400131"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΒΑΡΚΙΖΑ"",
        ""municipality"": ""Βάρης - Βούλας - Βουλιαγμένης"",
        ""latitude"": ""37.812778"",
        ""longitude"": ""23.826944""
    },
    {
        ""id"": ""20506"",
        ""num"": ""1400199"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""Β. ΕΛΛΑΔΟΣ & ΗΡΑΣ, ΣΚΑΡΑΜΑΓΚΑΣ"",
        ""municipality"": ""Χαϊδαρίου"",
        ""latitude"": ""38.010278"",
        ""longitude"": ""23.604167""
    },
    {
        ""id"": ""20509"",
        ""num"": ""1400205"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΛΕΩΦ. ΠΟΣΕΙΔΩΝΟΣ 39 & ΚΑΛΑΜΑΚΙΟΥ"",
        ""municipality"": ""Αλίμου"",
        ""latitude"": ""37.911111"",
        ""longitude"": ""23.711667""
    },
    {
        ""id"": ""20518"",
        ""num"": ""1400245"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΕΛ. ΒΕΝΙΖΕΛΟΥ 112"",
        ""municipality"": ""Ηλιουπόλεως"",
        ""latitude"": ""37.937778"",
        ""longitude"": ""23.759167""
    },
    {
        ""id"": ""20522"",
        ""num"": ""1400250"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΓΡΗΓ. ΛΑΜΠΡΑΚΗ 6"",
        ""municipality"": ""Λυκόβρυσης - Πεύκης"",
        ""latitude"": ""38.068889"",
        ""longitude"": ""23.781944""
    },
    {
        ""id"": ""20528"",
        ""num"": ""1400257"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΤΑΡΣΟΥ 8 & ΠΑΡΑΠΛΕΥΡΗ ΕΘΝ. ΟΔΟΥ ΑΘΗΝΩΝ - ΛΑΜΙΑΣ - Ν. ΦΙΛΑΔΕΛΦΕΙΑ, Ν. ΑΤΤΙΚΗΣ"",
        ""municipality"": ""Φιλαδελφείας - Χαλκηδόνος"",
        ""latitude"": ""38.043889"",
        ""longitude"": ""23.736389""
    },
    {
        ""id"": ""20567"",
        ""num"": ""1400336"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""Λ. ΕΙΡΗΝΗΣ 55"",
        ""municipality"": ""Λυκόβρυσης - Πεύκης"",
        ""latitude"": ""38.059444"",
        ""longitude"": ""23.7875""
    },
    {
        ""id"": ""20575"",
        ""num"": ""1400349"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΜΕΛΙΝΑΣ ΜΕΡΚΟΥΡΗ 30 ΚΑΙ ΔΙΟΙΚΗΤΙΚΟΥ ΣΥΜΒΟΥΛΙΟΥ"",
        ""municipality"": ""Αγίου Δημητρίου"",
        ""latitude"": ""37.926111"",
        ""longitude"": ""23.735833""
    },
    {
        ""id"": ""20584"",
        ""num"": ""1400366"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΟΔΟΣ ΕΛ. ΒΕΝΙΖΕΛΟΥ 150 , Ο.Τ. 1"",
        ""municipality"": ""Νέας Ιωνίας"",
        ""latitude"": ""38.049722"",
        ""longitude"": ""23.749722""
    },
    {
        ""id"": ""20597"",
        ""num"": ""1400394"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΑΓ. ΔΗΜΗΤΡΙΟΥ 174 & ΑΤΤΑΛΟΥ"",
        ""municipality"": ""Αγίου Δημητρίου"",
        ""latitude"": ""37.935278"",
        ""longitude"": ""23.728889""
    },
    {
        ""id"": ""20607"",
        ""num"": ""1400431"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΟΔΟΣ ΑΡΙΣΤΟΓΕΙΤΟΝΟΣ, ΟΙΚΙΣΜΟΣ ΠΡΑΣΙΝΟΣ ΛΟΦΟΣ"",
        ""municipality"": ""Σπάτων - Αρτέμιδος"",
        ""latitude"": ""37.946667"",
        ""longitude"": ""23.986111""
    },
    {
        ""id"": ""20609"",
        ""num"": ""1400433"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΒΟΥΝΟ ΚΙΤΣΟΥ ΑΓ. ΚΩΝ/ΝΟΣ ΛΑΥΡΙΟΥ"",
        ""municipality"": ""Λαυρεωτικής"",
        ""latitude"": ""37.733333"",
        ""longitude"": ""24.009722""
    },
    {
        ""id"": ""20610"",
        ""num"": ""1400442"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΚΟΡΥΦΗ, ΚΑΚΙΑ ΘΑΛΑΣΣΑ"",
        ""municipality"": ""Λαυρεωτικής"",
        ""latitude"": ""37.848333"",
        ""longitude"": ""24.043056""
    },
    {
        ""id"": ""20623"",
        ""num"": ""1400467"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΜΑΝΔΗΛΑΡΑ 4 & ΣΕΡΙΦΟΥ"",
        ""municipality"": ""Αλίμου"",
        ""latitude"": ""37.916944"",
        ""longitude"": ""23.729722""
    },
    {
        ""id"": ""20624"",
        ""num"": ""1400469"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΔΑΦΝΗΣ 5 & ΒΟΥΡΝΟΒΑ"",
        ""municipality"": ""Κορυδαλλού"",
        ""latitude"": ""37.984444"",
        ""longitude"": ""23.641111""
    },
    {
        ""id"": ""20685"",
        ""num"": ""1401099"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΚΟΡΦΟΒΟΥΝΙ ΣΤΡΥΜΟΝΙΚΟ"",
        ""municipality"": ""Ηρακλείας"",
        ""latitude"": ""41.013889"",
        ""longitude"": ""23.288056""
    },
    {
        ""id"": ""20687"",
        ""num"": ""1401106"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΠΑΡΘΕΝΟΣ ΖΑΓΚΛΙΒΕΡΙ"",
        ""municipality"": ""Λαγκαδά"",
        ""latitude"": ""40.593611"",
        ""longitude"": ""23.365""
    },
    {
        ""id"": ""20697"",
        ""num"": ""1402002"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΠΛΗΣΙΟΝ  ΤΟΥ ΟΙΚΙΣΜΟΥ ΣΧΗΜΑΤΑΡΙΟΥ"",
        ""municipality"": ""Τανάγρας"",
        ""latitude"": ""38.357222"",
        ""longitude"": ""23.571667""
    },
    {
        ""id"": ""20698"",
        ""num"": ""1402003"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΣΚΛΗΡΟ ΜΑΛΑΚΩΝΤΑ"",
        ""municipality"": ""Ερέτριας"",
        ""latitude"": ""38.409444"",
        ""longitude"": ""23.750833""
    },
    {
        ""id"": ""20725"",
        ""num"": ""1402081"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΨΗΛΟ ΚΟΥΤΣΟΥΡΙ ΔΕΣΦΙΝΑ"",
        ""municipality"": ""Δελφών"",
        ""latitude"": ""38.443889"",
        ""longitude"": ""22.4875""
    },
    {
        ""id"": ""20757"",
        ""num"": ""1402149"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΣΤΡΟΓΓΥΛΟ, ΑΜΟΡΓΙΑΝΟΙ"",
        ""municipality"": ""Αμφιλοχίας"",
        ""latitude"": ""38.865556"",
        ""longitude"": ""21.355556""
    },
    {
        ""id"": ""20810"",
        ""num"": ""1403085"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΠΑΡΚΟ ΚΕΡΑΙΩΝ ΚΟΡΙΛΟΒΟΣ"",
        ""municipality"": ""Δράμας"",
        ""latitude"": ""41.166389"",
        ""longitude"": ""24.1675""
    },
    {
        ""id"": ""20816"",
        ""num"": ""1403098"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΚΕΡΑΣΙΑ ΜΕΣΗΜΕΡΙ ΕΔΕΣΣΑΣ"",
        ""municipality"": ""Έδεσσας"",
        ""latitude"": ""40.796389"",
        ""longitude"": ""22.010278""
    },
    {
        ""id"": ""20836"",
        ""num"": ""1403167"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΣΑΡΤΗ ΣΥΚΑΙΑ"",
        ""municipality"": ""Σιθωνίας"",
        ""latitude"": ""40.108611"",
        ""longitude"": ""23.977778""
    },
    {
        ""id"": ""20868"",
        ""num"": ""1403268"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΘΕΡΜΟ ΒΑΣΙΛΙΚΑ"",
        ""municipality"": ""Θέρμης"",
        ""latitude"": ""40.54"",
        ""longitude"": ""23.093333""
    },
    {
        ""id"": ""20904"",
        ""num"": ""1404053"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΟΞΥΑ ΚΑΛΟΧΩΡΙ ΖΙΤΣΑ"",
        ""municipality"": ""Ζίτσας"",
        ""latitude"": ""39.696389"",
        ""longitude"": ""20.609722""
    },
    {
        ""id"": ""20911"",
        ""num"": ""1404068"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΧΛΟΜΟΣ ΛΕΥΚΙΜΜΗ"",
        ""municipality"": ""Κέρκυρας"",
        ""latitude"": ""39.458611"",
        ""longitude"": ""19.951667""
    },
    {
        ""id"": ""20920"",
        ""num"": ""1404134"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΛΕΥΚΟ ΚΟΤΡΩΝΙ ΖΑΓΟΡΑ."",
        ""municipality"": ""Ζαγοράς - Μουρεσίου"",
        ""latitude"": ""39.445"",
        ""longitude"": ""23.091389""
    },
    {
        ""id"": ""20937"",
        ""num"": ""1404176"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΔΑΣΟΛΟΦΟΣ"",
        ""municipality"": ""Ελασσόνας"",
        ""latitude"": ""39.839722"",
        ""longitude"": ""22.152222""
    },
    {
        ""id"": ""20951"",
        ""num"": ""1404249"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΜΑΥΡΑΧΑΔΕΣ Ν. ΚΑΡΔΙΤΣΑΣ"",
        ""municipality"": ""Σοφάδων"",
        ""latitude"": ""39.2725"",
        ""longitude"": ""22.056389""
    },
    {
        ""id"": ""20953"",
        ""num"": ""1404263"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΣΟΒΕΛ (ΒΙΟΧΑΛΚΟ) ΠΕΡΙΟΧΗ ΑΛΜΥΡΟΥ"",
        ""municipality"": ""Αλμυρού"",
        ""latitude"": ""39.168333"",
        ""longitude"": ""22.839722""
    },
    {
        ""id"": ""20970"",
        ""num"": ""1405076"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΜΕΘΑΝΑ ΚΤΙΡΙΟ ΟΤΕ"",
        ""municipality"": ""Τροιζηνίας"",
        ""latitude"": ""37.579722"",
        ""longitude"": ""23.388333""
    },
    {
        ""id"": ""20985"",
        ""num"": ""1405126"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΠΡΟΦΗΤΗΣ ΗΛΙΑΣ"",
        ""municipality"": ""Τριφυλίας"",
        ""latitude"": ""37.1475"",
        ""longitude"": ""21.6175""
    },
    {
        ""id"": ""21003"",
        ""num"": ""1405168"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΚΤΙΡΙΟ ΟΤΕ ΚΟΘΡΕΑΣ ΒΑΣΙΛΙΚΑΔΕΣ"",
        ""municipality"": ""Κεφαλλονιάς"",
        ""latitude"": ""38.395278"",
        ""longitude"": ""20.565""
    },
    {
        ""id"": ""21005"",
        ""num"": ""1405175"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΜΟΝΗ ΚΑΘΑΡΩΝ ΙΘΑΚΗ"",
        ""municipality"": ""Ιθάκης"",
        ""latitude"": ""38.395278"",
        ""longitude"": ""20.673333""
    },
    {
        ""id"": ""21013"",
        ""num"": ""1405202"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΚΑΛΟΓΡΙΕΣ, ΞΗΡΟΧΩΡΙ, Ν. ΗΛΕΙΑΣ"",
        ""municipality"": ""Ζαχάρως"",
        ""latitude"": ""37.519167"",
        ""longitude"": ""21.645278""
    },
    {
        ""id"": ""21056"",
        ""num"": ""1406050"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΚΑΝΑΛΙΑ, ΝΗΣΟΣ ΜΥΚΟΝΟΥ"",
        ""municipality"": ""Μυκόνου"",
        ""latitude"": ""37.430278"",
        ""longitude"": ""25.308889""
    },
    {
        ""id"": ""21077"",
        ""num"": ""1406135"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΚΤΙΡΙΟ ΟΤΕ ΠΑΝΩ ΑΡΧΑΝΕΣ ΓΙΟΥΧΤΑ"",
        ""municipality"": ""Αρχανών - Αστερουσίων"",
        ""latitude"": ""35.240278"",
        ""longitude"": ""25.144444""
    },
    {
        ""id"": ""21078"",
        ""num"": ""1406149"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨ. ΓΡΙΑ ΒΙΓΛΑ ΠΟΜΠΙΑ"",
        ""municipality"": ""Φαιστού"",
        ""latitude"": ""34.994444"",
        ""longitude"": ""24.871667""
    },
    {
        ""id"": ""21092"",
        ""num"": ""1406206"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΠΕΡΙΟΧΗ ΜΠΟΥΛΟΥΡΟΥ ΠΛΗΣΙΟΝ ΜΟΝΗΣ ΑΓ. ΠΑΝΤΩΝ ΚΑΛΥΜΝΟΣ"",
        ""municipality"": ""Καλυμνίων"",
        ""latitude"": ""36.945278"",
        ""longitude"": ""26.976667""
    },
    {
        ""id"": ""21117"",
        ""num"": ""1406276"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΚΤΙΡΙΟ ΟΤΕ, ΥΨΩΜΑ ΚΛΕΙΔΙ"",
        ""municipality"": ""Λέρου"",
        ""latitude"": ""37.174444"",
        ""longitude"": ""26.823056""
    },
    {
        ""id"": ""21126"",
        ""num"": ""1406303"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΑΓ. ΕΛΕΥΘΕΡΙΟΣ"",
        ""municipality"": ""Φολεγάνδρου"",
        ""latitude"": ""36.621111"",
        ""longitude"": ""24.911111""
    },
    {
        ""id"": ""21139"",
        ""num"": ""1406325"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΣΗΜΑΔΙ ΑΓ. ΕΥΣΤΡΑΤΙΟΣ"",
        ""municipality"": ""Αγίου Ευστρατίου"",
        ""latitude"": ""39.5275"",
        ""longitude"": ""25.029722""
    },
    {
        ""id"": ""21142"",
        ""num"": ""1406343"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΣΟΚΑΡΑΣ, Ν. ΗΡΑΚΛΕΙΟΥ"",
        ""municipality"": ""Γόρτυνας"",
        ""latitude"": ""35.064722"",
        ""longitude"": ""25.104722""
    },
    {
        ""id"": ""21160"",
        ""num"": ""1400019"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΚΤΙΡΙΟ ΟΤΕ ΑΦΙΔΝΕΣ"",
        ""municipality"": ""Ωρωπού"",
        ""latitude"": ""38.194722"",
        ""longitude"": ""23.854167""
    },
    {
        ""id"": ""21162"",
        ""num"": ""1400028"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΚΤΙΡΙΟ ΟΤΕ, Λ. ΕΙΡΗΝΗΣ 153 & ΑΘ. ΔΙΑΚΟΥ"",
        ""municipality"": ""Περάματος"",
        ""latitude"": ""37.963889"",
        ""longitude"": ""23.571667""
    },
    {
        ""id"": ""21224"",
        ""num"": ""1400117"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΚΤΙΡΙΟ ΟΤΕ, ΛΙΜΕΝΑΣ ΜΑΡΚΟΠΟΥΛΟΥ"",
        ""municipality"": ""Μαρκοπούλου Μεσογαίας"",
        ""latitude"": ""37.886389"",
        ""longitude"": ""24.004167""
    },
    {
        ""id"": ""21225"",
        ""num"": ""1400121"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΚΑΡΑΪΣΚΑΚΗ 1"",
        ""municipality"": ""Λαυρεωτικής"",
        ""latitude"": ""37.805556"",
        ""longitude"": ""23.977778""
    },
    {
        ""id"": ""21226"",
        ""num"": ""1400124"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΕΘΝ. ΑΝΤΙΣΤΑΣΗΣ 5 ΚΤΙΡΙΟ ΟΤΕ"",
        ""municipality"": ""Λαυρεωτικής"",
        ""latitude"": ""37.713333"",
        ""longitude"": ""24.053056""
    },
    {
        ""id"": ""21230"",
        ""num"": ""1400285"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΔΗΜ. ΜΠΕΗ, ΚΤΙΡΙΟ ΟΤΕ"",
        ""municipality"": ""Μεγαρέων"",
        ""latitude"": ""37.993333"",
        ""longitude"": ""23.344722""
    },
    {
        ""id"": ""21247"",
        ""num"": ""1402047"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΜΑΥΡΟΜΑΤΗ & ΜΗΤΡΟΥ ΚΤΙΡΙΟ ΟΤΕ"",
        ""municipality"": ""Ναυπακτίας"",
        ""latitude"": ""38.393333"",
        ""longitude"": ""21.833611""
    },
    {
        ""id"": ""21255"",
        ""num"": ""1402074"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΔΟΜΟΚΟΣ ΤΚ. 35010, ΚΤΙΡΙΟ ΟΤΕ ,Ν. ΦΘΙΩΤΙΔΑΣ"",
        ""municipality"": ""Δομοκού"",
        ""latitude"": ""39.128056"",
        ""longitude"": ""22.300278""
    },
    {
        ""id"": ""21278"",
        ""num"": ""1403054"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΚΤΙΡΙΟ ΟΤΕ -ΠΛΑΚΑ ΛΙΤΟΧΩΡΟΥ"",
        ""municipality"": ""Δίου - Ολύμπου"",
        ""latitude"": ""40.100278"",
        ""longitude"": ""22.556389""
    },
    {
        ""id"": ""21326"",
        ""num"": ""1404098"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΚΤΙΡΙΟ ΟΤΕ ΥΨΩΜΑ ΤΥΜΠΑΝΟΣ ΠΡΟΦΗΤΗΣ ΗΛΙΑΣ ΟΞΙΑ ΜΟΥΖΑΚΙ"",
        ""municipality"": ""Μουζακίου"",
        ""latitude"": ""39.364444"",
        ""longitude"": ""21.575556""
    },
    {
        ""id"": ""21340"",
        ""num"": ""1405038"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΕΠΙ ΤΗΣ Π.Ε.Ο ΚΟΡΙΝΘΟΥ-ΠΑΤΡΩΝ-ΚΤΙΡΙΟ ΟΤΕ ΒΡΑΧΑΤΙ"",
        ""municipality"": ""Βέλου - Βόχας"",
        ""latitude"": ""37.956111"",
        ""longitude"": ""22.801111""
    },
    {
        ""id"": ""21344"",
        ""num"": ""1405083"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΜΗΤΡΟΠΟΛΙΤΟΥ ΦΩΣΤΙΝΗ 5 ΚΤΙΡΙΟ ΟΤΕ"",
        ""municipality"": ""Ερμιονίδας"",
        ""latitude"": ""37.379722"",
        ""longitude"": ""23.158333""
    },
    {
        ""id"": ""21366"",
        ""num"": ""1405292"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΘΕΣΗ ΟΤΕ ΒΥΤΙΝΑ"",
        ""municipality"": ""Γορτυνίας"",
        ""latitude"": ""37.67"",
        ""longitude"": ""22.183889""
    },
    {
        ""id"": ""21374"",
        ""num"": ""1406040"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΚΤΙΡΙΟ ΟΤΕ ΧΩΡΑ ΜΥΚΟΝΟΥ"",
        ""municipality"": ""Μυκόνου"",
        ""latitude"": ""37.449722"",
        ""longitude"": ""25.330278""
    },
    {
        ""id"": ""21376"",
        ""num"": ""1406044"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΚΤΙΡΙΟ ΟΤΕ ΘΗΡΑ"",
        ""municipality"": ""Θήρας"",
        ""latitude"": ""36.419722"",
        ""longitude"": ""25.432222""
    },
    {
        ""id"": ""21383"",
        ""num"": ""1406086"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΚΤΙΡΙΟ ΟΤΕ Κ. ΣΦΑΚΙΑΝΑΚΗ 10 & 25ης ΜΑΡΤΙΟΥ"",
        ""municipality"": ""Αγίου Νικολάου"",
        ""latitude"": ""35.190278"",
        ""longitude"": ""25.717222""
    },
    {
        ""id"": ""21394"",
        ""num"": ""1406185"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΠΛΑΤΥΣ ΓΙΑΛΟΣ ΚΤΙΡΙΟ ΟΤΕ ΣΙΦΝΟΥ"",
        ""municipality"": ""Σίφνου"",
        ""latitude"": ""36.932778"",
        ""longitude"": ""24.733889""
    },
    {
        ""id"": ""21404"",
        ""num"": ""1406230"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΑΓ. ΑΘΑΝΑΣΙΟΣ ΜΥΡΙΝΑ"",
        ""municipality"": ""Λήμνου"",
        ""latitude"": ""39.903889"",
        ""longitude"": ""25.078889""
    },
    {
        ""id"": ""21406"",
        ""num"": ""1406238"",
        ""company"": ""COSMOTE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΚΤΙΡΙΟ ΟΤΕ ΕΠΙ ΤΗΣ ΟΔΟΥ ΒΕΡΝΑΔΑΚΗ, ΟΙΚΙΣΜΟΣ ΚΑΛΛΟΝΗΣ"",
        ""municipality"": ""Λέσβου"",
        ""latitude"": ""39.233333"",
        ""longitude"": ""26.208611""
    },
    {
        ""id"": ""21432"",
        ""num"": ""1000105"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΠΕΡΙΟΧΗ ΠΛΑΓΙΑΡΙΟΥ, ΘΕΣΗ ΛΙΒΑΔΑΚΙ"",
        ""municipality"": ""Θέρμης"",
        ""latitude"": ""40.513333"",
        ""longitude"": ""22.949444""
    },
    {
        ""id"": ""21433"",
        ""num"": ""1001061"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΣΕΣΙ, ΟΡΟΣ ΥΜΗΤΤΟΣ, ΑΝΩ ΑΡΓΥΡΟΥΠΟΛΗ, Ν. ΑΤΤΙΚΗΣ (ΜΙΚΡΟΚΥΜΑΤΙΚΟΣ ΣΤΑΘΜΟΣ ΒΑΣΗΣ)"",
        ""municipality"": ""Ελληνικού - Αργυρούπολης"",
        ""latitude"": ""37.920833"",
        ""longitude"": ""23.776944""
    },
    {
        ""id"": ""21436"",
        ""num"": ""1001063"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΑΝΑΜΕΤΑΔΟΤΗΣ ΠΟΙΚΙΛΟΥ ΟΡΟΥΣ (ΜΙΚΡΟΚΥΜΑΤΙΚΟΣ ΣΤΑΘΜΟΣ ΒΑΣΗΣ), Ν.ΑΤΤΙΚΗΣ"",
        ""municipality"": ""Ασπροπύργου"",
        ""latitude"": ""38.029444"",
        ""longitude"": ""23.654167""
    },
    {
        ""id"": ""21520"",
        ""num"": ""1000162"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΒΟΡΕΙΑ ΤΟΥ ΧΩΡΙΟΥ ΠΕΤΡΑΔΕΣ"",
        ""municipality"": ""Διδυμοτείχου"",
        ""latitude"": ""41.3625"",
        ""longitude"": ""26.604167""
    },
    {
        ""id"": ""21524"",
        ""num"": ""1000163"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΛΕΠΤΗ Ν. ΕΒΡΟΥ (ΠΛΗΣΙΟΝ ΟΡΕΣΤΙΑΔΑΣ)"",
        ""municipality"": ""Διδυμοτείχου"",
        ""latitude"": ""41.498889"",
        ""longitude"": ""26.466389""
    },
    {
        ""id"": ""21528"",
        ""num"": ""1001325"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΛΟΥΛΚΟ, ΔΗΜΟΤΙΚΟ ΔΙΑΜΕΡΙΣΜΑ ΑΓΙΟΥ ΑΘΑΝΑΣΙΟΥ"",
        ""municipality"": ""Έδεσσας"",
        ""latitude"": ""40.833889"",
        ""longitude"": ""21.776111""
    },
    {
        ""id"": ""21575"",
        ""num"": ""1000203"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΘΕΣΗ 'ΟΧΗ ΑΓΡΟΛΙΔΙΟΥ',Δ.Δ. ΡΟΔΙΑΣ"",
        ""municipality"": ""Μαλεβιζίου"",
        ""latitude"": ""35.351111"",
        ""longitude"": ""25.006944""
    },
    {
        ""id"": ""21705"",
        ""num"": ""1002371"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΑΓ. ΜΗΝΑ ΒΙΝΙΑΝΗΣ"",
        ""municipality"": ""Δελφών"",
        ""latitude"": ""38.625"",
        ""longitude"": ""22.359722""
    },
    {
        ""id"": ""21711"",
        ""num"": ""1002381"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""9ο ΧΛΜ ΕΘΝ. ΟΔΟΥ ΑΘΗΝΩΝ - ΛΑΜΙΑΣ"",
        ""municipality"": ""Θηβαίων"",
        ""latitude"": ""38.379444"",
        ""longitude"": ""23.275833""
    },
    {
        ""id"": ""21716"",
        ""num"": ""1002402"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ''ΚΟΤΡΩΝΑΚΙΑ'' ΔΗΜ. ΔΙΑΜ. ΟΚΤΩΝΙΑΣ"",
        ""municipality"": ""Κύμης - Αλιβερίου"",
        ""latitude"": ""38.515278"",
        ""longitude"": ""24.1725""
    },
    {
        ""id"": ""21740"",
        ""num"": ""1002452"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΝΕΑΠΟΛΙΣ"",
        ""municipality"": ""Αμυνταίου"",
        ""latitude"": ""40.667222"",
        ""longitude"": ""21.693611""
    },
    {
        ""id"": ""21761"",
        ""num"": ""1002515"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΕΛ. ΒΕΝΙΖΕΛΟΥ 124 & ΠΡΩΤΟΠΑΠΠΑ ΠΛ. 28ης ΟΚΤΩΒΡΙΟΥ ΗΛΙΟΥΠΟΛΗ ΑΤΤΙΚΗΣ"",
        ""municipality"": ""Ηλιουπόλεως"",
        ""latitude"": ""37.937222"",
        ""longitude"": ""23.759167""
    },
    {
        ""id"": ""21786"",
        ""num"": ""1001206"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΘΕΣΗ 'ΠΡΟΦ. ΗΛΙΑΣ'"",
        ""municipality"": ""Καρπάθου"",
        ""latitude"": ""35.486944"",
        ""longitude"": ""27.168333""
    },
    {
        ""id"": ""21796"",
        ""num"": ""1000263"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΛΕΡΟΣ (ΠΕΡΙΟΧΗ ΚΛΕΙΔΙ ΛΕΡΟΥ) Ν. ΔΩΔΕΚΑΝΗΣΟΥ"",
        ""municipality"": ""Λέρου"",
        ""latitude"": ""37.179444"",
        ""longitude"": ""26.831944""
    },
    {
        ""id"": ""21801"",
        ""num"": ""1002693"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""Ο 'ΚΑΘΑΡΑ ΚΟΡΥΦΗ ' ΟΙΚΙΣΚΟΥ ''ΜΑΥΡΟΒΟΥΝΙ' Δ.ΣΚΥΔΡΑΣ Ν.ΠΕΛΛΗΣ"",
        ""municipality"": ""Σκύδρας"",
        ""latitude"": ""40.792778"",
        ""longitude"": ""22.152222""
    },
    {
        ""id"": ""21821"",
        ""num"": ""1000282"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΝΟΤΕΣ ΣΚΥΡΟΥ"",
        ""municipality"": ""Σκύρου"",
        ""latitude"": ""38.885"",
        ""longitude"": ""24.548056""
    },
    {
        ""id"": ""21836"",
        ""num"": ""1002852"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΠΥΡΓΙΣΚΟΣ ΒΑΛΑΝΙΔΟΥΣΣΑ Δ. Δ. ΟΡΕΙΝΟΥ"",
        ""municipality"": ""Πάργας"",
        ""latitude"": ""39.214167"",
        ""longitude"": ""20.627222""
    },
    {
        ""id"": ""21852"",
        ""num"": ""1000295"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΚΟΥΡΟΥΠΑ ΡΕΘΥΜΝΟΥ"",
        ""municipality"": ""Αγίου Βασιλείου"",
        ""latitude"": ""35.210556"",
        ""longitude"": ""24.440278""
    },
    {
        ""id"": ""21939"",
        ""num"": ""1001302"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""Δίδυμα Αργολίδας"",
        ""municipality"": ""Ερμιονίδας"",
        ""latitude"": ""37.474444"",
        ""longitude"": ""23.208056""
    },
    {
        ""id"": ""21941"",
        ""num"": ""1000399"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ 'ΚΑΣΤΑΝΙΑ', Δ.Δ. ΒΛΑΧΕΡΝΗΣ"",
        ""municipality"": ""Τρίπολης"",
        ""latitude"": ""37.736389"",
        ""longitude"": ""22.24""
    },
    {
        ""id"": ""21954"",
        ""num"": ""1000411"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΠΡ. ΗΛΙΑΣ. ΙΣΤΙΑΙΑ"",
        ""municipality"": ""Ιστιαίας - Αιδηψού"",
        ""latitude"": ""38.865556"",
        ""longitude"": ""23.187778""
    },
    {
        ""id"": ""22002"",
        ""num"": ""1000495"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΒΟΥΝΟ ΑΛΟΝΗΣΟΥ, ΝΗΣΟΣ ΑΛΟΝΗΣΟΣ, Ν. ΜΑΓΝΗΣΙΑΣ"",
        ""municipality"": ""Αλοννήσου"",
        ""latitude"": ""39.1625"",
        ""longitude"": ""23.858333""
    },
    {
        ""id"": ""22086"",
        ""num"": ""1000665"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΥΨΩΜΑ ΑΝΑΛΗΨΗΣ ΔΗΜΟΣ ΠΡΩΤΗΣ Ν. ΣΕΡΡΩΝ"",
        ""municipality"": ""Αμφίπολης"",
        ""latitude"": ""40.935"",
        ""longitude"": ""24.067222""
    },
    {
        ""id"": ""22090"",
        ""num"": ""1000667"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΓΑΛΑΝΗ ΠΛΗΣΙΟΝ ΘΕΣΗΣ ΜΝΗΜΑΤΑ"",
        ""municipality"": ""Ξάνθης"",
        ""latitude"": ""41.11"",
        ""longitude"": ""24.778889""
    },
    {
        ""id"": ""22130"",
        ""num"": ""1000746"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""Λ. ΒΟΥΛΙΑΓΜΕΝΗΣ 78 & ΔΙΓΕΝΗ, ΒΟΥΛΑ, Ν. ΑΤΤΙΚΗΣ"",
        ""municipality"": ""Βάρης - Βούλας - Βουλιαγμένης"",
        ""latitude"": ""37.841389"",
        ""longitude"": ""23.771667""
    },
    {
        ""id"": ""22180"",
        ""num"": ""1000808"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΚΟΡΥΦΗ ΠΡΟΦ.ΗΛΙΑΣ ΜΠΑΛΑΙΚΑ ΛΕΒΑΔΕΙΑ ΒΟΙΩΤΙΑΣ"",
        ""municipality"": ""Λεβαδέων"",
        ""latitude"": ""38.468611"",
        ""longitude"": ""22.867222""
    },
    {
        ""id"": ""22236"",
        ""num"": ""1000877"",
        ""company"": ""VODAFONE"",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΚΟΤΣΙΦΙΑΝΑ ΦΤΕΡΟΛΑΚΟΣ ΚΑΚΟΠΕΤΡΙΟΥ  ΧΑΝΙΩΝ"",
        ""municipality"": ""Πλατανιά"",
        ""latitude"": ""35.410278"",
        ""longitude"": ""23.745833""
    },
    {
        ""id"": ""22361"",
        ""num"": ""1200110"",
        ""company"": ""NOVA Μ.Α.Ε."",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΠΛΗΣΙΟΝ ΠΛΑΤΑΜΩΝΟΣ Ν.ΠΙΕΡΙΑΣ"",
        ""municipality"": ""Δίου - Ολύμπου"",
        ""latitude"": ""39.989167"",
        ""longitude"": ""22.602222""
    },
    {
        ""id"": ""22397"",
        ""num"": ""1200153"",
        ""company"": ""NOVA Μ.Α.Ε."",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΠΛΗΣΙΟΝ ΝΙΓΡΙΤΑΣ, Ν. ΣΕΡΡΩΝ"",
        ""municipality"": ""Βισαλτίας"",
        ""latitude"": ""40.893333"",
        ""longitude"": ""23.464167""
    },
    {
        ""id"": ""22464"",
        ""num"": ""1200261"",
        ""company"": ""NOVA Μ.Α.Ε."",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΒΥΤΙΝΑ, ΠΛΗΣΙΟΝ ΧΩΡΙΟΥ ΜΑΓΟΥΛΙΑΝΑ, Ν. ΑΡΚΑΔΙΑΣ"",
        ""municipality"": ""Γορτυνίας"",
        ""latitude"": ""37.683056"",
        ""longitude"": ""22.130556""
    },
    {
        ""id"": ""22487"",
        ""num"": ""1200312"",
        ""company"": ""NOVA Μ.Α.Ε."",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΑΜΟΡΓΟΣ (ΠΛΗΣΙΟΝ ΠΟΛΗΣ ΑΜΟΡΓΟΥ), Ν.ΚΥΚΛΑΔΩΝ"",
        ""municipality"": ""Αμοργού"",
        ""latitude"": ""36.844722"",
        ""longitude"": ""25.899167""
    },
    {
        ""id"": ""22491"",
        ""num"": ""1200316"",
        ""company"": ""NOVA Μ.Α.Ε."",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΠΛΗΣΙΟΝ ΝΑΟΥΣΑΣ, ΠΕΡΙΦΕΡΕΙΑΚΗ ΕΝΟΤΗΤΑ ΠΑΡΟΥ"",
        ""municipality"": ""Πάρου"",
        ""latitude"": ""37.1225"",
        ""longitude"": ""25.235556""
    },
    {
        ""id"": ""22512"",
        ""num"": ""1200414"",
        ""company"": ""NOVA Μ.Α.Ε."",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΠΛΗΣΙΟΝ ΧΩΡΙΟΥ ΘΥΜΙΑΝΟ ΧΙΟΣ"",
        ""municipality"": ""Χίου"",
        ""latitude"": ""38.315556"",
        ""longitude"": ""26.149444""
    },
    {
        ""id"": ""22521"",
        ""num"": ""1200431"",
        ""company"": ""NOVA Μ.Α.Ε."",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΘΕΣΗ ΤΡΟΤΣΟΥΛΙ ΤΗΣ ΝΗΣΟΥ ΚΩ"",
        ""municipality"": ""Κω"",
        ""latitude"": ""36.854167"",
        ""longitude"": ""27.300278""
    },
    {
        ""id"": ""22569"",
        ""num"": ""1200567"",
        ""company"": ""NOVA Μ.Α.Ε."",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΠΛΗΣΙΟΝ ΚΑΣΤΡΙΟΥ ΝΗΣΟΣ ΓΑΥΔΟΥ Ν. ΧΑΝΙΩΝ"",
        ""municipality"": ""Γαύδου"",
        ""latitude"": ""34.836944"",
        ""longitude"": ""24.073611""
    },
    {
        ""id"": ""22594"",
        ""num"": ""1200632"",
        ""company"": ""NOVA Μ.Α.Ε."",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""ΚΑΤΑΚΟΥΖΗΝΟΥ 20"",
        ""municipality"": ""Ιλίου"",
        ""latitude"": ""38.031111"",
        ""longitude"": ""23.687778""
    },
    {
        ""id"": ""22646"",
        ""num"": ""1200729"",
        ""company"": ""NOVA Μ.Α.Ε."",
        ""legal"": ""Αδειοδοτημένη"",
        ""address"": ""5ο ΧΛΜ ΕΘΝΙΚΗΣ ΟΔΟΥ ΘΕΣ/ΝΙΚΗΣ - ΜΟΥΔΑΝΙΩΝ"",
        ""municipality"": ""Θέρμης"",
        ""latitude"": ""40.554167"",
        ""longitude"": ""22.996944""
    }
];

    function getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {
        const R = 6371; // Radius of the earth in km
        const dLat = deg2rad(lat2-lat1);  // deg2rad below
        const dLon = deg2rad(lon2-lon1); 
        const a = 
            Math.sin(dLat/2) * Math.sin(dLat/2) +
            Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * 
            Math.sin(dLon/2) * Math.sin(dLon/2)
            ; 
            const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
            const d = R * c; // Distance in km
        return d;
    }

    function deg2rad(deg) {
        return deg * (Math.PI/180)
    }

    function findClose() {
        let lati = document.getElementById('lati').value;
        let long = document.getElementById('long').value;

        for (ant of antennas) {
            //ant.distance = Math.sqrt((ant.latitude - latt)**2 + (ant.longitude - long)**2);
            ant.distance = (getDistanceFromLatLonInKm(lati,long, ant.latitude, ant.longitude));
        } 

        antennas.sort((a,b) => a.distance - b.distance);

        $('table').empty();
        $('table').append(
            `<tr>
                <th>id</th>
                <th>number</th>
                <th>company</th>
                <th>legal</th>
                <th>address</th>
                <th>municipality</th>
                <th>latitude</th>
                <th>longitude</th>
                <th>distance</th>
            </tr>`);
        for (ant of antennas.slice(0,5)) {
            let row = `<tr>` + 
                `<td>` + ant.id + `</td>` +
                `<td>` + ant.num + `</td>` +
                `<td>` + ant.company + `</td>` +
                `<td>` + ant.legal + `</td>` +
                `<td>` + ant.address + `</td>` +
                `<td>` + ant.municipality + `</td>` +
                `<td>` + ant.latitude + `</td>` +
                `<td>` + ant.longitude + `</td>` +
                `<td>` + ant.distance + `</td>` +
            `</tr>`;
            $('table').append(row);
        }
    }

</script>

<h1>Find Closest Antennas</h1>
<p>Eyaggelos Giannoulis - vagmaster@gmail.com </p>
<hr>
<p>Submit your coordinates in latitude and Longitude format and the system will find you the closest antennas</p>
<input type=""text"" id=""lati"" value="""" placeholder=""Latitude"" />
<br />
<input type=""text"" id=""long"" value="""" placeholder=""Longitude"" />
<br />
<button onclick=""findClose()"" id=""btn"">Find Closest Antennas</button>

<br><br><br>
<p>Results</p>
<table id=""myTable"">
</table>

"
uwQWfdsQ,All o'One Data Structure,yarin0600,C++,Saturday 18th of November 2023 11:00:39 AM CDT,"#include <iostream>
#include <string>
#include <unordered_map>
#include <unordered_set>
#include <list>

struct Node
{
   int frequency;
   std::unordered_set<std::string> keys;
};

class AllOne
{
public:
   AllOne()
   {
   }

   void inc(std::string key)
   {
      // two cases:
      // Case A1: key is not in our data structure
      if (_stringToNode.count(key) == 0)
      {
         // we need to insert it to the first node.
         // two cases:
         // Case A2: node with freq = 1 is not present:
         if (_listOfRecords.empty() || _listOfRecords.front().frequency > 1)
            _listOfRecords.push_front({.frequency = 1, .keys = {key}});
         // Case B2: node with freq = 1 is present:

         else
            _listOfRecords.front().keys.insert(key);

         // update map that maps this key to the iterator
         _stringToNode[key] = _listOfRecords.begin();
      }
      // Case B1: key is in our data structure
      else
      {
         // obtain the key:
         auto it = _stringToNode[key];
         int currentFrequency = it->frequency;
         // add to the new list one next to it
         auto itNext = std::next(it);
         // Insertion two cases:
         // Case A3: the next node does not exist yet
         if (itNext == _listOfRecords.end())
         {
            _listOfRecords.push_back({.frequency = currentFrequency + 1, .keys = {key}});
            itNext = std::next(it); // update the itNext
         }

         // Case B3: next node exists
         else
            itNext->keys.insert(key);

         // remove from current unordered_set the key
         it->keys.erase(key);
         // update the unordered_map about where the key is right now
         _stringToNode[key] = itNext;
         // Removal two cases:
         // Case A4: it's not the only key in the unordered_set:
         if (it->keys.size() == 0)
         {
            _listOfRecords.erase(it);
         }
         // Case B4: it's the only key in the unordered_set: do nothing
      }
   }

   void dec(std::string key)
   {
      // Assumption - we know that it is guaranteed that key exists in the data structure before the decrement!
      // first obtain the node that contains unordered_set that contains key:
      auto it = _stringToNode[key];
      auto itPrev = (it != _listOfRecords.begin()) ? std::prev(it) : _listOfRecords.end();

      int currentFrequency = it->frequency;

      // case A1: need to remove that key
      if (currentFrequency == 1)
      {
         _stringToNode.erase(key);
      }
      // case B1: no need to remove that node but move it one node left
      else
      {
         // Case A3: Need to add new node before current Node
         if (itPrev == _listOfRecords.end() ||
             itPrev->frequency != currentFrequency - 1)
         {
            _listOfRecords.insert(it, {.frequency = currentFrequency - 1, .keys = {key}});
            itPrev = std::prev(it); // update itPrev
         }
         // Case B3: No need to add new node BEFORE current node
         else
         {
            itPrev->keys.insert(key);
         }
         // on both cases, update the unordered_map to keep track of where is the key at
         _stringToNode[key] = itPrev;
      }
      // removal from old node:

      it->keys.erase(key);
      // Case A2: need to remove that node
      if (it->keys.size() == 0)
         _listOfRecords.erase(it);

      // Case B2: no need to remove that node
      // do nothing
   }

   std::string getMaxKey()
   {
      if (_listOfRecords.size() == 0)
         return """";
      return *(_listOfRecords.rbegin()->keys.begin());
   }

   std::string getMinKey()
   {
      if (_listOfRecords.size() == 0)
         return """";
      return *(_listOfRecords.begin()->keys.begin());
   }

private:
   std::unordered_map<std::string, std::list<Node>::iterator> _stringToNode;
   std::list<Node> _listOfRecords;
};

int main()
{
   AllOne allOne;
   allOne.inc(""a"");
   allOne.inc(""b"");
   allOne.inc(""b"");
   allOne.inc(""b"");
   allOne.inc(""b"");

   allOne.dec(""b"");
   allOne.dec(""b"");
   std::cout << ""allOne.getMaxKey() = "" << allOne.getMaxKey() << std::endl; // return ""b""
   std::cout << ""allOne.getMinKey() = "" << allOne.getMinKey() << std::endl; // return ""a""
   allOne.dec(""b"");
   allOne.dec(""b"");
   std::cout << ""allOne.getMaxKey() = "" << allOne.getMaxKey() << std::endl; // return ""b""
   std::cout << ""allOne.getMinKey() = "" << allOne.getMinKey() << std::endl; // return ""a""
}"
k8KB4cu6,WPF layout system in LUA,bobmarley12345,Lua,Saturday 18th of November 2023 11:00:17 AM CDT,"

local AppTimerId = 0
local AppTimerTickRate = 10
local AppTimerInterval = 1 / AppTimerTickRate
local IsAppRunning = true
local AppDispatcherId = 0
local AppRootComponent = nil
local AppDrawTarget = term
local DEBUG_MODE = false
local ENABLE_RENDERING = true

local IsProcessingDispatcherQueue = false
local IsLayoutUpdateTaskScheduled = false
local TheRenderTask = nil

local monitor = nil
local ui = {}
local maths = {}
local toolkit = {}

local NextDispatcherOperationId = 1
local PriorityHighest = 1
local PriorityLayout = 2
local PriorityRender = 3
local PriorityBackground = 4

-- stores the application root component objects
local render_queue = {}
local layout_update_queue = {}
local dispatcher_queue = {
    [PriorityHighest] = {},
    [PriorityLayout] = {},
    [PriorityRender] = {},
    [PriorityBackground] = {},
}

local delayedTaskQueue = {}

--region UI Methods

---Sets the background colour
---@param target table The drawing target
---@param the_bg integer The colour
function ui.setBackgroundColour(target, the_bg)
    if (the_bg ~= nil) then
        target.setBackgroundColour(the_bg)
    end
end

---Sets the text colour
---@param target table The drawing target
---@param the_tc integer The colour
function ui.setTextColour(target, the_tc)
    if (the_tc ~= nil) then
        target.setTextColour(the_tc)
    end
end

---Clears the target
---@param target table The drawing target
function ui.clear(target)
    target.setBackgroundColour(colours.black)
    target.setTextColour(colours.white)
    target.clear()
    target.setCursorPos(1, 1)
end

---Fills a region with a colour
---@param target table The drawing target
---@param x integer The X pos to begin drawing at
---@param y integer The Y pos to begin drawing at
---@param width integer The width of the square
---@param height integer The height of the square
---@param bg_colour integer The colour to draw
function ui.fill(target, x, y, width, height, bg_colour)
    ui.setBackgroundColour(target, bg_colour)
    local text = string.rep("" "", width)
    for i = 0, height - 1 do
        ui.writeTextAt(target, x, y + i, text)
    end
end

---Raw function for writing text at a position (just calls setCursorPos and write)
---@param target table The drawing target
---@param x integer The X pos to write text at
---@param y integer The Y pos to write text at
---@param text string The text to write
function ui.writeTextAt(target, x, y, text)
    target.setCursorPos(x, y)
    target.write(text)
end

---Writes text at the given position with a given text and background colour
---@param target table The drawing target
---@param x integer The X pos to write text at
---@param y integer The Y pos to write text at
---@param text string The text to write
---@param text_colour integer The text colour
---@param bg_colour integer The background colour
function ui.drawText(target, x, y, text, text_colour, bg_colour)
    ui.setTextColour(target, text_colour)
    ui.setBackgroundColour(target, bg_colour)
    target.setCursorPos(x, y)
    target.write(text)
end

---Writes text at the given position with a given text and background colour
---@param target table The drawing target
---@param x integer The X pos to write text at
---@param y integer The Y pos to write text at
---@param text string The text to write
---@param text_colour integer The text colour
---@param bg_colour integer The background colour
function ui.drawTextCentered(target, x, y, width, height, text, text_colour, bg_colour)
    local absX = math.floor((width / 2) - (#text / 2))
    local absY = math.floor(height / 2)
    ui.drawText(target, x + absX, y + absY, text, text_colour, bg_colour)
end

---Draws a horizontal line
---@param target table The drawing target
---@param x integer The X pos to start the line at
---@param y integer The Y pos to start the line at
---@param length integer The length of the line
---@param colour integer The colour of the line
function ui.drawLineH(target, x, y, length, colour)
    ui.setBackgroundColour(target, colour)
    ui.writeTextAt(target, x, y, string.rep("" "", length))
end

---Draws a vertical line
---@param target table The drawing target
---@param x integer The X pos to start the line at
---@param y integer The Y pos to start the line at
---@param height integer The height of the line
---@param colour integer The colour of the line
function ui.drawLineV(target, x, y, height, colour)
    ui.setBackgroundColour(target, colour)
    for i = 1, height, 1 do
        ui.writeTextAt(target, x, i, "" "")
    end
end

function ui.internal_calc_progress_bar(length, min, max, value)
    return math.floor((value / (max - min)) * length)
end

---Draws a progress bar
---@param target table The drawing target
---@param x integer The X pos to start drawing
---@param y integer The Y pos to start drawing
---@param length integer The length of the progress bar
---@param min number The minimum value
---@param max number The maximum value
---@param value number The value
---@param bg_colour integer The background colour (non-value)
---@param val_colour integer The foreground aka value colour
---@param rightToLeft boolean True to draw the progress right to left instead of left to right
function ui.drawProgressBarH(target, x, y, length, min, max, value, bg_colour, val_colour, rightToLeft)
    ui.drawLineH(target, x, y, length, bg_colour)
    local draw_len = ui.internal_calc_progress_bar(length, min, max, value)
    if (rightToLeft ~= nil and rightToLeft == true) then
        ui.drawLineH(target, x + length - draw_len, y, draw_len, val_colour)
    else
        ui.drawLineH(target, x, y, draw_len, val_colour)
    end
end

---Draws a progress bar
---@param target table The drawing target
---@param x integer The X pos to start drawing
---@param y integer The Y pos to start drawing
---@param height integer The height of the progress bar
---@param min number The minimum value
---@param max number The maximum value
---@param value number The value
---@param bg_colour integer The background colour (non-value)
---@param val_colour integer The foreground aka value colour
---@param bottomToTop boolean True to draw the progress bottom to top instead of top to bottom
function ui.drawProgressBarV(target, x, y, height, min, max, value, bg_colour, val_colour, bottomToTop)
    ui.drawLineV(target, x, y, height, bg_colour)
    local draw_len = ui.internal_calc_progress_bar(height, min, max, value)
    if (bottomToTop ~= nil and bottomToTop == true) then
        ui.drawLineH(target, x, y + height - draw_len, draw_len, val_colour)
    else
        ui.drawLineH(target, x, y, draw_len, val_colour)
    end
end

--endregion

--region Utils

function printDebug(...)
    if (DEBUG_MODE) then
        print(...)
    end
end

function printDodgy(text)
    print(""                     "" .. text)
end

function maths.min(...)
    local min = 0
    for i = 1, arg.n, 1 do
        min = math.min(#arg[i], min)
    end
    return min
end

function maths.max(...)
    local max = 0
    for i = 1, arg.n, 1 do
        max = math.max(#arg[i], max)
    end
    return max
end

function maths.clamp(value, min, max)
    if (value < min) then
        return min
    end
    if (value > max) then
        return max
    end
    return value
end

function maths.isNaN(val)
    return val ~= val
end

function UpdateCachedIndices(children)
    for k, obj in pairs(children) do
        obj.IndexInParent = k
    end
end

function ClearTable(theTable)
    for i = #theTable, 1, -1 do
        table.remove(theTable, i)
    end
end

--endregion

--region Dispatcher utils

function invokeAsync(theMethod, priority, canExecuteWhileProcessingQueue)
    local id = NextDispatcherOperationId
    NextDispatcherOperationId = id + 1
    local operation = { Id = id, IsCompleted = false }
    if (canExecuteWhileProcessingQueue == true and IsProcessingDispatcherQueue) then
        theMethod()
        operation.IsCompleted = true
    else
        if (priority == nil) then
            priority = PriorityBackground
        end

        operation.Method = theMethod
        table.insert(dispatcher_queue[priority], operation)
        if (AppDispatcherId == 0) then
            AppDispatcherId = os.startTimer(0)
        end
    end

    return operation
end

function invokeAsyncWithDelay(theMethod, delayTimeSecs)
    local mdInfo = {
        executionTime = os.clock() + delayTimeSecs,
        md = theMethod
    }
    table.insert(delayedTaskQueue, mdInfo)
end

--endregion

--region UI Toolkit

local BaseComponent = {}

function BaseComponent:new(obj)
    obj = obj or {}
    setmetatable(obj, self)
    self.__index = self
    obj.TypeName = ""BaseComponent""
    obj.MarginL = 0
    obj.MarginT = 0
    obj.MarginR = 0
    obj.MarginB = 0
    obj.HorizontalAlignment = ""left""
    obj.VerticalAlignment = ""top""
    obj.Width = nil           -- target width
    obj.Height = nil          -- target height
    obj.MinWidth = 0
    obj.MinHeight = 0
    obj.MaxWidth = math.huge
    obj.MaxHeight = math.huge
    obj.DesiredWidth = 0      -- measured width based on Width and children
    obj.DesiredHeight = 0     -- measured height based on Height and children
    obj.RenderPosX = 0        -- arranged render X (relative to parent duh)
    obj.RenderPosY = 0        -- arranged render Y (relative to parent duh)
    obj.RenderWidth = 0       -- arranged render width
    obj.RenderHeight = 0      -- arranged render height
    -- obj.RenderAbsX = 0     -- arranged absolute X position (relative to screen)
    -- obj.RenderAbsY = 0     -- arranged absolute Y position (relative to screen)
    obj.IsLayoutDirty = false -- true when layout requires updating
    obj.IsVisualDirty = false -- true when this component and its hierarchy requires drawing
    obj.IsArranged = false    -- true when this component has been arranged and the layout is valid
    obj.IsVisualPositionValid = false
    obj.Children = {}         -- a table of child components
    obj.IndexInParent = -1    -- the index of this component in its parent
    obj.Parent = nil          -- our parent object
    return obj
end

function BaseComponent:GetMinMax()
    local max_y = self.MaxHeight
    local min_y = self.MinHeight

    max_y = math.max(math.min(self.Height or math.huge, max_y), min_y)
    min_y = math.max(math.min(max_y, self.Height or 0), min_y)

    local max_x = self.MaxWidth
    local min_x = self.MinWidth

    max_x = math.max(math.min(self.Width or math.huge, max_x), min_x)
    min_x = math.max(math.min(max_x, self.Width or 0), min_x)

    return min_x, max_x, min_y, max_y
end

function BaseComponent:GetAbsolutePosition()
    if (self.IsVisualPositionValid or self.IsLayoutDirty) then
        return self.AbsRenderPosX or 0,self.AbsRenderPosY or 0
    end

    local x, y = self.RenderPosX, self.RenderPosY
    local parent = self.Parent
    while (parent ~= nil) do
        local pX, pY = parent:GetAbsolutePosition()
        x = x + pX
        y = y + pY
        parent = parent.Parent
    end

    self.AbsRenderPosX = x
    self.AbsRenderPosY = y
    self.IsVisualPositionValid = true
    return x,y
end

function BaseComponent:OnRender(target, absX, absY)
    if (self.Background ~= nil) then
        ui.fill(target, absX, absY, self.RenderWidth, self.RenderHeight, self.Background)
    end
end

---Measures this component (and any child components), and updates (and also returns) the desired size of this component
---@param max_w number The constrated width
---@param max_h number The constrated height
---@return number Desired Width
---@return number Desired Height
function BaseComponent:Measure(max_w, max_h)
    local w, h = self:MeasureCore(max_w, max_h)
    if (w == nil) then error(""MeasureCore returned null width"") end
    if (h == nil) then error(""MeasureCore returned null height"") end
    
    self.DesiredWidth = w
    self.DesiredHeight = h
    printDebug(""MeasureCore of "" .. self.TypeName .. "": "" .. w .. "","" .. h)
    return w, h
end

function BaseComponent:MeasureCore(availableWidth, availableHeight)
    local marginWidth = self.MarginL + self.MarginR
    local marginHeight = self.MarginT + self.MarginB

    local cMinW, cMaxW, cMinH, cMaxH = self:GetMinMax()
    local s2w = maths.clamp(math.max(availableWidth - marginWidth, 0), cMinW, cMaxW)
    local s2h = maths.clamp(math.max(availableHeight - marginHeight, 0), cMinH, cMaxH)
    printDodgy(""PreM "".. self.TypeName .. "": "" .. s2w .. "","" .. s2h)
    s2w, s2h = self:MeasureOverride(s2w, s2h)
    printDodgy(""PostM "".. self.TypeName .. "": "" .. s2w .. "","" .. s2h)
    
    s2w, s2h = math.max(s2w, cMinW), math.max(s2h, cMinH)
    local s3w,s3h = s2w,s2h

    local isClipRequired = false
    if (s2w > cMaxW) then
        s2w = cMaxW
        isClipRequired = true
    end

    if (s2h > cMaxH) then
        s2h = cMaxH
        isClipRequired = true
    end

    local fin_width, fin_height = s2w + marginWidth, s2h + marginHeight
    if (fin_width > availableWidth) then
        fin_width = availableWidth
        isClipRequired = true
    end

    if (fin_height > availableHeight) then
        fin_height = availableHeight
        isClipRequired = true
    end

    local unclippedBox = self.InternalUnclippedBox
    if (isClipRequired or fin_width < 0 or fin_height < 0) then
        if (unclippedBox == nil) then
            unclippedBox = {}
            self.InternalUnclippedBox = unclippedBox
        end

        unclippedBox.w = s3w
        unclippedBox.h = s3h
    elseif (unclippedBox ~= nil) then
        self.InternalUnclippedBox = nil
    end
    -- printDodgy(""MEASURE "".. self.TypeName .. "": "" .. val2_1 .. "","" .. val2_2)
    return fin_width,fin_height
end

---The overridable method for measuring this component. Returns 0,0 for an empty component
---@param max_w number The maximum width
---@param max_h number The maximum height
---@return number Final width
---@return number Final height
function BaseComponent:MeasureOverride(max_w, max_h)
    local w, h = 0,0
    for i, child in ipairs(self.Children) do
        local cW, cH = child:Measure(max_w, max_h)
        if (cW == nil) then error(""Child returned null width while measuring: "" .. child.TypeName) end
        if (cH == nil) then error(""Child returned null height while measuring: "" .. child.TypeName) end

        if (cW > w) then w = cW end
        if (cH > h) then h = cH end
    end

    return w, h
end

---Arranges the position and calculates the render size for this component and any child components
---@param inPosX number The rendering X offset (0 by default)
---@param inPosY number The rendering Y offset (0 by default)
---@param inWidth number
---@param inHeight number
function BaseComponent:Arrange(inPosX, inPosY, inWidth, inHeight)
    local marginWidth = self.MarginL + self.MarginR
    local marginHeight = self.MarginT + self.MarginB
    local s2w = math.max(inWidth - marginWidth, 0)
    local s2h = math.max(inHeight - marginHeight, 0)
    local s3w, s3h

    self.NeedClipBounds = false
    local unclippedBox = self.InternalUnclippedBox
    if (unclippedBox == nil) then
        s3w = math.max(self.DesiredWidth - marginWidth, 0)
        s3h = math.max(self.DesiredHeight - marginHeight, 0)
    else
        s3w = unclippedBox.w
        s3h = unclippedBox.h
    end

    if (s2w < s3w) then
        s2w = s3w
        self.NeedClipBounds = true
    end
    if (s2h < s3h) then
        s2h = s3h
        self.NeedClipBounds = true
    end

    if (self.HorizontalAlignment ~= ""stretch"") then
        s2w = s3w
    end

    if (self.VerticalAlignment ~= ""stretch"") then
        s2h = s3h
    end

    local cMinW, cMaxW, cMinH, cMaxH = self:GetMinMax()
    printDodgy(""Arrange s3 "" .. self.TypeName .. "": "" .. s3w .. "","" .. s3h)

    local absMaxWidth = math.max(s3w, cMaxW)
    if (absMaxWidth < s2w) then
        s2w = absMaxWidth
        self.NeedClipBounds = true
    end

    local absMaxHeight = math.max(s3h, cMaxH)
    if (absMaxHeight < s2h) then
        s2h = absMaxHeight
        self.NeedClipBounds = true
    end

    local s4w, s4h = self:ArrangeOverride(s2w, s2h)
    if (s4w == nil) then error(""ArrangeOverride Width cannot be null"") end
    if (s4h == nil) then error(""ArrangeOverride Height cannot be null"") end
    self.RenderWidth = s4w
    self.RenderHeight = s4h

    local s5w,s5h = math.min(s4w, cMaxW),math.min(s4h, cMaxH)
    if (not self.NeedClipBounds and ((s5w < s4w) or (s5h < s4h))) then
        self.NeedClipBounds = true
    end

    local s6w,s6h = math.max(inWidth - marginWidth, 0),math.max(inHeight - marginHeight, 0)
    if (not self.NeedClipBounds and ((s6w < s5w) or (s6h < s5h))) then
        self.NeedClipBounds = true
    end

    -- client = s6, inkSize = s5
    local alignHorz = self.HorizontalAlignment
    local alignVert = self.VerticalAlignment
    if (s5w > s6w) then alignHorz = ""left"" end
    if (s5h > s6h) then alignVert = ""top"" end
    
    local vecX, vecY = 0,0
    if (alignHorz == ""center"" or alignHorz == ""stretch"") then
        vecX = (s6w - s5w) / 2
    elseif (alignHorz == ""right"") then
        vecX = s6w - s5w
    end

    if (alignVert == ""center"" or alignVert == ""stretch"") then
        vecY = (s6h - s5h) / 2
    elseif (alignVert == ""bottom"") then
        vecY = s6h - s5h
    end

    vecX = vecX + inPosX + self.MarginL
    vecY = vecY + inPosY + self.MarginT

    self.RenderPosX = vecX
    self.RenderPosY = vecY

    -- if (self.Parent == nil) then
    --     self.RenderAbsX, self.RenderAbsY = self.RenderPosX, self.RenderPosY
    -- else
    --     self.RenderAbsX = self.Parent.RenderAbsX + self.RenderPosX
    --     self.RenderAbsY = self.Parent.RenderAbsY + self.RenderPosY
    -- end

    self.IsArranged = true
    self.IsLayoutDirty = false
end

---The overridable method for arranging this component
---@param width number The final width of this component
---@param height number The final height of this component
---@return number The render width, typically the final width parameter
---@return number The render height, typically the final height parameter
function BaseComponent:ArrangeOverride(width, height)
    for i, child in pairs(self.Children) do
        child:Arrange(0, 0, width, height)
    end
    return width, height
end

function toolkit.DoLayoutUpdateForComponent(component)
    local max_w, max_h
    if (component.Parent == nil) then
        max_w, max_h = AppDrawTarget.getSize()
    elseif (component.Parent.IsLayoutDirty) then
        error(""Error: parent's layout was dirty. It's render size cannot be used to update child layouts"")
    else
        max_w = component.Parent.RenderWidth
        max_h = component.Parent.RenderHeight
    end

    max_w,max_h = component:Measure(max_w, max_h)
    component:Arrange(0, 0, max_w, max_h)
    component.IsLayoutDirty = false
end

function toolkit.DoLayoutUpdate()
    -- printDebug(""Begin "" .. #layout_update_queue .. "" layout updates"")
    for i, component in pairs(layout_update_queue) do
        if (component.IsLayoutDirty) then
            local last_dirty = nil
            local scan_parent = component.Parent
            while (scan_parent ~= nil) do
                if (scan_parent.IsLayoutDirty) then
                    last_dirty = scan_parent
                end

                scan_parent = scan_parent.Parent
            end

            local targetComponent
            if (last_dirty ~= nil) then
                targetComponent = last_dirty
            else
                targetComponent = component
            end

            printDebug(""Processing next layout: "" .. targetComponent.TypeName)
            toolkit.DoLayoutUpdateForComponent(targetComponent)
        end
    end

    for i = #layout_update_queue, 1, -1 do
        table.remove(layout_update_queue, i)
    end
    printDebug(""End layout update"")
end

function BaseComponent:InvalidateVisual()
    if (not self.IsVisualDirty) then
        self.IsVisualDirty = true
        table.insert(render_queue, self)
    else
        printDebug(""Visual already dirty"")
    end

    if (TheRenderTask == nil or TheRenderTask.IsCompleted) then
        TheRenderTask = invokeAsync(toolkit.ProcessRenderList, PriorityRender)
    end
end

function BaseComponent:InvalidateLayout()
    self:InvalidateVisual()
    if (self.IsLayoutDirty) then
        return
    end

    self.IsLayoutDirty = true
    self.IsArranged = false
    self.IsVisualPositionValid = false
    table.insert(layout_update_queue, self)

    if (not IsLayoutUpdateTaskScheduled) then
        IsLayoutUpdateTaskScheduled = true
        invokeAsync(function()
            toolkit.DoLayoutUpdate()
            IsLayoutUpdateTaskScheduled = false
        end, PriorityLayout)
    end
end

function BaseComponent:InsertChild(child)
    if (child.IndexInParent ~= -1) then
        error(""Child component already added to another component"")
        return
    end

    if (self == child) then
        error(""Cannot add self as a child"")
        return
    end

    child.Parent = self
    table.insert(self.Children, child)
    UpdateCachedIndices(self.Children)
    self:InvalidateLayout()
    return child
end

function BaseComponent:RemoveChild(child, useDeferredCacheUpdate)
    if (child.IndexInParent == -1 or child.Parent ~= self) then
        return
    end
    self:RemoveChildAt(child.IndexInParent, useDeferredCacheUpdate)
end

function BaseComponent:RemoveChildAt(index, useDeferredCacheUpdate)
    table.remove(self.Children, index)
    if (useDeferredCacheUpdate ~= true) then
        UpdateCachedIndices(self.Children)
    end
end

function BaseComponent:RemoveFromParent()
    if (self.IndexInParent == -1 or self.Parent == nil) then
        return
    end

    local children = self.Parent.Children
    table.remove(children, self.IndexInParent)
    UpdateCachedIndices(children)
end

local Button = BaseComponent:new()

function Button:new(obj)
    obj = obj or {}
    setmetatable(obj, self)
    self.__index = self
    obj.TypeName = ""Button""
    obj.IsPressed = false
    obj.IsToggleButton = false
    obj.Text = ""text here""
    return obj
end

function Button:MeasureOverride(max_w, max_h)
    local w, h = BaseComponent.MeasureOverride(self, max_w, max_h)
    if (self.Text ~= nil and #self.Text > w) then
        w = #self.Text
    end
    if (h < 1) then h = 1 end

    return w, h
end

function Button:OnRender(target, absX, absY)
    BaseComponent.OnRender(self, target, absX, absY)
    ui.drawTextCentered(target, absX, absY, self.RenderWidth, self.RenderHeight, self.Text, colours.white, nil)

    ui.writeTextAt(target, 1, 19, ""Button Draw = "" .. absX .. "","" .. absY .. ""("" .. self.RenderWidth .. "" x "" .. self.RenderHeight .. "")"")
end

function toolkit.DoRenderComponent(component)
    if (not component.IsArranged) then
        error(""Component has not been arranged yet; cannot render"")
    end

    if (DEBUG_MODE or not ENABLE_RENDERING) then
        return
    end

    local absX,absY = component:GetAbsolutePosition()
    if (absX == nil) then error(""nil absX"") end
    if (absY == nil) then error(""nil absY"") end

    component:OnRender(AppDrawTarget, absX + 1, absY + 1)
    for i, child in ipairs(component.Children) do
        toolkit.DoRenderComponent(child)
    end
    component.IsVisualDirty = false
end

function toolkit.ProcessRenderList()
    for i, component in pairs(render_queue) do
        if (component.IsVisualDirty) then
            component.IsVisualDirty = false
            local last_dirty = nil
            local scan_parent = component.Parent
            while (scan_parent ~= nil) do
                if (scan_parent.IsVisualDirty) then
                    last_dirty = scan_parent
                end

                scan_parent = scan_parent.Parent
            end

            if (last_dirty ~= nil) then
                toolkit.DoRenderComponent(last_dirty)
            else
                toolkit.DoRenderComponent(component)
            end
        end
    end

    for i = #render_queue, 1, -1 do
        table.remove(render_queue, i)
    end
end

--endregion

--region Application

function SetupTimer(delay)
    AppTimerId = os.startTimer(delay)
end

local function OnApplicationEvent(time, eventType, p1, p2, p3, p4, p5)
    if (eventType == ""timer"") then
        if (p1 == AppTimerId) then
            SetupTimer(AppTimerInterval)

            -- update animtion tick

            local invocationList = {}
            local removalList = {}

            local j = 1
            for i, mdInfo in ipairs(delayedTaskQueue) do
                if (time >= mdInfo.executionTime) then
                    invocationList[j] = mdInfo.md
                    j = j + 1
                    table.insert(removalList, i)
                end
            end

            for i = #removalList, 1, -1 do
                table.remove(delayedTaskQueue, removalList[i])
            end

            for i, method in ipairs(invocationList) do
                method()
            end
        elseif (p1 == AppDispatcherId) then
            AppDispatcherId = 0
            -- accumulate methods to invoke

            local invocationList = {}
            for i = 1, #dispatcher_queue do
                local list = dispatcher_queue[i]
                for j = 1, #list do
                    table.insert(invocationList, list[j])
                end
            end

            -- clear dispatcher queue
            for i = #dispatcher_queue, 1, -1 do
                ClearTable(dispatcher_queue[i])
            end

            -- execute dispatcher queue
            if (#invocationList > 0) then
                -- printDebug(""Processing dispatcher queue: "" .. #invocationList)
                IsProcessingDispatcherQueue = true
                for i = 1, #invocationList do
                    local operation = invocationList[i]
                    operation.Method()
                    operation.IsCompleted = true
                end
                IsProcessingDispatcherQueue = false
            end
        end
    end
end

function CreateComponent(left, top, right, bottom, w, h)
    local obj = BaseComponent:new()
    obj.MarginL = left or 0
    obj.MarginT = top or 0
    obj.MarginR = right or 0
    obj.MarginB = bottom or 0
    obj.Width = w
    obj.Height = h
    return obj;
end

function CreateButton(left, top, right, bottom, w, h, text)
    local btn = Button:new()
    btn.MarginL = left or 0
    btn.MarginT = top or 0
    btn.MarginR = right or 0
    btn.MarginB = bottom or 0
    btn.HorizontalAlignment = ""right""
    btn.VerticalAlignment = ""bottom""
    btn.Width = w
    btn.Height = h
    btn.Text = text or """"
    return btn;
end

function DoDelayedButtonChangeColour(btn)
    invokeAsyncWithDelay(function ()
        if (btn.State) then
            btn.State = false
            btn.Background = colours.purple
        else
            btn.State = true
            btn.Background = colours.yellow
        end

        btn:InvalidateVisual()

        DoDelayedButtonChangeColour(btn)
    end, 1)
end

function AppMain()
    -- TODO: load config

    AppRootComponent = BaseComponent:new()

    local inner_grid = AppRootComponent:InsertChild(CreateComponent(1,1, 0, 0, 20, 9))
    inner_grid.Background = colours.grey
    inner_grid.TypeName = ""middleGrid""

    local btn1 = inner_grid:InsertChild(CreateButton(0,0,0,0, nil, nil, ""12345678""))

    btn1.State = true
    btn1.Background = colours.cyan
    DoDelayedButtonChangeColour(btn1)

    AppRootComponent:InvalidateLayout()
    AppRootComponent:InvalidateVisual()

    SetupTimer(AppTimerInterval)
    while IsAppRunning do
        local eType, p1, p2, p3, p4, p5 = os.pullEvent()
        local time = os.clock()
        OnApplicationEvent(time, eType, p1, p2, p3, p4, p5)
    end
end

--endregion

AppMain()
"
tb1gDKrV,v1---Desafio-Inimigo--classe,Regson,Python,Saturday 18th of November 2023 10:32:25 AM CDT,"from random import randint

class Inimigo:
    def __init__(self, pontos_de_vida, mana, ataque, experiencia_concedida, ouro_concedido):
        self.pontos_de_vida = pontos_de_vida
        self.mana = mana
        self.ataque = ataque
        self.experiencia_concedida = experiencia_concedida
        self.ouro_concedido = ouro_concedido
    def __init__(self):
        self.pontos_de_vida = 0
        self.mana = 0
        self.ataque = 0
        self.experiencia_concedida = 0
        self.ouro_concedido = 0    
    def gerarInimigoAleatorio(self):
        self.pontos_de_vida=randint(40,200)
        self.mana=randint(0,300)
        self.ataque=randint(1,12)
        self.ouro_concedido=randint(0,20)
        self.experiencia_concedida=(self.ataque+self.pontos_de_vida)/2
    def mostrarAtributos(self):
        print(""Pontos de vida: ""+str(self.pontos_de_vida))
        print(""Ataque: ""+str(self.ataque))
        print(""Mana: ""+str(self.mana))
        print(""Ouro: ""+str(self.ouro_concedido))
        print(""Experiencia concedida:""+str(self.experiencia_concedida))
        print(""--------------------------------------"")

def gerarQuantosInimigos(quantidade):
        for inimigo in range(0,quantidade):
            inimigo_objeto=Inimigo()
            inimigo_objeto.gerarInimigoAleatorio()
            inimigo_objeto.mostrarAtributos()
            
#Para gerar somente um objeto Inimigo
#inimigo1 = Inimigo()
#inimigo1.gerarInimigoAleatorio()
#inimigo1.mostrarAtributos()

gerarQuantosInimigos(5)
        
"
tyDCrHXP,config 18.11.23,noam76,YAML,Saturday 18th of November 2023 10:12:45 AM CDT,"resources:
  - url: /local/community/text-element/text-element.js?v=0
    type: js
title: Smart Home
views:
  - badges: []
    cards:
      - show_current: true
        show_forecast: true
        entity: weather.weather
        type: weather-forecast
      - type: entity-filter
        entities:
          - binary_sensor.jewish_calendar_erev_shabbat_hag
          - binary_sensor.jewish_calendar_motzei_shabbat_hag
          - binary_sensor.jewish_calendar_issur_melacha_in_effect
        state_filter:
          - 'on'
        card:
          type: glance
          title: האם ערב שבת?
      - entities:
          - style:
              background: '#62717b'
              height: 3px
              margin-left: auto
              margin-right: auto
              width: 80%
            type: divider
          - entity: sensor.hebcal_hebrew_date
          - entity: sensor.hebcal_parasha
          - entity: sensor.hebcal_shabbat_entry
          - entity: sensor.hebcal_shabbat_came_out
          - entity: sensor.hebcal_is_shabbat
          - style:
              background: '#62717b'
              height: 3px
              margin-left: auto
              margin-right: auto
              width: 80%
            type: divider
          - entity: sensor.hebcal_yomtov_name
          - entity: sensor.hebcal_yomtov_entry
          - entity: sensor.hebcal_yomtov_came_out
        show_header_toggle: false
        title: Shabat & Holiday
        type: entities
      - card: null
        entities:
          - entity: sensor.last_boot
          - entity: sensor.memory_free
          - entity: sensor.disk_free
          - entity: sensor.processor_use
        show_header_toggle: false
        type: entities
      - entities:
          - entity: binary_sensor.home_assistant_versions_update_available
          - entity: sensor.home_assistant_versions
        type: glance
      - type: media-control
        entity: media_player.samsung_8_tv
      - entities:
          - entity: sensor.jewish_calendar_hanetz_hachama
          - entity: sensor.jewish_calendar_alot_hashachar
          - entity: sensor.jewish_calendar_shkia
          - style:
              background: '#62717b'
              height: 3px
              margin-left: auto
              margin-right: auto
              width: 80%
            type: divider
          - entity: binary_sensor.jewish_calendar_erev_shabbat_hag
          - entity: binary_sensor.jewish_calendar_motzei_shabbat_hag
          - entity: binary_sensor.jewish_calendar_issur_melacha_in_effect
          - style:
              background: '#62717b'
              height: 3px
              margin-left: auto
              margin-right: auto
              width: 80%
            type: divider
          - entity: sensor.jewish_calendar_date
          - entity: sensor.jewish_calendar_parshat_hashavua
          - entity: sensor.jewish_calendar_upcoming_shabbat_candle_lighting
          - entity: sensor.jewish_calendar_t_set_hakochavim
          - style:
              background: '#62717b'
              height: 3px
              margin-left: auto
              margin-right: auto
              width: 80%
            type: divider
          - entity: sensor.jewish_calendar_upcoming_candle_lighting
          - entity: sensor.jewish_calendar_upcoming_havdalah
        show_header_toggle: false
        title: Shabat & Holiday
        type: entities
    path: home
    title: Home
  - badges: []
    cards:
      - type: entities
        entities:
          - entity: sensor.dark_sky_apparent_temperature
          - entity: sensor.dark_sky_humidity
          - entity: sensor.dark_sky_icon
          - entity: sensor.dark_sky_precip_intensity
          - entity: sensor.dark_sky_precip_probability
          - entity: sensor.dark_sky_pressure
          - entity: sensor.dark_sky_summary
          - entity: sensor.dark_sky_temperature
          - entity: sensor.dark_sky_visibility
      - type: entities
        entities:
          - entity: sensor.pirateweather_temperature
          - entity: sensor.pirateweather_humidity
          - entity: sensor.pirateweather_wind_speed
          - entity: sensor.pirateweather_precip_probability
          - entity: sensor.pirateweather_cloud_coverage
          - entity: sensor.pirateweather_precip_intensity
      - current_text_font_size: 0.8 em
        current_text_left_pos: 4 em
        current_text_top_margin: 65px
        entity_apparent_temp: sensor.dark_sky_apparent_temperature
        entity_current_conditions: sensor.dark_sky_icon
        entity_current_text: sensor.dark_sky_summary_0d
        entity_daily_summary: sensor.dark_sky_daily_summary
        entity_daytime_high: sensor.dark_sky_daytime_high_temperature_0d
        entity_forecast_high_temp_1: sensor.dark_sky_daytime_high_temperature_1d
        entity_forecast_high_temp_2: sensor.dark_sky_daytime_high_temperature_2d
        entity_forecast_high_temp_3: sensor.dark_sky_daytime_high_temperature_3d
        entity_forecast_high_temp_4: sensor.dark_sky_daytime_high_temperature_4d
        entity_forecast_high_temp_5: sensor.dark_sky_daytime_high_temperature_5d
        entity_forecast_icon_1: sensor.dark_sky_icon_1d
        entity_forecast_icon_2: sensor.dark_sky_icon_2d
        entity_forecast_icon_3: sensor.dark_sky_icon_3d
        entity_forecast_icon_4: sensor.dark_sky_icon_4d
        entity_forecast_icon_5: sensor.dark_sky_icon_5d
        entity_forecast_low_temp_1: sensor.dark_sky_overnight_low_temperature_1d
        entity_forecast_low_temp_2: sensor.dark_sky_overnight_low_temperature_2d
        entity_forecast_low_temp_3: sensor.dark_sky_overnight_low_temperature_3d
        entity_forecast_low_temp_4: sensor.dark_sky_overnight_low_temperature_4d
        entity_forecast_low_temp_5: sensor.dark_sky_overnight_low_temperature_5d
        entity_humidity: sensor.dark_sky_humidity
        entity_pop: sensor.dark_sky_precip_probability
        entity_pop_1: sensor.dark_sky_precip_probability_1d
        entity_pop_2: sensor.dark_sky_precip_probability_2d
        entity_pop_3: sensor.dark_sky_precip_probability_3d
        entity_pop_4: sensor.dark_sky_precip_probability_4d
        entity_pop_5: sensor.dark_sky_precip_probability_5d
        entity_pop_intensity: sensor.dark_sky_precip_intensity
        entity_pressure"": sensor.dark_sky_pressure
        entity_summary_1: sensor.dark_sky_summary_1d
        entity_summary_2: sensor.dark_sky_summary_2d
        entity_summary_3: sensor.dark_sky_summary_3d
        entity_summary_4: sensor.dark_sky_summary_4d
        entity_summary_5: sensor.dark_sky_summary_5d
        entity_sun: sun.sun
        entity_temperature: sensor.dark_sky_temperature
        entity_visibility: sensor.dark_sky_visibility
        entity_wind_bearing: sensor.dark_sky_wind_bearing
        entity_wind_speed: sensor.dark_sky_wind_speed
        locale: he
        static_icons: false
        sunset: true
        tooltip_bg_color: rgb( 75,155,239)
        tooltip_border_color: orange
        tooltip_border_width: 2.5
        tooltip_caret_size: 10
        tooltip_fg_color: '#fff'
        tooltip_left_offset: -5
        tooltip_width: 100
        tooltips: true
        type: custom:dark-sky-weather-card
    icon: mdi:weather-cloudy
    path: ''
    title: Weather
  - badges: []
    cards:
      - cards:
          - color: rgb(44, 109, 214)
            color_type: label-card
            name: Light
            type: custom:button-card
          - cards:
              - entity: switch.light_switch_1_channel
                icon: mdi:kettle
                state:
                  - color: rgb(255, 50, 60)
                    name: Kitchen OFF
                    value: 'off'
                  - color: rgb(27, 225, 60)
                    name: Kitchen ON
                    value: 'on'
                styles:
                  card:
                    - height: 75px
                type: custom:button-card
              - entity: switch.light_switch_2_channel_2
                icon: mdi:sofa
                state:
                  - color: rgb(255, 50, 60)
                    name: Salon OFF
                    value: 'off'
                  - color: rgb(27, 225, 60)
                    name: Salon ON
                    value: 'on'
                styles:
                  card:
                    - height: 75px
                type: custom:button-card
              - entity: switch.light_switch_2_channel
                icon: mdi:silverware
                state:
                  - color: rgb(255, 50, 60)
                    name: Dining Space OFF
                    value: 'off'
                  - color: rgb(27, 225, 60)
                    name: Dining Space ON
                    value: 'on'
                styles:
                  card:
                    - height: 75px
                type: custom:button-card
              - entity: switch.light_switch_2_channel_3
                icon: mdi:toilet
                state:
                  - color: rgb(255, 50, 60)
                    name: Toilet OFF
                    value: 'off'
                  - color: rgb(27, 225, 60)
                    name: Toilet ON
                    value: 'on'
                styles:
                  card:
                    - height: 75px
                type: custom:button-card
            type: horizontal-stack
          - cards:
              - card:
                  entities:
                    - input_boolean.virtual_button
                  show_name: false
                  title: Styled popup card
                  icon: mdi:lamp
                  type: glance
                style:
                  '--paper-card-background-color': rgba(0, 100, 0, 0.2)
                  '--paper-item-icon-color': white
                  border-radius: 50px
                  color: rgb(0, 0, 100)
                  width: 51%
                type: custom:card-modder
            type: horizontal-stack
        type: vertical-stack
    icon: mdi:lamp
    path: ''
    popup_cards:
      input_boolean.virtual_button:
        card:
          entities:
            - switch.light_switch_2_channel_2
            - >-
              switch.shenzhen_neo_electronics_co_ltd_wall_switch_2_channels_switch
            - switch.light_switch_1_channel
            - switch.light_switch_2_channel_3
          type: entities
        title: Light Switch
    title: Light
  - badges: []
    cards:
      - entity: group.kitchen_timers
        icon: mdi:kettle
        state:
          - color: rgb(255, 50, 60)
            name: Timer's Kitchen OFF
            value: 'off'
          - color: rgb(27, 225, 60)
            name: Timer's Kitchen ON
            value: 'on'
        styles:
          card:
            - margin: auto
            - padding: 10px
            - height: 80px
            - border: 1px solid black
        type: custom:button-card
      - entities:
          - entity: input_boolean.kitchen1_timer
            name: הפעלה / כיבוי
          - entity: input_datetime.kitchen1_timer_start
          - entity: input_datetime.kitchen1_timer_end
        show_header_toggle: false
        title: Kitchen Timer 1
        type: entities
      - entities:
          - entity: input_boolean.kitchen2_timer
            name: הפעלה / כיבוי
          - entity: input_datetime.kitchen2_timer_start
          - entity: input_datetime.kitchen2_timer_end
        show_header_toggle: false
        title: Kitchen Timer 2
        type: entities
      - entities:
          - entity: input_boolean.kitchen3_timer
            name: הפעלה / כיבוי
          - entity: input_datetime.kitchen3_timer_start
          - entity: input_datetime.kitchen3_timer_end
        show_header_toggle: false
        title: Kitchen Timer 3
        type: entities
      - entities:
          - entity: input_boolean.kitchen4_timer
            name: הפעלה / כיבוי
          - entity: input_datetime.kitchen4_timer_start
          - entity: input_datetime.kitchen4_timer_end
        show_header_toggle: false
        title: Kitchen Timer 4
        type: entities
    icon: mdi:kettle
    path: kitchen-timers
    title: Kitchen Timers
  - badges: []
    cards:
      - entity: group.salon_timers
        icon: mdi:sofa
        state:
          - color: rgb(255, 50, 60)
            name: Timer's Salon OFF
            value: 'off'
          - color: rgb(27, 225, 60)
            name: Timer's Salon ON
            value: 'on'
        styles:
          card:
            - margin: auto
            - padding: 10px
            - height: 80px
            - border: 1px solid black
        type: custom:button-card
      - entities:
          - entity: input_boolean.salon1_timer
            name: הפעלה / כיבוי
          - entity: input_datetime.salon1_timer_start
          - entity: input_datetime.salon1_timer_end
        show_header_toggle: false
        title: Salon Timer 1
        type: entities
      - entities:
          - entity: input_boolean.salon2_timer
            name: הפעלה / כיבוי
          - entity: input_datetime.salon2_timer_start
          - entity: input_datetime.salon2_timer_end
        show_header_toggle: false
        title: Salon Timer 2
        type: entities
      - entities:
          - entity: input_boolean.salon3_timer
            name: הפעלה / כיבוי
          - entity: input_datetime.salon3_timer_start
          - entity: input_datetime.salon3_timer_end
        show_header_toggle: false
        title: Salon Timer 3
        type: entities
    icon: mdi:sofa
    path: ''
    title: Salon Timer
  - badges: []
    cards:
      - entity: group.dining_room_timers
        icon: mdi:silverware
        state:
          - color: rgb(255, 50, 60)
            name: Timer's dining_room OFF
            value: 'off'
          - color: rgb(27, 225, 60)
            name: Timer's dining_room ON
            value: 'on'
        styles:
          card:
            - margin: auto
            - padding: 10px
            - height: 80px
            - border: 1px solid black
        type: custom:button-card
      - entities:
          - entity: input_boolean.dining1_room
            name: הפעלה / כיבוי
          - entity: input_datetime.dining_room1_timer_start
          - entity: input_datetime.dining_room1_timer_end
        show_header_toggle: false
        title: Dining Room Timer1
        type: entities
      - entities:
          - entity: input_boolean.dining2_room
            name: הפעלה / כיבוי
          - entity: input_datetime.dining_room2_timer_start
          - entity: input_datetime.dining_room2_timer_end
        show_header_toggle: false
        title: Dining Room Timer2
        type: entities
      - entities:
          - entity: input_boolean.dining3_room
            name: הפעלה / כיבוי
          - entity: input_datetime.dining_room3_timer_start
          - entity: input_datetime.dining_room3_timer_end
        show_header_toggle: false
        title: Dining Room Timer3
        type: entities
    icon: mdi:silverware
    path: droom-timer
    title: D.Room Timer
  - icon: mdi:toilet
    badges: []
    cards:
      - entity: group.toilet_timers
        icon: mdi:toilet
        state:
          - color: rgb(255, 50, 60)
            name: Timer's toilet OFF
            value: 'off'
          - color: rgb(27, 225, 60)
            name: Timer's toilet ON
            value: 'on'
        styles:
          card:
            - margin: auto
            - padding: 10px
            - height: 80px
            - border: 1px solid black
        type: custom:button-card
      - type: entities
        entities:
          - entity: input_boolean.toilet1_timer
          - entity: input_datetime.toilet1_timer_start
          - entity: input_datetime.toilet1_timer_end
        title: Toilet Timer 1
        show_header_toggle: false
      - type: entities
        entities:
          - entity: input_boolean.toilet2_timer
          - entity: input_datetime.toilet2_timer_start
          - entity: input_datetime.toilet2_timer_end
        title: Toilet Timer 2
  - badges: []
    cards:
      - border: 1px solid black
        cards:
          - cards:
              - color_type: blank-card
                type: custom:button-card
              - entity: switch.wall_plug_switch
                icon: mdi:power-plug
                size: 60px
                state:
                  - color: rgb(255, 50, 60)
                    name: Plug OFF
                    value: 'off'
                  - color: rgb(27, 225, 60)
                    name: Plug ON
                    value: 'on'
                styles:
                  card:
                    - height: 110px
                    - border: 1px solid black
                    - border-radius: 50px
                type: custom:button-card
              - color_type: blank-card
                type: custom:button-card
            type: horizontal-stack
          - cards:
              - card:
                  entities:
                    - entity: sensor.node_7_node_status
                      name: Status
                  type: glance
                style:
                  '--paper-card-background-color': rgba(0, 100, 0, 0.2)
                  '--paper-item-icon-color': white
                  border: 1px solid black
                  border-radius: 50px
                type: custom:card-modder
              - card:
                  entities:
                    - entity: binary_sensor.wall_plug_switch_over_load_detected
                      name: Over Load Detected
                  type: glance
                style:
                  '--paper-card-background-color': rgba(0, 100, 0, 0.2)
                  '--paper-item-icon-color': white
                  border: 1px solid black
                  border-radius: 50px
                type: custom:card-modder
            type: horizontal-stack
          - cards:
              - card:
                  entities:
                    - entity: sensor.wall_plug_switch_electric_consumption_a
                      name: Current
                  type: glance
                style:
                  '--paper-card-background-color': rgba(0, 100, 0, 0.2)
                  '--paper-item-icon-color': white
                  border: 1px solid black
                  border-radius: 50px
                type: custom:card-modder
              - card:
                  entities:
                    - entity: sensor.wall_plug_switch_electric_consumption_v
                      name: Voltage
                  type: glance
                style:
                  '--paper-card-background-color': rgba(0, 100, 0, 0.2)
                  '--paper-item-icon-color': white
                  border: 1px solid black
                  border-radius: 50px
                type: custom:card-modder
            type: horizontal-stack
          - cards:
              - card:
                  entities:
                    - entity: sensor.wall_plug_switch_electric_consumption_w
                      name: Power
                  type: glance
                style:
                  '--paper-card-background-color': rgba(0, 100, 0, 0.2)
                  '--paper-item-icon-color': white
                  border: 1px solid black
                  border-radius: 50px
                type: custom:card-modder
              - card:
                  entities:
                    - entity: sensor.wall_plug_switch_electric_consumption_kwh
                      name: Electric Consumption
                  type: glance
                style:
                  '--paper-card-background-color': rgba(0, 100, 0, 0.2)
                  '--paper-item-icon-color': white
                  border: 1px solid black
                  border-radius: 50px
                type: custom:card-modder
            type: horizontal-stack
        type: vertical-stack
      - custom_fields:
          badge: |
            [[[ return `<ha-icon
                  icon=""mdi:battery-outline""
                  style=""width: 40px; height: 40px;"">
                  </ha-icon>` + states['sensor.wall_plug_switch_electric_consumption_a'].state + ""%""]]]
        entity: sensor.wall_plug_switch_electric_consumption_a
        icon: mdi:power-plug
        name: Power Plug
        opacity: 0.2
        show_label: false
        show_last_changed: true
        show_state: true
        state:
          - color: rgb(255, 50, 60)
            name: Plug OFF
            value: 'off'
          - color: rgb(27, 225, 60)
            name: Plug ON
            value: 'on'
        styles:
          card:
            - '--ha-card-background': var(--homekit-card-off)
            - border-radius: 20px
          custom_fields:
            badge:
              - position: absolute
              - justify-self: center
              - top: '-1%'
              - margin-left: 10%
              - font-size: 20px
              - line-height: 0px
          grid:
            - position: relative
          img_cell:
            - align-self: center
            - text-align: center
            - margin-top: 5%
          label:
            - font-size: 12px
            - font-family: Helvetica
            - padding: 3px 10px
            - justify-self: center
            - color: var(--label-color-off)
          name:
            - color: var(--upcoming-color)
            - justify-self: center
            - padding: 3px 10px
            - font-weight: bold
            - font-family: Helvetica
            - font-size: 15px
            - margin-top: '-10px'
          state:
            - font-size: 15px
            - font-family: Helvetica
            - padding: 3px 10px
            - justify-self: center
            - text-transform: capitalize
            - padding-left: 10px
            - color: var(--upcoming-color)
        tap_action:
          action: more-info
        type: custom:button-card
      - type: entities
        entities:
          - entity: input_boolean.powerplug1_timer
          - entity: input_datetime.powerplug1_timer_start
          - entity: input_datetime.powerplug1_timer_end
        show_header_toggle: false
        title: Power Plug Timer 1
      - type: entities
        entities:
          - entity: input_boolean.powerplug2_timer
          - entity: input_datetime.powerplug2_timer_start
          - entity: input_datetime.powerplug2_timer_end
        show_header_toggle: false
        title: Power Plug Timer 2
      - type: entities
        entities:
          - entity: input_boolean.powerplug3_timer
          - entity: input_datetime.powerplug3_timer_start
          - entity: input_datetime.powerplug3_timer_end
        show_header_toggle: false
        title: Power Plug Timer 3
    icon: mdi:power-socket-eu
    path: power-plug
    title: Power Plug
  - badges: []
    cards:
      - cards:
          - color: rgb(44, 109, 214)
            color_type: label-card
            name: ALL Timers
            type: custom:button-card
          - entity: group.all_room_timers
            icon: mdi:timer
            styles:
              card:
                - height: 95px
              state:
                - color: rgb(255, 50, 60)
                  name: Timers OFF
                  value: 'off'
                - color: rgb(27, 225, 60)
                  name: Timers ON
                  value: 'on'
            type: custom:button-card
          - cards:
              - entity: group.kitchen_timers
                icon: mdi:kettle
                state:
                  - color: rgb(255, 50, 60)
                    name: Kitchen OFF
                    value: 'off'
                  - color: rgb(27, 225, 60)
                    name: Kitchen ON
                    value: 'on'
                styles:
                  card:
                    - height: 75px
                type: custom:button-card
              - entity: group.salon_timers
                icon: mdi:sofa
                state:
                  - color: rgb(255, 50, 60)
                    name: Salon OFF
                    value: 'off'
                  - color: rgb(27, 225, 60)
                    name: Salon ON
                    value: 'on'
                styles:
                  card:
                    - height: 75px
                type: custom:button-card
              - entity: group.dining_room_timers
                icon: mdi:silverware
                state:
                  - color: rgb(255, 50, 60)
                    name: Dining Space OFF
                    value: 'off'
                  - color: rgb(27, 225, 60)
                    name: Dining Space ON
                    value: 'on'
                styles:
                  card:
                    - height: 75px
                type: custom:button-card
              - entity: group.toilet_timers
                icon: mdi:toilet
                state:
                  - color: rgb(255, 50, 60)
                    name: Toilet OFF
                    value: 'off'
                  - color: rgb(27, 225, 60)
                    name: Toilet ON
                    value: 'on'
                styles:
                  card:
                    - height: 75px
                type: custom:button-card
            type: horizontal-stack
        type: vertical-stack
      - type: entities
        entities:
          - entity: input_boolean.switch_countdown_timer_laundry
          - entity: timer.laundry
      - type: entities
        entities:
          - entity: input_boolean.fan_timer
          - entity: input_select.fan_time_select
          - entity: timer.fan
        title: Fan Timer Test
      - cards:
          - entities:
              - input_select.living_room_preset
            type: entities
          - card:
              entities:
                - input_select.kitchen_timers_preset
              type: entities
            conditions:
              - entity: input_select.living_room_preset
                state: Kitchen
            type: conditional
          - card:
              entities:
                - input_select.salon_timers_preset
              type: entities
            conditions:
              - entity: input_select.living_room_preset
                state: Salon
            type: conditional
          - card:
              entities:
                - input_select.dining_room_timers_preset
              type: entities
            conditions:
              - entity: input_select.living_room_preset
                state: Dining Room
            type: conditional
          - card:
              entities:
                - entity: input_boolean.kitchen1_timer
                  name: Timer ON/OFF
                - entity: input_datetime.kitchen1_timer_start
                - entity: input_datetime.kitchen1_timer_end
              show_header_toggle: false
              title: Timer Kitchen 1
              type: entities
            conditions:
              - entity: input_select.living_room_preset
                state: Kitchen
              - entity: input_select.kitchen_timers_preset
                state: Kitchen Timer1
            type: conditional
          - card:
              entities:
                - entity: input_boolean.kitchen2_timer
                  name: Timer ON/OFF
                - entity: input_datetime.kitchen2_timer_start
                - entity: input_datetime.kitchen2_timer_end
              show_header_toggle: false
              title: Timer Kitchen 2
              type: entities
            conditions:
              - entity: input_select.living_room_preset
                state: Kitchen
              - entity: input_select.kitchen_timers_preset
                state: Kitchen Timer2
            type: conditional
          - card:
              entities:
                - entity: input_boolean.kitchen3_timer
                  name: Timer ON/OFF
                - entity: input_datetime.kitchen3_timer_start
                - entity: input_datetime.kitchen3_timer_end
              show_header_toggle: false
              title: Timer Kitchen 3
              type: entities
            conditions:
              - entity: input_select.living_room_preset
                state: Kitchen
              - entity: input_select.kitchen_timers_preset
                state: Kitchen Timer3
            type: conditional
          - card:
              entities:
                - entity: input_boolean.salon1_timer
                  name: Timer ON/OFF
                - entity: input_datetime.salon1_timer_start
                - entity: input_datetime.salon1_timer_end
              show_header_toggle: false
              title: Timer Salon 1
              type: entities
            conditions:
              - entity: input_select.living_room_preset
                state: Salon
              - entity: input_select.salon_timers_preset
                state: Salon Timer1
            type: conditional
          - card:
              entities:
                - entity: input_boolean.salon2_timer
                  name: Timer ON/OFF
                - entity: input_datetime.salon2_timer_start
                - entity: input_datetime.salon2_timer_end
              show_header_toggle: false
              title: Timer Salon 2
              type: entities
            conditions:
              - entity: input_select.living_room_preset
                state: Salon
              - entity: input_select.salon_timers_preset
                state: Salon Timer2
            type: conditional
          - card:
              entities:
                - entity: input_boolean.salon3_timer
                  name: Timer ON/OFF
                - entity: input_datetime.salon3_timer_start
                - entity: input_datetime.salon3_timer_end
              show_header_toggle: false
              title: Timer Salon 3
              type: entities
            conditions:
              - entity: input_select.living_room_preset
                state: Salon
              - entity: input_select.salon_timers_preset
                state: Salon Timer3
            type: conditional
          - card:
              entities:
                - entity: input_boolean.dining1_room
                  name: Timer ON/OFF
                - entity: input_datetime.dining_room1_timer_start
                - entity: input_datetime.dining_room1_timer_end
              show_header_toggle: false
              title: Dining Room Timer 1
              type: entities
            conditions:
              - entity: input_select.living_room_preset
                state: Dining Room
              - entity: input_select.dining_room_timers_preset
                state: Dining Room Timer1
            type: conditional
          - card:
              entities:
                - entity: input_boolean.dining2_room
                  name: Timer ON/OFF
                - entity: input_datetime.dining_room2_timer_start
                - entity: input_datetime.dining_room2_timer_end
              show_header_toggle: false
              title: Dining Room Timer 2
              type: entities
            conditions:
              - entity: input_select.living_room_preset
                state: Dining Room
              - entity: input_select.dining_room_timers_preset
                state: Dining Room Timer2
            type: conditional
          - card:
              entities:
                - entity: input_boolean.dining3_room
                  name: Timer ON/OFF
                - entity: input_datetime.dining_room3_timer_start
                - entity: input_datetime.dining_room3_timer_end
              show_header_toggle: false
              title: Dining Room Timer 3
              type: entities
            conditions:
              - entity: input_select.living_room_preset
                state: Dining Room
              - entity: input_select.dining_room_timers_preset
                state: Dining Room Timer3
            type: conditional
        title: Timers
        type: custom:vertical-stack-in-card
    icon: mdi:timer-sand
    path: test1
    title: All Rooms Timers
  - badges: []
    cards:
      - card:
          entities:
            - entity: input_boolean.turbo_boiler_timer
            - entity: input_datetime.boiler_start
            - entity: input_datetime.boiler_end
          show_header_toggle: false
          title: Turbo Timer
          type: entities
        style:
          '--paper-card-background-color': rgba(0, 100, 0, 0.2)
          '--paper-item-icon-color': white
          border-radius: 10px
          color: rgb(0, 0, 100)
          width: 70%
        type: custom:card-modder
      - entities:
          - entity: input_boolean.timer_datetime
          - entity: input_datetime.test_timer_start
          - entity: input_datetime.test_timer_end
        show_header_toggle: false
        title: Timer Date & Time
        type: entities
      - entities:
          - entity: input_boolean.timer_slider_time
            name: Timer activation
          - entity: sensor.timer_on_clock_start
            name: Timer ON
          - entity: sensor.timer_off_clock_start
            name: Timer OFF
          - style:
              background: '#62717b'
              height: 3px
              margin-left: auto
              margin-right: auto
              width: 80%
            type: divider
          - entity: input_number.timer_on_hours
            name: Hours ON
          - entity: input_number.timer_on_min
            name: Minutes ON
          - style:
              background: '#62717b'
              height: 3px
              margin-left: auto
              margin-right: auto
              width: 80%
            type: divider
          - entity: input_number.timer_off_hours
            name: Hour OFF
          - entity: input_number.timer_off_min
            name: Minutes OFF
        show_header_toggle: false
        title: Timer With Slider
        type: entities
    icon: mdi:av-timer
    path: timers
    title: Timers
  - badges: []
    cards:
      - entities:
          - entity: automation.allumer_le_sensor_6
          - entity: sensor.multisensor_6_battery_level
          - entity: sensor.multisensor_6_illuminance
          - entity: sensor.multisensor_6_humidity
          - entity: sensor.multisensor_6_air_temperature
          - entity: sensor.multisensor_6_ultraviolet
          - entity: binary_sensor.multisensor_6_motion_detection
        title: MultiSensor 6
        type: entities
    path: sensor
    title: Sensor
  - badges: []
    cards:
      - entities:
          - entity: sensor.aeon_labs_zw100_multisensor_6_luminance
          - entity: sensor.aeon_labs_zw100_multisensor_6_temperature
          - entity: sensor.aeon_labs_zw100_multisensor_6_relative_humidity
          - entity: sensor.aeon_labs_zw100_multisensor_6_burglar
        hours_to_show: 24
        refresh_interval: 0
        title: Lux, temperature, humidity, burglar
        type: history-graph
    path: sensor-graph
    title: Sensor Graph
  - theme: Backend-selected
    title: Roborock S7
    path: roborock-s7
    badges: []
    cards:
      - type: custom:xiaomi-vacuum-map-card
        map_source:
          camera: camera.xiaomi_cloud_map_extractor
        calibration_source:
          camera: true
        entity: vacuum.roborock_vacuum_a15
        vacuum_platform: default
        title: 'Carte '
  - badges: []
    cards:
      - card:
          entities:
            - entity: sensor.seventeentrack_package_rp797674470cn
              secondary_info: last-changed
            - entity: sensor.seventeentrack_package_s00000091316955
              secondary_info: last-changed
            - entity: sensor.seventeentrack_package_s00000093884743
              secondary_info: last-changed
            - entity: sensor.seventeentrack_package_s00000098860279
              secondary_info: last-changed
            - entity: sensor.seventeentrack_package_ub755301273tw
              secondary_info: last-changed
            - entity: sensor.seventeentrack_package_ut758515689cn
              secondary_info: last-changed
          show_header_toggle: false
          title: 17track.net
          type: entities
        filter:
          exclude:
            - state: Delivered
          include:
            - entity_id: sensor.seventeentrack_package_*
              options:
                secondary_info: last-changed
        type: custom:monster-card
      - card:
          entities:
            - entity: sensor.seventeentrack_package_lo559585836cn
            - entity: sensor.seventeentrack_package_pr051527825yp
            - entity: sensor.seventeentrack_package_rp797674470cn
            - entity: sensor.seventeentrack_package_rs0001240756y
            - entity: sensor.seventeentrack_package_s00000091316955
            - entity: sensor.seventeentrack_package_s00000093884743
            - entity: sensor.seventeentrack_package_s00000098860279
            - entity: sensor.seventeentrack_package_ub755301273tw
            - entity: sensor.seventeentrack_package_ut758515689cn
          show_header_toggle: false
          title: 17track.net
          type: entities
        filter:
          include:
            - entity_id: sensor.seventeentrack_package_*
        type: custom:monster-card
    icon: ''
    path: track-packages
    title: 17Track
  - badges: []
    cards:
      - entity: input_boolean.virtual_button
        entity_picture: /local/icons/blue-push-button.png
        hold_action:
          action: more-info
        show_entity_picture: true
        show_icon: true
        show_name: true
        tap_action:
          action: toggle
        type: custom:button-card
      - entities:
          - entity: script.start_timer
          - entity: script.pause_timer
          - entity: script.cancel_timer
          - entity: script.finish_timer
          - entity: timer.laundry
        show_header_toggle: false
        title: TIMER Script
        type: entities
      - entities:
          - entity: media_player.samsung_8_tv
        show_header_toggle: false
        title: Samsung
        type: entities
      - type: media-control
        entity: media_player.samsung_8_tv
    path: tv
    title: TV
  - badges: []
    cards:
      - card:
          entities:
            - switch.light_switch_2_channel_2
            - switch.light_switch_2_channel
            - switch.light_switch_1_channel
          title: Styled card
          type: glance
        style:
          '--paper-card-background-color': rgba(0, 100, 0, 0.2)
          '--paper-item-icon-color': white
          border-radius: 5px
          color: rgb(0, 0, 100)
        type: custom:card-modder
      - card:
          entities:
            - switch.light_switch_2_channel_2
            - switch.light_switch_2_channel
            - switch.light_switch_1_channel
          title: Styled card
          type: glance
        report_size: 7
        style:
          '--paper-card-background-color': rgba(0, 100, 0, 0.2)
          '--paper-item-icon-color': white
          border-radius: 5px
          color: rgb(0, 0, 100)
          width: 62%
        type: custom:card-modder
      - cards:
          - entities:
              - entity: switch.light_switch_2_channel_2
              - entity: switch.light_switch_2_channel
            type: entities
            show_header_toggle: false
          - entities:
              - entity: switch.light_switch_1_channel
            type: entities
            show_header_toggle: false
        title: Lights
        type: horizontal-stack
    path: more
    title: more
  - badges: []
    cards:
      - border: 1px solid black
        cards:
          - cards:
              - card:
                  color: rgb(44, 109, 214)
                  color_type: label-card
                  name: Heater Water Timer
                  type: custom:button-card
                style:
                  border-radius: 50px
                type: custom:card-modder
            type: horizontal-stack
          - cards:
              - card:
                  entities:
                    - entity: timer.water_heater
                  type: entities
                style:
                  border-radius: 50px
                type: custom:card-modder
            type: horizontal-stack
          - cards:
              - color_type: blank-card
                type: custom:button-card
              - color_type: blank-card
                type: custom:button-card
              - card:
                  color: rgb(223, 255, 97)
                  color_type: card
                  icon: mdi:plus-circle-outline
                  size: 50%
                  styles:
                    card:
                      - width: 80px
                      - height: 80px
                      - border-radius: 40%
                  tap_action:
                    action: call-service
                    service: input_number.increment
                    service_data:
                      entity_id: input_number.timer_countdown
                  type: custom:button-card
                style:
                  border-radius: 40%
                type: custom:card-modder
              - color_type: blank-card
                type: custom:button-card
              - card:
                  color: rgb(223, 255, 97)
                  color_type: card
                  icon: mdi:minus-circle-outline
                  size: 50%
                  styles:
                    card:
                      - width: 80px
                      - height: 80px
                      - border-radius: 40%
                  tap_action:
                    action: call-service
                    service: input_number.decrement
                    service_data:
                      entity_id: input_number.timer_countdown
                  type: custom:button-card
                style:
                  border-radius: 40%
                type: custom:card-modder
              - color_type: blank-card
                type: custom:button-card
            type: horizontal-stack
          - cards:
              - card:
                  entities:
                    - entity: input_number.timer_countdown
                  show_header_toggle: false
                  type: entities
                style:
                  border-radius: 50px
                type: custom:card-modder
            type: horizontal-stack
          - cards:
              - card:
                  color: rgb(66, 134, 244)
                  color_type: card
                  entity: script.start_timer_heater
                  icon: mdi:play-circle-outline
                  name: Play
                  show_name: false
                  size: 50%
                  styles:
                    card:
                      - height: 70px
                      - border-radius: 55%
                  type: custom:button-card
                style:
                  border-radius: 50px
                type: custom:card-modder
              - card:
                  color: rgb(66, 134, 244)
                  color_type: card
                  entity: script.pause_timer_heater
                  icon: mdi:pause-circle-outline
                  name: pause
                  show_name: false
                  size: 50%
                  styles:
                    card:
                      - height: 70px
                      - border-radius: 55%
                  type: custom:button-card
                style:
                  border-radius: 50px
                type: custom:card-modder
              - card:
                  color: rgb(66, 134, 244)
                  color_type: card
                  entity: script.cancel_timer_heater
                  icon: mdi:stop-circle-outline
                  name: stop
                  show_name: false
                  size: 50%
                  styles:
                    card:
                      - height: 70px
                      - border-radius: 55%
                  type: custom:button-card
                style:
                  border-radius: 50px
                type: custom:card-modder
              - card:
                  color: rgb(66, 134, 244)
                  color_type: card
                  entity: script.finish_timer_heater
                  icon: mdi:close-circle-outline
                  name: Finish
                  show_name: false
                  size: 50%
                  styles:
                    card:
                      - height: 70px
                      - border-radius: 55%
                  type: custom:button-card
                style:
                  border-radius: 50px
                type: custom:card-modder
            type: horizontal-stack
        type: vertical-stack
    icon: mdi:water
    title: Heater Water
  - badges: []
    cards:
      - cards:
          - entities:
              - sensor.dark_sky_humidity
              - sensor.dark_sky_temperature
              - sensor.dark_sky_icon
            type: glance
          - entities:
              - entity: switch.light_switch_2_channel
              - entity: switch.light_switch_1_channel
              - entity: switch.light_switch_2_channel_2
            type: entities
        title: My Card
        type: custom:vertical-stack-in-card
      - cards:
          - cards:
              - entity: switch.light_switch_1_channel
                icon: mdi:kettle
                tap_action:
                  action: navigate
                  navigation_path: '#p1'
                type: entity-button
              - entity: switch.light_switch_2_channel_2
                icon: mdi:sofa
                tap_action:
                  action: navigate
                  navigation_path: '#p2'
                type: entity-button
              - entity: switch.light_switch_2_channel
                icon: mdi:silverware-variant
                tap_action:
                  action: navigate
                  navigation_path: '#p3'
                type: entity-button
            type: horizontal-stack
          - default: p1
            entity: hash
            states:
              p1:
                entities:
                  - entity: input_select.kitchen_timers_preset
                show_header_toggle: false
                type: entities
              p2:
                entities:
                  - entity: input_select.salon_timers_preset
                show_header_toggle: false
                type: entities
              p3:
                entities:
                  - entity: input_select.dining_room_timers_preset
                show_header_toggle: false
                type: entities
            type: custom:state-switch
          - entity: input_select.kitchen_timers_preset
            states:
              Kitchen Timer1:
                entities:
                  - entity: input_boolean.kitchen1_timer
                    name: Timer ON/OFF
                  - entity: input_datetime.kitchen1_timer_start
                  - entity: input_datetime.kitchen1_timer_end
                show_header_toggle: false
                title: Kitchen Timer 1
                type: entities
              Kitchen Timer2:
                entities:
                  - entity: input_boolean.kitchen2_timer
                    name: Timer ON/OFF
                  - entity: input_datetime.kitchen2_timer_start
                  - entity: input_datetime.kitchen2_timer_end
                show_header_toggle: false
                title: Kitchen Timer 2
                type: entities
              Kitchen Timer3:
                entities:
                  - entity: input_boolean.kitchen3_timer
                    name: Timer ON/OFF
                  - entity: input_datetime.kitchen3_timer_start
                  - entity: input_datetime.kitchen3_timer_end
                show_header_toggle: false
                title: Kitchen Timer 3
                type: entities
            type: custom:state-switch
          - entity: input_select.salon_timers_preset
            states:
              Salon Timer1:
                entities:
                  - entity: input_boolean.salon1_timer
                    name: Timer ON/OFF
                  - entity: input_datetime.salon1_timer_start
                  - entity: input_datetime.salon1_timer_end
                show_header_toggle: false
                title: Salon Timer 1
                type: entities
              Salon Timer2:
                entities:
                  - entity: input_boolean.salon2_timer
                    name: Timer ON/OFF
                  - entity: input_datetime.salon2_timer_start
                  - entity: input_datetime.salon2_timer_end
                show_header_toggle: false
                title: Salon Timer 2
                type: entities
              Salon Timer3:
                entities:
                  - entity: input_boolean.salon3_timer
                    name: Timer ON/OFF
                  - entity: input_datetime.salon3_timer_start
                  - entity: input_datetime.salon3_timer_end
                show_header_toggle: false
                title: Salon Timer 3
                type: entities
            type: custom:state-switch
          - entity: input_select.dining_room_timers_preset
            states:
              Dining Room Timer1:
                entities:
                  - entity: input_boolean.dining1_room
                    name: Timer ON/OFF
                  - entity: input_datetime.dining_room1_timer_start
                  - entity: input_datetime.dining_room1_timer_end
                show_header_toggle: false
                title: Dining Room Timer 1
                type: entities
              Dining Room Timer2:
                entities:
                  - entity: input_boolean.dining2_room
                    name: Timer ON/OFF
                  - entity: input_datetime.dining_room2_timer_start
                  - entity: input_datetime.dining_room2_timer_end
                show_header_toggle: false
                title: Dining Room Timer 2
                type: entities
              Dining Room Timer3:
                entities:
                  - entity: input_boolean.dining3_room
                    name: Timer ON/OFF
                  - entity: input_datetime.dining_room3_timer_start
                  - entity: input_datetime.dining_room3_timer_end
                show_header_toggle: false
                title: Dining Room Timer 3
                type: entities
            type: custom:state-switch
        title: My Card
        type: custom:vertical-stack-in-card
    path: state-switch
    title: State-switch
  - badges: []
    cards:
      - card:
          entities:
            - sensor.last_boot
            - sensor.memory_free
            - sensor.disk_free
            - sensor.processor_use
          title: Styled card
          type: glance
        style:
          '--paper-card-background-color': rgba(0, 100, 0, 0.2)
          '--paper-item-icon-color': white
          border-radius: 50px
          width: 100%
        type: custom:card-modder
      - card:
          entities:
            - input_boolean.virtual_button
          icon: mdi:lamp
          title: Styled popup card
          type: glance
        style:
          '--paper-card-background-color': rgba(0, 100, 0, 0.2)
          '--paper-item-icon-color': white
          border-radius: 50px
          color: rgb(0, 0, 100)
          width: 46%
        type: custom:card-modder
      - cards:
          - entities:
              - sensor.last_boot
              - sensor.memory_free
              - sensor.disk_free
              - sensor.processor_use
            type: glance
        title: My Card
        type: custom:vertical-stack-in-card
      - border: 1px solid black
        cards:
          - cards:
              - card:
                  color: rgb(44, 109, 214)
                  color_type: label-card
                  name: Heater Water Timer
                  type: custom:button-card
                style:
                  border-radius: 50px
                  width: 55%
                type: custom:card-modder
            type: horizontal-stack
          - cards:
              - card:
                  entities:
                    - entity: timer.water_heater
                  type: entities
                style:
                  border-radius: 50px
                  width: 55%
                type: custom:card-modder
            type: horizontal-stack
          - cards:
              - color: rgb(223, 255, 97)
                color_type: card
                icon: mdi:plus-circle-outline
                size: 50%
                styles:
                  card:
                    - width: 80px
                    - height: 80px
                    - border-radius: 40%
                  tap_action:
                    action: call-service
                    service: input_number.increment
                    service_data:
                      entity_id: input_number.timer_countdown
                type: custom:button-card
              - color: rgb(223, 255, 97)
                color_type: card
                icon: mdi:minus-circle-outline
                size: 50%
                styles:
                  card:
                    - width: 80px
                    - height: 80px
                    - border-radius: 40%
                  tap_action:
                    action: call-service
                    service: input_number.decrement
                    service_data:
                      entity_id: input_number.timer_countdown
                type: custom:button-card
              - color_type: blank-card
                type: custom:button-card
            type: horizontal-stack
          - cards:
              - card:
                  entities:
                    - entity: input_number.timer_countdown
                  type: entities
                style:
                  border-radius: 50px
                  width: 55%
                type: custom:card-modder
            type: vertical-stack
        type: vertical-stack
    path: test
    popup_cards:
      input_boolean.virtual_button:
        card:
          entities:
            - input_boolean.kitchen1_timer
            - input_datetime.kitchen1_timer_start
            - input_datetime.kitchen1_timer_end
          type: entities
        title: popup card
    title: Test
  - badges: []
    cards:
      - border: 1px solid black
        cards:
          - cards:
              - card:
                  color: rgb(44, 109, 214)
                  color_type: label-card
                  name: Heater Water Timer
                  type: custom:button-card
                style:
                  border-radius: 50px
                type: custom:card-modder
            type: horizontal-stack
          - cards:
              - card:
                  entities:
                    - entity: timer.fan
                  type: entities
                style:
                  border-radius: 50px
                type: custom:card-modder
            type: horizontal-stack
          - cards:
              - color_type: blank-card
                type: custom:button-card
              - color_type: blank-card
                type: custom:button-card
            type: horizontal-stack
        type: vertical-stack
      - elements:
          - type: custom:text-element
            text: 10min
            style:
              left: 14%
              top: 12%
              font-weight: 800
              color: black
          - type: custom:text-element
            text: 15min
            style:
              left: 31%
              top: 12%
              font-weight: 800
              color: black
          - type: custom:text-element
            text: 20min
            style:
              left: 48%
              top: 12%
              font-weight: 800
              color: black
          - type: custom:text-element
            text: 25min
            style:
              left: 65%
              top: 12%
              font-weight: 800
              color: black
          - type: custom:text-element
            text: 30min
            style:
              left: 82%
              top: 12%
              font-weight: 800
              color: black
          - type: custom:text-element
            text: 35min
            style:
              left: 14%
              top: 25%
              font-weight: 800
              color: black
          - type: custom:text-element
            text: 40min
            style:
              left: 31%
              top: 25%
              font-weight: 800
              color: black
          - type: custom:text-element
            text: 45min
            style:
              left: 48%
              top: 25%
              font-weight: 800
              color: black
          - type: custom:text-element
            text: 50min
            style:
              left: 65%
              top: 25%
              font-weight: 800
              color: black
          - type: custom:text-element
            text: 55min
            style:
              left: 82%
              top: 25%
              font-weight: 800
              color: black
          - type: custom:text-element
            text: 60min
            style:
              left: 14%
              top: 40%
              font-weight: 800
              color: black
          - type: custom:text-element
            text: 1:05h
            style:
              left: 31%
              top: 40%
              font-weight: 800
              color: black
          - type: custom:text-element
            text: 1:10h
            style:
              left: 48%
              top: 40%
              font-weight: 800
              color: black
          - type: custom:text-element
            text: 1:15h
            style:
              left: 65%
              top: 40%
              font-weight: 800
              color: black
          - type: custom:text-element
            text: 1:20h
            style:
              left: 82%
              top: 40%
              font-weight: 800
              color: black
          - entity: input_boolean.10m_heater_timer_water
            filter: saturate(.8)
            state_filter:
              'off': opacity(70%)
              'on': opacity(70%)
            state_image:
              'off': /local/icons/ledround_H_orange.png
              'on': /local/icons/ledround_H_green.png
            style:
              left: 14%
              top: 12%
              width: 15%
            tap_action:
              action: toggle
            type: image
          - entity: input_boolean.15m_heater_timer_water
            filter: saturate(.8)
            state_filter:
              'off': opacity(70%)
              'on': opacity(70%)
            state_image:
              'off': /local/icons/ledround_H_orange.png
              'on': /local/icons/ledround_H_green.png
            style:
              left: 31%
              top: 12%
              width: 15%
            tap_action:
              action: toggle
            type: image
          - entity: input_boolean.20m_heater_timer_water
            filter: saturate(.8)
            state_filter:
              'off': opacity(70%)
              'on': opacity(70%)
            state_image:
              'off': /local/icons/ledround_H_orange.png
              'on': /local/icons/ledround_H_green.png
            style:
              left: 48%
              top: 12%
              width: 15%
            tap_action:
              action: toggle
            type: image
          - entity: input_boolean.25m_heater_timer_water
            filter: saturate(.8)
            state_filter:
              'off': opacity(70%)
              'on': opacity(70%)
            state_image:
              'off': /local/icons/ledround_H_orange.png
              'on': /local/icons/ledround_H_green.png
            style:
              left: 65%
              top: 12%
              width: 15%
            tap_action:
              action: toggle
            type: image
          - entity: input_boolean.30m_heater_timer_water
            filter: saturate(.8)
            state_filter:
              'off': opacity(70%)
              'on': opacity(70%)
            state_image:
              'off': /local/icons/ledround_H_orange.png
              'on': /local/icons/ledround_H_green.png
            style:
              left: 82%
              top: 12%
              width: 15%
            tap_action:
              action: toggle
            type: image
          - entity: input_boolean.35m_heater_timer_water
            filter: saturate(.8)
            state_filter:
              'off': opacity(70%)
              'on': opacity(70%)
            state_image:
              'off': /local/icons/ledround_H_orange.png
              'on': /local/icons/ledround_H_green.png
            style:
              left: 14%
              top: 25%
              width: 15%
            tap_action:
              action: toggle
            type: image
          - entity: input_boolean.40m_heater_timer_water
            filter: saturate(.8)
            state_filter:
              'off': opacity(70%)
              'on': opacity(70%)
            state_image:
              'off': /local/icons/ledround_H_orange.png
              'on': /local/icons/ledround_H_green.png
            style:
              left: 31%
              top: 25%
              width: 15%
            tap_action:
              action: toggle
            type: image
          - entity: input_boolean.45m_heater_timer_water
            filter: saturate(.8)
            state_filter:
              'off': opacity(70%)
              'on': opacity(70%)
            state_image:
              'off': /local/icons/ledround_H_orange.png
              'on': /local/icons/ledround_H_green.png
            style:
              left: 48%
              top: 25%
              width: 15%
            tap_action:
              action: toggle
            type: image
          - entity: input_boolean.50m_heater_timer_water
            filter: saturate(.8)
            state_filter:
              'off': opacity(70%)
              'on': opacity(70%)
            state_image:
              'off': /local/icons/ledround_H_orange.png
              'on': /local/icons/ledround_H_green.png
            style:
              left: 65%
              top: 25%
              width: 15%
            tap_action:
              action: toggle
            type: image
          - entity: input_boolean.55m_heater_timer_water
            filter: saturate(.8)
            state_filter:
              'off': opacity(70%)
              'on': opacity(70%)
            state_image:
              'off': /local/icons/ledround_H_orange.png
              'on': /local/icons/ledround_H_green.png
            style:
              left: 82%
              top: 25%
              width: 15%
            tap_action:
              action: toggle
            type: image
          - entity: input_boolean.60m_heater_timer_water
            filter: saturate(.8)
            state_filter:
              'off': opacity(70%)
              'on': opacity(70%)
            state_image:
              'off': /local/icons/ledround_H_orange.png
              'on': /local/icons/ledround_H_green.png
            style:
              left: 14%
              top: 40%
              width: 15%
            tap_action:
              action: toggle
            type: image
          - entity: input_boolean.65m_heater_timer_water
            filter: saturate(.8)
            state_filter:
              'off': opacity(70%)
              'on': opacity(70%)
            state_image:
              'off': /local/icons/ledround_H_orange.png
              'on': /local/icons/ledround_H_green.png
            style:
              left: 31%
              top: 40%
              width: 15%
            tap_action:
              action: toggle
            type: image
          - entity: input_boolean.70m_heater_timer_water
            filter: saturate(.8)
            state_filter:
              'off': opacity(70%)
              'on': opacity(70%)
            state_image:
              'off': /local/icons/ledround_H_orange.png
              'on': /local/icons/ledround_H_green.png
            style:
              left: 48%
              top: 40%
              width: 15%
            tap_action:
              action: toggle
            type: image
          - entity: input_boolean.75m_heater_timer_water
            filter: saturate(.8)
            state_filter:
              'off': opacity(70%)
              'on': opacity(70%)
            state_image:
              'off': /local/icons/ledround_H_orange.png
              'on': /local/icons/ledround_H_green.png
            style:
              left: 65%
              top: 40%
              width: 15%
            tap_action:
              action: toggle
            type: image
          - entity: input_boolean.80m_heater_timer_water
            filter: saturate(.8)
            state_filter:
              'off': opacity(70%)
              'on': opacity(70%)
            state_image:
              'off': /local/icons/ledround_H_orange.png
              'on': /local/icons/ledround_H_green.png
            style:
              left: 82%
              top: 40%
              width: 15%
            tap_action:
              action: toggle
            type: image
          - entity: input_boolean.80m_heater_timer_water
            filter: saturate(.8)
            state_filter:
              'off': opacity(70%)
              'on': opacity(70%)
            state_image:
              'off': /local/icons/led-red.jpg
              'on': /local/icons/led-green.jpg
            style:
              left: 50%
              top: 55%
              width: 15%
            tap_action:
              action: toggle
            type: image
          - entity: input_boolean.80m_heater_timer_water
            name: Heater Water Timer
            style:
              left: 50%
              top: 80%
              width: 15%
            type: state-badge
        image: /local/icons/wall-switch.png
        type: picture-elements
      - type: entities
        entities:
          - entity: switch.fan_timer_switch
        title: fAN
      - type: entities
        entities:
          - entity: switch.test_timer_switch
        show_header_toggle: true
        title: test
    path: pictures
    title: Pictures"
nfeHyQwj,Untitled,sissou123,Python,Saturday 18th of November 2023 09:52:30 AM CDT,"10 Day Python Blitz - 2 hrs/day to learn Python 2023
Python for ~2 hours a day - getting from basics to understanding w/game programming!
for more:
https://cuty.io/GGrBOnv0hD0e"
c1W7jXJ3,Untitled,XaskeL,Lua,Saturday 18th of November 2023 09:51:01 AM CDT,"local function dropToFile( sFunctionName, sBuffer )
	local sFileName = string.format( ""%s%d"", tostring( sFunctionName ), getTickCount() );

	local pFile = fileCreate( sFileName );
	
	if ( pFile ) then
		fileWrite( pFile, sBuffer );
		fileFlush( pFile );
		
		fileClose( pFile );
	end
end;

--
-- Сброс интересного из памяти
addDebugHook( ""preFunction"",
	function( pSourceResource, sFunctionName, bAllowedByACL, sLuaFileName, iLuaLineNumber, ... )
		local aArgs = { ... };
		
		if ( sFunctionName == ""engineLoadDFF"" ) then
			dropToFile( ""DFF/"" .. sFunctionName, aArgs [ 1 ] );
		elseif ( sFunctionName == ""engineLoadTXD"" ) then
			dropToFile( ""TXD/"" .. sFunctionName, aArgs [ 1 ] );
		elseif ( sFunctionName == ""engineLoadCOL"" ) then
			dropToFile( ""COL/"" .. sFunctionName, aArgs [ 1 ] );
		end
	end, { ""engineLoadDFF"", ""engineLoadTXD"", ""engineLoadCOL"" }
);"
AnJ6Te5K,Pook incoming.sqf attempt to fix,Gamenator,SQF,Saturday 18th of November 2023 09:20:09 AM CDT,"/************************************************************

RWR and spoofing script: Based on Franze's Su-17/22 RWR script!

Updated by HCPOOKIE to work with:
 - POOK_EF2000
 - POOK Soviet AF
 - VME_PLA Vehicles
 - Fuller's USAF mod
 - Other mods can employ this script as well. 

Please credit appropriately.

///////////////////////////////////
* This is the POOK_SovAF version!!!
///////////////////////////////////

USAGE:
 - Action-based script to attempt to spoof incoming missiles
`
 - Relies on two other functions which must be loaded on INIT:
EF2K_pitchbank = compile preprocessFileLineNumbers ""\mod\scripts\fsetpitch.sqf"";
EF2K_getpb = compile preprocessFileLineNumbers ""\mod\scripts\frotate.sqf"";

 - Checks for certain jammer pods on plane; if none, checks 
   if plane is of certain types that contain on-board jamming 
   equipment; if neither, revert to default action

 - Reads missile attributes to determine if the following 
   POOK_SAM pack values are present, and modify behavior 
   accordingly (see POOK_SAM pack documentation for more info):
   - POOK_HOJ
   - POOK_Band
   - POOK_HOP

 - Missiles have chance to burn-through jamming, making results 
   semi-random.  Pilots should plan to adjust flight to dodge 
   missiles, and employ standard countermeasures while jamming.

 - Script also provides RWR notification to pilot and animates 
   on-board RWR cockpit indicators if so equipped.

 - Pilot also receives vehicle chat notifications regardless 
   if the plane has an animated RWR system.

************************************************************/

private [""_v"",""_amm"",""_aTyp"",""_shooter"",""_theta"",""_p"",""_pMsl"",""_rng"",
""_ico"",""_msl"",""_dev"",""_VXmis"",""_VYmis"",""_HOJ"",""_HOP"",""_B"",
""_pbvar"",""_pitch"",""_bank"",""_typ"",""_ECM"",""_I"",""_Ip"",""_Q"",""_icT""];

_v = _this select 0; // incomingMissile EH: unit: Object - Object the event handler is assigned to
_amm = _this select 1; // incomingMissile EH: ammo: String - Ammo type that was fired on the unit
_shooter = _this select 2; // incomingMissile EH: whoFired: Object - Object that fired the weapon
_theta = 0;
_ECM = false;
_p = getpos _v;
_msl = nearestobject [_shooter,_amm]; // EH select 2, EH select 1
_pMsl = getpos _msl;
_rng = _pMsl distance _p;

/*********** RWR alarm sound and master caution lamps *********************************************************/
_v animate ['missile_launch_ind',0];
_v animate ['master_caution_ind',0];


/*********** Check for pod and/or plane class that contains internal jamming systems Pook_SOV_BB**************************/
_I = [_v] call pook_SOV_FNC_tCheck;
_Ip = [_v] call pook_SOV_FNC_pCheck;

// if either checks are TRUE then full ECM can activate
if ((_I) || (_Ip)) then {
	_ECM = true;
};

/*********** Get pook_SAM missile data values if present *****************************************************/
_aTyp = toUpper (_amm);
_HOJ = [(configFile >> ""cfgAmmo"" >> _aTyp),""pook_HOJ"",2] call BIS_fnc_returnConfigEntry;
_B = [(configFile >> ""cfgAmmo"" >> _aTyp),""pook_Band"",2] call BIS_fnc_returnConfigEntry;
_HOP = [(configFile >> ""cfgAmmo"" >> _aTyp),""pook_HOP"",2] call BIS_fnc_returnConfigEntry;

/*********** JAMMING OFFSET *******************************

_dev = Baseline offset value. 
Determines amount of missile deflection during jam loop

Larger = more deviation

Also used to calculate missile burn-through rate, as 
a product of ""distance * _chance"".

0.0005 base value for vanilla and undocumented missiles

**********************************************************/

switch (_B) do {
/*
0.00035 = extreme wiggle in path
0.000275 = median spoofing

	case ""C"":{_dev = 0.0005;}; // SA2; (also MIM23 search)
	case ""J"":{_dev = 0.00025;}; // SA19
	case ""X"":{_dev = 0.000275;}; // typical
	case ""G"":{_dev = 0.0001;}; // MIM104, SA15
*/
	case ""C"":{if (_ECM) then {_dev = 0.000325;} else {_dev = 0.0003;};}; // SA2; (also MIM23 search)
	case ""J"":{if (_ECM) then {_dev = 0.0003125;} else {_dev = 0.000275;};}; // SA8, SA19
	case ""X"":{if (_ECM) then {_dev = 0.0003;} else {_dev = 0.00025;};}; // typical: SA3,SA10,SA11,SA17,SA20,SA21,SA22,NAS,MIM23
	case ""G"":{if (_ECM) then {_dev = 0.000125;} else {_dev = 0.0001;};}; // MIM104, SA15

// following are search radars, and not directly involved in jamming actions
	case ""A"":{_dev = 0.0001;}; // SA2 search; SA3 search
	case ""H"":{_dev = 0.0001;}; // SA11/SA17 search
	case ""S"":{_dev = 0.0001;}; // SA-22 search
	case ""E"":{_dev = 0.0001;}; // SA-19 search
	case ""L"":{_dev = 0.0001;}; // SA-21 search

	case ""I"":{_dev = 0.00001;}; // Infra-red (IR)

	default {_dev = 0.0005;}; // undocumented missiles (vanilla, etc)
};

/** animate RWR ""TYPE"" warning light (Russian type) ************************************************************/
/**
if (_shooter isKindOf ""Air"") then {
	_v setobjecttexture [87,""\fza_su17\su17_rwrlights.paa""];
};
if (_shooter isKindOf ""Land"" and _rng > 20000) then {
	_v setobjecttexture [90,""\fza_su17\su17_rwrlights.paa""];
};
if (_shooter isKindOf ""Land"" and _rng > 10000 and _rng < 20000) then {
	_v setobjecttexture [91,""\fza_su17\su17_rwrlights.paa""];
};
if (_shooter isKindOf ""Land"" and _rng < 10000) then {
	_v setobjecttexture [92,""\fza_su17\su17_rwrlights.paa""];
};
**/

/** animate RWR ""TYPE"" warning light (NATO type) ***************************************************************/
_icT = [_aTyp] call pook_SOV_FNC_aTyp;
//_typ = ([_aTyp] call pook_SOV_FNC_aTyp) select 1;
_ico = _icT select 0; 
_typ = _icT select 1;

while {(alive _msl)} do {
private [""_pP"",""_pM"",""_rng"",""_qd"",""_reldir"",""_oc"",""_ocF"",""_ocN"",""_highlow""];

_pP = getpos _v;
_pM = getpos _msl;
_rng = _pM distance _pP;

};

private[""_highlow"",""_pP"",""_pM""];
/** missile HEIGHT check - is it ""high"" or ""low"" ***************************************************************/
if (_pP select 2 > _pM select 2) then {
    _highlow = ""Low"";
} else {
    _highlow = ""High"";
};



/** calculate incoming DIRECTION  ***************************************************************/
_reldir = ((_pM select 0) - (_pP select 0)) atan2 ((_pM select 1) - (_pP select 1));
if (_reldir < 0) then {
	_reldir = _reldir + 360;
};

_Theta = [_reldir,_v] call pook_SOV_FNC_Theta;
_oc = _Theta select 0;
_ocF = _Theta select 1;
_ocN = _Theta select 2;
_qd = _Theta select 3;


_v vehiclechat format [""%4 Missile %1 OClock %2 %3 Meters"",_oc,_highlow,_rng,_typ];

/** animate RWR warn flash *************************************************************

_v setObjectTexture [_qd,""\pook_EF2000\data\cockpit\mfd3_ca.paa""]; // red on
sleep 0.25;
_v setObjectTexture [_qd,""""]; // red off
sleep 0.25;
_v setObjectTexture [_qd,""\pook_EF2000\data\cockpit\mfd3_ca.paa""]; // red on
sleep 0.25;
_v setObjectTexture [_qd,""""]; // red off
sleep 0.25;
_v setObjectTexture [_qd,""\pook_EF2000\data\cockpit\mfd3_ca.paa""]; // red on
sleep 0.25;
_v setObjectTexture [_qd,""""]; // red off

**/
/** RWR incoming ident *************************************************************
if (_rng > 1500) then {
	if (_rng > 5000) then {
		_v setObjectTexture [_ocF, _ico]; // far
	} else {
		_v setObjectTexture [_ocN, _ico]; // near
	};
} else {
	_v setObjectTexture [35, _ico]; // close
};

**/
/** ""has passed"" check - cancel ECM if true ***************************************************************/
private [""_ps""];
_ps = _msl distance _v;
sleep 1;
if ((_msl distance _v) > _ps) exitWith {};


///////////////////////////////////////////////////////////////////  begin spoofing section

_VXmis = vectorup _msl;
_VYmis = vectordir _msl;


/*
// Freq - FUTURE: Set jammer to different modes/Freq
// If false it halves the amount of deflection. Missile flight model
// may still allow missile to overcome ECM with this active

if !(_B == 1) then {
//	_Freq = _v getVariable ""ECM_Freq"";
	if (_Freq in jammerarray) then {
		_jam = active
	};
	_dev = _dev * 0.0025;
};
*/

if (_ECM) then {

	while {(alive _msl) && (alive _v)} do {
	// Distance calculation for spoof percentage increase as distance to target decreases
	// Simulates the ""burn-through"" capability of missile's on-board radar
	// examples:
	//		X-band @ 2000m = 0.75% / 4000m = 1.50%
	//		G-band @ 2000m = 1.00% / 4000m = 2.00%
	//		C-band @ 2000m = 0.20% / 4000m = 0.40%
		_distance = _v distance _msl; // closing distance in M
		_burnThrough = _dev * _distance;
//	hint format [""Burnthrough: %1, Distance: %2, curvupmis: %3, curvdirmis: %4"",_burnThrough,_distance,_VXmis,_VYmis];

	// Frequency Hop check: Increased chance for ECM to fail
	// (by pausing ECM actions) if missile can frequency hop
	// The pause stacks on the HOJ pause, if > 0
		if (_HOP == 1) then {
			sleep (sqrt(floor(random _burnThrough)*0.1)*((sqrt _distance)*0.1));
		};

		if (_distance < 4000) then {
		// Home-On-Jam check: Increased chance for ECM to fail
		// (by adding ECM pauses) if missile can Home-On-Jam
			if (_HOJ == 1) then {
				sleep (floor(random 0.125)+((sqrt _distance)*0.1));
			};

		};
	// FUTURE: Adjust pitch/bank vector amounts based on _burnThrough
		_msl setvectorup _VXmis;
		_msl setvectordir _VYmis;

		_pbvar = _msl call EF2K_RWR_getpb; // frotate.sqf
		_pitch = _pbvar select 0; // PITCH
		_bank = _pbvar select 1;  // BANK
		_bank = _bank - _dev;
		_pitch = _pitch - _dev;
		[_msl, _pitch, _bank] call EF2K_RWR_pitchbank; // fsetpitch.sqf

	// find missile vector up and vector dir for next loop
		_VXmis = vectorup _msl;
		_VYmis = vectordir _msl;
	// 0.25 = spoof never successful
		// closer to target, shorter sleep loops (more active scanner) 
		// This means more attempts to counter ECM, and the greater 
		// the chance for missile to succeed vs. ECM
		sleep _burnThrough;

	};

} else {
	_v forceWeaponFire [""CMFlareLauncher"",""Burst""];
};

///////////////////////////////////////////////////////////////////  end spoofing section

/** Reset RWR icons for THIS LOOP ***************************************************************/
/**
sleep 1;
_v setObjectTexture [15,""""];
_v setObjectTexture [16,""""];
_v setObjectTexture [17,""""];
_v setObjectTexture [18,""""];
_v setObjectTexture [19,""""];
_v setObjectTexture [20,""""];
_v setObjectTexture [21,""""];
_v setObjectTexture [22,""""];
_v setObjectTexture [23,""""];
_v setObjectTexture [24,""""];
_v setObjectTexture [25,""""];
_v setObjectTexture [26,""""];
_v setObjectTexture [27,""""];
_v setObjectTexture [28,""""];
_v setObjectTexture [29,""""];
_v setObjectTexture [30,""""];
_v setObjectTexture [31,""""];
_v setObjectTexture [32,""""];
_v setObjectTexture [33,""""];
_v setObjectTexture [34,""""];
_v setObjectTexture [35,""""];

}; // WHILE ALIVE MISSILE LOOP
**/

/** CLEAN-UP: RESET COCKPIT WARN LIGHTS and RWR ***************************************************************/

_v animate ['missile_launch_ind',1];
_v animate ['master_caution_ind',1];
/**
_v setObjectTexture [7,""\pook_EF2000\data\cockpit\mfd2_ca.paa""];
_v setObjectTexture [8,""\pook_EF2000\data\cockpit\mfd2_ca.paa""];
_v setObjectTexture [9,""\pook_EF2000\data\cockpit\mfd2_ca.paa""];
_v setObjectTexture [10,""\pook_EF2000\data\cockpit\mfd2_ca.paa""];
_v setObjectTexture [11,""\pook_EF2000\data\cockpit\mfd2_ca.paa""];
_v setObjectTexture [12,""\pook_EF2000\data\cockpit\mfd2_ca.paa""];
_v setObjectTexture [13,""\pook_EF2000\data\cockpit\mfd2_ca.paa""];
_v setObjectTexture [14,""\pook_EF2000\data\cockpit\mfd2_ca.paa""];

_v setObjectTexture [15,""""];
_v setObjectTexture [16,""""];
_v setObjectTexture [17,""""];
_v setObjectTexture [18,""""];
_v setObjectTexture [19,""""];
_v setObjectTexture [20,""""];
_v setObjectTexture [21,""""];
_v setObjectTexture [22,""""];
_v setObjectTexture [23,""""];
_v setObjectTexture [24,""""];
_v setObjectTexture [25,""""];
_v setObjectTexture [26,""""];
_v setObjectTexture [27,""""];
_v setObjectTexture [28,""""];
_v setObjectTexture [29,""""];
_v setObjectTexture [30,""""];
_v setObjectTexture [31,""""];
_v setObjectTexture [32,""""];
_v setObjectTexture [33,""""];
_v setObjectTexture [34,""""];
_v setObjectTexture [35,""""];

**/"
yanEcZef,:(,bozhilov,C++,Saturday 18th of November 2023 09:09:48 AM CDT,"
bool evaluateConditionalExpression(int64_t val, std::string op,
                                   int64_t threshold) {
    if (op == ""is"" || op == ""=="") {
        return val == threshold;
    } else if (op == "">"") {
        return val > threshold;
    } else if (op == ""<"") {
        return val < threshold;
    } else if (op == "">="") {
        return val >= threshold;
    } else if (op == ""<="") {
        return val <= threshold;
    }

    // ! Consider using else instead of having this path
    return false;
}

int64_t getValueBasedOnOperator(int64_t val, std::string op,
                                int64_t increment) {
    if (op == ""+"") {
        return val + increment;
    } else if (op == ""-"") {
        return val - increment;
    } else if (op == ""*"") {
        return val * increment;
    } else if (op == ""/"") {
        return val / increment;
    }
}

Storage* runForLoop(ForLoop* fl, Environment* env) {
    auto expression = evaluate(fl->definition.variable, env);
    IntegerStorage* variable;
    bool shouldReference = false;

    if (checkBase(expression, typeid(ReferenceStorage))) {
        variable = dynamic_cast<IntegerStorage*>(
            env->get(dynamic_cast<ReferenceStorage*>(expression)->reference));
        shouldReference = true;
    } else {
        variable = dynamic_cast<IntegerStorage*>(expression);
        if (!variable) {
            return new ErrorStorage(
                ""[LOOP] Incorrectly provisioned initialization variable"");
        }
    }

    if (!fl->code->hasCode()) {
        return new ErrorStorage(""[LOOP] Doesn't have body"");
    }

    Infix* increment = dynamic_cast<Infix*>(fl->definition.increment);
    if (!increment) {
        return new ErrorStorage(
            ""[LOOP] Incorrectly provisioned incremental expression"");
    }

    Infix* conditional = dynamic_cast<Infix*>(fl->definition.conditional);

    if (!conditional) {
        return new ErrorStorage(
            ""[LOOP] Incorrectly provisioned conditional statement"");
    }

    // variable identifier -> for (def i = 5; i < 10; -> i + 1)
    Identifier* incrementalIdent = dynamic_cast<Identifier*>(increment->left);
    if (!incrementalIdent) {
        return new ErrorStorage(""[LOOP] Provisioned variable identifier in ""
                                ""incremental expression is incorrect"");
    }

    Integer* step = dynamic_cast<Integer*>(increment->right);
    if (!step) {
        // TODO: come up with better message;
        return new ErrorStorage(""something 1"");
    }

    // variable identifier -> for (def i = 5; -> i < 10; i + 1)
    Identifier* identifier = dynamic_cast<Identifier*>(conditional->left);
    if (!identifier) {
        return new ErrorStorage(""[LOOP] Provisioned variable identifier in ""
                                ""conditional expression is incorrect"");
    }

    // TODO: Make sure the three provided identifiers match

    Integer* threshold = dynamic_cast<Integer*>(conditional->right);
    if (!threshold) {
        // TODO: come up with better message;
        return new ErrorStorage(""something 2"");
    }

    IntegerStorage* initializer;
    initializer =
        dynamic_cast<IntegerStorage*>(env->get(identifier->token.literal));

    if (!initializer) {
        std::string errMsg = ""something 3"";
        if (!checkBase(env->get(identifier->token.literal),
                       typeid(ReferenceStorage))) {
            // TODO: come up with better message;
            return new ErrorStorage(errMsg);
        }

        initializer = dynamic_cast<IntegerStorage*>(env->get(
            dynamic_cast<ReferenceStorage*>(env->get(identifier->token.literal))
                ->reference));
        if (!initializer) {
            // TODO: come up with better message;
            return new ErrorStorage(errMsg);
        }
    }

    // incremental loop
    if (increment->op == ""+"" || increment->op == ""*"") {
        for (int i = initializer->value; true; i++) {
            // TODO: this will break if a reference is used

            int64_t current = dynamic_cast<IntegerStorage*>(env->get(identifier->token.literal))->value;
            if (!evaluateConditionalExpression(current, conditional->op,
                                               threshold->value))
                break;

            for (auto stmt : fl->code->statements) {
                evaluate(stmt, env);
            }

            // reflect increase in environment
            if (shouldReference) {
                auto reference = env->get(identifier->value);
                auto loopVariable = dynamic_cast<IntegerStorage*>(env->get(
                    dynamic_cast<ReferenceStorage*>(reference)->reference));

                loopVariable->value = getValueBasedOnOperator(
                    loopVariable->value, increment->op, step->value);

                env->set(identifier->value, reference);

            } else {
                auto loopVariable =
                    dynamic_cast<IntegerStorage*>(env->get(identifier->value));

                int64_t increasedValue = getValueBasedOnOperator(
                    loopVariable->value, increment->op, step->value);

                env->set(identifier->value, new IntegerStorage(increasedValue));
            }
        }
    } else {
        return new ErrorStorage(""Decremental loops are not yet implemented"");
    }

    // TODO: delete newly created loop variable from environment
    return emptyStorage;
}
"
MbGcFufX,recursiveWalkDir.ts,ItzMarni,JavaScript,Saturday 18th of November 2023 08:47:39 AM CDT,"import fs from 'node:fs/promises';
import path from 'node:path';

/**
 *
 * @param normalizedDirName The directory to begin walking through. Normalized with path.join().
 * @param callback The callback to execute for every file found.
 * @param errMessage The error message to display if an error occurs during the process.
 */
export async function recursiveWalkDir(
  normalizedDirName: string,
  // eslint-disable-next-line no-unused-vars
  callback: (currentDir: string, file: string) => Promise<void>,
  errMessage: string,
) {
  const files = await fs.readdir(normalizedDirName);

  for (const file of files) {
    const stat = await fs.lstat(path.join(normalizedDirName, file));

    if (stat.isDirectory()) {
      await recursiveWalkDir(path.join(normalizedDirName, file), callback, errMessage);
    } else {
      try {
        await callback(normalizedDirName, file);
      } catch (e: unknown) {
        console.warn(`${errMessage} ${(e as Error).message}`);
      }
    }
  }
}

export default recursiveWalkDir;
"
EqiQntzH,Android Get Google Play Store Certification,metalx1000,Bash,Saturday 18th of November 2023 08:45:32 AM CDT,"#for use with custom ROMs such as LineageOS

#enable adb root in phones settings
adb root

#get key to submit
adb shell 'sqlite3 /data/*/*/*/gservices.db ""select * from main where name = \""android_id\"";""'

#copy it to clipboard
adb shell 'sqlite3 /data/*/*/*/gservices.db ""select * from main where name = \""android_id\"";""'|cut -d\| -f2|xclip

#get certification for Google Play Store 
xdg-open https://www.google.com/android/uncertified/

#clear google services cache
adb shell pm clear com.google.android.gms

#This could take up to 12 hours to activate"
sPw9uijU,Хочется квакать,VladimirKostovsky,C,Saturday 18th of November 2023 08:44:18 AM CDT,"#include <stdio.h>
#include <locale.h>
#include <stdlib.h>

// Константы для работы с графом
#define MIN_N 2
#define MAX_N 7
#define FILENAME ""input.txt""

// Функция для ввода размера графа с клавиатуры
void inputGraphSize(int* n) {
    printf_s(""Введите количество вершин графа в диапазоне [%d; %d]: "", MIN_N, MAX_N);
    scanf_s(""%d"", n);
}

// Функция для проверки корректности размера графа
int checkGraphSize(int n) {
    if (n < MIN_N || n > MAX_N) {
        printf_s(""Ошибка: введенное значение n вне допустимого диапазона.\n"");
        return 1; // Возврат с ошибкой
    }
    return 0; // Все в порядке
}

// Функция для создания матрицы смежности с клавиатуры
void createAdjacencyMatrix(int n, int(*m1)[MAX_N]) {
    printf_s(""Матрица смежности c размерностью %d x %d\n"", n, n);
    for (int i = 0; i < n; i++) {
        for (int j = i; j < n; j++) {
            printf_s(""m1[%d][%d] = "", i, j);
            scanf_s(""%d"", &m1[i][j]);
            m1[j][i] = m1[i][j];
        }
    }
}

// Функция для чтения матрицы смежности из файла
void readAdjacencyMatrixFromFile(int n, int(*m1)[MAX_N]) {
    FILE* file;
    if (fopen_s(&file, FILENAME, ""r"") != 0) {
        printf_s(""Ошибка открытия файла %s\n"", FILENAME);
        exit(1);
    }

    for (int i = 0; i < n; i++) {
        for (int j = i; j < n; j++) {
            fscanf_s(file, ""%d"", &m1[i][j]);
            m1[j][i] = m1[i][j];
        }
    }

    fclose(file);
}

// Функция для вывода матрицы смежности на экран
void printAdjacencyMatrix(int n, int(*m1)[MAX_N]) {
    printf_s(""Вывод матрицы смежности m1\n"");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            printf_s(""%d\t"", m1[i][j]);
        }
        printf_s(""\n"");
    }
}

// Функция для подсчета количества рёбер в графе
int countEdges(int n, int(*m1)[MAX_N]) {
    int k0 = 0;
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - 1; j++) {
            k0 += m1[i][j];
        }
    }
    return k0 / 2;
}

// Функция для подсчета связей каждой вершины
void countVertexConnections(int n, int(*m1)[MAX_N], int* sum) {
    for (int j = 0; j < n - 1; j++) {
        sum[j] = 0;
        for (int i = 0; i < n - 1; i++) {
            sum[j] += m1[j][i];
        }
    }
}

// Функция для проверки связности графа
int checkConnectivity(int n, int* sum) {
    int p = 0;
    for (int i = 0; i < n - 1; i++) {
        if (sum[i] == 0) {
            printf_s(""Матрица несвязная\n"");
            p++;
        }
    }
    return p;
}

// Функция для проверки, является ли граф деревом
int isTree(int k, int n, int p) {
    return (k == n - 2 && p == 0);
}

// Главная функция программы
int main() {
    setlocale(LC_ALL, ""Russian"");

    int n; // Переменная для хранения размера графа

     // Справка
    printf_s(""\nАлгоритм работы программы:\n"");
    printf_s(""1. Пользователь выбирает источник данных: клавиатура или файл (input.txt).\n"");
    printf_s(""2. В зависимости от выбора, программа либо запрашивает ввод размера графа и матрицы смежности с клавиатуры,\n"");
    printf_s(""   либо считывает данные из файла input.txt.\n"");
    printf_s(""3. Программа выводит матрицу смежности.\n"");
    printf_s(""4. Программа выполняет проверку.\n"");
    printf_s(""5. Память, выделенная под матрицы, освобождается.\n"");
    printf_s(""\nАвтор: Павликова Екатерина, группа ПМИ-13\n"");

    // Выбор источника данных (клавиатура или файл)
    printf_s(""Выберите источник данных (1 - клавиатура, 2 - файл): "");
    int choice;
    scanf_s(""%d"", &choice);

    // Обработка выбора пользователя
    if (choice == 1) {
        // Ввод размера графа с клавиатуры
        inputGraphSize(&n);

        // Проверка корректности введенного размера графа
        if (checkGraphSize(n)) {
            return 1; // Возврат с ошибкой
        }
    }
    else if (choice == 2) {
        // Инициализация переменной n с использованием константного значения
        printf_s(""Чтение данных из файла %s\n"", FILENAME);
        FILE* file;
        if (fopen_s(&file, FILENAME, ""r"") != 0) {
            printf_s(""Ошибка открытия файла %s\n"", FILENAME);
            return 1; // Возврат с ошибкой
        }

        // Чтение размера графа из файла
        fscanf_s(file, ""%d"", &n);
        fclose(file);
                // Проверка корректности введенного размера графа
        if (checkGraphSize(n)) {
            return 1; // Возврат с ошибкой
        }
    }
    else {
        printf_s(""Ошибка: неверный выбор источника данных.\n"");
        return 1; // Возврат с ошибкой
    }

    // Выделение памяти под матрицу смежности
    int(*m1)[MAX_N] = malloc(MAX_N * sizeof(int[MAX_N]));

    // Проверка успешности выделения памяти
    if (m1 == NULL) {
        printf_s(""Ошибка: не удалось выделить память для матрицы смежности.\n"");
        return 1;
    }

    // Ввод или чтение матрицы смежности в зависимости от выбора пользователя
    if (choice == 1) {
        createAdjacencyMatrix(n, m1);
    }
    else if (choice == 2) {
        readAdjacencyMatrixFromFile(n, m1);
    }

    // Вывод матрицы смежности на экран
    printAdjacencyMatrix(n, m1);

    // Подсчет количества рёбер в графе
    int k = countEdges(n, m1);
    printf_s(""В графе %d рёбер\n"", k);

    // Массив для хранения связей каждой вершины
    int sum[MAX_N - 1];

    // Подсчет связей каждой вершины
    countVertexConnections(n, m1, sum);

    // Проверка связности графа
    int p = checkConnectivity(n, sum);

    // Проверка, является ли граф деревом
    if (isTree(k, n, p)) {
        printf_s(""m1 является деревом\n\n"");
    }
    else {
        printf_s(""m1 не является деревом\n\n"");
    }

    // Освобождение выделенной памяти
    free(m1);

    return 0;
}"
npcLrsjb,How to Remove Astra Post Excerpt from the Post Archive and Keep Read More Button,fahimmurshed,PHP,Saturday 18th of November 2023 08:42:55 AM CDT,"add_filter( 'the_excerpt', 'filter_the_excerpt', 10, 2 );
function filter_the_excerpt( $excerpt ) {
    // Return an empty string to remove the excerpt text
    $excerpt = '';

    // Add the ""Read more"" button HTML
    $excerpt .= '<a class=""ast-button"" href=""' . esc_url( get_permalink() ) . '"">' . esc_html__( 'Read More', 'astra' ) . '</a>';

    // Return the modified excerpt
    return $excerpt;
}"
59fg2K8B,ssss,LeonardoSportiello,C,Saturday 18th of November 2023 08:30:16 AM CDT,"#include <stdio.h>

// Funzione per scambiare due stringhe
void scambiaStringhe(char *a, char *b) {
    char temp[50];
    int i;
    for (i = 0; a[i] != '\0'; i++) {
        temp[i] = a[i];
    }
    temp[i] = '\0';

    for (i = 0; b[i] != '\0'; i++) {
        a[i] = b[i];
    }
    a[i] = '\0';

    for (i = 0; temp[i] != '\0'; i++) {
        b[i] = temp[i];
    }
    b[i] = '\0';
}

// Funzione di ordinamento con l'algoritmo di bubble sort per stringhe
void bubbleSortStringhe(char arr[][50], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            // Confronta le stringhe e scambia se necessario
            int k = 0;
            while (arr[j][k] == arr[j + 1][k] && arr[j][k] != '\0' && arr[j + 1][k] != '\0') {
                k++;
            }
            
            if (arr[j][k] > arr[j + 1][k]) {
                scambiaStringhe(arr[j], arr[j + 1]);
            }
        }
    }
}

int main() {
    char arrayStringhe[][50] = {""banana"", ""apple"", ""orange"", ""grape"", ""kiwi""};
    int n = sizeof(arrayStringhe) / sizeof(arrayStringhe[0]);

    // Chiama la funzione di ordinamento per stringhe
    bubbleSortStringhe(arrayStringhe, n);

    // Stampa l'array di stringhe ordinato
    printf(""Array di stringhe ordinato:\n"");
    for (int i = 0; i < n; i++) {
        printf(""%s\n"", arrayStringhe[i]);
    }

    return 0;
}"
0dkSJ95D,ssss,LeonardoSportiello,C,Saturday 18th of November 2023 08:27:29 AM CDT,"#include <stdio.h>
#include <stdlib.h>

// Funzione per unire due sottovettori di arr[]
void merge(int arr[], int l, int m, int r) {
    int n1 = m - l + 1;
    int n2 = r - m;

    // Crea sottovettori temporanei
    int L[n1], R[n2];

    // Copia i dati nei sottovettori temporanei L[] e R[]
    for (int i = 0; i < n1; i++)
        L[i] = arr[l + i];
    for (int j = 0; j < n2; j++)
        R[j] = arr[m + 1 + j];

    // Fonde i sottovettori temporanei in arr[l..r]
    int i = 0, j = 0, k = l;
    while (i < n1 && j < n2) {
        if (L[i] <= R[j]) {
            arr[k] = L[i];
            i++;
        } else {
            arr[k] = R[j];
            j++;
        }
        k++;
    }

    // Copia gli elementi rimanenti di L[], se ce ne sono
    while (i < n1) {
        arr[k] = L[i];
        i++;
        k++;
    }

    // Copia gli elementi rimanenti di R[], se ce ne sono
    while (j < n2) {
        arr[k] = R[j];
        j++;
        k++;
    }
}

// Funzione di ordinamento con l'algoritmo di merge sort
void mergeSort(int arr[], int l, int r) {
    if (l < r) {
        // Trova il punto medio dell'array
        int m = l + (r - l) / 2;

        // Ordina la prima e la seconda metà
        mergeSort(arr, l, m);
        mergeSort(arr, m + 1, r);

        // Unisci le due metà ordinate
        merge(arr, l, m, r);
    }
}

int main() {
    int arr[] = {12, 11, 13, 5, 6, 7};
    int n = sizeof(arr) / sizeof(arr[0]);

    // Chiama la funzione di ordinamento
    mergeSort(arr, 0, n - 1);

    // Stampa l'array ordinato
    printf(""Array ordinato: "");
    for (int i = 0; i < n; i++) {
        printf(""%d "", arr[i]);
    }

    return 0;
}"
aGipu9PR,ddd,LeonardoSportiello,C,Saturday 18th of November 2023 08:25:14 AM CDT,"#include <stdio.h>

void bubbleSort(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                scambia(&arr[j], &arr[j + 1]);
            }
        }
    }
}

int main() {
    int arr[] = {64, 34, 25, 12, 22, 11, 90};
    int n = sizeof(arr) / sizeof(arr[0]);

    bubbleSort(arr, n);

    printf(""Array ordinato: "");
    for (int i = 0; i < n; i++) {
        printf(""%d "", arr[i]);
    }

    return 0;
}"
t6s0Li0S,dshdrhjdrj,gadungw71,PHP,Saturday 18th of November 2023 08:22:02 AM CDT,"https://gamma.app/public/Kzl-Gokyuzu-Filmi-Tam-Surum-2023-HD-Turkce-dublajl-9ig6knjcomlpgl9
https://www.taskade.com/p/kizil-goekyuezue-2023-film-izle-tuerkce-dublaj-full-hd-kalite-film-izle-01HFGNT08Y6PGV9JV5KXT0G1VS
https://gamma.app/public/izle---Kzl-Gokyuzu-full-FILMLER-online-HD-1080P-vdgavyq2gpufj4p
https://www.taskade.com/p/tuem-film-kizil-goekyuezue-izle-2023-tuerkce-dublaj-full-hd-izle-01HFGPV1XVR8BGF5CEYCCAF065
https://gamma.app/public/Kzl-Gokyuzu-Filmi-Full-Izle-2023-1080p-Turkce-altyazl-Izle-MP4720-4oaijhc6id8d7v7
https://groups.google.com/g/tm-film-kzl-gkyz-2023-trke-dublaj-full-hd-zle/c/5rOYNuvbIFs
https://www.taskade.com/p/kizil-goekyuezue-filmi-full-izle-2023-tuerkce-altyazili-izle-hd-1080p-01HFGRJY65CM32SZWX79TV7G89
https://groups.google.com/g/napolyon-2023-film-izle--trke-dublaj-full-hd-kalite-film-izle/c/cBuA4684ZLM
https://gamma.app/public/Napolyon-Filmi-Tam-Surum-2023-HD-Turkce-dublajl-b6xhnlc1s3rax6x
https://www.taskade.com/p/izle-filmleri-napolyon-full-filmler-online-hd-1080-p-01HFGSRR15T6CR5JV7P84PV8GH
https://groups.google.com/g/tm-film-napolyon--izle---2023--trke-dublaj-full-hd-zle/c/M0i-W-sbGOM
https://gamma.app/public/Napolyon-Filmi-Full-Izle-2023-Napolyon-1080p-Turkce-altyazl-Izle--z5wsi44w29747v7
https://www.taskade.com/p/izle-napolyon-filmi-tam-sueruem-tuerkce-dublaj-full-hd-kalite-film-izle-01HFGWHT59K9EJ286X926P3E1Q
https://www.taskade.com/p/filmi-napolyon-2023-tam-sueruem-tuerkce-altyazili-izle-full-hd-01HFGYTEDBGWJVVVKPE9J52MK7
https://gamma.app/public/izle---Napolyon-Filmi-Tam-Surum-2023-HD-Turkce-dublajl-0m0joufve2t63ar
https://www.taskade.com/p/1080-p-01HFH07Z8SB399M66ZTN9ZDS7P
https://gamma.app/public/---2023-ug0oeakb8o5o757
https://groups.google.com/g/thanksgiving-hd/c/ErnXm067xxo
https://gamma.app/public/---HD-180P-667x0fp3ua67vg0
https://www.taskade.com/p/2023-1080-p-01HFH9N2CG2PFSBC5DT4Y1880S
https://player.soundon.fm/p/a0310210-bd0e-4582-847b-d1c5721079bd
https://gamma.app/public/-2023-HD1080p-sos415ie360tivy
https://www.taskade.com/p/2023-hd-tw-hk-01HFHASF3ASVAJZCH4XR5JNCTE
"
b66ZVb4e,INSERT SORT,LeonardoSportiello,C,Saturday 18th of November 2023 08:21:17 AM CDT,"#include <stdio.h>

// Funzione di ordinamento con l'algoritmo di inserimento
void inserimentoSort(int arr[], int n) {
    for (int i = 1; i < n; i++) {
        int chiave = arr[i];
        int j = i - 1;
        // Sposta gli elementi maggiori di chiave di una posizione a destra
        while (j >= 0 && arr[j] > chiave) {
            arr[j + 1] = arr[j];
            j = j - 1;
        }
        // Inserisce la chiave nella posizione corretta
        arr[j + 1] = chiave;
    }
}

int main() {
    int arr[] = {12, 11, 13, 5, 6};
    int n = sizeof(arr) / sizeof(arr[0]);

    // Chiama la funzione di ordinamento
    inserimentoSort(arr, n);

    // Stampa l'array ordinato
    printf(""Array ordinato: "");
    for (int i = 0; i < n; i++) {
        printf(""%d "", arr[i]);
    }

    return 0;
}"
P8zvwqTF,F,LEGEND2004,C++,Saturday 18th of November 2023 08:20:16 AM CDT,"int n;
cin >> n;
int a[n + 5][n + 5];
int x = 1;
for(int i = 1; i <= n; i++){
    if(i % 2 != 0){
        for(int j = 1; j <= n; j++){
            a[i][j] = x;
            x++;
        }
    }else{
        for(int j = n; j >= 1; j--){
            a[i][j] = x;
            x++;
        }
    }
}
"
nLq0336w,SELECTION SORT,LeonardoSportiello,C,Saturday 18th of November 2023 08:19:09 AM CDT,"#include <stdio.h>

// Funzione per scambiare due elementi
void scambia(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

// Funzione di ordinamento con l'algoritmo di selezione
void selezioneSort(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        int minIndex = i;
        // Trova l'indice del minimo elemento nel resto dell'array
        for (int j = i + 1; j < n; j++) {
            if (arr[j] < arr[minIndex]) {
                minIndex = j;
            }
        }
        // Scambia l'elemento minimo con l'elemento corrente
        scambia(&arr[i], &arr[minIndex]);
    }
}

int main() {
    int arr[] = {64, 25, 12, 22, 11};
    int n = sizeof(arr) / sizeof(arr[0]);

    // Chiama la funzione di ordinamento
    selezioneSort(arr, n);

    // Stampa l'array ordinato
    printf(""Array ordinato: "");
    for (int i = 0; i < n; i++) {
        printf(""%d "", arr[i]);
    }

    return 0;
}"
39vFkzYN,09. Magic Sum,Spocoman,C++,Saturday 18th of November 2023 08:01:04 AM CDT,"#include <iostream>

using namespace std;

int main() {
    int length, magicSum;
    cin >> length;

    int* arr = new int[length];

    for (int i = 0; i < length; i++) {
        cin >> arr[i];
    }

    cin >> magicSum;

    for (int i = 0; i < length - 1; i++) {
        for (int j = i + 1; j < length; j++) {
            if (arr[i] + arr[j] == magicSum) {
                cout << arr[i] << ' ' << arr[j] << endl;
            }
        }
    }

    return 0;
}"
612QJUKV,СПРИНТ № 4 | Жизненный цикл объекта | Урок 3: Параметризованный конструктор 1/2,chevengur,C++,Saturday 18th of November 2023 07:56:15 AM CDT,"#include <string>

using namespace std;

enum class AnimalType {
    Cat,
    Dog,
    Mouse,
};

class Animal {
public:

    Animal() = default;

    Animal(AnimalType type, string name, string owner_name): type_(type), name_(name), owner_name_(owner_name){}

    AnimalType GetType() const {
        return type_;
    }

    const string& GetName() const {
        return name_;
    }

    const string& GetOwnerName() const {
        return owner_name_;
    }

private:
    AnimalType type_;
    string name_;
    string owner_name_;
};"
VX9JPUPr,08. Top Integers,Spocoman,C++,Saturday 18th of November 2023 07:52:55 AM CDT,"#include <iostream>

using namespace std;

int main() {
    int length;
    cin >> length;

    int* arr = new int[length];

    for (int i = 0; i < length; i++) {
        cin >> arr[i];
    }

    for (int i = 0; i < length - 1; i++) {
        bool isBigger = arr[i] > arr[i + 1];
        if (isBigger) {
            cout << arr[i] << ' ';
        }
    }

    cout << arr[length - 1] << endl;
    return 0;
}"
nKtacsJe,Shop2,SaNik74,C#,Saturday 18th of November 2023 07:23:33 AM CDT,"namespace BuyerAndSeller;

class Program
{
    static void Main(string[] args)
    {
        bool isActive = true;
        ConsoleKeyInfo key;
        Buyer buyer = new Buyer();
        Seller seller = new Seller();

        while (isActive)
        {
            Console.Clear();
            buyer.ShowMoney();
            ShowMenu();
            key = Console.ReadKey(true);

            switch (key.Key)
            {
                case ConsoleKey.D1:
                    seller.ShowProducts();
                    break;
                case ConsoleKey.D2:
                    seller.Sell(buyer);
                    break;
                case ConsoleKey.D3:
                    buyer.ShowBag();
                    break;
                case ConsoleKey.D4:
                    isActive = false;
                    Console.WriteLine(""\nВыход из магазина.\n"");
                    break;
                default:
                    Console.WriteLine(""Такой команды нет.\n"");
                    break;
            }

            Console.ReadKey(true);
        }
    }

    static void ShowMenu()
    {
        Console.WriteLine(""Магазин\n"");
        Console.WriteLine(""1 - Показать весь ассортимент товаров"");
        Console.WriteLine(""2 - Купить товар"");
        Console.WriteLine(""3 - Посмотреть список купленных товаров"");
        Console.WriteLine(""4 - Выход\n"");
    }
}

class Product
{
    public Product(string name, int price)
    {
        Name = name;
        Price = price;
    }

    public string Name { get; private set; }
    public int Price { get; private set; }
}

class Cell
{
    public Product Product { get; private set; }
    public int Amount { get; private set; }

    public Cell(Product product, int amount)
    {
        Product = product;
        Amount = amount;
    }

    public void DecreaseAmount(int amount)
    {
        Amount -= amount;
    }
}

class Seller
{
    private List<Cell> _products = new List<Cell>();

    public Seller()
    {
        _products.Add(new Cell(new Product(""Мана"", 12), 67));
        _products.Add(new Cell(new Product(""Хилка"", 18), 89));
        _products.Add(new Cell(new Product(""Берсерк"", 60), 5));
        _products.Add(new Cell(new Product(""Меч"", 1000), 2));
    }

    public void ShowProducts()
    {
        foreach (var item in _products)
        {
            Console.WriteLine($""{item.Product.Name} - {item.Amount}шт.\t{item.Product.Price}"");
        }
    }

    public void Sell(Buyer buyer)
    {
        string productName;
        int amount;

        ShowProducts();
        Console.Write(""Введите название товара, который хотите приобрести: "");
        productName = Console.ReadLine();

        if (FindItem(productName, out Cell product))
        {
            Console.Write(""Введите желаемое количество товара: "");
            amount = ReadInt();

            if (amount > product.Amount)
            {
                Console.WriteLine(""В магазине недостаточно данного товара."");
                Console.WriteLine(""Вы можете ввести другое количество или выбрать другой товар."");
            }
            else
            {
                if (buyer.Buy(product.Product, amount) == true)
                {
                    product.DecreaseAmount(amount);
                }
            }
        }
    }

    private int ReadInt()
    {
        int result;

        while (int.TryParse(Console.ReadLine(), out result) == false)
        {
            Console.WriteLine(""Необходимо ввести целое число.\n"");
            Console.Write(""Введи целое число: "");
        }

        return result;
    }

    private bool FindItem(string title, out Cell findItem)
    {
        findItem = null;

        foreach (var item in _products)
        {
            if (item.Product.Name.ToLower() == title.ToLower())
            {
                findItem = item;
                return true;
            }
        }

        Console.WriteLine(""Такого товара нет. Повторите поиск."");
        return false;
    }
}

class Buyer
{
    private Dictionary<string, int> _bag = new Dictionary<string, int>();
    private int _money = 4000;

    public bool Buy(Product product, int amount)
    {
        int moneyNeedForBuy = product.Price * amount;

        if (_money == 0)
        {
            Console.WriteLine(""У вас закончились деньги"");
            return false;
        }
        else if (moneyNeedForBuy > _money)
        {
            Console.WriteLine(""Недостаточно денег для покупки."");
            return false;
        }
        else
        {
            _money -= moneyNeedForBuy;
            AddToBag(product, amount);
            Console.WriteLine(""Товар добавлен в сумку."");
            return true;
        }
    }

    public void AddToBag(Product product, int amount)
    {
        if (_bag.ContainsKey(product.Name) == false || _bag.Count == 0)
        {
            _bag.Add(product.Name, amount);
        }
        else
        {
            foreach (var item in _bag)
            {
                if (item.Key == product.Name)
                {
                    _bag[product.Name] += amount;
                }
            }
        }
    }

    public void ShowBag()
    {
        foreach (var item in _bag)
        {
            Console.WriteLine($""{item.Key}  -  {item.Value} шт."");
        }
    }

    public void ShowMoney()
    {
        Console.SetCursorPosition(0, 30);
        Console.WriteLine($""У вас есть - {_money} монет."");
        Console.SetCursorPosition(0, 0);
    }
}"
LvjziYcL,KT_1,Savenok,C,Saturday 18th of November 2023 07:12:39 AM CDT,"#include <stdio.h>
#include <string.h>
#include <stdbool.h>

typedef enum 
{
    ctUnknown,
    ctValid,
    ctInvalid
} CharType;

typedef enum 
{
    ErrorState,
    ValidState,
    WaitDrive,
    ReadBlock
} State;

const State transitions[4][3] = 
{
    {ErrorState, ErrorState, ErrorState}, 
    {ValidState, ErrorState, ErrorState}, 
    {ErrorState, ReadBlock, ErrorState}, 
    {ErrorState, ReadBlock, ErrorState}  
};

#define BEGINNING_OF_SYMBOLS_IN_ASCII 32
#define ENDING_OF_SYMBOLS_IN_ASCII 126

const int isFinalState[4] = { 0, 1, 0, 0 };

CharType getCharType(char c) 
{
    if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z')) 
    {
        return ctValid;
    }
    else if (c == ':') 
    {
        return ctValid;
    }
    else if (c == '\\') 
    {
        return ctValid;
    }
    else if ((c >= BEGINNING_OF_SYMBOLS_IN_ASCII && c <= ENDING_OF_SYMBOLS_IN_ASCII) && c != '*' && c != '|' && c != '""' && c != '<' && c != '>' && c != '?' && c != '/')
    {
        return ctValid;
    }
    else
    {
        return ctInvalid;
    }
}

int checkPath(const char* path) 
{
    State state = WaitDrive;
    int i = 0;
    while (path[i] != '\0') 
    {
        CharType charType = getCharType(path[i]);
        state = transitions[state][charType];
        if (state == ErrorState) 
        {
            return 0; 
        }
        i++;
    }
    return 1;
}

int main() {
    const char* path1 = ""C:/ProgramFiles\expression.txt"";
    const char* path2 = ""D:\Temp"";
    const char* path3 = ""E:\Data\helpme|name.txt"";
    const char* path4 = ""C:\invalid*Path"";
    bool isPathCorrect = false;
    isPathCorrect = checkPath(path1);
    printf(""%s: %s\n"", path1, checkPath(path1) ? ""Path is correct"" : ""Path is incorrect"");
    isPathCorrect = checkPath(path2);
    printf(""%s: %s\n"", path2, checkPath(path2) ? ""Path is correct"" : ""Path is incorrect"");
    isPathCorrect = checkPath(path3);
    printf(""%s: %s\n"", path3, checkPath(path3) ? ""Path is correct"" : ""Path is incorrect"");
    isPathCorrect = checkPath(path4);
    printf(""%s: %s\n"", path4, checkPath(path4) ? ""Path is correct"" : ""Path is incorrect"");
    return 0;
}"
hJqf9k3X,Untitled,s-sols,CSS,Saturday 18th of November 2023 07:03:53 AM CDT,".single-product .woocommerce-product-gallery__wrapper>div:nth-child(n+2) {
	width: 20%!important;
    margin-top: 25px;
    margin-right: 6.6666%;
    margin-bottom: 6.6666%;
}

.woocommerce-product-gallery .flex-viewport:not([style*=""height:""]) .woocommerce-product-gallery__wrapper {
	width: 100% !important;
}"
bt162PiP,07. Array Rotation,Spocoman,C++,Saturday 18th of November 2023 06:48:49 AM CDT,"#include <iostream>

using namespace std;

int main() {
    int length, step;
    cin >> length;

    int* arr = new int[length];

    for (int i = 0; i < length; i++) {
        cin >> arr[i];
    }

    cin >> step;

    for (int i = 0; i < length; i++) {
        cout << arr[((step + i) % length)] << ' ';
    }

    cout << endl;
    return 0;
}"
NrBW9dN6,Untitled,Sherbak_Irina,Python,Saturday 18th of November 2023 06:29:01 AM CDT,"from tkinter import *
import requests
from translate import Translator
import json


def on_click_button():  # функция будет срабатывать при нажатии на кнопку
    product = entry.get()

    translator_FROM_RUSSIAN = Translator(to_lang='en', from_lang='ru')  # ИЗ РУССКОГО
    translator_TO_RUSSIAN = Translator(to_lang='ru', from_lang='en')  # НА РУССКОГО
    result = translator_FROM_RUSSIAN.translate(product)
    print(result)
    try:
        api_url = 'https://api.calorieninjas.com/v1/nutrition?query='
        query = result
        response = requests.get(api_url + query, headers={'X-Api-Key': 'y3Nd+KRetll9P3m/whRaWQ==YN4YgWAPv7YmS0sD'})
        if response.status_code == requests.codes.ok:
            s = response.text
            print(s)
            s = json.loads(s)
            fat_total_g = s[""items""][0][""fat_total_g""]
            calories = s[""items""][0][""calories""]
            protein = s[""items""][0][""protein_g""]
            carbohydrates = s[""items""][0][""carbohydrates_total_g""]
            label_answer[""text""] = f""{protein} белка, {carbohydrates} углеводов, {calories} калории, {fat_total_g} жиры""
        else:
            print(""Попробуйте переформулировать"")
            print(""Error:"", response.status_code, response.text)
    except:
        label_answer[""text""] = ""Попробуйте переформулировать""


root = Tk()

root.geometry(""500x110"")
root.title(""ИркаПрограмм"")

label_helper = Label(text=""Введите название продукта: "")  # добавляем надпись label
label_helper.pack()  # размещаем элемент, если не расположить элемент, его не будет

entry = Entry()  # добавляем поле ввода Entry
entry.pack()  # размещаем элемент, если не расположить элемент, его не будет

label_answer = Label()  # добавляем надпись label
label_answer.pack()  # размещаем элемент, если не расположить элемент, его не будет

button = Button(text=""Нажми на меня"", command=on_click_button)  # добавляем кнопку Button
button.pack()  # размещаем элемент, если не расположить элемент, его не будет

root.mainloop()"
g9w8pzXV,01. Zig-Zag Arrays,Spocoman,C++,Saturday 18th of November 2023 06:19:53 AM CDT,"#include <iostream>

using namespace std;

int main() {
    const int MAX_SIZE = 99;
    int numbers1[MAX_SIZE]{};
    int numbers2[MAX_SIZE]{};

    int arrSize, n1, n2;
    cin >> arrSize;

    for (int i = 0; i < arrSize; i++) {
        if (i % 2 == 0) {
            cin >> numbers1[i];
            cin >> numbers2[i];
        }
        else {
            cin >> numbers2[i];
            cin >> numbers1[i];
        }
    }

    for (int i = 0; i < arrSize; i++) {
        cout << numbers1[i] << ' ';
    }
    cout << endl;

    for (int i = 0; i < arrSize; i++) {
        cout << numbers2[i] << ' ';
    }
    cout << endl;
    return 0;
}"
JG4pPvGV,Multiply callbacks,alkorlos,JavaScript,Saturday 18th of November 2023 06:06:43 AM CDT,"function performMultipleOperations(callback) {
  setTimeout(function() {
    console.log(""Операция 1 завершена"");
    callback(null, ""Результат операции 1"");

    setTimeout(function() {
      console.log(""Операция 2 завершена"");
      callback(null, ""Результат операции 2"");

    }, 1000);

  }, 1000);
}"
fBxgJqyf,MP06_UF2_EJ7,Mike7GB,Java,Saturday 18th of November 2023 06:06:39 AM CDT,"// EJERCICIO 7 - UF3

package mp06_uf3_ej7;

import java.io.File;
import javax.xml.parsers.*;
import org.w3c.dom.*;

/**
 *
 * @author luism
 */
public class MP06_UF3_EJ7 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        
        // Crear la instancia para leer el documento xml
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        
        try{
            // Crear documento vacio con la version de xml
            DocumentBuilder builder = factory.newDocumentBuilder();
            // crear document en base al archivo que se va a leer
            Document document = builder.parse(new File(""Personas.xml""));
            document.getDocumentElement().normalize();
            
            // Imprimir en pantalla
            System.out.printf(""Elemento raiz: %s %n"",
                    document.getDocumentElement().getNodeName());
            // Crear lista con todos los nodos persona
            NodeList personas = document.getElementsByTagName(""persona"");
            System.out.printf(""Nodos persona a recorrer: %d %n"",
                    personas.getLength());
            // Recorrer la lista
            for (int i=0; i < personas.getLength(); i++){
                Node persona = personas.item(i); // Obtener nodo persona
                if (persona.getNodeType()==Node.ELEMENT_NODE){ // tipo de nodo
                    // Obtener los elementos del nodo
                    Element elemento = (Element) persona;
                    System.out.printf(""ID = %s %n"",
                            elemento.getElementsByTagName(""id"").item(0).getTextContent());
                    System.out.printf("" * DNI = %s %n"",
                            elemento.getElementsByTagName(""dni"").item(0).getTextContent());
                    System.out.printf("" * Nombre = %s %n"",
                            elemento.getElementsByTagName(""nombre"").item(0).getTextContent());
                    System.out.printf("" * Apellidos = %s %n"",
                            elemento.getElementsByTagName(""apellidos"").item(0).getTextContent());
                    System.out.printf("" * Edad = %s %n"",
                            elemento.getElementsByTagName(""edad"").item(0).getTextContent());
                }
            }                        
        } catch (Exception e){ // Capturar error
            e.printStackTrace(); // Imprimir el error
        }     
    }   
}"
DDAz1vps,Untitled,Josif_tepe,C++,Saturday 18th of November 2023 06:05:48 AM CDT,"#include <iostream>


using namespace std;


class Ucenik{
private:
    string ime;
    double prosek;
    int skolska_godina;
public:
    Ucenik(){
    }
    Ucenik(string _ime, double _prosek, int _skolska_godina){
        ime = _ime;
        prosek = _prosek;
        skolska_godina = _skolska_godina;
    }
    Ucenik & operator ++ (int i){
        skolska_godina++;
        return *this;
    }
    friend ostream & operator << (ostream & stream, Ucenik u);
    bool operator > (Ucenik tmp) {
        if(prosek > tmp.prosek){
            return true;
        }
        return false;
    }
    double get_prosek() {
        return prosek;
    }
};
ostream & operator << (ostream & stream, Ucenik u) {
    stream << u.ime << "" "" << u.prosek << "" "" << u.skolska_godina << endl;
    return stream;
}
class Paralelka {
private:
    int n;
    Ucenik * niza;
public:
    Paralelka () {}
    Paralelka(int _n) {
        n = _n;
        niza = new Ucenik[n];
    }
    Paralelka & operator += (Ucenik u) {
        Ucenik tmp[n + 1];
        for(int i = 0; i < n; i++) {
            tmp[i] = niza[i];
        }
        tmp[n] = u;
        n++;
        niza = new Ucenik[n];
        
        for(int i = 0; i < n; i++) {
            niza[i] = tmp[i];
        }
        return *this;
    }
    Paralelka & operator ++ (int i) {
        for(int i = 0; i < n; i++) {
            niza[i]++;
        }
        return *this;
    }
    void nagrada() {
        for(int i = 0; i < n; i++) {
            if(niza[i].get_prosek() == 10.0) {
                cout << niza[i];
            }
        }
    }
    void najvisokProsek() {
        double najgolem_prosek = 0.0;
        int idx = 0;
        for(int i = 0; i < n; i++) {
            if(niza[i].get_prosek() > najgolem_prosek) {
                najgolem_prosek = niza[i].get_prosek();
                idx = i;
            }
        }
        cout << niza[idx];
    }
    friend ostream & operator << (ostream & stream, Paralelka tmp);
};
ostream & operator << (ostream & stream, Paralelka tmp) {
    for(int i = 0; i < tmp.n; i++) {
        stream << tmp.niza[i];
    }
    return stream;
}
    
int main()
{
    Ucenik u1(""Martina Martinovska"", 9.5, 3);
    Ucenik u2(""Darko Darkoski"", 7.3, 2);
    Ucenik u3(""Angela Angelovska"", 10, 3);
    Paralelka p(0);
    p += u1;
    p += u2;
    p += u3;
    cout << p;
    cout << ""Nagradeni:"" << endl;
    p.nagrada();
    cout << endl;
    p.najvisokProsek();
    cout << endl;
    u2++;
    cout << p;
    cout << endl;
    p++;
    cout << p;
    return 0;
}
"
qA9LMT8h,Untitled,Rabbi946,C++,Saturday 18th of November 2023 06:04:28 AM CDT,"#include<bits/stdc++.h>
#define int long long
using namespace std;
int dp[2002][2][2002];
int m,d;
int md = 1e9 + 7;
bool is_even(int n){
    int cnt = 0;
    while(n){
        n/=10;
        cnt++;
    }
    return cnt%2 == 1;
}
int fun(string s,int pos=0,int tight=1,int modval=0,int num=0){
    if(pos==s.size()) return (modval==0);
    //if(dp[pos][tight][modval] != -1) return dp[pos][tight][modval];
    if(is_even(num)){
        int ans = 0;
        if(tight){
          if(s[pos]-'0' < d) ans = 0;
          else if(s[pos]-'0' == d) ans = fun(s,pos+1,1,(modval*10+d)%m,num*10+d);
          else ans = fun(s,pos+1,0,(modval*10+d)%m,num*10+d);
        }
        else ans = fun(s,pos+1,0,(modval*10+d)%m,num*10+d);
        ans %= md;
        return dp[pos][tight][modval] = ans;
    }
    int ans = 0;
    if(tight){
        for(int i=0;i<=s[pos]-'0';i++){
            if(i!=d)
            ans += fun(s,pos+1,(i==s[pos]-'0'),(modval*10+i)%m,num*10+i);
            ans %= md;
        }
    }
    else{
        for(int i=0;i<10;i++){
            if(i!=d)
            ans += fun(s,pos+1,0,(modval*10+i)%m,num*10+i);
            ans %= md;
        }
    }
    return dp[pos][tight][modval] = ans ;
}

bool is_valid(string s){
    int sum = 0;
    for(int i=0;i<s.size();i++){
        if(i%2==1 and s[i]-'0' != d) return false;
        sum += (s[i]-'0');
    }
    return sum%m==0;
}

void solve(){
    
    cin >> m >> d;
    string a,b;
    cin >> a >> b;
    memset(dp,-1,sizeof dp);
    int a1 = fun(a);
    memset(dp,-1,sizeof dp);
    int a2 = fun(b);
    int ans = (a2-a1+md)%md;
    if(is_valid(a)) ans ++;
	cout << ans%md;
}

signed main(){
int T=1;
while(T--){
    solve();
}

return 0;}"
shAhibsW,bankServer,Rayanis55,Lua,Saturday 18th of November 2023 06:00:23 AM CDT,"-- Adresse du serveur
local serverAddress = ""1""  -- Remplacez ceci par l'adresse réelle de votre serveur

-- Liste des fichiers dans le dossier utilisateur
local function getFileList()
    local fileList = {}
    for _, file in ipairs(fs.list(""user"")) do
        table.insert(fileList, file)
    end
    return fileList
end

-- Fonction principale du serveur
local function startServer()
    rednet.open(""right"")  -- Utilisez le côté approprié pour la connexion modem

    print(""Serveur en attente de connexions..."")

    while true do
        local _, message, senderAddress = rednet.receive()

        if senderAddress == serverAddress then
            if message == ""connect"" then
                rednet.send(senderAddress, ""connected"")
            elseif message == ""get"" then
                local fileList = getFileList()
                rednet.send(senderAddress, fileList)
            end
        end
    end
end

-- Programme principal
startServer()
"
zn88bRCA,data756,TestGuy1,JSON,Saturday 18th of November 2023 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '3512b87c238b2bb8892399734a1b46865f7064705b1ba937dfc9b4b455304d23b013364e8d01d3456427b7c90e2e058830da66ab80165330100616b0c2a92189a73ecc7d594db94aa4df61c72d7c6e9b5f3b693217d792eb3964ecf02201c479f40f42c7cbe8377ba833eed47e7571cb547c825ee49b4447a6a940b9dd4f46eb',
  otherdata: [
    '8ff64600fdc56b485ac69c51b9823fa7',
    '60ddfe3d53d151c452de836221e72f26',
    'fae1a733abd35b4a79ee5e4e421c0ae1',
    '12a3d2ff67faee7ce0fc00715f54b9ee',
    'e970bacc416453727239dc1343f7377c',
    '2aff6fe53cf70deed75769286b759ab5',
    '0ae4e3daeb55409f5011ad0d88bb8f86',
    '792eeed519a43d989e25bb5733e649a1'
  ]
}"
qcu2fzKn,bankClient,Rayanis55,Lua,Saturday 18th of November 2023 05:59:40 AM CDT,"-- Adresse du serveur
local serverAddress = ""1""  -- Remplacez ceci par l'adresse réelle de votre serveur

-- Fonction pour se connecter au serveur
local function connectToServer()
    rednet.open(""left"")  -- Utilisez le côté approprié pour la connexion modem

    print(""Tentative de connexion au serveur..."")
    rednet.send(serverAddress, ""connect"")
    local _, serverResponse = rednet.receive(5)  -- Attendez la réponse du serveur pendant 5 secondes

    if serverResponse == ""connected"" then
        print(""Connecté au serveur."")
        return true
    else
        print(""La connexion au serveur a échoué."")
        return false
    end
end

-- Fonction pour demander la liste des fichiers au serveur
local function requestFileList()
    rednet.send(serverAddress, ""get"")
    local _, fileList = rednet.receive(5)  -- Attendez la liste des fichiers pendant 5 secondes

    if fileList then
        print(""Liste des fichiers:"")
        for _, fileName in ipairs(fileList) do
            print(""- "" .. fileName)
        end
    else
        print(""Échec de la récupération de la liste des fichiers."")
    end
end

-- Programme principal
if connectToServer() then
    requestFileList()
    rednet.close(""left"")  -- Fermez la connexion modem après utilisation
end
"
VXDHnePR,MP06_UF3_EJ6,Mike7GB,Java,Saturday 18th of November 2023 05:58:53 AM CDT,"// EJERCICIO 6 - UF3

package mp06_uf3_ej6;

import org.w3c.dom.*;
import javax.xml.parsers.*;
import javax.xml.transform.*;
import javax.xml.transform.dom.*;
import javax.xml.transform.stream.*;
import java.io.*;


/**
 *
 * @author luism
 */
public class MP06_UF3_EJ6 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws ParserConfigurationException, TransformerException, IOException {
        // TODO code application logic here
        
        // Crear la instancia para crear el documento xml
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        
        // Crear documento vacio con la version de xml
        DocumentBuilder builder = factory.newDocumentBuilder();
        DOMImplementation implementation = builder.getDOMImplementation();
        Document document = implementation.createDocument(null, ""personas"", null); // Nombre raiz
        document.setXmlVersion(""1.0"");
        
        // *** PERSONA 1 ***
        // Crear nodo persona 1
        Element raiz = document.createElement(""persona""); // Nodo empleado
        // Asignar el nodo empleado bajo el nodo raiz
        document.getDocumentElement().appendChild(raiz);        
        
        // Añadir id
        CrearElemento(""id"",""1"",raiz,document);
        // Añadir DNI
        CrearElemento(""dni"",""13579024A"",raiz,document);
        // Añadir nombre
        CrearElemento(""nombre"",""Manuel"",raiz,document);
        // Añadir apallido
        CrearElemento(""apellidos"",""García"",raiz,document);
        // Añadir edad
        CrearElemento(""edad"",""32"",raiz,document);
        
        // *** PERSONA 2 ***
        // Crear nodo persona 2
        Element raiz2 = document.createElement(""persona""); // Nodo empleado
        // Asignar el nodo empleado bajo el nodo raiz
        document.getDocumentElement().appendChild(raiz2);
        
        // Añadir id
        CrearElemento(""id"",""2"",raiz2,document);        
        // Añadir DNI
        CrearElemento(""dni"",""24680135B"",raiz2,document);
        // Añadir nombre
        CrearElemento(""nombre"",""Maria"",raiz2,document);
        // Añadir apallido
        CrearElemento(""apellidos"",""López"",raiz2,document);
        // Añadir edad
        CrearElemento(""edad"",""28"",raiz2,document);  
        
        // *** PERSONA 3 ***        
        // Crear nodo persona 3
        Element raiz3 = document.createElement(""persona""); // Nodo empleado
        // Asignar el nodo empleado bajo el nodo raiz
        document.getDocumentElement().appendChild(raiz3);        
        
        // Añadir id
        CrearElemento(""id"",""3"",raiz3,document);
        // Añadir DNI
        CrearElemento(""dni"",""35791357C"",raiz3,document);
        // Añadir nombre
        CrearElemento(""nombre"",""José"",raiz3,document);
        // Añadir apallido
        CrearElemento(""apellidos"",""Díaz"",raiz3,document);
        // Añadir edad
        CrearElemento(""edad"",""30"",raiz3,document);  
        
        // crear fuente del documento xml
        Source source = new DOMSource(document);
        Result result = new StreamResult(new java.io.File(""Personas.xml""));
        Transformer transformer = TransformerFactory.newInstance().newTransformer();
        transformer.transform(source, result);
        
    }
    
    // Método insertor de los datos de la persona
    static void CrearElemento(String datoPersona, String valor, Element raiz, Document document){
        Element elem = document.createElement(datoPersona);
        Text text = document.createTextNode(valor); // Asginar valor
        raiz.appendChild(elem); // Añadir el elemento hijo a la raíz
        elem.appendChild(text); // Añadir el valor
    }
    
}"
0e62E3h1,Outsource Website Development from Samyak Online,samyakonline01,C#,Saturday 18th of November 2023 05:56:16 AM CDT,"Samyak Online in New Delhi is the most competent and affordable SEO Company in India. The company has special status for designing the customized SEO packages to help the businesses improve the traffic, search results ranking and brand image.

https://www.samyakonline.net/"
ed5kRfZU,邀您一起看：云口令,xiaomianao666,JavaScript,Saturday 18th of November 2023 05:38:35 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥云口令@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5LqR5Y+j5LukXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcIuS6keWPo+S7pO+8jDEx5pyI5rWL6K+V5ZCI6ZuG56ys5LiJ6YOo5YiG77yM5aSN5Yi25pW05p2h5Y+j5Luk5omT5byA6L2v5Lu25Y2z5Y+v5a+85YWlIGh0dHBzOi8veGlhb21pYW5hby5sYW56b3VtLmNvbS9peXVtSzFlcXcxN2NcXFwiLFxcbmRlc2M6XFxcIjEwMCUmJmZsb2F0XFxcIixcXG5leHRyYTp7Y2FuQmFjazogdHJ1ZX1cXG59XSk7XCIsXCJncm91cFwiOlwiXCJ9IiwidGl0bGUiOiLkupHlj6Pku6QifQ==
yNExymbu,Untitled,Josif_tepe,C++,Saturday 18th of November 2023 05:37:19 AM CDT,"#include <iostream>


using namespace std;
class Point {
private:
    int x, y;
public:
    Point () {}
    Point(int _x, int _y) {
        x = _x;
        y = _y;
    }
    
    Point & operator ++ (int i) {
        x++;
        return *this;
    }
    int get_x() {
        return x;
    }
};

int main()
{
    Point p(1, 2);
    p++;
    cout << p.get_x() << endl;
    return 0;
}
"
