id,title,username,language,date,content
3v9wX26e,BTC Wallet Credentials have been reset,castlclass_20,GetText,Tuesday 31st of October 2023 07:01:09 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
Zwickauea:xwwFrE on 212.224.93.130
You can connect via SSH .
Regards"
y07RX5qm,data738,TestGuy1,JSON,Tuesday 31st of October 2023 07:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'a2106725b8c60b52beb8f036821915fa93e1e29e245b7d726f55d9e981262b86a03797d83eea2ecd3a39ecd5ee10c6caff916b0f24c90e01495d2febbf55185e143032d9303203f0b4c5e78f89bcb9aefe21c257d49e0295c49c0bed11fa1e9b3ff03a519b69171a058f529785fe37e9b925535473abd40018fd93addd3b7cba',
  otherdata: [
    '53c2ef83b9812c94aba96c958de1636e',
    '9fdbefc7efd2f0ad9be7a1b20d73f5d9',
    'abf1028eeff1daa8650d77c61a027c61',
    'a1e0f2099035e20e953f4d26e7ccf9a3',
    '857687d97641f6a05fdd52d588125887',
    '4e89b154ff210c668af78f04ea12b299',
    'b488161fcdcc52cc6a7282d5ed7aaa9f',
    'be7f2861ce81dd69df85a9dbb927a97b'
  ]
}"
jQjtdTxA,ARK Survival Ascended dedicated server,x4xpr0j3ct,C,Tuesday 31st of October 2023 06:25:45 AM CDT,"ARK Survival Ascended

steamcmd +login anonymous +force_install_dir C:\serveur\steamapps\common\ARK Survival Ascended Dedicated Server +app_update 2430930 +quit

start ArkAscendedServer.exe TheIsland_WP?listen?Port=7777?QueryPort=27016?ServerPassword=?ServerAdminPassword=XXXX -game -server -NoTransferFromFIltering -NoBattlEye

Game.ini = 

[/script/shootergame.shootergamemode]
ConfigOverrideItemMaxQuantity=(ItemClassString=""PrimalItemConsumable_RawMeat_C"",Quantity=(MaxItemQuantity=100,bIgnoreMultiplier=true))
ConfigOverrideItemMaxQuantity=(ItemClassString=""PrimalItemConsumable_RawMeat_Fish_C"",Quantity=(MaxItemQuantity=100,bIgnoreMultiplier=true))
ConfigOverrideItemMaxQuantity=(ItemClassString=""PrimalItemConsumable_RawMutton_C"",Quantity=(MaxItemQuantity=100,bIgnoreMultiplier=true))
ConfigOverrideItemMaxQuantity=(ItemClassString=""PrimalItemConsumable_RawPrimeMeat_C"",Quantity=(MaxItemQuantity=100,bIgnoreMultiplier=true))
ConfigOverrideItemMaxQuantity=(ItemClassString=""PrimalItemConsumable_RawPrimeMeat_Fish_C"",Quantity=(MaxItemQuantity=100,bIgnoreMultiplier=true))
BabyMatureSpeedMultiplier=3
EggHatchSpeedMultiplier=3
MatingIntervalMultiplier=3
MatingSpeedMultiplier=3
ResourceNoReplenishRadiusPlayers=0.2
ResourceNoReplenishRadiusStructures=0.2
bAllowFlyerSpeedLeveling=True
bAutoUnlockAllEngrams=True
bDisableStructurePlacementCollision=true
CropDecaySpeedMultiplier=1
FastDecayInterval=43200
GlobalCorpseDecompositionTimeMultiplier=1
GlobalItemDecompositionTimeMultiplier=1
GlobalSpoilingTimeMultiplier=1
PerLevelStatsMultiplier_DinoTamed[0]=3
PerLevelStatsMultiplier_DinoTamed[1]=3
PerLevelStatsMultiplier_DinoTamed[4]=3
PerLevelStatsMultiplier_DinoTamed[7]=3
PerLevelStatsMultiplier_DinoTamed[8]=3
PerLevelStatsMultiplier_Player[0]=3
PerLevelStatsMultiplier_Player[1]=3
PerLevelStatsMultiplier_Player[3]=3
PerLevelStatsMultiplier_Player[4]=3
PerLevelStatsMultiplier_Player[5]=3
PerLevelStatsMultiplier_Player[7]=3
PerLevelStatsMultiplier_Player[8]=3
PerLevelStatsMultiplier_Player[10]=3



GameUserSettings.ini


[ServerSettings]
HarvestAmountMultiplier=5
HarvestHealthMultiplier=5
PlayerCharacterFoodDrainMultiplier=0.70
AllowFlyerCarryPvE=true
OverrideOfficialDifficulty=6.6667
ServerPVE=True
XPMultiplier=5
TamingSpeedMultiplier=10
ShowMapPlayerLocation=True
AllowThirdPersonPlayer=True
AllowFlyingStaminaRecovery=True
ItemStackSizeMultiplier=3
ServerCrosshair=True
RCONPort=27020
TheMaxStructuresInRange=10500
StartTimeHour=-1
OxygenSwimSpeedStatMultiplier=1
StructurePreventResourceRadiusMultiplier=1
TribeNameChangeCooldown=15
PlatformSaddleBuildAreaBoundsMultiplier=1
AlwaysAllowStructurePickup=True
StructurePickupTimeAfterPlacement=30
StructurePickupHoldDuration=0.5
AllowHideDamageSourceFromLogs=True
RaidDinoCharacterFoodDrainMultiplier=1
PvEDinoDecayPeriodMultiplier=1
KickIdlePlayersPeriod=3600
PerPlatformMaxStructuresMultiplier=1
AutoSavePeriodMinutes=15
MaxTamedDinos=5000
RCONServerGameLogBuffer=600
ImplantSuicideCD=28800
AllowHitMarkers=True
ServerPassword=
ServerAdminPassword=XXXX
ShowFloatingDamageText=True

[ScalabilityGroups]
sg.ResolutionQuality=75
sg.ViewDistanceQuality=1
sg.AntiAliasingQuality=1
sg.ShadowQuality=2
sg.GlobalIlluminationQuality=3
sg.ReflectionQuality=3
sg.PostProcessQuality=1
sg.TextureQuality=2
sg.EffectsQuality=1
sg.FoliageQuality=2
sg.ShadingQuality=3

[/Script/ShooterGame.ShooterGameUserSettings]
AdvancedGraphicsQuality=1
MasterAudioVolume=1.000000
MusicAudioVolume=0.800000
SFXAudioVolume=1.000000
VoiceAudioVolume=1.000000
SoundUIAudioVolume=1.000000
CharacterAudioVolume=1.000000
StructureTooltipMaxSpeedMultiply=0.000000
UIScaling=1.000000
UIQuickbarScaling=0.750000
CameraShakeScale=0.650000
bFirstPersonRiding=False
bThirdPersonPlayer=True
bShowStatusNotificationMessages=True
TrueSkyQuality=0.270000
FOVMultiplier=1.000000
GroundClutterDensity=1.000000
bFilmGrain=False
bMotionBlur=True
bUseGamepadSpeaker=True
bUseDFAO=False
bUseSSAO=True
bShowChatBox=True
bCameraViewBob=True
bInvertLookY=False
bFloatingNames=True
bChatBubbles=True
bHideServerInfo=False
bJoinNotifications=False
bDisableNameYourTamePopup=False
MinimalFloatingNameSetting=False
bCraftablesShowAllItems=False
bLocalInventoryItemsShowAllItems=False
bLocalInventoryCraftingShowAllItems=True
bRemoteInventoryItemsShowAllItems=False
bRemoteInventoryCraftingShowAllItems=False
bRemoteInventoryShowEngrams=True
bEnableLowLightEnhancement=True
bEnableFluidInteraction=True
bDisableHLOD=False
LookLeftRightSensitivity=1.000000
LookUpDownSensitivity=1.000000
TPVCameraHorizontalOffsetFactor=0.000000
GraphicsQuality=1
ActiveLingeringWorldTiles=10
ClientNetQuality=3
TheGammaCorrection=0.500000
LastServerSearchType=0
LastServerSort=2
LastPVESearchType=-1
LastDLCTypeSearchType=-1
LastServerSortAsc=True
LastAutoFavorite=True
LastServerSearchHideFull=False
LastServerSearchProtected=False
LastPlatformSpecificServerSearch=False
HideItemTextOverlay=True
bForceShowItemNames=False
bDistanceFieldShadowing=True
bDisableShadows=False
LODScalar=1.000000
bToggleToTalk=False
HighQualityMaterials=True
HighQualitySurfaces=True
bTemperatureF=False
bDisableTorporEffect=False
bChatShowSteamName=False
bChatShowTribeName=True
bReverseTribeLogOrder=False
EmoteKeyBind1=0
EmoteKeyBind2=0
bNoBloodEffects=False
bLowQualityVFX=False
bSpectatorManualFloatingNames=False
bSuppressAdminIcon=False
bUseSimpleDistanceMovement=False
bHasSavedGame=True
bDisableMeleeCameraSwingAnims=False
bPreventInventoryOpeningSounds=False
bPreventBiomeWalls=False
bPreventHitMarkers=False
bPreventCrosshair=False
bPreventColorizedItemNames=False
bHighQualityLODs=False
bExtraLevelStreamingDistance=False
bEnableColorGrading=False
VSyncMode=1
DOFSettingInterpTime=0.000000
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastSessionCategoryJoined=-1
bDisableMenuTransitions=False
bEnableInventoryItemTooltips=True
bRemoteInventoryShowCraftables=False
bNoTooltipDelay=False
LocalItemSortType=0
LocalCraftingSortType=0
RemoteItemSortType=0
RemoteCraftingSortType=0
VersionMetaTag=1
ShowExplorerNoteSubtitles=False
DisableMenuMusic=False
DisableDefaultCharacterItems=False
DisableLoadScreenMusic=False
bRequestDefaultCharacterItemsOnce=False
bHasSeenGen2Intro=False
CinematicForNoteShouldReset=()
bHasSetupDifficultySP=False
bHasSetupVisualSettings=False
agreedToTerms=()
bHasRunAutoSettings=False
bHideFloatingPlayerNames=False
bHideGamepadItemSelectionModifier=False
bToggleExtendedHUDInfo=False
PlayActionWheelClickSound=True
PlayHUDRolloverSound=True
CompanionReactionVerbosity=3
EnableEnvironmentalReactions=True
EnableRespawnReactions=True
EnableDeathReactions=True
EnableSayHelloReactions=True
EnableEmoteReactions=True
EnableMovementSounds=True
DisableSubtitles=False
bEnableASACamera=True
ConsoleAccess=False
CompanionSubtitleVerbosityLevel=3
CompanionIsHiddenState=False
MaxAscensionLevel=0
bHostSessionHasBeenOpened=False
bForceTPVCameraOffset=False
bDisableTPVCameraInterpolation=False
bEnableHDROutput=False
HDRDisplayMinLuminance=-4.000000
HDRDisplayMidLuminance=20.000000
HDRDisplayMaxLuminance=1400.000000
FoliageInteractionDistance=1.000000
FoliageInteractionDistanceLimit=1.000000
FoliageInteractionQuantityLimit=1.000000
bFPVClimbingGear=False
bFPVGlidingGear=False
bHasInitializedScreenPercentage=False
CameraZoomPerDinoNameTag=()
CameraHeightPerDinoNameTag=()
PhotomodePresets_Camera=()
PhotomodePresets_Movement=()
PhotomodePresets_Splines=()
PhotomodePresets_PPs=()
PhotomodePresets_Targeting=()
PhotomodeLastUsedSettings=()
MaxLastDeathMark=5
bSaveLastDeathMark=True
bShowPingsOnMap=True
bShowDinosOnMap=True
bShowWaypointsOnMap=True
bShowPlayersOnMap=True
bShowBedsOnMap=True
AimAssistStrengthMultiplier=1.000000
bForceShowRadialWheelTexts=False
bHideStructurePlacementCrosshair=False
SavedMainMapZoom=1.000000
SavedOverlayMapZoom=1.000000
bMinimalUI=False
FloatingTooltipStructureMode=DEFAULT
FloatingTooltipDinoMode=DEFAULT
FloatingTooltipDroppedItemsMode=DEFAULT
FloatingTooltipPlayerMode=DEFAULT
TopNotificationMode=DEFAULT
ItemNotificationMode=MINIMAL
bMinimapOverlayUseLowOpacity=False
FilterTypeInventoryLocal=9
FilterTypeInventoryRemote=9
bUseGamepadAimAssist=RangeWeaponAlwaysOn
Gamma1=2.200000
Gamma2=3.000000
bDisableBloom=False
bDisableLightShafts=False
bUseLowQualityLevelStreaming=True
bUseDistanceFieldAmbientOcclusion=False
bPreventItemCraftingSounds=False
bHighQualityAnisotropicFiltering=False
AmbientSoundVolume=1.000000
bUseOldThirdPersonCameraTrace=False
bUseOldThirdPersonCameraOffset=False
bShowedGenesisDLCBackground=False
bShowedGenesis2DLCBackground=False
bHasStartedTheGameOnce=False
bViewedAnimatedSeriesTrailer=False
bViewedARK2Trailer=False
bShowRTSKeyBinds=True
bHasCompletedGen2=False
bEnableFootstepDecals=True
bEnableFootstepParticles=True
bShowInfoButtons=True
bDisablePaintings=False
StopExplorerNoteAudioOnClose=False
bVibration=True
bUIVibration=False
radialSelectionSpeed=0.650000
bDisableVirtualCursor=False
PreventDetailGraphics=False
GroundClutterRadius=0
HFSQuality=0
bMenuGyro=False
gyroSensitivity=0.500000
virtualCursorSensitivity=0.500000
BubbleParticlesMultiplier=1.000000
CrosshairScale=1.000000
CrosshairOpacity=1.000000
CrosshairColor=(R=1.000000,G=1.000000,B=1.000000,A=1.000000)
CrosshairColorPickerValue=(X=0.000000,Y=0.000000)
CrosshairColorOverEnemy=(R=0.000000,G=0.376471,B=1.000000,A=1.000000)
CrosshairColorPickerValueOverEnemy=(X=0.010000,Y=0.500000)
CrosshairColorOverAlly=(R=0.000000,G=1.000000,B=0.000000,A=1.000000)
CrosshairColorPickerValueOverAlly=(X=0.260000,Y=0.440000)
CrosshairColorHitmark=(R=1.000000,G=0.000000,B=0.000000,A=1.000000)
CrosshairColorPickerValueHitmark=(X=0.010000,Y=0.640000)
CurrentCameraModeIndex=2
CurrentDinoCameraModeIndex=1
bShowAmbientInsectsVFX=True
TextChatFilterType=0
VoiceChatFilterType=0
bAutomaticallyCreateWaypointOnTamingCreatures=True
bAutomaticallyCreatePOIOnDeath=True
bEnableDLSS=False
bEnableDLFG=False
bEnableReflex=True
SuperResolutionQualityLevel=0
bOCIOIsEnabled=True
OCIOAsset=/Game/ASA/Environment/Common/Color/OCIO_aces_v13_cg.OCIO_aces_v13_cg
OCIOColorSpace=0
OCIODisplayView=0
bUseVSync=False
bUseDynamicResolution=False
ResolutionSizeX=1280
ResolutionSizeY=720
LastUserConfirmedResolutionSizeX=1280
LastUserConfirmedResolutionSizeY=720
WindowPosX=-1
WindowPosY=-1
FullscreenMode=1
LastConfirmedFullscreenMode=1
PreferredFullscreenMode=1
Version=5
AudioQualityLevel=0
LastConfirmedAudioQualityLevel=0
FrameRateLimit=60.000000
DesiredScreenWidth=1280
DesiredScreenHeight=720
LastUserConfirmedDesiredScreenWidth=1280
LastUserConfirmedDesiredScreenHeight=720
LastRecommendedScreenWidth=-1.000000
LastRecommendedScreenHeight=-1.000000
LastCPUBenchmarkResult=-1.000000
LastGPUBenchmarkResult=-1.000000
LastGPUBenchmarkMultiplier=1.000000
bUseHDRDisplayOutput=False
HDRDisplayOutputNits=1000

[/Script/Engine.GameUserSettings]
bUseDesiredScreenHeight=False

[SessionSettings]
SessionName=TuTo De TheKeWaze

[MessageOfTheDay]
Duration=30
Message=<RichColor Color=""0,0.50,1,1"">Tuto</> de <RichColor Color=""1,0,0,1"">TheKeWaze</>\n<RichColor Color=""0,0.50,1,1"">TikTok</> : <RichColor Color=""1,0,0,1"">TheKeWaze</>\n<RichColor Color=""0,0.50,1,1"">YouTube </>: <RichColor Color=""1,0,0,1"">@x4xpr0j3ct6</>

[/Script/Engine.GameSession]
MaxPlayers=10"
cEZuBmXE,Untitled,kirkarr,Lua,Tuesday 31st of October 2023 06:24:09 AM CDT,"surface.CreateFont(""Title"", {
    font = ""Arial"",
    extended = true,
    size = 20
})
local selected = Color(255,255,255)
local Frame = vgui.Create(""DFrame"")
Frame:SetSize(400,300)     -- Good size for example
Frame:Center()
Frame:SetTitle("""")
Frame.title = ""ChatBubbles color""    
Frame:MakePopup()    
Frame.Paint = function(self, w, h)
    cur = CurTime()
    for i=1,100 do
        draw.Box(w/2+math.cos(i*55+cur*i/305)*w/2,h/2+math.sin(i*55+cur*i/105)*h/2,10,10,selected    )
    end
    draw.RoundedBox(2, 0, 0, w, h, Color(0, 0, 0, 200))
    draw.RoundedBox(2, 0, 0, w, 25, Color(0, 0, 0, 255))
    draw.SimpleText(self.title, ""Title"", w/2, 5, color_white, TEXT_ALIGN_CENTER, TEXT_ALIGN_TOP)
end
local Mixer = vgui.Create(""DColorMixer"", Frame)
Mixer:Dock(FILL)                    
Mixer:SetPalette(true)              
Mixer:SetAlphaBar(false)                     
Mixer:SetWangs(false)                 
Mixer:SetColor(selected)
Mixer.ValueChanged = function (col) 
    selected = Mixer:GetColor()    
    chatbubbles[""settings""][""colors""][""background""][""r""] = selected.r
    chatbubbles[""settings""][""colors""][""background""][""g""] = selected.g
    chatbubbles[""settings""][""colors""][""background""][""b""] = selected.b
end    "
rGjqbYKK,end,Afanas2707,C++,Tuesday 31st of October 2023 06:20:34 AM CDT,"#include <iostream>
#include <cmath>
#include <fstream>
#include <string>
#include <chrono>
#include <Windows.h>

using namespace std;

void insertion_sort(int data[], int n) {
    int *l = new int[n + 1];


    l[0] = n;
    l[n] = 0;

    for (int i = 1; i <= n - 1; i++) {
        l[i] = 0;
    }


    for (int j = n - 1; j >= 1; j--) {
        int q = 0;
        int p = l[0];
        int k = data[j - 1];
        while (p != 0) {
            if (k <= data[p - 1]) {
                break;
            } else {
                q = p;
                p = l[q];
            }
        }
        l[q] = j;
        l[j] = p;

    }


    int i = 0;
    int q = l[0];
    int p = l[q];
    while (q > 0) {
        l[q] = i++;
        q = p;
        p = l[q];
    }


    int *sortedArray = new int[n + 1];

    for (int j = 0; j < n; j++) {
        sortedArray[l[j + 1]] = data[j];
    }

    for (int j = 0; j < n; j++) {
        data[j] = sortedArray[j];
    }

    delete[] sortedArray;
    delete[] l;
}

int count_elements(string filename) {
    int counter = 0;
    ifstream file(filename);
    while (!file.eof()) {
        int r;
        file >> r;
        counter++;
    }
    return counter;
}

void readNumbers(int arr[], int N, string filename) {
    ifstream file(filename);
    for (int i = 0; i < N; i++) {
        file >> arr[i];
    }
}

void print(int arr[], int N, string filename) {
    ofstream file(filename);
    for (int i = 0; i < N; i++) {
        file << arr[i] << endl;
    }
}


bool checkArray(int arr[], int N) {
    for (int i = 0; i < N - 1; i++) {
        if (arr[i] > arr[i + 1]) return false;
    }
    return true;
}

void bubbleSort(int arr[], int n) {
    int i, j;
    for (i = 0; i < n - 1; i++)
        for (j = 0; j < n - i - 1; j++)
            if (arr[j] > arr[j + 1])
                swap(arr[j], arr[j + 1]);
}



int compare(const void *a, const void *b) {
    const int *x = (int *) a;
    const int *y = (int *) b;

    if (*x > *y)
        return 1;
    else if (*x < *y)
        return -1;

    return 0;
}

int main() {

    SetConsoleOutputCP(CP_UTF8);
    SetConsoleCP(1251);
    setlocale(LC_ALL, ""Russian"");

    const int SIZE = 5000;
    int R[SIZE];
    cout << ""Введите название файла:"" << endl;
    string filename;
    cin >> filename;
    int N = count_elements(filename) - 1;

    readNumbers(R, N, filename);

    auto start = chrono::steady_clock::now();
    insertion_sort(R, N);
    auto end = chrono::steady_clock::now();
    long duration = chrono::duration_cast<chrono::microseconds>(end - start).count();
    cout << endl;

    cout << ""Сортируется массив из "" << N << "" чисел"" << endl;
    print(R, N, ""d"" + to_string(N) + ""-s.txt"");
    if (checkArray(R, N)) {
        cout << ""Массив отсортирован"" << endl;
    } else {
        cout << ""Массив не отсортирован"" << endl;
    }
    cout << ""Время выполнения: "" << duration / 1000.0 << "" мсек"" << endl;
    cout << ""Сортированный массив записан в файл: "" << ""d"" + to_string(N) + ""-s.txt"" << endl;

    return 0;
}"
vVqypHYL,gfjhg,Afanas2707,C++,Tuesday 31st of October 2023 05:54:43 AM CDT,"int main(int argc, char* argv[])
{
//	setlocale(LC_ALL, ""ru"");

	// вывод командной строки на экран
	cout << ""Вывод аргументов командной строки:"" << endl;
	for(int i = 0; i < argc; ++i) {
		cout << '(' << i << "") "" << argv[i] << endl;
	}

	// проверить наличие аргументов в командной строке
	if(argc == 1) return 0;	// нет аргументов в командной строке

	const char* path = argv[1];	// имя входного файла

	// открыть входной файл
	ifstream fin(path);
	if( !fin ) {
		perror(""testStream"");
		cout << ""\t\"""" << path << '""' << endl;
		return 1;
	}

	int N = 0;
	int ar[5000];

	// считать данные из файла (не более 16 чисел)
	while(N < 5000 && fin >> ar[N]) ++N;

	fin.close();	// закрыть входной файл

	cout << endl;
	cout << ""Из файла "" << '""' << path << '""' 
	<< "" считано "" << N << "" чисел"" << endl;

	if(N <= 20) {
		// отладочная печать массива
		for(int i = 0; i < N; ++i) {
			cout << (i == 0 ? """" : "", "") << ar[i];
		}
		cout << endl;
	}

	return 0;
}"
430E0X49,qqqq,Afanas2707,C++,Tuesday 31st of October 2023 05:35:48 AM CDT,"#include <stdio.h>

#include <iostream>
using namespace std;

void sort(int data[], int n) {
    int* l = new int[n + 1];
    

    l[0] = n;
    l[n] = 0;

    for (int i = 1; i <= n - 1; i++) {
        l[i] = 0;
    }

    

    for (int j = n - 1; j >= 1; j--) {
        int q = 0;
        int p = l[0];
        int k = data[j-1];
        while (p != 0){
            if (k <= data[p-1]) {
                break;
            }
            else {
                q = p;
                p = l[q];
            }
        }
        l[q] = j;
        l[j] = p;

    }


    int i=0, q=l[0],p=l[q];
    while(q > 0) {
        l[q]=i++; q=p;p=l[q];
    }




    for (int i = 0; i < n; i++) {
        printf(""%3d "", i);
    }
    printf(""\n"");
    for (int i = 0; i < n; i++) {
        printf(""%3d "", data[i]);
    }
    printf(""\n"");
    for (int i = 1; i <= n; i++) {
        printf(""%3d "", l[i]);
    }
    printf(""\n"");



    int* sortedArray = new int[n + 1];
    
    for (int i = 0; i < n; i++) {
        sortedArray[l[i + 1]] = data[i];
    }
    
    for (int i = 0; i < n; i++) {
        data[i] = sortedArray[i];
    }
    
    for (int i = 0; i < n; i++) {
        printf(""%3d "", data[i]);
    }
    printf(""\n"");
}

int main()
{
    int myArray[] = { 503, 87, 512, 61, 908, 170, 897, 275, 653, 426, 154, 509, 612, 677, 765, 703};

    sort(myArray, 16);

}"
VFMyDsUc,asdasda,Afanas2707,C++,Tuesday 31st of October 2023 05:30:44 AM CDT,"#include <iostream>
#include <cmath>
#include <fstream>
#include <string>
#include <chrono>

using namespace std;

int count_elements(string filename) {
    int counter = 0;
    ifstream file(filename);
    while (!file.eof()) {
        int r;
        file >> r;
        counter++;
    }
    return counter;
}

void readNumbers(int arr[], int N, string filename) {
    ifstream file(filename);
    for (int i = 0; i < N; i++) {
        file >> arr[i];
    }
}

void print(int arr[], int N, string filename) {
    ofstream file(filename);
    for (int i = 0; i < N; i++) {
        file << arr[i] << endl;
    }
}

int log2RoundUp(int N) {
    int i = 0;
    while (pow(2, i) < N) {
        i++;
    }
    return i;
}

bool checkArray(int arr[], int N) {
    for (int i = 0; i < N - 1; i++) {
        if (arr[i] > arr[i + 1]) return false;
    }
    return true;
}

void bubbleSort(int arr[], int n)
{
    int i, j;
    for (i = 0; i < n - 1; i++)
        for (j = 0; j < n - i - 1; j++)
            if (arr[j] > arr[j + 1])
                swap(arr[j], arr[j + 1]);
}

void BatchersMergeSort(int arr[], int N) {
    int t = log2RoundUp(N);
    int p0 = pow(2, t - 1);
    int p = p0;

    while (p > 0) {
        int q = p0, r = 0, d = p;

        while (r == 0 || q != p) {
            if (r != 0)
            {
                d = q - p;
                q = q / 2;
            }

            for (int i = 0; i < N - d; i++) {
                if (((i & p) == r) && arr[i] > arr[i + d]) {
                    swap(arr[i], arr[i + d]);
                }
            }

            r = p;
        }

        p = p / 2;
    }
}

int compare(const void* a, const void* b)
{
    const int* x = (int*)a;
    const int* y = (int*)b;

    if (*x > *y)
        return 1;
    else if (*x < *y)
        return -1;

    return 0;
}

int main()
{
    setlocale(LC_ALL, ""Russian"");

    const int SIZE = 5000;
    int R[SIZE];
    cout << ""Введите название файла:""  << endl;
    string filename;
    cin >> filename;
    int N = count_elements(filename) - 1;

    readNumbers(R, N, filename);

    auto start = chrono::steady_clock::now();
    BatchersMergeSort(R, N);
    auto end = chrono::steady_clock::now();
    long duration = chrono::duration_cast<chrono::microseconds>(end - start).count();
    cout << endl;

    cout << ""Сортируется массив из "" << N << "" чисел"" << endl;
    print(R, N, ""d"" + to_string(N) + ""-s.txt"");
    if (checkArray(R, N)) {
        cout << ""Массив отсортирован"" << endl;
    }
    else {
        cout << ""Массив не отсортирован"" << endl;
    }
    cout << ""Время выполнения: "" << duration / 1000.0 << "" мсек"" << endl;
    cout << ""Сортированный массив записан в файл: ""  << ""d"" + to_string(N) + ""-s.txt"" << endl;

    return 0;
}"
BJKAxkMm,Real time systems 3,Nouser493,Python,Tuesday 31st of October 2023 05:00:18 AM CDT,"import numpy as np
import matplotlib.pyplot as pp
from matplotlib.patches import Rectangle
from matplotlib.ticker import MaxNLocator
from math import gcd as g


def l(a, b):
	return a * b // g(a, b)


def lcm(arr):
	res = 1
	for i in arr:
		res = l(res, i)
	return res


execution_times = [1, 2, 2, 3, 1]
deadlines = [2, 1, 3, 5, 1]
periods = [3, 12, 12, 4, 6]
colors = [""red"", ""green"", ""blue"", ""c"", ""m""]

period = lcm(periods)

val = 2.
fig, ax = pp.subplots(1, 1, figsize=(15, 8))
ax.yaxis.set_major_locator(MaxNLocator(integer=True))
ax.xaxis.set_major_locator(MaxNLocator(integer=True))

ar = list(range(period + 1))
ax.plot(ar, np.zeros_like(ar), '-')
ax.grid(visible=True)

res = [0 for i in range(period)]

processes = []
for i in range(len(execution_times)):
	for count in range(period // periods[i]):
		start = periods[i] * count
		deadline = deadlines[i] + start
		processes.append([start, deadline, execution_times[i], i + 1])
		
		ax.plot([start], [0.1 * i + 0.1], f""{colors[i % len(colors)][0]}."")
		ax.plot([deadline], [0.1 * i + 0.1], f""{colors[i % len(colors)][0]}x"")

for i in range(period):
	processes.sort(key=lambda x: x[1])
	cur = 0
	while cur < len(processes) and i < processes[cur][0]:
		cur += 1
	if len(processes) == cur:
		print(i, ""Waiting"")
		continue
	index = processes[cur][-1]
	processes[cur][2] -= 1
	if processes[cur][2] == 0:
		processes.pop(cur)
	print(i, f""P{index}"")
	ax.add_patch(Rectangle((i, index), 1, 0.5,
						   facecolor=colors[(index - 1) % len(colors)]))

pp.show()
"
ZvQw0cfU,antihacker and snowybot handbreaker,coinwalk,JavaScript,Tuesday 31st of October 2023 04:57:19 AM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/1000).toFixed(8));
var burp = nudie;
var taget = (smiley*7);
var bolux = (nudie*10);
var dog = (nudie*50);
var poopy = (nudie*6.5);
var mole = (nudie*7.5);
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var fart = 1;
var over = 6.9;
var under = 2.9;
var zimple = smiley;
var becomer = 0;
var beboon = true;
var blowzy = false;
var sexual = ((Math.floor(bolance/bolux))*bolux);
var woman = ((Math.floor(bolance/bolux))*bolux);
var manboobs = ((Math.floor(bolance/bolux))*bolux);
var brother = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if (bolance>(sexual+(burp*over))) {
    burp = burp*2;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if (bolance<(sexual-(burp*under))) {
    burp = burp*2;
    fart = 0;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if ((bolance>(manboobs+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    fart = 1;
    sexual = ((Math.floor(bolance/bolux))*bolux);
    woman = ((Math.floor(bolance/bolux))*bolux);
    manboobs = ((Math.floor(bolance/bolux))*bolux);
}
if ((bolance>=(woman+bolux))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
    woman = ((Math.floor(bolance/bolux))*bolux);
}
if ((bolance<=woman)&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
    woman = ((Math.floor(bolance/bolux))*bolux);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var coldbet = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
if ((milk==jockey)&&(becomer>=1)&&(homer>brother)&&(!beboon)){
setTimout(function(){
finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
brother = parseFloat(homer);
beboon = true;
}, 100);
}
if ((finical<49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple+burp
blowzy = false;
}
if ((finical>=49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple-burp;
blowzy = false;
}
var ficked = ((zimple*1).toFixed(8));
var migg = ((bolance*1).toFixed(8));
if (((milk!=jockey)&&(becomer>=1)&&(homer>brother))||((ficked!=migg)&&(blowzy))){
console.log(""hacker attacked you with"");
console.log(milk);
console.log(""bet number of attack:"");
console.log(coldbet);
return;
}
if ((homer==brother)&&(beboon)){
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
becomer = becomer+1;
blowzy = true;
beboon = false;
homer = 0;
var good = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(good);
}
setTimeout(() => get(), 200);
}
get();"
42i9L0LK,css,yaski29,CSS,Tuesday 31st of October 2023 04:40:06 AM CDT,"*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Open Sans', sans-serif;
  }
  body{
  height: 100vh;
  background-color:
  #000;
  
  background-size: cover;
  background-position: center;
  }
  li{
  list-style: none;
  }
  a{
  
  text-decoration: none;
  color:
  #fff;
  font-size: 1rem;
  }
  a:hover{
    color: red;
  }
  header{
    position: relative;
    padding: 0 2rem;
  }
  .navbar{
    width: 100%;
    height: 60px;
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  .navbar .logo a{
    font-size: 1.5rem;
    font-weight: bold;
  }
  .navbar .links{
    display: flex;
    gap: 2rem;
  }
  .navbar .toggle_btn{
    color: #fff;
    font-size: 1.5rem;
    cursor: pointer;
    display: none;
  }

  .dropdown_menu{
    display: none;
   position: absolute;
   right: 2rem;
   top: 60px;
   height: 0;
   width: 300px;
   background: rgba(red, green, blue, alpha);
   backdrop-filter:blur(15px);
    border-radius: 10px;
    overflow: hidden;
    transition: height 0.2 cubic-bezier(0.175, 0.885, 0.32, 1.275);
  }
  .dropdown_menu.open {
    height: 190px;
  }
  .dropdown_menu li{
    padding: 0.7rem;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  section#hero{
    height: calc(100vh - 60px);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    color: #5c9107da;
  }
  #hero h1{
    font-size: 3rem;
    margin-bottom: 1rem;
  }
  @media(max-width: 992px){
    .navbar .links{
      display: none;
    }
    
    .navbar .toggle_btn{
      display: block;
    }
.dropdown_menu{
  display: block;
}
  }
@media(max-width:576px){
.dropdown_menu{
  left: 2rem;
  width: unset;
}

}"
5C4Lxryc,mouse,nrazukee,Lua,Tuesday 31st of October 2023 04:34:01 AM CDT,"local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local userinput = game:GetService(""UserInputService"")

local firing = false
local ammo = {} 
local equipped = false 
local tool = script.Parent
local gui = player:WaitForChild(""PlayerGui""):WaitForChild(""Ammo"") 

local function Fire(target)
	local currentAmmo = ammo[tool] or 0 
	if equipped and currentAmmo > 0 and target then
		local targetParent = target.Parent
		if targetParent:FindFirstChild(""Humanoid"") then
			tool.GunFire:FireServer(targetParent)
			ammo[tool] = currentAmmo - 1 
			print(""Current ammo left: "" .. (currentAmmo - 1))
		else
			ammo[tool] = currentAmmo - 1
			print(""Shooting non-humanoid target. Current ammo left: "" .. (currentAmmo - 1))
		end
	end
end

tool.Equipped:Connect(function()
	equipped = true 
	gui.Enabled = true -- Show ammo GUI when the gun is equipped
	if not ammo[tool] then
		ammo[tool] = 30 
	end
end)

tool.Unequipped:Connect(function()
	equipped = false 
	gui.Enabled = false -- Hide ammo GUI when the gun is unequipped
	print(""Gun unequipped. Current ammo: "" .. (ammo[tool] or 0))
end)

userinput.InputBegan:Connect(function(input)
	local currentAmmo = ammo[tool] or 0
	if input.UserInputType == Enum.UserInputType.MouseButton1 and currentAmmo > 0 then
		firing = true
		repeat
			wait(0.1)
			local target = mouse.Target
			Fire(target)
			currentAmmo = ammo[tool] or 0
		until not firing or currentAmmo <= 0 or not equipped
	end
	if input.KeyCode == Enum.KeyCode.R and (not ammo[tool] or ammo[tool] < 30) then
		ammo[tool] = 30
		print(""Reloaded. Current ammo: 30"")
	end
end)

userinput.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		firing = false
	end
end)
"
DLZ8WVff,Урок 5: Универсальные функции вывода контейнеров 4/6 / Спринт 2,prizrak567890,C++,Tuesday 31st of October 2023 04:30:26 AM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <set>

using namespace std;

template<typename type>
void Print (ostream& out,const type& container){

int i=0;
    
    for (const auto& element : container) {
    
        if(i==container.size()-1){
            break;
        }
        
    out << element << "", ""s;
        
        ++i;
    }
    if(!container.empty()){
        out << *container.rbegin();
    }
    
}

template<typename type>
ostream& operator<<(ostream& out, const vector<type>& container) {
    
    Print(out,container);
    
    return out;
    
}  

template<typename type>
ostream& operator<<(ostream& out, const set<type>& container) {
    
    Print(out,container);
    
    return out;
    
}  


int main() {
    const set<string> cats = {""Мурка""s, ""Белка""s, ""Георгий""s, ""Рюрик""s};
    cout << cats << endl;
    const vector<int> ages = {10, 5, 2, 12};
    cout << ages << endl; 
}"
rbsUBENt,LeetCode 739 - Daily Temperatures - 2023.10.31 solution,nathanwailes,Python,Tuesday 31st of October 2023 04:19:35 AM CDT,"StackEntry = namedtuple(""StackEntry"", ""value index"")
class Solution:
    def dailyTemperatures(self, temperatures: List[int]) -> List[int]:
        """""" Solution: monotonically-increasing stack
        """"""
        stack = []
        output = []
        for i in range(len(temperatures)-1, -1, -1):
            if len(stack) == 0:
                output.append(0)
                stack.append(StackEntry(value=temperatures[i], index=i))
            else:
                current_temp = temperatures[i]
                while len(stack) > 0:
                    if current_temp >= stack[-1].value:
                        stack.pop()
                    else:
                        break
                
                if len(stack) > 0:
                    output.append(stack[-1].index - i)
                else:
                    output.append(0)
                stack.append(StackEntry(value=temperatures[i], index=i))
        return reversed(output)
"
uSNS9P7F,9468147174178822731-matches.json,Liamm,JSON,Tuesday 31st of October 2023 04:16:58 AM CDT,"{
  ""status"": ""success"",
  ""data"": {
    ""success"": ""success"",
    ""data"": {
      ""matches"": [
        {
          ""matchId"": ""-2390979162768714625"",
          ""map"": ""mp_jup_favela"",
          ""mapName"": ""Favela"",
          ""mode"": ""sd"",
          ""topWeapon"": {
            ""name"": null,
            ""className"": null,
            ""kills"": 0,
            ""aiAgentKills"": 0,
            ""extracted"": 0,
            ""deaths"": 0,
            ""shots"": 0,
            ""headshots"": 0,
            ""damage"": 0,
            ""hits"": 0,
            ""kdRatio"": null,
            ""accuracy"": null,
            ""headshotsPercentage"": null,
            ""hudImage"": null,
            ""imageIcon"": null,
            ""label"": null,
            ""uses"": 0,
            ""classLabel"": null
          },
          ""genericStats"": {
            ""placement"": 0,
            ""score"": 1000,
            ""kills"": 9,
            ""deaths"": 4,
            ""damageDone"": 1525,
            ""assists"": 0,
            ""headshots"": 4,
            ""shots"": 78,
            ""hits"": 21,
            ""totalGamesPlayed"": null,
            ""avgKillsPerGame"": null,
            ""highestKillStreak"": 4,
            ""highestKillsPerGame"": null,
            ""playerUtcConnectTimeSeconds"": 1697370636,
            ""playerUtcDisconnectTimeSeconds"": 1697371534,
            ""scorePerMinute"": 67,
            ""timePlayed"": 898,
            ""totalTimePlayed"": 898,
            ""killDeathRatio"": ""2.25"",
            ""matchOutcome"": ""win"",
            ""alliesScore"": 6,
            ""axisScore"": 2,
            ""team"": ""allies"",
            ""team3Score"": null,
            ""team4Score"": null,
            ""essence"": null,
            ""revives"": null,
            ""lootedContainers"": null,
            ""zombieKills"": null,
            ""soldierKills"": null,
            ""bossKills"": null,
            ""eliteKills"": null,
            ""specialKills"": null,
            ""normalKills"": null,
            ""criticalKills"": null,
            ""papKills"": null,
            ""oneShotKills"": null,
            ""contractsCompleted"": null,
            ""totalWeaponsExtracted"": null,
            ""highestEssenceInOneMatch"": null,
            ""totalAcquisitionsExtracted"": null,
            ""totalSchematicsExtracted"": null,
            ""wins"": 0,
            ""losses"": 0,
            ""winLossRatio"": null
          },
          ""acquisitions"": null,
          ""schematics"": null
        },
        {
          ""matchId"": ""6255083416303093726"",
          ""map"": ""mp_jup_st_c_gw_wz"",
          ""mapName"": ""Orlov Military Base"",
          ""mode"": ""arm"",
          ""topWeapon"": {
            ""name"": null,
            ""className"": null,
            ""kills"": 0,
            ""aiAgentKills"": 0,
            ""extracted"": 0,
            ""deaths"": 0,
            ""shots"": 0,
            ""headshots"": 0,
            ""damage"": 0,
            ""hits"": 0,
            ""kdRatio"": null,
            ""accuracy"": null,
            ""headshotsPercentage"": null,
            ""hudImage"": null,
            ""imageIcon"": null,
            ""label"": null,
            ""uses"": 0,
            ""classLabel"": null
          },
          ""genericStats"": {
            ""placement"": 0,
            ""score"": 1570,
            ""kills"": 11,
            ""deaths"": 6,
            ""damageDone"": 2463,
            ""assists"": 0,
            ""headshots"": 8,
            ""shots"": 80,
            ""hits"": 21,
            ""totalGamesPlayed"": null,
            ""avgKillsPerGame"": null,
            ""highestKillStreak"": 4,
            ""highestKillsPerGame"": null,
            ""playerUtcConnectTimeSeconds"": 1697236928,
            ""playerUtcDisconnectTimeSeconds"": 1697237879,
            ""scorePerMinute"": 99,
            ""timePlayed"": 951,
            ""totalTimePlayed"": 951,
            ""killDeathRatio"": ""1.83"",
            ""matchOutcome"": ""win"",
            ""alliesScore"": 200,
            ""axisScore"": 228,
            ""team"": ""axis"",
            ""team3Score"": null,
            ""team4Score"": null,
            ""essence"": null,
            ""revives"": null,
            ""lootedContainers"": null,
            ""zombieKills"": null,
            ""soldierKills"": null,
            ""bossKills"": null,
            ""eliteKills"": null,
            ""specialKills"": null,
            ""normalKills"": null,
            ""criticalKills"": null,
            ""papKills"": null,
            ""oneShotKills"": null,
            ""contractsCompleted"": null,
            ""totalWeaponsExtracted"": null,
            ""highestEssenceInOneMatch"": null,
            ""totalAcquisitionsExtracted"": null,
            ""totalSchematicsExtracted"": null,
            ""wins"": 0,
            ""losses"": 0,
            ""winLossRatio"": null
          },
          ""acquisitions"": null,
          ""schematics"": null
        },
        {
          ""matchId"": ""-8166619281238093052"",
          ""map"": ""mp_jup_skidrow"",
          ""mapName"": ""Skidrow"",
          ""mode"": ""koth"",
          ""topWeapon"": {
            ""name"": null,
            ""className"": null,
            ""kills"": 0,
            ""aiAgentKills"": 0,
            ""extracted"": 0,
            ""deaths"": 0,
            ""shots"": 0,
            ""headshots"": 0,
            ""damage"": 0,
            ""hits"": 0,
            ""kdRatio"": null,
            ""accuracy"": null,
            ""headshotsPercentage"": null,
            ""hudImage"": null,
            ""imageIcon"": null,
            ""label"": null,
            ""uses"": 0,
            ""classLabel"": null
          },
          ""genericStats"": {
            ""placement"": 0,
            ""score"": 5815,
            ""kills"": 24,
            ""deaths"": 21,
            ""damageDone"": 3799,
            ""assists"": 5,
            ""headshots"": 5,
            ""shots"": 349,
            ""hits"": 78,
            ""totalGamesPlayed"": null,
            ""avgKillsPerGame"": null,
            ""highestKillStreak"": 6,
            ""highestKillsPerGame"": null,
            ""playerUtcConnectTimeSeconds"": 1697204806,
            ""playerUtcDisconnectTimeSeconds"": 1697205440,
            ""scorePerMinute"": 550,
            ""timePlayed"": 634,
            ""totalTimePlayed"": 634,
            ""killDeathRatio"": ""1.14"",
            ""matchOutcome"": ""win"",
            ""alliesScore"": 73,
            ""axisScore"": 250,
            ""team"": ""axis"",
            ""team3Score"": null,
            ""team4Score"": null,
            ""essence"": null,
            ""revives"": null,
            ""lootedContainers"": null,
            ""zombieKills"": null,
            ""soldierKills"": null,
            ""bossKills"": null,
            ""eliteKills"": null,
            ""specialKills"": null,
            ""normalKills"": null,
            ""criticalKills"": null,
            ""papKills"": null,
            ""oneShotKills"": null,
            ""contractsCompleted"": null,
            ""totalWeaponsExtracted"": null,
            ""highestEssenceInOneMatch"": null,
            ""totalAcquisitionsExtracted"": null,
            ""totalSchematicsExtracted"": null,
            ""wins"": 0,
            ""losses"": 0,
            ""winLossRatio"": null
          },
          ""acquisitions"": null,
          ""schematics"": null
        },
        {
          ""matchId"": ""8846307354613494257"",
          ""map"": ""mp_jup_estate"",
          ""mapName"": ""Estate"",
          ""mode"": ""conf"",
          ""topWeapon"": {
            ""name"": null,
            ""className"": null,
            ""kills"": 0,
            ""aiAgentKills"": 0,
            ""extracted"": 0,
            ""deaths"": 0,
            ""shots"": 0,
            ""headshots"": 0,
            ""damage"": 0,
            ""hits"": 0,
            ""kdRatio"": null,
            ""accuracy"": null,
            ""headshotsPercentage"": null,
            ""hudImage"": null,
            ""imageIcon"": null,
            ""label"": null,
            ""uses"": 0,
            ""classLabel"": null
          },
          ""genericStats"": {
            ""placement"": 0,
            ""score"": 2675,
            ""kills"": 16,
            ""deaths"": 23,
            ""damageDone"": 3072,
            ""assists"": 2,
            ""headshots"": 6,
            ""shots"": 188,
            ""hits"": 51,
            ""totalGamesPlayed"": null,
            ""avgKillsPerGame"": null,
            ""highestKillStreak"": 3,
            ""highestKillsPerGame"": null,
            ""playerUtcConnectTimeSeconds"": 1697204079,
            ""playerUtcDisconnectTimeSeconds"": 1697204725,
            ""scorePerMinute"": 248,
            ""timePlayed"": 646,
            ""totalTimePlayed"": 646,
            ""killDeathRatio"": ""0.70"",
            ""matchOutcome"": ""win"",
            ""alliesScore"": 62,
            ""axisScore"": 66,
            ""team"": ""axis"",
            ""team3Score"": null,
            ""team4Score"": null,
            ""essence"": null,
            ""revives"": null,
            ""lootedContainers"": null,
            ""zombieKills"": null,
            ""soldierKills"": null,
            ""bossKills"": null,
            ""eliteKills"": null,
            ""specialKills"": null,
            ""normalKills"": null,
            ""criticalKills"": null,
            ""papKills"": null,
            ""oneShotKills"": null,
            ""contractsCompleted"": null,
            ""totalWeaponsExtracted"": null,
            ""highestEssenceInOneMatch"": null,
            ""totalAcquisitionsExtracted"": null,
            ""totalSchematicsExtracted"": null,
            ""wins"": 0,
            ""losses"": 0,
            ""winLossRatio"": null
          },
          ""acquisitions"": null,
          ""schematics"": null
        },
        {
          ""matchId"": ""3362558407524638685"",
          ""map"": ""mp_jup_rust"",
          ""mapName"": ""Rust"",
          ""mode"": ""koth"",
          ""topWeapon"": {
            ""name"": null,
            ""className"": null,
            ""kills"": 0,
            ""aiAgentKills"": 0,
            ""extracted"": 0,
            ""deaths"": 0,
            ""shots"": 0,
            ""headshots"": 0,
            ""damage"": 0,
            ""hits"": 0,
            ""kdRatio"": null,
            ""accuracy"": null,
            ""headshotsPercentage"": null,
            ""hudImage"": null,
            ""imageIcon"": null,
            ""label"": null,
            ""uses"": 0,
            ""classLabel"": null
          },
          ""genericStats"": {
            ""placement"": 0,
            ""score"": 3550,
            ""kills"": 28,
            ""deaths"": 22,
            ""damageDone"": 4771,
            ""assists"": 6,
            ""headshots"": 4,
            ""shots"": 137,
            ""hits"": 55,
            ""totalGamesPlayed"": null,
            ""avgKillsPerGame"": null,
            ""highestKillStreak"": 7,
            ""highestKillsPerGame"": null,
            ""playerUtcConnectTimeSeconds"": 1697203505,
            ""playerUtcDisconnectTimeSeconds"": 1697203988,
            ""scorePerMinute"": 441,
            ""timePlayed"": 483,
            ""totalTimePlayed"": 483,
            ""killDeathRatio"": ""1.27"",
            ""matchOutcome"": ""loss"",
            ""alliesScore"": 59,
            ""axisScore"": 39,
            ""team"": ""axis"",
            ""team3Score"": null,
            ""team4Score"": null,
            ""essence"": null,
            ""revives"": null,
            ""lootedContainers"": null,
            ""zombieKills"": null,
            ""soldierKills"": null,
            ""bossKills"": null,
            ""eliteKills"": null,
            ""specialKills"": null,
            ""normalKills"": null,
            ""criticalKills"": null,
            ""papKills"": null,
            ""oneShotKills"": null,
            ""contractsCompleted"": null,
            ""totalWeaponsExtracted"": null,
            ""highestEssenceInOneMatch"": null,
            ""totalAcquisitionsExtracted"": null,
            ""totalSchematicsExtracted"": null,
            ""wins"": 0,
            ""losses"": 0,
            ""winLossRatio"": null
          },
          ""acquisitions"": null,
          ""schematics"": null
        },
        {
          ""matchId"": ""-1176594498646165268"",
          ""map"": ""mp_jup_gw_fallout_wz"",
          ""mapName"": ""Popov Power"",
          ""mode"": ""arm"",
          ""topWeapon"": {
            ""name"": null,
            ""className"": null,
            ""kills"": 0,
            ""aiAgentKills"": 0,
            ""extracted"": 0,
            ""deaths"": 0,
            ""shots"": 0,
            ""headshots"": 0,
            ""damage"": 0,
            ""hits"": 0,
            ""kdRatio"": null,
            ""accuracy"": null,
            ""headshotsPercentage"": null,
            ""hudImage"": null,
            ""imageIcon"": null,
            ""label"": null,
            ""uses"": 0,
            ""classLabel"": null
          },
          ""genericStats"": {
            ""placement"": 0,
            ""score"": 300,
            ""kills"": 3,
            ""deaths"": 0,
            ""damageDone"": 392,
            ""assists"": 0,
            ""headshots"": 2,
            ""shots"": 5,
            ""hits"": 2,
            ""totalGamesPlayed"": null,
            ""avgKillsPerGame"": null,
            ""highestKillStreak"": 3,
            ""highestKillsPerGame"": null,
            ""playerUtcConnectTimeSeconds"": 1697202611,
            ""playerUtcDisconnectTimeSeconds"": 1697202776,
            ""scorePerMinute"": 109,
            ""timePlayed"": 165,
            ""totalTimePlayed"": 165,
            ""killDeathRatio"": ""3.00"",
            ""matchOutcome"": ""loss"",
            ""alliesScore"": 228,
            ""axisScore"": 199,
            ""team"": ""axis"",
            ""team3Score"": null,
            ""team4Score"": null,
            ""essence"": null,
            ""revives"": null,
            ""lootedContainers"": null,
            ""zombieKills"": null,
            ""soldierKills"": null,
            ""bossKills"": null,
            ""eliteKills"": null,
            ""specialKills"": null,
            ""normalKills"": null,
            ""criticalKills"": null,
            ""papKills"": null,
            ""oneShotKills"": null,
            ""contractsCompleted"": null,
            ""totalWeaponsExtracted"": null,
            ""highestEssenceInOneMatch"": null,
            ""totalAcquisitionsExtracted"": null,
            ""totalSchematicsExtracted"": null,
            ""wins"": 0,
            ""losses"": 0,
            ""winLossRatio"": null
          },
          ""acquisitions"": null,
          ""schematics"": null
        },
        {
          ""matchId"": ""3114866382378665575"",
          ""map"": ""mp_jup_rust"",
          ""mapName"": ""Rust"",
          ""mode"": ""war"",
          ""topWeapon"": {
            ""name"": null,
            ""className"": null,
            ""kills"": 0,
            ""aiAgentKills"": 0,
            ""extracted"": 0,
            ""deaths"": 0,
            ""shots"": 0,
            ""headshots"": 0,
            ""damage"": 0,
            ""hits"": 0,
            ""kdRatio"": null,
            ""accuracy"": null,
            ""headshotsPercentage"": null,
            ""hudImage"": null,
            ""imageIcon"": null,
            ""label"": null,
            ""uses"": 0,
            ""classLabel"": null
          },
          ""genericStats"": {
            ""placement"": 0,
            ""score"": 1825,
            ""kills"": 15,
            ""deaths"": 7,
            ""damageDone"": 2110,
            ""assists"": 1,
            ""headshots"": 8,
            ""shots"": 35,
            ""hits"": 18,
            ""totalGamesPlayed"": null,
            ""avgKillsPerGame"": null,
            ""highestKillStreak"": 5,
            ""highestKillsPerGame"": null,
            ""playerUtcConnectTimeSeconds"": 1697202986,
            ""playerUtcDisconnectTimeSeconds"": 1697203263,
            ""scorePerMinute"": 395,
            ""timePlayed"": 277,
            ""totalTimePlayed"": 277,
            ""killDeathRatio"": ""2.14"",
            ""matchOutcome"": ""win"",
            ""alliesScore"": 72,
            ""axisScore"": 75,
            ""team"": ""axis"",
            ""team3Score"": null,
            ""team4Score"": null,
            ""essence"": null,
            ""revives"": null,
            ""lootedContainers"": null,
            ""zombieKills"": null,
            ""soldierKills"": null,
            ""bossKills"": null,
            ""eliteKills"": null,
            ""specialKills"": null,
            ""normalKills"": null,
            ""criticalKills"": null,
            ""papKills"": null,
            ""oneShotKills"": null,
            ""contractsCompleted"": null,
            ""totalWeaponsExtracted"": null,
            ""highestEssenceInOneMatch"": null,
            ""totalAcquisitionsExtracted"": null,
            ""totalSchematicsExtracted"": null,
            ""wins"": 0,
            ""losses"": 0,
            ""winLossRatio"": null
          },
          ""acquisitions"": null,
          ""schematics"": null
        },
        {
          ""matchId"": ""4854110433882729270"",
          ""map"": ""mp_jup_gw_fallout_wz"",
          ""mapName"": ""Popov Power"",
          ""mode"": ""arm"",
          ""topWeapon"": {
            ""name"": null,
            ""className"": null,
            ""kills"": 0,
            ""aiAgentKills"": 0,
            ""extracted"": 0,
            ""deaths"": 0,
            ""shots"": 0,
            ""headshots"": 0,
            ""damage"": 0,
            ""hits"": 0,
            ""kdRatio"": null,
            ""accuracy"": null,
            ""headshotsPercentage"": null,
            ""hudImage"": null,
            ""imageIcon"": null,
            ""label"": null,
            ""uses"": 0,
            ""classLabel"": null
          },
          ""genericStats"": {
            ""placement"": 0,
            ""score"": 0,
            ""kills"": 0,
            ""deaths"": 0,
            ""damageDone"": 0,
            ""assists"": 0,
            ""headshots"": 0,
            ""shots"": 0,
            ""hits"": 0,
            ""totalGamesPlayed"": null,
            ""avgKillsPerGame"": null,
            ""highestKillStreak"": 0,
            ""highestKillsPerGame"": null,
            ""playerUtcConnectTimeSeconds"": 1697202429,
            ""playerUtcDisconnectTimeSeconds"": 1697202515,
            ""scorePerMinute"": 0,
            ""timePlayed"": 86,
            ""totalTimePlayed"": 86,
            ""killDeathRatio"": ""0.00"",
            ""matchOutcome"": ""loss"",
            ""alliesScore"": 163,
            ""axisScore"": 95,
            ""team"": ""allies"",
            ""team3Score"": null,
            ""team4Score"": null,
            ""essence"": null,
            ""revives"": null,
            ""lootedContainers"": null,
            ""zombieKills"": null,
            ""soldierKills"": null,
            ""bossKills"": null,
            ""eliteKills"": null,
            ""specialKills"": null,
            ""normalKills"": null,
            ""criticalKills"": null,
            ""papKills"": null,
            ""oneShotKills"": null,
            ""contractsCompleted"": null,
            ""totalWeaponsExtracted"": null,
            ""highestEssenceInOneMatch"": null,
            ""totalAcquisitionsExtracted"": null,
            ""totalSchematicsExtracted"": null,
            ""wins"": 0,
            ""losses"": 0,
            ""winLossRatio"": null
          },
          ""acquisitions"": null,
          ""schematics"": null
        },
        {
          ""matchId"": ""3918669929517805399"",
          ""map"": ""mp_jup_gw_fallout_wz"",
          ""mapName"": ""Popov Power"",
          ""mode"": ""arm"",
          ""topWeapon"": {
            ""name"": null,
            ""className"": null,
            ""kills"": 0,
            ""aiAgentKills"": 0,
            ""extracted"": 0,
            ""deaths"": 0,
            ""shots"": 0,
            ""headshots"": 0,
            ""damage"": 0,
            ""hits"": 0,
            ""kdRatio"": null,
            ""accuracy"": null,
            ""headshotsPercentage"": null,
            ""hudImage"": null,
            ""imageIcon"": null,
            ""label"": null,
            ""uses"": 0,
            ""classLabel"": null
          },
          ""genericStats"": {
            ""placement"": 0,
            ""score"": 1525,
            ""kills"": 5,
            ""deaths"": 13,
            ""damageDone"": 2019,
            ""assists"": 9,
            ""headshots"": 3,
            ""shots"": 108,
            ""hits"": 27,
            ""totalGamesPlayed"": null,
            ""avgKillsPerGame"": null,
            ""highestKillStreak"": 2,
            ""highestKillsPerGame"": null,
            ""playerUtcConnectTimeSeconds"": 1697201676,
            ""playerUtcDisconnectTimeSeconds"": 1697202335,
            ""scorePerMinute"": 139,
            ""timePlayed"": 659,
            ""totalTimePlayed"": 659,
            ""killDeathRatio"": ""0.38"",
            ""matchOutcome"": ""loss"",
            ""alliesScore"": 250,
            ""axisScore"": 138,
            ""team"": ""axis"",
            ""team3Score"": null,
            ""team4Score"": null,
            ""essence"": null,
            ""revives"": null,
            ""lootedContainers"": null,
            ""zombieKills"": null,
            ""soldierKills"": null,
            ""bossKills"": null,
            ""eliteKills"": null,
            ""specialKills"": null,
            ""normalKills"": null,
            ""criticalKills"": null,
            ""papKills"": null,
            ""oneShotKills"": null,
            ""contractsCompleted"": null,
            ""totalWeaponsExtracted"": null,
            ""highestEssenceInOneMatch"": null,
            ""totalAcquisitionsExtracted"": null,
            ""totalSchematicsExtracted"": null,
            ""wins"": 0,
            ""losses"": 0,
            ""winLossRatio"": null
          },
          ""acquisitions"": null,
          ""schematics"": null
        },
        {
          ""matchId"": ""4956774245485636421"",
          ""map"": ""mp_jup_gw_fallout_wz"",
          ""mapName"": ""Popov Power"",
          ""mode"": ""arm"",
          ""topWeapon"": {
            ""name"": null,
            ""className"": null,
            ""kills"": 0,
            ""aiAgentKills"": 0,
            ""extracted"": 0,
            ""deaths"": 0,
            ""shots"": 0,
            ""headshots"": 0,
            ""damage"": 0,
            ""hits"": 0,
            ""kdRatio"": null,
            ""accuracy"": null,
            ""headshotsPercentage"": null,
            ""hudImage"": null,
            ""imageIcon"": null,
            ""label"": null,
            ""uses"": 0,
            ""classLabel"": null
          },
          ""genericStats"": {
            ""placement"": 0,
            ""score"": 2525,
            ""kills"": 22,
            ""deaths"": 13,
            ""damageDone"": 3790,
            ""assists"": 0,
            ""headshots"": 10,
            ""shots"": 142,
            ""hits"": 50,
            ""totalGamesPlayed"": null,
            ""avgKillsPerGame"": null,
            ""highestKillStreak"": 4,
            ""highestKillsPerGame"": null,
            ""playerUtcConnectTimeSeconds"": 1697200733,
            ""playerUtcDisconnectTimeSeconds"": 1697201437,
            ""scorePerMinute"": 215,
            ""timePlayed"": 704,
            ""totalTimePlayed"": 704,
            ""killDeathRatio"": ""1.69"",
            ""matchOutcome"": ""loss"",
            ""alliesScore"": 176,
            ""axisScore"": 247,
            ""team"": ""allies"",
            ""team3Score"": null,
            ""team4Score"": null,
            ""essence"": null,
            ""revives"": null,
            ""lootedContainers"": null,
            ""zombieKills"": null,
            ""soldierKills"": null,
            ""bossKills"": null,
            ""eliteKills"": null,
            ""specialKills"": null,
            ""normalKills"": null,
            ""criticalKills"": null,
            ""papKills"": null,
            ""oneShotKills"": null,
            ""contractsCompleted"": null,
            ""totalWeaponsExtracted"": null,
            ""highestEssenceInOneMatch"": null,
            ""totalAcquisitionsExtracted"": null,
            ""totalSchematicsExtracted"": null,
            ""wins"": 0,
            ""losses"": 0,
            ""winLossRatio"": null
          },
          ""acquisitions"": null,
          ""schematics"": null
        }
      ],
      ""genericStats"": {
        ""placement"": 0,
        ""score"": 20785,
        ""kills"": 133,
        ""deaths"": 109,
        ""damageDone"": 23941,
        ""assists"": 23,
        ""headshots"": 50,
        ""shots"": 1122,
        ""hits"": 323,
        ""totalGamesPlayed"": 10,
        ""avgKillsPerGame"": ""13.30"",
        ""highestKillStreak"": 7,
        ""highestKillsPerGame"": 28,
        ""playerUtcConnectTimeSeconds"": null,
        ""playerUtcDisconnectTimeSeconds"": null,
        ""scorePerMinute"": 227,
        ""timePlayed"": null,
        ""totalTimePlayed"": 5503,
        ""killDeathRatio"": ""1.22"",
        ""matchOutcome"": null,
        ""alliesScore"": 1289,
        ""axisScore"": 1339,
        ""team"": null,
        ""team3Score"": 0,
        ""team4Score"": 0,
        ""essence"": null,
        ""revives"": null,
        ""lootedContainers"": null,
        ""zombieKills"": null,
        ""soldierKills"": null,
        ""bossKills"": null,
        ""eliteKills"": null,
        ""specialKills"": null,
        ""normalKills"": null,
        ""criticalKills"": null,
        ""papKills"": null,
        ""oneShotKills"": null,
        ""contractsCompleted"": null,
        ""totalWeaponsExtracted"": null,
        ""highestEssenceInOneMatch"": null,
        ""totalAcquisitionsExtracted"": null,
        ""totalSchematicsExtracted"": null,
        ""wins"": 5,
        ""losses"": 5,
        ""winLossRatio"": ""1.00""
      },
      ""weaponStats"": [],
      ""weaponClassStats"": [],
      ""modeStats"": [
        {
          ""name"": ""sd"",
          ""kills"": 9,
          ""deaths"": 4,
          ""shots"": 78,
          ""score"": 1000,
          ""timePlayed"": 898,
          ""kdRatio"": ""2.25"",
          ""wins"": 1,
          ""loss"": 0,
          ""assists"": 0,
          ""winLossRatio"": ""1.00"",
          ""scorePerMinute"": 67,
          ""avgKillsPerGame"": ""9.00"",
          ""totalGamesPlayed"": 1,
          ""maps"": [
            {
              ""name"": ""mp_jup_favela"",
              ""mapName"": ""Favela"",
              ""kills"": 9,
              ""deaths"": 4,
              ""shots"": 78,
              ""score"": 1000,
              ""timePlayed"": 898,
              ""kdRatio"": ""2.25"",
              ""wins"": 1,
              ""loss"": 0,
              ""search"": 0,
              ""assists"": 1,
              ""winLossRatio"": ""1.00"",
              ""scorePerMinute"": 67,
              ""avgKillsPerGame"": ""9.00"",
              ""totalGamesPlayed"": 0
            }
          ],
          ""headshots"": 4,
          ""damage"": 1525
        },
        {
          ""name"": ""arm"",
          ""kills"": 41,
          ""deaths"": 32,
          ""shots"": 110,
          ""score"": 5920,
          ""timePlayed"": 2565,
          ""kdRatio"": ""1.28"",
          ""wins"": 1,
          ""loss"": 4,
          ""assists"": 9,
          ""winLossRatio"": ""0.25"",
          ""scorePerMinute"": 138,
          ""avgKillsPerGame"": ""8.20"",
          ""totalGamesPlayed"": 5,
          ""maps"": [
            {
              ""name"": ""mp_jup_st_c_gw_wz"",
              ""mapName"": ""Orlov Military Base"",
              ""kills"": 11,
              ""deaths"": 6,
              ""shots"": 80,
              ""score"": 1570,
              ""timePlayed"": 951,
              ""kdRatio"": ""1.83"",
              ""wins"": 1,
              ""loss"": 0,
              ""search"": 0,
              ""assists"": 1,
              ""winLossRatio"": ""1.00"",
              ""scorePerMinute"": 99,
              ""avgKillsPerGame"": ""11.00"",
              ""totalGamesPlayed"": 0
            },
            {
              ""name"": ""mp_jup_gw_fallout_wz"",
              ""mapName"": ""Popov Power"",
              ""kills"": 30,
              ""deaths"": 26,
              ""shots"": 255,
              ""score"": 4350,
              ""timePlayed"": 1614,
              ""kdRatio"": ""1.15"",
              ""wins"": 0,
              ""loss"": 4,
              ""search"": 0,
              ""assists"": 4,
              ""winLossRatio"": ""0.00"",
              ""scorePerMinute"": 162,
              ""avgKillsPerGame"": ""10.00"",
              ""totalGamesPlayed"": 3
            }
          ],
          ""headshots"": 23,
          ""damage"": 8664
        },
        {
          ""name"": ""koth"",
          ""kills"": 52,
          ""deaths"": 43,
          ""shots"": 357,
          ""score"": 9365,
          ""timePlayed"": 1117,
          ""kdRatio"": ""1.21"",
          ""wins"": 1,
          ""loss"": 1,
          ""assists"": 11,
          ""winLossRatio"": ""1.00"",
          ""scorePerMinute"": 503,
          ""avgKillsPerGame"": ""26.00"",
          ""totalGamesPlayed"": 2,
          ""maps"": [
            {
              ""name"": ""mp_jup_skidrow"",
              ""mapName"": ""Skidrow"",
              ""kills"": 24,
              ""deaths"": 21,
              ""shots"": 349,
              ""score"": 5815,
              ""timePlayed"": 634,
              ""kdRatio"": ""1.14"",
              ""wins"": 1,
              ""loss"": 0,
              ""search"": 0,
              ""assists"": 1,
              ""winLossRatio"": ""1.00"",
              ""scorePerMinute"": 550,
              ""avgKillsPerGame"": ""24.00"",
              ""totalGamesPlayed"": 5
            },
            {
              ""name"": ""mp_jup_rust"",
              ""mapName"": ""Rust"",
              ""kills"": 28,
              ""deaths"": 22,
              ""shots"": 137,
              ""score"": 3550,
              ""timePlayed"": 483,
              ""kdRatio"": ""1.27"",
              ""wins"": 0,
              ""loss"": 1,
              ""search"": 0,
              ""assists"": 1,
              ""winLossRatio"": ""0.00"",
              ""scorePerMinute"": 441,
              ""avgKillsPerGame"": ""4.67"",
              ""totalGamesPlayed"": 6
            }
          ],
          ""headshots"": 9,
          ""damage"": 8570
        },
        {
          ""name"": ""conf"",
          ""kills"": 16,
          ""deaths"": 23,
          ""shots"": 188,
          ""score"": 2675,
          ""timePlayed"": 646,
          ""kdRatio"": ""0.70"",
          ""wins"": 1,
          ""loss"": 0,
          ""assists"": 2,
          ""winLossRatio"": ""1.00"",
          ""scorePerMinute"": 248,
          ""avgKillsPerGame"": ""16.00"",
          ""totalGamesPlayed"": 1,
          ""maps"": [
            {
              ""name"": ""mp_jup_estate"",
              ""mapName"": ""Estate"",
              ""kills"": 16,
              ""deaths"": 23,
              ""shots"": 188,
              ""score"": 2675,
              ""timePlayed"": 646,
              ""kdRatio"": ""0.70"",
              ""wins"": 1,
              ""loss"": 0,
              ""search"": 0,
              ""assists"": 1,
              ""winLossRatio"": ""1.00"",
              ""scorePerMinute"": 248,
              ""avgKillsPerGame"": ""16.00"",
              ""totalGamesPlayed"": 2
            }
          ],
          ""headshots"": 6,
          ""damage"": 3072
        },
        {
          ""name"": ""war"",
          ""kills"": 15,
          ""deaths"": 7,
          ""shots"": 35,
          ""score"": 1825,
          ""timePlayed"": 277,
          ""kdRatio"": ""2.14"",
          ""wins"": 1,
          ""loss"": 0,
          ""assists"": 1,
          ""winLossRatio"": ""1.00"",
          ""scorePerMinute"": 395,
          ""avgKillsPerGame"": ""15.00"",
          ""totalGamesPlayed"": 1,
          ""maps"": [
            {
              ""name"": ""mp_jup_rust"",
              ""mapName"": ""Rust"",
              ""kills"": 15,
              ""deaths"": 7,
              ""shots"": 35,
              ""score"": 1825,
              ""timePlayed"": 277,
              ""kdRatio"": ""2.14"",
              ""wins"": 1,
              ""loss"": 0,
              ""search"": 0,
              ""assists"": 1,
              ""winLossRatio"": ""1.00"",
              ""scorePerMinute"": 395,
              ""avgKillsPerGame"": ""15.00"",
              ""totalGamesPlayed"": 1
            }
          ],
          ""headshots"": 8,
          ""damage"": 2110
        }
      ],
      ""equipmentStats"": [],
      ""killStreaks"": [
        {
          ""name"": ""fuel_airstrike"",
          ""className"": null,
          ""kills"": 5,
          ""aiAgentKills"": 0,
          ""shots"": 0,
          ""hits"": 0,
          ""score"": 0,
          ""uses"": 0,
          ""hudImage"": null,
          ""imageIcon"": null,
          ""label"": null,
          ""classLabel"": null
        }
      ],
      ""gamertag"": ""onetwoDom#5004080""
    }
  }
}"
ujJJ1QnD,9468147174178822731-lifetime.json,Liamm,JSON,Tuesday 31st of October 2023 04:16:34 AM CDT,"{
  ""status"": ""success"",
  ""data"": {
    ""success"": ""success"",
    ""data"": {
      ""genericStats"": {
        ""totalTimePlayed"": 39071,
        ""totalGamesPlayed"": 75,
        ""avgKillsPerGame"": ""14.99"",
        ""kills"": 1124,
        ""aiAgentKills"": 0,
        ""highestCashSpent"": 0,
        ""score"": 202972,
        ""killDeathRatio"": ""0.98"",
        ""losses"": 37,
        ""wins"": 38,
        ""shots"": 21302,
        ""highestKillStreak"": 13,
        ""highestKillsPerGame"": 45,
        ""highestScorePerGame"": 8911,
        ""winLossRatio"": ""1.03"",
        ""prestige"": 0,
        ""level"": 29,
        ""deaths"": 1148,
        ""scorePerMinute"": 312,
        ""assists"": 284,
        ""hits"": 4853,
        ""damage"": 209995,
        ""headshots"": 234
      },
      ""weaponStats"": [],
      ""weaponClassStats"": [],
      ""modeStats"": [
        {
          ""name"": ""sd"",
          ""kills"": 9,
          ""deaths"": 4,
          ""shots"": 78,
          ""score"": 1000,
          ""timePlayed"": 898,
          ""kdRatio"": ""2.25"",
          ""wins"": 1,
          ""loss"": 0,
          ""assists"": 0,
          ""winLossRatio"": ""1.00"",
          ""scorePerMinute"": 67,
          ""avgKillsPerGame"": ""9.00"",
          ""totalGamesPlayed"": 1,
          ""maps"": [
            {
              ""name"": ""mp_jup_favela"",
              ""mapName"": ""Favela"",
              ""kills"": 9,
              ""deaths"": 4,
              ""shots"": 78,
              ""score"": 1000,
              ""timePlayed"": 898,
              ""kdRatio"": ""2.25"",
              ""wins"": 1,
              ""loss"": 0,
              ""search"": 0,
              ""assists"": 0,
              ""winLossRatio"": ""1.00"",
              ""scorePerMinute"": 67,
              ""avgKillsPerGame"": ""9.00"",
              ""totalGamesPlayed"": 1
            }
          ]
        },
        {
          ""name"": ""dom"",
          ""kills"": 249,
          ""deaths"": 295,
          ""shots"": 10458,
          ""score"": 48430,
          ""timePlayed"": 8563,
          ""kdRatio"": ""0.84"",
          ""wins"": 9,
          ""loss"": 6,
          ""assists"": 64,
          ""winLossRatio"": ""1.50"",
          ""scorePerMinute"": 339,
          ""avgKillsPerGame"": ""16.60"",
          ""totalGamesPlayed"": 15,
          ""maps"": [
            {
              ""name"": ""mp_jup_estate"",
              ""mapName"": ""Estate"",
              ""kills"": 12,
              ""deaths"": 15,
              ""shots"": 406,
              ""score"": 2200,
              ""timePlayed"": 714,
              ""kdRatio"": ""0.80"",
              ""wins"": 1,
              ""loss"": 0,
              ""search"": 0,
              ""assists"": 3,
              ""winLossRatio"": ""1.00"",
              ""scorePerMinute"": 185,
              ""avgKillsPerGame"": ""12.00"",
              ""totalGamesPlayed"": 1
            },
            {
              ""name"": ""mp_jup_skidrow"",
              ""mapName"": ""Skidrow"",
              ""kills"": 40,
              ""deaths"": 68,
              ""shots"": 2091,
              ""score"": 10025,
              ""timePlayed"": 2212,
              ""kdRatio"": ""0.59"",
              ""wins"": 2,
              ""loss"": 2,
              ""search"": 0,
              ""assists"": 17,
              ""winLossRatio"": ""1.00"",
              ""scorePerMinute"": 272,
              ""avgKillsPerGame"": ""10.00"",
              ""totalGamesPlayed"": 4
            },
            {
              ""name"": ""mp_jup_favela"",
              ""mapName"": ""Favela"",
              ""kills"": 45,
              ""deaths"": 31,
              ""shots"": 1252,
              ""score"": 8340,
              ""timePlayed"": 1358,
              ""kdRatio"": ""1.45"",
              ""wins"": 2,
              ""loss"": 1,
              ""search"": 0,
              ""assists"": 6,
              ""winLossRatio"": ""2.00"",
              ""scorePerMinute"": 368,
              ""avgKillsPerGame"": ""15.00"",
              ""totalGamesPlayed"": 3
            },
            {
              ""name"": ""mp_jup_rust"",
              ""mapName"": ""Rust"",
              ""kills"": 117,
              ""deaths"": 136,
              ""shots"": 4342,
              ""score"": 22840,
              ""timePlayed"": 2962,
              ""kdRatio"": ""0.86"",
              ""wins"": 2,
              ""loss"": 3,
              ""search"": 0,
              ""assists"": 30,
              ""winLossRatio"": ""0.67"",
              ""scorePerMinute"": 463,
              ""avgKillsPerGame"": ""23.40"",
              ""totalGamesPlayed"": 5
            },
            {
              ""name"": ""mp_jup_highrise"",
              ""mapName"": ""Highrise"",
              ""kills"": 35,
              ""deaths"": 45,
              ""shots"": 806,
              ""score"": 5025,
              ""timePlayed"": 1317,
              ""kdRatio"": ""0.78"",
              ""wins"": 2,
              ""loss"": 0,
              ""search"": 0,
              ""assists"": 8,
              ""winLossRatio"": ""2.00"",
              ""scorePerMinute"": 229,
              ""avgKillsPerGame"": ""17.50"",
              ""totalGamesPlayed"": 2
            }
          ]
        },
        {
          ""name"": ""xfire"",
          ""kills"": 3,
          ""deaths"": 2,
          ""shots"": 139,
          ""score"": 450,
          ""timePlayed"": 371,
          ""kdRatio"": ""1.50"",
          ""wins"": 1,
          ""loss"": 0,
          ""assists"": 0,
          ""winLossRatio"": ""1.00"",
          ""scorePerMinute"": 73,
          ""avgKillsPerGame"": ""3.00"",
          ""totalGamesPlayed"": 1,
          ""maps"": [
            {
              ""name"": ""mp_jup_favela"",
              ""mapName"": ""Favela"",
              ""kills"": 3,
              ""deaths"": 2,
              ""shots"": 139,
              ""score"": 450,
              ""timePlayed"": 371,
              ""kdRatio"": ""1.50"",
              ""wins"": 1,
              ""loss"": 0,
              ""search"": 0,
              ""assists"": 0,
              ""winLossRatio"": ""1.00"",
              ""scorePerMinute"": 73,
              ""avgKillsPerGame"": ""3.00"",
              ""totalGamesPlayed"": 1
            }
          ]
        },
        {
          ""name"": ""war"",
          ""kills"": 163,
          ""deaths"": 141,
          ""shots"": 5528,
          ""score"": 20955,
          ""timePlayed"": 5607,
          ""kdRatio"": ""1.16"",
          ""wins"": 7,
          ""loss"": 9,
          ""assists"": 28,
          ""winLossRatio"": ""0.78"",
          ""scorePerMinute"": 224,
          ""avgKillsPerGame"": ""10.19"",
          ""totalGamesPlayed"": 16,
          ""maps"": [
            {
              ""name"": ""mp_jup_estate"",
              ""mapName"": ""Estate"",
              ""kills"": 33,
              ""deaths"": 24,
              ""shots"": 1668,
              ""score"": 4425,
              ""timePlayed"": 1253,
              ""kdRatio"": ""1.38"",
              ""wins"": 1,
              ""loss"": 3,
              ""search"": 0,
              ""assists"": 7,
              ""winLossRatio"": ""0.33"",
              ""scorePerMinute"": 212,
              ""avgKillsPerGame"": ""8.25"",
              ""totalGamesPlayed"": 4
            },
            {
              ""name"": ""mp_jup_skidrow"",
              ""mapName"": ""Skidrow"",
              ""kills"": 52,
              ""deaths"": 52,
              ""shots"": 1155,
              ""score"": 7090,
              ""timePlayed"": 1820,
              ""kdRatio"": ""1.00"",
              ""wins"": 1,
              ""loss"": 4,
              ""search"": 0,
              ""assists"": 10,
              ""winLossRatio"": ""0.25"",
              ""scorePerMinute"": 234,
              ""avgKillsPerGame"": ""10.40"",
              ""totalGamesPlayed"": 5
            },
            {
              ""name"": ""mp_jup_rust"",
              ""mapName"": ""Rust"",
              ""kills"": 30,
              ""deaths"": 24,
              ""shots"": 674,
              ""score"": 3825,
              ""timePlayed"": 671,
              ""kdRatio"": ""1.25"",
              ""wins"": 2,
              ""loss"": 1,
              ""search"": 0,
              ""assists"": 4,
              ""winLossRatio"": ""2.00"",
              ""scorePerMinute"": 342,
              ""avgKillsPerGame"": ""10.00"",
              ""totalGamesPlayed"": 3
            },
            {
              ""name"": ""mp_jup_favela"",
              ""mapName"": ""Favela"",
              ""kills"": 42,
              ""deaths"": 29,
              ""shots"": 1185,
              ""score"": 4790,
              ""timePlayed"": 1411,
              ""kdRatio"": ""1.45"",
              ""wins"": 2,
              ""loss"": 1,
              ""search"": 0,
              ""assists"": 6,
              ""winLossRatio"": ""2.00"",
              ""scorePerMinute"": 204,
              ""avgKillsPerGame"": ""14.00"",
              ""totalGamesPlayed"": 3
            },
            {
              ""name"": ""mp_jup_highrise"",
              ""mapName"": ""Highrise"",
              ""kills"": 6,
              ""deaths"": 12,
              ""shots"": 135,
              ""score"": 825,
              ""timePlayed"": 452,
              ""kdRatio"": ""0.50"",
              ""wins"": 1,
              ""loss"": 0,
              ""search"": 0,
              ""assists"": 1,
              ""winLossRatio"": ""1.00"",
              ""scorePerMinute"": 110,
              ""avgKillsPerGame"": ""6.00"",
              ""totalGamesPlayed"": 1
            }
          ]
        },
        {
          ""name"": ""koth"",
          ""kills"": 408,
          ""deaths"": 441,
          ""shots"": 15160,
          ""score"": 84557,
          ""timePlayed"": 11354,
          ""kdRatio"": ""0.93"",
          ""wins"": 11,
          ""loss"": 6,
          ""assists"": 133,
          ""winLossRatio"": ""1.83"",
          ""scorePerMinute"": 447,
          ""avgKillsPerGame"": ""24.00"",
          ""totalGamesPlayed"": 17,
          ""maps"": [
            {
              ""name"": ""mp_jup_favela"",
              ""mapName"": ""Favela"",
              ""kills"": 28,
              ""deaths"": 42,
              ""shots"": 1298,
              ""score"": 5390,
              ""timePlayed"": 1271,
              ""kdRatio"": ""0.67"",
              ""wins"": 1,
              ""loss"": 2,
              ""search"": 0,
              ""assists"": 6,
              ""winLossRatio"": ""0.50"",
              ""scorePerMinute"": 254,
              ""avgKillsPerGame"": ""9.33"",
              ""totalGamesPlayed"": 3
            },
            {
              ""name"": ""mp_jup_estate"",
              ""mapName"": ""Estate"",
              ""kills"": 42,
              ""deaths"": 59,
              ""shots"": 2520,
              ""score"": 11541,
              ""timePlayed"": 2207,
              ""kdRatio"": ""0.71"",
              ""wins"": 2,
              ""loss"": 1,
              ""search"": 0,
              ""assists"": 19,
              ""winLossRatio"": ""2.00"",
              ""scorePerMinute"": 314,
              ""avgKillsPerGame"": ""14.00"",
              ""totalGamesPlayed"": 3
            },
            {
              ""name"": ""mp_jup_skidrow"",
              ""mapName"": ""Skidrow"",
              ""kills"": 63,
              ""deaths"": 50,
              ""shots"": 2309,
              ""score"": 15055,
              ""timePlayed"": 1904,
              ""kdRatio"": ""1.26"",
              ""wins"": 3,
              ""loss"": 0,
              ""search"": 0,
              ""assists"": 21,
              ""winLossRatio"": ""3.00"",
              ""scorePerMinute"": 474,
              ""avgKillsPerGame"": ""21.00"",
              ""totalGamesPlayed"": 3
            },
            {
              ""name"": ""mp_jup_rust"",
              ""mapName"": ""Rust"",
              ""kills"": 217,
              ""deaths"": 232,
              ""shots"": 5543,
              ""score"": 41921,
              ""timePlayed"": 4416,
              ""kdRatio"": ""0.94"",
              ""wins"": 3,
              ""loss"": 3,
              ""search"": 0,
              ""assists"": 70,
              ""winLossRatio"": ""1.00"",
              ""scorePerMinute"": 570,
              ""avgKillsPerGame"": ""36.17"",
              ""totalGamesPlayed"": 6
            },
            {
              ""name"": ""mp_jup_highrise"",
              ""mapName"": ""Highrise"",
              ""kills"": 58,
              ""deaths"": 58,
              ""shots"": 1124,
              ""score"": 10650,
              ""timePlayed"": 1556,
              ""kdRatio"": ""1.00"",
              ""wins"": 2,
              ""loss"": 0,
              ""search"": 0,
              ""assists"": 17,
              ""winLossRatio"": ""2.00"",
              ""scorePerMinute"": 411,
              ""avgKillsPerGame"": ""29.00"",
              ""totalGamesPlayed"": 2
            }
          ]
        },
        {
          ""name"": ""conf"",
          ""kills"": 195,
          ""deaths"": 198,
          ""shots"": 7934,
          ""score"": 33595,
          ""timePlayed"": 6111,
          ""kdRatio"": ""0.98"",
          ""wins"": 8,
          ""loss"": 4,
          ""assists"": 47,
          ""winLossRatio"": ""2.00"",
          ""scorePerMinute"": 330,
          ""avgKillsPerGame"": ""16.25"",
          ""totalGamesPlayed"": 12,
          ""maps"": [
            {
              ""name"": ""mp_jup_rust"",
              ""mapName"": ""Rust"",
              ""kills"": 75,
              ""deaths"": 86,
              ""shots"": 3552,
              ""score"": 13550,
              ""timePlayed"": 1880,
              ""kdRatio"": ""0.87"",
              ""wins"": 3,
              ""loss"": 1,
              ""search"": 0,
              ""assists"": 28,
              ""winLossRatio"": ""3.00"",
              ""scorePerMinute"": 432,
              ""avgKillsPerGame"": ""18.75"",
              ""totalGamesPlayed"": 4
            },
            {
              ""name"": ""mp_jup_favela"",
              ""mapName"": ""Favela"",
              ""kills"": 17,
              ""deaths"": 11,
              ""shots"": 463,
              ""score"": 2720,
              ""timePlayed"": 646,
              ""kdRatio"": ""1.55"",
              ""wins"": 0,
              ""loss"": 1,
              ""search"": 0,
              ""assists"": 3,
              ""winLossRatio"": ""0.00"",
              ""scorePerMinute"": 253,
              ""avgKillsPerGame"": ""17.00"",
              ""totalGamesPlayed"": 1
            },
            {
              ""name"": ""mp_jup_skidrow"",
              ""mapName"": ""Skidrow"",
              ""kills"": 50,
              ""deaths"": 42,
              ""shots"": 1404,
              ""score"": 8585,
              ""timePlayed"": 1472,
              ""kdRatio"": ""1.19"",
              ""wins"": 2,
              ""loss"": 1,
              ""search"": 0,
              ""assists"": 9,
              ""winLossRatio"": ""2.00"",
              ""scorePerMinute"": 350,
              ""avgKillsPerGame"": ""16.67"",
              ""totalGamesPlayed"": 3
            },
            {
              ""name"": ""mp_jup_estate"",
              ""mapName"": ""Estate"",
              ""kills"": 50,
              ""deaths"": 52,
              ""shots"": 1702,
              ""score"": 8115,
              ""timePlayed"": 1938,
              ""kdRatio"": ""0.96"",
              ""wins"": 3,
              ""loss"": 0,
              ""search"": 0,
              ""assists"": 7,
              ""winLossRatio"": ""3.00"",
              ""scorePerMinute"": 251,
              ""avgKillsPerGame"": ""16.67"",
              ""totalGamesPlayed"": 3
            },
            {
              ""name"": ""mp_jup_highrise"",
              ""mapName"": ""Highrise"",
              ""kills"": 3,
              ""deaths"": 7,
              ""shots"": 60,
              ""score"": 625,
              ""timePlayed"": 175,
              ""kdRatio"": ""0.43"",
              ""wins"": 0,
              ""loss"": 1,
              ""search"": 0,
              ""assists"": 0,
              ""winLossRatio"": ""0.00"",
              ""scorePerMinute"": 214,
              ""avgKillsPerGame"": ""3.00"",
              ""totalGamesPlayed"": 1
            }
          ]
        },
        {
          ""name"": ""arm"",
          ""kills"": 97,
          ""deaths"": 67,
          ""shots"": 1885,
          ""score"": 13985,
          ""timePlayed"": 6167,
          ""kdRatio"": ""1.45"",
          ""wins"": 1,
          ""loss"": 12,
          ""assists"": 12,
          ""winLossRatio"": ""0.08"",
          ""scorePerMinute"": 136,
          ""avgKillsPerGame"": ""7.46"",
          ""totalGamesPlayed"": 13,
          ""maps"": [
            {
              ""name"": ""mp_jup_gw_fallout_wz"",
              ""mapName"": ""Popov Power"",
              ""kills"": 86,
              ""deaths"": 61,
              ""shots"": 1725,
              ""score"": 12415,
              ""timePlayed"": 5216,
              ""kdRatio"": ""1.41"",
              ""wins"": 0,
              ""loss"": 12,
              ""search"": 0,
              ""assists"": 12,
              ""winLossRatio"": ""0.00"",
              ""scorePerMinute"": 143,
              ""avgKillsPerGame"": ""7.17"",
              ""totalGamesPlayed"": 12
            },
            {
              ""name"": ""mp_jup_st_c_gw_wz"",
              ""mapName"": ""Orlov Military Base"",
              ""kills"": 11,
              ""deaths"": 6,
              ""shots"": 80,
              ""score"": 1570,
              ""timePlayed"": 951,
              ""kdRatio"": ""1.83"",
              ""wins"": 1,
              ""loss"": 0,
              ""search"": 0,
              ""assists"": 0,
              ""winLossRatio"": ""1.00"",
              ""scorePerMinute"": 99,
              ""avgKillsPerGame"": ""11.00"",
              ""totalGamesPlayed"": 1
            }
          ]
        }
      ],
      ""mapStats"": null,
      ""equipmentStats"": [],
      ""fieldUpgradeStats"": [],
      ""killStreaks"": [
        {
          ""name"": ""fuel_airstrike"",
          ""className"": null,
          ""kills"": 24,
          ""aiAgentKills"": 0,
          ""shots"": 0,
          ""hits"": 0,
          ""score"": 0,
          ""uses"": 0,
          ""hudImage"": null,
          ""imageIcon"": null,
          ""label"": null,
          ""classLabel"": null
        }
      ],
      ""matches"": [
        {
          ""matchId"": ""-2390979162768714625"",
          ""map"": ""mp_jup_favela"",
          ""mapName"": ""Favela"",
          ""mode"": ""sd"",
          ""topWeapon"": {
            ""name"": null,
            ""className"": null,
            ""kills"": 0,
            ""aiAgentKills"": 0,
            ""extracted"": 0,
            ""deaths"": 0,
            ""shots"": 0,
            ""headshots"": 0,
            ""damage"": 0,
            ""hits"": 0,
            ""kdRatio"": null,
            ""accuracy"": null,
            ""headshotsPercentage"": null,
            ""hudImage"": null,
            ""imageIcon"": null,
            ""label"": null,
            ""uses"": 0,
            ""classLabel"": null
          },
          ""genericStats"": {
            ""placement"": 0,
            ""score"": 1000,
            ""kills"": 9,
            ""deaths"": 4,
            ""damageDone"": 1525,
            ""assists"": 0,
            ""headshots"": 4,
            ""shots"": 78,
            ""hits"": 21,
            ""totalGamesPlayed"": null,
            ""avgKillsPerGame"": null,
            ""highestKillStreak"": 4,
            ""highestKillsPerGame"": null,
            ""playerUtcConnectTimeSeconds"": 1697370636,
            ""playerUtcDisconnectTimeSeconds"": 1697371534,
            ""scorePerMinute"": 67,
            ""timePlayed"": 898,
            ""totalTimePlayed"": 898,
            ""killDeathRatio"": ""2.25"",
            ""matchOutcome"": ""win"",
            ""alliesScore"": 6,
            ""axisScore"": 2,
            ""team"": ""allies"",
            ""team3Score"": null,
            ""team4Score"": null,
            ""essence"": null,
            ""revives"": null,
            ""lootedContainers"": null,
            ""zombieKills"": null,
            ""soldierKills"": null,
            ""bossKills"": null,
            ""eliteKills"": null,
            ""specialKills"": null,
            ""normalKills"": null,
            ""criticalKills"": null,
            ""papKills"": null,
            ""oneShotKills"": null,
            ""contractsCompleted"": null,
            ""totalWeaponsExtracted"": null,
            ""highestEssenceInOneMatch"": null,
            ""totalAcquisitionsExtracted"": null,
            ""totalSchematicsExtracted"": null,
            ""wins"": 0,
            ""losses"": 0,
            ""winLossRatio"": null
          },
          ""acquisitions"": null,
          ""schematics"": null
        }
      ],
      ""gamertag"": ""onetwoDom#5004080""
    }
  }
}"
yF4dDfEa,ERU-E1,KubiiCZ,JSON,Tuesday 31st of October 2023 04:13:57 AM CDT,"{
    ""typVykazu"": ""E1"",
    ""vykazy"": [
        {
            ""e1vykaz"": {
                ""e1Paliva"": {
                    ""paliva"": [
                        {
                            ""typPaliva"": ""Zemni plyn"",
                            ""jednotkaPaliva"": ""MWh"",
                            ""vyhrevnostHodnota"": 35.546,
                            ""vyhrevnostJednotka"": ""MJ/m3"",
                            ""porizeniPalivaCelkem"": 47.592,
                            ""spotrebaPalivaVyrobaTepla"": 25.609,
                            ""spotrebaPalivaVyrobaElektriny"": 21.983
                        }
                    ]
                },
                ""pocetPaliv"": 1,
                ""e1Komentar"": {
                    ""komentar"": """"
                },
                ""e1BilanceKvet"": {
                    ""bilanceKvet"": [
                        {
                            ""palivoPouziteNaKvet"": ""Zemni plyn"",
                            ""vsazkaPalivaHodnota"": 47.592,
                            ""vyrobaElektrinyBrutto"": 15.738,
                            ""dodavkaUzitecnehoTepla"": 66
                        }
                    ]
                },
                ""e1TechnologieKvet"": {
                    ""technologieKvet"": [
                        {
                            ""technologiKvet"": ""spalovac\u00ed p\u00edstov\u00fd motor s rekuperac\u00ed tepla"",
                            ""instalovanyTepelnyVykon"": 0.286,
                            ""instalovanyElektrickyVykon"": 0.2
                        }
                    ],
                    ""pocetTechnologii"": 1
                },
                ""e1BilanceDodavekAZdroju"": {
                    ""bilanceDodavekAZdrojuI"": [
                        {
                            ""saldo"": 0,
                            ""ztraty"": 0,
                            ""nakupOdber"": 0.285,
                            ""bilanceZdroju"": ""elektro"",
                            ""bilancniRozdil"": 0,
                            ""vlastniSpotrebaCelkem"": 0.349,
                            ""spotrebaElektrinyNaPrecerpavaniVPve"": 0
                        },
                        {
                            ""saldo"": 0,
                            ""ztraty"": 0,
                            ""nakupOdber"": 0,
                            ""bilanceZdroju"": ""teplo"",
                            ""bilancniRozdil"": 0,
                            ""vlastniSpotrebaCelkem"": 0,
                            ""spotrebaElektrinyNaPrecerpavaniVPve"": 0
                        }
                    ],
                    ""bilanceDodavekAZdrojuII"": [
                        {
                            ""doprava"": 0,
                            ""ostatni"": 0,
                            ""prumysl"": 0,
                            ""domacnosti"": 0,
                            ""energetika"": 0,
                            ""stavebnictvi"": 0,
                            ""bilanceDodavek"": ""elektro"",
                            ""zemedelstviALesnictvi"": 0,
                            ""dodavkyObchodnimSubjektum"": 15.674,
                            ""obchodSluzbySkolstviZdravotnictvi"": 0
                        },
                        {
                            ""doprava"": 0,
                            ""ostatni"": 0,
                            ""prumysl"": 0,
                            ""domacnosti"": 0,
                            ""energetika"": 0,
                            ""stavebnictvi"": 0,
                            ""bilanceDodavek"": ""teplo"",
                            ""zemedelstviALesnictvi"": 0,
                            ""dodavkyObchodnimSubjektum"": 66,
                            ""obchodSluzbySkolstviZdravotnictvi"": 0
                        }
                    ]
                },
                ""e1VyrobaADodavkaElektrinyATepla"": {
                    ""vyrobaADodavkaElektrinyATepla"": [
                        {
                            ""typ"": ""teplo"",
                            ""ztraty"": 0,
                            ""bruttoVyroba"": 66,
                            ""pouzitePalivo"": ""Zemni plyn"",
                            ""bilancniRozdil"": 0,
                            ""primeDodavkyCizimSubjektum"": 66,
                            ""dodavkyDoVlastnihoPodnikuNeboZarizeni"": 0,
                            ""technologickaVlastniSpotrebaNaVyrobuTepla"": 0,
                            ""technologickaVlastniSpotrebaNaVyrobuElektriny"": 0
                        },
                        {
                            ""typ"": ""elektro"",
                            ""ztraty"": 0,
                            ""bruttoVyroba"": 15.738,
                            ""pouzitePalivo"": ""Zemni plyn"",
                            ""bilancniRozdil"": 0,
                            ""primeDodavkyCizimSubjektum"": 15.674,
                            ""dodavkyDoVlastnihoPodnikuNeboZarizeni"": 0,
                            ""technologickaVlastniSpotrebaNaVyrobuTepla"": 0.034,
                            ""technologickaVlastniSpotrebaNaVyrobuElektriny"": 0.03
                        }
                    ]
                },
                ""e1TechnologieAInstalovanyVykonVyrobny"": {
                    ""kraj"": ""Kr\u00e1lov\u00e9hradeck\u00fd"",
                    ""idVyrobny"": ""32867_T11"",
                    ""nazevVyrobny"": ""KJ - Jarom\u011b\u0159"",
                    ""pripojenoKPsDs"": ""\u010cEZ Distribuce, a.s."",
                    ""technologieVyrobny"": ""Ostatn\u00ed (OST)"",
                    ""celkovyInstalovanyTepelnyVykonMWt"": 0.286,
                    ""celkovyInstalovanyElektrickyVykonMWe"": 0.2
                }
            },
            ""identifikacniUdajeVykazu"": {
                ""ico"": ""29060109"",
                ""typVykazu"": ""E1"",
                ""typPeriody"": ""MONTH"",
                ""cisloLicence"": [
                    ""111018325"",
                    ""311018326""
                ],
                ""vykazovanyRok"": 2023,
                ""datovaSchranka"": """",
                ""drzitelLicence"": ""\u010cez Energo s.r.o."",
                ""kontaktniTelefon"": ""+420721055966"",
                ""vykazovanaPerioda"": 6,
                ""odpovednyPracovnik"": ""Jakub Urban"",
                ""datumVytvoreniVykazu"": ""2023-10-31""
            }
        },
        {
            ""e1vykaz"": {
                ""e1Paliva"": {
                    ""paliva"": [
                        {
                            ""typPaliva"": ""Zemni plyn"",
                            ""jednotkaPaliva"": ""MWh"",
                            ""vyhrevnostHodnota"": 35.486,
                            ""vyhrevnostJednotka"": ""MJ/m3"",
                            ""porizeniPalivaCelkem"": 633.42,
                            ""spotrebaPalivaVyrobaTepla"": 349.829,
                            ""spotrebaPalivaVyrobaElektriny"": 283.591
                        }
                    ]
                },
                ""pocetPaliv"": 1,
                ""e1Komentar"": {
                    ""komentar"": """"
                },
                ""e1BilanceKvet"": {
                    ""bilanceKvet"": [
                        {
                            ""palivoPouziteNaKvet"": ""Zemni plyn"",
                            ""vsazkaPalivaHodnota"": 633.42,
                            ""vyrobaElektrinyBrutto"": 236.667,
                            ""dodavkaUzitecnehoTepla"": 1051
                        }
                    ]
                },
                ""e1TechnologieKvet"": {
                    ""technologieKvet"": [
                        {
                            ""technologiKvet"": ""spalovac\u00ed p\u00edstov\u00fd motor s rekuperac\u00ed tepla"",
                            ""instalovanyTepelnyVykon"": 2.473,
                            ""instalovanyElektrickyVykon"": 2.014
                        }
                    ],
                    ""pocetTechnologii"": 1
                },
                ""e1BilanceDodavekAZdroju"": {
                    ""bilanceDodavekAZdrojuI"": [
                        {
                            ""saldo"": 0,
                            ""ztraty"": 0,
                            ""nakupOdber"": 5.712,
                            ""bilanceZdroju"": ""elektro"",
                            ""bilancniRozdil"": 0,
                            ""vlastniSpotrebaCelkem"": 9.954,
                            ""spotrebaElektrinyNaPrecerpavaniVPve"": 0
                        },
                        {
                            ""saldo"": 0,
                            ""ztraty"": 0,
                            ""nakupOdber"": 0,
                            ""bilanceZdroju"": ""teplo"",
                            ""bilancniRozdil"": 0,
                            ""vlastniSpotrebaCelkem"": 0,
                            ""spotrebaElektrinyNaPrecerpavaniVPve"": 0
                        }
                    ],
                    ""bilanceDodavekAZdrojuII"": [
                        {
                            ""doprava"": 0,
                            ""ostatni"": 0,
                            ""prumysl"": 0,
                            ""domacnosti"": 0,
                            ""energetika"": 0,
                            ""stavebnictvi"": 0,
                            ""bilanceDodavek"": ""elektro"",
                            ""zemedelstviALesnictvi"": 0,
                            ""dodavkyObchodnimSubjektum"": 232.425,
                            ""obchodSluzbySkolstviZdravotnictvi"": 0
                        },
                        {
                            ""doprava"": 0,
                            ""ostatni"": 0,
                            ""prumysl"": 0,
                            ""domacnosti"": 0,
                            ""energetika"": 0,
                            ""stavebnictvi"": 0,
                            ""bilanceDodavek"": ""teplo"",
                            ""zemedelstviALesnictvi"": 0,
                            ""dodavkyObchodnimSubjektum"": 1051,
                            ""obchodSluzbySkolstviZdravotnictvi"": 0
                        }
                    ]
                },
                ""e1VyrobaADodavkaElektrinyATepla"": {
                    ""vyrobaADodavkaElektrinyATepla"": [
                        {
                            ""typ"": ""teplo"",
                            ""ztraty"": 0,
                            ""bruttoVyroba"": 1051,
                            ""pouzitePalivo"": ""Zemni plyn"",
                            ""bilancniRozdil"": 0,
                            ""primeDodavkyCizimSubjektum"": 1051,
                            ""dodavkyDoVlastnihoPodnikuNeboZarizeni"": 0,
                            ""technologickaVlastniSpotrebaNaVyrobuTepla"": 0,
                            ""technologickaVlastniSpotrebaNaVyrobuElektriny"": 0
                        },
                        {
                            ""typ"": ""elektro"",
                            ""ztraty"": 0,
                            ""bruttoVyroba"": 236.667,
                            ""pouzitePalivo"": ""Zemni plyn"",
                            ""bilancniRozdil"": 0,
                            ""primeDodavkyCizimSubjektum"": 232.425,
                            ""dodavkyDoVlastnihoPodnikuNeboZarizeni"": 0,
                            ""technologickaVlastniSpotrebaNaVyrobuTepla"": 2.343,
                            ""technologickaVlastniSpotrebaNaVyrobuElektriny"": 1.899
                        }
                    ]
                },
                ""e1TechnologieAInstalovanyVykonVyrobny"": {
                    ""kraj"": ""Vyso\u010dina"",
                    ""idVyrobny"": ""09594_T11"",
                    ""nazevVyrobny"": ""KJ - Jihlava, U B\u0159\u00edzek"",
                    ""pripojenoKPsDs"": ""EG.D, a.s."",
                    ""technologieVyrobny"": ""Ostatn\u00ed (OST)"",
                    ""celkovyInstalovanyTepelnyVykonMWt"": 2.473,
                    ""celkovyInstalovanyElektrickyVykonMWe"": 2.014
                }
            },
            ""identifikacniUdajeVykazu"": {
                ""ico"": ""29060109"",
                ""typVykazu"": ""E1"",
                ""typPeriody"": ""MONTH"",
                ""cisloLicence"": [
                    ""111018325"",
                    ""311018326""
                ],
                ""vykazovanyRok"": 2023,
                ""datovaSchranka"": """",
                ""drzitelLicence"": ""\u010cez Energo s.r.o."",
                ""kontaktniTelefon"": ""+420721055966"",
                ""vykazovanaPerioda"": 6,
                ""odpovednyPracovnik"": ""Jakub Urban"",
                ""datumVytvoreniVykazu"": ""2023-10-31""
            }
        }
    ]
}"
zBjTk2xv,Random Date Generator Roblox on a Part,scriptingtales,Lua,Tuesday 31st of October 2023 03:50:13 AM CDT,"
--Converted with ttyyuu12345's model to script plugin v4
function sandbox(var,func)
	local env = getfenv(func)
	local newenv = setmetatable({},{
		__index = function(self,k)
			if k==""script"" then
				return var
			else
				return env[k]
			end
		end,
	})
	setfenv(func,newenv)
	return func
end
cors = {}
mas = Instance.new(""Model"",game:GetService(""Lighting""))
Part0 = Instance.new(""Part"")
SurfaceGui1 = Instance.new(""SurfaceGui"")
Frame2 = Instance.new(""Frame"")
TextButton3 = Instance.new(""TextButton"")
LocalScript4 = Instance.new(""LocalScript"")
TextLabel5 = Instance.new(""TextLabel"")
TextLabel6 = Instance.new(""TextLabel"")
TextLabel7 = Instance.new(""TextLabel"")
TextLabel8 = Instance.new(""TextLabel"")
TextLabel9 = Instance.new(""TextLabel"")
TextLabel10 = Instance.new(""TextLabel"")
TextLabel11 = Instance.new(""TextLabel"")
TextLabel12 = Instance.new(""TextLabel"")
TextLabel13 = Instance.new(""TextLabel"")
TextLabel14 = Instance.new(""TextLabel"")
LocalScript15 = Instance.new(""LocalScript"")
Part0.Name = ""Hold""
Part0.Parent = mas
Part0.CFrame = CFrame.new(29, 6, 62.5, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part0.Position = Vector3.new(29, 6, 62.5)
Part0.Size = Vector3.new(18, 12, 1)
Part0.Anchored = true
Part0.BackSurface = Enum.SurfaceType.Studs
Part0.BottomSurface = Enum.SurfaceType.Studs
Part0.FrontSurface = Enum.SurfaceType.Studs
Part0.LeftSurface = Enum.SurfaceType.Studs
Part0.RightSurface = Enum.SurfaceType.Studs
SurfaceGui1.Parent = Part0
SurfaceGui1.ClipsDescendants = true
SurfaceGui1.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
SurfaceGui1.MaxDistance = 50
Frame2.Parent = SurfaceGui1
Frame2.Size = UDim2.new(0, 900, 0, 600)
Frame2.BackgroundColor = BrickColor.new(""Institutional white"")
Frame2.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton3.Name = ""Generator""
TextButton3.Parent = Frame2
TextButton3.Position = UDim2.new(0.349999994, 0, 0.665000021, 0)
TextButton3.Size = UDim2.new(0, 245, 0, 54)
TextButton3.BackgroundColor = BrickColor.new(""Silver flip/flop"")
TextButton3.BackgroundColor3 = Color3.new(0.533333, 0.533333, 0.533333)
TextButton3.Font = Enum.Font.SourceSansLight
TextButton3.FontSize = Enum.FontSize.Size14
TextButton3.Text = ""Generate Random Date""
TextButton3.TextColor = BrickColor.new(""Institutional white"")
TextButton3.TextColor3 = Color3.new(1, 1, 1)
TextButton3.TextScaled = true
TextButton3.TextSize = 14
TextButton3.TextWrap = true
TextButton3.TextWrapped = true
LocalScript4.Name = ""Script""
LocalScript4.Parent = TextButton3
table.insert(cors,sandbox(LocalScript4,function()
script.Parent.MouseButton1Click:Connect(function()
	
	
	local MonthRandomizer = math.random(1, 12)
	
	local DayRandomizer = math.random(1, 31)
	
	
	local DayFEBrandomizer = math.random(1, 28)
	local DayFEBLEAPrandomizer = math.random(1, 29)
	
	
	local YearRandomizer = math.random(1600, 2100)
	
	
	
	local MonthText = script.Parent.Parent.Month.Text
	
	local DayText = script.Parent.Parent.Day.Text
	
	local YearText = script.Parent.Parent.Year.Text
	
	
	
	local January = 1
	local February = 2
	local March = 3
	local April = 4
	local May = 5
	local June = 6
	local July = 7
	local August = 8
	local September = 9
	local October = 10
	local November = 11
	local December = 12
	
	script.Parent.Parent.Day.Text = DayRandomizer

	script.Parent.Parent.Month.Text = MonthRandomizer

	script.Parent.Parent.Year.Text = YearRandomizer
	
	
-------------------- SEPARATOR ---------------------	


	script.Parent.Parent.DayNAL.Text = DayRandomizer

	script.Parent.Parent.MonthNal.Text = MonthRandomizer

	script.Parent.Parent.YearNAL.Text = YearRandomizer
	
	
	
	
	local JanuaryTEXT = ""Jan""
	local FebruaryTEXT = ""Feb""
	local MarchTEXT = ""Mar""
	local AprilTEXT = ""Apr""
	local MayTEXT = ""May""
	local JuneTEXT = ""Jun""
	local JulyTEXT = ""Jul""
	local AugustTEXT = ""Aug""
	local SeptemberTEXT = ""Sept""
	local OctoberTEXT = ""Oct""
	local NovemberTEXT = ""Nov""
	local DecemberTEXT = ""Dec""
	
	
	
	
	if MonthRandomizer == 1 then
		script.Parent.Parent.MonthNal.Text = JanuaryTEXT
	end
	
	if MonthRandomizer == 2 then
		script.Parent.Parent.MonthNal.Text = FebruaryTEXT
		
		if MonthText == FebruaryTEXT then
			DayText = DayFEBrandomizer
			if YearRandomizer % 4 == 0 then
				if YearRandomizer % 100 == 0 then
					if YearRandomizer % 400 == 0 then
						
					end
				end
			else
				
			end
		end
	end
	
	if MonthRandomizer == 3 then
		script.Parent.Parent.MonthNal.Text = MarchTEXT
	end
	
	if MonthRandomizer == 4 then
		script.Parent.Parent.MonthNal.Text = AprilTEXT
	end
	
	if MonthRandomizer == 5 then
		script.Parent.Parent.MonthNal.Text = MayTEXT
	end
	
	if MonthRandomizer == 6 then
		script.Parent.Parent.MonthNal.Text = JuneTEXT
	end
	
	if MonthRandomizer == 7 then
		script.Parent.Parent.MonthNal.Text = JulyTEXT
	end
	
	if MonthRandomizer == 8 then
		script.Parent.Parent.MonthNal.Text = AugustTEXT
	end
	
	if MonthRandomizer == 9 then
		script.Parent.Parent.MonthNal.Text = SeptemberTEXT
	end
	
	if MonthRandomizer == 10 then
		script.Parent.Parent.MonthNal.Text = OctoberTEXT
	end
	
	if MonthRandomizer == 11 then
		script.Parent.Parent.MonthNal.Text = NovemberTEXT
	end
	
	if MonthRandomizer == 12 then
		script.Parent.Parent.MonthNal.Text = DecemberTEXT
	end
end)
end))
TextLabel5.Name = ""FrameLabel""
TextLabel5.Parent = Frame2
TextLabel5.Position = UDim2.new(0.200000003, 0, 0, 0)
TextLabel5.Size = UDim2.new(0, 547, 0, 74)
TextLabel5.BackgroundColor = BrickColor.new(""Institutional white"")
TextLabel5.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel5.Font = Enum.Font.SourceSansLight
TextLabel5.FontSize = Enum.FontSize.Size14
TextLabel5.Text = ""Random Date Generator""
TextLabel5.TextColor = BrickColor.new(""Really black"")
TextLabel5.TextColor3 = Color3.new(0, 0, 0)
TextLabel5.TextScaled = true
TextLabel5.TextSize = 14
TextLabel5.TextWrap = true
TextLabel5.TextWrapped = true
TextLabel6.Name = ""Month""
TextLabel6.Parent = Frame2
TextLabel6.Position = UDim2.new(0.190607741, 0, 0.245019913, 0)
TextLabel6.Size = UDim2.new(0, 150, 0, 74)
TextLabel6.BackgroundColor = BrickColor.new(""Institutional white"")
TextLabel6.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel6.Font = Enum.Font.SourceSansLight
TextLabel6.FontSize = Enum.FontSize.Size14
TextLabel6.Text = ""1""
TextLabel6.TextColor = BrickColor.new(""Really black"")
TextLabel6.TextColor3 = Color3.new(0, 0, 0)
TextLabel6.TextScaled = true
TextLabel6.TextSize = 14
TextLabel6.TextWrap = true
TextLabel6.TextWrapped = true
TextLabel7.Name = ""Day""
TextLabel7.Parent = Frame2
TextLabel7.Position = UDim2.new(0.436464101, 0, 0.247011945, 0)
TextLabel7.Size = UDim2.new(0, 90, 0, 74)
TextLabel7.BackgroundColor = BrickColor.new(""Institutional white"")
TextLabel7.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel7.Font = Enum.Font.SourceSansLight
TextLabel7.FontSize = Enum.FontSize.Size14
TextLabel7.Text = ""24""
TextLabel7.TextColor = BrickColor.new(""Really black"")
TextLabel7.TextColor3 = Color3.new(0, 0, 0)
TextLabel7.TextScaled = true
TextLabel7.TextSize = 14
TextLabel7.TextWrap = true
TextLabel7.TextWrapped = true
TextLabel8.Name = ""Year""
TextLabel8.Parent = Frame2
TextLabel8.Position = UDim2.new(0.613259614, 0, 0.245019898, 0)
TextLabel8.Size = UDim2.new(0, 164, 0, 74)
TextLabel8.BackgroundColor = BrickColor.new(""Institutional white"")
TextLabel8.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel8.Font = Enum.Font.SourceSansLight
TextLabel8.FontSize = Enum.FontSize.Size14
TextLabel8.Text = ""2009""
TextLabel8.TextColor = BrickColor.new(""Really black"")
TextLabel8.TextColor3 = Color3.new(0, 0, 0)
TextLabel8.TextScaled = true
TextLabel8.TextSize = 14
TextLabel8.TextWrap = true
TextLabel8.TextWrapped = true
TextLabel9.Name = ""Comma""
TextLabel9.Parent = Frame2
TextLabel9.Position = UDim2.new(0.555248618, 0, 0.430278867, 0)
TextLabel9.Size = UDim2.new(0, 16, 0, 74)
TextLabel9.BackgroundColor = BrickColor.new(""Institutional white"")
TextLabel9.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel9.Font = Enum.Font.SourceSansLight
TextLabel9.FontSize = Enum.FontSize.Size14
TextLabel9.Text = "",""
TextLabel9.TextColor = BrickColor.new(""Really black"")
TextLabel9.TextColor3 = Color3.new(0, 0, 0)
TextLabel9.TextScaled = true
TextLabel9.TextSize = 14
TextLabel9.TextWrap = true
TextLabel9.TextWrapped = true
TextLabel10.Name = ""Slash""
TextLabel10.Parent = Frame2
TextLabel10.Position = UDim2.new(0.569060743, 0, 0.245019928, 0)
TextLabel10.Size = UDim2.new(0, 32, 0, 74)
TextLabel10.BackgroundColor = BrickColor.new(""Institutional white"")
TextLabel10.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel10.Font = Enum.Font.SourceSansLight
TextLabel10.FontSize = Enum.FontSize.Size14
TextLabel10.Text = ""/""
TextLabel10.TextColor = BrickColor.new(""Really black"")
TextLabel10.TextColor3 = Color3.new(0, 0, 0)
TextLabel10.TextScaled = true
TextLabel10.TextSize = 14
TextLabel10.TextWrap = true
TextLabel10.TextWrapped = true
TextLabel11.Name = ""Slash""
TextLabel11.Parent = Frame2
TextLabel11.Position = UDim2.new(0.361878484, 0, 0.245019928, 0)
TextLabel11.Size = UDim2.new(0, 32, 0, 74)
TextLabel11.BackgroundColor = BrickColor.new(""Institutional white"")
TextLabel11.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel11.Font = Enum.Font.SourceSansLight
TextLabel11.FontSize = Enum.FontSize.Size14
TextLabel11.Text = ""/""
TextLabel11.TextColor = BrickColor.new(""Really black"")
TextLabel11.TextColor3 = Color3.new(0, 0, 0)
TextLabel11.TextScaled = true
TextLabel11.TextSize = 14
TextLabel11.TextWrap = true
TextLabel11.TextWrapped = true
TextLabel12.Name = ""YearNAL""
TextLabel12.Parent = Frame2
TextLabel12.Position = UDim2.new(0.584254146, 0, 0.426294804, 0)
TextLabel12.Size = UDim2.new(0, 164, 0, 74)
TextLabel12.BackgroundColor = BrickColor.new(""Institutional white"")
TextLabel12.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel12.Font = Enum.Font.SourceSansLight
TextLabel12.FontSize = Enum.FontSize.Size14
TextLabel12.Text = ""2009""
TextLabel12.TextColor = BrickColor.new(""Really black"")
TextLabel12.TextColor3 = Color3.new(0, 0, 0)
TextLabel12.TextScaled = true
TextLabel12.TextSize = 14
TextLabel12.TextWrap = true
TextLabel12.TextWrapped = true
TextLabel13.Name = ""DayNAL""
TextLabel13.Parent = Frame2
TextLabel13.Position = UDim2.new(0.43784532, 0, 0.430278897, 0)
TextLabel13.Size = UDim2.new(0, 90, 0, 74)
TextLabel13.BackgroundColor = BrickColor.new(""Institutional white"")
TextLabel13.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel13.Font = Enum.Font.SourceSansLight
TextLabel13.FontSize = Enum.FontSize.Size14
TextLabel13.Text = ""24""
TextLabel13.TextColor = BrickColor.new(""Really black"")
TextLabel13.TextColor3 = Color3.new(0, 0, 0)
TextLabel13.TextScaled = true
TextLabel13.TextSize = 14
TextLabel13.TextWrap = true
TextLabel13.TextWrapped = true
TextLabel14.Name = ""MonthNal""
TextLabel14.Parent = Frame2
TextLabel14.Position = UDim2.new(0.220994473, 0, 0.430278897, 0)
TextLabel14.Size = UDim2.new(0, 150, 0, 74)
TextLabel14.BackgroundColor = BrickColor.new(""Institutional white"")
TextLabel14.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel14.Font = Enum.Font.SourceSansLight
TextLabel14.FontSize = Enum.FontSize.Size14
TextLabel14.Text = ""Jan""
TextLabel14.TextColor = BrickColor.new(""Really black"")
TextLabel14.TextColor3 = Color3.new(0, 0, 0)
TextLabel14.TextScaled = true
TextLabel14.TextSize = 14
TextLabel14.TextWrap = true
TextLabel14.TextWrapped = true
LocalScript15.Name = ""Dragify""
LocalScript15.Parent = Frame2
table.insert(cors,sandbox(LocalScript15,function()
local Frame = script.Parent

Frame.Active = true	
Frame.Selectable = true
Frame.Draggable = true
end))
for i,v in pairs(mas:GetChildren()) do
	v.Parent = workspace
	pcall(function() v:MakeJoints() end)
end
mas:Destroy()
for i,v in pairs(cors) do
	spawn(function()
		pcall(v)
	end)
end
"
HGvwkUQB,Untitled,DraconiusNX,JSON,Tuesday 31st of October 2023 03:45:21 AM CDT,"POST https://web.test-shop-volkswagen-we.com/api/v1/send/954be19d-bcb1-4cd9-89b4-42cc3ec4df61/mail/payment

POST data:
{
    ""brand"": ""VW"",
    ""mailType"": ""activation"",
	""invoiceData"": {		
		""invoiceDate"": ""1554984406665"",
		""invoiceGrossAmount"": 202.48,
		""invoiceNetAmount"": 202.48,
		""invoiceNumber"": ""12345678912345678912"",
		""invoiceVatAmount"": ""20"",
		""invoiceVatRate"": ""20""
	},
     ""customerInformation"": {
          ""customerID"": ""954be19d-bcb1-4cd9-89b4-42cc3ec4df61"",
		""addr1"": ""12 Main St."",
		""company"": ""Great Company"",
		""city"": ""London"",								
		""countryCode"": ""GB"",
		""customerType"": ""COMPANY"",
		""email"": ""senem.ulvieva@yahoo.com"",		
		""salutation"": ""MR"",
		""firstName"": ""John"",
		""lastName"": ""Smith"",
		""postcode"": ""7000"",
		""taxId"": ""BE0414445663""
	},
	""orderDate"": ""2021-03-31T09:32:24.781Z"",
	""orderIdentifier"": ""A-SHO-89-DE-DE"",
	""orderLanguageCode"": ""DE"",
	""orderShopCountry"": ""DE"",
	""orderPositions"": [{
	        ""additionalItemData"": {
            ""brand"": ""VW"",
            ""dealerVoucherAmount"": ""195.97"",
            ""dealerVoucherAmountExclusiveReduce"": ""176.37"",
            ""dealerVoucherOpenAmount"": ""195.97"",
            ""dealerVoucherReferenceCode"": ""45578b66-63a0-4a97-9b2e-0ffeeda5757f"",
            ""model"": ""5sqctv"",
            ""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance_SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
            ""priceVoucherReduce"": ""16.46"",
            ""priceVoucherReduceVat"": ""3.14"",
            ""vin"": ""5AD9X7658FSR44466""
        },
        ""articleLicense"": {
            ""articleRunDuration"": ""lifetime"",
            ""salesItemGroup1"": ""APP"",
            ""salesItemName"": ""Tasty Cotton Car"",
            ""salesItemNumber"": ""DMD95_ia_dnfbm"",
            ""salesItemTotalGrossAmount"": 195.97,
            ""salesItemTotalNetAmount"": 195.97
        },
        ""positionNumber"": -1
    },
		{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092103""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		},
		{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092103""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		},
				{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092103""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		},
		{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092103""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		},
				{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092104""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		},
		{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092104""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		},
		{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092104""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		},
		{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092104""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		},
				{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092104""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		},
				{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092105""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		},
		{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092105""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		},
				{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092105""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		},
		{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092105""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		},
				{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092105""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		},
				{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092106""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		},
		{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092106""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		},
				{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092106""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		},
				{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092107""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		},
		{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092107""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		},
				{
			""positionNumber"": 0,
			""additionalItemData"": {
				""modelName"": ""SKODA_EEC_1_SK38_MIB3_OI_OCU3_48_20_Test_Rack_Sloup_Advance"",
				""vin"": ""BVWDNKDEV20092107""
			},
			""articleLicense"": {
				""articleRunDuration"": ""1m"",
				""salesItemName"": ""MS guide and inform"",
				""salesItemNumber"": ""NET.500.002.B"",
				""salesItemTotalGrossAmount"": 202.48,
				""salesItemTotalNetAmount"": 102.48,
				""itemActivationDate"": 1606176000000,
				""itemExpirationDate"": 1669248000000
			}
		}
],
	""paymentData"": {
		""paymentAmount"": ""15"",
		""paymentCurrencyCode"": ""EUR"",
		""paymentType"": ""CC_VISA""
	},
    ""additionalOrderData"": [
    		{ 
    		""name"": ""VatCountryOrigin"", 
    		""value"": ""GB"" 
    		}
    	]
}

[no cookies]"
WmCFCfwB,Untitled,sissou123,JavaScript,Tuesday 31st of October 2023 03:29:13 AM CDT,"

function sleep(ms) { return new Promise(resolve => setTimeout(resolve, ms)); } What is the JavaScript version of sleep()? In the w3school documentation for setTimeout 

function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
 
window.addEventListener('load', async function() {
    'use strict';
    debugger;
    const cells = document.getElementsByClassName(""cDIES"");
 
    for (var i = 0; i < cells.length ; i++) {
        var cell = cells[i];
        cell.click();
    }
    const currentDay = document.getElementsByClassName(""cDIES  currentDay"")[0];
    currentDay.click();
 https://cuty.io/emX3irzm67

"
J6pH9W3h,Untitled,pasholnahuy,Python,Tuesday 31st of October 2023 03:11:48 AM CDT,"def task_2(orders, reviews):
    
    df = orders.merge(reviews, on = 'order_id')
    df['order_delivered_carrier_date'] = pd.to_datetime(df['order_delivered_carrier_date']).dt.date

    df['order_delivered_carrier_date'].dropna(inplace = True)
    df.drop_duplicates()
    grouped_df = df.groupby(['order_delivered_carrier_date', 'order_status']).agg({'order_id':'count'}).reset_index()
    grouped_df.rename(columns = {'order_id': 'order_count', 'order_delivered_carrier_date': 'date'}, inplace = True)
    fig = px.histogram(grouped_df, x= ""date"", y = ""order_count"", color=""order_status"", histfunc=""avg"")
    fig.update_layout(
        xaxis_rangeslider_visible=True
    )
    fig.show()
    my_reviews = copy.deepcopy(reviews)
    my_reviews['review_answer_timestamp'] = pd.to_datetime(my_reviews['review_answer_timestamp']).dt.date
    grouped_reviews = my_reviews.groupby(['review_answer_timestamp']).agg({'review_score':'mean'}).reset_index()
    grouped_reviews.rename(columns = {'review_answer_timestamp' : 'review_date'}, inplace = True)

    fig2 = px.histogram(grouped_reviews, x= ""review_date"", y = 'review_score', histfunc = 'avg')
    fig2.update_layout(
        xaxis_rangeslider_visible=True
    )
    fig2.show()"
tJECmrqd,Untitled,Artem_Atamanchuk,Python,Tuesday 31st of October 2023 03:06:45 AM CDT,"[67812, 22088, 44311, 22262, 48602, 21133, 20455, 92901, 65800, 45816, 58167, 167477, 15501, 218386, 82918, 214423, 146970]"
LvyBzztY,Lab8,V15H4L,MatLab,Tuesday 31st of October 2023 03:05:01 AM CDT,"%------------------------------------------Task1
clc;
clear all;

x = [1,2];
N = 2;

X = zeros(1,2);

X(1) = x(1) + x(2);
X(2) = x(1) - x(2);

y = fft(x);

figure
plot(x);
figure
plot(y);


%-------------------------------------------Task2
clc;
clear all;
close all;
x = [1,2,3,4];
N = length(x);
k = [0,1,2,3];
Wkn = zeros(1,length(k));
for i = 1 : length(x)
    Wkn(i) = exp(-2*1i*pi*k(i)/N);
end
X = zeros(1,4);
V11 =  x(1) + Wkn(1)*x(3);
V12 =  x(1) - Wkn(1)*x(3);
V13 =  x(2) + Wkn(1)*x(4);
V14 =  x(2) - Wkn(1)*x(4);
X(1) =  V11 + Wkn(1)*V13;
X(2) = V12 + Wkn(2)*V14;
X(3) =  V11 - V13;
X(4) =  V14*Wkn(2) + V12;
Y = fft(x);
subplot(2,1,1)
stem(X);
title('My FFT');
subplot(2,1,2);
stem(Y);
title(""In-built FFT"");

%---------------------------------------------Task3
clc;
clear all;
close all;
x = [1, 2, 3, 4];
X=x;
N = length(x);
Half = 1;
V = log2(N);
butterfly_no = N/2;
x = [x, zeros(1, 2^V -N)];
x = bitrevorder(x);
for level = 1: V
for index = 0: 2^level:N-1
for n = 0 : (Half -1)
position = n + index + 1;
power = (2^(V-level))*n;
w = exp(-2*1i* pi * power /N);
a = x(position) + x(position + Half).*w;
b = x(position) - x(position + Half).*w;
x(position) = a;
x(position + Half) = b;
end
end
Half = Half * 2;
end
subplot(3, 1, 1)
stem(X);
title('Input Signal');
subplot(3,1, 2)
stem(abs(x));
title('myFFT');
subplot(3,1,3)
Y = fft(X)
stem(abs(Y));
title('In-built FFT');

%---------------------------------------------Task4
clc;
clear all;
close all;
n=[2 4 8 16 32 64 128];
N=length(n);
speed=zeros(1,N);
for i=1:N
    speed(i)=(n(i)*n(i))/((n(i)/2)*log2(n(i)));
end    
stem(n,speed);
ylabel('Speed-factor');
xlabel('n');
title('Speed-factor V/s N - 21ucc030');"
7gjkXU0L,Roblox Angular Diameter Test Script,scriptingtales,Lua,Tuesday 31st of October 2023 03:01:05 AM CDT,"
--Converted with ttyyuu12345's model to script plugin v4
function sandbox(var,func)
	local env = getfenv(func)
	local newenv = setmetatable({},{
		__index = function(self,k)
			if k==""script"" then
				return var
			else
				return env[k]
			end
		end,
	})
	setfenv(func,newenv)
	return func
end
cors = {}
mas = game.StarterPlayer.StarterCharacterScripts
LocalScript0 = Instance.new(""LocalScript"")
SelectionBox1 = Instance.new(""SelectionBox"")
ModuleScript2 = Instance.new(""ModuleScript"")
ModuleScript3 = Instance.new(""ModuleScript"")
ModuleScript4 = Instance.new(""ModuleScript"")
ModuleScript5 = Instance.new(""ModuleScript"")
ModuleScript6 = Instance.new(""ModuleScript"")
LocalScript0.Name = ""Tutorial""
LocalScript0.Parent = mas
table.insert(cors,sandbox(LocalScript0,function()
local p = game:GetService(""Players"").LocalPlayer
local m = p:GetMouse()
local cam = workspace.CurrentCamera

local selObj = nil
local camCframe = nil
local oS = nil
local coolnessOffset = Vector3.new()

local function canMove(ob)
	return ob.Name == ""Object""
end

local function getCP(r, p)
	local rO, D = r.Origin - p, r.Direction
	return rO - ( rO:Dot(D)/D:Dot(D) ) * D
end

local function angleBetween(v1, v2)
	return math.acos(v1:Dot(v2)/(v1.magnitude * v2.magnitude))
end


local e = game:GetService(""ReplicatedStorage"").UpdPhys
local u = game:GetService(""ReplicatedStorage"").US
local rr = require(script:WaitForChild(""RotatedRegion3""))

m.Button1Down:Connect(function()
	if m.Target and canMove(m.Target) then
		m.Target.CanCollide = false
		camCframe = cam.CFrame:ToObjectSpace(m.Target.CFrame)
		oS = m.Target.Size
		coolnessOffset = -getCP(m.UnitRay, m.Target.Position)
		e:FireServer(m.Target)
		--m.Target.Anchored = true
		m.Target.Velocity = Vector3.new()
		m.Target.RotVelocity = Vector3.new()
		selObj = m.Target
	end
end)

m.Button1Up:Connect(function()
	if selObj then
		--selObj.Anchored = false
		selObj.CanCollide = true
		e:FireServer(m.Target)
	end
	selObj = nil
end)

game:GetService(""RunService"").RenderStepped:Connect(function(dt)
	coolnessOffset = coolnessOffset:Lerp(Vector3.new(), 0.2)
end)

game:GetService(""RunService"").RenderStepped:Connect(function(dt)
	if selObj then
		selObj.CFrame = cam.CFrame:ToWorldSpace(camCframe)
		local ray = Ray.new(cam.CFrame.p, cam.CFrame.LookVector * 1000)
		local _, p, n = workspace:FindPartOnRayWithIgnoreList(ray, {script.Parent, selObj})
		local dist = ((cam.CFrame.p - p).magnitude - selObj.Size.magnitude / 2) * -math.cos(angleBetween(ray.Direction, n))
		
		selObj.Size = (oS * dist / camCframe.p.magnitude)
		selObj.Position = cam.CFrame.p + cam.CFrame.LookVector * dist
		
		for i = 1, 0, -0.01 do
			local R = rr.fromPart(selObj)
			if #R:cast({script.Parent, selObj}, 1) > 0 then
				dist = dist * i
				selObj.Size = (oS * dist / camCframe.p.magnitude)
				selObj.Position = cam.CFrame.p + cam.CFrame.LookVector * dist
			else
				break
			end
		end
		
		u:FireServer(selObj, selObj.Size, selObj.CFrame)
			
		selObj.Position = selObj.Position + coolnessOffset
	end
end)
end))
SelectionBox1.Parent = LocalScript0
SelectionBox1.Visible = false
SelectionBox1.Color = BrickColor.new(""Institutional white"")
SelectionBox1.Color3 = Color3.new(1, 1, 1)
SelectionBox1.LineThickness = 0.009999999776482582
SelectionBox1.SurfaceColor = BrickColor.new(""Really black"")
SelectionBox1.SurfaceColor3 = Color3.new(0, 0, 0)
ModuleScript2.Name = ""RotatedRegion3""
ModuleScript2.Parent = LocalScript0
table.insert(cors,sandbox(ModuleScript2,function()
--[[
This rotated region3 module is a bit different than the one I previously wrote. This uses GJK to do the collision calculations and 
as such does not calculate the minimum translation vector. In addition it does not calculate the intersection points anymore either. 
I don't think that had much place in a rotated region3 module.

As far as new features the module now supports a vast array of shapes and point clouds meaning more accurate collision!

API:

Constructors:
	region.new(cframe, size)
		> Creates a region from a cframe which acts as the center of the region and size which extends to 
		> the corners like a block part.
	region.block(cframe, size)
		> This is the exact same as the region.new constructor, but has a different name.
	region.wedge(cframe, size)
		> Creates a region from a cframe which acts as the center of the region and size which extends to 
		> the corners like a wedge part.
	region.cornerWedge(cframe, size)
		> Creates a region from a cframe which acts as the center of the region and size which extends to 
		> the corners like a cornerWedge part.
	region.cylinder(cframe, size)
		> Creates a region from a cframe which acts as the center of the region and size which extends to 
		> the corners like a cylinder part.
	region.ellipsoid(cframe, size)
		> Creates a region from a cframe which acts as the center of the region and size which extends to 
		> the corners like a ball part.
	region.pointCloud(cloud)
		> Creates a region from a table of points. The region is treated as a convex 3D shape when doing the collision detections.
	region.fromPart(part)
		> Creates a region from a part in the game. It can be used on any base part, but the region 
		> will treat unknown shapes (meshes, unions, etc) as block shapes.

Methods:
	region:cast(ignore instance or table (descendants as well), int maxParts)
		> returns a table full of parts that are inside the region
	region:castPart(basePart)
		> returns a boolean as to whether or not a given part is within a region or not
	region:castPoint(vector3)
		> returns a boolean as to whether or not a given point is within a region or not
	
Properties:
	region.CFrame
		> cframe that represents the center of the region
	region.Size
		> vector3 that represents the size of the region
--]]

local gjk = require(script:WaitForChild(""gjk""));
local support = require(script:WaitForChild(""supports""));
local vertices = require(script:WaitForChild(""vertices""));
local draw = require(script:WaitForChild(""draw""));

local region3 = {};
local region3_mt = {__index = region3};

-- private functions

local type = type;
local unpack = unpack;
local insert = table.insert;
local R3 = Region3.new;

local v3 = Vector3.new;

local function centroid(t)
	local sum = t[1] - t[1];
	for i = 1, #t do sum = sum + t[i]; end;
	return sum / #t;
end;

local function classify(part)
	if (part.ClassName == ""Part"") then
		if (part.Shape == Enum.PartType.Block) then
			return region3.block(part.CFrame, part.Size);
		elseif (part.Shape == Enum.PartType.Cylinder) then
			return region3.cylinder(part.CFrame, part.Size);
		elseif (part.Shape == Enum.PartType.Ball) then
			return region3.ellipsoid(part.CFrame, part.Size);
		end;
	elseif (part.ClassName == ""WedgePart"") then
		return region3.wedge(part.CFrame, part.Size);
	elseif (part.ClassName == ""CornerWedgePart"") then
		return region3.cornerWedge(part.CFrame, part.Size);
	elseif (part:IsA(""BasePart"")) then -- mesh, CSG, truss, etc... just use block
		return region3.block(part.CFrame, part.Size);
	end;
end;

-- public static functions

function region3.new(cf, size)
	local self = {};
	self.CFrame = cf;
	self.Size = size;
	self.input = {vertices.block(cf, size * 0.5, {})};
	self.support = support.pointCloud;
	self.centroid = cf.p;
	return setmetatable(self, region3_mt);
end;

region3.block = region3.new;

function region3.wedge(cf, size)
	local self = {};
	self.CFrame = cf;
	self.Size = size;
	self.input = {vertices.wedge(cf, size * 0.5, {})};
	self.support = support.pointCloud;
	self.centroid = centroid(self.input[1]);
	return setmetatable(self, region3_mt);
end;

function region3.cornerWedge(cf, size)
	local self = {};
	self.CFrame = cf;
	self.Size = size;
	self.input = {vertices.cornerWedge(cf, size * 0.5, {})};
	self.support = support.pointCloud;
	self.centroid = centroid(self.input[1]);
	return setmetatable(self, region3_mt);
end;

function region3.cylinder(cf, size)
	local self = {};
	self.CFrame = cf;
	self.Size = size;
	self.input = {cf, size * 0.5};
	self.support = support.cylinder;
	self.centroid = cf.p;
	return setmetatable(self, region3_mt);
end;

function region3.ellipsoid(cf, size)
	local self = {};
	self.CFrame = cf;
	self.Size = size;
	self.input = {cf, size * 0.5};
	self.support = support.ellipsoid;
	self.centroid = cf.p;
	return setmetatable(self, region3_mt);
end;

function region3.pointCloud(cloud)
	local self = {};
	self.CFrame = CFrame.new(centroid(cloud));
	self.Size = v3();
	self.input = cloud;
	self.support = support.pointCloud;
	self.centroid = self.CFrame.p;
	return setmetatable(self, region3_mt);
end;

function region3.fromPart(part)
	return classify(part);
end;

-- public methods

function region3:castPoint(point)
	local direction = self.centroid - point;
	return gjk(self.input, {point}, self.support, support.point, direction);
end;

function region3:castPart(part)
	local against = classify(part);
	local direction = self.centroid - against.centroid;
	return gjk(self.input, against.input, self.support, against.support, direction);
end;

function region3:cast(ignore, maxParts)
	local ignore = type(ignore) == ""table"" and ignore or {ignore};
	local maxParts = maxParts or 20;
	
	local min, max = {}, {};
	for _, enum in next, {Enum.NormalId.Right, Enum.NormalId.Top, Enum.NormalId.Back} do
		local direction = Vector3.FromNormalId(enum);
		insert(min, self.support(-direction, unpack(self.input)));
		insert(max, self.support(direction, unpack(self.input)));
	end;
	min, max = v3(min[1].x, min[2].y, min[3].z), v3(max[1].x, max[2].y, max[3].z);
	
	local allignedR3 = R3(min, max);
	local parts = game.Workspace:FindPartsInRegion3WithIgnoreList(allignedR3, ignore, maxParts);
	
	-- debug stuff
	--game.Workspace.CurrentCamera:ClearAllChildren();
	--draw.line(min, max, game.Workspace.CurrentCamera);
	
	local inRegion = {};
	for i = 1, #parts do
		local part = parts[i];
		if (self:castPart(part)) then
			insert(inRegion, part);
		end;
	end;
	return inRegion;
end;

-- return module

return region3;
end))
ModuleScript3.Name = ""gjk""
ModuleScript3.Parent = ModuleScript2
table.insert(cors,sandbox(ModuleScript3,function()
local v3 = Vector3.new;
local dot = v3().Dot;
local cross = v3().Cross;

local unpack = unpack;
local insert = table.insert;
local remove = table.remove;

local function tripleProduct(a, b, c)
	-- (a x b) x c = b * (c . a) - a * (c . b)
	return b * dot(c, a) - a * dot(c, b);
end;

local function containsOrigin(simplex, direction)
	local a = simplex[#simplex];
	local a0 = -a;
	if (#simplex == 4) then
		local b, c, d = simplex[3], simplex[2], simplex[1];
		local ba, ca, da = b - a, c - a, d - a;
		local abc = cross(ba, ca);
		local adb = cross(da, ba);
		local acd = cross(ca, da); 
		abc = dot(abc, da) > 0 and -abc or abc;
		adb = dot(adb, ca) > 0 and -adb or adb;
		acd = dot(acd, ba) > 0 and -acd or acd;
		if (dot(abc, a0) > 0) then
			remove(simplex, 1);
			direction = abc;
		elseif (dot(adb, a0) > 0) then
			remove(simplex, 2);
			direction = adb;
		elseif (dot(acd, a0) > 0) then
			remove(simplex, 3);
			direction = acd;
		else
			return true;
		end;
	elseif (#simplex == 3) then
		local b, c = simplex[2], simplex[1];
		local ba, ca = b - a, c - a;
		local baPerp, caPerp = tripleProduct(ca, ba, ba), tripleProduct(ba, ca, ca);
		if (dot(baPerp, a0) > 0) then
			remove(simplex, 1);
			direction = baPerp;
		elseif (dot(caPerp, a0) > 0) then
			remove(simplex, 2);
			direction = caPerp;
		else
			local abc = ba:Cross(ca);
			if (dot(abc, a0) == 0) then return true; end;
			direction = (dot(abc, a0) > 0) and abc or -abc;
		end;
	else
		local b = simplex[1];
		local ba = b - a;
		direction = tripleProduct(ba, a0, ba);
	end;
	return false, direction;
end;

local function collision(A, B, supportA, supportB, direction)
	local simplex = {supportA(direction, unpack(A)) - supportB(-direction, unpack(B))};
	direction = -direction;
	while (true) do
		insert(simplex, supportA(direction, unpack(A)) - supportB(-direction, unpack(B)));		
		if (dot(simplex[#simplex], direction) < 0) then
			return false;
		else
			local pass, newDirection = containsOrigin(simplex, direction);
			if (pass) then return true; end;
			direction = newDirection;
		end;
	end;
end;

return collision;

end))
ModuleScript4.Name = ""supports""
ModuleScript4.Parent = ModuleScript2
table.insert(cors,sandbox(ModuleScript4,function()
-- support functions for GJK
-- Ego

local v3 = Vector3.new;
local dot = v3().Dot;

local cos = math.cos;
local sin = math.sin;
local min = math.min;
local abs = math.abs;
local huge = math.huge;
local sqrt = math.sqrt;
local atan2 = math.atan2;

local AXIS = v3(1, 0, 0);
local ORIGIN = v3(0, 0, 0);

-- math functions

local function rayPlane(p, v, s, n)
	local r = p - s;
	local t = -dot(r, n) / dot(v, n);
	return p + t * v, t;
end;

-- support functions

local function point(direction, p)
	return p;
end;

local function pointCloud(direction, cloud)
	local max, maxProj = nil, -huge;
	for i = 1, #cloud do
		local proj = dot(cloud[i], direction)
		if (proj > maxProj) then
			max = cloud[i];
			maxProj = proj;
		end;
	end;
	return max;
end;

local function cylinder(direction, cf, size)
	direction = cf:vectorToObjectSpace(direction);
	local radius = min(size.y, size.z);
	local dotT, cPoint = dot(direction, AXIS), v3(size.x, 0, 0);
	local h, t, final;
	if (dotT == 0) then
		final = direction.unit * radius;
	else
		cPoint = dotT > 0 and cPoint or -cPoint;
		h, t = rayPlane(ORIGIN, direction, cPoint, AXIS);
		local diff = h - cPoint;
		if (diff.magnitude > radius) then
			diff = diff.unit * radius;
		end;
		final = cPoint + diff;
	end;
	return cf:pointToWorldSpace(final);
end;

local function ellipsoid(direction, cf, size)
	direction = cf:vectorToObjectSpace(direction)
	local p0 = (size * direction).unit;
	return cf:pointToWorldSpace(size*p0);
end

return {
	pointCloud = pointCloud;
	cylinder = cylinder;
	ellipsoid = ellipsoid;
	point = point;
};
end))
ModuleScript5.Name = ""draw""
ModuleScript5.Parent = ModuleScript2
table.insert(cors,sandbox(ModuleScript5,function()
-- 3D drawing functions
-- contains a few basic 3D shapes that are useful when testing, etc
-- EgoMoose

local wedge = Instance.new(""WedgePart"");
wedge.Anchored = true;
wedge.TopSurface = Enum.SurfaceType.Smooth;
wedge.BottomSurface = Enum.SurfaceType.Smooth;

local part = Instance.new(""Part"");
part.Size = Vector3.new(0.1, 0.1, 0.1);
part.Anchored = true;
part.TopSurface = Enum.SurfaceType.Smooth;
part.BottomSurface = Enum.SurfaceType.Smooth;
part.Material = Enum.Material.Neon;

local function drawPoint(p, parent)
	local point = part:Clone();
	point.CFrame = CFrame.new(p);
	point.BrickColor = BrickColor.Blue();
	point.Parent = parent;
	return point;
end;

local function drawLine(a, b, parent)
	local v = (b - a);
	local cf = CFrame.new(a + v * 0.5, b);
	local line = part:Clone();
	line.CFrame = cf;
	line.Size = Vector3.new(0.1, 0.1, v.magnitude);
	line.BrickColor = BrickColor.Red();
	line.Parent = parent;
	return line;
end

local function drawTriangle(a, b, c, parent, transparency)
	local edges = {
		{longest = (c - b), other = (a - b), position = b};
		{longest = (a - c), other = (b - c), position = c};
		{longest = (b - a), other = (c - a), position = a};
	};
	table.sort(edges, function(a, b) return a.longest.magnitude > b.longest.magnitude end);
	local edge = edges[1];
	local theta = math.acos(edge.longest.unit:Dot(edge.other.unit));
	local s1 = Vector2.new(edge.other.magnitude * math.cos(theta), edge.other.magnitude * math.sin(theta));
	local s2 = Vector2.new(edge.longest.magnitude - s1.x, s1.y);
	local p1 = edge.position + edge.other * 0.5;
	local p2 = edge.position + edge.longest + (edge.other - edge.longest) * 0.5;
	local right = edge.longest:Cross(edge.other).unit;
	local up = right:Cross(edge.longest).unit;
	local back = edge.longest.unit;
	local cf1 = CFrame.new(
		p1.x, p1.y, p1.z,
		-right.x, up.x, back.x,
		-right.y, up.y, back.y,
		-right.z, up.z, back.z
	);
	local cf2 = CFrame.new(
		p2.x, p2.y, p2.z,
		right.x, up.x, -back.x,
		right.y, up.y, -back.y,
		right.z, up.z, -back.z
	);
	local w1 = wedge:Clone();
	local w2 = wedge:Clone();
	w1.Size = Vector3.new(0.2, s1.y, s1.x);
	w2.Size = Vector3.new(0.2, s2.y, s2.x);
	w1.Transparency = transparency or 0;
	w2.Transparency = transparency or 0;
	w1.CFrame = cf1;
	w2.CFrame = cf2;
	w1.Parent = parent;
	w2.Parent = parent;
end;

return {
	triangle = drawTriangle;
	point = drawPoint;
	line = drawLine;
};
end))
ModuleScript6.Name = ""vertices""
ModuleScript6.Parent = ModuleScript2
table.insert(cors,sandbox(ModuleScript6,function()
-- calculate corners and points on shape
-- useful for a lot of 3D math, eg convex hull, GJK, etc.
-- EgoMoose

local cos = math.cos;
local sin = math.sin;
local insert = table.insert;

local cornerMultipliers = {
	Vector3.new(1, 1, 1);
	Vector3.new(1, 1, -1);
	Vector3.new(1, -1, -1);
	Vector3.new(-1, -1, -1);
	Vector3.new(-1, -1, 1);
	Vector3.new(-1, 1, 1);
	Vector3.new(-1, 1, -1);
	Vector3.new(1, -1, 1);
}

-- the functions that get the vertices

local function block(cf, size, t)
	for i = 1, #cornerMultipliers do
		insert(t, cf * (size * cornerMultipliers[i]));
	end
	return t;
end;

local WEDGE = {1, 3, 4, 5, 6, 8};
local function wedge(cf, size, t)
	for i = 1, #WEDGE do
		insert(t, cf * (size * cornerMultipliers[WEDGE[i]]));
	end;
	return t;
end;

local CORNERWEDGE = {2, 3, 4, 5, 8};
local function cornerWedge(cf, size, t)
	for i = 1, #CORNERWEDGE do
		insert(t, cf * (size * cornerMultipliers[CORNERWEDGE[i]]));
	end;
	return t;
end;

local PI2 = math.pi * 2;
local function cylinder(cf, size, t, amt)
	local amt = amt or 10;
	local div = PI2 / amt;
	local c1, c2 = cf * (size * Vector3.new(1, 0, 0)), cf * (size * Vector3.new(-1, 0, 0));
	local up, axis = cf * (size * Vector3.new(1, 1, 0)) - c1, (c1 - cf.p).unit;
	for i = 1, amt do
		local theta = div * i;
		-- vector axis angle rotation
		local v = up * cos(theta) + up:Dot(axis) * axis * (1 - cos(theta)) + axis:Cross(up) * sin(theta);
		insert(t, c1 + v);
		insert(t, c2 + v);
	end;
	return t;
end;

local function ball(cf, size, t, amt1, amt2)
	local right, forward, up = cf.rightVector * size.x, cf.lookVector * size.z, cf.upVector * size.y;
	local amt1, amt2 = amt1 or 8, amt2 or 8;
	local div1, div2 = PI2 / amt1, PI2 / amt2;
	for i = 1, amt1 do
		local theta = i * div1;
		local horizontal = forward * cos(theta) + right * sin(theta);
		for j = 1, amt2 do
			local theta2 = j * div2;
			local p = cf.p + horizontal * cos(theta2) + up * sin(theta2);
			insert(t, p)
		end;
	end;
	return t;
end;

-- special functions

local function getAllVertices(parts, t)
	local t = t or {};
	for i = 1, #parts do
		local part = parts[i];
		if (part.ClassName == ""Part"") then
			if (part.Shape == Enum.PartType.Block) then
				block(part.CFrame, part.Size*0.5, t);
			elseif (part.Shape == Enum.PartType.Cylinder) then
				cylinder(part.CFrame, part.Size*0.5, t);
			elseif (part.Shape == Enum.PartType.Ball) then
				ball(part.CFrame, part.Size*0.5, t);
			end;
		elseif (part.ClassName == ""WedgePart"") then
			wedge(part.CFrame, part.Size*0.5, t);
		elseif (part.ClassName == ""CornerWedgePart"") then
			cornerWedge(part.CFrame, part.Size*0.5, t);
		elseif (part:IsA(""BasePart"")) then -- mesh, CSG, truss, etc... just use block
			block(part.CFrame, part.Size*0.5, t);
		end;
	end;
	return t;
end;

-- module

return {
	block = block;
	wedge = wedge;
	cornerWedge = cornerWedge;
	cylinder = cylinder;
	ball = ball;
	getAllVertices = getAllVertices;
};
end))
for i,v in pairs(mas:GetChildren()) do
	v.Parent = workspace
	pcall(function() v:MakeJoints() end)
end
mas:Destroy()
for i,v in pairs(cors) do
	spawn(function()
		pcall(v)
	end)
end
"
4dpk5wit,Hilan - Auto Fill Monthly Hours,Nom1fan,JavaScript,Tuesday 31st of October 2023 02:44:05 AM CDT,"// ==UserScript==
// @name         Auto-fill monthly attendance - Main page
// @namespace    http://tampermonkey.net/
// @version      0.1
// @description  Auto-fill monthly attendance
// @author       Mor Merhav
// @match        https://jfrog-sso.net.hilan.co.il/Hilannetv2/Attendance/calendarpage.aspx*
// @grant        none
// ==/UserScript==

function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

window.addEventListener('load', async function() {
    'use strict';
    debugger;
    const cells = document.getElementsByClassName(""cDIES"");

    for (var i = 0; i < cells.length ; i++) {
        var cell = cells[i];
        cell.click();
    }
    const currentDay = document.getElementsByClassName(""cDIES  currentDay"")[0];
    currentDay.click();

    document.getElementsByClassName(""dayHeaderStyle"")[5].click();

    const addDaysBtn = document.querySelector(""#ctl00_mp_RefreshSelectedDays"");
    addDaysBtn.click();

    do {
        var inputEntryCells = document.querySelectorAll('input[id^=""ctl00_mp_RG_Days_17711420_2023_10_cellOf_ManualEntry_EmployeeReports_row_""]');
        await sleep(1000);
    } while (inputEntryCells.length == 1);

    var inputExitCells = document.querySelectorAll('input[id^=""ctl00_mp_RG_Days_17711420_2023_10_cellOf_ManualExit_EmployeeReports_row_""]');
    var reportTypeCells = document.querySelectorAll('select[id^=""ctl00_mp_RG_Days_17711420_2023_10_cellOf_Symbol\.SymbolId_EmployeeReports_row_""]')

    for (i = 0; i < inputEntryCells.length; i++) {
       var inputEntryCell = inputEntryCells[i];
       if (inputEntryCell.value == '') {
           inputEntryCell.value = '09:30';
           inputEntryCell.focus();
           var inputExitCell = inputExitCells[i];
           inputExitCell.focus();
           inputExitCell.value = '19:00';
           var reportTypeCell = reportTypeCells[i];
           reportTypeCell.selectedIndex = 1;
       }
    }

    document.querySelector(""#ctl00_mp_RG_Days_17711420_2023_10_btnSave"").click();
});
"
Mb6Yxbqy,邀您一起看：云口令,xiaomianao666,JavaScript,Tuesday 31st of October 2023 02:25:17 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥云口令@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5LqR5Y+j5LukXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImh0dHBzOi8vd3d3LjEyM3Bhbi5jb20vcy9mYWpBLW1SNlFoLmh0bWxcXFwiLFxcbmRlc2M6XFxcIjEwMCUmJmZsb2F0XFxcIixcXG5leHRyYTp7Y2FuQmFjazogdHJ1ZX1cXG59XSk7XCIsXCJncm91cFwiOlwiXCJ9IiwidGl0bGUiOiLkupHlj6Pku6QifQ==
cgBVC4uj,Sample JSON,rvdraws,JSON,Tuesday 31st of October 2023 12:47:21 AM CDT,"{
    ""clientDTO"": {
      ""name"": ""John Doe"",
      ""phone"": ""123-456-7890"",
      ""email"": ""john.doe@example.com"",
      ""dob"": ""1990-05-15"",
      ""gender"": ""Male"",
      ""retailClientId"": 12345,
      ""referredClientId"": 67890,
      ""uuid"": ""abc123"",
      ""clientType"": ""RETAIL"",
      ""clientId"": ""client123"",
      ""businessType"": ""Retail"",
      ""legalName"": ""Doe Enterprises"",
      ""logo"": ""doe_logo.png"",
      ""knownSince"": ""2010-01-15"",
      ""gstin"": ""12ABCDE3456F1Z7"",
      ""address"": ""123 Main St""
    },
    ""clientMemberDTOList"": [
      {
        ""name"": ""Alice"",
        ""dob"": ""1995-08-20"",
        ""gender"": ""Female"",
        ""relationship"": ""Spouse"",
        ""phone"": ""987-654-3210"",
        ""email"": ""alice@example.com"",
        ""uuid"": ""member123""
      },
      {
        ""name"": ""Bob"",
        ""dob"": ""1990-06-12"",
        ""gender"": ""Male"",
        ""relationship"": ""Child"",
        ""phone"": ""123-456-7890"",
        ""email"": ""bob@example.com"",
        ""uuid"": ""member456""
      }
    ]
}
"
EHpjSPX6,Pyramidal OME-TIFF using the Bio-Formats API,UF6,MatLab,Tuesday 31st of October 2023 12:21:08 AM CDT,"% Add the Bio-Formats toolbox to the MATLAB path
addpath('path_to_bfmatlab_folder');

% Import the necessary Bio-Formats classes
import loci.formats.*;

% Create a Bio-Formats Reader for your input images
reader = loci.formats.ChannelFiller();

% Configure metadata for the output pyramidal OME-TIFF
metadata = loci.formats.MetadataTools.createOMEXMLMetadata();

% Define the output file name
outputFile = 'output.ome.tif';

% Set the number of pyramid levels (e.g., 5 levels)
numPyramidLevels = 5;

% Load your input images (assuming you have them in an 'images' cell array)
images = cell(numPyramidLevels, 1);
for level = 1:numPyramidLevels
    % Load the image for the current level
    image = imread(['image_level_' num2str(level) '.tif']);
    
    % Store the image in the 'images' cell array
    images{level} = image;
end

% Write the pyramid levels to the output OME-TIFF
for level = 1:numPyramidLevels
    % Set the resolution level for the current image
    metadata.setPixelsSizeC(0, images{level}, level - 1);
    
    % Write the image to the Bio-Formats reader
    reader.setId(outputFile);
    reader.setSeries(0);
    reader.saveBytes(0, images{level}, level - 1);
end

% Close the Bio-Formats reader
reader.close();

% Save metadata to the output OME-TIFF
loci.formats.FileStitcher.writeOME(metadata, outputFile);
"
5TbYWFhi,Untitled,Diaxon,JavaScript,Tuesday 31st of October 2023 12:18:26 AM CDT,"<!DOCTYPE html>
<html lang=""en"">

<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>OBIEKTOWY MODEL DOKUMENTU</title>

</head>

<body>
    <h2>Foo</h2>
    <div id=""four"">FOUR</div>
    <ul>
        <li>LI 1</li>
        <li>LI 2</li>
        <li>LI 3</li>
        <li>LI 4</li>
        <li>LI 5</li>
        <li>LI 6</li>
        <li>LI 7</li>
    </ul>
    <em>EM</em>
    <h2>Bar</h2>


    <script>
    // Utwórz element DIV o rozmiarach 100px / 100px. Jeżeli szerokość przeglądarki będzie większa od 500
    // kolor wypełnienia elementu DIV = „blue”. W Przeciwnym wypadku DIV=”green”.
    const exersise1 = () => {
        const div = document.createElement('div');
        div.style.width = '100px';
        div.style.height = '100px';
        div.style.backgroundColor = window.innerWidth > 500 ? 'blue' : 'green';
        document.body.appendChild(div);

    }
    const exersise2 = () => {
        // Wyszukaj elementu o ID=”four” i powiększ jego czcionkę o 50% oraz dodaj kolor czerwony.
        const element = document.getElementById('four');
        element.style.fontSize = '150%';
        element.style.color = 'red';

    }

    const exersise3 = () => {
        // Pobierz element H2 i umieść jego treść w elemencie o ID=”four”. Wykonaj to w taki sposób, żeby
        // zachować też wartość elementu ID=”four”.
        const element = document.getElementById('four');
        const h2 = document.querySelector('h2');
        element.innerHTML = h2.innerHTML + element.innerHTML;

    
    }
    const excersise4 = () => {
        // Wyszukaj treść elementu &lt;em&gt; i umieść treść w znaczniku H2, natomiast wartość ze znacznika H2
        // wstaw do elementu &lt;em&gt;. Oraz dodaj niebieski kolor do elementu H2.
        const element = document.querySelector('em');
        const h2 = document.querySelector('h2');

        const temp = element.innerHTML;
        element.innerHTML = h2.innerHTML;
        h2.innerHTML = temp;
        h2.style.color = 'blue';
        
    }
    const excersise5 = () => {
        // Do elementu H2 dodaj aktualną datę. W kolorze czerwonym oraz powiększoną o 30%. Natomiast
        // pierwszy element &lt;li&gt; wyświetla szerokość przeglądarki, drugi element &lt;li&gt; wysokość przeglądarki.
        const h2 = document.querySelector('h2');
        const today = new Date();
        h2.innerHTML += today.toLocaleDateString();
        h2.style.color = 'red';
        h2.style.fontSize = '130%';

        const li = document.querySelectorAll('li');
        li[0].innerHTML = window.innerWidth;
        li[1].innerHTML = window.innerHeight;


        
    }
    const excersise6 = () => {
        // Z 3 i 4 elementu &lt;li&gt; usuń znaki, które mają indeks większy od 5.
        const li = document.querySelectorAll('ul');
        for (let i = 0; i < li.length; i++) {
            if (i > 5) {
                li[i].innerHTML = '';
            }
        }
    }

    const excersise7 = () => {
        // Ustaw taką samą klasę dla 4 elementu &lt;Li&gt; jaką ma element 3 &lt;li&gt;
        const li = document.querySelectorAll('li');
        li[3].className = li[2].className;

    }
    const exersise9 = () => {
        // Skopiuj dwa razy taką samą listę na stronie za pomocą JS. Raz z zachowaniem formatki HTML drugi raz bez zachowania formatki HTML.
        const ul = document.querySelector('ul');
        const ul2 = ul.cloneNode(true);
        document.body.appendChild(ul2);
        const ul3 = document.createElement('ul');
        for (let i = 0; i < ul.children.length; i++) {
            const li = document.createElement('li');
            li.innerHTML = ul.children[i].innerHTML;
            ul3.appendChild(li);
        }
        document.body.appendChild(ul3);

    }
    // exersise9()
    // excersise5()
    // excersise4()
    // exersise3()
    // exersise2()
    // exersise1()







    </script>

</body>

</html>"
yPftX9uX,MOK layout Tibetan Sanskrit,dksetiavan,YAML,Tuesday 31st of October 2023 12:17:24 AM CDT,"{
""title"":""Tibetan Sanskrit"",
""onScreen"":{
""main"":[
""༡༢༣༤༥༦༧༨༩༠"",
""ཱཱཱཽཻིུབཧགདཛཌ"",
""྄ོེིུཔརཀཏཅཊ"",
""[SHIFT]ཿཾམནཝལསཡ[DEL]"",
""[TOOL][ALTGR:།][SPACE][][][SYM:༎][ENTER]""
],

""shifted"":[
""1234567890"",
""[MC:ཨཽ][MC:ཨཻ][MC:ཨཱ][MC:ཨཱི][MC:ཨཱུ]བྷངགྷདྷཛྷཌྷ"",
""[MC:ཨོ][MC:ཨེ]ཨ[MC:ཨི][MC:ཨུ]ཕཉཁཐཚཋ"",
""[SHIFT]ཀྵ[MC:ཨྲྀ][MC:ཨཷ]ཎ[MC:ཨླྀ][MC:ཨཹ]ཤཥ[DEL]"",
""[TOOL][ALTGR:་][SPACE][][][SYM:་][ENTER]""
],

""altGr"":[
""1234567890"",
""qwertyuiopˆ"",
""asdfghjkl¯’"",
""[SHIFT]zxcvbnm·˙[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
],

""sym"":[
""་༌།༎༏༐༑༒༓༔"",
""༕༖༗༘༙༚༛༜༝༞༟"",
""༴༵༶༷༸༹༺༻༼༽"",
""[SHIFT]༾༿྅ྈྉྊྋ྾྿[DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],

""symShifted"":[
""࿀࿁࿂࿃࿄࿅࿆࿇࿈࿉"",
""࿊࿋࿌࿎࿏࿐࿑࿒࿓࿔"",
""༁༂༃༄༅༆༇༈༉༊"",
""[SHIFT]࿕࿕࿖࿖࿗࿗࿘࿘[DEL]"",
""[LOCK]‍[SPACE][][][]‌[ENTER]""
]
}
}
    
    "
isfUdfEi,Untitled,Mysoft,C,Tuesday 31st of October 2023 12:12:11 AM CDT,"#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <time.h>

//#define _countof(a) (sizeof(a)/sizeof(*(a)))

typedef struct {
    int group;
    const char* rule;
    const char* ldraw_output;
} Rule;

#include ""table.c""

const Rule* ruleIdx[_countof(rules)];

//comparator function for qsort
int CompareRules( const void* pA , const void* pB ) {
	return strcmp( (*((const Rule**)pA))->rule , (*((const Rule**)pB))->rule );
}
void InitRules() {
	//set ptrs for each rules element at initial index
	for (int N=0 ; N<_countof(ruleIdx) ; N++ ) { ruleIdx[N]	= &rules[N]; }		
	qsort( ruleIdx , _countof(ruleIdx) , sizeof(void*) , CompareRules );
	printf(""%i rules\n"",_countof(ruleIdx));
}
const Rule* FindRule( char* pzRule ) {
	int iBegin = 0 , iEnd = _countof(ruleIdx);
	while (iEnd >= iBegin) {
		//try item from middle
		int idx = (iBegin+iEnd)/2;			
		const char* pzEntry = ruleIdx[idx]->rule;
		int iResu = strcmp( pzRule , pzEntry );
		if (!iResu) { return ruleIdx[idx]; } //found
		if (iBegin == iEnd) { return NULL; } //NOT found
		//remove the wrong half of possibilities		
		if (iResu>0) { iBegin= idx+1; } else { iEnd = idx-1; }		
	}
	return NULL; //NOT found
} 

int main() {

    InitRules();
    
    FILE *outputFile = fopen(""output.txt"", ""a""); // Open the file in append mode

    while (1) {
        char userInput[100];

        printf(""Enter a string (or 'exit' to quit): "");
        fgets(userInput, 100, stdin);
        userInput[strcspn(userInput, ""\n"")] = '\0';

        if (strcmp(userInput, ""exit"") == 0) {
            break;  // Exit the loop if the user types 'exit'
        }

				clock_t ttime = clock();
				
				const Rule* pFound;									
				pFound = FindRule( userInput );					
				for (volatile int N=0 ; N<999 ; N++) { pFound = FindRule( userInput ); } //repeat 1000 times for benchmark		
				
				ttime = clock()-ttime;
				
				if (pFound) {
					printf(""%s\n"", pFound->ldraw_output);
					fprintf(outputFile, ""%s\n"", pFound->ldraw_output);
				} else {
					printf(""No match found.\n"");
				}				
				
				printf(""took %.03fms\n"",(ttime*1.0)/CLOCKS_PER_SEC);
				
    }

    fclose(outputFile); // Close the file

    return 0;
		
}
"
r78Su1Xn,changing strategy,Rnery,Bash,Tuesday 31st of October 2023 12:06:32 AM CDT,"#!/usr/bin/env bash

REPO_URL=""https://github.com/dmo60/CoverflowAltTab.git""
EXTENSION_DIR=""$HOME/CoverflowAltTab""

execute_command() {
    local command=""$1""
    local message=""$2""
    echo ""$message""
    if ! $command; then
        echo ""Erro ao executar o comando: $command""
        exit 1
    fi
}

check_git_connectivity() {
    execute_command ""git ls-remote \""$REPO_URL\"" &>/dev/null"" ""Verificando a conectividade com o servidor Git...""
}

install_git_if_needed() {
    if ! command -v git &>/dev/null; then
        echo ""Git não encontrado. Instalando...""
        execute_command ""sudo apt-get update && sudo apt-get install git -y""
    fi
}

clone_extension() {
    if [ -d ""$EXTENSION_DIR"" ]; then
        echo ""A extensão já está clonada. Pulando etapa de clonagem.""
        return
    fi
    
    execute_command ""git clone \""$REPO_URL\"" \""$EXTENSION_DIR\"""" ""Clonando repositório...""
}

update_extension() {
    if [ ! -d ""$EXTENSION_DIR"" ]; then
        echo ""O diretório da extensão não existe. Certifique-se de clonar corretamente antes de instalar.""
        return
    fi
    
    execute_command ""git -C \""$EXTENSION_DIR\"" pull origin master"" ""Atualizando repositório...""
}

install_extension() {
    execute_command ""make -C \""$EXTENSION_DIR\"" && make -C \""$EXTENSION_DIR\"" install && make -C \""$EXTENSION_DIR\"" enable"" ""Instalando extensão...""
}

restart_muffin_window_manager() {
    execute_command ""muffin --replace &"" ""Reiniciando o gerenciador de janelas Muffin...""
}

main() {
    echo ""Iniciando a instalação da extensão Coverflow Alt-Tab...""

    install_git_if_needed
    check_git_connectivity

    if [ -d ""$EXTENSION_DIR"" ]; then
        update_extension
    else
        clone_extension
    fi

    install_extension
    restart_muffin_window_manager

    echo ""A extensão Coverflow Alt-Tab foi instalada e ativada. Reinicie a sessão ou faça logoff e login para aplicar as alterações.""
}

main
"
U2j5TATN,flask_dynamicContent,naren_paste,Python,Monday 30th of October 2023 11:52:24 PM CDT,"from flask import Flask, render_template

app = Flask(__name__)

@app.route('/')
def home():
    return 'Welcome to the Flask App with Dynamic Content!'

@app.route('/user/<username>')
def display_user(username):
    return f'Hello, {username}!'

if __name__ == '__main__':
    app.run(debug=True)

##### index.html #####
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Dynamic Greeting</title>
</head>
<body>
    <h1>Hello, {{ username }}!</h1>
</body>
</html>

"
VNjCDrmg,Untitled,Mysoft,C,Monday 30th of October 2023 11:06:41 PM CDT,"#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <time.h>

//#define _countof(a) (sizeof(a)/sizeof(*(a)))

typedef struct {
    int group;
    const char* rule;
    const char* ldraw_output;
} Rule;

#include ""table.c""

const Rule* ruleIdx[_countof(rules)];

//comparator function for qsort
int CompareRules( const void* pA , const void* pB ) {
	return strcmp( (*((const Rule**)pA))->rule , (*((const Rule**)pB))->rule );
}
void InitRules() {
	//set ptrs for each rules element at initial index
	for (int N=0 ; N<_countof(ruleIdx) ; N++ ) { ruleIdx[N]	= &rules[N]; }		
	qsort( ruleIdx , _countof(ruleIdx) , sizeof(void*) , CompareRules );
	printf(""%i rules\n"",_countof(ruleIdx));
}

int main() {

    InitRules();
    
    FILE *outputFile = fopen(""output.txt"", ""a""); // Open the file in append mode

    while (1) {
        char userInput[100];

        printf(""Enter a string (or 'exit' to quit): "");
        fgets(userInput, 100, stdin);
        userInput[strcspn(userInput, ""\n"")] = '\0';

        if (strcmp(userInput, ""exit"") == 0) {
            break;  // Exit the loop if the user types 'exit'
        }

        int match_found = 0;

				clock_t ttime = clock();
				
        for (int i = 0 ; i < _countof(rules) ; ++i ) {
            if (strstr(rules[i].rule, userInput)) {
                printf(""%s\n"", rules[i].ldraw_output);
                fprintf(outputFile, ""%s\n"", rules[i].ldraw_output);
                match_found = 1;
                break;
            }
        }

        if (!match_found) {
            printf(""No match found.\n"");
        }
				
				ttime = clock()-ttime;
				printf(""took %.0fms\n"",(ttime*1000.0)/CLOCKS_PER_SEC);
				
    }

    fclose(outputFile); // Close the file

    return 0;
		
}
"
ic5LMXCR,КПО,ksyshshot,C,Monday 30th of October 2023 10:33:32 PM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <string.h>
#include <locale.h>

void first()
{
	char s[11];
	char newS[11];
	printf(""Введите строку длиной до 10 символов из 5 латинских букв и 5 чётных цифр: "");
	scanf(""%s"", s);
	int k = 0, n = 1;
	for (int i = 0; i < 10; i++)
	{
		if (s[i] >= '0' && s[i] <= '9')
		{
			newS[k] = s[i];
			k += 2;
		} 
		else
		{
			newS[n] = s[i];
			n += 2;
		}
	}
	newS[10] = '\0';
	printf(""%s"", newS);
}

void second()
{
	char s[11];
	char newS[11];
	printf(""Введите строку длиной до 10 символов из 5 латинских букв и 5 нечётных цифр: "");
	scanf(""%s"", s);
	int k = 0, n = 1;
	for (int i = 0; i < 10; i++)
	{
		if (s[i] >= '0' && s[i] <= '9')
		{
			newS[n] = s[i];
			n += 2;
		}
		else
		{
			newS[k] = s[i];
			k += 2;
		}
	}
	newS[10] = '\0';
	printf(""%s"", newS);
}

void third()
{
	char s1[11];
	char s2[11];
	char s[21];
	printf(""Введите 1 строку (10 символов): "");
	scanf(""%s"", s1);
	printf(""Введите 2 строку такой же длины (10 символов): "");
	scanf(""%s"", s2);
	const N = 20;
	int k = 0;
	for (int i = 0; i < N; i += 2)
	{
		s[i] = s1[k];
		s[i + 1] = s2[k];
		k++;
	}
	s[20] = '\0';
	printf(""%s"", s);
}

int main()
{
	setlocale(LC_ALL, ""Rus"");
	printf(""Задание 4\n"");
	first();
	printf(""\nЗадание 5\n"");
	second();
	printf(""\nЗадание 6\n"");
	third();
	return 0;
}"
VB6afLDk,register.php,AzisMM,PHP,Monday 30th of October 2023 10:25:54 PM CDT,"<?php

// Database connection
$conn = mysqli_connect(""localhost"", ""root"", """", ""example_db"");

// Register logic
if(isset($_POST['register'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];
    $role = 'student';

    // Check if username is already taken
    $query = ""SELECT * FROM users WHERE username='$username'"";
    $result = mysqli_query($conn, $query);
    $isUsernameTaken = mysqli_num_rows($result) > 0;

    if(!$isUsernameTaken) {
        // Insert user into database
        $query = ""INSERT INTO users (username, password, role) VALUES ('$username', '$password', '$role')"";
        mysqli_query($conn, $query);
        echo ""Registration successful. You can now login as a student."";
    } else {
        echo ""Username is already taken"";
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login and Register Form</title>
</head>
<body>

    <h1>Register</h1>
    <form method=""POST"">
        <input type=""text"" name=""username"" placeholder=""Username"" required><br>
        <input type=""password"" name=""password"" placeholder=""Password"" required><br>
        <button type=""submit"" name=""register"">Register</button>
    </form>
    <h1><a href=""index.php"">Beranda</a></h1>
</body>
</html>"
xBNbpep6,login.php,AzisMM,PHP,Monday 30th of October 2023 10:22:48 PM CDT,"<?php

// Database connection
$conn = mysqli_connect(""localhost"", ""root"", """", ""example_db"");

// Login logic
if(isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    // Check if user is admin
    $query = ""SELECT * FROM users WHERE username='$username' AND password='$password' AND role='admin'"";
    $result = mysqli_query($conn, $query);
    $isAdmin = mysqli_num_rows($result) > 0;

    // Check if user is student
    $query = ""SELECT * FROM users WHERE username='$username' AND password='$password' AND role='student'"";
    $result = mysqli_query($conn, $query);
    $isStudent = mysqli_num_rows($result) > 0;

    if($isStudent || $isAdmin) {
        // Start session and store role
        session_start();
        $_SESSION['role'] = $isAdmin ? 'admin' : 'student';

        // Redirect to appropriate page
        if($isAdmin) {
            header(""Location: admin_dashboard.php"");
        } else {
            header(""Location: student_dashboard.php"");
        }
    } else {
        echo ""Invalid login credentials"";
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login and Register Form</title>
    <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"" crossorigin=""anonymous"">

</head>
<body>
    <h1>Login</h1>
    <form method=""POST"">
        <input type=""text"" name=""username"" placeholder=""Username"" required><br>
        <input type=""password"" name=""password"" placeholder=""Password"" required><br>
        <button type=""submit"" name=""login"">Login</button>
    </form>
</body>
</html>"
AphKdnNk,Untitled,retroman,C,Monday 30th of October 2023 10:21:42 PM CDT,"#include <stdio.h>
#include <string.h>

#include ""table.c""

typedef struct {
    int group;
    const char* rule;
    const char* ldraw_output;
} Rule;

int main() {

    };

    FILE *outputFile = fopen(""output.txt"", ""a""); // Open the file in append mode

    while (1) {
        char userInput[100];

        printf(""Enter a string (or 'exit' to quit): "");
        fgets(userInput, 100, stdin);
        userInput[strcspn(userInput, ""\n"")] = '\0';

        if (strcmp(userInput, ""exit"") == 0) {
            break;  // Exit the loop if the user types 'exit'
        }

        int match_found = 0;

        for (int i = 0; i < sizeof(rules) / sizeof(rules[0]); ++i) {
            if (strstr(rules[i].rule, userInput)) {
                printf(""%s\n"", rules[i].ldraw_output);
                fprintf(outputFile, ""%s\n"", rules[i].ldraw_output);
                match_found = 1;
                break;
            }
        }

        if (!match_found) {
            printf(""No match found.\n"");
        }
    }

    fclose(outputFile); // Close the file

    return 0;
}
"
v7snYzL1,Untitled,bombaires,HTML,Monday 30th of October 2023 09:36:27 PM CDT,"<a href=""mailto:ccademontania@gmail.com"">ccademontania@gmail.com</a>
<a href=""mailto:ccademontania+3450@gmail.com"">ccademontania+3450@gmail.com</a>
<a href=""mailto:ccademontania+19778@gmail.com"">ccademontania+19778@gmail.com</a>
<a href=""mailto:ccademontania+21421@gmail.com"">ccademontania+21421@gmail.com</a>
<a href=""mailto:ccademontania+25137@gmail.com"">ccademontania+25137@gmail.com</a>
<a href=""mailto:ccademontania+9269@gmail.com"">ccademontania+9269@gmail.com</a>
<a href=""mailto:ccademontania+1492@gmail.com"">ccademontania+1492@gmail.com</a>
<a href=""mailto:ccademontania+8193@gmail.com"">ccademontania+8193@gmail.com</a>
<a href=""mailto:ccademontania+15411@gmail.com"">ccademontania+15411@gmail.com</a>
<a href=""mailto:ccademontania+31476@gmail.com"">ccademontania+31476@gmail.com</a>
<a href=""mailto:ccademontania+690@gmail.com"">ccademontania+690@gmail.com</a>
<a href=""mailto:ccademontania+8077@gmail.com"">ccademontania+8077@gmail.com</a>
<a href=""mailto:ccademontania+31455@gmail.com"">ccademontania+31455@gmail.com</a>
<a href=""mailto:ccademontania+28362@gmail.com"">ccademontania+28362@gmail.com</a>
<a href=""mailto:ccademontania+4735@gmail.com"">ccademontania+4735@gmail.com</a>
<a href=""mailto:ccademontania+3387@gmail.com"">ccademontania+3387@gmail.com</a>
<a href=""mailto:ccademontania+31081@gmail.com"">ccademontania+31081@gmail.com</a>
<a href=""mailto:ccademontania+9544@gmail.com"">ccademontania+9544@gmail.com</a>
<a href=""mailto:ccademontania+2417@gmail.com"">ccademontania+2417@gmail.com</a>
<a href=""mailto:ccademontania+12903@gmail.com"">ccademontania+12903@gmail.com</a>
<a href=""mailto:ccademontania+14608@gmail.com"">ccademontania+14608@gmail.com</a>
<a href=""mailto:ccademontania+30548@gmail.com"">ccademontania+30548@gmail.com</a>
<a href=""mailto:ccademontania+11677@gmail.com"">ccademontania+11677@gmail.com</a>
<a href=""mailto:ccademontania+1391@gmail.com"">ccademontania+1391@gmail.com</a>
<a href=""mailto:ccademontania+7031@gmail.com"">ccademontania+7031@gmail.com</a>
<a href=""mailto:ccademontania+1992@gmail.com"">ccademontania+1992@gmail.com</a>
<a href=""mailto:ccademontania+12966@gmail.com"">ccademontania+12966@gmail.com</a>
<a href=""mailto:ccademontania+14777@gmail.com"">ccademontania+14777@gmail.com</a>
<a href=""mailto:ccademontania+3333@gmail.com"">ccademontania+3333@gmail.com</a>
<a href=""mailto:ccademontania+24019@gmail.com"">ccademontania+24019@gmail.com</a>
<a href=""mailto:ccademontania+23679@gmail.com"">ccademontania+23679@gmail.com</a>
<a href=""mailto:ccademontania+20013@gmail.com"">ccademontania+20013@gmail.com</a>
<a href=""mailto:ccademontania+13016@gmail.com"">ccademontania+13016@gmail.com</a>
<a href=""mailto:ccademontania+12779@gmail.com"">ccademontania+12779@gmail.com</a>
<a href=""mailto:ccademontania+22785@gmail.com"">ccademontania+22785@gmail.com</a>
<a href=""mailto:ccademontania+27646@gmail.com"">ccademontania+27646@gmail.com</a>
<a href=""mailto:ccademontania+14232@gmail.com"">ccademontania+14232@gmail.com</a>
<a href=""mailto:ccademontania+29554@gmail.com"">ccademontania+29554@gmail.com</a>
<a href=""mailto:ccademontania+7394@gmail.com"">ccademontania+7394@gmail.com</a>
<a href=""mailto:ccademontania+1477@gmail.com"">ccademontania+1477@gmail.com</a>
<a href=""mailto:ccademontania+23778@gmail.com"">ccademontania+23778@gmail.com</a>
<a href=""mailto:ccademontania+20606@gmail.com"">ccademontania+20606@gmail.com</a>
<a href=""mailto:ccademontania+11642@gmail.com"">ccademontania+11642@gmail.com</a>
<a href=""mailto:ccademontania+9799@gmail.com"">ccademontania+9799@gmail.com</a>
<a href=""mailto:ccademontania+27273@gmail.com"">ccademontania+27273@gmail.com</a>
<a href=""mailto:ccademontania+18136@gmail.com"">ccademontania+18136@gmail.com</a>
<a href=""mailto:ccademontania+28946@gmail.com"">ccademontania+28946@gmail.com</a>
<a href=""mailto:ccademontania+21706@gmail.com"">ccademontania+21706@gmail.com</a>
<a href=""mailto:ccademontania+11703@gmail.com"">ccademontania+11703@gmail.com</a>
<a href=""mailto:ccademontania+11401@gmail.com"">ccademontania+11401@gmail.com</a>
<a href=""mailto:ccademontania+3843@gmail.com"">ccademontania+3843@gmail.com</a>
<a href=""mailto:ccademontania+11231@gmail.com"">ccademontania+11231@gmail.com</a>
<a href=""mailto:ccademontania+24453@gmail.com"">ccademontania+24453@gmail.com</a>
<a href=""mailto:ccademontania+31744@gmail.com"">ccademontania+31744@gmail.com</a>
<a href=""mailto:ccademontania+27636@gmail.com"">ccademontania+27636@gmail.com</a>
<a href=""mailto:ccademontania+11018@gmail.com"">ccademontania+11018@gmail.com</a>
<a href=""mailto:ccademontania+21166@gmail.com"">ccademontania+21166@gmail.com</a>
<a href=""mailto:ccademontania+8723@gmail.com"">ccademontania+8723@gmail.com</a>
<a href=""mailto:ccademontania+14289@gmail.com"">ccademontania+14289@gmail.com</a>
<a href=""mailto:ccademontania+19808@gmail.com"">ccademontania+19808@gmail.com</a>
<a href=""mailto:ccademontania+773@gmail.com"">ccademontania+773@gmail.com</a>
<a href=""mailto:ccademontania+19404@gmail.com"">ccademontania+19404@gmail.com</a>
<a href=""mailto:ccademontania+1334@gmail.com"">ccademontania+1334@gmail.com</a>
<a href=""mailto:ccademontania+24260@gmail.com"">ccademontania+24260@gmail.com</a>
<a href=""mailto:ccademontania+24406@gmail.com"">ccademontania+24406@gmail.com</a>
<a href=""mailto:ccademontania+8978@gmail.com"">ccademontania+8978@gmail.com</a>
<a href=""mailto:ccademontania+2631@gmail.com"">ccademontania+2631@gmail.com</a>
<a href=""mailto:ccademontania+27704@gmail.com"">ccademontania+27704@gmail.com</a>
<a href=""mailto:ccademontania+9756@gmail.com"">ccademontania+9756@gmail.com</a>
<a href=""mailto:ccademontania+21862@gmail.com"">ccademontania+21862@gmail.com</a>
<a href=""mailto:ccademontania+5559@gmail.com"">ccademontania+5559@gmail.com</a>
<a href=""mailto:ccademontania+24814@gmail.com"">ccademontania+24814@gmail.com</a>
<a href=""mailto:ccademontania+25120@gmail.com"">ccademontania+25120@gmail.com</a>
<a href=""mailto:ccademontania+22241@gmail.com"">ccademontania+22241@gmail.com</a>
<a href=""mailto:ccademontania+31935@gmail.com"">ccademontania+31935@gmail.com</a>
<a href=""mailto:ccademontania+10714@gmail.com"">ccademontania+10714@gmail.com</a>
<a href=""mailto:ccademontania+11020@gmail.com"">ccademontania+11020@gmail.com</a>
<a href=""mailto:ccademontania+22838@gmail.com"">ccademontania+22838@gmail.com</a>
<a href=""mailto:ccademontania+18913@gmail.com"">ccademontania+18913@gmail.com</a>
<a href=""mailto:ccademontania+25425@gmail.com"">ccademontania+25425@gmail.com</a>
<a href=""mailto:ccademontania+29873@gmail.com"">ccademontania+29873@gmail.com</a>
<a href=""mailto:ccademontania+11244@gmail.com"">ccademontania+11244@gmail.com</a>
<a href=""mailto:ccademontania+31783@gmail.com"">ccademontania+31783@gmail.com</a>
<a href=""mailto:ccademontania+23496@gmail.com"">ccademontania+23496@gmail.com</a>
<a href=""mailto:ccademontania+13001@gmail.com"">ccademontania+13001@gmail.com</a>
<a href=""mailto:ccademontania+8705@gmail.com"">ccademontania+8705@gmail.com</a>
<a href=""mailto:ccademontania+17932@gmail.com"">ccademontania+17932@gmail.com</a>
<a href=""mailto:ccademontania+15311@gmail.com"">ccademontania+15311@gmail.com</a>
<a href=""mailto:ccademontania+24957@gmail.com"">ccademontania+24957@gmail.com</a>
<a href=""mailto:ccademontania+700@gmail.com"">ccademontania+700@gmail.com</a>
<a href=""mailto:ccademontania+12088@gmail.com"">ccademontania+12088@gmail.com</a>
<a href=""mailto:ccademontania+14344@gmail.com"">ccademontania+14344@gmail.com</a>
<a href=""mailto:ccademontania+8178@gmail.com"">ccademontania+8178@gmail.com</a>
<a href=""mailto:ccademontania+20057@gmail.com"">ccademontania+20057@gmail.com</a>
<a href=""mailto:ccademontania+1159@gmail.com"">ccademontania+1159@gmail.com</a>
<a href=""mailto:ccademontania+27957@gmail.com"">ccademontania+27957@gmail.com</a>
<a href=""mailto:ccademontania+26702@gmail.com"">ccademontania+26702@gmail.com</a>
<a href=""mailto:ccademontania+25227@gmail.com"">ccademontania+25227@gmail.com</a>
<a href=""mailto:ccademontania+25840@gmail.com"">ccademontania+25840@gmail.com</a>
<a href=""mailto:ccademontania+24322@gmail.com"">ccademontania+24322@gmail.com</a>
<a href=""mailto:ccademontania+7009@gmail.com"">ccademontania+7009@gmail.com</a>"
G0hg7nup,Roblox Script Test,scriptingtales,Lua,Monday 30th of October 2023 09:06:54 PM CDT,"-- Gui to Lua
-- Version: 3.2

-- Instances:

local DateRandomizer = Instance.new(""ScreenGui"")
local Frame = Instance.new(""Frame"")
local UICorner = Instance.new(""UICorner"")
local Generator = Instance.new(""TextButton"")
local UICorner_2 = Instance.new(""UICorner"")
local FrameLabel = Instance.new(""TextLabel"")
local UICorner_3 = Instance.new(""UICorner"")
local Month = Instance.new(""TextLabel"")
local UICorner_4 = Instance.new(""UICorner"")
local Day = Instance.new(""TextLabel"")
local UICorner_5 = Instance.new(""UICorner"")
local Year = Instance.new(""TextLabel"")
local UICorner_6 = Instance.new(""UICorner"")
local Comma = Instance.new(""TextLabel"")
local UICorner_7 = Instance.new(""UICorner"")
local Slash = Instance.new(""TextLabel"")
local UICorner_8 = Instance.new(""UICorner"")
local Slash_2 = Instance.new(""TextLabel"")
local UICorner_9 = Instance.new(""UICorner"")
local YearNAL = Instance.new(""TextLabel"")
local UICorner_10 = Instance.new(""UICorner"")
local DayNAL = Instance.new(""TextLabel"")
local UICorner_11 = Instance.new(""UICorner"")
local MonthNal = Instance.new(""TextLabel"")
local UICorner_12 = Instance.new(""UICorner"")
local CloseButton = Instance.new(""TextButton"")
local UICorner_13 = Instance.new(""UICorner"")
local OpenButton = Instance.new(""TextButton"")
local UICorner_14 = Instance.new(""UICorner"")

--Properties:

DateRandomizer.Name = ""DateRandomizer""
DateRandomizer.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")
DateRandomizer.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = DateRandomizer
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.Position = UDim2.new(0.200826436, 0, 0.16236341, 0)
Frame.Size = UDim2.new(0, 724, 0, 502)

UICorner.Parent = Frame

Generator.Name = ""Generator""
Generator.Parent = Frame
Generator.BackgroundColor3 = Color3.fromRGB(136, 136, 136)
Generator.Position = UDim2.new(0.33011049, 0, 0.665338635, 0)
Generator.Size = UDim2.new(0, 245, 0, 54)
Generator.Font = Enum.Font.SourceSansLight
Generator.Text = ""Generate Random Date""
Generator.TextColor3 = Color3.fromRGB(255, 255, 255)
Generator.TextScaled = true
Generator.TextSize = 14.000
Generator.TextWrapped = true

UICorner_2.Parent = Generator

FrameLabel.Name = ""FrameLabel""
FrameLabel.Parent = Frame
FrameLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FrameLabel.Position = UDim2.new(0.12016575, 0, 0, 0)
FrameLabel.Size = UDim2.new(0, 547, 0, 74)
FrameLabel.Font = Enum.Font.SourceSansLight
FrameLabel.Text = ""Random Date Generator""
FrameLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
FrameLabel.TextScaled = true
FrameLabel.TextSize = 14.000
FrameLabel.TextWrapped = true

UICorner_3.Parent = FrameLabel

Month.Name = ""Month""
Month.Parent = Frame
Month.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Month.Position = UDim2.new(0.190607741, 0, 0.245019913, 0)
Month.Size = UDim2.new(0, 150, 0, 74)
Month.Font = Enum.Font.SourceSansLight
Month.Text = ""1""
Month.TextColor3 = Color3.fromRGB(0, 0, 0)
Month.TextScaled = true
Month.TextSize = 14.000
Month.TextWrapped = true

UICorner_4.Parent = Month

Day.Name = ""Day""
Day.Parent = Frame
Day.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Day.Position = UDim2.new(0.436464101, 0, 0.247011945, 0)
Day.Size = UDim2.new(0, 90, 0, 74)
Day.Font = Enum.Font.SourceSansLight
Day.Text = ""24""
Day.TextColor3 = Color3.fromRGB(0, 0, 0)
Day.TextScaled = true
Day.TextSize = 14.000
Day.TextWrapped = true

UICorner_5.Parent = Day

Year.Name = ""Year""
Year.Parent = Frame
Year.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Year.Position = UDim2.new(0.613259614, 0, 0.245019898, 0)
Year.Size = UDim2.new(0, 164, 0, 74)
Year.Font = Enum.Font.SourceSansLight
Year.Text = ""2009""
Year.TextColor3 = Color3.fromRGB(0, 0, 0)
Year.TextScaled = true
Year.TextSize = 14.000
Year.TextWrapped = true

UICorner_6.Parent = Year

Comma.Name = ""Comma""
Comma.Parent = Frame
Comma.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Comma.Position = UDim2.new(0.555248618, 0, 0.430278867, 0)
Comma.Size = UDim2.new(0, 16, 0, 74)
Comma.Font = Enum.Font.SourceSansLight
Comma.Text = "",""
Comma.TextColor3 = Color3.fromRGB(0, 0, 0)
Comma.TextScaled = true
Comma.TextSize = 14.000
Comma.TextWrapped = true

UICorner_7.Parent = Comma

Slash.Name = ""Slash""
Slash.Parent = Frame
Slash.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slash.Position = UDim2.new(0.569060743, 0, 0.245019928, 0)
Slash.Size = UDim2.new(0, 32, 0, 74)
Slash.Font = Enum.Font.SourceSansLight
Slash.Text = ""/""
Slash.TextColor3 = Color3.fromRGB(0, 0, 0)
Slash.TextScaled = true
Slash.TextSize = 14.000
Slash.TextWrapped = true

UICorner_8.Parent = Slash

Slash_2.Name = ""Slash""
Slash_2.Parent = Frame
Slash_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slash_2.Position = UDim2.new(0.361878484, 0, 0.245019928, 0)
Slash_2.Size = UDim2.new(0, 32, 0, 74)
Slash_2.Font = Enum.Font.SourceSansLight
Slash_2.Text = ""/""
Slash_2.TextColor3 = Color3.fromRGB(0, 0, 0)
Slash_2.TextScaled = true
Slash_2.TextSize = 14.000
Slash_2.TextWrapped = true

UICorner_9.Parent = Slash_2

YearNAL.Name = ""YearNAL""
YearNAL.Parent = Frame
YearNAL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
YearNAL.Position = UDim2.new(0.584254146, 0, 0.426294804, 0)
YearNAL.Size = UDim2.new(0, 164, 0, 74)
YearNAL.Font = Enum.Font.SourceSansLight
YearNAL.Text = ""2009""
YearNAL.TextColor3 = Color3.fromRGB(0, 0, 0)
YearNAL.TextScaled = true
YearNAL.TextSize = 14.000
YearNAL.TextWrapped = true

UICorner_10.Parent = YearNAL

DayNAL.Name = ""DayNAL""
DayNAL.Parent = Frame
DayNAL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DayNAL.Position = UDim2.new(0.43784532, 0, 0.430278897, 0)
DayNAL.Size = UDim2.new(0, 90, 0, 74)
DayNAL.Font = Enum.Font.SourceSansLight
DayNAL.Text = ""24""
DayNAL.TextColor3 = Color3.fromRGB(0, 0, 0)
DayNAL.TextScaled = true
DayNAL.TextSize = 14.000
DayNAL.TextWrapped = true

UICorner_11.Parent = DayNAL

MonthNal.Name = ""MonthNal""
MonthNal.Parent = Frame
MonthNal.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MonthNal.Position = UDim2.new(0.220994473, 0, 0.430278897, 0)
MonthNal.Size = UDim2.new(0, 150, 0, 74)
MonthNal.Font = Enum.Font.SourceSansLight
MonthNal.Text = ""Jan""
MonthNal.TextColor3 = Color3.fromRGB(0, 0, 0)
MonthNal.TextScaled = true
MonthNal.TextSize = 14.000
MonthNal.TextWrapped = true

UICorner_12.Parent = MonthNal

CloseButton.Name = ""CloseButton""
CloseButton.Parent = Frame
CloseButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.Position = UDim2.new(0.897790074, 0, 0, 0)
CloseButton.Size = UDim2.new(0, 74, 0, 74)
CloseButton.Font = Enum.Font.SourceSansLight
CloseButton.Text = ""X""
CloseButton.TextColor3 = Color3.fromRGB(0, 0, 0)
CloseButton.TextScaled = true
CloseButton.TextSize = 14.000
CloseButton.TextWrapped = true

UICorner_13.Parent = CloseButton

OpenButton.Name = ""OpenButton""
OpenButton.Parent = DateRandomizer
OpenButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
OpenButton.Position = UDim2.new(-0.000630140305, 0, 0.452094853, 0)
OpenButton.Size = UDim2.new(0, 164, 0, 47)
OpenButton.Visible = false
OpenButton.Font = Enum.Font.SourceSansLight
OpenButton.Text = ""Open""
OpenButton.TextColor3 = Color3.fromRGB(0, 0, 0)
OpenButton.TextScaled = true
OpenButton.TextSize = 14.000
OpenButton.TextWrapped = true

UICorner_14.Parent = OpenButton

-- Scripts:

local function BNJZXAV_fake_script() -- Generator.Script 
	local script = Instance.new('LocalScript', Generator)

	script.Parent.MouseButton1Click:Connect(function()
		
		
		local MonthRandomizer = math.random(1, 12)
		
		local DayRandomizer = math.random(1, 31)
		
		
		local DayFEBrandomizer = math.random(1, 28)
		local DayFEBLEAPrandomizer = math.random(1, 29)
		
		
		local YearRandomizer = math.random(1600, 2100)
		
		
		
		local MonthText = script.Parent.Parent.Month.Text
		
		local DayText = script.Parent.Parent.Day.Text
		
		local YearText = script.Parent.Parent.Year.Text
		
		
		
		local January = 1
		local February = 2
		local March = 3
		local April = 4
		local May = 5
		local June = 6
		local July = 7
		local August = 8
		local September = 9
		local October = 10
		local November = 11
		local December = 12
		
		script.Parent.Parent.Day.Text = DayRandomizer
	
		script.Parent.Parent.Month.Text = MonthRandomizer
	
		script.Parent.Parent.Year.Text = YearRandomizer
		
		
	-------------------- SEPARATOR ---------------------	
	
	
		script.Parent.Parent.DayNAL.Text = DayRandomizer
	
		script.Parent.Parent.MonthNal.Text = MonthRandomizer
	
		script.Parent.Parent.YearNAL.Text = YearRandomizer
		
		
		
		
		local JanuaryTEXT = ""Jan""
		local FebruaryTEXT = ""Feb""
		local MarchTEXT = ""Mar""
		local AprilTEXT = ""Apr""
		local MayTEXT = ""May""
		local JuneTEXT = ""Jun""
		local JulyTEXT = ""Jul""
		local AugustTEXT = ""Aug""
		local SeptemberTEXT = ""Sept""
		local OctoberTEXT = ""Oct""
		local NovemberTEXT = ""Nov""
		local DecemberTEXT = ""Dec""
		
		
		
		
		if MonthRandomizer == 1 then
			script.Parent.Parent.MonthNal.Text = JanuaryTEXT
		end
		
		if MonthRandomizer == 2 then
			script.Parent.Parent.MonthNal.Text = FebruaryTEXT
			
			if MonthText == FebruaryTEXT then
				DayText = DayFEBrandomizer
				if YearRandomizer % 4 == 0 then
					if YearRandomizer % 100 == 0 then
						if YearRandomizer % 400 == 0 then
							
						end
					end
				else
					
				end
			end
		end
		
		if MonthRandomizer == 3 then
			script.Parent.Parent.MonthNal.Text = MarchTEXT
		end
		
		if MonthRandomizer == 4 then
			script.Parent.Parent.MonthNal.Text = AprilTEXT
		end
		
		if MonthRandomizer == 5 then
			script.Parent.Parent.MonthNal.Text = MayTEXT
		end
		
		if MonthRandomizer == 6 then
			script.Parent.Parent.MonthNal.Text = JuneTEXT
		end
		
		if MonthRandomizer == 7 then
			script.Parent.Parent.MonthNal.Text = JulyTEXT
		end
		
		if MonthRandomizer == 8 then
			script.Parent.Parent.MonthNal.Text = AugustTEXT
		end
		
		if MonthRandomizer == 9 then
			script.Parent.Parent.MonthNal.Text = SeptemberTEXT
		end
		
		if MonthRandomizer == 10 then
			script.Parent.Parent.MonthNal.Text = OctoberTEXT
		end
		
		if MonthRandomizer == 11 then
			script.Parent.Parent.MonthNal.Text = NovemberTEXT
		end
		
		if MonthRandomizer == 12 then
			script.Parent.Parent.MonthNal.Text = DecemberTEXT
		end
	end)
end
coroutine.wrap(BNJZXAV_fake_script)()
local function QYYIM_fake_script() -- Frame.Dragify 
	local script = Instance.new('LocalScript', Frame)

	local Frame = script.Parent
	
	Frame.Active = true	
	Frame.Selectable = true
	Frame.Draggable = true
end
coroutine.wrap(QYYIM_fake_script)()
local function XNGFBQZ_fake_script() -- CloseButton.CloseScript 
	local script = Instance.new('LocalScript', CloseButton)

	local Frame = script.Parent.Parent
	
	script.Parent.MouseButton1Click:Connect(function()
		Frame.Visible = false
		script.Parent.Parent.Parent.OpenButton.Visible = true
	end)
end
coroutine.wrap(XNGFBQZ_fake_script)()
local function JHFLA_fake_script() -- OpenButton.OpenScript 
	local script = Instance.new('LocalScript', OpenButton)

	local Frame = script.Parent.Parent.Frame
	
	script.Parent.MouseButton1Click:Connect(function()
		Frame.Visible = true
		script.Parent.Visible = false
	end)
end
coroutine.wrap(JHFLA_fake_script)()
"
azvWwYK4,fill v2,LDMCoding,Lua,Monday 30th of October 2023 09:05:06 PM CDT,"local tArgs = { ... }

local x = tonumber(tArgs[1])
local z = tonumber(tArgs[2])
local y = tonumber(tArgs[3])
if x == nil or z == nil or y == nil then
    print(""Usage: fill <x> <z> <y> <true/false>"")
    return
end"
48ffcZpx,ппп,Afanas2707,C++,Monday 30th of October 2023 08:11:54 PM CDT,"#include <iostream>

void createLinksArray(int* inputArray, int size) {

    int* linksArray = new int[size];

    // Заполняем linksArray начальными индексами (0, 1, 2, ...)
    for (int i = 0; i < size; i++) {
        linksArray[i] = i;
    }

    // Реализуем сортировку (например, сортировку пузырьком) для linksArray
    for (int i = 0; i < size - 1; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            if (inputArray[linksArray[j]] > inputArray[linksArray[j + 1]]) {
                // Меняем местами индексы, чтобы отсортировать linksArray
                int temp = linksArray[j];
                linksArray[j] = linksArray[j + 1];
                linksArray[j + 1] = temp;
            }
        }
    }

    for (int i = 0; i < size; i++) {
        std::cout << linksArray[i] << "" "";
    }

    std::cout << std::endl;

    // Восстанавливаем отсортированный массив в inputArray
    int* sortedArray = new int[size];
    for (int i = 0; i < size; i++) {
        sortedArray[i] = inputArray[linksArray[i]];
    }

    for (int i = 0; i < size; i++) {
        std::cout << sortedArray[i] << "" "";
    }

    // Копируем отсортированный массив обратно в inputArray
    for (int i = 0; i < size; i++) {
        inputArray[i] = sortedArray[i];
    }

    delete[] sortedArray; // Освобождаем память, выделенную для sortedArray
}

int main() {
    int inputNumbers[] = {534, 222, 121, 442, 320};
    int size = sizeof(inputNumbers) / sizeof(inputNumbers[0]);

    createLinksArray(inputNumbers, size);

    for (int i = 0; i < size; i++) {
        std::cout << inputNumbers[i] << "" "";
    }

    return 0;
}
"
tSptWeqp,menu ciclico.py,Sergio_Istea,Python,Monday 30th of October 2023 08:02:32 PM CDT,"#!/usr/bin/env python
import os

productos = []
while True:
    os.system('clear')

    print(""Ingreso\t'1'\nLista\t'2'\nGuardar\t'3'\nSalir\t'4'"")

    opcion = input(""Ingrese una opcion: "")

    if opcion == ""1"":

        os.system('clear')
        while True:

            item = input(""Ingrese nombre del producto ('S' para salir):"" )
            if item == ""S"":

                break

            elif item in productos:

                input(f""Producto '{item}' ya fue cargado."")
                continue

            productos.insert(0, item)

    elif opcion == ""2"":
        os.system('clear')
        print('\n'.join(productos))

        input(""press enter"")
        continue

    elif opcion == ""3"":

        # ""w"" crea y sobre escribe el fichero si existe.
        # ""a"" añade al fichero, crea si no existe.
        with open(""productos.txt"", ""a"") as objeto_archivo:

            for elemento in productos:

                objeto_archivo.write(str(elemento) + ""\n"")



    elif opcion == ""4"":

        exit(0)

    else:

        print(""Opcion incorrecta."")
"
CU74YkDH,Untitled,puffpuff0,Lua,Monday 30th of October 2023 07:30:01 PM CDT,"-- Initialize the monitor
local monitor = peripheral.wrap(""top"")  -- assuming the monitor is on the top of the computer
local width, height = monitor.getSize()
monitor.setTextScale(0.5)
monitor.clear()
monitor.setCursorPos(1, 1)

-- Function to draw the button and its box
local function drawButton()
  local x = math.floor(width / 2) - 4  -- offset to center ""Press Me"" (which is 7 characters long)
  local y = math.floor(height / 2) - 1
  
  -- Draw the top line of the box
  monitor.setCursorPos(x, y)
  monitor.write(""---------"")
  
  -- Draw the sides and text of the box
  monitor.setCursorPos(x, y + 1)
  monitor.write(""|Press Me|"")
  
  -- Draw the bottom line of the box
  monitor.setCursorPos(x, y + 2)
  monitor.write(""---------"")
end

-- Function to display Minecraft world time
local function displayTime()
  local time = os.time()
  monitor.clear()
  monitor.setCursorPos(1, 1)
  monitor.write(""Current Time: "" .. time)
  sleep(2)  -- display the time for 2 seconds
  monitor.clear()
  drawButton()
end

-- Draw the initial button and box
drawButton()

-- Event Loop
while true do
  local event, side, x, y = os.pullEvent(""monitor_touch"")
  local x1 = math.floor(width / 2) - 4
  local x2 = math.floor(width / 2) + 4
  local yCenter = math.floor(height / 2)
  
  if x >= x1 and x <= x2 and y >= yCenter - 1 and y <= yCenter + 1 then
    displayTime()
  end
end
"
MqTpLddu,2023-10-30_stats.json,rdp_snitch,JSON,Monday 30th of October 2023 07:18:24 PM CDT,"{
  ""ip"": {
    ""111.61.253.55"": 3,
    ""5.8.10.202"": 6,
    ""205.210.31.174"": 9,
    ""169.255.191.210"": 18,
    ""80.94.95.238"": 3,
    ""87.251.75.64"": 3,
    ""212.70.149.146"": 15,
    ""136.144.35.205"": 3,
    ""78.128.114.2"": 3,
    ""87.251.75.120"": 3,
    ""87.251.75.145"": 6,
    ""185.170.144.3"": 6,
    ""185.170.144.113"": 18,
    ""62.122.184.165"": 6,
    ""205.210.31.193"": 9,
    ""185.190.24.101"": 3,
    ""58.218.204.183"": 9,
    ""141.98.11.128"": 9,
    ""194.165.16.34"": 9,
    ""106.116.169.71"": 3,
    ""152.32.199.73"": 3,
    ""198.235.24.199"": 9,
    ""104.129.131.78"": 6,
    ""179.60.147.5"": 3,
    ""45.143.201.62"": 15,
    ""167.248.133.126"": 3,
    ""81.28.6.18"": 6,
    ""167.94.146.60"": 3,
    ""198.235.24.37"": 9,
    ""62.204.41.146"": 6
  },
  ""asn"": {
    ""AS24547"": 3,
    ""AS34665"": 6,
    ""AS396982"": 36,
    ""AS327879"": 18,
    ""AS204428"": 18,
    ""AS208091"": 12,
    ""AS396356"": 3,
    ""AS50360"": 3,
    ""AS197414"": 24,
    ""AS57523"": 6,
    ""AS211632"": 3,
    ""AS4134"": 12,
    ""AS209605"": 9,
    ""AS48721"": 9,
    ""AS135377"": 3,
    ""AS396949"": 6,
    ""AS209588"": 3,
    ""AS210950"": 15,
    ""AS398722"": 3,
    ""AS204548"": 6,
    ""AS398705"": 3,
    ""AS59425"": 6
  },
  ""isp"": {
    ""China Mobile communications corporation"": 3,
    ""Petersburg Internet Network ltd"": 6,
    ""Google LLC"": 36,
    ""Ajywa Telcom Network"": 18,
    ""SS-Net"": 18,
    ""Xhost Internet Solutions LP"": 36,
    ""Latitude.sh"": 3,
    ""Tamatiya EOOD"": 3,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Internet Solutions & Innovations LTD."": 3,
    ""Chinanet"": 12,
    ""UAB Host Baltic"": 9,
    ""Flyservers S.A."": 12,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Kamatera"": 6,
    ""TOV E-RISHENNYA"": 15,
    ""Censys, Inc."": 6,
    ""Kamatera Inc"": 6,
    ""Horizon LLC"": 6
  },
  ""org"": {
    ""China Mobile"": 3,
    ""PIN DC"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""Ajywa Telecom"": 18,
    ""BtHoster LTD"": 3,
    ""Xhost Internet Solutions"": 12,
    ""4Media Ltd"": 15,
    ""Panq B.V"": 3,
    ""Tamatiya EOOD"": 3,
    ""Xhostis"": 24,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Tribeka Web Advisors S.A"": 3,
    ""Chinanet JS"": 9,
    ""Unknown"": 9,
    ""Flyservers S.A"": 9,
    ""Chinanet HE"": 3,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Cloud Web Manage"": 6,
    ""Cloud Solutions S.A"": 3,
    ""TOV VAIZ PARTNER"": 15,
    ""Censys, Inc."": 6,
    ""Cloudwebmanage EU FR"": 6,
    ""Horizon LLC"": 6
  },
  ""regionName"": {
    ""Hebei"": 6,
    ""St.-Petersburg"": 6,
    ""California"": 36,
    ""South Kivu Province"": 18,
    ""Budapest"": 3,
    ""England"": 12,
    ""Plovdiv"": 18,
    ""New Jersey"": 3,
    ""North Holland"": 24,
    ""Moscow"": 12,
    ""Mariehamns stad"": 3,
    ""Jiangsu"": 9,
    ""Kaunas"": 18,
    ""Sao Paulo"": 3,
    ""Texas"": 6,
    ""Distrito Federal"": 3,
    ""Kyiv City"": 15,
    ""Michigan"": 3,
    ""Hesse"": 9
  },
  ""country"": {
    ""China"": 15,
    ""Russia"": 18,
    ""United States"": 48,
    ""DR Congo"": 18,
    ""Hungary"": 3,
    ""United Kingdom"": 12,
    ""Bulgaria"": 18,
    ""Netherlands"": 24,
    ""Aland Islands"": 3,
    ""Lithuania"": 18,
    ""Brazil"": 3,
    ""Venezuela"": 3,
    ""Ukraine"": 15,
    ""Germany"": 9
  },
  ""account"": {
    ""(empty)"": 21,
    ""VzBEvbeOt"": 3,
    ""rlcwYX"": 3,
    ""AIHAbV"": 3,
    ""hello"": 39,
    ""Administr"": 78,
    ""Domain"": 30,
    ""avttotZKK"": 3,
    ""ATuKSt"": 3,
    ""bIJgWf"": 3,
    ""Administrator"": 3,
    ""wvJyrWauQ"": 3,
    ""MbnmUa"": 3,
    ""kQMceH"": 3,
    ""nwXHxdhMJ"": 3,
    ""DcijlF"": 3,
    ""QeBWxA"": 3
  },
  ""keyboard"": {
    ""Unknown"": 207
  },
  ""client_build"": {
    ""Unknown"": 207
  },
  ""client_name"": {
    ""Unknown"": 207
  },
  ""ip_type"": {
    ""mobile"": 3,
    ""Unknown"": 150,
    ""hosting"": 42,
    ""proxy"": 12
  }
}"
tZENs2PS,2023-10-30_stats.json,rdp_snitch,JSON,Monday 30th of October 2023 07:16:11 PM CDT,"{
  ""ip"": {
    ""111.61.253.55"": 2,
    ""5.8.10.202"": 4,
    ""205.210.31.174"": 6,
    ""169.255.191.210"": 12,
    ""80.94.95.238"": 2,
    ""87.251.75.64"": 2,
    ""212.70.149.146"": 10,
    ""136.144.35.205"": 2,
    ""78.128.114.2"": 2,
    ""87.251.75.120"": 2,
    ""87.251.75.145"": 4,
    ""185.170.144.3"": 4,
    ""185.170.144.113"": 12,
    ""62.122.184.165"": 4,
    ""205.210.31.193"": 6,
    ""185.190.24.101"": 2,
    ""58.218.204.183"": 6,
    ""141.98.11.128"": 6,
    ""194.165.16.34"": 6,
    ""106.116.169.71"": 2,
    ""152.32.199.73"": 2,
    ""198.235.24.199"": 6,
    ""104.129.131.78"": 4,
    ""179.60.147.5"": 2,
    ""45.143.201.62"": 10,
    ""167.248.133.126"": 2,
    ""81.28.6.18"": 4,
    ""167.94.146.60"": 2,
    ""198.235.24.37"": 6,
    ""62.204.41.146"": 4
  },
  ""asn"": {
    ""AS24547"": 2,
    ""AS34665"": 4,
    ""AS396982"": 24,
    ""AS327879"": 12,
    ""AS204428"": 12,
    ""AS208091"": 8,
    ""AS396356"": 2,
    ""AS50360"": 2,
    ""AS197414"": 16,
    ""AS57523"": 4,
    ""AS211632"": 2,
    ""AS4134"": 8,
    ""AS209605"": 6,
    ""AS48721"": 6,
    ""AS135377"": 2,
    ""AS396949"": 4,
    ""AS209588"": 2,
    ""AS210950"": 10,
    ""AS398722"": 2,
    ""AS204548"": 4,
    ""AS398705"": 2,
    ""AS59425"": 4
  },
  ""isp"": {
    ""China Mobile communications corporation"": 2,
    ""Petersburg Internet Network ltd"": 4,
    ""Google LLC"": 24,
    ""Ajywa Telcom Network"": 12,
    ""SS-Net"": 12,
    ""Xhost Internet Solutions LP"": 24,
    ""Latitude.sh"": 2,
    ""Tamatiya EOOD"": 2,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Internet Solutions & Innovations LTD."": 2,
    ""Chinanet"": 8,
    ""UAB Host Baltic"": 6,
    ""Flyservers S.A."": 8,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Kamatera"": 4,
    ""TOV E-RISHENNYA"": 10,
    ""Censys, Inc."": 4,
    ""Kamatera Inc"": 4,
    ""Horizon LLC"": 4
  },
  ""org"": {
    ""China Mobile"": 2,
    ""PIN DC"": 4,
    ""Palo Alto Networks, Inc"": 24,
    ""Ajywa Telecom"": 12,
    ""BtHoster LTD"": 2,
    ""Xhost Internet Solutions"": 8,
    ""4Media Ltd"": 10,
    ""Panq B.V"": 2,
    ""Tamatiya EOOD"": 2,
    ""Xhostis"": 16,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Tribeka Web Advisors S.A"": 2,
    ""Chinanet JS"": 6,
    ""Unknown"": 6,
    ""Flyservers S.A"": 6,
    ""Chinanet HE"": 2,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Cloud Web Manage"": 4,
    ""Cloud Solutions S.A"": 2,
    ""TOV VAIZ PARTNER"": 10,
    ""Censys, Inc."": 4,
    ""Cloudwebmanage EU FR"": 4,
    ""Horizon LLC"": 4
  },
  ""regionName"": {
    ""Hebei"": 4,
    ""St.-Petersburg"": 4,
    ""California"": 24,
    ""South Kivu Province"": 12,
    ""Budapest"": 2,
    ""England"": 8,
    ""Plovdiv"": 12,
    ""New Jersey"": 2,
    ""North Holland"": 16,
    ""Moscow"": 8,
    ""Mariehamns stad"": 2,
    ""Jiangsu"": 6,
    ""Kaunas"": 12,
    ""Sao Paulo"": 2,
    ""Texas"": 4,
    ""Distrito Federal"": 2,
    ""Kyiv City"": 10,
    ""Michigan"": 2,
    ""Hesse"": 6
  },
  ""country"": {
    ""China"": 10,
    ""Russia"": 12,
    ""United States"": 32,
    ""DR Congo"": 12,
    ""Hungary"": 2,
    ""United Kingdom"": 8,
    ""Bulgaria"": 12,
    ""Netherlands"": 16,
    ""Aland Islands"": 2,
    ""Lithuania"": 12,
    ""Brazil"": 2,
    ""Venezuela"": 2,
    ""Ukraine"": 10,
    ""Germany"": 6
  },
  ""account"": {
    ""(empty)"": 14,
    ""VzBEvbeOt"": 2,
    ""rlcwYX"": 2,
    ""AIHAbV"": 2,
    ""hello"": 26,
    ""Administr"": 52,
    ""Domain"": 20,
    ""avttotZKK"": 2,
    ""ATuKSt"": 2,
    ""bIJgWf"": 2,
    ""Administrator"": 2,
    ""wvJyrWauQ"": 2,
    ""MbnmUa"": 2,
    ""kQMceH"": 2,
    ""nwXHxdhMJ"": 2,
    ""DcijlF"": 2,
    ""QeBWxA"": 2
  },
  ""keyboard"": {
    ""Unknown"": 138
  },
  ""client_build"": {
    ""Unknown"": 138
  },
  ""client_name"": {
    ""Unknown"": 138
  },
  ""ip_type"": {
    ""mobile"": 2,
    ""Unknown"": 100,
    ""hosting"": 28,
    ""proxy"": 8
  }
}"
caLFjRQn,2023-10-30_stats.json,rdp_snitch,JSON,Monday 30th of October 2023 07:15:09 PM CDT,"{
  ""ip"": {
    ""111.61.253.55"": 1,
    ""5.8.10.202"": 2,
    ""205.210.31.174"": 3,
    ""169.255.191.210"": 6,
    ""80.94.95.238"": 1,
    ""87.251.75.64"": 1,
    ""212.70.149.146"": 5,
    ""136.144.35.205"": 1,
    ""78.128.114.2"": 1,
    ""87.251.75.120"": 1,
    ""87.251.75.145"": 2,
    ""185.170.144.3"": 2,
    ""185.170.144.113"": 6,
    ""62.122.184.165"": 2,
    ""205.210.31.193"": 3,
    ""185.190.24.101"": 1,
    ""58.218.204.183"": 3,
    ""141.98.11.128"": 3,
    ""194.165.16.34"": 3,
    ""106.116.169.71"": 1,
    ""152.32.199.73"": 1,
    ""198.235.24.199"": 3,
    ""104.129.131.78"": 2,
    ""179.60.147.5"": 1,
    ""45.143.201.62"": 5,
    ""167.248.133.126"": 1,
    ""81.28.6.18"": 2,
    ""167.94.146.60"": 1,
    ""198.235.24.37"": 3,
    ""62.204.41.146"": 2
  },
  ""asn"": {
    ""AS24547"": 1,
    ""AS34665"": 2,
    ""AS396982"": 12,
    ""AS327879"": 6,
    ""AS204428"": 6,
    ""AS208091"": 4,
    ""AS396356"": 1,
    ""AS50360"": 1,
    ""AS197414"": 8,
    ""AS57523"": 2,
    ""AS211632"": 1,
    ""AS4134"": 4,
    ""AS209605"": 3,
    ""AS48721"": 3,
    ""AS135377"": 1,
    ""AS396949"": 2,
    ""AS209588"": 1,
    ""AS210950"": 5,
    ""AS398722"": 1,
    ""AS204548"": 2,
    ""AS398705"": 1,
    ""AS59425"": 2
  },
  ""isp"": {
    ""China Mobile communications corporation"": 1,
    ""Petersburg Internet Network ltd"": 2,
    ""Google LLC"": 12,
    ""Ajywa Telcom Network"": 6,
    ""SS-Net"": 6,
    ""Xhost Internet Solutions LP"": 12,
    ""Latitude.sh"": 1,
    ""Tamatiya EOOD"": 1,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Internet Solutions & Innovations LTD."": 1,
    ""Chinanet"": 4,
    ""UAB Host Baltic"": 3,
    ""Flyservers S.A."": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Kamatera"": 2,
    ""TOV E-RISHENNYA"": 5,
    ""Censys, Inc."": 2,
    ""Kamatera Inc"": 2,
    ""Horizon LLC"": 2
  },
  ""org"": {
    ""China Mobile"": 1,
    ""PIN DC"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Ajywa Telecom"": 6,
    ""BtHoster LTD"": 1,
    ""Xhost Internet Solutions"": 4,
    ""4Media Ltd"": 5,
    ""Panq B.V"": 1,
    ""Tamatiya EOOD"": 1,
    ""Xhostis"": 8,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Tribeka Web Advisors S.A"": 1,
    ""Chinanet JS"": 3,
    ""Unknown"": 3,
    ""Flyservers S.A"": 3,
    ""Chinanet HE"": 1,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Cloud Web Manage"": 2,
    ""Cloud Solutions S.A"": 1,
    ""TOV VAIZ PARTNER"": 5,
    ""Censys, Inc."": 2,
    ""Cloudwebmanage EU FR"": 2,
    ""Horizon LLC"": 2
  },
  ""regionName"": {
    ""Hebei"": 2,
    ""St.-Petersburg"": 2,
    ""California"": 12,
    ""South Kivu Province"": 6,
    ""Budapest"": 1,
    ""England"": 4,
    ""Plovdiv"": 6,
    ""New Jersey"": 1,
    ""North Holland"": 8,
    ""Moscow"": 4,
    ""Mariehamns stad"": 1,
    ""Jiangsu"": 3,
    ""Kaunas"": 6,
    ""Sao Paulo"": 1,
    ""Texas"": 2,
    ""Distrito Federal"": 1,
    ""Kyiv City"": 5,
    ""Michigan"": 1,
    ""Hesse"": 3
  },
  ""country"": {
    ""China"": 5,
    ""Russia"": 6,
    ""United States"": 16,
    ""DR Congo"": 6,
    ""Hungary"": 1,
    ""United Kingdom"": 4,
    ""Bulgaria"": 6,
    ""Netherlands"": 8,
    ""Aland Islands"": 1,
    ""Lithuania"": 6,
    ""Brazil"": 1,
    ""Venezuela"": 1,
    ""Ukraine"": 5,
    ""Germany"": 3
  },
  ""account"": {
    ""(empty)"": 7,
    ""VzBEvbeOt"": 1,
    ""rlcwYX"": 1,
    ""AIHAbV"": 1,
    ""hello"": 13,
    ""Administr"": 26,
    ""Domain"": 10,
    ""avttotZKK"": 1,
    ""ATuKSt"": 1,
    ""bIJgWf"": 1,
    ""Administrator"": 1,
    ""wvJyrWauQ"": 1,
    ""MbnmUa"": 1,
    ""kQMceH"": 1,
    ""nwXHxdhMJ"": 1,
    ""DcijlF"": 1,
    ""QeBWxA"": 1
  },
  ""keyboard"": {
    ""Unknown"": 69
  },
  ""client_build"": {
    ""Unknown"": 69
  },
  ""client_name"": {
    ""Unknown"": 69
  },
  ""ip_type"": {
    ""mobile"": 1,
    ""Unknown"": 50,
    ""hosting"": 14,
    ""proxy"": 4
  }
}"
NhKa4RqT,Excel - generic way to split Address from one column into multiple columns.,crexin,PowerShell,Monday 30th of October 2023 07:08:58 PM CDT,"Assume Address data is in Column E and has data like ""123 Any ST Anytown NY 12345""

First Zipcode match for K2 = Right(E2,5)
Or Combined to match all in one shot - 
=IF(COUNTIF(E2,""*-*""),RIGHT(E2,10),RIGHT(E2,5))

Zip Code matching - figure out if it has a 9 digit code instead of 5
=IF(COUNTIF(K2,""*-*""),RIGHT(E2,10),K2) 


Find position of last space in string

=FIND(""?"",SUBSTITUTE(E2,"" "",""?"",LEN(E2)-LEN(SUBSTITUTE(E2,"" "",""""))))

From <https://www.bing.com/search?q=excel+find+position+of+last+space+in+string&qs=UT&pq=excel+find+position+of+last+space&sc=10-33&cvid=385C46DC879C40EDBC2AAA61EA4896DF&FORM=QBRE&sp=1&ghc=1&lq=0> 

Find state:

=MID(E2,FIND(""?"",SUBSTITUTE(E2,"" "",""?"",LEN(E2)-LEN(SUBSTITUTE(E2,"" "",""""))))-2,2)



Find 2nd to last space:

=FIND(""/"",SUBSTITUTE(E2,"" "",""/"", LEN(E2)- LEN(SUBSTITUTE(E2,"" "",""""))-1))

From <https://excelnotes.com/how-to-locate-the-last-space-in-the-text-string/> 

Third to last space

=FIND(""/"",SUBSTITUTE(E2,"" "",""/"",LEN(E2)-LEN(SUBSTITUTE(E2,"" "",""""))-2))

From <https://excelnotes.com/how-to-locate-the-last-space-in-the-text-string/> 


=MID(E2,
FIND(""/"",SUBSTITUTE(E2,"" "",""/"", LEN(E2)- LEN(SUBSTITUTE(E2,"" "",""""))-1)),FIND(""/"",SUBSTITUTE(E2,"" "",""/"",LEN(E2)-LEN(SUBSTITUTE(E2,"" "",""""))-2))-FIND(""/"",SUBSTITUTE(E2,"" "",""/"", LEN(E2)- LEN(SUBSTITUTE(E2,"" "",""""))-1)))


Find City

I2 = Pos 2nd to last space = =FIND(""/"",SUBSTITUTE(E2,"" "",""/"", LEN(E2)- LEN(SUBSTITUTE(E2,"" "",""""))-1))
J2 = Pos3rdtolastspace = =FIND(""/"",SUBSTITUTE(E2,"" "",""/"",LEN(E2)-LEN(SUBSTITUTE(E2,"" "",""""))-2))
=MID(E2,J2,I2-J2)



Only about 20 didn't match the city

Street Address formula (in column H)

=MID(E2,1,I2)"
vS29EVNc,Muffin Cinnamon,Rnery,Bash,Monday 30th of October 2023 07:08:43 PM CDT,"#!/usr/bin/env bash

check_git_online() {
    if ! git ls-remote https://github.com &>/dev/null; then
        echo ""Erro: Não foi possível estabelecer conexão com o servidor Git. Verifique sua conexão à internet.""
        exit 1
    fi
}

install_git() {
    if ! command -v git &> /dev/null; then
        sudo apt-get install git -y
    fi
}

clone_and_install_extension() {
    check_git_online
    git clone https://github.com/dmo60/CoverflowAltTab.git
    cd CoverflowAltTab
    make
    make install
    make enable
}

restart_muffin_window_manager() {
    muffin --replace
}

main() {
    echo ""Iniciando a instalação da extensão Coverflow Alt-Tab...""

    install_git
    clone_and_install_extension
    restart_muffin_window_manager

    echo ""A extensão Coverflow Alt-Tab foi instalada e ativada. Reinicie a sessão ou faça logoff e login para aplicar as alterações.""
}

main
"
F7sNQ1qK,menu of loginsys,atlasim,Lua,Monday 30th of October 2023 07:03:51 PM CDT,"-- Define Functions for program

local function centerText(text) -- Write centered text, Never ysed
    local x,y = term.getSize()
    local x2,y2 = term.getCursorPos()
    term.setCursorPos(math.ceil((x / 2) - (text:len() / 2)), y2)
    write(text)
end

local function titlebar(title) -- Write Yellow Title bar
    term.clear()
    term.setTextColor(colors.yellow)
    term.setCursorPos(1,1)
    term.write(title)
    term.setTextColor(colors.white)
    term.setCursorPos(1,2)
end

local function invokemenu(menucontents, menutitle) -- Invokes a menu dialog
    selectpos = 1
    lengh = #menucontents
    while true do 
        titlebar(menutitle)
        print("""")
        for i=1, lengh, 1 do
            if i == selectpos then
                print("" > ""..menucontents[i].."""") 
            else 
                print(""   ""..menucontents[i].."""")
            end
        end
        a,b = os.pullEventRaw()
        if a == ""key"" then 
            if b == 200 and selectpos > 1 then
                selectpos = selectpos - 1
            elseif b == 208 and selectpos < lengh then
                selectpos = selectpos + 1
            elseif b == 28 then 
                break
            end
        end
    end
    return selectpos
end

-- Start of program
multishell.setTitle(shell.openTab(""shell""), ""Shell"") -- Open default shell

while true do
    multishell.setTitle(multishell.getCurrent(), ""Menu"")
    local menu1 = invokemenu({""Programs"",""Shell"",""Logout"",""Power Options""},""Main Menu"")
    -- Program Selector
    if menu1 == 1 then
        local proglist = fs.list(""/Programs"")
        local exitnumber = #proglist + 1
        table.insert(proglist, ""Back"")
        local programsmenu = invokemenu(proglist,""Programs"")
        if programsmenu == exitnumber then 
            a = 1
        else 
            local progtorun = ""/Programs/""..proglist[programsmenu]
            shell.switchTab(shell.openTab(progtorun))
        end
    -- Open Shell
    elseif menu1 == 2 then 
        local tabnum = shell.openTab(""shell"")
        multishell.setTitle(tabnum, ""Shell"")
        shell.switchTab(tabnum)
    -- Logout
    elseif menu1 == 3 then 
        shell.run(""startup/loginsys"")
        os.exit()
    -- Shutdown Options
    elseif menu1 == 4 then
        shutdownmenu = invokemenu({""Shutdown"", ""Reboot"", ""Back""},""Power Options"")
        if shutdownmenu == 1 then 
            os.shutdown()
        elseif shutdownmenu == 2 then 
            os.reboot()
        elseif os.shutdown == 3 then 
            a = 1
        end
    end
end"
