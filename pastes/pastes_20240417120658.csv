id,title,username,language,date,content
BEKFFVZz,ü§ë G2A.com Free Gift Card Guide Apr 2024 FIX ü§ë,jusst2k4,GetText,Wednesday 17th of April 2024 06:45:12 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_807368.pdf

Working as of:
17 April 2024"
wMzt8nCi,ü§ë G2A.com Free Gift Card Guide Apr 2024 FIX ü§ë,ssss50w,GetText,Wednesday 17th of April 2024 06:39:03 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
17 April 2024"
SjTb0NkQ,p5.js Render test,Mr_jack,JavaScript,Wednesday 17th of April 2024 06:28:23 AM CDT,"function setup() {
  createCanvas(400, 400);
  frameRate(60);
}

function draw() {
  time = millis() / 1000.0;
  background(0);
  
  hw = width/2;
  hh = height/2;
  
  t = time * 4.0;
  
  x = 1 + 0.5 * Math.sin(t);
  y = 1 + 0.5 * Math.cos(t);
  s = 0.75 + 0.25 * Math.cos(t/2.0);
  
  fill(255);
  circle(hw * x, hh * y, min(hw, hh)*0.75 * s);
}"
aE4tG4eq,move,Oxolin,Lua,Wednesday 17th of April 2024 06:27:25 AM CDT,"local function move(dir)
    if dir == ""move"" then
		turtle.forward()
    end
    if dir == ""right"" then
        turtle.turnRight()
        turtle.forward()
    end
    if dir == ""left"" then
        turtle.turnLeft()
        turtle.forward()
    end
    if dir == ""up"" then
        turtle.up()
    end
    if dir == ""down"" then
        turtle.down()
    end
end

return { move = move }"
YKPN1BQp,data899,TestGuy1,JSON,Wednesday 17th of April 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '0f09e43cfbc22ee45af0c7573560e000ab7199435e9fbd3d89c74353fd393053fbb2a1f94a0fa659e92c63fccd3cfd37cebe0d5d78000c7d9cf3cf8c978732f60df3e372089bd12075c2ca16ae6ac82fd1f5c01bfdc3911059cb876c3157262cd517c631682807bf977c18ce8ce68200dd42e811c75adb963583835c862ce989',
  otherdata: [
    '23fea37c5bd12b7a90024333d113a78a',
    'eb6fb8ec7e647ae8e64a7840be39c534',
    '09e219ee8db9c075a30d7c20db4e9479',
    '50929a6ec1389d030a0c661096edb099',
    'e65ded612de070eb0be0d9e2d82a134e',
    'f1ea1374a5c5ce5e58ed8e6e75cfca08',
    'b2d7d8f55a1d751b489a1a5289305db2',
    'f0cb8ff88c8bea75f0228ef2c4c270aa'
  ]
}"
fZC3g2EF,Mad,Unknown_No_1,PHP,Wednesday 17th of April 2024 05:54:17 AM CDT,Key band h guys shaam tak wait Karo new mod aa raha hai 
UAi3MrPh,User's Roles Sorting (Using API),Aouchan,ASM (NASM),Wednesday 17th of April 2024 05:48:41 AM CDT,"$nomention

$if[$message==]
    $var[member;$authorID]
$elseif[$findUser[$message;no]==]
        $var[member;$message]
        $onlyIf[$userExists[$var[member]]==true;`‚ùå` User or Member `""$message""` not found.]
$else
    $var[member;$findUser[$message;no]]
$endif

$httpAddHeader[apikey;$getVar[ApiKey]]
$httpAddHeader[bot-token;$getVar[BotToken]]
$httpAddHeader[guild-id;$guildID] 
$httpAddHeader[member;$var[member]]

$httpGet[https://bdfddata.rickyjs.xyz/release/guild/members]
$jsonParse[$httpResult]

$var[user.roles.length;$jsonArrayCount[details;roles]]

$if[$json[details;message]==Unknown Member]
    That user isn't in this server.
$else
    $if[$var[user.roles.length]==0]
        $username[$var[member]] has no roles.
    $else
        $textSplit[$jsonJoinArray[details;roles;-];-]
        $var[user.roles.length;$getTextSplitLength]
        
        $jsonParse[{ ""sorted.roles"": [\] }]
        
        $var[x;1]
        $var[code;%{DOL}%var[role-id\;%{DOL}%splitText[%{DOL}%var[x\]\]\]%{DOL}%jsonSetString[%{DOL}%rolePosition[%{DOL}%var[role-id\]\]\;%{DOL}%var[role-id\]\]%{DOL}%var[x\;%{DOL}%calculate[%{DOL}%var[x\] + 1\]\]]
        
        $if[$var[user.roles.length]<=100]
            $var[loop;$replaceText[$cropText[$repeatMessage[10;$repeatMessage[10;@]];$var[user.roles.length];];@;$var[code]]]
        $else
            $var[loop;$replaceText[$cropText[$repeatMessage[10;$repeatMessage[10;$repeatMessage[10;#]]];$var[user.roles.length];];#;$var[code]]]
        $endif
        
        $eval[$var[loop]]
        
        $var[n;1]
        $var[code;%{DOL}%if[%{DOL}%jsonArrayCount[sorted.roles\]==%{DOL}%var[user.roles.length\]\]%{DOL}%stop%{DOL}%endif%{DOL}%if[%{DOL}%json[%{DOL}%var[n\]\]!=\]%{DOL}%jsonArrayAppend[sorted.roles\;""%{DOL}%json[%{DOL}%var[n\]\]""\]%{DOL}%endif%{DOL}%var[n\;%{DOL}%calculate[%{DOL}%var[n\] + 1\]\]]
        
        $eval[$replaceText[$cropText[$repeatMessage[10;$repeatMessage[10;$repeatMessage[3;~]]];250;];~;$var[code]]]
        
        $var[separator;, ]
        $var[final.result;<@&$replaceText[$jsonJoinArray[sorted.roles;>$var[separator]<@&]>;"";]]
        
        $description[$var[final.result]]
        $color[8fdbd7]
        $footer[$username[$var[member]] has $jsonArrayCount[sorted.roles] roles]
    $endif
$endif
"
JmwCkJ7S,Esempio notifica con SSML per Mario,energywave,YAML,Wednesday 17th of April 2024 05:35:53 AM CDT,"‚Äì service: notify.alexa_media
  data:
  target:
    ‚Äì media_player.ovunque
  data:
    type: announce
    message: >
      {{ [
        ""<say-as interpret-as='interjection'>hey</say-as>, <amazon:domain name=""conversational"">hai superato il limite di consumo elettrico totale. Spegni qualcosa!</amazon:domain>"",
        ""<voice name=""Giorgio"">Attenzione! superato il limite di consumo elettrico totale. Spegnere qualcosa</voice>"",
        ""<voice name=""Carla"">Attenzione! superato il limite di consumo elettrico totale. Spegnere qualcosa</voice>"",
        ""<voice name=""Bianca"">Attenzione! superato il limite di consumo elettrico totale. Spegnere qualcosa</voice>"",
        ""<say-as interpret-as='interjection'>caspita</say-as> quante volte devo dirti di non superare la potenza del tuo contatore? Spegni qualcosa!"",
        ""<say-as interpret-as='interjection'>coraggio</say-as> devi spegnere qualcosa altrimenti salta la corrente!"",
        ""<say-as interpret-as='interjection'>eh gi√†</say-as> consumiamo corrente come se non ci fosse un limite... Spegni qualcosa, altrimenti salter√†!"",
        ""<say-as interpret-as='interjection'>tic-toc</say-as> il distacco del contatore si avvicina, che ne dici di spegnere qualcosa?"",
        ""<say-as interpret-as='interjection'>wow</say-as> quanti elettroni vedo passare da questi cavi! Spegni qualcosa per√≤, se non vuoi un distacco del contatore..."",
        ""<say-as interpret-as='interjection'>uffa</say-as> quante volte te lo devo dire di non superare la potenza del tuo contatore? Spegni qualcosa..."",
        ""<say-as interpret-as='interjection'>oh no</say-as> hai superato la potenza del contatore, spegni qualcosa!"",
        ""Non superare la potenza del contatore? <say-as interpret-as='interjection'>magari</say-as>, spegni qualcosa se non vuoi un distacco!""
      ] | random }}"
VvK5MRD8,!!!,Nil000,Email,Wednesday 17th of April 2024 05:18:27 AM CDT,"Hello, I am in need of 1000 Bitcoin Testnet, if anybody can help me I would be very grateful!
Once I am done testing, I will send all the coins back to the original donating address.
---
ANY AMOUNT HELPS!!!
---
My Bitcoin Testnet address is: mrLGSHqb7oLb33PMDq5kZCzQsDFhqd5aLN"
mg30YGwp,Untitled,Farz0l1x,Python,Wednesday 17th of April 2024 05:06:28 AM CDT,"def f(n):
    s = ''
    while n > 0:
        s += str(n % 19)
        n //= 19
    s = s[::-1]
    return s
M = 0
for x in range(1, 20):
    a = 9 * 19**7 + 8 * 19**6 + x * 19**5 + 7 * 19**4 + 9 * 19**3 + 6 * 19**2 + 4 * 19 + 1
    b = 3 * 19**4 + 6 * 19**3 + x * 19**2 + 19 + 4
    c = 7 * 19**3 + 3 * 19**2 + x * 19 + 4
    if a + b + c % 18 == 0:
        M = max(M, x)
    
A = 9 * 19**7 + 8 * 19**6 + M * 19**5 + 7 * 19**4 + 9 * 19**3 + 6 * 19**2 + 4 * 19 + 1
B = 3 * 19**4 + 6 * 19**3 + M * 19**2 + 19 + 4
C = 7 * 19**3 + 3 * 19**2 + M * 19 + 4
print((A + B + C) // 18)"
JGg3aSBS,clash sorting,SirCamembert,Python,Wednesday 17th of April 2024 05:00:56 AM CDT,"    # Create tree
    settings = ifcopenshell.geom.settings()
    context = ifcopenshell.util.representation.get_context(
        model, ""Model"", ""Body"", ""MODEL_VIEW""
    )
    settings.set_context_ids([context.id()])
    iterator = ifcopenshell.geom.iterator(
        settings,
        model,
        multiprocessing.cpu_count(),
        include=model.by_type(""IfcElement""),
    )
    if iterator.initialize():
        while True:
            # Use triangulation to build a BVH tree
            # tree.add_element(iterator.get())

            # Alternatively, use this code to build an unbalanced binary tree
            tree.add_element(iterator.get_native())

            if not iterator.next():
                break

    # Create clashes
    counter = 0
    for b in model.by_type(""IfcElement""):
        print(""----------------------------"")
        print(""Number of elements left: "", len(model.by_type(""IfcElement"")) - counter)
        print(f""That's the {counter+1}. element"")
        print(""Element investigated: "", b.Name)
        print(""The element type is: "", b.is_a())
        print(""-------"")
        print(""Start looking for clashed elements"")
        print(""   "")
        tic = time.perf_counter()
        elements = tree.select((b), extend=0.1)
        toc = time.perf_counter()
        print(f""Found {len(elements)} elements in:  {toc - tic:0.4f} seconds"")
        

    for b in model.by_type(""IfcElement""):
        starting_guid = ifcopenshell.guid.expand(b.GlobalId)
        output += (
            ""inst:Component_""
            + str(ifcopenshell.util.element.get_predefined_type(b)).lower()
            + ""_""
            + str(b.id())
            + ""\n""
        )
        output += ""\ta brot:Component ;"" + ""\n""
        starting_guid = ifcopenshell.guid.expand(b.GlobalId)
        if b.Name:
            output += '\trdfs:label ""' + b.Name + '""^^xsd:string ;' + ""\n""
        if b.Description:
            output += '\trdfs:comment ""' + b.Description + '""^^xsd:string ;' + ""\n""
        if b.is_a():
            output += '\trdfs:type ""' + b.is_a() + '""^^xsd:string ;' + ""\n""
        for b in elements:							# With looping through trees for each element I am able to get all adjacent 													#	components. I intend to do the same but with results from clashes.
            if ifcopenshell.guid.expand(b.GlobalId) != starting_guid:
                output += (
                    ""\tbrot:adjacentComponent inst:component_""
                    + b.Name
                    + +ifcopenshell.util.element.get_predefined_type(b)
                    + ""_""
                    + str(b.id())
                    + ""\n""
                )"
hUdnyzEB,Œ±Œ∫œÅŒøŒΩœÖŒºŒπŒ± œÑŒ∑œÇ œÄŒªŒ¨Œ∫Œ±œÇ...,plirof2,JavaScript,Wednesday 17th of April 2024 04:52:11 AM CDT,"ŒºœÄŒøœÅŒµŒØœÇ ŒΩŒ± ŒºŒøœÖ œÜœÑŒπŒ¨ŒæŒµœÇ ŒºŒµœÅŒπŒ∫Œ± Œ±œÉœÑŒµŒπŒ± ŒøŒΩŒøŒºŒ±œÑŒ± Œ≥ŒπŒ± ""œÉŒøŒ≤Œ±œÅŒ≠œÇ"" ŒøœÅŒ≥Œ±ŒΩœéœÉŒµŒπœÇ œÄŒøœÖ œÑŒø ŒøŒΩŒøŒºŒ± œÑŒøœÖœÇ ŒΩŒ± Œ≤Œ≥Œ¨Œ∂ŒµŒπ œÑŒø Œ±Œ∫œÅœåŒΩœÖŒºŒø Œ£.Œö.Œë.Œ§.Œë. ;

1. Œ£œâŒºŒ±œÑŒµŒØŒø ŒöŒøŒπŒΩœâŒΩŒπŒ∫ŒÆœÇ ŒëŒªŒªŒ∑ŒªŒµŒ≥Œ≥œçŒ∑œÇ Œ§Œ∑œÇ ŒëœÅœâŒ≥ŒÆœÇ (Œ£.Œö.Œë.Œ§.Œë.)
4. Œ£œÖŒΩŒ¥ŒµœÉŒºŒøœÇ ŒöŒøŒπŒΩœâŒΩŒπŒ∫ŒÆœÇ ŒëœÄŒøŒ∫Œ≠ŒΩœÑœÅœâœÉŒ∑œÇ Œ§Œ∑œÇ ŒëŒªŒªŒ∑ŒªŒµŒæŒ¨œÅœÑŒ∑œÉŒ∑œÇ (Œ£.Œö.Œë.Œ§.Œë.)
5. Œ£ŒøŒ≤Œ±œÅŒÆ ŒöŒøŒπŒΩœåœÑŒ∑œÑŒ± ŒëœÜŒøœÉŒØœâœÉŒ∑œÇ Œ§Œ∑œÇ ŒëœÅœâŒ≥ŒÆœÇ (Œ£.Œö.Œë.Œ§.Œë.)
1. Œ£œÖŒΩŒ¥ŒµœÉŒºŒøœÇ ŒöŒøŒπŒΩœâŒΩŒπŒ∫ŒÆœÇ ŒëœÄŒøœÉœÑŒøŒªŒÆœÇ Œ§Œ∑œÇ ŒëŒªŒªŒ∑ŒªŒµŒ≥Œ≥œçŒ∑œÇ
2. Œ£œÖŒΩŒ¥ŒµœÉŒºŒøœÇ ŒöŒëœÑŒ¨ Œ§Œ∑œÇ ŒëŒ¥ŒπŒ∫ŒØŒ±œÇ 
3. Œ£œâŒºŒ±œÑŒµŒØŒø ŒöŒøŒπŒΩœâŒΩŒπŒ∫ŒÆœÇ ŒëŒªŒªŒ∑ŒªŒµŒ≥Œ≥œçŒ∑œÇ Œ§œâŒΩ ŒëœÉœÑŒ≠Œ≥œâŒΩ

1. Œ£œâŒºŒ±œÑŒµŒØŒø ŒöŒøŒπŒΩœâŒΩŒØŒ±œÇ ŒëŒΩœÑŒπœÉœÑŒ¨Œ∏ŒºŒπœÉŒ∑œÇ Œ§ŒµœáŒΩœéŒΩ & ŒëŒ∏ŒªŒøœÄŒ±ŒπŒ¥ŒµŒØŒ±œÇ (Œ£.Œö.Œë.Œ§.Œë.)
2. Œ£œÖŒΩŒ¥ŒµœÉŒºŒøœÇ ŒöŒ±œÑŒ±œÄŒøŒªŒ≠ŒºŒ∑œÉŒ∑œÇ ŒëŒΩœÖœÄŒ±Œ∫ŒøŒÆœÇ Œ§œâŒΩ ŒëŒΩŒ≠ŒºœâŒΩ (Œ£.Œö.Œë.Œ§.Œë.)
3. Œ£œÖŒΩœÑŒ±œÅŒ±Œ∫œÑŒÆœÇ ŒöŒøŒπŒΩœâŒΩŒπŒ∫œéŒΩ ŒëœÄŒøœÑŒ±ŒºŒπœéŒΩ Œ§œâŒΩ ŒëŒΩœÑŒπœÉœÖŒΩœÑŒ±Œ≥ŒºŒ±œÑŒπŒ∫œéŒΩ (Œ£.Œö.Œë.Œ§.Œë.)
4. Œ£œâŒºŒ±œÑŒµŒØŒø ŒöŒ±œÑŒ¨ŒªŒ∑œàŒ∑œÇ ŒëŒ∏ŒªŒ∑œÑŒπœÉŒºŒøœç & Œ§ŒµœáŒΩŒøŒªŒøŒ≥ŒØŒ±œÇ ŒëŒΩŒ¨œÄœÑœÖŒæŒ∑œÇ (Œ£.Œö.Œë.Œ§.Œë.)
5. Œ£œçŒΩŒ¥ŒµœÉŒºŒøœÇ ŒöŒ±ŒªŒªŒπœÑŒµœáŒΩŒπŒ∫ŒÆœÇ ŒëŒΩŒ±Œ∂ŒÆœÑŒ∑œÉŒ∑œÇ Œ§Œ∑œÇ ŒëŒªŒÆŒ∏ŒµŒπŒ±œÇ (Œ£.Œö.Œë.Œ§.Œë.)
6. Œ£œÖŒΩŒ≠ŒªŒπŒæŒ∑ ŒöœÅŒπœÉŒπŒºœåœÑŒ∑œÑŒ±œÇ ŒëŒΩŒ±Œ∫ŒøŒªŒøœÖŒ∏ŒπœéŒΩ Œ§œâŒΩ ŒëŒΩœÖœÄœåœÑŒ±Œ∫œÑœâŒΩ (Œ£.Œö.Œë.Œ§.Œë.)
7. Œ£œâŒºŒ±œÑŒµŒØŒø ŒöŒ±œÑŒ±œÉœÑœÅŒøœÜŒÆœÇ ŒëŒΩœÑŒØœÉœÑŒ±œÉŒ∑œÇ Œ§œâŒΩ ŒëœÉŒ∏ŒµŒΩœéŒΩ (Œ£.Œö.Œë.Œ§.Œë.)
8. Œ£œçŒΩŒ¥ŒµœÉŒºŒøœÇ ŒöŒπŒΩŒ∑ŒºŒ±œÑŒøŒ≥œÅŒ±œÜŒπŒ∫œéŒΩ ŒëœÄŒ±œÑŒµœéŒΩœâŒΩ Œ§Œ∑œÇ ŒëŒ∏œâœåœÑŒ∑œÑŒ±œÇ (Œ£.Œö.Œë.Œ§.Œë.)
9. Œ£œçŒªŒªŒøŒ≥ŒøœÇ ŒöŒøœÖŒªœÑŒøœçœÅŒ±œÇ ŒëŒΩŒ±Œ∫ŒøœçœÜŒπœÉŒ∑œÇ Œ§œâŒΩ ŒëŒΩŒ±œÅœáŒπŒ∫œéŒΩ (Œ£.Œö.Œë.Œ§.Œë.)
10. Œ£Œ∫ŒøœÑŒµŒπŒΩŒÆ ŒöŒ±œÑŒ±ŒΩœåŒ∑œÉŒ∑ ŒëŒΩŒ∏œÅœéœÄŒπŒΩŒ∑œÇ Œ§œÅŒ≠ŒªŒ±œÇ ŒëœÄŒ±ŒΩœÑŒÆœÉŒµœâŒΩ (Œ£.Œö.Œë.Œ§.Œë.)
11. Œ£œÖŒΩŒ≠ŒªŒπŒæŒ∑ ŒöœÅŒ±œÖŒ≥œéŒΩ ŒëŒªŒªŒ∑ŒªŒµŒ≥Œ≥œçŒ∑œÇ Œ§œâŒΩ ŒëŒΩœÖœÄœåœÑŒ±Œ∫œÑœâŒΩ (Œ£.Œö.Œë.Œ§.Œë.)
12. Œ£œçŒΩŒ¥ŒµœÉŒ∑ ŒöŒøŒπŒΩŒøœÑŒπŒ∫ŒÆœÇ ŒëœÄŒµŒªŒµœÖŒ∏Œ≠œÅœâœÉŒ∑œÇ Œ§œâŒΩ ŒëŒΩœÑŒπ-Œ∫ŒøŒπŒΩœâŒΩŒπŒ∫œéŒΩ (Œ£.Œö.Œë.Œ§.Œë.)
13. Œ£œâŒºŒ±œÑŒµŒØŒø ŒöŒ±œÑŒ±œÉŒ∫ŒµœÖœéŒΩ ŒëŒΩŒ±Œ∫œçŒ∫ŒªœâœÉŒ∑œÇ Œ§œâŒΩ ŒëŒΩœÑŒØœÄŒ±ŒΩœâ (Œ£.Œö.Œë.Œ§.Œë.)
14. Œ£œÖŒΩŒ±œÉœÄŒπœÉŒºœåœÇ ŒöŒøœÖŒªœÑŒøœçœÅŒ±œÇ ŒëŒΩœÑŒØœÉœÑŒ±œÉŒ∑œÇ Œ§œâŒΩ ŒëŒΩŒµŒ∫Œ¥ŒπŒÆŒ≥Œ∑œÑœâŒΩ (Œ£.Œö.Œë.Œ§.Œë.)
15. Œ£œçŒΩŒ¥ŒµœÉŒ∑ ŒöŒπŒΩŒ∑ŒºŒ±œÑŒøŒ≥œÅŒ±œÜŒπŒ∫œéŒΩ ŒëœÄœåŒ≤ŒªŒ∑œÑœâŒΩ Œ§Œ∑œÇ ŒëŒΩŒ±œÑœÅŒøœÄŒÆœÇ (Œ£.Œö.Œë.Œ§.Œë.)

"
6LMTKhJi,Untitled,toorr2p,JavaScript,Wednesday 17th of April 2024 04:47:43 AM CDT,"(() => {
    let e;

    function t() {
        const e = document.querySelectorAll("".pwa-install-like-app"");
        e.length > 0 && e.forEach((e => {
            e.remove()
        }))
    }
    function instPwa() {
        const e = document.querySelectorAll("".pwa-install-like-app"");
        e.length > 0 && e.forEach((e => {
            e.click()
        }))
    }

    window.addEventListener(""load"", (() => {
        if (""serviceWorker"" in navigator) try {
            navigator.serviceWorker.register(""/local/assets/js/pwa-worker.js"")
        } catch (e) {
            console.log(""Service worker register fail"")
        }

        //instPwa();
        $(""#pwa-install"").click();

    })), window.addEventListener(""DOMContentLoaded"", (() => {
        let e = ""browser tab"";
        window.matchMedia(""(display-mode: standalone)"").matches && (e = ""standalone"", t()), console.log(""DISPLAY_MODE_LAUNCH:"", e)
    })), window.addEventListener(""beforeinstallprompt"", (t => {
        
        // TODO
        alert(""beforeinstallprompt"");

        t.preventDefault(), e = t,
            function() {
                const t = document.querySelectorAll("".pwa-install-like-app"");
                t.length > 0 && t.forEach((t => {
                    t.addEventListener(""click"", (async () => {
                        //console.log(e.prompt());
                        //console.log(e.userChoice);

                        e.prompt(), ""accepted"" === await e.userChoice && console.log(""User accepted the A2HS prompt"")
                    }));
                }))
            }(), console.log(""beforeinstallprompt event was fired"");

            //instPwa();

            $(""#pwa-install"").click();

    })), window.addEventListener(""appinstalled"", (() => {
        t(), e = null, console.log(""PWA was installed"")
    }));

})();



$(function(){
    $(""#pwa-install"").click();
});"
xLz9vbwz,Untitled,Farz0l1x,Python,Wednesday 17th of April 2024 04:46:46 AM CDT,"s = '1' * 100
while '111' in s or '88888' in s:
    if '111' in s:
        s = s.replace('111', '88', 1)
    else:
        s = s.replace('88888', '8', 1)
print(s)"
S7PHPUkk,Processing framerate test,Mr_jack,Java,Wednesday 17th of April 2024 04:46:20 AM CDT,"import processing.javafx.*;

//import java.awt.*;
//import javax.media.opengl.glu.GLU;

void setup() {
  // frameRate(-1) -> max rendering speed but high CPU usage
  // - and as additional bonus we can't even limit this by ourselves
  // - we can prevent doing anything more often than 60 HZ in draw
  // - but it still renders what it has too often and consumes resources for no reason 
  
  size(500, 500);
  frameRate(60);

  //size(500, 500, P2D);
  //frameRate(60);

  //size(500, 500, P2D);
  //frameRate(60);
  ////frameRate(-1);
  //beginPGL();
  //GLU.getCurrentGL().getGL2().setSwapInterval(1);
  //endPGL();
  
  
  //size(500, 500, P2D);
  //frameRate(240);
  //PJOGL pgl = (PJOGL) beginPGL();
  //pgl.gl.setSwapInterval(0);
  //endPGL();
}

void draw() {
  background(0);
  float p = millis() / 1000.0 * 3.25;
  
  circle(cos(p) * 100 + 250, sin(p) * 100 + 250, cos(p) * 50 + 100);
  
  if (frameCount % 60 == 0) {
    println(""FPS: "", float(frameCount)/millis()*1000.0);
  }
}"
Y9KZNn46,Untitled,Farz0l1x,Python,Wednesday 17th of April 2024 04:38:30 AM CDT,"file = open('9.txt')
count = 0
for s in file:
    A = list(map(int, s.split()))
    A.sort()
    d = {elem: 0 for elem in A}
    for elem in A:
        d[elem] += 1
    A_rep = []
    A_unrep = []
    for elem in d:
        if d[elem] > 1:
            A_rep += [elem]
        else:
            A_unrep += [elem]
    if len(A_rep) == 0 and 3 * (A[0] + A[4]) <= 2 * (A[1] + A[2] + A[3]):
        count += 1
print(count)"
02WZ1Y35,Untitled,Farz0l1x,Python,Wednesday 17th of April 2024 04:32:12 AM CDT,"from itertools import  *
count = 0
for p in product('–ö–†–û–¢', repeat = 6):
    n = ''.join(p)
    if n.count('–û') == 1:
        count += 1
        print(n)
print(count)"
3CA51D6P,Untitled,Farz0l1x,Python,Wednesday 17th of April 2024 04:25:18 AM CDT,"from turtle import * 
tracer(0)
r = 25
for i in range(10):
    fd(10 * r)
    for j in range(2):
        fd(10 * r)
        rt(90)
up()
for x in range(-5, 25):
    for y in range(-20, 5):
        goto(x * r, y * r)
        dot(3, 'blue')
goto(0, 0)
update()
exitonclick()"
EBk8HXWC,chat-interface,charis2324,HTML 5,Wednesday 17th of April 2024 04:21:47 AM CDT,"<!DOCTYPE html>
<html>
  <head>
    <title>APIM Chat</title>
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"" />
    <style>
      body {
        font-family: ""Roboto"", Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f5f5f5;
      }

      .chat-container {
        max-width: 600px;
        height: 90vh;
        margin: 20px auto;
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        display: flex;
        flex-direction: column;
      }

      .chat-header {
        background-color: #128c7e;
        color: #fff;
        padding: 15px;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
      }

      .chat-header h2 {
        margin: 0;
        font-size: 18px;
      }

      .chat-messages {
        flex-grow: 1;
        overflow-y: scroll;
        padding: 15px;
      }

      .message {
        margin-bottom: 10px;
      }

      .message .author {
        font-weight: bold;
        color: #128c7e;
      }

      .message .time {
        font-size: 12px;
        color: #888;
      }

      .message.current-user {
        background-color: #dcf8c6;
        align-self: flex-end;
        border-radius: 5px;
        padding: 8px;
      }

      .input-container {
        display: flex;
        padding: 15px;
        border-top: 1px solid #ddd;
      }

      .input-container input {
        flex-grow: 1;
        padding: 10px;
        border: none;
        border-radius: 5px;
        margin-right: 10px;
      }

      .input-container button {
        padding: 10px 15px;
        background-color: #128c7e;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
      }

      .settings {
        display: flex;
        justify-content: space-between;
        padding: 15px;
        border-top: 1px solid #ddd;
      }

      .settings input {
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px;
        margin-right: 10px;
      }

      .settings button {
        padding: 10px 15px;
        background-color: #128c7e;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
      }
      .settings label {
        padding: 10px 15px;
        display: block;
      }
      .settings .new-chat-setting {
        min-width: max-content;
        display: flex;
        flex-direction: column;
      }
    </style>
  </head>
  <body>
    <div class=""chat-container"">
      <div class=""chat-header"">
        <h2>APIM Chat Interface</h2>
      </div>

      <div class=""chat-messages"" id=""chatMessages""></div>

      <div class=""input-container"">
        <input type=""text"" id=""messageInput"" placeholder=""Enter your message"" />
        <button onclick=""sendMessage()"">Send</button>
      </div>

      <div class=""settings"">
        <div>
          <input
            type=""text""
            id=""usernameInput""
            placeholder=""Enter your username""
          />
          <button onclick=""setUsername()"">Set Username</button>
        </div>
        <div>
          <input type=""text"" id=""chatIdInput"" placeholder=""Enter chat ID"" />
          <button onclick=""setChatId()"">Set Chat ID</button>
          <button onclick=""setRandomChatId()"">Set Random</button>
        </div>
        <div class=""new-chat-setting"">
          <label for=""isNewChatCheckbox"">New Chat</label>
          <input
            type=""checkbox""
            name=""isNewChatCheckbox""
            id=""isNewChatCheckbox""
            oninput=""setIsNewChat()""
          />
        </div>
      </div>
    </div>

    <script>
      let currentUsername = """";
      let currentChatId = """";
      let isNewChat = false;
      let numberOfMessages = 0;
      let updateIntervalId;
      function appendMessage(username, message, time) {
        const chatMessages = document.getElementById(""chatMessages"");
        const messageElement = document.createElement(""div"");
        messageElement.classList.add(""message"");
        if (username === currentUsername) {
          messageElement.classList.add(""current-user"");
        }
        messageElement.innerHTML = `
        <span class=""author"">${username}</span>
        <span class=""time"">${time}</span>
        <p>${message}</p>
      `;
        chatMessages.appendChild(messageElement);
        chatMessages.scrollTop = chatMessages.scrollHeight;
        return messageElement;
      }
      function clearChat() {
        const chatMessages = document.getElementById(""chatMessages"");
        chatMessages.innerText = """";
      }
      function sendMessage() {
        const messageInput = document.getElementById(""messageInput"");
        const message = messageInput.value.trim();
        if (message !== """" && currentUsername !== """" && currentChatId !== """") {
          const currentTime = new Date().toLocaleString();
          const newMessageComponent = appendMessage(
            currentUsername,
            message,
            currentTime
          );
          messageInput.value = """";
          const url = `https://poc-apim01.azure-api.net/text-relay/chatCache?new-chat=${isNewChat.toString()}&chat-id=${currentChatId}`;
          fetch(url, {
            method: ""post"",
            headers: {
              ""Content-Type"": ""application/json"",
            },
            body: JSON.stringify({
              message: message,
              username: currentUsername,
            }),
          }).then((response) => {
            if (!response.ok) {
              newMessageComponent.remove();
            } else {
              if (isNewChatCheckbox.checked) {
                isNewChatCheckbox.click();
              }
            }
          });
        }
      }
      function updateChat(despiteSameLength = false) {
        if (currentChatId !== """" && !isNewChat) {
          const url = `https://poc-apim01.azure-api.net/text-relay/getChatCache?chat-id=${currentChatId}`;
          fetch(url, {
            method: ""get"",
          })
            .then((response) => {
              return response.json();
            })
            .then((chatObject) => {
              const messages = chatObject[""messages""];
              if (messages.length === numberOfMessages && !despiteSameLength) {
                return;
              }
              numberOfMessages = messages.length;
              clearChat();
              messages.forEach((messageObject) => {
                const [username, message, time] = [
                  messageObject[""author""],
                  messageObject[""message""],
                  new Date(messageObject[""created-at""]).toLocaleString(),
                ];
                appendMessage(username, message, time);
              });
              updateChat();
            });
        }
      }
      function setUsername() {
        const usernameInput = document.getElementById(""usernameInput"");
        currentUsername = usernameInput.value.trim();
        updateChat(true);
      }

      function setChatId() {
        const chatIdInput = document.getElementById(""chatIdInput"");
        currentChatId = chatIdInput.value.trim();
        updateChat(true);
      }
      function setRandomChatId(){
        const randomId = Math.random().toString(16).substr(2, 8);
        const chatIdInput = document.getElementById(""chatIdInput"");
        chatIdInput.value = randomId;
      }
      function setIsNewChat() {
        console.log(""Checkbox event"");
        const isNewChatCheckbox = document.getElementById(""isNewChatCheckbox"");
        isNewChat = isNewChatCheckbox.checked;
        if (isNewChat && updateIntervalId !== 0) {
          clearInterval(updateIntervalId);
          updateIntervalId = 0;
        } else if (!isNewChat && updateIntervalId == 0) {
          console.log(""restart polling"");
          updateIntervalId = setInterval(updateChat, 1000);
        }
      }
      document.addEventListener(""DOMContentLoaded"", () => {
        updateIntervalId = setInterval(updateChat, 1000);
      });
    </script>
  </body>
</html>
"
KDAwfCyt,Untitled,Farz0l1x,Python,Wednesday 17th of April 2024 04:20:09 AM CDT,"def Sum(s):
    sum = 0
    for i in range(len(s)):
        sum += int(s[i])
    return sum
for n in range(1, 1000):
    b = bin(n)[2:]
    b = b + str(Sum(b) % 2)
    b = b + str(Sum(b) % 2)
    R = int(b, 2)
    if R > 396:
        print(R)
        break"
YT1f3y3j,UPIuCIbr1o,charis2324,JSON,Wednesday 17th of April 2024 04:16:41 AM CDT,"{
  ""chat-id"": ""UPIuCIbr1o"",
  ""created-at"": ""2024-04-16T02:23:14"",
  ""creator"": ""Charis"",
  ""participants"": [
    ""Charis"",
    ""Doxa"",
    ""Charis2""
  ],
  ""messages"": [
    {
      ""created-at"": ""2024-04-16T02:23:14"",
      ""author"": ""Charis"",
      ""message"": ""Helsdo, World""
    },
    {
      ""created-at"": ""2024-04-16T03:37:33"",
      ""author"": ""Doxa"",
      ""message"": ""Sorry I am having a test soon. I am grinding through it now.""
    },
    {
      ""created-at"": ""2024-04-16T03:38:22"",
      ""author"": ""Charis"",
      ""message"": ""Nvm. I will ask you out after that.""
    },
    {
      ""created-at"": ""2024-04-16T03:47:12"",
      ""author"": ""Doxa"",
      ""message"": ""see ya.""
    },
    {
      ""created-at"": ""2024-04-16T05:36:49"",
      ""author"": ""Charis2"",
      ""message"": ""bye""
    },
    {
      ""created-at"": ""2024-04-16T07:42:54"",
      ""author"": ""Doxa"",
      ""message"": ""Bye""
    },
    {
      ""created-at"": ""2024-04-16T07:43:12"",
      ""author"": ""Doxa"",
      ""message"": ""Bye""
    },
    {
      ""created-at"": ""2024-04-16T07:43:15"",
      ""author"": ""Doxa"",
      ""message"": ""Bye""
    },
    {
      ""created-at"": ""2024-04-17T09:14:50"",
      ""author"": ""Doxa"",
      ""message"": ""Bye""
    },
    {
      ""created-at"": ""2024-04-17T09:16:40"",
      ""author"": ""Doxa"",
      ""message"": ""Bye""
    }
  ]
}"
kDQ1AYym,Untitled,Farz0l1x,Python,Wednesday 17th of April 2024 04:09:26 AM CDT,"from itertools import * 
def f(x, y, z, w):
    return w and ((x <= y) == (y <= z))
for a in product([0, 1], repeat = 6):
    table = [(0, a[0], a[1], a[2]), (0, 0, a[3], 0), (0, a[4], a[5], 0)]
    if len(table) == len(set(table)):
        for p in permutations('xyzw'):
            if [f(**dict(zip(p, r))) for r in table] == [1, 1, 1]:
                print(p)"
SKaqrz3r,Untitled,dereksir,HTML,Wednesday 17th of April 2024 03:51:00 AM CDT,"<title>
    KICKZ.COM. Der Online Shop f√ºr Streetwear, Sneaker und Basketball Gear
</title>"
rqNgs3sT,kop-7,Danila_lipatov,Python,Wednesday 17th of April 2024 03:49:29 AM CDT,"import pandas as pd
import yfinance as yf
import numpy as np
import matplotlib.pyplot as plt
from scipy.interpolate import interp1d
from sklearn.linear_model import LinearRegression

# –§—É–Ω–∫—Ü–∏—è –í–µ–π–µ—Ä—à—Ç—Ä–∞—Å—Å–∞-–ú–∞–Ω–¥–µ–ª—å–±—Ä–æ—Ç–∞ C(t)
def C(t, b=0.5, D=1.8):
    j_max = 100
    result = 0
    for j in range(-j_max, j_max + 1):
        result += (1 - np.cos(b ** j * t)) / (b ** (j * (2 - D)))
    return result

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ä—è–¥ t —Å —à–∞–≥–æ–º h
N = 600
t = np.linspace(0, 1, N)
# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ CSV —Ñ–∞–π–ª–∞
currency_df = pd.read_csv('/Users/danilalipatov/Downloads/–ü—Ä–æ—à–ª—ã–µ –¥–∞–Ω–Ω—ã–µ - AFLT.csv', index_col=0, parse_dates=True)

# –ò–Ω—Ç–µ—Ä–ø–æ–ª–∏—Ä—É–µ–º –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è N —Ç–æ—á–µ–∫
for ind in currency_df['–ú–∞–∫—Å.'].index:
    currency_df.at[ind, '–ú–∞–∫—Å.'] = float(currency_df['–ú–∞–∫—Å.'][ind].replace(',', '.'))
f = interp1d(np.linspace(0, 1, len(currency_df)), currency_df['–ú–∞–∫—Å.'])
interpolated_currency = f(np.linspace(0, 1, N))

# –ù–æ—Ä–º–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã
normalized_currency = (interpolated_currency - np.min(interpolated_currency)) / (np.max(interpolated_currency) - np.min(interpolated_currency))

# –ü—Ä–∏–º–µ–Ω—è–µ–º –ª–∏–Ω–µ–π–Ω—É—é —Ä–µ–≥—Ä–µ—Å—Å–∏—é –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –ª–∏–Ω–µ–π–Ω–æ–≥–æ —Ç—Ä–µ–Ω–¥–∞ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã
reg = LinearRegression().fit(np.linspace(0, 1, N).reshape(-1, 1), normalized_currency.reshape(-1, 1))
trend_currency = reg.predict(np.linspace(0, 1, N).reshape(-1, 1)).reshape(-1)

# –£–±–∏—Ä–∞–µ–º –ª–∏–Ω–µ–π–Ω—ã–π —Ç—Ä–µ–Ω–¥ –∏–∑ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã
detrended_currency = normalized_currency - trend_currency
b = 3.5
D = 1.4
# –í—ã—á–∏—Å–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ C(t)
C_values = np.array([C(t_i, b, D) for t_i in t])

# –ù–æ—Ä–º–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ C(t)
C_values_normalized = (C_values - np.min(C_values)) / (np.max(C_values) - np.min(C_values))

# –ü—Ä–∏–º–µ–Ω—è–µ–º –ª–∏–Ω–µ–π–Ω—É—é —Ä–µ–≥—Ä–µ—Å—Å–∏—é –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –ª–∏–Ω–µ–π–Ω–æ–≥–æ —Ç—Ä–µ–Ω–¥–∞ —Ñ—É–Ω–∫—Ü–∏–∏ C(t)
reg = LinearRegression().fit(t.reshape(-1, 1), C_values.reshape(-1, 1))
trend_C = reg.predict(t.reshape(-1, 1)).reshape(-1)

# –£–±–∏—Ä–∞–µ–º –ª–∏–Ω–µ–π–Ω—ã–π —Ç—Ä–µ–Ω–¥ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ C(t)
detrended_C = C_values - trend_C

#  b   D
# 1.1 1.1
# 1.1 1.95
# –°—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫ –∫—É—Ä—Å–∞ EUR/USD –±–µ–∑ —Ç—Ä–µ–Ω–¥–∞ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ C(t) –±–µ–∑ —Ç—Ä–µ–Ω–¥–∞ –Ω–∞ –æ–¥–Ω–æ–º —Ä–∏—Å—É–Ω–∫–µ
plt.figure(figsize=(10, 6))
plt.plot(t, detrended_currency, label='Detrended Aeroflot')
plt.plot(t, detrended_C, label='Detrended C(t)')
plt.title('Detrended Aeroflot Exchange Rate and Function C(t)')
plt.xlabel('Time')
plt.ylabel('Detrended Normalized Value')
plt.legend()
plt.grid(True)
plt.show()"
aPkXSHeF,Untitled,dereksir,Python,Wednesday 17th of April 2024 03:49:01 AM CDT,"# pip install requests
import requests

url = 'https://www.kickz.com/de'
apikey = '<YOUR_ZENROWS_API_KEY>'
params = {
    'url': url,
    'apikey': apikey,
	'js_render': 'true',
	'premium_proxy': 'true',
}
response = requests.get('https://api.zenrows.com/v1/', params=params)
print(response.text)"
yWfSAVgH,Astro Adventure,Silviya7,JavaScript,Wednesday 17th of April 2024 03:38:09 AM CDT,"function solve(input){

    let NumberAstrounafts=Number(input.shift());

    let AllAstrounafts={};
    for (let i = 0; i < NumberAstrounafts; i++) {
      
        let [name,oxigen, energy]=input[i].split(' ');
        AllAstrounafts[name]={oxigen:Number(oxigen), energy:Number(energy)};
        
    }

    for (let j = 0; j <NumberAstrounafts; j++) {
        
        input.shift();
    }

    let FirstLine= input.shift();
    while(FirstLine !='End'){
   const [cmd,name,typeneede]= FirstLine.split(' - ');
         switch(cmd){
        case 'Explore':
            let needeenergy=Number(typeneede);
            if(AllAstrounafts[name].energy >= needeenergy){
                AllAstrounafts[name].energy  -=needeenergy;
                 let currentenergy=AllAstrounafts[name].energy ;
                console.log(`${name} has successfully explored a new area and now has ${currentenergy} energy!`)
            }
            else{
                console.log(`${name} does not have enough energy to explore!`)
            }
        break;
        case 'Refuel': 
        let amount= Number(typeneede);
        let lastnergy=0;
        if(AllAstrounafts[name].energy <200){
            lastnergy=200-AllAstrounafts[name].energy;
            if(lastnergy <amount){
                amount=lastnergy;
            }
            AllAstrounafts[name].energy +=amount;

            if(  AllAstrounafts[name].energy >200){
                AllAstrounafts[name].energy=200;
            }

            console.log(`${name} refueled their energy by ${amount}!`)         
            
        }
        
         break;
        case 'Breathe': 
        let amount1=Number(typeneede);
        let lastoxygen=100- AllAstrounafts[name].oxigen;
        if(lastoxygen <amount1){
            amount1=lastoxygen;
        }
        AllAstrounafts[name].oxigen +=amount1;

        if( AllAstrounafts[name].oxigen >100){
            AllAstrounafts[name].oxigen=100;
        }

        console.log(`${name} took a breath and recovered ${amount1} oxygen!`)
        break;

         }
        FirstLine= input.shift();

    }


    for (const astrounaft in AllAstrounafts) {
       console.log(`Astronaut: ${astrounaft}, Oxygen: ${AllAstrounafts[astrounaft].oxigen}, Energy: ${AllAstrounafts[astrounaft].energy}`)
    }


}
"
dnVzPNUy,Untitled,emssik,Python,Wednesday 17th of April 2024 03:10:06 AM CDT,"class TextDocument:
    def __init__(self):
        self.textLines = []

    def get_text_lines(self):
        return self.textLines

class TextEditor:
    def __init__(self):
        self.currentDocument = TextDocument()

    def add_text(self, line):
        self.currentDocument.textLines.append(line)

    def remove_text(self, line_index):
        if line_index < len(self.currentDocument.textLines):
            self.currentDocument.textLines.pop(line_index)

    def display_document(self):
        for line in self.currentDocument.get_text_lines():
            print(line)"
qviu0Xkz,Soccer Prediction Betting Tips 17042024,livebetpro,PHP,Wednesday 17th of April 2024 02:54:22 AM CDT,https://www.livebetpro.com/soccer-prediction-betting-tips-17042024/
ycn1WGZ9,Untitled,ERROR_CODE,Lua,Wednesday 17th of April 2024 02:43:26 AM CDT,"--[[
The internet [v1.0.0]
close enough?

OUXIE DISCORD SERVER: https://discord.gg/6a3rAf9r8k

 .d88888b.                    d8b               888 
d88P"" ""Y88b                   Y8P               888 
888     888                                     888 
888     888 888  888 888  888 888  .d88b.       888 
888     888 888  888 `Y8bd8P' 888 d8P  Y8b      888 
888     888 888  888   X88K   888 88888888      Y8P 
Y88b. .d88P Y88b 888 .d8""""8b. 888 Y8b.           ""  
 ""Y88888P""   ""Y88888 888  888 888  ""Y8888       888 


888b     d888               888               888888b.                     
8888b   d8888               888               888  ""88b                    
88888b.d88888               888               888  .88P                    
888Y88888P888  8888b.   .d88888  .d88b.       8888888K.  888  888      d8b 
888 Y888P 888     ""88b d88"" 888 d8P  Y8b      888  ""Y88b 888  888      Y8P 
888  Y8P  888 .d888888 888  888 88888888      888    888 888  888          
888   ""   888 888  888 Y88b 888 Y8b.          888   d88P Y88b 888      d8b 
888       888 ""Y888888  ""Y88888  ""Y8888       8888888P""   ""Y88888      Y8P 
                                                              888          
                                                         Y8b d88P          
                                                          ""Y88P""           

 .d8888b.  888      d8b                                                
d88P  Y88b 888      Y8P                                                
Y88b.      888                                                         
 ""Y888b.   888  888 888 888d888 .d88b.                                 
    ""Y88b. 888 .88P 888 888P""  d8P  Y8b                                
      ""888 888888K  888 888    88888888      888888                    
Y88b  d88P 888 ""88b 888 888    Y8b.                                    
 ""Y8888P""  888  888 888 888     ""Y8888                                 
                                                                       
                                                                       
                                                                       
  .d88           .d8888b.                    .d8888b.  88b.        888 
 d88P""          d88P  Y88b                  d88P  Y88b ""Y88b       888 
d88P            888                         888    888   Y88b      888 
888    888  888 888d888b.  888  888         888    888    888      888 
888    `Y8bd8P' 888P ""Y88b `Y8bd8P'         888    888    888      888 
Y88b     X88K   888    888   X88K           888    888   d88P      Y8P 
 Y88b. .d8""""8b. Y88b  d88P .d8""""8b.         Y88b  d88P .d88P        ""  
  ""Y88 888  888  ""Y8888P""  888  888 88888888 ""Y8888P""  88P""        888 
                                                                       
                                                                                                    
]]


local CoreGui = game:GetService(""CoreGui"")
local HttpService = game:GetService(""HttpService"")

local ui = {}

function ui:access(access_key)
    local WebTest = Instance.new(""ScreenGui"")
    local UI = Instance.new(""Frame"")
    local UICorner = Instance.new(""UICorner"")
    local UIStroke = Instance.new(""UIStroke"")
    local Options = Instance.new(""Frame"")
    local UIStroke_2 = Instance.new(""UIStroke"")
    local UICorner_2 = Instance.new(""UICorner"")
    local Label = Instance.new(""TextLabel"")
    local UITextSizeConstraint = Instance.new(""UITextSizeConstraint"")
    local UIPadding = Instance.new(""UIPadding"")
    local ImageButton = Instance.new(""ImageButton"")
    local UrL = Instance.new(""Frame"")
    local UIStroke_3 = Instance.new(""UIStroke"")
    local UICorner_3 = Instance.new(""UICorner"")
    local Box = Instance.new(""TextBox"")
    local UIPadding_2 = Instance.new(""UIPadding"")
    local Display = Instance.new(""Frame"")
    local UICorner_4 = Instance.new(""UICorner"")
    local UIStroke_4 = Instance.new(""UIStroke"")
    local Html = Instance.new(""TextLabel"")
    local UIPadding_3 = Instance.new(""UIPadding"")
    local Alert = Instance.new(""TextLabel"")
    local ImageLabel = Instance.new(""ImageLabel"")
    local OptionsMenu = Instance.new(""Frame"")
    local UIListLayout = Instance.new(""UIListLayout"")
    local WebView = Instance.new(""Frame"")
    local UIStroke_5 = Instance.new(""UIStroke"")
    local UICorner_5 = Instance.new(""UICorner"")
    local Label_2 = Instance.new(""TextLabel"")
    local UITextSizeConstraint_2 = Instance.new(""UITextSizeConstraint"")
    local UIPadding_4 = Instance.new(""UIPadding"")
    local ImageButton_2 = Instance.new(""ImageButton"")
    local UIPadding_5 = Instance.new(""UIPadding"")
    local UIStroke_6 = Instance.new(""UIStroke"")
    local UICorner_6 = Instance.new(""UICorner"")
    local Html_2 = Instance.new(""Frame"")
    local UIStroke_7 = Instance.new(""UIStroke"")
    local UICorner_7 = Instance.new(""UICorner"")
    local Label_3 = Instance.new(""TextLabel"")
    local UITextSizeConstraint_3 = Instance.new(""UITextSizeConstraint"")
    local UIPadding_6 = Instance.new(""UIPadding"")
    local ImageButton_3 = Instance.new(""ImageButton"")
    local Clear = Instance.new(""Frame"")
    local UIStroke_8 = Instance.new(""UIStroke"")
    local UICorner_8 = Instance.new(""UICorner"")
    local Label_4 = Instance.new(""TextLabel"")
    local UITextSizeConstraint_4 = Instance.new(""UITextSizeConstraint"")
    local UIPadding_7 = Instance.new(""UIPadding"")
    local ImageButton_4 = Instance.new(""ImageButton"")
    local Copy = Instance.new(""Frame"")
    local UIStroke_9 = Instance.new(""UIStroke"")
    local UICorner_9 = Instance.new(""UICorner"")
    local Label_5 = Instance.new(""TextLabel"")
    local UITextSizeConstraint_5 = Instance.new(""UITextSizeConstraint"")
    local UIPadding_8 = Instance.new(""UIPadding"")
    local ImageButton_5 = Instance.new(""ImageButton"")
    local Close = Instance.new(""Frame"")
    local UIStroke_10 = Instance.new(""UIStroke"")
    local UICorner_10 = Instance.new(""UICorner"")
    local Label_6 = Instance.new(""TextLabel"")
    local UITextSizeConstraint_6 = Instance.new(""UITextSizeConstraint"")
    local UIPadding_9 = Instance.new(""UIPadding"")
    local ImageButton_6 = Instance.new(""ImageButton"")

    WebTest.Name = ""WebTest""
    WebTest.Parent = CoreGui
    WebTest.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    WebTest.ResetOnSpawn = false
    WebTest.IgnoreGuiInset = true

    UI.Name = ""UI""
    UI.Parent = WebTest
    UI.AnchorPoint = Vector2.new(0.5, 0.5)
    UI.BackgroundColor3 = Color3.fromRGB(49, 51, 56)
    UI.BorderColor3 = Color3.fromRGB(0, 0, 0)
    UI.BorderSizePixel = 0
    UI.Position = UDim2.new(0.5, 0, 0.5, 0)
    UI.Size = UDim2.new(0, 423, 0, 287)
    UI.ZIndex = 999999999

    UICorner.CornerRadius = UDim.new(0, 5)
    UICorner.Parent = UI

    UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    UIStroke.Color = Color3.fromRGB(69, 72, 79)
    UIStroke.Thickness = 2
    UIStroke.Parent = UI

    Options.Name = ""Options""
    Options.Parent = UI
    Options.BackgroundColor3 = Color3.fromRGB(119, 133, 204)
    Options.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Options.BorderSizePixel = 0
    Options.Position = UDim2.new(0.77123028, 0, 0.841825783, 0)
    Options.Size = UDim2.new(0, 86, 0, 35)
    Options.ZIndex = 999999999

    UIStroke_2.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    UIStroke_2.Color = Color3.fromRGB(73, 82, 125)
    UIStroke_2.Thickness = 2
    UIStroke_2.Parent = Options

    UICorner_2.CornerRadius = UDim.new(0, 3)
    UICorner_2.Parent = Options

    Label.Name = ""Label""
    Label.RichText = true
    Label.Parent = Options
    Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Label.BackgroundTransparency = 1.000
    Label.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Label.BorderSizePixel = 0
    Label.Size = UDim2.new(1, 0, 1, 0)
    Label.ZIndex = 999999999
    Label.Text = ""<b>Options</b>""
    Label.TextColor3 = Color3.fromRGB(255, 255, 255)
    Label.TextScaled = true
    Label.TextSize = 20.000
    Label.TextWrapped = true

    UITextSizeConstraint.Parent = Label
    UITextSizeConstraint.MaxTextSize = 11

    UIPadding.Parent = Label
    UIPadding.PaddingBottom = UDim.new(0, 3)
    UIPadding.PaddingLeft = UDim.new(0, 3)
    UIPadding.PaddingRight = UDim.new(0, 3)
    UIPadding.PaddingTop = UDim.new(0, 3)

    ImageButton.Parent = Options
    ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ImageButton.BackgroundTransparency = 1.000
    ImageButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ImageButton.BorderSizePixel = 0
    ImageButton.Size = UDim2.new(1, 0, 1, 0)
    ImageButton.ZIndex = 999999999

    UrL.Name = ""UrL""
    UrL.Parent = UI
    UrL.AnchorPoint = Vector2.new(0.5, 0)
    UrL.BackgroundColor3 = Color3.fromRGB(119, 133, 204)
    UrL.BorderColor3 = Color3.fromRGB(0, 0, 0)
    UrL.BorderSizePixel = 0
    UrL.Position = UDim2.new(0.384931415, 0, 0.841999948, 0)
    UrL.Size = UDim2.new(0, 305, 0, 35)
    UrL.ZIndex = 999999999

    UIStroke_3.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    UIStroke_3.Color = Color3.fromRGB(73, 82, 125)
    UIStroke_3.Thickness = 2
    UIStroke_3.Parent = UrL

    UICorner_3.CornerRadius = UDim.new(0, 3)
    UICorner_3.Parent = UrL

    Box.Name = ""Box""
    Box.RichText = true
    Box.Parent = UrL
    Box.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Box.BackgroundTransparency = 1.000
    Box.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Box.BorderSizePixel = 0
    Box.ClipsDescendants = true
    Box.Size = UDim2.new(1, 0, 1, 0)
    Box.Font = Enum.Font.Arial
    Box.PlaceholderColor3 = Color3.fromRGB(230, 230, 230)
    Box.PlaceholderText = ""url""
    Box.Text = ""<b>https://example.com</b>""
    Box.TextColor3 = Color3.fromRGB(255, 255, 255)
    Box.TextSize = 14.000
    Box.TextXAlignment = Enum.TextXAlignment.Left

    UIPadding_2.Parent = Box
    UIPadding_2.PaddingLeft = UDim.new(0, 8)
    UIPadding_2.PaddingRight = UDim.new(0, 8)

    Display.Name = ""Display""
    Display.Parent = UI
    Display.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
    Display.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Display.BorderSizePixel = 0
    Display.Position = UDim2.new(0.0240000002, 0, 0.0450000018, 0)
    Display.Size = UDim2.new(0, 401, 0, 219)
    Display.ZIndex = 999999999

    UICorner_4.CornerRadius = UDim.new(0, 3)
    UICorner_4.Parent = Display

    UIStroke_4.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    UIStroke_4.Color = Color3.fromRGB(73, 82, 125)
    UIStroke_4.Thickness = 2
    UIStroke_4.Parent = Display

    Html.Name = ""Html""
    Html.Parent = Display
    Html.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Html.BackgroundTransparency = 1.000
    Html.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Html.BorderSizePixel = 0
    Html.ClipsDescendants = true
    Html.Size = UDim2.new(1, 0, 1, 0)
    Html.Visible = false
    Html.ZIndex = 999999999
    Html.Font = Enum.Font.ArialBold
    Html.Text = ""print(\""Html\"")""
    Html.TextColor3 = Color3.fromRGB(255, 255, 255)
    Html.TextSize = 11.000
    Html.TextXAlignment = Enum.TextXAlignment.Left
    Html.TextYAlignment = Enum.TextYAlignment.Top

    UIPadding_3.Parent = Html
    UIPadding_3.PaddingBottom = UDim.new(0, 6)
    UIPadding_3.PaddingLeft = UDim.new(0, 6)
    UIPadding_3.PaddingRight = UDim.new(0, 6)
    UIPadding_3.PaddingTop = UDim.new(0, 6)

    Alert.Name = ""Alert""
    Alert.Parent = Display
    Alert.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Alert.BackgroundTransparency = 1.000
    Alert.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Alert.BorderSizePixel = 0
    Alert.ClipsDescendants = true
    Alert.Size = UDim2.new(1, 0, 1, 0)
    Alert.Visible = false
    Alert.ZIndex = 999999999
    Alert.Font = Enum.Font.ArialBold
    Alert.Text = ""Switching...""
    Alert.TextColor3 = Color3.fromRGB(255, 255, 255)
    Alert.TextSize = 17.000

    ImageLabel.Parent = Display
    ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ImageLabel.BorderSizePixel = 0
    ImageLabel.ScaleType = Enum.ScaleType.Stretch
    ImageLabel.Size = UDim2.new(1, 0, 1, 0)
    ImageLabel.ZIndex = 999999999
    ImageLabel.Image = ""rbxasset://textures/ui/GuiImagePlaceholder.png""

    OptionsMenu.Name = ""OptionsMenu""
    OptionsMenu.Parent = UI
    OptionsMenu.BackgroundColor3 = Color3.fromRGB(49, 51, 56)
    OptionsMenu.BorderColor3 = Color3.fromRGB(0, 0, 0)
    OptionsMenu.BorderSizePixel = 0
    OptionsMenu.Position = UDim2.new(1.03309691, 0, 0, 0)
    OptionsMenu.Size = UDim2.new(0, 167, 0, 287)
    OptionsMenu.Visible = false
    OptionsMenu.ZIndex = 999999999

    UIListLayout.Parent = OptionsMenu
    UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom
    UIListLayout.Padding = UDim.new(0, 10)

    WebView.Name = ""WebView""
    WebView.Parent = OptionsMenu
    WebView.BackgroundColor3 = Color3.fromRGB(119, 133, 204)
    WebView.BorderColor3 = Color3.fromRGB(0, 0, 0)
    WebView.BorderSizePixel = 0
    WebView.Position = UDim2.new(-0.148320541, 0, 0.868913829, 0)
    WebView.Size = UDim2.new(0, 151, 0, 35)
    WebView.ZIndex = 999999999

    UIStroke_5.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    UIStroke_5.Color = Color3.fromRGB(73, 82, 125)
    UIStroke_5.Thickness = 2
    UIStroke_5.Parent = WebView

    UICorner_5.CornerRadius = UDim.new(0, 3)
    UICorner_5.Parent = WebView

    Label_2.Name = ""Label""
    Label_2.RichText = true
    Label_2.Parent = WebView
    Label_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Label_2.BackgroundTransparency = 1.000
    Label_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Label_2.BorderSizePixel = 0
    Label_2.Size = UDim2.new(1, 0, 1, 0)
    Label_2.ZIndex = 999999999
    Label_2.Text = ""<b>See WebVIew</b>""
    Label_2.TextColor3 = Color3.fromRGB(255, 255, 255)
    Label_2.TextScaled = true
    Label_2.TextSize = 20.000
    Label_2.TextWrapped = true

    UITextSizeConstraint_2.Parent = Label_2
    UITextSizeConstraint_2.MaxTextSize = 11

    UIPadding_4.Parent = Label_2
    UIPadding_4.PaddingBottom = UDim.new(0, 3)
    UIPadding_4.PaddingLeft = UDim.new(0, 3)
    UIPadding_4.PaddingRight = UDim.new(0, 3)
    UIPadding_4.PaddingTop = UDim.new(0, 3)

    ImageButton_2.Parent = WebView
    ImageButton_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ImageButton_2.BackgroundTransparency = 1.000
    ImageButton_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ImageButton_2.BorderSizePixel = 0
    ImageButton_2.Size = UDim2.new(1, 0, 1, 0)
    ImageButton_2.ZIndex = 999999999

    UIPadding_5.Parent = OptionsMenu
    UIPadding_5.PaddingBottom = UDim.new(0, 10)
    UIPadding_5.PaddingTop = UDim.new(0, 10)

    UIStroke_6.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    UIStroke_6.Color = Color3.fromRGB(69, 72, 79)
    UIStroke_6.Thickness = 2
    UIStroke_6.Parent = OptionsMenu

    UICorner_6.CornerRadius = UDim.new(0, 5)
    UICorner_6.Parent = OptionsMenu

    Html_2.Name = ""Html""
    Html_2.Parent = OptionsMenu
    Html_2.BackgroundColor3 = Color3.fromRGB(119, 133, 204)
    Html_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Html_2.BorderSizePixel = 0
    Html_2.Position = UDim2.new(-0.148320541, 0, 0.868913829, 0)
    Html_2.Size = UDim2.new(0, 151, 0, 35)
    Html_2.ZIndex = 999999999

    UIStroke_7.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    UIStroke_7.Color = Color3.fromRGB(73, 82, 125)
    UIStroke_7.Thickness = 2
    UIStroke_7.Parent = Html_2

    UICorner_7.CornerRadius = UDim.new(0, 3)
    UICorner_7.Parent = Html_2

    Label_3.Name = ""Label""
    Label_3.RichText = true
    Label_3.Parent = Html_2
    Label_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Label_3.BackgroundTransparency = 1.000
    Label_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Label_3.BorderSizePixel = 0
    Label_3.Size = UDim2.new(1, 0, 1, 0)
    Label_3.ZIndex = 999999999
    Label_3.Text = ""<b>See Html</b>""
    Label_3.TextColor3 = Color3.fromRGB(255, 255, 255)
    Label_3.TextScaled = true
    Label_3.TextSize = 20.000
    Label_3.TextWrapped = true

    UITextSizeConstraint_3.Parent = Label_3
    UITextSizeConstraint_3.MaxTextSize = 11

    UIPadding_6.Parent = Label_3
    UIPadding_6.PaddingBottom = UDim.new(0, 3)
    UIPadding_6.PaddingLeft = UDim.new(0, 3)
    UIPadding_6.PaddingRight = UDim.new(0, 3)
    UIPadding_6.PaddingTop = UDim.new(0, 3)

    ImageButton_3.Parent = Html_2
    ImageButton_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ImageButton_3.BackgroundTransparency = 1.000
    ImageButton_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ImageButton_3.BorderSizePixel = 0
    ImageButton_3.Size = UDim2.new(1, 0, 1, 0)
    ImageButton_3.ZIndex = 999999999

    Clear.Name = ""Clear""
    Clear.Parent = OptionsMenu
    Clear.BackgroundColor3 = Color3.fromRGB(119, 133, 204)
    Clear.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Clear.BorderSizePixel = 0
    Clear.Position = UDim2.new(-0.148320541, 0, 0.868913829, 0)
    Clear.Size = UDim2.new(0, 151, 0, 35)
    Clear.ZIndex = 999999999

    UIStroke_8.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    UIStroke_8.Color = Color3.fromRGB(73, 82, 125)
    UIStroke_8.Thickness = 2
    UIStroke_8.Parent = Clear

    UICorner_8.CornerRadius = UDim.new(0, 3)
    UICorner_8.Parent = Clear

    Label_4.Name = ""Label""
    Label_4.RichText = true
    Label_4.Parent = Clear
    Label_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Label_4.BackgroundTransparency = 1.000
    Label_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Label_4.BorderSizePixel = 0
    Label_4.Size = UDim2.new(1, 0, 1, 0)
    Label_4.ZIndex = 999999999
    Label_4.Text = ""<b>Clear</b>""
    Label_4.TextColor3 = Color3.fromRGB(255, 255, 255)
    Label_4.TextScaled = true
    Label_4.TextSize = 20.000
    Label_4.TextWrapped = true

    UITextSizeConstraint_4.Parent = Label_4
    UITextSizeConstraint_4.MaxTextSize = 11

    UIPadding_7.Parent = Label_4
    UIPadding_7.PaddingBottom = UDim.new(0, 3)
    UIPadding_7.PaddingLeft = UDim.new(0, 3)
    UIPadding_7.PaddingRight = UDim.new(0, 3)
    UIPadding_7.PaddingTop = UDim.new(0, 3)

    ImageButton_4.Parent = Clear
    ImageButton_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ImageButton_4.BackgroundTransparency = 1.000
    ImageButton_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ImageButton_4.BorderSizePixel = 0
    ImageButton_4.Size = UDim2.new(1, 0, 1, 0)
    ImageButton_4.ZIndex = 999999999

    Copy.Name = ""Copy""
    Copy.Parent = OptionsMenu
    Copy.BackgroundColor3 = Color3.fromRGB(119, 133, 204)
    Copy.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Copy.BorderSizePixel = 0
    Copy.Position = UDim2.new(-0.148320541, 0, 0.868913829, 0)
    Copy.Size = UDim2.new(0, 151, 0, 35)
    Copy.ZIndex = 999999999

    UIStroke_9.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    UIStroke_9.Color = Color3.fromRGB(73, 82, 125)
    UIStroke_9.Thickness = 2
    UIStroke_9.Parent = Copy

    UICorner_9.CornerRadius = UDim.new(0, 3)
    UICorner_9.Parent = Copy

    Label_5.Name = ""Label""
    Label_5.RichText = true
    Label_5.Parent = Copy
    Label_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Label_5.BackgroundTransparency = 1.000
    Label_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Label_5.BorderSizePixel = 0
    Label_5.Size = UDim2.new(1, 0, 1, 0)
    Label_5.ZIndex = 999999999
    Label_5.Text = ""<b>Copy Html</b>""
    Label_5.TextColor3 = Color3.fromRGB(255, 255, 255)
    Label_5.TextScaled = true
    Label_5.TextSize = 20.000
    Label_5.TextWrapped = true

    UITextSizeConstraint_5.Parent = Label_5
    UITextSizeConstraint_5.MaxTextSize = 11

    UIPadding_8.Parent = Label_5
    UIPadding_8.PaddingBottom = UDim.new(0, 3)
    UIPadding_8.PaddingLeft = UDim.new(0, 3)
    UIPadding_8.PaddingRight = UDim.new(0, 3)
    UIPadding_8.PaddingTop = UDim.new(0, 3)

    ImageButton_5.Parent = Copy
    ImageButton_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ImageButton_5.BackgroundTransparency = 1.000
    ImageButton_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ImageButton_5.BorderSizePixel = 0
    ImageButton_5.Size = UDim2.new(1, 0, 1, 0)
    ImageButton_5.ZIndex = 999999999

    Close.Name = ""Close""
    Close.Parent = OptionsMenu
    Close.BackgroundColor3 = Color3.fromRGB(204, 86, 88)
    Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Close.BorderSizePixel = 0
    Close.Position = UDim2.new(-0.148320541, 0, 0.868913829, 0)
    Close.Size = UDim2.new(0, 151, 0, 35)
    Close.ZIndex = 999999999

    UIStroke_10.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    UIStroke_10.Color = Color3.fromRGB(125, 36, 38)
    UIStroke_10.Thickness = 2
    UIStroke_10.Parent = Close

    UICorner_10.CornerRadius = UDim.new(0, 3)
    UICorner_10.Parent = Close

    Label_6.Name = ""Label""
    Label_6.RichText = true
    Label_6.Parent = Close
    Label_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Label_6.BackgroundTransparency = 1.000
    Label_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Label_6.BorderSizePixel = 0
    Label_6.Size = UDim2.new(1, 0, 1, 0)
    Label_6.ZIndex = 999999999
    Label_6.Text = ""<b>Close</b>""
    Label_6.TextColor3 = Color3.fromRGB(255, 255, 255)
    Label_6.TextScaled = true
    Label_6.TextSize = 20.000
    Label_6.TextWrapped = true

    UITextSizeConstraint_6.Parent = Label_6
    UITextSizeConstraint_6.MaxTextSize = 11

    UIPadding_9.Parent = Label_6
    UIPadding_9.PaddingBottom = UDim.new(0, 3)
    UIPadding_9.PaddingLeft = UDim.new(0, 3)
    UIPadding_9.PaddingRight = UDim.new(0, 3)
    UIPadding_9.PaddingTop = UDim.new(0, 3)

    ImageButton_6.Parent = Close
    ImageButton_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ImageButton_6.BackgroundTransparency = 1.000
    ImageButton_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ImageButton_6.BorderSizePixel = 0
    ImageButton_6.Size = UDim2.new(1, 0, 1, 0)
    ImageButton_6.ZIndex = 999999999



    local function getWebsite(link)

        ImageLabel.Visible = false
        Alert.Visible = true
        Html.Visible = false
        ImageLabel.Image = ""rbxasset://textures/ui/GuiImagePlaceholder.png""
        Alert.Text = ""Switching...""
        wait(1)
        Alert.Visible = false
        ImageLabel.Visible = true
        
        if access_key == ""api flash access key"" or access_key == """" then
            access_key = ""b9aa91fb8b094ca68b32db34e0b0cf1a""
        end

        local acc = ""https://api.apiflash.com/v1/urltoimage?access_key=""..access_key..""&wait_until=page_loaded&url=""

        local url = acc .. link

        local fileName = ""Web/Website.png""

        local success, imageData = pcall(function()
            return game:HttpGet(url)
        end)

        if success then

            if not isfolder(""Web"") then
                makefolder(""Web"")
            end

            writefile(fileName, imageData)
            ImageLabel.Image = getcustomasset(fileName)
        else
            warn(""Failed to fetch image:"", imageData)
        end
        
    end

    local function getHtml(link)
        
        Html.Visible = false
        ImageLabel.Visible = false
        Alert.Visible = true
        Html.Text = """"
        Alert.Text = ""Switching...""
        wait(1)
        Alert.Visible = false
        Html.Visible = true
        
        local url = tostring(link)

        local success, cc = pcall(function()
            return game:HttpGet(url)
        end)

        if success then
            Html.Text = tostring(cc)
        end
        
    end

    local function clear()
        Box.Text = """"
        Html.Text = """"
        ImageLabel.Image = ""rbxasset://textures/ui/GuiImagePlaceholder.png""
    end

    Box.Focused:Connect(function()
        wait()
        Box.Text = ""https://""
    end)

    ImageButton_6.MouseButton1Click:Connect(function()
        WebTest:Destroy()
    end)

    ImageButton_5.MouseButton1Click:Connect(function()
        local code = Html.Text
        setclipboard(code)
    end)

    ImageButton_4.MouseButton1Click:Connect(function()
        clear()
    end)

    ImageButton_3.MouseButton1Click:Connect(function()
        getHtml(Box.Text)
    end)

    ImageButton_2.MouseButton1Click:Connect(function()
        getWebsite(Box.Text)
    end)

    ImageButton.MouseButton1Click:Connect(function()
        OptionsMenu.Visible = not OptionsMenu.Visible
    end)



    local function TFBW_fake_script() -- UI.Dragify 
        local script = Instance.new('LocalScript', UI)

        local UserInputService = game:GetService(""UserInputService"")
        
        local gui = script.Parent
        
        local dragging
        local dragInput
        local dragStart
        local startPos
        
        local function update(input)
            local delta = input.Position - dragStart
            gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
        
        gui.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                dragStart = input.Position
                startPos = gui.Position
        
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)
        
        gui.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)
        
        UserInputService.InputChanged:Connect(function(input)
            if input == dragInput and dragging then
                update(input)
            end
        end)
    end
    coroutine.wrap(TFBW_fake_script)()
end

return ui"
dVZakCE2,ÈÇÄÊÇ®‰∏ÄËµ∑ÁúãÔºöü™úMetart,xiaomianao666,JavaScript,Wednesday 17th of April 2024 02:36:26 AM CDT,Êµ∑ÈòîËßÜÁïåËßÑÂàôÂàÜ‰∫´ÔºåÂΩìÂâçÂàÜ‰∫´ÁöÑÊòØÔºö‰∫åÁ∫ßÈ°µÈù¢ËØ¶ÊÉÖÔø•page_detailÔø•ü™úMetart@@
eWvfWMVj,Sprint Review,Silviya7,JavaScript,Wednesday 17th of April 2024 01:42:00 AM CDT,"function solve(input){
    const n= Number(input.shift());
  
    Assigneetasks={};
  

    for (let i = 0; i <n; i++) {

        const[assignee,taskId,title,status,estimatedPoints]= input[i].split(':');
               
       if(!Assigneetasks[assignee]){
        Assigneetasks[assignee]=[{taskId,title,status,estimatedPoints}];     
    
       }
       else{
        Assigneetasks[assignee].push({taskId,title,status,estimatedPoints});
       }
        
    }
    for (let j = 0; j < n; j++) {
       
        input.shift();
    }

   
    let CmdLine='';
    //CmdLine= input.shift();
    for(let p=0; p<input.length; p++){
       
     const [Cmd,assignee,taskId,title,status,estimatedPoints]=input[p].split(':');
    
     switch(Cmd){

        case'Add New': 
        //let assignee=Alltasks.find(t=> t.assignee== assignee);
        if(! Assigneetasks[assignee]){
            console.log(`Assignee ${assignee} does not exist on the board!`)
        }
        else{
            Assigneetasks[assignee].push({taskId,title,status,estimatedPoints});
        }
         break;

        case 'Change Status':
        let newStatus=title;
        const Alltasks=  Assigneetasks[assignee];
        let taskp= '';
        if(Alltasks){

            taskp=  Alltasks.find(t=> t.taskId== taskId); 
            if(!taskp) {

                console.log(`Task with ID ${taskId} does not exist for ${assignee}!`);
                }
                else {

               taskp.status = newStatus;
                }
            
        }    
       else if(!Assigneetasks[assignee]){
            console.log(`Assignee ${assignee} does not exist on the board!`);
          }      
        
       
          break;

        case'Remove Task': 
        let index= Number(taskId);
        const Alltasks1=  Assigneetasks[assignee];      
        if(!Alltasks1){
            console.log(`Assignee ${assignee} does not exist on the board!`)
        }
        else{
            if(index <0 || index >Number(Assigneetasks[assignee].length-1)){
              console.log('Index is out of range!');
            }
            else{
            Alltasks1.splice(index,1);
            }
        }
         break;


     }     
     //CmdLine= input.shift();
    }
    let ArrTasks={};
    ArrTasks['ToDo']=0;
    ArrTasks['In Progress']=0;
    ArrTasks['Code Review']=0;
    ArrTasks['Done']=0;


     for (const asignee in Assigneetasks) {
        
       let Asignee= Assigneetasks[asignee];
       for (const t of Asignee) {
    
            ArrTasks[t.status]+=Number(t.estimatedPoints);

       }
     }

    console.log(`ToDo: ${ArrTasks['ToDo']}pts`);
    console.log(`In Progress: ${ArrTasks['In Progress']}pts`);
    console.log(`Code Review: ${ArrTasks['Code Review']}pts`);
    console.log(`Done Points: ${ArrTasks['Done']}pts`);


    let sumOtherPoints=Number(ArrTasks['ToDo'])+Number(ArrTasks['In Progress'])+Number(ArrTasks['Code Review']);
    if(Number(ArrTasks['Done'] )>=sumOtherPoints){
    console.log(`Sprint was successful!`);
    }
    else{
        console.log(`Sprint was unsuccessful...`);
    }

}"
HjwL3z8F,PHP loop for mysql,xShub,PHP,Wednesday 17th of April 2024 01:24:36 AM CDT,"// Query per selezionare i record dalla tabella corso
$sql = $conn->prepare(""SELECT id_corso, corso FROM corso WHERE id_gruppo = ? ORDER BY id_corso"");
$sql->bind_param(""i"", $id_gruppo);
$sql->execute();
$result = $sql->get_result();
$conn->close();

// Controllo se ci sono risultati
if ($result && $result->num_rows > 0) {
    while ($row = $result->fetch_array()) {
        $json[] = $row;
    }
} else if ($result === false) {
    error_return_json_error(ERR_DATABASE);
}"
pLe4UkwW,archlinux-keyring-20240313.ebuild patch,tamjan,Diff,Wednesday 17th of April 2024 01:15:48 AM CDT,"diff --git a/app-crypt/archlinux-keyring/Manifest b/app-crypt/archlinux-keyring/Manifest
index a7878e3..6106c1c 100644
--- a/app-crypt/archlinux-keyring/Manifest
+++ b/app-crypt/archlinux-keyring/Manifest
@@ -1 +1 @@
-DIST archlinux-keyring-20240313.tar.gz 1252554 BLAKE2B 2d5e8502baffb79c46628f346562e7cefd64d3f2f2f99c245e81b65a1bc935926ef1a1ee2ed55b501236a090539a76d8a3df32a55bb249f08ddfdbef8c9fad16 SHA512 c01d701cad38cbc03eb154e4e7357c9ccda6fce24b38bb04fe20a4a00188514e5c94a49fb23fc0c3eac6b44a786e4fa6d6a87fe87736eb6088ca0d3e3698ba49
+DIST archlinux-keyring-20240313.tar.gz 1524297 BLAKE2B 3a3c205ad420a3442e9d8efe18508b0e4e20f2e80e768cb75af0be2e49b806edc83458da921e383d97a3660e0c14b3b8b60cedf11b8b5c3223ad95d7a6f721e5 SHA512 8caedebccd31a62264cb7c5e8d4c7f3e326f018b6e9148ab31e19e58a60b64c0ee2a641090c77a40bcfba93ef4ce13132b721241a0404816b40e28da4fd36f9b
diff --git a/app-crypt/archlinux-keyring/archlinux-keyring-20240313.ebuild b/app-crypt/archlinux-keyring/archlinux-keyring-20240313.ebuild
index 572c393..8db8f36 100644
--- a/app-crypt/archlinux-keyring/archlinux-keyring-20240313.ebuild
+++ b/app-crypt/archlinux-keyring/archlinux-keyring-20240313.ebuild
@@ -3,16 +3,18 @@

 EAPI=""8""

+inherit systemd
+
 DESCRIPTION=""GnuPG keyring of Archlinux developer keys""
 HOMEPAGE=""https://gitlab.archlinux.org/archlinux/archlinux-keyring/-/releases""
-SRC_URI=""https://gitlab.archlinux.org/archlinux/archlinux-keyring/-/releases/${PV}/downloads/archlinux-keyring-${PV}.tar.gz""
+SRC_URI=""https://gitlab.archlinux.org/archlinux/archlinux-keyring/-/archive/${PV}/archlinux-keyring-${PV}.tar.gz""

 LICENSE=""GPL-2""
 SLOT=""0""
 KEYWORDS=""~amd64""
 IUSE=""""

-BDEPEND=""app-crypt/sequoia-sq""
+BDEPEND="">=app-crypt/sequoia-sq-0.34""

 src_prepare() {
        default
@@ -20,7 +22,7 @@ src_prepare() {
        # On non-systemd installations the service files are thrown
        # directly into /. Hard-code the path as a quick and dirty solution.
        # If it breaks for someone else, please complain, too and I'll revert it.
-       sed -i ""s#\$\(shell pkgconf --variable systemd_system_unit_dir systemd\)#/usr/lib/systemd/system#"" Makefile || die
+       sed -i -E ""s#\\$\\(shell pkgconf --variable systemd_system_unit_dir systemd\\)#$(systemd_get_systemunitdir)#"" Makefile || die
 }

 src_install() {"
HZpiudKg,ls 2,PeaPattern,Lua,Wednesday 17th of April 2024 12:57:26 AM CDT,"local TService = game:GetService(""TweenService"")
local RStorage = game:GetService(""ReplicatedStorage"")
local SService = game:GetService(""SoundService"")
local Players  = game:GetService(""Players"")

local LocalPlayer = Players.LocalPlayer

local Remotes = RStorage.Remotes
local Modules = RStorage.Modules

local UI = script.Parent
local RebirthMenu = UI.RebirthMenu
local CodeMenu = UI.CodeMenu
local Bottom = UI.Bottom
local Click = Bottom.Click
local Rebirth = Bottom.Rebirth
local StatFrame = UI.Stats
local Clicks = StatFrame.Clicks
local Rebirths = StatFrame.Rebirths
local ClickLabel = Clicks.Label
local RebirthLabel = Rebirths.Label

function newInfo(Time)
	return TweenInfo.new(Time, Enum.EasingStyle.Quint, Enum.EasingDirection.Out)
end

function Notify(Text, Color)
	local Template = script.Template:Clone()
	Template.Parent = UI
	Template.Position = UDim2.new(math.random(2, 8) / 10, 0, math.random(3, 6) / 10, 0)
	Template.TextColor3 = Color or Template.TextColor3
	Template.Text = Text
	
	local Tween = TService:Create(Template, TweenInfo.new(1), {
		TextTransparency = 1,
		Position = Template.Position + UDim2.new(0, 0, -0.1, 0)
	})
	Tween:Play()
	
	local Connection
	Connection = Tween.Completed:Connect(function()
		Connection:Disconnect()
		Template:Destroy()
	end)
end

function Play(sfx)
	local new = sfx:Clone()
	new.Parent = SService
	new:Destroy()
end

function ApplyButton(obj, callback)
	local isHovering = false
	local oldSize = obj.Size
	local oldColor = obj.BackgroundColor3
	
	local INF, INF2 = newInfo(0.3), newInfo(0.2)
	local MB1D_TWEEN = TService:Create(obj, INF2, {
		Size = UDim2.new(oldSize.X.Scale * 0.85, 0, oldSize.Y.Scale * 0.85, 0),
		BackgroundColor3 = Color3.new(oldColor.R * 0.8, oldColor.G * 0.8, oldColor.B * 0.8)
	})
	local HOVER = TService:Create(obj, INF, {
		Size = UDim2.new(oldSize.X.Scale * 1.1, 0, oldSize.Y.Scale * 1.1, 0),
		BackgroundColor3 = Color3.new(oldColor.R * 0.9, oldColor.G * 0.9, oldColor.B * 0.9)
	})
	local RESET = TService:Create(obj, INF, {
		Size = oldSize,
		BackgroundColor3 = oldColor
	})
	
	obj.MouseButton1Down:Connect(function()
		MB1D_TWEEN:Play()
		Play(script.click)
		callback()
	end)

	obj.MouseButton1Up:Connect(function()
		if isHovering then
			HOVER:Play()
		else
			RESET:Play()
		end
		Play(script.unclick)
	end)

	obj.MouseEnter:Connect(function()
		HOVER:Play()
		isHovering = true
		Play(script.hover)
	end)

	obj.MouseLeave:Connect(function()
		RESET:Play()
		isHovering = false
		Play(script.unhover)
	end)
end

local RebirthsValue = LocalPlayer:WaitForChild(""leaderstats""):WaitForChild(""Rebirths"")
local ClicksValue = LocalPlayer:WaitForChild(""leaderstats""):WaitForChild(""Clicks"")

RebirthLabel.Text = RebirthsValue.Value
RebirthsValue.Changed:Connect(function()
	RebirthLabel.Text = RebirthsValue.Value
end)

ClickLabel.Text = ClicksValue.Value
ClicksValue.Changed:Connect(function()
	ClickLabel.Text = ClicksValue.Value
	RebirthMenu.Requirements.Label.Text = (""%d Clicks""):format((RebirthsValue.Value + 1) * 100)
end)

ApplyButton(Click, function()
	Remotes.Click:FireServer()
	Notify((""+%d Clicks""):format(RebirthsValue.Value + 1))
end)

ApplyButton(Rebirth, function()
	RebirthMenu.Visible = not RebirthMenu.Visible
end)

ApplyButton(RebirthMenu.Close, function()
	RebirthMenu.Visible = false
end)

ApplyButton(RebirthMenu.Confirm, function()
	if ClicksValue.Value >= (RebirthsValue.Value + 1) * 100 then
		Remotes.Rebirth:FireServer()
		Notify(""+1 Rebirths"", Color3.fromRGB(255, 129, 211))
		Play(script.rebirth)
	else
		Notify(""NEED MORE CLICKS"", Color3.fromRGB(255, 0, 0))
		Play(script.error)
	end
end)

ApplyButton(StatFrame.Codes, function()
	CodeMenu.Visible = not CodeMenu.Visible
end)

ApplyButton(CodeMenu.Close, function()
	CodeMenu.Visible = false
end)

local Codes = require(Modules.Codes)

ApplyButton(CodeMenu.Confirm, function()
	local TypedCode = CodeMenu.CodeBox.Text
	
	local Found = false
	for code, callback in Codes do
		if code == TypedCode:lower() then
			Found = true
			break
		end
	end
	
	if Found then
		local Result = Remotes.Code:InvokeServer(TypedCode)
		if Result == 0 then
			Notify(""INVALID CODE"", Color3.fromRGB(255, 0, 0))
			Play(script.error)
		elseif Result == 1 then
			Notify(""ALREADY USED CODE"", Color3.fromRGB(255, 0, 0))
			Play(script.error)
		elseif Result == 2 then
			Notify(""CODE SUCCESS"", Color3.fromRGB(0, 255, 0))
			Play(script.code)
		end
	else
		Play(script.error)
	end
end)
"
GhxVfzwn,ls 1,PeaPattern,Lua,Wednesday 17th of April 2024 12:57:07 AM CDT,"local SGui = game:GetService(""StarterGui"")
local TService = game:GetService(""TweenService"")

local Main = script.Parent
local Credits = Main.Credits
local Settings = Main.Settings
local Play = Main.Play
local CamPart = workspace:WaitForChild(""CamPart"")
local Camera = workspace.CurrentCamera

Camera.CameraType = Enum.CameraType.Scriptable
Camera.CFrame = CamPart.CFrame

function PlaySfx(sfx)
	local new = sfx:Clone()
	new.Parent = game:GetService(""SoundService"")
	new:Destroy()
end

function UnderlineHover(obj, callback)
	local underline = obj:FindFirstChild(""Underline"")
	if not underline then return end
	
	local icon = obj:FindFirstChild(""Icon"")
	if not icon then return end
	
	local enter = TService:Create(underline, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { BackgroundTransparency = 0 })
	local leave = TService:Create(underline, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { BackgroundTransparency = 1 })
	
	local enter_text = TService:Create(obj, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { TextColor3 = Color3.fromRGB(252, 255, 56) })
	local leave_text = TService:Create(obj, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { TextColor3 = Color3.new(1, 1, 1) })
	
	local enter_underline = TService:Create(underline, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { BackgroundColor3 = Color3.fromRGB(252, 255, 56) })
	local leave_underline = TService:Create(underline, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { BackgroundColor3 = Color3.new(1, 1, 1) })
	
	local enter_icon = TService:Create(icon, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { ImageColor3 = Color3.fromRGB(252, 255, 56) })
	local leave_icon = TService:Create(icon, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { ImageColor3 = Color3.new(1, 1, 1) })
	
	local function me()
		enter:Play()
		enter_text:Play()
		enter_underline:Play()
		enter_icon:Play()
		PlaySfx(script.hover)
	end
	
	local function ml()
		leave:Play()
		leave_text:Play()
		leave_underline:Play()
		leave_icon:Play()
		PlaySfx(script.unhover)
	end
	
	local function realCallback()
		callback()
		PlaySfx(script.click)
	end
	
	obj.MouseEnter:Connect(me)
	obj.MouseLeave:Connect(ml)
	icon.MouseEnter:Connect(me)
	icon.MouseLeave:Connect(ml)
	obj.MouseButton1Down:Connect(realCallback)
	icon.MouseButton1Down:Connect(realCallback)
end

local _cam = workspace.CurrentCamera
_cam.CameraType = Enum.CameraType.Scriptable
local mouse = game.Players.LocalPlayer:GetMouse()

local sensitivity = 0.03

local lastMousePosition = mouse.X

local Connection = mouse.Move:Connect(function()
	local delta = (mouse.X - lastMousePosition) * sensitivity
	_cam.CFrame = _cam.CFrame * CFrame.Angles(0, math.rad(delta), 0):Inverse()
	lastMousePosition = mouse.X 
end)


SGui:SetCoreGuiEnabled(Enum.CoreGuiType.All, false)

UnderlineHover(Credits, function()end)
UnderlineHover(Settings, function()end)
UnderlineHover(Play, function()
	Connection:Disconnect()
	script.Parent.Parent.Parent.Enabled = false
	script.Parent.Parent.Parent.Parent.UI.Enabled = true
	Camera.CameraType = Enum.CameraType.Follow
	SGui:SetCoreGuiEnabled(Enum.CoreGuiType.All, true)
end)
"
KYb2tyRE,Leaderstats,PeaPattern,Lua,Wednesday 17th of April 2024 12:56:09 AM CDT,"local DSService = game:GetService(""DataStoreService"")
local Players = game:GetService(""Players"")
local RStorage = game:GetService(""ReplicatedStorage"")

local Codes = DSService:GetDataStore(""CodesPlrs"")
local DS_Clicks = DSService:GetOrderedDataStore(""Clicks"")
local DS_Rebirths = DSService:GetOrderedDataStore(""Rebirths"")

local CodeList = require(RStorage.Modules.Codes)

Players.PlayerAdded:Connect(function(Player)
	local Leaderstats = Instance.new(""Folder"")
	Leaderstats.Parent = Player
	Leaderstats.Name = ""leaderstats""
	
	local Clicks = Instance.new(""IntValue"")
	Clicks.Parent = Leaderstats
	Clicks.Name = ""Clicks""
	
	local Rebirths = Instance.new(""IntValue"")
	Rebirths.Parent = Leaderstats
	Rebirths.Name = ""Rebirths""
	
	pcall(function()
		if not Codes:GetAsync(Player.UserId) then
			local Compiled = {}
			for code, callback in CodeList do
				Compiled[code] = true
			end
			Codes:SetAsync(Player.UserId, Compiled)
		end
	end)
	
	pcall(function()
		Clicks.Value = DS_Clicks:GetAsync(Player.UserId) or 0
	end)
	
	pcall(function()
		Rebirths.Value = DS_Rebirths:GetAsync(Player.UserId) or 0
	end)
end)

Players.PlayerRemoving:Connect(function(Player)
	pcall(function()
		DS_Clicks:SetAsync(Player.UserId, Player.leaderstats.Clicks.Value)
	end)
	
	pcall(function()
		DS_Rebirths:SetAsync(Player.UserId, Player.leaderstats.Rebirths.Value)
	end)
end)"
Cqy7TA7m,Main,PeaPattern,Lua,Wednesday 17th of April 2024 12:55:45 AM CDT,"local DSService = game:GetService(""DataStoreService"")
local Codes = DSService:GetDataStore(""CodesPlrs"")

local RStorage = game:GetService(""ReplicatedStorage"")
local Remotes = RStorage.Remotes
local Modules = RStorage.Modules

Remotes.Click.OnServerEvent:Connect(function(Player)
	local leaderstats = Player:WaitForChild(""leaderstats"")
	local Clicks = leaderstats:WaitForChild(""Clicks"")
	local Rebirths = leaderstats:WaitForChild(""Rebirths"")
	Clicks.Value += Rebirths.Value + 1
end)

Remotes.Rebirth.OnServerEvent:Connect(function(Player)
	local leaderstats = Player:WaitForChild(""leaderstats"")
	local Clicks = leaderstats:WaitForChild(""Clicks"")
	local Rebirths = leaderstats:WaitForChild(""Rebirths"")
	if Clicks.Value >= (Rebirths.Value + 1) * 100 then
		Clicks.Value = 0
		Rebirths.Value += 1
	end
end)

local CodeList = require(Modules.Codes)

Remotes.Code.OnServerInvoke = function(Player, TypedCode)
	local Data = Codes:GetAsync(Player.UserId)
	if not Data then return 1 end
	
	local Found = Data[TypedCode]
	if Found then
		for code, callback in CodeList do
			if code == TypedCode:lower() then
				callback(Player)
				Data[code] = false
				Codes:SetAsync(Player.UserId, Data)
				return 2
			end
		end
	else
		return 1
	end
	
	return 0
end"
eiqdxyXE,Flutter navigate to another view controller in iOS,chayanforyou,Swift,Wednesday 17th of April 2024 12:37:42 AM CDT,"self.appDelegate?.window?.rootViewController = nil
let navigationController = UINavigationController(rootViewController: self.controller!)
navigationController.isNavigationBarHidden = true
self.appDelegate?.window?.rootViewController = navigationController
self.appDelegate?.window?.makeKeyAndVisible()

let storyboard = UIStoryboard(name: ""Meeting"", bundle: nil)
if let container = storyboard.instantiateViewController(withIdentifier: ""meeting"") as? MeetingViewController {
    result(""success"")
    navigationController.pushViewController(container, animated: false)
}

// .... //
let container = storyboard.instantiateViewController(withIdentifier: ""meeting"") as! MeetingViewController
DispatchQueue.main.async {
    result(""success"")
    navigationController.pushViewController(container, animated: false)
}
// .... //"
zePjPmKE,build.gradle file,jevixlugya,Groovy,Tuesday 16th of April 2024 11:51:58 PM CDT,"plugins {
    id ""com.android.application""
    id ""kotlin-android""
    id ""dev.flutter.flutter-gradle-plugin""
    id(""com.google.gms.google-services"")
}

def localProperties = new Properties()//error here
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace ""com.example.sda_community_app""
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId ""com.example.sda_community_app""
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
        targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation(platform(""com.google.firebase:firebase-bom:32.7.1""))
}"
f8MtWTaL,KnifeItem attack cooldown (v50),283375,C#,Tuesday 16th of April 2024 11:20:59 PM CDT,"/**
 * Although the KnifeItem.prefab says `useCooldown: 0`, the `KnifeItem.HitKnife` has a special logic:
 * (Unrelated parts omitted)
 */
public class KnifeItem : GrabbableObject
{
    public int knifeHitForce = 1;

	public override void ItemActivate(bool used, bool buttonDown = true)
	{
		if (base.IsOwner) { HitKnife(); }
	}

	public void HitKnife(bool cancel = false)
	{
		if (!cancel)
		{
			objectsHitByKnife = Physics.SphereCastAll( /* ... */ );
			objectsHitByKnifeList = objectsHitByKnife /* ... */ ;
			for (int i = 0; i < objectsHitByKnifeList.Count; i++)
			{
				if (/* hit on special layers */) { /* ... */ }
				else
				{
					if ( /* hit on walls, floors, etc., */ ) continue;
					try
					{
						if (Time.realtimeSinceStartup - timeAtLastDamageDealt > 0.43f)  // <-- [!]
						{
							timeAtLastDamageDealt = Time.realtimeSinceStartup;
							component.Hit(knifeHitForce, forward, previousPlayerHeldBy, playHitSFX: true, 5);
							bloodParticle.Play(withChildren: true);
						}
					}
					catch (Exception arg) Debug.Log(""..."");
				}
			}
		}
	}

	// other methods ...
}

"
cXxwZpdG,IPTV-GITHUB-CATEGORIES.pyw,Najeebsk,Python,Tuesday 16th of April 2024 11:15:20 PM CDT,"import tkinter as tk
from tkinter import ttk, scrolledtext
import requests
from tkinter import messagebox

def save_m3u():
    selected_category = category_combo.get()
    url = categories.get(selected_category)
    if url:
        try:
            response = requests.get(url)
            with open(f""{selected_category}.m3u"", ""wb"") as f:
                f.write(response.content)
            messagebox.showinfo(""Success"", f""{selected_category}.m3u saved successfully!"")
        except requests.RequestException as e:
            messagebox.showerror(""Error"", f""Failed to save {selected_category}.m3u: {str(e)}"")
    else:
        messagebox.showerror(""Error"", ""Invalid category selected."")

def show_m3u():
    selected_category = category_combo.get()
    url = categories.get(selected_category)
    if url:
        try:
            response = requests.get(url)
            display_m3u(response.content.decode(""utf-8""))
        except requests.RequestException as e:
            messagebox.showerror(""Error"", f""Failed to fetch {selected_category}.m3u: {str(e)}"")
    else:
        messagebox.showerror(""Error"", ""Invalid category selected."")

def display_m3u(contents):
    text.delete(1.0, tk.END)
    text.insert(tk.END, contents)

# M3U URLs
categories = {
    ""Animation"": ""https://iptv-org.github.io/iptv/categories/animation.m3u"",
    ""Auto"": ""https://iptv-org.github.io/iptv/categories/auto.m3u"",
    ""Business"": ""https://iptv-org.github.io/iptv/categories/business.m3u"",
    ""Classic"": ""https://iptv-org.github.io/iptv/categories/classic.m3u"",
    ""Comedy"": ""https://iptv-org.github.io/iptv/categories/comedy.m3u"",
    ""Cooking"": ""https://iptv-org.github.io/iptv/categories/cooking.m3u"",
    ""Culture"": ""https://iptv-org.github.io/iptv/categories/culture.m3u"",
    ""Documentary"": ""https://iptv-org.github.io/iptv/categories/documentary.m3u"",
    ""Education"": ""https://iptv-org.github.io/iptv/categories/education.m3u"",
    ""Entertainment"": ""https://iptv-org.github.io/iptv/categories/entertainment.m3u"",
    ""Family"": ""https://iptv-org.github.io/iptv/categories/family.m3u"",
    ""General"": ""https://iptv-org.github.io/iptv/categories/general.m3u"",
    ""Kids"": ""https://iptv-org.github.io/iptv/categories/kids.m3u"",
    ""Legislative"": ""https://iptv-org.github.io/iptv/categories/legislative.m3u"",
    ""Lifestyle"": ""https://iptv-org.github.io/iptv/categories/lifestyle.m3u"",
    ""Movies"": ""https://iptv-org.github.io/iptv/categories/movies.m3u"",
    ""Music"": ""https://iptv-org.github.io/iptv/categories/music.m3u"",
    ""News"": ""https://iptv-org.github.io/iptv/categories/news.m3u"",
    ""Outdoor"": ""https://iptv-org.github.io/iptv/categories/outdoor.m3u"",
    ""Relax"": ""https://iptv-org.github.io/iptv/categories/relax.m3u"",
    ""Religious"": ""https://iptv-org.github.io/iptv/categories/religious.m3u"",
    ""Science"": ""https://iptv-org.github.io/iptv/categories/science.m3u"",
    ""Series"": ""https://iptv-org.github.io/iptv/categories/series.m3u"",
    ""Shop"": ""https://iptv-org.github.io/iptv/categories/shop.m3u"",
    ""Sports"": ""https://iptv-org.github.io/iptv/categories/sports.m3u"",
    ""Travel"": ""https://iptv-org.github.io/iptv/categories/travel.m3u"",
    ""Weather"": ""https://iptv-org.github.io/iptv/categories/weather.m3u"",
    ""XXX"": ""https://iptv-org.github.io/iptv/categories/xxx.m3u"",
    ""Undefined"": ""https://iptv-org.github.io/iptv/categories/undefined.m3u""
}

# GUI setup
root = tk.Tk()
root.title(""M3U Playlist Downloader"")

# Frame for categories
category_frame = ttk.Frame(root)
category_frame.pack(padx=10, pady=10)

# Label for category dropdown list
category_label = ttk.Label(category_frame, text=""Categories:"")
category_label.grid(row=0, column=0, padx=5, pady=5)

# Dropdown list for categories
category_combo = ttk.Combobox(category_frame, values=list(categories.keys()))
category_combo.grid(row=0, column=1, padx=5, pady=5)
category_combo.current(0)  # Set default value

# Button to save M3U file for categories
save_category_button = tk.Button(category_frame, text=""Save M3U"", command=save_m3u)
save_category_button.grid(row=0, column=2, padx=5, pady=5)

# Button to show M3U file for categories
show_category_button = tk.Button(category_frame, text=""Show M3U"", command=show_m3u)
show_category_button.grid(row=0, column=3, padx=5, pady=5)

# Text field to display M3U contents
text = scrolledtext.ScrolledText(root, width=60, height=20)
text.pack(pady=10)

root.mainloop()
"
fD6PZqh4,IPTV-GITHUB-COUNTRY.pyw,Najeebsk,Python,Tuesday 16th of April 2024 11:13:48 PM CDT,"import tkinter as tk
from tkinter import ttk, scrolledtext
import requests

def save_m3u():
    selected_country = country_combo.get()
    
    if selected_country:
        url = countries[selected_country]
    
        response = requests.get(url)
        filename = f""{selected_country}.m3u""
        
        with open(filename, ""wb"") as f:
            f.write(response.content)
        print(f""{filename} saved successfully!"")

def show_m3u():
    selected_country = country_combo.get()
    
    if selected_country:
        url = countries[selected_country]
    
        response = requests.get(url)
        display_m3u(response.content.decode(""utf-8""))

def display_m3u(contents):
    text.delete(1.0, tk.END)
    text.insert(tk.END, contents)

# M3U URLs
countries = {
    ""Afghanistan"": ""https://iptv-org.github.io/iptv/countries/af.m3u"",
    ""üá¶üá± Albania"": ""https://iptv-org.github.io/iptv/countries/al.m3u"",
    ""üá©üáø Algeria"": ""https://iptv-org.github.io/iptv/countries/dz.m3u"",
    ""üá¶üá∏ American Samoa"": ""https://iptv-org.github.io/iptv/countries/as.m3u"",
    ""üá¶üá© Andorra"": ""https://iptv-org.github.io/iptv/countries/ad.m3u"",
    ""üá¶üá¥ Angola"": ""https://iptv-org.github.io/iptv/countries/ao.m3u"",
    ""üá¶üáÆ Anguilla"": ""https://iptv-org.github.io/iptv/countries/ai.m3u"",
    ""üá¶üá¨ Antigua and Barbuda"": ""https://iptv-org.github.io/iptv/countries/ag.m3u"",
    ""üá¶üá∑ Argentina"": ""https://iptv-org.github.io/iptv/countries/ar.m3u"",
    ""üá¶üá≤ Armenia"": ""https://iptv-org.github.io/iptv/countries/am.m3u"",
    ""üá¶üáº Aruba"": ""https://iptv-org.github.io/iptv/countries/aw.m3u"",
    ""üá¶üá∫ Australia"": ""https://iptv-org.github.io/iptv/countries/au.m3u"",
    ""üá¶üáπ Austria"": ""https://iptv-org.github.io/iptv/countries/at.m3u"",
    ""üá¶üáø Azerbaijan"": ""https://iptv-org.github.io/iptv/countries/az.m3u"",
    ""üáßüá∏ Bahamas"": ""https://iptv-org.github.io/iptv/countries/bs.m3u"",
    ""üáßüá≠ Bahrain"": ""https://iptv-org.github.io/iptv/countries/bh.m3u"",
    ""üáßüá© Bangladesh"": ""https://iptv-org.github.io/iptv/countries/bd.m3u"",
    ""üáßüáß Barbados"": ""https://iptv-org.github.io/iptv/countries/bb.m3u"",
    ""üáßüáæ Belarus"": ""https://iptv-org.github.io/iptv/countries/by.m3u"",
    ""üáßüá™ Belgium"": ""https://iptv-org.github.io/iptv/countries/be.m3u"",
    ""üáßüáø Belize"": ""https://iptv-org.github.io/iptv/countries/bz.m3u"",
    ""üáßüáØ Benin"": ""https://iptv-org.github.io/iptv/countries/bj.m3u"",
    ""üáßüá≤ Bermuda"": ""https://iptv-org.github.io/iptv/countries/bm.m3u"",
    ""üáßüáπ Bhutan"": ""https://iptv-org.github.io/iptv/countries/bt.m3u"",
    ""üáßüá¥ Bolivia"": ""https://iptv-org.github.io/iptv/countries/bo.m3u"",
    ""üáßüá∂ Bonaire"": ""https://iptv-org.github.io/iptv/countries/bq.m3u"",
    ""üáßüá¶ Bosnia and Herzegovina"": ""https://iptv-org.github.io/iptv/countries/ba.m3u"",
    ""üáßüáº Botswana"": ""https://iptv-org.github.io/iptv/countries/bw.m3u"",
    ""üáßüáª Bouvet Island"": ""https://iptv-org.github.io/iptv/countries/bv.m3u"",
    ""üáßüá∑ Brazil"": ""https://iptv-org.github.io/iptv/countries/br.m3u"",
    ""üáªüá¨ British Virgin Islands"": ""https://iptv-org.github.io/iptv/countries/vg.m3u"",
    ""üáßüá≥ Brunei"": ""https://iptv-org.github.io/iptv/countries/bn.m3u"",
    ""üáßüá¨ Bulgaria"": ""https://iptv-org.github.io/iptv/countries/bg.m3u"",
    ""üáßüá´ Burkina Faso"": ""https://iptv-org.github.io/iptv/countries/bf.m3u"",
    ""üáßüáÆ Burundi"": ""https://iptv-org.github.io/iptv/countries/bi.m3u"",
    ""üá∞üá≠ Cambodia"": ""https://iptv-org.github.io/iptv/countries/kh.m3u"",
    ""üá®üá≤ Cameroon"": ""https://iptv-org.github.io/iptv/countries/cm.m3u"",
    ""üá®üá¶ Canada"": ""https://iptv-org.github.io/iptv/countries/ca.m3u"",
    ""üá®üáª Cape Verde"": ""https://iptv-org.github.io/iptv/countries/cv.m3u"",
    ""üáßüá∂ Caribbean Netherlands"": ""https://iptv-org.github.io/iptv/countries/bq.m3u"",
    ""üá∞üáæ Cayman Islands"": ""https://iptv-org.github.io/iptv/countries/ky.m3u"",
    ""üá®üá´ Central African Republic"": ""https://iptv-org.github.io/iptv/countries/cf.m3u"",
    ""üáπüá© Chad"": ""https://iptv-org.github.io/iptv/countries/td.m3u"",
    ""üá®üá± Chile"": ""https://iptv-org.github.io/iptv/countries/cl.m3u"",
    ""üá®üá≥ China"": ""https://iptv-org.github.io/iptv/countries/cn.m3u"",
    ""üá®üáΩ Christmas Island"": ""https://iptv-org.github.io/iptv/countries/cx.m3u"",
    ""üá®üá® Cocos Islands"": ""https://iptv-org.github.io/iptv/countries/cc.m3u"",
    ""üá®üá¥ Colombia"": ""https://iptv-org.github.io/iptv/countries/co.m3u"",
    ""üá∞üá≤ Comoros"": ""https://iptv-org.github.io/iptv/countries/km.m3u"",
    ""üá®üá¨ Congo"": ""https://iptv-org.github.io/iptv/countries/cg.m3u"",
    ""üá®üá© Congo DR"": ""https://iptv-org.github.io/iptv/countries/cd.m3u"",
    ""üá®üá∞ Cook Islands"": ""https://iptv-org.github.io/iptv/countries/ck.m3u"",
    ""üá®üá∑ Costa Rica"": ""https://iptv-org.github.io/iptv/countries/cr.m3u"",
    ""üá≠üá∑ Croatia"": ""https://iptv-org.github.io/iptv/countries/hr.m3u"",
    ""üá®üá∫ Cuba"": ""https://iptv-org.github.io/iptv/countries/cu.m3u"",
    ""üá®üáº Cura√ßao"": ""https://iptv-org.github.io/iptv/countries/cw.m3u"",
    ""üá®üáæ Cyprus"": ""https://iptv-org.github.io/iptv/countries/cy.m3u"",
    ""üá®üáø Czech Republic"": ""https://iptv-org.github.io/iptv/countries/cz.m3u"",
    ""üá©üá∞ Denmark"": ""https://iptv-org.github.io/iptv/countries/dk.m3u"",
    ""üá©üáØ Djibouti"": ""https://iptv-org.github.io/iptv/countries/dj.m3u"",
    ""üá©üá≤ Dominica"": ""https://iptv-org.github.io/iptv/countries/dm.m3u"",
    ""üá©üá¥ Dominican Republic"": ""https://iptv-org.github.io/iptv/countries/do.m3u"",
    ""üá™üá® Ecuador"": ""https://iptv-org.github.io/iptv/countries/ec.m3u"",
    ""üá™üá¨ Egypt"": ""https://iptv-org.github.io/iptv/countries/eg.m3u"",
    ""üá∏üáª El Salvador"": ""https://iptv-org.github.io/iptv/countries/sv.m3u"",
    ""üá¨üá∂ Equatorial Guinea"": ""https://iptv-org.github.io/iptv/countries/gq.m3u"",
    ""üá™üá∑ Eritrea"": ""https://iptv-org.github.io/iptv/countries/er.m3u"",
    ""üá™üá™ Estonia"": ""https://iptv-org.github.io/iptv/countries/ee.m3u"",
    ""üá™üáπ Ethiopia"": ""https://iptv-org.github.io/iptv/countries/et.m3u"",
    ""üá´üá¥ Faroe Islands"": ""https://iptv-org.github.io/iptv/countries/fo.m3u"",
    ""üá´üáØ Fiji"": ""https://iptv-org.github.io/iptv/countries/fj.m3u"",
    ""üá´üáÆ Finland"": ""https://iptv-org.github.io/iptv/countries/fi.m3u"",
    ""üá´üá∑ France"": ""https://iptv-org.github.io/iptv/countries/fr.m3u"",
    ""üá¨üá´ French Guiana"": ""https://iptv-org.github.io/iptv/countries/gf.m3u"",
    ""üáµüá´ French Polynesia"": ""https://iptv-org.github.io/iptv/countries/pf.m3u"",
    ""üáπüá´ French Southern Territories"": ""https://iptv-org.github.io/iptv/countries/tf.m3u"",
    ""üá¨üá¶ Gabon"": ""https://iptv-org.github.io/iptv/countries/ga.m3u"",
    ""üá¨üá≤ Gambia"": ""https://iptv-org.github.io/iptv/countries/gm.m3u"",
    ""üá¨üá™ Georgia"": ""https://iptv-org.github.io/iptv/countries/ge.m3u"",
    ""üá©üá™ Germany"": ""https://iptv-org.github.io/iptv/countries/de.m3u"",
    ""üá¨üá≠ Ghana"": ""https://iptv-org.github.io/iptv/countries/gh.m3u"",
    ""üá¨üáÆ Gibraltar"": ""https://iptv-org.github.io/iptv/countries/gi.m3u"",
    ""üá¨üá∑ Greece"": ""https://iptv-org.github.io/iptv/countries/gr.m3u"",
    ""üá¨üá± Greenland"": ""https://iptv-org.github.io/iptv/countries/gl.m3u"",
    ""üá¨üá© Grenada"": ""https://iptv-org.github.io/iptv/countries/gd.m3u"",
    ""üá¨üáµ Guadeloupe"": ""https://iptv-org.github.io/iptv/countries/gp.m3u"",
    ""üá¨üá∫ Guam"": ""https://iptv-org.github.io/iptv/countries/gu.m3u"",
    ""üá¨üáπ Guatemala"": ""https://iptv-org.github.io/iptv/countries/gt.m3u"",
    ""üá¨üá¨ Guernsey"": ""https://iptv-org.github.io/iptv/countries/gg.m3u"",
    ""üá¨üá≥ Guinea"": ""https://iptv-org.github.io/iptv/countries/gn.m3u"",
    ""üá¨üáº Guinea-Bissau"": ""https://iptv-org.github.io/iptv/countries/gw.m3u"",
    ""üá¨üáæ Guyana"": ""https://iptv-org.github.io/iptv/countries/gy.m3u"",
    ""üá≠üáπ Haiti"": ""https://iptv-org.github.io/iptv/countries/ht.m3u"",
    ""üá≠üá≥ Honduras"": ""https://iptv-org.github.io/iptv/countries/hn.m3u"",
    ""üá≠üá∞ Hong Kong"": ""https://iptv-org.github.io/iptv/countries/hk.m3u"",
    ""üá≠üá∫ Hungary"": ""https://iptv-org.github.io/iptv/countries/hu.m3u"",
    ""üáÆüá∏ Iceland"": ""https://iptv-org.github.io/iptv/countries/is.m3u"",
    ""üáÆüá≥ India"": ""https://iptv-org.github.io/iptv/countries/in.m3u"",
    ""üáÆüá© Indonesia"": ""https://iptv-org.github.io/iptv/countries/id.m3u"",
    ""üáÆüá∑ Iran"": ""https://iptv-org.github.io/iptv/countries/ir.m3u"",
    ""üáÆüá∂ Iraq"": ""https://iptv-org.github.io/iptv/countries/iq.m3u"",
    ""üáÆüá™ Ireland"": ""https://iptv-org.github.io/iptv/countries/ie.m3u"",
    ""üáÆüá≤ Isle of Man"": ""https://iptv-org.github.io/iptv/countries/im.m3u"",
    ""üáÆüá± Israel"": ""https://iptv-org.github.io/iptv/countries/il.m3u"",
    ""üáÆüáπ Italy"": ""https://iptv-org.github.io/iptv/countries/it.m3u"",
    ""üáØüá≤ Jamaica"": ""https://iptv-org.github.io/iptv/countries/jm.m3u"",
    ""üáØüáµ Japan"": ""https://iptv-org.github.io/iptv/countries/jp.m3u"",
    ""üáØüá™ Jersey"": ""https://iptv-org.github.io/iptv/countries/je.m3u"",
    ""üáØüá¥ Jordan"": ""https://iptv-org.github.io/iptv/countries/jo.m3u"",
    ""üá∞üáø Kazakhstan"": ""https://iptv-org.github.io/iptv/countries/kz.m3u"",
    ""üá∞üá™ Kenya"": ""https://iptv-org.github.io/iptv/countries/ke.m3u"",
    ""üá∞üáÆ Kiribati"": ""https://iptv-org.github.io/iptv/countries/ki.m3u"",
    ""üáΩüá∞ Kosovo"": ""https://iptv-org.github.io/iptv/countries/xk.m3u"",
    ""üá∞üáº Kuwait"": ""https://iptv-org.github.io/iptv/countries/kw.m3u"",
    ""üá∞üá¨ Kyrgyzstan"": ""https://iptv-org.github.io/iptv/countries/kg.m3u"",
    ""üá±üá¶ Laos"": ""https://iptv-org.github.io/iptv/countries/la.m3u"",
    ""üá±üáª Latvia"": ""https://iptv-org.github.io/iptv/countries/lv.m3u"",
    ""üá±üáß Lebanon"": ""https://iptv-org.github.io/iptv/countries/lb.m3u"",
    ""üá±üá∏ Lesotho"": ""https://iptv-org.github.io/iptv/countries/ls.m3u"",
    ""üá±üá∑ Liberia"": ""https://iptv-org.github.io/iptv/countries/lr.m3u"",
    ""üá±üáæ Libya"": ""https://iptv-org.github.io/iptv/countries/ly.m3u"",
    ""üá±üáÆ Liechtenstein"": ""https://iptv-org.github.io/iptv/countries/li.m3u"",
    ""üá±üáπ Lithuania"": ""https://iptv-org.github.io/iptv/countries/lt.m3u"",
    ""üá±üá∫ Luxembourg"": ""https://iptv-org.github.io/iptv/countries/lu.m3u"",
    ""üá≤üá¥ Macao"": ""https://iptv-org.github.io/iptv/countries/mo.m3u"",
    ""üá≤üá∞ Macedonia"": ""https://iptv-org.github.io/iptv/countries/mk.m3u"",
    ""üá≤üá¨ Madagascar"": ""https://iptv-org.github.io/iptv/countries/mg.m3u"",
    ""üá≤üáº Malawi"": ""https://iptv-org.github.io/iptv/countries/mw.m3u"",
    ""üá≤üáæ Malaysia"": ""https://iptv-org.github.io/iptv/countries/my.m3u"",
    ""üá≤üáª Maldives"": ""https://iptv-org.github.io/iptv/countries/mv.m3u"",
    ""üá≤üá± Mali"": ""https://iptv-org.github.io/iptv/countries/ml.m3u"",
    ""üá≤üáπ Malta"": ""https://iptv-org.github.io/iptv/countries/mt.m3u"",
    ""üá≤üá≠ Marshall Islands"": ""https://iptv-org.github.io/iptv/countries/mh.m3u"",
    ""üá≤üá∂ Martinique"": ""https://iptv-org.github.io/iptv/countries/mq.m3u"",
    ""üá≤üá∑ Mauritania"": ""https://iptv-org.github.io/iptv/countries/mr.m3u"",
    ""üá≤üá∫ Mauritius"": ""https://iptv-org.github.io/iptv/countries/mu.m3u"",
    ""üáæüáπ Mayotte"": ""https://iptv-org.github.io/iptv/countries/yt.m3u"",
    ""üá≤üáΩ Mexico"": ""https://iptv-org.github.io/iptv/countries/mx.m3u"",
    ""üá´üá≤ Micronesia"": ""https://iptv-org.github.io/iptv/countries/fm.m3u"",
    ""üá≤üá© Moldova"": ""https://iptv-org.github.io/iptv/countries/md.m3u"",
    ""üá≤üá® Monaco"": ""https://iptv-org.github.io/iptv/countries/mc.m3u"",
    ""üá≤üá≥ Mongolia"": ""https://iptv-org.github.io/iptv/countries/mn.m3u"",
    ""üá≤üá™ Montenegro"": ""https://iptv-org.github.io/iptv/countries/me.m3u"",
    ""üá≤üá∏ Montserrat"": ""https://iptv-org.github.io/iptv/countries/ms.m3u"",
    ""üá≤üá¶ Morocco"": ""https://iptv-org.github.io/iptv/countries/ma.m3u"",
    ""üá≤üáø Mozambique"": ""https://iptv-org.github.io/iptv/countries/mz.m3u"",
    ""üá≤üá≤ Myanmar"": ""https://iptv-org.github.io/iptv/countries/mm.m3u"",
    ""üá≥üá¶ Namibia"": ""https://iptv-org.github.io/iptv/countries/na.m3u"",
    ""üá≥üá∑ Nauru"": ""https://iptv-org.github.io/iptv/countries/nr.m3u"",
    ""üá≥üáµ Nepal"": ""https://iptv-org.github.io/iptv/countries/np.m3u"",
    ""üá≥üá± Netherlands"": ""https://iptv-org.github.io/iptv/countries/nl.m3u"",
    ""üá≥üá® New Caledonia"": ""https://iptv-org.github.io/iptv/countries/nc.m3u"",
    ""üá≥üáø New Zealand"": ""https://iptv-org.github.io/iptv/countries/nz.m3u"",
    ""üá≥üáÆ Nicaragua"": ""https://iptv-org.github.io/iptv/countries/ni.m3u"",
    ""üá≥üá™ Niger"": ""https://iptv-org.github.io/iptv/countries/ne.m3u"",
    ""üá≥üá¨ Nigeria"": ""https://iptv-org.github.io/iptv/countries/ng.m3u"",
    ""üá≥üá∫ Niue"": ""https://iptv-org.github.io/iptv/countries/nu.m3u"",
    ""üá≥üá´ Norfolk Island"": ""https://iptv-org.github.io/iptv/countries/nf.m3u"",
    ""üá∞üáµ North Korea"": ""https://iptv-org.github.io/iptv/countries/kp.m3u"",
    ""üá≤üáµ Northern Mariana Islands"": ""https://iptv-org.github.io/iptv/countries/mp.m3u"",
    ""üá≥üá¥ Norway"": ""https://iptv-org.github.io/iptv/countries/no.m3u"",
    ""üá¥üá≤ Oman"": ""https://iptv-org.github.io/iptv/countries/om.m3u"",
    ""üáµüá∞ Pakistan"": ""https://iptv-org.github.io/iptv/countries/pk.m3u"",
    ""üáµüáº Palau"": ""https://iptv-org.github.io/iptv/countries/pw.m3u"",
    ""üáµüá∏ Palestine"": ""https://iptv-org.github.io/iptv/countries/ps.m3u"",
    ""üáµüá¶ Panama"": ""https://iptv-org.github.io/iptv/countries/pa.m3u"",
    ""üáµüá¨ Papua New Guinea"": ""https://iptv-org.github.io/iptv/countries/pg.m3u"",
    ""üáµüáæ Paraguay"": ""https://iptv-org.github.io/iptv/countries/py.m3u"",
    ""üáµüá™ Peru"": ""https://iptv-org.github.io/iptv/countries/pe.m3u"",
    ""üáµüá≠ Philippines"": ""https://iptv-org.github.io/iptv/countries/ph.m3u"",
    ""üáµüá≥ Pitcairn"": ""https://iptv-org.github.io/iptv/countries/pn.m3u"",
    ""üáµüá± Poland"": ""https://iptv-org.github.io/iptv/countries/pl.m3u"",
    ""üáµüáπ Portugal"": ""https://iptv-org.github.io/iptv/countries/pt.m3u"",
    ""üáµüá∑ Puerto Rico"": ""https://iptv-org.github.io/iptv/countries/pr.m3u"",
    ""üá∂üá¶ Qatar"": ""https://iptv-org.github.io/iptv/countries/qa.m3u"",
    ""üá∑üá¥ Romania"": ""https://iptv-org.github.io/iptv/countries/ro.m3u"",
    ""üá∑üá∫ Russia"": ""https://iptv-org.github.io/iptv/countries/ru.m3u"",
    ""üá∑üáº Rwanda"": ""https://iptv-org.github.io/iptv/countries/rw.m3u"",
    ""üáºüá∏ Samoa"": ""https://iptv-org.github.io/iptv/countries/ws.m3u"",
    ""üá∏üá≤ San Marino"": ""https://iptv-org.github.io/iptv/countries/sm.m3u"",
    ""üá∏üáπ Sao Tome and Principe"": ""https://iptv-org.github.io/iptv/countries/st.m3u"",
    ""üá∏üá¶ Saudi Arabia"": ""https://iptv-org.github.io/iptv/countries/sa.m3u"",
    ""üá∏üá≥ Senegal"": ""https://iptv-org.github.io/iptv/countries/sn.m3u"",
    ""üá∑üá∏ Serbia"": ""https://iptv-org.github.io/iptv/countries/rs.m3u"",
    ""üá∏üá® Seychelles"": ""https://iptv-org.github.io/iptv/countries/sc.m3u"",
    ""üá∏üá± Sierra Leone"": ""https://iptv-org.github.io/iptv/countries/sl.m3u"",
    ""üá∏üá¨ Singapore"": ""https://iptv-org.github.io/iptv/countries/sg.m3u"",
    ""üá∏üáΩ Sint Maarten"": ""https://iptv-org.github.io/iptv/countries/sx.m3u"",
    ""üá∏üá∞ Slovakia"": ""https://iptv-org.github.io/iptv/countries/sk.m3u"",
    ""üá∏üáÆ Slovenia"": ""https://iptv-org.github.io/iptv/countries/si.m3u"",
    ""üá∏üáß Solomon Islands"": ""https://iptv-org.github.io/iptv/countries/sb.m3u"",
    ""üá∏üá¥ Somalia"": ""https://iptv-org.github.io/iptv/countries/so.m3u"",
    ""üáøüá¶ South Africa"": ""https://iptv-org.github.io/iptv/countries/za.m3u"",
    ""üá∞üá∑ South Korea"": ""https://iptv-org.github.io/iptv/countries/kr.m3u"",
    ""üá∏üá∏ South Sudan"": ""https://iptv-org.github.io/iptv/countries/ss.m3u"",
    ""üá™üá∏ Spain"": ""https://iptv-org.github.io/iptv/countries/es.m3u"",
    ""üá±üá∞ Sri Lanka"": ""https://iptv-org.github.io/iptv/countries/lk.m3u"",
    ""üáßüá± St. Barth√©lemy"": ""https://iptv-org.github.io/iptv/countries/bl.m3u"",
    ""üá∏üá≠ St. Helena"": ""https://iptv-org.github.io/iptv/countries/sh.m3u"",
    ""üá∞üá≥ St. Kitts and Nevis"": ""https://iptv-org.github.io/iptv/countries/kn.m3u"",
    ""üá±üá® St. Lucia"": ""https://iptv-org.github.io/iptv/countries/lc.m3u"",
    ""üá≤üá´ St. Martin"": ""https://iptv-org.github.io/iptv/countries/mf.m3u"",
    ""üáµüá≤ St. Pierre and Miquelon"": ""https://iptv-org.github.io/iptv/countries/pm.m3u"",
    ""üáªüá® St. Vincent and Grenadines"": ""https://iptv-org.github.io/iptv/countries/vc.m3u"",
    ""üá∏üá© Sudan"": ""https://iptv-org.github.io/iptv/countries/sd.m3u"",
    ""üá∏üá∑ Suriname"": ""https://iptv-org.github.io/iptv/countries/sr.m3u"",
    ""üá∏üáØ Svalbard and Jan Mayen"": ""https://iptv-org.github.io/iptv/countries/sj.m3u"",
    ""üá∏üáø Swaziland"": ""https://iptv-org.github.io/iptv/countries/sz.m3u"",
    ""üá∏üá™ Sweden"": ""https://iptv-org.github.io/iptv/countries/se.m3u"",
    ""üá®üá≠ Switzerland"": ""https://iptv-org.github.io/iptv/countries/ch.m3u"",
    ""üá∏üáæ Syria"": ""https://iptv-org.github.io/iptv/countries/sy.m3u"",
    ""üáπüáº Taiwan"": ""https://iptv-org.github.io/iptv/countries/tw.m3u"",
    ""üáπüáØ Tajikistan"": ""https://iptv-org.github.io/iptv/countries/tj.m3u"",
    ""üáπüáø Tanzania"": ""https://iptv-org.github.io/iptv/countries/tz.m3u"",
    ""üáπüá≠ Thailand"": ""https://iptv-org.github.io/iptv/countries/th.m3u"",
    ""üáπüá± Timor-Leste"": ""https://iptv-org.github.io/iptv/countries/tl.m3u"",
    ""üáπüá¨ Togo"": ""https://iptv-org.github.io/iptv/countries/tg.m3u"",
    ""üáπüá∞ Tokelau"": ""https://iptv-org.github.io/iptv/countries/tk.m3u"",
    ""üáπüá¥ Tonga"": ""https://iptv-org.github.io/iptv/countries/to.m3u"",
    ""üáπüáπ Trinidad and Tobago"": ""https://iptv-org.github.io/iptv/countries/tt.m3u"",
    ""üáπüá≥ Tunisia"": ""https://iptv-org.github.io/iptv/countries/tn.m3u"",
    ""üáπüá∑ Turkey"": ""https://iptv-org.github.io/iptv/countries/tr.m3u"",
    ""üáπüá≤ Turkmenistan"": ""https://iptv-org.github.io/iptv/countries/tm.m3u"",
    ""üáπüá® Turks and Caicos Islands"": ""https://iptv-org.github.io/iptv/countries/tc.m3u"",
    ""üáπüáª Tuvalu"": ""https://iptv-org.github.io/iptv/countries/tv.m3u"",
    ""üá∫üá¨ Uganda"": ""https://iptv-org.github.io/iptv/countries/ug.m3u"",
    ""üá∫üá¶ Ukraine"": ""https://iptv-org.github.io/iptv/countries/ua.m3u"",
    ""üá¶üá™ United Arab Emirates"": ""https://iptv-org.github.io/iptv/countries/ae.m3u"",
    ""üá¨üáß United Kingdom"": ""https://iptv-org.github.io/iptv/countries/gb.m3u"",
    ""üá∫üá∏ United States"": ""https://iptv-org.github.io/iptv/countries/us.m3u"",
    ""üá∫üáæ Uruguay"": ""https://iptv-org.github.io/iptv/countries/uy.m3u"",
    ""üá∫üáø Uzbekistan"": ""https://iptv-org.github.io/iptv/countries/uz.m3u"",
    ""üáªüá∫ Vanuatu"": ""https://iptv-org.github.io/iptv/countries/vu.m3u"",
    ""üáªüá¶ Vatican City"": ""https://iptv-org.github.io/iptv/countries/va.m3u"",
    ""üáªüá™ Venezuela"": ""https://iptv-org.github.io/iptv/countries/ve.m3u"",
    ""üáªüá≥ Vietnam"": ""https://iptv-org.github.io/iptv/countries/vn.m3u"",
    ""üáªüáÆ Virgin Islands"": ""https://iptv-org.github.io/iptv/countries/vi.m3u"",
    ""üáºüá´ Wallis and Futuna"": ""https://iptv-org.github.io/iptv/countries/wf.m3u"",
    ""üá™üá≠ Western Sahara"": ""https://iptv-org.github.io/iptv/countries/eh.m3u"",
    ""üáæüá™ Yemen"": ""https://iptv-org.github.io/iptv/countries/ye.m3u"",
    ""üáøüá≤ Zambia"": ""https://iptv-org.github.io/iptv/countries/zm.m3u"",
    ""üáøüáº Zimbabwe"": ""https://iptv-org.github.io/iptv/countries/zw.m3u""
}


# GUI setup
root = tk.Tk()
root.title(""M3U Playlist Downloader"")

# Frame for countries
country_frame = ttk.Frame(root)
country_frame.pack(padx=10, pady=10)

# Label for country dropdown list
country_label = ttk.Label(country_frame, text=""Countries:"")
country_label.grid(row=0, column=0, padx=5, pady=5)

# Dropdown list for countries
country_combo = ttk.Combobox(country_frame, values=list(countries.keys()))
country_combo.grid(row=0, column=1, padx=5, pady=5)
country_combo.current(0)  # Set default value

# Button to save M3U file for countries
save_country_button = tk.Button(country_frame, text=""Save M3U"", command=save_m3u)
save_country_button.grid(row=0, column=2, padx=5, pady=5)

# Button to show M3U file for countries
show_country_button = tk.Button(country_frame, text=""Show M3U"", command=show_m3u)
show_country_button.grid(row=0, column=3, padx=5, pady=5)

# Text area to display M3U
text = scrolledtext.ScrolledText(root, width=80, height=20)
text.pack(padx=10, pady=10)

root.mainloop()
"
y2eF9DRt,ÈÇÄÊÇ®‰∏ÄËµ∑ÁúãÔºöÁà±ÁúãÂΩ±ËßÜü§°,xiaomianao666,JavaScript,Tuesday 16th of April 2024 10:35:49 PM CDT,Êµ∑ÈòîËßÜÁïåËßÑÂàôÂàÜ‰∫´ÔºåÂΩìÂâçÂàÜ‰∫´ÁöÑÊòØÔºö‰∫åÁ∫ßÈ°µÈù¢ËØ¶ÊÉÖÔø•page_detailÔø•Áà±ÁúãÂΩ±ËßÜü§°@@
PdAa5CfZ,Dead Weight,meromerc,HTML,Tuesday 16th of April 2024 10:21:03 PM CDT,"<!--

    DEAD WEIGHT

    a code by meromercury
    pssst... this one was always my favorite ;]
    
    created: 06/28/21 // updated: 2/25/23 // made free: 4/16/24
    
    bootstrap versions are included. remove <!-- and --\> to use.
    
      accent color: #7154FB
      ctrl+F to change. replace the hex code with a space for no color

-->

<div class=""container"">
<div style=""font-size:14px;max-width:1100px;"">
<div class=""row"">

<!-------------------

      SIDE PANEL

--------------------->

<div class=""container col-md p-0 mr-3 m-0"" style=""max-width:301px;"">
<div class=""card d-block rounded-0"" style=""height:600px"">

  <!-------- SIDE IMAGE -------->
  <div class=""border-0 p-0 m-0 mb-1"" style=""background:url(https://images.unsplash.com/photo-1610209204869-4822c0a980da) top center; background-repeat: no-repeat; border:muted; background-size:cover;min-height:300px;width:300px;z-index:9999"">
  </div>
  
  <div class=""tab-content p-0"" style=""height:250px"">
    <div class=""tab-pane active show fade mb-0"" id=""left1"">
      <div class=""container p-0"" style=""max-height:250px; overflow:auto"">
        <div class=""my-2 mx-3 justify-content-between"" style=""font-size:15px"">
          <div style=""font-weight:600; color:#7154FB"">
            NAME
          </div>
          <span class=""pull-right"" style=""font-weight:200"">
            content
          </span>
        </div>
        <hr class=""my-2"">
        <div class=""my-2 mx-3 justify-content-between"" style=""font-size:15px"">
          <div style=""font-weight:600; color:#7154FB"">
            AGE
          </div>
          <span class=""pull-right"" style=""font-weight:200"">
            content
          </span>
        </div>
        <hr class=""my-2"">
        <div class=""my-2 mx-3 justify-content-between"" style=""font-size:15px"">
          <div style=""font-weight:600; color:#7154FB"">
            COLOR
          </div>
          <span class=""pull-right"" style=""font-weight:200"">
            content
          </span>
        </div>
        <hr class=""my-2"">
        <div class=""my-2 mx-3 justify-content-between"" style=""font-size:15px"">
          <div style=""font-weight:600; color:#7154FB"">
            GENDER
          </div>
          <span class=""pull-right"" style=""font-weight:200"">
            content
          </span>
        </div>
        <hr class=""my-2"">
        <div class=""my-2 mx-3 justify-content-between"" style=""font-size:15px"">
          <div style=""font-weight:600; color:#7154FB"">
            PRONOUNS
          </div>
          <span class=""pull-right"" style=""font-weight:200"">
            content
          </span>
        </div>
        <hr class=""my-2"">
        <div class=""my-2 mx-3 justify-content-between"" style=""font-size:15px"">
          <div style=""font-weight:600; color:#7154FB"">
            ORIENTATION
          </div>
          <span class=""pull-right"" style=""font-weight:200"">
            content
          </span>
        </div>
     </div>
    </div>
    <div class=""tab-pane show fade"" id=""left2"">
      <div class=""container p-0"" style=""max-height:250px; overflow:auto"">
        
        <div class=""my-2 mx-3 justify-content-between"" style=""font-size:15px"">
          <div style=""font-weight:600; color:#7154FB"">
            BIRTHDAY
          </div>
          <span class=""pull-right"" style=""font-weight:200"">
            content
          </span>
        </div>
        <hr class=""my-2"">
        <div class=""my-2 mx-3 justify-content-between"" style=""font-size:15px"">
          <div style=""font-weight:600; color:#7154FB"">
            OCCUPATION
          </div>
          <span class=""pull-right"" style=""font-weight:200"">
            content
          </span>
        </div>
        <hr class=""my-2"">
        <div class=""my-2 mx-3 justify-content-between"" style=""font-size:15px"">
          <div style=""font-weight:600; color:#7154FB"">
            STRIFE SPECIBUS
          </div>
          <span class=""pull-right"" style=""font-weight:200"">
            content
          </span>
        </div>
        <hr class=""my-2"">
        <div class=""my-2 mx-3 justify-content-between"" style=""font-size:15px"">
          <div style=""font-weight:600; color:#7154FB"">
            ROLE
          </div>
          <span class=""pull-right"" style=""font-weight:200"">
            content
          </span>
        </div>
        <hr class=""my-2"">
        <div class=""my-2 mx-3 justify-content-between"" style=""font-size:15px"">
          <div style=""font-weight:600; color:#7154FB"">
            MOON
          </div>
          <span class=""pull-right"" style=""font-weight:200"">
            content
          </span>
        </div>
        <hr class=""my-2"">
        <div class=""my-2 mx-3 justify-content-between"" style=""font-size:15px"">
          <div style=""font-weight:600; color:#7154FB"">
            GUARDIAN
          </div>
          <span class=""pull-right"" style=""font-weight:200"">
            content
          </span>
        </div>
     </div>
    </div>
    <hr class=""mt-0 mb-2"">
</div>
  
<!-- BOOTSTRAP
  <ul class=""nav nav-pills nav-fill row mb-1 m-0 p-0 justify-content-center text-center"" style=""font-size:20px"">
    <li class=""col-sm-4 mx-4""><a class=""nav-link active border-none p-0"" data-toggle=""tab"" href=""#left1""><i class=""fas fa-caret-left""></i></a></li>
    <li class=""col-sm-4 mx-4""><a class=""nav-link p-0"" data-toggle=""tab"" href=""#left2""><i class=""fas fa-caret-right""></i></a></li>
  </ul>
-->
  <ul class=""nav nav-pills nav-fill row mb-1 m-0 p-0 justify-content-center text-center"" style=""font-size:20px;"">
    <li class=""col-sm-4 mx-4""><a class=""nav-link active text-white border-none p-0"" style=""background-color:#7154FB"" data-toggle=""tab"" href=""#left1""><i class=""fas fa-caret-left""></i></a></li>
    <li class=""col-sm-4 mx-4""><a class=""nav-link text-white p-0"" style=""background-color:#7154FB"" data-toggle=""tab"" href=""#left2""><i class=""fas fa-caret-right""></i></a></li>
  </ul>

</div>
</div>

<!-------------------

      MAIN PANEL

--------------------->

<div class=""card col-lg mb-2 rounded-0 p-0"" style=""max-width:800px;min-width:800px"">

<div class=""card-header border-0 py-0"" style=""width:800px;height:52px"">
  
  <!-- BOOTSTRAP
  <ul class=""nav nav-tabs card-header-tabs nav-fill mx-4 pt-2 p-0 border-dark"">
    <li class=""nav-item""><a class=""nav-link active border-none"" data-toggle=""tab"" href=""#tab1""><i class=""fas fa-user fa-2x""></i></a></li>
    <li class=""nav-item""><a class=""nav-link"" data-toggle=""tab"" href=""#tab2""><i class=""fas fa-pen fa-2x""></i></a></li>
    <li class=""nav-item""><a class=""nav-link"" data-toggle=""tab"" href=""#tab3""><i class=""fas fa-image fa-2x""></i></a></li>
    <li class=""nav-item""><a class=""nav-link"" data-toggle=""tab"" href=""#tab4""><i class=""fas fa-book-user fa-2x""></i></a></li>
    <li class=""nav-item""><a class=""nav-link"" data-toggle=""tab"" href=""#tab5""><i class=""fas fa-user-friends fa-2x""></i></a></li>
    <li class=""nav-item""><a class=""nav-link"" data-toggle=""tab"" href=""#tab6""><i class=""fas fa-user-edit fa-2x""></i></a></li>
  </ul>
  -->
  <ul class=""nav nav-tabs card-header-tabs nav-fill mx-4 pt-2 p-0 border-dark"">
    <li class=""nav-item""><a class=""nav-link active border-none"" data-toggle=""tab"" href=""#tab1"" style=""color:#7154FB""><i class=""fas fa-user fa-2x""></i></a></li>
    <li class=""nav-item""><a class=""nav-link"" data-toggle=""tab"" href=""#tab2"" style=""color:#7154FB""><i class=""fas fa-pen fa-2x""></i></a></li>
    <li class=""nav-item""><a class=""nav-link"" data-toggle=""tab"" href=""#tab3"" style=""color:#7154FB""><i class=""fas fa-image fa-2x""></i></a></li>
    <li class=""nav-item""><a class=""nav-link"" data-toggle=""tab"" href=""#tab4"" style=""color:#7154FB""><i class=""fas fa-book-user fa-2x""></i></a></li>
    <li class=""nav-item""><a class=""nav-link"" data-toggle=""tab"" href=""#tab5"" style=""color:#7154FB""><i class=""fas fa-user-friends fa-2x""></i></a></li>
    <li class=""nav-item""><a class=""nav-link"" data-toggle=""tab"" href=""#tab6"" style=""color:#7154FB""><i class=""fas fa-user-edit fa-2x""></i></a></li>
  </ul>

</div>

<div class=""tab-content p-0"" style=""height:545px"">

<!-------------------

      TAB 1 ‚Äî ABOUT

--------------------->

<div class=""tab-pane active show card-block p-0 table-responsive fade"" style=""height:545px"" id=""tab1"">
  <div class=""text-center font-italic mt-1 p-3"" style=""font-size:20px; font-weight:200;"">
    <span class=""pull-left ml-2 px-2"" style=""font-size:22px""><i class=""fas fa-quote-left""></i></span>
    <span style=""font-size:25px"">O</span>h, what the hell can I do? To fill the pages? Meet the strangers?
    <span class=""pull-right mr-2 px-2"" style=""font-size:22px""><i class=""fas fa-quote-right""></i></span>
  </div>
  <hr class=""mx-4 mt-0 mb-2"">
  <div class=""container p-4"">
    <p style=""line-height: 1.5;"">Write a short summary here. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse eleifend leo quis purus molestie consequat. Sed euismod orci eu augue ullamcorper dapibus. Nulla posuere ac orci at interdum. Etiam quam magna, sodales ac magna sit amet, lobortis sollicitudin nunc. Aenean sed consequat velit, vel tempus lorem. Donec diam nulla, accumsan eget ex ut, gravida pharetra nunc. Sed vel varius magna, nec ornare ante. Praesent quis cursus ex, in finibus nunc. Pellentesque sed nibh dapibus, aliquam sem vitae, porta diam. Nullam non interdum urna.</p>
    
    <p style=""line-height: 1.5;"">Cras nec massa nulla. Nunc orci mi, posuere at porttitor eu, interdum sit amet risus. Praesent porta rhoncus sagittis. Curabitur id vehicula arcu. Vivamus pulvinar sed enim vel scelerisque. Ut tellus odio, tincidunt nec feugiat in, lobortis eget odio. Cras vitae orci eu tellus imperdiet sagittis et non odio. Etiam imperdiet molestie sapien a laoreet. Curabitur tempus dignissim justo, sed accumsan lacus sodales sed.</p>
    
    <div style=""font-size:18px; font-weight:200;"">
      Etymology
    </div>
    <hr class=""mt-1 mb-3"">
    
    <p style=""line-height: 1.5;"">Nullam dolor quam, feugiat efficitur massa ac, ultrices fringilla metus. Nunc placerat, justo vel dapibus convallis, velit felis scelerisque ante, non ultrices velit odio quis velit. Phasellus ultricies diam sed nisi tristique, quis suscipit metus faucibus.</p>
  </div>
</div>

<!-------------------

      TAB 2 ‚Äî PERSONALITY

--------------------->

<div class=""tab-pane show card-block p-0 table-responsive fade"" style=""height:545px"" id=""tab2"">
  <div class=""container p-4"">
    
    <div style=""font-size:22px; font-weight:200;"">
      Typing Quirk
    </div>
    <hr class=""mt-1 mb-3"">
    <p class=""mb-1"" style=""line-height: 1.5;"">Nullam dolor quam, feugiat efficitur massa ac, ultrices fringilla metus. Nunc placerat, justo vel dapibus convallis, velit felis scelerisque ante, non ultrices velit odio quis velit. Phasellus ultricies diam sed nisi tristique, quis suscipit metus faucibus.</p>
    <div class=""text-center font-italic mt-0 p-3 mb-0"" style=""font-size:16px; font-weight:200;"">
      <span class=""pull-left ml-2 px-2"" style=""font-size:18px""><i class=""fas fa-quote-left""></i></span>
      <span style=""color:#7154FB"">
        The quick brown fox jumps over the lazy dog.
      </span>
      <span class=""pull-right mr-2 px-2"" style=""font-size:18px""><i class=""fas fa-quote-right""></i></span>
    </div>
    
    <div class=""row p-0 m-0"">
      <div class=""col-md-6 p-0"">
        <div style=""font-size:18px; font-weight:200;"">
          Likes
        </div>
        <hr class=""mt-1 mr-3 mb-3"">
        <ul class=""fa-ul mr-3"">
          <li class=""mb-2""><span class=""fa-li""><i class=""fas fa-check""></i></span>Yes</li>
          <li class=""mb-2""><span class=""fa-li""><i class=""fas fa-check""></i></span>Yes</li>
          <li class=""mb-2""><span class=""fa-li""><i class=""fas fa-check""></i></span>Yes</li>
          <li class=""mb-2""><span class=""fa-li""><i class=""fas fa-check""></i></span>Yes</li>
        </ul>
      </div>
      <div class=""col-md-6 p-0"">
        <div class=""ml-3"" style=""font-size:18px; font-weight:200;"">
          Dislikes
        </div>
        <hr class=""mt-1 ml-3 mb-3"">
        <ul class=""fa-ul ml-5"">
          <li class=""mb-2""><span class=""fa-li""><i class=""fas fa-times""></i></span>No</li>
          <li class=""mb-2""><span class=""fa-li""><i class=""fas fa-times""></i></span>No</li>
          <li class=""mb-2""><span class=""fa-li""><i class=""fas fa-times""></i></span>No</li>
          <li class=""mb-2""><span class=""fa-li""><i class=""fas fa-times""></i></span>No</li>
        </ul>
      </div>
    </div>
    
    <div style=""font-size:22px; font-weight:200;"">
      Personality
    </div>
    <hr class=""mt-1 mb-1"">
    
    <div class=""row p-0 m-0 text-center mb-2"" style=""font-weight:200"">
      <div class=""col-md-6 p-0 mt-1 text-success"">
        <i class=""fas fa-plus mr-2""></i> good, good, good
      </div>
      <div class=""col-md-6 p-0 mt-1 text-warning"">
        <i class=""fas fa-minus mr-2""></i> bad, bad, bad
      </div>
    </div>
    <p style=""line-height: 1.5;"">Praesent feugiat ullamcorper orci et rutrum. Donec a elit justo. Aenean tempor consectetur consectetur. Integer auctor non sapien eget euismod. Suspendisse potenti. In dapibus finibus lorem nec pretium. Mauris non dignissim urna, nec tincidunt mi. Donec posuere semper quam, et mattis dui egestas ac. Sed sit amet augue nec urna placerat ornare. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</p>
    
  </div>
</div>

<!-------------------

      TAB 3 ‚Äî REFERENCE

--------------------->

<div class=""tab-pane show card-block p-0 fade"" style=""height:545px"" id=""tab3"">
<div class=""row p-0 m-0"" style=""height:545px; width:800px"">
  <div class=""col-md-7 p-0 m-4"" style=""min-width:415px; max-width:415px; max-height:495px"">
    <div class=""mx-1"" style=""font-size:22px; font-weight:200;"">
      Appearance/Design
    </div>
    <hr class=""mx-1 mt-1 mb-3"">
    <div class=""py-0 px-2"" style=""max-height:450px; overflow-y:auto; overflow-x:hidden;"">
      <ul style=""list-style-type: circle"">
        <li class=""mb-2"">Put notes about this design here.</li>
        <li class=""mb-2"">Copy this line and paste below to add more.</li>
        <li class=""mb-2"">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</li>
        
        <p style=""line-height: 1.5;"">If lists aren't your style, you can also just write it out, too. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec faucibus in ligula finibus tristique. Aenean maximus, mauris et luctus tincidunt, nulla urna aliquet dolor, eu consequat arcu purus vel est. Ut egestas, nibh sed consequat ornare, nunc leo finibus nisi, eu laoreet nisl nibh at dolor. Ut porttitor, libero vitae tincidunt vulputate.</p>
        
        <p style=""line-height: 1.5;"">Etiam egestas, lectus ac suscipit finibus, ante eros scelerisque orci, vel convallis lectus augue at ex. Sed lobortis gravida lorem, ut hendrerit nisl. Cras pretium fermentum cursus. Praesent pharetra quis nisi eget consectetur. Ut posuere nunc vestibulum laoreet fermentum. Fusce sed neque nec neque faucibus tempus. Proin nec justo eu tellus molestie accumsan.</p>
      </ul>
    </div>
  </div>
  <div class=""col-lg-5 p-0 my-4 m-0""  style=""max-width:310px; min-width:310px; max-height:500px; min-height:500px; background:url(https://images.unsplash.com/photo-1582769923195-c6e60dc1d8dc); background-size:cover; background-repeat: no-repeat""> </div>
</div>
</div>

<!-------------------

      TAB 4 ‚Äî BIO

--------------------->

<div class=""tab-pane show card-block p-0 table-responsive fade"" style=""height:545px"" id=""tab4"">
<div class=""container p-4"">
  <div class=""mx-1"" style=""font-size:22px; font-weight:200;"">
    Biography
  </div>
  <hr class=""mx-1 mt-1 mb-3"">
  <div class=""px-1 mb-2"">
    <p style=""line-height: 1.5;"">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse eleifend leo quis purus molestie consequat. Sed euismod orci eu augue ullamcorper dapibus. Nulla posuere ac orci at interdum. Etiam quam magna, sodales ac magna sit amet, lobortis sollicitudin nunc. Aenean sed consequat velit, vel tempus lorem. Donec diam nulla, accumsan eget ex ut, gravida pharetra nunc. Sed vel varius magna, nec ornare ante. Praesent quis cursus ex, in finibus nunc. Pellentesque sed nibh dapibus, aliquam sem vitae, porta diam. Nullam non interdum urna.</p>
    
    <p style=""line-height: 1.5;"">Cras nec massa nulla. Nunc orci mi, posuere at porttitor eu, interdum sit amet risus. Praesent porta rhoncus sagittis. Curabitur id vehicula arcu. Vivamus pulvinar sed enim vel scelerisque. Ut tellus odio, tincidunt nec feugiat in, lobortis eget odio. Cras vitae orci eu tellus imperdiet sagittis et non odio. Etiam imperdiet molestie sapien a laoreet. Curabitur tempus dignissim justo, sed accumsan lacus sodales sed.</p>
    
    <div style=""font-size:18px; font-weight:200;"">
      Subheader
    </div>
    <hr class=""mt-1 mb-3"">
    
    <p style=""line-height: 1.5;"">Nullam dolor quam, feugiat efficitur massa ac, ultrices fringilla metus. Nunc placerat, justo vel dapibus convallis, velit felis scelerisque ante, non ultrices velit odio quis velit. Phasellus ultricies diam sed nisi tristique, quis suscipit metus faucibus.</p>
    
    <p style=""line-height: 1.5;"">Phasellus dignissim lobortis tellus sed vulputate. Quisque dapibus in purus dignissim tristique. Curabitur gravida vestibulum tortor eget ornare. Morbi id dictum erat. Quisque vel turpis quis nulla aliquam facilisis. Proin tristique lacus a turpis maximus, ac rutrum tortor placerat. Donec a ligula a nisl lobortis rhoncus at quis lacus. Integer malesuada fringilla tempor. Nunc convallis viverra rhoncus. Quisque sollicitudin est interdum tempus consectetur. Nulla sit amet mattis turpis. Nam semper ex eu accumsan volutpat. Nam condimentum sit amet ante vel dapibus.</p>
    
    <div style=""font-size:18px; font-weight:200;"">
      Subheader
    </div>
    <hr class=""mt-1 mb-3"">
    
    <p style=""line-height: 1.5;"">Nullam dolor quam, feugiat efficitur massa ac, ultrices fringilla metus. Nunc placerat, justo vel dapibus convallis, velit felis scelerisque ante, non ultrices velit odio quis velit. Phasellus ultricies diam sed nisi tristique, quis suscipit metus faucibus.</p>
    
    <p style=""line-height: 1.5;"">Phasellus dignissim lobortis tellus sed vulputate. Quisque dapibus in purus dignissim tristique. Curabitur gravida vestibulum tortor eget ornare. Morbi id dictum erat. Quisque vel turpis quis nulla aliquam facilisis. Proin tristique lacus a turpis maximus, ac rutrum tortor placerat. Donec a ligula a nisl lobortis rhoncus at quis lacus. Integer malesuada fringilla tempor. Nunc convallis viverra rhoncus. Quisque sollicitudin est interdum tempus consectetur. Nulla sit amet mattis turpis. Nam semper ex eu accumsan volutpat. Nam condimentum sit amet ante vel dapibus.</p>
  </div>
</div>
</div>

<!-------------------

      TAB 5 ‚Äî RELATIONSHIPS

--------------------->

<div class=""tab-pane show card-block p-0 table-responsive fade"" style=""height:545px"" id=""tab5"">
<div class=""container"">
  <div class=""row my-2 mx-0 p-1"">
    <div class=""col-sm-3 text-center h-100 p-2"">
      <img src=""https://i.imgur.com/XNO9z5Q.png"">
    </div>
    
    <div class=""col-lg-9 p-2"">
      <div class=""text-left align-bottom"" style=""font-size:22px""><a href=""CHARACTER LINK"" style=""color:#7154FB; font-weight:300"">Name</a></div>
      <div class=""text-muted mb-1 align-bottom"" style=""font-size:15px; font-weight:200"">Relationship
        <span class=""pull-right"" style=""font-size:17px"">
        <i class=""fas fa-heart""></i>
        <i class=""fas fa-heart""></i>
        <i class=""fas fa-heart""></i>
        <i class=""far fa-heart""></i>
        <i class=""far fa-heart""></i></span>
      </div>
      <hr class=""mt-1 mb-3"">
      
      <p class=""text-justify"">These auto-adjust, but it's best to keep them short. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc elementum, libero at facilisis aliquam, ante risus rhoncus magna, quis mattis lacus tellus in ex. Nulla facilisi. Etiam nunc ipsum, rhoncus in porta vel, fringilla vel nisi. Curabitur in justo viverra, volutpat metus vel, sollicitudin mi.</p>
    </div>
  </div>
  
  <div class=""row my-2 mx-0 p-1"">
    <div class=""col-lg-9 p-2"">
      <div class=""text-left align-bottom"" style=""font-size:22px""><a href=""CHARACTER LINK"" style=""color:#7154FB; font-weight:300"">Name</a></div>
      <div class=""text-muted mb-1 align-bottom"" style=""font-size:15px; font-weight:200"">Relationship
        <span class=""pull-right"" style=""font-size:17px"">
        <i class=""fas fa-spade""></i>
        <i class=""fas fa-spade""></i>
        <i class=""fas fa-spade""></i>
        <i class=""far fa-spade""></i>
        <i class=""far fa-spade""></i></span>
      </div>
      <hr class=""mt-1 mb-3"">
      
      <p class=""text-justify"">These auto-adjust, but it's best to keep them short. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc elementum, libero at facilisis aliquam, ante risus rhoncus magna, quis mattis lacus tellus in ex. Nulla facilisi. Etiam nunc ipsum, rhoncus in porta vel, fringilla vel nisi. Curabitur in justo viverra, volutpat metus vel, sollicitudin mi. Nullam a maximus nisi.</p>
      
      <p class=""text-justify"">Nulla ante libero, gravida non leo at, tincidunt sagittis lectus. Nam id elit at ante lobortis porta. Integer aliquam odio turpis, nec sodales ex aliquam et. Etiam viverra orci vestibulum urna congue blandit in sed neque.</p>
    </div>
    
    <div class=""col-sm-3 text-center h-100 p-2"">
      <img src=""https://i.imgur.com/XNO9z5Q.png"">
    </div>
  </div>
  
  <div class=""row my-2 mx-0 p-1"">
    <div class=""col-sm-3 text-center h-100 p-2"">
      <img src=""https://i.imgur.com/XNO9z5Q.png"">
    </div>
    
    <div class=""col-lg-9 p-2"">
      <div class=""text-left align-bottom"" style=""font-size:22px""><a href=""CHARACTER LINK"" style=""color:#7154FB; font-weight:300"">Name</a></div>
      <div class=""text-muted mb-1 align-bottom"" style=""font-size:15px; font-weight:200"">Relationship
        <span class=""pull-right"" style=""font-size:17px"">
        <i class=""fas fa-heart-broken""></i>
        <i class=""fas fa-heart-broken""></i>
        <i class=""fas fa-heart-broken""></i>
        <i class=""far fa-heart-broken""></i>
        <i class=""far fa-heart-broken""></i></span>
      </div>
      <hr class=""mt-1 mb-3"">
      
      <p class=""text-justify"">These auto-adjust, but it's best to keep them short. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc elementum, libero at facilisis aliquam, ante risus rhoncus magna, quis mattis lacus tellus in ex. Nulla facilisi. Etiam nunc ipsum, rhoncus in porta vel, fringilla vel nisi.</p>
    </div>
  </div>
</div>
</div>

<!-------------------

      TAB 6 ‚Äî TRIVIA

--------------------->

<div class=""tab-pane show card-block p-0 table-responsive fade"" style=""height:545px"" id=""tab6"">
  <div class=""row p-0 m-0"" style=""height:545px;"">
  <div class=""col-md-7 p-0 mr-0 ml-4 my-4"" style=""min-width:415px; max-width:415px; max-height:495px"">
    <div class=""mx-1"" style=""font-size:22px; font-weight:200;"">
      Trivia
    </div>
    <hr class=""mt-1 mx-1 mb-2"">
    <div class=""my-2 mx-3 justify-content-between"">
      <div style=""font-weight:500;"">
        Obtained
      </div>
      <span class=""pull-right"" style=""font-weight:200"">
        content
      </span>
    </div>
    <hr class=""mx-1 my-1"">
    <div class=""my-2 mx-3 justify-content-between"">
      <div style=""font-weight:500;"">
        Worth
      </div>
      <span class=""pull-right"" style=""font-weight:200"">
        content
      </span>
    </div>
    <hr class=""mx-1 my-1"">
    <div class=""my-2 mx-3 justify-content-between"">
      <div style=""font-weight:500;"">
        UFS/T/O
      </div>
      <span class=""pull-right"" style=""font-weight:200"">
        content
      </span>
    </div>
    
    <hr class=""mx-1 my-1 mb-3"">
    
    <div class=""py-0 px-2"" style=""max-height:450px; overflow-y:auto; overflow-x:hidden;"">
      <ul style=""list-style-type: circle"">
        <li class=""mb-1"">I love what I can‚Äôt see</li>
        <li class=""mb-1"">What‚Äôs expected of you?</li>
          <ul style=""list-style-type: circle"">
            <li class=""mb-1"">What's expected of <i>me?</i></li>
          </ul>
        <li class=""mb-1"">Now it‚Äôs quarter to three</li>
        <li class=""mb-1"">Let it all get away</li>
      </ul>
    </div>
  </div>
  
  <div class=""col-lg-5 p-0 ml-0 mr-4 my-4""  style=""max-width:330px; min-width:330px; max-height:500px; min-height:500px;"">
    <div class=""mx-1 ml-3"" style=""font-size:22px; font-weight:200;"">
      Music
    </div>
    <hr class=""mt-1 ml-3 mr-1 mb-0"">
    
    <div class=""card card-block border-0 mt-0 p-3"">
      <iframe width=""310"" height=""175"" src=""https://www.youtube.com/embed/OdnTQqB4q4w"" frameborder=""0"" class="" m-auto""></iframe>
    </div>
    
    <hr class=""mt-1 ml-3 mr-1 mb-3"">
    
    <div class=""ml-3 mr-1 px-0"">
      <div class=""col-lg-12 mb-1 px-0"" style=""font-weight:200"">
        <span>Introvert</span>
        <span class=""pull-right"">Extrovert</span>
      </div>
    <div class=""progress mb-2 rounded-0""><div class=""progress-bar"" role=""progressbar"" aria-valuemin =""0"" aria-valuemax=""100"" style=""background-color:#7154FB;width:50%;height:14px""></div></div>
      <div class=""col-lg-12 mb-1 px-0"" style=""font-weight:200"">
        <span>Observant</span>
        <span class=""pull-right"">Intuitive</span>
      </div>
    <div class=""progress mb-2 rounded-0""><div class=""progress-bar"" role=""progressbar"" aria-valuemin =""0"" aria-valuemax=""100"" style=""background-color:#7154FB;width:50%;height:14px""></div></div>
      <div class=""col-lg-12 mb-1 px-0"" style=""font-weight:200"">
        <span>Thinking</span>
        <span class=""pull-right"">Feeling</span>
      </div>
    <div class=""progress mb-2 rounded-0""><div class=""progress-bar"" role=""progressbar"" aria-valuemin =""0"" aria-valuemax=""100"" style=""background-color:#7154FB;width:50%;height:14px""></div></div>
      <div class=""col-lg-12 mb-1 px-0"" style=""font-weight:200"">
        <span>Judging</span>
        <span class=""pull-right"">Prospecting</span>
      </div>
    <div class=""progress rounded-0""><div class=""progress-bar"" role=""progressbar"" aria-valuemin =""0"" aria-valuemax=""100"" style=""background-color:#7154FB;width:50%;height:14px""></div></div>
    </div>
  </div>
</div>

<!---- END TABS ---->

</div>
</div>
</div>



<!------------------- my credit, please don't remove! --------------------->

<div class=""mx-auto text-center text-primary"" style=""font-size:12px"">
<a target=""_blank"" href=""https://toyhou.se/meromercury"" class=""tooltipster"" title=""made by cass"" style=""color:#A4A4A4;font-weight:600""><i class=""fal fa-code""></i></a></div>
</div>
</div>
</div>"
JdqBJWWp,layers.py,nhoxhaizxc123456,Python,Tuesday 16th of April 2024 10:09:48 PM CDT,"#layers.py

''' Layers
    This file contains various layers for the BigGAN models.
'''
import torch
import torch.nn as nn
import torch.nn.functional as F
from torch.nn import Parameter as P


# Projection of x onto y
def proj(x, y):
    return torch.mm(y, x.t()) * y / torch.mm(y, y.t())


# Orthogonalize x wrt list of vectors ys
def gram_schmidt(x, ys):
    for y in ys:
        x = x - proj(x, y)
    return x


# Apply num_itrs steps of the power method to estimate top N singular values.
def power_iteration(W, u_, update=True, eps=1e-12):
    # Lists holding singular vectors and values
    us, vs, svs = [], [], []
    for i, u in enumerate(u_):
        # Run one step of the power iteration
        with torch.no_grad():
            v = torch.matmul(u, W)
            # Run Gram-Schmidt to subtract components of all other singular vectors
            v = F.normalize(gram_schmidt(v, vs), eps=eps)
            # Add to the list
            vs += [v]
            # Update the other singular vector
            u = torch.matmul(v, W.t())
            # Run Gram-Schmidt to subtract components of all other singular vectors
            u = F.normalize(gram_schmidt(u, us), eps=eps)
            # Add to the list
            us += [u]
            if update:
                u_[i][:] = u
        # Compute this singular value and add it to the list
        svs += [torch.squeeze(torch.matmul(torch.matmul(v, W.t()), u.t()))]
        # svs += [torch.sum(F.linear(u, W.transpose(0, 1)) * v)]
    return svs, us, vs


# Convenience passthrough function
class identity(nn.Module):

    def forward(self, input):
        return input


# Spectral normalization base class
class SN(object):

    def __init__(self, num_svs, num_itrs, num_outputs, transpose=False, eps=1e-12):
        # Number of power iterations per step
        self.num_itrs = num_itrs
        # Number of singular values
        self.num_svs = num_svs
        # Transposed?
        self.transpose = transpose
        # Epsilon value for avoiding divide-by-0
        self.eps = eps
        # Register a singular vector for each sv
        for i in range(self.num_svs):
            self.register_buffer('u%d' % i, torch.randn(1, num_outputs))
            self.register_buffer('sv%d' % i, torch.ones(1))

    # Singular vectors (u side)
    @property
    def u(self):
        return [getattr(self, 'u%d' % i) for i in range(self.num_svs)]

    # Singular values;
    # note that these buffers are just for logging and are not used in training.
    @property
    def sv(self):
        return [getattr(self, 'sv%d' % i) for i in range(self.num_svs)]

    # Compute the spectrally-normalized weight
    def W_(self):
        W_mat = self.weight.view(self.weight.size(0), -1)
        if self.transpose:
            W_mat = W_mat.t()
        # Apply num_itrs power iterations
        for _ in range(self.num_itrs):
            svs, us, vs = power_iteration(W_mat, self.u, update=self.training, eps=self.eps)
        # Update the svs
        if self.training:
            with torch.no_grad(
            ):  # Make sure to do this in a no_grad() context or you'll get memory leaks!
                for i, sv in enumerate(svs):
                    self.sv[i][:] = sv
        return self.weight / svs[0]


# 2D Conv layer with spectral norm
class SNConv2d(nn.Conv2d, SN):

    def __init__(self,
                 in_channels,
                 out_channels,
                 kernel_size,
                 stride=1,
                 padding=0,
                 dilation=1,
                 groups=1,
                 bias=True,
                 num_svs=1,
                 num_itrs=1,
                 eps=1e-12):
        nn.Conv2d.__init__(self, in_channels, out_channels, kernel_size, stride, padding, dilation,
                           groups, bias)
        SN.__init__(self, num_svs, num_itrs, out_channels, eps=eps)

    def forward(self, x):
        return F.conv2d(x, self.W_(), self.bias, self.stride, self.padding, self.dilation,
                        self.groups)


# Linear layer with spectral norm
class SNLinear(nn.Linear, SN):

    def __init__(self, in_features, out_features, bias=True, num_svs=1, num_itrs=1, eps=1e-12):
        nn.Linear.__init__(self, in_features, out_features, bias)
        SN.__init__(self, num_svs, num_itrs, out_features, eps=eps)

    def forward(self, x):
        return F.linear(x, self.W_(), self.bias)


# Embedding layer with spectral norm
# We use num_embeddings as the dim instead of embedding_dim here
# for convenience sake
class SNEmbedding(nn.Embedding, SN):

    def __init__(self,
                 num_embeddings,
                 embedding_dim,
                 padding_idx=None,
                 max_norm=None,
                 norm_type=2,
                 scale_grad_by_freq=False,
                 sparse=False,
                 _weight=None,
                 num_svs=1,
                 num_itrs=1,
                 eps=1e-12):
        nn.Embedding.__init__(self, num_embeddings, embedding_dim, padding_idx, max_norm, norm_type,
                              scale_grad_by_freq, sparse, _weight)
        SN.__init__(self, num_svs, num_itrs, num_embeddings, eps=eps)

    def forward(self, x):
        return F.embedding(x, self.W_())


# A non-local block as used in SA-GAN
# Note that the implementation as described in the paper is largely incorrect;
# refer to the released code for the actual implementation.
class Attention(nn.Module):

    def __init__(self, ch, which_conv=SNConv2d, name='attention'):
        super(Attention, self).__init__()
        # Channel multiplier
        self.ch = ch
        self.which_conv = which_conv
        self.theta = self.which_conv(self.ch, self.ch // 8, kernel_size=1, padding=0, bias=False)
        self.phi = self.which_conv(self.ch, self.ch // 8, kernel_size=1, padding=0, bias=False)
        self.g = self.which_conv(self.ch, self.ch // 2, kernel_size=1, padding=0, bias=False)
        self.o = self.which_conv(self.ch // 2, self.ch, kernel_size=1, padding=0, bias=False)
        # Learnable gain parameter
        self.gamma = P(torch.tensor(0.), requires_grad=True)

    def forward(self, x, y=None, use_in=False):
        # Apply convs
        theta = self.theta(x)
        phi = F.max_pool2d(self.phi(x), [2, 2])
        g = F.max_pool2d(self.g(x), [2, 2])
        # Perform reshapes
        theta = theta.view(-1, self.ch // 8, x.shape[2] * x.shape[3])
        phi = phi.view(-1, self.ch // 8, x.shape[2] * x.shape[3] // 4)
        g = g.view(-1, self.ch // 2, x.shape[2] * x.shape[3] // 4)
        # Matmul and softmax to get attention maps
        beta = F.softmax(torch.bmm(theta.transpose(1, 2), phi), -1)
        # Attention map times g path
        o = self.o(
            torch.bmm(g, beta.transpose(1, 2)).view(-1, self.ch // 2, x.shape[2], x.shape[3]))
        output = self.gamma * o + x
        return output


# Fused batchnorm op
def fused_bn(x, mean, var, gain=None, bias=None, eps=1e-5):
    # Apply scale and shift--if gain and bias are provided, fuse them here
    # Prepare scale
    scale = torch.rsqrt(var + eps)
    # If a gain is provided, use it
    if gain is not None:
        scale = scale * gain
    # Prepare shift
    shift = mean * scale
    # If bias is provided, use it
    if bias is not None:
        shift = shift - bias
    return x * scale - shift
    # return ((x - mean) / ((var + eps) ** 0.5)) * gain + bias # The unfused way.


# Manual BN
# Calculate means and variances using mean-of-squares minus mean-squared
def manual_bn(x, gain=None, bias=None, return_mean_var=False, eps=1e-5):
    # Cast x to float32 if necessary
    float_x = x.float()
    # Calculate expected value of x (m) and expected value of x**2 (m2)
    # Mean of x
    m = torch.mean(float_x, [0, 2, 3], keepdim=True)
    # Mean of x squared
    m2 = torch.mean(float_x**2, [0, 2, 3], keepdim=True)
    # Calculate variance as mean of squared minus mean squared.
    var = (m2 - m**2)
    # Cast back to float 16 if necessary
    var = var.type(x.type())
    m = m.type(x.type())
    # Return mean and variance for updating stored mean/var if requested
    if return_mean_var:
        return fused_bn(x, m, var, gain, bias, eps), m.squeeze(), var.squeeze()
    else:
        return fused_bn(x, m, var, gain, bias, eps)


# My batchnorm, supports standing stats
class myBN(nn.Module):

    def __init__(self, num_channels, eps=1e-5, momentum=0.1):
        super(myBN, self).__init__()
        # momentum for updating running stats
        self.momentum = momentum
        # epsilon to avoid dividing by 0
        self.eps = eps
        # Momentum
        self.momentum = momentum
        # Register buffers
        self.register_buffer('stored_mean', torch.zeros(num_channels))
        self.register_buffer('stored_var', torch.ones(num_channels))
        self.register_buffer('accumulation_counter', torch.zeros(1))
        # Accumulate running means and vars
        self.accumulate_standing = False

    # reset standing stats
    def reset_stats(self):
        self.stored_mean[:] = 0
        self.stored_var[:] = 0
        self.accumulation_counter[:] = 0

    def forward(self, x, gain, bias):
        if self.training:
            out, mean, var = manual_bn(x, gain, bias, return_mean_var=True, eps=self.eps)
            # If accumulating standing stats, increment them
            if self.accumulate_standing:
                self.stored_mean[:] = self.stored_mean + mean.data
                self.stored_var[:] = self.stored_var + var.data
                self.accumulation_counter += 1.0
            # If not accumulating standing stats, take running averages
            else:
                self.stored_mean[:] = self.stored_mean * (1 - self.momentum) + mean * self.momentum
                self.stored_var[:] = self.stored_var * (1 - self.momentum) + var * self.momentum
            return out
        # If not in training mode, use the stored statistics
        else:
            mean = self.stored_mean.view(1, -1, 1, 1)
            var = self.stored_var.view(1, -1, 1, 1)
            # If using standing stats, divide them by the accumulation counter
            if self.accumulate_standing:
                mean = mean / self.accumulation_counter
                var = var / self.accumulation_counter
            return fused_bn(x, mean, var, gain, bias, self.eps)


# Class-conditional bn
# output size is the number of channels, input size is for the linear layers
# Andy's Note: this class feels messy but I'm not really sure how to clean it up
# Suggestions welcome! (By which I mean, refactor this and make a pull request
# if you want to make this more readable/usable).
class ccbn(nn.Module):

    def __init__(
        self,
        output_size,
        input_size,
        which_linear,
        eps=1e-5,
        momentum=0.1,
        cross_replica=False,
        mybn=False,
        norm_style='bn',
    ):
        super(ccbn, self).__init__()
        self.output_size, self.input_size = output_size, input_size
        # Prepare gain and bias layers
        self.gain = which_linear(input_size, output_size)
        self.bias = which_linear(input_size, output_size)
        # epsilon to avoid dividing by 0
        self.eps = eps
        # Momentum
        self.momentum = momentum
        # Use cross-replica batchnorm?
        self.cross_replica = cross_replica
        # Use my batchnorm?
        self.mybn = mybn
        # Norm style?
        self.norm_style = norm_style

        if self.cross_replica:
            raise NotImplementedError
        elif self.mybn:
            self.bn = myBN(output_size, self.eps, self.momentum)
        elif self.norm_style in ['bn', 'in']:
            self.register_buffer('stored_mean', torch.zeros(output_size))
            self.register_buffer('stored_var', torch.ones(output_size))

    def forward(self, x, y):
        # Calculate class-conditional gains and biases
        if y is not None:
            gain = (1 + self.gain(y)).view(y.size(0), -1, 1, 1)
            bias = self.bias(y).view(y.size(0), -1, 1, 1)
        # If using my batchnorm
        if self.mybn:
            return self.bn(x, gain=gain, bias=bias)
        elif self.cross_replica:
            return self.bn(x) * gain + bias
        # else:
        else:
            if self.norm_style == 'bn':
                out = F.batch_norm(x, self.stored_mean, self.stored_var, None, None, self.training,
                                   0.1, self.eps)
            elif self.norm_style == 'in':
                out = F.instance_norm(x, self.stored_mean, self.stored_var, None, None,
                                      self.training, 0.1, self.eps)
            elif self.norm_style == 'nonorm':
                out = x
            if y is not None:
                out = out * gain + bias
            return out

    def extra_repr(self):
        s = 'out: {output_size}, in: {input_size},'
        s += ' cross_replica={cross_replica}'
        return s.format(**self.__dict__)


# Normal, non-class-conditional BN
class bn(nn.Module):

    def __init__(self, output_size, eps=1e-5, momentum=0.1, cross_replica=False, mybn=False):
        super(bn, self).__init__()
        self.output_size = output_size
        # Prepare gain and bias layers
        self.gain = P(torch.ones(output_size), requires_grad=True)
        self.bias = P(torch.zeros(output_size), requires_grad=True)
        # epsilon to avoid dividing by 0
        self.eps = eps
        # Momentum
        self.momentum = momentum
        # Use cross-replica batchnorm?
        self.cross_replica = cross_replica
        # Use my batchnorm?
        self.mybn = mybn

        if self.cross_replica:
            raise NotImplementedError
        elif mybn:
            self.bn = myBN(output_size, self.eps, self.momentum)
        # Register buffers if neither of the above
        else:
            self.register_buffer('stored_mean', torch.zeros(output_size))
            self.register_buffer('stored_var', torch.ones(output_size))

    def forward(self, x, y=None):
        if self.cross_replica or self.mybn:
            gain = self.gain.view(1, -1, 1, 1)
            bias = self.bias.view(1, -1, 1, 1)
            if self.mybn:
                return self.bn(x, gain=gain, bias=bias)
            elif self.cross_replica:
                return self.bn(x) * gain + bias
        else:
            return F.batch_norm(x, self.stored_mean, self.stored_var, self.gain, self.bias,
                                self.training, self.momentum, self.eps)


# Generator blocks
# Note that this class assumes the kernel size and padding (and any other
# settings) have been selected in the main generator module and passed in
# through the which_conv arg. Similar rules apply with which_bn (the input
# size [which is actually the number of channels of the conditional info] must
# be preselected)
class GBlock(nn.Module):

    def __init__(self,
                 in_channels,
                 out_channels,
                 which_conv=nn.Conv2d,
                 which_bn=bn,
                 activation=None,
                 upsample=None):
        super(GBlock, self).__init__()

        self.in_channels, self.out_channels = in_channels, out_channels
        self.which_conv, self.which_bn = which_conv, which_bn
        self.activation = activation
        self.upsample = upsample
        # Conv layers
        self.conv1 = self.which_conv(self.in_channels, self.out_channels)
        self.conv2 = self.which_conv(self.out_channels, self.out_channels)
        self.learnable_sc = in_channels != out_channels or upsample
        if self.learnable_sc:
            self.conv_sc = self.which_conv(in_channels, out_channels, kernel_size=1, padding=0)
        # Batchnorm layers
        self.bn1 = self.which_bn(in_channels)
        self.bn2 = self.which_bn(out_channels)
        # upsample layers
        self.upsample = upsample

        # instance norm layers
        self.in_initialized = False
        self.in1 = nn.InstanceNorm2d(in_channels, affine=True)
        self.in2 = nn.InstanceNorm2d(out_channels, affine=True)
        self.in1.weight.requires_grad = False
        self.in1.bias.requires_grad = False
        self.in2.weight.requires_grad = False
        self.in2.bias.requires_grad = False

    def reset_in_init(self):
        self.in_initialized = False

    def init_in(self, which_bn, which_in, x, y):
        # carefully initialize IN's weights such that the output does not change
        with torch.no_grad():
            h = which_bn(x, y)
            mean = torch.mean(h, (2, 3)).squeeze(0)
            std = torch.std(h.view(h.size(0), h.size(1), -1), 2).squeeze(0)
            which_in.weight.copy_(std)
            which_in.bias.copy_(mean)

    def forward(self, x, y, use_in):
        if use_in:
            if not self.in_initialized:
                self.init_in(self.bn1, self.in1, x, y)
            h = self.in1(x)
        else:
            h = self.bn1(x, y)
            self.in_initialized = False

        h = self.activation(h)
        if self.upsample:
            h = self.upsample(h)
            x = self.upsample(x)
        h = self.conv1(h)

        if use_in:
            if not self.in_initialized:
                self.init_in(self.bn2, self.in2, h, y)
                self.in_initialized = True
            h = self.in2(h)
        else:
            h = self.bn2(h, y)

        h = self.activation(h)
        h = self.conv2(h)
        if self.learnable_sc:
            x = self.conv_sc(x)
        return h + x


# Residual block for the discriminator
class DBlock(nn.Module):

    def __init__(
        self,
        in_channels,
        out_channels,
        which_conv=SNConv2d,
        wide=True,
        preactivation=False,
        activation=None,
        downsample=None,
    ):
        super(DBlock, self).__init__()
        self.in_channels, self.out_channels = in_channels, out_channels
        # If using wide D (as in SA-GAN and BigGAN), change the channel pattern
        self.hidden_channels = self.out_channels if wide else self.in_channels
        self.which_conv = which_conv
        self.preactivation = preactivation
        self.activation = activation
        self.downsample = downsample

        # Conv layers
        self.conv1 = self.which_conv(self.in_channels, self.hidden_channels)
        self.conv2 = self.which_conv(self.hidden_channels, self.out_channels)
        self.learnable_sc = True if (in_channels != out_channels) or downsample else False
        if self.learnable_sc:
            self.conv_sc = self.which_conv(in_channels, out_channels, kernel_size=1, padding=0)

    def shortcut(self, x):
        if self.preactivation:
            if self.learnable_sc:
                x = self.conv_sc(x)
            if self.downsample:
                x = self.downsample(x)
        else:
            if self.downsample:
                x = self.downsample(x)
            if self.learnable_sc:
                x = self.conv_sc(x)
        return x

    def forward(self, x):
        if self.preactivation:
            # h = self.activation(x) # NOT TODAY SATAN
            # Andy's note: This line *must* be an out-of-place ReLU or it
            #              will negatively affect the shortcut connection.
            h = F.relu(x)
        else:
            h = x
        h = self.conv1(h)
        h = self.conv2(self.activation(h))
        if self.downsample:
            h = self.downsample(h)

        return h + self.shortcut(x)
"
srd2uTDw,common.py,nhoxhaizxc123456,Python,Tuesday 16th of April 2024 10:08:29 PM CDT,"#common.py
import torch
import torch.nn as nn
import torchvision.transforms as transforms
from .encoders import (EncoderF_Res, Netv2)
from .biggan import Generator

class VGG16Perceptual(nn.Module):
    '''
    Dimension for each layers
    layer 00 [64 , 224, 224]
    layer 01 [64 , 224, 224]
    layer 02 [64 , 224, 224]
    layer 03 [64 , 224, 224]
    layer 04 [64 , 112, 112]
    layer 05 [128, 112, 112]
    layer 06 [128, 112, 112]
    layer 07 [128, 112, 112]
    layer 08 [128, 112, 112]
    layer 09 [128, 56 , 56 ]
    layer 10 [256, 56 , 56 ]
    layer 11 [256, 56 , 56 ]
    layer 12 [256, 56 , 56 ]
    layer 13 [256, 56 , 56 ]
    layer 14 [256, 56 , 56 ]
    layer 15 [256, 56 , 56 ]
    layer 16 [256, 28 , 28 ]
    layer 17 [512, 28 , 28 ]
    layer 18 [512, 28 , 28 ]
    layer 19 [512, 28 , 28 ]
    layer 20 [512, 28 , 28 ]
    layer 21 [512, 28 , 28 ]
    layer 22 [512, 28 , 28 ]
    layer 23 [512, 14 , 14 ]
    layer 24 [512, 14 , 14 ]
    layer 25 [512, 14 , 14 ]
    layer 26 [512, 14 , 14 ]
    layer 27 [512, 14 , 14 ]
    layer 28 [512, 14 , 14 ]
    layer 29 [512, 14 , 14 ]
    layer 30 [512, 7  , 7  ]
    '''

    def __init__(self, path_vgg: str,
            id_targets = [1, 2, 13, 20],
            resize=True,
            normalized_input=True):
        super().__init__()

        import pickle 
        with open(path_vgg, 'rb') as f:
            self.model = pickle.load(f).eval()

        self.normalized_intput = normalized_input
        self.idx_targets = id_targets

        preprocess = []
        if resize:
            preprocess.append(transforms.Resize(256))
            preprocess.append(transforms.CenterCrop(224))
        if normalized_input:
            preprocess.append(transforms.Normalize(mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]))

        self.preprocess = transforms.Compose(preprocess)

    def get_mid_feats(self, x):
        x = self.preprocess(x)
        feats = []
        for i, layer in enumerate(self.model.features[:max(self.idx_targets) + 1]):
            x = layer(x)
            if i in self.idx_targets:
                feats.append(x)

        return feats


    def forward(self, x1, x2):
        size_batch = x1.shape[0]
        x1_feats = self.get_mid_feats(x1)
        x2_feats = self.get_mid_feats(x2)

        loss = 0
        for feat1, feat2 in zip(x1_feats, x2_feats):
            loss += feat1.sub(feat2).pow(2).mean()

        return loss / size_batch / len(self.idx_targets)


class Colorizer(nn.Module):
    def __init__(self, 
                 config, 
                 path_ckpt_g, 
                 norm_type,
                 activation='relu',
                 id_mid_layer=2, 
                 fix_g=False,
                 load_g=True,
                 init_e=None,
                 use_attention=False,
                 use_res=True,
                 dim_f=16):
        super().__init__()

        self.id_mid_layer = id_mid_layer  
        self.use_attention = use_attention
        self.use_res = use_res

        if not use_res:
            print('Warning: without residual path')

        elif dim_f == 16:
            self.E = EncoderF_Res(norm=norm_type,
                                  activation=activation,
                                  init=init_e,
                                  use_res=use_res,
                                  use_att=use_attention)
            class Args:
                def __init__(self) -> None:
                    pass
                g_depth = None
                g_norm = None
                g_in_channels = None
                g_out_channels = None
                g_downsampler = None
                crop_size = None
            args_et = Args()
            args_et.g_depth = 5
            args_et.g_norm = ""evo""
            args_et.g_in_channels = [4,3]
            args_et.g_out_channels = [69,3]
            args_et.g_downsampler = ""down_blurmax""
            args_et.crop_size = [256, 256]

            self.EncoderT = Netv2(args=args_et)


            self.id_mid_layer = 2  

        else:
            raise Exception('In valid dim_f')

        self.G = Generator(**config)
        if load_g:
            print('Use pretraind G')
            self.G.load_state_dict(torch.load(path_ckpt_g, map_location='cpu'),
                                   strict=False)
        self.fix_g = fix_g
        if fix_g:
            for p in self.G.parameters():
                p.requires_grad = False

        self.final_conv = nn.Sequential(
            nn.Conv2d(1024, 768, kernel_size=1, stride=1, padding=0, bias=True)
        )

    def forward(self, x_gray, c, z, ref, pos_ref):
        f = self.E(x_gray, self.G.shared(c))
        encoder_t_out, p_vec, p_emb = self.EncoderT(x_gray, ref)
        _, _, positive_ref_emb = self.EncoderT(x_gray, pos_ref)
        f = torch.cat([f, encoder_t_out[-1]], 1)
        f = self.final_conv(f)
        output = self.G.forward_from(z, self.G.shared(c), 
                self.id_mid_layer, f)

        return output, p_vec, p_emb, positive_ref_emb

    def forward_test(self, x_gray, c, z, ref):
        f = self.E(x_gray, self.G.shared(c))
        encoder_t_out, p_vec, p_emb = self.EncoderT(x_gray, ref)
        f = torch.cat([f, encoder_t_out[-1]], 1)
        f = self.final_conv(f)
        output = self.G.forward_from(z, self.G.shared(c), 
                self.id_mid_layer, f)

        return output, p_vec, p_emb

    def forward_with_c(self, x_gray, c_embd, z):
        f = self.E(x_gray, c_embd) 
        output = self.G.forward_from(z, c_embd,
                self.id_mid_layer, f)
        return output

    def forward_with_c2(self, x_gray, c_embds, z):
        f = self.E(x_gray, c_embds[0]) 
        output = self.G.forward_from(z, c_embds[1], 
                self.id_mid_layer, f)
        return output

    def forward_with_cp(self, x_gray, c_embds, z):
        c_embds_E = c_embds[:5]
        c_embds_G = c_embds[5:]
        f = self.E.forward_with_cp(x_gray, c_embds_E) 
        output = self.G.forward_from_with_cp(z, c_embds_G, 
                                             self.id_mid_layer, f)
        return output

    def train(self, mode=True):
        if self.fix_g:
            self.E.train(mode)
        else:
            super().train(mode)
"
knZ9M1wW,encoders.py,nhoxhaizxc123456,Python,Tuesday 16th of April 2024 10:07:40 PM CDT,"#encoders.py
import torch
import torch.nn as nn
import torch.nn.functional as F
import functools
from .layers import SNConv2d, Attention
from torch.nn import init
from networks.components import get_layer


class ClassConditionNorm(nn.Module):
    def __init__(self, 
            output_size, 
            input_size, 
            which_linear=functools.partial(nn.Linear, bias=False), 
            eps=1e-5, 
            norm_style='bn'):
        super().__init__()
        self.output_size, self.input_size = output_size, input_size
        # Prepare gain and bias layers
        self.gain = which_linear(input_size, output_size)
        self.bias = which_linear(input_size, output_size)
        # epsilon to avoid dividing by 0
        self.eps = eps
        self.norm_style = norm_style 

        self.register_buffer('stored_mean', torch.zeros(output_size))
        self.register_buffer('stored_var', torch.ones(output_size)) 

    def forward(self, x, y):
        # Calculate class-conditional gains and biases
        gain = (1 + self.gain(y)).view(y.size(0), -1, 1, 1)
        bias = self.bias(y).view(y.size(0), -1, 1, 1)

        if self.norm_style == 'bn':
            out = F.batch_norm(x, self.stored_mean, self.stored_var, None, None,
                              self.training, 0.1, self.eps)
        elif self.norm_style == 'in':
            out = F.instance_norm(x, self.stored_mean, self.stored_var, None, None,
                              self.training, 0.1, self.eps)

        return out * gain + bias

# For Encoder T
class Netv2(nn.Module):
    def __init__(self, args):
        super(Netv2, self).__init__()


        print('Init Net')
        self.depth = args.g_depth
        norms = [args.g_norm, args.g_norm]

        ## Declare params
        _tmp = [2**(k)*32 for k in range(self.depth-1)]
        _tmp += [_tmp[-1]]
        pdims = [args.g_in_channels[0]] + _tmp
        # sdims = [args.g_in_channels[1]] + _tmp
        pddims = [2048, 1024, args.g_out_channels[0]]
        # sddims = [k*2 for k in _tmp[::-1]]
        # sddims += [sddims[-1]]
        enc_kernels = [[5,5]] + [[3,3] for k in range(self.depth-1)]

        print(""P_Dims: {}\nPD_Dims: {}\nEnc_Kernels: {}"".format(pdims, pddims, enc_kernels))

        ## Encoder
		
		
		### Encoder T
        for i in range(self.depth):
            setattr(self, 'pconv_{}'.format(i+1), get_layer('basic')(pdims[i],pdims[i+1],kernels=enc_kernels[i], subsampling=args.g_downsampler if i > 0 else 'none', norms=norms))

        ## Linear Decoder
        img_size = args.crop_size[0]//2**(self.depth-1)
        self.linear_in = img_size*img_size*pdims[-1]

        self.pdfc1 = nn.Sequential(
            nn.Linear(self.linear_in, pddims[0]),
            nn.ReLU(),
            nn.Linear(pddims[0], pddims[1]),
            nn.ReLU()
        )

        self.pdfc2 = nn.Sequential(
            nn.Linear(pddims[1], pddims[2]),
            nn.Tanh()
        )

    def forward(self, X, R):
        sources = [None]
        pout = torch.cat([X, R], 1)
        # sout = X

        ## Encoder
        for i in range(self.depth):
            pout = getattr(self, 'pconv_{:d}'.format(i + 1))(pout)
            # sout = getattr(self, 'sconv_{:d}'.format(i + 1))(sout)
            # sources.append(torch.cat([pout, sout], 1))
            sources.append(pout)
        ## Linear Decoder
        p_emb = self.pdfc1(pout.view(-1, self.linear_in))

        p_vec = self.pdfc2(p_emb)

        ## Decoder
        # sdout = sources.pop()

        # for i in range(self.depth):
        #     # print(X.size())

        #     sdout = getattr(self, 'sdconv_{:d}'.format(i + 1))(sdout, _skip_feat=sources[-i-1] if i < self.depth-1 else None)

        # return self.final_conv(sdout), p_vec, p_emb
        return sources, p_vec, p_emb
    
    def estimate_preset(self, _input):
        pout = _input

        ## Encoder
        for i in range(self.depth):
            pout = getattr(self, 'pconv_{:d}'.format(i + 1))(pout)

        ## Linear Decoder
        p_emb = self.pdfc1(pout.view(-1, self.linear_in))
        p_vec = self.pdfc2(p_emb)
        return None, p_vec, p_emb

class ResConvBlock(nn.Module):
    def __init__(self, 
            ch_in, 
            ch_out, 
            ch_c=128, 
            is_down=False,
            dropout=0.2,
            activation='relu', 
            pool='avg', 
            norm='batch', 
            use_res=True, 
            **kwargs):
        super().__init__()

        self.is_down = is_down
        self.has_condition = False
        self.use_res = use_res

        # Convolution
        if self.use_res:
            self.conv = nn.Conv2d(ch_in, ch_out, 
                    kernel_size=1, 
                    stride=1, 
                    padding=0)

        self.conv_1 = nn.Conv2d(ch_in, ch_out, 
                kernel_size=3, 
                stride=1, 
                padding=1)
        self.conv_2 = nn.Conv2d(ch_out, ch_out, 
                kernel_size=3, 
                stride=1, 
                padding=1)

        # Normalization 
        if norm == 'batch':
            self.normalize_1 = nn.BatchNorm2d(ch_in)
            self.normalize_2 = nn.BatchNorm2d(ch_out)
        elif norm == 'id':
            self.normalize_1 = nn.Identity()
            self.normalize_2 = nn.Identity()
        elif norm == 'instance':
            self.normalize_1 = nn.InstanceNorm2d(ch_in)
            self.normalize_2 = nn.InstanceNorm2d(ch_out)
        elif norm == 'layer':
            self.normalize_1 = nn.LayerNorm(kwargs['l_norm_shape_1'])
            self.normalize_2 = nn.LayerNorm(kwargs['l_norm_shape_2'])
        elif norm == 'adain':
            self.has_condition = True 
            self.normalize_1 = ClassConditionNorm(ch_in, ch_c, norm_style='in')
            self.normalize_2 = ClassConditionNorm(ch_out, ch_c, norm_style='in')
        elif norm == 'adabatch':
            self.has_condition = True 
            self.normalize_1 = ClassConditionNorm(ch_in, ch_c, norm_style='bn')
            self.normalize_2 = ClassConditionNorm(ch_out, ch_c, norm_style='bn')
        else:
            raise Exception('Invalid Normalization')

        # Nonlinearity 
        self.activation = None
        if activation == 'relu':
            self.activation = lambda x: F.relu(x, True) 
        elif activation == 'sigmoid':
            self.activation = F.sigmoid
        elif activation == 'lrelu':
            slope = kwargs['l_slope']
            self.activation = lambda x: F.leaky_relu(x, slope, True) 
        else:
            raise Exception('Invalid Nonlinearity')

        # Pooling
        self.pool = None
        if pool == 'avg':
            self.pool = lambda x: F.avg_pool2d(x, kernel_size=2)
        elif pool == 'max':
            self.pool = lambda x: F.max_pool2d(x, kernel_size=2)
        elif pool == 'min':
            self.pool = lambda x: F.min_pool2d(x, kernel_size=2)
        else:
            raise Exception('Invalid Pooling')

        # Dropout
        if dropout is not None:
            self.dropout = nn.Dropout(dropout)
        else:
            self.dropout=None

    def forward(self, x, c=None):

        # Residual Path
        x_ = x

        if self.has_condition:
            x_ = self.normalize_1(x_, c)
        else:
            x_ = self.normalize_1(x_)
        x_ = self.activation(x_)

        if self.is_down:
            x_ = self.pool(x_)

        x_ = self.conv_1(x_)

        if self.has_condition:
            x_ = self.normalize_2(x_, c)
        else:
            x_ = self.normalize_2(x_)
        x_ = self.activation(x_)
        x_ = self.conv_2(x_)

        # Main Path
        if self.use_res:
            if self.is_down:
                x = self.pool(x)
            x = self.conv(x)
        else:
            x = 0

        # Merge
        x = x + x_

        if self.dropout is not None:
            x = self.dropout(x)

        return x

class EncoderF_Res(nn.Module):

    def __init__(self,
                 ch_in=1,
                 ch_out=768,
                 ch_unit=96,
                 norm='batch',
                 activation='relu',
                 init='ortho',
                 use_att=False,
                 use_res=True):
        super().__init__()

        self.init = init
        self.use_att = use_att

        kwargs = {}
        if activation == 'lrelu':
            kwargs['l_slope'] = 0.2

        if use_att:
            print('Adding attention layer in E at resolution %d' % (64))
            conv4att = functools.partial(
                SNConv2d,
                kernel_size=3,
                padding=1,
                num_svs=1,
                num_itrs=1,
                eps=1e-06)
            self.att = Attention(384, conv4att)

        # output is 96 x 256 x 256
        self.res1 = ResConvBlock(ch_in, ch_unit * 1,
                                 is_down=False, 
                                 activation=activation,
                                 norm=norm,
                                 use_res=use_res,
                                 **kwargs)
        # output is 192 x 128 x 128 
        self.res2 = ResConvBlock(ch_unit * 1, ch_unit * 2,
                                 is_down=True, 
                                 activation=activation,
                                 norm=norm,
                                 use_res=use_res,
                                 **kwargs)
        # output is  384 x 64 x 64 
        self.res3 = ResConvBlock(ch_unit * 2, ch_unit * 4,
                                 is_down=True, 
                                 activation=activation,
                                 norm=norm,
                                 use_res=use_res,
                                 **kwargs)
        # output is  768 x 32 x 32 
        self.res4 = ResConvBlock(ch_unit * 4, ch_unit * 8,
                                 is_down=True, 
                                 activation=activation,
                                 norm=norm,
                                 use_res=use_res,
                                 **kwargs)
        # output is  768 x 16 x 16 
        self.res5 = ResConvBlock(ch_unit * 8, ch_unit * 8,
                                 is_down=True, 
                                 activation=activation,
                                 norm=norm, 
                                 use_res=use_res,
                                 dropout=None,
                                 **kwargs)

        self.init_weights()

    def forward(self, x, c=None):
        x = self.res1(x, c)
        x = self.res2(x, c)
        x = self.res3(x, c)
        if self.use_att:
            x = self.att(x)
        x = self.res4(x, c)
        x = self.res5(x, c)
        return x


    def forward_with_cp(self, x, cp):
        x = self.res1(x, cp[0])
        x = self.res2(x, cp[1])
        x = self.res3(x, cp[2])
        if self.use_att:
            x = self.att(x)
        x = self.res4(x, cp[3])
        x = self.res5(x, cp[4])
        return x


    def init_weights(self):
        for module in self.modules():
            if (isinstance(module, nn.Conv2d) or isinstance(module, nn.Linear)
                    or isinstance(module, nn.Embedding)):
                if self.init == 'ortho':
                    init.orthogonal_(module.weight)
                elif self.init == 'N02':
                    init.normal_(module.weight, 0, 0.02)
                elif self.init in ['glorot', 'xavier']:
                    init.xavier_uniform_(module.weight)
                else:
                    pass
                    # print('Init style not recognized...')


# z: ([batch, 17])
# h: ([batch, 24576])
# index 0 : ([batch, 1536, 4, 4])
# index 1 : ([batch, 1536, 8, 8])
# index 2 : ([batch, 768, 16, 16])
# index 3 : ([batch, 768, 32, 32])
# index 4 : ([batch, 384, 64, 64])
# index 5 : ([batch, 192, 128, 128])
# index 6: ([batch, 96, 256, 256])
# result: ([batch, 3 256, 256])
if __name__ == '__main__':
    model = EncoderF_Res(use_att=True)
    model.float()
    y = model(torch.randn(4,1,256,256))
    print(y.shape)
"
Siq88qcR,Say So (Custom Colors),meromerc,HTML,Tuesday 16th of April 2024 10:02:32 PM CDT,"<!--

    SAY SO (Custom Colors)
    
    code by @meromercury
    
    originally made sometime in 2019 idk // made free: 4/16/24
    
    Want bootstrap colors? Check my original listing for the other version.
    
    Accent color: #b2487c (CTRL+F to replace)
    Use fontawesome to change the symbols.
    

-->


<div class=""container"">
<div class=""mx-auto"" style=""font-size:14px;max-width:800px;font-family:consolas"">

<div class=""card mb-2"">
<div class=""card-header"" style=""background-color:#b2487c;"">
  
   <div class=""pull-right ml-1"">
      <div class=""btn btn-sm"" style=""background-color:#696969;border-color:#b2487c""><i class=""fa fa-minus""></i></div>
      <div class=""btn btn-sm"" style=""background-color:#696969;border-color:#b2487c""><i class=""fa fa-window-restore""></i></div>
      <div class=""btn btn-sm"" style=""background-color:#555;""><i class=""fa fa-times""></i></div>
   </div>

<ul class=""nav nav-tabs card-header-tabs nav-fill mt-2 ml-1 mr-1""><li class=""nav-item""><a class=""nav-link active"" data-toggle=""tab"" href=""#tab1"">About</a></li>
<li class=""nav-item""><a class=""nav-link"" data-toggle=""tab"" href=""#tab2"">Details</a></li>
<li class=""nav-item""><a class=""nav-link"" data-toggle=""tab"" href=""#tab3"">Biography</a></li>
<li class=""nav-item""><a class=""nav-link"" data-toggle=""tab"" href=""#tab4"">Relationships</a></li>
</ul>

</div>

<div class=""tab-content"">

<!-------------------

      TAB 1

--------------------->

<div class=""tab-pane active show card-block table-responsive fade"" style=""height:500px; "" id=""tab1"">

<div class=""text-center mb-3"">
<i>
<h1><i class=""fas fa-quote-left""></i> You want it? Say so. <i class=""fas fa-quote-right""></i></h1>
</i>
</div>
<!-------------------

      ABOUT

--------------------->
<div class=""row"">
<div class=""col-7 h-auto overflow-hidden"" style=""max-height:500px"">

<h1>About</h1>
<hr class=""my-1"">

  <div class=""container mb-3"">
  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec consectetur porttitor magna, quis vulputate nunc mattis et. Suspendisse varius ante in aliquam placerat. Aliquam ex ante, semper at finibus vel, dapibus quis felis. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nam varius risus facilisis tellus dignissim, eu iaculis libero molestie. Suspendisse suscipit enim eget blandit cursus.</p>

  <p>Donec at imperdiet urna. Maecenas a purus id ex consectetur pulvinar ac non ex. Aliquam quis consequat ante. Curabitur vulputate, sem sed ultricies imperdiet, velit enim auctor enim, eget euismod urna magna eu justo. Nunc sed nibh sed magna consectetur euismod at eu felis. Cras fringilla, nibh ut rhoncus interdum, dui diam molestie neque, eget dapibus dolor velit et erat. Try not to make this too long!</p>
  </div>

  </div>
  
  <!-- height will automatically crop to 450. if you do NOT want this as a fixed h/w, remove ""style=""height:450px"" and ""w-100"" -->
  
    <div class=""col-md-5 p-1 m-auto"">
      <img src=""https://images.pexels.com/photos/2251822/pexels-photo-2251822.jpeg"" class=""rounded w-100"" style=""height:450px;"">
    </div>
</div>
<!-------------------

      APPEARANCE

--------------------->
<h1>Appearance</h1>
<hr class=""my-1"">

  <div class=""container mb-3"">
  <p>Vivamus volutpat ultricies ligula, sed pharetra nibh mattis lacinia. Quisque pulvinar magna ex, sed tristique erat ullamcorper eget. Curabitur tempor id mauris eu dapibus. Suspendisse aliquet semper odio, id posuere est. In tincidunt mauris a metus condimentum, id egestas orci lacinia. Nulla convallis, dui eu malesuada viverra, ipsum velit imperdiet mauris, nec porttitor augue metus ac tortor. Cras auctor sem vel pretium efficitur. Suspendisse non rhoncus metus. Sed consectetur eros vitae iaculis consectetur.</p>

  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc venenatis metus feugiat egestas bibendum. Etiam efficitur eros at justo commodo mollis. Nulla luctus egestas risus quis vulputate. Suspendisse id pellentesque nisi, vel convallis nunc. Aenean rhoncus vulputate urna a pulvinar. Nullam rhoncus nibh enim, sed efficitur lorem luctus at. Sed pretium purus non tortor pharetra sodales. Cras quis ante eros.</p>
  </div>

</div>

<!-------------------

      TAB 2

--------------------->

<div class=""tab-pane show card-block table-responsive fade"" style=""height:500px; "" id=""tab2"">

<div class=""container"">
<!-------------------

      BASICS

--------------------->

<!-- the symbols are inside of <i class="""">. to replace symbols, find your symbol on fontawesome.com and replace it below-->
<div class=""row no-gutters"">
<div class=""col-sm"">
  <ul class=""list-group list-group-flush"">
      <li class=""list-group-item d-flex justify-content-between"">
        <i class=""fas fa-user""></i>
        Name</li>
      <li class=""list-group-item d-flex justify-content-between"">
        <i class=""far fa-transgender""></i>
        Gender</li>
      <li class=""list-group-item d-flex justify-content-between"">
        <i class=""far fa-signature""></i>
        Pronouns</li>
      <li class=""list-group-item d-flex justify-content-between"">
        <i class=""far fa-clock""></i>
        Age</li>
      <li class=""list-group-item d-flex justify-content-between"">
        <i class=""far fa-heart""></i>
        Sexuality</li>
    </ul>
</div>

<div class=""col-auto p-2 hidden-xs-down"">
  <div class=""card h-100"" style=""border-width:1px""></div>
</div>

<div class=""col-sm"">
  <ul class=""list-group list-group-flush"">
    <li class=""list-group-item d-flex justify-content-between"">
        <i class=""far fa-heart""></i>
        Sexuality</li>
      <li class=""list-group-item d-flex justify-content-between"">
        <i class=""far fa-ruler""></i>
        Height</li>
      <li class=""list-group-item d-flex justify-content-between"">
        <i class=""far fa-moon""></i>
        Dream moon / Zodiac</li>
      <li class=""list-group-item d-flex justify-content-between"">
        <i class=""fas fa-tint""></i>
        Blood color / Species</li>
      <li class=""list-group-item d-flex justify-content-between"">
        <i class=""far fa-male""></i>
        Class of Aspect</li>
    </ul>
</div>
</div>
<!-------------------

      STATS

--------------------->

<hr class=""m-3"">
<div class=""row no-gutters mb-2"">
  <div class=""col-md-6"">
   <div class=""col-lg-11 no-gutters pt-2 pb-2 mx-auto"">
     <div class=""col-lg-12 no-gutters mb-3"">
     <span class=""mb-2"">Introvert</span>
     <span class=""pull-right mb-2"">Extrovert</span>
    <div class=""progress my-2"">
     <div class=""progress-bar"" role=""progressbar"" aria-valuemin =""0"" aria-valuemax=""100"" style=""background-color:#b2487c;width:50%;height:16px""></div></div>
      </div>
      <div class=""col-lg-12 no-gutters mb-3"">
     <span class=""mb-2"">Observant</span>
     <span class=""pull-right mb-2"">Intuitive</span>
    <div class=""progress my-2"">
     <div class=""progress-bar"" role=""progressbar"" aria-valuemin =""0"" aria-valuemax=""100"" style=""background-color:#b2487c;width:50%;height:16px""></div></div>
      </div>
      <div class=""col-lg-12 no-gutters mb-3"">
     <span class=""mb-2"">Thinking</span>
     <span class=""pull-right mb-2"">Feeling</span>
    <div class=""progress my-2"">
     <div class=""progress-bar"" role=""progressbar"" aria-valuemin =""0"" aria-valuemax=""100"" style=""background-color:#b2487c;width:50%;height:16px""></div></div>
      </div>
      <div class=""col-lg-12 no-gutters mb-6"">
     <span class=""mb-2"">Judging</span>
     <span class=""pull-right mb-2"">Prospecting</span>
    <div class=""progress my-2"">
     <div class=""progress-bar"" role=""progressbar"" aria-valuemin =""0"" aria-valuemax=""100"" style=""background-color:#b2487c;width:50%;height:16px""></div></div>
      </div>
   </div>
</div>

<div class=""col-md-6"">
<div class=""row m-auto"">
  <div class=""col-lg-12 d-flex p-3 m-auto justify-around"">
  <!-- to use: copy everything in your youtube link AFTER ?v=. replace everything after /embed/ with what you copied. -->
    <iframe width=""345"" height=""210"" src=""https://www.youtube.com/embed/uAYG46w1SCA"" frameborder=""0"" class=""p-2 m-auto mb-2""></iframe>

  </div>
</div>
</div>
</div>
<hr class=""m-3"">

<!-------------------

    LIKES/DISLIKES

--------------------->

<div class=""row no-gutters mb-2"">
<div class=""col-sm"">
  <p class=""text-left mb-2 ml-2"" style=""font-size:22px"">Likes</p>
  <ul class=""list-group list-group-flush"">
      <li class=""list-group-item d-flex justify-content-between"">
        <i class=""fas fa-check""></i>
        Yes</li>
      <li class=""list-group-item d-flex justify-content-between"">
        <i class=""fas fa-check""></i>
        Yes</li>
      <li class=""list-group-item d-flex justify-content-between"">
        <i class=""fas fa-check""></i>
        Yes</li>
      <li class=""list-group-item d-flex justify-content-between"">
        <i class=""fas fa-check""></i>
        Yes</li>
      <li class=""list-group-item d-flex justify-content-between"">
        <i class=""fas fa-check""></i>
        Yes</li>
    </ul>
</div>

<div class=""col-auto p-2 hidden-xs-down"">
  <div class=""card h-100"" style=""border-width:1px""></div>
</div>

<div class=""col-sm"">
  <p class=""text-left mb-2 ml-2"" style=""font-size:22px"">Dislikes</p>
  <ul class=""list-group list-group-flush"">
      <li class=""list-group-item d-flex justify-content-between"">
        <i class=""fas fa-times""></i>
        No</li>
      <li class=""list-group-item d-flex justify-content-between"">
        <i class=""fas fa-times""></i>
        No</li>
      <li class=""list-group-item d-flex justify-content-between"">
        <i class=""fas fa-times""></i>
        No</li>
      <li class=""list-group-item d-flex justify-content-between"">
        <i class=""fas fa-times""></i>
        No</li>
      <li class=""list-group-item d-flex justify-content-between"">
        <i class=""fas fa-times""></i>
        No</li>
    </ul>
</div>
</div>

</div>
</div>

<!-------------------

      TAB 3

--------------------->
<div class=""tab-pane show card-block table-responsive fade"" style=""height:500px; "" id=""tab3"">

<!-------------------

      BIOGRAPHY

--------------------->

<h1>Background</h1>
<hr class=""my-1 mb-2"">

  <div class=""container mb-4"">
  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce pellentesque, ante ac tempus ornare, mauris lorem maximus sem, at congue neque orci mattis mauris. Sed molestie mi non ligula maximus, nec consectetur diam sollicitudin. Quisque est arcu, pretium et neque facilisis, vulputate mattis eros. Ut nec eros ac augue sollicitudin pulvinar. Nunc bibendum gravida nibh, quis fringilla tellus. Cras erat libero, bibendum in tempus eget, vestibulum nec erat. Ut id elit volutpat, scelerisque nisl at, porta odio.</p>


  <h4 class=""text-underline mb-1"" style=""font-weight:bold"">Subheader</h4>
  <p>Donec at imperdiet urna. Maecenas a purus id ex consectetur pulvinar ac non ex. Aliquam quis consequat ante. Curabitur vulputate, sem sed ultricies imperdiet, velit enim auctor enim, eget euismod urna magna eu justo. Nunc sed nibh sed magna consectetur euismod at eu felis. Cras fringilla, nibh ut rhoncus interdum, dui diam molestie neque, eget dapibus dolor velit et erat. Vestibulum quis risus commodo, tempus lacus quis, interdum mauris. Aliquam eu tincidunt ipsum. Duis consequat vulputate neque, nec venenatis mauris convallis eget. Nulla neque sapien, consectetur dapibus aliquam in, fermentum nec nunc. Quisque sodales lorem rutrum condimentum lacinia. Pellentesque aliquam, ante et iaculis lacinia, massa tellus tincidunt purus, quis tempor justo dui non est.</p>
  
  <h4 class=""text-underline mb-1"" style=""font-weight:bold"">Subheader</h4>
  <p>Aliquam congue, metus rutrum venenatis volutpat, odio dui congue lorem, sit amet gravida sapien augue sit amet lectus. Aliquam non accumsan sem. Fusce nibh felis, ullamcorper ut neque quis, porta dictum quam. Nam sed rutrum nisl. Curabitur sollicitudin nisi odio, ac tristique dui fermentum id. Cras facilisis sed massa et sagittis. Fusce imperdiet a metus et semper.</p>
  
  <!-- add on here! -->
  
  </div>
<hr class=""my-1 mb-3"">
<h1>Personality</h1>
<hr class=""my-1 mt-3 mb-2"">

  <div class=""container mb-4"">
  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla facilisi. Sed justo felis, hendrerit ut nibh vitae, pellentesque euismod nisi. Vestibulum mauris nibh, pretium sit amet fermentum nec, imperdiet ac ipsum. Maecenas ornare, velit vulputate semper bibendum, justo mauris hendrerit nunc, et fringilla justo nibh sed odio. Sed in hendrerit mi. Maecenas consectetur porttitor lacus et aliquam. Etiam ut neque et purus ultrices pulvinar nec vitae neque. Sed bibendum elit vel nibh pulvinar consequat.</p>

  <p>Nunc purus justo, auctor vitae ultrices vel, pretium sit amet nisi. Sed volutpat sodales malesuada. Curabitur blandit auctor justo, vitae convallis massa vulputate non. Ut a orci et urna iaculis varius sed in est. Maecenas dignissim sit amet mi non posuere. Sed vestibulum scelerisque nulla sed suscipit. Nulla vulputate dignissim ornare. Suspendisse potenti. Suspendisse pellentesque iaculis diam, et facilisis nibh finibus sed. Duis sem nunc, finibus porta volutpat nec, dictum nec sem. Maecenas nec urna ac urna elementum varius ac quis erat. Donec ullamcorper mollis nisi a feugiat. Nulla interdum libero non metus tempor interdum.</p>
  
  <!-- add on here! -->
  
  </div>

<!-------------------

      TRIVIA

--------------------->

<hr class=""my-1 mb-3"">
<h1>Trivia</h1>
<hr class=""my-1 mt-3"">

<div class=""col-lg-11 no-gutters pt-2 mx-auto"">
  <ul>
    <li>Day to night to morning</li>
    <li>Keep with me in the moment</li>
    <li style=""font-weight:bold"">I'd let you had I known it</li>
    <ul><li>Why don't you say so?</li></ul>
    <li>Didn't even notice</li>
    <li style=""font-weight:bold"">No punches there to roll with</li>
    <li><u>You got to keep me focused</u></li>
    <ul><li>You want it? Say so</li></ul>
  </ul>
</div>

</div>
<!-------------------

      TAB 4

--------------------->
<div class=""tab-pane show card-block table-responsive fade"" style=""height:500px; "" id=""tab4"">

<!-------------------

      RELATIONSHIPS

--------------------->

<div class=""row"">
<div class=""col-md-3 text-center mb-3 h-100"">
     <img src=""https://i.imgur.com/XNO9z5Q.png"" class=""rounded-circle"" style=""max-width:167px;max-height:167px"">
 </div>
 
<div class=""col-md-9"">
    <div class=""col-md-12 p-2"" style=""min-height:167px;font-size:13px;"">
        <h2 class=""text-left mb-0""><a href=""CHARACTER LINK"" style=""color:#b2487c"">Name</a></h2>
        <p class=""text-muted mb-1"" style=""font-size:14px"">Relationship</p>
        <p class=""text-justify"">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nibh dolor, pellentesque placerat faucibus eget, pretium non augue. Maecenas enim justo, gravida eget luctus sed, dictum et ex. Proin ut nisi eget libero condimentum mollis. Morbi maximus sapien ut ex malesuada mollis. Pellentesque rutrum velit id risus accumsan, vitae consequat risus eleifend. Nullam id metus purus. In a finibus nunc. Cras scelerisque cursus purus, ac dictum nulla lacinia non. Proin vestibulum, lectus et bibendum cursus, urna diam commodo justo, a porta metus sem et quam.</p>
    </div>
</div>
</div>

<hr class=""mt-4 mb-4"">

<div class=""row"">
<div class=""col-md-3 text-center mb-3 h-100"">
     <img src=""https://i.imgur.com/XNO9z5Q.png"" class=""rounded-circle"" style=""max-width:167px;max-height:167px"">
 </div>
 
<div class=""col-md-9"">
    <div class=""col-md-12 p-2"" style=""min-height:167px;font-size:13px;"">
        <h2 class=""text-left mb-0""><a href=""CHARACTER LINK"" style=""color:#b2487c"">Name</a></h2>
        <p class=""text-muted mb-1"" style=""font-size:14px"">Relationship</p>
        <p class=""text-justify"">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nibh dolor, pellentesque placerat faucibus eget, pretium non augue. Maecenas enim justo, gravida eget luctus sed, dictum et ex. Proin ut nisi eget libero condimentum mollis. Morbi maximus sapien ut ex malesuada mollis. Pellentesque rutrum velit id risus accumsan, vitae consequat risus eleifend. Nullam id metus purus. In a finibus nunc. Cras scelerisque cursus purus, ac dictum nulla lacinia non. Proin vestibulum, lectus et bibendum cursus, urna diam commodo justo, a porta metus sem et quam.</p>
    </div>
</div>
</div>

<!-- 
COPY FROM HERE TO END TO ADD MORE PEOPLE
-->
<hr class=""mt-4 mb-4"">

<div class=""row"">
<div class=""col-md-3 text-center mb-3 h-100"">
     <img src=""https://i.imgur.com/XNO9z5Q.png"" class=""rounded-circle"" style=""max-width:167px;max-height:167px"">
 </div>
 
<div class=""col-md-9"">
    <div class=""col-md-12 p-2"" style=""min-height:167px;font-size:13px;"">
        <h2 class=""text-left mb-0""><a href=""CHARACTER LINK"" style=""color:#b2487c"">Name</a></h2>
        <p class=""text-muted mb-1"" style=""font-size:14px"">Relationship</p>
        <p class=""text-justify"">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nibh dolor, pellentesque placerat faucibus eget, pretium non augue. Maecenas enim justo, gravida eget luctus sed, dictum et ex. Proin ut nisi eget libero condimentum mollis. Morbi maximus sapien ut ex malesuada mollis. Pellentesque rutrum velit id risus accumsan, vitae consequat risus eleifend. Nullam id metus purus. In a finibus nunc. Cras scelerisque cursus purus, ac dictum nulla lacinia non. Proin vestibulum, lectus et bibendum cursus, urna diam commodo justo, a porta metus sem et quam.</p>
    </div>
</div>
</div>
<!--
END COPY
-->





<!-- ^^^ paste ABOVE here to add more people -->

</div>

</div>
</div>


<!------------------- my credit, please don't remove! --------------------->

<div class=""m-1 text-center text-primary"" style=""font-size:12px"">
<a target=""_blank"" href=""https://toyhou.se/meromercury"" class=""tooltipster"" title=""made by cass"" style=""color:#A4A4A4;font-weight:600""><i class=""fal fa-code""></i></a></div>

</div>
</div>"
miUVz0uw,REHA,suramraja1,Lua,Tuesday 16th of April 2024 09:57:27 PM CDT,"--rh musical used


coroutine.wrap(function()
    if game.PlaceId == 1067560271 then -- Class
        task.wait(100)
        repeat task.wait(1) until #game:GetService(""Players""):GetPlayers() > 7
        task.wait(200)
        game:GetService(""RunService""):Set3dRenderingEnabled(false) -- render
        task.wait(500)
        repeat task.wait(1)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(22.26, 3.27484, -8.08362)
            task.wait(1)
            fireproximityprompt(game:GetService(""Workspace"").ClassroomDoor.RightDoor.Hinge.Attachment.ProximityPrompt)
        until game.PlaceId == 23232323
    end
end)()

coroutine.wrap(function()
    task.wait(10)
    if game.PlaceId == 735030788 then --Arrival
        game:GetService(""Players"").LocalPlayer.PlayerGui.StartScreenGui.ClickedPlay:Fire()
        task.wait(60)
        repeat task.wait(1)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(304.738, 7.55378, -105.053)
            task.wait(1)
            local ohString1 = ""Musical Chairs""
            game:GetService(""ReplicatedStorage"").ClassroomDoorGui:FireServer(ohString1)
        until game.PlaceId == 23232323
    end
end)()

coroutine.wrap(function()
    while true do
        for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
            if v:IsA(""BasePart"") and v.CanCollide == true then
                v.CanCollide = false
            end
        end
            game:GetService(""RunService"").Stepped:wait()
        end
end)()


spawn(function()
    local vu = game:GetService(""VirtualUser"")
    game:GetService(""Players"").LocalPlayer.Idled:connect(function()
        vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
        wait(1)
        vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    end)
end)

coroutine.wrap(function()
    while task.wait(1) do
        repeat task.wait(1)
            firesignal(game:GetService(""Players"").LocalPlayer.PlayerGui.QuestUI.LevelRewardPopUp.Star.CloseButton.MouseButton1Click)
        until game:GetService(""Players"").LocalPlayer.PlayerGui.QuestUI.LevelRewardPopUp.Visible == false
    end
end)()


coroutine.wrap(function()
    while task.wait(2) do
        pcall(function()
                for i,v in pairs(game:GetService(""Workspace""):GetDescendants()) do
                    if  v.Name == ""1Chair_Halloween"" or v.Name == ""1Chair_New"" or v.Name == ""1Chair"" or
                        v.Name == ""7Chairs"" or v.Name == ""7Chair_New"" or v.Name == ""7Chair_Halloween"" or
                        v.Name == ""6Chairs"" or v.Name == ""6Chair_New"" or v.Name == ""6Chair_Halloween"" or
                        v.Name == ""5Chairs"" or v.Name == ""5Chair_New"" or v.Name == ""5Chair_Halloween"" or
                        v.Name == ""4Chairs"" or v.Name == ""4Chair_New"" or v.Name == ""4Chair_Halloween"" or
                        v.Name == ""3Chairs"" or v.Name == ""3Chair_New"" or v.Name == ""3Chair_Halloween"" or
                        v.Name == ""2Chairs"" or v.Name == ""2Chair_New"" or v.Name == ""2Chair_Halloween"" or
                        v.Name == ""8Chairs"" or v.Name == ""8Chair_New"" or v.Name == ""8Chair_Halloween"" or
                        v.Name == ""1ChairsD5no"" or v.Name == ""2ChairsD5no"" or v.Name == ""3ChairsD5no"" or
                        v.Name == ""4ChairsD5no"" or v.Name == ""5ChairsD5no"" or v.Name == ""6ChairsD5no"" or
                        v.Name == ""7ChairsD5no"" or v.Name == ""8ChairsD5no"" or v.Name == ""8ChairsD5no"" or
                        v.Name == ""7ChairsD5no""  then
                        for i,t in pairs(v:GetDescendants()) do
                            if t.ClassName == ""Seat"" then
                            local hmrp = game.Players.LocalPlayer.Character.HumanoidRootPart
                            local kursi = t
                            hmrp.CFrame = t.CFrame
                            task.wait(0.1)
                        end
                    end
                end
            end
        end)
    end
end)()
"
fgfSPv4d,(Eat That Up) It's Good For You,meromerc,HTML,Tuesday 16th of April 2024 09:47:06 PM CDT,"<!--

    EAT THAT UP, IT'S GOOD FOR YOU
    
    a code by meromercury
    
    created: 05/26/20 // updated: 2/25/23 // made free: 4/16/24
    
    Accent color: #5FBBFB
    CTRL+F to change


-->

<div class=""container"">
<div class=""mx-auto"" style=""font-size:14px;max-width:950px;"">

<div class=""row no-gutters"">

<!-- LEFT IMAGE -->
  <div class=""col-md-4 no-gutters"">
    <div class=""col-lg-12 p-1"">
     <div style=""position:absolute;background: url(https://images.pexels.com/photos/753266/pexels-photo-753266.jpeg) center;border-radius:10px;background-size:cover;min-height:610px;width:100%;z-index:-1;"">
     </div>
    </div>
  </div>


<div class=""col-lg-8 no-gutters"">
<div class=""col-lg-12 p-1 pl-3"">

<!----- TAB BUTTONS ----->

<ul class=""nav nav-tabs card-header-tabs row mb-1"">
    <li class=""col-3 mb-1 pr-1""><a class=""btn bg-faded btn-block text-white active"" style=""background-color:#5FBBFB;"" data-toggle=""tab"" href=""#tab1""> <i class=""fas fa-user fa-2x""></i>  </a></li>
    <li class=""col-3 mb-1 pl-1 pr-1""><a class=""btn bg-faded btn-block text-white"" style=""background-color:#5FBBFB;"" data-toggle=""tab"" href=""#tab2""> <i class=""fad fa-stars fa-2x""></i>  </a></li>  
    <li class=""col-3 mb-1 pl-1 pr-1""><a class=""btn bg-faded btn-block text-white"" style=""background-color:#5FBBFB;"" data-toggle=""tab"" href=""#tab3""> <i class=""fad fa-books fa-2x""></i>  </a></li>
    <li class=""col-3 mb-1 pl-1""><a class=""btn bg-faded btn-block text-white"" style=""background-color:#5FBBFB;"" data-toggle=""tab"" href=""#tab4"">  <i class=""fad fa-user-friends fa-2x""></i>  </a></li>
</ul>

<div class=""bg-faded p-3 mb-2 h-100"" style=""border-radius:10px;min-height:556px"">
  <div class=""tab-content"">

<!----------- TAB 1 ----------->

<div class=""tab-pane fade active show"" id=""tab1"">
<div class=""row no-gutters container-fluid p-0"" style=""height:520px"">
<div id=""accordion"">

  <div class=""col-lg-12 container-fluid overflow-hidden p-0 mb-2 mx-0"">
    <div role=""tab"">
      <a class=""btn btn-secondary btn-block border-0 mb-2 p-2"" data-toggle=""collapse"" data-target=""#accordion1"" style=""color:#5FBBFB; font-size:1.6rem; height:48px"">
        About
      </a>
    </div>
  
    <div id=""accordion1"" class=""collapse show"" data-parent=""#accordion"">
    <div class=""card card-block border-0"">
    <div class=""col-12 h-100 p-2 table-responsive container-fluid"" style=""max-height:300px;min-height:300px"">
    <p>Artwork by a deactivated user. These sections scroll. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent tempus vehicula eros a rhoncus. Aenean auctor pallentesque elit, ut feugiat nibh molestie eu. Nunc sit amet lacus accumsan, tempus leo eu, condimentum mi. Morbi vitae ultrices sem. Aliquam euismod justo in nibh consectetur, id posuere eros viverra. In eu arcu semper, efficitur erat efficitur, faucibus mi. Duis varius rutrum arcu, eget blandit tortor convallis at. Etiam diam elit, mattis non leo eu, pharetra mattis urna.</p>
    
    <p>Nunc posuere lacus eget nisl faucibus venenatis. Donec lorem sapien, scelerisque in quam ac, condimentum mollis nisl. Donec pharetra tincidunt sem a dapibus. Mauris auctor, turpis id tristique rhoncus, metus diam vulputate ligula, eget elementum tellus neque ac metus. Donec ornare tellus interdum diam venenatis porta. Donec convallis ex in est luctus ornare. </p>
    </div></div>
    </div>
  </div>

  <div class=""col-lg-12 container-fluid overflow-hidden p-0 mb-2 mx-0"">
    <div role=""tab"">
      <a class=""btn btn-secondary btn-block border-0 mb-2 p-2"" data-toggle=""collapse"" data-target=""#accordion2"" style=""color:#5FBBFB; font-size:1.6rem; height:48px"">
        Appearance
      </a>
    </div>
  
    <div id=""accordion2"" class=""collapse"" data-parent=""#accordion"">
    <div class=""card card-block border-0"">
    <div class=""col-12 h-100 p-2 table-responsive container-fluid"" style=""max-height:300px;min-height:300px"">
    <p>Maecenas sit amet enim convallis, congue quam non, dapibus ante. Maecenas eleifend sapien at eros efficitur, et laoreet dolor mollis. Praesent aliquam, massa vitae posuere mattis, quam ligula pulvinar leo, vel porttitor ex leo sed erat. Aliquam nec purus vel enim tristique pharetra cursus nec ligula. Fusce ex erat, consequat at imperdiet sit amet, convallis eget quam. Ut finibus dolor dui, non condimentum quam tempor et.</p>
    
    <p>Proin dapibus, ligula id condimentum consequat, arcu lectus ultrices enim, nec ultricies felis augue quis orci. Ut eu neque a dolor posuere rhoncus. Donec nec ex nec risus tincidunt fringilla in vel nunc. Vivamus fermentum pharetra suscipit. Morbi sodales tortor sit amet convallis auctor. Aenean turpis metus, commodo vitae congue eget, rutrum vitae ipsum. Nam augue dolor, sollicitudin commodo tempor vel, tincidunt ut erat.</p>

    <p>Phasellus aliquam quam imperdiet, tempor erat in, pretium nisl. Praesent non magna et nisi dictum ultrices ac id ipsum. Pellentesque id eros sed enim dignissim maximus at non justo. Donec nec maximus mi, eu tincidunt sem. Aliquam turpis sem, efficitur hendrerit sem id, lacinia tempor dolor. Nunc convallis arcu odio, id rutrum leo pharetra a. Morbi dapibus ultrices dolor sed consequat. </p>
    </div></div>
    </div>
  </div>

  <div class=""col-lg-12 container-fluid overflow-hidden p-0 mb-2 mx-0"">
    <div role=""tab"">
      <a class=""btn btn-secondary btn-block border-0 mb-2 p-2"" data-toggle=""collapse"" data-target=""#accordion3"" style=""color:#5FBBFB; font-size:1.6rem; height:48px"">
        Quirk
      </a>
    </div>
  
    <div id=""accordion3"" class=""collapse"" data-parent=""#accordion"">
    <div class=""card card-block border-0"">
    <div class=""col-12 h-100 p-2 table-responsive container-fluid"" style=""max-height:300px;min-height:300px"">
    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent tempus vehicula eros a rhoncus. Aenean auctor pellentesque elit, ut feugiat nibh molestie eu. Nunc sit amet lacus accumsan, tempus leo eu, condimentum mi. Morbi vitae ultrices sem. Aliquam euismod justo in nibh consectetur, id posuere eros viverra.</p>
    
    <p>Examples:</p>
    
    <ul>
      <li style=""list-style-type: circle"">And so you're drinking in your room (To make it all go)</li>
      <li style=""list-style-type: circle"">It didn't end too soon (You've got the next one)</li>
      <li style=""list-style-type: circle"">You're holding on too long (You've gotta let go)</li>
      <li style=""list-style-type: circle"">Your other love is gone, and you know</li>
    </ul>
    </div></div>
    </div>
  </div>

</div>

</div>
</div>
<!--------- END TAB 1 --------->


<!----------- TAB 2 ----------->
<div class=""tab-pane fade"" id=""tab2"">
<div class=""no-gutters container-fluid table-responsive p-2"" style=""height:520px"">

<div class=""card card-block border-0 p-2 mb-3"">
  <div class=""row no-gutters"">
  <div class=""col-sm"">
    <ul class=""list-group list-group-flush"">
        <li class=""list-group-item d-flex justify-content-between"">
          <i class=""fas fa-user""></i>
          Name</li>
        <li class=""list-group-item d-flex justify-content-between"">
          <i class=""fad fa-id-card""></i>
          Pronunciation</li>
        <li class=""list-group-item d-flex justify-content-between"">
          <i class=""far fa-transgender""></i>
          Gender</li>
        <li class=""list-group-item d-flex justify-content-between"">
          <i class=""far fa-signature""></i>
          Pronouns</li>
        <li class=""list-group-item d-flex justify-content-between"">
          <i class=""fad fa-heart""></i>
          Sexuality</li>
      </ul>
  </div>
  
  <div class=""col-auto p-2 hidden-xs-down"">
    <div class=""card h-100"" style=""border-width:1px""></div>
  </div>
  
  <div class=""col-sm"">
    <ul class=""list-group list-group-flush"">
        <li class=""list-group-item d-flex justify-content-between"">
          <i class=""fad fa-clock""></i>
          Age</li>
        <li class=""list-group-item d-flex justify-content-between"">
          <i class=""fad fa-ruler""></i>
          Height</li>
        <li class=""list-group-item d-flex justify-content-between"">
          <i class=""far fa-moon""></i>
          Dream Moon / Zodiac</li>
        <li class=""list-group-item d-flex justify-content-between"">
          <i class=""fad fa-tint""></i>
          Bloodcolor / Species</li>
        <li class=""list-group-item d-flex justify-content-between"">
          <i class=""far fa-male""></i>
          Class of Aspect</li>
      </ul>
  </div>
  </div>
</div>

  <div class=""card card-block border-0 p-3 mb-3"">
    <div class=""col-lg-12 mb-1"">
      <span>Introvert</span>
      <span class=""pull-right"">Extrovert</span>
    </div>
  <div class=""progress mb-3""><div class=""progress-bar"" role=""progressbar"" aria-valuenow=""50"" aria-valuemin =""0"" aria-valuemax=""100"" style=""background-color:#5FBBFB;width:50%;height:16px""></div></div>
  
    <div class=""col-lg-12 mb-1"">
      <span>Observant</span>
      <span class=""pull-right"">Intuitive</span>
    </div>
  <div class=""progress mb-3""><div class=""progress-bar"" role=""progressbar"" aria-valuenow=""50"" aria-valuemin =""0"" aria-valuemax=""100"" style=""background-color:#5FBBFB;width:50%;height:16px""></div></div>
  
    <div class=""col-lg-12 mb-1"">
      <span>Thinking</span>
      <span class=""pull-right"">Feeling</span>
    </div>
  <div class=""progress mb-3""><div class=""progress-bar"" role=""progressbar"" aria-valuenow=""50"" aria-valuemin =""0"" aria-valuemax=""100"" style=""background-color:#5FBBFB;width:50%;height:16px""></div></div>
  
    <div class=""col-lg-12 mb-1"">
      <span>Judging</span>
      <span class=""pull-right"">Prospecting</span>
    </div>
  <div class=""progress""><div class=""progress-bar"" role=""progressbar"" aria-valuenow=""50"" aria-valuemin =""0"" aria-valuemax=""100"" style=""background-color:#5FBBFB;width:50%;height:16px""></div></div>
  </div>


<div class=""row m-0 mb-3"">
  
  <div class=""col-6 p-0 pr-1"">
    <div class=""card border-0 p-3"">
      <ul class=""list-group list-group-flush table-responsive"" style=""max-height:276px"">
          <li class=""list-group-item d-flex justify-content-around p-2"">
            <h2 style=""color:#5FBBFB"">Likes</h2></li>
          <li class=""list-group-item d-flex justify-content-between"">
            <i class=""fas fa-check fa-lg""></i>
            Yes</li>
          <li class=""list-group-item d-flex justify-content-between"">
            <i class=""fas fa-check fa-lg""></i>
            Yes</li>
          <li class=""list-group-item d-flex justify-content-between"">
            <i class=""fas fa-check fa-lg""></i>
            Yes</li>
          <li class=""list-group-item d-flex justify-content-between"">
            <i class=""fas fa-check fa-lg""></i>
            Yes</li>
          <li class=""list-group-item d-flex justify-content-between"">
            <i class=""fas fa-check fa-lg""></i>
            Yes</li>
      </ul>
    </div>
  </div>
  
  <div class=""col-6 p-0 pl-1"">
    <div class=""card border-0 p-3"">
      <ul class=""list-group list-group-flush table-responsive"" style=""max-height:276px"">
          <li class=""list-group-item d-flex justify-content-around p-2"">
            <h2 style=""color:#5FBBFB"">Dislikes</h2></li>
          <li class=""list-group-item d-flex justify-content-between"">
            <i class=""fas fa-times fa-lg""></i>
            No</li>
          <li class=""list-group-item d-flex justify-content-between"">
            <i class=""fas fa-times fa-lg""></i>
            No</li>
          <li class=""list-group-item d-flex justify-content-between"">
            <i class=""fas fa-times fa-lg""></i>
            No</li>
          <li class=""list-group-item d-flex justify-content-between"">
            <i class=""fas fa-times fa-lg""></i>
            No</li>
          <li class=""list-group-item d-flex justify-content-between"">
            <i class=""fas fa-times fa-lg""></i>
            No</li>
      </ul>
    </div>
  </div>
</div>

<div class=""card card-block border-0 p-3"">
  <iframe width=""520"" height=""240"" src=""https://www.youtube.com/embed/gcmlshqyQ_s"" frameborder=""0"" class=""m-auto""></iframe>
</div>

  <!--
  for playlists, copy everything after ?list= and paste at the end:
  https://www.youtube.com/embed/videoseries?
  ^^ then add to src=
  
  for songs, right click -> embed code and add to src
  -->

</div>
</div>
<!--------- END TAB 2 --------->


<!----------- TAB 3 ----------->
<div class=""tab-pane fade"" id=""tab3"">

<div class=""row no-gutters container-fluid table-responsive p-2"" style=""height:520px"">

  <div class=""row card card-block border-0 container-fluid table-responsive m-0 p-3 mb-3"">
      <div class=""col-12 m-0 p-0 container-fluid mh-100"">
        <span class=""pull-left""><i class=""fas fa-quote-left fa-lg""></i></span>
        <span class=""pull-right""><i class=""fas fa-quote-right fa-lg""></i></span>
        <h2 style=""color:#5FBBFB"" class=""text-center p-0 my-0 mx-2"">It's too late, it's too late / You've got another one coming and it's gonna be the same</h2>
        </div>
  </div>


  <div class=""col-lg-12 card card-block border-0 container-fluid table-responsive m-0 p-3 mb-3"">
      <h2 style=""color:#5FBBFB"" class=""text-center px-1 pt-1"">Biography</h2>

    <hr class=""w-75 my-1"">
    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent tempus vehicula eros a rhoncus. Aenean auctor pallentesque elit, ut feugiat nibh molestie eu. Nunc sit amet lacus accumsan, tempus leo eu, condimentum mi. Morbi vitae ultrices sem. Aliquam euismod justo in nibh consectetur, id posuere eros viverra. In eu arcu semper, efficitur erat efficitur, faucibus mi. Duis varius rutrum arcu, eget blandit tortor convallis at. Etiam diam elit, mattis non leo eu, pharetra mattis urna.</p>
    
    <p>Nunc posuere lacus eget nisl faucibus venenatis. Donec lorem sapien, scelerisque in quam ac, condimentum mollis nisl. Donec pharetra tincidunt sem a dapibus. Mauris auctor, turpis id tristique rhoncus, metus diam vulputate ligula, eget elementum tellus neque ac metus. Donec ornare tellus interdum diam venenatis porta. Donec convallis ex in est luctus ornare. </p>
  </div>


  <div class=""col-lg-12 card card-block border-0 container-fluid table-responsive m-0 p-3 mb-3"">
      <h2 style=""color:#5FBBFB"" class=""text-center px-1 pt-1"">Personality</h2>

    <hr class=""w-75 my-1"">
    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent tempus vehicula eros a rhoncus. Aenean auctor pallentesque elit, ut feugiat nibh molestie eu. Nunc sit amet lacus accumsan, tempus leo eu, condimentum mi. Morbi vitae ultrices sem. Aliquam euismod justo in nibh consectetur, id posuere eros viverra. In eu arcu semper, efficitur erat efficitur, faucibus mi. Duis varius rutrum arcu, eget blandit tortor convallis at. Etiam diam elit, mattis non leo eu, pharetra mattis urna.</p>
    
    <p>Nunc posuere lacus eget nisl faucibus venenatis. Donec lorem sapien, scelerisque in quam ac, condimentum mollis nisl. Donec pharetra tincidunt sem a dapibus. Mauris auctor, turpis id tristique rhoncus, metus diam vulputate ligula, eget elementum tellus neque ac metus. Donec ornare tellus interdum diam venenatis porta. Donec convallis ex in est luctus ornare. </p>
  </div>

  <div class=""col-lg-12 card card-block border-0 container-fluid table-responsive m-0 p-3"">
      <h2 style=""color:#5FBBFB"" class=""text-center px-1 pt-1"">Trivia</h2>
    <hr class=""w-75 my-1"">

    <ul>
      <li style=""list-style-type: circle"">I tried to find a quiet place that we could go</li>
      <li style=""list-style-type: circle"">To help you make decisions</li>
      <li style=""list-style-type: circle"">But I didn't find it easy to tell them apart</li>
      <li style=""list-style-type: circle"">With double vision</li>
    </ul>
  </div>


</div>
</div>
<!--------- END TAB 3 --------->


<!----------- TAB 4 ----------->
<div class=""tab-pane fade"" id=""tab4"">

<div class=""row no-gutters container-fluid table-responsive"" style=""height:520px"">

<div class=""row"">
<div class=""col-md-3 text-center mb-3 h-100 p-1"">
     <img src=""https://i.imgur.com/XNO9z5Q.png"" class=""rounded-circle"" style=""max-width:130px;max-height:130px"">
 </div>
 
<div class=""col-md-9"">
    <div class=""col-md-12 p-1"" style=""min-height:167px;font-size:13px;"">
      
      <span class=""pull-right"" style=""font-size:19px"">
        <i class=""fas fa-heart""></i>
        <i class=""fas fa-heart""></i>
        <i class=""fas fa-heart""></i>
        <i class=""far fa-heart""></i>
        <i class=""far fa-heart""></i>
      </span>
      
        <h2 class=""text-left mb-0""><a href=""CHARACTER LINK"" style=""color:#5FBBFB"">Name</a></h2>
        <p class=""text-muted mb-1"" style=""font-size:14px"">Relationship</p>
        
        <p class=""text-justify"">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nibh dolor, pellentesque placerat faucibus eget, pretium non augue. Maecenas enim justo, gravida eget luctus sed, dictum et ex. Proin ut nisi eget libero condimentum mollis. Morbi maximus sapien ut ex malesuada mollis. Pellentesque rutrum velit id risus accumsan, vitae consequat risus eleifend.</p>
    </div>
</div>
</div>

    <hr class=""w-100 my-3 mx-1"">

<div class=""row"">
<div class=""col-md-3 text-center mb-3 h-100 p-1"">
     <img src=""https://i.imgur.com/XNO9z5Q.png"" class=""rounded-circle"" style=""max-width:130px;max-height:130px"">
 </div>
 
<div class=""col-md-9"">
    <div class=""col-md-12 p-1"" style=""min-height:167px;font-size:13px;"">
      
      <span class=""pull-right"" style=""font-size:19px"">
        <i class=""fas fa-heart""></i>
        <i class=""fas fa-heart""></i>
        <i class=""fas fa-heart""></i>
        <i class=""far fa-heart""></i>
        <i class=""far fa-heart""></i>
      </span>
      
        <h2 class=""text-left mb-0""><a href=""CHARACTER LINK"" style=""color:#5FBBFB"">Name</a></h2>
        <p class=""text-muted mb-1"" style=""font-size:14px"">Relationship</p>
        <p class=""text-justify"">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nibh dolor, pellentesque placerat faucibus eget, pretium non augue. Maecenas enim justo, gravida eget luctus sed, dictum et ex. Proin ut nisi eget libero condimentum mollis. Morbi maximus sapien ut ex malesuada mollis. Pellentesque rutrum velit id risus accumsan, vitae consequat risus eleifend.</p>
    </div>
</div>
</div>

    <hr class=""w-100 my-3 mx-1"">

<div class=""row"">
<div class=""col-md-3 text-center mb-3 h-100 p-1"">
     <img src=""https://i.imgur.com/XNO9z5Q.png"" class=""rounded-circle"" style=""max-width:130px;max-height:130px"">
 </div>
 
<div class=""col-md-9"">
    <div class=""col-md-12 p-1"" style=""min-height:167px;font-size:13px;"">
      
      <span class=""pull-right"" style=""font-size:19px"">
        <i class=""fas fa-heart-broken""></i>
        <i class=""fas fa-heart-broken""></i>
        <i class=""fas fa-heart-broken""></i>
        <i class=""far fa-heart""></i>
        <i class=""far fa-heart""></i>
      </span>
      
        <h2 class=""text-left mb-0""><a href=""CHARACTER LINK"" style=""color:#5FBBFB"">Name</a></h2>
        <p class=""text-muted mb-1"" style=""font-size:14px"">Relationship</p>
        <p class=""text-justify"">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nibh dolor, pellentesque placerat faucibus eget, pretium non augue. Maecenas enim justo, gravida eget luctus sed, dictum et ex. Proin ut nisi eget libero condimentum mollis. Morbi maximus sapien ut ex malesuada mollis. Pellentesque rutrum velit id risus accumsan, vitae consequat risus eleifend.</p>
    </div>
</div>
</div>

</div>
</div>
<!--------- END TAB 4 --------->

</div>
</div>

</div>
</div>
</div>

</div>
</div>

<!----- my credit! please don't touch this ----->
<div class=""m-1 text-center text-primary"" style=""font-size:14px"">
<a target=""_blank"" href=""https://toyhou.se/meromercury"" data-toggle=""tooltip"" title=""made by cass"" style=""color:#A4A4A4;font-weight:600""><i class=""fal fa-code""></i></a></div>

</div>"
