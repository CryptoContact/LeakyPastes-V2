id,title,username,language,date,content
y55SQynA,2024-04-13_stats.json,rdp_snitch,JSON,Saturday 13th of April 2024 07:18:17 PM CDT,"{
  ""ip"": {
    ""36.137.3.251"": 3,
    ""74.207.245.124"": 3,
    ""103.245.237.31"": 3,
    ""206.168.34.52"": 3,
    ""36.91.222.100"": 9,
    ""62.204.41.225"": 6,
    ""116.140.196.215"": 6,
    ""128.199.225.179"": 2160,
    ""58.218.204.183"": 9,
    ""87.251.75.64"": 3,
    ""205.210.31.40"": 9,
    ""212.41.9.9"": 18,
    ""45.227.254.54"": 12,
    ""185.170.144.3"": 3,
    ""80.66.76.92"": 9,
    ""152.32.228.20"": 3,
    ""196.190.117.7"": 6,
    ""198.235.24.87"": 9,
    ""91.238.181.16"": 3,
    ""87.251.75.145"": 3,
    ""173.255.206.80"": 12,
    ""45.33.43.23"": 3,
    ""94.232.46.132"": 3,
    ""64.225.18.13"": 60,
    ""93.177.66.5"": 30,
    ""45.175.173.33"": 9,
    ""205.210.31.97"": 9,
    ""190.186.122.2"": 3,
    ""185.11.61.106"": 3,
    ""112.4.139.162"": 3,
    ""45.227.254.26"": 6,
    ""159.65.44.224"": 6,
    ""194.165.16.78"": 6,
    ""193.53.245.249"": 9,
    ""167.94.145.60"": 3,
    ""198.235.24.232"": 9
  },
  ""asn"": {
    ""AS9808"": 3,
    ""AS63949"": 18,
    ""AS150867"": 3,
    ""AS398324"": 3,
    ""AS7713"": 9,
    ""AS59425"": 6,
    ""AS4837"": 6,
    ""AS14061"": 2226,
    ""AS4134"": 9,
    ""AS208091"": 15,
    ""AS396982"": 36,
    ""AS49505"": 18,
    ""AS267784"": 18,
    ""AS197414"": 3,
    ""AS135377"": 3,
    ""AS24757"": 6,
    ""AS49434"": 3,
    ""AS212482"": 3,
    ""AS197540"": 30,
    ""AS268902"": 9,
    ""AS25620"": 3,
    ""AS57523"": 3,
    ""AS56046"": 3,
    ""AS48721"": 6,
    ""AS209711"": 9,
    ""AS398705"": 3
  },
  ""isp"": {
    ""China Mobile"": 3,
    ""Akamai Technologies, Inc."": 18,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 3,
    ""Censys, Inc."": 6,
    ""PT Telekomunikasi Indonesia"": 9,
    ""Horizon LLC"": 6,
    ""China Unicom CHINA169 Network"": 6,
    ""DigitalOcean, LLC"": 2226,
    ""Chinanet"": 9,
    ""Xhost Internet Solutions LP"": 21,
    ""Google LLC"": 36,
    ""OOO \""Network of data-centers \""Selectel\"""": 18,
    ""Flyservers S.A."": 24,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Ethiotelecom"": 6,
    ""Datacenter location PAR1 France"": 3,
    ""netcup GmbH"": 30,
    ""DANIEL CARVALHO DE OLIVEIRA SILVA \u00ad ME"": 9,
    ""Cotas Ltda."": 3,
    ""Chang Way Technologies Co. Limited"": 3,
    ""China Mobile Communications Corporation"": 3,
    ""MUV Bilisim ve Telekomunikasyon Hizmetleri Ltd. Sti"": 9
  },
  ""org"": {
    ""China Mobile Communications Corporation"": 6,
    ""Linode"": 18,
    ""LP Technology Electronic Commerce Company Limited"": 3,
    ""Censys Inc"": 3,
    ""Telekomunikasi Indonesia"": 9,
    ""Horizon LLC"": 6,
    ""China United Network Communications Corporation Limited"": 6,
    ""DigitalOcean, LLC"": 2220,
    ""Chinanet JS"": 9,
    ""Xhost Internet Solutions"": 15,
    ""Palo Alto Networks, Inc"": 36,
    ""Unknown"": 24,
    ""UAB Host Baltic"": 18,
    ""Xhostis"": 3,
    ""Ucloud Information Technology"": 3,
    ""ThinkTech Technology Industrial CO. Limited"": 3,
    ""Dmitriy Panchenko"": 3,
    ""netcup GmbH"": 30,
    ""DANIEL CARVALHO DE OLIVEIRA SILVA \u00ad ME"": 9,
    ""Adsl-ip-dinamica - Plan"": 3,
    ""Starcrecium Limited"": 3,
    ""Digital Ocean"": 6,
    ""Flyservers S.A"": 6,
    ""MUVHost - Vodafone Tuzla"": 9,
    ""Censys, Inc."": 3
  },
  ""regionName"": {
    ""Guangdong"": 3,
    ""California"": 42,
    ""Ho Chi Minh"": 3,
    ""Illinois"": 3,
    ""Jakarta"": 9,
    ""Moscow"": 27,
    ""Beijing"": 6,
    ""Central Singapore"": 2160,
    ""Jiangsu"": 12,
    ""North Holland"": 18,
    ""Vilnius"": 18,
    ""Addis Ababa"": 6,
    ""\u00cele-de-France"": 3,
    ""Texas"": 12,
    ""Perm Krai"": 3,
    ""New Jersey"": 66,
    ""Bavaria"": 30,
    ""Minas Gerais"": 9,
    ""Santa Cruz Department"": 3,
    ""Chechnya"": 3,
    ""Kaunas"": 6,
    ""Istanbul"": 9,
    ""Hesse"": 3
  },
  ""country"": {
    ""China"": 21,
    ""United States"": 123,
    ""Vietnam"": 3,
    ""Indonesia"": 9,
    ""Russia"": 33,
    ""Singapore"": 2160,
    ""The Netherlands"": 18,
    ""Lithuania"": 24,
    ""Ethiopia"": 6,
    ""France"": 3,
    ""Germany"": 33,
    ""Brazil"": 9,
    ""Bolivia"": 3,
    ""Turkey"": 9
  },
  ""account"": {
    ""hello"": 2295,
    ""(empty)"": 18,
    ""Test"": 45,
    ""Administr"": 24,
    ""TgnJvWeKh"": 3,
    ""cvjoMx"": 3,
    ""zwuPkb"": 3,
    ""Domain"": 18,
    ""Administrator"": 3,
    ""TYUCzidWn"": 3,
    ""YFbnZs"": 3,
    ""pCAnjC"": 3,
    ""sfqbwom7"": 12,
    ""beio"": 3,
    ""qAGQsvwie"": 3,
    ""PyJLWd"": 3,
    ""MeOnpY"": 3,
    ""JZRcVmAMX"": 3,
    ""MKTHDD"": 3,
    ""cYQNHj"": 3
  },
  ""keyboard"": {
    ""Unknown"": 2454
  },
  ""client_build"": {
    ""Unknown"": 2454
  },
  ""client_name"": {
    ""Unknown"": 2454
  },
  ""ip_type"": {
    ""mobile"": 6,
    ""hosting"": 2268,
    ""Unknown"": 108,
    ""proxy"": 6,
    ""hosting & proxy"": 66
  }
}"
hf1JNc3r,2024-04-13_stats.json,rdp_snitch,JSON,Saturday 13th of April 2024 07:16:06 PM CDT,"{
  ""ip"": {
    ""36.137.3.251"": 2,
    ""74.207.245.124"": 2,
    ""103.245.237.31"": 2,
    ""206.168.34.52"": 2,
    ""36.91.222.100"": 6,
    ""62.204.41.225"": 4,
    ""116.140.196.215"": 4,
    ""128.199.225.179"": 1440,
    ""58.218.204.183"": 6,
    ""87.251.75.64"": 2,
    ""205.210.31.40"": 6,
    ""212.41.9.9"": 12,
    ""45.227.254.54"": 8,
    ""185.170.144.3"": 2,
    ""80.66.76.92"": 6,
    ""152.32.228.20"": 2,
    ""196.190.117.7"": 4,
    ""198.235.24.87"": 6,
    ""91.238.181.16"": 2,
    ""87.251.75.145"": 2,
    ""173.255.206.80"": 8,
    ""45.33.43.23"": 2,
    ""94.232.46.132"": 2,
    ""64.225.18.13"": 40,
    ""93.177.66.5"": 20,
    ""45.175.173.33"": 6,
    ""205.210.31.97"": 6,
    ""190.186.122.2"": 2,
    ""185.11.61.106"": 2,
    ""112.4.139.162"": 2,
    ""45.227.254.26"": 4,
    ""159.65.44.224"": 4,
    ""194.165.16.78"": 4,
    ""193.53.245.249"": 6,
    ""167.94.145.60"": 2,
    ""198.235.24.232"": 6
  },
  ""asn"": {
    ""AS9808"": 2,
    ""AS63949"": 12,
    ""AS150867"": 2,
    ""AS398324"": 2,
    ""AS7713"": 6,
    ""AS59425"": 4,
    ""AS4837"": 4,
    ""AS14061"": 1484,
    ""AS4134"": 6,
    ""AS208091"": 10,
    ""AS396982"": 24,
    ""AS49505"": 12,
    ""AS267784"": 12,
    ""AS197414"": 2,
    ""AS135377"": 2,
    ""AS24757"": 4,
    ""AS49434"": 2,
    ""AS212482"": 2,
    ""AS197540"": 20,
    ""AS268902"": 6,
    ""AS25620"": 2,
    ""AS57523"": 2,
    ""AS56046"": 2,
    ""AS48721"": 4,
    ""AS209711"": 6,
    ""AS398705"": 2
  },
  ""isp"": {
    ""China Mobile"": 2,
    ""Akamai Technologies, Inc."": 12,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 2,
    ""Censys, Inc."": 4,
    ""PT Telekomunikasi Indonesia"": 6,
    ""Horizon LLC"": 4,
    ""China Unicom CHINA169 Network"": 4,
    ""DigitalOcean, LLC"": 1484,
    ""Chinanet"": 6,
    ""Xhost Internet Solutions LP"": 14,
    ""Google LLC"": 24,
    ""OOO \""Network of data-centers \""Selectel\"""": 12,
    ""Flyservers S.A."": 16,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Ethiotelecom"": 4,
    ""Datacenter location PAR1 France"": 2,
    ""netcup GmbH"": 20,
    ""DANIEL CARVALHO DE OLIVEIRA SILVA \u00ad ME"": 6,
    ""Cotas Ltda."": 2,
    ""Chang Way Technologies Co. Limited"": 2,
    ""China Mobile Communications Corporation"": 2,
    ""MUV Bilisim ve Telekomunikasyon Hizmetleri Ltd. Sti"": 6
  },
  ""org"": {
    ""China Mobile Communications Corporation"": 4,
    ""Linode"": 12,
    ""LP Technology Electronic Commerce Company Limited"": 2,
    ""Censys Inc"": 2,
    ""Telekomunikasi Indonesia"": 6,
    ""Horizon LLC"": 4,
    ""China United Network Communications Corporation Limited"": 4,
    ""DigitalOcean, LLC"": 1480,
    ""Chinanet JS"": 6,
    ""Xhost Internet Solutions"": 10,
    ""Palo Alto Networks, Inc"": 24,
    ""Unknown"": 16,
    ""UAB Host Baltic"": 12,
    ""Xhostis"": 2,
    ""Ucloud Information Technology"": 2,
    ""ThinkTech Technology Industrial CO. Limited"": 2,
    ""Dmitriy Panchenko"": 2,
    ""netcup GmbH"": 20,
    ""DANIEL CARVALHO DE OLIVEIRA SILVA \u00ad ME"": 6,
    ""Adsl-ip-dinamica - Plan"": 2,
    ""Starcrecium Limited"": 2,
    ""Digital Ocean"": 4,
    ""Flyservers S.A"": 4,
    ""MUVHost - Vodafone Tuzla"": 6,
    ""Censys, Inc."": 2
  },
  ""regionName"": {
    ""Guangdong"": 2,
    ""California"": 28,
    ""Ho Chi Minh"": 2,
    ""Illinois"": 2,
    ""Jakarta"": 6,
    ""Moscow"": 18,
    ""Beijing"": 4,
    ""Central Singapore"": 1440,
    ""Jiangsu"": 8,
    ""North Holland"": 12,
    ""Vilnius"": 12,
    ""Addis Ababa"": 4,
    ""\u00cele-de-France"": 2,
    ""Texas"": 8,
    ""Perm Krai"": 2,
    ""New Jersey"": 44,
    ""Bavaria"": 20,
    ""Minas Gerais"": 6,
    ""Santa Cruz Department"": 2,
    ""Chechnya"": 2,
    ""Kaunas"": 4,
    ""Istanbul"": 6,
    ""Hesse"": 2
  },
  ""country"": {
    ""China"": 14,
    ""United States"": 82,
    ""Vietnam"": 2,
    ""Indonesia"": 6,
    ""Russia"": 22,
    ""Singapore"": 1440,
    ""The Netherlands"": 12,
    ""Lithuania"": 16,
    ""Ethiopia"": 4,
    ""France"": 2,
    ""Germany"": 22,
    ""Brazil"": 6,
    ""Bolivia"": 2,
    ""Turkey"": 6
  },
  ""account"": {
    ""hello"": 1530,
    ""(empty)"": 12,
    ""Test"": 30,
    ""Administr"": 16,
    ""TgnJvWeKh"": 2,
    ""cvjoMx"": 2,
    ""zwuPkb"": 2,
    ""Domain"": 12,
    ""Administrator"": 2,
    ""TYUCzidWn"": 2,
    ""YFbnZs"": 2,
    ""pCAnjC"": 2,
    ""sfqbwom7"": 8,
    ""beio"": 2,
    ""qAGQsvwie"": 2,
    ""PyJLWd"": 2,
    ""MeOnpY"": 2,
    ""JZRcVmAMX"": 2,
    ""MKTHDD"": 2,
    ""cYQNHj"": 2
  },
  ""keyboard"": {
    ""Unknown"": 1636
  },
  ""client_build"": {
    ""Unknown"": 1636
  },
  ""client_name"": {
    ""Unknown"": 1636
  },
  ""ip_type"": {
    ""mobile"": 4,
    ""hosting"": 1512,
    ""Unknown"": 72,
    ""proxy"": 4,
    ""hosting & proxy"": 44
  }
}"
Juc2Pu1j,23H2.xml,Chibibowa,XML,Saturday 13th of April 2024 07:15:21 PM CDT,"﻿<?xml version=""1.0"" encoding=""utf-8""?>
<Preset isAutoSaved=""true"" xmlns=""urn:schemas-nliteos-com:pn.v1"">
	<Date>01/01/1981 00:00:00</Date>
	<AppInfo>
		<Version>2024.4.9860</Version>
		<Licensed>Yes</Licensed>
		<Protections>Yes</Protections>
	</AppInfo>
	<RemoveComponents AppRemovalMode=""DISM"">
		<c>aarsvc 'Agent Activation Runtime'</c>
		<c>accessibility 'Accessibility tools (Ease of Access)'</c>
		<c>accessibility_cursors 'Mouse Pointers (Accessibility tools)'</c>
		<c>accessibility_magnifier 'Screen Magnifier'</c>
		<c>accessibility_narrator 'Narrator'</c>
		<c>alljoyn 'AllJoyn Router Service'</c>
		<c>appid 'Application Identity Service'</c>
		<c>apptargetedfeaturedb 'Application Targeted Feature Database'</c>
		<c>appv 'Application Virtualization (App-V)'</c>
		<c>asimov 'Telemetry Client'</c>
		<c>assembly.net '.NET assembly cache'</c>
		<c>assignedaccess 'Assigned Access'</c>
		<c>audit 'Windows Audit'</c>
		<c>autoplay</c>
		<c>axinstall 'ActiveX Installer Service'</c>
		<c>backup 'Backup and Restore'</c>
		<c>bingsearch 'Bing Search (InboxApp)'</c>
		<c>branchcacheclient 'BranchCache Client'</c>
		<c>ceip 'CEIP (SQM)'</c>
		<c>clipchamp.clipchamp 'Clipchamp'</c>
		<c>clouddesktop 'Cloud Desktop'</c>
		<c>clouddownload 'Windows Recovery (WinRE) - Cloud download'</c>
		<c>cloudnotifications 'Cloud Notifications'</c>
		<c>cursors 'Mouse Pointers'</c>
		<c>desktopactivitymoderator 'Desktop Activity Moderator (DAM)'</c>
		<c>desktopimgdownldr 'Desktop image downloader'</c>
		<c>deviceexperience 'Device Experience'</c>
		<c>devicesetupmanager 'Device Setup Manager'</c>
		<c>devicesync 'Microsoft Sync Framework'</c>
		<c>deviceupdatecenter 'Device Update Center'</c>
		<c>dolbyatmos 'Dolby Atmos codec pack'</c>
		<c>driver_athw8x.inf</c>
		<c>driver_b57nd60a.inf</c>
		<c>driver_bcmdhd64.inf</c>
		<c>driver_bcmwdidhdpcie.inf</c>
		<c>driver_bthpan.inf</c>
		<c>driver_c_barcodescanner.inf</c>
		<c>driver_c_cashdrawer.inf</c>
		<c>driver_c_fdc.inf</c>
		<c>driver_c_floppydisk.inf</c>
		<c>driver_c_infrared.inf</c>
		<c>driver_c_linedisplay.inf</c>
		<c>driver_c_magneticstripereader.inf</c>
		<c>driver_c_receiptprinter.inf</c>
		<c>driver_dc21x4vm.inf</c>
		<c>driver_e2xw10x64.inf</c>
		<c>driver_fdc.inf</c>
		<c>driver_flpydisk.inf</c>
		<c>driver_helloface.inf</c>
		<c>driver_hidir.inf</c>
		<c>driver_hidirkbd.inf</c>
		<c>driver_hidscanner.inf</c>
		<c>driver_hidtelephonydriver.inf</c>
		<c>driver_idtsec.inf</c>
		<c>driver_ipoib6x.inf</c>
		<c>driver_kdnic.inf</c>
		<c>driver_mdm3com.inf</c>
		<c>driver_mdm5674a.inf</c>
		<c>driver_mdmadc.inf</c>
		<c>driver_mdmagm64.inf</c>
		<c>driver_mdmags64.inf</c>
		<c>driver_mdmairte.inf</c>
		<c>driver_mdmaiwa.inf</c>
		<c>driver_mdmaiwa3.inf</c>
		<c>driver_mdmaiwa4.inf</c>
		<c>driver_mdmaiwa5.inf</c>
		<c>driver_mdmaiwat.inf</c>
		<c>driver_mdmar1.inf</c>
		<c>driver_mdmarch.inf</c>
		<c>driver_mdmarn.inf</c>
		<c>driver_mdmati.inf</c>
		<c>driver_mdmatm2k.inf</c>
		<c>driver_mdmaus.inf</c>
		<c>driver_mdmboca.inf</c>
		<c>driver_mdmbsb.inf</c>
		<c>driver_mdmbtmdm.inf</c>
		<c>driver_mdmbug3.inf</c>
		<c>driver_mdmbw561.inf</c>
		<c>driver_mdmc26a.inf</c>
		<c>driver_mdmcdp.inf</c>
		<c>driver_mdmcm28.inf</c>
		<c>driver_mdmcodex.inf</c>
		<c>driver_mdmcom1.inf</c>
		<c>driver_mdmcommu.inf</c>
		<c>driver_mdmcomp.inf</c>
		<c>driver_mdmcpq.inf</c>
		<c>driver_mdmcpq2.inf</c>
		<c>driver_mdmcpv.inf</c>
		<c>driver_mdmcrtix.inf</c>
		<c>driver_mdmcxhv6.inf</c>
		<c>driver_mdmcxpv6.inf</c>
		<c>driver_mdmdcm5.inf</c>
		<c>driver_mdmdcm6.inf</c>
		<c>driver_mdmdf56f.inf</c>
		<c>driver_mdmdgitn.inf</c>
		<c>driver_mdmdp2.inf</c>
		<c>driver_mdmdsi.inf</c>
		<c>driver_mdmdyna.inf</c>
		<c>driver_mdmeiger.inf</c>
		<c>driver_mdmelsa.inf</c>
		<c>driver_mdmeric.inf</c>
		<c>driver_mdmeric2.inf</c>
		<c>driver_mdmetech.inf</c>
		<c>driver_mdmfj2.inf</c>
		<c>driver_mdmgatew.inf</c>
		<c>driver_mdmgcs.inf</c>
		<c>driver_mdmgen.inf</c>
		<c>driver_mdmgl001.inf</c>
		<c>driver_mdmgl002.inf</c>
		<c>driver_mdmgl003.inf</c>
		<c>driver_mdmgl004.inf</c>
		<c>driver_mdmgl005.inf</c>
		<c>driver_mdmgl006.inf</c>
		<c>driver_mdmgl007.inf</c>
		<c>driver_mdmgl008.inf</c>
		<c>driver_mdmgl009.inf</c>
		<c>driver_mdmgl010.inf</c>
		<c>driver_mdmgsm.inf</c>
		<c>driver_mdmhaeu.inf</c>
		<c>driver_mdmhandy.inf</c>
		<c>driver_mdmhay2.inf</c>
		<c>driver_mdmhayes.inf</c>
		<c>driver_mdminfot.inf</c>
		<c>driver_mdmiodat.inf</c>
		<c>driver_mdmirmdm.inf</c>
		<c>driver_mdmisdn.inf</c>
		<c>driver_mdmjf56e.inf</c>
		<c>driver_mdmke.inf</c>
		<c>driver_mdmkortx.inf</c>
		<c>driver_mdmlasat.inf</c>
		<c>driver_mdmlasno.inf</c>
		<c>driver_mdmlucnt.inf</c>
		<c>driver_mdmmc288.inf</c>
		<c>driver_mdmmcd.inf</c>
		<c>driver_mdmmcom.inf</c>
		<c>driver_mdmmct.inf</c>
		<c>driver_mdmmega.inf</c>
		<c>driver_mdmmetri.inf</c>
		<c>driver_mdmmhrtz.inf</c>
		<c>driver_mdmmhzel.inf</c>
		<c>driver_mdmminij.inf</c>
		<c>driver_mdmmod.inf</c>
		<c>driver_mdmmot64.inf</c>
		<c>driver_mdmmoto1.inf</c>
		<c>driver_mdmmotou.inf</c>
		<c>driver_mdmmts.inf</c>
		<c>driver_mdmneuhs.inf</c>
		<c>driver_mdmnis1u.inf</c>
		<c>driver_mdmnis2u.inf</c>
		<c>driver_mdmnis3t.inf</c>
		<c>driver_mdmnis5t.inf</c>
		<c>driver_mdmnokia.inf</c>
		<c>driver_mdmnova.inf</c>
		<c>driver_mdmntt1.inf</c>
		<c>driver_mdmnttd2.inf</c>
		<c>driver_mdmnttd6.inf</c>
		<c>driver_mdmnttme.inf</c>
		<c>driver_mdmnttp.inf</c>
		<c>driver_mdmnttp2.inf</c>
		<c>driver_mdmnttte.inf</c>
		<c>driver_mdmolic.inf</c>
		<c>driver_mdmomrn3.inf</c>
		<c>driver_mdmoptn.inf</c>
		<c>driver_mdmosi.inf</c>
		<c>driver_mdmpace.inf</c>
		<c>driver_mdmpenr.inf</c>
		<c>driver_mdmpin.inf</c>
		<c>driver_mdmpn1.inf</c>
		<c>driver_mdmpp.inf</c>
		<c>driver_mdmpsion.inf</c>
		<c>driver_mdmracal.inf</c>
		<c>driver_mdmrock.inf</c>
		<c>driver_mdmrock3.inf</c>
		<c>driver_mdmrock4.inf</c>
		<c>driver_mdmrock5.inf</c>
		<c>driver_mdmsier.inf</c>
		<c>driver_mdmsii64.inf</c>
		<c>driver_mdmsmart.inf</c>
		<c>driver_mdmsonyu.inf</c>
		<c>driver_mdmsun1.inf</c>
		<c>driver_mdmsun2.inf</c>
		<c>driver_mdmsupr3.inf</c>
		<c>driver_mdmsupra.inf</c>
		<c>driver_mdmsuprv.inf</c>
		<c>driver_mdmtdk.inf</c>
		<c>driver_mdmtdkj2.inf</c>
		<c>driver_mdmtdkj3.inf</c>
		<c>driver_mdmtdkj4.inf</c>
		<c>driver_mdmtdkj5.inf</c>
		<c>driver_mdmtdkj6.inf</c>
		<c>driver_mdmtdkj7.inf</c>
		<c>driver_mdmtexas.inf</c>
		<c>driver_mdmti.inf</c>
		<c>driver_mdmtkr.inf</c>
		<c>driver_mdmtron.inf</c>
		<c>driver_mdmusrf.inf</c>
		<c>driver_mdmusrg.inf</c>
		<c>driver_mdmusrgl.inf</c>
		<c>driver_mdmusrk1.inf</c>
		<c>driver_mdmusrsp.inf</c>
		<c>driver_mdmvdot.inf</c>
		<c>driver_mdmvv.inf</c>
		<c>driver_mdmwhql0.inf</c>
		<c>driver_mdmx5560.inf</c>
		<c>driver_mdmzoom.inf</c>
		<c>driver_mdmzyp.inf</c>
		<c>driver_mdmzyxel.inf</c>
		<c>driver_mdmzyxlg.inf</c>
		<c>driver_mf.inf</c>
		<c>driver_mgtdyn.inf</c>
		<c>driver_mrvlpcie8897.inf</c>
		<c>driver_msdri.inf</c>
		<c>driver_msux64w10.inf</c>
		<c>driver_net1ic64.inf</c>
		<c>driver_net1yx64.inf</c>
		<c>driver_net2ic68.inf</c>
		<c>driver_net44amd.inf</c>
		<c>driver_net7400-x64-n650.inf</c>
		<c>driver_net7500-x64-n650f.inf</c>
		<c>driver_net7800-x64-n650f.inf</c>
		<c>driver_net8187bv64.inf</c>
		<c>driver_net8192se64.inf</c>
		<c>driver_net9500-x64-n650f.inf</c>
		<c>driver_netathr10x.inf</c>
		<c>driver_netathrx.inf</c>
		<c>driver_netax88179_178a.inf</c>
		<c>driver_netax88772.inf</c>
		<c>driver_netbc63a.inf</c>
		<c>driver_netbc64.inf</c>
		<c>driver_netbxnd0a.inf</c>
		<c>driver_netbxnda.inf</c>
		<c>driver_nete1e3e.inf</c>
		<c>driver_nete1g3e.inf</c>
		<c>driver_netefe3e.inf</c>
		<c>driver_netelx.inf</c>
		<c>driver_netg664.inf</c>
		<c>driver_netimm.inf</c>
		<c>driver_netjme.inf</c>
		<c>driver_netk57a.inf</c>
		<c>driver_netl160a.inf</c>
		<c>driver_netl1c63x64.inf</c>
		<c>driver_netl1e64.inf</c>
		<c>driver_netl260a.inf</c>
		<c>driver_netmlx4eth63.inf</c>
		<c>driver_netmlx5.inf</c>
		<c>driver_netmyk64.inf</c>
		<c>driver_netnvm64.inf</c>
		<c>driver_netnvma.inf</c>
		<c>driver_netr28ux.inf</c>
		<c>driver_netr28x.inf</c>
		<c>driver_netr7364.inf</c>
		<c>driver_netrtl64.inf</c>
		<c>driver_netrtwlane.inf</c>
		<c>driver_netrtwlane01.inf</c>
		<c>driver_netrtwlane_13.inf</c>
		<c>driver_netrtwlans.inf</c>
		<c>driver_netrtwlanu.inf</c>
		<c>driver_nett4x64.inf</c>
		<c>driver_netv1x64.inf</c>
		<c>driver_netvchannel.inf</c>
		<c>driver_netvf63a.inf</c>
		<c>driver_netvg63a.inf</c>
		<c>driver_netwbw02.inf</c>
		<c>driver_netwew00.inf</c>
		<c>driver_netwew01.inf</c>
		<c>driver_netwlv64.inf</c>
		<c>driver_netwns64.inf</c>
		<c>driver_netwsw00.inf</c>
		<c>driver_netwtw02.inf</c>
		<c>driver_netwtw04.inf</c>
		<c>driver_netwtw06.inf</c>
		<c>driver_netwtw08.inf</c>
		<c>driver_netwtw10.inf</c>
		<c>driver_netxex64.inf</c>
		<c>driver_perceptionsimulationheadset.inf</c>
		<c>driver_qcwlan64.inf</c>
		<c>driver_rdpbus.inf</c>
		<c>driver_remoteposdrv.inf</c>
		<c>driver_rt640x64.inf</c>
		<c>driver_rtcx21x64.inf</c>
		<c>driver_rtucx21x64.inf</c>
		<c>driver_rtux64w10.inf</c>
		<c>driver_rtvdevx64.inf</c>
		<c>driver_rtwlanu_oldic.inf</c>
		<c>driver_spaceport.inf</c>
		<c>driver_termbus.inf</c>
		<c>driver_termkbd.inf</c>
		<c>driver_termmou.inf</c>
		<c>driver_ts_generic.inf</c>
		<c>driver_tsgenericusbdriver.inf</c>
		<c>driver_tsprint.inf</c>
		<c>driver_tsusbhubfilter.inf</c>
		<c>driver_usb4p2pnetadapter.inf</c>
		<c>driver_usbcir.inf</c>
		<c>driver_usbncm.inf</c>
		<c>driver_usbnet.inf</c>
		<c>driver_vmxnet3.inf</c>
		<c>driver_ykinx64.inf</c>
		<c>e2a4f912-2574-4a75-9bb0-0d023378592b 'App Resolver'</c>
		<c>easeofaccessthemes 'Ease Of Access Themes'</c>
		<c>edgehtml32 'HTML Viewer - 32 bit'</c>
		<c>edgeupdate 'Microsoft Edge Update'</c>
		<c>edgewebview 'Microsoft Edge WebView'</c>
		<c>edgewebviewlegacy 'WebView2 Runtime (Legacy)'</c>
		<c>embeddedexperience 'Device Lockdown (Embedded Experience)'</c>
		<c>embeddedmode 'Embedded Mode'</c>
		<c>enterpriseclientsync 'Work Folders Client'</c>
		<c>enterprisedataprotection 'Enterprise Data Protection (EDP/WIP)'</c>
		<c>errorreporting 'Windows Error Reporting'</c>
		<c>f46d4000-fd22-4db4-ac8e-4e1ddde828fe 'Add Folder Suggestions dialog'</c>
		<c>facerecognition 'Face Recognition'</c>
		<c>fciclient 'File Server Resource Manager'</c>
		<c>filehistory 'File History'</c>
		<c>filerevocationmanager 'File Revocation Manager - 32 bit'</c>
		<c>flipgridpwa 'Flipgrid PWA (InboxApp)'</c>
		<c>font_arialblack 'Arial Black'</c>
		<c>font_bahnschrift 'Bahnschrift'</c>
		<c>font_calibri 'Calibri'</c>
		<c>font_cambria 'Cambria'</c>
		<c>font_cambria_regular 'Cambria &amp; Cambria Math'</c>
		<c>font_candara 'Candara'</c>
		<c>font_comicsansms 'ComicSansMS'</c>
		<c>font_consolas 'Consolas'</c>
		<c>font_constantia 'Constantia'</c>
		<c>font_corbel 'Corbel'</c>
		<c>font_courier 'Courier'</c>
		<c>font_ebrima 'Ebrima'</c>
		<c>font_ebrimabold 'Ebrima Bold'</c>
		<c>font_fixed 'Fixed'</c>
		<c>font_franklingothic 'FranklinGothic'</c>
		<c>font_gabriola 'Gabriola'</c>
		<c>font_gadugi 'Gadugi'</c>
		<c>font_gadugibold 'Gadugi Bold'</c>
		<c>font_georgia 'Georgia'</c>
		<c>font_holomd2 'Holo MDL2 Assets'</c>
		<c>font_impact 'Impact'</c>
		<c>font_inkfree 'Ink Free'</c>
		<c>font_javanesetext 'Javanese Text'</c>
		<c>font_leelawadeeui 'LeelawadeeUI'</c>
		<c>font_leelawadeeui_regular 'Leelawadee UI'</c>
		<c>font_lucidaconsole 'Lucida Console'</c>
		<c>font_lucidasans 'Lucida Sans Unicode'</c>
		<c>font_malgungothic 'Malgun Gothic'</c>
		<c>font_malgungothicbold 'Malgun Gothic Bold'</c>
		<c>font_malgungothicsemilight 'Malgun Gothic SemiLight'</c>
		<c>font_microsofthimalaya 'Microsoft Himalaya'</c>
		<c>font_microsoftjhenghei 'Microsoft JhengHei &amp; Microsoft JhengHei UI'</c>
		<c>font_microsoftjhengheibold 'Microsoft JhengHei Bold &amp; Microsoft JhengHei UI Bold'</c>
		<c>font_microsoftjhengheilight 'Microsoft JhengHei Light &amp; Microsoft JhengHei UI Light'</c>
		<c>font_microsoftsansserif 'Microsoft Sans Serif'</c>
		<c>font_microsoftyahei 'Microsoft YaHei &amp; Microsoft YaHei UI'</c>
		<c>font_microsoftyaheibold 'Microsoft YaHei Bold &amp; Microsoft YaHei UI Bold'</c>
		<c>font_microsoftyaheilight 'Microsoft YaHei Light &amp; Microsoft YaHei UI Light'</c>
		<c>font_mingliub 'MingLiU-ExtB &amp; PMingLiU-ExtB &amp; MingLiU_HKSCS-ExtB'</c>
		<c>font_mongolianbaiti 'Mongolian Baiti'</c>
		<c>font_ms_sans_serif 'MS Sans Serif'</c>
		<c>font_ms_serif 'MS Serif'</c>
		<c>font_msgothic 'MS Gothic &amp; MS UI Gothic &amp; MS PGothic'</c>
		<c>font_mvboli 'MV Boli'</c>
		<c>font_myanmartext 'Myanmar Text'</c>
		<c>font_myanmartextbold 'Myanmar Text Bold'</c>
		<c>font_newtailue 'Microsoft New Tai Lue'</c>
		<c>font_newtailuebold 'Microsoft New Tai Lue Bold'</c>
		<c>font_nirmalaui 'NirmalaUI'</c>
		<c>font_palatinolinotype 'PalatinoLinotype'</c>
		<c>font_phagspa 'Microsoft PhagsPa'</c>
		<c>font_phagspabold 'Microsoft PhagsPa Bold'</c>
		<c>font_sans_serif_collection 'Sans Serif Collection'</c>
		<c>font_segoe_ui_variable 'Segoe UI Variable'</c>
		<c>font_segoeprint 'Segoe Print'</c>
		<c>font_segoeprintbold 'Segoe Print Bold'</c>
		<c>font_segoescript 'SegoeScript'</c>
		<c>font_segoeui_italicssupplement 'SegoeUI ItalicsSupplement'</c>
		<c>font_simsun 'SimSun &amp; NSimSun'</c>
		<c>font_simsunb 'SimSun-ExtB'</c>
		<c>font_sitka 'Sitka'</c>
		<c>font_sylfaen 'Sylfaen'</c>
		<c>font_tahoma 'Tahoma'</c>
		<c>font_taile 'Microsoft Tai Le'</c>
		<c>font_tailebold 'Microsoft Tai Le Bold'</c>
		<c>font_trebuchetms 'TrebuchetMS'</c>
		<c>font_vector 'Vector'</c>
		<c>font_yibaiti 'Microsoft Yi Baiti'</c>
		<c>font_yugothic 'Yu Gothic Regular &amp; Yu Gothic UI Semilight'</c>
		<c>font_yugothicbold 'Yu Gothic Bold &amp; Yu Gothic UI Semibold &amp; Yu Gothic UI Bold'</c>
		<c>font_yugothiclight 'Yu Gothic Light &amp; Yu Gothic UI Light'</c>
		<c>font_yugothicmedium 'Yu Gothic Medium &amp; Yu Gothic UI Regular'</c>
		<c>gameexplorer 'Game Explorer'</c>
		<c>guardedhost 'Guarded Host'</c>
		<c>help 'Windows Help content'</c>
		<c>helpsupport 'Help file support (CHM)'</c>
		<c>hwsupport_floppy 'Floppy disk'</c>
		<c>hwsupport_infrared 'Infrared devices'</c>
		<c>hwsupport_telephony 'Telephony'</c>
		<c>hwsupport_tv 'TV Tuner codecs and support'</c>
		<c>iis 'Internet Information Server (IIS)'</c>
		<c>indeo 'Intel Indeo Codecs'</c>
		<c>inputviewexperience 'Input View Experience'</c>
		<c>insiderhub 'Windows Insider Program'</c>
		<c>internetexplorer 'Internet Explorer'</c>
		<c>internetexplorer32 'Internet Explorer - 32 bit'</c>
		<c>isoburn 'Windows Disc Image Burning Tool'</c>
		<c>kerneldebug 'Kernel Debugging'</c>
		<c>la57 '57-bit Linear Addressing'</c>
		<c>langarabic 'Arabic'</c>
		<c>langbasque 'Basque'</c>
		<c>langbulgarian 'Bulgarian'</c>
		<c>langcatalan 'Catalan'</c>
		<c>langchineses 'Chinese Simplified'</c>
		<c>langchineset 'Chinese Traditional'</c>
		<c>langcroatian 'Croatian'</c>
		<c>langczech 'Czech'</c>
		<c>langdanish 'Danish'</c>
		<c>langestonian 'Estonian'</c>
		<c>langfinnish 'Finnish'</c>
		<c>langgalician 'Galician'</c>
		<c>langgreek 'Greek'</c>
		<c>langhebrew 'Hebrew'</c>
		<c>langhungarian 'Hungarian'</c>
		<c>langime 'Input Method Editor (IME)'</c>
		<c>langimejp 'Japanese (IME)'</c>
		<c>langimeko 'Korean (IME)'</c>
		<c>langimetc 'Chinese Traditional (IME)'</c>
		<c>langindonesian 'Indonesian'</c>
		<c>langitalian 'Italian'</c>
		<c>langjapanese 'Japanese'</c>
		<c>langkorean 'Korean'</c>
		<c>langlatvian 'Latvian'</c>
		<c>langlithuanian 'Lithuanian'</c>
		<c>langnorwegian 'Norwegian'</c>
		<c>langpolish 'Polish'</c>
		<c>langportuguesebr 'Portuguese (Brazilian)'</c>
		<c>langportuguesept 'Portuguese'</c>
		<c>langromanian 'Romanian'</c>
		<c>langrussian 'Russian'</c>
		<c>langserbian 'Serbian'</c>
		<c>langslovak 'Slovak'</c>
		<c>langslovenian 'Slovenian'</c>
		<c>langspanish 'Spanish'</c>
		<c>langswedish 'Swedish'</c>
		<c>langthai 'Thai'</c>
		<c>langturkish 'Turkish'</c>
		<c>langukrainian 'Ukrainian'</c>
		<c>langvietnamese 'Vietnamese'</c>
		<c>laps 'Windows Local Administrator Password Solution(LAPS)'</c>
		<c>lcu 'Cumulative Update cache (LCU)'</c>
		<c>livecaptions 'Live Captions'</c>
		<c>lockscreens 'Lock Screen backgrounds'</c>
		<c>mail 'Windows Mail'</c>
		<c>mailcommdll 'Windows Mail Communications Library'</c>
		<c>manifestbackup 'Manifest Backup (WinSxS\Backup)'</c>
		<c>mapcontrol 'Map Control'</c>
		<c>mediaplayer32 'Windows Media Player - 32 bit'</c>
		<c>mediaplayernetworksharing 'WMP Network Sharing Service'</c>
		<c>mediaplayernetworksharing32 'WMP Network Sharing Service - 32 bit'</c>
		<c>messagingsvc 'Messaging Service'</c>
		<c>microsoft.549981c3f5f10 'Cortana'</c>
		<c>microsoft.asynctextservice 'AsyncTextService'</c>
		<c>microsoft.bingnews 'Microsoft News'</c>
		<c>microsoft.bingweather 'MSN Weather'</c>
		<c>microsoft.bioenrollment 'Windows Hello Setup'</c>
		<c>microsoft.ecapp 'Eye Control'</c>
		<c>microsoft.gamingapp 'Xbox App'</c>
		<c>microsoft.gethelp 'Get Help'</c>
		<c>microsoft.getstarted 'Tips (Get Started)'</c>
		<c>microsoft.lockapp 'Windows Default Lock Screen'</c>
		<c>microsoft.microsoftedge 'Microsoft Edge (Legacy)'</c>
		<c>microsoft.microsoftedge.stable 'Microsoft Edge (Chromium)'</c>
		<c>microsoft.microsoftedgedevtoolsclient 'Microsoft Edge DevTools Client'</c>
		<c>microsoft.microsoftofficehub 'Office'</c>
		<c>microsoft.microsoftsolitairecollection 'Microsoft Solitaire Collection'</c>
		<c>microsoft.microsoftstickynotes 'Microsoft Sticky Notes'</c>
		<c>microsoft.people 'Microsoft People'</c>
		<c>microsoft.powerautomatedesktop 'Power Automate'</c>
		<c>microsoft.screensketch 'Snipping Tool'</c>
		<c>microsoft.sechealthui 'Windows Defender'</c>
		<c>microsoft.todos 'Microsoft To Do'</c>
		<c>microsoft.ui.xaml.2.7</c>
		<c>microsoft.webmediaextensions 'Web Media Extensions'</c>
		<c>microsoft.windows.apprep.chxapp 'SmartScreen'</c>
		<c>microsoft.windows.assignedaccesslockapp 'Assigned Access Lock app'</c>
		<c>microsoft.windows.callingshellapp 'Call'</c>
		<c>microsoft.windows.contentdeliverymanager 'Content Delivery Manager'</c>
		<c>microsoft.windows.narratorquickstart 'Narrator'</c>
		<c>microsoft.windows.oobenetworkcaptiveportal 'Captive Portal Flow'</c>
		<c>microsoft.windows.oobenetworkconnectionflow 'Network Connection Flow'</c>
		<c>microsoft.windows.parentalcontrols 'Microsoft family features'</c>
		<c>microsoft.windows.peopleexperiencehost 'Windows Shell Experience'</c>
		<c>microsoft.windows.photos 'Microsoft Photos'</c>
		<c>microsoft.windows.secureassessmentbrowser 'Examen'</c>
		<c>microsoft.windowsalarms 'Windows Clock'</c>
		<c>microsoft.windowscamera 'Windows Camera'</c>
		<c>microsoft.windowscommunicationsapps 'Mail and Calendar'</c>
		<c>microsoft.windowsfeedbackhub 'Feedback Hub'</c>
		<c>microsoft.windowsmaps 'Windows Maps'</c>
		<c>microsoft.windowssoundrecorder 'Windows Voice Recorder'</c>
		<c>microsoft.windowsterminal 'Terminal Windows'</c>
		<c>microsoft.xbox.tcui 'Xbox TCUI'</c>
		<c>microsoft.xboxgamecallableui 'Xbox Game UI'</c>
		<c>microsoft.xboxgameoverlay 'Xbox Game Bar Plugin'</c>
		<c>microsoft.xboxgamingoverlay 'Xbox Game Bar'</c>
		<c>microsoft.xboxidentityprovider 'Xbox Identity Provider'</c>
		<c>microsoft.xboxspeechtotextoverlay 'Xbox Game Speech Window'</c>
		<c>microsoft.yourphone 'Your Phone'</c>
		<c>microsoft.zunevideo 'Movies &amp; TV'</c>
		<c>microsoftcorporationii.quickassist 'Assistance rapide'</c>
		<c>microsoftwindows.client.fileexp 'File Explorer (Extensions)'</c>
		<c>microsoftwindows.client.webexperience 'Windows Web Experience Pack'</c>
		<c>migwiz 'Easy Transfer'</c>
		<c>mixedreality 'Windows Mixed Reality'</c>
		<c>mmga 'MMGA MAPI'</c>
		<c>mobilepc</c>
		<c>mobilepc_location 'Location notifications'</c>
		<c>mobilepc_networkprojection 'Network Projection'</c>
		<c>mpeg2splitter 'MPEG-2 Splitter'</c>
		<c>msdtc 'Distributed Transaction Coordinator (DTC)'</c>
		<c>msmq 'Microsoft Message Queue (MSMQ)'</c>
		<c>multipointconnector 'MultiPoint Connector'</c>
		<c>naturalauthentication 'Natural Authentication'</c>
		<c>ndiscap 'NDIS Packet Capturing (NDISCAP)'</c>
		<c>nfc 'Near Field Communication (NFC)'</c>
		<c>notificationintelligenceplatform 'Notification Intelligence Platform'</c>
		<c>nowplaying 'Now Playing Session Manager'</c>
		<c>ntvdm 'NTVDM 16 bit subsystem'</c>
		<c>onedrive</c>
		<c>openssh</c>
		<c>osk_acc 'On-Screen Keyboard (Accessibility tools)'</c>
		<c>oskthemes 'On-Screen Keyboard (Windows Personalization themes)'</c>
		<c>outlookpwa 'Outlook PWA (InboxApp)'</c>
		<c>payments</c>
		<c>pdfreader 'Windows Reader (PDF)'</c>
		<c>penservice 'Pen Service'</c>
		<c>phonesvc 'Phone Service'</c>
		<c>picturepassword 'Picture password'</c>
		<c>pos 'Point of Service (POS)'</c>
		<c>powershell32 'PowerShell - 32 bit'</c>
		<c>powershellise32 'PowerShell ISE - 32 bit'</c>
		<c>proximity</c>
		<c>pushnotificationssvc 'Windows Push Notifications Service (System)'</c>
		<c>pushtoinstall 'Windows PushToInstall Service'</c>
		<c>rasauto 'Remote Access Auto Connection Manager'</c>
		<c>rdpclient 'Remote Desktop Client'</c>
		<c>rdpclient32 'Remote Desktop Client - 32 bit'</c>
		<c>rdpserver 'Remote Desktop Server'</c>
		<c>rdpserverlic 'Remote Desktop Licensing'</c>
		<c>reliabilityanalysis 'Reliability Analysis Services'</c>
		<c>remoteactivex 'Remote Desktop Services ActiveX Client'</c>
		<c>remoteactivex32 'Remote Desktop Services ActiveX Client - 32 bit'</c>
		<c>remoteassistance 'Remote Assistance'</c>
		<c>remotefx</c>
		<c>remoteportredirector 'Remote Desktop Services Port Redirector'</c>
		<c>remoteregistry 'Remote Registry'</c>
		<c>retaildemo 'Retail Demo Content'</c>
		<c>ribbon 'UI Ribbon'</c>
		<c>rightsmanagement 'Rights Management support'</c>
		<c>rotationmanager 'Auto-Rotation Manager'</c>
		<c>rpclocator 'Remote Procedure Call (RPC) Locator'</c>
		<c>screensavers</c>
		<c>scripto</c>
		<c>securestartup 'BitLocker Drive Encryption'</c>
		<c>securitycenter 'Security Center'</c>
		<c>sharedexperiences 'Shared Experiences'</c>
		<c>sharedpc 'Shared PC mode'</c>
		<c>sharemediacpl 'Share Media Control Panel'</c>
		<c>simpletcp 'Simple TCP/IP services'</c>
		<c>skypeortc 'Skype ORTC'</c>
		<c>sleepstudy 'Sleep Study'</c>
		<c>soundthemes 'Sound Themes'</c>
		<c>speechcommon 'Speech Recognition'</c>
		<c>speechtts 'Speech TTS'</c>
		<c>spellchecking 'Spell Checking'</c>
		<c>stepsrecorder 'Steps Recorder'</c>
		<c>storagespaces 'Storage Spaces'</c>
		<c>superfetch</c>
		<c>sustainabilityservice 'Sustainability Service'</c>
		<c>systemguard 'System Guard'</c>
		<c>systemrestore 'System Restore'</c>
		<c>tabletextservice 'Table Text Service'</c>
		<c>tabletpc 'Tablet PC'</c>
		<c>targetedcontent32 'Targeted Content Service - 32 bit'</c>
		<c>taskschdmsc32 'Task Scheduler (management console) - 32 bit'</c>
		<c>taskscheduler32 'Task Scheduler - 32 bit'</c>
		<c>taskview 'Task View'</c>
		<c>telnetclient 'Telnet Client'</c>
		<c>tempcache 'Cache and temp files'</c>
		<c>textprediction 'Text prediction'</c>
		<c>tftpclient 'TFTP client'</c>
		<c>tieringengine 'Storage Tiers Management'</c>
		<c>timetraveldebugger 'Time Travel Debugger (TTD)'</c>
		<c>troubleshootingsvc 'Recommended Troubleshooting service'</c>
		<c>universalprintsvc 'Universal Print Management Service'</c>
		<c>unp 'Universal Notification Platform (UNP)'</c>
		<c>userchoiceprotection 'User Choice Protection'</c>
		<c>vcmcodecs 'Video Compression Manager (VCM) codecs'</c>
		<c>voiceaccess 'Voice Access'</c>
		<c>wallet 'Wallet Service'</c>
		<c>wcn 'Windows Connect Now (WCN)'</c>
		<c>webthreatdefense 'Web Threat Defense Service'</c>
		<c>webview2core 'WebView2 Runtime (Core)'</c>
		<c>wificloudstore 'WiFi Sync Provider'</c>
		<c>wifinetworkmanager 'Wi-Fi Network Manager (Wi-Fi Sense)'</c>
		<c>windows.cbspreview 'Windows Barcode Preview'</c>
		<c>windowstogo 'Windows To Go'</c>
		<c>winresume 'Resume from Hibernate'</c>
		<c>winrm 'Windows Remote Management (WS-Management)'</c>
		<c>winsat 'Windows System Assessment Tool (WinSAT)'</c>
		<c>wordpad</c>
		<c>wordpad32 'Wordpad - 32 bit'</c>
		<c>xbox 'Xbox - Core'</c>
		<c>zipfolder 'Zip &amp; Cab folder'</c>
	</RemoveComponents>
	<Compatibility protectHidden=""true"">
		<ComponentFeatures>
			<Feature enabled=""no"">AppGuard</Feature>
			<Feature enabled=""no"">Battle.net</Feature>
			<Feature enabled=""no"">YubiKey</Feature>
			<Feature enabled=""no"">Bluetooth</Feature>
			<Feature enabled=""no"">USBCamera</Feature>
			<Feature enabled=""no"">CapFrameX</Feature>
			<Feature enabled=""no"">Discord</Feature>
			<Feature enabled=""no"">FileSharing</Feature>
			<Feature enabled=""no"">Hyper-V</Feature>
			<Feature enabled=""no"">iCloud</Feature>
			<Feature enabled=""no"">Kaspersky</Feature>
			<Feature enabled=""no"">ManualSetup</Feature>
			<Feature enabled=""no"">OfficeSupport</Feature>
			<Feature enabled=""no"">AppxSupport</Feature>
			<Feature enabled=""no"">Netflix</Feature>
			<Feature enabled=""no"">NetworkDiscovery</Feature>
			<Feature enabled=""no"">NightLight</Feature>
			<Feature enabled=""no"">NvidiaSetup</Feature>
			<Feature enabled=""no"">OOBE</Feature>
			<Feature enabled=""no"">Printing</Feature>
			<Feature enabled=""no"">Recommended-All</Feature>
			<Feature enabled=""no"">SamsungSwitch</Feature>
			<Feature enabled=""no"">Scanning</Feature>
			<Feature enabled=""yes"">ServicingStack</Feature>
			<Feature enabled=""no"">ShellSearchSupport</Feature>
			<Feature enabled=""no"">Spotify</Feature>
			<Feature enabled=""yes"">SFC</Feature>
			<Feature enabled=""no"">DefaultFonts</Feature>
			<Feature enabled=""yes"">SafeMode</Feature>
			<Feature enabled=""no"">TeamViewer</Feature>
			<Feature enabled=""no"">Recommended-Tablet</Feature>
			<Feature enabled=""no"">USBModem</Feature>
			<Feature enabled=""no"">USB</Feature>
			<Feature enabled=""no"">VideoPlayback</Feature>
			<Feature enabled=""no"">VPN</Feature>
			<Feature enabled=""no"">VisualStudio</Feature>
			<Feature enabled=""no"">VSS</Feature>
			<Feature enabled=""yes"">ActivationKMS</Feature>
			<Feature enabled=""yes"">Activation</Feature>
			<Feature enabled=""yes"">WinSetup</Feature>
			<Feature enabled=""no"">WindowsStore</Feature>
			<Feature enabled=""yes"">WindowsUpdate</Feature>
			<Feature enabled=""no"">WLAN</Feature>
		</ComponentFeatures>
		<MachineDrivers>
			<Machine enabled=""no"">HostMachine</Machine>
			<Machine enabled=""no"">Hyper-V VM</Machine>
			<Machine enabled=""no"">Parallels VM</Machine>
			<Machine enabled=""no"">Virtual Box VM</Machine>
			<Machine enabled=""no"">VMware VM</Machine>
		</MachineDrivers>
	</Compatibility>
	<Features>
		<Feature name=""DirectPlay"">true</Feature>
		<Feature name=""Microsoft-Hyper-V-Management-Clients"">true</Feature>
		<Feature name=""Microsoft-Hyper-V-Hypervisor"">true</Feature>
		<Feature name=""Microsoft-Hyper-V-Tools-All"">true</Feature>
		<Feature name=""Microsoft-Hyper-V-Management-PowerShell"">true</Feature>
		<Feature name=""Microsoft-Hyper-V"">true</Feature>
		<Feature name=""Microsoft-Hyper-V-Services"">true</Feature>
		<Feature name=""Microsoft-Hyper-V-All"">true</Feature>
		<Feature name=""LegacyComponents"">true</Feature>
	</Features>
	<Tweaks>
		<Settings>
			<TweakGroup name=""CrashControl"">
				<Tweak name=""CrashControl\AutoReboot"">0</Tweak>
				<Tweak name=""CrashControl\CrashDumpEnabled"">2</Tweak>
			</TweakGroup>
			<TweakGroup name=""DesktopTweaks"">
				<Tweak name=""Explorer\NoPinningStoreToTaskbar"">0</Tweak>
				<Tweak name=""WindowMetrics\MinAnimate"">0</Tweak>
				<Tweak name=""Desktop\WallpaperStyle"">4</Tweak>
				<Tweak name=""InprocServer32\""></Tweak>
				<Tweak name=""Personalize\AppsUseLightTheme"">0</Tweak>
				<Tweak name=""Personalize\SystemUsesLightTheme"">0</Tweak>
				<Tweak name=""NewStartPanel\{5399E694-6CE5-4D6C-8FCE-1D8870FDCBA0}"">0</Tweak>
				<Tweak name=""NewStartPanel\{20D04FE0-3AEA-1069-A2D8-08002B30309D}"">0</Tweak>
				<Tweak name=""NewStartPanel\{F02C1A0D-BE21-4350-88B0-7367FC96EF3C}"">0</Tweak>
				<Tweak name=""NewStartPanel\{645FF040-5081-101B-9F08-00AA002F954E}"">0</Tweak>
				<Tweak name=""NewStartPanel\{59031a47-3f72-44a7-89c5-5595fe6b30ee}"">0</Tweak>
				<Tweak name=""Desktop\IconSize"">48</Tweak>
				<Tweak name=""Desktop\MenuShowDelay"">0</Tweak>
				<Tweak name=""PushNotifications\ToastEnabled"">0</Tweak>
				<Tweak name=""PushNotifications\NoCloudApplicationNotification"">1</Tweak>
				<Tweak name=""Desktop\ScreenSaverIsSecure"">0</Tweak>
				<Tweak name=""QuietHours\Enable"">0</Tweak>
				<Tweak name=""Start\HideRecentJumplists"">1</Tweak>
				<Tweak name=""Search\SearchboxTaskbarMode"">0</Tweak>
				<Tweak name=""Advanced\Start_Layout"">1</Tweak>
				<Tweak name=""Advanced\TaskbarAl"">0</Tweak>
				<Tweak name=""Advanced\TaskbarMn"">0</Tweak>
				<Tweak name=""Advanced\MMTaskbarEnabled"">1</Tweak>
				<Tweak name=""Advanced\TaskbarDa"">0</Tweak>
				<Tweak name=""Communications\ConfigureChatAutoInstall"">0</Tweak>
				<Tweak name=""Keyboard\PrintScreenKeyForSnippingEnabled"">0</Tweak>
			</TweakGroup>
			<TweakGroup name=""Explorer"">
				<Tweak name=""Explorer\EnableAutoTray"">0</Tweak>
				<Tweak name=""OperationStatusManager\EnthusiastMode"">1</Tweak>
				<Tweak name=""AutoplayHandlers\DisableAutoplay"">1</Tweak>
				<Tweak name=""Explorer\EnableLegacyBalloonNotifications"">0</Tweak>
				<Tweak name=""Explorer\NoThumbnailCache"">0</Tweak>
				<Tweak name=""Explorer\NoCDBurning"">0</Tweak>
				<Tweak name=""cmd\HideBasedOnVelocityId"">0</Tweak>
				<Tweak name=""ControlPanel\StartupPage"">1</Tweak>
				<Tweak name=""ControlPanel\AllItemsIconView"">0</Tweak>
				<Tweak name=""Advanced\UseCompactMode"">1</Tweak>
				<Tweak name=""Advanced\FolderContentsInfoTip"">1</Tweak>
				<Tweak name=""Explorer\DisableThumbnails"">0</Tweak>
				<Tweak name=""Explorer\DisableThumbnailsOnNetworkFolders"">0</Tweak>
				<Tweak name=""Explorer\NoTrayItemsDisplay"">0</Tweak>
				<Tweak name=""Advanced\HideMergeConflicts"">1</Tweak>
				<Tweak name=""Advanced\SeparateProcess"">1</Tweak>
				<Tweak name=""{e88865ea-0e1c-4e20-9aa6-edcd0212c87c}\System.IsPinnedToNameSpaceTree"">0</Tweak>
				<Tweak name=""{031E4825-7B94-4dc3-B131-E946B44C8DD5}\System.IsPinnedToNameSpaceTree"">1</Tweak>
				<Tweak name=""Advanced\NavPaneShowAllFolders"">1</Tweak>
				<Tweak name=""Advanced\LaunchTo"">1</Tweak>
				<Tweak name=""Explorer\HubMode"">0</Tweak>
				<Tweak name=""Explorer\ConfirmFileDelete"">1</Tweak>
				<Tweak name=""Advanced\DontUsePowerShellOnWinX"">1</Tweak>
				<Tweak name="".jpg\PhotoViewer.FileAssoc.Tiff"">PhotoViewer.FileAssoc.Tiff</Tweak>
				<Tweak name=""Explorer\HideClock"">0</Tweak>
				<Tweak name=""Explorer\ShowDriveLettersFirst"">1</Tweak>
				<Tweak name=""Advanced\ShowSyncProviderNotifications"">0</Tweak>
				<Tweak name=""Advanced\ShowTaskViewButton"">0</Tweak>
				<Tweak name=""Advanced\AutoCheckSelect"">1</Tweak>
				<Tweak name=""Advanced\SharingWizardOn"">0</Tweak>
				<Tweak name=""Advanced\ShowSuperHidden"">1</Tweak>
			</TweakGroup>
			<TweakGroup name=""PowerAndShutdown"">
				<Tweak name=""Power\HiberbootEnabled"">0</Tweak>
				<Tweak name=""Power\HiberFileSizePercent"">50</Tweak>
				<Tweak name=""FlyoutMenuSettings\ShowHibernateOption"">0</Tweak>
				<Tweak name=""FlyoutMenuSettings\ShowSleepOption"">0</Tweak>
				<Tweak name=""System\ShutdownWithoutLogon"">1</Tweak>
			</TweakGroup>
			<TweakGroup name=""Privacy"">
				<Tweak name=""appointments\Value"">Deny</Tweak>
				<Tweak name=""phoneCallHistory\Value"">Deny</Tweak>
				<Tweak name=""webcam\Value"">Allow</Tweak>
				<Tweak name=""contacts\Value"">Deny</Tweak>
				<Tweak name=""appDiagnostics\Value"">Deny</Tweak>
				<Tweak name=""documentsLibrary\Value"">Allow</Tweak>
				<Tweak name=""email\Value"">Deny</Tweak>
				<Tweak name=""broadFileSystemAccess\Value"">Allow</Tweak>
				<Tweak name=""chat\Value"">Deny</Tweak>
				<Tweak name=""microphone\Value"">Allow</Tweak>
				<Tweak name=""userNotificationListener\Value"">Deny</Tweak>
				<Tweak name=""phoneCall\Value"">Deny</Tweak>
				<Tweak name=""picturesLibrary\Value"">Allow</Tweak>
				<Tweak name=""radios\Value"">Deny</Tweak>
				<Tweak name=""LooselyCoupled\Value"">Deny</Tweak>
				<Tweak name=""userDataTasks\Value"">Deny</Tweak>
				<Tweak name=""userAccountInformation\Value"">Allow</Tweak>
				<Tweak name=""videosLibrary\Value"">Allow</Tweak>
				<Tweak name=""Client\OptInOrOutPreference"">0</Tweak>
				<Tweak name=""System\AllowExperimentation"">0</Tweak>
				<Tweak name=""System\AllowLocation"">0</Tweak>
				<Tweak name=""DataCollection\AllowTelemetry"">4</Tweak>
				<Tweak name=""1.7\EnableAutocorrection"">0</Tweak>
				<Tweak name=""CloudContent\DisableWindowsConsumerFeatures"">1</Tweak>
				<Tweak name=""ContentDeliveryManager\SilentInstalledAppsEnabled"">0</Tweak>
				<Tweak name=""System\AllowClipboardHistory"">1</Tweak>
				<Tweak name=""CloudContent\DisableCloudOptimizedContent"">1</Tweak>
				<Tweak name=""AppCompat\DisableInventory"">1</Tweak>
				<Tweak name=""TrainedDataStore\HarvestContacts"">0</Tweak>
				<Tweak name=""InputPersonalization\RestrictImplicitTextCollection"">1</Tweak>
				<Tweak name=""InputPersonalization\RestrictImplicitInkCollection"">1</Tweak>
				<Tweak name=""System\DontDisplayLastUserName"">0</Tweak>
				<Tweak name=""System\DontDisplayLockedUserId"">1</Tweak>
				<Tweak name=""Explorer\DisableSearchBoxSuggestions"">1</Tweak>
				<Tweak name=""Rules\NumberOfSIUFInPeriod"">0</Tweak>
				<Tweak name=""1.7\EnableSpellchecking"">0</Tweak>
				<Tweak name=""SmartGlass\UserAuthPolicy"">0</Tweak>
				<Tweak name=""SmartGlass\BluetoothPolicy"">0</Tweak>
				<Tweak name=""BackgroundAccessApplications\GlobalUserDisabled"">1</Tweak>
				<Tweak name=""AdvertisingInfo\Enabled"">0</Tweak>
				<Tweak name=""Privacy\TailoredExperiencesWithDiagnosticDataEnabled"">0</Tweak>
				<Tweak name=""AppSettings\Skype-UserConsentAccepted"">0</Tweak>
				<Tweak name=""User Profile\HttpAcceptLanguageOptOut"">1</Tweak>
				<Tweak name=""System\EnableActivityFeed"">0</Tweak>
				<Tweak name=""Advanced\Start_TrackProgs"">0</Tweak>
				<Tweak name=""Advanced\Start_TrackDocs"">0</Tweak>
				<Tweak name=""ContentDeliveryManager\SystemPaneSuggestionsEnabled"">0</Tweak>
				<Tweak name=""InputPersonalization\AllowInputPersonalization"">0</Tweak>
				<Tweak name=""Settings\AcceptedPrivacyPolicy"">0</Tweak>
				<Tweak name=""ContentDeliveryManager\PreInstalledAppsEnabled"">0</Tweak>
				<Tweak name=""ContentDeliveryManager\OemPreInstalledAppsEnabled"">0</Tweak>
				<Tweak name=""AppCompat\DisablePCA"">1</Tweak>
				<Tweak name=""Windows Search\AllowCloudSearch"">0</Tweak>
				<Tweak name=""SystemIndex\EnableFindMyFiles"">1</Tweak>
				<Tweak name=""Search\BingSearchEnabled"">0</Tweak>
				<Tweak name=""SearchSettings\IsDeviceSearchHistoryEnabled"">0</Tweak>
				<Tweak name=""TIPC\Enabled"">0</Tweak>
				<Tweak name=""System\EnableCdp"">0</Tweak>
				<Tweak name=""Shell\BagMRU Size"">1</Tweak>
				<Tweak name=""Explorer\ShowFrequent"">0</Tweak>
				<Tweak name=""ContentDeliveryManager\SubscribedContent-338393Enabled"">0</Tweak>
				<Tweak name=""ContentDeliveryManager\SubscribedContent-310093Enabled"">0</Tweak>
				<Tweak name=""Explorer\ShowRecent"">0</Tweak>
				<Tweak name=""UserProfileEngagement\ScoobeSystemSettingEnabled"">0</Tweak>
				<Tweak name=""AppHost\EnableWebContentEvaluation"">0</Tweak>
				<Tweak name=""Settings\InsightsEnabled"">0</Tweak>
				<Tweak name=""FlipAhead\FPEnabled"">0</Tweak>
				<Tweak name=""MicrosoftEdge\PhishingFilter\Enabledv9"">0</Tweak>
				<Tweak name=""Internet Explorer\PhishingFilter\Enabledv9"">0</Tweak>
				<Tweak name=""Explorer\SmartScreenEnabled"">Off</Tweak>
				<Tweak name=""CloudContent\DisableWindowsSpotlightFeatures"">1</Tweak>
			</TweakGroup>
			<TweakGroup name=""StartTweaks"">
				<Tweak name=""Start\HideAppList"">0</Tweak>
				<Tweak name=""Start\HideFrequentlyUsedApps"">1</Tweak>
				<Tweak name=""Explorer\HideRecentlyAddedApps"">1</Tweak>
				<Tweak name=""Start\AllowPinnedFolderDocuments"">0</Tweak>
				<Tweak name=""Start\AllowPinnedFolderDownloads"">0</Tweak>
				<Tweak name=""Start\AllowPinnedFolderFileExplorer"">0</Tweak>
				<Tweak name=""Start\AllowPinnedFolderHomeGroup"">0</Tweak>
				<Tweak name=""Start\AllowPinnedFolderMusic"">0</Tweak>
				<Tweak name=""Start\AllowPinnedFolderNetwork"">0</Tweak>
				<Tweak name=""Start\AllowPinnedFolderPersonalFolder"">0</Tweak>
				<Tweak name=""Start\AllowPinnedFolderPictures"">0</Tweak>
				<Tweak name=""Start\AllowPinnedFolderSettings"">1</Tweak>
				<Tweak name=""Start\AllowPinnedFolderVideos"">0</Tweak>
				<Tweak name=""Start\HideHibernate"">1</Tweak>
				<Tweak name=""Start\HideSleep"">1</Tweak>
				<Tweak name=""Explorer\ShowOrHideMostUsedApps"">0</Tweak>
				<Tweak name=""Advanced\Start_IrisRecommendations"">0</Tweak>
				<Tweak name=""Start\HideSwitchAccount"">1</Tweak>
			</TweakGroup>
			<TweakGroup name=""System"">
				<Tweak name=""Windows\DisableATMFD"">1</Tweak>
				<Tweak name=""Activation\Manual"">1</Tweak>
				<Tweak name=""Appx\AllowAutomaticAppArchiving"">0</Tweak>
				<Tweak name=""Winlogon\RestartApps"">0</Tweak>
				<Tweak name=""WindowsUpdate\AllowTemporaryEnterpriseFeatureControl"">1</Tweak>
				<Tweak name=""GameConfigStore\GameDVR_FSEBehavior"">0</Tweak>
				<Tweak name=""kernel\GlobalTimerResolutionRequests"">1</Tweak>
				<Tweak name=""GraphicsDrivers\HwSchMode"">2</Tweak>
				<Tweak name=""System\EnableLinkedConnections"">1</Tweak>
				<Tweak name=""OOBE\BypassNRO"">1</Tweak>
				<Tweak name=""System\NoConnectedUser"">0</Tweak>
				<Tweak name=""3\1806"">0</Tweak>
				<Tweak name=""Terminal Server\fDenyTSConnections"">0</Tweak>
				<Tweak name=""RDP-Tcp\UserAuthentication"">0</Tweak>
				<Tweak name=""Device\DevicePasswordLessBuildVersion"">0</Tweak>
				<Tweak name=""ReserveManager\ShippedWithReserves"">1</Tweak>
				<Tweak name=""LabConfig\BypassRAMCheck"">1</Tweak>
				<Tweak name=""LabConfig\BypassTPMCheck"">1</Tweak>
				<Tweak name=""StoragePolicy\01"">0</Tweak>
				<Tweak name=""StoragePolicy\512"">0</Tweak>
				<Tweak name=""StoragePolicy\256"">14</Tweak>
				<Tweak name=""StoragePolicy\04"">1</Tweak>
				<Tweak name=""StoragePolicy\2048"">1</Tweak>
				<Tweak name=""System\DisableAutomaticRestartSignOn"">1</Tweak>
				<Tweak name="".NETFramework\OnlyUseLatestCLR"">0</Tweak>
				<Tweak name=""UserGpuPreferences\DirectXUserGlobalSettings"">VRROptimizeEnable=0</Tweak>
				<Tweak name=""System\VerboseStatus"">1</Tweak>
			</TweakGroup>
			<TweakGroup name=""WindowsUpdateTasks"">
				<Tweak name=""DevHomeUpdate\DevHomeUpdate"">0</Tweak>
				<Tweak name=""EdgeUpdate\EdgeUpdate"">0</Tweak>
				<Tweak name=""IA\IA"">0</Tweak>
				<Tweak name=""LXP\LXP"">0</Tweak>
				<Tweak name=""OutlookUpdate\OutlookUpdate"">0</Tweak>
				<Tweak name=""TFLUpdate\TFLUpdate"">0</Tweak>
			</TweakGroup>
			<TweakGroup name=""UAC"">
				<Tweak name=""System\EnableLUA"">0</Tweak>
				<Tweak name=""System\FilterAdministratorToken"">0</Tweak>
				<Tweak name=""System\PromptOnSecureDesktop"">0</Tweak>
				<Tweak name=""System\ConsentPromptBehaviorAdmin"">0</Tweak>
				<Tweak name=""System\ConsentPromptBehaviorUser"">0</Tweak>
			</TweakGroup>
			<TweakGroup name=""WindowsDefender"">
				<Tweak name=""State\AccountProtection_MicrosoftAccount_Disconnected"">0</Tweak>
				<Tweak name=""Notifications\DisableNotifications"">1</Tweak>
				<Tweak name=""Notifications\DisableEnhancedNotifications"">1</Tweak>
				<Tweak name=""Policy\VerifiedAndReputablePolicyState"">0</Tweak>
				<Tweak name=""Features\TamperProtection"">0</Tweak>
				<Tweak name=""Windows Defender\DisableAntiSpyware"">1</Tweak>
			</TweakGroup>
			<TweakGroup name=""WindowsUpdate"">
				<Tweak name=""DriverSearching\SearchOrderConfig"">0</Tweak>
				<Tweak name=""Preferences\ModelDownloadAllowed"">0</Tweak>
				<Tweak name=""DeliveryOptimization\DODownloadMode"">0</Tweak>
				<Tweak name=""Settings\AllowAutoWindowsUpdateDownloadOverMeteredNetwork"">1</Tweak>
				<Tweak name=""Settings\IsContinuousInnovationOptedIn"">0</Tweak>
				<Tweak name=""7971f918-a847-4430-9279-4a52d1efe18d\RegisterWithAU"">1</Tweak>
				<Tweak name=""WindowsUpdate\ExcludeWUDriversInQualityUpdate"">1</Tweak>
				<Tweak name=""MRT\DontOfferThroughWUAU"">0</Tweak>
				<Tweak name=""Settings\HideMCTLink"">1</Tweak>
				<Tweak name=""Settings\IsExpedited"">0</Tweak>
				<Tweak name=""Settings\RestartNotificationsAllowed2"">0</Tweak>
				<Tweak name=""WindowsStore\AutoDownload"">4</Tweak>
				<Tweak name=""AU\AUOptions"">2</Tweak>
			</TweakGroup>
		</Settings>
	</Tweaks>
</Preset>"
F2qLZQ2z,2024-04-13_stats.json,rdp_snitch,JSON,Saturday 13th of April 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""36.137.3.251"": 1,
    ""74.207.245.124"": 1,
    ""103.245.237.31"": 1,
    ""206.168.34.52"": 1,
    ""36.91.222.100"": 3,
    ""62.204.41.225"": 2,
    ""116.140.196.215"": 2,
    ""128.199.225.179"": 720,
    ""58.218.204.183"": 3,
    ""87.251.75.64"": 1,
    ""205.210.31.40"": 3,
    ""212.41.9.9"": 6,
    ""45.227.254.54"": 4,
    ""185.170.144.3"": 1,
    ""80.66.76.92"": 3,
    ""152.32.228.20"": 1,
    ""196.190.117.7"": 2,
    ""198.235.24.87"": 3,
    ""91.238.181.16"": 1,
    ""87.251.75.145"": 1,
    ""173.255.206.80"": 4,
    ""45.33.43.23"": 1,
    ""94.232.46.132"": 1,
    ""64.225.18.13"": 20,
    ""93.177.66.5"": 10,
    ""45.175.173.33"": 3,
    ""205.210.31.97"": 3,
    ""190.186.122.2"": 1,
    ""185.11.61.106"": 1,
    ""112.4.139.162"": 1,
    ""45.227.254.26"": 2,
    ""159.65.44.224"": 2,
    ""194.165.16.78"": 2,
    ""193.53.245.249"": 3,
    ""167.94.145.60"": 1,
    ""198.235.24.232"": 3
  },
  ""asn"": {
    ""AS9808"": 1,
    ""AS63949"": 6,
    ""AS150867"": 1,
    ""AS398324"": 1,
    ""AS7713"": 3,
    ""AS59425"": 2,
    ""AS4837"": 2,
    ""AS14061"": 742,
    ""AS4134"": 3,
    ""AS208091"": 5,
    ""AS396982"": 12,
    ""AS49505"": 6,
    ""AS267784"": 6,
    ""AS197414"": 1,
    ""AS135377"": 1,
    ""AS24757"": 2,
    ""AS49434"": 1,
    ""AS212482"": 1,
    ""AS197540"": 10,
    ""AS268902"": 3,
    ""AS25620"": 1,
    ""AS57523"": 1,
    ""AS56046"": 1,
    ""AS48721"": 2,
    ""AS209711"": 3,
    ""AS398705"": 1
  },
  ""isp"": {
    ""China Mobile"": 1,
    ""Akamai Technologies, Inc."": 6,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 1,
    ""Censys, Inc."": 2,
    ""PT Telekomunikasi Indonesia"": 3,
    ""Horizon LLC"": 2,
    ""China Unicom CHINA169 Network"": 2,
    ""DigitalOcean, LLC"": 742,
    ""Chinanet"": 3,
    ""Xhost Internet Solutions LP"": 7,
    ""Google LLC"": 12,
    ""OOO \""Network of data-centers \""Selectel\"""": 6,
    ""Flyservers S.A."": 8,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Ethiotelecom"": 2,
    ""Datacenter location PAR1 France"": 1,
    ""netcup GmbH"": 10,
    ""DANIEL CARVALHO DE OLIVEIRA SILVA \u00ad ME"": 3,
    ""Cotas Ltda."": 1,
    ""Chang Way Technologies Co. Limited"": 1,
    ""China Mobile Communications Corporation"": 1,
    ""MUV Bilisim ve Telekomunikasyon Hizmetleri Ltd. Sti"": 3
  },
  ""org"": {
    ""China Mobile Communications Corporation"": 2,
    ""Linode"": 6,
    ""LP Technology Electronic Commerce Company Limited"": 1,
    ""Censys Inc"": 1,
    ""Telekomunikasi Indonesia"": 3,
    ""Horizon LLC"": 2,
    ""China United Network Communications Corporation Limited"": 2,
    ""DigitalOcean, LLC"": 740,
    ""Chinanet JS"": 3,
    ""Xhost Internet Solutions"": 5,
    ""Palo Alto Networks, Inc"": 12,
    ""Unknown"": 8,
    ""UAB Host Baltic"": 6,
    ""Xhostis"": 1,
    ""Ucloud Information Technology"": 1,
    ""ThinkTech Technology Industrial CO. Limited"": 1,
    ""Dmitriy Panchenko"": 1,
    ""netcup GmbH"": 10,
    ""DANIEL CARVALHO DE OLIVEIRA SILVA \u00ad ME"": 3,
    ""Adsl-ip-dinamica - Plan"": 1,
    ""Starcrecium Limited"": 1,
    ""Digital Ocean"": 2,
    ""Flyservers S.A"": 2,
    ""MUVHost - Vodafone Tuzla"": 3,
    ""Censys, Inc."": 1
  },
  ""regionName"": {
    ""Guangdong"": 1,
    ""California"": 14,
    ""Ho Chi Minh"": 1,
    ""Illinois"": 1,
    ""Jakarta"": 3,
    ""Moscow"": 9,
    ""Beijing"": 2,
    ""Central Singapore"": 720,
    ""Jiangsu"": 4,
    ""North Holland"": 6,
    ""Vilnius"": 6,
    ""Addis Ababa"": 2,
    ""\u00cele-de-France"": 1,
    ""Texas"": 4,
    ""Perm Krai"": 1,
    ""New Jersey"": 22,
    ""Bavaria"": 10,
    ""Minas Gerais"": 3,
    ""Santa Cruz Department"": 1,
    ""Chechnya"": 1,
    ""Kaunas"": 2,
    ""Istanbul"": 3,
    ""Hesse"": 1
  },
  ""country"": {
    ""China"": 7,
    ""United States"": 41,
    ""Vietnam"": 1,
    ""Indonesia"": 3,
    ""Russia"": 11,
    ""Singapore"": 720,
    ""The Netherlands"": 6,
    ""Lithuania"": 8,
    ""Ethiopia"": 2,
    ""France"": 1,
    ""Germany"": 11,
    ""Brazil"": 3,
    ""Bolivia"": 1,
    ""Turkey"": 3
  },
  ""account"": {
    ""hello"": 765,
    ""(empty)"": 6,
    ""Test"": 15,
    ""Administr"": 8,
    ""TgnJvWeKh"": 1,
    ""cvjoMx"": 1,
    ""zwuPkb"": 1,
    ""Domain"": 6,
    ""Administrator"": 1,
    ""TYUCzidWn"": 1,
    ""YFbnZs"": 1,
    ""pCAnjC"": 1,
    ""sfqbwom7"": 4,
    ""beio"": 1,
    ""qAGQsvwie"": 1,
    ""PyJLWd"": 1,
    ""MeOnpY"": 1,
    ""JZRcVmAMX"": 1,
    ""MKTHDD"": 1,
    ""cYQNHj"": 1
  },
  ""keyboard"": {
    ""Unknown"": 818
  },
  ""client_build"": {
    ""Unknown"": 818
  },
  ""client_name"": {
    ""Unknown"": 818
  },
  ""ip_type"": {
    ""mobile"": 2,
    ""hosting"": 756,
    ""Unknown"": 36,
    ""proxy"": 2,
    ""hosting & proxy"": 22
  }
}"
39C1hMF3,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,ssss50w,GetText,Saturday 13th of April 2024 06:52:44 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
 
Working as of:
14 April 2024"
8ujTsw1R,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,jusst2k4,GetText,Saturday 13th of April 2024 06:43:17 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_487351.pdf

Working as of:
13 April 2024"
eGyRg2n4,MARTYDIG-V2,martypete,Bash,Saturday 13th of April 2024 06:03:14 PM CDT,"#   __  ______   ___  ________  _____  _________   _   _____  #
#  /  |/  / _ | / _ \/_  __/\ \/ / _ \/  _/ ___/__| | / /_  | #
# / /|_/ / __ |/ , _/ / /    \  / // // // (_ /___/ |/ / __/  #
#/_/  /_/_/ |_/_/|_| /_/     /_/____/___/\___/    |___/____/  #
#                                                             #
########## MULTI-PURPOSE EMAIL+DNS LOOKUP SCRIPT ##############

########## COLOR VARIABLES #######

COLOR='\033[1;33m'
BOLD='\033[1;37m'
NC='\033[0m' # No Color
RED='\033[1;31m'
BLUE='\033[1;34m'
#YELLOW='\033[1;33m'
GREY='\033[1;30m'
GREEN='\033[1;32m'
CYAN='\033[1;36m'
PURPLE='\033[1;35m'

####### LOOKUP VARIABLES #############

#============== TOP-LEVEL DOMAIN A-RECORD ===========================

IP=$( dig $1 +short | grep [0-9][0-9] | sort -nr | head -n 1 ) # grep's for IP's, sorts, then takes the top IP
PTR=$( dig -x $IP +short | grep -v ""in-addr"" | grep -v ""Truncated"" | head -n 1) #reverse DNS lookup to get PTR record

#=================== MAIL.DOMAIN.COM SUBDOMAIN ========================

# grep's for IP's then takes the top IP for mail.domain.com
MAILSUBIP=$( dig mail.$1 +short | grep [0-9][0-9] | sort -nr | head -n 1 ) 

#reverse DNS lookup to get PTR record for mail.domain.com
MAILSUBPTR=$( dig -x $MAILSUBIP +short | grep -v ""in-addr"" | grep -v ""Truncated"" | head -n 1) 

#===============  DMARC RECORD  ==========================

DMARCRECORD=$( dig _dmarc.$1 txt +nostats +noquestion +nocomments | grep IN | grep -E 'CNAME|TXT' | grep -v SOA | grep -v ""RedHat"" | grep -v ""AAAA"" | grep -v "".root-servers.net"" | sort)
SPFRECORD=$( dig $1 txt +short | grep -v "".root-servers.net"" | grep -v ""Truncated"" | grep ""v=spf1"")	

#===============  MX RECORD HOSTNAME ================================

MAILMX=$( dig mx $1 +short | grep -v "".root-servers.net"" | grep -v ""CNAME"" | sort -n | head -n 1 )
MAILMXLONG=$( dig mx $1 +short | grep -v "".root-servers.net"" | sort -nr )

#================  MX RECORD IP ADDRESS INFO  ==================== 

MAILIP=$( dig $MAILMX +short | grep -oE ""\b([0-9]{1,3}\.){3}[0-9]{1,3}\b"" | head -n 1 )
MAILPTR=$( dig -x $MAILIP +short | grep -v ""in-addr"" | head -n 1 )

#==============  AUTODISCOVER  =============================

ADRECORD=$( dig autodiscover.$1 +nostats +noquestion +nocomments | grep IN | grep -v SOA | grep -v ""RedHat"" | grep -v "".root-servers.net"" | grep -v ""autodiscover.geo.outlook.com"" | grep -v ""autodiscover.outlook.com.g.outlook.com"" | grep -v ""autodiscover.geo.outlook.com"" | grep -v ""autodiscover-namcentral"" | head -n 6 )
ADIP=$( dig autodiscover.$1 +short | grep -oE ""\b([0-9]{1,3}\.){3}[0-9]{1,3}\b"" | head -n 1 )

#==============  GOOGLE + MICROSOFT DKIM KEYS  ========================== 

GOOGLEDKIM=$( dig google._domainkey.$1 txt +nostats +noquestion +nocomments | grep IN | grep -E 'CNAME|TXT' | grep -v SOA | grep -v ""RedHat"" | grep -v ""AAAA"" | grep -v "".root-servers.net"" | sort)
MSDKIM1=$( dig selector1._domainkey.$1 txt +nostats +noquestion +nocomments | grep IN | grep -E 'CNAME|TXT' | grep -v SOA | grep -v ""RedHat"" | grep -v ""AAAA"" | grep -v "".root-servers.net"" | sort)
MSDKIM2=$( dig selector2._domainkey.$1 txt +nostats +noquestion +nocomments | grep IN | grep -E 'CNAME|TXT' | grep -v SOA | grep -v ""RedHat"" | grep -v ""AAAA"" | grep -v "".root-servers.net"" | sort)

#============== MAILGUN DKIMS ========================== 

MAILGUNDKIMSMTP=$( dig smtp._domainkey.$1 txt +nostats +noquestion +nocomments | grep IN | grep -E 'CNAME|TXT' | grep -v SOA | grep -v ""RedHat"" | grep -v ""AAAA"" | grep -v "".root-servers.net"" | sort -r)
MAILGUNDKIMKRS=$( dig krs._domainkey.$1 txt +nostats +noquestion +nocomments | grep IN | grep -E 'CNAME|TXT' | grep -v SOA | grep -v ""RedHat"" | grep -v ""AAAA"" | grep -v "".root-servers.net"" | sort -r)
MAILGUNDKIMMAILO=$( dig mailo._domainkey.$1 txt +nostats +noquestion +nocomments | grep IN | grep -E 'CNAME|TXT' | grep -v SOA | grep -v ""RedHat"" | grep -v ""AAAA"" | grep -v "".root-servers.net"" | sort -r)

#============== SENDGRID DKIMS ========================== 

SENDGRIDDKIMS1=$( dig s1._domainkey.$1 txt +nostats +noquestion +nocomments | grep IN | grep -E 'CNAME|TXT' | grep -v SOA | grep -v ""RedHat"" | grep -v ""AAAA"" | grep -v "".root-servers.net"" | sort -r)
SENDGRIDDKIMS2=$( dig s2._domainkey.$1 txt +nostats +noquestion +nocomments | grep IN | grep -E 'CNAME|TXT' | grep -v SOA | grep -v ""RedHat"" | grep -v ""AAAA"" | grep -v "".root-servers.net"" | sort -r)

#============== MAILCHIMP DKIMS ========================== 
	
MAILCHIMPDKIMK2=$( dig k2._domainkey.$1 txt +nostats +noquestion +nocomments | grep IN | grep -E 'CNAME|TXT' | grep -v SOA | grep -v ""RedHat"" | grep -v ""AAAA"" | grep -v "".root-servers.net"" | sort -r)
MAILCHIMPDKIMK3=$( dig k3._domainkey.$1 txt +nostats +noquestion +nocomments | grep IN | grep -E 'CNAME|TXT' | grep -v SOA | grep -v ""RedHat"" | grep -v ""AAAA"" | grep -v "".root-servers.net"" | sort -r)

#======================================== 

clear
echo -e ""${BLUE}|${BOLD}    __  ______    ____  ________  ______  __________    _    _____ ${BLUE}|${NC}""
echo -e ""${BLUE}|${BOLD}   /  |/  /   |  / __ \/_  __/\ \/ / __ \/  _/ ____/   | |  / /__ |${BLUE}|${NC}""
echo -e ""${BLUE}|${BOLD}  / /|_/ / /| | / /_/ / / /    \  / / / // // / _______| | / /__/ /${BLUE}|${NC}""
echo -e ""${BLUE}|${BOLD} / /  / / ___ |/ _, _/ / /     / / /_/ // // /_/ /_____/ |/ // __/ ${BLUE}|${NC}""
echo -e ""${BLUE}|${BOLD}/_/  /_/_/  |_/_/ |_| /_/     /_/_____/___/\____/      |___//____/ ${BLUE}|${NC}""
echo -e ""${BLUE} ___________________________________________________________________${NC}""   
echo -e ""${BLUE}[#] whois $1 (REGISTRAR INFO) ${NC}""

#=================================================================
#===============  WHOIS DOMAIN  ===================================
#==================================================================

#This script is using the whois and grep commands to retrieve information about a domain name and its associated IP addresses. The $1 argument is passed to whois to specify the domain name or IP address to look up. The grep commands are used to filter the output of whois and display specific information, such as server details, organization name, and contact information. The numerous grep -v commands are used to exclude certain irrelevant information from the output.

echo -e """"
whois ""$1"" |
egrep -i ""(Server|Nameserver:|Registrar:|Registrar URL|Organization:|Admin|Comment:|Email|nameservers:|Hold|Expiration|Expiry|Reseller|URL:|Transfer|Name:|No match|NS[1-4]|NOT FOUND|abuse-mailbox:|Name servers:|NET)"" |
grep -vE ""(created|updated|The data in|information purposes only|makes this information available|that apply to|prior written consent|BRST|This server accepts|reserves the right|clientTransferProhibited|modify existing registrations|support questions|Redirected|Querying|\[whois\.|follow the instructions|Unconditional Guarantee|reserves the right|Billing|Registrar Abuse Contact Email|dest IP \(your IP\)|Intensity/frequency|Without these|NetName:|Domain Name:|Tech|NOCEmail|Administrative Contact Postal Code|Administrative Contact Phone Number|Administrative Contact Facsimile Number|Administrative Contact ID|Administrative Contact Address|Administrative Contact City|Administrative Contact Country|Administrative Contact State/Province|Administrative Contact Country Code|Admin Phone Ext|Admin Fax|Domain ID:|Admin Fax Ext|Admin Phone|Admin Country|Invalid option:|Admin Postal Code|Admin State/Province|Admin City|Admin Street|Admin ID|Registry Admin ID|has collected this|Last Transferred Date:|Administrative Application Purpose:|Administrative Nexus Category:|Parent|NetHandle:|Ref:|StateProv:|WHOIS Server:|Please register your domains|network:In-Addr-Server;|network:Network-Name:|Comments to|network:Tech-Contact;|OrgNOCName:|global Web hosting|DreamHost is|websites and apps hosted|Dedicated Server Hosting|Registrar Registration Expiration Date|high-value domains|DreamCompute|contains ONLY .COM|for more information|Connection refused|Withheld for Privacy|Redacted for Privacy)"" |
awk '!x[$0]++' |
sed -e 's/^[ \t]*//'

#========================================================================
#=========================== NS RECORDS ===============================
#=======================================================================

echo -e ""${GREEN}_______________________________________________________________${NC}""
echo -e ""${GREEN}[#] dig $1 ns (PROPAGATED NS RECORD) ${NC}""
echo -e """"
dig $1 ns +nostats +noquestion +nocomments | grep IN | grep NS | grep -v SOA | grep -v ""RedHat"" | grep -v ""AAAA"" | grep -v "".root-servers.net""

#======================================================================
#=========================== MX RECORDS ===============================
#=======================================================================

echo -e ""${RED}_______________________________________________________________${NC}""
echo -e ""${RED}[#] dig $1 mx (MX RECORD) ${NC}""
echo -e """"
if [[ ! -z $MAILMX  ]] #Checks to see if there is an MX record propagated
	then
		printf ""$MAILMXLONG""
	else
		:
	fi
if [[ ! -z $MAILIP  ]] #Checks to see what IP the MX record resolves to, if any.
	then
		echo -e "" ${RED}=>${NC} $MAILIP ${RED}=>${NC} $MAILPTR""
	else
		echo -e """"
	fi
	
#======================================================================
#===============  WHOIS mail IP ADDRESS  ===================================
#======================================================================

echo -e """"
echo -e ""${RED}[#] whois ${MAILIP} (MX RECORD IP INFO) ${NC}""
echo -e """"
if [[ ! -z $MAILIP  ]] #Checks to SEE THE IP INFO FOR THE TOP MX RECORD
	then
		whois ""$MAILIP"" |
		grep -Ei ""(Server|Registrar:|Registrar URL|OrgTechEmaiL|Organization:|Network-Name|Org-Name|OrgName|NetName|Status:|Registrant Name|org-name:|Registrant Org|Email|Registrant Street|Registrant City|Registrant Country|Registrant Phone:|Expiration|Expiry|Reseller|Organization Name|\(|netname:|descr:|remarks:|person:|abuse-mailbox:|country|network:Org-name:|OrgAbuseEmail:|network:Updated-By|network:Organization|network:Tech-Contact|network:Admin-Contact|e-mail:|StateProv:|City:|ns[1-2])"" |
		grep -vE ""(Parent|served|RTechEmail|Invalid option:|RNOCEmail|\(BRST|This server accepts|RAbuseEmail|%rwhois|dest IP \(your IP\)|Intensity/frequency|Without these|NetName:|NOCEmail|Organization:|remarks:|OrgTechEmail:|contact details|network:In-Addr-Server;|City:|StateProv:|network:Network-Name:|Comments to|network:Tech-Contact;|OrgNOCName:|Country:|connect: Connection refused|Connection refused)"" |
		sort -u |
		sed -e 's/^[ \t]*//'
	else
		:
	fi

#=================================================================
#===============  PROPAGATED A RECORD  ============================
#==================================================================

echo -e ""${COLOR}_______________________________________________________________${NC}""
echo -e ""${COLOR}[#] dig $1 (WEBSITE/TLD) ${NC}""
echo -e """"
if [[ ! -z $IP  ]] #Checks to see if there is an A record propagated.
	then
		printf ""$IP""
	else
		:
	fi
if [[ ! -z $PTR  ]] #Checks to see if the A record IP has a PTR record.
	then
		echo -e "" ${COLOR}=>${NC} $PTR""
	else
		echo -e """"
	fi

#======================================================================
#===============  WHOIS IP ADDRESS  ===================================
#======================================================================

echo -e """"
echo -e ""${COLOR}[#] whois ${IP} (A RECORD IP INFO) ${NC}""
echo -e """"
if [[ ! -z $IP  ]] #Checks to see if there is an A record propagated for the given domain.
	then
		whois ""$IP"" |
		grep -Ei ""(Server|Registrar:|Registrar URL|OrgTechEmaiL|Organization:|Network-Name|Org-Name|OrgName|NetName|Status:|Registrant Name|org-name:|Registrant Org|Email|Registrant Street|Registrant City|Registrant Country|Registrant Phone:|Expiration|Expiry|Reseller|Organization Name|\(|netname:|descr:|remarks:|person:|abuse-mailbox:|country|Country|network:Org-name:|OrgAbuseEmail:|network:Updated-By|network:Organization|network:Tech-Contact|network:Admin-Contact|e-mail:|StateProv:|City:|ns[1-2])"" |
		grep -vE ""(Parent|served|RTechEmail|Invalid option:|RNOCEmail|\(BRST|This server accepts|RAbuseEmail|dest IP \(your IP\)|Intensity/frequency|Without these|NetName:|NOCEmail|Organization:|remarks:|StateProv:|City:|OrgTechEmail:|contact details|network:In-Addr-Server;|network:Network-Name:|Comments to|%rwhois|network:Tech-Contact;|OrgNOCName:|Country:|connect: Connection refused|Comment:)"" |
		sort -u |
		sed -e 's/^[ \t]*//'
	else
		:
	fi
dig -x mail.$1 | grep ""PTR"" | grep ""in-addr"" | grep -v "";"" | grep -v ""Invalid option:""

	
#======================================================================
#===============  SPF records  ===================================
#======================================================================

echo -e ""${PURPLE}_______________________________________________________________${NC}""
echo -e ""${PURPLE}[#] dig $1 txt (SPF RECORD) ${NC}""
echo -e """"
if [[ ! -z $SPFRECORD  ]] #Checks to see if there is an SPF record propagated.
	then
		echo -e ""$SPFRECORD""
	else
		:
	fi

#=================================================================
#========  PROPAGATED DMARC + GOOGLE DKIM RECORDs  =================
#==================================================================

echo -e ""${GREY}_______________________________________________________________${NC}""

echo -e ""${GREY}[#] dig _.dmarc.$1 (DMARC RECORD) ${NC}""
echo -e """"

if [[ ! -z $DMARCRECORD  ]] #Checks to see if there is a record propagated.
	then
		echo -e ""$DMARCRECORD""
	else
		:
	fi

echo -e ""${GREEN}_______________________________________________________________${NC}""

echo -e ""${GREEN}[#] (GOOGLE / MS365 DKIMS) ${NC}""
if [[ ! -z $GOOGLEDKIM  ]] #Checks to see if there is a record propagated.
	then
		echo -e ""$GOOGLEDKIM""
	else
		:
	fi
echo -e """"
if [[ ! -z $MSDKIM1  ]] #Checks to see if there is a record propagated.
	then
		echo -e ""$MSDKIM1""
	else
		:
	fi
echo -e """"
if [[ ! -z $MSDKIM2  ]] #Checks to see if there is a record propagated.
	then
		echo -e ""$MSDKIM2""
	else
		:
	fi
	
echo -e ""${RED}_______________________________________________________________${NC}""

echo -e ""${RED}[#] (MAILGUN DKIMS) ${NC}""
echo -e """"

if [[ ! -z $MAILGUNDKIMKRS  ]] #Checks to see if there is a record propagated.
	then
		echo -e ""$MAILGUNDKIMKRS""
	else
		:
	fi
if [[ ! -z $MAILGUNDKIMMAILO  ]] #Checks to see if there is a record propagated.
	then
		echo -e ""$MAILGUNDKIMMAILO""
	else
		:
	fi
if [[ ! -z $MAILGUNDKIMSMTP  ]] #Checks to see if there is a record propagated.
	then
		echo -e ""$MAILGUNDKIMSMTP""
	else
		:
	fi

echo -e """"
echo -e ""${BLUE}_______________________________________________________________${NC}""

echo -e ""${BLUE}[#] (SENDGRID DKIMS) ${NC}""
echo -e """"

if [[ ! -z $MAILGUNDKIMSMTP  ]] #Checks to see if there is a record propagated.
	then
		echo -e ""$SENDGRIDDKIMS1""
	else
		:
	fi
echo -e """"
if [[ ! -z $SENDGRIDDKIMS2  ]] #Checks to see if there is a record propagated.
	then
		echo -e ""$SENDGRIDDKIMS2""
	else
		:
	fi

echo -e ""${COLOR}_______________________________________________________________${NC}""

echo -e ""${COLOR}[#] (MAILCHIMP DKIMS) ${NC}""
echo -e """"

if [[ ! -z $MAILCHIMPDKIMK2  ]] #Checks to see if there is a record propagated.
	then
		echo -e ""$MAILCHIMPDKIMK2""
	else
		:
	fi
echo -e """"
if [[ ! -z $MAILCHIMPDKIMK3  ]] #Checks to see if there is a record propagated.
	then
		echo -e ""$MAILCHIMPDKIMK3""
	else
		:
	fi

#=================================================================
#===============  PROPAGATED MAIL.DOMAIN.COM A RECORD  ===========
#=================================================================

echo -e ""${GREY}_______________________________________________________________${NC}""
echo -e """"
echo -e ""${GREY}[#] dig ${RED}mail.$1 ${GREY}(mail.$1 A RECORD) ${NC}""
echo -e """"
if [[ ! -z $MAILSUBIP  ]] #Checks to see if there is an A record propagated for mail.domain.com.
	then
		printf ""$MAILSUBIP""
	else
		:
	fi
if [[ ! -z $MAILSUBPTR  ]] #Checks to see if the A record IP for mail.domain.com has a PTR record.
	then
		echo -e "" ${GREY}=>${NC} $MAILSUBPTR""
	else
		echo -e """"
	fi
	
#======================================================================
#===============  WHOIS MAIL.DOMAIN.COM IP ADDRESS  ===================
#======================================================================

echo -e """"
echo -e ""${GREY}[#] whois ${RED}${MAILSUBIP} ${GREY}(A RECORD IP INFO) ${NC}""
echo -e """"
if [[ ! -z $MAILSUBIP  ]] #Checks to see if there is an A record propagated for the given domain.
	then
		whois ""$MAILSUBIP"" |
		grep -Ei ""(Server|Registrar:|Registrar URL|OrgTechEmaiL|Organization:|Network-Name|Org-Name|OrgName|NetName|Status:|Registrant Name|org-name:|Registrant Org|Email|Registrant Street|Registrant City|Registrant Country|Registrant Phone:|Expiration|Expiry|Reseller|Organization Name|\(|netname:|descr:|remarks:|person:|abuse-mailbox:|country|Country|network:Org-name:|OrgAbuseEmail:|network:Updated-By|network:Organization|network:Tech-Contact|network:Admin-Contact|e-mail:|StateProv:|City:|ns[1-2])"" |
		grep -vE ""(Parent|served|RTechEmail|Invalid option:|RNOCEmail|\(BRST|This server accepts|RAbuseEmail|dest IP \(your IP\)|Intensity/frequency|Without these|NetName:|NOCEmail|Organization:|remarks:|StateProv:|City:|OrgTechEmail:|contact details|network:In-Addr-Server;|network:Network-Name:|Comments to|%rwhois|network:Tech-Contact;|OrgNOCName:|Country:|connect: Connection refused|Comment:)"" |
		sort -u |
		sed -e 's/^[ \t]*//'
	else
		:
	fi
dig -x mail.$1 | grep ""PTR"" | grep ""in-addr"" | grep -v "";"" | grep -v ""Invalid option:""

#=================================================================
#===============  PROPAGATED autodiscover record====================
#==================================================================

echo -e ""${GREY}_______________________________________________________________${NC}""
echo -e ""${GREY}[#] dig autodiscover.$1 (AUTODISCOVER RECORD) ${NC}""
echo -e """"
if [[ ! -z $ADRECORD  ]] #Checks to see if there is a record propagated.
	then
		
		echo -e ""$ADRECORD""
	else
		:
	fi
echo -e """"

#======================================================================
#===============  WHOIS AUTODISCOVER IP ADDRESS  ===================================
#======================================================================

echo -e ""${GREY}[#] whois ${ADIP} (AUTODISCOVER RECORD IP INFO) ${NC}""
echo -e """"
if [[ ! -z $ADIP  ]] #Checks to see if there is an A record propagated for the given autodisover subdomain.
    then		
		whois ""$ADIP"" |
		grep -Ei ""(Server|Registrar:|Registrar URL|OrgTechEmaiL|Organization:|Network-Name|Org-Name|OrgName|NetName|Status:|Registrant Name|org-name:|Registrant Org|Email|Registrant Street|Registrant City|Registrant Country|Registrant Phone:|Expiration|Expiry|Reseller|Organization Name|\(|netname:|descr:|remarks:|person:|abuse-mailbox:|country|Country|network:Org-name:|OrgAbuseEmail:|network:Updated-By|network:Organization|network:Tech-Contact|network:Admin-Contact|e-mail:|StateProv:|City:|ns[1-2])"" |
		grep -vE ""(Parent|served|RTechEmail|Invalid option:|RNOCEmail|\(BRST|This server accepts|RAbuseEmail|dest IP \(your IP\)|Intensity/frequency|Without these|NetName:|NOCEmail|Organization:|remarks:|City:|OrgTechEmail:|contact details|network:In-Addr-Server;|StateProv:|network:Network-Name:|Comments to|%rwhois|network:Tech-Contact;|OrgNOCName:|Country:|connect: Connection refused|Connection refused|OrgRoutingEmail)"" |
		sort -u |
		sed -e 's/^[ \t]*//'

    else
        :
    fi
echo -e ""${GREY}_______________________________________________________________${NC}"""
r02yJmp2,Mermaid Injection,guitarplayer616,JavaScript,Saturday 13th of April 2024 05:24:47 PM CDT,"// Mermaid injection google chrome console

// run to render below into mermaid graph
let script = document.createElement(""script"");
script.type = 'module';
script.textContent = `import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.esm.min.mjs';
mermaid.run();`
document.body.appendChild(script);

// type into <body>
<pre class=""mermaid"">sequenceDiagram
    Mower -&gt;&gt; Lawn: create()
    Lawn -&gt;&gt; Mower: Mower mower
    Mower -&gt;&gt; Grass: cut()
    Mower -&gt;&gt; Scanner: scan()
</pre>"
ymwDB1wd,Untitled,JeffGrigg,Java 5,Saturday 13th of April 2024 05:21:27 PM CDT,"import junit.framework.TestCase;

import java.util.Map;
import java.util.TreeMap;

public class ArrowAntiPatternTest extends TestCase {
    public void test() {
        final var testCases = new TreeMap<Integer, String>() {{
            put(999, ""A"");
            put(100, ""A"");
            put(91, ""A"");
            put(90, ""A"");
            put(89, ""B"");
            put(80, ""B"");
            put(79, ""C"");
            put(70, ""C"");
            put(69, ""D"");
            put(60, ""D"");
            put(59, ""F"");
            put(1, ""F"");
            put(0, ""F"");
            put(-1, ""F"");
            put(-10, ""F"");
            put(-100, ""F"");
        }};
        for (Map.Entry<Integer, String> testCase : testCases.entrySet()) {
            final var score = testCase.getKey();
            assertEquals(""Grade for score <"" + score + "">;"",
                    testCase.getValue(), ArrowAntiPattern.checkGrade(score));
        }
    }
}"
za6EqVR7,Untitled,JeffGrigg,Java 5,Saturday 13th of April 2024 05:21:00 PM CDT,"public class ArrowAntiPattern {

    public static String checkGrade(final int score) {
        if (score >= 90) {
            return ""A"";
        } else if (score >= 80) {
            return ""B"";
        } else if (score >= 70) {
            return ""C"";
        } else if (score >= 60) {
            return ""D"";
        } else {
            return ""F"";
        }
    }
}
"
rw9sqWjJ,korb fake,hacimiks,Lua,Saturday 13th of April 2024 05:12:12 PM CDT,"function Align(Part0,Part1,Position,Angle)
    local AlignPos = Instance.new('AlignPosition', Part1);
    AlignPos.Parent.CanCollide = false;
    AlignPos.ApplyAtCenterOfMass = true;
    AlignPos.MaxForce = 67752;
    AlignPos.MaxVelocity = math.huge/9e110;
    AlignPos.ReactionForceEnabled = false;
    AlignPos.Responsiveness = 200;
    AlignPos.RigidityEnabled = false;
    local AlignOri = Instance.new('AlignOrientation', Part1);
    AlignOri.MaxAngularVelocity = math.huge/9e110;
    AlignOri.MaxTorque = 67752;
    AlignOri.PrimaryAxisOnly = false;
    AlignOri.ReactionTorqueEnabled = false;
    AlignOri.Responsiveness = 200;
    AlignOri.RigidityEnabled = false;
    local AttachmentA=Instance.new('Attachment',Part1);
    local AttachmentB=Instance.new('Attachment',Part0);
    AttachmentA.Name = ""BruhA""
    AttachmentB.Name = ""BruhB""
    AttachmentB.Orientation = Angle
    AttachmentB.Position = Position
    AlignPos.Attachment0 = AttachmentA;
    AlignPos.Attachment1 = AttachmentB;
    AlignOri.Attachment0 = AttachmentA;
    AlignOri.Attachment1 = AttachmentB;
end

User = game:GetService(""Players"").LocalPlayer
Body = User.Character
Soul = Body.Humanoid

FakeLeg = Body.RightLowerLeg:Clone()
FakeLeg = Body.RightUpperLeg:Clone()
FakeLeg.Transparency = 1
Body.RightLowerLeg:Destroy()
Body.RightUpperLeg:Destroy()
FakeLeg.Parent = Body
Body.RightLowerLeg.RightLowerLeg:Destroy()
Body.RightUpperLeg.RightUpperLeg:Destroy()

local Korblox = Body[""Recolor (For Korblox)""]
Korblox.Handle.Massless = true
Korblox.Handle:BreakJoints()

Align(FakeLeg,Korblox.Handle,Vector3.new(0,.25,0),Vector3.new(0,0,0))

game:GetService(""RunService"").Heartbeat:connect(function(t)
    if Korblox:FindFirstChild(""Handle"", true) then
        Korblox.Handle.Velocity = Vector3.new(0, 30,0)
    end;
end)"
TEXpTpip,camforcefield v1,drpepper240,Lua,Saturday 13th of April 2024 04:47:23 PM CDT,"local cam, fp1, fp2
local tryWrap = true
local wl = {""drPepper""}

while tryWrap do
	if not cam then
		local sides = peripheral.getNames()
		for _, side in pairs(sides) do
			if peripheral.getType(side) == ""warpdriveCamera"" then
				cam = peripheral.wrap(side)
				print(""Wrapped warpdriveCamera on "" .. side .. "" side"")
			end
		end
	end

	if not fp1 then
		if peripheral.getType(""top"") == ""warpdriveForceFieldProjector"" then
			fp1 = peripheral.wrap(""top"")
		end
	end

	if not fp2 then
		if peripheral.getType(""bottom"") == ""warpdriveForceFieldProjector"" then
			fp2 = peripheral.wrap(""bottom"")
		end
	end

	if not cam or not fp1 or not fp2 then
		sleep(2)
	else
		tryWrap = false
	end
end

--TODO set params for the peripherals

while true do
	local rCnt = cam.getResultsCount()
	
	local doEnable = rCnt > 0
	if not doEnable then
		fp1.enable(false)
		fp2.enable(false)
	end
	
	for i_r = 0, rCnt-1 do
		local ok, entityType, entityName = cam.getResult(i_r)
		if ok then
			print(textutils.formatTime(os.time(""local"")), entityName)
			for _, name in pairs(wl) do
				if entityName == name then
					doEnable = false
				end
			end
		end
	end
	
	if doEnable then
		fp1.enable(true)
		--fp2.enable(true)
		sleep(5)
	else
		sleep(0.5)
	end
end"
L1xYJ791,Código integración slick.js con divi - Carrusel Slider Vertical,oscarviedma,HTML,Saturday 13th of April 2024 04:19:30 PM CDT,"<link rel=""stylesheet"" type=""text/css"" href=""https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css""/>
<script src=""https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js""></script>

<script>
jQuery(document).ready(function($) {
	var $titleCarousel = $('#ov-caracteristicas-carousel .ov-title-carousel');
  var $contentCarousel = $('#ov-caracteristicas-carousel .ov-content-carousel');

  $titleCarousel.slick({
  	vertical: true,
    slidesToShow: 3,
    slidesToScroll: 1,
    arrows: true,
    asNavFor: $contentCarousel,
    focusOnSelect: true,
    centerMode: true,
    centerPadding: '50px',
    autoplay: 1,
		autoplaySpeed: 5000,
    pauseOnHover: 1,	
    prevArrow: '<button type=""button"" class=""slick-prev"">B</button>',
    nextArrow: '<button type=""button"" class=""slick-next"">C</button>'
  });

  $contentCarousel.slick({
    slidesToShow: 1,
    slidesToScroll: 1,
    arrows: false,
    fade: false,
    asNavFor: $titleCarousel,
  });
});
</script>
"
mtETPxwV,cool egg game!,CaramelDogey,Lua,Saturday 13th of April 2024 03:56:22 PM CDT,"local TweenService = game:GetService(""TweenService"")
local SoundService = game:GetService(""SoundService"")
local RunService = game:GetService(""RunService"")
local Debris = game:GetService(""Debris"")
local StarterGui = game:GetService(""StarterGui"")
StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.All, false)
local Lighting = game:GetService(""Lighting"")

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:FindFirstChildWhichIsA(""Humanoid"")
local camera = game.Workspace.CurrentCamera

local props = script:GetChildren()
local gerclone = script[""small ger""]:Clone()
local eggs = game.ReplicatedStorage.Eggs:GetChildren()

for i, v in pairs(props) do
	v.Parent = game.ReplicatedStorage
end

local shaking = false
local explode = false

RunService.RenderStepped:Connect(function(delta)
	if not shaking then
		return
	end
	local factor = (delta*10)*(time()*math.pi)
	camera.CFrame = camera.CFrame:Lerp(camera.CFrame * CFrame.Angles(
		math.rad(math.random(-factor, factor)),
		math.rad(math.random(-factor, factor)),
		math.rad(math.random(-factor, factor))
		), delta*4)
end)

local function spawnger()
	task.spawn(function()
		local smallger = gerclone:Clone()
		smallger.PrimaryPart.Anchored = true
		smallger.Parent = game.Workspace
		while task.wait() do
			local quantity = 8
			local radius = 4
			for i = 1, quantity do
				local midpoint = character.PrimaryPart.Position
				local formula = i * ((math.pi*2)/quantity)
				local position = midpoint + Vector3.new(math.cos(formula) * radius, 0, math.sin(formula) * radius)
				smallger.PrimaryPart.CFrame = CFrame.new(position, midpoint)
				task.wait()
			end
		end
	end)
end

local function ger(sound: Sound, speed: number? | boolean?)
	local sound = sound:Clone()
	sound.Parent = SoundService
	speed = speed or false
	if speed then
		sound.PlaybackSpeed = speed
		sound.Looped = true
	end
	sound:Play()
end

local function random(list)
	return list[math.random(#list)]
end

local function popup(text)
	local label = Instance.new(""TextLabel"")
	label.Size = UDim2.new(
		Random.new():NextNumber(0, 0.5), 0,
		Random.new():NextNumber(0, 0.2), 0
	)
	label.Position = UDim2.new(
		Random.new():NextNumber(0, 0.5), 0,
		Random.new():NextNumber(0, 0.8), 0
	)
	label.Rotation = math.random(-50, 50)
	label.Text = text
	label.ZIndex = #script.Parent:GetChildren()
	
	if math.random(1, 3) == 1 then
		label.TextScaled = true
	end
	
	label.TextColor3 = Color3.fromRGB(
		math.random(0, 255),
		math.random(0, 255),
		math.random(0, 255)
	)
	
	label.Transparency = Random.new():NextNumber()

	if math.random(1, 8) == 1 then
		label.TextStrokeTransparency = 0
		label.TextStrokeColor3 = Color3.fromRGB(
			math.random(0, 255),
			math.random(0, 255),
			math.random(0, 255)
		)
	else
		label.TextStrokeTransparency = 1
	end
	
	label.Font = random({Enum.Font.SciFi, Enum.Font.Gotham, Enum.Font.Fantasy, Enum.Font.Creepster, Enum.Font.FredokaOne, Enum.Font.Arial, Enum.Font.Cartoon})
	label.BackgroundTransparency = 1
	
	label.Parent = script.Parent
	Debris:AddItem(label, 2)
end

local hint = Instance.new(""Hint"", game.Workspace)
for seconds = 10, 1, -1 do
	hint.Text = string.format(""eggs will spawn in %01d:%02d"", math.floor(seconds / 60), seconds % 60)
	task.wait(1)
end
hint.Text = ""spawning eggs...""

task.spawn(function()
	while task.wait(0.1) do
		local primary = player.Character.PrimaryPart
		local egg: Part = random(eggs)
		egg.CanCollide = true
		egg.Anchored = false
		egg.Shape = Enum.PartType.Ball
		egg.Position = Vector3.new(
			math.random(primary.Position.X - 30, primary.Position.X + 30),
			90,
			math.random(primary.Position.Z - 30, primary.Position.Z + 30)
		)
		egg.Orientation = Vector3.new(
			math.random(-360, 360),
			math.random(-360, 360),
			math.random(-360, 360)
		)
		egg.Parent = game.Workspace
		task.spawn(function()
			repeat task.wait() until explode == true
			task.wait(Random.new():NextNumber(0, 4)*2)
			local boom = script.Parent.Boom:Clone()
			boom.Parent = egg
			local explosion = Instance.new(""Explosion"", egg)
			explosion.Position = egg.Position
			explosion.DestroyJointRadiusPercent = 0
			boom:Play()
		end)
	end
end)

task.wait(3)
hint.Text = ""GET GER'ED!""
for i, v in pairs(props) do
	v.Parent = game.Workspace
end
ger(script.Parent.ger)
--[[
for i = 1, 30 do
	local smallger = gerclone:Clone()
	smallger:FindFirstChildWhichIsA(""Humanoid"").PlatformStand = true
	smallger.Parent = game.Workspace
	local primary = character.PrimaryPart
	smallger.PrimaryPart.Position = Vector3.new(
		math.random(primary.Position.X - 30, primary.Position.X + 30),
		90,
		math.random(primary.Position.Z - 30, primary.Position.Z + 30)
	)
end]]
task.wait(17)
TweenService:Create(camera, TweenInfo.new(3, Enum.EasingStyle.Linear), {FieldOfView = 50})

local info = TweenInfo.new(20, Enum.EasingStyle.Linear)

shaking = true

task.spawn(function()
	for i = 1, 4 do
		ger(script.Parent.whyyoucallmeger, 2+(1/time()))
		task.wait(2)
	end
end)

task.spawn(function()
	while task.wait(0) do
		local words = {""FIND"", ""GET"", ""REGISTER"", ""SEARCH"", ""ADD"", ""GIVE""}
		local chars = {
			[""A""] = {""A"", ""ᴀ"", ""ᗩ"", ""Α"", ""ａ"", ""A̴̛͎̳͌"", ""Ⱥ"", ""₳"", ""∆"", ""Ä""},
			[""B""] = {""B"", ""ʙ"", ""ʙ"", ""ᗷ"", ""Β"", ""ｂ"", ""𝐵"", ""𝕭"", ""ß"", ""฿""},
			[""C""] = {""C"", ""ᑕ"", ""Ⅽ"", ""Ϲ"", ""ｃ"", ""₵"", ""©"", ""↻"", ""☾"", ""☪""},
			[""D""] = {""D"", ""ᗪ"", ""Ⅾ"", ""ⅾ"", ""ⅾ"", ""Ｄ"", ""ｄ"", ""Ð"", ""Ð""},
			[""E""] = {""E"", ""ᴇ"", ""ᴇ"", ""ᗴ"", ""Ｅ"", ""ｅ"", ""Ǝ"", ""ɘ"", ""∑"", ""€""},
			[""F""] = {""F"", ""ғ"", ""ғ"", ""Ϝ"", ""Ｆ"", ""ｆ"", ""℉"", ""₣"", ""Ⅎ"", ""Ŧ""},
			[""G""] = {""G"", ""ɢ"", ""ɢ"", ""ɢ"", ""ɢ"", ""ɢ"", ""Ꮆ"", ""Ꮐ"", ""Ｇ"", ""ｇ""},
			[""H""] = {""H"", ""ʜ"", ""ʜ"", ""ᕼ"", ""Ｈ"", ""ｈ"", ""♄"", ""ℍ"", ""Ħ""},
			[""I""] = {""I"", ""ɪ"", ""ɪ"", ""ᴉ"", ""ᴉ"", ""Ι"", ""Ｉ"", ""ｉ"", ""Ɨ"", ""¡""},
			[""J""] = {""J"", ""ᒍ"", ""Ｊ"", ""ｊ"", ""♁"", ""Ј""},
			[""K""] = {""K"", ""ᴋ"", ""ᴋ"", ""Ꮶ"", ""Κ"", ""Ｋ"", ""ｋ"", ""₭"", ""K"", ""𝐾""},
			[""L""] = {""L"", ""ʟ"", ""ʟ"", ""ʟ"", ""ᒪ"", ""Ⅼ"", ""Ｌ"", ""ｌ"", ""£"", ""Ł""},
			[""M""] = {""M"", ""ᴍ"", ""ᴍ"", ""ᗰ"", ""Ⅿ"", ""Ｍ"", ""ｍ"", ""♍"", ""₥"", ""ℳ""},
			[""N""] = {""N"", ""ɴ"", ""ɴ"", ""ɴ"", ""ɴ"", ""ᑎ"", ""Ｎ"", ""ｎ"", ""♫"", ""ℕ""},
			[""O""] = {""O"", ""ᴏ"", ""ᴏ"", ""ᴏ"", ""ᴏ"", ""0"", ""𝐎"", ""Ｏ"", ""ｏ"", ""Φ""},
			[""P""] = {""P"", ""ᴘ"", ""ᴘ"", ""ᑭ"", ""𝐏"", ""Ｐ"", ""ｐ"", ""ℙ"", ""₱"", ""℘""},
			[""Q""] = {""Q"", ""ϙ"", ""𝐐"", ""Ｑ"", ""ｑ"", ""🅀"", ""Ǫ"", ""q"", ""Ҩ"", ""ℚ""},
			[""R""] = {""R"", ""ʀ"", ""ʀ"", ""ᖇ"", ""ℝ"", ""Ｒ"", ""ｒ"", ""®"", ""℞"", ""ℛ""},
			[""S""] = {""S"", ""s"", ""ꜱ"", ""ꜱ"", ""Ꮪ"", ""Ｓ"", ""ｓ"", ""§"", ""℣""},
			[""T""] = {""T"", ""ᴛ"", ""ᴛ"", ""Ꭲ"", ""Ｔ"", ""ｔ"", ""†"", ""⊤"", ""✞"", ""Ŧ""},
			[""U""] = {""U"", ""ᴜ"", ""ᴜ"", ""ᑌ"", ""Ｕ"", ""ｕ"", ""ʉ"", ""Ü"", ""∪"", ""Ц""},
			[""V""] = {""V"", ""ᴠ"", ""ᴠ"", ""Ⅴ"", ""ᐯ"", ""Ｖ"", ""ｖ"", ""Ѵ"", ""⋁""},
			[""W""] = {""W"", ""ᴡ"", ""ᴡ"", ""ᗯ"", ""Ｗ"", ""ｗ"", ""Ш"", ""₩"", ""ω""},
			[""X""] = {""X"", ""x"", ""х"", ""Ⅹ"", ""ⅹ"", ""Ｘ"", ""ｘ"", ""×"", ""✗"", ""⨯""},
			[""Y""] = {""Y"", ""ʏ"", ""ʏ"", ""ʏ"", ""Υ"", ""Ｙ"", ""ｙ"", ""¥"", ""ψ"", ""ү""},
			[""Z""] = {""Z"", ""ᴢ"", ""ᴢ"", ""ᘔ"", ""Ｚ"", ""ｚ"", ""Z̵̫͉͙̖̥̗̭̘͙̆̈̄̀̑͠"", ""Ƶ"", ""ℤ"", ""Ȥ""}
		}

		local special_chars = {""!"", ""_"", ""-"", ""?"", ""="", ""+""}

		local text = ""ERROR: UNABLE TO "" .. random(words) ..  "" EGGS""
		local newtext = """"

		if math.random(1, 1000) == 1 then
			hint.Text = ""GER IS TAKING OVER""
			task.wait(1)
			continue
		end

		for _, char in pairs(text:upper():split("""")) do
			if chars[char] then
				char = random(chars[char])
				if math.random(1, 5) == 1 then
					char = char .. random(special_chars)
				end
			end
			newtext = newtext .. char
		end
		
		if newtext ~= """" then
			text = newtext
		end
		
		hint.Text = text
	end
end)

TweenService:Create(Lighting.ColorCorrection, info, {
	Saturation = 10
}):Play()
TweenService:Create(Lighting.Atmosphere, info, {
	Density = 1,
	Offset = 1,
	Glare = 5,
	Haze = 5,
}):Play()
task.wait(1)
TweenService:Create(Lighting.SunRays, info, {
	Intensity = 1,
	Spread = 1,
}):Play()
task.wait(1)
TweenService:Create(Lighting.Blur, info, {
	Size = 10,
}):Play()
task.wait(3)
task.spawn(function()
	for i, v in pairs(game.Workspace:GetDescendants()) do
		if v:IsA(""BasePart"") then
			pcall(function()
				local lol = v:Clone()
				lol.Parent = v
				lol.Material = random({Enum.Material.Wood, Enum.Material.WoodPlanks, Enum.Material.Cobblestone, Enum.Material.Neon, Enum.Material.Foil})
				lol.BrickColor = BrickColor.random()
				task.wait()
			end)
		end
	end
end)
task.wait(4)
task.delay(2, function()
	while task.wait() do
		if math.random(1, 2) == 1 then
			popup(hint.Text)
		else
			popup(""GER"")
		end
	end
end)
print(""exploding :3"")
explode = true
task.wait(3)
	for i = 1, 10 do
		spawnger()
		task.wait(2)
	end
task.wait(6)
for i, v in pairs(game.Workspace:GetDescendants()) do
	if v:IsA(""BasePart"") then
		pcall(function()
			local terrain = game.Workspace.Terrain
			terrain:FillBlock(v.CFrame, v.Size*1.2, Enum.Material.Water)
			if i % 10 == 0 then
				task.wait()
			end
		end)
	end
end"
1iGQhCWL,Trade and Win Big with NordFX Mega Super Lottery Campaign,fxvnpro,PHP,Saturday 13th of April 2024 03:54:39 PM CDT,https://www.fxvnpro.com/trade-and-win-big-with-nordfx-mega-super-lottery-campaign/
C168YFQB,FE Invisible,hacimiks,Lua,Saturday 13th of April 2024 03:14:06 PM CDT,"--Settings:
local ScriptStarted = false
local Keybind = ""E"" --Set to whatever you want, has to be the name of a KeyCode Enum.
local Transparency = true --Will make you slightly transparent when you are invisible. No reason to disable.
local NoClip = false --Will make your fake character no clip.

local Player = game:GetService(""Players"").LocalPlayer
local RealCharacter = Player.Character or Player.CharacterAdded:Wait()

local IsInvisible = false

RealCharacter.Archivable = true
local FakeCharacter = RealCharacter:Clone()
local Part
Part = Instance.new(""Part"", workspace)
Part.Anchored = true
Part.Size = Vector3.new(200, 1, 200)
Part.CFrame = CFrame.new(0, -500, 0) --Set this to whatever you want, just far away from the map.
Part.CanCollide = true
FakeCharacter.Parent = workspace
FakeCharacter.HumanoidRootPart.CFrame = Part.CFrame * CFrame.new(0, 5, 0)

for i, v in pairs(RealCharacter:GetChildren()) do
  if v:IsA(""LocalScript"") then
      local clone = v:Clone()
      clone.Disabled = true
      clone.Parent = FakeCharacter
  end
end
if Transparency then
  for i, v in pairs(FakeCharacter:GetDescendants()) do
      if v:IsA(""BasePart"") then
          v.Transparency = 0.7
      end
  end
end
local CanInvis = true
function RealCharacterDied()
  CanInvis = false
  RealCharacter:Destroy()
  RealCharacter = Player.Character
  CanInvis = true
  isinvisible = false
  FakeCharacter:Destroy()
  workspace.CurrentCamera.CameraSubject = RealCharacter.Humanoid

  RealCharacter.Archivable = true
  FakeCharacter = RealCharacter:Clone()
  Part:Destroy()
  Part = Instance.new(""Part"", workspace)
  Part.Anchored = true
  Part.Size = Vector3.new(200, 1, 200)
  Part.CFrame = CFrame.new(9999, 9999, 9999) --Set this to whatever you want, just far away from the map.
  Part.CanCollide = true
  FakeCharacter.Parent = workspace
  FakeCharacter.HumanoidRootPart.CFrame = Part.CFrame * CFrame.new(0, 5, 0)

  for i, v in pairs(RealCharacter:GetChildren()) do
      if v:IsA(""LocalScript"") then
          local clone = v:Clone()
          clone.Disabled = true
          clone.Parent = FakeCharacter
      end
  end
  if Transparency then
      for i, v in pairs(FakeCharacter:GetDescendants()) do
          if v:IsA(""BasePart"") then
              v.Transparency = 0.7
          end
      end
  end
 RealCharacter.Humanoid.Died:Connect(function()
 RealCharacter:Destroy()
 FakeCharacter:Destroy()
 end)
 Player.CharacterAppearanceLoaded:Connect(RealCharacterDied)
end
RealCharacter.Humanoid.Died:Connect(function()
 RealCharacter:Destroy()
 FakeCharacter:Destroy()
 end)
Player.CharacterAppearanceLoaded:Connect(RealCharacterDied)
local PseudoAnchor
game:GetService ""RunService"".RenderStepped:Connect(
  function()
      if PseudoAnchor ~= nil then
          PseudoAnchor.CFrame = Part.CFrame * CFrame.new(0, 5, 0)
      end
       if NoClip then
      FakeCharacter.Humanoid:ChangeState(11)
       end
  end
)

PseudoAnchor = FakeCharacter.HumanoidRootPart
local function Invisible()
  if IsInvisible == false then
      local StoredCF = RealCharacter.HumanoidRootPart.CFrame
      RealCharacter.HumanoidRootPart.CFrame = FakeCharacter.HumanoidRootPart.CFrame
      FakeCharacter.HumanoidRootPart.CFrame = StoredCF
      RealCharacter.Humanoid:UnequipTools()
      Player.Character = FakeCharacter
      workspace.CurrentCamera.CameraSubject = FakeCharacter.Humanoid
      PseudoAnchor = RealCharacter.HumanoidRootPart
      for i, v in pairs(FakeCharacter:GetChildren()) do
          if v:IsA(""LocalScript"") then
              v.Disabled = false
          end
      end

      IsInvisible = true
  else
      local StoredCF = FakeCharacter.HumanoidRootPart.CFrame
      FakeCharacter.HumanoidRootPart.CFrame = RealCharacter.HumanoidRootPart.CFrame
     
      RealCharacter.HumanoidRootPart.CFrame = StoredCF
     
      FakeCharacter.Humanoid:UnequipTools()
      Player.Character = RealCharacter
      workspace.CurrentCamera.CameraSubject = RealCharacter.Humanoid
      PseudoAnchor = FakeCharacter.HumanoidRootPart
      for i, v in pairs(FakeCharacter:GetChildren()) do
          if v:IsA(""LocalScript"") then
              v.Disabled = true
          end
      end
      IsInvisible = false
  end
end

game:GetService(""UserInputService"").InputBegan:Connect(
  function(key, gamep)
      if gamep then
          return
      end
      if key.KeyCode.Name:lower() == Keybind:lower() and CanInvis and RealCharacter and FakeCharacter then
          if RealCharacter:FindFirstChild(""HumanoidRootPart"") and FakeCharacter:FindFirstChild(""HumanoidRootPart"") then
              Invisible()
          end
      end
  end
)
local Sound = Instance.new(""Sound"",game:GetService(""SoundService""))
Sound.SoundId = ""rbxassetid://232127604""
Sound:Play()
game:GetService(""StarterGui""):SetCore(""SendNotification"",{[""Title""] = ""Invisible Toggle Loaded"",[""Text""] = ""Press ""..Keybind.."" to become change visibility."",[""Duration""] = 20,[""Button1""] = ""OK""})
game:GetService(""StarterGui""):SetCore(""SendNotification"",{[""Title""] = ""Need Mobile Keyboard for Mobile"",[""Text""] = ""Press ""..Keybind.."" to become change visibility."",[""Duration""] = 20,[""Button1""] = ""OK""})
game:GetService(""StarterGui""):SetCore(""SendNotification"",{[""Title""] = ""[E] For Toggle"",[""Text""] = ""Press ""..Keybind.."" to become change visibility."",[""Duration""] = 20,[""Button1""] = ""OK""})"
ATygZtaM,Slow GCF Algorithm,BenTibnam,Python,Saturday 13th of April 2024 02:07:23 PM CDT,"import math

# how many numbers we're going to find the factors of
input_count = 0

# where the factors are being stored (2D array)
factors = []

# function for finding factors
def find_and_store(number=0):
        number = abs(number) if (number < 0 and number != 1) else 1 if (number == 0) else number

        # 1 and number are always factors
        n_factors = [1]

        # going through possible factors
        for i in range(2, number):
                for j in range(i, number):
                        product = i * j

                        # adding factor to list
                        if product == number:
                                n_factors.append(i)

                                # accounting for perfect squares
                                if (i != j):
                                        n_factors.append(j)
                                break
                        # if the product is greater then the number it isn't a factor
                        elif product > number:
                                break

                continue

        n_factors.append(number)
        factors.append(n_factors)


def calculate_gcf():
        primary_factors = factors[0]
        secondary_factors = factors[1]
        gcf = 0

        # slow check each factor
        for f1 in primary_factors:
                for f2 in secondary_factors:
                        if f1 == f2 and f1 > gcf:
                                gcf = f1
                                break

        return gcf




print(""GCF Calculator - Slow Version\n"")

while True:
        number = input(""Enter integer to find factors: "")

        # any non-number will break out of the program
        try:
                # using an exception because I can't get isnan to work as it's suppose to and I just wanted to get this working
                math.isnan(float(number))
        except ValueError:
                break

        find_and_store(int(number))

# if more then one number was entered we can calculate a GCF
if len(factors) > 1:
        gcf = calculate_gcf()
        print(gcf)
else:
        print(""Must provide at least two numbers to calculate a GCF"")"
sS1WhaCp,B,Ankit_132,C++,Saturday 13th of April 2024 02:03:36 PM CDT,"#include <bits/stdc++.h>
using namespace std;

#define ll     long long
#define _test   int _TEST; cin>>_TEST; while(_TEST--)
#define ff     first
#define ss     second
#define pb     push_back

int main()
{
    _test
    {
        int n;
        cin >> n;
        map <int, int> cnt;
        for(int i = 0; i < n; i++) {
          int x;
          cin >> x;
          cnt[x] += 1;
        }
        int ans = 0;
        for(auto [x, freq] : cnt) {
          if(freq > 1) {
            ++ans;
          }
        }
        cout << ans << endl;
    }
}"
VkYTbBE1,C,Ankit_132,C++,Saturday 13th of April 2024 02:03:35 PM CDT,"#include <bits/stdc++.h>
using namespace std;

#define ll     long long
#define _test   int _TEST; cin>>_TEST; while(_TEST--)
#define ff     first
#define ss     second
#define pb     push_back

int main()
{
    _test
    {
        int n;
        cin>>n;
		int ans=0;
		for(int i=1;i<=n;i++) ans+=1ll*i*(2*i-1);

		cout<<ans<<"" ""<<n*2<<""\n"";

		for(int i=n;i;i--){

			cout<<1<<"" ""<<i<<"" "";
			for(int j=1;j<=n;j++) cout<<j<<"" "";
			cout<<""\n"";

			cout<<2<<"" ""<<i<<"" "";
			for(int j=1;j<=n;j++) cout<<j<<"" "";
			cout<<""\n"";
		}
    }
}"
s9Vt1v2C,D,Ankit_132,C++,Saturday 13th of April 2024 02:03:33 PM CDT,"#include <bits/stdc++.h>
using namespace std;

#define ll     long long
#define _test   int _TEST; cin>>_TEST; while(_TEST--)
#define ff     first
#define ss     second
#define pb     push_back

vector<pair<int, int>> op;

void func2(vector<int>& a, int l, int r)
{
    if (l == r)
    {
        if (a[l] != 0)
	{
            op.push_back({l, l});
            a[l] = 0;
        }
        return;
    }

    func2(a, l + 1, r);
    if (a[l] != r - l)
    {
        op.push_back({l, r});
        for (int i = l; i <= r; i++)
            a[i] = r - l;

        func2(a, l + 1, r);
    }
}

void func(vector<int>& a, int l, int r) {
    int s = 0;
    for (int i = l; i <= r; i++)
        s += a[i];

    if (s <= (r - l + 1) * (r - l + 1)) {
        func2(a, l, r);
        op.push_back({l, r});
        for (int i = l; i <= r; i++) {
            a[i] = (r - l + 1);
        }
    } else {
        int mx = -1;
        int pos = -1;
        for (int i = l; i <= r; i++) {
            if (a[i] > mx) {
                mx = a[i];
                pos = i;
            }
        }

        if (pos != l)
            func(a, l, pos - 1);

        if (pos != r)
            func(a, pos + 1, r);
    }
}

int main() {
    int n;
    cin >> n;
    vector<int> a(n);
    for (int& i : a)
        cin >> i;

    func(a, 0, n - 1);
    int s = 0;
    for (int i : a)
        s += i;

    cout << s << "" "" << op.size() << ""\n"";

    for (auto [l, r] : op)
        cout << l + 1 << "" "" << r + 1 << ""\n"";
}"
HupZg4DQ,A,Ankit_132,C++,Saturday 13th of April 2024 02:02:28 PM CDT,"#include <bits/stdc++.h>
using namespace std;

#define ll     long long
#define _test   int _TEST; cin>>_TEST; while(_TEST--)
#define ff     first
#define ss     second
#define pb     push_back

int main()
{
    _test
    {
        int n, q, x, y;
		cin >> n >> q;
		cin >> x;
		while(--n) cin >> y;
		while(q--) {
			cin >> y;
			cout << min(x-1, y) << ' ';
		}
		cout << '\n';

    }
}"
7hYZPFqP,Crypto Prices,actorcat,VisualBasic,Saturday 13th of April 2024 01:45:24 PM CDT,"'''must change module name to JsonConverter
'''must reference Microsoft Scripting Runtime, Microsoft Internet Controls, Microsoft HTML Object Library...
'''https://www.etsy.com/shop/ExcelByActorkitten


'''COPY SUB AND PASTE INTO ANOTHER MODULE THEN UNCOMMENT...
'Sub Crypto_Prices()
'''put crypto on column A,,, BTC, ETH, DOGE,,, ETC...
'''put currency on row 1,,, USD, CAD, YEN,,, ETC...
'Dim strURL As String, strJSON As String, strTicker As String, strCurrency As String, strLength As String
'Dim i As Integer
'Dim i2 As Integer
'Dim http As Object
'Dim Json As Object
'Dim lastcolumn As Long
'Dim lastrow As Long
'With ActiveSheet
'    lastcolumn = .Cells(1, .Columns.Count).End(xlToLeft).Column
'    lastrow = .Cells(Rows.Count, 1).End(xlUp).Row
'End With
'For i = 2 To lastrow
'    For i2 = 2 To lastcolumn
'    strCurrency = Cells(1, i2).Value
'    strTicker = Cells(i, 1).Value
'    strURL = ""https://min-api.cryptocompare.com/data/histoday?fsym="" & strTicker & ""&tsym="" & strCurrency & ""&limit=60&aggregate=3&e=CCCAGG""
'    Set http = CreateObject(""MSXML2.XMLHTTP"")
'    http.Open ""GET"", strURL, False
'    http.Send
'    strJSON = http.responsetext

'''Debug.Print http.responsetext: Stop

'    Set Json = JsonConverter.ParseJson(strJSON)
'    On Error Resume Next
'    Cells(i, i2).Value = Json(""Data"")(61)(""close"")
'If Err.Number = 13 Then MsgBox strTicker & "" error""
'    DoEvents
'    Next i2
'DoEvents
'Next i
'End Sub







' VBA-JSON v2.3.1
' (c) Tim Hall - https://github.com/VBA-tools/VBA-JSON
'
' JSON Converter for VBA
'
' Errors:
' 10001 - JSON parse error
'
' @class JsonConverter
' @author tim.hall.engr@gmail.com
' @license MIT (http://www.opensource.org/licenses/mit-license.php)
'' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ '
'
' Based originally on vba-json (with extensive changes)
' BSD license included below
'
' JSONLib, http://code.google.com/p/vba-json/
'
' Copyright (c) 2013, Ryo Yokoyama
' All rights reserved.
'
' Redistribution and use in source and binary forms, with or without
' modification, are permitted provided that the following conditions are met:
'     * Redistributions of source code must retain the above copyright
'       notice, this list of conditions and the following disclaimer.
'     * Redistributions in binary form must reproduce the above copyright
'       notice, this list of conditions and the following disclaimer in the
'       documentation and/or other materials provided with the distribution.
'     * Neither the name of the <organization> nor the
'       names of its contributors may be used to endorse or promote products
'       derived from this software without specific prior written permission.
'
' THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND
' ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
' WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
' DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
' DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
' (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
' LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
' ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
' (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
' SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ '
Option Explicit

' === VBA-UTC Headers
#If Mac Then

#If VBA7 Then

' 64-bit Mac (2016)
Private Declare PtrSafe Function utc_popen Lib ""/usr/lib/libc.dylib"" Alias ""popen"" _
    (ByVal utc_Command As String, ByVal utc_Mode As String) As LongPtr
Private Declare PtrSafe Function utc_pclose Lib ""/usr/lib/libc.dylib"" Alias ""pclose"" _
    (ByVal utc_File As LongPtr) As LongPtr
Private Declare PtrSafe Function utc_fread Lib ""/usr/lib/libc.dylib"" Alias ""fread"" _
    (ByVal utc_Buffer As String, ByVal utc_Size As LongPtr, ByVal utc_Number As LongPtr, ByVal utc_File As LongPtr) As LongPtr
Private Declare PtrSafe Function utc_feof Lib ""/usr/lib/libc.dylib"" Alias ""feof"" _
    (ByVal utc_File As LongPtr) As LongPtr

#Else

' 32-bit Mac
Private Declare Function utc_popen Lib ""libc.dylib"" Alias ""popen"" _
    (ByVal utc_Command As String, ByVal utc_Mode As String) As Long
Private Declare Function utc_pclose Lib ""libc.dylib"" Alias ""pclose"" _
    (ByVal utc_File As Long) As Long
Private Declare Function utc_fread Lib ""libc.dylib"" Alias ""fread"" _
    (ByVal utc_Buffer As String, ByVal utc_Size As Long, ByVal utc_Number As Long, ByVal utc_File As Long) As Long
Private Declare Function utc_feof Lib ""libc.dylib"" Alias ""feof"" _
    (ByVal utc_File As Long) As Long

#End If

#ElseIf VBA7 Then

' http://msdn.microsoft.com/en-us/library/windows/desktop/ms724421.aspx
' http://msdn.microsoft.com/en-us/library/windows/desktop/ms724949.aspx
' http://msdn.microsoft.com/en-us/library/windows/desktop/ms725485.aspx
Private Declare PtrSafe Function utc_GetTimeZoneInformation Lib ""kernel32"" Alias ""GetTimeZoneInformation"" _
    (utc_lpTimeZoneInformation As utc_TIME_ZONE_INFORMATION) As Long
Private Declare PtrSafe Function utc_SystemTimeToTzSpecificLocalTime Lib ""kernel32"" Alias ""SystemTimeToTzSpecificLocalTime"" _
    (utc_lpTimeZoneInformation As utc_TIME_ZONE_INFORMATION, utc_lpUniversalTime As utc_SYSTEMTIME, utc_lpLocalTime As utc_SYSTEMTIME) As Long
Private Declare PtrSafe Function utc_TzSpecificLocalTimeToSystemTime Lib ""kernel32"" Alias ""TzSpecificLocalTimeToSystemTime"" _
    (utc_lpTimeZoneInformation As utc_TIME_ZONE_INFORMATION, utc_lpLocalTime As utc_SYSTEMTIME, utc_lpUniversalTime As utc_SYSTEMTIME) As Long

#Else

Private Declare Function utc_GetTimeZoneInformation Lib ""kernel32"" Alias ""GetTimeZoneInformation"" _
    (utc_lpTimeZoneInformation As utc_TIME_ZONE_INFORMATION) As Long
Private Declare Function utc_SystemTimeToTzSpecificLocalTime Lib ""kernel32"" Alias ""SystemTimeToTzSpecificLocalTime"" _
    (utc_lpTimeZoneInformation As utc_TIME_ZONE_INFORMATION, utc_lpUniversalTime As utc_SYSTEMTIME, utc_lpLocalTime As utc_SYSTEMTIME) As Long
Private Declare Function utc_TzSpecificLocalTimeToSystemTime Lib ""kernel32"" Alias ""TzSpecificLocalTimeToSystemTime"" _
    (utc_lpTimeZoneInformation As utc_TIME_ZONE_INFORMATION, utc_lpLocalTime As utc_SYSTEMTIME, utc_lpUniversalTime As utc_SYSTEMTIME) As Long

#End If

#If Mac Then

#If VBA7 Then
Private Type utc_ShellResult
    utc_Output As String
    utc_ExitCode As LongPtr
End Type

#Else

Private Type utc_ShellResult
    utc_Output As String
    utc_ExitCode As Long
End Type

#End If

#Else

Private Type utc_SYSTEMTIME
    utc_wYear As Integer
    utc_wMonth As Integer
    utc_wDayOfWeek As Integer
    utc_wDay As Integer
    utc_wHour As Integer
    utc_wMinute As Integer
    utc_wSecond As Integer
    utc_wMilliseconds As Integer
End Type

Private Type utc_TIME_ZONE_INFORMATION
    utc_Bias As Long
    utc_StandardName(0 To 31) As Integer
    utc_StandardDate As utc_SYSTEMTIME
    utc_StandardBias As Long
    utc_DaylightName(0 To 31) As Integer
    utc_DaylightDate As utc_SYSTEMTIME
    utc_DaylightBias As Long
End Type

#End If
' === End VBA-UTC

Private Type json_Options
    ' VBA only stores 15 significant digits, so any numbers larger than that are truncated
    ' This can lead to issues when BIGINT's are used (e.g. for Ids or Credit Cards), as they will be invalid above 15 digits
    ' See: http://support.microsoft.com/kb/269370
    '
    ' By default, VBA-JSON will use String for numbers longer than 15 characters that contain only digits
    ' to override set `JsonConverter.JsonOptions.UseDoubleForLargeNumbers = True`
    UseDoubleForLargeNumbers As Boolean

    ' The JSON standard requires object keys to be quoted ("" or '), use this option to allow unquoted keys
    AllowUnquotedKeys As Boolean

    ' The solidus (/) is not required to be escaped, use this option to escape them as \/ in ConvertToJson
    EscapeSolidus As Boolean
End Type
Public JsonOptions As json_Options

' ============================================= '
' Public Methods
' ============================================= '

''
' Convert JSON string to object (Dictionary/Collection)
'
' @method ParseJson
' @param {String} json_String
' @return {Object} (Dictionary or Collection)
' @throws 10001 - JSON parse error
''
Public Function ParseJson(ByVal JsonString As String) As Object
    Dim json_Index As Long
    json_Index = 1

    ' Remove vbCr, vbLf, and vbTab from json_String
    JsonString = VBA.Replace(VBA.Replace(VBA.Replace(JsonString, VBA.vbCr, """"), VBA.vbLf, """"), VBA.vbTab, """")

    json_SkipSpaces JsonString, json_Index
    Select Case VBA.Mid$(JsonString, json_Index, 1)
    Case ""{""
        Set ParseJson = json_ParseObject(JsonString, json_Index)
    Case ""[""
        Set ParseJson = json_ParseArray(JsonString, json_Index)
    Case Else
        ' Error: Invalid JSON string
        Err.Raise 10001, ""JSONConverter"", json_ParseErrorMessage(JsonString, json_Index, ""Expecting '{' or '['"")
    End Select
End Function

''
' Convert object (Dictionary/Collection/Array) to JSON
'
' @method ConvertToJson
' @param {Variant} JsonValue (Dictionary, Collection, or Array)
' @param {Integer|String} Whitespace ""Pretty"" print json with given number of spaces per indentation (Integer) or given string
' @return {String}
''
Public Function ConvertToJson(ByVal JsonValue As Variant, Optional ByVal Whitespace As Variant, Optional ByVal json_CurrentIndentation As Long = 0) As String
    Dim json_Buffer As String
    Dim json_BufferPosition As Long
    Dim json_BufferLength As Long
    Dim json_Index As Long
    Dim json_LBound As Long
    Dim json_UBound As Long
    Dim json_IsFirstItem As Boolean
    Dim json_Index2D As Long
    Dim json_LBound2D As Long
    Dim json_UBound2D As Long
    Dim json_IsFirstItem2D As Boolean
    Dim json_Key As Variant
    Dim json_Value As Variant
    Dim json_DateStr As String
    Dim json_Converted As String
    Dim json_SkipItem As Boolean
    Dim json_PrettyPrint As Boolean
    Dim json_Indentation As String
    Dim json_InnerIndentation As String

    json_LBound = -1
    json_UBound = -1
    json_IsFirstItem = True
    json_LBound2D = -1
    json_UBound2D = -1
    json_IsFirstItem2D = True
    json_PrettyPrint = Not IsMissing(Whitespace)

    Select Case VBA.VarType(JsonValue)
    Case VBA.vbNull
        ConvertToJson = ""null""
    Case VBA.vbDate
        ' Date
        json_DateStr = ConvertToIso(VBA.CDate(JsonValue))

        ConvertToJson = """""""" & json_DateStr & """"""""
    Case VBA.vbString
        ' String (or large number encoded as string)
        If Not JsonOptions.UseDoubleForLargeNumbers And json_StringIsLargeNumber(JsonValue) Then
            ConvertToJson = JsonValue
        Else
            ConvertToJson = """""""" & json_Encode(JsonValue) & """"""""
        End If
    Case VBA.vbBoolean
        If JsonValue Then
            ConvertToJson = ""true""
        Else
            ConvertToJson = ""false""
        End If
    Case VBA.vbArray To VBA.vbArray + VBA.vbByte
        If json_PrettyPrint Then
            If VBA.VarType(Whitespace) = VBA.vbString Then
                json_Indentation = VBA.String$(json_CurrentIndentation + 1, Whitespace)
                json_InnerIndentation = VBA.String$(json_CurrentIndentation + 2, Whitespace)
            Else
                json_Indentation = VBA.Space$((json_CurrentIndentation + 1) * Whitespace)
                json_InnerIndentation = VBA.Space$((json_CurrentIndentation + 2) * Whitespace)
            End If
        End If

        ' Array
        json_BufferAppend json_Buffer, ""["", json_BufferPosition, json_BufferLength

        On Error Resume Next

        json_LBound = LBound(JsonValue, 1)
        json_UBound = UBound(JsonValue, 1)
        json_LBound2D = LBound(JsonValue, 2)
        json_UBound2D = UBound(JsonValue, 2)

        If json_LBound >= 0 And json_UBound >= 0 Then
            For json_Index = json_LBound To json_UBound
                If json_IsFirstItem Then
                    json_IsFirstItem = False
                Else
                    ' Append comma to previous line
                    json_BufferAppend json_Buffer, "","", json_BufferPosition, json_BufferLength
                End If

                If json_LBound2D >= 0 And json_UBound2D >= 0 Then
                    ' 2D Array
                    If json_PrettyPrint Then
                        json_BufferAppend json_Buffer, vbNewLine, json_BufferPosition, json_BufferLength
                    End If
                    json_BufferAppend json_Buffer, json_Indentation & ""["", json_BufferPosition, json_BufferLength

                    For json_Index2D = json_LBound2D To json_UBound2D
                        If json_IsFirstItem2D Then
                            json_IsFirstItem2D = False
                        Else
                            json_BufferAppend json_Buffer, "","", json_BufferPosition, json_BufferLength
                        End If

                        json_Converted = ConvertToJson(JsonValue(json_Index, json_Index2D), Whitespace, json_CurrentIndentation + 2)

                        ' For Arrays/Collections, undefined (Empty/Nothing) is treated as null
                        If json_Converted = """" Then
                            ' (nest to only check if converted = """")
                            If json_IsUndefined(JsonValue(json_Index, json_Index2D)) Then
                                json_Converted = ""null""
                            End If
                        End If

                        If json_PrettyPrint Then
                            json_Converted = vbNewLine & json_InnerIndentation & json_Converted
                        End If

                        json_BufferAppend json_Buffer, json_Converted, json_BufferPosition, json_BufferLength
                    Next json_Index2D

                    If json_PrettyPrint Then
                        json_BufferAppend json_Buffer, vbNewLine, json_BufferPosition, json_BufferLength
                    End If

                    json_BufferAppend json_Buffer, json_Indentation & ""]"", json_BufferPosition, json_BufferLength
                    json_IsFirstItem2D = True
                Else
                    ' 1D Array
                    json_Converted = ConvertToJson(JsonValue(json_Index), Whitespace, json_CurrentIndentation + 1)

                    ' For Arrays/Collections, undefined (Empty/Nothing) is treated as null
                    If json_Converted = """" Then
                        ' (nest to only check if converted = """")
                        If json_IsUndefined(JsonValue(json_Index)) Then
                            json_Converted = ""null""
                        End If
                    End If

                    If json_PrettyPrint Then
                        json_Converted = vbNewLine & json_Indentation & json_Converted
                    End If

                    json_BufferAppend json_Buffer, json_Converted, json_BufferPosition, json_BufferLength
                End If
            Next json_Index
        End If

        On Error GoTo 0

        If json_PrettyPrint Then
            json_BufferAppend json_Buffer, vbNewLine, json_BufferPosition, json_BufferLength

            If VBA.VarType(Whitespace) = VBA.vbString Then
                json_Indentation = VBA.String$(json_CurrentIndentation, Whitespace)
            Else
                json_Indentation = VBA.Space$(json_CurrentIndentation * Whitespace)
            End If
        End If

        json_BufferAppend json_Buffer, json_Indentation & ""]"", json_BufferPosition, json_BufferLength

        ConvertToJson = json_BufferToString(json_Buffer, json_BufferPosition)

    ' Dictionary or Collection
    Case VBA.vbObject
        If json_PrettyPrint Then
            If VBA.VarType(Whitespace) = VBA.vbString Then
                json_Indentation = VBA.String$(json_CurrentIndentation + 1, Whitespace)
            Else
                json_Indentation = VBA.Space$((json_CurrentIndentation + 1) * Whitespace)
            End If
        End If

        ' Dictionary
        If VBA.TypeName(JsonValue) = ""Dictionary"" Then
            json_BufferAppend json_Buffer, ""{"", json_BufferPosition, json_BufferLength
            For Each json_Key In JsonValue.Keys
                ' For Objects, undefined (Empty/Nothing) is not added to object
                json_Converted = ConvertToJson(JsonValue(json_Key), Whitespace, json_CurrentIndentation + 1)
                If json_Converted = """" Then
                    json_SkipItem = json_IsUndefined(JsonValue(json_Key))
                Else
                    json_SkipItem = False
                End If

                If Not json_SkipItem Then
                    If json_IsFirstItem Then
                        json_IsFirstItem = False
                    Else
                        json_BufferAppend json_Buffer, "","", json_BufferPosition, json_BufferLength
                    End If

                    If json_PrettyPrint Then
                        json_Converted = vbNewLine & json_Indentation & """""""" & json_Key & """""": "" & json_Converted
                    Else
                        json_Converted = """""""" & json_Key & """""":"" & json_Converted
                    End If

                    json_BufferAppend json_Buffer, json_Converted, json_BufferPosition, json_BufferLength
                End If
            Next json_Key

            If json_PrettyPrint Then
                json_BufferAppend json_Buffer, vbNewLine, json_BufferPosition, json_BufferLength

                If VBA.VarType(Whitespace) = VBA.vbString Then
                    json_Indentation = VBA.String$(json_CurrentIndentation, Whitespace)
                Else
                    json_Indentation = VBA.Space$(json_CurrentIndentation * Whitespace)
                End If
            End If

            json_BufferAppend json_Buffer, json_Indentation & ""}"", json_BufferPosition, json_BufferLength

        ' Collection
        ElseIf VBA.TypeName(JsonValue) = ""Collection"" Then
            json_BufferAppend json_Buffer, ""["", json_BufferPosition, json_BufferLength
            For Each json_Value In JsonValue
                If json_IsFirstItem Then
                    json_IsFirstItem = False
                Else
                    json_BufferAppend json_Buffer, "","", json_BufferPosition, json_BufferLength
                End If

                json_Converted = ConvertToJson(json_Value, Whitespace, json_CurrentIndentation + 1)

                ' For Arrays/Collections, undefined (Empty/Nothing) is treated as null
                If json_Converted = """" Then
                    ' (nest to only check if converted = """")
                    If json_IsUndefined(json_Value) Then
                        json_Converted = ""null""
                    End If
                End If

                If json_PrettyPrint Then
                    json_Converted = vbNewLine & json_Indentation & json_Converted
                End If

                json_BufferAppend json_Buffer, json_Converted, json_BufferPosition, json_BufferLength
            Next json_Value

            If json_PrettyPrint Then
                json_BufferAppend json_Buffer, vbNewLine, json_BufferPosition, json_BufferLength

                If VBA.VarType(Whitespace) = VBA.vbString Then
                    json_Indentation = VBA.String$(json_CurrentIndentation, Whitespace)
                Else
                    json_Indentation = VBA.Space$(json_CurrentIndentation * Whitespace)
                End If
            End If

            json_BufferAppend json_Buffer, json_Indentation & ""]"", json_BufferPosition, json_BufferLength
        End If

        ConvertToJson = json_BufferToString(json_Buffer, json_BufferPosition)
    Case VBA.vbInteger, VBA.vbLong, VBA.vbSingle, VBA.vbDouble, VBA.vbCurrency, VBA.vbDecimal
        ' Number (use decimals for numbers)
        ConvertToJson = VBA.Replace(JsonValue, "","", ""."")
    Case Else
        ' vbEmpty, vbError, vbDataObject, vbByte, vbUserDefinedType
        ' Use VBA's built-in to-string
        On Error Resume Next
        ConvertToJson = JsonValue
        On Error GoTo 0
    End Select
End Function

' ============================================= '
' Private Functions
' ============================================= '

Private Function json_ParseObject(json_String As String, ByRef json_Index As Long) As Dictionary
    Dim json_Key As String
    Dim json_NextChar As String

    Set json_ParseObject = New Dictionary
    json_SkipSpaces json_String, json_Index
    If VBA.Mid$(json_String, json_Index, 1) <> ""{"" Then
        Err.Raise 10001, ""JSONConverter"", json_ParseErrorMessage(json_String, json_Index, ""Expecting '{'"")
    Else
        json_Index = json_Index + 1

        Do
            json_SkipSpaces json_String, json_Index
            If VBA.Mid$(json_String, json_Index, 1) = ""}"" Then
                json_Index = json_Index + 1
                Exit Function
            ElseIf VBA.Mid$(json_String, json_Index, 1) = "","" Then
                json_Index = json_Index + 1
                json_SkipSpaces json_String, json_Index
            End If

            json_Key = json_ParseKey(json_String, json_Index)
            json_NextChar = json_Peek(json_String, json_Index)
            If json_NextChar = ""["" Or json_NextChar = ""{"" Then
                Set json_ParseObject.item(json_Key) = json_ParseValue(json_String, json_Index)
            Else
                json_ParseObject.item(json_Key) = json_ParseValue(json_String, json_Index)
            End If
        Loop
    End If
End Function

Private Function json_ParseArray(json_String As String, ByRef json_Index As Long) As Collection
    Set json_ParseArray = New Collection

    json_SkipSpaces json_String, json_Index
    If VBA.Mid$(json_String, json_Index, 1) <> ""["" Then
        Err.Raise 10001, ""JSONConverter"", json_ParseErrorMessage(json_String, json_Index, ""Expecting '['"")
    Else
        json_Index = json_Index + 1

        Do
            json_SkipSpaces json_String, json_Index
            If VBA.Mid$(json_String, json_Index, 1) = ""]"" Then
                json_Index = json_Index + 1
                Exit Function
            ElseIf VBA.Mid$(json_String, json_Index, 1) = "","" Then
                json_Index = json_Index + 1
                json_SkipSpaces json_String, json_Index
            End If

            json_ParseArray.Add json_ParseValue(json_String, json_Index)
        Loop
    End If
End Function

Private Function json_ParseValue(json_String As String, ByRef json_Index As Long) As Variant
    json_SkipSpaces json_String, json_Index
    Select Case VBA.Mid$(json_String, json_Index, 1)
    Case ""{""
        Set json_ParseValue = json_ParseObject(json_String, json_Index)
    Case ""[""
        Set json_ParseValue = json_ParseArray(json_String, json_Index)
    Case """""""", ""'""
        json_ParseValue = json_ParseString(json_String, json_Index)
    Case Else
        If VBA.Mid$(json_String, json_Index, 4) = ""true"" Then
            json_ParseValue = True
            json_Index = json_Index + 4
        ElseIf VBA.Mid$(json_String, json_Index, 5) = ""false"" Then
            json_ParseValue = False
            json_Index = json_Index + 5
        ElseIf VBA.Mid$(json_String, json_Index, 4) = ""null"" Then
            json_ParseValue = Null
            json_Index = json_Index + 4
        ElseIf VBA.InStr(""+-0123456789"", VBA.Mid$(json_String, json_Index, 1)) Then
            json_ParseValue = json_ParseNumber(json_String, json_Index)
        Else
            Err.Raise 10001, ""JSONConverter"", json_ParseErrorMessage(json_String, json_Index, ""Expecting 'STRING', 'NUMBER', null, true, false, '{', or '['"")
        End If
    End Select
End Function

Private Function json_ParseString(json_String As String, ByRef json_Index As Long) As String
    Dim json_Quote As String
    Dim json_Char As String
    Dim json_Code As String
    Dim json_Buffer As String
    Dim json_BufferPosition As Long
    Dim json_BufferLength As Long

    json_SkipSpaces json_String, json_Index

    ' Store opening quote to look for matching closing quote
    json_Quote = VBA.Mid$(json_String, json_Index, 1)
    json_Index = json_Index + 1

    Do While json_Index > 0 And json_Index <= Len(json_String)
        json_Char = VBA.Mid$(json_String, json_Index, 1)

        Select Case json_Char
        Case ""\""
            ' Escaped string, \\, or \/
            json_Index = json_Index + 1
            json_Char = VBA.Mid$(json_String, json_Index, 1)

            Select Case json_Char
            Case """""""", ""\"", ""/"", ""'""
                json_BufferAppend json_Buffer, json_Char, json_BufferPosition, json_BufferLength
                json_Index = json_Index + 1
            Case ""b""
                json_BufferAppend json_Buffer, vbBack, json_BufferPosition, json_BufferLength
                json_Index = json_Index + 1
            Case ""f""
                json_BufferAppend json_Buffer, vbFormFeed, json_BufferPosition, json_BufferLength
                json_Index = json_Index + 1
            Case ""n""
                json_BufferAppend json_Buffer, vbCrLf, json_BufferPosition, json_BufferLength
                json_Index = json_Index + 1
            Case ""r""
                json_BufferAppend json_Buffer, vbCr, json_BufferPosition, json_BufferLength
                json_Index = json_Index + 1
            Case ""t""
                json_BufferAppend json_Buffer, vbTab, json_BufferPosition, json_BufferLength
                json_Index = json_Index + 1
            Case ""u""
                ' Unicode character escape (e.g. \u00a9 = Copyright)
                json_Index = json_Index + 1
                json_Code = VBA.Mid$(json_String, json_Index, 4)
                json_BufferAppend json_Buffer, VBA.ChrW(VBA.Val(""&h"" + json_Code)), json_BufferPosition, json_BufferLength
                json_Index = json_Index + 4
            End Select
        Case json_Quote
            json_ParseString = json_BufferToString(json_Buffer, json_BufferPosition)
            json_Index = json_Index + 1
            Exit Function
        Case Else
            json_BufferAppend json_Buffer, json_Char, json_BufferPosition, json_BufferLength
            json_Index = json_Index + 1
        End Select
    Loop
End Function

Private Function json_ParseNumber(json_String As String, ByRef json_Index As Long) As Variant
    Dim json_Char As String
    Dim json_Value As String
    Dim json_IsLargeNumber As Boolean

    json_SkipSpaces json_String, json_Index

    Do While json_Index > 0 And json_Index <= Len(json_String)
        json_Char = VBA.Mid$(json_String, json_Index, 1)

        If VBA.InStr(""+-0123456789.eE"", json_Char) Then
            ' Unlikely to have massive number, so use simple append rather than buffer here
            json_Value = json_Value & json_Char
            json_Index = json_Index + 1
        Else
            ' Excel only stores 15 significant digits, so any numbers larger than that are truncated
            ' This can lead to issues when BIGINT's are used (e.g. for Ids or Credit Cards), as they will be invalid above 15 digits
            ' See: http://support.microsoft.com/kb/269370
            '
            ' Fix: Parse -> String, Convert -> String longer than 15/16 characters containing only numbers and decimal points -> Number
            ' (decimal doesn't factor into significant digit count, so if present check for 15 digits + decimal = 16)
            json_IsLargeNumber = IIf(InStr(json_Value, "".""), Len(json_Value) >= 17, Len(json_Value) >= 16)
            If Not JsonOptions.UseDoubleForLargeNumbers And json_IsLargeNumber Then
                json_ParseNumber = json_Value
            Else
                ' VBA.Val does not use regional settings, so guard for comma is not needed
                json_ParseNumber = VBA.Val(json_Value)
            End If
            Exit Function
        End If
    Loop
End Function

Private Function json_ParseKey(json_String As String, ByRef json_Index As Long) As String
    ' Parse key with single or double quotes
    If VBA.Mid$(json_String, json_Index, 1) = """""""" Or VBA.Mid$(json_String, json_Index, 1) = ""'"" Then
        json_ParseKey = json_ParseString(json_String, json_Index)
    ElseIf JsonOptions.AllowUnquotedKeys Then
        Dim json_Char As String
        Do While json_Index > 0 And json_Index <= Len(json_String)
            json_Char = VBA.Mid$(json_String, json_Index, 1)
            If (json_Char <> "" "") And (json_Char <> "":"") Then
                json_ParseKey = json_ParseKey & json_Char
                json_Index = json_Index + 1
            Else
                Exit Do
            End If
        Loop
    Else
        Err.Raise 10001, ""JSONConverter"", json_ParseErrorMessage(json_String, json_Index, ""Expecting '""""' or '''"")
    End If

    ' Check for colon and skip if present or throw if not present
    json_SkipSpaces json_String, json_Index
    If VBA.Mid$(json_String, json_Index, 1) <> "":"" Then
        Err.Raise 10001, ""JSONConverter"", json_ParseErrorMessage(json_String, json_Index, ""Expecting ':'"")
    Else
        json_Index = json_Index + 1
    End If
End Function

Private Function json_IsUndefined(ByVal json_Value As Variant) As Boolean
    ' Empty / Nothing -> undefined
    Select Case VBA.VarType(json_Value)
    Case VBA.vbEmpty
        json_IsUndefined = True
    Case VBA.vbObject
        Select Case VBA.TypeName(json_Value)
        Case ""Empty"", ""Nothing""
            json_IsUndefined = True
        End Select
    End Select
End Function

Private Function json_Encode(ByVal json_Text As Variant) As String
    ' Reference: http://www.ietf.org/rfc/rfc4627.txt
    ' Escape: "", \, /, backspace, form feed, line feed, carriage return, tab
    Dim json_Index As Long
    Dim json_Char As String
    Dim json_AscCode As Long
    Dim json_Buffer As String
    Dim json_BufferPosition As Long
    Dim json_BufferLength As Long

    For json_Index = 1 To VBA.Len(json_Text)
        json_Char = VBA.Mid$(json_Text, json_Index, 1)
        json_AscCode = VBA.AscW(json_Char)

        ' When AscW returns a negative number, it returns the twos complement form of that number.
        ' To convert the twos complement notation into normal binary notation, add 0xFFF to the return result.
        ' https://support.microsoft.com/en-us/kb/272138
        If json_AscCode < 0 Then
            json_AscCode = json_AscCode + 65536
        End If

        ' From spec, "", \, and control characters must be escaped (solidus is optional)

        Select Case json_AscCode
        Case 34
            ' "" -> 34 -> \""
            json_Char = ""\""""""
        Case 92
            ' \ -> 92 -> \\
            json_Char = ""\\""
        Case 47
            ' / -> 47 -> \/ (optional)
            If JsonOptions.EscapeSolidus Then
                json_Char = ""\/""
            End If
        Case 8
            ' backspace -> 8 -> \b
            json_Char = ""\b""
        Case 12
            ' form feed -> 12 -> \f
            json_Char = ""\f""
        Case 10
            ' line feed -> 10 -> \n
            json_Char = ""\n""
        Case 13
            ' carriage return -> 13 -> \r
            json_Char = ""\r""
        Case 9
            ' tab -> 9 -> \t
            json_Char = ""\t""
        Case 0 To 31, 127 To 65535
            ' Non-ascii characters -> convert to 4-digit hex
            json_Char = ""\u"" & VBA.Right$(""0000"" & VBA.Hex$(json_AscCode), 4)
        End Select

        json_BufferAppend json_Buffer, json_Char, json_BufferPosition, json_BufferLength
    Next json_Index

    json_Encode = json_BufferToString(json_Buffer, json_BufferPosition)
End Function

Private Function json_Peek(json_String As String, ByVal json_Index As Long, Optional json_NumberOfCharacters As Long = 1) As String
    ' ""Peek"" at the next number of characters without incrementing json_Index (ByVal instead of ByRef)
    json_SkipSpaces json_String, json_Index
    json_Peek = VBA.Mid$(json_String, json_Index, json_NumberOfCharacters)
End Function

Private Sub json_SkipSpaces(json_String As String, ByRef json_Index As Long)
    ' Increment index to skip over spaces
    Do While json_Index > 0 And json_Index <= VBA.Len(json_String) And VBA.Mid$(json_String, json_Index, 1) = "" ""
        json_Index = json_Index + 1
    Loop
End Sub

Private Function json_StringIsLargeNumber(json_String As Variant) As Boolean
    ' Check if the given string is considered a ""large number""
    ' (See json_ParseNumber)

    Dim json_Length As Long
    Dim json_CharIndex As Long
    json_Length = VBA.Len(json_String)

    ' Length with be at least 16 characters and assume will be less than 100 characters
    If json_Length >= 16 And json_Length <= 100 Then
        Dim json_CharCode As String

        json_StringIsLargeNumber = True

        For json_CharIndex = 1 To json_Length
            json_CharCode = VBA.Asc(VBA.Mid$(json_String, json_CharIndex, 1))
            Select Case json_CharCode
            ' Look for .|0-9|E|e
            Case 46, 48 To 57, 69, 101
                ' Continue through characters
            Case Else
                json_StringIsLargeNumber = False
                Exit Function
            End Select
        Next json_CharIndex
    End If
End Function

Private Function json_ParseErrorMessage(json_String As String, ByRef json_Index As Long, ErrorMessage As String)
    ' Provide detailed parse error message, including details of where and what occurred
    '
    ' Example:
    ' Error parsing JSON:
    ' {""abcde"":True}
    '          ^
    ' Expecting 'STRING', 'NUMBER', null, true, false, '{', or '['

    Dim json_StartIndex As Long
    Dim json_StopIndex As Long

    ' Include 10 characters before and after error (if possible)
    json_StartIndex = json_Index - 10
    json_StopIndex = json_Index + 10
    If json_StartIndex <= 0 Then
        json_StartIndex = 1
    End If
    If json_StopIndex > VBA.Len(json_String) Then
        json_StopIndex = VBA.Len(json_String)
    End If

    json_ParseErrorMessage = ""Error parsing JSON:"" & VBA.vbNewLine & _
                             VBA.Mid$(json_String, json_StartIndex, json_StopIndex - json_StartIndex + 1) & VBA.vbNewLine & _
                             VBA.Space$(json_Index - json_StartIndex) & ""^"" & VBA.vbNewLine & _
                             ErrorMessage
End Function

Private Sub json_BufferAppend(ByRef json_Buffer As String, _
                              ByRef json_Append As Variant, _
                              ByRef json_BufferPosition As Long, _
                              ByRef json_BufferLength As Long)
    ' VBA can be slow to append strings due to allocating a new string for each append
    ' Instead of using the traditional append, allocate a large empty string and then copy string at append position
    '
    ' Example:
    ' Buffer: ""abc  ""
    ' Append: ""def""
    ' Buffer Position: 3
    ' Buffer Length: 5
    '
    ' Buffer position + Append length > Buffer length -> Append chunk of blank space to buffer
    ' Buffer: ""abc       ""
    ' Buffer Length: 10
    '
    ' Put ""def"" into buffer at position 3 (0-based)
    ' Buffer: ""abcdef    ""
    '
    ' Approach based on cStringBuilder from vbAccelerator
    ' http://www.vbaccelerator.com/home/VB/Code/Techniques/RunTime_Debug_Tracing/VB6_Tracer_Utility_zip_cStringBuilder_cls.asp
    '
    ' and clsStringAppend from Philip Swannell
    ' https://github.com/VBA-tools/VBA-JSON/pull/82

    Dim json_AppendLength As Long
    Dim json_LengthPlusPosition As Long

    json_AppendLength = VBA.Len(json_Append)
    json_LengthPlusPosition = json_AppendLength + json_BufferPosition

    If json_LengthPlusPosition > json_BufferLength Then
        ' Appending would overflow buffer, add chunk
        ' (double buffer length or append length, whichever is bigger)
        Dim json_AddedLength As Long
        json_AddedLength = IIf(json_AppendLength > json_BufferLength, json_AppendLength, json_BufferLength)

        json_Buffer = json_Buffer & VBA.Space$(json_AddedLength)
        json_BufferLength = json_BufferLength + json_AddedLength
    End If

    ' Note: Namespacing with VBA.Mid$ doesn't work properly here, throwing compile error:
    ' Function call on left-hand side of assignment must return Variant or Object
    Mid$(json_Buffer, json_BufferPosition + 1, json_AppendLength) = CStr(json_Append)
    json_BufferPosition = json_BufferPosition + json_AppendLength
End Sub

Private Function json_BufferToString(ByRef json_Buffer As String, ByVal json_BufferPosition As Long) As String
    If json_BufferPosition > 0 Then
        json_BufferToString = VBA.Left$(json_Buffer, json_BufferPosition)
    End If
End Function

''
' VBA-UTC v1.0.6
' (c) Tim Hall - https://github.com/VBA-tools/VBA-UtcConverter
'
' UTC/ISO 8601 Converter for VBA
'
' Errors:
' 10011 - UTC parsing error
' 10012 - UTC conversion error
' 10013 - ISO 8601 parsing error
' 10014 - ISO 8601 conversion error
'
' @module UtcConverter
' @author tim.hall.engr@gmail.com
' @license MIT (http://www.opensource.org/licenses/mit-license.php)
'' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ '

' (Declarations moved to top)

' ============================================= '
' Public Methods
' ============================================= '

''
' Parse UTC date to local date
'
' @method ParseUtc
' @param {Date} UtcDate
' @return {Date} Local date
' @throws 10011 - UTC parsing error
''
Public Function ParseUtc(utc_UtcDate As Date) As Date
    On Error GoTo utc_ErrorHandling

#If Mac Then
    ParseUtc = utc_ConvertDate(utc_UtcDate)
#Else
    Dim utc_TimeZoneInfo As utc_TIME_ZONE_INFORMATION
    Dim utc_LocalDate As utc_SYSTEMTIME

    utc_GetTimeZoneInformation utc_TimeZoneInfo
    utc_SystemTimeToTzSpecificLocalTime utc_TimeZoneInfo, utc_DateToSystemTime(utc_UtcDate), utc_LocalDate

    ParseUtc = utc_SystemTimeToDate(utc_LocalDate)
#End If

    Exit Function

utc_ErrorHandling:
    Err.Raise 10011, ""UtcConverter.ParseUtc"", ""UTC parsing error: "" & Err.Number & "" - "" & Err.Description
End Function

''
' Convert local date to UTC date
'
' @method ConvertToUrc
' @param {Date} utc_LocalDate
' @return {Date} UTC date
' @throws 10012 - UTC conversion error
''
Public Function ConvertToUtc(utc_LocalDate As Date) As Date
    On Error GoTo utc_ErrorHandling

#If Mac Then
    ConvertToUtc = utc_ConvertDate(utc_LocalDate, utc_ConvertToUtc:=True)
#Else
    Dim utc_TimeZoneInfo As utc_TIME_ZONE_INFORMATION
    Dim utc_UtcDate As utc_SYSTEMTIME

    utc_GetTimeZoneInformation utc_TimeZoneInfo
    utc_TzSpecificLocalTimeToSystemTime utc_TimeZoneInfo, utc_DateToSystemTime(utc_LocalDate), utc_UtcDate

    ConvertToUtc = utc_SystemTimeToDate(utc_UtcDate)
#End If

    Exit Function

utc_ErrorHandling:
    Err.Raise 10012, ""UtcConverter.ConvertToUtc"", ""UTC conversion error: "" & Err.Number & "" - "" & Err.Description
End Function

''
' Parse ISO 8601 date string to local date
'
' @method ParseIso
' @param {Date} utc_IsoString
' @return {Date} Local date
' @throws 10013 - ISO 8601 parsing error
''
Public Function ParseIso(utc_IsoString As String) As Date
    On Error GoTo utc_ErrorHandling

    Dim utc_Parts() As String
    Dim utc_DateParts() As String
    Dim utc_TimeParts() As String
    Dim utc_OffsetIndex As Long
    Dim utc_HasOffset As Boolean
    Dim utc_NegativeOffset As Boolean
    Dim utc_OffsetParts() As String
    Dim utc_Offset As Date

    utc_Parts = VBA.Split(utc_IsoString, ""T"")
    utc_DateParts = VBA.Split(utc_Parts(0), ""-"")
    ParseIso = VBA.DateSerial(VBA.CInt(utc_DateParts(0)), VBA.CInt(utc_DateParts(1)), VBA.CInt(utc_DateParts(2)))

    If UBound(utc_Parts) > 0 Then
        If VBA.InStr(utc_Parts(1), ""Z"") Then
            utc_TimeParts = VBA.Split(VBA.Replace(utc_Parts(1), ""Z"", """"), "":"")
        Else
            utc_OffsetIndex = VBA.InStr(1, utc_Parts(1), ""+"")
            If utc_OffsetIndex = 0 Then
                utc_NegativeOffset = True
                utc_OffsetIndex = VBA.InStr(1, utc_Parts(1), ""-"")
            End If

            If utc_OffsetIndex > 0 Then
                utc_HasOffset = True
                utc_TimeParts = VBA.Split(VBA.Left$(utc_Parts(1), utc_OffsetIndex - 1), "":"")
                utc_OffsetParts = VBA.Split(VBA.Right$(utc_Parts(1), Len(utc_Parts(1)) - utc_OffsetIndex), "":"")

                Select Case UBound(utc_OffsetParts)
                Case 0
                    utc_Offset = TimeSerial(VBA.CInt(utc_OffsetParts(0)), 0, 0)
                Case 1
                    utc_Offset = TimeSerial(VBA.CInt(utc_OffsetParts(0)), VBA.CInt(utc_OffsetParts(1)), 0)
                Case 2
                    ' VBA.Val does not use regional settings, use for seconds to avoid decimal/comma issues
                    utc_Offset = TimeSerial(VBA.CInt(utc_OffsetParts(0)), VBA.CInt(utc_OffsetParts(1)), Int(VBA.Val(utc_OffsetParts(2))))
                End Select

                If utc_NegativeOffset Then: utc_Offset = -utc_Offset
            Else
                utc_TimeParts = VBA.Split(utc_Parts(1), "":"")
            End If
        End If

        Select Case UBound(utc_TimeParts)
        Case 0
            ParseIso = ParseIso + VBA.TimeSerial(VBA.CInt(utc_TimeParts(0)), 0, 0)
        Case 1
            ParseIso = ParseIso + VBA.TimeSerial(VBA.CInt(utc_TimeParts(0)), VBA.CInt(utc_TimeParts(1)), 0)
        Case 2
            ' VBA.Val does not use regional settings, use for seconds to avoid decimal/comma issues
            ParseIso = ParseIso + VBA.TimeSerial(VBA.CInt(utc_TimeParts(0)), VBA.CInt(utc_TimeParts(1)), Int(VBA.Val(utc_TimeParts(2))))
        End Select

        ParseIso = ParseUtc(ParseIso)

        If utc_HasOffset Then
            ParseIso = ParseIso - utc_Offset
        End If
    End If

    Exit Function

utc_ErrorHandling:
    Err.Raise 10013, ""UtcConverter.ParseIso"", ""ISO 8601 parsing error for "" & utc_IsoString & "": "" & Err.Number & "" - "" & Err.Description
End Function

''
' Convert local date to ISO 8601 string
'
' @method ConvertToIso
' @param {Date} utc_LocalDate
' @return {Date} ISO 8601 string
' @throws 10014 - ISO 8601 conversion error
''
Public Function ConvertToIso(utc_LocalDate As Date) As String
    On Error GoTo utc_ErrorHandling

    ConvertToIso = VBA.Format$(ConvertToUtc(utc_LocalDate), ""yyyy-mm-ddTHH:mm:ss.000Z"")

    Exit Function

utc_ErrorHandling:
    Err.Raise 10014, ""UtcConverter.ConvertToIso"", ""ISO 8601 conversion error: "" & Err.Number & "" - "" & Err.Description
End Function

' ============================================= '
' Private Functions
' ============================================= '

#If Mac Then

Private Function utc_ConvertDate(utc_Value As Date, Optional utc_ConvertToUtc As Boolean = False) As Date
    Dim utc_ShellCommand As String
    Dim utc_Result As utc_ShellResult
    Dim utc_Parts() As String
    Dim utc_DateParts() As String
    Dim utc_TimeParts() As String

    If utc_ConvertToUtc Then
        utc_ShellCommand = ""date -ur `date -jf '%Y-%m-%d %H:%M:%S' "" & _
            ""'"" & VBA.Format$(utc_Value, ""yyyy-mm-dd HH:mm:ss"") & ""' "" & _
            "" +'%s'` +'%Y-%m-%d %H:%M:%S'""
    Else
        utc_ShellCommand = ""date -jf '%Y-%m-%d %H:%M:%S %z' "" & _
            ""'"" & VBA.Format$(utc_Value, ""yyyy-mm-dd HH:mm:ss"") & "" +0000' "" & _
            ""+'%Y-%m-%d %H:%M:%S'""
    End If

    utc_Result = utc_ExecuteInShell(utc_ShellCommand)

    If utc_Result.utc_Output = """" Then
        Err.Raise 10015, ""UtcConverter.utc_ConvertDate"", ""'date' command failed""
    Else
        utc_Parts = Split(utc_Result.utc_Output, "" "")
        utc_DateParts = Split(utc_Parts(0), ""-"")
        utc_TimeParts = Split(utc_Parts(1), "":"")

        utc_ConvertDate = DateSerial(utc_DateParts(0), utc_DateParts(1), utc_DateParts(2)) + _
            TimeSerial(utc_TimeParts(0), utc_TimeParts(1), utc_TimeParts(2))
    End If
End Function

Private Function utc_ExecuteInShell(utc_ShellCommand As String) As utc_ShellResult
#If VBA7 Then
    Dim utc_File As LongPtr
    Dim utc_Read As LongPtr
#Else
    Dim utc_File As Long
    Dim utc_Read As Long
#End If

    Dim utc_Chunk As String

    On Error GoTo utc_ErrorHandling
    utc_File = utc_popen(utc_ShellCommand, ""r"")

    If utc_File = 0 Then: Exit Function

    Do While utc_feof(utc_File) = 0
        utc_Chunk = VBA.Space$(50)
        utc_Read = CLng(utc_fread(utc_Chunk, 1, Len(utc_Chunk) - 1, utc_File))
        If utc_Read > 0 Then
            utc_Chunk = VBA.Left$(utc_Chunk, CLng(utc_Read))
            utc_ExecuteInShell.utc_Output = utc_ExecuteInShell.utc_Output & utc_Chunk
        End If
    Loop

utc_ErrorHandling:
    utc_ExecuteInShell.utc_ExitCode = CLng(utc_pclose(utc_File))
End Function

#Else

Private Function utc_DateToSystemTime(utc_Value As Date) As utc_SYSTEMTIME
    utc_DateToSystemTime.utc_wYear = VBA.Year(utc_Value)
    utc_DateToSystemTime.utc_wMonth = VBA.Month(utc_Value)
    utc_DateToSystemTime.utc_wDay = VBA.Day(utc_Value)
    utc_DateToSystemTime.utc_wHour = VBA.Hour(utc_Value)
    utc_DateToSystemTime.utc_wMinute = VBA.Minute(utc_Value)
    utc_DateToSystemTime.utc_wSecond = VBA.Second(utc_Value)
    utc_DateToSystemTime.utc_wMilliseconds = 0
End Function

Private Function utc_SystemTimeToDate(utc_Value As utc_SYSTEMTIME) As Date
    utc_SystemTimeToDate = DateSerial(utc_Value.utc_wYear, utc_Value.utc_wMonth, utc_Value.utc_wDay) + _
        TimeSerial(utc_Value.utc_wHour, utc_Value.utc_wMinute, utc_Value.utc_wSecond)
End Function

#End If
"
ZxRJz4nQ,crazy gloom2 light style,illwieckz,C,Saturday 13th of April 2024 12:59:34 PM CDT,"gloom2beta2/71955335FA395BA4338DCE6901B1005B
{ // Q3Map2 defaulted
	{
		map $lightmap
		rgbGen identity
	}
	
	// Q3Map2 custom lightstyle stage(s)
	{
		map maps/gloom2beta2/lm_0013.tga
		blendFunc GL_SRC_ALPHA GL_ONE
		rgbGen wave noise 1 .75 1.6 4.2 // style 2
		tcGen lightmap
	}
	{
		map $lightmap
		blendFunc GL_SRC_ALPHA GL_ONE
		rgbGen wave noise 1 .5 3.7 4.9 // style 3
		tcGen lightmap
		tcMod transform 1 0 0 1 0.50000 0.00000
	}
	{
		map maps/gloom2beta2/lm_0013.tga
		blendFunc GL_SRC_ALPHA GL_ONE
		rgbGen wave noise 1 1 2.6 1.3 // style 4
		tcGen lightmap
		tcMod transform 1 0 0 1 0.50000 0.00000
	}

	{
		map textures/gloom2/es_dark-mtl_l1_vd1a.tga
		blendFunc GL_DST_COLOR GL_ZERO
		rgbGen identity
	}
}"
XLfKCaGn,monsterLoveExample,MarcoFalciglia,C#,Saturday 13th of April 2024 12:51:32 PM CDT,"using System.Collections;
using System.Collections.Generic;
using MonsterLove.StateMachine;
using UnityEngine;

public enum StatesPrepareTea
{
    Initialization,
    FullfillTeaPotWithWater,
    PutTeaBagInside,
    PutTeaPotOnStove,
    Completed
}

public class PrepareTea : MonoBehaviour
{
    public GameObject teapot;
    public StateMachine<StatesPrepareTea> _stateMachine;
    public StatesPrepareTea initialStateDebug;

    
    //Singleton
    private static PrepareTea _instance;
    public static PrepareTea Instance => _instance;
    
    protected override void Awake()
    {
        base.Awake();
    
        _instance = this;
        _stateMachine = new StateMachine<StatesPrepareTea>( this );
        
        teapot.GetComponent<Animator>().enabled = false;
            
        _stateMachine.ChangeState(StatesPrepareTea.FullfillTeaPotWithWater);
    }

    protected override void Start()
    {
        base.Start();

        changeState(StatesOS4.FullfillTeaPotWithWater);
     
    }
    
    public void changeState(StatesPrepareTea _newState)
    {
        _stateMachine.ChangeState(_newState);
    }
    
    private void Initialization_Enter() {
        Debug.Log( ""Entro nello State di Initialization"" );
    }    
    
    private void FullfillTeaPotWithWater_Enter() {
        Debug.Log( ""Entro nello State FullfillTeaPotWithWater"" );
    }
    
    private void PutTeaBagInside_Enter() {
        Debug.Log( ""Entro nello State PutTeaBagInside"" );
    }
    
    private void PutTeaPotOnStove_Enter() {
        Debug.Log( ""Entro nello State PutTeaPotOnStove,"" );
    }    
    
    private void Completed_Enter() {
        Debug.Log( ""Entro nello Stato Finale"" );
    }

	private void ManageFlow()
	{
		Action transition = null;

		if (nextState == StatesPrepareTea.PutTeaPotOnStove) // se il te è pronto
		{
			if (/* condizione che mi interessa*/) { 
				transition = () =>
				{
					_stateMachine.ChangeState( nextState ); // vado verso la conclusione
				};
			} else {
				transition = () =>
				{
					// funzione per gestire il cambio di stato dove mi interessa. Magari ricomincio da capo
					_stateMachine.ChangeState( StatesPrepareTea.Initialization );
				};
			}
		}
		else // magari sono in una fase precedente...
 		{
		}
	}

}

----
// IN UN'ALTRA CLASSE, POTRESTE GESTIRE CON UN RIFERIMENTO STATICO GLI STATI INTERNI ALLA FINITE STATE MACHINE

public class ManageStates
{
 	private AudioSource _audioSource;

	public AudioClip comment_FullfillTeaPotWithWater;
    public AudioClip comment_PutTeaBagInside;
    public AudioClip comment_PutTeaPotOnStove;


private void performAudioCommentBasedOnPhase()
    {
        switch (PrepareTea.Instance._stateMachine.State)
        {
            case StatesPrepareTea.FullfillTeaPotWithWater:
                _audioSource.PlayOneShot(comment_FullfillTeaPotWithWater);
                break;
            case StatesPrepareTea.PutTeaBagInsidee:
                _audioSource.PlayOneShot(comment_PutTeaBagInside);
                break;
            case StatesPrepareTea.PutTeaPotOnStove:
                _audioSource.PlayOneShot(comment_PutTeaPotOnStove);
                break;
     
        }

    }
}
"
0a1VTavc,Untitled,youske,Python,Saturday 13th of April 2024 12:51:30 PM CDT,# EC2instance 起動スクリプト
7jRwmjxF,Untitled,Stoikiti,Lua,Saturday 13th of April 2024 12:19:16 PM CDT,"function widget:GetInfo()
    return {
      name = ""repeat repeat orders"",
      desc = ""a way to keep track of multiple sets of repeat orders and cycling through them"",
      author = ""zombean"",
      date = ""2024"",
      license = ""GNU GPL, v2 or later"",
      layer = 0,
      enabled = true
    }
end

local repeat_orders = {}
local mode_activated = false
local activate_mode_key = 420
local go_to_next_repeat_key = 421

function widget:KeyPress(keyCode, mods, label, utf32char, scanCode, actionList)
  if #actionList then return end -- do nothing if engine has actions for these key pressed
end

function widget:KeyRelease(keyCode, mods, label, utf32char, scanCode, actionList)
  if #actionList then return end -- do nothing if engine has actions for these key pressed
end

function widget:UnitCommand(unitID, unitDefID, unitTeam, cmdID, cmdParams, options, cmdTag)
  --if not on repeat orders return
end

function widget:UnitDestroyed(unitID)
  if repeat_orders[unitID] then
    repeat_orders[unitID] = {}
  end
end

function widget:UnitTaken(unitIT)
  if repeat_orders[unitID] then
    repeat_orders[unitID] = {}
  end
end

function widget:UnitGiven(unitIT)
  if repeat_orders[unitID] then
    repeat_orders[unitID] = {}
  end
end

local millis_start_timer = Spring.GetTimer()
local function millis()
  return math.ceil(Spring.DiffTimers(Spring.GetTimer(), millis_start_timer) * 1000)
end

local next_call = 0

function widget:Update()
  local now_time = millis()
  if next_call > now_time then return end
  next_call = now_time + 1000
  Spring.Echo(os.date(""%H:%M:%S:%MS""), mode_activated)
end"
NrZ1bwqX,True QEMU Guest Agent ping,Infra_HDC,Bash,Saturday 13th of April 2024 11:37:16 AM CDT,"user@host:~$ virsh --connect=qemu:///system qemu-agent-command virthost-0001 '{""execute"":""guest-ping""}'
{""return"":{}}
"
EBymbgP7,Untitled,MisterQuirk,Python,Saturday 13th of April 2024 11:00:08 AM CDT,"#Task 1
import time
def timer(func):
    def inside_func(*args, **kwargs):
        st = time.time()
        func(*args)
        fin = time.time()
        print(f'Function worked for {fin - st} seconds')

    return inside_func


#Task 2

def cache(f):
    D = dict()
    def inside_f(*args):
        if args not in D:
            D[args] = f(*args)
        return D[args]
    return inside_f

#Task 3

def logging(f):
    def inside(*args):
        result = f(*args)
        with open('log.txt', 'a+') as file:
            print(f'The function has been called {f.__name__}, the result of its work is - {result}', file=file)
            return result

    return inside

#Task 4

def retry(sec, times):
    def decor(f):
        def inside(*args):
            for i in range(times):
                if f(*args) is not None:
                    return f(*args)
                time.sleep(sec)
            return None
        return inside
    return decor

"
Gk2iqPeA,Untitled,zikoman,HTML,Saturday 13th of April 2024 10:30:19 AM CDT,"----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,CC229417351882A9C41807DB15DA8F63

5o7QxXZ+AuoEmz6nHOtBAKW1zjQJ+yxO+0UYn6YzvOGjKVLuBlhXl/+Id1h2zl5U
PdJRGs0k7PEvNbqMwmerDY0xaSR8GAk8bSrwdD0WGOoM2XT2vk5bZApylhJlhWQa
t7ZOSVY3e4OkhNWg4XFo/EK8qlU14RQxDU/e2FsKvdT3iC+mzTmprDrJdPG5SupJ
mzQZyzv+TUoukFK3Ec64aoVsnGicsCBM3Yj7LfqLONQtUth4feASRH3i7wH2mMJk
/JLnPzo/kx/QOcU8f73wfrmv5a6LDxIfaLD85x/xBxfpBebPzR6tbQcTes8eoDIE
KKlCyiyctZ3z1ra67gk2N9QU2HaHccxNlUxZstO0F1NO2rpCwsEoISCGlkVJAX2u
9/hqCX5DwpgeymmgksIWQ5WliVpXThYnDhhCGQPaLkpiffmxordNNCPS4Ip0g46x
z6r9MWsiuzOutsJMMsBe6sQZpAs9VwIxufVwh1xOYKHb8m25CyPswbGiuDXWDUQr
inb8tGmks26PJRw/uijut/LosQ1HW3oV7+ErgCJ1OzS2fN766vLQDKwhQSVR9DYU
GwkjpkDCz7U7nlxXgs2doI38hPeVFH511HJbGjRv2tturqlW9+1UJ7g+u+hRv3GP
O0Bjd0AkHJGrvYguGOB2PwzoGP3HiZMYlR3R6sCC6ds2bXJSXlwDucEVu8xrWdIT
Ri0h11osob4fKJtagovOTf3i9Ca7FgrgI6mukFH45u5BZeQRvHgyOlGv+JbAX9TM
meofo+eRHBded4X6xWDsokf/yZTFRf+wS6eMqT35hI471P808tW7ZnlBeq76n/+P
xFVyCdnDuilLcngbzIA6gFkGrlebaP8P/GFrPFIPhfDRcG57CSMekWsbQ2/gApfx
BFqH0calKvlYgMccqzxyB0F78QQ6rO6+LGiLUWuXJmAc9z+duWFT1mlfINY7pMop
RakoWm6WGruiSQooadteGrQE2XDcVvjo06eMnA2A16W1p1HXlr2i2nLNj7G4KC3L
7cVCqkZPfE4cF816HU7oMUh6i53SfJAT/Km54Riadvd2zFk4rNLkwmXiAMDBa4BP
ndplVGEGqxYkTLNLTHUgbbIa8oOKw0WPLOtDSIoI6emhHBp2ei/xnsNfuNQcS3X1
GJMYVxpqBKwhQpsuXqc4sJZdn7+q0TlNkMsSXhCqUTw6we1W5sHPvnRZMNWvZdbP
c/BNa4Zpl5TNLcuO/1CioP4D3Li8cToysZIpx827zXU1lHCIznDD0gcanf3qV97Y
+RODn1a6OcvlxToIJcJZCShTM5EM0MIU2Sx3wVZ7MGm7d2WMMyridrPTqIRGfprC
R7umjQeucFqVxudEqiuNBreLV0MlDok8ogcUVNtgIl9KceC+8iQG64Z4YreoHluG
69MbeGj3Mdtk50wpRQQyond1whFJrSjoJaemdWaFdFBzg/7mqcN0GHjolBiV+F3d
qNynvPkOhvXuwNAVyhXdmeQfFCcuUyC3vXjMohvjOXAZ4w/yc0BqqvEQD2N4lAtf
ZTmoOGrktnAoZcJDTvRnos2zqNw5LU2WNyclbZm5cPDaJkAh5swGYSADDu5QYeuB
-----END RSA PRIVATE KEY-----"
QXkrar3a,Power_control,kk258966,Lua,Saturday 13th of April 2024 10:19:59 AM CDT,"-- Default settings, do not change
local options = {
  -- Unique identifier for this matrix on rednet, required for rednet functionality
  rednet_identifier = '',
 
  -- Energy type being displayed (J, FE)
  energy_type = 'FE',
 
  -- Update frequency, in seconds
  update_frequency = 1,
 
  -- Text scale on the monitor
  text_scale = 1,
 
  -- Output debug data to the computer's internal display
  debug = true,
}

--------------------------------------------------
--- Internal variables, DO NOT CHANGE
--------------------------------------------------
 
--- This will be used as the installer source (Pastebin)
local INSTALLER_ID = 'LMdUZY4Z'
 
--- Supported energy suffixes
local energy_suffixes = { 'k', 'M', 'G', 'T', 'P' }
 
--- Supported time periods when converting seconds
local time_periods = {
  { 'weeks', 604800 },
  { 'days', 86400 },
  { 'hours', 3600 },
  { 'minutes', 60 },
  { 'seconds', 1 },
}
 
--- This is our Induction Matrix, we'll auto-detect it later
local cube = nil
 
--- This is our Monitor, we'll auto-detect it later
local monitor = nil
 
--------------------------------------------------
--- Helper functions
--------------------------------------------------

--- Holds the current buffer of data being printed
local machine_term = term.current()
local print_buffer = {}
 
--- Writes data to the output monitor buffer
function print_r (text)
  table.insert(print_buffer, text)
end
 
--- Writes formatted data to the output monitor buffer
function print_f (format, ...)
  print_r(string.format(format, ...))
end
 
--- Writes the buffer into the output monitor
function print_flush ()
  if monitor then
    -- Redirects writes to monitor (if any)
    if monitor then
      term.redirect(monitor)
    end
 
    -- Clears terminal
    term.clear()
    term.setCursorPos(1, 1)
 
    -- Writes new data
    print(table.concat(print_buffer or {}, '\n'))
 
    -- Redirects writes back to computer (if using monitor)
    if monitor then
      term.redirect(machine_term)
    end
  end
 
  -- Clears buffer
  print_buffer = {}
end
 
--- Writes debug info to the machine
function debug (...)
  if options.debug then
    print(...)
  end
end

--- Rounds a number with N decimals
function round_decimal (number, decimals)
  local multiplier = math.pow(10, decimals or 0)
  return math.floor(number * multiplier) / multiplier
end
 
--- Rounds a percentage (0..1) to a number of decimals
function round_percentage (number, decimals)
  return ('%s%%'):format(round_decimal(100 * number, decimals or 1))
end

function print_cube_info (cube_info)
  print_r('Energy Production Control')
  print_r('------------------')
  print_r('')
  print_f('Power : %s', energy_string(cube_info.energy_stored))
  print_f('Limit : %s', energy_string(cube_info.energy_capacity))
  print_f('Charge: %s', round_percentage(cube_info.energy_percentage))
  print_r('')
  print_f('Input : %s/t', energy_string(cube_info.io_input))
  print_f('Output: %s/t', energy_string(cube_info.io_output))
  print_f('Max IO: %s/t', energy_string(cube_info.io_capacity))
  print_f('Stat: %s/t', cube_info.gen_stats)
  print_r('')
  

end
-- Detects peripherals
monitor = peripheral.find('monitor')

if monitor then
  debug('Monitor detected, enabling output!')
  monitor.setTextScale(options.text_scale)
else
  debug('No monitor detected, entering headless mode!')
 
 
end





--------------------------------------------------
--- Main runtime
--------------------------------------------------
 
debug('Entering main loop...')
--- This will be updated after every energy collection, it is used to calculate how much power is actually being added/removed from the system
local energy_stored_previous = nil

while true do
  local status, err = pcall(function () 
    -- Attempts to auto-detect missing Cube
    if not Cube then
      Cube = peripheral.find('mekanism:ultimate_energy_cube')
 
      -- Checks if it worked
      if not Cube then
        error('Cube not connected!')
      end
    end
	
	 --- Save status
    local charge_status = 1
  
    --- This is our main information
    local cube_info = {
      energy_stored = cube.getEnergy(),
      energy_capacity = cube.getMaxEnergy(),
      energy_percentage = cube.getEnergyFilledPercentage(),
      io_input = cube.getLastInput(),
      io_output = cube.getLastOutput(),
      io_capacity = cube.getTransferCap(),
	  gen_stats = gen_stats_input
    }
	
     if charge_status == 1 then
		if energy_capacity < 50 then
			redstone.setOutput(""right"", false)
			gen_stats_input = ""Charging ...""
			charge_status = 2
			end
		else
			if energy_capacity > 90 then
			redstone.setOutput(""right"", true)
			gen_stats_input = ""Idle""
			charge_status = 1
			end
		end
		
		
 
     if not energy_stored_previous then
      energy_stored_previous = cube_info.energy_stored
    end
	
	-- Calculates power changes and adds them to our information
    cube_info.change_interval = options.update_frequency
    cube_info.change_amount = cube_info.energy_stored - energy_stored_previous
    cube_info.change_amount_per_second = cube_info.change_amount / options.update_frequency
	
	
    -- General stats
    cube_info.is_charging = cube_info.change_amount > 0
    cube_info.is_discharging = cube_info.change_amount < 0
 
    -- Sets the new ""previous"" value
    energy_stored_previous = cube_info.energy_stored
 
     
   -- Prints the matrix information
    print_cube_infoinfo(cube_info)
  end)
 
  -- Checks for errors (might be disconnected)
  if not status then
    -- Clears buffer first
    print_buffer = {}
 
    -- Shows error message
    print_r('Error reading data')
    print_r('Check connections.')
    print_r('------------------')
    print_r(err)
  end
 
  -- Outputs text to screen
  print_flush()
 
  -- Waits for next cycle
  os.sleep(options.update_frequency)
end"
vSaWQnFu,Untitled,MisterQuirk,Python,Saturday 13th of April 2024 10:16:09 AM CDT,"#Task 1

def sum_numbers(*numbers):
    return sum(numbers)

#Task 2

def print_kwargs(**kwargs):
    for line in kwargs:
        print(f'{line}: {kwargs[line]}')


#Task 3

def filter_by_length(min_length, *args):
    ans = list()
    for line in args:
        if len(line) >= min_length:
            ans.append(line)
    return ans

#Task 4

def calculate_total_price(cost, **kwargs):
    total_discount = 0
    for item in kwargs:
        total_discount += kwargs[item]
    return cost - cost * (total_discount * 0.01)

#Task 5

def custom_print(*args, **kwargs):
    endline = kwargs.get('end', '\n')
    separator = kwargs.get('sep', ' ')

    arr = list()

    for line in args:
        arr.append(str(line))

    for key, item in kwargs.items():
        if key != 'sep' and key != 'end':
            arr.append(f'{key} = {item}')

    print(separator.join(arr), end=endline)
"
weLeRnRP,system,AlewAlow,Lua,Saturday 13th of April 2024 09:58:55 AM CDT,"local ReplicatedStorage = game:GetService(""ReplicatedStorage"")

local Matter = require(ReplicatedStorage.Shared.Libs.Matter)
local Components = require(ReplicatedStorage.Shared.Components)

local function MoveTransforms(world, state)
	for id, transform, velocity in world:query(Components.Transform, Components.Velocity):without(Components.NonShared) do
		world:insert(id, transform:patch({
			Position = transform.Position + velocity.Velocity * Matter.useDeltaTime()
		}))
	end
end

return MoveTransforms"
zzAbAHtQ,Mad,Unknown_No_1,PHP,Saturday 13th of April 2024 09:54:27 AM CDT,2024LastInternetYearWW3
JwPWwGYD,SFWBar config,daddy_jones,CSS,Saturday 13th of April 2024 09:49:21 AM CDT,"# Override gtk theme
# theme = ""Adwaita-dark""
# Override gtk icon theme
# IconTheme = ""Adwaita""

Set Term = ""alacritty""

# Window Placer
placer {
  xorigin = 5  # place the first window at X% from the left
  yorigin = 5  # place the first window at X% from the top
  xstep = 5    # step by X% of desktop horizontally
  ystep = 5    # step by X% of desktop vertically
  children = true
}

# Task Switcher
switcher {
  interval = 700
  icons = true
  labels = false
  cols = 5
}

function(""SfwbarInit"") {
  SetBarId ""bar-0""
  SetLayer ""top""
  SetExclusiveZone ""auto""
  SetMonitor ""eDP-1""
  SetBarSize ""80%""
#  SetBarSize ""bar1"",""800"" 
  SetMirror ""*""
}

include(""winops.widget"")

# Panel layout

layout ""sfwbar"" {
 ##  include(""startmenu.widget"")
  include(""showdesktop.widget"")

  taskbar {
    rows = 1
    group = true
    group cols = 1
    group style = ""taskbar_group""
    group labels = true
    group icons = true
    icons = true
    labels = false
    action[3] = Menu ""winops""
    ## filter=output
  }

  label { css = ""* { -GtkWidget-hexpand: true; min-height: 28px; }"" }

  tray {
    rows = 1
  }

#  include(""battery-svg.widget"")
   include(""bluez.widget"")
# include(""rfkill-wifi.widget"")
# include(""rfkill-bt.widget"")
  include(""network-module.widget"")
# Select pulse-module or alsa-module based on your sound configuration
  include(""pulse-module.widget"")
# include(""alsa-module.widget"")
   include(""mpd-intmod.widget"")
   include(""sway-lang.widget"")

  Label {
  Value = Str(NetStat(""rxrate"") / 1024 / 1024) + "" Mbps""
  Css = ""* { min-width: 100px; }""
  }

  grid {
    css = ""* { -GtkWidget-direction: bottom; padding: 5px; padding-left: 0px; }""
    label {
      value = Time(""%k:%M"")
      style =""clock""
    }
    label {
      value = Time(""%x"")
      style =""clock""
    }
  }
}

#CSS
@define-color theme_bg_color #353231;
@define-color theme_fg_color #d1d1d1;
@define-color theme_text_color #d1d1d1;
@define-color borders #777777;

window {
  -GtkWidget-direction: bottom;
  background-color: #353231;
}

label {
  font: 12px sans;
  color: @theme_text_color;
  text-shadow: none;
}

button,
button image {
  outline-style: none;
  box-shadow: none;
  background-image: none;
  border-image: none;
}

window#taskbar_group {
  background-color: RGBA(0.2,0.2,0.2,0.5);
}

#hidden {
  -GtkWidget-visible: false;
}

button#taskbar_group_normal,
button#taskbar_group_normal:hover,
button#taskbar_group_active {
  margin: 0px;
  border: 0px;
  border-radius: 0px;
  -GtkWidget-valign: center;
}

button#taskbar_group_normal image,
button#taskbar_group_normal:hover image,
button#taskbar_group_active image {
  min-height: 30px;
  min-width: 30px;
  margin: 0px;
}

button#taskbar_group_active {
  background-color: #493B41;
}

button#taskbar_normal:hover,
button#taskbar_group_normal:hover,
button#taskbar_group_active:hover {
  background-color: #535353;
}

button#taskbar_normal grid {
  padding-right: 0px;
  margin-right: 0px;
  min-height: 0px;
}

button#taskbar_normal image,
button#taskbar_active image,
button#taskbar_normal:hover image {
  min-width: 18px;
  min-height: 18px;
}

button#taskbar_normal label,
button#taskbar_active label,
button#taskbar_normal:hover label {
  -GtkWidget-hexpand: true;
  -GtkWidget-halign: start;
  padding: 0px 7px 0px 0px;
}

button#taskbar_normal,
button#taskbar_active,
button#taskbar_normal:hover {
  border-radius: 0;
  border: 0px;
  box-shadow: none;
  -GtkWidget-hexpand: false;
  -GtkWidget-vexpand: false;
  min-height: 0px;
  background-color: #535353;
}

button#taskbar_active {
  background-color: #646464;
}


button#taskbar_normal:hover {
  background-color: #646464;
}

#menu_item,
#menu_item *,
#menu_item image,
#menu_item label {
  -GtkWidget-halign: start;
  color: white;
}

#menu_item image {
  min-width: 16px;
  min-height: 16px;
  padding-right: 2px;
}

menu {
  background-color: #353231;
}

menu arrow {
  background: none;
}

button#pager_normal,
button#pager_visible,
button#pager_focused {
  padding: 0px 5px 0px 5px;
  border-radius: 0;
}

button#pager_focused {
  background-color: #bbddff;
}

button#pager_preview {
  border-radius: 0;
  border-color: #000000;
  border-width: 0.25mm;
  color: #777777;
  min-width: 5cm;
  min-height: 2.8125cm;
}

grid#pager {
  outline-color: #000000;
  outline-style: dashed;
  outline-width: 0.25mm;
}

grid#switcher_active image,
grid#switcher_active {
  min-width: 50px;
  min-height: 50px;
  padding: 5px;
  background-color: #646464;
  border-radius: 5px;
  -GtkWidget-hexpand: true;
}

grid#switcher_normal image,
grid#switcher_normal {
  min-width: 50px;
  min-height: 50px;
  padding: 5px;
  -GtkWidget-direction: right;
  -GtkWidget-hexpand: true;
}

window#switcher { 
  border: 1px solid @borders;
  border-radius: 5px; 
  padding: 5px; 
  -GtkWidget-hexpand: true;
}

grid#switcher { 
  border-radius: 5px;
  padding: 5px;
  -GtkWidget-hexpand: true;
}

button#tray_active,
button#tray_passive,
button#tray_attention {
  border: 0px;
  margin: 0px;
  border-radius: 0px;
}

button#tray_passive {
  -GtkWidget-visible: false;
}

button#tray_active label,
button#tray_passive label,
button#tray_attention label {
  padding: 1px;
  color: @theme_text_color;
}

button#tray_active image,
button#tray_passive image,
button#tray_attention image {
  min-width: 18px;
  min-height: 18px;
  -GtkWidget-vexpand: true;
  -GtkWidget-halign: center;
  -GtkWidget-valign: center;
}

label#clock {
  color: @theme_text_color;
  -GtkWidget-vexpand: true;
  -GtkWidget-valign: center;
  font-size: 12px;
}

label#sway_lang {
  margin-left: 3px;
  margin-right: 5px;
}

grid#layout {
  -GtkWidget-direction: right;
}

button#module,
button#showdesktop,
button#startmenu {
  margin: 0px;
  border: 0px;
  border-radius: 0px;
  min-height: 18px;
  min-width: 18px;
  -GtkWidget-valign: center;
  -GtkWidget-vexpand: true;
  padding: 0px 3px 0px 3px;
}

button#startmenu,
button#showdesktop {
  min-width: 24px;
  min-height: 24px;
}

* {
  color: #ffffff;
}
"
Y9TvHnJd,chunkMiner,mathiaas,Lua,Saturday 13th of April 2024 09:08:54 AM CDT,"-- todo when low fuel lvl: refuel
-- deal with multiple chunks

local args = {...}
local starting_height = tonumber(args[1])
--local chunks_to_mine = tonumber(args[2])
local chunk_size = 32
local minimum_height = 8

if #args < 1 then
    --print(""Usage: chunkMiner <starting height> <chunks to mine>"")
    print(""Usage: chunkMiner <starting height>"")
    return
end

assert(loadfile(""utils""))()
assert(loadfile(""movement""))()

local items = {
    end_chest = ""EnderStorage:enderChest""
}

local function init()
    local ender_chest_present = false
    local required_fuel = chunk_size * ((starting_height - minimum_height) * 2)

    if turtle.getFuelLevel() < required_fuel then
        print(""Required fuel: "" .. required_fuel)
        print(""Current fuel: "" .. turtle.getFuelLevel())
        print(""Not enough fuel to start... Hold ctrl + t to terminate"")
        while true do sleep(100) end
    end


    while not ender_chest_present do
        for k,v in pairs(getInventory()) do
            if v.name == items.end_chest then
                shell.run(""clear"")
                ender_chest_present = true
                break
            end
        end
        print(""Put ender chest in inventory"")
        sleep(1)
    end
end

local function ender_deposit()
    local inventory = getInventory()
    if #inventory < 10 then
        return false
    end

    for k, v in pairs(inventory) do
        if v.name == items.end_chest then
            turtle.select(v.slot)
            turtle.digUp()
            turtle.placeUp()
            break
        end
    end

    for k, v in pairs(inventory) do
        if v.name ~= items.end_chest then
            turtle.select(v.slot)
            turtle.dropUp()
        end
    end

    turtle.digUp()
end


local function mine(direction)
    direction = direction or ""front""
    local detect = turtle.detect
    local dig = turtle.dig

    if direction == ""up"" then
        detect = turtle.detectUp
        dig = turtle.digUp
    elseif direction == ""down"" then
        detect = turtle.detectDown
        dig = turtle.digDown
    end

    while detect() do dig() end

    ender_deposit()
end


local function mine_row(steps)
    for _ = 1, steps do
        mine()
        f()
    end
end


local function handle_turn(layer, idx)
    local even_layer = layer % 2 == 0
    local turn = (idx % 2 == 1) ~= even_layer and l or r
    turn()
    mine()
    f()
    turn()
end


local function mine_layer(layer)
    for idx = 1, chunk_size do
        mine_row(chunk_size - 1)
        if idx ~= chunk_size then
            handle_turn(layer, idx)
        else
            l(2)
        end
    end
end


local function mine_cube(starting_height)
    chunks_to_mine = chunks_to_mine or 1
    starting_height = starting_height - minimum_height

    init()

    for layer = 1, starting_height do
        mine_layer(layer)
        if layer ~= starting_height then
            mine(""down"")
            d()
        end
    end
    u(starting_height)
end


mine_cube(starting_height)"
QkUQJNmx,client side replication part after edit,AlewAlow,Lua,Saturday 13th of April 2024 09:05:13 AM CDT,"local ReplicatedStorage = game:GetService(""ReplicatedStorage"")

local Components = require(ReplicatedStorage.Shared.Components)

local remoteEvent = ReplicatedStorage:WaitForChild(""MatterRemote"")

local function SetupReplication(world, state)
	local function debugPrint(...)
		if state.debugEnabled then
			print(""Replication>"", ...)
		end
	end
	
	remoteEvent.OnClientEvent:Connect(function(entities)
		for entityId, componentMap in entities do
			local entityId = tonumber(entityId)
			local exists = world:contains(entityId)
			
			if exists and next(componentMap) == nil then
				world:despawn(entityId)
				debugPrint(string.format(""Despawn %s"", entityId))
				continue
			end

			local componentsToInsert = {}
			local componentsToRemove = {}

			local insertNames = {}
			local removeNames = {}

			for name, container in componentMap do
				if container.data then
					table.insert(componentsToInsert, Components[name](container.data))
					table.insert(insertNames, name)
				else
					table.insert(componentsToRemove, Components[name])
					table.insert(removeNames, name)
				end
			end

			if not exists then
				-- the ""NonShared"" is used for shared systems that run on both sides
				-- by filtering out by default entities that were created on the server and replicated to the client
				-- which leads to shared systems running for the entity on the same side they were created on
				-- an example of a shared system is a system of mine that handles checking collisions
				-- by doing the same calculations each frame and storing the results which are a table of ids
				-- in a component, which would have been hard to do because of how ids are not the same on
				-- both sides so entities created on the server would have replicated false ids compared to the client
				-- but thanks to this change they work well
				world:spawnAt(entityId, Components.NonShared(), unpack(componentsToInsert))
				
				debugPrint(
					string.format(""Spawn %s with %s"", entityId, table.concat(insertNames, "",""))
				)
			else
				if #componentsToInsert > 0 then
					world:insert(entityId, unpack(componentsToInsert))
				end
			
				if #componentsToRemove > 0 then
					world:remove(entityId, unpack(componentsToRemove))
				end

				debugPrint(
					string.format(
						""Modify %s adding %s, removing %s"",
						entityId,
						if #insertNames > 0 then table.concat(insertNames, "", "") else ""nothing"",
						if #removeNames > 0 then table.concat(removeNames, "", "") else ""nothing""
					)
				)
			end
		end
	end)
end

return SetupReplication
"
a3n2xuM2,Run Batch Script As Admin [VBS],sofaygo,VBScript,Saturday 13th of April 2024 08:52:01 AM CDT,"[[-]] VBS/Batch - Run Script As Admin [[-]]
 
VBS File:
Set objShell = CreateObject(""Shell.Application"")
Set objShellShell = CreateObject(""WScript.Shell"")
strScriptPath = objShellShell.CurrentDirectory & ""\replace with your file name.bat""
 
objShell.ShellExecute ""cmd.exe"", ""/c """""" & strScriptPath & """""""", """", ""runas"", 1
 
Save this as RunAsAdmin.vbs. Then, create a batch script to run this.
 
For example: 
@echo off
RunAsAdmin.vbs >nul
exit"
0Xate4Q3,Script Obfuscator (Batch File),sofaygo,Batch,Saturday 13th of April 2024 08:43:44 AM CDT,"[[-]] Batch Obfuscator Code [[-]]

Batch Obfuscator/Deobfuscator:

Just drag the batch script you want to obfuscate to the obfuscate.bat

To deobfuscate the file, drag the obfuscated batch script to it.

[[-]] Code [[-]]

Obfuscate:
@echo off
REM Code to obfuscate the file
if ""%~1""=="""" exit /b
if /i ""%~x1"" neq "".bat"" if /i ""%~x1"" neq "".cmd"" exit /b
for /f %%i in (""certutil.exe"") do if not exist ""%%~$path:i"" (
  echo CertUtil.exe not found.
  pause
  exit /b
)
>""temp.~b64"" echo(//4mY2xzDQo=
certutil.exe -f -decode ""temp.~b64"" ""%~n1___%~x1""
del ""temp.~b64""
copy ""%~n1___%~x1"" /b + ""%~1"" /b

Deobfuscator:
@echo off
REM Deobfuscates the file that is obfuscated.
setlocal
if ""%~1""=="""" exit /b
if /i ""%~x1"" neq "".bat"" if /i ""%~x1"" neq "".cmd"" exit /b
<""%~1"" ((for /l %%N in (1 1 8) do pause)>nul&findstr ""^"">""%~n1__%~x1"")

"
TkP4UHhR,Untitled,MisterQuirk,Python,Saturday 13th of April 2024 07:38:41 AM CDT,"x = open('my_text.txt')

#Task 1
def string_1(x):
    with open(x,'r') as file:
        data = file.read()
    return data

#Task 2
def string_2(x):
    with open(x,'r') as file:
        data = file.readline()
    return data

#Task 3
def string_3(x):
    with open(x,'r') as file:
        data = file.readlines()
    return data

#Task 4
def string_4(x):
    with open(x,'r') as file:
        data = file.read().split('\n')
    return data

#Task 5
def string_5(x):
    with open(x,'r') as file:
        for line in file:
            print(line, end='')

#Task 6
def string_6(x):
    with open(x,'r') as file:
        st = ' '.join(file.readlines()).replace('\n', '')
        return st

#Task 7
def string_7(x):
    return x.strip()

#Task 8
def string_8(string):
    return string.strip('!?.')

#Task 9
def string_9(string):
    with open(string,'w') as file:
        file.write(string)

#Task 10
def string_10(string):
    with open(string,'w') as file:
        file.write(string + '\n')

#Task 11
def string_11(string):
    with open(string,'w') as file:
        file.writelines(x)

#Task 12
def string_12(x1, x2):
    with open(x1, 'r') as file1:
        with open(x2, 'a') as file2:
            for line in file1:
                print(line, file=file2)

#Task 13

def string_13(x1, x2):
    with open(x1, 'r') as file1:
        with open(x2, 'a') as file2:
            for line in file1:
                line_1 = line.strip()
                if line_1.startswith('hello') and line_1.endswith('world'):
                    file2.write(line)

#Task 14

def string_14(name):
    solve = {}
    with open(name, 'r') as file:
        data = file.readlines()[:1]
    for line in data:
        sp = line.split()
        solve[sp[0]] = (sp[1], sp[2])
    return solve
"
kCcDFDBa,Untitled,dllbridge,C,Saturday 13th of April 2024 07:25:49 AM CDT,"
#include<stdio.h>



void  Dog(int *c, int *q);




////////////////////////////////////////////////////////////
int main()
{
	
	int c = 14,
	    q = 20;   
	
    Dog(&c, &q);
    printf(""From main:\n"");
    printf(""addres c = %d \n"", &c);    
    printf("" c = %d \n"", c);
    printf("" q = %d \n"", q);    
}



///////////////////////////////////////////////////////////
void  Dog(int *c, int *q)  // c - это левая рука
{                          // q - правая рука 
	
      int a;               //  Стол
    
	  a = *c;              //  Положили на стол из левой руки
     *c = *q;              //  Из правой руки кладём торт в левую руку.    
     *q = a;               //  Правой рукой берём торт со стола
    
    printf(""From Dog:\n""  );
    printf(""addres c = %d \n"", c);    
    printf(""*c = %d \n"", *c);
    printf(""*q = %d \n"", *q);      

}



/*

#include<stdio.h>



void  Dog(int &c, int &q);




////////////////////////////////////////////////////////////
int main()
{
	
	int c = 14,
	    q = 20;   
	
    Dog(c, q);
    printf(""From main:\n"");
    printf(""addres c = %d \n"", &c);    
    printf("" c = %d \n"", c);
    printf("" q = %d \n"", q);    
}



///////////////////////////////////////////////////////////
void  Dog(int &c, int &q)  // c - это левая рука
{                        // q - правая рука 
	
      int a;             //  Стол
    
	  a = c;             //  Положили на стол из левой руки
      c = q;             //  Из правой руки кладём торт в левую руку.    
      q = a;             //  Правой рукой берём торт со стола
    
    printf(""From Dog:\n""  );
    printf(""addres c = %d \n"", &c);    
    printf("" c = %d \n"", c);
    printf("" q = %d \n"", q);      

}

*/













/*

#include<stdio.h>



void  Dog(int c, int q);




////////////////////////////////////////////////////////////
int main()
{
	
	int c = 14,
	    q = 20;   
	
    Dog(c, q);
    printf(""From main:\n"");
    printf("" c = %d \n"", c);
    printf("" q = %d \n"", q);    
}



///////////////////////////////////////////////////////////
void  Dog(int c, int q)  // c - это левая рука
{                        // q - правая рука 
	
      int a;             //  Стол
    
	  a = c;             //  Положили на стол из левой руки
      c = q;             //  Из правой руки кладём торт в левую руку.    
      q = a;             //  Правой рукой берём торт со стола
    
    printf(""From Dog:\n""  );
    printf("" c = %d \n"", c);
    printf("" q = %d \n"", q);      

}



*/


"
tTWVNgQ1,Untitled,35657,C++,Saturday 13th of April 2024 06:28:36 AM CDT,"
#include <iostream>

using namespace std;

void reverse(int number) {
    if (number < 10) {
        cout << number;
    }
    else {
        cout << number % 10; 
        reverse(number / 10); 
    }
}


int main() {
    setlocale(LC_ALL, ""ru"");

    reverse(7563);

}"
1jQ5GQ4Z,data895,TestGuy1,JSON,Saturday 13th of April 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '31d170a67989e23e1449237783ebab3a83538db566211684bd1cf420278b11795ef3626b1166faecb31421c77c3beae8a3ffa116be63343f22aab1707336fcfc06e808c81859f10986fc2234255bf1d7522d23a2f1c0ea498d87f0ae114592ff77942eb6a90ef6575067dd7fd2e2a7c603d394aee6b1ad2e0e923a2c96822c13',
  otherdata: [
    'bb18558019fcaf8e4adfe6f0e1db784d',
    'd543db2a6496ccd8e1a6b4b2390b301a',
    '9b492a3bdc376cff963e4f3530f0115a',
    '98e458467c56af8b21bffbd3ee22cf9d',
    '40af9eefc069e55d188cf50853086531',
    '8867ea306bb72c49e2f0b0812612431e',
    '062b7bb9ca27a26806e3df0911140897',
    '2d81bfa8d5e2805d53666892f7fc5ef2'
  ]
}"
jPzBnkPE,Untitled,35657,C++,Saturday 13th of April 2024 05:55:40 AM CDT,"
#include <iostream>

using namespace std;

void tower(int n, char src, char dest, char temp) {
    if (n == 0) {
        return;
    }
    tower(n - 1, src, temp, dest);
    cout << n << "" "" << src << "" -> "" << dest << endl;
    tower(n - 1, temp, dest, src);
}


int main() {
    setlocale(LC_ALL, ""ru"");

    tower(3, 'A', 'C', 'B');

}"
kenKH2wj,06. Building,myrdok123,Java,Saturday 13th of April 2024 05:17:37 AM CDT,"package NestedLoops;

import java.util.Scanner;

public class P06Building {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

             int floors = Integer.parseInt(scanner.nextLine());
             int rooms = Integer.parseInt(scanner.nextLine());

        for (int i = floors; i >= 1 ; i--) {

            for (int j = 0; j < rooms; j++) {

                if (i == floors){
                    System.out.printf(""L%d%d "", i, j);
                } else if (i % 2 == 0) {
                    System.out.printf(""O%d%d "", i, j);
                }else {
                    System.out.printf(""A%d%d "", i, j);
                }

            }

            System.out.println();

        }
    }
}
"
J3P2T0j4,05. Travelling,myrdok123,Java,Saturday 13th of April 2024 05:16:42 AM CDT,"package NestedLoops;

import java.util.Scanner;

public class P05Travelling {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String destination = scanner.nextLine();

        while (!destination.equals(""End"")){
            double neededMoney = Double.parseDouble(scanner.nextLine());

            double savedMoney = 0;
            while (neededMoney > savedMoney){
                double currentMoney = Double.parseDouble(scanner.nextLine());
                savedMoney += currentMoney;
            }

            System.out.printf(""Going to %s!%n"", destination);

            destination = scanner.nextLine();
        }


    }
}
"
HTpunDQN,04. Sum of Two Numbers,myrdok123,Java,Saturday 13th of April 2024 05:16:16 AM CDT,"package NestedLoops;

import java.util.Scanner;

public class P04SumOfTwoNumbers {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int firstNumber = Integer.parseInt(scanner.nextLine());
        int secondNumber = Integer.parseInt(scanner.nextLine());
        int magicNumber = Integer.parseInt(scanner.nextLine());

        int countCombination = 0;
        boolean flag = false;

        for (int first = firstNumber; first <= secondNumber ; first++) {

            for (int second = firstNumber; second <= secondNumber ; second++) {
                countCombination++;
                int currentCombination = first + second;

                if (currentCombination == magicNumber){
                    System.out.printf(""Combination N:%d (%d + %d = %d)"", countCombination, first, second, magicNumber);
                    flag = true;
                    break;
                }

            }

            if(flag){
                break;
            }

        }
        if(!flag){
            System.out.printf(""%d combinations - neither equals %d"", countCombination, magicNumber);
        }
    }
}
"
cqcygGqU,03. Combinations,myrdok123,Java,Saturday 13th of April 2024 05:15:44 AM CDT,"package NestedLoops;

import java.util.Scanner;

public class P03Combinations {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int number = Integer.parseInt(scanner.nextLine());

        int countCombinations = 0;

        for (int x1 = 0; x1 <= number; x1++) {

            for (int x2 = 0; x2 <= number; x2++) {

                for (int x3 = 0; x3 <= number; x3++) {

                    int currentCombination = x1 + x2 + x3;

                    if (currentCombination == number){

                        countCombinations++;

                    }

                }
            }

        }

        System.out.println(countCombinations);


    }
}
"
pHTmh1fA,02. Multiplication Table,myrdok123,Java,Saturday 13th of April 2024 05:14:58 AM CDT,"package NestedLoops;

public class P02MultiplicationTable {

    public static void main(String[] args) {


        for (int firstMultiplier = 1; firstMultiplier <= 10; firstMultiplier++) {

            for (int secondMultiplier = 1; secondMultiplier <= 10 ; secondMultiplier++) {

                System.out.printf(""%d * %d = %d%n"", firstMultiplier, secondMultiplier, firstMultiplier * secondMultiplier );

            }

        }

    }
}
"
Wdg7d8gD,01. Clock,myrdok123,Java,Saturday 13th of April 2024 05:14:32 AM CDT,"package NestedLoops;


public class P01Clock {

    public static void main(String[] args) {

        for (int hours = 0; hours <= 23; hours++) {

            for (int minutes = 0; minutes <= 59; minutes++) {

                System.out.printf(""%d:%d%n"", hours, minutes);

            }

        }

    }
}
"
hbiJCZee,3.LoadMeals,Silviya7,JavaScript,Saturday 13th of April 2024 05:09:51 AM CDT,"const baseURL='http://localhost:3030/jsonstore/tasks/';

const BtnLoadMeals= document.getElementById('load-meals');
const BtnAddMeal=document.getElementById('add-meal');
const ElementList= document.getElementById('list');

const Elementfood= document.getElementById('food');
const Elementtime= document.getElementById('time');
const Elementcalories= document.getElementById('calories');


const LoadMelas=
BtnLoadMeals.addEventListener('click',async ()=>{
    //Fetch all meals
    const response=await fetch(baseURL);
    const data= await response.json();
    console.log(Object.values(data));
    
    ElementList.innerHTML='';

    for (const meal of Object.values(data)) {        
        const mealBtndiv= document.createElement('div');
        mealBtndiv.id='meal-buttons';

        const BtnChange=document.createElement('button');
        BtnChange.classList.add('change-meal');
        BtnChange.textContent='Change';

        const BtnDelete=document.createElement('button');
        BtnDelete.classList.add('delete-meal');
        BtnDelete.textContent='Delete';

        mealBtndiv.appendChild(BtnChange);
        mealBtndiv.appendChild(BtnDelete);

        const Elementh1=document.createElement('h2');
        Elementh1.textContent= meal.food;
        const Elementhtime3=document.createElement('h3');
        Elementhtime3.textContent= meal.time;
        const Elementhcalories3=document.createElement('h3')
        Elementhcalories3.textContent= meal.calories;

        const divMeal= document.createElement('div');
        divMeal.classList.add('meal');
        divMeal.appendChild(Elementh1);
        divMeal.appendChild(Elementhtime3);
        divMeal.appendChild(Elementhcalories3);
        divMeal.appendChild(mealBtndiv);

        ElementList.appendChild(divMeal);

    }

});
"
