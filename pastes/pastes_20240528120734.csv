id,title,username,language,date,content
kLZM98Ut,ü§ë G2A.com Free Gift Card Guide May 2024 FIX üéÅ,ssss50w,GetText,Tuesday 28th of May 2024 06:42:43 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
28 May 2024"
M7G0TjZF,ddddddd,portalxwe,C#,Tuesday 28th of May 2024 06:41:04 AM CDT,"d
























ddddddd"
v6jtW5Zf,Untitled,portalxwe,C++,Tuesday 28th of May 2024 06:40:46 AM CDT,"dax
dd



















dax"
pDhBcHgY,Untitled,35657,C++,Tuesday 28th of May 2024 06:26:14 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <fstream>
#include <map>
#include <Windows.h>


int main() {

    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);

    std::ifstream fin(""file.txt"");

    if (!fin.is_open()) {
        std::cout << ""–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞"" << std::endl;
    }
    else {
        std::string str;

        std::map<std::string, int> dictionary;

        while (!fin.eof()) {
            fin >> str;

            while (str.size() > 0 && (str[0] < '–ê' || str[0] > '—è')) {
                str.erase(str.begin());
            }
            while (str.size() > 0 && (str.back() < '–ê' || str.back() > '—è')) {
                str.pop_back();
            }
            if (str.size() > 0) {
                for (char& ch : str) { // –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–µ–Ω –ø–µ—Ä–µ–≤–æ–¥ –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä, —Ç–æ –º–æ–∂–Ω–æ –Ω–µ –¥–µ–ª–∞—Ç—å
                    if (ch >= '–ê' && ch <= '–Ø') {
                        ch += 32;
                    }
                }
                dictionary[str]++;
            }
        }

        for (auto a : dictionary) {
            std::cout << a.first << "" "" << a.second << std::endl;
        }

        fin.close();
    }
}
"
5tA98NK8,Untitled,Armen_06,Dart,Tuesday 28th of May 2024 06:07:35 AM CDT,"500: Npgsql.PostgresException (0x80004005): 42703: column u.last_seen_date does not exist

POSITION: 65
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Ms.Swish.BusinessLogic.Services.UserService.Authenticate(String numberPrefix, String number, String password) in /src/Ms.Swish.BusinessLogic/Services/UserService.cs:line 134
   at Ms.Swish.Controllers.UsersController.NewAuthenticate(UserAuthenticateDto userAuthenticate) in /src/Ms.Swish/Controllers/UsersController.cs:line 106
   at lambda_method130(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|26_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ExceptionContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
  Exception data:
    Severity: ERROR
    SqlState: 42703
    MessageText: column u.last_seen_date does not exist
    Position: 65
    File: parse_relation.c
    Line: 3638
    Routine: errorMissingColumn

HEADERS
=======
Connection: keep-alive
Host: swagger.swish.su
User-Agent: Dart/3.2 (dart:io)
Accept-Encoding: gzip
Content-Type: application/json
Content-Length: 64
apikey: 6074b077-e86f-473f-aa2e-b78ecbd4862f
"
jSH0CBzG,ü§ë G2A.com Free Gift Card Guide May 2024 FIX ü§ë,jusst2k4,GetText,Tuesday 28th of May 2024 06:03:58 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_757449.pdf

Working as of:
28 May 2024"
YHuU93X7,data940,TestGuy1,JSON,Tuesday 28th of May 2024 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '035bc2897adf4b8d1fd5f94c2f0cf6166d61b8c5ef46a808c4cc73c14d15f1725d1c0ba3fe41c8dbc60b1329f47813d19730125fe0f6530b5827c7643578702e96703613aede43a608ad549a5e8ff3ae8b2253bfaeb4538cb4e70830b6e879e2deb2142ced37324ddf9895a7b4dde64df74001a5d6a7aaf744349015fdfc3b05',
  otherdata: [
    'b7048e78e51205970f3e7747170bf856',
    '8eec33c5fba4ce9f0df6bbfd5040be25',
    '411303bf126a172fd027b0a8f32a6486',
    '24eed180400d6915fb82a630e4beaa51',
    '563437a67eb7f8b29b7246c4f941ea27',
    '5c923831493fe0a8b485a674d3ebabd3',
    'ba8670a5120e56b3ecd9ef202ea62488',
    'dcd152deb05e8458ede2bf409fb73cbd'
  ]
}"
Yi14qmS7,Untitled,35657,C++,Tuesday 28th of May 2024 05:47:20 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <fstream>
#include <map>
#include <Windows.h>


int main() {

    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);

    std::ifstream fin(""eng-rus dictionary.txt"");

    std::ofstream fout(""rus-eng dictionary.txt"");

    if (!fin.is_open() || !fout.is_open()) {
        std::cout << ""–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞"" << std::endl;
    }
    else {
        std::string word, translation;

        std::map<std::string, std::string> dictionary;


        // —á—Ç–æ–±—ã –Ω–µ —Å—á–∏—Ç—ã–≤–∞–ª –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤ –∫–æ–Ω—Ü–µ
        fin >> word >> translation; 
        while (!fin.eof()) {
            dictionary[translation] = word;
            fin >> word >> translation;
        }

        for (auto a : dictionary) {
            fout << a.first;
            for (int i = 0; i < 20 - a.first.size(); i++) {
                fout << "" "";
            } // —á—Ç–æ–±—ã –≤—ã—Ä–æ–≤–Ω–∏—Ç—å –ø–æ –æ—Ç—Å—Ç—É–ø–∞–º
            fout << a.second << std::endl;
        }
        fin.close();
        fout.close();
    }
}
"
iusktMRQ,üí∏G2A.com Free Gift Card Guide 2024 Mayü§ë,sayid83,Python,Tuesday 28th of May 2024 05:41:17 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_2068187.pdf

Working as of:

29 May 2024"
q1X2Xfhz,üí∞G2A.com Free Gift Card Guide 2024 Mayü§ë,PetrikDev,Python,Tuesday 28th of May 2024 05:34:32 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_2068187.pdf

Working as of:

29 May 2024"
PBfa4NuC,[MUF] Dealer - User Vehicle Detail,ffajarpratama,JSON,Tuesday 28th of May 2024 05:33:32 AM CDT,"{
    ""success"": true,
    ""data"": {
        ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
        ""city_id"": ""5a78bb52-7868-4ebb-ad42-5cd18f15e103"",
        ""vehicle_brand_id"": ""56c7ad8e-e6cd-4358-ab3b-e2fb443da2e3"",
        ""vehicle_variant_id"": ""f7f62586-ae2d-4ce5-b96c-c23a9da00009"",
        ""vehicle_type_id"": ""36342fcb-bc01-41f1-8853-93abc770a279"",
        ""vehicle_color_id"": ""75e87802-5e7d-46f9-a6a9-3cf8271ef403"",
        ""vehicle_series_id"": ""62264377-a71c-4b46-8119-8789cb22656c"",
        ""year"": 2020,
        ""license_plate"": ""AA"",
        ""is_plate_number_even"": false,
        ""odometer"": 2400,
        ""ownership_status"": ""individual"",
        ""ac_condition"": ""normal"",
        ""tyre_condition"": ""80 - 89%"",
        ""body_condition"": ""Baret ringan"",
        ""flood_damage"": false,
        ""registration_validity_period"": ""04-2023"",
        ""description"": ""Ini mau disii dengan apa"",
        ""price"": 240000000,
        ""type"": ""dealer"",
        ""created_by"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
        ""dealer_id"": ""475d3274-6a26-40b3-8983-3be0dd681922"",
        ""approved_by"": null,
        ""approved_at"": 0,
        ""updated_by"": null,
        ""status"": ""revision-required"",
        ""reason"": """",
        ""total_submission_field"": 21,
        ""total_submission_field_reviewed"": 21,
        ""total_submission_field_edited"": 0,
        ""total_submission_field_rejected"": 1,
        ""review_draft_at"": 0,
        ""review_finished_at"": 1715936340,
        ""is_recommended"": false,
        ""is_popular"": false,
        ""is_trending"": false,
        ""assignee_id"": ""6fc8e022-bbd0-4656-9a01-9730cf41c08b"",
        ""views_count"": 4,
        ""imported_at"": 0,
        ""created_at"": 1714364288,
        ""updated_at"": 1715936340,
        ""deleted_at"": 0,
        ""city"": {
            ""city_id"": ""5a78bb52-7868-4ebb-ad42-5cd18f15e103"",
            ""moas_id"": 334,
            ""name"": ""Aceh Barat Daya"",
            ""position"": 100,
            ""province_id"": ""7bfdb9cf-7340-415b-b952-11edcd9bf2af"",
            ""created_at"": 1702442413,
            ""updated_at"": 1702442413,
            ""deleted_at"": 0,
            ""province"": {
                ""province_id"": ""7bfdb9cf-7340-415b-b952-11edcd9bf2af"",
                ""name"": ""Nanggroe Aceh Darussalam (NAD)"",
                ""created_at"": 1702435790,
                ""updated_at"": 1702435790,
                ""deleted_at"": 0
            }
        },
        ""vehicle_brand"": {
            ""vehicle_brand_id"": ""56c7ad8e-e6cd-4358-ab3b-e2fb443da2e3"",
            ""name"": ""ASTON MARTIN"",
            ""vehicle_group_id"": ""844e43ec-7493-41a7-b2ff-b9f1c3c138d4"",
            ""code"": ""003"",
            ""media_id"": ""82bcc828-8ba5-4d20-be5d-805a78bc38d7"",
            ""created_at"": 1691577703,
            ""updated_at"": 1691577703,
            ""deleted_at"": 0,
            ""vehicle_group"": null,
            ""media"": null
        },
        ""vehicle_variant"": {
            ""vehicle_variant_id"": ""f7f62586-ae2d-4ce5-b96c-c23a9da00009"",
            ""name"": ""AMR A Fierce New Breed"",
            ""vehicle_series_id"": ""62264377-a71c-4b46-8119-8789cb22656c"",
            ""vehicle_brand_id"": ""56c7ad8e-e6cd-4358-ab3b-e2fb443da2e3"",
            ""vehicle_category_id"": ""f991e8e2-2b0d-40f7-902f-181e24974a44"",
            ""vehicle_group_id"": ""844e43ec-7493-41a7-b2ff-b9f1c3c138d4"",
            ""vehicle_fuel_id"": ""7f5ceae2-24ff-4add-a3ca-97352cb1443f"",
            ""vehicle_transmission_id"": ""5a395636-3a47-432f-997f-cc215f80fe1e"",
            ""vehicle_type_id"": ""b32b65cb-3a97-4bfb-bf24-07f7cd07457d"",
            ""code"": """",
            ""moas_id"": null,
            ""is_recommended"": false,
            ""is_popular"": false,
            ""is_trending"": false,
            ""created_at"": 1701253610,
            ""updated_at"": 1701253610,
            ""deleted_at"": 0,
            ""all_specs"": null,
            ""vehicle_series"": null,
            ""vehicle_brand"": null,
            ""vehicle_category"": null,
            ""vehicle_group"": null,
            ""vehicle_fuel"": null,
            ""vehicle_transmission"": null,
            ""vehicle_specs"": null,
            ""vehicle_otr"": null,
            ""vehicle_type"": null
        },
        ""vehicle_type"": {
            ""vehicle_type_id"": ""36342fcb-bc01-41f1-8853-93abc770a279"",
            ""name"": ""Mobil Bekas"",
            ""vehicle_group_id"": ""844e43ec-7493-41a7-b2ff-b9f1c3c138d4"",
            ""code"": ""004"",
            ""code_mapping"": ""UC"",
            ""created_at"": 0,
            ""updated_at"": 0,
            ""deleted_at"": 0,
            ""vehicle_group"": {
                ""vehicle_group_id"": ""844e43ec-7493-41a7-b2ff-b9f1c3c138d4"",
                ""name"": ""Mobil"",
                ""code"": ""002"",
                ""kind"": 2,
                ""created_at"": 1694492214,
                ""updated_at"": 1694492214,
                ""deleted_at"": 0
            }
        },
        ""vehicle_color"": {
            ""vehicle_color_id"": ""75e87802-5e7d-46f9-a6a9-3cf8271ef403"",
            ""name"": ""Silver"",
            ""code"": ""008"",
            ""hex"": ""#D0D5DD"",
            ""created_at"": 1702731982,
            ""updated_at"": 1702731982,
            ""deleted_at"": 0
        },
        ""vehicle_series"": {
            ""vehicle_series_id"": ""62264377-a71c-4b46-8119-8789cb22656c"",
            ""name"": ""VANTAGE"",
            ""vehicle_brand_id"": ""56c7ad8e-e6cd-4358-ab3b-e2fb443da2e3"",
            ""vehicle_group_id"": ""844e43ec-7493-41a7-b2ff-b9f1c3c138d4"",
            ""code"": """",
            ""moas_id"": 0,
            ""specification"": """",
            ""vehicle_category_id"": ""f991e8e2-2b0d-40f7-902f-181e24974a44"",
            ""last_sync_at"": 0,
            ""synced_by"": null,
            ""created_at"": 1701242399,
            ""updated_at"": 1701242399,
            ""deleted_at"": 0,
            ""min_price"": 0,
            ""max_price"": 0,
            ""domicile_name"": """",
            ""wishlisted"": false,
            ""vehicle_brand"": null,
            ""vehicle_group"": null,
            ""vehicle_otrs"": null,
            ""vehicle_series_image"": null,
            ""vehicle_series_thumbnail"": null,
            ""vehicle_category"": null,
            ""synced_by_user"": null
        },
        ""created_by_user"": {
            ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
            ""name"": ""Gorengan"",
            ""email"": ""mufkalif18@gmail.com"",
            ""phone_number"": ""6287824412129"",
            ""last_login_at"": 0,
            ""last_seen_at"": 0,
            ""verified_at"": 1695352377,
            ""email_verified_at"": 1713248282,
            ""email_verif_exp_at"": 1713259034,
            ""phone_verified_at"": 1714638996,
            ""deactivated_at"": 0,
            ""reactivation_req_at"": 0,
            ""register_source"": ""google"",
            ""created_at"": 1695350727,
            ""updated_at"": 1714638996,
            ""deleted_at"": 0,
            ""user_info"": {
                ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
                ""alt_email"": """",
                ""phone_number"": ""6287824412312"",
                ""alt_phone_number"": """",
                ""place_of_birth"": """",
                ""date_of_birth"": """",
                ""media_id"": null,
                ""ktp_verified_at"": 1712290801,
                ""ktp_verification_status"": ""verified"",
                ""total_point"": 400,
                ""total_coupon"": -1,
                ""created_at"": 1694626580,
                ""updated_at"": 1714463341,
                ""deleted_at"": 0,
                ""scan_ktp"": null,
                ""spouse_scan_ktp"": null,
                ""ktp_submitted"": false,
                ""ktp_submission_activity_id"": """",
                ""media"": null
            },
            ""user_roles"": [
                {
                    ""role_id"": ""80eb53b5-a584-418c-9907-ee3e418a99b0"",
                    ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
                    ""approve_at"": 0,
                    ""created_at"": 1701240189,
                    ""updated_at"": 1701240189,
                    ""deleted_at"": 0,
                    ""role"": {
                        ""role_id"": ""80eb53b5-a584-418c-9907-ee3e418a99b0"",
                        ""name"": ""Customer""
                    }
                }
            ],
            ""user_dealer"": null,
            ""history_status"": null,
            ""has_pin"": false,
            ""dealer"": null
        },
        ""dealer"": {
            ""dealer_id"": ""475d3274-6a26-40b3-8983-3be0dd681922"",
            ""name"": ""ajajaj"",
            ""company_name"": """",
            ""dealer_entity_id"": ""36354721-b10e-4225-b9ae-899a0c98a7f2"",
            ""dealer_category_id"": ""2400fda1-a3ec-4e57-a531-afc2a2e8e317"",
            ""code"": ""667733344"",
            ""status"": ""active"",
            ""created_by"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
            ""created_at"": 1705403038,
            ""updated_at"": 1708338576,
            ""deleted_at"": 0,
            ""dealer_entity"": {
                ""dealer_entity_id"": ""36354721-b10e-4225-b9ae-899a0c98a7f2"",
                ""name"": ""Badan Hukum (PT/Koperasi/Yayasan)"",
                ""created_at"": 1694696738,
                ""updated_at"": 1694696738,
                ""deleted_at"": 0
            },
            ""dealer_category"": {
                ""dealer_category_id"": ""2400fda1-a3ec-4e57-a531-afc2a2e8e317"",
                ""name"": ""Authorized Dealer"",
                ""updated_at"": 1694696553,
                ""created_at"": 1694696553,
                ""deleted_at"": 0
            },
            ""dealer_address"": {
                ""dealer_address_id"": ""f5758a9e-5cbd-49cc-bcbd-ccec1a5150e7"",
                ""dealer_id"": ""475d3274-6a26-40b3-8983-3be0dd681922"",
                ""area_id"": ""f5dc3e2e-dea6-49e4-ba5a-1e1d61d655c2"",
                ""branch_id"": ""fc49005b-305a-4c2f-90fd-4f8c78de964f"",
                ""city_id"": ""566d4627-732c-446e-8606-b9db7b45aa67"",
                ""address"": ""6 Banten Kecamatan Ciputat Serua Indonesia, 15414"",
                ""latitude"": -6.309489,
                ""longitude"": 106.7052382,
                ""geotag_media_id"": ""2967f144-a1c3-4159-9a4d-def98188f854"",
                ""created_at"": 1705403038,
                ""updated_at"": 1705403038,
                ""deleted_at"": 0,
                ""dealer"": null,
                ""area"": null,
                ""geotag_media"": null,
                ""branch"": null,
                ""city"": null
            },
            ""dealer_grades"": [
                {
                    ""dealer_grade_id"": ""7b2d61cc-485f-40c9-ab64-155f98c7484f"",
                    ""dealer_id"": ""475d3274-6a26-40b3-8983-3be0dd681922"",
                    ""grade_id"": ""87a26199-12ae-4d22-837f-54d1396fa02b"",
                    ""vehicle_type_id"": ""669f7b6e-e80c-4290-8e07-7357564a0408"",
                    ""periode"": """",
                    ""created_at"": 1705403038,
                    ""updated_at"": 1705403038,
                    ""deleted_at"": 0,
                    ""dealer"": null,
                    ""grade"": {
                        ""grade_id"": ""87a26199-12ae-4d22-837f-54d1396fa02b"",
                        ""name"": ""Undefined"",
                        ""hex_color"": ""#4399D1"",
                        ""created_at"": 1706887762,
                        ""updated_at"": 1706887762,
                        ""deleted_at"": 0
                    },
                    ""vehicle_type"": {
                        ""vehicle_type_id"": ""669f7b6e-e80c-4290-8e07-7357564a0408"",
                        ""name"": ""Motor Baru"",
                        ""vehicle_group_id"": ""112202f2-5512-4468-b40e-e811e6d0f7be"",
                        ""code"": ""001"",
                        ""code_mapping"": ""NM"",
                        ""created_at"": 0,
                        ""updated_at"": 0,
                        ""deleted_at"": 0,
                        ""vehicle_group"": null
                    }
                }
            ],
            ""dealer_proofs"": [
                {
                    ""dealer_proof_id"": ""9a9d380e-eefd-4cb9-bba7-e08f424f1359"",
                    ""dealer_id"": ""475d3274-6a26-40b3-8983-3be0dd681922"",
                    ""dealer_doc_id"": ""e5c1a288-3192-45fe-9dbc-c8476b557780"",
                    ""media_id"": ""c60bd5ef-5935-4352-a08c-b28064840fa1"",
                    ""approved_at"": 1707192898,
                    ""rejected_at"": 0,
                    ""reason"": """",
                    ""replaced_at"": 0,
                    ""follow_up_by"": ""6fc8e022-bbd0-4656-9a01-9730cf41c08b"",
                    ""created_at"": 1705403038,
                    ""updated_at"": 1707192898,
                    ""deleted_at"": 0,
                    ""dealer"": null,
                    ""dealer_doc"": {
                        ""dealer_doc_id"": ""e5c1a288-3192-45fe-9dbc-c8476b557780"",
                        ""name"": ""SIUP"",
                        ""position"": 4,
                        ""code"": ""SIUP"",
                        ""is_show"": true,
                        ""created_at"": 1694696222,
                        ""updated_at"": 1694696222,
                        ""deleted_at"": 0
                    },
                    ""media"": {
                        ""media_id"": ""c60bd5ef-5935-4352-a08c-b28064840fa1"",
                        ""path"": ""dealer/document/1705403008.pdf"",
                        ""size"": 119055,
                        ""mimetype"": ""application/pdf"",
                        ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
                        ""name"": ""1705403008.pdf"",
                        ""purpose"": ""dealer-document"",
                        ""created_at"": 1705403008,
                        ""deleted_at"": 0,
                        ""media_url"": ""https://muf-superapps.imgix.net/dealer/document/1705403008.pdf?w=500"",
                        ""user"": null
                    },
                    ""follow_up_user"": null
                }
            ],
            ""dealer_info"": {
                ""dealer_id"": ""475d3274-6a26-40b3-8983-3be0dd681922"",
                ""name_pic"": ""yuuu"",
                ""phone_number"": ""0897690770"",
                ""email"": ""yey@mail.com"",
                ""ktp_owner"": ""Direktur/Owner"",
                ""scan_ktp_id"": ""2c08efe0-5004-4e35-8f78-929d425ec2be"",
                ""created_at"": 1705403038,
                ""updated_at"": 1705403038,
                ""deleted_at"": 0,
                ""dealer"": null,
                ""scan_ktp"": null
            },
            ""created_by_user"": null,
            ""history_status"": null
        },
        ""approved_by_user"": null,
        ""updated_by_user"": null,
        ""assignee"": {
            ""user_id"": ""6fc8e022-bbd0-4656-9a01-9730cf41c08b"",
            ""name"": ""Admin Elemes"",
            ""email"": ""admin@admin.com"",
            ""phone_number"": ""6288811112222"",
            ""last_login_at"": 0,
            ""last_seen_at"": 0,
            ""verified_at"": 0,
            ""email_verified_at"": 0,
            ""email_verif_exp_at"": 0,
            ""phone_verified_at"": 0,
            ""deactivated_at"": 0,
            ""reactivation_req_at"": 0,
            ""register_source"": """",
            ""created_at"": 1694626579,
            ""updated_at"": 1709881565,
            ""deleted_at"": 0,
            ""user_info"": {
                ""user_id"": ""6fc8e022-bbd0-4656-9a01-9730cf41c08b"",
                ""alt_email"": """",
                ""phone_number"": ""6288811112222"",
                ""alt_phone_number"": """",
                ""place_of_birth"": """",
                ""date_of_birth"": """",
                ""media_id"": ""8a1d4f57-a016-43ee-958c-b82fc1165890"",
                ""ktp_verified_at"": 0,
                ""ktp_verification_status"": ""none"",
                ""total_point"": 0,
                ""total_coupon"": 0,
                ""created_at"": 1705032266,
                ""updated_at"": 1709881565,
                ""deleted_at"": 0,
                ""scan_ktp"": null,
                ""spouse_scan_ktp"": null,
                ""ktp_submitted"": false,
                ""ktp_submission_activity_id"": """",
                ""media"": {
                    ""media_id"": ""8a1d4f57-a016-43ee-958c-b82fc1165890"",
                    ""path"": ""community/post/image/1709862674.jpg"",
                    ""size"": 197601,
                    ""mimetype"": ""image/jpeg"",
                    ""user_id"": ""6fc8e022-bbd0-4656-9a01-9730cf41c08b"",
                    ""name"": ""1709862674.jpg"",
                    ""purpose"": ""image"",
                    ""created_at"": 1709862674,
                    ""deleted_at"": 0,
                    ""media_url"": ""https://muf-superapps.imgix.net/community/post/image/1709862674.jpg?w=500"",
                    ""user"": null
                }
            },
            ""user_roles"": null,
            ""user_dealer"": null,
            ""history_status"": null,
            ""has_pin"": false,
            ""dealer"": null
        },
        ""vehicle_images"": [
            {
                ""vehicle_image_id"": ""5e4e13bd-0374-45d9-a374-f0ef7c64b7ec"",
                ""image_id"": ""139bd21e-30ab-4eeb-868e-1aa38eb8584a"",
                ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                ""vit_id"": ""4f0daecb-d4ce-4593-bff3-cd79f8d8cd1b"",
                ""created_at"": 1714364288,
                ""updated_at"": 1715933762,
                ""deleted_at"": 0,
                ""vehicle_image_type"": {
                    ""vit_id"": ""4f0daecb-d4ce-4593-bff3-cd79f8d8cd1b"",
                    ""name"": ""Tampak Depan"",
                    ""position"": 1,
                    ""vehicle_type_id"": null,
                    ""correct_car_image_id"": ""9ce69e6f-2865-485e-b8b4-dac8b6173529"",
                    ""wrong_car_image_id"": ""80eed9d9-7f3f-496e-af92-05d7e8dfa538"",
                    ""correct_mcy_image_id"": ""7bf7b7d7-e1d7-4520-a318-685d6625dbdd"",
                    ""wrong_mcy_image_id"": ""93a7f050-1634-43b7-bfa5-25f5f6777f7e"",
                    ""created_at"": 1702732871,
                    ""updated_at"": 1702732871,
                    ""deleted_at"": 0,
                    ""vehicle_type"": null,
                    ""correct_car_image"": null,
                    ""wrong_car_image"": null,
                    ""correct_mcy_image"": null,
                    ""wrong_mcy_image"": null
                },
                ""image"": {
                    ""media_id"": ""139bd21e-30ab-4eeb-868e-1aa38eb8584a"",
                    ""path"": ""vehicle/1715933759.jpg"",
                    ""size"": 145194,
                    ""mimetype"": ""image/jpeg"",
                    ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
                    ""name"": ""1715933759.jpg"",
                    ""purpose"": ""vehicle"",
                    ""created_at"": 1715933759,
                    ""deleted_at"": 0,
                    ""media_url"": ""https://muf-superapps.imgix.net/vehicle/1715933759.jpg?w=500"",
                    ""user"": null
                }
            },
            {
                ""vehicle_image_id"": ""6eea94c6-e115-4515-bea1-94399c572928"",
                ""image_id"": ""3d1cb2c3-235f-497a-9787-03542bce494a"",
                ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                ""vit_id"": ""94d995ae-989d-4384-bfe6-4c5c4e927bdc"",
                ""created_at"": 1714364288,
                ""updated_at"": 1714364288,
                ""deleted_at"": 0,
                ""vehicle_image_type"": {
                    ""vit_id"": ""94d995ae-989d-4384-bfe6-4c5c4e927bdc"",
                    ""name"": ""Tampak Samping Kanan"",
                    ""position"": 2,
                    ""vehicle_type_id"": null,
                    ""correct_car_image_id"": ""3419d840-21f0-4cfe-878e-61cd3deed67f"",
                    ""wrong_car_image_id"": ""7fac074a-8c52-4b48-8fc0-ecbd9e604b1d"",
                    ""correct_mcy_image_id"": ""41ed93fe-9614-412a-aaa2-d75f3507ebae"",
                    ""wrong_mcy_image_id"": ""aea6b171-298c-466f-9d6f-8e8b9e05dbc6"",
                    ""created_at"": 1702732871,
                    ""updated_at"": 1702732871,
                    ""deleted_at"": 0,
                    ""vehicle_type"": null,
                    ""correct_car_image"": null,
                    ""wrong_car_image"": null,
                    ""correct_mcy_image"": null,
                    ""wrong_mcy_image"": null
                },
                ""image"": {
                    ""media_id"": ""3d1cb2c3-235f-497a-9787-03542bce494a"",
                    ""path"": ""vehicle/1714364210.png"",
                    ""size"": 689178,
                    ""mimetype"": ""image/png"",
                    ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
                    ""name"": ""1714364210.png"",
                    ""purpose"": ""vehicle"",
                    ""created_at"": 1714364210,
                    ""deleted_at"": 0,
                    ""media_url"": ""https://muf-superapps.imgix.net/vehicle/1714364210.png?w=500"",
                    ""user"": null
                }
            },
            {
                ""vehicle_image_id"": ""bae1c183-e1f9-4305-b02a-f76197da2b0f"",
                ""image_id"": ""92dc89b6-9172-4c0c-acaf-87084f698d9a"",
                ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                ""vit_id"": ""8335ed3b-9380-48e1-85c1-42ffa1e2dea6"",
                ""created_at"": 1714364288,
                ""updated_at"": 1714364288,
                ""deleted_at"": 0,
                ""vehicle_image_type"": {
                    ""vit_id"": ""8335ed3b-9380-48e1-85c1-42ffa1e2dea6"",
                    ""name"": ""Tampak Samping Kiri"",
                    ""position"": 3,
                    ""vehicle_type_id"": null,
                    ""correct_car_image_id"": ""aa2ef5f0-0dcf-4584-aba6-0812e588e334"",
                    ""wrong_car_image_id"": ""0d1610d7-0491-4cb3-87c1-7bfe69c3c421"",
                    ""correct_mcy_image_id"": ""38a371cb-95c0-453e-9fb6-fb5f1289170c"",
                    ""wrong_mcy_image_id"": ""b2bffb2e-4235-41fd-b4c9-d041e931c0a0"",
                    ""created_at"": 1702732871,
                    ""updated_at"": 1702732871,
                    ""deleted_at"": 0,
                    ""vehicle_type"": null,
                    ""correct_car_image"": null,
                    ""wrong_car_image"": null,
                    ""correct_mcy_image"": null,
                    ""wrong_mcy_image"": null
                },
                ""image"": {
                    ""media_id"": ""92dc89b6-9172-4c0c-acaf-87084f698d9a"",
                    ""path"": ""vehicle/1714364227.png"",
                    ""size"": 689178,
                    ""mimetype"": ""image/png"",
                    ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
                    ""name"": ""1714364227.png"",
                    ""purpose"": ""vehicle"",
                    ""created_at"": 1714364227,
                    ""deleted_at"": 0,
                    ""media_url"": ""https://muf-superapps.imgix.net/vehicle/1714364227.png?w=500"",
                    ""user"": null
                }
            },
            {
                ""vehicle_image_id"": ""3d80f3b0-6cbf-4f8b-828b-c59ebd165077"",
                ""image_id"": ""fa86ca46-5f83-4183-b4bf-da9b7c4b8b7a"",
                ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                ""vit_id"": ""b8aeade6-4de9-4b46-be02-0a4d1994602c"",
                ""created_at"": 1714364288,
                ""updated_at"": 1714364288,
                ""deleted_at"": 0,
                ""vehicle_image_type"": {
                    ""vit_id"": ""b8aeade6-4de9-4b46-be02-0a4d1994602c"",
                    ""name"": ""Tampak Belakang"",
                    ""position"": 4,
                    ""vehicle_type_id"": null,
                    ""correct_car_image_id"": ""3e0810af-11f1-415c-9b35-92a74acb7afe"",
                    ""wrong_car_image_id"": ""7400d055-ff0f-488e-a549-17158a167abe"",
                    ""correct_mcy_image_id"": ""5bef6f5d-0d36-4a0f-af17-e4e5d7775af7"",
                    ""wrong_mcy_image_id"": ""e78903fd-7cde-45c7-be3e-ad369f6e33db"",
                    ""created_at"": 1702732871,
                    ""updated_at"": 1702732871,
                    ""deleted_at"": 0,
                    ""vehicle_type"": null,
                    ""correct_car_image"": null,
                    ""wrong_car_image"": null,
                    ""correct_mcy_image"": null,
                    ""wrong_mcy_image"": null
                },
                ""image"": {
                    ""media_id"": ""fa86ca46-5f83-4183-b4bf-da9b7c4b8b7a"",
                    ""path"": ""vehicle/1714364239.png"",
                    ""size"": 689178,
                    ""mimetype"": ""image/png"",
                    ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
                    ""name"": ""1714364239.png"",
                    ""purpose"": ""vehicle"",
                    ""created_at"": 1714364239,
                    ""deleted_at"": 0,
                    ""media_url"": ""https://muf-superapps.imgix.net/vehicle/1714364239.png?w=500"",
                    ""user"": null
                }
            },
            {
                ""vehicle_image_id"": ""a12fdd5b-324c-4c03-80b6-5269d9eddc3a"",
                ""image_id"": ""fef108de-e6ab-4a7c-b9db-376674b28c15"",
                ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                ""vit_id"": ""00746412-72cc-46fd-b6b7-64f16e0276f7"",
                ""created_at"": 1714364288,
                ""updated_at"": 1714364288,
                ""deleted_at"": 0,
                ""vehicle_image_type"": {
                    ""vit_id"": ""00746412-72cc-46fd-b6b7-64f16e0276f7"",
                    ""name"": ""Spidometer Kendaraan"",
                    ""position"": 5,
                    ""vehicle_type_id"": null,
                    ""correct_car_image_id"": ""00197df4-5101-43c4-839a-0224f6460461"",
                    ""wrong_car_image_id"": ""7885432a-19bf-4d9d-95c9-8d1f6827d53b"",
                    ""correct_mcy_image_id"": ""aee37887-2b12-4339-8ad2-05c9c0fcd9fa"",
                    ""wrong_mcy_image_id"": ""8779ab94-c9e2-4a13-8db6-5ec6b4513958"",
                    ""created_at"": 1702732871,
                    ""updated_at"": 1702732871,
                    ""deleted_at"": 0,
                    ""vehicle_type"": null,
                    ""correct_car_image"": null,
                    ""wrong_car_image"": null,
                    ""correct_mcy_image"": null,
                    ""wrong_mcy_image"": null
                },
                ""image"": {
                    ""media_id"": ""fef108de-e6ab-4a7c-b9db-376674b28c15"",
                    ""path"": ""vehicle/1714364254.png"",
                    ""size"": 689178,
                    ""mimetype"": ""image/png"",
                    ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
                    ""name"": ""1714364254.png"",
                    ""purpose"": ""vehicle"",
                    ""created_at"": 1714364254,
                    ""deleted_at"": 0,
                    ""media_url"": ""https://muf-superapps.imgix.net/vehicle/1714364254.png?w=500"",
                    ""user"": null
                }
            }
        ],
        ""history_status"": null,
        ""user_dealer"": null,
        ""wishlisted"": false,
        ""firestore_room_id"": """",
        ""submission_data"": {
            ""vehicle_information"": {
                ""city"": {
                    ""uv_submission_id"": ""94767877-1cd7-4021-9ba5-8cb0ecc170d2"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_information"",
                    ""label"": ""Lokasi Kendaraan"",
                    ""field"": ""city"",
                    ""old_value"": null,
                    ""value"": {
                        ""city_id"": ""5a78bb52-7868-4ebb-ad42-5cd18f15e103"",
                        ""created_at"": 1702442413,
                        ""deleted_at"": 0,
                        ""name"": ""Aceh Barat Daya"",
                        ""position"": 100,
                        ""province"": {
                            ""created_at"": 1702435790,
                            ""deleted_at"": 0,
                            ""name"": ""Nanggroe Aceh Darussalam (NAD)"",
                            ""province_id"": ""7bfdb9cf-7340-415b-b952-11edcd9bf2af"",
                            ""updated_at"": 1702435790
                        },
                        ""province_id"": ""7bfdb9cf-7340-415b-b952-11edcd9bf2af"",
                        ""updated_at"": 1702442413
                    },
                    ""comment"": """",
                    ""approved_at"": 1715744726,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 1,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                },
                ""is_plate_number_even"": {
                    ""uv_submission_id"": ""0b5a238c-0d4f-4e4f-b7d9-a62f5d3a28d5"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_information"",
                    ""label"": ""Plat Kendaraan"",
                    ""field"": ""is_plate_number_even"",
                    ""old_value"": null,
                    ""value"": false,
                    ""comment"": """",
                    ""approved_at"": 1715744726,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 7,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                },
                ""license_plate"": {
                    ""uv_submission_id"": ""4a532e47-0866-4b0d-8b0e-9dbb699df42b"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_information"",
                    ""label"": ""Plat Kendaraan"",
                    ""field"": ""license_plate"",
                    ""old_value"": null,
                    ""value"": ""AA"",
                    ""comment"": """",
                    ""approved_at"": 1715744726,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 6,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                },
                ""odometer"": {
                    ""uv_submission_id"": ""12f3fc01-439d-4b93-a7ce-4e52af126def"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_information"",
                    ""label"": ""Kilometer"",
                    ""field"": ""odometer"",
                    ""old_value"": null,
                    ""value"": 2400,
                    ""comment"": """",
                    ""approved_at"": 1715744726,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 8,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                },
                ""vehicle_brand"": {
                    ""uv_submission_id"": ""402cf33a-a8d5-4355-a32d-f2bb26f08206"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_information"",
                    ""label"": ""Merk Kendaraan"",
                    ""field"": ""vehicle_brand"",
                    ""old_value"": null,
                    ""value"": {
                        ""code"": ""003"",
                        ""created_at"": 1691577703,
                        ""deleted_at"": 0,
                        ""media"": null,
                        ""media_id"": ""82bcc828-8ba5-4d20-be5d-805a78bc38d7"",
                        ""name"": ""ASTON MARTIN"",
                        ""updated_at"": 1691577703,
                        ""vehicle_brand_id"": ""56c7ad8e-e6cd-4358-ab3b-e2fb443da2e3"",
                        ""vehicle_group"": null,
                        ""vehicle_group_id"": ""844e43ec-7493-41a7-b2ff-b9f1c3c138d4""
                    },
                    ""comment"": """",
                    ""approved_at"": 1715744726,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 2,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                },
                ""vehicle_color"": {
                    ""uv_submission_id"": ""1d22149b-fe63-48aa-9193-820d9b0b3f7c"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_information"",
                    ""label"": ""Warna Kendaraan"",
                    ""field"": ""vehicle_color"",
                    ""old_value"": null,
                    ""value"": {
                        ""created_at"": 1702731982,
                        ""deleted_at"": 0,
                        ""hex"": ""#D0D5DD"",
                        ""name"": ""Silver"",
                        ""updated_at"": 1702731982,
                        ""vehicle_color_id"": ""75e87802-5e7d-46f9-a6a9-3cf8271ef403""
                    },
                    ""comment"": """",
                    ""approved_at"": 1715744726,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 5,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                },
                ""vehicle_variant"": {
                    ""uv_submission_id"": ""1ed000cb-ec47-4a10-af7c-39f5d21fb111"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_information"",
                    ""label"": ""Model Kendaraan"",
                    ""field"": ""vehicle_variant"",
                    ""old_value"": null,
                    ""value"": {
                        ""vehicle_variant_id"": ""f7f62586-ae2d-4ce5-b96c-c23a9da00009"",
                        ""name"": ""AMR A Fierce New Breed"",
                        ""vehicle_series_id"": ""62264377-a71c-4b46-8119-8789cb22656c"",
                        ""vehicle_brand_id"": ""56c7ad8e-e6cd-4358-ab3b-e2fb443da2e3"",
                        ""vehicle_category_id"": ""f991e8e2-2b0d-40f7-902f-181e24974a44"",
                        ""vehicle_group_id"": ""844e43ec-7493-41a7-b2ff-b9f1c3c138d4"",
                        ""vehicle_fuel_id"": ""7f5ceae2-24ff-4add-a3ca-97352cb1443f"",
                        ""vehicle_transmission_id"": ""5a395636-3a47-432f-997f-cc215f80fe1e"",
                        ""vehicle_type_id"": ""b32b65cb-3a97-4bfb-bf24-07f7cd07457d"",
                        ""code"": """",
                        ""moas_id"": null,
                        ""is_recommended"": false,
                        ""is_popular"": false,
                        ""is_trending"": false,
                        ""created_at"": 1701253610,
                        ""updated_at"": 1701253610,
                        ""deleted_at"": 0,
                        ""all_specs"": null,
                        ""vehicle_series"": null,
                        ""vehicle_brand"": null,
                        ""vehicle_category"": null,
                        ""vehicle_group"": null,
                        ""vehicle_fuel"": null,
                        ""vehicle_transmission"": null,
                        ""vehicle_specs"": null,
                        ""vehicle_otr"": null,
                        ""vehicle_type"": null
                    },
                    ""comment"": """",
                    ""approved_at"": 1715744726,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 3,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                },
                ""year"": {
                    ""uv_submission_id"": ""44e7936c-a80b-4a3b-b652-2286537ee937"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_information"",
                    ""label"": ""Tahun"",
                    ""field"": ""year"",
                    ""old_value"": 2022,
                    ""value"": 2020,
                    ""comment"": ""masih salah uyyy"",
                    ""approved_at"": 0,
                    ""rejected_at"": 1715936329,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 4,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                }
            },
            ""vehicle_condition"": {
                ""ac_condition"": {
                    ""uv_submission_id"": ""91ec51fd-94dd-4ebc-b339-472e001cc079"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_condition"",
                    ""label"": ""Kondisi A/C"",
                    ""field"": ""ac_condition"",
                    ""old_value"": null,
                    ""value"": ""normal"",
                    ""comment"": """",
                    ""approved_at"": 1715744748,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 10,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                },
                ""body_condition"": {
                    ""uv_submission_id"": ""f7476621-a57e-4e11-a65e-e873efa3a54d"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_condition"",
                    ""label"": ""Kondisi Body Kendaraan"",
                    ""field"": ""body_condition"",
                    ""old_value"": null,
                    ""value"": ""Baret ringan"",
                    ""comment"": """",
                    ""approved_at"": 1715744748,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 12,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                },
                ""description"": {
                    ""uv_submission_id"": ""191087cf-9df5-4daa-afc5-37a7c1841431"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_condition"",
                    ""label"": ""Deskripsi"",
                    ""field"": ""description"",
                    ""old_value"": null,
                    ""value"": ""Ini mau disii dengan apa"",
                    ""comment"": """",
                    ""approved_at"": 1715744748,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 15,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                },
                ""flood_damage"": {
                    ""uv_submission_id"": ""1ecea73f-4936-43d8-bcb0-be942369f14c"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_condition"",
                    ""label"": ""Riwayat Banjir"",
                    ""field"": ""flood_damage"",
                    ""old_value"": null,
                    ""value"": false,
                    ""comment"": """",
                    ""approved_at"": 1715744748,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 13,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                },
                ""ownership_status"": {
                    ""uv_submission_id"": ""7fd2a550-98a4-4484-a838-4c9fc8cdb714"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_condition"",
                    ""label"": ""Status Kepemilikan"",
                    ""field"": ""ownership_status"",
                    ""old_value"": null,
                    ""value"": ""individual"",
                    ""comment"": """",
                    ""approved_at"": 1715744748,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 9,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                },
                ""registration_validity_period"": {
                    ""uv_submission_id"": ""b733372f-3fb3-44ed-ad1a-1a370bcf698b"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_condition"",
                    ""label"": ""Masa Berlaku STNK"",
                    ""field"": ""registration_validity_period"",
                    ""old_value"": null,
                    ""value"": ""04-2023"",
                    ""comment"": """",
                    ""approved_at"": 1715744748,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 14,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                },
                ""tyre_condition"": {
                    ""uv_submission_id"": ""9eeb4985-6958-4f29-8a57-81ebecb59d04"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_condition"",
                    ""label"": ""Kondisi Ban"",
                    ""field"": ""tyre_condition"",
                    ""old_value"": null,
                    ""value"": ""80 - 89%"",
                    ""comment"": """",
                    ""approved_at"": 1715744748,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 11,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                }
            },
            ""vehicle_images"": [
                {
                    ""uv_submission_id"": ""c5edbdd5-bb52-4f2e-8b4a-5ef78b1cec9b"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_images"",
                    ""label"": ""Tampak Depan"",
                    ""field"": ""Tampak Depan"",
                    ""old_value"": {
                        ""vehicle_image_id"": ""5e4e13bd-0374-45d9-a374-f0ef7c64b7ec"",
                        ""image_id"": ""28bc840c-ea99-4cf7-ad22-55a1d1c65bc3"",
                        ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                        ""vit_id"": ""4f0daecb-d4ce-4593-bff3-cd79f8d8cd1b"",
                        ""created_at"": 1714364288,
                        ""updated_at"": 1714364288,
                        ""deleted_at"": 0,
                        ""vehicle_image_type"": null,
                        ""image"": {
                            ""media_id"": ""28bc840c-ea99-4cf7-ad22-55a1d1c65bc3"",
                            ""path"": ""vehicle/1714364198.png"",
                            ""size"": 689178,
                            ""mimetype"": ""image/png"",
                            ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
                            ""name"": ""1714364198.png"",
                            ""purpose"": ""vehicle"",
                            ""created_at"": 1714364198,
                            ""deleted_at"": 0,
                            ""media_url"": ""https://muf-superapps.imgix.net/vehicle/1714364198.png?w=500"",
                            ""user"": null
                        }
                    },
                    ""value"": {
                        ""vehicle_image_id"": ""5e4e13bd-0374-45d9-a374-f0ef7c64b7ec"",
                        ""image_id"": ""139bd21e-30ab-4eeb-868e-1aa38eb8584a"",
                        ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                        ""vit_id"": ""4f0daecb-d4ce-4593-bff3-cd79f8d8cd1b"",
                        ""created_at"": 1714364288,
                        ""updated_at"": 1715933762,
                        ""deleted_at"": 0,
                        ""vehicle_image_type"": null,
                        ""image"": {
                            ""media_id"": ""139bd21e-30ab-4eeb-868e-1aa38eb8584a"",
                            ""path"": ""vehicle/1715933759.jpg"",
                            ""size"": 145194,
                            ""mimetype"": ""image/jpeg"",
                            ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
                            ""name"": ""1715933759.jpg"",
                            ""purpose"": ""vehicle"",
                            ""created_at"": 1715933759,
                            ""deleted_at"": 0,
                            ""media_url"": ""https://muf-superapps.imgix.net/vehicle/1715933759.jpg?w=500"",
                            ""user"": null
                        }
                    },
                    ""comment"": """",
                    ""approved_at"": 1715934033,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 16,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                },
                {
                    ""uv_submission_id"": ""36f5ae0c-c173-4193-bd5f-b2c2555e1c6f"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_images"",
                    ""label"": ""Tampak Samping Kanan"",
                    ""field"": ""Tampak Samping Kanan"",
                    ""old_value"": null,
                    ""value"": {
                        ""vehicle_image_id"": ""6eea94c6-e115-4515-bea1-94399c572928"",
                        ""image_id"": ""3d1cb2c3-235f-497a-9787-03542bce494a"",
                        ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                        ""vit_id"": ""94d995ae-989d-4384-bfe6-4c5c4e927bdc"",
                        ""created_at"": 1714364288,
                        ""updated_at"": 1714364288,
                        ""deleted_at"": 0,
                        ""vehicle_image_type"": null,
                        ""image"": {
                            ""media_id"": ""3d1cb2c3-235f-497a-9787-03542bce494a"",
                            ""path"": ""vehicle/1714364210.png"",
                            ""size"": 689178,
                            ""mimetype"": ""image/png"",
                            ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
                            ""name"": ""1714364210.png"",
                            ""purpose"": ""vehicle"",
                            ""created_at"": 1714364210,
                            ""deleted_at"": 0,
                            ""media_url"": ""https://muf-superapps.imgix.net/vehicle/1714364210.png?w=500"",
                            ""user"": null
                        }
                    },
                    ""comment"": """",
                    ""approved_at"": 1715934033,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 17,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                },
                {
                    ""uv_submission_id"": ""28cb9e08-6331-45db-9abe-8e346ac8c7ec"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_images"",
                    ""label"": ""Tampak Samping Kiri"",
                    ""field"": ""Tampak Samping Kiri"",
                    ""old_value"": null,
                    ""value"": {
                        ""vehicle_image_id"": ""bae1c183-e1f9-4305-b02a-f76197da2b0f"",
                        ""image_id"": ""92dc89b6-9172-4c0c-acaf-87084f698d9a"",
                        ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                        ""vit_id"": ""8335ed3b-9380-48e1-85c1-42ffa1e2dea6"",
                        ""created_at"": 1714364288,
                        ""updated_at"": 1714364288,
                        ""deleted_at"": 0,
                        ""vehicle_image_type"": null,
                        ""image"": {
                            ""media_id"": ""92dc89b6-9172-4c0c-acaf-87084f698d9a"",
                            ""path"": ""vehicle/1714364227.png"",
                            ""size"": 689178,
                            ""mimetype"": ""image/png"",
                            ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
                            ""name"": ""1714364227.png"",
                            ""purpose"": ""vehicle"",
                            ""created_at"": 1714364227,
                            ""deleted_at"": 0,
                            ""media_url"": ""https://muf-superapps.imgix.net/vehicle/1714364227.png?w=500"",
                            ""user"": null
                        }
                    },
                    ""comment"": """",
                    ""approved_at"": 1715934033,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 18,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                },
                {
                    ""uv_submission_id"": ""f4736252-2c1f-4eda-b6fe-435e223534aa"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_images"",
                    ""label"": ""Tampak Belakang"",
                    ""field"": ""Tampak Belakang"",
                    ""old_value"": null,
                    ""value"": {
                        ""vehicle_image_id"": ""3d80f3b0-6cbf-4f8b-828b-c59ebd165077"",
                        ""image_id"": ""fa86ca46-5f83-4183-b4bf-da9b7c4b8b7a"",
                        ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                        ""vit_id"": ""b8aeade6-4de9-4b46-be02-0a4d1994602c"",
                        ""created_at"": 1714364288,
                        ""updated_at"": 1714364288,
                        ""deleted_at"": 0,
                        ""vehicle_image_type"": null,
                        ""image"": {
                            ""media_id"": ""fa86ca46-5f83-4183-b4bf-da9b7c4b8b7a"",
                            ""path"": ""vehicle/1714364239.png"",
                            ""size"": 689178,
                            ""mimetype"": ""image/png"",
                            ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
                            ""name"": ""1714364239.png"",
                            ""purpose"": ""vehicle"",
                            ""created_at"": 1714364239,
                            ""deleted_at"": 0,
                            ""media_url"": ""https://muf-superapps.imgix.net/vehicle/1714364239.png?w=500"",
                            ""user"": null
                        }
                    },
                    ""comment"": """",
                    ""approved_at"": 1715934033,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 19,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                },
                {
                    ""uv_submission_id"": ""f4fd794d-641e-46d2-80ce-1ed9b50d516b"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_images"",
                    ""label"": ""Spidometer Kendaraan"",
                    ""field"": ""Spidometer Kendaraan"",
                    ""old_value"": null,
                    ""value"": {
                        ""vehicle_image_id"": ""a12fdd5b-324c-4c03-80b6-5269d9eddc3a"",
                        ""image_id"": ""fef108de-e6ab-4a7c-b9db-376674b28c15"",
                        ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                        ""vit_id"": ""00746412-72cc-46fd-b6b7-64f16e0276f7"",
                        ""created_at"": 1714364288,
                        ""updated_at"": 1714364288,
                        ""deleted_at"": 0,
                        ""vehicle_image_type"": null,
                        ""image"": {
                            ""media_id"": ""fef108de-e6ab-4a7c-b9db-376674b28c15"",
                            ""path"": ""vehicle/1714364254.png"",
                            ""size"": 689178,
                            ""mimetype"": ""image/png"",
                            ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
                            ""name"": ""1714364254.png"",
                            ""purpose"": ""vehicle"",
                            ""created_at"": 1714364254,
                            ""deleted_at"": 0,
                            ""media_url"": ""https://muf-superapps.imgix.net/vehicle/1714364254.png?w=500"",
                            ""user"": null
                        }
                    },
                    ""comment"": """",
                    ""approved_at"": 1715934033,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 20,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                }
            ],
            ""vehicle_estimation"": {
                ""price"": {
                    ""uv_submission_id"": ""6345c73d-4d31-484b-9c44-e0815333df52"",
                    ""user_vehicle_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                    ""type"": ""vehicle_estimation"",
                    ""label"": ""Harga Kendaraan"",
                    ""field"": ""price"",
                    ""old_value"": null,
                    ""value"": 240000000,
                    ""comment"": """",
                    ""approved_at"": 1715744961,
                    ""rejected_at"": 0,
                    ""revision_at"": 0,
                    ""returned_at"": 0,
                    ""corrected_by"": null,
                    ""position"": 21,
                    ""removed_at"": 0,
                    ""created_at"": 1715700322,
                    ""updated_at"": 1715936340,
                    ""user_vehicle"": null,
                    ""corrected_by_user"": null
                }
            }
        },
        ""activity_id"": """",
        ""activity_history"": [
            {
                ""_id"": ""66471c5412a8b3e81d2c7d15"",
                ""data_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                ""activity_type"": ""user-vehicle"",
                ""status"": ""revision-required"",
                ""metadata"": null,
                ""created_at"": 1715936340,
                ""updated_at"": 1715936340
            },
            {
                ""_id"": ""66471bb412a8b3e81d2c7d14"",
                ""data_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                ""activity_type"": ""user-vehicle"",
                ""status"": ""revision-returned"",
                ""metadata"": null,
                ""created_at"": 1715936180,
                ""updated_at"": 1715936180
            },
            {
                ""_id"": ""664715db12a8b3e81d2c7d13"",
                ""data_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                ""activity_type"": ""user-vehicle"",
                ""status"": ""revision-required"",
                ""metadata"": null,
                ""created_at"": 1715934683,
                ""updated_at"": 1715934683
            },
            {
                ""_id"": ""664713d812a8b3e81d2c7d12"",
                ""data_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                ""activity_type"": ""user-vehicle"",
                ""status"": ""revision-returned"",
                ""metadata"": null,
                ""created_at"": 1715934168,
                ""updated_at"": 1715934168
            },
            {
                ""_id"": ""6647135b12a8b3e81d2c7d11"",
                ""data_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                ""activity_type"": ""user-vehicle"",
                ""status"": ""revision-required"",
                ""metadata"": null,
                ""created_at"": 1715934043,
                ""updated_at"": 1715934043
            },
            {
                ""_id"": ""6647124212a8b3e81d2c7d0f"",
                ""data_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                ""activity_type"": ""user-vehicle"",
                ""status"": ""revision-returned"",
                ""metadata"": null,
                ""created_at"": 1715933762,
                ""updated_at"": 1715933762
            },
            {
                ""_id"": ""664430cfc3100cb9e29f6e26"",
                ""data_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                ""activity_type"": ""user-vehicle"",
                ""status"": ""revision-required"",
                ""metadata"": null,
                ""created_at"": 1715744975,
                ""updated_at"": 1715744975
            },
            {
                ""_id"": ""66438262c3100cb9e29f6e21"",
                ""data_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                ""activity_type"": ""user-vehicle"",
                ""status"": ""on-process"",
                ""metadata"": null,
                ""created_at"": 1715700322,
                ""updated_at"": 1715700322
            },
            {
                ""_id"": ""6655b418c6a527dfd9c5529b"",
                ""data_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                ""activity_type"": ""user-vehicle"",
                ""status"": ""waiting-verification"",
                ""metadata"": null,
                ""created_at"": 1715700322,
                ""updated_at"": 1715700322
            },
            {
                ""_id"": ""6655b418c6a527dfd9c5529c"",
                ""data_id"": ""cb36d7f8-cc44-43cd-a891-7b721c7d95d4"",
                ""activity_type"": ""user-vehicle"",
                ""status"": ""new-submission"",
                ""metadata"": null,
                ""created_at"": 1715700322,
                ""updated_at"": 1715700322
            }
        ]
    },
    ""message"": ""Success"",
    ""errors"": null
}"
raATZrz1,OKOKBank,Lindholmbrahe,Lua,Tuesday 28th of May 2024 05:25:29 AM CDT,"-- 
-- Society
--
local usingNewQBBanking = GetResourceState(""qb-banking"") == ""started"" and tonumber(string.sub(GetResourceMetadata(""qb-banking"", ""version""), 1, 3)) >= 2
local usingokokBanking = GetResourceState(""okokBanking"") == ""started"" -- added support for okokBanking

function Framework.Server.RemoveFromSocietyFund(societyName, type, amount)
  if Config.Framework == ""QBCore"" then
    if usingokokBanking then  -- added support for okokBanking
      exports['okokBanking']:RemoveMoney(societyName, amount)  -- added support for okokBanking
    elseif usingNewQBBanking then -- changed
      exports['qb-banking']:RemoveMoney(societyName, amount)
    else
      if type == ""job"" then
        exports['qb-management']:RemoveMoney(societyName, amount)
      elseif type == ""gang"" then
        exports['qb-management']:RemoveGangMoney(societyName, amount)
      end
    end
  elseif Config.Framework == ""ESX"" then
    if type == ""cash"" then type = ""money"" end

    TriggerEvent('esx_society:getSociety', societyName, function(society)
      TriggerEvent('esx_addonaccount:getSharedAccount', society.account, function(account)
        account.removeMoney(amount)
      end)
    end)
  end
end

Framework.Server.CreateCallback(""jg-dealerships:server:get-society-balance"", function(src, cb, society, type)
  if Config.Framework == ""QBCore"" then
    if usingokokBanking then -- added support for okokBanking
      cb(exports['okokBanking']:GetAccount(society)) -- added support for okokBanking
    elseif usingNewQBBanking then -- changed
      cb(exports['qb-banking']:GetAccountBalance(society))
    else
      if type == ""job"" then
        cb(exports['qb-management']:GetAccount(society))
      elseif type == ""gang"" then
        cb(exports['qb-management']:GetGangAccount(society))
      end
    end
  elseif Config.Framework == ""ESX"" then
    if type == ""cash"" then type = ""money"" end

    TriggerEvent('esx_society:getSociety', society, function(data)
      if not data then return cb(0) end
      TriggerEvent('esx_addonaccount:getSharedAccount', data.account, function(account)
        cb(account.money)
      end)
    end)
  end
end)"
CvSQLKNW,swap to max,gitman3,C++,Tuesday 28th of May 2024 05:21:47 AM CDT,"#include <iostream>
#include <vector>
using namespace std;

int main() {
    int n;
    cin >> n;
    vector<int> A(n);

    for (int i = 0; i < n; i++) {
        cin >> A[i];
    }

    bool swapped = 1;

    while (swapped) {
        swapped = 0;
        for (int i = 0; i < n - 1; i++) {
            long long current = A[i] * (i + 1) + A[i + 1] * (i + 2);
            long long updated = A[i + 1] * (i + 1) + A[i] * (i + 2);

            if (current < updated) {
                swap(A[i], A[i + 1]);
                swapped = 1;
            }
        }
    }

    long long sum = 0;
    for (int i = 0; i < n; ++i) {
        sum += A[i] * (i + 1);
    }

    cout << sum << endl;

    return 0;
}
"
LBYpBEkE,WPGB - Variable product - Show Min Price,mrcbt,PHP,Tuesday 28th of May 2024 05:11:38 AM CDT,"<?php 

function register_product_min_price_block( $blocks ) {

    // ""product_min_price_block"" corresponds to the block slug.
    $blocks['product_min_price_block'] = [
        'name'            => 'Product - Min Price',
        'render_callback' => 'render_product_min_price_block',
    ];

    return $blocks;
}
add_filter( 'wp_grid_builder/blocks', 'register_product_min_price_block' );

function render_product_min_price_block() {

    // Object can be a post, term or user.
    $object = wpgb_get_object();

    // If this is not a product post type.
    if (
        ! isset( $object->post_type ) ||
        'product' !== $object->post_type ||
        ! function_exists( 'wc_get_product' )
    ) {
        return;
    }

    $product = wc_get_product( $object->ID );

    if ( empty( $product ) ) {
        return;
    }

    // Check if the product is variable.
    if ( $product->is_type( 'variable' ) ) {
        $min_price = $product->get_variation_price( 'min', true );
        echo sprintf( __( 'A partir de %1$s', 'woocommerce' ), wc_price( $min_price ) ); //change 'A partir de' to something you like. Ex: From or Starting at.
    } else {
        // If not a variable product, display the regular price.
        echo $product->get_price_html();
    }
}"
F9AkkxUJ,Servo Control rev_01,pleasedontcode,Arduino,Tuesday 28th of May 2024 04:57:22 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: Servo Control
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-05-28 09:56:13

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* I want to add a pushputton that controls the servo */
	/* motor */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Servo.h>  //https://github.com/arduino-libraries/Servo

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void);

/***** DEFINITION OF PWM OUTPUT PINS *****/
const uint8_t mypush_Servomotor_PWMSignal_PIN_D9 = 9;  // Changed to pin 9 as per the example
const uint8_t potpin = A0;  // Potentiometer pin
const uint8_t buttonPin = 2;  // Push button pin

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
uint8_t mypush_Servomotor_PWMSignal_PIN_D9_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float mypush_Servomotor_PWMSignal_PIN_D9_phyData = 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
Servo myservo;  // Create servo object to control a servo

void setup(void)
{
  // put your setup code here, to run once:
  myservo.attach(mypush_Servomotor_PWMSignal_PIN_D9);  // Attaches the servo on pin 9 to the servo object
  pinMode(buttonPin, INPUT);  // Set the button pin as an input
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  updateOutputs();  // Refresh output data
}

void updateOutputs()
{
  static bool buttonPressed = false;  // Variable to store the button state

  // Read the button state
  if (digitalRead(buttonPin) == HIGH) {
    buttonPressed = !buttonPressed;  // Toggle the button state
    delay(200);  // Debounce delay
  }

  if (buttonPressed) {
    int val = analogRead(potpin);  // Read the value of the potentiometer
    val = map(val, 0, 1023, 0, 180);  // Scale it to use it with the servo (value between 0 and 180)
    myservo.write(val);  // Set the servo position according to the scaled value
  } else {
    myservo.write(90);  // Set the servo to the neutral position (90 degrees) when the button is not pressed
  }

  delay(15);  // Wait for the servo to reach the position
}

/* END CODE */"
5RW1LpKh,LipSync,MaximilianPs,C#,Tuesday 28th of May 2024 04:56:25 AM CDT,"using System.Collections;
using System.Collections.Generic;
using UnityEditor;
using UnityEngine;
using UnityEngine.UIElements;

namespace BrokenWings
{
    [RequireComponent(typeof(AudioSource))]
    public class LipSync : MonoBehaviour
    {
        private AudioSource audioSource;
        private float[] clipSampleData;
        private const int sampleDataLength = 1024;
        private float clipLoudness = 0.0f;

        [SerializeField] private Transform lipsObject;
        [SerializeField] private AudioClip[] sentences;
        [SerializeField][Range(0.01f, 5.0f)] private float sensitivity = 1.0f;
        private int sentenceTracker = 0;

        [Tooltip(""This is used to activate the speech, once activated the speech will start and the system will deactivate it, so you can activate it again for the next sentence."")]
        [SerializeField] GameObject activator;

        [SerializeField] GameObject brows;
        Animator browsAnim;
        [Tooltip(""Eyes Game Object, to be set by hand, Note that the eyes are scaled on Y axis while the mouth on Z!"")]
        [SerializeField] GameObject eyes;
        [SerializeField] float eyeOpene = 1f;
        [SerializeField] float eyeClose = 0.01f;
        [Tooltip(""Random interval for the next blink in second"")]
        [Range(2f, 20f)]
        [SerializeField] float blinkInterval;
        [SerializeField] private float blinkDuration = 0.1f;
        private float blinkTimer = 0f;
        private bool isBlinking = false;

        public enum EmotionState
        {
            Idle = 0,
            RiseBrow = 1,
            Suprise = 2,
            Fear = 3,
            Anger = 4,
            Happy = 5   // This should Rise the bow and squeeze the eyes at 60%
        }

        public EmotionState currentEmotion = EmotionState.Idle;
        public EmotionState CurrentEmotion
        {
            get { return currentEmotion; }
            set
            {
                currentEmotion = value;
                browsAnim.SetInteger(""EmotionalState"", (int)currentEmotion);
            }
        }

        private bool _play = false;
        public bool Play
        {
            get { return _play; }
            set
            {
                _play = value;
            }
        }

        private enum ScalingAxis
        {
            X,
            Y,
            Z
        }
        [Tooltip(""The axis that need to be scaled"")]
        [SerializeField] private ScalingAxis selectedAxis = ScalingAxis.Z;
        // Sets the value to maximize and minimize the Y scale for the lips
        [SerializeField] private float minScale = 0.13f;
        [SerializeField] private float maxScale = 1f;
        private float maxLoudness = 0f;
        

        private void Start()
        {
            audioSource = GetComponent<AudioSource>();
            clipSampleData = new float[sampleDataLength];
            sentenceTracker = 0;
            audioSource.Stop();

            // Brows
            if (brows == null)
                Debug.LogError(""!!! NO BROWS !!! \n "" + gameObject.name + ""Didn't have any brows assigned!"");

            browsAnim = brows.GetComponent<Animator>();

            // Eyes
            if (eyes == null)
                Debug.LogError(""!!! NO EYES !!! \n "" + gameObject.name + ""Didn't have any eyes assigned!"");

        }

        private void Update()
        {
            if(activator.activeSelf)
            { 
                activator.SetActive(false);
                Play = true;
            }

            if(_play)
            {
                if(sentenceTracker >= sentences.Length) sentenceTracker = 0;
                audioSource.clip = sentences[sentenceTracker];
                audioSource.Play();

                _play = false;
                sentenceTracker++;
            }

            if(audioSource.isPlaying) 
                MoveLips();
            else
            {
                IsBlinking();
            }
        }

        private void MoveLips()
        {
            if (audioSource.isPlaying)
            {
                audioSource.clip.GetData(clipSampleData, audioSource.timeSamples);

                if (audioSource.timeSamples > 0)
                {
                    float sumLoudness = 0f;
                    foreach (var Sample in clipSampleData)
                    {
                        sumLoudness += Mathf.Abs(Sample);
                    }

                    // Get the average loudness
                    clipLoudness = sumLoudness / clipSampleData.Length;

                    // Aggiorna il valore massimo di loudness se necessario
                    if (clipLoudness > maxLoudness)
                    {
                        maxLoudness = clipLoudness;
                    }

                    // Normalize the loudness to the maximum observed value
                    clipLoudness /= maxLoudness;

                    // Map normalized loudness within the Y scale
                    float scaleZValue = Mathf.Lerp(minScale, maxScale, clipLoudness);

                    // Debug.Log(clipLoudness);

                    // Close the mouth when clipLoudness is low.
                    if (clipLoudness <= 0) scaleZValue = minScale;

                    // Map normalized loudness within the selected scaling axis
                    float scaleValue = 0f;

                    // Calculate the scaled sensitivity based on the maximum observed loudness
                    float scaledSensitivity = sensitivity * maxLoudness;

                    switch (selectedAxis)
                    {
                        case ScalingAxis.X:
                            scaleValue = Mathf.Lerp(minScale, maxScale, clipLoudness * scaledSensitivity);
                            lipsObject.localScale = new Vector3(scaleValue, lipsObject.localScale.y, lipsObject.localScale.z);
                            break;
                        case ScalingAxis.Y:
                            scaleValue = Mathf.Lerp(minScale, maxScale, clipLoudness);
                            lipsObject.localScale = new Vector3(lipsObject.localScale.x, scaleValue, lipsObject.localScale.z);
                            break;
                        case ScalingAxis.Z:
                            scaleValue = Mathf.Lerp(minScale, maxScale, clipLoudness);
                            lipsObject.localScale = new Vector3(lipsObject.localScale.x, lipsObject.localScale.y, scaleValue);
                            break;
                    }

                    lipsObject.localScale = new Vector3(lipsObject.localScale.x, lipsObject.localScale.y, scaleZValue);
                }
            }
        }

        public void BlinkEyes(float ec, float eo)
        {
            float randomScale = Random.Range(ec, eo);
            Vector3 newScale = eyes.transform.localScale;
            newScale.y = randomScale;
            eyes.transform.localScale = newScale;
        }

        private void ResetEyeScale()
        {
            Vector3 newScale = eyes.transform.localScale;
            newScale.y = 1f;
            eyes.transform.localScale = newScale;
        }

        private void IsBlinking()
        {
            if (!isBlinking)
            {
                // Generate a random time interval for the next blink
                float randomInterval = Random.Range(1f, blinkInterval);
                blinkTimer += Time.deltaTime;

                if (blinkTimer >= randomInterval)
                {
                    // Start blinking
                    isBlinking = true;
                    blinkTimer = 0f;
                    BlinkEyes(eyeClose, eyeOpene);
                }
            }
            else
            {
                // Continue blinking for the blink duration
                blinkTimer += Time.deltaTime;

                if (blinkTimer >= blinkDuration)
                {
                    // Stop blinking
                    isBlinking = false;
                    blinkTimer = 0f;
                    ResetEyeScale();
                }
            }
        }

        public void SetSentence(int sentence)
        {
            sentenceTracker = sentence;
        }    
    }

}
"
3s6cVcNU,üí∏G2A.com Free Gift Card Guide 2024 MayüöÄ,Alfonso1119,Python,Tuesday 28th of May 2024 04:53:36 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_2068187.pdf

Working as of:

29 May 2024"
DNpc6aAX,"""Relay Control"" rev_01",pleasedontcode,Arduino,Tuesday 28th of May 2024 04:50:16 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Relay Control""
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-28 09:48:47

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Designer home automation system in which the ESP */
	/* 32 is able to control 9 relays with using ESP */
	/* RainMaker application and from also control by */
	/* manual switches. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Relay.h>  //https://github.com/rafaelnsantos/Relay

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void);

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t Relaymodule_RelayModule_Signal_PIN_D4  = 4;
const uint8_t Relaymodule_RelayModule_Signal_PIN_D13 = 13;
const uint8_t Relaymodule_RelayModule_Signal_PIN_D14 = 14;
const uint8_t Relaymodule_RelayModule_Signal_PIN_D15 = 15;
const uint8_t Relaymodule_RelayModule_Signal_PIN_D16 = 16;
const uint8_t Relaymodule_RelayModule_Signal_PIN_D17 = 17;
const uint8_t Relaymodule_RelayModule_Signal_PIN_D18 = 18;
const uint8_t Relaymodule_RelayModule_Signal_PIN_D19 = 19;
const uint8_t Relaymodule_RelayModule_Signal_PIN_D21 = 21;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool Relaymodule_RelayModule_Signal_PIN_D4_rawData  = 0;
bool Relaymodule_RelayModule_Signal_PIN_D13_rawData = 0;
bool Relaymodule_RelayModule_Signal_PIN_D14_rawData = 0;
bool Relaymodule_RelayModule_Signal_PIN_D15_rawData = 0;
bool Relaymodule_RelayModule_Signal_PIN_D16_rawData = 0;
bool Relaymodule_RelayModule_Signal_PIN_D17_rawData = 0;
bool Relaymodule_RelayModule_Signal_PIN_D18_rawData = 0;
bool Relaymodule_RelayModule_Signal_PIN_D19_rawData = 0;
bool Relaymodule_RelayModule_Signal_PIN_D21_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float Relaymodule_RelayModule_Signal_PIN_D4_phyData  = 0.0;
float Relaymodule_RelayModule_Signal_PIN_D13_phyData = 0.0;
float Relaymodule_RelayModule_Signal_PIN_D14_phyData = 0.0;
float Relaymodule_RelayModule_Signal_PIN_D15_phyData = 0.0;
float Relaymodule_RelayModule_Signal_PIN_D16_phyData = 0.0;
float Relaymodule_RelayModule_Signal_PIN_D17_phyData = 0.0;
float Relaymodule_RelayModule_Signal_PIN_D18_phyData = 0.0;
float Relaymodule_RelayModule_Signal_PIN_D19_phyData = 0.0;
float Relaymodule_RelayModule_Signal_PIN_D21_phyData = 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
Relay relayD4(Relaymodule_RelayModule_Signal_PIN_D4, true);   // Initialize relay on pin 4, Normally Open
Relay relayD13(Relaymodule_RelayModule_Signal_PIN_D13, true); // Initialize relay on pin 13, Normally Open
Relay relayD14(Relaymodule_RelayModule_Signal_PIN_D14, true); // Initialize relay on pin 14, Normally Open
Relay relayD15(Relaymodule_RelayModule_Signal_PIN_D15, true); // Initialize relay on pin 15, Normally Open
Relay relayD16(Relaymodule_RelayModule_Signal_PIN_D16, true); // Initialize relay on pin 16, Normally Open
Relay relayD17(Relaymodule_RelayModule_Signal_PIN_D17, true); // Initialize relay on pin 17, Normally Open
Relay relayD18(Relaymodule_RelayModule_Signal_PIN_D18, true); // Initialize relay on pin 18, Normally Open
Relay relayD19(Relaymodule_RelayModule_Signal_PIN_D19, true); // Initialize relay on pin 19, Normally Open
Relay relayD21(Relaymodule_RelayModule_Signal_PIN_D21, true); // Initialize relay on pin 21, Normally Open

void setup(void)
{
  // put your setup code here, to run once:
  
  relayD4.begin();  // Initialize the relay on pin 4
  relayD13.begin(); // Initialize the relay on pin 13
  relayD14.begin(); // Initialize the relay on pin 14
  relayD15.begin(); // Initialize the relay on pin 15
  relayD16.begin(); // Initialize the relay on pin 16
  relayD17.begin(); // Initialize the relay on pin 17
  relayD18.begin(); // Initialize the relay on pin 18
  relayD19.begin(); // Initialize the relay on pin 19
  relayD21.begin(); // Initialize the relay on pin 21
}

void loop(void)
{
  // put your main code here, to run repeatedly:

  updateOutputs(); // Refresh output data
}

void updateOutputs()
{
  // Update the state of each relay based on the raw data
  if (Relaymodule_RelayModule_Signal_PIN_D4_rawData)
    relayD4.turnOn();
  else
    relayD4.turnOff();

  if (Relaymodule_RelayModule_Signal_PIN_D13_rawData)
    relayD13.turnOn();
  else
    relayD13.turnOff();

  if (Relaymodule_RelayModule_Signal_PIN_D14_rawData)
    relayD14.turnOn();
  else
    relayD14.turnOff();

  if (Relaymodule_RelayModule_Signal_PIN_D15_rawData)
    relayD15.turnOn();
  else
    relayD15.turnOff();

  if (Relaymodule_RelayModule_Signal_PIN_D16_rawData)
    relayD16.turnOn();
  else
    relayD16.turnOff();

  if (Relaymodule_RelayModule_Signal_PIN_D17_rawData)
    relayD17.turnOn();
  else
    relayD17.turnOff();

  if (Relaymodule_RelayModule_Signal_PIN_D18_rawData)
    relayD18.turnOn();
  else
    relayD18.turnOff();

  if (Relaymodule_RelayModule_Signal_PIN_D19_rawData)
    relayD19.turnOn();
  else
    relayD19.turnOff();

  if (Relaymodule_RelayModule_Signal_PIN_D21_rawData)
    relayD21.turnOn();
  else
    relayD21.turnOff();
}

/* END CODE */"
PeMmn2ZR,Untitled,35657,C++,Tuesday 28th of May 2024 04:46:35 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <fstream>

template<typename container>
void print(container cont) {
    for (const auto& a : cont) {
        std::cout << a;
    }
    std::cout << std::endl;
}

struct student {
    std::string name;
    std::string surname;
    int course; // –æ—Ç 1 –¥–æ 5
    int rating; // –¥–æ 100
    double average_score; // –¥–æ 5
};


std::ostream& operator<<(std::ostream& output, const student& st) {
    output << st.name << "" "" << st.surname << "" "" << st.course << "" "" << st.rating << "" "" << st.average_score << std::endl;
    return output;
}

std::istream& operator>>(std::istream& input, student& st) {
    input >> st.name >> st.surname >> st.course >> st.rating >> st.average_score;
    return input;
}

int main() {

    setlocale(LC_ALL, ""ru"");

    //std::vector<student> students{ {""–ò–≤–∞–Ω"", ""–ò–≤–∞–Ω–æ–≤"", 1, 33, 3.7}, {""–í–ª–∞–¥–∏–º–∏—Ä"", ""–ú–∏—Ö–∞–π–ª–æ–≤"", 3, 39, 3.9}, {""–ì–µ–Ω–Ω–∞–¥–∏–π"", ""–ü–µ—Ç—Ä–æ–≤"", 2, 56, 4.2}, {""–û–ª—å–≥–∞"", ""–ì—Ä–∏–≥–æ—Ä—å–µ–≤–∞"", 5, 48, 4.0}, {""–ï–ª–µ–Ω–∞"", ""–ì—Ä–∏—à–∏–Ω–∞"", 4, 75, 4.9} };


    std::ifstream fin(""students.txt"");

    std::ofstream fout(""temp.txt"");

    if (!fin.is_open() || !fout.is_open()) {
        std::cout << ""–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞"";
    }
    else {

        std::vector<student> students;

        student temp;

        while (!fin.eof()) {
            fin >> temp;
            students.push_back(temp);
        }

        print(students);

        std::sort(students.begin(), students.end(), [](const student& left, const student& right) { return left.surname < right.surname; });

        print(students);

        std::sort(students.begin(), students.end(), [](const student& left, const student& right) { return left.rating > right.rating; });

        print(students);

        std::sort(students.begin(), students.end(), [](const student& left, const student& right) { return left.average_score > right.average_score; });

        print(students);

        for (auto a : students) {
            fout << a;
        }

        fin.close();
        fout.close();

        std::remove(""students.txt"");
        std::rename(""temp.txt"", ""students.txt"");
    }

    
}
"
aEdKwrtq,snowbot,coinwalk,JavaScript,Tuesday 28th of May 2024 04:41:51 AM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/640).toFixed(8));
var beast = prefit;
var crust = (prefit/2);
var tens = (prefit*8);
var sevens = (prefit*4.9);
var eights = (prefit*5.9);
var fives = (prefit*2.9);
var fours = (prefit*3.9);
var throttle = (prefit*12);
var winnerdinner = 144000;
var snowy = ((Math.floor(elderly/tens))*tens);
var james = ((Math.floor(elderly/tens))*tens);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = 0;
var downer = 2.9;
var greatie = document.getElementById('pct_balance').value;
 
 function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
 
async function go(){
if (greatie!=great){
great = document.getElementById('pct_balance').value;
if (great>(snowie+(beast*4.9))){
    beast = beast*2;
    downer = 4.9;
    snowie = parseFloat(great);
}
if (great<(snowie-(beast*downer))){
    beast = beast*2;
    downer = 4.9;
    snowie = parseFloat(great);
}
if (great<=(snowy-throttle)){
    beast = prefit;
    downer = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
}
if (great>snowy){
    snowy = ((Math.floor(great/tens))*tens);
    }
if ((beast>fours)&&(great>=snowy)){
    beast = prefit;
    downer = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
}
if (great>=(james+tens)){
    beast = prefit;
    downer = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
    james = ((Math.floor(great/tens))*tens);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
}
await sleep(800);
greatie = document.getElementById('pct_balance').value;
go();
}
 
go();"
f5HA5Uqp,üí∞G2A.com Free Gift Card Guide 2024 Mayüí∞,lookos13,Python,Tuesday 28th of May 2024 04:33:05 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_2068187.pdf

Working as of:

29 May 2024"
3cS7wY3T,üí∞G2A.com Free Gift Card Guide 2024 Mayüí∞,pestinha,Python,Tuesday 28th of May 2024 04:26:19 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Apple gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_2068187.pdf

Working as of:

29 May 2024"
1nERfmYk,üí∞G2A.com Free Gift Card Guide 2024 Mayüí∞,buch,Python,Tuesday 28th of May 2024 04:09:19 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_1688286.pdf

Working as of:

29 May 2024"
ux4J61ne,üí∞G2A.com Free Gift Card Guide 2024 Mayüí∞,Alfonso1119,Python,Tuesday 28th of May 2024 04:02:35 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_1688286.pdf

Working as of:

29 May 2024"
pF4ej2Mj,üéâG2A.com Free Gift Card Guide 2024 Mayü§ë,atakan1983,Python,Tuesday 28th of May 2024 03:48:48 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Apple gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_1688286.pdf

Working as of:

29 May 2024"
g27GGsy0,–ú—ñ—Ä–æ—à–Ω–∏—á–µ–Ω–∫–æ_–ê—Ä—Ç–µ–º_–ü–ú-11_–õ—Ä‚Ññ8_–ú–µ—Ç_–∫–æ–º–ø_–µ–∫—Å–ø,mirosh111000,Python,Tuesday 28th of May 2024 03:41:27 AM CDT,"import numpy as np
import matplotlib.pyplot as plt
from IPython.display import Latex
import random
 
def my_time_(s):
    h = s // 3600
    time = s % 3600
    m = time // 60
    s = time % 60
    if h < 10:
        h = '0' + str(int(h))
    if m < 10:
        m = '0' + str(int(m))
    if s < 10:
        s = '0' + str(int(s))
    
    return fr'{h}:{m}:{s}'
        
def to_latex(text=''): return fr'${text}$'

def d2f_dc2(c, a):
    return 2 * (-a * c + 1)**2 - 8 * c * (-a * c + 1) * a + 2 * c**2 * a**2

def f(c, a):
    return c**2 * (1 - a*c)**2

def stability_index(k, c, a, z):
    return -M * k**2 * d2f_dc2(c, a) * (c - M*z*k**4)



M = 1
a = 1
z = 0.5
c0 = 0.5

k_values = np.linspace(0, 1.2, 100)
lambda_values = []

for k in k_values:
    lambda_val = stability_index(k, c0, a, z)
    lambda_values.append(lambda_val)

plt.figure(figsize=(9, 5))
plt.plot(k_values, lambda_values)
plt.xlabel(to_latex('k'))
plt.ylabel(to_latex('Œª'))
plt.title(to_latex('–ó–∞–ª–µ–∂–Ω—ñ—Å—Ç—å\ Œª(k)'))
plt.grid(True)
plt.show()









M = 1
z = 0.5
k_values = np.linspace(0, 1.2, 200)

a_values = np.linspace(0.1, 2, 200)
c0_values = np.linspace(0.1, 1, 200)

stability_results = np.zeros((len(a_values), len(c0_values)))

def d2f_dc2(c, a):
    return 2 * (-a * c + 1)**2 - 8 * c * (-a * c + 1) * a + 2 * c**2 * a**2

def stability_index(k, c, a, z):
    return -M * k**2 * d2f_dc2(c, a) - M * z * k**4

for i, a in enumerate(a_values):
    for j, c0 in enumerate(c0_values):
        lambda_values = []
        for k in k_values:
            lambda_val = stability_index(k, c0, a, z)
            if lambda_val > 0:
                lambda_values.append(lambda_val)
            else:
                lambda_values.append(np.nan)
        stability_results[i, j] = np.nanmean(lambda_values)

plt.figure(figsize=(9, 5))
plt.imshow(stability_results, extent=[min(c0_values), max(c0_values), min(a_values), max(a_values)], origin='lower', aspect='auto', cmap='magma')
plt.colorbar(label=to_latex('Œª'))
plt.xlabel(to_latex('c_0'))
plt.ylabel(to_latex('a'))
plt.title(to_latex('–î—ñ–∞–≥—Ä–∞–º–∞\ —Å—Ç—ñ–π–∫–æ—Å—Ç—ñ\ a(c_0)'))
plt.show()









def micro_ch_pre(Nx, Ny, co, iflag):
    np.random.seed(0)
    noise = 0.02
    con = np.zeros((Nx, Ny))
    if iflag == 1:
        for i in range(Nx):
            for j in range(Ny):
                con[i, j] = co + noise * (0.5 - random.random())
    else:
        for i in range(Nx):
            for j in range(Ny):
                ii = (i - 1) * Nx + j
                con[ii] = co + noise * (0.5 - random.random())
    return con

# Parameters
Nx = 64
Ny = 64
dx = 1.0
dy = 1.0
nstep = 10000
nprint = 50
dtime = 1.0e-2
ttime = 0.0
co = 0.40
mobility = 1.0
grad_coef = 0.5

# Prepare microstructure
iflag = 1
con = micro_ch_pre(Nx, Ny, co, iflag)

lap_con = np.zeros((Nx, Ny))
lap_dummy = np.zeros((Nx, Ny))
dummy = np.zeros((Nx, Ny))

# Time and concentration arrays for plotting
time_vals = []
concentration_vals = []

con_images = []
step_list = []
# Evolve
for istep in range(1, nstep + 1):
    ttime += dtime
    for i in range(Nx):
        for j in range(Ny):
            jp = j + 1 if j + 1 < Ny else 0
            jm = j - 1 if j - 1 >= 0 else Ny - 1
            ip = i + 1 if i + 1 < Nx else 0
            im = i - 1 if i - 1 >= 0 else Nx - 1

            hne = con[ip, j]
            hnw = con[im, j]
            hns = con[i, jm]
            hnn = con[i, jp]
            hnc = con[i, j]

            lap_con_ij = (hnw + hne + hns + hnn - 4 * hnc) / (dx * dy)

            dfdcon = 2 * (con[i, j] * (1 - con[i, j])**2 - 2 * con[i, j]**2 * (1 - con[i, j]))
            dummy[i, j] = dfdcon - grad_coef * lap_con_ij

    for i in range(Nx):
        for j in range(Ny):
            jp = j + 1 if j + 1 < Ny else 0
            jm = j - 1 if j - 1 >= 0 else Ny - 1
            ip = i + 1 if i + 1 < Nx else 0
            im = i - 1 if i - 1 >= 0 else Nx - 1

            hne = dummy[ip, j]
            hnw = dummy[im, j]
            hns = dummy[i, jm]
            hnn = dummy[i, jp]
            hnc = dummy[i, j]

            lap_dummy[i, j] = (hnw + hne + hns + hnn - 4 * hnc) / (dx * dy)

            con[i, j] = con[i, j] + dtime * mobility * lap_dummy[i, j]

            if con[i, j] >= 0.9999:
                con[i, j] = 0.9999
            if con[i, j] < 0.00001:
                con[i, j] = 0.00001

    if istep % nprint == 0 or istep == 1:
        print(f""done step: {istep}"")
        time_vals.append(ttime)
        concentration_vals.append(con.copy())

        if istep in [1, 100, 1000, 2500, 5000, 10000]:
            con_images.append(np.copy(con))
            step_list.append(round(ttime, 4))


fig, axes = plt.subplots(2, 3, figsize=(15, 10))
axes = axes.ravel()

for i in range(len(con_images)):
    im = axes[i].imshow(con_images[i], cmap='coolwarm')
    axes[i].set_title(to_latex(f'Time: \ {step_list[i]}'))
    plt.colorbar(im, ax=axes[i])
    axes[i].axis('off')
                          
plt.tight_layout()
plt.show()









def micro_ch_pre(Nx, Ny, co, iflag):
    np.random.seed(0)
    noise = 0.02
    con = np.zeros((Nx, Ny))
    if iflag == 1:
        for i in range(Nx):
            for j in range(Ny):
                con[i, j] = co + noise * (0.5 - random.random())
    else:
        for i in range(Nx):
            for j in range(Ny):
                ii = (i - 1) * Nx + j
                con[ii] = co + noise * (0.5 - random.random())
    return con

# Parameters
Nx = 64
Ny = 64
dx = 1.0
dy = 1.0
nstep = 1000
nprint = 50
dtime = 1.0e-2
ttime = 0.0
co = 0.40
mobility = 1.0
grad_coef = 0.5

# Prepare microstructure
iflag = 1
con = micro_ch_pre(Nx, Ny, co, iflag)

lap_con = np.zeros((Nx, Ny))
lap_dummy = np.zeros((Nx, Ny))
dummy = np.zeros((Nx, Ny))

# Time and concentration arrays for plotting
time_vals = []
concentration_vals = []
diff_history = []

# Evolve
for istep in range(1, nstep + 1):
    ttime += dtime
    for i in range(Nx):
        for j in range(Ny):
            jp = j + 1 if j + 1 < Ny else 0
            jm = j - 1 if j - 1 >= 0 else Ny - 1
            ip = i + 1 if i + 1 < Nx else 0
            im = i - 1 if i - 1 >= 0 else Nx - 1

            hne = con[ip, j]
            hnw = con[im, j]
            hns = con[i, jm]
            hnn = con[i, jp]
            hnc = con[i, j]

            lap_con_ij = (hnw + hne + hns + hnn - 4 * hnc) / (dx * dy)

            dfdcon = 2 * (con[i, j] * (1 - con[i, j])**2 - 2 * con[i, j]**2 * (1 - con[i, j]))
            dummy[i, j] = dfdcon - grad_coef * lap_con_ij

    for i in range(Nx):
        for j in range(Ny):
            jp = j + 1 if j + 1 < Ny else 0
            jm = j - 1 if j - 1 >= 0 else Ny - 1
            ip = i + 1 if i + 1 < Nx else 0
            im = i - 1 if i - 1 >= 0 else Nx - 1

            hne = dummy[ip, j]
            hnw = dummy[im, j]
            hns = dummy[i, jm]
            hnn = dummy[i, jp]
            hnc = dummy[i, j]

            lap_dummy[i, j] = (hnw + hne + hns + hnn - 4 * hnc) / (dx * dy)

            con[i, j] = con[i, j] + dtime * mobility * lap_dummy[i, j]

            if con[i, j] >= 0.9999:
                con[i, j] = 0.9999
            if con[i, j] < 0.00001:
                con[i, j] = 0.00001

    if istep % nprint == 0 or istep == 1:
        print(f""done step: {istep}"")
        average_temp = np.mean(con)
        concentration_vals.append(average_temp)
        time_vals.append(ttime)
        diff = np.mean(con**2) - np.mean(con)**2
        diff_history.append(diff)

# Plot Average Concentration vs. Time
plt.figure(figsize=(9, 5))
plt.plot(time_vals, concentration_vals)
plt.xlim(0, 5)
plt.xlabel(to_latex(""Time""))
plt.ylabel(to_latex(""Average\ Concentration""))
plt.title(to_latex(""Average\ Concentration vs \ Time""))
plt.grid(True)
plt.show()

# Plot <c**2> - <c>**2 vs. Time
plt.figure(figsize=(9, 5))
plt.plot(time_vals, diff_history)
plt.xlabel(to_latex(""Time""))
plt.ylabel(to_latex(""<c^2> - <c>^2""))
plt.title(to_latex(""<c^2> - <c>^2 \ vs\ Time""))
plt.grid(True)
plt.show()










# –ó–∞–¥–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
M = 1
z = 0.5
k_values = np.linspace(0, 1.2, 200)

# –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–Ω–∞—á–µ–Ω—å a —Ç–∞ c0
a_values1 = np.array([0.4, 0.6, 0.8, 1.2, 1.4, 1.6, 0.5, 1.0, 1.5, 1.0, 1.0])
c0_values1 = np.array([0.2, 0.3, 0.4, 0.6, 0.7, 0.8, 0.5, 0.5, 0.5, 0.3, 0.7])


# –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–Ω–∞—á–µ–Ω—å a —Ç–∞ c0
a_values = np.linspace(0.1, 2, 200)
c0_values = np.linspace(0.1, 1, 200)

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–∞—Å–∏–≤—É –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
stability_results = np.zeros((len(a_values), len(c0_values)))

# –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó d2f_dc2
def d2f_dc2(c, a):
    return 2 * (-a * c + 1)**2 - 8 * c * (-a * c + 1) * a + 2 * c**2 * a**2

# –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó f(c, a)
def f(c, a):
    return c**2 * (1 - a * c)**2

# –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–∫–∞–∑–Ω–∏–∫–∞ —Å—Ç—ñ–π–∫–æ—Å—Ç—ñ lambda
def stability_index(k, c, a, z):
    return -M * k**2 * d2f_dc2(c, a) - M * z * k**4

# –ü–æ–±—É–¥–æ–≤–∞ –¥—ñ–∞–≥—Ä–∞–º–∏ —Å—Ç—ñ–π–∫–æ—Å—Ç—ñ
for i, a in enumerate(a_values):
    for j, c0 in enumerate(c0_values):
        lambda_values = []
        for k in k_values:
            lambda_val = stability_index(k, c0, a, z)
            if lambda_val > 0:
                lambda_values.append(lambda_val)
            else:
                lambda_values.append(np.nan)
        stability_results[i, j] = np.nanmean(lambda_values)

# –ü–æ–±—É–¥–æ–≤–∞ –≥—Ä–∞—Ñ—ñ–∫–∞
plt.figure(figsize=(9, 5))
plt.imshow(stability_results, extent=[min(c0_values), max(c0_values), min(a_values), max(a_values)], origin='lower', aspect='auto', cmap='magma')
plt.colorbar(label=to_latex('Œª'))
plt.xlabel(to_latex('c_0'))
plt.scatter(c0_values1, a_values1, color='red')
plt.ylabel(to_latex('a'))
plt.title(to_latex('–î—ñ–∞–≥—Ä–∞–º–∞\ —Å—Ç—ñ–π–∫–æ—Å—Ç—ñ\ a(c_0)'))
plt.show()









def micro_ch_pre(Nx, Ny, co, iflag):
    np.random.seed(0)
    noise = 0.02
    con = np.zeros((Nx, Ny))
    if iflag == 1:
        for i in range(Nx):
            for j in range(Ny):
                con[i, j] = co + noise * (0.5 - random.random())
    else:
        for i in range(Nx):
            for j in range(Ny):
                ii = (i - 1) * Nx + j
                con[ii] = co + noise * (0.5 - random.random())
    return con

# Parameters
Nx = 64
Ny = 64
dx = 1.0
dy = 1.0
nstep = 25000
nprint = 50
dtime = 1.0e-2
ttime = 0.0
mobility = 1.0
grad_coef = 0.5

# Values to iterate over
a_values = np.array([0.4, 0.6, 0.8, 1.2, 1.4, 1.6, 0.5, 1.0, 1.5, 1.0, 1.0])
co_values = np.array([0.2, 0.3, 0.4, 0.6, 0.7, 0.8, 0.5, 0.5, 0.5, 0.3, 0.7])

for a, co in zip(a_values, co_values):
    print(f""\n\nRunning for a = {a} and co = {co}\n\n"")
    ttime = 0
    con = micro_ch_pre(Nx, Ny, co, iflag=1)

    lap_con = np.zeros((Nx, Ny))
    lap_dummy = np.zeros((Nx, Ny))
    dummy = np.zeros((Nx, Ny))

    # Time and concentration arrays for plotting
    time_vals = []
    concentration_vals = []

    # Evolve
    for istep in range(1, nstep + 1):
        ttime += dtime
        for i in range(Nx):
            for j in range(Ny):
                jp = j + 1 if j + 1 < Ny else 0
                jm = j - 1 if j - 1 >= 0 else Ny - 1
                ip = i + 1 if i + 1 < Nx else 0
                im = i - 1 if i - 1 >= 0 else Nx - 1

                hne = con[ip, j]
                hnw = con[im, j]
                hns = con[i, jm]
                hnn = con[i, jp]
                hnc = con[i, j]

                lap_con_ij = (hnw + hne + hns + hnn - 4 * hnc) / (dx * dy)

                dfdcon =  2*con[i, j]*(-a*con[i, j]+1)**2-2*((con[i, j])**2)*(-a*con[i, j]+1)*a
                dummy[i, j] = dfdcon - grad_coef * lap_con_ij

        for i in range(Nx):
            for j in range(Ny):
                jp = j + 1 if j + 1 < Ny else 0
                jm = j - 1 if j - 1 >= 0 else Ny - 1
                ip = i + 1 if i + 1 < Nx else 0
                im = i - 1 if i - 1 >= 0 else Nx - 1

                hne = dummy[ip, j]
                hnw = dummy[im, j]
                hns = dummy[i, jm]
                hnn = dummy[i, jp]
                hnc = dummy[i, j]

                lap_dummy[i, j] = (hnw + hne + hns + hnn - 4 * hnc) / (dx * dy)

                con[i, j] = con[i, j] + dtime * mobility * lap_dummy[i, j]

                if con[i, j] >= 0.9999:
                    con[i, j] = 0.9999
                if con[i, j] < 0.00001:
                    con[i, j] = 0.00001

        if istep % nprint == 0 or istep == 1:
            if istep % 5000 == 0:
                print(f""done step: {istep}"")
            time_vals.append(ttime)
            concentration_vals.append(con.copy())
            
            if istep == nstep:
                plt.figure(figsize=(9, 5))
                plt.imshow(con, cmap='coolwarm')
                plt.colorbar()
                plt.title(to_latex(f""a={a},\ c_0={co},\ Time: {round(ttime, 4)}""))
                plt.show()
"
sKKbKav0,ü§ëG2A.com Free Gift Card Guide 2024 Mayüí∞,pestinha,Python,Tuesday 28th of May 2024 03:35:13 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_1688286.pdf

Working as of:

29 May 2024"
myB9XVGJ,üí∞G2A.com Free Gift Card Guide 2024 May,pestinha,Python,Tuesday 28th of May 2024 03:33:48 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_9628792.pdf

Working as of:

29 May 2024"
5SvERPU3,üéâG2A.com Free Gift Card Guide May 2024üí∞,pestinha,Python,Tuesday 28th of May 2024 03:22:14 AM CDT,"G2A.com free GC & games updated guide.
Any item for free on G2A.com including Apple gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_6881624.pdf

Working as of:

28 May 2024"
eZJrwFa3,blink.sh,shinemic,Bash,Tuesday 28th of May 2024 03:17:51 AM CDT,"#!/usr/bin/bash

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #
#     ËÑöÊú¨ÂêçÁß∞: blink.sh                                                       #
#     ËÑöÊú¨Áî®ÈÄî: ÊâìÂ≠óÊú∫ËæìÂá∫‰ªøÁúü                                                 #
#     ÂºÄÂèë‰ΩúËÄÖ: Êú®Âì•                                                           #
#     ÂΩìÂâçÁâàÊú¨: 1.0                                                            #
#     Êõ¥Êñ∞Êó•Âøó:   <ÁâàÊú¨Âè∑>  |      <Êõ¥Êñ∞Êó∂Èó¥>     | <Êõ¥Êñ∞ÂÜÖÂÆπ>                 #
#                   1.0     | 2023-06-05 23:00:00 | ËÑöÊú¨ÂàùÂßãÂåñ                 #
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

SCALES=2000
DELAY_SLEEP=200  # ÂÖâÊ†áÈó™ÁÉÅÁöÑÊó∂Èó¥Èó¥Èöî
DELAY_START=1000 # ËæìÂÖ•ÂâçÁ≠âÂæÖÊó∂Èó¥
DELAY_END=2000   # ËæìÂÖ•ÂÆåÊØïÂêéÁ≠âÂæÖÊó∂Èó¥

# ÊâìÂ≠óÈó¥ÈöîÊúÄÈ´òÊó∂Èó¥ÈöèÊú∫ÂèñÂÄº
DELAY_TYPES=(2 2 3 3 5 5 5 8 8 8 8 10 10 10 10 10 10 20 20 20)

# ÊéßÂà∂Âπ∂ÂèëÂëΩÂêçÁÆ°ÈÅì
lock_fifo=""/tmp/blink_$$.lock.fifo""
mkdir -p $(dirname ""$lock_fifo"")
mkfifo $lock_fifo
exec 10<>$lock_fifo
echo >&10

# ------------------------------------------------------- #

sleep_interval() {
    sleep $(echo ""$1/$SCALES"" | bc -l)
}

interrupt() {
    clean
    exit 1
}

clean() {
    tput cnorm # ÊÅ¢Â§çÂÖâÊ†á
    exec &>>/dev/null
    kill $pid_cursor
    kill $pid_type
    rm $lock_fifo
}

# ------------------------------------------------------- #

trap interrupt SIGINT SIGHUP

tput civis # ÈöêËóèÂÖâÊ†á

# ÂÖâÊ†áÈó™ÁÉÅËøõÁ®ã
{
    while :; do
        # ÂÖâÊ†áÈó™ÁÉÅ - ‰∏ãÂàíÁ∫ø
        sleep_interval $DELAY_SLEEP
        read -u 10
        {
            if [ ""$s"" = ""e"" ]; then
                break
            fi
            echo -n ""‚ñà""
            echo 1 >&10
        }

        # ÂÖâÊ†áÈó™ÁÉÅ - Á©∫ÁΩÆ
        sleep_interval $DELAY_SLEEP
        read -u 10 s
        {
            [ ""$s"" = 1 ] && echo -ne ""\b""
            if [ ""$s"" = ""e"" ]; then
                break
            fi
            echo -ne "" \b""
            echo 0 >&10
        }
    done
} 2>/dev/null &
pid_cursor=$!

# Á®ç‰ΩúÂÅúÈ°ø
sleep_interval $DELAY_START

# ÊâìÂ≠óËøõÁ®ã
{
    while IFS= read -r line; do
        # Á©∫Ë°å
        if ((${#line} == 0)); then
            read -u 10
            {
                echo
                echo 2 >&10
            }
        fi

        # ÈÅçÂéÜÊØè‰∏™Â≠óÁ¨¶
        for ((i = 0; i < ${#line}; i++)); do
            cur_char=${line:$i:1}
            if [[ ! ""$cur_char"" =~ ^[[:space:]]*$ ]]; then
                delay_type_select=${DELAY_TYPES[ $((RANDOM % ${#DELAY_TYPES[@]})) ]}
                sleep_interval $((RANDOM % delay_type_select))
            fi
            read -u 10 s
            {
                [ ""$s"" = 1 ] && echo -ne ""\b""
                echo -n ""${line:$i:1}""
                # Â¶ÇËæìÂá∫Ëá≥‰∏ÄË°å‰∏≠ÊúÄÂêé‰∏Ä‰∏™Â≠óÁ¨¶ÔºåÁõ¥Êé•ËæìÂá∫""\n""
                ((i == ${#line} - 1)) && echo
                echo 2 >&10
            }
        done

    done

} 2>/dev/null
pid_type=$!

clean
exit 0
"
kqFn5HxW,i hope this works,vuseless,HTML,Tuesday 28th of May 2024 03:07:58 AM CDT,"onlinepoll.me/en/poll/vote/who-wins-200

<h3 class=""baslik"">who wins</h3>
<hr>
<form id=""vote_form"" method=""POST"">
<input type=""hidden"" name=""duration"" id=""timeInSeconds"" value=""0""> <input type=""hidden"" name=""csrfmiddlewaretoken"" value=""F0RxtT0ZsQwQCi7tUTlHh9MknDMMFyIE40AbDhdLc07IFtZsbfOHyo9vDsoMAuY5"">
<div class=""item"">
<div id=""div_id_votes"" class=""form-group""> <div class> <div class=""form-check""> <input type=""checkbox"" class=""form-check-input"" name=""votes"" id=""id_votes_1"" value=""me""> <label class=""form-check-label"" for=""id_votes_1"">
me
</label> </div> <div class=""form-check""> <input type=""checkbox"" class=""form-check-input"" name=""votes"" id=""id_votes_2"" value=""wonder woman (teen titans go)""> <label class=""form-check-label"" for=""id_votes_2"">
wonder woman (teen titans go)
</label> </div></div> </div>
</div>
<button type=""submit"" data-sitekey=""6Lcs1wsaAAAAAKjV3ylwUmvaO-JtAOcfo8HoPBdv"" data-callback=""onSubmit"" class=""btnmain votebtn g-recaptcha"">Vote</button>
<a href=""/en/poll/result/who-wins-200"" class=""float-right"" style=""font-size: 16px;padding-top: 15px;"">Result</a>
</form>
<br>
<div class=""row"">
<div class=""col-5 mt-3"">
<p class=""securetip"">
<span><i class=""fa fa-unlock""></i> No Duplication Checking</span>
</p>
</div>
<div class=""col-md-7"">
<div class=""text-right"">
<span style=""font-size: 12px;color: white;"">Share:</span>
<input id=""share"" readonly=""readonly"" class=""share"" value=""https://onlinepoll.me/poll/vote/who-wins-200"" onclick=""if (!window.__cfRLUnblockHandlers) return false; this.select()"" data-cf-modified-8db0bff76f9abdae0042c393->
<button class=""btnshare sharebtn"" type=""button"">Copy</button>
</div>
</div>
</div>

onlinepoll.me/en/poll/vote/who-wins-202

<h3 class=""baslik"">who wins</h3>
<hr>
<form id=""vote_form"" method=""POST"">
<input type=""hidden"" name=""duration"" id=""timeInSeconds"" value=""0""> <input type=""hidden"" name=""csrfmiddlewaretoken"" value=""F0RxtT0ZsQwQCi7tUTlHh9MknDMMFyIE40AbDhdLc07IFtZsbfOHyo9vDsoMAuY5"">
<div class=""item"">
<div id=""div_id_votes"" class=""form-group""> <div class> <div class=""form-check""> <input type=""checkbox"" class=""form-check-input"" name=""votes"" id=""id_votes_1"" value=""me""> <label class=""form-check-label"" for=""id_votes_1"">
me
</label> </div> <div class=""form-check""> <input type=""checkbox"" class=""form-check-input"" name=""votes"" id=""id_votes_2"" value=""pomni (the amazing digital circus)""> <label class=""form-check-label"" for=""id_votes_2"">
pomni (the amazing digital circus)
</label> </div></div> </div>
</div>
<button type=""submit"" data-sitekey=""6Lcs1wsaAAAAAKjV3ylwUmvaO-JtAOcfo8HoPBdv"" data-callback=""onSubmit"" class=""btnmain votebtn g-recaptcha"">Vote</button>
<a href=""/en/poll/result/who-wins-202"" class=""float-right"" style=""font-size: 16px;padding-top: 15px;"">Result</a>
</form>
<br>
<div class=""row"">
<div class=""col-5 mt-3"">
<p class=""securetip"">
<span><i class=""fa fa-unlock""></i> No Duplication Checking</span>
</p>
</div>
<div class=""col-md-7"">
<div class=""text-right"">
<span style=""font-size: 12px;color: white;"">Share:</span>
<input id=""share"" readonly=""readonly"" class=""share"" value=""https://onlinepoll.me/poll/vote/who-wins-202"" onclick=""if (!window.__cfRLUnblockHandlers) return false; this.select()"" data-cf-modified-8db0bff76f9abdae0042c393->
<button class=""btnshare sharebtn"" type=""button"">Copy</button>
</div>
</div>
</div>
"
eBX4NeXp,"""BLE LED-Control"" rev_01",pleasedontcode,Arduino,Tuesday 28th of May 2024 02:59:35 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""BLE LED-Control""
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-28 07:58:37

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Implement a BLE server. The BLE server must be */
	/* able to accept or reject paring requests from */
	/* other BLE client devices. Every 300 milliseconds, */
	/* 50 bytes of binary data should be sent to other */
	/* parched BLE client devices. The user is notified */
	/* of the con */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <NimBLEDevice.h>

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs();

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t LED_LED_PIN_D4 = 4;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool LED_LED_PIN_D4_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float LED_LED_PIN_D4_phyData = 0.0;

/***** BLE SERVER VARIABLES *****/
NimBLEServer* pServer = nullptr;
NimBLECharacteristic* pCharacteristic = nullptr;
bool deviceConnected = false;
uint8_t txValue[50] = {0};  // 50 bytes of binary data

class MyServerCallbacks: public NimBLEServerCallbacks {
    void onConnect(NimBLEServer* pServer) {
        deviceConnected = true;
        Serial.println(""Client connected"");
    };

    void onDisconnect(NimBLEServer* pServer) {
        deviceConnected = false;
        Serial.println(""Client disconnected"");
    }

    uint32_t onPassKeyRequest() {
        Serial.println(""Server PassKeyRequest"");
        return 123456;  // Example passkey
    }

    bool onConfirmPIN(uint32_t pass_key) {
        Serial.print(""The passkey YES/NO number: "");
        Serial.println(pass_key);
        return true;  // Confirm the passkey
    }

    void onAuthenticationComplete(ble_gap_conn_desc* desc) {
        if (!desc->sec_state.encrypted) {
            NimBLEDevice::getServer()->disconnect(desc->conn_handle);
            Serial.println(""Encrypt connection failed - disconnecting client"");
            return;
        }
        Serial.println(""Starting BLE work!"");
    }
};

void setup(void) {
    // put your setup code here, to run once:
    Serial.begin(115200);
    pinMode(LED_LED_PIN_D4, OUTPUT);

    // Initialize BLE
    NimBLEDevice::init(""ESP32_BLE_Server"");
    NimBLEDevice::setSecurityAuth(true, true, true);
    NimBLEDevice::setSecurityPasskey(123456);
    NimBLEDevice::setSecurityIOCap(BLE_HS_IO_DISPLAY_ONLY);

    // Create BLE Server
    pServer = NimBLEDevice::createServer();
    pServer->setCallbacks(new MyServerCallbacks());

    // Create BLE Service
    NimBLEService* pService = pServer->createService(""4fafc201-1fb5-459e-8fcc-c5c9c331914b"");

    // Create BLE Characteristic
    pCharacteristic = pService->createCharacteristic(
        ""beb5483e-36e1-4688-b7f5-ea07361b26a8"",
        NIMBLE_PROPERTY::NOTIFY
    );

    // Start the service
    pService->start();

    // Start advertising
    NimBLEAdvertising* pAdvertising = NimBLEDevice::getAdvertising();
    pAdvertising->addServiceUUID(""4fafc201-1fb5-459e-8fcc-c5c9c331914b"");
    pAdvertising->setScanResponse(true);
    pAdvertising->start();

    Serial.println(""Waiting for a client connection to notify..."");
}

void loop(void) {
    // put your main code here, to run repeatedly:
    updateOutputs(); // Refresh output data

    if (deviceConnected) {
        // Update the 50 bytes of binary data
        for (int i = 0; i < 50; i++) {
            txValue[i] = random(0, 256);  // Random binary data
        }
        pCharacteristic->setValue(txValue, 50);
        pCharacteristic->notify();
        delay(300);  // Send data every 300 milliseconds
    }
}

void updateOutputs() {
    digitalWrite(LED_LED_PIN_D4, LED_LED_PIN_D4_rawData);
}
"
QByzwmRC,TwizzyHubb,sagat1719,Lua,Tuesday 28th of May 2024 02:03:40 AM CDT,"local Parent
if gethui then
	Parent = gethui()
elseif game.Players.LocalPlayer then
	Parent = game.Players.LocalPlayer.PlayerGui
else
	Parent = game.StarterGui
end
if Parent:FindFirstChild(""UIHack"") then
	for _, v in ipairs(Parent.UIHack.TopBarFiil.Screen:GetChildren()) do
		for _, c in ipairs(v:GetChildren()) do
			for _, b in ipairs(c:GetChildren()) do
				if b.Name == ""Button"" then
					b.BackgroundColor3 = Color3.fromRGB(0,0,0)
				end
			end
		end
	end
	game:GetService(""UserInputService"").MouseIconEnabled = true
	wait()
	Parent.UIHack:Destroy()
end
UIHack = Instance.new(""ScreenGui"")
TopBarFiil = Instance.new(""Frame"")
TopBarFiil_2 = Instance.new(""Frame"")
Screen = Instance.new(""Frame"")
Tab = Instance.new(""TextButton"")
Frame = Instance.new(""Frame"")
UIListLayout = Instance.new(""UIListLayout"")
Button = Instance.new(""TextButton"")
Settings = Instance.new(""Frame"")
UIListLayout_2 = Instance.new(""UIListLayout"")
Toggle = Instance.new(""TextButton"")
Slider = Instance.new(""Frame"")
Frame_2 = Instance.new(""Frame"")
Frame_3 = Instance.new(""Frame"")
TextLabel = Instance.new(""TextLabel"")
Executor = Instance.new(""Frame"")
TextLabel_2 = Instance.new(""TextLabel"")
ScrollingFrame = Instance.new(""ScrollingFrame"")
Bind = Instance.new(""TextBox"")
Executor_2 = Instance.new(""TextBox"")
msgbox = Instance.new(""Frame"")
UICorner = Instance.new(""UICorner"")
client = Instance.new(""TextLabel"")
TextLabel_3 = Instance.new(""TextLabel"")
TextButton = Instance.new(""TextButton"")
exec = Instance.new(""TextButton"")
clear = Instance.new(""TextButton"")
Dot = Instance.new(""Frame"")
Hud = Instance.new(""Frame"")
Exp = Instance.new(""TextLabel"")
UIListLayout_3 = Instance.new(""UIListLayout"")
UserInputService = game:GetService(""UserInputService"")
ColorPicker = Instance.new(""TextButton"")
Frame_4 = Instance.new(""Frame"")
RGB = Instance.new(""ImageLabel"")
Marker = Instance.new(""Frame"")
Preview = Instance.new(""ImageLabel"")
Value = Instance.new(""ImageLabel"")
Marker_2 = Instance.new(""Frame"")
Modal = Instance.new(""TextButton"")
OK = Instance.new(""TextButton"")

local mod = {}

UIHack.Name = ""UIHack""
UIHack.IgnoreGuiInset = false
if gethui then
	UIHack.Parent = gethui()
elseif game.Players.LocalPlayer then
	UIHack.Parent = game.Players.LocalPlayer.PlayerGui
else
	UIHack.Parent = game.StarterGui
end

UIHack.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
UIHack.ResetOnSpawn = false

Hud.Name = ""Hud""
Hud.Parent = UIHack
Hud.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Hud.BackgroundTransparency = 1.000
Hud.BorderColor3 = Color3.fromRGB(0, 0, 0)
Hud.BorderSizePixel = 0
Hud.Position = UDim2.new(1, -105, 0, 0)
Hud.Size = UDim2.new(0, 100, 0, 100)
Hud.Visible = false

Exp.Name = ""Exp""
Exp.Parent = Hud
Exp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Exp.BackgroundTransparency = 1.000
Exp.BorderColor3 = Color3.fromRGB(0, 0, 0)
Exp.BorderSizePixel = 0
Exp.Size = UDim2.new(0, 100, 0, 20)
Exp.Visible = false
Exp.Font = Enum.Font.Arial
Exp.Text = ""Exp""
Exp.TextColor3 = Color3.fromRGB(0, 0, 0)
Exp.TextSize = 18.000
Exp.TextXAlignment = Enum.TextXAlignment.Right

UIListLayout_3.Parent = Hud

TopBarFiil.Name = ""TopBarFiil""
TopBarFiil.Parent = UIHack
TopBarFiil.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TopBarFiil.BackgroundTransparency = 0.500
TopBarFiil.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBarFiil.BorderSizePixel = 0
TopBarFiil.Size = UDim2.new(1, 0, 1, 0)

TopBarFiil_2.Name = ""TopBarFill""
TopBarFiil_2.Parent = UIHack
TopBarFiil_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TopBarFiil_2.BackgroundTransparency = 0.500
TopBarFiil_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TopBarFiil_2.BorderSizePixel = 0
TopBarFiil_2.Size = UDim2.new(1, 0, 1, 0)
TopBarFiil_2.Position = UDim2.new(0,0,-1,0)

Modal.Name = ""Modal""
Modal.Parent = TopBarFiil
Modal.Size = UDim2.new(0,0,0,0)
Modal.Modal = true
Modal.Text = """"

Screen.Name = ""Screen""
Screen.Parent = TopBarFiil
Screen.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Screen.BackgroundTransparency = 1.000
Screen.BorderColor3 = Color3.fromRGB(0, 0, 0)
Screen.BorderSizePixel = 0
Screen.Position = UDim2.new(0, 5, 0, 5)
Screen.Size = UDim2.new(1, -10, 1, -10)
Screen.Visible = false

Tab.Name = ""Tab""
Tab.Parent = Screen
Tab.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Tab.BackgroundTransparency = 0.300
Tab.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tab.BorderSizePixel = 0
Tab.Size = UDim2.new(0, 110, 0, 25)
Tab.Font = Enum.Font.Arial
Tab.TextColor3 = Color3.fromRGB(255, 255, 255)
Tab.TextSize = 18
Tab.Visible = false
Tab.AutoButtonColor = false
Tab.TextWrapped = true

Frame.Parent = Tab
Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Frame.BackgroundTransparency = 1.000
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0, 5, 0, 25)
Frame.Size = UDim2.new(0, 100, 0, 100)

UIListLayout.Parent = Frame
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

Button.Name = ""Button""
Button.Parent = Frame
Button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Button.BackgroundTransparency = 0.300
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Size = UDim2.new(0, 100, 0, 20)
Button.Font = Enum.Font.Arial
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextWrapped = true
Button.TextSize = 14.000

Settings.Name = ""Settings""
Settings.Parent = Button
Settings.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Settings.BackgroundTransparency = 0.5
Settings.BorderColor3 = Color3.fromRGB(0, 0, 0)
Settings.BorderSizePixel = 0
Settings.Position = UDim2.new(0, 105, 0, 5)
Settings.Size = UDim2.new(0, 100, 0, 0)
Settings.Visible = false

ColorPicker.Name = ""ColorPicker""
ColorPicker.Parent = Settings
ColorPicker.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ColorPicker.BackgroundTransparency = 0.300
ColorPicker.BorderColor3 = Color3.fromRGB(0, 0, 0)
ColorPicker.BorderSizePixel = 0
ColorPicker.Size = UDim2.new(0, 20, 0, 20)
ColorPicker.Font = Enum.Font.Arial
ColorPicker.Text = ""     Ultra Color""
ColorPicker.TextColor3 = Color3.fromRGB(255, 255, 255)
ColorPicker.TextSize = 14.000
ColorPicker.TextXAlignment = Enum.TextXAlignment.Left

Frame_4.Parent = ColorPicker
Frame_4.AnchorPoint = Vector2.new(0.5, 0.5)
Frame_4.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Frame_4.Position = UDim2.new(1, 105, 0, 105)
Frame_4.Size = UDim2.new(0, 200, 0, 200)
Frame_4.SizeConstraint = Enum.SizeConstraint.RelativeXX
Frame_4.Visible = false

RGB.Name = ""RGB""
RGB.Parent = Frame_4
RGB.AnchorPoint = Vector2.new(0.5, 0)
RGB.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
RGB.BorderColor3 = Color3.fromRGB(40, 40, 40)
RGB.BorderSizePixel = 2
RGB.Position = UDim2.new(0, 82, 0, 5)
RGB.Size = UDim2.new(0, 155, 0, 155)
RGB.ZIndex = 4
RGB.Image = ""rbxassetid://1433361550""
RGB.SliceCenter = Rect.new(10, 10, 90, 90)

Marker.Name = ""Marker""
Marker.Parent = RGB
Marker.AnchorPoint = Vector2.new(0.5, 0.5)
Marker.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Marker.BorderColor3 = Color3.fromRGB(0, 0, 0)
Marker.BorderSizePixel = 2
Marker.Position = UDim2.new(0.5, 0, 1, 0)
Marker.Size = UDim2.new(0, 4, 0, 4)
Marker.ZIndex = 5

Preview.Name = ""Preview""
Preview.Parent = Frame_4
Preview.AnchorPoint = Vector2.new(0.5, 0)
Preview.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Preview.BorderColor3 = Color3.fromRGB(40, 40, 40)
Preview.BorderSizePixel = 2
Preview.Position = UDim2.new(0, 55, 0, 165)
Preview.Size = UDim2.new(0, 100, 0, 30)
Preview.ZIndex = 4
Preview.SliceCenter = Rect.new(10, 10, 90, 90)

Value.Name = ""Value""
Value.Parent = Frame_4
Value.AnchorPoint = Vector2.new(0.5, 0)
Value.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Value.BorderColor3 = Color3.fromRGB(40, 40, 40)
Value.BorderSizePixel = 2
Value.Position = UDim2.new(0, 185, 0, 5)
Value.Size = UDim2.new(0, 20, 0, 190)
Value.ZIndex = 4
Value.Image = ""rbxassetid://359311684""
Value.SliceCenter = Rect.new(10, 10, 90, 90)

Marker_2.Name = ""Marker""
Marker_2.Parent = Value
Marker_2.AnchorPoint = Vector2.new(0.5, 0.5)
Marker_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Marker_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Marker_2.BorderSizePixel = 2
Marker_2.Position = UDim2.new(0.5, 0, 0, 0)
Marker_2.Size = UDim2.new(1, 4, 0, 2)
Marker_2.ZIndex = 5

OK.Name = ""OK""
OK.Parent = Frame_4
OK.BackgroundColor3 = Color3.fromRGB(127, 127, 127)
OK.BorderColor3 = Color3.fromRGB(0, 0, 0)
OK.BorderSizePixel = 0
OK.Position = UDim2.new(0, 110, 0, 165)
OK.Size = UDim2.new(0, 60, 0, 30)
OK.Font = Enum.Font.Arial
OK.Text = ""OK""
OK.TextColor3 = Color3.fromRGB(255, 255, 255)
OK.TextSize = 14.000

UIListLayout_2.Parent = Settings
UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_2.Padding = UDim.new(0, 5)

Toggle.Name = ""Toggle""
Toggle.Parent = Settings
Toggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BackgroundTransparency = 0.300
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Size = UDim2.new(0, 20, 0, 20)
Toggle.Font = Enum.Font.Arial
Toggle.Text = ""          Toggle""
Toggle.TextXAlignment = Enum.TextXAlignment.Left
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.TextSize = 14.000

Bind.Name = ""Bind""
Bind.Parent = Settings
Bind.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Bind.BorderColor3 = Color3.fromRGB(0, 0, 0)
Bind.BorderSizePixel = 0
Bind.Size = UDim2.new(0, 100, 0, 20)
Bind.Font = Enum.Font.Arial
Bind.PlaceholderText = ""BIND: NONE""
Bind.Text = """"
Bind.TextColor3 = Color3.fromRGB(255, 255, 255)
Bind.TextSize = 14.000

Slider.Name = ""Slider""
Slider.Parent = Settings
Slider.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Slider.BackgroundTransparency = 0.300
Slider.BorderColor3 = Color3.fromRGB(0, 0, 0)
Slider.BorderSizePixel = 0
Slider.Size = UDim2.new(0, 100, 0, 20)

Frame_2.Parent = Slider
Frame_2.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
Frame_2.BackgroundTransparency = 1.000
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0, 10, 0, 5)
Frame_2.Size = UDim2.new(0, 81, 0, 10)

Frame_3.Parent = Frame_2
Frame_3.BackgroundColor3 = Color3.fromRGB(0, 84, 209)
Frame_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_3.BorderSizePixel = 0
Frame_3.Position = UDim2.new(0, -7, 0, -2)
Frame_3.Size = UDim2.new(0, 14, 0, 14)

TextLabel.Parent = Slider
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(1, 0, 1, 0)
TextLabel.ZIndex = 2
TextLabel.Font = Enum.Font.Arial
TextLabel.Text = ""10""
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 14.000

Executor.Name = ""Executor""
Executor.Parent = TopBarFiil
Executor.BackgroundColor3 = Color3.fromRGB(127, 127, 127)
Executor.BorderColor3 = Color3.fromRGB(0, 0, 0)
Executor.BorderSizePixel = 2
Executor.Position = UDim2.new(0.235790849, 0, 0.409369379, 0)
Executor.Size = UDim2.new(0, 500, 0, 250)
Executor.Visible = false

TextLabel_2.Parent = Executor
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0, 5, 0, 0)
TextLabel_2.Size = UDim2.new(0, 350, 0, 40)
TextLabel_2.Font = Enum.Font.Arial
if getexecutorname then
	TextLabel_2.Text = getexecutorname()
else
	TextLabel_2.Text = ""Sigma""
end
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextSize = 28.000
TextLabel_2.TextWrapped = true
TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left

ScrollingFrame.Parent = Executor
ScrollingFrame.Active = true
ScrollingFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Position = UDim2.new(0, 5, 0, 40)
ScrollingFrame.Size = UDim2.new(0, 489, 0, 154)
ScrollingFrame.BottomImage = ""rbxasset://textures/ui/Scroll/scroll-middle.png""
ScrollingFrame.ScrollBarImageColor3 = Color3.new(0.5,0.5,0.5)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
ScrollingFrame.ScrollingEnabled = false
ScrollingFrame.TopImage = ""rbxasset://textures/ui/Scroll/scroll-middle.png""

Executor_2.Name = ""Executor""
Executor_2.Parent = ScrollingFrame
Executor_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Executor_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Executor_2.BorderSizePixel = 0
Executor_2.Size = UDim2.new(1, 0, 1, 0)
Executor_2.ClearTextOnFocus = false
Executor_2.Font = Enum.Font.Arial
Executor_2.MultiLine = true
Executor_2.Text = """"
Executor_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Executor_2.TextSize = 14.000
Executor_2.TextWrapped = true
Executor_2.TextXAlignment = Enum.TextXAlignment.Left
Executor_2.TextYAlignment = Enum.TextYAlignment.Top

exec.Name = ""exec""
exec.Parent = Executor
exec.BackgroundColor3 = Color3.fromRGB(178, 178, 178)
exec.BorderColor3 = Color3.fromRGB(0, 0, 0)
exec.BorderSizePixel = 0
exec.Position = UDim2.new(0, 5, 0, 200)
exec.Size = UDim2.new(0, 117, 0, 45)
exec.AutoButtonColor = false
exec.Font = Enum.Font.Arial
exec.Text = ""Execute""
exec.TextColor3 = Color3.fromRGB(0, 0, 0)
exec.TextSize = 28.000

clear.Name = ""clear""
clear.Parent = Executor
clear.BackgroundColor3 = Color3.fromRGB(178, 178, 178)
clear.BorderColor3 = Color3.fromRGB(0, 0, 0)
clear.BorderSizePixel = 0
clear.Position = UDim2.new(0, 130, 0, 200)
clear.Size = UDim2.new(0, 117, 0, 45)
clear.AutoButtonColor = false
clear.Font = Enum.Font.Arial
clear.Text = ""Clear""
clear.TextColor3 = Color3.fromRGB(0, 0, 0)
clear.TextSize = 28.000

Dot.Name = ""Dot""
Dot.Parent = UIHack
Dot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Dot.Position = UDim2.new(0.25, 0, 0.25, 0)
Dot.Size = UDim2.new(0, 5, 0, 5)
Dot.Visible = false
Dot.ZIndex = 99999
game:GetService(""UserInputService"").MouseIconEnabled = false

local mouse = game.Players.LocalPlayer:GetMouse()
mouse.Move:Connect(function()
	Dot.Position = UDim2.new(0, mouse.X-2, 0, mouse.Y-2)
end)


msgbox.Name = ""msgbox""
msgbox.Parent = UIHack
msgbox.BackgroundColor3 = Color3.fromRGB(76, 76, 76)
msgbox.BorderColor3 = Color3.fromRGB(0, 0, 0)
msgbox.BorderSizePixel = 0
msgbox.Position = UDim2.new(0.5, -100, 0.5, -50)
msgbox.Size = UDim2.new(0, 200, 0, 100)

UICorner.Parent = msgbox

client.Name = ""client""
client.Parent = msgbox
client.BackgroundColor3 = Color3.fromRGB(0, 84, 209)
client.BorderColor3 = Color3.fromRGB(0, 0, 0)
client.BorderSizePixel = 0
client.Size = UDim2.new(0, 200, 0, 20)
client.Font = Enum.Font.Arial
client.Text = ""Twizzy Client""
client.TextColor3 = Color3.fromRGB(255, 255, 255)
client.TextSize = 14.000

local gui = msgbox

local dragging
local dragInput
local dragStart
local startPos

local function update(input)
	local delta = input.Position - dragStart
	gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

gui.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = gui.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				game:GetService(""GuiService"").TouchControlsEnabled = true
				dragging = false
			end
		end)
	end
end)

gui.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		game:GetService(""GuiService"").TouchControlsEnabled = false
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)

TextLabel_3.Parent = msgbox
TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.BackgroundTransparency = 1.000
TextLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_3.BorderSizePixel = 0
TextLabel_3.Position = UDim2.new(0, 0, 0, 30)
TextLabel_3.Size = UDim2.new(0, 200, 0, 45)
TextLabel_3.Font = Enum.Font.Arial
TextLabel_3.Text = ""Loaded! Press {key} to open / close menu""
TextLabel_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.TextSize = 14.000
TextLabel_3.TextWrapped = true

TextButton.Parent = msgbox
TextButton.BackgroundColor3 = Color3.fromRGB(127, 127, 127)
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0, 50, 0, 75)
TextButton.Size = UDim2.new(0, 100, 0, 20)
TextButton.Font = Enum.Font.Arial
TextButton.Text = ""OK""
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextSize = 14.000

TextButton.MouseButton1Click:Connect(function()
	msgbox.Visible = false
	Screen.Visible = true
end)


local TextService = game:GetService(""TextService"")

local function updateScrollingFrameSize()
	local textSize = Executor_2.TextSize
	local textFont = Executor_2.Font
	local text = Executor_2.Text
	local textBoxWidth = Executor_2.AbsoluteSize.X

	local textBounds = TextService:GetTextSize(text, textSize, textFont, Vector2.new(textBoxWidth, math.huge))

	ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, textBounds.Y)
end
Executor_2:GetPropertyChangedSignal(""Text""):Connect(updateScrollingFrameSize)
updateScrollingFrameSize()


local SCROLL_SPEED = 14
local isMouseInFrame = false

local function onInputChanged(input)
	if isMouseInFrame and input.UserInputType == Enum.UserInputType.MouseWheel then
		local newCanvasPosition = ScrollingFrame.CanvasPosition - Vector2.new(0, input.Position.Z * SCROLL_SPEED)

		newCanvasPosition = Vector2.new(
			newCanvasPosition.X,
			math.clamp(newCanvasPosition.Y, 0, ScrollingFrame.CanvasSize.Y.Offset - ScrollingFrame.AbsoluteWindowSize.Y)
		)

		ScrollingFrame.CanvasPosition = newCanvasPosition
	end
end
local ContextActionService = game:GetService(""ContextActionService"")
ScrollingFrame.MouseEnter:Connect(function()
	ContextActionService:BindAction(""DisableCameraZoom"", function() return Enum.ContextActionResult.Sink end, false, Enum.UserInputType.MouseWheel)
	isMouseInFrame = true
end)

ScrollingFrame.MouseLeave:Connect(function()
	ContextActionService:UnbindAction(""DisableCameraZoom"")
	isMouseInFrame = false
end)

UserInputService.InputChanged:Connect(onInputChanged)

local gui = Executor

local dragging
local dragInput
local dragStart
local startPos

local function update(input)
	local delta = input.Position - dragStart
	gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

gui.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = gui.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				game:GetService(""GuiService"").TouchControlsEnabled = true
				dragging = false
			end
		end)
	end
end)

gui.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		game:GetService(""GuiService"").TouchControlsEnabled = false
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)

exec.MouseButton1Click:Connect(function()
	loadstring(Executor_2.Text)()
end)

clear.MouseButton1Click:Connect(function()
	Executor_2.Text = """"
end)

local TabOrder = 0

function mod:Notify(Text, Description)
	Text = tostring(Text)
	Description = tostring(Description)
	game:GetService(""StarterGui""):SetCore(""SendNotification"",{
		Title = Text,
		Text = Description,
		Icon = ""rbxassetid://10043212933""
	})
end

function mod:NewTab(Name)
	if type(Name) == ""string"" then
	else
		mod:Notify(""Invalid Arg"",""NewTab 'Name'"")
		return
	end
	local TabModule = {}
	local c = Tab:Clone()
	c.Parent = Screen
	c.Text = Name
	c:FindFirstChildOfClass(""Frame""):FindFirstChildOfClass(""TextButton""):Destroy()
	c.Position = UDim2.new(0,120*TabOrder,0,0)
	TabOrder = TabOrder + 1
	c.Visible = true
	c.ZIndex = 0 - TabOrder - TabOrder
	function TabModule:HideTab()
		c:FindFirstChildOfClass(""Frame"").Visible = false
		return false
	end
	function TabModule:ShowTab()
		c:FindFirstChildOfClass(""Frame"").Visible = true
		return true
	end
	c.MouseButton2Click:Connect(function()
		c:FindFirstChildOfClass(""Frame"").Visible = not c:FindFirstChildOfClass(""Frame"").Visible
	end)

	local gui = c

	local dragging
	local dragInput
	local dragStart
	local startPos

	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end

	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					game:GetService(""GuiService"").TouchControlsEnabled = true
					dragging = false
				end
			end)
		end
	end)

	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			game:GetService(""GuiService"").TouchControlsEnabled = false
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
	function TabModule:NewToggle(Text,Callback)
		if type(Text) == ""string"" then
		else
			mod:Notify(""Invalid Arg"",""NewToggle 'Text'"")
			return
		end
		if type(Callback) == ""function"" then
		else
			mod:Notify(""Invalid Arg"",""NewToggle 'Callback'"")
			return
		end
		local ToggleModule = {}
		local a =Button:Clone()
		a.Text = Text
		a.Parent = c:FindFirstChild(""Frame"")
		for _, v in ipairs(a:FindFirstChild(""Settings""):GetChildren()) do
			if v.Name ~= ""UIListLayout"" then
				v:Destroy()
			end
		end
		local eee = Exp:Clone()
		eee.Parent = Hud
		eee.Text = Text
		a.MouseButton1Click:Connect(function()
			if a.BackgroundColor3 == Color3.fromRGB(0, 84, 209) then
				a.BackgroundColor3 = Color3.fromRGB(0,0,0)
				Callback(false)
				eee.Visible = false
			else
				a.BackgroundColor3 = Color3.fromRGB(0, 84, 209)
				Callback(true)
				eee.Visible = true
			end
		end)
		a.MouseButton2Click:Connect(function()
			for _, Tabs in ipairs(Screen:GetChildren()) do
				for _, ButtonFrames in ipairs(Tabs:GetChildren()) do
					for _, Buttons in ipairs(ButtonFrames:GetChildren()) do
						if Buttons.Name == ""Button"" then 
							if Buttons ~= a then
								Buttons.Settings.Visible = false 
							end
						end
					end
				end
			end
			a:FindFirstChild(""Settings"").Visible = not a:FindFirstChild(""Settings"").Visible
		end)
		a:FindFirstChild(""Settings"").ChildAdded:Connect(function()
			a:FindFirstChild(""Settings"").Size = UDim2.new(0,100,0,25*#a:FindFirstChild(""Settings""):GetChildren()-25)
		end)
		a:FindFirstChild(""Settings"").ChildRemoved:Connect(function()
			a:FindFirstChild(""Settings"").Size = UDim2.new(0,100,0,25*#a:FindFirstChild(""Settings""):GetChildren()-25)
		end)
		function ToggleModule:GetToggleState()
			if a.BackgroundColor3 == Color3.new(0,0,0) then
				return false
			else
				return true
			end
		end
		function ToggleModule:OnToggle()
			Callback(true)
			eee.Visible = true
			a.BackgroundColor3 = Color3.fromRGB(0, 84, 209)
		end
		function ToggleModule:OffToggle()
			a.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Callback(false)
			eee.Visible = false
		end
		function ToggleModule:Settings()
			local SettingsModule = {}

			function SettingsModule:Toggle(Text, Callback)
				if type(Text) == ""string"" then
				else
					mod:Notify(""Invalid Arg"",""Toggle 'Text'"")
					return
				end
				if type(Callback) == ""function"" then
				else
					mod:Notify(""Invalid Arg"",""Toggle 'Callback'"")
					return
				end
				local ToggleSettingsModule = {}
				local e =Toggle:Clone()
				e.Text = ""      ""..Text
				e.Parent = a:FindFirstChild(""Settings"")
				e.MouseButton1Click:Connect(function()
					if e.BackgroundColor3 == Color3.fromRGB(0, 84, 209) then
						e.BackgroundColor3 = Color3.fromRGB(0,0,0)
						Callback(false)
					else
						e.BackgroundColor3 = Color3.fromRGB(0, 84, 209)
						Callback(true)
					end
				end)
				function ToggleSettingsModule:GetToggleState()
					if e.BackgroundColor3 == Color3.fromRGB(0,0,0) then
						return false
					else
						return true
					end
				end
				function ToggleSettingsModule:OnToggle()
					e.BackgroundColor3 = Color3.fromRGB(0, 84, 209)
					Callback(true)
				end
				function ToggleSettingsModule:OffToggle()
					e.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
					Callback(false)
				end

				return ToggleSettingsModule
			end
			function SettingsModule:Slider(Text,Min,Max,Float,Callback)
				if type(Text) ~= ""string"" then
					mod:Notify(""Invalid Arg"",""Slider 'Text'"")
					return
				end
				if type(Min) ~= ""number"" then
					mod:Notify(""Invalid Arg"", ""Slider 'MinValue'"")
					return
				end
				if type(Max) ~= ""number"" then
					mod:Notify(""Invalid Arg"", ""Slider 'MaxValue'"")
					return
				end
				if type(Callback) ~= ""function"" then
					mod:Notify(""Invalid Arg"", ""Slider 'Callback'"")
					return
				end
				if type(Float) ~= ""boolean"" then
					mod:Notify(""Invalid Arg"", ""Slider 'Float'"")
					return
				end
				local SliderModule = {}

				-- Clone the slider and set its initial properties
				local t = Slider:Clone()
				t.Parent = a:FindFirstChild(""Settings"")
				t.TextLabel.Text = Text
				local int = Instance.new(""NumberValue"")
				int.Parent = t
				int.Value = 0
				local UIS = game:GetService(""UserInputService"")

				local knob = t.Frame.Frame
				local FOVLabel = t.TextLabel
				local knobGrabbed = false
				function SliderModule:GetSliderValue()
					return int.Value
				end
				local camera = workspace.CurrentCamera

				local function GrabFOVKnob()
					for _, v in ipairs(Screen:GetChildren()) do
						for _, c in ipairs(v:GetChildren()) do
							for _, b in ipairs(c:GetChildren()) do
								if b.Name == ""Button"" then
									b.Interactable = false
								end
							end
						end
					end
					knobGrabbed = true
				end

				local function MoveFOVKnob(screenPosition)
					local yDiff = screenPosition.X - t.Frame.AbsolutePosition.X
					local knobPositionRatio = math.min(math.max(yDiff / t.Frame.AbsoluteSize.X, 0), 1)
					local Maximum = Max-Min
					local newFOV = Min+Maximum * (0 + knobPositionRatio)
					knob.Position = UDim2.new(knobPositionRatio, -7, 0, -2)
					if Float == true then
						FOVLabel.Text = newFOV
						Callback(newFOV)
						int.Value = newFOV
					else
						Callback(math.floor(newFOV))
						FOVLabel.Text = math.floor(newFOV)
						int.Value = math.floor(newFOV)
					end
				end

				local function ReleaseFOVKnob()
					for _, v in ipairs(Screen:GetChildren()) do
						for _, c in ipairs(v:GetChildren()) do
							for _, b in ipairs(c:GetChildren()) do
								if b.Name == ""Button"" then
									b.Interactable = true
								end
							end
						end
					end
					knobGrabbed = false
					task.spawn(function()
						wait(3)
						FOVLabel.Text = Text
					end)
				end

				knob.InputBegan:connect(function(input)
					if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
						GrabFOVKnob()
					end
				end)

				UIS.InputChanged:connect(function(input, gameProcessedEvent)
					if (not gameProcessedEvent and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) and knobGrabbed) then
						MoveFOVKnob(input.Position)
					end
				end)

				UIS.InputEnded:connect(function(input, gameProcessedEvent)
					if (not gameProcessedEvent and input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
						ReleaseFOVKnob()
					end
				end)

				return SliderModule
			end
			function SettingsModule:Input(Placeholder, Callback)
				if Placeholder then
					if type(Placeholder) ~= ""string"" then
						mod:Notify(""Invalid Arg"",""Input 'Placeholder'"")
						return
					end
				end
				if type(Callback) ~= ""function"" then
					mod:Notify(""Invalid Arg"",""Input 'Callback'"")
					return
				end
				local e = Bind:Clone()
				e.Parent = a:FindFirstChild(""Settings"")
				e.TextWrapped = true
				e.PlaceholderText = Placeholder
				local InputModule = {}
				function InputModule:SetInput(input)
					if type(input) ~= ""string"" then
						mod:Notify(""Invalid Arg"",""SetInput 'input'"")
						return
					end
					e.Text = input
				end
				function InputModule:GetInputText()
					return e.Text
				end
				e.FocusLost:Connect(function(enterpressed)
					Callback(enterpressed, e.Text)
				end)

				return InputModule
			end
			function SettingsModule:Bind(Key)
				if Key then
					if type(Key) == ""string"" then
					else
						mod:Notify(""Invalid Arg"",""Bind 'Key'"")
						return
					end
				end
				Key = string.sub(Key,1,1)
				local BindModule = {}
				local e
				if a.Settings:FindFirstChild(""Bind"") then
					e = a:FindFirstChild(""Settings""):FindFirstChild(""Bind"")
				else
					e = Bind:Clone()
					e.Parent = a:FindFirstChild(""Settings"")
				end
				if Key then
					if Key == ""-"" or Key == ""_"" or Key == """" then
						e.Text = ""BIND : NONE""
					else
						e.Text = ""BIND: ""..string.upper(Key)
					end
				end
				e.Focused:Connect(function()
					e.Text = """"
				end)
				e:GetPropertyChangedSignal(""Text""):Connect(function()
					if string.len(e.Text) == 1 then
						if e.Text == ""-"" or e.Text == ""_"" then
							e.Text = ""BIND : NONE""
							e:ReleaseFocus()
						else
							e.Text = ""BIND: ""..string.upper(e.Text)
							e:ReleaseFocus()
						end
					end
				end)
				UserInputService.InputBegan:Connect(function(key, bruhh)
					if not bruhh then
						if string.len(e.Text) == 7 then
							if UserInputService:GetStringForKeyCode(key.KeyCode) == string.gsub(e.Text,""BIND: "","""") then
								if UIHack then
									if UIHack.Parent ~= nil then
										if ToggleModule:GetToggleState() == true then
											ToggleModule:OffToggle()
										elseif ToggleModule:GetToggleState() == false then
											ToggleModule:OnToggle()
										end
									end
								end
							end
						end
					end
				end)
				function BindModule:GetBind()
					return string.sub(e.Text,7,7)
				end
				function BindModule:SetBind(Bind)
					if type(Bind) == ""string"" then
					else
						mod:Notify(""Invalid Arg"",""SetBind 'Bind'"")
						return
					end
					e.Text = ""BIND: ""..Bind
				end

				return BindModule
			end
			function SettingsModule:ColorPicker(Text, Callback)
				if type(Callback) == ""function"" then
				else
					mod:Notify(""Invalid Arg"",""ColorPicker 'Callback'"")
					return
				end
				if type(Text) == ""string"" then
				else
					mod:Notify(""Invalid Arg"",""ColorPicker 'Text'"")
					return
				end
				local e = ColorPicker:Clone()
				e.Parent = a:FindFirstChild(""Settings"")
				e.Text = ""      ""..Text
				e.MouseButton1Click:Connect(function()
					e.Frame.Visible = not e.Frame.Visible
				end)
				local ColorModule = {}

				local player = game.Players.LocalPlayer
				local mouse = player:GetMouse()

				local rgb = e:WaitForChild(""Frame""):WaitForChild(""RGB"")
				local value = e:WaitForChild(""Frame""):WaitForChild(""Value"")
				local preview = e:WaitForChild(""Frame""):WaitForChild(""Preview"")

				e:WaitForChild(""Frame""):WaitForChild(""OK"").MouseButton1Click:Connect(function()
					e.Frame.Visible = false
					e.BackgroundColor3 = preview.BackgroundColor3
					Callback(e.BackgroundColor3)
				end)

				local selectedColor = Color3.fromHSV(1,1,1)
				local colorData = {1,1,1}

				local mouse1Down = false

				local function setColor(hue,sat,val)
					colorData = {hue or colorData[1],sat or colorData[2],val or colorData[3]}
					selectedColor = Color3.fromHSV(colorData[1],colorData[2],colorData[3])
					preview.BackgroundColor3 = selectedColor
					value.ImageColor3 = Color3.fromHSV(colorData[1],colorData[2],1)
				end

				local function inBounds(frame)
					local x,y = mouse.X - frame.AbsolutePosition.X,mouse.Y - frame.AbsolutePosition.Y
					local maxX,maxY = frame.AbsoluteSize.X,frame.AbsoluteSize.Y
					if x >= 0 and y >= 0 and x <= maxX and y <= maxY then
						return x/maxX,y/maxY
					end
				end

				local function updateRGB()
					if mouse1Down then
						local x,y = inBounds(rgb)
						if x and y then
							rgb:WaitForChild(""Marker"").Position = UDim2.new(x,0,y,0)
							setColor(1 - x,1 - y)
						end

						local x,y = inBounds(value)
						if x and y then
							value:WaitForChild(""Marker"").Position = UDim2.new(0.5,0,y,0)
							setColor(nil,nil,1 - y)
						end
					end
				end

				mouse.Move:connect(updateRGB)

				mouse.Button1Down:connect(function()mouse1Down = true end)
				mouse.Button1Up:connect(function()mouse1Down = false end)

				function ColorModule:GetColor()
					return preview.BackgroundColor3
				end
				function ColorModule:SetColor(R,G,B)
					e.BackgroundColor3 = Color3.new(R,G,B)
					Callback(e.BackgroundColor3)
				end

				return ColorModule
			end

			return SettingsModule
		end

		return ToggleModule
	end

	function TabModule:NewButton(Text,Callback)
		if type(Text) == ""string"" then
		else
			mod:Notify(""Invalid Arg"",""NewButton 'Text'"")
			return
		end
		if type(Callback) == ""function"" then
		else
			mod:Notify(""Invalid Arg"",""NewButton 'Callback'"")
			return
		end
		local ButtonModule = {}
		local a =Button:Clone()
		a.Text = Text
		a.Parent = c:FindFirstChild(""Frame"")
		for _, v in ipairs(a:FindFirstChild(""Settings""):GetChildren()) do
			if v.Name ~= ""UIListLayout"" then
				v:Destroy()
			end
		end
		a.MouseButton1Click:Connect(function()
			Callback()
		end)
		a.MouseButton2Click:Connect(function()
			for _, Tabs in ipairs(Screen:GetChildren()) do
				for _, ButtonFrames in ipairs(Tabs:GetChildren()) do
					for _, Buttons in ipairs(ButtonFrames:GetChildren()) do
						if Buttons.Name == ""Button"" then 
							if Buttons ~= a then
								Buttons.Settings.Visible = false 
							end
						end
					end
				end
			end
			a:FindFirstChild(""Settings"").Visible = not a:FindFirstChild(""Settings"").Visible
		end)
		a:FindFirstChild(""Settings"").ChildAdded:Connect(function()
			a:FindFirstChild(""Settings"").Size = UDim2.new(0,100,0,25*#a:FindFirstChild(""Settings""):GetChildren()-25)
		end)
		a:FindFirstChild(""Settings"").ChildRemoved:Connect(function()
			a:FindFirstChild(""Settings"").Size = UDim2.new(0,100,0,25*#a:FindFirstChild(""Settings""):GetChildren()-25)
		end)
		function ButtonModule:ButtonCallback()
			Callback()
		end
		
		function ButtonModule:Settings()
			local SettingsModule = {}

			function SettingsModule:Toggle(Text, Callback)
				if type(Text) == ""string"" then
				else
					mod:Notify(""Invalid Arg"",""Toggle 'Text'"")
					return
				end
				if type(Callback) == ""function"" then
				else
					mod:Notify(""Invalid Arg"",""Toggle 'Callback'"")
					return
				end
				local ToggleSettingsModule = {}
				local e =Toggle:Clone()
				e.Text = ""      ""..Text
				e.Parent = a:FindFirstChild(""Settings"")
				e.MouseButton1Click:Connect(function()
					if e.BackgroundColor3 == Color3.fromRGB(0, 84, 209) then
						e.BackgroundColor3 = Color3.fromRGB(0,0,0)
						Callback(false)
					else
						e.BackgroundColor3 = Color3.fromRGB(0, 84, 209)
						Callback(true)
					end
				end)
				function ToggleSettingsModule:GetToggleState()
					if e.BackgroundColor3 == Color3.fromRGB(0,0,0) then
						return false
					else
						return true
					end
				end
				function ToggleSettingsModule:OnToggle()
					Callback(true)
					e.BackgroundColor3 = Color3.fromRGB(0, 84, 209)
				end
				function ToggleSettingsModule:OffToggle()
					Callback(false)
					e.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
				end

				return ToggleSettingsModule
			end
			function SettingsModule:Slider(Text,Min,Max,Float,Callback)
				if type(Text) ~= ""string"" then
					mod:Notify(""Invalid Arg"",""Slider 'Text'"")
					return
				end
				if type(Min) ~= ""number"" then
					mod:Notify(""Invalid Arg"", ""Slider 'MinValue'"")
					return
				end
				if type(Max) ~= ""number"" then
					mod:Notify(""Invalid Arg"", ""Slider 'MaxValue'"")
					return
				end
				if type(Callback) ~= ""function"" then
					mod:Notify(""Invalid Arg"", ""Slider 'Callback'"")
					return
				end
				if type(Float) ~= ""boolean"" then
					mod:Notify(""Invalid Arg"", ""Slider 'Float'"")
					return
				end
				local SliderModule = {}

				-- Clone the slider and set its initial properties
				local t = Slider:Clone()
				t.Parent = a:FindFirstChild(""Settings"")
				t.TextLabel.Text = Text
				local int = Instance.new(""NumberValue"")
				int.Parent = t
				int.Value = 0
				local UIS = game:GetService(""UserInputService"")

				local knob = t.Frame.Frame
				local FOVLabel = t.TextLabel
				local knobGrabbed = false
				function SliderModule:GetSliderValue()
					return int.Value
				end
				local camera = workspace.CurrentCamera

				local function GrabFOVKnob()
					for _, v in ipairs(Screen:GetChildren()) do
						for _, c in ipairs(v:GetChildren()) do
							for _, b in ipairs(c:GetChildren()) do
								if b.Name == ""Button"" then
									b.Interactable = false
								end
							end
						end
					end
					knobGrabbed = true
				end

				local function MoveFOVKnob(screenPosition)
					local yDiff = screenPosition.X - t.Frame.AbsolutePosition.X
					local knobPositionRatio = math.min(math.max(yDiff / t.Frame.AbsoluteSize.X, 0), 1)
					local Maximum = Max-Min
					local newFOV = Min+Maximum * (0 + knobPositionRatio)
					knob.Position = UDim2.new(knobPositionRatio, -7, 0, -2)
					if Float == true then
						FOVLabel.Text = newFOV
						Callback(newFOV)
						int.Value = newFOV
					else
						Callback(math.floor(newFOV))
						FOVLabel.Text = math.floor(newFOV)
						int.Value = math.floor(newFOV)
					end
				end

				local function ReleaseFOVKnob()
					for _, v in ipairs(Screen:GetChildren()) do
						for _, c in ipairs(v:GetChildren()) do
							for _, b in ipairs(c:GetChildren()) do
								if b.Name == ""Button"" then
									b.Interactable = true
								end
							end
						end
					end
					knobGrabbed = false
					task.spawn(function()
						wait(3)
						FOVLabel.Text = Text
					end)
				end

				knob.InputBegan:connect(function(input)
					if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
						GrabFOVKnob()
					end
				end)

				UIS.InputChanged:connect(function(input, gameProcessedEvent)
					if (not gameProcessedEvent and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) and knobGrabbed) then
						MoveFOVKnob(input.Position)
					end
				end)

				UIS.InputEnded:connect(function(input, gameProcessedEvent)
					if (not gameProcessedEvent and input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
						ReleaseFOVKnob()
					end
				end)

				return SliderModule
			end
			function SettingsModule:Input(Placeholder, Callback)
				if Placeholder then
					if type(Placeholder) ~= ""string"" then
						mod:Notify(""Invalid Arg"",""Input 'Placeholder'"")
						return
					end
				end
				if type(Callback) ~= ""function"" then
					mod:Notify(""Invalid Arg"",""Input 'Callback'"")
					return
				end
				local e = Bind:Clone()
				e.Parent = a:FindFirstChild(""Settings"")
				e.TextWrapped = true
				e.Name = ""Input""
				e.PlaceholderText = Placeholder
				local InputModule = {}
				function InputModule:SetInput(input)
					if type(input) ~= ""string"" then
						mod:Notify(""Invalid Arg"",""SetInput 'input'"")
						return
					end
					e.Text = input
				end
				function InputModule:GetInputText()
					return e.Text
				end
				e.FocusLost:Connect(function(enterpressed)
					Callback(enterpressed, e.Text)
				end)

				return InputModule
			end
			function SettingsModule:Bind(Key)
				if Key then
					if type(Key) == ""string"" then
					else
						mod:Notify(""Invalid Arg"",""Bind 'Key'"")
						return
					end
				end
				Key = string.sub(Key,1,1)
				local BindModule = {}
				local e
				if a.Settings:FindFirstChild(""Bind"") then
					e = a:FindFirstChild(""Settings""):FindFirstChild(""Bind"")
				else
					e = Bind:Clone()
					e.Parent = a:FindFirstChild(""Settings"")
				end
				if Key then
					if Key == ""-"" or Key == ""_"" or Key == """" then
						e.Text = ""BIND : NONE""
					else
						e.Text = ""BIND: ""..string.upper(Key)
					end
				end
				e.Focused:Connect(function()
					e.Text = """"
				end)
				e:GetPropertyChangedSignal(""Text""):Connect(function()
					if string.len(e.Text) == 1 then
						if e.Text == ""-"" or e.Text == ""_"" then
							e.Text = ""BIND : NONE""
							e:ReleaseFocus()
						else
							e.Text = ""BIND: ""..string.upper(e.Text)
							e:ReleaseFocus()
						end
					end
				end)
				UserInputService.InputBegan:Connect(function(key, bruhh)
					if not bruhh then
						if string.len(e.Text) == 7 then
							if UserInputService:GetStringForKeyCode(key.KeyCode) == string.gsub(e.Text,""BIND: "","""") then
								if UIHack then
									if UIHack.Parent ~= nil then
										Callback()
									end
								end
							end
						end
					end
				end)
				function BindModule:GetBind()
					return string.sub(e.Text,7,7)
				end
				function BindModule:SetBind(Bind)
					if type(Bind) == ""string"" then
					else
						mod:Notify(""Invalid Arg"",""SetBind 'Bind'"")
						return
					end
					e.Text = ""BIND: ""..Bind
				end

				return BindModule
			end
			function SettingsModule:ColorPicker(Text, Callback)
				if type(Callback) == ""function"" then
				else
					mod:Notify(""Invalid Arg"",""ColorPicker 'Callback'"")
					return
				end
				if type(Text) == ""string"" then
				else
					mod:Notify(""Invalid Arg"",""ColorPicker 'Text'"")
					return
				end
				local e = ColorPicker:Clone()
				e.Parent = a:FindFirstChild(""Settings"")
				e.Text = ""      ""..Text
				e.MouseButton1Click:Connect(function()
					e.Frame.Visible = not e.Frame.Visible
				end)
				local ColorModule = {}

				local player = game.Players.LocalPlayer
				local mouse = player:GetMouse()

				local rgb = e:WaitForChild(""Frame""):WaitForChild(""RGB"")
				local value = e:WaitForChild(""Frame""):WaitForChild(""Value"")
				local preview = e:WaitForChild(""Frame""):WaitForChild(""Preview"")

				e:WaitForChild(""Frame""):WaitForChild(""OK"").MouseButton1Click:Connect(function()
					e.Frame.Visible = false
					e.BackgroundColor3 = preview.BackgroundColor3
					Callback(e.BackgroundColor3)
				end)

				local selectedColor = Color3.fromHSV(1,1,1)
				local colorData = {1,1,1}

				local mouse1Down = false

				local function setColor(hue,sat,val)
					colorData = {hue or colorData[1],sat or colorData[2],val or colorData[3]}
					selectedColor = Color3.fromHSV(colorData[1],colorData[2],colorData[3])
					preview.BackgroundColor3 = selectedColor
					value.ImageColor3 = Color3.fromHSV(colorData[1],colorData[2],1)
				end

				local function inBounds(frame)
					local x,y = mouse.X - frame.AbsolutePosition.X,mouse.Y - frame.AbsolutePosition.Y
					local maxX,maxY = frame.AbsoluteSize.X,frame.AbsoluteSize.Y
					if x >= 0 and y >= 0 and x <= maxX and y <= maxY then
						return x/maxX,y/maxY
					end
				end

				local function updateRGB()
					if mouse1Down then
						local x,y = inBounds(rgb)
						if x and y then
							rgb:WaitForChild(""Marker"").Position = UDim2.new(x,0,y,0)
							setColor(1 - x,1 - y)
						end

						local x,y = inBounds(value)
						if x and y then
							value:WaitForChild(""Marker"").Position = UDim2.new(0.5,0,y,0)
							setColor(nil,nil,1 - y)
						end
					end
				end

				mouse.Move:connect(updateRGB)

				mouse.Button1Down:connect(function()mouse1Down = true end)
				mouse.Button1Up:connect(function()mouse1Down = false end)

				function ColorModule:GetColor()
					return preview.BackgroundColor3
				end
				function ColorModule:SetColor(R,G,B)
					e.BackgroundColor3 = Color3.new(R,G,B)
					Callback(e.BackgroundColor3)
				end

				return ColorModule
			end

			return SettingsModule
		end

		return ButtonModule
	end

	return TabModule
end

function mod:Findplr(str,except)
	local list = game.Players:GetChildren()
	local plrs = {}
	if except == true then
		for _, i in ipairs(list) do
			if string.lower(string.sub(i.Name,1,string.len(str))) == string.lower(str) then
			elseif string.lower(string.sub(i.DisplayName,1,string.len(str))) == string.lower(str) then
			else
				table.insert(plrs,i.Name)
			end
		end
	else
		for _, i in ipairs(list) do
			if string.find(string.lower(string.sub(i.Name,1,string.len(str))), string.lower(str)) then
				table.insert(plrs,i.Name)
			elseif string.find(string.lower(string.sub(i.DisplayName,1,string.len(str))), string.lower(str)) then
				table.insert(plrs,i.Name)
			end
		end
	end
	return plrs
end

function mod:messagebox(Title,Context,Callback)
	if type(Title) == ""string"" then
	else
		mod:Notify(""Invalid Arg"",""messagebox 'Text'"")
		return
	end
	if type(Context) == ""string"" then
	else
		mod:Notify(""Invalid Arg"",""messagebox 'Text'"")
		return
	end
	if type(Callback) == ""function"" then
	else
		mod:Notify(""Invalid Arg"",""messagebox 'Text'"")
		return
	end

	local e = msgbox:Clone()
	e.Parent = UIHack
	e.Visible = true
	e:FindFirstChild(""TextButton"").MouseButton1Click:Connect(function()
		Callback()
		e:Destroy()
	end)
	local gui = e
	e:WaitForChild(""client"").Text = Title
	e:FindFirstChild(""TextLabel"").Text = Context
	local dragging
	local dragInput
	local dragStart
	local startPos

	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end

	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					game:GetService(""GuiService"").TouchControlsEnabled = true
					dragging = false
				end
			end)
		end
	end)

	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			game:GetService(""GuiService"").TouchControlsEnabled = false
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end
function mod:Destroy()
	for _, v in ipairs(Screen:GetChildren()) do
		for _, c in ipairs(v:GetChildren()) do
			for _, b in ipairs(c:GetChildren()) do
				if b.Name == ""Button"" then
					b.BackgroundColor3 = Color3.fromRGB(0,0,0)
				end
			end
		end
	end
	game:GetService(""UserInputService"").MouseIconEnabled = true
	wait()
	UIHack.Parent = nil
end


--Twizzy:Findplr(Shortened player name, Except: true or false)
--Twizzy:Notify(Text,Description)
--Twizzy:NewTab(Name)
----Tab:HideTab()
----Tab:ShowTab()
----Tab:NewToggle(Text,function(ToggleState)
--------Print ToggleState
----end)
------NewToggle:GetToggleState() --true,false
------NewToggle:OnToggle()
------NewToggle:OffToggle()
------NewToggle:Settings()

--------:Toggle(Text,function(ToggleState)
------------Print ToggleState
--------end)
----------:GetToggleState()
----------:OnToggle()
----------:OffToggle()

--------:Slider(Text,Min,Max,Float(true or false),function(NewValue)
------------Print NewValue
--------end)
----------:GetSliderValue()

--------:Input(Placeholder,function(NewInput)
------------Print NewInput
--------end)
----------:GetInputText()
----------:SetInput()

--------:Bind(""F"")
----------:GetBind()
----------:SetBind(""T"")

--------:ColorPicker(Text,function(NewColor)
------------Print NewColor
--------end)
----------:GetColor()
----------:SetColor(255,255,255)

----Tab:NewButton(Text,function(ToggleState)
--------Print ToggleState
----end)
------NewButton:Settings()

--------:Toggle(Text,function(ToggleState)
------------Print ToggleState
--------end)
----------:GetToggleState()
----------:OnToggle()
----------:OffToggle()

--------:Slider(Text,Min,Max,Float(true or false),function(NewValue)
------------Print NewValue
--------end)
----------:GetSliderValue()

--------:Input(Placeholder,function(NewInput)
------------Print NewInput
--------end)
----------:GetInputText()
----------:SetInput()

--------:Bind(""F"")
----------:GetBind()
----------:SetBind(""T"")

--------:ColorPicker(Text,function(NewColor)
------------Print NewColor
--------end)
----------:GetColor()
----------:SetColor(255,255,255)

--Twizzy:messagebox(Title,Context,Callback)

local Misc = mod:NewTab(""Misc"")
Misc:NewButton(""Load Explorer"", function()
	loadstring(game:HttpGet(""https://raw.githubusercontent.com/infyiff/backup/main/dex.lua""))()
end)
Misc:NewButton(""Load Old Dex"", function()
	local getobjects = function(a)
		local Objects = {}
		if a then
			local b = InsertService:LoadLocalAsset(a)
			if b then 
				table.insert(Objects, b) 
			end
		end
		return Objects
	end

	local Dex = getobjects(""rbxassetid://10055842438"")[1]
	Dex.Parent = Parent

	local function Load(Obj, Url)
		local function GiveOwnGlobals(Func, Script)
			-- Fix for this edit of dex being poorly made
			-- I (Alex) would like to commemorate whoever added this dex in somehow finding the worst dex to ever exist
			local Fenv, RealFenv, FenvMt = {}, {
				script = Script,
				getupvalue = function(a, b)
					return nil -- force it to use globals
				end,
				getreg = function() -- It loops registry for some idiotic reason so stop it from doing that and just use a global
					return {} -- force it to use globals
				end,
				getprops = getprops or function(inst)
					if getproperties then
						local props = getproperties(inst)
						if props[1] and gethiddenproperty then
							local results = {}
							for _,name in pairs(props) do
								local success, res = pcall(gethiddenproperty, inst, name)
								if success then
									results[name] = res
								end
							end

							return results
						end

						return props
					end

					return {}
				end
			}, {}
			FenvMt.__index = function(a,b)
				return RealFenv[b] == nil and getgenv()[b] or RealFenv[b]
			end
			FenvMt.__newindex = function(a, b, c)
				if RealFenv[b] == nil then 
					getgenv()[b] = c 
				else 
					RealFenv[b] = c 
				end
			end
			setmetatable(Fenv, FenvMt)
			pcall(setfenv, Func, Fenv)
			return Func
		end

		local function LoadScripts(_, Script)
			if Script:IsA(""LocalScript"") then
				task.spawn(function()
					GiveOwnGlobals(loadstring(Script.Source,""=""..Script:GetFullName()), Script)()
				end)
			end
			table.foreach(Script:GetChildren(), LoadScripts)
		end

		LoadScripts(nil, Obj)
	end

	Load(Dex)
end)
Misc:NewButton(""Simple Spy v3"", function()
	loadstring(game:HttpGet(""https://raw.githubusercontent.com/infyiff/backup/main/SimpleSpyV3/main.lua""))()
end)
local jobset
local job
job = Misc:NewButton(""Job Id"", function()
	mod:Notify(""Job Id"",game.JobId)
	if jobset:GetToggleState() == true then
		setclipboard(game.JobId)
	end
end)
jobset = job:Settings():Toggle(""Copy To Clipboard"", function()

end)
Misc:NewButton(""Audio Logger"", function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/infyiff/backup/main/audiologger.lua'),true))()
end)
local rejoin
local auto
rejoin = Misc:NewButton(""Rejoin"", function()
	if #game.Players:GetPlayers() <= 1 then
		game.Players.LocalPlayer:Kick(""\nRejoining..."")
		wait()
		game:GetService(""TeleportService""):Teleport(game.PlaceId, game.Players.LocalPlayer)
	else
		game:GetService(""TeleportService""):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
	end
end)
auto = rejoin:Settings():Toggle(""Rejoin When Kicked"",function(toggle)
	
end)
game:GetService(""GuiService"").ErrorMessageChanged:Connect(function()
	if auto:GetToggleState() == true then
		rejoin:ButtonCallback()
	end
end)
game.Players.LocalPlayer.OnTeleport:Connect(function(State)
	if queueteleport then
		queueteleport(""loadstring(game:HttpGet('https://pastebin.com/QByzwmRC'))()"")
	end
end)
Misc:NewButton(""Server Hop"", function()
	if httprequest then
		local servers = {}
		local req = httprequest({Url = string.format(""https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true"", PlaceId)})
		local body = game:GetService(""HttpService""):JSONDecode(req.Body)

		if body and body.data then
			for i, v in next, body.data do
				if type(v) == ""table"" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
					table.insert(servers, 1, v.id)
				end
			end
		end

		if #servers > 0 then
			game:GetService(""TeleportService""):TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)], game.Players.LocalPlayer)
		else
			return mod:Notify(""Serverhop"", ""Couldn't find a server."")
		end
	else
		mod:Notify(""Incompatible Exploit"", ""Your exploit does not support this command (missing request)"")
	end
end)
local core = Misc:NewButton(""CoreGui Settings"", function()
end)
local cores = core:Settings()
local a1 =cores:Toggle(""Inventory"",function(Toggle)
	game:GetService(""StarterGui""):SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, Toggle)
end)
local a2 =cores:Toggle(""Playerlist"",function(Toggle)
	game:GetService(""StarterGui""):SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, Toggle)
end)
local a3 =cores:Toggle(""Chat"",function(Toggle)
	game:GetService(""StarterGui""):SetCoreGuiEnabled(Enum.CoreGuiType.Chat, Toggle)
end)
local a4 =cores:Toggle(""Reset"",function(Toggle)
	game:GetService(""StarterGui""):SetCore(""ResetButtonCallback"", Toggle)
end)
local a5= cores:Toggle(""Emotes"",function(Toggle)
	game:GetService(""StarterGui""):SetCoreGuiEnabled(Enum.CoreGuiType.EmotesMenu, Toggle)
end)
local a6= cores:Toggle(""Health"",function(Toggle)
	game:GetService(""StarterGui""):SetCoreGuiEnabled(Enum.CoreGuiType.Health, Toggle)
end)
local a7= cores:Toggle(""Captures"",function(Toggle)
	game:GetService(""StarterGui""):SetCoreGuiEnabled(Enum.CoreGuiType.Captures, Toggle)
end)
cores:Toggle(""All"",function(Toggle)
	if Toggle == true then
		a1:OnToggle()
		a2:OnToggle()
		a3:OnToggle()
		a4:OnToggle()
		a5:OnToggle()
		a6:OnToggle()
		a7:OnToggle()
	else
		a1:OffToggle()
		a2:OffToggle()
		a3:OffToggle()
		a4:OffToggle()
		a5:OffToggle()
		a6:OffToggle()
		a7:OffToggle()
	end
	game:GetService(""StarterGui""):SetCoreGuiEnabled(Enum.CoreGuiType.All, Toggle)
end)
local notif
local notiff
notif = Misc:NewButton(""Notify"", function()
	mod:Notify(""Notification"",notiff:GetInputText())
end)
notiff = notif:Settings():Input(""Notify"", function()
end)
Misc:NewButton(""game:Leave()"", function()
	game:Shutdown()
end):Settings():Bind("""")

function randomString()
	local length = math.random(10,20)
	local array = {}
	for i = 1, length do
		array[i] = string.char(math.random(32, 126))
	end
	return table.concat(array)
end
local floatName = randomString()
local Noclipping = nil
local Clip = nil
local Char = mod:NewTab(""Movement"")
local noclip
local vnoclip
noclip = Char:NewToggle(""Noclip"", function(togglestate)
	if togglestate == true then
		Clip = false
		wait(0.1)
		local function NoclipLoop()
			if Clip == false and game.Players.LocalPlayer.Character ~= nil then
				for _, child in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
					if child:IsA(""BasePart"") and child.CanCollide == true and child.Name ~= floatName then
						child.CanCollide = false
					end
				end
			end
		end
		Noclipping = game:GetService(""RunService"").Stepped:Connect(NoclipLoop)
	else
		if Noclipping then
			Noclipping:Disconnect()
		end
		Clip = true
	end
end)
noclip:Settings():Bind(""-"")

local float
local Floating
float = Char:NewToggle(""Float"", function(togglestate)
	if togglestate == true then
		Floating = true
		local pchar = game.Players.LocalPlayer.Character
		if pchar and not pchar:FindFirstChild(floatName) then
			task.spawn(function()
				local Float = Instance.new('Part')
				Float.Name = floatName
				Float.Parent = pchar
				Float.Transparency = 1
				Float.Size = Vector3.new(2,0.2,1.5)
				Float.Anchored = true
				local FloatValue = -3.1
				Float.CFrame = pchar:FindFirstChild(""HumanoidRootPart"").CFrame * CFrame.new(0,FloatValue,0)
				mod:Notify('Float','Float Enabled (Q = down & E = up)')
				qUp = game.Players.LocalPlayer:GetMouse().KeyUp:Connect(function(KEY)
					if KEY == 'q' then
						FloatValue = FloatValue + 0.5
					end
				end)
				eUp = game.Players.LocalPlayer:GetMouse().KeyUp:Connect(function(KEY)
					if KEY == 'e' then
						FloatValue = FloatValue - 0.5
					end
				end)
				qDown = game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(KEY)
					if KEY == 'q' then
						FloatValue = FloatValue - 0.5
					end
				end)
				eDown = game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(KEY)
					if KEY == 'e' then
						FloatValue = FloatValue + 0.5
					end
				end)
				floatDied = game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').Died:Connect(function()
					FloatingFunc:Disconnect()
					Float:Destroy()
					qUp:Disconnect()
					eUp:Disconnect()
					qDown:Disconnect()
					eDown:Disconnect()
					floatDied:Disconnect()
				end)
				local function FloatPadLoop()
					if pchar:FindFirstChild(floatName) and pchar:FindFirstChild(""HumanoidRootPart"") then
						Float.CFrame = pchar:FindFirstChild(""HumanoidRootPart"").CFrame * CFrame.new(0,FloatValue,0)
					else
						FloatingFunc:Disconnect()
						Float:Destroy()
						qUp:Disconnect()
						eUp:Disconnect()
						qDown:Disconnect()
						eDown:Disconnect()
						floatDied:Disconnect()
					end
				end			
				FloatingFunc = game:GetService(""RunService"").Heartbeat:Connect(FloatPadLoop)
			end)
		end
	else
		Floating = false
		local pchar = game.Players.LocalPlayer.Character
		mod:Notify('Float','Float Disabled')
		if pchar:FindFirstChild(floatName) then
			pchar:FindFirstChild(floatName):Destroy()
		end
		if floatDied then
			FloatingFunc:Disconnect()
			qUp:Disconnect()
			eUp:Disconnect()
			qDown:Disconnect()
			eDown:Disconnect()
			floatDied:Disconnect()
		end
	end
end)
float:Settings():Bind("""")
local swim
swimming = false
swim = Char:NewToggle(""Swim"", function(togglestate)
	if togglestate == true then
		if not swimming and game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildWhichIsA(""Humanoid"") then
			oldgrav = workspace.Gravity
			workspace.Gravity = 0
			local swimDied = function()
				workspace.Gravity = oldgrav
				swimming = false
			end
			local Humanoid = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA(""Humanoid"")
			gravReset = Humanoid.Died:Connect(swimDied)
			local enums = Enum.HumanoidStateType:GetEnumItems()
			table.remove(enums, table.find(enums, Enum.HumanoidStateType.None))
			for i, v in pairs(enums) do
				Humanoid:SetStateEnabled(v, false)
			end
			Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
			swimbeat = game:GetService(""RunService"").Heartbeat:Connect(function()
				pcall(function()
					game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = ((Humanoid.MoveDirection ~= Vector3.new() or UserInputService:IsKeyDown(Enum.KeyCode.Space)) and speaker.Character.HumanoidRootPart.Velocity or Vector3.new())
				end)
			end)
			swimming = true
		end
	else
		if game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildWhichIsA(""Humanoid"") then
			workspace.Gravity = oldgrav
			swimming = false
			if gravReset then
				gravReset:Disconnect()
			end
			if swimbeat ~= nil then
				swimbeat:Disconnect()
				swimbeat = nil
			end
			local Humanoid = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA(""Humanoid"")
			local enums = Enum.HumanoidStateType:GetEnumItems()
			table.remove(enums, table.find(enums, Enum.HumanoidStateType.None))
			for i, v in pairs(enums) do
				Humanoid:SetStateEnabled(v, true)
			end
		end
	end
end)
swim:Settings():Bind("""")
local fly
local flyspeed
local nowe = false
local speeds
local tpwalking
local ctrl
local lastctrl
local speed
local bg
local bv
local plr
fly = Char:NewToggle(""Flight"", function(Toggle)
	if Toggle == true then
		speaker = game.Players.LocalPlayer
		speeds = 1
		if nowe == true then
			nowe = false

			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
			speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
		else 
			nowe = true



			for i = 1, speeds do
				spawn(function()

					local hb = game:GetService(""RunService"").Heartbeat	


					tpwalking = true
					local chr = game.Players.LocalPlayer.Character
					local hum = chr and chr:FindFirstChildWhichIsA(""Humanoid"")
					while tpwalking and hb:Wait() and chr and hum and hum.Parent do
						if hum.MoveDirection.Magnitude > 0 then
							chr:TranslateBy(hum.MoveDirection)
						end
					end

				end)
			end
			game.Players.LocalPlayer.Character.Animate.Disabled = true
			local Char = game.Players.LocalPlayer.Character
			local Hum = Char:FindFirstChildOfClass(""Humanoid"") or Char:FindFirstChildOfClass(""AnimationController"")

			for i,v in next, Hum:GetPlayingAnimationTracks() do
				v:AdjustSpeed(0)
			end
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
			speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
		end




		if game:GetService(""Players"").LocalPlayer.Character:FindFirstChildOfClass(""Humanoid"").RigType == Enum.HumanoidRigType.R6 then



			plr = game.Players.LocalPlayer
			local torso = plr.Character.Torso
			local flying = true
			local deb = true
			ctrl = {f = 0, b = 0, l = 0, r = 0}
			lastctrl = {f = 0, b = 0, l = 0, r = 0}
			local maxspeed = 10
			speed = 0


			bg = Instance.new(""BodyGyro"", torso)
			bg.P = 9e4
			bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			bg.cframe = torso.CFrame
			local bv = Instance.new(""BodyVelocity"", torso)
			bv.velocity = Vector3.new(0,0.1,0)
			bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
			if nowe == true then
				plr.Character.Humanoid.PlatformStand = true
			end
			while nowe == true or game:GetService(""Players"").LocalPlayer.Character.Humanoid.Health == 0 do
				game:GetService(""RunService"").RenderStepped:Wait()

				if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
					speed = speed+.5+(speed/maxspeed)
					if speed > maxspeed then
						speed = maxspeed
					end
				elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
					speed = speed-1
					if speed < 0 then
						speed = 0
					end
				end
				if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
					lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
				elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				else
					bv.velocity = Vector3.new(0,0,0)
				end
				--	game.Players.LocalPlayer.Character.Animate.Disabled = true
				bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
			end
			ctrl = {f = 0, b = 0, l = 0, r = 0}
			lastctrl = {f = 0, b = 0, l = 0, r = 0}
			speed = 0
			bg:Destroy()
			bv:Destroy()
			plr.Character.Humanoid.PlatformStand = false
			game.Players.LocalPlayer.Character.Animate.Disabled = false
			tpwalking = false
			wait()
			local Humanoid = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA(""Humanoid"")
			local enums = Enum.HumanoidStateType:GetEnumItems()
			table.remove(enums, table.find(enums, Enum.HumanoidStateType.None))
			for i, v in pairs(enums) do
				Humanoid:SetStateEnabled(v, true)
			end




		else
			plr = game.Players.LocalPlayer
			local UpperTorso = plr.Character.UpperTorso
			local flying = true
			local deb = true
			ctrl = {f = 0, b = 0, l = 0, r = 0}
			lastctrl = {f = 0, b = 0, l = 0, r = 0}
			local maxspeed = 10
			speed = 0


			bg = Instance.new(""BodyGyro"", UpperTorso)
			bg.P = 9e4
			bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			bg.cframe = UpperTorso.CFrame
			bv = Instance.new(""BodyVelocity"", UpperTorso)
			bv.velocity = Vector3.new(0,0.1,0)
			bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
			if nowe == true then
				plr.Character.Humanoid.PlatformStand = true
			end
			while nowe == true or game:GetService(""Players"").LocalPlayer.Character.Humanoid.Health == 0 do
				wait()

				if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
					speed = speed+.5+(speed/maxspeed)
					if speed > maxspeed then
						speed = maxspeed
					end
				elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
					speed = speed-1
					if speed < 0 then
						speed = 0
					end
				end
				if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
					lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
				elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				else
					bv.velocity = Vector3.new(0,0,0)
				end

				bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
			end
			ctrl = {f = 0, b = 0, l = 0, r = 0}
			lastctrl = {f = 0, b = 0, l = 0, r = 0}
			speed = 0
			bg:Destroy()
			bv:Destroy()
			plr.Character.Humanoid.PlatformStand = false
			game.Players.LocalPlayer.Character.Animate.Disabled = false
			tpwalking = false
			wait()
			local Humanoid = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA(""Humanoid"")
			local enums = Enum.HumanoidStateType:GetEnumItems()
			table.remove(enums, table.find(enums, Enum.HumanoidStateType.None))
			for i, v in pairs(enums) do
				Humanoid:SetStateEnabled(v, true)
			end


		end
	else
		nowe = false
		ctrl = {f = 0, b = 0, l = 0, r = 0}
		lastctrl = {f = 0, b = 0, l = 0, r = 0}
		speed = 0
		bg:Destroy()
		bv:Destroy()
		plr.Character.Humanoid.PlatformStand = false
		game.Players.LocalPlayer.Character.Animate.Disabled = false
		tpwalking = false
		wait()
		local Humanoid = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA(""Humanoid"")
		local enums = Enum.HumanoidStateType:GetEnumItems()
		table.remove(enums, table.find(enums, Enum.HumanoidStateType.None))
		for i, v in pairs(enums) do
			Humanoid:SetStateEnabled(v, true)
		end
	end
end)
game:GetService(""Players"").LocalPlayer.CharacterAdded:Connect(function(char)
	wait(0.7)
	game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
	game.Players.LocalPlayer.Character.Animate.Disabled = false
end)
flyspeed = fly:Settings():Slider(""FlySpeed"",1,10,false,function(val)
	if nowe == true then
		tpwalking = false
		for i = 1, speeds do
			spawn(function()

				local hb = game:GetService(""RunService"").Heartbeat	


				tpwalking = true
				local chr = game.Players.LocalPlayer.Character
				local hum = chr and chr:FindFirstChildWhichIsA(""Humanoid"")
				while tpwalking and hb:Wait() and chr and hum and hum.Parent do
					if hum.MoveDirection.Magnitude > 0 then
						chr:TranslateBy(hum.MoveDirection)
					end
				end

			end)
		end
	end
end)
local lastDeath = nil
local CharMods = mod:NewTab(""Character"")
local tp
local tpplr
tp = CharMods:NewButton(""Goto Player"", function()
	if game.Players.LocalPlayer.Character then
		game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"").CFrame = game.Players:FindFirstChild(mod:Findplr(tpplr:GetInputText())[1]).Character:FindFirstChild(""HumanoidRootPart"").CFrame + Vector3.new(0,2,0)
	end
end)

tpplr = tp:Settings():Input(""Player"",function(txt)
	local tmp = tpplr:GetInputText()
	local plr = mod:Findplr(tmp,false)[1]
	tpplr:SetInput(plr)
end)

function onDied()
	task.spawn(function()
		if pcall(function() game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') end) and game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
			game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').Died:Connect(function()
				if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then
					lastDeath = game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"").CFrame
				end
			end)
		else
			wait(2)
			onDied()
		end
	end)
end
onDied()
tp:Settings():Bind("""")
CharMods:NewButton(""Flashback"", function()
	if lastDeath ~= nil then
		if game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').SeatPart then
			game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').Sit = false
			wait(.1)
		end
		game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"").CFrame = lastDeath
	end
end):Settings():Bind("""")
CharMods:NewButton(""TP Tool"", function()
	local a=game:service'Players'.LocalPlayer
	local b=Instance.new('Tool',a.Backpack)
	local g=game:service'TweenService'
	b.RequiresHandle=false
	b.Name='Tp'

	b.Activated:Connect(function()
		a.Character.HumanoidRootPart.CFrame = CFrame.new(a:GetMouse().Hit.Position+Vector3.new(0,5,0))
	end)
end)
local fling
local touch
local flinging = false
local AntiFling = false
local flingingg
function unfling()
	noclip:OffToggle()
	if flingDied then
		flingDied:Disconnect()
	end
	flinging = false
	wait(.1)
	local speakerChar = game.Players.LocalPlayer.Character
	if not speakerChar or not game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then return end
	for i,v in pairs(game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart""):GetChildren()) do
		if v.ClassName == 'BodyAngularVelocity' then
			v:Destroy()
		end
	end
	for _, child in pairs(speakerChar:GetDescendants()) do
		if child.ClassName == ""Part"" or child.ClassName == ""MeshPart"" then
			child.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
		end
	end
end
fling = CharMods:NewToggle(""Fling"", function(toggle)
	if toggle == true then
		if touch:GetToggleState() == false then
			flinging = false
			for _, child in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
				if child:IsA(""BasePart"") then
					child.CustomPhysicalProperties = PhysicalProperties.new(100, 0.3, 0.5)
				end
			end
			noclip:OnToggle()
			wait(.1)
			local bambam = Instance.new(""BodyAngularVelocity"")
			bambam.Name = randomString()
			bambam.Parent = game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"")
			bambam.AngularVelocity = Vector3.new(0,99999,0)
			bambam.MaxTorque = Vector3.new(0,math.huge,0)
			bambam.P = math.huge
			local Char = game.Players.LocalPlayer.Character:GetChildren()
			for i, v in next, Char do
				if v:IsA(""BasePart"") then
					v.CanCollide = false
					v.Massless = true
					v.Velocity = Vector3.new(0, 0, 0)
				end
			end
			flinging = true
			local function flingDiedF()
				unfling()
			end
			flingDied = game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').Died:Connect(flingDiedF)
			repeat
				bambam.AngularVelocity = Vector3.new(0,99999,0)
				wait(.2)
				bambam.AngularVelocity = Vector3.new(0,0,0)
				wait(.1)
			until flinging == false
		end
		if touch:GetToggleState() == true then
			if not game.Players.LocalPlayer.Character then
				return mod:Notify(""You don't have a character."",""!!!"")
			end
			local rootPart = game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"")
			if not rootPart then
				return mod:Notify(""You don't have a root part."",""!!!"")
			end
			local dir = 0.1
			if flingingg == false then
				noclip:OnToggle()
				flingingg = true
				while flingingg == true and rootPart and rootPart.Parent and rootPart.Parent.Parent do
					game:GetService(""RunService"").Heartbeat:Wait()
					local velocity = rootPart.Velocity
					rootPart.Velocity = ((velocity * 10000) + Vector3.new(0, 10000, 0))
					game:GetService(""RunService"").RenderStepped:Wait()
					rootPart.Velocity = velocity
					game:GetService(""RunService"").RenderStepped:Wait()
					rootPart.Velocity = velocity + Vector3.new(0, dir, 0)
					dir *= -1
				end
				noclip:OffToggle()
				flingingg = false
			end
		end
	else
		flingingg = false
		unfling()
	end
end)
touch = fling:Settings():Toggle(""Touch Fling"", function(toggle)
end)
local humanoid
local Walkspeed
local Jumppower
local sit
local Platformstand
local gravity
local infjump
local strengthen
local spin

humanoid = CharMods:NewButton(""Humanoid"", function()

end):Settings()
wait()
Walkspeed = humanoid:Slider(""Walkspeed"",16,100,false,function(val)
	game.Players.LocalPlayer.Character:FindFirstChild(""Humanoid"").WalkSpeed = val
end)
Jumppower = humanoid:Slider(""JumpPower"",50,250,false,function(val)
	game.Players.LocalPlayer.Character:FindFirstChild(""Humanoid"").JumpPower = val
end)
sit = humanoid:Toggle(""Sit"", function(toggle)
	game.Players.LocalPlayer.Character:FindFirstChild(""Humanoid"").Sit = toggle
end)
Platformstand = humanoid:Toggle(""PlatformStand"", function(toggle)
	game.Players.LocalPlayer.Character:FindFirstChild(""Humanoid"").PlatformStand = toggle
end)
gravity = humanoid:Slider(""Gravity (196.2)"",0,1000,true,function(val)
	workspace.Gravity = val
end)
local infJump
infJumpDebounce = false
infjump = humanoid:Toggle(""InfJump"", function(toggle)
	if toggle == true then
		if infJump then infJump:Disconnect() end
		infJumpDebounce = false
		infJump = UserInputService.JumpRequest:Connect(function()
			if not infJumpDebounce then
				infJumpDebounce = true
				game.Players.LocalPlayer.Character:FindFirstChildWhichIsA(""Humanoid""):ChangeState(Enum.HumanoidStateType.Jumping)
				wait()
				infJumpDebounce = false
			end
		end)
	else
		if infJump then infJump:Disconnect() end
		infJumpDebounce = false
	end
end)
strengthen = humanoid:Slider(""Strengthen"",0,100,false,function(val)
	for _, child in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
		if child.ClassName == ""Part"" then
			child.CustomPhysicalProperties = PhysicalProperties.new(val, 0.3, 0.5)
		end
	end
end)
spin = humanoid:Slider(""Spin"",0,100,false,function(val)
	for i,v in pairs(game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart""):GetChildren()) do
		if v.Name == ""Spinning"" then
			v:Destroy()
		end
	end
	local Spin = Instance.new(""BodyAngularVelocity"")
	Spin.Name = ""Spinning""
	Spin.Parent  =game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"")
	Spin.MaxTorque = Vector3.new(0, math.huge, 0)
	Spin.AngularVelocity = Vector3.new(0,val,0)
end)
local grabtoolsFunc
CharMods:NewToggle(""GrabTools"", function(togle)
	if togle == true then
		local humanoid = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA(""Humanoid"")
		for _, child in ipairs(workspace:GetChildren()) do
			if game.Players.LocalPlayer.Character and child:IsA(""BackpackItem"") and child:FindFirstChild(""Handle"") then
				humanoid:EquipTool(child)
			end
		end

		if grabtoolsFunc then 
			grabtoolsFunc:Disconnect() 
		end

		grabtoolsFunc = workspace.ChildAdded:Connect(function(child)
			if game.Players.LocalPlayer.Character and child:IsA(""BackpackItem"") and child:FindFirstChild(""Handle"") then
				humanoid:EquipTool(child)
			end
		end)
	else
		if grabtoolsFunc then
			grabtoolsFunc:Disconnect()
		end
	end
end)



local Visual = mod:NewTab(""Visual"")
xrayEnabled = false
xray = function()
	for _, v in pairs(workspace:GetDescendants()) do
		if v:IsA(""BasePart"") and not v.Parent:FindFirstChildWhichIsA(""Humanoid"") and not v.Parent.Parent:FindFirstChildWhichIsA(""Humanoid"") then
			v.LocalTransparencyModifier = xrayEnabled and 0.5 or 0
		end
	end
end
Visual:NewToggle(""Xray"",function(toggle)
	xrayEnabled = toggle
	xray()
end):Settings():Bind("""")
local Lighting = game:GetService(""Lighting"")
oldbrightness = Lighting.Brightness
oldclocktime = Lighting.ClockTime
oldfogend = Lighting.FogEnd
oldglobalshadows = Lighting.GlobalShadows
oldoutdoor = Lighting.OutdoorAmbient
Visual:NewToggle(""Fullbright"",function(toggle)
	if toggle == true then
		Lighting.Brightness = 2
		Lighting.ClockTime = 14
		Lighting.FogEnd = 100000
		Lighting.GlobalShadows = false
		Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
	else
		Lighting.Brightness = oldbrightness
		Lighting.ClockTime = oldclocktime
		Lighting.FogEnd = oldfogend
		Lighting.GlobalShadows = oldglobalshadows
		Lighting.OutdoorAmbient = oldoutdoor
	end
end)

local fov
local fovv
fov = Visual:NewButton(""FOV Changer"", function()
end)
fovv = fov:Settings():Slider(""FOV"",50,120,false,function(val)
	workspace.Camera.FieldOfView = val
end)

Visual:NewButton(""BTools (Client)"", function()
	for i = 1, 4 do
		local Tool = Instance.new(""HopperBin"")
		Tool.BinType = i
		Tool.Name = randomString()
		Tool.Parent = game.Players.LocalPlayer:FindFirstChildOfClass(""Backpack"")
	end
end)
Visual:NewButton(""F3X (Client)"", function()
	loadstring(game:GetObjects(""rbxassetid://6695644299"")[1].Source)()
end)
Visual:NewButton(""Telekinesis"", function()
	loadstring(game:HttpGetAsync(""https://pastebin.com/raw/KbEZjNXm""))();
end)


game:GetService(""Players"").PlayerRemoving:Connect(function(plr)
	if plr == game.Players.LocalPlayer then
		local currentServer = {
			PlaceId = game.PlaceId,
			JobId = game.JobId
		}
		writefile(""lastServer.json"", game:GetService('HttpService'):JSONEncode(currentServer))
	end
end)

local Render = mod:NewTab(""Twizzy"")
local ClickGui 
ClickGui = Render:NewToggle(""ClickGui"", function(tog)
	TopBarFiil.Visible = tog
	TopBarFiil_2.Visible = tog
	Dot.Visible = tog
	game:GetService(""StarterGui""):SetCoreGuiEnabled(Enum.CoreGuiType.Chat, tog)
	game:GetService(""UserInputService"").MouseIconEnabled = not tog
end)
local Setting = ClickGui:Settings()
local bb = Setting:Bind(""G"")
ClickGui:OnToggle()
TextLabel_3.Text = ""Loaded! Press ""..bb:GetBind().."" to open / close menu. Press - to unbind button""
local execut
execut = Setting:Toggle(""Executor"", function()
	Executor.Visible = execut:GetToggleState()
end)
execut:OnToggle()

local Hudd
Hudd = Render:NewToggle(""Hud"", function()
	Hud.Visible = Hudd:GetToggleState()
end)
local lastServer
Render:NewButton(""PreviousServer"", function()
	local File = pcall(function()
		lastServer = game:GetService('HttpService'):JSONDecode(readfile(""lastServer.json""))
	end)
	if File then
		game:GetService(""TeleportService""):TeleportToPlaceInstance(lastServer.PlaceId, lastServer.JobId, game.Players.LocalPlayer)
	else
		mod:Notify(""Last server could not be found."",""Too bad."")
	end
end)
local fakekick
local reason
fakekick = Render:NewButton(""FakeKick"",function()
	game.Players.LocalPlayer:Kick(reason:GetInputText())
end)
reason = fakekick:Settings():Input(""Reason"", function(etxt)
	
end)

Render:NewButton(""Destroy UI"", function()
	mod:Destroy()
end):Settings():Bind("""")"
2ZJ26G6f,üí∏G2A.com Free Gift Card Guide May 2024üî•,atakan1983,Python,Tuesday 28th of May 2024 01:34:22 AM CDT,"G2A.com free GC & games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_0600888.pdf

Working as of:

28 May 2024"
zFQ2ZPDu,üí∏G2A.com Free Gift Card Guide May 2024,lookos13,Python,Tuesday 28th of May 2024 01:27:37 AM CDT,"G2A.com free GC & games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_0600888.pdf

Working as of:

28 May 2024"
LrK2hnNy,üí∏G2A.com Free Gift Card Guide May 2024üí∞,pestinha,Python,Tuesday 28th of May 2024 01:20:47 AM CDT,"G2A.com free GC & games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_0600888.pdf

Working as of:

28 May 2024"
cjzy24Qj,How to be a loser,kisazeky,Bash,Tuesday 28th of May 2024 01:00:33 AM CDT,"1. Burn down orphanages
2. Kick puppies
3. Spam the front page of pastebin.com with links to a gift card scam
4. ???
5. Profit?"
H815gJFk,üéâG2A.com Free Gift Card Guide May 2024üéâ,Skarface-MKL,Python,Tuesday 28th of May 2024 12:52:43 AM CDT,"G2A.com free GC & games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_9506563.pdf

Working as of:

28 May 2024"
rd4wTcH0,Untitled,etiwole,JSON,Tuesday 28th of May 2024 12:19:24 AM CDT,"[
   {
      ""guid"":""fcca1915-0673-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""13c308f3-b0ec-11ed-96d8-08f1eaf574e9"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":""2024-05-06T12:25:19.000000"",
      ""start_longitude"":""39.743462"",
      ""end_longitude"":""39.743491"",
      ""start_latitude"":""43.607696"",
      ""end_latitude"":""43.607573"",
      ""startDistance"":42.975272286214555,
      ""finishDistance"":31.357663389011048,
      ""end_date"":""2024-05-06T12:38:11.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""fcca1917-0673-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""0bb5b629-7c51-11ed-96d5-08f1eaf574e9"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":"""",
      ""start_longitude"":"""",
      ""end_longitude"":"""",
      ""start_latitude"":"""",
      ""end_latitude"":"""",
      ""startDistance"":0,
      ""finishDistance"":0,
      ""end_date"":"""",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""fcca191e-0673-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""f52e3e74-d81e-11e8-a85a-0cc47a341e07"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":""2024-05-06T15:57:55.000000"",
      ""start_longitude"":""39.743570"",
      ""end_longitude"":""39.743561"",
      ""start_latitude"":""43.607634"",
      ""end_latitude"":""43.607680"",
      ""startDistance"":32.329639929329524,
      ""finishDistance"":37.09414131344231,
      ""end_date"":""2024-05-06T16:10:05.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""fcca1916-0673-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""4dc672ed-e5bd-11ee-96e7-08f1eaf574e9"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":"""",
      ""start_longitude"":"""",
      ""end_longitude"":"""",
      ""start_latitude"":"""",
      ""end_latitude"":"""",
      ""startDistance"":0,
      ""finishDistance"":0,
      ""end_date"":"""",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""fcca191b-0673-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""d1680088-7b7e-11ed-96d5-08f1eaf574e9"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":""2024-05-06T15:24:09.000000"",
      ""start_longitude"":""39.743533"",
      ""end_longitude"":""39.743608"",
      ""start_latitude"":""43.607660"",
      ""end_latitude"":""43.607639"",
      ""startDistance"":31.685825371489393,
      ""finishDistance"":29.200104286826036,
      ""end_date"":""2024-05-06T15:36:52.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""fcca1922-0673-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""16e8aa2d-8031-11ec-96d2-08f1eaf574e9"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":""2024-05-06T13:08:16.000000"",
      ""start_longitude"":""39.743491"",
      ""end_longitude"":""39.743620"",
      ""start_latitude"":""43.607573"",
      ""end_latitude"":""43.607631"",
      ""startDistance"":31.357663389011048,
      ""finishDistance"":30.054034903918488,
      ""end_date"":""2024-05-06T13:31:46.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""fcca1923-0673-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""fdd04558-73c2-11ee-96df-08f1eaf574e9"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":""2024-05-06T15:03:54.000000"",
      ""start_longitude"":""39.743526"",
      ""end_longitude"":""39.743512"",
      ""start_latitude"":""43.607737"",
      ""end_latitude"":""43.607667"",
      ""startDistance"":42.449147906741516,
      ""finishDistance"":50.0188445527024,
      ""end_date"":""2024-05-06T15:22:56.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""fcca1918-0673-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""56171de8-7f2f-11ec-96d2-08f1eaf574e9"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":""2024-05-06T14:00:05.000000"",
      ""start_longitude"":""39.743572"",
      ""end_longitude"":""39.743538"",
      ""start_latitude"":""43.607558"",
      ""end_latitude"":""43.607637"",
      ""startDistance"":25.50250816241228,
      ""finishDistance"":34.055977838453515,
      ""end_date"":""2024-05-06T14:16:52.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""fcca1920-0673-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""a553d51f-802a-11ec-96d2-08f1eaf574e9"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":""2024-05-06T13:37:23.000000"",
      ""start_longitude"":""39.743569"",
      ""end_longitude"":""39.743572"",
      ""start_latitude"":""43.607641"",
      ""end_latitude"":""43.607558"",
      ""startDistance"":88.99416076819246,
      ""finishDistance"":79.75963501366726,
      ""end_date"":""2024-05-06T13:59:49.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""fcca191d-0673-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""73e3daa0-30f1-11ee-96de-08f1eaf574e9"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":"""",
      ""start_longitude"":"""",
      ""end_longitude"":"""",
      ""start_latitude"":"""",
      ""end_latitude"":"""",
      ""startDistance"":0,
      ""finishDistance"":0,
      ""end_date"":"""",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""fcca1924-0673-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""36cc55de-7a07-11ed-96d4-08f1eaf574e9"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":""2024-05-06T16:29:31.000000"",
      ""start_longitude"":""39.743687"",
      ""end_longitude"":""39.731792"",
      ""start_latitude"":""43.607990"",
      ""end_latitude"":""43.608327"",
      ""startDistance"":67.32079473143092,
      ""finishDistance"":971.571513017723,
      ""end_date"":""2024-05-07T11:34:00.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""fcca191f-0673-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""6fa91500-7e82-11ec-96d2-08f1eaf574e9"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":""2024-05-06T15:39:13.000000"",
      ""start_longitude"":""39.743514"",
      ""end_longitude"":""39.743635"",
      ""start_latitude"":""43.607653"",
      ""end_latitude"":""43.607641"",
      ""startDistance"":36.634718972226366,
      ""finishDistance"":30.553515198025774,
      ""end_date"":""2024-05-06T15:52:43.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""fcca1919-0673-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""d616d88c-b9c6-11ee-96e5-08f1eaf574e9"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":""2024-05-06T14:17:12.000000"",
      ""start_longitude"":""39.743492"",
      ""end_longitude"":""39.743562"",
      ""start_latitude"":""43.607631"",
      ""end_latitude"":""43.607650"",
      ""startDistance"":35.84901292342041,
      ""finishDistance"":34.17886469286147,
      ""end_date"":""2024-05-06T14:33:06.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""fcca191a-0673-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""a27a88e6-7a15-11ed-96d4-08f1eaf574e9"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":""2024-05-06T14:33:45.000000"",
      ""start_longitude"":""39.743516"",
      ""end_longitude"":""39.743407"",
      ""start_latitude"":""43.607627"",
      ""end_latitude"":""43.607682"",
      ""startDistance"":34.25787309751411,
      ""finishDistance"":44.65135673809529,
      ""end_date"":""2024-05-06T15:00:39.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""fcca191c-0673-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""79e692e7-283a-11e9-88d1-0cc47a341e07"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":""2024-05-06T16:10:52.000000"",
      ""start_longitude"":""39.743565"",
      ""end_longitude"":""39.743585"",
      ""start_latitude"":""43.607622"",
      ""end_latitude"":""43.607712"",
      ""startDistance"":31.43908934105547,
      ""finishDistance"":39.40471242564824,
      ""end_date"":""2024-05-06T16:28:51.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""fcca1921-0673-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""5c04a547-ddc3-11ed-96da-08f1eaf574e9"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":"""",
      ""start_longitude"":"""",
      ""end_longitude"":"""",
      ""start_latitude"":"""",
      ""end_latitude"":"""",
      ""startDistance"":0,
      ""finishDistance"":0,
      ""end_date"":"""",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""fcca1914-0673-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""9839c122-805c-11ed-96d6-08f1eaf574e9"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":"""",
      ""start_longitude"":"""",
      ""end_longitude"":"""",
      ""start_latitude"":"""",
      ""end_latitude"":"""",
      ""startDistance"":0,
      ""finishDistance"":0,
      ""end_date"":"""",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""e0dcd28b-0b2a-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""8b9bfabc-b04c-11ee-96e5-08f1eaf574e9"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":"""",
      ""start_longitude"":"""",
      ""end_longitude"":"""",
      ""start_latitude"":"""",
      ""end_latitude"":"""",
      ""startDistance"":0,
      ""finishDistance"":0,
      ""end_date"":"""",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""e0dcd28e-0b2a-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""f8fc0725-e141-11ee-96e7-08f1eaf574e9"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":"""",
      ""start_longitude"":"""",
      ""end_longitude"":"""",
      ""start_latitude"":"""",
      ""end_latitude"":"""",
      ""startDistance"":0,
      ""finishDistance"":0,
      ""end_date"":"""",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""e0dcd28c-0b2a-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""09347f02-c96b-11ee-96e7-08f1eaf574e9"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":"""",
      ""start_longitude"":"""",
      ""end_longitude"":"""",
      ""start_latitude"":"""",
      ""end_latitude"":"""",
      ""startDistance"":0,
      ""finishDistance"":0,
      ""end_date"":"""",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""e0dcd28d-0b2a-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""358ed1b2-e125-11ee-96e7-08f1eaf574e9"",
      ""guid_route"":""fcca1925-0673-11ef-96e8-08f1eaf574e9"",
      ""start_date"":"""",
      ""start_longitude"":"""",
      ""end_longitude"":"""",
      ""start_latitude"":"""",
      ""end_latitude"":"""",
      ""startDistance"":0,
      ""finishDistance"":0,
      ""end_date"":"""",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""ba59bbb2-0d15-11ef-96e8-08f1eaf574e9"",
      ""guid_tp"":""705f06f0-f029-11ee-96e7-08f1eaf574e9"",
      ""guid_route"":""6e969fa2-0806-11ef-96e8-08f1eaf574e9"",
      ""start_date"":""2024-05-08T16:41:43.000000"",
      ""start_longitude"":""39.760515"",
      ""end_longitude"":""37.950643"",
      ""start_latitude"":""43.582219"",
      ""end_latitude"":""44.690527"",
      ""startDistance"":232.26180199092204,
      ""finishDistance"":189984.38406471806,
      ""end_date"":""2024-05-20T10:17:50.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""741ae77d-1174-11ef-96e9-08f1eaf574e9"",
      ""guid_tp"":""fdd04558-73c2-11ee-96df-08f1eaf574e9"",
      ""guid_route"":""741ae77f-1174-11ef-96e9-08f1eaf574e9"",
      ""start_date"":""2024-05-20T15:55:56.000000"",
      ""start_longitude"":""39.743396"",
      ""end_longitude"":""39.743519"",
      ""start_latitude"":""43.607660"",
      ""end_latitude"":""43.607644"",
      ""startDistance"":50.64447363573671,
      ""finishDistance"":52.62413970349481,
      ""end_date"":""2024-05-20T16:08:00.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""81d3f88e-123d-11ef-96e9-08f1eaf574e9"",
      ""guid_tp"":""6db18626-89d6-11ec-96d2-08f1eaf574e9"",
      ""guid_route"":""81d3f895-123d-11ef-96e9-08f1eaf574e9"",
      ""start_date"":""2024-05-21T16:16:22.000000"",
      ""start_longitude"":""39.753457"",
      ""end_longitude"":""39.753452"",
      ""start_latitude"":""43.585943"",
      ""end_latitude"":""43.584796"",
      ""startDistance"":143.5407631142657,
      ""finishDistance"":42.39581230564702,
      ""end_date"":""2024-05-21T16:48:43.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""81d3f891-123d-11ef-96e9-08f1eaf574e9"",
      ""guid_tp"":""db292ebc-8419-11ec-96d2-08f1eaf574e9"",
      ""guid_route"":""81d3f895-123d-11ef-96e9-08f1eaf574e9"",
      ""start_date"":""2024-05-21T16:59:16.000000"",
      ""start_longitude"":""39.760113"",
      ""end_longitude"":""37.950643"",
      ""start_latitude"":""43.581180"",
      ""end_latitude"":""44.690527"",
      ""startDistance"":151.96280875713043,
      ""finishDistance"":190068.49383544488,
      ""end_date"":""2024-05-22T10:12:02.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""e8ac6064-1306-11ef-96e9-08f1eaf574e9"",
      ""guid_tp"":""68f9d902-c2f6-11ed-96da-08f1eaf574e9"",
      ""guid_route"":""e8ac6066-1306-11ef-96e9-08f1eaf574e9"",
      ""start_date"":""2024-05-22T16:54:13.000000"",
      ""start_longitude"":""39.760208"",
      ""end_longitude"":""39.743489"",
      ""start_latitude"":""43.581033"",
      ""end_latitude"":""43.607656"",
      ""startDistance"":652.8173890632095,
      ""finishDistance"":3788.614204749913,
      ""end_date"":""2024-05-23T12:00:11.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""e8ac605f-1306-11ef-96e9-08f1eaf574e9"",
      ""guid_tp"":""b2d68ac8-8a36-11ec-96d2-08f1eaf574e9"",
      ""guid_route"":""e8ac6066-1306-11ef-96e9-08f1eaf574e9"",
      ""start_date"":""2024-05-22T16:00:54.000000"",
      ""start_longitude"":"""",
      ""end_longitude"":"""",
      ""start_latitude"":"""",
      ""end_latitude"":"""",
      ""startDistance"":0,
      ""finishDistance"":0,
      ""end_date"":""2024-05-22T16:12:46.000000"",
      ""comment"":""\u0412 \u0442\u0442 \u043d\u0435 \u0431\u044b\u0432\u0430\u0435\u0442"",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":2,
         ""name"":""\u0417\u0432\u043e\u043d\u043e\u043a""
      }
   },
   {
      ""guid"":""d06b5636-13cf-11ef-96e9-08f1eaf574e9"",
      ""guid_tp"":""067ac571-0520-11ee-96de-08f1eaf574e9"",
      ""guid_route"":""d06b5637-13cf-11ef-96e9-08f1eaf574e9"",
      ""start_date"":""2024-05-23T15:53:17.000000"",
      ""start_longitude"":""39.745436"",
      ""end_longitude"":""39.745403"",
      ""start_latitude"":""43.631834"",
      ""end_latitude"":""43.631767"",
      ""startDistance"":16009.848676959276,
      ""finishDistance"":16005.304474176679,
      ""end_date"":""2024-05-23T16:08:49.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""d06b5631-13cf-11ef-96e9-08f1eaf574e9"",
      ""guid_tp"":""c2247168-88fc-11ec-96d2-08f1eaf574e9"",
      ""guid_route"":""d06b5637-13cf-11ef-96e9-08f1eaf574e9"",
      ""start_date"":""2024-05-23T16:52:02.000000"",
      ""start_longitude"":"""",
      ""end_longitude"":"""",
      ""start_latitude"":"""",
      ""end_latitude"":"""",
      ""startDistance"":0,
      ""finishDistance"":0,
      ""end_date"":""2024-05-24T11:58:01.000000"",
      ""comment"":""\u041f\u0440\u043e\u0431\u043a\u0438"",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":2,
         ""name"":""\u0417\u0432\u043e\u043d\u043e\u043a""
      }
   },
   {
      ""guid"":""d06b5634-13cf-11ef-96e9-08f1eaf574e9"",
      ""guid_tp"":""6bf7ccfa-89ac-11ec-96d2-08f1eaf574e9"",
      ""guid_route"":""d06b5637-13cf-11ef-96e9-08f1eaf574e9"",
      ""start_date"":""2024-05-23T16:43:11.000000"",
      ""start_longitude"":""39.740929"",
      ""end_longitude"":""39.741071"",
      ""start_latitude"":""43.618450"",
      ""end_latitude"":""43.618511"",
      ""startDistance"":55.89877871260219,
      ""finishDistance"":68.06309123616106,
      ""end_date"":""2024-05-23T16:51:38.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""d06b562f-13cf-11ef-96e9-08f1eaf574e9"",
      ""guid_tp"":""ff65148c-9269-11ed-96d6-08f1eaf574e9"",
      ""guid_route"":""d06b5637-13cf-11ef-96e9-08f1eaf574e9"",
      ""start_date"":""2024-05-23T16:15:18.000000"",
      ""start_longitude"":""39.741011"",
      ""end_longitude"":""39.740948"",
      ""start_latitude"":""43.618438"",
      ""end_latitude"":""43.618463"",
      ""startDistance"":124.92149557761897,
      ""finishDistance"":124.31171647276078,
      ""end_date"":""2024-05-23T16:35:14.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""d06b5630-13cf-11ef-96e9-08f1eaf574e9"",
      ""guid_tp"":""d0a6347c-4e67-11e6-b227-0cc47a341e07"",
      ""guid_route"":""d06b5637-13cf-11ef-96e9-08f1eaf574e9"",
      ""start_date"":""2024-05-23T16:36:19.000000"",
      ""start_longitude"":"""",
      ""end_longitude"":"""",
      ""start_latitude"":"""",
      ""end_latitude"":"""",
      ""startDistance"":0,
      ""finishDistance"":0,
      ""end_date"":""2024-05-23T16:43:04.000000"",
      ""comment"":""\u0422\u0442 \u0437\u0430\u043a\u0440\u044b\u0442\u0430"",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":2,
         ""name"":""\u0417\u0432\u043e\u043d\u043e\u043a""
      }
   },
   {
      ""guid"":""1b5cabbe-1499-11ef-96e9-08f1eaf574e9"",
      ""guid_tp"":""35096696-ece0-11ee-96e7-08f1eaf574e9"",
      ""guid_route"":""1b5cabc1-1499-11ef-96e9-08f1eaf574e9"",
      ""start_date"":""2024-05-24T15:43:37.000000"",
      ""start_longitude"":""39.938684"",
      ""end_longitude"":""39.936299"",
      ""start_latitude"":""43.434642"",
      ""end_latitude"":""43.437354"",
      ""startDistance"":770.5995006328941,
      ""finishDistance"":945.2339845293689,
      ""end_date"":""2024-05-24T16:08:02.000000"",
      ""comment"":""\u041f\u043e\u0434\u043f\u0438\u0441\u0430\u043b\u0438 \u0434\u043e\u0433\u043e\u0432\u043e\u0440"",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""1b5cabbc-1499-11ef-96e9-08f1eaf574e9"",
      ""guid_tp"":""eb7ac689-f1ae-11ee-96e7-08f1eaf574e9"",
      ""guid_route"":""1b5cabc1-1499-11ef-96e9-08f1eaf574e9"",
      ""start_date"":""2024-05-24T16:35:06.000000"",
      ""start_longitude"":""39.934112"",
      ""end_longitude"":"""",
      ""start_latitude"":""43.448064"",
      ""end_latitude"":"""",
      ""startDistance"":729.5506292671979,
      ""finishDistance"":0,
      ""end_date"":"""",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""1b5cabb2-1499-11ef-96e9-08f1eaf574e9"",
      ""guid_tp"":""873adc1b-a75b-11e8-a08b-0cc47a341e07"",
      ""guid_route"":""1b5cabc1-1499-11ef-96e9-08f1eaf574e9"",
      ""start_date"":""2024-05-24T16:08:12.000000"",
      ""start_longitude"":""39.936313"",
      ""end_longitude"":""39.925371"",
      ""start_latitude"":""43.437342"",
      ""end_latitude"":""43.444049"",
      ""startDistance"":32.68676720720115,
      ""finishDistance"":1139.0753351182511,
      ""end_date"":""2024-05-24T16:31:41.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""326c672e-162b-11ef-96ed-08f1eaf574e9"",
      ""guid_tp"":""f8fc0725-e141-11ee-96e7-08f1eaf574e9"",
      ""guid_route"":""741ae77f-1174-11ef-96e9-08f1eaf574e9"",
      ""start_date"":""2024-05-20T16:17:27.000000"",
      ""start_longitude"":""39.733529"",
      ""end_longitude"":""37.950643"",
      ""start_latitude"":""43.607897"",
      ""end_latitude"":""44.690527"",
      ""startDistance"":116.61867690805956,
      ""finishDistance"":186279.08411254233,
      ""end_date"":""2024-05-21T10:51:53.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""c8b2b0ef-f29e-490e-b188-aec67fb0a317"",
      ""guid_tp"":""79e692e7-283a-11e9-88d1-0cc47a341e07"",
      ""guid_route"":""741ae77f-1174-11ef-96e9-08f1eaf574e9"",
      ""start_date"":""2024-05-20T16:08:40.000000"",
      ""start_longitude"":""39.743466"",
      ""end_longitude"":""39.743407"",
      ""start_latitude"":""43.607657"",
      ""end_latitude"":""43.607666"",
      ""startDistance"":39.40482339840424,
      ""finishDistance"":43.36954961740278,
      ""end_date"":""2024-05-20T16:14:09.000000"",
      ""comment"":null,
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""27d9ff79-1747-11ef-96ed-08f1eaf574e9"",
      ""guid_tp"":""dd34cf5d-d1ee-11ec-96d3-08f1eaf574e9"",
      ""guid_route"":""81d3f895-123d-11ef-96e9-08f1eaf574e9"",
      ""start_date"":""2024-05-21T15:52:46.000000"",
      ""start_longitude"":""39.753495"",
      ""end_longitude"":""39.753481"",
      ""start_latitude"":""43.585982"",
      ""end_latitude"":""43.585921"",
      ""startDistance"":639.0577180006687,
      ""finishDistance"":632.6497724219819,
      ""end_date"":""2024-05-21T16:13:30.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""0f570fba-180b-11ef-96ed-08f1eaf574e9"",
      ""guid_tp"":""8bfc532b-051b-11ea-a248-0025902b0659"",
      ""guid_route"":""e8ac6066-1306-11ef-96e9-08f1eaf574e9"",
      ""start_date"":""2024-05-22T15:53:15.000000"",
      ""start_longitude"":""39.760990"",
      ""end_longitude"":""39.760980"",
      ""start_latitude"":""43.584356"",
      ""end_latitude"":""43.584327"",
      ""startDistance"":90.45870013269129,
      ""finishDistance"":93.7716277988684,
      ""end_date"":""2024-05-22T16:00:23.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""de8b374a-180b-11ef-96ed-08f1eaf574e9"",
      ""guid_tp"":""a3a79b8b-e4ff-11ee-96e7-08f1eaf574e9"",
      ""guid_route"":""e8ac6066-1306-11ef-96e9-08f1eaf574e9"",
      ""start_date"":""2024-05-22T16:14:50.000000"",
      ""start_longitude"":""39.760519"",
      ""end_longitude"":""39.760603"",
      ""start_latitude"":""43.582463"",
      ""end_latitude"":""43.582576"",
      ""startDistance"":32.24395499044687,
      ""finishDistance"":26.637225509953524,
      ""end_date"":""2024-05-22T16:52:54.000000"",
      ""comment"":"""",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   },
   {
      ""guid"":""85d65763-e5b6-4d72-b9d3-e1927242900b"",
      ""guid_tp"":""16e8aa2d-8031-11ec-96d2-08f1eaf574e9"",
      ""guid_route"":""d06b5637-13cf-11ef-96e9-08f1eaf574e9"",
      ""start_date"":""2024-05-23T12:00:18.000000"",
      ""start_longitude"":""39.743475"",
      ""end_longitude"":""39.743510"",
      ""start_latitude"":""43.607678"",
      ""end_latitude"":""43.607640"",
      ""startDistance"":40.75060375523797,
      ""finishDistance"":35.68605805930924,
      ""end_date"":""2024-05-23T12:48:45.000000"",
      ""comment"":""\u041f\u0434\u0437"",
      ""is_cancel"":false,
      ""transfer_date"":"""",
      ""enabled"":true,
      ""visitObject"":{
         
      },
      ""cancelDate"":"""",
      ""type"":{
         ""id"":1,
         ""name"":""\u041f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0435""
      }
   }
]"
wmqCtieL,renja.js,martinms,PHP,Tuesday 28th of May 2024 12:11:19 AM CDT,"window.onload = function () {
    opdSelect2('#opd');
    selectTahun();
}

function selectTahun() {
    fetch(`${base_url}admin_tahun/list`)
        .then(response => response.json())
        .then(data => {
            if (data.success == true) {
                var tahun = data.data;
                var tahunList = [
                    {
                        id: tahun.tahunSatu,
                        text: tahun.tahunSatu
                    },
                    {
                        id: tahun.tahunDua,
                        text: tahun.tahunDua
                    },
                    {
                        id: tahun.tahunTiga,
                        text: tahun.tahunTiga
                    },
                    {
                        id: tahun.tahunEmpat,
                        text: tahun.tahunEmpat
                    },
                    {
                        id: tahun.tahunLima,
                        text: tahun.tahunLima
                    }
                ];
                $('#tahun').select2({
                    data: tahunList
                });
            } else {
                cekLogin(data.data);
            }
        })
}

async function cari(id) {
    var opd = document.getElementById('opd');
    var opdSelected = opd.options[opd.selectedIndex];
    var tahun = document.getElementById('tahun');
    var tahunSelected = tahun.options[tahun.selectedIndex];

    if (opdSelected.value === 'placeholder') {
        opd.classList.add('is-invalid');
        afterSpiner(id, 'Cari', 'search');
        toastr.error('OPD belum dipilih', ""Gagal"");
        return;
    }
    if (tahunSelected.value === 'placeholder') {
        tahun.classList.add('is-invalid');
        afterSpiner(id, 'Cari', 'search');
        toastr.error('Tahun belum dipilih', ""Gagal"");
        return;
    }
    spiner(id, 'Mencari'),
        await renjaList(tahun.value, opd.value),
        afterSpiner(id, 'Cari', 'search')
}

const renjaList = async (tahun, opd) => {
    var table = document.getElementById('table-content');
    try {
        const res = await fetch(`${base_url}admin_evaluasi/renja/data/${tahun}/${opd}`);
        if (!res.ok) {
            throw new Error(""Gagal mengambil data"");
        }
        const data = await res.json();
        if (data.success === false) {
            belumAda(data.message);
            table.className = """";
            table.classList.add('card', 'd-none');
        } else {
            table.className = """";
            table.classList.add('card');
            dataAda(data.data);
        }

    } catch (error) {
        console.log(error);
        toastr.error(error, ""Terjadi kesalahan"");
    }
    // createTable(tahun, opd)
}

const belumAda = () => {
    var opd = document.getElementById('opd');
    var opdSelected = opd.options[opd.selectedIndex];
    var tahun = document.getElementById('tahun');
    var tahunSelected = tahun.options[tahun.selectedIndex];

    const content = document.getElementById('data-content');
    content.innerHTML = """";
    const div = document.createElement('div');
    div.classList.add('col-12', 'd-flex', 'justify-content-center', 'py-5', 'align-items-center');

    const span = document.createElement('span')
    span.className = ""text-center fw-semibold text-danger"";
    span.innerHTML = `${opdSelected.textContent} Belum melakukan input capaian untuk tahun ${tahunSelected.textContent} atau perencanaan belum dibuat`;
    div.appendChild(span);

    content.appendChild(div);
}

const dataAda = (data) => {
    var opd = document.getElementById('opd');
    var opdSelected = opd.options[opd.selectedIndex];
    var tahun = document.getElementById('tahun');
    var tahunSelected = tahun.options[tahun.selectedIndex];

    const content = document.getElementById('data-content');
    content.innerHTML = """";
    const div = document.createElement('div');
    div.classList.add('col-12', 'd-flex', 'justify-content-center', 'py-2', 'align-items-center');

    const span = document.createElement('span')
    span.className = ""text-center fw-semibold fs-4"";
    span.innerHTML = `Tabel Hasil Evaluasi Renja ${opdSelected.textContent} tahun ${tahunSelected.textContent} <br/> <span class=""text-warning fs-2"">""untuk melihat secara detail silahkan klik tombol Detail""</span>`;
    div.appendChild(span);
    content.appendChild(div);

    document.getElementById('tahun-target').innerHTML = tahunSelected.textContent;
    document.getElementById('tahun-target-fs').innerHTML = tahunSelected.textContent;
    document.getElementById('tahun-capaian-fs').innerHTML = tahunSelected.textContent;

    document.getElementById('title-fs').innerHTML = `${opdSelected.textContent} tahun ${tahunSelected.textContent}`;

    document.getElementById('btn-download-laporan').href = `${base_url}admin_evaluasi/renja_download/${tahun.value}/${opd.value}`

    createResult(data);
    detailTable(data);
}


function createResult(data) {
    data.forEach(function (tujuan, T) {
        if (T == 0) {
            document.getElementById('table-wrapper').innerHTML = """";
            // document.getElementById('detail-wrapper').innerHTML = """";
        }
        var namaT = `<span class=""fw-bolder"">Tujuan: </span>${enterKata(tujuan.namaTujuan, 3)}`
        parentTable(T + 1, namaT, tujuan.indikatorData.length + 1);

        // Indikator .............
        tujuan.indikatorData.forEach(indikator => {
            resultTable(indikator, tujuan.targetPaguIndikatif);
        });

        // Sararan ............
        tujuan.dataSasaran.forEach(function (sasaran, S) {
            var namaS = `<span class=""fw-bolder"">Sasaran: </span>${enterKata(sasaran.namaSasaran, 3)}`
            var kodeS = `${T + 1}.${S + 1}`;
            var lengthS = sasaran.indikatorData.length + 1;
            parentTable(kodeS, namaS, lengthS);

            // IndikatorSasran ................
            sasaran.indikatorData.forEach(indikatorS => {
                resultTable(indikatorS, sasaran.targetPaguIndikatif);
            });

            // Program .............
            sasaran.dataProgram.forEach(function (program, P) {
                var namaP = `<span class=""fw-bolder"">Program: </span>${enterKata(program.namaProgram, 3)}`
                var kodeP = `${kodeS}.${P + 1}`;
                var lengthP = program.indikatorData.length + 1;
                parentTable(kodeP, namaP, lengthP);

                // Indikator Program ...........................
                program.indikatorData.forEach(indikatorP => {
                    resultTable(indikatorP, program.targetPaguIndikatif)
                });

                // Kegiatan ........
                program.dataKegiatan.forEach(function (kegiatan, K) {
                    var namaK = `<span class=""fw-bolder"">Kegiatan: </span>${enterKata(kegiatan.namaKegiatan, 3)}`
                    var kodeK = `${kodeP}.${K + 1}`;
                    var lengthK = kegiatan.indikatorData.length + 1;
                    parentTable(kodeK, namaK, lengthK);

                    // Indikator kegiatan ...........
                    kegiatan.indikatorData.forEach(indikatorK => {
                        resultTable(indikatorK, kegiatan.targetPaguIndikatif);
                    })

                    // Sub Kegiatan .............
                    kegiatan.dataSubKegiatan.forEach(function (subKegiatan, Sk) {
                        var namaSk = `<span class=""fw-bolder"">Sub Kegiatan: </span>${enterKata(subKegiatan.namaSubKegiatan, 3)}`
                        var kodeSk = `${kodeK}.${Sk + 1}`;
                        var lengthSk = subKegiatan.indikatorData.length + 1;
                        parentTable(kodeSk, namaSk, lengthSk);
                        // tableFS(subKegiatan, kodeSk);

                        if (subKegiatan.indikatorData) {
                            // Indikator Sub Kegiatan ...........
                            subKegiatan.indikatorData.forEach(indikatorSk => {
                                var tw = subKegiatan.targetDanCapaian;
                                resultTable(indikatorSk, subKegiatan.targetPaguIndikatif, tw.TotalKinerja, tw.TotalRealisasi);
                            });
                        }
                    })
                });
            });
        });
    });
}

function parentTable(kodeData, namaData, length) {
    var table = document.getElementById('table-wrapper');
    // var detail = document.getElementById('detail-wrapper');

    var tableRow = document.createElement('tr');

    var kode = document.createElement('td');
    kode.setAttribute('rowspan', length);
    kode.className = ""align-top text-start"";
    kode.textContent = kodeData;
    tableRow.appendChild(kode);

    var nama = document.createElement('td');
    nama.setAttribute('rowspan', length);
    nama.className = ""align-top text-start"";
    nama.innerHTML = namaData;
    tableRow.appendChild(nama);

    table.appendChild(tableRow.cloneNode(true));
    // detail.appendChild(tableRow);

}

function resultTable(indikator, pagu, kinerja = null, rp = null) {
    var table = document.getElementById('table-wrapper');
    var rowIndikator = document.createElement('tr');

    var indikatorCell = document.createElement('td');
    indikatorCell.className = ""align-top text-start"";
    indikatorCell.innerHTML = indikator ? enterKata(indikator.NamaIndikator, 3) : '';
    rowIndikator.appendChild(indikatorCell);

    var targetCell = document.createElement('td');
    targetCell.className = ""align-middle"";
    targetCell.innerHTML = indikator ? indikator.target : '';
    rowIndikator.appendChild(targetCell);

    var satuanCell = document.createElement('td');
    satuanCell.className = ""align-middle"";
    satuanCell.innerHTML = indikator ? indikator.satuan : '';
    rowIndikator.appendChild(satuanCell);

    var paguCell = document.createElement('td');
    paguCell.className = ""align-middle"";
    paguCell.innerHTML = pagu == null ? '' : rpNone(pagu);
    rowIndikator.appendChild(paguCell);

    var kinerjaCell = document.createElement('td');
    kinerjaCell.className = ""align-middle"";
    kinerjaCell.innerHTML = kinerja == null ? '' : kinerja;
    rowIndikator.appendChild(kinerjaCell);

    var rpCell = document.createElement('td');
    rpCell.className = ""align-middle"";
    rpCell.innerHTML = rp == null ? '' : rp;
    rowIndikator.appendChild(rpCell);

    var realisasiCell = document.createElement('td');
    realisasiCell.id = indikator ? `real${indikator.idindikator}` : '';
    realisasiCell.className = ""align-middle"";
    realisasiCell.innerHTML = indikator ? indikator.realisasiOutcome : '';
    rowIndikator.appendChild(realisasiCell);

    var persentaseCell = document.createElement('td');
    persentaseCell.className = ""align-middle"";
    persentaseCell.innerHTML = indikator ? `${indikator.persenRealisasiOutcome}%` : '';
    rowIndikator.appendChild(persentaseCell);

    table.appendChild(rowIndikator);
}

function detailTable(data) {
    data.forEach(function (tujuan, T) {
        if (T == 0) {
            document.getElementById('detail-wrapper').innerHTML = """";
            // document.getElementById('detail-wrapper').innerHTML = """";
        }
        var namaT = `<span class=""fw-bolder"">Tujuan: </span>${enterKata(tujuan.namaTujuan, 3)}`
        detailParent(T + 1, namaT, tujuan.indikatorData.length + 1);

        // Indikator .............
        tujuan.indikatorData.forEach(indikator => {
            indikatorDetail(tujuan, indikator);
        });

        // Sararan ............
        tujuan.dataSasaran.forEach(function (sasaran, S) {
            var namaS = `<span class=""fw-bolder"">Sasaran: </span>${enterKata(sasaran.namaSasaran, 3)}`
            var kodeS = `${T + 1}.${S + 1}`;
            var lengthS = sasaran.indikatorData.length + 1;
            detailParent(kodeS, namaS, lengthS);

            // IndikatorSasran ................
            sasaran.indikatorData.forEach(indikatorS => {
                indikatorDetail(sasaran, indikatorS);
            });

            // Program .............
            sasaran.dataProgram.forEach(function (program, P) {
                var namaP = `<span class=""fw-bolder"">Program: </span>${enterKata(program.namaProgram, 3)}`
                var kodeP = `${kodeS}.${P + 1}`;
                var lengthP = program.indikatorData.length + 1;
                detailParent(kodeP, namaP, lengthP);

                // Indikator Program ...........................
                program.indikatorData.forEach(indikatorP => {
                    indikatorDetail(program, indikatorP)
                });

                // Kegiatan ........
                program.dataKegiatan.forEach(function (kegiatan, K) {
                    var namaK = `<span class=""fw-bolder"">Kegiatan: </span>${enterKata(kegiatan.namaKegiatan, 3)}`
                    var kodeK = `${kodeP}.${K + 1}`;
                    var lengthK = kegiatan.indikatorData.length + 1;
                    detailParent(kodeK, namaK, lengthK);

                    // Indikator kegiatan ...........
                    kegiatan.indikatorData.forEach(indikatorK => {
                        indikatorDetail(kegiatan, indikatorK);
                    })

                    // Sub Kegiatan .............
                    kegiatan.dataSubKegiatan.forEach(function (subKegiatan, Sk) {
                        var namaSk = `<span class=""fw-bolder"">Sub Kegiatan: </span>${enterKata(subKegiatan.namaSubKegiatan, 3)}`
                        var kodeSk = `${kodeK}.${Sk + 1}`;
                        var lengthSk = subKegiatan.indikatorData.length + 1;
                        detailParent(kodeSk, namaSk, lengthSk);
                        // tableFS(subKegiatan, kodeSk);

                        // Indikator Sub Kegiatan ...........
                        subKegiatan.indikatorData.forEach(indikatorSk => {
                            var tw = subKegiatan.targetDanCapaian;
                            indikatorDetail(subKegiatan, indikatorSk, tw);
                        })
                    })
                });
            });
        });
    });
}

function detailParent(kodeData, namaData, length) {
    var table = document.getElementById('detail-wrapper');
    // var detail = document.getElementById('detail-wrapper');

    var tableRow = document.createElement('tr');

    var kode = document.createElement('td');
    kode.setAttribute('rowspan', length);
    kode.className = ""align-top text-start"";
    kode.textContent = kodeData;
    tableRow.appendChild(kode);

    var nama = document.createElement('td');
    nama.setAttribute('rowspan', length);
    nama.className = ""align-top text-start"";
    nama.innerHTML = namaData;
    tableRow.appendChild(nama);

    table.appendChild(tableRow.cloneNode(true));
    // detail.appendChild(tableRow);

}

function indikatorDetail(parent, indikator, triwulan) {
    var table = document.getElementById('detail-wrapper');
    var rowIndikator = document.createElement('tr');

    var indikatorCell = document.createElement('td');
    indikatorCell.className = ""align-top text-start"";
    indikatorCell.innerHTML = indikator ? enterKata(indikator.NamaIndikator, 3) : '';
    rowIndikator.appendChild(indikatorCell);

    var targetCell = document.createElement('td');
    targetCell.className = ""align-middle"";
    targetCell.innerHTML = indikator ?indikator.target : '';
    rowIndikator.appendChild(targetCell);

    var satuanCell = document.createElement('td');
    satuanCell.className = ""align-middle"";
    satuanCell.innerHTML = indikator ?indikator.satuan:'';
    rowIndikator.appendChild(satuanCell);

    var paguCell = document.createElement('td');
    paguCell.className = ""align-middle"";
    paguCell.innerHTML = parent.targetPaguIndikatif == null ? '' : rpNone(parent.targetPaguIndikatif);
    rowIndikator.appendChild(paguCell);

    var bobotCell = document.createElement('td');
    bobotCell.className = ""align-middle"";
    bobotCell.innerHTML = (typeof triwulan !== 'undefined') ? 100 : '';
    rowIndikator.appendChild(bobotCell);

    if (typeof triwulan !== 'undefined') {
        let totalCapaianTriwulan = 0;

        for (let i = 1; i <= 4; i++) {
            triwulan.dataTriwulan[0].forEach(element => {
                if (element.triwulan === i) {
                    var targetTriwulanCell = document.createElement('td');
                    targetTriwulanCell.className = ""align-middle"";
                    targetTriwulanCell.innerHTML = element.target;
                    rowIndikator.appendChild(targetTriwulanCell);

                    var satuantargetTriwulanCell = document.createElement('td');
                    satuantargetTriwulanCell.className = ""align-middle"";
                    satuantargetTriwulanCell.innerHTML = indikator ? indikator.satuan : '';
                    rowIndikator.appendChild(satuantargetTriwulanCell);

                    var realisasiCell = document.createElement('td');
                    realisasiCell.className = ""align-middle"";
                    realisasiCell.innerHTML = element.realisasiKinerja;
                    rowIndikator.appendChild(realisasiCell);

                    var satuanrealisasiTriwulanCell = document.createElement('td');
                    satuanrealisasiTriwulanCell.className = ""align-middle"";
                    satuanrealisasiTriwulanCell.innerHTML = indikator ? indikator.satuan : '';
                    rowIndikator.appendChild(satuanrealisasiTriwulanCell);

                    var anggaranTriwulanCell = document.createElement('td');
                    anggaranTriwulanCell.className = ""align-middle"";
                    anggaranTriwulanCell.innerHTML = element.rp;
                    rowIndikator.appendChild(anggaranTriwulanCell)

                    var persenanggaranTriwulanCell = document.createElement('td');
                    persenanggaranTriwulanCell.className = ""align-middle"";
                    persenanggaranTriwulanCell.innerHTML = element.persenRealisasi;
                    rowIndikator.appendChild(persenanggaranTriwulanCell)

                    totalCapaianTriwulan += element.rp;
                }
            })
        }
        var capaianTw = document.createElement('td');
        capaianTw.className = 'align-middle'
        capaianTw.innerHTML = triwulan.TotalKinerja;
        rowIndikator.appendChild(capaianTw);

        var satuancapaianTw = document.createElement('td');
        satuancapaianTw.className = 'align-middle'
        satuancapaianTw.innerHTML = indikator ? indikator.satuan : '';
        rowIndikator.appendChild(satuancapaianTw);

        var rpCell = document.createElement('td');
        rpCell.className = 'align-middle';
        // rpCell.innerHTML = rpNone(parent.targetPaguIndikatif);
        rpCell.innerHTML = rpNone(totalCapaianTriwulan);
        rowIndikator.appendChild(rpCell);

        var persenrpCell = document.createElement('td');
        persenrpCell.className = 'align-middle';
        persenrpCell.innerHTML = triwulan.TotalRealisasi;
        rowIndikator.appendChild(persenrpCell);

        var satuanpersenrpCell = document.createElement('td');
        satuanpersenrpCell.className = 'align-middle';
        satuanpersenrpCell.innerHTML = '%';
        rowIndikator.appendChild(satuanpersenrpCell);


    } else {
        for (let i = 1; i <= 29; i++) {
            var triwulanCell = document.createElement('td');
            triwulanCell.className = ""align-middle"";
            triwulanCell.innerHTML = '';
            rowIndikator.appendChild(triwulanCell);
        }
    }

    var kinerjaOutcomeCell = document.createElement('td');
    kinerjaOutcomeCell.className = ""align-middle"";
    kinerjaOutcomeCell.innerHTML = indikator ? indikator.realisasiOutcome : '';
    rowIndikator.appendChild(kinerjaOutcomeCell);

    var satuanOutcomeCell = document.createElement('td');
    satuanOutcomeCell.className = ""align-middle"";
    satuanOutcomeCell.innerHTML = indikator ? indikator.satuan : '';
    rowIndikator.appendChild(satuanOutcomeCell);

    var persentaseCell = document.createElement('td');
    persentaseCell.className = ""align-middle"";
    persentaseCell.innerHTML =indikator ? `${indikator.persenRealisasiOutcome}%` : '';
    rowIndikator.appendChild(persentaseCell);

    var pendorongCell = document.createElement('td');
    pendorongCell.className = ""align-middle"";
    pendorongCell.innerHTML = indikator ? ((typeof indikator.faktorPendorong !== 'undefined') ? indikator.faktorPendorong : '') : '';
    rowIndikator.appendChild(pendorongCell);

    var penghambatCell = document.createElement('td');
    penghambatCell.className = ""align-middle"";
    penghambatCell.innerHTML = indikator ? ((typeof indikator.faktorPenghambat !== 'undefined') ? indikator.faktorPenghambat : '') : '';
    rowIndikator.appendChild(penghambatCell);

    var tindakLanjutCell = document.createElement('td');
    tindakLanjutCell.className = ""align-middle"";
    tindakLanjutCell.innerHTML = indikator ? ((typeof indikator.tindakLanjut !== 'undefined') ? indikator.tindakLanjut : '') : '';
    rowIndikator.appendChild(tindakLanjutCell);

    table.appendChild(rowIndikator);
}
"
5DrWKKG7,üéâG2A.com Free Gift Card Guide May 2024,Bufayez,Python,Monday 27th of May 2024 11:51:57 PM CDT,"G2A.com free GC & games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_9506563.pdf

Working as of:

28 May 2024"
MgjVDCXJ,üéâG2A.com Free Gift Card Guide May 2024üöÄ,Alfonso1119,Python,Monday 27th of May 2024 11:38:26 PM CDT,"G2A.com free GC & games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_9506563.pdf

Working as of:

28 May 2024"
LuFb4N2X,üéâG2A.com Free Gift Card Guide May 2024üí∞,Garoam,Python,Monday 27th of May 2024 11:31:41 PM CDT,"G2A.com free GC & games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_9506563.pdf

Working as of:

28 May 2024"
67X97kJM,üéâG2A.com Free Gift Card Guide May 2024üí∞,pestinha,Python,Monday 27th of May 2024 11:11:26 PM CDT,"G2A.com free GC & games updated guide.
Any item for free on G2A.com including Apple gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_9506563.pdf

Working as of:

28 May 2024"
Wc2bDWgw,Untitled,Irkutsk86,XML,Monday 27th of May 2024 11:00:48 PM CDT,"    <type name=""Mag_SV98_10Rnd"">
        <nominal>10</nominal>
        <lifetime>14400</lifetime>
        <restock>0</restock>
        <min>7</min>
        <quantmin>30</quantmin>
        <quantmax>70</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
        <value name=""Tier3""/>
        <value name=""Tier4""/>
    </type>
    <type name=""SV98"">
        <nominal>3</nominal>
        <lifetime>7200</lifetime>
        <restock>0</restock>
        <min>2</min>
        <quantmin>40</quantmin>
        <quantmax>80</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
        <value name=""Tier3""/>
        <value name=""Tier4""/>
    </type>"
5LfaKAvr,wsl2 ruby,iax,Bash,Monday 27th of May 2024 10:31:55 PM CDT,"WSL2 ubutnu ruby

Start-Date: 2024-05-27  21:14:12
Commandline: apt-get install gcc make libz-dev libffi-dev libssl-dev libyaml-dev
"
rRsxeVmz,Untitled,LynXS_,Lua,Monday 27th of May 2024 10:18:07 PM CDT,"--[[
   __ __              __          
  / //_/_____ _____  / /____  ___ 
 / ,< / __/ // / _ \/ __/ _ \/ _ \
/_/|_/_/  \_, / .__/\__/\___/_//_/
       /___/_/
       
> Direct Access | KRYPTON
]]
loadstring(game:HttpGet(""https://paste-drop.com/paste/kysRuns8mP"",true))()"
FQ291KxT,üöÄG2A.com Free Gift Card Guide May 2024üî•,Garoam,Python,Monday 27th of May 2024 10:18:02 PM CDT,"G2A.com free GC & games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_0797600.pdf

Working as of:

28 May 2024"
N3jCWT7a,kode program pengendali relay 6 channel variable,cisco404,C++,Monday 27th of May 2024 10:15:31 PM CDT,"const int relay1 = 2;
const int relay2 = 3;
const int relay3 = 4;
const int relay4 = 5;
const int relay5 = 6;
const int relay6 = 7;
const int potPin = A0; // Pin potensiometer

// -------------------------------------------
// kode program pengendali relay 6 channel variable
// www.ardukode.blogspot.com
// -------------------------------------------

int interval = 1000; // Interval dalam milidetik

void setup() {
  pinMode(relay1, OUTPUT);
  pinMode(relay2, OUTPUT);
  pinMode(relay3, OUTPUT);
  pinMode(relay4, OUTPUT);
  pinMode(relay5, OUTPUT);
  pinMode(relay6, OUTPUT);
  pinMode(potPin, INPUT);

  digitalWrite(relay1, LOW);
  digitalWrite(relay2, LOW);
  digitalWrite(relay3, LOW);
  digitalWrite(relay4, LOW);
  digitalWrite(relay5, LOW);
  digitalWrite(relay6, LOW);
}

void loop() {
  int potValue = analogRead(potPin); // Membaca nilai potensiometer
  interval = map(potValue, 0, 1023, 100, 2000); // Memetakan nilai potensiometer ke interval

  digitalWrite(relay1, HIGH);
  delay(interval);
  digitalWrite(relay1, LOW);
  delay(interval);
  
  digitalWrite(relay2, HIGH);
  delay(interval);
  digitalWrite(relay2, LOW);
  delay(interval);

  digitalWrite(relay3, HIGH);
  delay(interval);
  digitalWrite(relay3, LOW);
  delay(interval);

  digitalWrite(relay4, HIGH);
  delay(interval);
  digitalWrite(relay4, LOW);
  delay(interval);

  digitalWrite(relay5, HIGH);
  delay(interval);
  digitalWrite(relay5, LOW);
  delay(interval);

  digitalWrite(relay6, HIGH);
  delay(interval);
  digitalWrite(relay6, LOW);
  delay(interval);
}
"
5KGpZqks,üí∏G2A.com Free Gift Card Guide May 2024,atakan1983,Python,Monday 27th of May 2024 10:11:17 PM CDT,"G2A.com free GC & games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1x81p1KKCkmh5SSkfIEdkJrUs8fx8xJli/view?usp=g2a_refund_exploit_0797600.pdf

Working as of:

28 May 2024"
