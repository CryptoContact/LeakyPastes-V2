id,title,username,language,date,content
0Ffp9d5b,Untitled,drakon-firestone,Lua,Friday 20th of October 2023 01:01:05 PM CDT,"local function destroyDrop(drop)
	task.spawn(function()
		-- zapamiętaj obszar z którego pochodzi drop
		local oldParent = drop.Parent
		-- przenieś drop do folderu despawnedDrops
		drop.Parent = despawnedDrops
		-- poczekaj 4 sek
		wait(4)
		-- ustaw życie dropu na wartość maksymalną
		drop.CurrentPoints.Value = drop.MaxPoints.Value
		-- wstaw drop z powrotem do obszaru z którego pochodzi
		drop.Parent = oldParent
	end)
end
local function updateDamage()
	-- odczytaj aktualną listę petów gracza
	local playerPets = GetPlayerPets()
	-- pętla przechodząca po wszystkich petach gracza
	for _, pet in ipairs(playerPets) do
		-- ustaw ustaw target na cel ataku peta
		local attackTarget = pet.Attack.Value
		-- jeśli cel jest ustawiony (nie jest nil)
		if attackTarget then
			-- ustaw zmienną drop jako rodzica atakowego elementu
			-- (atakujemy PrimaryPart/model 3D naszego dropa)
			local drop = attackTarget.Parent
			-- ustaw zmienną currentPoints an aktualne punkty (życia) dropu
			local currentPoints = drop.CurrentPoints
			-- odejmij od punktów życia dropa wartość ataku peta
			-- jeśli wartość spadła poniżej zera - ustaw ją na z0
			currentPoints.Value = math.max(currentPoints.Value - pet.Damage.Value, 0)
			
			-- jeśli aktualne życie dropu jest równe 0:
			
			if currentPoints.Value == 0 then
				-- ustaw cel ataku petów jako pusty
				attackTarget.Value = nil
				SetAttackTarget(nil)
				-- usuń ten drop z planszy (za pomocą funkcji)
				destroyDrop()
			end
		end
	end
end


-- funkcja aktualizująca paski życia dropów na scenie
local function updateDropDisplay()
	-- pętla przechodząca po elementach w folderze drops
	for _, drop in pairs(drops:GetDescendants()) do
		-- jeśli obiekt jest modelem - czyli faktycznym dropem
		if drop:IsA(""Model"") then
			-- znajdź w dropie element o nazwie Display (jest to BilboardGui)
			local display = drop:FindFirstChild(""Display"")
			-- zmienna bar wskazuje na pasek w elemencie display
			local bar = display.Background.Bar
			-- zmienna displayText wskazuje na tekst z liczbą życia
			local displayText displayText = display.Background.Amount
			-- ustaw tekst displayText na wartość aktualnych punktów życia dropu
			displayText.Text = tostring(drop.CurrentPoints.Value)
			-- animacja paska z obecnej długości do tej 
			-- przedstawianej przez punkty życia dropu
			bar:TweenSize(
				UDim2.fromScale(drop.CurrentPoints.Value / drop.MaxPoints.Value, 1),
				Enum.EasingDirection.Out,
				Enum.EasingStyle.Sine,
				0.3)
		end
	end
end

task.spawn(function()
	while task.wait(1) do
		-- uruchom aktualizację obrażeń
		updateDamage()
		-- uruchom aktualizację pasków życia dropóW
		updateDropDisplay()
	end
end)"
sCHGmmDT,elevServer,imposiblaa,Lua,Friday 20th of October 2023 12:48:07 PM CDT,"modem = peripheral.find(""modem"")
modem.open(5296)
db = {}

    

commands = {
    alert = function(input)
        assert(type(input) == ""string"", ""helloWorld expects a string for its input"")
        print(""ALERT: "" .. input)
        return true
    end,
    
    updateStatus = function(id, dataObj)
        assert(type(id) == ""number"", ""updateStatus expects an int for \""id\"""")
        assert(type(dataObj) == ""table"", ""updateStatus expects a table for \""dataObj\"""")
        print(id)
        db[id] = dataObj
    end
}


function commandRunner(event, side, channel, replyChannel, message, distance)
    print(textutils.serialise(message))
    if commands[message.cmd] ~= nil and message.args ~= nil then
        ran, err = pcall(commands[message.cmd], table.unpack(message.args))
        if not ran then
            print((""Error in \""%s\"": %s""):format(message.cmd, err))
        end
    else
        print((""No command named \""%s\"" found""):format(message.cmd))
    end
end
    


while true do
	commandRunner(os.pullEvent(""modem_message""))
            
end"
hEwC3NAF,قرآن,napolitano2003,Python,Friday 20th of October 2023 12:44:01 PM CDT,"import os
try:
	import requests,re
except:
	os.system(""pip3 install requests"")
import requests,re

Z = '\033[1;31m' 
X = '\033[1;33m' 
Y = '\033[1;34m'
S = '\033[2;36m'
B = ""\033[1;90m""
F = '\033[2;32m'
inp = """"
nap = input(f""""""{B}  ——•——•——•——•——•——•—— 
{S}  [1]  القرآن الكريم بصوت الشيخ خالد القحطاني 
{B}  ——•——•——•——•——•——•—— 
{S}  [2]  القرآن الكريم بصوت الشيخ صلاح بو خاطر 
 {B}  ——•——•——•——•——•——•—— 
{S}  [3]  القرآن الكريم بصوت الشيخ ياسر الدوسري 
{B}  ——•——•——•——•——•——•—— 
{S}  [4]  القرآن الكريم بصوت الشيخ ابراهيم الأخضر 
{B}  ——•——•——•——•——•——•—— 
{S}  [5]  القرآن الكريم بصوت الشيخ محمد البراك 
{B}  ——•——•——•——•——•——•—— 
{S}  [6]  القرآن الكريم بصوت الشيخ هاني الرفاعي 
{B}  ——•——•——•——•——•——•—— 
{S}  [7]  القرآن الكريم بصوت الشيخ أحمد الحواشي 
{B}  ——•——•——•——•——•——•—— 
{S}  [8]  القرآن الكريم بصوت الشيخ مشاري راشد العفاسي 
{B}  ——•——•——•——•——•——•—— 
{S}  [9]  القرآن الكريم بصوت الشيخ أحمد العجمي 
{B}  ——•——•——•——•——•——•—— 
{S}  [10]  القرآن الكريم بصوت الشيخ ماهر المعيقلي 
{B}  ——•——•——•——•——•——•—— 
{S}  [11]  القرآن الكريم بصوت الشيخ محمد صديق المنشاوي 
{B}  ——•——•——•——•——•——•—— 
{S}  [12]  القرآن الكريم بصوت الشيخ عبد الباسط عبد الصمد 
{B}  ——•——•——•——•——•——•—— 
{S}  [13]  القرآن الكريم بصوت الشيخ عبد الرحمن السديس 
{B}  ——•——•——•——•——•——•—— 
{S}  [14]  القرآن الكريم بصوت الشيخ فارس عباد 
{B}  ——•——•——•——•——•——•—— 
{S}  [15]  القرآن الكريم بصوت الشيخ سعود شريم 
{Y}====================================
{Z}[~] Choose ====> """""")
print('====================================')
if nap == '1':
	inp+= ""al-qahtani""
elif nap == '2':
	inp+= ""bukhatir""
elif nap == '3':
	inp+= ""al-dosari""
elif nap == '4':
	inp+= ""abrahim-alahdr""
elif nap == ""5"":
	inp+= ""albarrak""
elif nap == ""6"":
	inp+= ""hani-alrfa3i""
elif nap == ""7"":
	inp+= ""hawashy""
elif nap == ""8"":
	inp+= ""al3fasi""
elif nap == '9':
	inp+=""al3ajame""
elif nap == '10':
	inp+=""mahear-alm3aqle""
elif nap == ""11"":
	inp+=""al-minshawi""
elif nap == ""12"":
	inp+=""abdelbasset-abdessamad""
elif nap == ""13"":
	inp+=""al-sudais""
elif nap == ""14"":
	inp+=""fares-abbad""
elif nap == ""15"":
	inp+=""saud-shuraim""



headers = {
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
    'Accept-Language': 'en-US,en;q=0.9',
    'Cache-Control': 'no-cache',
    'Connection': 'keep-alive',
    'Pragma': 'no-cache',
    'Sec-Fetch-Dest': 'document',
    'Sec-Fetch-Mode': 'navigate',
    'Sec-Fetch-Site': 'none',
    'Sec-Fetch-User': '?1',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Linux; Android 10; PPA-LX2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Mobile Safari/537.36',
    'sec-ch-ua': '""Chromium"";v=""107"", ""Not=A?Brand"";v=""24""',
    'sec-ch-ua-mobile': '?1',
    'sec-ch-ua-platform': '""Android""',
}

r = requests.get(f'https://quranmp3.jo1jo.com/{inp}.htm', headers=headers).content.decode()
#print(r.content.decode())

sura_name = re.findall(r'class=""style5"">([^<]+)',r)
sura_link = re.findall(r'href=""([^""]+)',r)
sura_link.pop(0)

for o,u in zip(sura_link,sura_name):
	link = f'https://quranmp3.jo1jo.com/{o}'
	print(X+ f""   يتم تحميل {u} ، برجاء الانتظار....."")
	d = requests.get(link).content
	open(f'{u}.mp3','wb').write(d)
	print(F+f""   تم تحميل {u}\n====================="")
	

#لا تنسانا بالدعاء ❤️"
ezma4GZH,Command Base,imposiblaa,Lua,Friday 20th of October 2023 12:42:25 PM CDT,"
globalPort = 5296

modem = peripheral.find(""modem"")
modem.open(globalPort)
db = {}

    

commands = {
    alert = function(input)
        assert(type(input) == ""string"", ""helloWorld expects a string for its input"")
        print(""ALERT: "" .. input)
        return true
    end,
}


function commandParser(event, side, channel, replyChannel, message, distance)
    print(textutils.serialise(message))
    if commands[message.cmd] ~= nil and message.args ~= nil then
        ran, err = pcall(commands[message.cmd], table.unpack(message.args))
        if not ran then
            print((""Error in \""%s\"": %s""):format(message.cmd, err))
        end
    else
        print((""No command named \""%s\"" found""):format(message.cmd))
    end
end

function commandRunner(command, arguments)
	assert(type(command) == ""string"", ""commandRunner expects a string for its input \""command\"""")
	assert(type(arguments) == ""table"", ""commandRunner expects a table for its input \""arguments\"""")
	modem.transmit(5296,5296, {cmd=command, args=arguments})
end
    


while true do
	commandParser(os.pullEvent(""modem_message""))
            
end
"
vVtYGJh4,Delete rows with low frequency values in Python,elena1234,Python,Friday 20th of October 2023 12:34:03 PM CDT,"# Delete rows with low frequency values
col = 'ap_lo' 
n = 142     
df = df[df.groupby(col)[col].transform('count').ge(n)]
df['ap_lo'].value_counts()
"
2jjnXutU,Untitled,Sreekar_0125,C++,Friday 20th of October 2023 12:27:20 PM CDT,"int fun(int target, int ball, bool pranay, map<pii, int> &dp)
{
    if(dp.count({target, ball}))
    {
        return dp[{target, ball}];
    }
    if(target <= 0) return dp[{target, ball}] = 1;
    if(ball == 7 || pranay)
    {
        return dp[{target, ball}] = target <= 0;
    }
    vi runs = {0, 1, 2, 3, 4, 6};
    int ans = 0;

    for(auto i : runs)
    {
        if(i & 1)
        {
            ans += fun(target - i, ball + 1, true, dp);
        }
        else 
        {
            ans += fun(target - i, ball + 1, false, dp);
        }
    }
    return dp[{target, ball}] = ans;
}"
TiZWkTKZ,Scam line,ProgMe,C++,Friday 20th of October 2023 12:24:02 PM CDT,"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define l first
#define r second

#define int int64_t
#define double long double

using namespace std;
using namespace __gnu_pbds;

std::mt19937_64 rnd(std::chrono::steady_clock::now().time_since_epoch().count());
std::uniform_real_distribution<double> rnd_double(0, 1);

int nextInt(int r) {  // [0; R)
    return rnd() % r;
}

int nextInt(int l, int r) {  // [L; R)
    return l + rnd() % (r - l);
}

double nextDouble() {  // [0; 1]
    return rnd_double(rnd);
}

double nextDouble(double r) {  // [0; R]
    return r * nextDouble();
}

double nextDouble(double l, double r) {  // [L; R]
    return l + (r - l) * nextDouble();
}

template <typename T>
using Orset = __gnu_pbds::tree<T, __gnu_pbds::null_type, std::less<T>, __gnu_pbds::rb_tree_tag,
        __gnu_pbds::tree_order_statistics_node_update>;

template <typename T>
using Ormultiset =
        __gnu_pbds::tree<T, __gnu_pbds::null_type, std::less_equal<T>, __gnu_pbds::rb_tree_tag,
                __gnu_pbds::tree_order_statistics_node_update>;

void runSolve() {
    int n, m;
    cin >> n >> m;
    vector<pair<int, int>> queries;
    while (n--) {
        int l, r;
        cin >> l >> r;
        queries.emplace_back(l, 1);
        queries.emplace_back(r, 3);
    }
    while (m--) {
        int x;
        cin >> x;
        queries.emplace_back(x, 2);
    }
    sort(queries.begin(), queries.end());

    int cnt = 0;
    pair<int, int> ans = {-1, -1};
    for (auto [x, type] : queries) {
        if (type == 1) {
            cnt++;
        } else if (type == 2) {
            if (ans.second < cnt) {
                ans = {x, cnt};
            }
        } else {
            cnt--;
        }
    }
    cout << ans.first << ' ' << ans.second << '\n';
}

int32_t main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    int t = 1;
//    cin >> t;
    while (t--) {
        runSolve();
    }
}
"
7S01Z2wL,Spammers and Scammers [10-1/2023],bombaires,AIMMS,Friday 20th of October 2023 12:21:35 PM CDT,"<a href=""mailto:Jean-ChristopheLALOUX@hotmail.com"">Jean-ChristopheLALOUX@hotmail.com</a>
<a href=""mailto:akavyevich@gmail.com"">akavyevich@gmail.com</a>
<a href=""mailto:a.k.avy.e.vi.ch@gmail.com"">a.k.avy.e.vi.ch@gmail.com</a>
<a href=""mailto:a.k.a.vyevi.c.h@gmail.com"">a.k.a.vyevi.c.h@gmail.com</a>
<a href=""mailto:ak.a.vye.v.i.c.h@gmail.com"">ak.a.vye.v.i.c.h@gmail.com</a>
<a href=""mailto:ak.a.v.y.e.vi.c.h@gmail.com"">ak.a.v.y.e.vi.c.h@gmail.com</a>
<a href=""mailto:ak.a.v.yev.ich@gmail.com"">ak.a.v.yev.ich@gmail.com</a>
<a href=""mailto:ak.av.ye.v.i.c.h@gmail.com"">ak.av.ye.v.i.c.h@gmail.com</a>
<a href=""mailto:akavy.evic.h@gmail.com"">akavy.evic.h@gmail.com</a>
<a href=""mailto:akavyev.ic.h@gmail.com"">akavyev.ic.h@gmail.com</a>
<a href=""mailto:a.k.a.vy.e.v.i.c.h@gmail.com"">a.k.a.vy.e.v.i.c.h@gmail.com</a>
<a href=""mailto:a.k.a.v.ye.vi.c.h@gmail.com"">a.k.a.v.ye.vi.c.h@gmail.com</a>
<a href=""mailto:aka.v.y.e.vic.h@gmail.com"">aka.v.y.e.vic.h@gmail.com</a>
<a href=""mailto:akavye.vi.c.h@gmail.com"">akavye.vi.c.h@gmail.com</a>
<a href=""mailto:aka.vye.v.ic.h@gmail.com"">aka.vye.v.ic.h@gmail.com</a>
<a href=""mailto:a.k.avy.e.v.ich@gmail.com"">a.k.avy.e.v.ich@gmail.com</a>
<a href=""mailto:aka.vy.e.v.ic.h@gmail.com"">aka.vy.e.v.ic.h@gmail.com</a>
<a href=""mailto:a.k.a.vy.ev.ich@gmail.com"">a.k.a.vy.ev.ich@gmail.com</a>
<a href=""mailto:a.k.avye.v.ich@gmail.com"">a.k.avye.v.ich@gmail.com</a>
<a href=""mailto:a.k.avyev.i.c.h@gmail.com"">a.k.avyev.i.c.h@gmail.com</a>
<a href=""mailto:a.k.av.ye.v.i.c.h@gmail.com"">a.k.av.ye.v.i.c.h@gmail.com</a>
<a href=""mailto:a.k.av.y.evi.ch@gmail.com"">a.k.av.y.evi.ch@gmail.com</a>
<a href=""mailto:ak.a.vy.e.v.ic.h@gmail.com"">ak.a.vy.e.v.ic.h@gmail.com</a>
<a href=""mailto:a.k.avyevi.c.h@gmail.com"">a.k.avyevi.c.h@gmail.com</a>
<a href=""mailto:a.k.av.y.e.vic.h@gmail.com"">a.k.av.y.e.vic.h@gmail.com</a>
<a href=""mailto:ak.a.vyev.ich@gmail.com"">ak.a.vyev.ich@gmail.com</a>
<a href=""mailto:a.k.a.v.ye.v.i.c.h@gmail.com"">a.k.a.v.ye.v.i.c.h@gmail.com</a>
<a href=""mailto:a.k.a.v.ye.vic.h@gmail.com"">a.k.a.v.ye.vic.h@gmail.com</a>
<a href=""mailto:a.kavye.vic.h@gmail.com"">a.kavye.vic.h@gmail.com</a>
<a href=""mailto:a.kavy.e.vich@gmail.com"">a.kavy.e.vich@gmail.com</a>
<a href=""mailto:a.k.avye.vi.c.h@gmail.com"">a.k.avye.vi.c.h@gmail.com</a>
<a href=""mailto:ak.a.v.yev.i.c.h@gmail.com"">ak.a.v.yev.i.c.h@gmail.com</a>
<a href=""mailto:ak.avye.v.ich@gmail.com"">ak.avye.v.ich@gmail.com</a>
<a href=""mailto:a.k.a.v.y.evich@gmail.com"">a.k.a.v.y.evich@gmail.com</a>
<a href=""mailto:a.kav.ye.v.i.ch@gmail.com"">a.kav.ye.v.i.ch@gmail.com</a>
<a href=""mailto:a.k.a.vy.ev.i.ch@gmail.com"">a.k.a.vy.ev.i.ch@gmail.com</a>
<a href=""mailto:a.k.a.v.y.e.v.i.ch@gmail.com"">a.k.a.v.y.e.v.i.ch@gmail.com</a>
<a href=""mailto:akavy.ev.i.ch@gmail.com"">akavy.ev.i.ch@gmail.com</a>
<a href=""mailto:ak.avy.ev.ic.h@gmail.com"">ak.avy.ev.ic.h@gmail.com</a>
<a href=""mailto:ak.avye.vi.ch@gmail.com"">ak.avye.vi.ch@gmail.com</a>
<a href=""mailto:a.k.av.y.evi.c.h@gmail.com"">a.k.av.y.evi.c.h@gmail.com</a>
<a href=""mailto:akav.yev.ic.h@gmail.com"">akav.yev.ic.h@gmail.com</a>
<a href=""mailto:a.k.av.y.e.vi.ch@gmail.com"">a.k.av.y.e.vi.ch@gmail.com</a>
<a href=""mailto:a.kavy.ev.i.ch@gmail.com"">a.kavy.ev.i.ch@gmail.com</a>
<a href=""mailto:ak.av.ye.v.ich@gmail.com"">ak.av.ye.v.ich@gmail.com</a>
<a href=""mailto:a.kavy.e.v.i.c.h@gmail.com"">a.kavy.e.v.i.c.h@gmail.com</a>
<a href=""mailto:aka.vyev.ic.h@gmail.com"">aka.vyev.ic.h@gmail.com</a>
<a href=""mailto:akav.y.evich@gmail.com"">akav.y.evich@gmail.com</a>
<a href=""mailto:a.kav.ye.v.ic.h@gmail.com"">a.kav.ye.v.ic.h@gmail.com</a>
<a href=""mailto:ak.av.ye.vi.c.h@gmail.com"">ak.av.ye.vi.c.h@gmail.com</a>
<a href=""mailto:a.ka.vy.e.vi.c.h@gmail.com"">a.ka.vy.e.vi.c.h@gmail.com</a>
<a href=""mailto:a.k.av.y.e.v.ic.h@gmail.com"">a.k.av.y.e.v.ic.h@gmail.com</a>
<a href=""mailto:a.k.a.vy.e.v.ich@gmail.com"">a.k.a.vy.e.v.ich@gmail.com</a>
<a href=""mailto:a.k.a.vy.evic.h@gmail.com"">a.k.a.vy.evic.h@gmail.com</a>
<a href=""mailto:ak.avy.evi.ch@gmail.com"">ak.avy.evi.ch@gmail.com</a>
<a href=""mailto:akav.y.e.v.i.ch@gmail.com"">akav.y.e.v.i.ch@gmail.com</a>
<a href=""mailto:a.kav.y.ev.i.c.h@gmail.com"">a.kav.y.ev.i.c.h@gmail.com</a>
<a href=""mailto:ak.a.vy.ev.ich@gmail.com"">ak.a.vy.ev.ich@gmail.com</a>
<a href=""mailto:a.k.a.v.y.evi.c.h@gmail.com"">a.k.a.v.y.evi.c.h@gmail.com</a>
<a href=""mailto:aka.vyevi.ch@gmail.com"">aka.vyevi.ch@gmail.com</a>
<a href=""mailto:akavyev.i.ch@gmail.com"">akavyev.i.ch@gmail.com</a>
<a href=""mailto:ak.a.vy.e.vich@gmail.com"">ak.a.vy.e.vich@gmail.com</a>
<a href=""mailto:aka.v.yev.i.c.h@gmail.com"">aka.v.yev.i.c.h@gmail.com</a>
<a href=""mailto:ak.avy.e.v.i.ch@gmail.com"">ak.avy.e.v.i.ch@gmail.com</a>
<a href=""mailto:a.kav.y.e.vi.c.h@gmail.com"">a.kav.y.e.vi.c.h@gmail.com</a>
<a href=""mailto:ak.avy.e.vi.c.h@gmail.com"">ak.avy.e.vi.c.h@gmail.com</a>
<a href=""mailto:akavy.evi.c.h@gmail.com"">akavy.evi.c.h@gmail.com</a>
<a href=""mailto:a.ka.vye.v.i.ch@gmail.com"">a.ka.vye.v.i.ch@gmail.com</a>
<a href=""mailto:a.kavyev.ic.h@gmail.com"">a.kavyev.ic.h@gmail.com</a>
<a href=""mailto:aka.v.ye.vi.c.h@gmail.com"">aka.v.ye.vi.c.h@gmail.com</a>
<a href=""mailto:a.kav.y.evich@gmail.com"">a.kav.y.evich@gmail.com</a>
<a href=""mailto:akav.y.e.vich@gmail.com"">akav.y.e.vich@gmail.com</a>
<a href=""mailto:a.ka.v.y.e.v.i.ch@gmail.com"">a.ka.v.y.e.v.i.ch@gmail.com</a>
<a href=""mailto:aka.vyev.ich@gmail.com"">aka.vyev.ich@gmail.com</a>
<a href=""mailto:akav.y.e.v.ich@gmail.com"">akav.y.e.v.ich@gmail.com</a>
<a href=""mailto:ak.a.vye.vich@gmail.com"">ak.a.vye.vich@gmail.com</a>
<a href=""mailto:ak.a.vy.e.v.ich@gmail.com"">ak.a.vy.e.v.ich@gmail.com</a>
<a href=""mailto:akavyevi.ch@gmail.com"">akavyevi.ch@gmail.com</a>
<a href=""mailto:akav.y.evi.c.h@gmail.com"">akav.y.evi.c.h@gmail.com</a>
<a href=""mailto:ak.avy.ev.ich@gmail.com"">ak.avy.ev.ich@gmail.com</a>
<a href=""mailto:ak.a.v.y.e.v.i.ch@gmail.com"">ak.a.v.y.e.v.i.ch@gmail.com</a>
<a href=""mailto:ak.av.yevic.h@gmail.com"">ak.av.yevic.h@gmail.com</a>
<a href=""mailto:a.ka.vy.e.vi.ch@gmail.com"">a.ka.vy.e.vi.ch@gmail.com</a>
<a href=""mailto:aka.vyevi.c.h@gmail.com"">aka.vyevi.c.h@gmail.com</a>
<a href=""mailto:a.kavy.ev.ic.h@gmail.com"">a.kavy.ev.ic.h@gmail.com</a>
<a href=""mailto:aka.vye.vi.ch@gmail.com"">aka.vye.vi.ch@gmail.com</a>
<a href=""mailto:a.k.a.vye.vic.h@gmail.com"">a.k.a.vye.vic.h@gmail.com</a>
<a href=""mailto:a.k.a.v.ye.v.ic.h@gmail.com"">a.k.a.v.ye.v.ic.h@gmail.com</a>
<a href=""mailto:aka.v.y.e.v.i.c.h@gmail.com"">aka.v.y.e.v.i.c.h@gmail.com</a>
<a href=""mailto:ak.avy.evic.h@gmail.com"">ak.avy.evic.h@gmail.com</a>
<a href=""mailto:ak.avy.e.v.i.c.h@gmail.com"">ak.avy.e.v.i.c.h@gmail.com</a>
<a href=""mailto:a.ka.v.yev.ich@gmail.com"">a.ka.v.yev.ich@gmail.com</a>
<a href=""mailto:a.kav.y.evi.ch@gmail.com"">a.kav.y.evi.ch@gmail.com</a>
<a href=""mailto:a.kav.yev.ic.h@gmail.com"">a.kav.yev.ic.h@gmail.com</a>
<a href=""mailto:akav.ye.vi.c.h@gmail.com"">akav.ye.vi.c.h@gmail.com</a>
<a href=""mailto:ak.avy.e.vich@gmail.com"">ak.avy.e.vich@gmail.com</a>
<a href=""mailto:a.k.avy.e.vich@gmail.com"">a.k.avy.e.vich@gmail.com</a>
<a href=""mailto:ak.av.yev.i.c.h@gmail.com"">ak.av.yev.i.c.h@gmail.com</a>
<a href=""mailto:a.ka.vye.v.ich@gmail.com"">a.ka.vye.v.ich@gmail.com</a>
<a href=""mailto:a.kavye.vich@gmail.com"">a.kavye.vich@gmail.com</a>
<a href=""mailto:a.kavye.v.i.ch@gmail.com"">a.kavye.v.i.ch@gmail.com</a>
<a href=""mailto:a.k.avyevic.h@gmail.com"">a.k.avyevic.h@gmail.com</a>
<a href=""mailto:a.k.a.vy.e.vic.h@gmail.com"">a.k.a.vy.e.vic.h@gmail.com</a>
<a href=""mailto:ak.a.v.y.e.v.i.c.h@gmail.com"">ak.a.v.y.e.v.i.c.h@gmail.com</a>
<a href=""mailto:a.kavyevic.h@gmail.com"">a.kavyevic.h@gmail.com</a>
<a href=""mailto:aka.vyev.i.ch@gmail.com"">aka.vyev.i.ch@gmail.com</a>
<a href=""mailto:ak.a.v.ye.vi.c.h@gmail.com"">ak.a.v.ye.vi.c.h@gmail.com</a>
<a href=""mailto:a.k.a.vyev.i.c.h@gmail.com"">a.k.a.vyev.i.c.h@gmail.com</a>
<a href=""mailto:ak.a.vyevich@gmail.com"">ak.a.vyevich@gmail.com</a>
<a href=""mailto:a.k.av.ye.vic.h@gmail.com"">a.k.av.ye.vic.h@gmail.com</a>
<a href=""mailto:a.ka.v.y.e.v.i.c.h@gmail.com"">a.ka.v.y.e.v.i.c.h@gmail.com</a>
<a href=""mailto:aka.vy.e.vic.h@gmail.com"">aka.vy.e.vic.h@gmail.com</a>
<a href=""mailto:a.k.avy.evi.ch@gmail.com"">a.k.avy.evi.ch@gmail.com</a>
<a href=""mailto:a.kavyev.i.c.h@gmail.com"">a.kavyev.i.c.h@gmail.com</a>
<a href=""mailto:aka.vy.ev.ich@gmail.com"">aka.vy.ev.ich@gmail.com</a>
<a href=""mailto:akavye.v.ic.h@gmail.com"">akavye.v.ic.h@gmail.com</a>
<a href=""mailto:aka.vy.e.vi.ch@gmail.com"">aka.vy.e.vi.ch@gmail.com</a>
<a href=""mailto:a.k.avye.v.ic.h@gmail.com"">a.k.avye.v.ic.h@gmail.com</a>
<a href=""mailto:a.k.a.v.y.evic.h@gmail.com"">a.k.a.v.y.evic.h@gmail.com</a>
<a href=""mailto:a.k.av.y.e.vi.c.h@gmail.com"">a.k.av.y.e.vi.c.h@gmail.com</a>
<a href=""mailto:akavye.vich@gmail.com"">akavye.vich@gmail.com</a>
<a href=""mailto:aka.vyevic.h@gmail.com"">aka.vyevic.h@gmail.com</a>
<a href=""mailto:a.k.avy.evic.h@gmail.com"">a.k.avy.evic.h@gmail.com</a>
<a href=""mailto:a.k.avy.e.vic.h@gmail.com"">a.k.avy.e.vic.h@gmail.com</a>
<a href=""mailto:aka.v.ye.v.ich@gmail.com"">aka.v.ye.v.ich@gmail.com</a>
<a href=""mailto:a.k.a.vye.vi.ch@gmail.com"">a.k.a.vye.vi.ch@gmail.com</a>
<a href=""mailto:a.ka.vy.e.v.ic.h@gmail.com"">a.ka.vy.e.v.ic.h@gmail.com</a>
<a href=""mailto:a.ka.vy.e.v.ich@gmail.com"">a.ka.vy.e.v.ich@gmail.com</a>
<a href=""mailto:aka.v.y.e.v.ich@gmail.com"">aka.v.y.e.v.ich@gmail.com</a>
<a href=""mailto:a.kav.yev.i.c.h@gmail.com"">a.kav.yev.i.c.h@gmail.com</a>
<a href=""mailto:a.ka.v.y.evic.h@gmail.com"">a.ka.v.y.evic.h@gmail.com</a>
<a href=""mailto:a.k.a.vy.e.vi.ch@gmail.com"">a.k.a.vy.e.vi.ch@gmail.com</a>
<a href=""mailto:aka.vy.evic.h@gmail.com"">aka.vy.evic.h@gmail.com</a>
<a href=""mailto:a.ka.v.y.ev.i.ch@gmail.com"">a.ka.v.y.ev.i.ch@gmail.com</a>
<a href=""mailto:ak.avyev.ich@gmail.com"">ak.avyev.ich@gmail.com</a>
<a href=""mailto:a.ka.vye.v.i.c.h@gmail.com"">a.ka.vye.v.i.c.h@gmail.com</a>
<a href=""mailto:a.k.a.v.y.ev.ich@gmail.com"">a.k.a.v.y.ev.ich@gmail.com</a>
<a href=""mailto:a.kavy.evich@gmail.com"">a.kavy.evich@gmail.com</a>
<a href=""mailto:a.kav.y.evi.c.h@gmail.com"">a.kav.y.evi.c.h@gmail.com</a>
<a href=""mailto:a.kavy.e.vi.ch@gmail.com"">a.kavy.e.vi.ch@gmail.com</a>
<a href=""mailto:a.k.avye.vi.ch@gmail.com"">a.k.avye.vi.ch@gmail.com</a>
<a href=""mailto:a.ka.v.y.ev.ic.h@gmail.com"">a.ka.v.y.ev.ic.h@gmail.com</a>
<a href=""mailto:aka.vye.v.i.ch@gmail.com"">aka.vye.v.i.ch@gmail.com</a>
<a href=""mailto:akav.y.ev.i.c.h@gmail.com"">akav.y.ev.i.c.h@gmail.com</a>
<a href=""mailto:ak.a.v.ye.vic.h@gmail.com"">ak.a.v.ye.vic.h@gmail.com</a>
<a href=""mailto:a.k.av.y.e.v.i.ch@gmail.com"">a.k.av.y.e.v.i.ch@gmail.com</a>
<a href=""mailto:ak.a.vy.e.vic.h@gmail.com"">ak.a.vy.e.vic.h@gmail.com</a>
<a href=""mailto:ak.a.vy.evich@gmail.com"">ak.a.vy.evich@gmail.com</a>
<a href=""mailto:a.k.a.vy.e.v.i.ch@gmail.com"">a.k.a.vy.e.v.i.ch@gmail.com</a>
<a href=""mailto:a.k.avy.e.v.i.c.h@gmail.com"">a.k.avy.e.v.i.c.h@gmail.com</a>
<a href=""mailto:a.k.a.vyevich@gmail.com"">a.k.a.vyevich@gmail.com</a>
<a href=""mailto:ak.a.v.y.evic.h@gmail.com"">ak.a.v.y.evic.h@gmail.com</a>
<a href=""mailto:a.ka.vy.e.vic.h@gmail.com"">a.ka.vy.e.vic.h@gmail.com</a>
<a href=""mailto:aka.v.yevi.ch@gmail.com"">aka.v.yevi.ch@gmail.com</a>
<a href=""mailto:ak.a.vy.evi.c.h@gmail.com"">ak.a.vy.evi.c.h@gmail.com</a>
<a href=""mailto:a.k.a.v.ye.v.i.ch@gmail.com"">a.k.a.v.ye.v.i.ch@gmail.com</a>
<a href=""mailto:a.k.av.ye.v.ic.h@gmail.com"">a.k.av.ye.v.ic.h@gmail.com</a>
<a href=""mailto:ak.av.y.e.vic.h@gmail.com"">ak.av.y.e.vic.h@gmail.com</a>
<a href=""mailto:aka.v.ye.v.i.ch@gmail.com"">aka.v.ye.v.i.ch@gmail.com</a>
<a href=""mailto:akavye.v.i.c.h@gmail.com"">akavye.v.i.c.h@gmail.com</a>
<a href=""mailto:aka.v.ye.v.ic.h@gmail.com"">aka.v.ye.v.ic.h@gmail.com</a>
<a href=""mailto:a.ka.vy.e.v.i.c.h@gmail.com"">a.ka.vy.e.v.i.c.h@gmail.com</a>
<a href=""mailto:a.ka.v.ye.v.ic.h@gmail.com"">a.ka.v.ye.v.ic.h@gmail.com</a>
<a href=""mailto:aka.v.ye.v.i.c.h@gmail.com"">aka.v.ye.v.i.c.h@gmail.com</a>
<a href=""mailto:ak.a.vy.ev.ic.h@gmail.com"">ak.a.vy.ev.ic.h@gmail.com</a>
<a href=""mailto:a.k.a.v.y.e.vic.h@gmail.com"">a.k.a.v.y.e.vic.h@gmail.com</a>
<a href=""mailto:ak.avyevic.h@gmail.com"">ak.avyevic.h@gmail.com</a>
<a href=""mailto:aka.vy.e.v.i.ch@gmail.com"">aka.vy.e.v.i.ch@gmail.com</a>
<a href=""mailto:aka.v.y.e.v.i.ch@gmail.com"">aka.v.y.e.v.i.ch@gmail.com</a>
<a href=""mailto:ak.a.v.y.ev.ich@gmail.com"">ak.a.v.y.ev.ich@gmail.com</a>
<a href=""mailto:a.kav.yev.i.ch@gmail.com"">a.kav.yev.i.ch@gmail.com</a>
<a href=""mailto:a.k.avy.evich@gmail.com"">a.k.avy.evich@gmail.com</a>
<a href=""mailto:akav.ye.vic.h@gmail.com"">akav.ye.vic.h@gmail.com</a>
<a href=""mailto:a.k.av.ye.v.i.ch@gmail.com"">a.k.av.ye.v.i.ch@gmail.com</a>
<a href=""mailto:a.k.av.yevi.c.h@gmail.com"">a.k.av.yevi.c.h@gmail.com</a>
<a href=""mailto:ak.avy.e.vi.ch@gmail.com"">ak.avy.e.vi.ch@gmail.com</a>
<a href=""mailto:akavy.e.v.i.c.h@gmail.com"">akavy.e.v.i.c.h@gmail.com</a>
<a href=""mailto:aka.v.yevic.h@gmail.com"">aka.v.yevic.h@gmail.com</a>
<a href=""mailto:aka.v.y.ev.ich@gmail.com"">aka.v.y.ev.ich@gmail.com</a>
<a href=""mailto:a.ka.v.yevi.ch@gmail.com"">a.ka.v.yevi.ch@gmail.com</a>
<a href=""mailto:aka.vy.e.vich@gmail.com"">aka.vy.e.vich@gmail.com</a>
<a href=""mailto:a.k.a.vy.e.vich@gmail.com"">a.k.a.vy.e.vich@gmail.com</a>
<a href=""mailto:a.kavy.e.v.ich@gmail.com"">a.kavy.e.v.ich@gmail.com</a>
<a href=""mailto:aka.vy.evich@gmail.com"">aka.vy.evich@gmail.com</a>
<a href=""mailto:akavy.evi.ch@gmail.com"">akavy.evi.ch@gmail.com</a>
<a href=""mailto:a.k.a.vy.ev.ic.h@gmail.com"">a.k.a.vy.ev.ic.h@gmail.com</a>
<a href=""mailto:ak.a.v.yev.i.ch@gmail.com"">ak.a.v.yev.i.ch@gmail.com</a>
<a href=""mailto:a.ka.vy.evic.h@gmail.com"">a.ka.vy.evic.h@gmail.com</a>
<a href=""mailto:ak.a.v.yevich@gmail.com"">ak.a.v.yevich@gmail.com</a>
<a href=""mailto:ak.a.vyev.i.c.h@gmail.com"">ak.a.vyev.i.c.h@gmail.com</a>
<a href=""mailto:a.kav.y.ev.i.ch@gmail.com"">a.kav.y.ev.i.ch@gmail.com</a>
<a href=""mailto:ak.a.v.ye.v.ich@gmail.com"">ak.a.v.ye.v.ich@gmail.com</a>
<a href=""mailto:a.ka.vy.evi.ch@gmail.com"">a.ka.vy.evi.ch@gmail.com</a>
<a href=""mailto:akavy.e.vi.c.h@gmail.com"">akavy.e.vi.c.h@gmail.com</a>
<a href=""mailto:ak.avyevich@gmail.com"">ak.avyevich@gmail.com</a>
<a href=""mailto:a.kav.yevich@gmail.com"">a.kav.yevich@gmail.com</a>
<a href=""mailto:ak.avy.e.v.ic.h@gmail.com"">ak.avy.e.v.ic.h@gmail.com</a>
<a href=""mailto:a.k.a.vye.v.i.c.h@gmail.com"">a.k.a.vye.v.i.c.h@gmail.com</a>
<a href=""mailto:a.k.a.v.ye.vi.ch@gmail.com"">a.k.a.v.ye.vi.ch@gmail.com</a>
<a href=""mailto:aka.v.y.evich@gmail.com"">aka.v.y.evich@gmail.com</a>
<a href=""mailto:a.k.a.vy.evi.ch@gmail.com"">a.k.a.vy.evi.ch@gmail.com</a>
<a href=""mailto:ak.a.vyevi.c.h@gmail.com"">ak.a.vyevi.c.h@gmail.com</a>
<a href=""mailto:3aafdabd236481cc54783738f3a3a824-44201880@contact.gandi.net"">3aafdabd236481cc54783738f3a3a824-44201880@contact.gandi.net</a>
<a href=""mailto:m@marketion.ru"">m@marketion.ru</a>
<a href=""mailto:user-cl1@marketion.ru"">user-cl1@marketion.ru</a>
<a href=""mailto:info@helferpillen.org"">info@helferpillen.org</a>
<a href=""mailto:intermoneytaryfund29@gmail.com"">intermoneytaryfund29@gmail.com</a>
<a href=""mailto:interm.on.e.ytar.y.fun.d.29@gmail.com"">interm.on.e.ytar.y.fun.d.29@gmail.com</a>
<a href=""mailto:int.e.rm.on.ey.ta.r.yfu.n.d.2.9@gmail.com"">int.e.rm.on.ey.ta.r.yfu.n.d.2.9@gmail.com</a>
<a href=""mailto:i.nt.e.r.m.oneyt.ar.y.fu.n.d.2.9@gmail.com"">i.nt.e.r.m.oneyt.ar.y.fu.n.d.2.9@gmail.com</a>
<a href=""mailto:in.termo.neyt.a.ry.f.und.29@gmail.com"">in.termo.neyt.a.ry.f.und.29@gmail.com</a>
<a href=""mailto:i.nt.er.m.one.y.tar.yf.u.nd.2.9@gmail.com"">i.nt.er.m.one.y.tar.yf.u.nd.2.9@gmail.com</a>
<a href=""mailto:i.nte.r.m.o.n.e.y.t.a.r.yf.u.nd29@gmail.com"">i.nte.r.m.o.n.e.y.t.a.r.yf.u.nd29@gmail.com</a>
<a href=""mailto:i.nter.mo.n.eyt.ar.yfund29@gmail.com"">i.nter.mo.n.eyt.ar.yfund29@gmail.com</a>
<a href=""mailto:i.n.t.erm.o.n.eytary.f.un.d.29@gmail.com"">i.n.t.erm.o.n.eytary.f.un.d.29@gmail.com</a>
<a href=""mailto:i.nter.mo.ney.t.a.r.y.f.und.29@gmail.com"">i.nter.mo.ney.t.a.r.y.f.und.29@gmail.com</a>
<a href=""mailto:i.nte.r.mo.n.e.yt.ar.y.fun.d.2.9@gmail.com"">i.nte.r.mo.n.e.yt.ar.y.fun.d.2.9@gmail.com</a>
<a href=""mailto:in.ter.m.o.ney.t.ary.fu.n.d29@gmail.com"">in.ter.m.o.ney.t.ary.fu.n.d29@gmail.com</a>
<a href=""mailto:in.t.e.rmon.e.ytar.y.f.u.nd.29@gmail.com"">in.t.e.rmon.e.ytar.y.f.u.nd.29@gmail.com</a>
<a href=""mailto:i.nt.er.money.taryfu.nd.29@gmail.com"">i.nt.er.money.taryfu.nd.29@gmail.com</a>
<a href=""mailto:i.n.t.er.m.o.n.ey.t.a.r.y.f.un.d.2.9@gmail.com"">i.n.t.er.m.o.n.ey.t.a.r.y.f.un.d.2.9@gmail.com</a>
<a href=""mailto:i.nt.e.rmon.e.y.t.a.ryf.u.nd29@gmail.com"">i.nt.e.rmon.e.y.t.a.ryf.u.nd29@gmail.com</a>
<a href=""mailto:in.t.er.m.o.ney.t.a.ry.f.un.d.29@gmail.com"">in.t.er.m.o.ney.t.a.ry.f.un.d.29@gmail.com</a>
<a href=""mailto:i.n.ter.m.o.ne.ytaryf.u.n.d29@gmail.com"">i.n.ter.m.o.ne.ytaryf.u.n.d29@gmail.com</a>
<a href=""mailto:i.n.t.ermo.ney.t.a.ry.fu.nd.2.9@gmail.com"">i.n.t.ermo.ney.t.a.ry.fu.nd.2.9@gmail.com</a>
<a href=""mailto:int.e.r.m.one.yt.ar.y.f.u.n.d2.9@gmail.com"">int.e.r.m.one.yt.ar.y.f.u.n.d2.9@gmail.com</a>
<a href=""mailto:i.nte.rmon.e.y.ta.r.y.f.u.n.d29@gmail.com"">i.nte.rmon.e.y.ta.r.y.f.u.n.d29@gmail.com</a>
<a href=""mailto:i.nt.e.r.m.on.e.y.ta.r.y.f.u.n.d.29@gmail.com"">i.nt.e.r.m.on.e.y.ta.r.y.f.u.n.d.29@gmail.com</a>
<a href=""mailto:i.nter.mo.neyta.ryfu.nd2.9@gmail.com"">i.nter.mo.neyta.ryfu.nd2.9@gmail.com</a>
<a href=""mailto:int.erm.o.n.eytar.y.f.un.d.2.9@gmail.com"">int.erm.o.n.eytar.y.f.un.d.2.9@gmail.com</a>
<a href=""mailto:i.nt.e.r.m.one.yta.r.y.f.und2.9@gmail.com"">i.nt.e.r.m.one.yta.r.y.f.und2.9@gmail.com</a>
<a href=""mailto:i.n.t.er.m.o.n.ey.t.ar.yfu.nd2.9@gmail.com"">i.n.t.er.m.o.n.ey.t.ar.yfu.nd2.9@gmail.com</a>
<a href=""mailto:int.e.r.mon.ey.t.a.ry.f.u.nd.29@gmail.com"">int.e.r.mon.ey.t.a.ry.f.u.nd.29@gmail.com</a>
<a href=""mailto:i.n.te.rm.o.n.eytaryfu.nd.2.9@gmail.com"">i.n.te.rm.o.n.eytaryfu.nd.2.9@gmail.com</a>
<a href=""mailto:i.nt.ermo.neyta.ryf.und.29@gmail.com"">i.nt.ermo.neyta.ryf.und.29@gmail.com</a>
<a href=""mailto:inte.rm.oney.ta.ry.f.u.n.d29@gmail.com"">inte.rm.oney.ta.ry.f.u.n.d29@gmail.com</a>
<a href=""mailto:int.ermoneyt.ar.y.f.un.d.29@gmail.com"">int.ermoneyt.ar.y.f.un.d.29@gmail.com</a>
<a href=""mailto:i.n.te.rmon.e.y.tar.yfu.n.d29@gmail.com"">i.n.te.rmon.e.y.tar.yfu.n.d29@gmail.com</a>
<a href=""mailto:inter.m.o.ney.tar.yfu.n.d29@gmail.com"">inter.m.o.ney.tar.yfu.n.d29@gmail.com</a>
<a href=""mailto:i.n.t.e.r.mo.ne.y.t.ary.f.u.nd29@gmail.com"">i.n.t.e.r.mo.ne.y.t.ary.f.u.nd29@gmail.com</a>
<a href=""mailto:i.nt.e.rm.on.eyt.a.r.yf.und2.9@gmail.com"">i.nt.e.rm.on.eyt.a.r.yf.und2.9@gmail.com</a>
<a href=""mailto:i.n.te.r.m.o.n.eytar.y.fu.nd2.9@gmail.com"">i.n.te.r.m.o.n.eytar.y.fu.nd2.9@gmail.com</a>
<a href=""mailto:in.termon.ey.tar.yf.und2.9@gmail.com"">in.termon.ey.tar.yf.und2.9@gmail.com</a>
<a href=""mailto:i.n.t.e.r.mone.yt.ar.y.fund.2.9@gmail.com"">i.n.t.e.r.mone.yt.ar.y.fund.2.9@gmail.com</a>
<a href=""mailto:i.n.t.erm.o.ne.y.ta.ryfund.29@gmail.com"">i.n.t.erm.o.ne.y.ta.ryfund.29@gmail.com</a>
<a href=""mailto:in.termo.ne.y.ta.ry.fun.d.2.9@gmail.com"">in.termo.ne.y.ta.ry.fun.d.2.9@gmail.com</a>
<a href=""mailto:i.n.ter.m.oney.t.ar.yf.u.nd29@gmail.com"">i.n.ter.m.oney.t.ar.yf.u.nd29@gmail.com</a>
<a href=""mailto:i.n.t.er.mo.ne.y.ta.r.y.fu.nd2.9@gmail.com"">i.n.t.er.mo.ne.y.ta.r.y.fu.nd2.9@gmail.com</a>
<a href=""mailto:i.n.te.r.m.one.yt.ar.y.fu.n.d.29@gmail.com"">i.n.te.r.m.one.yt.ar.y.fu.n.d.29@gmail.com</a>
<a href=""mailto:i.n.t.erm.one.y.t.a.r.y.f.u.n.d2.9@gmail.com"">i.n.t.erm.one.y.t.a.r.y.f.u.n.d2.9@gmail.com</a>
<a href=""mailto:int.erm.oney.t.a.ryf.un.d.29@gmail.com"">int.erm.oney.t.a.ryf.un.d.29@gmail.com</a>
<a href=""mailto:i.n.ter.m.o.n.e.y.taryf.u.nd.29@gmail.com"">i.n.ter.m.o.n.e.y.taryf.u.nd.29@gmail.com</a>
<a href=""mailto:i.nt.er.mo.ne.y.tar.y.fun.d29@gmail.com"">i.nt.er.mo.ne.y.tar.y.fun.d29@gmail.com</a>
<a href=""mailto:inte.r.m.o.n.e.yt.ar.y.f.un.d.2.9@gmail.com"">inte.r.m.o.n.e.yt.ar.y.f.un.d.2.9@gmail.com</a>
<a href=""mailto:i.nt.e.r.m.one.ytar.y.f.u.nd.29@gmail.com"">i.nt.e.r.m.one.ytar.y.f.u.nd.29@gmail.com</a>
<a href=""mailto:int.e.rmon.eyt.a.ry.f.und29@gmail.com"">int.e.rmon.eyt.a.ry.f.und29@gmail.com</a>
<a href=""mailto:in.t.er.mon.e.y.tar.yf.un.d2.9@gmail.com"">in.t.er.mon.e.y.tar.yf.un.d2.9@gmail.com</a>
<a href=""mailto:i.n.t.ermon.e.yt.ar.yfu.nd.29@gmail.com"">i.n.t.ermon.e.yt.ar.yfu.nd.29@gmail.com</a>
<a href=""mailto:in.te.rm.on.e.y.t.ar.y.fun.d2.9@gmail.com"">in.te.rm.on.e.y.t.ar.y.fun.d2.9@gmail.com</a>
<a href=""mailto:i.nt.e.r.mo.neytar.yfu.nd29@gmail.com"">i.nt.e.r.mo.neytar.yfu.nd29@gmail.com</a>
<a href=""mailto:inter.m.o.ne.yt.aryf.un.d.2.9@gmail.com"">inter.m.o.ne.yt.aryf.un.d.2.9@gmail.com</a>
<a href=""mailto:i.nter.m.one.y.t.a.ry.fun.d.29@gmail.com"">i.nter.m.one.y.t.a.ry.fun.d.29@gmail.com</a>
<a href=""mailto:i.n.t.e.r.mo.n.ey.ta.r.y.f.und2.9@gmail.com"">i.n.t.e.r.mo.n.ey.ta.r.y.f.und2.9@gmail.com</a>
<a href=""mailto:in.t.e.r.m.o.ney.t.ar.yfun.d2.9@gmail.com"">in.t.e.r.m.o.ney.t.ar.yfun.d2.9@gmail.com</a>
<a href=""mailto:int.ermon.eyta.r.y.fun.d.2.9@gmail.com"">int.ermon.eyta.r.y.fun.d.2.9@gmail.com</a>
<a href=""mailto:int.erm.o.n.e.yta.r.y.fun.d29@gmail.com"">int.erm.o.n.e.yta.r.y.fun.d29@gmail.com</a>
<a href=""mailto:i.n.t.e.r.mone.yt.aryfund.2.9@gmail.com"">i.n.t.e.r.mone.yt.aryfund.2.9@gmail.com</a>
<a href=""mailto:in.te.rm.o.ne.yt.a.ryf.un.d.2.9@gmail.com"">in.te.rm.o.ne.yt.a.ryf.un.d.2.9@gmail.com</a>
<a href=""mailto:in.t.er.m.one.yt.a.r.yfun.d2.9@gmail.com"">in.t.er.m.one.yt.a.r.yfun.d2.9@gmail.com</a>
<a href=""mailto:in.te.r.m.one.y.t.aryfu.n.d.2.9@gmail.com"">in.te.r.m.one.y.t.aryfu.n.d.2.9@gmail.com</a>
<a href=""mailto:i.n.te.r.money.t.ar.y.f.und29@gmail.com"">i.n.te.r.money.t.ar.y.f.und29@gmail.com</a>
<a href=""mailto:i.n.t.e.rmo.ne.yta.r.yfu.nd.2.9@gmail.com"">i.n.t.e.rmo.ne.yta.r.yfu.nd.2.9@gmail.com</a>
<a href=""mailto:i.n.t.e.r.mo.n.e.yt.a.r.y.f.un.d.29@gmail.com"">i.n.t.e.r.mo.n.e.yt.a.r.y.f.un.d.29@gmail.com</a>
<a href=""mailto:in.term.o.n.e.yt.a.ryfund.29@gmail.com"">in.term.o.n.e.yt.a.ryfund.29@gmail.com</a>
<a href=""mailto:i.n.t.erm.o.ney.t.a.ry.fund2.9@gmail.com"">i.n.t.erm.o.ney.t.a.ry.fund2.9@gmail.com</a>
<a href=""mailto:i.n.te.rmone.y.t.a.r.yf.und29@gmail.com"">i.n.te.rmone.y.t.a.r.yf.und29@gmail.com</a>
<a href=""mailto:in.te.rmo.n.eyta.r.yfu.nd29@gmail.com"">in.te.rmo.n.eyta.r.yfu.nd29@gmail.com</a>
<a href=""mailto:i.nt.e.rm.on.ey.t.a.ry.fund29@gmail.com"">i.nt.e.rm.on.ey.t.a.ry.fund29@gmail.com</a>
<a href=""mailto:in.t.er.m.o.neytar.y.f.un.d2.9@gmail.com"">in.t.er.m.o.neytar.y.f.un.d2.9@gmail.com</a>
<a href=""mailto:in.term.oneyta.ryf.und.2.9@gmail.com"">in.term.oneyta.ryf.und.2.9@gmail.com</a>
<a href=""mailto:i.nt.e.r.mo.n.ey.t.aryf.u.n.d.2.9@gmail.com"">i.nt.e.r.mo.n.ey.t.aryf.u.n.d.2.9@gmail.com</a>
<a href=""mailto:i.n.t.e.rm.o.n.ey.t.aryfu.nd2.9@gmail.com"">i.n.t.e.rm.o.n.ey.t.aryfu.nd2.9@gmail.com</a>
<a href=""mailto:i.n.te.r.mo.neyt.ar.y.f.und2.9@gmail.com"">i.n.te.r.mo.neyt.ar.y.f.und2.9@gmail.com</a>
<a href=""mailto:i.nte.rm.o.neyt.a.ry.f.u.nd.29@gmail.com"">i.nte.rm.o.neyt.a.ry.f.u.nd.29@gmail.com</a>
<a href=""mailto:in.termo.n.eyta.r.y.f.un.d29@gmail.com"">in.termo.n.eyta.r.y.f.un.d29@gmail.com</a>
<a href=""mailto:i.n.te.rmone.y.t.aryf.u.n.d2.9@gmail.com"">i.n.te.rmone.y.t.aryf.u.n.d2.9@gmail.com</a>
<a href=""mailto:in.te.r.mo.ne.yt.a.ry.fund2.9@gmail.com"">in.te.r.mo.ne.yt.a.ry.fund2.9@gmail.com</a>
<a href=""mailto:i.n.te.r.m.o.n.eyt.a.r.yfund2.9@gmail.com"">i.n.te.r.m.o.n.eyt.a.r.yfund2.9@gmail.com</a>
<a href=""mailto:i.n.t.e.r.mo.ney.ta.ryfu.n.d.29@gmail.com"">i.n.t.e.r.mo.ney.ta.ryfu.n.d.29@gmail.com</a>
<a href=""mailto:inter.m.oneyta.r.yfu.nd2.9@gmail.com"">inter.m.oneyta.r.yfu.nd2.9@gmail.com</a>
<a href=""mailto:i.nt.e.r.m.o.n.eyt.a.r.yf.und2.9@gmail.com"">i.nt.e.r.m.o.n.eyt.a.r.yf.und2.9@gmail.com</a>
<a href=""mailto:int.er.m.on.eytary.fund.2.9@gmail.com"">int.er.m.on.eytary.fund.2.9@gmail.com</a>
<a href=""mailto:i.n.t.e.r.mo.n.ey.t.a.r.yfund2.9@gmail.com"">i.n.t.e.r.mo.n.ey.t.a.r.yfund2.9@gmail.com</a>
<a href=""mailto:i.nterm.on.ey.ta.r.yf.u.n.d2.9@gmail.com"">i.nterm.on.ey.ta.r.yf.u.n.d2.9@gmail.com</a>
<a href=""mailto:inte.r.m.o.ne.yt.ary.f.u.nd.29@gmail.com"">inte.r.m.o.ne.yt.ary.f.u.nd.29@gmail.com</a>
<a href=""mailto:int.e.rm.on.ey.tar.y.f.u.nd.2.9@gmail.com"">int.e.rm.on.ey.tar.y.f.u.nd.2.9@gmail.com</a>
<a href=""mailto:i.n.t.ermo.ne.y.taryf.un.d2.9@gmail.com"">i.n.t.ermo.ne.y.taryf.un.d2.9@gmail.com</a>
<a href=""mailto:i.nterm.on.e.y.ta.r.y.fu.n.d.29@gmail.com"">i.nterm.on.e.y.ta.r.y.fu.n.d.29@gmail.com</a>
<a href=""mailto:in.t.e.rm.oney.t.a.ry.fu.n.d2.9@gmail.com"">in.t.e.rm.oney.t.a.ry.fu.n.d2.9@gmail.com</a>
<a href=""mailto:i.n.te.rmoneyta.ry.f.und29@gmail.com"">i.n.te.rmoneyta.ry.f.und29@gmail.com</a>
<a href=""mailto:i.n.t.e.rm.oney.ta.r.yf.u.n.d.2.9@gmail.com"">i.n.t.e.rm.oney.ta.r.yf.u.n.d.2.9@gmail.com</a>
<a href=""mailto:inter.m.on.eyt.aryfu.nd.2.9@gmail.com"">inter.m.on.eyt.aryfu.nd.2.9@gmail.com</a>
<a href=""mailto:i.n.te.r.m.o.ney.tar.y.fun.d.29@gmail.com"">i.n.te.r.m.o.ney.tar.y.fun.d.29@gmail.com</a>
<a href=""mailto:i.nte.rmone.yt.a.ryf.und.2.9@gmail.com"">i.nte.rmone.yt.a.ryf.und.2.9@gmail.com</a>
<a href=""mailto:i.nt.er.m.oney.ta.r.yfu.nd29@gmail.com"">i.nt.er.m.oney.ta.r.yfu.nd29@gmail.com</a>
<a href=""mailto:in.t.e.r.m.on.e.y.ta.ryfu.nd2.9@gmail.com"">in.t.e.r.m.on.e.y.ta.ryfu.nd2.9@gmail.com</a>
<a href=""mailto:i.nter.m.on.eytar.y.f.u.nd.2.9@gmail.com"">i.nter.m.on.eytar.y.f.u.nd.2.9@gmail.com</a>
<a href=""mailto:i.n.t.e.r.mon.ey.tary.fu.n.d.29@gmail.com"">i.n.t.e.r.mon.ey.tary.fu.n.d.29@gmail.com</a>
<a href=""mailto:int.er.mon.ey.ta.ryf.u.n.d2.9@gmail.com"">int.er.mon.ey.ta.ryf.u.n.d2.9@gmail.com</a>
<a href=""mailto:int.e.r.m.on.e.y.t.ar.yf.u.nd29@gmail.com"">int.e.r.m.on.e.y.t.ar.yf.u.nd29@gmail.com</a>
<a href=""mailto:i.n.te.rm.o.ne.ytary.f.u.nd2.9@gmail.com"">i.n.te.rm.o.ne.ytary.f.u.nd2.9@gmail.com</a>
<a href=""mailto:i.nt.erm.oneyta.ryf.u.n.d.29@gmail.com"">i.nt.erm.oneyta.ryf.u.n.d.29@gmail.com</a>
<a href=""mailto:i.n.ter.mo.n.eyt.a.r.yfund2.9@gmail.com"">i.n.ter.mo.n.eyt.a.r.yfund2.9@gmail.com</a>
<a href=""mailto:inte.rmoneytary.f.un.d2.9@gmail.com"">inte.rmoneytary.f.un.d2.9@gmail.com</a>
<a href=""mailto:in.te.r.mon.ey.t.a.r.yf.un.d.2.9@gmail.com"">in.te.r.mon.ey.t.a.r.yf.un.d.2.9@gmail.com</a>
<a href=""mailto:in.term.oneytary.fu.nd2.9@gmail.com"">in.term.oneytary.fu.nd2.9@gmail.com</a>
<a href=""mailto:i.n.t.er.mon.eytar.y.f.u.nd29@gmail.com"">i.n.t.er.mon.eytar.y.f.u.nd29@gmail.com</a>
<a href=""mailto:int.e.rmo.neytary.f.u.n.d.2.9@gmail.com"">int.e.rmo.neytary.f.u.n.d.2.9@gmail.com</a>
<a href=""mailto:in.te.r.mon.eyt.a.r.y.f.und.2.9@gmail.com"">in.te.r.mon.eyt.a.r.y.f.und.2.9@gmail.com</a>
<a href=""mailto:int.e.rmo.n.e.y.t.aryfu.n.d29@gmail.com"">int.e.rmo.n.e.y.t.aryfu.n.d29@gmail.com</a>
<a href=""mailto:i.n.t.e.rmo.n.ey.t.a.ryfun.d.29@gmail.com"">i.n.t.e.rmo.n.ey.t.a.ryfun.d.29@gmail.com</a>
<a href=""mailto:i.nter.mo.n.e.yta.ryf.u.n.d.2.9@gmail.com"">i.nter.mo.n.e.yta.ryf.u.n.d.2.9@gmail.com</a>
<a href=""mailto:inte.rm.o.n.eyt.a.ryf.u.n.d2.9@gmail.com"">inte.rm.o.n.eyt.a.ryf.u.n.d2.9@gmail.com</a>
<a href=""mailto:i.n.te.r.mon.e.yta.r.y.fund2.9@gmail.com"">i.n.te.r.mon.e.yta.r.y.fund2.9@gmail.com</a>
<a href=""mailto:i.n.t.ermon.eytar.yf.un.d.29@gmail.com"">i.n.t.ermon.eytar.yf.un.d.29@gmail.com</a>
<a href=""mailto:i.nter.m.o.n.e.yt.ar.y.f.u.n.d2.9@gmail.com"">i.nter.m.o.n.e.yt.ar.y.f.u.n.d2.9@gmail.com</a>
<a href=""mailto:i.n.termone.yta.r.y.f.un.d.2.9@gmail.com"">i.n.termone.yta.r.y.f.un.d.2.9@gmail.com</a>
<a href=""mailto:in.ter.mo.n.e.yta.r.y.fun.d.2.9@gmail.com"">in.ter.mo.n.e.yta.r.y.fun.d.2.9@gmail.com</a>
<a href=""mailto:i.n.ter.mo.ney.t.ar.yfund2.9@gmail.com"">i.n.ter.mo.ney.t.ar.yfund2.9@gmail.com</a>
<a href=""mailto:inte.rmoneytary.f.un.d.2.9@gmail.com"">inte.rmoneytary.f.un.d.2.9@gmail.com</a>
<a href=""mailto:i.n.te.rm.on.eyt.a.ry.f.u.nd.2.9@gmail.com"">i.n.te.rm.on.eyt.a.ry.f.u.nd.2.9@gmail.com</a>
<a href=""mailto:inte.r.mo.n.e.y.ta.r.yfu.nd2.9@gmail.com"">inte.r.mo.n.e.y.ta.r.yfu.nd2.9@gmail.com</a>
<a href=""mailto:i.n.te.rmoneyt.a.ryf.u.n.d2.9@gmail.com"">i.n.te.rmoneyt.a.ryf.u.n.d2.9@gmail.com</a>
<a href=""mailto:inte.rmone.y.ta.r.yf.und2.9@gmail.com"">inte.rmone.y.ta.r.yf.und2.9@gmail.com</a>
<a href=""mailto:i.n.t.e.r.m.o.n.eyt.ar.yf.u.n.d.2.9@gmail.com"">i.n.t.e.r.m.o.n.eyt.ar.yf.u.n.d.2.9@gmail.com</a>
<a href=""mailto:i.nte.rm.o.neytar.y.fu.n.d29@gmail.com"">i.nte.rm.o.neytar.y.fu.n.d29@gmail.com</a>
<a href=""mailto:int.er.mo.ne.y.t.a.r.yfun.d.2.9@gmail.com"">int.er.mo.ne.y.t.a.r.yfun.d.2.9@gmail.com</a>
<a href=""mailto:i.nte.rm.o.ne.y.ta.r.yfu.n.d.2.9@gmail.com"">i.nte.rm.o.ne.y.ta.r.yfu.n.d.2.9@gmail.com</a>
<a href=""mailto:i.n.ter.m.o.ne.ytar.y.f.und29@gmail.com"">i.n.ter.m.o.ne.ytar.y.f.und29@gmail.com</a>
<a href=""mailto:i.nte.r.mon.e.y.ta.r.y.fun.d.29@gmail.com"">i.nte.r.mon.e.y.ta.r.y.fun.d.29@gmail.com</a>
<a href=""mailto:in.ter.m.on.eyt.ar.yf.und29@gmail.com"">in.ter.m.on.eyt.ar.yf.und29@gmail.com</a>
<a href=""mailto:inte.rm.oney.t.a.ry.fund.29@gmail.com"">inte.rm.oney.t.a.ry.fund.29@gmail.com</a>
<a href=""mailto:int.e.rm.one.yta.r.y.f.u.n.d.29@gmail.com"">int.e.rm.one.yta.r.y.f.u.n.d.29@gmail.com</a>
<a href=""mailto:i.nter.m.one.y.t.ary.f.un.d.2.9@gmail.com"">i.nter.m.one.y.t.ary.f.un.d.2.9@gmail.com</a>
<a href=""mailto:i.nte.r.m.one.y.t.a.ry.f.u.nd29@gmail.com"">i.nte.r.m.one.y.t.a.ry.f.u.nd29@gmail.com</a>
<a href=""mailto:i.nt.e.r.m.on.e.yt.a.r.y.fu.n.d.29@gmail.com"">i.nt.e.r.m.on.e.yt.a.r.y.fu.n.d.29@gmail.com</a>
<a href=""mailto:in.t.e.r.mone.y.ta.ryf.u.nd29@gmail.com"">in.t.e.r.mone.y.ta.ryf.u.nd29@gmail.com</a>
<a href=""mailto:i.nte.r.mo.ne.y.t.a.ry.fu.nd.29@gmail.com"">i.nte.r.mo.ne.y.t.a.ry.fu.nd.29@gmail.com</a>
<a href=""mailto:inte.r.m.o.n.e.yt.aryf.un.d.29@gmail.com"">inte.r.m.o.n.e.yt.aryf.un.d.29@gmail.com</a>
<a href=""mailto:i.nter.m.o.ne.yt.a.ry.fu.nd29@gmail.com"">i.nter.m.o.ne.yt.a.ry.fu.nd29@gmail.com</a>
<a href=""mailto:i.nt.e.rm.one.yt.ary.f.un.d.2.9@gmail.com"">i.nt.e.rm.one.yt.ary.f.un.d.2.9@gmail.com</a>
<a href=""mailto:i.nt.ermone.y.tar.yf.und.2.9@gmail.com"">i.nt.ermone.y.tar.yf.und.2.9@gmail.com</a>
<a href=""mailto:i.n.te.rmoney.ta.ryfu.n.d.29@gmail.com"">i.n.te.rmoney.ta.ryfu.n.d.29@gmail.com</a>
<a href=""mailto:int.e.rm.o.n.e.y.ta.ry.fu.nd2.9@gmail.com"">int.e.rm.o.n.e.y.ta.ry.fu.nd2.9@gmail.com</a>
<a href=""mailto:i.n.t.erm.o.neyt.a.r.y.fund29@gmail.com"">i.n.t.erm.o.neyt.a.r.y.fund29@gmail.com</a>
<a href=""mailto:int.e.r.money.t.ar.yfund.29@gmail.com"">int.e.r.money.t.ar.yfund.29@gmail.com</a>
<a href=""mailto:i.n.te.rmoney.tar.y.fu.n.d.2.9@gmail.com"">i.n.te.rmoney.tar.y.fu.n.d.2.9@gmail.com</a>
<a href=""mailto:i.nterm.o.n.ey.t.a.ry.f.u.nd2.9@gmail.com"">i.nterm.o.n.ey.t.a.ry.f.u.nd2.9@gmail.com</a>
<a href=""mailto:i.ntermone.y.t.ar.yf.un.d2.9@gmail.com"">i.ntermone.y.t.ar.yf.un.d2.9@gmail.com</a>
<a href=""mailto:in.t.ermo.n.ey.t.a.ryf.und.29@gmail.com"">in.t.ermo.n.ey.t.a.ryf.und.29@gmail.com</a>
<a href=""mailto:i.n.term.oneyt.a.ry.f.u.n.d.29@gmail.com"">i.n.term.oneyt.a.ry.f.u.n.d.29@gmail.com</a>
<a href=""mailto:i.n.t.e.r.mon.e.y.ta.ryf.u.n.d29@gmail.com"">i.n.t.e.r.mon.e.y.ta.ryf.u.n.d29@gmail.com</a>
<a href=""mailto:i.n.term.on.eyt.a.ry.f.u.nd29@gmail.com"">i.n.term.on.eyt.a.ry.f.u.nd29@gmail.com</a>
<a href=""mailto:in.term.o.ney.ta.ryfund29@gmail.com"">in.term.o.ney.ta.ryfund29@gmail.com</a>
<a href=""mailto:i.nter.mon.e.yt.a.r.y.fund2.9@gmail.com"">i.nter.mon.e.yt.a.r.y.fund2.9@gmail.com</a>
<a href=""mailto:int.ermon.ey.t.a.r.yf.u.n.d.2.9@gmail.com"">int.ermon.ey.t.a.r.yf.u.n.d.2.9@gmail.com</a>
<a href=""mailto:i.n.t.er.mo.ney.t.a.r.yfun.d2.9@gmail.com"">i.n.t.er.mo.ney.t.a.r.yfun.d2.9@gmail.com</a>
<a href=""mailto:i.n.t.e.r.m.one.yt.a.ry.fu.nd.29@gmail.com"">i.n.t.e.r.m.one.yt.a.ry.fu.nd.29@gmail.com</a>
<a href=""mailto:in.te.r.mon.eytar.yfun.d.29@gmail.com"">in.te.r.mon.eytar.yfun.d.29@gmail.com</a>
<a href=""mailto:in.te.rmo.n.e.y.t.ary.fun.d2.9@gmail.com"">in.te.rmo.n.e.y.t.ary.fun.d2.9@gmail.com</a>
<a href=""mailto:i.n.ter.m.o.n.e.yt.a.r.y.f.un.d29@gmail.com"">i.n.ter.m.o.n.e.yt.a.r.y.f.un.d29@gmail.com</a>
<a href=""mailto:inte.r.mo.n.eyt.ar.yfun.d.29@gmail.com"">inte.r.mo.n.eyt.ar.yfun.d.29@gmail.com</a>
<a href=""mailto:in.t.e.rmo.ney.t.aryfu.n.d29@gmail.com"">in.t.e.rmo.ney.t.aryfu.n.d29@gmail.com</a>
<a href=""mailto:i.n.t.e.r.m.o.n.ey.ta.r.yfu.nd29@gmail.com"">i.n.t.e.r.m.o.n.ey.ta.r.yfu.nd29@gmail.com</a>
<a href=""mailto:i.nte.rmo.neytar.y.fund.2.9@gmail.com"">i.nte.rmo.neytar.y.fund.2.9@gmail.com</a>
<a href=""mailto:in.t.e.rm.o.n.e.ytary.f.u.n.d.29@gmail.com"">in.t.e.rm.o.n.e.ytary.f.u.n.d.29@gmail.com</a>
<a href=""mailto:i.n.t.e.r.mon.ey.t.ary.fund2.9@gmail.com"">i.n.t.e.r.mon.ey.t.ary.fund2.9@gmail.com</a>
<a href=""mailto:i.nt.ermo.neytaryfu.n.d29@gmail.com"">i.nt.ermo.neytaryfu.n.d29@gmail.com</a>
<a href=""mailto:i.n.t.er.mo.ney.t.a.r.yf.un.d.2.9@gmail.com"">i.n.t.er.mo.ney.t.a.r.yf.un.d.2.9@gmail.com</a>
<a href=""mailto:in.t.e.r.m.on.eyt.ary.f.un.d.2.9@gmail.com"">in.t.e.r.m.on.eyt.ary.f.un.d.2.9@gmail.com</a>
<a href=""mailto:in.te.rm.one.ytar.yfu.n.d.2.9@gmail.com"">in.te.rm.one.ytar.yfu.n.d.2.9@gmail.com</a>
<a href=""mailto:in.te.rmo.n.e.yt.ar.y.f.un.d2.9@gmail.com"">in.te.rmo.n.e.yt.ar.y.f.un.d2.9@gmail.com</a>
<a href=""mailto:i.nte.rm.o.n.e.y.t.a.ryfund2.9@gmail.com"">i.nte.rm.o.n.e.y.t.a.ryfund2.9@gmail.com</a>
<a href=""mailto:in.te.r.mo.n.eyta.r.yfund2.9@gmail.com"">in.te.r.mo.n.eyta.r.yfund2.9@gmail.com</a>
<a href=""mailto:i.nt.e.r.mon.eyta.r.yfund.29@gmail.com"">i.nt.e.r.mon.eyta.r.yfund.29@gmail.com</a>
<a href=""mailto:i.n.t.e.rmon.e.ytary.fu.n.d.2.9@gmail.com"">i.n.t.e.rmon.e.ytary.fu.n.d.2.9@gmail.com</a>
<a href=""mailto:int.ermon.ey.ta.ryfun.d.29@gmail.com"">int.ermon.ey.ta.ryfun.d.29@gmail.com</a>
<a href=""mailto:i.n.ter.mo.ne.y.t.a.r.yfund29@gmail.com"">i.n.ter.mo.ne.y.t.a.r.yfund29@gmail.com</a>
<a href=""mailto:in.t.er.mon.ey.t.ary.fun.d.2.9@gmail.com"">in.t.er.mon.ey.t.ary.fun.d.2.9@gmail.com</a>
<a href=""mailto:inte.r.m.oneyta.r.yf.u.nd2.9@gmail.com"">inte.r.m.oneyta.r.yf.u.nd2.9@gmail.com</a>
<a href=""mailto:i.nterm.o.n.e.yt.aryfun.d2.9@gmail.com"">i.nterm.o.n.e.yt.aryfun.d2.9@gmail.com</a>
<a href=""mailto:in.termon.eyt.aryfund.29@gmail.com"">in.termon.eyt.aryfund.29@gmail.com</a>
<a href=""mailto:int.ermone.yta.ryfund.29@gmail.com"">int.ermone.yta.ryfund.29@gmail.com</a>
<a href=""mailto:inter.m.o.ney.taryfu.nd29@gmail.com"">inter.m.o.ney.taryfu.nd29@gmail.com</a>
<a href=""mailto:in.t.erm.o.n.eyt.ar.y.f.un.d.2.9@gmail.com"">in.t.erm.o.n.eyt.ar.y.f.un.d.2.9@gmail.com</a>
<a href=""mailto:i.nt.er.m.o.ne.y.tar.yf.u.n.d.2.9@gmail.com"">i.nt.er.m.o.ne.y.tar.yf.u.n.d.2.9@gmail.com</a>
<a href=""mailto:i.nt.e.rm.one.yt.a.r.yf.u.n.d.29@gmail.com"">i.nt.e.rm.one.yt.a.r.yf.u.n.d.29@gmail.com</a>
<a href=""mailto:inter.m.on.e.y.t.ar.y.fund.29@gmail.com"">inter.m.on.e.y.t.ar.y.fund.29@gmail.com</a>
<a href=""mailto:inter.m.oney.t.ar.yf.un.d.2.9@gmail.com"">inter.m.oney.t.ar.yf.un.d.2.9@gmail.com</a>
<a href=""mailto:in.te.rm.o.ne.y.t.a.ry.fu.n.d29@gmail.com"">in.te.rm.o.ne.y.t.a.ry.fu.n.d29@gmail.com</a>
<a href=""mailto:i.nt.ermo.neyta.r.y.fund.2.9@gmail.com"">i.nt.ermo.neyta.r.y.fund.2.9@gmail.com</a>
<a href=""mailto:in.t.er.moneyt.ary.fund.29@gmail.com"">in.t.er.moneyt.ary.fund.29@gmail.com</a>
<a href=""mailto:inter.m.one.yta.ryf.und.29@gmail.com"">inter.m.one.yta.ryf.und.29@gmail.com</a>
<a href=""mailto:i.nte.rmo.n.e.y.t.a.ryf.u.n.d29@gmail.com"">i.nte.rmo.n.e.y.t.a.ryf.u.n.d29@gmail.com</a>
<a href=""mailto:i.nt.ermo.n.ey.tary.f.und2.9@gmail.com"">i.nt.ermo.n.ey.tary.f.und2.9@gmail.com</a>
<a href=""mailto:i.nt.ermon.eyt.a.ry.f.u.n.d.29@gmail.com"">i.nt.ermon.eyt.a.ry.f.u.n.d.29@gmail.com</a>
<a href=""mailto:inte.r.mo.ne.y.t.ary.fu.n.d2.9@gmail.com"">inte.r.mo.ne.y.t.ary.fu.n.d2.9@gmail.com</a>
"
SeMkcu94,Untitled,Josif_tepe,C++,Friday 20th of October 2023 12:08:13 PM CDT,"#include <iostream>

using namespace std;

int main() {
    
    int n;
    cin >> n;
    
    if(n % 2 == 0) {
        cout << ""PAREN"" << endl;
    }
    else {
        cout << ""NEPAREN"" << endl;
    }
            
    return 0;
}
"
S8SS6XN4,Untitled,Josif_tepe,C++,Friday 20th of October 2023 12:05:51 PM CDT,"#include <iostream>

using namespace std;

int main() {
    
    int n;
    cin >> n;
    
    if(n % 2 == 0) {
        cout << ""PAREN"" << endl;
    }
    if(n % 2 == 1) {
        cout << ""NEPAREN"" << endl;
    }
            
    return 0;
}
"
Te4EtW4q,Untitled,dllbridge,C,Friday 20th of October 2023 11:58:13 AM CDT,"



#include   <stdio.h>


int foo();

int  n = 8899;


////////////////////////////////////////////////////
int main()                                        // 
{
	
//	int nA = foo();
	
	printf(""%d%d"", foo(), 4);
}







/////////////////////////////////////////////////////
int foo()
{
	
	int n1 = 100;
	int n2 =   2;
	
	int nSumm = n1 + n2;
	
	
return nSumm;	
}






















/*

#include   <stdio.h>



char sz[12] = ""Dima"";

int  n = 8899;

////////////////////////////////////////////////////
int main()                                        // 
{

    printf(""SONY\n"");

    printf(""%s\n"", ""SONY"");
    printf(""%s\n"",     sz);    
    printf(""%d\n"",  10   );

}



*/




















/*


#include   <dllBridge.h>









////////////////////////////////////////////////////
int main()                                        // 
{


    for(int i = 2; i < 28; i += 2) Transit[2][i] = 10000 + i;

    system(""pause"");
}




*/



"
88guE10m,LeetCode 239 - Sliding Window Maximum - NeetCode solution,nathanwailes,Python,Friday 20th of October 2023 11:53:17 AM CDT,"class Solution:
    def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:
        output = []
        q = collections.deque() # index
        l = r = 0

        while r < len(nums):
            # pop smaller values from q
            while q and nums[q[-1]] < nums[r]:
                q.pop()
            q.append(r)

            # remove left val from window
            if l > q[0]:
                q.popleft()
            
            if (r + 1) >= k:
                output.append(nums[q[0]])
                l += 1
            r += 1
        
        return output"
x6drq3X8,Spid_rr's Data,azimuths,JSON,Friday 20th of October 2023 11:51:35 AM CDT,"{""Stats"":{""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""-14""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""Hoppa""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""God Ripper Alt""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""Gate""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""118""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""152""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""248""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Whirlwind""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""{}""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""206""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""140""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Divine Scythe""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""172""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""-5448""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""1697816586""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""589""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""Sky Jump""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""God Ripper""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""Wind Scythe""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Spider""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""1390""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Spider(8)1368161""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Compressed Tornados""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-7""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""245""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""X Wind Impact""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""2524""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""25""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""23""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Extreme Wind""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""748""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""19594""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""3510""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""13""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""10""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""8""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kage""}},""Skilltree"":{""Wind Scythe"":{""ObjectName"":""Wind Scythe"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Sky Jump"":{""ObjectName"":""Sky Jump"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Whirlwind"":{""ObjectName"":""Leaf Whirlwind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Dynamic Entry"":{""ObjectName"":""Dynamic Entry"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Divine Scythe"":{""ObjectName"":""Divine Scythe"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""1000 Years of Death"":{""ObjectName"":""1000 Years of Death"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Great Wind Scythe"":{""ObjectName"":""Great Wind Scythe"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
xBEUkfuf,Spid_rr's Data,azimuths,JSON,Friday 20th of October 2023 10:43:05 AM CDT,"{""Stats"":{""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""-138""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""Hoppa""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""God Ripper Alt""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""Gate""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""118""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""152""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""37""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Whirlwind""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""{}""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""206""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""140""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Divine Scythe""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""172""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""127""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""1697674609""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""600""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""Sky Jump""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""God Ripper""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""Wind Scythe""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Spider""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""1420""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Spider(8)1368161""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Compressed Tornados""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-7""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""245""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""X Wind Impact""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""2520""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""25""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Extreme Wind""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""756""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""25""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""2233""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""8""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kage""}},""Skilltree"":{""Wind Scythe"":{""ObjectName"":""Wind Scythe"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Sky Jump"":{""ObjectName"":""Sky Jump"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Whirlwind"":{""ObjectName"":""Leaf Whirlwind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Dynamic Entry"":{""ObjectName"":""Dynamic Entry"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Divine Scythe"":{""ObjectName"":""Divine Scythe"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""1000 Years of Death"":{""ObjectName"":""1000 Years of Death"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Great Wind Scythe"":{""ObjectName"":""Great Wind Scythe"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
8AL69mFh,baanes's Data,azimuths,JSON,Friday 20th of October 2023 10:41:20 AM CDT,"{""Stats"":{""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""9""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""825""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""Water Dragon Bullet""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Dosaku""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""Crystal Crossing""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""2997""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""100000""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""217""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""100000""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""Jin Smack""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""{}""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""112""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""60""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Rising Wind""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""53""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""-5862""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""10000""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""100000""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""90792365""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""1697751397""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""600""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""Goshyuru""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""Crystal Prison""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Whirlwind""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""KISAME""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""1035""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""KISAME(23)751459""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""21""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Primary Lotus""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-18""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""162""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1000 Years of Death""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""77""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""23""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""22""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Demon Flip""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""400""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""6""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""3343""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""13""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""10""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""Crystal Command""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""18""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Sp. Jounin""}},""Skilltree"":{""Primary Lotus"":{""ObjectName"":""Primary Lotus"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Goshyuru"":{""ObjectName"":""Goshyuru"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""High Powered Chop"":{""ObjectName"":""High Powered Chop"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Crystal Crossing"":{""ObjectName"":""Crystal Crossing"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leg Throw"":{""ObjectName"":""Leg Throw"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Demon Flip"":{""ObjectName"":""Demon Flip"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Rising Wind"":{""ObjectName"":""Leaf Rising Wind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Crystal Command"":{""ObjectName"":""Crystal Command"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Whirlwind"":{""ObjectName"":""Leaf Whirlwind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Knee Strike"":{""ObjectName"":""Knee Strike"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""1000 Years of Death"":{""ObjectName"":""1000 Years of Death"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Crystal Blade"":{""ObjectName"":""Crystal Blade"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Crystal Prison"":{""ObjectName"":""Crystal Prison"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Morning Peacock"":{""ObjectName"":""Morning Peacock"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Eight Gates"":{""ObjectName"":""Eight Gates"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Dynamic Entry"":{""ObjectName"":""Dynamic Entry"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Dosaku"":{""ObjectName"":""Dosaku"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Misogi"":{""ObjectName"":""Misogi"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Demon Flip M2"":{""ObjectName"":""Demon Flip M2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
tw5P3gfG,Untitled,Josif_tepe,C++,Friday 20th of October 2023 10:35:18 AM CDT,"#include <iostream>

using namespace std;

int main() {
    
    int n;
    cin >> n;
    int m;
    cin >> m;
    
    int x = n / 10;
    int y = m / 10;

    int l = x % 10;
   
    int u = y % 10;
    cout << u + l << endl;
    return 0;
}
"
NarrCDXC,2,aize33,Arduino,Friday 20th of October 2023 10:23:49 AM CDT,"int led0 = 0;
int led1 = 1;
int led2 = 2;
int led3 = 3;
int led4 = 4;
int led5 = 5;
int led6 = 6;
int led7 = 7;
int led8 = 8;
int led9 = 9;
int led10 = 10;
int led11= 11;
int led12= 12;
int led13= 13;


void setup() {
  pinMode(led0,OUTPUT);
   pinMode(led1,OUTPUT);
   pinMode(led2,OUTPUT);
   pinMode(led3,OUTPUT);
   pinMode(led4,OUTPUT);
   pinMode(led5,OUTPUT);
   pinMode(led6,OUTPUT);
   pinMode(led7,OUTPUT);
   pinMode(led8,OUTPUT);
   pinMode(led9,OUTPUT);
   pinMode(led10,OUTPUT);
   pinMode(led11,OUTPUT);
   pinMode(led12,OUTPUT);
   pinMode(led13,OUTPUT);

}

void loop() 
{
  
  blink_1();
  blink_1();
  
  blink_2();
  blink_2();
  
  blink_3();
  blink_3();
  
  blink_4();
  blink_4();
 
  blink_5();
  blink_5();


  blink_6();
  blink_6();


  blink_7();
  blink_7();

  blink_8();
  blink_8();
 
 blink_9();
 blink_9();

 blink_10();
 blink_10();

 blink_11();
 blink_11();

  blink_12();
  blink_12();

 blink_13();
 blink_13();

 blink_14();
 blink_14();

 blink_15();
 blink_15();

  blink_16();
  blink_16();

 // blink_17();
//  blink_17();

//  blink_18();
//  blink_18();

//  blink_19();
//  blink_19();

//  blink_20();
//  blink_20();

 // blink_21();
//  blink_21();

//  blink_22();
//  blink_22();

//  blink_23();
//  blink_23();

//  blink_24();
//  blink_24();

 //  blink_25();
//  blink_25();

//   blink_26();
//  blink_26();

 //  blink_27();
//  blink_27();

 //  blink_28();
//  blink_28();

//   blink_29();
//  blink_29();

//   blink_30();
//  blink_30();

//   blink_31();
//  blink_31();

 //  blink_32();
//  blink_32();

//   blink_33();
//  blink_33();
  
//   blink_34();
 // blink_4();

 //  blink_35();
//  blink_35();

//   blink_36();
//  blink_36();
 
 
}

/////////////pattern 1///////////////////////////////////////////////////////////////////////////////////////////////////
void blink_1()
{
  int t=80;

   
  
  
  
  digitalWrite(led1, HIGH );
  delay(t);
  digitalWrite(led2,HIGH);
  delay(t);
  digitalWrite(led3,HIGH);
  delay(t);
   digitalWrite(led4,HIGH);
  delay(t);
  digitalWrite(led5,HIGH);
  delay(t);
  digitalWrite(led6,HIGH);
  delay(t);
  digitalWrite(led7,HIGH);
  delay(t);
  digitalWrite(led8,HIGH);
  delay(t);
  digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led11,HIGH);
  delay(t);
  digitalWrite(led12,HIGH);
  delay(t);
  digitalWrite(led13,HIGH);
  delay(t);

  //////////////////////////
  
  
  
  digitalWrite(led1, LOW );
  delay(t);
  digitalWrite(led2,LOW);
  delay(t);
  digitalWrite(led3,LOW);
  delay(t);
  digitalWrite(led4,LOW);
  delay(t);
  digitalWrite(led5,LOW);
  delay(t);
  digitalWrite(led6,LOW);
  delay(t);
  digitalWrite(led7,LOW);
  delay(t);
  digitalWrite(led8,LOW);
  delay(t);
  digitalWrite(led9,LOW);
  delay(t);
  digitalWrite(led10,LOW);
  delay(t);
  digitalWrite(led11,LOW);
  delay(t);
  digitalWrite(led12,LOW);
  delay(t);
  digitalWrite(led13,LOW);
  delay(t);



digitalWrite(led1, LOW);
digitalWrite(led2,LOW);
digitalWrite(led3,LOW);
digitalWrite(led4,LOW);
digitalWrite(led5,LOW);
digitalWrite(led6,LOW);
digitalWrite(led7,LOW);
digitalWrite(led8, LOW);
digitalWrite(led9,LOW);
digitalWrite(led10,LOW);
digitalWrite(led11,LOW);
digitalWrite(led12,LOW);
digitalWrite(led13,LOW);




 


}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////pattern 2///////////////////////////////////////////////////////////////////////////////////////////////////
void blink_2()
{
  int t=80;
 
  digitalWrite(led1,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led2,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led3,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
  digitalWrite(led4,HIGH);
  delay(t);
  digitalWrite(led4,LOW);
  digitalWrite(led5,HIGH);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led6,HIGH);
  delay(t);
  digitalWrite(led6,LOW);
  digitalWrite(led7,HIGH);
  delay(t);
  digitalWrite(led7,LOW);
  digitalWrite(led8,HIGH);
   delay(t);
 digitalWrite(led8,LOW);
  digitalWrite(led9,HIGH);
   delay(t);
 digitalWrite(led9,LOW);
  digitalWrite(led10,HIGH);
   delay(t);
 digitalWrite(led10,LOW);
  digitalWrite(led11,HIGH);
   delay(t);
    digitalWrite(led11,LOW);
  digitalWrite(led12,HIGH);
   delay(t);
 digitalWrite(led12,LOW);
  digitalWrite(led13,HIGH);
   delay(t);
 digitalWrite(led13,LOW);
delay(t);

digitalWrite(led1, LOW);
digitalWrite(led2,LOW);
digitalWrite(led3,LOW);
digitalWrite(led4,LOW);
digitalWrite(led5,LOW);
digitalWrite(led6,LOW);
digitalWrite(led7,LOW);
digitalWrite(led8, LOW);
digitalWrite(led9,LOW);
digitalWrite(led10,LOW);
digitalWrite(led11,LOW);
digitalWrite(led12,LOW);
digitalWrite(led13,LOW);

 
   
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////pattern 3///////////////////////////////////////////////////////////////////////////////////////////////////
void blink_3()
{
  int t=150;

  digitalWrite(led1, HIGH );

  digitalWrite(led3,HIGH);
  
  digitalWrite(led5,HIGH);

   digitalWrite(led7,HIGH);

  digitalWrite(led9,HIGH);

  digitalWrite(led11,HIGH);

  digitalWrite(led13,HIGH);
 
  digitalWrite(led2,LOW);
  
  digitalWrite(led4,LOW);
  
  digitalWrite(led6,LOW);
  
  digitalWrite(led8,LOW);
  
  digitalWrite(led10,LOW);
  
  digitalWrite(led12,LOW);
  delay(t);
////////////////
 digitalWrite(led1, LOW );

  digitalWrite(led3,LOW);
 
  digitalWrite(led5,LOW);
 
   digitalWrite(led7,LOW);
 
  digitalWrite(led9,LOW);

  digitalWrite(led11,LOW);

  digitalWrite(led13,LOW);

  digitalWrite(led2,HIGH);
  
  digitalWrite(led4,HIGH);

  digitalWrite(led6,HIGH);
  
  digitalWrite(led8,HIGH);
  
  digitalWrite(led10,HIGH);
 
  digitalWrite(led12,HIGH);
  delay(t);






digitalWrite(led1, HIGH );

  digitalWrite(led3,HIGH);
  
  digitalWrite(led5,HIGH);

   digitalWrite(led7,HIGH);

  digitalWrite(led9,HIGH);

  digitalWrite(led11,HIGH);

  digitalWrite(led13,HIGH);

  digitalWrite(led2,LOW);
  
  digitalWrite(led4,LOW);
  
  digitalWrite(led6,LOW);
  
  digitalWrite(led8,LOW);
  
  digitalWrite(led10,LOW);
  
  digitalWrite(led12,LOW);
  delay(t);
////////////////
 digitalWrite(led1, LOW );

  digitalWrite(led3,LOW);
 
  digitalWrite(led5,LOW);
 
   digitalWrite(led7,LOW);
 
  digitalWrite(led9,LOW);

  digitalWrite(led11,LOW);

  digitalWrite(led13,LOW);

  digitalWrite(led2,HIGH);
  
  digitalWrite(led4,HIGH);

  digitalWrite(led6,HIGH);
  
  digitalWrite(led8,HIGH);
  
  digitalWrite(led10,HIGH);
 
  digitalWrite(led12,HIGH);
  delay(t);


digitalWrite(led1, LOW);
digitalWrite(led2,LOW);
digitalWrite(led3,LOW);
digitalWrite(led4,LOW);
digitalWrite(led5,LOW);
digitalWrite(led6,LOW);
digitalWrite(led7,LOW);
digitalWrite(led8, LOW);
digitalWrite(led9,LOW);
digitalWrite(led10,LOW);
digitalWrite(led11,LOW);
digitalWrite(led12,LOW);
digitalWrite(led13,LOW);






}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////pattern 4///////////////////////////////////////////////////////////////////////////////////////////////////
void blink_4()
{
  int t=80;

  digitalWrite(led1, HIGH );
  delay(t);
  digitalWrite(led2,HIGH);
  delay(t);
  
  digitalWrite(led3,HIGH);
  digitalWrite(led1, LOW );
  delay(t);

  digitalWrite(led4,HIGH);
  digitalWrite(led2, LOW );
  delay(t);

 digitalWrite(led5,HIGH);
  digitalWrite(led3, LOW );
  delay(t);

 digitalWrite(led6,HIGH);
  digitalWrite(led4, LOW );
  delay(t);

   digitalWrite(led7,HIGH);
  digitalWrite(led5, LOW );
  delay(t);

   digitalWrite(led8,HIGH);
  digitalWrite(led6, LOW );
  delay(t);

   digitalWrite(led9,HIGH);
  digitalWrite(led7, LOW );
  delay(t);

   digitalWrite(led10,HIGH);
  digitalWrite(led8, LOW );
  delay(t);

   digitalWrite(led11,HIGH);
  digitalWrite(led9, LOW );
  delay(t);

   digitalWrite(led12,HIGH);
  digitalWrite(led10, LOW );
  delay(t);

digitalWrite(led13,HIGH);
  digitalWrite(led11, LOW );
  delay(t);

digitalWrite(led12, LOW );
  delay(t);

digitalWrite(led13, LOW );
  delay(t);


digitalWrite(led1, LOW);
digitalWrite(led2,LOW);
digitalWrite(led3,LOW);
digitalWrite(led4,LOW);
digitalWrite(led5,LOW);
digitalWrite(led6,LOW);
digitalWrite(led7,LOW);
digitalWrite(led8, LOW);
digitalWrite(led9,LOW);
digitalWrite(led10,LOW);
digitalWrite(led11,LOW);
digitalWrite(led12,LOW);
digitalWrite(led13,LOW);
  

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////pattern 5///////////////////////////////////////////////////////////////////////////////////////////////////
void blink_5()
{
  int t=70;

digitalWrite(led1,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led2,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led3,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
  digitalWrite(led4,HIGH);
  delay(t);
  digitalWrite(led4,LOW);
  digitalWrite(led5,HIGH);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led6,HIGH);
  delay(t);
  digitalWrite(led6,LOW);
  digitalWrite(led7,HIGH);
  delay(t);
  digitalWrite(led7,LOW);
  digitalWrite(led8,HIGH);
   delay(t);
 digitalWrite(led8,LOW);
  digitalWrite(led9,HIGH);
   delay(t);
 digitalWrite(led9,LOW);
  digitalWrite(led10,HIGH);
   delay(t);
 digitalWrite(led10,LOW);
  digitalWrite(led11,HIGH);
   delay(t);
    digitalWrite(led11,LOW);
  digitalWrite(led12,HIGH);
   delay(t);
 digitalWrite(led12,LOW);
  digitalWrite(led13,HIGH);
   delay(t);


digitalWrite(led1,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led2,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led3,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
  digitalWrite(led4,HIGH);
  delay(t);
  digitalWrite(led4,LOW);
  digitalWrite(led5,HIGH);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led6,HIGH);
  delay(t);
  digitalWrite(led6,LOW);
  digitalWrite(led7,HIGH);
  delay(t);
  digitalWrite(led7,LOW);
  digitalWrite(led8,HIGH);
   delay(t);
 digitalWrite(led8,LOW);
  digitalWrite(led9,HIGH);
   delay(t);
 digitalWrite(led9,LOW);
  digitalWrite(led10,HIGH);
   delay(t);
 digitalWrite(led10,LOW);
  digitalWrite(led11,HIGH);
   delay(t);
    digitalWrite(led11,LOW);
  digitalWrite(led12,HIGH);
   delay(t);


digitalWrite(led1,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led2,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led3,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
  digitalWrite(led4,HIGH);
  delay(t);
  digitalWrite(led4,LOW);
  digitalWrite(led5,HIGH);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led6,HIGH);
  delay(t);
  digitalWrite(led6,LOW);
  digitalWrite(led7,HIGH);
  delay(t);
  digitalWrite(led7,LOW);
  digitalWrite(led8,HIGH);
   delay(t);
 digitalWrite(led8,LOW);
  digitalWrite(led9,HIGH);
   delay(t);
 digitalWrite(led9,LOW);
  digitalWrite(led10,HIGH);
   delay(t);
 digitalWrite(led10,LOW);
  digitalWrite(led11,HIGH);
   delay(t);


 digitalWrite(led1,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led2,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led3,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
  digitalWrite(led4,HIGH);
  delay(t);
  digitalWrite(led4,LOW);
  digitalWrite(led5,HIGH);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led6,HIGH);
  delay(t);
  digitalWrite(led6,LOW);
  digitalWrite(led7,HIGH);
  delay(t);
  digitalWrite(led7,LOW);
  digitalWrite(led8,HIGH);
   delay(t);
 digitalWrite(led8,LOW);
  digitalWrite(led9,HIGH);
   delay(t);
 digitalWrite(led9,LOW);
  digitalWrite(led10,HIGH);
   delay(t);

digitalWrite(led1,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led2,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led3,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
  digitalWrite(led4,HIGH);
  delay(t);
  digitalWrite(led4,LOW);
  digitalWrite(led5,HIGH);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led6,HIGH);
  delay(t);
  digitalWrite(led6,LOW);
  digitalWrite(led7,HIGH);
  delay(t);
  digitalWrite(led7,LOW);
  digitalWrite(led8,HIGH);
   delay(t);
 digitalWrite(led8,LOW);
  digitalWrite(led9,HIGH);
   delay(t);

digitalWrite(led1,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led2,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led3,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
  digitalWrite(led4,HIGH);
  delay(t);
  digitalWrite(led4,LOW);
  digitalWrite(led5,HIGH);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led6,HIGH);
  delay(t);
  digitalWrite(led6,LOW);
  digitalWrite(led7,HIGH);
  delay(t);
  digitalWrite(led7,LOW);
  digitalWrite(led8,HIGH);
   delay(t);

digitalWrite(led1,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led2,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led3,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
  digitalWrite(led4,HIGH);
  delay(t);
  digitalWrite(led4,LOW);
  digitalWrite(led5,HIGH);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led6,HIGH);
  delay(t);
  digitalWrite(led6,LOW);
  digitalWrite(led7,HIGH);
  delay(t);

digitalWrite(led1,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led2,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led3,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
  digitalWrite(led4,HIGH);
  delay(t);
  digitalWrite(led4,LOW);
  digitalWrite(led5,HIGH);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led6,HIGH);
  delay(t);

 digitalWrite(led1,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led2,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led3,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
  digitalWrite(led4,HIGH);
  delay(t);
  digitalWrite(led4,LOW);
  digitalWrite(led5,HIGH);
  delay(t);

   digitalWrite(led1,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led2,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led3,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
  digitalWrite(led4,HIGH);
  delay(t);

 digitalWrite(led1,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led2,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led3,HIGH);
  delay(t);

 digitalWrite(led1,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led2,HIGH);
  delay(t);


 digitalWrite(led1,HIGH);
  delay(t);




digitalWrite(led1, LOW);
digitalWrite(led2,LOW);
digitalWrite(led3,LOW);
digitalWrite(led4,LOW);
digitalWrite(led5,LOW);
digitalWrite(led6,LOW);
digitalWrite(led7,LOW);
digitalWrite(led8, LOW);
digitalWrite(led9,LOW);
digitalWrite(led10,LOW);
digitalWrite(led11,LOW);
digitalWrite(led12,LOW);
digitalWrite(led13,LOW);
  

}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////pattern 6///////////////////////////////////////////////////////////////////////////////////////////////////
void blink_6()
{
  int t=70;

digitalWrite(led1,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led2,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led3,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
  digitalWrite(led4,HIGH);
  delay(t);
  digitalWrite(led4,LOW);
  digitalWrite(led5,HIGH);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led6,HIGH);
  delay(t);
  digitalWrite(led6,LOW);
  digitalWrite(led7,HIGH);
  delay(t);
  digitalWrite(led7,LOW);
  digitalWrite(led8,HIGH);
   delay(t);
 digitalWrite(led8,LOW);
  digitalWrite(led9,HIGH);
   delay(t);
 digitalWrite(led9,LOW);
  digitalWrite(led10,HIGH);
   delay(t);
 digitalWrite(led10,LOW);
  digitalWrite(led11,HIGH);
   delay(t);
    digitalWrite(led11,LOW);
  digitalWrite(led12,HIGH);
   delay(t);
 digitalWrite(led12,LOW);
  digitalWrite(led13,HIGH);
   delay(t);
  digitalWrite(led13,LOW);
  digitalWrite(led12,HIGH);
  delay(t);
  digitalWrite(led12,LOW);
  digitalWrite(led11,HIGH);
  delay(t);
  digitalWrite(led11,LOW);
  digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led10,LOW);
  digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led9,LOW);
  digitalWrite(led8,HIGH);
  delay(t);
  digitalWrite(led8,LOW);
  digitalWrite(led7,HIGH);
  delay(t);
  digitalWrite(led7,LOW);
  digitalWrite(led6,HIGH);
   delay(t);
 digitalWrite(led6,LOW);
  digitalWrite(led5,HIGH);
   delay(t);
 digitalWrite(led5,LOW);
  digitalWrite(led4,HIGH);
   delay(t);
 digitalWrite(led4,LOW);
  digitalWrite(led3,HIGH);
   delay(t);
    digitalWrite(led3,LOW);
  digitalWrite(led2,HIGH);
   delay(t);
 digitalWrite(led2,LOW);
  digitalWrite(led1,HIGH);
   delay(t);


digitalWrite(led1,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led2,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led3,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
  digitalWrite(led4,HIGH);
  delay(t);
  digitalWrite(led4,LOW);
  digitalWrite(led5,HIGH);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led6,HIGH);
  delay(t);
  digitalWrite(led6,LOW);
  digitalWrite(led7,HIGH);
  delay(t);
  digitalWrite(led7,LOW);
  digitalWrite(led8,HIGH);
   delay(t);
 digitalWrite(led8,LOW);
  digitalWrite(led9,HIGH);
   delay(t);
 digitalWrite(led9,LOW);
  digitalWrite(led10,HIGH);
   delay(t);
 digitalWrite(led10,LOW);
  digitalWrite(led11,HIGH);
   delay(t);
    digitalWrite(led11,LOW);
  digitalWrite(led12,HIGH);
   delay(t);
 digitalWrite(led12,LOW);
  digitalWrite(led13,HIGH);
   delay(t);
  digitalWrite(led13,LOW);
  digitalWrite(led12,HIGH);
  delay(t);
  digitalWrite(led12,LOW);
  digitalWrite(led11,HIGH);
  delay(t);
  digitalWrite(led11,LOW);
  digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led10,LOW);
  digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led9,LOW);
  digitalWrite(led8,HIGH);
  delay(t);
  digitalWrite(led8,LOW);
  digitalWrite(led7,HIGH);
  delay(t);
  digitalWrite(led7,LOW);
  digitalWrite(led6,HIGH);
   delay(t);
 digitalWrite(led6,LOW);
  digitalWrite(led5,HIGH);
   delay(t);
 digitalWrite(led5,LOW);
  digitalWrite(led4,HIGH);
   delay(t);
 digitalWrite(led4,LOW);
  digitalWrite(led3,HIGH);
   delay(t);
    digitalWrite(led3,LOW);
  digitalWrite(led2,HIGH);
   delay(t);
 digitalWrite(led2,LOW);
  digitalWrite(led1,HIGH);
   delay(t);



digitalWrite(led1, LOW);
digitalWrite(led2,LOW);
digitalWrite(led3,LOW);
digitalWrite(led4,LOW);
digitalWrite(led5,LOW);
digitalWrite(led6,LOW);
digitalWrite(led7,LOW);
digitalWrite(led8, LOW);
digitalWrite(led9,LOW);
digitalWrite(led10,LOW);
digitalWrite(led11,LOW);
digitalWrite(led12,LOW);
digitalWrite(led13,LOW);


}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////pattern 7///////////////////////////////////////////////////////////////////////////////////////////////////
void blink_7()
{
  int t=60;

 digitalWrite(led1, HIGH );
  delay(t);
  digitalWrite(led2,HIGH);
  delay(t);
  digitalWrite(led3,HIGH);
  delay(t);
   digitalWrite(led4,HIGH);
  delay(t);
  digitalWrite(led5,HIGH);
  delay(t);
  digitalWrite(led6,HIGH);
  delay(t);
  digitalWrite(led7,HIGH);
  delay(t);
  digitalWrite(led8,HIGH);
  delay(t);
  digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led11,HIGH);
  delay(t);
  digitalWrite(led12,HIGH);
  delay(t);
  digitalWrite(led13,HIGH);
  delay(t);
  
  
  digitalWrite(led1, LOW );
  delay(t);
  digitalWrite(led2,LOW);
  delay(t);
  digitalWrite(led3,LOW);
  delay(t);
  digitalWrite(led4,LOW);
  delay(t);
  digitalWrite(led5,LOW);
  delay(t);
  digitalWrite(led6,LOW);
  delay(t);
  digitalWrite(led7,LOW);
  delay(t);
  digitalWrite(led8,LOW);
  delay(t);
  digitalWrite(led9,LOW);
  delay(t);
  digitalWrite(led10,LOW);
  delay(t);
  digitalWrite(led11,LOW);
  delay(t);
  digitalWrite(led12,LOW);
  delay(t);
  digitalWrite(led13,LOW);
  delay(t);


 digitalWrite(led13, HIGH );
  delay(t);
  digitalWrite(led12,HIGH);
  delay(t);
  digitalWrite(led11,HIGH);
  delay(t);
   digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led8,HIGH);
  delay(t);
  digitalWrite(led7,HIGH);
  delay(t);
  digitalWrite(led6,HIGH);
  delay(t);
  digitalWrite(led5,HIGH);
  delay(t);
  digitalWrite(led4,HIGH);
  delay(t);
  digitalWrite(led3,HIGH);
  delay(t);
  digitalWrite(led2,HIGH);
  delay(t);
  digitalWrite(led1,HIGH);
  delay(t);

digitalWrite(led13, LOW );
  delay(t);
  digitalWrite(led12,LOW);
  delay(t);
  digitalWrite(led11,LOW);
  delay(t);
  digitalWrite(led10,LOW);
  delay(t);
  digitalWrite(led9,LOW);
  delay(t);
  digitalWrite(led8,LOW);
  delay(t);
  digitalWrite(led7,LOW);
  delay(t);
  digitalWrite(led6,LOW);
  delay(t);
  digitalWrite(led5,LOW);
  delay(t);
  digitalWrite(led4,LOW);
  delay(t);
  digitalWrite(led3,LOW);
  delay(t);
  digitalWrite(led2,LOW);
  delay(t);
  digitalWrite(led1,LOW);
  delay(t);




digitalWrite(led1, LOW);
digitalWrite(led2,LOW);
digitalWrite(led3,LOW);
digitalWrite(led4,LOW);
digitalWrite(led5,LOW);
digitalWrite(led6,LOW);
digitalWrite(led7,LOW);
digitalWrite(led8, LOW);
digitalWrite(led9,LOW);
digitalWrite(led10,LOW);
digitalWrite(led11,LOW);
digitalWrite(led12,LOW);
digitalWrite(led13,LOW);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////pattern 8///////////////////////////////////////////////////////////////////////////////////////////////////
void blink_8()
{
  int t=70;

   digitalWrite(led1, HIGH );
   digitalWrite(led13, HIGH );
  delay(t);
  digitalWrite(led2,HIGH);
  digitalWrite(led12, HIGH );
  delay(t);
  digitalWrite(led3,HIGH);
  digitalWrite(led11, HIGH );
  delay(t);
  digitalWrite(led4,HIGH);
  digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led5,HIGH);
  digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led6,HIGH);
  digitalWrite(led8,HIGH);
  delay(t);

  digitalWrite(led1, LOW );
  digitalWrite(led13, LOW );
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led12, LOW );
  delay(t);
  digitalWrite(led3,LOW);
  digitalWrite(led11, LOW);
  delay(t);
  digitalWrite(led4,LOW);
  digitalWrite(led10,LOW);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led9,LOW);
  delay(t);
  digitalWrite(led6,LOW);
  digitalWrite(led8,LOW);
  delay(t);



 digitalWrite(led1, HIGH );
   digitalWrite(led13, HIGH );
  delay(t);
  digitalWrite(led2,HIGH);
  digitalWrite(led12, HIGH );
  delay(t);
  digitalWrite(led3,HIGH);
  digitalWrite(led11, HIGH );
  delay(t);
  digitalWrite(led4,HIGH);
  digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led5,HIGH);
  digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led6,HIGH);
  digitalWrite(led8,HIGH);
  delay(t);

  digitalWrite(led1, LOW );
  digitalWrite(led13, LOW );
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led12, LOW );
  delay(t);
  digitalWrite(led3,LOW);
  digitalWrite(led11, LOW);
  delay(t);
  digitalWrite(led4,LOW);
  digitalWrite(led10,LOW);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led9,LOW);
  delay(t);
  digitalWrite(led6,LOW);
  digitalWrite(led8,LOW);
  delay(t);

  
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////pattern 9///////////////////////////////////////////////////////////////////////////////////////////////////
void blink_9()
{
  int t=70;

   digitalWrite(led1, HIGH );
   digitalWrite(led13, HIGH );
  delay(t);
  digitalWrite(led2,HIGH);
  digitalWrite(led12, HIGH );
  delay(t);
  digitalWrite(led3,HIGH);
  digitalWrite(led11, HIGH );
  delay(t);
  digitalWrite(led4,HIGH);
  digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led5,HIGH);
  digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led6,HIGH);
  digitalWrite(led8,HIGH);
  delay(t);

  digitalWrite(led8, LOW );
  digitalWrite(led6, LOW );
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led9, LOW );
  delay(t);
  digitalWrite(led4,LOW);
  digitalWrite(led10, LOW);
  delay(t);
  digitalWrite(led3,LOW);
  digitalWrite(led11,LOW);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led12,LOW);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led13,LOW);
  delay(t);

   digitalWrite(led1, HIGH );
   digitalWrite(led13, HIGH );
  delay(t);
  digitalWrite(led2,HIGH);
  digitalWrite(led12, HIGH );
  delay(t);
  digitalWrite(led3,HIGH);
  digitalWrite(led11, HIGH );
  delay(t);
  digitalWrite(led4,HIGH);
  digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led5,HIGH);
  digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led6,HIGH);
  digitalWrite(led8,HIGH);
  delay(t);

  digitalWrite(led8, LOW );
  digitalWrite(led6, LOW );
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led9, LOW );
  delay(t);
  digitalWrite(led4,LOW);
  digitalWrite(led10, LOW);
  delay(t);
  digitalWrite(led3,LOW);
  digitalWrite(led11,LOW);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led12,LOW);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led13,LOW);
  delay(t);

   digitalWrite(led1, HIGH );
   digitalWrite(led13, HIGH );
  delay(t);
  digitalWrite(led2,HIGH);
  digitalWrite(led12, HIGH );
  delay(t);
  digitalWrite(led3,HIGH);
  digitalWrite(led11, HIGH );
  delay(t);
  digitalWrite(led4,HIGH);
  digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led5,HIGH);
  digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led6,HIGH);
  digitalWrite(led8,HIGH);
  delay(t);

  digitalWrite(led8, LOW );
  digitalWrite(led6, LOW );
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led9, LOW );
  delay(t);
  digitalWrite(led4,LOW);
  digitalWrite(led10, LOW);
  delay(t);
  digitalWrite(led3,LOW);
  digitalWrite(led11,LOW);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led12,LOW);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led13,LOW);
  delay(t);


digitalWrite(led1, LOW);
digitalWrite(led2,LOW);
digitalWrite(led3,LOW);
digitalWrite(led4,LOW);
digitalWrite(led5,LOW);
digitalWrite(led6,LOW);
digitalWrite(led7,LOW);
digitalWrite(led8, LOW);
digitalWrite(led9,LOW);
digitalWrite(led10,LOW);
digitalWrite(led11,LOW);
digitalWrite(led12,LOW);
digitalWrite(led13,LOW);

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////pattern 10///////////////////////////////////////////////////////////////////////////////////////////////////
void blink_10()
{
  int t=100;


digitalWrite(led1, HIGH);
digitalWrite(led2,HIGH);
digitalWrite(led3,HIGH);
digitalWrite(led4,HIGH);
digitalWrite(led5,HIGH);
digitalWrite(led6,HIGH);
digitalWrite(led7,HIGH);
digitalWrite(led8, HIGH);
digitalWrite(led9,HIGH);
digitalWrite(led10,HIGH);
digitalWrite(led11,HIGH);
digitalWrite(led12,HIGH);
digitalWrite(led13,HIGH);
delay(t);


digitalWrite(led1, LOW);
digitalWrite(led2,LOW);
digitalWrite(led3,LOW);
digitalWrite(led4,LOW);
digitalWrite(led5,LOW);
digitalWrite(led6,LOW);
digitalWrite(led7,LOW);
digitalWrite(led8, LOW);
digitalWrite(led9,LOW);
digitalWrite(led10,LOW);
digitalWrite(led11,LOW);
digitalWrite(led12,LOW);
digitalWrite(led13,LOW);
delay(t);


digitalWrite(led1, HIGH);
digitalWrite(led2,HIGH);
digitalWrite(led3,HIGH);
digitalWrite(led4,HIGH);
digitalWrite(led5,HIGH);
digitalWrite(led6,HIGH);
digitalWrite(led7,HIGH);
digitalWrite(led8, HIGH);
digitalWrite(led9,HIGH);
digitalWrite(led10,HIGH);
digitalWrite(led11,HIGH);
digitalWrite(led12,HIGH);
digitalWrite(led13,HIGH);
delay(t);


digitalWrite(led1, LOW);
digitalWrite(led2,LOW);
digitalWrite(led3,LOW);
digitalWrite(led4,LOW);
digitalWrite(led5,LOW);
digitalWrite(led6,LOW);
digitalWrite(led7,LOW);
digitalWrite(led8, LOW);
digitalWrite(led9,LOW);
digitalWrite(led10,LOW);
digitalWrite(led11,LOW);
digitalWrite(led12,LOW);
digitalWrite(led13,LOW);
delay(t);

digitalWrite(led1, HIGH);
digitalWrite(led2,HIGH);
digitalWrite(led3,HIGH);
digitalWrite(led4,HIGH);
digitalWrite(led5,HIGH);
digitalWrite(led6,HIGH);
digitalWrite(led7,HIGH);
digitalWrite(led8, HIGH);
digitalWrite(led9,HIGH);
digitalWrite(led10,HIGH);
digitalWrite(led11,HIGH);
digitalWrite(led12,HIGH);
digitalWrite(led13,HIGH);
delay(t);


digitalWrite(led1, LOW);
digitalWrite(led2,LOW);
digitalWrite(led3,LOW);
digitalWrite(led4,LOW);
digitalWrite(led5,LOW);
digitalWrite(led6,LOW);
digitalWrite(led7,LOW);
digitalWrite(led8, LOW);
digitalWrite(led9,LOW);
digitalWrite(led10,LOW);
digitalWrite(led11,LOW);
digitalWrite(led12,LOW);
digitalWrite(led13,LOW);
delay(t);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////pattern 11///////////////////////////////////////////////////////////////////////////////////////////////////
void blink_11()
{
  int t=80;

  digitalWrite(led1, HIGH );
  delay(t);
  digitalWrite(led2,HIGH);
  delay(t);
  
  digitalWrite(led3,HIGH);
  digitalWrite(led1, LOW );
  delay(t);

  digitalWrite(led4,HIGH);
  digitalWrite(led2, LOW );
  delay(t);

 digitalWrite(led5,HIGH);
  digitalWrite(led3, LOW );
  delay(t);

 digitalWrite(led6,HIGH);
  digitalWrite(led4, LOW );
  delay(t);

   digitalWrite(led7,HIGH);
  digitalWrite(led5, LOW );
  delay(t);

   digitalWrite(led8,HIGH);
  digitalWrite(led6, LOW );
  delay(t);

   digitalWrite(led9,HIGH);
  digitalWrite(led7, LOW );
  delay(t);

   digitalWrite(led10,HIGH);
  digitalWrite(led8, LOW );
  delay(t);

   digitalWrite(led11,HIGH);
  digitalWrite(led9, LOW );
  delay(t);

   digitalWrite(led12,HIGH);
  digitalWrite(led10, LOW );
  delay(t);

digitalWrite(led13,HIGH);
  digitalWrite(led11, LOW );
  delay(t);

digitalWrite(led12, LOW );
  delay(t);

digitalWrite(led13, LOW );
  delay(t);

  
digitalWrite(led13, HIGH );
  delay(t);

  digitalWrite(led12, HIGH );
  delay(t);

digitalWrite(led11,HIGH);
  digitalWrite(led13, LOW );
  delay(t);

  digitalWrite(led10,HIGH);
  digitalWrite(led12, LOW );
  delay(t);

 digitalWrite(led9,HIGH);
  digitalWrite(led11, LOW );
  delay(t);

 digitalWrite(led8,HIGH);
  digitalWrite(led10, LOW );
  delay(t);

   digitalWrite(led7,HIGH);
  digitalWrite(led9, LOW );
  delay(t);

   digitalWrite(led6,HIGH);
  digitalWrite(led8, LOW );
  delay(t);

   digitalWrite(led5,HIGH);
  digitalWrite(led7, LOW );
  delay(t);

   digitalWrite(led4,HIGH);
  digitalWrite(led6, LOW );
  delay(t);

   digitalWrite(led3,HIGH);
  digitalWrite(led5, LOW );
  delay(t);

   digitalWrite(led2,HIGH);
  digitalWrite(led4, LOW );
  delay(t);

digitalWrite(led1,HIGH);
  digitalWrite(led3, LOW );
  delay(t);

digitalWrite(led2, LOW );
  delay(t);

digitalWrite(led1, LOW );
  delay(t);









digitalWrite(led1, LOW);
digitalWrite(led2,LOW);
digitalWrite(led3,LOW);
digitalWrite(led4,LOW);
digitalWrite(led5,LOW);
digitalWrite(led6,LOW);
digitalWrite(led7,LOW);
digitalWrite(led8, LOW);
digitalWrite(led9,LOW);
digitalWrite(led10,LOW);
digitalWrite(led11,LOW);
digitalWrite(led12,LOW);
digitalWrite(led13,LOW);
  

}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////pattern 12///////////////////////////////////////////////////////////////////////////////////////////////////
void blink_12()
{
  int t=80;

 digitalWrite(led1, HIGH );
  delay(t);
  digitalWrite(led2,HIGH);
  delay(t);
  digitalWrite(led3,HIGH);
  delay(t);
  
  digitalWrite(led4,HIGH);
  digitalWrite(led1, LOW );
  delay(t);

  digitalWrite(led5,HIGH);
  digitalWrite(led2, LOW );
  delay(t);

 digitalWrite(led6,HIGH);
  digitalWrite(led3, LOW );
  delay(t);

 digitalWrite(led7,HIGH);
  digitalWrite(led4, LOW );
  delay(t);

   digitalWrite(led8,HIGH);
  digitalWrite(led5, LOW );
  delay(t);

   digitalWrite(led9,HIGH);
  digitalWrite(led6, LOW );
  delay(t);

   digitalWrite(led10,HIGH);
  digitalWrite(led7, LOW );
  delay(t);

   digitalWrite(led11,HIGH);
  digitalWrite(led8, LOW );
  delay(t);

   digitalWrite(led12,HIGH);
  digitalWrite(led9, LOW );
  delay(t);

   digitalWrite(led13,HIGH);
 digitalWrite(led10,LOW);
  delay(t);

digitalWrite(led11,LOW);
  delay(t);
  digitalWrite(led12,LOW);
  delay(t);
  digitalWrite(led13,LOW);
  delay(t);

digitalWrite(led13,HIGH);
delay(t);
digitalWrite(led12,HIGH);
delay(t);
digitalWrite(led11,HIGH);
delay(t);

digitalWrite(led10,HIGH);
  digitalWrite(led13, LOW );
  delay(t);
digitalWrite(led9,HIGH);
  digitalWrite(led12, LOW );
  delay(t);
digitalWrite(led8,HIGH);
  digitalWrite(led11, LOW );
  delay(t);
digitalWrite(led7,HIGH);
  digitalWrite(led10, LOW );
  delay(t);
digitalWrite(led6,HIGH);
  digitalWrite(led9, LOW );
  delay(t);
digitalWrite(led5,HIGH);
  digitalWrite(led8, LOW );
  delay(t);
digitalWrite(led4,HIGH);
  digitalWrite(led7, LOW );
  delay(t);
digitalWrite(led3,HIGH);
  digitalWrite(led6, LOW );
  delay(t);
digitalWrite(led2,HIGH);
  digitalWrite(led5, LOW );
  delay(t);
digitalWrite(led1,HIGH);
  digitalWrite(led4, LOW );
  delay(t);
 digitalWrite(led3, LOW );
  delay(t);
 digitalWrite(led2, LOW );
  delay(t);
 digitalWrite(led1, LOW );
  delay(t);

digitalWrite(led1, LOW);
digitalWrite(led2,LOW);
digitalWrite(led3,LOW);
digitalWrite(led4,LOW);
digitalWrite(led5,LOW);
digitalWrite(led6,LOW);
digitalWrite(led7,LOW);
digitalWrite(led8, LOW);
digitalWrite(led9,LOW);
digitalWrite(led10,LOW);
digitalWrite(led11,LOW);
digitalWrite(led12,LOW);
digitalWrite(led13,LOW);
  

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////pattern 13///////////////////////////////////////////////////////////////////////////////////////////////////
void blink_13()
{
  int t=90;
digitalWrite(led1, HIGH );
   digitalWrite(led13, HIGH );
  delay(t);
   digitalWrite(led1, LOW );
   digitalWrite(led13, LOW );
  delay(t);
  digitalWrite(led2,HIGH);
  digitalWrite(led12, HIGH );
  delay(t);
  digitalWrite(led2, LOW );
   digitalWrite(led12, LOW );
  delay(t);
  digitalWrite(led3,HIGH);
  digitalWrite(led11, HIGH );
  delay(t);
  digitalWrite(led3, LOW );
   digitalWrite(led11, LOW );
  delay(t);
  digitalWrite(led4,HIGH);
  digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led4, LOW );
   digitalWrite(led10, LOW );
  delay(t);
  digitalWrite(led5,HIGH);
  digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led5, LOW );
  digitalWrite(led9, LOW );
  delay(t);
  digitalWrite(led6,HIGH);
  digitalWrite(led8,HIGH);
  delay(t);
  digitalWrite(led6, LOW );
  digitalWrite(led8, LOW );
  delay(t);
  digitalWrite(led7,HIGH);
   delay(t);
   digitalWrite(led7,LOW);
   delay(t);
 digitalWrite(led8, HIGH);
  digitalWrite(led6, HIGH );
  delay(t);
   digitalWrite(led6, LOW );
  digitalWrite(led8, LOW );
  delay(t);
digitalWrite(led5,HIGH);
  digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led5, LOW );
  digitalWrite(led9, LOW );
  delay(t);
digitalWrite(led4,HIGH);
  digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led4, LOW );
   digitalWrite(led10, LOW );
  delay(t);
  digitalWrite(led3,HIGH);
  digitalWrite(led11, HIGH );
  delay(t);
  digitalWrite(led3, LOW );
   digitalWrite(led11, LOW );
  delay(t);
  digitalWrite(led2,HIGH);
  digitalWrite(led12, HIGH );
  delay(t);
  digitalWrite(led2, LOW );
   digitalWrite(led12, LOW );
  delay(t);
   digitalWrite(led1, HIGH );
   digitalWrite(led13, HIGH );
  delay(t);
   digitalWrite(led1, LOW );
   digitalWrite(led13, LOW );
  delay(t);


digitalWrite(led1, HIGH );
   digitalWrite(led13, HIGH );
  delay(t);
   digitalWrite(led1, LOW );
   digitalWrite(led13, LOW );
  delay(t);
  digitalWrite(led2,HIGH);
  digitalWrite(led12, HIGH );
  delay(t);
  digitalWrite(led2, LOW );
   digitalWrite(led12, LOW );
  delay(t);
  digitalWrite(led3,HIGH);
  digitalWrite(led11, HIGH );
  delay(t);
  digitalWrite(led3, LOW );
   digitalWrite(led11, LOW );
  delay(t);
  digitalWrite(led4,HIGH);
  digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led4, LOW );
   digitalWrite(led10, LOW );
  delay(t);
  digitalWrite(led5,HIGH);
  digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led5, LOW );
  digitalWrite(led9, LOW );
  delay(t);
  digitalWrite(led6,HIGH);
  digitalWrite(led8,HIGH);
  delay(t);
  digitalWrite(led6, LOW );
  digitalWrite(led8, LOW );
  delay(t);
  digitalWrite(led7,HIGH);
   delay(t);
   digitalWrite(led7,LOW);
   delay(t);
 digitalWrite(led8, HIGH);
  digitalWrite(led6, HIGH );
  delay(t);
   digitalWrite(led6, LOW );
  digitalWrite(led8, LOW );
  delay(t);
digitalWrite(led5,HIGH);
  digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led5, LOW );
  digitalWrite(led9, LOW );
  delay(t);
digitalWrite(led4,HIGH);
  digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led4, LOW );
   digitalWrite(led10, LOW );
  delay(t);
  digitalWrite(led3,HIGH);
  digitalWrite(led11, HIGH );
  delay(t);
  digitalWrite(led3, LOW );
   digitalWrite(led11, LOW );
  delay(t);
  digitalWrite(led2,HIGH);
  digitalWrite(led12, HIGH );
  delay(t);
  digitalWrite(led2, LOW );
   digitalWrite(led12, LOW );
  delay(t);
   digitalWrite(led1, HIGH );
   digitalWrite(led13, HIGH );
  delay(t);
   digitalWrite(led1, LOW );
   digitalWrite(led13, LOW );
  delay(t);


}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////pattern 14///////////////////////////////////////////////////////////////////////////////////////////////////
void blink_14()
{
  int t=80;

digitalWrite(led1,HIGH);
  digitalWrite(led13,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led13,LOW);
  digitalWrite(led2,HIGH);
    digitalWrite(led12,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led12,LOW);
  digitalWrite(led3,HIGH);
  digitalWrite(led11,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
   digitalWrite(led11,LOW);
  digitalWrite(led4,HIGH);
   digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led4,LOW);
   digitalWrite(led10,LOW);
  digitalWrite(led5,HIGH);
  digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led9,LOW);
  digitalWrite(led6,HIGH);
  digitalWrite(led8,HIGH);
  delay(t);
  digitalWrite(led6,LOW);
   digitalWrite(led8,LOW);
   delay(t);
   
  digitalWrite(led7,HIGH);
  delay(t);
 digitalWrite(led7,LOW);
delay(t);
  
digitalWrite(led1,HIGH);
  digitalWrite(led13,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led13,LOW);
  digitalWrite(led2,HIGH);
    digitalWrite(led12,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led12,LOW);
  digitalWrite(led3,HIGH);
  digitalWrite(led11,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
   digitalWrite(led11,LOW);
  digitalWrite(led4,HIGH);
   digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led4,LOW);
   digitalWrite(led10,LOW);
  digitalWrite(led5,HIGH);
  digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led9,LOW);
  digitalWrite(led6,HIGH);
  digitalWrite(led8,HIGH);
  delay(t);
  digitalWrite(led6,LOW);
   digitalWrite(led8,LOW);
   delay(t);
   
  digitalWrite(led7,HIGH);
  delay(t);
 digitalWrite(led7,LOW);
delay(t);

digitalWrite(led1,HIGH);
  digitalWrite(led13,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led13,LOW);
  digitalWrite(led2,HIGH);
    digitalWrite(led12,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led12,LOW);
  digitalWrite(led3,HIGH);
  digitalWrite(led11,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
   digitalWrite(led11,LOW);
  digitalWrite(led4,HIGH);
   digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led4,LOW);
   digitalWrite(led10,LOW);
  digitalWrite(led5,HIGH);
  digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led9,LOW);
  digitalWrite(led6,HIGH);
  digitalWrite(led8,HIGH);
  delay(t);
  digitalWrite(led6,LOW);
   digitalWrite(led8,LOW);
   delay(t);
   
  digitalWrite(led7,HIGH);
  delay(t);
 digitalWrite(led7,LOW);
delay(t);


digitalWrite(led1, LOW);
digitalWrite(led2,LOW);
digitalWrite(led3,LOW);
digitalWrite(led4,LOW);
digitalWrite(led5,LOW);
digitalWrite(led6,LOW);
digitalWrite(led7,LOW);
digitalWrite(led8, LOW);
digitalWrite(led9,LOW);
digitalWrite(led10,LOW);
digitalWrite(led11,LOW);
digitalWrite(led12,LOW);
digitalWrite(led13,LOW);
  
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////pattern 15///////////////////////////////////////////////////////////////////////////////////////////////////
void blink_15()
{
  int t=80;
  digitalWrite(led1,HIGH);
  digitalWrite(led13,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led13,LOW);
  digitalWrite(led2,HIGH);
    digitalWrite(led12,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led12,LOW);
  digitalWrite(led3,HIGH);
  digitalWrite(led11,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
   digitalWrite(led11,LOW);
  digitalWrite(led4,HIGH);
   digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led4,LOW);
   digitalWrite(led10,LOW);
  digitalWrite(led5,HIGH);
  digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led9,LOW);
  digitalWrite(led6,HIGH);
  digitalWrite(led8,HIGH);
  delay(t);
  digitalWrite(led6,LOW);
   digitalWrite(led8,LOW);
   delay(t);
   
  digitalWrite(led7,HIGH);
  delay(t);
  digitalWrite(led7,LOW);
  delay(t);

  digitalWrite(led6,HIGH);
   digitalWrite(led8,HIGH);
   delay(t);

  digitalWrite(led6,LOW);
  digitalWrite(led8,LOW);
  digitalWrite(led5,HIGH);
    digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led9,LOW);
  digitalWrite(led4,HIGH);
  digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led4,LOW);
   digitalWrite(led10,LOW);
  digitalWrite(led3,HIGH);
   digitalWrite(led11,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
   digitalWrite(led11,LOW);
  digitalWrite(led2,HIGH);
  digitalWrite(led12,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led12,LOW);
  digitalWrite(led1,HIGH);
  digitalWrite(led13,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
   digitalWrite(led13,LOW);
   delay(t);

   digitalWrite(led1,HIGH);
  digitalWrite(led13,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
  digitalWrite(led13,LOW);
  digitalWrite(led2,HIGH);
    digitalWrite(led12,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led12,LOW);
  digitalWrite(led3,HIGH);
  digitalWrite(led11,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
   digitalWrite(led11,LOW);
  digitalWrite(led4,HIGH);
   digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led4,LOW);
   digitalWrite(led10,LOW);
  digitalWrite(led5,HIGH);
  digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led9,LOW);
  digitalWrite(led6,HIGH);
  digitalWrite(led8,HIGH);
  delay(t);
  digitalWrite(led6,LOW);
   digitalWrite(led8,LOW);
   delay(t);
   
  digitalWrite(led7,HIGH);
  delay(t);
  digitalWrite(led7,LOW);
  delay(t);

  digitalWrite(led6,HIGH);
   digitalWrite(led8,HIGH);
   delay(t);

  digitalWrite(led6,LOW);
  digitalWrite(led8,LOW);
  digitalWrite(led5,HIGH);
    digitalWrite(led9,HIGH);
  delay(t);
  digitalWrite(led5,LOW);
  digitalWrite(led9,LOW);
  digitalWrite(led4,HIGH);
  digitalWrite(led10,HIGH);
  delay(t);
  digitalWrite(led4,LOW);
   digitalWrite(led10,LOW);
  digitalWrite(led3,HIGH);
   digitalWrite(led11,HIGH);
  delay(t);
  digitalWrite(led3,LOW);
   digitalWrite(led11,LOW);
  digitalWrite(led2,HIGH);
  digitalWrite(led12,HIGH);
  delay(t);
  digitalWrite(led2,LOW);
  digitalWrite(led12,LOW);
  digitalWrite(led1,HIGH);
  digitalWrite(led13,HIGH);
  delay(t);
  digitalWrite(led1,LOW);
   digitalWrite(led13,LOW);
   delay(t);
   
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////pattern 16///////////////////////////////////////////////////////////////////////////////////////////////////
void blink_16()
{
  int t=80;


}
"
7ij3mdA2,Untitled,Josif_tepe,C++,Friday 20th of October 2023 10:21:43 AM CDT,"#include <iostream>

using namespace std;

int main() {
    
    int n;
    cin >> n;
     
     int a = (n  / 10) % 10;
     
    cout << a << endl;
     
    
    return 0;
}
"
w9vA90e9,spli,davegimo,Python,Friday 20th of October 2023 10:10:57 AM CDT,"def split_(s,separatore):
    l = []
    pivot = 0
    len_sep = len(separatore)
    
    for i in range(len(s)):
        print(s[i:len_sep + i])
        if s[i:len_sep + i] == separatore:
            l.append(s[pivot:i])
            pivot = i + len_sep 
            
    l.append(s[pivot:])
    return l"
XP3JwmUf,Untitled,geminilabs,PHP,Friday 20th of October 2023 10:10:25 AM CDT,"add_filter('site-reviews-notifications/notification/is-valid', function ($isValid, $notification, $review) {
    $uid = 'XXXX'; // enter the notification UID here!
    if ($uid !== $notification->uid) {
        return $isValid;
    }
    $user = $review->user();
    if (!$user) {
        return $isValid;
    }
    if (!empty(get_user_meta($user->ID, '_has_coupon', true))) {
        update_user_meta($user->ID, '_has_coupon', 1);
        return $isValid;
    }
    return false;
}, 10, 3);"
dLyzHmvS,Sol?,yarin0600,C++,Friday 20th of October 2023 09:35:23 AM CDT,"#include <iostream>
#include <map>
template <typename K, typename V>
class interval_map
{
   V m_ValBegin;
   std::map<K, V> m_map;

public:
   interval_map(V const &val) : m_ValBegin(val)
   {
   }
   // Assign value val to interval [keyBegin, keyEnd).
   void assign(K const &keyBegin, K const &keyEnd, V const &val)
   {
      if (!(keyBegin < keyEnd))
         return;

      // Classic case: map is empty
      if (m_map.empty())
      {
         m_map[keyBegin] = val;
         m_map[keyEnd] = m_ValBegin;
         return;
      }

      // Find the iterators that represent the intervals to update
      auto itBegin = m_map.lower_bound(keyBegin);
      auto itEnd = m_map.lower_bound(keyEnd);

      // Handle the case when the previous interval has the same value
      if (itBegin != m_map.begin())
      {
         auto itPrev = std::prev(itBegin);
         if (itPrev->second == val)
         {
            // If the previous interval already has the same value, we don't need to insert a new entry
            itBegin = itPrev;
         }
         else if (itPrev->first == keyBegin)
         {
            // If the previous interval's start matches keyBegin, update it and erase the current interval
            itBegin = itPrev;
            itBegin->second = val;
         }
      }

      // Handle the case when the end of the current interval matches keyEnd
      if (itEnd != m_map.begin() && (--itEnd)->first == keyEnd)
      {
         // If the end of the current interval matches keyEnd, update it
         itEnd->second = val;
         return;
      }
      else
      {
         // Insert a new interval for [keyBegin, keyEnd)
         V new_value = (itEnd == m_map.end()) ? m_ValBegin : itEnd->second;
         m_map[keyBegin] = val;
         m_map[keyEnd] = new_value;
      }

      // Erase any intervals completely covered by the new one
      itBegin = m_map.find(keyBegin);
      itEnd = m_map.lower_bound(keyEnd);
      if (itBegin != itEnd)
      {
         m_map.erase(std::next(itBegin), itEnd);
      }
      auto leftSide = std::prev(itBegin);
      auto rightSide = std::next(itBegin);
      // merging:
      if (itBegin->second == rightSide->second)
      {
         m_map.erase(rightSide);
      }
      if (itBegin->second == leftSide->second)
      {
         m_map.erase(itBegin);
      }
   }

   V const &operator[](K const &key) const
   {
      auto it = m_map.upper_bound(key);
      if (it == m_map.begin())
      {
         return m_ValBegin;
      }
      else
      {
         return (--it)->second;
      }
   }

   const std::map<K, V> &getMap() const { return this->m_map; }
};

template <typename K, typename V>
void printIntervalMap(const interval_map<K, V> &imap)
{
   const std::map<K, V> &m = imap.getMap();
   std::cout << ""{"" << std::endl;
   for (auto pair : m)
   {
      std::cout << ""\t("" << pair.first << "", "" << pair.second << "")"" << std::endl;
   }
   std::cout << ""}"" << std::endl;
}

int main()
{
   interval_map<int, char> mp('I');
   mp.assign(1, 8, 'a');
   mp.assign(8, 14, 'b');
   printIntervalMap(mp);
   mp.assign(6, 9, 'c');
   mp.assign(9, 14, 'c');
   printIntervalMap(mp);
   // {(1, a), (6, 'c'), (9, 'b'), (14, 'I')}
}

/*


void assign(K const &keyBegin, K const &keyEnd, V const &val)
   {
      if (!(keyBegin < keyEnd))
         return;
      // classic case map is empty
      if (this->m_map.empty())
      {
         this->m_map[keyBegin] = val;
         this->m_map[keyEnd] = this->m_ValBegin;
         return;
      }

      // map is not empty, atleast 2 elements are there. [2 intervals]

      // lower_bound -> Iterator pointing to the first element that is not less than key.
      //                If no such element is found, a past-the-end iterator. [map.end()]

      // important knowledge -> after insertion, the iterator stands on the same element

      // TODO: before erasing -> create a function to try and 'merge_intervals' only to adjacent elements
      auto left_iterator = this->m_map.lower_bound(keyBegin); // get first that is bigger / equal to keyBegin
      // now two cases:
      if (left_iterator != this->m_map.end())
      {
         // we cannot go one step backwards
         if (left_iterator == this->m_map.begin())
         {
            // ex: add(-1, 2, 'c') with map = {(1,'a'), (8, 'b'), (14, init)}
            // we will make it map = {(-1, 'c'), (2, 'a'), (8, 'b'), (14, init)}
            V moving_value = left_iterator->second;
            K moving_key = left_iterator->key;

            this->m_map[keyBegin] = val;
            this->m_map[keyEnd] = moving_value;

            this->m_map.erase(left_iterator);
         }
         // we can go one step backwards
         else
         {
            --left_iterator;
            // now left_iterator->first is the biggest key which is smaller than keyBegin.
            this->m_map[keyBegin] = val;
         }
      }
      else // left_iterator == this->m_map.end
      // what does it mean? it means that there is no such element bigger / equal to keyBegin
      // meaning when we reach this place we add to the right side end...
      {
         this->m_map[keyBegin] = val;
         this->m_map[keyEnd] = this->m_ValBegin;
      }

      auto right_iterator = this->m_map.lower_bound(keyEnd);
      // two cases
      // right_iterator is not end
      if (right_iterator != this->m_map.end())
      {
         if (right_iterator != this->m_map.begin())
         // can go one step backwards
         {
            --right_iterator;
            if (right_iterator->first)
         }
         else
         // cannot go one step backwards
         {
         }
      }
      // right_iterator is end
      else
      {
      }
   }
*/"
ZzyhFDWt,Balicky,max2201111,Python,Friday 20th of October 2023 09:33:23 AM CDT,"# packages in environment at C:\Users\Hynek\myenv4:
#
# Name                    Version                   Build  Channel
_tflow_select             2.3.0                       gpu
abseil-cpp                20211102.0           hd77b12b_0
absl-py                   1.4.0            py38haa95532_0
aiofiles                  22.1.0           py38haa95532_0
aiohttp                   3.8.5            py38h2bbff1b_0
aiosignal                 1.2.0              pyhd3eb1b0_0
aiosqlite                 0.18.0           py38haa95532_0
anyio                     3.5.0            py38haa95532_0
argon2-cffi               21.3.0             pyhd3eb1b0_0
argon2-cffi-bindings      21.2.0           py38h2bbff1b_0
astor                     0.8.1            py38haa95532_0
asttokens                 2.0.5              pyhd3eb1b0_0
astunparse                1.6.3                      py_0
async-timeout             4.0.2            py38haa95532_0
attrs                     23.1.0           py38haa95532_0
babel                     2.11.0           py38haa95532_0
backcall                  0.2.0              pyhd3eb1b0_0
beautifulsoup4            4.12.2           py38haa95532_0
blas                      1.0                         mkl
bleach                    4.1.0              pyhd3eb1b0_0
blinker                   1.6.2            py38haa95532_0
brotli                    1.0.9                h2bbff1b_7
brotli-bin                1.0.9                h2bbff1b_7
brotlipy                  0.7.0           py38h2bbff1b_1003
c-ares                    1.19.1               h2bbff1b_0
ca-certificates           2023.08.22           haa95532_0
cachetools                4.2.2              pyhd3eb1b0_0
certifi                   2023.7.22        py38haa95532_0
cffi                      1.15.1           py38h2bbff1b_3
charset-normalizer        2.0.4              pyhd3eb1b0_0
click                     8.0.4            py38haa95532_0
colorama                  0.4.6            py38haa95532_0
comm                      0.1.2            py38haa95532_0
contourpy                 1.0.5            py38h59b6b97_0
cryptography              41.0.3           py38h89fc84f_0
cudatoolkit               11.8.0               hd77b12b_0
cudnn                     8.9.2.26               cuda11_0
cycler                    0.11.0             pyhd3eb1b0_0
debugpy                   1.6.7            py38hd77b12b_0
decorator                 5.1.1              pyhd3eb1b0_0
defusedxml                0.7.1              pyhd3eb1b0_0
entrypoints               0.4              py38haa95532_0
executing                 0.8.3              pyhd3eb1b0_0
fonttools                 4.25.0             pyhd3eb1b0_0
freetype                  2.12.1               ha860e81_0
frozenlist                1.3.3            py38h2bbff1b_0
gast                      0.4.0              pyhd3eb1b0_0
giflib                    5.2.1                h8cc25b3_3
glib                      2.69.1               h5dc1a3c_2
google-auth               2.22.0           py38haa95532_0
google-auth-oauthlib      0.4.4              pyhd3eb1b0_0
google-pasta              0.2.0              pyhd3eb1b0_0
grpc-cpp                  1.48.2               hfe90ff0_1
grpcio                    1.48.2           py38hfe90ff0_1
h5py                      2.10.0           py38h5e291fa_0
hdf5                      1.10.4               h7ebc959_0
icc_rt                    2022.1.0             h6049295_2
icu                       58.2                 ha925a31_3
idna                      3.4              py38haa95532_0
importlib-metadata        6.0.0            py38haa95532_0
importlib_metadata        6.0.0                hd3eb1b0_0
importlib_resources       5.2.0              pyhd3eb1b0_1
intel-openmp              2023.1.0         h59b6b97_46319
ipykernel                 6.25.0           py38h9909e9c_0
ipython                   8.12.2           py38haa95532_0
ipython_genutils          0.2.0              pyhd3eb1b0_1
ipywidgets                8.0.4            py38haa95532_0
jedi                      0.18.1           py38haa95532_1
jinja2                    3.1.2            py38haa95532_0
jpeg                      9e                   h2bbff1b_1
json5                     0.9.6              pyhd3eb1b0_0
jsonschema                4.17.3           py38haa95532_0
jupyter                   1.0.0            py38haa95532_8
jupyter_client            7.4.9            py38haa95532_0
jupyter_console           6.6.3            py38haa95532_0
jupyter_core              5.3.0            py38haa95532_0
jupyter_events            0.6.3            py38haa95532_0
jupyter_server            1.23.4           py38haa95532_0
jupyter_server_fileid     0.9.0            py38haa95532_0
jupyter_server_ydoc       0.8.0            py38haa95532_1
jupyter_ydoc              0.2.4            py38haa95532_0
jupyterlab                3.6.3            py38haa95532_0
jupyterlab_pygments       0.1.2                      py_0
jupyterlab_server         2.22.0           py38haa95532_0
jupyterlab_widgets        3.0.5            py38haa95532_0
keras-applications        1.0.8                      py_1
keras-preprocessing       1.1.2              pyhd3eb1b0_0
kiwisolver                1.4.4            py38hd77b12b_0
krb5                      1.20.1               h5b6d351_0
lerc                      3.0                  hd77b12b_0
libbrotlicommon           1.0.9                h2bbff1b_7
libbrotlidec              1.0.9                h2bbff1b_7
libbrotlienc              1.0.9                h2bbff1b_7
libclang                  14.0.6          default_hb5a9fac_1
libclang13                14.0.6          default_h8e68704_1
libdeflate                1.17                 h2bbff1b_1
libffi                    3.4.4                hd77b12b_0
libiconv                  1.16                 h2bbff1b_2
libpng                    1.6.39               h8cc25b3_0
libpq                     12.15                h906ac69_1
libprotobuf               3.20.3               h23ce68f_0
libsodium                 1.0.18               h62dcd97_0
libtiff                   4.5.1                hd77b12b_0
libwebp                   1.3.2                hbc33d0d_0
libwebp-base              1.3.2                h2bbff1b_0
libxml2                   2.10.4               h0ad7f3c_1
libxslt                   1.1.37               h2bbff1b_1
lxml                      4.9.3            py38h09808a7_0
lz4-c                     1.9.4                h2bbff1b_0
markdown                  3.4.1            py38haa95532_0
markupsafe                2.1.1            py38h2bbff1b_0
matplotlib                3.6.2            py38haa95532_0
matplotlib-base           3.6.2            py38h1094b8e_0
matplotlib-inline         0.1.6            py38haa95532_0
mistune                   0.8.4           py38he774522_1000
mkl                       2023.1.0         h6b88ed4_46357
mkl-service               2.4.0            py38h2bbff1b_1
mkl_fft                   1.3.8            py38h2bbff1b_0
mkl_random                1.2.4            py38h59b6b97_0
multidict                 6.0.2            py38h2bbff1b_0
munkres                   1.1.4                      py_0
nbclassic                 0.5.5            py38haa95532_0
nbclient                  0.5.13           py38haa95532_0
nbconvert                 6.5.4            py38haa95532_0
nbformat                  5.9.2            py38haa95532_0
nest-asyncio              1.5.6            py38haa95532_0
notebook                  6.5.4            py38haa95532_1
notebook-shim             0.2.2            py38haa95532_0
numpy                     1.24.4                   pypi_0    pypi
numpy-base                1.19.5           py38h9413944_5
oauthlib                  3.2.2            py38haa95532_0
openjpeg                  2.4.0                h4fc8c34_0
openssl                   3.0.11               h2bbff1b_2
opt_einsum                3.3.0              pyhd3eb1b0_1
packaging                 23.1             py38haa95532_0
pandocfilters             1.5.0              pyhd3eb1b0_0
parso                     0.8.3              pyhd3eb1b0_0
pcre                      8.45                 hd77b12b_0
pickleshare               0.7.5           pyhd3eb1b0_1003
pillow                    10.0.1           py38h045eedc_0
pip                       23.3             py38haa95532_0
pkgutil-resolve-name      1.3.10           py38haa95532_0
platformdirs              3.10.0           py38haa95532_0
ply                       3.11                     py38_0
pooch                     1.7.0            py38haa95532_0
prometheus_client         0.14.1           py38haa95532_0
prompt-toolkit            3.0.36           py38haa95532_0
prompt_toolkit            3.0.36               hd3eb1b0_0
protobuf                  3.20.3           py38hd77b12b_0
psutil                    5.9.0            py38h2bbff1b_0
pure_eval                 0.2.2              pyhd3eb1b0_0
pyasn1                    0.4.8              pyhd3eb1b0_0
pyasn1-modules            0.2.8                      py_0
pycparser                 2.21               pyhd3eb1b0_0
pygments                  2.15.1           py38haa95532_1
pyjwt                     2.4.0            py38haa95532_0
pyopenssl                 23.2.0           py38haa95532_0
pyparsing                 3.0.9            py38haa95532_0
pyqt                      5.15.7           py38hd77b12b_0
pyqt5-sip                 12.11.0          py38hd77b12b_0
pyreadline                2.1                      py38_1
pyrsistent                0.18.0           py38h196d8e1_0
pysocks                   1.7.1            py38haa95532_0
python                    3.8.18               h1aa4202_0
python-dateutil           2.8.2              pyhd3eb1b0_0
python-fastjsonschema     2.16.2           py38haa95532_0
python-json-logger        2.0.7            py38haa95532_0
pytz                      2023.3.post1     py38haa95532_0
pywin32                   305              py38h2bbff1b_0
pywinpty                  2.0.10           py38h5da7b33_0
pyyaml                    6.0              py38h2bbff1b_1
pyzmq                     23.2.0           py38hd77b12b_0
qt-main                   5.15.2               h879a1e9_9
qt-webengine              5.15.9               h5bd16bc_7
qtconsole                 5.4.2            py38haa95532_0
qtpy                      2.2.0            py38haa95532_0
qtwebkit                  5.212                h2bbfb41_5
re2                       2022.04.01           hd77b12b_0
requests                  2.31.0           py38haa95532_0
requests-oauthlib         1.3.0                      py_0
rfc3339-validator         0.1.4            py38haa95532_0
rfc3986-validator         0.1.1            py38haa95532_0
rsa                       4.7.2              pyhd3eb1b0_1
scipy                     1.10.1           py38hdcfc7df_1
send2trash                1.8.0              pyhd3eb1b0_1
setuptools                68.0.0           py38haa95532_0
sip                       6.6.2            py38hd77b12b_0
six                       1.16.0             pyhd3eb1b0_1
sniffio                   1.2.0            py38haa95532_1
soupsieve                 2.5              py38haa95532_0
sqlite                    3.41.2               h2bbff1b_0
stack_data                0.2.0              pyhd3eb1b0_0
tbb                       2021.8.0             h59b6b97_0
tensorboard               2.10.0           py38haa95532_0
tensorboard-data-server   0.6.1            py38haa95532_0
tensorboard-plugin-wit    1.8.1            py38haa95532_0
tensorflow                2.3.0           mkl_py38h8557ec7_0
tensorflow-base           2.3.0           eigen_py38h75a453f_0
tensorflow-estimator      2.6.0              pyh7b7c402_0
tensorflow-gpu            2.3.0                he13fc11_0
termcolor                 2.1.0            py38haa95532_0
terminado                 0.17.1           py38haa95532_0
threadpoolctl             3.2.0                    pypi_0    pypi
tinycss2                  1.2.1            py38haa95532_0
tk                        8.6.12               h2bbff1b_0
toml                      0.10.2             pyhd3eb1b0_0
tomli                     2.0.1            py38haa95532_0
tornado                   6.3.3            py38h2bbff1b_0
traitlets                 5.7.1            py38haa95532_0
typing-extensions         4.7.1            py38haa95532_0
typing_extensions         4.7.1            py38haa95532_0
urllib3                   1.26.16          py38haa95532_0
vc                        14.2                 h21ff451_1
vs2015_runtime            14.27.29016          h5e58377_2
wcwidth                   0.2.5              pyhd3eb1b0_0
webencodings              0.5.1                    py38_1
websocket-client          0.58.0           py38haa95532_4
werkzeug                  2.2.3            py38haa95532_0
wheel                     0.41.2           py38haa95532_0
widgetsnbextension        4.0.5            py38haa95532_0
win_inet_pton             1.1.0            py38haa95532_0
winpty                    0.4.3                         4
wrapt                     1.14.1           py38h2bbff1b_0
xz                        5.4.2                h8cc25b3_0
y-py                      0.5.9            py38hb6bf4ef_0
yaml                      0.2.5                he774522_0
yarl                      1.8.1            py38h2bbff1b_0
ypy-websocket             0.8.2            py38haa95532_0
zeromq                    4.3.4                hd77b12b_0
zipp                      3.11.0           py38haa95532_0
zlib                      1.2.13               h8cc25b3_0
zstd                      1.5.5                hd43e919_0
"
kQeufzTu,ThrusterParticle.cs,PlinioJRM,C#,Friday 20th of October 2023 09:31:01 AM CDT,"using Godot;

namespace PlinioJRM.Core {
    public interface IThrusterParticle {
		void Open();
		void Close();
	}

	public enum ThrusterParticleState {
		Closed,
		Opened,
		Oscilating
	}

	public partial class ThrusterParticle : Node3D, IThrusterParticle {
		[Export]
		private float _animationTime = 0.5f;
		[Export]
		private float _retracted = 0.1f;
		[Export]
		private float _extended = 2f;
		[Export]
		private float _oscilationTo = 1f;

		private const string NODE_PATH = ""Thruster Particle"";

		private Node3D _node;
		private ThrusterParticleState _state;
		private float _currentOscilation;

		public override void _Ready() {
			base._Ready();
			_node = GetNode<Node3D>(NODE_PATH);
			Close();
		}

		public void Open() => GetTween().TweenProperty(_node, ""scale"", ScaledUp(), _animationTime).SetEase(Tween.EaseType.InOut);
		public void Close() => GetTween().TweenProperty(_node, ""scale"", ScaledDown(), _animationTime).SetEase(Tween.EaseType.InOut);
		private void Oscilate() {
			_currentOscilation = (_currentOscilation == _extended) ? _oscilationTo : _extended;

            GetTween().TweenProperty(_node, ""scale"", GetScaled(_currentOscilation), _animationTime / 2).SetTrans(Tween.TransitionType.Bounce);
		}

		private Tween GetTween() {
            Tween tween = GetTree().CreateTween();
            tween.Finished += _tween_Finished;

			return tween;
        }

		private Vector3 ScaledDown() => GetScaled(_retracted);
		private Vector3 ScaledUp() => GetScaled(_extended);
		private Vector3 GetScaled(float value) => new(1f, value, 1f);
		private void StateTo(ThrusterParticleState state) {
			_state = state;
			if (_state == ThrusterParticleState.Closed)
				Close();
			if (_state == ThrusterParticleState.Opened)
				Open();
		}

		private void _tween_Finished() {
			if (_state == ThrusterParticleState.Closed) {
				StateTo(ThrusterParticleState.Oscilating);
				_currentOscilation = _extended;
			}
			
			if (_state == ThrusterParticleState.Oscilating)
				Oscilate();
		}
	}
}
"
wX7ai5Dr,XlsxWriter DataType,ggorzki,Python,Friday 20th of October 2023 09:10:13 AM CDT,"import os.path

import sqlalchemy as db
import pandas as pd

from io import BytesIO
from PIL import Image

conn_string = ""mssql+pyodbc://user:user@localhost/db?driver=ODBC+Driver+17+for+SQL+Server""
table_name = ""table_name""
photo_path = ""D:/tmp/product_photos/""
file_data_path = ""D:/tmp/pythonProject/Project1/data/""
plik = file_data_path + ""Plik_""

engine = db.create_engine(conn_string)
connection = engine.connect()


def photo_extensions(path):
    files = [file for file in os.listdir(path) if os.path.isfile(os.path.join(path, file))]
    ext_dict = {}
    for file in files:
        file_name, file_extension = os.path.splitext(file)
        ext_dict[file_name] = file
    return ext_dict

with conn:
	df_raw = pd.read_sql(""select top 10 * from table_name"", connection)
	df_mag = df_raw[""magazine""].unique().tolist()

sku_extension = photo_extensions(photo_path)

df_raw[""images""] = photo_path + df_raw[""sku""].map(sku_extension)
mag_list = df_raw[""magazine""].unique()

if not df_raw.empty:
    for mag in mag_list:
        row = 2
        file_name = plik + mag + "".xlsx""
        df_for_mag = df_raw[df_raw[""magazine""] == mag]
        writer = pd.ExcelWriter(file_name, engine=""xlsxwriter"")
        df_for_mag.to_excel(writer, sheet_name=""Sheet1"", index=False)
        workbook = writer.book
        worksheet = writer.sheets[""Sheet1""]
        cell_format = workbook.add_format()
        
		for image in df_for_mag[""images""]:
            if pd.notna(image):
                data = BytesIO(open(image, ""rb"").read())
                row_insert = ""K"" + str(row)
                im = Image.open(image)
                width = im.size[0]
                height = im.size[1]
                worksheet.set_row_pixels(row-1, height)
                worksheet.set_column_pixels(""K:K"", width)
                worksheet.insert_image(row_insert, image, {""image_data"": data})
            worksheet.write_blank(row-1, 10, None, cell_format)
            row += 1

        center_format = workbook.add_format({""align"": ""center"", ""valign"": ""vcenter""})
        worksheet.set_column(""A:J"", None, center_format)

        worksheet.autofit()
        name_format = workbook.add_format({""align"": ""left"", ""valign"": ""vcenter""})
        worksheet.set_column(""C:C"", 50, name_format)

        date_format = workbook.add_format({'num_format': 'yyyy.mm.dd'})
        date_format.set_align(""center"")
        date_format.set_align(""vcenter"")
        worksheet.set_column(""G:G"", None, date_format)

        writer.save()
        print(file_name)
"
fkiQUeZv,Untitled,MrWanlop678,Java,Friday 20th of October 2023 08:55:00 AM CDT,"import java.util.Scanner;
import static java.lang.System.*;

public class condition_if {
	public static void main(String[] args) {
		Scanner data = new Scanner(System.in);
		out.println(""==========================================="");
		out.println(""========= Condition By Wanlop ============="");
		out.println(""==========================================="");
		out.println("""");
		out.println(""-- Menu --"");
		out.println(""Press 1 For Sum Number"");
		out.println(""Press 2 For Minus Number"");
		out.print(""Choose Menu : "");
		
		int menu = data.nextInt();
		out.print(""Input Number : "");
		
		if (menu != 1 || menu != 2)
		{
			out.println(""Choose Menu 1 or 2 Only"");
		}
		
		int num1 = data.nextInt();
		out.print(""Input Number : "");
		int num2 = data.nextInt();
		
		if (menu == 1)
		{
			out.println(num1 + num2);
		}
		else if (menu == 2)
		{
			out.println(num1 - num2);
		}
//		else
//		{
//			out.println(""Choose Menu 1 or 2 Only"");
//		}
		data.close();
	}
}
"
3mpeDJZP,FSVVAV,quantum32043,CSS,Friday 20th of October 2023 08:48:31 AM CDT,"@font-face {
    font-family: GothamMedium;
    src: url(fonts/gotham_medium.otf);
}

@font-face {
    font-family: GothamBook;
    src: url(fonts/gotham_book.otf);
}

@font-face {
    font-family: GothamBold;
    src: url(fonts/gotham_bold.otf);
}

@font-face {
    font-family: Myriad;
    src: url(fonts/Myriad\ Pro.ttf);
}

@font-face {
    font-family: RobotoBoldCondensed;
    src: url(fonts/RobotoCondensed-Bold.ttf);
}

* {
    max-width: 1600px;
    margin: 0 auto;
}

html {
    height: 100%;
}

body {
    height: 100%;
    margin: 0%;
}

.main_block {
    width: 100%;
    height: 100%;
}

/* ---------------------------------------------------- */
/* ---------------------------------------------------- */
/* ---------------------------------------------------- */
/* ---------------------------------------------------- */
/* ---------------------------------------------------- */
/* ---------------------- header ---------------------- */

header{
    height: 115px;
    z-index: 200;
    position: absolute;
    width: 100%;
    border-bottom: 1px solid rgba(125, 125, 125, 0.5);
    display: flex;
}

.Logo_box {
    margin-left: 13px;
    margin-top: 9px;
}

#logo {
    height: 75px;
    width: 79px;
}

.navigation{
    display: flex;
}

.navigation-button{
    padding: 25px;
    font-family: Myriad;
    font-size: 13pt;
    color: aliceblue;
    text-align: center;
    align-items: center;
    display: flex;
}

.button {
    margin-top: 8px;
    font-size: 20px;
}

.navigation-button:hover{
    border-bottom: 6px solid #11749e;
    transition: 0.1s ease;
}

.social {
    display: flex;
    flex-direction: row;
    margin-right: 200px;
    justify-content: space-between;
}

.social_icon {
    display: flex;
    height: 100%;
    width: 40px;
}

.icon {
    margin: 10px 0 0 11px;
    align-self: center;     
}

/*---------------------- first_screen ----------------------*/


.main-block{
    width: 100%;
    height: 117%;
    z-index: 100;
    position:relative;
}

.social{
    display: flex;
    align-content: center;
}

.social i{
    color: aliceblue;
    padding: 15px;
    align-items: center;
    display: flex;
}

.circle{
    width: 60%;
    height: 35%;
    border-radius: 50%;
    background-color: #2e85aa;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
}

#first-screen{
    background-image: url(""images/first_screen.jpg"");
    background-size:cover;
    justify-content: flex-end;
    align-items: center;
    display: flex;
    flex-flow: column;
}

#first-screen b{
    font-family: GothamMedium;
    height: min-content;
}

#first-screen b:first-child{
    color: #f5f5f5;
    font-size: 101pt;
    margin-top: 40px;
}


#first-screen b:last-of-type{
    color: #11749e;
    font-size: 24pt;
    letter-spacing: 11px;
}

.second-screen{
    width: 100%;
    height: 20cm;
    background: #11749e;
    display: flex;
    flex-wrap: wrap;
}

#W{
    position: absolute;
    font-family: 'Roboto';
    font-size: 220pt;
    color: rgba(255, 255, 255, 0.4);
    z-index: 100;
    height: min-content;
}

#Agency{
    position: absolute;
    font-family: GothamMedium;
    z-index: 200;
    font-size: 30pt;
    color: white;
    height: min-content;
}

.half-screen{
    height: 50%;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

#information{
    display: flex;
    justify-content: center;
}

.information-block{
    width: 15%;
    height: 100%;
    display: flex;
    flex-wrap: wrap;
    margin: 0 30px 0 30px;
    flex-direction: column;
    align-content: center;
    align-items: center;
    justify-content: flex-start;
}

.information-block h4{
    font-family: GothamBook;
    color: white;
    font-size: 13pt;
}

.information-block p{
    font-family: GothamBook;
    color: white;
    font-size: 9pt;
    text-align: center;
    line-height: 25px;
}

#logo{
    margin: 15px 200px;
}

#scroll{
    display: flex;
    color: white;
    flex-direction: column;
    align-items: center;
    margin-top: 85px;
    margin-bottom: 100px;
}
#scroll p{
    font-family:system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

#circle-scroll{
    width: 60px;
    height: 60px;
    border-radius: 50%;
    border: solid white 1px;
    display: flex;
    align-items: center;
    justify-content: center;
}
/* ---------------------------------------------------- */
/* ---------------------------------------------------- */
/* ---------------------------------------------------- */
/* ---------------------------------------------------- */
/* ---------------------------------------------------- */
/* ---------------------------------------------------- */


/* news screen ///////////////////////*/

.news_block {
    width: 100%;
    height: 921px;
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    line-height: 24px;
}

.news_box {
    width: 50%;
}

.news_box:first-child {
    background-color: #222222;
    color: #ffffff;
    height: 447px;
}

.news_box:last-child {
    background-color: #f3f3f3;
    color: #222222;
    height: 474px;
}

#first_news_text {
    max-width: 460px;
    width: 100%;
    margin: 75px 119px 0 214px;
}

#second_news_text {
    max-width: 460px;
    width: 100%;
    margin: 99px 118px 0 78px;
}

.news_first_paragraph {
    font-family: GothamBook;
    margin: 0;
    padding: 0;
    font-size: 12.4px;
    margin-bottom: 10px;
    margin-left: 5px;
    letter-spacing: .3px;
}

.title {
    font-family: GothamMedium;
    font-size: 24.3px;
    margin-bottom: 34px;
    margin-left: 3px;
    font-weight: 100;
    letter-spacing: .5px;
}

.news_second_paragraph {
    margin: 0;
    padding: 0;
    margin-bottom: 24px;
    font-family: GothamBook;
    font-size: 12.6px;
}

#first_box {
    background-image: url(images/third_block_ru.jpg);
    background-size: cover;
    width: 50%;
    height: 447px;
}

#second_box {
    background-image: url(images/third_block_ld.jpg);
    width: 50%;
    height: 474px;
}

/*---------------------- column screen basis ----------------------*/

.column_block {
    margin: 0;

    background-color: #ffffff;
    width: 100%;
    height: 1017px;
    /* z-index: 0; */

    /* display: flex;
    flex-direction: row;
    justify-content: center; */
}

.column_heading {
    margin: 8px auto;
    padding: 15px 0px 0px 10px;
    width: 790px;
    height: 334px;
    position: relative;
}

.column_background {
    position: absolute;
    z-index: 0;
    top: 30px;
    left: 335px;
    font-family: 'Roboto Condensed', sans-serif;
    font-size: 248px;
    opacity: .12;
    font-weight: 700;
}

.column_title {
    position: absolute;
    z-index: 100;
    top: 148px;
    left: 292px;
    text-transform: uppercase;
    font-family: GothamMedium;
    font-size: 36px;
    font-weight: 10;
    letter-spacing: .8px;
}

.column_subtitle {
    margin: 277px auto 0;
    font-family: GothamBook;
    font-size: 30px;
    font-weight: 100;
}

.columns_box {
    display: flex;
    flex-wrap: nowrap;
    flex-direction: row;
    margin: 53px auto 0;
    max-width: 1170px;
    width: 100%;
    justify-content: space-between;
    max-height: 607px;
    z-index: 0;
}

.column {
    display: flex;
    flex-direction: column;
    font-family: GothamBook;
    font-size: 12.6px;
    max-width: 270px;
    margin: 0;
    /* width: 270px; */
}

.column_text.title {
    font-family: GothamMedium;
    margin: 0;
    color: #11749e;
    text-transform: uppercase;
    font-size: 18px;
    margin-top: 38px;
    letter-spacing: 0.001px;
    /* word-spacing: 0.0001px; */
    
    /* width: 270px; */

}

.column_text {
    text-align: center;
    margin-top: 15px;
    font-size: 15px;
    letter-spacing: 0.001px;
    line-height: 24px;
}

.column_text {
    text-align: center;
    margin-top: 15px;
    font-size: 15px;
    letter-spacing: 0.001px;
    line-height: 24px;
}


/* ---------------------- blog screen  ---------------------- */



/*---------quick_screen--------*/
.quick_screen {
    background-image: url(images/quick_action_screen.jpg);
    width: 100%;
    height: 355px;
}

.quick_container {
    padding-left: 156px;
    padding-top: 113px;
    display: flex;
    flex-wrap: nowrap;
    flex-direction: row;
}

.quick_item {
    width: 558px;
    display: flex;
    flex-direction: row;
    margin-left: 63px;
}

.quick_item:last-of-type {
margin-left: -150px;
}

.quick_text p {
    font-family: GothamBook;
    font-size: 13px;
    color: #f5f5f5;
    letter-spacing: 1px;
    line-height: 23px;
    margin-left: 35px;
}

/*-------features_screen-------*/

.features_screen {
    background: url(images/features_screen.jpg);
    width: 100%;
    height: 849px;
}

.features_container {
    display: flex;
    flex-direction: row;
}

.box_container {
    display: flex;
    flex-direction: column;
    padding: 0;
    margin-top: 442px;
    margin-left: 225px;
}

.feature_box {
    height: 38px;
    margin-left: 0;
    margin-bottom: 26px;
    background-color: #11749e;     
}

.feature_box p {
    padding-left: 19px;
    padding-bottom: 14px;
    padding-top: 11px;
    font-family: GothamMedium;
    font-size: 13.6px;
    text-transform: uppercase;
    color: #f5f5f5;
    letter-spacing: 1px;
}

.feature_box.first {
    width: 370px;
}

.feature_box.second {
    width: 400px;
}

.feature_box.third {
    width: 428px;
}

.features_phone {
    margin-left: 86px;
    margin-top: 89px;
    width: 317px;
    height: 651px;
}

.feature_text {
    position: absolute;
    z-index: 0;
    width: 694px;
}

.features_column_text {
    margin: 0;
    padding: 0;
    margin-bottom: 24px;  
    margin-left: 228px;
    font-family: GothamBook;
    font-size: 12.9px;
    color: #f5f5f5;
    letter-spacing: 1px;
    line-height: 23px;
}

.features_title {
    margin-top: 228px;
    font-family: GothamMedium;
    font-size: 24.3px;
    margin-bottom: 31px;
    margin-left: 228px;
    font-weight: 100;
    letter-spacing: .5px;
    color: #f5f5f5;
}

/* ---------------------- team screen ---------------------- */

.column.team {
    position: relative;
    z-index: 0;
}

.column_subtitle.team {
    margin-top: 314px;
}

.columns_box.team {
    margin-top: 100px;
}

.team_image {
    position: relative;
    /* z-index: 1; */
}

.name_box {
    position: absolute;
    z-index: 100;
    width: 216px;
    height: 75px;
    padding: 10px 0;
    background-color: #ffffff;
    top: 365px;
    left: 30px;
}

.column_text.name {
    font-family: GothamMedium;
    font-size: 20px;
    color: #11749e;
    text-transform: uppercase;
    margin-top: 10px;
}

.column_text.profession {
    margin-top: 8px;
    font-family: GothamMedium;
    font-size: 15px;
}

/* first screen */

.last_screen{
    font-family: GhotamBook;
    font-size: 15pt;
    width: 100%;
    height: 922px;
    margin: 0;
    background-image: url(images/back.png);
    background-size: cover;
    z-index: 100;
    position: relative;
}

/* text on first screen*/

.text_half{
    padding: 237px 0 167px;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    text-transform: uppercase;
}

.C{
    font-family: RobotoBoldCondensed;
    color: white;
    opacity: 19%;
    font-size: 186pt;
    z-index: 100;
    position: absolute;
}

.about_project{
    font-family: GhotamMedium;
    position: absolute;
    font-size: 27.8pt;
    color: white;
    z-index: 200;
}

.first_edit_line{
    margin: 0 215px;
    display: flex;
    justify-content: space-between;
}

.center_edit{
    margin: auto 30px;
}

.first_edit_line input{
    border: 1px solid white;
    width: 33%;
    padding: 16px 20px 12px;
    font-family: GhotamBook;
    font-size: 11.5pt;
    color: #ffffff;
    background: none;
}

.edit_input::placeholder{
    color: #ffffff;
    opacity: 1;
}

.second_edit_line{
    margin: 40px 215px;
    display: flex;
}

.second_edit_line input{
    width: 100%;
    padding: 16px 22px 114px;
    font-family: GhotamBook;
    font-size: 11.5pt;
    color: white;
    border: 1px solid white;
    background: none;
}

.button{
    margin: 45px;
    display: flex;
    text-transform: uppercase;
    justify-content: center;
}

.button a{
    font-size: 16.5pt;
    text-align: center;
    width: 227px;
    padding: 15px 0 24px;
    background-color: #11749e;
    color: white;
    text-decoration: none;
}

.button a:hover{
    background-color: white;
    color: #11749e;
    transition: .15s ease;
    cursor: pointer;
}

/* second screen - map*/

.map{
    margin-top: -70px;
    width: 100%;
    height: 332px;
    background-image: url(images/map.png);
    background-size: cover;
    z-index: 200;
    position: relative;
}

/* footer */

footer{
    height: 114px;
    width: 100%;
    background-color: #222222;
    align-items: center;
    display: flex;
}

footer span{
    width: 50%;
    padding-left: 60px;
    font-family: Roboto;
    font-size: 10pt;
    color: white;
}

footer div{
    justify-content: right;
    padding-right: 100px;
}"
frwKQkGZ,News Oct20 23,Newscaster_Ned,Email,Friday 20th of October 2023 08:46:10 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

W‎h‎e‎t‎h‎e‎r‎ ‎y‎o‎u‎'‎r‎e‎ ‎a‎ ‎n‎e‎g‎r‎o‎ ‎w‎i‎t‎h‎ ‎p‎u‎b‎e‎s‎ ‎o‎n‎ ‎h‎i‎s‎ ‎h‎e‎a‎d‎,‎ ‎o‎r‎ ‎j‎u‎s‎t‎ ‎a‎ ‎J‎e‎w‎,‎ ‎N‎e‎s‎c‎a‎s‎t‎e‎r‎ ‎N‎e‎d‎ ‎i‎s‎ ‎g‎o‎n‎n‎a‎ ‎g‎i‎v‎e‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎ ‎t‎o‎ ‎y‎o‎u‎!‎

I‎s‎r‎a‎e‎l‎'‎s‎ ‎W‎a‎r‎ ‎G‎o‎a‎l‎s‎:‎ ‎D‎e‎s‎t‎r‎o‎y‎ ‎H‎a‎m‎a‎s‎,‎ ‎N‎e‎w‎ ‎'‎S‎e‎c‎u‎r‎i‎t‎y‎ ‎R‎e‎g‎i‎m‎e‎'‎ ‎i‎n‎ ‎G‎a‎z‎a‎
L‎a‎b‎o‎u‎r‎ ‎P‎a‎r‎t‎y‎ ‎S‎w‎e‎e‎p‎s‎ ‎T‎o‎r‎i‎e‎s‎ ‎i‎n‎ ‎B‎y‎-‎E‎l‎e‎c‎t‎i‎o‎n‎s‎
B‎o‎d‎i‎e‎s‎ ‎o‎f‎ ‎D‎i‎s‎a‎b‎l‎e‎d‎ ‎T‎e‎e‎n‎ ‎a‎n‎d‎ ‎F‎a‎t‎h‎e‎r‎ ‎F‎o‎u‎n‎d‎ ‎a‎t‎ ‎M‎u‎s‎i‎c‎ ‎F‎e‎s‎t‎i‎v‎a‎l‎ ‎S‎i‎t‎e‎
N‎o‎t‎ ‎M‎y‎ ‎M‎o‎n‎e‎y‎,‎ ‎N‎o‎t‎ ‎M‎y‎ ‎P‎r‎o‎b‎l‎e‎m‎ ‎S‎a‎y‎s‎ ‎L‎a‎t‎e‎s‎t‎ ‎S‎e‎n‎a‎t‎e‎ ‎B‎i‎l‎l‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
B‎i‎d‎e‎n‎ ‎H‎o‎a‎x‎e‎s‎ ‎t‎h‎e‎ ‎W‎o‎r‎l‎d‎!‎

U‎s‎e‎s‎ ‎D‎e‎a‎d‎ ‎J‎e‎w‎s‎ ‎t‎o‎ ‎P‎i‎t‎c‎h‎ ‎M‎o‎r‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎F‎u‎n‎d‎i‎n‎g‎

M‎a‎r‎l‎o‎w‎:‎ ‎S‎p‎e‎e‎c‎h‎ ‎W‎a‎s‎ ‎*‎N‎O‎T‎*‎ ‎A‎b‎o‎u‎t‎ ‎I‎s‎r‎a‎e‎l‎

P‎o‎t‎u‎s‎ ‎S‎h‎i‎l‎l‎s‎ ‎f‎o‎r‎ ‎M‎i‎l‎i‎t‎a‎r‎y‎-‎I‎n‎d‎u‎s‎t‎r‎i‎a‎l‎ ‎C‎o‎m‎p‎l‎e‎x‎ ‎f‎r‎o‎m‎ ‎O‎v‎a‎l‎ ‎O‎f‎f‎i‎c‎e‎

M‎e‎a‎n‎w‎h‎i‎l‎e‎:‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎S‎t‎i‎l‎l‎ ‎H‎o‎s‎t‎a‎g‎e‎
P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎a‎d‎d‎r‎e‎s‎s‎e‎s‎ ‎t‎h‎e‎ ‎n‎a‎t‎i‎o‎n‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎O‎v‎a‎l‎ ‎O‎f‎f‎i‎c‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎o‎n‎ ‎O‎c‎t‎o‎b‎e‎r‎ ‎1‎9‎,‎ ‎2‎0‎2‎3‎ ‎i‎n‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎,‎ ‎D‎C‎.‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎B‎i‎d‎e‎n‎ ‎d‎i‎s‎c‎u‎s‎s‎e‎d‎ ‎t‎h‎e‎ ‎U‎.‎S‎.‎’‎s‎ ‎r‎e‎s‎p‎o‎n‎s‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎H‎a‎m‎a‎s‎-‎I‎s‎r‎a‎e‎l‎ ‎c‎o‎n‎f‎l‎i‎c‎t‎,‎ ‎h‎u‎m‎a‎n‎i‎t‎a‎r‎i‎a‎n‎ ‎a‎s‎s‎i‎s‎t‎a‎n‎c‎e‎ ‎i‎n‎ ‎G‎a‎z‎a‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎c‎o‎n‎t‎i‎n‎u‎e‎d‎ ‎s‎u‎p‎p‎o‎r‎t‎ ‎f‎o‎r‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎d‎u‎r‎i‎n‎g‎ ‎R‎u‎s‎s‎i‎a‎’‎s‎ ‎o‎n‎g‎o‎i‎n‎g‎ ‎i‎n‎v‎a‎s‎i‎o‎n‎.‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎J‎o‎n‎a‎t‎h‎a‎n‎ ‎E‎r‎n‎s‎t‎ ‎-‎ ‎…‎
J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎g‎a‎v‎e‎ ‎a‎ ‎r‎a‎r‎e‎ ‎O‎v‎a‎l‎ ‎O‎f‎f‎i‎c‎e‎ ‎a‎d‎d‎r‎e‎s‎s‎ ‎T‎h‎u‎r‎s‎d‎a‎y‎ ‎n‎i‎g‎h‎t‎ ‎t‎h‎a‎t‎ ‎b‎e‎g‎a‎n‎ ‎w‎i‎t‎h‎ ‎a‎ ‎c‎l‎e‎a‎r‎ ‎c‎o‎n‎d‎e‎m‎n‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎H‎a‎m‎a‎s‎ ‎t‎e‎r‎r‎o‎r‎,‎ ‎b‎u‎t‎ ‎q‎u‎i‎c‎k‎l‎y‎ ‎s‎h‎i‎f‎t‎e‎d‎ ‎f‎o‎c‎u‎s‎ ‎t‎o‎ ‎c‎y‎n‎i‎c‎a‎l‎ ‎p‎o‎l‎i‎t‎i‎c‎k‎i‎n‎g‎ ‎a‎n‎d‎ ‎n‎a‎r‎r‎a‎t‎i‎v‎e‎ ‎s‎e‎t‎t‎i‎n‎g‎,‎ ‎e‎v‎e‎n‎ ‎w‎h‎i‎l‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎a‎r‎e‎ ‎s‎t‎i‎l‎l‎ ‎b‎e‎i‎n‎g‎ ‎h‎e‎l‎d‎ ‎h‎o‎s‎t‎a‎g‎e‎.‎

F‎o‎x‎ ‎N‎e‎w‎s‎'‎ ‎B‎r‎i‎t‎ ‎H‎u‎m‎e‎ ‎G‎u‎s‎h‎e‎s‎ ‎o‎v‎e‎r‎ ‎B‎i‎d‎e‎n‎'‎s‎ ‎A‎d‎d‎r‎e‎s‎s‎
F‎o‎x‎ ‎N‎e‎w‎s‎'‎ ‎B‎r‎i‎t‎ ‎H‎u‎m‎e‎ ‎G‎u‎s‎h‎e‎s‎ ‎o‎v‎e‎r‎ ‎B‎i‎d‎e‎n‎'‎s‎ ‎A‎d‎d‎r‎e‎s‎s‎
5‎4‎1‎
L‎i‎v‎e‎:‎ ‎B‎i‎d‎e‎n‎ ‎A‎d‎d‎r‎e‎s‎s‎e‎s‎ ‎t‎h‎e‎ ‎N‎a‎t‎i‎o‎n‎ ‎A‎b‎o‎u‎t‎ ‎I‎s‎r‎a‎e‎l‎-‎H‎a‎m‎a‎s‎,‎ ‎U‎k‎r‎a‎i‎n‎e‎-‎R‎u‎s‎s‎i‎a‎ ‎W‎a‎r‎s‎
L‎i‎v‎e‎:‎ ‎B‎i‎d‎e‎n‎ ‎A‎d‎d‎r‎e‎s‎s‎e‎s‎ ‎t‎h‎e‎ ‎N‎a‎t‎i‎o‎n‎ ‎A‎b‎o‎u‎t‎ ‎I‎s‎r‎a‎e‎l‎-‎H‎a‎m‎a‎s‎,‎ ‎U‎k‎r‎a‎i‎n‎e‎-‎R‎u‎s‎s‎i‎a‎ ‎W‎a‎r‎s‎
4‎,‎8‎1‎6‎
M‎a‎r‎j‎o‎r‎i‎e‎ ‎T‎a‎y‎l‎o‎r‎ ‎G‎r‎e‎e‎n‎e‎:‎ ‎T‎h‎e‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎'‎C‎o‎n‎f‎e‎r‎e‎n‎c‎e‎ ‎I‎s‎ ‎A‎b‎s‎o‎l‎u‎t‎e‎l‎y‎ ‎B‎r‎o‎k‎e‎n‎'‎
M‎a‎r‎j‎o‎r‎i‎e‎ ‎T‎a‎y‎l‎o‎r‎ ‎G‎r‎e‎e‎n‎e‎:‎ ‎T‎h‎e‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎'‎C‎o‎n‎f‎e‎r‎e‎n‎c‎e‎ ‎I‎s‎ ‎A‎b‎s‎o‎l‎u‎t‎e‎l‎y‎ ‎B‎r‎o‎k‎e‎n‎'‎
5‎7‎6‎
M‎a‎r‎l‎o‎w‎:‎ ‎F‎i‎v‎e‎ ‎T‎a‎k‎e‎a‎w‎a‎y‎s‎ ‎f‎r‎o‎m‎ ‎J‎o‎e‎’‎s‎ ‎O‎v‎a‎l‎ ‎O‎f‎f‎i‎c‎e‎ ‎A‎d‎d‎r‎e‎s‎s‎ ‎A‎b‎o‎u‎t‎ ‎U‎k‎r‎a‎i‎n‎e‎
M‎a‎r‎l‎o‎w‎:‎ ‎F‎i‎v‎e‎ ‎T‎a‎k‎e‎a‎w‎a‎y‎s‎ ‎f‎r‎o‎m‎ ‎J‎o‎e‎’‎s‎ ‎O‎v‎a‎l‎ ‎O‎f‎f‎i‎c‎e‎ ‎A‎d‎d‎r‎e‎s‎s‎ ‎A‎b‎o‎u‎t‎ ‎U‎k‎r‎a‎i‎n‎e‎
4‎,‎0‎8‎4‎
J‎a‎i‎l‎e‎d‎ ‎f‎o‎r‎ ‎M‎e‎m‎e‎s‎:‎ ‎M‎A‎G‎A‎ ‎I‎n‎f‎l‎u‎e‎n‎c‎e‎r‎ ‎D‎o‎u‎g‎l‎a‎s‎ ‎M‎a‎c‎k‎e‎y‎ ‎G‎e‎t‎s‎ ‎7‎-‎M‎o‎n‎t‎h‎ ‎S‎e‎n‎t‎e‎n‎c‎e‎
J‎a‎i‎l‎e‎d‎ ‎f‎o‎r‎ ‎M‎e‎m‎e‎s‎:‎ ‎M‎A‎G‎A‎ ‎I‎n‎f‎l‎u‎e‎n‎c‎e‎r‎ ‎D‎o‎u‎g‎l‎a‎s‎ ‎M‎a‎c‎k‎e‎y‎ ‎G‎e‎t‎s‎ ‎7‎-‎M‎o‎n‎t‎h‎ ‎S‎e‎n‎t‎e‎n‎c‎e‎
6‎2‎9‎
G‎r‎e‎t‎a‎ ‎T‎h‎u‎n‎b‎e‎r‎g‎ ‎C‎a‎l‎l‎s‎ ‎f‎o‎r‎ ‎S‎t‎r‎i‎k‎e‎ ‎'‎i‎n‎ ‎S‎o‎l‎i‎d‎a‎r‎i‎t‎y‎ ‎w‎i‎t‎h‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎e‎ ‎a‎n‎d‎ ‎G‎a‎z‎a‎'‎
G‎r‎e‎t‎a‎ ‎T‎h‎u‎n‎b‎e‎r‎g‎ ‎C‎a‎l‎l‎s‎ ‎f‎o‎r‎ ‎S‎t‎r‎i‎k‎e‎ ‎'‎i‎n‎ ‎S‎o‎l‎i‎d‎a‎r‎i‎t‎y‎ ‎w‎i‎t‎h‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎e‎ ‎a‎n‎d‎ ‎G‎a‎z‎a‎'‎
1‎9‎4‎
*‎*‎*‎ ‎S‎p‎e‎a‎k‎e‎r‎ ‎V‎o‎t‎e‎ ‎L‎i‎v‎e‎w‎i‎r‎e‎ ‎*‎*‎*‎ ‎J‎o‎r‎d‎a‎n‎ ‎T‎r‎i‎e‎s‎ ‎A‎g‎a‎i‎n‎ ‎a‎s‎ ‎G‎O‎P‎ ‎R‎e‎d‎ ‎W‎e‎d‎d‎i‎n‎g‎ ‎L‎o‎o‎m‎s‎
*‎*‎*‎ ‎S‎p‎e‎a‎k‎e‎r‎ ‎V‎o‎t‎e‎ ‎L‎i‎v‎e‎w‎i‎r‎e‎ ‎*‎*‎*‎ ‎J‎o‎r‎d‎a‎n‎ ‎T‎r‎i‎e‎s‎ ‎A‎g‎a‎i‎n‎ ‎a‎s‎ ‎G‎O‎P‎ ‎R‎e‎d‎ ‎W‎e‎d‎d‎i‎n‎g‎ ‎L‎o‎o‎m‎s‎
5‎,‎8‎2‎0‎
B‎i‎d‎e‎n‎ ‎B‎a‎l‎a‎n‎c‎e‎s‎ ‎I‎s‎l‎a‎m‎o‎p‎h‎o‎b‎i‎a‎ ‎a‎n‎d‎ ‎A‎n‎t‎i‎s‎e‎m‎i‎t‎i‎s‎m‎
B‎i‎d‎e‎n‎ ‎B‎a‎l‎a‎n‎c‎e‎s‎ ‎I‎s‎l‎a‎m‎o‎p‎h‎o‎b‎i‎a‎ ‎a‎n‎d‎ ‎A‎n‎t‎i‎s‎e‎m‎i‎t‎i‎s‎m‎
3‎4‎6‎
P‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎I‎n‎s‎u‎r‎r‎e‎c‎t‎i‎o‎n‎i‎s‎t‎s‎ ‎O‎c‎c‎u‎p‎y‎ ‎F‎e‎d‎e‎r‎a‎l‎ ‎H‎o‎u‎s‎e‎ ‎O‎f‎f‎i‎c‎e‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎
P‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎I‎n‎s‎u‎r‎r‎e‎c‎t‎i‎o‎n‎i‎s‎t‎s‎ ‎O‎c‎c‎u‎p‎y‎ ‎F‎e‎d‎e‎r‎a‎l‎ ‎H‎o‎u‎s‎e‎ ‎O‎f‎f‎i‎c‎e‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎
1‎1‎,‎4‎1‎0‎
W‎o‎r‎l‎d‎ ‎L‎e‎a‎d‎e‎r‎s‎ ‎I‎n‎c‎i‎t‎e‎ ‎R‎i‎o‎t‎s‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎U‎.‎S‎.‎,‎ ‎I‎s‎r‎a‎e‎l‎ ‎b‎y‎ ‎S‎p‎r‎e‎a‎d‎i‎n‎g‎ ‎H‎a‎m‎a‎s‎ ‎L‎i‎e‎s‎
W‎o‎r‎l‎d‎ ‎L‎e‎a‎d‎e‎r‎s‎ ‎I‎n‎c‎i‎t‎e‎ ‎R‎i‎o‎t‎s‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎U‎.‎S‎.‎,‎ ‎I‎s‎r‎a‎e‎l‎ ‎b‎y‎ ‎S‎p‎r‎e‎a‎d‎i‎n‎g‎ ‎H‎a‎m‎a‎s‎ ‎L‎i‎e‎s‎

2‎ ‎T‎e‎e‎n‎a‎g‎e‎ ‎N‎e‎g‎r‎e‎s‎s‎e‎s‎ ‎t‎o‎ ‎F‎a‎c‎e‎ ‎L‎i‎f‎e‎ ‎f‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎ ‎o‎f‎ ‎W‎h‎i‎t‎e‎ ‎P‎i‎z‎z‎a‎ ‎D‎e‎l‎i‎v‎e‎r‎y‎m‎a‎n‎.‎

J‎u‎s‎t‎ ‎d‎o‎n‎'‎t‎ ‎d‎e‎l‎i‎v‎e‎r‎ ‎p‎i‎z‎z‎a‎ ‎t‎o‎ ‎n‎e‎g‎r‎o‎e‎s‎.‎


M‎o‎n‎k‎e‎y‎ ‎T‎e‎n‎n‎e‎s‎s‎e‎e‎ ‎S‎t‎a‎t‎e‎ ‎F‎o‎o‎t‎b‎a‎l‎l‎ ‎P‎l‎a‎y‎e‎r‎ ‎S‎i‎d‎e‎l‎i‎n‎e‎d‎ ‎f‎o‎r‎ ‎P‎u‎n‎c‎h‎i‎n‎g‎ ‎C‎o‎a‎c‎h‎.‎


3‎ ‎A‎p‎e‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎R‎a‎p‎e‎ ‎i‎n‎ ‎C‎u‎m‎b‎e‎r‎l‎a‎n‎d‎.‎


J‎i‎g‎ ‎F‎a‎c‎e‎s‎ ‎R‎a‎p‎e‎ ‎C‎h‎a‎r‎g‎e‎ ‎i‎n‎ ‎F‎l‎o‎r‎i‎d‎a‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎w‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
S‎u‎n‎n‎y‎
9‎6‎°‎
/‎5‎6‎°‎
0‎%‎
W‎ ‎6‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎0‎ ‎|‎ ‎D‎a‎y‎
9‎6‎°‎
W‎
6‎
 ‎
m‎p‎h‎
A‎b‎u‎n‎d‎a‎n‎t‎ ‎s‎u‎n‎s‎h‎i‎n‎e‎.‎ ‎N‎e‎a‎r‎ ‎r‎e‎c‎o‎r‎d‎ ‎h‎i‎g‎h‎ ‎t‎e‎m‎p‎e‎r‎a‎t‎u‎r‎e‎s‎.‎ ‎H‎i‎g‎h‎ ‎9‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎l‎i‎g‎h‎t‎ ‎a‎n‎d‎ ‎v‎a‎r‎i‎a‎b‎l‎e‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
2‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
7‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎3‎5‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
6‎:‎5‎4‎ ‎p‎m‎
F‎r‎i‎ ‎2‎0‎ ‎|‎ ‎N‎i‎g‎h‎t‎
5‎6‎°‎
1‎%‎
W‎S‎W‎
4‎
 ‎
m‎p‎h‎
C‎l‎e‎a‎r‎ ‎t‎o‎ ‎p‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎.‎ ‎L‎o‎w‎ ‎5‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎l‎i‎g‎h‎t‎ ‎a‎n‎d‎ ‎v‎a‎r‎i‎a‎b‎l‎e‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
5‎0‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎:‎2‎9‎ ‎p‎m‎
W‎a‎x‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
1‎1‎:‎2‎9‎ ‎p‎m‎
S‎a‎t‎ ‎2‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎5‎°‎
/‎6‎7‎°‎
1‎%‎
S‎W‎ ‎7‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎2‎
C‎l‎o‎u‎d‎y‎
8‎9‎°‎
/‎6‎9‎°‎
1‎0‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎3‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎4‎°‎
/‎7‎0‎°‎
5‎0‎%‎
S‎S‎E‎ ‎1‎4‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎4‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎7‎°‎
/‎6‎9‎°‎
5‎5‎%‎
S‎E‎ ‎1‎8‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎5‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎7‎°‎
/‎6‎9‎°‎
3‎6‎%‎
S‎S‎E‎ ‎1‎5‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎6‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎5‎°‎
/‎6‎8‎°‎
5‎8‎%‎
S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎7‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎8‎°‎
/‎6‎2‎°‎
5‎8‎%‎
E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎8‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎5‎°‎
/‎6‎1‎°‎
4‎8‎%‎
N‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎7‎°‎
/‎5‎9‎°‎
2‎4‎%‎
N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎3‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎6‎°‎
/‎5‎6‎°‎
2‎4‎%‎
N‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
T‎u‎e‎ ‎3‎1‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎9‎°‎
/‎5‎0‎°‎
4‎4‎%‎
N‎ ‎1‎0‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎0‎°‎
/‎5‎2‎°‎
1‎3‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎4‎°‎
/‎5‎2‎°‎
1‎9‎%‎
E‎N‎E‎ ‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎6‎°‎
/‎5‎4‎°‎
2‎4‎%‎
S‎E‎ ‎1‎0‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎T‎h‎e‎ ‎g‎r‎e‎a‎t‎ ‎p‎u‎m‎p‎k‎i‎n‎.‎ ‎🎃

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

W‎i‎s‎c‎o‎n‎s‎i‎n‎
W‎i‎s‎c‎o‎n‎s‎i‎n‎ ‎(‎o‎r‎ ‎a‎s‎ ‎t‎h‎e‎ ‎l‎o‎c‎a‎l‎s‎ ‎c‎a‎l‎l‎ ‎i‎t‎,‎ ‎W‎i‎s‎C‎A‎A‎A‎A‎A‎N‎s‎i‎n‎)‎ ‎i‎s‎ ‎a‎ ‎h‎u‎g‎e‎ ‎p‎a‎r‎a‎s‎i‎t‎i‎c‎ ‎s‎h‎i‎t‎h‎o‎l‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎M‎i‎d‎w‎e‎s‎t‎.‎ ‎T‎h‎e‎ ‎b‎i‎r‎t‎h‎p‎l‎a‎c‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎P‎a‎r‎t‎y‎,‎ ‎S‎e‎n‎a‎t‎o‎r‎ ‎J‎o‎e‎ ‎M‎c‎C‎a‎r‎t‎h‎y‎ ‎a‎n‎d‎ ‎T‎h‎e‎ ‎J‎o‎h‎n‎ ‎B‎i‎r‎c‎h‎ ‎S‎o‎c‎i‎e‎t‎y‎.‎ ‎I‎n‎ ‎o‎t‎h‎e‎r‎ ‎w‎o‎r‎d‎s‎,‎ ‎W‎i‎s‎c‎o‎n‎s‎i‎n‎ ‎i‎s‎ ‎e‎s‎s‎e‎n‎t‎i‎a‎l‎l‎y‎ ‎T‎e‎x‎a‎s‎ ‎w‎i‎t‎h‎ ‎e‎i‎g‎h‎t‎ ‎m‎o‎n‎t‎h‎s‎ ‎o‎f‎ ‎w‎i‎n‎t‎e‎r‎.‎ ‎I‎t‎ ‎h‎o‎u‎s‎e‎s‎ ‎7‎3‎%‎ ‎o‎f‎ ‎t‎h‎e‎ ‎c‎o‎u‎n‎t‎r‎y‎'‎s‎ ‎f‎a‎t‎ ‎p‎e‎o‎p‎l‎e‎,‎ ‎r‎e‎d‎n‎e‎c‎k‎s‎ ‎a‎n‎d‎ ‎a‎l‎c‎o‎h‎o‎l‎i‎c‎s‎.‎ ‎M‎o‎s‎t‎ ‎p‎e‎o‎p‎l‎e‎ ‎c‎o‎n‎s‎i‎d‎e‎r‎ ‎W‎i‎s‎c‎o‎n‎s‎i‎n‎ ‎t‎o‎ ‎b‎e‎ ‎a‎ ‎d‎i‎s‎g‎r‎a‎c‎e‎ ‎t‎o‎ ‎A‎m‎e‎r‎i‎c‎a‎.‎ ‎W‎i‎s‎c‎o‎n‎s‎i‎n‎'‎s‎ ‎n‎e‎i‎g‎h‎b‎o‎r‎s‎ ‎a‎b‎s‎o‎l‎u‎t‎e‎l‎y‎ ‎h‎a‎t‎e‎ ‎t‎h‎i‎s‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎s‎t‎a‎t‎e‎.‎

T‎h‎e‎ ‎t‎y‎p‎i‎c‎a‎l‎ ‎W‎i‎s‎c‎o‎n‎s‎i‎n‎ ‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎i‎s‎ ‎a‎n‎ ‎o‎b‎e‎s‎e‎ ‎w‎h‎i‎t‎e‎ ‎t‎r‎u‎c‎k‎ ‎d‎r‎i‎v‎e‎r‎ ‎w‎h‎o‎ ‎o‎w‎n‎s‎ ‎a‎ ‎f‎a‎r‎m‎ ‎a‎n‎d‎ ‎i‎s‎ ‎m‎a‎r‎r‎i‎e‎d‎ ‎t‎o‎ ‎a‎ ‎c‎o‎w‎.‎ ‎I‎n‎ ‎f‎a‎c‎t‎,‎ ‎i‎f‎ ‎y‎o‎u‎ ‎l‎o‎o‎k‎ ‎a‎t‎ ‎a‎ ‎s‎a‎t‎e‎l‎l‎i‎t‎e‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎o‎f‎ ‎W‎i‎s‎c‎o‎n‎s‎i‎n‎,‎ ‎y‎o‎u‎ ‎w‎i‎l‎l‎ ‎s‎e‎e‎ ‎l‎o‎t‎s‎ ‎o‎f‎ ‎g‎r‎e‎e‎n‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎s‎t‎a‎t‎e‎'‎s‎ ‎m‎a‎s‎s‎i‎v‎e‎ ‎a‎m‎o‎u‎n‎t‎ ‎o‎f‎ ‎c‎o‎r‎n‎ ‎a‎n‎d‎ ‎J‎o‎h‎n‎ ‎D‎e‎e‎r‎e‎ ‎t‎r‎a‎c‎t‎o‎r‎s‎.‎ ‎Y‎o‎u‎ ‎w‎i‎l‎l‎ ‎a‎l‎s‎o‎ ‎s‎e‎e‎ ‎l‎o‎t‎s‎ ‎o‎f‎ ‎b‎r‎o‎w‎n‎,‎ ‎o‎w‎i‎n‎g‎ ‎t‎o‎ ‎t‎h‎e‎ ‎l‎a‎c‎k‎ ‎o‎f‎ ‎s‎e‎p‎t‎i‎c‎ ‎t‎a‎n‎k‎s‎ ‎i‎n‎ ‎W‎i‎s‎c‎o‎n‎s‎i‎n‎.‎

(‎(‎ ‎P‎R‎I‎M‎A‎R‎I‎E‎S‎ ‎A‎R‎E‎ ‎T‎H‎E‎ ‎O‎N‎L‎Y‎ ‎R‎E‎A‎S‎O‎N‎ ‎T‎H‎I‎S‎ ‎S‎T‎A‎T‎E‎ ‎W‎I‎L‎L‎ ‎E‎V‎E‎R‎ ‎B‎E‎ ‎R‎E‎L‎E‎V‎A‎N‎T‎ ‎F‎O‎R‎ ‎A‎ ‎D‎A‎Y‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

F‎r‎e‎d‎ ‎S‎u‎l‎l‎i‎v‎a‎n‎ ‎(‎1‎8‎3‎7‎–‎1‎8‎7‎7‎)‎ ‎w‎a‎s‎ ‎a‎n‎ ‎E‎n‎g‎l‎i‎s‎h‎ ‎a‎c‎t‎o‎r‎ ‎a‎n‎d‎ ‎s‎i‎n‎g‎e‎r‎.‎ ‎B‎o‎r‎n‎ ‎i‎n‎t‎o‎ ‎a‎ ‎m‎u‎s‎i‎c‎a‎l‎ ‎f‎a‎m‎i‎l‎y‎,‎ ‎h‎e‎ ‎t‎r‎a‎i‎n‎e‎d‎ ‎a‎s‎ ‎a‎n‎ ‎a‎r‎c‎h‎i‎t‎e‎c‎t‎u‎r‎a‎l‎ ‎d‎r‎a‎f‎t‎s‎m‎a‎n‎ ‎b‎u‎t‎ ‎a‎b‎a‎n‎d‎o‎n‎e‎d‎ ‎t‎h‎e‎ ‎p‎r‎o‎f‎e‎s‎s‎i‎o‎n‎ ‎f‎o‎r‎ ‎a‎ ‎s‎t‎a‎g‎e‎ ‎c‎a‎r‎e‎e‎r‎.‎ ‎I‎n‎ ‎1‎8‎7‎1‎,‎ ‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎p‎e‎r‎f‎o‎r‎m‎e‎d‎ ‎t‎h‎e‎ ‎r‎o‎l‎e‎ ‎o‎f‎ ‎M‎r‎.‎ ‎C‎o‎x‎ ‎i‎n‎ ‎a‎ ‎r‎e‎v‎i‎v‎a‎l‎ ‎o‎f‎ ‎h‎i‎s‎ ‎b‎r‎o‎t‎h‎e‎r‎ ‎A‎r‎t‎h‎u‎r‎ ‎S‎u‎l‎l‎i‎v‎a‎n‎'‎s‎ ‎c‎o‎m‎i‎c‎ ‎o‎p‎e‎r‎a‎ ‎C‎o‎x‎ ‎a‎n‎d‎ ‎B‎o‎x‎,‎ ‎a‎n‎d‎ ‎l‎a‎t‎e‎r‎ ‎t‎h‎a‎t‎ ‎y‎e‎a‎r‎ ‎c‎r‎e‎a‎t‎e‎d‎ ‎t‎h‎e‎ ‎r‎o‎l‎e‎ ‎o‎f‎ ‎A‎p‎o‎l‎l‎o‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎G‎i‎l‎b‎e‎r‎t‎ ‎a‎n‎d‎ ‎S‎u‎l‎l‎i‎v‎a‎n‎ ‎o‎p‎e‎r‎a‎,‎ ‎T‎h‎e‎s‎p‎i‎s‎.‎ ‎I‎n‎ ‎1‎8‎7‎5‎,‎ ‎h‎e‎ ‎c‎r‎e‎a‎t‎e‎d‎ ‎t‎h‎e‎ ‎r‎o‎l‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎L‎e‎a‎r‎n‎e‎d‎ ‎J‎u‎d‎g‎e‎ ‎i‎n‎ ‎G‎i‎l‎b‎e‎r‎t‎ ‎a‎n‎d‎ ‎S‎u‎l‎l‎i‎v‎a‎n‎'‎s‎ ‎T‎r‎i‎a‎l‎ ‎b‎y‎ ‎J‎u‎r‎y‎,‎ ‎a‎l‎s‎o‎ ‎p‎l‎a‎y‎i‎n‎g‎ ‎i‎n‎ ‎t‎h‎e‎ ‎a‎c‎c‎o‎m‎p‎a‎n‎y‎i‎n‎g‎ ‎O‎f‎f‎e‎n‎b‎a‎c‎h‎ ‎p‎i‎e‎c‎e‎,‎ ‎L‎a‎ ‎P‎é‎r‎i‎c‎h‎o‎l‎e‎.‎ ‎H‎e‎ ‎e‎a‎r‎n‎e‎d‎ ‎e‎n‎t‎h‎u‎s‎i‎a‎s‎t‎i‎c‎ ‎r‎e‎v‎i‎e‎w‎s‎,‎ ‎a‎n‎d‎ ‎h‎i‎s‎ ‎p‎o‎r‎t‎r‎a‎y‎a‎l‎ ‎o‎f‎ ‎t‎h‎e‎ ‎J‎u‎d‎g‎e‎ ‎s‎e‎t‎ ‎t‎h‎e‎ ‎p‎a‎t‎t‎e‎r‎n‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎s‎u‎b‎s‎e‎q‎u‎e‎n‎t‎ ‎f‎a‎m‎o‎u‎s‎ ‎G‎i‎l‎b‎e‎r‎t‎ ‎a‎n‎d‎ ‎S‎u‎l‎l‎i‎v‎a‎n‎ ‎c‎o‎m‎i‎c‎ ‎""‎p‎a‎t‎t‎e‎r‎""‎ ‎r‎o‎l‎e‎s‎.‎ ‎H‎e‎ ‎t‎h‎e‎n‎ ‎t‎o‎u‎r‎e‎d‎ ‎i‎n‎ ‎T‎r‎i‎a‎l‎ ‎a‎n‎d‎ ‎F‎r‎e‎n‎c‎h‎ ‎o‎p‎e‎r‎e‎t‎t‎a‎s‎,‎ ‎r‎e‎t‎u‎r‎n‎i‎n‎g‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎L‎o‎n‎d‎o‎n‎ ‎r‎e‎v‎i‎v‎a‎l‎ ‎o‎f‎ ‎T‎r‎i‎a‎l‎.‎ ‎F‎r‎e‎d‎ ‎S‎u‎l‎l‎i‎v‎a‎n‎ ‎d‎i‎e‎d‎ ‎a‎t‎ ‎t‎h‎e‎ ‎a‎g‎e‎ ‎o‎f‎ ‎3‎9‎,‎ ‎l‎e‎a‎v‎i‎n‎g‎ ‎a‎ ‎p‎r‎e‎g‎n‎a‎n‎t‎ ‎w‎i‎d‎o‎w‎ ‎a‎n‎d‎ ‎s‎e‎v‎e‎n‎ ‎y‎o‎u‎n‎g‎ ‎c‎h‎i‎l‎d‎r‎e‎n‎,‎ ‎h‎i‎s‎ ‎b‎r‎o‎t‎h‎e‎r‎ ‎c‎o‎m‎p‎o‎s‎i‎n‎g‎ ‎t‎h‎e‎ ‎s‎o‎n‎g‎ ‎""‎T‎h‎e‎ ‎L‎o‎s‎t‎ ‎C‎h‎o‎r‎d‎""‎ ‎a‎t‎ ‎h‎i‎s‎ ‎b‎e‎d‎s‎i‎d‎e‎.‎ ‎T‎h‎i‎s‎ ‎s‎e‎p‎i‎a‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎o‎f‎ ‎S‎u‎l‎l‎i‎v‎a‎n‎ ‎w‎a‎s‎ ‎t‎a‎k‎e‎n‎ ‎b‎y‎ ‎t‎h‎e‎ ‎C‎a‎n‎a‎d‎i‎a‎n‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎r‎ ‎O‎l‎i‎v‎i‎e‎r‎ ‎S‎a‎r‎o‎n‎y‎,‎ ‎p‎r‎o‎b‎a‎b‎l‎y‎ ‎i‎n‎ ‎t‎h‎e‎ ‎1‎8‎7‎0‎s‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎O‎l‎i‎v‎i‎e‎r‎ ‎S‎a‎r‎o‎n‎y‎;‎ ‎r‎e‎s‎t‎o‎r‎e‎d‎ ‎b‎y‎ ‎A‎d‎a‎m‎ ‎C‎u‎e‎r‎d‎e‎n‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎s‎t‎r‎a‎n‎g‎l‎e‎ ‎m‎y‎ ‎c‎a‎t‎.‎"
9Tx6phwV,Untitled,kingbode,Python,Friday 20th of October 2023 08:44:45 AM CDT,"

import gym
from gym import spaces
import numpy as np
import pygame


class MazeGameEnv(gym.Env):
    def __init__(self, maze):
        super(MazeGameEnv, self).__init__()
        self.maze = np.array(maze)  # Maze represented as a 2D numpy array
        self.start_pos = np.where(self.maze == 'S')  # Starting position
        self.goal_pos = np.where(self.maze == 'G')  # Goal position
        self.current_pos = self.start_pos  # starting position is current posiiton of agent
        self.num_rows, self.num_cols = self.maze.shape

        # 4 possible actions: 0=up, 1=down, 2=left, 3=right
        self.action_space = spaces.Discrete(4)

        # Observation space is grid of size:rows x columns
        self.observation_space = spaces.Tuple((spaces.Discrete(self.num_rows), spaces.Discrete(self.num_cols)))

        # Initialize Pygame
        pygame.init()
        self.cell_size = 125

        # setting display size
        self.screen = pygame.display.set_mode((self.num_cols * self.cell_size, self.num_rows * self.cell_size))

    def reset(self):
        self.current_pos = self.start_pos
        temp_observation_space = {(0, 0): ""S""}

        return self.current_pos, temp_observation_space



    def step(self, action):
        # Move the agent based on the selected action
        new_pos = np.array(self.current_pos)
        if action == 0:  # Up
            new_pos[0] -= 1
        elif action == 1:  # Down
            new_pos[0] += 1
        elif action == 2:  # Left
            new_pos[1] -= 1
        elif action == 3:  # Right
            new_pos[1] += 1

        # Check if the new position is valid
        if self._is_valid_position(new_pos):
            self.current_pos = new_pos

        # Reward function
        if np.array_equal(self.current_pos, self.goal_pos):
            reward = 1.0
            done = True
        else:
            reward = 0.0
            done = False

        return self.current_pos, reward, done, {}

    def _is_valid_position(self, pos):
        row, col = pos

        # If agent goes out of the grid
        if row < 0 or col < 0 or row >= self.num_rows or col >= self.num_cols:
            return False

        # If the agent hits an obstacle
        if self.maze[row, col] == '#':
            return False
        return True

    def render(self):
        # Clear the screen
        self.screen.fill((255, 255, 255))

        # Draw env elements one cell at a time
        for row in range(self.num_rows):
            for col in range(self.num_cols):
                cell_left = col * self.cell_size
                cell_top = row * self.cell_size

                try:
                    print(np.array(self.current_pos) == np.array([row, col]).reshape(-1, 1))
                except Exception as e:
                    print('Initial state')

                if self.maze[row, col] == '#':  # Obstacle
                    pygame.draw.rect(self.screen, (0, 0, 0), (cell_left, cell_top, self.cell_size, self.cell_size))
                elif self.maze[row, col] == 'S':  # Starting position
                    pygame.draw.rect(self.screen, (0, 255, 0), (cell_left, cell_top, self.cell_size, self.cell_size))
                elif self.maze[row, col] == 'G':  # Goal position
                    pygame.draw.rect(self.screen, (255, 0, 0), (cell_left, cell_top, self.cell_size, self.cell_size))

                if np.array_equal(np.array(self.current_pos), np.array([row, col]).reshape(-1, 1)):  # Agent position
                    pygame.draw.rect(self.screen, (0, 0, 255), (cell_left, cell_top, self.cell_size, self.cell_size))

        pygame.display.update()  # Update the display"
mkfX3mmd,Untitled,kingbode,Python,Friday 20th of October 2023 08:44:07 AM CDT,"
import gym
import pygame
from gym import spaces
import numpy as np
from MazeGameEnv import MazeGameEnv

# Register the environment
gym.register(
    id='MazeGameEnv',
    entry_point='MazeGameEnv:MazeGameEnv',
    kwargs={'maze': None}
)


#Maze config
maze = [
    ['S', '', '.', '.'],
    ['.', '#', '.', '#'],
    ['.', '.', '.', '.'],
    ['#', '.', '#', 'G'],
]
# Test the environment
env = gym.make('MazeGameEnv',maze=maze)
obs,_ = env.reset()
env.render()

done = False
while True:
    pygame.event.get()
    action = env.action_space.sample()  # Random action selection
    obs, reward, done, _ = env.step(action)
    env.render()
    if done:
        print('Reward:', reward)
        print('Done:', done)
        print(""the Game has been completed"")
        break

    print('Reward:', reward)
    print('Done:', done)

    pygame.time.wait(200)
"
JPg8uApa,Turtle API Extension,Raisu,Lua,Friday 20th of October 2023 08:39:56 AM CDT,"-- extends default turtle api with coord tracking
-- now working

-- used for testing in IDE
if io.open(""peripheral.lua"", ""r"") then
  require ""peripheral""
end

local slurtle = turtle

-- note: wont keep track of coords unless starting dir is initialized
local turtle = {
  x = 0,
  y = 0,
  z = 0,
  dir = 1,
  depth = 0,
  LEFT_EQUIP = 0,
  RIGHT_EQUIP = 0,
  TORCH_SLOT = 0,
}

function turtle.getRightEquipSlot()
  return turtle.RIGHT_EQUIP
end
function turtle.getLeftEquipSlot()
  return turtle.LEFT_EQUIP
end
function turtle.getDepth()
  return turtle.depth
end
function turtle.setDepth(val)
  turtle.depth = val
end

setmetatable(turtle, slurtle)
slurtle.__index = slurtle

local DIRECTIONS = {""north"",""east"",""south"",""west""}

-- maps direction name to attr affected when moving forward that direction
local DIR_TO_ATTR = {
  function(val) turtle.z = turtle.z-val turtle.save() end,
  function(val) turtle.x = turtle.x+val turtle.save() end,
  function(val) turtle.z = turtle.z+val turtle.save() end,
  function(val) turtle.x = turtle.x-val turtle.save() end,
}

local DIR_TO_INDEX = {
  north=1,
  east=2,
  south=3,
  west=4
}

local function modulus_incr(num, amount, divisor)
  local res = num-1
  res = res + amount
  res = res % divisor
  res = res + 1
  return res
end

function turtle.reset(x,y,z,dir)
  assert(dir, ""must specify direction at least"")
  if not tonumber(dir) then
    dir = DIR_TO_INDEX[dir]
  end  
  turtle.dir = dir
  turtle.x = x or 0
  turtle.y = y or 0 
  turtle.z = z or 0
end

function turtle.getDir()
  return DIRECTIONS[turtle.dir]
end

function turtle.xyz()
  return turtle.x, turtle.y, turtle.z, turtle.getDir()
end

function turtle.show_xyz()
  local x,y,z,dir = turtle.xyz()
  print(""x: ""..tostring(x))
  print(""y: ""..tostring(y))
  print(""z: ""..tostring(z))
  print(""dir: ""..tostring(dir))
end

function turtle.forward()
  if slurtle.forward() then
    local func = DIR_TO_ATTR[turtle.dir]
    func(1)
    return true
  end
  return false
end

function turtle.back()
  if slurtle.back() then
    local func = DIR_TO_ATTR[turtle.dir]
    func(-1)
    return true
  end
  return false
end

function turtle.up()
  if slurtle.up() then
    turtle.y = turtle.y + 1
    turtle.save()
    return true
  end
  return false
end

function turtle.down()
  if slurtle.down() then
    turtle.y = turtle.y - 1
    turtle.save()
    return true
  end
  return false
end

function turtle.turnRight()
  if slurtle.turnRight() then
    turtle.dir = modulus_incr(turtle.dir, 1, #DIRECTIONS)
    turtle.save()
    return true
  end
  return false
end

function turtle.turnLeft()
  if slurtle.turnLeft() then
    turtle.dir = modulus_incr(turtle.dir, -1, #DIRECTIONS)
    turtle.save()
    return true
  end
  return false
end

function turtle.turnTo(dir)
  --dir is a num
  local num = dir - turtle.dir
  if num == 0 then
    return
  elseif num == -3 or num == 1 then
    turtle.turnRight()
  elseif num == 3 or num == -1 then
    turtle.turnLeft()
  else
    turtle.turnRight()
    turtle.turnRight()
  end
end

function turtle.forward_or_dig()
  turtle.dig()
  return turtle.forward()
end

function turtle.back()
  return turtle.back()
end

function turtle.up_or_dig()
  turtle.digUp()
  return turtle.up()
end
function turtle.down_or_dig()
  turtle.digDown()
  return turtle.down()
end

function turtle.goToVar(dist, dir_pos, dir_neg)
  if dist < 0 then
    turtle.turnTo(dir_neg)
    dist = dist * -1
  else
    turtle.turnTo(dir_pos)
  end
  
  for _=1,dist do
    turtle.forward_or_dig()
  end
end

function turtle.goToHeight(dist)
  move_func = turtle.up_or_dig
  if dist < 0 then
    move_func = turtle.down_or_dig
    dist = dist * -1
  end
  
  for _=1,dist do
    move_func()
  end
end

function turtle.goTo(x,y,z)
  turtle.goToVar(z-turtle.z, 3, 1)
  turtle.goToVar(x-turtle.x, 2, 4)
  turtle.goToHeight(y-turtle.y)
end

function turtle.findItemSlot(itemName)
  for i = 1,16 do
	if turtle.getItemCount(i)>0 then
      if itemName==turtle.getItemDetail(i).name then return i end
	end
  end
  return 0
end

function turtle.swapRight(slot)
  if slot then 
    turtle.select(slot)
  end
  
  if turtle.equipRight() and slot then
    turtle.RIGHT_EQUIP = slot
  end
end

function turtle.swapLeft(slot)
  if slot then
    turtle.select(slot)
  end
  
  if turtle.equipLeft() and slot then
    turtle.LEFT_EQUIP = slot
  end
end

function turtle.checkCompass()
  local checkObs = true
  local BLOCK_SLOT = 0  
  local torchesM = {[""west""]=""east"",[""east""]=""west"",[""north""]=""south"",[""south""]=""north"",""Invalid""}
  local items = {[""minecraft:ladder""]={""Invalid"",""South"",""North"",""East"",""West""},
                 [""minecraft:wall_torch""]=torchesM,
                 [""minecraft:torch""]=torchesM,
                 [""minecraft:redstone_torch""]=torchesM}

  while turtle.TORCH_SLOT == 0 do
    turtle.TORCH_SLOT = turtle.findItemSlot(""minecraft:torch"")
    if turtle.TORCH_SLOT == 0 then
      print(""Give me a Torch and press any key to continue..."")
      os.pullEvent(""key"")
    end
  end
  
  if checkObs then
    if turtle.detect() then
      turtle.dig()
    end
    if turtle.detectDown() then
      turtle.digDown()
    end
  end

  if type(turtle.getFuelLevel()) == ""number"" and turtle.getFuelLevel() < 2 then
    print(""Not enough Fuel"")
    return
  end

  --Find a block in inventory 
  while BLOCK_SLOT == 0 do
    for i = 1,16 do
      if i ~= turtle.TORCH_SLOT then
        turtle.select(i)
        if turtle.place() then
          BLOCK_SLOT = i
          break
        end
      end
    end
  end

  turtle.down()
  turtle.select(turtle.TORCH_SLOT)
  turtle.placeUp()
  local inspect,data = turtle.inspectUp()
  turtle.digUp()
  turtle.up()
  turtle.select(BLOCK_SLOT)
  turtle.dig()
  if not inspect then
    print(""Error getting direction"")
    return ""Err""
  end
  return items[data.name][data.state.facing]
end

function turtle.checkInventory()
  local blacklist = { ""minecraft:cobblestone"",""minecraft:cobbled_deepslate"", ""minecraft:dirt"", ""minecraft:gravel"", ""minecraft:sand"", ""minecraft:tuff"", ""minecraft:mud"", ""byg:soapstone"" }
  local emptySlots = 0
  for i=1,16 do
    if i ~= turtle.LEFT_EQUIP and i ~= turtle.RIGHT_EQUIP and i ~= turtle.TORCH_SLOT then
      turtle.select(i)
      if turtle.getItemCount() > 0 then
        for _,target in pairs(blacklist) do
          if turtle.getItemDetail().name==target then
            turtle.drop()
            emptySlots = emptySlots + 1
            break
          end
        end
      else
        emptySlots = emptySlots + 1
      end
    end
  end
  return emptySlots
end

function returnHome(resume)
  turtle.goTo(0,turtle.depth,0)
  turtle.dumpInventory()
  if resume then
    turtle.reset(0,0,0,turtle.dir)
    turtle.goTo(0,-turtle.depth,0)
    turtle.reset(0,0,0,turtle.dir)
  end
end

function turtle.dumpInventory()
  for i=1,16 do
    if i ~= turtle.LEFT_EQUIP and i ~= turtle.RIGHT_EQUIP and i ~= turtle.TORCH_SLOT then
      turtle.select(i)
      turtle.dropUp()
    end
  end
end

function turtle.restore()
  h = fs.open(""restorevalues"",""r"")
  turtle.x = (tonumber(h.readLine()*1))
  turtle.y = (tonumber(h.readLine()*1))
  turtle.z = (tonumber(h.readLine()*1))
  turtle.dir = (tonumber(h.readLine()*1))
  turtle.depth = (tonumber(h.readLine()*1))
  turtle.LEFT_EQUIP = (tonumber(h.readLine()*1))
  turtle.RIGHT_EQUIP = (tonumber(h.readLine()*1))
  turtle.TORCH_SLOT = (tonumber(h.readLine()*1))
  h.close()
end

function turtle.save()
  h = fs.open(""restorevalues"",""w"")
  h.writeLine(turtle.x)
  h.writeLine(turtle.y)
  h.writeLine(turtle.z)
  h.writeLine(turtle.dir)
  h.writeLine(turtle.depth)
  h.writeLine(turtle.LEFT_EQUIP)
  h.writeLine(turtle.RIGHT_EQUIP)
  h.writeLine(turtle.TORCH_SLOT)
  h.close()
end

--for key, func in pairs(slurtle) do
  --if not turtle[key] then
    --turtle[key] = func
  --end
--end

return turtle"
T3HzQ6Dn,https://stackoverflow.com/questions/77324457/generate-valid-dictionary-in-ansible-with-condition-dep,mocart2,YAML,Friday 20th of October 2023 08:35:32 AM CDT,"- name: test_playbook
  hosts: localhost
  connection: local

  vars:
    server__fqdn: myserver.local
    server__team: superduper_team

    request_body:
      matchers: |
        {% filter from_yaml %}
        {% if ""myserver"" in server__fqdn %}
        - name: ""host""
          value: ""{{ server__fqdn }}""
          type: ""EQUAL""
        - name: ""node""
          value: ""myserver""
          type: ""EQUAL""
        {% else %}
        - name: ""host""
          value: ""{{ server__fqdn }}""
          type: ""EQUAL""
        {% endif %}
        {% endfilter %}
      teamName: ""{{ server__team }}""

  tasks:
    - debug:
        var: request_body|type_debug
    - debug:
        var: request_body
    - debug:
        var: request_body|to_json
        
        

OUTPUT:
ansible-playbook playbooks/test.yml
/usr/local/lib/python3.7/site-packages/paramiko/transport.py:219: CryptographyDeprecationWarning: Blowfish has been deprecated
  ""class"": algorithms.Blowfish,
[WARNING]: No inventory was parsed, only implicit localhost is available

PLAY [test_playbook] ****************************************************************************************************************************

TASK [Gathering Facts] **************************************************************************************************************************
пятница 20 октября 2023  16:30:14 +0300 (0:00:00.013)       0:00:00.013 ******* 
ok: [localhost]

TASK [debug] ************************************************************************************************************************************
пятница 20 октября 2023  16:30:15 +0300 (0:00:00.911)       0:00:00.924 ******* 
fatal: [localhost]: FAILED! => 
  msg: |-
    An unhandled exception occurred while templating '{'matchers': '{% filter from_yaml %}\n{% if ""myserver"" in server__fqdn %}\n- name: ""host""\n  value: ""{{ server__fqdn }}""\n  type: ""EQUAL""\n- name: ""node""\n  value: ""myserver""\n  type: ""EQUAL""\n{% else %}\n- name: ""host""\n  value: ""{{ server__fqdn }}""\n  type: ""EQUAL""\n{% endif %}\n{% endfilter %}\n', 'teamName': '{{ server__team }}'}'. Error was a <class 'ansible.errors.AnsibleError'>, original message: Unexpected templating type error occurred on ({% filter from_yaml %}
    {% if ""myserver"" in server__fqdn %}
    - name: ""host""
      value: ""{{ server__fqdn }}""
      type: ""EQUAL""
    - name: ""node""
      value: ""myserver""
      type: ""EQUAL""
    {% else %}
    - name: ""host""
      value: ""{{ server__fqdn }}""
      type: ""EQUAL""
    {% endif %}
    {% endfilter %}
    ): sequence item 0: expected str instance, list found

PLAY RECAP **************************************************************************************************************************************
localhost                  : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

пятница 20 октября 2023  16:30:15 +0300 (0:00:00.040)       0:00:00.965 ******* 
=============================================================================== 
Gathering Facts -------------------------------------------------------------------------------------------------------------------------- 0.91s
debug ------------------------------------------------------------------------------------------------------------------------------------ 0.04s


ansible --version                                               
/usr/local/lib/python3.7/site-packages/paramiko/transport.py:219: CryptographyDeprecationWarning: Blowfish has been deprecated
  ""class"": algorithms.Blowfish,
ansible [core 2.11.12] 
  config file = /Users/username/projects/ansible.cfg
  configured module search path = ['/Users/username/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/local/lib/python3.7/site-packages/ansible
  ansible collection location = /Users/username/projects:/Users/username/.ansible/collections
  executable location = /usr/local/bin/ansible
  python version = 3.7.12 (default, Oct 22 2021, 17:50:30) [Clang 13.0.0 (clang-1300.0.29.3)]
  jinja version = 3.1.2
  libyaml = True"
VK4XCjge,APIN,anikethjana,JSON,Friday 20th of October 2023 08:24:13 AM CDT,"{
  ""version"": ""3.7.304.2022387106"",
""pinLink"": ""https://RSlinks.net/lsto2nry"",
""pinCode"": ""1069"",
""positivebtn"": ""Open"",
""tutorialLink"": ""https://youtu.be/-pCPoHQDa_8?si=v6BB5TuTftmCX80m"",
""channelLink"": ""https://telegram.me/modder_family"",
""negativebtn"": ""Later""
}"
QxgdeC6P,Untitled,aniketgm,YAML,Friday 20th of October 2023 08:15:56 AM CDT,"- hosts: ""vmTst001""
  # gather_facts: false
  become: true
  vars_files:
  - ""./vars.yml""
  pre_tasks:
  - pip:
      name:
      - pyvmomi
      - requests
      extra_args: --user
  tasks:
  - name: Show inventory_hostname and ansible_hostname
    ansible.builtin.debug:
      msg:
      - ""Inventory HN: {{ inventory_hostname }}""
      - ""Ansible HN: {{ ansible_hostname }}""

  - name: Get datacenter info from VM
    community.vmware.vmware_vm_info:
      validate_certs: false
      hostname: ""{{ vc_hname }}""
      username: ""{{ vc_uname }}""
      password: ""{{ vc_psswd }}""
      vm_name: ""{{ vm_name }}""
    register: vm_info

  - set_fact:
      datacenter: ""{{ vm_info.virtual_machines.0.datacenter }}""

  - name: Gather disk facts from virtual machine using name
    community.vmware.vmware_guest_disk_info:
      validate_certs: false
      hostname: ""{{ vc_hname }}""
      username: ""{{ vc_uname }}""
      password: ""{{ vc_psswd }}""
      datacenter: ""{{ datacenter }}""
      name: ""{{ vm_name }}""
    register: disk_facts"
Sms7fDiH,XrayMiner,Raisu,Lua,Friday 20th of October 2023 08:15:33 AM CDT,"-- y level 14 diamond miner
-- messes with turtle library
-- now working

local turtle = require ""turtle""

-- mines blocks whose names have these following strings in them
local TARGETS = {""diamond"", ""gold"", ""nickel"", ""iron""}
local DEFAULT_RADIUS = 8

function main(tArgs)
  if fs.exists(""restorevalues"") then
    --turtle.restore()
  end
  
  if turtle.RIGHT_EQUIP == 0 then
    turtle.RIGHT_EQUIP = math.max(turtle.findItemSlot(""minecraft:diamond_pickaxe""), turtle.findItemSlot(""advancedperipherals:geo_scanner""))
  end
  
  if peripheral.getType(""right"") == ""geoScanner"" then
    turtle.findItemSlot()
    if turtle.getItemDetail(turtle.RIGHT_EQUIP).name == ""minecraft:diamond_pickaxe"" then
      turtle.select(turtle.RIGHT_EQUIP)
      turtle.equipRight()
    else
      print(""Error, Pickaxe Not Found"")
    end
  end 

  local dir = turtle.checkCompass()  
  local x = 0
  local y = 0
  local z = 0
  local dist = tArgs[2] or 1

  turtle.reset(x,y,z,dir)
  xray()
end

function is_target(ore_name)
  for i,target in pairs(TARGETS) do
    if ore_name:find(target) then
      return true
    end
  end
  return false
end


function xray()
  local bedrockReached = false
  while bedrockReached == false do
    for i=1,17 do
      turtle.digDown()
      turtle.down()
      turtle.setDepth(turtle.getDepth() + 1)
      local inspect,data = turtle.inspectDown()
      if data.name == ""minecraft:bedrock"" then
        bedrockReached = true
        break
      end
    end
    local tbl = scanBlocks()
    local dir = turtle.dir
    turtle.reset(0,0,0,dir)
    for i,item in pairs(tbl) do
      if is_target(item.name) then
        if turtle.checkInventory() == 0 then
          returnHome(true)
        end
        turtle.goTo(item.x,item.y,item.z)
      end
    end
    turtle.goTo(0,0,0)

    if bedrockReached then
      returnHome()
    end
    turtle.turnTo(dir)
  end
end

function scanBlocks()
  turtle.swapRight(turtle.getRightEquipSlot())
  local tbl = peripheral.call(""right"",""scan"",DEFAULT_RADIUS)
  turtle.swapRight()
  return tbl
end

main{...}"
yBhYufu1,Untitled,sissou123,JavaScript,Friday 20th of October 2023 07:57:08 AM CDT,"JavaScript Print
In JavaScript, you can use the window.print() method to trigger the browser's built-in print functionality, allowing you to print the content of the current web page. 
javascript
Copy code
function printPage() {
  window.print();
}
You can then call this function in response to a user action, such as clicking a button in your HTML:
<!DOCTYPE html>
<html>
<body>
for more:https://try2link.com/kobra











"
7LSYF4NV,Untitled,Mazi30,Lua,Friday 20th of October 2023 07:51:29 AM CDT,"DEFAULT_BORDER_SIZE = 16
MIN_BORDER_SIZE = 2

local args = { ... }

border_size = args[1]
if border_size == nil then
    border_size = DEFAULT_BORDER_SIZE
end

if border_size < MIN_BORDER_SIZE then
    error(string.format(""Border size needs to be at least %q"", MIN_BORDER_SIZE))
end

--number_of_blocks_needed = border_size + border_size - 1 + border_size - 1 + border_size - 2
local number_of_blocks_needed = 4 * border_size - 4

local slot_data = turtle.getItemDetail(1)
if slot_data == nil then
    error(""Need to specify block type in the first inventory slot."")
end
block_name = slot_data.name
print(block_name)


function count_bulding_blocks(block_type)
    print(block_type)
    local item_count = 0
    for slot_id = 1, 16 do
        local slot_data = turtle.getItemDetail(slot_id)
        if slot_data ~= nil and slot_data.name == block_type then
            item_count = item_count + slot_data.count
        end
    end
    return item_count
end


number_of_bulding_blocks = count_bulding_blocks(block_name)
if number_of_bulding_blocks < number_of_blocks_needed then
    error(string.format(""At least %q blocks are needed but only %q are available"", number_of_blocks_needed, number_of_bulding_blocks))
end


function select_next_slot_with_building_block(block_type)
    local slot_data = nil
    local name = nil
    while true do
        if turtle.getSelectedSlot() == 16 then
            error(""Ran out of building blocks."")
        end
        slot_data = turtle.getItemDetail()
        name = slot_data.name
        if name == block_type then break end
        turtle.select(turtle.getSelectedSlot() + 1)
    end
end



for edge = 0, 3 do
    for blocks_to_travel = border_size - 2, 0, -1 do

        if turtle.getItemCount() == 0 then
            select_next_slot_with_building_block(block_name)
        end
    
        if not turtle.compareDown() then
            if turtle.detectDown() then
                if not turtle.digDown() then
                    error(""Failed to mine block below."")
                end
            end
        
        
            if not turtle.placeDown() then
                error(""Failed to place a block below."")
            end
        end
                    
        if turtle.detect() then    
            turtle.dig()
        end
    
        if not turtle.forward() then
            error(""Failed to move forward."")
        end 
    
    end
    turtle.turnRight()
end"
NZiDrQR9,Untitled,sissou123,JavaScript,Friday 20th of October 2023 07:50:25 AM CDT,"JavaScript Output
in JavaScript, you can produce output in various ways, depending on the context in which you are working. Here are the primary methods for producing output in JavaScript:
Using console.log(): This is the most common way to produce output for debugging and development purposes. It logs messages, variables, and objects to the browser's console or the console of the environment where your JavaScript code is running.
for more:https://try2link.com/kobra

javascript
Copy code
console.log(""Hello, world!"");
let number = 42;
console.log(""The answer is: "" + number);"
CbhDHB9z,Untitled,sissou123,JavaScript,Friday 20th of October 2023 07:45:41 AM CDT,"JavaScript References
avaScript references, also known as references or references in JavaScript, are a fundamental concept in the language.
let x = 10;
let name = ""John"";
for more:https://try2link.com/OOliKlBi"
LDLBqwJC,Untitled,bodarev,JSON,Friday 20th of October 2023 07:30:12 AM CDT,"{""TERMINAL"":""92409023"",""TRTYPE"":""0"",""ORDER"":""900000002"",""AMOUNT"":""1"",""CURRENCY"":""MDL"",""ACTION"":""2"",""RC"":""58"",""TEXT"":""Not permitted to merchant"",""APPROVAL"":"""",""RRN"":""812201148003"",""INT_REF"":""9A898AA575942615"",""TIMESTAMP"":""20180502090139"",""NONCE"":""E251D0C221885A72D45BA3994C1268EB"",""P_SIGN"":""93D8BC7E71B15298D97C143527D4503F79BA4F40C33942A45AE021D57AA849341E858ED360D249DA009BAE3D502D0FAF252906E61B340F4EE3A128A3C1E99FBE2D8FDF1C137F00B03650149EDB337CC9EEBBA6402432CB255F51DDAD19173D68742219EB7999B33C5EE4EAAB1D7E976000664D77A99E725BC5393BFB6A5626C2BA3B65697EE70C69AC1DBAB4B55EBC7A9E1BAE77FAF106140D76CF726C2CCF41C27A4C019ECE1542EE091FD22CDEA92CC4765C2C95FBCDC5C8B73553DBD4F5592437425ACBEF89E63BAFA5F829AD05B98AB5A69C6745379D32CE4181346500ABF659E24346FF2C3453B7F8CD36B18E239B6A37C54BEEBA99E786442B591713F9"",""M_PAN"":""4028XXXXXXXX2105"",""CARD_NAME"":""Victor Condratiuc"",""BIN"":""402811""}"
1NBXtpwH,Untitled,kesha1225,JSON,Friday 20th of October 2023 07:29:58 AM CDT,"сортировал по buyout_price

самые дешманские

{
  ""item_id"": ""wg53"",
  ""amount"": 1,
  ""start_price"": 250000,
  ""current_price"": null,
  ""buyout_price"": 255555,
  ""start_time"": ""2023-10-20T11:29:01+00:00"",
  ""end_time"": ""2023-10-20T23:29:01+00:00"",
  ""additional"": {
    ""qlt"": 0,
    ""stats_random"": -0.87552345,
    ""upgrade_bonus"": 0,
    ""spawn_time"": 1697800698458
  }
}

{
  ""item_id"": ""wg53"",
  ""amount"": 1,
  ""start_price"": 299990,
  ""current_price"": null,
  ""buyout_price"": 300000,
  ""start_time"": ""2023-10-18T15:16:08+00:00"",
  ""end_time"": ""2023-10-20T15:16:08+00:00"",
  ""additional"": {
    ""it_transf_count"": 3,
    ""qlt"": 0,
    ""stats_random"": -0.52725965,
    ""upgrade_bonus"": 0,
    ""spawn_time"": 1697564031285
  }
}


{
  ""item_id"": ""wg53"",
  ""amount"": 1,
  ""start_price"": 299999,
  ""current_price"": null,
  ""buyout_price"": 300000,
  ""start_time"": ""2023-10-19T18:28:48+00:00"",
  ""end_time"": ""2023-10-21T18:28:48+00:00"",
  ""additional"": {
    ""it_transf_count"": 3,
    ""qlt"": 0,
    ""stats_random"": -0.81449753,
    ""upgrade_bonus"": 0,
    ""spawn_time"": 1697737475598
  }
}

самые дорогие

{
  ""item_id"": ""wg53"",
  ""amount"": 1,
  ""start_price"": 6400000,
  ""current_price"": null,
  ""buyout_price"": 6500000,
  ""start_time"": ""2023-10-20T12:13:33+00:00"",
  ""end_time"": ""2023-10-21T00:13:33+00:00"",
  ""additional"": {
    ""ndmg"": 0.034639999485015886,
    ""ptn"": 12,
    ""compens_2023_owner"": ""Liddzxc"",
    ""md_k"": 0.02,
    ""compens_2023_ptn"": 12,
    ""bonus_properties"": [
      ""PSYCHO_ACC"",
      ""BIOLOGICAL_ACC""
    ],
    ""it_transf_count"": 6,
    ""qlt"": 2,
    ""upgrade_bonus"": 0.0014,
    ""spawn_time"": 1639885402826
  }
}

{
  ""item_id"": ""wg53"",
  ""amount"": 1,
  ""start_price"": 6500011,
  ""current_price"": null,
  ""buyout_price"": 7700001,
  ""start_time"": ""2023-10-19T16:54:22+00:00"",
  ""end_time"": ""2023-10-21T16:54:22+00:00"",
  ""additional"": {
    ""it_transf_count"": 2,
    ""qlt"": 3,
    ""upgrade_bonus"": 0,
    ""spawn_time"": 1697551886146
  }
}

{
  ""item_id"": ""wg53"",
  ""amount"": 1,
  ""start_price"": 7699999,
  ""current_price"": null,
  ""buyout_price"": 8499999,
  ""start_time"": ""2023-10-19T22:36:50+00:00"",
  ""end_time"": ""2023-10-20T22:36:50+00:00"",
  ""additional"": {
    ""bonus_properties"": [
      ""PSYCHO_ACC"",
      ""BIOLOGICAL_ACC"",
      ""RADIATION_ACC""
    ],
    ""ndmg"": 0.31705000440490533,
    ""it_transf_count"": 11,
    ""qlt"": 2,
    ""ptn"": 15,
    ""stats_random"": -0.6590731,
    ""upgrade_bonus"": 0,
    ""spawn_time"": 1673319223892
  }
}"
JR3eggYq,snake-game,anujpandey,Python,Friday 20th of October 2023 07:08:06 AM CDT,"import random
import curses
import threading
from curses import textpad
import os

OPPOSITE_DIRECTION_DICT = {
    curses.KEY_UP: curses.KEY_DOWN,
    curses.KEY_DOWN: curses.KEY_UP,
    curses.KEY_RIGHT: curses.KEY_LEFT,
    curses.KEY_LEFT: curses.KEY_RIGHT
}

DIRECTIONS_LIST = [curses.KEY_RIGHT, curses.KEY_LEFT, curses.KEY_DOWN, curses.KEY_UP]
SNAKE = '#'
FOOD = '@'
BLANK = ' '


def beep():
    def beep_sound():
        os.system('afplay /System/Library/Sounds/Sosumi.aiff')

    t = threading.Thread(target=beep_sound)
    t.start()


def create_food(snake, box):
    """"""Simple function to find coordinates of food which is inside box and not on snake body""""""
    food = None
    while food is None:
        food = [random.randint(box[0][0] + 1, box[1][0] - 1),
                random.randint(box[0][1] + 1, box[1][1] - 1)]
        if food in snake:
            food = None
    return food


def main():
    # initial settings
    std_scr = curses.initscr()
    curses.curs_set(0)
    curses.noecho()
    curses.cbreak()

    global FOOD
    global SNAKE
    FOOD = curses.ACS_PI
    SNAKE = curses.ACS_CKBOARD
    std_scr.keypad(True)
    std_scr.nodelay(True)
    std_scr.timeout(100)

    # create a game box
    sh, sw = std_scr.getmaxyx()
    box = [[3, 3], [sh - 3, sw - 3]]  # [[ul_y, ul_x], [dr_y, dr_x]]
    textpad.rectangle(std_scr, box[0][0], box[0][1], box[1][0], box[1][1])

    # create snake and set initial direction
    snake = [[sh // 2, sw // 2 + 1], [sh // 2, sw // 2], [sh // 2, sw // 2 - 1]]
    direction = curses.KEY_RIGHT

    # draw snake
    for y, x in snake:
        std_scr.addch(y, x, SNAKE)

    # create food
    food = create_food(snake, box)
    std_scr.addch(food[0], food[1], FOOD)

    # print score
    score = 0
    score_text = ""Score: {}"".format(score)
    std_scr.addstr(1, sw // 2 - len(score_text) // 2, score_text)

    while 1:
        # non-blocking input
        key = std_scr.getch()

        # set direction if user pressed any arrow key and that key is not opposite of current direction
        if key in DIRECTIONS_LIST and key != OPPOSITE_DIRECTION_DICT[direction]:
            direction = key

        # find next position of snake head
        head = snake[0]
        new_head = [head[0], head[1] + 1]
        if direction == curses.KEY_LEFT:
            new_head = [head[0], head[1] - 1]
        elif direction == curses.KEY_DOWN:
            new_head = [head[0] + 1, head[1]]
        elif direction == curses.KEY_UP:
            new_head = [head[0] - 1, head[1]]

        # insert and print new head
        std_scr.addch(new_head[0], new_head[1], SNAKE)
        snake.insert(0, new_head)

        # if snake head is on food
        if snake[0] == food:
            # update score
            curses.beep()
            beep()
            curses.flash()
            score += 1
            score_text = ""Score: {}"".format(score)
            std_scr.addstr(1, sw // 2 - len(score_text) // 2, score_text)

            # create new food
            food = create_food(snake, box)
            std_scr.addch(*food, FOOD)

            # increase speed of game
            std_scr.timeout(100 - (len(snake) // 3) % 90)
        else:
            # shift snake's tail
            std_scr.addstr(snake[-1][0], snake[-1][1], BLANK)
            snake.pop()

        # conditions for game over
        if (snake[0][0] in [box[0][0], box[1][0]] or
                snake[0][1] in [box[0][1], box[1][1]] or
                snake[0] in snake[1:]):
            msg = ""Game Over!""
            std_scr.addstr(sh // 2, sw // 2 - len(msg) // 2, msg)
            std_scr.nodelay(False)
            std_scr.getch()
            break

    curses.curs_set(1)
    curses.nocbreak()
    std_scr.keypad(False)
    curses.echo()
    curses.endwin()
    quit()


if __name__ == '__main__':
    main()
"
Bfp3vYLD,Bird Feeder,stspringer,Java,Friday 20th of October 2023 07:02:43 AM CDT,"//normal
//I found this web server bird feeder script, pretty deep, 10_20_2023 got to study it. neat.


import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;
import java.util.concurrent.ThreadLocalRandom;
 
public class BirdFeedingSimulator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
 
        System.out.print(""Enter the number of grains: "");
        int grainsOfWheat = scanner.nextInt();
 
        System.out.print(""Enter the number of small stones: "");
        int smallStones = scanner.nextInt();
 
        System.out.print(""Enter the number of birds: "");
        int totalBirds = scanner.nextInt();
 
        int maxBirdsAtPlate = 6;
 
        // Create a queue to represent birds waiting to eat
        Queue<Integer> birdsQueue = new LinkedList<>();
        for (int i = 1; i <= totalBirds; i++) {
            birdsQueue.offer(i);
        }
 
        int[] birdResults = new int[totalBirds]; // 0 for not full, 1 for half full, 2 for full
 
        while (!birdsQueue.isEmpty()) {
            int birdsAtPlate = Math.min(maxBirdsAtPlate, birdsQueue.size());
 
            for (int i = 0; i < birdsAtPlate; i++) {
                int birdId = birdsQueue.poll();
                int attempts = 2;
                int grainsEaten = 0;
                int stonesEaten = 0;
 
                while (attempts > 0) {
                    int randomChoice = ThreadLocalRandom.current().nextInt(2);
                    if (randomChoice == 0 && grainsOfWheat > 0) {
                        grainsEaten++;
                        grainsOfWheat--;
                    } else if (randomChoice == 1 && smallStones > 0) {
                        stonesEaten++;
                        smallStones--;
                    }
                    attempts--;
                }
 
                if (grainsEaten == 2) {
                    birdResults[birdId - 1] = 2; // Full
                } else if (grainsEaten == 1 && stonesEaten == 1) {
                    birdResults[birdId - 1] = 1; // Half Full
                } else if (stonesEaten == 2) {
                    birdResults[birdId - 1] = 0; // Not Full
                }
            }
        }
 
        int fullCount = 0;
        int halfFullCount = 0;
        int notFullCount = 0;
 
        for (int result : birdResults) {
            if (result == 2) {
                fullCount++;
            } else if (result == 1) {
                halfFullCount++;
            } else {
                notFullCount++;
            }
        }
 
        System.out.println(""Full Birds: "" + fullCount);
        System.out.println(""Half Full Birds: "" + halfFullCount);
        System.out.println(""Not Full Birds: "" + notFullCount);
 
        scanner.close(); // Close the scanner
    }
}



//web server

import com.sun.net.httpserver.HttpServer;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpExchange;
import java.io.IOException;
import java.io.OutputStream;

public class BirdFeedingWebService {
    public static void main(String[] args) throws IOException {
        HttpServer server = HttpServer.create();
        server.bind(new InetSocketAddress(8080), 0);
        server.createContext(""/simulate"", new SimulationHandler());
        server.start();
        System.out.println(""Server started on port 8080..."");
    }

    static class SimulationHandler implements HttpHandler {
        @Override
        public void handle(HttpExchange exchange) throws IOException {
            // Parse query parameters from the request
            String query = exchange.getRequestURI().getQuery();
            String[] params = query.split(""&"");
            int grainsOfWheat = Integer.parseInt(params[0].split(""="")[1]);
            int smallStones = Integer.parseInt(params[1].split(""="")[1]);
            int totalBirds = Integer.parseInt(params[2].split(""="")[1]);

            // Simulate bird feeding (you can use the previous code here)

            // Prepare the response
            String response = ""Full Birds: "" + fullCount + ""\n"" +
                              ""Half Full Birds: "" + halfFullCount + ""\n"" +
                              ""Not Full Birds: "" + notFullCount;

            exchange.sendResponseHeaders(200, response.getBytes().length);
            OutputStream os = exchange.getResponseBody();
            os.write(response.getBytes());
            os.close();
        }
    }
}


//  web client

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class BirdFeedingWebServiceClient {
    public static void main(String[] args) throws IOException {
        int grainsOfWheat = 50;
        int smallStones = 50;
        int totalBirds = 50;

        String urlString = ""http://localhost:8080/simulate?grains="" + grainsOfWheat +
                           ""&stones="" + smallStones + ""&birds="" + totalBirds;

        URL url = new URL(urlString);
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod(""GET"");

        int responseCode = connection.getResponseCode();
        if (responseCode == 200) {
            BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            String inputLine;
            StringBuilder response = new StringBuilder();

            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
                response.append(""\n"");
            }

            in.close();
            System.out.println(response.toString());
        } else {
            System.out.println(""HTTP GET request failed with response code "" + responseCode);
        }
    }
}


//webservice logic

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;

@WebService
public class BirdFeedingService {
    @WebMethod
    public FeedingResponse simulateFeeding(
        @WebParam(name = ""grains"") int grains,
        @WebParam(name = ""stones"") int stones,
        @WebParam(name = ""birds"") int totalBirds
    ) {
        int maxBirdsAtPlate = 6;
        Queue<Integer> birdsQueue = new LinkedList<>();
        for (int i = 1; i <= totalBirds; i++) {
            birdsQueue.offer(i);
        }

        int[] birdResults = new int[totalBirds]; // 0 for not full, 1 for half full, 2 for full

        while (!birdsQueue.isEmpty()) {
            int birdsAtPlate = Math.min(maxBirdsAtPlate, birdsQueue.size());

            for (int i = 0; i < birdsAtPlate; i++) {
                int birdId = birdsQueue.poll();
                int attempts = 2;
                int grainsEaten = 0;
                int stonesEaten = 0;

                while (attempts > 0) {
                    int randomChoice = ThreadLocalRandom.current().nextInt(2);
                    if (randomChoice == 0 && grains > 0) {
                        grainsEaten++;
                        grains--;
                    } else if (randomChoice == 1 && stones > 0) {
                        stonesEaten++;
                        stones--;
                    }
                    attempts--;
                }

                if (grainsEaten == 2) {
                    birdResults[birdId - 1] = 2; // Full
                } else if (grainsEaten == 1 && stonesEaten == 1) {
                    birdResults[birdId - 1] = 1; // Half Full
                } else if (stonesEaten == 2) {
                    birdResults[birdId - 1] = 0; // Not Full
                }
            }
        }

        int fullCount = 0;
        int halfFullCount = 0;
        int notFullCount = 0;

        for (int result : birdResults) {
            if (result == 2) {
                fullCount++;
            } else if (result == 1) {
                halfFullCount++;
            } else {
                notFullCount++;
            }
        }

        FeedingResponse response = new FeedingResponse();
        response.setFullBirds(fullCount);
        response.setHalfFullBirds(halfFullCount);
        response.setNotFullBirds(notFullCount);

        return response;
    }
}


"
Z6kHEbBS,Lb2,maxim_shlyahtin,Python,Friday 20th of October 2023 07:01:11 AM CDT,"hlyakhtin_Maksim_lb2/src/main.py
@@ -0,0 +1,86 @@
def calcMinRun(n):
    r = 0
    while n >= 64:
        r |= n & 1
        n >>= 1
    return n + r


def cmp(a, b):
    if a ** 2 < b ** 2 or a ** 2 == b ** 2 and a > b:
        return True
    return False


def insertion_sort(arr, left, right):
    if len(arr) <= 1:
        return

    for i in range(left + 1, right):
        j = i
        while j > left and cmp(arr[j], arr[j - 1]):
            arr[j], arr[j - 1] = arr[j - 1], arr[j]
            j -= 1


def merge_sort(arr):
    if len(arr) == 1 or len(arr) == 0:
        return arr

    arr_l = merge_sort(arr[:len(arr) // 2])
    arr_r = merge_sort(arr[len(arr) // 2:])
    res_arr = [0] * (len(arr_l) + len(arr_r))

    arr_l_count = 0
    arr_r_count = 0
    res_count = 0

    while arr_r_count < len(arr_r) and arr_l_count < len(arr_l):
        if arr_l[arr_l_count] ** 2 < arr_r[arr_r_count] ** 2:
            res_arr[res_count] = arr_l[arr_l_count]
            arr_l_count += 1
        elif arr_l[arr_l_count] ** 2 > arr_r[arr_r_count] ** 2:
            res_arr[res_count] = arr_r[arr_r_count]
            arr_r_count += 1
        elif arr_l[arr_l_count] ** 2 == arr_r[arr_r_count] ** 2:
            if arr_l[arr_l_count] >= arr_r[arr_r_count]:
                res_arr[res_count] = arr_l[arr_l_count]
                arr_l_count += 1
            else:
                res_arr[res_count] = arr_r[arr_r_count]
                arr_r_count += 1
        res_count += 1
    while arr_l_count < len(arr_l):
        res_arr[res_count] = arr_l[arr_l_count]
        arr_l_count += 1
        res_count += 1
    while arr_r_count < len(arr_r):
        res_arr[res_count] = arr_r[arr_r_count]
        arr_r_count += 1
        res_count += 1
    for i in range(len(res_arr)):
        arr[i] = res_arr[i]
    return arr


def timsort(arr, minRun=32):
    n = len(arr)

    i = 0
    for start in range(0, n, minRun):
        end = min(start + minRun, n)
        insertion_sort(arr, start, end)

        if start != end:
            print(f""Part {i}:"", *arr[start:end])
        else:
            print(f""Part {i}:"", arr[start])
        i += 1
    merge_sort(arr)


n = int(input())
arr = list(map(int, input().split()))
timsort(arr)
print(""Answer:"", *arr)"
Vk6Jzhz4,auth_test,kosumosu,Python,Friday 20th of October 2023 06:59:10 AM CDT,"import asyncio
from collections import defaultdict
import logging
import time
import json
from uuid import uuid4

from aiokafka import AIOKafkaConsumer, AIOKafkaProducer


AUTH_REQUEST = 'auth_request'
AUTH_RESPONSE = 'auth_response'

KAFKA_SERVERS = 'localhost:9094'
AUTH_SERVER = 'localhost:8000'

level = logging.DEBUG
fmt = '%(asctime)s | %(name)s | %(levelname)s | %(funcName)s | %(message)s'

logger = logging.getLogger('auth_test')

formatter = logging.Formatter(fmt)
logger.setLevel(level)
handler = logging.StreamHandler()
handler.setFormatter(formatter)
logger.addHandler(handler)


class RequestSender:
    def __init__(
            self,
            send_topic=AUTH_REQUEST,
            listen_topic=AUTH_RESPONSE,
            kafka_servers=KAFKA_SERVERS,
            service_key='some_test_service'
    ):
        self.send_topic = send_topic
        self.listen_topic = listen_topic
        self.kafka_servers = kafka_servers
        self.service_key = service_key
        self.responses = dict()
        self.pending_responses = defaultdict(asyncio.Event)
        #
        self.run = True
        #
        self.producer = AIOKafkaProducer(
            bootstrap_servers=self.kafka_servers,
            value_serializer=lambda v: json.dumps(v).encode('utf-8'),
            key_serializer=lambda v: json.dumps(v).encode('utf-8'),
        )
        self.consumer = AIOKafkaConsumer(
            self.listen_topic,
            bootstrap_servers=self.kafka_servers,
            # group_id='my-group',
            value_deserializer=lambda v: json.loads(v.decode('utf-8')),
            # key_deserializer=lambda k: json.loads(k.decode('utf-8')),
            auto_offset_reset=""latest"",
        )

    async def verify_token(self, token: str):
        uid = str(uuid4())

        request_dict = {
            'id': uid,
            'token': token
        }

        logger.debug('Отправка запроса на валидацию в кафку. Присвоен id: %s', uid)
        time_start = time.time()
        smth = await self.producer.send_and_wait(AUTH_REQUEST, value=request_dict, key=self.service_key)
        logger.debug('send_and_wait result: %s', smth)

        await self.pending_responses[uid].wait()  # Ждем ответа
        self.pending_responses.pop(uid)

        logger.debug('RESPONSES: %s', self.responses)

        answer = self.responses.pop(uid, None)
        time_finish = time.time() - time_start
        logger.debug('ответ пришёл за: %s', time_finish)

        return answer

    async def start_consumer(self):
        logger.info('Старт консьюмера')
        await self.consumer.start()
        try:

            logger.debug('блок после try')

            async for message in self.consumer:
                logger.debug('получили что-то')
                logger.debug('MESSAGE: %s', message)
                logger.debug('MESSAGE KEY: %s', message.key)
                logger.debug('MESSAGE VALUE: %s', message.value)
                logger.debug('MESSAGE DICT: %s', message.__dict__)

                if 'status' not in message.value or 'id' not in message.value:
                    logger.error('consumer | Не верный формат сообщения: нет нужных полей')
                    continue

                uid = message.value['id']
                self.responses[uid] = message.value['status']
                self.pending_responses[uid].set()

                print(f'RESPONSES: {self.responses}')
        except json.JSONDecodeError as je:
            logger.error('Ошибка при декодировании сообщения из Kafka: %s', je)
            self.run = False
        except asyncio.CancelledError as ce:
            logger.debug('Пришёл сигнал отмены для задачи: %s', ce)
        except Exception as e:
            logger.error('Произошло исключение: %s', e)
            self.run = False

        finally:
            await self.consumer.stop()
            logger.info('Остановка консьюмера')


async def main():
    request_sender = RequestSender()
    await request_sender.producer.start()

    consumer_task = asyncio.create_task(request_sender.start_consumer(), name='test_consumer')

    try:
        while True:
            if consumer_task.done():
                logger.warning('Консьюмер завершился!')
                request_sender.run = False
                break

            token = input('Введите токен >>> ')

            if not token:
                continue
            elif token.lower() == 'exit':
                request_sender.run = False
                break

            answer = await request_sender.verify_token(token)

            print(f'ОТВЕТ: {answer}')

    except KeyboardInterrupt:
        logger.debug('exception statement: CTRL+C')
        consumer_task.cancel()
        request_sender.run = False
    finally:
        logger.debug('finally statement')
        request_sender.run = False
        consumer_task.cancel()
        await request_sender.producer.stop()
        await request_sender.consumer.stop()

    logger.warning('Выход')


if __name__ == '__main__':
    # loop = asyncio.get_event_loop()

    try:
        # loop.run_until_complete(main())
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info('Выход по сигналу с клавиатуры')
    except RuntimeError as rerr:
        logger.error('ERR: %s', rerr)
"
jsrcTbWu,Untitled,larrylailai,C,Friday 20th of October 2023 06:34:05 AM CDT,"void constructPointerArray(const int A[1024][1024], const int *B[1024][1024], int N){
    const int **array;
    array = (const int**)malloc(sizeof(const int*)*(N*N));
    for (int i=0; i<N; i++) for (int j=0; j<N; j++) array[A[i][j]] = &A[i][j];
    // for (int i=0; i<N*N; i++) printf(""%d%c"", *array[i], "" \n""[i==N*N-1]);
    for (int i=0; i<N; i++) for (int j=0; j<N; j++) B[i][j] = array[(A[i][j]+1)%(N*N)];
}"
cFxq9e8W,ComputerCraft Automatic Turtle Farm,ChickenFellwo,Lua,Friday 20th of October 2023 06:01:21 AM CDT,"-- Turtle farm by JackMacWindows
--
-- This is a simple farming script for ComputerCraft turtles. To use, simply
-- place a tilling turtle on top of a farming region, place a wired modem
-- connected to a chest next to the turtle, and run this script.
--
-- Features:
-- * Fully automatic field tending
-- * Automatic tilling and planting to reduce setup time
-- * Zero configuration to start a basic farm
-- * Boundaries are automatically detected, so no need to calculate size
-- * Non-rectangular and non-flat fields supported
-- * Recovery after being unloaded
-- * Automatic unloading and refueling from one or more chests
--
-- To create a farm, create a complete boundary around the dirt or grass area
-- that you want the farm to be inside. Then add water to ensure the field stays
-- fully watered. The field may be any height - the turtle will automatically
-- move up or down to continue farming. The field may also be non-rectangular,
-- but it will not detect single holes in a straight line going across the field.
-- (e.g. if a boundary is at (100, 0) to (100, 100), the boundary may not have a
-- hole taken out at (100, 25) to (100, 50).)
--
-- The turtle dispenses items when it reaches the origin point, which is the
-- place where the turtle was when the farm was started. This point must have a
-- modem next to it, with one or more chests placed next to that modem. The
-- program will prompt you to set this up if not present. (Make sure to right-
-- click the modem to turn it red and enable it.) Whenever the turtle returns to
-- this point, it will dispense all items except one stack of seeds and one stack
-- of fuel. If either of these stacks are not present, it will pick them up from
-- the chests.
--
-- Farms may have multiple different types of crops, and the turtle will attempt
-- to replace them with the same type of seed. However, these will have to be
-- planted beforehand - when planting the first crops, it will use whatever
-- seeds are found in the chest or turtle first.
--
-- If you'd like to add custom modded crops, scroll down to the ""add your own
-- here"" sections, and fill out the templates for the blocks and items you want.
--
-- If you need any help, you may ask on the ComputerCraft Discord server at
-- https://discord.computercraft.cc.

-- MIT License
--
-- Copyright (c) 2022 JackMacWindows
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy
-- of this software and associated documentation files (the ""Software""), to deal
-- in the Software without restriction, including without limitation the rights
-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-- copies of the Software, and to permit persons to whom the Software is
-- furnished to do so, subject to the following conditions:
--
-- The above copyright notice and this permission notice shall be included in all
-- copies or substantial portions of the Software.
--
-- THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-- SOFTWARE.

local x, y, z = 0, 0, 0
local direction = 0
local invertDirection = false

-- Ground blocks that are part of the farm
local groundBlocks = {
    [""minecraft:dirt""] = true,
    [""minecraft:grass_block""] = true,
    [""minecraft:farmland""] = true,
    [""minecraft:water""] = true,
    [""minecraft:flowing_water""] = true,
	[""minecraft:glowstone""] = true,
    -- add your own here:
    --[""<yourmod>:<block>""] = true,
}

-- Blocks that are crops, with their maximum ages
local cropBlocks = {
    [""minecraft:wheat""] = 7,
    [""minecraft:carrots""] = 7,
    [""minecraft:potatoes""] = 7,
    [""minecraft:beetroots""] = 3,
    -- add your own here:
    --[""<yourmod>:<block>""] = <maximum age>,
}

-- Mappings of crop blocks to seed items
local seeds = {
    [""minecraft:wheat""] = ""minecraft:wheat_seeds"",
    [""minecraft:carrots""] = ""minecraft:carrot"",
    [""minecraft:potatoes""] = ""minecraft:potato"",
    [""minecraft:beetroots""] = ""minecraft:beetroot_seeds"",
    -- add your own here:
    --[""<yourmod>:<block>""] = ""<yourmod>:<seed>"",
}

-- Fuel types to pull from a chest if no fuel is in the inventory
local fuels = {
    [""minecraft:coal""] = true,
    [""minecraft:charcoal""] = true,
    [""minecraft:lava_bucket""] = true,
    -- add your own here:
    --[""<yourmod>:<item>""] = true,
}

local seedItems = {}
for k, v in pairs(seeds) do seedItems[v] = k end

local function writePos()
    local file = fs.open(""jackmacwindows.farm-state.txt"", ""w"")
    file.writeLine(x)
    file.writeLine(y)
    file.writeLine(z)
    file.writeLine(direction)
    file.writeLine(invertDirection and ""true"" or ""false"")
    file.close()
end

local function refuel()
    if turtle.getFuelLevel() == ""unlimited"" or turtle.getFuelLevel() == turtle.getFuelLimit() then return end
    for i = 1, 16 do
        if turtle.getItemCount(i) > 0 then
            turtle.select(i)
            turtle.refuel(turtle.getItemCount() - 1)
            if turtle.getFuelLevel() == turtle.getFuelLimit() then return true end
        end
    end
    if turtle.getFuelLevel() > 0 then return true
    else return false, ""Out of fuel"" end
end

local function forward()
    local ok, err = turtle.forward()
    if ok then
        if direction == 0 then x = x + 1
        elseif direction == 1 then z = z + 1
        elseif direction == 2 then x = x - 1
        else z = z - 1 end
        writePos()
        return true
    elseif err:match ""[Ff]uel"" then
        ok, err = refuel()
        if ok then return forward()
        else return ok, err end
    else return false, err end
end

local function back()
    local ok, err = turtle.back()
    if ok then
        if direction == 0 then x = x - 1
        elseif direction == 1 then z = z - 1
        elseif direction == 2 then x = x + 1
        else z = z + 1 end
        writePos()
        return true
    elseif err:match ""[Ff]uel"" then
        ok, err = refuel()
        if ok then return forward()
        else return ok, err end
    else return false, err end
end

local function up()
    local ok, err = turtle.up()
    if ok then
        y = y + 1
        writePos()
        return true
    elseif err:match ""[Ff]uel"" then
        ok, err = refuel()
        if ok then return forward()
        else return ok, err end
    else return false, err end
end

local function down()
    local ok, err = turtle.down()
    if ok then
        y = y - 1
        writePos()
        return true
    elseif err:match ""[Ff]uel"" then
        ok, err = refuel()
        if ok then return forward()
        else return ok, err end
    else return false, err end
end

local function left()
    local ok, err = turtle.turnLeft()
    if ok then
        direction = (direction - 1) % 4
        writePos()
        return true
    else return false, err end
end

local function right()
    local ok, err = turtle.turnRight()
    if ok then
        direction = (direction + 1) % 4
        writePos()
        return true
    else return false, err end
end

local function panic(msg)
    term.clear()
    term.setCursorPos(1, 1)
    term.setTextColor(colors.red)
    print(""An unrecoverable error occured while farming:"", msg, ""\nPlease hold Ctrl+T to stop the program, then solve the issue described above, run 'rm jackmacwindows.farm-state.txt', and return the turtle to the start position. Don't forget to label the turtle before breaking it."")
    if peripheral.find(""modem"") then
        peripheral.find(""modem"", rednet.open)
        rednet.broadcast(msg, ""jackmacwindows.farming-error"")
    end
    local speaker = peripheral.find(""speaker"")
    if speaker then
        while true do
            speaker.playNote(""bit"", 3, 12)
            sleep(1)
        end
    else while true do os.pullEvent() end end
end

local function check(ok, msg) if not ok then panic(msg) end end

local function tryForward()
    local ok, err, found, block
    repeat
        found, block = turtle.inspect()
        if found then
            if groundBlocks[block.name] or cropBlocks[block.name] then
                ok, err = up()
                if not ok then return ok, err end
            else return false, ""Out of bounds"" end
        end
    until not found
    ok, err = forward()
    if not ok then return ok, err end
    local lastY = y
    repeat
        found, block = turtle.inspectDown()
        if not found then
            ok, err = down()
            if not ok then return ok, err end
        end
    until found
    if groundBlocks[block.name] then
        ok, err = up()
        if not ok then return ok, err end
        turtle.digDown()
    elseif not cropBlocks[block.name] then
        while y < lastY do
            ok, err = up()
            if not ok then return ok, err end
        end
        ok, err = back()
        if not ok then return ok, err end
        return false, ""Out of bounds""
    end
    return true
end

local function selectItem(item)
    local lut = {}
    if type(item) == ""table"" then
        if item[1] then for _, v in ipairs(item) do lut[v] = true end
        else lut = item end
    else lut[item] = true end
    local lastEmpty
    for i = 1, 16 do
        local info = turtle.getItemDetail(i)
        if info and lut[info.name] then
            turtle.select(i)
            return true, i
        elseif not info and not lastEmpty then lastEmpty = i end
    end
    return false, lastEmpty
end

local function handleCrop()
    local found, block = turtle.inspectDown()
    if not found then
        if selectItem(seedItems) then turtle.placeDown() end
    elseif block.state.age == cropBlocks[block.name] then
        local seed = seeds[block.name]
        turtle.select(1)
        turtle.digDown()
        turtle.suckDown()
        if turtle.getItemDetail().name ~= seed and not selectItem(seed) then return end
        turtle.placeDown()
    end
end

local function exchangeItems()
    local inventory, fuel, seed = {}, nil, nil
    for i = 1, 16 do
        turtle.select(i)
        local item = turtle.getItemDetail(i)
        if item then
            if not seed and seedItems[item.name] then
                seed = {slot = i, name = item.name, count = item.count, limit = turtle.getItemSpace(i)}
            elseif not turtle.refuel(0) then
                inventory[item.name] = inventory[item.name] or {}
                inventory[item.name][i] = item.count
            elseif not fuel then
                fuel = {slot = i, name = item.name, count = item.count, limit = turtle.getItemSpace(i)}
            end
        end
    end
    local name = peripheral.find(""modem"", function(_, v) return not v.isWireless() end).getNameLocal()
    for _, chest in ipairs{peripheral.find(""minecraft:chest"")} do
        local items = chest.list()
        for i = 1, chest.size() do
            if items[i] then
                local item = items[i].name
                if inventory[item] then
                    for slot, count in pairs(inventory[item]) do
                        local d = chest.pullItems(name, slot, count, i)
                        if d == 0 then break end
                        if count - d <= 0 then inventory[item][slot] = nil
                        else inventory[item][slot] = count - d end
                    end
                    if not next(inventory[item]) then inventory[item] = nil end
                elseif fuel and fuel.count < fuel.limit and item == fuel.name then
                    local d = chest.pushItems(name, i, fuel.limit - fuel.count, fuel.slot)
                    fuel.count = fuel.count + d
                elseif seed and seed.count < seed.limit and item == seed.name then
                    local d = chest.pushItems(name, i, seed.limit - seed.count, seed.slot)
                    seed.count = seed.count + d
                end
            end
            if not next(inventory) then break end
        end
        if not next(inventory) then break end
    end
    if next(inventory) then
        for _, chest in ipairs{peripheral.find(""minecraft:chest"")} do
            local items = chest.list()
            for i = 1, chest.size() do
                if not items[i] then
                    local item, list = next(inventory)
                    for slot, count in pairs(list) do
                        local d = chest.pullItems(name, slot, count, i)
                        if d == 0 then break end
                        if count - d <= 0 then list[slot] = nil
                        else list[slot] = count - d end
                    end
                    if not next(list) then inventory[item] = nil end
                end
                if not next(inventory) then break end
            end
            if not next(inventory) then break end
        end
    end
    if not fuel or not seed then
        for _, chest in ipairs{peripheral.find(""minecraft:chest"")} do
            local items = chest.list()
            for i = 1, chest.size() do
                if items[i] and ((fuel and items[i].name == fuel.name and fuel.count < fuel.limit) or (not fuel and fuels[items[i].name])) then
                    local d = chest.pushItems(name, i, fuel and fuel.count - fuel.limit, 16)
                    if fuel then fuel.count = fuel.count + d
                    else fuel = {name = items[i].name, count = d, limit = turtle.getItemSpace(16)} end
                end
                if items[i] and ((seed and items[i].name == seed.name and seed.count < seed.limit) or (not seed and seedItems[items[i].name])) then
                    local d = chest.pushItems(name, i, seed and seed.count - seed.limit, 1)
                    if seed then seed.count = seed.count + d
                    else seed = {name = items[i].name, count = d, limit = turtle.getItemSpace(1)} end
                end
                if (fuel and fuel.count >= fuel.limit) and (seed and seed.count >= seed.limit) then break end
            end
            if (fuel and fuel.count >= fuel.limit) and (seed and seed.count >= seed.limit) then break end
        end
    end
end

if fs.exists(""jackmacwindows.farm-state.txt"") then
    local file = fs.open(""jackmacwindows.farm-state.txt"", ""r"")
    x, y, z, direction = tonumber(file.readLine()), tonumber(file.readLine()), tonumber(file.readLine()), tonumber(file.readLine())
    invertDirection = file.readLine() == ""true""
    file.close()
    -- check if we were on a boundary block first
    local found, block, ok, err, boundary
    local lastY = y
    repeat
        found, block = turtle.inspectDown()
        if not found then check(down()) end
    until found
    if groundBlocks[block.name] then
        check(up())
        turtle.digDown()
    elseif not cropBlocks[block.name] then
        if y == lastY then lastY = lastY + 1 end
        while y < lastY do check(up()) end
        while not back() do check(up()) end
        boundary = true
    end
    if direction == 1 or direction == 3 then
        -- we were in the middle of a rotation, finish that before continuing
        local mv = (direction == 0) == invertDirection and left or right
        if boundary then
            check(mv())
            check(mv())
            check(tryForward())
            invertDirection = not invertDirection
            mv = mv == left and right or left
            writePos()
        end
        check(mv())
        handleCrop()
        if x == 0 and z == 0 then
            while y > 0 do check(down()) end
            while y < 0 do check(up()) end
            exchangeItems()
        end
    end
elseif not peripheral.find(""minecraft:chest"") then
    print[[
Please move the turtle to the starting position next to a modem with a chest.
The expected setup is the turtle next to a wired modem block, with a chest next to that modem block.
This program cannot run until placed correctly.
]]
    return
else exchangeItems() end

local ok, err
while true do
    ok, err = tryForward()
    if not ok then
        if err == ""Out of bounds"" then
            local mv = (direction == 0) == invertDirection and left or right
            check(mv())
            ok, err = tryForward()
            if not ok then
                if err == ""Out of bounds"" then
                    check(mv())
                    check(mv())
                    check(tryForward())
                    invertDirection = not invertDirection
                    mv = mv == left and right or left
                    writePos()
                else panic(err) end
            end
            check(mv())
        else panic(err) end
    end
    handleCrop()
    if x == 0 and z == 0 then
        while y > 0 do check(down()) end
        while y < 0 do check(up()) end
        exchangeItems()
    end
    if turtle.getFuelLevel() < 100 then refuel() end
end
"
cNdP9imh,data731,TestGuy1,JSON,Friday 20th of October 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'b00e3f2f5ec0fb63f388db87cdc035711ee14219d73b14e2abdca78258404e3c7726532e40164240fb44d770080266c115551a9a512c8f5c810982ed09d9f7bf3c5b62bf316dac7bff242f98ea09057568441642404960a8e5369f41924bf5a61597eaa5bd1a93be29682cb153646144014f3ffe8fee4b05d8edbc73b50c0c21',
  otherdata: [
    'acbcaf27b83e18f98ebb14031a40b35f',
    '3d39a0d6ac9112066fe6a76135e72f2f',
    '284d84661f1d394531f336629d81347e',
    'e8858530cb7646d7ac7e316a71235083',
    '8fc6cb5d6ea9d2644351dfa3bb4da1b9',
    '159a3abebcf557f7fddb32d13acf63b4',
    'edb58ef54e7948d7e24d3408ba771554',
    '5f2f176cc8573017046c141408b4ff1d'
  ]
}"
eHCwkuhN,Serialize and Deserialize a Binary Tree,jayati,C++,Friday 20th of October 2023 05:41:19 AM CDT,"//{ Driver Code Starts
#include <bits/stdc++.h>

using namespace std;

// Tree Node
struct Node {
    int data;
    Node *left;
    Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};

// Function to Build Tree
Node *buildTree(string str) {
    // Corner Case
    if (str.length() == 0 || str[0] == 'N')
        return NULL;

    // Creating vector of strings from input
    // string after spliting by space
    vector<string> ip;

    istringstream iss(str);
    for (string str; iss >> str;)
        ip.push_back(str);

    // Create the root of the tree
    Node *root = new Node(stoi(ip[0]));

    // Push the root to the queue
    queue<Node *> queue;
    queue.push(root);

    // Starting from the second element
    int i = 1;
    while (!queue.empty() && i < ip.size()) {

        // Get and remove the front of the queue
        Node *currNode = queue.front();
        queue.pop();

        // Get the current Node's value from the string
        string currVal = ip[i];

        // If the left child is not null
        if (currVal != ""N"") {

            // Create the left child for the current Node
            currNode->left = new Node(stoi(currVal));

            // Push it to the queue
            queue.push(currNode->left);
        }

        // For the right child
        i++;
        if (i >= ip.size())
            break;
        currVal = ip[i];

        // If the right child is not null
        if (currVal != ""N"") {

            // Create the right child for the current Node
            currNode->right = new Node(stoi(currVal));

            // Push it to the queue
            queue.push(currNode->right);
        }
        i++;
    }

    return root;
}


// } Driver Code Ends
/* A binary tree node has data, pointer to left child
   and a pointer to right child  
struct Node
{
    int data;
    Node* left;
    Node* right;
}; */


class Solution
{
    public:

    
    vector<int> serialize(Node *root) 
    {
        //Your code here
        vector<int> ans;
        if(root==NULL)
        {
            return ans;
        }
         queue<Node*> q;
         q.push(root);
         while(!q.empty())
         {
             Node* node = q.front();
             q.pop();
             if(node==NULL)
             {
                 ans.push_back(-1);
             }
             else
             {
                 ans.push_back(node->data);
             }
             if(node!=NULL)
             {
                 q.push(node->left);
                 q.push(node->right);
             }
         }
        return ans;
    }
    
    //Function to deserialize a list and construct the tree.
    Node * deSerialize(vector<int> &A)
    {
      int index = 0;
      if(A.size()==index)
      {
          return NULL;
      }
      int val = A[index++];
      if(val==-1)
      {
          return NULL;
      }
      Node* root = new Node(val);
      queue<Node*> q;
      q.push(root);
      while(!q.empty())
      {
           Node* node = q.front();
           q.pop();
           val = A[index++];
           if(val==-1)
           {
               node->left=NULL;
           }
           else
           {
               Node* temp1 = new Node(val);
               node->left= temp1;
               q.push(temp1);
           }
           val = A[index++];
           if(val==-1)
           {
               node->right = NULL;
           }
           else
           {
                Node* temp2 = new Node(val);
               node->right= temp2;
               q.push(temp2);
           }
      }
      return root;
       
    }

};

//{ Driver Code Starts.

void inorder(Node *root) {
    if (root == NULL)
        return;
    inorder(root->left);
    cout << root->data << "" "";
    inorder(root->right);
}

void _deleteTree(Node* node)  
{  
    if (node == NULL) return;  
  
    /* first delete both subtrees */
    _deleteTree(node->left);  
    _deleteTree(node->right);  
  
    /* then delete the node */
    //cout << ""Deleting node: "" << node->data << endl;  
    delete node;  
}  
  
/* Deletes a tree and sets the root as NULL */
void deleteTree(Node** node_ref)  
{  
    _deleteTree(*node_ref);  
    *node_ref = NULL;  
}  

int main() {
    int tc;
    scanf(""%d "", &tc);
    while (tc--) {
        string treeString;
        getline(cin, treeString);
        Node *root = buildTree(treeString);
        
        Solution serial, deserial;
        vector<int> A = serial.serialize(root);
        deleteTree(&root);
        Node *getRoot = deserial.deSerialize(A);
        inorder(getRoot);
        cout << ""\n"";

    }


    return 0;
}
// } Driver Code Ends"
DPXdGgL1,Mounting VirtualBox vdi,Tritonio,Bash,Friday 20th of October 2023 05:33:07 AM CDT,"sudo mkdir -p /mnt/vdi/expanded
sudo vboximg-mount -i <path-to-vdi> -o allow_other /mnt/vdi/expanded
mkdir /mnt/vdi/vol1
sudo mount /mnt/vdi/expanded/vol1 /mnt/vdi/vol1

cd /mnt
sudo umount /mnt/vdi/vol1
sudo umount /mnt/vdi/expanded
rm -rf /mnt/vdi"
aEe99QdK,BD_LAB3_QUERY_CREARE_TABEL_DEPARTAMENTE,varli_ketanpl,SQL,Friday 20th of October 2023 05:17:09 AM CDT,"USE companydb;

CREATE TABLE Departamente(
	DepartamentID INT NOT NULL IDENTITY(1, 1) PRIMARY KEY,
	ManagerID INT,
	NumeDepartament VARCHAR(20) NOT NULL,
	CodDepartament VARCHAR(20) NOT NULL UNIQUE
);

ALTER TABLE Angajati
ADD CONSTRAINT DepartamentID
FOREIGN KEY (DepartamentID) REFERENCES Departamente(DepartamentID);"
