id,title,username,language,date,content
Lbh22xRf,Untitled,ruchej,Python,Monday 27th of November 2023 11:50:45 PM CDT,"# Запрос
curl -X 'PATCH' \
  'http://localhost/api/account/2/' \
  -H 'accept: application/json' \
  -H 'Authorization: Bearer e403ffeec98445744cf53abeb467ce4916426' \
  -H 'Content-Type: application/json' \
  -H 'X-CSRFTOKEN: 6zgveF4BNZXgWcGJkTLNahjH4qItJTvrzEynu9LPKCIOpTjZWckEB4WDHZxMG' \
  -d '{
  ""container_platform"": 10
}'

# model.py
class PersonalAccount(LockableModel, CommentsMixin, TelephoneMixin):
    """""" Лицевой счет
        Подробнее о механизме блокировки:
            - Как это работает https://github.com/rparent/django-lock-tokens#how-it-works
            - REST API механизм https://github.com/rparent/django-lock-tokens#rest-api
    """"""
    address = models.ForeignKey(
        Address,
        on_delete=models.CASCADE,
        verbose_name='Адрес'
    )
    account_number = models.CharField(
        '№ Лицевого счета',
        max_length=255
    )
    contract_name = models.CharField(
        '№ Заключенного контракта',
        blank=True, null=True,
        max_length=255
    )
    contract_id = models.IntegerField(
        'ID контракта',
        blank=True, null=True
    )
    oracle_ext_id = models.IntegerField(
        'ID в БД Оракл',
        unique=True
    )
    balance = models.ForeignKey(
        MonthBalance,
        on_delete=models.CASCADE,
        verbose_name='Баланс',
        related_name='account'
    )
    documents_package = models.ForeignKey(
        AccountPackage,
        on_delete=models.CASCADE,
        related_name='personal_acc',
        verbose_name='Пакет документов'
    )
    container_platform = models.ForeignKey(
        ContainerPlatform,
        blank=True,
        null=True,
        on_delete=models.CASCADE,
        verbose_name='Контейнерная площадка'
    )


# serializers.py
class PersonalAccauntSerializer(ModelSerializer):
    address = AddressSerializer(read_only=True)
    documents_package = AccountPackageSerializer()
    persons_accountowner_person = AccountOwnerSerializer(read_only=True, many=True)
    persons_fractionowner_person = FractionOwnerSerializer(read_only=True, many=True)
    persons_signedperson_person = SignedPersonSerializer(read_only=True, many=True)
    comments = CommentSerializer(many=True, read_only=True, required=False)
    telephones = TelephoneSerializer(many=True, read_only=True, required=False)
    flags = AccountFlagSerializer(many=True, read_only=True)

    class Meta:
        model = PersonalAccount
        fields = (
            ""id"",
            ""address"",
            ""account_number"",
            ""oracle_ext_id"",
            ""contract_name"",
            ""contract_id"",
            ""balance"",
            ""documents_package"",
            ""comments"",
            ""telephones"",
            ""persons_accountowner_person"",
            ""persons_fractionowner_person"",
            ""persons_signedperson_person"",
            ""flags"",
            ""container_platform"",
        )
        read_only_fields = [
            ""id"",
            ""address"",
            ""account_number"",
            ""oracle_ext_id"",
            ""contract_name"",
            ""contract_id"",
            ""balance"",
            ""comments"",
            ""telephones"",
            ""documents_package"",
            ""persons_accountowner_person"",
            ""persons_fractionowner_person"",
            ""persons_signedperson_person"",
            ""flags"",
        ]
        depth = 3


# view.py
class PersonalAccountView(RetrieveUpdateAPIView):
    authentication_classes = [BearerAuthentication]
    permission_classes = [IsAuthenticated&DjangoModelPermissions]
    queryset = PersonalAccount.objects.all().prefetch_related(
        'address__household__area',
        'address__household__city',
        'address__household__street',
        'balance',
        'documents_package',
        'persons_accountowner_person',
        'persons_accountowner_person__packages',
        'persons_accountowner_person__packages__content_type',

        'persons_fractionowner_person',
        'persons_fractionowner_person__packages',
        'persons_fractionowner_person__packages__content_type',

        'persons_signedperson_person',
        'persons_signedperson_person__packages',
        'persons_signedperson_person__packages__content_type',

    )
    serializer_class = PersonalAccauntSerializer
"
pUx6e8ic,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Monday 27th of November 2023 11:35:17 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-358916"
rHdv37dv,СПРИНТ № 4 | Перегрузка операторов | Урок 2: Перегрузка операторов ввода-вывода,chevengur,C++,Monday 27th of November 2023 10:59:35 PM CDT,"#include <numeric>
#include <iostream>

using namespace std;

class Rational {
public:
    Rational() = default;

    Rational(int numerator)
        : numerator_(numerator)
        , denominator_(1) {
    }

    Rational(int numerator, int denominator)
        : numerator_(numerator)
        , denominator_(denominator) {
        Normalize();
    }

    int Numerator() const {
        return numerator_;
    }

    int Denominator() const {
        return denominator_;
    }

    friend std::ostream& operator<<(std::ostream& os, Rational& rat);
    friend std::istream& operator>>(std::istream& in, Rational& rat);
    

private:
    void Normalize() {
        if (denominator_ < 0) {
            numerator_ = -numerator_;
            denominator_ = -denominator_;
        }
        const int divisor = gcd(numerator_, denominator_);
        numerator_ /= divisor;
        denominator_ /= divisor;
    }
    
    int numerator_ = 0;
    int denominator_ = 1;
};

std::ostream& operator<<(std::ostream& os, Rational& rat){
    os << rat.Numerator() << ""/"" << rat.Denominator();
    return os;
}

std::istream& operator>>(std::istream& is, Rational& rat){
    char b;
    is >> rat.numerator_ >> b >> rat.denominator_;
    return is;
}

int main(){
    Rational rational;
    Rational rational1;

    std::cout << rational1;
}"
qxMHDmTc,FormItem.tsx,deedspool,TypeScript,Monday 27th of November 2023 10:46:38 PM CDT,"import { Form as AntdForm } from 'antd'
import type React from 'react'
import { useEffect } from 'react'
import type { Control, FieldPath, FieldValues } from 'react-hook-form'
import { useController } from 'react-hook-form'

type AntdFormItemProps = React.ComponentProps<typeof AntdForm.Item>

export type FormItemProps<TFieldValues extends FieldValues = FieldValues> = {
  children: React.ReactNode
  control: Control<TFieldValues>
  name: FieldPath<TFieldValues>
} & Omit<AntdFormItemProps, 'name' | 'normalize' | 'rules' | 'validateStatus'>

// TODO: Support `onBlur` `ref`
// FIXME: `Touched` does not change in devtool
export const FormItem = <TFieldValues extends FieldValues = FieldValues>({
  children,
  control,
  name,
  help,
  ...props
}: FormItemProps<TFieldValues>) => {
  const { field, fieldState } = useController({ name, control })
  const form = AntdForm.useFormInstance()

  const handleNormalize: AntdFormItemProps['normalize'] = (value) => {
    field.onChange(value)
    return value
  }

  // watch field value here
  useEffect(() => {
    form.setFieldValue(name, field.value)
  }, [form, name, field.value])

  return (
    <AntdForm.Item
      {...props}
      name={name as string}
      initialValue={field.value}
      normalize={handleNormalize}
      validateStatus={fieldState.invalid ? 'error' : undefined}
      help={fieldState.error?.message ?? help}
    >
      {children}
    </AntdForm.Item>
  )
}"
rZ3pyd1w,Ars Essence AutoCraft,MinoCraft72,Lua,Monday 27th of November 2023 10:42:22 PM CDT,"-- Script need BUTTON API by DIREWOLF20 !

--Chargement API
os.loadAPI(""button"")

--Variable Global
nbToCraft = 0
nbToPrint = ""0""
selectedCraft = """"
doingCrafting = false

local craftingTable = {}
craftingTable[""Water""] = {""minecraft:water_bucket"", ""minecraft:kelp"", ""minecraft:snow_block""}
craftingTable[""Manip""] = {""minecraft:stone_button"", ""minecraft:clock"", ""minecraft:redstone""}
craftingTable[""Fire""] = {""minecraft:flint_and_steel"", ""minecraft:gunpowder"", ""minecraft:torch""}
craftingTable[""Earth""] = {""minecraft:dirt"", ""minecraft:iron_ingot"", ""minecraft:wheat_seeds""}
craftingTable[""Air""] = {""minecraft:feather"", ""minecraft:arrow"", ""ars_nouveau:wilden_wing""}
craftingTable[""Conju""] = {""minecraft:book"", ""ars_nouveau:wilden_horn"", ""ars_nouveau:starbuncle_shards""}
craftingTable[""Abjur""] = {""minecraft:milk_bucket"", ""minecraft:fermented_spider_eye"", ""minecraft:sugar""}

local reactStore = ""ars_nouveau:repository_0""
local inOut = ""ars_nouveau:repository_1""
local imbuer = ""entangled:tile_0""
local pedest0 = ""entangled:tile_1""
local pedest1 = ""entangled:tile_2""
local pedest2 = ""entangled:tile_3""

local pedestTab = {pedest0, pedest1, pedest2}

local reactStoreW = peripheral.wrap(reactStore)
local imbuerW = peripheral.wrap(imbuer)
local inOutW = peripheral.wrap(inOut)

local pedest0W = peripheral.wrap(pedest0)
local pedest1W = peripheral.wrap(pedest1)
local pedest2W = peripheral.wrap(pedest2)

local pedestWTab = {pedest0W, pedest1W, pedest2W}
--math.floor(nbToCraft)
  
--Prog:
m = peripheral.wrap(""top"")
 
function fillTable()
 button.setTable(""Water"",selector,""Water"",2,8,2,4)
 button.setTable(""Manip"",selector,""Manip"",11,18,2,4)
 button.setTable(""Fire"",selector,""Fire"",21,28,2,4)
 button.setTable(""Earth"",selector,""Earth"",2,8,6,8)
 button.setTable(""Air"",selector,""Air"",11,18,6,8)
 button.setTable(""Conju"",selector,""Conju"",21,28,6,8)
 button.setTable(""Abjur"",selector,""Abjur"",11,18,10,12)
 
 button.setTable(""--"",subMultiple,"""",2,5,16,18)
 button.setTable(""-"",subSimple,"""",7,9,16,18)
 button.setTable(""+"",addSimple,"""",21,23,16,18)
 button.setTable(""++"",addMultiple,"""",25,28,16,18)
 
 button.setTable(nbToPrint,crafting,"""",11,18,16,18)
 button.screen()
end
 
function getClic()
 event,side,x,y = os.pullEvent(""monitor_touch"")
 button.checkxy(x,y)
end

function suckAll()
 print(""Empty Pedest"")
 for _, pedestW in pairs(pedestWTab) do
  if pedestW.getItemDetail(1) ~= nil then
   pedestW.pushItems(reactStore, 1)
  end
 end
end 
 
function nbConv()
 -- updating craft button
 if doingCrafting then
  button.toggleButton(nbToPrint)
 end
 nbToPrint = tostring(nbToCraft)
 -- updating selected craft
 if selectedCraft ~= """" then
  button.toggleButton(selectedCraft)
 end
 button.clearTable()
 fillTable()
 if selectedCraft ~= """" then
  button.toggleButton(selectedCraft)
 end
 -- updating the craft if craft there is
 if doingCrafting then
  button.toggleButton(nbToPrint)
 end
 
 button.screen()
end

function crafting()
 print(""craft"")
 button.toggleButton(nbToPrint)
 -- empty imbueur in case
 if imbuerW.getItemDetail(1) ~= nil then
  imbuerW.pushItems(inOut,1)
 end
 
 doingCrafting = true
 
 --keeping the name of the input
 local craftInput = ""ars_nouveau:source_gem""
 
 --making gems
 while doingCrafting and nbToCraft ~= 0 do
  --cheking for the slot of gems
  local found = false
  local list = inOutW.list()
  local slot = 1
  while not found and slot <= #list do
   if list[slot][""name""] == craftInput then
    print(""item found"")
    found = true
   else
    slot = slot + 1
   end
  end
  -- making sure to have a gem
  if not found then
   print(""no catalyser found"")
   doingCrafting = false
   nbToCraft = nbToCraft + 1 --compense le -1 qui n'a pas lieux dans ce casd
  else
   -- puting gem in imbuer
   print(""putting the item"")
   print(inOutW.getItemDetail(slot)[""name""])
   inOutW.pushItems(imbuer, slot)
  end
  while doingCrafting and imbuerW.getItemDetail(1)[""name""] == craftInput do
   print(""checking for craft"")
   -- waiting for craft or cancel
   os.startTimer(3)
   local event = os.pullEvent()
   if event ~= ""timer"" then
    -- stoping  craft
    print(""crafting have been stoped"")
    doingCrafting = false
    os.reboot()
   end
  end
  imbuerW.pushItems(inOut, 1)
  nbToCraft = nbToCraft - 1
  nbConv()
 end
 print(""end crafting"")
 doingCrafting = false
 button.toggleButton(nbToPrint)
end

function addSimple()
 print(""+"")
 button.flash(""+"")
 nbToCraft = nbToCraft + 1
 nbConv()
end

function addMultiple()
 print(""++"")
 button.flash(""++"")
 nbToCraft = nbToCraft + 5
 nbConv()
end

function selector(input)
 -- Affichage
 print(input)
 if selectedCraft == input then
  button.toggleButton(selectedCraft)
  selectedCraft = """"
  suckAll()
 else
  if selectedCraft ~= """" then
   button.toggleButton(selectedCraft)
  end
  selectedCraft = input
  button.toggleButton(selectedCraft)
  -- Item Move
  suckAll()
 
  local listItem = reactStoreW.list()
  local found = false
 
  for number, item in pairs(craftingTable[selectedCraft]) do
   found = false
   for slot, stored in ipairs(listItem) do
    if stored[""name""] == item then
     reactStoreW.pushItems(pedestTab[number], slot)
     print(""pushing ""..item)
     found = true
    end
   end
   if not found then
    print(""item ""..item.."" hasn't been found"")
   end
  end
 end 
end
 
function subSimple()
 print(""-"")
 button.flash(""-"")
 if nbToCraft >= 1 then
  nbToCraft = nbToCraft - 1
 end
 nbConv()
end

function subMultiple()
 print(""--"")
 button.flash(""--"")
 if nbToCraft >= 5 then
  nbToCraft = nbToCraft - 5
 else
  nbToCraft = 0
 end
 nbConv()
end

--Prog actif:
if imbuerW.getItemDetail(1) ~= nil then
 imbuerW.pushItems(inOut, 1)
end
button.clearTable()
fillTable()
button.heading(""Essence Crafting"")
--button.label(1,4,""Tutoriel"")
 
while true do
 getClic()
end
"
LQuV75k5,Button API 1.20+,MinoCraft72,Lua,Monday 27th of November 2023 10:41:00 PM CDT,"--API BUTTON by DIREWOLF20
 
--Config: (All Users)
 
 --Wrap:
 monitorSide = ""top"" -- Cote du moniteur
 
 --Custom:
 textColor = colors.white -- Couleur du text
 backColor = colors.black -- Couleur du fond d'ecran
 colorButtonOn = colors.lime -- Couleur Bouton On
 colorButtonOff = colors.red -- Couleur Bouton Off
 flashSleep = 1 -- Duree du flash
 
--Prog: (Only User Expert)
 
local mon = peripheral.wrap(monitorSide)
mon.setTextScale(1)
mon.setTextColor(textColor)
local button={}
mon.setBackgroundColor(backColor)
 
function clearTable()
   button = {}
   mon.clear()
end
               
function setTable(name, func, param, xmin, xmax, ymin, ymax)
   button[name] = {}
   button[name][""func""] = func
   button[name][""active""] = false
   button[name][""param""] = param
   button[name][""xmin""] = xmin
   button[name][""ymin""] = ymin
   button[name][""xmax""] = xmax
   button[name][""ymax""] = ymax
end
 
--function funcName()
  -- print(""You clicked buttonText"")
--end
       
function fillTable()
   setTable(""ButtonText"", funcName, 5, 25, 4, 8)
end    
 
function fill(text, color, bData)
   mon.setBackgroundColor(color)
   local yspot = math.floor((bData[""ymin""] + bData[""ymax""])/2)
   local xspot = math.floor((bData[""xmax""] - bData[""xmin""] - string.len(text)) /2) +1
   for j = bData[""ymin""], bData[""ymax""] do
      mon.setCursorPos(bData[""xmin""], j)
      if j == yspot then
         for k = 0, bData[""xmax""] - bData[""xmin""] - string.len(text) +1 do
            if k == xspot then
               mon.write(text)
            else
               mon.write("" "")
            end
         end
      else
         for i = bData[""xmin""], bData[""xmax""] do
            mon.write("" "")
         end
      end
   end
   mon.setBackgroundColor(colors.black)
end
     
function screen()
   local currColor
   for name,data in pairs(button) do
      local on = data[""active""]
      if on == true then currColor = colorButtonOn else currColor = colorButtonOff end
      fill(name, currColor, data)
   end
end
 
function toggleButton(name)
   button[name][""active""] = not button[name][""active""]
   screen()
end    
 
function flash(name)
   toggleButton(name)
   screen()
   sleep(flashSleep)
   toggleButton(name)
   screen()
end
                                             
function checkxy(x, y)
   for name, data in pairs(button) do
      if y>=data[""ymin""] and  y <= data[""ymax""] then
         if x>=data[""xmin""] and x<= data[""xmax""] then
            if data[""param""] == """" then
              data[""func""]()
            else
              data[""func""](data[""param""])
            end
            return true
            --data[""active""] = not data[""active""]
            --print(name)
         end
      end
   end
   return false
end
     
function heading(text)
   w, h = mon.getSize()
   mon.setCursorPos((w-string.len(text))/2+1, 1)
   mon.write(text)
end
     
function label(w, h, text)
   mon.setCursorPos(w, h)
   mon.write(text)
end
"
9eQGMi5e,Timer,Mryeetmemes,Lua,Monday 27th of November 2023 10:34:23 PM CDT,"local Timer = {}
Timer.__index = Timer

function Timer.new()
	local self = setmetatable({}, Timer)

	self._finishedEvent = Instance.new(""BindableEvent"")
	self.finished = self._finishedEvent.Event
	
	self._running = false
	self._startTime = nil
	self._duration = nil
	
	return self
end

function Timer:start(duration)
	if not self._running then
		local timerThread = coroutine.wrap(function()
			self._running = true
			self._duration = duration
			self._startTime = tick()
			while self._running and tick() - self._startTime < duration do
				wait()
			end
			local completed = self._running
			self._running = false
			self._startTime = nil
			self._duration = nil
			self._finishedEvent:Fire(completed)
		end)
		timerThread()
	else
		warn(""Timer could not start again as it is already running"")
	end
end

function Timer:getTimeLeft()
	if self._running then
		local now = tick()
		local timeLeft = self._startTime + self._duration - now
		if timeLeft < 0 then
			timeLeft = 0
		end
		return timeLeft
	else
		warn(""Could not get remaining time; timer is not running"")
	end
end

function Timer:isRunning()
	return self._running
end

function Timer:stop()
	if self and self._running then
		self._running = false
	end
end

return Timer"
EBpc4fAr,rust tide file upload,aircampro,Rust,Monday 27th of November 2023 09:45:07 PM CDT,"// Rust file server (Linux)
// In this example you can upload and download files make a log of last download and view it
// also you can invoke system commands and print the results as HTML
//
// ===== Cargo.toml =====
// [dependencies]
// tide = ""0.16.0""
// async-std = { version = ""1.6.0"", features = [""attributes""] }
// serde = { version = ""1.0"", features = [""derive""] }
// tempfile = ""3.5.0""
// csv = ""1.1""
// chrono = { version = ""0.4"", features = [""serde""] }
//
use std::io::Error as IoError;
use std::path::Path;
use std::sync::Arc;

use async_std::{fs::OpenOptions, io};
use tempfile::TempDir;
use tide::prelude::*;
use tide::{Body, Request, Response, StatusCode, Redirect};

use std::{env};
use std::fs::File;
use std::path::PathBuf;
use csv::Writer;

use chrono::{Utc, Local, DateTime, Date};

use std::process::Command;

#[derive(Clone)]
struct TempDirState {
    tempdir: Arc<TempDir>,
}

impl TempDirState {
    fn try_new() -> Result<Self, IoError> {
        Ok(Self {
            tempdir: Arc::new(tempfile::tempdir()?),
        })
    }

    fn path(&self) -> &Path {
        self.tempdir.path()
    }
}

#[async_std::main]
async fn main() -> Result<(), IoError> {
   
    let mut app = tide::with_state(TempDirState::try_new()?);
    app.with(tide::log::LogMiddleware::new());


    app.at("":file"")
        // $ curl -T ./a.txt localhost:8080 # this writes the file to a temp directory
        //
        .put(|req: Request<TempDirState>| async move {
            let path = req.param(""file"")?;
            let p = req.param(""file"").unwrap().to_string();
            let fs_path = req.state().path().join(path);

            let file = OpenOptions::new()
                .create(true)
                .write(true)
                .open(&fs_path)
                .await?;

            let bytes_written = io::copy(req, file).await?;
            println!(""file written bytes {}"", bytes_written);
             let export_folder = env::var(""EXPORT_FOLDER"").map_err(|_| {
                 io::Error::new(io::ErrorKind::NotFound, ""set env variable EXPORT_FOLDER to export path"")
             })?;

             // write to a csv the file and time we downloaded it
             let file_path = PathBuf::from(export_folder).join(""input.csv"");
             
             let utc_datetime: DateTime<Utc> = Utc::now();
             println!(""{}"", utc_datetime); 

			 let file = File::create(&file_path)?;
             let mut writer = Writer::from_writer(file);
             let f_desc = ""file uploaded was "".to_string();
             let text = Utc::now().format(""%Y-%m-%d %H:%M:%S:%Z"").to_string();
             let records = vec![
                 vec![&f_desc, &p, &text],
             ];
             for record in records {
                    writer.write_record(record)?;
             }  
             writer.flush()?;
             
            Ok(json!({ ""bytes"": bytes_written }))
        })
        // $ curl localhost:8080/a.txt # this reads the file from the same temp directory and logs it to a file
        //
        .get(|req: Request<TempDirState>| async move {
             let path = req.param(""file"")?;
             let p = req.param(""file"").unwrap().to_string();
             let fs_path = req.state().path().join(path);
             
             let export_folder = env::var(""EXPORT_FOLDER"").map_err(|_| {
                 io::Error::new(io::ErrorKind::NotFound, ""set env variable EXPORT_FOLDER to export path"")
             })?;

             // write to a csv the file and time we downloaded it
             let file_path = PathBuf::from(export_folder).join(""output.csv"");
             
             let utc_datetime: DateTime<Utc> = Utc::now();
             println!(""{}"", utc_datetime); 
             
             if let Ok(body) = Body::from_file(fs_path).await {
			 let file = File::create(&file_path)?;
             let mut writer = Writer::from_writer(file);
             let f_desc = ""file downloaded was "".to_string();
             let text = Utc::now().format(""%Y-%m-%d %H:%M:%S:%Z"").to_string();
             let records = vec![
                 vec![&f_desc, &p, &text],
             ];
             for record in records {
                    writer.write_record(record)?;
             }  
             writer.flush()?;

             Ok(body.into())
            } else {
                Ok(Response::new(StatusCode::NotFound))
            }
        });
        // curl localhost:8080/showlastdownload
        //       
        app.at(""/showlastdownload"").get(|_req: Request<TempDirState>| async move {
             let export_folder = env::var(""EXPORT_FOLDER"").map_err(|_| {
                 io::Error::new(io::ErrorKind::NotFound, ""set env variable EXPORT_FOLDER to export path"")
             })?;

             // write to a csv the file and time we downloaded it
             let file_path = PathBuf::from(export_folder).join(""output.csv"");
             let output = Command::new(""/bin/cat"")
                     //.arg(""/home/mark/enfile/output.csv"") <---- if you dont want to use the env variable
                     .arg(&file_path)
                     .output()
                     .expect(""failed to execute process"");
            println!(""status: {}"", output.status);
            println!(""stdout: {}"", String::from_utf8_lossy(&output.stdout));
            println!(""stderr: {}"", String::from_utf8_lossy(&output.stderr));
            Ok(tide::Response::builder(200)
                 .body(format!(""<html><h2>Download csv :-, {}!</h2></html>"",
                  String::from_utf8_lossy(&output.stdout)))
                 .header(""Server"", ""tide"")
                 .content_type(tide::http::mime::HTML)
                 .build())
        });   
        // curl localhost:8080/showlastupload
        //  
        app.at(""/showlastupload"").get(|_req: Request<TempDirState>| async move {
             let export_folder = env::var(""EXPORT_FOLDER"").map_err(|_| {
                 io::Error::new(io::ErrorKind::NotFound, ""set env variable EXPORT_FOLDER to export path"")
             })?;

             // write to a csv the file and time we downloaded it
             let file_path = PathBuf::from(export_folder).join(""input.csv"");
             let output = Command::new(""/bin/cat"")
                     //.arg(""/home/mark/enfile/input.csv"") <---- if you dont want to use the env variable
                     .arg(&file_path)
                     .output()
                     .expect(""failed to execute process"");
            println!(""status: {}"", output.status);
            println!(""stdout: {}"", String::from_utf8_lossy(&output.stdout));
            println!(""stderr: {}"", String::from_utf8_lossy(&output.stderr));
            Ok(tide::Response::builder(200)
                 .body(format!(""<html><h2>Upload csv :-, {}!</h2></html>"",
                  String::from_utf8_lossy(&output.stdout)))
                 .header(""Server"", ""tide"")
                 .content_type(tide::http::mime::HTML)
                 .build())
        }); 
        // shows the contents of the EXPORT_FOLDER variable
        // e.g. EXPORT_FOLDER=/usr/nik/myfles; export EXPORT_FOLDER
        // curl localhost:8080/showdirectory
        //   
        app.at(""/showdirectory"").get(|_req: Request<TempDirState>| async move {
			//let dname = req.param(""dir"").unwrap().to_string();
             let export_folder = env::var(""EXPORT_FOLDER"").map_err(|_| {
                 io::Error::new(io::ErrorKind::NotFound, ""set env variable EXPORT_FOLDER to export path"")
             })?;
            let output = Command::new(""/bin/ls"")
               .args(&[""-l"", ""-a"", &export_folder])
               .output()
               .expect(""failed to start `ls`"");
            println!(""status: {}"", output.status);
            println!(""stdout: {}"", String::from_utf8_lossy(&output.stdout));
            println!(""stderr: {}"", String::from_utf8_lossy(&output.stderr));
            Ok(tide::Response::builder(200)
                 .body(format!(""<html><h2>Download csv :-, {}!</h2></html>"",
                  String::from_utf8_lossy(&output.stdout)))
                 .header(""Server"", ""tide"")
                 .content_type(tide::http::mime::HTML)
                 .build())
        }); 
        // curl localhost:8080/rd
        // 
        app.at(""/rd"")
           .get(Redirect::new(""https://www.youtube.com/watch?v=GGk_KrRyXLo""));
    app.listen(""127.0.0.1:8080"").await?;
    Ok(())
}
"
9fSnWjR6,Untitled,ma39isy,Oracle 8,Monday 27th of November 2023 09:19:26 PM CDT,"SELECT
	STUDENTID,
	TO_CHAR( COUNCILDATE, 'dd MON, yyyy' ) COUNCILDATE,
	SUBJECTCODE || ' ' || SUBJECTNAME SUBJECTCODE,
	OPERATION,
	NOTE,
	NVL( FULLNAME, UPDATEBY ) ACTOR,
	TO_CHAR( UPDATETIME, 'dd MON, yyyy hh24:mi:ss' ) UPDATETIME,
	( SCHOOLYEAR || '/' || SEMESTER ) SCHOOLPERIODE,
	( LASTINDEX || ' To ' || INDEXPOINT ) INDEXCHANGE,
	CHANGEID,
	DECODE( APPROVALSTATUS, 'Y', 'Yes', 'N', 'No', '' ) || ' (' || TO_CHAR( APPROVALDATE, 'dd MON, yyyy hh24:mi:ss' ) || ')' STATUS2,
	UPDATEBY,
	STUDYPROGRAMNAME,
	DECODE( APPROVALSTATUSWADEK, 'Y', 'Yes', 'N', 'No', '' ) || ' (' || TO_CHAR( APPROVALDATEWADEK, 'dd MON, yyyy hh24:mi:ss' ) || ')' STATUS,
	APPROVALSTATUS,
	APPROVALBYWADEK,
	COMPLETECOURSEPOINTCHANGE.ACTIVESTATUS,
	EVIDANCEDESC,
	EVIDANCEURL 
FROM
	COMPLETECOURSEPOINTCHANGE
	JOIN SUBJECTS USING ( SUBJECTID, SUBJECTCODE )
	JOIN ( SELECT STUDENTID, STUDYPROGRAMNAME FROM MASTERDATA.STUDENT JOIN MASTERDATA.STUDYPROGRAM USING ( STUDYPROGRAMID ) WHERE 1 = 1 ) USING ( STUDENTID )
	LEFT JOIN ( SELECT DISTINCT EMPLOYEEID, FULLNAME FROM MASTERDATA.EMPLOYEEMASTER ) fusers ON ( fusers.EMPLOYEEID = UPDATEBY ) 
WHERE
	1 = 1 
	AND APPROVALSTATUS IS NULL 
	AND APPROVALSTATUSWADEK IS NULL 
ORDER BY
	UPDATETIME DESC"
AbfQvFzB,snowy place,marcusa3000,Lua,Monday 27th of November 2023 09:03:00 PM CDT,"{
	Tools = ordered() {
		Loader1 = Loader {
			Clips = {
				Clip {
					ID = ""Clip1"",
					Filename = ""snowyplace.png"",
					FormatID = ""PNGFormat"",
					StartFrame = -1,
					LengthSetManually = true,
					TrimIn = 0,
					TrimOut = 0,
					ExtendFirst = 0,
					ExtendLast = 0,
					Loop = 0,
					AspectMode = 0,
					Depth = 0,
					TimeCode = 0,
					GlobalStart = 0,
					GlobalEnd = 0
				}
			},
			CtrlWZoom = false,
			Inputs = {
				[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
				[""Clip1.PNGFormat.PostMultiply""] = Input { Value = 1, },
			},
			ViewInfo = OperatorInfo { Pos = { 495, -742.5 } },
		},
		pRender1 = pRender {
			Inputs = {
				_MotionBlurWarning = Input { Disabled = true, },
				GlobalOut = Input { Value = 493, },
				Width = Input { Value = 1080, },
				Height = Input { Value = 1080, },
				UseFrameFormatSettings = Input { Value = 1, },
				[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
				OutputMode = Input { Disabled = true, },
				PreGenerateFrames = Input { Value = 300, },
				[""MaterialID.MaterialID""] = Input { Value = 1, },
				[""ObjectID.ObjectID""] = Input { Value = 1, },
				Input = Input {
					SourceOp = ""pTurbulence1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { 220, -709.5 } },
		},
		pTurbulence1 = pTurbulence {
			ID = 224,
			Inputs = {
				ZStrength = Input { Value = 0.199, },
				StrengthOverLifeLUT = Input {
					SourceOp = ""pTurbulence1StrengthOverLifeLUT"",
					Source = ""Value"",
				},
				Input = Input {
					SourceOp = ""pFriction1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { 110, -709.5 } },
		},
		pTurbulence1StrengthOverLifeLUT = LUTBezier {
			KeyColorSplines = {
				[0] = {
					[0] = { 0.5, RH = { 0.333333333333333, 0.5 }, Flags = { Linear = true } },
					[1] = { 0.5, LH = { 0.666666666666667, 0.5 }, Flags = { Linear = true } }
				}
			},
			SplineColor = { Red = 192, Green = 128, Blue = 64 },
			CtrlWZoom = false,
		},
		pFriction1 = pFriction {
			ID = 228,
			Inputs = {
				VelocityFriction = Input { Value = 0.025, },
				Input = Input {
					SourceOp = ""pDirectionalForce1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -55, -709.5 } },
		},
		Camera3D1 = Camera3D {
			Inputs = {
				[""Transform3DOp.Translate.Y""] = Input { Value = 2.51142932981544, },
				[""Transform3DOp.Translate.Z""] = Input { Value = 4.10471004014479, },
				[""Transform3DOp.UseTarget""] = Input { Value = 1, },
				AoV = Input { Value = 19.2642683071402, },
				[""Stereo.Mode""] = Input { Value = FuID { ""OffAxis"" }, },
				FilmGate = Input { Value = FuID { ""BMD_URSA_4K_16x9"" }, },
				ApertureW = Input { Value = 0.831496062992126, },
				ApertureH = Input { Value = 0.467716535433071, },
				[""SurfacePlaneInputs.ObjectID.ObjectID""] = Input { Value = 2, },
				ImageInput = Input {
					SourceOp = ""Loader1"",
					Source = ""Output"",
				},
				[""MtlStdInputs.MaterialID""] = Input { Value = 2, },
			},
			ViewInfo = OperatorInfo { Pos = { 495, -676.5 } },
		},
		pDirectionalForce1 = pDirectionalForce {
			ID = 227,
			Inputs = {
				Strength = Input { Value = 0.05, },
				DirectionZ = Input { Value = 130.4, },
				Input = Input {
					SourceOp = ""pEmitter1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -165, -709.5 } },
		},
		Merge3D1 = Merge3D {
			Inputs = {
				SceneInput1 = Input {
					SourceOp = ""pRender1"",
					Source = ""Output"",
				},
				SceneInput2 = Input {
					SourceOp = ""Camera3D1"",
					Source = ""Output"",
				},
				SceneInput3 = Input {
					SourceOp = ""Shape3D1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { 385, -643.5 } },
		},
		pEmitter1 = pEmitter {
			ID = 216,
			Inputs = {
				[""ParticleStyleLine.Fade""] = Input { Value = 0.008, },
				Lifespan = Input { Value = 800, },
				VelocityControls = Input { Value = 1, },
				Angle = Input { Value = -90, },
				Style = Input { Value = FuID { ""ParticleStyleBlob"" }, },
				Region = Input { Value = FuID { ""CubeRgn"" }, },
				[""ParticleStyle.ColorControls""] = Input { Value = 1, },
				[""ParticleStyle.Red""] = Input { Value = 0.329411774873734, },
				[""ParticleStyle.Green""] = Input { Value = 0.474509805440903, },
				[""ParticleStyle.Blue""] = Input { Value = 0.549019634723663, },
				[""ParticleStyle.SizeControls""] = Input { Value = 1, },
				[""ParticleStyle.Size""] = Input { Value = 0.0242, },
				[""ParticleStyle.SizeOverLife""] = Input {
					SourceOp = ""pEmitter1SizeOverLife"",
					Source = ""Value"",
				},
				[""ParticleStyle.BlurOverLife""] = Input {
					SourceOp = ""pEmitter1BlurOverLife2D"",
					Source = ""Value"",
				},
				[""CubeRgn.Width""] = Input { Value = 7, },
				[""CubeRgn.Height""] = Input { Value = 2, },
				[""CubeRgn.Depth""] = Input { Value = 6.8, },
				[""CubeRgn.Translate.Y""] = Input { Value = 4.29774809614466, },
				[""CubeRgn.Translate.Z""] = Input { Value = -2.43468536803838, },
			},
			ViewInfo = OperatorInfo { Pos = { -275, -709.5 } },
		},
		pEmitter1SizeOverLife = LUTBezier {
			KeyColorSplines = {
				[0] = {
					[0] = { 0.5, RH = { 0.333333333333333, 0.5 }, Flags = { Linear = true } },
					[1] = { 0.5, LH = { 0.666666666666667, 0.5 }, Flags = { Linear = true } }
				}
			},
			SplineColor = { Red = 192, Green = 128, Blue = 64 },
			CtrlWZoom = false,
		},
		pEmitter1BlurOverLife2D = LUTBezier {
			KeyColorSplines = {
				[0] = {
					[0] = { 0.5, RH = { 0.333333333333333, 0.5 }, Flags = { Linear = true } },
					[1] = { 0.5, LH = { 0.666666666666667, 0.5 }, Flags = { Linear = true } }
				}
			},
			SplineColor = { Red = 192, Green = 128, Blue = 64 },
			CtrlWZoom = false,
		},
		Shape3D1 = Shape3D {
			Inputs = {
				[""Transform3DOp.Translate.Y""] = Input { Value = 3.28555209131497, },
				[""Transform3DOp.Rotate.X""] = Input { Value = -90, },
				[""Transform3DOp.Scale.X""] = Input { Value = 10, },
				[""MtlStdInputs.Diffuse.Opacity""] = Input { Value = 0.378, },
				[""MtlStdInputs.MaterialID""] = Input { Value = 3, },
				[""SurfacePlaneInputs.ObjectID.ObjectID""] = Input { Value = 3, }
			},
			ViewInfo = OperatorInfo { Pos = { 220, -610.5 } },
		},
		Renderer3D2 = Renderer3D {
			CustomData = { ToolVersion = 2, },
			Inputs = {
				GlobalOut = Input { Value = 493, },
				Width = Input { Value = 1004, },
				Height = Input { Value = 538, },
				Depth = Input { Value = 1, },
				[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
				SceneInput = Input {
					SourceOp = ""Merge3D1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { 495, -610.5 } },
		}
	}
}"
f0kLfp3J,py css,unknown2004,CSS,Monday 27th of November 2023 07:46:00 PM CDT,"@import url(fontawesome-all.min.css);
@import url(""https://fonts.googleapis.com/css?family=Roboto:400,700"");
/*
	Eventually by HTML5 UP
	html5up.net | @ajlkn
	Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
*/
html, body, div, span, applet, object,
iframe, h1, h2, h3, h4, h5, h6, p, blockquote,
pre, a, abbr, acronym, address, big, cite,
code, del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var, b,
u, i, center, dl, dt, dd, ol, ul, li, fieldset,
form, label, legend, table, caption, tbody,
tfoot, thead, tr, th, td, article, aside,
canvas, details, embed, figure, figcaption,
footer, header, hgroup, menu, nav, output, ruby,
section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }
  blockquote:before, blockquote:after, q:before, q:after {
    content: '';
    content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

body {
  -webkit-text-size-adjust: none; }

mark {
  background-color: transparent;
  color: inherit; }

input::-moz-focus-inner {
  border: 0;
  padding: 0; }

input, select, textarea {
  -moz-appearance: none;
  -webkit-appearance: none;
  -ms-appearance: none;
  appearance: none; }

/* Basic */
@-ms-viewport {
  width: device-width; }

body {
  -ms-overflow-style: scrollbar; }

@media screen and (max-width: 480px) {
  html, body {
    min-width: 320px; } }

html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

html, body {
  height: 100%;
  overflow-x: hidden;
  width: 100%; }
  @media screen and (max-height: 640px) {
    html, body {
      height: auto;
      min-height: 100%; } }

body {
  display: -moz-flex;
  display: -webkit-flex;
  display: -ms-flex;
  display: flex;
  -moz-flex-direction: column;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -moz-justify-content: center;
  -webkit-justify-content: center;
  -ms-justify-content: center;
  justify-content: center;
  background-color: #000;
  padding: 6em 4em 4em 4em; }
  body.is-preload *, body.is-preload *:before, body.is-preload *:after {
    -moz-animation: none !important;
    -webkit-animation: none !important;
    -ms-animation: none !important;
    animation: none !important;
    -moz-transition: none !important;
    -webkit-transition: none !important;
    -ms-transition: none !important;
    transition: none !important; }
  body > * {
    position: relative;
    z-index: 2; }
  @media screen and (max-width: 1680px) {
    body {
      padding: 6em 3.5em 3.5em 3.5em; } }
  @media screen and (max-width: 736px) {
    body {
      padding: 5em 2em 2em 2em; } }
  @media screen and (max-width: 360px) {
    body {
      padding: 5em 1.25em 1.25em 1.25em; } }

/* BG */
#bg {
  -moz-transition: opacity 2s ease-in-out;
  -webkit-transition: opacity 2s ease-in-out;
  -ms-transition: opacity 2s ease-in-out;
  transition: opacity 2s ease-in-out;
  height: 100%;
  left: 0;
  opacity: 0.375;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 1; }
  #bg div {
    -moz-transition: opacity 3s ease;
    -webkit-transition: opacity 3s ease;
    -ms-transition: opacity 3s ease;
    transition: opacity 3s ease;
    background-size: cover;
    height: 100%;
    left: 0;
    opacity: 0;
    position: absolute;
    top: 0;
    visibility: hidden;
    width: 150%; }
    #bg div.visible {
      -moz-animation: bg 45s linear infinite;
      -webkit-animation: bg 45s linear infinite;
      -ms-animation: bg 45s linear infinite;
      animation: bg 45s linear infinite;
      opacity: 1;
      visibility: visible;
      z-index: 1; }
      #bg div.visible.top {
        z-index: 2; }
      @media screen and (max-width: 1280px) {
        #bg div.visible {
          -moz-animation: bg 29.25s linear infinite;
          -webkit-animation: bg 29.25s linear infinite;
          -ms-animation: bg 29.25s linear infinite;
          animation: bg 29.25s linear infinite; } }
      @media screen and (max-width: 736px) {
        #bg div.visible {
          -moz-animation: bg 18s linear infinite;
          -webkit-animation: bg 18s linear infinite;
          -ms-animation: bg 18s linear infinite;
          animation: bg 18s linear infinite; } }
    #bg div:only-child {
      -moz-animation-direction: alternate !important;
      -webkit-animation-direction: alternate !important;
      -ms-animation-direction: alternate !important;
      animation-direction: alternate !important; }
  body.is-preload #bg {
    opacity: 0; }

@-moz-keyframes bg {
  0% {
    -moz-transform: translateX(0);
    -webkit-transform: translateX(0);
    -ms-transform: translateX(0);
    transform: translateX(0); }
  100% {
    -moz-transform: translateX(-25%);
    -webkit-transform: translateX(-25%);
    -ms-transform: translateX(-25%);
    transform: translateX(-25%); } }

@-webkit-keyframes bg {
  0% {
    -moz-transform: translateX(0);
    -webkit-transform: translateX(0);
    -ms-transform: translateX(0);
    transform: translateX(0); }
  100% {
    -moz-transform: translateX(-25%);
    -webkit-transform: translateX(-25%);
    -ms-transform: translateX(-25%);
    transform: translateX(-25%); } }

@-ms-keyframes bg {
  0% {
    -moz-transform: translateX(0);
    -webkit-transform: translateX(0);
    -ms-transform: translateX(0);
    transform: translateX(0); }
  100% {
    -moz-transform: translateX(-25%);
    -webkit-transform: translateX(-25%);
    -ms-transform: translateX(-25%);
    transform: translateX(-25%); } }

@keyframes bg {
  0% {
    -moz-transform: translateX(0);
    -webkit-transform: translateX(0);
    -ms-transform: translateX(0);
    transform: translateX(0); }
  100% {
    -moz-transform: translateX(-25%);
    -webkit-transform: translateX(-25%);
    -ms-transform: translateX(-25%);
    transform: translateX(-25%); } }

/* Type */
body, input, select, textarea {
  color: rgba(255, 255, 255, 0.75);
  font-family: ""Roboto"", sans-serif;
  font-size: 16pt;
  font-weight: 400;
  letter-spacing: -0.01em;
  line-height: 1.65em; }
  @media screen and (max-width: 1680px) {
    body, input, select, textarea {
      font-size: 12pt; } }
  @media screen and (max-width: 1280px) {
    body, input, select, textarea {
      font-size: 11pt; } }
  @media screen and (max-width: 980px) {
    body, input, select, textarea {
      font-size: 12pt; } }
  @media screen and (max-width: 736px) {
    body, input, select, textarea {
      font-size: 12pt; } }
  @media screen and (max-width: 480px) {
    body, input, select, textarea {
      font-size: 12pt; } }

a {
  -moz-transition: border-bottom-color 0.2s ease, color 0.2s ease;
  -webkit-transition: border-bottom-color 0.2s ease, color 0.2s ease;
  -ms-transition: border-bottom-color 0.2s ease, color 0.2s ease;
  transition: border-bottom-color 0.2s ease, color 0.2s ease;
  border-bottom: dotted 1px rgba(255, 255, 255, 0.25);
  color: #1cb495;
  text-decoration: none; }
  a:hover {
    border-bottom-color: transparent;
    color: #1cb495 !important;
    text-decoration: none; }

strong, b {
  color: #fff;
  font-weight: 700; }

em, i {
  font-style: italic; }

p {
  margin: 0 0 2em 0; }

h1, h2, h3, h4, h5, h6 {
  color: #fff;
  font-weight: 700;
  line-height: 1em;
  margin: 0 0 1em 0; }
  h1 a, h2 a, h3 a, h4 a, h5 a, h6 a {
    color: inherit;
    text-decoration: none; }

h1 {
  font-size: 2.5em;
  line-height: 1.25em; }

h2 {
  font-size: 1.75em;
  line-height: 1.5em; }

h3 {
  font-size: 1.35em;
  line-height: 1.5em; }

h4 {
  font-size: 1.1em;
  line-height: 1.5em; }

h5 {
  font-size: 0.9em;
  line-height: 1.5em; }

h6 {
  font-size: 0.7em;
  line-height: 1.5em; }

sub {
  font-size: 0.8em;
  position: relative;
  top: 0.5em; }

sup {
  font-size: 0.8em;
  position: relative;
  top: -0.5em; }

blockquote {
  border-left: solid 8px rgba(255, 255, 255, 0.35);
  font-style: italic;
  margin: 0 0 2em 0;
  padding: 0.5em 0 0.5em 2em; }

code {
  background: rgba(255, 255, 255, 0.125);
  border-radius: 6px;
  border: solid 2px rgba(255, 255, 255, 0.35);
  font-family: ""Courier New"", monospace;
  font-size: 0.9em;
  margin: 0 0.25em;
  padding: 0.25em 0.65em; }

pre {
  -webkit-overflow-scrolling: touch;
  font-family: ""Courier New"", monospace;
  font-size: 0.9em;
  margin: 0 0 2em 0; }
  pre code {
    display: block;
    line-height: 1.75em;
    padding: 1em 1.5em;
    overflow-x: auto; }

hr {
  border: 0;
  border-bottom: solid 2px rgba(255, 255, 255, 0.35);
  margin: 2em 0; }
  hr.major {
    margin: 3em 0; }

/* Section/Article */
section.special, article.special {
  text-align: center; }

header p {
  color: rgba(255, 255, 255, 0.5);
  position: relative;
  margin: 0 0 1.5em 0; }

header h2 + p {
  font-size: 1.25em;
  margin-top: -1em;
  line-height: 1.5em; }

header h3 + p {
  font-size: 1.1em;
  margin-top: -0.8em;
  line-height: 1.5em; }

header h4 + p,
header h5 + p,
header h6 + p {
  font-size: 0.9em;
  margin-top: -0.6em;
  line-height: 1.5em; }

@media screen and (max-width: 980px) {
  header br {
    display: none; } }

@media screen and (max-width: 736px) {
  header br {
    display: inline; } }

@media screen and (max-width: 480px) {
  header br {
    display: none; } }

/* Icon */
.icon {
  text-decoration: none;
  border-bottom: none;
  position: relative; }
  .icon:before {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    display: inline-block;
    font-style: normal;
    font-variant: normal;
    text-rendering: auto;
    line-height: 1;
    text-transform: none !important;
    font-family: 'Font Awesome 5 Free';
    font-weight: 400; }
  .icon > .label {
    display: none; }
  .icon:before {
    line-height: inherit; }
  .icon.solid:before {
    font-weight: 900; }
  .icon.brands:before {
    font-family: 'Font Awesome 5 Brands'; }

/* List */
ol {
  list-style: decimal;
  margin: 0 0 2em 0;
  padding-left: 1.25em; }
  ol li {
    padding-left: 0.25em; }

ul {
  list-style: disc;
  margin: 0 0 2em 0;
  padding-left: 1em; }
  ul li {
    padding-left: 0.5em; }

/* Icons */
ul.icons {
  cursor: default;
  list-style: none;
  padding-left: 0; }
  ul.icons li {
    display: inline-block;
    padding: 0 1em 0 0; }
    ul.icons li:last-child {
      padding-right: 0; }
    ul.icons li .icon:before {
      font-size: 1.25em; }
    ul.icons li a {
      color: inherit; }

/* Form */
form {
  margin: 0 0 2em 0; }
  form .message {
    text-decoration: none;
    -moz-transition: opacity 0.2s ease-in-out, -moz-transform 0.2s ease-in-out;
    -webkit-transition: opacity 0.2s ease-in-out, -webkit-transform 0.2s ease-in-out;
    -ms-transition: opacity 0.2s ease-in-out, -ms-transform 0.2s ease-in-out;
    transition: opacity 0.2s ease-in-out, transform 0.2s ease-in-out;
    -moz-transform: scale(1.05);
    -webkit-transform: scale(1.05);
    -ms-transform: scale(1.05);
    transform: scale(1.05);
    height: 2.75em;
    line-height: 2.75em;
    opacity: 0; }
    form .message:before {
      -moz-osx-font-smoothing: grayscale;
      -webkit-font-smoothing: antialiased;
      display: inline-block;
      font-style: normal;
      font-variant: normal;
      text-rendering: auto;
      line-height: 1;
      text-transform: none !important;
      font-family: 'Font Awesome 5 Free';
      font-weight: 900; }
    form .message:before {
      margin-right: 0.5em; }
    form .message.visible {
      -moz-transform: scale(1);
      -webkit-transform: scale(1);
      -ms-transform: scale(1);
      transform: scale(1);
      opacity: 1; }
    form .message.success {
      color: #1cb495; }
      form .message.success:before {
        content: '\f00c'; }
    form .message.failure {
      color: #ff2361; }
      form .message.failure:before {
        content: '\f119'; }

label {
  color: #fff;
  display: block;
  font-size: 0.9em;
  font-weight: 700;
  margin: 0 0 1em 0; }

@-moz-keyframes focus {
  0% {
    -moz-transform: scale(1);
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1); }
  50% {
    -moz-transform: scale(1.025);
    -webkit-transform: scale(1.025);
    -ms-transform: scale(1.025);
    transform: scale(1.025); }
  100% {
    -moz-transform: scale(1);
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1); } }

@-webkit-keyframes focus {
  0% {
    -moz-transform: scale(1);
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1); }
  50% {
    -moz-transform: scale(1.025);
    -webkit-transform: scale(1.025);
    -ms-transform: scale(1.025);
    transform: scale(1.025); }
  100% {
    -moz-transform: scale(1);
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1); } }

@-ms-keyframes focus {
  0% {
    -moz-transform: scale(1);
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1); }
  50% {
    -moz-transform: scale(1.025);
    -webkit-transform: scale(1.025);
    -ms-transform: scale(1.025);
    transform: scale(1.025); }
  100% {
    -moz-transform: scale(1);
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1); } }

@keyframes focus {
  0% {
    -moz-transform: scale(1);
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1); }
  50% {
    -moz-transform: scale(1.025);
    -webkit-transform: scale(1.025);
    -ms-transform: scale(1.025);
    transform: scale(1.025); }
  100% {
    -moz-transform: scale(1);
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1); } }

input[type=""text""],
input[type=""password""],
input[type=""email""],
select,
textarea {
  -moz-appearance: none;
  -webkit-appearance: none;
  -ms-appearance: none;
  appearance: none;
  -moz-transform: scale(1);
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
  -moz-transition: border-color 0.2s ease, background-color 0.2s ease;
  -webkit-transition: border-color 0.2s ease, background-color 0.2s ease;
  -ms-transition: border-color 0.2s ease, background-color 0.2s ease;
  transition: border-color 0.2s ease, background-color 0.2s ease;
  background-color: transparent;
  border-radius: 6px;
  border: none;
  border: solid 2px rgba(255, 255, 255, 0.35);
  color: inherit;
  display: block;
  outline: 0;
  padding: 0 1em;
  text-decoration: none;
  width: 100%; }
  input[type=""text""]:invalid,
  input[type=""password""]:invalid,
  input[type=""email""]:invalid,
  select:invalid,
  textarea:invalid {
    box-shadow: none; }
  input[type=""text""]:focus,
  input[type=""password""]:focus,
  input[type=""email""]:focus,
  select:focus,
  textarea:focus {
    -moz-animation: focus 0.1s;
    -webkit-animation: focus 0.1s;
    -ms-animation: focus 0.1s;
    animation: focus 0.1s;
    background-color: rgba(255, 255, 255, 0.125);
    border-color: #1cb495; }

select {
  background-image: url(""data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='40' height='40' preserveAspectRatio='none' viewBox='0 0 40 40'%3E%3Cpath d='M9.4,12.3l10.4,10.4l10.4-10.4c0.2-0.2,0.5-0.4,0.9-0.4c0.3,0,0.6,0.1,0.9,0.4l3.3,3.3c0.2,0.2,0.4,0.5,0.4,0.9 c0,0.4-0.1,0.6-0.4,0.9L20.7,31.9c-0.2,0.2-0.5,0.4-0.9,0.4c-0.3,0-0.6-0.1-0.9-0.4L4.3,17.3c-0.2-0.2-0.4-0.5-0.4-0.9 c0-0.4,0.1-0.6,0.4-0.9l3.3-3.3c0.2-0.2,0.5-0.4,0.9-0.4S9.1,12.1,9.4,12.3z' fill='rgba(255, 255, 255, 0.35)' /%3E%3C/svg%3E"");
  background-size: 1.25rem;
  background-repeat: no-repeat;
  background-position: calc(100% - 1rem) center;
  height: 2.75em;
  padding-right: 2.75em;
  text-overflow: ellipsis; }
  select option {
    color: #fff;
    background: #000; }
  select:focus::-ms-value {
    background-color: transparent; }
  select::-ms-expand {
    display: none; }

input[type=""text""],
input[type=""password""],
input[type=""email""],
select {
  height: 2.75em; }

textarea {
  padding: 0.75em 1em; }

input[type=""checkbox""],
input[type=""radio""] {
  -moz-appearance: none;
  -webkit-appearance: none;
  -ms-appearance: none;
  appearance: none;
  display: block;
  float: left;
  margin-right: -2em;
  opacity: 0;
  width: 1em;
  z-index: -1; }
  input[type=""checkbox""] + label,
  input[type=""radio""] + label {
    text-decoration: none;
    color: rgba(255, 255, 255, 0.75);
    cursor: pointer;
    display: inline-block;
    font-size: 1em;
    font-weight: 400;
    padding-left: 2.4em;
    padding-right: 0.75em;
    position: relative; }
    input[type=""checkbox""] + label:before,
    input[type=""radio""] + label:before {
      -moz-osx-font-smoothing: grayscale;
      -webkit-font-smoothing: antialiased;
      display: inline-block;
      font-style: normal;
      font-variant: normal;
      text-rendering: auto;
      line-height: 1;
      text-transform: none !important;
      font-family: 'Font Awesome 5 Free';
      font-weight: 900; }
    input[type=""checkbox""] + label:before,
    input[type=""radio""] + label:before {
      background: rgba(255, 255, 255, 0.125);
      border-radius: 6px;
      border: solid 2px rgba(255, 255, 255, 0.35);
      content: '';
      display: inline-block;
      font-size: 0.8em;
      height: 1.65em;
      left: 0;
      line-height: 1.65em;
      position: absolute;
      text-align: center;
      top: 0;
      width: 1.65em; }
  input[type=""checkbox""]:checked + label:before,
  input[type=""radio""]:checked + label:before {
    background: #1cb495;
    border-color: #1cb495;
    color: #ffffff;
    content: '\f00c'; }
  input[type=""checkbox""]:focus + label:before,
  input[type=""radio""]:focus + label:before {
    border-color: #1cb495;
    box-shadow: 0 0 0 2px #1cb495; }

input[type=""checkbox""] + label:before {
  border-radius: 6px; }

input[type=""radio""] + label:before {
  border-radius: 100%; }

::-webkit-input-placeholder {
  color: rgba(255, 255, 255, 0.5) !important;
  opacity: 1.0; }

:-moz-placeholder {
  color: rgba(255, 255, 255, 0.5) !important;
  opacity: 1.0; }

::-moz-placeholder {
  color: rgba(255, 255, 255, 0.5) !important;
  opacity: 1.0; }

:-ms-input-placeholder {
  color: rgba(255, 255, 255, 0.5) !important;
  opacity: 1.0; }

.formerize-placeholder {
  color: rgba(255, 255, 255, 0.5) !important;
  opacity: 1.0; }

/* Button */
input[type=""submit""],
input[type=""reset""],
input[type=""button""],
button,
.button {
  -moz-appearance: none;
  -webkit-appearance: none;
  -ms-appearance: none;
  appearance: none;
  -moz-transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out, opacity 0.2s ease-in-out;
  -webkit-transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out, opacity 0.2s ease-in-out;
  -ms-transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out, opacity 0.2s ease-in-out;
  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out, opacity 0.2s ease-in-out;
  background-color: #1cb495;
  border-radius: 6px;
  border: 0;
  color: #ffffff !important;
  cursor: pointer;
  display: inline-block;
  font-weight: 700;
  height: 2.75em;
  line-height: 2.75em;
  padding: 0 1.125em;
  text-align: center;
  text-decoration: none;
  white-space: nowrap; }
  input[type=""submit""]:hover,
  input[type=""reset""]:hover,
  input[type=""button""]:hover,
  button:hover,
  .button:hover {
    background-color: #1fcaa7; }
  input[type=""submit""]:active,
  input[type=""reset""]:active,
  input[type=""button""]:active,
  button:active,
  .button:active {
    background-color: #199e83; }
  input[type=""submit""].disabled, input[type=""submit""]:disabled,
  input[type=""reset""].disabled,
  input[type=""reset""]:disabled,
  input[type=""button""].disabled,
  input[type=""button""]:disabled,
  button.disabled,
  button:disabled,
  .button.disabled,
  .button:disabled {
    opacity: 0.5; }
  @media screen and (max-width: 480px) {
    input[type=""submit""],
    input[type=""reset""],
    input[type=""button""],
    button,
    .button {
      padding: 0; } }

/* Header */
#header h1 {
  font-size: 3.25em;
  margin: 0 0 0.55em 0; }

#header p {
  font-size: 1.35em;
  line-height: 1.65em; }

#header a {
  color: inherit; }

@media screen and (max-width: 736px) {
  #header h1 {
    font-size: 2em; }
  #header p {
    font-size: 1em; } }

@media screen and (max-width: 480px) {
  #header {
    margin: 0 0 1em 0; } }

/* Signup Form */
#signup-form {
  display: -moz-flex;
  display: -webkit-flex;
  display: -ms-flex;
  display: flex;
  position: relative; }
  #signup-form input[type=""text""],
  #signup-form input[type=""password""],
  #signup-form input[type=""email""] {
    width: 18em; }
  #signup-form > * {
    margin: 0 0 0 1em; }
  #signup-form > :first-child {
    margin: 0 0 0 0; }
  @media screen and (max-width: 480px) {
    #signup-form {
      -moz-flex-direction: column;
      -webkit-flex-direction: column;
      -ms-flex-direction: column;
      flex-direction: column; }
      #signup-form input[type=""type""],
      #signup-form input[type=""password""],
      #signup-form input[type=""email""] {
        width: 100%; }
      #signup-form > * {
        margin: 1.25em 0 0 0; }
      #signup-form .message {
        bottom: -1.5em;
        font-size: 0.9em;
        height: 1em;
        left: 0;
        line-height: inherit;
        margin-top: 0;
        position: absolute; } }

/* Footer */
#footer {
  -moz-transition: opacity 0.5s ease-in-out;
  -webkit-transition: opacity 0.5s ease-in-out;
  -ms-transition: opacity 0.5s ease-in-out;
  transition: opacity 0.5s ease-in-out;
  bottom: 4em;
  color: rgba(255, 255, 255, 0.5);
  left: 4em;
  opacity: 0.5;
  position: absolute; }
  #footer .icons {
    margin: 0 0 0.5em 0; }
  #footer .copyright {
    font-size: 0.8em;
    list-style: none;
    padding: 0; }
    #footer .copyright li {
      border-left: solid 1px rgba(255, 255, 255, 0.25);
      display: inline-block;
      line-height: 1em;
      margin: 0 0 0 0.75em;
      padding: 0 0 0 0.75em; }
      #footer .copyright li:first-child {
        border-left: 0;
        margin-left: 0;
        padding-left: 0; }
    #footer .copyright a {
      color: inherit; }
  #footer:hover {
    opacity: 1; }
  #footer > :last-child {
    margin-bottom: 0; }
  @media screen and (max-width: 1680px) {
    #footer {
      bottom: 3.5em;
      left: 3.5em; } }
  @media screen and (max-width: 736px) {
    #footer {
      bottom: 2em;
      left: 2em; } }
  @media screen and (max-width: 360px) {
    #footer {
      bottom: 1.25em;
      left: 1.25em; } }
  @media screen and (max-height: 640px) {
    #footer {
      bottom: auto;
      left: auto;
      margin: 1em 0 0 0;
      position: relative; } }
"
32Ef3GP5,0 - 1 Knapsack Problem,jayati,C++,Monday 27th of November 2023 07:21:13 PM CDT,"//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution
{
    public:
    //Function to return max value that can be put in knapsack of capacity W.
    int knapsackUtil(int wt[], int val[], int ind, int W, vector<vector<int>>& dp) {
   
    if (ind == 0 || W == 0) {
          return (wt[ind] <= W) ? val[0] : 0;
    }

    if (dp[ind][W] != -1) {
        return dp[ind][W];
    }


    int notTaken = knapsackUtil(wt, val, ind - 1, W, dp);
    int taken = 0;

    if (wt[ind] <= W) {
        taken = val[ind] + knapsackUtil(wt, val, ind - 1, W - wt[ind], dp);
    }


    return dp[ind][W] = max(notTaken, taken);
}

    int knapSack(int W, int wt[], int val[], int n) 
    { 
        vector<vector<int>> dp(n, vector<int>(W + 1, -1));
        return knapsackUtil(wt, val, n - 1, W, dp);
    }
};

//{ Driver Code Starts.

int main()
 {
    //taking total testcases
    int t;
    cin>>t;
    while(t--)
    {
        //reading number of elements and weight
        int n, w;
        cin>>n>>w;
        
        int val[n];
        int wt[n];
        
        //inserting the values
        for(int i=0;i<n;i++)
            cin>>val[i];
        
        //inserting the weights
        for(int i=0;i<n;i++)
            cin>>wt[i];
        Solution ob;
        //calling method knapSack()
        cout<<ob.knapSack(w, wt, val, n)<<endl;
        
    }
	return 0;
}
// } Driver Code Ends"
nXeLyzEw,git-aiogram,terencepjf,Python,Monday 27th of November 2023 07:00:53 PM CDT,"import asyncio
from aiogram import types, Dispatcher, Bot
from dotenv import load_dotenv
import os

# Importing required libraries
from aiogram import Bot, Dispatcher, Router, F
from aiogram.types import (ReplyKeyboardMarkup,  ReplyKeyboardRemove, \
    InlineKeyboardButton, InlineKeyboardMarkup
)
from aiogram.types.keyboard_button import KeyboardButton
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart, Command

from config import base_path

keyboard=[
[KeyboardButton(text='Topic-1'), KeyboardButton(text='Topic-2'), KeyboardButton(text='Topic-3')],
[KeyboardButton(text='Topic-4')]
]

load_dotenv("".env"")
TOKEN=os.getenv(""TOKEN"")
bot = Bot(token=TOKEN)

# The content is in individual html files
for row in keyboard:
    for button in row:
        filename=button.text
        print(f""{filename}.html"")


# Initializing the dispatcher object
dp = Dispatcher(bot=bot)

@dp.message(CommandStart())
async def welcome_handler(message: types.Message):
    await message.reply(f""Welcome to the Bot.  Please select from these options"",
                        reply_markup=ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True))

@dp.message(Command('Cancel'))
async def cancel_handler(message: types.Message):
    """"""Allow user to cancel action via /stop command""""""
    print('In stop handler')
    await message.reply('Goodbye!.', reply_markup=ReplyKeyboardRemove())


# Handling all other messages
@dp.message()
async def check_rp_handler(message: types.Message):
    if message.text:
        keyword = message.text.replace("" "", ""-"")
        _doc_url=f""{base_path}/content/{keyword}.html""
        try:
            with open(_doc_url, ""r"") as f:
                text = f.read()
        except FileNotFoundError as e:
            text=keyword
        await message.reply(text=text, parse_mode=ParseMode.HTML,
                             reply_markup=ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True))

        _image_url =f""{base_path}/images/{keyword}.jpg""
        try:
            photo = open(_image_url, 'rb')
            await bot.send_photo(chat_id=message.chat.id, photo=photo,
                         reply_markup=ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True))
        except:
            pass
    else:
        # Responding with a message that includes the text of the user's message
        await message.reply(f""Could not process your input: {message.text}""
                            , disable_web_page_preview = True
                            , reply_markup=ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True))

async def main() -> None:
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
"
mnpD6tG1,1.1,Nepoma,Python,Monday 27th of November 2023 06:53:44 PM CDT,"import matplotlib.pyplot as plt
from math import log, exp
import pandas as pd
import numpy as np

T_s = 22.0 #температура окружающей среды
# экспериментальные данные
T = np.array([83, 77.7,75.1,73,71.1,69.4,67.8,66.4,64.7,63.4,62.1,61,59.9,58.7,57.8,56.6])
t = np.arange(0,16,1)

def NewtonHeat(t0,T0,Ts,r,t,M):
    t = np.linspace(t0,t0+t,M)
    return t, Ts - (Ts-T0)*np.exp(-r*t)

# Вычислим коэффициенты r по формуле
r = np.divide(np.log((T[0]-T_s)/(T[1:]-T_s)),t[1:])
# Проверим
T_r = T_s + (T[0] - T_s)*np.exp(-r*t[1:])

plt.plot(t[1:], r)
plt.ylabel('коэффициент r')
plt.xlabel('время t')
plt.show()"
nZK4jrrs,4.1Rita,Nepoma,Python,Monday 27th of November 2023 06:44:56 PM CDT,"import numpy as np
import scipy
import matplotlib.pyplot as plt


def model(x, t):
    v0, r_in, r_out, c_in = 100, 1, 1, 0
    v = v0 + (r_in - r_out) * t
    d_v = r_in - r_out
    return x * (d_v/v - r_out) + v * r_in * c_in


x0 = 10

t_min = 0
t_max = 5
t = np.linspace(t_min, t_max)
x = scipy.integrate.odeint(model, x0, t)
inter_x = scipy.interpolate.CubicSpline(t, x)
root = list(filter(lambda t_1: t_min <= t_1 <= t_max, inter_x.solve(10)[0]))
print(""Root is :"", root)
print(""x(root) is: "", inter_x(root))
plt.plot(t, x)
plt.xlabel('time')
plt.ylabel('x(t)')
plt.show()"
7pj2NeyS,sdvfgngyngymg,gadungw71,PHP,Monday 27th of November 2023 06:39:39 PM CDT,"https://www.taskade.com/p/2023-1080-uhd-01HG5ZRA7222G4S7KT98E5J09Z
https://eventsframe.com/e/uVm3y1DYA/bod-obnovy-2023-online-cely-film-cesky-dabing/
https://eventsframe.com/e/pIYXQYd3i/sledujte-bod-obnovy-2023-cely-film-online-zdarma-ceskym-titulky/
https://groups.google.com/g/hd-bod-obnovy-cely-film-2023-cz-a-zdarma-dabing-online/c/6HKQmL8wE7A
https://gamma.app/public/-Bod-obnovy-2023Cely-Film-Online-a-Zdarma-CZSK-Dabing-1080p-e01bfnh8coia7ki
https://www.taskade.com/p/sleduj-bod-obnovy-2023-sleduj-filmy-vsetky-filmy-online-zadarmo-01HG64VRKX4T178Y1EG3GW45ZK
https://baskadia.com/post/11s70
https://lookerstudio.google.com/reporting/0763f90a-e310-478d-a1c6-7871019ad204
https://github.com/apps/sledujtebodobnovy2023celyfilm
https://gamma.app/public/Bod-obnovy-CELY-FILM-ONLINE-ZDARMA-2023-CZ-DABING-u2031oqyt9nn1q4
https://www.taskade.com/p/sledujte-bod-obnovy-2023-cely-film-online-cz-dabing-01HG671HD91XNT73B33PV331SH
https://groups.google.com/g/comp.protocols.time.ntp/c/XImzRSaK4_c
https://groups.google.com/g/comp.protocols.time.ntp/c/J-aI_7Z0SGk
https://groups.google.com/g/across-the-furious-sea-2023-hd/c/sCNcCBFvUa8
https://vk.com/@shanshanmov-20231080p
https://vk.com/@wordmoviesonline-across-the-furious-sea
https://linkbio.co/5112714bQD3fw
https://lookerstudio.google.com/reporting/20632ef8-17d7-4eaa-b8d2-516320ef8436
https://www.taskade.com/p/tw-2023-hd-1080p-01HG9JCJ2GRMN1F1AAEFJE421V
https://player.soundon.fm/p/cd0dffca-70c7-40a8-9eb5-dbab7f4a5720
https://player.soundon.fm/p/58469931-c088-4d6d-a834-8fbf4b35a1ad
https://hackmd.io/@rerewilli6/BJ6eZ3fBp
https://rentry.co/k3u74
https://pastelink.net/oyy1wlnh
https://snippet.host/aphkxu
https://glot.io/snippets/gr00q495kb
https://etextpad.com/fwqv2x1oav
https://homment.com/jFN1gfl7otjCFHMcT35m
https://tempaste.com/EEgiEkZJ3X5
https://jsbin.com/raripabika/edit?html,output
https://ide.geeksforgeeks.org/online-php-compiler/9928104e-64ef-49a5-91f7-ec1616e6a330
https://pasteio.com/x7gpDifnAqKq
https://jsfiddle.net/putradani/6mjw3gnh/
https://onlinegdb.com/py2xg9uUr
https://rextester.com/CDBWNT97984
https://yamcode.com/sedgseheshesh
https://paste.mozilla.org/zrOPgV3Q
https://codepen.io/memek-bouladiegh/pen/wvNxXwq"
3PWkkYkY,1.5,Nepoma,Python,Monday 27th of November 2023 06:37:41 PM CDT,"def find_eps(t):
    M = 100
    delta_M = 1
    r_f = 0.09
    while (True):
        if (np.abs(NewtonHeat(0,85,22,r_f, t, M)[1][-1] - HeatEq(0,85,22,r_f, t, M)[1][-1]) <= 0.01):
            return M,t/M
        M += delta_M
        
    return False
res1 = find_eps(1)
res2 = find_eps(5)
print(""Ответ"")
print(f""при t = 1 M = {res1[0]}, Δt = {res1[1]}"")
print(f""при t = 5 M = {res2[0]}, Δt = {res2[1]}"")"
vugKfLf8,1.4,Nepoma,Python,Monday 27th of November 2023 06:36:40 PM CDT,"import numpy as np
from scipy.stats import norm
import matplotlib.pyplot as plt
from scipy import integrate as it
import pandas as pd

def NewtonHeat(t0,T0,Ts,r,t,M):
    t = np.linspace(t0,t0+t,M)
    return t, Ts - (Ts-T0)*np.exp(-r*t)

def HeatEq(t0, T0, Ts, r, t, M):
    delta_t = t / M
    t = np.linspace(t0, t, M)
    res = np.zeros_like(t)
    res[0] = T0
    # res[1] = y0 + (-r*(T0-Ts))*delta_t
    for i in np.arange(1, M).tolist():
        res[i] = res[i - 1] - r * (res[i - 1] - Ts) * delta_t

    return t, res

t = 1
M = t*100
r_f = 0.09
E1 = []
E2 = []
E3 = []
E4 = [None]
time = []
for i in range(10):
    time.append(t/M)
    E1.append(NewtonHeat(0,85,22,r_f, 1, M)[1][-1])
    E2.append(HeatEq(0,85,22,r_f, 1, M)[1][-1])
    E3.append(np.abs(E1[i]-E2[i]))
    if (i!=0):
        E4.append(E3[i-1]/E3[i])
    M *= 2

df3 = pd.DataFrame({""$$E_1$$"":E1,
                   ""$$E_2$$"" : E2,
                   ""$$|E_1 - E_2|$$"" : E3,
                   ""$$\Delta E$$"": E4}, index=np.round(time,5))
df3 = df3.rename_axis('$$\Delta t$$', axis=1)
print(df3)"
rwAQmNmk,1.3,Nepoma,Python,Monday 27th of November 2023 06:35:23 PM CDT,"import numpy as np
from scipy.stats import norm
import matplotlib.pyplot as plt
from scipy import integrate as it
import pandas as pd

def NewtonHeat(t0,T0,Ts,r,t,M):
    t = np.linspace(t0,t0+t,M)
    return t, Ts - (Ts-T0)*np.exp(-r*t)

def HeatEq(t0, T0, Ts, r, t, M):
    delta_t = t / M
    t = np.linspace(t0, t, M)
    res = np.zeros_like(t)
    res[0] = T0
    # res[1] = y0 + (-r*(T0-Ts))*delta_t
    for i in np.arange(1, M).tolist():
        res[i] = res[i - 1] - r * (res[i - 1] - Ts) * delta_t

    return t, res


r = 0.09
E1 = NewtonHeat(0, 85, 22, r, 15, 20)
E2 = HeatEq(0, 85, 22, r, 15, 20)

plt.plot(E1[0], E1[1], label='exact')
plt.plot(E2[0], E2[1], label='aprx')
plt.legend()
plt.show()

N = 10
E1 = []
E2 = []
E3 = []
E4 = [None]
E5 = []
for i in range(10):
    E1.append(NewtonHeat(0, 85, 22, r, 15, N)[1])
    E2.append(HeatEq(0, 85, 22, r, 15, N)[1])
    E3.append(np.max(np.abs(E1[i] - E2[i])))
    if (i != 0):
        E4.append(np.log2(E3[i - 1] / E3[i]))
    E1[i] = E1[i][-1]
    E2[i] = E2[i][-1]
    E5.append((N))
    N *= 2

df2 = pd.DataFrame({""Точное"": E1[1],
                    ""Приблеженное"": E2[1],
                    ""$$|E_1 - E_2|$$"": E3,
                    ""$$\\frac{E_1}{E_2}$$"": E4},
                   index=E5)
df2 = df2.rename_axis('$$N$$', axis=1)
print(df2)"
eXvhHBXs,2023-11-27_stats.json,rdp_snitch,JSON,Monday 27th of November 2023 06:18:15 PM CDT,"{
  ""ip"": {
    ""128.199.89.10"": 24,
    ""94.142.51.154"": 108,
    ""194.165.17.21"": 54,
    ""62.204.61.207"": 6,
    ""139.180.157.185"": 6,
    ""87.251.75.145"": 12,
    ""45.227.254.48"": 6,
    ""198.235.24.216"": 9,
    ""23.239.22.139"": 495,
    ""45.227.254.9"": 9,
    ""212.70.149.146"": 9,
    ""45.227.254.26"": 12,
    ""185.170.144.3"": 6,
    ""172.104.186.39"": 9,
    ""205.210.31.213"": 9,
    ""54.37.197.205"": 3,
    ""62.204.41.132"": 12,
    ""146.190.63.98"": 6,
    ""61.172.245.16"": 3,
    ""202.29.172.175"": 3,
    ""62.204.41.139"": 3,
    ""185.170.144.113"": 3,
    ""45.227.254.8"": 6,
    ""185.190.24.101"": 3,
    ""196.190.117.7"": 6,
    ""205.210.31.57"": 9,
    ""87.251.75.64"": 3,
    ""46.219.77.107"": 3,
    ""179.60.147.5"": 3,
    ""198.235.24.165"": 9,
    ""176.113.115.65"": 3
  },
  ""asn"": {
    ""AS14061"": 30,
    ""AS48832"": 108,
    ""AS48721"": 54,
    ""AS34412"": 6,
    ""AS20473"": 6,
    ""AS208091"": 15,
    ""AS267784"": 33,
    ""AS396982"": 36,
    ""AS63949"": 504,
    ""AS204428"": 9,
    ""AS197414"": 9,
    ""AS16276"": 3,
    ""AS59425"": 15,
    ""AS4812"": 3,
    ""AS133042"": 3,
    ""AS211632"": 3,
    ""AS24757"": 6,
    ""AS31148"": 3,
    ""AS209588"": 3,
    ""AS57678"": 3
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 30,
    ""Zain Jordan"": 108,
    ""Flyservers S.A."": 90,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 6,
    ""Choopa"": 6,
    ""Xhost Internet Solutions LP"": 24,
    ""Google LLC"": 36,
    ""Akamai Technologies, Inc."": 495,
    ""SS-Net"": 9,
    ""Akamai Technologies"": 9,
    ""OVH SAS"": 3,
    ""Horizon LLC"": 15,
    ""China Telecom (Group)"": 3,
    ""Office of Info.Tech. Admin. for Educational Development"": 3,
    ""Internet Solutions & Innovations LTD."": 3,
    ""Ethiotelecom"": 6,
    ""o3 core"": 3,
    ""Cat Technologies Co. Limited"": 3
  },
  ""org"": {
    ""DigitalOcean, LLC"": 30,
    ""Unknown"": 123,
    ""Flyservers S.A"": 54,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 6,
    ""Xhost Internet Solutions"": 15,
    ""UAB Host Baltic"": 33,
    ""Palo Alto Networks, Inc"": 36,
    ""Linode"": 504,
    ""4Media Ltd"": 9,
    ""Xhostis"": 9,
    ""OVH GmbH"": 3,
    ""Horizon LLC"": 15,
    ""DKF"": 3,
    ""Office of Info.Tech. Admin. Educational Development"": 3,
    ""Tribeka Web Advisors S.A"": 3,
    ""Cloud Solutions S.A"": 3,
    ""Cat Technologies Co. Limited"": 3
  },
  ""regionName"": {
    ""South West"": 30,
    ""Zarqa"": 108,
    ""Kaunas"": 54,
    ""Tehran"": 6,
    ""North Holland"": 24,
    ""Vilnius"": 33,
    ""California"": 537,
    ""Plovdiv"": 9,
    ""North West"": 9,
    ""Hesse"": 3,
    ""Moscow"": 18,
    ""Shanghai"": 3,
    ""Bangkok"": 3,
    ""Mariehamns stad"": 3,
    ""Addis Ababa"": 6,
    ""Zhytomyr"": 3,
    ""Distrito Federal"": 3
  },
  ""country"": {
    ""Singapore"": 39,
    ""Jordan"": 108,
    ""Lithuania"": 87,
    ""Iran"": 6,
    ""Netherlands"": 24,
    ""United States"": 537,
    ""Bulgaria"": 9,
    ""Germany"": 3,
    ""Russia"": 18,
    ""China"": 3,
    ""Thailand"": 3,
    ""Aland Islands"": 3,
    ""Ethiopia"": 6,
    ""Ukraine"": 3,
    ""Venezuela"": 3
  },
  ""account"": {
    ""hello"": 708,
    ""(empty)"": 12,
    ""Administr"": 42,
    ""Test"": 33,
    ""twwsqDAzH"": 3,
    ""MwGwtO"": 3,
    ""kRPTlO"": 3,
    ""Domain"": 21,
    ""KUjeFrpwb"": 3,
    ""OtdPWx"": 3,
    ""fBFfMW"": 3,
    ""vEuNucjMs"": 3,
    ""EpglYf"": 3,
    ""uEBlXA"": 3,
    ""hnuwogmDF"": 3,
    ""FkNwsj"": 3,
    ""FNoQnm"": 3
  },
  ""keyboard"": {
    ""Unknown"": 852
  },
  ""client_build"": {
    ""Unknown"": 852
  },
  ""client_name"": {
    ""Unknown"": 852
  },
  ""ip_type"": {
    ""hosting"": 570,
    ""Unknown"": 264,
    ""proxy"": 9,
    ""hosting & proxy"": 9
  }
}"
AdNcVw0a,2023-11-27_stats.json,rdp_snitch,JSON,Monday 27th of November 2023 06:16:06 PM CDT,"{
  ""ip"": {
    ""128.199.89.10"": 16,
    ""94.142.51.154"": 72,
    ""194.165.17.21"": 36,
    ""62.204.61.207"": 4,
    ""139.180.157.185"": 4,
    ""87.251.75.145"": 8,
    ""45.227.254.48"": 4,
    ""198.235.24.216"": 6,
    ""23.239.22.139"": 330,
    ""45.227.254.9"": 6,
    ""212.70.149.146"": 6,
    ""45.227.254.26"": 8,
    ""185.170.144.3"": 4,
    ""172.104.186.39"": 6,
    ""205.210.31.213"": 6,
    ""54.37.197.205"": 2,
    ""62.204.41.132"": 8,
    ""146.190.63.98"": 4,
    ""61.172.245.16"": 2,
    ""202.29.172.175"": 2,
    ""62.204.41.139"": 2,
    ""185.170.144.113"": 2,
    ""45.227.254.8"": 4,
    ""185.190.24.101"": 2,
    ""196.190.117.7"": 4,
    ""205.210.31.57"": 6,
    ""87.251.75.64"": 2,
    ""46.219.77.107"": 2,
    ""179.60.147.5"": 2,
    ""198.235.24.165"": 6,
    ""176.113.115.65"": 2
  },
  ""asn"": {
    ""AS14061"": 20,
    ""AS48832"": 72,
    ""AS48721"": 36,
    ""AS34412"": 4,
    ""AS20473"": 4,
    ""AS208091"": 10,
    ""AS267784"": 22,
    ""AS396982"": 24,
    ""AS63949"": 336,
    ""AS204428"": 6,
    ""AS197414"": 6,
    ""AS16276"": 2,
    ""AS59425"": 10,
    ""AS4812"": 2,
    ""AS133042"": 2,
    ""AS211632"": 2,
    ""AS24757"": 4,
    ""AS31148"": 2,
    ""AS209588"": 2,
    ""AS57678"": 2
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 20,
    ""Zain Jordan"": 72,
    ""Flyservers S.A."": 60,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 4,
    ""Choopa"": 4,
    ""Xhost Internet Solutions LP"": 16,
    ""Google LLC"": 24,
    ""Akamai Technologies, Inc."": 330,
    ""SS-Net"": 6,
    ""Akamai Technologies"": 6,
    ""OVH SAS"": 2,
    ""Horizon LLC"": 10,
    ""China Telecom (Group)"": 2,
    ""Office of Info.Tech. Admin. for Educational Development"": 2,
    ""Internet Solutions & Innovations LTD."": 2,
    ""Ethiotelecom"": 4,
    ""o3 core"": 2,
    ""Cat Technologies Co. Limited"": 2
  },
  ""org"": {
    ""DigitalOcean, LLC"": 20,
    ""Unknown"": 82,
    ""Flyservers S.A"": 36,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 4,
    ""Xhost Internet Solutions"": 10,
    ""UAB Host Baltic"": 22,
    ""Palo Alto Networks, Inc"": 24,
    ""Linode"": 336,
    ""4Media Ltd"": 6,
    ""Xhostis"": 6,
    ""OVH GmbH"": 2,
    ""Horizon LLC"": 10,
    ""DKF"": 2,
    ""Office of Info.Tech. Admin. Educational Development"": 2,
    ""Tribeka Web Advisors S.A"": 2,
    ""Cloud Solutions S.A"": 2,
    ""Cat Technologies Co. Limited"": 2
  },
  ""regionName"": {
    ""South West"": 20,
    ""Zarqa"": 72,
    ""Kaunas"": 36,
    ""Tehran"": 4,
    ""North Holland"": 16,
    ""Vilnius"": 22,
    ""California"": 358,
    ""Plovdiv"": 6,
    ""North West"": 6,
    ""Hesse"": 2,
    ""Moscow"": 12,
    ""Shanghai"": 2,
    ""Bangkok"": 2,
    ""Mariehamns stad"": 2,
    ""Addis Ababa"": 4,
    ""Zhytomyr"": 2,
    ""Distrito Federal"": 2
  },
  ""country"": {
    ""Singapore"": 26,
    ""Jordan"": 72,
    ""Lithuania"": 58,
    ""Iran"": 4,
    ""Netherlands"": 16,
    ""United States"": 358,
    ""Bulgaria"": 6,
    ""Germany"": 2,
    ""Russia"": 12,
    ""China"": 2,
    ""Thailand"": 2,
    ""Aland Islands"": 2,
    ""Ethiopia"": 4,
    ""Ukraine"": 2,
    ""Venezuela"": 2
  },
  ""account"": {
    ""hello"": 472,
    ""(empty)"": 8,
    ""Administr"": 28,
    ""Test"": 22,
    ""twwsqDAzH"": 2,
    ""MwGwtO"": 2,
    ""kRPTlO"": 2,
    ""Domain"": 14,
    ""KUjeFrpwb"": 2,
    ""OtdPWx"": 2,
    ""fBFfMW"": 2,
    ""vEuNucjMs"": 2,
    ""EpglYf"": 2,
    ""uEBlXA"": 2,
    ""hnuwogmDF"": 2,
    ""FkNwsj"": 2,
    ""FNoQnm"": 2
  },
  ""keyboard"": {
    ""Unknown"": 568
  },
  ""client_build"": {
    ""Unknown"": 568
  },
  ""client_name"": {
    ""Unknown"": 568
  },
  ""ip_type"": {
    ""hosting"": 380,
    ""Unknown"": 176,
    ""proxy"": 6,
    ""hosting & proxy"": 6
  }
}"
AXCwDsBt,2023-11-27_stats.json,rdp_snitch,JSON,Monday 27th of November 2023 06:15:08 PM CDT,"{
  ""ip"": {
    ""128.199.89.10"": 8,
    ""94.142.51.154"": 36,
    ""194.165.17.21"": 18,
    ""62.204.61.207"": 2,
    ""139.180.157.185"": 2,
    ""87.251.75.145"": 4,
    ""45.227.254.48"": 2,
    ""198.235.24.216"": 3,
    ""23.239.22.139"": 165,
    ""45.227.254.9"": 3,
    ""212.70.149.146"": 3,
    ""45.227.254.26"": 4,
    ""185.170.144.3"": 2,
    ""172.104.186.39"": 3,
    ""205.210.31.213"": 3,
    ""54.37.197.205"": 1,
    ""62.204.41.132"": 4,
    ""146.190.63.98"": 2,
    ""61.172.245.16"": 1,
    ""202.29.172.175"": 1,
    ""62.204.41.139"": 1,
    ""185.170.144.113"": 1,
    ""45.227.254.8"": 2,
    ""185.190.24.101"": 1,
    ""196.190.117.7"": 2,
    ""205.210.31.57"": 3,
    ""87.251.75.64"": 1,
    ""46.219.77.107"": 1,
    ""179.60.147.5"": 1,
    ""198.235.24.165"": 3,
    ""176.113.115.65"": 1
  },
  ""asn"": {
    ""AS14061"": 10,
    ""AS48832"": 36,
    ""AS48721"": 18,
    ""AS34412"": 2,
    ""AS20473"": 2,
    ""AS208091"": 5,
    ""AS267784"": 11,
    ""AS396982"": 12,
    ""AS63949"": 168,
    ""AS204428"": 3,
    ""AS197414"": 3,
    ""AS16276"": 1,
    ""AS59425"": 5,
    ""AS4812"": 1,
    ""AS133042"": 1,
    ""AS211632"": 1,
    ""AS24757"": 2,
    ""AS31148"": 1,
    ""AS209588"": 1,
    ""AS57678"": 1
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 10,
    ""Zain Jordan"": 36,
    ""Flyservers S.A."": 30,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 2,
    ""Choopa"": 2,
    ""Xhost Internet Solutions LP"": 8,
    ""Google LLC"": 12,
    ""Akamai Technologies, Inc."": 165,
    ""SS-Net"": 3,
    ""Akamai Technologies"": 3,
    ""OVH SAS"": 1,
    ""Horizon LLC"": 5,
    ""China Telecom (Group)"": 1,
    ""Office of Info.Tech. Admin. for Educational Development"": 1,
    ""Internet Solutions & Innovations LTD."": 1,
    ""Ethiotelecom"": 2,
    ""o3 core"": 1,
    ""Cat Technologies Co. Limited"": 1
  },
  ""org"": {
    ""DigitalOcean, LLC"": 10,
    ""Unknown"": 41,
    ""Flyservers S.A"": 18,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 2,
    ""Xhost Internet Solutions"": 5,
    ""UAB Host Baltic"": 11,
    ""Palo Alto Networks, Inc"": 12,
    ""Linode"": 168,
    ""4Media Ltd"": 3,
    ""Xhostis"": 3,
    ""OVH GmbH"": 1,
    ""Horizon LLC"": 5,
    ""DKF"": 1,
    ""Office of Info.Tech. Admin. Educational Development"": 1,
    ""Tribeka Web Advisors S.A"": 1,
    ""Cloud Solutions S.A"": 1,
    ""Cat Technologies Co. Limited"": 1
  },
  ""regionName"": {
    ""South West"": 10,
    ""Zarqa"": 36,
    ""Kaunas"": 18,
    ""Tehran"": 2,
    ""North Holland"": 8,
    ""Vilnius"": 11,
    ""California"": 179,
    ""Plovdiv"": 3,
    ""North West"": 3,
    ""Hesse"": 1,
    ""Moscow"": 6,
    ""Shanghai"": 1,
    ""Bangkok"": 1,
    ""Mariehamns stad"": 1,
    ""Addis Ababa"": 2,
    ""Zhytomyr"": 1,
    ""Distrito Federal"": 1
  },
  ""country"": {
    ""Singapore"": 13,
    ""Jordan"": 36,
    ""Lithuania"": 29,
    ""Iran"": 2,
    ""Netherlands"": 8,
    ""United States"": 179,
    ""Bulgaria"": 3,
    ""Germany"": 1,
    ""Russia"": 6,
    ""China"": 1,
    ""Thailand"": 1,
    ""Aland Islands"": 1,
    ""Ethiopia"": 2,
    ""Ukraine"": 1,
    ""Venezuela"": 1
  },
  ""account"": {
    ""hello"": 236,
    ""(empty)"": 4,
    ""Administr"": 14,
    ""Test"": 11,
    ""twwsqDAzH"": 1,
    ""MwGwtO"": 1,
    ""kRPTlO"": 1,
    ""Domain"": 7,
    ""KUjeFrpwb"": 1,
    ""OtdPWx"": 1,
    ""fBFfMW"": 1,
    ""vEuNucjMs"": 1,
    ""EpglYf"": 1,
    ""uEBlXA"": 1,
    ""hnuwogmDF"": 1,
    ""FkNwsj"": 1,
    ""FNoQnm"": 1
  },
  ""keyboard"": {
    ""Unknown"": 284
  },
  ""client_build"": {
    ""Unknown"": 284
  },
  ""client_name"": {
    ""Unknown"": 284
  },
  ""ip_type"": {
    ""hosting"": 190,
    ""Unknown"": 88,
    ""proxy"": 3,
    ""hosting & proxy"": 3
  }
}"
2YSn289q,ASM Multiply Octal Decimal (RU),VladimirKostovsky,MIX Assembler,Monday 27th of November 2023 06:14:07 PM CDT,".386 ; Ассемблерная директива, предписывающая использовать набор операций для; процессора 80386
.MODEL FLAT, STDCALL ; Ассемблерная директива, определяющая модель памяти программы (модель управления стеком)


; Прототипы внешних процедур (После @ — общая длина передаваемых параметров,
; после : — тип внешнего объекта ""Процедура"") 
EXTERN  GetStdHandle@4: PROC   ; Функция определения дескриптора
EXTERN  WriteConsoleA@20: PROC ; Функция вывода текста
EXTERN  CharToOemA@8: PROC     ; Функция перекодировки
EXTERN  ReadConsoleA@20: PROC  ; Функция ввода
EXTERN  ExitProcess@4: PROC    ; Функция выхода из программы
EXTERN  lstrlenA@4: PROC       ; Функция определения длины строки
.DATA
DIN DD ?                   ; Объявление переменной DIN для хранения ввода
DOUT DD ?                  ; Объявление переменной DOUT для хранения вывода
STRN1 DB ""Введите первое восьмеричное число: "", 13, 10, 0  ; Строка приглашения для ввода первого числа
STRN2 DB ""Введите второе восьмеричное число: "", 13, 10, 0  ; Строка приглашения для ввода второго числа
STRN3 DB ""Результат умножения в десятичной системе: "", 13, 10, 0  ; Строка для вывода результата
BUF DB 200 DUP (?)         ; Буфер для хранения введенных данных
LENS DD ?                  ; Переменная для хранения длины ввода
FlagA DD 0                 ; Флаг для первого числа
FlagB DD 0                 ; Флаг для второго числа
Two DD 2                   ; Константа для преобразования из восьмеричной в десятичную систему (степ. двойки)
Ten DD 10                  ; Константа для десятичной системы
NumA DD ?                  ; Переменная для хранения первого числа
NumB DD ?                  ; Переменная для хранения второго числа

.CODE
MAIN PROC                  ; Начало описания процедуры с именем MAIN
                           ; Перекодируем строку STRN1
PUSH OFFSET STRN1		   ; Параметры функции помещаются в стек командой PUSH, OFFSET — операция,
                           ;возвращающая адрес (смещения)
CALL CharToOemA@8          ; Преобразование строки приглашения в ANSI
PUSH -10                   ; STD_INPUT_HANDLE (константа вывода)
CALL GetStdHandle@4        ; Получение дескриптора стандартного ввода
MOV DIN, EAX              ; Сохранение дескриптора в переменной DIN

PUSH OFFSET STRN1
CALL lstrlenA@4           ; Получение длины строки приглашения
PUSH 0
PUSH OFFSET LENS
PUSH EAX
PUSH OFFSET STRN1
PUSH DIN
CALL WriteConsoleA@20     ; Вывод приглашения для ввода первого числа в консоль

PUSH 0
PUSH OFFSET LENS
PUSH 200
PUSH OFFSET BUF
PUSH OFFSET LENS
PUSH OFFSET DIN
CALL ReadConsoleA@20      ; Чтение ввода пользователя в буфер

XOR EAX, EAX              ; Обнуление регистра EAX
XOR EBX, EBX              ; Обнуление регистра EBX
XOR ECX, ECX              ; Обнуление регистра ECX
MOV ECX, 200              ; Установка счетчика на 200 (максимальная длина ввода)
LEA ESI, [BUF]            ; Загрузка адреса буфера в регистр ESI

Convert1Loop:
MOV AL, [ESI]             ; Загрузка байта из буфера в AL
CMP AL, 0                 ; Сравнение с нулем (конец строки)
JE Convert1Done           ; Если конец строки, завершить цикл
SUB AL, '0'               ; Преобразование символа в число
MUL Two                   ; Умножение текущего результата на 2
ADD BX, AX                ; Прибавление нового значения к результату
INC ESI                   ; Переход к следующему символу в буфере
JMP Convert1Loop         ; Переход в начало цикла

Convert1Done:
MOVZX EAX, BX             ; Загрузка результата в EAX
MOV NumA, EAX             ; Сохранение результата в переменной NumA

PUSH OFFSET STRN2
CALL CharToOemA@8         ; Преобразование строки приглашения в ANSI

PUSH -10                  ; STD_INPUT_HANDLE
CALL GetStdHandle@4        ; Получение дескриптора стандартного ввода
MOV DIN, EAX              ; Сохранение дескриптора в переменной DIN

PUSH OFFSET STRN2
CALL lstrlenA@4           ; Получение длины строки приглашения
PUSH 0
PUSH OFFSET LENS
PUSH EAX
PUSH OFFSET STRN2
PUSH DIN
CALL WriteConsoleA@20     ; Вывод приглашения для ввода второго числа в консоль

PUSH 0
PUSH OFFSET LENS
PUSH 200
PUSH OFFSET BUF
PUSH OFFSET LENS
PUSH OFFSET DIN
CALL ReadFile@20          ; Чтение ввода пользователя в буфер

XOR EAX, EAX              ; Обнуление регистра EAX
XOR EBX, EBX              ; Обнуление регистра EBX
XOR ECX, ECX              ; Обнуление регистра ECX
MOV ECX, 200              ; Установка счетчика на 200 (максимальная длина ввода)
LEA ESI, [BUF]            ; Загрузка адреса буфера в регистр ESI

Convert2Loop:
MOV AL, [ESI]             ; Загрузка байта из буфера в AL
CMP AL, 0                 ; Сравнение с нулем (конец строки)
JE Convert2Done           ; Если конец строки, завершить цикл
SUB AL, '0'               ; Преобразование символа в число
MUL Two                   ; Умножение текущего результата на 2
ADD BX, AX                ; Прибавление нового значения к результату
INC ESI                   ; Переход к следующему символу в буфере
JMP Convert2Loop         ; Переход в начало цикла

Convert2Done:
MOVZX EAX, BX             ; Загрузка результата в EAX
MOV NumB, EAX             ; Сохранение результата в переменной NumB
MOV EAX, NumA             ; Загрузка первого числа в EAX
MOV EBX, NumB             ; Загрузка второго числа в EBX
MUL EBX                   ; Умножение чисел, результат в EDX:EAX
XOR EDI, EDI              ; Обнуление регистра EDI (для подсчета длины результата)
MOV ESI, OFFSET BUF       ; Загрузка адреса буфера в ESI
.WHILE EAX >= Ten         ; Цикл, пока результат больше или равен 10
    DIV Ten               ; Деление на 10, остаток в EDX
    ADD EDX, '0'          ; Преобразование остатка в символ и добавление к результату
    PUSH EDX              ; Запись символа в стек
    ADD EDI, 1            ; Увеличение счетчика длины
    XOR EDX, EDX          ; Обнуление регистра EDX
.ENDW
ADD EAX, '0'              ; Преобразование оставшегося значения в символ
PUSH EAX                  ; Запись символа в стек
ADD EDI, 1                ; Увеличение счетчика длины
CMP FlagA, 0              ; Проверка флага для первого числа
JE Continue2              ; Если флаг сброшен, переход к метке Continue2
CMP FlagB, 1              ; Проверка флага для второго числа
JE Continue4              ; Если флаг установлен, переход к метке Continue4
JNE Continue3             ; Если флаг сброшен, переход к метке Continue3

Continue2:
CMP FlagB, 0              ; Проверка флага для второго числа
JE Continue4              ; Если флаг сброшен, переход к метке Continue4
JNE Continue3             ; Если флаг установлен, переход к метке Continue3

Continue3:
PUSH '-'                  ; Помещение знака минус в стек
ADD EDI, 1                ; Увеличение счетчика длины

Continue4:
MOV ECX, EDI              ; Загрузка длины результата в ECX
Convertc_c:
POP [ESI]                 ; Извлечение символа из стека и запись в буфер
INC ESI                   ; Переход к следующему символу в буфере
LOOP Convertc_c           ; Повторение, пока ECX не достигнет 0
PUSH OFFSET STRN3
CALL CharToOemA@8         ; Преобразование строки результата в ANSI
PUSH OFFSET STRN3
CALL lstrlenA@4           ; Получение длины строки результата
PUSH 0
PUSH OFFSET LENS
PUSH ECX
PUSH OFFSET STRN3
PUSH DOUT
CALL WriteConsoleA@20     ; Вывод строки результата в консоль
MOV ECX, 06FFFFFFFH       ; Инициализация счетчика для задержки (просто ожидание)
L1:
LOOP L1                   ; Петля ожидания
PUSH 0
CALL ExitProcess@4        ; Завершение программы
MAIN ENDP
END MAIN

"
VCs9CQAs,launch.json,brenoitalo,JSON,Monday 27th of November 2023 06:09:52 PM CDT,"{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    ""version"": ""0.2.0"",
    ""configurations"": [
        {
            ""name"": ""Development"",
            ""request"": ""launch"",
            ""type"": ""dart"",
            ""program"": ""lib/main_dev.dart"",
            ""args"": [
                ""--flavor"",
                ""dev""
            ]
        },
        {
            ""name"": ""Production"",
            ""request"": ""launch"",
            ""type"": ""dart"",
            ""program"": ""lib/main.dart"",
            ""args"": [
                ""--flavor"",
                ""prod""
            ]
        },
    ]
}"
fYnfwXAU,Untitled,JMoore2007,C++,Monday 27th of November 2023 05:59:32 PM CDT,"#include <any>
#include <iostream>
#include <map>
#include <ratio>
#include <stdexcept>
#include <type_traits>
#include <utility>
#include <string>
typedef long double number;
template<class TA, class TB>
class ValAdd {
public:
	TA a;
	TB b;
	ValAdd(TA A, TB B) : a(A),b(B) {}
	number eval(std::map<int,number> m) {return a.eval(m)+b.eval(m);}
};
template<class T>
class ValNeg {
public:
	T x;
	ValNeg(T X) : x(X) {}
	number eval(std::map<int,number> m) {return -(x.eval(m));}
};
template<class TA, class TB>
class ValMult {
public:
	TA a;
	TB b;
	ValMult(TA A, TB B) : a(A),b(B) {}
	number eval(std::map<int,number> m) {return a.eval(m)*b.eval(m);}
};
template<class TA, class TB>
class ValDiv {
public:
	TA a;
	TB b;
	ValDiv(TA A, TB B) : a(A),b(B) {}
	number eval(std::map<int,number> m) {return a.eval(m)/b.eval(m);}
};
class ValConst {
public:
	number val;
	ValConst(number val) : val(val) {}
	number eval(std::map<int,number> m) {return val;}
};
template<int id>
class ValVar {
public:
	ValVar() {}
	number eval(std::map<int,number> m) {
		if (!m.count(id)) throw std::domain_error(""unmapped var"");
		return m[id];
	}
};

template<class T>
concept IsValConst = (std::is_same_v<T,ValConst>);
template<class T>
static constexpr bool IsValAdd = false;
template<class A, class B>
static constexpr bool IsValAdd<ValAdd<A,B>> = true;

template<class T>
static constexpr bool IsValMult = false;
template<class A, class B>
static constexpr bool IsValMult<ValMult<A,B>> = true;

template<class T>
static constexpr bool IsConstant = false;
template<>
static constexpr bool IsConstant<ValConst> = true;
template<class A, class B> requires (IsConstant<A>&&IsConstant<B>)
static constexpr bool IsConstant<ValAdd<A,B>> = true;
template<class A> requires (IsConstant<A>)
static constexpr bool IsConstant<ValNeg<A>> = true;
template<class A, class B> requires (IsConstant<A>&&IsConstant<B>)
static constexpr bool IsConstant<ValMult<A,B>> = true;
template<class A, class B> requires (IsConstant<A>&&IsConstant<B>)
static constexpr bool IsConstant<ValDiv<A,B>> = true;

template<class T>
static constexpr bool PartConstant = false;
template<>
static constexpr bool PartConstant<ValConst> = true;
template<class A, class B> requires (PartConstant<A>||PartConstant<B>)
static constexpr bool PartConstant<ValAdd<A,B>> = true;
template<class A> requires (PartConstant<A>)
static constexpr bool PartConstant<ValNeg<A>> = true;
template<class A, class B> requires (PartConstant<A>||PartConstant<B>)
static constexpr bool PartConstant<ValMult<A,B>> = true;
template<class A, class B> requires (PartConstant<A>||PartConstant<B>)
static constexpr bool PartConstant<ValDiv<A,B>> = true;

template<class A, class B>
static constexpr bool CompareLess = false;
template<int id>
static constexpr bool CompareLess<ValConst,ValVar<id>> = true;
template<int a, class A, class B>
static constexpr bool CompareLess<ValVar<a>,ValAdd<A,B>> = true;
template<class A, class B, class C>
static constexpr bool CompareLess<ValAdd<A,B>,ValNeg<C>> = true;
template<class A, class B, class C>
static constexpr bool CompareLess<ValNeg<A>,ValMult<B,C>> = true;
template<class A, class B, class C, class D>
static constexpr bool CompareLess<ValMult<A,B>,ValDiv<C,D>> = true;
template<class T> requires CompareLess<ValVar<0>,T>
static constexpr bool CompareLess<ValConst,T> = true;
template<int a, class T> requires CompareLess<ValAdd<ValConst,ValConst>,T>
static constexpr bool CompareLess<ValVar<a>,T> = true;
template<class A, class B, class T> requires CompareLess<ValNeg<ValConst>,T>
static constexpr bool CompareLess<ValAdd<A,B>,T> = true;
template<class A, class T> requires CompareLess<ValMult<ValConst,ValConst>,T>
static constexpr bool CompareLess<ValNeg<A>,T> = true;
template<class A>
static constexpr bool CompareLess<A,A> = false;
template<int a, int b>
static constexpr bool CompareLess<ValVar<a>,ValVar<b>> = (a<b);
template<class A, class B, class C, class D> requires CompareLess<A,C>
static constexpr bool CompareLess<ValAdd<A,B>,ValAdd<C,D>> = true;
template<class A, class B, class C> requires CompareLess<B,C>
static constexpr bool CompareLess<ValAdd<A,B>,ValAdd<A,C>> = true;
template<class A, class B> requires CompareLess<A,B>
static constexpr bool CompareLess<ValNeg<A>,ValNeg<B>> = true;
template<class A, class B, class C, class D> requires CompareLess<A,C>
static constexpr bool CompareLess<ValMult<A,B>,ValMult<C,D>> = true;
template<class A, class B, class C> requires CompareLess<B,C>
static constexpr bool CompareLess<ValMult<A,B>,ValMult<A,C>> = true;
template<class A, class B, class C, class D> requires CompareLess<A,C>
static constexpr bool CompareLess<ValDiv<A,B>,ValDiv<C,D>> = true;
template<class A, class B, class C> requires CompareLess<B,C>
static constexpr bool CompareLess<ValDiv<A,B>,ValDiv<A,C>> = true;

template<class T>
static constexpr bool Simplifiable = false;
template<>
static constexpr bool Simplifiable<ValConst> = false;
template<class T> requires (IsConstant<T>&&(!std::is_same_v<T,ValConst>))
static constexpr bool Simplifiable<T> = true;
template<class A, class B, class C> requires (IsConstant<B>)
static constexpr bool Simplifiable<ValAdd<ValAdd<A,B>,C>> = true;
template<class A, class B, class C> requires (IsConstant<B>&&!IsConstant<C>)
static constexpr bool Simplifiable<ValMult<ValMult<A,B>,C>> = true;
template<class A, class B, class C>
static constexpr bool Simplifiable<ValDiv<ValDiv<A,B>,C>> = true;
template<class A, class B, class C>
static constexpr bool Simplifiable<ValDiv<A,ValDiv<B,C>>> = true;
template<class A, class B, class C>
static constexpr bool Simplifiable<ValMult<ValDiv<A,B>,C>> = true;
template<class A, class B, class C>
static constexpr bool Simplifiable<ValMult<A,ValDiv<B,C>>> = true;
template<class A>
static constexpr bool Simplifiable<ValAdd<ValConst,A>> = true;
template<class A>
static constexpr bool Simplifiable<ValMult<ValConst,A>> = true;
template<int id>
static constexpr bool Simplifiable<ValAdd<ValVar<id>,ValVar<id>>> = true;
template<class A, class B> requires (Simplifiable<A>||Simplifiable<B>||CompareLess<A,B>)
static constexpr bool Simplifiable<ValAdd<A,B>> = true;
template<class A> requires (Simplifiable<A>)
static constexpr bool Simplifiable<ValNeg<A>> = true;
template<class A, class B> requires (Simplifiable<A>||Simplifiable<B>||CompareLess<A,B>)
static constexpr bool Simplifiable<ValMult<A,B>> = true;
template<class A, class B> requires ((Simplifiable<A>||Simplifiable<B>))
static constexpr bool Simplifiable<ValDiv<A,B>> = true;
template<class A> requires (!PartConstant<A>)
static constexpr bool Simplifiable<ValAdd<A,A>> = true;
template<class A, class B, class C>
static constexpr bool Simplifiable<ValMult<C,ValAdd<A,B>>> = true;
template<int id>
static constexpr bool Simplifiable<ValAdd<ValMult<ValVar<id>,ValConst>,ValVar<id>>> = true;

template<class T>
auto simplify(T);
template<int id>																				auto simplify(ValVar<id> x) {return x;}
template<>																						auto simplify(ValAdd<ValConst,ValConst> x) {return ValConst(x.a.val+x.b.val);}
template<>																						auto simplify(ValNeg<ValConst> x) {return ValConst(-x.x.val);}
template<>																						auto simplify(ValMult<ValConst,ValConst> x) {return ValConst(x.a.val*x.b.val);}
template<>																						auto simplify(ValDiv<ValConst,ValConst> x) {return ValConst(x.a.val/x.b.val);}
template<class A> requires (!Simplifiable<A>)													auto simplify(A x) {return x;}
template<class A, class B> requires Simplifiable<A>&&(!CompareLess<A,B>)						auto simplify(ValAdd<A,B> x) {return simplify(ValAdd(simplify(x.a),x.b));}
template<class A> requires Simplifiable<A>														auto simplify(ValNeg<A> x) {return simplify(ValNeg(simplify(x.a)));}
template<class A, class B> requires Simplifiable<A>&&(!CompareLess<A,B>)						auto simplify(ValMult<A,B> x) {return simplify(ValMult(simplify(x.a),x.b));}
template<class A, class B> requires Simplifiable<A>												auto simplify(ValDiv<A,B> x) {return simplify(ValDiv(simplify(x.a),x.b));}
template<class A, class B> requires (!Simplifiable<A>&&Simplifiable<B>&&(!CompareLess<A,B>))	auto simplify(ValAdd<A,B> x) {return simplify(ValAdd(x.a,simplify(x.b)));}
template<class A, class B> requires (!Simplifiable<A>&&Simplifiable<B>&&(!CompareLess<A,B>))	auto simplify(ValMult<A,B> x) {return simplify(ValMult(x.a,simplify(x.b)));}
template<class A, class B> requires (!Simplifiable<A>&&Simplifiable<B>)							auto simplify(ValDiv<A,B> x) {return simplify(ValDiv(x.a,simplify(x.b)));}
template<class A, class B, class C> requires (IsConstant<B>&&!IsConstant<C>)					auto simplify(ValAdd<ValAdd<A,B>,C> x) {return simplify(ValAdd(ValAdd(x.a.a,x.b),x.a.b));}
template<class A, class B, class C> requires (IsConstant<B>&&IsConstant<C>)						auto simplify(ValAdd<ValAdd<A,B>,C> x) {return simplify(ValAdd(x.a.a,ValConst(simplify(x.a.b).val+simplify(x.b).val)));}
template<class A, class B, class C> requires (IsConstant<B>&&!IsConstant<C>)					auto simplify(ValMult<ValMult<A,B>,C> x) {return simplify(ValMult(ValMult(x.a.a,x.b),x.a.b));}
template<class A, class B, class C> requires (IsConstant<B>&&IsConstant<C>)						auto simplify(ValMult<ValMult<A,B>,C> x) {return simplify(ValMult(x.a.a,ValConst(simplify(x.a.b).val*simplify(x.b).val)));}
template<class A, class B, class C>																auto simplify(ValDiv<ValDiv<A,B>,C> x) {return simplify(ValDiv(x.a.a,ValMult(x.a.b,x.b)));}
template<class A, class B, class C>																auto simplify(ValDiv<A,ValDiv<A,B>> x) {return simplify(ValDiv(ValMult(x.a,x.b.b),x.b.a));}
template<int id>																				auto simplify(ValAdd<ValVar<id>,ValVar<id>> x) {return simplify(ValMult(x.a,ValConst(2)));}
template<int id>																				auto simplify(ValAdd<ValMult<ValVar<id>,ValConst>,ValVar<id>> x) {return simplify(ValMult(x.b,ValConst(x.a.b.val+1)));}
template<class A, class B, class C, class D>													auto simplify(ValAdd<ValMult<B,D>,ValAdd<ValMult<B,C>,A>> x) {return simplify(ValAdd(ValAdd(x.a.b,x.b),x.a.a));}
template<class A, class B, class C, class D>													auto simplify(ValAdd<ValMult<B,D>,ValAdd<A,ValMult<B,C>>> x) {return simplify(ValAdd(ValAdd(x.a.b,x.b),x.a.a));}
template<class A, class B, class C, class D>													auto simplify(ValAdd<ValMult<D,B>,ValAdd<ValMult<B,C>,A>> x) {return simplify(ValAdd(ValAdd(x.a.b,x.b),x.a.a));}
template<class A, class B, class C, class D>													auto simplify(ValAdd<ValMult<D,B>,ValAdd<A,ValMult<B,C>>> x) {return simplify(ValAdd(ValAdd(x.a.b,x.b),x.a.a));}
template<class A, class B> requires CompareLess<A,B>											auto simplify(ValAdd<A,B> x) {return simplify(ValAdd(x.b,x.a));}
template<class A, class B> requires CompareLess<A,B>											auto simplify(ValMult<A,B> x) {return simplify(ValMult(x.b,x.a));}
template<class A, class B, class C>																auto simplify(ValMult<C,ValAdd<A,B>> x) {return simplify(ValAdd(ValMult(x.a,x.b.a),ValMult(x.a,x.b.a)));}
template<class A, class B, class C> requires (!IsValAdd<C>)										auto simplify(ValMult<ValAdd<A,B>,C> x) {return simplify(ValAdd(ValMult(x.b,x.a.a),ValMult(x.b,x.a.a)));}
template<class A> requires (!PartConstant<A>)													auto simplify(ValAdd<A,A> x) {return simplify(ValMult(x.a,ValConst(2)));}
template<class A> requires (!PartConstant<A>)													auto simplify(ValAdd<ValMult<A,ValConst>,ValMult<A,ValConst>> x) {return simplify(ValMult(x.a.a,ValConst(x.a.b.val+x.b.b.val)));}

int main() {
	ValConst a = 0;
	ValConst b = 1;
	ValVar<1> c;
	auto d = ValAdd(ValMult(a,b),c);
	auto e = ValAdd(ValMult(b,c),d);
	auto f = ValAdd(ValMult(c,d),e);
	auto g = ValAdd(ValMult(d,e),f);
	auto h = ValAdd(ValMult(e,f),g);
	auto i = simplify(h);
	auto j = Simplifiable<decltype(i)>;
	std::cout << j;
	return 0;
}"
YxzCU2rf,HorrorVale - Item Unsort,SSTrihan,Ruby,Monday 27th of November 2023 05:43:02 PM CDT,"#-------------------------------------------------------------------------------
# Don't remove this header!
#-------------------------------------------------------------------------------
# Item Unsort
# by Trihan
# 
# Version : 1.0
#
# This script is commissioned by Batworks Software.
#-------------------------------------------------------------------------------
 
#-------------------------------------------------------------------------------
# Version History
#-------------------------------------------------------------------------------
# 1.0 - Initial script.
#-------------------------------------------------------------------------------
 
#-------------------------------------------------------------------------------
# This script removes the sorting of items/equipment in favour of arranging them
# in the order they were obtained.
#-------------------------------------------------------------------------------

class Game_Party < Game_Unit
  alias :tlb_itemsort_initialize :initialize
  def initialize
    tlb_itemsort_initialize
    @item_timestamps = {}
    @weapon_timestamps = {}
    @armor_timestamps = {}
  end
  
  alias :tlb_itemsort_gain_item :gain_item
  def gain_item(item, amount, include_equip = false)
    tlb_itemsort_gain_item(item, amount, include_equip)
    container = item_container(item.class)
    return unless container
    t_container = timestamp_container(item.class)
    return unless t_container
    if !container[item.id]
      t_container.delete(item.id)
    else
      return if t_container[item.id]
      t_container[item.id] = Graphics.frame_count
    end
  end
  
  def timestamp_container(item_class)
    return @item_timestamps   if item_class == RPG::Item
    return @weapon_timestamps if item_class == RPG::Weapon
    return @armor_timestamps  if item_class == RPG::Armor
    return nil
  end
  
  def items
    @item_timestamps = {} if !@item_timestamps
    @items.keys.sort.sort_by {|id| @item_timestamps[id] }.collect {|id| $data_items[id] }
  end

  def weapons
    @weapon_timestamps = {} if !@weapon_timestamps
    @weapons.keys.sort.sort_by {|id| @weapon_timestamps[id] }.collect {|id| $data_weapons[id] }
  end
  
  def armors
    @armor_timestamps = {} if !@armor_timestamps
    @armors.keys.sort.sort_by {|id| @armor_timestamps[id] }.collect {|id| $data_armors[id] }
  end
end"
zhtED2Ri,Untitled,imKobz,Bash,Monday 27th of November 2023 04:35:56 PM CDT,"#!/bin/bash

# Run as root
[[ ""$(whoami)"" != ""root"" ]] && {
    echo -e ""\033[1;33m[\033[1;31mErro\033[1;33m] \033[1;37m- \033[1;33myou need to run as root\033[0m""
    rm /home/ubuntu/install.sh &>/dev/null
    exit 0
}

#=== setup ===
cd 
rm -rf /root/udp
mkdir -p /root/udp
rm -rf /etc/UDPCustom
mkdir -p /etc/UDPCustom
sudo touch /etc/UDPCustom/udp-custom
udp_dir='/etc/UDPCustom'
udp_file='/etc/UDPCustom/udp-custom'

sudo apt update -y
sudo apt upgrade -y
sudo apt install -y wget
sudo apt install -y curl
sudo apt install -y dos2unix
sudo apt install -y neofetch figlet

source <(curl -sSL 'https://raw.githubusercontent.com/ndhet/MULTI-PORT/main/udp/module/module')

time_reboot() {
  print_center -ama ""${a92:-System/Server Reboot In} $1 ${a93:-Seconds}""
  REBOOT_TIMEOUT=""$1""

  while [ $REBOOT_TIMEOUT -gt 0 ]; do
    print_center -ne ""-$REBOOT_TIMEOUT-\r""
    sleep 1
    : $((REBOOT_TIMEOUT--))
  done
  rm /home/ubuntu/install.sh
  echo -e ""\033[01;31m\033[1;33m More Updates, Follow Us On \033[1;31m(\033[1;36mTelegram\033[1;31m): \033[1;37m@voltssh\033[0m""
  reboot
}

# Check Ubuntu version
if [ ""$(lsb_release -rs)"" = ""8*|9*|10*|11*|16.04*|18.04*"" ]; then
  clear
  print_center -ama -e ""\e[1m\e[31m=====================================================\e[0m""
  print_center -ama -e ""\e[1m\e[33m${a94:-this script is not compatible with your operating system}\e[0m""
  print_center -ama -e ""\e[1m\e[33m ${a95:-Use Ubuntu 20 or higher}\e[0m""
  print_center -ama -e ""\e[1m\e[31m=====================================================\e[0m""
  rm /home/ubuntu/install.sh
  exit 1
else
  clear
  echo """"
  print_center -ama ""A Compatible OS/Environment Found""
  print_center -ama "" ⇢ Installation begins...! <""
  sleep 3

    # [change timezone to UTC +0]
  echo """"
  echo "" ⇢ Change timezone to UTC +0""
  echo "" ⇢ for Asia/Jakarta [GH] GMT +00:00""
  ln -fs /usr/share/zoneinfo/Asia/Jakarta /etc/localtime
  sleep 3

  # [+clean up+]
  rm -rf $udp_file &>/dev/null
  # rm -rf /etc/UDPCustom/udp-request &>/dev/null
  rm -rf /usr/bin/udp-request &>/dev/null
  rm -rf /etc/limiter.sh &>/dev/null
  rm -rf /etc/UDPCustom/limiter.sh &>/dev/null
  rm -rf /etc/UDPCustom/module &>/dev/null
  rm -rf /usr/bin/udp &>/dev/null
  rm -rf /etc/UDPCustom/udpgw.service &>/dev/null
  rm -rf /etc/udpgw.service &>/dev/null
  systemctl stop udpgw &>/dev/null
  # systemctl stop udp-custom &>/dev/null
  systemctl stop udp-request &>/dev/null

 # [+get files ⇣⇣⇣+]
  source <(curl -sSL 'https://raw.githubusercontent.com/ndhet/MULTI-PORT/main/udp/module/module') &>/dev/null
  wget -O /etc/UDPCustom/module 'https://raw.githubusercontent.com/ndhet/MULTI-PORT/main/udp/module/module' &>/dev/null
  chmod +x /etc/UDPCustom/module

  # wget ""https://raw.githubusercontent.com/ndhet/MULTI-PORT/main/udp/bin/udp-custom-linux-amd64"" -O /root/udp/udp-custom &>/dev/null
  wget ""https://raw.githubusercontent.com/ndhet/MULTI-PORT/main/udp/bin/udp-request-linux-amd64"" -O /usr/bin/udp-request &>/dev/null
  chmod +x /root/udp/udp-custom
  # chmod +x /usr/bin/udp-request

  wget -O /etc/limiter.sh 'https://raw.githubusercontent.com/ndhet/MULTI-PORT/main/udp/module/limiter.sh'
  cp /etc/limiter.sh /etc/UDPCustom
  chmod +x /etc/limiter.sh
  chmod +x /etc/UDPCustom
  
  # [+udpgw+]
  wget -O /etc/udpgw 'https://raw.githubusercontent.com/ndhet/MULTI-PORT/main/udp/module/udpgw'
  mv /etc/udpgw /bin
  chmod +x /bin/udpgw

  # [+service+]
  wget -O /etc/udpgw.service 'https://raw.githubusercontent.com/ndhet/MULTI-PORT/main/udp/config/udpgw.service'
  wget -O /etc/udp-request.service 'https://raw.githubusercontent.com/ndhet/MULTI-PORT/main/udp/config/udp-request.service'
  
  mv /etc/udpgw.service /etc/systemd/system
  mv /etc/udp-request.service /etc/systemd/system

  chmod 640 /etc/systemd/system/udpgw.service
  chmod 640 /etc/systemd/system/udp-custom.service
  
  systemctl daemon-reload &>/dev/null
  systemctl enable udpgw &>/dev/null
  systemctl start udpgw &>/dev/null
  systemctl enable udp-request &>/dev/null
  systemctl start udp-request &>/dev/null

  # [+config+]
  wget ""https://raw.githubusercontent.com/ndhet/MULTI-PORT/main/udp/config/config.json"" -O /root/udp/config.json &>/dev/null
  chmod +x /root/udp/config.json

  # [+menu+]
  wget -O /usr/bin/udp 'https://raw.githubusercontent.com/ndhet/MULTI-PORT/main/udp/module/udp' 
  chmod +x /usr/bin/udp
  ufw disable &>/dev/null
  sudo apt-get remove --purge ufw firewalld -y
  apt remove netfilter-persistent -y
  clear
  echo """"
  echo """"
  print_center -ama ""${a103:-setting up, please wait...}""
  sleep 3
  title ""${a102:-Installation Successful}""
  print_center -ama ""${a103:-  To show menu type: \nudp\n}""
  msg -bar
  time_reboot 5
fi"
GX5XzS0G,LCG,Kaelygon,C,Monday 27th of November 2023 04:24:39 PM CDT,"//./noise | dieharder -B -g 200 -a

#include <stdio.h>
#include <stdint.h>

uint64_t shuffle(uint64_t num){
	uint64_t buf=num;

	num = (num >> 41) | (num << 23);
	num += buf*131 + 13238717;

	return num;
}

int main() {
	uint64_t seed = 696942069699; 

	while(1){
		seed=shuffle(seed);
		fwrite(&seed, sizeof(uint64_t), 1, stdout);
	}

    return 0;
}
"
GLgE9yGP,streaming directly from libcamera-vid,sroller,Bash,Monday 27th of November 2023 04:18:58 PM CDT, libcamera-vid -t 0 --width 1920 --height 1080 -q 100 -n --codec h264 --inline -g 50 --listen -o tcp://0.0.0.0:8000
K3tY7uh1,Jillian Faulls - footer sub nav fix,janusivan,CSS,Monday 27th of November 2023 04:10:29 PM CDT,"#global-footer .sub-nav-container {
        pointer-events: none;
}
#global-footer .sub-nav {
    pointer-events: all;
}"
eebrBa4n,Type Bot,182days,Python,Monday 27th of November 2023 03:59:59 PM CDT,"import pyautogui
import time
import keyboard

time.sleep(5)
TicketEverything = ""Just a gentle reminder to create a ticket for any support you give to users.""
UnassignedTickets = ""Also please watch the unassigned tickets coming from Level 1 and assign them to whomever you feel best suited to resolve them.""
UpdateTickets = ""Finally, review your current tickets and update with the latest progress to keep the users and the team updated.""

pyautogui.typewrite(TicketEverything)
pyautogui.hotkey('enter')
time.sleep(10)
pyautogui.typewrite(UnassignedTickets)
pyautogui.hotkey('enter')
time.sleep(10)
pyautogui.typewrite(UpdateTickets)
pyautogui.hotkey('enter')"
EbH7vueG,Untitled,sissou123,Python,Monday 27th of November 2023 03:56:29 PM CDT,"Python for Machine Learning & Data Science Masterclass
Learn about Data Science and Machine Learning with Python! Including Numpy, Pandas, Matplotlib, Scikit-Learn and more!
for more:https://dz4link.com/3z4RHn"
GwYqtEXC,Untitled,sissou123,Python,Monday 27th of November 2023 03:53:04 PM CDT,"Python for Data Science and Machine Learning Bootcamp
Learn how to use NumPy, Pandas, Seaborn , Matplotlib , Plotly , Scikit-Learn , Machine Learning, Tensorflow , and more!
for more:https://dz4link.com/6Zk7"
85BGHLJp,Untitled,sissou123,Python,Monday 27th of November 2023 03:48:01 PM CDT,"The Complete 2023 Web Development Bootcamp
Become a Full-Stack Web Developer with just ONE course. HTML, CSS, Javascript, Node, React, PostgreSQL, Web3 and DApps
for more:https://cuty.io/tmyJ1E3zMFX"
jWP4MAMd,Untitled,sissou123,Python,Monday 27th of November 2023 03:44:32 PM CDT,"Automate the Boring Stuff with Python Programming
A practical programming course for office workers, academics, and administrators who want to improve their productivity.

for more :https://cuty.io/EZW0qca"
q3YdkWTT,wp-config.php,katubug,PHP,Monday 27th of November 2023 03:18:04 PM CDT,"<?php
define( 'WP_CACHE', true );
























/**
 * The base configuration for WordPress
 *
 * The wp-config.php creation script uses this file during the installation.
 * You don't have to use the web site, you can copy this file to ""wp-config.php""
 * and fill in the values.
 *
 * This file contains the following configurations:
 *
 * * Database settings
 * * Secret keys
 * * Database table prefix
 * * ABSPATH
 *
 * @link https://wordpress.org/documentation/article/editing-wp-config-php/
 *
 * @package WordPress
 */

// ** Database settings - You can get this info from your web host ** //
/** The name of the database for WordPress */
define( 'DB_NAME', 'applesim_wbc' );

/** Database username */
define( 'DB_USER', 'applesim_wbc' );

/** Database password */
define( 'DB_PASSWORD', 's!7h.S[6-f2[paYj' );

/** Database hostname */
define( 'DB_HOST', 'localhost' );

/** Database charset to use in creating database tables. */
define( 'DB_CHARSET', 'utf8' );

/** The database collate type. Don't change this if in doubt. */
define( 'DB_COLLATE', '' );

/**#@+
 * Authentication unique keys and salts.
 *
 * Change these to different unique phrases! You can generate these using
 * the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service}.
 *
 * You can change these at any point in time to invalidate all existing cookies.
 * This will force all users to have to log in again.
 *
 * @since 2.6.0
 */
define( 'AUTH_KEY',         'nackhisf4qvot3z7zkrzfqzndvevbwwzjwyvpxmccqkho1hdoo4dawz15zxa4rob' );
define( 'SECURE_AUTH_KEY',  'umsrivmafknaixvn21qtf528q8cxxn9dmtba3iv9rxuebpvxywwrnjgkotmjvzfc' );
define( 'LOGGED_IN_KEY',    't2gfupndhw0os1tkxphfvzdenwg4ypwst18qtzgfapo5rygaswincyt9yexjez99' );
define( 'NONCE_KEY',        'nkhsqrq7pumen6mfynsxaftnigz8qwpwcljtuoyk0zsrctyy5v671abycafkyotb' );
define( 'AUTH_SALT',        '59dqxuhviwxz9ktdocwgtllgcz9j4deo4oqlbecpthblmtstbrlzp0qwamwnireg' );
define( 'SECURE_AUTH_SALT', 'efljmnrngnfzyv8pooyxyel8lfnb4pi1uaolehwziqffolg9pvglpdcop5ybvt2d' );
define( 'LOGGED_IN_SALT',   '9gyffgown23isg1si7knbsdaigtyongplpywl4qssyyyggzo0gimpk6h6mlbpqbl' );
define( 'NONCE_SALT',       'sqwmc6j9k9tvyh66mgh3ptihqv6x1my5ts92cb9pssukqxrzk00a3o9e4pcp26yy' );

/**#@-*/

/**
 * WordPress database table prefix.
 *
 * You can have multiple installations in one database if you give each
 * a unique prefix. Only numbers, letters, and underscores please!
 */
$table_prefix = 'wbcjs_';

/**
 * For developers: WordPress debugging mode.
 *
 * Change this to true to enable the display of notices during development.
 * It is strongly recommended that plugin and theme developers use WP_DEBUG
 * in their development environments.
 *
 * For information on other constants that can be used for debugging,
 * visit the documentation.
 *
 * @link https://wordpress.org/documentation/article/debugging-in-wordpress/
 */
/*define( 'WP_DEBUG', false );*/

/* Add any custom values between this line and the ""stop editing"" line. */



/* That's all, stop editing! Happy publishing. */

/** Absolute path to the WordPress directory. */
if ( ! defined( 'ABSPATH' ) ) {
	define( 'ABSPATH', __DIR__ . '/' );
}

/** Sets up WordPress vars and included files. */
require_once ABSPATH . 'wp-settings.php';

/* Enable debugging (deactivate this later) */
define( 'WP_DEBUG', true );
define( 'WP_DEBUG_LOG', true );
define( 'WP_DEBUG_DISPLAY', false );"
rGZZUMSC,Untitled,Mysoft,FreeBasic,Monday 27th of November 2023 03:14:46 PM CDT,"type MyData
  redim Arr(0) as integer
end type

redim as MyData MyArray(30)

sub AddItem( Arr() as integer  )
  redim Arr(50)
end sub

AddItem( MyArray(0).Arr() )

print ubound(MyArray(0).Arr)
sleep
"
arJNZSC0,Untitled,Mysoft,FreeBasic,Monday 27th of November 2023 03:13:05 PM CDT,"type MyData
  redim Arr(0) as integer
end type

redim as MyData MyArray(50)

with MyArray(0)
  redim .Arr(50)  
end with

print ubound(MyArray(0).Arr)
sleep
"
JjK6q3s4,"Lab #1(var 4, string check)",anticlown,C++,Monday 27th of November 2023 02:54:47 PM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <string>

/*      task type start     */
enum TcharType { ctUnknown, ctDiskName, ctColon, ctBackslash, ctCorrectSymbol, ctEndOfString };
typedef int Tstate;

const Tstate transitions[5][6] = {
    {0, 0, 0, 0, 0, 0},  // Состояние «Ошибка»
    {0, 2, 0, 0, 0, 0},  // Состояние «Прочитано: Ничего. Ожидается: Имя диска»
    {0, 0, 3, 0, 0, 0},  // Состояние «Прочитано: Имя диска. Ожидается: Двоеточие»
    {0, 0, 0, 4, 3, 0},  // Состояние «Прочитано: Двоеточие/Корректный символ. Ожидается: Обратный слэш»
    {0, 0, 0, 4, 4, 0}   // Состояние «Прочитано: Обратный слэш/Корректный символ. Ожидается: Корректный символ или конец строки»
};

const bool isFinalState[5] = { false, false, false, false, true };
/*      task type end     */

/*      task type methods start     */
TcharType getCharType(char charToCheck, int counter) {
    if (counter == 0 && charToCheck >= 'A' && charToCheck <= 'Z') return ctDiskName;
    //else
    //    switch (charToCheck)
    //    {
    //        case ':': return ctColon;
    //        case '\\': return ctBackslash;
    //        case '!'...')': 
    //        case '+'...'.': 
    //        case '0'...'9': 
    //        case '?'...'[': //включает A-Z
    //        case ']'...'{': //включает a-z
    //        case '}'...'~': return ctColon; //включает a-z
    //        default:
    //            std::cout << ""Символ "" << charToCheck << "" не является корректным!\n"";
    //            return ctUnknown;
    //    }
    if (charToCheck == ':') return ctColon;
    if (charToCheck == '\\') return ctBackslash;
    if ((charToCheck >= 'a' && charToCheck <= 'z') || charToCheck == '-' || charToCheck == '+' || charToCheck == '@' || charToCheck == '#' || charToCheck == '$' || charToCheck == '%' || charToCheck == '^' || charToCheck == '_' || charToCheck == '(' || charToCheck == ')' || charToCheck == '{' || charToCheck == '}' || charToCheck == '""' || charToCheck == '.' || charToCheck == ',') return ctCorrectSymbol;

    return ctUnknown;
}

bool checkString(const std::string& inputString) {
    Tstate state = 1;
    for (int i = 0; i < inputString.length(); ++i) {
        state = transitions[state][getCharType(inputString[i], i)];
    }
    return isFinalState[state];
}

void findSubstring(const std::string& inputString) {
    Tstate state = 1;
    Tstate previousState = 1;
    int counter = 0;
    int j = -1;

    for (int i = 0; i < inputString.length(); ++i) {
        previousState = state;
        ++j;
        state = transitions[state][getCharType(inputString[i], j)];
        if (state == 0 && previousState == 4) {
            ++counter;
            state = 1;
            j = -1;
            continue;
        }
        else
            if (state == 0)
            {
                state = 1;
                j = -1;
                continue;
            }
    }
    if (previousState == 4)
        ++counter;
    std::cout << ""Найдено подстрок: "" << counter << std::endl;
}
/*      task type methods end     */

/*      print methods start     */
void printTaskInfo() {
    std::cout << ""\tДанная программа проверяет введенную строку на соответствие классическую абсолютному пути к файлу в Windows.\n"";
    std::cout << ""\t\tДля взаимодействия с программой используйте пукнты меню.\n"";
}

void printMenuOptions() {
    std::cout << ""\n\t\t\tМеню\n0. Выйти из программы\n1. Проверить строку на соответствие шаблону\n2. Найти в исходной строке все подстроки, удовлетворяющие шаблону\n"";
}
/*      print methods end     */

int main() {
    setlocale(LC_ALL, ""Rus"");
    std::string Path;
    bool IsCorrect;

    printTaskInfo();
    printMenuOptions();

    int choice = 1;
    while (choice) {
        std::cout << ""\nВыберите один из пунктов меню: "";
        std::cin >> choice;
        switch (choice) {
            case 0:
                std::cout << ""\n\t\tРабота с программой успешно завершена.\n"";
                break;
            case 1:
                std::cout << ""\n\t\tВы выбрали: проверить соответствие строки шаблону пути.\n\n"";
                std::cout << ""Введите путь к файлу(формат пути: D:\\<каталог>\\<названиие файла с расширением или без>):\n"";
                std::cin >> Path;
                IsCorrect = checkString(Path);
                std::cout << ((IsCorrect == true) ? ""Введенный путь - корректный"" : ""Введенный путь - некорректный"") << std::endl;
                break;
            case 2:
                std::cout << ""\n\t\tВы выбрали: найти все подстроки в произвольной строке, соответствующие шаблону.\n\n"";
                std::cout << ""\nВведите строку для анализа: "";
                std::getline(std::cin, Path);
                std::getline(std::cin, Path);
                findSubstring(Path);
                break;
            default:
                std::cout << ""Неверный ввод!\n"";
                break;
        }
    }
    return 0;
}"
TXAEuLVg,SecurityConfig.java,SneakyElf,Java,Monday 27th of November 2023 02:43:22 PM CDT,"package com.example.moviesandbooksrecommendationsservice.security;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class SecurityConfig {

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http
                .authorizeHttpRequests(auth -> auth
                        .requestMatchers(""/secure/**"").authenticated()
                        .anyRequest().permitAll()
                )
                .oauth2Login(Customizer.withDefaults())
                .logout(logout -> logout
                        .logoutUrl(""/logout"")
                        .logoutSuccessUrl(""/main"")
                        .invalidateHttpSession(true)
                );

        return http.build();
    }
}"
VHwK2DeG,Untitled,zudaR,C++,Monday 27th of November 2023 02:36:24 PM CDT,"#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <fstream>
#include <cstring> // для функции strcpy

struct registration
{
    char login[16];
    char password[16];
};

registration* baseOfLogins = new registration[100]; // Предполагаем, что у вас есть массив фиксированной длины

void readLoginData()
{
    std::ifstream fileInput(""Register.txt"");
    char inputBuffer[40];
    int count = 0;

    if (fileInput.is_open())
    {
        while (fileInput.getline(inputBuffer, 40))
        {
            char* token = strtok(inputBuffer, "":"");
            while (token != nullptr && count < 100)
            {
                strncpy(baseOfLogins[count].login, token, 15);
                baseOfLogins[count].login[15] = '\0'; // Убедимся, что строка завершена
                token = strtok(nullptr, "":"");
                if (token != nullptr)
                {
                    strncpy(baseOfLogins[count].password, token, 15);
                    baseOfLogins[count].password[15] = '\0'; // Убедимся, что строка завершена
                    token = strtok(nullptr, "":"");
                    count++;
                }
            }
        }
        fileInput.close();
    }
}

int main()
{
    readLoginData();

    // Для проверки, выведем содержимое базы логинов и паролей
    for (int i = 0; i < 100; ++i)
    {
        std::cout << ""Login: "" << baseOfLogins[i].login << "", Password: "" << baseOfLogins[i].password << std::endl;
    }

    delete[] baseOfLogins; // Не забудьте освободить выделенную память
    return 0;
}"
fudc48KV,Fancy Barcodes,Pijomir,JavaScript,Monday 27th of November 2023 02:32:50 PM CDT,"function checkBarcodes(input) {
    let barcodeCount = Number(input.shift());
    let barcodesToCheck = input.slice(0, barcodeCount);
    let validBarcodePattern = /@#+[A-Z][A-Za-z\d]{4,}[A-Z]@#+/;
    let digitsPattern = /\d/g;
    barcodesToCheck.forEach(barcode => {
        if (!barcode.match(validBarcodePattern)) {
            console.log('Invalid barcode');
        } else {
            let currentBarcode = barcode.match(digitsPattern)
            if (currentBarcode === null) {
                console.log('Product group: 00');
            } else {
                console.log(`Product group: ${currentBarcode.join('')}`);
            }
        }
    });
}"
ugaZScha,lab9,andreerival,Python,Monday 27th of November 2023 02:25:34 PM CDT,"import random
import math
import matplotlib.pyplot as plt
import numpy as np
from tqdm import tqdm
import os

def easom_function(x):
    # Easom solo funciona en 2 dimensiones
    if len(x) != 2:
        raise(ValueError, ""Easom takes exactly two values"")
    return -math.cos(x[0]) * math.cos(x[1]) * math.exp(-(x[0] - math.pi)**2 - (x[1] - math.pi)**2)

def shubert_function(x):
    # Shubert solo funciona en 2 dimensiones
    if len(x) != 2:
        raise(ValueError, ""Shubert takes exactly two values"")
    term1 = 0
    term2 = 0
    for i in range(1, 6):
        term1 += i * math.cos((i + 1) * x[0] + i)
        term2 += i * math.cos((i + 1) * x[1] + i)
    result = term1 * term2
    return result

# Rosenbrock funciona en varias dimensiones, pero nuestro algoritmo solo puede manejar 2
def rosenbrock_function(x):
    add = 0
    for i in range(len(x)-1):
        add += 100 * (x[i + 1] - x[i]**2)**2 + (1 - x[i])**2
    return add

def algoritmo_ABC(function, num_abejas, max_iterations, lower_bound, upper_bound, objective_minimum, tolerancy, limit):
    # Inicialización
    bees = np.random.uniform(lower_bound, upper_bound, (num_abejas, 2))
    values = [function(pos) for pos in bees]
    fitness = [calc_fit(value) for value in values]
    trial = [0] * num_abejas
    best_value = float('inf')

    for iteration in range(max_iterations):
        # ===> PRIMERA FASE: EMPLOYED <===
        for i in range(num_abejas):

            # Elegimos variable a intercambiar
            variable = random.randint(0,1)
            # Elejimos compañero
            partner = i
            # No puede emparejarse consigo mismo
            while partner == i:
                partner = random.randint(0, num_abejas - 1)
            
            # Intercambio de variable
            x_new = lower_bound - 1
            while (x_new < lower_bound or x_new > upper_bound):
                tetha = random.uniform(-1, 1)
                x_new = bees[i][variable] + tetha * (bees[i][variable] - bees[partner][variable])

            # Greedy Selection
            bee_new = bees[i].copy()
            bee_new[variable] = x_new
            new_fit = calc_fit(function(bee_new))
            if fitness[i] <= new_fit:
                trial[i] += 1
            else:
                bees[i][variable] = x_new
                fitness[i] = new_fit
                values[i] = function(bees[i])
                trial[i] = 0

        # ===> SEGUNDA FASE: ONLOOKER <===

        # Calculamos probabilidades
        probabilities = []
        sum_fit = sum(fitness)
        for fit in fitness:
            probabilities.append(fit/sum_fit)

        # Aplicamos Onlooker segun probabilidades
        for i in range(num_abejas):
            rand = random.uniform(0,1)
            if rand < probabilities[i]:
                # Elegimos variable a intercambiar
                variable = random.randint(0,1)
                # Elejimos compañero
                partner = i
                # No puede emparejarse consigo mismo
                while partner == i:
                    partner = random.randint(0, num_abejas - 1)
                
                # Intercambio de variable
                x_new = lower_bound - 1
                while (x_new < lower_bound or x_new > upper_bound):
                    tetha = random.uniform(-1, 1)
                    x_new = bees[i][variable] + tetha * (bees[i][variable] - bees[partner][variable])

                # Greedy Selection
                bee_new = bees[i].copy()
                bee_new[variable] = x_new
                new_fit = calc_fit(function(bee_new))
                if fitness[i] <= new_fit:
                    trial[i] += 1
                else:
                    bees[i][variable] = x_new
                    fitness[i] = new_fit
                    values[i] = function(bees[i])
                    trial[i] = 0

        # Memorizamos mejor solucion (minimizar)
        best_index = np.argmin(values)
        if values[best_index] < best_value:
            best_position = bees[best_index]
            best_value = values[best_index]
            
        # Criterio de Parada
        if abs(best_value - objective_minimum) <= tolerancy:
            return True, iteration + 1, best_value, best_position
        
        # ===> TERCERA FASE: SCOUT <===

        for i in range(num_abejas):
            if trial[i] > limit:
                bees[i] = np.random.uniform(lower_bound, upper_bound)
                values[i] = function(bees[i])
                fitness[i] = calc_fit(values[i])
                
    return False, max_iterations, best_value, best_position

def calc_fit(value):
    if value >= 0:
        fit = 1 / (1 + value)
    else:
        fit = 1 + abs(value)
    return fit

def mean(list):
    """"""
    Recibe una lista de el numero de iteraciones realizadas en cada ejecución.
    Devuelve el promedio
    """"""
    add = 0
    for elem in list:
        add += elem
    return add / len(list)

def std(lista):
    """"""
    Calcula la desviación estandar
    Recibe una lista del numero de iteraciones que realizo cada ejecución

    La desviación estandar indica que tanto se dispersan los valores de la media
    Una desviacion baja indica que la mayoria de los valores estan cerca de la media
    Una desviacion alta indica que la mayoria de los valores estan lejos de la media
    """"""
    n = len(lista)
    if n < 2:
        return 0  # La desviación estándar no se puede calcular con menos de dos elementos

    media = sum(lista) / n
    suma_de_cuadrados = sum((x - media) ** 2 for x in lista)
    desviacion_estandar = (suma_de_cuadrados / (n - 1)) ** 0.5
    return desviacion_estandar

def printTable(database):
    """"""
    Imprime la tabla de resultados

    Ejemplo:

    |  Funcion     |        PSO        |
    |--------------|-------------------|
    |  easom       |   120 ± 120 (90%) |
    |  shubert     |   450 ± 100 (80%) |
    |  rosenbrock  |   211 ± 250 (82%) |

    Los resultados se interpretan de la siguiente manera

    <Funcion>  |  <Promedio de iteraciones> ± <Desviacion estandar> (<Porcentaje de exito>%)
    """"""
    print(""-"" * 38)
    print(f""| {'Función':^12} | {'PSO':^19} |"")
    print(""-"" * 38)

    for funcion, datos in database:
        print(f""| {funcion:^12} | {datos:^19} |"")
    print(""-"" * 38)

""""""
====================================
====> CONFIGURACIONES GLOBALES <====
====================================
""""""

number_of_bees = 500
max_iterations = 2000
epsilon = 1e-2
executions = 50
limit = 3

""""""
====================================
==> Configuraciones de funciones <==
====================================
""""""
functions = []
easom = {
    'name': 'easom',
    'function': easom_function,
    'objective_minimum': -1,
    'lower_bound': -100,
    'upper_bound': 100,
    'dimensions': 2,
    'presition': epsilon
}

shubert = {
    'name': 'shubert',
    'function': shubert_function,
    'objective_minimum': -186.7309,
    'lower_bound': -10,
    'upper_bound': 10,
    'dimensions': 2,
    'presition': 0.1
}

rosenbrock = {
    'name': 'rosenbrock',
    'function': rosenbrock_function,
    'objective_minimum': 0,
    'lower_bound': 0,
    'upper_bound': 2,
    'dimensions': 2,
    'presition': epsilon
}

functions.append(easom)
functions.append(shubert)
functions.append(rosenbrock)

# Imprime detalles de la configuracion

print(""="" * 40)
print(""\t    Using..."")
print(f""\t{number_of_bees} abejas"")
print(f""\t{max_iterations} iteraciones maximas"")
print(f""\t{executions} ejecuciones"")
print(f""\t{epsilon} de precision"")
print(""="" * 40)
results = []

# Crea un directorio para guardar las gráficas si no existe
output_directory = 'graphs'
os.makedirs(output_directory, exist_ok=True)

# Lista para guardar los mejores valores
best_values = {
    'easom': float('inf'),
    'shubert': float('inf'),
    'rosenbrock': float('inf'),
}

for funct in functions:
    # Inicializa una lista para guardar las mejores posiciones de cada iteración
    best_positions_history = []

    # Crea una barra de progreso
    progress_bar = tqdm(total=executions, desc=funct['name'])

    # Contador de ejecuciones correctas
    correct_executions = 0

    # Lista para guardar el numero de iteraciones realizadas en cada ejecucion
    iterations = []

    # Ejecuta el algoritmo tantas veces como lo indica la variable 'executions'
    for execution in range(executions):
        achieved, iteration, best_value, best_position = algoritmo_ABC(funct['function'], number_of_bees, max_iterations, funct['lower_bound'], funct['upper_bound'], funct['objective_minimum'], funct['presition'], limit)
        if achieved:
            correct_executions += 1
        if best_value < best_values[funct['name']]:
            best_values[funct['name']] = best_value
        iterations.append(iteration)
        progress_bar.update(1)

        # Guarda las mejores posiciones en cada iteración
        best_positions_history.append(best_position)

    # Cierra la barra de progreso
    progress_bar.close()

    # Anexamos resultados
    success_rate = (correct_executions * 100) / executions
    prom = mean(iterations)
    deviation = std(iterations)
    results.append((funct['name'], f""{int(prom)} ± {int(deviation)} ({success_rate}%)""))


    # Crea una gráfica para mostrar la evolución de la mejor posición para la función actual
    plt.figure()
    plt.xlabel('X')
    plt.ylabel('Y')
    plt.title(f'Evolución de la mejor posición para {funct[""name""]}')

    for i, best_position in enumerate(best_positions_history):
        x = best_position[0]  # Accede al valor x de la iteración actual
        y = best_position[1]  # Accede al valor y de la iteración actual
        plt.plot(x, y, '-o', label=f'Iteración {i + 1}', color='black', alpha=0.2)

    # Guarda la gráfica compuesta en un archivo PNG de alta calidad
    output_file = os.path.join(output_directory, f'{funct[""name""]}_evolution.png')
    plt.savefig(output_file, dpi=300, bbox_inches='tight')
    plt.close()

print("""")
# Imprime la tabla de resultados
printTable(results)
# Imprime el mejor valor obtenido en cada funcion
print(f""Mejor valor de Easom: {best_values['easom']}"")
print(f""Mejor valor de Shubert: {best_values['shubert']}"")
print(f""Mejor valor de Rosenbrock: {best_values['rosenbrock']}"")"
2w0fQwbz,list_map.rs,phicr,Rust,Monday 27th of November 2023 02:09:59 PM CDT,"use super::*;
pub use value_struct::*;

pub trait ListMap<S>: List {
  type Result<U: 'static>: List;
}

impl<S> ListMap<S> for Empty {
  type Result<U: 'static> = Self;
}

impl<S, T: 'static> ListMap<S> for TypedEmpty<T> {
  type Result<U: 'static> = TypedEmpty<U>;
}

impl<S> ListMap<S> for ListError {
  type Result<U: 'static> = Self;
}

impl<S, T: 'static> ListMap<S> for TypedListError<T> {
  type Result<U: 'static> = TypedListError<U>;
}

pub macro let_list_map {
  ($(type $name: ident = ($($t:tt)*)($L: ty);)*) => {
    $(
      let_list_map_sing! {
        type $name = ($($t)*)($L);
      }
    )*
  }
}

pub macro let_list_map_sing {
  (type $name: ident = (|$arg: ident| $x: expr)($L: ty);) => {
    pub struct H;

    forall_types! {
      all {
        type U #+ #T =
          type_of!(default_value!($L, ftype!(#T)));

        type T #+ #T =
          type_of!((&const |$arg: U #+ #T| $x)
            (default_value!($L, ftype!(#T))));

        pub const fn f #+ #T(x: ftype!(#T)) -> T #+ #T {
          (&const |$arg: U #+ #T| $x)(convert_value!($L, ftype!(#T), x))
        }

        impl<const T: ftype!(#T), N: ListMap<H>>
        ListMap<H> for ListNode<ftype!(#T), self::value_struct![#T,T], N>
        where as_value_spec![T #+ #T; {f #+ #T(T)}]: {
          type Result<U: 'static> =
            ListNode<
             T #+ #T,
             as_value_spec![T #+ #T; {f #+ #T(T)}],
             <N as ListMap<H>>::Result<T #+ #T>>;
        }
      }
    }
    type $name = <$L as ListMap<H>>::Result<()>;
  },
  (type $name: ident = (|_| $x: expr)($L: ty);) => {
    pub struct H;

    type T = type_of!((&const |_| $x)(0));

    #[allow(unused_braces)]
    pub const fn f(_: i32) -> T {
      $x
    }

    impl<S, E: Value<ValueType=S>, N: ListMap<H>>
    ListMap<H> for ListNode<S, E, N>
    where as_value_spec![T; {f(0)}]: {
      type Result<U: 'static> =
        ListNode<
          T,
          as_value_spec![T; {f(0)}],
          <N as ListMap<H>>::Result<T>>;
    }
    type $name = <$L as ListMap<H>>::Result<()>;
  },
  (type $name: ident = (|$arg: ident: $T: ty| $x: expr)($L: ty);) => {
    pub struct H;

    type T = type_of!((&const |$arg: ftype!($T)| $x)
            (default_value!($L, ftype!($T))));

    #[allow(unused_braces)]
    pub const fn f(x: ftype!($T)) -> T {
      (&const |$arg: ftype!($T)| -> T { $x } )(x)
    }

    impl<const V: ftype!($T), N: ListMap<H>>
    ListMap<H> for ListNode<ftype!($T), value_struct![$T, V], N>
    where as_value_spec![T; {f(V)}]: {
      type Result<U: 'static> =
        ListNode<
          T,
          as_value_spec![T; {f(V)}],
          <N as ListMap<H>>::Result<T>>;
    }
    type $name = <$L as ListMap<H>>::Result<()>;
  }
}

"
pbSPD8Ek,+=substringFind,IvanKrotsyuk,C++,Monday 27th of November 2023 01:26:46 PM CDT,"#include <iostream>
#include <string>

enum TCharType { ctUnknown, ctDiskName, ctColon, ctBackslash, ctCorrectSymbol, ctEndOfString };
typedef int TState;

const TState Transitions[5][6] = {
    {0, 0, 0, 0, 0, 0},  // Состояние «Ошибка»
    {0, 2, 0, 0, 0, 0},  // Состояние «Прочитано: Ничего. Ожидается: Имя диска»
    {0, 0, 3, 0, 0, 0},  // Состояние «Прочитано: Имя диска. Ожидается: Двоеточие»
    {0, 0, 0, 4, 3, 0},  // Состояние «Прочитано: Двоеточие/Корректный символ. Ожидается: Обратный слэш»
    {0, 0, 0, 4, 4, 0}   // Состояние «Прочитано: Обратный слэш/Корректный символ. Ожидается: Корректный символ или конец строки»
};

const bool IsFinalState[5] = {false, false, false, false, true};

TCharType GetCharType(char C, int I) {
    if (I == 0 && C >= 'A' && C <= 'Z') return ctDiskName;
    if (C == ':') return ctColon;
    if (C == '\\') return ctBackslash;
    if ((C >= 'a' && C <= 'z') || (C >= 'A' && C <= 'Z') || C == '-' || C == '+' || C == '@' || C == '#' || C == '$' || C == '%' || C == '^' || C == '_' || C == '(' || C == ')' || C == '{' || C == '}' || C == '""' || C == '.' || C == ',') return ctCorrectSymbol;
    return ctUnknown;
}

bool CheckString(const std::string &S) {
    TState State = 1;
    for (int I = 0; I < S.length(); ++I) {
        State = Transitions[State][GetCharType(S[I], I)];
        if(State == 0)
            break;
    }
    return IsFinalState[State];
}

void findSubstring(const std::string &S) {
    TState state = 1, previousState;
    int c = 0, j = -1;
    for (int i = 0; i < S.length(); ++i) {
        previousState = state;
        ++j;
        state = Transitions[state][GetCharType(S[i], j)];
        if(state == 0 && previousState == 4){
            ++c;
            state = 1;
            j = -1;
            continue;
        }
        else
            if(state == 0)
            {
                state = 1;
                j = -1;
                continue;
            }
    }
    if(previousState == 4)
        ++c;
    if(c == 0)
        std::cout << ""Найдено 0 подстрок\n"";
    else
        std::cout << ""Найдено подстрок: "" << c << std::endl;
}

int main() {
    while (true) {
        std::string Path;
        std::cout << ""Введите путь к файлу(формат пути: D:\\abcdef\\ghi.tht): \n"";
        std::getline(std::cin, Path);
        bool IsCorrect = CheckString(Path);
        if (IsCorrect)
            std::cout << ""Введенный путь - корректный\nНайдена 1 подстрока"" << std::endl;
        else{
            std::cout << ""Введенный путь - некорректный"" << std::endl;
            findSubstring(Path);
        }
    }
    return 0;
}"
d3ypVGZG,Classe Cigarros,hercioneto,Java,Monday 27th of November 2023 01:15:23 PM CDT,"/* criar classe Cigarros e colar abaixo do packpage */
/**
 *
 * @author Professor Hercio Neto
 */
public class Cigarros {

    private Integer quantidade;
    private Integer anos;
    private Double tempo = 10d;
    private Double diasPerdidos;
    

    public Integer getQuantidade() {
        return quantidade;
    }

    public void setQuantidade(Integer quantidade) {
        this.quantidade = quantidade;
    }

    public Integer getAnos() {
        return anos;
    }

    public void setAnos(Integer anos) {
        this.anos = anos;
    }
    
    public Double getDiasPerdidos() {
        return diasPerdidos;
    }

    public void setdiasPerdidos() {
        Integer cigarrosAnos = this.getQuantidade()*(this.getAnos()*365);
        this.diasPerdidos = (cigarrosAnos/this.tempo)/24;
    }
    

}
"
Qs7cFDid,Projeto vidafumante,hercioneto,Java,Monday 27th of November 2023 01:14:33 PM CDT,"/** Criar o projeto vidafumante e copiar também a classe Cigarros, colar após o packpage
 *
 * @author Professor Hercio Neto
 */

import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Professor
 */
public class Vidafumante {
    
     static void janelaValores(){
        JFrame j = new JFrame(""REDUÇÃO DE VIDA"");
        j.setSize(400,400);
        j.setLocationRelativeTo(j);
        j.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        JPanel p = new JPanel();
        
        GridLayout layout = new GridLayout(0,2,30,30);
        p.setLayout(layout);
        
        
        
        JLabel jlbCigarros = new JLabel(""Quantidade de cigarros:"");       
        jlbCigarros.setHorizontalAlignment(JLabel.RIGHT);
        jlbCigarros.setHorizontalTextPosition(JLabel.RIGHT);
        
        JTextField jtxCigarros = new JTextField();
        jtxCigarros.setPreferredSize(new Dimension( 50, 24 ));
        
        
        JLabel jlbAnos = new JLabel(""Anos fumando:"");
        jlbAnos.setHorizontalAlignment(JLabel.CENTER);
        jlbAnos.setHorizontalTextPosition(JLabel.CENTER);
        JTextField jtxAnos = new JTextField();
        jtxAnos.setPreferredSize(new Dimension( 50, 24 ));
        
        JButton jbtCalcular=new JButton(""Calcular"");  
        JButton jBtLimpar=new JButton(""Limpar"");  
        jBtLimpar.setBounds(50,100,95,30);
        jbtCalcular.setBounds(50,100,95,30);
        
        jbtCalcular.addActionListener(new ActionListener(){
        public void actionPerformed(ActionEvent ae)
              {
        Cigarros x = new Cigarros();
        Cigarros c = new Cigarros();
        c.setAnos(Integer.parseInt(jtxAnos.getText()));
        c.setQuantidade(Integer.parseInt(jtxCigarros.getText()));
        c.setdiasPerdidos();
        Double dias = c.getDiasPerdidos();
        DecimalFormat formatter = new DecimalFormat(""#0.00"");     
        
        JDialog d = new JDialog(j, ""TEMPO PERDIDO"");
        JLabel l = new JLabel(""Redução de "" + formatter.format(dias) + "" dias de vida!"");
        l.setHorizontalAlignment(JLabel.CENTER);
        l.setHorizontalTextPosition(JLabel.CENTER);
        d.add(l);
        d.setSize(200, 150);
        d.setLocationRelativeTo(j);
        d.setVisible(true);
        
                  
               
            }
        });
        
        
       
        
        
        jBtLimpar.addActionListener(new ActionListener(){
        public void actionPerformed(ActionEvent ae)
              {
               jtxCigarros.setText("""");
               jtxAnos.setText("""");
               
               
            }
        });
        
            p.add(jlbCigarros);
            p.add(jtxCigarros);
            p.add(jlbAnos);
            p.add(jtxAnos);
            
            p.add(jbtCalcular );
            p.add(jBtLimpar);
            
        j.add(p);
        j.pack();
        j.setVisible(true);
    }

    public static void main(String[] args) {
        janelaValores();
    }
}"
eX8EwPWS,Classe FichaAluguel,hercioneto,Java,Monday 27th of November 2023 01:13:11 PM CDT,"/* Criar a classe FichaAluguel colar abaixo do packpage */
/**
 *
 * @author Professor Hercio Neto
 */
public class FichaAluguel {
    private Double valorDiaria;
    private Double valorAluguelKm;
    private Double valorDias;
    private Double valorKms;
    private Integer kms;
    private Integer dias;
    private String tipoVeiculo;
    

    public Double getValorDiaria() {
        return valorDiaria;
    }

    public void setValorDiaria(Double valorDiaria) {
        this.valorDiaria = valorDiaria;
    }

    public Double getValorAluguelKm() {
        return valorAluguelKm;
    }

    public void setValorAluguelKm() {
        this.valorAluguelKm = this.getValorKms()*this.getKms();
    }

    public Double getValorDias() {
        return valorDias;
    }

    public void setValorDias() {
        Double valorDias = this.valorDiaria*this.getDias();
        this.valorDias = valorDias;
    }

    public Double getValorKms() {
        return valorKms;
    }

    public void setValorKms() {
        Double valorKm=0d;
        if (""POPULAR"".equals(this.getTipoVeiculo())) {
            
            this.setValorDiaria(90.00d);
            if (this.getKms() >=100) {
            valorKm = 0.20d; } else {
               valorKm = 0.10d; 
            }
        }
        if (""LUXO"".equals(this.getTipoVeiculo())) {
            this.setValorDiaria(150.00d);            
            if (this.getKms() >=200) {
            valorKm = 0.30d; } else {
               valorKm = 0.25d; 
            }
        }
        this.valorKms = valorKm;
    }

    public Integer getKms() {
        return kms;
    }

    public void setKms(Integer kms) {
        this.kms = kms;
    }

    public Integer getDias() {
        return dias;
    }

    public void setDias(Integer dias) {
        this.dias = dias;
    }

    public String getTipoVeiculo() {
        return tipoVeiculo;
    }

    public void setTipoVeiculo(String tipoVeiculo) {
        this.tipoVeiculo = tipoVeiculo.toUpperCase();
    }
    
    public Double calcular() {       
        this.setValorKms();
        this.setValorDias();
        this.setValorAluguelKm();
        /*System.out.println(""Valor km:"" + this.getValorAluguelKm());
        System.out.println(""Valor diarias:"" + this.getValorDias());*/          
        return this.getValorAluguelKm()+this.getValorDias();
        
    }
    
}"
nLnSkcVe,Projeto aluguelveiculos,hercioneto,Java,Monday 27th of November 2023 01:12:25 PM CDT,"/*Criar o projeto aluguelveiculos

colar abaixo do packpage, copiar o FichaAluguel também */

import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Professor
 */
public class Aluguelveiculos {
    
    
     static void janelaValores(){
        JFrame j = new JFrame(""DADOS LOCAÇÃO"");
        j.setSize(400,400);
        j.setLocationRelativeTo(j);
        j.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        JPanel p = new JPanel();
        
        GridLayout layout = new GridLayout(0,2,30,30);
        p.setLayout(layout);
        
        
        
        JLabel jlbTipo = new JLabel(""Tipo:"");       
        jlbTipo.setHorizontalAlignment(JLabel.RIGHT);
        jlbTipo.setHorizontalTextPosition(JLabel.RIGHT);
        JComboBox jComboBox1 = new JComboBox();
        jComboBox1.addItem(""Popular"");
        jComboBox1.addItem(""Luxo"");
        
        JLabel jlbDias = new JLabel(""Dias de locação:"");
        jlbDias.setHorizontalAlignment(JLabel.CENTER);
        jlbDias.setHorizontalTextPosition(JLabel.CENTER);
        JTextField jtxDias = new JTextField();
        jtxDias.setPreferredSize(new Dimension( 50, 24 ));
        
        
        JLabel jlbKms = new JLabel(""Kms Rodados"");
        jlbKms.setHorizontalAlignment(JLabel.CENTER);
        jlbKms.setHorizontalTextPosition(JLabel.CENTER);
        JTextField jtxKms = new JTextField();
        jtxKms.setPreferredSize(new Dimension( 50, 24 ));
        
        
        JLabel jlbValorPagar = new JLabel(""Valor a Pagar"");
        jlbValorPagar.setHorizontalAlignment(JLabel.CENTER);
        jlbValorPagar.setHorizontalTextPosition(JLabel.CENTER);
        JLabel jlbValorPagarT = new JLabel(""R$ "");
        jlbValorPagarT.setHorizontalAlignment(JLabel.LEFT);
        jlbValorPagarT.setHorizontalTextPosition(JLabel.LEFT);
        
        
        
        JButton jbtCalcular=new JButton(""Calcular"");  
        JButton jBtLimpar=new JButton(""Limpar"");  
        jBtLimpar.setBounds(50,100,95,30);
        jbtCalcular.setBounds(50,100,95,30);
        
        jbtCalcular.addActionListener(new ActionListener(){
        public void actionPerformed(ActionEvent ae)
              {
        FichaAluguel ficha = new FichaAluguel();
        ficha.setTipoVeiculo(jComboBox1.getSelectedItem().toString());
        ficha.setDias(Integer.parseInt(jtxDias.getText()));
        ficha.setKms(Integer.parseInt(jtxKms.getText()));
        Double total = ficha.calcular();
        jlbValorPagarT.setText(""R$ ""+total.toString());
                  
               
            }
        });
        
        
       
        
        
        jBtLimpar.addActionListener(new ActionListener(){
        public void actionPerformed(ActionEvent ae)
              {
               jtxDias.setText("""");
               jtxKms.setText("""");
               jlbValorPagarT.setText("""");
               
            }
        });
        
            p.add(jlbTipo);
            p.add(jComboBox1);
            p.add(jlbDias);
            p.add(jtxDias);
            p.add(jlbKms);
            p.add(jtxKms);
            p.add(jlbValorPagar);
            p.add(jlbValorPagarT);
            p.add(jbtCalcular );
            p.add(jBtLimpar);
            
        j.add(p);
        j.pack();
        j.setVisible(true);
    }

    public static void main(String[] args) {
        janelaValores();
    }
}
"
4K2SUkwu,ABC330F AC but long code,pb_jiang,C++,Monday 27th of November 2023 01:10:23 PM CDT,"#include <assert.h>
#include <bits/stdc++.h>
using namespace std;
#ifndef __DEBUG__
#define dbg(...) 42
#endif
template <class T> using mpq = priority_queue<T, vector<T>, greater<T>>;

using ll = long long;
using pii = pair<int, int>;
using pll = pair<ll, ll>;
using vl = vector<ll>;
using vi = vector<int>;

int main(int argc, char **argv)
{
    ll n, k;
    cin >> n >> k;
    vl xs(n), ys(n), xacc(n + 2), yacc(n + 2);
    for (int i = 0; i < n; ++i)
        cin >> xs[i] >> ys[i];

    sort(xs.begin(), xs.end()), sort(ys.begin(), ys.end());
    for (int i = 0; i < n; ++i)
        xacc[i + 1] = xacc[i] + xs[i], yacc[i + 1] = yacc[i] + ys[i];

    auto find_k = [](ll d, const vl &as, const vl &acc) {
        ll ans = LLONG_MAX, n = as.size();
        for (ll i = 0, j = 0; i < n; ++i) {
            while (j < i && as[i] - as[j] > d)
                ++j;
            ll cost = (acc[n] - acc[i + 1]) - (n - i - 1) * as[i];
            cost += max(0ll, j * (as[i] - d) - acc[j]);
            ans = min(ans, cost);
        }
        for (ll i = 0, j = 0; i < n; ++i) {
            while (j < n && as[j] - as[i] <= d)
                ++j;
            ll cost = i * as[i] - acc[i];
            cost += acc[n] - acc[j] - (n - j) * (as[i] + d);
            ans = min(ans, cost);
        }
        return ans;
    };
    ll lb = -1, ub = 2e9;
    while (lb + 1 < ub) {
        ll mid = (lb + ub) / 2;
        ll fx = find_k(mid, xs, xacc), fy = find_k(mid, ys, yacc);
        // dbg(k, mid, fx, fy);
        (fx + fy > k ? lb : ub) = mid;
    }
    cout << ub << endl;
    return 0;
};"
