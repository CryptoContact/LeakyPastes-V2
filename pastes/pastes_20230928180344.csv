id,title,username,language,date,content
gyyH8wvf,JSON conversion with jc,metalx1000,Bash,Thursday 28th of September 2023 12:58:55 PM CDT,"cat people.csv|jc --csv --pretty
ps aux | jc -p --ps

LC_ALL=C date | jc --date --pretty

jc --pretty dig www.google.com

arp | jc -p --arp 
ifconfig | jc -p --ifconfig

ifconfig wlp0s20f3|grep 'inet '|awk '{print $2}'
ifconfig | jc --ifconfig -p|jq -r '.[]|select(.name==""wlp0s20f3"").ipv4_addr'

ls -l /usr/bin | jc -p --ls

ping 8.8.8.8 -c 3 | jc -p --ping 
uptime | jc -p --uptime

wget -qO- ""https://www.w3schools.com/xml/cd_catalog.xml""| jc -p --xml"
UugJHQX2,Code box with Copy Text Button,MADmadisson,HTML,Thursday 28th of September 2023 12:53:07 PM CDT,"<button onclick=""myFunction()"" style=""color:#783f04;background-color: rgba(252,229,205,1);border-color: rgba(252,229,205,1);height: 27.0pt;font-size: 13.0pt;font-weight: 700;font-family: 'Nunito', sans-serif;border-radius: 4px;transition: background .2s .1s;width: 100%;border-style: solid;"">Copy Text</button><br>
<div style=""margin-top:10px;background-color:#0000000f;padding: 10px;border-radius: 10px;""><textarea type=""text"" style=""height:100px;border: none;position: relative;width: 100%;background-color: transparent;color: #666666;font-family: Courier;"" id=""myInput"">

TEXT GOES HERE


</textarea></div>



<script>
function myFunction() {
  // Get the text field
  var copyText = document.getElementById(""myInput"");

  // Select the text field
  copyText.select();
  copyText.setSelectionRange(0, 99999); // For mobile devices

  // Copy the text inside the text field
  navigator.clipboard.writeText(copyText.value);
  
  // Alert the copied text
  alert(""Copied the text: "" + copyText.value);
}
</script>
<link rel=""preconnect"" href=""https://fonts.googleapis.com"">
<link rel=""preconnect"" href=""https://fonts.gstatic.com"" crossorigin>
<link href=""https://fonts.googleapis.com/css2?family=Nunito:wght@700&display=swap"" rel=""stylesheet"">"
Ah3UhAR3,Untitled,Tss_Flmzy,Python,Thursday 28th of September 2023 12:26:54 PM CDT,"def a1(a):
    c = 0
    ind = -1
    for i in range(len(a)):
        c1 = 0
        for j in range(len(a)):
            if a[i] == a[j]:
                c1 += 1
        if c1 > c:
            c = c1
            ind = i

    if c > (len(a) / 2):
        return a[ind]


def a2(a):
    c = 1
    ind = 0
    for i in range(1, len(a)):
        if a[ind] == a[i]:
            c += 1
        else:
            c -= 1
        if c == 0:
            ind = i
            c = 1
    return a[ind]


def a3(a):
    if len(a) == 1:
        return a[0]
    c = 1
    a.sort()
    for i in range(1, len(a)):
        if a[i - 1] == a[i]:
            c += 1
        else:
            if c > (len(a) / 2):
                return a[i - 1]
            c = 1"
4KUL0amd,CC Glass watch all rednet communication,goldfiction,Lua,Thursday 28th of September 2023 12:25:24 PM CDT,"function findAndWrap(devType)
  local devices = peripheral.getNames()
  for id, devName in pairs(devices) do
    if peripheral.getType(devName) == devType then
      return peripheral.wrap(devName)
    end
  end
end

glass = findAndWrap(""openperipheral_bridge"")
rednet.open(""right"")

function addBox()
  glass.addBox(1,1,200,100,0xFFFFFF,0.2)
end

function timeDis(message)
  -- time = textutils.formatTime(os.time(), false)
  local msg=table.concat(split(message, "",""),""\n"")
  glass.addText(5,100, msg, 0xFF0000)
end

function start()
 print(""watching rednet messages"")
 while true do
    local senderId, message, protocal = rednet.receive()
    glass.clear()
    -- addBox()
    timeDis(message)
    glass.sync()
    sleep(0.1)
  end
end

start()"
pEyX0sD3,CC_Wget,goldfiction,Lua,Thursday 28th of September 2023 12:23:23 PM CDT,"local function wget(option, url, ziel)
  if type(url) ~= ""string"" and type(ziel) ~= ""string"" then
        return
  elseif type(option) == ""string"" and option ~= ""-f"" and type(url) == ""string"" then
        ziel = url
        url = option
  end
  if http.checkURL(url) then
        if fs.exists(ziel) and option ~= ""-f"" then
          printError(""<Error> Target exists already"")
          return
        else
          term.write(""Downloading ... "")
          local timer = os.startTimer(60)
          http.request(url)
          while true do
                local event, id, data = os.pullEvent()
                if event == ""http_success"" then
                  print(""success"")
                  local f = io.open(ziel, ""w"")
                  f:write(data.readAll())
                  f:close()
                  data:close()
                  print(""Saved as "" .. ziel)
                  return true
                elseif event == ""timer"" and timer == id then
                  printError(""<Error> Timeout"")
                  return
                elseif event == ""http_failure"" then
                  printError(""<Error> Download"")
                  os.cancelAlarm(timer)
                  return
                end
          end
        end
  else
        printError(""<Error> URL"")
        return
  end
end

-- wget(""http://example.org/"", ""testing"")
-- wget(""-f"", ""http://example.org/"", ""testing"")"
y1tDCSDG,MCjPAhyz cc glass os,goldfiction,Lua,Thursday 28th of September 2023 12:22:49 PM CDT,"-- MCjPAhyz

local p = peripheral.wrap(""back"")
p.clear()
local mon = {}

mon.minY = 8 * 9
mon.maxY = 24 * 9 + 4
mon.minX = 0 * 6
mon.maxX = 68 * 6 + 4
mon.rows = math.floor((mon.maxY - mon.minY) / 9)
mon.cols = math.floor((mon.maxX - mon.minX) / 6)
mon.lines = {}
mon.mtrx = {}
for i = 1, mon.rows do
 mon.mtrx[i] = {}
end
mon.scale = 1
mon.curr = 1
mon.curc = 1
mon.cur = p.addText(math.floor((mon.curc - 1) * 6 * mon.scale) + mon.minX + 2, math.floor(((mon.curr - 1) * 9 + 1) * mon.scale) + mon.minY + 2, "" "", 0)
mon.colors = {[1] = 0xffffff, [2] = 0xffc125, [4] = 0xff3e96, [8] = 0x836fff, [16] = 0xffff00, [32] = 0x00ff00, [64] = 0xff82ab, [128] = 0x444444, [256] = 0x999999, [512] = 0x009acd, [1024] = 0x9400d3, [2048] = 0x0000ff, [4096] = 0x8b5a2b, [8192] = 0x458b00, [16384] = 0xff0000, [32768] = 0}

mon.bgColor = 0
mon.color = 0xffffff
mon.box = p.addBox(mon.minX, mon.minY, mon.maxX - mon.minX + 1, mon.maxY - mon.minY + 1, mon.bgColor, 0)
mon.box.setZIndex(-1)

mon.write = function(s)
 for i = 1, #s do
  local x = math.floor((mon.curc - 1) * 6 * mon.scale) + mon.minX + 2
  local y = math.floor((mon.curr - 1) * 9 * mon.scale) + mon.minY + 2
  local j = 1
  local t = mon.mtrx[mon.curr][mon.curc]
  if t then
   t.delete()
  end
  t = p.addText(x, y, s:sub(i,i), mon.color)
  mon.mtrx[mon.curr][mon.curc] = t
  mon.lines[#mon.lines + 1] = t
  mon.curc = mon.curc + 1
  if mon.curc > mon.cols then
   mon.curc = 1
   if mon.curr == mon.rows then
    return
   else
    mon.curr = mon.curr + 1
   end
  end
 end
 mon.cur.setX(math.floor((mon.curc - 1) * 6 * mon.scale) + mon.minX + 2)
 mon.cur.setY(math.floor(((mon.curr - 1) * 9 + 1) * mon.scale) + mon.minY + 2)
end

mon.clear = function()
 for i = 1, #mon.lines do
  mon.lines[i].delete()
  mon.lines[i] = nil
 end
end

mon.clearLine = function(n)
 local y = math.floor(((n or mon.curr) - 1) * 9 * mon.scale) + mon.minY + 2
 local i = 1
 while i <= #mon.lines do
  if not mon.lines[i].getY() or mon.lines[i].getY() == y then
   mon.lines[i].delete()
   mon.lines[i] = mon.lines[#mon.lines]
   mon.lines[#mon.lines] = nil
  else
   i = i + 1
  end
 end
end

mon.scroll = function()
 mon.clearLine(1)
 local i = 1
 while i <= #mon.lines do
  if not mon.lines[i].getY() then
   mon.lines[i].delete()
   mon.lines[i] = mon.lines[#mon.lines]
   mon.lines[#mon.lines] = nil
  else
   mon.lines[i].setY(mon.lines[i].getY() - (9 * mon.scale))
   i = i + 1
  end
 end
 for i = 1, mon.rows - 1 do
  mon.mtrx[i] = mon.mtrx[i + 1]
 end
 mon.mtrx[mon.rows] = {}
end

mon.setBackgroundColor = function(n)
 if mon.colors[n] then
  n = mon.colors[n]
 end
 mon.bgColor = n
 mon.box.setColor(n)
 mon.box.setOpacity(n == 0 and 0 or 0.40)
end

mon.setBackgroundColour = mon.setBackgroundColor

mon.setTextColor = function(n)
 if mon.colors[n] then
  n = mon.colors[n]
 end
 mon.color = n
 mon.cur.setColor(n)
end

mon.setTextColour = mon.setTextColor

mon.setTextScale = function(n)
 mon.rows = math.floor((mon.maxY - mon.minY - 4)/(9 * n))
 mon.cols = math.floor((mon.maxX - mon.minX - 4)/(6 * n))
 local y = nil
 local x = nil
 if n > mon.scale then
  y = math.floor((mon.rows + 1) * 9 * mon.scale) + mon.minY + 2
  x = math.floor((mon.cols + 1) * 6 * mon.scale) + mon.minX + 2
 end
 local i = 1
 while i < #mon.lines do
  if not mon.lines.getY() or y and (mon.lines[i].getY() >= y or mon.lines[i].getX() >= x) then
   mon.lines[i].delete()
   mon.lines[i] = mon.lines[#mon.lines]
   mon.lines[#mon.lines] = nil
  else
   local ny = (mon.lines[i].getY() - mon.minY - 2) / mon.scale * n
   local nx = (mon.lines[i].getX() - mon.minX - 2) / mon.scale * n
   mon.lines[i].setY(ny)
   mon.lines[i].setX(nx)
   mon.lines[i].setScale(n)
   i = i + 1
  end
 end
 for i = 1, mon.rows do
  if not mon.mtrx[i] then
   mon.mtrx[i] = {}
  end
 end
 mon.scale = n
 mon.cur.setX(math.floor((mon.curc - 1) * 6 * mon.scale) + mon.minX + 2)
 mon.cur.setY(math.floor(((mon.curr - 1) * 9 + 1) * mon.scale) + mon.minY + 2)
end

mon.setCursorPos = function(x,y)
 mon.curc = x
 mon.curr = y
 mon.cur.setX(math.floor((mon.curc - 1) * 6 * mon.scale) + mon.minX + 2)
 mon.cur.setY(math.floor(((mon.curr - 1) * 9 + 1) * mon.scale) + mon.minY + 2)
end

mon.getCursorPos = function()
 return mon.curc, mon.curr
end

mon.getSize = function()
 return mon.cols, mon.rows
end

local blink = true
local blinkstate = false
local nextBlink = os.startTimer(0.3)
mon.setCursorBlink = function(b)
 blink = b
end

local function doBlink()
 blinkstate = not blinkstate
 mon.cur.setText(blinkstate and blink and ""_"" or "" "")
 nextBlink = os.startTimer(0.3)
end

mon.isColor = function() return true end
mon.isColour = function() return true end

local pullEvent = os.pullEvent
local charQueue = """"
os.pullEvent = function(...)
 while true do
  if charQueue ~= """" then
   local c = charQueue:sub(1,1)
   charQueue = charQueue:sub(2)
   if c == ""\\"" then
    c = charQueue:sub(1,1)
    charQueue = charQueue:sub(2)
    if c == ""\\"" then
     return ""char"",c
    elseif c == ""n"" then
     return ""key"",28
    elseif c == ""b"" then
     return ""key"",14
    elseif c == ""t"" then
     error(""Terminated"")
    elseif c == ""r"" then
     os.reboot()
    elseif c == ""s"" then
     os.shutdown()
    end
   end
   return ""char"",c
  end
  local t = {pullEvent(...)}
  if t[1] == ""chat_command"" then
   charQueue = charQueue..t[2]
   local c = charQueue:sub(1,1)
   charQueue = charQueue:sub(2)
   if c == ""\\"" then 
    charQueue = c..charQueue 
   else
    return ""char"",c
   end
  elseif t[1] == ""timer"" and t[2] == nextBlink then
   doBlink()
  else
   return unpack(t)
  end
 end
end

local reboot = os.reboot
os.reboot = function()
 p.clear()
 mon.box.delete()
 mon.cur.delete()
 reboot()
end

local shutdown = os.shutdown
os.shutdown = function()
 p.clear()
 shutdown()
end

term.redirect(mon)

print(""Welcome to CcGlasses!"")"
8eDUpLK5,Bulk Rename Files with Vim using vidir,metalx1000,Bash,Thursday 28th of September 2023 12:15:49 PM CDT,"#install vidir
sudo apt install moreutils

#set editor
export EDITOR=nvim
export EDITOR=vim

#create example files
touch file_{00..10}.txt
touch img_{00..10}.jpg

vidir


"
the36GsY,Iplan telecomunicaciones - Nss sa - Pablo Saubidet,bombaires,HTML,Thursday 28th of September 2023 12:12:58 PM CDT,"<div class=""mas"">iplan.com.ar - iplanisp.com.ar - iplan-wholesale.com - iplanisp.com.ar - iplanisp.com - iplanliv.com.ar - iplannetworks.net - nss.com.ar</div>
<div class=""report"">See <a href=""http://www.senderbase.org/senderbase_queries/detailip?search_string=190.2.0.19"">
Iplan</a> spam reports.</div>
<div class=""cuit""><strong>CUIT:</strong> 30-70265297-5</div>
<div class=""name""><strong>Real names - Los nombres reales:</strong>
Pablo Saubidet - Daniel Alejandro Nofal - Fernando Devesa - Ezequiel Torres - Carina Fernanda Gómes</div>
<div class=""cuit""><strong>CUIT (Pablo Saubidet):</strong>
20-16844586-6</div>
<div class=""dni""><strong>DNI (Pablo Saubidet):</strong>
16844586</div>
<div class=""born""><strong>Date of birth - Fecha de nacimiento
<span style=""font-size:x-small;font-weight:normal"">[mm/dd/yyyy]</span> (Pablo
Saubidet):</strong> 10/16/1964</div>
<div class=""cuit""><strong>CUIT (Daniel Alejandro Nofal):</strong>
20-22501089-8</div>
<div class=""dni""><strong>DNI (Daniel Alejandro Nofal):</strong>
22501089</div>
<div class=""born""><strong>Date of birth - Fecha de nacimiento
<span style=""font-size:x-small;font-weight:normal"">[mm/dd/yyyy]</span> (Daniel
Alejandro Nofal):</strong> 11/15/1971</div>
<div class=""address""><strong>Physical address - Dirección
real:</strong> Reconquista 865 - 1003 Capital
Federal&nbsp;<a class=""visit"" target=""_blank"" href=""https://www.google.com/maps/place/Reconquista+865,+Buenos+Aires,+Ciudad+Aut%C3%B3noma+de+Buenos+Aires,+Argentina/@-34.5977447,-58.3729061,17z/data=!3m1!4b1!4m2!3m1!1s0x95bccacb2101afbf:0xbad5a1ab3abfdbf8?hl=es"">Pay
the spammer a visit!</a><br>
Uruguay 3359, UF 26, San Fernando - 1644 Buenos Aires (Pablo
Saubidet private)<br>
Juez Tedin 2709 - C1425CWA Palermo (Daniel Alejandro Nofal
private)</div>
<div class=""phone""><strong>Phone - Teléfono:</strong> <a href=""tel:+541152464410</a>+54 (0)11 5246-4410<br>
+54 (0)11 5031-6482<br>
+54 (0)11 5031-6482<br>
+54 (0)800 345-0112<br>
+54 (0)11 5032-0000<br>
+54 (0)11 5031-6301 (fax)<br>
+54 (0)11 5352-1546<br>
+54 (0)11 5031-6570<br>
+54 (0)11 5031-6411<br>
+54 (0)11 5031-6502</div>
<br>
Pablo Saubidet <a class=""email"" href=""mailto:psaubidet@iplan.com.ar"">psaubidet@iplan.com.ar</a><br>
Pablo Saubidet <a class=""email"" href=""mailto:psaubidet@nss.com.ar"">psaubidet@nss.com.ar</a><br>
Daniel Martin Cabrera <a class=""email"" href=""mailto:mcabrera@iplan.com.ar"">mcabrera@iplan.com.ar</a><br>
Javier Aldamiz <a class=""email"" href=""mailto:jaldamiz@iplan.com.ar"">jaldamiz@iplan.com.ar</a><br>
Lucas Urquiza <a class=""email"" href=""mailto:lurquiza@iplan.com.ar"">lurquiza@iplan.com.ar</a><br>
Emilio Nogueiras <a class=""email"" href=""mailto:enogueiras@iplan.com.ar"">enogueiras@iplan.com.ar</a><br>
Daniel Alejandro Nofal <a class=""email"" href=""mailto:dnofal@nss.com.ar"">dnofal@nss.com.ar</a><br>
Daniel Alejandro Nofal <a class=""email"" href=""mailto:dnofal@wikilife.org"">dnofal@wikilife.org</a><br>
Horacio Farias <a class=""email"" href=""mailto:hfarias@iplan.com.ar"">hfarias@iplan.com.ar</a><br>
Horacio Farias <a class=""email"" href=""mailto:abuse-iplan@iplan.com.ar"">abuse-iplan@iplan.com.ar</a><br>
Ezequiel Torres <a class=""email"" href=""mailto:etorres@iplan.com.ar"">etorres@iplan.com.ar</a><br>
Leonardo Semenzín <a class=""email"" href=""mailto:lsemenzin@iplan.com.ar"">lsemenzin@iplan.com.ar</a><br>
Rodrigo Alonso <a class=""email"" href=""mailto:ralonso@iplan.com.ar"">ralonso@iplan.com.ar</a><br>
Fernando Devesa <a class=""email"" href=""mailto:fdevesa@iplan.com.ar"">fdevesa@iplan.com.ar</a><br>
Jose Manuel Pantin <a class=""email"" href=""mailto:jpantin@iplan.com.ar"">jpantin@iplan.com.ar</a><br>
Mariana Herencic <a class=""email"" href=""mailto:mherencic@iplan.com.ar"">mherencic@iplan.com.ar</a><br>
Yanina Barrios <a class=""email"" href=""mailto:ybarrios@iplan.com.ar"">ybarrios@iplan.com.ar</a><br>
Carina Fernanda Gómes <a class=""email"" href=""mailto:cgomes@iplan.com.ar"">cgomes@iplan.com.ar</a><br>
Julián Ercolessi <a class=""email"" href=""mailto:jercolessi@iplan.com.ar"">jercolessi@iplan.com.ar</a><br>
Hernan Arcidiacono <a class=""email"" href=""mailto:harcidiacono@iplan.com.ar"">harcidiacono@iplan.com.ar</a><br>
Ivan Kowalczuk <a class=""email"" href=""mailto:ikowalczuk@iplan.com.ar"">ikowalczuk@iplan.com.ar</a><br>
Eliana Villanueva <a class=""email"" href=""mailto:evillanueva@iplan.com.ar"">evillanueva@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:hostmaster@iplan.com.ar"">hostmaster@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:hostmaster@iplanisp.com.ar"">hostmaster@iplanisp.com.ar</a><br>
<a class=""email"" href=""mailto:postmaster@iplan.com.ar"">postmaster@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:info@iplan.com.ar"">info@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:atencionalcliente@iplan.com.ar"">atencionalcliente@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:ventas@iplan.com.ar"">ventas@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:soporte@iplan.com.ar"">soporte@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:rrhh@iplan.com.ar"">rrhh@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:serviciocloud@iplan.com.ar"">serviciocloud@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:iplanliv@iplan.com.ar"">iplanliv@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:web@iplan.com.ar"">web@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:mailto:serviciocloud@iplan.com.ar"">mailto:serviciocloud@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:info@envios.iplan.com.ar"">info@envios.iplan.com.ar</a><br>
<a class=""email"" href=""mailto:operaciones@iplan.com.ar"">operaciones@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:noc@iplan.com.ar"">noc@iplan.com.ar</a><br>
<a class=""email"" href=""mailto:admin@envios.iplan.com.ar"">admin@envios.iplan.com.ar</a><br>
<a class=""email"" href=""mailto:telefoniacloud@envios.iplan.com.ar"">telefoniacloud@envios.iplan.com.ar</a><br>
<img alt=""Pablo Saubidet"" title=""Pablo Saubidet"" style=""height:150px"" src=""http://www.aer.org.ar/wp-content/uploads/2009/03/iplan-pablo-saubidet.jpg"">"
4XUNyvdu,Untitled,dllbridge,C,Thursday 28th of September 2023 12:07:30 PM CDT,"

#include    <stdio.h>


int nStartPrice = 1000,
    nDelta      =   55;


int Serial (int n);
int Ostatok(int n);
     
   
//////////////////////////////////////////////////////// 
int main()                                            //
{
	
	int nX;// = Serial(2);
	
	
	
	
	

    scanf(""%d"", &nX);  // 8
    
    int nS = nX/7,
        nO = nX%7;
    
    
    nO = Ostatok(nO);
    nS =  Serial(nS);

    nX = nO + nS;

    printf(""Summa = %d\n"", nX);
	
}   

     
////////////////////////////////////////////////////////     
int Ostatok(int n) // <= 7!
{
	
	int nSumma =    0,
	    nSP    = 1000;//nStartPrice;  
	

    for(int i = 0; i < n; i ++)
	{
		nSumma = nSumma + nSP;
		

		nSP -= 55;	//	nSP  = nSP - 55;
	}  
	
return nSumma;	  
}
     
          
     
     
     
////////////////////////////////////////////////////////     
int Serial(int n)
{
	
	int nSumma =    0,
	    nSP    = 1000;//nStartPrice;  
	

    for(int i = 0; i < 7; i ++)
	{
		nSumma = nSumma + nSP;
		

		nSP -= 55;	//	nSP  = nSP - 55;
	}  
	
return nSumma * n;	  
}
     
     "
mV23iaGx,Untitled,Josif_tepe,C++,Thursday 28th of September 2023 12:00:21 PM CDT,"#include <queue>
#include <iostream>
#include <vector>
#include <cstring>
#include <iostream>
#include <set>
#include <cstring>
#include <stack>
#include <algorithm>
//#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int maxn = 3e5 + 10;
const ll INF = 3e16 + 10;

struct node {
    int y, x1, x2;
    bool up;
    node () {}
    node(int _y, int _x1, int _x2, bool _up) {
        y = _y;
        x1 = _x1;
        x2 = _x2;
        up = _up;
    }
    bool operator < (const node &tmp) const {
        return y < tmp.y;
    }
};
int main() {
    ios_base::sync_with_stdio(false);
    int L, W;
    cin >> L >> W;
    int months;
    cin >> months;
    int n;
    cin >> n;
    vector<pair<int, int>> buildings(n);
    vector<node> v;
    for(int i = 0; i < n; i++) {
        cin >> buildings[i].first >> buildings[i].second;
        
        v.push_back(node(max(1, buildings[i].second - months), max(1, buildings[i].first - months), min(L, buildings[i].first + months), true));
        v.push_back(node(min(W, buildings[i].second + months), max(1, buildings[i].first - months), min(L, buildings[i].first + months), false));
    }
    sort(v.begin(), v.end());
    stack<int> st;
    ll result = 0;
    for(int x = 1; x <= L; x++) {
        int st_max = 0;

        for(int i = 0; i < (int) v.size(); i++) {
            if(v[i].x1 <=  x and x <= v[i].x2) {
                if(v[i].up) {
                    st.push(v[i].y);
                }
                else {
                    if(st.size() == 1) {
                        result += v[i].y - max(st.top(), st_max) + 1;
                        st_max = v[i].y + 1;
                    }
                    st.pop();
                }
            }
        }
        
    }
    cout << result << endl;
    return 0;
}
"
ktvQD4t2,AnimationsLumineuses01_2023,claudiusmarius,C++,Thursday 28th of September 2023 11:41:11 AM CDT,"// ATTENTION SOIGNER LE DECOUPLAGE SINON ALEAS POSSIBLES
  // By Claude DUFOURMONT YouTube
  #include <Adafruit_NeoPixel.h>
  #include <initializer_list>                   // Inclut la bibliothèque pour utiliser des listes d'initialisation

  // --------------------------------------------------------------------------------------------------------------------------------------------------------------
  // La bibliothèque <initializer_list> est utilisée pour travailler avec des listes d'initialisation en C++. 
  // Une liste d'initialisation est une séquence de valeurs délimitée par des accolades {}. 
  // Elle est souvent utilisée pour initialiser des conteneurs ou des structures de données. 
  // Dans ce code, cette bibliothèque peut être utilisée pour initialiser des objets ou des variables avec une liste de valeurs spécifiques. 
  // Elle est incluse au début du code pour que l'on puisse l'utiliser ultérieurement dans le programme
  // --------------------------------------------------------------------------------------------------------------------------------------------------------------
  
  #define BrocheNeopixel01 7
  #define BrocheNeopixel02 8
  #define BrocheBuzzer A6 // Broche du buzzer
  #define BrochePotarSelection A3
  
  #define NLed01 8                              // Nbre de Leds Barette
  #define NLed02 25                             // Nbre de Leds Matrice

  #define Luminosite01 20                       // Luminosité Barette (de 0 à 255)
  #define Luminosite02 6                        // Lumunosité Matrice (de 0 à 255)
  
  #define NCouleurs01 14                        // Nombre de couleurs (RGB) pour les cercles de l'Animation01                      
  
  Adafruit_NeoPixel Strip01(NLed01, BrocheNeopixel01, NEO_GRB + NEO_KHZ800);  // Création de l'objet Adafruit_NeoPixel 01 (Barette de 8 Leds)
  Adafruit_NeoPixel Strip02(NLed02, BrocheNeopixel02, NEO_GRB + NEO_KHZ800);  // Création de l'objet Adafruit_NeoPixel 02 (Matrice de 5X5 Leds)

  // ===============================Définition des couleurs en RGB ici (par exemple, Rouge, Vert, Bleu)============================================================
  int CouleurCercle[NCouleurs01][14] =            
  {
  {200, 0, 0},   // Rouge
  {10, 0, 0},
  {0, 255, 0},   // Vert
  {0, 10, 0},
  {0, 0, 255},    // Bleu
  {0, 0, 10},
  {200, 200, 0},  // Jaune
  {10, 10, 0},
  {0, 0, 0},
  {200, 0, 200},
  {10, 0, 10},
  {0, 200, 200},
  {0, 10, 10},
  {180, 180, 180} // Blanc
  };
  // ==============================================================================================================================================================
  
  int ValeurAnalogiquePotar;                            // Valeur analogique en provenance du curseur du potentiomètre (de 0 à 1023 points)
  
  unsigned long Time00 = 500;                           // Temps d'enchainement Animation00 (ms)
  unsigned long Time01 = 60;                            // Temps d'enchainement Animation01(ms)
  
  unsigned long TempsPrecedentAnimation = 0;            // Dernier temps de début de l'animation (valable pour l'Animation00 et  l'Animation01)         
  
  int animationStep = 0;                                // Première étape de l'Animation00 (10 étapes)

  // =============================================Définition de la position des Leds pour les 3 cercles============================================================
  int PetitCercle[] = {12}; // LED centrale           
  int CercleMoyen[] = {6, 7, 8, 11, 13, 16, 17, 18}; 
  int GrandCercle[] = {0, 1, 2, 3, 4, 5, 9, 10, 14, 15, 19, 20, 21, 22, 23, 24}; 
  // ==============================================================================================================================================================
  
  int CercleActuel = 0;                                 // Indice du cercle actuel (0: petit, 1: moyen, 2: grand)
  int IndiceCouleur = 0;                                // Indice de la couleur actuelle (0: rouge, 1: vert, 2: bleu)

  int CouleursLed[NLed02][3];                           // Tableau pour stocker les couleurs actuelles de chaque LED

  void setup() 
  {
  // ===========================================Initialisation de la matrice 5X5 avec les couleurs éteintes==================================================
  for (int i = 0; i < NLed02; i++) 
  {
  for (int j = 0; j < 3; j++) 
  {
  CouleursLed[i][j] = 0;
  }
  }
  analogReadResolution(10);                           // Paramètrage du Seeeduino XIAO en résolution 10 bits en lecture (0 à 1023 points)
  pinMode(BrocheNeopixel01, OUTPUT);
  pinMode(BrocheNeopixel02, OUTPUT);
  pinMode(BrocheBuzzer, OUTPUT); 

  Strip01.begin();                                    // Initialisation de la barette Néopixel  de 8 Leds
  Strip01.setBrightness(Luminosite01);                

  Strip02.begin();                                    // Initialisation de la matrice Néopixel  de 5X5 Leds
  Strip02.setBrightness(Luminosite02);
  
  buzz(50, 10, 6);                                    // Actionnement du Buzzer au démarrage (Haut à 50 ms puis Bas à 10 ms) X 6
  }

  void loop() 
  {
  ValeurAnalogiquePotar = analogRead(BrochePotarSelection);  // Lecture en points de la tension sur le curseur du potentiomètre et affection et affectation à ValeurAnalogiquePotar 
  static int ZonePrecedente = -1;                           // Variable pour stocker la zone précédente

  int ZoneActuelle = -1;                                    // Variable pour stocker la zone actuelle

  // ===============Selon la valeur lue, détermination de la zone dans laquelle nous sommes et quel figure afficher ou quelle Animation effectuer==================
  if (ValeurAnalogiquePotar < 128) 
  {
  ZoneActuelle = 0;
  figure00();
  } 
  else if (ValeurAnalogiquePotar < 256) 
  {
  ZoneActuelle = 1;
  figure01();
  } 
  else if (ValeurAnalogiquePotar < 384) 
  {
  ZoneActuelle = 2;
  figure02();
  } 
  else if (ValeurAnalogiquePotar < 512) 
  {
  ZoneActuelle = 3;
  figure03();
  } 
  else if (ValeurAnalogiquePotar < 640) 
  {
  ZoneActuelle = 4;
  figure04();
  } 
  else if (ValeurAnalogiquePotar < 768) 
  {
  ZoneActuelle = 5;
  figure05();
  } 
  else if (ValeurAnalogiquePotar < 896) 
  {
  ZoneActuelle = 6;
  Animation00();
  } 
  else 
  {
  ZoneActuelle = 7;
  Animation01();
  }
  // ===============================================================================================================================================================
  
  // ============================================Emission d'un bip seulement en cas de changement de zone=====================================================
  if (ZoneActuelle != ZonePrecedente) 
  {
  buzz(10, 2, 4);
  Strip01.clear();
  Strip01.setPixelColor(ZoneActuelle, 255, 255, 0);

  ZonePrecedente = ZoneActuelle;
  }
  Strip01.show();
  Strip02.show();
  }

  // =========================================================Fonctions pour les figures statiques==================================================================
  
  void figure00() 
  {
  Strip02.clear();
  Strip02.setPixelColor(12, 255, 0, 0);
  }

  void figure01() 
  {
  Strip02.clear();
  for (int i : {6, 7, 8, 11, 13, 16, 17, 18}) 
  {
  Strip02.setPixelColor(i, 0, 255, 0);
  }
  }

  void figure02() 
  {
  Strip02.clear();
  for (int i : {0, 1, 2, 3, 4, 5, 9, 10, 14, 15, 19, 20, 21, 22, 23, 24}) 
  {
  Strip02.setPixelColor(i, 0, 0, 255);
  }
  }

  void figure03() 
  {
  Strip02.clear();
  Strip02.setPixelColor(12, 0, 0, 255);
  }

  void figure04() 
  {
  Strip02.clear();
  for (int i : {6, 7, 8, 11, 13, 16, 17, 18}) 
  {
  Strip02.setPixelColor(i, 255, 0, 0);
  }
  }

  void figure05() 
  {
  Strip02.clear();
  for (int i : {0, 1, 2, 3, 4, 5, 9, 10, 14, 15, 19, 20, 21, 22, 23, 24}) 
  {
  Strip02.setPixelColor(i, 0, 255, 0);
  }
  }

  void figure06() 
  {
  Strip02.clear();
  for (int i = 0; i < NLed02; i++) 
  {
  Strip02.setPixelColor(i, 0, 0, 255);
  }
  }

  void figure07() 
  {
  Strip02.clear();
  for (int i = 0; i < NLed02; i++) 
  {
  Strip02.setPixelColor(i, 255, 255, 0);
  }
  }
  // ==============================================================================================================================================================


  // ===================================================Fonctions pour les Chiffres 0 à 9 =========================================================================
  void Chiffre00()  
  {
  Strip02.clear();
  for (int i : {0, 1, 2, 7, 9, 10, 12, 17, 19, 20, 21, 22}) 
  //for (int i : {1, 2, 3, 6, 8, 11, 13, 16, 18, 21, 22, 23}) 
  {
  Strip02.setPixelColor(i, 190, 0, 0);
  //Strip02.setPixelColor(i, 0, 255, 0);
  //Strip02.setPixelColor(i, 0, 0, 255);
  }
  }
  
  void Chiffre01() 
  {
  Strip02.clear();
  //for (int i : {2, 7, 12, 17 , 22}) 
  for (int i : {3, 6, 13, 16 , 23})
  {
  //Strip02.setPixelColor(i, 255, 0, 0);
  Strip02.setPixelColor(i, 0, 210, 0);
  //Strip02.setPixelColor(i, 0, 0, 255);
  }
  }

  void Chiffre02()  
  {
  Strip02.clear();
  for (int i : {0, 1, 2, 7, 10, 11, 12, 19, 20, 21, 22}) 
  //for (int i : {1, 2, 3, 6, 11, 12, 13, 18, 21, 22, 23})
  {
  //Strip02.setPixelColor(i, 255, 0, 0);
  //Strip02.setPixelColor(i, 0, 255, 0);
  Strip02.setPixelColor(i, 0, 0, 255);
  }
  }

  void Chiffre03()  
  {
  Strip02.clear();
  //for (int i : {0, 1, 2, 7, 10, 11, 12, 17, 20, 21, 22}) 
  for (int i : {1, 2, 3, 6, 11, 12, 13, 16, 21, 22, 23})
  {
  Strip02.setPixelColor(i, 190, 0, 0);
  //Strip02.setPixelColor(i, 0, 255, 0);
  //Strip02.setPixelColor(i, 0, 0, 255);
  }
  } 

  void Chiffre04()  
  {
  Strip02.clear();
  for (int i : {0, 7, 9, 10, 11, 12, 17, 22}) 
  //for (int i : {1, 6, 8, 11, 12, 13, 16, 23})
  {
  //Strip02.setPixelColor(i, 255, 0, 0);
  Strip02.setPixelColor(i, 0, 210, 0);
  //Strip02.setPixelColor(i, 0, 0, 255);
  }
  }

  void Chiffre05()  
  {
  Strip02.clear();
  //for (int i : {0, 1, 2, 9, 10, 11, 12, 17, 20, 21, 22}) 
  for (int i : {1, 2, 3, 8, 11, 12, 13, 16, 21, 22, 23})
  {
  //Strip02.setPixelColor(i, 255, 0, 0);
  //Strip02.setPixelColor(i, 0, 255, 0);
  Strip02.setPixelColor(i, 0, 0, 255);
  }
  }

  void Chiffre06()  
  {
  Strip02.clear();
  for (int i : {0, 1, 2, 9, 10, 11, 12, 17, 19, 20, 21, 22}) 
  //for (int i : {1, 2, 3, 8, 11, 12, 13, 16, 18, 21, 22, 23}) 
  {
  Strip02.setPixelColor(i, 190, 0, 0);
  //Strip02.setPixelColor(i, 0, 255, 0);
  //Strip02.setPixelColor(i, 0, 0, 255);
  }
  }

  void Chiffre07() 
  {
  Strip02.clear();
  //for (int i : {0, 1, 2, 7, 12, 17 , 22}) 
  for (int i : {1, 2, 3, 6, 13, 16 , 23})
  {
  //Strip02.setPixelColor(i, 255, 0, 0);
  Strip02.setPixelColor(i, 0, 210, 0);
  //Strip02.setPixelColor(i, 0, 0, 255);
  }
  }

  void Chiffre08()  
  {
  Strip02.clear();
  for (int i : {0, 1, 2, 7, 9, 10, 11, 12, 17, 19, 20, 21, 22}) 
  //for (int i : {1, 2, 3, 6, 8, 11, 12, 13, 16, 18, 21, 22, 23})
  {
  //Strip02.setPixelColor(i, 255, 0, 0);
  //Strip02.setPixelColor(i, 0, 255, 0);
  Strip02.setPixelColor(i, 0, 0, 255);
  }
  }

  void Chiffre09()  
  {
  Strip02.clear();
  //for (int i : {0, 1, 2, 7, 9, 10, 11, 12, 17,20, 21, 22}) 
  for (int i : {1, 2, 3, 6, 8, 11, 12, 13, 16, 21, 22, 23})
  {
  //Strip02.setPixelColor(i, 255, 0, 0);
  //Strip02.setPixelColor(i, 0, 255, 0);
  //Strip02.setPixelColor(i, 0, 0, 255);
  Strip02.setPixelColor(i, 150, 150, 150);
  }
  }

  // =========================================================Fonctions pour les Animations===================================================================
  
  void Animation00()                                    // Animation de défilement de Chiffres 
  
  // --------------------------------------------------------------------------------------------------------------------------------------------------------------
  // La fonction Animation00 gère une animation de défilement de chiffres. 
  // Elle bascule entre différents chiffres (de 0 à 9) en fonction de la variable animationStep. 
  // À chaque étape, elle appelle une fonction spécifique (par exemple, Chiffre00, Chiffre01, etc.) pour afficher le chiffre correspondant sur votre matrice de LED. 
  // Le délai entre chaque chiffre est déterminé par la variable Time00. Lorsque l'animation est terminée, elle revient à zéro.
  // --------------------------------------------------------------------------------------------------------------------------------------------------------------
   
  {
  unsigned long TempsActuel = millis();
  if (TempsActuel - TempsPrecedentAnimation >= Time00)  // Changement de chiffre à chaque fois que le temps écoulé de la présentation du chiffre dépasse ou est égal à Time00
  {
  TempsPrecedentAnimation = TempsActuel;                // On réactualise le dernier temps de début de l 'Animation
  switch (animationStep)                                // On passe au Chiffre suivant
  {
  case 0:
  Chiffre00();
  break;
  case 1:
  Chiffre01();
  break;
  case 2:
  Chiffre02();
  break;
  case 3:
  Chiffre03();
  break;
  case 4:
  Chiffre04();
  break;
  case 5:
  Chiffre05();
  break;
  case 6:
  Chiffre06();
  break;
  case 7:
  Chiffre07();
  break;
  case 8:
  Chiffre08();
  break;
  case 9:
  Chiffre09();
  break;
  }

  animationStep = (animationStep + 1) % 10;           // On incrémente et si nous sommes à 10 c'est zéro
  Strip02.show();                                     // Affichage du Chiffre                             
  }
  }

  void Animation01()                                  // Animation de défilement de Figures  
  
  // --------------------------------------------------------------------------------------------------------------------------------------------------------------
  // La fonction Animation01 gère une animation de défilement de formes géométriques sur la matrice 5X5 LEDs. 
  // Elle alterne entre trois cercles différents (petit, moyen, grand) et applique une couleur spécifique à chaque LED dans le cercle en cours. 
  // Les délais entre les changements de cercles sont déterminés par la variable Time01. 
  // Elle utilise également une variable IndiceCouleur pour alterner entre différentes couleurs définies au préalable dans le tableau CouleurCercle.
  // --------------------------------------------------------------------------------------------------------------------------------------------------------------
  {
  unsigned long TempsActuel = millis();
  if (TempsActuel - TempsPrecedentAnimation >= Time01) 
  {
  TempsPrecedentAnimation = TempsActuel;
  Strip02.clear();

 
  // .................................................Allumage du cercle actuel avec la couleur actuelle.............................................................
  int* LedsActuelles;                                     // Tableau des LEDs pour le cercle actuel
  int size;

  if (CercleActuel == 0) 
  {
  LedsActuelles = PetitCercle;                            // Utilisation du tableau des LEDs pour le petit cercle
  size = sizeof(PetitCercle) / sizeof(PetitCercle[0]);    // Calcul de la taille du petit cercle
  } 
  else if (CercleActuel == 1) 
  {
  LedsActuelles = CercleMoyen;                            // Utilisation du tableau des LEDs pour le cercle moyen
  size = sizeof(CercleMoyen) / sizeof(CercleMoyen[0]);    // Calcul de la taille du cercle moyen
  } 
  else 
  {
  LedsActuelles = GrandCercle;                            // Utilisation du tableau des LEDs pour le grand cercle
  size = sizeof(GrandCercle) / sizeof(GrandCercle[0]);    // Calcul de la taille du grand cercle
  }
  
  for (int i = 0; i < size; i++) 
  {
  int ledIndex = LedsActuelles[i];
  for (int j = 0; j < 3; j++) 
  {
  CouleursLed[ledIndex][j] = CouleurCercle[IndiceCouleur][j];
  }
  }

  // .....................................................Application des couleurs actuelles à la matrice..........................................................
  for (int i = 0; i < NLed02; i++) 
  {
  Strip02.setPixelColor(i, CouleursLed[i][0], CouleursLed[i][1], CouleursLed[i][2]);
  }
  Strip02.show();

  // ......................................................Passage au cercle suivant (petit, moyen, grand).........................................................
  CercleActuel = (CercleActuel + 1) % 3;                     // Passage au cercle suivant tout en restant inférieur ou égal à 2 ( 0 à 2 -->3)

  // .....................................................Passage à la couleur suivante (rouge, vert, bleu)........................................................
  if (CercleActuel == 0) 
  {
  IndiceCouleur = (IndiceCouleur + 1) % NCouleurs01;
  }
  }
  }

  
  // ==================================================================Fonction Buzzer==============================================================================
  
  void buzz (int TempsHIGH, int TempsLOW, int NombreCycles)
  {
  for (int x = 1; x <= NombreCycles; x++)
  {
  digitalWrite(BrocheBuzzer, HIGH);
  delay (TempsHIGH);
  digitalWrite(BrocheBuzzer, LOW);
  delay (TempsLOW);
  }
  }"
kQCCKKQX,Untitled,soyl,Java,Thursday 28th of September 2023 11:39:34 AM CDT,"import java.time.Duration;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Objects;

class Practicum {
    // Задайте форматирование для времени и даты в формате часы:минуты день.месяц.год
    // Пример - 12:15 02.11.21
    public static final DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern(""HH:mm dd.MM.yy"");
    // Задайте форматирование для времени в формате часы:минуты
    public static final DateTimeFormatter TIME_FORMATTER = DateTimeFormatter.ofPattern(""HH:mm"");

    public static void main(String[] args) {
        System.out.println(""Тест №1:"");
        printFlightInformation(
                ""12:15 02.11.21"",
                ""VKO"",
                ""LED"",
                30,
                1,
                55
        );

        System.out.println(""\nТест №2:"");
        printFlightInformation(
                ""14:00 03.10.21"",
                ""SVX"",
                ""VVO"",
                0,
                9,
                5
        );

        System.out.println(""\nТест №3:"");
        printFlightInformation(
                ""06:00 12.12.21"",
                ""DME"",
                ""VVO"",
                0,
                12,
                0
        );

        System.out.println(""\nТест №4:"");
        printFlightInformation(
                ""23:00 29.03.22"",
                ""LED"",
                ""SVX"",
                0,
                2,
                55
        );


    }

    private static void printFlightInformation(
            String formattedDepartureTime,
            String departureAirportCode,
            String arrivalAirportCode,
            int delay,
            int flightDurationHours,
            int flightDurationMinutes
    ) {
        Airport departureAirport;
        Airport arrivalAirport;
        // С помощью класса AirportDatabase получите данные об аэропортах вылета и посадки.
        // При получении исключения выведите сообщение исключения.
        try {
            departureAirport =  AirportDatabase.getAirportByCode(departureAirportCode);
            arrivalAirport = AirportDatabase.getAirportByCode(arrivalAirportCode);
            // исполняемый код
        } catch (IllegalStateException e) {
            System.out.println(e.getMessage());
            return;
        }
        LocalDateTime departureTime = LocalDateTime.parse(formattedDepartureTime,DATE_TIME_FORMATTER);


        ZoneId departureZone = ZoneId.of(Objects.requireNonNull(departureAirport).getZone());

        // Создайте экземпляр ZonedDateTime с помощью formattedDepartureTime и зоны аэропорта вылета.
        ZonedDateTime departure = ZonedDateTime.of(departureTime,departureZone);

        // Выведите информацию о том, между какими городами будет перелёт.

        System.out.println(""Ваш билет на рейс "" + departureAirport.getCity() + "" - "" + Objects.requireNonNull(arrivalAirport).getCity() + "": "");

        // Найдите продолжительность полёта.
        Duration flightDuration = Duration.ofHours(flightDurationHours).plusMinutes(flightDurationMinutes);
        // Найдите время прибытия с учётом зоны прилёта.
        ZoneId arrivalZonedId = ZoneId.of(arrivalAirport.getZone());
        ZonedDateTime arrival = departure.plus(flightDuration).withZoneSameLocal(arrivalZonedId);

        // Заполните данные для передачи в метод печати билета.
        // Город вылета

        String departureCity = departureAirport.getCityForTicket();
        // Город прилёта
        String arrivalCity = arrivalAirport.getCityForTicket();
        // Отформатированное время прилёта
        String formattedArrivalTime = arrival.format(DATE_TIME_FORMATTER);
        // Только время вылета
        String departureTimeOnly = departure.format(TIME_FORMATTER);

        printTicket(
                formattedDepartureTime,
                departureAirportCode,
                arrivalAirportCode,
                departureCity,
                arrivalCity,
                formattedArrivalTime,
                departureTimeOnly
        );

        // Добавьте проверку на случай задержки.
        if (delay > 0) {
            // Определите продолжительность задержки.
            Duration delayDuration = Duration.ofMinutes(delay);
            // Вычислите время вылета с учётом задержки.
            ZonedDateTime departureWithDelay = departure.plus(delayDuration);
            // Вычислите время прилёта с учётом задержки.
            ZonedDateTime arrivalWithDelay = arrival.plus(delayDuration);

            System.out.println(""Ваш вылет задерживается."");
            // Выведите продолжительность задержки в формате часы:минуты
            System.out.println(""Задержка: "" + delayDuration.toHours()
            + "":"" + delayDuration.toMinutesPart());
            // Выведите отформатированное время вылета с учётом задержки.
            System.out.println(""Обновлённое время вылета: "" + departureWithDelay.format(DATE_TIME_FORMATTER));
            // Выведите отформатированное время прилёта с учётом задержки.
            System.out.println(""Обновлённое время прилёта: "" + arrivalWithDelay.format(DATE_TIME_FORMATTER));
        } else {
            System.out.println(""Удачного полёта!"");
        }
    }

    private static void printTicket(
            String departureTime,
            String departureAirportCode,
            String arrivalAirportCode,
            String departureCity,
            String arrivalCity,
            String arrivalTime,
            String departureTimeOnly
    ) {
        System.out.println(
                "" _______________________________________________________\n"" +
                        ""|                                            |          |\n"" +
                        ""|  "" + departureCity + ""|"" + departureAirportCode + ""      ""
                        + departureTime + ""  |   "" + departureAirportCode + ""    |\n"" +
                        ""|  "" + arrivalCity + ""|"" + arrivalAirportCode + ""      ""
                        + arrivalTime + ""  |   "" + arrivalAirportCode + ""    |\n"" +
                        ""|                                            |          |\n"" +
                        ""|  BOARDING TIME   --:--      SEAT  1A       |   "" + departureTimeOnly + ""  |\n"" +
                        ""|  GATE  23                                  |   1A     |\n"" +
                        ""|____________________________________________|__________|"");
    }
}"
Si1SmwXb,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Thursday 28th of September 2023 11:39:33 AM CDT,"Pasted at: 28/09/2023 17:39
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
Y1QrSnEH,startup,bullseye224,Lua,Thursday 28th of September 2023 11:39:21 AM CDT,"-------------------------------
--Select a slot
-------------------------------
function ss(num)
    turtle.select(num)
end

-------------------------------
--Turning Functions 
-------------------------------
--Turn Right
function tr(num)
    if (num == nil or num == '') then
        num = 1
    end
    for i=1,num,1 do
        turtle.turnRight()
    end.
end

--Turn Left
function tl(num)
    if (num == nil or num == '') then
        num = 1
    end
    for i=1,num,1 do
        turtle.turnLeft()
    end
end

-------------------------------
--Movement Functions
-------------------------------
--Go forward
function gf(num)
    if (num == nil or num == '') then
        num = 1
    end
    for i=1,num,1 do
        while turtle.detect() do
            turtle.dig()
        end
        turtle.forward()
    end
end

--Go Back
function gb(num)
    if (num == nil or num == '') then
        num = 1
    end
    for i=1,num,1 do
        turtle.back()
    end
end

--Go Up
function gu(num)
    if (num == nil or num == '') then
        num = 1
    end
    for i=1,num,1 do
        while turtle.detectUp() do
            turtle.digUp()
        end
        turtle.up()
    end
end

--Go Down
function gd(num)
    if (num == nil or num == '') then
        num = 1
    end
    for i=1,num,1 do
        if turtle.detectDown() then
            turtle.digDown()
            turtle.down()
        else
            turtle.down()
        end
    end
end

-------------------------------
--Digging Functions 
-------------------------------
-- Dig Forward
function df()
    while turtle.detect() do
        turtle.dig()
    end
end

--Dig Up
function du()
    while turtle.detectUp() do
        turtle.digUp()
    end
end

--Dig Down
function dd()
    while turtle.detectDown() do
        turtle.digDown()
    end
end

-------------------------------
--Placing Functions 
-------------------------------
--Place Forward
function pf(num)
    if (num == nil or num == '') then
        turtle.place()
    else
        ss(num)
        turtle.place()
    end
end

--Place Up
function pu(num)
    if (num == nil or num == '') then
        turtle.placeUp()
    else
        ss(num)
        turtle.placeUp()
    end
end

--Place Down
function pd(num)
    if (num == nil or num == '') then
        turtle.placeDown()
    else
        ss(num)
        turtle.placeDown()
    end
end
 
-------------------------------
--Refuels the turtle
-------------------------------
function refuel(num) 
    if (num == nil or num == '') then
        turtle.refuel())
    else
        ss(num)
        turtle.refuel()
    end
end

----------------------------------
--Start
----------------------------------
refuel(16)
--Startup Destination
goalx = 1 --Please Update after moving
goaly = 1 --Please Update after moving
goalz = 1 --Please Update after moving

--Get GPS Location
x,y,z = gps.locate( 2, true )

-- Go to the correct Z location
if z > goalz then
	for i=z, goalz, -1
	do
        gd()
    end
    print(""Z Position Found"")
end
if z < goalz then
	for i=z, goalz, 1
	do
        gu()
    end
        print(""Z Position Found"")
end
-- Go to the correct X location
if x == goalx then
    print(""X Position Found"")
else
	gf()
    newx,newy,newz = gps.locate( 2, true )
    
    --Make sure we are on the correct axis
    if newx == x then
        tr()
    	newx,newy,newz = gps.locate( 2, true )
    end
    
    --Make sure we are facing the right way
    if ( math.abs( goalx - newx ) ) > ( math.abs( goalx - x) ) then
        tr(2)
    end
    
    if newx > goalx then
        for i=newx, goalx, -1
        do
            gf()
        end
        print(""X Position Found"")
    end
    if newx < goalx then
        for i=newx, goalx, 1
        do
            gf()
        end
        print(""X Position Found"")
    end
    
end

-- Go to the correct Y location
if y == goaly then
    print(""Y Position Found"")
else
	gf()
    newx,newy,newz = gps.locate( 2, true )
    
    --Make sure we are on the correct axis
    if newy == y then
        tr()
    	newx,newy,newz = gps.locate( 2, true )
    end
    
    --Make sure we are facing the right way
    if ( math.abs( goaly - newy ) ) > ( math.abs( goaly - y) ) then
        tr(2)
    end
    
    if newy > goaly then
        for i=newy, goaly, -1
        do
            gf()
        end
        print(""Y Position Found"")
    end
    if newy < goaly then
        for i=newy, goaly, 1
        do
            gf()
        end
        print(""Y Position Found"")
    end
    
end
"
hURPYR97,trial,coinwalk,JavaScript,Thursday 28th of September 2023 11:34:45 AM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((0.00001).toFixed(8));
var blert = nudle;
var taget = (smmly*2000);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1000;
var lol = true
var synch = ((Math.floor(smmly/bogs))*bogs);
var distj = ((blert*1).toFixed(8));
var nemo = parseFloat(document.getElementById('pct_balance').value);
 
 
 
function get(){
console.clear();
nemo = document.getElementById('pct_balance').value;
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+(bpop+nudle)))&&(nemo!=circuit)&&(nemo<(sysch+(bogs*3)))) {
	blert = blert*2;
    	circuit = parseFloat(nemo);
}
if ((nemo>(sysch+(bogs*3)))&&(nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+(bpop+nudle)))) {
	blert = nudle*2;
	fatt = 1;
	lol = false; 
	circuit = parseFloat(nemo);
	sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo<(sysch-(bogs*3)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) {
	blert = nudle;
    	fatt = 1000;
    	circuit = 0;
    	lol = true;
    	sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) {
    	blert = nudle;
    	fatt = 1000;
    	circuit = 0;
    	lol = true;
    	sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
distj = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(distj);
$('#a_lo').click();
var dog = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1);
}
get();"
5ftrCzHd,[site-reviews] [wc_verified_owner] shortcode,geminilabs,PHP Brief,Thursday 28th of September 2023 11:20:03 AM CDT,"/**
 * Registers the [wc_verified_owner][/wc_verified_owner] shortcode
 * 
 * @param array $atts
 * @param string $content
 * @return ?string
 */
add_shortcode('wc_verified_owner', function ($atts, $content = '') {
    if (!function_exists('wc_customer_bought_product') || !function_exists('wc_get_product')) {
        return;
    }
    if (empty($content)) {
        return;
    }
    $product = wc_get_product(get_the_ID());
    if (!$product) {
        return;
    }
    $defaults = [
        'message' => esc_html_e('Only logged in customers who have purchased this product may leave a review.', 'woocommerce'),
    ];
    $atts = shortcode_atts($defaults, $atts, 'wc_verified_owner');
    $isProductOwner = wc_customer_bought_product('', get_current_user_id(), $product->get_id());
    $verificationRequired = 'yes' === get_option('woocommerce_review_rating_verification_required');
    if (!$isProductOwner && $verificationRequired) {
        $message = sanitize_text_field($atts['message']);
        if (!empty($message)) {
            $message = sprintf('<p class=""woocommerce-verification-required"">%s</p>', $message);
        }
        return $message;
    }
    return do_shortcode($content);
}, 10, 2);"
cuEPL6uU,moouseP,maskub1234,Lua,Thursday 28th of September 2023 11:13:33 AM CDT,"local Player = game.Players.LocalPlayer
local mouse = Player:GetMouse()
local hitPosition = mouse.Hit.p

print(hitPosition)
setclipboard(tostring(hitPosition))
"
8xgXpSvh,Untitled,Don_Mag,Swift,Thursday 28th of September 2023 11:03:44 AM CDT,"class MoveImageScrollVC: UIViewController, UIScrollViewDelegate {
	
	var exampleConstraint: NSLayoutConstraint!
	
	override func viewDidLoad() {
		super.viewDidLoad()
		
		let scrollView = UIScrollView()
		scrollView.backgroundColor = .systemYellow
		scrollView.translatesAutoresizingMaskIntoConstraints = false
		view.addSubview(scrollView)
		
		let g = view.safeAreaLayoutGuide
		let cg = scrollView.contentLayoutGuide
		let fg = scrollView.frameLayoutGuide
		
		NSLayoutConstraint.activate([
			// constrain scroll view to safe area, inset by 20-points
			scrollView.topAnchor.constraint(equalTo: g.topAnchor, constant: 20.0),
			scrollView.leadingAnchor.constraint(equalTo: g.leadingAnchor, constant: 20.0),
			scrollView.bottomAnchor.constraint(equalTo: g.bottomAnchor, constant: -20.0),
			scrollView.widthAnchor.constraint(equalToConstant: 100.0),
		])
		
		let tallLabel = UILabel()
		tallLabel.backgroundColor = .cyan
		tallLabel.numberOfLines = 0
		tallLabel.textAlignment = .center
		tallLabel.font = .systemFont(ofSize: 24.0, weight: .light)
		
		var str: String = ""1""
		for i in 2...50 {
			str += ""\n\(i)""
		}
		tallLabel.text = str
		
		tallLabel.translatesAutoresizingMaskIntoConstraints = false
		scrollView.addSubview(tallLabel)
		
		NSLayoutConstraint.activate([
			tallLabel.topAnchor.constraint(equalTo: cg.topAnchor, constant: 8.0),
			tallLabel.leadingAnchor.constraint(equalTo: cg.leadingAnchor, constant: 8.0),
			tallLabel.trailingAnchor.constraint(equalTo: cg.trailingAnchor, constant: 0.0),
			tallLabel.bottomAnchor.constraint(equalTo: cg.bottomAnchor, constant: -8.0),
			tallLabel.widthAnchor.constraint(equalTo: fg.widthAnchor, constant: -16.0),
		])
		
		let anchorView = UILabel()
		anchorView.backgroundColor = .yellow
		anchorView.textAlignment = .center
		anchorView.text = ""Anchor View""

		let constrainedView = UIImageView()
		if let img = UIImage(named: ""sampleImage"") {
			constrainedView.image = img
		}
		
		anchorView.translatesAutoresizingMaskIntoConstraints = false
		view.addSubview(anchorView)
		constrainedView.translatesAutoresizingMaskIntoConstraints = false
		view.addSubview(constrainedView)
		
		exampleConstraint = constrainedView.bottomAnchor.constraint(equalTo: anchorView.topAnchor, constant: 0.0)
		exampleConstraint.priority = .required - 1
		
		NSLayoutConstraint.activate([
			
			anchorView.leadingAnchor.constraint(equalTo: scrollView.trailingAnchor, constant: 20.0),
			anchorView.trailingAnchor.constraint(equalTo: g.trailingAnchor, constant: -20.0),
			anchorView.bottomAnchor.constraint(equalTo: scrollView.bottomAnchor, constant: 0.0),
			anchorView.heightAnchor.constraint(equalToConstant: 40.0),

			exampleConstraint,
			constrainedView.topAnchor.constraint(greaterThanOrEqualTo: scrollView.topAnchor),
			constrainedView.leadingAnchor.constraint(equalTo: anchorView.leadingAnchor, constant: 0.0),
			constrainedView.trailingAnchor.constraint(equalTo: anchorView.trailingAnchor, constant: 0.0),
			constrainedView.heightAnchor.constraint(equalToConstant: 120.0),
		])
		
		scrollView.delegate = self
	}
	
	func scrollViewDidScroll(_ scrollView: UIScrollView) {
		let up = scrollView.contentOffset.y
		print(""up \(up)"")
		exampleConstraint.constant = -up
	}
	
}
"
ErDAmUNx,Untitled,yungKKKK,Java,Thursday 28th of September 2023 11:02:24 AM CDT,"int int_position = 0;
        Uri uri;
        Cursor cursor;
        int column_index_data, column_index_folder_name,column_id,thum;

        String absolutePathOfImage = null;
        uri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;

        String[] projection = {MediaStore.MediaColumns.DATA, MediaStore.Video.Media.BUCKET_DISPLAY_NAME,MediaStore.Video.Media._ID,MediaStore.Video.Thumbnails.DATA};

        final String orderBy = MediaStore.Images.Media.DATE_TAKEN;
        cursor = getApplicationContext().getContentResolver().query(uri, projection, null, null, orderBy + "" DESC"");

        column_index_data = cursor.getColumnIndexOrThrow(MediaStore.MediaColumns.DATA);
        column_index_folder_name = cursor.getColumnIndexOrThrow(MediaStore.Video.Media.BUCKET_DISPLAY_NAME);
        column_id = cursor.getColumnIndexOrThrow(MediaStore.Video.Media._ID);
        thum = cursor.getColumnIndexOrThrow(MediaStore.Video.Thumbnails.DATA);

        while (cursor.moveToNext()) {
            absolutePathOfImage = cursor.getString(column_index_data);
            Log.e(""Column"", absolutePathOfImage);
            Log.e(""Folder"", cursor.getString(column_index_folder_name));
            Log.e(""column_id"", cursor.getString(column_id));
            Log.e(""thum"", cursor.getString(thum));

            Model_Video obj_model = new Model_Video();
            obj_model.setBoolean_selected(false);
            obj_model.setStr_path(absolutePathOfImage);
            obj_model.setStr_thumb(cursor.getString(thum));

            al_video.add(obj_model);

        }"
KmLszdRE,Untitled,Josif_tepe,C++,Thursday 28th of September 2023 10:58:57 AM CDT,"#include <queue>
#include <iostream>
#include <vector>
#include <cstring>
#include <iostream>
#include <set>
#include <cstring>
#include <stack>
//#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int maxn = 3e5 + 10;
const ll INF = 3e16 + 10;

int main() {
    ios_base::sync_with_stdio(false);
    int n;
    cin >> n;
    vector<pair<int, int>> points(n);
    
    for(int i = 0; i < n; i++) {
        cin >> points[i].first >> points[i].second;
    }
    sort(points.begin(), points.end());
    set<pair<int, int>> st;
    st.insert(make_pair(points[0].first, points[0].second));
    ll shortest_distance = 1e9, result = 1e18;
    for(int i = 1; i < n; i++) {
        set<pair<int, int>>::iterator it1 = st.lower_bound(make_pair(points[i].first - shortest_distance, points[i].second - shortest_distance));
        
        set<pair<int, int>>::iterator it2 = st.upper_bound(make_pair(points[i].first, points[i].second + shortest_distance));
        
        if(it1 == st.end()) {
            continue;
        }
        
        for(set<pair<int, int>>::iterator it = it1; it != it2; it++) {
            ll dist = (points[i].first - it->first) * (points[i].first - it->first) + (points[i].second - it->second) * (points[i].second - it->second);
            result = min(result, dist);
        }
        st.insert(make_pair (points[i].first, points[i].second));
    }
    cout << sqrt(result) << endl;
    return 0;
}
"
Pec3CuRN,ADB_Labs,DevilVeNom,T-SQL,Thursday 28th of September 2023 10:49:23 AM CDT,"-- Q.NO.1
CREATE TABLE DEPARTMENT(
	ID INT IDENTITY(1,1),
	Dept_Name VARCHAR(50) NOT NULL,
	Dept_Location VARCHAR(50) NOT NULL,
	CONSTRAINT PK_DEPARTMENT_DNUMBER PRIMARY KEY(ID)
)
GO

-- Insert data in departments
INSERT INTO DEPARTMENT (Dept_Name, Dept_Location)
VALUES
    ('Human Resources', 'Kathmandu'),
    ('Marketing', 'Pokhara'),
    ('Finance', 'Biratnagar'),
    ('Engineering', 'Lalitpur');

GO

CREATE TABLE EMPLOYEE(
	ID INT IDENTITY(1,1), 
	Fname VARCHAR(50) NOT NULL,
	Mname VARCHAR(50),
	Lname VARCHAR(50) NOT NULL,
	FullName AS CONCAT(Fname, ' ', Lname),
	Gender CHAR(1) NOT NULL,
	DOB DATE NOT NULL,
	[Address] VARCHAR(50) NOT NULL,
	Salary DECIMAL(18,2) NOT NULL,
	Supervisor_ID INT NOT NULL,
	Dept_ID INT,
	CONSTRAINT PK_EMPLOYEE_SSN PRIMARY KEY(ID),
	CONSTRAINT FK_EMPLOYEE_DEPT_ID FOREIGN KEY(Dept_ID) REFERENCES DEPARTMENT(ID)
)
GO

-- Insert data in employee
INSERT INTO EMPLOYEE (Fname, Mname, Lname, Gender, DOB, [Address], Salary, Supervisor_ID, Dept_ID)
VALUES
    ('Ramesh', 'Kumar', 'Shrestha', 'M', '1990-05-15', 'Kathmandu, Nepal', 55000.00, 1, 1)
GO

ALTER TABLE EMPLOYEE
ADD CONSTRAINT FK_EMPLOYEE_SUPERVISOR_ID FOREIGN KEY(Supervisor_ID) REFERENCES EMPLOYEE(ID)
GO

INSERT INTO EMPLOYEE (Fname, Mname, Lname, Gender, DOB, [Address], Salary, Supervisor_ID, Dept_ID)
VALUES
    ('Sita', '', 'Rai', 'F', '1985-12-10', 'Pokhara, Nepal', 48000.00, 1, 2),
    ('Hari', 'Bahadur', 'Tamang', 'M', '1993-08-25', 'Lalitpur, Nepal', 60000.00, 1, 3),
    ('Gita', 'Devi', 'Thapa', 'F', '1988-03-20', 'Biratnagar, Nepal', 52000.00, 1, 4),
    ('Nabin', 'Shankar', 'Bista', 'M', '1995-06-05', 'Kathmandu, Nepal', 56000.00, 1, 1);
GO

CREATE TABLE PROJECT(
	ID INT IDENTITY(1,1),
	Pname VARCHAR(50) NOT NULL,
	Dept_ID INT,
	CONSTRAINT PK_PROJECT_PNUM_PLOC PRIMARY KEY(ID),
	CONSTRAINT FK_PROJECT_DEPT_ID FOREIGN KEY(Dept_ID) REFERENCES DEPARTMENT(ID)
)
GO

-- Inserting values into the PROJECT table
INSERT INTO PROJECT (Pname, Dept_ID)
VALUES
    ('Project A', 1),
    ('Project B', 2),
    ('Project C', 1),
    ('Project D', 3);
GO

CREATE TABLE [DEPENDENT](
	ID INT IDENTITY(1,1),
	EMP_ID INT NOT NULL,
	Dependent_Name VARCHAR(50) NOT NULL,
	Gender CHAR(1) NOT NULL,
	DOB DATE NOT NULL,
	Relationship VARCHAR(50) NOT NULL,
	CONSTRAINT PK_DEPENDENT_ID PRIMARY KEY(ID),
	CONSTRAINT FK_DEPENDENT_EMP_ID FOREIGN KEY(EMP_ID) REFERENCES EMPLOYEE(ID)
)
GO

-- Inserting one dependent for each employee
INSERT INTO [DEPENDENT] (EMP_ID, Dependent_Name, Gender, DOB, Relationship)
VALUES
    (1, 'Sarita Shrestha', 'F', '2010-02-28', 'Daughter'),
    (2, 'Amit Rai', 'M', '2008-07-15', 'Son'),
    (3, 'Sushma Tamang', 'F', '2015-09-10', 'Daughter'),
    (4, 'Rohan Thapa', 'M', '2012-04-05', 'Son'),
    (5, 'Sima Bista', 'F', '2017-11-20', 'Daughter');
GO

SELECT TOP 1 FullName, D.Dept_Name, P.Pname, E.Salary 
FROM EMPLOYEE E
		INNER JOIN DEPARTMENT D ON E.Dept_ID = D.ID
		INNER JOIN PROJECT P ON P.Dept_ID = D.ID
ORDER BY E.Salary DESC

==========================================================================================================================

-- Q.NO. 2

CREATE TABLE EMPLOYEE(
	ID INT IDENTITY(1,1)
	, [NAME] VARCHAR(50)
	, OCCUPATION VARCHAR(50)
	, WORKING_DATE DATE
	, WORKING_HOUR INT
	, CONSTRAINT PK_EMPLOYEE_ID PRIMARY KEY(ID)
)
GO


CREATE TRIGGER BEFORE_EMPLOYEE_INSERT
ON EMPLOYEE
INSTEAD OF INSERT
AS
BEGIN
	SET NOCOUNT ON;
	
	INSERT INTO EMPLOYEE([NAME], OCCUPATION, WORKING_DATE, WORKING_HOUR)
	SELECT i.[name], i.OCCUPATION, i.WORKING_DATE, (CASE WHEN i.WORKING_HOUR >0 THEN i.WORKING_HOUR ELSE 0 END)
	FROM inserted i
END
GO

SELECT * FROM EMPLOYEE

INSERT INTO EMPLOYEE([NAME], OCCUPATION, WORKING_DATE, WORKING_HOUR)
VALUES  ('John Doe', 'Engineer', '2023-09-28', 8),
		('Jane Smith', 'Manager', '2023-09-28', -2),
		('Alice Johnson', 'Designer', '2023-09-27', 6),
		('Bob Brown', 'Technician', '2023-09-27', 0),
		('Eva Davis', 'Analyst', '2023-09-26', -4);"
cvsJSPuA,News Sep28 23,Newscaster_Ned,Email,Thursday 28th of September 2023 10:38:16 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

W‎e‎l‎l‎,‎ ‎i‎t‎'‎s‎ ‎t‎i‎m‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎ ‎L‎e‎t‎ ‎d‎a‎d‎d‎y‎ ‎N‎e‎d‎ ‎g‎i‎v‎e‎ ‎i‎t‎ ‎t‎o‎ ‎y‎a‎.‎

F‎o‎r‎ ‎H‎o‎l‎l‎y‎w‎o‎o‎d‎ ‎W‎r‎i‎t‎e‎r‎s‎,‎ ‎H‎u‎m‎a‎n‎s‎ ‎H‎a‎v‎e‎ ‎W‎o‎n‎ ‎t‎h‎e‎ ‎B‎a‎t‎t‎l‎e‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎A‎I‎ ‎.‎.‎.‎ ‎F‎o‎r‎ ‎N‎o‎w‎
K‎e‎r‎r‎y‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎ ‎D‎o‎e‎s‎n‎'‎t‎ ‎W‎a‎n‎t‎ ‎t‎o‎ ‎B‎e‎ ‎‘‎A‎c‎c‎e‎s‎s‎o‎r‎y‎ ‎t‎o‎ ‎a‎ ‎W‎h‎i‎t‎e‎ ‎W‎o‎m‎a‎n‎’‎s‎ ‎J‎o‎u‎r‎n‎e‎y‎’‎
B‎r‎u‎c‎e‎ ‎S‎p‎r‎i‎n‎g‎s‎t‎e‎e‎n‎ ‎P‎o‎s‎t‎p‎o‎n‎e‎s‎ ‎R‎e‎m‎a‎i‎n‎i‎n‎g‎ ‎2‎0‎2‎3‎ ‎T‎o‎u‎r‎ ‎D‎a‎t‎e‎s‎
W‎a‎t‎c‎h‎ ‎L‎i‎v‎e‎:‎ ‎H‎o‎u‎s‎e‎ ‎H‎o‎l‎d‎s‎ ‎F‎i‎r‎s‎t‎ ‎H‎e‎a‎r‎i‎n‎g‎ ‎i‎n‎ ‎B‎i‎d‎e‎n‎ ‎I‎m‎p‎e‎a‎c‎h‎m‎e‎n‎t‎ ‎I‎n‎q‎u‎i‎r‎y‎
S‎t‎u‎d‎y‎:‎ ‎G‎o‎o‎g‎l‎e‎ ‎S‎e‎a‎r‎c‎h‎e‎s‎ ‎B‎i‎a‎s‎e‎d‎ ‎i‎n‎ ‎F‎a‎v‎o‎r‎ ‎o‎f‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎,‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎R‎F‎K‎ ‎J‎r‎,‎ ‎G‎O‎P‎
'‎H‎a‎r‎r‎y‎ ‎P‎o‎t‎t‎e‎r‎'‎ ‎S‎t‎a‎r‎ ‎M‎i‎c‎h‎a‎e‎l‎ ‎G‎a‎m‎b‎o‎n‎,‎ ‎W‎h‎o‎ ‎P‎l‎a‎y‎e‎d‎ ‎D‎u‎m‎b‎l‎e‎d‎o‎r‎e‎,‎ ‎D‎e‎a‎d‎ ‎a‎t‎ ‎8‎2‎
H‎o‎u‎s‎e‎ ‎B‎l‎o‎c‎k‎s‎ ‎P‎r‎o‎p‎o‎s‎a‎l‎s‎ ‎t‎o‎ ‎E‎n‎d‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎A‎i‎d‎,‎ ‎T‎r‎a‎n‎s‎f‎e‎r‎ ‎o‎f‎ ‎C‎l‎u‎s‎t‎e‎r‎ ‎B‎o‎m‎b‎s‎
O‎u‎t‎r‎a‎g‎e‎ ‎a‎s‎ ‎O‎n‎e‎ ‎o‎f‎ ‎B‎r‎i‎t‎a‎i‎n‎'‎s‎ ‎M‎o‎s‎t‎ ‎F‎a‎m‎o‎u‎s‎ ‎T‎r‎e‎e‎s‎ ‎C‎u‎t‎ ‎D‎o‎w‎n‎ ‎O‎v‎e‎r‎n‎i‎g‎h‎t‎
C‎h‎e‎r‎ ‎A‎c‎c‎u‎s‎e‎d‎ ‎o‎f‎ ‎H‎i‎r‎i‎n‎g‎ ‎F‎o‎u‎r‎ ‎M‎e‎n‎ ‎t‎o‎ ‎K‎i‎d‎n‎a‎p‎ ‎H‎e‎r‎ ‎S‎o‎n‎
M‎o‎r‎e‎ ‎D‎e‎a‎t‎h‎s‎ ‎a‎s‎ ‎I‎m‎p‎o‎r‎t‎e‎d‎ ‎G‎a‎n‎g‎ ‎V‎i‎o‎l‎e‎n‎c‎e‎ ‎C‎o‎n‎t‎i‎n‎u‎e‎s‎ ‎i‎n‎ ‎S‎w‎e‎d‎e‎n‎
M‎a‎r‎s‎h‎a‎ ‎B‎l‎a‎c‎k‎b‎u‎r‎n‎ ‎E‎n‎d‎o‎r‎s‎e‎s‎ ‎D‎a‎v‎e‎ ‎M‎c‎C‎o‎r‎m‎i‎c‎k‎'‎s‎ ‎B‎i‎d‎ ‎t‎o‎ ‎U‎n‎s‎e‎a‎t‎ ‎B‎o‎b‎ ‎C‎a‎s‎e‎y‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
W‎a‎t‎c‎h‎ ‎L‎i‎v‎e‎:‎ ‎F‎i‎r‎s‎t‎ ‎B‎i‎d‎e‎n‎ ‎I‎m‎p‎e‎a‎c‎h‎m‎e‎n‎t‎ ‎H‎e‎a‎r‎i‎n‎g‎

C‎o‎r‎r‎u‎p‎t‎i‎o‎n‎ ‎a‎n‎d‎ ‎a‎b‎u‎s‎e‎ ‎o‎f‎ ‎p‎u‎b‎l‎i‎c‎ ‎o‎f‎f‎i‎c‎e‎

T‎h‎e‎ ‎E‎v‎i‎d‎e‎n‎c‎e‎:‎ ‎E‎m‎a‎i‎l‎s‎,‎ ‎T‎e‎x‎t‎s‎,‎ ‎B‎a‎n‎k‎ ‎R‎e‎c‎o‎r‎d‎s‎

T‎h‎e‎ ‎H‎o‎u‎s‎e‎ ‎o‎f‎ ‎R‎e‎p‎r‎e‎s‎e‎n‎t‎a‎t‎i‎v‎e‎s‎ ‎w‎i‎l‎l‎ ‎h‎o‎l‎d‎ ‎i‎t‎s‎ ‎f‎i‎r‎s‎t‎ ‎h‎e‎a‎r‎i‎n‎g‎ ‎o‎n‎ ‎t‎h‎e‎ ‎i‎m‎p‎e‎a‎c‎h‎m‎e‎n‎t‎ ‎i‎n‎q‎u‎i‎r‎y‎ ‎i‎n‎t‎o‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎o‎n‎ ‎T‎h‎u‎r‎s‎d‎a‎y‎,‎ ‎S‎e‎p‎t‎e‎m‎b‎e‎r‎ ‎2‎8‎.‎

B‎R‎E‎I‎T‎B‎A‎R‎T‎ ‎N‎E‎W‎S‎5‎2‎
…‎H‎U‎N‎T‎E‎R‎ ‎R‎E‎F‎E‎R‎R‎E‎D‎ ‎T‎O‎ ‎S‎E‎L‎L‎I‎N‎G‎ ‎A‎C‎C‎E‎S‎S‎ ‎T‎O‎ ‎D‎A‎D‎ ‎A‎S‎ ‎‘‎K‎E‎Y‎S‎’‎ ‎T‎O‎ ‎‘‎M‎Y‎ ‎F‎A‎M‎I‎L‎Y‎’‎S‎ ‎O‎N‎L‎Y‎ ‎A‎S‎S‎E‎T‎’‎
W‎E‎N‎D‎E‎L‎L‎ ‎H‎U‎S‎E‎B‎Ø‎
8‎7‎
*‎T‎H‎E‎ ‎U‎N‎I‎V‎I‎S‎I‎O‎N‎ ‎D‎E‎B‎A‎T‎E‎!‎*‎

B‎I‎D‎E‎N‎ ‎G‎E‎T‎S‎ ‎P‎A‎S‎S‎

R‎E‎P‎U‎B‎L‎I‎C‎A‎N‎ ‎R‎U‎M‎P‎U‎S‎:‎ ‎E‎V‎E‎R‎Y‎O‎N‎E‎ ‎S‎P‎E‎A‎K‎S‎ ‎–‎ ‎A‎T‎ ‎S‎A‎M‎E‎ ‎T‎I‎M‎E‎

D‎I‎D‎ ‎T‎R‎U‎M‎P‎ ‎W‎I‎N‎?‎

D‎I‎D‎ ‎D‎E‎S‎A‎N‎T‎I‎S‎ ‎C‎H‎A‎N‎G‎E‎ ‎M‎O‎M‎E‎N‎T‎U‎M‎?‎

C‎H‎R‎I‎S‎T‎I‎E‎ ‎C‎H‎E‎E‎S‎E‎ ‎B‎A‎L‎L‎:‎ ‎T‎R‎O‎T‎S‎ ‎O‎U‎T‎ ‎H‎A‎C‎K‎N‎E‎Y‎E‎D‎ ‎’‎D‎O‎N‎A‎L‎D‎ ‎D‎U‎C‎K‎’‎ ‎L‎I‎N‎E‎

F‎O‎X‎ ‎U‎S‎E‎S‎ ‎R‎E‎A‎G‎A‎N‎ ‎T‎O‎ ‎P‎U‎S‎H‎ ‎A‎M‎N‎E‎S‎T‎Y‎…‎
M‎A‎T‎T‎H‎E‎W‎ ‎B‎O‎Y‎L‎E‎
6‎,‎9‎4‎8‎
…‎T‎R‎U‎M‎P‎ ‎C‎A‎M‎P‎A‎I‎G‎N‎ ‎T‎O‎ ‎R‎N‎C‎:‎ ‎E‎N‎D‎ ‎T‎H‎E‎M‎,‎ ‎S‎A‎V‎E‎ ‎R‎E‎S‎O‎U‎R‎C‎E‎S‎ ‎F‎O‎R‎ ‎B‎E‎A‎T‎I‎N‎G‎ ‎B‎I‎D‎E‎N‎
H‎A‎N‎N‎A‎H‎ ‎B‎L‎E‎A‎U‎
8‎8‎
T‎R‎U‎M‎P‎ ‎T‎O‎ ‎A‎U‎T‎O‎ ‎W‎O‎R‎K‎E‎R‎S‎:‎ ‎‘‎Y‎O‎U‎ ‎B‎U‎I‎L‎T‎ ‎T‎H‎I‎S‎ ‎C‎O‎U‎N‎T‎R‎Y‎’‎
J‎O‎H‎N‎ ‎C‎A‎R‎N‎E‎Y‎
2‎2‎3‎
N‎E‎W‎S‎O‎M‎ ‎D‎I‎S‎M‎I‎S‎S‎E‎S‎ ‎P‎A‎R‎E‎N‎T‎S‎’‎ ‎R‎I‎G‎H‎T‎ ‎T‎O‎ ‎K‎N‎O‎W‎ ‎A‎B‎O‎U‎T‎ ‎K‎I‎D‎S‎’‎ ‎G‎E‎N‎D‎E‎R‎ ‎T‎R‎A‎N‎S‎I‎T‎I‎O‎N‎S‎
J‎O‎E‎L‎ ‎B‎.‎ ‎P‎O‎L‎L‎A‎K‎
3‎5‎9‎

B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎B‎u‎s‎i‎n‎e‎s‎s‎ ‎D‎i‎g‎e‎s‎t‎:‎ ‎C‎a‎n‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎M‎e‎e‎t‎ ‎t‎h‎e‎ ‎U‎A‎W‎ ‎S‎t‎r‎i‎k‎e‎ ‎C‎h‎a‎l‎l‎e‎n‎g‎e‎?‎
1‎,‎2‎1‎9‎

T‎r‎u‎m‎p‎ ‎F‎r‎a‎u‎d‎ ‎C‎a‎s‎e‎:‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎J‎u‎d‎g‎e‎,‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎P‎r‎o‎s‎e‎c‎u‎t‎o‎r‎,‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎C‎i‎t‎y‎
1‎0‎,‎2‎6‎7‎
B‎i‎d‎e‎n‎ ‎D‎o‎e‎s‎ ‎N‎o‎t‎ ‎M‎e‎n‎t‎i‎o‎n‎ ‎H‎i‎s‎ ‎E‎V‎ ‎M‎a‎n‎d‎a‎t‎e‎s‎ ‎i‎n‎ ‎V‎i‎s‎i‎t‎ ‎w‎i‎t‎h‎ ‎S‎t‎r‎i‎k‎i‎n‎g‎ ‎A‎u‎t‎o‎ ‎W‎o‎r‎k‎e‎r‎s‎
B‎i‎d‎e‎n‎ ‎D‎o‎e‎s‎ ‎N‎o‎t‎ ‎M‎e‎n‎t‎i‎o‎n‎ ‎H‎i‎s‎ ‎E‎V‎ ‎M‎a‎n‎d‎a‎t‎e‎s‎ ‎i‎n‎ ‎V‎i‎s‎i‎t‎ ‎w‎i‎t‎h‎ ‎S‎t‎r‎i‎k‎i‎n‎g‎ ‎A‎u‎t‎o‎ ‎W‎o‎r‎k‎e‎r‎s‎
5‎,‎1‎5‎6‎
*‎*‎*‎ ‎G‎O‎P‎ ‎D‎e‎b‎a‎t‎e‎ ‎L‎i‎v‎e‎w‎i‎r‎e‎ ‎*‎*‎*‎ ‎T‎r‎u‎m‎p‎ ‎t‎o‎ ‎M‎e‎e‎t‎ ‎A‎u‎t‎o‎w‎o‎r‎k‎e‎r‎s‎,‎ ‎O‎t‎h‎e‎r‎s‎ ‎D‎e‎b‎a‎t‎e‎
*‎*‎*‎ ‎G‎O‎P‎ ‎D‎e‎b‎a‎t‎e‎ ‎L‎i‎v‎e‎w‎i‎r‎e‎ ‎*‎*‎*‎ ‎T‎r‎u‎m‎p‎ ‎t‎o‎ ‎M‎e‎e‎t‎ ‎A‎u‎t‎o‎w‎o‎r‎k‎e‎r‎s‎,‎ ‎O‎t‎h‎e‎r‎s‎ ‎D‎e‎b‎a‎t‎e‎
6‎,‎9‎4‎8‎
T‎r‎u‎m‎p‎:‎ ‎B‎i‎d‎e‎n‎ ‎G‎e‎t‎s‎ ‎H‎i‎s‎ ‎H‎a‎n‎d‎s‎ ‎D‎i‎r‎t‎y‎ ‎t‎o‎ ‎A‎c‎c‎e‎p‎t‎ ‎C‎a‎s‎h‎ ‎f‎r‎o‎m‎ ‎F‎o‎r‎e‎i‎g‎n‎ ‎C‎o‎u‎n‎t‎r‎i‎e‎s‎
T‎r‎u‎m‎p‎:‎ ‎B‎i‎d‎e‎n‎ ‎G‎e‎t‎s‎ ‎H‎i‎s‎ ‎H‎a‎n‎d‎s‎ ‎D‎i‎r‎t‎y‎ ‎t‎o‎ ‎A‎c‎c‎e‎p‎t‎ ‎C‎a‎s‎h‎ ‎f‎r‎o‎m‎ ‎F‎o‎r‎e‎i‎g‎n‎ ‎C‎o‎u‎n‎t‎r‎i‎e‎s‎
7‎2‎6‎
A‎n‎t‎h‎r‎o‎p‎o‎l‎o‎g‎i‎c‎a‎l‎ ‎S‎o‎c‎i‎e‎t‎i‎e‎s‎ ‎B‎a‎n‎ ‎D‎i‎s‎c‎u‎s‎s‎i‎o‎n‎ ‎o‎f‎ ‎B‎i‎o‎l‎o‎g‎i‎c‎a‎l‎ ‎S‎e‎x‎
A‎n‎t‎h‎r‎o‎p‎o‎l‎o‎g‎i‎c‎a‎l‎ ‎S‎o‎c‎i‎e‎t‎i‎e‎s‎ ‎B‎a‎n‎ ‎D‎i‎s‎c‎u‎s‎s‎i‎o‎n‎ ‎o‎f‎ ‎B‎i‎o‎l‎o‎g‎i‎c‎a‎l‎ ‎S‎e‎x‎
1‎5‎7‎
'‎U‎n‎w‎a‎t‎c‎h‎a‎b‎l‎e‎'‎:‎ ‎V‎i‎e‎w‎e‎r‎s‎ ‎B‎l‎a‎s‎t‎ ‎R‎N‎C‎,‎ ‎F‎o‎x‎ ‎f‎o‎r‎ ‎I‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎U‎n‎i‎v‎i‎s‎i‎o‎n‎ ‎i‎n‎ ‎D‎e‎b‎a‎t‎e‎
'‎U‎n‎w‎a‎t‎c‎h‎a‎b‎l‎e‎'‎:‎ ‎V‎i‎e‎w‎e‎r‎s‎ ‎B‎l‎a‎s‎t‎ ‎R‎N‎C‎,‎ ‎F‎o‎x‎ ‎f‎o‎r‎ ‎I‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎U‎n‎i‎v‎i‎s‎i‎o‎n‎ ‎i‎n‎ ‎D‎e‎b‎a‎t‎e‎
6‎6‎0‎
E‎n‎e‎r‎g‎y‎ ‎I‎n‎d‎u‎s‎t‎r‎y‎ ‎C‎o‎n‎f‎r‎o‎n‎t‎s‎ ‎C‎h‎a‎l‎l‎e‎n‎g‎e‎ ‎o‎f‎ ‎P‎r‎o‎d‎u‎c‎i‎n‎g‎ ‎w‎h‎e‎n‎ ‎B‎i‎d‎e‎n‎ ‎D‎e‎s‎p‎i‎s‎e‎s‎ ‎T‎h‎e‎m‎
E‎n‎e‎r‎g‎y‎ ‎I‎n‎d‎u‎s‎t‎r‎y‎ ‎C‎o‎n‎f‎r‎o‎n‎t‎s‎ ‎C‎h‎a‎l‎l‎e‎n‎g‎e‎ ‎o‎f‎ ‎P‎r‎o‎d‎u‎c‎i‎n‎g‎ ‎w‎h‎e‎n‎ ‎B‎i‎d‎e‎n‎ ‎D‎e‎s‎p‎i‎s‎e‎s‎ ‎T‎h‎e‎m‎
3‎,‎4‎1‎0‎
C‎N‎N‎'‎s‎ ‎C‎o‎o‎p‎e‎r‎:‎ ‎W‎h‎y‎ ‎I‎s‎ ‎H‎u‎n‎t‎e‎r‎ ‎L‎i‎s‎t‎i‎n‎g‎ ‎H‎i‎s‎ ‎D‎a‎d‎'‎s‎ ‎A‎d‎d‎r‎e‎s‎s‎ ‎o‎n‎ ‎W‎i‎r‎e‎s‎ ‎R‎e‎l‎e‎v‎a‎n‎t‎?‎
C‎N‎N‎'‎s‎ ‎C‎o‎o‎p‎e‎r‎:‎ ‎W‎h‎y‎ ‎I‎s‎ ‎H‎u‎n‎t‎e‎r‎ ‎L‎i‎s‎t‎i‎n‎g‎ ‎H‎i‎s‎ ‎D‎a‎d‎'‎s‎ ‎A‎d‎d‎r‎e‎s‎s‎ ‎o‎n‎ ‎W‎i‎r‎e‎s‎ ‎R‎e‎l‎e‎v‎a‎n‎t‎?‎
2‎3‎6‎
N‎Y‎T‎ ‎F‎a‎c‎t‎ ‎C‎h‎e‎c‎k‎s‎ ‎R‎a‎m‎a‎s‎w‎a‎m‎y‎,‎ ‎S‎a‎y‎s‎ ‎T‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎i‎s‎m‎ ‎N‎o‎t‎ ‎'‎M‎e‎n‎t‎a‎l‎ ‎H‎e‎a‎l‎t‎h‎ ‎D‎i‎s‎o‎r‎d‎e‎r‎'‎
N‎Y‎T‎ ‎F‎a‎c‎t‎ ‎C‎h‎e‎c‎k‎s‎ ‎R‎a‎m‎a‎s‎w‎a‎m‎y‎,‎ ‎S‎a‎y‎s‎ ‎T‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎i‎s‎m‎ ‎N‎o‎t‎ ‎'‎M‎e‎n‎t‎a‎l‎ ‎H‎e‎a‎l‎t‎h‎ ‎D‎i‎s‎o‎r‎d‎e‎r‎'‎

S‎i‎l‎v‎e‎r‎b‎a‎c‎k‎ ‎B‎r‎e‎a‎k‎s‎ ‎i‎n‎t‎o‎ ‎E‎l‎d‎e‎r‎l‎y‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎'‎s‎ ‎R‎o‎o‎m‎ ‎a‎n‎d‎ ‎B‎e‎a‎t‎s‎ ‎H‎i‎m‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎.‎

O‎h‎ ‎y‎e‎a‎h‎,‎ ‎p‎o‎l‎i‎c‎e‎ ‎c‎o‎u‎l‎d‎n‎'‎t‎ ‎f‎i‎n‎d‎ ‎a‎ ‎m‎o‎t‎i‎v‎e‎.‎.‎.‎ ‎I‎t‎'‎s‎ ‎j‎u‎s‎t‎ ‎w‎h‎a‎t‎ ‎n‎e‎g‎r‎o‎e‎s‎ ‎d‎o‎.‎


M‎o‎n‎k‎e‎y‎ ‎G‎e‎t‎s‎ ‎1‎0‎ ‎Y‎e‎a‎r‎s‎ ‎A‎f‎t‎e‎r‎ ‎C‎r‎a‎s‎h‎i‎n‎g‎ ‎H‎i‎s‎ ‎C‎a‎r‎ ‎i‎n‎t‎o‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎,‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎H‎i‎m‎.‎


B‎a‎b‎o‎o‎n‎ ‎N‎a‎m‎e‎d‎ ‎S‎a‎v‎o‎n‎ ‎S‎c‎h‎m‎u‎s‎ ‎G‎e‎t‎s‎ ‎4‎0‎ ‎Y‎e‎a‎r‎s‎ ‎A‎f‎t‎e‎r‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎H‎i‎s‎ ‎W‎h‎i‎t‎e‎ ‎H‎a‎l‎f‎ ‎S‎i‎s‎t‎e‎r‎.‎


J‎i‎g‎a‎b‎o‎o‎ ‎G‎e‎t‎s‎ ‎L‎i‎f‎e‎ ‎A‎f‎t‎e‎r‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎H‎i‎s‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎G‎i‎r‎l‎f‎r‎i‎e‎n‎d‎ ‎a‎n‎d‎ ‎T‎h‎e‎i‎r‎ ‎U‎n‎b‎o‎r‎n‎ ‎N‎i‎g‎l‎e‎t‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
S‎u‎n‎n‎y‎
9‎6‎°‎
/‎6‎9‎°‎
1‎%‎
S‎E‎ ‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎8‎ ‎|‎ ‎D‎a‎y‎
9‎6‎°‎
1‎%‎
S‎E‎
8‎
 ‎
m‎p‎h‎
P‎l‎e‎n‎t‎i‎f‎u‎l‎ ‎s‎u‎n‎s‎h‎i‎n‎e‎.‎ ‎H‎i‎g‎h‎ ‎9‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
5‎1‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
8‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎2‎1‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎1‎9‎ ‎p‎m‎
T‎h‎u‎ ‎2‎8‎ ‎|‎ ‎N‎i‎g‎h‎t‎
6‎9‎°‎
8‎%‎
S‎
8‎
 ‎
m‎p‎h‎
M‎o‎s‎t‎l‎y‎ ‎c‎l‎e‎a‎r‎.‎ ‎L‎o‎w‎ ‎6‎9‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
7‎3‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
7‎:‎0‎8‎ ‎p‎m‎
F‎u‎l‎l‎ ‎M‎o‎o‎n‎
M‎o‎o‎n‎s‎e‎t‎
6‎:‎2‎3‎ ‎a‎m‎
F‎r‎i‎ ‎2‎9‎
S‎u‎n‎n‎y‎
9‎7‎°‎
/‎7‎1‎°‎
8‎%‎
E‎S‎E‎ ‎9‎ ‎m‎p‎h‎
S‎a‎t‎ ‎3‎0‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎6‎°‎
/‎7‎0‎°‎
1‎6‎%‎
E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎6‎°‎
/‎7‎1‎°‎
1‎2‎%‎
E‎ ‎1‎2‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎2‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎6‎°‎
/‎7‎1‎°‎
2‎4‎%‎
E‎ ‎1‎1‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎5‎°‎
/‎7‎2‎°‎
1‎2‎%‎
S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎4‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
9‎4‎°‎
/‎7‎1‎°‎
3‎2‎%‎
S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎5‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
9‎1‎°‎
/‎7‎0‎°‎
3‎4‎%‎
N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎8‎°‎
/‎6‎6‎°‎
2‎4‎%‎
N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎8‎°‎
/‎6‎7‎°‎
2‎4‎%‎
E‎N‎E‎ ‎9‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎7‎°‎
/‎6‎5‎°‎
1‎7‎%‎
N‎E‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎5‎°‎
/‎6‎4‎°‎
2‎4‎%‎
E‎N‎E‎ ‎9‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎0‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎6‎°‎
/‎6‎5‎°‎
2‎4‎%‎
N‎E‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎7‎°‎
/‎6‎4‎°‎
2‎3‎%‎
N‎N‎E‎ ‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎6‎°‎
/‎6‎5‎°‎
2‎4‎%‎
E‎ ‎9‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎F‎r‎a‎n‎k‎e‎n‎s‎t‎e‎i‎n‎'‎s‎ ‎r‎e‎s‎u‎r‎r‎e‎c‎t‎i‎o‎n‎.‎ 🧟

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎r‎a‎n‎s‎p‎h‎o‎b‎i‎a‎
T‎r‎a‎n‎s‎p‎h‎o‎b‎i‎a‎ ‎i‎s‎ ‎a‎ ‎b‎u‎l‎l‎s‎h‎i‎t‎ ‎t‎e‎r‎m‎ ‎t‎o‎ ‎d‎e‎s‎c‎r‎i‎b‎e‎ ‎e‎v‎e‎r‎y‎ ‎p‎e‎r‎s‎o‎n‎ ‎w‎h‎o‎ ‎i‎s‎n‎'‎t‎ ‎t‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎e‎d‎.‎ ‎B‎e‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎ ‎o‎n‎l‎y‎ ‎w‎a‎y‎ ‎t‎o‎ ‎n‎o‎t‎ ‎b‎e‎ ‎t‎r‎a‎n‎s‎p‎h‎o‎b‎i‎c‎ ‎i‎s‎ ‎t‎o‎ ‎b‎e‎ ‎t‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎e‎d‎,‎ ‎a‎n‎d‎ ‎e‎v‎e‎n‎ ‎t‎h‎e‎n‎,‎ ‎i‎f‎ ‎y‎o‎u‎ ‎d‎i‎s‎a‎g‎r‎e‎e‎ ‎t‎h‎a‎t‎ ‎e‎v‎e‎r‎y‎ ‎n‎o‎n‎-‎t‎r‎a‎n‎n‎y‎ ‎i‎s‎ ‎t‎r‎a‎n‎s‎p‎h‎o‎b‎i‎c‎,‎ ‎y‎o‎u‎ ‎a‎r‎e‎ ‎p‎e‎r‎p‎e‎t‎u‎a‎t‎i‎n‎g‎ ‎t‎h‎e‎ ‎t‎r‎a‎n‎s‎p‎h‎o‎b‎i‎a‎ ‎y‎o‎u‎ ‎h‎a‎v‎e‎ ‎f‎o‎r‎ ‎y‎o‎u‎r‎s‎e‎l‎f‎.‎ ‎T‎r‎a‎n‎s‎p‎h‎o‎b‎i‎a‎ ‎r‎e‎f‎e‎r‎s‎ ‎t‎o‎ ‎t‎h‎e‎ ‎r‎e‎a‎s‎o‎n‎a‎b‎l‎e‎ ‎f‎e‎a‎r‎ ‎o‎f‎ ‎t‎h‎e‎ ‎a‎b‎o‎m‎i‎n‎a‎t‎i‎o‎n‎s‎ ‎t‎h‎a‎t‎ ‎a‎r‎e‎ ‎t‎r‎a‎n‎n‎i‎e‎s‎ ‎i‎n‎ ‎a‎n‎y‎ ‎s‎h‎a‎p‎e‎ ‎o‎r‎ ‎f‎o‎r‎m‎.‎ ‎P‎e‎o‎p‎l‎e‎ ‎w‎h‎o‎ ‎s‎u‎f‎f‎e‎r‎ ‎f‎r‎o‎m‎ ‎t‎h‎i‎s‎ ‎a‎r‎e‎ ‎s‎c‎a‎r‎e‎d‎ ‎o‎f‎ ‎h‎a‎t‎e‎ ‎g‎e‎n‎d‎e‎r‎-‎c‎o‎n‎f‎u‎s‎e‎d‎ ‎m‎e‎n‎t‎a‎l‎ ‎c‎a‎s‎e‎s‎,‎ ‎a‎n‎d‎ ‎w‎o‎u‎l‎d‎ ‎k‎i‎l‎l‎ ‎t‎h‎e‎m‎ ‎i‎f‎ ‎t‎h‎e‎y‎ ‎c‎o‎u‎l‎d‎,‎ ‎l‎i‎k‎e‎ ‎a‎n‎y‎ ‎g‎o‎o‎d‎ ‎a‎m‎e‎r‎i‎c‎a‎n‎.‎

(‎(‎ ‎T‎e‎r‎f‎s‎ ‎m‎u‎s‎t‎ ‎d‎i‎e‎!‎!‎!‎1‎1‎!‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎l‎l‎ ‎I‎ ‎t‎h‎o‎u‎g‎h‎t‎ ‎I‎ ‎m‎i‎g‎h‎t‎ ‎a‎s‎ ‎w‎e‎l‎l‎ ‎s‎h‎o‎w‎ ‎y‎o‎u‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎ ‎b‎e‎f‎o‎r‎e‎ ‎t‎h‎e‎ ‎c‎h‎a‎n‎n‎e‎l‎ ‎g‎o‎t‎ ‎b‎a‎n‎n‎e‎d‎.‎

‎0‎3‎[‎1‎2‎:‎2‎2‎]‎ ‎*‎ ‎b‎e‎x‎_‎ ‎(‎u‎i‎d‎4‎6‎4‎5‎4‎8‎@‎i‎d‎-‎4‎6‎4‎5‎4‎8‎.‎u‎x‎b‎r‎i‎d‎g‎e‎.‎i‎r‎c‎c‎l‎o‎u‎d‎.‎c‎o‎m‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎3‎[‎1‎3‎:‎1‎5‎]‎ ‎*‎ ‎`‎ ‎s‎e‎t‎s‎ ‎m‎o‎d‎e‎:‎ ‎+‎o‎ ‎\‎
‎0‎3‎[‎1‎3‎:‎1‎5‎]‎ ‎*‎ ‎\‎ ‎s‎e‎t‎s‎ ‎m‎o‎d‎e‎:‎ ‎+‎v‎v‎v‎v‎ ‎v‎i‎k‎o‎d‎i‎n‎ ‎S‎L‎A‎X‎ ‎b‎e‎x‎_‎ ‎F‎l‎o‎g‎g‎e‎r‎_‎x‎
‎0‎3‎[‎1‎3‎:‎1‎5‎]‎ ‎*‎ ‎\‎ ‎s‎e‎t‎s‎ ‎m‎o‎d‎e‎:‎ ‎+‎v‎v‎v‎v‎ ‎w‎r‎k‎ ‎d‎a‎r‎w‎i‎n‎A‎S‎C‎ ‎l‎u‎l‎z‎y‎ ‎e‎r‎a‎z‎r‎
‎0‎3‎[‎1‎3‎:‎1‎5‎]‎ ‎*‎ ‎\‎ ‎s‎e‎t‎s‎ ‎m‎o‎d‎e‎:‎ ‎+‎v‎v‎v‎v‎ ‎m‎i‎d‎n‎i‎g‎h‎t‎ ‎z‎0‎z‎0‎ ‎m‎n‎y‎ ‎e‎a‎v‎
‎0‎3‎[‎1‎3‎:‎1‎5‎]‎ ‎*‎ ‎\‎ ‎s‎e‎t‎s‎ ‎m‎o‎d‎e‎:‎ ‎+‎v‎v‎v‎v‎ ‎j‎e‎w‎b‎i‎r‎d‎ ‎i‎n‎t‎e‎r‎d‎o‎m‎3‎ ‎A‎O‎L‎ ‎e‎f‎m‎a‎n‎_‎
‎0‎3‎[‎1‎3‎:‎1‎5‎]‎ ‎*‎ ‎\‎ ‎s‎e‎t‎s‎ ‎m‎o‎d‎e‎:‎ ‎+‎v‎v‎ ‎l‎o‎l‎l‎e‎r‎ ‎c‎r‎n‎s‎
‎0‎2‎[‎1‎3‎:‎1‎6‎]‎ ‎*‎ ‎+‎e‎a‎v‎ ‎(‎~‎v‎a‎e‎@‎7‎4‎.‎9‎1‎.‎1‎1‎4‎.‎1‎9‎2‎)‎ ‎Q‎u‎i‎t‎ ‎(‎Q‎u‎i‎t‎:‎ ‎R‎e‎c‎o‎n‎n‎e‎c‎t‎i‎n‎g‎‎)‎
‎0‎3‎[‎1‎3‎:‎1‎6‎]‎ ‎*‎ ‎e‎a‎v‎ ‎(‎~‎v‎a‎e‎@‎s‎h‎i‎t‎.‎c‎r‎e‎d‎i‎t‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
[‎1‎3‎:‎1‎8‎]‎ ‎<‎+‎s‎l‎y‎>‎ ‎l‎o‎l‎ ‎s‎h‎i‎t‎.‎c‎r‎e‎d‎i‎t‎ ‎g‎o‎o‎d‎ ‎o‎n‎e‎ ‎:‎p‎
[‎1‎3‎:‎1‎9‎]‎ ‎<‎+‎p‎a‎n‎c‎a‎k‎e‎s‎>‎ ‎S‎o‎ ‎y‎o‎u‎r‎ ‎m‎o‎m‎
[‎1‎3‎:‎1‎9‎]‎ ‎<‎+‎p‎a‎n‎c‎a‎k‎e‎s‎>‎ ‎S‎o‎ ‎i‎s‎*‎
[‎1‎3‎:‎1‎9‎]‎ ‎<‎+‎s‎l‎y‎>‎ ‎w‎o‎w‎ ‎r‎u‎d‎e‎
[‎1‎3‎:‎1‎9‎]‎ ‎<‎+‎p‎a‎n‎c‎a‎k‎e‎s‎>‎ ‎Y‎e‎a‎h‎ ‎
[‎1‎3‎:‎1‎9‎]‎ ‎<‎+‎p‎a‎n‎c‎a‎k‎e‎s‎>‎ ‎k‎i‎n‎d‎a‎ ‎l‎i‎k‎e‎ ‎t‎h‎a‎t‎ ‎n‎o‎w‎ ‎
[‎1‎3‎:‎1‎9‎]‎ ‎<‎+‎p‎a‎n‎c‎a‎k‎e‎s‎>‎ ‎d‎e‎a‎l‎ ‎w‎i‎t‎h‎ ‎i‎t‎ ‎
‎0‎3‎[‎1‎3‎:‎1‎9‎]‎ ‎*‎ ‎`‎ ‎s‎e‎t‎s‎ ‎m‎o‎d‎e‎:‎ ‎+‎o‎ ‎e‎a‎v‎
‎0‎3‎[‎1‎4‎:‎2‎8‎]‎ ‎*‎ ‎Z‎u‎g‎z‎w‎a‎n‎g‎ ‎(‎~‎z‎u‎g‎z‎w‎a‎n‎g‎@‎i‎p‎7‎2‎-‎2‎0‎7‎-‎1‎7‎8‎-‎2‎1‎2‎.‎l‎v‎.‎l‎v‎.‎c‎o‎x‎.‎n‎e‎t‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎3‎[‎1‎5‎:‎5‎5‎]‎ ‎*‎ ‎G‎u‎e‎s‎t‎1‎9‎8‎4‎ ‎(‎~‎a‎n‎o‎n‎@‎5‎.‎1‎8‎1‎.‎2‎3‎4‎.‎2‎2‎7‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎2‎[‎1‎6‎:‎0‎2‎]‎ ‎*‎ ‎+‎b‎e‎x‎_‎ ‎(‎u‎i‎d‎4‎6‎4‎5‎4‎8‎@‎i‎d‎-‎4‎6‎4‎5‎4‎8‎.‎u‎x‎b‎r‎i‎d‎g‎e‎.‎i‎r‎c‎c‎l‎o‎u‎d‎.‎c‎o‎m‎)‎ ‎Q‎u‎i‎t‎ ‎(‎Q‎u‎i‎t‎:‎ ‎C‎o‎n‎n‎e‎c‎t‎i‎o‎n‎ ‎c‎l‎o‎s‎e‎d‎ ‎f‎o‎r‎ ‎i‎n‎a‎c‎t‎i‎v‎i‎t‎y‎‎)‎
‎0‎3‎[‎1‎6‎:‎3‎1‎]‎ ‎*‎ ‎m‎n‎y‎ ‎i‎s‎ ‎n‎o‎w‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎h‎a‎c‎k‎e‎r‎
‎0‎2‎[‎1‎6‎:‎3‎2‎]‎ ‎*‎ ‎+‎T‎e‎c‎h‎m‎a‎n‎ ‎(‎~‎T‎e‎c‎h‎m‎a‎n‎@‎c‎l‎a‎n‎k‎.‎t‎e‎c‎h‎t‎r‎o‎n‎i‎x‎.‎n‎e‎t‎)‎ ‎Q‎u‎i‎t‎ ‎(‎Q‎u‎i‎t‎:‎ ‎S‎a‎y‎ō‎n‎a‎r‎a‎‎)‎
‎0‎3‎[‎1‎6‎:‎3‎4‎]‎ ‎*‎ ‎T‎e‎c‎h‎m‎a‎n‎-‎ ‎(‎~‎T‎e‎c‎h‎m‎a‎n‎@‎c‎l‎a‎n‎k‎.‎t‎e‎c‎h‎t‎r‎o‎n‎i‎x‎.‎n‎e‎t‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎3‎[‎1‎6‎:‎3‎8‎]‎ ‎*‎ ‎K‎y‎u‎z‎o‎6‎8‎ ‎(‎~‎K‎y‎u‎z‎o‎@‎h‎o‎s‎t‎-‎7‎9‎-‎4‎1‎-‎1‎9‎6‎-‎1‎3‎0‎.‎r‎e‎t‎a‎i‎l‎.‎t‎e‎l‎e‎c‎o‎m‎i‎t‎a‎l‎i‎a‎.‎i‎t‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎2‎[‎1‎6‎:‎4‎2‎]‎ ‎*‎ ‎K‎y‎u‎z‎o‎6‎8‎ ‎(‎~‎K‎y‎u‎z‎o‎@‎h‎o‎s‎t‎-‎7‎9‎-‎4‎1‎-‎1‎9‎6‎-‎1‎3‎0‎.‎r‎e‎t‎a‎i‎l‎.‎t‎e‎l‎e‎c‎o‎m‎i‎t‎a‎l‎i‎a‎.‎i‎t‎)‎ ‎Q‎u‎i‎t‎ ‎(‎C‎l‎i‎e‎n‎t‎ ‎Q‎u‎i‎t‎‎)‎
‎0‎3‎[‎1‎6‎:‎4‎3‎]‎ ‎*‎ ‎j‎g‎r‎ ‎(‎u‎i‎d‎5‎6‎2‎9‎5‎3‎@‎2‎a‎0‎3‎:‎5‎1‎8‎0‎:‎f‎:‎2‎:‎:‎8‎:‎9‎7‎0‎9‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎2‎[‎1‎7‎:‎0‎8‎]‎ ‎*‎ ‎+‎p‎l‎a‎g‎u‎e‎ ‎(‎b‎e‎l‎f‎o‎r‎d‎@‎2‎6‎0‎4‎:‎2‎d‎c‎0‎:‎1‎0‎0‎:‎3‎2‎b‎4‎:‎6‎0‎c‎a‎:‎6‎1‎6‎c‎:‎9‎f‎f‎9‎:‎1‎)‎ ‎Q‎u‎i‎t‎ ‎(‎P‎i‎n‎g‎ ‎t‎i‎m‎e‎o‎u‎t‎:‎ ‎2‎6‎0‎ ‎s‎e‎c‎o‎n‎d‎s‎‎)‎
‎0‎3‎[‎1‎7‎:‎1‎6‎]‎ ‎*‎ ‎E‎x‎t‎r‎e‎m‎e‎3‎5‎ ‎(‎~‎T‎e‎r‎a‎@‎S‎0‎1‎0‎6‎d‎4‎e‎2‎c‎b‎5‎1‎7‎5‎a‎5‎.‎w‎p‎.‎s‎h‎a‎w‎c‎a‎b‎l‎e‎.‎n‎e‎t‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎3‎[‎1‎7‎:‎2‎5‎]‎ ‎*‎ ‎K‎y‎u‎z‎o‎6‎8‎ ‎(‎~‎K‎y‎u‎z‎o‎@‎h‎o‎s‎t‎-‎7‎9‎-‎4‎1‎-‎1‎9‎6‎-‎1‎3‎0‎.‎r‎e‎t‎a‎i‎l‎.‎t‎e‎l‎e‎c‎o‎m‎i‎t‎a‎l‎i‎a‎.‎i‎t‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎3‎[‎1‎7‎:‎5‎7‎]‎ ‎*‎ ‎n‎o‎t‎K‎-‎ ‎i‎s‎ ‎n‎o‎w‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎s‎v‎g‎
‎0‎2‎[‎1‎8‎:‎0‎8‎]‎ ‎*‎ ‎K‎y‎u‎z‎o‎6‎8‎ ‎(‎~‎K‎y‎u‎z‎o‎@‎h‎o‎s‎t‎-‎7‎9‎-‎4‎1‎-‎1‎9‎6‎-‎1‎3‎0‎.‎r‎e‎t‎a‎i‎l‎.‎t‎e‎l‎e‎c‎o‎m‎i‎t‎a‎l‎i‎a‎.‎i‎t‎)‎ ‎Q‎u‎i‎t‎ ‎(‎Q‎u‎i‎t‎:‎ ‎K‎o‎n‎v‎e‎r‎s‎a‎t‎i‎o‎n‎ ‎t‎e‎r‎m‎i‎n‎a‎t‎e‎d‎!‎‎)‎
‎0‎3‎[‎1‎8‎:‎0‎9‎]‎ ‎*‎ ‎m‎o‎o‎n‎y‎ ‎(‎~‎m‎o‎o‎n‎y‎@‎f‎l‎a‎m‎e‎b‎o‎t‎.‎n‎e‎t‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎2‎[‎1‎9‎:‎2‎3‎]‎ ‎*‎ ‎j‎g‎r‎ ‎(‎u‎i‎d‎5‎6‎2‎9‎5‎3‎@‎2‎a‎0‎3‎:‎5‎1‎8‎0‎:‎f‎:‎2‎:‎:‎8‎:‎9‎7‎0‎9‎)‎ ‎Q‎u‎i‎t‎ ‎(‎Q‎u‎i‎t‎:‎ ‎C‎o‎n‎n‎e‎c‎t‎i‎o‎n‎ ‎c‎l‎o‎s‎e‎d‎ ‎f‎o‎r‎ ‎i‎n‎a‎c‎t‎i‎v‎i‎t‎y‎‎)‎
‎0‎3‎[‎2‎0‎:‎0‎4‎]‎ ‎*‎ ‎b‎e‎x‎_‎ ‎(‎u‎i‎d‎4‎6‎4‎5‎4‎8‎@‎i‎d‎-‎4‎6‎4‎5‎4‎8‎.‎u‎x‎b‎r‎i‎d‎g‎e‎.‎i‎r‎c‎c‎l‎o‎u‎d‎.‎c‎o‎m‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎
‎0‎3‎[‎2‎0‎:‎1‎0‎]‎ ‎*‎ ‎\‎ ‎s‎e‎t‎s‎ ‎m‎o‎d‎e‎:‎ ‎+‎v‎v‎v‎v‎ ‎m‎o‎o‎n‎y‎ ‎b‎e‎x‎_‎ ‎T‎e‎c‎h‎m‎a‎n‎-‎ ‎E‎x‎t‎r‎e‎m‎e‎3‎5‎
‎0‎3‎[‎2‎0‎:‎1‎0‎]‎ ‎*‎ ‎\‎ ‎s‎e‎t‎s‎ ‎m‎o‎d‎e‎:‎ ‎+‎v‎v‎ ‎G‎u‎e‎s‎t‎1‎9‎8‎4‎ ‎Z‎u‎g‎z‎w‎a‎n‎g‎
‎0‎2‎[‎2‎2‎:‎1‎7‎]‎ ‎*‎ ‎D‎i‎s‎c‎o‎n‎n‎e‎c‎t‎e‎d‎
‎0‎2‎[‎2‎2‎:‎1‎9‎]‎ ‎*‎ ‎A‎t‎t‎e‎m‎p‎t‎i‎n‎g‎ ‎t‎o‎ ‎r‎e‎j‎o‎i‎n‎ ‎c‎h‎a‎n‎n‎e‎l‎ ‎#‎e‎f‎n‎e‎t‎n‎e‎w‎s‎
S‎e‎s‎s‎i‎o‎n‎ ‎C‎l‎o‎s‎e‎:‎ ‎S‎a‎t‎ ‎S‎e‎p‎ ‎0‎2‎ ‎2‎2‎:‎1‎9‎:‎1‎4‎ ‎2‎0‎2‎3‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
	‎
T‎h‎e‎ ‎U‎n‎i‎t‎é‎ ‎d‎'‎H‎a‎b‎i‎t‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎B‎e‎r‎l‎i‎n‎ ‎i‎s‎ ‎a‎ ‎1‎9‎5‎8‎ ‎a‎p‎a‎r‎t‎m‎e‎n‎t‎ ‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎l‎o‎c‎a‎t‎e‎d‎ ‎i‎n‎ ‎B‎e‎r‎l‎i‎n‎,‎ ‎a‎ ‎s‎e‎m‎i‎n‎a‎l‎ ‎e‎x‎a‎m‎p‎l‎e‎ ‎o‎f‎ ‎m‎o‎d‎e‎r‎n‎i‎s‎t‎ ‎a‎r‎c‎h‎i‎t‎e‎c‎t‎u‎r‎a‎l‎ ‎d‎e‎s‎i‎g‎n‎.‎ ‎T‎h‎e‎ ‎b‎r‎a‎i‎n‎c‎h‎i‎l‎d‎ ‎o‎f‎ ‎S‎w‎i‎s‎s‎-‎F‎r‎e‎n‎c‎h‎ ‎a‎r‎c‎h‎i‎t‎e‎c‎t‎ ‎L‎e‎ ‎C‎o‎r‎b‎u‎s‎i‎e‎r‎,‎ ‎i‎t‎ ‎e‎m‎b‎o‎d‎i‎e‎s‎ ‎t‎h‎e‎ ‎p‎r‎i‎n‎c‎i‎p‎l‎e‎s‎ ‎o‎f‎ ‎h‎i‎s‎ ‎c‎o‎n‎c‎e‎p‎t‎ ‎o‎f‎ ‎u‎n‎i‎t‎é‎ ‎d‎'‎h‎a‎b‎i‎t‎a‎t‎i‎o‎n‎,‎ ‎a‎n‎ ‎i‎n‎n‎o‎v‎a‎t‎i‎v‎e‎ ‎r‎e‎s‎p‎o‎n‎s‎e‎ ‎t‎o‎ ‎p‎o‎s‎t‎–‎W‎o‎r‎l‎d‎ ‎W‎a‎r‎ ‎I‎I‎ ‎u‎r‎b‎a‎n‎-‎h‎o‎u‎s‎i‎n‎g‎ ‎c‎h‎a‎l‎l‎e‎n‎g‎e‎s‎.‎ ‎T‎h‎i‎s‎ ‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎e‎d‎i‎f‎i‎c‎e‎ ‎i‎s‎ ‎d‎i‎s‎t‎i‎n‎g‎u‎i‎s‎h‎e‎d‎ ‎b‎y‎ ‎i‎t‎s‎ ‎u‎n‎w‎a‎v‎e‎r‎i‎n‎g‎ ‎c‎o‎m‎m‎i‎t‎m‎e‎n‎t‎ ‎t‎o‎ ‎f‎u‎n‎c‎t‎i‎o‎n‎a‎l‎i‎s‎m‎ ‎a‎n‎d‎ ‎e‎f‎f‎i‎c‎i‎e‎n‎c‎y‎.‎ ‎I‎t‎ ‎e‎n‎c‎o‎m‎p‎a‎s‎s‎e‎s‎ ‎5‎3‎0‎ ‎m‎o‎d‎u‎l‎a‎r‎ ‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎u‎n‎i‎t‎s‎,‎ ‎d‎i‎s‎t‎r‎i‎b‎u‎t‎e‎d‎ ‎a‎c‎r‎o‎s‎s‎ ‎s‎e‎v‎e‎n‎t‎e‎e‎n‎ ‎f‎l‎o‎o‎r‎s‎.‎ ‎T‎h‎e‎ ‎e‎x‎t‎e‎r‎i‎o‎r‎ ‎f‎a‎ç‎a‎d‎e‎,‎ ‎s‎e‎e‎n‎ ‎h‎e‎r‎e‎ ‎i‎n‎ ‎2‎0‎2‎1‎,‎ ‎i‎s‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎i‎z‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎e‎m‎p‎l‎o‎y‎m‎e‎n‎t‎ ‎o‎f‎ ‎r‎o‎u‎g‎h‎-‎c‎a‎s‎t‎ ‎c‎o‎n‎c‎r‎e‎t‎e‎,‎ ‎w‎i‎t‎h‎ ‎c‎o‎l‎o‎r‎s‎ ‎d‎e‎s‎i‎g‎n‎e‎d‎ ‎b‎y‎ ‎L‎e‎ ‎C‎o‎r‎b‎u‎s‎i‎e‎r‎ ‎t‎o‎g‎e‎t‎h‎e‎r‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎p‎a‎i‎n‎t‎e‎r‎ ‎F‎e‎r‎n‎a‎n‎d‎ ‎L‎é‎g‎e‎r‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎M‎a‎t‎t‎h‎i‎a‎s‎ ‎S‎ü‎ß‎e‎n‎

.‎.‎.‎.‎.‎.‎.‎

N‎i‎g‎g‎e‎r‎!‎"
tfZnjp9j,abs won't let me update the series,iconoclasthero,Bash,Thursday 28th of September 2023 10:34:28 AM CDT,"{""timestamp"":""2023-09-28 11:24:18"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""Listening on http://0.0.0.0:13378"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:20"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[Watcher] \""Periodicals\"" Ready"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:20"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[Watcher] \""Comedy\"" Ready"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:21"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[Watcher] \""Recovery & Meditation Library\"" Ready"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:21"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[Watcher] \""TTC: The Great Courses & RB: The Modern Scholar\"" Ready"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:21"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[Watcher] \""\""New\"" audiobooks\"" Ready"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:21"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket Connected o4rh37zqaTI6XbDjAAAB"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:21"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Online $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:24:21"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[Watcher] \""Business-Related Collection\"" Ready"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:21"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Cancel scan 7d6cc2f0-66c7-4d53-be5b-0d034cbb1459"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:24:21"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket Connected xt37P_tPEY0pDZKrAAAD"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:21"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Online $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:24:22"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Cancel scan 7d6cc2f0-66c7-4d53-be5b-0d034cbb1459"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:24:22"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[Watcher] \""Audiobook Library\"" Ready"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:23"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[Watcher] \""eBook Library\"" Ready"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:23"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[Watcher] \""Blinkist Collection\"" Ready"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:23"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket Connected 5iMv_BcsBw648QCPAAAF"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:24:23"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Online $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:24:24"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Cancel scan 7d6cc2f0-66c7-4d53-be5b-0d034cbb1459"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:25:03"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Offline $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:25:03"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket o4rh37zqaTI6XbDjAAAB disconnected from client \""$USER\"" after 42010ms (Reason: transport close)"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:25:05"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""Loaded filterdata in 1.20s"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:25:05"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket Connected 02IJb66uFmsNfXmMAAAH"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:25:06"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Online $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:25:08"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""Loaded 5 personalized shelves in 2.32s"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:26:30"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Offline $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:26:30"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket 02IJb66uFmsNfXmMAAAH disconnected from client \""$USER\"" after 84392ms (Reason: transport close)"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:26:31"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket Connected U8aYFT_71FaM86MWAAAJ"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:26:31"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Online $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:26:32"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""Loaded 100 of 1832 items for libary page in 0.29s"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:26:45"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""Loaded 5 personalized shelves in 1.92s"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:27:40"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Offline $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:27:40"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket U8aYFT_71FaM86MWAAAJ disconnected from client \""$USER\"" after 69274ms (Reason: transport close)"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:27:41"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket Connected kqaisAdT8YhqydeMAAAL"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:27:41"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Online $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:27:44"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""Loaded 5 personalized shelves in 2.44s"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:31:02"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Offline $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:31:02"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket kqaisAdT8YhqydeMAAAL disconnected from client \""$USER\"" after 200847ms (Reason: transport close)"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:31:03"",""source"":""    at Logger.info (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] Socket Connected xBWc3plsj6C4L20tAAAN"",""levelName"":""INFO"",""level"":2}
{""timestamp"":""2023-09-28 11:31:03"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""[SocketAuthority] User Online $USER"",""levelName"":""DEBUG"",""level"":1}
{""timestamp"":""2023-09-28 11:31:06"",""source"":""    at Logger.debug (/snapshot/audiobookshelf/server/Logger.js)"",""message"":""Loaded 5 personalized shelves in 2.09s"",""levelName"":""DEBUG"",""level"":1}
"
pVW5HG96,1E,Korotkodul,C++,Thursday 28th of September 2023 10:18:02 AM CDT,"#include <algorithm>
#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;
using Pii = std::pair<int, int>;

bool Cmp(Pii aa, Pii bb) {
  return aa.first < bb.first || (aa.first == bb.first && aa.second > bb.second);
}

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);
  int nn;
  cin >> nn;
  vector<Pii> aa;
  for (int ii = 0; ii < nn; ++ii) {
    int li;
    int ri;
    cin >> li >> ri;
    aa.push_back({li, 1});
    aa.push_back({ri, -1});
  }
  sort(aa.begin(), aa.end(), Cmp);
  /*cout << ""SORTED\n"";
  for (auto pp: aa) {
    cout << pp.first << ' ' << pp.second << ""\n"";
  }*/
  vector<Pii> ans;
  int bal = 0;
  int lbound;
  int rbound;
  for (int ii = 0; ii < nn * 2; ++ii) {
    bal += aa[ii].second;
    if (bal == 1 && aa[ii].second == 1) {
      lbound = aa[ii].first;
      // cout << ""l r = "" << lbound << ' ' << rbound << ""\n"";
    }
    if (bal == 0) {
      rbound = aa[ii].first;
      // cout << ""l r = "" << lbound << ' ' << rbound << ""\n"";
      ans.push_back({lbound, rbound});
    }
  }
  cout << ans.size() << ""\n"";
  for (auto pp : ans) {
    cout << pp.first << ' ' << pp.second << ""\n"";
  }
}
"
dcKcYWFV,BEGIN,Korotkodul,C++,Thursday 28th of September 2023 10:14:38 AM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);
  
}"
WYwZvJr4,CleverLily,MladenKarachanov,Java,Thursday 28th of September 2023 10:02:26 AM CDT,"package firstStepsInCoding.MoreExercises;

import java.util.Scanner;

public class CleverLily {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int age = Integer.parseInt(scanner.nextLine());
        double price = Double.parseDouble(scanner.nextLine());
        int onePriceToys = Integer.parseInt(scanner.nextLine());
        int money = 0;
        int toys = 0;
        double allMoney = 0;
        int brotherSum = 0;
        for (int i = 1; i <= age; i++) {

            if (i % 2 == 0) {
                money = money + 10;
                allMoney = allMoney + money;
                brotherSum++;

            } else {
                toys++;
            }
        }
            double totalSum = toys * onePriceToys;
            double finish = allMoney + totalSum - brotherSum;
            double diff = Math.abs(finish - price);
            if (finish >= price) {
                System.out.printf(""Yes! %.2f"", diff);
            } else {
                System.out.printf(""No! %.2f"", diff);
            }
        }
    }"
mU6aGVwR,trial,coinwalk,JavaScript,Thursday 28th of September 2023 10:00:46 AM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/800).toFixed(8));
var blert = nudle;
var taget = (smmly*2000);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1000;
var lol = true
var synch = ((Math.floor(smmly/bogs))*bogs);
var distj = ((blert*1).toFixed(8));
var nemo = parseFloat(document.getElementById('pct_balance').value);
 
 
 
function get(){
console.clear();
nemo = document.getElementById('pct_balance').value;
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+(bpop+nudle)))&&(nemo!=circuit)) {
	blert = blert*2;
    	circuit = parseFloat(nemo);
}
if ((nemo>(sysch+(bogs*2)))&&(nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+(bpop+nudle)))) {
	blert = nudle*2;
	fatt = 1;
	lol = false; 
	circuit = parseFloat(nemo);
	sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo<(sysch-(bogs*3)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) {
	blert = nudle;
    	fatt = 1000;
    	circuit = 0;
    	lol = true;
    	sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) {
    	blert = nudle;
    	fatt = 1000;
    	circuit = 0;
    	lol = true;
    	sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
distj = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(distj);
$('#a_lo').click();
var dog = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1);
}
get();"
N8S6s4GP,LeetCode 271 - Encode and Decode Strings - 2023.09.28 solution,nathanwailes,Python,Thursday 28th of September 2023 09:55:59 AM CDT,"""""""
# Encode and Decode Strings

Design an algorithm to encode a list of strings to a string. The encoded string is then sent over the network and is decoded back to the original list of strings.

Please implement `encode` and `decode`

**Example 1:**

```
Input: [""lint"",""code"",""love"",""you""]
Output: [""lint"",""code"",""love"",""you""]

Explanation:
One possible encode method is: ""lint:;code:;love:;you""
```

**Example 2:**

```
Input: [""we"", ""say"", "":"", ""yes""]
Output: [""we"", ""say"", "":"", ""yes""]

Explanation:
One possible encode method is: ""we:;say:;:::;yes""
```
""""""


from typing import List


class Solution:
    """"""
    @param: strs: a list of strings
    @return: encodes a list of strings to a single string.
    """"""
    def encode(self, strs):
        output_string = """"
        for input_string in strs:
            output_string += str(len(input_string)) + ':' + input_string
        return output_string

    """"""
    @param: str: A string
    @return: decodes a single string to a list of strings
    """"""
    def decode(self, str):
        output_strings = []
        i = 0

        print(str)
        while i < len(str):
            length = """"
            while str[i] != ':':
                length += str[i]
                i += 1
            length = int(length)
            
            i += 1  # Skip the ':'

            output_strings.append(str[i:i + length])

            i = i + length
        return output_strings


def run_tests():
  solution = Solution()

  # First we'll do the test case shown in the task description so that will be the one shown to people first if their code isn't working.  If that passes then we'll do other test cases.
  test_cases = [{
    'input': [""lint"", ""code"", ""love"", ""you""],
    'output': [""lint"", ""code"", ""love"", ""you""]
  }, {
    'input': [""we"", ""say"", "":"", ""yes""]
  }]

  for test_case in test_cases:
    input = test_case['input']

    encoded_string = solution.encode(input)
    if not isinstance(encoded_string, str):
      print(
        'Test case failed.\nInput: {}\nExpected encode() return type to be str\nGot: {}\n'
        .format(input, type(encoded_string)))
      return

    decoded_string = solution.decode(encoded_string)
    if not decoded_string == input:
      print('Test case decode() failed.\nExpected: {}\nGot: {}\n'.format(
        input, decoded_string))
      return
  print(""All test cases passed!"")
"
TSzcxesD,Untitled,lol1234561,Java,Thursday 28th of September 2023 09:52:01 AM CDT,"import java.util.Scanner;
import java.util.Random;
public class Main {
    public static void main(String[] args) {
        Random rand =  new Random();
        Scanner scan = new Scanner(System.in);

        int[] num = new int[10];

        int total = 0;

        System.out.print(""Array 1: "");

        for( int x = 0; x < num.length; x++){
            num[x] = rand.nextInt(100)+1;
            System.out.print( num[x] + "" "");

        }
        System.out.print(""\nValue to find: "");
        int value = scan.nextInt();



        for (int x: num){
            if( x == value){
                System.out.println(value + "" is in the array."");

            }
            else if (x != value){
                System.out.println(value + "" is not in the array."");
                break;
            }
        }
        for (int i : num) {
            if (i == value) {
                total = total + 1;
            }
        }
        System.out.println(value + "" was found a total of: "" + total + "" time(s)."" );


    }
}"
ZQiypQ5t,Untitled,lol1234561,Java,Thursday 28th of September 2023 09:47:09 AM CDT,"import java.util.Scanner;
import java.util.Random;
public class Main {
    public static void main(String[] args) {
        Random rand =  new Random();
        Scanner scan = new Scanner(System.in);

        int[] num = new int[10];

        int total = 0;

        System.out.print(""Array 1: "");

        for( int x = 0; x < num.length; x++){
            num[x] = rand.nextInt(100)+1;
            System.out.print( num[x] + "" "");

        }
        System.out.print(""\nValue to find: "");
        int value = scan.nextInt();



        for (int x: num){
            if( x == value){
                System.out.println(value + "" is in the array."");

            }
        }
        for(int x = 0; x < num.length; x++){
            if(num[x] ==  value){
                total = total +1;
            }
        }
        System.out.println(value + "" was found a total of: "" + total + "" time(s)."" );


    }
}"
ReKAYDs8,TurboFilter,softupdate,PHP,Thursday 28th of September 2023 09:41:22 AM CDT,"--------------TurboFilter-------------
31373842464246463030413530463030485020506176696C696F6E204C6170746F702031352D6568337878783136343735353435363030"
pqPv4uPY,Mix of Peak and River Names,dragonbs,T-SQL,Thursday 28th of September 2023 09:27:25 AM CDT,"SELECT [PeakName], [RiverName],
LOWER(CONCAT(
	[PeakName], 
	SUBSTRING([RiverName], 2, LEN([RiverName]))
		)) AS [Mix]
FROM [Peaks], [Rivers]
WHERE RIGHT([PeakName], 1) = LEFT([RiverName], 1)
ORDER BY [Mix]"
URNMdyQm,Untitled,lol1234561,Java,Thursday 28th of September 2023 09:26:06 AM CDT,"import java.util.Scanner;
import java.util.Random;
public class Main {
    public static void main(String[] args) {
        Random rand =  new Random();
        Scanner scan = new Scanner(System.in);

        int[] num = new int[10];

        System.out.print(""Array 1: "");

        for( int x = 0; x < num.length; x++){
            num[x] = rand.nextInt(100)+1;
            System.out.print( num[x] + "" "");

        }
        System.out.print(""\nValue to find: "");
        int value = scan.nextInt();

       

        for (int x: num){
            if( x == value){
                System.out.println(value + "" is in the array."");
            }

        }


    }
}"
uiGLXV8w,monitor.lua,Gismo2501,Lua,Thursday 28th of September 2023 09:16:46 AM CDT,"local names = peripheral.call(""left"",""getNamesRemote"")

for i=1,#names do 
 print(names[i])
 if peripheral.getType(names[i]) == ""BiggerReactors_Reactor"" then
  local reactor = peripheral.wrap(names[i]) 
  while true do
   stored = reactor.battery().stored()
   capacity = reactor.battery().capacity()
   percent = stored/capacity
   if percent < 0.2 then
    print(""Currently stored:"",percent)
    reactor.setActive(true)
	print(""Battery running low.."")
	print(""Starting Reactor for 30 Seconds."")
	for i = 30,1,-1
	do 
  		print(i, "" Seconds remaining.."")
		sleep(1)
	end
   else
    print(""Currently stored:"",percent)
    reactor.setActive(false)
    sleep(5)
   end
  end
  print(stored)
 end
end"
EX1RUgLp,Untitled,maelisone,JavaScript,Thursday 28th of September 2023 09:12:48 AM CDT,"function initDownloadLinks(e){var value=document.getElementById(""inputURL"").value;console.log(value);var isVimeo=checkVimeo(value);console.log(isVimeo)
if(isVimeo){isVimeo=isVimeo[isVimeo.length-1];getVimeoDetails(isVimeo);return 0;}
var result=(extractValue(value));if(result===0){return 0;}
appendImages(result);return false;}
function downloadImage(id,quality){fetch('https://ifsc-code.in/downloadThumbnail?id='+id+'&quality='+quality).then(resp=>resp.blob()).then(blob=>{const url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.style.display='none';a.href=url;a.download=id+""-""+quality+'.jpg';document.body.appendChild(a);a.click();});}
function initFunction(){function getQueryStringValue(key){return decodeURIComponent(window.location.search.replace(new RegExp(""^(?:.*[&\\?]""+encodeURIComponent(key).replace(/[\.\+\*]/g,""\\$&"")+""(?:\\=([^&]*))?)?.*$"",""i""),""$1""));}
var id=getQueryStringValue('id');var type=getQueryStringValue(""type"");if(type==""vimeo""){document.getElementById(""inputURL"").value=""https://vimeo.com/""+id
var vimId=checkVimeo(""https://www.vimeo.com/""+id);vimId=vimId[vimId.length-1];getVimeoDetails(vimId);return 0;}
if(id!==""""){appendImages(id);}
document.getElementById(""submitButton"").onclick=function(e){initDownloadLinks(e);}
if(!(navigator.userAgent.toLowerCase().indexOf('firefox')>-1)){var elem=document.getElementById(""extension-container"");if(elem){elem.style.display='none';}}}
function setDisplay(value){var arrayOfElements=document.getElementsByClassName('download-bt');var lengthOfArray=arrayOfElements.length;for(var i=0;i<lengthOfArray;i++){arrayOfElements[i].style.display=value;}}
function appendVimeoVideos(hdLink,mdLink,sdLink){setDisplay(""none"");var clickElements=document.getElementsByClassName('download-btn');for(var i=0;i<clickElements.length;i++){clickElements[i].removeEventListener(""click"",clickBtnEvent);}
document.getElementsByClassName('right-click-info')[0].style.display=""block"";document.getElementById(""hdrestext"").textContent=""HD Image (640x480)"";document.getElementById(""sdrestext"").textContent=""SD Image (200x150)"";document.getElementById(""normalrestext"").textContent=""Normal Image (100x74)"";document.getElementById(""imgListing"").style.display=""block"";document.getElementById(""bottomListing"").style.display=""block"";document.getElementById(""topListing"").style.display=""block"";var element=document.getElementById(""maxres"")
element.setAttribute(""src"",hdLink);element.style.display=""block"";element=document.getElementById(""hqres"");element.setAttribute(""src"",sdLink);element.style.display=""block"";element=document.getElementById(""sdres"");element.setAttribute(""src"",mdLink);document.getElementById(""extraYTImg"").style.display=""none"";document.getElementById(""hdreslink"").style.display=""none"";document.getElementById(""sdreslink"").style.display=""none"";document.getElementById(""hqreslink"").style.display=""none"";}
function checkVimeo(data){var res=data.match(/https?:\/\/(?:www\.|player\.)?vimeo.com\/(?:channels\/(?:\w+\/)?|groups\/([^\/]*)\/videos\/|album\/(\d+)\/video\/|video\/|)(\d+)(?:$|\/|\?)/)
return res;}
function getVimeoDetails(link){var xmlhttp=new XMLHttpRequest();xmlhttp.onreadystatechange=function(){if(xmlhttp.readyState==XMLHttpRequest.DONE){if(xmlhttp.status==200){var data=(JSON.parse(xmlhttp.responseText));appendVimeoVideos(data[0].thumbnail_large,data[0].thumbnail_medium,data[0].thumbnail_small);}else if(xmlhttp.status==400){alert(""There is no video in the vimeo link you have given"");}else{alert(""There is no video in the vimeo link you have given"");}}};xmlhttp.open(""GET"",'https://vimeo.com/api/v2/video/'+link+'.json',true);xmlhttp.send();}
function isMaxResAvailable(result){var img=new Image()
img.onload=function(){if(this.width<1280){document.getElementById(""hdreslink"").style.display=""none"";document.getElementById(""hdrestext"").textContent=""High resolution not available"";isSDAvailalbe(result);}else{document.getElementById(""hdrestext"").textContent=""HD Image (1280x720)"";}}
img.onerror=function(){document.getElementById(""sdrestext"").textContent=""High resolution not available"";isSDAvailalbe(result);}
img.src=""https://img.youtube.com/vi/""+result+""/maxresdefault.jpg"";}
function isSDAvailalbe(result){var img=new Image()
img.onload=function(){if(this.width===120&&this.height===90){document.getElementById(""sdrestext"").textContent=""Standard Quality not available"";document.getElementById(""sdreslink"").style.display=""none"";}else{document.getElementById(""sdrestext"").textContent=""SD Image (640x480)"";}}
img.onerror=function(){document.getElementById(""sdrestext"").textContent=""Standard Quality not available"";}
img.src=""https://img.youtube.com/vi/""+result+""/sddefault.jpg"";}
function clickBtnEvent(){downloadImage(this.getAttribute('data-id'),this.getAttribute('data-quality'))}
function appendImages(result){setDisplay(""block"");var clickElements=document.getElementsByClassName('download-btn');for(var i=0;i<clickElements.length;i++){clickElements[i].removeEventListener(""click"",clickBtnEvent);console.log(clickElements);clickElements[i].addEventListener('click',clickBtnEvent,false);}
document.getElementsByClassName('right-click-info')[0].style.display=""none"";document.getElementById('hdreslink').setAttribute(""data-id"",result);document.getElementById('hdreslink').setAttribute(""data-quality"",""HD"");document.getElementById('sdreslink').setAttribute(""data-id"",result);document.getElementById('sdreslink').setAttribute(""data-quality"",""SD"");document.getElementById('hqreslink').setAttribute(""data-id"",result);document.getElementById('hqreslink').setAttribute(""data-quality"",""HQ"");document.getElementById('mqreslink').setAttribute(""data-id"",result);document.getElementById('mqreslink').setAttribute(""data-quality"",""MQ"");document.getElementById('defreslink').setAttribute(""data-id"",result);document.getElementById('defreslink').setAttribute(""data-quality"",""def"");document.getElementById(""hdreslink"").style.display=""inline"";document.getElementById(""sdreslink"").style.display=""inline"";document.getElementById(""hqreslink"").style.display=""inline"";document.getElementById(""inputURL"").value=""https://youtube.com/watch?v=""+result;document.getElementById(""imgListing"").style.display=""block"";document.getElementById(""bottomListing"").style.display=""block"";document.getElementById(""topListing"").style.display=""block"";document.getElementById(""hdrestext"").textContent=""HD Image (1280x720)"";document.getElementById(""sdrestext"").textContent=""SD Image (640x480)"";document.getElementById(""normalrestext"").textContent=""Normal Image (480x360)"";document.getElementById(""maxres"").setAttribute(""src"",""https://img.youtube.com/vi/""+result+""/maxresdefault.jpg"");document.getElementById(""sdres"").setAttribute(""src"",""https://img.youtube.com/vi/""+result+""/sddefault.jpg"");document.getElementById(""hqres"").setAttribute(""src"",""https://i3.ytimg.com/vi/""+result+""/hqdefault.jpg"");document.getElementById(""mqres"").setAttribute(""src"",""https://img.youtube.com/vi/""+result+""/mqdefault.jpg"");document.getElementById(""defres"").setAttribute(""src"",""https://img.youtube.com/vi/""+result+""/default.jpg"");isMaxResAvailable(result);document.getElementById(""extraYTImg"").style.display=""block"";}
function extractValue(data){var regex=/(?:https?:\/\/)?(?:www\.)?(?:youtu(?:be\.com\/(?:watch\?(?:v=|vi=)|v\/|vi\/)|\.be\/|be\.com\/embed\/|be\.com\/shorts\/)|youtube\.com\/\?(?:v=|vi=))([\w-]{11})/;var res=regex.exec(data)
if(res&&res[1]){return res[1];}
alert(""Please check the URL you have entered"");return 0;}
initFunction();;"
s4nYt4ky,reverse prefix func,pasholnahuy,C++,Thursday 28th of September 2023 09:01:05 AM CDT,"#include <algorithm>
#include <iostream>
#include <vector>

using namespace std;

int main() {
    int n;
    cin >> n;
    vector<int> pref(n);
    for (int i = 0; i < n; ++i){
        cin >> pref[i];
    }
    char symb = 'a';
    vector<char> s = {'a'};
    for (int i = 1; i < n; ++i){
        if (pref[i] == pref[i-1] + 1){
            s.emplace_back(s[pref[i-1]]);
        } else {
            if (pref[i] == 0){
                ++symb;
                s.emplace_back(symb);
            } else {
                s.emplace_back(s[pref[i]] - 1);
            }
        }
    }
    for (auto el: s){
        cout << el;
    }
    return 0;
}"
QcndEtfM,AGM-122,Gamenator,C++,Thursday 28th of September 2023 08:27:22 AM CDT,"class CfgPatches{
class PW_FLPMC_Weapons_Ammunition
	{
		units[]={};
		weapons[]={};
		requiredVersion=0.1;
		requiredAddons[]=
		{
			""CUP_Weapons_WeaponsCore"",
			""CUP_Weapons_WeaponsData"",
            ""CUP_Weapons_Ammunition"",
			""CUP_Weapons_Pods"",
			""CUP_Weapons_VehicleWeapons"",
			""CUP_Weapons_DynamicLoadout""
		};
        magazines[]=
		{   
           ""PW_FLPMC_2Rnd_AGM_122"",
            ""PW_FLPMC_1Rnd_AGM_122"",
            ""PW_FLPMC_4Rnd_AGM_122""
        };

    };
};

class SensorTemplateActiveRadar;
class SensorTemplateAntiRadiation;
class SensorTemplateIR;
class SensorTemplateLaser;
class SensorTemplateMan;
class SensorTemplateNV;
class SensorTemplatePassiveRadar;
class SensorTemplateVisual;


class CfgAmmo
{
class  MissileCore;
class MissileBase: MissileCore
	{
		class Components;
	};

class PW_FLPMC_AGM122_Missile: MissileBase
	{
		model=""\Pylons\Agm122\agm122.p3d"";
		proxyShape=""\Pylons\Agm122\agm122.p3d"";
		hit=700;
		indirectHit=650;
		indirectHitRange=7;
		warheadName=""ARM"";
		proximityExplosionDistance=20;
		fuseDistance=75;
		maneuvrability=42;
		airFriction=0.14;
		sideAirFriction=0.23;
		trackOversteer=1.6;
		trackLead=0.89999998;
		initTime=0;
		timeToLive=60;
		thrustTime=7;
		thrust=300;
		maxSpeed=828;
		simulationStep=0.0020000001;
		airLock=0;
		lockType=0;
		irLock=0;
		laserLock=0;
		nvLock=0;
		maverickWeaponIndexOffset=0;
		cmImmunity=0.0;
		weaponLockSystem=""16"";
		missileLockCone=180;
		missileKeepLockedCone=180;
		missileLockMaxDistance=6000;
		missileLockMinDistance=50;
		missileLockMaxSpeed=600;
		cost=1000;
		whistleDist=20;
		aiAmmoUsageFlags=256;
		manualControl=0;
		CraterEffects=""AAMissileCrater"";
		explosionEffects=""AAMissileExplosion"";
		muzzleEffect=""BIS_fnc_effectFiredHeliRocket"";
		effectsMissile=""missile3"";
		class Components : Components
		{
			class SensorsManagerComponent
			{
				class Components
				{
					class AntiRadarSensorComponent:SensorTemplatePassiveRadar
					{
						componentType = ""PassiveRadarSensorComponent"";
						class AirTarget      // ranges for targets with sky background
						{
							minRange = 50;         //minimum possible range in meters  
							maxRange = 6000;       //maximum possible range in meters                 
							objectDistanceLimitCoef = -1;    //range not limited by obj. view distance
							viewDistanceLimitCoef = -1;      //range not limited by view distance           
						};
						class GroundTarget      // ranges for targets with ground background                           
						{
							minRange = 50;         //minimum possible range in meters  
							maxRange = 6000;       //maximum possible range in meters                 
							objectDistanceLimitCoef = -1;    //range not limited by obj. view distance
							viewDistanceLimitCoef = -1;      //range not limited by view distance 
						};
						typeRecognitionDistance = 4000; // distance how far the target type gets recognized                                          
						angleRangeHorizontal = 120;     // sensor azimuth coverage in degrees         
						angleRangeVertical = 180;       // sensor elevation coverage in degrees       
						groundNoiseDistanceCoef = -1;  // portion of sensor-target-ground distance below which the targets become invisible to the sensor
						maxGroundNoiseDistance = -1;   // distance from the ground in meters, hard cap, above which the target will be visible even if still below groundNoiseDistanceCoef
						minSpeedThreshold = -1;        // target speed in km/h above which the target will start to become visible           
						maxSpeedThreshold = -1;       // target speed above which the target becomes visible even if below groundNoiseDistanceCoef, linearly decreases to minSpeedThreshold         
					};
				};
			};
		};
		
		soundFly[]=
		{
			""A3\Sounds_F\weapons\Rockets\rocket_fly_1"",
			6,
			1,
			500
		};
		SoundSetExplosion[]=
		{
			""RocketsHeavy_Exp_SoundSet"",
			""RocketsHeavy_Tail_SoundSet"",
			""Explosion_Debris_SoundSet""
		};
		class Hiteffects
		{
			hitWater=""ImpactEffectsSmall"";
		};
	};



};


class CfgWeapons{
class MissileLauncher;
class PW_FLPMC_Vmlauncher_AGM122_veh: MissileLauncher
	{
		magazines[]=
		{
			""PW_FLPMC_2Rnd_AGM_122"",
            ""PW_FLPMC_1Rnd_AGM_122"",
            ""PW_FLPMC_4Rnd_AGM_122""
		};
	};




};

class CfgNonAIVehicles
{
	class ProxyWeapon;
	class ProxyPylonPod_3x_Missile_AGM_02_F: ProxyWeapon
	{
		model	   = ""\Pylons\Agm122\agm122.p3d"";
		simulation = ""pylonpod"";
	};
};


class CfgMagazines
{
	class VehicleMagazine;

    class PW_FLPMC_1Rnd_AGM_122: VehicleMagazine
	{
		scope=2;
		displayName=""1x AGM-122 Sidearm"";
		displayNameShort=""ARM"";
		descriptionShort=""AGM-122 Sidearm Anti Radiation"";
		ammo=""PW_FLPMC_AGM122_Missile"";
		pylonWeapon= ""PW_FLPMC_Vmlauncher_AGM122_veh"";
		count=1;
		initSpeedY=-25;
		initSpeedZ= 0;
		maxLeadSpeed=1000;
		sound[]=
		{
			""A3\Sounds_F\weapons\Rockets\missile_1"",
			1.1220185,
			1.3,
			1100
		};
		reloadSound[]=
		{
			""A3\sounds_f\dummysound"",
			0.00031622799,
			1,
			20
		};
		nameSound=""missiles"";
	};
    class  PW_FLPMC_2Rnd_AGM_122: PW_FLPMC_1Rnd_AGM_122{
		displayName=""2x AGM-122 Sidearm"";
        count=2;
    };
    class  PW_FLPMC_4Rnd_AGM_122: PW_FLPMC_1Rnd_AGM_122{
		displayName=""4x AGM-122 Sidearm"";
        count=4;
    };
    class PW_FLPMC_AGM122_1RND_Loose_Pylon: PW_FLPMC_1Rnd_AGM_122
	{
		displayName=""1x AGM-122 Sidearm"";
		model=""\Pylons\Agm122\agm122.p3d"";
		count=1;
		hardpoints[]=
		{
			""CUP_SUPER_PYLON"",
			""CUP_NATO_HELO_SMALL"",
			""CUP_NATO_HELO_LARGE"",
			""CUP_NATO_HELO_WINGTIP"",
			""CUP_1Rnd_AIM_9L""
		};
		muzzlePos = ""muzzlePos"";
		muzzleEnd = ""muzzleEnd"";
		CUP_PilotControl=0;
	};



};"
vm445s88,Time Converter JS Advanced,TZinovieva,JavaScript,Thursday 28th of September 2023 08:25:40 AM CDT,"function attachEventsListeners() {
    const buttons = document.querySelectorAll('input[type=""button""]');
    const inputFields = {
        days: document.getElementById(""days""),
        hours: document.getElementById(""hours""),
        minutes: document.getElementById(""minutes""),
        seconds: document.getElementById(""seconds""),
    };

    for (let i = 0; i < buttons.length; i++) {
        buttons[i].addEventListener('click', function () {
            const inputValue = Number(inputFields[buttons[i].id.replace(""Btn"", """")].value);
            const inputUnit = buttons[i].id.replace(""Btn"", """");

            const conversionFactors = {
                days: { hours: 24, minutes: 1440, seconds: 86400 },
                hours: { days: 1 / 24, minutes: 60, seconds: 3600 },
                minutes: { days: 1 / 1440, hours: 1 / 60, seconds: 60 },
                seconds: { days: 1 / 86400, hours: 1 / 3600, minutes: 1 / 60 },
            };

            for (const unit in inputFields) {
                if (unit !== inputUnit) {
                    inputFields[unit].value = (inputValue * conversionFactors[inputUnit][unit]);
                }
            }
        });
    }
}


OR

function attachEventsListeners() {
    const daysInput = document.getElementById(""days"");
    const hoursInput = document.getElementById(""hours"");
    const minutesInput = document.getElementById(""minutes"");
    const secondsInput = document.getElementById(""seconds"");

    document.getElementById(""daysBtn"").addEventListener(""click"", () => {
        const days = parseFloat(daysInput.value);
        hoursInput.value = days * 24;
        minutesInput.value = days * 24 * 60;
        secondsInput.value = days * 24 * 60 * 60;
    });

    document.getElementById(""hoursBtn"").addEventListener(""click"", () => {
        const hours = parseFloat(hoursInput.value);
        daysInput.value = hours / 24;
        minutesInput.value = hours * 60;
        secondsInput.value = hours * 60 * 60;
    });

    document.getElementById(""minutesBtn"").addEventListener(""click"", () => {
        const minutes = parseFloat(minutesInput.value);
        daysInput.value = minutes / (24 * 60);
        hoursInput.value = minutes / 60;
        secondsInput.value = minutes * 60;
    });

    document.getElementById(""secondsBtn"").addEventListener(""click"", () => {
        const seconds = parseFloat(secondsInput.value);
        daysInput.value = seconds / (24 * 60 * 60);
        hoursInput.value = seconds / (60 * 60);
        minutesInput.value = seconds / 60;
    });
}
"
E4F57jRL,Untitled,lol1234561,Java,Thursday 28th of September 2023 08:21:55 AM CDT,"import java.util.Arrays;
import java.util.Random;
public class Main {
    public static void main(String[] args) {
        Random rand =  new Random();

        int[] num = new int[10];

        System.out.print(""Array 1: "");

        for( int x = 0; x < num.length; x++){
            num[x] = rand.nextInt(100)+1;
            num[9] = -7;
            System.out.print( num[x] + "" "");

        }
        System.out.println("" "");
        System.out.print(""Array 2: "");
        for( int x = 0; x < num.length; x++){
           num[9] = rand.nextInt(100)+1;
            System.out.print( num[x] + "" "");

        }

    }
}"
u3RSy8h7,Auto Identify,Tiago_f,mIRC,Thursday 28th of September 2023 08:10:25 AM CDT,"menu status {
  Auto Identify
  .Add nickname... :/
  .Setup... :/
  .-
  .$submenu($nickfolder($1))
}
alias nickfolder {
  var %y = 1, %nick
  while ($ini($_sdir(identify.ini), $network, %y)) {
    var %nick = %nick $ifmatch
    inc %y
  }
  var %nick = $sorttok(%nick, 32), %z = 1
  while ($wd(%nick, %z,32)) {
    var %n = $wd(%nick, %z,32)
    if ($1 == begin) return $network
    if ($1 == %z) return $iif(%n == $me, $style(1) %n,%n)) :nick %n
    inc %z
  }
  if (!%n) && ($1 == 1) return $style(2) None :noop
  if (!$network) && ($1 == 1) return $style(2) None :noop
}
"
jfeWt1ZK,Untitled,lol1234561,Java,Thursday 28th of September 2023 08:08:34 AM CDT,"import java.util.Arrays;
import java.util.Random;
public class Main {
    public static void main(String[] args) {
        Random rand =  new Random();

        int[] num = new int[1000];


        for( int x = 0; x < num.length; x++){
            num[x] = rand.nextInt(100)+1;
            System.out.print(num[x]  + ""\t"" );

        }
    }
}"
JPbKQ3b8,main.xml,Diaxon,XML,Thursday 28th of September 2023 08:07:09 AM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    xmlns:app=""http://schemas.android.com/apk/res-auto""
    xmlns:tools=""http://schemas.android.com/tools""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent""
    tools:context="".MainActivity"">

    <WebView
        android:id=""@+id/webview""
        android:layout_width=""0dp""
        android:layout_height=""100dp""
        app:layout_constraintTop_toTopOf=""parent""
        tools:layout_editor_absoluteX=""1dp"" />

    <EditText
        android:id=""@+id/name_input""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:ems=""10""
        android:hint=""Imię""
        android:inputType=""text""
        app:layout_constraintBottom_toTopOf=""@+id/last_name""
        app:layout_constraintEnd_toEndOf=""parent""
        app:layout_constraintStart_toStartOf=""parent""
        app:layout_constraintTop_toBottomOf=""@+id/webview"" />

    <EditText
        android:id=""@+id/last_name""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:layout_marginBottom=""40dp""
        android:ems=""10""
        android:hint=""Nazwisko""
        android:inputType=""text""
        app:layout_constraintBottom_toTopOf=""@+id/animals""
        app:layout_constraintEnd_toEndOf=""parent""
        app:layout_constraintStart_toStartOf=""parent"" />

    <CheckBox
        android:id=""@+id/animals""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:layout_marginBottom=""40dp""
        android:text=""Masz zwierzęta?""
        app:layout_constraintBottom_toTopOf=""@+id/animals_input""
        app:layout_constraintEnd_toEndOf=""parent""
        app:layout_constraintStart_toStartOf=""parent"" />

    <EditText
        android:id=""@+id/animals_input""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:layout_marginBottom=""112dp""
        android:ems=""10""
        android:hint=""Jakie?""
        android:inputType=""text""
        android:visibility=""invisible""
        app:layout_constraintBottom_toBottomOf=""parent""
        app:layout_constraintEnd_toEndOf=""parent""
        app:layout_constraintHorizontal_bias=""0.502""
        app:layout_constraintStart_toStartOf=""parent"" />

</androidx.constraintlayout.widget.ConstraintLayout>"
0kTif7d2,MainActivity.kt,Diaxon,Kotlin,Thursday 28th of September 2023 08:06:57 AM CDT,"package com.example.myapplication

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.webkit.WebView
import android.widget.CheckBox
import android.widget.EditText

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        val animals_input = findViewById<EditText>(R.id.animals_input)
        val webView: WebView = findViewById(R.id.webview)
        webView.loadUrl(""https://github.com"")

        val checkbox = findViewById<CheckBox>(R.id.animals)

        checkbox.setOnCheckedChangeListener { _, isChecked ->
            if (isChecked) {
                animals_input.visibility = View.VISIBLE
            } else {
                animals_input.visibility = View.GONE
            }
        }

    }
}"
xUHM6Q8W,Untitled,soyl,Java,Thursday 28th of September 2023 08:05:16 AM CDT,"
import java.time.Duration;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;

class Practicum {
    // Задайте форматирование для времени и даты в формате часы:минуты день.месяц.год
    // Пример - 12:15 02.11.21
    public static final DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern(""HH:mm dd.MM.yy"");
    // Задайте форматирование для времени в формате часы:минуты
    public static final DateTimeFormatter TIME_FORMATTER = DateTimeFormatter.ofPattern(""HH:mm"");

    public static void main(String[] args) {
        System.out.println(""Тест №1:"");
        printFlightInformation(
                ""12:15 02.11.21"",
                ""VKO"",
                ""LED"",
                30,
                1,
                55
        );

        System.out.println(""\nТест №2:"");
        printFlightInformation(
                ""14:00 03.10.21"",
                ""SVX"",
                ""VVO"",
                0,
                9,
                5
        );

        System.out.println(""\nТест №3:"");
        printFlightInformation(
                ""06:00 12.12.21"",
                ""DME"",
                ""VVO"",
                0,
                12,
                0
        );

        System.out.println(""\nТест №4:"");
        printFlightInformation(
                ""23:00 29.03.22"",
                ""LED"",
                ""SVX"",
                0,
                2,
                55
        );


    }

    private static void printFlightInformation(
            String formattedDepartureTime,
            String departureAirportCode,
            String arrivalAirportCode,
            int delay,
            int flightDurationHours,
            int flightDurationMinutes
    ) {
        Airport departureAirport;
        Airport arrivalAirport;
        // С помощью класса AirportDatabase получите данные об аэропортах вылета и посадки.
        // При получении исключения выведите сообщение исключения.
        try {
            AirportDatabase.getAirportByCode(arrivalAirportCode);
            // исполняемый код
        } catch (IllegalStateException e) {
            System.out.println(e.getMessage());
            return;
        }

        // Создайте экземпляр ZonedDateTime с помощью formattedDepartureTime и зоны аэропорта вылета.
        ZonedDateTime departure = ZonedDateTime.parse(formattedDepartureTime + departureAirport);

        // Выведите информацию о том, между какими городами будет перелёт.
        System.out.println(""Ваш билет на рейс "" + departureAirport.getCity() + "" - "" + arrivalAirport.getCity() + "": "");

        // Найдите продолжительность полёта.
        Duration flightDuration = Duration.ofHours(flightDurationHours).plusMinutes(flightDurationMinutes);
        // Найдите время прибытия с учётом зоны прилёта.
        ZonedDateTime arrival =

        // Заполните данные для передачи в метод печати билета.
        // Город вылета

        String departureCity = departureAirport.getCity();
        // Город прилёта
        String arrivalCity = arrivalAirport.getCity();
        // Отформатированное время прилёта
        String formattedArrivalTime =
        // Только время вылета
        String departureTimeOnly = ...

        printTicket(
                formattedDepartureTime,
                departureAirportCode,
                arrivalAirportCode,
                departureCity,
                arrivalCity,
                formattedArrivalTime,
                departureTimeOnly
        );

        // Добавьте проверку на случай задержки.
        if (delay > 0) {
            // Определите продолжительность задержки.
            Duration delayDuration =
            // Вычислите время вылета с учётом задержки.
            ZonedDateTime departureWithDelay = ...
            // Вычислите время прилёта с учётом задержки.
            ZonedDateTime arrivalWithDelay = ...

            System.out.println(""Ваш вылет задерживается."");
            // Выведите продолжительность задержки в формате часы:минуты
            System.out.println(""Задержка: "" + delayDuration);
            // Выведите отформатированное время вылета с учётом задержки.
            System.out.println(""Обновлённое время вылета: "" + ...);
            // Выведите отформатированное время прилёта с учётом задержки.
            System.out.println(""Обновлённое время прилёта: "" + ...);
        } else {
            System.out.println(""Удачного полёта!"");
        }
    }

    private static void printTicket(
            String departureTime,
            String departureAirportCode,
            String arrivalAirportCode,
            String departureCity,
            String arrivalCity,
            String arrivalTime,
            String departureTimeOnly
    ) {
        System.out.println(
                "" _______________________________________________________\n"" +
                        ""|                                            |          |\n"" +
                        ""|  "" + departureCity + ""|"" + departureAirportCode + ""      ""
                        + departureTime + ""  |   "" + departureAirportCode + ""    |\n"" +
                        ""|  "" + arrivalCity + ""|"" + arrivalAirportCode + ""      ""
                        + arrivalTime + ""  |   "" + arrivalAirportCode + ""    |\n"" +
                        ""|                                            |          |\n"" +
                        ""|  BOARDING TIME   --:--      SEAT  1A       |   "" + departureTimeOnly + ""  |\n"" +
                        ""|  GATE  23                                  |   1A     |\n"" +
                        ""|____________________________________________|__________|"");
    }
}"
uLJdJJHa,CheckForBattleOver,Glaedr0173,C#,Thursday 28th of September 2023 07:56:33 AM CDT,"IEnumerator CheckForBattleOver(BattleUnit faintedUnit)
{
    if (faintedUnit.IsPlayerUnit)
    {
        var nextPokemon = playerParty.GetHealthyPokemon();
        if (nextPokemon != null)
        {
            yield return GameController.Instance.StateMachine.PushAndWait(PartyState.Instance);
            yield return bs.SwitchPokemon(PartyState.Instance.SelectedPokemon);
        }
        else
        {
            bs.BattleOver(false);
        }
    }
    else
    {
        if (!isTrainerBattle)
        {
            // Determine the dropped material
            bool dropOrganicMaterial = UnityEngine.Random.Range(0, 2) == 0; // 0 for organic, 1 for inorganic

            // Determine the amount to drop (between 1 and 2)
            int dropAmount = UnityEngine.Random.Range(1, 3);

            Inventory playerInventory = Inventory.GetInventory();

            // Add the dropped material to the player's inventory
            if (dropOrganicMaterial)
            {
                playerInventory.AddItem(enemyUnit.Pokemon.Base.OrgCraftingMaterial1, dropAmount);
                yield return dialogBox.TypeDialog($""{enemyUnit.Pokemon.Base.Name} has dropped {dropAmount} {enemyUnit.Pokemon.Base.OrgCraftingMaterial1.Name}."");
            }
            else
            {
                playerInventory.AddItem(enemyUnit.Pokemon.Base.InorgCraftingMaterial2, dropAmount);
                yield return dialogBox.TypeDialog($""{enemyUnit.Pokemon.Base.Name} has dropped {dropAmount} {enemyUnit.Pokemon.Base.InorgCraftingMaterial2.Name}."");
            }

            bs.BattleOver(true);
        }
        else
        {
            var nextMonster = trainerParty.GetHealthyPokemon();
            if (nextMonster != null)
            {
                //send out monster
                Debug.Log($""Switching to AboutToUseState started."");
                AboutToUseState.Instance.NewPokemon = nextMonster;
                yield return bs.StateMachine.PushAndWait(AboutToUseState.Instance);
                Debug.Log($""Switching to AboutToUseState finished."");
            }
            else
            {
                TrainerController trainerController = bs.Trainer;
                //give player money and dialog amount
                int amount = GameController.Instance.CalculatePrizeMoney(TrainerPrizeMoney.GetBaseAmount(trainerController.TrainerType), PokemonParty.GetMaxPartyLevel(trainerController.GetComponent<PokemonParty>()));
                Wallet.Instance.AddMoney(amount);
                yield return (DialogManager.Instance.TypeDialog($""Player has received {amount}.""));
                yield return (DialogManager.Instance.TypeDialog($""{trainerController.Name} has lost the battle""));
                bs.BattleOver(true);
            }
        }
    }
}"
Q5LALHH1,Untitled,lol1234561,Java,Thursday 28th of September 2023 07:52:23 AM CDT,"import java.util.Arrays;
import java.util.Random;
public class Main {
    public static void main(String[] args) {
        Random rand =  new Random();
       
        int[] num = new int[10];

        for( int x = 0; x < num.length; x++){
            num[x]  = rand.nextInt(100)+1;
            System.out.println(""Slot ""+ x + "" contains  "" + num[x]);
        }
    }
}"
8T0420NF,pom-suporte-jdev-aluno-vinicius,tadeuespindola,XML,Thursday 28th of September 2023 07:47:39 AM CDT,"<project xmlns=""http://maven.apache.org/POM/4.0.0""
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"">
	<modelVersion>4.0.0</modelVersion>
	<groupId>curso-jsp</groupId>
	<artifactId>curso-jsp</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>curso-jsp</name>
	<description>curso jsp jdev treinamento</description>

	<dependencies>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.2.22</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.13.0</version>
		</dependency>
		
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>jakarta.servlet.jsp.jstl</artifactId>
			<version>2.0.0</version>
		</dependency>
	
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
			<version>6.18.1</version>
		</dependency>

		<dependency>
			<groupId>tomcat</groupId>
			<artifactId>tomcat-util</artifactId>
			<version>5.5.23</version>
		</dependency>
		
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-coyote</artifactId>
			<version>10.1.0-M5</version>
		</dependency>
		
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.21</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.17</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<release>11</release>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.3</version>
			</plugin>
		</plugins>
	</build>

</project>"
7SZKLL45,Lab #2,Week045,Scala,Thursday 28th of September 2023 07:25:16 AM CDT,"import _root_.scala

import _root_.scala.annotation.tailrec

object Lab2 {

  //Tasks1
  private def sumFunc1(list: List[Int], lenght: Int): Int = {
    if(lenght <= 0) 0
    else list.head + sumFunc1(list.tail, lenght - 1)
  }

  private def sumFunc2(indexList: List[Int], numList: List[Int]): Int = {
    if(indexList.isEmpty){
      println(""indexList is empty"")
      sys.exit(-1)
    }
    if(numList.isEmpty){
      println(""numList is empty"")
      sys.exit(-2)
    }

    for(i <- indexList.indices){

    }
    9
  }

  private def func3(numList: List[Int]): Int = {
    if (numList.isEmpty) {
      println(""numList is empty"")
      sys.exit(-3)
    }
    var minIndex: Int = 0
    for(i <- 0 until numList.length)
      if(numList(minIndex) > numList(i))
        minIndex = i

     minIndex
  }

  @tailrec
  private def func4(numList: List[Int], number: Int): Boolean = {
    if(numList.isEmpty) false
    else if(numList.head > number) true
    else func4(numList.tail, number)
  }

  @tailrec
  private def func5(numList: List[Int], number: Int, cnt: Int): Int = {
    var count: Int = cnt
    if(numList.isEmpty) count
    else if(numList.head < number){
      count += 1
      func5(numList.tail, number, count)
    }
    else func5(numList.tail, number, count)
  }




  def main(args: Array[String]): Unit = {
    val myList1: List[Int] = List(14, 42, 35, 64, 35, 65, 22, 31, 100, 4, 5, 37)
    val myList2: List[Int] = List(1, 2, 3, 4, 5, 6, 7, 8, 9, 0)
    val myList3: List[Int] = List(1, 2, 3, 4)

    //println(sumFunc1(myList2, if(myList2.length >= 5) 5 else myList2.length))
    //println(func3(myList1))
    println(func4(myList1, 100))
    println(func5(myList2, 5, 0))

    //println(sumFunc2(myList2 take 5))
    //println(sumFunc3(myList2))

  }





}
"
hiq4HMi2,Andrea Candiani (clickfunnels) final script,bogdanlinee,HTML,Thursday 28th of September 2023 07:14:57 AM CDT,"<script>
 (function () {
  const italianValues = {
    firstName: 'Nome di battesimo',
    lastName: 'Cognome',
    email: 'Indizziro email',
    shoppingDetails: 'Dettagli di spedizione',
    shippingAddress: 'Indirizzo',
    shippingAddress2: 'Appartamento, edificio, piano',
    city: 'Città',
    postalCode: 'Codice Postale',
    country: 'Seleziona il paese',
    state: 'Select State',
    card: 'Carta',
    free: ' (Gratuita)',
    hour: 'Ore',
    minute: 'Minuti',
    second: 'Secondi',
  }

  changeContent();

  function changeContent() {
    const form = document.querySelector('.elCheckoutForm');

    if (!form) {
      console.log('form does not exist');
      return;
    }

    changeFormTextToItalian(form, '[type=""first_name""] input', '[type=""first_name""] .labelText label', italianValues.firstName);
    changeFormTextToItalian(form, '[type=""last_name""] input', '[type=""last_name""] .labelText label', italianValues.lastName);
    changeFormTextToItalian(form, '[type=""email""] input', '[type=""email""] .labelText label', italianValues.email);
    changeFormTextToItalian(form, undefined, '.elSubheadline span', italianValues.shoppingDetails);
    changeFormTextToItalian(form, '[type=""shipping_address""] input', '[type=""shipping_address""] .labelText label', italianValues.shippingAddress);
    changeFormTextToItalian(form, '[type=""shipping_address_2""] input', '[type=""shipping_address_2""] .labelText label', italianValues.shippingAddress2);
    changeFormTextToItalian(form, '[type=""shipping_city""] input', '[type=""shipping_city""] .labelText label', italianValues.city);
    changeFormTextToItalian(form, '[type=""shipping_zip""] input', '[type=""shipping_zip""] .labelText label', italianValues.postalCode);
    changeFormTextToItalian(form, undefined, '[type=""shipping_country""] .labelText label', italianValues.country);
    changeFormTextToItalian(form, undefined, '[type=""shipping_state""] .labelText label', italianValues.country);

    function changeFormTextToItalian(parent, placeholderSelector, labelSelector, value) {
      const placeholder = parent.querySelector(placeholderSelector);
      const label = parent.querySelector(labelSelector);

      if (placeholder) {
        changePlaceHolder(placeholder, value);
      }

      if (label) {
        changeText(label, value);
      }
    }

    function changePlaceHolder(elem, value) {
      elem.setAttribute('placeholder', value);
    }

    function changeText(elem, value) {
      elem.textContent = value;
    }

    const secondStep = document.querySelector('.elCheckoutWrapper');

    if (!secondStep) {
      console.log('Second step does not exist');
      return;
    }

    changeFormTextToItalian(secondStep, undefined, '.payment-label', italianValues.card);
    setTimeout(function () {
      changeFormTextToItalian(secondStep, undefined, 'span.elProductCardPrice', italianValues.free);
    }, 500);

    const counter = document.querySelector('.elCountdownRow');

    if (!counter) {
      console.log('Counter does not exist');
      return;
    }

    changeFormTextToItalian(counter, undefined, '.elCountdownGroupTime .elCountdownColumn:nth-child(1) .elCountdownPeriod', italianValues.hour);
    changeFormTextToItalian(counter, undefined, '.elCountdownGroupTime .elCountdownColumn:nth-child(3) .elCountdownPeriod', italianValues.minute);
    changeFormTextToItalian(counter, undefined, '.elCountdownGroupTime .elCountdownColumn:nth-child(5) .elCountdownPeriod', italianValues.second);

    const activeSection = document.querySelector(""div.elCheckoutWrapper > div > div:nth-child(3) > div > div.id-OrderBump\\/V1 > div > div:nth-child(1)"");

    if (!activeSection) {
      console.log('Section does not exist');
      return;
    }

    activeSection.click();
  }

  (function () {
    setTimeout(function () {
      const secondStepDefaultElement = document.querySelector('div.id-OrderBump\\/V1 > div > div:nth-child(1) > div');
      const secondStepAdditionalElement = document.querySelector('div.id-OrderBump\\/V1 > div > div:nth-child(2) > div');

      if (!secondStepDefaultElement || !secondStepAdditionalElement) {
        console.log('Default element does not exist');
        return;
      }

      secondStepDefaultElement.addEventListener('click', secondStepDefaultElementListener);
      secondStepAdditionalElement.addEventListener('click', secondStepAdditionalElementListener);
      document.addEventListener('click', function () {
        setTimeout(function () {
          const textFreeElement = document.querySelector('span.elProductCardPrice');        
          if (textFreeElement.textContent !== italianValues.free){
            textFreeElement.textContent = italianValues.free;
          }
        })
      });

      function secondStepDefaultElementListener(e) {
        setTimeout(function () {
          // document.querySelector('span.elProductCardPrice').textContent = italianValues.free;
          if (secondStepAdditionalElement.classList.contains('elProductCardSelected')) {
            secondStepAdditionalElement.removeEventListener('click', secondStepAdditionalElementListener);
            secondStepAdditionalElement.click();
            secondStepAdditionalElement.addEventListener('click', secondStepAdditionalElementListener);
          }
        })
      }

      function secondStepAdditionalElementListener(e) {
        setTimeout(function () {
          // document.querySelector('span.elProductCardPrice').textContent = italianValues.free;
          if (secondStepDefaultElement.classList.contains('elProductCardSelected')) {
            secondStepDefaultElement.removeEventListener('click', secondStepDefaultElementListener);
            secondStepDefaultElement.click();
            secondStepDefaultElement.addEventListener('click', secondStepDefaultElementListener);
          }
        })
      }
    }, 2000);
  })();

  (function () {
    let WAITING_TIMER_COUNTER = 20;
    const HALF_OF_THE_SECOND = 100;

    function waitSpinnerDisapear() {
      WAITING_TIMER_COUNTER--;

      const spinner = document.querySelector('div.elCheckoutForm > div.elCheckoutFormAddress > div.elSpinnerWrapper.layer-behind-modal-backdrop.id-Spinner\\/V1');
      if ((!spinner || getComputedStyle(spinner).display === 'block') && WAITING_TIMER_COUNTER > 0) {
        setTimeout(waitSpinnerDisapear, HALF_OF_THE_SECOND);
      } else {
        if (spinner && getComputedStyle(spinner).display !== 'block') {
          changeContent()
        }
      }
    }

    setTimeout(function () {
      waitSpinnerDisapear();
    }, 50);
  })();
})()
</script>"
UzsKHybM,Number game,Benkex,Python,Thursday 28th of September 2023 06:33:07 AM CDT,"
from random import randint
from time import sleep

print (""Welcome to my number game!"")

# print ( randint(1, 9) )

number = randint(1, 9)

while True: 
    
    print ( number )
    
    sleep ( 5 ) # sleep 5 seconds
    
    print ( ""\n"" * 100 )  # we make the number disappear
    
    answer = input ( ""Number was: "" )
    answer = int ( answer )
    
    if answer == number:
        print ( ""Right!"" )
    else:
        print ( ""Wrong!"" )
        
    number = number * 10 + randint(1, 9)

"
