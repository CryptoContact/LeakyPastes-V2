id,title,username,language,date,content
Wfebn1qL,Exercise,Griwin,C++,Thursday 5th of October 2023 06:41:26 AM CDT,"#include <iostream>
using namespace std;

class Student {
public:
    string name;
    double grade;
    int age;
    Student(string n, double g, int a) : name(n), grade(g), age(a) {}

};



void averageAge(Student arr[], int size) {
    int sum = 0;
    
    for (int i = 0; i < size; i++) {
        sum = sum + arr[i].age;
    }
    int result = sum / size;
    cout << ""The avg age is:""<< result <<endl;
}

int main() {
    Student st1(""Chefo"", 5, 17);
    Student st2(""Georgi"", 3, 17);
    Student st3(""Atanas"", 6, 16);
    Student st4(""Stefan"", 4, 17);
    Student st5(""Ivan"", 5, 16);

    Student students[5] = { st1, st2, st3 , st4, st5 };
    int size = sizeof(students) / sizeof(students[0]);

    averageAge(students, size);
    
    return 0;
}

"
8Yeb2uFC,Blue Archive Suggestions,SandehBoi,HTML 5,Thursday 5th of October 2023 06:37:05 AM CDT,"-Bond level cap increased from 20 to 40 or 50 at 4 stars, otherwise 3 and 4 star characters accumulate bond experience at max bond and when they reach 5 stars they jump to the appropriate level (20->24)
-Voice Replay-Add subs in other languages - Example: https://shorturl.at/mqwyK
-""Final Episode"" changed to Final Volume - each section within a chapter are already referred to as episodes.
-Add 2nd level to cafe/further expansion of cafe
-Donating equipment-People can donate equipment to others through Clubs
-PC port
-Switching between Menus in Bounties/Commissions/Scrimmage for extra convenience
-Jukebox function to listen to music in game
-Combine 10 single pull tickets into a 10 pull ticket
-Encyclopedia with trivia/information on mobs/sukeban/students (add 3D models and each of their animations)"
swEV7k0N,amnis,ArceusX_Pastebim,Lua,Thursday 5th of October 2023 06:35:56 AM CDT,"
-- Create the ScreenGui
local gui = Instance.new(""ScreenGui"")
gui.Name = ""CustomGUI""
gui.Parent = game.Players.LocalPlayer.PlayerGui

-- Create the Frame for the GUI
local frame = Instance.new(""Frame"")
frame.Name = ""CustomFrame""
frame.Size = UDim2.new(0, 320, 0, 240)  -- Adjust the size as needed
frame.Position = UDim2.new(0, 10, 0, 10) -- Adjust the position as needed
frame.BackgroundColor3 = Color3.fromRGB(0, 0, 128) -- Dark blue
frame.BorderSizePixel = 0
frame.Draggable = true
frame.Parent = gui

-- Create the FOV button
local fovButton = Instance.new(""TextButton"")
fovButton.Name = ""FOVButton""
fovButton.Size = UDim2.new(0, 140, 0, 30)
fovButton.Position = UDim2.new(0, 10, 0, 10)
fovButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
fovButton.Text = ""Change FOV to 120""
fovButton.Parent = frame

fovButton.MouseButton1Click:Connect(function()
    game.Workspace.CurrentCamera.FieldOfView = 120
end)

-- Create the Speed button
local speedButton = Instance.new(""TextButton"")
speedButton.Name = ""SpeedButton""
speedButton.Size = UDim2.new(0, 140, 0, 30)
speedButton.Position = UDim2.new(0, 10, 0, 50)
speedButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
speedButton.Text = ""Change Speed to 40""
speedButton.Parent = frame

speedButton.MouseButton1Click:Connect(function()
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 40
end)

-- Create the FPS button
local fpsButton = Instance.new(""TextButton"")
fpsButton.Name = ""FPSButton""
fpsButton.Size = UDim2.new(0, 140, 0, 30)
fpsButton.Position = UDim2.new(0, 170, 0, 10)
fpsButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
fpsButton.Text = ""Cap FPS to 999""
fpsButton.Parent = frame

fpsButton.MouseButton1Click:Connect(function()
    game:GetService(""RunService"").RenderStepped:Connect(function()
        game:SetFPSCap(999)
    end)
end)

-- Create the Reset FOV button
local resetFovButton = Instance.new(""TextButton"")
resetFovButton.Name = ""ResetFOVButton""
resetFovButton.Size = UDim2.new(0, 140, 0, 30)
resetFovButton.Position = UDim2.new(0, 170, 0, 50)
resetFovButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
resetFovButton.Text = ""Reset FOV""
resetFovButton.Parent = frame

resetFovButton.MouseButton1Click:Connect(function()
    game.Workspace.CurrentCamera.FieldOfView = 70 -- Change this to your normal FOV value
end)

-- Create the Set Speed to 16 button
local setSpeed16Button = Instance.new(""TextButton"")
setSpeed16Button.Name = ""SetSpeed16Button""
setSpeed16Button.Size = UDim2.new(0, 140, 0, 30)
setSpeed16Button.Position = UDim2.new(0, 10, 0, 90)
setSpeed16Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
setSpeed16Button.Text = ""Set Speed to 16""
setSpeed16Button.Parent = frame

setSpeed16Button.MouseButton1Click:Connect(function()
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
end)
"
WjFpJ7Gy,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Thursday 5th of October 2023 06:22:13 AM CDT,"Pasted at: 05/10/2023 12:22
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
m8Q6ztym,data716,TestGuy1,JSON,Thursday 5th of October 2023 06:00:08 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'f80afd0259d649e1ab9b9de7fe1927e1c05c63edbb6a79be7d497f8347bac19ed19ce511406566b7d3ab4bc8a2931ad415c0a49d17f70764c81b6bb370aca721daacf5a954ed344f4702c749d2ab4823d0d914af5bda741adebadab5d87cd427ec231ccc381d6c42a9ff36ae6cf68f7dcd24d4bf9493371a64f67c3e9431366a',
  otherdata: [
    '5b716d51668a316aaeb1ba26ceaac1f7',
    '63259ae11590086684b80f829b4e5a7b',
    '384a0cb868fb784310446c4168c46f7d',
    'f9d96bff20d16b6137e14840d0116f03',
    'f537abdbcd69aad3a1c8f1f45ac08dda',
    'dd0da83e4fbf519e594010101319e2da',
    '4d5763bb8ad4c38afa3fa02cdd77dccc',
    '075625268fc58a2aa547a0516801a842'
  ]
}"
mxvr0Zha,ghd,crazy_programmer91,Python,Thursday 5th of October 2023 05:59:24 AM CDT,"
def gcd (num1, num2):
    while num2:
        num1, num2 = num2, num1 % num2
    return num1


a = 3   # num1
b = 5   # num2
print(f' gcd of {a} and {b} is {gcd(a, b)}')
"
vE9RuCFk,Untitled,FenixDevelopment,Lua,Thursday 5th of October 2023 05:34:09 AM CDT,"Config.Menus = {
    [""legal""] = {
        marker = {
            job = {""ambulance"", ""other""}, -- se false o non esiste può essere aperto da tutti
            coords = {
                vec3(0,0,0),
                vec3(0,0,0)
            }, 

            -- altre customizzazioni del marker
        },

        can = {
            ""removeorgans"", -- puo rimuovere tutti gli organi (si intende uno alla volta naturalmente)
            ""addorgans"",    -- puo aggiungere tutti gli organi  (si intende uno alla volta naturalmente)
            ""removeextra"",  -- puo rimuovere l oggetto misterioso se presenten nel corpo, nel nostro esempio la cocaina
        },

        usetrigger = true, 
        --[[
            TriggerEvent(""organs:openlegalmenu"") 
            se false il trigger non deve poter essere usato, se true il trigger bypassa il controllo del job e funziona per chiunque triggera
        ]]
    },

    [""illegal""] = {
        marker = {
            job = {""yakuza"", ""mafia""}, -- se false o non esiste può essere aperto da tutti
            coords = {
                vec3(0,0,0),
                vec3(0,0,0)
            }, 

            -- altre customizzazioni del marker
        },

        can = {
            ""removeorgans"", -- puo rimuovere tutti gli organi (si intende uno alla volta naturalmente)
            ""addextra"",  -- puo aggiungere l oggetto misterioso nel corpo, nel nostro esempio la cocaina
        },

        usetrigger = true, 
        --[[
            TriggerEvent(""organs:openillegalmenu"") 
            se false il trigger non deve poter essere usato, se true il trigger bypassa il controllo del job e funziona per chiunque triggera
        ]]
    },
}"
Fzeffh8Y,Untitled,FenixDevelopment,Lua,Thursday 5th of October 2023 05:18:05 AM CDT,"Config.Items = {
    -- [[ Curare determinati organi ]]
    [""pillolacuore""] = { -- nome item
        organ = {""heart""}, -- nome dell organo/i
        add = 0.5        -- valore aumento salute
    },

    [""pillolapolmone""] = { -- nome item
        organ = {""rightlung"", ""leftlung""}, -- nome dell organo/i
        add = 0.5        -- valore aumento salute
    },

    -- [[ Curare tutti gli organi ]]
    [""pillolamagica""] = { -- nome item
        organ = ""all"", -- nome dell organo/i
        add = 0.5        -- valore aumento salute
    },

    -- [[ Item malevoli ]]
    --- Rimuove salute ad determinati organi
    [""velenocuore""] = { -- nome item
        organ = {""heart""}, -- nome dell organo/i
        remove = 0.5        -- valore aumento salute
    },

    --- Rimuove salute a tutti gli organi
    [""veleno""] = { -- nome item
        organ = ""all"",      -- nome dell organo/i
        remove = 0.5        -- valore aumento salute
    },
}"
VyS8j859,RSC in CSR,Piotoru,TypeScript,Thursday 5th of October 2023 05:09:00 AM CDT,"import { ReactNode, useContext } from 'react';

import { darkMode } from 'constants/links';

import { ModeContext } from 'providers/ModeProvider';
import { MenuContext } from 'providers/MenuProvider';

import { UserHeader } from 'components/organisms/UserHeader/UserHeader';
import { Header } from 'components/organisms/Header/Header';
import { Aside } from 'components/organisms/Aside/Aside';
import HeadersWrapper from 'components/molecules/HeadersWrapper/HeadersWrapper';

import styles from './SkeletonRootLayout.module.scss';

export const SkeletonRootLayout = ({ children }: { children: ReactNode }) => {
  const { isMode } = useContext(ModeContext);
  const { isMenu } = useContext(MenuContext);

  console.log('isMenu', isMenu);
  return (
    <div className={`${styles.whole__page} ${isMode === darkMode ? 'dark' : ''}`}>
      <HeadersWrapper childrenWrapper={isMenu === 'true' ? <UserHeader /> : <Header />} />

      <div className={styles.container}>
        {isMenu === 'true' && <HeadersWrapper childrenWrapper={<Aside />} />}

        <main
          className={`
            ${isMenu === 'true' ? styles.user__container : styles.main__container}
            ${isMode === darkMode ? 'main__container--dark' : ''}
          `}>
          <section className={styles.workspace}>{children}</section>
        </main>
      </div>
    </div>
  );
};



//ERROR

./locales/server.ts
'server-only' cannot be imported from a Client Component module. It should only be used from a Server Component.

The error was caused by importing 'next-international/dist/app/server/index.js' in './locales/server.ts'.

Import trace for requested module:
  ./locales/server.ts
  ./components/organisms/UserHeader/UserHeader.tsx
  ./components/organisms/SkeletonRootLayout/SkeletonRootLayout.tsx
  ./providers/GlobalProvider.tsx"
aHAQx9Em,Untitled,yarin0600,C++,Thursday 5th of October 2023 04:35:13 AM CDT,"    int divide(int dividend, int divisor) {
        if(dividend == INT_MIN && divisor == -1){
            return INT_MAX;
        }
        long long dvd = labs(dividend), dvs = labs(divisor), result = 0;
        int sign = (dividend > 0) ^ (divisor > 0) == 0 ? 1 : -1;
        while(dvd >= dvs){
            long long temp = dvs, mul = 1;
            while(temp << 1 <= dvd){
                temp <<= 1;
                mul <<= 1;
            }
            dvd -= temp;
            result += mul;
        } 
        return sign*result;
    }"
4Ss7W3NN,Untitled,desssssy,Python,Thursday 5th of October 2023 04:22:50 AM CDT,"checking_input = input()
word = """"
new_word = """"
c_counter = 0
o_counter = 0
n_counter = 0

while checking_input != ""End"":
    if 'a' <= checking_input <= 'z' or 'A' <= checking_input <= 'Z':
        if checking_input == ""c"" and c_counter == 0:
            c_counter += 1
        elif checking_input == ""o"" and o_counter == 0:
            o_counter += 1
        elif checking_input == ""n"" and n_counter == 0:
            n_counter += 1
        else:
            word += checking_input

    if c_counter == 1 and o_counter == 1 and n_counter == 1:
        new_word = new_word + word + "" ""

        word = """"
        c_counter = 0
        o_counter = 0
        n_counter = 0

    checking_input = input()

print(new_word)"
w08s8EeC,socat tests v001 NOT working,plirof2,Bash,Thursday 5th of October 2023 04:04:43 AM CDT,"socat - TCP4:www.example.com:80

lab08-3gb-e8400-bl64

socat - TCP4:lab08-3gb-e8400-bl64:80
socat - TCP4:www.example.com:80
socat - TCP4:www.example.com:80


socat TCP4-LISTEN:81 TCP4:192.168.1.200:80




socat /dev/ttyS2,b115200,raw,echo=0 TCP:192.168.1.200:7000





socat STDIO TCP4:localhost:1234

https://stackoverflow.com/questions/39723379/socat-run-script-in-bidirectional-tunnel
socat TCP4:192.168.1.49:9090 SYSTEM:""leafpad 'socat' &""


socat TCP4-L:3334,fork SYSTEM:""$INCOMING_STRING_OF_ARGS""
socat TCP4:192.168.1.49:3334 SYSTEM:""leafpad 'out going string of args' &"""
dthspSbR,Untitled,AlexCoder12345,C++,Thursday 5th of October 2023 04:04:12 AM CDT,"void insert_node(tree_node* _root, tree_node* _node){
        while (_root != nullptr){
            if (_node->val > _root->val){
                if (_root->right != nullptr){
                    _root = _root->right;
                } else {
                    _node->parent = _root;
                    _root->right = _node;
                    return;
                }
            } else if (_node->val < _root->val){
                if (_root->left != nullptr){
                    _root = _root->left;
                } else {
                    _node->parent = _root;
                    _root->left = _node;
                    return;
                }
            }
        }
    }"
uEeNn6hW,DB init,rvdraws,MySQL,Thursday 5th of October 2023 03:57:31 AM CDT,"insert into insurer_tpa_master(id,tpa,parameter) values(1,'CARE','apiKey');
insert into insurer_tpa_master(id,tpa,parameter) values(2,'CARE','username');
insert into insurer_tpa_master(id,tpa,parameter) values(3,'EASTWEST','emailId');
insert into insurer_tpa_master(id,tpa,parameter) values(4,'EASTWEST','password');
insert into insurer_tpa_master(id,tpa,parameter) values(5,'FHPL','username');
insert into insurer_tpa_master(id,tpa,parameter) values(6,'FHPL','password');
insert into insurer_tpa_master(id,tpa,parameter) values(7,'MDINDIA','username');
insert into insurer_tpa_master(id,tpa,parameter) values(8,'MDINDIA','password');
insert into insurer_tpa_master(id,tpa,parameter) values(9,'MEDIASSIST','username');
insert into insurer_tpa_master(id,tpa,parameter) values(10,'MEDIASSIST','password');
insert into insurer_tpa_master(id,tpa,parameter) values(11,'RAKSHA','username');
insert into insurer_tpa_master(id,tpa,parameter) values(12,'RAKSHA','password');
insert into insurer_tpa_master(id,tpa,parameter) values(13,'SAFEWAY','username');
insert into insurer_tpa_master(id,tpa,parameter) values(14,'SAFEWAY','password');
insert into insurer_tpa_master(id,tpa,parameter) values(15,'VIDAL','username');
insert into insurer_tpa_master(id,tpa,parameter) values(16,'VIDAL','password');
insert into insurer_tpa_master(id,tpa,parameter) values(17,'FUTURE','STARTER');
insert into insurer_tpa_master(id,tpa,parameter) values(18,'FUTURE','USERNAME');
insert into insurer_tpa_master(id,tpa,parameter) values(19,'GODIGIT','imdCode');
insert into insurer_tpa_master(id,tpa,parameter) values(20,'GODIGIT','Authorization');
insert into insurer_tpa_master(id,tpa,parameter) values(21,'HealthIndia','AuthId');
insert into insurer_tpa_master(id,tpa,parameter) values(22,'ICICI','username');
insert into insurer_tpa_master(id,tpa,parameter) values(23,'ICICI','password');
insert into insurer_tpa_master(id,tpa,parameter) values(24,'ICICI','client_id');
insert into insurer_tpa_master(id,tpa,parameter) values(25,'ICICI','client_secret');
insert into insurer_tpa_master(id,tpa,parameter) values(26,'Paramount','USERNAME');
insert into insurer_tpa_master(id,tpa,parameter) values(27,'Paramount','PASSWORD');


insert into insurer_tpa_agent_config(id,created_date,last_updated,agent_id,value,insurer_tpa_master_id) values(31,now(),now(),2,'62dfcb6a70cc1',1);
insert into insurer_tpa_agent_config(id,created_date,last_updated,agent_id,value,insurer_tpa_master_id) values(32,now(),now(),2,'Shiftrisk',2);
insert into insurer_tpa_agent_config(id,created_date,last_updated,agent_id,value,insurer_tpa_master_id) values(94,now(),now(),2,'ShiftRiskUser',9);
insert into insurer_tpa_agent_config(id,created_date,last_updated,agent_id,value,insurer_tpa_master_id) values(109,now(),now(),2,'SHiftRIsk&$!XEXgBr',10);
insert into insurer_tpa_agent_config(id,created_date,last_updated,agent_id,value,insurer_tpa_master_id) values(141,now(),now(),2,'MTIzNDU=',17);
insert into insurer_tpa_agent_config(id,created_date,last_updated,agent_id,value,insurer_tpa_master_id) values(142,now(),now(),2,'FGN5292',18);
insert into insurer_tpa_agent_config(id,created_date,last_updated,agent_id,value,insurer_tpa_master_id) values(143,now(),now(),2,'1000012',19);
insert into insurer_tpa_agent_config(id,created_date,last_updated,agent_id,value,insurer_tpa_master_id) values(144,now(),now(),2,'W3EPM5OICT8R86A4GLBCDHV1RULFARDC',20);
insert into insurer_tpa_agent_config(id,created_date,last_updated,agent_id,value,insurer_tpa_master_id) values(145,now(),now(),2,'ysNwdGWs+iyc7KPjnzQnlvcOZLKP3NjaF6L9UORRwHg=',21);
insert into insurer_tpa_agent_config(id,created_date,last_updated,agent_id,value,insurer_tpa_master_id) values(146,now(),now(),2,'ShiftriskInsure',22);
insert into insurer_tpa_agent_config(id,created_date,last_updated,agent_id,value,insurer_tpa_master_id) values(147,now(),now(),2,'$hIftR!$k!nsur3',23);
insert into insurer_tpa_agent_config(id,created_date,last_updated,agent_id,value,insurer_tpa_master_id) values(148,now(),now(),2,'ro.ShiftriskInsure',24);
insert into insurer_tpa_agent_config(id,created_date,last_updated,agent_id,value,insurer_tpa_master_id) values(149,now(),now(),2,'ro.$hIftR!$k!nsur3',25);
insert into insurer_tpa_agent_config(id,created_date,last_updated,agent_id,value,insurer_tpa_master_id) values(150,now(),now(),2,'IMT_CARE-ADMIN',26);
insert into insurer_tpa_agent_config(id,created_date,last_updated,agent_id,value,insurer_tpa_master_id) values(151,now(),now(),2,'ADMIN-USER@430',27);

insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (1,'476644EB','Left_Nav_Bar','Agents',1,1,1,1,2);
insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (2,'978351C0','Left_Nav_Bar','Clients',1,1,1,1,1);
insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (3,'7534F2CB','Left_Nav_Bar','Employees',1,1,1,1,2);
insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (4,'112DA3E0','Agent','Read',1,1,1,1,2);
insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (5,'7426557C','Agent','Create',1,1,1,1,2);
insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (6,'9411006B','Agent','Update',1,1,1,1,2);
insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (7,'4C9AFFF1','Agent','Delete',1,1,1,1,2);
insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (8,'73E50861','Agent','List',1,1,1,1,2);
insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (9,'AF16448F','Agent','Self_Profile_Read',1,1,1,1,1);
insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (10,'40530209','Agent','Self_Profile_Update',1,0,1,0,2);
insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (11,'95E8725B','User','Read',1,1,1,1,2);
insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (12,'91F3D00B','User','Create',1,1,1,1,2);
insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (13,'4079739E','User','Update',1,1,1,1,2);
insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (14,'2D925A32','User','Delete',1,1,1,1,2);
insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (15,'75272FE1','User','List',1,1,1,1,2);
insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (16,'D7BE5F45','User','Group_Create',1,1,1,1,2);
insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (17,'F026C835','User','Group_Delete',1,0,1,0,2);
insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (18,'3306E17A','User','Group_Read',1,1,1,1,2);
insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (19,'F535011E','User','Group_Update',1,1,1,1,2);
insert into permission(id,uuid,resource,action,super_admin,admin,agent,agent_employee,sub_agent) values (20,'F4F2A00A','User','Group_List',1,1,1,1,2);

insert into users(id,username,name,enabled,email_verified,user_id,user_type,dob,gender,parent_id,invite_accepted_on) values(1,'achiever.rachit@gmail.com','Rachit',1,1,'IUefkdlajwuds','ADMIN','2020-01-01','Male',null,'2020-01-01');
    
insert into login_lookup(id,type,value,password,verified,active,user_id) values(1,'EMAIL','achiever.rachit@gmail.com','password',1,1,1);

insert into agent(id,uuid,ref_code,name,city,display_name,verified,scheme,domain,parent_agent_id,agent_type) values(1,'dadjqeqmjrR','ADMIN','ADMIN','Delhi','ADMIN',1,1,'https://app.imt.care',null,'SAAS');

#insert into user_report_hierarchy(1,1,null);
insert into user_report_hierarchy (id, user_id, reportee_id) values (1, 1, null);

insert into user_entity_mapping(id,user_id,entity_type,entity_id,created_by,active) values(1,1,'AGENT','dadjqeqmjrR',1,1);

ALTER TABLE agent MODIFY COLUMN agent_type varchar(15);


"
RiH7q8Zr,Untitled,AlexCoder12345,C++,Thursday 5th of October 2023 03:53:35 AM CDT,"void insert(T _val){
        if (empty()){
            root = new tree_node(_val);
        } else {
            insert_node(_val,root);
        }
    }

    void insert_node(T _val, tree_node* _node){
        if (_node->val > _val){
            if (_node->left == nullptr){
                _node->left = new tree_node(_val);
                _node->left->parent = _node;
                return;
            }
            insert_node(_val,_node->left);
        } else if (_node->val < _val){
            if (_node->right == nullptr){
                _node->right = new tree_node(_val);
                _node->right->parent = _node;
                return;
            }
            insert_node(_val,_node->right);
        }
    }"
VR7xC6M1,Untitled,EddyCZ,C#,Thursday 5th of October 2023 03:34:06 AM CDT,"using System;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;

class Program
{
    const uint PIPE_ACCESS_INBOUND = 0x00000001;
    const uint PIPE_TYPE_BYTE = 0x00000000;
    const uint PIPE_READMODE_BYTE = 0x00000000;
    const uint PIPE_WAIT = 0x00000000;
    const uint PIPE_UNLIMITED_INSTANCES = 255;

    [DllImport(""kernel32.dll"", SetLastError = true)]
    public static extern IntPtr CreateNamedPipeA(
        string lpName,
        uint dwOpenMode,
        uint dwPipeMode,
        uint nMaxInstances,
        uint nOutBufferSize,
        uint nInBufferSize,
        uint nDefaultTimeOut,
        IntPtr lpSecurityAttributes);

    [DllImport(""kernel32.dll"", SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    public static extern bool ConnectNamedPipe(IntPtr hNamedPipe, IntPtr lpOverlapped);

    [DllImport(""kernel32.dll"", SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    public static extern bool CloseHandle(IntPtr hObject);

    [DllImport(""kernel32.dll"", SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    public static extern bool ReadFile(
        IntPtr hFile,
        byte[] lpBuffer,
        uint nNumberOfBytesToRead,
        out uint lpNumberOfBytesRead,
        IntPtr lpOverlapped);

    static void Main()
    {
        string pipeName = @""\\.\pipe\MyNamedPipe"";
        IntPtr pipeHandle = CreateNamedPipeA(
            pipeName,
            PIPE_ACCESS_INBOUND,
            PIPE_TYPE_BYTE,
            PIPE_UNLIMITED_INSTANCES,
            0, // Buffer size for output data
            0, // Buffer size for input data
            0, // Default timeout (0 means blocking)
            IntPtr.Zero);

        if (pipeHandle != IntPtr.Zero)
        {
            Console.WriteLine(""Named pipe created successfully. Waiting for a client to connect..."");

            // Wait for a client to connect
            bool connected = ConnectNamedPipe(pipeHandle, IntPtr.Zero);
            if (connected)
            {
                Console.WriteLine(""Client connected."");

                // Continuously listen for data in a loop
                while (true)
                {
                    byte[] buffer = new byte[1024]; // Adjust the buffer size as needed
                    uint bytesRead;
                    bool success = ReadFile(pipeHandle, buffer, (uint)buffer.Length, out bytesRead, IntPtr.Zero);

                    if (success && bytesRead > 0)
                    {
                        string data = Encoding.ASCII.GetString(buffer, 0, (int)bytesRead);
                        Console.WriteLine(""Received data from the client: "" + data);
                    }
                    else
                    {
                        // If no data or an error occurs, break the loop
                        Console.WriteLine(""No data received or an error occurred."");
                        break;
                    }
                }
            }
            else
            {
                Console.WriteLine(""Failed to connect to client. Error code: "" + Marshal.GetLastWin32Error());
            }

            // Close the named pipe when done
            CloseHandle(pipeHandle);
        }
        else
        {
            Console.WriteLine(""Failed to create named pipe. Error code: "" + Marshal.GetLastWin32Error());
        }

        Console.WriteLine(""Press Enter to exit..."");
        Console.ReadLine();
    }
}
"
9PCAn45b,Untitled,AlexCoder12345,C++,Thursday 5th of October 2023 03:20:43 AM CDT,"template<typename T>
struct tree{
    struct tree_node{
        T val;

        tree_node* parent;
        tree_node* left;
        tree_node* right;

        tree_node(T _val) : val(_val), parent(nullptr), left(nullptr), right(nullptr){}
    };

    tree_node* root;

    tree() : root(nullptr){}

    bool empty(){
        return root == nullptr;
    }

    void insert(T _val){
        if (empty()){
            root = new tree_node(_val);
        } else {
            insert_node(_val,root);
        }
    }

    void insert_node(T _val, tree_node* _node){
        if (_node->val > _val){
            if (_node->left == nullptr){
                _node->left = new tree_node(_val);
                _node->left->parent = _node;
                return;
            }
            insert_node(_val,_node->left);
        } else if (_node->val < _val){
            if (_node->right == nullptr){
                _node->right = new tree_node(_val);
                _node->right->parent = _node;
                return;
            }
            insert_node(_val,_node->right);
        }
    }

    void inorder(){
        print_inorder(root);
        cout << endl;
    }

    void print_inorder(tree_node* _node){
        if (_node != nullptr){
            print_inorder(_node->left);
            cout << _node->val << ' ';
            print_inorder(_node->right);
        }
    }

    void postorder(){
        print_postorder(root);
        cout << endl;
    }

    void print_postorder(tree_node* _node){
        if (_node != nullptr){
            print_postorder(_node->right);
            cout << _node->val << ' ';
            print_postorder(_node->left);
        }
    }

    bool find(T _val){
        return search(_val, root);
    }

    bool search(T _val, tree_node* _node){
        if (_node == nullptr){
            return false;
        }

        if (_node->val == _val){
            return true;
        } else {
            if (_node->val > _val){
                return search(_val,_node->left);
            } else {
                return search(_val,_node->right);
            }
        }
    }

    tree_node* node_of(T _val, tree_node* _node){
        if (_node == nullptr){
            return nullptr;
        }

        if (_node->val == _val){
            return _node;
        } else {
            if (_node->val > _val){
                return node_of(_val,_node->left);
            } else {
                return node_of(_val,_node->right);
            }
        }
    }

    void remove(T _val){
        if (!find(_val)){
            return;
        }

        tree_node* node = node_of(_val,root);

        if (node->right == nullptr && node->left == nullptr){
            node == nullptr;
        } else if (node->right == nullptr){
            node->left->parent = node->parent;
            node = node->left;
        } else if (node->left == nullptr){
            node->right->parent = node->parent;
            node = node->right;
        } else {
            tree_node* cur = node->right;
            while (cur->left != nullptr){
                cur = cur->left;
            }
        }
    }
};"
z2wPUiD8,Untitled,AlexCoder12345,C++,Thursday 5th of October 2023 03:19:57 AM CDT,"tree_node* node_of(T _val, tree_node* _node){
        if (_node == nullptr){
            return nullptr;
        }

        if (_node->val == _val){
            return _node;
        } else {
            if (_node->val > _val){
                return node_of(_val,_node->left);
            } else {
                return node_of(_val,_node->right);
            }
        }
    }

    void remove(T _val){
        if (!find(_val)){
            return;
        }

        tree_node* node = node_of(_val,root);

        if (node->right == nullptr && node->left == nullptr){
            node == nullptr;
        } else if (node->right == nullptr){
            node->left->parent = node->parent;
            node = node->left;
        } else if (node->left == nullptr){
            node->right->parent = node->parent;
            node = node->right;
        } else {
            tree_node* cur = node->right;
            while (cur->left != nullptr){
                cur = cur->left;
            }
        }
    }"
ENWgh3YS,Untitled,EddyCZ,C#,Thursday 5th of October 2023 03:18:48 AM CDT,"using System;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;

class Program
{
    const uint PIPE_ACCESS_INBOUND = 0x00000001;
    const uint PIPE_TYPE_BYTE = 0x00000000;
    const uint PIPE_READMODE_BYTE = 0x00000000;
    const uint PIPE_WAIT = 0x00000000;
    const uint PIPE_UNLIMITED_INSTANCES = 255;

    [DllImport(""kernel32.dll"", SetLastError = true)]
    public static extern IntPtr CreateNamedPipeA(
        string lpName,
        uint dwOpenMode,
        uint dwPipeMode,
        uint nMaxInstances,
        uint nOutBufferSize,
        uint nInBufferSize,
        uint nDefaultTimeOut,
        IntPtr lpSecurityAttributes);

    [DllImport(""kernel32.dll"", SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    public static extern bool ConnectNamedPipe(IntPtr hNamedPipe, IntPtr lpOverlapped);

    [DllImport(""kernel32.dll"", SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    public static extern bool CloseHandle(IntPtr hObject);

    [DllImport(""kernel32.dll"", SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    public static extern bool ReadFile(
        IntPtr hFile,
        byte[] lpBuffer,
        uint nNumberOfBytesToRead,
        out uint lpNumberOfBytesRead,
        IntPtr lpOverlapped);

    static void Main()
    {
        string pipeName = @""\\.\pipe\MyNamedPipe"";
        IntPtr pipeHandle = CreateNamedPipeA(
            pipeName,
            PIPE_ACCESS_INBOUND,
            PIPE_TYPE_BYTE,
            PIPE_UNLIMITED_INSTANCES,
            0, // Buffer size for output data
            0, // Buffer size for input data
            0, // Default timeout (0 means blocking)
            IntPtr.Zero);

        if (pipeHandle != IntPtr.Zero)
        {
            Console.WriteLine(""Named pipe created successfully. Waiting for a client to connect..."");

            // Wait for a client to connect
            bool connected = ConnectNamedPipe(pipeHandle, IntPtr.Zero);
            if (connected)
            {
                Console.WriteLine(""Client connected."");

                // Read data from the named pipe
                byte[] buffer = new byte[1024]; // Adjust the buffer size as needed
                uint bytesRead;
                bool success = ReadFile(pipeHandle, buffer, (uint)buffer.Length, out bytesRead, IntPtr.Zero);
                if (success)
                {
                    string data = Encoding.ASCII.GetString(buffer, 0, (int)bytesRead);
                    Console.WriteLine(""Received data from the client: "" + data);
                }
                else
                {
                    Console.WriteLine(""Failed to read data. Error code: "" + Marshal.GetLastWin32Error());
                }
            }
            else
            {
                Console.WriteLine(""Failed to connect to client. Error code: "" + Marshal.GetLastWin32Error());
            }

            // Close the named pipe when done
            CloseHandle(pipeHandle);
        }
        else
        {
            Console.WriteLine(""Failed to create named pipe. Error code: "" + Marshal.GetLastWin32Error());
        }

        Console.WriteLine(""Press Enter to exit..."");
        Console.ReadLine();
    }
}
"
jR8MJTXW,Untitled,EddyCZ,C#,Thursday 5th of October 2023 03:16:53 AM CDT,"using System;
using System.Runtime.InteropServices;

class Program
{
    const uint PIPE_ACCESS_INBOUND = 0x00000001;
    const uint PIPE_TYPE_BYTE = 0x00000000;
    const uint PIPE_READMODE_BYTE = 0x00000000;
    const uint PIPE_WAIT = 0x00000000;
    const uint PIPE_UNLIMITED_INSTANCES = 255;

    [DllImport(""kernel32.dll"", SetLastError = true)]
    public static extern IntPtr CreateNamedPipeA(
        string lpName,
        uint dwOpenMode,
        uint dwPipeMode,
        uint nMaxInstances,
        uint nOutBufferSize,
        uint nInBufferSize,
        uint nDefaultTimeOut,
        IntPtr lpSecurityAttributes);

    [DllImport(""kernel32.dll"", SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    public static extern bool ConnectNamedPipe(IntPtr hNamedPipe, IntPtr lpOverlapped);

    [DllImport(""kernel32.dll"", SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    public static extern bool CloseHandle(IntPtr hObject);

    static void Main()
    {
        string pipeName = @""\\.\pipe\MyNamedPipe"";
        IntPtr pipeHandle = CreateNamedPipeA(
            pipeName,
            PIPE_ACCESS_INBOUND,
            PIPE_TYPE_BYTE,
            PIPE_UNLIMITED_INSTANCES,
            0, // Buffer size for output data
            0, // Buffer size for input data
            0, // Default timeout (0 means blocking)
            IntPtr.Zero);

        if (pipeHandle != IntPtr.Zero)
        {
            Console.WriteLine(""Named pipe created successfully."");
            // Wait for a client to connect (you can use ConnectNamedPipe here)
            // Do some work with the named pipe
            // Close the named pipe when done

            CloseHandle(pipeHandle);
        }
        else
        {
            Console.WriteLine(""Failed to create named pipe. Error code: "" + Marshal.GetLastWin32Error());
        }
    }
}
"
z9WDcYJd,Sieve of Eratosthenes,naren_paste,Python,Thursday 5th of October 2023 03:15:25 AM CDT,"def sieve_of_eratosthenes(limit):
    # Create a boolean list ""is_prime"" where is_prime[i] is True if i is prime
    is_prime = [True] * (limit + 1)
    is_prime[0] = is_prime[1] = False  # 0 and 1 are not prime numbers

    # Apply the Sieve of Eratosthenes
    for i in range(2, int(limit**0.5) + 1):
        if is_prime[i]:
            for j in range(i**2, limit + 1, i):
                is_prime[j] = False

    # Use list comprehension to extract prime numbers
    primes = [num for num in range(2, limit + 1) if is_prime[num]]

    return primes

# Example: Generate a list of primes up to 50
limit = 50
prime_numbers = sieve_of_eratosthenes(limit)

print(""Prime Numbers up to"", limit, "":"", prime_numbers)
"
DzELnnug,Plugin Buildings [PREMIUM] Link,GonzaDL,JavaScript,Thursday 5th of October 2023 03:12:44 AM CDT,https://www.spigotmc.org/members/gonzadl.214048/
VFhEvYzh,pascals triangle,naren_paste,Python,Thursday 5th of October 2023 03:02:59 AM CDT,"def generate_pascals_triangle(num_rows):
    triangle = [[1] * (i + 1) for i in range(num_rows)]

    for i in range(2, num_rows):
        for j in range(1, i):
            triangle[i][j] = triangle[i - 1][j - 1] + triangle[i - 1][j]

    return triangle

def print_pascals_triangle(triangle):
    for row in triangle:
        print("" "".join(map(str, row)))

# Example: Generate Pascal's Triangle with 5 rows
num_rows = 5
pascals_triangle = generate_pascals_triangle(num_rows)

print(""Pascal's Triangle:"")
print_pascals_triangle(pascals_triangle)
"
uxQAtv61,sgui,Stawlie0,C++,Thursday 5th of October 2023 02:08:49 AM CDT,"ugui = {}
local gpu = require(""component"").gpu
local unicode = require(""unicode"")

ugui.colors = {
    [""0""] = 0x333333,
    [""1""] = 0x0000ff,
    [""2""] = 0x00ff00,
    [""3""] = 0x24b3a7,
    [""4""] = 0xff0000,
    [""5""] = 0x8b00ff,
    [""6""] = 0xffa500,
    [""7""] = 0xbbbbbb,
    [""8""] = 0x808080,
    [""9""] = 0x0000ff,
    [""a""] = 0x66ff66,
    [""b""] = 0x00ffff,
    [""c""] = 0xff6347,
    [""d""] = 0xff00ff,
    [""e""] = 0xffff00,
    [""f""] = 0xffffff,
    [""g""] = 0x00ff00,
    [""border""] = 0x525FE1,
}

function ugui.setColor(index)
    local back = gpu.getForeground()
    local newColor = ugui.colors[index]
    if newColor then
        gpu.setForeground(newColor)
    elseif index == ""r"" then
        gpu.setForeground(back)
    end
end

function ugui.text(x, y, text)
    local n = 0
    local isColorCode = false

    for i = 1, unicode.len(text) do
        local char = unicode.sub(text, i, i)

        if char == ""&"" then
            isColorCode = true
        elseif isColorCode then
            isColorCode = false
            if ugui.colors[char] then
                ugui.setColor(char)  -- Исправлен вызов функции
            end
        else
            n = n + 1
            gpu.set(x + n, y, char)
        end
    end
end

function ugui.drawCube(x, y, width, height, color)
    local topBorder = ""╭"" .. string.rep(""⎯"", width - 2) .. ""╮""
    local middleRow = ""│"" .. string.rep("" "", width - 2) .. ""│""
    local bottomBorder = ""╰"" .. string.rep(""⎯"", width - 2) .. ""╯"" -- ━
    gpu.setForeground(color)
    gpu.set(x, y, topBorder)     -- Draw top border
    for i = 1, height - 2 do
        gpu.set(x, y + i, middleRow)     -- Draw middle rows
    end
    gpu.set(x, y + height - 1, bottomBorder)     -- Draw bottom border
end

function ugui.drawMain(nameTable, color, version)
    local width, height = gpu.getResolution()
    ugui.drawCube(1, 1, width, height, color)  -- Исправлен вызов функции
    ugui.text(math.floor((width/2)-unicode.len(nameTable)/2), 1,  nameTable)  -- Исправлен вызов функции
    ugui.text(5, height, ""&9[Author: Zayats ∧ Stawlie]"")
    vers = ""&9[v"" .. version .. "" beta]""
    ugui.text(width-#vers-5, height, vers)  -- Исправлен вызов функции
end

function ugui.drawFrame(x, y, width, height, nameTitle, color)
    ugui.drawCube(x, y, width, height, color)
    ugui.text(x+1, y, ""["" ..nameTitle .. ""]"")
end

return ugui"
2mT9sxwr,NuclearCraft Reactor AutoControl,Zengyj,Lua,Thursday 5th of October 2023 02:01:45 AM CDT,"local component = require(""component"")
local keyboard = require(""keyboard"")
local event = require(""event"")
local thread = require(""thread"")

local gpu = component.gpu

local factor = (1156 / 949 + 4430 / 3635) / 2

local STARTTIME = os.time()
local screenViewport = {gpu.getViewport()}
local WIDTH , HEIGHT = 96 , 16
local reactors = {address = {}, reactor = {}, reactors = {}, screens = {}}
Colors = {}
local symList = {'#', '@', '$', '%', '^', '&'}

local function getTemperature(reactor)
    -- nc_fusion_reactor
    if(reactor.type == 0) then
        return reactor.getTemperature() / 1e6
    end
    -- nc_fission_reactor
    if(reactor.type == 1) then
        return reactor.getHeatLevel() / 1e3
    end
    -- nil
    return -1
end

local function numberToShow(number)
    return tostring(number):sub(1 , tostring(number):find('%.') + 2)
end

local function showBar(x, y, width, height, color)
    if (gpu.getDepth() > 1) then
        gpu.setBackground(color)
        gpu.fill(x ,y ,width ,height , ' ')
        gpu.setBackground(0)
    else
        local sym
        local i = 1
        for color_set , sym_set in pairs(Colors) do
            if (color_set == color) then
                sym = sym_set
                break
            end
            i = i + 1
        end
        if (sym == nil) then
            Colors[color] = symList[i] or '*'
            sym = Colors[color]
        end
        gpu.fill(x, y, width, height, sym)
    end
end

local function screenLoopT0(reactor, i)
    event.pull('screen set down')
    local pos = 2 + 6 * (i - 1)
    local reactorNumber = 'reactor '..i
    gpu.fill(1 , pos , WIDTH , 1 , '-')
    gpu.set((WIDTH - #reactorNumber) / 2, pos, reactorNumber)
    gpu.set(1 , pos + 2 , 'Temperature :')
    while true do
        local statusShow = 'status : '..reactor.status
        local problem = reactor.getProblem()
        gpu.fill(1 , pos + 1 , WIDTH , 1 , ' ')
        gpu.set(1 , pos + 1 , statusShow)
        gpu.set(WIDTH - #problem + 1 , pos + 1 , problem)
        local opti = reactor.optimumTemperature
        local temp = getTemperature(reactor)
        local maxtemp = reactor.MAXTEMPERATURE
        local maxtemp_show = math.min(maxtemp , opti * 1.5)
        local x1 = math.floor(temp / maxtemp_show * WIDTH)
        local x2 = math.floor(opti / maxtemp_show * WIDTH)
        local area_x1 = math.floor(opti * 0.99 / maxtemp_show * WIDTH)
        local area_x2 = math.floor(opti * 1.01 / maxtemp_show * WIDTH)
        local optiWidth = math.max(1, area_x2 - area_x1)
        gpu.fill(1 , pos + 5 , WIDTH , 1 , ' ')
        gpu.set(1 , pos + 5 , numberToShow(temp))
        gpu.set(WIDTH - #numberToShow(maxtemp) + 1 , pos + 5 , numberToShow(maxtemp))
        gpu.set(x2 - (#numberToShow(opti) / 2 - 1) , pos + 5 , numberToShow(opti))
        showBar(1, pos + 4, WIDTH, 1, 0x00DBC0)
        showBar(1, pos + 4, x1, 1, 0xCCB600)
        showBar(x2, pos + 4, 1, 1, 0xFF7F50)
        gpu.fill(1, pos + 3, WIDTH, 1, ' ')
        gpu.set(area_x1 - #numberToShow(opti * 0.999) - 1 , pos + 3 , numberToShow(opti * 0.99))
        gpu.set(area_x1 + optiWidth + 1 , pos + 3 , numberToShow(opti * 1.001))
        showBar(area_x1, pos + 3, optiWidth , 1, 0xFF7F50)
        os.sleep(0.05)
    end
end

local function screenLoopT1(reactor, i)
    event.pull('screen set down')
    local pos = 2 + 6 * (i - 1)
    local reactorNumber = 'reactor '..i
    gpu.fill(1 , pos , WIDTH , 1 , '-')
    gpu.set((WIDTH - #reactorNumber) / 2, pos, reactorNumber)
    gpu.set(1 , pos + 2 , 'Temperature :')
    while true do
        local statusShow = 'status : '..reactor.status
        local problem = reactor.getProblem()
        gpu.fill(1 , pos + 1 , WIDTH , 1 , ' ')
        gpu.set(1 , pos + 1 , statusShow)
        gpu.set(WIDTH - #problem + 1 , pos + 1 , problem)
        local opti = reactor.optimumTemperature
        local temp = getTemperature(reactor)
        local maxtemp = reactor.MAXTEMPERATURE
        local maxtemp_show = math.min(maxtemp , opti * 1.5)
        local x1 = math.floor(temp / maxtemp_show * WIDTH)
        local x2 = math.floor(opti / maxtemp_show * WIDTH)
        local area_x1 = math.floor(opti / maxtemp_show * WIDTH)
        local area_x2 = math.floor(opti / maxtemp_show * WIDTH)
        local optiWidth = math.max(1, area_x2 - area_x1)
        gpu.fill(1 , pos + 5 , WIDTH , 1 , ' ')
        gpu.set(1 , pos + 5 , numberToShow(temp))
        gpu.set(WIDTH - #numberToShow(maxtemp) + 1 , pos + 5 , numberToShow(maxtemp))
        gpu.set(x2 - (#numberToShow(opti) / 2 - 1) , pos + 5 , numberToShow(opti))
        showBar(1, pos + 4, WIDTH, 1, 0x00DBC0)
        showBar(1, pos + 4, x1, 1, 0xCCB600)
        showBar(x2, pos + 4, 1, 1, 0xFF7F50)
        showBar(area_x1, pos + 3, optiWidth , 1, 0xFF7F50)
        os.sleep(0.05)
    end
end

local function reactorLoop(reactor)
    while true do
        reactor.status = 'check temperature'
        os.sleep(1)
        local tem = getTemperature(reactor)
        if(reactor.type == 0) then
            if(tem > reactor.optimumTemperature * 1.001) then
                reactor.deactivate()
                reactor.status = 'cooling'
                os.sleep(1)
                reactor.activate()
            elseif(tem < reactor.optimumTemperature * 0.999) then
                reactor.activate()
                reactor.status = 'running'
                os.sleep(1)
            else
                reactor.status = 'running'
                os.sleep(1)
            end
        end
        if(reactor.type == 1) then
            if(tem > reactor.optimumTemperature) then
                reactor.deactivate()
                reactor.status = 'cooling'
                os.sleep(20)
                reactor.activate()
            elseif(tem < reactor.optimumTemperature) then
                reactor.activate()
                reactor.status = 'running'
                os.sleep(1)
            else
                reactor.status = 'running'
                os.sleep(1)
            end 
        end
    end
end

local function run()
    local i = 1
    for address, componentType in component.list() do
        local reactor = {}
        if (componentType == 'nc_fusion_reactor') then
            reactor = component.proxy(address)
            reactor.type = 0
            reactor.status = 'init'
            reactor.optimumTemperature = reactor.getFusionComboHeatVariable() * factor
            reactor.MAXTEMPERATURE = reactor.getMaxTemperature() / 1e6
            reactors.address[i] = address
            reactors.reactor[address] = reactor
            reactors.reactors[address] = thread.create(reactorLoop, reactor)
            reactors.screens[address] = thread.create(screenLoopT0, reactor, i)
            i = i + 1
        end
        if(componentType == 'nc_fission_reactor') then
            reactor = component.proxy(address)
            reactor.type = 1
            reactor.status = 'init'
            reactor.MAXTEMPERATURE = reactor.getMaxHeatLevel() / 1e3
            reactor.optimumTemperature = reactor.getMaxHeatLevel() * 0.7 / 1e3
            reactors.address[i] = address
            reactors.reactor[address] = reactor
            reactors.reactors[address] = thread.create(reactorLoop, reactor)
            reactors.screens[address] = thread.create(screenLoopT1, reactor, i)
            i = i + 1
        end
    end
    if (i == 1) then
        local string = 'there is no reactor'
        WIDTH , HEIGHT = screenViewport[1], screenViewport[2]
        gpu.setViewport(WIDTH , HEIGHT)
        gpu.fill(1, 1, WIDTH, HEIGHT, ' ')
        gpu.set((WIDTH - #string) / 2 , HEIGHT / 2 , string)
        os.sleep(5)
        gpu.fill(1, 1, WIDTH, HEIGHT, ' ')
        os.exit()
    end
    HEIGHT = 1
    local width , height = gpu.getViewport()
    WIDTH = math.min(width, WIDTH)
    for j = 1, i - 1 do
        HEIGHT = HEIGHT + 6
        if (HEIGHT > height) then
            HEIGHT = HEIGHT - 6
            break
        end
    end
    gpu.setViewport(WIDTH, HEIGHT)
    gpu.fill(1, 1, WIDTH, HEIGHT,' ')
    event.push('screen set down')
end

local function turnAllReactor()
    for i, address in ipairs(reactors.address) do
        local reactor = reactors.reactor[address]
        local reat = reactors.reactors[address]
        local scrt = reactors.screens[address]
        -- do something with reactor, reat and scrt
        if(reactor.isProcessing()) then
            reactor.deactivate()
            reactor.status = 'turn off'
            reat.suspend()
            scrt.suspend()
        else
            reactor.activate()
            reactor.status = 'turn on'
            scrt.resume()
            reat.resume()
        end
    end
end

local function turnReactor(reactor,address)
    if(reactor.isProcessing()) then
        reactor.deactivate()
        reactors.reactors[address].suspend()
        reactor.status = ""turn off""
        reactors.screens[address].suspend()
    else
        reactors.reactors[address].resume()
        reactor.activate()
        reactor.status = ""turn on""
        reactors.screens[address].resume()
    end
end

local time_thread = thread.create(function()
    event.pull('screen set down')
    while true do
        local info = 'press Q to quit, press TAB to power on/off reactors'
        local time = 'running time : '..(os.time()-STARTTIME) / 100
        gpu.fill(1, 1, WIDTH, 1, ' ')
        gpu.set(1 , 1 , time)
        gpu.set(WIDTH - #info , 1 , info)
        os.sleep(0.1)
    end
end)

local event_thread = thread.create(function()
    while true do
        local name,address,char,key,player = event.pull('key_down')
        if(key == keyboard.keys.q) then
            print(""Q pressed, exit"")
            return
        end

        if(key == keyboard.keys.tab) then
            turnAllReactor()
        end
    end
end)

run()

thread.waitForAll({event_thread})
gpu.fill(1, 1, WIDTH, HEIGHT, ' ')
gpu.setViewport(screenViewport[1], screenViewport[2])
os.exit(0) -- closes all remaining threads"
UsD24QcR,Untitled,AlexCoder12345,C++,Thursday 5th of October 2023 01:28:25 AM CDT,"void print_inorder(){
        tree_node* cur = root;
        while (cur->left != nullptr){
            cur = cur->left;
        }

        cout << cur->val << ' ';
        while (cur->parent != nullptr){
            cur = cur->parent;
            cout << cur->val << ' ';
            if (cur->right != nullptr)
                cout << cur->right->val << ' ';
        }

        cur = cur->right;
        while (cur->right != nullptr){
            cur = cur->right;
            if (cur->left != nullptr){
                cout << cur->left->val << ' ';
            }
            cout << cur->val;
        }
    }"
13j8bBbj,Untitled,Diaxon,JavaScript,Thursday 5th of October 2023 01:13:50 AM CDT,"import React, { useEffect, useState } from ""react"";
import { Button, Form } from ""react-bootstrap""
import ""bootstrap/dist/css/bootstrap.min.css""
import Employees from ""./Employees""
import { v4 as uuid } from ""uuid""
import { Link, useNavigate } from ""react-router-dom""

const Edit = () => {
    const [name, setName] = useState("""")
    const [surname, setSurname] = useState("""")
    const [age, setAge] = useState("""")
    const [id, setId] = useState("""")

    let history = useNavigate()

    let index = Employees.map((e) => {
        return e.Id
    }).indexOf(id)

    const handleSubmit = (e) => {
        e.preventDefault()

        let a = Employees[index]
        a.Name = name
        a.Surname = surname
        a.Age = age

        history(""/"")
    }

    useEffect(() => {
        setName(localStorage.getItem(""Name""))
        setSurname(localStorage.getItem(""Surname""))
        setAge(localStorage.getItem(""Age""))
        setId(localStorage.getItem(""Id""))
    }, [])

    return (<div>
        <Form className={""d-grid gap-2""} style={{ margin: ""15rem"" }}>
            <Form.Group className={""mb-3""} controlId={""formName""}>
                <Form.Control type={""text""} placeholder={""Enter name""} value={name}
                    required onChange={(e) => setName(e.target.value)}>
                </Form.Control>
            </Form.Group>
            <Form.Group className={""mb-3""} controlId={""formSurname""}>
                <Form.Control type={""text""} placeholder={""Enter surname""} value={surname}
                    required onChange={(e) => setSurname(e.target.value)}>
                </Form.Control>
            </Form.Group>
            <Form.Group className={""mb-3""} controlId={""formAge""}>
                <Form.Control type={""text""} placeholder={""Enter age""} value={age}
                    required onChange={(e) => setAge(e.target.value)}>
                </Form.Control>
            </Form.Group>
            <Button onClick={(e) => handleSubmit(e)} type={""submit""}>Update</Button>
        </Form>
    </div>)
}

export default Edit;"
Xurs7pAi,Untitled,Diaxon,JavaScript,Thursday 5th of October 2023 01:13:12 AM CDT,"import React, {Fragment} from ""react"";
import {Button, Table} from ""react-bootstrap""
import Employees from ""./Employees"";
import ""bootstrap/dist/css/bootstrap.min.css""
import {Link, useNavigate} from ""react-router-dom"";

const Home = () => {
    let history = useNavigate()

    const handleEdit = (Id, Name, Surname, Age) => {
        localStorage.setItem(""Name"", Name)
        localStorage.setItem(""Surname"", Surname)
        localStorage.setItem(""Age"", Age)
        localStorage.setItem(""Id"", Id)
    }

    const handleDelete = (Id) => {
        let index = Employees.map((e) => {
            return e.Id;
        }).indexOf(Id)
        Employees.splice(index, 1)
        history(""/"")
    }

    return (
        <Fragment>
            <div style={{margin: ""10rem""}}>
                <Table striped bordered hover size={""sm""}>
                    <thead>
                    <tr>
                        <th>Name</th>
                        <th>Surname</th>
                        <th>Age</th>
                        <th>Actions</th>
                    </tr>
                    </thead>
                    <tbody>
                    {Employees && Employees.length > 0 ? Employees.map((item) => {
                        return (
                            <tr>
                                <td>{item.Name}</td>
                                <td>{item.Surname}</td>
                                <td>{item.Age}</td>
                                <td>
                                    <Link to={""/edit""}>
                                        <Button
                                            onClick={() => handleEdit(item.Id, item.Name, item.Surname, item.Age)} className=""btn btn-warning"">Edit</Button>
                                    </Link>
                                    &nbsp;
                                    <Button onClick={() => handleDelete(item.Id)} className=""btn btn-danger"">Delete</Button>
                                </td>
                            </tr>
                        )
                    }) : ""No Data""
                    }
                    </tbody>
                </Table>
                <br></br>
                <Link className={""d-grid gap-2""} to={""/create""}>
                    <Button size={""lg""} className=""btn btn-success"">Create</Button>
                </Link>
            </div>
        </Fragment>
    )
}

export default Home;"
CU0nx7ys,Array Database basic,Oiljacker,C,Thursday 5th of October 2023 12:09:55 AM CDT,"#include <stdio.h>
#include <string.h>

int main() {
    char stu_name[51], stu_dob[51], stu_mobnum[51];
    int i = 0, n = 0; // Initialize n to 0, and i is used as an array index

    printf(""Enter student information:\n"");

    while (1) {
        printf(""Enter the student's name: "");
        scanf(""%s"", &stu_name[n]);
        printf(""Enter the student's DOB: "");
        scanf(""%s"", &stu_dob[n]);
        printf(""Enter the student's mobile number: "");
        scanf(""%s"", &stu_mobnum[n]);

        printf(""Enter -1 to exit, else enter any number to continue: "");
        scanf(""%d"", &i);

        if (i == -1) {
            break;
        }
        else {
            n++;
        }
    }

    printf(""\nStudent Information:\n"");
    for (int a = 0; a <= n; a++) {
        printf(""Student: %d\n"", a + 1);
        printf(""Name: %s\n"", stu_name[a]);
        printf(""DOB: %s\n"", stu_dob[a]);
        printf(""Mobile Number: %s\n"", stu_mobnum[a]);
    }

    return 0;
}"
9v2NZSVh,Introduction to Web Technologies activity#2,JcGaming,HTML,Thursday 5th of October 2023 12:08:13 AM CDT,"<!--Preview Link: https://html-starter-dun-nine.vercel.app/ -->
<!--I did it fast because I was coding at Library-->

<html>
    <head> <!--This is the title-->
        <title>This is my first WebPage</title>
        <style>
            .navbar {
                position: fixed;
                left: 50%;
                bottom: 0;
                transform: translateX(-50%);
            }
        </style>
    </head>
    <body>
        <!--Prints my name-->
        <h1>John Carl Quieta</h1>
        <!--Displays my email, contact no., and address with different color, face and size-->
        <h3><i>My Email: </i> <font face=""Arial"" color=""Red"" size=""5""> jquieta@paterostechnological.edu.ph</font> </h3>
        <h3><font size=""10"">My Contact No.: </font><font face=""fantasy"" size=""7"" color=""green""> 0941355371</font> </h3>
        <h3><font size =""20"">My Address: </font> <font face=""MONACO"" size=""30"" color=""cyan""> Makati City</font></h3>

        <!--This is 4 sentences and uses text formatting-->
        <p><b>Hi!,</b>I am <b><i><font color=""#9933ff""> John Carl Quieta</font></i></b>. From <b><font color=""lime"">Makati City</font></b>. I am currently studying at <b>Pateros Technological College</b>. I am <mark>2nd year College Student taking my Certificate in Computer Science</mark></p>

        <h2>My Hobby and Skills:</h2>
        <ul>
            <li>Technical</li>
            <li>Microsoft</li>
            <li>Programming</li>
            <pre>
            <img src="" https://th.bing.com/th/id/OIP.WNn7cntaQ-8FxZ6LPa-aNgHaHk?pid=ImgDet&rs=1"" alt=""ptc"" width=""200"" height=""200""> <img src=""https://cdn2.iconfinder.com/data/icons/education-icons-4/200/SCHOOL15-512.png"" alt=""school"" width=""200"" height=""200""> <img src=""https://cdn.icon-icons.com/icons2/2643/PNG/512/male_boy_person_people_avatar_icon_159358.png"" alt=""boy"" width=""200"" height=""200""> <img src=""https://th.bing.com/th/id/OIP.nBwIfauMfjWd0qbnifW7YgHaHa?pid=ImgDet&rs=1"" alt=""library"" width=""200"" height=""200""> <img src=""https://th.bing.com/th/id/OIP.9bpuD961fuAlMDSS0K_ZSwHaIC?pid=ImgDet&rs=1"" alt=""grad"" width=""200"" height=""200"">
            </pre>

            <!-- Navigation bar -->
            <div class=""navbar"">
                <a href=""https://facebook.com"">Facebook</a>
                <a href=""https://google.com"">Google</a>
                <a href=""https://youtube.com"">Youtube</a>
            </div>

    </body>
</html>
"
y700Nxdy,Simple ConvexityDefects using concavehull,WarPie90,Delphi,Wednesday 4th of October 2023 11:50:42 PM CDT,"type
  EConvexityDefects = (cdNone, cdAll, cdMinimal);

(*
  Finds the defects in relation to a convex hull of the given concave hull.
  cdAll     -> Keeps all convex points as well.
  cdMinimal -> keeps the convex points that was linked to a defect
  cdNone    -> Only defects
*)
function ConvexityDefects(ConcavePoly: TPointArray; Epsilon: Single; Mode:EConvexityDefects=cdNone): TPointArray;
var
  x,y,i,j,k: Int32;
  dist, best: Single;
  pt: TPoint;
  convex: TPointArray;
begin
  convex  := ConcavePoly.ConvexHull();

  for x:=0 to High(ConcavePoly) do
  begin
    i := convex.IndexOf(ConcavePoly[x]);

    if i <> -1 then
    begin
      j := (i+1) mod Length(convex);
      y := ConcavePoly.IndexOf(convex[j]);

      best := 0;
      for k:=y to x do
      begin
        dist := DistToLine(ConcavePoly[k], convex[i], convex[j]);
        if (dist > best) then
        begin
          best := dist;
          pt := ConcavePoly[k];
        end;
      end;

      if best >= Epsilon then
      begin
        if (Mode = cdMinimal) and ((Length(Result) = 0) or (Result[High(Result)] <> convex[j])) then Result += convex[j];
        Result += pt;
        if Mode = cdMinimal then Result += convex[i];
      end;

      if Mode = cdAll then
        Result += convex[i];
    end;
  end;
end;


// original simpler function returns only defects
function ConvexityDefects(ConcavePoly: TPointArray; Epsilon: Single): TPointArray;
var
  x,y,i,j,k: Int32;
  dist, best: Single;
  pt: TPoint;
  convex: TPointArray;
begin
  convex  := ConcavePoly.ConvexHull();

  for x:=0 to High(ConcavePoly) do
  begin
    i := convex.IndexOf(ConcavePoly[x]);

    if i <> -1 then
    begin
      j := (i+1) mod Length(convex);
      y := ConcavePoly.IndexOf(convex[j]);

      best := 0;
      for k:=y to x do
      begin
        dist := DistToLine(ConcavePoly[k], convex[i], convex[j]);
        if (dist > best) then
        begin
          best := dist;
          pt := ConcavePoly[k];
        end;
      end;

      if best >= Epsilon then Result += pt;
    end;
  end;
end; "
skV2EXw7,邀您一起看：555影视-莲花楼,xiaomianao666,JavaScript,Wednesday 4th of October 2023 11:00:49 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥555影视-莲花楼@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxhc3RfY2hhcHRlcl9ydWxlXCI6XCJqczpcXG5ldmFsKGZldGNoKCdoaWtlcjovL2ZpbGVzL3J1bGVzL3h5cS9oaWtlcm1vdmllLmpzJykpO2hpa2NoYXB0ZXIoKTtcIixcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInBhcmFtc1wiOlwie1xcXCJpZFxcXCI6XFxcIl9feHF5czFANVxcXCJ9XCIsXCJzYXZlZFwiOmZhbHNlLFwidGl0bGVcIjpcIummmeaDheW9seinhlwiLFwidmVyc2lvblwiOjAsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LjU1NXlpbmdzaGkuY29tL3ZvZGRldGFpbC80MjM0NzAuaHRtbDtnZXQ7VVRGLTg7e1VzZXItQWdlbnRATW96aWxsYS81LjAgKExpbnV477yb77ybIEFuZHJvaWQgMTHvvJvvvJsgTWkgMTAgUHJvKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvODguMC40MzI0LjE1MiBNb2JpbGUgU2FmYXJpLzUzNy4zNn1cIixcImNvbF90eXBlXCI6XCJpY29uXzRfY2FyZFwiLFwiZmluZF9ydWxlXCI6XCJqczooXFxuKHRrdCwgTU9WdGl0bGUpID0+IHtcXG4gICAgaWYgKHRrdCAhPSBcXFwiXFxcIikge1xcbiAgICAgICAgc2V0UGFnZVRpdGxlKHRrdCArIFxcXCItXFxcIiArIE1PVnRpdGxlKTtcXG4gICAgfVxcbiAgICBldmFsKGZldGNoKFxcXCJoaWtlcjovL2ZpbGVzL3J1bGVzL3h5cS9oaWtlcm1vdmllLmpzXFxcIikpO1xcbiAgICBvbWVyaigpO1xcbn1cXG4pKFxcXCI1NTXlvbHop4ZcXFwiLFxcXCLojrLoirHmpbxcXFwiKVwiLFwiZ3JvdXBcIjpcIuKRoOi9u+WQiOmbhlwiLFwidWFcIjpcIm1vYmlsZVwiLFwicHJlUnVsZVwiOlwiLy/orr7nva7mm7TmlrDpl7TpmpTml7bpl7Qs5Y2V5L2N5Li65pW05pWw5aSp44CCXFxudmFyIHVwdGltZSA9IDI7XFxuZnVuY3Rpb24gdXBydWxlZmlsZSgpIHtcXG4gICAgdmFyIHJ1bGVqcyA9IGZldGNoKCdodHRwczovL2FnaXQuYWkvbHprMjM1NTkvQ2xvdWRSdWxlL3Jhdy9icmFuY2gvbWFzdGVyL2hpa2VybW92aWUuanMnLCB7fSk7XFxuICAgIGlmIChydWxlanMuc2VhcmNoKC9sYXp5UnVsZS8pID09IC0xKSB7XFxuICAgICAgICBydWxlanMgPSBmZXRjaCgnaHR0cHM6Ly9jb2RlYmVyZy5vcmcvbHprMjM1NTkvY2xvdWRydWxlL3Jhdy9icmFuY2gvbWFzdGVyL2hpa2VybW92aWUuanMnLCB7fSk7XFxuICAgIH1cXG4gICAgaWYgKHJ1bGVqcy5zZWFyY2goL2xhenlSdWxlLykgIT0gLTEpIHtcXG4gICAgICAgIHdyaXRlRmlsZShcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy94eXEvaGlrZXJtb3ZpZS5qc1xcXCIsIHJ1bGVqcyk7XFxuICAgIH1cXG4gICAgdmFyIHJ1bGVqc29uID0gZmV0Y2goJ2h0dHBzOi8vYWdpdC5haS9semsyMzU1OS9DbG91ZFJ1bGUvcmF3L2JyYW5jaC9tYXN0ZXIvaGlrZXJtb3ZpZS5qc29uJywge30pO1xcbiAgICBpZiAocnVsZWpzb24uc2VhcmNoKC9cXFxcXFxcInZvZGhyZWZcXFxcXFxcIi8pID09IC0xKSB7XFxuICAgICAgICBydWxlanNvbiA9IGZldGNoKCdodHRwczovL2NvZGViZXJnLm9yZy9semsyMzU1OS9jbG91ZHJ1bGUvcmF3L2JyYW5jaC9tYXN0ZXIvaGlrZXJtb3ZpZS5qc29uJywge30pO1xcbiAgICB9XFxuICAgIGlmIChydWxlanNvbi5zZWFyY2goL1xcXFxcXFwidm9kaHJlZlxcXFxcXFwiLykgIT0gLTEpIHtcXG4gICAgICAgIHdyaXRlRmlsZShcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy94eXEvaGlrZXJtb3ZpZS5qc29uXFxcIiwgcnVsZWpzb24pO1xcbiAgICB9XFxuICAgIGlmIChydWxlanMuc2VhcmNoKC9sYXp5UnVsZS8pICE9IC0xICYmIHJ1bGVqc29uLnNlYXJjaCgvXFxcXFxcXCJ2b2RocmVmXFxcXFxcXCIvKSAhPSAtMSkge1xcbiAgICAgICAgd3JpdGVGaWxlKFxcXCJoaWtlcjovL2ZpbGVzL3J1bGVzL3h5cS9oaWtlcnVwZGF0ZS50eHRcXFwiLCBuZXcgRGF0ZSgpICsgJycpO1xcbiAgICAgICAgY29uZmlybSh7dGl0bGU6J+aPkOekuicsIGNvbnRlbnQ6J+iHquWKqOabtOaWsOWujOaIkCd9KTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICAgIGNvbmZpcm0oe3RpdGxlOifmj5DnpLonLCBjb250ZW50Oifoh6rliqjmm7TmlrDlpLHotKUnfSk7XFxuICAgIH1cXG59XFxuXFxuXFxuXFxuLy/mo4DmtYvmmK/lkKbmnInlhpnlhaXml7bpl7TkuI7op4TliJnnmoRqc+aPkuS7tuaWh+S7tlxcbmlmIChmaWxlRXhpc3QoXFxcImhpa2VyOi8vZmlsZXMvcnVsZXMveHlxL2hpa2VydXBkYXRlLnR4dFxcXCIpICYmIGZpbGVFeGlzdChcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy94eXEvaGlrZXJtb3ZpZS5qc1xcXCIpICYmIGZpbGVFeGlzdChcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy94eXEvaGlrZXJtb3ZpZS5qc29uXFxcIikpIHtcXG4gICAgLy/orqHnrpfml7bpl7Tpl7TpmpRcXG4gICAgdmFyIHN0YXJ0ID0gbmV3IERhdGUoZmV0Y2goXFxcImhpa2VyOi8vZmlsZXMvcnVsZXMveHlxL2hpa2VydXBkYXRlLnR4dFxcXCIsIHt9KSk7XFxuICAgIHZhciBub3d0ID0gbmV3IERhdGUoKTtcXG4gICAgdmFyIERfVCA9IG5vd3QuZ2V0VGltZSgpIC0gc3RhcnQuZ2V0VGltZSgpO1xcbiAgICB2YXIgRF9EID0gRF9UIC8gKDEwMDAgKiAzNjAwICogMjQpO1xcbiAgICB2YXIgdGRpZiA9IHBhcnNlSW50KERfRCkgKyAnJztcXG4gICAgLy9sb2codGRpZik7XFxuICAgIC8v6buY6K6k6Ze06ZqU6LaF6L+H6K6+572u5aSp5pWw5bCx5Y+W5LiA5qyh5LqR56uv5paH5Lu2XFxuICAgIGlmICh0ZGlmID49IHVwdGltZSB8fCB0ZGlmIDwgMCkge1xcbiAgICAgICAgdXBydWxlZmlsZSgpO1xcbiAgICB9XFxufSBlbHNlIHtcXG4gICAgLy/lpoLmnpzlsJHkuIDkuKrmlofku7blsLHoh6rliqjlj5bkupHnq6/mlofku7ZcXG4gICAgdXBydWxlZmlsZSgpO1xcbn1cXG5cXG5cXG5cXG4vL+aJp+ihjOmcgOimgemihOWkhOeQhueahOermeeCuVxcbnZhciBsYWMgPSBmZXRjaCgnaGlrZXI6Ly9maWxlcy9ydWxlcy94eXEvaGlrZXJtb3ZpZS5qcycpO1xcbi8vbG9nKGxhYy5sZW5ndGgpO1xcbmlmIChsYWMuc2VhcmNoKC9sYXp5UnVsZS8pICE9IC0xKSB7XFxuICAgIGV2YWwobGFjKTtcXG4gICAgaGlrZXJwcmUoKTtcXG59IGVsc2Uge1xcbiAgICAvL+WmguaenOacrOWcsOaWh+S7tuS4jeWvueWwhuWwneivleiHquS/ruWkjVxcbiAgICB1cHJ1bGVmaWxlKCk7XFxuICAgIHNldEVycm9yKCfop4TliJnkv67lpI3lrozmiJDvvIzlpoLmnInpl67popjor7flj43ppojjgIInKVxcbn1cIixcInBhZ2VzXCI6XCJbXVwifSIsInBpY1VybCI6Imh0dHBzOi8vdDEuc3pydGNwYS5jb20vMjAyMy8wNC8yMi8zNTcxMTU5OWJmMWYyLmpwZ0BSZWZlcmVyPWh0dHBzOi8vdDEuc3pydGNwYS5jb20vMjAyMy8wNC8yMi8zNTcxMTU5OWJmMWYyLmpwZyIsInRpdGxlIjoiNTU15b2x6KeGLeiOsuiKsealvCJ9
BJgj2DxC,GetIpPublicHandler,Vassa007,Java,Wednesday 4th of October 2023 10:56:27 PM CDT,"package com.unej.sisterforlecturer.main.presensi;

import android.app.Activity;
import android.util.Log;

import com.google.android.material.dialog.MaterialAlertDialogBuilder;
import com.unej.sisterforlecturer.config.controller.CheckIpLocalController;
import com.unej.sisterforlecturer.config.controller.NetworkController;
import com.unej.sisterforlecturer.config.endpoint.ipp.IppublicEndpoint;
import com.unej.sisterforlecturer.config.manager.SessionManager;
import com.unej.sisterforlecturer.config.network.Network;

import org.json.JSONObject;

import java.text.SimpleDateFormat;
import java.util.Date;

import okhttp3.ResponseBody;
import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

public class GetIpPublicHandler {
    private final String TAG = GetIpPublicHandler.class.getSimpleName();
    private Activity activity;
    public String ippublic;
    public String idRuang, ipRuang, versi, lokasi, sts_presensi;
    private SessionManager sessionClass;
    private MaterialAlertDialogBuilder builder;




    public GetIpPublicHandler(Activity activity, String idRuang, String ipRuang, String versi, String lokasi, String sts_presensi) {
        this.activity = activity;
        this.idRuang = idRuang;
        this.ipRuang = ipRuang;
        this.versi = versi;
        this.lokasi = lokasi;
        this.sts_presensi = sts_presensi;
        this.sessionClass = new SessionManager(activity);
    }


    public void doGetIp() {
        IppublicEndpoint ippublicEndpoint = Network.ippublic().create(IppublicEndpoint.class);
        Call<ResponseBody> call = ippublicEndpoint.getIppublic();
        call.enqueue(new Callback<ResponseBody>() {
            @Override
            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {
                try {
                    ResponseBody body = response.body();
                    Log.e(TAG, ""onResponse: "" + body  );
                    if (body == null) {
                        String lokasi = new SessionManager(activity).getLokasi_long()+"",""+new SessionManager(activity).getLokasi_lat();
                        CheckIpLocalController controller = new CheckIpLocalController(activity, idRuang, """",versi, lokasi, sts_presensi);
                        controller.execute();
                    } else {
                        JSONObject object = new JSONObject(body.string());
                        String ip = object.getString(""ip"");
                        Log.e(TAG, ""onResponse: "" + ip );

                        if (!sts_presensi.equals(""7"")) {
                            Log.e(""TAG"", ""onPostExecute: qrcode"");
                            PresensiHandler presensiHandler = new PresensiHandler(activity);
                            presensiHandler.versi = versi;
                            presensiHandler.idruang = idRuang;
                            presensiHandler.ippublik = ip;
                            presensiHandler.token = sessionClass.getToken();
                            presensiHandler.lokasi = lokasi;
                            presensiHandler.presensi();
                        } else {
                            Log.e(""TAG"", ""onPostExecute: testbio"");
                            SimpleDateFormat formatDate = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"");
                            Date today = new Date(System.currentTimeMillis());

                            BiometricHandler handler = new BiometricHandler(activity);
                            handler.timelog = formatDate.format(today);
                            handler.versi = versi;
                            handler.lokasi = lokasi;
                            handler.idRuang = idRuang;
                            handler.ippublik = ip;

                            if (!new NetworkController().isNetworkAvailable(activity)) {
                                handler.offline_store_presensi();
                            } else {
                                handler.biometricPresensi();
                            }
                        }
                    }
                } catch (Exception e){
                    e.printStackTrace();
                }
            }

            @Override
            public void onFailure(Call<ResponseBody> call, Throwable t) {
                Log.e(TAG, ""onFailure: IPPUBLIC "" + t.getMessage() );
            }
        });

    }
}
"
TwDf3eHS,ชื่อ,kohpriwniranam,Python,Wednesday 4th of October 2023 10:49:48 PM CDT,"var PriwPriw  = ""󾸳󾸳󾸳󾸳󾸳󾸳󾸳Koh_Priw󾸳󾸳󾸳󾸳󾸳󾸳Koh_Priw󾸳󾸳󾸳󾸳󾸳󾸳󾸳󾸳󾸳󾸳󾸳󾸳󾸳""
 
                } else if strings.HasPrefix(txt,""profile!"") {
                    str := strings.Replace(txt,""profile!"","""", 1)
                    resultrname := """"+""󾸳󾸳󾸳󾸳󾸳󾸳󾸳_""+rname+""""
                    res,_ := GetProfile()
                    //xnm := """"+""󾸳󾸳󾸳󾸳󾸳󾸳󾸳""+""_🍙🍙🍙🍙🍙_""+""󾸳󾸳󾸳󾸳󾸳󾸳󾸳""
                    res.DisplayName = str+resultrname
                    UpdateProfile(res)
                    KohSendText(msg.To,""sᴜᴄᴄᴇs ᴜᴘᴅᴀᴛᴇ ɴᴀᴍᴇ ᴛᴏ: ""+ str,2)"
Z7iEqWmv,contoh form html,rezamalik15,HTML,Wednesday 4th of October 2023 10:09:14 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>HTML - Form</title>
</head>
<body>

    <h1>Formulir Pendaftaran</h1>

    <form action="""" method="""">

        <fieldset>
            <legend>Biodata Diri</legend>
            <p>Masukkan data di bawah ini dengan benar</p>

            <table>
                <tr>
                    <td>
                        <label for=""namadepan"">Nama Depan</label>
                    </td>
                    <td>
                        <input id=""namadepan"" type=""text"">
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for=""namabelakang"">Nama Belakang</label>
                    </td>
                    <td>
                        <input id=""namabelakang"" type=""text"">
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for=""jeniskelamin"">Jenis Kelamin</label>
                    </td>
                    <td>
                        <input id=""jeniskelamin"" name=""jk"" type=""radio"" value=""laki-laki"">
                        Laki-laki
                        <br>
                        <input id=""jeniskelamin"" name=""jk"" type=""radio"" value=""perempuan"">
                        Perempuan
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for=""tempatlahir"">Tempat Lahir</label>
                    </td>
                    <td>
                        <input type=""text"" id=""tempatlahir"" placeholder=""Kota tempat lahir"">
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for=""tanggallahir"">Tanggal Lahir</label>
                    </td>
                    <td>
                        <input type=""date"" id=""tanggallahir"">
                    </td>
                </tr>
            </table>
            
        </fieldset>

    </form>
    
</body>
</html>"
WMh2xKMK,邀您一起看：2023年8月推荐,xiaomianao666,JavaScript,Wednesday 4th of October 2023 09:56:52 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥2023年8月推荐@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5aWH5aaZ5bel5YW3566xXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImh0dHBzOi8vaGFpa3Vvc2hpamllLmNuL2FyY2hpdmVzLzIwMjNuaWFuLTh5dWUtdHVpLWppYW5cXFwiLFxcbmRlc2M6XFxcIjEwMCUmJmZsb2F0XFxcIixcXG5leHRyYTp7Y2FuQmFjazogdHJ1ZX1cXG59XSk7XCIsXCJncm91cFwiOlwi5bel5YW3XCIsXCJwYWdlc1wiOlwiW11cIn0iLCJ0aXRsZSI6IjIwMjPlubQ45pyI5o6o6I2QIn0=
RxYgHTau,insertExpenses,k1mby,HTML,Wednesday 4th of October 2023 08:33:46 PM CDT,"<?php
$server = ""localhost"";
$username = ""root"";
$password = """";
$dbname = ""agricrop"";
$conn = mysqli_connect($server, $username, $password, $dbname);
if (!$conn) {
    die('Cannot connect' . mysqli_error());
}

// Check if the request method is POST
if ($_SERVER[""REQUEST_METHOD""] == ""POST"") {
    // Get the JSON data from the request body
    $formDataJSON = file_get_contents(""php://input"");
    
    // Decode the JSON data to an array
    $formDataArray = json_decode($formDataJSON, true);

    if ($formDataArray === null) {
        // Handle JSON decoding error
        echo ""Error decoding JSON data."";
        exit;
    }

    // Loop through the array of form data objects
    foreach ($formDataArray as $formData) {
        // Access form fields within each object
        $dates = $formData[""inputDate""];
        $times = $formData[""inputTime""];
        $items = $formData[""item""];
        $costs = $formData[""cost""];
        $notes = $formData[""notes""];

        // Create a prepared statement
        $stmt = $conn->prepare(""INSERT INTO expenses (date, time, item, cost, notes) VALUES (?, ?, ?, ?, ?)"");

        // Bind parameters
        $stmt->bind_param(""sssss"", $dates, $times, $items, $costs, $notes);

        // Execute the statement
        if ($stmt->execute()) {
            echo ""Data inserted successfully.<br>"";
        } else {
            echo ""Error: "" . $stmt->error . ""<br>"";
        }

        // Close the statement
        $stmt->close();
    }
}

// Close the database connection
$conn->close();
?>
"
7Rwy8fbE,expenses,k1mby,HTML,Wednesday 4th of October 2023 08:33:07 PM CDT,"<!DOCTYPE html>
<html lang=""en"">

<?php
include 'header.php';
?>
<head>
  <meta charset=""utf-8"">
  <meta content=""width=device-width, initial-scale=1.0"" name=""viewport"">

  <title>Agricultural Materials</title>
  <meta content="""" name=""description"">
  <meta content="""" name=""keywords"">

  <!-- Favicons -->
  <link href=""assets/img/favicon.png"" rel=""icon"">
  <link href=""assets/img/apple-touch-icon.png"" rel=""apple-touch-icon"">

  <!-- Google Fonts -->
  <link href=""https://fonts.gstatic.com"" rel=""preconnect"">
  <link href=""https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i"" rel=""stylesheet"">

  <!-- Vendor CSS Files -->
  <link href=""assets/vendor/bootstrap/css/bootstrap.min.css"" rel=""stylesheet"">
  <link href=""assets/vendor/bootstrap-icons/bootstrap-icons.css"" rel=""stylesheet"">
  <link href=""assets/vendor/boxicons/css/boxicons.min.css"" rel=""stylesheet"">
  <link href=""assets/vendor/quill/quill.snow.css"" rel=""stylesheet"">
  <link href=""assets/vendor/quill/quill.bubble.css"" rel=""stylesheet"">
  <link href=""assets/vendor/remixicon/remixicon.css"" rel=""stylesheet"">
  <link href=""assets/vendor/simple-datatables/style.css"" rel=""stylesheet"">

  <!-- Template Main CSS File -->
  <link href=""assets/css/style.css"" rel=""stylesheet"">

  <link rel=""stylesheet"" id=""cdn-js"" type=""text/css""
    href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"">

</head>

<body>
  <?php include 'sidebar.php'; ?>

  <main id=""main"" class=""main"">

    <div class=""pagetitle"">
      <h1>Farmer's Expenses</h1>
      <nav>
        <ol class=""breadcrumb"">
          <li class=""breadcrumb-item""><a href=""index.php"">Home</a></li>
          <li class=""breadcrumb-item active"">Expenses of Farmer's</li>
        </ol>
      </nav>
    </div><!-- End Page Title -->



    <section class=""section"">
        <div class=""container"">
            <div class=""row"">
                <div class=""col-lg-12"">
                    <label for=""numForms"">Number of Forms:</label>
                    <input type=""number"" id=""numForms"" min=""1"" max=""10"">
                    <button onclick=""createForms()"">Create Forms</button>
                </div>
            </div>
            <div class=""row"">
                <div class=""col-lg-2""></div>
                <form class=""col-lg-8"" id=""formContainer"" method=""post"" action=""insertExpenses.php"">
                    <!-- Dynamically created forms will go here -->
                </form>

                <div class=""d-flex justify-content-center align-items-center"" >
                    <button type=""submit"" class=""btn btn-primary mx-2"" name=""submit"" id=""addExpensesBtn"" style=""display: none;"">Add Expenses</button>
                </div>

            </div>
            
        </div>
    </section>

  </main><!-- End #main -->

  <script type=""text/javascript"" src=""https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js""
        integrity=""sha512-bnIvzh6FU75ZKxp0GXLH9bewza/OIw6dLVh9ICg0gogclmYGguQJWl8U30WpbsGTqbIiAwxTsbe76DErLq5EDQ==""
        crossorigin=""anonymous"" referrerpolicy=""no-referrer""></script>
<script>
    document.getElementById('addExpensesBtn').addEventListener('click', function () {
    const forms = document.querySelectorAll('form');

    if (forms.length === 0) {
        alert(""No forms found."");
        return;
    }
    const formDataArray = [];

    forms.forEach(function (form) {
        const formData = new FormData(form);

        // Convert FormData to a plain JavaScript object
        const formDataObj = {};
        formData.forEach((value, key) => {
            formDataObj[key] = value;
        });

        formDataArray.push(formDataObj);
    });

    // Convert the array of form data objects to JSON
    const formDataJSON = JSON.stringify(formDataArray);

    const xhr = new XMLHttpRequest();
    const url = ""insertExpenses.php"";
    xhr.open(""POST"", url, true);
    xhr.setRequestHeader(""Content-Type"", ""application/json;charset=UTF-8""); // Set the content type to JSON
    xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
            if (xhr.status === 200) {
                alert(xhr.responseText);
            } else {
                alert(""An error occurred while submitting the form."");
            }
        }
    };
    xhr.send(formDataJSON);
    });


    
    function createForms() {
        const numForms = parseInt(document.getElementById('numForms').value);
        document.getElementById('formContainer').innerHTML = '';
        for (let i = 0; i < numForms; i++) {
            const form = document.createElement('form');
            form.innerHTML = `
                <div class=""col-xl-12 mt-3"">
                    <div class=""card"">
                        <div class=""card-body"">
                            <h5 class=""card-title"">Farmer Expenses Form</h5>
                            <p>Enter your daily farm expenses here</p>

                            <!-- Expenses Form -->
                            <div class=""row mt-3"">
                                <label for=""inputDate[]"" class=""col-sm-2 col-form-label"">Date</label>
                                <div class=""col-sm-8"">
                                    <input type=""date"" class=""form-control"" name=""inputDate[]"" />
                                </div>
                            </div>
                            <div class=""row mt-3"">
                                <label for=""inputTime[]"" class=""col-sm-2 col-form-label"">Time</label>
                                <div class=""col-sm-8"">
                                    <input type=""time"" class=""form-control"" name=""inputTime[]"" />
                                </div>
                            </div>

                            <div class=""row mt-3"">
                                <label for=""item[]"" class=""col-sm-2 col-form-label"">Item</label>
                                <div class=""col-sm-8"">
                                    <input type=""text"" class=""form-control"" name=""item[]"" />
                                </div>
                            </div>

                            <div class=""row mt-3"">
                                <label for=""cost[]"" class=""col-sm-2 col-form-label"">Cost</label>
                                <div class=""col-sm-8"">
                                    <input type=""number"" class=""form-control"" name=""cost[]"" />
                                </div>
                            </div>

                            <div class=""row mt-3"">
                                <label for=""notes[]"" class=""col-sm-2 col-form-label"">Notes</label>
                                <div class=""col-sm-8"">
                                    <textarea class=""form-control"" name=""notes[]""></textarea>
                                </div>
                            </div>
                            <br>
                            <div class=""d-flex justify-content-end"">
                                <button type=""reset"" class=""btn btn-secondary mx-2"" id=""resetBtn"" >Reset</button>
                            </div>
                        </div>
                        
                    </div>
                </div>
            `;
            document.getElementById('formContainer').appendChild(form);
        }
        document.getElementById('addExpensesBtn').style.display = 'block';
    }


</script>

</body>


<?php include 'footer.php'?>
</html>"
UrZwTqXL,邀您一起看：主页设置-主题管理,xiaomianao666,JavaScript,Wednesday 4th of October 2023 08:26:01 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥主页设置-主题管理@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5oiR55qE5Li76aG1XCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eSNub1JlY29yZEhpc3RvcnkjO2dldDtVVEYtODt7VXNlci1BZ2VudEBNb3ppbGxhLzUuMCAoTGludXjvvJvvvJsgQW5kcm9pZCAxMe+8m++8myBNaSAxMCBQcm8pIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84OC4wLjQzMjQuMTUyIE1vYmlsZSBTYWZhcmkvNTM3LjM2fVwiLFwiY29sX3R5cGVcIjpcImljb25fc21hbGxfNFwiLFwiZmluZF9ydWxlXCI6XCJqczpldmFsKGZldGNoKCdoaWtlcjovL2Fzc2V0cy9ob21lLmpzJykpOyhcXG4oKSA9PiB7XFxuICAgIEhpa2VySG9tZS5sb2FkKFxcXCJjb25maWdNYW5hZ2VtZW50XFxcIik7XFxufVxcbikoKVwiLFwiZ3JvdXBcIjpcIlwiLFwidWFcIjpcIm1vYmlsZVwiLFwicHJlUnVsZVwiOlwiXCJ9IiwidGl0bGUiOiLkuLvpobXorr7nva4t5Li76aKY566h55CGIn0=
KyUKAZKZ,Reverse length string sorter,banovski,Haskell,Wednesday 4th of October 2023 08:16:35 PM CDT,"-- Reads a set of strings separated by newlines from stdin, sorts them
-- by length in descending order, writes them to stdout.

import Data.List

listItemsToTuplesWithLength :: [String] -> [(Int, String)]
listItemsToTuplesWithLength = map (\x -> (length x, x))

main :: IO ()
main = do
  input <- getContents
  mapM_
    (putStrLn . snd)
    (sortBy (flip compare) (listItemsToTuplesWithLength $ lines input))
"
YbG8EFTw,Untitled,coinwalk,JavaScript,Wednesday 4th of October 2023 07:43:24 PM CDT,"var smmly = parseFloat(document.getElementById('balance').innerHTML);
var nudle = Number((0.00000001).toFixed(8));
var blert = nudle;
var taget = 1.0;
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var stuff = (nudle*3.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var lol = true;
var mighty = smmly;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sunch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var junky = smmly;
var bear = true;
var distj = ((blert*1).toFixed(8));
var zuggbe = ((blert*1).toFixed(8));
var nemo = parseFloat(document.getElementById('balance').innerHTML);
 
 
function get(){
nemo = document.getElementById('balance').innerHTML;
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<(sinch-bogs))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sysch = sunch;
}
if ((nemo>=(sinch+(bogs*3)))&&(nemo<=sunch)) {  
    blert = nudle;
    circuit = 0;
    fatt = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sysch = sunch;
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if (nemo>=(mighty+(nudle*80))){
sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
sunch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
zuggbe = ((blert*1).toFixed(8));
if ((nemo==junky)&&(bear)){
document.getElementById('double_your_btc_win_chance').value = 47.50;
document.getElementById('double_your_btc_payout_multiplier').value = 2.00;
parseFloat(document.getElementById('double_your_btc_stake').value = zuggbe);
parseFloat(document.getElementById('win_amount').innerHTML = zuggbe);
document.getElementById('double_your_btc_bet_lo_button').click();
bear = false;
}
if ((nemo!=junky)&&(!bear)){
junky = parseFloat(nemo);
bear = true;
}
setTimeout(() => get(), 1);
}
get();"
h09SZ2LZ,snowybot good,coinwalk,JavaScript,Wednesday 4th of October 2023 07:42:00 PM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/240).toFixed(8));
var blert = nudle;
var taget = (smmly*2000);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var piper = (nudle*7.5);
var circuit = 0;
var mighty = smmly;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var sunch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
var shit = smmly;
var wons = parseFloat(document.getElementById('wins').innerHTML);
var vons = parseFloat(document.getElementById('wins').innerHTML);
var loms = parseFloat(document.getElementById('losses').innerHTML);
var loon = parseFloat(document.getElementById('losses').innerHTML);
var brother = smmly;
var beboon = true;
 
function get(){
console.clear();
vons = document.getElementById('wins').innerHTML;
loon = document.getElementById('losses').innerHTML;
nemo = document.getElementById('pct_balance').value;
if ((nemo>shit)&&(vons>wons)&&(beboon)){
shit = parseFloat(nemo);
wons = parseFloat(vons);
}
if ((nemo<shit)&&(loon>loms)&&(beboon)){
shit = parseFloat(nemo);
loms = parseFloat(loon);
}
if ((vons>wons)&&(nemo<shit)&&(beboon)){
console.log('bet not verified counted green on reds');
return;
}
if ((loon>loms)&(nemo>shit)&&(beboon)){
console.log('bet not verified counted reds on green');
return;
}
if ((vons<wons)||(loon<loms)&&(beboon)){
console.log('bet not verified negative');
return;
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<(sinch-bogs))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sysch = sunch;
}
if ((nemo>=(sinch+(bogs*3)))&&(nemo<=sunch)) {  
    blert = nudle;
    circuit = 0;
    fatt = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sysch = sunch;
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if (nemo>=(mighty+(nudle*80))){
sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
sunch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
if ((nemo!=brother)&&(!beboon)){
brother = parseFloat(nemo);
beboon = true;
}
if ((nemo==brother)&&(beboon)){
razzle = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
beboon = false;
}
var good = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 10);
}
get();"
zmT9FTvt,chatgpt insert,TAZMAN7140,PHP,Wednesday 4th of October 2023 07:41:10 PM CDT,"<?php
error_reporting(E_ALL);
require(""database.php"");

// Prevent direct access
if ($_SERVER[""REQUEST_METHOD""] !== ""POST"") {
    echo ""No post detected."";
    exit;
}

// Sanitize input using prepared statements
$name = mysqli_real_escape_string($conn, $_POST['name']);
$surname = mysqli_real_escape_string($conn, $_POST['surname']);
$address = mysqli_escape_string($conn, $_POST['address']);
$suburb = mysqli_escape_string($conn, $_POST['suburb']);
$postcode = mysqli_escape_string($conn, $_POST['postcode']);
$phone = mysqli_escape_string($conn, $_POST['phone']);
$mobile = mysqli_escape_string($conn, $_POST['mobile']);
$email = mysqli_escape_string($conn, $_POST['email']);
$course = mysqli_escape_string($conn, $_POST['course']);
$registration = mysqli_escape_string($conn, $_POST['registration']);
$wwvc = mysqli_escape_string($conn, $_POST['wwvc']);
$datePost = mysqli_escape_string($conn, $_POST['date']);
$dateRange = explode(""-"", $datePost); 
$date = $dateRange[2].""-"".$dateRange[1].""-"".$dateRange[0];
$status = mysqli_escape_string($conn, $_POST['status']);

// Format date using DateTime class
$date = DateTime::createFromFormat('d-m-Y', $_POST['date'])->format('Y-m-d');

$status = mysqli_real_escape_string($conn, $_POST['status']);

// Insert data into the database using prepared statement
$stmt = mysqli_prepare($conn, ""INSERT INTO `members` (`id`, `name`, `surname`, `address`, `suburb`, `postcode`, `phone`, `mobile`, `email`, `course`, `registration`, `wwvc`, `date`, `status`) VALUES (NULL, '$name', '$surname', '$address', '$suburb', '$postcode', '$phone', '$mobile', '$email', '$course', '$registration', '$wwvc', '$date', '$status');"");
mysqli_stmt_bind_param($stmt, 'ssssssssss', $name, $surname, $address, $suburb, $postcode, $phone, $mobile, $email, $course, $registration, $wwvc, $date, $status);
mysqli_stmt_execute($stmt);
mysqli_stmt_close($stmt);

// Close the connection
mysqli_close($conn);

// Redirect with exit
header(""Location: https://www.dvba.org.au/database-successful/"");
exit;
?>"
Zk9DLmJD,inster.php,TAZMAN7140,PHP,Wednesday 4th of October 2023 07:39:34 PM CDT,"<?php
error_reporting(true);
require(""database.php"");
// this prevents users from accessing this file without POSTing any data.
if ($_SERVER[""REQUEST_METHOD""] !== ""POST""){
	echo ""No post detected."";
	exit;
}
$name = mysqli_escape_string($conn, $_POST['name']);
$surname = mysqli_escape_string($conn, $_POST['surname']);
$address = mysqli_escape_string($conn, $_POST['address']);
$suburb = mysqli_escape_string($conn, $_POST['suburb']);
$postcode = mysqli_escape_string($conn, $_POST['postcode']);
$phone = mysqli_escape_string($conn, $_POST['phone']);
$mobile = mysqli_escape_string($conn, $_POST['mobile']);
$email = mysqli_escape_string($conn, $_POST['email']);
$course = mysqli_escape_string($conn, $_POST['course']);
$registration = mysqli_escape_string($conn, $_POST['registration']);
$wwvc = mysqli_escape_string($conn, $_POST['wwvc']);
$datePost = mysqli_escape_string($conn, $_POST['date']);
$dateRange = explode(""-"", $datePost); 
$date = $dateRange[2].""-"".$dateRange[1].""-"".$dateRange[0];
$status = mysqli_escape_string($conn, $_POST['status']);

$insertCmd = mysqli_query($conn, ""INSERT INTO `members` (`id`, `name`, `surname`, `address`, `suburb`, `postcode`, `phone`, `mobile`, `email`, `course`, `registration`, `wwvc`, `date`, `status`) VALUES (NULL, '$name', '$surname', '$address', '$suburb', '$postcode', '$phone', '$mobile', '$email', '$course', '$registration', '$wwvc', '$date', '$status');"") or die(mysqli_error($conn));
//$didItWork = true;
mysqli_close($conn);
header(""Location: https://panel.dvba.org.au/"");


?>"
aCyfF35W,Rat in a Maze Problem - I,jayati,C++,Wednesday 4th of October 2023 07:38:56 PM CDT,"//{ Driver Code Starts
// Initial template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function template for C++

class Solution{
    public:
    vector<string> ans;
    bool isSafe(int newx,int newy,vector<vector<int>> &m,vector<vector<bool>> &vis,int n)
    {
        if((newx>=0 && newx<n) && (newy>=0 && newy<n) && vis[newx][newy]!=1 && m[newx][newy]==1)
        {
            return true;
        }
        return false;
    
}
    void solve(int x,int y,vector<vector<int>> &m, int n,vector<vector<bool>> &vis,string path)
    {
        if(x==n-1 && y==n-1)
        {
            ans.push_back(path);
            return;
        }
        vis[x][y]=1;
        if(isSafe(x+1,y,m,vis,n))
        {
            solve(x+1,y,m,n,vis,path+'D');
        }
        
        if(isSafe(x,y-1,m,vis,n))
        {
            solve(x,y-1,m,n,vis,path+'L');
        }
        
        if(isSafe(x,y+1,m,vis,n))
        {
            solve(x,y+1,m,n,vis,path+'R');
        }
        
        if(isSafe(x-1,y,m,vis,n))
        {
            solve(x-1,y,m,n,vis,path+'U');
        }
        vis[x][y]=0;
    }
    
    vector<string> findPath(vector<vector<int>> &m, int n) {
        //   vector<string> ans;
          vector<vector<bool>> vis(n,vector<bool> (n,0));
          string path="""";
          if(m[0][0]==0)
          {
              return ans;
          }
          solve(0,0,m,n,vis,path);
          return ans;
    }
};

    


//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<vector<int>> m(n, vector<int> (n,0));
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                cin >> m[i][j];
            }
        }
        Solution obj;
        vector<string> result = obj.findPath(m, n);
        sort(result.begin(), result.end());
        if (result.size() == 0)
            cout << -1;
        else
            for (int i = 0; i < result.size(); i++) cout << result[i] << "" "";
        cout << endl;
    }
    return 0;
}
// } Driver Code Ends"
E7bscAHp,tmp007.cpp,am1x,C++,Wednesday 4th of October 2023 07:37:51 PM CDT,"#include <stdio.h>
#include <assert.h>
#include <inttypes.h>


bool is_prime(uint64_t x)
{
	if (x < 4)
		return x >= 2;
	if (x % 2 == 0)
		return false;
	for (uint32_t d = 3; d > 2; d += 2) {
		uint64_t q = x / d;
		uint32_t r = x % d;
		if (q < d)
			return true;
		if (r == 0)
			return false;
	}
	return true;
}


int main()
{
	for (int num = 1; num <= 1000000; num++) {
		if (!is_prime(num))
			continue;
		printf(""%d\n"", num);
	}
#if 0
	uint64_t x = 18446744073709551557ULL;
	//uint64_t x = 1152921504606846883ULL;
	bool q = is_prime(x);
	printf(""%llu %d \n"", x, (int) q);
#endif
	return 0;
}
"
BNTXcWzw,2023-10-04_stats.json,rdp_snitch,JSON,Wednesday 4th of October 2023 07:18:10 PM CDT,"{
  ""ip"": {
    ""192.248.181.147"": 477,
    ""95.179.165.3"": 633,
    ""45.77.37.159"": 342,
    ""149.28.143.164"": 264,
    ""136.244.87.70"": 438,
    ""139.180.214.187"": 318,
    ""108.61.179.209"": 447,
    ""104.238.167.248"": 690,
    ""139.180.140.204"": 309,
    ""95.179.162.127"": 450,
    ""140.82.33.15"": 474,
    ""45.76.91.196"": 471,
    ""45.76.88.206"": 462,
    ""45.32.107.109"": 384,
    ""118.32.156.55"": 6,
    ""45.77.174.118"": 261,
    ""106.246.227.18"": 6,
    ""80.240.17.178"": 453,
    ""179.43.152.58"": 6,
    ""207.148.117.90"": 336,
    ""62.122.184.166"": 12,
    ""45.77.175.130"": 261,
    ""139.180.222.203"": 321,
    ""45.77.240.152"": 327,
    ""45.76.182.38"": 336,
    ""45.32.122.208"": 261,
    ""62.122.184.168"": 12,
    ""128.1.248.42"": 12,
    ""62.204.41.137"": 12,
    ""87.251.75.145"": 9,
    ""45.227.254.49"": 6,
    ""205.210.31.250"": 9,
    ""157.245.4.89"": 24,
    ""172.233.198.57"": 9,
    ""87.251.75.64"": 6,
    ""45.143.201.62"": 15,
    ""185.170.144.3"": 3,
    ""87.251.75.120"": 3,
    ""185.190.24.101"": 3,
    ""38.181.35.81"": 3,
    ""167.248.133.35"": 3,
    ""45.227.254.8"": 6,
    ""58.218.204.183"": 9,
    ""103.56.163.232"": 108,
    ""38.181.34.212"": 9,
    ""213.226.123.100"": 3,
    ""205.210.31.48"": 9,
    ""106.116.169.71"": 3,
    ""68.183.85.79"": 3,
    ""45.227.254.54"": 6,
    ""144.202.76.214"": 273,
    ""149.28.205.197"": 210,
    ""155.138.239.107"": 144,
    ""216.128.131.244"": 204,
    ""155.138.225.132"": 141,
    ""111.61.253.55"": 3,
    ""165.154.138.33"": 3,
    ""149.28.247.226"": 135,
    ""45.140.17.16"": 3,
    ""45.76.62.108"": 141,
    ""108.61.193.197"": 138,
    ""198.235.24.136"": 9,
    ""62.122.184.165"": 6,
    ""152.89.198.133"": 6,
    ""45.227.254.55"": 6,
    ""194.165.16.111"": 6,
    ""43.155.108.244"": 150,
    ""193.142.147.9"": 9,
    ""62.204.41.145"": 6,
    ""198.235.24.244"": 9,
    ""193.142.146.17"": 9,
    ""150.129.105.63"": 15,
    ""157.97.121.163"": 3
  },
  ""asn"": {
    ""AS20473"": 10101,
    ""AS4766"": 6,
    ""AS3786"": 6,
    ""AS51852"": 6,
    ""AS57523"": 36,
    ""AS21859"": 12,
    ""AS59425"": 18,
    ""AS208091"": 18,
    ""AS267784"": 24,
    ""AS396982"": 36,
    ""AS14061"": 27,
    ""AS63949"": 9,
    ""AS210950"": 15,
    ""AS197414"": 3,
    ""AS211632"": 3,
    ""AS140227"": 12,
    ""AS398722"": 3,
    ""AS4134"": 12,
    ""AS135905"": 108,
    ""AS49943"": 3,
    ""AS24547"": 3,
    ""AS135377"": 3,
    ""AS198953"": 3,
    ""AS48721"": 6,
    ""AS132203"": 150,
    ""AS208046"": 18,
    ""AS45916"": 15,
    ""AS396356"": 3
  },
  ""isp"": {
    ""The Constant Company, LLC"": 2988,
    ""The Constant Company"": 3936,
    ""Choopa"": 3177,
    ""Korea Telecom"": 6,
    ""LG DACOM Corporation"": 6,
    ""Private Layer INC"": 6,
    ""Chang Way Technologies Co. Limited"": 36,
    ""Zenlayer Inc"": 12,
    ""Horizon LLC"": 18,
    ""Xhost Internet Solutions LP"": 21,
    ""Flyservers S.A."": 30,
    ""Google LLC"": 36,
    ""DigitalOcean, LLC"": 27,
    ""Akamai Technologies, Inc."": 9,
    ""TOV E-RISHENNYA"": 15,
    ""Internet Solutions & Innovations LTD."": 3,
    ""Hong Kong Communications International Co., Limited"": 12,
    ""Censys, Inc."": 3,
    ""Chinanet"": 12,
    ""INETSOFT"": 108,
    ""IT Resheniya LLC"": 3,
    ""China Mobile communications corporation"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Proton66 OOO"": 3,
    ""Shenzhen Tencent Computer Systems Company Limited"": 150,
    ""ColocationX Ltd."": 18,
    ""Gtpl Bluebell Network Pvt Ltd"": 15,
    ""Consumer-Network"": 3
  },
  ""org"": {
    ""Vultr Holdings LLC Frankfurt"": 2013,
    ""Vultr Holdings, LLC"": 6804,
    ""SGP Vultr"": 975,
    ""Unknown"": 318,
    ""Boranet"": 6,
    ""Private Layer Inc"": 6,
    ""Chang Way Technologies Co. Limited"": 30,
    ""ZENLA-1"": 12,
    ""Horizon LLC"": 18,
    ""Xhost Internet Solutions"": 18,
    ""UAB Host Baltic"": 24,
    ""Palo Alto Networks, Inc"": 36,
    ""DigitalOcean, LLC"": 27,
    ""Akamai Technologies, Inc."": 9,
    ""TOV VAIZ PARTNER"": 15,
    ""Xhostis"": 3,
    ""Tribeka Web Advisors S.A"": 3,
    ""HONG KONG COMMUNICATIONS INTERNATIONAL CO., LIMITED"": 12,
    ""Censys, Inc."": 3,
    ""Chinanet JS"": 9,
    ""iNET software one member company limited"": 108,
    ""IT Resheniya LLC"": 3,
    ""Chinanet HE"": 3,
    ""China Mobile"": 3,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Proton66 LLC"": 3,
    ""Starcrecium Limited"": 6,
    ""Flyservers S.A"": 6,
    ""Tencent Cloud Computing"": 150,
    ""x33 Networks IBC"": 9,
    ""ColocationX Ltd"": 9,
    ""Gtpl Broadband Pvt. Ltd."": 15
  },
  ""regionName"": {
    ""Hesse"": 4998,
    ""South West"": 3459,
    ""Seoul"": 12,
    ""Zurich"": 6,
    ""Moscow"": 57,
    ""Central Singapore"": 261,
    ""California"": 258,
    ""England"": 18,
    ""Vilnius"": 24,
    ""New Jersey"": 27,
    ""Virginia"": 9,
    ""Kyiv City"": 15,
    ""North Holland"": 12,
    ""Mariehamns stad"": 3,
    ""Eastern"": 12,
    ""Michigan"": 3,
    ""Jiangsu"": 9,
    ""Ho Chi Minh"": 108,
    ""St.-Petersburg"": 3,
    ""Hebei"": 6,
    ""Karnataka"": 3,
    ""Texas"": 612,
    ""Georgia"": 564,
    ""Kaunas"": 6,
    ""Central and Western District"": 150,
    ""English River"": 9,
    ""Gujarat"": 15
  },
  ""country"": {
    ""Germany"": 4998,
    ""Singapore"": 3720,
    ""South Korea"": 12,
    ""Switzerland"": 6,
    ""Russia"": 60,
    ""United States"": 1473,
    ""United Kingdom"": 18,
    ""Lithuania"": 30,
    ""Ukraine"": 15,
    ""Netherlands"": 12,
    ""Aland Islands"": 3,
    ""Hong Kong"": 162,
    ""China"": 15,
    ""Vietnam"": 108,
    ""India"": 18,
    ""Seychelles"": 9
  },
  ""account"": {
    ""142.93.8.59"": 10209,
    ""Test"": 42,
    ""Administr"": 48,
    ""Domain"": 72,
    ""1i5dhsm3"": 12,
    ""ZTXXSzLSj"": 3,
    ""twZSeV"": 3,
    ""bgAJCT"": 3,
    ""hello"": 222,
    ""(empty)"": 12,
    ""TFHWQMFH"": 3,
    ""XIjxMHxie"": 3,
    ""ECihWc"": 3,
    ""owXHLB"": 3,
    ""Administrator"": 3,
    ""fOliVCgYO"": 3,
    ""OOIEJC"": 3,
    ""rYvfPq"": 3,
    ""RkZxulwmV"": 3,
    ""MYDgzF"": 3,
    ""cSfbLL"": 3
  },
  ""keyboard"": {
    ""Unknown"": 10659
  },
  ""client_build"": {
    ""Unknown"": 10659
  },
  ""client_name"": {
    ""Unknown"": 10659
  },
  ""ip_type"": {
    ""hosting"": 9141,
    ""hosting & proxy"": 1203,
    ""Unknown"": 303,
    ""mobile"": 3,
    ""proxy"": 6,
    ""mobile & proxy"": 3
  }
}"
1WGHcPP4,2023-10-04_stats.json,rdp_snitch,JSON,Wednesday 4th of October 2023 07:16:16 PM CDT,"{
  ""ip"": {
    ""192.248.181.147"": 318,
    ""95.179.165.3"": 422,
    ""45.77.37.159"": 228,
    ""149.28.143.164"": 176,
    ""136.244.87.70"": 292,
    ""139.180.214.187"": 212,
    ""108.61.179.209"": 298,
    ""104.238.167.248"": 460,
    ""139.180.140.204"": 206,
    ""95.179.162.127"": 300,
    ""140.82.33.15"": 316,
    ""45.76.91.196"": 314,
    ""45.76.88.206"": 308,
    ""45.32.107.109"": 256,
    ""118.32.156.55"": 4,
    ""45.77.174.118"": 174,
    ""106.246.227.18"": 4,
    ""80.240.17.178"": 302,
    ""179.43.152.58"": 4,
    ""207.148.117.90"": 224,
    ""62.122.184.166"": 8,
    ""45.77.175.130"": 174,
    ""139.180.222.203"": 214,
    ""45.77.240.152"": 218,
    ""45.76.182.38"": 224,
    ""45.32.122.208"": 174,
    ""62.122.184.168"": 8,
    ""128.1.248.42"": 8,
    ""62.204.41.137"": 8,
    ""87.251.75.145"": 6,
    ""45.227.254.49"": 4,
    ""205.210.31.250"": 6,
    ""157.245.4.89"": 16,
    ""172.233.198.57"": 6,
    ""87.251.75.64"": 4,
    ""45.143.201.62"": 10,
    ""185.170.144.3"": 2,
    ""87.251.75.120"": 2,
    ""185.190.24.101"": 2,
    ""38.181.35.81"": 2,
    ""167.248.133.35"": 2,
    ""45.227.254.8"": 4,
    ""58.218.204.183"": 6,
    ""103.56.163.232"": 72,
    ""38.181.34.212"": 6,
    ""213.226.123.100"": 2,
    ""205.210.31.48"": 6,
    ""106.116.169.71"": 2,
    ""68.183.85.79"": 2,
    ""45.227.254.54"": 4,
    ""144.202.76.214"": 182,
    ""149.28.205.197"": 140,
    ""155.138.239.107"": 96,
    ""216.128.131.244"": 136,
    ""155.138.225.132"": 94,
    ""111.61.253.55"": 2,
    ""165.154.138.33"": 2,
    ""149.28.247.226"": 90,
    ""45.140.17.16"": 2,
    ""45.76.62.108"": 94,
    ""108.61.193.197"": 92,
    ""198.235.24.136"": 6,
    ""62.122.184.165"": 4,
    ""152.89.198.133"": 4,
    ""45.227.254.55"": 4,
    ""194.165.16.111"": 4,
    ""43.155.108.244"": 100,
    ""193.142.147.9"": 6,
    ""62.204.41.145"": 4,
    ""198.235.24.244"": 6,
    ""193.142.146.17"": 6,
    ""150.129.105.63"": 10,
    ""157.97.121.163"": 2
  },
  ""asn"": {
    ""AS20473"": 6734,
    ""AS4766"": 4,
    ""AS3786"": 4,
    ""AS51852"": 4,
    ""AS57523"": 24,
    ""AS21859"": 8,
    ""AS59425"": 12,
    ""AS208091"": 12,
    ""AS267784"": 16,
    ""AS396982"": 24,
    ""AS14061"": 18,
    ""AS63949"": 6,
    ""AS210950"": 10,
    ""AS197414"": 2,
    ""AS211632"": 2,
    ""AS140227"": 8,
    ""AS398722"": 2,
    ""AS4134"": 8,
    ""AS135905"": 72,
    ""AS49943"": 2,
    ""AS24547"": 2,
    ""AS135377"": 2,
    ""AS198953"": 2,
    ""AS48721"": 4,
    ""AS132203"": 100,
    ""AS208046"": 12,
    ""AS45916"": 10,
    ""AS396356"": 2
  },
  ""isp"": {
    ""The Constant Company, LLC"": 1992,
    ""The Constant Company"": 2624,
    ""Choopa"": 2118,
    ""Korea Telecom"": 4,
    ""LG DACOM Corporation"": 4,
    ""Private Layer INC"": 4,
    ""Chang Way Technologies Co. Limited"": 24,
    ""Zenlayer Inc"": 8,
    ""Horizon LLC"": 12,
    ""Xhost Internet Solutions LP"": 14,
    ""Flyservers S.A."": 20,
    ""Google LLC"": 24,
    ""DigitalOcean, LLC"": 18,
    ""Akamai Technologies, Inc."": 6,
    ""TOV E-RISHENNYA"": 10,
    ""Internet Solutions & Innovations LTD."": 2,
    ""Hong Kong Communications International Co., Limited"": 8,
    ""Censys, Inc."": 2,
    ""Chinanet"": 8,
    ""INETSOFT"": 72,
    ""IT Resheniya LLC"": 2,
    ""China Mobile communications corporation"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Proton66 OOO"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 100,
    ""ColocationX Ltd."": 12,
    ""Gtpl Bluebell Network Pvt Ltd"": 10,
    ""Consumer-Network"": 2
  },
  ""org"": {
    ""Vultr Holdings LLC Frankfurt"": 1342,
    ""Vultr Holdings, LLC"": 4536,
    ""SGP Vultr"": 650,
    ""Unknown"": 212,
    ""Boranet"": 4,
    ""Private Layer Inc"": 4,
    ""Chang Way Technologies Co. Limited"": 20,
    ""ZENLA-1"": 8,
    ""Horizon LLC"": 12,
    ""Xhost Internet Solutions"": 12,
    ""UAB Host Baltic"": 16,
    ""Palo Alto Networks, Inc"": 24,
    ""DigitalOcean, LLC"": 18,
    ""Akamai Technologies, Inc."": 6,
    ""TOV VAIZ PARTNER"": 10,
    ""Xhostis"": 2,
    ""Tribeka Web Advisors S.A"": 2,
    ""HONG KONG COMMUNICATIONS INTERNATIONAL CO., LIMITED"": 8,
    ""Censys, Inc."": 2,
    ""Chinanet JS"": 6,
    ""iNET software one member company limited"": 72,
    ""IT Resheniya LLC"": 2,
    ""Chinanet HE"": 2,
    ""China Mobile"": 2,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Proton66 LLC"": 2,
    ""Starcrecium Limited"": 4,
    ""Flyservers S.A"": 4,
    ""Tencent Cloud Computing"": 100,
    ""x33 Networks IBC"": 6,
    ""ColocationX Ltd"": 6,
    ""Gtpl Broadband Pvt. Ltd."": 10
  },
  ""regionName"": {
    ""Hesse"": 3332,
    ""South West"": 2306,
    ""Seoul"": 8,
    ""Zurich"": 4,
    ""Moscow"": 38,
    ""Central Singapore"": 174,
    ""California"": 172,
    ""England"": 12,
    ""Vilnius"": 16,
    ""New Jersey"": 18,
    ""Virginia"": 6,
    ""Kyiv City"": 10,
    ""North Holland"": 8,
    ""Mariehamns stad"": 2,
    ""Eastern"": 8,
    ""Michigan"": 2,
    ""Jiangsu"": 6,
    ""Ho Chi Minh"": 72,
    ""St.-Petersburg"": 2,
    ""Hebei"": 4,
    ""Karnataka"": 2,
    ""Texas"": 408,
    ""Georgia"": 376,
    ""Kaunas"": 4,
    ""Central and Western District"": 100,
    ""English River"": 6,
    ""Gujarat"": 10
  },
  ""country"": {
    ""Germany"": 3332,
    ""Singapore"": 2480,
    ""South Korea"": 8,
    ""Switzerland"": 4,
    ""Russia"": 40,
    ""United States"": 982,
    ""United Kingdom"": 12,
    ""Lithuania"": 20,
    ""Ukraine"": 10,
    ""Netherlands"": 8,
    ""Aland Islands"": 2,
    ""Hong Kong"": 108,
    ""China"": 10,
    ""Vietnam"": 72,
    ""India"": 12,
    ""Seychelles"": 6
  },
  ""account"": {
    ""142.93.8.59"": 6806,
    ""Test"": 28,
    ""Administr"": 32,
    ""Domain"": 48,
    ""1i5dhsm3"": 8,
    ""ZTXXSzLSj"": 2,
    ""twZSeV"": 2,
    ""bgAJCT"": 2,
    ""hello"": 148,
    ""(empty)"": 8,
    ""TFHWQMFH"": 2,
    ""XIjxMHxie"": 2,
    ""ECihWc"": 2,
    ""owXHLB"": 2,
    ""Administrator"": 2,
    ""fOliVCgYO"": 2,
    ""OOIEJC"": 2,
    ""rYvfPq"": 2,
    ""RkZxulwmV"": 2,
    ""MYDgzF"": 2,
    ""cSfbLL"": 2
  },
  ""keyboard"": {
    ""Unknown"": 7106
  },
  ""client_build"": {
    ""Unknown"": 7106
  },
  ""client_name"": {
    ""Unknown"": 7106
  },
  ""ip_type"": {
    ""hosting"": 6094,
    ""hosting & proxy"": 802,
    ""Unknown"": 202,
    ""mobile"": 2,
    ""proxy"": 4,
    ""mobile & proxy"": 2
  }
}"
8LEs6fbV,2023-10-04_stats.json,rdp_snitch,JSON,Wednesday 4th of October 2023 07:15:09 PM CDT,"{
  ""ip"": {
    ""192.248.181.147"": 159,
    ""95.179.165.3"": 211,
    ""45.77.37.159"": 114,
    ""149.28.143.164"": 88,
    ""136.244.87.70"": 146,
    ""139.180.214.187"": 106,
    ""108.61.179.209"": 149,
    ""104.238.167.248"": 230,
    ""139.180.140.204"": 103,
    ""95.179.162.127"": 150,
    ""140.82.33.15"": 158,
    ""45.76.91.196"": 157,
    ""45.76.88.206"": 154,
    ""45.32.107.109"": 128,
    ""118.32.156.55"": 2,
    ""45.77.174.118"": 87,
    ""106.246.227.18"": 2,
    ""80.240.17.178"": 151,
    ""179.43.152.58"": 2,
    ""207.148.117.90"": 112,
    ""62.122.184.166"": 4,
    ""45.77.175.130"": 87,
    ""139.180.222.203"": 107,
    ""45.77.240.152"": 109,
    ""45.76.182.38"": 112,
    ""45.32.122.208"": 87,
    ""62.122.184.168"": 4,
    ""128.1.248.42"": 4,
    ""62.204.41.137"": 4,
    ""87.251.75.145"": 3,
    ""45.227.254.49"": 2,
    ""205.210.31.250"": 3,
    ""157.245.4.89"": 8,
    ""172.233.198.57"": 3,
    ""87.251.75.64"": 2,
    ""45.143.201.62"": 5,
    ""185.170.144.3"": 1,
    ""87.251.75.120"": 1,
    ""185.190.24.101"": 1,
    ""38.181.35.81"": 1,
    ""167.248.133.35"": 1,
    ""45.227.254.8"": 2,
    ""58.218.204.183"": 3,
    ""103.56.163.232"": 36,
    ""38.181.34.212"": 3,
    ""213.226.123.100"": 1,
    ""205.210.31.48"": 3,
    ""106.116.169.71"": 1,
    ""68.183.85.79"": 1,
    ""45.227.254.54"": 2,
    ""144.202.76.214"": 91,
    ""149.28.205.197"": 70,
    ""155.138.239.107"": 48,
    ""216.128.131.244"": 68,
    ""155.138.225.132"": 47,
    ""111.61.253.55"": 1,
    ""165.154.138.33"": 1,
    ""149.28.247.226"": 45,
    ""45.140.17.16"": 1,
    ""45.76.62.108"": 47,
    ""108.61.193.197"": 46,
    ""198.235.24.136"": 3,
    ""62.122.184.165"": 2,
    ""152.89.198.133"": 2,
    ""45.227.254.55"": 2,
    ""194.165.16.111"": 2,
    ""43.155.108.244"": 50,
    ""193.142.147.9"": 3,
    ""62.204.41.145"": 2,
    ""198.235.24.244"": 3,
    ""193.142.146.17"": 3,
    ""150.129.105.63"": 5,
    ""157.97.121.163"": 1
  },
  ""asn"": {
    ""AS20473"": 3367,
    ""AS4766"": 2,
    ""AS3786"": 2,
    ""AS51852"": 2,
    ""AS57523"": 12,
    ""AS21859"": 4,
    ""AS59425"": 6,
    ""AS208091"": 6,
    ""AS267784"": 8,
    ""AS396982"": 12,
    ""AS14061"": 9,
    ""AS63949"": 3,
    ""AS210950"": 5,
    ""AS197414"": 1,
    ""AS211632"": 1,
    ""AS140227"": 4,
    ""AS398722"": 1,
    ""AS4134"": 4,
    ""AS135905"": 36,
    ""AS49943"": 1,
    ""AS24547"": 1,
    ""AS135377"": 1,
    ""AS198953"": 1,
    ""AS48721"": 2,
    ""AS132203"": 50,
    ""AS208046"": 6,
    ""AS45916"": 5,
    ""AS396356"": 1
  },
  ""isp"": {
    ""The Constant Company, LLC"": 996,
    ""The Constant Company"": 1312,
    ""Choopa"": 1059,
    ""Korea Telecom"": 2,
    ""LG DACOM Corporation"": 2,
    ""Private Layer INC"": 2,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Zenlayer Inc"": 4,
    ""Horizon LLC"": 6,
    ""Xhost Internet Solutions LP"": 7,
    ""Flyservers S.A."": 10,
    ""Google LLC"": 12,
    ""DigitalOcean, LLC"": 9,
    ""Akamai Technologies, Inc."": 3,
    ""TOV E-RISHENNYA"": 5,
    ""Internet Solutions & Innovations LTD."": 1,
    ""Hong Kong Communications International Co., Limited"": 4,
    ""Censys, Inc."": 1,
    ""Chinanet"": 4,
    ""INETSOFT"": 36,
    ""IT Resheniya LLC"": 1,
    ""China Mobile communications corporation"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Proton66 OOO"": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 50,
    ""ColocationX Ltd."": 6,
    ""Gtpl Bluebell Network Pvt Ltd"": 5,
    ""Consumer-Network"": 1
  },
  ""org"": {
    ""Vultr Holdings LLC Frankfurt"": 671,
    ""Vultr Holdings, LLC"": 2268,
    ""SGP Vultr"": 325,
    ""Unknown"": 106,
    ""Boranet"": 2,
    ""Private Layer Inc"": 2,
    ""Chang Way Technologies Co. Limited"": 10,
    ""ZENLA-1"": 4,
    ""Horizon LLC"": 6,
    ""Xhost Internet Solutions"": 6,
    ""UAB Host Baltic"": 8,
    ""Palo Alto Networks, Inc"": 12,
    ""DigitalOcean, LLC"": 9,
    ""Akamai Technologies, Inc."": 3,
    ""TOV VAIZ PARTNER"": 5,
    ""Xhostis"": 1,
    ""Tribeka Web Advisors S.A"": 1,
    ""HONG KONG COMMUNICATIONS INTERNATIONAL CO., LIMITED"": 4,
    ""Censys, Inc."": 1,
    ""Chinanet JS"": 3,
    ""iNET software one member company limited"": 36,
    ""IT Resheniya LLC"": 1,
    ""Chinanet HE"": 1,
    ""China Mobile"": 1,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Proton66 LLC"": 1,
    ""Starcrecium Limited"": 2,
    ""Flyservers S.A"": 2,
    ""Tencent Cloud Computing"": 50,
    ""x33 Networks IBC"": 3,
    ""ColocationX Ltd"": 3,
    ""Gtpl Broadband Pvt. Ltd."": 5
  },
  ""regionName"": {
    ""Hesse"": 1666,
    ""South West"": 1153,
    ""Seoul"": 4,
    ""Zurich"": 2,
    ""Moscow"": 19,
    ""Central Singapore"": 87,
    ""California"": 86,
    ""England"": 6,
    ""Vilnius"": 8,
    ""New Jersey"": 9,
    ""Virginia"": 3,
    ""Kyiv City"": 5,
    ""North Holland"": 4,
    ""Mariehamns stad"": 1,
    ""Eastern"": 4,
    ""Michigan"": 1,
    ""Jiangsu"": 3,
    ""Ho Chi Minh"": 36,
    ""St.-Petersburg"": 1,
    ""Hebei"": 2,
    ""Karnataka"": 1,
    ""Texas"": 204,
    ""Georgia"": 188,
    ""Kaunas"": 2,
    ""Central and Western District"": 50,
    ""English River"": 3,
    ""Gujarat"": 5
  },
  ""country"": {
    ""Germany"": 1666,
    ""Singapore"": 1240,
    ""South Korea"": 4,
    ""Switzerland"": 2,
    ""Russia"": 20,
    ""United States"": 491,
    ""United Kingdom"": 6,
    ""Lithuania"": 10,
    ""Ukraine"": 5,
    ""Netherlands"": 4,
    ""Aland Islands"": 1,
    ""Hong Kong"": 54,
    ""China"": 5,
    ""Vietnam"": 36,
    ""India"": 6,
    ""Seychelles"": 3
  },
  ""account"": {
    ""142.93.8.59"": 3403,
    ""Test"": 14,
    ""Administr"": 16,
    ""Domain"": 24,
    ""1i5dhsm3"": 4,
    ""ZTXXSzLSj"": 1,
    ""twZSeV"": 1,
    ""bgAJCT"": 1,
    ""hello"": 74,
    ""(empty)"": 4,
    ""TFHWQMFH"": 1,
    ""XIjxMHxie"": 1,
    ""ECihWc"": 1,
    ""owXHLB"": 1,
    ""Administrator"": 1,
    ""fOliVCgYO"": 1,
    ""OOIEJC"": 1,
    ""rYvfPq"": 1,
    ""RkZxulwmV"": 1,
    ""MYDgzF"": 1,
    ""cSfbLL"": 1
  },
  ""keyboard"": {
    ""Unknown"": 3553
  },
  ""client_build"": {
    ""Unknown"": 3553
  },
  ""client_name"": {
    ""Unknown"": 3553
  },
  ""ip_type"": {
    ""hosting"": 3047,
    ""hosting & proxy"": 401,
    ""Unknown"": 101,
    ""mobile"": 1,
    ""proxy"": 2,
    ""mobile & proxy"": 1
  }
}"
xUCGqvfh,Launcher App Without Comments,0xB0BAFE77,Autohotkey,Wednesday 4th of October 2023 06:46:21 PM CDT,"class Launcher {
    #Requires AutoHotkey v2.0.10+                                       ; ALWAYS have a version requirement
    
    static hotkey := 'F1'                                                       ; Set this to the key name you want to use to hide/show the launcher
                                                                                ; www.autohotkey.com/docs/v2/KeyList.htm
    
    static programs :=                                                          ; A map to contain program names and their associated paths
        Map('Chrome'        ,'C:\Program Files\Google\Chrome\Application\chrome.exe'
           ,'Calculator'    ,'C:\Windows\System32\calc.exe'                     ; Multiple calculators added to demonstrate max row functionality
           ,'Calculator1'   ,'C:\Windows\System32\calc.exe'
           ,'Calculator2'   ,'C:\Windows\System32\calc.exe'
           ,'Calculator3'   ,'C:\Windows\System32\calc.exe'
           ,'Calculator4'   ,'C:\Windows\System32\calc.exe'
           ,'Calculator5'   ,'C:\Windows\System32\calc.exe'
           ,'Calculator6'   ,'C:\Windows\System32\calc.exe'
           ,'Calculator7'   ,'C:\Windows\System32\calc.exe'
           ,'Calculator8'   ,'C:\Windows\System32\calc.exe'
           ,'Calculator9'   ,'C:\Windows\System32\calc.exe'
           ,'Steam'         ,'C:\Program Files (x86)\Steam\Steam.exe'
           ,'VS Code'       ,'C:\Program Files\Microsoft VS Code\Code.exe'
           ,'FireFox'       ,'C:\Program Files\Mozilla Firefox\firefox.exe'
           ,'Rust'          ,'C:\Program Files (x86)\Steam\steamapps\common\Rust\Rust.exe'
           ,'WinAmp'        ,'C:\Program Files (x86)\Winamp\winamp.exe')
    ;===================================================================
    
    static __New() {
        this.make_gui()                                                         ; First thing to do is create the GUI
        ; Creating hotkeys
        HotIf()                                                                 ; Ensure no prior HotIf directive exists
        Hotkey('*' this.hotkey, (*) => Launcher())                              ; Create the show/hide hotkey
        HotIf((*) => WinActive('ahk_id ' this.gui.Hwnd))                        ; Create a directive that next hotkey only works when the gui is active
        Hotkey('*Escape', (*) => this.Hide())                                   ; Escape always hides the GUI
    }
    
    static Call() {
        id := 'ahk_id ' this.gui.hwnd
        if WinActive(id)
            this.Hide()
        else this.Show()
    }
    
    static make_gui() {
        row_max         := 10                                                   ; Max amount of rows per column
        ,margin         := 10                                                   ; Used as both a margin and to space things out
        ,spacer         := 3                                                    ; Finer padding used between the picture and text
        ,pic_w          := 48                                                   ; Width of the picture
        ,pic_h          := 48                                                   ; Height of the picture
        ,txt_w          := 150                                                  ; Width of the picture's text lable
        ,txt_h          := pic_h                                                ; Set height of text label to be same as the picture
        ,black          := 0x0                                                  ; Hex black. Same as 0x000000
        ,vert_center    := 0x200                                                ; Style code to center text vertically
        ,WM_MOUSEMOVE   := 0x201                                                ; Window message number for left click down
        ,caption        := 0xC00000                                             ; Window style for caption (title) bar
        
        ; Gui creation
        goo := Gui('+Border -' caption)                                         ; Create a GUI object to work with (Everything is an object in AHKv2!)
        
        ; General GUI settings
        goo.BackColor := black                                                  ; Make background black
        goo.SetFont('s20 cWhite')                                               ; Default font to 20 pt and white color 
        goo.MarginX := goo.MarginY := margin                                    ; Set the GUI's x and y margin properties
        
        ; Using the program map property to add pictures and lables for each app
        x := y := margin                                                        ; Start x and y margin distance from the GUI edges
        ,row_num := 1                                                           ; Track current row number starting at 1
        for name, path in this.programs {                                       ; Loop through each program
            ; Add picture control
            con := goo.AddPicture('x' x ' y' y ' w' pic_w ' h' pic_h, path)     ; Add picture using the x and y values
            launch_event := ObjBindMethod(this, 'launch', path)                 ; Creates a BoundFunc. This can be used as the event you want to happen
            con.OnEvent('Click', launch_event)                                  ; Add an event to the picture control and assign the launch_event BoundFunc
            ; Add text control label
            opt := 'x+' spacer ' yp w' txt_w ' h' txt_h                         ; If options are getting lengthy, make a variable for it.
                . ' Border Center +' vert_center                                ; Spacing it out over multiple lines helps with readability
            con := goo.AddText(opt, name)                                       ; Using the options just made, add a word label next to picture
            con.OnEvent('Click', launch_event)                                  ; Assign launch event to text control
            ; Row/column positioning update
            row_num++                                                           ;  Increment row number
            if (row_num > row_max)                                              ;  If the row goes beyond max rows
                row_num := 1                                                    ;   Reset row number
                ,x += pic_w + spacer + txt_w + margin                           ;   Increase x to create a new column
                ,y := margin                                                    ;   Reset y value to start next row at top
            else y += margin + pic_h                                            ;  Else move row down
        }
        
        OnMessage(WM_MOUSEMOVE, (wParam, lParam, msg, hwnd) => this.WM_MOUSEMOVE(wParam, lParam, msg, hwnd))
        this.gui := goo                                                         ; Save gui object to class for later use
    }
    
    static WM_MOUSEMOVE(wParam, lParam, msg, hwnd) {
        WM_NCLBUTTONDOWN := 0x00A1                                              ; Windows message code for an NCL left click down event
        if (wParam = 1)                                                         ; If left mouse is down during mouse movement
            PostMessage(WM_NCLBUTTONDOWN, 2,,, 'A')                             ;  Send a message that the left mouse button is down and on the title bar (non-client area)
                                                                                ;  This emulates clicking and dragging the window by its title bar even though it lacks one
    }
    
    static launch(path, *) {
        Run(path)                                                               ; Run the path provided
        this.Hide()                                                             ; Then hide the GUI
    }
    
    static show(*) => this.gui.show()
    static hide(*) => this.gui.hide()
}
"
