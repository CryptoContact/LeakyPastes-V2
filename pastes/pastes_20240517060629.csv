id,title,username,language,date,content
1mMTmdxA,MC Plus installer,Revector,Lua,Friday 17th of May 2024 12:50:29 AM CDT,"-- pastebin get 1mMTmdxA mc.lua


--WebWyse 1.0 installer by Compys S&N Systems (2022). 
--Configuration zone.

--Name of the product being installed.
local PRODUCTNAME = 'Midday Commander Plus'

--Strings for small background window. nil for disabled. Max 4 lines.
local BACKWINTEXT = {'Midday Commander Plus', '', 'Not Copyright (C) 2015-2016 Zer0Galaxy, Neo, Totoro', '            2020-2022 Compys S&N Systems'}

--The text that will be shown in the console after a successful installation. nil for disabled.
local EXITNOTE = ""Type \""mc\"" to run it""

--License for product. nil to use LICENSEURL or disabled.
local LICENSE = [[For more information go to:
https://github.com/Bs0Dd/OpenCompSoft/blob/master/MiddayCommanderPlus/README.md

------------------------
                 
MIT License

Copyright (c) 2018 

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.]]

--URL for license to download from network. nil for disabled.
local LICENSEURL = nil

--Default installation path. nil for empty.
local INSTALLPATH = '/usr/bin/'

--Minimum space (in bytes) required for installation. nil for disable checking.
local MINSPACE = 23552

--Minimal requirements for installation. nil for disable checking.
local MINREQ = {
    CPU = 1, --Minimal CPU tier required for installation. nil for disable checking.
    VIDEO = 1, --Minimal videosystem tier required for installation. nil for disable checking
    RAM = 262144, --Minimum RAM size required for installation. nil for disable checking.
    COMPONENTS = nil --Components required for installation. nil for none.
}

--Colors for Tier 3 Videosystem.
local T3BACKCOL = 0xFFFFFF -- Color for the background.
local T3NORMALCOL = {0xFFFFFF, 0x006DFF} --Text and background colors for the windows.
local T3BUTTCOL = {0xFFFFFF, 0x5A5A5A} --Text and background colors for the buttons.
local T3FORMCOL = {0x000000, 0xE1E1E1} --Text and background colors for the forms (license view, path input).
local T3FSELCOL = {0xFFFFFF, 0x5A5A5A} --Text and background colors for selected item in the form.
local T3ERRCOL = {0xFFFFFF, 0xFF0000} --Text and background colors for the error windows.
local T3REQOKCOL = {0x00FF00, 0x006DFF} --Text and background colors for components that meets minimal requirements.
local T3REQERCOL = {0xFFFFFF, 0xFF0000} --Text and background colors for components that does not meet minimal requirements.
local T3PROGRBLK = 0xFFFFFF -- Color for the blank part of the progress bar.
local T3PROGRFIL = 0x00FF00 -- Color for the filled part of the progress bar.

--Colors for Tier 2 Videosystem.
local T2BACKCOL = 0xFFFFFF -- Color for the background.
local T2NORMALCOL = {0xFFFFFF, 0x006DFF} --Text and background colors for the windows.
local T2BUTTCOL = {0xFFFFFF, 0x3C3C3C} --Text and background colors for the buttons.
local T2FORMCOL = {0x000000, 0xE1E1E1} --Text and background colors for the forms (license view, path input).
local T2FSELCOL = {0xFFFFFF, 0x3C3C3C} --Text and background colors for selected item in the form.
local T2ERRCOL = {0xFFFFFF, 0xFF0000} --Text and background colors for the error windows.
local T2REQOKCOL = {0x00FF00, 0x006DFF} --Text and background colors for components that meets minimal requirements.
local T2REQERCOL = {0xFFFFFF, 0xFF0000} --Text and background colors for components that does not meet minimal requirements.
local T2PROGRBLK = 0xFFFFFF -- Color for the blank part of the progress bar.
local T2PROGRFIL = 0x00FF00 -- Color for the filled part of the progress bar.

--Colors for Tier 1 Videosystem. Not recommended to change.
local T1NORMALCOL = {0x000000, 0xFFFFFF} --Text and background colors for the windows.
local T1BUTTCOL = {0xFFFFFF, 0x000000} --Text and background colors for the buttons.
local T1FORMCOL = {0xFFFFFF, 0x000000} --Text and background colors for the forms (license view, path input).
local T1FSELCOL = {0x000000, 0xFFFFFF} --Text and background colors for selected item in the form.
local T1ERRCOL = {0x000000, 0xFFFFFF} --Text and background colors for the error windows.
local T1REQOKCOL = {0x000000, 0xFFFFFF} --Text and background colors for components that meets minimal requirements.
local T1REQERCOL = {0xFFFFFF, 0x000000} --Text and background colors for components that does not meet minimal requirements.
local T1PROGRBLK = 0x000000 -- Color for the blank part of the progress bar.
local T1PROGRFIL = 0xFFFFFF -- Color for the filled part of the progress bar.

--Basic files to download to your computer.
local FILES = {
    {
        url = ""https://raw.githubusercontent.com/Bs0Dd/OpenCompSoft/master/MiddayCommanderPlus/mc.lua"",
        path = ""mc.lua"",
        absolute = false
    },
    {
        url = ""https://raw.githubusercontent.com/Bs0Dd/OpenCompSoft/master/MiddayCommanderPlus/Files/english.mcl"",
        path = ""/usr/misc/english.mcl"",
        absolute = true
    },
    {
        url = ""https://raw.githubusercontent.com/Bs0Dd/OpenCompSoft/master/MiddayCommanderPlus/Files/standard.mct"",
        path = ""/usr/misc/standard.mct"",
        absolute = true
    }
}

--Additional components to download to your computer.
local ADDITIONAL = {
    {
        name = ""Install Russian language"",
        selected = true,
        size = 2822,
        files = {
                 {
                    url = ""https://raw.githubusercontent.com/Bs0Dd/OpenCompSoft/master/MiddayCommanderPlus/Files/russian.mcl"",
                    path = ""/usr/misc/russian.mcl"",
                    absolute = true
                 }
        }
    },
    {
        name = ""Install additional themes"",
        selected = true,
        size = 326,
        files = {
                 {
                    url = ""https://raw.githubusercontent.com/Bs0Dd/OpenCompSoft/master/MiddayCommanderPlus/Files/redstone.mct"",
                    path = ""/usr/misc/redstone.mct"",
                    absolute = true
                 },
                 {
                    url = ""https://raw.githubusercontent.com/Bs0Dd/OpenCompSoft/master/MiddayCommanderPlus/Files/darkness.mct"",
                    path = ""/usr/misc/darkness.mct"",
                    absolute = true
                 }
                }
    },
    {
        name = ""Install Blyadian language"",
        selected = false,
        size = 2780,
        files = {
                 {
                    url = ""https://raw.githubusercontent.com/Bs0Dd/OpenCompSoft/master/MiddayCommanderPlus/Files/blyadian.mcl"",
                    path = ""/usr/misc/blyadian.mcl"",
                    absolute = true
                 }
        }
    }
}

---------------------------------------------------------------------------------------------------------------

local a=require('component')local b=require('computer')local c=require('filesystem')local d=require('term')local e=require('event')local f=require('unicode')local g=f.len;local h=f.sub;local i=require('keyboard')local j=a.gpu;if not a.isAvailable('internet')then io.stderr:write(""ERROR: Internet card is not found\n\n"")return end;local k=a.internet;local l,m=j.maxResolution()j.setDepth(j.maxDepth())j.setResolution(l,m)local n,o=1,1;local p=1;local q,r;local s,t;local u,v,w=1,1,1;local x=INSTALLPATH or''local y,z,A,B;local C,D,E,F,G=true,true,true,true;local H,I=1,1;local J,K,L,M,N=0,0,0,0;if j.maxDepth()>1 then n,o=math.ceil((l-50)/2),math.ceil(m/2)-4 end;local O,P,Q,R,S;local T,U,V,W,X;if j.maxDepth()==8 then O=T3NORMALCOL;P=T3BUTTCOL;Q=T3FORMCOL;R=T3FSELCOL;S=T3ERRCOL;T=T3BACKCOL;U=T3REQOKCOL;V=T3REQERCOL;W=T3PROGRBLK;X=T3PROGRFIL elseif j.maxDepth()==4 then O=T2NORMALCOL;P=T2BUTTCOL;Q=T2FORMCOL;R=T2FSELCOL;S=T2ERRCOL;T=T2BACKCOL;U=T2REQOKCOL;V=T2REQERCOL;W=T2PROGRBLK;X=T2PROGRFIL else O=T1NORMALCOL;P=T1BUTTCOL;Q=T1FORMCOL;R=T1FSELCOL;S=T1ERRCOL;T=O[2]U=T1REQOKCOL;V=T1REQERCOL;W=T1PROGRBLK;X=T1PROGRFIL end;local function Y(Z)j.setForeground(Z[1])j.setBackground(Z[2])end;local function _(a0)local a1=0;for a2,a3 in ipairs(a0)do if g(a3)>a1 then a1=g(a3)end end;return a1 end;local function a4(a5)if a5:sub(-1)~=""\n""then a5=a5 ..""\n""end;return a5:gmatch(""(.-)\n"")end;local function a6(a7)local a8={""Kb"",""Mb"",""Gb""}if a7<1024 then return a7 ..""b""end;local a9=0;while a7>=1024 and a9<#a8 do a9=a9+1;a7=a7/1024 end;return math.floor(a7*10)/10 ..a8[a9]end;local function aa(ab,ac,ad,a0,ae)Y(ae)j.set(ab,ac,string.rep(' ',ad+2))for af,a3 in ipairs(a0)do if g(a3)<ad then local ag,ah=(ad-g(a3))/2;if ag%1==0 then ah=ag else ag=math.ceil(ag)ah=ag-1 end;a3=string.rep(' ',ag)..a3 ..string.rep(' ',ah)end;j.set(ab,ac+af,' '..a3 ..' ')end;if j.maxDepth()==1 then return end;j.set(ab,ac+#a0+1,string.rep(' ',ad+2))Y({T,0x000000})j.fill(ab+ad+2,ac+1,1,#a0+1,' ')j.set(ab+2,ac+#a0+2,string.rep('▄',ad+1))end;local function ai()local aj=n+50;Y({T,0x000000})j.fill(aj,o+1,1,15,' ')j.set(n+2,o+16,string.rep('▄',49))end;local function ak()Y(O)j.fill(n,o,50,16,' ')j.fill(n,o,50,16,' ')j.set(n+2,o+13,string.rep('─',46))end;local function al(am)if BACKWINTEXT and j.maxDepth()>1 then if#BACKWINTEXT>4 then while#BACKWINTEXT>4 do table.remove(BACKWINTEXT)end end;local an=_(BACKWINTEXT)local ab,ac=math.ceil((l-an-2)/2),math.ceil(m/10)-1;aa(ab,ac,an,BACKWINTEXT,O)end;if not am then ai()end end;local function ao(ap,aq)table.insert(ap,'')table.insert(ap,'')j.setBackground(T)j.fill(1,1,l,m,' ')local an=_(ap)local ab,ac=math.ceil((l-an)/2),math.ceil(m/2)al(true)aa(ab,ac,an,ap,aq)return ab,ac,an end;local function ar(ap,aq)local ab,ac,an=ao(ap,aq)Y(P)local as=math.ceil(ab+an/2-3)j.set(as,ac+#ap,""   Ok   "")while true do local at,a2,au,av=e.pull()if at==""key_down""and au==13 or at==""touch""and av==ac+#ap and au>=as and au<=as+7 then j.setBackground(T)j.fill(1,1,l,m,' ')al()ak()q[p]()return end end end;local function aw(ap)local ab,ac=ao(ap,S)Y(P)j.set(ab+3,ac+#ap,"" (Y)es  "")j.set(ab+17,ac+#ap,""  (N)o  "")while true do local at,a2,au,av=e.pull()if at==""key_down""then if au==78 or au==110 then al()ak()q[p]()return true elseif au==89 or au==121 then return false end elseif at==""touch""then if av==ac+#ap and au>=ab+3 and au<=ab+10 then return false elseif av==ac+#ap and au>=ab+17 and au<=ab+24 then al()ak()q[p]()return true end end end end;local function ax(ay)if ay then if aw({"" Are you sure you want to "",""abort the installation?""})then return end end;Y({0xFFFFFF,0x000000})d.clear()print(""WebWyse 1.0 - 2022 (c) Compys S&N Systems\n"")if not ay and EXITNOTE then print(EXITNOTE..""\n"")end;os.exit()end;local function az()j.set(n+6,o+1,""Welcome to the WebWyse 1.0 installer!"")j.set(n+7,o+3,""This installer will help to install"")j.set(n+25-g(PRODUCTNAME)/2,o+4,PRODUCTNAME)j.set(n+17,o+5,""on your computer."")j.set(n+6,o+8,""Follow WebWyse instructions to install"")j.set(n+12,o+9,""and configure the software."")j.set(n+10,o+10,""Press \""Next →\"" (→) to continue"")j.set(n+11,o+11,""or \""Cancel\"" (ALT-X) to exit."")Y(P)j.set(n+3,o+14,"" Cancel "")j.set(n+39,o+14,"" Next → "")end;local function aA()while true do local at,a2,au,av=e.pull()if at==""key_down""then if i.isAltDown()and(au==88 or au==120)then ax(true)elseif av==205 then return end elseif at==""touch""then if av==o+14 and au>=n+3 and au<=n+10 then ax(true)elseif av==o+14 and au>=n+39 and au<=n+46 then return end end end end;local function aB()j.fill(n+3,o+3,44,10,' ')for aC=0,9 do j.set(n+3,o+aC+3,s[v+aC]and h(s[v+aC],u,u+43)or'')end end;local function aD()Y(Q)s={""Loading from internet...""}aB()local aE=""Failed to get license text: ""local aF,aG=pcall(k.request,LICENSEURL)if not aF then LICENSE=aE..aG.."".""return end;if not aG then LICENSE=aE..""invalid URL-address.""return end;local aH,aI=aG.finishConnect()local aJ=b.uptime()while aH==false do aH,aI=aG.finishConnect()if b.uptime()>aJ+40 then break end end;if aH==nil then LICENSE=aE..(aI==LICENSEURL and""can't get file.""or aI..""."")return end;local aK,aL=aG.response()local aJ=b.uptime()while aK==nil do aK,aL=aG.response()if b.uptime()>aJ+40 then break end end;if aK==nil then LICENSE=aE..""timeout expired.""return elseif aK~=200 then LICENSE=aE..""received code ""..math.floor(aK).."" (""..aL.."").""return end;LICENSE=""""while true do local aM,aI=aG.read(math.huge)if aM then LICENSE=LICENSE..aM else aG:close()if aI then LICENSE=aE..aI.."".""else return end end end end;local function aN()j.set(n+9,o+1,""Do you agree with this license?"")Y(P)j.set(n+3,o+14,""  (N)o  "")j.set(n+30,o+14,"" (B)ack "")j.set(n+39,o+14,"" (Y)es  "")if not s then if not LICENSE and LICENSEURL then aD()end;s={}for aO in a4(LICENSE)do table.insert(s,aO)end;w=_(s)end;t=#s>9 and#s-9 or#s;Y(Q)aB()end;local function aP()while true do local at,a2,au,av,aQ=e.pull()if at==""key_down""then if au==78 or au==110 then ax(true)elseif au==66 or au==98 then p=p-2;return elseif au==89 or au==121 then return elseif av==200 then v=v-1<1 and 1 or v-1;aB()elseif av==208 then v=v+1>t and t or v+1;aB()elseif av==203 then u=u-1<1 and 1 or u-1;aB()elseif av==205 then u=u+1>w-43 and w-43 or u+1;aB()elseif av==199 then u=1;aB()elseif av==207 then u=w-43;aB()elseif av==201 then v=v-10<1 and 1 or v-10;aB()elseif av==209 then v=v+10>t and t or v+10;aB()end elseif at==""touch""then if av==o+14 and au>=n+3 and au<=n+10 then ax(true)elseif av==o+14 and au>=n+30 and au<=n+37 then p=p-2;return elseif av==o+14 and au>=n+39 and au<=n+46 then return end elseif at==""scroll""then v=v-aQ>t and t or v-aQ<1 and 1 or v-aQ;aB()end end end;local function aR(aS,aT,aU,aV)local ap={}if aS==nil or type(aS)=='table'and#aS==0 then ap[1]=""Required: Not defined""elseif aU==3 then local aW=""Required: ""local aX=""You have: ""for a2,aY in pairs(aS)do if#aW+#aY>49 then table.insert(ap,aW:sub(1,-2))aW=""""end;aW=aW..aY.."", ""end;table.insert(ap,aW:sub(1,-3))for a2,aY in pairs(aT)do if#aX+#aY>49 then table.insert(ap,aX:sub(1,-2))aX=""""end;aX=aX..aY.."", ""end;table.insert(ap,#aT==0 and aX..""<none>""or aX:sub(1,-3))elseif aU==2 then ap[1]=""Required: ""..a6(aS)ap[2]=""You have: ""..a6(aT)else ap[1]=""Required: Tier ""..aS;ap[2]=""You have: Tier ""..aT end;ar(ap,aV and O or S)end;local function aZ()G=true;if MINREQ.CPU and type(MINREQ.CPU)=='number'then local a_=b.getDeviceInfo()for a2,b0 in pairs(a_)do if b0.description==""CPU""or b0.description==""APU""then y=tonumber(b0.product:match('%d'))break end end;C=y>=MINREQ.CPU;if not C then G=false end end;if MINREQ.VIDEO and type(MINREQ.VIDEO)=='number'then local b1=j.maxDepth()z=b1==8 and 3 or b1==4 and 2 or 1;D=z>=MINREQ.VIDEO;if not D then G=false end end;if MINREQ.RAM and type(MINREQ.RAM)=='number'then A=b.totalMemory()E=A>=MINREQ.RAM;if not E then G=false end end;if MINREQ.COMPONENTS and type(MINREQ.COMPONENTS)=='table'then B={}for a2,b2 in pairs(MINREQ.COMPONENTS)do if a.isAvailable(b2)then table.insert(B,b2)end end;F=#B==#MINREQ.COMPONENTS;if not F then G=false end end;if G then j.set(n+12,o+1,""Your computer fully meets"")else j.set(n+11,o+1,""Your computer does not meet"")j.set(n+5,o+3,""Select the desired section for details."")end;j.set(n+12,o+2,""the minimum requirements."")j.set(n+10,o+5,""(P)rocessor   :"")j.set(n+10,o+7,""(M)emory      :"")j.set(n+10,o+9,""(V)ideosystem :"")j.set(n+10,o+11,""(С)omponents  :"")local b3,aC={C,E,D,F},5;for a2,b0 in pairs(b3)do Y(b0 and U or V)j.set(n+26,o+aC,b0 and""Meets""or""Does not meet"")aC=aC+2 end;Y(P)j.set(n+3,o+14,"" Cancel "")j.set(n+30,o+14,"" ← Back "")j.set(n+39,o+14,"" Next → "")end;local function b4()while true do local at,a2,au,av,aQ=e.pull()if at==""key_down""then if i.isAltDown()and(au==88 or au==120)then ax(true)elseif av==203 then p=p-2;return elseif av==205 or au==13 then if G then return elseif not aw({""Are you sure you want to"",""install this software?"","""",""It may not work correctly!""})then al()ak()return end elseif au==112 or au==80 then aR(MINREQ.CPU,y,1,C)elseif au==109 or au==77 then aR(MINREQ.RAM,A,2,E)elseif au==118 or au==86 then aR(MINREQ.VIDEO,z,1,D)elseif au==99 or au==67 then aR(MINREQ.COMPONENTS,B,3,F)end elseif at==""touch""then if av==o+14 and au>=n+3 and au<=n+10 then ax(true)elseif av==o+14 and au>=n+30 and au<=n+37 then p=p-2;return elseif av==o+14 and au>=n+39 and au<=n+46 then if G then return elseif not aw({""Are you sure you want to"",""install this software?"","""",""It may not work correctly!""})then al()ak()return end elseif av==o+5 and au>=n+10 and au<=n+38 then aR(MINREQ.CPU,y,1,C)elseif av==o+7 and au>=n+10 and au<=n+38 then aR(MINREQ.RAM,A,2,E)elseif av==o+9 and au>=n+10 and au<=n+38 then aR(MINREQ.VIDEO,z,1,D)elseif av==o+11 and au>=n+10 and au<=n+38 then aR(MINREQ.COMPONENTS,B,3,F)end end end end;local function b5()j.fill(n+3,o+3,44,10,' ')for aC=0,#ADDITIONAL-I<9 and#ADDITIONAL-I or 9 do if aC+1==H then Y(R)j.fill(n+3,o+aC+3,44,1,"" "")end;j.set(n+6,o+aC+3,g(ADDITIONAL[I+aC].name)>39 and h(ADDITIONAL[I+aC].name,0,39)..""..""or ADDITIONAL[I+aC].name)if ADDITIONAL[I+aC].selected then if j.maxDepth()>1 then j.setForeground(0x00FF00)end;j.set(n+4,o+aC+3,""√"")else if j.maxDepth()>1 then j.setForeground(0xFF0000)end;j.set(n+4,o+aC+3,""╳"")end;if aC+1==H then j.setBackground(Q[2])end;j.setForeground(Q[1])end end;local function b6()if I>1 then I=I-1;b5()else if H>1 then H=H-1;b5()end end end;local function b7()local b8=#ADDITIONAL<10 and#ADDITIONAL or 10;if H+1>b8 then if I+9<#ADDITIONAL then I=I+1;b5()end else H=H+1;b5()end end;local function b9()j.set(n+6,o+1,""You can install additional components:"")Y(P)j.set(n+3,o+14,"" Cancel "")j.set(n+30,o+14,"" ← Back "")j.set(n+39,o+14,"" Next → "")Y(Q)b5()end;local function ba()while true do local at,a2,au,av,aQ=e.pull()if at==""key_down""then if i.isAltDown()and(au==88 or au==120)then ax(true)elseif av==203 then p=p-2;return elseif av==205 then return elseif av==200 then b6()elseif av==208 then b7()elseif av==57 or av==28 then ADDITIONAL[H+I-1].selected=not ADDITIONAL[H+I-1].selected;b5()end elseif at==""touch""then if av==o+14 and au>=n+3 and au<=n+10 then ax(true)elseif av==o+14 and au>=n+30 and au<=n+37 then p=p-2;return elseif av==o+14 and au>=n+39 and au<=n+46 then return elseif av>=o+3 and av<=o+12 and au>=n+3 and au<=n+46 then local bb=av-o-3+I;if#ADDITIONAL>=bb then H=bb-I+1;ADDITIONAL[bb].selected=not ADDITIONAL[bb].selected;b5()end end elseif at==""scroll""then if aQ==1 then b6()else b7()end end end end;local function bc()if x==""""then ar({""Installation path cannot be empty!"",""Please enter the path.""},S)return false end;if not c.exists(x)then local bd,be=c.makeDirectory(x)if not bd then ar({""Failed to make directory:"",be..""."",""Please check if path is correct and try again.""},S)return false end;return true end;local bf=c.get(x)if bf.isReadOnly()then ar({""This disk is write protected!"",""Please unprotect the disk and try again.""},S)return false end;if MINSPACE then local bg=bf.spaceTotal()-bf.spaceUsed()if bg<MINSPACE then ar({""Not enough space for installation!"",""Please free at least ""..a6(MINSPACE-bg),""of space and try again.""},S)return false end end;return true end;local function bh()local bi;if g(x)>43 then bi='..'..h(x,-41)else bi=x end;d.setCursor(n+3+g(bi),o+9)j.fill(n+3,o+9,44,1,' ')j.set(n+3,o+9,bi)end;local function bj()j.set(n+4,o+1,""Select a folder to install program files."")j.set(n+3,o+4,""Be aware that some files (such as libraries)"")j.set(n+8,o+5,""may be installed in system folders."")j.set(n+3,o+8,""Install to:"")local bk=MINSPACE or 0;if ADDITIONAL and#ADDITIONAL>0 then for a2,b0 in pairs(ADDITIONAL)do if b0.selected then bk=bk+b0.size end end end;if bk>0 then j.set(n+3,o+11,""Space required: ""..a6(bk))end;Y(P)j.set(n+3,o+14,"" Cancel "")j.set(n+30,o+14,"" ← Back "")j.set(n+39,o+14,"" Next → "")Y(Q)bh()end;local function bl()while true do local at,a2,au,av,aQ=d.pull()if at==""key_down""then if i.isAltDown()and(au==88 or au==120)then ax(true)elseif av==203 then p=p-2;return elseif av==205 or au==13 then if bc()then return end elseif au==8 then x=h(x,1,-2)bh()elseif au==0 or au==9 or au==127 then else x=x..f.char(au)bh()end elseif at==""touch""then if av==o+14 and au>=n+3 and au<=n+10 then ax(true)elseif av==o+14 and au>=n+30 and au<=n+37 then p=p-2;return elseif av==o+14 and au>=n+39 and au<=n+46 then if bc()then return end end elseif eve==""clipboard""then x=x..au;bh()end end end;local function bm()j.set(n+12,o+1,""WebWyse is ready to install"")j.set(n+25-g(PRODUCTNAME)/2,o+2,PRODUCTNAME)j.set(n+17,o+3,""to your computer."")j.set(n+9,o+6,""Click \""Go\"" to begin installation."")j.set(n+13,o+9,""Or click \""Back\"" to change"")j.set(n+15,o+10,""installation options."")Y(P)j.set(n+3,o+14,"" Cancel "")j.set(n+30,o+14,"" ← Back "")j.set(n+39,o+14,""   Go   "")end;local function bn()while true do local at,a2,au,av,aQ=e.pull()if at==""key_down""then if i.isAltDown()and(au==88 or au==120)then ax(true)elseif av==203 then p=p-2;return elseif au==13 then return end elseif at==""touch""then if av==o+14 and au>=n+3 and au<=n+10 then ax(true)elseif av==o+14 and au>=n+30 and au<=n+37 then p=p-2;return elseif av==o+14 and au>=n+39 and au<=n+46 then return end end end end;local function bo()j.set(n+2,o+5,string.rep("" "",46))j.set(n+2,o+7,string.rep("" "",46))j.setForeground(O[1])local bp=""Downloading file: ""..N;if g(bp)>46 then bp=bp:sub(1,44)..""..""end;j.set(n+25-g(bp)/2,o+5,bp)local bq=""Downloaded data: ""..a6(M)..""/""..a6(L)j.set(n+25-g(bq)/2,o+7,bq)local br=""Downloaded files: ""..K..""/""..J;j.set(n+25-g(br)/2,o+11,br)j.setForeground(W)j.set(n+4,o+6,string.rep(""━"",42))j.set(n+4,o+10,string.rep(""━"",42))j.setForeground(X)if L>0 then local bs=math.ceil(42*M/L)j.set(n+4,o+6,string.rep(""━"",bs))end;local bt=math.ceil(42*K/J)j.set(n+4,o+10,string.rep(""━"",bt))end;local function bu(bv,ap)ar({""Failed to ""..bv.."":"",ap..""."",""The installer will close.""},S)end;local function bw()j.set(n+9,o+1,""WebWyse downloads the necessary"")j.set(n+13,o+2,""files to your computer."")if ADDITIONAL then for a2,b0 in pairs(ADDITIONAL)do if b0.selected then for a2,bx in pairs(b0.files)do table.insert(FILES,bx)end end end end;J=#FILES end;local function by()for a2,bz in pairs(FILES)do N=c.name(bz.path)bo()local bA=bz.absolute and bz.path or c.concat(x,bz.path)if not c.exists(c.path(bA))then local bB,aI=c.makeDirectory(c.path(bA))if not bB then bu(""create directory"",aI)EXITNOTE=nil;ax()end end;local bC,aI=io.open(bA,""w"")if not bC then bu(""create file"",aI)EXITNOTE=nil;ax()end;local aF,aG=pcall(k.request,bz.url)if not aF then bu(""make internet request"",aG)EXITNOTE=nil;ax()end;if not aG then bu(""make internet request"",""invalid URL-address"")EXITNOTE=nil;ax()end;local aH,aI=aG.finishConnect()local aJ=b.uptime()while aH==false do aH,aI=aG.finishConnect()if b.uptime()>aJ+40 then break end end;if aH==nil then bu(""connect"",aI==bz.url and""can't get file""or aI)EXITNOTE=nil;ax()end;local aK,aL,bD=aG.response()local aJ=b.uptime()while aK==nil do aK,aL,bD=aG.response()if b.uptime()>aJ+40 then break end end;if aK==nil then bu(""connect"",""timeout expired"")EXITNOTE=nil;ax()elseif aK~=200 then bu(""connect"",""received code ""..math.floor(aK).."" (""..aL.."")"")EXITNOTE=nil;ax()end;if bD and bD[""Content-Length""]then L=tonumber(bD[""Content-Length""][1])else L=0 end;M=0;bo()while true do local aM,aI=aG.read(math.huge)if aM then M=M+#aM;bC:write(aM)bo()else aG:close()if aI then bu(""get file"",aI)EXITNOTE=nil;ax()else bC:close()break end end end;K=K+1;bo()end end;local function bE()j.set(n+25-g(PRODUCTNAME)/2,o+4,PRODUCTNAME)j.set(n+10,o+5,""has been successfully installed"")j.set(n+17,o+6,""on your computer."")j.set(n+9,o+9,""Click \""Ok\"" to exit the installer."")Y(P)j.set(n+39,o+14,""   Ok   "")end;local function bF()while true do local at,a2,au,av,aQ=e.pull()if at==""key_down""and au==13 or at==""touch""and av==o+14 and au>=n+39 and au<=n+46 then return end end end;j.setBackground(T)j.fill(1,1,l,m,' ')al()q={az}r={aA}if LICENSE or LICENSEURL then table.insert(q,aN)table.insert(r,aP)end;if MINREQ and(MINREQ.CPU or MINREQ.VIDEO or MINREQ.RAM or MINREQ.COMPONENTS)then table.insert(q,aZ)table.insert(r,b4)end;if ADDITIONAL and#ADDITIONAL>0 then table.insert(q,b9)table.insert(r,ba)end;table.insert(q,bj)table.insert(r,bl)table.insert(q,bm)table.insert(r,bn)table.insert(q,bw)table.insert(r,by)table.insert(q,bE)table.insert(r,bF)while p<=#q do ak()q[p]()r[p]()p=p+1 end;ax()
"
ieRUNHDR,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Friday 17th of May 2024 12:19:29 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_408919.pdf

Working as of:
17 May 2024"
MkqJeurT,_parse_scene.py as of 2024-05-16,Kitomas,Python,Friday 17th of May 2024 12:17:11 AM CDT,"if __name__ == ""__main__"":
    print(""_parse_scene.py should be used as a module only!"")
    exit(0)
    
_DEBUG = False
_PRINT_LAYERS = False #_DEBUG must be True as well

from os.path import isfile, exists
from pprint import pprint
import xml.etree.ElementTree as ET




obj_data_types = {
     ""u8"",  ""s8"",
    ""u16"", ""s16"",
    ""u24"", ""s24"",
    ""u32"", ""s32"",
    ""u64"", ""s64"",
    ""f32"", ""f64"",
    ""rgb"", ""argb""
}




def printError(s, fatal=True):
    if _DEBUG or fatal: print(""Error: {}"".format(s))
    if fatal: exit(-1)
    else    : return False

def sceneIdToPath(scene_id):
    return ""../scene_{}.tmx"".format(scene_id)
    
#poor man's regex lol
def extractTilesetName(path):
    #will turn something like ""../foo/tileset_collision.tsx"" into ""collision""
    name = path.split(""/"")[-1]
    return ((""_"").join(name.split("".""))).split(""_"")[1]
   
def tryInt(string):
    try:
        return int(string)
    except ValueError:
        return None
    except TypeError:
        return None
        
def tryDict(dict, key):
    try:
        return dict[key]
    except KeyError:
        return None

def keyWarn(properties, name, fatal=False, cat=""property""):
    if tryDict(properties, name) == None:
        #intentionally indented twice
        if    fatal: print(""  Error: {} \""{}\"" doesn't exist!"".format(cat, name)); exit(-1)
        elif _DEBUG: print(""  Warning: {} \""{}\"" doesn't exist!"".format(cat, name))
        return True #key does not exist
    else:
        return False #key exists

#value is a hex quad string of ""#AARRGGBB""
def toRGBA(value):
    alpha = int(value[1:3], 16)
    red   = int(value[3:5], 16)
    blue  = int(value[5:7], 16)
    green = int(value[7:9], 16)
    return (red, green, blue, alpha)

#dataValue should always be of type str
def convertType(dataType, dataValue):
    #(i wish python had switch statements...)
    if   dataType == ""int""    : return int(float(dataValue))
    elif dataType == ""bool""   : return eval(dataValue.capitalize())
    elif dataType == ""float""  : return float(dataValue)
    elif dataType == ""color""  : return toRGBA(dataValue)
    elif dataType == ""object"" : return int(float(dataValue))
    #elif dataType == 'file'  : return dataValue #(redundant)
    else                      : return dataValue

def tryTypeWarn(type_str):
    type_num = tryInt(type_str.split(""_"")[0])
    if type_num != None:
        return type_num
    else:
        if _DEBUG: print(""Warning: type \""{}\"" is invalid"".format(type_str))
        return 0
        
#(mostly) yoinked from stackoverflow lol
def checkForDuplicateIndexes(thelist):
  seen = set()
  for x in thelist:
    if x[0][0] in seen:
        printError(""found duplicate obj data index \""{}\"""".format(x[0][0]))
    seen.add(x[0][0])




def parseObject(obj_in):
    obj_out = { ""data"":[] }
    props_a = obj_in.attrib
    op = ""object property""
    
    if _DEBUG: print("" parsing object \""{}\""..."".format(tryDict(props_a, ""name"") or ""NAMELESS""))
    if keyWarn(props_a, ""name""  , cat=op): obj_out[""name""  ] = ""NAMELESS""
    else                                 : obj_out[""name""  ] = props_a[""name""]
    if keyWarn(props_a, ""x""     , cat=op): obj_out[""x""     ] = 0
    else                                 : obj_out[""x""     ] = convertType(""int"", props_a[""x""])
    if keyWarn(props_a, ""y""     , cat=op): obj_out[""y""     ] = 0
    else                                 : obj_out[""y""     ] = convertType(""int"", props_a[""y""])
    if keyWarn(props_a, ""width"" , cat=op): obj_out[""width"" ] = 0
    else                                 : obj_out[""width"" ] = convertType(""int"", props_a[""width""])
    if keyWarn(props_a, ""height"", cat=op): obj_out[""height""] = 0
    else                                 : obj_out[""height""] = convertType(""int"", props_a[""height""])
    if keyWarn(props_a, ""type""  , cat=op): obj_out[""type""  ] = 0
    else                                 : obj_out[""type""  ] = tryTypeWarn(props_a[""type""])
    
    #this should occur whether or not _DEBUG is True
    if obj_out[""type""] == 0: print(""  Warning: object \""{}\""'s type is equal to 0"".format(obj_out[""name""]))
    
    #hitbox offset is not an intrinsic object property,
     #so they need to be specified with a custom property
    obj_out[""hb_offset_x""] = 0
    obj_out[""hb_offset_y""] = 0


    _props_b = obj_in.find(""properties"")
    props_b  = []
    
    if _props_b != None:
        for prop in _props_b.findall(""property""):
            pName  = prop.attrib[""name"" ].split(""_"")
            pType  = prop.attrib[""type"" ]
            pValue = prop.attrib[""value""]
            if len(pName) < 2: printError(""\""{}\"" isn't a valid obj data property name"".format(pName[0]))
            pIndex = tryInt(pName[0])
            if pIndex == None: printError(""\""{}\"" has an invalid obj data property index"".format(pName[0]))
            pName[0] = pIndex
            props_b.append(  (pName, convertType(pType, pValue))  )
    
        checkForDuplicateIndexes(props_b) #properties can't share the same index
        props_b = sorted(props_b,  key = lambda x: x[0][0]  ) #sort by their indexes
    
    else:
        return obj_out
    
    
    data = []
    for prop in props_b:
        pType  = prop[0][1].lower()
        pName  = (""_"").join(prop[0][2:])
        pValue = prop[1]
        if pType not in obj_data_types:
            printError(""\""{}\"" is not a valid obj data type"".format(pType))
        if pName[0:10] == ""hb_offset_"":
            if pType != ""u8"":
                printError(""hb_offset_<x/y> is not of type u8"")
            if pName != ""hb_offset_x""  and  pName != ""hb_offset_y"":
                printError(""malformed offset name \""{}\"""".format(pName))
            obj_out[pName] = pValue
        else:
            data.append(  (pType, pValue, pName)  )
    
    
    obj_out[""data""] = data

    return obj_out




def printLayer(layers, name):
    if tryDict(layers, name) == None: return
    count = 0
    print(""  {}: ["".format(name), end="""")
    for tile in layers[name]:
        if count%32 == 0: print(""\n    "", end="""")
        print(str(tile).rjust(3), end="","")
        count += 1
    print(""\n  ],"")
    
def printScene(scene, printLayers=_PRINT_LAYERS):
    print(""  --PROPERTIES--:"")
    pprint(scene[""properties""], indent=4)
    
    if printLayers:
        print(""  --LAYERS--"")
        printLayer(scene[""layers""], ""collision"")
        printLayer(scene[""layers""], ""fg""       )
        printLayer(scene[""layers""], ""mg""       )
        
    print(""  --OBJECTS--"")
    pprint(scene[""objs""])

def parseSceneMap(scene_id, announce=True):
    filename = sceneIdToPath(scene_id)
    if not exists(filename): printError(""scene \""{}\"" does not exist"".format(filename))
    if not isfile(filename): printError(""scene \""{}\"" is not a file"".format(filename))
    if _DEBUG or announce: print(""PARSING \""{}\"":"".format(filename))
    tree = ET.parse(filename)
    map  = tree.getroot()
    
    #get map's intrinsic properties
    width       = int(map.attrib[""width""     ]) #should be 32
    height      = int(map.attrib[""height""    ]) #should be 18
    tileWidth  = int(map.attrib[""tilewidth"" ]) #should be 24 (unused)
    tileHeight = int(map.attrib[""tileheight""]) #should be 24 (unused)
    mapLength   = width*height
    
    if width      != 32: printError(""map width is not 32"")
    if height     != 18: printError(""map height is not 18"")
    if tileWidth  != 24: printError(""tile width is not 24"")
    if tileHeight != 24: printError(""tile height is not 24"")
    
    
    
    #get map's custom properties
    props = {}
    for prop in map.find(""properties""):
        pName  = tryDict(prop.attrib, ""name"" ) or ""NAMELESS""
        pType  = tryDict(prop.attrib, ""type"" )
        pValue = tryDict(prop.attrib, ""value"") or ""NOVALUE""
        props[ pName ] = convertType(pType, pValue)

    if  keyWarn(props, ""bmp_bg""    ):  props[""bmp_bg""    ] = 0
    if  keyWarn(props, ""repeat_bg"" ):  props[""repeat_bg"" ] = False #lol
    #if keyWarn(props, ""objs_len""  ):  props[""objs_len""  ] = 0 #(calculated later)
    #if keyWarn(props, ""tileset_a"" ):  props[""tileset_a"" ] = 0 #(calculated later)
    #if keyWarn(props, ""tileset_b"" ):  props[""tileset_b"" ] = 0 #(calculated later)
    if  keyWarn(props, ""edge_n""    ):  props[""edge_n""    ] = 0
    if  keyWarn(props, ""edge_s""    ):  props[""edge_s""    ] = 0
    if  keyWarn(props, ""edge_w""    ):  props[""edge_w""    ] = 0
    if  keyWarn(props, ""edge_e""    ):  props[""edge_e""    ] = 0
    #if keyWarn(props, ""scene""     ):  props[""scene""     ] = 0 #(calculated later)
    if  keyWarn(props, ""music""     ):  props[""music""     ] = 0
    if  keyWarn(props, ""ambience_a""):  props[""ambience_a""] = 0
    if  keyWarn(props, ""ambience_b""):  props[""ambience_b""] = 0
    
    
    
    #calculate tileset boundaries
    _tsets = []
    for tset in map.findall(""tileset""):
        tFirstGID = int(tryDict(tset.attrib, ""firstgid"")) - 1
        tName     = extractTilesetName(tryDict(tset.attrib, ""source""))
        _tsets.append(  ( tFirstGID, tryInt(tName) or 0 )  )
    tsets = sorted(_tsets,  key = lambda x: x[0]  ) #sorted by first element
    
    if   len(tsets) < 3: printError(""map cannot have less than 3 tilesets (including collision)"")
    elif len(tsets) > 3: printError(""map cannot have more than 3 tilesets (including collision)"")
       
     #there should only be 1 tileset that registers as null (the collision's tileset)
    tset_offsets = [0,] * 3
    tset_nulls, tset_valids  =  0, 0
    tset_a,     tset_b       =  0, 0
    for i in range(len(tsets)):
        #collision tileset
        if    tsets[i][1] == 0:  tset_offsets[i] = -1;  tset_nulls  += 1
        #tileset_a
        elif  tset_valids == 0:  tset_a = tsets[i][1];  tset_valids += 1
        #tileset_b
        else                  :  tset_b = tsets[i][1];  tset_offsets[i] = 128
    
    if tset_nulls != 1: printError(""map must have exactly 1 null tileset, reserved for collider map"")

    
    
    #get map's layer data
    layers = {}
    for layer in map.findall(""layer""):
        lName   =      tryDict(layer.attrib,""name""  ) or ""NAMELESS""
        lWidth  = int( tryDict(layer.attrib,""width"" ) or 0 )
        lHeight = int( tryDict(layer.attrib,""height"") or 0 )
        lLength = lWidth*lHeight
        # n-1 to make sure both tile 0 and 1 are treated as transparent
        lData   = [ max(int(n)-1, 0) for n in layer.find(""data"").text.split("","") ] #csv to list
        if lLength != mapLength : valid = printError(""layer dims inconsistent with map dimensions"")
        if lLength != len(lData): valid = printError(""layer dims inconsistent with its attributes"")
        layers[ lName ] = lData
    
    valid = True
    if ""collision"" not in layers: valid = printError(""layer \""collision\"" doesn't exist"", quit=False)
    if ""fg""        not in layers: valid = printError(""layer \""fg\"" doesn't exist"",        quit=False)
    if ""mg""        not in layers: valid = printError(""layer \""mg\"" doesn't exist"",        quit=False)
    if not valid: exit(-1)
    
    for i in range(len(layers[""collision""])):
        #collider info is 6 bits (2^6 = 64),
         #which is a factor of a normal tileset's 7 (2^7 = 128) anyway
        layers[""collision""][i] %= 64
        
    for i in range(len(layers[""fg""])): #(fg & mg should be the same length)
        #fg
        tile = layers[""fg""][i]
        offset = tset_offsets[tile//128] #tile//128 should be between 0 -> 2
        if offset == -1  and  (tile%128) != 0:
            printError(""fg cannot contain collision map tiles"")
        layers[""fg""][i] = (tile%128) + max(offset, 0)
        if layers[""fg""][i] == 128: layers[""fg""][i] = 0 #128 is also transparent
        
        #mg
        tile = layers[""mg""][i]
        offset = tset_offsets[tile//128]
        if offset == -1  and  (tile%128) != 0:
            printError(""mg cannot contain collision map tiles"")
        layers[""mg""][i] = (tile%128) + max(offset, 0)
        if layers[""mg""][i] == 128: layers[""mg""][i] = 0 #128 is also transparent
        
    #check if a given layer's data should be omitted from scene descriptor file
    fg_nonzero = False
    mg_nonzero = False
    for i in range(len(layers[""fg""])): #(fg & mg should be the same length)
        if (layers[""fg""][i]%128) != 0: fg_nonzero = True
        if (layers[""mg""][i]%128) != 0: mg_nonzero = True
        
    if not fg_nonzero  and  not fg_nonzero:
        printError(""fg and mg cannot both be empty"")
    
    
    
    props[""objs_len""  ] = 0
    props[""tileset_a"" ] = tset_a
    props[""tileset_b"" ] = tset_b
    props[""scene""     ] = scene_id
    props[""fg_nonzero""] = fg_nonzero
    props[""mg_nonzero""] = mg_nonzero
    
    #get scene objects
    obj_groups = map.findall(""objectgroup"")
    objs = []
    if len(obj_groups) >  1: printError(""scene cannot have more than 1 object group"")
    if len(obj_groups) == 1:
        #(this loop will not run at all if there are no objects)
        for obj in obj_groups[0].findall(""object""):
            props[""objs_len"" ] += 1
            objs.append(parseObject(obj))



    #automatically mark edge as a loop if that edge is null
    if props[""edge_n""] == 0: props[""edge_n""] = scene_id
    if props[""edge_s""] == 0: props[""edge_s""] = scene_id
    if props[""edge_w""] == 0: props[""edge_w""] = scene_id
    if props[""edge_e""] == 0: props[""edge_e""] = scene_id
    
    #error if all 4 edges make the scene loop
    edges = (scene_id, props[""edge_n""], props[""edge_s""],
                       props[""edge_w""], props[""edge_e""])
    if all(i==edges[0] for i in edges):
        printError(""all 4 edges make scene loop"")


    scene = {}
    scene[""properties""] = props
    scene[""layers""    ] = layers
    scene[""objs""      ] = objs
    
    if _DEBUG: printScene(scene)
    
    return scene"
JLvdr8hP,_compile_scene.py as of 2024-05-16,Kitomas,Python,Friday 17th of May 2024 12:15:36 AM CDT,"if __name__ != ""__main__"": exit(0) #lol

_DEBUG = True

#from os import listdir, system as cmd
#from os.path import join
from time import time
from sys import argv
from struct import pack as struct_pack
from os import system as cmd

import _parse_scene as ps
'''public stuff from ps:

ps.obj_data_types = {
     ""u8"",  ""s8"",  ""u16"", ""s16"",  ""u24"", ""s24"",
    ""u32"", ""s32"",  ""u64"", ""s64"",  ""f32"", ""f64"",
    ""rgb"", ""argb""
}

ps.printError(s, fatal=True)

ps.sceneIdToPath(scene_id)
   
#returns None if int() conversion fails
ps.tryInt(string)

#returns None if key is not in dict[ionary]
ps.tryDict(dict, key)

#dataValue should always be of type str
#type should be one of: int, bool, float, color, object, file
ps.convertType(dataType, dataValue)

ps.printScene(scene, printLayers=_PRINT_LAYERS)

ps.parseSceneMap(scene_id, announce=False)
'''




#                      8      16        24          32                              64
unsigned_max = (-1, 0xff, 0xffff, 0xffffff, 0xffffffff, -1, -1, -1, 0xffffffffffffffff)
signed_min   = (-1,-0x80,-0x8000,-0x800000,-0x80000000, -1, -1, -1,-0x8000000000000000)
signed_max   = (-1, 0x7f, 0x7fff, 0x7fffff, 0x7fffffff, -1, -1, -1, 0x7fffffffffffffff)

def to_bytes_integer(_v, byteCount, isSigned):
    v = ps.tryInt(_v)
    if v == None: ps.printError(f'cannot convert {_v} ({hex(v)}) to an integer')
    
    if isSigned:
        if v < signed_min[byteCount]  or  v > signed_max[byteCount]:
            ps.printError(f'cannot convert {v} ({hex(v)}) to s{byteCount*8}')
        if v < 0:
            v += unsigned_max[byteCount]+1
            
    else:
        if v < 0  or  v > unsigned_max[byteCount]:
            ps.printError(f'cannot convert {v} ({hex(v)}) to u{byteCount*8}')
        
    return v.to_bytes(byteCount, ""little"")
    

def to_bytes_float(_v, doublePrecision):
    v = float(_v)
    if doublePrecision: return struct_pack(""d"", v)
    else              : return struct_pack(""f"", v)
    

#assumes (r,g,b,a), converts to [a]rgb in bytes
def to_bytes_color(_v, useAlpha):
    if type(_v) != list  and type(_v != tuple):
        ps.printError(""color must be of type \""list\"" or \""tuple\"""")
    if len(_v) < 3:
        ps.printError(""color has less than 3 channels"")
        
    red   = to_bytes_integer(_v[0], 1, False)
    blue  = to_bytes_integer(_v[1], 1, False)
    green = to_bytes_integer(_v[2], 1, False)
    
    if useAlpha:
        if len(_v) < 4:
            ps.printError(""color has less than 4 channels, despite using alpha"")
        alpha = to_bytes_integer(_v[3], 1, False)
        return alpha + red + green + blue
        
    else:
        return red + green + blue


def to_bytes_u8(v): return to_bytes_integer(v, 1, False)
def to_bytes_s8(v): return to_bytes_integer(v, 1, True )

def to_bytes_u16(v): return to_bytes_integer(v, 2, False)
def to_bytes_s16(v): return to_bytes_integer(v, 2, True )

def to_bytes_u24(v): return to_bytes_integer(v, 3, False)
def to_bytes_s24(v): return to_bytes_integer(v, 3, True )

def to_bytes_u32(v): return to_bytes_integer(v, 4, False)
def to_bytes_s32(v): return to_bytes_integer(v, 4, True )

def to_bytes_u64(v): return to_bytes_integer(v, 8, False)
def to_bytes_s64(v): return to_bytes_integer(v, 8, True )

def to_bytes_f32(v): return to_bytes_float(v, False)
def to_bytes_f64(v): return to_bytes_float(v, True )

def to_bytes_rgb (v): return to_bytes_color(v, False)
def to_bytes_argb(v): return to_bytes_color(v, True )


to_bytes = { #for example, ""to_bytes[""u16""](55)"" will output ""b'\x37\x00'""
    ""u8""  : to_bytes_u8,   ""s8""  : to_bytes_s8,
    ""u16"" : to_bytes_u16,  ""s16"" : to_bytes_s16,
    ""u24"" : to_bytes_u24,  ""s24"" : to_bytes_s24,
    ""u32"" : to_bytes_u32,  ""s32"" : to_bytes_s32,
    ""u64"" : to_bytes_u64,  ""s64"" : to_bytes_s64,
    ""f32"" : to_bytes_f32,  ""f64"" : to_bytes_f64,
    ""rgb"" : to_bytes_rgb, ""argb"" : to_bytes_argb
}




def total_byte_length(bytes_list): return sum(len(i) for i in bytes_list)
def join_bytes(bytes_list): return (b'').join(bytes_list)
def high_bit_boolean(boolean, integer, byte_width):
    bool_binary = str(int(boolean))
    int_binary  = bin(integer)[2:].rjust(byte_width*8-1,'0') #([2:] to remove the ""0b"" prefix)
    result_binary = bool_binary + int_binary
    
    if len(result_binary) > byte_width*8:
        ps.printError(f""high_bit_boolean() result longer than {byte_width} bytes"")
        
    return to_bytes_integer(int(result_binary, 2), byte_width, False)

'''struct Object { //48B (28 bytes reserved for the user data)
  kit::u64           _user_0; //data depends on object type
  kit::u64           _user_1;  //
  kit::u64           _user_2;  //
  kit::u32           _user_3;  //

  struct {
    struct {
      kit::u16         x;
      kit::u16         y;
    } /*-----------*/ size;
    struct {
      kit::u8          x; //hitbox's offset relative to the
      kit::u8          y;  //object's actual position
    } /*---------*/ offset;
  } /*-----------------*/ hb; //h[it]b[ox]

  kit::s16                 x;
  kit::s16                 y;

  struct {
    kit::u16            type : 14;
    kit::u16      persistent :  1; //'never reset this object's cached data?'
    kit::u16        in_front :  1; //'should be displayed in front of player?'
  };

  Object_TickCallback update;
};'''
#returns a single byte object
def assemble_object(obj):
    if _DEBUG: print(f'    assembling object ""{obj[""name""]}""...')


    #first 28 bytes of the 48 byte object
    customs = []
    for c in obj[""data""]:
        customs.append(to_bytes[c[0]](c[1]))
    
    customs_len = total_byte_length(customs)
    if customs_len > 28: ps.printError(""total length of properties exceeded 28 bytes"")
    if customs_len < 28: customs.append(b'\x00'*(28-customs_len)) #add padding to end
    
    
    type       = obj[""type""]
    persistent = obj[""name""][-1:] == ""*""
    in_front   = obj[""name""][0:1] == ""^""
    
    if type >= 2**14: ps.printError(""object type id cannot exceed 16383"")
    if persistent: type += 16384 #set bit 14

    #last 20 bytes of the 48 byte object
    intrinsics = [
        to_bytes_integer(obj[""width""      ], 2, False), #u16: hb.size.x
        to_bytes_integer(obj[""height""     ], 2, False), #u16: hb.size.y
        to_bytes_integer(obj[""hb_offset_x""], 1, False), #u8 : hb.offset.x
        to_bytes_integer(obj[""hb_offset_y""], 1, False), #u8 : hb.offset.y
        to_bytes_integer(obj[""x""          ], 2, True ), #s16: x
        to_bytes_integer(obj[""y""          ], 2, True ), #s16: y
        high_bit_boolean(    in_front, type, 2       ), #u16: in_front, persistent, type
        #(doesn't matter what this is set to, as it's overwritten at runtime anyway)
        b'\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA'             #ptr: update
    ]
    
    
    #concatenate the result of the object's custom and intrinsic properties
    return join_bytes(customs + intrinsics)




'''//for storing the contents of a .ksd file (compressed scene data)
#define KSD_MAGIC 0x4644536B //""kSDF""
#define SD_FILELEN(_scene_desc) ((_scene_desc).dataSize+sizeof(SceneDescriptor))
struct SceneDescriptor { //64B
/*0x00*/  kit::u32      magic; //= 0x4644536B = ""kSDF"" (no null terminator)
/*0x04*/  kit::u32   dataSize; //size of file in bytes, minus the header (which is always 64B)

          //offsets to array data in file (if nullptr, data is assumed to not be present!)
          //(also, objs[x].type refers to the index inside gl_objCallbacks used by the object.
           //each element of gl_objCallbacks is of type Object_TickCallback)
/*0x08*/  Object*        objs; //contains the original states of each object in the scene
/*0x10*/  Tile*        pat_mg; //pattern data is compressed using RLE, where the 1st element's .value
/*0x18*/  Tile*        pat_fg;  //member is the run length, with the 2nd being the actual tile data

        struct {
/*0x20*/  kit::u16     bmp_bg : 15; //associated background id
/*0x21*/  kit::u16  repeat_bg :  1; //'should bg repeat?' (stretches to screen otherwise)
        };

        struct {
/*0x22*/  kit::u16   objs_len : 15; //number of objects in scene
/*0x23*/  kit::u16    visited :  1; //used to help determine if objects should reset on load
        };

/*0x24*/  kit::u16  tileset_a; //1st associated tileset
/*0x26*/  kit::u16  tileset_b; //2nd associated tileset

/*0x28*/  kit::u16     edge_n; //scene id for north edge
/*0x2A*/  kit::u16     edge_s; //scene id for south edge
/*0x2C*/  kit::u16     edge_w; //scene id for west edge
/*0x2E*/  kit::u16     edge_e; //scene id for east edge
/*0x30*/  kit::u16      scene; //scene id for scene itself

/*0x32*/  kit::u16      music; //music id;  0 for no change, -1 (65535) to stop
/*0x34*/  kit::u16 ambience_a; //ambient track id a;  0 for no change, -1 to stop
/*0x36*/  kit::u16 ambience_b; //ambient track id b;  0 for no change, -1 to stop

/*0x38*/  kit::BinaryData* fileData = nullptr; //raw file data; appears as nullptr in file

/*0x40*/  //... (array data is stored in order of: objs, pat_mg, and pat_fg)
};'''
#returns a single byte object
def assemble_header(props, dataSize, objs, pat_mg, pat_fg):
    bmp_bg    = props[""bmp_bg""   ]
    repeat_bg = props[""repeat_bg""]
    
    if props[""objs_len""] < 0:
        ps.printError(""objs_len cannot be < 0"")

    return join_bytes((
        to_bytes_integer(         0x4644536B, 4, False), #u32
        to_bytes_integer(           dataSize, 4, False), #u32
        
        to_bytes_integer(               objs, 8, False), #ptr
        to_bytes_integer(             pat_mg, 8, False), #ptr
        to_bytes_integer(             pat_fg, 8, False), #ptr
        
        high_bit_boolean(  repeat_bg, bmp_bg, 2       ), #u16
        
        to_bytes_integer(props[""objs_len""  ], 2, True ), #u15 (yes, 15-bit)
        
        to_bytes_integer(props[""tileset_a"" ], 2, False), #u16
        to_bytes_integer(props[""tileset_b"" ], 2, False), #u16
        
        to_bytes_integer(props[""edge_n""    ], 2, False), #u16
        to_bytes_integer(props[""edge_s""    ], 2, False), #u16
        to_bytes_integer(props[""edge_w""    ], 2, False), #u16
        to_bytes_integer(props[""edge_e""    ], 2, False), #u16
        to_bytes_integer(props[""scene""     ], 2, False), #u16
        
        to_bytes_integer(props[""music""     ], 2, False), #u16
        to_bytes_integer(props[""ambience_a""], 2, False), #u16
        to_bytes_integer(props[""ambience_b""], 2, False), #u16
        
        b'\x00\x00\x00\x00\x00\x00\x00\x00'              #ptr
    ))




#returns a list of byte objects
def assemble_layer(layers, which):
    layer_tile      = layers[which]
    layer_collision = layers[""collision""]
    
    raw = [None,]*len(layer_tile)
    for i in range(len(layer_tile)):
        tile      = to_bytes_integer(layer_tile     [i], 1, False)
        collision = to_bytes_integer(layer_collision[i], 1, False)
        raw[i] = tile + collision
        
    rle      = []
    previous = raw[0]
    count    = 0
    for current in raw:
        if current == previous:
            count += 1
        else:
            run = to_bytes_integer(count, 2, False)
            rle.append(run + previous)
            count = 1
            previous = current
            
    if count != 0:
        run = to_bytes_integer(count, 2, False)
        rle.append(run + previous)
            
    return rle




#returns a list of byte objects
def assemble_scene(scene):
    if _DEBUG: print(f' GENERATING SCENE { scene[""properties""][""scene""] }\'S DATA:')
    objs = [ assemble_object(obj) for obj in scene[""objs""] ]
    mg   = assemble_layer(scene[""layers""], ""mg"")
    fg   = assemble_layer(scene[""layers""], ""fg"")
    

    objs_nonzero = len(scene[""objs""]) > 0
    fg_nonzero   = scene[""properties""][""fg_nonzero""]
    mg_nonzero   = scene[""properties""][""mg_nonzero""]
    
    #header_len = 64
    objs_len = total_byte_length(objs)
    mg_len   = total_byte_length(mg  )
    fg_len   = total_byte_length(fg  )
    
    
    dataSize    = objs_len + mg_len + fg_len
    offset_objs = 64
    offset_mg   = offset_objs + objs_len
    offset_fg   = offset_mg   +   mg_len
    
    #offsets should be 0 in file if array is not used
    offset_objs *= objs_nonzero # x*0 = 0, x*1 = x, blah blah blah
    offset_mg   *= mg_nonzero
    offset_fg   *= fg_nonzero
    
    
    header = assemble_header(scene[""properties""], dataSize,
                             offset_objs, offset_mg, offset_fg)
    
    output = [header,]
    if objs_nonzero: output += objs
    if mg_nonzero  : output += mg
    if fg_nonzero  : output += fg
    return output




def write_scene(list_of_byte_objects, scene_id):
    if _DEBUG: print(f' WRITING SCENE { scene_id }\'S DATA TO FILE:')
    with open(f'scene_{scene_id}.ksd', ""wb"") as file:
        for chunk in list_of_byte_objects:
            file.write(chunk)




#writes scene data to descriptor file
def compile_scene(scene_id):
    timeStartTotal = time()


    timeStart = time()
    scene = ps.parseSceneMap(scene_id, announce=_DEBUG)
    timeTakenMS = (time()-timeStart)*1000
    if _DEBUG: print(""  FINISHED PARSING IN: {:.4}ms"".format(timeTakenMS))
    
    timeStart = time()
    scene_bytes = assemble_scene(scene)
    timeTakenMS = (time()-timeStart)*1000
    if _DEBUG: print(""  FINISHED GENERATING IN: {:.4}ms"".format(timeTakenMS))
    
    timeStart = time()
    write_scene(scene_bytes, scene_id)
    timeTakenMS = (time()-timeStart)*1000
    if _DEBUG: print(""  FINISHED WRITING IN: {:.4}ms"".format(timeTakenMS))
    
    
    timeTakenMS = (time()-timeStartTotal)*1000
    if _DEBUG: print("" TOTAL TIME SPENT: {:.4}ms"".format(timeTakenMS))
    return timeTakenMS
    


#arguments go as follows: rangeMin, rangeMax, pauseOnExit, disablePrinting
#rangeMax and pauseOnExit are optional, as if only rangeMin
 #is specified, rangeMax will be set to rangeMin as well
#(pauseOnExit and disablePrinting are false by default)

if len(argv) < 2: ps.printError(""must provide at least 1 argument for rangeMin"")
rangeMin = int(argv[1])

if len(argv) >= 5: _DEBUG = argv[4].lower() == ""false""

pauseOnExit = False
if len(argv) >= 4: pauseOnExit = argv[3].lower() == ""true""

rangeMax = rangeMin
if len(argv) >= 3: rangeMax = int(argv[2])


cmd(""cls"")

timeStart = time()

for i in range(rangeMin, rangeMax+1):
    compile_scene(i)

timeTakenMS = (time()-timeStart)*1000
if _DEBUG: print("" SCENES {} -> {} COMPILED IN: {:.4}ms"".format(rangeMin, rangeMax, timeTakenMS))

if pauseOnExit: cmd(""pause"")"
q0XQ4afe,Setup Accounts V3,LegendzHackz,Lua,Friday 17th of May 2024 12:13:48 AM CDT,"local Storage = game:GetService(""ReplicatedStorage"");
local Workspace = game:GetService(""Workspace"");
local Players = game:GetService(""Players"");
local Player = Players.LocalPlayer

-- Local Initiative Services

local TeleportService = game:GetService(""TeleportService"");
local InputService = game:GetService(""UserInputService"");
local ChatService = game:GetService(""TextChatService"");
local HttpService = game:GetService(""HttpService"");
local VirtualUser = game:GetService(""VirtualUser"");
local RunService = game:GetService(""RunService"");
local CoreGui = game:GetService(""CoreGui"");
local Camera = Workspace.Camera
local Gui = Player.PlayerGui
local PId, JId = game.PlaceId, game.JobId

-- Initiatives

local AdminPanel = Gui.Admin
local Room = Workspace.Room
local Stalls = Workspace.Stalls
local Events = Storage.EVENTS
local AdminEvent = Events.NOM

-- Recollectives

local Heartbeat = RunService.Heartbeat

-- Intitiate Admin User Interface

AdminPanel.OpenClose.Visible = true
AdminPanel.Frame.Visible = true

function Shorten(Username)
    local PlayerList = {}
    for _, CPlayer in pairs(Players:GetPlayers()) do
        if CPlayer.Name:lower():sub(1, #Username) == Username:lower() or CPlayer.DisplayName:lower():sub(1, #Username) == Username:lower() then
            table.insert(PlayerList, CPlayer)
        end
    end
    return PlayerList
end

function Hop()
    pcall(function()
        local Servers = {}
        for _, v in ipairs(HttpService:JSONDecode(game:HttpGetAsync(""https://games.roblox.com/v1/games/"" .. PlaceId .. ""/servers/Public?sortOrder=Asc&limit=100"")).data) do
            if type(v) == ""table"" and v.maxPlayers > v.playing and v.Id ~= JobId then
                Servers[#Servers + 1] = v.id
            end
        end
        if #Servers > 0 then
            TeleportService:TeleportToPlaceInstance(PlaceId, Servers[math.random(1, #Servers)])
        else
            print(""Server not found."")
        end
    end)
end

function StealStall()
    pcall(function()
        for _, Steal in next, Stalls:GetDescendants() do
            if Steal:IsA(""ProximityPrompt"") then
                if (Player.Character.HumanoidRootPart.Position - Steal.Parent.Position).Magnitude < getgenv().Settings.Distance then
                    fireproximityprompt(Steal)
                    Steal.Parent.Parent.Edit:FireServer(""Empty"", ""Empty"")
                end
            end
        end
    end)
end

function CloseStall()
    pcall(function()
        for _, CloseStall in next, Stalls:GetDescendants() do
            if CloseStall:IsA(""RemoteEvent"") and CloseStall.Name == ""CloseStall"" then
                CloseStall:FireServer()
            end
        end
    end)
end

function EmptyStall()
    pcall(function()
        StealStall()
        CloseStall()
    end)
end

function Hide(Target, Value)
    pcall(function()
        if Value then
            for _, Search in next, Players:GetPlayers() do
                if Search.Name == Target then
                    for _, Staff in next, Players:GetPlayers() do
                        if Staff ~= Player then
                            if table.find(getgenv().Settings.Whitelist, Staff.UserId) then
                                Search.Character.HumanoidRootPart.Velocity = Vector3.new()
                                Search.Character.HumanoidRootPart.CFrame = Staff.Character.HumanoidRootPart.CFrame * CFrame.new(-getgenv().Settings.X, getgenv().Settings.Y, getgenv().Settings.Z)
                            end
                        end
                    end
                end
            end
        elseif not Value then
            for _, Search in next, Players:GetPlayers() do
                if Search.Name == Target then
                    for _, Staff in next, Players:GetPlayers() do
                        if Staff ~= Player then
                            if table.find(getgenv().Settings.Whitelist, Staff.UserId) then
                                Search.Character.HumanoidRootPart.Velocity = Vector3.new()
                                Search.Character.HumanoidRootPart.CFrame = Staff.Character.HumanoidRootPart.CFrame * CFrame.new(getgenv().Settings.X, getgenv().Settings.Y, getgenv().Settings.Z)
                            end
                        end
                    end
                end
            end
        end
    end)
end


function NoSitAFK()
    function AntiAFK()
        local grabconnections = getconnections or get_signal_cons
        if grabconnections then
            for _, Extra in pairs(grabconnections(Player.Idled)) do
                if Extra[""Disable""] then
                    Extra[""Disable""](Extra)
                elseif Extra[""Disconnect""] then
                    Extra[""Disconnect""](Extra)
                end
            end
        else
            Player.Idled:Connect(function()
                VirtualUser:CaptureController()
                VirtualUser:ClickButton2(Vector2.new())
            end)
        end
    end

    function NoSitCall()
    	task.wait()
    	if Player.Character:FindFirstChildWhichIsA(""Humanoid"").Sit then
    		Player.Character:FindFirstChildWhichIsA(""Humanoid"").Sit = false
    	end
    end

    if NoSit then
        noSit:Disconnect()
        NoSitGet:Disconnect()
    end

    NoSit = Player.Character:FindFirstChildOfClass(""Humanoid""):GetPropertyChangedSignal(""Sit""):Connect(NoSitCall)

    function NoSitDeadGet()
        repeat task.wait()
        
        until Player.Character ~= nil and Player.Character:FindFirstChildOfClass(""Humanoid"")
        NoSit:Disconnect()
        NoSit = Player.Character:FindFirstChildOfClass(""Humanoid""):GetPropertyChangedSignal(""Sit""):Connect(NoSitCall)
    end

    NoSitGet = Player.CharacterAdded:Connect(NoSitDeadGet)
    AntiAFK()
end

NoSitAFK()

ChatService.MessageReceived:Connect(function(Message)
    for _, Search in next, Players:GetPlayers() do
        if Search ~= Player and table.find(getgenv().Settings.Whitelist, Search.UserId) then
            if Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""disconnect"" then
                Player:Kick(""You have been disconnected."")
            elseif Message.TextSource.UserId == Search.UserId and (Message.Text == getgenv().Settings.Prefix .. ""commands"" or Message.Text == getgenv().Settings.Prefix .. ""cmds"") then
                ChatService.TextChannels.RBXGeneral:SendAsync(""commands, cmds, disconnect, empty, giant, mini, event, respawn, rejoin, hop, flash, default, def, big, huge, small, tiny, conc, conceal, reveal, rev, hide, unhide, bring"")
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""empty"" then
                EmptyStall()
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""giant"" then
                AdminEvent:FireServer(""huge"")
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""mini"" then
                AdminEvent:FireServer(""mini"")
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""event"" then
                AdminEvent:FireServer("""")
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""respawn"" then
                pcall(function()
                    local cOld = Player.Character.HumanoidRootPart.CFrame
                    Player.Character:BreakJoints()
                    Player.CharacterAdded:Wait():WaitForChild(""HumanoidRootPart"").CFrame = cOld
                end)
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""rejoin"" then
                TeleportService:TeleportToPlaceInstance(PId, JId, Player)
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""hop"" then
                Hop()
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""flash"" then
                local gOld = getgenv().Settings.Y
                for Iter = 1, 5 do
                    task.wait(0.1)
                    getgenv().Settings.Y = 25
                    task.wait(0.1)
                    getgenv().Settings.Y = 3.5
                end
                task.wait(0.7)
                getgenv().Settings.Y = gOld
            elseif Message.TextSource.UserId == Search.UserId and (Message.Text == getgenv().Settings.Prefix .. ""default"" or Message.Text == getgenv().Settings.Prefix .. ""def"") then
                getgenv().Settings.X = 4
                getgenv().Settings.Y = 0
                getgenv().Settings.Z = 0
            elseif Message.TextSource.UserId == Search.UserId and (Message.Text == getgenv().Settings.Prefix .. ""big"" or Message.Text == getgenv().Settings.Prefix .. ""huge"") then
                getgenv().Settings.X = 7.5
                getgenv().Settings.Y = 3.5
                getgenv().Settings.Z = 0
            elseif Message.TextSource.UserId == Search.UserId and (Message.Text == getgenv().Settings.Prefix .. ""small"" or Message.Text == getgenv().Settings.Prefix .. ""tiny"") then
                getgenv().Settings.X = 2.5
                getgenv().Settings.Y = 0
                getgenv().Settings.Z = 0
            elseif Message.TextSource.UserId == Search.UserId and (Message.Text == getgenv().Settings.Prefix .. ""conc"" or Message.Text == getgenv().Settings.Prefix .. ""conceal"") then
                getgenv().Settings.Y = 5000
            elseif Message.TextSource.UserId == Search.UserId and (Message.Text == getgenv().Settings.Prefix .. ""reveal"" or Message.Text == getgenv().Settings.Prefix .. ""rev"") then
                getgenv().Settings.Y = 3.5
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""hide"" then
                getgenv().Settings.Hide = true
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""unhide"" then
                getgenv().Settings.Hide = false
                Player.Character.HumanoidRootPart.CFrame = Search.Character.HumanoidRootPart.CFrame * CFrame.new(0, 5, 0)
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""bring"" then
                Player.Character.HumanoidRootPart.CFrame = Search.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 0)
            end
        end
    end
end)

Heartbeat:Connect(function()
    pcall(function()
        if getgenv().Settings.Hide then
            Hide(getgenv().Settings.Target, getgenv().Settings.Value)
        end
    end)
end)"
qZFztXD0,Button Detection rev_02,pleasedontcode,Arduino,Thursday 16th of May 2024 11:08:35 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: Button Detection
	- Source Code compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-17 04:06:31

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Improve the user description requirement by */
	/* specifying the need for debouncing for the push */
	/* button connected to pin D4 using the EasyButton */
	/* library. */
/****** END SYSTEM REQUIREMENTS *****/


/****** DEFINITION OF LIBRARIES *****/
#include <EasyButton.h> // https://github.com/evert-arias/EasyButton

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t BUTTON_PIN = 4;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
EasyButton button(BUTTON_PIN);

void onPressed()
{
  Serial.println(""Button pressed"");
}

void setup(void)
{
  // put your setup code here, to run once:
  Serial.begin(115200);
  Serial.println();
  Serial.println("">>> EasyButton pressed example <<<"");

  // Initialize the EasyButton object with debouncing for the push button connected to pin D4 using the EasyButton library
  button.begin();
  button.onPressed(onPressed);
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  button.read();
}

/* END CODE */"
5g5vtzEQ,EasyButton Events rev_01,pleasedontcode,Arduino,Thursday 16th of May 2024 11:05:44 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: EasyButton Events
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-17 04:05:15

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Improve the user description requirement by */
	/* specifying the need for debouncing for the push */
	/* button connected to pin D4 using the EasyButton */
	/* library. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <EasyButton.h> // https://github.com/evert-arias/EasyButton

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t BUTTON_PIN = 4;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
EasyButton button(BUTTON_PIN);

void onPressed()
{
  Serial.println(""Button pressed"");
}

void setup(void)
{
  // put your setup code here, to run once:
  Serial.begin(115200);
  Serial.println();
  Serial.println("">>> EasyButton pressed example <<<"");

  // Initialize the EasyButton object with debouncing for the push button connected to pin D4 using the EasyButton library
  button.begin();
  button.onPressed(onPressed);
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  button.read();
}

/* END CODE */"
23rRx08R,is_VIP,naren_paste,Python,Thursday 16th of May 2024 10:56:45 PM CDT,"is_vip = True
age = 30

if is_vip:
    if age >= 18:
        if age < 60:
            print(""Welcome VIP customer"")
        else:
            print(""You are a VIP customer and you are eligible to get senior citizen discount"")
    else:
        print(""You are not a VIP customer"")
else:
    print(""You are not VIP, regular price is applicable"")
"
rMBYj3X1,goaccess.py,tranch,Python,Thursday 16th of May 2024 10:47:49 PM CDT,"import re
import pandas as pd

from sys import stdin

regex = r""""""(?P<ipaddress>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}) - - \[(?P<dateandtime>\d{2}\/[a-z]{3}\/\d{4}:\d{2}:\d{2}:\d{2} (\+|\-)\d{4})\] ((\""(GET|POST) )(?P<url>.+)(http\/1\.1"")) (?P<statuscode>\d{3}) (?P<bytessent>\d+) ([""](?P<refferer>(\-)|(.+))[""]) ([""](?P<useragent>.+)[""])""""""
p = re.compile(regex, re.IGNORECASE)
df = pd.DataFrame([p.match(l).groupdict() for l in stdin.readlines() if p.match(l)])

print(df.head())
"
MxjJLVVE,Jump,s99889989,Java,Thursday 16th of May 2024 09:58:46 PM CDT,"public void aiStep() {
      if (this.noJumpDelay > 0) {
         --this.noJumpDelay;
      }

      if (this.isControlledByLocalInstance()) {
         this.lerpSteps = 0;
         this.syncPacketPositionCodec(this.getX(), this.getY(), this.getZ());
      }

      if (this.lerpSteps > 0) {
         this.lerpPositionAndRotationStep(this.lerpSteps, this.lerpX, this.lerpY, this.lerpZ, this.lerpYRot, this.lerpXRot);
         --this.lerpSteps;
      } else if (!this.isEffectiveAi()) {
         this.setDeltaMovement(this.getDeltaMovement().scale(0.98D));
      }

      if (this.lerpHeadSteps > 0) {
         this.lerpHeadRotationStep(this.lerpHeadSteps, this.lerpYHeadRot);
         --this.lerpHeadSteps;
      }

      Vec3 vec3 = this.getDeltaMovement();
      double d0 = vec3.x;
      double d1 = vec3.y;
      double d2 = vec3.z;
      if (Math.abs(vec3.x) < 0.003D) {
         d0 = 0.0D;
      }

      if (Math.abs(vec3.y) < 0.003D) {
         d1 = 0.0D;
      }

      if (Math.abs(vec3.z) < 0.003D) {
         d2 = 0.0D;
      }

      this.setDeltaMovement(d0, d1, d2);
      this.level().getProfiler().push(""ai"");
      if (this.isImmobile()) {
         this.jumping = false;
         this.xxa = 0.0F;
         this.zza = 0.0F;
      } else if (this.isEffectiveAi()) {
         this.level().getProfiler().push(""newAi"");
         this.serverAiStep();
         this.level().getProfiler().pop();
      }

      this.level().getProfiler().pop();
      this.level().getProfiler().push(""jump"");
      if (this.jumping && this.isAffectedByFluids()) {
         double d3;
         var fluidType = this.getMaxHeightFluidType();
         if (!fluidType.isAir())
            d3 = this.getFluidTypeHeight(fluidType);
         else
         if (this.isInLava()) {
            d3 = this.getFluidHeight(FluidTags.LAVA);
         } else {
            d3 = this.getFluidHeight(FluidTags.WATER);
         }

         boolean flag = this.isInWater() && d3 > 0.0D;
         double d4 = this.getFluidJumpThreshold();
         if (!flag || this.onGround() && !(d3 > d4)) {
            if (!this.isInLava() || this.onGround() && !(d3 > d4)) {
               if (fluidType.isAir() || this.onGround() && !(d3 > d4)) {
               if ((this.onGround() || flag && d3 <= d4) && this.noJumpDelay == 0) {
                  this.jumpFromGround();
                  this.noJumpDelay = 10;
               }
               } else this.jumpInFluid(fluidType);
            } else {
               this.jumpInFluid(net.minecraftforge.common.ForgeMod.LAVA_TYPE.get());
            }
         } else {
            this.jumpInFluid(net.minecraftforge.common.ForgeMod.WATER_TYPE.get());
         }
      } else {
         this.noJumpDelay = 0;
      }

      this.level().getProfiler().pop();
      this.level().getProfiler().push(""travel"");
      this.xxa *= 0.98F;
      this.zza *= 0.98F;
      this.updateFallFlying();
      AABB aabb = this.getBoundingBox();
      Vec3 vec31 = new Vec3((double)this.xxa, (double)this.yya, (double)this.zza);
      if (this.hasEffect(MobEffects.SLOW_FALLING) || this.hasEffect(MobEffects.LEVITATION)) {
         this.resetFallDistance();
      }

      label104: {
         LivingEntity livingentity = this.getControllingPassenger();
         if (livingentity instanceof Player player) {
            if (this.isAlive()) {
               this.travelRidden(player, vec31);
               break label104;
            }
         }

         this.travel(vec31);
      }

      this.level().getProfiler().pop();
      this.level().getProfiler().push(""freezing"");
      if (!this.level().isClientSide && !this.isDeadOrDying()) {
         int i = this.getTicksFrozen();
         if (this.isInPowderSnow && this.canFreeze()) {
            this.setTicksFrozen(Math.min(this.getTicksRequiredToFreeze(), i + 1));
         } else {
            this.setTicksFrozen(Math.max(0, i - 2));
         }
      }

      this.removeFrost();
      this.tryAddFrost();
      if (!this.level().isClientSide && this.tickCount % 40 == 0 && this.isFullyFrozen() && this.canFreeze()) {
         this.hurt(this.damageSources().freeze(), 1.0F);
      }

      this.level().getProfiler().pop();
      this.level().getProfiler().push(""push"");
      if (this.autoSpinAttackTicks > 0) {
         --this.autoSpinAttackTicks;
         this.checkAutoSpinAttack(aabb, this.getBoundingBox());
      }

      this.pushEntities();
      this.level().getProfiler().pop();
      if (!this.level().isClientSide && this.isSensitiveToWater() && this.isInWaterRainOrBubble()) {
         this.hurt(this.damageSources().drown(), 1.0F);
      }

   }"
QzhaK6Cv,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🎁,ssss50w,GetText,Thursday 16th of May 2024 09:52:17 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
17 May 2024"
m0pbNbQ2,Aura (Updated),meromerc,HTML,Thursday 16th of May 2024 09:51:59 PM CDT,"<!--
  
    AURA
    by meromercury
    
    released 4/20/24 || updated 5/16/24
    
    FontAwesome icons included, remove <! -- and -- > to use.
    See the FontAwesome website for a full list of icon options.
    
      accent color: #c4205a
      highlight and use ctrl+F to change
 
--->


<div class=""container col-sm-12 col-md-8 col-lg-6 mb-4"">

  <!----- place your image URL between the ( parentheses ) ----->
    <div class=""card rounded-0 bg-faded"" style=""height:125px;width:100%;
    background-image:url(IMAGE URL);
    background-size:cover;background-position:center center;border: 0px;""></div>
    
    <!--  -->
    <div class=""container py-3"">
    <div class=""card w-100 text-uppercase text-center bg-none border-top-0 border-bottom-0 rounded-0 py-3 px-2 display-4"" style=""color:#c4205a ;letter-spacing:.1em;border: 2px solid;"">
  
  <!----- quote or name ----->
      <p>
        Do you want to see the girl who lives <b>behind the aura?</b>
      </p>
    </div>
    </div>

  <div class=""card px-0 rounded-0 bg-faded"" style="";width:100%;border-width:2px;border:0px solid #c4205a ;"">

<!----- BENEATH THIS LINE: remove the <! --  -- > AND the words to use the fontawesome icons ----->

    <div class=""row m-3 mb-3"" style=""font-size:16px"">
      <div class=""col"">
        <div class=""d-inline-flex w-100 my-0"">
          <span class=""my-2 font-weight-bold"" style=""color:#c4205a"">
            
            <!--
            <i class=""fa-duotone fa-address-card fa-lg""></i> 
            -->
            NAME
            
          </span>
          <hr class=""flex-grow-1 mx-4 my-auto"">
          <span class=""my-2"">
            info
          </span>
        </div>
        <div class=""d-inline-flex w-100"">
          <span class=""my-2 font-weight-bold"" style=""color:#c4205a"">
            
            <!--
            <i class=""fa-duotone fa-clock fa-lg""></i> 
            -->
            AGE
            
          </span>
          <hr class=""flex-grow-1 mx-4 my-auto"">
          <span class=""my-2"">
            info
          </span>
        </div>
        <div class=""d-inline-flex w-100"">
          <span class=""my-2 font-weight-bold"" style=""color:#c4205a"">
            
            <!--
            <i class=""fa-solid fa-person-dress-simple fa-lg""></i> 
            -->
            PRONOUNS
            
          </span>
          <hr class=""flex-grow-1 mx-4 my-auto"">
          <span class=""my-2"">
            info
          </span>
        </div>
      </div>
      
      <div class=""card h-auto w-0 m-2 mt-3 d-none d-lg-block rounded-0"" style=""border:2px solid #c4205a""></div>
      
      <div class=""col"">
        <div class=""d-inline-flex w-100 my-0"">
          <span class=""my-2 font-weight-bold"" style=""color:#c4205a"">
            
            <!--
            <i class=""fa-duotone fa-calendar-days fa-lg""></i> 
            -->
            OBTAINED
            
          </span>
          <hr class=""flex-grow-1 mx-4 my-auto"">
          <span class=""my-2"">
            info
          </span>
        </div>
        <div class=""d-inline-flex w-100"">
          <span class=""my-2 font-weight-bold"" style=""color:#c4205a"">
            
            <!--
            <i class=""fa-duotone fa-paintbrush fa-lg""></i> 
            -->
            DESIGNER
            
          </span>
          <hr class=""flex-grow-1 mx-4 my-auto"">
          <span class=""my-2"">
            info
          </span>
        </div>
        <div class=""d-inline-flex w-100"">
          <span class=""my-2 font-weight-bold"" style=""color:#c4205a"">
            
            <!--
            <i class=""fa-sharp fa-solid fa-dollar-sign fa-lg""></i> 
            -->
            WORTH
            
          </span>
          <hr class=""flex-grow-1 mx-4 my-auto"">
          <span class=""my-2"">
            info
          </span>
        </div>
      </div>
    </div>
   <!------- end rows ------->
   
   
   <!------- bio start ------->
   <div class=""mt-0 mb-3 text-muted table-responsive"" style=""max-height:120px;font-size:12px;padding:0px 28px 0px 28px"">
      
      <p>This scrolls, but shorter looks better. Or delete this paragraph if you don't want text. Remember to use < p > tags for paragraphs. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec mollis justo sollicitudin posuere sollicitudin. Phasellus ut pellentesque elit. Fusce magna turpis, posuere tristique eros vitae, dapibus convallis odio. Nunc lobortis id nunc at efficitur. Nullam arcu velit, interdum a turpis vel, consectetur euismod ligula. Fusce quis sem tincidunt, auctor sapien vel, vulputate dolor.</p>
      
      <!-- paste above this line to expand the biography -->
     </div>
   <!------- end bio ------->
   
   <!------- player start ------->
   <div class=""px-4 mt-0 mb-3"">
     
      <div class=""d-inline-flex w-100 justify-content-between"" style=""font-size:18px"">
          <a class=""my-auto ml-2 px-0 btn border-0 melody-embed"" style=""color:#c4205a;"" href=""#"">
            <iframe frameborder=""0"" style=""height:30px;width:30px;opacity:0.0001;position:absolute;""
              
              src=""https://www.youtube.com/embed/YaVSTFv9QOc"">
            <!--
            MUSIC PLAYER TUTORIAL
            
            for playlists, copy everything after ?list= and paste at the end:
            https://www.youtube.com/embed/videoseries?
            ^^ then replace ""URL"" with that
            
            for songs, copy everything after watch?v= and replace ""URL"" with that
            
            remember to keep the ""QUOTATION MARKS"" around the link or else it could break.
            -->            
              
            </iframe>
            <i class=""fa-regular fa-circle-play fa-2x""></i>
          </a>
          <hr class=""flex-grow-1 mx-4 my-auto d-none d-lg-block"">
          <p class=""my-2"" style=""letter-spacing:.2em;"">
            <span style=""color:#c4205a;font-weight:bold""><i class=""fa-solid fa-music fa-sm pr-2""></i>
            TITLE
            </span>-<span style=""font-style:italic;"">
            ARTIST
            </span>
          </p>
      </div>
     
   </div>
</div>

<div class=""m-1 text-right text-primary"" style=""font-size:14px"">
<a target=""_blank"" href=""https://toyhou.se/meromercury"" data-toggle=""tooltip"" title=""made by cass"" style=""color:#A4A4A4;font-weight:600""><i class=""fal fa-code""></i></a></div>
</div>"
K9GDUCBY,com.ettaln_0.0.1-2024-05-17-10-36,dannybuntu,Bash,Thursday 16th of May 2024 09:37:05 PM CDT,"danny@lw10:~/work/builds/com.ettaln/compare-apks$ diff -r fromPlay/ fromBuild/
Binary files fromPlay/AndroidManifest.xml and fromBuild/AndroidManifest.xml differ
Binary files fromPlay/assets/dexopt/baseline.prof and fromBuild/assets/dexopt/baseline.prof differ
Binary files fromPlay/assets/dexopt/baseline.profm and fromBuild/assets/dexopt/baseline.profm differ
Binary files fromPlay/assets/index.android.bundle and fromBuild/assets/index.android.bundle differ
Binary files fromPlay/classes2.dex and fromBuild/classes2.dex differ
Binary files fromPlay/classes3.dex and fromBuild/classes3.dex differ
Binary files fromPlay/classes.dex and fromBuild/classes.dex differ
Only in fromBuild/: lib
Only in fromBuild/res: 06.png
Only in fromBuild/res: 09.9.png
Only in fromBuild/res: 0b.xml
Only in fromBuild/res: 0H.9.png
Only in fromBuild/res: 0I.png
Only in fromBuild/res: -0.xml
Only in fromBuild/res: 0y.png
Only in fromBuild/res: 11.png
Only in fromBuild/res: 18.png
Only in fromBuild/res: 19.png
Only in fromBuild/res: 1g.xml
Only in fromBuild/res: 1L.xml
Only in fromBuild/res: 1N.xml
Only in fromBuild/res: 1S.png
Only in fromBuild/res: 1u.xml
Only in fromBuild/res: 1V.xml
Only in fromBuild/res: 1W.xml
Only in fromBuild/res: 1x.png
Only in fromBuild/res: 1y.xml
Only in fromBuild/res: 23.xml
Only in fromBuild/res: 27.png
Only in fromBuild/res: 2C.9.png
Only in fromBuild/res: 2D1.xml
Only in fromBuild/res: 2D.xml
Only in fromBuild/res: 2E.xml
Only in fromBuild/res: 2p.xml
Only in fromBuild/res: 33.9.png
Only in fromBuild/res: 35.png
Only in fromBuild/res: 36.xml
Only in fromBuild/res: 38.xml
Only in fromBuild/res: 3B.xml
Only in fromBuild/res: 3c.xml
Only in fromBuild/res: 3h.xml
Only in fromBuild/res: 3m.xml
Only in fromBuild/res: 3_.png
Only in fromBuild/res: 3x.xml
Only in fromBuild/res: 3z.xml
Only in fromBuild/res: 41.xml
Only in fromBuild/res: 43.xml
Only in fromBuild/res: 48.png
Only in fromBuild/res: 4_.9.png
Only in fromBuild/res: 4c.xml
Only in fromBuild/res: 4G.xml
Only in fromBuild/res: 4L.xml
Only in fromBuild/res: 4r.png
Only in fromBuild/res: 4u.xml
Only in fromBuild/res: 4W.xml
Only in fromBuild/res: 51.9.png
Only in fromBuild/res: 57.xml
Only in fromBuild/res: 5A.xml
Only in fromBuild/res: 5d.xml
Only in fromBuild/res: 5j.9.png
Only in fromBuild/res: 5J.png
Only in fromBuild/res: 5Q.png
Only in fromBuild/res: 5r.xml
Only in fromBuild/res: 5V.png
Only in fromBuild/res: 5z.9.png
Only in fromBuild/res: 5z.xml
Only in fromBuild/res: 65.xml
Only in fromBuild/res: _6.9.png
Only in fromBuild/res: 6E.png
Only in fromBuild/res: 6e.xml
Only in fromBuild/res: 6I.xml
Only in fromBuild/res: 6J.xml
Only in fromBuild/res: 6w.9.png
Only in fromBuild/res: _6.xml
Only in fromBuild/res: 72.9.png
Only in fromBuild/res: 75.xml
Only in fromBuild/res: 7c.png
Only in fromBuild/res: 7E.xml
Only in fromBuild/res: 7F.9.png
Only in fromBuild/res: 7P.9.png
Only in fromBuild/res: _7.png
Only in fromBuild/res: 7r.xml
Only in fromBuild/res: 7T.9.png
Only in fromBuild/res: 7u.xml
Only in fromBuild/res: 7W.xml
Only in fromBuild/res: 85.png
Only in fromBuild/res: 8s.xml
Only in fromBuild/res: 8t.png
Only in fromBuild/res: 8T.png
Only in fromBuild/res: 8V.9.png
Only in fromBuild/res: 8w.9.png
Only in fromBuild/res: 93.9.png
Only in fromBuild/res: 9A.xml
Only in fromBuild/res: 9h.xml
Only in fromBuild/res: 9S.xml
Only in fromBuild/res: 9t.png
Only in fromBuild/res: 9V.png
Only in fromBuild/res: 9X.9.png
Only in fromBuild/res: 9y.xml
Only in fromBuild/res: 9Z.png
Only in fromBuild/res: 9z.xml
Only in fromBuild/res: A1.xml
Only in fromBuild/res: a2.xml
Only in fromBuild/res: a6.png
Only in fromBuild/res: a8.png
Only in fromBuild/res: aA.xml
Only in fromBuild/res: AA.xml
Only in fromBuild/res: AB.9.png
Only in fromBuild/res: Ac.9.png
Only in fromBuild/res: aD.xml
Only in fromBuild/res: Ae.xml
Only in fromBuild/res: Af.xml
Only in fromBuild/res: AH.xml
Only in fromBuild/res: aj.xml
Only in fromBuild/res: AK.xml
Only in fromBuild/res: Al.xml
Only in fromPlay/res: anim
Only in fromPlay/res: animator
Only in fromPlay/res: animator-v21
Only in fromPlay/res: anim-v21
Only in fromPlay/res: anim-v33
Only in fromBuild/res: an.png
Only in fromBuild/res: aO.9.png
Only in fromBuild/res: Ao.png
Only in fromBuild/res: A-.png
Only in fromBuild/res: AP.xml
Only in fromBuild/res: aR.xml
Only in fromBuild/res: au.9.png
Only in fromBuild/res: aV.xml
Only in fromBuild/res: aY.png
Only in fromBuild/res: AZ.xml
Only in fromBuild/res: B4.xml
Only in fromBuild/res: B8.xml
Only in fromBuild/res: b91.xml
Only in fromBuild/res: b9.xml
Only in fromBuild/res: BA.xml
Only in fromBuild/res: bb.xml
Only in fromBuild/res: bC.xml
Only in fromBuild/res: BG.png
Only in fromBuild/res: bK.9.png
Only in fromBuild/res: bl.xml
Only in fromBuild/res: BL.xml
Only in fromBuild/res: bn.xml
Only in fromBuild/res: BO.png
Only in fromBuild/res: bT.xml
Only in fromBuild/res: bu.9.png
Only in fromBuild/res: bW.png
Only in fromBuild/res: B-.xml
Only in fromBuild/res: Bx.xml
Only in fromBuild/res: C0.png
Only in fromBuild/res: c4.xml
Only in fromBuild/res: C7.xml
Only in fromBuild/res: C9.png
Only in fromBuild/res: ca.9.png
Only in fromBuild/res: CA.9.png
Only in fromBuild/res: Cb.xml
Only in fromBuild/res: cc.xml
Only in fromBuild/res: cf.xml
Only in fromBuild/res: cF.xml
Only in fromBuild/res: Cg.9.png
Only in fromBuild/res: CG.png
Only in fromBuild/res: cH.xml
Only in fromBuild/res: cM.9.png
Only in fromBuild/res: CQ.xml
Only in fromBuild/res: cs.xml
Only in fromBuild/res: Cv.xml
Only in fromBuild/res: cw.xml
Only in fromBuild/res: -c.xml
Only in fromBuild/res: c_.xml
Only in fromBuild/res: d1.9.png
Only in fromBuild/res: D2.png
Only in fromBuild/res: d2.xml
Only in fromBuild/res: d4.png
Only in fromBuild/res: Df.xml
Only in fromBuild/res: DF.xml
Only in fromBuild/res: dH.9.png
Only in fromBuild/res: Di.png
Only in fromBuild/res: di.xml
Only in fromBuild/res: DP1.xml
Only in fromBuild/res: dp.xml
Only in fromBuild/res: DP.xml
Only in fromPlay/res: drawable
Only in fromPlay/res: drawable-anydpi-v23
Only in fromPlay/res: drawable-mdpi-v4
Only in fromPlay/res: drawable-v21
Only in fromPlay/res: drawable-v23
Only in fromPlay/res: drawable-v29
Only in fromPlay/res: drawable-watch-v20
Only in fromBuild/res: DS.xml
Only in fromBuild/res: Dt.9.png
Only in fromBuild/res: dv.9.png
Only in fromBuild/res: dV.xml
Only in fromBuild/res: _d.xml
Only in fromBuild/res: DZ.xml
Only in fromBuild/res: e1.xml
Only in fromBuild/res: E1.xml
Only in fromBuild/res: E2.9.png
Only in fromBuild/res: e4.9.png
Only in fromBuild/res: E71.xml
Only in fromBuild/res: E7.xml
Only in fromBuild/res: eB.9.png
Only in fromBuild/res: Eb.9.png
Only in fromBuild/res: Ec.png
Only in fromBuild/res: ee.png
Only in fromBuild/res: ei.9.png
Only in fromBuild/res: ej.xml
Only in fromBuild/res: Ej.xml
Only in fromBuild/res: eK.9.png
Only in fromBuild/res: em.xml
Only in fromBuild/res: eN.xml
Only in fromBuild/res: _e.png
Only in fromBuild/res: ER.9.png
Only in fromBuild/res: Er.png
Only in fromBuild/res: Et.png
Only in fromBuild/res: eU.xml
Only in fromBuild/res: EU.xml
Only in fromBuild/res: ew.xml
Only in fromBuild/res: Ex.xml
Only in fromBuild/res: Ey.xml
Only in fromBuild/res: f1.xml
Only in fromBuild/res: f7.xml
Only in fromBuild/res: F8.9.png
Only in fromBuild/res: f9.png
Only in fromBuild/res: fA.png
Only in fromBuild/res: fb.png
Only in fromBuild/res: fD.9.png
Only in fromBuild/res: FG.png
Only in fromBuild/res: Fg.xml
Only in fromBuild/res: fL.xml
Only in fromBuild/res: FM.9.png
Only in fromBuild/res: fr.9.png
Only in fromBuild/res: fv.9.png
Only in fromBuild/res: fv.xml
Only in fromBuild/res: Fx1.9.png
Only in fromBuild/res: Fx.9.png
Only in fromBuild/res: -F.xml
Only in fromBuild/res: fx.png
Only in fromBuild/res: FY.png
Only in fromBuild/res: fy.xml
Only in fromBuild/res: fZ.9.png
Only in fromBuild/res: FZ.xml
Only in fromBuild/res: G7.png
Only in fromBuild/res: gA.xml
Only in fromBuild/res: Gb.xml
Only in fromBuild/res: gE.xml
Only in fromBuild/res: Ge.xml
Only in fromBuild/res: gG.9.png
Only in fromBuild/res: gG.xml
Only in fromBuild/res: gI.xml
Only in fromBuild/res: gL.9.png
Only in fromBuild/res: gl.xml
Only in fromBuild/res: Gn.xml
Only in fromBuild/res: _g.png
Only in fromBuild/res: GQ.xml
Only in fromBuild/res: gT.xml
Only in fromBuild/res: gV.9.png
Only in fromBuild/res: gW.xml
Only in fromBuild/res: gZ.xml
Only in fromBuild/res: Gz.xml
Only in fromBuild/res: h0.9.png
Only in fromBuild/res: H1.xml
Only in fromBuild/res: h-.9.png
Only in fromBuild/res: HA.xml
Only in fromBuild/res: HC.xml
Only in fromBuild/res: he.xml
Only in fromBuild/res: HE.xml
Only in fromBuild/res: Hh.xml
Only in fromBuild/res: Hi.9.png
Only in fromBuild/res: hj.9.png
Only in fromBuild/res: Hp1.xml
Only in fromBuild/res: Hp.xml
Only in fromBuild/res: HQ.xml
Only in fromBuild/res: HS.9.png
Only in fromBuild/res: hu.xml
Only in fromBuild/res: HV.xml
Only in fromBuild/res: h_.xml
Only in fromBuild/res: Hy.xml
Only in fromBuild/res: I2.xml
Only in fromBuild/res: I3.png
Only in fromBuild/res: I7.xml
Only in fromBuild/res: ib.xml
Only in fromBuild/res: IC.png
Only in fromBuild/res: ID.xml
Only in fromBuild/res: Ig.xml
Only in fromBuild/res: ih.xml
Only in fromBuild/res: iH.xml
Only in fromBuild/res: ii.9.png
Only in fromBuild/res: iL.xml
Only in fromBuild/res: In.9.png
Only in fromPlay/res: interpolator
Only in fromPlay/res: interpolator-v21
Only in fromBuild/res: Iv.xml
Only in fromBuild/res: iw1.xml
Only in fromBuild/res: Iw.png
Only in fromBuild/res: iw.xml
Only in fromBuild/res: J6.9.png
Only in fromBuild/res: J71.xml
Only in fromBuild/res: J7.xml
Only in fromBuild/res: J8.9.png
Only in fromBuild/res: j9.9.png
Only in fromBuild/res: j-.9.png
Only in fromBuild/res: j9.xml
Only in fromBuild/res: jB.xml
Only in fromBuild/res: JC.png
Only in fromBuild/res: Jc.xml
Only in fromBuild/res: jh.9.png
Only in fromBuild/res: jI.xml
Only in fromBuild/res: jK.9.png
Only in fromBuild/res: jm.xml
Only in fromBuild/res: Jo.xml
Only in fromBuild/res: jr.xml
Only in fromBuild/res: jR.xml
Only in fromBuild/res: jt.xml
Only in fromBuild/res: JV.png
Only in fromBuild/res: jw.xml
Only in fromBuild/res: jy.png
Only in fromBuild/res: jZ.9.png
Only in fromBuild/res: k3.xml
Only in fromBuild/res: K3.xml
Only in fromBuild/res: kb.png
Only in fromBuild/res: kB.xml
Only in fromBuild/res: kD.xml
Only in fromBuild/res: Kd.xml
Only in fromBuild/res: kI.xml
Only in fromBuild/res: kK.9.png
Only in fromBuild/res: kL.xml
Only in fromBuild/res: kM.xml
Only in fromBuild/res: Kp.9.png
Only in fromBuild/res: k_.png
Only in fromBuild/res: ks.xml
Only in fromBuild/res: Ks.xml
Only in fromBuild/res: Kv.xml
Only in fromBuild/res: l2.xml
Only in fromBuild/res: L2.xml
Only in fromBuild/res: l6.png
Only in fromPlay/res: layout
Only in fromPlay/res: layout-land
Only in fromPlay/res: layout-sw600dp-v13
Only in fromPlay/res: layout-v21
Only in fromPlay/res: layout-v26
Only in fromPlay/res: layout-watch-v20
Only in fromBuild/res: ld.9.png
Only in fromBuild/res: LD.png
Only in fromBuild/res: le.png
Only in fromBuild/res: lE.xml
Only in fromBuild/res: lf.xml
Only in fromBuild/res: lg.xml
Only in fromBuild/res: LH.xml
Only in fromBuild/res: lJ.xml
Only in fromBuild/res: ll.xml
Only in fromBuild/res: LN.xml
Only in fromBuild/res: Lo.png
Only in fromBuild/res: L_.png
Only in fromBuild/res: Lq.9.png
Only in fromBuild/res: lR.xml
Only in fromBuild/res: LT.xml
Only in fromBuild/res: lW.xml
Only in fromBuild/res: _l.xml
Only in fromBuild/res: l-.xml
Only in fromBuild/res: m3.9.png
Only in fromBuild/res: M4.xml
Only in fromBuild/res: m6.xml
Only in fromBuild/res: M6.xml
Only in fromBuild/res: m9.9.png
Only in fromBuild/res: Mb.png
Only in fromBuild/res: MC.xml
Only in fromPlay/res: menu
Only in fromBuild/res: mf.xml
Only in fromBuild/res: MF.xml
Only in fromBuild/res: Mh.xml
Only in fromBuild/res: MH.xml
Only in fromPlay/res: mipmap-hdpi-v4
Only in fromPlay/res: mipmap-mdpi-v4
Only in fromPlay/res: mipmap-xhdpi-v4
Only in fromPlay/res: mipmap-xxhdpi-v4
Only in fromPlay/res: mipmap-xxxhdpi-v4
Only in fromBuild/res: mi.xml
Only in fromBuild/res: Ml.9.png
Only in fromBuild/res: mn.png
Only in fromBuild/res: mN.xml
Only in fromBuild/res: MN.xml
Only in fromBuild/res: MP.xml
Only in fromBuild/res: MQ.xml
Only in fromBuild/res: Mr.9.png
Only in fromBuild/res: mR.xml
Only in fromBuild/res: mU.png
Only in fromBuild/res: mw.xml
Only in fromBuild/res: MY.xml
Only in fromBuild/res: Mz.9.png
Only in fromBuild/res: n0.png
Only in fromBuild/res: n2.xml
Only in fromBuild/res: n6.xml
Only in fromBuild/res: n9.9.png
Only in fromBuild/res: N9.xml
Only in fromBuild/res: NA.xml
Only in fromBuild/res: nB.png
Only in fromBuild/res: nd1.png
Only in fromBuild/res: nd.png
Only in fromBuild/res: Nd.xml
Only in fromBuild/res: NI.xml
Only in fromBuild/res: Nk.9.png
Only in fromBuild/res: nl.xml
Only in fromBuild/res: NM.9.png
Only in fromBuild/res: nm.png
Only in fromBuild/res: nN.png
Only in fromBuild/res: NP.9.png
Only in fromBuild/res: n_.png
Only in fromBuild/res: NR.xml
Only in fromBuild/res: ns.png
Only in fromBuild/res: NS.png
Only in fromBuild/res: NU.xml
Only in fromBuild/res: -N.xml
Only in fromBuild/res: nz.xml
Only in fromBuild/res: o1.9.png
Only in fromBuild/res: o1.xml
Only in fromBuild/res: O3.9.png
Only in fromBuild/res: O8.xml
Only in fromBuild/res: OB.png
Only in fromBuild/res: Od.xml
Only in fromBuild/res: Of1.9.png
Only in fromBuild/res: Of.9.png
Only in fromBuild/res: Of.xml
Only in fromBuild/res: OK.xml
Only in fromBuild/res: on.xml
Only in fromBuild/res: oR.9.png
Only in fromBuild/res: Ot.png
Only in fromBuild/res: Ou.png
Only in fromBuild/res: Ov.xml
Only in fromBuild/res: oW.xml
Only in fromBuild/res: Ow.xml
Only in fromBuild/res: -o.xml
Only in fromBuild/res: o-.xml
Only in fromBuild/res: oz.xml
Only in fromBuild/res: P6.xml
Only in fromBuild/res: p7.xml
Only in fromBuild/res: PA.xml
Only in fromBuild/res: Pb.9.png
Only in fromBuild/res: pF.9.png
Only in fromBuild/res: PF.xml
Only in fromBuild/res: Pi.9.png
Only in fromBuild/res: Pp.xml
Only in fromBuild/res: Pq.9.png
Only in fromBuild/res: PS.xml
Only in fromBuild/res: Pu.xml
Only in fromBuild/res: Px.xml
Only in fromBuild/res: q0.xml
Only in fromBuild/res: Q11.9.png
Only in fromBuild/res: Q1.9.png
Only in fromBuild/res: q1.xml
Only in fromBuild/res: Q1.xml
Only in fromBuild/res: q4.xml
Only in fromBuild/res: q61.xml
Only in fromBuild/res: q6.xml
Only in fromBuild/res: QD.9.png
Only in fromBuild/res: QF.xml
Only in fromBuild/res: qK.xml
Only in fromBuild/res: qL.xml
Only in fromBuild/res: -q.png
Only in fromBuild/res: qQ.xml
Only in fromBuild/res: qr.9.png
Only in fromBuild/res: qS.xml
Only in fromBuild/res: Qv.png
Only in fromBuild/res: Qw.xml
Only in fromBuild/res: _Q.xml
Only in fromBuild/res: r0.xml
Only in fromBuild/res: R2.xml
Only in fromBuild/res: r5.xml
Only in fromBuild/res: R6.xml
Only in fromBuild/res: R8.png
Only in fromBuild/res: rb.9.png
Only in fromBuild/res: RB.png
Only in fromBuild/res: rc.png
Only in fromBuild/res: rc.xml
Only in fromBuild/res: rE.xml
Only in fromBuild/res: rI.png
Only in fromBuild/res: rj.9.png
Only in fromBuild/res: rJ.xml
Only in fromBuild/res: rM.xml
Only in fromBuild/res: rn.png
Only in fromBuild/res: Rq.xml
Only in fromBuild/res: rr.png
Only in fromBuild/res: rt.xml
Only in fromBuild/res: RT.xml
Only in fromBuild/res: Ru.xml
Only in fromBuild/res: rV.xml
Only in fromBuild/res: r-.xml
Only in fromBuild/res: rX.xml
Only in fromBuild/res: Rx.xml
Only in fromBuild/res: s2.9.png
Only in fromBuild/res: s3.9.png
Only in fromBuild/res: s6.xml
Only in fromBuild/res: SD.png
Only in fromBuild/res: Sf.xml
Only in fromBuild/res: SG.xml
Only in fromBuild/res: sh.xml
Only in fromBuild/res: SH.xml
Only in fromBuild/res: si.xml
Only in fromBuild/res: sk.png
Only in fromBuild/res: sL.9.png
Only in fromBuild/res: sn.9.png
Only in fromBuild/res: SO.xml
Only in fromBuild/res: Sp.xml
Only in fromBuild/res: SQ.xml
Only in fromBuild/res: Sr.png
Only in fromBuild/res: ss.xml
Only in fromBuild/res: SS.xml
Only in fromBuild/res: st.9.png
Only in fromBuild/res: St.xml
Only in fromBuild/res: SU.xml
Only in fromBuild/res: T2.9.png
Only in fromBuild/res: T6.png
Only in fromBuild/res: t9.xml
Only in fromBuild/res: tb.xml
Only in fromBuild/res: TF.9.png
Only in fromBuild/res: tf.png
Only in fromBuild/res: TH.xml
Only in fromBuild/res: tj.9.png
Only in fromBuild/res: tk.xml
Only in fromBuild/res: TK.xml
Only in fromBuild/res: Tl.9.png
Only in fromBuild/res: tM.9.png
Only in fromBuild/res: tm.xml
Only in fromBuild/res: to1.xml
Only in fromBuild/res: to.xml
Only in fromBuild/res: TQ.png
Only in fromBuild/res: tQ.xml
Only in fromBuild/res: tr.9.png
Only in fromBuild/res: Ts.xml
Only in fromBuild/res: Tx.9.png
Only in fromBuild/res: u3.png
Only in fromBuild/res: u3.xml
Only in fromBuild/res: U3.xml
Only in fromBuild/res: uB.9.png
Only in fromBuild/res: UE.png
Only in fromBuild/res: uF.xml
Only in fromBuild/res: ug.xml
Only in fromBuild/res: Ug.xml
Only in fromBuild/res: uo.xml
Only in fromBuild/res: UO.xml
Only in fromBuild/res: U_.png
Only in fromBuild/res: uP.xml
Only in fromBuild/res: UQ1.xml
Only in fromBuild/res: UQ.xml
Only in fromBuild/res: Us.9.png
Only in fromBuild/res: US.xml
Only in fromBuild/res: uu.png
Only in fromBuild/res: UU.xml
Only in fromBuild/res: uW.9.png
Only in fromBuild/res: -u.xml
Only in fromBuild/res: Uz.xml
Only in fromBuild/res: V-1.9.png
Only in fromBuild/res: V1.xml
Only in fromBuild/res: v2.xml
Only in fromBuild/res: V4.png
Only in fromBuild/res: v6.9.png
Only in fromBuild/res: v8.xml
Only in fromBuild/res: V-.9.png
Only in fromBuild/res: V9.png
Only in fromBuild/res: V9.xml
Only in fromBuild/res: va.png
Only in fromBuild/res: va.xml
Only in fromBuild/res: VB.xml
Only in fromBuild/res: vc.xml
Only in fromBuild/res: VC.xml
Only in fromBuild/res: vd.png
Only in fromBuild/res: vD.xml
Only in fromBuild/res: Ve.xml
Only in fromBuild/res: vH.xml
Only in fromBuild/res: vI.png
Only in fromBuild/res: VK.9.png
Only in fromBuild/res: vl.xml
Only in fromBuild/res: Vl.xml
Only in fromBuild/res: vM.png
Only in fromBuild/res: vM.xml
Only in fromBuild/res: vp.xml
Only in fromBuild/res: vP.xml
Only in fromBuild/res: Vq.png
Only in fromBuild/res: VW1.png
Only in fromBuild/res: VW.png
Only in fromBuild/res: VW.xml
Only in fromBuild/res: vy.9.png
Only in fromBuild/res: vz.xml
Only in fromBuild/res: w4.xml
Only in fromBuild/res: wA.xml
Only in fromBuild/res: wd.xml
Only in fromBuild/res: wG.xml
Only in fromBuild/res: WG.xml
Only in fromBuild/res: Wh.png
Only in fromBuild/res: wi1.9.png
Only in fromBuild/res: wi.9.png
Only in fromBuild/res: wI.xml
Only in fromBuild/res: wK.9.png
Only in fromBuild/res: wL.9.png
Only in fromBuild/res: wN.png
Only in fromBuild/res: Wn.xml
Only in fromBuild/res: wo.xml
Only in fromBuild/res: WO.xml
Only in fromBuild/res: W-.png
Only in fromBuild/res: WP.xml
Only in fromBuild/res: WT1.xml
Only in fromBuild/res: wT.png
Only in fromBuild/res: WT.xml
Only in fromBuild/res: wu.xml
Only in fromBuild/res: wY.xml
Only in fromBuild/res: x11.xml
Only in fromBuild/res: x1.xml
Only in fromBuild/res: X1.xml
Only in fromBuild/res: X3.9.png
Only in fromBuild/res: x5.9.png
Only in fromBuild/res: X5.png
Only in fromBuild/res: XB.xml
Only in fromPlay/res: xml
Only in fromBuild/res: XM.xml
Only in fromBuild/res: Xp.9.png
Only in fromBuild/res: Xs1.9.png
Only in fromBuild/res: Xs.9.png
Only in fromBuild/res: xs.xml
Only in fromBuild/res: XS.xml
Only in fromBuild/res: xy.xml
Only in fromBuild/res: Ya.png
Only in fromBuild/res: ya.xml
Only in fromBuild/res: yA.xml
Only in fromBuild/res: YA.xml
Only in fromBuild/res: YF.xml
Only in fromBuild/res: Yg.xml
Only in fromBuild/res: YH.9.png
Only in fromBuild/res: Yh.png
Only in fromBuild/res: YM.9.png
Only in fromBuild/res: yO.9.png
Only in fromBuild/res: yP.xml
Only in fromBuild/res: YQ.xml
Only in fromBuild/res: Yt.9.png
Only in fromBuild/res: YW.png
Only in fromBuild/res: -Y.xml
Only in fromBuild/res: yx.xml
Only in fromBuild/res: z1.xml
Only in fromBuild/res: z3.xml
Only in fromBuild/res: Z4.xml
Only in fromBuild/res: z5.9.png
Only in fromBuild/res: Za.xml
Only in fromBuild/res: ZF.xml
Only in fromBuild/res: zH.xml
Only in fromBuild/res: zq.xml
Only in fromBuild/res: Zt.png
Only in fromBuild/res: ZW.xml
Binary files fromPlay/resources.arsc and fromBuild/resources.arsc differ
Only in fromPlay/: stamp-cert-sha256
"
9SEjGXFJ,What You Know (Updated),meromerc,HTML,Thursday 16th of May 2024 09:23:49 PM CDT,"<!--

    WHAT YOU KNOW
    compact counterpart to IT'S GOOD FOR YOU
    
    a code by meromercury
    
    created: 06/13/20 // updated: 05/16/24
    
      accent color: #7154FB
      highlight and ctrl+F to change
      use fontawesome.com to change the symbols

-->

<div class=""container"">
<div class=""mx-auto"" style=""font-size:14px;max-width:950px;"">

<div class=""row no-gutters"">


<!-- LEFT IMAGE -->
<div class=""col-md-4 col-sm-12"" style=""z-index:-999;"">
    <!------- image will automatically center & cover - dimensions 610 H x 317 W ------->
      <div class=""card w-100"" style=""position:absolute;
          background-image:url('IMG URL HERE');
      border-radius:10px;background-size:cover;background-position:center;height:610px;z-index:-1;border: 2px dashed #7154FB"">

  </div>
</div>

<div class=""col-lg-8 col-sm-12 px-3 pl-3"" style=""z-index:1;"">
<div class=""card bg-faded p-3"" style=""height:610px; border-radius:10px; border:2px dashed #7154FB;"">

<!--------------------------- DETAILS --------------------------->

<div class=""card border-0 p-2 mb-3"">
  <div class=""row no-gutters"">
  <div class=""col-sm"">
    <ul class=""list-group list-group-flush"">
        <li class=""list-group-item d-flex justify-content-between"" >
          <i class=""fas fa-user"" style=""color:#7154FB""></i>
          Name</li>
        <li class=""list-group-item d-flex justify-content-between"">
          <i class=""fad fa-id-card"" style=""color:#7154FB""></i>
          Pronouns</li>
        <li class=""list-group-item d-flex justify-content-between"">
          <i class=""far fa-person-half-dress"" style=""color:#7154FB""></i>
          Identity</li>
      </ul>
  </div>
  
  <div class=""p-2 d-none d-lg-block"">
    <div class=""card h-100 w-0""></div>
  </div>
  <hr class=""w-100 my-0 d-lg-none"">
  
  <div class=""col-sm"">
    <ul class=""list-group list-group-flush"">
        <li class=""list-group-item d-flex justify-content-between"">
          <i class=""fad fa-clock"" style=""color:#7154FB""></i>
          Age</li>
        <li class=""list-group-item d-flex justify-content-between"">
          <i class=""fad fa-user-md"" style=""color:#7154FB""></i>
          Occupation</li>
        <li class=""list-group-item d-flex justify-content-between"">
          <i class=""fas fa-music"" style=""color:#7154FB""></i>
          <!------- replace the youtube link with your own, make sure there are ""quotes"" around the link ------->
          <a href=""https://www.youtube.com/watch?v=KpCcJY-rJSs"" style=""color:#7154FB"" target=_blank>
          Artist - Theme
        </a></li>
      </ul>
  </div>
  </div>
</div>

<!--------------------------- BIOGRAPHY --------------------------->

  <div class=""card border-0 container-fluid p-3"" style=""height:calc(100%); overflow-y:auto; overflow-x:hidden;"">
    
    <p>This scrolls, but keeping it short looks best. Don't forget the < p > tags for paragraphs!</p>
    
    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent tempus vehicula eros a rhoncus. Aenean auctor pallentesque elit, ut feugiat nibh molestie eu. Nunc sit amet lacus accumsan, tempus leo eu, condimentum mi. Morbi vitae ultrices sem. Aliquam euismod justo in nibh consectetur, id posuere eros viverra.</p>
    
<!-- optional list -- delete from here to /ul to remove-->
    <br>
    <ul style=""list-style-type:circle;"">
      <li>And I can tell just what you want</li>
      <li>You don't want to be alone</li>
      <li><u>You don't want to be alone</u></li>
      <li>And I can't say it's what you know</li>
      <li>But you've known it <b>the whole time</b></li>
      <li>Yeah, <i>you've known it the whole time</i></li>
    </ul>
    
  </div>

</div>

</div></div></div></div>

<!----- my credit! please don't touch this ----->
<div class=""m-1 text-center text-primary"" style=""font-size:14px"">
<a target=""_blank"" href=""https://toyhou.se/meromercury"" data-toggle=""tooltip"" title=""code"" style=""color:#A4A4A4;font-weight:600""><i class=""fal fa-code""></i></a></div>"
KDLyiX0f,scProj,j0h,SuperCollider,Thursday 16th of May 2024 08:52:54 PM CDT,"s.boot;

s.waitForBoot {
    // Initialize parameters
	a = 0; // mix
    b = 0; // roomsize
    c = 0; // damping
    d = 0; // amp
	s.defualt.synch;
};

// Load the sound
~sound = Buffer.read(s,""ABDW_Fyre_Gut_Kick.wav"" );

// Change Mix
~changeMix = { |temp1|
    // Assign the parameter value to the global variable Amp
    a = temp1;
    ""RoomSize value changed to:"".post;
    a.postln; // Print the new value
};

// Change RoomSize
~changeRoomSize = { |temp2|
    // Assign the parameter value to the global variable Amp
    b = temp2;
    ""RoomSize value changed to:"".post;
    b.postln; // Print the new value
};

// Change Damp
~changeDamping = { |temp3|
    // Assign the parameter value to the global variable Amp
    c = temp3;
    ""Damp value changed to:"".post;
    c.postln; // Print the new value
};

// Change Amp
~changeAmp = { |temp4|
    // Assign the parameter value to the global variable Amp
    d = temp4;
    ""Amp value changed to:"".post;
    d.postln; // Print the new value
};



// Define SynthDefs for dry sound and reverb
(
SynthDef(\drySound, {
    arg out = 0, amp = 1;

    var sound = PlayBuf.ar(2, ~sound.bufnum, doneAction: 2);
    Out.ar(out, sound * amp);
}).add;

SynthDef(\reverbSound, {
    arg in, out, mix = a, roomSize = b, damping = c, amp = d;
	//arg in, out, mix = 0.5, roomSize = 0.5, damping = 0.5, amp = 0.5;
	var sound = PlayBuf.ar(2, ~sound.bufnum, doneAction: 2);

    // Process the input signal with FreeVerb
    var input = In.ar(in, 2);
    /*var reverb = FreeVerb.ar(input, a, b, c); */
	var reverb = FreeVerb.ar(input, roomSize, damping, mix);

    // Mix the dry and wet signals
    var output = (input * (1 - mix)) + (reverb * mix);

    // Output the signal
    Out.ar(out, output * amp);

}).add;
)

// GUI
(
// Boot the GUI
//s.waitForBoot {
    // Create a window
    w = Window(""Reverb Controls"", Rect(100, 100, 400, 200));

    // Mix slider
    Slider(w, Rect(10, 10, 200, 20))
        .value_(1)
        .action_({|obj|
			var temp1;
		    temp1 = obj.value;
		    ~changeMix.(temp1);
/*            var mx = obj.value.linexp(0, 1, 0, 1);
            // Set the mix parameter
            x.set(\mix, mx);*/
    });

    // Room size slider
    Slider(w, Rect(10, 40, 200, 20))
        .value_(1)
        .action_({|obj|
			var temp2;
		    temp2 = obj.value;
			~changeRoomSize.(temp2);
/*            var roomSize = obj.value.linexp(0, 1, 0, 1);
            // Set the roomSize parameter
            x.set(\roomSize, roomSize);*/
    });

    // Damping slider
    Slider(w, Rect(10, 70, 200, 20))
        .value_(1)
        .action_({|obj|
		    var temp3;
		    temp3 = obj.value;
			~changeDamping.(temp3);
/*            var damping = obj.value.linexp(0, 1, 0, 1);
            // Set the damping parameter
            x.set(\damping, damping);*/
    });

    // Amplitude slider
    Slider(w, Rect(10, 100, 200, 20))
        .value_(1)
        .action_({|obj|
		    var temp4;
		    temp4 = obj.value;
			~changeAmp.(temp4);
/*            var amp = obj.value.linexp(0, 1, 0, 1);
            // Set the amp parameter
            x.set(\amp, amp);*/
    });

    // Play Dry button
    Button(w, Rect(220, 130, 150, 20))
        .states_([[""Play Dry"", Color.black, Color.white]])
        .action_({
            // Start the dry sound Synth
            Synth(\drySound);
    });

    // Play with Reverb button
    Button(w, Rect(220, 160, 150, 20))
        .states_([[""Play with Reverb"", Color.black, Color.white]])
        .action_({
            // Start the reverb Synth with specified parameters
            Synth(\reverbSound, [
                \in, 1,                     // Input bus
                \out, 1,                    // Output bus
				\mix, a,
				\roomSize, b,
			    \damping, c,
			    \amp, d

/*                \mix, x.get(\mix),          // Reverb mix (0-1)
                \roomSize, x.get(\roomSize),// Room size (0-1)
                \damping, x.get(\damping),  // Damping (0-1)
                \amp, x.get(\amp)           // Amplitude*/
            ]);
    });

    // StaticText for labels
    StaticText(w, Rect(220, 10, 100, 20)).string_(""Mix"");
    StaticText(w, Rect(220, 40, 100, 20)).string_(""Room Size"");
    StaticText(w, Rect(220, 70, 100, 20)).string_(""Damping"");
    StaticText(w, Rect(220, 100, 100, 20)).string_(""Amplitude"");

    // Show the window
    w.front;
//};
)

//s.quit;
"
eHbN2fZJ,Random Motion @ Random Time,zebadeee,JavaScript,Thursday 16th of May 2024 08:46:28 PM CDT,"moveMin = .3; //minimum move time
moveMax = .7; //maximum move time

pauseMin = .1; // minimum pause time
pauseMax = 5.; // maximum pause time

minVal = [0.1*thisComp.width, 0.1*thisComp.height];
maxVal = [0.9*thisComp.width, 0.9*thisComp.height];

endT = 0;
j = 0;
k = 0;
while ( time >= endT){
  j += 1;
  seedRandom(j,true);
  startT = endT;
  if (j%2){
    endT += random(moveMin,moveMax);
    k++;
  }else{
    endT += random(pauseMin,pauseMax);
  }
}
if (j%2){
  seedRandom(k,true);
  endVal = random(minVal,maxVal);
  seedRandom(k-1,true);
  startVal = random(minVal,maxVal);
  ease(time,startT,endT,startVal,endVal)
}else{
  seedRandom(k,true);
  random(minVal,maxVal)
}"
Nyu7VfRE,CHECK-IPTV-TEXT.pyw,Najeebsk,Python,Thursday 16th of May 2024 08:27:31 PM CDT,"import tkinter as tk
from tkinter import messagebox, filedialog
import requests

def browse_file():
    filename = filedialog.askopenfilename(filetypes=[(""Text files"", ""*.txt"")])
    if filename:
        try:
            with open(filename, ""r"", encoding=""utf-8"") as file:
                content = file.read()
        except UnicodeDecodeError:
            try:
                with open(filename, ""r"", encoding=""iso-8859-1"") as file:
                    content = file.read()
            except UnicodeDecodeError:
                messagebox.showerror(""Error"", ""Failed to decode file. The file might be corrupted or use an unsupported encoding."")
                return
        playlist_entry.delete(""1.0"", ""end"")
        playlist_entry.insert(""1.0"", content)

def check_links():
    playlist_text = playlist_entry.get(""1.0"", ""end-1c"")
    links = playlist_text.split('\n')
    
    valid_links = []
    for link in links:
        if link.strip() == """":
            continue
        try:
            response = requests.head(link, timeout=5)  # added timeout to avoid hanging
            if response.status_code == 200:
                valid_links.append(link)
        except requests.RequestException:
            pass
    
    if valid_links:
        messagebox.showinfo(""Valid Links"", ""Valid links found!"")
        result_text.set(f""{len(valid_links)} valid links found."")
    else:
        messagebox.showinfo(""No Valid Links"", ""No valid links found!"")
        result_text.set(""No valid links found."")
    
    return valid_links

def save_valid_links():
    valid_links = check_links()
    if valid_links:
        with open(""Valid_Playlist.txt"", ""w"", encoding=""utf-8"") as file:
            file.write(""\n"".join(valid_links))
        messagebox.showinfo(""Saved"", ""Valid links saved to Valid_Playlist.txt"")

# GUI
root = tk.Tk()
root.title(""IPTV Channel Link Checker"")

playlist_label = tk.Label(root, text=""Paste Playlist:"")
playlist_label.pack()

# Frame for text widget and scrollbar
text_frame = tk.Frame(root)
text_frame.pack()

playlist_entry = tk.Text(text_frame, height=10, width=50)
playlist_entry.pack(side=tk.LEFT)

scrollbar = tk.Scrollbar(text_frame)
scrollbar.pack(side=tk.RIGHT, fill=tk.Y)

playlist_entry.config(yscrollcommand=scrollbar.set)
scrollbar.config(command=playlist_entry.yview)

# Frame for buttons
button_frame = tk.Frame(root)
button_frame.pack()

browse_button = tk.Button(button_frame, text=""Browse Playlist"", command=browse_file)
browse_button.pack(side=tk.LEFT, padx=5)

check_button = tk.Button(button_frame, text=""Check Links"", command=check_links)
check_button.pack(side=tk.LEFT, padx=5)

save_button = tk.Button(button_frame, text=""Save Valid Links"", command=save_valid_links)
save_button.pack(side=tk.LEFT, padx=5)

# Label for displaying results
result_text = tk.StringVar()
result_label = tk.Label(root, textvariable=result_text)
result_label.pack()

root.mainloop()
"
VhcNiVHC,localhost,Python253,Python,Thursday 16th of May 2024 08:10:21 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: localhost.py
# Version: 1.0.2
# Author: Jeoi Reqi

""""""
This script implements a simple HTTP server that serves files from the current directory and provides a directory listing API.
It also includes functionality to terminate any process using a specified port, in this case, port 8080.

Functions:
    - Serv(BaseHTTPRequestHandler):
        Defines a custom handler for handling HTTP requests.
    - list_files(self):
        Lists all files in the current directory.
    - do_GET(self):
        Handles GET requests, serving files or providing a directory listing based on the requested path.
    - line():
        Prints a line of underscores for formatting.
    - get_pid_on_port(port):
        Retrieves the process ID (PID) of any process using a specified port.
    - kill_process(pid):
        Terminates a process with a specified PID.
    - run_server():
        Starts the HTTP server.
    - shutdown_server(server_thread):
        Shuts down the HTTP server.

Requirements:
    - Python 3.x
    - colorama library (for colored output)

Usage:
    - Run the script. It will start an HTTP server listening on port 8080.
    - Access http://localhost:8080/ in a web browser to view the directory listing.
    - Access http://localhost:8080/api/directory to retrieve a JSON response containing the directory listing.
    - Press Ctrl+C to interrupt the script and stop the server.
    - After interrupting the script, it will attempt to terminate any process using port 8080.

Additional Notes:
    - This script is intended for educational purposes and may require modifications for production use.
    - Ensure that no other process is using port 8080 before running the script.
    - Colorama library is used to print colored output for better visualization.
""""""

# Get Essential Imports
from http.server import HTTPServer, BaseHTTPRequestHandler
import os
import subprocess
import json
import re
import sys
import threading
from colorama import Fore, Style # For Colored Terminal Output

# Print Header
print(""""""
 █████╗  ██████╗  █████╗  ██████╗ 
██╔══██╗██╔═████╗██╔══██╗██╔═████╗
╚█████╔╝██║██╔██║╚█████╔╝██║██╔██║
██╔══██╗████╔╝██║██╔══██╗████╔╝██║
╚█████╔╝╚██████╔╝╚█████╔╝╚██████╔╝
 ╚════╝  ╚═════╝  ╚════╝  ╚═════╝ 
"""""")

# Class for custom HTTP request handler
class Serv(BaseHTTPRequestHandler):
    """"""
    Custom HTTP request handler.
    """"""
    def list_files(self):
        """"""
        Lists all files in the current directory.

        Returns:
            list: A list of dictionaries containing file information.
        """"""
        files = os.listdir(""."")
        file_list = []
        for file in files:
            file_info = {}
            if os.path.isfile(file):
                file_info[""name""] = file
                file_info[""path""] = file
            elif os.path.isdir(file):
                file_info[""name""] = file + ""/""
                file_info[""path""] = file + ""/""
            file_list.append(file_info)
        return file_list

    def do_GET(self):
        """"""
        Handles GET requests.

        If the path is '/', it serves an HTML page with a directory listing.
        If the path is '/api/directory', it provides a JSON response with the directory listing.
        Otherwise, it attempts to serve the requested file.
        """"""
        print(""Request received for:"", self.path)
        if self.path == ""/"":
            index_html = """"""
            <!DOCTYPE html>
            <html lang=""en"">
            <head>
                <meta charset=""UTF-8"">
                <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
                <title>Directory Listing</title>
            </head>
            <body>
                <h1>Directory Listing</h1>
                <ul id=""fileList"">
                    <!-- File and directory list will be generated here -->
                </ul>

                <script>
                    // Fetch directory listing
                    fetch('/api/directory')
                        .then(response => response.json())
                        .then(data => {
                            const fileList = document.getElementById('fileList');
                            data.forEach(item => {
                                const listItem = document.createElement('li');
                                const link = document.createElement('a');
                                link.textContent = item.name;
                                link.href = item.path;
                                listItem.appendChild(link);
                                fileList.appendChild(listItem);
                            });
                        })
                        .catch(error => {
                            console.error('Error fetching directory listing:', error);
                        });
                </script>
            </body>
            </html>
            """"""
            self.send_response(200)
            self.send_header(""Content-type"", ""text/html"")
            self.end_headers()
            self.wfile.write(index_html.encode())
        elif self.path == ""/api/directory"":
            file_list = self.list_files()
            self.send_response(200)
            self.send_header(""Content-type"", ""application/json"")
            self.end_headers()
            self.wfile.write(json.dumps(file_list).encode())
        else:
            try:
                file_to_open = open(self.path[1:], ""rb"").read()
                self.send_response(200)
                self.end_headers()
                self.wfile.write(file_to_open)
            except FileNotFoundError:
                file_to_open = b""File not found""
                self.send_response(404)
                self.end_headers()
                self.wfile.write(file_to_open)

# Function to draw divider lines
def line():
    print(""_"" * 70 + ""\n"")

# Function to get port PIDs
def get_pid_on_port(port):
    result = subprocess.run([""netstat"", ""-ano""], capture_output=True, text=True)
    lines = result.stdout.splitlines()
    port_re = re.compile(rf""TCP\s+\S+:{port}\s+\S+\s+LISTENING\s+(\d+)"")
    for line in lines:
        match = port_re.search(line)
        if match:
            return match.group(1)
    return None

# Function to kill all proceses on given port (8080)
def kill_process(pid):
    subprocess.run([""taskkill"", ""/F"", ""/PID"", pid])

# Run the localhost:8080 server
def run_server():
    httpd = HTTPServer((""localhost"", 8080), Serv)
    print(""Server started on http://localhost:8080/\n"")
    httpd.serve_forever()
    httpd.server_close()

# Shut down the localhost:8080 server
def shutdown_server(server_thread):
    print(""\n\t  Shutting down server... Server shutdown complete!"")
    server_thread.join()
    sys.stdout.flush()

if __name__ == ""__main__"":
    server_thread = threading.Thread(target=run_server)
    server_thread.start()

    try:
        while server_thread.is_alive():
            server_thread.join(1)
            sys.stdout.flush()
    except KeyboardInterrupt:
        line()
        print(""\t\t    Keyboard interrupt received!"")
        sys.stdout.flush()
        shutdown_server(server_thread)

        # Ensure any process using port 8080 is terminated
        pid = get_pid_on_port(8080)
        if pid:
            print(
                f""\n\t    - {Fore.RED}Terminating process {pid} using port 8080{Style.RESET_ALL} -\n\n\tVerify cleanup completed with the terminal command:\n\n\t\t   {Fore.GREEN}!netstat -ano | findstr :8080{Style.RESET_ALL}""
            )
            line()
            sys.stdout.flush()
            kill_process(pid)
"
Wh1xcD0U,mining program,nauseant,Lua,Thursday 16th of May 2024 07:54:11 PM CDT,"NORTH = 0
SOUTH = 1
EAST = 2
WEST = 3
STARTX, STARTY, STARTZ = gps.locate()

function calcCoords()
    
end

print(STARTX)
print(STARTY)
print(STARTZ)"
iZMJfL1Q,2024-05-16_stats.json,rdp_snitch,JSON,Thursday 16th of May 2024 07:18:04 PM CDT,"{
  ""ip"": {
    ""40.117.43.84"": 12,
    ""167.248.133.122"": 3,
    ""159.223.72.90"": 6,
    ""130.162.156.151"": 3,
    ""20.199.13.24"": 3,
    ""185.196.220.41"": 9,
    ""194.165.16.11"": 6,
    ""45.227.254.55"": 6,
    ""193.142.146.227"": 9,
    ""87.251.75.145"": 9,
    ""205.210.31.168"": 9,
    ""199.45.154.21"": 3,
    ""69.164.202.89"": 3,
    ""194.165.16.72"": 6,
    ""92.53.65.200"": 3,
    ""192.241.146.194"": 3,
    ""167.94.145.102"": 3,
    ""43.153.59.164"": 3,
    ""20.15.229.56"": 6,
    ""167.94.146.60"": 3,
    ""185.170.144.3"": 6,
    ""101.36.117.15"": 3,
    ""167.71.216.154"": 3,
    ""39.104.209.131"": 3,
    ""205.210.31.246"": 9,
    ""116.140.196.215"": 3,
    ""213.109.202.230"": 18,
    ""64.124.50.139"": 6,
    ""36.91.222.100"": 6,
    ""194.169.175.33"": 9,
    ""112.4.139.162"": 3,
    ""2.57.149.186"": 9,
    ""193.35.18.124"": 78,
    ""198.235.24.129"": 9,
    ""194.165.16.37"": 6,
    ""87.251.75.64"": 3,
    ""45.227.254.49"": 6,
    ""194.165.16.76"": 6,
    ""36.213.4.168"": 267,
    ""87.251.67.66"": 9,
    ""123.56.20.194"": 3,
    ""198.235.24.42"": 9
  },
  ""asn"": {
    ""AS8075"": 21,
    ""AS398324"": 3,
    ""AS14061"": 12,
    ""AS31898"": 3,
    ""AS208046"": 18,
    ""AS48721"": 24,
    ""AS267784"": 12,
    ""AS208091"": 21,
    ""AS396982"": 36,
    ""AS398722"": 3,
    ""AS63949"": 3,
    ""AS49505"": 3,
    ""AS398705"": 6,
    ""AS132203"": 3,
    ""AS197414"": 6,
    ""AS135377"": 3,
    ""AS37963"": 6,
    ""AS4837"": 3,
    ""AS208312"": 27,
    ""AS6461"": 6,
    ""AS7713"": 6,
    ""AS209605"": 9,
    ""AS56046"": 3,
    ""AS202685"": 78,
    ""AS9808"": 267
  },
  ""isp"": {
    ""Microsoft Corporation"": 21,
    ""Censys, Inc."": 12,
    ""DigitalOcean, LLC"": 12,
    ""Oracle Corporation"": 3,
    ""ColocationX Ltd."": 18,
    ""Flyservers S.A."": 36,
    ""Xhost Internet Solutions LP"": 27,
    ""Google LLC"": 36,
    ""Akamai Technologies, Inc."": 3,
    ""OOO \""Network of data-centers \""Selectel\"""": 3,
    ""Shenzhen Tencent Computer Systems Company Limited"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""China Unicom CHINA169 Network"": 3,
    ""Red Byte LLC"": 27,
    ""Zayo Bandwidth"": 6,
    ""PT Telekomunikasi Indonesia"": 6,
    ""UAB Host Baltic"": 9,
    ""China Mobile Communications Corporation"": 3,
    ""Aggros Operations Ltd."": 78,
    ""China TieTong Telecommunications Corporation"": 267
  },
  ""org"": {
    ""Microsoft Azure Cloud (eastus)"": 12,
    ""Censys, Inc."": 12,
    ""DigitalOcean, LLC"": 9,
    ""Oracle Cloud Infrastructure (ap-seoul-1)"": 3,
    ""Microsoft Azure Cloud (francecentral)"": 3,
    ""Makut Investments"": 9,
    ""Flyservers S.A"": 24,
    ""UAB Host Baltic"": 12,
    ""ColocationX Ltd"": 9,
    ""Xhost Internet Solutions"": 21,
    ""Palo Alto Networks, Inc"": 36,
    ""Linode"": 3,
    ""Selectel Ltd."": 3,
    ""Digital Ocean"": 3,
    ""Tencent Cloud Computing"": 3,
    ""Microsoft Azure Cloud (centralus)"": 6,
    ""Xhostis"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Aliyun Computing Co., LTD"": 6,
    ""China United Network Communications Corporation Limited"": 3,
    ""Chang Way Technologies Co. Limited"": 27,
    ""Microsoft Corporation"": 6,
    ""Telekomunikasi Indonesia"": 6,
    ""EmanuelHosting LTD"": 9,
    ""China Mobile Communications Corporation"": 3,
    ""Pfcloud"": 78,
    ""China Mobile Communications Group Co., Ltd."": 267
  },
  ""regionName"": {
    ""Virginia"": 27,
    ""Michigan"": 3,
    ""South West"": 9,
    ""Seoul"": 3,
    ""\u00cele-de-France"": 3,
    ""Kaunas"": 33,
    ""Vilnius"": 12,
    ""North Holland"": 36,
    ""California"": 39,
    ""New York"": 3,
    ""Texas"": 3,
    ""Moscow"": 21,
    ""New Jersey"": 3,
    ""Hesse"": 6,
    ""Iowa"": 6,
    ""Kowloon"": 3,
    ""Beijing"": 276,
    ""Jakarta"": 6,
    ""Jiangsu"": 3,
    ""Lesser Poland"": 9,
    ""Limburg"": 78
  },
  ""country"": {
    ""United States"": 84,
    ""Singapore"": 9,
    ""South Korea"": 3,
    ""France"": 3,
    ""Lithuania"": 45,
    ""The Netherlands"": 36,
    ""Russia"": 21,
    ""Germany"": 6,
    ""Hong Kong"": 3,
    ""China"": 279,
    ""Indonesia"": 6,
    ""Poland"": 9,
    ""Netherlands"": 78
  },
  ""account"": {
    ""hello"": 387,
    ""(empty)"": 21,
    ""Domain"": 39,
    ""Test"": 60,
    ""Administr"": 36,
    ""podHTekus"": 3,
    ""tvvhcY"": 3,
    ""fDFsqz"": 3,
    ""Administrator"": 3,
    ""WaTLylLhV"": 3,
    ""vGLZZB"": 3,
    ""dhgxQH"": 3,
    ""eHpHwRkHP"": 3,
    ""DCJCHE"": 3,
    ""QLJeVT"": 3,
    ""wmEsUaNPM"": 3,
    ""IByOGE"": 3,
    ""hSKmnZ"": 3
  },
  ""keyboard"": {
    ""Unknown"": 582
  },
  ""client_build"": {
    ""Unknown"": 582
  },
  ""client_name"": {
    ""Unknown"": 582
  },
  ""ip_type"": {
    ""hosting"": 87,
    ""Unknown"": 195,
    ""mobile"": 279,
    ""hosting & proxy"": 3,
    ""proxy"": 18
  }
}"
m52XyjeJ,2024-05-16_stats.json,rdp_snitch,JSON,Thursday 16th of May 2024 07:16:13 PM CDT,"{
  ""ip"": {
    ""40.117.43.84"": 8,
    ""167.248.133.122"": 2,
    ""159.223.72.90"": 4,
    ""130.162.156.151"": 2,
    ""20.199.13.24"": 2,
    ""185.196.220.41"": 6,
    ""194.165.16.11"": 4,
    ""45.227.254.55"": 4,
    ""193.142.146.227"": 6,
    ""87.251.75.145"": 6,
    ""205.210.31.168"": 6,
    ""199.45.154.21"": 2,
    ""69.164.202.89"": 2,
    ""194.165.16.72"": 4,
    ""92.53.65.200"": 2,
    ""192.241.146.194"": 2,
    ""167.94.145.102"": 2,
    ""43.153.59.164"": 2,
    ""20.15.229.56"": 4,
    ""167.94.146.60"": 2,
    ""185.170.144.3"": 4,
    ""101.36.117.15"": 2,
    ""167.71.216.154"": 2,
    ""39.104.209.131"": 2,
    ""205.210.31.246"": 6,
    ""116.140.196.215"": 2,
    ""213.109.202.230"": 12,
    ""64.124.50.139"": 4,
    ""36.91.222.100"": 4,
    ""194.169.175.33"": 6,
    ""112.4.139.162"": 2,
    ""2.57.149.186"": 6,
    ""193.35.18.124"": 52,
    ""198.235.24.129"": 6,
    ""194.165.16.37"": 4,
    ""87.251.75.64"": 2,
    ""45.227.254.49"": 4,
    ""194.165.16.76"": 4,
    ""36.213.4.168"": 178,
    ""87.251.67.66"": 6,
    ""123.56.20.194"": 2,
    ""198.235.24.42"": 6
  },
  ""asn"": {
    ""AS8075"": 14,
    ""AS398324"": 2,
    ""AS14061"": 8,
    ""AS31898"": 2,
    ""AS208046"": 12,
    ""AS48721"": 16,
    ""AS267784"": 8,
    ""AS208091"": 14,
    ""AS396982"": 24,
    ""AS398722"": 2,
    ""AS63949"": 2,
    ""AS49505"": 2,
    ""AS398705"": 4,
    ""AS132203"": 2,
    ""AS197414"": 4,
    ""AS135377"": 2,
    ""AS37963"": 4,
    ""AS4837"": 2,
    ""AS208312"": 18,
    ""AS6461"": 4,
    ""AS7713"": 4,
    ""AS209605"": 6,
    ""AS56046"": 2,
    ""AS202685"": 52,
    ""AS9808"": 178
  },
  ""isp"": {
    ""Microsoft Corporation"": 14,
    ""Censys, Inc."": 8,
    ""DigitalOcean, LLC"": 8,
    ""Oracle Corporation"": 2,
    ""ColocationX Ltd."": 12,
    ""Flyservers S.A."": 24,
    ""Xhost Internet Solutions LP"": 18,
    ""Google LLC"": 24,
    ""Akamai Technologies, Inc."": 2,
    ""OOO \""Network of data-centers \""Selectel\"""": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Hangzhou Alibaba Advertising Co"": 4,
    ""China Unicom CHINA169 Network"": 2,
    ""Red Byte LLC"": 18,
    ""Zayo Bandwidth"": 4,
    ""PT Telekomunikasi Indonesia"": 4,
    ""UAB Host Baltic"": 6,
    ""China Mobile Communications Corporation"": 2,
    ""Aggros Operations Ltd."": 52,
    ""China TieTong Telecommunications Corporation"": 178
  },
  ""org"": {
    ""Microsoft Azure Cloud (eastus)"": 8,
    ""Censys, Inc."": 8,
    ""DigitalOcean, LLC"": 6,
    ""Oracle Cloud Infrastructure (ap-seoul-1)"": 2,
    ""Microsoft Azure Cloud (francecentral)"": 2,
    ""Makut Investments"": 6,
    ""Flyservers S.A"": 16,
    ""UAB Host Baltic"": 8,
    ""ColocationX Ltd"": 6,
    ""Xhost Internet Solutions"": 14,
    ""Palo Alto Networks, Inc"": 24,
    ""Linode"": 2,
    ""Selectel Ltd."": 2,
    ""Digital Ocean"": 2,
    ""Tencent Cloud Computing"": 2,
    ""Microsoft Azure Cloud (centralus)"": 4,
    ""Xhostis"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Aliyun Computing Co., LTD"": 4,
    ""China United Network Communications Corporation Limited"": 2,
    ""Chang Way Technologies Co. Limited"": 18,
    ""Microsoft Corporation"": 4,
    ""Telekomunikasi Indonesia"": 4,
    ""EmanuelHosting LTD"": 6,
    ""China Mobile Communications Corporation"": 2,
    ""Pfcloud"": 52,
    ""China Mobile Communications Group Co., Ltd."": 178
  },
  ""regionName"": {
    ""Virginia"": 18,
    ""Michigan"": 2,
    ""South West"": 6,
    ""Seoul"": 2,
    ""\u00cele-de-France"": 2,
    ""Kaunas"": 22,
    ""Vilnius"": 8,
    ""North Holland"": 24,
    ""California"": 26,
    ""New York"": 2,
    ""Texas"": 2,
    ""Moscow"": 14,
    ""New Jersey"": 2,
    ""Hesse"": 4,
    ""Iowa"": 4,
    ""Kowloon"": 2,
    ""Beijing"": 184,
    ""Jakarta"": 4,
    ""Jiangsu"": 2,
    ""Lesser Poland"": 6,
    ""Limburg"": 52
  },
  ""country"": {
    ""United States"": 56,
    ""Singapore"": 6,
    ""South Korea"": 2,
    ""France"": 2,
    ""Lithuania"": 30,
    ""The Netherlands"": 24,
    ""Russia"": 14,
    ""Germany"": 4,
    ""Hong Kong"": 2,
    ""China"": 186,
    ""Indonesia"": 4,
    ""Poland"": 6,
    ""Netherlands"": 52
  },
  ""account"": {
    ""hello"": 258,
    ""(empty)"": 14,
    ""Domain"": 26,
    ""Test"": 40,
    ""Administr"": 24,
    ""podHTekus"": 2,
    ""tvvhcY"": 2,
    ""fDFsqz"": 2,
    ""Administrator"": 2,
    ""WaTLylLhV"": 2,
    ""vGLZZB"": 2,
    ""dhgxQH"": 2,
    ""eHpHwRkHP"": 2,
    ""DCJCHE"": 2,
    ""QLJeVT"": 2,
    ""wmEsUaNPM"": 2,
    ""IByOGE"": 2,
    ""hSKmnZ"": 2
  },
  ""keyboard"": {
    ""Unknown"": 388
  },
  ""client_build"": {
    ""Unknown"": 388
  },
  ""client_name"": {
    ""Unknown"": 388
  },
  ""ip_type"": {
    ""hosting"": 58,
    ""Unknown"": 130,
    ""mobile"": 186,
    ""hosting & proxy"": 2,
    ""proxy"": 12
  }
}"
J7R5SL9r,2024-05-16_stats.json,rdp_snitch,JSON,Thursday 16th of May 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""40.117.43.84"": 4,
    ""167.248.133.122"": 1,
    ""159.223.72.90"": 2,
    ""130.162.156.151"": 1,
    ""20.199.13.24"": 1,
    ""185.196.220.41"": 3,
    ""194.165.16.11"": 2,
    ""45.227.254.55"": 2,
    ""193.142.146.227"": 3,
    ""87.251.75.145"": 3,
    ""205.210.31.168"": 3,
    ""199.45.154.21"": 1,
    ""69.164.202.89"": 1,
    ""194.165.16.72"": 2,
    ""92.53.65.200"": 1,
    ""192.241.146.194"": 1,
    ""167.94.145.102"": 1,
    ""43.153.59.164"": 1,
    ""20.15.229.56"": 2,
    ""167.94.146.60"": 1,
    ""185.170.144.3"": 2,
    ""101.36.117.15"": 1,
    ""167.71.216.154"": 1,
    ""39.104.209.131"": 1,
    ""205.210.31.246"": 3,
    ""116.140.196.215"": 1,
    ""213.109.202.230"": 6,
    ""64.124.50.139"": 2,
    ""36.91.222.100"": 2,
    ""194.169.175.33"": 3,
    ""112.4.139.162"": 1,
    ""2.57.149.186"": 3,
    ""193.35.18.124"": 26,
    ""198.235.24.129"": 3,
    ""194.165.16.37"": 2,
    ""87.251.75.64"": 1,
    ""45.227.254.49"": 2,
    ""194.165.16.76"": 2,
    ""36.213.4.168"": 89,
    ""87.251.67.66"": 3,
    ""123.56.20.194"": 1,
    ""198.235.24.42"": 3
  },
  ""asn"": {
    ""AS8075"": 7,
    ""AS398324"": 1,
    ""AS14061"": 4,
    ""AS31898"": 1,
    ""AS208046"": 6,
    ""AS48721"": 8,
    ""AS267784"": 4,
    ""AS208091"": 7,
    ""AS396982"": 12,
    ""AS398722"": 1,
    ""AS63949"": 1,
    ""AS49505"": 1,
    ""AS398705"": 2,
    ""AS132203"": 1,
    ""AS197414"": 2,
    ""AS135377"": 1,
    ""AS37963"": 2,
    ""AS4837"": 1,
    ""AS208312"": 9,
    ""AS6461"": 2,
    ""AS7713"": 2,
    ""AS209605"": 3,
    ""AS56046"": 1,
    ""AS202685"": 26,
    ""AS9808"": 89
  },
  ""isp"": {
    ""Microsoft Corporation"": 7,
    ""Censys, Inc."": 4,
    ""DigitalOcean, LLC"": 4,
    ""Oracle Corporation"": 1,
    ""ColocationX Ltd."": 6,
    ""Flyservers S.A."": 12,
    ""Xhost Internet Solutions LP"": 9,
    ""Google LLC"": 12,
    ""Akamai Technologies, Inc."": 1,
    ""OOO \""Network of data-centers \""Selectel\"""": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""China Unicom CHINA169 Network"": 1,
    ""Red Byte LLC"": 9,
    ""Zayo Bandwidth"": 2,
    ""PT Telekomunikasi Indonesia"": 2,
    ""UAB Host Baltic"": 3,
    ""China Mobile Communications Corporation"": 1,
    ""Aggros Operations Ltd."": 26,
    ""China TieTong Telecommunications Corporation"": 89
  },
  ""org"": {
    ""Microsoft Azure Cloud (eastus)"": 4,
    ""Censys, Inc."": 4,
    ""DigitalOcean, LLC"": 3,
    ""Oracle Cloud Infrastructure (ap-seoul-1)"": 1,
    ""Microsoft Azure Cloud (francecentral)"": 1,
    ""Makut Investments"": 3,
    ""Flyservers S.A"": 8,
    ""UAB Host Baltic"": 4,
    ""ColocationX Ltd"": 3,
    ""Xhost Internet Solutions"": 7,
    ""Palo Alto Networks, Inc"": 12,
    ""Linode"": 1,
    ""Selectel Ltd."": 1,
    ""Digital Ocean"": 1,
    ""Tencent Cloud Computing"": 1,
    ""Microsoft Azure Cloud (centralus)"": 2,
    ""Xhostis"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Aliyun Computing Co., LTD"": 2,
    ""China United Network Communications Corporation Limited"": 1,
    ""Chang Way Technologies Co. Limited"": 9,
    ""Microsoft Corporation"": 2,
    ""Telekomunikasi Indonesia"": 2,
    ""EmanuelHosting LTD"": 3,
    ""China Mobile Communications Corporation"": 1,
    ""Pfcloud"": 26,
    ""China Mobile Communications Group Co., Ltd."": 89
  },
  ""regionName"": {
    ""Virginia"": 9,
    ""Michigan"": 1,
    ""South West"": 3,
    ""Seoul"": 1,
    ""\u00cele-de-France"": 1,
    ""Kaunas"": 11,
    ""Vilnius"": 4,
    ""North Holland"": 12,
    ""California"": 13,
    ""New York"": 1,
    ""Texas"": 1,
    ""Moscow"": 7,
    ""New Jersey"": 1,
    ""Hesse"": 2,
    ""Iowa"": 2,
    ""Kowloon"": 1,
    ""Beijing"": 92,
    ""Jakarta"": 2,
    ""Jiangsu"": 1,
    ""Lesser Poland"": 3,
    ""Limburg"": 26
  },
  ""country"": {
    ""United States"": 28,
    ""Singapore"": 3,
    ""South Korea"": 1,
    ""France"": 1,
    ""Lithuania"": 15,
    ""The Netherlands"": 12,
    ""Russia"": 7,
    ""Germany"": 2,
    ""Hong Kong"": 1,
    ""China"": 93,
    ""Indonesia"": 2,
    ""Poland"": 3,
    ""Netherlands"": 26
  },
  ""account"": {
    ""hello"": 129,
    ""(empty)"": 7,
    ""Domain"": 13,
    ""Test"": 20,
    ""Administr"": 12,
    ""podHTekus"": 1,
    ""tvvhcY"": 1,
    ""fDFsqz"": 1,
    ""Administrator"": 1,
    ""WaTLylLhV"": 1,
    ""vGLZZB"": 1,
    ""dhgxQH"": 1,
    ""eHpHwRkHP"": 1,
    ""DCJCHE"": 1,
    ""QLJeVT"": 1,
    ""wmEsUaNPM"": 1,
    ""IByOGE"": 1,
    ""hSKmnZ"": 1
  },
  ""keyboard"": {
    ""Unknown"": 194
  },
  ""client_build"": {
    ""Unknown"": 194
  },
  ""client_name"": {
    ""Unknown"": 194
  },
  ""ip_type"": {
    ""hosting"": 29,
    ""Unknown"": 65,
    ""mobile"": 93,
    ""hosting & proxy"": 1,
    ""proxy"": 6
  }
}"
zyiqhRdg,sh_config.lua,Lukyspore,Lua,Thursday 16th of May 2024 07:01:45 PM CDT,"LDT_Bodygroupr = LDT_Bodygroupr or {}
LDT_Bodygroupr.Config = LDT_Bodygroupr.Config or {}

LDT_Bodygroupr.Config.DatabaseMode = ""sqlite"" -- Currently there are ""sqlite"" and ""mysql"" available. If you want to use MySQL, you need to set up the MySQL database in the sv_mysql.lua file.

LDT_Bodygroupr.Config.Language = ""en"" -- Currently there are en, de, es, nl and fr translations available.

LDT_Bodygroupr.Config.AdminRanks = {
    [""superadmin""] = true,
    [""admin""] = true
} -- These are the ranks that can spawn new closets. You can add more ranks if you want to.

LDT_Bodygroupr.Config.ContextMenuRanks = {
    [""superadmin""] = true,
    [""admin""] = true
} -- These are the ranks that can open the closet from the context menu. You can add more ranks if you want to.

LDT_Bodygroupr.Config.ConvertOldBodygrouprLocations = {
    [""superadmin""] = true
} -- These are the ranks that can run the command to convert the Arizard's Bodygroupr locations to this system. You can add more ranks if you want to.

-- The chat command to convert the Arizard's Bodygroupr locations to this system is ""!bodygroupr convert locations"".

LDT_Bodygroupr.Config.CanClosetBreak = true -- If this is set to false, the closets will not break when they reach 0 health.
LDT_Bodygroupr.Config.ClosetHealth = 100 -- This is the health of the closet.

LDT_Bodygroupr.Config.OpenFromContextMenuOverride = true -- If this is set to true anyone can open the closet from the context menu.

LDT_Bodygroupr.Config.EnableRandomize = true -- If this is set to true, the randomize button will be displayed and enabled.
LDT_Bodygroupr.Config.EnableCloning = true -- If this is set to true, the clone from other users feature will be displayed and enabled.

LDT_Bodygroupr.Config.AdminMenuCommand = ""!bodygroupr"" -- This is the chat command to open the admin menu.


-- These are the colors for every element of the UI. Feel free to change them to your liking.
LDT_Bodygroupr.Config.Red = Color(228, 58, 7)
LDT_Bodygroupr.Config.RedHover = Color(255, 63, 5)
LDT_Bodygroupr.Config.White = Color(255,255,255)
LDT_Bodygroupr.Config.Grey = Color(47, 54, 64)
LDT_Bodygroupr.Config.GreyHover = Color(57, 65, 77)
LDT_Bodygroupr.Config.GreySecond = Color(31, 34, 41)
LDT_Bodygroupr.Config.GreyTrans = Color(32, 33, 36, 200)
LDT_Bodygroupr.Config.Blue = Color(0, 151, 230)
LDT_Bodygroupr.Config.BlueSecond = Color(2, 161, 247)
LDT_Bodygroupr.Config.ToolBlock = Color(0, 0, 0,220)

-- These are the materials for every element of the UI. Feel free to change them to your liking.
LDT_Bodygroupr.Materials = LDT_Bodygroupr.Materials or {}
LDT_Bodygroupr.Materials.ToolBG = Material(""LDT_Bodygroupr/display_bg_small.png"", ""noclamp smooth"")
LDT_Bodygroupr.Materials.XIcon = Material(""LDT_Bodygroupr/x.png"", ""noclamp smooth"")
LDT_Bodygroupr.Materials.TrashCan = Material(""LDT_Bodygroupr/trash-can.png"", ""noclamp smooth"")"
iiR2rj71,sh_language.lua,Lukyspore,Lua,Thursday 16th of May 2024 06:58:11 PM CDT,"LDT_Bodygroupr.Language = LDT_Bodygroupr.Language or {}

LDT_Bodygroupr.Language = {
    en = {
        BodygrouprTitle = ""Bodygroupr"",
        ClosetToolName = ""Bodygroupr Closet Spawner"",
        ToolDesc = ""Spawns a Closet"",
        ToolLeft = ""Left click to an empty space to create a Closet"",
        ToolRight = ""Right click to remove a Closet"",
        ToolFPPPerms = ""FPP Blocks your ability to use this tool"",
        ToolFPPCheck = ""Check you can toolgun this entity with FPP"",
        BodygrouprText = ""Closet"",
        ConfigurationText = ""Spawner"",
        ClosetText = ""Closet"",
        OpenClosetText = ""Press E to open"",
        LoadBtnText = ""Load"",
        PlayersmodelsText = ""Playermodels"",
        SkinsText = ""Skins"",
        CloneFromUsersBtnText = ""Clone From Other Users"",
        ServerJobPresetsText = ""Server Job Presets"",
        UserJobPresetsText = ""User Job Presets"",
        SaveJobPresetBtnText = ""Save Job Preset"",
        SaveServerJobPresetBtnText = ""Save Server Job Preset"",
        RandomizeBtnText = ""Randomize"",
        NewPresetTitle = ""New Preset"",
        CloseBtnText = ""Close"",
        SaveBtnText = ""Save"",
        CloneBodygroupsTitle = ""Clone bodygroups from other users"",
        NoUsersFoundText = ""No users found"",
        CloneBtnText = ""Clone"",
        EditBodygroupsBtnText = ""Edit Bodygroups"",
        DeleteWithoutSavingBtnText = ""Delete Closets Without Saving"",
        LoadClosetsBtnText = ""Load Closets"",
        BodygrouprAdminMenuTitle = ""Bodygroupr Admin Menu""
    },
}"
3F2hV0i5,Pastebin.ai - #1 Pastebin Alternative,xxsa,PHP,Thursday 16th of May 2024 06:38:05 PM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
.........................

.............................
"
T1w4Q2NC,ACR122-U9,Manu-J,Python,Thursday 16th of May 2024 06:16:56 PM CDT,"from smartcard.System import readers
from smartcard.util import toHexString
from colorama import init, Fore, Style
import time

# Initialize colorama
init(autoreset=True)

def detect_reader():
    r = readers()
    if len(r) > 0:
        print(Fore.GREEN + ""Reader detected: "" + str(r[0]))
        return r[0]
    else:
        print(Fore.RED + ""No reader detected"")
        return None

def detect_card(reader):
    connection = reader.createConnection()
    
    try:
        connection.connect()
        print(Fore.GREEN + ""Card detected"")
    except:
        print(Fore.RED + ""No card detected initially"")
        return

    while True:
        try:
            connection.connect()
            response, sw1, sw2 = connection.transmit([0xFF, 0xCA, 0x00, 0x00, 0x00])
            if sw1 == 0x90 and sw2 == 0x00:
                print(Fore.GREEN + ""Card present, UID: "" + toHexString(response))
            else:
                print(Fore.RED + ""Card present but failed to read UID"")
        except:
            print(Fore.RED + ""No card detected"")

        time.sleep(1)

if __name__ == ""__main__"":
    reader = detect_reader()
    if reader:
        try:
            detect_card(reader)
        except KeyboardInterrupt:
            print(Fore.YELLOW + ""\nProgram interrupted and stopped by user."")
"
3ext8ds2,English-Chinese Phrases 5/16 4:30 p,marshallsmyth,CSS,Thursday 16th of May 2024 05:51:11 PM CDT,"

<!DOCTYPE html><html lang=""en""><head><title>PERFECT LINE 1 English to Chinese, zoom @ 100%</title><style> 
@import url(https://fonts.googleapis.com/css?family=Quintessential|Montez);
::-webkit-scrollbar { width: 15px;height:15px;}
::-webkit-scrollbar-track { border-radius: 5px; background: #007fff;}
::-webkit-scrollbar-thumb { border-radius:5px; background: #8e003e;box-shadow: 0px 0px 36px 16px #000;}

body {background:#002;overflow:auto;padding:20px 90px 20px 40px;}

.text1 {font-family:""arial black"";font-size:80px;line-height:80px;color:red;text-align:center;}
.text2 {font-family:arial;font-size:70px;line-height:70px;color:#910;}
.text3 {font-family:arial;font-size:55px;line-height:55px;color:#109;margin-top:-60px;}
.text4 {font-family:arial;font-size:40px;line-height:40px;color:#190;margin-top:12px;}
.text5 {font-family:arial black;font-size:25px;line-height:30px;color:#901;margin-top:10px;}

       </style>

<div class=""text1"">English to Simplified Chinese Phrases</div>
<div class=""text5""><p><br>This very simple phrase list has descriptions for some things to know before attempting them with a person who only speaks Chinese. The phrase in English is presented first. The second line down is a common phonetic pronounciation which will sometimes have a syllable in all caps to show where emphasis is made.
<br>The third line has my own proprietary more explicit phonetic guide. On the fourth line, explanation is given for pronunciation that generally applies in simplified Chinese. It should be in line with my own proprietary phonetic pronunciation system.
<p>This is block learning. I suggest learning one phrase to perfection, then the next phrase along with the earlier phrase(s). By the tenth phrase you are learning 10 phrases to perfection. More than a simple review, it is getting it perfectly. 
This is to be followed by learning phrases 11 to 20 while now occasionally reviewing the first ten phrases so they are not easily forgotten.
</div>

<div class=""text1"">BLOCK ONE

<div class=""text2""><p>1. Hello. How are you?</div>
<div class=""text3"">Ni hao. Ni HAO ma.</div>
<div class=""text4"">NeeHOW. NeeHOWmah.</div>
<div class=""text5"">The all caps syllables are accented syllables. Each sentence is often spoken as one word.</div>

<div class=""text2""><p>2. My name is Marshall Smyth</div>
<div class=""text3"">Wo jiao Maxxier~Shimisi.</div>
<div class=""text4"">WojeeYOW~MahSHEE~ya(h)(r) ShiMEEsee. Marshall Smyth</div>
<div class=""text5"">The j is a soft buzzing j sound (similar to a french letter), and Jiao is almost jeeyow, ow as in ""now"".The x is generally a ""sh"" sound. The r in MahSHEE~yah(r) is barely pronounced. Letters inside ( ) have changed sounds from the English expectations. The (h) after an a means it is an ""ah"" sound. Without an added h after an a, the a is pronounced like the a in bat or cat.</div>

<div class=""text2""><p>3. You are very pretty.</div>
<div class=""text3"">Ni hen piaoliang</div>
<div class=""text4"">NEEhen peeyow(l)yeea(h)n(g)</div>
<div class=""text5"">Ni often means you. The l in piaoliang is barely pronounced. iao is generally said as ""yow"", and is commonly used.</div> 

<div class=""text2""><p>4. Where am I on this map?</div>
<div class=""text3"">Wǒ zài zhè~zhāng dìtú shàng de shénme dìfāng?</div>
<div class=""text4"">Wo ZYE jeh jahng deeTUshahng~day~sheenme~deefahng?<br><br>((Say this phrase many times and get it right before going to China. The roads of especially residential areas may well include tiny alleys, and be designed at random. Even locals may get temporarily lost in a neighboring place. Sometimes these can be dangerous places to be alone after dark. Trudat!))</div>
<div class=""text5"">Wo means I or my. Z is spoken as in English, but ZH is spoken exactly like the typical j of English, as in Jenny. This is a relatively long phrase in Chinese, but it is an important one. Learn this one. When saying it some of the words are spoken as one word more than the usual. I'll put a ~ between those words. In Chinese, it sounds to an American English speaker like most parts of a phrase are a single word. I think especially when the earlier word ends with a vowel. In a question, it is mostly only the last word that sounds like a question. Remember this.</div>

<div class=""text2""><p>5. Right here. (This is the simplest response to where am I on this map.)</div>
<div class=""text3"">Jiu zai zheer</div>
<div class=""text4"">JuuzyeJAA</div>
<div class=""text5"">This phrase is spoken as one word. jaa is said just like the first two letters in January. The J is exactly like the American English J. Zai seems to mean ""are"" or ""am"".</div>

<div class=""text2""><p>6. How much does this cost?</div>
<div class=""text3"">...</div>
<div class=""text4"">...</div>
<div class=""text5"">...</div>

<div class=""text2""><p>7. I am an ordinary American.</div>
<div class=""text3"">...</div>
<div class=""text4"">...</div>
<div class=""text5"">...</div>

<div class=""text2""><p>8. Where can I get a bus to the main bus terminal in Shanghai?</div>
<div class=""text3"">...</div>
<div class=""text4"">...</div>
<div class=""text5"">...</div>

<div class=""text2""><p>9. Where is the police station?</div>
<div class=""text3"">...</div>
<div class=""text4"">...</div>
<div class=""text5"">...</div>

<div class=""text2""><p>10. Thank you</div>
<div class=""text3"">...</div>
<div class=""text4"">...</div>
<div class=""text5"">...</div>

<div class=""text1"">BLOCK TWO

<div class=""text2""><p>11. ...</div>
<div class=""text3"">...</div>
<div class=""text4"">...</div>
<div class=""text5"">...</div>

<div class=""text2""><p>12. ...</div>
<div class=""text3"">...</div>
<div class=""text4"">...</div>
<div class=""text5"">...</div>

<div class=""text2""><p>13. ...</div>
<div class=""text3"">...</div>
<div class=""text4"">...</div>
<div class=""text5"">...</div>
<div class=""text2""><p>14. ...</div>
<div class=""text3"">...</div>
<div class=""text4"">...</div>
<div class=""text5"">...</div>
<div class=""text2""><p>15. ...</div>
<div class=""text3"">...</div>
<div class=""text4"">...</div>
<div class=""text5"">...</div>
<div class=""text2""><p>16. ...</div>
<div class=""text3"">...</div>
<div class=""text4"">...</div>
<div class=""text5"">...</div>
<div class=""text2""><p>17. ...</div>
<div class=""text3"">...</div>
<div class=""text4"">...</div>
<div class=""text5"">...</div>
<div class=""text2""><p>18. ...</div>
<div class=""text3"">...</div>
<div class=""text4"">...</div>
<div class=""text5"">...</div>
<div class=""text2""><p>19. ...</div>
<div class=""text3"">...</div>
<div class=""text4"">...</div>
<div class=""text5"">...</div>
<div class=""text2""><p>20. ...</div>
<div class=""text3"">...</div>
<div class=""text4"">...</div>
<div class=""text5"">...</div>

<div class=""text5"">A final exam would be oral. One of these 20 phrases said at random in either and both languages will be answered with that same phrase in the other language.
<br>After getting the first 20 phrases learned until they are in your soul, that is, getting 100% on all 40, (20 X 2) phrases, you may be prepared to take a serious course in Simplified Chinese.
</div></div>



"
VzhLaQC1,Pastebin.ai - #1 Pastebin Alternative,xxsa,PHP,Thursday 16th of May 2024 05:24:50 PM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
........................

.............................
"
LyjryQYL,Adopt me (Linked),Bacon_Script,Lua,Thursday 16th of May 2024 04:21:27 PM CDT,"loadstring(game:HttpGet(""https://pastebin.com/raw/jJgrZP1n""))()"
jJgrZP1n,Adopt Me (Linking),Bacon_Script,Lua,Thursday 16th of May 2024 04:20:36 PM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/Ps99-leakscript/Adopt-Me-Vlorp-Script-Hub/main/obf_184xh5cqlNJrWAmR9JTVcBRsYn158M2lpg5u1KM57QS0wF6Ae411JG23wdm02cZ2.lua.txt""))()"
RK44fNEQ,Pastebin.ai - #1 Pastebin alternative,xxsa,PHP,Thursday 16th of May 2024 04:08:23 PM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
.......................

.............................
"
efmkLaVV,app/_layout.tsx,docksdocks,JavaScript,Thursday 16th of May 2024 04:04:34 PM CDT,"import { SessionProvider } from '@/context/AuthContext';
import { Slot } from 'expo-router';
import { OneSignal } from 'react-native-onesignal';
import Constants from ""expo-constants"";
OneSignal.initialize(Constants.expoConfig?.extra?.oneSignalAppId)
OneSignal.Notifications.requestPermission(true);

export default function Root() {
  return (
    <SessionProvider>
      <Slot />
    </SessionProvider>
  );
}"
XJ84xaUf,[GMod] Line Thing,SneakySquid,Lua,Thursday 16th of May 2024 04:03:22 PM CDT,"LINE_CORNER_NONE = 0
LINE_CORNER_MITER = 1
LINE_CORNER_ROUND = 2

do
	local plotting = false
	local plots, quads = {}, {}
	local plot_count, quad_count = 0, 0

	local thickness = 0
	local min_angle = 0
	local corner_type = 0

	function draw.StartLine(_thickness, _min_angle, _corner_type)
		assert(not plotting, ""how come your mom lets you have 2 lines"")

		plotting = true
		plot_count, quad_count = 0, 0

		thickness = (tonumber(_thickness) or 10) / 2
		min_angle = math.pi - math.rad(tonumber(_min_angle) or 20)
		corner_type = tonumber(_corner_type) or 0
	end

	function draw.AddLinePoint(x, y)
		assert(plotting, ""better start a line boy"")

		if not y then
			y = x.y
			x = x.x
		end

		plot_count = plot_count + 1
		plots[plot_count] = Vector(x, y)
	end

	function draw.EndLine()
		assert(plotting, ""cut me point 2 g fam"")
		plotting = false

		assert(plot_count > 1, ""A minimum of 2 points are required to draw a line."")

		for i = 1, plot_count - 1 do
			local a, b = plots[i], plots[i + 1]

			local ab = b - a
			ab:Normalize()

			local ab_right = Vector(-ab.y, ab.x)

			quad_count = quad_count + 1
			quads[quad_count] = {
				a + ab_right * thickness,
				a - ab_right * thickness,
				b - ab_right * thickness,
				b + ab_right * thickness,
			}
		end

		if plot_count >= 3 then
			for i = 2, plot_count - 1 do
				local a, b, c = unpack(plots, i - 1, i + 1)

				local left_quad = quads[i - 1]
				local right_quad = quads[i]

				local ab, bc do
					ab = b - a
					bc = c - b

					ab:Normalize()
					bc:Normalize()
				end

				local angle = math.acos(ab:Dot(bc))
				local bc_right = Vector(-bc.y, bc.x)

				local is_left = false
				if ab:Dot(bc_right) > 0 then
					is_left = true
				end

				if corner_type == LINE_CORNER_MITER then
					local height = thickness / math.cos(angle / 2)
					local joint_direction = bc - ab
					joint_direction:Normalize()

					if is_left then
						joint_direction = -joint_direction
					end

					if angle <= min_angle then
						left_quad[3] = b - joint_direction * height
						left_quad[4] = b + joint_direction * height

						right_quad[1] = left_quad[4]
						right_quad[2] = left_quad[3]
					end
				elseif corner_type == LINE_CORNER_ROUND then
					local bd = (is_left and left_quad[4] or right_quad[2]) - b
					bd:Normalize()

					local step = 1 / thickness
					local theta = (0.5 * math.pi - math.atan2(bd.y, bd.x)) % math.tau

					mesh.Begin(MATERIAL_POLYGON, 1)
						for a = theta, theta + angle + step, step do
							local sin, cos = math.sin(a), math.cos(a)
							local pos = b + Vector(sin, cos) * thickness

							mesh.Position(pos)
							mesh.AdvanceVertex()
						end

						mesh.Position(b)
						mesh.AdvanceVertex()
					mesh.End()
				end
			end
		end

		mesh.Begin(MATERIAL_QUADS, quad_count)
			for i, quad in ipairs(quads) do
				mesh.Quad(unpack(quad))
			end
		mesh.End()
	end
end


--[[

	EXAMPLE

]]--


local plots = {}
for i = 1, 20 do
	if #plots == 0 then
		table.insert(plots, Vector(ScrW() / 2, ScrH() / 2))
	else
		local rand_direction = Vector(math.Rand(-1, 1), math.Rand(-1, 1))
		rand_direction:Normalize()

		local last_plot = plots[#plots]
		table.insert(plots, last_plot + rand_direction * math.random(100, 400))
	end
end

hook.Add(""PostRender"", """", function()
	cam.Start2D()
		surface.SetDrawColor(255, 255 ,255)
		render.SetMaterial(Material(""vgui/white""))

		draw.StartLine(50, 15, math.floor(CurTime() % 3))
			for i, plot in ipairs(plots) do
				draw.AddLinePoint(plot)
			end
		draw.EndLine()
	cam.End2D()
end)"
y7A8TnmG,SC3 Road Signs,JustDoesGames,Lua,Thursday 16th of May 2024 03:46:56 PM CDT,"b = require(""bigfont"")

-- char 16 points RIGHT and 17 points LEFT
local text = string.char(17).."" North""

local sign = peripheral.find(""monitor"")

w,h = sign.getSize()
print(w..""| ""..h)

sign.setBackgroundColor(colors.cyan)
sign.clear()

sleep(.5)
b.writeOn(sign, 1, text, (w/3)-(text:len()/2),2)
"
df5yK8GA,Dee_EFF,dave3009,VBScript,Thursday 16th of May 2024 02:59:52 PM CDT,"Option Explicit

'************************************************
'*                                              *
'* AutoEmail Function for Excel for Freelancers *
'* Author: David Houston                        *
'* Date: 16.05.2024                             *
'*                                              *
'************************************************

Const FromEmail As String = ""whateveremail@email.com""       ' Set the From email address
Const ccEmail As String = ""whateveremail@email.com""         ' Set the CC email address



Sub AutoEMail()

Dim OutlookApp As Outlook.Application
Dim OutlookMail As MailItem
Dim Outlook
Dim CustEmailRange As Range
Dim Cell As Range
Dim oSubject As String

' Set up a holder for the subject line, only ""No AP Listed"" will change
oSubject = Sheet1.Cells(Cell.Row, 46).Value & "" ("" & Sheet1.Cells(Cell.Row, 3).Value & "" / No AP Listed )""

Set OutlookApp = New Outlook.Application                    ' Create new instance of Outlook
Set CustEmailRange = Sheet1.Range(""A1:A100"")                ' Define the range containing the customer email details.

For Each Cell In CustEmailRange                             ' Loop over the customer email range

    Set OutlookMail = OutlookApp.CreateItem(olMailItem)         ' Create a New Email
    
        ' If column 36 has a value, replace ""No AP Listed"" in the subject line
        If Sheet1.Cells(Cell.Row, 36).Value <> """" Then
            oSubject = Replace(oSubject, ""No AP Listed"", Sheet1.Cells(Cell.Row, 36).Value)
        End If
        
        With OutlookMail
            .To = Cell.Value                                        ' Set the To address
            .SentOnBehalfOfName = FromEmail                         ' Set the From Address
            .CC = ccEmail                                           ' Set the CC address
            .Subject = oSubject                                     ' Set the Subject
            .Body = EmailBody                                       ' Set the body from function
            .Display                                                ' Display the completed email, change to .Send if desired
        End With
    
    Set OutlookMail = Nothing                                   ' Unset the mail item, not necessary

Next Cell

Set OutlookApp = Nothing                                    ' Unset Outlook

End Sub

Function EmailBody()
EmailBody = Sheets(""InitialEmailBody"").Range(""EmailBody"").Value & vbCrLf
EmailBody = EmailBody & ""Review ID: "" & Sheet1.Cells(Cell.Row, 3).Value & vbCrLf
EmailBody = EmailBody & ""ReviewOrder: "" & IIf(Sheet1.Cells(Cell.Row, 4).Value = """", ""Not Listed"", Sheet1.Cells(Cell.Row, 4).Value) & vbCrLf
EmailBody = EmailBody & ""Review Plan: "" & IIf(Sheet1.Cells(Cell.Row, 36).Value = """", ""Not Listed"", Sheet1.Cells(Cell.Row, 36).Value) & vbCrLf
EmailBody = EmailBody & ""Review Name: "" & Sheet1.Cells(Cell.Row & Range(""TEST"").Value) & vbCrLf
EmailBody = EmailBody & ""Review Description: "" & Sheet1.Cells(Cell.Row, 9).Value & vbCrLf
EmailBody = EmailBody & ""Link: "" & Sheet1.Cells(Cell.Row, 42).Value & vbCrLf
End Function
"
T7Fy72Ra,ComputerCraft Quarry WIP,sneakybeakylike,Lua,Thursday 16th of May 2024 02:52:54 PM CDT,"-- function to check fuel and refuel if empty
function checkAndRefuel()
    if turtle.getFuelLevel() == 0 then
        -- Select the slot with coal
        for slot = 1, 16 do
            if turtle.getItemCount(slot) > 0 then
                turtle.select(slot)
                if turtle.refuel(1) then
                    local file = io.open(""output.txt"", ""a"")
                    file:write(""Refueled!\n"")
                    file:close()
                    return true
                end
            end
        end
        local file = io.open(""output.txt"", ""a"")
        file:write(""No coal found!\n"")
        file:close()
        return false
    end
    return true
end

-- function to check if inventory is full
function isInventoryFull()
	for i = 1, 16 do
		if turtle.getItemCount(i) == 0 then
			return false
		end
	end
	return true
end

-- fixes inventory scattering
function stackItems()
	-- remember seen items
	m = {}

	for i = 1, 16 do
		local this = turtle.getItemDetail(i)

		if this ~= nil then
			-- slot is not empty
			local saved = m[this.name .. (this.damage or """")]
			
			if saved ~= nil then
				-- we've seen this item before in the inventory
				local amount = this.count

				turtle.select(i)
				turtle.transferTo(saved.slot)
				if amount > saved.space then
					-- we have leftovers, and now the saved slot is full, so we replace it by the current one
					saved.slot = i
					saved.count = amount - saved.space
					-- update on table
					m[this.name .. (this.damage or """")] = saved
				elseif amount == saved.space then
					-- just delete the entry
					m[this.name .. (this.damage or """")] = nil
				end
			else
				-- there isn't another slot with this item so far, so sign this one up
				this.slot = i
				this.space = turtle.getItemSpace(i)
				m[this.name .. (this.damage or """")] = this
			end
		end
	end
end

-- selects an item if its in the inventory, otherwise returns false
function selectItem(name)
	for i = 1, 16 do
		local data = turtle.getItemDetail(i)
		if data and data.name == name then
			turtle.select(i)
			return true
		end
	end
	return false
end

-- returns item count given item name
function getItemCount(name)
	local count = 0
	for i = 1, 16 do
		local data = turtle.getItemDetail(i)
		if data and data.name == name then
			count = count + data.count
		end
	end
	return count
end

-- gets direction
-- 0 North, 1 East, 2 South, 3 West
function getDirection()
    local old_x, old_y, old_z = gps.locate()
    -- determine direction we are facing
	if not checkAndRefuel() then
		return false
	end
	turtle.back()
	local new_x, new_y, new_z = gps.locate()
	if not checkAndRefuel() then
		return false
	end
    turtle.forward()
	if new_x > old_x then
		-- facing west
        return true, 3
	elseif new_x < old_x then
		-- facing east
        return true, 1
	elseif new_z > old_z then
		-- facing north
        return true, 0
	end
    return true, 2
end

-- moves to position
function moveTo(x, y, z)
    local cur_x, cur_y, cur_z = gps.locate()
    local dx = math.abs(x - cur_x)
    local dy = math.abs(y - cur_y)
    local dz = math.abs(z - cur_z)    
    
    -- rotate towards south
    local direction_success, direction = getDirection()
    if not direction_success then
        return false
    end
    if direction == 3 then
        turtle.turnLeft()
    elseif direction == 1 then
        turtle.turnRight()
    elseif direction == 0 then
        turtle.turnLeft()
        turtle.turnLeft()
    end
	-- now we are oriented towards south
    local file = io.open(""output.txt"", ""a"")
    file:write(""Facing South Now\n"")
    file:write(""----------------\n"")
    file:write(""Current pos: ("", cur_x, "", "", cur_y, "", "", cur_z, "")\n"")
    file:write(""Moving towards: ("", x, "", "", y, "", "", z, "")\n"")
    file:write(""----------------\n"")
    file:close()
    -- north -Z direction
    -- south +Z direction
    -- east +X direction
    -- west -X direction
    -- correct y first, then x and z
    local align_y_last = false
    if cur_y > y then
        align_y_last = true
    end
    if dy == 0 and not align_y_last then
        local file = io.open(""output.txt"", ""a"")
        file:write(""Y aligned\n"")
        file:close()
    elseif not align_y_last then
        local file = io.open(""output.txt"", ""a"")
        file:write(""Correcting Y...\n"")
        file:close()
        if cur_y < y then
            -- we need to head up
			for i = 1, dy do
            	if not checkAndRefuel() then
					return false
				end
            	turtle.up()
        	end
            local file = io.open(""output.txt"", ""a"")
        	file:write(""Y aligned\n"")
            file:close()
    	else
            -- we need to head down
            for i = 1, dy do
                if not checkAndRefuel() then
                    return false
                end
                turtle.down()
            end
        end
    end
    -- correct x
    if dx == 0 then
        local file = io.open(""output.txt"", ""a"")
        file:write(""X aligned\n"")
        file:close()
    else
        local file = io.open(""output.txt"", ""a"")
        file:write(""Correcting X...\n"")
        file:close()
        if cur_x < x then
            -- we need to head EAST
            local file = io.open(""output.txt"", ""a"")
            file:write(""cur_x < x | rotating east\n"")
            file:close()
            turtle.turnLeft()
            for i = 1, dx do
                if not checkAndRefuel() then
					return false
				end
                turtle.forward()
            end
            local file = io.open(""output.txt"", ""a"")
            file:write(""rotating south\n"")
            file:close()
            turtle.turnRight()
        else
            -- we need to head WEST
            local file = io.open(""output.txt"", ""a"")
            file:write(""cur_x > x | rotating west\n"")
            file:close()
            turtle.turnRight()
            for i = 1, dx do
                if not checkAndRefuel() then
					return false
				end
                turtle.forward()
            end
            local file = io.open(""output.txt"", ""a"")
            file:write(""rotating south\n"")
            file:close()
            turtle.turnLeft()
        end
        local file = io.open(""output.txt"", ""a"")
        file:write(""X aligned\n"")
        file:close()
    end
    -- correct z
    if dz == 0 then
        local file = io.open(""output.txt"", ""a"")
        file:write(""Z aligned\n"")
        file:close()
    else
        local file = io.open(""output.txt"", ""a"")
        file:write(""Correcting Z...\n"")
        file:close()
        if cur_z < z then
            -- we need to head south
            for i = 1, dz do
				if not checkAndRefuel() then
                    return false
                end
                turtle.forward()
            end
        else
            local file = io.open(""output.txt"", ""a"")
            file:write(""cur_z > z | rotating north\n"")
            file:close()
            turtle.turnLeft()
            turtle.turnLeft()
            for i = 1, dz do
                if not checkAndRefuel() then
                    return false
                end
                turtle.forward()
            end
            local file = io.open(""output.txt"", ""a"")
            file:write(""rotating south\n"")
            file:close()
            turtle.turnLeft()
            turtle.turnLeft()
        end
        local file = io.open(""output.txt"", ""a"")
        file:write(""Z aligned\n"")
        file:close()
    end
    -- check if we align y last
    if dy == 0 and align_y_last then
        local file = io.open(""output.txt"", ""a"")
        file:write(""Y aligned\n"")
        file:close()
    elseif align_y_last then
        local file = io.open(""output.txt"", ""a"")
        file:write(""Correcting Y...\n"")
        file:close()
        if cur_y < y then
            -- we need to head up
			for i = 1, dy do
            	if not checkAndRefuel() then
					return false
				end
            	turtle.up()
        	end
            local file = io.open(""output.txt"", ""a"")
        	file:write(""Y aligned\n"")
            file:close()
    	else
            -- we need to head down
            for i = 1, dy do
                if not checkAndRefuel() then
                    return false
                end
                turtle.down()
            end
        end
    end
    cur_x, cur_y, cur_z = gps.locate()
    if cur_x ~= x or cur_y ~= y or cur_z ~= z then
        local file = io.open(""output.txt"", ""a"")
        file:write(""Failed to move to ("", x, "", "", y, "", "", z, "")\n"")
        file:close()
        return false
    end
    return true
end

-- goes to storage chest, dumps inventory, returns back
-- x y and z are the starting location of the quarry
function storeItems(x, y, z)
    -- store current position and direction
	local cur_x, cur_y, cur_z = gps.locate()
    local direction_success, direction = getDirection()
    if not direction_success then
        return false
    end
    local file = io.open(""output.txt"", ""a"")
    file:write(""Moving to Origin location!!!\n"")
    file:close()
    -- move to origin of quarry
    if not moveTo(x, y, z) then
        return false
    end
    local file = io.open(""output.txt"", ""a"")
    file:write(""Finished moving to Origin location!!!\n"")
    file:close()
    -- rotate towards north
    turtle.turnLeft()
    turtle.turnLeft()
    local file = io.open(""output.txt"", ""a"")
    file:write(""Checking for chest\n"")
    file:close()
	-- now we are facing north towards our storage chest
	local inspect_data_success, inspect_data = turtle.inspect()
	if not inspect_data_success then
        local file = io.open(""output.txt"", ""a"")
		file:write(""No block detected at starting point\n"")
        file:close()
		return false
	end
    local file = io.open(""output.txt"", ""a"")
    file:write(""CHEST DATA: {name="", inspect_data.name, ""\n"")
    file:close()
	if inspect_data.tags and inspect_data.tags[""forge:chests""] then
        local file = io.open(""output.txt"", ""a"")
		file:write(""Forge Chest detected. Storing items\n"")
        file:close()
		stackItems()
		-- assume coal is in first item slot. transfer all other items to chest
		for i = 2, 16 do
			local item_data = turtle.getItemDetail(i)
			if item_data ~= nil then
				-- item slot is not empty, so we will select it and drop
				turtle.select(i)
				turtle.drop()
			end
		end
	else
        local file = io.open(""output.txt"", ""a"")
        file:write(""Not a forge chest in front of the turtle.\n"")
        file:close()
        return false
    end
    local file = io.open(""output.txt"", ""a"")
    file:write(""Finished storing items\n"")
    file:write(""Moving to previous location\n"")
    file:close()
	-- now we have emptied our inventory. now we need to return to (old_x, old_y, old_z) facing the direction we were previously facing
    if not moveTo(cur_x, cur_y, cur_z) then
        return false
    end
    local file = io.open(""output.txt"", ""a"")
    file:write(""Re-orienting to old direction\n"")
    file:close()
    -- facing south, rotate towards direction
    -- 0 North, 1 East, 2 South, 3 West
    if direction == 3 then
        turtle.turnRight()
    elseif direction == 1 then
        turtle.turnLeft()
    elseif direction == 0 then
        turtle.turnLeft()
        turtle.turnLeft()
    end
    local file = io.open(""output.txt"", ""a"")
    file:write(""Finished with storeItems()\n"")
    file:close()
    return true
end

-- mines a layer of the quarry
-- x y and z are the starting location of the quarry
function mine_layer(start_x, start_y, start_z)
	-- stackItems once per layer
	-- check if inventory is full after every block mined
	-- if inventory full then call storeItems
	stackItems()
	for x = 1, 16 do
		for y = 1, 15 do
			if isInventoryFull() then
				if not storeItems(start_x, start_y, start_z) then
					return false
				end
			end
			turtle.dig()
			if isInventoryFull() then
				if not storeItems(start_x, start_y, start_z) then
					return false
				end
			end
			turtle.digDown()
			if not checkAndRefuel() then
				return false
			end
			turtle.forward()
		end
		-- line finished so now we gotta dig down
		if isInventoryFull() then
			if not storeItems(start_x, start_y, start_z) then
				return false
			end
		end
		turtle.digDown()
		if x % 2 == 0 and x ~= 16 then
			turtle.turnLeft()
			if isInventoryFull() then
				if not storeItems(start_x, start_y, start_z) then
					return false
				end
			end
			turtle.dig()
			if not checkAndRefuel() then
				return false
			end
			turtle.forward()
			turtle.turnLeft()
		else
			turtle.turnRight()
			if isInventoryFull() then
				if not storeItems(start_x, start_y, start_z) then
					return false
				end
			end
			turtle.dig()
			if not checkAndRefuel() then
				return false
			end
			turtle.forward()
			turtle.turnRight()
		end
		-- ready to start new line
	end
	-- finished layer
	return true
end

-- main loop of quarry
local start_x, start_y, start_z = gps.locate()
local file = io.open(""output.txt"", ""a"")
file:write(""start_x = "", start_x, "", start_y = "", start_y, "", start_z = "", start_z, ""\n"")
file:close()
if start_x == nil or start_y == nil or start_z == nil then
    local file = io.open(""output.txt"", ""a"")
    file:write(""GPS Offline\n"")
    file:close()
    return
end
while 1 == 1 do
	if not mine_layer(start_x, start_y, start_z) then
        local file = io.open(""output.txt"", ""a"")
		file:write(""Failed to mine layer. Either out of storage or fuel\n"")
        file:close()
		return
	else
        local file = io.open(""output.txt"", ""a"")
		file:write(""Mined layer\n"")
        file:close()
        -- get ready for the next layer
        -- end layer facing south
        turtle.turnLeft()
        for i = 1, 15 do
            if not checkAndRefuel() then
                return false
            end
            turtle.forward()
        end
        turtle.turnRight()
        for i = 1, 2 do
            if not checkAndRefuel() then
                return false
            end
            turtle.down()
            turtle.digDown()
        end
        -- now we are ready to start the next layer
	end
end"
xrMqeZ8k,SmartLauncher bug logs 3,Kasama,Lua,Thursday 16th of May 2024 02:15:05 PM CDT,"05-16 16:14:29.819 26013 26013 D GenericViewGroupAdapter: submitList() called with list = [LaunchableGridModel(superGridId=3, launchableId=1, actionList=[LaunchableAction(idLaunchable=1, actionId=1, type=0, actionData=v9@dc6b49, label=Phone, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(0.0, 7.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=4, launchableId=2, actionList=[LaunchableAction(idLaunchable=2, actionId=1, type=1, actionData=v9@a001c4e, label=Spotify, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(1.0, 7.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=5, launchableId=3, actionList=[LaunchableAction(idLaunchable=3, actionId=1, type=2, actionData=aa@d00016f, label=Web Browser, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(2.0, 7.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=6, launchableId=4, actionList=[LaunchableAction(idLaunchable=4, actionId=1, type=3, actionData=aa@44a9e7c, label=Gallery, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(3.0, 7.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=7, launchableId=5, actionList=[LaunchableAction(idLaunchable=5, actionId=1, type=4, actionData=v9@ff77305, label=Messages, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(0.0, 6.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=8, launchableId=6, actionList=[LaunchableAction(idLaunchable=6, actionId=1, type=5, actionData=v9@c45af5a, label=Camera, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(1.0, 6.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=9, launchableId=7, actionList=[LaunchableAction(idLaunchable=7, actionId=1, type=7, actionData=v9@eb5458b, label=WhatsApp, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(2.0, 6.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=10, launchableId=8, actionList=[LaunchableAction(idLaunchable=8, actionId=1, type=9, actionData=x9@2e12668, label=Social, originalIcon=0, color=-1, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(3.0, 6.0: 1.0, 1.0), zIndex=1), isDragged=false), WidgetGridModel(superGridId=1, widget=ViewWidgetModel(id=1, provider=ComponentInfo{ginlemon.flowerfree/ginlemon.flower.viewWidget.ClockWidget}, positionIndex=null, parentWidgetId=-1), positioning=Grid(screenNumber=0, cellAndSpan=(0.0, 0.0: 4.0, 3.0), zIndex=1), isDragged=false), WidgetGridModel(superGridId=2, widget=ViewWidgetModel(id=2, provider=ComponentInfo{ginlemon.flowerfree/ginlemon.flower.viewWidget.SearchBarPlaceholder}, positionIndex=null, parentWidgetId=null), positioning=Grid(screenNumber=0, cellAndSpan=(0.0, 8.0: 4.0, 1.0), zIndex=2), isDragged=false)]
05-16 16:14:29.821 26013 26013 D ginlemon.flower.widgets.clock.ClockWidget: registerTimeReceiver
05-16 16:14:29.915  1022  1029 I vendor.qti.hardware.servicetracker@1.2-service: bindService is called for service : ginlemon.flowerfree/com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService and for client system
05-16 16:14:29.915  1022  1029 I vendor.qti.hardware.servicetracker@1.2-service: total connections for service : ginlemon.flowerfree/com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerServiceare :1
05-16 16:14:29.915  1022  1022 I vendor.qti.hardware.servicetracker@1.2-service: startService() is called for serviceginlemon.flowerfree/com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
05-16 16:14:29.927 26013 26013 I SuperGrid56: [LaunchableGridModel(superGridId=3, launchableId=1, actionList=[LaunchableAction(idLaunchable=1, actionId=1, type=0, actionData=v9@dc6b49, label=Phone, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(0.0, 7.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=4, launchableId=2, actionList=[LaunchableAction(idLaunchable=2, actionId=1, type=1, actionData=v9@a001c4e, label=Spotify, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(1.0, 7.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=5, launchableId=3, actionList=[LaunchableAction(idLaunchable=3, actionId=1, type=2, actionData=aa@d00016f, label=Web Browser, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(2.0, 7.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=6, launchableId=4, actionList=[LaunchableAction(idLaunchable=4, actionId=1, type=3, actionData=aa@44a9e7c, label=Gallery, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(3.0, 7.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=7, launchableId=5, actionList=[LaunchableAction(idLaunchable=5, actionId=1, type=4, actionData=v9@ff77305, label=Messages, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(0.0, 6.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=8, launchableId=6, actionList=[LaunchableAction(idLaunchable=6, actionId=1, type=5, actionData=v9@c45af5a, label=Camera, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(1.0, 6.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=9, launchableId=7, actionList=[LaunchableAction(idLaunchable=7, actionId=1, type=7, actionData=v9@eb5458b, label=WhatsApp, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(2.0, 6.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=10, launchableId=8, actionList=[LaunchableAction(idLaunchable=8, actionId=1, type=9, actionData=x9@2e12668, label=Social, originalIcon=0, color=-1, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(3.0, 6.0: 1.0, 1.0), zIndex=1), isDragged=false), WidgetGridModel(superGridId=1, widget=ViewWidgetModel(id=1, provider=ComponentInfo{ginlemon.flowerfree/ginlemon.flower.viewWidget.ClockWidget}, positionIndex=null, parentWidgetId=-1), positioning=Grid(screenNumber=0, cellAndSpan=(0.0, 0.0: 4.0, 3.0), zIndex=1), isDragged=false), WidgetGridModel(superGridId=2, widget=ViewWidgetModel(id=2, provider=ComponentInfo{ginlemon.flowerfree/ginlemon.flower.viewWidget.SearchBarPlaceholder}, positionIndex=null, parentWidgetId=null), positioning=Grid(screenNumber=0, cellAndSpan=(0.0, 8.0: 4.0, 1.0), zIndex=2), isDragged=false)]
05-16 16:14:29.929  8501  8501 D AppLockService: Window state changed: ginlemon.flowerfree
05-16 16:14:30.000 15393 26638 I GameBoosterService: restartGameMode: ginlemon.flowerfree
05-16 16:14:30.004 11001 26636 I GameBoosterService: restartGameMode: ginlemon.flowerfree
05-16 16:14:30.142  1864  1957 I Timeline: Timeline: Activity_windows_visible id: ActivityRecord{82b9e00 u0 ginlemon.flowerfree/ginlemon.flower.HomeScreen t26635} time:572457
05-16 16:14:30.206  3719  3719 E AlphabeticalAppsList: Predicted app not found: ginlemon.flowerfree/ginlemon.flower.HomeScreen#0
05-16 16:14:30.210  3719  3719 E AlphabeticalAppsList: Predicted app not found: ginlemon.flowerfree/ginlemon.flower.HomeScreen#0
05-16 16:14:30.212  3719  3719 E AlphabeticalAppsList: Predicted app not found: ginlemon.flowerfree/ginlemon.flower.HomeScreen#0
05-16 16:14:30.359  7482  7482 I KeyboardContextProvider: KeyboardContextProvider$KeyboardContextCache.createKeyboardContext():173 createKeyboardContext(): en-US, jdl@dd43190(com.android.inputmethod.latin.LatinIME@288dd3f), {1.0 724mcc40mnc [en_US] ldltr sw392dp w392dp h839dp 440dpi nrml long hdr widecg port night finger -keyb/v/h -nav/h winConfig={ mBounds=Rect(0, 0 - 1080, 2400) mAppBounds=Rect(0, 91 - 1080, 2400) mWindowingMode=fullscreen mDisplayWindowingMode=fullscreen mActivityType=undefined mAlwaysOnTop=undefined mRotation=ROTATION_0} as.6 s.27 themeChanged=0 themeChangedFlags=0 extraData = Bundle[{}]}
05-16 16:14:30.359  7482  7482 I GoogleInputMethodService: GoogleInputMethodService.onCurrentInputMethodEntryChanged():3609 onCurrentInputMethodEntryChanged(): imeDefsChanged=false, initializedEntryChanged=false, keyboardContextChanged=true
05-16 16:14:30.360  7482  7482 I AbstractOpenableExtension: AbstractOpenableExtension.maybeDestroyExistingKeyboardGroupManager():535 Destroy existing keyboard group manager in fsm
05-16 16:14:30.360  7482  7482 I AbstractOpenableExtension: AbstractOpenableExtension.createKeyboardGroupManagerListenableFuture():120 Create keyboard group manager listenable future in fsm
05-16 16:14:30.361  7482 24943 I KeyboardGroupDefParser: KeyboardGroupDefParser.parseKeyboardGroupDef():83 parseKeyboardGroupDef() 2132214034 -> 0_resource_name_obfuscated : WaitTime = 0 ms : RunTime = 0 ms
05-16 16:14:30.361  7482  7482 I KeyboardHeightUtil: KeyboardHeightUtil.calculateMaxKeyboardBodyHeight():45 leave 267 height for app when ime window height:2309, header height:121 and isFullscreenMode:false, so the max keyboard body height is:1921
05-16 16:14:30.361  7482  7482 I KeyboardHeightUtil: KeyboardHeightUtil.calculateMaxKeyboardBodyHeight():45 leave 267 height for app when ime window height:2309, header height:121 and isFullscreenMode:false, so the max keyboard body height is:1921
05-16 16:14:30.361  7482  7482 I KeyboardModeManager: KeyboardModeManager.onCurrentInputMethodEntryChanged():1121 Reload data for context change
05-16 16:14:30.361  7482  7482 I GoogleInputMethodService: GoogleInputMethodService.initializeInputMethodServiceData():1347 initializeInputMethodServiceData for kaq{languageTag=en-US, variant=qwerty, hasLocalizedResources=true, conditionCacheKey=_device=phone_device_size=default_enable_more_candidates_view_for_multilingual=false_enable_nav_redesign_for_expression=true_enable_number_row=false_enable_preemptive_decode=true_enable_secondary_digits=true_enable_secondary_symbols=true_enable_show_foldable_layout_on_small_tablet=false_expressions=normal_four_or_more_letter_rows=false_keyboard_mode=normal_language=en-US_orientation=portrait_physical_keyboard=nokeys_rtl_layout=false_show_secondary_digits=true_show_suggestions=true_split_with_duplicate_keys=true_variant=qwerty, imeDef.stringId=ime_english_united_states, imeDef.className=com.google.android.apps.inputmethod.libs.latin5.LatinIme, imeDef.languageTag=en-US}
05-16 16:14:30.362  7482  7482 I StyledKeyboardThemeBuilder: StyledKeyboardThemeBuilder.build():133 Pref: [], themeName: [assets:theme_package_metadata_google_blue_dark.binarypb], darkMode: [true], cacheKey: [builtin_google_blue_dark.binarypb]
05-16 16:14:30.362  7482  7482 I KeyboardThemeProvider: KeyboardThemeProvider.applyKeyboardTheme():27 Apply keyboard theme: theme_stylesheet_dark_phone_bottom4dp_navredesign_350_builtin_google_blue_dark.binarypb_port
05-16 16:14:30.363  7482  7482 I KeyboardContextProvider: KeyboardContextProvider.setBaseContextAndInvalidKeyboardContextCache():88 setBaseContextAndInvalidKeyboardContextCache(): com.android.inputmethod.latin.LatinIME@288dd3f
05-16 16:14:30.364  7482  7482 I KeyboardDefCache: MemoryFileCache$2.onFailure():229 Load data from cache for key: 0352dba56f1ce6c9aef0051387cf70f0 has been cancelled
05-16 16:14:30.364  7482  7482 I KeyboardManager: KeyboardManager.createKeyboardInternal():407 Keyboard request for prime is out-of-date.
05-16 16:14:30.364  7482  7482 I GoogleInputMethodService: GoogleInputMethodService.discardAllKeyboardViewAndInputView():1785 discardAllKeyboardViewAndInputView()
05-16 16:14:30.364  7482  7482 I AbstractOpenableExtension: AbstractOpenableExtension.maybeDestroyExistingKeyboardGroupManager():535 Destroy existing keyboard group manager in fsm
05-16 16:14:30.364  7482  7482 I AbstractOpenableExtension: AbstractOpenableExtension.createKeyboardGroupManagerListenableFuture():120 Create keyboard group manager listenable future in fsm
05-16 16:14:30.364  7482  7482 I KeyboardModeManager: KeyboardModeManager.setInputViewKeyboardViewHolderProvider():620 setInputView() : supportsOneHandedMode=true supportsSplitMode=true
05-16 16:14:30.364  7482  7482 I NormalModeController: NormalModeController.getKeyboardBodyViewHolderPaddingBottom():104 currentPrimeKeyboardType:SOFT systemPaddingBottom:-1
05-16 16:14:30.364  7482  7482 I KeyboardModeManager: KeyboardModeManager.setInputViewKeyboardViewHolderProvider():610 setInputView() : entry=kaq{languageTag=en-US, variant=qwerty, hasLocalizedResources=true, conditionCacheKey=_device=phone_device_size=default_enable_more_candidates_view_for_multilingual=false_enable_nav_redesign_for_expression=true_enable_number_row=false_enable_preemptive_decode=true_enable_secondary_digits=true_enable_secondary_symbols=true_enable_show_foldable_layout_on_small_tablet=false_expressions=normal_four_or_more_letter_rows=false_keyboard_mode=normal_language=en-US_orientation=portrait_physical_keyboard=nokeys_rtl_layout=false_show_secondary_digits=true_show_suggestions=true_split_with_duplicate_keys=true_variant=qwerty, imeDef.stringId=ime_english_united_states, imeDef.className=com.google.android.apps.inputmethod.libs.latin5.LatinIme, imeDef.languageTag=en-US}
05-16 16:14:30.364  7482  7482 I GoogleInputMethodService: GoogleInputMethodService.initializeInputMethodServiceData():1347 initializeInputMethodServiceData for kaq{languageTag=en-US, variant=qwerty, hasLocalizedResources=true, conditionCacheKey=_device=phone_device_size=default_enable_more_candidates_view_for_multilingual=false_enable_nav_redesign_for_expression=true_enable_number_row=false_enable_preemptive_decode=true_enable_secondary_digits=true_enable_secondary_symbols=true_enable_show_foldable_layout_on_small_tablet=false_expressions=normal_four_or_more_letter_rows=false_keyboard_mode=normal_language=en-US_orientation=portrait_physical_keyboard=nokeys_rtl_layout=false_show_secondary_digits=true_show_suggestions=true_split_with_duplicate_keys=true_variant=qwerty, imeDef.stringId=ime_english_united_states, imeDef.className=com.google.android.apps.inputmethod.libs.latin5.LatinIme, imeDef.languageTag=en-US}
05-16 16:14:30.365  7482  7482 I StyledKeyboardThemeBuilder: StyledKeyboardThemeBuilder.build():133 Pref: [], themeName: [assets:theme_package_metadata_google_blue_dark.binarypb], darkMode: [true], cacheKey: [builtin_google_blue_dark.binarypb]
05-16 16:14:30.365  7482  7482 I KeyboardThemeProvider: KeyboardThemeProvider.applyKeyboardTheme():27 Apply keyboard theme: theme_stylesheet_dark_phone_bottom4dp_navredesign_350_builtin_google_blue_dark.binarypb_port
05-16 16:14:30.366  7482 24939 I KeyboardGroupDefParser: KeyboardGroupDefParser.parseKeyboardGroupDef():83 parseKeyboardGroupDef() 2132214034 -> 0_resource_name_obfuscated : WaitTime = 2 ms : RunTime = 0 ms
05-16 16:14:30.382  7482  7482 I GoogleInputMethodService: GoogleInputMethodService.onStartInput():1954 onStartInput(EditorInfo{EditorInfo{packageName=ginlemon.flowerfree, inputType=0, inputTypeString=NULL, enableLearning=false, autoCorrection=false, autoComplete=false, imeOptions=0, privateImeOptions=null, actionName=UNSPECIFIED, actionLabel=null, initialSelStart=-1, initialSelEnd=-1, initialCapsMode=0, label=null, fieldId=-1, fieldName=null, extras=null, hintText=null, hintLocales=[]}}, true)
05-16 16:14:30.398  7482 24943 I AbstractOpenableExtension: AbstractOpenableExtension.createKeyboardGroupManagerListenableFuture():120 Create keyboard group manager listenable future in egd
05-16 16:14:30.399  7482 24943 I KeyboardGroupDefParser: KeyboardGroupDefParser.parseKeyboardGroupDef():83 parseKeyboardGroupDef() 2132214040 -> 0_resource_name_obfuscated : WaitTime = 0 ms : RunTime = 1 ms
05-16 16:14:30.399  7482 24943 I AbstractOpenableExtension: AbstractOpenableExtension.createKeyboardGroupManagerListenableFuture():120 Create keyboard group manager listenable future in fup
05-16 16:14:30.400  7482 24943 I KeyboardGroupDefParser: KeyboardGroupDefParser.parseKeyboardGroupDef():83 parseKeyboardGroupDef() 2132214041 -> 0_resource_name_obfuscated : WaitTime = 1 ms : RunTime = 0 ms
05-16 16:14:30.427  7482 25249 I KeyboardGroupDefParser: KeyboardGroupDefParser.parseKeyboardGroupDef():83 parseKeyboardGroupDef() 2132214028 -> 0_resource_name_obfuscated : WaitTime = 4 ms : RunTime = 1 ms
05-16 16:14:30.432  7482  7482 I AbstractOpenableExtension: AbstractOpenableExtension$3.onSuccess():549 KeyboardGroupManager destroyed in fsm.
05-16 16:14:30.432  7482  7482 I AbstractOpenableExtension: AbstractOpenableExtension$3.onFailure():557 Failed to load KeyboardGroupManager in fsm.
05-16 16:14:30.463  3719  3719 E AlphabeticalAppsList: Predicted app not found: ginlemon.flowerfree/ginlemon.flower.HomeScreen#0
05-16 16:14:30.467  3719  3719 E AlphabeticalAppsList: Predicted app not found: ginlemon.flowerfree/ginlemon.flower.HomeScreen#0
05-16 16:14:30.469  3719  3719 E AlphabeticalAppsList: Predicted app not found: ginlemon.flowerfree/ginlemon.flower.HomeScreen#0
05-16 16:14:30.531 26013 26013 D ginlemon.flower.widgets.clock.ClockWidget: unregisterReceivers
05-16 16:14:30.532 26013 26013 I HomeScreen: HomeScreenLifeCicle: OnDestroy ginlemon.flower.HomeScreen@99d7493
05-16 16:14:30.574  1864  4059 D MIUIInput: [FoucsChange]: Display  0 FocusedWindow From null(0,0)  to Window{7189e8c mode=1 rootTaskId=1 u0 ginlemon.flowerfree/ginlemon.flower.HomeScreen}(1,1)
05-16 16:14:30.576 26013 26013 I HomeScreen: HomeScreenLifeCicle: onCreate ginlemon.flower.HomeScreen@83a6be1
05-16 16:14:30.636 11243 11243 D TouchAssistant: topActivity.getPackageName(),packageName:ginlemon.flowerfree
05-16 16:14:30.636 11243 11243 D TouchAssistant: onTopAppChanged packageName:ginlemon.flowerfree
05-16 16:14:30.806  7482  7482 I KeyboardDefCache: MemoryFileCache$1.onTrimMemory():126 clearMemory() for trim memory: 5
05-16 16:14:30.806  7482  7482 I KeyboardDefCache: MemoryFileCache.clearMemory():410 evictAll()
05-16 16:14:30.829 26013 26013 D WidgetPager: onBind() called with: view = ginlemon.flower.panels.superWidgetPanel.WidgetPage{897bd4f VFED..CL. ......I. 0,0-0,0}, item = GridState(screenNumber=1, proposedArea=null, occupied=[], superGridItemList=[])
05-16 16:14:30.831 26013 26013 E ActivityInjector:      at ginlemon.flower.HomeScreen.onResume(SourceFile:1)
05-16 16:14:30.860 26013 26086 W RenderInspector: QueueBuffer time out on ginlemon.flowerfree/ginlemon.flower.HomeScreen, count=1, avg=27 ms, max=27 ms.
05-16 16:14:30.892  1864  2388 I InputReader: Reconfiguring input devices, changes=KEYBOARD_LAYOUTS |
05-16 16:14:30.930 11120 11319 I DisplayFrameSetting: MSG_RECENT_TASK isEnter=false mCurrentFgInfo=ForegroundInfo{mForegroundPackageName='ginlemon.flowerfree', mForegroundUid=10421, mForegroundPid=26013, mLastForegroundPackageName='com.google.android.permissioncontroller', mLastForegroundUid=10092, mLastForegroundPid=12546, mMultiWindowForegroundPackageName='null', mMultiWindowForegroundUid=-1, mFlags=0}
05-16 16:14:30.932  7482  7482 I GoogleInputMethodService: GoogleInputMethodService.onStartInput():1954 onStartInput(EditorInfo{EditorInfo{packageName=ginlemon.flowerfree, inputType=0, inputTypeString=NULL, enableLearning=false, autoCorrection=false, autoComplete=false, imeOptions=0, privateImeOptions=null, actionName=UNSPECIFIED, actionLabel=null, initialSelStart=-1, initialSelEnd=-1, initialCapsMode=0, label=null, fieldId=-1, fieldName=null, extras=null, hintText=null, hintLocales=[]}}, false)
05-16 16:14:30.958 26013 26013 D GenericViewGroupAdapter: submitList() called with list = [LaunchableGridModel(superGridId=3, launchableId=1, actionList=[LaunchableAction(idLaunchable=1, actionId=1, type=0, actionData=v9@dc6b49, label=Phone, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(0.0, 7.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=4, launchableId=2, actionList=[LaunchableAction(idLaunchable=2, actionId=1, type=1, actionData=v9@a001c4e, label=Spotify, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(1.0, 7.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=5, launchableId=3, actionList=[LaunchableAction(idLaunchable=3, actionId=1, type=2, actionData=aa@d00016f, label=Web Browser, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(2.0, 7.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=6, launchableId=4, actionList=[LaunchableAction(idLaunchable=4, actionId=1, type=3, actionData=aa@44a9e7c, label=Gallery, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(3.0, 7.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=7, launchableId=5, actionList=[LaunchableAction(idLaunchable=5, actionId=1, type=4, actionData=v9@ff77305, label=Messages, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(0.0, 6.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=8, launchableId=6, actionList=[LaunchableAction(idLaunchable=6, actionId=1, type=5, actionData=v9@c45af5a, label=Camera, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(1.0, 6.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=9, launchableId=7, actionList=[LaunchableAction(idLaunchable=7, actionId=1, type=7, actionData=v9@eb5458b, label=WhatsApp, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(2.0, 6.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=10, launchableId=8, actionList=[LaunchableAction(idLaunchable=8, actionId=1, type=9, actionData=x9@2e12668, label=Social, originalIcon=0, color=-1, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(3.0, 6.0: 1.0, 1.0), zIndex=1), isDragged=false), WidgetGridModel(superGridId=1, widget=ViewWidgetModel(id=1, provider=ComponentInfo{ginlemon.flowerfree/ginlemon.flower.viewWidget.ClockWidget}, positionIndex=null, parentWidgetId=-1), positioning=Grid(screenNumber=0, cellAndSpan=(0.0, 0.0: 4.0, 3.0), zIndex=1), isDragged=false), WidgetGridModel(superGridId=2, widget=ViewWidgetModel(id=2, provider=ComponentInfo{ginlemon.flowerfree/ginlemon.flower.viewWidget.SearchBarPlaceholder}, positionIndex=null, parentWidgetId=null), positioning=Grid(screenNumber=0, cellAndSpan=(0.0, 8.0: 4.0, 1.0), zIndex=2), isDragged=false)]
05-16 16:14:30.966 26013 26013 D ginlemon.flower.widgets.clock.ClockWidget: registerTimeReceiver
05-16 16:14:31.057 26013 26013 I SuperGrid16: [LaunchableGridModel(superGridId=3, launchableId=1, actionList=[LaunchableAction(idLaunchable=1, actionId=1, type=0, actionData=v9@dc6b49, label=Phone, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(0.0, 7.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=4, launchableId=2, actionList=[LaunchableAction(idLaunchable=2, actionId=1, type=1, actionData=v9@a001c4e, label=Spotify, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(1.0, 7.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=5, launchableId=3, actionList=[LaunchableAction(idLaunchable=3, actionId=1, type=2, actionData=aa@d00016f, label=Web Browser, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(2.0, 7.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=6, launchableId=4, actionList=[LaunchableAction(idLaunchable=4, actionId=1, type=3, actionData=aa@44a9e7c, label=Gallery, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(3.0, 7.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=7, launchableId=5, actionList=[LaunchableAction(idLaunchable=5, actionId=1, type=4, actionData=v9@ff77305, label=Messages, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(0.0, 6.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=8, launchableId=6, actionList=[LaunchableAction(idLaunchable=6, actionId=1, type=5, actionData=v9@c45af5a, label=Camera, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(1.0, 6.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=9, launchableId=7, actionList=[LaunchableAction(idLaunchable=7, actionId=1, type=7, actionData=v9@eb5458b, label=WhatsApp, originalIcon=0, color=null, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(2.0, 6.0: 1.0, 1.0), zIndex=1), isDragged=false), LaunchableGridModel(superGridId=10, launchableId=8, actionList=[LaunchableAction(idLaunchable=8, actionId=1, type=9, actionData=x9@2e12668, label=Social, originalIcon=0, color=-1, customIconPropsInternal=CustomIconProperties(adaptive=false, extraInset=NaN, forceAdaptiveBg=false))], notificationCount=0, positioning=Grid(screenNumber=0, cellAndSpan=(3.0, 6.0: 1.0, 1.0), zIndex=1), isDragged=false), WidgetGridModel(superGridId=1, widget=ViewWidgetModel(id=1, provider=ComponentInfo{ginlemon.flowerfree/ginlemon.flower.viewWidget.ClockWidget}, positionIndex=null, parentWidgetId=-1), positioning=Grid(screenNumber=0, cellAndSpan=(0.0, 0.0: 4.0, 3.0), zIndex=1), isDragged=false), WidgetGridModel(superGridId=2, widget=ViewWidgetModel(id=2, provider=ComponentInfo{ginlemon.flowerfree/ginlemon.flower.viewWidget.SearchBarPlaceholder}, positionIndex=null, parentWidgetId=null), positioning=Grid(screenNumber=0, cellAndSpan=(0.0, 8.0: 4.0, 1.0), zIndex=2), isDragged=false)]
05-16 16:14:31.064  3719  3719 D Launcher: getDesiredHomePackage:ginlemon.flowerfree
05-16 16:14:31.233  7482  7482 I GoogleInputMethodService: GoogleInputMethodService.onStartInput():1954 onStartInput(EditorInfo{EditorInfo{packageName=ginlemon.flowerfree, inputType=1, inputTypeString=Normal, enableLearning=true, autoCorrection=true, autoComplete=true, imeOptions=14000002, privateImeOptions=null, actionName=GO, actionLabel=null, initialSelStart=0, initialSelEnd=0, initialCapsMode=0, label=null, fieldId=2131362133, fieldName=null, extras=null, hintText=non-empty, hintLocales=[]}}, false)
05-16 16:14:31.244  7482  7482 I KeyboardModeManager: KeyboardModeManager.setInputViewKeyboardViewHolderProvider():620 setInputView() : supportsOneHandedMode=true supportsSplitMode=true
05-16 16:14:31.244  7482  7482 I AndroidIME: KeyboardViewManager.updateKeyboardBackgroundFrameVisibility():314 Set background frame visibility. old:8, new:8
05-16 16:14:31.244  7482  7482 I NormalModeController: NormalModeController.getKeyboardBodyViewHolderPaddingBottom():104 currentPrimeKeyboardType:SOFT systemPaddingBottom:-1
05-16 16:14:31.244  7482  7482 I KeyboardHeightUtil: KeyboardHeightUtil.calculateMaxKeyboardBodyHeight():45 leave 267 height for app when ime window height:2309, header height:121 and isFullscreenMode:false, so the max keyboard body height is:1921
05-16 16:14:31.244  7482  7482 I KeyboardHeightUtil: KeyboardHeightUtil.calculateMaxKeyboardBodyHeight():45 leave 267 height for app when ime window height:2309, header height:121 and isFullscreenMode:false, so the max keyboard body height is:1921
05-16 16:14:31.245  7482  7482 I NormalModeController: NormalModeController.getKeyboardBodyViewHolderPaddingBottom():104 currentPrimeKeyboardType:SOFT systemPaddingBottom:-1
05-16 16:14:31.245  7482  7482 I KeyboardHeightUtil: KeyboardHeightUtil.calculateMaxKeyboardBodyHeight():45 leave 267 height for app when ime window height:2309, header height:121 and isFullscreenMode:false, so the max keyboard body height is:1921
05-16 16:14:31.245  7482  7482 I KeyboardHeightUtil: KeyboardHeightUtil.calculateMaxKeyboardBodyHeight():45 leave 267 height for app when ime window height:2309, header height:121 and isFullscreenMode:false, so the max keyboard body height is:1921
05-16 16:14:31.245  7482  7482 I KeyboardModeManager: KeyboardModeManager.setInputViewKeyboardViewHolderProvider():610 setInputView() : entry=kaq{languageTag=en-US, variant=qwerty, hasLocalizedResources=true, conditionCacheKey=_device=phone_device_size=default_enable_more_candidates_view_for_multilingual=false_enable_nav_redesign_for_expression=true_enable_number_row=false_enable_preemptive_decode=true_enable_secondary_digits=true_enable_secondary_symbols=true_enable_show_foldable_layout_on_small_tablet=false_expressions=normal_four_or_more_letter_rows=false_keyboard_mode=normal_language=en-US_orientation=portrait_physical_keyboard=nokeys_rtl_layout=false_show_secondary_digits=true_show_suggestions=true_split_with_duplicate_keys=true_variant=qwerty, imeDef.stringId=ime_english_united_states, imeDef.className=com.google.android.apps.inputmethod.libs.latin5.LatinIme, imeDef.languageTag=en-US}
05-16 16:14:31.246  7482  7482 I GoogleInputMethodService: GoogleInputMethodService.onStartInputView():2066 onStartInputView(EditorInfo{EditorInfo{packageName=ginlemon.flowerfree, inputType=1, inputTypeString=Normal, enableLearning=true, autoCorrection=true, autoComplete=true, imeOptions=14000002, privateImeOptions=null, actionName=GO, actionLabel=null, initialSelStart=0, initialSelEnd=0, initialCapsMode=0, label=null, fieldId=2131362133, fieldName=null, extras=null, hintText=non-empty, hintLocales=[]}}, false)
05-16 16:14:31.277  7482  7482 I KeyboardHeightUtil: KeyboardHeightUtil.getOemKeyboardHeightRatio():206 systemKeyboardHeightRatio:1.000000.
05-16 16:14:31.282  7482  7482 I AndroidIME: AbstractIme.onActivate():89 LatinIme.onActivate() : EditorInfo = EditorInfo{packageName=ginlemon.flowerfree, inputType=1, inputTypeString=Normal, enableLearning=true, autoCorrection=true, autoComplete=true, imeOptions=14000002, privateImeOptions=null, actionName=GO, actionLabel=null, initialSelStart=0, initialSelEnd=0, initialCapsMode=0, label=null, fieldId=2131362133, fieldName=null, extras=null, hintText=non-empty, hintLocales=[]}, IncognitoMode = false, DeviceLocked = false
05-16 16:14:31.290  7482  7482 I InputBundle: InputBundle.consumeEvent():886 Skip consuming an event as keyboard status is 0
05-16 16:14:31.304  7482  7482 I KeyboardWrapper: KeyboardWrapper.activateKeyboard():575 activateKeyboard(): type=prime, status=0, imeDef=krb{stringId=ime_english_united_states, language=en-US, languageTag=en-US, processedConditions={enable_number_row=false, device=phone}, className=com.google.android.apps.inputmethod.libs.latin5.LatinIme, label=0, keyEventInterpreter=null, inlineComposing=true, autoCapital=true, announceAutoSelectedCandidate=true, statusIcon=0, primeKeyboardType=SOFT, indicatorIcon=0, indicatorLabel=US, displayAppCompletions=true, extraValues=kqt{}, processors=kst@b6a9cf, unacceptableMetaKeys=4098, languageSpecificSettings=0, asciiCapable=true, alwaysShowSuggestions=false, useAsciiPasswordKeyboard=false, secondaryIme=null, keyboardGroupDef=ksb@ace7bcc, phenotypeFlagId=0, localizationLanguageTag=null, supportsInlineSuggestion=true, supportsAccessPoints=true}
05-16 16:14:31.304  7482  7482 I KeyboardManager: KeyboardManager.requestKeyboard():234 Creating keyboard prime, imeId=ime_english_united_states, cacheKey=theme_stylesheet_dark_phone_bottom4dp_navredesign
05-16 16:14:31.304  7482  7482 I KeyboardModeManager: KeyboardModeManager.setInputViewKeyboardViewHolderProvider():620 setInputView() : supportsOneHandedMode=true supportsSplitMode=true
05-16 16:14:31.304  7482  7482 I NormalModeController: NormalModeController.getKeyboardBodyViewHolderPaddingBottom():104 currentPrimeKeyboardType:SOFT systemPaddingBottom:-1
05-16 16:14:31.305  7482  7482 I KeyboardHeightUtil: KeyboardHeightUtil.calculateMaxKeyboardBodyHeight():45 leave 267 height for app when ime window height:2309, header height:121 and isFullscreenMode:false, so the max keyboard body height is:1921
05-16 16:14:31.305  7482  7482 I KeyboardHeightUtil: KeyboardHeightUtil.calculateMaxKeyboardBodyHeight():45 leave 267 height for app when ime window height:2309, header height:121 and isFullscreenMode:false, so the max keyboard body height is:1921
05-16 16:14:31.305  7482  7482 I NormalModeController: NormalModeController.getKeyboardBodyViewHolderPaddingBottom():104 currentPrimeKeyboardType:SOFT systemPaddingBottom:-1
05-16 16:14:31.306  7482  7482 I KeyboardHeightUtil: KeyboardHeightUtil.calculateMaxKeyboardBodyHeight():45 leave 267 height for app when ime window height:2309, header height:121 and isFullscreenMode:false, so the max keyboard body height is:1921
05-16 16:14:31.306  7482  7482 I KeyboardHeightUtil: KeyboardHeightUtil.calculateMaxKeyboardBodyHeight():45 leave 267 height for app when ime window height:2309, header height:121 and isFullscreenMode:false, so the max keyboard body height is:1921
05-16 16:14:31.306  7482  7482 I KeyboardModeManager: KeyboardModeManager.setInputViewKeyboardViewHolderProvider():610 setInputView() : entry=kaq{languageTag=en-US, variant=qwerty, hasLocalizedResources=true, conditionCacheKey=_device=phone_device_size=default_enable_more_candidates_view_for_multilingual=false_enable_nav_redesign_for_expression=true_enable_number_row=false_enable_preemptive_decode=true_enable_secondary_digits=true_enable_secondary_symbols=true_enable_show_foldable_layout_on_small_tablet=false_expressions=normal_four_or_more_letter_rows=false_keyboard_mode=normal_language=en-US_orientation=portrait_physical_keyboard=nokeys_rtl_layout=false_show_secondary_digits=true_show_suggestions=true_split_with_duplicate_keys=true_variant=qwerty, imeDef.stringId=ime_english_united_states, imeDef.className=com.google.android.apps.inputmethod.libs.latin5.LatinIme, imeDef.languageTag=en-US}
05-16 16:14:31.413  7482  7482 I KeyboardHeightUtil: KeyboardHeightUtil.calculateMaxKeyboardBodyHeight():45 leave 267 height for app when ime window height:2309, header height:121 and isFullscreenMode:false, so the max keyboard body height is:1921
05-16 16:14:31.427  7482  7482 I KeyboardWrapper: KeyboardWrapper.onKeyboardReady():239 onKeyboardReady(): type=null(prime), kb=com.google.android.apps.inputmethod.latin.keyboard.LatinPrimeKeyboard@cdaf592
05-16 16:14:31.427  7482  7482 I KeyboardWrapper: KeyboardWrapper.doActivateKeyboard():606 doActivateKeyboard(): prime
05-16 16:14:31.524  7482  7482 I KeyboardViewHelper: KeyboardViewHelper.getView():168 Get view with height ratio:1.000000
05-16 16:14:31.662  7482  7482 I KeyboardHeightUtil: KeyboardHeightUtil.calculateMaxKeyboardBodyHeight():45 leave 267 height for app when ime window height:2309, header height:121 and isFullscreenMode:false, so the max keyboard body height is:1921
05-16 16:14:31.666  7482  7482 I SoftKeyboardView: SoftKeyboardView.setMaxHeight():949 Set max keyboard height:1921.
05-16 16:14:31.668  7482  7482 W KeyboardDef: KeyboardDef.getKeyboardViewDef():757 KeyboardViewDef is not found: keyboardDef=krw{processedConditions={enable_more_candidates_view_for_multilingual=false, enable_secondary_symbols=true, variant=qwerty, language=en-US, device=phone, expressions=normal, keyboard_mode=normal, show_secondary_digits=true, enable_preemptive_decode=true, rtl_layout=false}, globalConditions={global_theme_key=theme_stylesheet_dark_phone_bottom4dp_navredesign, global_locale=en_US, global_density_dpi=440, global_orientation=1}, className=.latin.keyboard.LatinPrimeKeyboard, resourceIds=[#0x7f170665, #0x7f1708e2], initialStates=0, keyboardViewDefs=[ksj{direction=null, id=#0x7f0b0150, isScalable=true, layoutId=#0x7f0e03ac, type=BODY, touchable=true, defaultShow=true}, ksj{direction=null, id=#0x7f0b0150, isScalable=false, layoutId=#0x7f0e01b9, type=FLOATING_CANDIDATES, touchable=false, defaultShow=false}, ksj{direction=LOCALE, id=#0x7f0b0150, isScalable=false, layoutId=#0x7f0e05a2, type=HEADER, touchable=true, defaultShow=true}], persistentStates=0, persistentStatesPrefKey=null, popupBubbleLayoutId=#0x7f0e068c, recentKeyLayoutId=0, recentKeyPopupLayoutId=0, recentKeyType=null, rememberRecentKey=NONE, sessionStates=17592186044419}, type=WIDGET, id=2131427664
05-16 16:14:31.668  7482  7482 W Keyboard: Keyboard.getKeyboardViewHelper():574 null helper is returned: keyboardDef=krw{processedConditions={enable_more_candidates_view_for_multilingual=false, enable_secondary_symbols=true, variant=qwerty, language=en-US, device=phone, expressions=normal, keyboard_mode=normal, show_secondary_digits=true, enable_preemptive_decode=true, rtl_layout=false}, globalConditions={global_theme_key=theme_stylesheet_dark_phone_bottom4dp_navredesign, global_locale=en_US, global_density_dpi=440, global_orientation=1}, className=.latin.keyboard.LatinPrimeKeyboard, resourceIds=[#0x7f170665, #0x7f1708e2], initialStates=0, keyboardViewDefs=[ksj{direction=null, id=#0x7f0b0150, isScalable=true, layoutId=#0x7f0e03ac, type=BODY, touchable=true, defaultShow=true}, ksj{direction=null, id=#0x7f0b0150, isScalable=false, layoutId=#0x7f0e01b9, type=FLOATING_CANDIDATES, touchable=false, defaultShow=false}, ksj{direction=LOCALE, id=#0x7f0b0150, isScalable=false, layoutId=#0x7f0e05a2, type=HEADER, touchable=true, defaultShow=true}], persistentStates=0, persistentStatesPrefKey=null, popupBubbleLayoutId=#0x7f0e068c, recentKeyLayoutId=0, recentKeyPopupLayoutId=0, recentKeyType=null, rememberRecentKey=NONE, sessionStates=17592186044419}, type=WIDGET, helpersCreated=[kga@df9fd74, kga@a62729d, kga@d44d312, null], context.getResources().getConfiguration(): {1.0 724mcc40mnc [en_US] ldltr sw392dp w392dp h839dp 440dpi nrml long hdr widecg port night finger -keyb/v/h -nav/h winConfig={ mBounds=Rect(0, 0 - 1080, 2400) mAppBounds=Rect(0, 91 - 1080, 2400) mWindowingMode=fullscreen mDisplayWindowingMode=fullscreen mActivityType=undefined mAlwaysOnTop=undefined mRotation=ROTATION_0} as.6 s.27 themeChanged=0 themeChangedFlags=0 extraData = Bundle[{}]}
05-16 16:14:31.670  7482  7482 I KeyboardHeightUtil: KeyboardHeightUtil.calculateMaxKeyboardBodyHeight():45 leave 267 height for app when ime window height:2309, header height:121 and isFullscreenMode:false, so the max keyboard body height is:1921
05-16 16:14:31.679  7482  7482 I KeyboardContextProvider: KeyboardContextProvider$KeyboardContextCache.createKeyboardContext():173 createKeyboardContext(): pt-BR, jdl@86a3d0d(com.android.inputmethod.latin.LatinIME@288dd3f), {1.0 724mcc40mnc [pt_BR] ldltr sw392dp w392dp h839dp 440dpi nrml long hdr widecg port night finger -keyb/v/h -nav/h winConfig={ mBounds=Rect(0, 0 - 1080, 2400) mAppBounds=Rect(0, 91 - 1080, 2400) mWindowingMode=fullscreen mDisplayWindowingMode=fullscreen mActivityType=undefined mAlwaysOnTop=undefined mRotation=ROTATION_0} as.6 s.27 themeChanged=0 themeChangedFlags=0 extraData = Bundle[{}]}
05-16 16:14:31.709  7482  7482 I KeyboardHeightUtil: KeyboardHeightUtil.calculateMaxKeyboardBodyHeight():45 leave 267 height for app when ime window height:2309, header height:121 and isFullscreenMode:false, so the max keyboard body height is:1921
05-16 16:14:31.709  7482  7482 I AndroidIME: KeyboardViewManager.updateKeyboardBackgroundFrameVisibility():314 Set background frame visibility. old:8, new:8
05-16 16:14:31.711  7482  7482 I KeyboardHeightUtil: KeyboardHeightUtil.calculateMaxKeyboardBodyHeight():45 leave 267 height for app when ime window height:2309, header height:121 and isFullscreenMode:false, so the max keyboard body height is:1921
05-16 16:14:31.749  7482  7482 I GoogleInputMethodService: GoogleInputMethodService$1.onKeyboardViewShown():486 onKeyboardViewShown: keyboardType=prime, keyboardViewType=HEADER
05-16 16:14:31.750  7482  7482 I GoogleInputMethodService: GoogleInputMethodService$1.onKeyboardViewShown():486 onKeyboardViewShown: keyboardType=prime, keyboardViewType=BODY
05-16 16:14:31.750  7482  7482 I NewLanguagePromptExtension: NewLanguagePromptExtension$1.onKeyboardViewShown():110 Not show new language banner: no new languages.
05-16 16:14:31.750  7482  7482 I NormalModeController: NormalModeController.getKeyboardBodyViewHolderPaddingBottom():104 currentPrimeKeyboardType:SOFT systemPaddingBottom:-1
05-16 16:14:31.751  7482  8237 I Delight5Decoder: Delight5DecoderWrapper.setKeyboardLayout():510 setKeyboardLayout()
05-16 16:14:31.754  7482  7482 I AndroidIME: KeyboardViewManager.saveKeyboardBottomGap():259 windowHeight: 2309 windowHeightInInches: 5.247727
05-16 16:14:31.754  7482  7482 I AndroidIME: keyboardHolderHeight: 701 navigationHeight: 0
05-16 16:14:31.754  7482  7482 I AndroidIME: getKeyboardBodyViewHolderPaddingBottom(): 0
05-16 16:14:31.754  7482  7482 I AndroidIME: keyboardBottomGap: 0 bodyViewHolderBottomPadding: 0
05-16 16:14:31.763  7482  8237 I Delight5Decoder: Delight5DecoderWrapper.setKeyboardLayout():510 setKeyboardLayout()
05-16 16:14:31.790  7482  7482 I KeyboardHeightUtil: KeyboardHeightUtil.calculateMaxKeyboardBodyHeight():45 leave 267 height for app when ime window height:2309, header height:121 and isFullscreenMode:false, so the max keyboard body height is:1921
05-16 16:14:32.299 11120 11305 D PowerCheckerService: foreground, uid = 10421, app = ginlemon.flowerfree
05-16 16:14:33.149  3719  3719 E AlphabeticalAppsList: Predicted app not found: ginlemon.flowerfree/ginlemon.flower.HomeScreen#0
05-16 16:14:33.152  3719  3719 E AlphabeticalAppsList: Predicted app not found: ginlemon.flowerfree/ginlemon.flower.HomeScreen#0"
FfXhapEc,Untitled,Qut10w,Lua,Thursday 16th of May 2024 02:07:07 PM CDT,"local modem = peripheral.find(""modem"")
local sleepTime = 0.5
modem.open(1)

local function handleCraftingCommand()
    while true do
        local event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
        if message and type(message) == ""table"" and message.item and message.quantity then
            local status = ""error""
            if turtle.craft(math.min(message.quantity, 64)) then
                print(""Craft "".. message.item .. "" succeeds!"")
                status = ""ok""
            else
                print(""Craft "".. message.item .. "" error!"")
            end

            local message = {status = status}
            modem.transmit(1, 1, message)
        end
    end
end

handleCraftingCommand()"
aAGw9RbB,Untitled,Saleng,JSON,Thursday 16th of May 2024 02:01:35 PM CDT,"# App Wiesplay w3u info Playidtv
# w3u :https://drzl.short.gy/ReZ46l
# m3u :https://drzl.short.gy/playidtvnew.m3u"
qbhrpyQD,Untitled,RasulovMuzaffar,Java,Thursday 16th of May 2024 01:57:03 PM CDT,"//Бу консюмерда буладиган код
@Component
@Slf4j
public class BrokerListener {
    private final JmsClientHandler jmsClientHandler;

    public BrokerListener(JmsClientHandler jmsClientHandler) {
        this.jmsClientHandler = jmsClientHandler;
    }

    @CustomRabbitListener(providerServiceName = ""service1"", consumerServiceName = ""service2"")
    @RabbitListener(queues = ""#{jmsClientHandler.fetchQueueNameByProducerAndConsumer('service1','service2')}"")
    public void receive(String message) {
        System.out.println(""1received message: "" + message);
    }
}


дальше коммон-либрарида
@Target({ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
@Component
public @interface CustomRabbitListener {

    //    @AliasFor(""value"")
    String serviceQueueName() default """";

    String providerServiceName() default """";

    String consumerServiceName() default """";
}


@Component
@Slf4j
public class CustomRabbitListenerProcessor implements BeanPostProcessor {

    private final AmqpAdmin amqpAdmin;
    private final JmsClientHandler jmsClientHandler;


    public CustomRabbitListenerProcessor(AmqpAdmin amqpAdmin,
                                         JmsClientHandler jmsClientHandler) {
        this.amqpAdmin = amqpAdmin;
        this.jmsClientHandler = jmsClientHandler;
    }

    @Override
    public Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException {
        Method[] methods = bean.getClass().getMethods();
        for (Method method : methods) {
            if (method.isAnnotationPresent(CustomRabbitListener.class)) {
                CustomRabbitListener annotation = method.getAnnotation(CustomRabbitListener.class);
                String serviceQueueName = annotation.serviceQueueName();
                String consumerServiceName = annotation.consumerServiceName();
                String providerServiceName = annotation.providerServiceName();
                createQueueAndBindingForService(consumerServiceName, providerServiceName);
            }
        }
        return bean;
    }


    private void createQueueAndBindingForService(String consumerServiceName, String providerServiceName) {
        Map<String, Map<String, String>> exchangeKeyQueueMap = jmsClientHandler.fetchExchangeKeysByQueueName(providerServiceName, consumerServiceName);

        exchangeKeyQueueMap.forEach((k, keyQueueMap) -> {
            keyQueueMap.forEach((rKey, queueName) -> {
                Queue queue = new Queue(queueName, true, false, false);
                queue.getArguments().put(""x-message-ttl"", 600000);
                amqpAdmin.declareQueue(queue);

                switch (jmsClientHandler.fetchTypeByExchange(k)) {
                    case ""direct"" -> amqpAdmin.declareBinding(BindingBuilder.bind(queue)
                            .to(new DirectExchange(k))
                            .with(rKey));
                    case ""topic"" -> amqpAdmin.declareBinding(BindingBuilder.bind(queue)
                            .to(new TopicExchange(k))
                            .with(rKey));
                }
            });

        });
    }

}"
BraEjFH9,Cracking edb-debugger,AntonioVillanueva,C++,Thursday 16th of May 2024 01:11:51 PM CDT,"//g++ -Wall -static-libstdc++ -std=c++11 -Wunused-but-set-variable `wx-config --cxxflags` -o crackme crackme.cpp `wx-config --libs`
//g++ -Wall -static-libstdc++ -std=c++11 -Wunused-but-set-variable `wx-config --cxxflags` -o crackme crackme.cpp `wx-config --static=yes --libs`
 
#include <wx/wx.h>

class PasswordDialog : public wxDialog {
public:
    PasswordDialog(const wxString& title) : wxDialog(NULL, wxID_ANY, title, wxDefaultPosition, wxSize(350, 150)), m_attemptsRemaining(5) {
        wxPanel *panel = new wxPanel(this, wxID_ANY);
        
        wxBoxSizer *vbox = new wxBoxSizer(wxVERTICAL);
        panel->SetSizer(vbox); // Aquí se establece el sizer en el panel
        
        wxStaticText *text = new wxStaticText(panel, wxID_ANY, ""Introduce el  password:"", wxDefaultPosition, wxDefaultSize, 0);
        vbox->Add(text, 0, wxALL, 5);
        
        m_passwordTextCtrl = new wxTextCtrl(panel, wxID_ANY, """", wxDefaultPosition, wxDefaultSize, wxTE_PASSWORD);
        vbox->Add(m_passwordTextCtrl, 0, wxALL | wxEXPAND, 5);
        
        wxButton *confirmButton = new wxButton(panel, wxID_OK, ""Confirma"", wxDefaultPosition, wxDefaultSize, 0);
        vbox->Add(confirmButton, 0, wxALIGN_CENTER | wxTOP | wxBOTTOM, 10);

        wxButton *cancelButton = new wxButton(panel, wxID_CANCEL, ""Cancelar"", wxDefaultPosition, wxDefaultSize, 0);
        vbox->Add(cancelButton, 0, wxALIGN_CENTER | wxTOP | wxBOTTOM, 10);
        
        // Manejar el evento de hacer clic en el botón de cancelar
        Bind(wxEVT_BUTTON, &PasswordDialog::OnCancel, this, wxID_CANCEL);
    }
    
    wxString GetPassword() const {
        return m_passwordTextCtrl->GetValue();
    }

    int GetAttemptsRemaining() const {
        return m_attemptsRemaining;
    }

    void DecrementAttempts() {
        m_attemptsRemaining--;
    }

private:
    wxTextCtrl *m_passwordTextCtrl;
    int m_attemptsRemaining;

    void OnCancel(wxCommandEvent& event) {
        EndModal(wxID_CANCEL);
    }
};

class MyApp : public wxApp {
public:
    virtual bool OnInit() {
        PasswordDialog dialog(""Crackme v3 por Antonio Villanueva"");
        wxString clave = ""4560407Tony"";
        while (true) {
            int result = dialog.ShowModal();
            if (result == wxID_OK) {
                wxString password = dialog.GetPassword();
                if (password == clave) {
                    wxMessageBox(""Felicidades has crackeado el password  "" + password, ""Info"", wxOK | wxICON_INFORMATION);
                    break;
                } else {
                    dialog.DecrementAttempts();
                    int attemptsRemaining = dialog.GetAttemptsRemaining();
                    if (attemptsRemaining > 0) {
                        wxMessageBox(""El password "" + password + "" no es correcto. Te quedan "" + wxString::Format(""%d"", attemptsRemaining) + "" posibilidades"", ""Info"", wxOK | wxICON_INFORMATION);
                    } else {
                        wxMessageBox(""Te has quedado sin intentos. El programa se cerrará."", ""Info"", wxOK | wxICON_INFORMATION);
                        break;
                    }
                }
            } else if (result == wxID_CANCEL) {
                // Si se hace clic en Cancelar o se cierra la ventana, salir del bucle
                break;
            }
        }
        // Salir del programa después de cerrar la ventana de diálogo
        return false;
    }
};

wxIMPLEMENT_APP(MyApp);


"
RrG0X5qq,Untitled,Hero_Cheats,PHP,Thursday 16th of May 2024 01:00:14 PM CDT,MODIxHATAOxDESHxBACHaO
8VsaM7nP,ДЗ ReadInt,TeT91,C#,Thursday 16th of May 2024 12:41:22 PM CDT,"using System;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine(TryToConvert());
            Console.ReadKey();
        }

        private static int TryToConvert()
        {
            bool isConverted = false;
            int number = 0;

            while (isConverted == false)
            {
                Console.WriteLine(""Введите число"");
                string uerInput = Console.ReadLine();
                if (int.TryParse(uerInput, out number))
                {
                    isConverted = true;
                }
                else
                {
                    Console.WriteLine(""Не удалось конвертировать, попробуйте еще раз."");
                }
            }

            return number;
        }
    }
}"
0NYMsFJD,CC MyFTBHastebinDownloader,ecco7777,Lua,Thursday 16th of May 2024 12:10:24 PM CDT,"-- Define the function to download from Hastebin
local function downloadFromHastebin(pasteCode)
    -- Define the Hastebin server address
    local hastebinServer = ""https://paste.myftb.de/raw/""
    local url = hastebinServer .. pasteCode

    -- Fetch the data from the Hastebin server
    local response = http.get(url)

    -- Check if the request was successful
    if response then
        local content = response.readAll()
        response.close()

        -- Write the content to a file named with the paste code
        local file = fs.open(pasteCode, ""w"")
        file.write(content)
        file.close()

        print(""Downloaded and saved as "" .. pasteCode)
    else
        print(""Failed to download from Hastebin. Check the paste code and try again."")
    end
end

-- Get the paste code from the command line arguments
local args = {...}
if #args < 1 then
    print(""Usage: pasteDownload <pasteCode>"")
    return
end

local pasteCode = args[1]
downloadFromHastebin(pasteCode)"
7PdQqTec,Win11「バックアップの開始」削除,kamome-sg,Batch,Thursday 16th of May 2024 12:09:55 PM CDT,"@echo off
reg delete HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\StorageProvider\OneDrive /v StorageProviderKnownFolderSyncInfoSourceFactory /f"
1JwVQqzk,dsfgdsrg,gadungw71,PHP,Thursday 16th of May 2024 12:01:37 PM CDT,"•	https://github.com/lat-7-movp-viet-sdfs
•	https://github.com/as-alamualaikaeeg2024
•	https://github.com/cap-cino-KR2024
•	https://topmate.io/lat_mat_7_mot_ieu_uoc10/985794
•	https://topmate.io/mupie_hardcore/985808
•	https://topmate.io/theroundup4hdsubkr/985899
•	https://www.kooapp.com/koo/guest_3NFOM8/7a33d712-0877-4d12-9821-0150b6a7cb9e
•	https://open.firstory.me/user/clw9h9zod1xe601uq162cchvs
•	https://wandering.flarum.cloud/d/62912-afeasfesfseg
•	https://hiuderyy.hashnode.dev/dsfertbdrnyry
•	https://www.bankier.pl/forum/temat_afdsevet,66362101.html
•	https://medium.com/@rarawwwuu29/mengaharusbegini-a879d7934aa8
•	https://www.onfeetnation.com/profiles/blogs/dsfvertbt
•	https://hackmd.io/@rerewilli6/SkCAOh7QR
•	https://demo.hedgedoc.org/s/MQYLlwsBp
•	https://rentry.co/6ztg7g5g
•	https://paste.ee/p/YmrGm
•	https://yamcode.com/dsfgsegseg
•	https://lifeisfeudal.com/Discussions/question/t%E1%BA%A3i-xu%E1%BB%91ng-mi%E1%BB%85n-phi-tr%E1%BB%B1c-tuy%E1%BA%BFn-phim-l%E1%BA%ADt-m%E1%BA%B7t-7-m%E1%BB%99t-%C4%91i%E1%BB%81u-%C6%B0%E1%BB%9Bc
•	https://start.me/w/nOlnra
•	https://plaza.rakuten.co.jp/aryasantosso/diary/202405170000/
•	https://telegra.ph/DSFSD-05-16
•	https://muckrack.com/agarat-trreyta/bio
•	https://profile.hatena.ne.jp/dfgdfrgr/
•	https://www.bitsdujour.com/profiles/OMuSVO
•	http://aldenfamilydentistry.com/UserProfile/tabid/57/userId/759676/Default.aspx
•	https://www.fitlynk.com/1715878812F160319
"
5TBa2fHN,Pastebin.ai - #1 Pastebin alternative,xxsa,PHP,Thursday 16th of May 2024 11:59:50 AM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
......................
.............................
"
6tqh21cE,Untitled,b_gandurov,C#,Thursday 16th of May 2024 11:47:06 AM CDT,"using System.Collections;
using System.Globalization;
using static Program.Program;


namespace Program
{
    class Program
    {
        static void Main(string[] args)
        {
            NumberCollection numbers = new NumberCollection();

            foreach (var number in numbers.Numbers)
            {
                Console.WriteLine(number);
            }

            foreach (var number in numbers.Numbers2)
            {
                Console.WriteLine(number);
            }


            NumberCollection2 numbers2 = new NumberCollection2();

            foreach (var number in numbers2)
            {
                Console.WriteLine(number);
            }
        }

        public class NumberCollection
        {
            private int[] numbers;

            public NumberCollection(int n = 1000)
            {
                numbers = new int[n];
                for (int i = 0; i < numbers.Length; i++)
                {
                    numbers[i] = i + 1;
                }
            }

            public int[] Numbers => numbers;

            public IEnumerable<int> Numbers2 {
                get
                {
                    yield return 1;
                    yield return 2;
                    yield return 3;
                    yield return 4;
                    yield return 5;
                } }
        }

        public class NumberCollection2 : IEnumerable
        {
            private int[] numbers;

            public NumberCollection2(int n = 1000)
            {
                numbers = new int[n];
                for (int i = 0; i < numbers.Length; i++)
                {
                    numbers[i] = i + 1;
                }
            }

            public IEnumerator GetEnumerator()
            {
                for (int i = 0;i < numbers.Length; i++)
                {
                    yield return numbers[i];
                }
            }
        }

    }
}"
PAVcmPYN,Pastebin.ai - #1 Free Pastebin alternative,xxsa,PHP,Thursday 16th of May 2024 11:46:18 AM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.x
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
..................
...............................
"
H7w7u7e6,Untitled,vatman,Python,Thursday 16th of May 2024 11:29:49 AM CDT,"import numpy as np
import itertools
import random
import matplotlib.pyplot as plt
import networkx as nx
from networkx.drawing.layout import fruchterman_reingold_layout

np.random.seed(4)

VERTEX = 10.0
EGDE = 0.0
WEGDE = 0.0
POPUL_LENGTH = 50
GRAPH_LENGTH = 4


def data(n):

    prufer_sequence = np.random.randint(0, n, n - 2)

    G1 = nx.from_prufer_sequence(prufer_sequence)

    pos = fruchterman_reingold_layout(G1, dim=2)

    edge_points = [pos[node] for node in G1.nodes]

    vectors = []
    for point in edge_points:
        for _ in range(10):
            vectors.append(point + np.random.normal(size=2) * 0.05)
    return vectors


def visualize_graph(vectors, selected_vectors, G):
    for point in vectors:
        plt.scatter(point[0], point[1], color=""b"")
    for node in selected_vectors:
        plt.scatter(node[0], node[1], color=""r"")
    pos = {
        node: (selected_vectors[node][0], selected_vectors[node][1])
        for node in G.nodes()
    }
    nx.draw(G, pos, with_labels=False, node_size=0, edge_color=""k"")
    plt.show()


def get_zero_population_graph(data, length_population=50, graph_length=3):
    zero_population_graph = []
    for i in range(length_population):
        selected_elements = np.array(random.sample(data, graph_length))
        prufer_sequence = np.random.randint(0, graph_length, graph_length - 2)
        G1 = nx.from_prufer_sequence(prufer_sequence)
        if i == 0:
            zero_population = np.copy(selected_elements)
        else:
            zero_population = np.concatenate(
                [zero_population, selected_elements], axis=0
            )
        zero_population_graph.append(G1)

    zero_population = np.vsplit(zero_population, length_population)
    return zero_population, zero_population_graph


def calculate_vertex_energy(vertex, vectors, k):
    distances = [np.linalg.norm(vertex - vector) for vector in vectors]

    if 0.0 in distances:
        distances[distances.index(0.0)] = np.inf

    sorted_indices = np.argsort(distances)

    nearest_vector = sorted_indices[0]

    energy = 0
    energy += k * np.linalg.norm(vertex - vectors[nearest_vector]) ** 2
    return energy


def calculate_edge_energy(edge, vectors, k):
    v1, v2 = vectors[edge[0] - 1], vectors[edge[1] - 1]
    return k * np.linalg.norm(v1 - v2) ** 2


def calculate_wedge_energy(wedge, vectors, k):
    v1, v2, v3 = vectors[wedge[0] - 1], vectors[wedge[1] - 1], vectors[wedge[2] - 1]
    return k * np.linalg.norm(v1 + v3 - 2 * v2) ** 2


def fitness_function(data, points, graph):
    fitness = 0
    for node in graph.nodes:
        vertex_energy = calculate_vertex_energy(points[int(node) - 1], data, VERTEX)
        fitness += vertex_energy
    for edge in graph.edges:
        edge_energy = calculate_edge_energy(edge, points, EGDE)
        fitness += edge_energy
    sum_wedge_energy = 0.0
    for nodes in itertools.combinations(graph.nodes, 3):
        if graph.has_edge(nodes[0], nodes[1]) and graph.has_edge(nodes[0], nodes[2]):
            wedge_energy = calculate_wedge_energy(
                [nodes[1], nodes[0], nodes[2]], points, WEGDE
            )
            sum_wedge_energy += wedge_energy
        elif graph.has_edge(nodes[0], nodes[1]) and graph.has_edge(nodes[1], nodes[2]):
            wedge_energy = calculate_wedge_energy(nodes, points, WEGDE)
            sum_wedge_energy += wedge_energy
        elif graph.has_edge(nodes[0], nodes[2]) and graph.has_edge(nodes[1], nodes[2]):
            wedge_energy = calculate_wedge_energy(
                [nodes[1], nodes[2], nodes[0]], points, WEGDE
            )
            sum_wedge_energy += wedge_energy
    fitness += sum_wedge_energy
    # print(1000 - fitness)
    return 1000 - fitness


def get_zero_population(seed, count_population, demention_population):
    zero_population = np.random.uniform(
        -2.0, 2.0, (count_population, demention_population)
    )
    return zero_population


def get_psi(g, NP, Lambda):
    psi = ((g) * NP + 1) ** (1 / Lambda)
    return psi


def select_reference_vertor(data, clear_generation, graph, NP, g):
    reference_vector = None
    array_fitness_value = 0.0
    sum_arr = 0.0
    arr_ver = 0.0
    psi = get_psi(g, NP, POPUL_LENGTH)
    for item in range(len(clear_generation)):
        num = fitness_function(data, clear_generation[item], graph[item])

        array_fitness_value = np.append(array_fitness_value, num**psi)
        sum_arr += num**psi
    for i in array_fitness_value:
        arr_ver = np.append(arr_ver, i / sum_arr)

    id = np.random.choice(len(arr_ver), p=arr_ver)
    reference_vector = clear_generation[id - 2]

    return reference_vector


def calculate_A(x_min, x_max, x_r, e):
    return np.arctan((x_max - x_r) / e) - np.arctan((x_min - x_r) / e)


def calculate_e(g, NP, D):
    return 1 / ((g) * (NP) + 1) ** (1 / (2 * D))


def generate_potential_offspring(x_r, e, A):
    return x_r + e * np.tan((np.random.rand() - 0.5) * A)


def sofa(zero_population, graph, data_cloud, fitness, mod, steps_number, epsilon):
    # TODO add data_cloud,fitness,mod,epsilon,true_answer
    start_population = np.copy(zero_population)
    mutant_populaion = np.copy(zero_population)
    arr_value_best_item = np.array(
        [fitness_function(data_cloud, zero_population[0], graph[0])]
    )
    value_best_item = np.copy(arr_value_best_item[0])
    print(f""first_value_best: {value_best_item}"")

    best_item = np.copy(mutant_populaion[0])
    print(f""best_vector1: {best_item}"")
    for item in range(steps_number):
        reference_vector = select_reference_vertor(
            data_cloud, start_population, graph, len(start_population), item
        )
        e = calculate_e(item, len(start_population), len(start_population[0]))
        for i in range(len(start_population)):
            for j in range(len(start_population[0])):
                const_a = calculate_A(-1.0, 1.0, reference_vector[j], e)
                mutant_populaion[i][j] = reference_vector[j] + np.tan(
                    (np.random.random(2) - 0.5) * const_a
                )

        for i in range(len(start_population)):
            fit_mutant_popul = fitness_function(data, mutant_populaion[i], graph[i])
            fit_start_popul = fitness_function(data, start_population[i], graph[i])
            if fit_mutant_popul > fit_start_popul:
                start_population[i] = np.copy(mutant_populaion[i])
                if fit_mutant_popul > value_best_item:
                    value_best_item = fit_mutant_popul
                    print(f""value_best_item {value_best_item}"")
                    best_item = np.copy(mutant_populaion[i])

        arr_value_best_item = np.append(arr_value_best_item, value_best_item)

    print(f""best vector2: {best_item}"")
    print(f""global maximum: {value_best_item}"")
    index = list(np.arange(1.0, len(arr_value_best_item) + 1, 1))
    return start_population, best_item, value_best_item


if __name__ == ""__main__"":
    data = data(GRAPH_LENGTH)
    steps = int(input(""steps = ""))
    a, graph = get_zero_population_graph(data, GRAPH_LENGTH)

    a, item, b = sofa(a, graph, data, None, None, steps, 0.0001)
    visualize_graph(data, item, graph[0])
"
