id,title,username,language,date,content
VSTEBN1c,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,tajdiqul,JavaScript,Tuesday 18th of June 2024 07:05:33 AM CDT,"G2A.com free voucher & gaming guide.
Any gift card for free on G2A.com including Amazon gift cards & anything else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17 2024

"
dfDps2ka,üéÅ G2A.COM FREE GIFT CARD GUIDE JUN 2024 V2 üéÅ,jusst2k4,GetText,Tuesday 18th of June 2024 07:03:41 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_505901.pdf
 
Working as of:
18 June 2024"
ApJpTr1Q,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,notgoodatscripting,JavaScript,Tuesday 18th of June 2024 06:59:34 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any item for free on G2A.com including Steam gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
17th of June 2024

"
y5Zx9wBT,Untitled,Derga,C++,Tuesday 18th of June 2024 06:54:37 AM CDT,"#include <iostream>
#include <map>
#include <string>
#include <queue>
#include <vector>

using namespace std;

/*
—Ç–æ—á–∫–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∞ —á–∞—Å—Ç—å –∫—É–±–∏–∫–∞, –∫–æ—Ç–æ—Ä—É—é –Ω–µ –≤–∏–¥–Ω–æ

   ________
  /‚†°      /\
 /  ‚†° U B/  \
/____‚†°__/....\
\  L ‚†å D\ R  /
 \  ‚†å F  \  /
  \‚†å______\/

*/


//6 –≥—Ä–∞–Ω–µ–π 
//–ø–µ—Ä–µ–¥–Ω—è—è (F), –ª–µ–≤–∞—è (L), –∑–∞–¥–Ω—è—è (B), –ø—Ä–∞–≤–∞—è (R), –≤–µ—Ä—Ö–Ω—è—è (U) –∏ –Ω–∏–∂–Ω—è—è (D)
const vector<char> FACES = { 'F', 'L','B','R','U','D' };
const int BACK = -1;
const int FORWARD = 1;

struct RubiksCube {
    RubiksCube() : faces_dates(26, vector<vector<char>>(2, vector<char>(2))) {}

    bool IsSolved() const {
        for (const auto& face_date : faces_dates) {
            char value = face_date.front().front();
            for (const auto& row : face_date) {
                for (char c : row) {
                    if (c != value) return false;
                }
            }
        }
        return true;
    }

    void RotateFaceForward(char face) {
        char save_front_front = faces_dates[face - 'A'].front().front();
        faces_dates[face - 'A'].front().front() = faces_dates[face - 'A'].back().front();
        faces_dates[face - 'A'].back().front()  = faces_dates[face - 'A'].back().back();
        faces_dates[face - 'A'].back().back()   = faces_dates[face - 'A'].front().back();
        faces_dates[face - 'A'].front().back()  = save_front_front;
    }

    void RotateFaceBack(char face) {
        char save_front_front = faces_dates[face - 'A'].front().front();
        faces_dates[face - 'A'].front().front() = faces_dates[face - 'A'].front().back();
        faces_dates[face - 'A'].front().back() = faces_dates[face - 'A'].back().back();
        faces_dates[face - 'A'].back().back() = faces_dates[face - 'A'].back().front();
        faces_dates[face - 'A'].back().front() = save_front_front;
    }

    void DoRotate(char face, int direction) {
        if (direction == FORWARD) {
            //–ø–µ—Ä–µ–¥–Ω—è—è (F), –ª–µ–≤–∞—è (L), –∑–∞–¥–Ω—è—è (B), –ø—Ä–∞–≤–∞—è (R), –≤–µ—Ä—Ö–Ω—è—è (U) –∏ –Ω–∏–∂–Ω—è—è (D)
            if (face == 'R' || face == 'L') {
                char save_upper_right_F = faces_dates['F' - 'A'].front().back();
                char save_lower_right_F = faces_dates['F' - 'A'].back().back();

                faces_dates['F' - 'A'].front().back() = faces_dates['D' - 'A'].front().back();
                faces_dates['F' - 'A'].back().back()  = faces_dates['D' - 'A'].back().back();

                faces_dates['D' - 'A'].front().back() = faces_dates['B' - 'A'].front().back();
                faces_dates['D' - 'A'].back().back()  = faces_dates['B' - 'A'].back().back();

                faces_dates['B' - 'A'].front().back() = faces_dates['U' - 'A'].front().back();
                faces_dates['B' - 'A'].back().back()  = faces_dates['U' - 'A'].back().back();

                faces_dates['U' - 'A'].front().back() = save_upper_right_F;
                faces_dates['U' - 'A'].back().back()  = save_lower_right_F;

                RotateFaceForward('R');
                return;
            }

            if (face == 'B' || face == 'F') {
                char save_upper_right_R = faces_dates['R' - 'A'].front().back();
                char save_lower_right_R = faces_dates['R' - 'A'].back().back();

                faces_dates['F' - 'A'].front().back() = faces_dates['D' - 'A'].front().back();
                faces_dates['F' - 'A'].back().back() = faces_dates['D' - 'A'].back().back();

                faces_dates['R' - 'A'].front().back() = faces_dates['B' - 'A'].front().back();
                faces_dates['R' - 'A'].back().back() = faces_dates['B' - 'A'].back().back();

                faces_dates['B' - 'A'].front().back() = faces_dates['U' - 'A'].front().back();
                faces_dates['B' - 'A'].back().back() = faces_dates['U' - 'A'].back().back();

                faces_dates['U' - 'A'].front().back() = save_upper_right_F;
                faces_dates['U' - 'A'].back().back() = save_lower_right_F;



                RotateFaceForward('B');
                return;
            }

            if (face == 'U' || face == 'D') {

                RotateFaceForward('U');
                return;
            }
        }
        
        if (direction == BACK) {
            //–ø–µ—Ä–µ–¥–Ω—è—è (F), –ª–µ–≤–∞—è (L), –∑–∞–¥–Ω—è—è (B), –ø—Ä–∞–≤–∞—è (R), –≤–µ—Ä—Ö–Ω—è—è (U) –∏ –Ω–∏–∂–Ω—è—è (D)
            if (face == 'R' || face == 'L') {

                RotateFaceBack('R');
                return;
            }

            if (face == 'B' || face == 'F') {

                RotateFaceBack('B');
                return;
            }

            if (face == 'U' || face == 'D') {

                RotateFaceBack('U');
                return;
            }
        }
    }

    string GetValues() const {
        string values;
        for (const auto& face_date : faces_dates) {
            for (const auto& row : face_date) {
                for (char c : row) {
                    values += c;
                }
            }
        }
        return values;
    }

    vector<vector<vector<char>>> faces_dates;
};

bool operator<(const RubiksCube& lhs, const RubiksCube& rhs) {
    return lhs.GetValues() < rhs.GetValues();
}

bool operator==(const RubiksCube& lhs, const RubiksCube& rhs) {
    return lhs.GetValues() == rhs.GetValues();
}

int main() {
    RubiksCube rubiks_cube;
    if (rubiks_cube.IsSolved()) {
        cout << ""Solved"";
        return 0;
    }

    map<RubiksCube, string> rubiks_cube_states_to_rotations;
    rubiks_cube_states_to_rotations[rubiks_cube];
    queue<RubiksCube> q;
    q.push(rubiks_cube);
    while (!q.empty()) {
        auto cur_cube = q.front();
        q.pop();

        if (cur_cube.IsSolved()) {
            cout << ""Solved"";
            return 0;
        }

        const vector<int> directions = { BACK, FORWARD };
        for (auto cube_face : FACES) {
            for (auto direction : directions) {
                auto cube = cur_cube;
                cube.DoRotate(cube_face, direction);
                if (rubiks_cube_states_to_rotations.count(cube) != 0) continue;

                string rotation = string{ cube_face };
                if (direction == BACK) rotation = ""'"" + rotation;

                rubiks_cube_states_to_rotations[cube] = rubiks_cube_states_to_rotations[cur_cube] + rotation;
                q.push(cube);
            }
        }
    }

    return 0;
}"
Jbc19p2K,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,bgill55,JavaScript,Tuesday 18th of June 2024 06:53:19 AM CDT,"G2A.com complimentary voucher & games guide.
Any voucher for free on G2A.com including Xbox gift cards & all else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17th 2024

"
BnFwdzEc,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,FreeRobux12345,JavaScript,Tuesday 18th of June 2024 06:47:22 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any gift card for free on G2A.com including Xbox gift cards & everything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17 2024

"
ZeMLTaXt,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,coderpradip,JavaScript,Tuesday 18th of June 2024 06:41:23 AM CDT,"G2A.com complimentary voucher & games guide.
Any gift card for free on G2A.com including Xbox gift cards & everything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
17th of June 2024

"
HCyGGkJJ,Color Block Script,koreanhackerman,Lua,Tuesday 18th of June 2024 06:39:57 AM CDT,"print('Injected successfully!')

local player = game.Players.LocalPlayer
local character = player.Character

local player_gui = player.PlayerGui
local color_gui = player_gui.inGameGui
local color_obj = color_gui.Frame.Color

local blocks = game.Workspace.Blocks

color_obj:GetPropertyChangedSignal('BackgroundColor'):Connect(function()
    local current_color = color_obj.BackgroundColor

    for _, object in ipairs(blocks:GetDescendants()) do
        if object:IsA('Model') or object:IsA('TouchInterest') then
            if object.BrickColor == current_color then
                character:MoveTo(object.Position)
            end
        end
    end
end)
"
f7Q4BTNs,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,mikyser,JavaScript,Tuesday 18th of June 2024 06:35:25 AM CDT,"G2A.com complimentary voucher & games guide.
Any voucher for free on G2A.com including Amazon gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
17th of June 2024

"
Ku7MZJUg,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,Ohtaku,JavaScript,Tuesday 18th of June 2024 06:29:28 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any voucher for free on G2A.com including Xbox gift cards & anything else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17th 2024

"
GkPrgWUU,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,Elii,JavaScript,Tuesday 18th of June 2024 06:23:30 AM CDT,"G2A.com free voucher & games guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
17th of June 2024

"
eTRxWv0m,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,guywithabigheart,JavaScript,Tuesday 18th of June 2024 06:17:33 AM CDT,"G2A.com free gift card & games guide.
Any voucher for free on G2A.com including Xbox gift cards & everything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17th 2024

"
D4GQAG3V,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,PetrikDev,JavaScript,Tuesday 18th of June 2024 06:11:35 AM CDT,"G2A.com free gift card & gaming guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17th 2024

"
V8yFNvDz,Untitled,LeonLostControl,Diff,Tuesday 18th of June 2024 06:04:15 AM CDT,"diff --git a/modules/gui/qt/medialibrary/qml/VideoListDisplay.qml b/modules/gui/qt/medialibrary/qml/VideoListDisplay.qml
index b514ffc713..4e1b59a062 100644
--- a/modules/gui/qt/medialibrary/qml/VideoListDisplay.qml
+++ b/modules/gui/qt/medialibrary/qml/VideoListDisplay.qml
@@ -64,7 +64,7 @@ MainInterface.MainTableView {
     }]
 
     property var _modelMedium: [{
-        size: Math.max(1, _nbCols - 0.5),
+        size: Math.max(1, 4*_nbCols/5),
 
         model: ({
             criteria: mainCriteria,
@@ -79,7 +79,7 @@ MainInterface.MainTableView {
             placeHolder: VLCStyle.noArtVideoCover,
         })
     }, {
-        size: 0.5,
+        size: _nbCols/5,
 
         model: ({
             criteria: ""duration"",
diff --git a/modules/gui/qt/widgets/qml/TableColumns.qml b/modules/gui/qt/widgets/qml/TableColumns.qml
index 2011ac6102..dd5e88f5af 100644
--- a/modules/gui/qt/widgets/qml/TableColumns.qml
+++ b/modules/gui/qt/widgets/qml/TableColumns.qml
@@ -230,7 +230,9 @@ Item {
             width: timeTextMetric.width
             height: parent.height
 
-            anchors.centerIn: parent
+            //anchors.centerIn: parent
+            anchors.right: parent.right
+            anchors.rightMargin: -VLCStyle.margin_xxxsmall
 
             horizontalAlignment: Text.AlignHCenter
             verticalAlignment: Text.AlignVCenter
@@ -248,7 +250,8 @@ Item {
             width: timeTextMetric.width
             height: parent.height
 
-            anchors.centerIn: parent
+            //anchors.centerIn: parent
+            anchors.right: parent.right
 
             horizontalAlignment: Text.AlignHCenter
             text: timeDel.rowModel?.[timeDel.colModel.criteria]?.formatShort() ?? """""
9ZV8VL25,data961,TestGuy1,JSON,Tuesday 18th of June 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'b447306eae9157bf9b636b7ddd0dee11211a3da69f5ed77a62beb193eaafff8f4715fbdc2f97978a55445bba1b4ecd14855e91d6767ed6c6415c0b2f5a4263c0752dbe722133e413898d83cea5370524d26e941f39f7c60dcd3451f31ad1b466e07e2ffd8753fbb967d87655323c6b763d9726960b949f04fb0922855f11542f',
  otherdata: [
    'd6215084369690996d6743d8f8cf9682',
    '6f2c24204a7e73b0448562e01459bdd3',
    'e2e9c018711ca7d110f6ce7fbb6e7700',
    '119cd6b92c54d2f4a3c9cf6cf81d9fbd',
    'e1bc5f83f3547719649dd9d41261d6f0',
    '63442acb1b834001b5d13529eff39690',
    'a6bc50c404aa9818f3d1c01966f6cd5c',
    '1efeecd37ead8201199181c439747d3b'
  ]
}"
rtcpCEN8,2,Nenogzar,Python,Tuesday 18th of June 2024 05:42:35 AM CDT,"def directions(position, direction, rows, matrix):
    row, col = position
    matrix[row][col] = ""-""

    if direction == ""up"":
        row = (row - 1) % rows
    elif direction == ""down"":
        row = (row + 1) % rows
    elif direction == ""left"":
        col = (col - 1) % rows
    elif direction == ""right"":
        col = (col + 1) % rows

    return row, col


def print_matrix(matrix):
    for row in matrix:
        print("""".join(row))


rows = int(input())
fishing_area = []
captain, whirlpool, empty, passage, quota = ""S"", ""W"", ""-"", 0, 20
position = None

for row_ in range(rows):
    line = list(input())
    if captain in line:
        position = (row_, line.index(captain))
    fishing_area.append(line)

direction = input()

while direction != ""collect the nets"":
    new_position = directions(position, direction, rows,fishing_area)
    n_row, n_col = new_position

    step = fishing_area[n_row][n_col]

    if step.isdigit():
        passage += int(step)

    if step == whirlpool:
        passage = 0
        print(f""You fell into a whirlpool! The ship sank and you lost the fish you caught. ""
              f""Last coordinates of the ship: [{n_row},{n_col}]"")
        exit()

    fishing_area[n_row][n_col] = captain
    position = new_position
    direction = input()

if passage >= quota:
    print(f""Success! You managed to reach the quota!"")
else:
    print(f""You didn't catch enough fish and didn't reach the quota! You need {quota - passage} tons of fish more."")
if passage > 0:
    print(f""Amount of fish caught: {passage} tons."")

print_matrix(fishing_area)"
j2qvPPU0,Untitled,reaperox,YAML,Tuesday 18th of June 2024 05:40:19 AM CDT,"network:
  ethernets:
    enp3s0:
      addresses: [192.168.1.3/24]
      gateway4: 192.168.1.1
      nameservers:
        addresses: [1.1.1.1]
  version: 2"
DMvmxCMw,ÊâæËâ≤Â∑Æ‰ΩúÂºä,stevenos,JavaScript,Tuesday 18th of June 2024 05:12:01 AM CDT,"// ==UserScript==
// @name         ÊâæËâ≤Â∑Æ‰ΩúÂºä
// @namespace    http://tampermonkey.net/
// @version      2024-06-18
// @description  try to take over the world!
// @author       You
// @match        https://www.shj.work/tools/secha/
// @icon         https://www.google.com/s2/favicons?sz=64&domain=shj.work
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    const blocks = '#box > span';

    function findUnique(arr) {
        const countMap = {};

        // ÁªüËÆ°ÊØè‰∏™ÂÖÉÁ¥†ÁöÑÂá∫Áé∞Ê¨°Êï∞
        for (let i = 0; i < arr.length; i++) {
            const num = arr[i];
            countMap[num] = countMap[num] ? countMap[num] + 1 : 1;
        }

        // ÊâæÂá∫Âè™Âá∫Áé∞‰∏ÄÊ¨°ÁöÑÂÖÉÁ¥†
        for (const num in countMap) {
            if (countMap[num] === 1) {
                return arr.indexOf(num);
            }
        }

        return ''; // Â¶ÇÊûúÊ≤°ÊúâÊâæÂà∞‰∏çÂêåÁöÑ‰∏ÄÈ°πÔºåËøîÂõûnull
    }
    let doms = [];
    const intr = setInterval(() => {
        doms = document.querySelectorAll(blocks);
        if (doms.length) {
            clearTimeout(intr);
            start();
        }
    }, 500);

    function start() {
        doms = document.querySelectorAll(blocks);
        const colors = [];
        doms.forEach(b => {
            colors.push(b.style.backgroundColor);
        });

        const diff = findUnique(colors);
        const dom = doms[diff];
        dom && dom.click();
        setTimeout(() => {
            start();
        }, 300);
    }
})();"
YLYUs7BL,—Å–∞–π—Ç–∏–∫,Maestro1,JavaScript,Tuesday 18th of June 2024 05:08:06 AM CDT,"const legkieVoprosy = [
    { vopros: '–°—Ç–æ–ª–∏—Ü–∞ –§—Ä–∞–Ω—Ü–∏–∏', otvet: '–ü–ê–†–ò–ñ' },
    { vopros: '–°–∞–º–∞—è –¥–ª–∏–Ω–Ω–∞—è —Ä–µ–∫–∞ –≤ –º–∏—Ä–µ', otvet: '–ù–ò–õ' },
    { vopros: '–¢—Ä–µ—Ç—å—è –ø–ª–∞–Ω–µ—Ç–∞ –æ—Ç –°–æ–ª–Ω—Ü–∞', otvet: '–ó–ï–ú–õ–Ø' },
    { vopros: '–°–∞–º–∞—è –±–æ–ª—å—à–∞—è –ø—É—Å—Ç—ã–Ω—è –≤ –º–∏—Ä–µ', otvet: '–°–ê–•–ê–†–ê' },
    { vopros: '–°–∞–º–∞—è –≤—ã—Å–æ–∫–∞—è –≥–æ—Ä–∞ –≤ –º–∏—Ä–µ', otvet: '–≠–í–ï–†–ï–°–¢' },
    { vopros: '–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ü–≤–µ—Ç–æ–∫ –Ø–ø–æ–Ω–∏–∏', otvet: '–°–ê–ö–£–†–ê' },
    { vopros: '–ü–µ—Ä–≤—ã–π —á–µ–ª–æ–≤–µ–∫ –≤ –∫–æ—Å–º–æ—Å–µ', otvet: '–ì–ê–ì–ê–†–ò–ù' },
    { vopros: '–°—Ç–æ–ª–∏—Ü–∞ –ê–≤—Å—Ç—Ä–∞–ª–∏–∏', otvet: '–ö–ê–ù–ë–ï–†–†–ê' },
    { vopros: '–ê–≤—Ç–æ—Ä —Ä–æ–º–∞–Ω–∞ ""–í–æ–π–Ω–∞ –∏ –º–∏—Ä""', otvet: '–¢–û–õ–°–¢–û–ô' },
    { vopros: '–°–∞–º–æ–µ –≥–ª—É–±–æ–∫–æ–µ –æ–∑–µ—Ä–æ –≤ –º–∏—Ä–µ', otvet: '–ë–ê–ô–ö–ê–õ' }
];

const srednieVoprosy = [
    { vopros: '–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –≤–∞–ª—é—Ç–∞ –Ø–ø–æ–Ω–∏–∏', otvet: '–ô–ï–ù–ê' },
    { vopros: '–°—Ç–æ–ª–∏—Ü–∞ –†–æ—Å—Å–∏–∏', otvet: '–ú–û–°–ö–í–ê' },
    { vopros: '–°–∞–º–∞—è –±–æ–ª—å—à–∞—è —Å—Ç—Ä–∞–Ω–∞ –≤ –º–∏—Ä–µ', otvet: '–†–û–°–°–ò–Ø' },
    { vopros: '–í—Ç–æ—Ä–∞—è –ø–ª–∞–Ω–µ—Ç–∞ –æ—Ç –°–æ–ª–Ω—Ü–∞', otvet: '–í–ï–ù–ï–†–ê' },
    { vopros: '–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ü–≤–µ—Ç–æ–∫ –ù–∏–¥–µ—Ä–ª–∞–Ω–¥–æ–≤', otvet: '–¢–Æ–õ–¨–ü–ê–ù' },
    { vopros: '–ü–µ—Ä–≤—ã–π –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç –°–®–ê', otvet: '–í–ê–®–ò–ù–ì–¢–û–ù' },
    { vopros: '–ò–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å –ª–∞–º–ø—ã –Ω–∞–∫–∞–ª–∏–≤–∞–Ω–∏—è', otvet: '–≠–î–ò–°–û–ù' },
    { vopros: '–°–∞–º–∞—è –º–∞–ª–µ–Ω—å–∫–∞—è —Å—Ç—Ä–∞–Ω–∞ –≤ –º–∏—Ä–µ', otvet: '–í–ê–¢–ò–ö–ê–ù' },
    { vopros: '–°—Ç–æ–ª–∏—Ü–∞ –ò—Ç–∞–ª–∏–∏', otvet: '–†–ò–ú' },
    { vopros: '–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å–ø–æ—Ä—Ç –ö–∞–Ω–∞–¥—ã', otvet: '–•–û–ö–ö–ï–ô' }
];

const slozhnyeVoprosy = [
    { vopros: '–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫ –ë—Ä–∞–∑–∏–ª–∏–∏', otvet: '–ö–ê–§–ï' },
    { vopros: '–°–∞–º—ã–π –±–æ–ª—å—à–æ–π –æ—Å—Ç—Ä–æ–≤ –≤ –º–∏—Ä–µ', otvet: '–ì–†–ï–ù–õ–ê–ù–î–ò–Ø' },
    { vopros: '–°–∞–º–∞—è –≥–ª—É–±–æ–∫–∞—è —Ç–æ—á–∫–∞ –æ–∫–µ–∞–Ω–∞', otvet: '–ú–ê–†–ò–ê–ù–°–ö–ê–Ø –í–ü–ê–î–ò–ù–ê' },
    { vopros: '–û—Å–Ω–æ–≤–∞—Ç–µ–ª—å –∫–æ–º–ø–∞–Ω–∏–∏ Microsoft', otvet: '–ì–ï–ô–¢–°' },
    { vopros: '–°–∞–º—ã–π –±–æ–ª—å—à–æ–π –æ–∫–µ–∞–Ω –≤ –º–∏—Ä–µ', otvet: '–¢–ò–•–ò–ô' },
    { vopros: '–ê–≤—Ç–æ—Ä –∫–∞—Ä—Ç–∏–Ω—ã ""–ú–æ–Ω–∞ –õ–∏–∑–∞""', otvet: '–î–ê –í–ò–ù–ß–ò' },
    { vopros: '–°—Ç–æ–ª–∏—Ü–∞ –ï–≥–∏–ø—Ç–∞', otvet: '–ö–ê–ò–†' },
    { vopros: '–°–∞–º–∞—è –≤—ã—Å–æ–∫–∞—è –±–∞—à–Ω—è –≤ –º–∏—Ä–µ', otvet: '–ë–£–†–î–ñ-–•–ê–õ–ò–§–ê' },
    { vopros: '–ò–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å —Ç–µ–ª–µ—Ñ–æ–Ω–∞', otvet: '–ë–ï–õ–õ' },
    { vopros: '–°–∞–º–∞—è –±–æ–ª—å—à–∞—è –ø–ª–∞–Ω–µ—Ç–∞ –≤ –°–æ–ª–Ω–µ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ', otvet: '–Æ–ü–ò–¢–ï–†' }
];


let tekushiiVoprosIndex = 0;
let tekushiiIgrokk = 1;
let ochkiIgroka1 = 0;
let ochkiIgroka2 = 0;
let otkrytoeSlovo = [];
let tekushiiUrovenVoprosov = [];
let nepravIlNiePopytki = 0;

const voprosElement = document.getElementById('question');
const slovoElement = document.getElementById('word');
const bukvaInput = document.getElementById('letter-input');
const ugadatBtn = document.getElementById('guess-btn');
const slovoInput = document.getElementById('word-input');
const ugadatSlovoBtn = document.getElementById('guess-word-btn');
const ochkiIgroka1Element = document.getElementById('player1-score');
const ochkiIgroka2Element = document.getElementById('player2-score');
const pobeditelContainer = document.getElementById('winner-container');
const imyaPobeditelyaElement = document.getElementById('winner-name');
const restartBtn = document.getElementById('restart-btn');
const igraContainer = document.getElementById('game-container');
const difficultySelect = document.getElementById('difficulty-select');
const difficultyContainer = document.getElementById('difficulty-container');
const startGameBtn = document.getElementById('start-game-btn');
const currentPlayerElement = document.getElementById('current-player');

function poluchitSluchainyiVoprosIndex(voprosy) {
    return Math.floor(Math.random() * voprosy.length);
}

function nachatIgru() {
    const difficulty = difficultySelect.value;
    tekushiiUrovenVoprosov = difficulty === 'easy' ? legkieVoprosy : difficulty === 'medium' ? srednieVoprosy : slozhnyeVoprosy;

    tekushiiVoprosIndex = poluchitSluchainyiVoprosIndex(tekushiiUrovenVoprosov);
    const tekushiiVopros = tekushiiUrovenVoprosov[tekushiiVoprosIndex];
    voprosElement.textContent = tekushiiVopros.vopros;
    otkrytoeSlovo = Array(tekushiiVopros.otvet.length).fill('_');
    slovoElement.textContent = otkrytoeSlovo.join(' ');
    bukvaInput.value = '';
    slovoInput.value = '';
    tekushiiIgrokk = 1;
    obnovitTekushiyIgrok();
}

function obnovitOchki() {
    ochkiIgroka1Element.textContent = ochkiIgroka1;
    ochkiIgroka2Element.textContent = ochkiIgroka2;
}

function obnovitTekushiyIgrok() {
    currentPlayerElement.textContent = `–ò–≥—Ä–æ–∫ ${tekushiiIgrokk}`;
}

function proveritBukvu(bukva, tekushiiOtvet) {
    let ugadano = false;

    for (let i = 0; i < tekushiiOtvet.length; i++) {
        if (tekushiiOtvet[i] === bukva && otkrytoeSlovo[i] === '_') {
            otkrytoeSlovo[i] = bukva;
            ugadano = true;
        }
    }

    if (ugadano) {
        if (tekushiiIgrokk === 1) {
            ochkiIgroka1++;
        } else {
            ochkiIgroka2++;
        }
    }

    return ugadano;
}

function ugadatBukvu() {
    const bukva = bukvaInput.value.toUpperCase();
    bukvaInput.value = '';
    const tekushiiVopros = tekushiiUrovenVoprosov[tekushiiVoprosIndex];
    const tekushiiOtvet = tekushiiVopros.otvet;

    let ugadano = false;

    for (let i = 0; i < tekushiiOtvet.length; i++) {
        if (tekushiiOtvet[i] === bukva && otkrytoeSlovo[i] === '_') {
            otkrytoeSlovo[i] = bukva;
            ugadano = true;
        }
    }

    if (ugadano) {
        tekushiiIgrokk === 1 ? ochkiIgroka1++ : ochkiIgroka2++;
    } else {
        nepravIlNiePopytki++;
        tekushiiIgrokk = tekushiiIgrokk === 1 ? 2 : 1;
        obnovitTekushiyIgrok();
    }

    slovoElement.textContent = otkrytoeSlovo.join(' ');

    if (!otkrytoeSlovo.includes('_')) {
        zavershitIgru();
    }

    obnovitOchki();
}

function ugadatSlovo() {
    const ugadannoeSlovo = slovoInput.value.toUpperCase();
    slovoInput.value = '';
    const tekushiiVopros = tekushiiUrovenVoprosov[tekushiiVoprosIndex];
    const tekushiiOtvet = tekushiiVopros.otvet;

    if (ugadannoeSlovo === tekushiiOtvet) {
        otkrytoeSlovo = tekushiiOtvet.split('');
        slovoElement.textContent = otkrytoeSlovo.join(' ');
        tekushiiIgrokk === 1 ? ochkiIgroka1 += otkrytoeSlovo.length : ochkiIgroka2 += otkrytoeSlovo.length;
        zavershitIgru();
    } else {
        nepravIlNiePopytki++;
        tekushiiIgrokk = tekushiiIgrokk === 1 ? 2 : 1;
        obnovitTekushiyIgrok();
    }

    obnovitOchki();
}

function zavershitIgru() {
    igraContainer.style.display = 'none';
    const pobditel = ochkiIgroka1 > ochkiIgroka2 ? '–ò–≥—Ä–æ–∫ 1' : ochkiIgroka2 > ochkiIgroka1 ? '–ò–≥—Ä–æ–∫ 2' : '–ù–∏—á—å—è';
    imyaPobeditelyaElement.textContent = pobditel;
    pobeditelContainer.style.display = 'block';
}

function nachatNovuyuIgru() {
    ochkiIgroka1 = 0;
    ochkiIgroka2 = 0;
    nepravIlNiePopytki = 0;
    tekushiiIgrokk = 1;
    obnovitOchki();
    pobeditelContainer.style.display = 'none';
    difficultyContainer.style.display = 'block';
    igraContainer.style.display = 'none';
    obnovitTekushiyIgrok();
}

function startGame() {
    difficultyContainer.style.display = 'none';
    igraContainer.style.display = 'block';
    nachatIgru();
}

startGameBtn.addEventListener('click', startGame);
ugadatBtn.addEventListener('click', ugadatBukvu);
ugadatSlovoBtn.addEventListener('click', ugadatSlovo);
restartBtn.addEventListener('click', nachatNovuyuIgru);

document.addEventListener('DOMContentLoaded', () => {
    obnovitOchki();
    obnovitTekushiyIgrok();
});
"
PMmjK0t6,Portswigger Login Automation,TonmoyGs,Python,Tuesday 18th of June 2024 04:58:06 AM CDT,"import requests
from lxml import html

def login_burp_suite():
    session_request = requests.Session()
    parent_url = 'https://portswigger.net/users'
    
    initial_response = session_request.get(parent_url)
    #print(initial_response.url)
    tree = html.document_fromstring(initial_response.text)
    #print(tree)
    authenticity_token = list(set(tree.xpath(""//input[@name='RequestVerificationToken']/@value"")))[0]
    #print(authenticity_token)
    login_credentials = {
        ""EmailAddress"": ""blablabla@gmail.com"",
        ""Password"": ""\'Dx=2\'!,tM6q-3sNAYf$YBY9QK15kY[+"",
        ""RequestVerificationToken"": authenticity_token
    }
    # session_cookie={
    #     'SessionId': str(dict(initial_response.cookies)[""SessionId""])
    # }

    login_response = session_request.post(parent_url, data=login_credentials, headers=dict(referer=parent_url))
    print(login_response.url)
    print(login_response.text)
    login_response_tree = html.fromstring(login_response.text)
    #print(f'Login response tree is {login_response_tree}')

    for tag in login_response_tree.iter():
        if ""Login failed"" == tag.text:
            print(""Login failed!"")
            break
        else:
            continue
   

if __name__=='__main__':
    login_burp_suite()"
5rNQ4dUF,kaluga-poisk.ru: —Ç–µ—Å—Ç–æ–≤—ã–π –º–æ–±–∏–ª—å–Ω—ã–π —Ñ—É–ª–ª—Å–∫—Ä–∏–Ω,Luxup,HTML,Tuesday 18th of June 2024 03:51:39 AM CDT,"<!-- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–≥–æ —Ç–µ–≥–∞ <body> -->
<script async type='text/javascript' src='//s.luxcdn.com/t/229537/360_light.js'></script>
<script class='__lxGc__' type='text/javascript'>
((__lxGc__=window.__lxGc__||{'s':{},'b':0})['s']['_229537']=__lxGc__['s']['_229537']||{'b':{}})['b']['_717416']={'i':__lxGc__.b++};
</script>"
JhHiDPD9,02. Fishing Competition,Nenogzar,Python,Tuesday 18th of June 2024 03:39:20 AM CDT,"def directions(position, direction, rows):
    row, col = position
    if direction == ""up"":
        row = (row - 1) % rows
    elif direction == ""down"":
        row = (row + 1) % rows
    elif direction == ""left"":
        col = (col - 1) % rows
    elif direction == ""right"":
        col = (col + 1) % rows

    return row, col


def print_matrix(matrix):
    for row in matrix:
        print("""".join(row))


rows = int(input())
fishing_area = []
captain, whirlpool, empty, passage, quota = ""S"", ""W"", ""-"", 0, 20
position = None

for row_ in range(rows):
    line = list(input())
    if captain in line:
        position = (row_, line.index(captain))
    fishing_area.append(line)

direction = input()

while direction != ""collect the nets"":
    new_position = directions(position, direction, rows)
    n_row, n_col = new_position

    step = fishing_area[n_row][n_col]

    if step.isdigit():
        passage += int(step)

    if step == whirlpool:
        passage = 0
        print(f""You fell into a whirlpool! The ship sank and you lost the fish you caught. ""
              f""Last coordinates of the ship: [{n_row},{n_col}]"")
        exit()

    fishing_area[position[0]][position[1]] = empty
    fishing_area[n_row][n_col] = captain
    position = new_position
    direction = input()

if passage >= quota:
    print(f""Success! You managed to reach the quota!"")
else:
    print(f""You didn't catch enough fish and didn't reach the quota! You need {quota - passage} tons of fish more."")

print(f""Amount of fish caught: {passage} tons."")

print_matrix(fishing_area)"
wdW8eCYe,textosound.ps1,Combreal,PowerShell,Tuesday 18th of June 2024 03:27:24 AM CDT,"Add-Type -AssemblyName System.Speech

$text = ""Hi this is text to wav""
$speak = New-Object System.Speech.Synthesis.SpeechSynthesizer
$streamFormat = [System.Speech.AudioFormat.SpeechAudioFormatInfo]::new(8000,[System.Speech.AudioFormat.AudioBitsPerSample]::Sixteen,[System.Speech.AudioFormat.AudioChannel]::Mono)
$speak.SetOutputToWaveFile(""C:\Temp\sound.wav"",$streamFormat)
$speak.Speak($text)
$speak.Dispose()"
KUuqzPuL,thenSharess,Sharess,Lua,Tuesday 18th of June 2024 03:22:45 AM CDT,"h = 0
b = 0
st = 0

function up()
	turtle.up()
h = h + 1
end

function down()
	turtle.down()
		if turtle.detectDown() then
			replace()
			b = 1
		else 
			h = h - 1
		end
end

function base()
	while h < 0 do up()	
	end
end
    
function replace()
	turtle.select(1)
	turtle.dig()
  	turtle.place()
st = st + 1
 end

-- main loop	
while b == 0 do 
	term.clear()
 	term.setCursorPos(1,1)
	print(""placed ""..st)
	replace()
	down()
end
	if b == 1 then 
		term.clear()
 		term.setCursorPos(1,1)
		print(""placed ""..st)
		print(""Returning to base"")
	base()
	print(""Done"")
	error()
end

"
ezMD9Gjf,Comparison of Eigen with raw implementation,SepandMeenu,C++,Tuesday 18th of June 2024 03:21:12 AM CDT,"#include <iostream>
#include <chrono>

#define EIGEN_NO_DEBUG
#include <Eigen/Dense>

void meanStd(const double data[],
             const std::size_t dataSize, const std::size_t dataElementSize,
             double mean[])
{
    for (std::size_t idxElement = 0; idxElement < dataElementSize; ++idxElement)
        mean[idxElement] = 0;

    for (std::size_t idxData = 0, offset = 0; idxData < dataSize;
         ++idxData, offset += dataElementSize) {
        const double* const dataElm = data + offset;
        for (std::size_t idxElement = 0; idxElement < dataElementSize; ++idxElement)
            mean[idxElement] += dataElm[idxElement];
    }

    for (std::size_t idxElement = 0; idxElement < dataElementSize; ++idxElement)
        mean[idxElement] /= dataSize;
}


void meanStdEigen(const double data[], const std::size_t dataSize,
                  const std::size_t dataElementSize,
                  double mean[/* dataElementSize */])
{
    Eigen::Map<const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic>>
        dataMat(data, dataElementSize, dataSize);

    Eigen::Map<Eigen::Vector<double, Eigen::Dynamic>>
    meanMat(mean, dataElementSize);

    meanMat = dataMat.rowwise().mean();
}


int main()
{
    const std::size_t dataElementSize = 1000,
        dataSize = 30000,
        a_size = dataSize * dataElementSize,
        N_TIMES = 100;

    // Generate random data
    double* data = new double[a_size];
    for (std::size_t i = 0; i < a_size; ++i)
        data[i] = i + 1;

    double mean[dataElementSize];

    // measure execution time of the raw implementation
    auto startOriginal = std::chrono::high_resolution_clock::now();
    for (std::size_t i = 0; i < N_TIMES; ++i)
        meanStd(data, dataSize, dataElementSize, mean);
    auto endOriginal = std::chrono::high_resolution_clock::now();
    std::chrono::duration<double> elapsedOriginal = endOriginal - startOriginal;
    float elapsed = elapsedOriginal.count() / N_TIMES;

    printf(""Low-level) elapsed = %0.3e s\n"", elapsed);

    // measure execution time of the Eigen-based implementation
    startOriginal = std::chrono::high_resolution_clock::now();
    for (std::size_t i = 0; i < N_TIMES; ++i)
        meanStdEigen(data, dataSize, dataElementSize, mean);
    endOriginal = std::chrono::high_resolution_clock::now();
    std::chrono::duration<double> elapsedOriginal_Eigen = endOriginal - startOriginal;
    float elapsed_Eigen = elapsedOriginal_Eigen.count() / N_TIMES;
    printf(""Eigen) elapsed = %0.3e s\n"", elapsed_Eigen);

    printf(""> comparison of elapsed times: t_Eigen/t_raw = %0.1f s\n"", elapsed_Eigen / elapsed);

    delete[] data;
    return 0;
}


// g++ -Wall -Wpedantic -O3 -DNDEBUG -std=c++17 -I""/usr/include/eigen3"" test_meanstd.cpp -o test_meanstd.out
"
78NZVLpu,DelegatesDB,Genral,C#,Tuesday 18th of June 2024 02:23:36 AM CDT,"using AmirSql.Database;

namespace Sinaa_Project.Database
{
    public class DelegatesDB
    {
        public int ID;
        public string Name;
        public string Location;
        public enum Position : byte
        {
            DoesntExist = 0,
            RegionalDirector = 1,
            RegionalManager = 2,
            Assistant = 3
        }
        public Position State;
        public double Target;
        public double AchTarget;
        public double TotalTarget;
        public void Load(int id)
        {
            if (id == 0)
                return;
            this.ID = 0;
            this.Name = """";
            this.Location = """";
            this.State = Position.DoesntExist;
            this.Target = 0;
            this.AchTarget = 0;
            this.TotalTarget = 0;
            using (var cmd = new MySqlCommand(MySqlCommandType.SELECT).Select(""delegates"").Where(""id"", id))
            using (var reader = cmd.CreateReader())
            {
                while (reader.Read())
                {
                    this.ID = reader.ReadInt32(""id"");
                    this.Name = reader.ReadString(""name"");
                    this.Location = reader.ReadString(""location"");
                    this.State = (Position)reader.ReadInt32(""position"");
                    this.Target = reader.ReadDouble(""target"");
                    this.AchTarget = reader.ReadDouble(""achTarget"");
                    this.TotalTarget = reader.ReadDouble(""totalTarget"");
                }
            }
        }
    }
}
"
rxuavXpW,Golang mattn sqlite3 driver db locks,cydside,Go,Tuesday 18th of June 2024 01:50:03 AM CDT,"
https://groups.google.com/g/golang-nuts/c/y7WzUsMtqDA
https://go.dev/play/p/tLjXXcHq5H

package main

import (
	""fmt""
	""math/rand""
	""sync""
	""time""
)

func main() {
	launchSomeFakeQueries()
}

var mutexes = map[string]*sync.Mutex{}
var globalMapGuard sync.Mutex

//
// Protect the global map.
// Any accesses to the global map MUST lock the global mutex and then MUST return very quickly
//

func getMutex(dbpath string) *sync.Mutex {
	globalMapGuard.Lock()
	defer globalMapGuard.Unlock()

	if mutex, exists := mutexes[dbpath]; exists {
		return mutex
	}
	var newMutex sync.Mutex
	mutexes[dbpath] = &newMutex
	return &newMutex
}

//
// Execute some (potentially long) query on a specific DB
//

func executeGuardedQuery(dbpath string, q func(string)) {
	mutex := getMutex(dbpath)
	mutex.Lock()
	defer mutex.Unlock()

	q(dbpath)
}

func launchSomeFakeQueries() {
	var wg sync.WaitGroup
	for i := 0; i < 25; i++ {
		dbpath := fmt.Sprintf(""file%d.sqlite"", rand.Intn(5))
		duration := time.Duration(rand.Intn(100)) * time.Millisecond
		wg.Add(1)
		go executeGuardedQuery(dbpath, func(dbpath string) {
			fmt.Println(""Starting some work on"", dbpath)
			time.Sleep(duration)
			fmt.Println(""Finished some work on"", dbpath)
			wg.Done()
		})
	}
	wg.Wait()
}

https://sqlite.org/wal.html#concurrency

https://stackoverflow.com/questions/36431452/precautions-to-avoid-sqlite-file-database-locks-when-concurrent-goroutines-try-t

https://www.reddit.com/r/golang/comments/1988ch8/database_is_locked_when_writing_sqlite3_interface/


https://github.com/mattn/go-sqlite3/issues/209

https://gist.github.com/davyzhang/1392344f993eac471c90

package main

import (
	""database/sql""
	""fmt""
	""log""
	""os""

	_ ""github.com/mattn/go-sqlite3""
)

func main() {
	os.Remove(""/tmp/testlock.db"")
	os.Remove(""/tmp/testlock-shm.db"")
	os.Remove(""/tmp/testlock-wal.db"")

	var db *sql.DB
	if len(os.Args) != 2 { //no param
		printUsage()
		return
	}
	switch os.Args[1] {
	case ""1"":
		db = openDB()
		initDB(db)
	case ""0"":
		dbLoc := openDB()
		initDB(dbLoc)
		dbLoc.Close()
	default:
		printUsage()
		return
	}

	ch := make(chan bool)
	go writer(db)
	go reader(db)
	<-ch
}

func printUsage() {
	fmt.Printf(""usage: dbtest mode\n 0:multiple connection; 1:single connection\n"")
}

func initDB(db *sql.DB) {
	sSql := `
		CREATE TABLE counters (
		    id      INTEGER,
		    intro         VARCHAR (255)
		)`
	db.Exec(sSql)
}

func openDB() *sql.DB {
	db, err := sql.Open(""sqlite3"", ""file:/tmp/testlock.db?cache=shared&mode=rwc&_busy_timeout=9999999"")
	if err != nil {
		log.Printf(""open error %s"", err)
		return nil
	}
	db.Exec(""PRAGMA journal_mode=WAL"")
	return db
}

func writer(db *sql.DB) {
	var dbLoc *sql.DB
	if db == nil {
		dbLoc = openDB()
	} else {
		dbLoc = db
	}
	sSql := `
		INSERT INTO counters (
			id,intro
		) VALUES(
			?,?
		)`
	dbLoc.Exec(sSql, 1, """")
	i := 0
	sSql = `
	update counters set id = ?
	`
	for {
		_, err := dbLoc.Exec(sSql, i)
		i += 1
		if err != nil {
			log.Printf(""db error in writer %s"", err)
			os.Exit(1)
		}
	}
}

func reader(db *sql.DB) {
	var dbLoc *sql.DB
	if db == nil {
		dbLoc = openDB()
	} else {
		dbLoc = db
	}
	sSql := `
	select * from counters
	`
	for {
		_, err := dbLoc.Exec(sSql)
		if err != nil {
			log.Printf(""db error in reader %s"", err)
			os.Exit(1)
		}
	}
}
"
yDFDW1TK,Yt dl fail test,Obi-Wan,Python,Tuesday 18th of June 2024 12:59:27 AM CDT,"from pytube import YouTube
import time
import re


class yt:
	
	def  __init__(self):

		self.time_start = time.process_time()
		self.yt_links = []
		self.string_count = 0
		
	def yt_link_input(self):
		
		for yt_retry in range(5):
			info_data = input(""YouTube Input: "")
			
			if info_data:
				if self.is_valid_url(info_data):
					#print(info_data)
					self.yt_links.append(info_data)
					#print(self.yt_links)
					for element in self.yt_links:
						if isinstance(element, str):
							self.string_count += 1
				else:
					print(""fake_2"")
#					print(""no link entered!"")
			else:
				print(""fake_1"")
#				print(""error: no link inputed"")
			if self.string_count <= 4:
				print(""hehe "" + str(self.string_count))
#				print(""add another link?"")
			else:
				pass
				#print(""no info collected!"")


	def is_valid_url(self, url: str) -> bool:
		# Regular expression pattern for validating a URL
		regex = re.compile(
			r'^(https?|ftp)://'
			r'(([A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\.)+'
			r'(?:[A-Z]{2,6}\.?|[A-Z0-9-]{2,}\.?)|'
			r'localhost|'
			r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}|'
			r'\[?[A-F0-9]*:[A-F0-9:]+\]?)'
			r'(:\d+)?'
        	r'(/?|[/?]\S+)$', re.IGNORECASE)

		return re.match(regex, url) is not None


if __name__ == '__main__':

	yt().yt_link_input()
"
es2jzDPM,trexinerator snowybot,coinwalk,JavaScript,Tuesday 18th of June 2024 12:42:16 AM CDT,"var elderly = ((parseFloat(document.getElementById('pct_balance').value))/10000);
var prefit = elderly;
var winnerdinner = parseFloat(document.getElementById('pct_balance').value);
var bolance = parseFloat(document.getElementById('pct_balance').value);
var smartz = parseFloat(document.getElementById('pct_balance').value);
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var small = (prefit*30);
var belance = parseFloat(document.getElementById('pct_balance').value);
var freak = small;
var fruck = small;
var joey = ((Math.floor(belance/tens))*tens);
var upper = 6.9;
var downer = 2.9;
var snowy = ((Math.floor(belance/tens))*tens);
var snowzy = ((Math.floor(belance/tens))*tens);
var beast = prefit;
var elven = 0;
var dork = Number(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
var greedy =  Number(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);



function go(){
if (greedy!=elven){
var chunk = Number(document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText);
elven = Number(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
belance = document.getElementById('pct_balance').value;
if (belance>(joey+(beast*upper))) {
    beast = beast*2;
    upper   = 4.9;
    downer  = 4.9;
    joey    = parseFloat(belance);
}
if (belance<(joey-(beast*downer))) {
    beast = beast*2;
    upper   = 4.9;
    downer  = 4.9;
    joey    = parseFloat(belance);
}
if ((belance<=(snowzy-(tens*3)))&&(belance>(((Math.floor(belance/tens))*tens)+eights))) {
    beast = prefit;
    upper   = 6.9;
    downer  = 2.9;
    snowzy   = ((Math.floor(belance/tens))*tens);
    joey    = ((Math.floor(belance/tens))*tens);
}
if ((belance<=(snowzy-(tens*3)))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))) {
    beast = prefit;
    upper   = 6.9;
    downer  = 2.9;
    snowzy   = ((Math.floor(belance/tens))*tens);
    joey    = ((Math.floor(belance/tens))*tens);
    }
if ((belance<=(snowzy-(tens*3)))&&(belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))) {
    beast = prefit*2;
    upper   = 4.9;
    downer  = 4.9;
    snowzy   = ((Math.floor(belance/tens))*tens);
    joey    = parseFloat(belance);
    }
if ((belance>=(snowy+(tens*3)))&&(belance>(((Math.floor(belance/tens))*tens)+eights))) {
    beast = prefit;
    upper   = 6.9;
    downer  = 2.9;
    snowy   = ((Math.floor(belance/tens))*tens);
    snowzy   = ((Math.floor(belance/tens))*tens);
    joey    = ((Math.floor(belance/tens))*tens);
}
if ((belance>=(snowy+(tens*3)))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))) {
    beast = prefit;
    upper = 6.9;
    downer = 2.9;
    snowy   = ((Math.floor(belance/tens))*tens);
    snowzy   = ((Math.floor(belance/tens))*tens);
    joey = ((Math.floor(belance/tens))*tens);
    }
if ((belance>=(snowy+(tens*3)))&&(belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))) {
    beast = prefit*2;
    upper = 4.9;
    downer = 4.9;
    snowy   = ((Math.floor(belance/tens))*tens);
    snowzy   = ((Math.floor(belance/tens))*tens);
    joey = parseFloat(belance);
    }
if (belance>=(winnerdinner*24)) {
    return;
}
var cat = ((belance-smartz).toFixed(8));
console.log(""profit"");
console.log(cat);
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
}
greedy =  Number(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
setTimeout(() => go(), 1);
}

go();"
AE7Xu2kX,Pagina rusa config weapon_mp,brague,VB.NET,Tuesday 18th of June 2024 12:32:56 AM CDT,"WeaponType: tipo de arma. Valores posibles: bala - ca√±√≥n que dispara balas, granada - granada, proyectil - arma que dispara proyectiles explosivos.

    WeaponClass: la categor√≠a a la que pertenece el ca√±√≥n (esta caracter√≠stica especifica la anterior):
	
    pistol - pistola, lanzacohetes - lanzacohetes, granada - granada, torreta - ca√±√≥n en el coche, rifle - rifle, smg - arma semiautom√°tica, no jugador - arma utilizada exclusivamente por tus enemigos.
	
    displayName es el nombre del arma en el juego. Escriba aqu√≠ el nombre del par√°metro del archivo weapon.str (se indica en este archivo despu√©s de la palabra REFERENCIA) ubicado en el directorio \ localizedstrings \ english del archivo localized_english_pak1.pk3 y que contiene esta entrada (se encuentra despu√©s de la palabra LANG_ENGLISH bajo el nombre del par√°metro correspondiente). Cuando agregue una nueva arma al juego, aseg√∫rese de escribir su nombre real aqu√≠.
	
    gunModel: el modelo de ca√±√≥n que se usa cuando tu personaje lo sostiene. Cabe se√±alar que todos los archivos de modelo est√°n empaquetados en el archivo pak0.pk3, en el directorio \ xmodel (esta carpeta es la m√°s saturada de modelos), \ xmodelsurfs y \ xmodelparts. Al mismo tiempo, los dos primeros cat√°logos contienen modelos completos, mientras que el √∫ltimo contiene solo componentes. En todos los par√°metros que establecen el modelo para cualquier objeto o tema (esta caracter√≠stica no es una excepci√≥n), debe hacer referencia al archivo ""modelo"" que necesita sin extensi√≥n, que se encuentra en una de las dos carpetas nombradas (en este caso, en el directorio \ xmodel) simplemente especificando su nombre. Si se establece en ninguno, el maletero no tiene modelo.
	
    handModel: el modelo de la mano en la que tu personaje sostiene esta arma.
	
    fireAnim: animaci√≥n de disparar esta arma. Aqu√≠ y en los valores de los dos indicadores siguientes, debes registrar el nombre del archivo de ""animaci√≥n"" que necesitas (este tipo de archivos no tienen extensi√≥n), que se encuentra en el archivo pak0.pk3, en el directorio \ xanim.
	
    meleeAnim - animaci√≥n de golpe a tope.
	
    reloadAnim: recarga la animaci√≥n.
	
    WeaponSlot - el espacio que ocupa esta arma: pistola - espacio de pistola, granada - espacio de granada, primario - para el arma principal. El valor none es para armas que no se pueden llevar.
	
    slotStackable: este par√°metro determina si esta arma de asesinato (cuando la llevas contigo) deja un espacio para otra arma del mismo tipo (1 - s√≠, 0 - no). Poner 1 aqu√≠ elimina el l√≠mite del n√∫mero m√°ximo de barriles que puede llevar consigo al mismo tiempo. En este caso, la jugabilidad se acercar√° a la mayor√≠a de los otros juegos de acci√≥n, donde tu h√©roe puede cargarse con un n√∫mero ilimitado de armas.
	
    moveSpeedScale: multiplicador de la velocidad de movimiento del jugador cuando sostiene este barril. Son posibles valores fraccionarios. Por alguna raz√≥n, los desarrolladores han determinado el valor de este atributo para todos los tipos de armas como unidad. Por lo tanto, su velocidad de movimiento no depende del tama√±o y la masa de su arma, que, en mi opini√≥n, no es del todo realista. Mientras tanto, el realismo en el juego sobre la Segunda Guerra Mundial es muy importante. Por lo tanto, sugiero que corrija el valor de la caracter√≠stica (en alg√∫n lugar baj√°ndolo, en alg√∫n lugar aumentando) para todas o casi todas las armas homicidas, dependiendo del peso aproximado de estas √∫ltimas. Despu√©s de todo, debe estar de acuerdo en que una persona no puede moverse con la misma rapidez si est√° armada con una pistola ligera o con un ca√±√≥n antitanque voluminoso. Adem√°s, si pones un n√∫mero mayor que 1 aqu√≠, entonces le dar√°s a tu h√©roe una aceleraci√≥n adicional y correr√° con el barril como loco. Parece divertido.
	
    damage: da√±o infligido por un proyectil disparado desde este ca√±√≥n. Al aumentar significativamente el da√±o de todo tipo de armas, har√° que el juego sea m√°s realista. Ahora los personajes del juego (incluido tu h√©roe) morir√°n, como personas reales, de dos o tres disparos precisos.
    MeleeDamage: da√±o de un golpe con un trasero. Al aumentar significativamente el valor del atributo, puedes insertar alg√∫n arma cuerpo a cuerpo en el juego, por ejemplo, un cuchillo.
	
    fireDelay: la demora antes de disparar, es decir, el intervalo de tiempo entre el momento en que aprietas el gatillo y sueltas una bala de la boca de esta arma. Este atributo, como todas las dem√°s configuraciones relacionadas con el tiempo, se mide en segundos.
	
    meleeDelay: demora antes de golpear con el trasero.
	
    reloadTime: el tiempo que se tarda en recargar el ca√±√≥n cuando todav√≠a hay balas en √©l.
	
    reloadEmptyTime: el tiempo que se tarda en recargar completamente el arma.
	
    fireTime: la duraci√≥n de un disparo del medio de destrucci√≥n dado. En pocas palabras, la velocidad de disparo (cuanto menor es el valor, mayor es).
	
    meleeTime - duraci√≥n del golpe con el trasero.
	
    dropTime: tiempo dedicado a dejar caer armas.
	
    raiseTime: el tiempo necesario para seleccionar esta arma homicida.
	
    adsZoomFov - zoom de la vista, es decir, el aumento dado por este √∫ltimo. Tenga en cuenta que cuanto menor sea el valor, mayor ser√° el aumento.
	
    adsZoomInFrac: qu√© tan r√°pido apuntar√° tu personaje, es decir, qu√© tan r√°pido.
	
	adsOverlayShader: un dibujo que llena el √°rea de la pantalla alrededor del alcance del francotirador (solo para barriles con √©l). Aqu√≠ debe especificar la ruta de esta imagen dentro del archivo pak0.pk3. Los autores del juego usan un dibujo aqu√≠ que pinta la pantalla en negro. Si no especifica nada en absoluto en el valor de la caracter√≠stica, entonces no habr√° nada en la pantalla excepto la vista en s√≠, y ser√° lo m√°s conveniente para apuntar como sea posible.
	
    adsOverlayReticle: tipo de alcance de francotirador (si no est√° presente, el valor del atributo est√° vac√≠o). La vista principal es FG42. Para las armas que no est√°n equipadas con un visor de francotirador, es posible eliminar esta deficiencia dando al indicador un valor espec√≠fico. Despu√©s de eso, ¬°incluso la pistola Colt m√°s com√∫n se convertir√° en un simple rifle de francotirador (ver Fig. 10)!
	
    adsOverlayWidth: ancho del alcance del francotirador.
	
    adsOverlayHeight: su altura. Al ajustar los n√∫meros escritos aqu√≠ y en los tres par√°metros anteriores, puede cambiar tranquilamente la apariencia del alcance del francotirador.
	
    adsBobFactor: la fuerza de balancear el arma de un lado a otro cuando se mueve durante un disparo dirigido.
	
    adsViewBobMult: multiplicador de movimiento del barril cuando se mueve durante el disparo dirigido. El n√∫mero prescrito aqu√≠ se multiplica por el valor del par√°metro anterior, lo que hace que el temblor del arma se intensifique si el multiplicador es mayor que 1, o disminuya si es menor.
	
    hipSpreadStandMin: movimiento m√≠nimo del ca√±√≥n al disparar estando de pie.
	
    hipSpreadDuckedMin: m√≠nima contracci√≥n del arma homicida al disparar mientras est√° sentado.
	
    hipSpreadProneMin: m√≠nima sacudida del ca√±√≥n al disparar boca abajo.
	
    hipSpreadMax: m√°xima agitaci√≥n del ca√±√≥n al disparar desde cualquier posici√≥n.
	
    adsSpread: precisi√≥n de disparo general para este tipo de arma (es decir, la desviaci√≥n de la bala de la trayectoria especificada). Cuanto menor sea el valor, mayor ser√° la precisi√≥n.
	
    idleCrouchFactor: aumente la precisi√≥n del disparo al disparar mientras est√° sentado en una posici√≥n estacionaria.
	
    idleProneFactor: aumenta la precisi√≥n del disparo cuando se dispara boca abajo en una posici√≥n estacionaria.
	
    gunMaxPitch es el √°ngulo vertical m√°ximo del ca√±√≥n.
	
	gunMaxYaw es el √°ngulo horizontal m√°ximo del ca√±√≥n.
	
    adsGunKickPitchMin: retroceso vertical m√≠nimo al disparar este tipo de arma. Con un valor positivo, el retroceso desplaza el ca√±√≥n hacia arriba, con un valor negativo, hacia abajo.
	
    adsGunKickPitchMax - retroceso vertical m√°ximo.
	
    adsGunKickYawMin - retroceso horizontal m√≠nimo. Si el valor es mayor que cero, el retroceso mueve el ca√±√≥n hacia la izquierda, si es m√°s bajo, mueve el ca√±√≥n hacia la derecha.
	
    adsGunKickYawMax - retroceso horizontal m√°ximo.
	
    adsGunKickAccel: aceleraci√≥n de la carga.
	
    adsGunKickSpeedMax: duraci√≥n m√°xima del efecto de retroceso al disparar esta arma.
	
    adsGunKickSpeedDecay: duraci√≥n m√≠nima de la acci√≥n del anuncio. Si quieres que el juego sea m√°s realista, aseg√∫rate de aumentar el retroceso de las armas homicidas del juego aumentando ligeramente los valores de este y los seis atributos anteriores.
	
    adsGunKickStaticDecay: disminuye la fuerza de retroceso al disparar desde una posici√≥n estacionaria.
	
    radiantName es el nombre del arma en Radiant Map Editor.
	
    worldModel: el modelo del arma que se usa cuando est√° inactiva. Especifique aqu√≠ la ruta del archivo correspondiente dentro del archivo pak0.pk3, separando los nombres de las carpetas con una barra diagonal (este m√©todo separa los nombres de los directorios y en los valores de otros atributos que requieren especificar la ruta del archivo). Por ejemplo: xmodel / weapon_bar.
	
    hudIcon: una representaci√≥n esquem√°tica de este tipo de arma, utilizada para dise√±ar el HUD, la pantalla del h√©roe. Debe estar representado por un archivo dds de la carpeta \ gfx \ icons del archivo pak0.pk3.
	
    ammoIcon: un icono que representa la munici√≥n de este barril. El archivo mencionado aqu√≠ en la cara de una imagen en formato tga debe estar ubicado en el archivo pak0.pk3 en el directorio \ gfx \ icons.
	
    ammoName es el tipo de munici√≥n que utiliza el ca√±√≥n. Casi todos los medios de destrucci√≥n utilizan su propio tipo de munici√≥n. Sin embargo, puede desarrollar un est√°ndar √∫nico para todos o varios tipos de armas, otorg√°ndoles el mismo valor aqu√≠.
	
    maxAmmo: la cantidad m√°xima de municiones para esta arma que puedes llevar contigo.
	
    startAmmo: el n√∫mero inicial de cartuchos (es decir, el que obtienes al comienzo de la misi√≥n o al recoger un barril nuevo).
	
    clipName: tipo de clip de barril. Al igual que con la m√©trica ammoName, hay casi tantas opciones como medios de destrucci√≥n en el juego.
	
    clipSize es el n√∫mero m√°ximo de rondas que puede contener el clip.
	
    dropAmmoMin: el n√∫mero m√≠nimo de balas cargadas en el ca√±√≥n que puede obtener al recoger esta arma si ya ha sido utilizada por alguien. Es decir, si quedan menos cartuchos en el ca√±√≥n de los indicados aqu√≠, su n√∫mero aumentar√° autom√°ticamente al valor del par√°metro.
	
    dropAmmoMax es el n√∫mero m√°ximo de cartuchos que puede haber en el barril usado que encuentre. Le aconsejo que escriba aqu√≠ un n√∫mero igual a la cantidad m√°xima de munici√≥n para un arma (recuerde, est√° determinada por el par√°metro maxAmmo), y ponga 0 en el valor de la caracter√≠stica anterior, de lo contrario, resulta de alguna manera inveros√≠mil. Los cartuchos que vienen de la nada en armas usadas y desaparecen con el mismo √©xito en ninguna parte, todo esto parece, por decir lo m√≠nimo, extra√±o.
	
	pickupSound: un efecto de sonido que se escucha cuando un soldado (incluido tu personaje) levanta un arma homicida determinada. El archivo al que hizo referencia en este y en los siguientes cuatro par√°metros debe colocarse en el directorio \ sound \ arms del archivo pak1.pk3.
	
    ammoPickupSound: el sonido de recoger munici√≥n para un arma.
	
    fireSound: el sonido de los disparos.
	
    reloadSound: recarga el sonido.
	
    putawaySound es el efecto de sonido que escuchas cuando escondes un arma determinada, reemplaz√°ndola por otra.
	
    twoHanded: este par√°metro determina si el arma es de dos manos. Aqu√≠ y en los dos par√°metros siguientes, solo son posibles dos valores: 1 - s√≠, 0 - no.
	
    semiAuto: el atributo determina si el ca√±√≥n es semiautom√°tico.
	
    boltAction: si el personaje experimenta un impacto de ob√∫s cuando es alcanzado por un proyectil disparado con esta arma homicida. Pon todas las armas homicidas aqu√≠, y cualquier herida que recibas, como en la vida real, ir√° acompa√±ada de ojos borrosos.
	
    aiEffectiveRange: la distancia m√°xima entre tu personaje y el enemigo armado con esta arma, a la que el enemigo te golpear√° inevitablemente, a menos, por supuesto, que t√∫ mismo esquives una bala voladora.
	
    aiMissRange: la distancia m√≠nima entre t√∫ y tu oponente, a la que este √∫ltimo, armado con este ca√±√≥n, no te golpear√°, a menos que, por supuesto, hagas movimientos innecesarios. La precisi√≥n, y por tanto la IA de tus enemigos armados con el ca√±√≥n especificado, depende en gran medida de los valores de este y de las caracter√≠sticas anteriores. Se recomienda a los buenos jugadores que reduzcan el n√∫mero establecido aqu√≠ y aumenten la configuraci√≥n anterior para todas las armas.
	
    standMoveF - ""lanzar"" el arma hacia adelante, lo que ocurre cuando corres. Cuanto mayor sea el valor del par√°metro, m√°s lejos de la c√°mara su h√©roe sostiene el ca√±√≥n.
	
    standMoveR - ""presionar"" el arma homicida en el borde izquierdo de la pantalla mientras se mueve. Con valores positivos, tu personaje mantendr√° el ca√±√≥n en el lado izquierdo de la pantalla (cuanto mayor sea el n√∫mero, m√°s a la izquierda), con valores negativos, a la derecha.
	
    standMoveU - levantar el maletero cuando se mueve mientras est√° de pie.
	
    standRotP - inclinaci√≥n hacia abajo de la pistola mientras est√° de pie. Cuanto mayor sea el n√∫mero escrito aqu√≠, m√°s abajo se inclinar√° el maletero.
	
    standRotY - inclina el tronco hacia la izquierda mientras est√°s de pie.
	
    standRotR - inclinarse hacia la derecha cuando est√© de pie.
    duckedOfsF - ""extender"" el arma hacia adelante cuando tomas una posici√≥n estacionaria en la sentadilla.
	
    duckedOfsR - ""presionar"" el tronco hacia el borde izquierdo de la pantalla cuando el personaje est√° parado en la sentadilla.
	
    duckedOfsU - levantando el tronco cuando toma una posici√≥n sentada estacionaria.
	
    duckedMoveF - ""extender"" el arma hacia adelante cuando se mueve agachado.
	
    duckedMoveR - ""presionar"" el tronco hacia el borde izquierdo de la pantalla cuando se mueve en una sentadilla.
	
    duckedMoveU - levantar el tronco cuando se mueve mientras est√° sentado.
	
    duckedRotP - inclinaci√≥n hacia abajo del ca√±√≥n mientras est√° agachado.
	
    duckedRotY - inclinaci√≥n del tronco hacia la izquierda mientras est√° sentado.
	
    duckedRotR: inclinarse hacia la derecha cuando se hace una sentadilla. 
	
	A esto le siguen nueve par√°metros, repitiendo este √∫ltimo en todo excepto en la parte inicial del nombre. Nuestros ‚Äúnuevos conocidos‚Äù tienen nombres que comienzan con la palabra boca abajo y tienen las mismas funciones que las caracter√≠sticas anteriores, solo para la posici√≥n boca abajo. Por ejemplo, el par√°metro proneRotY, por analog√≠a con la caracter√≠stica duckedRotY, especifica la inclinaci√≥n del tronco hacia la izquierda al gatear.
	
    standMoveMinSpeed: la velocidad m√≠nima de movimiento a m√°xima altura para un soldado armado con este ca√±√≥n.
	
    duckedMoveMinSpeed: la velocidad m√≠nima de movimiento del sujeto mientras est√° agachado con esta arma.
	
    proneMoveMinSpeed: la velocidad de movimiento m√≠nima del personaje mientras se arrastra con este barril.
	
    standRotMinSpeed: velocidad de giro m√≠nima de un soldado de pie armado con este ca√±√≥n.
	
    duckedRotMinSpeed: la velocidad de rotaci√≥n m√≠nima del personaje mientras se agacha con esta arma.
	
    proneRotMinSpeed: la velocidad de rotaci√≥n m√≠nima del personaje en la posici√≥n boca abajo con este barril. De hecho, este y los cinco atributos anteriores determinan la agilidad de tu h√©roe cuando est√° armado con un ca√±√≥n espec√≠fico.
	
    A continuaci√≥n se muestran los par√°metros que est√°n disponibles solo para granadas y ca√±ones que disparan proyectiles explosivos, es decir, armas con valor de granada o proyectil para la caracter√≠stica de tipo de arma.
	
    explosionRadius: el radio de la explosi√≥n producida por el proyectil de esta arma.
	
    explosionInnerDamage: da√±o por explosi√≥n infligido a sujetos dentro de su radio.
	
    explosionOuterDamage: da√±o por explosi√≥n infligido a los soldados que se encuentran cerca de su radio. Al aumentar significativamente los valores de este y los tres indicadores anteriores, puede convertir una granada ordinaria en una poderosa bomba.
	
    projectileSpeed: la velocidad del proyectil utilizada por este ca√±√≥n.
	
    projectileSpeedUp: aceleraci√≥n del vuelo del proyectil (el par√°metro est√° presente solo para granadas).
	
    projectileModel - modelo de proyectil.
	
    projExplosionType - tipo de explosi√≥n (granada - explosi√≥n de granada, cohete - cohete).
	
    projExplosionSound - sonido de explosi√≥n.
	
    projExplosionEffect es el efecto que ves cuando el proyectil explota. Aqu√≠ debe consultar el archivo efx del directorio \ fx del archivo pak5.pk3.
	
    rojo proyectil: la proporci√≥n de rojo en el color del proyectil de esta arma. El valor m√≠nimo para este y los dos atributos siguientes es 0, el m√°ximo es 1.
	
    projectileGreen - la proporci√≥n de verde en la coloraci√≥n del proyectil.
	
    proyectil Azul - fracci√≥n azul.
	
	
	Profundizando en los archivos de ""armas"" del juego, puedes simular medios de destrucci√≥n completamente nuevos. Si no quieres hacer transformaciones significativas, te aconsejo que simplemente le agregues un poco de realismo al juego, aumentando ligeramente el temblor de la mira y el retroceso al disparar, adem√°s de ralentizar la velocidad de movimiento del jugador con un arma pesada. En sus manos.
	
    Adem√°s, al trabajar con archivos de ""armas"", puede reemplazar las armas homicidas con cosas √∫tiles. Puede, por ejemplo, hacer algo como un jetpack con cualquier ca√±√≥n, estableciendo el primero en cero da√±o (el par√°metro de da√±o), eliminando el modelo de arma de la pantalla (recuerde que esto se hace estableciendo el par√°metro gunModel en ninguno) y elevando el valor de la caracter√≠stica moveSpeedScale de 1,5 a 3. Usando la cosita recibida, podr√°s correr por los mapas a una velocidad vertiginosa, evitando la persecuci√≥n cuando la situaci√≥n lo requiera.
	
    Otra opci√≥n es convertir una de las armas homicidas en un botiqu√≠n de primeros auxilios que se puede arrastrar (ver Figura 8). 
	Recomiendo usar una pistola Colt para esto. Establezca la propiedad gunModel en health_small y establezca la configuraci√≥n de meleeAnim en viewmodel_colt45_fire. A continuaci√≥n, establezca el valor del atributo de da√±o en cero y asigne un peque√±o n√∫mero positivo al par√°metro de da√±o cuerpo a cuerpo (preferiblemente de 5 a 10). Con la ayuda de tal objeto, puede curar gradualmente a sus colegas acerc√°ndose a ellos y presionando la tecla para golpear con el trasero (por defecto, Shift).
	Tambi√©n le aconsejo que limite la cantidad de botiquines de primeros auxilios que puede llevar con usted ajustando el valor del indicador maxAmmo (par√© en diez). El botiqu√≠n de primeros auxilios es especialmente efectivo en el modo multijugador, donde a partir de ahora, los jugadores individuales podr√°n desempe√±ar el papel de m√©dicos.
	
    Adem√°s, su humilde sirviente insert√≥ una apariencia de descarga el√©ctrica y un rifle l√°ser en el juego. El primero se puede obtener de alguna peque√±a arma d√©bil, como una pistola, redise√±ando significativamente su apariencia, as√≠ como estableciendo el valor de boltAction en uno, y el indicador adsSpread en un n√∫mero en la regi√≥n de 2.5-3. Para obtener un arma l√°ser, tome como base alg√∫n rifle simple (por ejemplo, M1 ""Garand"", que corresponde al archivo m1garand) y luego de los ajustes necesarios en la piel, baje significativamente los valores de los par√°metros fireTime y adsSpread (la primera, aproximadamente dos o tres veces, la √∫ltima, de cuatro a cinco), y tambi√©n aumenta el da√±o de las armas (da√±o). 
	Ambos tipos de armas ser√°n especialmente apropiadas a la luz de la modificaci√≥n futurista que estamos creando.
	
	
	Guerreros
Pasemos al archivo pak5.pk3, mencionado en la primera parte del art√≠culo. En √©l, estamos interesados ??en el directorio \ aitype. En este √∫ltimo, encontrar√° muchos archivos con la extensi√≥n gsc, cada uno de los cuales contiene las caracter√≠sticas de un car√°cter o tipo de car√°cter en particular. Los archivos con un nombre que comienza con ally_ est√°n relacionados con sus socios. Aquellos que tienen el prefijo axis_ en su nombre corresponden a enemigos. Adem√°s, los nombres de casi todos los archivos locales terminan en _X, donde X es el nombre corto del arma con la que est√° armado el soldado. Todos estos archivos est√°n llenos de un mont√≥n de par√°metros que se encuentran dispersos en las secciones principal, de generaci√≥n y precach√©(hay un peque√±o bloque al principio del archivo.)
	
El contenido de cada uno de ellos se muestra entre llaves. En primer lugar, necesitamos el bloque principal, que contiene las siguientes caracter√≠sticas del personaje.

self.team -es el ej√©rcito a cuyo servicio est√° el soldado: ""aliados"" - aliados, ""eje"" - fascistas.

self.accuracy - precisi√≥n del personaje.

self.health - salud.

self.weapon - arma principal (se debe citar el valor). Aqu√≠ y en el significado de los dos atributos siguientes, debe consultar el archivo correspondiente a esta herramienta de destrucci√≥n (este tipo de archivos se escribi√≥ un poco m√°s arriba), ubicado en el directorio \ arms \ sp del archivo pak0.pk3. Por ejemplo, si escribe la palabra ""Thompson"" aqu√≠, el sujeto estar√° armado con una metralleta Thompson.

self.secondaryweapon - segunda arma de asesinato (pistola). Si est√° ausente, aqu√≠ hay comillas vac√≠as.

self.grenadeWeapon - arma de granada (si existe).
	
self.grenadeAmmo: el n√∫mero de granadas que tiene el sujeto. Cambiando los valores de este y los tres indicadores anteriores, podr√°s rearmar por completo a tus enemigos y aliados. Personalmente, colgu√© m√°s granadas a cada enemigo y dispar√© dos potentes ca√±ones, y uno de ellos era una especie de arma pesada como un ca√±√≥n antitanque. Luchar con tales rivales es mucho m√°s dif√≠cil que con el original, pero al mismo tiempo, y mucho m√°s emocionante.

self.scariness - el miedo que sienten los soldados de la oposici√≥n cuando ven a este h√©roe. Cuanto m√°s alto, m√°s amenazante se ve el personaje.

self.bravery - valent√≠a. Apuesta 100 y el personaje ganar√° total valent√≠a. Los autores del juego usan solo dos valores aqu√≠: 6 - para tus colegas y 50 - para enemigos. Experimente con la edici√≥n de este atributo. Esto puede dar lugar a resultados inesperados y muy diferentes. Por ejemplo, al registrar aqu√≠ un n√∫mero mayor para sus aliados (de 50 a 100), aumentar√° significativamente su actividad, y por lo tanto, un papel en las hostilidades. En este caso, te resultar√° mucho m√°s f√°cil jugar.	
	
Los buenos jugadores, por otro lado, pueden reducir el grado de participaci√≥n de los soldados de tu ej√©rcito en la guerra, aumentando as√≠ la complejidad del juego. Al establecer a los enemigos en un valor cercano a cero, los convertir√°s en completos cobardes, y siempre huir√°n de ti, como las liebres de un lobo.
Tenga en cuenta que al cambiar el arsenal de armas de un h√©roe, debe corregir el contenido de la secci√≥n de precach√© de la siguiente manera. Si ha reemplazado un arma por otra, ingrese el nombre de esta √∫ltima en la l√≠nea precacheItem (‚ÄúX‚Äù); en lugar de X (lo mismo que especificaste en uno de los par√°metros de ""arma"" del personaje). Si arm√≥ al sujeto con un nuevo ca√±√≥n, agregue una l√≠nea del mismo tipo a este bloque, sustituyendo X con el nombre del arma homicida agregada.	
	
Me atrevo a suponer que los desarrolladores crearon todos los enemigos (y, por cierto, los socios tambi√©n) de acuerdo con una sola plantilla, por lo que todos resultaron ser dolorosamente similares entre s√≠. ¬°As√≠ que a√±ade algo de variedad! Para hacer esto, d√© a los personajes del juego individualidad, eligiendo los mismos par√°metros de diferentes h√©roes al menos valores ligeramente diferentes entre s√≠.
Adem√°s, al ajustar los atributos de los personajes del juego, puede influir significativamente en la complejidad del juego. La opci√≥n ideal para los jugadores experimentados ser√°n los enemigos armados hasta los dientes: valientes como verdaderos luchadores, tan precisos como francotiradores y sanos como toros - en general, dignos rivales con los que es realmente interesante luchar. Si al mismo tiempo est√° experimentando grandes problemas durante el paso del juego, ser√° √∫til tambi√©n fortalecer adecuadamente a sus colegas. En este caso, la dificultad no aumentar√° mucho en comparaci√≥n con el nivel que ten√≠a antes de la mejora de las habilidades de combate del enemigo.

Sistema de da√±os

Ahora abramos la carpeta \ info. En √©l, encontrar√° solo dos archivos (ambos no tienen extensi√≥n): ai_lochit_dmgtable y mp_lochit_dmgtable. El primero determina la vulnerabilidad de varias partes del cuerpo (y en algunos casos, partes del equipo) de tus oponentes y colegas, el segundo es el mismo para los jugadores en multijugador. 
Ambos archivos son similares en estructura a los archivos de ""arma"" y ""transporte"" discutidos anteriormente, y est√°n construidos de la siguiente manera. 
Primero viene la combinaci√≥n LOCDMGTABLE \ none \, seguida del n√∫mero 1, que indica la salud general de los personajes. A continuaci√≥n, una lista de par√°metros comienza con los nombres de las partes del cuerpo, cada una de las cuales determina el dolor del da√±o en el √°rea especificada (cuanto mayor sea el n√∫mero que sigue al nombre del par√°metro, m√°s vulnerable ser√° la parte del cuerpo). 
Antes de las designaciones de todas las partes del cuerpo: casco: la parte superior de la cabeza (√°rea para sombreros: cascos,	boinas, etc.), cabeza - la parte inferior de la cabeza, cuello - el cuello, torso_upper - la parte superior del torso (la mayor parte de esta √°rea est√° ocupada por el pecho), torso_lower - la parte inferior del torso (vientre), right_arm_upper - la derecha hombro, brazo derecho inferior - antebrazo derecho, mano derecha - mano derecha, brazo izquierdo arriba - hombro izquierdo, brazo izquierdo inferior - antebrazo izquierdo, mano izquierda - mano izquierda, pierna derecha arriba - muslo derecho, pierna derecha inferior - espinilla derecha, pie derecho - pie derecho, pierna izquierda superior - muslo izquierdo, pierna izquierda left_leg_lower - pie izquierdo, pistola - un arma que el personaje sostiene en sus manos.

Los archivos de la carpeta \ info te ayudar√°n a redise√±ar completamente el sistema de da√±os del juego. Al ajustar los valores de las caracter√≠sticas disponibles en estos archivos, puede cambiar la capacidad de supervivencia de los personajes en el juego (aumentar los valores de los par√°metros fortalece la salud de los personajes, y al disminuirlos, respectivamente, debilitarlos ), lo que afecta significativamente la jugabilidad.

Preste tambi√©n atenci√≥n a la diferencia en los valores de los par√°metros del mismo nombre en los archivos ai_lochit_dmgtable y mp_lochit_dmgtable. Si en el modo de un jugador los personajes tienen una mayor sensibilidad a los disparos a la cabeza, en el modo multijugador, las piernas tienen una mayor vulnerabilidad en comparaci√≥n con el modo de un jugador. Es dif√≠cil decir c√≥mo se explica esto, pero en cualquier caso, puedes probar cada opci√≥n en acci√≥n en ambos modos de juego. En particular, recomiendo ""probar"" un tipo de vulnerabilidad de una sola bobina de partes del cuerpo para un juego multijugador, que personalmente veo como m√°s l√≥gico.
	
grande y poderoso

En el directorio con el juego, adem√°s de los archivos pak0.pk3, pak1.pk3, pak2.pk3, pak3.pk3, pak4.pk3 y pak5.pk3, analizados en el art√≠culo, hay dos archivos m√°s valiosos: localized_english_pak0.pk3 y localized_kenglish_pak1.pk3 El primero de ellos se subdivide en los siguientes directorios: \ texturas - texturas que contienen varias inscripciones, \ ui - im√°genes y archivos de script dise√±ados para decorar el men√∫ de un juego para un solo jugador, \ ui_mp - juegos multijugador, \ sound - archivos de sonido en wav formato con el discurso de los personajes del juego (todos los di√°logos se dividen en tres subdirectorios: \ Us - di√°logos del episodio en Inglaterra, \ Uk - del episodio en los EE. UU., \ Stalingrad - en Rusia).
La carpeta \ sound tambi√©n se encuentra en el archivo localized_english_pak1.pk3 (aqu√≠ tambi√©n encontrar√° varios discursos). Adem√°s de este directorio, el archivo contiene los siguientes directorios: \ gfx - im√°genes con subt√≠tulos para la pantalla del h√©roe, \ levelhots - cargando im√°genes de niveles, \ localizedstrings - str-files con textos del juego (los textos en estos archivos est√°n incluidos en comillas), \ skins (m√°scaras de los h√©roes del juego y varios objetos que contienen inscripciones).
Al editar y reemplazar archivos de ambos archivos, puedes rusificar completamente el juego traduciendo todas las inscripciones a tu idioma nativo, redibujando texturas con texto y resonando personajes.	
	
Entonces, analizamos los par√°metros m√°s importantes del juego, aprendimos c√≥mo editar y reemplazar archivos gr√°ficos y de sonido. Esto es suficiente para hacer un buen mod. Puede introducir peque√±as innovaciones en el juego o puede cambiarlo m√°s all√° del reconocimiento. La segunda opci√≥n, por supuesto, es preferible, pero en este caso tendr√°s mucho m√°s trabajo. Si esto no le asusta, intente desarrollar alg√∫n tipo de modificaci√≥n global, por ejemplo, una futurista. Para ello, deber√°s introducir en el juego las armas y veh√≠culos homicidas del futuro, corregir los componentes gr√°ficos (tanto texturas como de interfaz del juego) y de sonido del juego de forma ‚Äúfuturista‚Äù (ya hemos hablado de cada uno de ellos). de estas transformaciones al estudiar los archivos correspondientes, simplemente junte todo).
Si no deseas modificar completamente el juego, simplemente puedes agregarle varios tipos nuevos de armas, equipos y veh√≠culos. Por lo tanto, crear√° un complemento de juego peque√±o. Tambi√©n puedes hacer que el juego sea m√°s realista haciendo que los personajes del juego sean m√°s vulnerables, el sistema de da√±os m√°s cre√≠ble y el ""comportamiento"" de todas las armas m√°s similar a sus contrapartes reales (ya se ha informado c√≥mo hacer todo esto). Espero que tu mod sea jugable e interesante.	"
r1b5SjUh,delegates,Genral,MySQL,Tuesday 18th of June 2024 12:23:32 AM CDT,"CREATE TABLE delegates (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    location VARCHAR(100),
    position VARCHAR(100),
    target DECIMAL(10, 2),
    achTarget DECIMAL(10, 2),
    totalTarget DECIMAL(10, 2)
);
"
f1SRSgmu,Untitled,NewGenGenius,JavaScript,Tuesday 18th of June 2024 12:00:40 AM CDT,"{
  ""name"": ""Join"",
  ""permissions"": ""NONE"",
  ""permissions2"": ""NONE"",
  ""restriction"": ""1"",
  ""_id"": ""kDSKh"",
  ""actions"": [
    {
      ""channel"": ""0"",
      ""varName"": """",
      ""message"": ""Super Secrete Verification Button"",
      ""buttons"": [
        {
          ""name"": ""Press Me"",
          ""type"": ""SUCCESS"",
          ""id"": ""msg-button-d515635"",
          ""row"": """",
          ""url"": """",
          ""emoji"": """",
          ""mode"": ""PUBLIC"",
          ""time"": """",
          ""actions"": [
            {
              ""channel"": ""0"",
              ""varName"": """",
              ""message"": """",
              ""buttons"": [],
              ""selectMenus"": [],
              ""attachments"": [],
              ""embeds"": [
                {
                  ""title"": ""Success!"",
                  ""url"": """",
                  ""color"": ""#116d56"",
                  ""timestamp"": ""true"",
                  ""imageUrl"": """",
                  ""thumbUrl"": """",
                  ""description"": ""Thank you! ${member} ü•≥"",
                  ""fields"": [],
                  ""author"": """",
                  ""authorUrl"": """",
                  ""authorIcon"": """",
                  ""footerText"": """",
                  ""footerIconUrl"": ""This is for basic secutiry""
                }
              ],
              ""reply"": true,
              ""ephemeral"": false,
              ""tts"": false,
              ""overwrite"": false,
              ""dontSend"": false,
              ""editMessage"": ""0"",
              ""editMessageVarName"": """",
              ""storage"": ""0"",
              ""varName2"": """",
              ""name"": ""Send Message""
            },
            {
              ""member"": ""1"",
              ""varName2"": """",
              ""role"": ""101"",
              ""varName"": ""803812328242937877"",
              ""reason"": """",
              ""name"": ""Add Member Role""
            }
          ]
        }
      ],
      ""selectMenus"": [],
      ""attachments"": [],
      ""embeds"": [],
      ""reply"": true,
      ""ephemeral"": false,
      ""tts"": false,
      ""overwrite"": false,
      ""dontSend"": false,
      ""editMessage"": ""0"",
      ""editMessageVarName"": """",
      ""storage"": ""0"",
      ""varName2"": """",
      ""name"": ""Send Message""
    }
  ],
  ""comType"": ""4""
}"
wRAfBUNy,turberator snowybot,coinwalk,JavaScript,Monday 17th of June 2024 11:53:22 PM CDT,"var elderly = ((parseFloat(document.getElementById('pct_balance').value))/10000);
var prefit = elderly;
var winnerdinner = parseFloat(document.getElementById('pct_balance').value);
var bolance = parseFloat(document.getElementById('pct_balance').value);
var smartz = parseFloat(document.getElementById('pct_balance').value);
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var small = (prefit*30);
var belance = small;
var freak = small;
var fruck = small;
var joey = ((Math.floor(belance/tens))*tens);
var upper = 6.9;
var downer = 2.9;
var snowy = ((Math.floor(belance/tens))*tens);
var beast = prefit;
var elven = 0;
var dork = Number(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
var greedy =  Number(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);



function go(){
if (greedy!=elven){
var chunk = Number(document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText);
elven = Number(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
bolance = document.getElementById('pct_balance').value;
if ((elven>dork)&&(chunk<49.5000)){
    belance = belance+beast;
    dork = parseFloat(elven);
}
if ((elven>dork)&&(chunk>=49.5000)){
    belance = belance-beast;
    dork = parseFloat(elven);
}
if (belance<beast) { 
fruck   = small-belance;
belance = fruck;
joey    = ((Math.floor(belance/tens))*tens);
upper   = 6.9;
downer  = 2.9;
beast = prefit;
}
if (belance>(joey+(beast*upper))) {
    beast = beast*2;
    upper   = 4.9;
    downer  = 4.9;
    joey    = parseFloat(belance);
}
if (belance<(joey-(beast*downer))) {
    beast = beast*2;
    upper   = 4.9;
    downer  = 4.9;
    joey    = parseFloat(belance);
}
if (((beast*2)>=(belance))&&(belance>(((Math.floor(belance/tens))*tens)+eights))) {
    beast = prefit;
    upper   = 6.9;
    downer  = 2.9;
    snowy   = ((Math.floor(belance/tens))*tens);
    joey    = ((Math.floor(belance/tens))*tens);
}
if (((beast*2)>=(belance))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))) {
    beast = prefit;
    upper   = 6.9;
    downer  = 2.9;
    snowy   = ((Math.floor(belance/tens))*tens);
    joey    = ((Math.floor(belance/tens))*tens);
    }
if (((beast*2)>=(belance))&&(belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))) {
    beast = prefit*2;
    upper   = 4.9;
    downer  = 4.9;
    snowy   = ((Math.floor(belance/tens))*tens);
    joey    = parseFloat(belance);
    }
if ((belance>=(snowy+(tens*3)))&&(belance>(((Math.floor(belance/tens))*tens)+eights))) {
    beast = prefit;
    upper   = 6.9;
    downer  = 2.9;
    belance = ((belance-(snowy+(tens*3)))+snowy);
    snowy   = ((Math.floor(belance/tens))*tens);
    joey    = ((Math.floor(belance/tens))*tens);
}
if ((belance>=(snowy+(tens*3)))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))) {
    beast = prefit;
    upper = 6.9;
    downer = 2.9;
    belance = ((belance-(snowy+(tens*3)))+snowy);
    snowy   = ((Math.floor(belance/tens))*tens);
    joey = ((Math.floor(belance/tens))*tens);
    }
if ((belance>=(snowy+(tens*3)))&&(belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))) {
    beast = prefit*2;
    upper = 4.9;
    downer = 4.9;
    belance = ((belance-(snowy+(tens*3)))+snowy);
    snowy   = ((Math.floor(belance/tens))*tens);
    joey = parseFloat(belance);
    }
if (bolance>=(winnerdinner*24)) {
    return;
}
var cat = ((bolance-smartz).toFixed(8));
console.log(""profit"");
console.log(cat);
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
}
greedy =  Number(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
setTimeout(() => go(), 1);
}

go();"
txHHv3im,# kirk_lawrence_algorithm.py,here2share,Python,Monday 17th of June 2024 10:57:21 PM CDT,"# kirk_lawrence_algorithm.py ??? not sure if i invented this

def str2ints(n):
	return [int(digit) for digit in n]

def ints2str(n):
	return [str(digit) for digit in n]

def next_permutation(n):
	if '9'*len(n) == n:
		return None
		
	n = str2ints(n)
		
	if len(set(n)) == 1:
		max_digit = n[0] + 1
		return '0' * (len(n) - 1) + str(max_digit)
	
	i = len(n) - 2
	while i >= 0 and n[i] >= n[i + 1]:
		i -= 1

	if i < 0:
		n[-1] += 1
		return ''.join(map(str, n[::-1]))

	j = len(n) - 1
	while n[j] <= n[i]:
		j -= 1

	n[i], n[j] = n[j], n[i]

	n[i + 1:] = n[i + 1:][::-1]

	return ''.join(map(str, n))

# Test the function
perm = '000'
while perm is not None:
	print(perm, end=' ')
	perm = next_permutation(perm)
	
'''

'''"
gCKYDLNh,Dropdown Option Value para formul√°rio HTML/PHP via array 2,MizunoBrasil,PHP,Monday 17th of June 2024 10:38:42 PM CDT,"<?php
    $categoria = [""Aplicativos"", ""Cinema"", ""Comportamento"", ""Copa do Mundo"", ""M√∫sica"", ""Podcast"", ""Programa√ß√£o"", ""Streaming""];
?>
<div class=""form-group"">
    <label>Selecione a categoria</label>
    <select class=""form-control"" name=""categoria"">
        <?php foreach ($categoria as $c) { ?>
            <option value=""<?= $c; ?>""> <?= $c; ?> </option>
        <?php } ?>
    </select>
</div>"
Zgu28FNZ,category_DB,Genral,MySQL,Monday 17th of June 2024 09:13:36 PM CDT,"CREATE TABLE `category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  PRIMARY KEY (`id`,`name`) USING BTREE,
  UNIQUE KEY `name_UNIQUE` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;"
7zRkK744,Untitled,Haeda,C++,Monday 17th of June 2024 09:11:15 PM CDT,"#include <iostream>
#include <string>
using namespace std; 
 
    int main()
    {
        /* Variables */
        double n; // Cantidad de Varillas 
        double diametro; 
        double promedioDiametro; 
        double suma; 
        double porcentaje; 
        int contRan = 0; 
        double inf, supre; // Rango de las varillas 
        string val = ""Por favor ingrese datos v√°lidos.""; 
 
        /* Entrada y proceso*/
 
            /* N√∫mero de varillas */
            cout << ""El n√∫mero de varillas es: ""; 
            if(!(cin >> n) || n <= 0 || !(static_cast<int>(n) == n)) 
            {
                cout << val;
                return 1; 
            }
 
            /* Rango */
 
                /* Infimo*/
                cout << ""Lo m√≠nimo que puede medir el diametro de la varillas es: "";
                if ( !(cin >> inf) || inf < 0 ) 
                {
                    cout << val;
                    return 1;                  
                }
 
                /* Supremo */
                cout << ""Lo m√°ximo que puede medir el diametro de la varillas es: "";
                if ( !(cin >> supre) || inf < 0 ) 
                {
                    cout << val;
                    return 1;                  
                }
 
                if ( inf >= supre ) 
                {
                    cout << val << ""."" << "" (Valor m√≠nimo < Valor m√°ximo)"";
                    return 1;
                }
 
            /* Porcentaje de aprobaci√≥n */
 
                cout << ""El porcentaje minimo para que el lote pueda ser aprobado es: ""; 
                if (!(cin >> porcentaje)) 
                {
                    cout << val;                     
                }
 
            /* Diametros */
 
            for (int i = 1; i <= n; i++) 
            {
                cout << ""El diametro de la varilla "" << i << "" es: "";
                
                if(!( cin >> diametro) || diametro <= 0)
                {
                    cout<<val;
                    return 1; 
                } 
 
                /* Hallando la suma total de los diamatros */
 
                suma += diametro; // suma += diametro || suma = suma + diametro
 
                /* Hallando la cantidad de varillas que tienen un diametro fuera del rango */
                if ( diametro > supre || diametro < inf ) 
                {
                    contRan++; 
                } else 
                    {
                        continue;
                    }
 
            }
 
            /* Promedios de los diametros */
 
            promedioDiametro = suma / n; 
 
        /* Salidas */
 
        cout << endl;
        cout << ""====================================================="" << endl; 
        cout << endl; 
        cout << ""                - DATOS GENERALES -                  "";
        cout << endl;
        cout << ""- El promedio de los diametros de las varillas es: "" << promedioDiametro << endl;
        cout << ""- La cantidad de varillas que est√°n fuera del rango son: "" << contRan << endl;
        if ( contRan > ( n * (porcentaje / 100) ) ) 
        {
            cout << ""- El lote ha sido rechazado."" << endl; 
        }  else 
            {
                cout << ""- El lote ha sido aceptado."" << endl;
            }
        
        cout << endl;
        cout << ""====================================================="" << endl; 
        
        return 0; 
    }"
VWi018Ud,product_DB,Genral,MySQL,Monday 17th of June 2024 08:42:41 PM CDT,"CREATE TABLE `product` (
  `pId` int(11) NOT NULL AUTO_INCREMENT,
  `pName` varchar(50) NOT NULL,
  `pCatID` int(11) NOT NULL,
  `pBarcode` varchar(50) NOT NULL,
  `pCost` float NOT NULL,
  `pPrice` float NOT NULL,
  `image` longblob NOT NULL,
  PRIMARY KEY (`pId`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
"
gwwfiTRB,elevatorDisplayScript,Downfire,Lua,Monday 17th of June 2024 08:11:22 PM CDT,"-- maybe need to be seperated into 2 scripts for 2 computer 

local elevatorNumber = 0
local rsSendSide = ""right""
rednet.open(""bottom"") -- set side where endermodem is connected to computer

local isElevatorOnFloor = false


local basalt = require(""basalt"")
local monitor = peripheral.find(""monitor"")
monitor.setTextScale(0.5)

local protocol = (""Elevator %d""):format(elevatorNumber)

local mainFrame = basalt.createFrame() -- Computer mainFrame
local mainMonitorFrame = basalt.addMonitor() --Monitor mainFrame
mainMonitorFrame:setMonitor(monitor)

local elevatorPosiLabel = mainMonitorFrame:addLabel():setTextAlign(""center""):setSize(""parent.w"",""parent.h"")
local callButton = mainMonitorFrame:addButton():setSize(20,6):setPosition(""parent.w / 2 - 10"", ""parent.h / 2 - 3""):setText(""Call Elevator"")

callButton:onClick(function(self,event,button,x,y)
    if(event==""mouse_click"")and(button==1)then
        redstone.setOutput(rsSendSide, true)
        os.sleep(0.1)
        redstone.setOutput(rsSendSide, false)
    end
end)

local function readRednet()
    while true do
        local id, message = rednet.receive(protocol)
        basalt.debug(message)
        elevatorPosiLabel:setText(tostring(message))
    end
end

mainMonitorFrame:addThread():start(readRednet)
basalt.autoUpdate()"
VFsnJSRd,2024-06-17_stats.json,rdp_snitch,JSON,Monday 17th of June 2024 07:18:11 PM CDT,"{
  ""ip"": {
    ""180.93.172.29"": 3,
    ""104.248.154.46"": 54,
    ""223.166.31.100"": 6,
    ""149.34.246.34"": 3,
    ""159.203.164.232"": 3,
    ""81.19.135.157"": 3,
    ""198.235.24.82"": 9,
    ""64.124.50.139"": 6,
    ""103.121.74.4"": 6,
    ""60.255.174.158"": 3,
    ""138.197.162.167"": 9,
    ""187.157.89.218"": 3,
    ""185.170.144.3"": 6,
    ""167.94.138.36"": 3,
    ""194.165.16.11"": 6,
    ""45.227.254.49"": 6,
    ""117.24.12.217"": 3,
    ""66.115.149.56"": 3,
    ""66.115.149.94"": 3,
    ""195.154.56.68"": 3,
    ""205.210.31.44"": 9,
    ""91.238.181.71"": 6,
    ""39.109.113.135"": 2343,
    ""213.109.202.238"": 18,
    ""152.32.249.95"": 3,
    ""81.19.135.2"": 9,
    ""147.185.132.243"": 9,
    ""45.140.17.52"": 3,
    ""87.251.75.64"": 3,
    ""158.51.14.114"": 6,
    ""152.32.149.246"": 3,
    ""167.172.81.188"": 3,
    ""103.145.58.228"": 3,
    ""194.165.16.37"": 6,
    ""194.165.16.73"": 6,
    ""147.185.132.106"": 9,
    ""152.89.198.99"": 6
  },
  ""asn"": {
    ""AS135944"": 3,
    ""AS14061"": 69,
    ""AS17621"": 6,
    ""AS212238"": 3,
    ""AS209588"": 12,
    ""AS396982"": 36,
    ""AS6461"": 6,
    ""AS134886"": 6,
    ""AS4837"": 3,
    ""AS8151"": 3,
    ""AS197414"": 6,
    ""AS398324"": 3,
    ""AS48721"": 18,
    ""AS267784"": 6,
    ""AS133776"": 3,
    ""AS46562"": 6,
    ""AS12876"": 3,
    ""AS49434"": 6,
    ""AS142403"": 2343,
    ""AS208312"": 18,
    ""AS135377"": 6,
    ""AS198953"": 3,
    ""AS208091"": 3,
    ""AS398465"": 6,
    ""AS997"": 3,
    ""AS57523"": 6
  },
  ""isp"": {
    ""SPT"": 3,
    ""DigitalOcean, LLC"": 69,
    ""China Unicom Shanghai Province Network"": 6,
    ""Datacamp Limited"": 3,
    ""Flyservers S.A."": 36,
    ""Google LLC"": 36,
    ""Zayo Bandwidth"": 6,
    ""Super Sonic Broadband Pvt. Ltd"": 6,
    ""China Unicom China169 Network"": 3,
    ""Uninet S.A. de C.V."": 3,
    ""Xhost Internet Solutions LP"": 9,
    ""Censys, Inc."": 3,
    ""Quanzhou"": 3,
    ""Performive LLC"": 6,
    ""Online SAS"": 3,
    ""Datacenter location PAR1 France"": 6,
    ""Yisu Cloud LTD"": 2343,
    ""Red Byte LLC"": 18,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""Proton66 OOO"": 3,
    ""Rackdog, LLC"": 6,
    ""23 Tai Seng Drive Singapore"": 3,
    ""Chang Way Technologies Co. Limited"": 6
  },
  ""org"": {
    ""Saigon Postel Corporation"": 3,
    ""DigitalOcean, LLC"": 66,
    ""Unknown"": 12,
    ""Datacamp Limited"": 3,
    ""Digital Ocean"": 3,
    ""Alviva Holding Limited"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""Microsoft Corporation"": 6,
    ""Super Sonic Broadband Pvt Ltd"": 6,
    ""SiChuan Cable TV Network CO., LTD"": 3,
    ""Uninet S.A. de C.V."": 3,
    ""Xhostis"": 6,
    ""Censys, Inc"": 3,
    ""Flyservers S.A"": 18,
    ""UAB Host Baltic"": 6,
    ""Chinanet FJ"": 3,
    ""Total server solutions LLC"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""Yisu Cloud LTD"": 2343,
    ""Chang Way Technologies Co. Limited"": 18,
    ""Ucloud Information Technology (hk) Limited"": 6,
    ""Proton66 LLC"": 3,
    ""Xhost Internet Solutions"": 3,
    ""AB E-Commerce, LLC"": 6,
    ""Starcrecium Limited"": 6
  },
  ""regionName"": {
    ""Ho Chi Minh"": 6,
    ""Central Singapore"": 54,
    ""Shanghai"": 6,
    ""Hesse"": 15,
    ""New Jersey"": 3,
    ""California"": 36,
    ""Washington"": 12,
    ""Maharashtra"": 6,
    ""Sichuan"": 3,
    ""Ontario"": 9,
    ""Mexico City"": 3,
    ""North Holland"": 9,
    ""Michigan"": 3,
    ""Kaunas"": 18,
    ""Vilnius"": 6,
    ""Fujian"": 3,
    ""Grand Est"": 3,
    ""\u00cele-de-France"": 6,
    ""Tsuen Wan District"": 2343,
    ""Moscow"": 27,
    ""Illinois"": 6,
    ""Virginia"": 3,
    ""South West"": 3,
    ""North West"": 3
  },
  ""country"": {
    ""Vietnam"": 6,
    ""Singapore"": 60,
    ""China"": 12,
    ""Germany"": 15,
    ""United States"": 63,
    ""India"": 6,
    ""Canada"": 9,
    ""Mexico"": 3,
    ""The Netherlands"": 9,
    ""Lithuania"": 24,
    ""France"": 9,
    ""Hong Kong"": 2343,
    ""Russia"": 27
  },
  ""account"": {
    ""hello"": 87,
    ""(empty)"": 15,
    ""Test"": 57,
    ""Administr"": 21,
    ""ucyEmAVAb"": 3,
    ""kHunBW"": 3,
    ""VwVWWq"": 3,
    ""bvNEPsAeh"": 3,
    ""WENDIR"": 3,
    ""aGkkdM"": 3,
    ""3586682873"": 2343,
    ""Domain"": 21,
    ""Administrator"": 6,
    ""wbyLNNrFo"": 3,
    ""QuBfLD"": 3,
    ""oVimxK"": 3,
    ""zpSbkvSZN"": 3,
    ""zgqXgd"": 3,
    ""WTGYeW"": 3
  },
  ""keyboard"": {
    ""Unknown"": 2586
  },
  ""client_build"": {
    ""Unknown"": 2586
  },
  ""client_name"": {
    ""Unknown"": 2586
  },
  ""ip_type"": {
    ""mobile"": 3,
    ""hosting"": 114,
    ""Unknown"": 2424,
    ""hosting & proxy"": 15,
    ""proxy"": 30
  }
}"
mP7iGANV,2024-06-17_stats.json,rdp_snitch,JSON,Monday 17th of June 2024 07:16:19 PM CDT,"{
  ""ip"": {
    ""180.93.172.29"": 2,
    ""104.248.154.46"": 36,
    ""223.166.31.100"": 4,
    ""149.34.246.34"": 2,
    ""159.203.164.232"": 2,
    ""81.19.135.157"": 2,
    ""198.235.24.82"": 6,
    ""64.124.50.139"": 4,
    ""103.121.74.4"": 4,
    ""60.255.174.158"": 2,
    ""138.197.162.167"": 6,
    ""187.157.89.218"": 2,
    ""185.170.144.3"": 4,
    ""167.94.138.36"": 2,
    ""194.165.16.11"": 4,
    ""45.227.254.49"": 4,
    ""117.24.12.217"": 2,
    ""66.115.149.56"": 2,
    ""66.115.149.94"": 2,
    ""195.154.56.68"": 2,
    ""205.210.31.44"": 6,
    ""91.238.181.71"": 4,
    ""39.109.113.135"": 1562,
    ""213.109.202.238"": 12,
    ""152.32.249.95"": 2,
    ""81.19.135.2"": 6,
    ""147.185.132.243"": 6,
    ""45.140.17.52"": 2,
    ""87.251.75.64"": 2,
    ""158.51.14.114"": 4,
    ""152.32.149.246"": 2,
    ""167.172.81.188"": 2,
    ""103.145.58.228"": 2,
    ""194.165.16.37"": 4,
    ""194.165.16.73"": 4,
    ""147.185.132.106"": 6,
    ""152.89.198.99"": 4
  },
  ""asn"": {
    ""AS135944"": 2,
    ""AS14061"": 46,
    ""AS17621"": 4,
    ""AS212238"": 2,
    ""AS209588"": 8,
    ""AS396982"": 24,
    ""AS6461"": 4,
    ""AS134886"": 4,
    ""AS4837"": 2,
    ""AS8151"": 2,
    ""AS197414"": 4,
    ""AS398324"": 2,
    ""AS48721"": 12,
    ""AS267784"": 4,
    ""AS133776"": 2,
    ""AS46562"": 4,
    ""AS12876"": 2,
    ""AS49434"": 4,
    ""AS142403"": 1562,
    ""AS208312"": 12,
    ""AS135377"": 4,
    ""AS198953"": 2,
    ""AS208091"": 2,
    ""AS398465"": 4,
    ""AS997"": 2,
    ""AS57523"": 4
  },
  ""isp"": {
    ""SPT"": 2,
    ""DigitalOcean, LLC"": 46,
    ""China Unicom Shanghai Province Network"": 4,
    ""Datacamp Limited"": 2,
    ""Flyservers S.A."": 24,
    ""Google LLC"": 24,
    ""Zayo Bandwidth"": 4,
    ""Super Sonic Broadband Pvt. Ltd"": 4,
    ""China Unicom China169 Network"": 2,
    ""Uninet S.A. de C.V."": 2,
    ""Xhost Internet Solutions LP"": 6,
    ""Censys, Inc."": 2,
    ""Quanzhou"": 2,
    ""Performive LLC"": 4,
    ""Online SAS"": 2,
    ""Datacenter location PAR1 France"": 4,
    ""Yisu Cloud LTD"": 1562,
    ""Red Byte LLC"": 12,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Proton66 OOO"": 2,
    ""Rackdog, LLC"": 4,
    ""23 Tai Seng Drive Singapore"": 2,
    ""Chang Way Technologies Co. Limited"": 4
  },
  ""org"": {
    ""Saigon Postel Corporation"": 2,
    ""DigitalOcean, LLC"": 44,
    ""Unknown"": 8,
    ""Datacamp Limited"": 2,
    ""Digital Ocean"": 2,
    ""Alviva Holding Limited"": 8,
    ""Palo Alto Networks, Inc"": 24,
    ""Microsoft Corporation"": 4,
    ""Super Sonic Broadband Pvt Ltd"": 4,
    ""SiChuan Cable TV Network CO., LTD"": 2,
    ""Uninet S.A. de C.V."": 2,
    ""Xhostis"": 4,
    ""Censys, Inc"": 2,
    ""Flyservers S.A"": 12,
    ""UAB Host Baltic"": 4,
    ""Chinanet FJ"": 2,
    ""Total server solutions LLC"": 4,
    ""ThinkTech Technology Industrial CO. Limited"": 4,
    ""Yisu Cloud LTD"": 1562,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Ucloud Information Technology (hk) Limited"": 4,
    ""Proton66 LLC"": 2,
    ""Xhost Internet Solutions"": 2,
    ""AB E-Commerce, LLC"": 4,
    ""Starcrecium Limited"": 4
  },
  ""regionName"": {
    ""Ho Chi Minh"": 4,
    ""Central Singapore"": 36,
    ""Shanghai"": 4,
    ""Hesse"": 10,
    ""New Jersey"": 2,
    ""California"": 24,
    ""Washington"": 8,
    ""Maharashtra"": 4,
    ""Sichuan"": 2,
    ""Ontario"": 6,
    ""Mexico City"": 2,
    ""North Holland"": 6,
    ""Michigan"": 2,
    ""Kaunas"": 12,
    ""Vilnius"": 4,
    ""Fujian"": 2,
    ""Grand Est"": 2,
    ""\u00cele-de-France"": 4,
    ""Tsuen Wan District"": 1562,
    ""Moscow"": 18,
    ""Illinois"": 4,
    ""Virginia"": 2,
    ""South West"": 2,
    ""North West"": 2
  },
  ""country"": {
    ""Vietnam"": 4,
    ""Singapore"": 40,
    ""China"": 8,
    ""Germany"": 10,
    ""United States"": 42,
    ""India"": 4,
    ""Canada"": 6,
    ""Mexico"": 2,
    ""The Netherlands"": 6,
    ""Lithuania"": 16,
    ""France"": 6,
    ""Hong Kong"": 1562,
    ""Russia"": 18
  },
  ""account"": {
    ""hello"": 58,
    ""(empty)"": 10,
    ""Test"": 38,
    ""Administr"": 14,
    ""ucyEmAVAb"": 2,
    ""kHunBW"": 2,
    ""VwVWWq"": 2,
    ""bvNEPsAeh"": 2,
    ""WENDIR"": 2,
    ""aGkkdM"": 2,
    ""3586682873"": 1562,
    ""Domain"": 14,
    ""Administrator"": 4,
    ""wbyLNNrFo"": 2,
    ""QuBfLD"": 2,
    ""oVimxK"": 2,
    ""zpSbkvSZN"": 2,
    ""zgqXgd"": 2,
    ""WTGYeW"": 2
  },
  ""keyboard"": {
    ""Unknown"": 1724
  },
  ""client_build"": {
    ""Unknown"": 1724
  },
  ""client_name"": {
    ""Unknown"": 1724
  },
  ""ip_type"": {
    ""mobile"": 2,
    ""hosting"": 76,
    ""Unknown"": 1616,
    ""hosting & proxy"": 10,
    ""proxy"": 20
  }
}"
y1yLTqa3,2024-06-17_stats.json,rdp_snitch,JSON,Monday 17th of June 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""180.93.172.29"": 1,
    ""104.248.154.46"": 18,
    ""223.166.31.100"": 2,
    ""149.34.246.34"": 1,
    ""159.203.164.232"": 1,
    ""81.19.135.157"": 1,
    ""198.235.24.82"": 3,
    ""64.124.50.139"": 2,
    ""103.121.74.4"": 2,
    ""60.255.174.158"": 1,
    ""138.197.162.167"": 3,
    ""187.157.89.218"": 1,
    ""185.170.144.3"": 2,
    ""167.94.138.36"": 1,
    ""194.165.16.11"": 2,
    ""45.227.254.49"": 2,
    ""117.24.12.217"": 1,
    ""66.115.149.56"": 1,
    ""66.115.149.94"": 1,
    ""195.154.56.68"": 1,
    ""205.210.31.44"": 3,
    ""91.238.181.71"": 2,
    ""39.109.113.135"": 781,
    ""213.109.202.238"": 6,
    ""152.32.249.95"": 1,
    ""81.19.135.2"": 3,
    ""147.185.132.243"": 3,
    ""45.140.17.52"": 1,
    ""87.251.75.64"": 1,
    ""158.51.14.114"": 2,
    ""152.32.149.246"": 1,
    ""167.172.81.188"": 1,
    ""103.145.58.228"": 1,
    ""194.165.16.37"": 2,
    ""194.165.16.73"": 2,
    ""147.185.132.106"": 3,
    ""152.89.198.99"": 2
  },
  ""asn"": {
    ""AS135944"": 1,
    ""AS14061"": 23,
    ""AS17621"": 2,
    ""AS212238"": 1,
    ""AS209588"": 4,
    ""AS396982"": 12,
    ""AS6461"": 2,
    ""AS134886"": 2,
    ""AS4837"": 1,
    ""AS8151"": 1,
    ""AS197414"": 2,
    ""AS398324"": 1,
    ""AS48721"": 6,
    ""AS267784"": 2,
    ""AS133776"": 1,
    ""AS46562"": 2,
    ""AS12876"": 1,
    ""AS49434"": 2,
    ""AS142403"": 781,
    ""AS208312"": 6,
    ""AS135377"": 2,
    ""AS198953"": 1,
    ""AS208091"": 1,
    ""AS398465"": 2,
    ""AS997"": 1,
    ""AS57523"": 2
  },
  ""isp"": {
    ""SPT"": 1,
    ""DigitalOcean, LLC"": 23,
    ""China Unicom Shanghai Province Network"": 2,
    ""Datacamp Limited"": 1,
    ""Flyservers S.A."": 12,
    ""Google LLC"": 12,
    ""Zayo Bandwidth"": 2,
    ""Super Sonic Broadband Pvt. Ltd"": 2,
    ""China Unicom China169 Network"": 1,
    ""Uninet S.A. de C.V."": 1,
    ""Xhost Internet Solutions LP"": 3,
    ""Censys, Inc."": 1,
    ""Quanzhou"": 1,
    ""Performive LLC"": 2,
    ""Online SAS"": 1,
    ""Datacenter location PAR1 France"": 2,
    ""Yisu Cloud LTD"": 781,
    ""Red Byte LLC"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Proton66 OOO"": 1,
    ""Rackdog, LLC"": 2,
    ""23 Tai Seng Drive Singapore"": 1,
    ""Chang Way Technologies Co. Limited"": 2
  },
  ""org"": {
    ""Saigon Postel Corporation"": 1,
    ""DigitalOcean, LLC"": 22,
    ""Unknown"": 4,
    ""Datacamp Limited"": 1,
    ""Digital Ocean"": 1,
    ""Alviva Holding Limited"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""Microsoft Corporation"": 2,
    ""Super Sonic Broadband Pvt Ltd"": 2,
    ""SiChuan Cable TV Network CO., LTD"": 1,
    ""Uninet S.A. de C.V."": 1,
    ""Xhostis"": 2,
    ""Censys, Inc"": 1,
    ""Flyservers S.A"": 6,
    ""UAB Host Baltic"": 2,
    ""Chinanet FJ"": 1,
    ""Total server solutions LLC"": 2,
    ""ThinkTech Technology Industrial CO. Limited"": 2,
    ""Yisu Cloud LTD"": 781,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Proton66 LLC"": 1,
    ""Xhost Internet Solutions"": 1,
    ""AB E-Commerce, LLC"": 2,
    ""Starcrecium Limited"": 2
  },
  ""regionName"": {
    ""Ho Chi Minh"": 2,
    ""Central Singapore"": 18,
    ""Shanghai"": 2,
    ""Hesse"": 5,
    ""New Jersey"": 1,
    ""California"": 12,
    ""Washington"": 4,
    ""Maharashtra"": 2,
    ""Sichuan"": 1,
    ""Ontario"": 3,
    ""Mexico City"": 1,
    ""North Holland"": 3,
    ""Michigan"": 1,
    ""Kaunas"": 6,
    ""Vilnius"": 2,
    ""Fujian"": 1,
    ""Grand Est"": 1,
    ""\u00cele-de-France"": 2,
    ""Tsuen Wan District"": 781,
    ""Moscow"": 9,
    ""Illinois"": 2,
    ""Virginia"": 1,
    ""South West"": 1,
    ""North West"": 1
  },
  ""country"": {
    ""Vietnam"": 2,
    ""Singapore"": 20,
    ""China"": 4,
    ""Germany"": 5,
    ""United States"": 21,
    ""India"": 2,
    ""Canada"": 3,
    ""Mexico"": 1,
    ""The Netherlands"": 3,
    ""Lithuania"": 8,
    ""France"": 3,
    ""Hong Kong"": 781,
    ""Russia"": 9
  },
  ""account"": {
    ""hello"": 29,
    ""(empty)"": 5,
    ""Test"": 19,
    ""Administr"": 7,
    ""ucyEmAVAb"": 1,
    ""kHunBW"": 1,
    ""VwVWWq"": 1,
    ""bvNEPsAeh"": 1,
    ""WENDIR"": 1,
    ""aGkkdM"": 1,
    ""3586682873"": 781,
    ""Domain"": 7,
    ""Administrator"": 2,
    ""wbyLNNrFo"": 1,
    ""QuBfLD"": 1,
    ""oVimxK"": 1,
    ""zpSbkvSZN"": 1,
    ""zgqXgd"": 1,
    ""WTGYeW"": 1
  },
  ""keyboard"": {
    ""Unknown"": 862
  },
  ""client_build"": {
    ""Unknown"": 862
  },
  ""client_name"": {
    ""Unknown"": 862
  },
  ""ip_type"": {
    ""mobile"": 1,
    ""hosting"": 38,
    ""Unknown"": 808,
    ""hosting & proxy"": 5,
    ""proxy"": 10
  }
}"
9MPi9nxu,elevatorSendScript,Downfire,Lua,Monday 17th of June 2024 06:51:25 PM CDT,"-- maybe need to be seperated into 2 scripts for 2 computer 

local elevatorNumber = 0
local floorNumber = 0 -- set Floor Number, start with top""0""
local rsReceiveSide = ""bottom""
rednet.open(""top"") -- set side where endermodem is connected to computer

local isElevatorOnFloor = false

local basalt = require(""basalt"")

local protocol = (""Elevator %d""):format(elevatorNumber)

local mainFrame = basalt.createFrame() -- Computer mainFrame

local function broadcastRedstoneSignal()
    while true do
        isElevatorOnFloor = redstone.getInput(rsReceiveSide)
        basalt.debug(isElevatorOnFloor)
        if isElevatorOnFloor == true then
            rednet.broadcast(floorNumber, protocol)
        end
        os.sleep(0.2)
    end
end

mainFrame:addThread():start(broadcastRedstoneSignal)
basalt.autoUpdate()"
aNbya5Cp,Telegram Stripe Payment,vacendak,Python,Monday 17th of June 2024 06:09:52 PM CDT,"from telebot import types
import settings


def register_payments_command(bot):
    @bot.message_handler(commands=[""comprar""])
    def show_buy_button(message):
        keyboard = types.InlineKeyboardMarkup()
        buy_button = types.InlineKeyboardButton(""COMPRAR PARTICIPACI√ìN"", callback_data=""comprar"")
        keyboard.add(buy_button)
        bot.send_message(message.chat.id, ""¬øQuieres una participaci√≥n?"", reply_markup=keyboard)

    @bot.callback_query_handler(func=lambda call: call.data == ""comprar"")
    def callback_buy(call):
        product_price = types.LabeledPrice(label=""Participaci√≥n"", amount=500)
        bot.send_invoice(
            chat_id=call.message.chat.id,
            title=""Participaci√≥n"",
            description=""Participaci√≥n en el sorteo"",
            invoice_payload=""custom-paylooad-buy-product"",
            provider_token=settings.STRIPE_TEST_TOKEN,
            currency=""eur"",
            prices=[product_price],
            start_parameter=""product-purchase"",
        )

    @bot.pre_checkout_query_handler(func=lambda query: True)
    def checkout_process(pre_checkout_query):
        bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)

    @bot.message_handler(content_types=[""successful_payment""])
    def got_payment(message):
        bot.send_message(message.chat.id, ""Gracias por participar y suerte en el sorteo!"")
"
mDdBFuzG,üéÅG2A.com Free Gift Card Guide June 2024 NEWüéÅ,ssss50w,GetText,Monday 17th of June 2024 05:54:07 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here;
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
18 June 2024"
ivFh16n2,UI,Zekirooo,Lua,Monday 17th of June 2024 05:35:31 PM CDT,"local Library = {}

-- services
local players        = game:GetService(""Players"")
local tweenService   = game:GetService(""TweenService"")
local runService     = game:GetService(""RunService"")
local coreGui        = game:GetService(""CoreGui"")
local UIS            = game:GetService(""UserInputService"")

-- vars
local localplayer    = players.LocalPlayer
local mouse          = localplayer:GetMouse()
local tweenInfo      = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)

function Library:validate(defaults, options)
    for i, v in pairs(defaults) do
        if options[i] == nil then
            options[i] = v
        end
    end
    return options
end

function Library:tween(object, goal, callback)
    local tween = tweenService:Create(object, tweenInfo, goal)
    tween.Completed:Connect(callback or function() end)
    tween:Play()
end

-- Main Library Start
function Library:Init(options)
    local options = options or {}
    options = self:validate({
        name = ""reality.new""
    }, options)

    local GUI = {
        CurrentTab = nil
    }

    -- Main
    local ScreenGui = Instance.new(""ScreenGui"")
    ScreenGui.Parent = coreGui
    ScreenGui.Name = options.name

    local Container1 = Instance.new(""Frame"")
    Container1.Parent = ScreenGui
    Container1.Size = UDim2.new(0, 750, 0, 480)
    Container1.AnchorPoint = Vector2.new(0.5, 0.5)
    Container1.Position = UDim2.new(0.5, -100, 0.5, -50)
    Container1.BackgroundColor3 = Color3.fromRGB(39, 39, 47)
    Container1.BorderSizePixel = 0
    Container1.Name = ""Container1""

    local stroke1 = Instance.new(""UIStroke"")
    stroke1.Thickness = 2
    stroke1.Color = Color3.fromRGB(60, 60, 70)
    stroke1.LineJoinMode = Enum.LineJoinMode.Miter
    stroke1.Parent = Container1
    stroke1.Name = ""stroke1""

    local Container2 = Instance.new(""Frame"")
    Container2.Parent = Container1
    Container2.Size = UDim2.new(0, 740, 0, 470)
    Container2.AnchorPoint = Vector2.new(0.5, 0.5)
    Container2.Position = UDim2.new(0.5, 0, 0.5, 0)
    Container2.BackgroundColor3 = Color3.fromRGB(23, 23, 30)
    Container2.BorderSizePixel = 0
    Container2.Name = ""Container2""

    local Container2Line = Instance.new(""Frame"")
    Container2Line.Parent = Container2
    Container2Line.Size = UDim2.new(1, -4, 0, 2)
    Container2Line.Position = UDim2.new(1, -2, 0, 4)
    Container2Line.AnchorPoint = Vector2.new(1, 1)
    Container2Line.BackgroundColor3 = Color3.fromRGB(206, 115, 136)
    Container2Line.BorderSizePixel = 0
    Container2Line.Name = ""Container2Line""

    local TabContainer = Instance.new(""Frame"")
    TabContainer.Parent = Container2
    TabContainer.Size = UDim2.new(0, 710, 0, 29)
    TabContainer.AnchorPoint = Vector2.new(0.5, 0.5)
    TabContainer.Position = UDim2.new(0.5, 0, 0.5, -203)
    TabContainer.BackgroundTransparency = 1
    TabContainer.BorderSizePixel = 0
    TabContainer.Name = ""TabContainer""
    
	local ContainerStroke = Instance.new(""UIStroke"")
	ContainerStroke.Thickness = 1.25
	ContainerStroke.Color = Color3.fromRGB(59, 59, 69)
	ContainerStroke.LineJoinMode = Enum.LineJoinMode.Miter
	ContainerStroke.Parent = TabContainer
	ContainerStroke.Name = ""TabStroke""

	local TabLayout = Instance.new(""UIListLayout"")
	TabLayout.Parent = TabContainer
	TabLayout.FillDirection = Enum.FillDirection.Horizontal
	TabLayout.VerticalAlignment = Enum.VerticalAlignment.Center
	TabLayout.Padding = UDim.new(0.0, 0)
	TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
	TabLayout.Name = ""TabLayout""

	local stroke2 = Instance.new(""UIStroke"")
	stroke2.Thickness = 1.25	
	stroke2.Color = Color3.fromRGB(59, 59, 69)
	stroke2.LineJoinMode = Enum.LineJoinMode.Miter
	stroke2.Parent = Container2
	stroke2.Name = ""stroke2""

	local Container3 = Instance.new(""Frame"")
	Container3.Parent = Container2
	Container3.Size = UDim2.new(0, 710, 0, 410)
    Container3.AnchorPoint = Vector2.new(.5,.5)
	Container3.Position = UDim2.new(.5, 0, .5, 19)
    Container3.BackgroundColor3 = Color3.fromRGB(32, 32, 38) 
    Container3.BorderSizePixel = 0
	Container3.Name = ""Container3""

	local stroke3 = Instance.new(""UIStroke"")
	stroke3.Thickness = 1.25
	stroke3.Color = Color3.fromRGB(61, 61, 76)
	stroke3.LineJoinMode = Enum.LineJoinMode.Miter
	stroke3.Parent = Container3
	stroke3.Name = ""stroke3""

	function GUI:AddTab(options)
		options = Library:validate({
			name = ""Preview"",
		}, options or {})

		local tab = {
			Hover = false,
			Active = false
		}

		local Tab = Instance.new(""Frame"")
		Tab.Parent = TabContainer
		Tab.Size = UDim2.new(1, 0, 1, 0)
		Tab.BackgroundColor3 = Color3.fromRGB(61, 61, 65) 
		Tab.BorderSizePixel = 0
		Tab.Name = options.name

		local UIGradient = Instance.new(""UIGradient"")
		UIGradient.Transparency = NumberSequence.new{
			NumberSequenceKeypoint.new(0.00, 0.00),
			NumberSequenceKeypoint.new(0.1, 0.50),
			NumberSequenceKeypoint.new(1.00, 1)
		}
		UIGradient.Rotation = 90 -- Verticle Gradient
		UIGradient.Parent = Tab
		
		local TabText = Instance.new(""TextLabel"")
		TabText.Parent = Tab
		TabText.Size = UDim2.new(1, 0, 1, 0)
		TabText.BackgroundTransparency = 1
		TabText.FontFace = Font.fromId(12187362578, Enum.FontWeight.Thin)
		TabText.Text = options.name
		TabText.TextColor3 = Color3.fromRGB(200, 200, 200)
		TabText.TextSize = 14
		TabText.TextXAlignment = Enum.TextXAlignment.Center
		TabText.Name = ""TabText""

		local TabStroke = Instance.new(""UIStroke"")
		TabStroke.Thickness = 1
		TabStroke.Color = Color3.fromRGB(61, 61, 76)
		TabStroke.LineJoinMode = Enum.LineJoinMode.Miter
		TabStroke.Parent = Tab
		TabStroke.Name = ""TabStroke""

		local TabLine = Instance.new(""Frame"")
		TabLine.Parent = Tab
		TabLine.Size = UDim2.new(1, -4, 0, 2)
		TabLine.Position = UDim2.new(1, -2, 1, 0)
		TabLine.AnchorPoint = Vector2.new(1, 1)
		TabLine.BackgroundColor3 = Color3.fromRGB(206, 115, 136)
		TabLine.BackgroundTransparency = 1
		TabLine.BorderSizePixel = 0
		TabLine.Name = ""TabLine""

		local ContentContainer = Instance.new(""Frame"")
		ContentContainer.Parent = Container3
		ContentContainer.Size = UDim2.new(1,0,1,0)
		ContentContainer.AnchorPoint = Vector2.new(0,0)
		ContentContainer.Position = UDim2.new(0, 0, 0,0)
		ContentContainer.BackgroundColor3 = Color3.fromRGB(32, 32, 38) 
		ContentContainer.BorderSizePixel = 0
		ContentContainer.Active = false
		ContentContainer.Visible = false
		ContentContainer.Name = options.name
		ContentContainer.ZIndex = 2

		local LeftContainer = Instance.new(""Frame"")
		LeftContainer.Parent = ContentContainer
		LeftContainer.Visible = false
		LeftContainer.Size = UDim2.new(0,334,1,-5)
		LeftContainer.AnchorPoint = Vector2.new(0,0)
		LeftContainer.Position = UDim2.new(0, 10, 0,0)
		LeftContainer.BackgroundTransparency = 1
		LeftContainer.BorderSizePixel = 0
		LeftContainer.Name = ""LeftContainer""
		LeftContainer.ZIndex = 2

		local RightContainer = Instance.new(""Frame"")
		RightContainer.Parent = ContentContainer
		RightContainer.Visible = false
		RightContainer.Size = UDim2.new(0,334,1,-5)
		RightContainer.AnchorPoint = Vector2.new(1,0)
		RightContainer.Position = UDim2.new(1, -10, 0,0)
		RightContainer.BackgroundTransparency = 1
		RightContainer.BorderSizePixel = 0
		RightContainer.Name = ""RightContainer""
		RightContainer.ZIndex = 2

		-- Dynamic Tab Sizing  [ NEEDS IMPROVING ]
		do
			local tabCount = 0
			for _, tab in ipairs(TabContainer:GetChildren()) do
				if tab:IsA(""Frame"") then
					tabCount = tabCount + 1
				end
			end
			local finalValue = 710 / tabCount
			for _, tab in ipairs(TabContainer:GetChildren()) do
				if tab:IsA(""Frame"") then
					tab.Size = UDim2.new(0, finalValue, 1, 0)
				end
			end
		end

		-- Functionality
		do
			function tab:Activate()
				if not tab.Active then
					if GUI.CurrentTab ~= nil then
						tab:Deactivate()
					end

					tab.Active = true
					ContentContainer.Active = true
					ContentContainer.Visible = true
					LeftContainer.Visible = true
					RightContainer.Visible = true
					Library:tween(TabStroke, {Color = Color3.fromRGB(61, 61, 76)})
					Library:tween(TabLine, {BackgroundTransparency = 0})

					GUI.CurrentTab = Tab
				end
			end
			
			function tab:Deactivate()
				if tab.Active then

					tab.Active = false
					tab.Hover = false

					ContentContainer.Active = false
					ContentContainer.Visible = false

					LeftContainer.Visible = false
					RightContainer.Visible = false

					Library:tween(TabStroke, {Color = Color3.fromRGB(61, 61, 76)})
					Library:tween(TabLine, {BackgroundTransparency = 1})
				end
			end

			-- Logic
			Tab.MouseEnter:Connect(function()
				tab.Hover = true

				if not tab.Active then
					Library:tween(TabText, {TextColor3 = Color3.fromRGB(231, 231, 231)})
					Library:tween(TabLine, {BackgroundTransparency = 0})
				end
			end)	
		
			Tab.MouseLeave:Connect(function()
				tab.Hover = false

				if not tab.Active then
					Library:tween(TabText, {TextColor3 = Color3.fromRGB(200, 200, 200)})
					Library:tween(TabLine, {BackgroundTransparency = 1})
				end
			end)

			TabContainer.MouseEnter:Connect(function()
				tab.MouseInside = true
			end)	

			TabContainer.MouseLeave:Connect(function()
				tab.MouseInside = false
			end)	

			UIS.InputBegan:Connect(function(input,gpe)
				if gpe then return end

				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					if tab.Hover then
						tab:Activate()
					elseif tab.MouseInside then
						tab:Deactivate()
					end
				end
			end)

			if GUI.CurrentTab == nil then
				tab:Activate()
			end
		end

		local LeftHeight = {}
		local RightHeight = {}

		local NewPos = 0
		-- Sections
		function tab:AddSection(options)
			options = Library:validate({
				name = ""Preview"",
				side = ""Left"",
				height = ""300""
			}, options or {})

			local section = {}

			-- Calculate Section Position
			do
				if options.side == ""Left"" then
					if LeftHeight then
						if #LeftHeight > 0 then
							NewPos = LeftHeight[1] + 30
						else
							NewPos = 15
						end
					else
						NewPos = 15
					end
				else
					if RightHeight then
						if #RightHeight > 0 then
							NewPos = RightHeight[1] + 30
						else
							NewPos = 15
						end
					else
						NewPos = 15
					end
				end
			end

			local Section = Instance.new(""Frame"")
			Section.Size = UDim2.new(1,0,0,options.height)
			Section.AnchorPoint = Vector2.new(0,0)
			Section.BackgroundColor3 = Color3.fromRGB(27, 27, 34)
			Section.Position = UDim2.new(0, 0, 0, NewPos)
			Section.BorderSizePixel = 0
			Section.Name = options.name
			Section.ZIndex = 2

			-- handle side picking
			if options.side == ""Right"" then
				Section.Parent = RightContainer
				table.insert(RightHeight, Section.Size.Y.Offset)
			else
				Section.Parent = LeftContainer
				table.insert(LeftHeight, Section.Size.Y.Offset)
			end

			local SectionText = Instance.new(""TextLabel"")
			SectionText.Parent = Section
			SectionText.Size = UDim2.new(0, 0, 0, 1)
			SectionText.Position = UDim2.new(0, 30, 0, -2)
			SectionText.AnchorPoint = Vector2.new(1,0)
			SectionText.BackgroundTransparency = 1
			SectionText.TextXAlignment = Enum.TextXAlignment.Left
			SectionText.FontFace = Font.fromId(12187362578, Enum.FontWeight.SemiBold)
			SectionText.Text = options.name
			SectionText.TextColor3 = Color3.fromRGB(200, 200, 200)
			SectionText.TextSize = 13	
			SectionText.Name = ""SectionText""
			SectionText.ZIndex = 3

			local Size = SectionText.TextBounds.X + 20
			local LineSize = Size / -1

			local SectionLine = Instance.new(""Frame"")
			SectionLine.Parent = Section
			SectionLine.Size = UDim2.new(0, LineSize, 0, 1)
			SectionLine.Position = UDim2.new(0, 20, 0, -1)
			SectionLine.AnchorPoint = Vector2.new(1, 0)
			SectionLine.BackgroundColor3 = Color3.fromRGB(27, 27, 34)
			SectionLine.BackgroundTransparency = 0
			SectionLine.BorderSizePixel = 0
			SectionLine.Name = ""SectionLine""
			SectionLine.ZIndex = 2

			local UIStroke = Instance.new(""UIStroke"")
			UIStroke.Thickness = 1
			UIStroke.Color = Color3.fromRGB(49, 49, 56)
			UIStroke.LineJoinMode = Enum.LineJoinMode.Miter
			UIStroke.Parent = Section
			UIStroke.Name = ""UIStroke""

			local SubContainer = Instance.new(""Frame"")
			SubContainer.Parent = Section
			SubContainer.Size = UDim2.new(0, 304, 0, 30)
			SubContainer.AnchorPoint = Vector2.new(0,0)
			SubContainer.Position = UDim2.new(0, 15, 0, 10)
			SubContainer.BackgroundColor3 = Color3.fromRGB(23, 23, 30)
			SubContainer.BackgroundTransparency = 1
			SubContainer.BorderSizePixel = 0
			SubContainer.Name = ""SubContainer""
			SubContainer.ZIndex = 3
			SubContainer.Active = true

			local SectionTabLayout = Instance.new(""UIListLayout"")
			SectionTabLayout.Parent = SubContainer
			SectionTabLayout.FillDirection = Enum.FillDirection.Horizontal
			SectionTabLayout.VerticalAlignment = Enum.VerticalAlignment.Center
			SectionTabLayout.Padding = UDim.new(0.0, 0)
			SectionTabLayout.SortOrder = Enum.SortOrder.LayoutOrder
			SectionTabLayout.Name = ""SectionTabLayout""

			local SectionContentContainer = Instance.new(""Frame"")
			SectionContentContainer.Parent = Section
			SectionContentContainer.Size = UDim2.new(1,-80,1,-30)
			SectionContentContainer.AnchorPoint = Vector2.new(0,0)
			SectionContentContainer.Position = UDim2.new(0, 40, 0,15)
			SectionContentContainer.BackgroundTransparency = 1
			SectionContentContainer.BorderSizePixel = 0
			SectionContentContainer.Name = ""SectionContentContainer""
			SectionContentContainer.ZIndex = 3

			local SectionContentLayout = Instance.new(""UIListLayout"")
			SectionContentLayout.Parent = SectionContentContainer
			SectionContentLayout.FillDirection = Enum.FillDirection.Vertical
			SectionContentLayout.VerticalAlignment = Enum.VerticalAlignment.Top
			SectionContentLayout.Padding = UDim.new(0, 8)
			SectionContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
			SectionContentLayout.Name = ""ContentLayout""

			_G.TabsExist = false -- No tabs exist until section:AddTab is called

			function section:AddTab(options)
				options = Library:validate({
					name = ""Preview""
				}, options or {})

				local sectiontab = {
					Hover = false,
					Active = false
				}

				local TabGUI = {
					CurrentTab = nil
				}
				
				_G.TabsExist = true

				SubContainer.BackgroundTransparency = 0
				SectionContentContainer:Destroy()

				local SectionTab = Instance.new(""Frame"")
				SectionTab.Parent = SubContainer
				SectionTab.Size = UDim2.new(1, 0, 1, 0)
				SectionTab.BackgroundColor3 = Color3.fromRGB(61, 61, 65) 
				SectionTab.BorderSizePixel = 0
				SectionTab.Name = options.name
				SectionTab.ZIndex = 3
		
				local UIGradient = Instance.new(""UIGradient"")
				UIGradient.Transparency = NumberSequence.new{
					NumberSequenceKeypoint.new(0.00, 0.20),
					NumberSequenceKeypoint.new(0.4, 0.50),
					NumberSequenceKeypoint.new(1.00, 1)
				}
				UIGradient.Rotation = 90
				UIGradient.Parent = SectionTab
				
				local SectionTabText = Instance.new(""TextLabel"")
				SectionTabText.Parent = SectionTab
				SectionTabText.Size = UDim2.new(1, 0, 1, 0)
				SectionTabText.BackgroundTransparency = 1
				SectionTabText.Font = Enum.Font.Code
				SectionTabText.FontFace = Font.fromId(12187362578, Enum.FontWeight.Thin)
				SectionTabText.Text = options.name
				SectionTabText.TextColor3 = Color3.fromRGB(200, 200, 200)
				SectionTabText.TextSize = 14
				SectionTabText.TextXAlignment = Enum.TextXAlignment.Center
				SectionTabText.Name = ""SectionText""
				SectionTabText.ZIndex = 3
		
				local SectionTabStroke = Instance.new(""UIStroke"")
				SectionTabStroke.Thickness = 1
				SectionTabStroke.Color = Color3.fromRGB(61, 61, 76)
				SectionTabStroke.LineJoinMode = Enum.LineJoinMode.Miter
				SectionTabStroke.Parent = SectionTab
				SectionTabStroke.Name = ""SectionStroke""
		
				local SectionTabLine = Instance.new(""Frame"")
				SectionTabLine.Parent = SectionTab
				SectionTabLine.Size = UDim2.new(1, -4, 0, 2)
				SectionTabLine.Position = UDim2.new(1, -2, 1, 0)
				SectionTabLine.AnchorPoint = Vector2.new(1, 1)
				SectionTabLine.BackgroundColor3 = Color3.fromRGB(206, 115, 136)
				SectionTabLine.BackgroundTransparency = 1
				SectionTabLine.BorderSizePixel = 0
				SectionTabLine.Name = ""SectionLine""
				SectionTabLine.ZIndex = 3

				-- Calculate Tab Size To Fit
				do
					local tabCount = 0
					for _, sectiontab in ipairs(SubContainer:GetChildren()) do
						if sectiontab:IsA(""Frame"") then
							tabCount = tabCount + 1
						end
					end
					
					local finalValue = 304 / tabCount
					for _, sectiontab in ipairs(SubContainer:GetChildren()) do
						if sectiontab:IsA(""Frame"") then
							sectiontab.Size = UDim2.new(0, finalValue, 1, 0)
						end
					end
				end

				local TabContentContainer = Instance.new(""Frame"")
				TabContentContainer.Parent = Section
				TabContentContainer.Size = UDim2.new(1,-80,1,-60)
				TabContentContainer.AnchorPoint = Vector2.new(0,0)
				TabContentContainer.Position = UDim2.new(0, 40, 0,50)
				TabContentContainer.BackgroundTransparency = 1
				TabContentContainer.BorderSizePixel = 0
				TabContentContainer.Active = false
				TabContentContainer.Visible = false
				TabContentContainer.Name = ""TabContentContainer""
				TabContentContainer.ZIndex = 3

				_G.TabContentContainer = TabContentContainer

				-- Functionality
				do
					function sectiontab:Activate()
						if not sectiontab.Active then
							if TabGUI.CurrentTab ~= nil then
								sectiontab:Deactivate()
							end
					
							sectiontab.Active = true

							TabContentContainer.Active = true
							TabContentContainer.Visible = true

							Library:tween(SectionTabLine, {BackgroundTransparency = 0})
					
							TabGUI.CurrentTab = sectiontab
						end
					end

					function sectiontab:Deactivate()
						if sectiontab.Active then
					
							sectiontab.Active = false
							sectiontab.Hover = false
					
							TabContentContainer.Active = false
							TabContentContainer.Visible = false
					
							Library:tween(SectionTabLine, {BackgroundTransparency = 1})
						end
					end

					-- Logic
					SectionTab.MouseEnter:Connect(function()
						sectiontab.Hover = true

						if not sectiontab.Active then
							Library:tween(SectionTabText, {TextColor3 = Color3.fromRGB(231, 231, 231)})
							Library:tween(SectionTabLine, {BackgroundTransparency = 0})
						end
					end)
				
					SectionTab.MouseLeave:Connect(function()
						sectiontab.Hover = false

						if not sectiontab.Active then
							Library:tween(SectionTabText, {TextColor3 = Color3.fromRGB(200, 200, 200)})
							Library:tween(SectionTabLine, {BackgroundTransparency = 1})
						end
					end)

					SubContainer.MouseEnter:Connect(function()
						sectiontab.MouseInside = true
					end)
					
					SubContainer.MouseLeave:Connect(function()
						sectiontab.MouseInside = false
					end)

					UIS.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							if sectiontab.Hover then
								sectiontab:Activate()
							elseif sectiontab.MouseInside then
								sectiontab:Deactivate()
							end
						end
					end)
				end

				local ContentLayout = Instance.new(""UIListLayout"")
				ContentLayout.Parent = TabContentContainer
				ContentLayout.FillDirection = Enum.FillDirection.Vertical
				ContentLayout.VerticalAlignment = Enum.VerticalAlignment.Top
				ContentLayout.Padding = UDim.new(0, 8)
				ContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
				ContentLayout.Name = ""ContentLayout""

				return section

			end -- section:AddTab

			function section:AddLabel(options)
				options = Library:validate({
					name = ""Example Label""
				}, options or {})

				if _G.TabsExist == true then
					elementParent = _G.TabContentContainer
				else
					elementParent = SectionContentContainer
				end
				_G.elementparent = elementParent

				local LabelContainer = Instance.new(""Frame"")
				LabelContainer.Size = UDim2.new(1,0,0,15)
				LabelContainer.Parent = _G.elementparent
				LabelContainer.AnchorPoint = Vector2.new(0.5,0)
				LabelContainer.BackgroundTransparency = 1
				LabelContainer.BorderSizePixel = 0
				LabelContainer.Name = ""LabelContainer""
				LabelContainer.ZIndex = 4
				
				local LabelLine = Instance.new(""Frame"")
				LabelLine.Parent = LabelContainer
				LabelLine.Size = UDim2.new(1,0,0,1)
				LabelLine.Position = UDim2.new(0,0,1,-1)
				LabelLine.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
				LabelLine.BorderSizePixel = 0
				LabelLine.Name = ""LabelLine""
				LabelLine.ZIndex = 3

				local LabelText = Instance.new(""TextLabel"")
				LabelText.Position = UDim2.new(0,0,0,-4)
				LabelText.Size = UDim2.new(1,0,1,0)
				LabelText.Parent = LabelContainer
				LabelText.AnchorPoint = Vector2.new(0,0)
				LabelText.BackgroundTransparency = 1
				LabelText.BorderSizePixel = 0
				LabelText.TextXAlignment = Enum.TextXAlignment.Center
				LabelText.FontFace = Font.fromId(12187362578, Enum.FontWeight.Thin)
				LabelText.Text = options.name
				LabelText.TextColor3 = Color3.fromRGB(200, 200, 200)
				LabelText.TextSize = 13
				LabelText.Name = options.name
				LabelText.ZIndex = 4
			end -- section:AddLabel

			function section:AddButton(options)
				options = Library:validate({
					name = ""Example Button"",
					callback = function() end
				}, options or {})

				local button = {}
				
				if _G.TabsExist == true then
					elementParent = _G.TabContentContainer
				else
					elementParent = SectionContentContainer
				end
				_G.elementparent = elementParent

				local ButtonContainer = Instance.new(""Frame"")
				ButtonContainer.Size = UDim2.new(1,0,0,20)
				ButtonContainer.Parent = _G.elementparent
				ButtonContainer.AnchorPoint = Vector2.new(0.5,0)
				ButtonContainer.BackgroundColor3 = Color3.fromRGB(39, 39, 46)
				ButtonContainer.BorderSizePixel = 0
				ButtonContainer.Name = ""ButtonContainer""
				ButtonContainer.ZIndex = 4

				local ButtonText = Instance.new(""TextLabel"")
				ButtonText.Size = UDim2.new(1,0,1,0)
				ButtonText.Parent = ButtonContainer
				ButtonText.AnchorPoint = Vector2.new(0,0)
				ButtonText.BackgroundTransparency = 1
				ButtonText.FontFace = Font.fromId(12187362578, Enum.FontWeight.Thin)
				ButtonText.Text = options.name
				ButtonText.TextColor3 = Color3.fromRGB(200, 200, 200)
				ButtonText.TextSize = 13
				ButtonText.Name = options.name
				ButtonText.ZIndex = 4

				local ButtonStroke = Instance.new(""UIStroke"")
				ButtonStroke.Parent = ButtonContainer
				ButtonStroke.Thickness = 1.5
				ButtonStroke.Color = Color3.fromRGB(18, 18, 24)
				
				-- Functionality
				do
					ButtonContainer.MouseEnter:Connect(function()
						button.Hover = true
		
						Library:tween(ButtonText, {TextColor3 = Color3.fromRGB(255, 255, 255)})
						Library:tween(ButtonStroke, {Color = Color3.fromRGB(34,34,40)})
					end)
				
					ButtonContainer.MouseLeave:Connect(function()
						button.Hover = false

						Library:tween(ButtonText, {TextColor3 = Color3.fromRGB(200, 200, 200)})
						Library:tween(ButtonStroke, {Color = Color3.fromRGB(18, 18, 24)})
					end)

					UIS.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							if button.Hover then
								options.callback()
							end
						end
					end)
				end

				return section
			end -- section:AddButton

			function section:AddToggle(options)
				options = Library:validate({
					name = ""Example Toggle"",
					state = false,
					callback = function() end
				}, options or {})

				local toggle = {}
				toggle.state = options.state

				if _G.TabsExist then
					elementParent = _G.TabContentContainer
				else
					elementParent = SectionContentContainer
				end
				_G.elementparent = elementParent

				local ToggleContainer = Instance.new(""Frame"")
				ToggleContainer.Size = UDim2.new(1,0,0,15)
				ToggleContainer.Parent = _G.elementparent
				ToggleContainer.AnchorPoint = Vector2.new(0.5,0)
				ToggleContainer.BackgroundTransparency = 1
				ToggleContainer.BorderSizePixel = 0
				ToggleContainer.Name = ""ToggleContainer""
				ToggleContainer.ZIndex = 4

				local ToggleBox = Instance.new(""Frame"")
				ToggleBox.Size = UDim2.new(0,8,0,8)
				ToggleBox.Parent = ToggleContainer
				ToggleBox.Position = UDim2.new(0, 5, 0, 4)
				ToggleBox.BackgroundColor3 = Color3.fromRGB(75, 75, 86)
				ToggleBox.BackgroundTransparency = 0
				ToggleBox.BorderSizePixel = 0
				ToggleBox.Name = ""ToggleContainer""
				ToggleBox.ZIndex = 4

				local ToggleStroke = Instance.new(""UIStroke"")
				ToggleStroke.Parent = ToggleBox
				ToggleStroke.Thickness = 2
				ToggleStroke.Color = Color3.fromRGB(18, 18, 24)

				local ToggleText = Instance.new(""TextLabel"")
				ToggleText.Size = UDim2.new(1,0,1,0)
				ToggleText.Parent = ToggleContainer
				ToggleText.TextXAlignment = Enum.TextXAlignment.Left
				ToggleText.Position = UDim2.new(0, 30, 0, -1)
				ToggleText.BackgroundTransparency = 1
				ToggleText.FontFace = Font.fromId(12187362578, Enum.FontWeight.Thin)
				ToggleText.Text = options.name
				ToggleText.TextColor3 = Color3.fromRGB(150, 150, 150)
				ToggleText.TextSize = 13
				ToggleText.Name = options.name
				ToggleText.ZIndex = 4

				-- Functionality
				do
					ToggleBox.MouseEnter:Connect(function()
						toggle.Hover = true
						if toggle.state ~= true then
							Library:tween(ToggleBox, {BackgroundColor3 = Color3.fromRGB(206, 115, 136)})
							Library:tween(ToggleStroke, {Color = Color3.fromRGB(0,0,0)})
						end
					end)
				
					ToggleBox.MouseLeave:Connect(function()
						toggle.Hover = false
						if toggle.state ~= true then
							Library:tween(ToggleBox, {BackgroundColor3 = Color3.fromRGB(75, 75, 86)})
							Library:tween(ToggleStroke, {Color = Color3.fromRGB(18, 18, 24)})
						end
					end)

					UIS.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							if toggle.Hover then
								toggle.state = not toggle.state
								options.callback(toggle.state)
							end
						end
					end)

					if toggle.state == true then
						Library:tween(ToggleBox, {BackgroundColor3 = Color3.fromRGB(206, 115, 136)})
					else
						Library:tween(ToggleBox, {BackgroundColor3 = Color3.fromRGB(75, 75, 86)})
					end
				end

				return section
			end -- section:AddToggle
			
			function section:AddSlider(options)
				options = Library:validate({
					name = ""Example Toggle"",
					min = 0,
					max = 100,
					default = nil,
					callback = function(v)
						print(v)
					end
				}, options or {})

				local slider = {
					MouseDown = false,
					Hover = false,
					Connection = nil
				}

				if _G.TabsExist then
					elementParent = _G.TabContentContainer
				else
					elementParent = SectionContentContainer
				end
				_G.elementparent = elementParent

				options.value = 0
				options.default = options.default or options.min

				local SliderContainer = Instance.new(""Frame"")
				SliderContainer.Size = UDim2.new(1,0,0,25)
				SliderContainer.Parent = _G.elementparent
				SliderContainer.AnchorPoint = Vector2.new(0.5,0)
				SliderContainer.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
				SliderContainer.BackgroundTransparency = 1
				SliderContainer.BorderSizePixel = 0
				SliderContainer.Name = ""SliderContainer""
				SliderContainer.ZIndex = 3

				local SliderBackground = Instance.new(""Frame"")
				SliderBackground.Size = UDim2.new(1,-20,0,8)
				SliderBackground.Parent = SliderContainer
				SliderBackground.AnchorPoint = Vector2.new(0,0)
				SliderBackground.Position = UDim2.new(0, 11, 0, 15)
				SliderBackground.BackgroundColor3 = Color3.fromRGB(39, 39, 46)
				SliderBackground.BorderSizePixel = 0
				SliderBackground.Name = ""SliderBackground""
				SliderBackground.ZIndex = 3

				local MoveSlider = Instance.new(""Frame"")
				MoveSlider.Size = UDim2.new(1,-50,1,0)
				MoveSlider.Parent = SliderBackground
				MoveSlider.BackgroundColor3 = Color3.fromRGB(206, 115, 136)
				MoveSlider.BorderSizePixel = 0
				MoveSlider.Name = ""MoveSlider""
				MoveSlider.ZIndex = 3

				local SliderValue = Instance.new(""TextLabel"")
				SliderValue.Size = UDim2.new(0,10,0,10)
				SliderValue.Parent = MoveSlider
				SliderValue.TextXAlignment = Enum.TextXAlignment.Center
				SliderValue.Position = UDim2.new(1, -5, 0, 8)
				SliderValue.BackgroundTransparency = 1
				SliderValue.FontFace = Font.fromId(12187362578, Enum.FontWeight.ExtraBold)
				SliderValue.Text = options.value
				SliderValue.TextColor3 = Color3.fromRGB(150, 150, 150)
				SliderValue.TextSize = 13
				SliderValue.Name = options.name
				SliderValue.ZIndex = 4

				local ValueOutline = Instance.new(""UIStroke"")
				ValueOutline.Thickness = 1 -- Set the thickness of the outline
				ValueOutline.Color = Color3.new(0, 0, 0) -- Set the color of the outline
				ValueOutline.Parent = SliderValue

				local SliderStroke = Instance.new(""UIStroke"")
				SliderStroke.Parent = SliderBackground
				SliderStroke.Thickness = 1
				SliderStroke.Color = Color3.fromRGB(18, 18, 24)

				local SliderText = Instance.new(""TextLabel"")
				SliderText.Size = UDim2.new(1,0,1,0)
				SliderText.Parent = SliderContainer
				SliderText.TextXAlignment = Enum.TextXAlignment.Left
				SliderText.Position = UDim2.new(0, 12, 0, -6)
				SliderText.BackgroundTransparency = 1
				SliderText.FontFace = Font.fromId(12187362578, Enum.FontWeight.Thin)
				SliderText.Text = options.name
				SliderText.TextColor3 = Color3.fromRGB(150, 150, 150)
				SliderText.TextSize = 12
				SliderText.Name = options.name
				SliderText.ZIndex = 4

				-- Methods

				function slider:SetValue(v)
					if v == nil then
						local output = (mouse.X - SliderBackground.AbsolutePosition.X) / SliderBackground.AbsoluteSize.X
						local slidervalue = math.clamp(math.round(output * (options.max - options.min) + options.min), options.min, options.max)
				
						SliderValue.Text = slidervalue
						MoveSlider.Size = UDim2.fromScale((slidervalue - options.min) / (options.max - options.min), 1)
					end
					options.callback(slider:GetValue())
				end

				function slider:GetValue()
					return tonumber(SliderValue.Text)
				end

				MoveSlider.Size = UDim2.fromScale((options.default - options.min) / (options.max - options.min), 1)
				SliderValue.Text = options.default

				-- Functionality
				do
					SliderBackground.MouseEnter:Connect(function()
						slider.Hover = true
						Library:tween(SliderValue, {TextColor3 = Color3.fromRGB(255, 255, 255)})
					end)
					
					SliderBackground.MouseLeave:Connect(function()
						slider.Hover = false
						Library:tween(SliderValue, {TextColor3 = Color3.fromRGB(150, 150, 150)})
					end)
					
					UIS.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 and slider.Hover then
							slider.MouseDown = true
							-- slider value
							if not slider.Connection then
								slider.Connection = runService.RenderStepped:Connect(function()
									slider:SetValue()
								end)
							end
						end
					end)
					
					UIS.InputEnded:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							slider.MouseDown = false
							slider.Hover = false
							-- Stop slider value
							if slider.Connection then
								slider.Connection:Disconnect()
							end
							slider.Connection = nil
						end
					end)
				end
				
			end -- section:AddSlider

			function section:AddDropdown(options)
				options = Library:validate({
					name = ""Example Dropdown"",
					list = {""Example 1"", ""Example 2"", ""Example 3"", ""Example 4""},
					default = 1,
					callback = function(active)
						print(active)
					end
				}, options or {})

				options.default = options.default or 1

				local dropdown = {
					Hover = false,
					active = {options.list[options.default]},
					state = false
				}

				if _G.TabsExist then
					elementParent = _G.TabContentContainer
				else
					elementParent = SectionContentContainer
				end
				_G.elementparent = elementParent

				local DropdownContainer = Instance.new(""Frame"")
				DropdownContainer.Size = UDim2.new(1,0,0,40)
				DropdownContainer.Position = UDim2.new(0, 0, 0, 0)
				DropdownContainer.Parent = _G.elementparent
				DropdownContainer.AnchorPoint = Vector2.new(0.5,0)
				DropdownContainer.BackgroundTransparency = 1
				DropdownContainer.BorderSizePixel = 0
				DropdownContainer.Name = ""DropdownContainer""
				DropdownContainer.ZIndex = 4

				local DropdownText = Instance.new(""TextLabel"")
				DropdownText.Size = UDim2.new(1,0,0,0)
				DropdownText.Parent = DropdownContainer
				DropdownText.Position = UDim2.new(0, 35, 0, 6)
				DropdownText.BackgroundTransparency = 1
				DropdownText.TextXAlignment = Enum.TextXAlignment.Left
				DropdownText.FontFace = Font.fromId(12187362578, Enum.FontWeight.Thin)
				DropdownText.Text = options.name
				DropdownText.TextColor3 = Color3.fromRGB(150, 150, 150)
				DropdownText.TextSize = 13
				DropdownText.Name = options.name
				DropdownText.ZIndex = 4

				local ActiveChoice = Instance.new(""Frame"")
				ActiveChoice.Size = UDim2.new(1,-65,0,20)
				ActiveChoice.Position = UDim2.new(0.5, 0, 0, 15)
				ActiveChoice.Parent = DropdownContainer
				ActiveChoice.AnchorPoint = Vector2.new(0.5,0)
				ActiveChoice.BackgroundColor3 = Color3.fromRGB(39, 39, 46)
				ActiveChoice.Name = ""ActiveChoice""
				ActiveChoice.ZIndex = 4

				local ActiveText = Instance.new(""TextLabel"")
				ActiveText.Size = UDim2.new(1,0,1,0)
				ActiveText.Parent = ActiveChoice
				ActiveText.AnchorPoint = Vector2.new(0.5,0)
				ActiveText.Position = UDim2.new(0.5, 0, 0, 0)
				ActiveText.BackgroundTransparency = 1
				ActiveText.FontFace = Font.fromId(12187362578, Enum.FontWeight.Thin)
				ActiveText.Text = table.concat(dropdown.active, "", "")
				ActiveText.TextColor3 = Color3.fromRGB(200, 200, 200)
				ActiveText.TextSize = 13
				ActiveText.Name = options.name
				ActiveText.ZIndex = 4

				local DropdownStroke = Instance.new(""UIStroke"")
				DropdownStroke.Parent = ActiveChoice
				DropdownStroke.Thickness = 1.5
				DropdownStroke.Color = Color3.fromRGB(18, 18, 24)

				local ChoiceHolder = Instance.new(""Frame"")
				ChoiceHolder.Size = UDim2.new(1,0,0,0)
				ChoiceHolder.Position = UDim2.new(0.5, 0, 0, 21)
				ChoiceHolder.Parent = ActiveChoice
				ChoiceHolder.AnchorPoint = Vector2.new(0.5,0)
				ChoiceHolder.BackgroundColor3 = Color3.fromRGB(39, 39, 46)
				ChoiceHolder.Visible = false
				ChoiceHolder.BorderSizePixel = 0
				ChoiceHolder.ZIndex = 4

				local ChoiceLayout = Instance.new(""UIListLayout"")
				ChoiceLayout.Parent = ChoiceHolder
				ChoiceLayout.SortOrder = Enum.SortOrder.LayoutOrder
				ChoiceLayout.FillDirection = Enum.FillDirection.Vertical
				ChoiceLayout.Padding = UDim.new(0, 0)
				ChoiceLayout.Name = ""ChoiceLayout""

				function dropdown:AddChoice(name)
					local choice = {
						Name = name,
						Hover = false,
						state = false
					}

					if dropdown.active == choice.Name then
						choice.state = true
					end

					ChoiceHolder.Size = UDim2.new(1,0,0,ChoiceHolder.Size.Y.Offset + 20)

					local Choice = Instance.new(""Frame"")
					Choice.Size = UDim2.new(1,0,0,20)
					Choice.Parent = ChoiceHolder
					Choice.AnchorPoint = Vector2.new(0.5,0)
					Choice.BackgroundColor3 = Color3.fromRGB(39, 39, 46)
					Choice.BorderSizePixel = 0
					Choice.ZIndex = 4

					local ChoiceText = Instance.new(""TextLabel"")
					ChoiceText.Size = UDim2.new(1,0,1,0)
					ChoiceText.Parent = Choice
					ChoiceText.AnchorPoint = Vector2.new(0.5,0)
					ChoiceText.Position = UDim2.new(0.5, 1, 0, 0)
					ChoiceText.BackgroundTransparency = 1
					ChoiceText.FontFace = Font.fromId(12187362578, Enum.FontWeight.Thin)
					ChoiceText.Text = name
					ChoiceText.TextColor3 = Color3.fromRGB(150,150,150)
					ChoiceText.TextSize = 12
					ChoiceText.Name = name
					ChoiceText.ZIndex = 4

					for i, name in ipairs(dropdown.active) do -- Handle Default Choice
						if name == choice.Name then
							choice.state = true
							ActiveText.Text = table.concat(dropdown.active, "", "")
							Library:tween(ChoiceText, {TextColor3 = Color3.fromRGB(255, 255, 255)})
							options.callback(ActiveText.Text)
							break
						end
					end

					-- Choice Functionality
					do
						Choice.MouseEnter:Connect(function()
							if choice.state ~= true then
								Library:tween(ChoiceText, {TextColor3 = Color3.fromRGB(255,255,255)})
							end
							choice.Hover = true
						end)
					
						Choice.MouseLeave:Connect(function()
							if choice.state ~= true then
								Library:tween(ChoiceText, {TextColor3 = Color3.fromRGB(150, 150, 150)})
							end
							choice.Hover = false
						end)

						UIS.InputBegan:Connect(function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								if choice.Hover == true then
									choice.state = not choice.state
									if choice.state == true then
										Library:tween(ChoiceText, {TextColor3 = Color3.fromRGB(255, 255, 255)})
										table.insert(dropdown.active, choice.Name)
										ActiveText.Text = table.concat(dropdown.active, "", "")
										options.callback(ActiveText.Text)
									else
										Library:tween(ChoiceText, {TextColor3 = Color3.fromRGB(150, 150, 150)})
										for i, name in ipairs(dropdown.active) do
											if name == choice.Name then
												table.remove(dropdown.active, i)
												ActiveText.Text = table.concat(dropdown.active, "", "")
												options.callback(ActiveText.Text)
												break
											end
										end
									end
								end
							end
						end)

					end
				end -- dropdown:AddChoice

				for _,v in pairs(options.list) do
					dropdown:AddChoice(v)
				end

				-- Dropdown Functionality
				do
					ActiveChoice.MouseEnter:Connect(function()
						dropdown.Hover = true
						if dropdown.state ~= true then
							Library:tween(DropdownStroke, {Color = Color3.fromRGB(34,34,40)})
							Library:tween(ActiveText, {TextColor3 = Color3.fromRGB(255,255,255)})
						end
					end)
				
					ActiveChoice.MouseLeave:Connect(function()
						dropdown.Hover = false
						if dropdown.state ~= true then
							Library:tween(DropdownStroke, {Color = Color3.fromRGB(18, 18, 24)})
							Library:tween(ActiveText, {TextColor3 = Color3.fromRGB(200, 200, 200)})
						end
					end)

					UIS.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							if dropdown.Hover then
								dropdown.state = not dropdown.state
								ChoiceHolder.Visible = dropdown.state
								if dropdown.state == true then
									DropdownContainer.Size = UDim2.new(1,0,0,ChoiceHolder.Size.Y.Offset + 40)
								else
									DropdownContainer.Size = UDim2.new(1,0,0,40)
								end
							end
						end
					end)

					if dropdown.state == true then
						Library:tween(DropdownStroke, {Color = Color3.fromRGB(34,34,40)})
						Library:tween(ActiveText, {TextColor3 = Color3.fromRGB(255,255,255)})
					else
						Library:tween(DropdownStroke, {Color = Color3.fromRGB(18, 18, 24)})
						Library:tween(ActiveText, {TextColor3 = Color3.fromRGB(200,200,200)})
					end
				end

				return section
			end

			return section
		end -- tab:AddSection
		return tab
	end -- GUI:AddTab

	-- Drag GUI
	do

		local container = {
			Hover = false
		}

		-- This prevents it from dragging on elements like sliders and colorpickers.
		Container3.MouseEnter:Connect(function()
			container.Hover = true
		end)
	
		Container3.MouseLeave:Connect(function()
			container.Hover = false
		end)

		local dragging
		local dragInput
		local dragStart
		local startPos

		local function update(input)
			if container.Hover == false then
				local delta = input.Position - dragStart
				Container1.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
			end
		end

		Container1.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = true
				dragStart = input.Position
				startPos = Container1.Position
				
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)

		Container1.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement then
				dragInput = input
			end
		end)

		UIS.InputChanged:Connect(function(input)
			if input == dragInput and dragging then
				update(input)
			end
		end)
	end

	-- Hide GUI
	local GUIToggle = true -- Variable to track visibility state

	UIS.InputBegan:Connect(function(input)
		if input.KeyCode == Enum.KeyCode.RightShift then
			GUIToggle = not GUIToggle
			Container1.Visible = GUIToggle
			Container1.Active = GUIToggle
		end
	end)

	-- Destroy GUI
	UIS.InputBegan:Connect(function(input)
		if input.KeyCode == Enum.KeyCode.M then
			ScreenGui:Destroy()
		end
	end)

end

-- Initialize the Library
local GUI = Library:Init()"
eH4x2nkR,18_06_2024_pw000d_43_005,uuu000,C++,Monday 17th of June 2024 05:23:01 PM CDT,"      #include ""EasyNextionLibrary.h""  // Include EasyNextionLibrary
      #include <MsTimer2.h>
      EasyNex myNex(Serial); 
      #define MEASURE_PERIOD 1000
      // uint16_t u=1000;
      int timeCount;               // —Å—á–µ—Ç—á–∏–∫ –≤—Ä–µ–º–µ–Ω–∏
      float sum,sum1;                   // –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–æ–≤ –ê–¶–ü
    float vale;  
      float val;               // —Å—É–º–º–∞ –∫–æ–¥–æ–≤ –ê–¶–ü (—Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ * 500)
      boolean flagReady;
      boolean i;
  long value,value1;

  //-------------------------------------------------
        
         int Number_read ;
        int Number_read1 ;
        int Number_read2 ;
        int Number_read3 ;
        int Number_read4 ;  
    
      void setup(){
 
  myNex.begin(9600); // Begin the object with a baud rate of 9600

MsTimer2::set(1, timerInterupt);  // –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –ø–æ —Ç–∞–π–º–µ—Ä—É, –ø–µ—Ä–∏–æ–¥ 1 –º—Å
 MsTimer2::start();                // —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è 
  
 pinMode(3, OUTPUT);   // The built-in LED is initialized as an output          
  digitalWrite(3, LOW); // Setting the built-in LED to LOW = off
   pinMode(4, OUTPUT);   // The built-in LED is initialized as an output          
  digitalWrite(4, LOW); // Setting the built-in LED to LOW = off
  pinMode(5, OUTPUT);   // The built-in LED is initialized as an output          
  digitalWrite(5, LOW); // Setting the built-in LED to LOW = off
   pinMode(6, OUTPUT);   // The built-in LED is initialized as an output          
  digitalWrite(6, LOW); // Setting the built-in LED to LOW = off
   pinMode(7, OUTPUT);   // The built-in LED is initialized as an output          
  digitalWrite(7, LOW); // Setting the built-in LED to LOW = off

}

// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è 1 –º—Å
void timerInterupt() {

  timeCount++;            // +1 —Å—á–µ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–æ–∫ —É—Å—Ä–µ–¥–Ω–µ–Ω–∏—è
  sum += analogRead(A1);  // —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–æ–≤ –ê–¶–ü
 

  // –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–∏—Å–ª–∞ –≤—ã–±–æ—Ä–æ–∫ —É—Å—Ä–µ–¥–Ω–µ–Ω–∏—è
  if (timeCount >= MEASURE_PERIOD) {
    timeCount = 0;
    val = sum;  // –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
  
    sum = 0;
   

    flagReady = true;  // –ø—Ä–∏–∑–Ω–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑–º–µ—Ä–µ–Ω–∏–π –≥–æ—Ç–æ–≤
  }

 
}
//-------------------------------------
    void loop() {
        myNex.NextionListen();   
   
        if (flagReady == true) {
    flagReady = false;
 vale=val/1000;
    float data = mapf(vale, 0, 1023.0, 0, 5.0);//--------------------------------------------
   long value = (data*1000)/8.8;
   long value1 = val/1000;   //------------------------------------------
    myNex.writeNum(""main.x0.val"",value);
    myNex.writeNum(""page0.x0.val"",value);
    myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
   myNex.writeStr(""main.click x0,1""); 
   myNex.writeStr(""page0.click x0,1""); 
       myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");     
myNex.writeNum(""main.n1.val"", (val / 1000));
myNex.writeNum(""page0.n1.val"", (val / 1000));
    myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
 myNex.writeStr(""main.click n1,1"");
 myNex.writeStr(""page0.click n1,1"");  
     myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
  delay (100);
      }
  //---------------------------------------------------------
  Number_read = myNex.readNumber(""n2.val"");
  Number_read = myNex.readNumber(""n2.val"");
   Number_read1 = myNex.readNumber(""n3.val"");
  Number_read1 = myNex.readNumber(""n3.val"");
   Number_read2 = myNex.readNumber(""n4.val"");
  Number_read2 = myNex.readNumber(""n4.val"");
  Number_read3 = myNex.readNumber(""n6.val"");
  Number_read3 = myNex.readNumber(""n6.val"");
   Number_read4 = myNex.readNumber(""n7.val"");
  Number_read4 = myNex.readNumber(""n7.val"");
     
      
     if(Number_read==1)
      {
        digitalWrite(3, HIGH);
        }
       else
       {
        digitalWrite(3, LOW);
        } 
//-------------------------------------
         if(Number_read1==1)
      {
        digitalWrite(4, HIGH);
        }
       else
       {
        digitalWrite(4, LOW);
        }
//------------------------------------
          if(Number_read2==1)
      {
        digitalWrite(5, HIGH);
        }
       else
       {
        digitalWrite(5, LOW);
        }
//--------------------------------------
         if(Number_read3==1)
      {
        digitalWrite(6, HIGH);
      //  i=1;
        }
       else
       {
        digitalWrite(6, LOW);
       //  i=0;
        } 
//-------------------------------------
         if(Number_read4==1)
      {
        digitalWrite(7, HIGH);
        }
       else
       {
        digitalWrite(7, LOW);
        }
}
float mapf(float value, float fromLow, float fromHigh, float toLow, float toHigh) {
  float result;
  result = (value - fromLow) * (toHigh - toLow) / (fromHigh - fromLow) + toLow;
  return result;
}//-------------------------------------------------


"
SqmA5BrE,Untitled,MariyanGrigorov,Python,Monday 17th of June 2024 05:13:40 PM CDT,"import re

main_string = input()
patterns = re.compile(
    r""([=/])(?P<location>[A-Z][a-zA-Z]{2,})\1"")
list_result = list()
result = re.finditer(patterns, main_string)
total_points = 0
for show in result:
    list_result.append(show[""location""])
    total_points += len(show[""location""])

print(f""Destinations: {', '.join(list_result)}"")
print(f""Travel Points: {total_points}"")"
FDt52YsC,test bash,DnTo,Bash,Monday 17th of June 2024 04:48:04 PM CDT,test bash
sQakDdKe,Problem 2 - Destination Mapper-falls,MariyanGrigorov,Python,Monday 17th of June 2024 04:46:30 PM CDT,"input_string = input().split('/')
new_list = []
for i in input_string:
    x = i.count('=')
    if x == 2:
        new_list.append(i)
    elif x == i.count('='):
        if x == 0:
            new_list.append(i)
new_list1 = []
for leather in new_list:
    if '=' in leather:
        a = leather.replace('=','')
        new_list1.append(a)
    elif '=' not in leather:
        a = leather
        new_list1.append(a)
word_list = []
for word in new_list1:
    if word.isalpha() and len(word) > 3 and str(word[0]).isupper():
        word_list.append(word)

result = ', '.join(word_list)
total_sum = sum(len(word_list)for word_list in word_list)
print(f'Destinations: {result}')
print(f'Travel Points: {total_sum}')"
