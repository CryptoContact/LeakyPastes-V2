id,title,username,language,date,content
hLvcDwrg,Podium Top 3 Status,Sungmingamerpro13,CSS,Wednesday 27th of March 2024 12:52:22 AM CDT,"local DataStoreService = game:GetService('DataStoreService')

local WinsDataStore = DataStoreService:GetDataStore('Wins')

script.Parent.UserId:GetPropertyChangedSignal('Value'):Connect(function()
	local PlayerName = game.Players:GetNameFromUserIdAsync(script.Parent.UserId.Value)
	local Player = game.Players:GetPlayerByUserId(script.Parent.UserId.Value)
	script.Parent.Podium.MiddleBlock.SurfaceGui.PlayerName.Text = PlayerName
	script.Parent.Podium.MiddleBlock.SurfaceGui.WinsAmount.Text = Player.leaderstats.Wins.Value
end)
"
kvicDp9E,ü§ë G2A.com Free Gift Card Guide Mar 2024 FIX ü§ë,ounnuo,GetText,Wednesday 27th of March 2024 12:25:42 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_388328.pdf

Working as of:
27 March 2024


















"
RcjfQ14U,G2A.com Free Gift Card Guide Mar 2024 FIX,HastyBasher0,GetText,Wednesday 27th of March 2024 12:03:01 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

IMPORTANT: If you use this make sure to use the English version of G2A.com otherwise this will not work!

You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.
 
PDF guide here:
https://smallpdf.com/file#s=cea149fd-ead1-4939-94cf-d10a8ce7936a
 
Working as of:
27 March 2024















































"
Ya20xsGU,Untitled,haikid,Java,Tuesday 26th of March 2024 11:24:30 PM CDT,"import java.util.*; 

class PostFix {
    public LinkedList<String> inFix;
    public LinkedList<String> postFix;
    
    public static void main(String[] args) {
        PostFix test = new PostFix();
        test.inFix = new LinkedList<String>();
    	test.inFix.add(""2.1"");
    	test.inFix.add(""/"");
    	test.inFix.add(""3.2"");
    	test.inFix.add(""-"");
    	test.inFix.add(""("");
    	test.inFix.add(""6.3"");
    	test.inFix.add(""-"");
    	test.inFix.add(""4.2"");
    	test.inFix.add("")"");
    	
    	// === For testing ===
    	//while (!test.inFix.isEmpty()) System.out.print(test.inFix.remove());
    	
        test.inFixToPostFix();
        
        // === For testing ===
    	//while (!test.postFix.isEmpty()) System.out.print(test.postFix.remove() + "" "");
    }
    
    public static boolean isoperator(String arg) {
        return arg.equals(""+"") || arg.equals(""-"") || arg.equals(""*"") || arg.equals(""/"") || arg.equals(""("") || arg.equals("")"");
    }
    
    public void inFixToPostFix() {
    	if (inFix == null)
    		return;
    
    	// create ranking
    	HashMap<String, Integer> rank = new HashMap<String, Integer>();
    	rank.put(""*"", 2);
    	rank.put(""/"", 2);
    	rank.put(""+"", 1);
    	rank.put(""-"", 1);
    
    	postFix = new LinkedList<String>();
    	LinkedList<String> operatorStack = new LinkedList<String>();
    
    	while (!inFix.isEmpty()) {
    		String curr = inFix.remove();
            
    		if (!isoperator(curr)) 
    		{
    			postFix.add(curr);
    		} else if (curr.equals(""("")) {
    			operatorStack.push(curr);
    		} else if (curr.equals("")"")) {
    			while (!operatorStack.peek().equals(""("")) {
    				postFix.add(operatorStack.pop());
    			}
    			operatorStack.remove(); // remove ""(""
    		} else { // it's an operator +,-,*,/
    			int currRank = rank.get(curr);
    
    			if (!operatorStack.isEmpty() && !operatorStack.peek().equals(""("") && rank.get(operatorStack.peek()) >= currRank) {
    				while (!operatorStack.isEmpty() && rank.get(operatorStack.peek()) >= currRank) {
    					postFix.add(operatorStack.pop());
    				}
    			}
    			operatorStack.add(curr);
    		}
    	}
    
    	while (!operatorStack.isEmpty()) {
    		postFix.add(operatorStack.pop());
    	}
    } 
}"
bJF4vZ8A,Untitled,buigianggsa,JavaScript,Tuesday 26th of March 2024 11:11:36 PM CDT,"function calculate(a, b) {
    // Hardcoded values for operation types
    const operationTypes = ['add', 'subtract', 'multiply', 'divide'];

    // Check if operation type is valid
    const isValidOperation = (operation) => {
        return operationTypes.includes(operation);
    };

    // Default operation type
    let operationType = 'add';

    // Perform calculation based on operation type
    switch (operationType) {
        case 'add':
            return a + b;
        case 'subtract':
            return a - b;
        case 'multiply':
            return a * b;
        case 'divide':
            if (b !== 0) {
                return a / b;
            } else {
                return 'Cannot divide by zero';
            }
        default:
            return 'Invalid operation';
    }
}"
dMk0k71N,TUGAS 3 PPB F,Samuel_Berkat_Hulu,Java,Tuesday 26th of March 2024 10:55:04 PM CDT,"package com.example.tugas3ppbf

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.padding
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.tugas3ppbf.ui.theme.HappyBirthdayTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            HappyBirthdayTheme {
                // A surface container using the 'background' color from the theme 
                Surface(
                    modifier = Modifier.fillMaxSize(),
                    color = MaterialTheme.colorScheme.background
                ) {
                    GreetingText(
                        message = ""Happy Birthday BRO!"",
                        from = ""From Samuel"",
                        modifier = Modifier.padding(8.dp)
                    )
                }
            }
        }
    }
}

@Composable
fun GreetingText(message: String, from: String, modifier: Modifier) {
    Column(
        verticalArrangement = Arrangement.Center,
        modifier = modifier
    ) {
        Text(
            text = message,
            fontSize = 100.sp,
            lineHeight = 116.sp,
            textAlign = TextAlign.Center
        )

        Text(
            text = from,
            fontSize = 36.sp,
            modifier = Modifier
                .padding(16.dp)
                .align(alignment = Alignment.End)
        )
    }
}

@Preview(showBackground = true)
@Composable
fun BirthdayCardPreview() {
    HappyBirthdayTheme {
        GreetingText(message = ""Happy Birthday BRO!"", from = ""From Samuel"", modifier = Modifier)
    }
}
"
UqMrD2xZ,XiuBrowser,FreedTV,JSON,Tuesday 26th of March 2024 10:52:54 PM CDT,"{
  ""versionCode"": 1000,
  ""versionName"": ""1.0.0"",
  ""title"": ""Êñ∞ÁâàÊù•‰∫Üv1.0.0"",
  ""desc"": ""‰ºòÂåñ"",
  ""cancel"": ""ÂèñÊ∂à"",
  ""confirm"": ""Á°ÆÂÆö"",
  ""canCancel"": true,
  ""app"": false,
  ""url"": """",
  ""t"": """",
  ""showAd"": true,
  ""showReadAd"": false,
  ""cateList"": [
    {
      ""title"": ""Áà±Áúã"",
      ""pic"": ""https://v.ikanbot.com/resources/logo.svg"",
      ""url"": ""https://v.ikanbot.com/"",
      ""app"": true,
      ""type"": ""web""
    },
    {
      ""title"": ""Êñ∞6V"",
      ""pic"": ""https://img.alicdn.com/imgextra/i2/913168420/O1CN019y7NcV2C4PmY9SqJY_!!913168420.png"",
      ""url"": ""https://www.66s6.net/"",
      ""app"": true,
      ""type"": ""web""
    }
  ]
}"
5zP6jFdp,Other Article Categories,TheiPhoneFan,HTML,Tuesday 26th of March 2024 10:39:15 PM CDT,"    <div class=""tab"">
        <!-- Tab Buttons -->
        <button class=""tablinks"" onclick=""openContent(event, 'Web Development')"" style=""height:60px"">Web Development</button>
        <button class=""tablinks"" onclick=""openContent(event, 'Design')"">Design</button>
        <button class=""tablinks"" onclick=""openContent(event, 'Technology')"">Technology</button>
        <button class=""tablinks"" onclick=""openContent(event, 'Tutorials')"">Tutorials</button>
        <button class=""tablinks"" onclick=""openContent(event, 'Newsletters')"">Newsletters</button>
    </div>

    <!-- Web Development
    Tab 1 -->
    <div id=""Web Development"" class=""tabcontent"">
        <p>No articles under this category have been published yet.</p>
    </div>

    <!-- Deisgn
    Tab 2 -->
    <div id=""Design"" class=""tabcontent"">
        <h2>2024</h2>
        <h3>February 2024</h3>
    </div>"
BMwTK9Eb,TUGAS 2 PPB F,Samuel_Berkat_Hulu,Java,Tuesday 26th of March 2024 10:10:42 PM CDT,"package com.example.tugasppb2
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.layout.*
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.dp
import com.example.tugasppb2.ui.theme.TugasPPB2Theme

data class Profile(
  val name: String,
  val email: String,
  val phone: String,
	val hobby : String,
  val skills: List,
)

val profile = Profile(
  name = ""Samuel Berkat Hulu"",
  email = ""samuelberkahulu@gmail.com"",
  phone = ""082189767651""
	hobby = ""Volly""
  skills = listOf(""Python"", ""SQL"", ""C++"")
)

class MainActivity : ComponentActivity() {
  override fun onCreate(savedInstanceState: Bundle?) {
    super.onCreate(savedInstanceState)
    setContent {
      TugasPPB2Theme {
        Surface(
          modifier = Modifier.fillMaxSize(),
          color = MaterialTheme.colorScheme.background
        ) {
          ProfileSection(profile)
          HeaderSection()
        }
      }
    }
  }
}

@Composable
fun HeaderSection(){
  Text(
    text = ""Hello World"",
    style = MaterialTheme.typography.headlineMedium,
    textAlign = TextAlign.Center,
    modifier = Modifier.padding(8.dp)
  )
}

@Composable
fun ProfileSection(profile: Profile) {
  Column(
    modifier = Modifier.fillMaxSize(),
    verticalArrangement = Arrangement.Center,
    horizontalAlignment = Alignment.CenterHorizontally
  ) {
    Text(
      text = ""Name: "" + profile.name,
      style = MaterialTheme.typography.bodyMedium,
      modifier = Modifier.padding(8.dp)
    )
    Text(
      text = ""Email: "" + profile.email,
      style = MaterialTheme.typography.bodyMedium,
      modifier = Modifier.padding(8.dp)
    )
    Text(
      text = ""Phone: "" + profile.phone,
      style = MaterialTheme.typography.bodyMedium,
      modifier = Modifier.padding(8.dp)
    )
    Text(
      text = ""Skills: "" + profile.skills.joinToString("", ""),
      style = MaterialTheme.typography.bodyMedium,
      modifier = Modifier.padding(8.dp)
    )
		Text(
      text = ""hobby : "" + profile.hobby,
      style = MaterialTheme.typography.bodyMedium,
      modifier = Modifier.padding(8.dp).
  }
}"
JXmpqUvn,Image Gallery Without Expandable Images,TheiPhoneFan,HTML,Tuesday 26th of March 2024 10:02:06 PM CDT,"<!-- Created by TheiPhoneFan on 2024-03-26 -->
<!-- Previews 6.0.3, 2022-2024 -->
<!DOCTYPE html>
<html>

<head>
    <link href=""https://fonts.googleapis.com/css?family=Roboto:400,300,100,700,900"" rel=""stylesheet"" type=""text/css"">
    <link rel=""stylesheet"" href=""./theme/style.css"" />
    <style>
        div.gallery {
            border: 1px solid #ccc;
			border-radius: 16px;
        }

        div.gallery:hover {
            border: 1px solid #777;
        }

        div.gallery img {
            width: 100%;
            height: auto;
			border-radius: 16px 16px 0px 0px;
        }

        div.desc {
            padding: 15px;
            text-align: center;
		   font-family: 'Roboto', sans-serif;
        }

        * {
            box-sizing: border-box;
        }

        .responsive {
            padding: 0 6px;
            float: left;
            width: 24.99999%;
        }

        @media only screen and (max-width: 700px) {
            .responsive {
                width: 49.99999%;
                margin: 6px 0;
            }
        }

        @media only screen and (max-width: 500px) {
            .responsive {
                width: 100%;
            }
        }

        .clearfix:after {
            content: """";
            display: table;
            clear: both;
        }
    </style>
</head>

<body>
    <div class=""responsive"">
        <div class=""gallery"">
            <a target=""_blank"" href=""https://www.w3schools.com/css/img_5terre.jpg"">
                <img src=""https://www.w3schools.com/css/img_5terre.jpg"" alt=""Cinque Terre"" width=""600"" height=""400"">
            </a>
            <div class=""desc"">Add a description of the image here</div>
        </div>
    </div>


    <div class=""responsive"">
        <div class=""gallery"">
            <a target=""_blank"" href=""https://www.w3schools.com/css/img_forest.jpg"">
                <img src=""https://www.w3schools.com/css/img_forest.jpg"" alt=""Forest"" width=""600"" height=""400"">
            </a>
            <div class=""desc"">Add a description of the image here</div>
        </div>
    </div>

    <div class=""responsive"">
        <div class=""gallery"">
            <a target=""_blank"" href=""https://www.w3schools.com/css/img_lights.jpg"">
                <img src=""https://www.w3schools.com/css/img_lights.jpg"" alt=""Northern Lights"" width=""600"" height=""400"">
            </a>
            <div class=""desc"">Add a description of the image here</div>
        </div>
    </div>

    <div class=""responsive"">
        <div class=""gallery"">
            <a target=""_blank"" href=""https://www.w3schools.com/css/img_mountains.jpg"">
                <img src=""https://www.w3schools.com/css/img_mountains.jpg"" alt=""Mountains"" width=""600"" height=""400"">
            </a>
            <div class=""desc"">Add a description of the image here</div>
        </div>
    </div>
</body>
</html>"
uXqtCQQF,# tk_cloth_sim.py,here2share,Python,Tuesday 26th of March 2024 09:46:33 PM CDT,"# tk_cloth_sim.py ZZZ

import tkinter as tk

cloth_width = 18
cloth_height = 12
cloth_spacing = 30
cloth_damping = 0.98
gravity = 0.1

ww, hh = 600, 600
root = tk.Tk()
canvas = tk.Canvas(root, width=ww, height=hh)
canvas.pack()

points = []
constraints = []
for y in range(cloth_height + 1):
    for x in range(cloth_width + 1):
        point = {
            'x': x * cloth_spacing,
            'y': y * cloth_spacing + 20,
            'old_x': x * cloth_spacing,
            'old_y': y * cloth_spacing,
            'pinned': (x == 0 and y == 0) or (x == cloth_width and y == 0),
        }
        points.append(point)

    for x in range(cloth_width):
        a = y * (cloth_width + 1) + x
        b = a + 1
        constraints.append({
            'point_a': points[a],
            'point_b': points[b],
            'length': cloth_spacing,
        })

for y in range(cloth_height):
    for x in range(cloth_width + 1):
        a = y * (cloth_width + 1) + x
        b = a + cloth_width + 1
        constraints.append({
            'point_a': points[a],
            'point_b': points[b],
            'length': cloth_spacing,
        })

points[cloth_width]['x'] = ww
points[cloth_width]['pinned'] = True

drag_point = None

def on_mouse_down(event):
	global drag_point
	for point in points:
		if abs(point['x'] - event.x) < cloth_spacing:
			if abs(point['y'] - event.y) < cloth_spacing:
				drag_point = point
				drag_point['xm'] = event.x
				drag_point['ym'] = event.y
				return

def on_mouse_move(event):
    if drag_point:
        drag_point['x'] = drag_point['xm'] = event.x
        drag_point['y'] = drag_point['ym'] = event.y

def on_mouse_up(event):
    global drag_point
    drag_point = None

canvas.bind('<ButtonPress-1>', on_mouse_down)
canvas.bind('<B1-Motion>', on_mouse_move)
canvas.bind('<ButtonRelease-1>', on_mouse_up)

while True:
	for point in points:
		if not point['pinned']:
			velocity_x = (point['x'] - point['old_x']) * cloth_damping
			velocity_y = (point['y'] - point['old_y']) * cloth_damping
			point['old_x'] = point['x']
			point['old_y'] = point['y']
			point['x'] += velocity_x
			point['y'] += velocity_y + gravity

	for constraint in constraints:
		point_a = constraint['point_a']
		point_b = constraint['point_b']
		length = constraint['length']
		dx = point_b['x'] - point_a['x']
		dy = point_b['y'] - point_a['y']
		distance = (dx ** 2 + dy ** 2) ** 0.5
		difference = length - distance
		percentage = difference / distance / 2
		offset_x = dx * percentage
		offset_y = dy * percentage
		if not point_a['pinned']:
			point_a['x'] -= offset_x
			point_a['y'] -= offset_y
		if not point_b['pinned']:
			point_b['x'] += offset_x
			point_b['y'] += offset_y
			
	if drag_point:
		drag_point['x'] = drag_point['xm']
		drag_point['y'] = drag_point['ym']

	canvas.delete('cloth')

	for y in range(cloth_height + 1):
		point_coords = [(points[y * (cloth_width + 1) + x]['x'], points[y * (cloth_width + 1) + x]['y']) for x in range(cloth_width + 1)]
		canvas.create_line(point_coords, tags='cloth', fill='black')

	for x in range(cloth_width + 1):
		point_coords = [(points[y * (cloth_width + 1) + x]['x'], points[y * (cloth_width + 1) + x]['y']) for y in range(cloth_height + 1)]
		canvas.create_line(point_coords, tags='cloth', fill='black')

	root.update()

root.mainloop()"
dQ6BkcZL,News March26 24,Newscaster_Ned,Email,Tuesday 26th of March 2024 09:43:35 PM CDT,".‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äé1‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé
.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äé2‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé
.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äé3‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé
.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé ‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äéc‚Äéo‚Äém‚Äép‚Äél‚Äée‚Äét‚Äée‚Äé.‚Äé

W‚Äéa‚Äén‚Äét‚Äé ‚Äéa‚Äé ‚Äéd‚Äéi‚Äév‚Äée‚Äér‚Äés‚Äée‚Äé ‚Äém‚Äéi‚Äéx‚Äét‚Äéu‚Äér‚Äée‚Äé ‚Äéo‚Äéf‚Äé ‚Äéi‚Äén‚Äéf‚Äéo‚Äér‚Äém‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéa‚Äéb‚Äéo‚Äéu‚Äét‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äév‚Äéa‚Äér‚Äéi‚Äéo‚Äéu‚Äés‚Äé ‚Äée‚Äév‚Äée‚Äén‚Äét‚Äés‚Äé ‚Äég‚Äéo‚Äéi‚Äén‚Äég‚Äé ‚Äéo‚Äén‚Äé ‚Äéi‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéw‚Äéo‚Äér‚Äél‚Äéd‚Äé?‚Äé ‚ÄéW‚Äée‚Äél‚Äél‚Äé ‚Äéy‚Äéo‚Äéu‚Äé ‚Äéc‚Äéa‚Äén‚Äé'‚Äét‚Äé ‚Äég‚Äée‚Äét‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äéc‚Äéa‚Äéu‚Äés‚Äée‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äén‚Äée‚Äéw‚Äés‚Äé ‚Äéi‚Äés‚Äé ‚Äéc‚Äéo‚Äén‚Äét‚Äér‚Äéo‚Äél‚Äél‚Äée‚Äéd‚Äé ‚Äéb‚Äéy‚Äé ‚Äéd‚Äéi‚Äée‚Äé ‚ÄéJ‚Äéu‚Äéd‚Äée‚Äén‚Äé.‚Äé ‚ÄéS‚Äéo‚Äé ‚Äéh‚Äée‚Äér‚Äée‚Äé'‚Äés‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äé""‚Äén‚Äée‚Äéw‚Äés‚Äé""‚Äé!‚Äé

M‚Äéc‚ÄéC‚Äéa‚Äés‚Äék‚Äéi‚Äél‚Äél‚Äé:‚Äé ‚ÄéI‚Äé ‚ÄéS‚Äét‚Äér‚Äéu‚Äég‚Äég‚Äél‚Äée‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚ÄéG‚Äér‚Äéa‚Äés‚Äép‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéR‚Äée‚Äéa‚Äél‚Äéi‚Äét‚Äéy‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚ÄéW‚Äée‚Äé ‚ÄéE‚Äél‚Äée‚Äéc‚Äét‚Äée‚Äéd‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé
D‚Äée‚ÄéS‚Äéa‚Äén‚Äét‚Äéi‚Äés‚Äé ‚ÄéS‚Äéi‚Äég‚Äén‚Äés‚Äé ‚ÄéL‚Äée‚Äég‚Äéi‚Äés‚Äél‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚ÄéA‚Äéi‚Äém‚Äée‚Äéd‚Äé ‚Äét‚Äéo‚Äé ‚ÄéP‚Äér‚Äéo‚Äét‚Äée‚Äéc‚Äét‚Äé ‚ÄéM‚Äéi‚Äén‚Äéo‚Äér‚Äés‚Äé ‚ÄéO‚Äén‚Äél‚Äéi‚Äén‚Äée‚Äé
G‚Äéo‚Äév‚Äé.‚Äé ‚ÄéY‚Äéo‚Äéu‚Äén‚Äég‚Äék‚Äéi‚Äén‚Äé ‚ÄéV‚Äée‚Äét‚Äéo‚Äée‚Äés‚Äé ‚ÄéV‚Äéi‚Äér‚Äég‚Äéi‚Äén‚Äéi‚Äéa‚Äé ‚ÄéD‚Äée‚Äém‚Äéo‚Äéc‚Äér‚Äéa‚Äét‚Äés‚Äé'‚Äé ‚Äé'‚ÄéA‚Äés‚Äés‚Äéa‚Äéu‚Äél‚Äét‚Äé ‚ÄéW‚Äée‚Äéa‚Äép‚Äéo‚Äén‚Äés‚Äé'‚Äé ‚ÄéB‚Äéa‚Äén‚Äé
D‚Äée‚Äém‚Äé ‚ÄéR‚Äée‚Äép‚Äé.‚Äé ‚Äéo‚Äén‚Äé ‚ÄéB‚Äér‚Äéi‚Äéd‚Äég‚Äée‚Äé:‚Äé ‚ÄéB‚Äéu‚Äét‚Äét‚Äéi‚Äég‚Äéi‚Äée‚Äég‚Äé ‚ÄéS‚Äéa‚Äéy‚Äés‚Äé ‚Äé'‚ÄéY‚Äéo‚Äéu‚Äé ‚ÄéC‚Äéa‚Äén‚Äé ‚ÄéN‚Äée‚Äév‚Äée‚Äér‚Äé ‚ÄéH‚Äéa‚Äév‚Äée‚Äé ‚ÄéE‚Äén‚Äéo‚Äéu‚Äég‚Äéh‚Äé ‚ÄéR‚Äée‚Äég‚Äéu‚Äél‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äés‚Äé'‚Äé
K‚Äél‚Äéo‚Äéb‚Äéu‚Äéc‚Äéh‚Äéa‚Äér‚Äé:‚Äé ‚ÄéT‚Äéh‚Äéi‚Äés‚Äé ‚ÄéE‚Äél‚Äée‚Äéc‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚ÄéI‚Äés‚Äé ‚ÄéA‚Äéb‚Äéo‚Äéu‚Äét‚Äé ‚Äé'‚ÄéC‚Äéo‚Äéd‚Äéi‚Äéf‚Äéy‚Äéi‚Äén‚Äég‚Äé ‚ÄéR‚Äéo‚Äée‚Äé ‚Äév‚Äé.‚Äé ‚ÄéW‚Äéa‚Äéd‚Äée‚Äé ‚ÄéI‚Äén‚Äét‚Äéo‚Äé ‚ÄéL‚Äéa‚Äéw‚Äé'‚Äé
G‚Äée‚Äét‚Äé ‚ÄéA‚Äél‚Äél‚Äé ‚ÄéB‚Äér‚Äée‚Äéi‚Äét‚Äéb‚Äéa‚Äér‚Äét‚Äé ‚ÄéN‚Äée‚Äéw‚Äés‚Äé ‚ÄéH‚Äée‚Äér‚Äée‚Äé
H‚Äéo‚Äém‚Äée‚ÄéP‚Äéa‚Äég‚Äée‚Äé
B‚Äéi‚Äéd‚Äée‚Äén‚Äé:‚Äé ‚ÄéG‚Äéo‚Äév‚Äée‚Äér‚Äén‚Äém‚Äée‚Äén‚Äét‚Äé ‚ÄéW‚Äéi‚Äél‚Äél‚Äé ‚ÄéP‚Äéa‚Äéy‚Äé ‚Äé‚Äò‚ÄéE‚Äén‚Äét‚Äéi‚Äér‚Äée‚Äé ‚ÄéC‚Äéo‚Äés‚Äét‚Äé‚Äô‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéR‚Äée‚Äéb‚Äéu‚Äéi‚Äél‚Äéd‚Äéi‚Äén‚Äég‚Äé ‚ÄéB‚Äéa‚Äél‚Äét‚Äéi‚Äém‚Äéo‚Äér‚Äée‚Äé ‚ÄéB‚Äér‚Äéi‚Äéd‚Äég‚Äée‚Äé

‚Äô‚ÄéW‚Äée‚Äé‚Äô‚Äér‚Äée‚Äé ‚ÄéN‚Äéo‚Äét‚Äé ‚ÄéL‚Äée‚Äéa‚Äév‚Äéi‚Äén‚Äég‚Äé ‚ÄéU‚Äén‚Äét‚Äéi‚Äél‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéJ‚Äéo‚Äéb‚Äé ‚ÄéI‚Äés‚Äé ‚ÄéD‚Äéo‚Äén‚Äée‚Äé‚Äô‚Äé
B‚Äéi‚Äéd‚Äée‚Äén‚Äé ‚ÄéB‚Äéa‚Äél‚Äét‚Äéi‚Äém‚Äéo‚Äér‚Äée‚Äé
P‚Äér‚Äée‚Äés‚Äéi‚Äéd‚Äée‚Äén‚Äét‚Äé ‚ÄéJ‚Äéo‚Äée‚Äé ‚ÄéB‚Äéi‚Äéd‚Äée‚Äén‚Äé ‚Äés‚Äéa‚Äéi‚Äéd‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äég‚Äéo‚Äév‚Äée‚Äér‚Äén‚Äém‚Äée‚Äén‚Äét‚Äé ‚Äéw‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚Äép‚Äéa‚Äéy‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äé‚Äú‚Äée‚Äén‚Äét‚Äéi‚Äér‚Äée‚Äé ‚Äéc‚Äéo‚Äés‚Äét‚Äé‚Äù‚Äé ‚Äéo‚Äéf‚Äé ‚Äér‚Äée‚Äéb‚Äéu‚Äéi‚Äél‚Äéd‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéF‚Äér‚Äéa‚Äén‚Äéc‚Äéi‚Äés‚Äé ‚ÄéS‚Äéc‚Äéo‚Äét‚Äét‚Äé ‚ÄéK‚Äée‚Äéy‚Äé ‚ÄéB‚Äér‚Äéi‚Äéd‚Äég‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚ÄéB‚Äéa‚Äél‚Äét‚Äéi‚Äém‚Äéo‚Äér‚Äée‚Äé,‚Äé ‚ÄéM‚Äéa‚Äér‚Äéy‚Äél‚Äéa‚Äén‚Äéd‚Äé.‚Äé

K‚Äéa‚Äér‚Äéi‚Äén‚Äée‚Äé ‚ÄéJ‚Äée‚Äéa‚Äén‚Äé-‚ÄéP‚Äéi‚Äée‚Äér‚Äér‚Äée‚Äé ‚ÄéM‚Äée‚Äél‚Äét‚Äés‚Äé ‚ÄéD‚Äéo‚Äéw‚Äén‚Äé,‚Äé ‚ÄéH‚Äéa‚Äén‚Äég‚Äés‚Äé ‚ÄéU‚Äép‚Äé ‚ÄéS‚Äéh‚Äéo‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéR‚Äéa‚Äéd‚Äéi‚Äéo‚Äé ‚ÄéH‚Äéo‚Äés‚Äét‚Äé ‚ÄéA‚Äés‚Äék‚Äés‚Äé ‚ÄéI‚Äéf‚Äé ‚ÄéB‚Äéi‚Äéd‚Äée‚Äén‚Äé ‚ÄéH‚Äéa‚Äés‚Äé ‚Äé‚Äò‚ÄéD‚Äée‚Äém‚Äée‚Äén‚Äét‚Äéi‚Äéa‚Äé‚Äô‚Äé
K‚Äéa‚Äér‚Äéi‚Äén‚Äée‚Äé ‚ÄéJ‚Äée‚Äéa‚Äén‚Äé-‚ÄéP‚Äéi‚Äée‚Äér‚Äér‚Äée‚Äé ‚ÄéH‚Äéa‚Äés‚Äé ‚ÄéM‚Äée‚Äél‚Äét‚Äéd‚Äéo‚Äéw‚Äén‚Äé ‚ÄéW‚Äéh‚Äée‚Äén‚Äé ‚ÄéR‚Äéa‚Äéd‚Äéi‚Äéo‚Äé ‚ÄéH‚Äéo‚Äés‚Äét‚Äé ‚ÄéA‚Äés‚Äék‚Äés‚Äé ‚ÄéI‚Äéf‚Äé ‚ÄéB‚Äéi‚Äéd‚Äée‚Äén‚Äé ‚ÄéH‚Äéa‚Äés‚Äé ‚ÄéD‚Äée‚Äém‚Äée‚Äén‚Äét‚Äéi‚Äéa‚Äé
3‚Äé4‚Äé1‚Äé
R‚Äée‚Äép‚Äéo‚Äér‚Äét‚Äé:‚Äé ‚ÄéN‚ÄéB‚ÄéC‚Äé ‚ÄéN‚Äée‚Äéw‚Äés‚Äé ‚Äét‚Äéo‚Äé ‚ÄéD‚Äér‚Äéo‚Äép‚Äé ‚ÄéR‚Äéo‚Äén‚Äén‚Äéa‚Äé ‚ÄéM‚Äéc‚ÄéD‚Äéa‚Äén‚Äéi‚Äée‚Äél‚Äé,‚Äé ‚ÄéW‚Äéh‚Äéo‚Äé ‚ÄéS‚Äée‚Äée‚Äék‚Äés‚Äé ‚ÄéL‚Äée‚Äég‚Äéa‚Äél‚Äé ‚ÄéR‚Äée‚Äép‚Äér‚Äée‚Äés‚Äée‚Äén‚Äét‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äé ‚Äé
R‚Äée‚Äép‚Äéo‚Äér‚Äét‚Äé:‚Äé ‚ÄéN‚ÄéB‚ÄéC‚Äé ‚ÄéN‚Äée‚Äéw‚Äés‚Äé ‚Äét‚Äéo‚Äé ‚ÄéD‚Äér‚Äéo‚Äép‚Äé ‚ÄéR‚Äéo‚Äén‚Äén‚Äéa‚Äé ‚ÄéM‚Äéc‚ÄéD‚Äéa‚Äén‚Äéi‚Äée‚Äél‚Äé,‚Äé ‚ÄéW‚Äéh‚Äéo‚Äé ‚ÄéS‚Äée‚Äée‚Äék‚Äés‚Äé ‚ÄéL‚Äée‚Äég‚Äéa‚Äél‚Äé ‚ÄéR‚Äée‚Äép‚Äér‚Äée‚Äés‚Äée‚Äén‚Äét‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äé ‚Äé
8‚Äé6‚Äé0‚Äé
D‚Äéo‚Äén‚Äéa‚Äél‚Äéd‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé:‚Äé ‚Äé‚Äò‚ÄéI‚Äét‚Äé ‚ÄéW‚Äéi‚Äél‚Äél‚Äé ‚ÄéB‚Äée‚Äé ‚ÄéM‚Äéy‚Äé ‚ÄéH‚Äéo‚Äén‚Äéo‚Äér‚Äé ‚Äét‚Äéo‚Äé ‚ÄéP‚Äéo‚Äés‚Äét‚Äé‚Äô‚Äé ‚Äé$‚Äé1‚Äé7‚Äé5‚ÄéM‚Äé ‚ÄéB‚Äéo‚Äén‚Äéd‚Äé
D‚Äéo‚Äén‚Äéa‚Äél‚Äéd‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé:‚Äé ‚Äé'‚ÄéI‚Äét‚Äé ‚ÄéW‚Äéi‚Äél‚Äél‚Äé ‚ÄéB‚Äée‚Äé ‚ÄéM‚Äéy‚Äé ‚ÄéH‚Äéo‚Äén‚Äéo‚Äér‚Äé ‚Äét‚Äéo‚Äé ‚ÄéP‚Äéo‚Äés‚Äét‚Äé'‚Äé ‚Äé$‚Äé1‚Äé7‚Äé5‚ÄéM‚Äé ‚ÄéB‚Äéo‚Äén‚Äéd‚Äé
8‚Äé,‚Äé2‚Äé0‚Äé2‚Äé
N‚Äée‚Äéw‚Äé ‚ÄéY‚Äéo‚Äér‚Äék‚Äé ‚ÄéA‚Äép‚Äép‚Äée‚Äéa‚Äél‚Äés‚Äé ‚ÄéC‚Äéo‚Äéu‚Äér‚Äét‚Äé ‚ÄéP‚Äéa‚Äéu‚Äés‚Äée‚Äés‚Äé ‚Äé$‚Äé4‚Äé6‚Äé4‚ÄéM‚Äé ‚ÄéJ‚Äéu‚Äéd‚Äég‚Äém‚Äée‚Äén‚Äét‚Äé ‚ÄéA‚Äég‚Äéa‚Äéi‚Äén‚Äés‚Äét‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé
N‚Äée‚Äéw‚Äé ‚ÄéY‚Äéo‚Äér‚Äék‚Äé ‚ÄéA‚Äép‚Äép‚Äée‚Äéa‚Äél‚Äés‚Äé ‚ÄéC‚Äéo‚Äéu‚Äér‚Äét‚Äé ‚ÄéP‚Äéa‚Äéu‚Äés‚Äée‚Äés‚Äé ‚Äé$‚Äé4‚Äé6‚Äé4‚ÄéM‚Äé ‚ÄéJ‚Äéu‚Äéd‚Äég‚Äém‚Äée‚Äén‚Äét‚Äé ‚ÄéA‚Äég‚Äéa‚Äéi‚Äén‚Äés‚Äét‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé
5‚Äé,‚Äé6‚Äé3‚Äé2‚Äé
‚Äò‚ÄéM‚Äéa‚Äés‚Äés‚Äé ‚ÄéC‚Äéa‚Äés‚Äéu‚Äéa‚Äél‚Äét‚Äéy‚Äé ‚ÄéE‚Äév‚Äée‚Äén‚Äét‚Äé‚Äô‚Äé:‚Äé ‚Äé1‚Äé.‚Äé6‚Äé ‚ÄéM‚Äéi‚Äél‚Äée‚Äé ‚ÄéB‚Äéa‚Äél‚Äét‚Äéi‚Äém‚Äéo‚Äér‚Äée‚Äé ‚ÄéB‚Äér‚Äéi‚Äéd‚Äég‚Äée‚Äé ‚ÄéC‚Äéo‚Äél‚Äél‚Äéa‚Äép‚Äés‚Äée‚Äés‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéB‚Äée‚Äéi‚Äén‚Äég‚Äé ‚ÄéS‚Äét‚Äér‚Äéu‚Äéc‚Äék‚Äé ‚Äéb‚Äéy‚Äé ‚ÄéC‚Äéa‚Äér‚Äég‚Äéo‚Äé ‚Äé
'‚ÄéM‚Äéa‚Äés‚Äés‚Äé ‚ÄéC‚Äéa‚Äés‚Äéu‚Äéa‚Äél‚Äét‚Äéy‚Äé ‚ÄéE‚Äév‚Äée‚Äén‚Äét‚Äé'‚Äé:‚Äé ‚ÄéB‚Äéa‚Äél‚Äét‚Äéi‚Äém‚Äéo‚Äér‚Äée‚Äé ‚ÄéB‚Äér‚Äéi‚Äéd‚Äég‚Äée‚Äé ‚ÄéC‚Äéo‚Äél‚Äél‚Äéa‚Äép‚Äés‚Äée‚Äés‚Äé,‚Äé ‚ÄéH‚Äéi‚Äét‚Äé ‚Äéb‚Äéy‚Äé ‚ÄéC‚Äéa‚Äér‚Äég‚Äéo‚Äé ‚ÄéS‚Äéh‚Äéi‚Äép‚Äé
9‚Äé,‚Äé2‚Äé6‚Äé3‚Äé
R‚ÄéF‚ÄéK‚Äé ‚ÄéJ‚Äér‚Äé.‚Äé ‚ÄéV‚ÄéP‚Äé ‚ÄéP‚Äéi‚Äéc‚Äék‚Äé ‚ÄéN‚Äéi‚Äéc‚Äéo‚Äél‚Äée‚Äé ‚ÄéS‚Äéh‚Äéa‚Äén‚Äéa‚Äéh‚Äéa‚Äén‚Äé ‚Äéa‚Äé ‚ÄéL‚Äée‚Äéf‚Äét‚Äéi‚Äés‚Äét‚Äé ‚Äé‚Äò‚ÄéC‚Äér‚Äéi‚Äém‚Äéi‚Äén‚Äéa‚Äél‚Äé ‚ÄéJ‚Äéu‚Äés‚Äét‚Äéi‚Äéc‚Äée‚Äé‚Äô‚Äé ‚ÄéA‚Äéd‚Äév‚Äéo‚Äéc‚Äéa‚Äét‚Äée‚Äé ‚ÄéW‚Äéh‚Äéo‚Äé ‚ÄéH‚Äéa‚Äés‚Äé ‚ÄéG‚Äéi‚Äév‚Äée‚Äén‚Äé ‚ÄéT‚Äéh‚Äéo‚Äéu‚Äés‚Äéa‚Äén‚Äéd‚Äés‚Äé ‚Äét‚Äé
R‚ÄéF‚ÄéK‚Äé ‚ÄéJ‚Äér‚Äé.‚Äé ‚ÄéV‚ÄéP‚Äé ‚ÄéP‚Äéi‚Äéc‚Äék‚Äé ‚ÄéN‚Äéi‚Äéc‚Äéo‚Äél‚Äée‚Äé ‚ÄéS‚Äéh‚Äéa‚Äén‚Äéa‚Äéh‚Äéa‚Äén‚Äé ‚Äéa‚Äé ‚ÄéL‚Äée‚Äéf‚Äét‚Äéi‚Äés‚Äét‚Äé ‚Äé‚Äò‚ÄéC‚Äér‚Äéi‚Äém‚Äéi‚Äén‚Äéa‚Äél‚Äé ‚ÄéJ‚Äéu‚Äés‚Äét‚Äéi‚Äéc‚Äée‚Äé‚Äô‚Äé ‚ÄéA‚Äéd‚Äév‚Äéo‚Äéc‚Äéa‚Äét‚Äée‚Äé
9‚Äé5‚Äé0‚Äé
G‚Äér‚Äée‚Äée‚Äén‚Äée‚Äé:‚Äé ‚ÄéS‚Äép‚Äée‚Äéa‚Äék‚Äée‚Äér‚Äé ‚ÄéJ‚Äéo‚Äéh‚Äén‚Äés‚Äéo‚Äén‚Äé ‚ÄéS‚Äét‚Äéa‚Äéb‚Äéb‚Äéi‚Äén‚Äég‚Äé ‚ÄéG‚ÄéO‚ÄéP‚Äé ‚ÄéV‚Äéo‚Äét‚Äée‚Äér‚Äés‚Äé ‚Äéi‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéB‚Äéa‚Äéc‚Äék‚Äé,‚Äé ‚ÄéH‚Äée‚Äé ‚ÄéN‚Äée‚Äée‚Äéd‚Äés‚Äé ‚Äéa‚Äé ‚Äé‚Äò‚ÄéP‚Äéi‚Äén‚Äék‚Äé ‚ÄéS‚Äél‚Äéi‚Äép‚Äé‚Äô‚Äé
G‚Äér‚Äée‚Äée‚Äén‚Äée‚Äé:‚Äé ‚ÄéS‚Äép‚Äée‚Äéa‚Äék‚Äée‚Äér‚Äé ‚ÄéJ‚Äéo‚Äéh‚Äén‚Äés‚Äéo‚Äén‚Äé ‚ÄéS‚Äét‚Äéa‚Äéb‚Äéb‚Äéi‚Äén‚Äég‚Äé ‚ÄéG‚ÄéO‚ÄéP‚Äé ‚ÄéV‚Äéo‚Äét‚Äée‚Äér‚Äés‚Äé ‚ÄéI‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéB‚Äéa‚Äéc‚Äék‚Äé,‚Äé ‚ÄéN‚Äée‚Äée‚Äéd‚Äés‚Äé ‚Äé'‚ÄéP‚Äéi‚Äén‚Äék‚Äé ‚ÄéS‚Äél‚Äéi‚Äép‚Äé'‚Äé
1‚Äé5‚Äé6‚Äé
B‚Äér‚Äée‚Äét‚Äéi‚Äéb‚Äéa‚Äér‚Äét‚Äé ‚ÄéB‚Äéu‚Äés‚Äéi‚Äén‚Äée‚Äés‚Äés‚Äé ‚ÄéD‚Äéi‚Äég‚Äée‚Äés‚Äét‚Äé:‚Äé ‚ÄéT‚Äéh‚Äée‚Äé ‚ÄéE‚Äéc‚Äéo‚Äén‚Äéo‚Äém‚Äéi‚Äéc‚Äé ‚ÄéC‚Äéo‚Äén‚Äés‚Äée‚Äéq‚Äéu‚Äée‚Äén‚Äéc‚Äée‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéB‚Äéa‚Äél‚Äét‚Äéi‚Äém‚Äéo‚Äér‚Äée‚Äé ‚ÄéC‚Äéa‚Äét‚Äéa‚Äés‚Äét‚Äér‚Äéo‚Äép‚Äéh‚Äée‚Äé
B‚ÄéB‚ÄéD‚Äé:‚Äé ‚ÄéT‚Äéh‚Äée‚Äé ‚ÄéE‚Äéc‚Äéo‚Äén‚Äéo‚Äém‚Äéi‚Äéc‚Äé ‚ÄéC‚Äéo‚Äén‚Äés‚Äée‚Äéq‚Äéu‚Äée‚Äén‚Äéc‚Äée‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéB‚Äéa‚Äél‚Äét‚Äéi‚Äém‚Äéo‚Äér‚Äée‚Äé ‚ÄéC‚Äéa‚Äét‚Äéa‚Äés‚Äét‚Äér‚Äéo‚Äép‚Äéh‚Äée‚Äé
1‚Äé1‚Äé9‚Äé
1‚Äé3‚Äé ‚ÄéD‚Äée‚Äém‚Äéo‚Äéc‚Äér‚Äéa‚Äét‚Äé ‚ÄéS‚Äét‚Äéa‚Äét‚Äée‚Äé ‚ÄéA‚Äét‚Äét‚Äéo‚Äér‚Äén‚Äée‚Äéy‚Äés‚Äé ‚ÄéG‚Äée‚Äén‚Äée‚Äér‚Äéa‚Äél‚Äé ‚ÄéT‚Äéa‚Äér‚Äég‚Äée‚Äét‚Äé ‚ÄéG‚Äél‚Äéo‚Äéc‚Äék‚Äé,‚Äé ‚ÄéD‚Äée‚Äéc‚Äér‚Äéy‚Äé ‚Äé‚Äò‚ÄéM‚Äéa‚Äéc‚Äéh‚Äéi‚Äén‚Äée‚Äé-‚ÄéG‚Äéu‚Äén‚Äé ‚ÄéG‚Äél‚Äéo‚Äéc‚Äék‚Äés‚Äé‚Äô‚Äé
1‚Äé3‚Äé ‚ÄéB‚Äél‚Äéu‚Äée‚Äé ‚ÄéS‚Äét‚Äéa‚Äét‚Äée‚Äé ‚ÄéA‚Äét‚Äét‚Äéo‚Äér‚Äén‚Äée‚Äéy‚Äés‚Äé ‚ÄéG‚Äée‚Äén‚Äée‚Äér‚Äéa‚Äél‚Äé ‚ÄéF‚Äéo‚Äél‚Äél‚Äéo‚Äéw‚Äé ‚ÄéC‚Äéh‚Äéi‚Äéc‚Äéa‚Äég‚Äéo‚Äé'‚Äés‚Äé ‚ÄéL‚Äée‚Äéa‚Äéd‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéT‚Äéa‚Äér‚Äég‚Äée‚Äét‚Äé ‚ÄéG‚Äél‚Äéo‚Äéc‚Äék‚Äé
2‚Äé0‚Äé1‚Äé
V‚ÄéI‚ÄéD‚ÄéE‚ÄéO‚Äé:‚Äé ‚ÄéT‚Äée‚Äéa‚Äém‚Äés‚Äé ‚ÄéS‚Äée‚Äéa‚Äér‚Äéc‚Äéh‚Äéi‚Äén‚Äég‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚ÄéP‚Äée‚Äéo‚Äép‚Äél‚Äée‚Äé ‚ÄéW‚Äéh‚Äéo‚Äé ‚ÄéF‚Äée‚Äél‚Äél‚Äé ‚Äéi‚Äén‚Äét‚Äéo‚Äé ‚ÄéR‚Äéi‚Äév‚Äée‚Äér‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéB‚Äéa‚Äél‚Äét‚Äéi‚Äém‚Äéo‚Äér‚Äée‚Äé ‚ÄéB‚Äér‚Äéi‚Äéd‚Äég‚Äée‚Äé ‚ÄéC‚Äéo‚Äél‚Äél‚Äéa‚Äép‚Äés‚Äée‚Äé
V‚ÄéI‚ÄéD‚ÄéE‚ÄéO‚Äé:‚Äé ‚ÄéS‚Äée‚Äéa‚Äér‚Äéc‚Äéh‚Äé ‚ÄéU‚Äén‚Äéd‚Äée‚Äér‚Äéw‚Äéa‚Äéy‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚ÄéV‚Äéi‚Äéc‚Äét‚Äéi‚Äém‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéB‚Äéa‚Äél‚Äét‚Äéi‚Äém‚Äéo‚Äér‚Äée‚Äé ‚ÄéB‚Äér‚Äéi‚Äéd‚Äég‚Äée‚Äé ‚ÄéC‚Äéo‚Äél‚Äél‚Äéa‚Äép‚Äés‚Äée‚Äé

P‚Äéo‚Äél‚Äéi‚Äéc‚Äée‚Äé ‚ÄéA‚Äér‚Äér‚Äée‚Äés‚Äét‚Äé ‚ÄéG‚Äér‚Äéo‚Äéi‚Äéd‚Äé ‚ÄéR‚Äéa‚Äép‚Äéi‚Äés‚Äét‚Äé ‚Äéi‚Äén‚Äé ‚ÄéS‚Äéo‚Äéu‚Äét‚Äéh‚Äé ‚ÄéP‚Äéh‚Äéi‚Äél‚Äél‚Äéy‚Äé ‚ÄéW‚Äéh‚Äéo‚Äé ‚ÄéG‚Äéa‚Äév‚Äée‚Äé ‚ÄéM‚Äéu‚Äél‚Äét‚Äéi‚Äép‚Äél‚Äée‚Äé ‚ÄéW‚Äéo‚Äém‚Äée‚Äén‚Äé ‚ÄéA‚ÄéI‚ÄéD‚ÄéS‚Äé.‚Äé

H‚Äéo‚Äép‚Äée‚Äéf‚Äéu‚Äél‚Äél‚Äéy‚Äé ‚Äéo‚Äén‚Äéc‚Äée‚Äé ‚Äéa‚Äél‚Äél‚Äé ‚Äéf‚Äéa‚Äég‚Äég‚Äéo‚Äét‚Äér‚Äéy‚Äé ‚Äéh‚Äéa‚Äés‚Äé ‚Äée‚Äén‚Äéd‚Äée‚Äéd‚Äé,‚Äé ‚Äét‚Äéh‚Äéi‚Äés‚Äé ‚Äéw‚Äéo‚Äén‚Äé'‚Äét‚Äé ‚Äéh‚Äéa‚Äép‚Äép‚Äée‚Äén‚Äé ‚Äéa‚Äég‚Äéa‚Äéi‚Äén‚Äé.‚Äé


D‚Äée‚Äél‚Äéa‚Äéw‚Äéa‚Äér‚Äée‚Äé ‚ÄéD‚Äéi‚Äén‚Äéd‚Äéu‚Äé ‚ÄéA‚Äér‚Äér‚Äée‚Äés‚Äét‚Äée‚Äéd‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéS‚Äét‚Äéu‚Äéf‚Äéf‚Äéi‚Äén‚Äég‚Äé ‚ÄéD‚Äée‚Äéa‚Äéd‚Äé ‚ÄéW‚Äéh‚Äéi‚Äét‚Äée‚Äé ‚ÄéW‚Äéo‚Äém‚Äéa‚Äén‚Äé ‚Äéi‚Äén‚Äé ‚ÄéH‚Äéi‚Äés‚Äé ‚ÄéC‚Äéa‚Äér‚Äé.‚Äé


M‚Äéi‚Äéc‚Äéh‚Äéi‚Äég‚Äéa‚Äén‚Äé:‚Äé ‚ÄéS‚Äép‚Äéi‚Äéc‚Äé ‚ÄéA‚Äér‚Äér‚Äée‚Äés‚Äét‚Äée‚Äéd‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äé6‚Äét‚Äéh‚Äé ‚ÄéD‚ÄéU‚ÄéI‚Äé.‚Äé


S‚Äée‚Äéa‚Äét‚Äét‚Äél‚Äée‚Äé:‚Äé ‚Äé2‚Äé6‚Äé ‚ÄéC‚Äéh‚Äéi‚Äén‚Äék‚Äé ‚ÄéB‚Äéi‚Äét‚Äéc‚Äéh‚Äée‚Äés‚Äé ‚ÄéA‚Äér‚Äér‚Äée‚Äés‚Äét‚Äée‚Äéd‚Äé ‚Äéi‚Äén‚Äé ‚ÄéM‚Äéa‚Äés‚Äés‚Äéa‚Äég‚Äée‚Äé ‚ÄéP‚Äéa‚Äér‚Äél‚Äéo‚Äér‚Äé ‚ÄéH‚Äéu‚Äém‚Äéa‚Äén‚Äé ‚ÄéT‚Äér‚Äéa‚Äéf‚Äéf‚Äéi‚Äéc‚Äék‚Äéi‚Äén‚Äég‚Äé ‚ÄéB‚Äéu‚Äés‚Äét‚Äé.‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé ‚ÄéW‚Äée‚Äéa‚Äét‚Äéh‚Äée‚Äér‚Äé.‚Äé

1‚Äé0‚Äé ‚ÄéD‚Äéa‚Äéy‚Äé ‚ÄéW‚Äée‚Äéa‚Äét‚Äéh‚Äée‚Äér‚Äé-‚ÄéD‚Äéa‚Äél‚Äée‚Äé,‚Äé ‚ÄéT‚ÄéX‚Äé
A‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äé7‚Äé:‚Äé5‚Äé6‚Äé ‚Äéa‚Äém‚Äé ‚ÄéC‚ÄéD‚ÄéT‚Äé
T‚Äéo‚Äéd‚Äéa‚Äéy‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
6‚Äé8‚Äé¬∞‚Äé
/‚Äé4‚Äé5‚Äé¬∞‚Äé
1‚Äé%‚Äé
N‚ÄéN‚ÄéE‚Äé ‚Äé1‚Äé2‚Äé ‚Äém‚Äép‚Äéh‚Äé
T‚Äéu‚Äée‚Äé ‚Äé2‚Äé6‚Äé ‚Äé|‚Äé ‚ÄéD‚Äéa‚Äéy‚Äé
6‚Äé8‚Äé¬∞‚Äé
1‚Äé%‚Äé
N‚ÄéN‚ÄéE‚Äé
1‚Äé2‚Äé
 ‚Äé
m‚Äép‚Äéh‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé.‚Äé ‚ÄéH‚Äéi‚Äég‚Äéh‚Äé ‚Äé6‚Äé8‚ÄéF‚Äé.‚Äé ‚ÄéW‚Äéi‚Äén‚Äéd‚Äés‚Äé ‚ÄéN‚ÄéN‚ÄéE‚Äé ‚Äéa‚Äét‚Äé ‚Äé1‚Äé0‚Äé ‚Äét‚Äéo‚Äé ‚Äé1‚Äé5‚Äé ‚Äém‚Äép‚Äéh‚Äé.‚Äé
 ‚Äé
H‚Äéu‚Äém‚Äéi‚Äéd‚Äéi‚Äét‚Äéy‚Äé
4‚Äé9‚Äé%‚Äé
U‚ÄéV‚Äé ‚ÄéI‚Äén‚Äéd‚Äée‚Äéx‚Äé
9‚Äé ‚Äéo‚Äéf‚Äé ‚Äé1‚Äé1‚Äé
S‚Äéu‚Äén‚Äér‚Äéi‚Äés‚Äée‚Äé
7‚Äé:‚Äé2‚Äé5‚Äé ‚Äéa‚Äém‚Äé
S‚Äéu‚Äén‚Äés‚Äée‚Äét‚Äé
7‚Äé:‚Äé4‚Äé5‚Äé ‚Äép‚Äém‚Äé
T‚Äéu‚Äée‚Äé ‚Äé2‚Äé6‚Äé ‚Äé|‚Äé ‚ÄéN‚Äéi‚Äég‚Äéh‚Äét‚Äé
4‚Äé5‚Äé¬∞‚Äé
5‚Äé%‚Äé
N‚ÄéE‚Äé
7‚Äé
 ‚Äé
m‚Äép‚Äéh‚Äé
C‚Äél‚Äée‚Äéa‚Äér‚Äé ‚Äét‚Äéo‚Äé ‚Äép‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚Äéc‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé.‚Äé ‚ÄéL‚Äéo‚Äéw‚Äé ‚Äén‚Äée‚Äéa‚Äér‚Äé ‚Äé4‚Äé5‚ÄéF‚Äé.‚Äé ‚ÄéW‚Äéi‚Äén‚Äéd‚Äés‚Äé ‚ÄéN‚ÄéE‚Äé ‚Äéa‚Äét‚Äé ‚Äé5‚Äé ‚Äét‚Äéo‚Äé ‚Äé1‚Äé0‚Äé ‚Äém‚Äép‚Äéh‚Äé.‚Äé
 ‚Äé
H‚Äéu‚Äém‚Äéi‚Äéd‚Äéi‚Äét‚Äéy‚Äé
7‚Äé1‚Äé%‚Äé
U‚ÄéV‚Äé ‚ÄéI‚Äén‚Äéd‚Äée‚Äéx‚Äé
0‚Äé ‚Äéo‚Äéf‚Äé ‚Äé1‚Äé1‚Äé
M‚Äéo‚Äéo‚Äén‚Äér‚Äéi‚Äés‚Äée‚Äé
9‚Äé:‚Äé1‚Äé3‚Äé ‚Äép‚Äém‚Äé
W‚Äéa‚Äén‚Äéi‚Äén‚Äég‚Äé ‚ÄéG‚Äéi‚Äéb‚Äéb‚Äéo‚Äéu‚Äés‚Äé
M‚Äéo‚Äéo‚Äén‚Äés‚Äée‚Äét‚Äé
8‚Äé:‚Äé0‚Äé6‚Äé ‚Äéa‚Äém‚Äé
W‚Äée‚Äéd‚Äé ‚Äé2‚Äé7‚Äé
A‚ÄéM‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äés‚Äé/‚ÄéP‚ÄéM‚Äé ‚ÄéS‚Äéu‚Äén‚Äé
6‚Äé9‚Äé¬∞‚Äé
/‚Äé4‚Äé5‚Äé¬∞‚Äé
1‚Äé6‚Äé%‚Äé
W‚ÄéS‚ÄéW‚Äé ‚Äé9‚Äé ‚Äém‚Äép‚Äéh‚Äé
T‚Äéh‚Äéu‚Äé ‚Äé2‚Äé8‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
7‚Äé7‚Äé¬∞‚Äé
/‚Äé5‚Äé6‚Äé¬∞‚Äé
9‚Äé%‚Äé
S‚Äé ‚Äé8‚Äé ‚Äém‚Äép‚Äéh‚Äé
F‚Äér‚Äéi‚Äé ‚Äé2‚Äé9‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
7‚Äé8‚Äé¬∞‚Äé
/‚Äé5‚Äé9‚Äé¬∞‚Äé
1‚Äé3‚Äé%‚Äé
S‚Äé ‚Äé1‚Äé8‚Äé ‚Äém‚Äép‚Äéh‚Äé
S‚Äéa‚Äét‚Äé ‚Äé3‚Äé0‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
8‚Äé2‚Äé¬∞‚Äé
/‚Äé6‚Äé3‚Äé¬∞‚Äé
8‚Äé%‚Äé
S‚Äé ‚Äé1‚Äé3‚Äé ‚Äém‚Äép‚Äéh‚Äé
S‚Äéu‚Äén‚Äé ‚Äé3‚Äé1‚Äé
C‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
8‚Äé2‚Äé¬∞‚Äé
/‚Äé6‚Äé8‚Äé¬∞‚Äé
1‚Äé9‚Äé%‚Äé
S‚Äé ‚Äé1‚Äé4‚Äé ‚Äém‚Äép‚Äéh‚Äé
M‚Äéo‚Äén‚Äé ‚Äé0‚Äé1‚Äé
C‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
9‚Äé1‚Äé¬∞‚Äé
/‚Äé6‚Äé6‚Äé¬∞‚Äé
8‚Äé%‚Äé
S‚Äé ‚Äé1‚Äé2‚Äé ‚Äém‚Äép‚Äéh‚Äé
T‚Äéu‚Äée‚Äé ‚Äé0‚Äé2‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
7‚Äé7‚Äé¬∞‚Äé
/‚Äé5‚Äé3‚Äé¬∞‚Äé
2‚Äé1‚Äé%‚Äé
N‚Äé ‚Äé1‚Äé5‚Äé ‚Äém‚Äép‚Äéh‚Äé
W‚Äée‚Äéd‚Äé ‚Äé0‚Äé3‚Äé
A‚ÄéM‚Äé ‚ÄéS‚Äéh‚Äéo‚Äéw‚Äée‚Äér‚Äés‚Äé
7‚Äé1‚Äé¬∞‚Äé
/‚Äé4‚Äé9‚Äé¬∞‚Äé
3‚Äé5‚Äé%‚Äé
N‚Äé ‚Äé1‚Äé3‚Äé ‚Äém‚Äép‚Äéh‚Äé
T‚Äéh‚Äéu‚Äé ‚Äé0‚Äé4‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
7‚Äé4‚Äé¬∞‚Äé
/‚Äé5‚Äé2‚Äé¬∞‚Äé
1‚Äé1‚Äé%‚Äé
N‚ÄéE‚Äé ‚Äé9‚Äé ‚Äém‚Äép‚Äéh‚Äé
F‚Äér‚Äéi‚Äé ‚Äé0‚Äé5‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
7‚Äé9‚Äé¬∞‚Äé
/‚Äé5‚Äé6‚Äé¬∞‚Äé
5‚Äé%‚Äé
S‚ÄéE‚Äé ‚Äé1‚Äé1‚Äé ‚Äém‚Äép‚Äéh‚Äé
S‚Äéa‚Äét‚Äé ‚Äé0‚Äé6‚Äé
P‚ÄéM‚Äé ‚ÄéS‚Äéh‚Äéo‚Äéw‚Äée‚Äér‚Äés‚Äé
7‚Äé8‚Äé¬∞‚Äé
/‚Äé6‚Äé3‚Äé¬∞‚Äé
3‚Äé8‚Äé%‚Äé
S‚ÄéS‚ÄéE‚Äé ‚Äé1‚Äé2‚Äé ‚Äém‚Äép‚Äéh‚Äé
S‚Äéu‚Äén‚Äé ‚Äé0‚Äé7‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
8‚Äé3‚Äé¬∞‚Äé
/‚Äé6‚Äé2‚Äé¬∞‚Äé
2‚Äé4‚Äé%‚Äé
S‚ÄéS‚ÄéE‚Äé ‚Äé1‚Äé0‚Äé ‚Äém‚Äép‚Äéh‚Äé
M‚Äéo‚Äén‚Äé ‚Äé0‚Äé8‚Äé
I‚Äés‚Äéo‚Äél‚Äéa‚Äét‚Äée‚Äéd‚Äé ‚ÄéT‚Äéh‚Äéu‚Äén‚Äéd‚Äée‚Äér‚Äés‚Äét‚Äéo‚Äér‚Äém‚Äés‚Äé
8‚Äé3‚Äé¬∞‚Äé
/‚Äé6‚Äé1‚Äé¬∞‚Äé
3‚Äé3‚Äé%‚Äé
S‚ÄéE‚Äé ‚Äé1‚Äé1‚Äé ‚Äém‚Äép‚Äéh‚Äé
T‚Äéu‚Äée‚Äé ‚Äé0‚Äé9‚Äé
P‚Äéa‚Äér‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
7‚Äé7‚Äé¬∞‚Äé
/‚Äé5‚Äé7‚Äé¬∞‚Äé
2‚Äé4‚Äé%‚Äé
E‚Äé ‚Äé1‚Äé0‚Äé ‚Äém‚Äép‚Äéh‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

C‚Äéu‚Äér‚Äér‚Äée‚Äén‚Äét‚Äé ‚Äét‚Äéh‚Äér‚Äée‚Äéa‚Äét‚Äé:‚Äé ‚ÄéP‚Äéa‚Äék‚Äéi‚Äé ‚ÄéH‚Äéa‚Äéc‚Äék‚Äée‚Äér‚Äés‚Äé.‚Äé ‚Äéüßîüèæ‚Äç‚ôÇÔ∏è

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

B‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé ‚ÄéA‚Äén‚Äén‚Äé ‚ÄéS‚Äép‚Äée‚Äén‚Äéc‚Äée‚Äér‚Äé
B‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé ‚ÄéA‚Äén‚Äén‚Äé ‚ÄéS‚Äép‚Äée‚Äén‚Äéc‚Äée‚Äér‚Äé ‚Äé(‚Äéa‚Äé.‚Äék‚Äé.‚Äéa‚Äé.‚Äé ‚ÄéT‚Äéh‚Äée‚Äé ‚ÄéG‚Äéa‚Äér‚Äéf‚Äéi‚Äée‚Äél‚Äéd‚Äé ‚ÄéK‚Äéi‚Äél‚Äél‚Äée‚Äér‚Äé)‚Äé ‚Äéw‚Äéa‚Äés‚Äé ‚Äéa‚Äén‚Äé ‚Äée‚Äéd‚Äég‚Äéy‚Äé ‚Äé1‚Äé6‚Äé-‚Äéy‚Äée‚Äéa‚Äér‚Äé-‚Äéo‚Äél‚Äéd‚Äé ‚Äél‚Äée‚Äés‚Äéb‚Äéi‚Äéa‚Äén‚Äé ‚Äég‚Äéi‚Äén‚Äég‚Äée‚Äér‚Äé ‚Äéw‚Äéh‚Äéo‚Äés‚Äée‚Äé ‚Äér‚Äée‚Äét‚Äéa‚Äér‚Äéd‚Äée‚Äéd‚Äé ‚Äéa‚Äél‚Äéc‚Äéo‚Äéh‚Äéo‚Äél‚Äéi‚Äéc‚Äé ‚Äéd‚Äéa‚Äéd‚Äéd‚Äéy‚Äé ‚Äém‚Äéa‚Äéd‚Äée‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéb‚Äér‚Äéi‚Äél‚Äél‚Äéi‚Äéa‚Äén‚Äét‚Äé ‚Äéd‚Äée‚Äéc‚Äéi‚Äés‚Äéi‚Äéo‚Äén‚Äé ‚Äét‚Äéo‚Äé ‚Äéb‚Äéu‚Äéy‚Äé ‚Äéh‚Äée‚Äér‚Äé ‚Äéa‚Äé ‚Äér‚Äéi‚Äéf‚Äél‚Äée‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚ÄéC‚Äéh‚Äér‚Äéi‚Äés‚Äét‚Äém‚Äéa‚Äés‚Äé ‚Äéd‚Äée‚Äés‚Äép‚Äéi‚Äét‚Äée‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéf‚Äéa‚Äéc‚Äét‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äéh‚Äée‚Äé ‚Äéh‚Äéa‚Äéd‚Äé ‚Äéb‚Äée‚Äée‚Äén‚Äé ‚Äém‚Äéo‚Äél‚Äée‚Äés‚Äét‚Äéi‚Äén‚Äég‚Äé ‚Äéh‚Äée‚Äér‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äéy‚Äée‚Äéa‚Äér‚Äés‚Äé.‚Äé ‚ÄéO‚Äén‚Äé ‚ÄéM‚Äéo‚Äén‚Äéd‚Äéa‚Äéy‚Äé,‚Äé ‚ÄéJ‚Äéa‚Äén‚Äéu‚Äéa‚Äér‚Äéy‚Äé ‚Äé2‚Äé9‚Äé,‚Äé ‚Äé1‚Äé9‚Äé7‚Äé9‚Äé,‚Äé ‚Äéf‚Äéi‚Äén‚Äéa‚Äél‚Äél‚Äéy‚Äé ‚Äéf‚Äée‚Äéd‚Äé ‚Äéu‚Äép‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äéy‚Äée‚Äéa‚Äér‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äéa‚Äéb‚Äéu‚Äés‚Äée‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéh‚Äéi‚Äég‚Äéh‚Äé ‚Äéa‚Äés‚Äé ‚Äéf‚Äéu‚Äéc‚Äék‚Äé ‚Äéo‚Äén‚Äé ‚Äéa‚Äé ‚Äéc‚Äéo‚Äém‚Äéb‚Äéi‚Äén‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéP‚ÄéC‚ÄéP‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéa‚Äél‚Äéc‚Äéo‚Äéh‚Äéo‚Äél‚Äé,‚Äé ‚ÄéB‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé ‚Äéd‚Äée‚Äéc‚Äéi‚Äéd‚Äée‚Äéd‚Äé ‚Äét‚Äéo‚Äé ‚Äét‚Äéa‚Äék‚Äée‚Äé ‚Äéo‚Äéu‚Äét‚Äé ‚Äéh‚Äée‚Äér‚Äé ‚Äéb‚Äér‚Äéa‚Äén‚Äéd‚Äé-‚Äés‚Äép‚Äéa‚Äén‚Äék‚Äéi‚Äén‚Äég‚Äé-‚Äén‚Äée‚Äéw‚Äé ‚ÄéR‚Äéu‚Äég‚Äée‚Äér‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äée‚Äén‚Äéd‚Äé ‚Äéh‚Äée‚Äér‚Äé ‚Äém‚Äéi‚Äés‚Äée‚Äér‚Äéa‚Äéb‚Äél‚Äée‚Äé ‚Äél‚Äéi‚Äéf‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚Äés‚Äét‚Äéy‚Äél‚Äée‚Äé.‚Äé ‚ÄéB‚Äée‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéo‚Äéo‚Äé ‚Äém‚Äéu‚Äéc‚Äéh‚Äé ‚Äéo‚Äéf‚Äé ‚Äéa‚Äé ‚Äéf‚Äéu‚Äéc‚Äék‚Äéi‚Äén‚Äég‚Äé ‚Äép‚Äéu‚Äés‚Äés‚Äéy‚Äé ‚Äét‚Äéo‚Äé ‚Äéj‚Äéu‚Äés‚Äét‚Äé ‚Äéb‚Äél‚Äéo‚Äéw‚Äé ‚Äéa‚Äé ‚Äéh‚Äéo‚Äél‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚Äéh‚Äée‚Äér‚Äé ‚Äéd‚Äéa‚Äéd‚Äéd‚Äéy‚Äé'‚Äés‚Äé ‚Äéh‚Äée‚Äéa‚Äéd‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéf‚Äée‚Äée‚Äél‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äéi‚Äét‚Äé ‚Äéw‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚Äéb‚Äée‚Äé ‚Äét‚Äéo‚Äéo‚Äé ‚Äéh‚Äée‚Äét‚Äée‚Äér‚Äéo‚Äés‚Äée‚Äéx‚Äéu‚Äéa‚Äél‚Äé ‚Äét‚Äéo‚Äé ‚Äés‚Äét‚Äéi‚Äéc‚Äék‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéb‚Äéa‚Äér‚Äér‚Äée‚Äél‚Äé ‚Äéo‚Äéf‚Äé ‚Äéa‚Äé ‚Äég‚Äéu‚Äén‚Äé ‚Äéi‚Äén‚Äé ‚Äéh‚Äée‚Äér‚Äé ‚Äém‚Äéo‚Äéu‚Äét‚Äéh‚Äé,‚Äé ‚ÄéB‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé ‚Äéi‚Äén‚Äés‚Äét‚Äée‚Äéa‚Äéd‚Äé ‚Äéd‚Äée‚Äéc‚Äéi‚Äéd‚Äée‚Äéd‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äés‚Äéh‚Äée‚Äé ‚Äéw‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚Äég‚Äée‚Äét‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äép‚Äéo‚Äél‚Äéi‚Äéc‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚Äéd‚Äéo‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéj‚Äéo‚Äéb‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äéh‚Äée‚Äér‚Äé.‚Äé

S‚Äée‚Äée‚Äéi‚Äén‚Äég‚Äé ‚Äéa‚Äés‚Äé ‚Äés‚Äéh‚Äée‚Äé ‚Äél‚Äéi‚Äév‚Äée‚Äéd‚Äé ‚Äéd‚Äéi‚Äér‚Äée‚Äéc‚Äét‚Äél‚Äéy‚Äé ‚Äéa‚Äéc‚Äér‚Äéo‚Äés‚Äés‚Äé ‚Äéf‚Äér‚Äéo‚Äém‚Äé ‚ÄéG‚Äér‚Äéo‚Äév‚Äée‚Äér‚Äé ‚ÄéC‚Äél‚Äée‚Äév‚Äée‚Äél‚Äéa‚Äén‚Äéd‚Äé ‚ÄéE‚Äél‚Äée‚Äém‚Äée‚Äén‚Äét‚Äéa‚Äér‚Äéy‚Äé ‚ÄéS‚Äéc‚Äéh‚Äéo‚Äéo‚Äél‚Äé ‚Äéi‚Äén‚Äé ‚ÄéS‚Äéa‚Äén‚Äé ‚ÄéD‚Äéi‚Äée‚Äég‚Äéo‚Äé,‚Äé ‚ÄéB‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé ‚Äéd‚Äée‚Äéc‚Äéi‚Äéd‚Äée‚Äéd‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéf‚Äéa‚Äés‚Äét‚Äée‚Äés‚Äét‚Äé ‚Äéw‚Äéa‚Äéy‚Äé ‚Äét‚Äéo‚Äé ‚Äég‚Äée‚Äét‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéc‚Äéo‚Äép‚Äés‚Äé ‚Äét‚Äéo‚Äé ‚Äéc‚Äéo‚Äém‚Äée‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéb‚Äél‚Äéo‚Äéw‚Äé ‚Äéh‚Äée‚Äér‚Äé ‚Äéb‚Äér‚Äéa‚Äéi‚Äén‚Äés‚Äé ‚Äéo‚Äéu‚Äét‚Äé ‚Äéw‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚Äéb‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚Äés‚Äén‚Äéi‚Äép‚Äée‚Äé ‚Äés‚Äéo‚Äém‚Äée‚Äé ‚Äés‚Äéq‚Äéu‚Äée‚Äéa‚Äék‚Äée‚Äér‚Äés‚Äé ‚Äéf‚Äér‚Äéo‚Äém‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéc‚Äéo‚Äém‚Äéf‚Äéo‚Äér‚Äét‚Äé ‚Äéo‚Äéf‚Äé ‚Äéh‚Äée‚Äér‚Äé ‚Äéb‚Äée‚Äéd‚Äér‚Äéo‚Äéo‚Äém‚Äé.‚Äé ‚ÄéU‚Äén‚Äéf‚Äéo‚Äér‚Äét‚Äéu‚Äén‚Äéa‚Äét‚Äée‚Äél‚Äéy‚Äé,‚Äé ‚Äéd‚Äée‚Äés‚Äép‚Äéi‚Äét‚Äée‚Äé ‚Äém‚Äéa‚Äén‚Äéa‚Äég‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéo‚Äé ‚Äék‚Äéi‚Äél‚Äél‚Äé ‚Äéb‚Äéo‚Äét‚Äéh‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äés‚Äéc‚Äéh‚Äéo‚Äéo‚Äél‚Äé ‚Äép‚Äér‚Äéi‚Äén‚Äéc‚Äéi‚Äép‚Äéa‚Äél‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéc‚Äéu‚Äés‚Äét‚Äéo‚Äéd‚Äéi‚Äéa‚Äén‚Äé,‚Äé ‚ÄéB‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé ‚Äéh‚Äéa‚Äéd‚Äé ‚Äén‚Äée‚Äég‚Äél‚Äée‚Äéc‚Äét‚Äée‚Äéd‚Äé ‚Äét‚Äéo‚Äé ‚Äéf‚Äéa‚Äéc‚Äét‚Äéo‚Äér‚Äé ‚Äéi‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéf‚Äéa‚Äéc‚Äét‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äép‚Äéo‚Äél‚Äéi‚Äéc‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚ÄéC‚Äéo‚Äém‚Äém‚Äéi‚Äée‚Äéf‚Äéo‚Äér‚Äén‚Äéi‚Äéa‚Äé ‚Äéw‚Äéo‚Äéu‚Äél‚Äéd‚Äé ‚Äéb‚Äée‚Äé ‚Äét‚Äéo‚Äéo‚Äé ‚Äéf‚Äéu‚Äéc‚Äék‚Äéi‚Äén‚Äég‚Äé ‚Äés‚Äéo‚Äéf‚Äét‚Äé ‚Äét‚Äéo‚Äé ‚Äés‚Äéh‚Äéo‚Äéo‚Äét‚Äé ‚Äéa‚Äé ‚Äé1‚Äé6‚Äé-‚Äéy‚Äée‚Äéa‚Äér‚Äé-‚Äéo‚Äél‚Äéd‚Äé ‚Äéw‚Äéh‚Äéi‚Äét‚Äée‚Äé ‚Äéb‚Äéi‚Äét‚Äéc‚Äéh‚Äé ‚Äée‚Äév‚Äée‚Äén‚Äé ‚Äéi‚Äéf‚Äé ‚Äés‚Äéh‚Äée‚Äé ‚Äéw‚Äéa‚Äés‚Äé ‚Äés‚Äéh‚Äéo‚Äéo‚Äét‚Äéi‚Äén‚Äég‚Äé ‚Äéd‚Äéi‚Äér‚Äée‚Äéc‚Äét‚Äél‚Äéy‚Äé ‚Äéa‚Äét‚Äé ‚Äéc‚Äéh‚Äéi‚Äél‚Äéd‚Äér‚Äée‚Äén‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéc‚Äéo‚Äép‚Äés‚Äé.‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚Äéb‚Äée‚Äéi‚Äén‚Äég‚Äé ‚Äéa‚Äér‚Äér‚Äée‚Äés‚Äét‚Äée‚Äéd‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéa‚Äés‚Äék‚Äée‚Äéd‚Äé ‚Äéw‚Äéh‚Äéy‚Äé ‚Äés‚Äéh‚Äée‚Äé ‚Äéd‚Äéi‚Äéd‚Äé ‚Äéi‚Äét‚Äé,‚Äé ‚ÄéB‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé ‚Äér‚Äée‚Äés‚Äép‚Äéo‚Äén‚Äéd‚Äée‚Äéd‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéu‚Äén‚Äéf‚Äéo‚Äér‚Äég‚Äée‚Äét‚Äét‚Äéa‚Äéb‚Äél‚Äée‚Äé ‚Äép‚Äéh‚Äér‚Äéa‚Äés‚Äée‚Äé ‚Äé""‚ÄéI‚Äé ‚Äéd‚Äéo‚Äén‚Äé'‚Äét‚Äé ‚Äél‚Äéi‚Äék‚Äée‚Äé ‚ÄéM‚Äéo‚Äén‚Äéd‚Äéa‚Äéy‚Äés‚Äé.‚Äé""‚Äé

D‚Äée‚Äés‚Äép‚Äéi‚Äét‚Äée‚Äé ‚Äéu‚Äét‚Äét‚Äée‚Äér‚Äél‚Äéy‚Äé ‚Äéf‚Äéa‚Äéi‚Äél‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéo‚Äé ‚Äék‚Äéi‚Äél‚Äél‚Äé ‚Äéh‚Äée‚Äér‚Äés‚Äée‚Äél‚Äéf‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äés‚Äét‚Äéi‚Äél‚Äél‚Äé ‚Äéb‚Äée‚Äéi‚Äén‚Äég‚Äé ‚Äéa‚Äél‚Äéi‚Äév‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚Äét‚Äéh‚Äéi‚Äés‚Äé ‚Äév‚Äée‚Äér‚Äéy‚Äé ‚Äéd‚Äéa‚Äéy‚Äé,‚Äé ‚ÄéB‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé ‚ÄéA‚Äén‚Äén‚Äé ‚ÄéS‚Äép‚Äée‚Äén‚Äéc‚Äée‚Äér‚Äé ‚Äéd‚Äéi‚Äéd‚Äé ‚Äéh‚Äée‚Äél‚Äép‚Äé ‚Äém‚Äéa‚Äék‚Äée‚Äé ‚ÄéA‚Äém‚Äée‚Äér‚Äéi‚Äéc‚Äéa‚Äé'‚Äés‚Äé ‚ÄéN‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äéa‚Äél‚Äé ‚ÄéP‚Äéa‚Äés‚Äét‚Äéi‚Äém‚Äée‚Äé ‚Äép‚Äéo‚Äép‚Äéu‚Äél‚Äéa‚Äér‚Äé ‚Äéa‚Äég‚Äéa‚Äéi‚Äén‚Äé ‚Äéf‚Äéo‚Äél‚Äél‚Äéo‚Äéw‚Äéi‚Äén‚Äég‚Äé ‚Äéa‚Äé ‚Äén‚Äée‚Äéa‚Äér‚Äél‚Äéy‚Äé ‚Äé1‚Äé5‚Äé ‚Äéy‚Äée‚Äéa‚Äér‚Äé ‚Äéh‚Äéi‚Äéa‚Äét‚Äéu‚Äés‚Äé ‚Äés‚Äéi‚Äén‚Äéc‚Äée‚Äé ‚ÄéC‚Äéh‚Äéa‚Äér‚Äél‚Äée‚Äés‚Äé ‚ÄéW‚Äéh‚Äéi‚Äét‚Äém‚Äéa‚Äén‚Äé'‚Äés‚Äé ‚ÄéT‚Äéu‚Äém‚Äéo‚Äér‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äé5‚Äé0‚Äé ‚Äéy‚Äée‚Äéa‚Äér‚Äés‚Äé ‚Äés‚Äéi‚Äén‚Äéc‚Äée‚Äé ‚ÄéA‚Äén‚Äéd‚Äér‚Äée‚Äéw‚Äé ‚ÄéK‚Äée‚Äéh‚Äéo‚Äée‚Äé ‚Äéi‚Äén‚Äév‚Äée‚Äén‚Äét‚Äée‚Äéd‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äés‚Äép‚Äéo‚Äér‚Äét‚Äé ‚Äéb‚Äéy‚Äé ‚Äéb‚Äél‚Äéo‚Äéw‚Äéi‚Äén‚Äég‚Äé ‚Äéu‚Äép‚Äé ‚Äéa‚Äé ‚Äéf‚Äéu‚Äéc‚Äék‚Äéi‚Äén‚Äég‚Äé ‚Äée‚Äél‚Äée‚Äém‚Äée‚Äén‚Äét‚Äéa‚Äér‚Äéy‚Äé ‚Äés‚Äéc‚Äéh‚Äéo‚Äéo‚Äél‚Äé.‚Äé ‚ÄéB‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé ‚Äéi‚Äés‚Äé ‚Äéa‚Äél‚Äés‚Äéo‚Äé ‚Äén‚Äéo‚Äét‚Äéa‚Äéb‚Äél‚Äée‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äéb‚Äée‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéf‚Äéi‚Äér‚Äés‚Äét‚Äé ‚Äéw‚Äéo‚Äém‚Äéa‚Äén‚Äé ‚Äét‚Äéo‚Äé ‚Äép‚Äéa‚Äér‚Äét‚Äéi‚Äéc‚Äéi‚Äép‚Äéa‚Äét‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚Äés‚Äéc‚Äéh‚Äéo‚Äéo‚Äél‚Äé ‚Äés‚Äéh‚Äéo‚Äéo‚Äét‚Äéi‚Äén‚Äég‚Äé ‚Äéu‚Äén‚Äéd‚Äée‚Äér‚Äé ‚ÄéT‚Äéi‚Äét‚Äél‚Äée‚Äé ‚ÄéI‚ÄéX‚Äé.‚Äé

W‚Äéh‚Äéi‚Äél‚Äée‚Äé ‚ÄéB‚Äér‚Äée‚Äén‚Äéd‚Äéa‚Äé'‚Äés‚Äé ‚Äéh‚Äéi‚Äég‚Äéh‚Äé ‚Äés‚Äéc‚Äéo‚Äér‚Äée‚Äé ‚Äéo‚Äéf‚Äé ‚Äéa‚Äé ‚Äém‚Äée‚Äér‚Äée‚Äé ‚Äé2‚Äé ‚Äék‚Äéi‚Äél‚Äél‚Äés‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äé9‚Äé ‚Äéi‚Äén‚Äéj‚Äéu‚Äér‚Äéi‚Äée‚Äés‚Äé ‚Äéi‚Äés‚Äé ‚Äél‚Äéa‚Äéu‚Äég‚Äéh‚Äéa‚Äéb‚Äél‚Äéy‚Äé ‚Äéh‚Äéo‚Äér‚Äér‚Äéi‚Äéb‚Äél‚Äée‚Äé,‚Äé ‚Äés‚Äéh‚Äée‚Äé ‚Äés‚Äét‚Äéi‚Äél‚Äél‚Äé ‚Äém‚Äéa‚Äén‚Äéa‚Äég‚Äée‚Äéd‚Äé ‚Äét‚Äéo‚Äé ‚Äéb‚Äée‚Äéa‚Äét‚Äé ‚Äéo‚Äéu‚Äét‚Äé ‚ÄéE‚Äén‚Äéc‚Äéy‚Äéc‚Äél‚Äéo‚Äép‚Äé√¶‚Äéd‚Äéi‚Äéa‚Äé ‚ÄéD‚Äér‚Äéa‚Äém‚Äéa‚Äét‚Äéi‚Äéc‚Äéa‚Äé'‚Äés‚Äé ‚Äév‚Äée‚Äér‚Äéy‚Äé ‚Äéo‚Äéw‚Äén‚Äé ‚ÄéW‚Äéi‚Äél‚Äél‚Äéi‚Äéa‚Äém‚Äé ‚Äé""‚ÄéA‚Äél‚ÄéG‚Äéo‚Äér‚Äée‚Äé""‚Äé ‚ÄéA‚Äét‚Äéc‚Äéh‚Äéi‚Äés‚Äéo‚Äén‚Äé ‚Äéi‚Äén‚Äé ‚Äép‚Äér‚Äée‚Äét‚Äét‚Äéy‚Äé ‚Äém‚Äéu‚Äéc‚Äéh‚Äé ‚Äée‚Äév‚Äée‚Äér‚Äéy‚Äé ‚Äéc‚Äéa‚Äét‚Äée‚Äég‚Äéo‚Äér‚Äéy‚Äé ‚Äée‚Äéx‚Äéc‚Äée‚Äép‚Äét‚Äé ‚Äéb‚Äée‚Äéc‚Äéo‚Äém‚Äéi‚Äén‚Äég‚Äé ‚Äéa‚Äén‚Äé ‚Äéh‚Äée‚Äér‚Äéo‚Äéi‚Äén‚Äée‚Äé.‚Äé ‚ÄéH‚Äéo‚Äéw‚Äé'‚Äés‚Äé ‚Äéi‚Äét‚Äé ‚Äéf‚Äée‚Äée‚Äél‚Äé ‚Äég‚Äée‚Äét‚Äét‚Äéi‚Äén‚Äég‚Äé ‚Äéy‚Äéo‚Äéu‚Äér‚Äé ‚Äéd‚Äée‚Äéa‚Äéd‚Äé ‚Äéf‚Äér‚Äée‚Äéc‚Äék‚Äél‚Äée‚Äéd‚Äé ‚Äéa‚Äér‚Äés‚Äée‚Äé ‚Äék‚Äéi‚Äéc‚Äék‚Äée‚Äéd‚Äé ‚Äéb‚Äéy‚Äé ‚Äéa‚Äé ‚Äéf‚Äéu‚Äéc‚Äék‚Äéi‚Äén‚Äég‚Äé ‚Äé1‚Äé6‚Äé-‚Äéy‚Äée‚Äéa‚Äér‚Äé-‚Äéo‚Äél‚Äéd‚Äé ‚Äég‚Äéi‚Äér‚Äél‚Äé,‚Äé ‚ÄéW‚Äéi‚Äél‚Äél‚Äéi‚Äée‚Äé?‚Äé

(‚Äé(‚Äé ‚ÄéH‚ÄéO‚ÄéL‚ÄéY‚Äé ‚ÄéS‚ÄéH‚ÄéI‚ÄéT‚Äé ‚ÄéS‚ÄéH‚ÄéE‚Äé ‚ÄéD‚ÄéI‚ÄéD‚Äé ‚ÄéN‚ÄéO‚ÄéT‚Äé ‚ÄéA‚ÄéG‚ÄéE‚Äé ‚ÄéW‚ÄéE‚ÄéL‚ÄéL‚Äé ‚ÄéL‚ÄéO‚ÄéL‚Äé ‚Äé)‚Äé)‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

T‚Äéh‚Äée‚Äé ‚Äér‚Äée‚Äéd‚Äé-‚Äéb‚Äér‚Äéo‚Äéw‚Äée‚Äéd‚Äé ‚Äéf‚Äéi‚Äén‚Äéc‚Äéh‚Äé ‚Äé(‚ÄéN‚Äée‚Äéo‚Äéc‚Äéh‚Äém‚Äéi‚Äéa‚Äé ‚Äét‚Äée‚Äém‚Äép‚Äéo‚Äér‚Äéa‚Äél‚Äéi‚Äés‚Äé)‚Äé ‚Äéi‚Äés‚Äé ‚Äéa‚Äé ‚Äés‚Äép‚Äée‚Äéc‚Äéi‚Äée‚Äés‚Äé ‚Äéo‚Äéf‚Äé ‚Äée‚Äés‚Äét‚Äér‚Äéi‚Äél‚Äéd‚Äéi‚Äéd‚Äé ‚Äéf‚Äéi‚Äén‚Äéc‚Äéh‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äéi‚Äén‚Äéh‚Äéa‚Äéb‚Äéi‚Äét‚Äés‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äée‚Äéa‚Äés‚Äét‚Äé ‚Äéc‚Äéo‚Äéa‚Äés‚Äét‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéA‚Äéu‚Äés‚Äét‚Äér‚Äéa‚Äél‚Äéi‚Äéa‚Äé.‚Äé ‚ÄéT‚Äéh‚Äée‚Äé ‚Äés‚Äép‚Äée‚Äéc‚Äéi‚Äée‚Äés‚Äé ‚Äéi‚Äés‚Äé ‚Äéd‚Äéi‚Äés‚Äét‚Äéi‚Äén‚Äég‚Äéu‚Äéi‚Äés‚Äéh‚Äée‚Äéd‚Äé ‚Äéb‚Äéy‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéb‚Äér‚Äéi‚Äég‚Äéh‚Äét‚Äé ‚Äér‚Äée‚Äéd‚Äé ‚Äés‚Äét‚Äér‚Äéi‚Äép‚Äée‚Äé ‚Äéa‚Äéb‚Äéo‚Äév‚Äée‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äée‚Äéy‚Äée‚Äé,‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéb‚Äér‚Äéi‚Äég‚Äéh‚Äét‚Äé ‚Äér‚Äée‚Äéd‚Äé ‚Äér‚Äéu‚Äém‚Äép‚Äé.‚Äé ‚ÄéT‚Äéh‚Äée‚Äé ‚Äér‚Äée‚Äés‚Äét‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéb‚Äéo‚Äéd‚Äéy‚Äé ‚Äéi‚Äés‚Äé ‚Äég‚Äér‚Äée‚Äéy‚Äé,‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äéo‚Äél‚Äéi‚Äév‚Äée‚Äé ‚Äéw‚Äéi‚Äén‚Äég‚Äé ‚Äéc‚Äéo‚Äév‚Äée‚Äér‚Äét‚Äés‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéc‚Äéo‚Äél‚Äél‚Äéa‚Äér‚Äé.‚Äé ‚ÄéJ‚Äéu‚Äév‚Äée‚Äén‚Äéi‚Äél‚Äée‚Äés‚Äé ‚Äéd‚Äéo‚Äé ‚Äén‚Äéo‚Äét‚Äé ‚Äéh‚Äéa‚Äév‚Äée‚Äé ‚Äér‚Äée‚Äéd‚Äé ‚Äéb‚Äér‚Äéo‚Äéw‚Äé ‚Äém‚Äéa‚Äér‚Äék‚Äés‚Äé,‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äét‚Äéh‚Äée‚Äéy‚Äé ‚Äél‚Äéa‚Äéc‚Äék‚Äé ‚Äéo‚Äél‚Äéi‚Äév‚Äée‚Äé ‚Äéc‚Äéo‚Äél‚Äéo‚Äéu‚Äér‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéo‚Äén‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéc‚Äéo‚Äél‚Äél‚Äéa‚Äér‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéw‚Äéi‚Äén‚Äég‚Äé ‚Äéc‚Äéo‚Äév‚Äée‚Äér‚Äét‚Äés‚Äé.‚Äé ‚ÄéT‚Äéh‚Äée‚Äé ‚Äéa‚Äéd‚Äéu‚Äél‚Äét‚Äés‚Äé ‚Äéa‚Äér‚Äée‚Äé ‚Äé1‚Äé1‚Äé ‚Äét‚Äéo‚Äé ‚Äé1‚Äé2‚Äé ‚Äéc‚Äée‚Äén‚Äét‚Äéi‚Äém‚Äée‚Äét‚Äér‚Äée‚Äés‚Äé ‚Äé(‚Äé4‚Äé.‚Äé3‚Äé ‚Äét‚Äéo‚Äé ‚Äé4‚Äé.‚Äé7‚Äé ‚Äéi‚Äén‚Äéc‚Äéh‚Äée‚Äés‚Äé)‚Äé ‚Äél‚Äéo‚Äén‚Äég‚Äé.‚Äé ‚ÄéT‚Äéh‚Äéi‚Äés‚Äé ‚Äér‚Äée‚Äéd‚Äé-‚Äéb‚Äér‚Äéo‚Äéw‚Äée‚Äéd‚Äé ‚Äéf‚Äéi‚Äén‚Äéc‚Äéh‚Äé ‚Äéw‚Äéa‚Äés‚Äé ‚Äép‚Äéh‚Äéo‚Äét‚Äéo‚Äég‚Äér‚Äéa‚Äép‚Äéh‚Äée‚Äéd‚Äé ‚Äéi‚Äén‚Äé ‚ÄéP‚Äée‚Äén‚Äér‚Äéi‚Äét‚Äéh‚Äé,‚Äé ‚ÄéN‚Äée‚Äéw‚Äé ‚ÄéS‚Äéo‚Äéu‚Äét‚Äéh‚Äé ‚ÄéW‚Äéa‚Äél‚Äée‚Äés‚Äé.‚Äé

P‚Äéh‚Äéo‚Äét‚Äéo‚Äég‚Äér‚Äéa‚Äép‚Äéh‚Äé ‚Äéc‚Äér‚Äée‚Äéd‚Äéi‚Äét‚Äé:‚Äé ‚ÄéJ‚Äéo‚Äéh‚Äén‚Äé ‚ÄéH‚Äéa‚Äér‚Äér‚Äéi‚Äés‚Äéo‚Äén‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

B‚Äéy‚Äée‚Äé,‚Äé ‚Äég‚Äéu‚Äéy‚Äés‚Äé.‚Äé ‚ÄéI‚Äé'‚Äém‚Äé ‚Äég‚Äéo‚Äén‚Äén‚Äéa‚Äé ‚Äég‚Äéo‚Äé ‚Äéh‚Äéi‚Äét‚Äé ‚Äéo‚Äén‚Äé ‚Äés‚Äéo‚Äém‚Äée‚Äé ‚Äés‚Äée‚Äéx‚Äéy‚Äé ‚Äég‚Äéh‚Äéo‚Äés‚Äét‚Äés‚Äé ‚Äéw‚Äéh‚Äéi‚Äél‚Äée‚Äé ‚Äét‚Äéa‚Äél‚Äék‚Äéi‚Äén‚Äég‚Äé ‚Äéo‚Äén‚Äé ‚Äéh‚Äéa‚Äém‚Äé ‚Äér‚Äéa‚Äéd‚Äéi‚Äéo‚Äé.‚Äé"
bRzyJPy1,BMT_Rizal_revised,akbarism,JavaScript,Tuesday 26th of March 2024 09:39:26 PM CDT,"let a = [
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""no_item"": ""Memo 1"",
      ""alasan"": ""<p>Keterlambatan suplay order selama 2 bulan mencapai 20%</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""no_item"": ""Memo 2"",
      ""alasan"": ""<p>Adanya produk baru dipasaran membuat daya saing yang lebih kompetitif, dimana akan melakukan inprovment untuk menanggulangi hal ini agar produk kita tetap bertahan</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""no_item"": ""Memo 4"",
      ""alasan"": ""<p>Menindaklajuti kondisi produksi produk Wafer Popay yang melempem, apakah dari operasional produksi atau packing. sehingga tidak lagi muncul kondisi produk melempem.</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""no_item"": ""Memo 8"",
      ""alasan"": ""<p>Permasalah SP 1 bagian Produksi dikarenakan tidak memakai masker dan tidak memakai sarung tangan. Perbaikannya adalah memberikan sosialisasi bagaimana pentingnya penggunaan masker dan sarung tangan</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""no_item"": ""Memo 11"",
      ""alasan"": ""<p>Pencapaian penetrasi outlet Wafer Tiramisu di Region Jabalnusra sangat rendah mencapai 48,39%</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": ""1"",
      ""alasan"": ""<p>kekurangan order produksi selama 2 bulan dikarenakan permintaan pasar Wafer Popay sangat tinggi.</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": ""2"",
      ""alasan"": ""<p>Daya saing harga dipasaran yang bervariatif dan bersaing</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": ""4"",
      ""alasan"": ""<p>Mencari akar penyebab terjadinya produk yang melempem</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": ""8"",
      ""alasan"": ""<p>Memberikan sosialisasi tentang pebtingnya penggunaan masker dan sarung tangan</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": ""11"",
      ""alasan"": ""<p>Mencari akar penyebab pencapaian penetrasi Wafer Tiramisu di region Jabalnusra rendah. dan membuat improve bagaiamana untuk meningkatnya.</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 2,
    ""sub_tugas"": 1,
    ""form"": {
      ""item"": 1,
      ""tindakan"": ""<p>Membuat tambahan produk suplay untuk mengantisipasi permintaan dilapangan yang tinggi</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 2,
    ""sub_tugas"": 1,
    ""form"": {
      ""item"": 2,
      ""tindakan"": ""<p>Membuat improvment dari rasa atau kemasan yang menarik untuk bisa meningkatkan produksi</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 2,
    ""sub_tugas"": 1,
    ""form"": {
      ""item"": 3,
      ""tindakan"": ""<p>Menganalisa permasalahan dari produksi atau kemasan yang menyebabkan melempem</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 2,
    ""sub_tugas"": 1,
    ""form"": {
      ""item"": 4,
      ""tindakan"": ""<p>Menambah produksi produk untuk mengantisipasi terjadi permintaan yang tinggi</p>""
    }
  },
  {
    ""analisa"": 2,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""langkah"": ""<ol><li><p>Menambah pruduksi produk untuk menutupi kekurangan permintaan pasar yang tinggi.</p></li><li><p>Memastikan kondisi saat operasional produksi ataupun kemasan tidak ada cacata sehingga tidak terjadi produk yang melempem</p></li></ol>"",
      ""keputusan"": ""<ol><li><p>Menambah produksi produk.</p></li><li><p>Quality Control terhadap produk</p></li><li><p>Membuat improve terhadap produk baik dari rasa ataupun kemasan</p></li></ol>"",
      ""alasan"": ""<ol><li><p>Dengan menambah produksi harapanyya akan menambah keuntungan untuk perusahaan</p></li><li><p>Dengan Quality Control yang maksimal harapannya tidak ada produkyang reject</p></li><li><p>Dengan membuat improve harapannya pangsa pasar akan meningkatat</p></li></ol>""
    }
  },
  {
    ""analisa"": 3,
    ""sub_tugas"": 1,
    ""form"": {
      ""issue"": ""<p>Keterlambatan suplay</p>"",
      ""penyebab"": ""<p>Permintaan pangsa pasar yang meningkat</p><p></p>""
    },
    ""tugas"": 1
  },
  {
    ""analisa"": 3,
    ""sub_tugas"": 2,
    ""form"": {
      ""kondisi"": ""<p>Kondisi produk melempem</p>"",
      ""hal"": ""<p>Quality control yang maksimal terhadap operasional produksi dan kemasan</p>""
    },
    ""tugas"": 1
  }
]"
agN6MNVN,Untitled,dereksir,HTML,Tuesday 26th of March 2024 09:37:22 PM CDT,"<!DOCTYPE html>
<title>
	Amazon.com: Lumineux Teeth Whitening Strips 21 Treatments...
</title>"
jeshCXys,BMT_Ardiyansyah_revised,akbarism,JSON,Tuesday 26th of March 2024 09:13:13 PM CDT,"let a = {
  ""analisa"": 1,
  ""tugas"": 1,
  ""sub_tugas"": 1,
  ""form"": {
    ""no_item"": ""Memo 1"",
    ""alasan"": ""<p>permasalahannya adalah <strong><u>KEKURANGAN SUPPLAY</u></strong> selama 2 bulan ini mencapai 20% ini perlu di analisa lebih lanjut permasalahnya di produksi atau di selesnya</p>""
  }
},
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""no_item"": ""Memo 2"",
      ""alasan"": ""<p>permasalahnya danya<u> PRODUK-PRODUK BARU </u>dipasaran yang mebuat daya saing lebih kompetitif dimana kiata akan melakukan improvment untuk mensiasati hal ini agar produk kita tetap bertahan</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""no_item"": ""memo 10"",
      ""alasan"": ""<p>permasalahan banyaknya<u> KARDUS RUSAK</u> selama pengiriman membuat kardus harus diganti dan menimbulkan biaya tambahan</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""no_item"": ""memo 11"",
      ""alasan"": ""<p>perlu dilakukan analisa <u>PENJUALAN WAFER TIRAMITSHU TERALURENDAH sebesar 48.39% </u>dibandingkan region lainya sebesar 92.31%</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": ""Memo 1"",
      ""alasan"": ""<p>dengan tidak tersedianya produk dapat membuat suplayer akan beralih ke perusahaan lain serta mengurangi penjulan dan produktifitas perusahan</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": ""Memo 2"",
      ""alasan"": ""<p>membuat impropment untuk produk - prouk wafer agar tetap bisa bersain dengan wafer-wafer pendatang baru</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": ""Memo 10"",
      ""alasan"": ""<p>mengevaliasi peroses pengiriman dan paking produk saat pengiriman </p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": ""memo 11"",
      ""alasan"": ""<p>mengevaluasi penyebab rendahnya penjualan wafer tiramitshu di region jabalnusa</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 1,
    ""sub_tugas"": 2,
    ""form"": {
      ""no_item"": """",
      ""alasan"": """"
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 2,
    ""sub_tugas"": 1,
    ""form"": {
      ""item"": 1,
      ""tindakan"": ""<p>1.memeriksa ketersediaan bahan baku terkait jumlah produksi</p><p>2.melakukan pengecekan terkait proses pengiriman barang (transportasi)</p><p>3.melakukan evaluasi terkait produksi/bulan dengan permintaan pasar</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 2,
    ""sub_tugas"": 1,
    ""form"": {
      ""item"": 2,
      ""tindakan"": ""<p>1.melakuakn impropment terkait rasa yang terbaru dan kekinian</p><p>2.memberikan extra 10% terkait produk dalam kemasan</p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 2,
    ""sub_tugas"": 1,
    ""form"": {
      ""item"": 3,
      ""tindakan"": ""<p>1.Mengevaluasi kualitas kardus yang dipakai</p><p>2.mengevaluasi proses bongkar dan muat produk</p><p>3.mengevaluasi proses pengiriman di dalam container </p>""
    }
  },
  {
    ""analisa"": 1,
    ""tugas"": 2,
    ""sub_tugas"": 1,
    ""form"": {
      ""item"": 4,
      ""tindakan"": ""<p>1.melalkuan survei pasar terkait kurangnya penjualan<br>2.melakukan perbandingan terkait merek lain<br></p>""
    }
  },
  {
    ""analisa"": 2,
    ""tugas"": 1,
    ""sub_tugas"": 1,
    ""form"": {
      ""langkah"": ""<p>memo 10 kerusakan produk:<br>kita harus merubah kualitas kardus yang dipakai untuk mengurangi kerusakn produk yg remuk serta kardus yg sober dan basah,jika kita tidak meningkatkan kualitas kardus maka biaya yang akan di timbulkan akan meningkat 100 % tetapi jika kita meningkatkan kualitas kardus kita hanya menbah biaya 20% saja</p>"",
      ""keputusan"": ""<p>1.mengganti kardus yang dipakai saat ini dengan kualitas lebih baik</p>"",
      ""alasan"": ""<p>1.mengurang biaya tambahan untuk pembelian kardus baru</p><p>2.mengurang kerusakan pada poruk sehingga tetap terjaga hingga ke tangan konsument</p>""
    }
  },
  {
    ""analisa"": 3,
    ""sub_tugas"": 1,
    ""form"": {
      ""issue"": ""<p>tingginya biaya perbaikan gudang </p>"",
      ""penyebab"": ""<p>perbaikan gudang dilakukan secara bersamaan di semua wilayah</p>""
    },
    ""tugas"": 1
  },
  {
    ""analisa"": 3,
    ""sub_tugas"": 2,
    ""form"": {
      ""kondisi"": ""<p>agar biaya yang di kuluarkan dalam perbaikan gudang tidak terlalu besar untuk 3 tahunkedepan dalam perbaikan perlu di lakukan perbaikan secara berkala agar cost perbaikan gudang selalu terkontrol.</p>"",
      ""hal"": ""<p>kurangnya perawan secara berkala sehingga perbaikan dilakukan secara bersamaan</p>""
    },
    ""tugas"": 1
  }
  ]"
i0SDjc2Q,Mad,Unknown_No_1,PHP,Tuesday 26th of March 2024 08:46:18 PM CDT,MadMatlabBrand
hbL9hRUX,Left 4 Dead 2 Addons List (Personal) - BROKEN,Quad5Ny,INI file,Tuesday 26th of March 2024 08:20:38 PM CDT,"""AddonList""
{
	""CustomRadialMenu.vpk""		""1""
	""HardRain_No_CC.vpk""		""1""
	""MP5SD5.vpk""		""0""
	""NoMercy_No_CC.vpk""		""1""
	""Saferoom_No_CC.vpk""		""1""
	""SCAR-H.vpk""		""0""
	""Scout.vpk""		""0""
	""SwampFever_No_CC.vpk""		""1""
	""ThePassing_No_CC.vpk""		""1""
	""ModelTestMap.vpk""		""1""
	""InsurgencyM590.vpk""		""0""
	""AmmoPacks.vpk""		""1""
	""ItemAnimations.vpk""		""1""
	""L4D2LoadingScreens.vpk""		""1""
	""EnhancedGraphicModHDv32.vpk""		""1""
	""ZoeyOpenJacket.vpk""		""0""
	""M16A4.vpk""		""0""
	""SPAS12_Fixes.vpk""		""1""
	""SC-2010.vpk""		""0""
	""workshop\135565980.vpk""		""0""
	""workshop\312198137.vpk""		""0""
	""workshop\342536271.vpk""		""0""
	""workshop\397959891.vpk""		""0""
	""workshop\253236569.vpk""		""0""
	""MK14EBR.vpk""		""0""
	""workshop\309934609.vpk""		""0""
	""Magnum_Silverballer.vpk""		""0""
	""Magnum_Silverballer_sp.vpk""		""0""
	""weap_magnum_silverballer.vpk""		""0""
	""workshop\131131462.vpk""		""0""
	""workshop\265433375.vpk""		""0""
	""workshop\264776672.vpk""		""0""
	""workshop\538326643.vpk""		""0""
	""workshop\393850197.vpk""		""0""
	""workshop\128654215.vpk""		""0""
	""workshop\300372243.vpk""		""0""
	""workshop\2865766117.vpk""		""0""
	""workshop\2809672914.vpk""		""0""
	""workshop\646639445.vpk""		""0""
	""workshop\2889397530.vpk""		""0""
	""workshop\922724986.vpk""		""0""
	""HUD2_Vert.vpk""		""1""
	""workshop\237489486.vpk""		""0""
	""workshop\2840208388.vpk""		""0""
	""workshop\322956511.vpk""		""0""
	""workshop\728354171.vpk""		""0""
	""workshop\824125637.vpk""		""0""
	""workshop\2348360064.vpk""		""0""
	""workshop\2889007995.vpk""		""0""
	""workshop\2889008446.vpk""		""0""
	""workshop\2846357950.vpk""		""0""
	""workshop\2324127266.vpk""		""0""
	""workshop\2840071821.vpk""		""0""
	""workshop\2289326674.vpk""		""0""
	""workshop\2804318545.vpk""		""0""
	""workshop\2879013156.vpk""		""0""
	""workshop\2924363905.vpk""		""0""
	""workshop\1460225046.vpk""		""0""
	""workshop\1104404882.vpk""		""0""
	""workshop\2947604558.vpk""		""0""
	""workshop\2935963927.vpk""		""0""
	""workshop\2950607453.vpk""		""0""
	""workshop\2870049497.vpk""		""0""
	""workshop\2951021761.vpk""		""0""
	""workshop\2959768051.vpk""		""0""
	""workshop\3021150097.vpk""		""0""
	""workshop\3018311204.vpk""		""0""
	""br800_noworkshop.vpk""		""1""
	""workshop\377648425.vpk""		""0""
	""workshop\295453946.vpk""		""0""
	""workshop\409057094.vpk""		""0""
	""workshop\121094109.vpk""		""0""
	""workshop\287940987.vpk""		""0""
	""workshop\2847761029.vpk""		""0""
	""workshop\2889004625.vpk""		""0""
	""workshop\2889006119.vpk""		""0""
	""workshop\2170681389.vpk""		""0""
	""workshop\2965823450.vpk""		""0""
	""workshop\2838738050.vpk""		""0""
	""workshop\591861666.vpk""		""0""
	""workshop\1668256191.vpk""		""0""
	""workshop\2090436652.vpk""		""0""
	""workshop\2368545870.vpk""		""0""
	""workshop\2505406624.vpk""		""0""
	""workshop\2647248578.vpk""		""0""
	""workshop\2647300607.vpk""		""0""
	""workshop\2778742681.vpk""		""0""
	""workshop\2800219768.vpk""		""0""
	""workshop\3025859925.vpk""		""0""
	""workshop\2668272749.vpk""		""0""
	""workshop\1500251474.vpk""		""0""
	""workshop\1933965608.vpk""		""0""
	""workshop\2960578875.vpk""		""0""
	""workshop\2960579535.vpk""		""0""
	""workshop\2263678651.vpk""		""0""
	""workshop\2814356044.vpk""		""0""
	""workshop\2920239282.vpk""		""0""
	""workshop\3022899921.vpk""		""0""
	""workshop\3042240557.vpk""		""0""
	""workshop\1568034608.vpk""		""0""
	""workshop\1664029628.vpk""		""0""
	""workshop\3049320850.vpk""		""0""
	""workshop\374876411.vpk""		""0""
	""workshop\2904218076.vpk""		""0""
	""workshop\2955832703.vpk""		""0""
	""workshop\3054282885.vpk""		""0""
	""workshop\406659092.vpk""		""0""
	""workshop\2935960532.vpk""		""0""
	""workshop\1818543708.vpk""		""0""
	""workshop\892842954.vpk""		""0""
	""workshop\2891462372.vpk""		""0""
	""workshop\3129972732.vpk""		""0""
	""workshop\3144345919.vpk""		""0""
	""workshop\3144347291.vpk""		""0""
	""workshop\3144349229.vpk""		""0""
	""workshop\403040832.vpk""		""0""
	""workshop\2521797406.vpk""		""0""
	""ftac_recon_laser.vpk""		""1""
	""magma_spitter_noskin.vpk""		""1""
	""workshop\2592839839.vpk""		""1""
	""workshop\3040222522.vpk""		""1""
	""workshop\2291140471.vpk""		""1""
	""workshop\2236303591.vpk""		""1""
	""workshop\2860110631.vpk""		""1""
	""workshop\2904744563.vpk""		""1""
	""workshop\2942279048.vpk""		""1""
	""workshop\2944554307.vpk""		""1""
	""workshop\3029465086.vpk""		""1""
	""workshop\3050799865.vpk""		""1""
	""workshop\3042954650.vpk""		""1""
	""workshop\2976446435.vpk""		""1""
	""workshop\3030690003.vpk""		""1""
	""workshop\2951220517.vpk""		""1""
	""workshop\2959544300.vpk""		""1""
	""workshop\3027174578.vpk""		""1""
	""workshop\2536545111.vpk""		""1""
	""workshop\2516490922.vpk""		""1""
	""workshop\2843349729.vpk""		""1""
	""workshop\2923605019.vpk""		""1""
	""workshop\2927087770.vpk""		""1""
	""workshop\2995681316.vpk""		""1""
	""workshop\2600813144.vpk""		""1""
	""workshop\2470086874.vpk""		""1""
	""workshop\3004090556.vpk""		""1""
	""workshop\3000339296.vpk""		""1""
	""workshop\443211769.vpk""		""1""
	""workshop\249705956.vpk""		""1""
	""workshop\239828519.vpk""		""1""
	""workshop\450256600.vpk""		""1""
	""workshop\459213712.vpk""		""1""
	""workshop\459440352.vpk""		""1""
	""workshop\491176342.vpk""		""1""
	""workshop\366796179.vpk""		""1""
	""workshop\270638990.vpk""		""1""
	""workshop\130033528.vpk""		""1""
	""workshop\617218968.vpk""		""1""
	""workshop\529551292.vpk""		""1""
	""workshop\501832751.vpk""		""1""
	""workshop\348458236.vpk""		""1""
	""workshop\122028722.vpk""		""1""
	""workshop\127192234.vpk""		""1""
	""workshop\127164671.vpk""		""1""
	""workshop\204936283.vpk""		""1""
	""workshop\204935746.vpk""		""1""
	""workshop\414025630.vpk""		""1""
	""workshop\322261281.vpk""		""1""
	""workshop\231911415.vpk""		""1""
	""workshop\408659676.vpk""		""1""
	""workshop\404570956.vpk""		""1""
	""workshop\406474238.vpk""		""1""
	""workshop\399205947.vpk""		""1""
	""workshop\395199376.vpk""		""1""
	""workshop\149935807.vpk""		""1""
	""workshop\306296503.vpk""		""1""
	""workshop\122422880.vpk""		""1""
	""workshop\240395092.vpk""		""1""
	""workshop\223386120.vpk""		""1""
	""workshop\238361899.vpk""		""1""
	""workshop\239373009.vpk""		""1""
	""workshop\140053787.vpk""		""1""
	""workshop\285662486.vpk""		""1""
	""workshop\380429423.vpk""		""1""
	""workshop\127193408.vpk""		""1""
	""workshop\127198293.vpk""		""1""
	""workshop\127191089.vpk""		""1""
	""workshop\121725116.vpk""		""1""
	""workshop\305030125.vpk""		""1""
	""workshop\235605374.vpk""		""1""
	""workshop\205941159.vpk""		""1""
	""workshop\139883646.vpk""		""1""
	""workshop\203915750.vpk""		""1""
	""workshop\139560891.vpk""		""1""
	""workshop\130932369.vpk""		""1""
	""workshop\319203236.vpk""		""1""
	""workshop\215993741.vpk""		""1""
	""workshop\134796125.vpk""		""1""
	""workshop\133761709.vpk""		""1""
	""workshop\127167490.vpk""		""1""
	""workshop\334453410.vpk""		""1""
	""workshop\259659492.vpk""		""1""
	""workshop\258473193.vpk""		""1""
	""workshop\217440430.vpk""		""1""
	""workshop\2807505658.vpk""		""1""
	""workshop\2860203837.vpk""		""1""
	""workshop\469833631.vpk""		""1""
	""workshop\937142418.vpk""		""1""
	""workshop\1883037436.vpk""		""1""
	""workshop\2078265669.vpk""		""1""
	""workshop\2276357614.vpk""		""1""
	""workshop\2277402070.vpk""		""1""
	""workshop\2357193737.vpk""		""1""
	""workshop\2684105741.vpk""		""1""
	""workshop\2708770665.vpk""		""1""
	""workshop\2749584063.vpk""		""1""
	""workshop\2860160990.vpk""		""1""
	""workshop\2862032979.vpk""		""1""
	""workshop\2868356174.vpk""		""1""
	""workshop\2871317159.vpk""		""1""
	""workshop\2889004247.vpk""		""1""
	""workshop\2889007637.vpk""		""1""
	""workshop\2889890981.vpk""		""1""
	""workshop\2892224388.vpk""		""1""
	""workshop\2289317307.vpk""		""1""
	""workshop\2852406112.vpk""		""1""
	""workshop\2894796521.vpk""		""1""
	""workshop\273115576.vpk""		""1""
	""workshop\2848316602.vpk""		""1""
	""workshop\2608463815.vpk""		""1""
	""workshop\2857186367.vpk""		""1""
	""workshop\2623122997.vpk""		""1""
	""workshop\957012745.vpk""		""1""
	""workshop\3018209162.vpk""		""1""
	""workshop\3019812866.vpk""		""1""
	""workshop\3022393188.vpk""		""1""
	""workshop\164497631.vpk""		""1""
	""workshop\261993789.vpk""		""1""
	""workshop\312530007.vpk""		""1""
	""workshop\463412264.vpk""		""1""
	""workshop\465137676.vpk""		""1""
	""workshop\487887891.vpk""		""1""
	""workshop\493881220.vpk""		""1""
	""workshop\497883394.vpk""		""1""
	""workshop\552512746.vpk""		""1""
	""workshop\657115231.vpk""		""1""
	""workshop\710194284.vpk""		""1""
	""workshop\2193880197.vpk""		""1""
	""workshop\2395887017.vpk""		""1""
	""workshop\2650051986.vpk""		""1""
	""workshop\2898905627.vpk""		""1""
	""workshop\2973295289.vpk""		""1""
}
"
VP3FtLe7,Left 4 Dead 2 Addons List (Personal) - Correct,Quad5Ny,INI file,Tuesday 26th of March 2024 08:19:29 PM CDT,"""AddonList""
{
	""CustomRadialMenu.vpk""		""1""
	""HardRain_No_CC.vpk""		""1""
	""MP5SD5.vpk""		""0""
	""NoMercy_No_CC.vpk""		""1""
	""Saferoom_No_CC.vpk""		""1""
	""SCAR-H.vpk""		""0""
	""Scout.vpk""		""0""
	""SwampFever_No_CC.vpk""		""1""
	""ThePassing_No_CC.vpk""		""1""
	""ModelTestMap.vpk""		""1""
	""InsurgencyM590.vpk""		""0""
	""AmmoPacks.vpk""		""1""
	""ItemAnimations.vpk""		""1""
	""L4D2LoadingScreens.vpk""		""1""
	""EnhancedGraphicModHDv32.vpk""		""1""
	""ZoeyOpenJacket.vpk""		""0""
	""M16A4.vpk""		""0""
	""SPAS12_Fixes.vpk""		""1""
	""SC-2010.vpk""		""0""
	""workshop\135565980.vpk""		""0""
	""workshop\312198137.vpk""		""0""
	""workshop\342536271.vpk""		""0""
	""workshop\397959891.vpk""		""0""
	""workshop\253236569.vpk""		""0""
	""MK14EBR.vpk""		""0""
	""workshop\309934609.vpk""		""0""
	""Magnum_Silverballer.vpk""		""0""
	""Magnum_Silverballer_sp.vpk""		""0""
	""weap_magnum_silverballer.vpk""		""0""
	""workshop\131131462.vpk""		""0""
	""workshop\265433375.vpk""		""0""
	""workshop\264776672.vpk""		""0""
	""workshop\538326643.vpk""		""0""
	""workshop\393850197.vpk""		""0""
	""workshop\128654215.vpk""		""0""
	""workshop\300372243.vpk""		""0""
	""workshop\2865766117.vpk""		""0""
	""workshop\2809672914.vpk""		""0""
	""workshop\646639445.vpk""		""0""
	""workshop\2889397530.vpk""		""0""
	""workshop\922724986.vpk""		""0""
	""HUD2_Vert.vpk""		""1""
	""workshop\237489486.vpk""		""0""
	""workshop\2840208388.vpk""		""0""
	""workshop\322956511.vpk""		""0""
	""workshop\728354171.vpk""		""0""
	""workshop\824125637.vpk""		""0""
	""workshop\2348360064.vpk""		""0""
	""workshop\2889007995.vpk""		""0""
	""workshop\2889008446.vpk""		""0""
	""workshop\2846357950.vpk""		""0""
	""workshop\2324127266.vpk""		""0""
	""workshop\2840071821.vpk""		""0""
	""workshop\2289326674.vpk""		""0""
	""workshop\2804318545.vpk""		""0""
	""workshop\2879013156.vpk""		""0""
	""workshop\2924363905.vpk""		""0""
	""workshop\1460225046.vpk""		""0""
	""workshop\1104404882.vpk""		""0""
	""workshop\2947604558.vpk""		""0""
	""workshop\2935963927.vpk""		""0""
	""workshop\2950607453.vpk""		""0""
	""workshop\2870049497.vpk""		""0""
	""workshop\2951021761.vpk""		""0""
	""workshop\2959768051.vpk""		""0""
	""workshop\3021150097.vpk""		""0""
	""workshop\3018311204.vpk""		""0""
	""br800_noworkshop.vpk""		""1""
	""workshop\377648425.vpk""		""0""
	""workshop\295453946.vpk""		""0""
	""workshop\409057094.vpk""		""0""
	""workshop\121094109.vpk""		""0""
	""workshop\287940987.vpk""		""0""
	""workshop\2847761029.vpk""		""0""
	""workshop\2889004625.vpk""		""0""
	""workshop\2889006119.vpk""		""0""
	""workshop\2170681389.vpk""		""0""
	""workshop\2965823450.vpk""		""0""
	""workshop\2838738050.vpk""		""0""
	""workshop\591861666.vpk""		""0""
	""workshop\1668256191.vpk""		""0""
	""workshop\2090436652.vpk""		""0""
	""workshop\2368545870.vpk""		""0""
	""workshop\2505406624.vpk""		""0""
	""workshop\2647248578.vpk""		""0""
	""workshop\2647300607.vpk""		""0""
	""workshop\2778742681.vpk""		""0""
	""workshop\2800219768.vpk""		""0""
	""workshop\3025859925.vpk""		""0""
	""workshop\2668272749.vpk""		""0""
	""workshop\1500251474.vpk""		""0""
	""workshop\1933965608.vpk""		""0""
	""workshop\2960578875.vpk""		""0""
	""workshop\2960579535.vpk""		""0""
	""workshop\2263678651.vpk""		""0""
	""workshop\2814356044.vpk""		""0""
	""workshop\2920239282.vpk""		""0""
	""workshop\3022899921.vpk""		""0""
	""workshop\3042240557.vpk""		""0""
	""workshop\1568034608.vpk""		""0""
	""workshop\1664029628.vpk""		""0""
	""workshop\3049320850.vpk""		""0""
	""workshop\374876411.vpk""		""0""
	""workshop\2904218076.vpk""		""0""
	""workshop\2955832703.vpk""		""0""
	""workshop\3054282885.vpk""		""0""
	""workshop\406659092.vpk""		""0""
	""workshop\2935960532.vpk""		""0""
	""workshop\1818543708.vpk""		""0""
	""workshop\892842954.vpk""		""0""
	""workshop\2891462372.vpk""		""0""
	""workshop\3129972732.vpk""		""0""
	""workshop\3144345919.vpk""		""0""
	""workshop\3144347291.vpk""		""0""
	""workshop\3144349229.vpk""		""0""
	""workshop\2336687009.vpk""		""0""
	""workshop\133419761.vpk""		""0""
	""workshop\121082780.vpk""		""0""
	""workshop\511275014.vpk""		""0""
	""workshop\464965821.vpk""		""0""
	""workshop\220992044.vpk""		""0""
	""workshop\281738394.vpk""		""0""
	""workshop\132027021.vpk""		""0""
	""workshop\858371769.vpk""		""0""
	""workshop\130203486.vpk""		""0""
	""workshop\122368570.vpk""		""0""
	""workshop\129658009.vpk""		""0""
	""workshop\860969901.vpk""		""0""
	""workshop\403040832.vpk""		""0""
	""workshop\2521797406.vpk""		""0""
	""ftac_recon_laser.vpk""		""1""
	""magma_spitter_noskin.vpk""		""1""
	""workshop\2592839839.vpk""		""1""
	""workshop\3040222522.vpk""		""1""
	""workshop\1472110503.vpk""		""1""
	""workshop\334978799.vpk""		""1""
	""workshop\2165823958.vpk""		""1""
	""workshop\2348884001.vpk""		""1""
	""workshop\2350925131.vpk""		""1""
	""workshop\373048945.vpk""		""1""
	""workshop\439806530.vpk""		""1""
	""workshop\131944571.vpk""		""1""
	""workshop\170518061.vpk""		""1""
	""workshop\132404252.vpk""		""1""
	""workshop\444924766.vpk""		""1""
	""workshop\446920672.vpk""		""1""
	""workshop\444949455.vpk""		""1""
	""workshop\454937955.vpk""		""1""
	""workshop\459208387.vpk""		""1""
	""workshop\474947952.vpk""		""1""
	""workshop\505587942.vpk""		""1""
	""workshop\515688258.vpk""		""1""
	""workshop\703507325.vpk""		""1""
	""workshop\731808336.vpk""		""1""
	""workshop\720213671.vpk""		""1""
	""workshop\228182268.vpk""		""1""
	""workshop\717140921.vpk""		""1""
	""workshop\815559713.vpk""		""1""
	""workshop\452026284.vpk""		""1""
	""workshop\272552795.vpk""		""1""
	""workshop\604106385.vpk""		""1""
	""workshop\139833233.vpk""		""1""
	""workshop\128007041.vpk""		""1""
	""workshop\765625946.vpk""		""1""
	""workshop\443211769.vpk""		""1""
	""workshop\249705956.vpk""		""1""
	""workshop\239828519.vpk""		""1""
	""workshop\450256600.vpk""		""1""
	""workshop\459213712.vpk""		""1""
	""workshop\459440352.vpk""		""1""
	""workshop\491176342.vpk""		""1""
	""workshop\366796179.vpk""		""1""
	""workshop\270638990.vpk""		""1""
	""workshop\130033528.vpk""		""1""
	""workshop\617218968.vpk""		""1""
	""workshop\529551292.vpk""		""1""
	""workshop\501832751.vpk""		""1""
	""workshop\348458236.vpk""		""1""
	""workshop\122028722.vpk""		""1""
	""workshop\127192234.vpk""		""1""
	""workshop\127164671.vpk""		""1""
	""workshop\204936283.vpk""		""1""
	""workshop\204935746.vpk""		""1""
	""workshop\414025630.vpk""		""1""
	""workshop\322261281.vpk""		""1""
	""workshop\231911415.vpk""		""1""
	""workshop\408659676.vpk""		""1""
	""workshop\404570956.vpk""		""1""
	""workshop\406474238.vpk""		""1""
	""workshop\399205947.vpk""		""1""
	""workshop\395199376.vpk""		""1""
	""workshop\149935807.vpk""		""1""
	""workshop\306296503.vpk""		""1""
	""workshop\122422880.vpk""		""1""
	""workshop\240395092.vpk""		""1""
	""workshop\223386120.vpk""		""1""
	""workshop\238361899.vpk""		""1""
	""workshop\239373009.vpk""		""1""
	""workshop\140053787.vpk""		""1""
	""workshop\285662486.vpk""		""1""
	""workshop\380429423.vpk""		""1""
	""workshop\127193408.vpk""		""1""
	""workshop\127198293.vpk""		""1""
	""workshop\127191089.vpk""		""1""
	""workshop\121725116.vpk""		""1""
	""workshop\305030125.vpk""		""1""
	""workshop\235605374.vpk""		""1""
	""workshop\205941159.vpk""		""1""
	""workshop\139883646.vpk""		""1""
	""workshop\203915750.vpk""		""1""
	""workshop\139560891.vpk""		""1""
	""workshop\130932369.vpk""		""1""
	""workshop\319203236.vpk""		""1""
	""workshop\215993741.vpk""		""1""
	""workshop\134796125.vpk""		""1""
	""workshop\133761709.vpk""		""1""
	""workshop\127167490.vpk""		""1""
	""workshop\334453410.vpk""		""1""
	""workshop\259659492.vpk""		""1""
	""workshop\258473193.vpk""		""1""
	""workshop\217440430.vpk""		""1""
	""workshop\2807505658.vpk""		""1""
	""workshop\2860203837.vpk""		""1""
	""workshop\469833631.vpk""		""1""
	""workshop\937142418.vpk""		""1""
	""workshop\1883037436.vpk""		""1""
	""workshop\2078265669.vpk""		""1""
	""workshop\2276357614.vpk""		""1""
	""workshop\2277402070.vpk""		""1""
	""workshop\2357193737.vpk""		""1""
	""workshop\2684105741.vpk""		""1""
	""workshop\2708770665.vpk""		""1""
	""workshop\2749584063.vpk""		""1""
	""workshop\2860160990.vpk""		""1""
	""workshop\2862032979.vpk""		""1""
	""workshop\2868356174.vpk""		""1""
	""workshop\2871317159.vpk""		""1""
	""workshop\2889004247.vpk""		""1""
	""workshop\2889007637.vpk""		""1""
	""workshop\2889890981.vpk""		""1""
	""workshop\2892224388.vpk""		""1""
	""workshop\2289317307.vpk""		""1""
	""workshop\2852406112.vpk""		""1""
	""workshop\2894796521.vpk""		""1""
	""workshop\273115576.vpk""		""1""
	""workshop\2848316602.vpk""		""1""
	""workshop\2608463815.vpk""		""1""
	""workshop\2857186367.vpk""		""1""
	""workshop\2623122997.vpk""		""1""
	""workshop\957012745.vpk""		""1""
	""workshop\3018209162.vpk""		""1""
	""workshop\3019812866.vpk""		""1""
	""workshop\3022393188.vpk""		""1""
	""workshop\164497631.vpk""		""1""
	""workshop\261993789.vpk""		""1""
	""workshop\312530007.vpk""		""1""
	""workshop\463412264.vpk""		""1""
	""workshop\465137676.vpk""		""1""
	""workshop\487887891.vpk""		""1""
	""workshop\493881220.vpk""		""1""
	""workshop\497883394.vpk""		""1""
	""workshop\552512746.vpk""		""1""
	""workshop\657115231.vpk""		""1""
	""workshop\710194284.vpk""		""1""
	""workshop\2193880197.vpk""		""1""
	""workshop\2395887017.vpk""		""1""
	""workshop\2516490922.vpk""		""1""
	""workshop\2536545111.vpk""		""1""
	""workshop\2600813144.vpk""		""1""
	""workshop\2650051986.vpk""		""1""
	""workshop\2843349729.vpk""		""1""
	""workshop\2898905627.vpk""		""1""
	""workshop\2927087770.vpk""		""1""
	""workshop\2951220517.vpk""		""1""
	""workshop\2959544300.vpk""		""1""
	""workshop\2973295289.vpk""		""1""
	""workshop\2995681316.vpk""		""1""
	""workshop\3000339296.vpk""		""1""
	""workshop\3004090556.vpk""		""1""
	""workshop\3027174578.vpk""		""1""
	""workshop\2470086874.vpk""		""1""
	""workshop\3030690003.vpk""		""1""
	""workshop\2976446435.vpk""		""1""
	""workshop\3042954650.vpk""		""1""
	""workshop\2236303591.vpk""		""1""
	""workshop\2860110631.vpk""		""1""
	""workshop\2904744563.vpk""		""1""
	""workshop\2942279048.vpk""		""1""
	""workshop\2944554307.vpk""		""1""
	""workshop\3029465086.vpk""		""1""
	""workshop\3050799865.vpk""		""1""
	""workshop\2923605019.vpk""		""1""
	""workshop\2291140471.vpk""		""1""
}
"
XHakraGp,Untitled,samipote,JavaScript,Tuesday 26th of March 2024 07:44:14 PM CDT,"process.env.NODE_TLS_REJECT_UNAUTHORIZED = ""0"";
const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const path = require('path');
const methodOverride = require('method-override');
const request = require('request');
const restream = require('restream');
const app = express();
const ffmpeg = require('fluent-ffmpeg');
app.set('host', 'sportswatcher2.ddns.net');
const fs = require('fs');
const fetch = require('node-fetch');
const cookieStore = {};
const compression = require('compression');
// Enable compression middleware for all requests
app.use(compression());
app.use(express.json()); // Parse JSON bodies
app.use(express.urlencoded({ extended: true })); // Parse URL-encoded bodies
app.use(cors()); // Enable CORS
app.use(methodOverride('_method')); // Enable method override
app.use((err, req, res, next) => {
  console.error(err.stack);  // log the error
  res.status(500).send('Something broke!');
});
process.on('unhandledRejection', (reason, promise) => {
  console.error('Unhandled Rejection at:', promise, 'reason:', reason);
  // You can add logic here to handle or report the error.
});
process.on('uncaughtException', (err, origin) => {
  console.error('Caught exception:', err, 'Exception origin:', origin);
  // You can add logic here to handle or report the error.
});

// Replace with your MongoDB connection string
const connectionString = 'mongodb://localhost:27017/streaming';

// Connect to MongoDB
mongoose
  .connect(connectionString, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => {
    console.log('Connected to MongoDB');
  })
  .catch((error) => {
    console.error('Failed to connect to MongoDB', error);
  });

// Define a Mongoose schema for our Game model
const gameSchema = new mongoose.Schema({
  title: String,
  streamLink: String,
  sport: String,
});

// Create the Game model
const Game = mongoose.model('Game', gameSchema);

// Serve static files from the public directory
app.use(express.static(path.join(__dirname, 'public')));

const proxyAddress = 'http://localhost:8080/';

// A function that returns a modified URL for .ts and .wbp files
function getSegmentURL(targetURL) {
    const baseURL = getBaseURL();
    return baseURL + 'segment/' + targetURL;
}

// A function that returns a modified URL for .m3u8 files
function getPlaylistURL(targetURL) {
  const baseURL = getBaseURL();
  return baseURL + 'proxy/' + targetURL;
}
function getKeyURL(targetURL) {
	 const baseURL = getBaseURL();
  return baseURL + 'key/' + targetURL;
}

function getHeadersForDomain(domain) {
  const defaultHeaders = {
    'accept': '*/*',
    'accept-encoding': 'gzip, deflate, br',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
    'sec-ch-ua': '""Chromium"";v=""116"", ""Not)A;Brand"";v=""24"", ""Brave"";v=""116""',
    'sec-ch-ua-mobile': '?0',
    'sec-ch-ua-platform': 'Windows',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'cross-site',
    'sec-gpc': '1',
  };
	
	  if (cookieStore[domain]) {
      defaultHeaders['Cookie'] = cookieStore[domain];
  }

  switch(domain) {
    case 'ddy1.cdndac.lol':
    case 'ddy2.cdndac.lol':
    case 'ddy3.cdndac.lol':
		case 'ddy4.cdndac.lol':
		case 'ddy5.cdndac.lol':
		case 'ddh1.cdndac.lol':
      return {
        ...defaultHeaders,
        'origin': 'https://ddhwebcast4k.xyz',
        'referer': 'https://ddhwebcast4k.xyz/',
      };

    case 'ed-t1.edghst.me':
    case 'ed-t2.edghst.me':
    case 'ed-t3.edghst.me':
    case 'ed-t4.edghst.me':
    case 'ed-n1.edghst.me':
		case 'ed-c1.edghst.me':
      return {
        ...defaultHeaders,
        'origin': 'https://www.nolive.me',
        'referer': 'https://www.nolive.me/',
				'Accept-Encoding': 'identity'
      };
		case 'aes128.seckeyserv.me':
			return {
				...defaultHeaders,
        'origin': 'https://www.nolive.me',
        'referer': 'https://www.nolive.me/',
				'method': 'GET',
				'authority': 'aes128.seckeyserv.me'
      };
		case 's2.albula.xyz':
			return {
				...defaultHeaders,
        'origin': 'https://www.sportshub.to',
        'referer': 'https://www.sportshub.to/'
      };
		case 'nflarcadia.xyz':
			return {
				...defaultHeaders,
        'origin': 'https://gamerarcades.com',
        'referer': 'https://gamerarcades.com/'
      };
		case 'livenflstream.xyz':
			return {
				...defaultHeaders,
        'origin': 'https://catchystream.com',
        'referer': 'https://catchystream.com/'
      };
		case 's3.twoflow.xyz':
		return {
				...defaultHeaders,
        'origin': 'https://bestreamsports.org',
        'referer': 'https://bestreamsports.org/'
      };
		case 'n6.aliflailaaliflaila.com':
		return {
				...defaultHeaders,
        'origin': 'https://fiveyardlab.com',
        'referer': 'https://fiveyardlab.com/'
      };
		case 'jggk.9novel.to':
		return {
				...defaultHeaders,
        'origin': 'https://vwrc.truyenxalo.com',
        'referer': 'https://vwrc.truyenxalo.com/'
      };
			
		case domain.includes('cdnbos.lol') :
		return {
				...defaultHeaders,
        'origin': 'https://ddolahdplay.xyz',
        'referer': 'https://ddolahdplay.xyz/'
      };
		case 'wowstrk.online' :
		return {
				...defaultHeaders,
        'origin': 'https://backfirstwo.site',
        'referer': 'https://backfirstwo.site/'
      };
		case 'weak.hiweak12.store' :
		return {
				...defaultHeaders,
        'origin': 'https://weakstream.org',
        'referer': 'https://weakstream.org/'
      };
		case 'usa.raino.xyz' :
		return {
				...defaultHeaders,
        'origin': 'https://embed4u.xyz',
        'referer': 'https://embed4u.xyz/'
      };
		case 'storage.googleapis.com' :
		return {
				...defaultHeaders,
        'origin': 'https://realbitsport.com',
        'referer': 'https://realbitsport.com/'
      };
		case 'bet365-live-secure.production.geniuslive.geniussports.com' :
		return {
				...defaultHeaders,
        'origin': 'https://www.bet365.com',
        'referer': 'https://www.bet365.com/'
      };
		case 'edge2.xmediaget.com:43434' :
		return {
				...defaultHeaders,
        'origin': 'https://betandyou994784.top',
        'referer': 'https://betandyou994784.top/'
      };
		case domain.includes('istreamcluster') :
		return {
				...defaultHeaders,
        'origin': 'https://istream.ifbstreamtv-one.shop',
        'referer': 'https://istream.ifbstreamtv-one.shop/'
      };
		case domain.includes('webdicdn.lol') :
		case domain.includes('.shop') :
		return {
				...defaultHeaders,
        'origin': 'https://livehdplay.ru',
        'referer': 'https://livehdplay.ru/'
      };
    default:
      return defaultHeaders;
  }
}

function appendQueryParameter(url, paramKey, paramValue) {
    let [base, queryParams] = url.split('?');

    // If there are no existing query parameters, just append the new one.
    if (!queryParams) {
        return `${base}?${paramKey}=${paramValue}`;
    }

    // Convert existing query parameters into a map for easier processing.
    let paramMap = new Map();
    queryParams.split('&').forEach(param => {
        let [key, value] = param.split('=');
        paramMap.set(key, value);
    });

    // Set the new (or overwrite the existing) parameter value.
    paramMap.set(paramKey, paramValue);

    // Construct back the URL.
    const updatedQueryParams = Array.from(paramMap.entries())
        .map(([key, value]) => `${key}=${value}`)
        .join('&');

    return `${base}?${updatedQueryParams}`;
}

function delay(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

// Check if the domain contains a specific pattern
// List of domain patterns/substrings you don't want to proxy
const noProxyPatterns = [""smvdn22.live"", ""xmediaget.com""];

// Function to check if a domain contains any of the patterns
function shouldNotProxy(domain) {
    return noProxyPatterns.some(pattern => domain.includes(pattern));
}
// A route for handling proxy requests for m3u8 and mpd files
app.use('/proxy/', async (req, res) => {
  // Construct the target URL by replacing the proxy prefix
  const targetURL = decodeURIComponent(req.originalUrl.replace('/proxy/', ''));
	console.log(`Target URL: ${targetURL}`);
  // Get the domain of the target URL
  const domain = new URL(targetURL).hostname;
  // Parse the target URL
  const parsedURL = new URL(targetURL);
  // Get the file extension of the target URL
  const fileExtension = path.extname(parsedURL.pathname).toLowerCase();
	const TARGET_DURATION_PREFIX = ""#EXT-X-TARGETDURATION:"";
  // Check if the file extension is m3u8 or mpd
  if (fileExtension === '.m3u8' || fileExtension === '.mpd') {
    try {
      // Fetch the target URL with appropriate headers
if (shouldNotProxy(domain)) {
  try {
    const m3u8Response = await fetch(targetURL, {
      headers: getHeadersForDomain(domain),
    });

    const m3u8Content = await m3u8Response.text();
    const baseURL = new URL(targetURL);
		
		let cacheDuration = 0;
    const lines = m3u8Content.split('\n');
    for (const line of lines) {
      if (line.startsWith(TARGET_DURATION_PREFIX)) {
        cacheDuration = parseInt(line.replace(TARGET_DURATION_PREFIX, ''), 10);
        break;
      }
    }
    // Convert relative paths to absolute
    const updatedContent = m3u8Content.split('\n').map(line => {
      if (line.endsWith('.ts') || line.includes('.ts?')) {  // Check if the line is a path with .ts extension
        if (!line.startsWith('http')) {  // If the path is relative
					const pathR = new URL(line, baseURL).href
          return getPlaylistURL(pathR);  // Convert it to absolute
        }
      }
      return line;  // Return the line unchanged
    }).join('\n');

    res.setHeader('Content-Type', 'application/vnd.apple.mpegurl');
    res.setHeader('Access-Control-Allow-Origin', '*');
		res.setHeader('Cache-Control', 'no-store, no-cache, must-revalidate, post-check=0, pre-check=0');
    res.send(updatedContent);
  } catch (err) {
    console.error('Failed to fetch m3u8:', err.message);
    res.status(500).send('Proxy Error');
  }
  return;
}
      const m3u8Response = await fetch(targetURL, {
        headers: getHeadersForDomain(domain),
      });
      // Store the cookie if any
      if (m3u8Response.headers.has('set-cookie')) {
        cookieStore[domain] = m3u8Response.headers.get('set-cookie');
      }
      // Set the content type header according to the file extension
      if (fileExtension === '.m3u8') {
        res.setHeader('Content-Type', 'application/vnd.apple.mpegurl');
      } else if (fileExtension === '.mpd') {
        res.setHeader('Content-Type', 'application/dash+xml');
      }
      // Get the text content of the response
      let m3u8Content = await m3u8Response.text();
      // Process each line of the content asynchronously
		let cacheDuration = 0;
    const lines = m3u8Content.split('\n');
    for (const line of lines) {
      if (line.startsWith(TARGET_DURATION_PREFIX)) {
        cacheDuration = parseInt(line.replace(TARGET_DURATION_PREFIX, ''), 10);
        break;
      }
    }
      m3u8Content = await Promise.all(
        m3u8Content.split('\n').map(async (line) => {
          // Parse the segment URL relative to the target URL
          const segmentParsedURL = new URL(line, targetURL);
          let segmentBaseURL;
          // Check if the segment path is absolute or relative
          if (segmentParsedURL.pathname.startsWith('/')) {
            segmentBaseURL = parsedURL.origin;
          } else {
            segmentBaseURL =
              targetURL.substring(0, targetURL.lastIndexOf('/') + 1);
          }
          // Construct the segment URL with or without base URL
          const segmentURL = line.startsWith('http')
            ? line
            : `${segmentBaseURL}${segmentParsedURL.pathname}${segmentParsedURL.search}`;
          // Get the segment file extension
          const segmentFileExtension = path.extname(
            segmentParsedURL.pathname
          ).toLowerCase();
          // Check if the segment file extension is ts, webp, js or empty
          if (
            segmentFileExtension === '.ts' ||
            segmentFileExtension === '.webp' ||
            segmentFileExtension === '.js' ||
            segmentFileExtension === ''
          ) {
            // Resolve any redirect for the segment URL with appropriate headers
            const resolvedURL = await resolveRedirect(
              segmentURL,
              getHeadersForDomain(domain)
            );
            // Get the segment domain
            const segmentDomain = new URL(segmentURL).host;
            // Append the original domain as a query parameter and return the modified segment URL
            return appendQueryParameter(
              getSegmentURL(resolvedURL),
              'originalDomain',
              segmentDomain
            );
          } else if (line.match(/\.m3u8$/)) {
            // Get the playlist domain from the base URL
            const playlistDomain = new URL(segmentBaseURL).host;
            // Construct the playlist URL with or without base URL
            const playlistURL = line.startsWith('http')
              ? line
              : `${segmentBaseURL}${segmentParsedURL.pathname}`;
            // Resolve any redirect for the playlist URL with appropriate headers
            const resolvedURL = await resolveRedirect(
              playlistURL,
              getHeadersForDomain(domain)
            );
            // Append the original domain as a query parameter and return the modified playlist URL
            return appendQueryParameter(
              getPlaylistURL(resolvedURL),
              'originalDomain',
              playlistDomain
            );
          } else if (line.startsWith('#EXT-X-KEY')) {
            // Extract the key URL from the line
            const keyURLMatch = line.match(/URI=""([^""]+)""/);
            if (!keyURLMatch) {
              return line;
            }
            const keyURL = keyURLMatch[1];
            // Get the segment domain from the key URL
            const segmentDomain = new URL(keyURL).host;
            // Append the original domain as a query parameter and return the modified key URL
            const modifiedKeyURL = appendQueryParameter(
              getKeyURL(keyURL),
              'originalDomain',
              segmentDomain
            );
            // Replace the key URL in the line with the modified one and return the line
            return line.replace(
              /URI=""([^""]+)""/,
              `URI=""${modifiedKeyURL}""`
            );
          } else {
            // Return the line as it is
            return line;
          }
        })
      );
      // Join the processed lines with newline
      m3u8Content = m3u8Content.join('\n');
      // Set the access control header to allow cross-origin requests
      res.setHeader('Access-Control-Allow-Origin', '*');
			res.setHeader('Content-Type', 'application/vnd.apple.mpegurl');
			res.setHeader('Cache-Control', 'no-store, no-cache, must-revalidate, post-check=0, pre-check=0');
      // Send the modified content as response
      res.send(m3u8Content);
    } catch (err) {
      // Log the error and send a 500 status code with a message
      console.error('Failed to fetch m3u8:', err.message);
      res.status(500).send('Proxy Error');
    }
    return;
  } else {
    try {
      const response = await fetch(targetURL);

      // Forward headers
      for (const [key, value] of Object.entries(response.headers.raw())) {
        res.setHeader(key, value);
      }
			res.setHeader('Access-Control-Allow-Origin', '*');
			res.setHeader('Cache-Control', 'no-store, no-cache, must-revalidate, post-check=0, pre-check=0');
			res.setHeader('Content-Type', 'application/vnd.apple.mpegurl');
      // Stream the response back to the client
      response.body.pipe(res);
    } catch (err) {
      console.error('Failed to fetch:', err.message);
      res.status(500).send('Proxy Error');
    }
  }
});

// A function to resolve any redirect for a given URL and headers
async function resolveRedirect(url, headers) {
  try {
    // Fetch the URL with the headers
    const response = await fetch(url, { headers });
    // Check if the response was redirected
    if (response.redirected) {
      // Return the final URL after redirection
      return response.url;
    }
    // Return the original URL if no redirection occurred
    return url;
  } catch (error) {
    // Log the error and return a modified URL with js extension
    console.error('Failed to resolve redirect for', url, error.message);
    return changeExtensionToJs(url);
  }
}

// A function to change the extension of a URL to js
function changeExtensionToJs(url) {
  // Remove the extension from the URL
  const withoutExtension = url.substring(0, url.lastIndexOf('.'));
  // Return the URL with js extension
  return `${withoutExtension}.js`;
}

// A new route for handling .ts and .wbp requests
app.use('/segment/*', async (req, res) => {
  // Get the original domain from the query parameter
  const originalDomain = req.query.originalDomain;

  // Delete the query parameter from the request object
  delete req.query.originalDomain;

  // Construct the target URL directly from the wildcard parameter
  const targetURL = req.params[0];
  const urlObject = new URL(targetURL);
  const domain = urlObject.hostname; // Extracting the domain from the targetURL

  console.log(`Received request for URL: ${targetURL}`);

  // Get the headers for the domain
  const headersForDomain = getHeadersForDomain(domain);  // using 'domain' instead of 'targetURL.host'

  try {
    // Fetch the target URL with appropriate headers and get a readable stream of data
    const proxyRequest = await fetch(targetURL, { headers: headersForDomain });

    // Set the access control header to allow cross-origin requests
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Content-Type', 'application/vnd.apple.mpegurl');
    res.setHeader('Cache-Control', 'no-store, no-cache, must-revalidate, post-check=0, pre-check=0');

    // Pipe the data stream to the response object
    proxyRequest.body.pipe(res);
  } catch (error) {
    // Log the error and send a 500 status code with a message
    console.error('Failed to fetch segment:', error.message);
    res.status(500).send('Proxy Error');
  }
});


app.use('/key/*', (req, res) => {
  const originalDomain = req.query.originalDomain;
	delete req.query.originalDomain;
  const headersForDomain = getHeadersForDomain(originalDomain);
  const fullURL = req.protocol + '://' + req.get('host') + req.originalUrl;
  console.log(`Received request for key URL: ${fullURL}`);

  // Capture the key path from the wildcard
  const keyPath = req.params[0];

  // Construct the targetURL with the captured key path
  const targetURL = 'https://' + keyPath;
  const domain = new URL(targetURL).hostname;

  // Create a proxyRequestOptions object with the headers copied from the original request
  const proxyRequestOptions = {
    url: targetURL,
    headers: headersForDomain
  };

  const proxyRequest = request(proxyRequestOptions);
  
  proxyRequest.on('response', function(sourceResponse) {
    res.setHeader('Access-Control-Allow-Origin', '*');
		res.setHeader('Content-Type', 'application/octet-stream');
    sourceResponse.pipe(res);
  });
  
  proxyRequest.on('error', function(err) {
    console.error('Proxy Error for URL:', targetURL, 'Error:', err.message);
    res.status(500).send('Proxy Error');
  });
  
  res.on('error', (err) => {
    console.error('Error during response pipe:', err);
  });
});


function getBaseURL() {
  return `http://${app.get('host')}/`;
}

app.get('/', (req, res) => {
  res.render('main.ejs');
});

// Route for serving the admin panel
app.get('/admin', async (req, res) => {
  try {
    const games = await Game.find();
    res.render('admin.ejs', { videos: games });
  } catch (error) {
    res.status(500).send(error);
  }
});

// Route for getting all games
app.get('/games', async (req, res) => {
  try {
    const games = await Game.find();
    res.send(games);
  } catch (error) {
    res.status(500).send(error);
  }
});

// Route for creating a new game
app.post('/games', async (req, res) => {
  try {
    const game = new Game(req.body);
    await game.save();
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

app.put('/games/:id', async (req, res) => {
  try {
    const { id } = req.params;
    const { title, streamLink, sport } = req.body;
    const updatedGame = await Game.findByIdAndUpdate(id, { title, streamLink, sport }, { new: true });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// Route for deleting a game
app.delete('/games/:id', async (req, res) => {
  try {
    await Game.deleteOne({ _id: req.params.id });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// Start the server
const port = process.env.PORT || 3000;
app.listen(port, () => console.log(`Server running on port ${port}`));"
kXmyz2Qm,04 state_using_python,skb461,Python,Tuesday 26th of March 2024 07:43:16 PM CDT,"import abc

class ATMState(abc.ABC):
    @abc.abstractmethod
    def insert_card(self):
        pass
    @abc.abstractmethod
    def enter_pin(self, pin):
        pass
    @abc.abstractmethod
    def check_balance(self, balance):
        pass
    @abc.abstractmethod
    def withdraw_money(self, amount, balance):
        pass

class NoCardState(ATMState):
    def insert_card(self):
        print(""Card inserted."")
        return CardInsertedState()
    def enter_pin(self, pin):
        print(""Please insert your card first."")
    def check_balance(self, balance):
        print(""Please insert your card first."")
    def withdraw_money(self, amount, balance):
        print(""Please insert your card first."")

class CardInsertedState(ATMState):
    def insert_card(self):
        print(""Card is already inserted. Please enter 2."")
        return CardInsertedState()
    def enter_pin(self, pin):
        print(f""PIN entered: {pin}"")
        if (pin=='1212'):
            return True
        else:
            print(""Enter valid pin"")
            CardInsertedState()
    def check_balance(self, balance):
        print(""Enter Pin first"")
    def withdraw_money(self, amount, balance):
        print(""Enter Pin first"")

class PinEnteredState(ATMState):
    def insert_card(self):
        print(""Card is already inserted."")
        return PinEnteredState()
    def enter_pin(self, pin):
        print(""PIN is already entered."")
        return PinEnteredState()
    def check_balance(self, balance):
        print(f""Checking account balance: ${balance}"")
    def withdraw_money(self, amount, balance):
        if amount % 500 != 0:
            print(""Amount should be in multiples of 500."")
        elif amount > balance:
            print(""Insufficient funds."")
        else:
            new_balance = balance - amount
            print(f""Withdrawing ${amount}. New balance: ${new_balance}"")
            return new_balance

class ATM:
    def __init__(self):
        self.state = NoCardState()
        self.balance = 70000
    def change_state(self, new_state):
        self.state = new_state
    def insert_card(self):
        self.state = self.state.insert_card()
    def enter_pin(self):
        pin = input(""Enter your PIN: "")
        if self.state.enter_pin(pin):
            self.change_state(PinEnteredState())
    def check_balance(self):
        self.state.check_balance(self.balance)
    def withdraw_money(self):
        amount = int(input(""Enter the amount to withdraw: $""))
        new_balance = self.state.withdraw_money(amount, self.balance)
        if new_balance is not None:
            self.balance = new_balance

if __name__ == ""__main__"":
    atm = ATM()
    while True:
        print(""\nATM Menu:"")
        print(""1. Insert Card"")
        print(""2. Enter PIN"")
        print(""3. Check Balance"")
        print(""4. Withdraw Money"")
        print(""5. Exit"")
        choice = input(""Enter your choice (1-5): "")
        if choice == ""1"":
            atm.insert_card()
        elif choice == ""2"":
            atm.enter_pin()
        elif choice == ""3"":
            atm.check_balance()
        elif choice == ""4"":
            atm.withdraw_money()
        elif choice == ""5"":
            print(""Exiting. Thank you!"")
            break
        else:
            print(""Invalid choice. Please enter a valid option."")
"
3xVVdX0J,05 Iterator_using_python,skb461,Python,Tuesday 26th of March 2024 07:42:21 PM CDT,"from collections import deque
class StackIterator:
    def __init__(self, items):
        self.items = items
    def __iter__(self):
        return self
    def __next__(self):
        if self.items:
            return self.items.pop()
        else:
            raise StopIteration
class StackWithIterator:
    def __init__(self):
        self.items = []
    def push(self, item):
        self.items.append(item)
    def create_iterator(self):
        return StackIterator(self.items)
class QIterator:
    def __init__(self,item):
        self.items = item
    def __iter__(self):
        return self
    def __next__(self):
        if self.items:
            return self.items.popleft()
        else:
            raise StopIteration
class QueuewithIterator:
    def __init__(self):
        self.items= deque()
    def push(self, item):
        self.items.append(item)
    def create_Iterator(self):
        return QIterator(self.items)
def client():
    print(""Stack: 1"")
    print(""Queue: 2"")
    type = int(input(""Enter the name of the Data Structure: ""))
    iterator = None
    if type == 1:
        s1=StackWithIterator()
        # Number of ITEM
        item = int(input(""Enter the number of ITEM for Stack: ""))
        for _ in range(item):
            value = input(""Enter the value of the StackItem: "")
            s1.push(value)
        iterator = s1.create_iterator()
    elif type == 2:
        q1=QueuewithIterator()
        item = int(input(""Enter the number of ITEM for Queue: ""))
        for _ in range(item):
            value = input(""Enter the value of the QueueItem: "")
            q1.push(value)
        iterator = q1.create_Iterator()
    if iterator:
    # Traverse Stack and Queue with Iterator
        print(""The Output is: "")
        for items in iterator:
            print(items)
client()"
ni0GjYga,03 decerator_using_python,skb461,Python,Tuesday 26th of March 2024 07:40:47 PM CDT,"from abc import ABCMeta, abstractmethod

class Abstract_Coffee(metaclass=ABCMeta):
    @abstractmethod
    def get_cost(self):
        pass

    @abstractmethod
    def get_ingredients(self):
        pass

    def get_tax(self):
        return 0.1 * self.get_cost()

class Concrete_Coffee(Abstract_Coffee):
    def get_cost(self):
        return 1.00

    def get_ingredients(self):
        return 'coffee'

class Abstract_Coffee_Decorator(Abstract_Coffee):
    def __init__(self, decorated_coffee):
        self.decorated_coffee = decorated_coffee

    def get_cost(self):
        return self.decorated_coffee.get_cost()

    def get_ingredients(self):
        return self.decorated_coffee.get_ingredients()

class Sugar(Abstract_Coffee_Decorator):
    def __init__(self, decorated_coffee):
        Abstract_Coffee_Decorator.__init__(self, decorated_coffee)

    def get_cost(self):
        return self.decorated_coffee.get_cost()

    def get_ingredients(self):
        return self.decorated_coffee.get_ingredients() + '+sugar'

class Milk(Abstract_Coffee_Decorator):
    def __init__(self, decorated_coffee):
        Abstract_Coffee_Decorator.__init__(self, decorated_coffee)

    def get_cost(self):
        return self.decorated_coffee.get_cost() + 0.25

    def get_ingredients(self):
        return self.decorated_coffee.get_ingredients() + '+milk'

class Vanilla(Abstract_Coffee_Decorator):
    def __init__(self, decorated_coffee):
        Abstract_Coffee_Decorator.__init__(self, decorated_coffee)

    def get_cost(self):
        return self.decorated_coffee.get_cost() + 0.75

    def get_ingredients(self):
        return self.decorated_coffee.get_ingredients() + '+vanilla'

def client():
    choice = int(input(""Enter the number of your choice: ""))
    if choice == 1:
        myCoffee = Concrete_Coffee()
        print('Ingredients: ' + myCoffee.get_ingredients() + '; Cost: ' + str(myCoffee.get_cost()) + '; sales tax = ' + str(myCoffee.get_tax()))
    elif choice == 2:
        myCoffee = Sugar(Concrete_Coffee())
        print('Ingredients: ' + myCoffee.get_ingredients() + '; Cost: ' + str(myCoffee.get_cost()) + '; sales tax = ' + str(myCoffee.get_tax()))
    elif choice == 3:
        myCoffee = Milk(Concrete_Coffee())
        print('Ingredients: ' + myCoffee.get_ingredients() + '; Cost: ' + str(myCoffee.get_cost()) + '; sales tax = ' + str(myCoffee.get_tax()))
    elif choice == 4:
        myCoffee = Vanilla(Milk(Concrete_Coffee()))
        print('Ingredients: ' + myCoffee.get_ingredients() + '; Cost: ' + str(myCoffee.get_cost()) + '; sales tax = ' + str(myCoffee.get_tax()))
    elif choice == 5:
        myCoffee = Sugar(Vanilla(Milk(Concrete_Coffee())))
        print('Ingredients: ' + myCoffee.get_ingredients() + '; Cost: ' + str(myCoffee.get_cost()) + '; sales tax = ' + str(myCoffee.get_tax()))

client()
"
gF7YjAia,02 Composit_with_client,skb461,Python,Tuesday 26th of March 2024 07:39:02 PM CDT,"from abc import ABCMeta, abstractmethod
class IDepartment(metaclass=ABCMeta):
    @abstractmethod
    def __init__(self,employees):
        pass
    @abstractmethod
    def print_department(self):
        pass

class Accounting(IDepartment):
    def __init__(self,employees):
        self.employees = employees
    def print_department(self):
        print(f""Accounting Department: {self.employees}"")

class Sale(Accounting):
    def __init__(self,employees):
        self.employees = employees
    def print_department(self):
        print(f""Sales Department: {self.employees}"")

class Retail(Accounting):
    def __init__(self,employees):
        self.employees = employees
    def print_department(self):
        print(f""Retail Department: {self.employees}"")

class Development(IDepartment):
    def __init__(self, employees):
        self.employees = employees
    def print_department(self):
        print(f""Development Department: {self.employees}"")

class ParentDepartment(IDepartment):
    def __init__(self, employees):
        self.employees = employees
        self.base_employees = employees
        self.sub_depts = []
    def add(self,dept):
        self.sub_depts.append(dept)
        self.employees += dept.employees
    def print_department(self):
        print(f""Parent Department Base Employees:{self.base_employees}"")
        for dept in self.sub_depts:
            dept.print_department()
        print(f""Total Number of Employees: {self.employees}"")

def client():
    employees = input(""Enter the number of employees for Parent Department: "")
    creator = ParentDepartment(employees)
    dept_name = input(""Enter the name of the Department: "")
    if dept_name == 'Development':
        employees = input(""Enter the number of employees for Development Department: "")
        dept_instance = Development(employees)
        creator.add(dept_instance)
    elif dept_name == 'Accounting':
        employees = input(""Enter the number of employees for Accounting Department: "")
        dept_instance = Accounting(employees)
        creator.add(dept_instance)
    elif dept_name == 'Retail':
        employees = input(""Enter the number of employees for Retail Department: "")
        dept_instance = Retail(employees)
        creator.add(dept_instance)
    elif dept_name == 'Sale':
        employees = input(""Enter the number of employees for Sale Department: "")
        dept_instance = Sale(employees)
        creator.add(dept_instance)

    creator.print_department()

client()
"
N0q6p4X5,01 Composit_without_client,skb461,Python,Tuesday 26th of March 2024 07:38:20 PM CDT,"from abc import ABC
class IDepartment (ABC):
    def __init__(self, employees):
        pass
    def print_department(self):
        pass
class Accounting (IDepartment):
    def __init__(self, employees):
        self.employees = employees
    def print_department(self):
        print(f""Accounting department: {self.employees}"")
class Development (IDepartment):
    def __init__(self,employees):
        self.employees = employees
    def print_department(self):
        print(f""Development department: {self.employees}"")
class Seles (Accounting):
    def __init__(self, employees):
        self.employees = employees
    def print_department(self):
        print(f""Seles department: {self.employees}"")
class Retail (Accounting):
    def __init__(self, employees):
        self.employees = employees
    def print_department(self):
        print(f""Retail department: {self.employees}"")
class ParantDepartment (IDepartment):
    def __init__(self, employees):
        self.employees = employees
        self.base_employees = employees
        self.sub_dept = []
    def add(self, dept):
        self.sub_dept.append(dept)
        self.employees += dept.employees
    def print_department(self):
        print(f""Parent department base employees: {self.base_employees}"")
        for dept in self.sub_dept:
            dept.print_department()
        print(f""The total number of employees: {self.employees}"")

dept1 = Accounting(100)
dept2 = Development(200)
dept3 = Seles(300)
dept4 = Retail(400)

Parant_Department = ParantDepartment(500)

Parant_Department.add(dept1)
Parant_Department.add(dept2)
Parant_Department.add(dept3)
Parant_Department.add(dept4)

Parant_Department.print_department()
"
xgj7QsLN,2024-03-26_stats.json,rdp_snitch,JSON,Tuesday 26th of March 2024 07:18:06 PM CDT,"{
  ""ip"": {
    ""194.165.16.72"": 9,
    ""194.165.16.78"": 6,
    ""185.190.24.54"": 3,
    ""205.210.31.250"": 9,
    ""87.251.75.145"": 12,
    ""179.60.147.118"": 3,
    ""185.196.220.41"": 9,
    ""193.142.146.227"": 9,
    ""2.57.168.180"": 3,
    ""193.118.52.78"": 18,
    ""152.89.198.238"": 3,
    ""87.251.75.120"": 6,
    ""192.3.101.25"": 9,
    ""185.170.144.3"": 6,
    ""123.56.20.194"": 3,
    ""113.160.91.206"": 3,
    ""109.205.213.99"": 3,
    ""179.60.147.44"": 3,
    ""141.98.9.34"": 3,
    ""46.4.34.209"": 3,
    ""198.235.24.41"": 9,
    ""45.227.254.55"": 12,
    ""162.142.125.224"": 3,
    ""36.91.222.100"": 3,
    ""196.190.117.7"": 3,
    ""165.154.32.235"": 3,
    ""185.234.216.33"": 6,
    ""167.94.145.59"": 3,
    ""198.235.24.105"": 9,
    ""87.251.75.64"": 3,
    ""128.199.242.196"": 75,
    ""71.6.134.231"": 30,
    ""212.70.149.146"": 3,
    ""205.210.31.218"": 9,
    ""62.204.41.222"": 3,
    ""45.227.254.26"": 6
  },
  ""asn"": {
    ""AS48721"": 15,
    ""AS211632"": 3,
    ""AS396982"": 36,
    ""AS208091"": 21,
    ""AS209588"": 9,
    ""AS208046"": 18,
    ""AS62240"": 3,
    ""AS21859"": 18,
    ""AS57523"": 9,
    ""AS36352"": 9,
    ""AS197414"": 6,
    ""AS37963"": 3,
    ""AS45899"": 3,
    ""AS19318"": 3,
    ""AS24940"": 3,
    ""AS267784"": 18,
    ""AS398324"": 3,
    ""AS7713"": 3,
    ""AS24757"": 3,
    ""AS135377"": 3,
    ""AS398705"": 3,
    ""AS14061"": 75,
    ""AS10439"": 30,
    ""AS204428"": 3,
    ""AS59425"": 3
  },
  ""isp"": {
    ""Flyservers S.A."": 42,
    ""Internet Solutions & Innovations LTD."": 3,
    ""Google LLC"": 36,
    ""Xhost Internet Solutions LP"": 27,
    ""ColocationX Ltd."": 18,
    ""Clouvider Limited"": 3,
    ""Zenlayer Inc"": 18,
    ""Chang Way Technologies Co. Limited"": 9,
    ""HostPapa"": 9,
    ""Hangzhou Alibaba Advertising Co"": 3,
    ""VietNam Post and Telecom Corporation"": 3,
    ""Interserver, Inc"": 3,
    ""Hetzner Online GmbH"": 3,
    ""Censys, Inc."": 6,
    ""PT Telekomunikasi Indonesia"": 3,
    ""Ethiotelecom"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""DigitalOcean, LLC"": 75,
    ""CariNet, Inc."": 30,
    ""SS-Net"": 3,
    ""Horizon LLC"": 3
  },
  ""org"": {
    ""Flyservers S.A"": 15,
    ""Tribeka Web Advisors S.A"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Xhost Internet Solutions"": 21,
    ""Cloud Solutions S.A"": 6,
    ""Makut Investments"": 9,
    ""ColocationX Ltd"": 9,
    ""VPN Consumer New Jersey, United States of America"": 3,
    ""Zenlayer Inc"": 18,
    ""Starcrecium Limited"": 3,
    ""Unknown"": 12,
    ""Xhostis"": 6,
    ""Aliyun Computing Co., LTD"": 3,
    ""Vietnam Posts and Telecommunications Group"": 3,
    ""RaziNetwork"": 3,
    ""Alviva Holding Limited"": 3,
    ""Hetzner"": 3,
    ""UAB Host Baltic"": 18,
    ""Censys Inc"": 3,
    ""Telekomunikasi Indonesia"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Censys, Inc."": 3,
    ""DigitalOcean, LLC"": 75,
    ""CariNet, Inc."": 30,
    ""4Media Ltd"": 3,
    ""Horizon LLC"": 3
  },
  ""regionName"": {
    ""Kaunas"": 15,
    ""Mariehamns stad"": 3,
    ""California"": 36,
    ""North Holland"": 57,
    ""Distrito Federal"": 6,
    ""Virginia"": 9,
    ""New Jersey"": 6,
    ""Moscow"": 12,
    ""New York"": 9,
    ""Beijing"": 3,
    ""Hanoi"": 3,
    ""Saxony"": 3,
    ""Vilnius"": 18,
    ""Michigan"": 3,
    ""Jakarta"": 3,
    ""Addis Ababa"": 3,
    ""Metro Manila"": 3,
    ""Hesse"": 3,
    ""South West"": 75,
    ""Nevada"": 30,
    ""Sliven"": 3
  },
  ""country"": {
    ""Lithuania"": 33,
    ""Aland Islands"": 3,
    ""United States"": 93,
    ""The Netherlands"": 57,
    ""Venezuela"": 6,
    ""Russia"": 12,
    ""China"": 3,
    ""Vietnam"": 3,
    ""Germany"": 6,
    ""Indonesia"": 3,
    ""Ethiopia"": 3,
    ""Philippines"": 3,
    ""Singapore"": 75,
    ""Bulgaria"": 3
  },
  ""account"": {
    ""Test"": 45,
    ""Administr"": 42,
    ""YPAfEVQMX"": 3,
    ""pilbJw"": 3,
    ""qZGaGp"": 3,
    ""Domain"": 36,
    ""(empty)"": 9,
    ""root"": 18,
    ""hello"": 84,
    ""hLSUinzqA"": 3,
    ""nLHjeF"": 3,
    ""XOMcMm"": 3,
    ""Administrator"": 3,
    ""tLXKbTnDx"": 3,
    ""zOcdSi"": 3,
    ""cSkjqi"": 3,
    ""eltons"": 15,
    ""administr"": 15,
    ""FibYIQRru"": 3,
    ""boIHVY"": 3,
    ""JpwXNH"": 3
  },
  ""keyboard"": {
    ""Unknown"": 303
  },
  ""client_build"": {
    ""Unknown"": 303
  },
  ""client_name"": {
    ""Unknown"": 303
  },
  ""ip_type"": {
    ""Unknown"": 102,
    ""hosting"": 93,
    ""mobile"": 9,
    ""mobile & hosting & proxy"": 3,
    ""proxy"": 9,
    ""hosting & proxy"": 87
  }
}"
BEgiGcY5,2024-03-26_stats.json,rdp_snitch,JSON,Tuesday 26th of March 2024 07:16:05 PM CDT,"{
  ""ip"": {
    ""194.165.16.72"": 6,
    ""194.165.16.78"": 4,
    ""185.190.24.54"": 2,
    ""205.210.31.250"": 6,
    ""87.251.75.145"": 8,
    ""179.60.147.118"": 2,
    ""185.196.220.41"": 6,
    ""193.142.146.227"": 6,
    ""2.57.168.180"": 2,
    ""193.118.52.78"": 12,
    ""152.89.198.238"": 2,
    ""87.251.75.120"": 4,
    ""192.3.101.25"": 6,
    ""185.170.144.3"": 4,
    ""123.56.20.194"": 2,
    ""113.160.91.206"": 2,
    ""109.205.213.99"": 2,
    ""179.60.147.44"": 2,
    ""141.98.9.34"": 2,
    ""46.4.34.209"": 2,
    ""198.235.24.41"": 6,
    ""45.227.254.55"": 8,
    ""162.142.125.224"": 2,
    ""36.91.222.100"": 2,
    ""196.190.117.7"": 2,
    ""165.154.32.235"": 2,
    ""185.234.216.33"": 4,
    ""167.94.145.59"": 2,
    ""198.235.24.105"": 6,
    ""87.251.75.64"": 2,
    ""128.199.242.196"": 50,
    ""71.6.134.231"": 20,
    ""212.70.149.146"": 2,
    ""205.210.31.218"": 6,
    ""62.204.41.222"": 2,
    ""45.227.254.26"": 4
  },
  ""asn"": {
    ""AS48721"": 10,
    ""AS211632"": 2,
    ""AS396982"": 24,
    ""AS208091"": 14,
    ""AS209588"": 6,
    ""AS208046"": 12,
    ""AS62240"": 2,
    ""AS21859"": 12,
    ""AS57523"": 6,
    ""AS36352"": 6,
    ""AS197414"": 4,
    ""AS37963"": 2,
    ""AS45899"": 2,
    ""AS19318"": 2,
    ""AS24940"": 2,
    ""AS267784"": 12,
    ""AS398324"": 2,
    ""AS7713"": 2,
    ""AS24757"": 2,
    ""AS135377"": 2,
    ""AS398705"": 2,
    ""AS14061"": 50,
    ""AS10439"": 20,
    ""AS204428"": 2,
    ""AS59425"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 28,
    ""Internet Solutions & Innovations LTD."": 2,
    ""Google LLC"": 24,
    ""Xhost Internet Solutions LP"": 18,
    ""ColocationX Ltd."": 12,
    ""Clouvider Limited"": 2,
    ""Zenlayer Inc"": 12,
    ""Chang Way Technologies Co. Limited"": 6,
    ""HostPapa"": 6,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""VietNam Post and Telecom Corporation"": 2,
    ""Interserver, Inc"": 2,
    ""Hetzner Online GmbH"": 2,
    ""Censys, Inc."": 4,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Ethiotelecom"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""DigitalOcean, LLC"": 50,
    ""CariNet, Inc."": 20,
    ""SS-Net"": 2,
    ""Horizon LLC"": 2
  },
  ""org"": {
    ""Flyservers S.A"": 10,
    ""Tribeka Web Advisors S.A"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 14,
    ""Cloud Solutions S.A"": 4,
    ""Makut Investments"": 6,
    ""ColocationX Ltd"": 6,
    ""VPN Consumer New Jersey, United States of America"": 2,
    ""Zenlayer Inc"": 12,
    ""Starcrecium Limited"": 2,
    ""Unknown"": 8,
    ""Xhostis"": 4,
    ""Aliyun Computing Co., LTD"": 2,
    ""Vietnam Posts and Telecommunications Group"": 2,
    ""RaziNetwork"": 2,
    ""Alviva Holding Limited"": 2,
    ""Hetzner"": 2,
    ""UAB Host Baltic"": 12,
    ""Censys Inc"": 2,
    ""Telekomunikasi Indonesia"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Censys, Inc."": 2,
    ""DigitalOcean, LLC"": 50,
    ""CariNet, Inc."": 20,
    ""4Media Ltd"": 2,
    ""Horizon LLC"": 2
  },
  ""regionName"": {
    ""Kaunas"": 10,
    ""Mariehamns stad"": 2,
    ""California"": 24,
    ""North Holland"": 38,
    ""Distrito Federal"": 4,
    ""Virginia"": 6,
    ""New Jersey"": 4,
    ""Moscow"": 8,
    ""New York"": 6,
    ""Beijing"": 2,
    ""Hanoi"": 2,
    ""Saxony"": 2,
    ""Vilnius"": 12,
    ""Michigan"": 2,
    ""Jakarta"": 2,
    ""Addis Ababa"": 2,
    ""Metro Manila"": 2,
    ""Hesse"": 2,
    ""South West"": 50,
    ""Nevada"": 20,
    ""Sliven"": 2
  },
  ""country"": {
    ""Lithuania"": 22,
    ""Aland Islands"": 2,
    ""United States"": 62,
    ""The Netherlands"": 38,
    ""Venezuela"": 4,
    ""Russia"": 8,
    ""China"": 2,
    ""Vietnam"": 2,
    ""Germany"": 4,
    ""Indonesia"": 2,
    ""Ethiopia"": 2,
    ""Philippines"": 2,
    ""Singapore"": 50,
    ""Bulgaria"": 2
  },
  ""account"": {
    ""Test"": 30,
    ""Administr"": 28,
    ""YPAfEVQMX"": 2,
    ""pilbJw"": 2,
    ""qZGaGp"": 2,
    ""Domain"": 24,
    ""(empty)"": 6,
    ""root"": 12,
    ""hello"": 56,
    ""hLSUinzqA"": 2,
    ""nLHjeF"": 2,
    ""XOMcMm"": 2,
    ""Administrator"": 2,
    ""tLXKbTnDx"": 2,
    ""zOcdSi"": 2,
    ""cSkjqi"": 2,
    ""eltons"": 10,
    ""administr"": 10,
    ""FibYIQRru"": 2,
    ""boIHVY"": 2,
    ""JpwXNH"": 2
  },
  ""keyboard"": {
    ""Unknown"": 202
  },
  ""client_build"": {
    ""Unknown"": 202
  },
  ""client_name"": {
    ""Unknown"": 202
  },
  ""ip_type"": {
    ""Unknown"": 68,
    ""hosting"": 62,
    ""mobile"": 6,
    ""mobile & hosting & proxy"": 2,
    ""proxy"": 6,
    ""hosting & proxy"": 58
  }
}"
Js39Vpdz,2024-03-26_stats.json,rdp_snitch,JSON,Tuesday 26th of March 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""194.165.16.72"": 3,
    ""194.165.16.78"": 2,
    ""185.190.24.54"": 1,
    ""205.210.31.250"": 3,
    ""87.251.75.145"": 4,
    ""179.60.147.118"": 1,
    ""185.196.220.41"": 3,
    ""193.142.146.227"": 3,
    ""2.57.168.180"": 1,
    ""193.118.52.78"": 6,
    ""152.89.198.238"": 1,
    ""87.251.75.120"": 2,
    ""192.3.101.25"": 3,
    ""185.170.144.3"": 2,
    ""123.56.20.194"": 1,
    ""113.160.91.206"": 1,
    ""109.205.213.99"": 1,
    ""179.60.147.44"": 1,
    ""141.98.9.34"": 1,
    ""46.4.34.209"": 1,
    ""198.235.24.41"": 3,
    ""45.227.254.55"": 4,
    ""162.142.125.224"": 1,
    ""36.91.222.100"": 1,
    ""196.190.117.7"": 1,
    ""165.154.32.235"": 1,
    ""185.234.216.33"": 2,
    ""167.94.145.59"": 1,
    ""198.235.24.105"": 3,
    ""87.251.75.64"": 1,
    ""128.199.242.196"": 25,
    ""71.6.134.231"": 10,
    ""212.70.149.146"": 1,
    ""205.210.31.218"": 3,
    ""62.204.41.222"": 1,
    ""45.227.254.26"": 2
  },
  ""asn"": {
    ""AS48721"": 5,
    ""AS211632"": 1,
    ""AS396982"": 12,
    ""AS208091"": 7,
    ""AS209588"": 3,
    ""AS208046"": 6,
    ""AS62240"": 1,
    ""AS21859"": 6,
    ""AS57523"": 3,
    ""AS36352"": 3,
    ""AS197414"": 2,
    ""AS37963"": 1,
    ""AS45899"": 1,
    ""AS19318"": 1,
    ""AS24940"": 1,
    ""AS267784"": 6,
    ""AS398324"": 1,
    ""AS7713"": 1,
    ""AS24757"": 1,
    ""AS135377"": 1,
    ""AS398705"": 1,
    ""AS14061"": 25,
    ""AS10439"": 10,
    ""AS204428"": 1,
    ""AS59425"": 1
  },
  ""isp"": {
    ""Flyservers S.A."": 14,
    ""Internet Solutions & Innovations LTD."": 1,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 9,
    ""ColocationX Ltd."": 6,
    ""Clouvider Limited"": 1,
    ""Zenlayer Inc"": 6,
    ""Chang Way Technologies Co. Limited"": 3,
    ""HostPapa"": 3,
    ""Hangzhou Alibaba Advertising Co"": 1,
    ""VietNam Post and Telecom Corporation"": 1,
    ""Interserver, Inc"": 1,
    ""Hetzner Online GmbH"": 1,
    ""Censys, Inc."": 2,
    ""PT Telekomunikasi Indonesia"": 1,
    ""Ethiotelecom"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""DigitalOcean, LLC"": 25,
    ""CariNet, Inc."": 10,
    ""SS-Net"": 1,
    ""Horizon LLC"": 1
  },
  ""org"": {
    ""Flyservers S.A"": 5,
    ""Tribeka Web Advisors S.A"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 7,
    ""Cloud Solutions S.A"": 2,
    ""Makut Investments"": 3,
    ""ColocationX Ltd"": 3,
    ""VPN Consumer New Jersey, United States of America"": 1,
    ""Zenlayer Inc"": 6,
    ""Starcrecium Limited"": 1,
    ""Unknown"": 4,
    ""Xhostis"": 2,
    ""Aliyun Computing Co., LTD"": 1,
    ""Vietnam Posts and Telecommunications Group"": 1,
    ""RaziNetwork"": 1,
    ""Alviva Holding Limited"": 1,
    ""Hetzner"": 1,
    ""UAB Host Baltic"": 6,
    ""Censys Inc"": 1,
    ""Telekomunikasi Indonesia"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Censys, Inc."": 1,
    ""DigitalOcean, LLC"": 25,
    ""CariNet, Inc."": 10,
    ""4Media Ltd"": 1,
    ""Horizon LLC"": 1
  },
  ""regionName"": {
    ""Kaunas"": 5,
    ""Mariehamns stad"": 1,
    ""California"": 12,
    ""North Holland"": 19,
    ""Distrito Federal"": 2,
    ""Virginia"": 3,
    ""New Jersey"": 2,
    ""Moscow"": 4,
    ""New York"": 3,
    ""Beijing"": 1,
    ""Hanoi"": 1,
    ""Saxony"": 1,
    ""Vilnius"": 6,
    ""Michigan"": 1,
    ""Jakarta"": 1,
    ""Addis Ababa"": 1,
    ""Metro Manila"": 1,
    ""Hesse"": 1,
    ""South West"": 25,
    ""Nevada"": 10,
    ""Sliven"": 1
  },
  ""country"": {
    ""Lithuania"": 11,
    ""Aland Islands"": 1,
    ""United States"": 31,
    ""The Netherlands"": 19,
    ""Venezuela"": 2,
    ""Russia"": 4,
    ""China"": 1,
    ""Vietnam"": 1,
    ""Germany"": 2,
    ""Indonesia"": 1,
    ""Ethiopia"": 1,
    ""Philippines"": 1,
    ""Singapore"": 25,
    ""Bulgaria"": 1
  },
  ""account"": {
    ""Test"": 15,
    ""Administr"": 14,
    ""YPAfEVQMX"": 1,
    ""pilbJw"": 1,
    ""qZGaGp"": 1,
    ""Domain"": 12,
    ""(empty)"": 3,
    ""root"": 6,
    ""hello"": 28,
    ""hLSUinzqA"": 1,
    ""nLHjeF"": 1,
    ""XOMcMm"": 1,
    ""Administrator"": 1,
    ""tLXKbTnDx"": 1,
    ""zOcdSi"": 1,
    ""cSkjqi"": 1,
    ""eltons"": 5,
    ""administr"": 5,
    ""FibYIQRru"": 1,
    ""boIHVY"": 1,
    ""JpwXNH"": 1
  },
  ""keyboard"": {
    ""Unknown"": 101
  },
  ""client_build"": {
    ""Unknown"": 101
  },
  ""client_name"": {
    ""Unknown"": 101
  },
  ""ip_type"": {
    ""Unknown"": 34,
    ""hosting"": 31,
    ""mobile"": 3,
    ""mobile & hosting & proxy"": 1,
    ""proxy"": 3,
    ""hosting & proxy"": 29
  }
}"
w7E80Kku,SendInput working with games,LSJiqueue,C++,Tuesday 26th of March 2024 07:02:38 PM CDT,"#include <iostream>
#include <windows.h>
#include <stdlib.h>
int main(){
    while (true){
        if (GetAsyncKeyState(0x51) & 0x8000){ //if pressed Q
            SHORT key;
            UINT mappedKey; 
            INPUT input { 0 };
            key = VkKeyScan('e');
            mappedKey = MapVirtualKey(LOBYTE(key), 0);
            input.type = INPUT_KEYBOARD;
            input.ki.dwFlags = KEYEVENTF_SCANCODE;
            input.ki.wScan = mappedKey;
            SendInput(1, &input, sizeof(input)); // key down
            Sleep(500);
            input.ki.dwFlags = KEYEVENTF_SCANCODE | KEYEVENTF_KEYUP; //key up
            SendInput(1, &input, sizeof(input));
        };
    }    
}"
6ftaCuXL,Redirect to new.reddit.com,Squito,JavaScript,Tuesday 26th of March 2024 06:57:57 PM CDT,"// ==UserScript==
// @name         Redirect Reddit URLs
// @namespace    http://tampermonkey.net/
// @version      0.1
// @description  Redirects all URLs from www.reddit.com to new.reddit.com, preserving everything after the domain name.
// @author       FurballGamer
// @match        *://www.reddit.com/*
// @exclude      *://reddit.com/*
// @exclude      *://www.reddit.com/media*
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    // Get the current URL
    var currentUrl = window.location.href;

    // Replace 'www.reddit.com' with 'new.reddit.com'
    var newUrl = currentUrl.replace('www.reddit.com', 'new.reddit.com');

    // Redirect to the new URL
    window.location.href = newUrl;
})();"
k55Ca9Kq,Simple Example Orbiting With Vector2,Windspar,Python,Tuesday 26th of March 2024 06:54:54 PM CDT,"# Improved. Instead of using angle. I use a rotation vector.
import pygame

TRANSPARENT = 0, 0, 0, 0
ORBIT_SPEED = 3000

def get_angle_vector(distance=1, angle=0):
    vector = pygame.Vector2()
    vector.from_polar((distance, angle))
    return vector

def create_circle(size, color):
    rect = pygame.Rect((0, 0), size)
    surface = pygame.Surface(size, pygame.SRCALPHA)
    surface.fill(TRANSPARENT)
    radius = min((rect.centerx, rect.centery))
    pygame.draw.circle(surface, color, rect.center, radius)
    return surface

class OrbitObject(pygame.sprite.Sprite):
    def __init__(self, image, position, distance):
        super().__init__()
        self.image = image
        self.rect = image.get_rect()
        self.orbit_point = position
        self.rotation_vector = get_angle_vector(distance, 0)
        self.speed = ORBIT_SPEED / distance
        self.rect.center = self.rotation_vector + self.orbit_point

    def update(self, delta):
        self.rotation_vector.rotate_ip(self.speed * delta)
        self.rect.center = self.rotation_vector + self.orbit_point

def main(caption, width, height, flags=0, fps=60):
    # Simple Pygame Setup
    pygame.display.set_caption(caption)
    surface = pygame.display.set_mode((width, height), flags)
    rect = surface.get_rect()
    clock = pygame.time.Clock()
    running = True
    delta = 0
    fps = fps

    # Variables
    background_color = 'black'
    images = []
    images.append(create_circle((10, 40), 'lawngreen'))
    images.append(create_circle((20, 40), 'dodgerblue'))
    images.append(create_circle((40, 40), 'violet'))

    sprites = pygame.sprite.Group(OrbitObject(images[0], rect.center, 20),
                                  OrbitObject(images[1], rect.center, 50),
                                  OrbitObject(images[2], rect.center, 150))

    # Main Loop
    while running:
        for event in pygame.event.get():
            if event.type == pygame.MOUSEBUTTONDOWN:
                if event.button == 1:
                    for sprite in sprites:
                        sprite.orbit_point = event.pos
                elif event.button == 3:
                    for sprite in sprites:
                        sprite.orbit_point = rect.center
            elif event.type == pygame.QUIT:
                running = False

        # Logic
        sprites.update(delta)

        # Draw
        surface.fill(background_color)
        sprites.draw(surface)

        # Render Buffer To Screen
        pygame.display.flip()
        # Idle And Get Delta Time
        delta = clock.tick(fps) / 1000

pygame.init()
main('Orbit with vectors', 800, 600)
pygame.quit()
"
tRjPVHC3,Untitled,Fuska123,Lua,Tuesday 26th of March 2024 06:50:32 PM CDT,"event-world: event # –º–∏—Ä –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—Å–µ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å
spawn-world: spawn
spawn-location: '' # –õ–æ–∫–∞—Ü–∏—è –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥—É—Ç —Å–ø–∞–≤–Ω–∏—Ç—Å—è –∏–≥—Ä–æ–∫–∏ ( /sunevent setplayerspawn )

settings:
  event:
    time:
      week-day: 'SATURDAY' # –°—É–±–±–æ—Ç–∞
      hour: '16'
      minute: '00'
      to-end: 5400 # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–≤–µ–Ω—Ç–∞ ( —Å–µ–∫—É–Ω–¥—ã )
  top-amount: 5 # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ —Ç–æ–ø–µ, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω –≤ —á–∞—Ç
  top-message: '&e%index%&f: %player% - &e–ù–∞–Ω—ë—Å &6%damage% —É—Ä–æ–Ω–∞!'
  prizes: # –ü—Ä–∏–∑—ã
    '1': # –ø–µ—Ä–≤–æ–º—É –º–µ—Å—Ç—É
      commands:
        - 'give %player% diamond 5'
    '2': # –≤—Ç–æ—Ä–æ–º—É –º–µ—Å—Ç—É
      commands:
        - 'give %player% diamond 4'
    '3':
      commands:
        - 'give %player% diamond 3'
  actions:
    on-start:
      - 'message:        &e&l–ú–ï–ñ–ì–ê–õ–ê–ö–¢–ò–ß–ï–°–ö–ò–ô –ò–í–ï–ù–¢!'
      - 'message:&r &r'
      - 'message:&7 ‚ïî &f–ü–æ—è–≤–∏–ª—Å—è –±–æ—Å—Å –≤ –¥—Ä—É–≥–æ–º &e–º–∏—Ä–µ'
      - 'message:&7 ‚ïö &f–ü–æ–ø–∞—Å—Ç—å —Ç—É–¥–∞ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –ø–æ—Ä—Ç–∞–ª &8(&e/warp portal&8)'
      - 'message:&r &r'
      - 'sound:AMBIENT_CAVE'
    on-end:
      empty-players:
        - 'message:        &e&l–ú–ï–ñ–ì–ê–õ–ê–ö–¢–ò–ß–ï–°–ö–ò–ô –ò–í–ï–ù–¢!'
        - 'message:&r &r'
        - 'message:&7 ‚ïî &f–ù–∏–∫—Ç–æ –Ω–µ —Ä–µ—à–∏–ª—Å—è –æ–¥–æ–ª–µ—Ç—å –±–æ—Å—Å–∞, –∏–≤–µ–Ω—Ç –∑–∞–∫–æ–Ω—á–µ–Ω.'
        - 'message:&7 ‚ïö &f–°–¥–µ–¥—É—é—â–∏–π –æ–∂–∏–¥–∞–µ—Ç—Å—è –≤ &e–°—É–±–±–æ—Ç—É –≤ 16:00 –ú–°–ö'
        - 'message:&r &r'
        - 'sound:ENTITY_WITHER_DEATH'
      non-empty-players:
        - 'message:        &e&l–ú–ï–ñ–ì–ê–õ–ê–ö–¢–ò–ß–ï–°–ö–ò–ô –ò–í–ï–ù–¢!'
        - 'message:&r &r'
        - 'message:&7 ‚ïî &f–ò–≤–µ–Ω—Ç –ø–æ–¥–æ—à—ë–ª –≤ –∫–æ–Ω—Ü—É! –ü–µ—Ä–≤—ã–µ &e3 –º–µ—Å—Ç–∞ –ø–æ —É—Ä–æ–Ω—É.'
        - 'message:&7 ‚ïö &f–ü–æ–ª—É—á–∏–ª–∏ —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É!'
        - 'message:&r &r'
        - 'message:&e–¢–æ–ø –ø–æ —É—Ä–æ–Ω—É –∑–∞ –∏–≤–µ–Ω—Ç:'
        - 'message:%top%'
        - 'sound:ENTITY_WITHER_DEATH'

boss:
  spawn: '' # –õ–æ–∫–∞—Ü–∏—è —Å–ø–∞–≤–Ω–∞ –±–æ—Å—Å–∞ ( /sunevent setbossspawn )
  type: WITHER
  health: 1028
  knock-back:
    enable: true
    repeat: 30 # –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –æ—Ç–∫–∏–¥—ã–≤–∞–Ω–∏—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    min-blocks: 10
    max-blocks: 20
  spawn-kids:
    enable: true
    repeat: 120
    mob: ZOMBIE
    amount: 3
    display: '&e&l–ü–ò–ó–î–Æ–ö'
    health: 512
  freeze:
    enable: true
    repeat: 90
    radius: 30
    message: '&e–í—ã –±—ã–ª–∏ –∑–∞–º–æ—Ä–æ–∂–µ–Ω—ã –Ω–∞ 10 —Å–µ–∫—É–Ω–¥' # –º–æ–∂–Ω–æ —Å—Ç–µ—Ä–µ—Ç—å
    seconds: 10
  display: '&5&l–ë–û–°–° –ì–ê–õ–ê–ö–¢–ò–ö–ò'
  damage: 10 # –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –¥–∞–º–∞–≥–∞ –ù–ê....
  equip: #–≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞ –±–æ—Å—Å–∞, –µ—Å–ª–∏ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–æ–∂–Ω–æ —Å—Ç–µ—Ä–µ—Ç—å –≤—Å—é —Å—Ç—Ä–æ–∫—É
    helmet:
      material: DIAMOND_HELMET
      enchants:
        - 'DURABILITY;3'
    chestplate:
      material: DIAMOND_CHESTPLATE
    leggings:
      material: DIAMOND_LEGGINGS
    boots:
      material: DIAMOND_BOOTS
    mainhand:
      material: DIAMOND_SWORD
    offhand:
      material: SHIELD
  bossbar:
    title: '%display% &c%health% / %maxhealth%'
    color: YELLOW
    style: SOLID

messages:
  too-early: '&c!!! &f–û—Ç–∫—Ä—ã—Ç–∏–µ &e–∏–∑–º–µ—Ä–µ–Ω–∏—è &f–ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –≤ &e–°—É–±–±–æ—Ç—É 16:00 –ú–°–ö'
  set-player-spawn: '&f–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Å–ø–∞–≤–Ω –∏–≥—Ä–æ–∫–æ–≤ –ø—Ä–∏ –∏–≤–µ–Ω—Ç–µ'
  set-boss-spawn: '&f–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Å–ø–∞–≤–Ω –¥–ª—è –±–æ—Å—Å–∞'
  selection-empty: '&f–ù—É–∂–Ω–æ –≤—ã–¥–µ–ª–∏—Ç—å —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é &e//wand'
  set-portal: '&f–£—Å—Ç–∞–Ω–æ–≤–µ–Ω –Ω–æ–≤—ã–π –ø–æ—Ä—Ç–∞–ª.'
  disable-god: '–í—ã–∫–ª—é—á–∏—Ç–µ –≥–æ–¥ –ø–∂'"
474HXegQ,Untitled,Fuska123,Lua,Tuesday 26th of March 2024 06:42:20 PM CDT,"
## Main strings
NoPerm: '&f–ö–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —É –í–∞—Å –Ω–µ—Ç—É –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–µ–π, –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å ¬ß6/help &f–¥–ª—è –ø–æ–º–æ—â–∏.'
UnknownCommand: '¬ßf–ö–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —É –í–∞—Å –Ω–µ—Ç—É –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–µ–π, –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å ¬ß6/help &f–¥–ª—è –ø–æ–º–æ—â–∏.'

## AntiSymbols && msgMesssages
TextError: '¬ßf–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ. &6–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã!'
BlockWords: # –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ (–ø—Ä–æ–±–µ–ª—ã —Ñ–∏–ª—å—Ç—Ä—É—é—Ç—Å—è –ø–ª–∞–≥–∏–Ω–æ–º, —Ç–∞–∫ —á—Ç–æ –ø–∏–∞—Ä–∏—Ç—å –∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–æ–±–µ–ª (play . minecraft . com : 25565) –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è)
  - ""ru""
  - "".ru""
  - ""r!u""
  - ""r.u""
  - ""ru!""
  - ""play""
  - "".play""
  - ""p!lay""
  - ""pl!ay""
  - ""pla!y""
  - ""play!""
  - ""core""
  - "".core""
  - ""c.ore""
  - ""co.re""
  - ""cor.e""
  - ""core.""
  - ""!core""
  - ""c!ore""
  - ""cor!e""
  - ""xyz""
  - "".xyz""
  - ""x.yz""
  - ""x!yz""
  - ""!xyz""
  - ""xy!z""
  - ""mc""
  - "".mc""
  - ""m!c""
  - ""m.c""
  - ""net""
  - "".net""
  - ""n!et""
  - ""ne!t""

## msgMessages
# –ü—Ä–∞–≤–∞: swcore.msg.use - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥
# –ö–æ–º–∞–Ω–¥—ã: /m - –∞–ª–∏–∞—Å—ã: /msg, /tell
Format: ""&6[&c{sender} &6-> &c{recipient}&6] &f{message}""

## JoinText
JoinText:
  - ''
  - '¬ß6¬ßm ¬ß7¬ßm                                          ¬ß6¬ßm '
  - '             ¬ß8¬ßl¬ßm[¬ßr ¬ß6¬ßlWild¬ße¬ßlGrief¬ßr ¬ß8¬ßl¬ßm]'
  - '   ¬ß6–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä!'
  - ''
  - '   ¬ßf–í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã:'
  - '     ¬ß8‚û• ¬ßf–ü–æ–¥—Ä–æ–±–Ω–µ–µ: ¬ßa¬ßn/reward¬ßr'
  - '¬ß6¬ßm ¬ß7¬ßm                                          ¬ß6¬ßm '
  - ''

## Limiter
enable: true #–í–∫–ª—é—á–∏—Ç—å/–í—ã–∫–ª—é—á–∏—Ç—å —Ä–∞–±–æ—Ç—É –ø–ª–∞–≥–∏–Ω–∞
blocks:
  HOPPER: 32 #–ë–õ–û–ö:–ö–û–õ–ò–ß–ï–°–¢–í–û
  PISTON: 32 #–ë–õ–û–ö:–ö–û–õ–ò–ß–ï–°–¢–í–û
  STICKY_PISTON: 32 #–ë–õ–û–ö:–ö–û–õ–ò–ß–ï–°–¢–í–û
limit-actions:
  - 'message: ¬ßf–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å—Ç–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ &6%count%&f –¥–∞–Ω–Ω—ã—Ö –±–ª–æ–∫–æ–≤ –Ω–∞ —á–∞–Ω–∫!'
  - 'title: &f;&6‚ö†'
  - 'sound: ENTITY_VILLAGER_NO' #–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–≤—É–∫–∞ –∏–≥—Ä–æ–∫—É
entity:
  ARMOR_STAND: 6 # –°–¢–û–ô–ö–ê –î–õ–Ø –ë–†–û–ù–ò

## NotificationDonate
ListMessageDonate:
  1:
    - '&6 ‚ïî'
    - '&6 ‚ïë &f–ò–≥—Ä–æ–∫ &6&n%player%&r&f &a&l%text%'
    - '&6 ‚ïë &f–ù–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ: &6&lWildGrief.net'
    - '&6 ‚ïë &f–ò–≥—Ä–æ–∫ –∑–Ω–∞–µ—Ç, —á—Ç–æ –¥–µ–ª–∞–µ—Ç, —É–∫—Ä–µ–ø–ª—è—è —Å–≤–æ—é –ø–æ–∑–∏—Ü–∏—é –≤ —Ç–∞–±–µ!'
    - '&6 ‚ïö'
  2:
    - '&6 ‚ïî'
    - '&6 ‚ïë &f–ò–≥—Ä–æ–∫ &6&n%player%&r&f &a&l%text%'
    - '&6 ‚ïë &f–ù–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ: &6&lWildGrief.net'
    - '&6 ‚ïë &f–ß—É–¥–æ-–ø–µ—á–∫–∏, —Ç–æ–ø–æ–≤—ã–µ —Å—Ç—Ä–µ–ª—ã –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ –∂–¥—ë—Ç –µ–≥–æ!'
    - '&6 ‚ïö'
  3:
    - '&6 ‚ïî'
    - '&6 ‚ïë &f–ò–≥—Ä–æ–∫ &6&n%player%&r&f &a&l%text%'
    - '&6 ‚ïë &f–ù–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ: &6&lWildGrief.net'
    - '&6 ‚ïë &f–û—á–µ–Ω—å —Å–∫–æ—Ä–æ –≤–æ–∑–≤—ã—Å–∏—Ç—Å—è –Ω–æ–≤—ã–π –¥–æ–Ω–∞—Ç–µ—Ä, —Ç—Ä–µ–ø–µ—â–∏—Ç–µ!'
    - '&6 ‚ïö'
  4:
    - '&6 ‚ïî'
    - '&6 ‚ïë &f–ò–≥—Ä–æ–∫ &6&n%player%&r&f &a&l%text%'
    - '&6 ‚ïë &f–ù–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ: &6&lWildGrief.net'
    - '&6 ‚ïë &fC –µ–≥–æ –Ω—ã–Ω–µ—à–Ω–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ - –æ–Ω –±–æ–≥–æ–ø–æ–¥–æ–±–µ–Ω!'
    - '&6 ‚ïö'
  5:
    - '&6 ‚ïî'
    - '&6 ‚ïë &f–ò–≥—Ä–æ–∫ &6&n%player%&r&f &a&l%text%'
    - '&6 ‚ïë &f–ù–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ: &6&lWildGrief.net'
    - '&6 ‚ïë &f–ü–æ–ø—Ä–æ—à–∞–π–∫–∏, –Ω–∞–ª–µ—Ç–∞–π—Ç–µ, –∫–æ–º—É-—Ç–æ —Å–µ–≥–æ–¥–Ω—è –ø–æ–≤–µ–∑—ë—Ç!'
    - '&6 ‚ïö'
  6:
    - '&6 ‚ïî'
    - '&6 ‚ïë &f–ò–≥—Ä–æ–∫ &6&n%player%&r&f &a&l%text%'
    - '&6 ‚ïë &f–ù–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ: &6&lWildGrief.net'
    - '&6 ‚ïë &f–†—É–±–ª–µ–≤–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –ø–æ–º–æ–∂–µ—Ç –µ–º—É –Ω–∞ –ø–æ–ª–µ –±–æ—è!'
    - '&6 ‚ïö'
  7:
    - '&6 ‚ïî'
    - '&6 ‚ïë &f–ò–≥—Ä–æ–∫ &6&n%player%&r&f &a&l%text%'
    - '&6 ‚ïë &f–ù–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ: &6&lWildGrief.net'
    - '&6 ‚ïë &f–ü–æ—Ä–∞ –ø—Ä—è—Ç–∞—Ç—å—Å—è, –∫—Ç–æ-—Ç–æ —Å–∫–æ—Ä–æ —Ç–µ–±—è –Ω–∞–π–¥—ë—Ç!'
    - '&6 ‚ïö'
  8:
    - '&6 ‚ïî'
    - '&6 ‚ïë &f–ò–≥—Ä–æ–∫ &6&n%player%&r&f &a&l%text%'
    - '&6 ‚ïë &f–ù–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ: &6&lWildGrief.net'
    - '&6 ‚ïë &f–ö—Ç–æ –Ω–µ —Ä–∏—Å–∫—É–µ—Ç, —Ç–æ—Ç –Ω–µ –ø—å—ë—Ç —à–∞–º–ø–∞–Ω—Å–∫–æ–µ!'
    - '&6 ‚ïö'
  9:
    - '&6 ‚ïî'
    - '&6 ‚ïë &f–ò–≥—Ä–æ–∫ &6&n%player%&r&f &a&l%text%'
    - '&6 ‚ïë &f–ù–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ: &6&lWildGrief.net'
    - '&6 ‚ïë &f–û–Ω –∫—Ä–∞—Å–∞–≤—á–∏–∫! –ê–ø–ª–æ–¥–∏—Å–º–µ–Ω—Ç—ã –µ–º—É!'
    - '&6 ‚ïö'
  10:
    - '&6 ‚ïî'
    - '&6 ‚ïë &f–ò–≥—Ä–æ–∫ &6&n%player%&r&f &a&l%text%'
    - '&6 ‚ïë &f–ù–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ: &6&lWildGrief.net'
    - '&6 ‚ïë &f–¢—Ä–µ–ø–µ—â–∏—Ç–µ –≤—Å–µ –µ–≥–æ –≤—Ä–∞–≥–∏!'
    - '&6 ‚ïö'
  11:
    - '&6 ‚ïî'
    - '&6 ‚ïë &f–ò–≥—Ä–æ–∫ &6&n%player%&r&f &a&l%text%'
    - '&6 ‚ïë &f–ù–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ: &6&lWildGrief.net'
    - '&6 ‚ïë &f–ë—É–¥—å —Ä—è–¥–æ–º, —Å —ç—Ç–∏–º –±–æ–≥–æ–º!'
    - '&6 ‚ïö'

## ProtectAdmin
ProtectAllowedUsernames:
  - bubrovskiy"
npcCKUEf,Untitled,sinusinusa,SQL,Tuesday 26th of March 2024 06:12:14 PM CDT,"SELECT p.ProductName, ISNULL(c.CategoryName, '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏') AS CategoryName
FROM Products p
LEFT JOIN ProductCategories pc ON p.ProductID = pc.ProductID
LEFT JOIN Categories c ON pc.CategoryID = c.CategoryID;"
D4P6BK4p,Superstructures Error,ArttieF,XML,Tuesday 26th of March 2024 05:29:31 PM CDT,"An error occurred while deserializing a file!: A:\SteamLibrary\steamapps\workshop\content\544550\3159841144/GameData\prefabsettings.xml - There is an error in XML document (4, 7). : The specified type was not recognized: name='StructureModData', namespace='', at <ThingModData xmlns=''>.
Failed to load A:\SteamLibrary\steamapps\workshop\content\544550\3159841144/GameData\prefabsettings.xml"
MUqsEGxR,Fstab,bluebyt,INI file,Tuesday 26th of March 2024 04:51:22 PM CDT,"KDE 
# Static information about the filesystems.
# See fstab(5) for details.

# <file system> <dir> <type> <options> <dump> <pass>
# /dev/nvme0n1p2
UUID=bdff1202-dd77-4a16-8963-ed07f6772b19	/         	ext4      	rw,relatime	0 1

# /dev/nvme1n1p3
UUID=43711f5a-30c3-4f7c-8570-ae7ec4bb994a      /mnt/media       ext4            defaults        0 0

# /dev/nvme0n1p1
UUID=A496-6758      	/boot     	vfat      	rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro	0 2

Gnome
# /dev/nvme1n1p2
UUID=94a0f41d-34b3-4aaa-9c10-0abee1debaa8	/         	ext4      	rw,relatime	0 1

# /dev/nvme1n1p3
UUID=43711f5a-30c3-4f7c-8570-ae7ec4bb994a       /mnt/media      ext4             defaults       0 0

# /dev/nvme0n1p2
UUID=bdff1202-dd77-4a16-8963-ed07f6772b19      /mnt/xfce        ext4             defaults       0 0

# /dev/nvme1n1p1
UUID=608D-A8BF      	/boot     	vfat      	rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro	0 2
"
SV9qRSft,Untitled,Profe-Lau,JavaScript,Tuesday 26th of March 2024 03:59:40 PM CDT,"const usuarios = [
    {
        id: 1,
        name: ""Leanne Graham"",
        username: ""Bret"",
        email: ""Sincere@april.biz"",
        address: {
            street: ""Kulas Light"",
            suite: ""Apt. 556"",
            city: ""Gwenborough"",
            zipcode: ""92998-3874"",
            geo: {
                lat: ""-37.3159"",
                lng: ""81.1496""
            }
        },
        phone: ""1-770-736-8031 x56442"",
        website: ""hildegard.org"",
        company: {
            name: ""Romaguera-Crona"",
            catchPhrase: ""Multi-layered client-server neural-net"",
            bs: ""harness real-time e-markets""
        }
    },
    {
        id: 2,
        name: ""Ervin Howell"",
        username: ""Antonette"",
        email: ""Shanna@melissa.tv"",
        address: {
            street: ""Victor Plains"",
            suite: ""Suite 879"",
            city: ""Wisokyburgh"",
            zipcode: ""90566-7771"",
            geo: {
                lat: ""-43.9509"",
                lng: ""-34.4618""
            }
        },
        phone: ""010-692-6593 x09125"",
        website: ""anastasia.net"",
        company: {
            name: ""Deckow-Crist"",
            catchPhrase: ""Proactive didactic contingency"",
            bs: ""synergize scalable supply-chains""
        }
    },
    {
        id: 3,
        name: ""Clementine Bauch"",
        username: ""Samantha"",
        email: ""Nathan@yesenia.net"",
        address: {
            street: ""Douglas Extension"",
            suite: ""Suite 847"",
            city: ""McKenziehaven"",
            zipcode: ""59590-4157"",
            geo: {
                lat: ""-68.6102"",
                lng: ""-47.0653""
            }
        },
        phone: ""1-463-123-4447"",
        website: ""ramiro.org"",
        company: {
            name: ""Romaguera-Jacobson"",
            catchPhrase: ""Face to face bifurcated interface"",
            bs: ""e-enable strategic applications""
        }
    },
    {
        id: 4,
        name: ""Patricia Lebsack"",
        username: ""Karianne"",
        email: ""Julianne.OConner@kory.org"",
        address: {
            street: ""Hoeger Mall"",
            suite: ""Apt. 692"",
            city: ""South Elvis"",
            zipcode: ""53919-4257"",
            geo: {
                lat: ""29.4572"",
                lng: ""-164.2990""
            }
        },
        phone: ""493-170-9623 x156"",
        website: ""kale.biz"",
        company: {
            name: ""Robel-Corkery"",
            catchPhrase: ""Multi-tiered zero tolerance productivity"",
            bs: ""transition cutting-edge web services""
        }
    }
];"
4LKwn03w,Left+Right Click File To Open in GitHub Web Editor.ahk,Lorenzo501,Autohotkey,Tuesday 26th of March 2024 03:47:09 PM CDT,"#Requires AutoHotkey 2.0
A_CoordModeMouse := ""Screen""
SetDefaultMouseSpeed(0)

#HotIf (WinActive(""ahk_exe explorer.exe""))
RButton::
{
    static EVENT_OBJECT_CREATE := 0x8000

    Critical(-1)

    while (GetKeyState(""RButton"", ""P""))
    {
        if (KeyWait(""LButton"", ""D T0.05""))
        {
            HotIf()
            Hotkey(""LButton"", (*) => 0, ""On"")
            Hotkey(""RButton"", (*) => 0, ""On"")
            Hotkey(""LButton up"", (*) => 0, ""On"")
            DllCall(""SetWinEventHook"", ""UInt"", EVENT_OBJECT_CREATE, ""UInt"", EVENT_OBJECT_CREATE, ""Ptr"", 0, ""Ptr"", CallbackCreate(HandleDragImageEvent), ""UInt"", 0, ""UInt"", 0, ""UInt"", 0)
            MouseGetPos(&previousCursorX, &previousCursorY)
            SystemCursor(""Toggle"")
            Send(""{Click "" previousCursorX + 5 "" "" previousCursorY "" 0}"")
            Sleep(10)
            Send(""{Click "" previousCursorX - 5 "" "" previousCursorY "" 0}"")
            Sleep(10)
            Send(""{Click "" previousCursorX "" "" previousCursorY "" 0}"")
            SystemCursor(""Toggle"")
            Run(""chrome.exe https://github.dev/ --start-maximized --disable-features=GlobalMediaControls"")
            Sleep(100)
            WinWaitActive(""Visual Studio"")
            MouseGetPos(&previousCursorX, &previousCursorY)
            SystemCursor(""Toggle"")
            Send(""{Click "" A_ScreenWidth / 2 "" "" A_ScreenHeight / 2 "" 0}"")
            Sleep(50)
            Send(""{Click "" A_ScreenWidth / 2 "" "" A_ScreenHeight / 2 "" U}"")
            Send(""{Click "" previousCursorX "" "" previousCursorY "" 0}"")
            SystemCursor(""Toggle"")
            Hotkey(""LButton"", ""Off"")
            Hotkey(""RButton"", ""Off"")
            Hotkey(""LButton up"", ""Off"")

            return
        }
    }

    Send(""{RButton}"")
}

SystemCursor(cmd) ; cmd = ""Show|Hide|Toggle|Reload""
{
    static visible := true, c := Map()
    static sys_cursors := [32512, 32513, 32514, 32515, 32516, 32642, 32643, 32644, 32645, 32646, 32648, 32649, 32650]

    if (cmd = ""Reload"" || !c.Count) ; Reload when requested or at first call
    {
        for (i, id in sys_cursors)
        {
            h_cursor  := DllCall(""LoadCursor"", ""Ptr"", 0, ""Ptr"", id)
            h_default := DllCall(""CopyImage"", ""Ptr"", h_cursor, ""UInt"", 2, ""Int"", 0, ""Int"", 0, ""UInt"", 0)
            h_blank   := DllCall(""CreateCursor"", ""Ptr"", 0, ""Int"", 0, ""Int"", 0, ""Int"", 32, ""Int"", 32, ""Ptr"", Buffer(32 * 4, 0xFF), ""Ptr"", Buffer(32 * 4, 0))
            c[id] := {Default: h_default, Blank: h_blank}
        }
    }

    switch (cmd)
    {
        case ""Show"": visible := true
        case ""Hide"": visible := false
        case ""Toggle"": visible := !visible
        default: return
    }

    for (id, handles in c)
    {
        h_cursor := DllCall(""CopyImage"", ""Ptr"", visible ? handles.Default : handles.Blank, ""UInt"", 2, ""Int"", 0, ""Int"", 0, ""UInt"", 0)
        DllCall(""SetSystemCursor"", ""Ptr"", h_cursor, ""UInt"", id)
    }
}

HandleDragImageEvent(hWinEventHook, event, hWnd, *)
{
    static hiddenImagesAmount := 0

    try
        if (WinGetClass(hWnd) = ""SysDragImage"") ; Both explorer.exe and chrome.exe have one
        {
            WinKill(hWnd)

            if (++hiddenImagesAmount = 2)
                DllCall(""UnhookWinEvent"", ""Ptr"", hWinEventHook)
        {
}"
xajgm8ry,application/ld+json,ThePie,JSON,Tuesday 26th of March 2024 03:27:11 PM CDT,"{
    ""@context"": ""https://schema.org"",
    ""@graph"": [
        {
            ""@id"": ""https://www.companyname.com/#organization"",
            ""@type"": [
                ""Corporation"",
                ""Organization""
            ],
            ""logo"": {
                ""@id"": ""https://www.companyname.com/#logo"",
                ""@type"": ""ImageObject"",
                ""caption"": ""Company Name"",
                ""contentUrl"": ""https://www.companyname.com/wp-content/uploads/2024/02/Main.svg"",
                ""height"": """",
                ""inLanguage"": ""en-US"",
                ""url"": ""https://www.companyname.com/wp-content/uploads/2024/02/Main.svg"",
                ""width"": """"
            },
            ""name"": ""Company Name"",
            ""url"": ""https://www.companyname.com""
        },
        {
            ""@id"": ""https://www.companyname.com/#website"",
            ""@type"": ""WebSite"",
            ""alternateName"": ""Company Name LLC"",
            ""inLanguage"": ""en-US"",
            ""name"": ""Company Name"",
            ""potentialAction"": {
                ""@type"": ""SearchAction"",
                ""query-input"": ""required name=search_term_string"",
                ""target"": ""https://www.companyname.com/?s={search_term_string}""
            },
            ""publisher"": {
                ""@id"": ""https://www.companyname.com/#organization""
            },
            ""url"": ""https://www.companyname.com""
        },
        {
            ""@id"": ""https://www.companyname.com/#webpage"",
            ""@type"": ""WebPage"",
            ""about"": {
                ""@id"": ""https://www.companyname.com/#organization""
            },
            ""dateModified"": ""2024-03-23T20:16:44+00:00"",
            ""datePublished"": ""2024-02-25T02:56:35+00:00"",
            ""inLanguage"": ""en-US"",
            ""isPartOf"": {
                ""@id"": ""https://www.companyname.com/#website""
            },
            ""name"": ""Company Name"",
            ""url"": ""https://www.companyname.com/""
        },
        {
            ""@id"": ""https://www.companyname.com/#author"",
            ""@type"": ""Person"",
            ""image"": {
                ""@id"": ""https://secure.gravatar.com/avatar/18ae2643603b0143c1e32d817491dc24?s=96&amp;d=mm&amp;r=g"",
                ""@type"": ""ImageObject"",
                ""caption"": ""admin"",
                ""inLanguage"": ""en-US"",
                ""url"": ""https://secure.gravatar.com/avatar/18ae2643603b0143c1e32d817491dc24?s=96&amp;d=mm&amp;r=g""
            },
            ""name"": ""admin"",
            ""sameAs"": [
                ""http://localhost/ww1""
            ],
            ""worksFor"": {
                ""@id"": ""https://www.companyname.com/#organization""
            }
        },
        {
            ""@id"": ""https://www.companyname.com/#richSnippet"",
            ""@type"": ""Article"",
            ""author"": {
                ""@id"": ""https://www.companyname.com/#author"",
                ""name"": ""admin""
            },
            ""dateModified"": ""2024-03-23T20:16:44+00:00"",
            ""datePublished"": ""2024-02-25T02:56:35+00:00"",
            ""description"": ""Company Name tagline."",
            ""headline"": ""Company Name"",
            ""inLanguage"": ""en-US"",
            ""isPartOf"": {
                ""@id"": ""https://www.companyname.com/#webpage""
            },
            ""mainEntityOfPage"": {
                ""@id"": ""https://www.companyname.com/#webpage""
            },
            ""name"": ""Company Name"",
            ""publisher"": {
                ""@id"": ""https://www.companyname.com/#organization""
            }
        }
    ]
}"
18ckCDCt,Untitled,katerina-bonditka,Python,Tuesday 26th of March 2024 02:53:56 PM CDT,"from featuretools.primitives import TransformPrimitive
import numpy as np

class SquareRoot(TransformPrimitive):
    name = ""square_root""
    input_types = [ColumnSchema(semantic_tags={""numeric""})]
    return_type = ColumnSchema(semantic_tags={""numeric""})
    
    def get_function(self):
        def square_root(column):
            return np.sqrt(column)
        return square_root"
P8FBWVgz,Untitled,astrou123,Swift,Tuesday 26th of March 2024 02:36:25 PM CDT,"import UIKit

class CustomFlowLayout: UICollectionViewFlowLayout {
    
    override func layoutAttributesForElements(in rect: CGRect) -> [UICollectionViewLayoutAttributes]? {
        guard let collectionView = collectionView else { return nil }
        
        // Retrieve the layout attributes from the super class
        var layoutAttributes = super.layoutAttributesForElements(in: rect)
        
        // Check if refresh control is refreshing and adjust header position if needed
        if let refreshControl = collectionView.refreshControl, refreshControl.isRefreshing {
            for attributes in layoutAttributes ?? [] {
                // Adjust header attributes if the element is a section header
                if attributes.representedElementKind == UICollectionView.elementKindSectionHeader {
                    let section = attributes.indexPath.section
                    let headerHeight = headerReferenceSize.height
                    let contentOffset = collectionView.contentOffset.y + collectionView.contentInset.top
                    let topInset = collectionView.adjustedContentInset.top
                    
                    // Calculate the y position of the header
                    var headerY = max(contentOffset, topInset)
                    if section > 0 {
                        // Adjust header position based on previous sections' height
                        for i in 0..<section {
                            let previousHeaderHeight = headerReferenceSize.height
                            let previousSectionItemCount = collectionView.numberOfItems(inSection: i)
                            let previousSectionHeight = (CGFloat(previousSectionItemCount) * itemSize.height) + previousHeaderHeight + minimumLineSpacing
                            headerY += previousSectionHeight
                        }
                    }
                    
                    // Update the position of the header attributes
                    attributes.frame = CGRect(x: attributes.frame.origin.x, y: headerY, width: attributes.frame.width, height: headerHeight)
                }
            }
        }
        
        return layoutAttributes
    }
    
    override func shouldInvalidateLayout(forBoundsChange newBounds: CGRect) -> Bool {
        return true
    }
}
"
kX70sqmQ,ComfyUI workflow to remove womens clothes ;-),Satscape,JSON,Tuesday 26th of March 2024 02:19:05 PM CDT,"{
  ""last_node_id"": 132,
  ""last_link_id"": 310,
  ""nodes"": [
    {
      ""id"": 71,
      ""type"": ""ControlNetLoader"",
      ""pos"": [
        826,
        1234
      ],
      ""size"": {
        ""0"": 447.86798095703125,
        ""1"": 81.19131469726562
      },
      ""flags"": {},
      ""order"": 0,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""CONTROL_NET"",
          ""type"": ""CONTROL_NET"",
          ""links"": [
            245
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""ControlNetLoader""
      },
      ""widgets_values"": [
        ""control_v11p_sd15_inpaint_fp16.safetensors""
      ]
    },
    {
      ""id"": 77,
      ""type"": ""Reroute"",
      ""pos"": [
        1006.0805739746095,
        579.5470354003907
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 5,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 291
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CLIP"",
          ""type"": ""CLIP"",
          ""links"": [
            218
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": true,
        ""horizontal"": false
      }
    },
    {
      ""id"": 93,
      ""type"": ""Reroute"",
      ""pos"": [
        1008,
        491
      ],
      ""size"": [
        140.8,
        26
      ],
      ""flags"": {},
      ""order"": 14,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 295
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            244
          ],
          ""slot_index"": 0,
          ""label"": ""Positive prompt""
        }
      ],
      ""properties"": {
        ""showOutputText"": true,
        ""horizontal"": false
      }
    },
    {
      ""id"": 90,
      ""type"": ""Reroute"",
      ""pos"": [
        1005,
        550
      ],
      ""size"": [
        82,
        26
      ],
      ""flags"": {},
      ""order"": 4,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 290
        }
      ],
      ""outputs"": [
        {
          ""name"": ""MODEL"",
          ""type"": ""MODEL"",
          ""links"": [
            197
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": true,
        ""horizontal"": false
      }
    },
    {
      ""id"": 92,
      ""type"": ""Reroute"",
      ""pos"": [
        1005.2301248168947,
        519.5638720703125
      ],
      ""size"": [
        140.8,
        26
      ],
      ""flags"": {},
      ""order"": 15,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 296
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            247
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": true,
        ""horizontal"": false
      }
    },
    {
      ""id"": 74,
      ""type"": ""Reroute"",
      ""pos"": [
        1697,
        896
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 11,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 250
        }
      ],
      ""outputs"": [
        {
          ""name"": ""MASK"",
          ""type"": ""MASK"",
          ""links"": [
            273
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": true,
        ""horizontal"": false
      }
    },
    {
      ""id"": 69,
      ""type"": ""InpaintPreprocessor"",
      ""pos"": [
        1178,
        877
      ],
      ""size"": {
        ""0"": 210,
        ""1"": 46
      },
      ""flags"": {},
      ""order"": 10,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""image"",
          ""type"": ""IMAGE"",
          ""link"": 125
        },
        {
          ""name"": ""mask"",
          ""type"": ""MASK"",
          ""link"": 126
        }
      ],
      ""outputs"": [
        {
          ""name"": ""IMAGE"",
          ""type"": ""IMAGE"",
          ""links"": [
            246,
            308
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""InpaintPreprocessor""
      }
    },
    {
      ""id"": 113,
      ""type"": ""EmptyLatentImage"",
      ""pos"": [
        1626,
        1201
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 106
      },
      ""flags"": {},
      ""order"": 17,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""width"",
          ""type"": ""INT"",
          ""link"": 284,
          ""widget"": {
            ""name"": ""width""
          }
        },
        {
          ""name"": ""height"",
          ""type"": ""INT"",
          ""link"": 285,
          ""widget"": {
            ""name"": ""height""
          }
        }
      ],
      ""outputs"": [
        {
          ""name"": ""LATENT"",
          ""type"": ""LATENT"",
          ""links"": [
            271
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""EmptyLatentImage""
      },
      ""widgets_values"": [
        768,
        512,
        1
      ]
    },
    {
      ""id"": 122,
      ""type"": ""GetImageSize"",
      ""pos"": [
        1332,
        1202
      ],
      ""size"": {
        ""0"": 210,
        ""1"": 46
      },
      ""flags"": {},
      ""order"": 9,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""image"",
          ""type"": ""IMAGE"",
          ""link"": 283
        }
      ],
      ""outputs"": [
        {
          ""name"": ""width"",
          ""type"": ""INT"",
          ""links"": [
            284
          ],
          ""shape"": 3,
          ""slot_index"": 0
        },
        {
          ""name"": ""height"",
          ""type"": ""INT"",
          ""links"": [
            285
          ],
          ""shape"": 3,
          ""slot_index"": 1
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""GetImageSize""
      }
    },
    {
      ""id"": 105,
      ""type"": ""ControlNetApplyAdvanced"",
      ""pos"": [
        1400,
        974
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 166
      },
      ""flags"": {},
      ""order"": 19,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""positive"",
          ""type"": ""CONDITIONING"",
          ""link"": 244
        },
        {
          ""name"": ""negative"",
          ""type"": ""CONDITIONING"",
          ""link"": 247
        },
        {
          ""name"": ""control_net"",
          ""type"": ""CONTROL_NET"",
          ""link"": 245
        },
        {
          ""name"": ""image"",
          ""type"": ""IMAGE"",
          ""link"": 246
        }
      ],
      ""outputs"": [
        {
          ""name"": ""positive"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            286
          ],
          ""shape"": 3,
          ""slot_index"": 0
        },
        {
          ""name"": ""negative"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            287
          ],
          ""shape"": 3,
          ""slot_index"": 1
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""ControlNetApplyAdvanced""
      },
      ""widgets_values"": [
        1,
        0,
        1
      ]
    },
    {
      ""id"": 91,
      ""type"": ""Reroute"",
      ""pos"": [
        2159,
        554
      ],
      ""size"": [
        82,
        26
      ],
      ""flags"": {},
      ""order"": 12,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 197
        }
      ],
      ""outputs"": [
        {
          ""name"": ""MODEL"",
          ""type"": ""MODEL"",
          ""links"": [
            297
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": true,
        ""horizontal"": false
      }
    },
    {
      ""id"": 95,
      ""type"": ""Reroute"",
      ""pos"": [
        2162,
        486
      ],
      ""size"": [
        140.8,
        26
      ],
      ""flags"": {},
      ""order"": 21,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 286
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            298
          ],
          ""slot_index"": 0,
          ""label"": ""Positive""
        }
      ],
      ""properties"": {
        ""showOutputText"": true,
        ""horizontal"": false
      }
    },
    {
      ""id"": 94,
      ""type"": ""Reroute"",
      ""pos"": [
        2159,
        521
      ],
      ""size"": [
        140.8,
        26
      ],
      ""flags"": {},
      ""order"": 22,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 287
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            299
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": true,
        ""horizontal"": false
      }
    },
    {
      ""id"": 73,
      ""type"": ""Reroute"",
      ""pos"": [
        1006,
        615
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 8,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 292
        }
      ],
      ""outputs"": [
        {
          ""name"": ""VAE"",
          ""type"": ""VAE"",
          ""links"": [
            302,
            309
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": true,
        ""horizontal"": false
      }
    },
    {
      ""id"": 111,
      ""type"": ""LatentCompositeMasked"",
      ""pos"": [
        1985,
        827
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 146
      },
      ""flags"": {},
      ""order"": 20,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""destination"",
          ""type"": ""LATENT"",
          ""link"": 310
        },
        {
          ""name"": ""source"",
          ""type"": ""LATENT"",
          ""link"": 271
        },
        {
          ""name"": ""mask"",
          ""type"": ""MASK"",
          ""link"": 273
        }
      ],
      ""outputs"": [
        {
          ""name"": ""LATENT"",
          ""type"": ""LATENT"",
          ""links"": [
            300
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""LatentCompositeMasked""
      },
      ""widgets_values"": [
        0,
        0,
        false
      ]
    },
    {
      ""id"": 99,
      ""type"": ""Reroute"",
      ""pos"": [
        2165,
        589
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 13,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 218
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CLIP"",
          ""type"": ""CLIP"",
          ""links"": [],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": true,
        ""horizontal"": false
      }
    },
    {
      ""id"": 124,
      ""type"": ""CheckpointLoaderSimple"",
      ""pos"": [
        70,
        546
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 98
      },
      ""flags"": {},
      ""order"": 1,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""MODEL"",
          ""type"": ""MODEL"",
          ""links"": [
            290
          ],
          ""shape"": 3,
          ""slot_index"": 0
        },
        {
          ""name"": ""CLIP"",
          ""type"": ""CLIP"",
          ""links"": [
            291,
            293,
            294
          ],
          ""shape"": 3,
          ""slot_index"": 1
        },
        {
          ""name"": ""VAE"",
          ""type"": ""VAE"",
          ""links"": [
            292
          ],
          ""shape"": 3,
          ""slot_index"": 2
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""CheckpointLoaderSimple""
      },
      ""widgets_values"": [
        ""epicRealism_sd15.safetensors""
      ]
    },
    {
      ""id"": 68,
      ""type"": ""LoadImage"",
      ""pos"": [
        825,
        874
      ],
      ""size"": {
        ""0"": 320,
        ""1"": 314
      },
      ""flags"": {},
      ""order"": 2,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""IMAGE"",
          ""type"": ""IMAGE"",
          ""links"": [
            125,
            283
          ],
          ""shape"": 3,
          ""slot_index"": 0
        },
        {
          ""name"": ""MASK"",
          ""type"": ""MASK"",
          ""links"": [
            126,
            250
          ],
          ""shape"": 3,
          ""slot_index"": 1
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""LoadImage""
      },
      ""widgets_values"": [
        ""clipspace/clipspace-mask-1776487.png [input]"",
        ""image""
      ]
    },
    {
      ""id"": 129,
      ""type"": ""Reroute"",
      ""pos"": [
        2159,
        622
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 16,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 302
        }
      ],
      ""outputs"": [
        {
          ""name"": ""VAE"",
          ""type"": ""VAE"",
          ""links"": [
            306
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": true,
        ""horizontal"": false
      }
    },
    {
      ""id"": 131,
      ""type"": ""VAEEncodeTiled"",
      ""pos"": [
        1541,
        738
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 78
      },
      ""flags"": {},
      ""order"": 18,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""pixels"",
          ""type"": ""IMAGE"",
          ""link"": 308
        },
        {
          ""name"": ""vae"",
          ""type"": ""VAE"",
          ""link"": 309
        }
      ],
      ""outputs"": [
        {
          ""name"": ""LATENT"",
          ""type"": ""LATENT"",
          ""links"": [
            310
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""VAEEncodeTiled""
      },
      ""widgets_values"": [
        512
      ]
    },
    {
      ""id"": 125,
      ""type"": ""CLIPTextEncode"",
      ""pos"": [
        483,
        84
      ],
      ""size"": {
        ""0"": 400,
        ""1"": 200
      },
      ""flags"": {},
      ""order"": 6,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""clip"",
          ""type"": ""CLIP"",
          ""link"": 293
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            295
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""CLIPTextEncode""
      },
      ""widgets_values"": [
        ""naked woman, skin, breasts""
      ],
      ""color"": ""#232"",
      ""bgcolor"": ""#353""
    },
    {
      ""id"": 126,
      ""type"": ""CLIPTextEncode"",
      ""pos"": [
        477,
        329
      ],
      ""size"": {
        ""0"": 400,
        ""1"": 200
      },
      ""flags"": {},
      ""order"": 7,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""clip"",
          ""type"": ""CLIP"",
          ""link"": 294
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            296
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""CLIPTextEncode""
      },
      ""widgets_values"": [
        ""clothes, cloth, clothing, skirt, blouse""
      ],
      ""color"": ""#322"",
      ""bgcolor"": ""#533""
    },
    {
      ""id"": 127,
      ""type"": ""KSampler"",
      ""pos"": [
        2615,
        737
      ],
      ""size"": {
        ""0"": 512.0107421875,
        ""1"": 726.5308227539062
      },
      ""flags"": {},
      ""order"": 23,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""model"",
          ""type"": ""MODEL"",
          ""link"": 297
        },
        {
          ""name"": ""positive"",
          ""type"": ""CONDITIONING"",
          ""link"": 298
        },
        {
          ""name"": ""negative"",
          ""type"": ""CONDITIONING"",
          ""link"": 299
        },
        {
          ""name"": ""latent_image"",
          ""type"": ""LATENT"",
          ""link"": 300
        }
      ],
      ""outputs"": [
        {
          ""name"": ""LATENT"",
          ""type"": ""LATENT"",
          ""links"": [
            305
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""title"": ""Nakedizer 2000 (the KSampler)"",
      ""properties"": {
        ""Node name for S&R"": ""KSampler""
      },
      ""widgets_values"": [
        628804442187078,
        ""randomize"",
        35,
        7,
        ""euler"",
        ""normal"",
        1
      ],
      ""color"": ""#223"",
      ""bgcolor"": ""#335""
    },
    {
      ""id"": 130,
      ""type"": ""VAEDecodeTiled"",
      ""pos"": [
        3165,
        548
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 78
      },
      ""flags"": {},
      ""order"": 24,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""samples"",
          ""type"": ""LATENT"",
          ""link"": 305
        },
        {
          ""name"": ""vae"",
          ""type"": ""VAE"",
          ""link"": 306
        }
      ],
      ""outputs"": [
        {
          ""name"": ""IMAGE"",
          ""type"": ""IMAGE"",
          ""links"": [
            307
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""VAEDecodeTiled""
      },
      ""widgets_values"": [
        512
      ]
    },
    {
      ""id"": 101,
      ""type"": ""PreviewImage"",
      ""pos"": [
        3531,
        587
      ],
      ""size"": {
        ""0"": 825.9764404296875,
        ""1"": 793.4138793945312
      },
      ""flags"": {},
      ""order"": 25,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""images"",
          ""type"": ""IMAGE"",
          ""link"": 307
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""PreviewImage""
      }
    },
    {
      ""id"": 132,
      ""type"": ""Note"",
      ""pos"": [
        484,
        985
      ],
      ""size"": [
        318.4731262207031,
        105.8062622070313
      ],
      ""flags"": {},
      ""order"": 3,
      ""mode"": 0,
      ""properties"": {
        ""text"": """"
      },
      ""widgets_values"": [
        ""Load your clothed female image here and use the mask editor to masks all clothing, then QUEUE PROMPT. It sometimes doesn't work well, so just try again, make the mask bigger.""
      ],
      ""color"": ""#432"",
      ""bgcolor"": ""#653""
    }
  ],
  ""links"": [
    [
      125,
      68,
      0,
      69,
      0,
      ""IMAGE""
    ],
    [
      126,
      68,
      1,
      69,
      1,
      ""MASK""
    ],
    [
      197,
      90,
      0,
      91,
      0,
      ""*""
    ],
    [
      218,
      77,
      0,
      99,
      0,
      ""*""
    ],
    [
      244,
      93,
      0,
      105,
      0,
      ""CONDITIONING""
    ],
    [
      245,
      71,
      0,
      105,
      2,
      ""CONTROL_NET""
    ],
    [
      246,
      69,
      0,
      105,
      3,
      ""IMAGE""
    ],
    [
      247,
      92,
      0,
      105,
      1,
      ""CONDITIONING""
    ],
    [
      250,
      68,
      1,
      74,
      0,
      ""*""
    ],
    [
      271,
      113,
      0,
      111,
      1,
      ""LATENT""
    ],
    [
      273,
      74,
      0,
      111,
      2,
      ""MASK""
    ],
    [
      283,
      68,
      0,
      122,
      0,
      ""IMAGE""
    ],
    [
      284,
      122,
      0,
      113,
      0,
      ""INT""
    ],
    [
      285,
      122,
      1,
      113,
      1,
      ""INT""
    ],
    [
      286,
      105,
      0,
      95,
      0,
      ""*""
    ],
    [
      287,
      105,
      1,
      94,
      0,
      ""*""
    ],
    [
      290,
      124,
      0,
      90,
      0,
      ""*""
    ],
    [
      291,
      124,
      1,
      77,
      0,
      ""*""
    ],
    [
      292,
      124,
      2,
      73,
      0,
      ""*""
    ],
    [
      293,
      124,
      1,
      125,
      0,
      ""CLIP""
    ],
    [
      294,
      124,
      1,
      126,
      0,
      ""CLIP""
    ],
    [
      295,
      125,
      0,
      93,
      0,
      ""*""
    ],
    [
      296,
      126,
      0,
      92,
      0,
      ""*""
    ],
    [
      297,
      91,
      0,
      127,
      0,
      ""MODEL""
    ],
    [
      298,
      95,
      0,
      127,
      1,
      ""CONDITIONING""
    ],
    [
      299,
      94,
      0,
      127,
      2,
      ""CONDITIONING""
    ],
    [
      300,
      111,
      0,
      127,
      3,
      ""LATENT""
    ],
    [
      302,
      73,
      0,
      129,
      0,
      ""*""
    ],
    [
      305,
      127,
      0,
      130,
      0,
      ""LATENT""
    ],
    [
      306,
      129,
      0,
      130,
      1,
      ""VAE""
    ],
    [
      307,
      130,
      0,
      101,
      0,
      ""IMAGE""
    ],
    [
      308,
      69,
      0,
      131,
      0,
      ""IMAGE""
    ],
    [
      309,
      73,
      0,
      131,
      1,
      ""VAE""
    ],
    [
      310,
      131,
      0,
      111,
      0,
      ""LATENT""
    ]
  ],
  ""groups"": [],
  ""config"": {},
  ""extra"": {},
  ""version"": 0.4
}"
wLS8pWmi,Pow for BigInteger,NickAndNick,C++,Tuesday 26th of March 2024 01:33:46 PM CDT,"#include <fstream>
#include <iomanip>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

class BigInteger {
public:
    BigInteger() : is_negative(false) {
        digits.push_back(0);
    }

    BigInteger(string str) {
        if (str.length() == 0) is_negative = false;
        else {
            if (str[0] == '-') {
                str = str.substr(1);
                is_negative = true;
            } else is_negative = false;
            for (auto i = static_cast<long long>(str.length()); i > 0; i -= 9) {
                if (i < 9) digits.push_back(atoi(str.substr(0, i).c_str()));
                else digits.push_back(atoi(str.substr(i - 9, 9).c_str()));
            }
            remove_leading_zeros();
        }
    }

    BigInteger(signed long long value) { 
        if (value < 0) {
            is_negative = true;
            value = -value;
        } else is_negative = false;
        do {
            digits.push_back(value % base);
            value /= base;
        } while (value != 0);
    }

    BigInteger(unsigned long long value) {
        is_negative = false;
        do {
            digits.push_back(value % base);
            value /= base;
        } while (value != 0);
    }

    operator string() const {
        stringstream ss;
        ss << *this;
        return ss.str();
    }

    const BigInteger operator+() const {
        return BigInteger(*this);
    }

    const BigInteger operator-() const {
        BigInteger copy(*this);
        copy.is_negative = !copy.is_negative;
        return copy;
    }

    void operator*=(const BigInteger& bi) {
        *this = *this * bi;
    }

    void operator/=(const BigInteger& bi) {
        *this = *this / bi;
    }

    const BigInteger pow(BigInteger bi) const {
        BigInteger a(*this), result(1LL);
        while (bi != 0LL) {
            if (bi.odd()) result *= a;
            a *= a;
            bi /= 2LL;
        }
        return result;
    }
private:
    class DidisionByZero : public exception {};
	static const auto base = 1000000000;
	vector<int> digits;
	bool is_negative;

    void remove_leading_zeros() {
        while (digits.size() > 1 && digits.back() == 0) digits.pop_back();
        if (digits.size() == 1 && digits[0] == 0) is_negative = false;
    }

    void shift_right() {
        if (digits.size() == 0) {
            digits.push_back(0);
            return;
        }
        digits.push_back(digits[digits.size() - 1]);
        for (size_t i = digits.size() - 2; i > 0; --i) digits[i] = digits[i - 1];
        digits[0] = 0;
    }

    bool odd() const {
        if (digits.size() == 0) return false;
        return digits[0] & 1;
    }

    bool even() const {
        return !this->odd();
    }

    friend bool operator==(const BigInteger& a, const BigInteger& b) {
        if (a.is_negative != b.is_negative) return false;
        if (a.digits.empty()) {
            if (b.digits.empty() || (b.digits.size() == 1 && b.digits[0] == 0)) return true;
            else return false;
        }
        if (b.digits.empty()) {
            if (a.digits.size() == 1 && a.digits[0] == 0) return true;
            else return false;
        }
        if (a.digits.size() != b.digits.size()) return false;
        for (size_t i = 0; i < a.digits.size(); ++i) if (a.digits[i] != b.digits[i]) return false;
        return true;
    }

    friend bool operator <(const BigInteger& a, const BigInteger& b) {
        if (a == b) return false;
        if (a.is_negative) {
            if (b.is_negative) return ((-b) < (-a));
            else return true;
        }
        else if (b.is_negative) return false;
        else {
            if (a.digits.size() != b.digits.size()) {
                return a.digits.size() < b.digits.size();
            } else {
                for (long long i = a.digits.size() - 1; i >= 0; --i) {
                    if (a.digits[i] != b.digits[i]) return a.digits[i] < b.digits[i];
                }
                return false;
            }
        }
    }

    friend bool operator<=(const BigInteger& a, const BigInteger& b) {
        return (a < b || a == b);
    }

    friend bool operator!=(const BigInteger& a, const BigInteger& b) {
        return !(a == b);
    }

    friend bool operator>(const BigInteger& a, const BigInteger& b) {
        return !(a <= b);
    }

    friend bool operator>=(const BigInteger& a, const BigInteger& b) {
        return !(a < b);
    }

    friend const BigInteger operator+(BigInteger a, const BigInteger& b) {
        if (a.is_negative) {
            if (b.is_negative) return -(-a + (-b));
            else return b - (-a);
        }
        else if (b.is_negative) return a - (-b);
        auto transfer = 0;
        for (size_t i = 0; i < std::max(a.digits.size(), b.digits.size()) || transfer != 0; ++i) {
            if (i == a.digits.size()) a.digits.push_back(0);
            a.digits[i] += transfer + (i < b.digits.size() ? b.digits[i] : 0);
            transfer = a.digits[i] >= BigInteger::base;
            if (transfer != 0) a.digits[i] -= BigInteger::base;
        }
        return a;
    }

    friend const BigInteger operator-(BigInteger a, const BigInteger& b) {
        if (b.is_negative) return a + (-b);
        else if (a.is_negative) return -(-a + b);
        else if (a < b) return -(b - a);
        auto transfer = 0;
        for (size_t i = 0; i < b.digits.size() || transfer != 0; ++i) {
            a.digits[i] -= transfer + (i < b.digits.size() ? b.digits[i] : 0);
            transfer = a.digits[i] < 0;
            if (transfer != 0) a.digits[i] += BigInteger::base;
        }
        a.remove_leading_zeros();
        return a;
    }

    friend const BigInteger operator*(const BigInteger& a, const BigInteger& b) {
        BigInteger result;
        result.digits.resize(a.digits.size() + b.digits.size());
        for (size_t i = 0; i < a.digits.size(); ++i) {
            auto transfer = 0;
            for (size_t j = 0; j < b.digits.size() || transfer != 0; ++j) {
                auto current = result.digits[i + j] +
                    a.digits[i] * 1LL * (j < b.digits.size() ? b.digits[j] : 0) + transfer;
                result.digits[i + j] = static_cast<int>(current % BigInteger::base);
                transfer = static_cast<int>(current / BigInteger::base);
            }
        }
        result.is_negative = a.is_negative != b.is_negative;
        result.remove_leading_zeros();
        return result;
    }

    friend const BigInteger operator/(const BigInteger& a, const BigInteger& b) {
        if (b == 0LL) throw BigInteger::DidisionByZero();
        BigInteger bi = b;
        bi.is_negative = false;
        BigInteger result, current;
        result.digits.resize(a.digits.size());
        for (long long i = static_cast<long long>(a.digits.size()) - 1; i >= 0; --i) {
            current.shift_right();
            current.digits[0] = a.digits[i];
            current.remove_leading_zeros();
            long long x = 0, l = 0, r = BigInteger::base;
            while (l <= r) {
                auto m = (l + r) / 2;
                BigInteger tmp = bi * m;
                if (tmp <= current) {
                    x = m;
                    l = m + 1;
                }
                else r = m - 1;
            }
            result.digits[i] = x;
            current = current - bi * x;
        }
        result.is_negative = a.is_negative != b.is_negative;
        result.remove_leading_zeros();
        return result;
    }

    friend ostream& operator<<(ostream& out, const BigInteger& bi) {
        if (bi.digits.empty()) out << 0;
        else {
            if (bi.is_negative) out << '-';
            out << bi.digits.back();
            char old_fill = out.fill('0');
            for (auto i = static_cast<long long>(bi.digits.size()) - 2; i >= 0; --i) {
                out << std::setw(9) << bi.digits[i];
            }
            out.fill(old_fill);
        }
        return out;
    }

    friend istream& operator>>(istream& inp, BigInteger& bi) {
        string num;
        inp >> num;
        bi = BigInteger(num);
        return inp;
    }
};

int main() {
    string input{ R""(C:\Users\student\Desktop\ConsoleApplication1\input.txt)"" };
    string output{ R""(C:\Users\student\Desktop\ConsoleApplication1\output.txt)"" };
    ifstream inp(input);
    ofstream out(output);
    if (inp.is_open() && out.is_open()) {
        BigInteger n;
        BigInteger p;
        inp >> n >> p;
        out << n.pow(p);
    }
    inp.is_open() ? inp.close() : void();
    out.is_open() ? out.close() : void();
}"
DA3YsWi1,Untitled,drakon-firestone,Python,Tuesday 26th of March 2024 01:09:34 PM CDT,"import pygame

# zaimportuj wysoko≈õƒá i szeroko≈õƒá ekranu z modu≈Çu game_settings

# stw√≥rz zmiennƒÖ na ekran (o nazwie screen) 
# i ustaw rozdzielczo≈õƒá ekranu (display.set_mode() z biblioteki pygame)

# stw√≥rz zegar

# zr√≥b zmiennƒÖ background_image na t≈Ço
# za≈Çaduj t≈Ço ""background.png"" z folderu images


######## G≈Å√ìWNA PƒòTLA PROGRAMU ##############

# stw√≥rz zmiennƒÖ game_runnning (prawda/fa≈Çsz)

# pƒôtla while

    # przejd≈∫ po wszystkich eventach 
    # i dodaj obs≈Çugƒô klikniƒôcia ESCAPE do zamkniƒôcia gry (game_running = False)

    # oraz dodaj zamkniƒôcie aplikacji na klikniƒôcie X


    # wy≈õwietl t≈Ço - metoda blit() ekranu (screen), po≈Ço≈ºenie (0,0)

    # od≈õwie≈º ekran (metoda flip())

    # ustawianie FPS na 30 (z u≈ºyciem zegara)


# zamkniƒôcie aplikacji"
kmCLga5S,–ª3—Å++cryptapi,istomina_sofia,C++,Tuesday 26th of March 2024 12:42:34 PM CDT,"#include <iostream>
#include <Windows.h>
#include <wincrypt.h>
#include <string>
#include <iomanip>
#include <iostream>

using namespace std;

int main()
{
    setlocale(LC_ALL, ""RUS"");

    string nameC;
    cout << ""–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: "";
    cin >> nameC;

    HCRYPTKEY hKey;
    HCRYPTPROV hProv;
    LPCSTR Container = nameC.c_str();


    if (CryptAcquireContextA(&hProv, Container, NULL, PROV_RSA_FULL, 0))
    {
        cout << ""–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä "" << Container << "" —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"" << endl;

    jump:

        if (CryptGetUserKey(hProv, AT_KEYEXCHANGE, &hKey))
        {
            cout << ""–ö–ª—é—á –∏–∑–≤–ª–µ—á–µ–Ω"" << endl;
            CryptDestroyKey(hKey);
        }

        else
        {
            if (CryptGenKey(hProv, CALG_RSA_KEYX, CRYPT_EXPORTABLE, &hKey))
            {
                cout << ""–ö–ª—é—á —Å–æ–∑–¥–∞–Ω"" << endl;
                CryptDestroyKey(hKey);
            }

            else
            {
                cerr << ""–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª—é—á–∞: "" << GetLastError();
                if (hKey) CryptDestroyKey(hKey);
            }
        }
    }

    else
    {
        if (CryptAcquireContextA(&hProv, Container, NULL, PROV_RSA_FULL, CRYPT_NEWKEYSET))
        {
            cout << ""–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä "" << Container << "" –±—ã–ª —Å–æ–∑–¥–∞–Ω"" << endl;

            goto jump;
        }

        else
        {
            cerr << ""–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: "" << GetLastError();
        }
    }

    CryptReleaseContext(hProv, 0);
}"
Fd6HS4dw,MpShort [MoodPlay],AhmadXploit,Dart,Tuesday 26th of March 2024 12:33:10 PM CDT,"[
{
	""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691942620/Story/hamzah_j4glhq.webp"",
	""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691942620/Story/hamzah_j4glhq.webp"",
    ""videoUrl"": ""https://flutter.github.io/assets-for-api-docs/assets/videos/bee.mp4"",
    ""name"": ""The Lion of Allah: Hamza Ibn Abdul Mutalib (RA)"",
	""title"": ""Anonymous""
  },
  {
	""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691835269/Story/64d75aa254b70_uqppgk.png"",
	""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691835269/Story/64d75aa254b70_uqppgk.png"",
    ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711213503/MoodPlay/Black%20Pink/Snaptik.app_7199976110782729478_fus92k.mp4"",
    ""name"": ""Bilal the Great African Muslim"",
	""title"": ""Anonymous""
  },
{
	""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691859328/Story/al_fateh_siovvh.png"",
	""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691859328/Story/al_fateh_siovvh.png"",
    ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711213503/MoodPlay/Black%20Pink/Snaptik.app_7199976110782729478_fus92k.mp4"",
    ""name"": ""Muhammad al Fatih, The Conqueror of Constantinople"",
	""author"": ""Anonymous""
  },
{
	""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691862067/Story/khaleed_mmalxl.png"",
	""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691859328/Story/al_fateh_siovvh.png"",
    ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711213503/MoodPlay/Black%20Pink/Snaptik.app_7199976110782729478_fus92k.mp4"",
    ""name"": ""Sword of God: The story of Khalid Ibn Al-Walid"",
	""author"": ""Anonymous""
  },
{
	""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691916765/Story/Nabi_Nuh_ifxjze.png"",
	""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691859328/Story/al_fateh_siovvh.png"",
    ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711213503/MoodPlay/Black%20Pink/Snaptik.app_7199976110782729478_fus92k.mp4"",
    ""name"": ""The Story of Abul Basyar (Prophet Noah)"",
	""author"": ""Anonymous""
  }
]"
Ca45Yxbv,–°–ü–†–ò–ù–¢ ‚Ññ 6 | –ü—Ä–æ—Ñ–∏–ª–∏—Ä—É–µ–º –∏ —É—Å–∫–æ—Ä—è–µ–º | –£—Ä–æ–∫ 9: –í–≥–ª—É–±—å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞,chevengur,C++,Tuesday 26th of March 2024 12:27:43 PM CDT,"main.cpp

#include <iostream>
#include <vector>
#include <cassert>

using namespace std;

struct days {
    int count; 
    float sum;
};

std::vector<float> ComputeAvgTemp(const std::vector<std::vector<float>>& measures) {

    if (measures.empty() || measures[0].empty()) {
        return {};
    }
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–µ–∫—Ç–æ—Ä–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä days –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—É–º–º—ã –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–∑–º–µ—Ä–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–π –º–∏–Ω—É—Ç—ã
    std::vector<days> aggregated(measures.size()); // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–º–µ—Ä –ø–µ—Ä–≤–æ–≥–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞

    for (const auto& day : measures) {
        for (size_t i = 0; i < day.size(); ++i) { // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—É—â–µ–≥–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞
            if (day[i] > 0) {
                aggregated[i].sum += day[i];
                aggregated[i].count++;
            }
        }
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–µ–∫—Ç–æ—Ä–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ä–µ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    std::vector<float> averages(measures[0].size());

    // –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–π –º–∏–Ω—É—Ç—ã
    for (size_t i = 0; i < measures[0].size(); ++i) { // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–º–µ—Ä –ø–µ—Ä–≤–æ–≥–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞
        averages[i] = (aggregated[i].count > 0) ? aggregated[i].sum / aggregated[i].count : 0;
    }


    return averages;
}

void Test() {
    // 4 –¥–Ω—è –ø–æ 3 –∏–∑–º–µ—Ä–µ–Ω–∏—è
    vector<vector<float>> v = {
        {0, -1, -1},
        {1, -2, -2},
        {2, 3, -3},
        {3, 4, -4}
    };

    // —Å—Ä–µ–¥–Ω–µ–µ –¥–ª—è 0-–≥–æ –∏–∑–º–µ—Ä–µ–Ω–∏—è (1+2+3) / 3 = 2 (–Ω–µ —É—á–∏—Ç—ã–≤–∞–º 0)
    // —Å—Ä–µ–¥–Ω–µ–µ –¥–ª—è 1-–≥–æ –∏–∑–º–µ—Ä–µ–Ω–∏—è (3+4) / 2 = 3.5 (–Ω–µ —É—á–∏—Ç—ã–≤–∞–º -1, -2)
    // —Å—Ä–µ–¥–Ω–µ–µ –¥–ª—è 2-–≥–æ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ (–≤—Å–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã), –ø–æ—ç—Ç–æ–º—É –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 0

    assert(ComputeAvgTemp(v) == vector<float>({ 2, 3.5f, 0 }));
}

int main() {
    Test();
    cout << ""Test passed successfully!"" << endl;
    return 0;
}

***************************************************************************************************************************************
log_duration.h

#pragma once

#include <chrono>
#include <iostream>

#define PROFILE_CONCAT_INTERNAL(X, Y) X##Y
#define PROFILE_CONCAT(X, Y) PROFILE_CONCAT_INTERNAL(X, Y)
#define UNIQUE_VAR_NAME_PROFILE PROFILE_CONCAT(profileGuard, __LINE__)
#define LOG_DURATION(x) LogDuration UNIQUE_VAR_NAME_PROFILE(x)

class LogDuration {
public:
    // –∑–∞–º–µ–Ω–∏–º –∏–º—è —Ç–∏–ø–∞ std::chrono::steady_clock
    // —Å –ø–æ–º–æ—â—å—é using –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    using Clock = std::chrono::steady_clock;

    LogDuration(const std::string& id) : id_(id) {
    }

    ~LogDuration() {
        using namespace std::chrono;
        using namespace std::literals;

        const auto end_time = Clock::now();
        const auto dur = end_time - start_time_;
        std::cerr << id_ << "": ""s << duration_cast<milliseconds>(dur).count() << "" ms""s << std::endl;
    }

private:
    const std::string id_;
    const Clock::time_point start_time_ = Clock::now();
};
"
8w6Ni2U1,Update Broken,Alexr360,Lua,Tuesday 26th of March 2024 12:15:37 PM CDT,"-- List of programs to check for updates
local programs = {
    {name = ""Bastion"", pastebinCode = ""Czt0xUgp""},
    {name = ""RBastion"", pastebinCode = ""YLMd18xC""},
    {name = ""FBastion"", pastebinCode = ""8pF6ds3s""},
    {name = ""GPS"", pastebinCode = ""d8WLzv0U""},
    {name = ""Stripmine"", pastebinCode = ""BkFdvGdv""},
    {name = ""Update"", pastebinCode = ""8w6Ni2U1""},
    {name = ""Greeting"", pastebinCode = ""REfxrLkG""},
    {name = ""startup"", pastebinCode = ""u2ey5fkZ""},
    -- Add more programs as needed
}

-- Function to check for updates
local function checkForUpdates(program)
    -- Loop through the list of programs
    for i, program in ipairs(programs) do
      -- Check if the file already exists
      if not fs.exists(program.name) then
        -- Open a new file with the current program name
        local file = fs.open(program.name, ""w"")

        -- Write a message to the file
        file.write(""This is "" .. program.name .. "". The pastebin code is "" .. program.pastebinCode)

        -- Close the file
        file.close()
      end
    end
    print(""Files have been created."")
    
    print(""Checking for updates for "" .. program.name .. ""..."")
    local response = http.get(""https://pastebin.com/raw/"" .. program.pastebinCode)
    if response then
        local remoteVersion = response.readAll()
        response.close()
        local localVersion = fs.exists(program.name) and fs.open(program.name, ""r"").readAll() or nil
        if localVersion and localVersion ~= remoteVersion then
            print(""Updating "" .. program.name .. ""..."")
            local file = fs.open(program.name, ""w"")
            file.write(remoteVersion)
            file.close()
            print(program.name .. "" updated successfully."")
        else
            print(program.name .. "" is up to date."")
        end
    else
        print(""Failed to check for updates for "" .. program.name)
    end
end

-- Main function to check for updates for all programs
local function main()
    for _, program in ipairs(programs) do
        checkForUpdates(program)
    end
end

-- Run main function
main()"
kVn6s8hR,Untitled,dllbridge,C,Tuesday 26th of March 2024 12:15:33 PM CDT,"
#include   <stdio.h>
  




///////////////////////////////////////////////////
int main()                                       //
{
	
	int  n    =   4 ;
	int *p    =  &n ;

    printf("" n = %d  \n"",  n); 
    printf("" p = %d  \n"",  p);
    printf(""*p = %d  \n"", *p); 	
    printf(""&p = %d  \n"", &p);	 		
}




"
xWmgkTAs,Untitled,MeehoweCK,C++,Tuesday 26th of March 2024 12:14:39 PM CDT,"#include <iostream>

bool czyPierwsza(unsigned int liczba) {
	if (liczba < 2) {
		return false;
	}
	for (auto i{ 2 }; i * i <= liczba; ++i) {
		if (liczba % i == 0) {
			return false;
		}
	}
	return true;
}

int main() {
	unsigned int liczba;
	std::cout << ""Podaj liczbe naturalna: "";
	std::cin >> liczba;
	if (czyPierwsza(liczba)) {
		std::cout << liczba << "" jest liczba pierwsza.\n"";
	}
	else {
		std::cout << liczba << "" nie jest liczba pierwsza.\n"";
	}
	return 0;
}"
78dCMR1V,Divide and Conquer,nathanwailes,Python,Tuesday 26th of March 2024 12:13:10 PM CDT,"""""""
This algorithm divides the original problem into smaller sub-problems, solves the sub-problems recursively, and combines their solutions to get the solution to the original problem.
"""""""
