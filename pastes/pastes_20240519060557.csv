id,title,username,language,date,content
8J1csTW2,Untitled,bakhridinova,XML,Sunday 19th of May 2024 12:54:31 AM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<project xmlns=""http://maven.apache.org/POM/4.0.0""
         xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
         xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"">
    <modelVersion>4.0.0</modelVersion>

    <groupId>biz.svyatoslav.learning.bigdata.elasticsearch</groupId>
    <artifactId>simple_app</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <scala.version>2.12</scala.version>
        <spark.version>3.1.2</spark.version> <!-- Use the version of Spark you are working with -->
        <elasticsearch.hadoop.version>7.16.1</elasticsearch.hadoop.version> <!-- Use the version compatible with your Elasticsearch -->
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql-kafka-0-10_${scala.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>

        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch-spark-30_2.12</artifactId>
            <version>8.12.0</version>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>2.12.17</version>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>2.12.17</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>
        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>5.8</version>
        </dependency>

    </dependencies>

</project>"
3ssKd9wJ,converte-webp-2-jpg-e-apaga-os-webp,MizunoBrasil,Python,Sunday 19th of May 2024 12:54:06 AM CDT,"import os
from PIL import Image

def convert_webp_to_jpg():
    # Obtém o diretório atual onde o script está sendo executado
    folder_path = os.getcwd()

    # Cria a subpasta 'jpg' se ela ainda não existir
    jpg_folder = os.path.join(folder_path, 'jpg')
    os.makedirs(jpg_folder, exist_ok=True)

    # Lista todos os arquivos na pasta
    files = os.listdir(folder_path)

    # Itera sobre cada arquivo na pasta
    for file_name in files:
        if file_name.endswith('.webp'):
            # Abre o arquivo .webp
            webp_path = os.path.join(folder_path, file_name)
            with Image.open(webp_path) as img:
                # Extrai o nome do arquivo sem a extensão
                file_name_without_extension = os.path.splitext(file_name)[0]

                # Define o caminho para salvar o arquivo .jpg
                jpg_path = os.path.join(jpg_folder, f""{file_name_without_extension}.jpg"")

                # Salva a imagem como .jpg
                img.convert(""RGB"").save(jpg_path, ""JPEG"")

                print(f""Arquivo '{file_name}' convertido para '{file_name_without_extension}.jpg'"")
                
                # Remove o arquivo .webp após a conversão
                os.remove(webp_path)
                print(f""Arquivo '{file_name}' removido."")

# Chama a função para converter os arquivos .webp para .jpg na pasta atual
convert_webp_to_jpg()
"
L1wMjC0P,Pesquisar arquivo de determinada extensão na pasta,MizunoBrasil,Python,Sunday 19th of May 2024 12:51:06 AM CDT,"import os
import tkinter as tk
from tkinter import messagebox

def pesquisar_extensao(event=None):
    extensao = entrada_extensao.get()
    pasta = os.getcwd()  # Pasta atual
    arquivos_encontrados = []

    for root, _, files in os.walk(pasta):
        for file in files:
            if file.endswith(extensao):
                arquivos_encontrados.append(os.path.join(root, file))

    if arquivos_encontrados:
        resultado.config(text=""Arquivos encontrados:\n"" + ""\n"".join(arquivos_encontrados))
    else:
        messagebox.showinfo(""Alerta"", f""Não foi encontrado nenhum arquivo com a extensão '.{extensao}'"")

# Criando a janela principal
janela = tk.Tk()
janela.title(""Pesquisar Arquivos por Extensão"")
janela.geometry(""400x300"")  # Tamanho da janela

# Criando widgets
rotulo_extensao = tk.Label(janela, text=""Digite a extensão: (não colocar * nem . apenas a extensão)"")
rotulo_extensao.pack(pady=10)

entrada_extensao = tk.Entry(janela)
entrada_extensao.pack()
entrada_extensao.bind(""<Return>"", pesquisar_extensao)  # Vinculando a tecla Enter à função de pesquisa

botao_pesquisar = tk.Button(janela, text=""Pesquisar"", command=pesquisar_extensao)
botao_pesquisar.pack(pady=10)

resultado = tk.Label(janela, text="""")
resultado.pack()

# Centralizando a janela na tela
largura_janela = janela.winfo_reqwidth()
altura_janela = janela.winfo_reqheight()
largura_tela = janela.winfo_screenwidth()
altura_tela = janela.winfo_screenheight()
posicao_x = (largura_tela // 2) - (largura_janela // 2)
posicao_y = (altura_tela // 2) - (altura_janela // 2)
janela.geometry(f""+{posicao_x}+{posicao_y}"")

# Loop principal da janela
janela.mainloop()
"
A00ZeWex,Untitled,bakhridinova,PowerShell,Sunday 19th of May 2024 12:48:34 AM CDT,"--- command line
Microsoft Windows [Version 10.0.22631.3593]
(c) Microsoft Corporation. All rights reserved.

C:\Users\Lenovo>docker ps
CONTAINER ID   IMAGE                  COMMAND                  CREATED        STATUS                   PORTS                                            NAMES
e1dca8644241   kibana:7.16.1          ""/bin/tini -- /usr/l…""   11 hours ago   Up 3 minutes             0.0.0.0:5601->5601/tcp                           kib
f5b6f8997d1e   elasticsearch:7.16.1   ""/bin/tini -- /usr/l…""   11 hours ago   Up 3 minutes (healthy)   0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   es

C:\Users\Lenovo>docker inspect network bigdata_network
[
    {
        ""Name"": ""bigdata_network"",
        ""Id"": ""d5a3a40a09ee6a5ea0beed5e7f28ace976b004939c264ec64a073770d749a783"",
        ""Created"": ""2024-03-16T16:32:19.778343316Z"",
        ""Scope"": ""local"",
        ""Driver"": ""bridge"",
        ""EnableIPv6"": false,
        ""IPAM"": {
            ""Driver"": ""default"",
            ""Options"": {},
            ""Config"": [
                {
                    ""Subnet"": ""172.18.0.0/16"",
                    ""Gateway"": ""172.18.0.1""
                }
            ]
        },
        ""Internal"": false,
        ""Attachable"": false,
        ""Ingress"": false,
        ""ConfigFrom"": {
            ""Network"": """"
        },
        ""ConfigOnly"": false,
        ""Containers"": {},
        ""Options"": {},
        ""Labels"": {}
    }
]
Error: No such object: network

C:\Users\Lenovo>

--- stacktrace
Connected to the target VM, address: '127.0.0.1:65150', transport: 'socket'
Connecting to Elasticsearch...
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.spark.unsafe.Platform (file:/C:/Users/Lenovo/.m2/repository/org/apache/spark/spark-unsafe_2.12/3.5.0/spark-unsafe_2.12-3.5.0.jar) to constructor java.nio.DirectByteBuffer(long,int)
WARNING: Please consider reporting this to the maintainers of org.apache.spark.unsafe.Platform
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Preparing simple data...
Writing simple data...
10:46:09.513 [main] ERROR o.e.hadoop.rest.NetworkClient - Node [172.18.0.1:9200] failed (java.net.ConnectException: Connection timed out: connect); no other nodes left - aborting...
org.elasticsearch.hadoop.EsHadoopIllegalArgumentException: Cannot detect ES version - typically this happens if the network/Elasticsearch cluster is not accessible or when targeting a WAN/Cloud instance without the proper setting 'es.nodes.wan.only'
	at org.elasticsearch.hadoop.rest.InitializationUtils.discoverClusterInfo(InitializationUtils.java:403)
	at org.elasticsearch.spark.sql.EsSparkSQL$.saveToEs(EsSparkSQL.scala:99)
	at org.elasticsearch.spark.sql.ElasticsearchRelation.insert(DefaultSource.scala:629)
	at org.elasticsearch.spark.sql.DefaultSource.createRelation(DefaultSource.scala:107)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at biz.svyatoslav.learning.bigdata.elasticsearch.SparkJavaElasticStreamTest.main(SparkJavaElasticStreamTest.java:38)
Caused by: org.elasticsearch.hadoop.rest.EsHadoopNoNodesLeftException: Connection error (check network and/or proxy settings)- all nodes failed; tried [[172.18.0.1:9200]] 
	at org.elasticsearch.hadoop.rest.NetworkClient.execute(NetworkClient.java:160)
	at org.elasticsearch.hadoop.rest.RestClient.execute(RestClient.java:442)
	at org.elasticsearch.hadoop.rest.RestClient.execute(RestClient.java:438)
	at org.elasticsearch.hadoop.rest.RestClient.execute(RestClient.java:406)
	at org.elasticsearch.hadoop.rest.RestClient.mainInfo(RestClient.java:755)
	at org.elasticsearch.hadoop.rest.InitializationUtils.discoverClusterInfo(InitializationUtils.java:393)
	... 33 more
Disconnected from the target VM, address: '127.0.0.1:65150', transport: 'socket'

Process finished with exit code 0"
mH4fZSjZ,Untitled,bakhridinova,YAML,Sunday 19th of May 2024 12:45:21 AM CDT,"services:
  elasticsearch:
    image: elasticsearch:7.16.1
    container_name: es
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: ""-Xms512m -Xmx512m""
    ports:
      - ""9200:9200""
      - ""9300:9300""
    healthcheck:
      test: [""CMD-SHELL"", ""curl --silent --fail localhost:9200/_cluster/health || exit 1""]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - bigdata_network
  logstash:
    image: logstash:7.16.1
    container_name: log
    environment:
      discovery.seed_hosts: logstash
      LS_JAVA_OPTS: ""-Xms512m -Xmx512m""
    volumes:
      - ./logstash/pipeline/logstash-nginx.config:/usr/share/logstash/pipeline/logstash-nginx.config
      - ./logstash/nginx.log:/home/nginx.log
    ports:
      - ""5000:5000/tcp""
      - ""5000:5000/udp""
      - ""5044:5044""
      - ""9600:9600""
    depends_on:
      - elasticsearch
    networks:
      - bigdata_network
    command: logstash -f /usr/share/logstash/pipeline/logstash-nginx.config
  kibana:
    image: kibana:7.16.1
    container_name: kib
    ports:
      - ""5601:5601""
    depends_on:
      - elasticsearch
    networks:
      - bigdata_network
networks:
  bigdata_network:
    driver: bridge
"
XLb6rAVa,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Sunday 19th of May 2024 12:20:31 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_542042.pdf

Working as of:
19 May 2024"
qGLnSN8q,Untitled,kisazeky,Bash,Saturday 18th of May 2024 11:57:36 PM CDT,ohllord@gmail.com
ugVWCSn9,t4 AC,pb_jiang,C++,Saturday 18th of May 2024 11:31:34 PM CDT,"using ll = long long;
ll comb[48][48] = {0};
class Solution {
    ll getc(ll n, ll r) {
        if (n < r) return 0;
        if (r == 0 || n == r) return comb[n][r] = 1;
        if (comb[n][r]) return comb[n][r];
        return comb[n][r] = getc(n - 1, r) + getc(n - 1, r - 1);
    }
public:
    int waysToReachStair(int k) {
        if (k == 0) return 2;
        for (ll i = 32; i >= 0; --i)
            for (ll j = i; j >= 0; --j)
                getc(i, j);
        ll ans = 0;
        for (ll i = 0; i <= 31; ++i) {
            ll tg = k - 1 + i;
            if ((tg & (tg + 1)) == 0) {            
                ll blk = __builtin_popcountll(tg) + 1;
                if (blk >= i) {
                    ll d = comb[blk][i];
                    ans += d;
                }
            }    
        }
        return int(ans);
    }
};"
2WPy77Y9,Shop Button Handler Full Script,OnFireRobloxScriptin,Lua,Saturday 18th of May 2024 11:15:56 PM CDT,"--//Variables
local remoteEvent = game.ReplicatedStorage:WaitForChild(""OpenShop"")
local shop = script.Parent.ShopFrame
local exit = shop.Exit
local BuyRE = game.ReplicatedStorage:WaitForChild(""Buy"")
--//Open
remoteEvent.OnClientEvent:Connect(function()
	shop:TweenPosition( --creates a new tween position
		UDim2.new(0.124,0,0.138,0), --End target for the position tween
		Enum.EasingDirection.InOut, --Direction of tween (not literal direction, its similar to style)
		Enum.EasingStyle.Sine, --Style of tween
		1, --How long the tween takes, 1 = 1 second
		false --If the tween can be overidden by other tweens
	)
end)

--//Close
exit.MouseButton1Click:Connect(function()
	shop:TweenPosition( --same thing as the tweenposition above this
		UDim2.new(0.124,0,1,0),
		Enum.EasingDirection.InOut,
		Enum.EasingStyle.Sine,
		1,
		false
	)
end)

local function OpenFrame(frame) --Function for opening frames
	local framefolder = script.Parent.ShopFrame.Information --Variable for Frame Folder
	for _, Frame in ipairs(framefolder:GetChildren()) do --Loop through all the frames in Frame Folder
		if Frame:IsA(""Frame"") then --If item is a Frame then
			if Frame == frame then --If the item is the Frame we want then
				Frame.Visible = true --Set the frame's visibility to True
			end
		end
	end
end

local function CloseFrames() --Function for closing frames
	local framefolder = script.Parent.ShopFrame.Information --Variable for Frame Folder
	for _, Frame in ipairs(framefolder:GetChildren()) do --Loop through all the frames in Frame Folder
		if Frame:IsA(""Frame"") then --If the item is a Frame then
			Frame.Visible = false --Set the frame's visibility to False
		end
	end
end

--//Buttons
local ClassicSwordButton = shop.Buttons.ClassicSword.ImageButton --Variable for Classic Sword Button
local FlashLightButton = shop.Buttons.FlashLight.ImageButton --Variable for Flash Light Button
local KeycardButton = shop.Buttons.Keycard.ImageButton
--//Frames
local ClassicSwordFrame = shop.Information.ClassicSwordInfo --Variable for Classic Sword Frame
local FlashLightFrame = shop.Information.FlashLightInfo --Variable for Flash Light Frame
local KeycardFrame = shop.Information.KeycardInfo

--//Open Frame Functions
ClassicSwordButton.MouseButton1Click:Connect(function() --When Classic Sword Button is clicked
	CloseFrames() --Close All Frames
	OpenFrame(ClassicSwordFrame) --Open Classic Sword Frame
end)

FlashLightButton.MouseButton1Click:Connect(function() --Same thing as Classic Sword but with Flash Light instead
	CloseFrames()
	OpenFrame(FlashLightFrame)
end)

KeycardButton.MouseButton1Click:Connect(function() --Same thing as Classic Sword but with Keycard instead
	CloseFrames()
	OpenFrame(KeycardFrame)
end)

BuyRE.OnClientEvent:Connect(function(tool, instruction) --When the client recieves the remote event
	if instruction == ""Cash"" then --if its the cash error message then
		shop.Errormessage.Text = ""Oops! Looks like you don't have enough cash to buy ""..tool..""!!!"" --cash error message display
		task.wait(3) --wait 3 seconds, replace 3 with the number of seconds you want to wait
		shop.Errormessage.Text = """" --make error message text blank
	elseif instruction == ""Max"" then --if its the max error message then
		shop.Errormessage.Text = ""Oops! Looks like you already bought ""..tool..""!!!""
		task.wait(3)
		shop.Errormessage.Text = """"
	end
end)"
a0BtrUeC,Tool Handler Full Script,OnFireRobloxScriptin,Lua,Saturday 18th of May 2024 11:12:00 PM CDT,"--//Variables
local BuyRE = game.ReplicatedStorage:WaitForChild(""Buy"") --Variable for the buy remote event
local toolsDictionary = { --Variable for Tool Dictionary
	[""Classic Sword""] = { --New item in Tool Dictionary
		price = 500, --Price of item
		tool = game.ReplicatedStorage.Tools:WaitForChild(""ClassicSword""), --Physical location of item
		bought = false --Checks if player has already bought the item
	},
	[""Flash Light""] = { --Same thing but with a flash light
		price = 750,
		tool = game.ReplicatedStorage.Tools:WaitForChild(""FlashLight""),
		bought = false
	},
	[""Keycard""] = { --Same thing but with a key card
		price = 1000,
		tool = game.ReplicatedStorage.Tools:WaitForChild(""SCP Card Level 4""),
		bought = false
	},
}

--//Purchase
BuyRE.OnServerEvent:Connect(function(player, item) --When the server recieves the remote event
	local selectedItem = toolsDictionary[item] --Variable for the selected item
	if selectedItem then --if selected item exists then
		if player.leaderstats.Cash.Value >= selectedItem.price and selectedItem.bought == false then --if player has enough cash and has not bought the item yet then
			player.leaderstats.Cash.Value -= selectedItem.price --subtract cash from the player
			selectedItem.bought = true
			local newItem = selectedItem.tool:Clone() --clone the tool player wants
			newItem.Parent = player.Backpack --give tool to player
		elseif selectedItem.bought == true then --if the player already bought the item
			BuyRE:FireClient(player, item, ""Max"") --sends max error message
		elseif player.leaderstats.Cash.Value < selectedItem.price then --if the player does not have enough cash
			BuyRE:FireClient(player, item, ""Cash"") --sends cash error message
		end
	end
end)"
GLkmmdbP,"Lectura, escritura de ficheros JAVA.",Namaru,Java,Saturday 18th of May 2024 11:07:34 PM CDT,"import java.io.*;
import java.util.*;


public class LecturaEscritura_FicherosPlanos {

    private static final Scanner scn = new Scanner(System.in);

    public void escritura(String linea) {
        try {
            FileWriter fichero = new FileWriter(""texto.txt"", true);
            BufferedWriter flujo = new BufferedWriter(fichero);
            PrintWriter escribir = new PrintWriter(flujo);
            escribir.println(linea);
            escribir.flush();
        } catch (IOException e) {
            System.err.println(""Error: "" + e.getMessage());
        }
    }

    public ArrayList<String> leer() {
        ArrayList<String> texto = new ArrayList<>();

        try {
            FileReader fichero = new FileReader(""texto.txt"");
            BufferedReader leer = new BufferedReader(fichero);

            while (leer.ready()) {
                texto.add(leer.readLine());
            }
        } catch (IOException e) {
            System.err.printf(""Error leer: "", e.getMessage());
            
        }
        return texto;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        LecturaEscritura_FicherosPlanos fichero = new LecturaEscritura_FicherosPlanos();
        // TODO code application logic here
        String linea;
        System.out.println(""Elija escribir 'E' o Leer 'L'"");
        linea = scn.nextLine();
        if (linea.toUpperCase().equals(""E"")) {
            scn.reset();
            System.out.println(""Escriba"");
            linea = scn.nextLine();
            fichero.escritura(linea);

        } else if (linea.toUpperCase().equals(""L"")) {
            //System.err.printf(""Datos en fichero %-51s"", linea);
            String[] texto = fichero.leer().toArray(args);
            LinkedList<String> list = new LinkedList<>();

            for (String texto1 : texto) {
                int longitud = texto1.length();
                int cont = longitud;
                String text;
                int num = 0;
                do {                    
                    if (longitud > 50) {
                        int rest = longitud - cont;        
                        int tern = ((cont<51)?50*num+cont:50*num+50);                        
                        //si es mayor de 50 la longitud hace salto de linea y continua con el mismo.                        
                        text = texto1.substring( rest, tern ) + ((texto1.charAt((tern-1))!=' '&& cont > 50)?""-"":"""");
                        System.out.printf(""| %-"" + 51 + ""s"", text).println(""|"" /*+ cont*/);
                        //contadores:
                        cont -= 50;                        
                        num += 1;
                    } else {
                        cont = 0;
                        System.out.printf(""| %-"" + 51 + ""s"", texto1).println(""|"" /*+ longitud*/);
                    }                    
                } while (cont > 0);                
            }
        }
    }

}"
RQ3M0zie,Numeric Concentric Squares Pattern,CodingComputing,Python,Saturday 18th of May 2024 10:43:12 PM CDT,"# Numeric concentric squares pattern by @CodingComputing

max_num = 4  # given parameter

# Construct the central row
inc_nums = list(range(1, max_num+1))
centre_row = inc_nums[:0:-1] + inc_nums
size = len(centre_row)  # infer the size

for num in centre_row:
    row = centre_row.copy()  # Each row is derived from centre row
    # Replace a middle slice by repeated num
    slice_start = max_num - num
    slice_stop = size - slice_start
    row[slice_start:slice_stop] = [num]*(num*2-1)
    print(' '.join([str(item) for item in row]))  # format and print

# Follow @CodingComputing for more on Python!"
6eXG2qz3,nested list HTML,nightmare13,HTML,Saturday 18th of May 2024 10:28:11 PM CDT,"<ol>
        <li>1
            <ul>
                <li type=""disc"">Item A</li>
                <li type=""circle"">Item B</li>
                <li type=""square"">Item C</li>
            </ul>
        </li>
        <li>3
            <ol type=""a"">
                <li>a</li>
                <li>b
                    <ul>
                        <li type=""circle"">Subitem 1</li>
                        <li type=""square"">Subitem 2</li>
                    </ul>
                </li>
                <li>c</li>
            </ol>
        </li>
        <li>5
            <ol type=""i"">
                <li>i</li>
                <li>ii</li>
                <li>iii</li>
            </ol>
        </li>
        <li>7
            <ul>
                <li type=""square"">Item X</li>
                <li type=""disc"">Item Y</li>
                <li type=""circle"">Item Z</li>
            </ul>
        </li>
    </ol>"
SDrHYyfj,Untitled,sneakybeakylike,Lua,Saturday 18th of May 2024 10:25:02 PM CDT,"--program for host to receive graph and turtle position
--generates graph_image.nft file and displays it on connected monitor

function draw_image(image)
    monitor = peripheral.find(""monitor"")
    if not monitor then
        print(""Unable to find monitor"")
        return false
    end
    term.redirect(monitor)
end
--look for monitor peripheral. 


--open rednet
peripheral.find(""modem"", rednet.open)
--host on protocol ""MINER_GRAPH"" as hostname ""monitor""
rednet.host(""MINER_GRAPH"", ""monitor"")
while true do
    local id, message, protocol = rednet.receive(""MINER_GRAPH"", 1)
	if id then
        local graph = message.graph
        local x = message.x
        local y = message.y
        local z = message.z
        local image = generate_graph_image(graph, y)
    end
end

--unhost on protocol ""MINER_GRAPH""
rednet.unhost(""MINER_GRAPH"")
--close rednet
peripheral.find(""modem"", rednet.close)"
KUN6ZZgu,OH OK Modlist,BonSAI007,PowerShell,Saturday 18th of May 2024 09:48:26 PM CDT,"OH OK MODS: 

Mods:
""Simple UI library
EasyConfigChucked
Monkey's Library
MoodleFramework
Item Tweaker API - Still works in Build 41.78
Mod Options (Build 41)
KATTAJ1 Clothes Core
Authentic Z
Pitstop
Greenport, KY
Big Bear Lake
Chestown
Grapeseed
Lake Ivy Township
Lake Cumberland [NEW LOCATION!]
Muldraugh Checkpoint
Petroville
Rabbit Hash, KY
Raven Creek
Fort Rock Ridge 
Shark and Cytt's Kentucky Car Overhaul - Map
Muldraugh, KY
Fix Shore Corner
Oujinjin's Tile Pack
PertsPartyTiles
Simon MDs Tiles
AzaMountainTiles
Skizot's Tiles
Fantasiado's More Street Details
BigZombieMonkeys Tile Pack
Daddy Dirkie dirks tiles
Dylan's Tile Pack
TryHonesty's Liberty City Tiles
Melos Tiles for Miles Tilepack
ExtraNoise's Newburbs Tiles
MandoDB - Tiles Pack
throttlekitty's tiles
ivery's Tiles
CleanDirt
Uniquely Named Louisville Maps (DE, EN, ES, FR, IT)
WaterDispenser
Faster Hood Opening
Tidy Up Meister
Rewarding Night Combat 
Faction Safehouses With Friends
Refillable Lighters
Repair Any Clothes
Craft Helper Continued
SimpleFuelStorage
AutoMechanics
Rick's MLC Cutlery
Container Tags
AutoSewing
BecomeBrave
Become Desensitized
Better Hand Wash (41.60+)
Better Placement
Hydrocraft
DynamicTrading
Item Stories [beta]
[KYR] Real Weather Mod
Soul Ficher's Awesome Time
Snow is water [MP Working - v1.3.1] 
RicksMLC_ZombieSlam
Better Repair Count
Disassemble Container With items
Yaki's BarberShop
Yaki's Hair Retexture
FixedLongLifeBulbs
MA Organized Item Names B41 V7
Better Flashlights
More Dragdown Screams
Yaki's Hair Salon
More Plushies!
Nepenthe's Nearby Traps
Open Ammo Boxes While Walking
Pantry Packing
Propane Tank Tweak (for Propane Station)
Pumps Have Propane
Read While Walking
Replace Bandage
Sleeping Bags!
Take Any Amount
Squishmallows 
Spongie's Hair
ImmersiveHunting
DynamicMining
EasyEngineRebuild
Vehicle Recycling
Wring Out Clothing
Gun Hara-Kiri (Reupload)
Functional Appliances
ZuperCart - Carts & Trolleys
Skizot's Carryable Everything
Warm Up 
Better Sorting
Automatic Gate Motors
Primitive Survival
Fitness & Workout Overhaul
Lifestyle Hobbies
HardForage
HardFishing
HypothermiaKills
HardTrapping
First Aid Overhaul
DisinfectOrDie
RicksMLC_Concussion
TripAndFall
Boredom Tweaks
Cat's Faster Reading Mod
NRK Need Light To Read
Quit Smoking
Better Masks
ClothesBox Redux
Fluffy Hair
Lantern
Just Some Hair Styles
Noir's Attachments
Noir's Rifle Slings
somewhatsuits
BonSAI's Server Traits
True Actions. Act 1 & 2 - Sitting & Lying [for MP disable anti-cheat type 12]
True Actions. Act 3 - Dancing
More Builds
More Builds Appliances
More Paint and Plaster+
b41Sprinters
Worn Out Zombies
TheyKnew
Belt Wearing Zombies
Undead Survivor
Zombies Drop Ammo & Mats by Maxwell218
KP Armor Pack
KATTAJ1 Military Pack
FoodPreservationPlus
Sapph's Cooking [41.78+]
HerbalMedicinePlus
Mini Health Panel
BonSAI's Sprinter Server Quest Rewards
Easy Spare Magazine Reload
Handmade Weapons [41.78]
TheEngineer
RealMetalworking
EssentialCrafting
FroggyChair
Propane and Gasoline
TheWorkshop(new version)
Better Batteries
Universal Repair, Rip and Patch Clothing 2.0!
Greenhouse Building Set
Rome's Reusable Metal
Wooden Dowels [b41+]
FOOL's New Containers
Udderly Backpacks 
Shark and Cytt's Kentucky Car Overhaul
Shark and Cytt's Kentucky Car Overhaul Zones
Beds Have Blankets
Fix Inventory Tooltip lag
Fix Laggy Crafting Menu
Invisible Clothing Patches
Tile Fixes
AutoHide Hotbar
Draw On The Map - Free Hand Drawing
Visible Generator Range
Weapon Condition Indicator [41.60+]
XP Drops - Oldschool Runescape
Equipment UI - Tarkov Style Interface
Extra Map Symbols
Has Been Read
Improved Hair Menu
Improved Build Menu [Build 41]
Improved Muzzle Flash
Map Symbol Size Slider
Map Legend UI
Where Am I?
Building Menu
Players On Map
Position XY
Proximity Inventory
Rename Containers
Reorder Containers - Backpack Orders
Reorder The Hotbar
Better Decayed Corpse Texture
Improved Blood Effects
Improved Fire & Smoke Effects
Simple Character Retextures (male and female + makeup)
UdderlySafeLogin
Udderly No Combat Logging
Udderly Up To Date
M3ss Twitch Stats
Sleep With Friends v1.2.1
You drive, I sleep
Vehicle Repair Overhaul
Working Masks
Fancy Handwork
Furniture Tweaks
Lockpicking! Just. Lockpicking. [41.56]
Mod's Bulk Items
Beds Have Blankets
Boots and Clothes Expanded 10.6
HardFarming
No Starting Clothes
Filibuster Rhymes' Used Cars! - Fuel Test""
"
vgbNaADE,crazy snowybot got upgrade supersnowzystrikes back big,coinwalk,JavaScript,Saturday 18th of May 2024 09:32:07 PM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/1440).toFixed(8));
var beast = prefit;
var hundreds = (prefit*100);
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var winnerdinner = (elderly*24);
var snowy = ((Math.floor(elderly/tens))*tens);
var trial = ((Math.floor(elderly/hundreds))*hundreds);
var staay = ((Math.floor(elderly/hundreds))*hundreds);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = elderly;
var bolux = false;
var upped = 6.9;
var downed = 2.9;
var mighty = elderly;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great>(snowie+(beast*upped))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (great<(snowie-(beast*downed))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if ((((staay+(great-staay))/4)<=(beast))&&(((staay+(great-staay))-beast)>tens)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
}
if ((((staay+(great-staay))/2)<=(beast))&&(((staay+(great-staay))-beast)<tens)&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
}
if ((beast>=(elderly-staay))&&(((staay+(great-staay))-beast)>tens)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 350);
}
go();"
e0L4uVsU,picamctrl,Iequezada,Python,Saturday 18th of May 2024 09:18:43 PM CDT,"import time
from picamera2 import Picamera2, Preview
from picamera2.controls import Controls

# Initialize camera
picam2 = Picamera2()

# Configure for the best quality sensor format
preview_config = picam2.create_preview_configuration()
capture_config = picam2.create_still_configuration(raw={'size': (4608, 2592), 'format': 'SRGGB10_CSI2P'}, main={'size': (4608, 2592), 'format': 'BGR888'})

# Configure preview mode
picam2.configure(preview_config)

# Start the camera
picam2.start_preview(Preview.QTGL)
picam2.start()
time.sleep(1)  # Let the camera warm up

# Set manual controls using the ""direct"" attribute method
with picam2.controls as ctrl:
    ctrl.AnalogueGain = 1.1228070259094238  # Lowest possible value
    ctrl.ExposureTime = 10000               # Shutter speed in microseconds, e.g., 1/100s
    ctrl.AeEnable = False                   # Disable auto exposure
    ctrl.AwbMode = 6                        # Set to daylight white balance
    ctrl.Sharpness = 0.0                    # Set sharpness level to 0
    ctrl.NoiseReductionMode = 0             # Turn off noise reduction
    ctrl.Saturation = 0.0                   # Set saturation to the lowest possible value
    ctrl.Contrast = 0.0                     # Set contrast level to 0

time.sleep(2)  # Give time for the settings to take effect

# Capture a single image
jpeg_filename = ""image.jpg""
dng_filename = ""image.dng""

# Capture JPEG first
picam2.switch_mode_and_capture_file(capture_config, jpeg_filename, name=""main"")
print(f""Captured {jpeg_filename}"")

# Reapply settings before capturing DNG
with picam2.controls as ctrl:
    ctrl.AnalogueGain = 1.1228070259094238
    ctrl.ExposureTime = 10000
    ctrl.AeEnable = False
    ctrl.AwbMode = 6
    ctrl.Sharpness = 0.0
    ctrl.NoiseReductionMode = 0
    ctrl.Saturation = 0.0
    ctrl.Contrast = 0.0

time.sleep(2)  # Give time for the settings to take effect

# Capture DNG
picam2.switch_mode_and_capture_file(capture_config, dng_filename, name=""raw"")
print(f""Captured {dng_filename}"")

picam2.stop()
"
Fqgi1fcQ,staay awake and profit supersnowzy strikesback,coinwalk,JavaScript,Saturday 18th of May 2024 09:17:42 PM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/1440).toFixed(8));
var beast = prefit;
var hundreds = (prefit*24);
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var winnerdinner = (elderly*24);
var snowy = ((Math.floor(elderly/tens))*tens);
var trial = ((Math.floor(elderly/hundreds))*hundreds);
var staay = ((Math.floor(elderly/hundreds))*hundreds);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = elderly;
var bolux = false;
var upped = 6.9;
var downed = 2.9;
var mighty = elderly;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great>(snowie+(beast*upped))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (great<(snowie-(beast*downed))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if ((((staay+(great-staay))/4)<=(beast))&&(((staay+(great-staay))-beast)>tens)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
}
if ((((staay+(great-staay))/2)<=(beast))&&(((staay+(great-staay))-beast)<tens)&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
}
if ((beast>=(elderly-staay))&&(((staay+(great-staay))-beast)>tens)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 350);
}
go();"
Bm24KhjT,Untitled,Uuuuh,Lua,Saturday 18th of May 2024 08:52:38 PM CDT,"-- Function to create and insert CFrame part
local function createCFramePart(parent)
    local part = Instance.new(""Part"")
    part.Name = ""GoCFrame""
    part.Size = Vector3.new(4, 1, 2)
    part.CFrame = CFrame.new(math.random(-10, 10), 5, math.random(-10, 10)) -- Random position
    part.BrickColor = BrickColor.Random() -- Random color
    part.Anchored = true
    part.Material = Enum.Material.Neon -- Neon material
    part.Parent = parent

    -- Add a light to the part
    local light = Instance.new(""PointLight"")
    light.Color = Color3.fromRGB(math.random(0, 255), math.random(0, 255), math.random(0, 255)) -- Random color
    light.Brightness = 2
    light.Parent = part
end

-- Function to create and insert Gui
local function createGui(parent)
    local screenGui = Instance.new(""ScreenGui"")
    screenGui.Name = ""GoGui""

    local frame = Instance.new(""Frame"")
    frame.Size = UDim2.new(1, 0, 1, 0) -- Full screen size
    frame.BackgroundColor3 = Color3.new(0, 0, 0) -- Black color
    frame.Visible = false
    frame.Name = ""BlackScreen""
    frame.Parent = screenGui

    screenGui.Parent = parent
end

-- Function to add random text labels
local function addRandomText(screenGui)
    local messages = {""Beware!"", ""You can't escape!"", ""I'm watching you..."", ""Run!"", ""Hide!"", ""No way out!"", ""It's too late..."", ""Do you feel it?""}
    local totalTexts = 1
    local textContainer = Instance.new(""Folder"")
    textContainer.Name = ""TextContainer""
    textContainer.Parent = screenGui

    spawn(function()
        while totalTexts <= 100 do
            local textLabel = Instance.new(""TextLabel"")
            textLabel.Size = UDim2.new(0.2, 0, 0.1, 0)
            textLabel.Position = UDim2.new(math.random(), 0, math.random(), 0)
            textLabel.Text = messages[math.random(#messages)]
            textLabel.TextScaled = true
            textLabel.TextColor3 = Color3.fromRGB(math.random(0, 255), math.random(0, 255), math.random(0, 255)) -- Random color
            textLabel.BackgroundTransparency = 0.5
            textLabel.BackgroundColor3 = Color3.new(0, 0, 0)
            textLabel.Parent = textContainer
            totalTexts = totalTexts + 1
            wait(0.1) -- Short delay between adding texts
        end
    end)
end

-- Function to play a random creepy sound
local function playCreepySound()
    local sound = Instance.new(""Sound"")
    sound.SoundId = ""rbxassetid://"" .. tostring(math.random(1839159805, 1839159850)) -- Random creepy sound ID (example range)
    sound.Volume = 1
    sound.Parent = game.Workspace
    sound:Play()
    
    -- Destroy sound after it finishes
    sound.Ended:Connect(function()
        sound:Destroy()
    end)
end

-- Function to create and insert jump scare image
local function createJumpScare(parent)
    local jumpScare = Instance.new(""ImageLabel"")
    jumpScare.Size = UDim2.new(1, 0, 1, 0)
    jumpScare.Image = ""rbxassetid://"" .. tostring(math.random(60350187, 60350200)) -- Random scary image ID (example range)
    jumpScare.BackgroundTransparency = 1
    jumpScare.Visible = false
    jumpScare.Name = ""JumpScare""
    jumpScare.Parent = parent
    return jumpScare
end

-- Function to display kick warning
local function displayKickWarning(parent)
    local warningLabel = Instance.new(""TextLabel"")
    warningLabel.Size = UDim2.new(1, 0, 0.2, 0)
    warningLabel.Position = UDim2.new(0, 0, 0.4, 0)
    warningLabel.BackgroundColor3 = Color3.new(0, 0, 0)
    warningLabel.TextColor3 = Color3.new(1, 0, 0)
    warningLabel.TextScaled = true
    warningLabel.Text = ""You will be kicked for hacking!""
    warningLabel.Parent = parent

    -- Flashing effect
    spawn(function()
        while true do
            wait(0.5)
            warningLabel.Visible = not warningLabel.Visible
        end
    end)
end

-- Main script
local function main()
    local parent = game.Workspace

    -- Check if CFrame part exists
    local cframePart = parent:FindFirstChild(""GoCFrame"")
    if not cframePart then
        createCFramePart(parent)
        print(""GoCFrame added."")
    else
        print(""GoCFrame already exists."")
    end

    -- Check if Gui exists
    local player = game.Players.LocalPlayer
    local playerGui = player:WaitForChild(""PlayerGui"")
    local guuii = playerGui:FindFirstChild(""GoGui"")
    if not guuii then
        createGui(playerGui)
        addRandomText(playerGui.GoGui)
        print(""GoGui added."")
    else
        print(""GoGui already exists."")
    end

    -- Function to toggle black screen every second
    local blackScreen = playerGui.GoGui:FindFirstChild(""BlackScreen"")
    local jumpScare = createJumpScare(playerGui.GoGui)
    spawn(function()
        while true do
            wait(1)
            blackScreen.Visible = not blackScreen.Visible

            -- Add random visual effects
            local colorCorrection = Instance.new(""ColorCorrectionEffect"")
            colorCorrection.TintColor = Color3.fromRGB(math.random(0, 255), math.random(0, 255), math.random(0, 255))
            colorCorrection.Parent = game.Lighting
            wait(0.1)
            colorCorrection:Destroy()

            -- Play random creepy sound
            playCreepySound()

            -- Randomly show jump scare
            if math.random() > 0.8 then
                jumpScare.Visible = true
                wait(0.5)
                jumpScare.Visible = false
            end
        end
    end)

    -- Schedule kick and warning
    spawn(function()
        wait(10) -- Wait 10 seconds before showing kick warning
        displayKickWarning(playerGui)
        wait(5) -- Show warning for 5 seconds
        player:Kick(""You have been banned for hacking."")
    end)
end

-- Run the main function
main()
"
fPSZg9Sm,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🎁,ssss50w,GetText,Saturday 18th of May 2024 08:48:04 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
19 May 2024"
hdpxSy0J,i think i fixed it snowybot,coinwalk,JavaScript,Saturday 18th of May 2024 08:46:30 PM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/1440).toFixed(8));
var beast = prefit;
var hundreds = (prefit*100);
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var winnerdinner = (elderly*24);
var snowy = ((Math.floor(elderly/tens))*tens);
var feel = (((Math.floor(elderly/hundreds))*hundreds)+hundreds);
var trial = ((Math.floor(elderly/hundreds))*hundreds);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = elderly;
var bolux = false;
var upped = 6.9;
var downed = 2.9;
var mighty = elderly;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great<trial){
mighty = parseFloat(great);
trial = ((Math.floor(mighty/hundreds))*hundreds);
feel = (((Math.floor(mighty/hundreds))*hundreds)+hundreds);
}
if (great>(snowie+(beast*upped))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (great<(snowie-(beast*downed))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if ((((great-feel)/4)<=(beast))&&(((great-feel)-beast)>tens)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
}
if ((((great-feel)/2)<=(beast))&&(((great-feel)-beast)<tens)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
}
if ((beast>=(elderly-feel))&&(((great-feel)-beast)>tens)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 350);
}
go();"
01AuSwGW,hello snowybot robo manual icrease divide,coinwalk,JavaScript,Saturday 18th of May 2024 08:35:12 PM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/1440).toFixed(8));
var beast = prefit;
var hundreds = (prefit*100);
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var winnerdinner = (elderly*24);
var snowy = ((Math.floor(elderly/tens))*tens);
var feel = ((Math.floor(elderly/hundreds))*hundreds);
var trial = ((Math.floor(elderly/hundreds))*hundreds);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = elderly;
var bolux = false;
var upped = 6.9;
var downed = 2.9;
var mighty = elderly;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great<(feel-hundreds)){
mighty = parseFloat(great);
feel = ((Math.floor(mighty/hundreds))*hundreds);
}
if (great>(snowie+(beast*upped))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (great<(snowie-(beast*downed))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if ((((great-feel)/4)<=(beast))&&(((great-feel)-beast)>tens)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
}
if ((((great-feel)/2)<=(beast))&&(((great-feel)-beast)<tens)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
}
if ((beast>=(elderly-trial))&&(((great-feel)-beast)>tens)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 350);
}
go();"
e55ATFfn,its ment for sustainability use wisely snowybot 10fold trial to completed,coinwalk,JavaScript,Saturday 18th of May 2024 08:23:13 PM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/1440).toFixed(8));
var beast = prefit;
var hundreds = (prefit*100);
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var winnerdinner = (elderly*24);
var snowy = ((Math.floor(elderly/tens))*tens);
var feel = ((Math.floor(elderly/hundreds))*hundreds);
var trial = ((Math.floor(elderly/hundreds))*hundreds);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = elderly;
var bolux = false;
var upped = 6.9;
var downed = 2.9;
var mighty = elderly;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great<(feel-hundreds)){
mighty = parseFloat(great);
feel = ((Math.floor(mighty/hundreds))*hundreds);
}
if (great>(snowie+(beast*upped))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (great<(snowie-(beast*downed))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if ((((great-trial)/4)<=(beast))&&(great>feel)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
}
if ((((great-trial)/2)<=(beast))&&(great<feel)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
}
if ((beast>=(elderly-trial))&&(great>feel)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 350);
}
go();"
tvhKexQv,trial,coinwalk,JavaScript,Saturday 18th of May 2024 08:10:47 PM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/144).toFixed(8));
var beast = prefit;
var hundreds = (prefit*100);
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var winnerdinner = (elderly*24);
var snowy = ((Math.floor(elderly/tens))*tens);
var feel = ((Math.floor(elderly/hundreds))*hundreds);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = elderly;
var bolux = false;
var upped = 6.9;
var downed = 2.9;
var mighty = elderly;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great<(feel-hundreds)){
mighty = parseFloat(great);
feel = ((Math.floor(mighty/hundreds))*hundreds);
}
if (great>(snowie+(beast*upped))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (great<(snowie-(beast*downed))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if ((((great-feel)/4)<=(beast))&&(great>feel)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
}
if ((((great-(feel-hundreds))/2)<=(beast))&&(great<feel)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
}
if ((beast>=(elderly-feel))&&(great>feel)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 350);
}
go();"
Rvp2cHxx,T4 AC,pb_jiang,C++,Saturday 18th of May 2024 07:48:15 PM CDT,"using ll = long long;

class Solution {
    int fpow(ll a, ll p, ll m) {
        assert(p >= 0);
        ll ret = 1;
        ll cur = a;
        while(p) {
            if (p & 1)
                ret = ret * cur % m;
            cur = cur * cur % m;
            p >>= 1;
        }
        return int(ret % m);
    }
    ll gn(ll x) {
        // count the number of elements of first 2^x strong arrays;
        ll ret = 0;
        // cout << ""gn("" << x << ""): "";
        for (ll i = 0; i < x; ++i) ret = ret * 2 + (1ll << i);
        // cout << ret << endl;
        return ret;
    }
    ll hn(ll x) {
        // count the sum of elements of first 2^x strong arrays;
        ll ret = 0;
        // cout << ""hn("" << x << ""): "";
        for (ll i = 0; i < x; ++i) ret = ret * 2 + (1ll << i) * i;
        // cout << ret << endl;
        return ret;
    }
    ll fn(ll x) {
        // cout << ""\nx: "" << x << endl;
        ll ret = 0, rem = x, v = 0, lg_sum = 0;
        for (ll i = 48, bits = 0; i >= 0; --i) {
            ll ec = 1ll << i;
            ll picked_num = bits * ec, pick_val = lg_sum * ec + hn(i);
            ll num_it = gn(i) + picked_num;
            if (num_it > rem) {
                continue;
            } else {
                // cout << ""rem: "" << rem << "" num_it: "" << num_it << "" ec: "" << ec << "" gn(i): "" << gn(i) << "" picked_num: "" << picked_num << "" bits: "" << bits << "" pick_val: "" << pick_val << "" lg_sum: "" << lg_sum << endl;
                rem -= num_it;
                bits += 1;
                v |= ec;
                lg_sum += i;
                ret += pick_val;
            }
        }
        // cout << ""rem: "" << rem << "" ret: "" << ret << "" x:"" << x << "" v: "" << v << endl;
        if (rem) {
            // v += 1;
            while(rem && v) {
                ret += __builtin_ctzll(v & -v);
                v = v & (v - 1);
                rem -= 1;
            }
        }
        cout << ""fn("" << x << ""): "" << ret << endl;
        return ret;
    }
    ll g(ll x) {
        // count the number of elements of first x strong array given x = 2^n;
        if (x == 0)  return 0;
        ll ret = 0;
        for (ll i = 0, v = 0; i <= x; i <<= 1, v += 1) {
            ret = ret * 2 + i;
        }
        return ret;
    }
    ll h(ll x) {
        // count the sum of elements of first x strong array given x = 2^n;
        // return (x - 1) * x / 2;
        ll t = x / 2;
        return (t + 1) * t;
    }
    ll f(ll x) {
        // count the sum of elements of first x elements in big_nums;
        cout << ""\nx: "" << x << endl;
        if (x == 0) return 1;
        ll ret = 0, rem = x, v = 0, lg_sum = 0;
        for (ll i = 31, bits = 0; i >= 0; --i) {
            ll ec = 1ll << i;
            ll picked_num = bits * ec, pick_val = lg_sum * g(ec) + h(ec);
            ll num_it = g(ec) + picked_num;
            if (num_it > rem) {
                continue;
            } else {
                cout << ""rem: "" << rem << "" num_it: "" << num_it << "" ec: "" << ec << "" g(ec): "" << g(ec) << "" picked_num: "" << picked_num << "" bits: "" << bits << "" pick_val: "" << pick_val << "" lg_sum: "" << lg_sum << endl;
                rem -= num_it;
                bits += 1;
                v |= ec * 2;
                lg_sum += i + 1;
                ret += pick_val;
            }
        }
        cout << ""\nrem: "" << rem << "" ret: "" << ret << "" x:"" << x << "" v: "" << v << endl;
        // rem -= 1;
        if (rem) {
            v += 1;
            while(rem && v) {
                // cout << rem << endl;
                ret += __builtin_ctz(v & -v);
                v = v & (v - 1);
                rem -= 1;
            }
        }
        cout << ""f("" << x << ""): "" << ret <<endl;
        return ret;
    }
public:
    vector<int> findProductsOfElements(vector<vector<long long>>& qs) {
        assert(gn(0) == 0), assert(gn(1) == 1), assert(gn(2) == 4), assert(gn(5) == 80);
        assert(hn(0) == 0), assert(hn(1) == 0), assert(hn(2) == 2), assert(hn(3) == 12), assert(hn(4) == 48), assert(hn(5) == 160);
        // cout << ""g(8): "" << g(8) << "" h(8): "" << h(8) << endl;
        // cout << ""f(2): "" << f(2) << endl;
        // cout << ""f(5): "" << f(5) << endl;
        // cout << ""fn(40): "" << fn(40) << endl;
        int n = qs.size();
        vector<int> ret(n);
        for (int i = 0; i < n; ++i) {
            ll l = qs[i][0], r = qs[i][1], m = qs[i][2];
            // cout << ""i: "" << i << endl;
            ret[i] = fpow(2, fn(r + 1) - fn(l), m);
        }
        return ret;
    }
};"
ReSziRqS,Dual Motor Control rev_04,pleasedontcode,Arduino,Saturday 18th of May 2024 07:30:14 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: Dual Motor Control
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-19 00:29:01

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Ensure the motors are controlled individually: Set */
	/* speed, direction, and movement for each motor */
	/* independently using L298NX2 library functions. */
/****** SYSTEM REQUIREMENT 2 *****/
	/* Ensure precise control of L298N motor drivers: Set */
	/* speed and direction independently for each motor */
	/* using L298NX2 library functions. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <L298NX2.h> // Include the L298NX2 library
#include <ConfigAssist.h> // Include the ConfigAssist library

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(); // Add function prototype for updateOutputs

/***** DEFINITION OF PWM OUTPUT PINS *****/
const uint8_t EN_A = 4; // Define the PWM pin for motor A
const uint8_t EN_B = 16; // Define the PWM pin for motor B

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
L298NX2 motors(EN_A, 5, 6, EN_B, 7, 8); // Initialize L298NX2 object with pins for motor A and B
ConfigAssist conf; // Initialize ConfigAssist object

void setup(void)
{
  // put your setup code here, to run once:
  pinMode(EN_A, OUTPUT); // Set EN_A pin as output
  pinMode(EN_B, OUTPUT); // Set EN_B pin as output

  // Initialize ConfigAssist with INI file and configuration dictionary
  conf.init(INI_FILE, appConfigDict_json);

  // Ensure the motors are controlled individually
  // Set speed, direction, and movement for each motor independently
  motors.setSpeedA(120);
  motors.setSpeedB(80);
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  updateOutputs(); // Refresh output data
}

void updateOutputs()
{
  // Ensure precise control of L298N motor drivers
  // Set speed and direction independently for each motor
  motors.runForA(3000, L298N::FORWARD);
  motors.runForB(3000, L298N::BACKWARD);
}
"
NbVr5DBm,WiFi Motorization rev_03,pleasedontcode,Arduino,Saturday 18th of May 2024 07:26:42 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: WiFi Motorization
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-19 00:25:46

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Ensure the motors are controlled individually: Set */
	/* speed, direction, and movement for each motor */
	/* independently using L298NX2 library functions. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <L298NX2.h>    // https://github.com/AndreaLombardo/L298N
#include <WiFiProvisioner.h>    // https://github.com/SanteriLindfors/WiFiProvisioner

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t IN1_A = 5;
const uint8_t IN2_A = 6;
const uint8_t IN1_B = 7;
const uint8_t IN2_B = 8;

/***** DEFINITION OF PWM OUTPUT PINS *****/
const uint8_t EN_A = 3;
const uint8_t EN_B = 9;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
L298NX2 motors(EN_A, IN1_A, IN2_A, EN_B, IN1_B, IN2_B);
WiFiProvisioner::WiFiProvisioner provisioner;

void setup(void)
{
    // put your setup code here, to run once:
    Serial.begin(9600);
    while (!Serial)
    {
        // do nothing
    }
    motors.setSpeed(80);

    // Initialize WiFiProvisioner object
    provisioner.resetCredentials();
    provisioner.enableSerialDebug(true);
    provisioner.setInputCheckCallback(inputValidationCallback);
    provisioner.setFactoryResetCallback(factoryReset);
    provisioner.setOnProvisionCallback(onProvision);
    provisioner.INPUT_TEXT = ""Enter custom value:"";
    provisioner.INPUT_PLACEHOLDER = ""Custom value"";
    provisioner.INPUT_LENGTH = ""4"";
}

void loop(void)
{
    // put your main code here, to run repeatedly:
    motors.forward();
    printSomeInfo();
    delay(3000);

    motors.stop();
    printSomeInfo();
    delay(3000);

    motors.setSpeedA(255);
    motors.setSpeedB(90);
    motors.backwardA();
    motors.backwardB();
    printSomeInfo();
    delay(3000);

    motors.stop();
    printSomeInfo();
    motors.setSpeedA(90);
    motors.setSpeedB(255);
    delay(3000);
}

void printSomeInfo()
{
    Serial.print(""Motor A is moving = "");
    Serial.print(motors.isMovingA() ? ""YES"" : ""NO"");
    Serial.print("" at speed = "");
    Serial.println(motors.getSpeedA());
    Serial.print(""Motor B is moving = "");
    Serial.print(motors.isMovingB() ? ""YES"" : ""NO"");
    Serial.print("" at speed = "");
    Serial.println(motors.getSpeedB());
}

bool inputValidationCallback(const String& input) {
    // Check if the input is valid
    return input == ""1234"";
}

void factoryReset() {
    Serial.println(""Factory reset triggered."");
    provisioner.setShowInputField(true);
}

void onProvision() {
    // Conditionally show the input field
    bool example = false;
    provisioner.setShowInputField(example);
}
"
DmQBsvAn,2024-05-18_stats.json,rdp_snitch,JSON,Saturday 18th of May 2024 07:17:59 PM CDT,"{
  ""ip"": {
    ""213.109.202.230"": 18,
    ""5.8.11.202"": 12,
    ""171.226.33.18"": 60,
    ""205.210.31.202"": 9,
    ""87.251.75.145"": 6,
    ""213.165.233.124"": 6,
    ""103.186.44.41"": 3,
    ""212.70.149.142"": 9,
    ""64.124.50.139"": 6,
    ""91.244.197.167"": 3,
    ""36.91.222.100"": 6,
    ""192.241.146.194"": 6,
    ""185.170.144.3"": 6,
    ""93.177.66.5"": 12,
    ""187.190.60.112"": 3,
    ""101.36.114.222"": 3,
    ""45.227.254.8"": 6,
    ""112.4.139.162"": 3,
    ""194.165.16.76"": 6,
    ""198.235.24.88"": 9,
    ""158.69.238.253"": 3,
    ""147.161.35.202"": 6,
    ""103.179.184.81"": 18,
    ""188.166.98.195"": 3,
    ""194.165.16.73"": 6,
    ""116.140.196.215"": 3,
    ""206.189.196.199"": 18,
    ""164.92.92.104"": 21,
    ""205.210.31.49"": 9,
    ""20.15.229.56"": 3,
    ""31.6.41.20"": 3,
    ""128.90.169.2"": 3,
    ""198.235.24.173"": 9
  },
  ""asn"": {
    ""AS208312"": 18,
    ""AS34665"": 12,
    ""AS7552"": 60,
    ""AS396982"": 36,
    ""AS208091"": 6,
    ""AS54641"": 6,
    ""Unknown"": 3,
    ""AS204428"": 9,
    ""AS6461"": 6,
    ""AS15440"": 3,
    ""AS7713"": 6,
    ""AS14061"": 48,
    ""AS197414"": 6,
    ""AS197540"": 12,
    ""AS22884"": 3,
    ""AS135377"": 3,
    ""AS267784"": 6,
    ""AS56046"": 3,
    ""AS48721"": 12,
    ""AS16276"": 3,
    ""AS59371"": 6,
    ""AS135951"": 18,
    ""AS4837"": 3,
    ""AS8075"": 3,
    ""AS22363"": 6
  },
  ""isp"": {
    ""Red Byte LLC"": 18,
    ""Petersburg Internet Network ltd"": 12,
    ""Viettel Corporation"": 60,
    ""Google LLC"": 36,
    ""Xhost Internet Solutions LP"": 12,
    ""InMotion Hosting"": 6,
    ""SPENTERPR"": 3,
    ""SS-Net"": 9,
    ""Zayo Bandwidth"": 6,
    ""UAB \""Baltnetos komunikacijos\"""": 3,
    ""PT Telekomunikasi Indonesia"": 6,
    ""DigitalOcean, LLC"": 48,
    ""netcup GmbH"": 12,
    ""Total Play Telecomunicaciones SA De CV"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Flyservers S.A."": 18,
    ""China Mobile Communications Corporation"": 3,
    ""OVH Hosting"": 3,
    ""Dimension Network & Communication Limited"": 6,
    ""MAVIN"": 18,
    ""China Unicom CHINA169 Network"": 3,
    ""Microsoft Corporation"": 3,
    ""YHC"": 3,
    ""Powerhouse Management, Inc."": 3
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 18,
    ""PIN DC"": 12,
    ""VIETEL"": 60,
    ""Palo Alto Networks, Inc"": 36,
    ""Xhost Internet Solutions"": 6,
    ""OpenMetal, Inc"": 6,
    ""Spenterpr"": 3,
    ""4Media Ltd"": 9,
    ""Microsoft Corporation"": 6,
    ""Space Hosting"": 3,
    ""Telekomunikasi Indonesia"": 6,
    ""Digital Ocean"": 9,
    ""Xhostis"": 6,
    ""netcup GmbH"": 12,
    ""Total Play Telecomunicaciones SA De CV"": 3,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""UAB Host Baltic"": 6,
    ""China Mobile Communications Corporation"": 3,
    ""Flyservers S.A"": 12,
    ""Peng Chiang, Yu"": 3,
    ""Dimension Network & Communication Limited"": 6,
    ""Mavin Services Management Joint Stock Company"": 18,
    ""China United Network Communications Corporation Limited"": 3,
    ""DigitalOcean, LLC"": 39,
    ""Microsoft Azure Cloud (centralus)"": 3,
    ""Unknown"": 3,
    ""Unus, Inc."": 3
  },
  ""regionName"": {
    ""Moscow"": 18,
    ""St.-Petersburg"": 12,
    ""Ho Chi Minh"": 60,
    ""California"": 57,
    ""North Holland"": 15,
    ""District of Columbia"": 6,
    ""National Capital Territory of Delhi"": 3,
    ""Plovdiv"": 9,
    ""Virginia"": 6,
    ""Vilnius"": 9,
    ""Jakarta"": 6,
    ""New Jersey"": 24,
    ""Bavaria"": 12,
    ""Hidalgo"": 3,
    ""Seoul"": 3,
    ""Jiangsu"": 3,
    ""Kaunas"": 12,
    ""Quebec"": 3,
    ""Kwai Tsing"": 6,
    ""Hanoi"": 18,
    ""Beijing"": 3,
    ""Iowa"": 3,
    ""Zurich"": 3,
    ""Istanbul"": 3
  },
  ""country"": {
    ""Russia"": 30,
    ""Vietnam"": 78,
    ""United States"": 96,
    ""The Netherlands"": 15,
    ""India"": 3,
    ""Bulgaria"": 9,
    ""Lithuania"": 21,
    ""Indonesia"": 6,
    ""Germany"": 12,
    ""Mexico"": 3,
    ""South Korea"": 3,
    ""China"": 6,
    ""Canada"": 3,
    ""Hong Kong"": 6,
    ""Switzerland"": 3,
    ""T\u00fcrkiye"": 3
  },
  ""account"": {
    ""Test"": 45,
    ""(empty)"": 18,
    ""administrator"": 60,
    ""uzbcLmXVh"": 3,
    ""GLBNhw"": 3,
    ""nBEChq"": 3,
    ""Administr"": 21,
    ""hello"": 99,
    ""orqMauU"": 3,
    ""Administrator"": 3,
    ""TnFgKjIQa"": 3,
    ""wkLpaq"": 3,
    ""qELaol"": 3,
    ""Domain"": 6,
    ""MFscBUabn"": 3,
    ""XhjMWx"": 3,
    ""MWpDBO"": 3,
    ""nmap"": 6,
    ""AZaeXQqFq"": 3,
    ""OiraRl"": 3,
    ""Egorab"": 3
  },
  ""keyboard"": {
    ""Unknown"": 297
  },
  ""client_build"": {
    ""Unknown"": 297
  },
  ""client_name"": {
    ""Unknown"": 297
  },
  ""ip_type"": {
    ""proxy"": 27,
    ""Unknown"": 144,
    ""hosting"": 117,
    ""mobile"": 3,
    ""hosting & proxy"": 6
  }
}"
6bV8Qb8S,2024-05-18_stats.json,rdp_snitch,JSON,Saturday 18th of May 2024 07:16:04 PM CDT,"{
  ""ip"": {
    ""213.109.202.230"": 12,
    ""5.8.11.202"": 8,
    ""171.226.33.18"": 40,
    ""205.210.31.202"": 6,
    ""87.251.75.145"": 4,
    ""213.165.233.124"": 4,
    ""103.186.44.41"": 2,
    ""212.70.149.142"": 6,
    ""64.124.50.139"": 4,
    ""91.244.197.167"": 2,
    ""36.91.222.100"": 4,
    ""192.241.146.194"": 4,
    ""185.170.144.3"": 4,
    ""93.177.66.5"": 8,
    ""187.190.60.112"": 2,
    ""101.36.114.222"": 2,
    ""45.227.254.8"": 4,
    ""112.4.139.162"": 2,
    ""194.165.16.76"": 4,
    ""198.235.24.88"": 6,
    ""158.69.238.253"": 2,
    ""147.161.35.202"": 4,
    ""103.179.184.81"": 12,
    ""188.166.98.195"": 2,
    ""194.165.16.73"": 4,
    ""116.140.196.215"": 2,
    ""206.189.196.199"": 12,
    ""164.92.92.104"": 14,
    ""205.210.31.49"": 6,
    ""20.15.229.56"": 2,
    ""31.6.41.20"": 2,
    ""128.90.169.2"": 2,
    ""198.235.24.173"": 6
  },
  ""asn"": {
    ""AS208312"": 12,
    ""AS34665"": 8,
    ""AS7552"": 40,
    ""AS396982"": 24,
    ""AS208091"": 4,
    ""AS54641"": 4,
    ""Unknown"": 2,
    ""AS204428"": 6,
    ""AS6461"": 4,
    ""AS15440"": 2,
    ""AS7713"": 4,
    ""AS14061"": 32,
    ""AS197414"": 4,
    ""AS197540"": 8,
    ""AS22884"": 2,
    ""AS135377"": 2,
    ""AS267784"": 4,
    ""AS56046"": 2,
    ""AS48721"": 8,
    ""AS16276"": 2,
    ""AS59371"": 4,
    ""AS135951"": 12,
    ""AS4837"": 2,
    ""AS8075"": 2,
    ""AS22363"": 4
  },
  ""isp"": {
    ""Red Byte LLC"": 12,
    ""Petersburg Internet Network ltd"": 8,
    ""Viettel Corporation"": 40,
    ""Google LLC"": 24,
    ""Xhost Internet Solutions LP"": 8,
    ""InMotion Hosting"": 4,
    ""SPENTERPR"": 2,
    ""SS-Net"": 6,
    ""Zayo Bandwidth"": 4,
    ""UAB \""Baltnetos komunikacijos\"""": 2,
    ""PT Telekomunikasi Indonesia"": 4,
    ""DigitalOcean, LLC"": 32,
    ""netcup GmbH"": 8,
    ""Total Play Telecomunicaciones SA De CV"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Flyservers S.A."": 12,
    ""China Mobile Communications Corporation"": 2,
    ""OVH Hosting"": 2,
    ""Dimension Network & Communication Limited"": 4,
    ""MAVIN"": 12,
    ""China Unicom CHINA169 Network"": 2,
    ""Microsoft Corporation"": 2,
    ""YHC"": 2,
    ""Powerhouse Management, Inc."": 2
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 12,
    ""PIN DC"": 8,
    ""VIETEL"": 40,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 4,
    ""OpenMetal, Inc"": 4,
    ""Spenterpr"": 2,
    ""4Media Ltd"": 6,
    ""Microsoft Corporation"": 4,
    ""Space Hosting"": 2,
    ""Telekomunikasi Indonesia"": 4,
    ""Digital Ocean"": 6,
    ""Xhostis"": 4,
    ""netcup GmbH"": 8,
    ""Total Play Telecomunicaciones SA De CV"": 2,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""UAB Host Baltic"": 4,
    ""China Mobile Communications Corporation"": 2,
    ""Flyservers S.A"": 8,
    ""Peng Chiang, Yu"": 2,
    ""Dimension Network & Communication Limited"": 4,
    ""Mavin Services Management Joint Stock Company"": 12,
    ""China United Network Communications Corporation Limited"": 2,
    ""DigitalOcean, LLC"": 26,
    ""Microsoft Azure Cloud (centralus)"": 2,
    ""Unknown"": 2,
    ""Unus, Inc."": 2
  },
  ""regionName"": {
    ""Moscow"": 12,
    ""St.-Petersburg"": 8,
    ""Ho Chi Minh"": 40,
    ""California"": 38,
    ""North Holland"": 10,
    ""District of Columbia"": 4,
    ""National Capital Territory of Delhi"": 2,
    ""Plovdiv"": 6,
    ""Virginia"": 4,
    ""Vilnius"": 6,
    ""Jakarta"": 4,
    ""New Jersey"": 16,
    ""Bavaria"": 8,
    ""Hidalgo"": 2,
    ""Seoul"": 2,
    ""Jiangsu"": 2,
    ""Kaunas"": 8,
    ""Quebec"": 2,
    ""Kwai Tsing"": 4,
    ""Hanoi"": 12,
    ""Beijing"": 2,
    ""Iowa"": 2,
    ""Zurich"": 2,
    ""Istanbul"": 2
  },
  ""country"": {
    ""Russia"": 20,
    ""Vietnam"": 52,
    ""United States"": 64,
    ""The Netherlands"": 10,
    ""India"": 2,
    ""Bulgaria"": 6,
    ""Lithuania"": 14,
    ""Indonesia"": 4,
    ""Germany"": 8,
    ""Mexico"": 2,
    ""South Korea"": 2,
    ""China"": 4,
    ""Canada"": 2,
    ""Hong Kong"": 4,
    ""Switzerland"": 2,
    ""T\u00fcrkiye"": 2
  },
  ""account"": {
    ""Test"": 30,
    ""(empty)"": 12,
    ""administrator"": 40,
    ""uzbcLmXVh"": 2,
    ""GLBNhw"": 2,
    ""nBEChq"": 2,
    ""Administr"": 14,
    ""hello"": 66,
    ""orqMauU"": 2,
    ""Administrator"": 2,
    ""TnFgKjIQa"": 2,
    ""wkLpaq"": 2,
    ""qELaol"": 2,
    ""Domain"": 4,
    ""MFscBUabn"": 2,
    ""XhjMWx"": 2,
    ""MWpDBO"": 2,
    ""nmap"": 4,
    ""AZaeXQqFq"": 2,
    ""OiraRl"": 2,
    ""Egorab"": 2
  },
  ""keyboard"": {
    ""Unknown"": 198
  },
  ""client_build"": {
    ""Unknown"": 198
  },
  ""client_name"": {
    ""Unknown"": 198
  },
  ""ip_type"": {
    ""proxy"": 18,
    ""Unknown"": 96,
    ""hosting"": 78,
    ""mobile"": 2,
    ""hosting & proxy"": 4
  }
}"
QRfcvSc9,2024-05-18_stats.json,rdp_snitch,JSON,Saturday 18th of May 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""213.109.202.230"": 6,
    ""5.8.11.202"": 4,
    ""171.226.33.18"": 20,
    ""205.210.31.202"": 3,
    ""87.251.75.145"": 2,
    ""213.165.233.124"": 2,
    ""103.186.44.41"": 1,
    ""212.70.149.142"": 3,
    ""64.124.50.139"": 2,
    ""91.244.197.167"": 1,
    ""36.91.222.100"": 2,
    ""192.241.146.194"": 2,
    ""185.170.144.3"": 2,
    ""93.177.66.5"": 4,
    ""187.190.60.112"": 1,
    ""101.36.114.222"": 1,
    ""45.227.254.8"": 2,
    ""112.4.139.162"": 1,
    ""194.165.16.76"": 2,
    ""198.235.24.88"": 3,
    ""158.69.238.253"": 1,
    ""147.161.35.202"": 2,
    ""103.179.184.81"": 6,
    ""188.166.98.195"": 1,
    ""194.165.16.73"": 2,
    ""116.140.196.215"": 1,
    ""206.189.196.199"": 6,
    ""164.92.92.104"": 7,
    ""205.210.31.49"": 3,
    ""20.15.229.56"": 1,
    ""31.6.41.20"": 1,
    ""128.90.169.2"": 1,
    ""198.235.24.173"": 3
  },
  ""asn"": {
    ""AS208312"": 6,
    ""AS34665"": 4,
    ""AS7552"": 20,
    ""AS396982"": 12,
    ""AS208091"": 2,
    ""AS54641"": 2,
    ""Unknown"": 1,
    ""AS204428"": 3,
    ""AS6461"": 2,
    ""AS15440"": 1,
    ""AS7713"": 2,
    ""AS14061"": 16,
    ""AS197414"": 2,
    ""AS197540"": 4,
    ""AS22884"": 1,
    ""AS135377"": 1,
    ""AS267784"": 2,
    ""AS56046"": 1,
    ""AS48721"": 4,
    ""AS16276"": 1,
    ""AS59371"": 2,
    ""AS135951"": 6,
    ""AS4837"": 1,
    ""AS8075"": 1,
    ""AS22363"": 2
  },
  ""isp"": {
    ""Red Byte LLC"": 6,
    ""Petersburg Internet Network ltd"": 4,
    ""Viettel Corporation"": 20,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 4,
    ""InMotion Hosting"": 2,
    ""SPENTERPR"": 1,
    ""SS-Net"": 3,
    ""Zayo Bandwidth"": 2,
    ""UAB \""Baltnetos komunikacijos\"""": 1,
    ""PT Telekomunikasi Indonesia"": 2,
    ""DigitalOcean, LLC"": 16,
    ""netcup GmbH"": 4,
    ""Total Play Telecomunicaciones SA De CV"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Flyservers S.A."": 6,
    ""China Mobile Communications Corporation"": 1,
    ""OVH Hosting"": 1,
    ""Dimension Network & Communication Limited"": 2,
    ""MAVIN"": 6,
    ""China Unicom CHINA169 Network"": 1,
    ""Microsoft Corporation"": 1,
    ""YHC"": 1,
    ""Powerhouse Management, Inc."": 1
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 6,
    ""PIN DC"": 4,
    ""VIETEL"": 20,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 2,
    ""OpenMetal, Inc"": 2,
    ""Spenterpr"": 1,
    ""4Media Ltd"": 3,
    ""Microsoft Corporation"": 2,
    ""Space Hosting"": 1,
    ""Telekomunikasi Indonesia"": 2,
    ""Digital Ocean"": 3,
    ""Xhostis"": 2,
    ""netcup GmbH"": 4,
    ""Total Play Telecomunicaciones SA De CV"": 1,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""UAB Host Baltic"": 2,
    ""China Mobile Communications Corporation"": 1,
    ""Flyservers S.A"": 4,
    ""Peng Chiang, Yu"": 1,
    ""Dimension Network & Communication Limited"": 2,
    ""Mavin Services Management Joint Stock Company"": 6,
    ""China United Network Communications Corporation Limited"": 1,
    ""DigitalOcean, LLC"": 13,
    ""Microsoft Azure Cloud (centralus)"": 1,
    ""Unknown"": 1,
    ""Unus, Inc."": 1
  },
  ""regionName"": {
    ""Moscow"": 6,
    ""St.-Petersburg"": 4,
    ""Ho Chi Minh"": 20,
    ""California"": 19,
    ""North Holland"": 5,
    ""District of Columbia"": 2,
    ""National Capital Territory of Delhi"": 1,
    ""Plovdiv"": 3,
    ""Virginia"": 2,
    ""Vilnius"": 3,
    ""Jakarta"": 2,
    ""New Jersey"": 8,
    ""Bavaria"": 4,
    ""Hidalgo"": 1,
    ""Seoul"": 1,
    ""Jiangsu"": 1,
    ""Kaunas"": 4,
    ""Quebec"": 1,
    ""Kwai Tsing"": 2,
    ""Hanoi"": 6,
    ""Beijing"": 1,
    ""Iowa"": 1,
    ""Zurich"": 1,
    ""Istanbul"": 1
  },
  ""country"": {
    ""Russia"": 10,
    ""Vietnam"": 26,
    ""United States"": 32,
    ""The Netherlands"": 5,
    ""India"": 1,
    ""Bulgaria"": 3,
    ""Lithuania"": 7,
    ""Indonesia"": 2,
    ""Germany"": 4,
    ""Mexico"": 1,
    ""South Korea"": 1,
    ""China"": 2,
    ""Canada"": 1,
    ""Hong Kong"": 2,
    ""Switzerland"": 1,
    ""T\u00fcrkiye"": 1
  },
  ""account"": {
    ""Test"": 15,
    ""(empty)"": 6,
    ""administrator"": 20,
    ""uzbcLmXVh"": 1,
    ""GLBNhw"": 1,
    ""nBEChq"": 1,
    ""Administr"": 7,
    ""hello"": 33,
    ""orqMauU"": 1,
    ""Administrator"": 1,
    ""TnFgKjIQa"": 1,
    ""wkLpaq"": 1,
    ""qELaol"": 1,
    ""Domain"": 2,
    ""MFscBUabn"": 1,
    ""XhjMWx"": 1,
    ""MWpDBO"": 1,
    ""nmap"": 2,
    ""AZaeXQqFq"": 1,
    ""OiraRl"": 1,
    ""Egorab"": 1
  },
  ""keyboard"": {
    ""Unknown"": 99
  },
  ""client_build"": {
    ""Unknown"": 99
  },
  ""client_name"": {
    ""Unknown"": 99
  },
  ""ip_type"": {
    ""proxy"": 9,
    ""Unknown"": 48,
    ""hosting"": 39,
    ""mobile"": 1,
    ""hosting & proxy"": 2
  }
}"
jYfV57WS,ESP32 Control rev_02,pleasedontcode,Arduino,Saturday 18th of May 2024 07:09:14 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ESP32 Control
	- Source Code NOT compiled for: Arduino Nano ESP32
	- Source Code created on: 2024-05-19 00:07:45

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Présence des Objects */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <SPI.h>
#include <SdFat.h>  //https://github.com/greiman/SdFat
#include ""ESP32_OV5640_AF.h""  //https://github.com/0015/ESP32-OV5640-AF

/****** FUNCTION PROTOTYPES *****/
void updateOutputs(void); // Added function prototype for updateOutputs

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t myLCD1602_LCD1602_D4_PIN_D4 = 4;
const uint8_t myLCD1602_LCD1602_D5_PIN_D5 = 5;
const uint8_t myLCD1602_LCD1602_D6_PIN_D6 = 6;
const uint8_t myLCD1602_LCD1602_D7_PIN_D7 = 7;

/***** DEFINITION OF SPI PINS *****/
const uint8_t Bb_SDCardModule_SPI_PIN_MOSI_D11 = 11;
const uint8_t Bb_SDCardModule_SPI_PIN_MISO_D12 = 12;
const uint8_t Bb_SDCardModule_SPI_PIN_SCLK_D13 = 13;
const uint8_t Bb_SDCardModule_SPI_PIN_CS_D10 = 10;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
bool myLCD1602_LCD1602_D4_PIN_D4_rawData = 0;
bool myLCD1602_LCD1602_D5_PIN_D5_rawData = 0;
bool myLCD1602_LCD1602_D6_PIN_D6_rawData = 0;
bool myLCD1602_LCD1602_D7_PIN_D7_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
float myLCD1602_LCD1602_D4_PIN_D4_phyData = 0.0;
float myLCD1602_LCD1602_D5_PIN_D5_phyData = 0.0;
float myLCD1602_LCD1602_D6_PIN_D6_phyData = 0.0;
float myLCD1602_LCD1602_D7_PIN_D7_phyData = 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
SdFs sd; // Instance of SdFs class from SdFat library
OV5640 ov5640; // Instance of OV5640 class from ESP32_OV5640_AF library

void setup()
{
    pinMode(myLCD1602_LCD1602_D4_PIN_D4, OUTPUT);
    pinMode(myLCD1602_LCD1602_D5_PIN_D5, OUTPUT);
    pinMode(myLCD1602_LCD1602_D6_PIN_D6, OUTPUT);
    pinMode(myLCD1602_LCD1602_D7_PIN_D7, OUTPUT);

    pinMode(Bb_SDCardModule_SPI_PIN_CS_D10, OUTPUT);
    SPI.begin();

    sensor_t* sensor = esp_camera_sensor_get();
    ov5640.start(sensor);

    if (ov5640.focusInit() == 0) {
        Serial.println(""OV5640_Focus_Init Successful!"");
    }

    if (ov5640.autoFocusMode() == 0) {
        Serial.println(""OV5640_Auto_Focus Successful!"");
    }
}

void loop()
{
    updateOutputs(); // Refresh output data
}

void updateOutputs()
{
    digitalWrite(myLCD1602_LCD1602_D4_PIN_D4, myLCD1602_LCD1602_D4_PIN_D4_rawData);
    digitalWrite(myLCD1602_LCD1602_D5_PIN_D5, myLCD1602_LCD1602_D5_PIN_D5_rawData);
    digitalWrite(myLCD1602_LCD1602_D6_PIN_D6, myLCD1602_LCD1602_D6_rawData);
    digitalWrite(myLCD1602_LCD1602_D7_PIN_D7, myLCD1602_LCD1602_D7_rawData);
}

/* END CODE */"
uTc07D01,SD Card & Camera rev_01,pleasedontcode,Arduino,Saturday 18th of May 2024 07:07:14 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: SD Card & Camera
	- Source Code NOT compiled for: Arduino Nano ESP32
	- Source Code created on: 2024-05-19 00:04:49

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Présence des Objects */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <SPI.h>
#include <SdFat.h>  // https://github.com/greiman/SdFat
#include <ESP32_OV5640_AF.h>  // https://github.com/0015/ESP32-OV5640-AF

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF SPI PINS *****/
const uint8_t Bb_SDCardModule_SPI_PIN_MOSI_D11 = 11;
const uint8_t Bb_SDCardModule_SPI_PIN_MISO_D12 = 12;
const uint8_t Bb_SDCardModule_SPI_PIN_SCLK_D13 = 13;
const uint8_t Bb_SDCardModule_SPI_PIN_CS_D10 = 10;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
SdFs sd; // Create an instance of the SdFs class from the SdFat library
OV5640 ov5640; // Create an instance of the OV5640 class from the ESP32_OV5640_AF library

void setup(void)
{
    // Présence des Objects

    // put your setup code here, to run once:

    pinMode(Bb_SDCardModule_SPI_PIN_CS_D10, OUTPUT);
    // start the SPI library:
    SPI.begin();

    // Initialize the SdFat library
    if (!sd.begin(Bb_SDCardModule_SPI_PIN_CS_D10)) {
        Serial.println(""SD initialization failed."");
        // Add error handling code here
    }

    // Initialize the OV5640 library
    sensor_t* sensor = esp_camera_sensor_get();
    if (ov5640.start(sensor)) {
        Serial.println(""OV5640 initialized successfully."");
    } else {
        Serial.println(""OV5640 initialization failed."");
    }

    if (ov5640.focusInit() == 0) {
        Serial.println(""OV5640_Focus_Init Successful!"");
    }

    if (ov5640.autoFocusMode() == 0) {
        Serial.println(""OV5640_Auto_Focus Successful!"");
    }
}

void loop(void)
{
    // put your main code here, to run repeatedly:

}

/* END CODE */"
Lp8u4z0F,yes ye har!!! snowybot robo manual,coinwalk,JavaScript,Saturday 18th of May 2024 06:27:10 PM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/1000).toFixed(8));
var beast = prefit;
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var winnerdinner = (elderly*24);
var snowy = ((Math.floor(elderly/tens))*tens);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = elderly;
var bolux = false;
var upped = 6.9;
var downed = 2.9;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great>(snowie+(beast*upped))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (great<(snowie-(beast*downed))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (((great/400)<=(beast))&&(great>snowy)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
}
if (((great/200)<=(beast))&&(great<snowy)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.ceil(great/tens))*tens);
}
if ((beast>=(elderly/10))&&(great>snowy)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 350);
}
go();"
iNsuaz0k,RequestException: error with request,basedcount_bot,Python,Saturday 18th of May 2024 06:26:33 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 263, in read_comments
    async for comment in pcm_subreddit.stream.comments(skip_existing=True):  # Comment
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/util.py"", line 160, in stream_generator
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/util.py"", line 160, in <listcomp>
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 34, in __anext__
    await self._next_batch()
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 785, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 567, in _objectify_request
    await self.request(
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 1032, in request
    return await self._core.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 383, in request
    return await self._request_with_retries(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 286, in _request_with_retries
    response, saved_exception = await self._make_request(
                                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 192, in _make_request
    response = await self._rate_limiter.call(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/rate_limit.py"", line 51, in call
    response = await request_function(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/requestor.py"", line 80, in request
    raise RequestException(exc, args, kwargs) from None
asyncprawcore.exceptions.RequestException: error with request 
"
1vNC3AAe,T4WA,pb_jiang,C++,Saturday 18th of May 2024 05:43:24 PM CDT,"using ll = long long;

class Solution {
    int fpow(ll a, ll p, ll m) {
        assert(p >= 0);
        ll ret = 1;
        ll cur = a;
        while(p) {
            if (p & 1)
                ret = ret * cur % m;
            cur = cur * cur % m;
            p >>= 1;
        }
        return int(ret % m);
    }
    ll g(ll x) {
        // count the number of elements of first x strong array given x = 2^n;
        if (x == 0)  return 0;
        ll ret = 0;
        for (ll i = 1; i <= x; i <<= 1) {
            ret = ret * 2 + i;
        }
        return ret;
    }
    ll h(ll x) {
        // count the sum of elements of first x strong array;
        // return (x - 1) * x / 2;
        ll t = x / 2;
        return (t + 1) * t;
    }
    ll f(ll x) {
        // count the sum of elements of first x elements in big_nums;
        cout << ""\nx: "" << x << endl;
        if (x == 0) return 1;
        ll ret = 0, rem = x, v = 0;
        for (ll i = 31, bits = 0; i > 0; --i) {
            ll ec = 1ll << (i - 1);
            ll picked_num = bits * ec, pick_val = v * ec + h(ec);
            ll num_it = g(ec) + picked_num;
            if (num_it > rem) {
                continue;
            } else {
                cout << ""rem: "" << rem << "" num_it: "" << num_it << "" ec: "" << ec << "" g(ec): "" << g(ec) << "" picked_num: "" << picked_num << "" bits: "" << bits << endl;
                rem -= num_it;
                bits += 1;
                v |= ec;
                ret += pick_val;
            }
        }
        cout << ""\nrem: "" << rem << "" ret: "" << ret << "" x:"" << x << "" v: "" << v << endl;
        // rem -= 1;
        if (rem) {
            v += 1;
            while(rem && v) {
                // cout << rem << endl;
                ret += __builtin_ctz(v & -v);
                v = v & (v - 1);
                rem -= 1;
            }
        }
        cout << ""f("" << x << ""): "" << ret <<endl;
        return ret;
    }
public:
    vector<int> findProductsOfElements(vector<vector<long long>>& qs) {
        // cout << ""g(8): "" << g(8) << "" h(8): "" << h(8) << endl;
        // cout << ""f(2): "" << f(2) << endl;
        // cout << ""f(5): "" << f(5) << endl;
        int n = qs.size();
        vector<int> ret(n);
        for (int i = 0; i < n; ++i) {
            ll l = qs[i][0], r = qs[i][1], m = qs[i][2];
            // cout << ""i: "" << i << endl;
            ret[i] = fpow(2, f(r + 1) - f(l), m);
        }
        return ret;
    }
};"
kXXNc4xK,Pastebin.ai - #1 Pastebin Alternative,xxsa,PHP,Saturday 18th of May 2024 05:34:34 PM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
.
...............................
"
zw3QZ8GY,деревья 3,myloyo,C#,Saturday 18th of May 2024 05:10:37 PM CDT,"// класс деревьев
using System;

namespace Myloyorrrr
{
    public class BinaryTree //класс, реализующий АТД «дерево бинарного поиска»
    {
        //вложенный класс, отвечающий за узлы и операции допустимы для дерева бинарного
        //поиска
        private class Node
        {
            public object inf; //информационное поле
            public Node left; //ссылка на левое поддерево
            public Node right; //ссылка на правое поддерево
            public int height; //высота узла
                               
            //конструктор вложенного класса, создает узел дерева
            public Node(object nodeInf)
            {
                inf = nodeInf;
                left = null;
                right = null;
                height = 1;
            }
            public static int Height(Node node)
            {
                if (node == null) 
                    return 0;
                return node.height;
            }

            public void NewHeight() //пересчет высоты
            {
                this.height = (Math.Max(Height(this.right), Height(this.left)) + 1);
            }


            //добавляет узел в дерево так, чтобы дерево оставалось деревом бинарного поиска
            public static void Add(ref Node r, object nodeInf)
            {
                if (r == null)
                {
                    r = new Node(nodeInf);
                }
                else
                {
                    if (((IComparable)(r.inf)).CompareTo(nodeInf) > 0)
                    {
                        Add(ref r.left, nodeInf);
                    }
                    else
                    {
                        Add(ref r.right, nodeInf);
                    }
                    r.NewHeight();
                }
            }
            public static void Preorder(Node r) //прямой обход дерева
            {
                if (r != null)
                {
                    Console.WriteLine(""{0}, высота: {1}."", r.inf, r.height);
                    Preorder(r.left);
                    Preorder(r.right);
                }
            }
            public static void Inorder(Node r) //симметричный обход дерева
            {
                if (r != null)
                {
                    Inorder(r.left);
                    Console.Write(""{0} "", r.inf);
                    Inorder(r.right);
                }
            }
            public static void Postorder(Node r) //обратный обход дерева
            {
                if (r != null)
                {
                    Postorder(r.left);
                    Postorder(r.right);
                    Console.Write(""{0} "", r.inf);
                }
            }

            //поиск ключевого узла в дереве
            public static void Search(Node r, object key, out Node item)
            {
                if (r == null)
                {
                    item = null;
                }
                else
                {
                    if (((IComparable)(r.inf)).CompareTo(key) == 0)
                    {
                        item = r;
                    }
                    else
                    {
                        if (((IComparable)(r.inf)).CompareTo(key) > 0)
                        {
                            Search(r.left, key, out item);
                        }
                        else
                        {
                            Search(r.right, key, out item);
                        }
                    }
                }
            }
            //методы Del и Delete позволяют удалить узел в дереве так, чтобы дерево при этом
            //оставалось деревом бинарного поиска
            private static void Del(Node t, ref Node tr)
            {
                if (tr.right != null)
                {
                    Del(t, ref tr.right);
                    t.NewHeight();
                }
                else
                {
                    t.inf = tr.inf;
                    tr = tr.left;
                    tr.NewHeight();
                }
            }
            public static void Delete(ref Node t, object key)
            {
                if (t == null)
                {
                    throw new Exception(""Данное значение в дереве отсутствует"");
                }
                else
                {
                    if (((IComparable)(t.inf)).CompareTo(key) > 0)
                    {
                        Delete(ref t.left, key);
                        t.NewHeight();
                    }
                    else
                    {
                        if (((IComparable)(t.inf)).CompareTo(key) < 0)
                        {
                            Delete(ref t.right, key);
                            t.NewHeight();
                        }
                        else
                        {
                            if (t.left == null)
                            {
                                t = t.right;
                            }
                            else
                            {
                                if (t.right == null)
                                {
                                    t = t.left;
                                }
                                else
                                {
                                    Del(t, ref t.left);
                                    t.NewHeight();
                                }
                            }
                        }
                    }
                }
            }
            public static bool IsBalanced(Node node)
            {
                if (node == null)
                    return true;

                if (Math.Abs(Height(node.left) - Height(node.right)) <= 1 && IsBalanced(node.left) && IsBalanced(node.right))
                {
                    return true;
                }
                return false;
            }

        } 
        //конец вложенного класса
        Node tree; //ссылка на корень дерева
                   //свойство позволяет получить доступ к значению информационного поля корня дерева

        public object Inf
        {
            set { tree.inf = value; }
            get { return tree.inf; }
        }
        public BinaryTree() //открытый конструктор
        {
            tree = null;
        }
        private BinaryTree(Node r) //закрытый конструктор
        {
            tree = r;
        }
        public void Add(object nodeInf) //добавление узла в дерево
        {
            Node.Add(ref tree, nodeInf);
        }
        //организация различных способов обхода дерева
        public void Preorder()
        {
            Node.Preorder(tree);
        }
        public void Inorder()
        {
            Node.Inorder(tree);
        }
        public void Postorder()
        {
            Node.Postorder(tree);
        }

        //поиск ключевого узла в дереве
        public BinaryTree Search(object key)
        {
            Node r;
            Node.Search(tree, key, out r);
            BinaryTree t = new BinaryTree(r);
            return t;
        }
        //удаление ключевого узла в дереве
        public void Delete(object key)
        {
            Node.Delete(ref tree, key);
        }

        public bool Balance() //3 деревья - проверяем сбалансировано ли дерево 
        {
            return Node.IsBalanced(tree);
        }
    }
}
// класс очередь
using System;

namespace Myloyorrrr
{
    public class Queue
    {
        private class Node //вложенный класс, реализующий базовый элемент очереди
        {
            private object inf;
            private Node next;
            public Node(object nodeInfo)
            {
                inf = nodeInfo;
                next = null;
            }
            public Node Next
            {
                get { return next; }
                set { next = value; }
            }
            public object Inf
            {
                get { return inf; }
                set { inf = value; }
            }
        } //конец класса Node
        private Node head;
        private Node tail;
        public Queue()
        {
            head = null;
            tail = null;
        }
        public void Add(object nodeInfo)
        {
            Node r = new Node(nodeInfo);
            if (head == null)
            {
                head = r;
                tail = r;
            }
            else
            {
                tail.Next = r;
                tail = r;
            }
        }
        public object Take()
        {
            if (head == null)
            {
                throw new Exception(""Очередь пуста."");
            }
            else
            {
                Node r = head; //1
                head = head.Next; //2
                if (head == null) //3
                {
                    tail = null; //4
                }
                return r.Inf; //5
            }
        }
        public bool IsEmpty
        {
            get
            {
                if (head == null)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
        }
    }
}


// осн прога
using System;
using System.IO;

namespace Myloyorrrr
{
    internal class Program
    {
        static void Main()
        {
            //Graph G = new Graph(""C:/Настя/книит/in.txt"");
            //G.Show();
            //Console.WriteLine();
            //Console.WriteLine(""Введите первую вершину:"");
            //int a = int.Parse(Console.ReadLine());
            //Console.WriteLine(""Введите вторую вершину:"");
            //int b = int.Parse(Console.ReadLine());
            //Console.WriteLine(""Введите вершину, через которую нельзя пройти:"");
            //int d = int.Parse(Console.ReadLine());
            //Console.WriteLine();
            //G.Myloyo_find(a-1, b-1, d-1);


            //// 1 задача: подсчитать смежные вершины с данной вершиной 
            //Console.Write(""Введите номер вершины: "");
            //int v = int.Parse(Console.ReadLine());
            //G.Adjacent(v);

            //// 2 задача: определить все пары вершин, для которых существует путь длиной не более L
            //Console.Write(""Введите требуемую длину пути: "");
            //int L = int.Parse(Console.ReadLine());
            //G.Floyd_new(L);

            BinaryTree lipa = new BinaryTree();
            int n = 0;

            //Чтение последовательности чисел из файла input.txt и добавление их в дерево
            using (StreamReader f = new StreamReader(""C:/Настя/книит/in.txt""))
            {
                string line;
                while ((line = f.ReadLine()) != null)
                {
                    string[] text = line.Split(' ');
                    for (int i = 0; i < text.Length; i++)
                    {
                        int num = int.Parse(text[i]);
                        lipa.Add(num);
                        n++;
                    }
                }

            }

            lipa.Preorder();

            //3 деревья
            bool IsBalance = lipa.Balance();
            if (IsBalance)
            {
                Console.WriteLine(""Дерево является сбалансированным"");
            }
            else
            {
                Console.WriteLine(""Дерево не является сбалансированным"");
            }
        }
    }
}
"
Cf7izz4w,графы 3,myloyo,C#,Saturday 18th of May 2024 04:58:58 PM CDT,"// класс городов

using System;

namespace Myloyorrrr
{
    internal class GorodaOnline
    {
        public string Name { get; set; }
        public int X { get; set; }
        public int Y { get; set; }
        
        public GorodaOnline(string name, int x, int y)
        {
            Name = name;
            X = x;
            Y = y;
        }
        public double Distance(GorodaOnline a)
        {
            return Math.Sqrt((this.X - a.X) * (this.X - a.X) + (this.Y - a.Y) * (this.Y - a.Y));
        }

        public override string ToString()
        {
            return Name + "" "" + X + "" "" + Y;
        }

    }
}

// класс графов

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;

namespace Myloyorrrr
{
    public class Graph
    {
        private class Node //вложенный класс для скрытия данных и алгоритмов
        {
            private double[,] array; //матрица смежности
            public double this[int i, int j] //индексатор для обращения к матрице смежности
            {
                get
                {
                    return array[i, j];
                }
                set
                {
                    array[i, j] = value;
                }
            }
            public int Size //свойство для получения размерности матрицы смежности
            {
                get
                {
                    return array.GetLength(0);
                }
            }
            private bool[] nov; //вспомогательный массив: если i-ый элемент массива равен
                                //true, то i-ая вершина еще не просмотрена; если i-ый
                                //элемент равен false, то i-ая вершина просмотрена
            public void NovSet() //метод помечает все вершины графа как непросмотреные
            {
                for (int i = 0; i < Size; i++)
                {
                    nov[i] = true;
                }
            }
            //конструктор вложенного класса, инициализирует матрицу смежности и
            // вспомогательный массив
            public Node(double[,] a)
            {
                array = a;
                nov = new bool[a.GetLength(0)];
            
            }

            public void Add(int a, int b)
            {
                if (a >= 0 && a < Size && b >= 0 && b < Size)
                {
                    //array[a - 1, b - 1] = 1; // Для орграфа
                    array[b - 1, a - 1] = 1; // Для неорграфа
                }
                else
                {
                    Console.WriteLine(""Некорректные вершины"");
                }
            }

            //реализация алгоритма обхода графа в глубину
            public void Dfs(int v)
            {
                Console.Write(""{0} "", v); //просматриваем текущую вершину
                nov[v] = false; //помечаем ее как просмотренную
                                // в матрице смежности просматриваем строку с номером v
                for (int u = 0; u < Size; u++)
                {
                    //если вершины v и u смежные, к тому же вершина u не просмотрена,
                    if (array[v, u] != 0 && nov[u])
                    {
                        Dfs(u); // то рекурсивно просматриваем вершину
                    }
                }
            }
            //реализация алгоритма обхода графа в ширину
            public void Bfs(int v)
            {
                Queue q = new Queue(); // инициализируем очередь
                q.Add(v); //помещаем вершину v в очередь
                nov[v] = false; // помечаем вершину v как просмотренную
                while (!q.IsEmpty) // пока очередь не пуста
                {
                    v = (int)q.Take(); //извлекаем вершину из очереди
                    Console.Write(""{0} "", v); //просматриваем ее
                    for (int u = 0; u < Size; u++) //находим все вершины
                    {
                        if (array[v, u] != 0 && nov[u]) // смежные с данной и еще не просмотренные
                        {
                            q.Add(u); //помещаем их в очередь
                            nov[u] = false; //и помечаем как просмотренные
                        }
                    }
                }
            }
            //реализация алгоритма Дейкстры
            public double[] Dijkstr(int v, int nz, out int[] p)
            {
                //создаем матрицы d и p
                double[] d = new double[Size]; // массив расстояний
                p = new int[Size]; // массив предыдущих вершин путей
                
                for (int u = 0; u < Size; u++)
                {
                    d[u] = int.MaxValue;
                    p[u] = -1;
                }
                d[v] = 0;
                nov[nz] = false; //не ходим в город ненужный

                for (int i = 0; i < Size-1; i++) 
                {
                    // выбираем из множества V\S такую вершину w, что D[w] минимально
                    double min = int.MaxValue;
                    int w = 0;
                    for (int u = 0; u < Size; u++)
                    {
                        if (nov[u] && min > d[u])
                        {
                            min = d[u];
                            w = u;
                        }
                    }

                    nov[w] = false; //помещаем w в множество S
                                    //для каждой вершины из множества V\S определяем кратчайший путь от
                                    // источника до этой вершины
                    for (int u = 0; u < Size; u++)
                    {
                        double distance = d[w] + array[w, u];
                        if (nov[u] && d[u] > distance && array[w, u] != 0)
                        {
                            d[u] = distance;
                            p[u] = w;
                        }
                    }
                }
                return d; //в качестве результата возвращаем массив кратчайших путей для
            } 
            //заданного источника
            //восстановление пути от вершины a до вершины b для алгоритма Дейкстры
            //public void WayDijkstr(int a, int b, double[] p, ref Stack items)
            //{
            //    items.Push(b); //помещаем вершину b в стек
            //    if (a == p[b]) //если предыдущей для вершины b является вершина а, то
            //    {
            //        items.Push(a); //помещаем а в стек и завершаем восстановление пути
            //    }
            //    else //иначе метод рекурсивно вызывает сам себя для поиска пути
            //    { //от вершины а до вершины, предшествующей вершине b
            //        WayDijkstr(a, p[b], p, ref items);
            //    }
            //}

            //реализация алгоритма Флойда
            public double[,] Floyd(out int[,] p)
            {
                int i, j, k;
                //создаем массивы р и а
                double[,] a = new double[Size, Size];
                p = new int[Size, Size];
                for (i = 0; i < Size; i++)
                {
                    for (j = 0; j < Size; j++)
                    {
                        if (i == j)
                        {
                            a[i, j] = 0;
                        }
                        else
                        {
                            if (array[i, j] == 0)
                            {
                                a[i, j] = int.MaxValue;
                            }
                            else
                            {
                                a[i, j] = array[i, j];
                            }
                        }
                        p[i, j] = -1;
                    }
                }
                //осуществляем поиск кратчайших путей
                for (k = 0; k < Size; k++)
                {
                    for (i = 0; i < Size; i++)
                    {
                        for (j = 0; j < Size; j++)
                        {
                            double distance = a[i, k] + a[k, j];
                            if (a[i, j] > distance)
                            {
                                a[i, j] = distance;
                                p[i, j] = k;
                            }
                        }
                    }
                }
                return a;//в качестве результата возвращаем массив кратчайших путей между
            }

            //восстановление пути от вершины a до вершины в для алгоритма Флойда
            public void WayFloyd(int a, int b, int[,] p, ref Queue items)
            {
                int k = p[a, b];
                //если k<> -1, то путь состоит более чем из двух вершин а и b, и проходит через
                //вершину k, поэтому
                if (k != -1)
                {
                    // рекурсивно восстанавливаем путь между вершинами а и k
                    WayFloyd(a, k, p, ref items);
                    items.Add(k); //помещаем вершину к в очередь
                                  // рекурсивно восстанавливаем путь между вершинами k и b
                    WayFloyd(k, b, p, ref items);
                }
            }
        } 
        
        //конец вложенного клаcса
        private Node graph; //закрытое поле, реализующее АТД «граф»
        private List<GorodaOnline> l;
        public Graph(string name) //конструктор внешнего класса
        {
            using (StreamReader file = new StreamReader(name))
            {
                int n = int.Parse(file.ReadLine());
                l = new List<GorodaOnline>();
                for (int i = 0; i<n; i++)
                {
                    string line = file.ReadLine();
                    string[] mas = line.Split(' ');
                    l.Add(new GorodaOnline(mas[0], int.Parse(mas[1]), int.Parse(mas[2])));
                }

                double[,] a = new double[n, n];
                for (int i = 0; i < n; i++)
                {
                    string line = file.ReadLine();
                    string[] mas = line.Split(' ');
                    for (int j = 0; j < n; j++)
                    {
                        int b = int.Parse(mas[j]);
                        a[i, j] = l[i].Distance(l[j]) * b;
                    }
                }
                graph = new Node(a);
            }
        }
        //метод выводит матрицу смежности на консольное окно
        public void Show()
        {
            foreach(GorodaOnline gorod in l)
            {
                Console.WriteLine(gorod);
            }
            for (int i = 0; i < graph.Size; i++)
            {
                for (int j = 0; j < graph.Size; j++)
                {
                    if (graph[i, j] == 0)
                    {
                        Console.Write(""{0}\t"", graph[i, j]);
                    }
                    else
                    {
                        Console.Write(""{0:f2}\t"", graph[i, j]);
                    }
                }
                Console.WriteLine();
            }
        }
        public void Add(int a, int b)
        {
            graph.Add(a, b);
        }
        public void Dfs(int v)
        {
            graph.NovSet();//помечаем все вершины графа как непросмотренные
            graph.Dfs(v); //запускаем алгоритм обхода графа в глубину
            Console.WriteLine();
        }
        public void Bfs(int v)
        {
            graph.NovSet();//помечаем все вершины графа как непросмотренные
            graph.Bfs(v); //запускаем алгоритм обхода графа в ширину
            Console.WriteLine();
        }
        public void Dijkstr(int v, int nz)
        {
            graph.NovSet();//помечаем все вершины графа как непросмотренные
            int[] p;
            double[] d = graph.Dijkstr(v, nz, out p); //запускаем алгоритм Дейкстры
                                                //анализируем полученные данные и выводим их на экран
            Console.WriteLine(""Длина кратчайшие пути от вершины {0} до вершины"", v);

            for (int i = 0; i < graph.Size; i++)
            {
                if (i != v)
                {
                    Console.Write(""{0} равна {1}, "", i, d[i]);
                    Console.Write(""путь "");
                    if (d[i] != int.MaxValue)
                    {
                        Stack items = new Stack();
                        //graph.WayDijkstr(v, i, p, ref items);
                        while (items.Peek()!= null)
                        {
                            Console.Write(""{0} "", items.Pop());
                        }
                    }

                }
                Console.WriteLine();
            }
        }
        public void Myloyo_find(int a, int b, int nz)
        {
            graph.NovSet();//помечаем все вершины графа как непросмотренные
            int[] p;
            double[] d = graph.Dijkstr(a, nz, out p); //запускаем алгоритм Дейкстры
                                                      //анализируем полученные данные и выводим их на экран
            if (d[b]!= int.MaxValue)
            {
                Console.WriteLine(""Длина кратчайшего пути из города {0} в город {1} без города {2} равен {3}"", l[a].Name, l[b].Name, l[nz].Name, d[b]);
                Console.WriteLine();
                List<int>path = new List<int>();
                int cur = b;
                while (cur != -1)
                {
                    path.Add(cur);
                    cur = p[cur];
                }

                path.Reverse();
                Console.WriteLine($""Путь из города {l[a].Name} в город {l[b].Name} без города {l[nz].Name}:"");
                foreach(int i in path){
                    Console.Write(l[i].Name + "", "");
                }
                Console.WriteLine();
            }
            else
            {
                Console.WriteLine($""Пути из {l[a].Name} в {l[b].Name} нет. (точка точка точка)"");
            }
        }
        public void Floyd()
        {
            int[,] p;
            double[,] a = graph.Floyd(out p); //запускаем алгоритм Флойда
            int i, j;
            //анализируем полученные данные и выводим их на экран
            for (i = 0; i < graph.Size; i++)
            {
                for (j = 0; j < graph.Size; j++)
                {
                    if (i != j)
                    {
                        if (a[i, j] == int.MaxValue)
                        {
                            Console.WriteLine(""Пути из города {0} в город {1} не существует"", i, j);
                        }
                        else
                        {
                            Console.Write(""Кратчайший путь из города {0} до города {1} равен {2}, "", i, j, a[i,j]);
                            Console.Write("" путь "");
                            Queue items = new Queue();
                            items.Add(i);
                            graph.WayFloyd(i, j, p, ref items);
                            items.Add(j);
                            while (!items.IsEmpty)
                            {
                                Console.Write(""{0} "", items.Take());
                            }
                            Console.WriteLine();
                        }
                    }
                }
            }
        }
        public void Adjacent(int v) // 1 задача
        {
            Console.Write(""Количество вершин смежных с {0} вершиной: "", v);
            int counter = 0;
            //просматриваем строку с номером v в матрице смежности
            for (int i = 0; i < graph.Size; i++)
            {
                if (graph[v-1, i] != 0)
                {
                    counter++;
                }
            }
            Console.WriteLine(counter);
        }
        public void Floyd_new(int L)
        {
            int[,] p;
            double[,] a = graph.Floyd(out p); //запускаем алгоритм Флойда
            for(int x = 0; x < a.GetLength(0); x++)
            {
                for(int y = 0; y < a.GetLength(1); y++)
                {
                    Console.Write(a[x, y] + "" "");
                   
                }
                Console.WriteLine();
            }

            int i, j;
            //анализируем полученные данные и выводим их на экран
            for (i = 0; i < graph.Size; i++)
            {
                for (j = 0; j < graph.Size; j++)
                {
                    if (i != j)
                    {
                        if (a[i, j] == int.MaxValue)
                        {
                            Console.WriteLine(""Пути из вершины {0} в вершину {1} не существует"", i, j);
                        }
                        else
                        {
                            if (a[i, j] <= L)
                            {
                                Console.WriteLine(""Пара вершин: {0} и {1}. Кратчайший путь равен {2}."", i, j, a[i, j]);
                            }
                            Queue items = new Queue();
                            items.Add(i);
                            graph.WayFloyd(i, j, p, ref items);
                            items.Add(j);
                        }
                    }
                }
            }
        }
    }
}

// основная прога

using System;

namespace Myloyorrrr
{
    internal class Program
    {
        static void Main()
        {

            Graph G = new Graph(""C:/Настя/книит/in.txt"");
            G.Show();
            Console.WriteLine();
            Console.WriteLine(""Введите первую вершину:"");
            int a = int.Parse(Console.ReadLine());
            Console.WriteLine(""Введите вторую вершину:"");
            int b = int.Parse(Console.ReadLine());
            Console.WriteLine(""Введите вершину, через которую нельзя пройти:"");
            int d = int.Parse(Console.ReadLine());
            Console.WriteLine();
            G.Myloyo_find(a-1, b-1, d-1);


            //// 1 задача: подсчитать смежные вершины с данной вершиной 
            //Console.Write(""Введите номер вершины: "");
            //int v = int.Parse(Console.ReadLine());
            //G.Adjacent(v);

            //// 2 задача: определить все пары вершин, для которых существует путь длиной не более L
            //Console.Write(""Введите требуемую длину пути: "");
            //int L = int.Parse(Console.ReadLine());
            //G.Floyd_new(L);

            //BinaryTree lipa = new BinaryTree();
            //int n = 0;

            ////Чтение последовательности чисел из файла input.txt и добавление их в дерево
            //using (StreamReader f = new StreamReader(""C:/Настя/книит/in.txt""))
            //{
            //    string line;
            //    while ((line = f.ReadLine()) != null)
            //    {
            //        string[] text = line.Split(' ');
            //        for (int i = 0; i < text.Length; i++)
            //        {
            //            int num = int.Parse(text[i]);
            //            lipa.Add(num);
            //            n++;
            //        }
            //    }

            //}

            //lipa.Preorder();

            ////3 деревья
            //bool IsBalance = lipa.Balance();
            //if (IsBalance)
            //{
            //    Console.WriteLine(""Дерево является сбалансированным"");
            //}
            //else
            //{
            //    Console.WriteLine(""Дерево не является сбалансированным"");
            //}
        }
    }
}


"
rxRzCu6Z,Untitled,sissou123,C,Saturday 18th of May 2024 04:42:38 PM CDT,"C Programming Masterclass: Pointers & Advanced C Language
C Programming Advanced Topics: Pointers, Memory, Low-Level C Language and Embedded C Preparation 
What you'll learn
Introduction To Pointers For Beginners
Pointers Declaration, Initialization, and Usage 
for more:https://cuty.io/Hf0LX7E92P
"
n2VBMTXb,landfill,mathiaas,Lua,Saturday 18th of May 2024 04:25:52 PM CDT,"local scriptName = ""landfill""
local args = {...}

if #args < 3 then
    print(""Usage: "" .. scriptName .. "" <width> <depth> <channel>"")
    return
end

local WIDTH = tonumber(args[1])
local DEPTH = tonumber(args[2])
local CHANNEL = args[3]

dofile(""turtle_bot"")

if not COLOR_CHANNELS[CHANNEL] then
    print(CHANNEL .. "" is not a valid color channel."")
    return
end


local t = TurtleBot.new(scriptName, ""North"")
t:connect()

local function selectBlocks()
    for _, v in pairs(t:inventory()) do
        if v.name ~= ITEMS.enderChest.name then
            turtle.select(v.slot)
            break
        end
    end
end


local function place(direction)
    local placeFunc = turtle.place
    if direction == ""up"" then
        placeFunc = turtle.placeUp
    elseif direction == ""down"" then
        placeFunc = turtle.placeDown
    end

    selectBlocks()
    placeFunc()
end


local function collectBlocks()
    for i=1, 2 do
        t:enderCollect(COLOR_CHANNELS[CHANNEL], 64)
    end
    t:dig(""up"")
end


local function fill()
    local y = 0
    while t:down() do
        y = y + 1
        sleep(.5)
    end

    for _ = 1, y do
        t:up()
        place(""down"")
    end
end


local function traverseRow(steps)
    for _ = 1, steps do
        local inventory = t:inventory()
        if #inventory < 2 then
            collectBlocks()
        end
        fill()
        t:enderRefuel(2000, 5000, ITEMS.charcoal)
        t:dig(""up"")
        sleep(.5)
        t:forward()
    end
end


local function main()
    for w = 1, WIDTH do
        traverseRow(DEPTH - 1)
        if w ~= WIDTH then
            if w % 2 == 1 then
                t:right()
                traverseRow(1)
                t:right()
            else
                t:left()
                traverseRow(1)
                t:left()
            end
        end
    end
    if WIDTH % 2 == 0 then
        t:right()
        t:right()
        traverseRow(WIDTH - 1)
        t:right()
        t:right()
    end
end

t:execute(main)"
v23NmqLG,DUPE PETSIM99,PpepA,Lua,Saturday 18th of May 2024 04:13:57 PM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/Vincentsss1/PETSIM99/main/DUPENEWMETHOD""))();"
amphQqsZ,hookmetamethod,Devil-Z5,Lua,Saturday 18th of May 2024 03:30:42 PM CDT,"
local client_env = {}

local function hookmetamethod(object, metamethod, hook)
    local mt = getrawmetatable(object) or {}
    local OldMetaMethod = mt[metamethod]
    if not OldMetaMethod then
        error(""metamethod not found"")
    end

    setreadonly(mt, false)
    mt[metamethod] = function(...)
        return hook(OldMetaMethod, ...)
    end
    setreadonly(mt, true)
    
    return function()
        return OldMetaMethod
    end
end


setmetatable(client_env, {
    __index = function(tbl, key)
        if key == ""test"" then
            return true
        else
            return rawget(tbl, key)
        end
    end
})

print(client_env.test) -- this gotta print true :3"
5xzUgf6Y,[WSL] start ssh-agent in .bashrc,ceterumcenseo,Bash,Saturday 18th of May 2024 03:27:22 PM CDT,"if ! ps -A | grep ssh-agent >/dev/null 2>/dev/null; then
        ssh-agent > $HOME/.sshagent
fi
source $HOME/.sshagent
"
v7Qxsxv1,Flame Buzzer rev_02,pleasedontcode,Arduino,Saturday 18th of May 2024 03:22:18 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: Flame Buzzer
	- Source Code compiled for: Arduino Uno
	- Source Code created on: 2024-05-18 20:21:48

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Turns on and off when it senses flame */
/****** END SYSTEM REQUIREMENTS *****/


/****** DEFINITION OF LIBRARIES *****/
#include <ezBuzzer.h>	//https://github.com/ArduinoGetStarted/buzzer
#include <DHT.h>	//https://github.com/adafruit/DHT-sensor-library

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void); // Added function prototype

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t FlameSensor_DHT22_DOUT_PIN_D3 = 3;

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t PassiveBuzzer_Signal_PIN_D2 = 2; // Corrected variable name

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
bool PassiveBuzzer_Signal_PIN_D2_rawData = 0; // Corrected variable name

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
float PassiveBuzzer_Signal_PIN_D2_phyData = 0.0; // Corrected variable name

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
const int BUZZER_PIN = 5; // Define the buzzer pin

ezBuzzer buzzer(BUZZER_PIN); // Initialize the ezBuzzer object with the buzzer pin

#define DHTPIN 3
#define DHTTYPE DHT22

DHT dht(DHTPIN, DHTTYPE); // Initialize the DHT sensor object with the pin and type

void setup(void)
{
	// put your setup code here, to run once:
	pinMode(FlameSensor_DHT22_DOUT_PIN_D3, INPUT_PULLUP);
	pinMode(PassiveBuzzer_Signal_PIN_D2, OUTPUT);
	dht.begin(); // Initialize the DHT sensor
}

void loop(void)
{
	// put your main code here, to run repeatedly:
	updateOutputs(); // Refresh output data

	if (digitalRead(FlameSensor_DHT22_DOUT_PIN_D3) == HIGH) {
		PassiveBuzzer_Signal_PIN_D2_rawData = 1; // Turn on the buzzer
	} else {
		PassiveBuzzer_Signal_PIN_D2_rawData = 0; // Turn off the buzzer
	}
}

void updateOutputs(void)
{
	digitalWrite(PassiveBuzzer_Signal_PIN_D2, PassiveBuzzer_Signal_PIN_D2_rawData);
}
"
hdGzziaN,Flame Control rev_01,pleasedontcode,Arduino,Saturday 18th of May 2024 03:20:35 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: Flame Control
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-05-18 20:19:33

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Turns on and off when it senses flame */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <ezBuzzer.h>	//https://github.com/ArduinoGetStarted/buzzer
#include <DHT.h>	//https://github.com/adafruit/DHT-sensor-library

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void); // Added function prototype

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t FlameSensor_DHT22_DOUT_PIN_D3 = 3;

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t PassiveBuzzer_Signal_PIN_D2 = 2; // Corrected variable name

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
bool PassiveBuzzer_Signal_PIN_D2_rawData = 0; // Corrected variable name

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
float PassiveBuzzer_Signal_PIN_D2_phyData = 0.0; // Corrected variable name

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
const int BUZZER_PIN = 5; // Define the buzzer pin

ezBuzzer buzzer(BUZZER_PIN); // Initialize the ezBuzzer object with the buzzer pin

#define DHTPIN 3
#define DHTTYPE DHT22

DHT dht(DHTPIN, DHTTYPE); // Initialize the DHT sensor object with the pin and type

void setup(void)
{
	// put your setup code here, to run once:
	pinMode(FlameSensor_DHT22_DOUT_PIN_D3, INPUT_PULLUP);
	pinMode(PassiveBuzzer_Signal_PIN_D2, OUTPUT);
	dht.begin(); // Initialize the DHT sensor
}

void loop(void)
{
	// put your main code here, to run repeatedly:
	updateOutputs(); // Refresh output data

	if (digitalRead(FlameSensor_DHT22_DOUT_PIN_D3) == HIGH) {
		PassiveBuzzer_Signal_PIN_D2_rawData = 1; // Turn on the buzzer
	} else {
		PassiveBuzzer_Signal_PIN_D2_rawData = 0; // Turn off the buzzer
	}
}

void updateOutputs(void)
{
	digitalWrite(PassiveBuzzer_Signal_PIN_D2, PassiveBuzzer_Signal_PIN_D2_rawData);
}
"
w09bRNU8,Untitled,StormTruppen,JSON,Saturday 18th of May 2024 02:44:50 PM CDT,"const { CognitoIdentityServiceProvider } = require(""@aws-sdk/client-cognito-identity-provider"");
const openfort = require('@openfort/openfort-node').default;

const openfortClient = new openfort(""SECRET"");

exports.handler = async function(event, context, callback) {
    try {
        // Extract the ID token from the event
        const idToken = getIdTokenFromEvent(event);

        // If ID token is not found, log an error and return an error response
        if (!idToken) {
            console.error(""ID token not found in the event."");
            const response = {
                statusCode: 400,
                body: JSON.stringify({ success: false, message: 'ID token not found in the event.' })
            };
            return callback(null, response);
        }

        // Use the ID token to decode and get user information
        const userId = await getUserIdFromToken(idToken);

        // Use the userId as the thirdPartyUserId in your request
        const req = {
            preGenerateEmbeddedAccount: true,
            thirdPartyProvider: ""oidc"",
            thirdPartyUserId: userId,
        };

        const embeddedReq = {
            shieldAuthProvider: openfort.ShieldAuthProvider.Openfort,
            apiKey: ""SECRET"",
            apiSecret: ""SECRET"",
            encryptionPart: ""SECRET"",
        };

        // Invoke the Lambda function
        const openfortSession = await openfortClient.iam.createAuthPlayer(req, embeddedReq);

        // Return the updated event back to Amazon Cognito
        return callback(null, event);
    } catch (error) {
        // Handle any errors
        console.error(""Error occurred:"", error);
        const response = {
            statusCode: 500,
            body: JSON.stringify({ success: false, message: 'An error occurred while processing the request.' })
        };
        return callback(null, response);
    }
};

// Function to extract the ID token from the event
function getIdTokenFromEvent(event) {
    if (event && event.requestContext && event.requestContext.identity && event.requestContext.identity.cognitoAuthenticationProvider) {
        return event.requestContext.identity.cognitoAuthenticationProvider.split(':').pop();
    } else {
        return null; // Return null if required properties are not present
    }
}

// Function to get the user ID from the access token
async function getUserIdFromToken(token) {
    try {
        const cognitoIdentityServiceProvider = new CognitoIdentityServiceProvider();
        const params = { AccessToken: token };
        const data = await cognitoIdentityServiceProvider.getUser(params);
        return data.sub;
    } catch (error) {
        console.error(""Error decoding token:"", error);
        throw new Error(""Failed to decode token"");
    }
}
"
DFmhsLvx,pastebin.ai - #1 pastebin.com alternative,xxsa,PHP,Saturday 18th of May 2024 02:44:25 PM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.

..............................
."
5tsPUm2D,Item Pick Up,HeatedDZN,Lua,Saturday 18th of May 2024 02:42:12 PM CDT,"-- Function to pick up items from the chest below
local function pickUpItems()
    for slot = 1, 16 do
        turtle.select(slot)
        while turtle.suckDown() do end
    end
end

-- Function to move up by a specified number of blocks
local function moveUp(n)
    for i = 1, n do
        while not turtle.up() do
            turtle.digUp()
        end
    end
end

-- Function to move down by a specified number of blocks
local function moveDown(n)
    for i = 1, n do
        while not turtle.down() do
            turtle.digDown()
        end
    end
end

-- Function to move forward by a specified number of blocks
local function moveForward(n)
    for i = 1, n do
        while not turtle.forward() do
            turtle.dig()
        end
    end
end

-- Function to drop items from the turtle's inventory
local function dropItems()
    for slot = 1, 16 do
        turtle.select(slot)
        turtle.drop()
    end
end

-- Main function
local function main()
    while true do
        pickUpItems()
        moveUp(4)
        moveForward(32)
        turtle.turnLeft()
        moveForward(7)
        dropItems()
        turtle.turnLeft()
        moveForward(32)
        turtle.turnLeft()
        moveForward(7)
        moveDown(4)
        turtle.turnLeft()
        os.sleep(30) -- Sleep for 30 seconds
    end
end

-- Start the script
main()
"
2SujSYMj,How to find the palette number of a color in roblox studio,Da_HamsterLord,JavaScript,Saturday 18th of May 2024 02:11:17 PM CDT,"/*
paste this into your brower's console (f12) and replace row and left pos by the correct numbers, like this : 
https://devforum-uploads.s3.dualstack.us-east-2.amazonaws.com/uploads/original/4X/a/0/9/a096e6c7814a4797bb608f85b8058ba4b15eff10.png
*/

let row = 2 // Change this to the row of the color
let offset = 4 // Offset of the color from the left 

row = row - 1
let pos = 0
for(let i = 1; i <= row; i++) {
    if (i >= 7) {
        pos += 13-(i-7)
    } else {
       pos += 7+i-1
    }
}
console.log(pos + offset)"
GJ98ZSLD,Untitled,shizaero,C++,Saturday 18th of May 2024 01:23:57 PM CDT,"#include <iostream>
#include <time.h>
using namespace std;

int binarySearch(int a[], int elem, int low, int up) {
    if (low > up) return -1;
    int middle = (low + up)/2;
    if (a[middle] == elem) return middle;
    if (a[middle] > elem) return binarySearch(a, elem, low, middle - 1);
    else return binarySearch(a, elem, middle + 1, up);
}

void quickSort(int a[], int left, int right) {
    if (left > right) return;
    int p = a[(left + right) / 2];
    int i = left;
    int j = right;
    while (i <= j) {
        while (a[i] < p) i++;
        while (a[j] > p) j--;
        if (i <= j) {
            int temp = a[i];
            a[i] = a[j];
            a[j] = temp;
            i++;
            j--;
        }
    }
    quickSort(a, left, j);
    quickSort(a, i, right);
}


int main()
{
    setlocale(LC_ALL, ""rus"");
    srand(time(0));
    const int N = 10;
    int a[N];

    cout << ""Исходный массив:\n""; \
        for (int i = 0; i < N; ++i) {
            a[i] = rand() % 16;
            cout << a[i] << ""\t"";
    }

    cout << endl;
    quickSort(a, 0, N - 1);
    for (int i = 0; i < N; ++i) {
        cout << a[i] << ""\t"";
    }
    cout << endl;
    system(""pause"");
    return 0;
}
"
