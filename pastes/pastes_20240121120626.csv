id,title,username,language,date,content
LpdPCsie,Validações de números ponto flutuante em Python,jacknpoe,Python,Sunday 21st of January 2024 06:05:39 AM CDT,"# validações de números ponto flutuante
print(0.4 + 0.1 == 0.5)
print(0.4 + 0.2 == 0.6)
print(""-------"")

# validação usando decimal
from decimal import Decimal
print(Decimal('0.4') + Decimal('0.1') == Decimal('0.5'))
print(Decimal('0.4') + Decimal('0.2') == Decimal('0.6'))
print(""-------"")

precisao = 0.1 ** 14
print(abs(0.4+0.1-0.5)<precisao)
print(abs(0.4+0.2-0.6)<precisao)
print(""-------"")
"
B7QBrQbf,data818,TestGuy1,JSON,Sunday 21st of January 2024 06:00:08 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'f1bb938013ca1c7db6628504183069beef299d242c171723d97ee300239c9e7033be8ab38b6f2bc8b598b1c9751eeb0489085cfa33590ac36af85265f35b41bb16780c744e29cb158ce22e7ea37c133e9ba2c0b71be280968ee6de9e7590955110d273a166e70400cebfc4d6e3b4609ede1f3d242dc25fba20861fb9e2b5eb2b',
  otherdata: [
    'aeb5df0d33e375298e05a814557b3879',
    'a7fba741662c6b8f422c8fb514322482',
    '8b213720c9c6547bd9fb3abb4b9383fa',
    '0ec016e86aeac6c8162e26b5b848bb42',
    '0ddc8f4714520f7407f2f7742f4e2175',
    '9d3ccfa189640d8dc56b42d0e558ce93',
    '8e92fd62750804520273df3b01cdd03b',
    'e80a7d21a95bf58888e1fdcf9331074d'
  ]
}"
c6ANF8Nb,08. On Time for the Exam,myrdok123,Java,Sunday 21st of January 2024 05:47:15 AM CDT,"package W03ConditionalStatementsAdvanced.Exercise;

import java.util.Scanner;

public class P08OnTimeForTheExam {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int examHour = Integer.parseInt(scanner.nextLine());
        int examMinutes = Integer.parseInt(scanner.nextLine());
        int arrivalHour = Integer.parseInt(scanner.nextLine());
        int arrivalMinutes = Integer.parseInt(scanner.nextLine());

        //Превръщаме всичко във минути
        int examTotalMinutes = examHour * 60 + examMinutes;
        int arrivalTotalMinutes = arrivalHour * 60 + arrivalMinutes;

        //създаваме променлива, в която ще пазим минутите за закъснение
        int diff = Math.abs(examTotalMinutes - arrivalTotalMinutes);

        //Проверяваме дали общите минути на пристига са по-големи от общите минути на изпита
        if(arrivalTotalMinutes > examTotalMinutes){
            //Принтираме, че е закъснял
            System.out.println(""Late"");

            //Проверяваме дали закъснението е по-малко или повече от 60 мин.
            if(diff < 60){
                System.out.printf(""%d minutes after the start"", diff);
            }else {
                int hour = diff / 60;
                int minutes = diff % 60;
                System.out.printf(""%d:%02d hours after the start"", hour, minutes);
            }

        } else if (diff <= 30) {

            System.out.println(""On time"");
            if (examTotalMinutes != arrivalTotalMinutes){
                System.out.printf(""%d minutes before the start"", diff);
            }

        } else {
            System.out.println(""Early"");
            int hour = diff / 60;
            int minutes = diff % 60;

            if(diff < 60){
                System.out.printf(""%d minutes before the start"", minutes);
            }else {
                System.out.printf(""%d:%02d hours before the start"", hour, minutes);
            }
        }
    }
}
"
25UsDRs1,07. Hotel Room,myrdok123,Java,Sunday 21st of January 2024 05:46:34 AM CDT,"package W03ConditionalStatementsAdvanced.Exercise;

import java.util.Scanner;

public class P07HotelRoom {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String month = scanner.nextLine();
        int countNights = Integer.parseInt(scanner.nextLine());

        double priceForTheApartment = 0;
        double priceForTheStudio = 0;

        switch (month){

            case ""May"":
            case ""October"":
                //Пресмятаме цената за студио и апартамен
                priceForTheApartment = countNights * 65;
                priceForTheStudio = countNights * 50;

                //Проверяваме дали имаме отстъпка спрямо броя нощувки
                if(countNights > 14){
                    priceForTheStudio = priceForTheStudio * 0.70;
                    priceForTheApartment = priceForTheApartment * 0.90;
                } else if (countNights > 7) {
                    priceForTheStudio = priceForTheStudio * 0.95;


                }
                break;

            case ""June"":
            case ""September"":
                //Пресмятаме цената за студио и апартамен
                priceForTheApartment = countNights * 68.70;
                priceForTheStudio = countNights * 75.20;

                //Проверяваме дали нощувките са повече от 14 -> правим 20% отстъпка
                if(countNights > 14){

                    priceForTheStudio = priceForTheStudio * 0.80;
                    priceForTheApartment = priceForTheApartment * 0.90;
                }

                break;

            case ""July"":
            case ""August"":
                //Пресмятаме цената за студио и апартамен
                priceForTheApartment = countNights * 77;
                priceForTheStudio = countNights * 76;

                if(countNights > 14){
                    priceForTheApartment = priceForTheApartment * 0.90;
                }


                break;
        }

        System.out.printf(""Apartment: %.2f lv.%n"", priceForTheApartment);
        System.out.printf(""Studio: %.2f lv."", priceForTheStudio);
    }
}
"
ew46is3Z,06. Operations Between Numbers,myrdok123,Java,Sunday 21st of January 2024 05:45:51 AM CDT,"package W03ConditionalStatementsAdvanced.Exercise;

import java.util.Scanner;

public class P06OperationsBetweenNumbers {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);


        int number1 = Integer.parseInt(scanner.nextLine());
        int number2 = Integer.parseInt(scanner.nextLine());
        String symbol = scanner.nextLine();

        //Прарим switch -> в зависимост от действието
        switch (symbol){

            case ""+"":
                //Пресмятаме сбора на двете числа
                int sum = number1 + number2;

                // Проверяваме дали резултатът е четен или нечетен
                if(sum % 2 == 0){
                    System.out.printf(""%d %s %d = %d - even"", number1, symbol, number2, sum);
                }else {
                    System.out.printf(""%d %s %d = %d - odd"", number1, symbol, number2, sum);
                }
                break;

            case ""-"":
                //Пресмятаме разликата между двете числа
                int diff = number1 - number2;

                // Проверяваме дали резултатът е четен или нечетен -> принтираме
                if(diff % 2 == 0){
                    System.out.printf(""%d %s %d = %d - even"", number1, symbol, number2, diff);
                }else {
                    System.out.printf(""%d %s %d = %d - odd"", number1, symbol, number2, diff);
                }
                break;

            case ""*"":
                //Пресмятаме умножения резултат между двете числа
                int result = number1 * number2;

                // Проверяваме дали резултатът е четен или нечетен -> принтираме
                if(result % 2 == 0){
                    System.out.printf(""%d %s %d = %d - even"", number1, symbol, number2, result);
                }else {
                    System.out.printf(""%d %s %d = %d - odd"", number1, symbol, number2, result);
                }
                break;

            case ""/"":
                //Проверяваме дали делителя е нула
                if(number2 == 0){
                    System.out.printf(""Cannot divide %d by zero"", number1);
                }else {
                    double division = number1 * 1.0 / number2;
                    System.out.printf(""%d / %d = %.2f"", number1, number2, division);
                }
                break;
            case ""%"":
                //Проверяваме дали делителя е нула
                if (number2 == 0){
                    System.out.printf(""Cannot divide %d by zero"", number1);
                }else {
                    int leftover = number1 % number2;
                    System.out.printf(""%d %% %d = %d"",number1, number2, leftover);
                }

                break;
        }
    }
}
"
EJ06a6kf,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Sunday 21st of January 2024 05:45:32 AM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://net-drop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://net-drop.netlify.app/

798476"
ZsKndy1T,05. Journey,myrdok123,Java,Sunday 21st of January 2024 05:44:56 AM CDT,"package W03ConditionalStatementsAdvanced.Exercise;

import java.util.Scanner;

public class P05Journey {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        double budget = Double.parseDouble(scanner.nextLine());
        String season = scanner.nextLine();

        double spendMoney = 0;
        String destination = """";
        String accommodationType = """";

        //Проверка колко бюджета и съответно какъв е созона
        if(budget <= 100 && season.equals(""summer"")){
            destination = ""Bulgaria"";
            accommodationType = ""Camp"";
            spendMoney = budget * 0.3;

        }else if (budget <= 100){
            destination = ""Bulgaria"";
            accommodationType = ""Hotel"";
            spendMoney = budget * 0.7;

        } else if (budget <= 1000 && season.equals(""summer"")){
            destination = ""Balkans"";
            accommodationType = ""Camp"";
            spendMoney = budget * 0.4;

        } else if (budget <= 1000) {
            destination = ""Balkans"";
            accommodationType = ""Hotel"";
            spendMoney = budget * 0.8;

        }else {
            destination = ""Europe"";
            accommodationType = ""Hotel"";
            spendMoney = budget * 0.9;
        }

        System.out.println(""Somewhere in "" + destination);
        System.out.printf(""%s - %.2f"", accommodationType, spendMoney);
    }
}
"
zNtG0T2W,Untitled,Rofyda_Elghadban1,C++,Sunday 21st of January 2024 05:43:58 AM CDT,"  int n,m,k,mini1=INT_MAX,mini2=INT_MAX;
  cin>>n>>m>>k;
  char arr1[n][m];
  int arr[n][m];
  for(int i=0;i<n;i++){
    for(int j=0;j<m;j++){
      cin>>arr1[i][j];
      if(arr1[i][j]=='.'){
        arr[i][j]=0;
      }else if(arr1[i][j]=='o'){
        arr[i][j]=1;
      }else if(arr1[i][j]=='x'){
        arr[i][j]=-1;
      }
    }
  }
  map<int,int>mp;
  for(int i=0;i<n;i++){
    for(int j=0;j<m;j++){
      if(arr[i][j]==0){
        mp[0]++;
      }else if(arr[i][j]==1){
        mp[1]++;
      }else if(arr[i][j]==-1&&(mp[0]+mp[1]==k)){
        mini1=min(mini1,mp[0]);
        mp[1]=0;
        mp[0]=0;
      }else if(arr[i][j]==-1&&(mp[0]+mp[1]!=k)){
        mp[1]=0;
        mp[0]=0;
      }
      if(mp[0]+mp[1]==k){
        mini1=min(mini1,mp[0]);
      }else if((arr[i][j]=='0'||arr[i][j]=='1')&&mp[0]+mp[1]==k){
        if(j-k>=0&&(arr[i][j-k]=='0'&&arr[i][j]=='0')){
          continue;
        }else if(j-k>=0&&(arr[i][j-k]=='1'&&arr[i][j]=='0')){
          mp[0]++;
          mp[1]--;
        }else if(j-k>=0&&(arr[i][j-k]=='1'&&arr[i][j]=='1')){
          continue;
        }else if(j-k>=0&&(arr[i][j-k]=='0'&&arr[i][j]=='1')){
          mp[0]--;
          mp[1]++;
        } 
        mini1=min(mini1,mp[0]);    
      }
    }
    mp[0]=0;
    mp[1]=0;
  }
  cout<<mini1<<""\n"";"
iaT6cS3W,718_Reto12Uvas,joe1970,C++,Sunday 21st of January 2024 05:43:49 AM CDT,"// Jewelry. Exit value 0

#include <iostream>

using namespace std;

bool testCase() {
    unsigned int n_earrings {}, count {};
    
    cin>>n_earrings;

    if (0==n_earrings)
    {
        return false;
    }

    int jewelry [n_earrings];
    for (unsigned int i = 0; i < n_earrings; i++)
    {
        cin >>jewelry[i];
        if (0==i) { continue; }
        for (unsigned int j = 0; j < i; j++)
        {
            if (-1==jewelry[j]) { continue; }
            if (jewelry[j]==jewelry[i])
            {
                jewelry[j]=-1;
                jewelry[i]=-1;
                count++;
                break; 
            }
        }
    }
    cout << count << endl;
    return true;
}

int main(int argc, char const *argv[])
{
    while (testCase());
    
    return 0;
}"
SpyNxcc0,03. New House,myrdok123,Java,Sunday 21st of January 2024 05:43:38 AM CDT,"package W03ConditionalStatementsAdvanced.Exercise;

import java.util.Scanner;

public class P03NewHouse {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);


        String flowersType = scanner.nextLine();
        int countFlowers = Integer.parseInt(scanner.nextLine());
        double budget = Double.parseDouble(scanner.nextLine());

        //Създаваме си променлива, в която ще пазим общата сума
        double totalSum = 0;

        // Switch ->  flowersType -> проверяваме колко е броя на цветята, за да пресметнем отстъпката

        //""Roses"", ""Dahlias"", ""Tulips"", ""Narcissus"", ""Gladiolus""

       /* цвете	Роза	Далия	Лале	Нарцис	Гладиола
              	5	   3.80	    2.80	3	     2.50*/

        switch (flowersType){
            //Пресмятаме цената за всеки тип цвете
            case ""Roses"":
                totalSum = countFlowers * 5;
                //Проверяваме дали бройката е пове от 80 -> 10% отстъпка
                if(countFlowers > 80){
                    totalSum = totalSum * 0.90;
                }

                break;

            case ""Dahlias"":
                totalSum = countFlowers * 3.80;

                //Проверяваме дали бройката е пове от 90 -> 15% отстъпка
                if (countFlowers > 90){
                    totalSum = totalSum * 0.85;
                }
                break;

            case ""Tulips"":
                totalSum = countFlowers * 2.80;

                //Проверяваме дали бройката е пове от 80 -> 15% отстъпка
                if(countFlowers > 80){
                    totalSum = totalSum * 0.85;
                }
                break;

            case ""Narcissus"":
                totalSum = countFlowers * 3;
                //Проверяваме дали бройката е по-малко от 120 -> 15% оскъпяване
                if(countFlowers < 120){
                    totalSum = totalSum * 1.15;
                }

                break;

            case ""Gladiolus"":

                totalSum = countFlowers * 2.50;
                //Проверяваме дали бройката е по-малко от 80 -> 20% оскъпяване
                if(countFlowers < 80){
                    totalSum = totalSum * 1.20;
                }

                break;


        }


        //Пресмятаме разликата между бюджета и общата сума
        double diff = Math.abs(budget - totalSum);

        //Проверяваме дали бюджетът е достатъчен
        if(budget >= totalSum){

            System.out.printf(""Hey, you have a great garden with %d %s and %.2f leva left."", countFlowers, flowersType, diff);
        }else {
            System.out.printf(""Not enough money, you need %.2f leva more."", diff);
        }

    }
}
"
7Qt7dUeN,Untitled,sissou123,PHP,Sunday 21st of January 2024 05:43:35 AM CDT,"PHP for Beginners - Food Order Website Project
PHP for Beginners: Build a Real World Project from Scratch using PHP and MySQL 
You will learn to create Food Ordering Website with PHP and MySQL
You will learn to create Admin Panel (Website Manager)
You will learn to use Database (MySQL)
You will learn to use Forms to Submit data to Database 
for more:https://cuty.io/8jMOT
"
R11kstYQ,721_Reto12Uvas,joe1970,C++,Sunday 21st of January 2024 05:35:15 AM CDT,"// Xmas Balls
#include <iostream>

using namespace std;

unsigned int Serial(const unsigned int b_buy, unsigned int* p_sorts) {
    unsigned int n_row {1}, balls_S_Before {}, balls_Serial {};
    while (balls_Serial < b_buy)
    {
        balls_S_Before=balls_Serial;
        balls_Serial=balls_S_Before+n_row;
        n_row++;
    }
    (*p_sorts)++;
    if (b_buy==balls_Serial)
    {
        return 0;
    }
    else
    {
        return (b_buy-balls_S_Before);
    }
}

void testCase() {
    unsigned int n_balls{}, nb_remain{1},  n_sorts{};
    cin >> n_balls;
    while (nb_remain != 0)
    {
        if (2==n_balls) {
            n_sorts++;
            break;
        }
        nb_remain = Serial(n_balls, &n_sorts);
        n_balls=nb_remain;
    }
    cout << n_sorts << endl;
}

int main(int argc, const char** argv) {
    
    int tests {};
    cin >> tests;
    
    for (int i = 0; i < tests; i++)
    {
        testCase();
    }
    
    return 0;
}"
UgUX756z,Sticky Notes for Obsidian v3,dhniceday,CSS,Sunday 21st of January 2024 05:28:36 AM CDT,"/* STICKY NOTES */
@charset ""UTF-8"";

:root {
  --sticky-color-text: #282828;

  --sticky-color-green: #b8bb26;
  --sticky-color-red: #fb4934;
  --sticky-color-yellow: #FABD2F;
  --sticky-color-blue: #83a598;
  --sticky-color-purple: #d3869b;
  --sticky-color-aqua: #8ec07c;
  --sticky-color-orange: #fe8019;
  --sticky-color-green-transparent: #b8bb26cc;
  --sticky-color-red-transparent: #fb4934cc;
  --sticky-color-yellow-transparent: #FABD2Fcc;
  --sticky-color-blue-transparent: #83a598cc;
  --sticky-color-purple-transparent: #d3869bcc;
  --sticky-color-aqua-transparent: #8ec07ccc;
  --sticky-color-orange-transparent: #fe8019cc;

  --sticky-note-max-width: 600px;
  --sticky-border-radius: 8px;
}

.callout.callout.callout[data-callout~=sticky]:is([data-callout-metadata~=left]):not([data-callout-metadata~=nofloat]) {
  float: left;
  margin: unset;
  margin-right: 8px;
}

.callout.callout.callout[data-callout~=sticky]:is([data-callout-metadata~=nofloat]) {
  float: unset !important;
  margin-bottom: 20px !important;
}

.callout.callout[data-callout~=sticky]:is([data-callout-metadata~=right]) {
  float: right;
  margin: unset;
  margin-left: 8px;
}

.callout.callout.callout[data-callout~=sticky]:is([data-callout-metadata~=ctr],
[data-callout-metadata~=center]) {
  display: block;
  margin: auto;
  float: unset;
}

.callout[data-callout~=sticky] {
  --callout-icon: sticky-note;
  background-color: var(--sticky-color) !important;
  color: var(--sticky-color-text);
  font-family: var(--sticky-font);
  font-size: var(--sticky-font-size);
  max-width: var(--sticky-note-max-width); 
  margin: auto;
  display: block;
  float: unset;
}

.callout[data-callout~=sticky] { width: 30%; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=s-35]) { width: 35%; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=s-40]) { width: 40%; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=s-45]) { width: 45%; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=s-50]) { width: 50%; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=s-55]) { width: 55%; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=s-60]) { width: 60%; }


.callout[data-callout~=sticky] .callout-title { display: none; }
.callout[data-callout~=sticky] .callout-title-inner { padding-top: 0.25em; }
.callout[data-callout~=sticky] .callout-content { padding: 10px; }

.callout[data-callout~=sticky] {
  border-radius: var(--sticky-border-radius) !important;
  border-width: 1px !important;
  padding: 0px;
  > .callout-content > :first-child {
      margin-top: 0px;
  }
  > .callout-content > :last-child {
      margin-bottom: 0px;
  }
}

.callout[data-callout~=sticky] .callout-content strong,
.callout[data-callout~=sticky] .callout-content em {
  color: var(--sticky-color-text);
  text-decoration: none;
}

.callout[data-callout~=sticky] .callout-content a.internal-link,
.callout[data-callout~=sticky] .callout-content a.external-link { 
  color:var(--sticky-color-text); 
}

.callout[data-callout~=sticky]:is([data-callout-metadata~=green]) { background-color: var(--sticky-color-green-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=red]) { background-color: var(--sticky-color-red-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=yellow]) { background-color: var(--sticky-color-yellow-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=blue]) { background-color: var(--sticky-color-blue-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=purple]) { background-color: var(--sticky-color-purple-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=aqua]) { background-color: var(--sticky-color-aqua-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=orange]) { background-color: var(--sticky-color-orange-transparent) !important; }

.callout[data-callout~=sticky]:is([data-callout-metadata~=green]) mark { background-color: var(--sticky-color-green-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=red]) mark { background-color: var(--sticky-color-red-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=yellow]) mark { background-color: var(--sticky-color-yellow-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=blue]) mark { background-color: var(--sticky-color-blue-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=purple]) mark { background-color: var(--sticky-color-purple-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=aqua]) mark { background-color: var(--sticky-color-aqua-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=orange]) mark { background-color: var(--sticky-color-orange-transparent) !important; }
.callout[data-callout~=sticky] .callout-content mark { opacity: 1;}

.callout[data-callout~=sticky]:is([data-callout-metadata~=title]) .callout-content:first-line {
  font-weight: bold;
} 

.sticky-zoom .callout[data-callout~=sticky]:hover, .callout[data-callout~=sticky]:focus{
  box-shadow:10px 10px 7px rgba(40,40,40,.7);
  transform: scale(1.25);
  position:relative;
  z-index:5;
  opacity: 1;
  transition: transform 0.5s ease 0s;
  display: block;
}


/*@settings
name: Sticky Notes
id: sticky-notes
settings:
  -
    id: info-text-sticky-notes
    type: info-text
    title: Sticky Notes by *Daniel Hansen*
    description: Derived from *ITS Callout snippet*
    markdown: true
  -
    id: sticky-color
    title: Sticky Notes color
    description: Default color for Sticky Notes. Used when not color is specified in markdown.
    type: variable-color
    format: hex
    opacity: true
    default: '#fabd2fcc'
    alt-format:
      -
        id: sticky-color-rgb
        format: rgb
  -
    id: sticky-font
    title: Sticky Notes font
    description: Font used for sticky notes.
    type: variable-select
    default: Roboto
    options:
      -
        label: IBM Plex Sans
        value: IBM Plex Sans
      -
        label: IBM Plex Mono
        value: IBM Plex Mono
      -
        label: Roboto
        value: Roboto
      -
        label: Chilanka
        value: Chilanka
      -
        label: Kalam
        value: Kalam
      -
        label: Architects Daughter
        value: Architects Daughter
      -
        label: Edu SA Beginner
        value: Edu SA Beginner
      -
        label: Playpen Sans
        value: Playpen Sans
      -
        label: Shantell Sans
        value: Shantell Sans
  -
    id: sticky-font-size
    title: Sticky Notes font size
    description: Size of the Sticky Notes text
    type: variable-text
    default: 1.2em
  -
    id: sticky-zoom
    title: Zoom on hover
    description: Zooms on sticky notes on mouse hover
    type: class-toggle
*/
"
AhGKmMbq,Untitled,sissou123,PHP,Sunday 21st of January 2024 05:23:44 AM CDT,"2024 PHP for Beginners Part 1: every line fully explained
PHP for Beginners: Learn to Code in PHP. Every line of code explained in detail. A true PHP for Beginners Course 2023 
Students consistently say how much they LOVE this course due to its unique delivery method and challenges which enable you to use your new skills immediately. Join over 8000 other students who have successfully learnt to code in PHP by enrolling in this course. 
for more:https://cuty.io/Vd4XrXdN
"
rXV472ym,Sticky Notes for Obsidian,dhniceday,CSS,Sunday 21st of January 2024 05:23:10 AM CDT,"/* STICKY NOTES */
@charset ""UTF-8"";

:root {
  --sticky-color-text: #282828;

  --sticky-color-green: #b8bb26;
  --sticky-color-red: #fb4934;
  --sticky-color-yellow: #FABD2F;
  --sticky-color-blue: #83a598;
  --sticky-color-purple: #d3869b;
  --sticky-color-aqua: #8ec07c;
  --sticky-color-orange: #fe8019;
  --sticky-color-green-transparent: #b8bb26cc;
  --sticky-color-red-transparent: #fb4934cc;
  --sticky-color-yellow-transparent: #FABD2Fcc;
  --sticky-color-blue-transparent: #83a598cc;
  --sticky-color-purple-transparent: #d3869bcc;
  --sticky-color-aqua-transparent: #8ec07ccc;
  --sticky-color-orange-transparent: #fe8019cc;

  --sticky-note-max-width: 600px;
  --sticky-border-radius: 8px;
}

.callout.callout.callout:is([data-callout-metadata~=left]):not([data-callout-metadata~=nofloat]) {
  float: left;
  margin: unset;
  margin-right: 8px;
}

.callout.callout.callout:is([data-callout-metadata~=nofloat]) {
  float: unset !important;
  margin-bottom: 20px !important;
}

.callout.callout:is([data-callout-metadata~=right]) {
  float: right;
  margin: unset;
  margin-left: 8px;
}

.callout.callout.callout:is([data-callout-metadata~=ctr],
[data-callout-metadata~=center]) {
  display: block;
  margin: auto;
  float: unset;
}

.callout[data-callout~=sticky] {
  --callout-icon: sticky-note;
  background-color: var(--sticky-color) !important;
  color: var(--sticky-color-text);
  font-family: var(--sticky-font);
  font-size: var(--sticky-font-size);
  max-width: var(--sticky-note-max-width); 
  margin: auto;
  display: block;
  float: unset;
}

.callout[data-callout~=sticky] { width: 30%; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=s-35]) { width: 35%; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=s-40]) { width: 40%; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=s-45]) { width: 45%; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=s-50]) { width: 50%; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=s-55]) { width: 55%; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=s-60]) { width: 60%; }


.callout[data-callout~=sticky] .callout-title { display: none; }
.callout[data-callout~=sticky] .callout-title-inner { padding-top: 0.25em; }
.callout[data-callout~=sticky] .callout-content { padding: 10px; }

.callout[data-callout~=sticky] {
  border-radius: var(--sticky-border-radius) !important;
  border-width: 1px !important;
  padding: 0px;
  > .callout-content > :first-child {
      margin-top: 0px;
  }
  > .callout-content > :last-child {
      margin-bottom: 0px;
  }
}

.callout[data-callout~=sticky] .callout-content strong,
.callout[data-callout~=sticky] .callout-content em {
  color: var(--sticky-color-text);
  text-decoration: none;
}

.callout[data-callout~=sticky] .callout-content a.internal-link,
.callout[data-callout~=sticky] .callout-content a.external-link { 
  color:var(--sticky-color-text); 
}

.callout[data-callout~=sticky]:is([data-callout-metadata~=green]) { background-color: var(--sticky-color-green-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=red]) { background-color: var(--sticky-color-red-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=yellow]) { background-color: var(--sticky-color-yellow-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=blue]) { background-color: var(--sticky-color-blue-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=purple]) { background-color: var(--sticky-color-purple-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=aqua]) { background-color: var(--sticky-color-aqua-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=orange]) { background-color: var(--sticky-color-orange-transparent) !important; }

.callout[data-callout~=sticky]:is([data-callout-metadata~=green]) mark { background-color: var(--sticky-color-green-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=red]) mark { background-color: var(--sticky-color-red-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=yellow]) mark { background-color: var(--sticky-color-yellow-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=blue]) mark { background-color: var(--sticky-color-blue-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=purple]) mark { background-color: var(--sticky-color-purple-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=aqua]) mark { background-color: var(--sticky-color-aqua-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=orange]) mark { background-color: var(--sticky-color-orange-transparent) !important; }
.callout[data-callout~=sticky] .callout-content mark { opacity: 1;}

.callout[data-callout~=sticky]:is([data-callout-metadata~=title]) .callout-content:first-line {
  font-weight: bold;
} 

.sticky-zoom .callout[data-callout~=sticky]:hover, .callout[data-callout~=sticky]:focus{
  box-shadow:10px 10px 7px rgba(40,40,40,.7);
  transform: scale(1.25);
  position:relative;
  z-index:5;
  opacity: 1;
  transition: transform 0.5s ease 0s;
  display: block;
}


/*@settings
name: Sticky Notes
id: sticky-notes
settings:
  -
    id: info-text-sticky-notes
    type: info-text
    title: Sticky Notes by *Daniel Hansen*
    description: Derived from *ITS Callout snippet*
    markdown: true
  -
    id: sticky-color
    title: Sticky Notes color
    description: Default color for Sticky Notes. Used when not color is specified in markdown.
    type: variable-color
    format: hex
    opacity: true
    default: '#fabd2fcc'
    alt-format:
      -
        id: sticky-color-rgb
        format: rgb
  -
    id: sticky-font
    title: Sticky Notes font
    description: Font used for sticky notes.
    type: variable-select
    default: Roboto
    options:
      -
        label: IBM Plex Sans
        value: IBM Plex Sans
      -
        label: IBM Plex Mono
        value: IBM Plex Mono
      -
        label: Roboto
        value: Roboto
      -
        label: Chilanka
        value: Chilanka
      -
        label: Kalam
        value: Kalam
      -
        label: Architects Daughter
        value: Architects Daughter
      -
        label: Edu SA Beginner
        value: Edu SA Beginner
      -
        label: Playpen Sans
        value: Playpen Sans
      -
        label: Shantell Sans
        value: Shantell Sans
  -
    id: sticky-font-size
    title: Sticky Notes font size
    description: Size of the Sticky Notes text
    type: variable-text
    default: 1.2em
  -
    id: sticky-zoom
    title: Zoom on hover
    description: Zooms on sticky notes on mouse hover
    type: class-toggle
*/
"
8SN0eu0k,G2A.com Free Gift Card Guide Jan 2024,ounnuo,GetText,Sunday 21st of January 2024 05:07:17 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_412961.pdf
 
Working as of
21 January 2024"
meLe9DqH,Untitled,AntoniiaG,Python,Sunday 21st of January 2024 05:06:54 AM CDT,"class Delivery:
    def __init__(self, tracking_number, sender_office, receiver_office, sender_name, phone_number, amount, deadline):
        self.tracking_number = tracking_number
        self.sender_office = sender_office
        self.receiver_office = receiver_office
        self.sender_name = sender_name
        self.phone_number = phone_number
        self.amount = amount
        self.deadline = deadline

    def display_info(self):
        print(f""Tracking Number: {self.tracking_number}"")
        print(f""Sender Office: {self.sender_office}"")
        print(f""Receiver Office: {self.receiver_office}"")
        print(f""Sender Name: {self.sender_name}"")
        print(f""Phone number: {self.phone_number}"")
        print(f""Amount: {self.amount}"")
        print(f""Deadline: {self.deadline}"")

    def change_deadline(self, new_deadline):
        self.deadline = new_deadline

class PaymentMethod:
    CARD = ""Card""
    BANK_TRANSFER = ""Bank Transfer""
    CASH_ON_DELIVERY = ""Cash on Delivery""

class DeliveryMethod:
    OFFICE_PICKUP = ""Office Pickup""
    AUTOMAT = ""Automat""
    HOME_DELIVERY = ""Home Delivery""

class DeliveryManager:
    def __init__(self):
        self.deliveries = []

    def add_delivery(self, delivery):
        self.deliveries.append(delivery)

    def check_tracking_number(self, phone_number):
        return len(phone_number) == 13  # Проверка за дължина 10 символа
if __name__ == ""__main__"":
    delivery_manager = DeliveryManager()

    tracking_number = input(""Enter tracking number: "")
    sender_office = input(""Enter sender office: "")
    receiver_office = input(""Enter receiver office: "")
    sender_name = input(""Enter sender name: "")
    phone_number = int(input(""Enter phone number: +359""))
    amount = float(input(""Enter amount: ""))
    deadline = input(""Enter deadline (On Time or Delayed): "")

    delivery = Delivery(tracking_number, sender_office, receiver_office, sender_name, phone_number, amount, deadline)
    print(""\nУспешно регистрирана пратка!"")
    delivery.display_info()
    print()
#клас който да въведеш тел. номер и да ти принтира инф. за пратката
    print(""\nИнформация за получаване на пратка:"")
    delivery_manager.add_delivery(delivery)

    phnone_number_to_check = int(input(""Enter phone number to check: +359""))
    if phnone_number_to_check == delivery.phone_number:
        print(""Phone number is valid.\n"")
    else:
        print(""Invalid phone number."")

    new_deadline = input(""Enter new deadline (On Time or Delayed): "")
    delivery.change_deadline(new_deadline)
    delivery.display_info()

    print()
    print(""1 - Плащане с карта \n""
          ""2 - Плащане в брой"")

    payment = int(input(""Изберете метод за плащане:""))
    if payment == 1:
        print(""Плащане с карта"")
        payment_method = PaymentMethod.CARD    
    else:
        print(""Плащане в брой"")
        delivery_method = DeliveryMethod.HOME_DELIVERY
    "
KdV4aW70,Scan I2C Bus,Dotterbart,C,Sunday 21st of January 2024 04:59:46 AM CDT,"void I2C_Adresses(){
  byte error, address;
  int nDevices;
  Serial.println(""Scanning..."");
  nDevices = 0;
  for(address = 1; address < 127; address++ ){
    // The i2c_scanner uses the return value of
    // the Write.endTransmisstion to see if
    // a device did acknowledge to the address.
    Wire.beginTransmission(address);
    error = Wire.endTransmission();
    if (error == 0){
      Serial.print(""I2C device found at address 0x"");
      if (address<16){
        Serial.print(""0"");
      }
        Serial.print(address,HEX);
        Serial.println(""  !"");
        nDevices++;
    }
    else if (error==4){
      Serial.print(""Unknown error at address 0x"");
      if (address<16){
        Serial.print(""0"");
      }
      Serial.println(address,HEX);
    }    
  }  
  if (nDevices == 0){
    Serial.print(address,HEX);
    Serial.println("" No I2C devices found\n"");}
  else{
    Serial.println(""done\\"");}
}"
4vw96pNz,Sticky Notes for Obsidian,dhniceday,CSS,Sunday 21st of January 2024 04:48:25 AM CDT,"/* STICKY NOTES */
@charset ""UTF-8"";

:root {
  --sticky-color-text: #282828;

  --sticky-color-green: #b8bb26;
  --sticky-color-red: #fb4934;
  --sticky-color-yellow: #FABD2F;
  --sticky-color-blue: #83a598;
  --sticky-color-purple: #d3869b;
  --sticky-color-aqua: #8ec07c;
  --sticky-color-orange: #fe8019;
  --sticky-color-green-transparent: #b8bb26cc;
  --sticky-color-red-transparent: #fb4934cc;
  --sticky-color-yellow-transparent: #FABD2Fcc;
  --sticky-color-blue-transparent: #83a598cc;
  --sticky-color-purple-transparent: #d3869bcc;
  --sticky-color-aqua-transparent: #8ec07ccc;
  --sticky-color-orange-transparent: #fe8019cc;

  --sticky-note-max-width: 600px;
  --sticky-border-radius: 8px;
}

.callout.callout.callout:is([data-callout-metadata~=left]):not([data-callout-metadata~=nofloat]) {
  float: left;
  margin: unset;
  margin-right: 8px;
}

.callout.callout.callout:is([data-callout-metadata~=nofloat]) {
  float: unset !important;
  margin-bottom: 20px !important;
}

.callout.callout:is([data-callout-metadata~=right]) {
  float: right;
  margin: unset;
  margin-left: 8px;
}

.callout.callout.callout:is([data-callout-metadata~=ctr],
[data-callout-metadata~=center]) {
  display: block;
  margin: auto;
  float: unset;
}

.callout[data-callout~=sticky] {
  --callout-icon: sticky-note;
  background-color: var(--sticky-color) !important;
  color: var(--sticky-color-text);
  font-family: var(--sticky-font);
  font-size: var(--sticky-font-size);
  max-width: var(--sticky-note-max-width); 
  margin: auto;
  display: block;
  float: unset;
}

.callout[data-callout~=sticky] { width: 30%; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=s-35]) { width: 35%; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=s-40]) { width: 40%; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=s-45]) { width: 45%; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=s-50]) { width: 50%; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=s-55]) { width: 55%; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=s-60]) { width: 60%; }


.callout[data-callout~=sticky] .callout-title { display: none; }
.callout[data-callout~=sticky] .callout-title-inner { padding-top: 0.25em; }
.callout[data-callout~=sticky] .callout-content { padding: 10px; }

.callout {
  border-radius: var(--sticky-border-radius) !important;
  border-width: 1px !important;
  padding: 0px;
  > .callout-content > :first-child {
      margin-top: 0px;
  }
  > .callout-content > :last-child {
      margin-bottom: 0px;
  }
}

.callout[data-callout~=sticky] .callout-content strong,
.callout[data-callout~=sticky] .callout-content em {
  color: var(--sticky-color-text);
  text-decoration: none;
}

.callout[data-callout~=sticky] .callout-content a.internal-link,
.callout[data-callout~=sticky] .callout-content a.external-link { 
  color:var(--sticky-color-text); 
}

.callout[data-callout~=sticky]:is([data-callout-metadata~=green]) { background-color: var(--sticky-color-green-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=red]) { background-color: var(--sticky-color-red-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=yellow]) { background-color: var(--sticky-color-yellow-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=blue]) { background-color: var(--sticky-color-blue-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=purple]) { background-color: var(--sticky-color-purple-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=aqua]) { background-color: var(--sticky-color-aqua-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=orange]) { background-color: var(--sticky-color-orange-transparent) !important; }

.callout[data-callout~=sticky]:is([data-callout-metadata~=green]) mark { background-color: var(--sticky-color-green-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=red]) mark { background-color: var(--sticky-color-red-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=yellow]) mark { background-color: var(--sticky-color-yellow-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=blue]) mark { background-color: var(--sticky-color-blue-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=purple]) mark { background-color: var(--sticky-color-purple-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=aqua]) mark { background-color: var(--sticky-color-aqua-transparent) !important; }
.callout[data-callout~=sticky]:is([data-callout-metadata~=orange]) mark { background-color: var(--sticky-color-orange-transparent) !important; }
.callout[data-callout~=sticky] .callout-content mark { opacity: 1;}

.callout[data-callout~=sticky]:is([data-callout-metadata~=title]) .callout-content:first-line {
  font-weight: bold;
} 

.sticky-zoom .callout[data-callout~=sticky]:hover, .callout[data-callout~=sticky]:focus{
  box-shadow:10px 10px 7px rgba(40,40,40,.7);
  transform: scale(1.25);
  position:relative;
  z-index:5;
  opacity: 1;
  transition: transform 0.5s ease 0s;
  display: block;
}


/*@settings
name: Sticky Notes
id: sticky-notes
settings:
  -
    id: info-text-sticky-notes
    type: info-text
    title: Sticky Notes by *Daniel Hansen*
    description: Derived from *ITS Callout snippet*
    markdown: true
  -
    id: sticky-color
    title: Sticky Notes color
    description: Default color for Sticky Notes. Used when not color is specified in markdown.
    type: variable-color
    format: hex
    opacity: true
    default: '#fabd2fcc'
    alt-format:
      -
        id: sticky-color-rgb
        format: rgb
  -
    id: sticky-font
    title: Sticky Notes font
    description: Font used for sticky notes.
    type: variable-select
    default: Roboto
    options:
      -
        label: IBM Plex Sans
        value: IBM Plex Sans
      -
        label: IBM Plex Mono
        value: IBM Plex Mono
      -
        label: Roboto
        value: Roboto
      -
        label: Chilanka
        value: Chilanka
      -
        label: Kalam
        value: Kalam
      -
        label: Architects Daughter
        value: Architects Daughter
      -
        label: Edu SA Beginner
        value: Edu SA Beginner
      -
        label: Playpen Sans
        value: Playpen Sans
      -
        label: Shantell Sans
        value: Shantell Sans
  -
    id: sticky-font-size
    title: Sticky Notes font size
    description: Size of the Sticky Notes text
    type: variable-text
    default: 1.2em
  -
    id: sticky-zoom
    title: Zoom on hover
    description: Zooms on sticky notes on mouse hover
    type: class-toggle
*/
"
t9un8SUC,Isak Medium GQL Query for fetching user data,bozhilov,JavaScript,Sunday 21st of January 2024 04:06:20 AM CDT,"var myHeaders = new Headers();
myHeaders.append(""Content-Type"", ""application/json"");

var raw = JSON.stringify([
  {
    ""operationName"": ""UserProfileQuery"",
    ""variables"": {
      ""homepagePostsFrom"": null,
      ""includeDistributedResponses"": true,
      ""id"": null,
      ""username"": ""albertoromgar"",
      ""homepagePostsLimit"": 10
    },
    ""query"": ""query UserProfileQuery($id: ID, $username: ID, $homepagePostsLimit: PaginationLimit, $homepagePostsFrom: String = null, $includeDistributedResponses: Boolean = true) {\n  userResult(id: $id, username: $username) {\n    __typename\n    ... on User {\n      id\n      name\n      viewerIsUser\n      viewerEdge {\n        id\n        isFollowing\n        __typename\n      }\n      homePostsPublished: homepagePostsConnection(paging: {limit: 1}) {\n        posts {\n          id\n          __typename\n        }\n        __typename\n      }\n      ...UserCanonicalizer_user\n      ...MastodonVerificationLink_user\n      ...UserProfileScreen_user\n      __typename\n    }\n  }\n}\n\nfragment UserCanonicalizer_user on User {\n  id\n  username\n  hasSubdomain\n  customDomainState {\n    live {\n      domain\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment MastodonVerificationLink_user on User {\n  id\n  linkedAccounts {\n    mastodon {\n      username\n      __typename\n      id\n    }\n    __typename\n    id\n  }\n  __typename\n}\n\nfragment UserProfileScreen_user on User {\n  __typename\n  id\n  viewerIsUser\n  ...PublisherHeader_publisher\n  ...PublisherHomepagePosts_publisher\n  ...UserProfileMetadata_user\n  ...SuspendedBannerLoader_user\n  ...useAnalytics_user\n  ...useIsVerifiedBookAuthor_user\n  ...UserProfileBooks_user\n}\n\nfragment PublisherHeader_publisher on Publisher {\n  id\n  ...PublisherHeaderBackground_publisher\n  ...PublisherHeaderNameplate_publisher\n  ...PublisherHeaderActions_publisher\n  ...PublisherHeaderNav_publisher\n  __typename\n}\n\nfragment PublisherHeaderBackground_publisher on Publisher {\n  __typename\n  id\n  customStyleSheet {\n    ...PublisherHeaderBackground_customStyleSheet\n    __typename\n    id\n  }\n  ... on Collection {\n    colorPalette {\n      tintBackgroundSpectrum {\n        backgroundColor\n        __typename\n      }\n      __typename\n    }\n    isAuroraVisible\n    legacyHeaderBackgroundImage {\n      id\n      originalWidth\n      focusPercentX\n      focusPercentY\n      __typename\n    }\n    ...collectionTintBackgroundTheme_collection\n    __typename\n    id\n  }\n  ...publisherUrl_publisher\n}\n\nfragment PublisherHeaderBackground_customStyleSheet on CustomStyleSheet {\n  id\n  global {\n    colorPalette {\n      background {\n        rgb\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  header {\n    headerScale\n    backgroundImageDisplayMode\n    backgroundImageVerticalAlignment\n    backgroundColorDisplayMode\n    backgroundColor {\n      alpha\n      rgb\n      ...getHexFromColorValue_colorValue\n      ...getOpaqueHexFromColorValue_colorValue\n      __typename\n    }\n    secondaryBackgroundColor {\n      ...getHexFromColorValue_colorValue\n      __typename\n    }\n    postBackgroundColor {\n      ...getHexFromColorValue_colorValue\n      __typename\n    }\n    backgroundImage {\n      id\n      originalWidth\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment getHexFromColorValue_colorValue on ColorValue {\n  rgb\n  alpha\n  __typename\n}\n\nfragment getOpaqueHexFromColorValue_colorValue on ColorValue {\n  rgb\n  __typename\n}\n\nfragment collectionTintBackgroundTheme_collection on Collection {\n  colorPalette {\n    ...collectionTintBackgroundTheme_colorPalette\n    __typename\n  }\n  customStyleSheet {\n    id\n    ...collectionTintBackgroundTheme_customStyleSheet\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment collectionTintBackgroundTheme_colorPalette on ColorPalette {\n  ...customTintBackgroundTheme_colorPalette\n  __typename\n}\n\nfragment customTintBackgroundTheme_colorPalette on ColorPalette {\n  tintBackgroundSpectrum {\n    ...ThemeUtil_colorSpectrum\n    __typename\n  }\n  __typename\n}\n\nfragment ThemeUtil_colorSpectrum on ColorSpectrum {\n  backgroundColor\n  ...ThemeUtilInterpolateHelpers_colorSpectrum\n  __typename\n}\n\nfragment ThemeUtilInterpolateHelpers_colorSpectrum on ColorSpectrum {\n  colorPoints {\n    ...ThemeUtil_colorPoint\n    __typename\n  }\n  __typename\n}\n\nfragment ThemeUtil_colorPoint on ColorPoint {\n  color\n  point\n  __typename\n}\n\nfragment collectionTintBackgroundTheme_customStyleSheet on CustomStyleSheet {\n  id\n  ...customTintBackgroundTheme_customStyleSheet\n  __typename\n}\n\nfragment customTintBackgroundTheme_customStyleSheet on CustomStyleSheet {\n  id\n  global {\n    colorPalette {\n      primary {\n        colorPalette {\n          ...customTintBackgroundTheme_colorPalette\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment publisherUrl_publisher on Publisher {\n  id\n  __typename\n  ... on Collection {\n    ...collectionUrl_collection\n    __typename\n    id\n  }\n  ... on User {\n    ...userUrl_user\n    __typename\n    id\n  }\n}\n\nfragment collectionUrl_collection on Collection {\n  id\n  domain\n  slug\n  __typename\n}\n\nfragment userUrl_user on User {\n  __typename\n  id\n  customDomainState {\n    live {\n      domain\n      __typename\n    }\n    __typename\n  }\n  hasSubdomain\n  username\n}\n\nfragment PublisherHeaderNameplate_publisher on Publisher {\n  ...PublisherAvatar_publisher\n  ...PublisherHeaderLogo_publisher\n  ...PublisherFollowersCount_publisher\n  __typename\n}\n\nfragment PublisherAvatar_publisher on Publisher {\n  __typename\n  ... on Collection {\n    id\n    ...CollectionAvatar_collection\n    __typename\n  }\n  ... on User {\n    id\n    ...UserAvatar_user\n    __typename\n  }\n}\n\nfragment CollectionAvatar_collection on Collection {\n  name\n  avatar {\n    id\n    __typename\n  }\n  ...collectionUrl_collection\n  __typename\n  id\n}\n\nfragment UserAvatar_user on User {\n  __typename\n  id\n  imageId\n  mediumMemberAt\n  membership {\n    tier\n    __typename\n    id\n  }\n  name\n  username\n  ...userUrl_user\n}\n\nfragment PublisherHeaderLogo_publisher on Publisher {\n  __typename\n  id\n  customStyleSheet {\n    id\n    header {\n      logoImage {\n        ...PublisherHeaderLogo_image\n        __typename\n      }\n      appNameColor {\n        ...getHexFromColorValue_colorValue\n        __typename\n      }\n      appNameTreatment\n      __typename\n    }\n    __typename\n  }\n  name\n  ... on Collection {\n    isAuroraVisible\n    logo {\n      id\n      originalHeight\n      originalWidth\n      __typename\n    }\n    __typename\n    id\n  }\n  ... on User {\n    ...useIsVerifiedBookAuthor_user\n    __typename\n    id\n  }\n  ...CustomHeaderTooltip_publisher\n  ...publisherUrl_publisher\n}\n\nfragment PublisherHeaderLogo_image on ImageMetadata {\n  id\n  originalHeight\n  originalWidth\n  __typename\n}\n\nfragment useIsVerifiedBookAuthor_user on User {\n  verifications {\n    isBookAuthor\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment CustomHeaderTooltip_publisher on Publisher {\n  __typename\n  id\n  customStyleSheet {\n    id\n    header {\n      appNameTreatment\n      nameTreatment\n      __typename\n    }\n    __typename\n  }\n  ... on Collection {\n    isAuroraVisible\n    slug\n    __typename\n    id\n  }\n}\n\nfragment PublisherFollowersCount_publisher on Publisher {\n  id\n  __typename\n  id\n  ... on Collection {\n    slug\n    subscriberCount\n    ...collectionUrl_collection\n    __typename\n    id\n  }\n  ... on User {\n    socialStats {\n      followerCount\n      __typename\n    }\n    username\n    ...userUrl_user\n    __typename\n    id\n  }\n}\n\nfragment PublisherHeaderActions_publisher on Publisher {\n  __typename\n  ...MetaHeaderPubMenu_publisher\n  ... on Collection {\n    ...CollectionFollowButton_collection\n    __typename\n    id\n  }\n  ... on User {\n    ...FollowAndSubscribeButtons_user\n    __typename\n    id\n  }\n}\n\nfragment MetaHeaderPubMenu_publisher on Publisher {\n  __typename\n  ... on Collection {\n    ...MetaHeaderPubMenu_publisher_collection\n    __typename\n    id\n  }\n  ... on User {\n    ...MetaHeaderPubMenu_publisher_user\n    __typename\n    id\n  }\n}\n\nfragment MetaHeaderPubMenu_publisher_collection on Collection {\n  id\n  slug\n  name\n  domain\n  newsletterV3 {\n    slug\n    __typename\n    id\n  }\n  ...MutePopoverOptions_collection\n  __typename\n}\n\nfragment MutePopoverOptions_collection on Collection {\n  id\n  __typename\n}\n\nfragment MetaHeaderPubMenu_publisher_user on User {\n  id\n  username\n  ...MutePopoverOptions_creator\n  __typename\n}\n\nfragment MutePopoverOptions_creator on User {\n  id\n  __typename\n}\n\nfragment CollectionFollowButton_collection on Collection {\n  __typename\n  id\n  name\n  slug\n  ...collectionUrl_collection\n  ...SusiClickable_collection\n}\n\nfragment SusiClickable_collection on Collection {\n  ...SusiContainer_collection\n  __typename\n  id\n}\n\nfragment SusiContainer_collection on Collection {\n  name\n  ...SignInOptions_collection\n  ...SignUpOptions_collection\n  __typename\n  id\n}\n\nfragment SignInOptions_collection on Collection {\n  id\n  name\n  __typename\n}\n\nfragment SignUpOptions_collection on Collection {\n  id\n  name\n  __typename\n}\n\nfragment FollowAndSubscribeButtons_user on User {\n  ...UserFollowButton_user\n  ...UserSubscribeButton_user\n  __typename\n  id\n}\n\nfragment UserFollowButton_user on User {\n  ...UserFollowButtonSignedIn_user\n  ...UserFollowButtonSignedOut_user\n  __typename\n  id\n}\n\nfragment UserFollowButtonSignedIn_user on User {\n  id\n  name\n  __typename\n}\n\nfragment UserFollowButtonSignedOut_user on User {\n  id\n  ...SusiClickable_user\n  __typename\n}\n\nfragment SusiClickable_user on User {\n  ...SusiContainer_user\n  __typename\n  id\n}\n\nfragment SusiContainer_user on User {\n  ...SignInOptions_user\n  ...SignUpOptions_user\n  __typename\n  id\n}\n\nfragment SignInOptions_user on User {\n  id\n  name\n  __typename\n}\n\nfragment SignUpOptions_user on User {\n  id\n  name\n  __typename\n}\n\nfragment UserSubscribeButton_user on User {\n  id\n  isPartnerProgramEnrolled\n  name\n  viewerEdge {\n    id\n    isFollowing\n    isUser\n    __typename\n  }\n  viewerIsUser\n  newsletterV3 {\n    id\n    ...useNewsletterV3Subscription_newsletterV3\n    __typename\n  }\n  ...useNewsletterV3Subscription_user\n  ...MembershipUpsellModal_user\n  __typename\n}\n\nfragment useNewsletterV3Subscription_newsletterV3 on NewsletterV3 {\n  id\n  type\n  slug\n  name\n  collection {\n    slug\n    __typename\n    id\n  }\n  user {\n    id\n    name\n    username\n    newsletterV3 {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment useNewsletterV3Subscription_user on User {\n  id\n  username\n  newsletterV3 {\n    ...useNewsletterV3Subscription_newsletterV3\n    __typename\n    id\n  }\n  __typename\n}\n\nfragment MembershipUpsellModal_user on User {\n  id\n  name\n  imageId\n  postSubscribeMembershipUpsellShownAt\n  newsletterV3 {\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment PublisherHeaderNav_publisher on Publisher {\n  __typename\n  id\n  customStyleSheet {\n    navigation {\n      navItems {\n        name\n        ...PublisherHeaderNavLink_headerNavigationItem\n        __typename\n      }\n      __typename\n    }\n    __typename\n    id\n  }\n  ...PublisherHeaderNavLink_publisher\n  ... on Collection {\n    domain\n    isAuroraVisible\n    slug\n    navItems {\n      tagSlug\n      title\n      url\n      __typename\n    }\n    __typename\n    id\n  }\n  ... on User {\n    customDomainState {\n      live {\n        domain\n        __typename\n      }\n      __typename\n    }\n    hasSubdomain\n    username\n    homePostsPublished: homepagePostsConnection(paging: {limit: 1}) {\n      posts {\n        id\n        __typename\n      }\n      __typename\n    }\n    ...useIsVerifiedBookAuthor_user\n    __typename\n    id\n  }\n}\n\nfragment PublisherHeaderNavLink_headerNavigationItem on HeaderNavigationItem {\n  href\n  name\n  tags {\n    id\n    normalizedTagSlug\n    __typename\n  }\n  type\n  __typename\n}\n\nfragment PublisherHeaderNavLink_publisher on Publisher {\n  __typename\n  id\n  ... on Collection {\n    slug\n    __typename\n    id\n  }\n}\n\nfragment PublisherHomepagePosts_publisher on Publisher {\n  __typename\n  id\n  homepagePostsConnection(\n    paging: {limit: $homepagePostsLimit, from: $homepagePostsFrom}\n    includeDistributedResponses: $includeDistributedResponses\n  ) {\n    posts {\n      inResponseToPostResult {\n        __typename\n      }\n      ...WithResponsesSidebar_post\n      ...PostPreview_post\n      __typename\n    }\n    pagingInfo {\n      next {\n        from\n        limit\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  ...CardByline_publisher\n  ...NewsletterV3Promo_publisher\n  ...PublisherHomepagePosts_user\n}\n\nfragment WithResponsesSidebar_post on Post {\n  id\n  ...ThreadedResponsesSidebar_post\n  __typename\n}\n\nfragment ThreadedResponsesSidebar_post on Post {\n  id\n  ...ThreadedResponsesSidebarContent_post\n  __typename\n}\n\nfragment ThreadedResponsesSidebarContent_post on Post {\n  id\n  postResponses {\n    count\n    __typename\n  }\n  collection {\n    id\n    viewerEdge {\n      id\n      isEditor\n      __typename\n    }\n    __typename\n  }\n  creator {\n    id\n    __typename\n  }\n  ...ThreadedReplies_post\n  __typename\n}\n\nfragment ThreadedReplies_post on Post {\n  __typename\n  id\n  ...ThreadedReply_post\n}\n\nfragment ThreadedReply_post on Post {\n  __typename\n  id\n  ...ReadOrEditSimpleResponse_post\n  ...StoryResponse_post\n}\n\nfragment ReadOrEditSimpleResponse_post on Post {\n  __typename\n  id\n  ...SimpleResponse_post\n}\n\nfragment SimpleResponse_post on Post {\n  id\n  ...ResponseHeader_post\n  __typename\n}\n\nfragment ResponseHeader_post on Post {\n  __typename\n  id\n  createdAt\n  firstPublishedAt\n  latestPublishedAt\n  creator {\n    id\n    name\n    ...UserAvatar_user\n    ...useIsVerifiedBookAuthor_user\n    ...UserMentionTooltip_user\n    __typename\n  }\n  ...ResponsePopoverMenu_post\n}\n\nfragment UserMentionTooltip_user on User {\n  id\n  name\n  username\n  bio\n  imageId\n  mediumMemberAt\n  membership {\n    tier\n    __typename\n    id\n  }\n  ...UserAvatar_user\n  ...UserFollowButton_user\n  ...useIsVerifiedBookAuthor_user\n  __typename\n}\n\nfragment ResponsePopoverMenu_post on Post {\n  id\n  ...ReportUserMenuItem_post\n  ...HideResponseMenuItem_post\n  ...BlockUserMenuItem_post\n  ...UndoClapsMenuItem_post\n  __typename\n}\n\nfragment ReportUserMenuItem_post on Post {\n  __typename\n  id\n  creator {\n    id\n    __typename\n  }\n  ...SusiClickable_post\n}\n\nfragment SusiClickable_post on Post {\n  id\n  mediumUrl\n  ...SusiContainer_post\n  __typename\n}\n\nfragment SusiContainer_post on Post {\n  id\n  __typename\n}\n\nfragment HideResponseMenuItem_post on Post {\n  __typename\n  id\n  collection {\n    id\n    viewerEdge {\n      id\n      isEditor\n      __typename\n    }\n    __typename\n  }\n  creator {\n    id\n    __typename\n  }\n}\n\nfragment BlockUserMenuItem_post on Post {\n  __typename\n  id\n  creator {\n    id\n    __typename\n  }\n}\n\nfragment UndoClapsMenuItem_post on Post {\n  id\n  clapCount\n  __typename\n}\n\nfragment StoryResponse_post on Post {\n  id\n  ...ResponseHeader_post\n  __typename\n}\n\nfragment PostPreview_post on Post {\n  id\n  creator {\n    ...PostPreview_user\n    __typename\n    id\n  }\n  collection {\n    ...CardByline_collection\n    ...ExpandablePostByline_collection\n    __typename\n    id\n  }\n  ...InteractivePostBody_postPreview\n  firstPublishedAt\n  isLocked\n  isSeries\n  latestPublishedAt\n  inResponseToCatalogResult {\n    __typename\n  }\n  pinnedAt\n  pinnedByCreatorAt\n  previewImage {\n    id\n    focusPercentX\n    focusPercentY\n    __typename\n  }\n  readingTime\n  sequence {\n    slug\n    __typename\n  }\n  title\n  uniqueSlug\n  ...CardByline_post\n  ...PostFooterActionsBar_post\n  ...InResponseToEntityPreview_post\n  ...PostScrollTracker_post\n  ...HighDensityPreview_post\n  __typename\n}\n\nfragment PostPreview_user on User {\n  __typename\n  name\n  username\n  ...CardByline_user\n  ...ExpandablePostByline_user\n  id\n}\n\nfragment CardByline_user on User {\n  __typename\n  id\n  name\n  username\n  mediumMemberAt\n  socialStats {\n    followerCount\n    __typename\n  }\n  ...useIsVerifiedBookAuthor_user\n  ...userUrl_user\n  ...UserMentionTooltip_user\n}\n\nfragment ExpandablePostByline_user on User {\n  __typename\n  id\n  name\n  imageId\n  ...userUrl_user\n  ...useIsVerifiedBookAuthor_user\n}\n\nfragment CardByline_collection on Collection {\n  name\n  ...collectionUrl_collection\n  __typename\n  id\n}\n\nfragment ExpandablePostByline_collection on Collection {\n  __typename\n  id\n  name\n  domain\n  slug\n}\n\nfragment InteractivePostBody_postPreview on Post {\n  extendedPreviewContent(\n    truncationConfig: {previewParagraphsWordCountThreshold: 400, minimumWordLengthForTruncation: 150, truncateAtEndOfSentence: true, showFullImageCaptions: true, shortformPreviewParagraphsWordCountThreshold: 30, shortformMinimumWordLengthForTruncation: 30}\n  ) {\n    bodyModel {\n      ...PostBody_bodyModel\n      __typename\n    }\n    isFullContent\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment PostBody_bodyModel on RichText {\n  sections {\n    name\n    startIndex\n    textLayout\n    imageLayout\n    backgroundImage {\n      id\n      originalHeight\n      originalWidth\n      __typename\n    }\n    videoLayout\n    backgroundVideo {\n      videoId\n      originalHeight\n      originalWidth\n      previewImageId\n      __typename\n    }\n    __typename\n  }\n  paragraphs {\n    id\n    ...PostBodySection_paragraph\n    __typename\n  }\n  ...normalizedBodyModel_richText\n  __typename\n}\n\nfragment PostBodySection_paragraph on Paragraph {\n  name\n  ...PostBodyParagraph_paragraph\n  __typename\n  id\n}\n\nfragment PostBodyParagraph_paragraph on Paragraph {\n  name\n  type\n  ...ImageParagraph_paragraph\n  ...TextParagraph_paragraph\n  ...IframeParagraph_paragraph\n  ...MixtapeParagraph_paragraph\n  ...CodeBlockParagraph_paragraph\n  __typename\n  id\n}\n\nfragment ImageParagraph_paragraph on Paragraph {\n  href\n  layout\n  metadata {\n    id\n    originalHeight\n    originalWidth\n    focusPercentX\n    focusPercentY\n    alt\n    __typename\n  }\n  ...Markups_paragraph\n  ...ParagraphRefsMapContext_paragraph\n  ...PostAnnotationsMarker_paragraph\n  __typename\n  id\n}\n\nfragment Markups_paragraph on Paragraph {\n  name\n  text\n  hasDropCap\n  dropCapImage {\n    ...MarkupNode_data_dropCapImage\n    __typename\n    id\n  }\n  markups {\n    ...Markups_markup\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment MarkupNode_data_dropCapImage on ImageMetadata {\n  ...DropCap_image\n  __typename\n  id\n}\n\nfragment DropCap_image on ImageMetadata {\n  id\n  originalHeight\n  originalWidth\n  __typename\n}\n\nfragment Markups_markup on Markup {\n  type\n  start\n  end\n  href\n  anchorType\n  userId\n  linkMetadata {\n    httpStatus\n    __typename\n  }\n  __typename\n}\n\nfragment ParagraphRefsMapContext_paragraph on Paragraph {\n  id\n  name\n  text\n  __typename\n}\n\nfragment PostAnnotationsMarker_paragraph on Paragraph {\n  ...PostViewNoteCard_paragraph\n  __typename\n  id\n}\n\nfragment PostViewNoteCard_paragraph on Paragraph {\n  name\n  __typename\n  id\n}\n\nfragment TextParagraph_paragraph on Paragraph {\n  type\n  hasDropCap\n  codeBlockMetadata {\n    mode\n    lang\n    __typename\n  }\n  ...Markups_paragraph\n  ...ParagraphRefsMapContext_paragraph\n  __typename\n  id\n}\n\nfragment IframeParagraph_paragraph on Paragraph {\n  type\n  iframe {\n    mediaResource {\n      id\n      iframeSrc\n      iframeHeight\n      iframeWidth\n      title\n      __typename\n    }\n    __typename\n  }\n  layout\n  ...Markups_paragraph\n  __typename\n  id\n}\n\nfragment MixtapeParagraph_paragraph on Paragraph {\n  type\n  mixtapeMetadata {\n    href\n    mediaResource {\n      mediumCatalog {\n        id\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  ...GenericMixtapeParagraph_paragraph\n  __typename\n  id\n}\n\nfragment GenericMixtapeParagraph_paragraph on Paragraph {\n  text\n  mixtapeMetadata {\n    href\n    thumbnailImageId\n    __typename\n  }\n  markups {\n    start\n    end\n    type\n    href\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment CodeBlockParagraph_paragraph on Paragraph {\n  codeBlockMetadata {\n    lang\n    mode\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment normalizedBodyModel_richText on RichText {\n  paragraphs {\n    ...normalizedBodyModel_richText_paragraphs\n    __typename\n  }\n  sections {\n    startIndex\n    ...getSectionEndIndex_section\n    __typename\n  }\n  ...getParagraphStyles_richText\n  ...getParagraphSpaces_richText\n  __typename\n}\n\nfragment normalizedBodyModel_richText_paragraphs on Paragraph {\n  markups {\n    ...normalizedBodyModel_richText_paragraphs_markups\n    __typename\n  }\n  codeBlockMetadata {\n    lang\n    mode\n    __typename\n  }\n  ...getParagraphHighlights_paragraph\n  ...getParagraphPrivateNotes_paragraph\n  __typename\n  id\n}\n\nfragment normalizedBodyModel_richText_paragraphs_markups on Markup {\n  type\n  __typename\n}\n\nfragment getParagraphHighlights_paragraph on Paragraph {\n  name\n  __typename\n  id\n}\n\nfragment getParagraphPrivateNotes_paragraph on Paragraph {\n  name\n  __typename\n  id\n}\n\nfragment getSectionEndIndex_section on Section {\n  startIndex\n  __typename\n}\n\nfragment getParagraphStyles_richText on RichText {\n  paragraphs {\n    text\n    type\n    __typename\n  }\n  sections {\n    ...getSectionEndIndex_section\n    __typename\n  }\n  __typename\n}\n\nfragment getParagraphSpaces_richText on RichText {\n  paragraphs {\n    layout\n    metadata {\n      originalHeight\n      originalWidth\n      id\n      __typename\n    }\n    type\n    ...paragraphExtendsImageGrid_paragraph\n    __typename\n  }\n  ...getSeriesParagraphTopSpacings_richText\n  ...getPostParagraphTopSpacings_richText\n  __typename\n}\n\nfragment paragraphExtendsImageGrid_paragraph on Paragraph {\n  layout\n  type\n  __typename\n  id\n}\n\nfragment getSeriesParagraphTopSpacings_richText on RichText {\n  paragraphs {\n    id\n    __typename\n  }\n  sections {\n    ...getSectionEndIndex_section\n    __typename\n  }\n  __typename\n}\n\nfragment getPostParagraphTopSpacings_richText on RichText {\n  paragraphs {\n    type\n    layout\n    text\n    codeBlockMetadata {\n      lang\n      mode\n      __typename\n    }\n    __typename\n  }\n  sections {\n    ...getSectionEndIndex_section\n    __typename\n  }\n  __typename\n}\n\nfragment CardByline_post on Post {\n  ...DraftStatus_post\n  ...Star_post\n  ...shouldShowPublishedInStatus_post\n  __typename\n  id\n}\n\nfragment DraftStatus_post on Post {\n  id\n  pendingCollection {\n    id\n    creator {\n      id\n      __typename\n    }\n    ...BoldCollectionName_collection\n    __typename\n  }\n  statusForCollection\n  creator {\n    id\n    __typename\n  }\n  isPublished\n  __typename\n}\n\nfragment BoldCollectionName_collection on Collection {\n  id\n  name\n  __typename\n}\n\nfragment Star_post on Post {\n  id\n  creator {\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment shouldShowPublishedInStatus_post on Post {\n  statusForCollection\n  isPublished\n  __typename\n  id\n}\n\nfragment PostFooterActionsBar_post on Post {\n  id\n  visibility\n  allowResponses\n  postResponses {\n    count\n    __typename\n  }\n  isLimitedState\n  creator {\n    id\n    __typename\n  }\n  collection {\n    id\n    __typename\n  }\n  ...MultiVote_post\n  ...PostSharePopover_post\n  ...OverflowMenuButtonWithNegativeSignal_post\n  ...PostPageBookmarkButton_post\n  __typename\n}\n\nfragment MultiVote_post on Post {\n  id\n  creator {\n    id\n    ...SusiClickable_user\n    __typename\n  }\n  isPublished\n  ...SusiClickable_post\n  collection {\n    id\n    slug\n    __typename\n  }\n  isLimitedState\n  ...MultiVoteCount_post\n  __typename\n}\n\nfragment MultiVoteCount_post on Post {\n  id\n  __typename\n}\n\nfragment PostSharePopover_post on Post {\n  id\n  mediumUrl\n  title\n  isPublished\n  isLocked\n  ...usePostUrl_post\n  ...FriendLink_post\n  __typename\n}\n\nfragment usePostUrl_post on Post {\n  id\n  creator {\n    ...userUrl_user\n    __typename\n    id\n  }\n  collection {\n    id\n    domain\n    slug\n    __typename\n  }\n  isSeries\n  mediumUrl\n  sequence {\n    slug\n    __typename\n  }\n  uniqueSlug\n  __typename\n}\n\nfragment FriendLink_post on Post {\n  id\n  ...SusiClickable_post\n  ...useCopyFriendLink_post\n  ...UpsellClickable_post\n  __typename\n}\n\nfragment useCopyFriendLink_post on Post {\n  ...usePostUrl_post\n  __typename\n  id\n}\n\nfragment UpsellClickable_post on Post {\n  id\n  collection {\n    id\n    __typename\n  }\n  sequence {\n    sequenceId\n    __typename\n  }\n  creator {\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment OverflowMenuButtonWithNegativeSignal_post on Post {\n  id\n  visibility\n  ...OverflowMenuWithNegativeSignal_post\n  __typename\n}\n\nfragment OverflowMenuWithNegativeSignal_post on Post {\n  id\n  creator {\n    id\n    __typename\n  }\n  collection {\n    id\n    __typename\n  }\n  ...OverflowMenuItemUndoClaps_post\n  ...AddToCatalogBase_post\n  __typename\n}\n\nfragment OverflowMenuItemUndoClaps_post on Post {\n  id\n  clapCount\n  ...ClapMutation_post\n  __typename\n}\n\nfragment ClapMutation_post on Post {\n  __typename\n  id\n  clapCount\n  ...MultiVoteCount_post\n}\n\nfragment AddToCatalogBase_post on Post {\n  id\n  isPublished\n  __typename\n}\n\nfragment PostPageBookmarkButton_post on Post {\n  ...AddToCatalogBookmarkButton_post\n  __typename\n  id\n}\n\nfragment AddToCatalogBookmarkButton_post on Post {\n  ...AddToCatalogBase_post\n  __typename\n  id\n}\n\nfragment InResponseToEntityPreview_post on Post {\n  id\n  inResponseToEntityType\n  __typename\n}\n\nfragment PostScrollTracker_post on Post {\n  id\n  collection {\n    id\n    __typename\n  }\n  sequence {\n    sequenceId\n    __typename\n  }\n  __typename\n}\n\nfragment HighDensityPreview_post on Post {\n  id\n  title\n  previewImage {\n    id\n    focusPercentX\n    focusPercentY\n    __typename\n  }\n  extendedPreviewContent(\n    truncationConfig: {previewParagraphsWordCountThreshold: 400, minimumWordLengthForTruncation: 150, truncateAtEndOfSentence: true, showFullImageCaptions: true, shortformPreviewParagraphsWordCountThreshold: 30, shortformMinimumWordLengthForTruncation: 30}\n  ) {\n    subtitle\n    __typename\n  }\n  ...HighDensityFooter_post\n  __typename\n}\n\nfragment HighDensityFooter_post on Post {\n  id\n  readingTime\n  tags {\n    ...TopicPill_tag\n    __typename\n  }\n  ...BookmarkButton_post\n  ...ExpandablePostCardOverflowButton_post\n  ...OverflowMenuButtonWithNegativeSignal_post\n  __typename\n}\n\nfragment TopicPill_tag on Tag {\n  __typename\n  id\n  displayTitle\n  normalizedTagSlug\n}\n\nfragment BookmarkButton_post on Post {\n  visibility\n  ...SusiClickable_post\n  ...AddToCatalogBookmarkButton_post\n  __typename\n  id\n}\n\nfragment ExpandablePostCardOverflowButton_post on Post {\n  creator {\n    id\n    __typename\n  }\n  ...ExpandablePostCardReaderButton_post\n  __typename\n  id\n}\n\nfragment ExpandablePostCardReaderButton_post on Post {\n  id\n  collection {\n    id\n    __typename\n  }\n  creator {\n    id\n    __typename\n  }\n  clapCount\n  ...ClapMutation_post\n  __typename\n}\n\nfragment CardByline_publisher on Publisher {\n  __typename\n  ... on User {\n    id\n    ...CardByline_user\n    __typename\n  }\n  ... on Collection {\n    id\n    ...CardByline_collection\n    __typename\n  }\n}\n\nfragment NewsletterV3Promo_publisher on Publisher {\n  __typename\n  ... on User {\n    ...NewsletterV3Promo_user\n    __typename\n    id\n  }\n  ... on Collection {\n    ...NewsletterV3Promo_collection\n    __typename\n    id\n  }\n}\n\nfragment NewsletterV3Promo_user on User {\n  id\n  username\n  name\n  viewerEdge {\n    isUser\n    __typename\n    id\n  }\n  newsletterV3 {\n    id\n    ...NewsletterV3Promo_newsletterV3\n    __typename\n  }\n  __typename\n}\n\nfragment NewsletterV3Promo_newsletterV3 on NewsletterV3 {\n  slug\n  name\n  description\n  promoHeadline\n  promoBody\n  ...NewsletterSubscribeComponent_newsletterV3\n  __typename\n  id\n}\n\nfragment NewsletterSubscribeComponent_newsletterV3 on NewsletterV3 {\n  ...NewsletterV3SubscribeButton_newsletterV3\n  ...NewsletterV3SubscribeByEmail_newsletterV3\n  __typename\n  id\n}\n\nfragment NewsletterV3SubscribeButton_newsletterV3 on NewsletterV3 {\n  id\n  name\n  slug\n  type\n  user {\n    id\n    name\n    username\n    __typename\n  }\n  collection {\n    slug\n    ...SusiClickable_collection\n    ...collectionDefaultBackgroundTheme_collection\n    __typename\n    id\n  }\n  ...SusiClickable_newsletterV3\n  ...useNewsletterV3Subscription_newsletterV3\n  __typename\n}\n\nfragment collectionDefaultBackgroundTheme_collection on Collection {\n  colorPalette {\n    ...collectionDefaultBackgroundTheme_colorPalette\n    __typename\n  }\n  customStyleSheet {\n    id\n    ...collectionDefaultBackgroundTheme_customStyleSheet\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment collectionDefaultBackgroundTheme_colorPalette on ColorPalette {\n  ...customDefaultBackgroundTheme_colorPalette\n  __typename\n}\n\nfragment customDefaultBackgroundTheme_colorPalette on ColorPalette {\n  highlightSpectrum {\n    ...ThemeUtil_colorSpectrum\n    __typename\n  }\n  defaultBackgroundSpectrum {\n    ...ThemeUtil_colorSpectrum\n    __typename\n  }\n  tintBackgroundSpectrum {\n    ...ThemeUtil_colorSpectrum\n    __typename\n  }\n  __typename\n}\n\nfragment collectionDefaultBackgroundTheme_customStyleSheet on CustomStyleSheet {\n  id\n  ...customDefaultBackgroundTheme_customStyleSheet\n  __typename\n}\n\nfragment customDefaultBackgroundTheme_customStyleSheet on CustomStyleSheet {\n  id\n  global {\n    colorPalette {\n      primary {\n        colorPalette {\n          ...customDefaultBackgroundTheme_colorPalette\n          __typename\n        }\n        __typename\n      }\n      background {\n        colorPalette {\n          ...customDefaultBackgroundTheme_colorPalette\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment SusiClickable_newsletterV3 on NewsletterV3 {\n  ...SusiContainer_newsletterV3\n  __typename\n  id\n}\n\nfragment SusiContainer_newsletterV3 on NewsletterV3 {\n  ...SignInOptions_newsletterV3\n  ...SignUpOptions_newsletterV3\n  __typename\n  id\n}\n\nfragment SignInOptions_newsletterV3 on NewsletterV3 {\n  id\n  name\n  __typename\n}\n\nfragment SignUpOptions_newsletterV3 on NewsletterV3 {\n  id\n  name\n  __typename\n}\n\nfragment NewsletterV3SubscribeByEmail_newsletterV3 on NewsletterV3 {\n  id\n  slug\n  type\n  user {\n    id\n    name\n    username\n    __typename\n  }\n  collection {\n    ...collectionDefaultBackgroundTheme_collection\n    ...collectionUrl_collection\n    __typename\n    id\n  }\n  __typename\n}\n\nfragment NewsletterV3Promo_collection on Collection {\n  id\n  slug\n  domain\n  name\n  newsletterV3 {\n    id\n    ...NewsletterV3Promo_newsletterV3\n    __typename\n  }\n  __typename\n}\n\nfragment PublisherHomepagePosts_user on User {\n  id\n  ...useShowAuthorNewsletterV3Promo_user\n  __typename\n}\n\nfragment useShowAuthorNewsletterV3Promo_user on User {\n  id\n  username\n  newsletterV3 {\n    id\n    showPromo\n    slug\n    __typename\n  }\n  __typename\n}\n\nfragment UserProfileMetadata_user on User {\n  id\n  username\n  name\n  bio\n  socialStats {\n    followerCount\n    followingCount\n    __typename\n  }\n  ...userUrl_user\n  ...UserProfileMetadataHelmet_user\n  __typename\n}\n\nfragment UserProfileMetadataHelmet_user on User {\n  username\n  name\n  imageId\n  twitterScreenName\n  navItems {\n    title\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment SuspendedBannerLoader_user on User {\n  id\n  isSuspended\n  __typename\n}\n\nfragment useAnalytics_user on User {\n  id\n  imageId\n  name\n  username\n  __typename\n}\n\nfragment UserProfileBooks_user on User {\n  username\n  authoredBooks {\n    ...BookWidget_authorBook\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment BookWidget_authorBook on AuthorBook {\n  authors {\n    name\n    user {\n      id\n      __typename\n    }\n    __typename\n  }\n  description\n  title\n  links {\n    title\n    url\n    __typename\n  }\n  publicationDate\n  ...BookCover_authorBook\n  __typename\n}\n\nfragment BookCover_authorBook on AuthorBook {\n  coverImageId\n  __typename\n}\n""
  }
]);

var requestOptions = {
  method: 'POST',
  headers: myHeaders,
  body: raw,
  redirect: 'follow'
};

fetch(""https://api.medium.com/_/graphql"", requestOptions)
  .then(response => response.text())
  .then(result => console.log(result))
  .catch(error => console.log('error', error));"
KUT4ceG2,Java Chat,Shamba,Java,Sunday 21st of January 2024 04:02:17 AM CDT,"import java.awt.FlowLayout;

import javax.swing.text.AttributeSet;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.border.Border;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;

import java.awt.Color;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;

import java.net.ServerSocket;
import java.net.Socket;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

class Friends {
    private String name;
    private String ip;
    private int port;

    Friends(String name, String ip, int port) {
        this.name = name;
        this.ip = ip;
        this.port = port;
    }

    public String getName() {
        return name;
    }
    public String getIP() {
        return ip;
    }
    public int getPort() {
        return port;
    }

    @Override
    public String toString() {
        return name;
    }

    public boolean equals(Friends f) {
        return (this.ip.equalsIgnoreCase(f.getIP()) && this.port == f.getPort());
    }
}

class ChatContent {
    private String content;
    private StyledDocument contentStyle;

    ChatContent(String content, StyledDocument contentStyle) {
        this.content = content;
        this.contentStyle = contentStyle;
    }

    public String getContent() {
        return content;
    }
    public StyledDocument getContentStyle() {
        return contentStyle;
    }
}

public class client extends JFrame implements Runnable {
    List<Friends> selectedFriends = new ArrayList<Friends>();

    ServerSocket rootSocket;
    Socket connectionSocket;

    private int ownPort = 9090;

    JTextPane chatHistory;
    ChatContent defaultChatContent;

    JList friendsList;
    DefaultListModel<Friends> model = new DefaultListModel<Friends>();

    Map<String, ChatContent> friendsChatHistory = new HashMap<String, ChatContent>();
    Friends lastSelectedFriend = null;
    
    public client() {
        setTitle(""IRC Java"");
        setSize(1024, 768);
        setDefaultCloseOperation(EXIT_ON_CLOSE);

        init();
    }
    public client(int ownPort) {
        this.ownPort = ownPort;

        setTitle(""IRC Java"");
        setSize(1024, 768);
        setDefaultCloseOperation(EXIT_ON_CLOSE);

        init();
    }

    private void appendToPane(JTextPane tp, String msg, Color C) {
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aSet = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground, C);

        int len = tp.getDocument().getLength();
        tp.setCaretPosition(len);
        tp.setCharacterAttributes(aSet, false);
        tp.replaceSelection(msg);
    }

    private void init() {
        GridBagLayout gb = new GridBagLayout();
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(4, 4, 4, 4);

        // setLayout(new FlowLayout());

        JPanel mainPanel = new JPanel(gb);
        mainPanel.setBackground(new Color(55, 55, 55));

        Font font = new Font(""Calibri"", Font.PLAIN, 30);

        gbc.weightx = 12;
        JLabel chatTitle = new JLabel(""Chat History"");
        chatTitle.setForeground(Color.WHITE);
        chatTitle.setFont(font);
        gb.setConstraints(chatTitle, gbc);

        gbc.weightx = 2;
        gbc.gridwidth = GridBagConstraints.REMAINDER;
        JLabel listTitle = new JLabel(""Friends"");
        listTitle.setForeground(Color.WHITE);
        listTitle.setFont(font);
        gb.setConstraints(listTitle, gbc);

        Border border = BorderFactory.createLineBorder(Color.BLACK, 4, true);

        gbc.weightx = 12;
        gbc.weighty = 12;
        gbc.gridwidth = GridBagConstraints.RELATIVE;
        chatHistory = new JTextPane();
        chatHistory.setFont(new Font(""Calibri"", Font.ITALIC, 22));
        appendToPane(chatHistory, ""Your chat begins here //\n"", new Color(93, 173, 92));
        chatHistory.setEditable(false);
        chatHistory.setFont(new Font(""Calibri"", Font.PLAIN, 22));
        StyledDocument defaultDoc = chatHistory.getStyledDocument();
        String defaultDocContent = chatHistory.getText();
        defaultChatContent = new ChatContent(defaultDocContent, defaultDoc);


        JScrollPane chatScroll = new JScrollPane(chatHistory);
        chatScroll.setBorder(border);
        gb.setConstraints(chatScroll, gbc);

        gbc.weightx = 2;
        gbc.gridwidth = GridBagConstraints.REMAINDER;

        friendsList = new JList(model);
        friendsList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        friendsList.setFont(new Font(""Calibri"", Font.PLAIN, 22));
        JScrollPane frndScroll = new JScrollPane(friendsList);
        frndScroll.setBorder(border);
        gb.setConstraints(frndScroll, gbc);

        friendsList.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                selectedFriends = friendsList.getSelectedValuesList();

                if(lastSelectedFriend != null) {
                    friendsChatHistory.replace(lastSelectedFriend.getName(), new ChatContent(chatHistory.getText(), chatHistory.getStyledDocument()));
                }
                lastSelectedFriend = (Friends) friendsList.getSelectedValue();
                ChatContent tempContent = friendsChatHistory.get(lastSelectedFriend.getName());
                chatHistory.setStyledDocument(tempContent.getContentStyle());
                chatHistory.setText(tempContent.getContent());
            }
        });

        gbc.weightx = 14;
        gbc.weighty = 1;
        gbc.gridwidth = GridBagConstraints.REMAINDER;
        JTextField messageField = new JTextField();
        gb.setConstraints(messageField, gbc);

        gbc.weightx = 1;
        // gbc.gridwidth = GridBagConstraints.RELATIVE;
        gbc.gridwidth = 1;
        JLabel nameLabel = new JLabel(""Name"");
        nameLabel.setForeground(Color.WHITE);
        nameLabel.setFont(font);
        gb.setConstraints(nameLabel, gbc);

        gbc.weightx = 4;
        JTextField nameField = new JTextField();
        gb.setConstraints(nameField, gbc);

        gbc.weightx = 1;
        JLabel IPLabel = new JLabel(""IP"");
        IPLabel.setForeground(Color.WHITE);
        IPLabel.setFont(font);
        gb.setConstraints(IPLabel, gbc);

        gbc.weightx = 4;
        JTextField IPfield = new JTextField();
        gb.setConstraints(IPfield, gbc);

        gbc.weightx = 1;
        JLabel PortLabel = new JLabel(""Port"");
        PortLabel.setForeground(Color.WHITE);
        PortLabel.setFont(font);
        gb.setConstraints(PortLabel, gbc);

        JTextField Portfield = new JTextField();
        gb.setConstraints(Portfield, gbc);

        JButton addButton = new JButton(""Add"");
        gbc.gridwidth = GridBagConstraints.RELATIVE;
        gb.setConstraints(addButton, gbc);

        addButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String fName = nameField.getText();
                String ip = IPfield.getText();
                if(ip.equalsIgnoreCase(""localhost"")) {
                    ip = ""127.0.0.1"";
                }
                int port = Integer.parseInt(Portfield.getText());
                Friends f = new Friends(fName, ip, port);

                model.addElement(f);
                friendsChatHistory.put(f.getName(), defaultChatContent);
                friendsList.setSelectedIndex(model.getSize() - 1);
                nameField.setText("""");
                IPfield.setText("""");
                Portfield.setText("""");
                System.out.println(""Added ""+ fName + "" "" + ip + "":"" + port);
            }         
            
        });

        gbc.gridwidth = GridBagConstraints.REMAINDER;
        JButton sendButton = new JButton(""Send"");
        gb.setConstraints(sendButton, gbc);

        messageField.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                sendButton.doClick();
            }
        });
        sendButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(model.isEmpty()) {
                    JOptionPane.showMessageDialog(mainPanel, ""No friends, make some first."", ""Warning"", JOptionPane.WARNING_MESSAGE);
                }

                String msg = messageField.getText();

                for(Friends f : selectedFriends) {
                    try {
                        sendMessage(msg, f);
                        messageField.setText("""");
                    }
                    catch(Exception err) {
                        err.printStackTrace();
                    }
                }
            }
        });


        mainPanel.add(chatTitle);
        mainPanel.add(listTitle);
        mainPanel.add(chatScroll);
        mainPanel.add(frndScroll);
        mainPanel.add(messageField);

        mainPanel.add(nameLabel);
        mainPanel.add(nameField);
        mainPanel.add(IPLabel);
        mainPanel.add(IPfield);
        mainPanel.add(PortLabel);
        mainPanel.add(Portfield);

        mainPanel.add(addButton);
        mainPanel.add(sendButton);

        add(mainPanel);
    }

    private void sendMessage(String msg, Friends f) throws Exception {
        Socket clientSocket = new Socket(f.getIP(), f.getPort());
        OutputStream outToFriend = clientSocket.getOutputStream();
        String ipDets = clientSocket.getLocalAddress().toString() + "":"" + ownPort + ""\n"";
        outToFriend.write(ipDets.getBytes());
        msg += ""\n"";
        outToFriend.write(msg.getBytes());

        for(int i = 0; i < model.getSize(); i++) {
            Friends fList = model.getElementAt(i);
            if(fList.equals(f)) {
                friendsList.setSelectedIndex(i);
                break;
            }
        }

        chatHistory.setEditable(true);
        appendToPane(chatHistory, ""You: "" + msg, new Color(227, 50, 68));
        chatHistory.setEditable(false);
    }

    @Override
    public void run() {
        try {
            rootSocket = new ServerSocket(ownPort);

            while(true) {
                connectionSocket = rootSocket.accept();

                BufferedReader inFromFriend = new BufferedReader(new InputStreamReader(connectionSocket.getInputStream()));
                String ipDets = inFromFriend.readLine();
                String remoteIP = ipDets.split("":"")[0].replace(""/"", """");
                int remoteServerPort = Integer.parseInt(ipDets.split("":"")[1]);

                String friendName = """";
                boolean isExistingFriend = false;
                for(int i = 0; i < model.getSize(); i++) {
                    Friends fList = model.getElementAt(i);
                    Friends fTemp = new Friends(""Anon"", remoteIP, remoteServerPort);

                    if(fList.equals(fTemp)) {
                        isExistingFriend = true;
                        friendName = fList.getName();
                        break;
                    }
                }

                if(!isExistingFriend) {
                    model.addElement(new Friends(""Anon"" + model.getSize(), remoteIP, remoteServerPort));
                    friendName = ""Anon"" + (model.getSize() - 1);
                    friendsChatHistory.put(friendName, defaultChatContent);
                    friendsList.setSelectedIndex(model.getSize() - 1);
                    System.out.println(""Added "" + ""Anon"" + (model.getSize() - 1) + "" "" + remoteIP + "":"" + remoteServerPort);
                }

                String msg = inFromFriend.readLine();
                connectionSocket.close();
                chatHistory.setEditable(true);
                appendToPane(chatHistory, friendName + "": "" + msg + ""\n"", new Color(68, 83, 199));
                chatHistory.setEditable(false);
                continue;
            }

        }
        catch(IOException err) {
            err.printStackTrace();
        }
    }

    public int getClientPort() {
        return ownPort;
    }

    public static void main(String[] args) {
        client C = null;
        if(args.length != 0) {
            int portArg = Integer.parseInt(args[0]);
            C = new client(portArg);
        }
        else {
            C = new client();
        }
        System.out.println(""Opening server at port "" + C.getClientPort());
        C.setVisible(true);

        Thread t1 = new Thread(C);
        t1.start();
    }
}"
BieU4akQ,ping pong,plarmi,Python,Sunday 21st of January 2024 03:52:11 AM CDT,"import tkinter as tk
import random

# Размеры окна
WIDTH = 500
HEIGHT = 300

# Размеры ракеток и мяча
PAD_WIDTH = 10
PAD_HEIGHT = 60
BALL_SIZE = 20

# Скорость мяча
BALL_SPEED_X = 5
BALL_SPEED_Y = 5

# Функция для движения мяча
def move_ball():
    global ball_pos, ball_speed

    ball_pos[0] += ball_speed[0]
    ball_pos[1] += ball_speed[1]

    # Отскок от верхней и нижней границ
    if ball_pos[1] <= 0 or ball_pos[1] >= HEIGHT - BALL_SIZE:
        ball_speed[1] = -ball_speed[1]

    # Отскок от ракеток
    if (
        (ball_pos[0] <= pad_left_pos[0] + PAD_WIDTH and
         pad_left_pos[1] <= ball_pos[1] <= pad_left_pos[1] + PAD_HEIGHT) or
        (ball_pos[0] >= pad_right_pos[0] - BALL_SIZE - PAD_WIDTH and
         pad_right_pos[1] <= ball_pos[1] <= pad_right_pos[1] + PAD_HEIGHT)
    ):
        ball_speed[0] = -ball_speed[0]

    # Проверка на окончание игры (мяч за пределами экрана)
    if ball_pos[0] < 0 or ball_pos[0] > WIDTH:
        reset_game()

    canvas.delete(""all"")
    canvas.create_rectangle(pad_left_pos, pad_left_pos[0] + PAD_WIDTH, pad_left_pos[1] + PAD_HEIGHT, fill=""blue"")
    canvas.create_rectangle(pad_right_pos, pad_right_pos[0] + PAD_WIDTH, pad_right_pos[1] + PAD_HEIGHT, fill=""red"")
    canvas.create_oval(ball_pos, ball_pos[0] + BALL_SIZE, ball_pos[1] + BALL_SIZE, fill=""black"")

    root.after(20, move_ball)

# Функция для перемещения левой ракетки вверх
def move_pad_left_up(event):
    pad_left_pos[1] -= 20

# Функция для перемещения левой ракетки вниз
def move_pad_left_down(event):
    pad_left_pos[1] += 20

def move_pad_right_up(event):
    pad_right_pos[1] -= 20

# Функция для перемещения левой ракетки вниз
def move_pad_right_down(event):
    pad_right_pos[1] += 20

# Функция для сброса игры
def reset_game():
    global ball_pos, ball_speed
    ball_pos = [WIDTH // 2 - BALL_SIZE // 2, HEIGHT // 2 - BALL_SIZE // 2]
    ball_speed = [BALL_SPEED_X, BALL_SPEED_Y * random.choice([-1, 1])]

# Создание основного окна
root = tk.Tk()
root.title(""Пинг-понг"")
root.resizable(False, False)

# Создание элемента Canvas для отображения игрового поля
canvas = tk.Canvas(root, width=WIDTH, height=HEIGHT, bg=""white"")
canvas.pack()


# Инициализация начальных позиций и скорости
pad_left_pos = [10, HEIGHT // 2 - PAD_HEIGHT // 2]
pad_right_pos = [WIDTH - 10 - PAD_WIDTH, HEIGHT // 2 - PAD_HEIGHT // 2]
ball_pos = [WIDTH // 2 - BALL_SIZE // 2, HEIGHT // 2 - BALL_SIZE // 2]
ball_speed = [BALL_SPEED_X, BALL_SPEED_Y * random.choice([-1, 1])]

# Привязка клавиш к движению левой ракетки
root.bind(""<Up>"", move_pad_right_up)
root.bind(""<Down>"", move_pad_right_down)
root.bind(""w"", move_pad_left_up)
root.bind(""W"", move_pad_left_up)
root.bind(""S"", move_pad_left_down)
root.bind(""s"", move_pad_left_down)

# Сброс игры при первом запуске
reset_game()

# Запуск функции движения мяча
move_ball()

# Запуск основного цикла
root.mainloop()
"
00GJU1mR,whitelist,Aimbass,JSON,Sunday 21st of January 2024 02:44:14 AM CDT,"{
     ""cmd"": [
         ""echo Hello world!""
     ],
     ""licenses"": [
         ""0.0.0.0"";
         ""1.1.1.1""
     ]
}"
1GM8Hx6s,snowybot,coinwalk,JavaScript,Sunday 21st of January 2024 12:29:57 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((0.00001).toFixed(8));
var bellance = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*5.9);
var eights = (base*6.9);
var muck = 4;
var upper = 6.9;
var downer = 2.9;
var bob = oldestbal;
var fart = ((Math.floor(oldestbal/tens))*tens);
var james = ((Math.floor(oldestbal/tens))*tens);
var betnext = ((botplus*1).toFixed(8));
 
 
function get(){
bellance = document.getElementById('pct_balance').value;
var good = ((bellance-oldestbal).toFixed(8));
console.clear();
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
    botplus = botplus*2;
    upper = 4.9;
    downer = 4.9;
    fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
    botplus = botplus*2;
    upper = 4.9;
    downer = 4.9;
    fart = parseFloat(bellance);
}
if ((bellance-(botplus*2)<=(bob-(botplus*8)))&&(bellance!=fart)){
    botplus = base;
    upper = 5.9;
    downer = 1.9;
    fart = ((Math.floor(bellance/tens))*tens);
    bob = parseFloat(bellance);
}
if ((bellance>=(bob+(botplus*8)))&&(bellance!=fart)){
    botplus = base;
    upper = 5.9;
    downer = 1.9;
    fart = ((Math.floor(bellance/tens))*tens);
    bob = parseFloat(bellance);
}
if (((bellance-(botplus*2))<=0)&&(bellance!=fart)){
    botplus = base;
    upper = 5.9;
    downer = 1.9;
    fart = ((Math.floor(bellance/tens))*tens);
    bob = parseFloat(bellance);
}
if (bellance>=(oldestbal*24)) {
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 10);
}
get();"
3Qh2gdUQ,GameItemGenerator 1_21_2024,Krythic,C#,Sunday 21st of January 2024 12:28:53 AM CDT,"using Assets.Resources.Scripts;
using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;

/// <summary>
/// The Order of these enums determines property order
/// for display purposes. IE: The properties located at
/// the top of the enumeration are sorted to the top
/// of item descriptions
/// </summary>
public enum MagicPropertyType
{
    None,
    Stat_Strength_Mod,
    Stat_Defense_Mod,
    Stat_Vitality_Mod,
    Stat_Intellect_Mod,
    Stat_Wisdom_Mod,
    Stat_Spirit_Mod,
    DamageVs_Aberrations,
    DamageVs_Beasts,
    DamageVs_Demons,
    DamageVs_Undead,
    ElementalMastery_Arcane,
    ElementalMastery_Cold,
    ElementalMastery_Fire,
    ElementalMastery_Holy,
    ElementalMastery_Poison,
    ElementalMastery_Shadow,
    ElementalMastery_Shock,
    EnhancedBlockChance_Mod,
    EnhancedWeaponDamage_Mult,
    ExtraDamage_Arcane,
    ExtraDamage_Cold,
    ExtraDamage_Fire,
    ExtraDamage_Holy,
    ExtraDamage_Poison,
    ExtraDamage_Shadow,
    ExtraDamage_Shock,
    Resist_All,
    Resist_Arcane,
    Resist_Cold,
    Resist_Fire,
    Resist_Holy,
    Resist_Poison,
    Resist_Shadow,
    Resist_Shock,
    WeaponMastery_Axes,
    WeaponMastery_Bows,
    WeaponMastery_Daggers,
    WeaponMastery_Knuckles,
    WeaponMastery_Maces,
    WeaponMastery_Staves,
    WeaponMastery_Swords,
    WeaponMastery_Wands,
}

public class MagicPropertyTemplate
{
    public MagicPropertyType property;
    public VoidwalkerRange levelBracket;
    public AffixType affixType;
    public VoidwalkerRange valueRange;
    public GameItemType[] constraints;
    public int weight;

    public MagicPropertyTemplate()
    {

    }
}

public enum GameItemCraftmanship
{
    None,
    Normal, // Iron 0-25
    Exceptional, // Titanite 26-50
    Exquisite, // Mythrite 51-75
    Masterwork // Eternium 76-100
}

public enum AffixType
{
    Any,
    Prefix,
    Suffix,
}

public class GameItemGenerator
{
    private GameItemNameGenerator _nameGenerator;
    private VoidwalkerRandom _random;
    private List<MagicPropertyTemplate> _magicPropertyTemplates;
    private Dictionary<string, MagicPropertyType> _magicPropertyTypeConverter;
    private Dictionary<string, GameItemType> _gameItemTypeConverter;

    public GameItemGenerator()
    {
        _nameGenerator = new GameItemNameGenerator();
        _random = new VoidwalkerRandom();
        InitializeMagicProperties();
    }

    private void InitializeMagicProperties()
    {
        _magicPropertyTypeConverter = new Dictionary<string, MagicPropertyType>
        {
            { ""DamageVs_Aberrations"", MagicPropertyType.DamageVs_Aberrations },
            { ""DamageVs_Beasts"", MagicPropertyType.DamageVs_Beasts },
            { ""DamageVs_Demons"", MagicPropertyType.DamageVs_Demons },
            { ""DamageVs_Undead"", MagicPropertyType.DamageVs_Undead },
            { ""ElementalMastery_Arcane"", MagicPropertyType.ElementalMastery_Arcane },
            { ""ElementalMastery_Cold"", MagicPropertyType.ElementalMastery_Cold },
            { ""ElementalMastery_Fire"", MagicPropertyType.ElementalMastery_Fire },
            { ""ElementalMastery_Holy"", MagicPropertyType.ElementalMastery_Holy },
            { ""ElementalMastery_Poison"", MagicPropertyType.ElementalMastery_Poison },
            { ""ElementalMastery_Shadow"", MagicPropertyType.ElementalMastery_Shadow },
            { ""ElementalMastery_Shock"", MagicPropertyType.ElementalMastery_Shock },
            { ""EnhancedBlockChance"", MagicPropertyType.EnhancedBlockChance_Mod },
            { ""EnhancedWeaponDamage"", MagicPropertyType.EnhancedWeaponDamage_Mult },
            { ""ExtraDamage_Arcane"", MagicPropertyType.ExtraDamage_Arcane },
            { ""ExtraDamage_Cold"", MagicPropertyType.ExtraDamage_Cold },
            { ""ExtraDamage_Fire"", MagicPropertyType.ExtraDamage_Fire },
            { ""ExtraDamage_Holy"", MagicPropertyType.ExtraDamage_Holy },
            { ""ExtraDamage_Poison"", MagicPropertyType.ExtraDamage_Poison },
            { ""ExtraDamage_Shadow"", MagicPropertyType.ExtraDamage_Shadow },
            { ""ExtraDamage_Shock"", MagicPropertyType.ExtraDamage_Shock },
            { ""Resist_All"", MagicPropertyType.Resist_All },
            { ""Resist_Arcane"", MagicPropertyType.Resist_Arcane },
            { ""Resist_Cold"", MagicPropertyType.Resist_Cold },
            { ""Resist_Fire"", MagicPropertyType.Resist_Fire },
            { ""Resist_Holy"", MagicPropertyType.Resist_Holy },
            { ""Resist_Poison"", MagicPropertyType.Resist_Poison },
            { ""Resist_Shadow"", MagicPropertyType.Resist_Shadow },
            { ""Resist_Shock"", MagicPropertyType.Resist_Shock },
            { ""Stat_Defense_Mod"", MagicPropertyType.Stat_Defense_Mod },
            { ""Stat_Intellect_Mod"", MagicPropertyType.Stat_Intellect_Mod },
            { ""Stat_Strength_Mod"", MagicPropertyType.Stat_Strength_Mod },
            { ""Stat_Vitality_Mod"", MagicPropertyType.Stat_Vitality_Mod },
            { ""Stat_Wisdom_Mod"", MagicPropertyType.Stat_Wisdom_Mod },
            { ""Stat_Spirit_Mod"", MagicPropertyType.Stat_Spirit_Mod },
            { ""WeaponMastery_Axes"", MagicPropertyType.WeaponMastery_Axes },
            { ""WeaponMastery_Bows"", MagicPropertyType.WeaponMastery_Bows },
            { ""WeaponMastery_Daggers"", MagicPropertyType.WeaponMastery_Daggers },
            { ""WeaponMastery_Knuckles"", MagicPropertyType.WeaponMastery_Knuckles },
            { ""WeaponMastery_Maces"", MagicPropertyType.WeaponMastery_Maces },
            { ""WeaponMastery_Staves"", MagicPropertyType.WeaponMastery_Staves },
            { ""WeaponMastery_Swords"", MagicPropertyType.WeaponMastery_Swords },
            { ""WeaponMastery_Wands"", MagicPropertyType.WeaponMastery_Wands },
        };


        _gameItemTypeConverter = new Dictionary<string, GameItemType>
        {
            { ""Daggers"", GameItemType.Weapon_Dagger },
            { ""Bows"", GameItemType.Weapon_Bow },
            { ""Knuckles"", GameItemType.Weapon_Knuckle },
            { ""Staves"", GameItemType.Weapon_Staff },
            { ""Wands"", GameItemType.Weapon_Wand },
            { ""Swords"", GameItemType.Weapon_Sword },
            { ""GreatSwords"", GameItemType.Weapon_Greatsword },
            { ""Axes"", GameItemType.Weapon_Axe },
            { ""GreatAxes"", GameItemType.Weapon_Greataxe },
            { ""Maces"", GameItemType.Weapon_Mace },
            { ""GreatMaces"", GameItemType.Weapon_GreatMace },
            { ""Shields"", GameItemType.Shield },
            { ""Headwear"", GameItemType.Headwear },
            { ""Chestwear"", GameItemType.Chestwear },
            { ""Handwear"", GameItemType.Handwear },
            { ""Footwear"", GameItemType.Footwear },
            { ""Amulets"", GameItemType.Jewelry_Amulet },
            { ""Rings"", GameItemType.Jewelry_Ring },
            { ""Charms"", GameItemType.Jewelry_Charm }
        };


        /**
         * Load MagicProperties.txt
         */
        this._magicPropertyTemplates = new List<MagicPropertyTemplate>();
        TextAsset mytxtData = Resources.Load<TextAsset>(""Data/MagicProperties"");
        string[] magicPropertyData = mytxtData.text.Split(""\n"");
        foreach (string line in magicPropertyData)
        {
            string[] lineData = line.Split(""\t"");
            string[] constraints = RemoveFormatting(lineData[5]).Split("","");
            MagicPropertyTemplate template = new MagicPropertyTemplate()
            {
                property = ParseMagicPropertyType(lineData[0]),
                levelBracket = VoidwalkerRange.Parse(lineData[1]),
                affixType = ParseAffixType(lineData[2]),
                valueRange = VoidwalkerRange.Parse(lineData[3]),
                weight = Int32.Parse(lineData[4]),
                constraints = ParseGameItemConstraints(constraints)
            };
            this._magicPropertyTemplates.Add(template);
        }
    }

    private AffixType ParseAffixType(string affixType)
    {
        switch (affixType)
        {
            case ""Prefix"":
                return AffixType.Prefix;
            case ""Suffix"":
                return AffixType.Suffix;
            default:
                return AffixType.Any; // Should probably default to a null state?
        }
    }

    public static string RemoveFormatting(string pString)
    {
        return pString.Replace(""\n"", """").Replace(""\r"", """");
    }

    private MagicPropertyType ParseMagicPropertyType(string property)
    {
        return _magicPropertyTypeConverter[property];
    }

    private GameItemType[] ParseGameItemConstraints(string[] properties)
    {
        List<GameItemType> propertyTypes = new List<GameItemType>();
        foreach (string propertyType in properties)
        {
            propertyTypes.Add(ParseGameItemConstraint(propertyType));
        }
        return propertyTypes.ToArray();
    }

    private GameItemType ParseGameItemConstraint(string constraint)
    {
        return _gameItemTypeConverter[constraint];
    }

    /// <summary>
    /// TODO: Finish adding this functionality.
    /// </summary>
    /// <param name=""level""></param>
    /// <returns></returns>
    public GameItemTemplate Generate(int level)
    {
        return null;
    }

    /// <summary>
    /// TODO: Tie this into the dynamic Generate function directly above
    /// this declaration. This will be used to generate a random item quality
    /// without the need to manually feed one into the generator.
    /// </summary>
    /// <param name=""level""></param>
    /// <returns></returns>
    private ItemQuality NextRandomQuality(int level)
    {
        return ItemQuality.None;
    }

    public GameItemTemplate Generate(GameItemType itemType, int level, ItemQuality quality)
    {
        GameItemTemplate template = ScriptableObject.CreateInstance<GameItemTemplate>();
        template.baseItemQuality = quality;
        template.itemType = itemType;
        template.itemLevel = level;
        template.identifier = ""ProcGen_"" + level + ""_"" + itemType;
        template.name = _nameGenerator.Generate(quality, itemType);
        if (quality == ItemQuality.Uncommon || quality == ItemQuality.Rare)
        {
            GenerateAffixCount(quality, out int prefixCount, out int suffixCount);
            List<MagicProperty> properties = new List<MagicProperty>();
            List<MagicPropertyTemplate> generatedTemplates = new List<MagicPropertyTemplate>();
            generatedTemplates.AddRange(GenerateMagicPropertyTemplates(itemType, level, prefixCount, AffixType.Prefix, false));
            generatedTemplates.AddRange(GenerateMagicPropertyTemplates(itemType, level, suffixCount, AffixType.Suffix, false));
            foreach (MagicPropertyTemplate magicPropertyTemplate in generatedTemplates)
            {
                MagicProperty property = new MagicProperty()
                {
                    propertyType = magicPropertyTemplate.property,
                    value = _random.NextRange(magicPropertyTemplate.valueRange)
                };
                properties.Add(property);
            }
            properties = properties.OrderBy(property => property.propertyType).ToList();
            template.magicProperties = new MagicProperties();
            template.magicProperties.properties = properties;
        }
        return template;
    }

    /// <summary>
    /// 
    /// </summary>
    /// <param name=""constraint""></param>
    /// <param name=""level""></param>
    /// <param name=""count""></param>
    /// <param name=""allowDuplicates""></param>
    /// <returns></returns>
    private List<MagicPropertyTemplate> GenerateMagicPropertyTemplates(GameItemType constraint, int level, int count, 
        AffixType affixType = AffixType.Any, bool allowDuplicates = false)
    {
        List<MagicPropertyTemplate> results = new List<MagicPropertyTemplate>();
        if (count == 0)
        {
            return results;
        }
        int totalFitness = 0;
        List<MagicPropertyTemplate> filteredTemplates = new List<MagicPropertyTemplate>();
        foreach (MagicPropertyTemplate candidate in this._magicPropertyTemplates)
        {
            if (candidate.affixType == affixType || affixType == AffixType.Any)
            {
                if (candidate.constraints.Contains(constraint))
                {
                    if (candidate.levelBracket.Contains(level))
                    {
                        filteredTemplates.Add(candidate);
                        totalFitness += candidate.weight;
                    }
                }
            }
        }
        if (filteredTemplates.Count < count)
        {
            count = filteredTemplates.Count;
            if (count == 0)
            {
                return results;
            }
        }
        filteredTemplates.OrderBy(enchantment => enchantment.weight).Reverse().ToList();
        int enchantmentsGenerated = 0;
        bool isSearching = true;
        int attempts = 0;
        const int maximumAttempts = 32; // Prevent Infinite Loops
        while (isSearching)
        {
            MagicPropertyTemplate selectedEnchantment = null;
            int randomSample = _random.NextInteger(totalFitness);
            foreach (MagicPropertyTemplate attempt in filteredTemplates)
            {
                if (randomSample < attempt.weight)
                {
                    selectedEnchantment = attempt;
                    break;
                }
                randomSample -= attempt.weight;
            }
            if (allowDuplicates ||
                !results.Any(e => e == selectedEnchantment) &&
                !results.Any(e => e.property.Equals(selectedEnchantment.property)))
            {
                attempts = 0;
                results.Add(selectedEnchantment);
                enchantmentsGenerated++;
            }
            attempts++;
            if (enchantmentsGenerated == count || attempts >= maximumAttempts)
            {
                isSearching = false;
            }
        }
        return results;
    }

    private void GenerateAffixCount(ItemQuality quality, out int prefixCount, out int suffixCount)
    {
        switch (quality)
        {
            case ItemQuality.Uncommon:
                prefixCount = _random.NextRange(1, 3);
                suffixCount = _random.NextRange(0, 1);
                return;
            case ItemQuality.Rare:
                prefixCount = _random.NextRange(3, 4);
                suffixCount = _random.NextRange(1, 2);
                return;
            default:
                prefixCount = 0;
                suffixCount = 0;
                return;
        }
    }
}
"
GX2FyNVk,Matrix,LEGEND2004,C++,Sunday 21st of January 2024 12:27:59 AM CDT,"#include <bits/stdc++.h>
using namespace std;

#define int long long

signed main()
{
	int n , m;
	cin >> n >> m; // matrix (2D massiv)-in olculeri
	int a[n + 5][m + 5]; // matrixin goturulmesi
	int sum = 0;
	for(int i = 1; i <= n; i++){ // setirin nomresi (yuxaridan asagi)
		for(int j = 1; j <= m; j++){ // sutunun nomresi (soldan saga)
			cin >> a[i][j]; // yuxaridan i - ci setirde, soldan j - ci sutunde olan eded
			sum += a[i][j];
		}
	}
	cout << sum << endl;
}"
68ihimz8,Pet Simulator 99! [☁️UPDATE 5] AutoFarm Script,Project-WD,Lua,Sunday 21st of January 2024 12:25:21 AM CDT,"-- 🆕Update (21/01/2024)
-- AUTO FARM | ADMIN BYPASS | AUTO HATCH | AUTO RANK & MORE
-- Script📝: Paste into your executor
loadstring(game:HttpGet(""https://raw.githubusercontent.com/REDzHUBz/PetSimulator99/main/redz9999.lua"" ))()"
9KCVeNz7,Untitled,Glenpl,C++,Sunday 21st of January 2024 12:03:16 AM CDT,"Tell me about game ""kerbal space program"". 

---eeee

""Kerbal Space Program"" (KSP) is a space flight simulation video game that was originally developed by Squad, a Mexican game developer. It was first released for Microsoft Windows, macOS, and Linux in April 2015, after being in early access for several years.

In Kerbal Space Program, players take control of their own space program operated by the Kerbals, which are small green humanoid aliens. The game features a realistic orbital physics engine, allowing for real-life orbital maneuvers such as Hohmann transfer orbits and bi-elliptical transfer orbits.

The primary mode of the game has the player engaging in building spacecraft, managing resources, and conducting missions. The spacecraft is constructed from a variety of parts that must be assembled to create a functional ship. These parts include engines, fuel tanks, control surfaces, and more. Each component affects the ship's performance, requiring the player to carefully consider the trade-offs when designing their missions.

The game has three primary modes:

1. **Sandbox Mode**: This mode gives players the freedom to create and fly any spacecraft they can imagine, with no specific goals or limitations.

2. **Science Mode**: Players conduct scientific experiments to research new technology and advance the knowledge of Kerbalkind. Through this progress, more advanced parts and technologies become available for spacecraft construction.

3. **Career Mode**: This mode combines the aspects of sandbox and science modes but also introduces management aspects. Players must manage aspects of the space program, including finances, reputation, and mission contracts.

Kerbal Space Program is known for its challenging gameplay, educational aspects, and the accurate physics simulation it offers, which makes it both a game and a learning tool for understanding the basics of rocket science and orbital mechanics. The game's community has been praised for its creativity and enthusiasm, with players sharing custom mods, spacecraft designs, and even complete missions.

KSP has been used in educational settings as well as by space professionals and enthusiasts. Moreover, it has had several updates and expansion packs that have added new features, improved the graphics, and expanded the gameplay.

Squad released the Making History expansion in 2018, which introduced a mission builder and historical missions. The second expansion, Breaking Ground, was released in 2019, focusing on planetary exploration, new science collection capabilities, and more advanced robotics parts.

As of my knowledge cutoff date in 2023, Kerbal Space Program 2 is also in development, promising to build upon the success of the first game with new features, improved graphics, and more expansive gameplay. The sequel aims to introduce interstellar travel, new celestial bodies, and a multiplayer feature, among other enhancements."
dYwbUs3c,pbs rolls,Zeefoe,Lua,Saturday 20th of January 2024 11:33:03 PM CDT,"local player = game.Players.LocalPlayer
local character = player.Character

local backpack = player:FindFirstChildOfClass(""Backpack"")

--toilet rolls
tools = 8

if backpack then
    local toolsToEquip = backpack:GetChildren()

    for loopCount = 1, math.min(#toolsToEquip, tools) do
        local currentTool = toolsToEquip[loopCount]

        for _, tool in pairs(character:GetDescendants()) do
            if tool:IsA(""Tool"") then
                tool.Parent = backpack
            end
        end

        if currentTool:IsA(""Tool"") then
            currentTool.Parent = character

            if loopCount == tools - 1 then
                currentTool.GripPos = Vector3.new(2, 2, -1)
            elseif loopCount == tools then
                currentTool.GripPos = Vector3.new(1, 2, -1)
            else
                currentTool.GripPos = Vector3.new(1.5, 0.5 - (loopCount - 1) * 0.9, 1.5)
                currentTool.GripUp = Vector3.new(0, 0, 90)
            end
        end
    end

    for _, finalTool in pairs(toolsToEquip) do
        if finalTool:IsA(""Tool"") then
            finalTool.Parent = character
        end
    end
end
"
GmfcQBVE,Controller (Local Script / EP.09),Anukun_Lucifer,Lua,Saturday 20th of January 2024 11:11:11 PM CDT,"local Players = game:GetService(""Players"")
local physicsservice = game:GetService(""PhysicsService"")
local replicatedstorage = game:GetService(""ReplicatedStorage"")
local runservice = game:GetService(""RunService"")
local userinputservice = game:GetService(""UserInputService"")

local gold = Players.LocalPlayer:WaitForChild(""Gold"")
local events = replicatedstorage:WaitForChild(""Events"")
local functions = replicatedstorage:WaitForChild(""Functions"")
local requestTowerFuntion = functions:WaitForChild(""RequestTower"")
local tower = replicatedstorage:WaitForChild(""Towers"")
local spawntowerevent = events:WaitForChild(""SpawnTower"")
local camera = workspace.CurrentCamera
local gui = script.Parent

local towertospawn = nil
local canplace = false
local rotation = 0
local platedTower = 0
local maxTowers = 10

local function UpdateGold()
	gui.Gold.Text = gold.Value
end
UpdateGold()
gold.Changed:Connect(UpdateGold)

local function MouseRaycast(blacklist)
	local mouseposition = userinputservice:GetMouseLocation()
	local mouseray = camera:ViewportPointToRay(mouseposition.X,mouseposition.Y)
	local raycastparams = RaycastParams.new()

	raycastparams.FilterType = Enum.RaycastFilterType.Blacklist
	raycastparams.FilterDescendantsInstances = blacklist

	local raycastresult = workspace:Raycast(mouseray.Origin,mouseray.Direction*1000, raycastparams)

	return raycastresult
end

local function RemovePlaceholderTower()
	if towertospawn then
		towertospawn:Destroy()
		towertospawn = nil
		rotation = 0
	end
end

local function AddPlaceholderTower(name)
	local towerExists = tower:FindFirstChild(name)
	if towerExists then
		RemovePlaceholderTower()
		towertospawn = towerExists:Clone()
		towertospawn.Parent = workspace

		for i, object in ipairs(towertospawn:GetDescendants()) do
			if object:IsA(""BasePart"") then
				physicsservice:SetPartCollisionGroup(object, ""Tower"")
				object.Material = Enum.Material.ForceField
			end
		end
	end
end

local function ColorPlanceholderTower(color)
	for i, object in ipairs(towertospawn:GetDescendants()) do
		if object:IsA(""BasePart"") then
			object.Color = color
		end
	end
end

gui.Tower.Title.Text = ""Towers""..platedTower..""/""..maxTowers
for i , tower in pairs(tower:GetChildren()) do
	local button = gui.Tower.Template:Clone()
	local config = tower:WaitForChild(""Config"")
	button.Name = tower.Name
	button.Image = config.Image.Texture
	button.Visible = true
	
	button.LayoutOrder = config.Price.Value
	button.Price.Text = config.Price.Value
	
	button.Parent = gui.Tower
	
	button.Activated:Connect(function()
		local allowedToSpawn = requestTowerFuntion:InvokeServer(tower.Name)
		if allowedToSpawn then
			AddPlaceholderTower(tower.Name)
		end
	end)
end

userinputservice.InputBegan:Connect(function(input, processed)
	if processed then
		return
	end

	if towertospawn then
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			if canplace then
				spawntowerevent:FireServer(towertospawn.Name, towertospawn.PrimaryPart.CFrame)
				platedTower += 1
				gui.Tower.Title.Text = ""Towers""..platedTower..""/""..maxTowers
				RemovePlaceholderTower()
			end
		elseif input.KeyCode == Enum.KeyCode.R then
			rotation += 90
		end
	end

end)

runservice.RenderStepped:Connect(function()
	if towertospawn then
		local result = MouseRaycast({towertospawn})
		if result and result.Instance then
			if result.Instance.Parent.Name == ""TowerArea"" then
				canplace = true
				ColorPlanceholderTower(Color3.new(0,1,0))
			else
				canplace = false
				ColorPlanceholderTower(Color3.new(1,0,0))
			end
			local x = result.Position.X
			local y = result.Position.Y + towertospawn.Humanoid.HipHeight + 4
			local z = result.Position.Z

			local cframe = CFrame.new(x,y,z) *CFrame.Angles(0,math.rad(rotation),0)
			towertospawn:SetPrimaryPartCFrame(cframe)
		end
	end
end)"
7f5t2Wwn,TowerScript (Module Script / EP.09),Anukun_Lucifer,Lua,Saturday 20th of January 2024 11:10:21 PM CDT,"local physicsservice = game:GetService(""PhysicsService"")
local serverstorage = game:GetService(""ServerStorage"")
local replicatedstorage = game:GetService(""ReplicatedStorage"")
local functions = replicatedstorage:WaitForChild(""Functions"")
local requestTowerFuntion = functions:WaitForChild(""RequestTower"")

local event = replicatedstorage:WaitForChild(""Events"")
local spawntowerevent = event:WaitForChild(""SpawnTower"")
local animatetowerevent = event:WaitForChild(""AnimateTower"")
local maxTowers = 10

local tower = {}
--------------------------------------------
local function FindNearestTarget(newTower,range)
	local nearestTarget = nil

	for i, target in ipairs(workspace.Grassland.Mob:GetChildren()) do
		local distance = (target.HumanoidRootPart.Position - newTower.HumanoidRootPart.Position).Magnitude
		if distance < range then
			nearestTarget = target
			range = distance
		end
	end

	return nearestTarget
end

function tower.Attack(newTower ,player)
	local config = newTower.Config
	local target = FindNearestTarget(newTower,config.Range.Value)
	
	if target and target:FindFirstChild(""Humanoid"") and target.Humanoid.Health > 0 then
		
		local targetCFrame = CFrame.lookAt(newTower.HumanoidRootPart.Position, target.HumanoidRootPart.Position)
		newTower.HumanoidRootPart.BodyGyro.CFrame = targetCFrame
		
		animatetowerevent:FireAllClients(newTower, ""Attack"")
		target.Humanoid:TakeDamage(config.Damage.Value)
		
		if target.Humanoid.Health <= 0 then
			player.Gold.Value += target.Humanoid.MaxHealth
		end
		
		task.wait(config.Cooldown.Value)
		
	end
	task.wait(0.1)
 	tower.Attack(newTower ,player)
end
---------------------------------------------
function tower.Spawn(player, name, cframe)
	local allowedToSpawn = tower.CheckSpawn(player, name)

	if allowedToSpawn then
		local newTower = replicatedstorage.Towers[name]:Clone()
		newTower.HumanoidRootPart.CFrame = cframe
		newTower.Parent = workspace.Grassland.Tower
		newTower.HumanoidRootPart:SetNetworkOwner(nil)
		
		local bodyGyro = Instance.new(""BodyGyro"")
		bodyGyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
		bodyGyro.D = 0
		bodyGyro.CFrame = newTower.HumanoidRootPart.CFrame
		bodyGyro.Parent = newTower.HumanoidRootPart

		for i, object in ipairs(newTower:GetDescendants()) do
			if object:IsA(""BasePart"") then
				physicsservice:SetPartCollisionGroup(object, ""Tower"")
			end
		end
		
		player.Gold.Value -= newTower.Config.Price.Value
		player.PlacedTowers.Value +=1
		
		coroutine.wrap(tower.Attack) (newTower ,player)
	else
		warn(""Requested mob dose not exist"",name)
	end
end

spawntowerevent.OnServerEvent:Connect(tower.Spawn)

function tower.CheckSpawn(player, name)
	local towerExists = replicatedstorage.Towers:FindFirstChild(name)
	
	if towerExists then
		if towerExists.Config.Price.Value <= player.Gold.Value then
			print(""okkkkkkkkkkkkkkkkkkkkkkkkkkkkkk"")
			if player.PlacedTowers.Value < maxTowers then
				return true
			end
		end
	end
	return false
end

requestTowerFuntion.OnServerInvoke = tower.CheckSpawn

return tower"
xwc6BN3H,OnPlayerAdded (Script / EP.09),Anukun_Lucifer,Lua,Saturday 20th of January 2024 11:09:35 PM CDT,"local players = game:GetService(""Players"")
local physicsservice = game:GetService(""PhysicsService"")

players.PlayerAdded:Connect(function(player)
	
	local gold = Instance.new(""IntValue"")
	gold.Name = ""Gold""
	gold.Value = 250
	gold.Parent = player
	
	local placedTowers = Instance.new(""IntValue"")
	placedTowers.Name = ""PlacedTowers""
	placedTowers.Value = 0
	placedTowers.Parent = player
	
	player.CharacterAdded:Connect(function(character)
		for i, object in ipairs(character:GetDescendants()) do
			if object:IsA(""BasePart"") then
				physicsservice:SetPartCollisionGroup(object, ""Player"")
			end
		end
	end)
end)"
vnvbx6w9,Custom Tesla Powerwall Card - MKANET,MKANET,YAML,Saturday 20th of January 2024 10:43:12 PM CDT,"type: custom:stack-in-card
mode: vertical
cards:
  - type: markdown
    content: >
      ## Tesla Powerwall{% if is_state('binary_sensor.grid_status', 'off')
      %}<small><font color=""red"">&nbsp;&nbsp;⚠️&nbsp;Power Outage:
      &nbsp;&nbsp;~{{ states('sensor.estimated_battery_life_hours_remaining') }}
      battery hours remaining</font></small>{% endif %}
    card_mod:
      style: |
        ha-card {
          margin: 0;
          padding-left: 10px;
          padding-right: 10px;
          background: var(--card-background-color);
          box-shadow: none;
          border: none;
        }
        ha-markdown {
          font-size: 10px;
          color: var(--primary-text-color);
          margin-bottom: -8px;
        }
  - type: custom:power-flow-card-plus
    entities:
      grid:
        name: PG&E
        entity: sensor.powerwall_site_now_mod
        secondary_info:
          entity: sensor.pge_electric_cost_to_date
          unit_of_measurement: $
          unit_white_space: false
          color_value: true
        display_state: one_way
        color_circle: true
        color_icon: true
        color_value: true
        power_outage:
          entity: binary_sensor.grid_status
          state_alert: 'off'
      solar:
        entity: sensor.powerwall_solar_now
        display_zero_tolerance: 30
        icon: mdi:solar-panel-large
        secondary_info:
          entity: sensor.openweathermap_forecast_cloud_coverage
          unit_of_measurement: '%'
          unit_white_space: false
          color_value: true
        color_icon: true
        color_value: true
      battery:
        entity: sensor.powerwall_battery_now
        state_of_charge: sensor.powerwall_charge_actual
        state_of_charge_unit: '%'
        state_of_charge_unit_white_space: false
        display_state: one_way
        color_state_of_charge_value: true
        color_icon: true
        color_circle: true
      home:
        entity: sensor.powerwall_load_now
        color_icon: true
        color_value: true
    watt_threshold: 999
    calculate_flow_rate: true
    w_decimals: 1
    kw_decimals: 1
    min_flow_rate: 2.2
    max_flow_rate: 6
    display_zero_lines:
      mode: hide
    clickable_entities: true
    use_new_flow_rate_model: true
    max_expected_power: 5000
    card_mod:
      style: |
        @keyframes blink {
          0% { opacity: 1; }
          50% { opacity: 0; }
          100% { opacity: 1; }
        }
        ha-card {
          zoom: 1.2 !important;
          box-shadow: none !important;
          border: none !important;
          padding-left: 10px;
          padding-right: 10px;
        }
        .circle-container .grid.power-outage {
          color: #FF403D !important;
          animation: blink 2.475s linear infinite;
        }
        .label {
          font-weight: 700 !important;
        }
        .circle ha-icon {
          --mdc-icon-size: 36px;
        }
  - type: markdown
    content: ⠀
    card_mod:
      style: |
        ha-card {
          box-shadow: none;
          border: none;
          margin-bottom: -48px;
        }
  - type: custom:bar-card
    height: 31px
    direction: right
    positions:
      icon: 'off'
      indicator: 'off'
      title: 'off'
    severity:
      - hide: false
        from: '0'
        to: '19'
        color: '#C41400'
      - from: '20'
        to: '49'
        color: '#EA9000'
      - from: '50'
        to: '100'
        color: '#007A00'
    card_mod:
      style: |
        ha-card {
          border: none;
          padding-left: 14px;
          padding-right: 14px;
          background: var(--card-background-color);
          box-shadow: none;
        }
    entities:
      - entity: sensor.powerwall_charge_actual
        name: Powerwall Charge
  - type: custom:button-card
    entity: binary_sensor.powerwall_charging
    show_name: false
    show_icon: false
    show_label: true
    label: |-
      [[[
        var charge = states['sensor.powerwall_charge_actual'].state;
        var batteryStatus = parseFloat(states['sensor.apf_battery_entity'].state);
        var state = states['binary_sensor.powerwall_charging'].state;
        var icon = '';
        if (charge <= 19) icon = 'mdi:battery-charging-10';
        else if (charge <= 49) icon = 'mdi:battery-charging-30';
        else if (charge <= 100) icon = 'mdi:battery-charging-90';
        var label = (state == 'off') ? 'Standby' : 'Charging';
        if (batteryStatus < 0) label = 'Discharging';
        var textAnimationStyle = '';
        if (state == 'on') {
          textAnimationStyle = 'animation: blink 2.475s linear infinite;';
        }
        var iconHtml = '';
        if (state == 'on') {
          iconHtml = `<ha-icon icon='${icon}' style='color: #FFCC00; width: 20px; height: 20px;'></ha-icon>`;
        }
        return `<div style='text-align: center; display: inline-block; width: 100%; padding-bottom: 11px;'>
              ${iconHtml}
              <span style='margin-left: 6px; position: relative; top: 1.5px; font-size: 14px; font-weight: 700; color: #bbb; ${textAnimationStyle}'>${label}</span>
            </div>`;
      ]]]
    styles:
      card:
        - background-color: linear-gradient(rgba(105, 105, 105, 0.1), rgba(34, 34, 34, 0.95))
        - margin-top: '-9px'
        - border-top: none
        - border-top-left-radius: 0px
        - border-top-right-radius: 0px
        - box-shadow: none
      label:
        - justify-self: center
        - align-self: center
        - width: 100%
        - font-size: 14px
        - font-weight: 600
        - margin-top: '-8px'
    card_mod:
      style: |
        ha-card {
          border: none;
          background: var(--card-background-color);
          box-shadow: none;
          margin-bottom: 0px !important;
        }
  - type: custom:button-card
    entity: sensor.estimated_battery_life_hours_remaining
    tap_action:
      action: more-info
    layout: icon-label
    size: 20%
    color_type: card
    show_name: true
    show_state: true
    show_icon: false
    show_units: true
    card_mod:
      style: |
        ha-card {
          height: auto;
          padding-bottom: 25px !important;
          padding-left: 7px !important;
          background: transparent !important;
          box-shadow: none;
          border-top: none;
          margin: 0;
        }
    styles:
      grid:
        - grid-template-areas: '""n s""'
        - grid-template-columns: max-content min-content
        - grid-template-rows: 1fr
      name:
        - font-size: 14px
        - font-weight: 400
        - justify-self: start
        - padding-left: 22px
        - margin-right: 10px
        - white-space: nowrap
        - color: '#838383'
      state:
        - font-size: 14px
        - font-weight: 400
        - justify-self: start
        - padding-left: 0
        - color: '#B7A064'
        - margin-top: 1.8px
    name: 'Estimated outage battery runtime:'
    state_display: >
      [[[ return states['sensor.outage_battery_runtime_estimate'].state +
      '&nbsp; (' + states['sensor.estimated_battery_life_hours_remaining'].state
      + ' hours)' ]]]
"
CBFZzJRP,InventoryItem.cpp,devenshona,C++,Saturday 20th of January 2024 10:22:27 PM CDT,"// Fill out your copyright notice in the Description page of Project Settings.


#include ""Actors/InventoryItem.h""


// Sets default values
AInventoryItem::AInventoryItem()
{
	// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.
	PrimaryActorTick.bCanEverTick = true;
}

// Called when the game starts or when spawned
void AInventoryItem::BeginPlay()
{
	Super::BeginPlay();
	
}

// Called every frame
void AInventoryItem::Tick(float DeltaTime)
{
	Super::Tick(DeltaTime);
}

/**
 * Uses the given item.
 *
 * @param Row - The static item information.
 * @param InventoryComponentRef - The reference to the inventory component.
 * @param Index - The index of the item being used.
 *
 * @note This method is called when an item needs to be used.
 */
void AInventoryItem::UseItem_Implementation(FStaticItemInfo* Row,UInventoryComponent* InventoryComponentRef,int32 Index)
{
}



"
PJekQUkw,Lampu LED Berkedip dengan Kreativitas,cisco404,C++,Saturday 20th of January 2024 10:20:39 PM CDT,"// Definisi pin LED RGB
int redPin = 9;
int greenPin = 10;
int bluePin = 11;

void setup() {
  // Atur pin sebagai OUTPUT
  pinMode(redPin, OUTPUT);
  pinMode(greenPin, OUTPUT);
  pinMode(bluePin, OUTPUT);
}

void loop() {
  // Merah
  analogWrite(redPin, 255);
  analogWrite(greenPin, 0);
  analogWrite(bluePin, 0);
  delay(1000); // Tahan selama 1 detik

  // Hijau
  analogWrite(redPin, 0);
  analogWrite(greenPin, 255);
  analogWrite(bluePin, 0);
  delay(1000); // Tahan selama 1 detik

  // Biru
  analogWrite(redPin, 0);
  analogWrite(greenPin, 0);
  analogWrite(bluePin, 255);
  delay(1000); // Tahan selama 1 detik
}
"
jGMM1vqD,pimserver.lua,taoshi,Lua,Saturday 20th of January 2024 09:20:38 PM CDT,"--pimserver
local pimserver={}
pimserver.version='1.00'
local db={}
local owners={}
local event=require('event')
local modem=require('component').modem
local port = 0xfffe
local send = 0xffef
local fs = require('filesystem')
--local log={}
local serialization = require('serialization')
local terminal={}
local unregistered={}
local gpu = require('component').gpu
modem.open(port)
modem.setWakeMessage=""{name=""
local player_on = false
local computer=require('computer')
local pullSignal=computer.pullSignal	
computer.pullSignal=function(...)
	local e={pullSignal(...)}
	if e[1]=='modem_message' then
		return pimserver.modem(e)
	end
	if e[1]=='touch' then
		return pimserver.accept(e)
	end
	if e[1]=='player_on' then
		return pimserver.regOwner(e)
	end
	return table.unpack(e) 
end

function pimserver.modem(e) ---1type 2respondent 3sender 4port 5distance 6message
	local sender=e[3]
	os.sleep(0.05)
	--want to msg fields:
	--msg.number
	--msg.name =name of player
	--msg.op = enter|buy|sell|balanceIn|balanceOut
	--msg.value = value of operation
	local msg = serialization.unserialize(e[6])
  msg.sender = sender
  --регистрация терминалов
  if msg.name and msg.name=='pimmarket' then
  		return pimserver[msg.op](sender)
  end
  --проверка валидности адреса посылки
  local valid = false
  for n in pairs(terminal) do
  	if terminal[n]==sender then valid = true end
  end
	if not valid then return 'не знаем мы таких' end
	--если такого игрока нет, то запись нового игрока в бд
	if msg.name and not db[msg.name] then pimserver.newUser(msg.name) end
	--если в сообщении есть имя игрока отправляем по типу операции
	if msg.name then return pimserver[msg.op](msg) end
	--поиск отклика завершенных событий
	--if msg.complite==true then return true end
	--остальные события нас не интересуют
	return true
end

--постановка терминала в список ожидания регистрации
function pimserver.connect(sender)
	for n in pairs(terminal) do
		--если такой терминал есть в списке валидных
  	if terminal[n]==sender then
  		return pimserver.returnAccept(sender)
  	end
  end
	table.insert(unregistered,sender)
	return pimserver.place()
end
function pimserver.getOwners(sender)
	local msg={sender=sender,number=1,name='pimmarket',balance=0,op='getOwners'}
	msg.owners=owners
	pimserver.post(msg)
end

--отсылка подтверждения регистрации
function pimserver.accept(msg)
	local who = msg[6]
	for id in pairs(owners)do
		if owners[id].name == who then
			who = nil
		end
	end
	if who then return true end
	
	local x,y = msg[3],msg[4]
	--if msg[6]==adminname then
	if x < 4 and y == 1 then
		return pimserver.WaitToNewOwner()
	end
	if y < 13 then return true end
	y=y-12
	if x == 3 and y <= #unregistered then
		table.remove(unregistered,y)
	end
	if x == 43 and y <= #unregistered then
		local sender=table.remove(unregistered,y)
		table.insert(terminal, sender)
		pimserver.saveTerminalsToFile()
		return pimserver.returnAccept(sender)
	end
	--end
	return true
end

function pimserver.returnAccept(sender)
	local msg={sender=sender,number=1,name='pimmarket',balance=0,op='connect'}
	pimserver.post(msg)
	return pimserver.place()
	end

function pimserver.place()
	local x,y = gpu.getResolution()
	gpu.setBackground(0x113311)
	gpu.setForeground(0x58f029)
	gpu.fill(1,1,x,y,' ')
	gpu.set(1,1,'REG: step on PIM for register owner')
	gpu.set(5,1,'Registered terminals:')
	for t in pairs(terminal) do
		gpu.set(5,t+1,terminal[t])
	end
	gpu.set(5,12,'Unregistered terminals:')
	for t in pairs(unregistered) do
		gpu.set(5,t+12,unregistered[t])
		gpu.set(3,t+12,'X')
		gpu.set(43,t+12,'V')
	end
	return true
end

--первичная регистрация игрока
function pimserver.enter(msg)
	if not db[msg.name] then pimserver.newUser(msg.name)
		print('new user'..msg.name)
		msg.new='new'
	end
	return pimserver.broadcast(msg)
end

--проверка наличия имени в базе данных
function pimserver.isRegistered(msg)
	if not db[msg.name2] then 
		msg.op = 'regFalse'
	else
		msg.op = 'regTrue'
	end
	return pimserver.broadcast(msg)
end

--перевод со счета на счет
function pimserver.transfer(msg)
	if not db[msg.name2] then pimserver.newUser(msg.name2)
		print('new user'..msg.name2)
	end
	db[msg.name].balance=db[msg.name].balance - msg.value
	db[msg.name2].balance=db[msg.name2].balance + msg.value
	return pimserver.broadcast(msg)
end

--вычитание с баланса при покупке
function pimserver.buy(msg)
	db[msg.name].balance=db[msg.name].balance - msg.value
	return pimserver.broadcast(msg)
end

--различные операции вызываемые по ключу в сообщении
function pimserver.sell(msg)
	db[msg.name].balance=db[msg.name].balance + msg.value
	return pimserver.broadcast(msg)
end
function pimserver.balanceIn(msg)
	db[msg.name].balance=db[msg.name].balance + msg.value
	return pimserver.broadcast(msg)
end
function pimserver.balanceOut(msg)
	db[msg.name].balance=db[msg.name].balance - msg.value
	return pimserver.broadcast(msg)
end
--отправка результата с указанием адреса пославшего
function pimserver.broadcast(msg)
  local sender, balance, number, name, op = msg.sender, db[msg.name].balance, msg.number, msg.name, msg.op
	local post={sender=sender,number=number,name=name,balance=balance,op=op}
	if msg.new then post.new='new' end
	pimserver.post(post)	

	--[[if not log[msg.sender] then log[msg.sender]={} end
		log[msg.sender][msg.number]={name=msg.name,op=msg.op,val=msg.value}
	local line='['..serialization.serialize(msg.sender)..']'..'['..serialization.serialize(msg.number)..']'..serialization.serialize(log[msg.sender][msg.mnumber])
	local logs=io.open('logs.pimserver','w','a')
	logs:write(line)
	logs:close()]]--
	return pimserver.saveFile()
end
function pimserver.post(msg)
local post = serialization.serialize(msg)
	return modem.broadcast(send,post)
end


function pimserver.newUser(name)
	db[name]={}
	db[name].balance='0'
	db[name].ban='-'
	db[name].income='0'
	return pimserver.saveFile()
end

function pimserver.WaitToNewOwner()
	if not owners[1] then
		print('Встаньте на ПИМ для регистрации первого владельца')
	else
		print('Встаньте на ПИМ для регистрации следующего владельца')
	end
	player_on = true
	return true
end
function pimserver.regOwner(a) 
	table.insert(owners,{UUID=a[3],name=a[2]})
	print('Благодарю. владелец '..#owners..' '..a[2]..'  UUID:'..a[3]..'  зарегестрирован')
	return pimserver.saveOwnersTable()
end

--сохранение терминалов в файл
function pimserver.saveTerminalsToFile()
	local dbs=io.open('terminals.pimserver','w')
	for n in pairs(terminal)do
		dbs:write(tostring(terminal[n])..'\n')
	end
	dbs:close()
	return true
end

--загрузка терминалов из файла
function pimserver.loadTerminalsFromFile()
	terminal={}
	local dbs=io.open('terminals.pimserver','r')
		local loop = true
		while loop do
			local line=dbs:read('*line')
			if line then
				table.insert(terminal,line)
			else
				loop = false
			end
		end
		
		dbs:close()
		return terminal
	end

function pimserver.saveFile()
	local dbs=io.open('db.pimserver','w')
	for player in pairs(db)do
		dbs:write(tostring(player)..'\n')
		dbs:write(tostring(db[player].ban..'\n'))
		dbs:write(tostring(db[player].balance..'\n'))
		dbs:write(tostring(db[player].income..'\n'))
	end
	dbs:close()
	return true
end

function pimserver.loadFile()
	db={}
	local dbs=io.open('db.pimserver','r')
		local loop = true
		while loop do
			local line=dbs:read('*line')
			if not line then
				loop = false	
			else
				local name=tostring(line)
				db[name]={}
				db[name].ban=tostring(dbs:read('*line'))
				db[name].balance=tostring(dbs:read('*line'))
				db[name].income=tostring(dbs:read('*line'))
			end
		end
		dbs:close()
		return true
end

function pimserver.loadOwnersTable()
	local file=io.open('owners.pimserver')
	owners=serialization.unserialize(file:read('*a'))
	return true
end
function pimserver.saveOwnersTable()
	local file=io.open('owners.pimserver','w')
	local data=serialization.serialize(owners)
	file:write(data)
	file:close()
	return true
end

function pimserver.init()
	if not fs.exists ('home/db.pimserver') then
		pimserver.newUser('Taoshi')
		pimserver.saveFile()
	end
	pimserver.loadFile()
	if fs.exists('home/terminals.pimserver') then
		pimserver.loadTerminalsFromFile()
	end
	if fs.exists('home/owners.pimserver') then
		pimserver.loadOwnersTable()
	else
		pimserver.WaitToNewOwner()
	end
	pimserver.place()
	--[[if not fs.exists('home/logs.pimserver')then
		local lg=io.open('logs.pimserver','w')
		log.fakesender={}
		log.fakesender[1]={name='Taoshi',op='init',val='1'}
		lg:write(serialization.serialize(log))
		lg:close()
	end]]
	return true
end
--создание овнер-листа посредством пим

gpu.setResolution(76,24)
pimserver.init()

print('Сервер поднят.')
modem.broadcast(send,'name')
return pimserver
"
7WeU8k4p,backwards ferrari,lovejoy777,ZXBasic,Saturday 20th of January 2024 08:19:18 PM CDT,"   10 REM ******************************
   20 REM *        AGON LIGHT 2        *
   30 REM *      BBC BASIC MODE 0      *
   40 REM *            DEMO            *
   50 REM *         640 X 480          *
   60 REM *          DRAWING           *
   70 REM *          FERRARI           *
   80 REM *      BY STEVE LOVEJOY      *
   90 REM ******************************
  100 :
  110 REM START OF MAIN PROGRAM.
  120 :
  130 PROC_INIT            : REM CALL INIT PROCESS.
  140 RESTORE 6010
  150 PROC_DRAW_CAR
  160 RESTORE 6300
  170 PROC_DRAW_WHEELS
  180 :
 1000 END                 : REM **** END OF MAIN PROGRAM ****
 1010 :
 3090 REM PROCESS DEFINES.
 4000 DEF PROC_INIT       : REM DEFINE INITIAL PROCESS.
 4010 VDU 22,0            : REM SET SCREEN MODE.
 4020 VDU 23,1,0          : REM DISABLE CURSOR.
 4030 VDU 12              : REM SAME AS CLS (clear text from screen).
 4040 VDU 16              : REM SAME AS CLG (clear graphics from screen).
 4050 REM VARS.
 4050 SW% = 1279          : REM SCREEN WIDTH IN GRAPHICAL UNITS.
 4060 SH% = 1023          : REM SCREEN HEIGHT IN GRAPHICAL UNITS.
 4070 SCX = -5.0            : REM FLOAT FOR SCALE (PLAY WITH THIS #).
 4075 SCY = 5.0            : REM FLOAT FOR SCALE (PLAY WITH THIS #).
 4080 DX% = SW%/2+400     : REM DEFAULT X START COORDS (center of screen -400).
 4090 DY% = SH%/2-50      : REM DEFAULT Y START COORDS (center of screen -50).
 4100 VDU 18,0,9          : REM SET COLOUR OF GRAPHICS.
 4200 ENDPROC             : REM END INIT PROCESS.
 4500 :
 4510 DEF PROC_DRAW_CAR   : REM DEFINE DRAW PROCESS.
 4520 DIM CXY% (1024)     : REM CAR ARRAY BIG ENOUGH NUMBER TO HOLD ALL DATA.
 4530 :
 4540 REPEAT                     : REM START OF CAR LOOP.
 4550     READ CX%,CY%           : REM GET DATA FOR CX & CY.
 4560     IF CX% >= 0 GOTO 4640  : REM IF CX% IS 0 OR ABOVE DRAW.
 4570         REM SPECIAL VALUES, EITHER MOVE OR END.
 4580         IF CX% = -12345 GOTO 4650                 : REM IF CX IS END MARKER.
 4590           CX% = ABS(CX%)                          : REM IF CX IS A MINUS # MOVE (NOT DRAW), ABS CONVERTS TO POSITIVE #.
 4600           CY% = ABS(CY%)                          : REM IF CX IS A MINUS # MOVE (NOT DRAW), ABS CONVERTS TO POSITIVE #.
 4610           MOVE DX% + (CX% * SCX), DY% + (CY% * SCY) : REM **** MOVE CAR ****
 4620           GOTO 4650
 4630     REM ELSE
 4640           DRAW DX% + (CX% * SCX), DY% + (CY% * SCY) : REM **** DRAW CAR ****
 4650     REM ENDIF
 4660 UNTIL CX% = -12345 AND CY% = -12345               : REM LOOP UNTIL END MARKERS ARE READ.
 4670 :
 4680 ENDPROC                                           : REM END DRAW CAR PROCESS.
 5500 :
 5510 DEF PROC_DRAW_WHEELS       : REM DEFINE DRAW WHEELS PROCESS.
 5520 REM DIM WXY% (1024)        : REM WHEELS ARRAY BIG ENOUGH NUMBER TO HOLD ALL DATA.
 5530 :
 5540 REPEAT                     : REM START OF WHEELS LOOP.
 5550     READ WX%,WY%           : REM GET DATA FOR WX & WY.
 5560     IF WX% >= 0 GOTO 5640  : REM IF WX% IS 0 OR ABOVE = WHEEL RADIUS.
 5570         REM SPECIAL VALUES, EITHER MOVE OR END.
 5580         IF WX% = -12345 GOTO 5650                 : REM IF WX IS END MARKER.
 5590           WX% = ABS(WX%)                          : REM IF WX IS A MINUS # MOVE (NOT DRAW), ABS CONVERTS TO POSITIVE #.
 5600           WY% = ABS(WY%)                          : REM IF WX IS A MINUS # MOVE (NOT DRAW), ABS CONVERTS TO POSITIVE #.
 5610           MOVE DX% + (WX% * SCX), DY% + (WY% * SCY) : REM **** MOVE WHEELS ****
 5620           GOTO 5650
 5630     REM ELSE
 5640           PLOT 145,WX%*SCX,0 : REM **** DRAW WHEELS ****
 5650     REM ENDIF
 5660 UNTIL WX% = -12345 AND WY% = -12345               : REM LOOP UNTIL WHEELS END MARKERS ARE READ.
 5670 :
 5680 ENDPROC                                           : REM END DRAW WHEELS PROCESS.
 6000 :
 6010 DATA -5,-11,7,14,1,21,18,27,11,30,11,26,-18,-27,43,33
 6020 DATA 55,35,-49,-34,60,32,-55,-35,60,33,-55,-35,53,26,53,22
 6030 DATA 54,16,55,11,49,11,47,19,43,22,39,24,36,24,35,24
 6040 DATA 30,22,27,19,23,11,5,11,-15,-21,19,21,19,23,15,23
 6050 DATA 15,21,-3,-19,25,19,-55,-11,97,11,99,15,100,19,101,24
 6060 DATA 101,29,100,33,60,33,86,44,85,46,54,35,-47,-19,52,19
 6070 DATA 100,19,-74,-28,111,22,112,24,112,27,111,30,74,28,-75,-33
 6080 DATA 83,41,-101,-33,136,33,113,45,104,47,101,33,-104,-47,125,37
 6090 DATA 124,33,-122,-33,123,38,-119,-33,120,37,-117,-33,118,36,-115,-33
 6100 DATA 116,37,-111,-33,114,39,-109,-33,111,40,-107,-33,109,41,-105,-33
 6110 DATA 107,42,-103,-33,105,43,-136,-33,159,35,113,45,-159,-35,162,37
 6120 DATA 162,24,160,21,157,16,146,12,142,19,158,19,-157,-22,157,24
 6130 DATA 153,24,153,22,157,22,-142,-19,138,23,134,24,131,24,128,24
 6140 DATA 123,23,119,21,117,19,114,11,49,11,-117,-19,100,19,-110,-17
 6150 DATA 103,17,102,15,110,15,110,17,-95,-33,96,35,97,36,98,36
 6160 DATA 99,35,100,33
 6200 DATA -12345,-12345 : REM END DRAW CAR MARKERS.
 6300 DATA -37,-15,9,9,-37,-15,7,7,-37,-15,2,2
 6310 DATA -130,-15,9,9,-130,-15,7,7,-130,-15,2,2
 6500 DATA -12345,-12345 : REM END DRAW WHEELS MARKERS."
RKHRSn9A,Untitled,svxvcer,Delphi,Saturday 20th of January 2024 07:57:48 PM CDT,"DELPHI=============================================================================================================
procedure TForm1.PostButClick(Sender: TObject);
var dataPost:TIdMultiPartFormDataStream;

begin
   dataPost:=TIdMultiPartFormDataStream.Create;


   dataPost.AddFormField('title',title.Text,'utf-8').ContentTransfer := '8bit';
   dataPost.AddFormField('content',content.Text,'utf-8').ContentTransfer := '8bit';

   dataPost.AddFile('file',imgfile.Text,''); //добавляем поле с файлом


    response.Text:= StringReplace(idHTTP1.Post('http://ddddd.ru/get/get.php',dataPost),'<br>',#13#10,[rfReplaceAll]);

    datapost.Free;
end;

PHP=============================================================================================================
<?php
//Задаем заголовок ответа
header(""Content-Type: text/html; charset=utf-8"");

//Проверяем в поступивших данных наличие данных поля ""title""
if (!empty($_POST['title'])){
    echo 'Заголовок: '.$_POST['title'].'<br>';
} else {
    echo 'Заголовок: Отсутствует'.'<br>';
}

//Проверяем в поступивших данных наличие данных поля ""content""
if (!empty($_POST['content'])){
    echo 'Содержимое: '.$_POST['content'].'<br>';
} else {
    echo 'Содержимое: Отсутствует'.'<br>';
}

//Проверяем в поступивших данных наличие прикрепленного файла ""file""
if (!empty($_FILES['file'])) {
  
 $finfo = pathinfo($_FILES['file']['name']); //получаем инфо о файле (имя, расширение и т.д.)
  
  //Проверяем тип файла в списке допустимых типов( ИМПРОВИЗАЦИЯ :) )
  if (stripos('jpgpnggif',$finfo['extension'])==0){
   echo '>>>>>>>Недопустимый тип файла<<<<<<<<';
   exit;  //Если не допустим тип, полностью останавливаем скрипт
  }
   
    
   $fname = 'get/' . 'testimgfile.' . $finfo['extension']; //формируем путь и новое имя файла
   move_uploaded_file($_FILES['file']['tmp_name'],$fname);//сохраняем временный файл 'tmp_name' в файл $fname
   echo 'https://'.$_SERVER['HTTP_HOST'].'/'.$fname; //возвращаем полный путь к файлу
   
} 
  
?>




"
VZ1LNBMZ,#1 snowybot 2000,coinwalk,JavaScript,Saturday 20th of January 2024 06:53:24 PM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((oldestbal/800).toFixed(8));
var bellance = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*5.9);
var eights = (base*6.9);
var muck = 4;
var upper = 6.9;
var downer = 2.9;
var bob = oldestbal;
var fart = ((Math.floor(oldestbal/tens))*tens);
var james = ((Math.floor(oldestbal/tens))*tens);
var betnext = ((botplus*1).toFixed(8));
 
 
function get(){
bellance = document.getElementById('pct_balance').value;
var good = ((bellance-oldestbal).toFixed(8));
console.clear();
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
    botplus = botplus*2;
    upper = 4.9;
    downer = 4.9;
    fart = parseFloat(bellance);
    bob = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
    botplus = botplus*2;
    upper = 4.9;
    downer = 4.9;
    fart = parseFloat(bellance);
}
if ((bellance<=(bob-(base*7)))&&(bellance!=fart)){
    botplus = base;
    upper = 6.9;
    downer = 2.9;
    fart = ((Math.floor(bellance/tens))*tens);
    bob = parseFloat(bellance);
}
if ((bellance>=(bob+(base*40)))&&(bellance!=fart)){
    botplus = base;
    upper = 6.9;
    downer = 2.9;
    fart = ((Math.floor(bellance/tens))*tens);
    bob = parseFloat(bellance);
}
if (((bellance-(botplus*2))<=0)&&(bellance!=fart)){
    botplus = base;
    upper = 6.9;
    downer = 2.9;
    fart = ((Math.floor(bellance/tens))*tens);
    bob = parseFloat(bellance);
}
if (bellance>=(oldestbal*24)) {
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 10);
}
get();"
k5arjWi9,snowybot,coinwalk,JavaScript,Saturday 20th of January 2024 06:35:31 PM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((oldestbal/800).toFixed(8));
var bellance = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*5.9);
var eights = (base*6.9);
var muck = 4;
var upper = 6.9;
var downer = 2.9;
var bob = oldestbal;
var fart = ((Math.floor(oldestbal/tens))*tens);
var james = ((Math.floor(oldestbal/tens))*tens);
var betnext = ((botplus*1).toFixed(8));
 
 
function get(){
bellance = document.getElementById('pct_balance').value;
var good = ((bellance-oldestbal).toFixed(8));
console.clear();
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
    botplus = botplus*2;
    upper = 4.9;
    downer = 4.9;
    fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
    botplus = botplus*2;
    upper = 4.9;
    downer = 4.9;
    fart = parseFloat(bellance);
}
if (((bellance-(botplus*2))<=(bob-(base*8)))&&(bellance!=fart)){
    botplus = base;
    upper = 6.9;
    downer = 2.9;
    fart = ((Math.floor(bellance/tens))*tens);
    bob = parseFloat(bellance);
}
if (((bellance-(botplus*2))<=0)&&(bellance!=fart)){
    botplus = base;
    upper = 6.9;
    downer = 2.9;
    fart = ((Math.floor(bellance/tens))*tens);
    bob = parseFloat(bellance);
}
if ((botplus>=(base*8))&&(bellance!=fart)){
    botplus = base;
    upper = 6.9;
    downer = 2.9;
    fart = ((Math.floor(bellance/tens))*tens);
    bob = parseFloat(bellance);
}
if (bellance>=(oldestbal*24)) {
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 10);
}
get();"
veS473q1,2024-01-20_stats.json,rdp_snitch,JSON,Saturday 20th of January 2024 06:18:11 PM CDT,"{
  ""ip"": {
    ""43.243.136.202"": 3,
    ""175.4.26.179"": 6,
    ""117.145.27.42"": 3,
    ""222.219.129.74"": 3,
    ""150.223.35.239"": 3,
    ""124.67.115.210"": 3,
    ""150.223.13.195"": 3,
    ""194.165.17.21"": 33,
    ""198.74.56.135"": 3,
    ""193.142.146.227"": 9,
    ""106.246.227.18"": 6,
    ""43.134.171.213"": 6,
    ""43.156.60.84"": 165,
    ""205.210.31.51"": 9,
    ""43.128.12.208"": 3,
    ""194.165.16.11"": 12,
    ""139.59.185.252"": 3,
    ""62.204.41.195"": 12,
    ""109.69.7.157"": 6,
    ""45.227.254.55"": 6,
    ""74.235.253.153"": 3,
    ""216.73.160.149"": 3,
    ""87.251.75.145"": 9,
    ""115.63.87.145"": 9,
    ""45.130.83.48"": 3,
    ""185.196.220.41"": 9,
    ""106.116.169.71"": 3,
    ""198.235.24.223"": 9,
    ""45.130.83.242"": 3,
    ""167.94.138.35"": 3,
    ""87.251.75.120"": 6,
    ""5.62.63.203"": 3,
    ""14.155.185.75"": 3,
    ""147.78.47.69"": 24,
    ""63.135.161.161"": 3,
    ""202.83.18.93"": 3,
    ""103.184.47.83"": 3,
    ""45.227.254.26"": 6,
    ""58.218.204.183"": 9,
    ""152.32.197.166"": 3,
    ""205.210.31.133"": 9,
    ""138.68.232.124"": 12,
    ""185.170.144.3"": 3,
    ""123.56.20.194"": 3,
    ""172.104.11.142"": 3,
    ""45.87.212.182"": 9,
    ""167.94.145.54"": 3,
    ""80.15.71.53"": 3,
    ""87.251.75.179"": 6,
    ""205.210.31.234"": 9,
    ""85.198.9.63"": 6
  },
  ""asn"": {
    ""AS4808"": 3,
    ""AS63838"": 6,
    ""AS9808"": 3,
    ""AS4134"": 18,
    ""AS58519"": 6,
    ""AS4837"": 12,
    ""AS48721"": 45,
    ""AS63949"": 6,
    ""AS208046"": 18,
    ""AS3786"": 6,
    ""AS132203"": 174,
    ""AS396982"": 36,
    ""AS14061"": 15,
    ""AS59425"": 12,
    ""AS21183"": 6,
    ""AS267784"": 12,
    ""AS8075"": 3,
    ""AS206092"": 12,
    ""AS208091"": 21,
    ""AS398324"": 3,
    ""AS198605"": 3,
    ""AS209588"": 24,
    ""AS24309"": 3,
    ""AS146817"": 3,
    ""AS135377"": 3,
    ""AS197414"": 3,
    ""AS37963"": 3,
    ""AS9009"": 9,
    ""AS398705"": 3,
    ""AS3215"": 3,
    ""AS60077"": 6
  },
  ""isp"": {
    ""China Unicom Beijing Province Network"": 3,
    ""Hengyang"": 6,
    ""China Mobile communications corporation"": 3,
    ""Chinanet"": 18,
    ""Cloud Computing Corporation"": 6,
    ""CNC Group CHINA169 Neimeng Province Network"": 3,
    ""Flyservers S.A."": 81,
    ""Akamai Technologies, Inc."": 3,
    ""ColocationX Ltd."": 18,
    ""LG DACOM Corporation"": 6,
    ""Aceville Pte.ltd"": 9,
    ""Shenzhen Tencent Computer Systems Company Limited"": 165,
    ""Google LLC"": 36,
    ""DIGITALOCEAN"": 3,
    ""Horizon LLC"": 12,
    ""Vodafone Network"": 6,
    ""Microsoft Corporation"": 3,
    ""Ipxo Limited"": 9,
    ""Xhost Internet Solutions LP"": 24,
    ""CNC Group CHINA169 Henan Province Network"": 9,
    ""Censys, Inc."": 6,
    ""AVAST Software s.r.o."": 3,
    ""Rockion LLC"": 3,
    ""Atria Convergence Technologies Pvt Ltd"": 3,
    ""Hubei Feixun Network Co., Ltd"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""DigitalOcean, LLC"": 12,
    ""Hangzhou Alibaba Advertising Co"": 3,
    ""Akamai Technologies"": 3,
    ""M247 Europe SRL"": 9,
    ""France Telecom Orange"": 3,
    ""Asre Dadeha Asiatech"": 6
  },
  ""org"": {
    ""Beijing yunchuang communication Technology Co."": 3,
    ""Chinanet HN"": 6,
    ""China Mobile"": 3,
    ""Chinanet YN"": 3,
    ""Chinanet SD"": 6,
    ""Unknown"": 30,
    ""Flyservers S.A"": 69,
    ""Linode"": 6,
    ""ColocationX Ltd"": 9,
    ""Boranet"": 6,
    ""Tencent Cloud Computing"": 165,
    ""Palo Alto Networks, Inc"": 36,
    ""DigitalOcean, LLC"": 15,
    ""Horizon LLC"": 12,
    ""UAB Host Baltic"": 12,
    ""Microsoft Azure Cloud (eastus)"": 3,
    ""Bandito Networks"": 3,
    ""Xhost Internet Solutions"": 21,
    ""VPN Consumer New York City, United States of America"": 6,
    ""Makut Investments"": 9,
    ""Chinanet HE"": 3,
    ""Censys, Inc"": 3,
    ""AVAST Software s.r.o."": 3,
    ""Chinanet GD"": 3,
    ""Ipxo LLC"": 3,
    ""BroadBand"": 3,
    ""Hubei Feixun Network Co., Ltd"": 3,
    ""Chinanet JS"": 9,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Xhostis"": 3,
    ""Aliyun Computing Co., LTD"": 3,
    ""M247 LTD"": 9,
    ""Censys, Inc."": 3,
    ""Asiatech Data Transmission company"": 6
  },
  ""regionName"": {
    ""Beijing"": 6,
    ""Hunan"": 6,
    ""Guangdong"": 6,
    ""Yunnan"": 3,
    ""Shandong"": 6,
    ""Fujian"": 3,
    ""Kaunas"": 45,
    ""New Jersey"": 6,
    ""North Holland"": 57,
    ""Gyeonggi-do"": 6,
    ""North West"": 171,
    ""California"": 48,
    ""Central and Western District"": 3,
    ""England"": 3,
    ""Moscow"": 12,
    ""Tirana"": 6,
    ""Vilnius"": 12,
    ""Virginia"": 12,
    ""New York"": 12,
    ""Henan"": 9,
    ""Hebei"": 3,
    ""Michigan"": 3,
    ""Ho Chi Minh"": 3,
    ""Karnataka"": 3,
    ""Hubei"": 3,
    ""Jiangsu"": 9,
    ""Sao Paulo"": 3,
    ""Hesse"": 12,
    ""Normandy"": 3,
    ""Tehran"": 6
  },
  ""country"": {
    ""China"": 54,
    ""Lithuania"": 57,
    ""United States"": 81,
    ""The Netherlands"": 57,
    ""South Korea"": 6,
    ""Singapore"": 171,
    ""Hong Kong"": 3,
    ""United Kingdom"": 3,
    ""Russia"": 12,
    ""Albania"": 6,
    ""Vietnam"": 3,
    ""India"": 3,
    ""Brazil"": 3,
    ""Germany"": 12,
    ""France"": 3,
    ""Iran"": 6
  },
  ""account"": {
    ""142.93.8.59"": 63,
    ""(empty)"": 27,
    ""Domain"": 24,
    ""Test"": 51,
    ""hello"": 39,
    ""Administrator"": 171,
    ""GMZdnHUAV"": 3,
    ""jFDzIc"": 3,
    ""okoogi"": 3,
    ""Datnguyentv"": 3,
    ""Administr"": 48,
    ""KJJyHcopM"": 3,
    ""qoGWFR"": 3,
    ""cjkpjA"": 3,
    ""QQgtmfZBl"": 3,
    ""UVxZzS"": 3,
    ""gYXOmL"": 3,
    ""cfz64rrn"": 12,
    ""beio"": 3,
    ""admin"": 3,
    ""tcqLypxWg"": 3,
    ""iAKkPr"": 3,
    ""kdKtrl"": 3
  },
  ""keyboard"": {
    ""Unknown"": 480
  },
  ""client_build"": {
    ""Unknown"": 480
  },
  ""client_name"": {
    ""Unknown"": 480
  },
  ""ip_type"": {
    ""Unknown"": 192,
    ""mobile"": 12,
    ""hosting"": 222,
    ""proxy"": 12,
    ""hosting & proxy"": 33,
    ""mobile & proxy"": 9
  }
}"
sqtu5Zez,2024-01-20_stats.json,rdp_snitch,JSON,Saturday 20th of January 2024 06:16:09 PM CDT,"{
  ""ip"": {
    ""43.243.136.202"": 2,
    ""175.4.26.179"": 4,
    ""117.145.27.42"": 2,
    ""222.219.129.74"": 2,
    ""150.223.35.239"": 2,
    ""124.67.115.210"": 2,
    ""150.223.13.195"": 2,
    ""194.165.17.21"": 22,
    ""198.74.56.135"": 2,
    ""193.142.146.227"": 6,
    ""106.246.227.18"": 4,
    ""43.134.171.213"": 4,
    ""43.156.60.84"": 110,
    ""205.210.31.51"": 6,
    ""43.128.12.208"": 2,
    ""194.165.16.11"": 8,
    ""139.59.185.252"": 2,
    ""62.204.41.195"": 8,
    ""109.69.7.157"": 4,
    ""45.227.254.55"": 4,
    ""74.235.253.153"": 2,
    ""216.73.160.149"": 2,
    ""87.251.75.145"": 6,
    ""115.63.87.145"": 6,
    ""45.130.83.48"": 2,
    ""185.196.220.41"": 6,
    ""106.116.169.71"": 2,
    ""198.235.24.223"": 6,
    ""45.130.83.242"": 2,
    ""167.94.138.35"": 2,
    ""87.251.75.120"": 4,
    ""5.62.63.203"": 2,
    ""14.155.185.75"": 2,
    ""147.78.47.69"": 16,
    ""63.135.161.161"": 2,
    ""202.83.18.93"": 2,
    ""103.184.47.83"": 2,
    ""45.227.254.26"": 4,
    ""58.218.204.183"": 6,
    ""152.32.197.166"": 2,
    ""205.210.31.133"": 6,
    ""138.68.232.124"": 8,
    ""185.170.144.3"": 2,
    ""123.56.20.194"": 2,
    ""172.104.11.142"": 2,
    ""45.87.212.182"": 6,
    ""167.94.145.54"": 2,
    ""80.15.71.53"": 2,
    ""87.251.75.179"": 4,
    ""205.210.31.234"": 6,
    ""85.198.9.63"": 4
  },
  ""asn"": {
    ""AS4808"": 2,
    ""AS63838"": 4,
    ""AS9808"": 2,
    ""AS4134"": 12,
    ""AS58519"": 4,
    ""AS4837"": 8,
    ""AS48721"": 30,
    ""AS63949"": 4,
    ""AS208046"": 12,
    ""AS3786"": 4,
    ""AS132203"": 116,
    ""AS396982"": 24,
    ""AS14061"": 10,
    ""AS59425"": 8,
    ""AS21183"": 4,
    ""AS267784"": 8,
    ""AS8075"": 2,
    ""AS206092"": 8,
    ""AS208091"": 14,
    ""AS398324"": 2,
    ""AS198605"": 2,
    ""AS209588"": 16,
    ""AS24309"": 2,
    ""AS146817"": 2,
    ""AS135377"": 2,
    ""AS197414"": 2,
    ""AS37963"": 2,
    ""AS9009"": 6,
    ""AS398705"": 2,
    ""AS3215"": 2,
    ""AS60077"": 4
  },
  ""isp"": {
    ""China Unicom Beijing Province Network"": 2,
    ""Hengyang"": 4,
    ""China Mobile communications corporation"": 2,
    ""Chinanet"": 12,
    ""Cloud Computing Corporation"": 4,
    ""CNC Group CHINA169 Neimeng Province Network"": 2,
    ""Flyservers S.A."": 54,
    ""Akamai Technologies, Inc."": 2,
    ""ColocationX Ltd."": 12,
    ""LG DACOM Corporation"": 4,
    ""Aceville Pte.ltd"": 6,
    ""Shenzhen Tencent Computer Systems Company Limited"": 110,
    ""Google LLC"": 24,
    ""DIGITALOCEAN"": 2,
    ""Horizon LLC"": 8,
    ""Vodafone Network"": 4,
    ""Microsoft Corporation"": 2,
    ""Ipxo Limited"": 6,
    ""Xhost Internet Solutions LP"": 16,
    ""CNC Group CHINA169 Henan Province Network"": 6,
    ""Censys, Inc."": 4,
    ""AVAST Software s.r.o."": 2,
    ""Rockion LLC"": 2,
    ""Atria Convergence Technologies Pvt Ltd"": 2,
    ""Hubei Feixun Network Co., Ltd"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""DigitalOcean, LLC"": 8,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""Akamai Technologies"": 2,
    ""M247 Europe SRL"": 6,
    ""France Telecom Orange"": 2,
    ""Asre Dadeha Asiatech"": 4
  },
  ""org"": {
    ""Beijing yunchuang communication Technology Co."": 2,
    ""Chinanet HN"": 4,
    ""China Mobile"": 2,
    ""Chinanet YN"": 2,
    ""Chinanet SD"": 4,
    ""Unknown"": 20,
    ""Flyservers S.A"": 46,
    ""Linode"": 4,
    ""ColocationX Ltd"": 6,
    ""Boranet"": 4,
    ""Tencent Cloud Computing"": 110,
    ""Palo Alto Networks, Inc"": 24,
    ""DigitalOcean, LLC"": 10,
    ""Horizon LLC"": 8,
    ""UAB Host Baltic"": 8,
    ""Microsoft Azure Cloud (eastus)"": 2,
    ""Bandito Networks"": 2,
    ""Xhost Internet Solutions"": 14,
    ""VPN Consumer New York City, United States of America"": 4,
    ""Makut Investments"": 6,
    ""Chinanet HE"": 2,
    ""Censys, Inc"": 2,
    ""AVAST Software s.r.o."": 2,
    ""Chinanet GD"": 2,
    ""Ipxo LLC"": 2,
    ""BroadBand"": 2,
    ""Hubei Feixun Network Co., Ltd"": 2,
    ""Chinanet JS"": 6,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Xhostis"": 2,
    ""Aliyun Computing Co., LTD"": 2,
    ""M247 LTD"": 6,
    ""Censys, Inc."": 2,
    ""Asiatech Data Transmission company"": 4
  },
  ""regionName"": {
    ""Beijing"": 4,
    ""Hunan"": 4,
    ""Guangdong"": 4,
    ""Yunnan"": 2,
    ""Shandong"": 4,
    ""Fujian"": 2,
    ""Kaunas"": 30,
    ""New Jersey"": 4,
    ""North Holland"": 38,
    ""Gyeonggi-do"": 4,
    ""North West"": 114,
    ""California"": 32,
    ""Central and Western District"": 2,
    ""England"": 2,
    ""Moscow"": 8,
    ""Tirana"": 4,
    ""Vilnius"": 8,
    ""Virginia"": 8,
    ""New York"": 8,
    ""Henan"": 6,
    ""Hebei"": 2,
    ""Michigan"": 2,
    ""Ho Chi Minh"": 2,
    ""Karnataka"": 2,
    ""Hubei"": 2,
    ""Jiangsu"": 6,
    ""Sao Paulo"": 2,
    ""Hesse"": 8,
    ""Normandy"": 2,
    ""Tehran"": 4
  },
  ""country"": {
    ""China"": 36,
    ""Lithuania"": 38,
    ""United States"": 54,
    ""The Netherlands"": 38,
    ""South Korea"": 4,
    ""Singapore"": 114,
    ""Hong Kong"": 2,
    ""United Kingdom"": 2,
    ""Russia"": 8,
    ""Albania"": 4,
    ""Vietnam"": 2,
    ""India"": 2,
    ""Brazil"": 2,
    ""Germany"": 8,
    ""France"": 2,
    ""Iran"": 4
  },
  ""account"": {
    ""142.93.8.59"": 42,
    ""(empty)"": 18,
    ""Domain"": 16,
    ""Test"": 34,
    ""hello"": 26,
    ""Administrator"": 114,
    ""GMZdnHUAV"": 2,
    ""jFDzIc"": 2,
    ""okoogi"": 2,
    ""Datnguyentv"": 2,
    ""Administr"": 32,
    ""KJJyHcopM"": 2,
    ""qoGWFR"": 2,
    ""cjkpjA"": 2,
    ""QQgtmfZBl"": 2,
    ""UVxZzS"": 2,
    ""gYXOmL"": 2,
    ""cfz64rrn"": 8,
    ""beio"": 2,
    ""admin"": 2,
    ""tcqLypxWg"": 2,
    ""iAKkPr"": 2,
    ""kdKtrl"": 2
  },
  ""keyboard"": {
    ""Unknown"": 320
  },
  ""client_build"": {
    ""Unknown"": 320
  },
  ""client_name"": {
    ""Unknown"": 320
  },
  ""ip_type"": {
    ""Unknown"": 128,
    ""mobile"": 8,
    ""hosting"": 148,
    ""proxy"": 8,
    ""hosting & proxy"": 22,
    ""mobile & proxy"": 6
  }
}"
RWTgNptC,2024-01-20_stats.json,rdp_snitch,JSON,Saturday 20th of January 2024 06:15:08 PM CDT,"{
  ""ip"": {
    ""43.243.136.202"": 1,
    ""175.4.26.179"": 2,
    ""117.145.27.42"": 1,
    ""222.219.129.74"": 1,
    ""150.223.35.239"": 1,
    ""124.67.115.210"": 1,
    ""150.223.13.195"": 1,
    ""194.165.17.21"": 11,
    ""198.74.56.135"": 1,
    ""193.142.146.227"": 3,
    ""106.246.227.18"": 2,
    ""43.134.171.213"": 2,
    ""43.156.60.84"": 55,
    ""205.210.31.51"": 3,
    ""43.128.12.208"": 1,
    ""194.165.16.11"": 4,
    ""139.59.185.252"": 1,
    ""62.204.41.195"": 4,
    ""109.69.7.157"": 2,
    ""45.227.254.55"": 2,
    ""74.235.253.153"": 1,
    ""216.73.160.149"": 1,
    ""87.251.75.145"": 3,
    ""115.63.87.145"": 3,
    ""45.130.83.48"": 1,
    ""185.196.220.41"": 3,
    ""106.116.169.71"": 1,
    ""198.235.24.223"": 3,
    ""45.130.83.242"": 1,
    ""167.94.138.35"": 1,
    ""87.251.75.120"": 2,
    ""5.62.63.203"": 1,
    ""14.155.185.75"": 1,
    ""147.78.47.69"": 8,
    ""63.135.161.161"": 1,
    ""202.83.18.93"": 1,
    ""103.184.47.83"": 1,
    ""45.227.254.26"": 2,
    ""58.218.204.183"": 3,
    ""152.32.197.166"": 1,
    ""205.210.31.133"": 3,
    ""138.68.232.124"": 4,
    ""185.170.144.3"": 1,
    ""123.56.20.194"": 1,
    ""172.104.11.142"": 1,
    ""45.87.212.182"": 3,
    ""167.94.145.54"": 1,
    ""80.15.71.53"": 1,
    ""87.251.75.179"": 2,
    ""205.210.31.234"": 3,
    ""85.198.9.63"": 2
  },
  ""asn"": {
    ""AS4808"": 1,
    ""AS63838"": 2,
    ""AS9808"": 1,
    ""AS4134"": 6,
    ""AS58519"": 2,
    ""AS4837"": 4,
    ""AS48721"": 15,
    ""AS63949"": 2,
    ""AS208046"": 6,
    ""AS3786"": 2,
    ""AS132203"": 58,
    ""AS396982"": 12,
    ""AS14061"": 5,
    ""AS59425"": 4,
    ""AS21183"": 2,
    ""AS267784"": 4,
    ""AS8075"": 1,
    ""AS206092"": 4,
    ""AS208091"": 7,
    ""AS398324"": 1,
    ""AS198605"": 1,
    ""AS209588"": 8,
    ""AS24309"": 1,
    ""AS146817"": 1,
    ""AS135377"": 1,
    ""AS197414"": 1,
    ""AS37963"": 1,
    ""AS9009"": 3,
    ""AS398705"": 1,
    ""AS3215"": 1,
    ""AS60077"": 2
  },
  ""isp"": {
    ""China Unicom Beijing Province Network"": 1,
    ""Hengyang"": 2,
    ""China Mobile communications corporation"": 1,
    ""Chinanet"": 6,
    ""Cloud Computing Corporation"": 2,
    ""CNC Group CHINA169 Neimeng Province Network"": 1,
    ""Flyservers S.A."": 27,
    ""Akamai Technologies, Inc."": 1,
    ""ColocationX Ltd."": 6,
    ""LG DACOM Corporation"": 2,
    ""Aceville Pte.ltd"": 3,
    ""Shenzhen Tencent Computer Systems Company Limited"": 55,
    ""Google LLC"": 12,
    ""DIGITALOCEAN"": 1,
    ""Horizon LLC"": 4,
    ""Vodafone Network"": 2,
    ""Microsoft Corporation"": 1,
    ""Ipxo Limited"": 3,
    ""Xhost Internet Solutions LP"": 8,
    ""CNC Group CHINA169 Henan Province Network"": 3,
    ""Censys, Inc."": 2,
    ""AVAST Software s.r.o."": 1,
    ""Rockion LLC"": 1,
    ""Atria Convergence Technologies Pvt Ltd"": 1,
    ""Hubei Feixun Network Co., Ltd"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""DigitalOcean, LLC"": 4,
    ""Hangzhou Alibaba Advertising Co"": 1,
    ""Akamai Technologies"": 1,
    ""M247 Europe SRL"": 3,
    ""France Telecom Orange"": 1,
    ""Asre Dadeha Asiatech"": 2
  },
  ""org"": {
    ""Beijing yunchuang communication Technology Co."": 1,
    ""Chinanet HN"": 2,
    ""China Mobile"": 1,
    ""Chinanet YN"": 1,
    ""Chinanet SD"": 2,
    ""Unknown"": 10,
    ""Flyservers S.A"": 23,
    ""Linode"": 2,
    ""ColocationX Ltd"": 3,
    ""Boranet"": 2,
    ""Tencent Cloud Computing"": 55,
    ""Palo Alto Networks, Inc"": 12,
    ""DigitalOcean, LLC"": 5,
    ""Horizon LLC"": 4,
    ""UAB Host Baltic"": 4,
    ""Microsoft Azure Cloud (eastus)"": 1,
    ""Bandito Networks"": 1,
    ""Xhost Internet Solutions"": 7,
    ""VPN Consumer New York City, United States of America"": 2,
    ""Makut Investments"": 3,
    ""Chinanet HE"": 1,
    ""Censys, Inc"": 1,
    ""AVAST Software s.r.o."": 1,
    ""Chinanet GD"": 1,
    ""Ipxo LLC"": 1,
    ""BroadBand"": 1,
    ""Hubei Feixun Network Co., Ltd"": 1,
    ""Chinanet JS"": 3,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Xhostis"": 1,
    ""Aliyun Computing Co., LTD"": 1,
    ""M247 LTD"": 3,
    ""Censys, Inc."": 1,
    ""Asiatech Data Transmission company"": 2
  },
  ""regionName"": {
    ""Beijing"": 2,
    ""Hunan"": 2,
    ""Guangdong"": 2,
    ""Yunnan"": 1,
    ""Shandong"": 2,
    ""Fujian"": 1,
    ""Kaunas"": 15,
    ""New Jersey"": 2,
    ""North Holland"": 19,
    ""Gyeonggi-do"": 2,
    ""North West"": 57,
    ""California"": 16,
    ""Central and Western District"": 1,
    ""England"": 1,
    ""Moscow"": 4,
    ""Tirana"": 2,
    ""Vilnius"": 4,
    ""Virginia"": 4,
    ""New York"": 4,
    ""Henan"": 3,
    ""Hebei"": 1,
    ""Michigan"": 1,
    ""Ho Chi Minh"": 1,
    ""Karnataka"": 1,
    ""Hubei"": 1,
    ""Jiangsu"": 3,
    ""Sao Paulo"": 1,
    ""Hesse"": 4,
    ""Normandy"": 1,
    ""Tehran"": 2
  },
  ""country"": {
    ""China"": 18,
    ""Lithuania"": 19,
    ""United States"": 27,
    ""The Netherlands"": 19,
    ""South Korea"": 2,
    ""Singapore"": 57,
    ""Hong Kong"": 1,
    ""United Kingdom"": 1,
    ""Russia"": 4,
    ""Albania"": 2,
    ""Vietnam"": 1,
    ""India"": 1,
    ""Brazil"": 1,
    ""Germany"": 4,
    ""France"": 1,
    ""Iran"": 2
  },
  ""account"": {
    ""142.93.8.59"": 21,
    ""(empty)"": 9,
    ""Domain"": 8,
    ""Test"": 17,
    ""hello"": 13,
    ""Administrator"": 57,
    ""GMZdnHUAV"": 1,
    ""jFDzIc"": 1,
    ""okoogi"": 1,
    ""Datnguyentv"": 1,
    ""Administr"": 16,
    ""KJJyHcopM"": 1,
    ""qoGWFR"": 1,
    ""cjkpjA"": 1,
    ""QQgtmfZBl"": 1,
    ""UVxZzS"": 1,
    ""gYXOmL"": 1,
    ""cfz64rrn"": 4,
    ""beio"": 1,
    ""admin"": 1,
    ""tcqLypxWg"": 1,
    ""iAKkPr"": 1,
    ""kdKtrl"": 1
  },
  ""keyboard"": {
    ""Unknown"": 160
  },
  ""client_build"": {
    ""Unknown"": 160
  },
  ""client_name"": {
    ""Unknown"": 160
  },
  ""ip_type"": {
    ""Unknown"": 64,
    ""mobile"": 4,
    ""hosting"": 74,
    ""proxy"": 4,
    ""hosting & proxy"": 11,
    ""mobile & proxy"": 3
  }
}"
KwSLuF6F,22. cute folder,rosiuel,HTML,Saturday 20th of January 2024 06:10:21 PM CDT,"<!--

    [ 22 | CUTE FOLDER ]
    
    turn OFF WYSIWYG
    turn ON code editor

    use chevrons on the side to stay organized
<- over here

    DO NOT REMOVE CREDIT
    
    ~ RESOURCES ~
    ♡ free live code editor :  https://th.circlejourney.net/
    ♡ coding help forum     :  https://toyhou.se/~forums/16.htmlcss-graphics/48845.-help-thread-ask-your-questions-here-
    ♡ how to edit icons     :  https://toyhou.se/3536712.
    ♡ coding resources      :  https://toyhou.se/Elithian/characters/folder:881832

    ~ COLORS ~
    ♡ accent  : #e690a7
    
    use ctrl+f to quickly change colors

-->

<div class=""mx-auto"" style=""max-width: 600px;"">
    <div class=""card border-0 p-1 bg-faded"">
        <div class=""card border-0 p-2"">
            
            <!-- header -->
            <div
                class=""p-5 card text-center border-0 mb-2 align-items-center justify-content-center""
                style=""
                    background: url(
                    
                    https://images.unsplash.com/photo-1523992038393-d5ab874a077e?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
                    
                    ) center no-repeat;
                    background-size: cover;
                ""
            >
                <h1 class=""m-0"" style=""font-size: 3rem; color: #fff; text-shadow: 0 0 10px #000; font-family: Arial;"">
                    <span class=""text-uppercase"">
                        <span style=""color: #e690a7;"">F</span>older
                        <span style=""color: #e690a7;"">N</span>ame
                    </span>
                </h1>
            </div>
            <!-- end header -->

            <div class=""row no-gutters"">
                
                <!-- nav -->
                <div class=""col-lg mr-lg-2 mb-lg-0 mb-2"">
                    <ul class=""nav nav-pills flex-column h-100"">
                        <!-- 01 -->
                        <li class=""nav-item mb-2 h-100"">
                            <a
                                href=""#warnings""
                                class=""nav-link active btn btn-default align-items-center justify-content-center h-100""
                                data-toggle=""tab""
                                style=""color: #fff; background: #e690a7; border: 1px solid #e690a7; box-shadow: none;""
                            >
                                <i class=""fa-light fa-warning fa-2x""></i>
                            </a>
                        </li>

                        <!-- 02 -->
                        <li class=""nav-item mb-2 h-100"">
                            <a href=""#intro"" class=""nav-link btn btn-default align-items-center justify-content-center h-100"" data-toggle=""tab"" style=""color: #fff; background: #e690a7; border: 1px solid #e690a7; box-shadow: none;"">
                                <i class=""fa-light fa-info-circle fa-2x""></i>
                            </a>
                        </li>

                        <!-- 03 -->
                        <li class=""nav-item mb-2 h-100"">
                            <a href=""#locals"" class=""nav-link btn btn-default align-items-center justify-content-center h-100"" data-toggle=""tab"" style=""color: #fff; background: #e690a7; border: 1px solid #e690a7; box-shadow: none;"">
                                <i class=""fa-light fa-building fa-2x""></i>
                            </a>
                        </li>

                        <!-- 04 -->
                        <li class=""nav-item h-100"">
                            <a href=""#characters"" class=""nav-link btn btn-default align-items-center justify-content-center h-100"" data-toggle=""tab"" style=""color: #fff; background: #e690a7; border: 1px solid #e690a7; box-shadow: none;"">
                                <i class=""fa-light fa-users fa-2x""></i>
                            </a>
                        </li>
                    </ul>
                </div>
                <!-- end nav -->

                <!-- content -->
                <div class=""col-lg-10"">
                    <div class=""tab-content text-justify"">
                        
                        <!-- warnings -->
                        <div id=""warnings"" class=""tab-pane fade active show"" style=""height: 300px;"">
                            <div class=""h-100 flex-column"">
                                <!-- header -->
                                <div class=""card border-0 p-3 bg-faded text-center"">
                                    <h1 class=""m-0"">
                                        <i class=""fa-solid fa-heart fa-fw"" style=""color: #e690a7;""></i>

                                        GENERAL WARNINGS

                                        <i class=""fa-solid fa-heart fa-fw"" style=""color: #e690a7;""></i>
                                    </h1>
                                </div>

                                <!-- text // this box scrolls -->
                                <div class=""h-100 text-justify my-2 overflow-auto"">
                                    <p>
                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et
                                        velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.
                                    </p>

                                    <!-- add more above here -->
                                </div>

                                <!-- end text -->

                                <div class=""h-100 text-center"">
                                    <!-- warnings -->
                                    <div class=""flex-row no-gutters"" style=""overflow-x: auto; font-size: 10px;"">
                                        
                                        <!-- warning -->
                                        <div class=""col card bg-faded border-0 p-3 align-items-center mx-1"">
                                            <!-- icon -->
                                            <i class=""fa-solid fa-skull fa-fw fa-3x"" style=""color: #e690a7;""></i>

                                            <hr class=""my-2"" />
                                            <span class=""text-uppercase"">
                                                Death
                                            </span>
                                        </div>
                                        <!-- end warning -->

                                        <!-- warning -->
                                        <div class=""col card bg-faded border-0 p-3 align-items-center mx-1"">
                                            <!-- icon -->
                                            <i class=""fa-solid fa-pills fa-fw fa-3x"" style=""color: #e690a7;""></i>

                                            <hr class=""my-2"" />
                                            <span class=""text-uppercase"">
                                                Drugs
                                            </span>
                                        </div>
                                        <!-- end warning -->

                                        <!-- warning -->
                                        <div class=""col card bg-faded border-0 p-3 align-items-center mx-1"">
                                            <!-- icon -->
                                            <i class=""fa-solid fa-heart fa-fw fa-3x"" style=""color: #e690a7;""></i>

                                            <hr class=""my-2"" />
                                            <span class=""text-uppercase"">
                                                Sexual Themes
                                            </span>
                                        </div>
                                        <!-- end warning -->

                                        <!-- warning -->
                                        <div class=""col card bg-faded border-0 p-3 align-items-center mx-1"">
                                            <!-- icon -->
                                            <i class=""fa-solid fa-hand fa-fw fa-3x"" style=""color: #e690a7;""></i>

                                            <hr class=""my-2"" />
                                            <span class=""text-uppercase"">
                                                Gore
                                            </span>
                                        </div>
                                        <!-- end warning -->

                                        <!-- warning -->
                                        <div class=""col card bg-faded border-0 p-3 align-items-center mx-1"">
                                            <!-- icon -->
                                            <i class=""fa-solid fa-tint fa-fw fa-3x"" style=""color: #e690a7;""></i>

                                            <hr class=""my-2"" />
                                            <span class=""text-uppercase"">
                                                Blood
                                            </span>
                                        </div>
                                        <!-- end warning -->

                                        <!-- warning -->
                                        <div class=""col card bg-faded border-0 p-3 align-items-center mx-1"">
                                            <!-- icon -->
                                            <i class=""fa-solid fa-star fa-fw fa-3x"" style=""color: #e690a7;""></i>

                                            <hr class=""my-2"" />
                                            <span class=""text-uppercase"">
                                                Bright Colors
                                            </span>
                                        </div>
                                        <!-- end warning -->

                                        <!-- warning -->
                                        <div class=""col card bg-faded border-0 p-3 align-items-center mx-1"">
                                            <!-- icon -->
                                            <i class=""fa-solid fa-hand-fist fa-fw fa-3x"" style=""color: #e690a7;""></i>

                                            <hr class=""my-2"" />
                                            <span class=""text-uppercase"">
                                                Abuse
                                            </span>
                                        </div>
                                        <!-- end warning -->

                                        <!-- add more above here -->
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- end warnings -->

                        <!-- intro -->
                        <div id=""intro"" class=""tab-pane fade"" style=""height: 300px;"">
                            <div class=""h-100 flex-column"">
                                <!-- header -->
                                <div class=""card border-0 p-3 bg-faded mb-2 text-center"">
                                    <h1 class=""m-0"">
                                        <i class=""fa-solid fa-heart fa-fw"" style=""color: #e690a7;""></i>

                                        INTRODUCTION

                                        <i class=""fa-solid fa-heart fa-fw"" style=""color: #e690a7;""></i>
                                    </h1>
                                </div>

                                <!-- quote -->
                                <div class=""py-2 mb-2 text-center"">
                                    <p class=""font-italic"">
                                        <i class=""fa-duotone fa-quote-left fa-fw"" style=""color: #e690a7;""></i>

                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.

                                        <i class=""fa-duotone fa-quote-right fa-fw"" style=""color: #e690a7;""></i>
                                    </p>
                                </div>

                                <div class=""card border-0 p-3 bg-faded h-100 overflow-auto"">
                                    <p>
                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et
                                        velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.
                                    </p>
                                    <p>
                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et
                                        velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.
                                    </p>

                                    <!-- add more above here -->
                                </div>
                            </div>
                        </div>
                        <!-- end intro -->

                        <!-- places -->
                        <div id=""locals"" class=""tab-pane fade"" style=""height: 300px;"">
                            <div class=""h-100 flex-column"">
                                <!-- header -->
                                <div class=""card border-0 p-3 bg-faded mb-2 text-center"">
                                    <h1 class=""m-0 kirakira"">
                                        <i class=""fa-solid fa-heart fa-fw"" style=""color: #e690a7;""></i>

                                        NOTABLE LOCATIONS

                                        <i class=""fa-solid fa-heart fa-fw"" style=""color: #e690a7;""></i>
                                    </h1>
                                </div>

                                <!-- carousel -->
                                <div class=""h-100 overflow-auto"">
                                    <div class=""carousel slide pointer-event h-100"" id=""places"" data-pause=""true"">
                                        <div class=""carousel-inner h-100"">
                                            <!-- make sure your place 1 is the only one with ""active"" or it'll break the carousel -->

                                            <!-- place 1 -->
                                            <div class=""carousel-item active h-100"">
                                                <div class=""row no-gutters h-100"">
                                                    <!-- side image -->
                                                    <div
                                                        class=""col-4 card border-0 h-100""
                                                        style=""
                                                            background: url(
                                                            
                                                            https://images.unsplash.com/photo-1520052205864-92d242b3a76b?q=80&w=2069&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
                                                            
                                                            )
                                                                center no-repeat;
                                                            background-size: cover;
                                                        ""
                                                    ></div>
                                                    <div class=""col card border-0 bg-faded p-3 text-justify ml-lg-2 h-100 overflow-auto"">
                                                        <h3>
                                                            Location Name
                                                        </h3>
                                                        <!-- description -->
                                                        <div class=""text-justify"" style=""line-height: 1.2rem;"">
                                                            <p>
                                                                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat
                                                                non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.
                                                            </p>
                                                            <!-- add more above here -->
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <!-- end place 1 -->

                                            <!-- place 2 -->
                                            <div class=""carousel-item h-100"">
                                                <div class=""row no-gutters h-100"">
                                                    <!-- side image -->
                                                    <div
                                                        class=""col-4 card border-0 h-100""
                                                        style=""
                                                            background: url(
                                                            
                                                            https://images.unsplash.com/photo-1492171983775-a51717616c0d?q=80&w=2064&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
                                                            
                                                            )
                                                                center no-repeat;
                                                            background-size: cover;
                                                        ""
                                                    ></div>
                                                    <div class=""col card border-0 bg-faded p-3 text-justify ml-lg-2 h-100 overflow-auto"">
                                                        <h3>
                                                            Location Name
                                                        </h3>
                                                        <!-- description -->
                                                        <div class=""text-justify"" style=""line-height: 1.2rem;"">
                                                            <p>
                                                                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat
                                                                non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.
                                                            </p>
                                                            <p>
                                                                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat
                                                                non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.
                                                            </p>
                                                            <!-- add more above here -->
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <!-- end place 2 -->

                                            <!-- place 3 -->
                                            <div class=""carousel-item h-100"">
                                                <div class=""row no-gutters h-100"">
                                                    <!-- side image -->
                                                    <div
                                                        class=""col-4 card border-0 h-100""
                                                        style=""
                                                            background: url(
                                                            
                                                            https://images.unsplash.com/photo-1514449372970-c013485804bd?q=80&w=1932&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
                                                            
                                                            )
                                                                center no-repeat;
                                                            background-size: cover;
                                                        ""
                                                    ></div>
                                                    <div class=""col card border-0 bg-faded p-3 text-justify ml-lg-2 h-100 overflow-auto"">
                                                        <h3>
                                                            Location Name
                                                        </h3>
                                                        <!-- description -->
                                                        <div class=""text-justify"" style=""line-height: 1.2rem;"">
                                                            <p>
                                                                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat
                                                                non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.
                                                            </p>
                                                            <!-- add more above here -->
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <!-- end place 3 -->

                                            <!-- add more above here -->
                                        </div>
                                    </div>
                                </div>

                                <!-- buttons -->
                                <div class=""row no-gutters mt-2"">
                                    <div class=""col mr-3"">
                                        <a href=""#places"" data-slide=""prev"" class=""btn btn-default w-100 p-1"" style=""background: #e690a7; border: 1px solid #e690a7; color: #fff; box-shadow: none;"">
                                            <i class=""fa-light fa-arrow-left fa-fw""></i>
                                        </a>
                                    </div>
                                    <div class=""col"">
                                        <a href=""#places"" data-slide=""next"" class=""btn btn-default w-100 p-1"" style=""background: #e690a7; border: 1px solid #e690a7; color: #fff; box-shadow: none;"">
                                            <i class=""fa-light fa-arrow-right fa-fw""></i>
                                        </a>
                                    </div>
                                </div>
                                <!-- end buttons -->
                            </div>
                        </div>
                        <!-- end places -->

                        <!-- characters -->
                        <div id=""characters"" class=""tab-pane fade"" style=""height: 300px;"">
                            <div class=""h-100 flex-column"">
                                <div class=""card border-0 p-3 bg-faded mb-2 text-center"">
                                    <h1 class=""m-0"">
                                        <i class=""fa-solid fa-heart fa-fw"" style=""color: #e690a7;""></i>

                                        CHARACTERS

                                        <i class=""fa-solid fa-heart fa-fw"" style=""color: #e690a7;""></i>
                                    </h1>
                                </div>

                                <!-- carousel -->
                                <div class=""h-100 overflow-auto"">
                                    <!-- character -->
                                    <div class=""row no-gutters my-1"">
                                        <!-- image -->
                                        <div
                                            class=""col-2 card border-0 bg-faded""
                                            style=""
                                                background: url(
                                                
                                                https://images.unsplash.com/photo-1570727624862-3008fe67a6be?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
                                                
                                                ) center
                                                    no-repeat;
                                                background-size: cover;
                                            ""
                                        ></div>
                                        <div class=""col card border-0 bg-faded p-3 mx-2 align-items-center justify-content-center"">
                                            <a href=""CHAR_LINK"" style=""color: #e690a7;""> NAME <i class=""fa-light fa-heart""></i> </a>
                                            <small>
                                                main character
                                            </small>
                                        </div>
                                    </div>
                                    <!-- end character -->

                                    <!-- character -->
                                    <div class=""row no-gutters my-1"">
                                        <!-- image -->
                                        <div
                                            class=""col-2 card border-0 bg-faded""
                                            style=""
                                                background: url(
                                                
                                                https://images.unsplash.com/photo-1570727624862-3008fe67a6be?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
                                                
                                                ) center
                                                    no-repeat;
                                                background-size: cover;
                                            ""
                                        ></div>
                                        <div class=""col card border-0 bg-faded p-3 mx-2 align-items-center justify-content-center"">
                                            <a href=""CHAR_LINK"" style=""color: #e690a7;""> NAME <i class=""fa-light fa-star""></i> </a>
                                            <small>
                                                secondary character
                                            </small>
                                        </div>
                                    </div>
                                    <!-- end character -->

                                    <!-- character -->
                                    <div class=""row no-gutters my-1"">
                                        <!-- image -->
                                        <div
                                            class=""col-2 card border-0 bg-faded""
                                            style=""
                                                background: url(
                                                
                                                https://images.unsplash.com/photo-1570727624862-3008fe67a6be?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
                                                
                                                ) center
                                                    no-repeat;
                                                background-size: cover;
                                            ""
                                        ></div>
                                        <div class=""col card border-0 bg-faded p-3 mx-2 align-items-center justify-content-center"">
                                            <a href=""CHAR_LINK"" style=""color: #e690a7;""> NAME <i class=""fa-light fa-star""></i> </a>
                                            <small>
                                                secondary character
                                            </small>
                                        </div>
                                    </div>
                                    <!-- end character -->

                                    <!-- character -->
                                    <div class=""row no-gutters my-1"">
                                        <!-- image -->
                                        <div
                                            class=""col-2 card border-0 bg-faded""
                                            style=""
                                                background: url(
                                                
                                                https://images.unsplash.com/photo-1570727624862-3008fe67a6be?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
                                                
                                                ) center
                                                    no-repeat;
                                                background-size: cover;
                                            ""
                                        ></div>
                                        <div class=""col card border-0 bg-faded p-3 mx-2 align-items-center justify-content-center"">
                                            <a href=""CHAR_LINK"" style=""color: #e690a7;""> NAME <i class=""fa-light fa-circle""></i> </a>
                                            <small>
                                                background character
                                            </small>
                                        </div>
                                    </div>
                                    <!-- end character -->

                                    <!-- add more above here -->
                                </div>
                            </div>
                        </div>
                        <!-- end characters -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- credit // DO NOT REMOVE -->
    <div class=""text-right"">
        <a href=""https://toyhou.se/25411656.22-cute-folder"" style=""color: #e690a7;"" class=""tooltipster"" title=""code by peachybonnie"">
            <i class=""fa-solid fa-heart fa-xs""></i>
        </a>
    </div>
</div>"
ztdU7hVs,MaanOS/cc:tweaked - string,maanlamp,Lua,Saturday 20th of January 2024 06:03:30 PM CDT,"local String = {};

function String.isLetter (char)
	local code = char:sub(1, 1):byte();
	if (code >= 98 and code <= 122) then
		return true; -- a-z
	elseif (code >= 65 and code <= 90) then
		return true; -- A-Z
	end
	return false;
end;

function String.charAt(str, at)
	return str:sub(at, at);
end

return String;"
UViAHFXZ,Lizard Game,AlphaBanStorage,C#,Saturday 20th of January 2024 05:56:37 PM CDT,"Fitky_austin
Emblazes
Lizard
TheBeastMare"
t2xjBLx7,MaanOS/cc:tweaked - timer,maanlamp,Lua,Saturday 20th of January 2024 05:42:46 PM CDT,"local Event = require(""core.event"");

local Timer = {};

function Timer.duration(f, ms)
	local id = os.startTimer(ms / 1000);
	local function handler(event)
		if (event.args[1] == id) then
			f();
		end
	end
	Event.on(""timer"", handler, { once = true });
	local function clear()
		os.cancelTimer(id);
		Event.off(""timer"", handler);
	end
	return clear;
end

function Timer.periodic(f, ms)
	local id = os.startTimer(ms / 1000);
	local function handler(event)
		if (event.args[1] == id) then
			f();
			id = os.startTimer(ms / 1000);
		end
	end
	Event.on(""timer"", handler);
	local function clear()
		os.cancelTimer(id);
		Event.off(""timer"", handler);
	end
	return clear;
end

function Timer.schedule(f, atHour)
	local id = os.setAlarm(atHour);
	local function handler(event)
		if (event.args[1] == id) then
			f();
		end
	end
	Event.on(""alarm"", handler, { once = true });
	local function clear()
		os.cancelAlarm(id);
		Event.off(""alarm"", handler);
	end
	return clear;
end

return Timer;"
7PBewZVi,BWR - Changelog 20/01/24,SSilver,Diff,Saturday 20th of January 2024 05:41:21 PM CDT,"Detonator
+ Removed self-damage penalty
+ Removed afterburn penalty on splash
Scorch Shot
+ Removed afterburn penalty on splash
Afterburn against groups really wasn't as problematic as previously thought given the timing needed on the Detonator and the delay of the Scorch Shot. The Detonator especially was falling behind in movement potential with the airblast jumps Pyro has, so the self-damage nerf was removed to make the greater jumps this weapon has more desireable.

Iron Bomber
+ Reverted push force to grenade jumping
+ Removed damage penalty from rollers
- Added: -10% damage penalty
- Reverted self damage from grenades
The weapon didn't have serious enough downsides to it. The best that could be figured for a weapon that emphaizes greater roller strength was to give it a direct damage penalty instead. This way the launcher has a more defined niche in being worse against single healthier targets while better against groups crowded groups.

Chargin' Targe
+ Added -33% reduction in push force taken from damage
This shield felt a little left behind, being only really useful in tanking a lot of damage. This change should help the demoman close the gap when engaging in melee and charging in.

Scotsman's Skullcutter
+ Charging is unaffected by speed penalty
A fix to the weapon's speed erroneously impacting how far your charges went.

Syringe Gun
~ Below applies to all unlocks
+ Crit heal recovery increased to -5 seconds on hit (was -3s)
Feedback on syringes showed they could use some speeding up, so it was buffed to make the process smoother, especially when healing a larger group.

Amputator
+ Recreated on-hit effect to prevent it cancelling other healing beams
Fixing a strange behavior with the on-hit effect cancelling other healing sources once it was over, including Quick-Fix's Megaheal and the weapon's own Medicating Melody taunt. This version shouldn't override any extra healing but will be canceled by the healing taunt.

Bazaar Bargain
+ Removed damage penalty
+ Removed base charge rate penalty
- Added -50% charge damage penalty
The nerfing of this weapon made it seem exceptionally less useful even when the snowball was built up for the lowered pick potential without charging. This version gives it a flip to that, making it less useful against healthier targets but being easier to build up the snowball.

The Machina
+ Buildings should be affected by charge damage buff
- Added 25% slower charging speed
The increased charge damage appeared to need a proper counterbalance due to how quickly one could take out higher health targets, so slowing it's charge speed felt appropriate."
jLC1piLn,ganonfloor_dolphin.lua,exodus122,Lua,Saturday 20th of January 2024 05:32:52 PM CDT,"-- modified version of MrCheeze's lua script which was for bizhawk
-- this version is used with Dolphin 5.0-14344 and Cheat Engine lua engine
-- oot version 1.2

ramStart = readPointer(""Dolphin.exe+0xC4DC70"")+0xE74000

function to_signed_32(num) 
    if num > 2147483648 then
        num = num - (2 * 2147483648)
        return num
    else return num
    end
end

function to_signed_16(num) 
    if num > 32768 then
        num = num - (2 * 32768)
        return num
    else return num
    end
end

function read_u32_be(addr)
	val = readInteger(ramStart+addr)
	return ((val & 0xFF) << 24)
           | ((val & 0xFF00) << 8)
           | ((val >> 8) & 0xFF00)
           | ((val >> 24) & 0xFF);
end

function read_s32_be(addr)
	val = readInteger(ramStart+addr)
	newval = ((val & 0xFF) << 24)
           | ((val & 0xFF00) << 8)
           | ((val >> 8) & 0xFF00)
           | ((val >> 24) & 0xFF);
    return to_signed_32(newval)
end

function read_u16_be(addr)
    val = readSmallInteger(ramStart+addr)
	return ((val & 0xFF) << 8)
           | ((val >> 8) & 0xFF);
end

function read_s16_be(addr)
    val = readSmallInteger(ramStart+addr)
	newval = ((val & 0xFF) << 8)
           | ((val >> 8) & 0xFF);
	return to_signed_16(newval)
end

function readbyte(addr)
    return readBytes(ramStart+addr, 1)
end

addr_colCtx = 0x1C9520 -- NTSC 1.2
addr_exitList = 0x1DAB64 -- NTSC 1.2

exitList = read_u32_be(addr_exitList)

colCtx_colHeader = read_u32_be(addr_colCtx)
colCtx_lookupTbl = read_u32_be(addr_colCtx+0x40)
colCtx_polyNodes_tbl = read_u32_be(addr_colCtx+0x48)
colCtx_polyNodes_polyCheckTbl = read_u32_be(addr_colCtx+0x4C)
colCtx_dyna_polyList = read_u32_be(addr_colCtx+0x50+0x13F0)
colCtx_dyna_vtxList = read_u32_be(addr_colCtx+0x50+0x13F4)

colCtx_colHeader_vtxList = read_u32_be(colCtx_colHeader - 0x80000000 + 0x10)
colCtx_colHeader_polyList = read_u32_be(colCtx_colHeader - 0x80000000 + 0x18)
colCtx_colHeader_surfaceTypeList = read_u32_be(colCtx_colHeader - 0x80000000 + 0x1C)

lookup_entry_count = read_s32_be(addr_colCtx+0x1C)*read_s32_be(addr_colCtx+0x20)*read_s32_be(addr_colCtx+0x24)

already_dumped_node_indexes = {}

dyna_polyListMax = read_u32_be(addr_colCtx + 0x50 + 0x1408)
dyna_vtxListMax = read_u32_be(addr_colCtx + 0x50 + 0x140C)

dyna_polyCount = 0
dyna_vtxCount = 0

for i=0,49 do
	if (bAnd(read_u16_be(addr_colCtx + 0x50 + 0x138C + 2*i), 0x0001)) ~= 0 then
		-- bgActor #i is in use
		bgActor_colHeader = read_u32_be(addr_colCtx + 0x50 + 0x4 + 0x64*i + 4)
		
		bgActor_vtxCount = read_u16_be(bgActor_colHeader - 0x80000000 + 0xC)
		dyna_vtxCount = dyna_vtxCount + bgActor_vtxCount

		bgActor_polyCount = read_u16_be(bgActor_colHeader - 0x80000000 + 0x14)
		dyna_polyCount = dyna_polyCount + bgActor_polyCount
	end
end

print(string.format(""%08X colCtx_dyna_vtxList (used=%d/%d)"", colCtx_dyna_vtxList, dyna_vtxCount, dyna_vtxListMax))
if dyna_vtxCount>dyna_vtxListMax then
	vtx_overflow_start = colCtx_dyna_vtxList + 6*dyna_vtxListMax
	vtx_overflow_end = colCtx_dyna_vtxList + 6*dyna_vtxCount
	print(string.format(""!!! dyna vtxList overflow into %08X-%08X !!!"", vtx_overflow_start, vtx_overflow_end))
end
print(string.format(""%08X colCtx_dyna_polyList (used=%d/%d)"", colCtx_dyna_polyList, dyna_polyCount, dyna_polyListMax))
if dyna_polyCount>dyna_polyListMax then
	poly_overflow_start = colCtx_dyna_polyList + 0x10*dyna_polyListMax
	poly_overflow_end = colCtx_dyna_polyList + 0x10*dyna_polyCount
	print(string.format(""!!! dyna polyList overflow into %08X-%08X !!!"", poly_overflow_start, poly_overflow_end))
end
print(string.format(""%08X colCtx_polyNodes_polyCheckTbl"", colCtx_polyNodes_polyCheckTbl))
print(string.format(""%08X colCtx_polyNodes_tbl"", colCtx_polyNodes_tbl))
print(string.format(""%08X colCtx_lookupTbl"", colCtx_lookupTbl))
print(string.format(""%08X exitList"", exitList))
print(string.format(""%08X colCtx_colHeader_surfaceTypeList"", colCtx_colHeader_surfaceTypeList))
print(string.format(""%08X colCtx_colHeader_polyList"", colCtx_colHeader_polyList))
print(string.format(""%08X colCtx_colHeader_vtxList"", colCtx_colHeader_vtxList))
print(string.format(""%08X colCtx_colHeader"", colCtx_colHeader))

for i=0,lookup_entry_count-1 do
	for j=0,1 do -- include floors and walls, but not ceilings
		
		nodeIndex = read_u16_be(colCtx_lookupTbl - 0x80000000 + 6*i + 2*j)
		
		while nodeIndex ~= 0xFFFF and not already_dumped_node_indexes[nodeIndex] do
			polyId = read_u16_be(colCtx_polyNodes_tbl - 0x80000000 + 4*nodeIndex)
			polySurfaceTypeId = read_u16_be(colCtx_colHeader_polyList - 0x80000000 + 0x10*polyId)
			surfaceExitIndex = bAnd(readbyte(colCtx_colHeader_surfaceTypeList - 0x80000000 + 8*polySurfaceTypeId + 2), 0x1F)
			
			if (surfaceExitIndex ~= 0) then
			
				exitValue = read_u16_be(exitList - 0x80000000 + 2*(surfaceExitIndex-1))
			
				polyVertIdA = bAnd(read_u16_be(colCtx_colHeader_polyList - 0x80000000 + 0x10*polyId + 2), 0x1FFF)
				polyVertIdB = bAnd(read_u16_be(colCtx_colHeader_polyList - 0x80000000 + 0x10*polyId + 4), 0x1FFF)
				polyVertIdC = read_u16_be(colCtx_colHeader_polyList - 0x80000000 + 0x10*polyId + 6)
				
				vertAX = read_s16_be(colCtx_colHeader_vtxList - 0x80000000 + 6*polyVertIdA + 0)
				vertAY = read_s16_be(colCtx_colHeader_vtxList - 0x80000000 + 6*polyVertIdA + 2)
				vertAZ = read_s16_be(colCtx_colHeader_vtxList - 0x80000000 + 6*polyVertIdA + 4)
				vertBX = read_s16_be(colCtx_colHeader_vtxList - 0x80000000 + 6*polyVertIdB + 0)
				vertBY = read_s16_be(colCtx_colHeader_vtxList - 0x80000000 + 6*polyVertIdB + 2)
				vertBZ = read_s16_be(colCtx_colHeader_vtxList - 0x80000000 + 6*polyVertIdB + 4)
				vertCX = read_s16_be(colCtx_colHeader_vtxList - 0x80000000 + 6*polyVertIdC + 0)
				vertCY = read_s16_be(colCtx_colHeader_vtxList - 0x80000000 + 6*polyVertIdC + 2)
				vertCZ = read_s16_be(colCtx_colHeader_vtxList - 0x80000000 + 6*polyVertIdC + 4)
				
				print(string.format(""exit %04X - nodeIndex %04X polyId %04X surfaceType %04X - (%d,%d,%d), (%d,%d,%d), (%d,%d,%d)"", exitValue, nodeIndex, polyId, polySurfaceTypeId, vertAX,vertAY,vertAZ, vertBX,vertBY,vertBZ, vertCX,vertCY,vertCZ))
			end
			
			already_dumped_node_indexes[nodeIndex] = true
			
			nodeIndex = read_u16_be(colCtx_polyNodes_tbl - 0x80000000 + 4*nodeIndex + 2)
		end
	end
end"
X3Xr0L2d,SELF LEAK - BYPASS SNTE (Say No To Exploits) 2024,Sambrifou,Lua,Saturday 20th of January 2024 05:03:25 PM CDT,"if hook.GetTable()[""CanTool""][""SNTE_KILL_BOUNCY_BALL_EXPLOIT""] then 
    print(""<Warning!> SNTE is detected"") 
        else 
    print(""<Warning!> SNTE is not detected"") 
end"
