id,title,username,language,date,content
RGB2KUSw,2024-04-06_stats.json,rdp_snitch,JSON,Saturday 6th of April 2024 07:16:13 PM CDT,"{
  ""ip"": {
    ""91.238.181.16"": 2,
    ""96.8.115.25"": 2,
    ""194.165.16.37"": 4,
    ""58.218.204.183"": 6,
    ""45.227.254.26"": 4,
    ""198.235.24.49"": 6,
    ""222.186.13.132"": 4,
    ""185.81.68.38"": 6,
    ""212.70.149.142"": 8,
    ""212.41.9.11"": 6,
    ""185.170.144.3"": 4,
    ""167.94.145.51"": 2,
    ""207.90.244.14"": 2,
    ""87.251.75.120"": 4,
    ""45.79.114.233"": 2,
    ""165.154.12.139"": 2,
    ""198.235.24.45"": 6,
    ""123.207.52.122"": 8954,
    ""167.94.146.51"": 2,
    ""62.204.41.222"": 12,
    ""196.190.117.7"": 4,
    ""198.135.49.131"": 24,
    ""45.79.223.182"": 8,
    ""212.70.149.146"": 4,
    ""195.69.246.15"": 4,
    ""87.251.75.145"": 4,
    ""185.170.144.113"": 6,
    ""194.165.16.10"": 4,
    ""103.149.27.222"": 2,
    ""147.78.47.97"": 2,
    ""198.235.24.233"": 6,
    ""104.218.165.110"": 2,
    ""45.227.254.49"": 4,
    ""45.87.212.184"": 4,
    ""87.251.75.64"": 2,
    ""103.20.97.235"": 4,
    ""149.248.18.130"": 2,
    ""198.235.24.77"": 6,
    ""128.199.225.179"": 592,
    ""112.4.139.162"": 2
  },
  ""asn"": {
    ""AS49434"": 2,
    ""AS36352"": 2,
    ""AS48721"": 8,
    ""AS4134"": 10,
    ""AS267784"": 8,
    ""AS396982"": 24,
    ""AS57523"": 6,
    ""AS204428"": 12,
    ""AS49505"": 6,
    ""AS197414"": 10,
    ""AS398705"": 4,
    ""AS174"": 2,
    ""AS208091"": 10,
    ""AS63949"": 10,
    ""AS135377"": 6,
    ""AS45090"": 8954,
    ""AS59425"": 12,
    ""AS24757"": 4,
    ""AS396073"": 24,
    ""AS3255"": 4,
    ""AS209588"": 2,
    ""AS9009"": 4,
    ""AS150880"": 4,
    ""AS20473"": 2,
    ""AS14061"": 592,
    ""AS56046"": 2
  },
  ""isp"": {
    ""Datacenter location PAR1 France"": 2,
    ""HostPapa"": 2,
    ""Flyservers S.A."": 18,
    ""Chinanet"": 10,
    ""Google LLC"": 24,
    ""Chang Way Technologies Co. Limited"": 6,
    ""SS-Net"": 12,
    ""OOO \""Network of data-centers \""Selectel\"""": 6,
    ""Xhost Internet Solutions LP"": 20,
    ""Censys, Inc."": 4,
    ""Cogent Communications"": 2,
    ""Akamai Technologies, Inc."": 10,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Shenzhen Tencent Computer Systems Company Limited"": 8954,
    ""Horizon LLC"": 12,
    ""Ethiotelecom"": 4,
    ""Majestic Hosting Solutions, LLC"": 24,
    ""State Enterprise Scientific and Telecommunication Centre \""Ukrainian Academic an"": 4,
    ""Zenlayer Inc"": 2,
    ""M247 Europe SRL"": 4,
    ""Fast Byte Fast Data Company Limited"": 4,
    ""The Constant Company"": 2,
    ""DigitalOcean, LLC"": 592,
    ""China Mobile Communications Corporation"": 2
  },
  ""org"": {
    ""ThinkTech Technology Industrial CO. Limited"": 2,
    ""Michael Charlery"": 2,
    ""Flyservers S.A"": 10,
    ""Chinanet JS"": 10,
    ""UAB Host Baltic"": 8,
    ""Palo Alto Networks, Inc"": 24,
    ""Starcrecium Limited"": 6,
    ""4Media Ltd"": 12,
    ""Unknown"": 10,
    ""Xhostis"": 10,
    ""Censys, Inc."": 4,
    ""SHODAN, LLC"": 2,
    ""Xhost Internet Solutions"": 10,
    ""Linode"": 10,
    ""Ucloud Information Technology"": 2,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 8954,
    ""Horizon LLC"": 12,
    ""Majestic Hosting Solutions, LLC"": 24,
    ""Nataliya Vasylivna Protsykevych P.E"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""UCLOUD"": 2,
    ""M247 LTD"": 4,
    ""FASTBYTE"": 4,
    ""Vultr Holdings, LLC"": 2,
    ""DigitalOcean, LLC"": 592,
    ""China Mobile Communications Corporation"": 2
  },
  ""regionName"": {
    ""\u00cele-de-France"": 2,
    ""Texas"": 28,
    ""Kaunas"": 8,
    ""Jiangsu"": 12,
    ""Vilnius"": 8,
    ""California"": 28,
    ""Moscow"": 24,
    ""Sliven"": 12,
    ""North Holland"": 22,
    ""Hesse"": 8,
    ""Dubai"": 2,
    ""Guangdong"": 8954,
    ""Addis Ababa"": 4,
    ""Georgia"": 8,
    ""Lviv"": 4,
    ""Kowloon"": 2,
    ""England"": 2,
    ""Ho Chi Minh"": 4,
    ""Central Singapore"": 592
  },
  ""country"": {
    ""France"": 2,
    ""United States"": 64,
    ""Lithuania"": 16,
    ""China"": 8966,
    ""Russia"": 24,
    ""Bulgaria"": 12,
    ""The Netherlands"": 22,
    ""Germany"": 8,
    ""United Arab Emirates"": 2,
    ""Ethiopia"": 4,
    ""Ukraine"": 4,
    ""Hong Kong"": 2,
    ""United Kingdom"": 2,
    ""Vietnam"": 4,
    ""Singapore"": 592
  },
  ""account"": {
    ""Administr"": 26,
    ""dikYSfk"": 2,
    ""Test"": 38,
    ""hello"": 42,
    ""GcMUYPvAi"": 2,
    ""axklAY"": 2,
    ""yqALPw"": 2,
    ""nmap"": 4,
    ""Domain"": 22,
    ""(empty)"": 6,
    ""root"": 2,
    ""beio"": 2,
    ""Administrator"": 150,
    ""MKiypncwP"": 2,
    ""jvOkuA"": 2,
    ""XCGaNV"": 2,
    ""298059831"": 8954,
    ""b13a2cuo"": 8,
    ""gABaxSZFa"": 2,
    ""wspifJ"": 2,
    ""AYoDkK"": 2,
    ""gNnLQkvsV"": 2,
    ""erbaLy"": 2,
    ""FGgdzA"": 2,
    ""Admin"": 148,
    ""Whatuptime.com"": 148,
    ""Jakartakini123#"": 148
  },
  ""keyboard"": {
    ""Unknown"": 9724
  },
  ""client_build"": {
    ""Unknown"": 9724
  },
  ""client_name"": {
    ""Unknown"": 9724
  },
  ""ip_type"": {
    ""hosting"": 668,
    ""Unknown"": 9040,
    ""proxy"": 10,
    ""hosting & proxy"": 4,
    ""mobile"": 2
  }
}"
UNpkGZt9,2024-04-06_stats.json,rdp_snitch,JSON,Saturday 6th of April 2024 07:15:10 PM CDT,"{
  ""ip"": {
    ""91.238.181.16"": 1,
    ""96.8.115.25"": 1,
    ""194.165.16.37"": 2,
    ""58.218.204.183"": 3,
    ""45.227.254.26"": 2,
    ""198.235.24.49"": 3,
    ""222.186.13.132"": 2,
    ""185.81.68.38"": 3,
    ""212.70.149.142"": 4,
    ""212.41.9.11"": 3,
    ""185.170.144.3"": 2,
    ""167.94.145.51"": 1,
    ""207.90.244.14"": 1,
    ""87.251.75.120"": 2,
    ""45.79.114.233"": 1,
    ""165.154.12.139"": 1,
    ""198.235.24.45"": 3,
    ""123.207.52.122"": 4477,
    ""167.94.146.51"": 1,
    ""62.204.41.222"": 6,
    ""196.190.117.7"": 2,
    ""198.135.49.131"": 12,
    ""45.79.223.182"": 4,
    ""212.70.149.146"": 2,
    ""195.69.246.15"": 2,
    ""87.251.75.145"": 2,
    ""185.170.144.113"": 3,
    ""194.165.16.10"": 2,
    ""103.149.27.222"": 1,
    ""147.78.47.97"": 1,
    ""198.235.24.233"": 3,
    ""104.218.165.110"": 1,
    ""45.227.254.49"": 2,
    ""45.87.212.184"": 2,
    ""87.251.75.64"": 1,
    ""103.20.97.235"": 2,
    ""149.248.18.130"": 1,
    ""198.235.24.77"": 3,
    ""128.199.225.179"": 296,
    ""112.4.139.162"": 1
  },
  ""asn"": {
    ""AS49434"": 1,
    ""AS36352"": 1,
    ""AS48721"": 4,
    ""AS4134"": 5,
    ""AS267784"": 4,
    ""AS396982"": 12,
    ""AS57523"": 3,
    ""AS204428"": 6,
    ""AS49505"": 3,
    ""AS197414"": 5,
    ""AS398705"": 2,
    ""AS174"": 1,
    ""AS208091"": 5,
    ""AS63949"": 5,
    ""AS135377"": 3,
    ""AS45090"": 4477,
    ""AS59425"": 6,
    ""AS24757"": 2,
    ""AS396073"": 12,
    ""AS3255"": 2,
    ""AS209588"": 1,
    ""AS9009"": 2,
    ""AS150880"": 2,
    ""AS20473"": 1,
    ""AS14061"": 296,
    ""AS56046"": 1
  },
  ""isp"": {
    ""Datacenter location PAR1 France"": 1,
    ""HostPapa"": 1,
    ""Flyservers S.A."": 9,
    ""Chinanet"": 5,
    ""Google LLC"": 12,
    ""Chang Way Technologies Co. Limited"": 3,
    ""SS-Net"": 6,
    ""OOO \""Network of data-centers \""Selectel\"""": 3,
    ""Xhost Internet Solutions LP"": 10,
    ""Censys, Inc."": 2,
    ""Cogent Communications"": 1,
    ""Akamai Technologies, Inc."": 5,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 4477,
    ""Horizon LLC"": 6,
    ""Ethiotelecom"": 2,
    ""Majestic Hosting Solutions, LLC"": 12,
    ""State Enterprise Scientific and Telecommunication Centre \""Ukrainian Academic an"": 2,
    ""Zenlayer Inc"": 1,
    ""M247 Europe SRL"": 2,
    ""Fast Byte Fast Data Company Limited"": 2,
    ""The Constant Company"": 1,
    ""DigitalOcean, LLC"": 296,
    ""China Mobile Communications Corporation"": 1
  },
  ""org"": {
    ""ThinkTech Technology Industrial CO. Limited"": 1,
    ""Michael Charlery"": 1,
    ""Flyservers S.A"": 5,
    ""Chinanet JS"": 5,
    ""UAB Host Baltic"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""Starcrecium Limited"": 3,
    ""4Media Ltd"": 6,
    ""Unknown"": 5,
    ""Xhostis"": 5,
    ""Censys, Inc."": 2,
    ""SHODAN, LLC"": 1,
    ""Xhost Internet Solutions"": 5,
    ""Linode"": 5,
    ""Ucloud Information Technology"": 1,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 4477,
    ""Horizon LLC"": 6,
    ""Majestic Hosting Solutions, LLC"": 12,
    ""Nataliya Vasylivna Protsykevych P.E"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""UCLOUD"": 1,
    ""M247 LTD"": 2,
    ""FASTBYTE"": 2,
    ""Vultr Holdings, LLC"": 1,
    ""DigitalOcean, LLC"": 296,
    ""China Mobile Communications Corporation"": 1
  },
  ""regionName"": {
    ""\u00cele-de-France"": 1,
    ""Texas"": 14,
    ""Kaunas"": 4,
    ""Jiangsu"": 6,
    ""Vilnius"": 4,
    ""California"": 14,
    ""Moscow"": 12,
    ""Sliven"": 6,
    ""North Holland"": 11,
    ""Hesse"": 4,
    ""Dubai"": 1,
    ""Guangdong"": 4477,
    ""Addis Ababa"": 2,
    ""Georgia"": 4,
    ""Lviv"": 2,
    ""Kowloon"": 1,
    ""England"": 1,
    ""Ho Chi Minh"": 2,
    ""Central Singapore"": 296
  },
  ""country"": {
    ""France"": 1,
    ""United States"": 32,
    ""Lithuania"": 8,
    ""China"": 4483,
    ""Russia"": 12,
    ""Bulgaria"": 6,
    ""The Netherlands"": 11,
    ""Germany"": 4,
    ""United Arab Emirates"": 1,
    ""Ethiopia"": 2,
    ""Ukraine"": 2,
    ""Hong Kong"": 1,
    ""United Kingdom"": 1,
    ""Vietnam"": 2,
    ""Singapore"": 296
  },
  ""account"": {
    ""Administr"": 13,
    ""dikYSfk"": 1,
    ""Test"": 19,
    ""hello"": 21,
    ""GcMUYPvAi"": 1,
    ""axklAY"": 1,
    ""yqALPw"": 1,
    ""nmap"": 2,
    ""Domain"": 11,
    ""(empty)"": 3,
    ""root"": 1,
    ""beio"": 1,
    ""Administrator"": 75,
    ""MKiypncwP"": 1,
    ""jvOkuA"": 1,
    ""XCGaNV"": 1,
    ""298059831"": 4477,
    ""b13a2cuo"": 4,
    ""gABaxSZFa"": 1,
    ""wspifJ"": 1,
    ""AYoDkK"": 1,
    ""gNnLQkvsV"": 1,
    ""erbaLy"": 1,
    ""FGgdzA"": 1,
    ""Admin"": 74,
    ""Whatuptime.com"": 74,
    ""Jakartakini123#"": 74
  },
  ""keyboard"": {
    ""Unknown"": 4862
  },
  ""client_build"": {
    ""Unknown"": 4862
  },
  ""client_name"": {
    ""Unknown"": 4862
  },
  ""ip_type"": {
    ""hosting"": 334,
    ""Unknown"": 4520,
    ""proxy"": 5,
    ""hosting & proxy"": 2,
    ""mobile"": 1
  }
}"
sAjhkgiW,Remove inner wrapped tag,ivandrofly,C#,Saturday 6th of April 2024 06:59:50 PM CDT,"            string RemoveWrapped(string inp)
            {
                var lastIndex = inp.IndexOf(""</i>"", StringComparison.Ordinal);
                if (lastIndex < 0) return inp;
                var index = inp.IndexOf(""<i>"", 0, lastIndex, StringComparison.Ordinal);
                if (index < 0) return inp;
                var nearestClosingIndex = inp.IndexOf(""</i>"", index + 4, lastIndex - index, StringComparison.Ordinal);
                if (nearestClosingIndex != lastIndex) return inp;
                inp = inp.Remove(nearestClosingIndex, 4);
                var nearestIndexFromRemoved = text.LastIndexOf(""<i>"", nearestClosingIndex, StringComparison.Ordinal);
                if (nearestIndexFromRemoved == index) return inp;
                return inp.Remove(nearestIndexFromRemoved, 3);
            }"
1XNBJTFJ,fix_bss.h,fig02,C,Saturday 6th of April 2024 06:56:58 PM CDT,"#define DUMMY_STRUCT(line, tens, ones) struct DummyStruct_##line##_##tens##_##ones
#define ONE_DUMMY_STRUCT(line, tens, ones) DUMMY_STRUCT(line, tens, ones)
#define TEN_DUMMY_STRUCTS(line, index)  \
    DUMMY_STRUCT(line, index, 0);       \
    DUMMY_STRUCT(line, index, 1);       \
    DUMMY_STRUCT(line, index, 2);       \
    DUMMY_STRUCT(line, index, 3);       \
    DUMMY_STRUCT(line, index, 4);       \
    DUMMY_STRUCT(line, index, 5);       \
    DUMMY_STRUCT(line, index, 6);       \
    DUMMY_STRUCT(line, index, 7);       \
    DUMMY_STRUCT(line, index, 8);       \
    DUMMY_STRUCT(line, index, 9)

// Macros which define dummy structs to increment the IDO block number for BSS ordering.
#define INCREMENT_BLOCK_NUMBER_BY_1() ONE_DUMMY_STRUCT(__LINE__, 0, 0)
#define INCREMENT_BLOCK_NUMBER_BY_10() TEN_DUMMY_STRUCTS(__LINE__, 0)
#define INCREMENT_BLOCK_NUMBER_BY_100() \
    TEN_DUMMY_STRUCTS(__LINE__, 0);     \
    TEN_DUMMY_STRUCTS(__LINE__, 1);     \
    TEN_DUMMY_STRUCTS(__LINE__, 2);     \
    TEN_DUMMY_STRUCTS(__LINE__, 3);     \
    TEN_DUMMY_STRUCTS(__LINE__, 4);     \
    TEN_DUMMY_STRUCTS(__LINE__, 5);     \
    TEN_DUMMY_STRUCTS(__LINE__, 6);     \
    TEN_DUMMY_STRUCTS(__LINE__, 7);     \
    TEN_DUMMY_STRUCTS(__LINE__, 8);     \
    TEN_DUMMY_STRUCTS(__LINE__, 9)

// For retail BSS ordering, the block number of sMainThread must be 0 or
// just above (the exact upper bound depends on the block numbers assigned to
// extern variables declared in headers).
#define FIX_MAIN_BSS() \
    INCREMENT_BLOCK_NUMBER_BY_10(); \
    INCREMENT_BLOCK_NUMBER_BY_10(); \
    INCREMENT_BLOCK_NUMBER_BY_10(); \
    INCREMENT_BLOCK_NUMBER_BY_10(); \
    INCREMENT_BLOCK_NUMBER_BY_10(); \
    INCREMENT_BLOCK_NUMBER_BY_10(); 

// For retail BSS ordering, the block number of sFaultInstance must be 0 or
// just above (the exact upper bound depends on the block numbers assigned to
// extern variables declared in headers).
#define FIX_FAULT_BSS() \
    INCREMENT_BLOCK_NUMBER_BY_10(); \
    INCREMENT_BLOCK_NUMBER_BY_10(); \
    #if !OOT_DEBUG
    INCREMENT_BLOCK_NUMBER_BY_1(); \
    INCREMENT_BLOCK_NUMBER_BY_1(); \
    INCREMENT_BLOCK_NUMBER_BY_1(); \
    INCREMENT_BLOCK_NUMBER_BY_1(); \
    INCREMENT_BLOCK_NUMBER_BY_1(); \
    #endif"
b8zJW4ry,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,jusst2k4,GetText,Saturday 6th of April 2024 06:37:45 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_706189.pdf

Working as of:
06 April 2024"
tQn09TtC,SceneDespawnLoader,Splash6687,C#,Saturday 6th of April 2024 06:32:03 PM CDT,"using UnityEngine;
using UnityEngine.SceneManagement;

public class DespawnAndLoadTrigger : MonoBehaviour
{
    public string sceneToLoad; // Name of the scene to load

    private void OnTriggerEnter(Collider other)
    {
        // Check if the collider's GameObject is not null and is not this GameObject
        if (other.gameObject != null && other.gameObject != gameObject)
        {
            DespawnCurrentScene();
            LoadNextScene();
        }
    }

    private void DespawnCurrentScene()
    {
        // Deactivate all game objects in the current scene
        GameObject[] allObjects = SceneManager.GetActiveScene().GetRootGameObjects();
        foreach (GameObject go in allObjects)
        {
            go.SetActive(false);
        }
    }

    private void LoadNextScene()
    {
        // Load the next scene
        SceneManager.LoadScene(sceneToLoad);
    }
}
"
15kczRJV,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,ssss50w,GetText,Saturday 6th of April 2024 06:21:17 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
06 April 2024
"
JWstXWUx,fstab,nenoro,Bash,Saturday 6th of April 2024 06:01:05 PM CDT,"#
# See fstab(5).
#
# <file system> <dir>   <type>  <options>               <dump>  <pass>
tmpfs           /tmp    tmpfs   defaults,nosuid,nodev   0       0

#/dev/sda2
UUID=4cf341ee-3485-4856-8749-b050ce2cbc50               /               xfs             rw,relatime             0 1

#/dev/sda3
UUID=f2c71657-6865-4f95-a582-e6b4b768f390               /home           xfs             rw,relatime             0 2

#/dev/sda1
UUID=C973-E22E          /boot           vfat            defaults                0 0
"
hMWVtSGV,Untitled,Zeinab_Hamdy,C++,Saturday 6th of April 2024 05:50:26 PM CDT,"#include<bits/stdc++.h>
using namespace std;
#define nl ""\n""
#define fi first
#define se second
#define pb push_back
#define ll long long
#define ull unsigned ll
#define RV  return void
#define sz(x) int(x.size())
#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define fixed(n) fixed << setprecision(n)
#define cin(v) for (auto&i:v) cin >> i;
#define cout(v) for (auto&i:v) cout << i << "" "";
#define clr(memo, x) memset(memo, x, sizeof memo)
#define FastCode ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
 
void  Zainab(){
            // #ifndef ONLINE_JUDGE
              // freopen(""hobz.in"", ""r"", stdin);
              // freopen(""longpath.out"", ""w"", stdout);
            // #endif
}




void myCode( ){

    
ll n ,q;
cin >> n >> q;
vector < ll > v(n);
cin(v);

//  if len of subarray even => take Xor for all element exactly once 


//  odd length => 1 (1) 
//                3 (101)  
//                5(10101)  

vector < ll > prefEven(n+1) , prefodd0(n+1) , prefodd1(n+1);

for(int i =0 ; i < n ; i++){
    prefEven[i] = v[i];
    if(i)
        prefEven[i] ^= prefEven[i-1];
}

for(int i =0 ; i < n ; i++){
    if(i % 2  )
        prefodd0[i] = v[i];
    if(i)
        prefodd0[i] ^= prefodd0[i-1];
}

for(int i =0 ; i < n ; i++){
    if(i % 2==0)
        prefodd1[i] = v[i];
    if(i)
        prefodd1[i] ^= prefodd1[i-1];
}



while(q--){
    ll l , r;
    cin >> l >> r;
    ll len = r-l+1;
    l--; r--;
    if(len % 2 ==0){
        ll tx =0;
        if(l) 
            tx = prefEven[l-1];
        cout <<  (prefEven[r] ^ tx) << nl;
    }
    
    else{
        if( (l+1)  % 2 ){
            ll tx =0;
            if(l) 
                tx = prefodd1[l-1];
            cout <<  (prefodd1[r] ^ tx) << nl;
        }
        else{
            ll tx =0;
            if(l) 
                tx = prefodd0[l-1];
            cout <<  (prefodd0[r] ^ tx) << nl;
        }
    }
    
}
    

}
 
 
int main(){
                                  FastCode ;
                                   // Zainab();

    int testCase=1;
      cin >> testCase ;
      for(int i=1 ; i<= testCase ; i++)
        myCode();
 
    return 0;
}"
AChXsrBz,Untitled,Nolifeq,Python,Saturday 6th of April 2024 05:47:09 PM CDT,"EMPTY(0, 0, ""Brak"", new String[]{""§5""}, Material.AIR, null, 1),
GORNIK(10, 0, ""Górnik"",
        new String[]{
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2kopanie kamienia: §x§D§3§D§3§D§3[ ??0.22 ] ""
        },
        Material.IRON_PICKAXE, new String[]{""górnik"", ""gornik"", ""gornictwo"", ""górnictwo"", ""kopalnia"", ""kopacz""}, 1),
DRWAL(10, 0, ""Drwal"",
        new String[]{
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2ścinanie drewna: §x§D§3§D§3§D§3[ ??0.3 ] "",
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2okorowanie drewna na działce: §x§D§3§D§3§D§3[ ??0.05 ] "",
                ""§x§D§3§D§3§D§3───────────────"",
                ""§x§6§6§C§D§A§ASzansa na jabłko/sadzonke przy ścinaniu (poz. 2+)"",
                ""§x§D§3§D§3§D§3───────────────"",
                ""§x§8§F§B§C§8§FPracę najlepiej wykonywać na /warp las"",
                ""§x§8§F§B§C§8§FOkorować drewno można dopiero od 2 poziomu""
        },
        Material.IRON_AXE, new String[]{""drwal"", ""drewno"", ""drfal"", ""drzewo"", ""tartak""}, 1),
ROLNIK(10, 2, ""Rolnik/Hodowca"",
        new String[]{
                ""§x§D§3§D§3§D§3[+] zbieranie plonów ręcznie: §x§D§3§D§3§D§3[ ??0.82 ] "",
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2łapanie zwierząt do jajek: §x§D§3§D§3§D§3[ ??30.0 ] "",
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2wydojenie krowy: §x§D§3§D§3§D§3[ ??3.0 ] "",
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2zabijanie zwierzątek: §x§D§3§D§3§D§3[ ??15.0 ] "",
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2strzyżenie owiec: §x§D§3§D§3§D§3[ ??2.5 ] "",
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2rozmnażanie zwierzątek: §x§D§3§D§3§D§3[ ??6 ] "",
                ""§x§D§3§D§3§D§3───────────────"",
                ""§x§6§6§C§D§A§AOd poziomu 2 możliwe łapanie zwierzątek do jajek przechowujących"",
                ""§x§D§3§D§3§D§3───────────────"",
                ""§x§8§F§B§C§8§FPlony liczone do pracy:"",
                ""§x§8§F§B§C§8§Fziemnaki, marchewki, trzcina, melony, kaktusy, pszenica, dynie"",
                ""§x§8§F§B§C§8§FZbieranie plonów zalicza się tylko na działce""
        },
        Material.GOLDEN_HOE, new String[]{""rolnik"", ""chodowca"", ""hodowca"", ""plony"", ""rolnik/hodowca""}, 1),
WOJOWNIK(10, 3, ""Wojownik"",
        new String[]{
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2każde zabójstwo daje: §x§D§3§D§3§D§3[ ??70.0 ] "",
                ""§x§D§3§D§3§D§3───────────────"",
                ""§x§6§6§C§D§A§AAktywna praca wojownika zwiększa o 2% szanse na drop skrzynki PVP"",
                ""§x§D§3§D§3§D§3───────────────"",
                ""§x§8§F§B§C§8§FZa zabijanie tego samego gracza pod rząd nie otrzymasz punktów""                
        },
        Material.DIAMOND_SWORD, new String[]{""woj"", ""wojownik"", ""zabujca"", ""zabojca"", ""zabójca""}, 1),
RYBAK(10, 3, ""Rybak"",
        new String[]{
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2złowienie ryby lub przedmiotu daje §x§D§3§D§3§D§3[ ??70.0 ] "",
                ""§x§D§3§D§3§D§3───────────────"",
                ""§x§6§6§C§D§A§AKażdy poziom pracy zwiększa o 1% szanse na cenny przedmiot z wody"",
                ""§x§6§6§C§D§A§AAktywna praca daje 1% szansy na wyłowienie 1 z 25 unikatowych główek"",
                ""§x§D§3§D§3§D§3───────────────"",
                ""§x§8§F§B§C§8§FŁowienie w łódce zwiększa ilość zdobywanych punktów o 20%""
        },
        Material.FISHING_ROD, new String[]{""ryba"", ""rybak"", ""ryby"", ""lowienie"", ""łowienie"", ""wendkarz"", ""wedkarz"", ""wędkarz""}, 1),
BUDOWNICZY(10, 3, ""Budowniczy"",
        new String[]{
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2postawienie solidnego bloku: §x§D§3§D§3§D§3[ ??0.35 ] "",
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2zbudowanie mechanizmu: §x§D§3§D§3§D§3[ ??2.0 ] "",
                ""§x§D§3§D§3§D§3───────────────"",
                ""§x§6§6§C§D§A§AKażdy poziom pracy daje 5% obniżki na zakup produków budowlanych"",
                ""§x§6§6§C§D§A§A(Maksymalna obniżka to 40%)""
        },
        Material.SCAFFOLDING, new String[]{""budowniczy"", ""budo"", ""budowanie"", ""budowa""}, 1),
KOWAL(10, 3, ""Kowal"",
        new String[]{
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2skorzystanie z kowadła: §x§D§3§D§3§D§3[ ??20.0 ] "",
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2użycie komendy /kowal (enchanty poziom 5): §x§D§3§D§3§D§3[ ??30.0 ] "",
                ""§x§D§3§D§3§D§3───────────────"",
                ""§x§6§6§C§D§A§AOd 2 poziomu podręczny piec hutniczy"",
                ""§x§6§6§C§D§A§Adziała dwa razy dłużej (1 użycie = 2x czas)"",
                ""§x§6§6§C§D§A§AKażdy LevelUP do 6 poziomu daje 5% zniżki u /kowal (30% max)"",
                ""§x§D§3§D§3§D§3───────────────"",
                ""§x§8§F§B§C§8§FTylko kowal poziomu 3+ może używać stołu kowalskiego"",
                ""§x§8§F§B§C§8§FTylko kowal poziomu 10+ może wydobyć pradawne zgliszcza""
        },
        Material.ANVIL, new String[]{""kowal"", ""kowadło"", ""kowadlo"", ""kowalstwo"", ""kowadla""}, 1),
CZARNOKSIEZNIK(10, 4, ""Czarnoksiężnik"",
        new String[]{
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2zaklinanie przedmiotu(30lvl+): §x§D§3§D§3§D§3[ ??14.0 ] "",
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2zaklinanie książek(30lvl+): §x§D§3§D§3§D§3[ ??29.0 ] "",
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2korzystanie z kotła (nalewanie do butelek): §x§D§3§D§3§D§3[ ??0.23 ] "",
                ""§x§D§3§D§3§D§3───────────────"",
                ""§x§8§F§B§C§8§FTylko czarnoksiężnik poziomu 2+ może tworzyć pulpit"",
                ""§x§8§F§B§C§8§FTylko czarnoksiężnik poziomu 3+ może tworzyć mocniejsze mikstury""
        },
        Material.BREWING_STAND, new String[]{""czarnoksiężnik"", ""czarownik"", ""czarnoskieznik""}, 1),
LOWCA(10, 5, ""Łowca"",
        new String[]{
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2zabicie zwierzątka: §x§D§3§D§3§D§3[ ??10.0 ] "",
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2zabicie agresywnego moba: §x§D§3§D§3§D§3[ ??20.0 ] "",
                ""§x§D§3§D§3§D§3[+] §x§9§A§C§D§3§2łapanie zwierząt do jajek przechowujących: §x§D§3§D§3§D§3[ ??7.0 ] "",
                ""§x§D§3§D§3§D§3───────────────"",
                ""§x§6§6§C§D§A§AOd poziomu 2 możesz łapać wszystkie zwierzątka do jajek"",
                ""§x§D§3§D§3§D§3───────────────"",
                ""§x§8§F§B§C§8§FMoby wodne liczą się jak 10% moba agresywnego"",
                ""§x§8§F§B§C§8§FZabicie potworów daje 2x więcej punktów niż zwierzątek."",
                ""§x§8§F§B§C§8§FŚwinki na /warp jedzenie nie są zaliczane do pracy""                
        },
        Material.BOW, new String[]{""myśliwy"", ""mysliwy"", ""polowanie"", ""łowca"", ""lowca""}, 2);"
0tf5n78E,"Netgear R6220 (mt7621ST) - OpenWrt 23.05-SNAPSHOT, r23821",mar_w,Bash,Saturday 6th of April 2024 05:28:13 PM CDT,"-----------------------------------------------------------------------------
 |                                                                           |
 | OpenWrt 23.05-SNAPSHOT, r23821-77b7c10884                                 |
 |                                                                           |
 | Build time: 2024-04-06 11:28 CEST                                         |
 | Cezary Jackiewicz, https://eko.one.pl                                     |
 |                                                                           |
 -----------------------------------------------------------------------------
 | Machine: Netgear R6220                                                    |

#######################################################################################################

    ########## Bez HW ##########

#######################################################################################################

### NAT: (z klienta LAN-owego, przez router, do serwera) ###

$ iperf3 -c 192.168.76.1 -i 0 -t 60 -f M
Connecting to host 192.168.76.1, port 5201
[  5] local 192.168.1.3 port 48078 connected to 192.168.76.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-60.00  sec  2.96 GBytes  50.5 MBytes/sec  192   1.02 MBytes       
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-60.00  sec  2.96 GBytes  50.5 MBytes/sec  192             sender
[  5]   0.00-60.01  sec  2.96 GBytes  50.5 MBytes/sec                  receiver

iperf Done.

ftp user@192.168.76.1
ftp> put test.iso
1073741824 bytes sent in 00:20 (49.18 MiB/s)


$ iperf3 -c 192.168.76.1 -i 0 -t 60 -f M -R
Connecting to host 192.168.76.1, port 5201
Reverse mode, remote host 192.168.76.1 is sending
[  5] local 192.168.1.3 port 48808 connected to 192.168.76.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-60.00  sec  1.72 GBytes  29.3 MBytes/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-60.00  sec  1.72 GBytes  29.4 MBytes/sec   55             sender
[  5]   0.00-60.00  sec  1.72 GBytes  29.3 MBytes/sec                  receiver

iperf Done.

ftp user@192.168.76.1
ftp> get test.iso
1073741824 bytes received in 00:27 (36.64 MiB/s)


$ iperf3 -c 192.168.76.1 -i 0 -t 60 -f M --bidir
Connecting to host 192.168.76.1, port 5201
[  5] local 192.168.1.3 port 51382 connected to 192.168.76.1 port 5201
[  7] local 192.168.1.3 port 51392 connected to 192.168.76.1 port 5201
[ ID][Role] Interval           Transfer     Bitrate         Retr  Cwnd
[  5][TX-C]   0.00-60.00  sec  1.52 GBytes  26.0 MBytes/sec  301    696 KBytes       
[  7][RX-C]   0.00-60.00  sec  1.02 GBytes  17.5 MBytes/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID][Role] Interval           Transfer     Bitrate         Retr
[  5][TX-C]   0.00-60.00  sec  1.52 GBytes  26.0 MBytes/sec  301             sender
[  5][TX-C]   0.00-60.01  sec  1.52 GBytes  26.0 MBytes/sec                  receiver
[  7][RX-C]   0.00-60.00  sec  1.03 GBytes  17.5 MBytes/sec  2902             sender
[  7][RX-C]   0.00-60.01  sec  1.02 GBytes  17.5 MBytes/sec                  receiver

iperf Done.

### WG (z klienta LAN-owego, przez router który jest peerem WG, do serwera WG) ###

$ iperf3 -c 10.9.0.1 -i 0 -t 60 -f M
Connecting to host 10.9.0.1, port 5201
[  5] local 192.168.1.3 port 43884 connected to 10.9.0.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-60.00  sec   827 MBytes  13.8 MBytes/sec  2217   3.00 MBytes       
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-60.00  sec   827 MBytes  13.8 MBytes/sec  2217             sender
[  5]   0.00-60.17  sec   827 MBytes  13.7 MBytes/sec                  receiver

iperf Done.

ftp user@10.9.0.1
ftp> put test.iso
1073741824 bytes sent in 01:26 (11.79 MiB/s)


$ iperf3 -c 10.9.0.1 -i 0 -t 60 -f M -R
Connecting to host 10.9.0.1, port 5201
Reverse mode, remote host 10.9.0.1 is sending
[  5] local 192.168.1.3 port 50238 connected to 10.9.0.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-60.00  sec   785 MBytes  13.1 MBytes/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-60.00  sec   788 MBytes  13.1 MBytes/sec  163             sender
[  5]   0.00-60.00  sec   785 MBytes  13.1 MBytes/sec                  receiver

iperf Done.

ftp user@10.9.0.1
ftp> get test.iso
1073741824 bytes received in 01:46 (9.65 MiB/s)


$ iperf3 -c 10.9.0.1 -i 0 -t 60 -f M --bidir
Connecting to host 10.9.0.1, port 5201
[  5] local 192.168.1.3 port 57494 connected to 10.9.0.1 port 5201
[  7] local 192.168.1.3 port 57508 connected to 10.9.0.1 port 5201
[ ID][Role] Interval           Transfer     Bitrate         Retr  Cwnd
[  5][TX-C]   0.00-60.00  sec   329 MBytes  5.48 MBytes/sec  278    934 KBytes       
[  7][RX-C]   0.00-60.00  sec   368 MBytes  6.13 MBytes/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID][Role] Interval           Transfer     Bitrate         Retr
[  5][TX-C]   0.00-60.00  sec   329 MBytes  5.48 MBytes/sec  278             sender
[  5][TX-C]   0.00-60.01  sec   328 MBytes  5.46 MBytes/sec                  receiver
[  7][RX-C]   0.00-60.00  sec   370 MBytes  6.16 MBytes/sec  228             sender
[  7][RX-C]   0.00-60.01  sec   368 MBytes  6.12 MBytes/sec                  receiver

iperf Done.

### PPPoE + VLAN 35(z klienta LAN-owego, przez router który jest clientem PPPoE, do serwera PPPoE dodatkowo na tagowanych portach VLAN 35) ####

$ iperf3 -c 192.168.76.1 -i 0 -t 60 -f M
Connecting to host 192.168.76.1, port 5201
[  5] local 192.168.1.3 port 58680 connected to 192.168.76.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-60.00  sec  1.12 GBytes  19.1 MBytes/sec   98   1.75 MBytes       
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-60.00  sec  1.12 GBytes  19.1 MBytes/sec   98             sender
[  5]   0.00-60.03  sec  1.12 GBytes  19.1 MBytes/sec                  receiver

iperf Done.

ftp user@192.168.76.1
ftp> put test.iso
1073741824 bytes sent in 00:48 (21.18 MiB/s)


$ iperf3 -c 192.168.76.1 -i 0 -t 60 -f M -R
Connecting to host 192.168.76.1, port 5201
Reverse mode, remote host 192.168.76.1 is sending
[  5] local 192.168.1.3 port 45058 connected to 192.168.76.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-60.00  sec   762 MBytes  12.7 MBytes/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-60.04  sec   765 MBytes  12.7 MBytes/sec   58             sender
[  5]   0.00-60.00  sec   762 MBytes  12.7 MBytes/sec                  receiver

iperf Done.

ftp user@192.168.76.1
ftp> get test.iso
1073741824 bytes received in 01:19 (12.95 MiB/s)


$ iperf3 -c 192.168.76.1 -i 0 -t 60 -f M --bidir
Connecting to host 192.168.76.1, port 5201
[  5] local 192.168.1.3 port 39730 connected to 192.168.76.1 port 5201
[  7] local 192.168.1.3 port 39740 connected to 192.168.76.1 port 5201
[ ID][Role] Interval           Transfer     Bitrate         Retr  Cwnd
[  5][TX-C]   0.00-60.00  sec   880 MBytes  14.7 MBytes/sec  328    799 KBytes       
[  7][RX-C]   0.00-60.00  sec   361 MBytes  6.01 MBytes/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID][Role] Interval           Transfer     Bitrate         Retr
[  5][TX-C]   0.00-60.00  sec   880 MBytes  14.7 MBytes/sec  328             sender
[  5][TX-C]   0.00-60.00  sec   878 MBytes  14.6 MBytes/sec                  receiver
[  7][RX-C]   0.00-60.00  sec   362 MBytes  6.04 MBytes/sec  251             sender
[  7][RX-C]   0.00-60.00  sec   361 MBytes  6.01 MBytes/sec                  receiver

iperf Done.

### WG + PPPoE + VLAN35 (z klienta LAN-owego, przez router który jest peerem WG i clientem PPPoE, do serwera WG który jest dodatkowo serwerem PPPoE na tagowanych portach VLAN 35) ###

$ iperf3 -c 10.9.0.1 -i 0 -t 60 -f M
Connecting to host 10.9.0.1, port 5201
[  5] local 192.168.1.3 port 45562 connected to 10.9.0.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-60.00  sec   456 MBytes  7.60 MBytes/sec  862   3.02 MBytes       
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-60.00  sec   456 MBytes  7.60 MBytes/sec  862             sender
[  5]   0.00-60.23  sec   456 MBytes  7.57 MBytes/sec                  receiver

iperf Done.

ftp user@10.9.0.1
ftp> put test.iso
1073741824 bytes sent in 02:03 (8.28 MiB/s)


$ iperf3 -c 10.9.0.1 -i 0 -t 60 -f M -R
Connecting to host 10.9.0.1, port 5201
Reverse mode, remote host 10.9.0.1 is sending
[  5] local 192.168.1.3 port 56086 connected to 10.9.0.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-60.00  sec   731 MBytes  12.2 MBytes/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-60.04  sec   735 MBytes  12.2 MBytes/sec  249             sender
[  5]   0.00-60.00  sec   731 MBytes  12.2 MBytes/sec                  receiver

iperf Done.

ftp user@10.9.0.1
ftp> get test.iso
1073741824 bytes received in 01:52 (9.07 MiB/s)


$ iperf3 -c 10.9.0.1 -i 0 -t 60 -f M --bidir
Connecting to host 10.9.0.1, port 5201
[  5] local 192.168.1.3 port 51682 connected to 10.9.0.1 port 5201
[  7] local 192.168.1.3 port 51694 connected to 10.9.0.1 port 5201
[ ID][Role] Interval           Transfer     Bitrate         Retr  Cwnd
[  5][TX-C]   0.00-60.00  sec   318 MBytes  5.29 MBytes/sec  815   2.95 MBytes       
[  7][RX-C]   0.00-60.00  sec   299 MBytes  4.98 MBytes/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID][Role] Interval           Transfer     Bitrate         Retr
[  5][TX-C]   0.00-60.00  sec   318 MBytes  5.29 MBytes/sec  815             sender
[  5][TX-C]   0.00-60.14  sec   317 MBytes  5.27 MBytes/sec                  receiver
[  7][RX-C]   0.00-60.00  sec   302 MBytes  5.04 MBytes/sec  1279             sender
[  7][RX-C]   0.00-60.14  sec   299 MBytes  4.97 MBytes/sec                  receiver

iperf Done.



-----------------------------------------------------------------------------
 |                                                                           |
 | OpenWrt 23.05-SNAPSHOT, r23821-77b7c10884                                 |
 |                                                                           |
 | Build time: 2024-04-06 11:28 CEST                                         |
 | Cezary Jackiewicz, https://eko.one.pl                                     |
 |                                                                           |
 -----------------------------------------------------------------------------
 | Machine: Netgear R6220                                                    |
####################################################################################################################

    ########## Z HW_FLOW ##########

firewall.@defaults[0].flow_offloading='1'
firewall.@defaults[0].flow_offloading_hw='1'
####################################################################################################################

### NAT (z klienta LAN-owego, przez router, do serwera) ###

$ iperf3 -c 192.168.76.1 -i 0 -t 60 -f M
Connecting to host 192.168.76.1, port 5201
[  5] local 192.168.1.3 port 41820 connected to 192.168.76.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-60.00  sec  6.56 GBytes   112 MBytes/sec  12210    201 KBytes       
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-60.00  sec  6.56 GBytes   112 MBytes/sec  12210             sender
[  5]   0.00-60.00  sec  6.56 GBytes   112 MBytes/sec                  receiver

iperf Done.

ftp user@192.168.76.1
ftp> put test.iso
1073741824 bytes sent in 00:09 (102.48 MiB/s)


$ iperf3 -c 192.168.76.1 -i 0 -t 60 -f M -R
Connecting to host 192.168.76.1, port 5201
Reverse mode, remote host 192.168.76.1 is sending
[  5] local 192.168.1.3 port 40138 connected to 192.168.76.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-60.00  sec  6.56 GBytes   112 MBytes/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-60.00  sec  6.56 GBytes   112 MBytes/sec  196             sender
[  5]   0.00-60.00  sec  6.56 GBytes   112 MBytes/sec                  receiver

iperf Done.

ftp user@192.168.76.1
ftp> get test.iso
1073741824 bytes received in 00:09 (110.73 MiB/s)

$ iperf3 -c 192.168.76.1 -i 0 -t 60 -f M --bidir
Connecting to host 192.168.76.1, port 5201
[  5] local 192.168.1.3 port 45886 connected to 192.168.76.1 port 5201
[  7] local 192.168.1.3 port 45900 connected to 192.168.76.1 port 5201
[ ID][Role] Interval           Transfer     Bitrate         Retr  Cwnd
[  5][TX-C]   0.00-60.00  sec  5.59 GBytes  95.4 MBytes/sec  365   1.27 MBytes       
[  7][RX-C]   0.00-60.00  sec  6.13 GBytes   105 MBytes/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID][Role] Interval           Transfer     Bitrate         Retr
[  5][TX-C]   0.00-60.00  sec  5.59 GBytes  95.4 MBytes/sec  365             sender
[  5][TX-C]   0.00-60.00  sec  5.58 GBytes  95.2 MBytes/sec                  receiver
[  7][RX-C]   0.00-60.00  sec  6.13 GBytes   105 MBytes/sec  171             sender
[  7][RX-C]   0.00-60.00  sec  6.13 GBytes   105 MBytes/sec                  receiver

iperf Done.

### WG (z klienta LAN-owego, przez router który jest peerem WG, do serwera WG) ###

$ iperf3 -c 10.9.0.1 -i 0 -t 60 -f M
Connecting to host 10.9.0.1, port 5201
[  5] local 192.168.1.3 port 60666 connected to 10.9.0.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-60.00  sec   818 MBytes  13.6 MBytes/sec  791   3.00 MBytes       
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-60.00  sec   818 MBytes  13.6 MBytes/sec  791             sender
[  5]   0.00-60.18  sec   818 MBytes  13.6 MBytes/sec                  receiver

iperf Done.

ftp user@10.9.0.1
ftp> put test.iso
1073741824 bytes sent in 01:34 (10.85 MiB/s)


$ iperf3 -c 10.9.0.1 -i 0 -t 60 -f M -R
Connecting to host 10.9.0.1, port 5201
Reverse mode, remote host 10.9.0.1 is sending
[  5] local 192.168.1.3 port 49740 connected to 10.9.0.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-60.00  sec   798 MBytes  13.3 MBytes/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-60.01  sec   801 MBytes  13.3 MBytes/sec  187             sender
[  5]   0.00-60.00  sec   798 MBytes  13.3 MBytes/sec                  receiver

iperf Done.

ftp user@10.9.0.1
ftp> get test.iso
1073741824 bytes received in 01:39 (10.25 MiB/s)


$ iperf3 -c 10.9.0.1 -i 0 -t 60 -f M --bidir
Connecting to host 10.9.0.1, port 5201
[  5] local 192.168.1.3 port 41380 connected to 10.9.0.1 port 5201
[  7] local 192.168.1.3 port 41392 connected to 10.9.0.1 port 5201
[ ID][Role] Interval           Transfer     Bitrate         Retr  Cwnd
[  5][TX-C]   0.00-60.00  sec   516 MBytes  8.60 MBytes/sec  2140   1.65 MBytes       
[  7][RX-C]   0.00-60.00  sec   285 MBytes  4.74 MBytes/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID][Role] Interval           Transfer     Bitrate         Retr
[  5][TX-C]   0.00-60.00  sec   516 MBytes  8.60 MBytes/sec  2140             sender
[  5][TX-C]   0.00-60.15  sec   514 MBytes  8.55 MBytes/sec                  receiver
[  7][RX-C]   0.00-60.00  sec   288 MBytes  4.80 MBytes/sec  758             sender
[  7][RX-C]   0.00-60.15  sec   285 MBytes  4.73 MBytes/sec                  receiver

iperf Done.

### PPPoE + VLAN 35(z klienta LAN-owego, przez router który jest clientem PPPoE, do serwera PPPoE dodatkowo na tagowanych portach VLAN 35) ###

$ iperf3 -c 192.168.76.1 -i 0 -t 60 -f M
Connecting to host 192.168.76.1, port 5201
[  5] local 192.168.1.3 port 38838 connected to 192.168.76.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-60.00  sec  6.52 GBytes   111 MBytes/sec  343    797 KBytes       
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-60.00  sec  6.52 GBytes   111 MBytes/sec  343             sender
[  5]   0.00-60.01  sec  6.52 GBytes   111 MBytes/sec                  receiver

iperf Done.

ftp user@192.168.76.1
ftp> put test.iso
1073741824 bytes sent in 00:10 (99.23 MiB/s)


$ iperf3 -c 192.168.76.1 -i 0 -t 60 -f M -R
Connecting to host 192.168.76.1, port 5201
Reverse mode, remote host 192.168.76.1 is sending
[  5] local 192.168.1.3 port 37716 connected to 192.168.76.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-60.00  sec  6.52 GBytes   111 MBytes/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-60.00  sec  6.52 GBytes   111 MBytes/sec    0             sender
[  5]   0.00-60.00  sec  6.52 GBytes   111 MBytes/sec                  receiver

iperf Done.

ftp user@192.168.76.1
ftp> get test.iso
1073741824 bytes received in 00:09 (110.97 MiB/s)


$ iperf3 -c 192.168.76.1 -i 0 -t 60 -f M --bidir
Connecting to host 192.168.76.1, port 5201
[  5] local 192.168.1.3 port 40390 connected to 192.168.76.1 port 5201
[  7] local 192.168.1.3 port 40392 connected to 192.168.76.1 port 5201
[ ID][Role] Interval           Transfer     Bitrate         Retr  Cwnd
[  5][TX-C]   0.00-60.00  sec  6.06 GBytes   103 MBytes/sec  2065    461 KBytes       
[  7][RX-C]   0.00-60.00  sec  5.12 GBytes  87.4 MBytes/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID][Role] Interval           Transfer     Bitrate         Retr
[  5][TX-C]   0.00-60.00  sec  6.06 GBytes   103 MBytes/sec  2065             sender
[  5][TX-C]   0.00-60.00  sec  6.05 GBytes   103 MBytes/sec                  receiver
[  7][RX-C]   0.00-60.00  sec  5.12 GBytes  87.4 MBytes/sec  1736             sender
[  7][RX-C]   0.00-60.00  sec  5.12 GBytes  87.4 MBytes/sec                  receiver

iperf Done.

### WG + PPPoE + VLAN35 (z klienta LAN-owego, przez router który jest peerem WG i clientem PPPoE, do serwera WG który jest dodatkowo serwerem PPPoE na tagowanych portach VLAN 35) ###

$ iperf3 -c 10.9.0.1 -i 0 -t 60 -f M
Connecting to host 10.9.0.1, port 5201
[  5] local 192.168.1.3 port 60128 connected to 10.9.0.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-60.00  sec   569 MBytes  9.48 MBytes/sec  382   1.48 MBytes       
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-60.00  sec   569 MBytes  9.48 MBytes/sec  382             sender
[  5]   0.00-60.17  sec   567 MBytes  9.43 MBytes/sec                  receiver

iperf Done.

ftp user@10.9.0.1
ftp> put test.iso
1073741824 bytes sent in 01:52 (9.12 MiB/s)

$ iperf3 -c 10.9.0.1 -i 0 -t 60 -f M -R
Connecting to host 10.9.0.1, port 5201
Reverse mode, remote host 10.9.0.1 is sending
[  5] local 192.168.1.3 port 54868 connected to 10.9.0.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-60.00  sec   732 MBytes  12.2 MBytes/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-60.04  sec   735 MBytes  12.2 MBytes/sec  187             sender
[  5]   0.00-60.00  sec   732 MBytes  12.2 MBytes/sec                  receiver

iperf Done.

ftp user@10.9.0.1
ftp> get test.iso
1073741824 bytes received in 01:41 (10.12 MiB/s)

$ iperf3 -c 10.9.0.1 -i 0 -t 60 -f M --bidir
Connecting to host 10.9.0.1, port 5201
[  5] local 192.168.1.3 port 39480 connected to 10.9.0.1 port 5201
[  7] local 192.168.1.3 port 39488 connected to 10.9.0.1 port 5201
[ ID][Role] Interval           Transfer     Bitrate         Retr  Cwnd
[  5][TX-C]   0.00-60.00  sec   323 MBytes  5.38 MBytes/sec  1155    878 KBytes       
[  7][RX-C]   0.00-60.00  sec   182 MBytes  3.04 MBytes/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID][Role] Interval           Transfer     Bitrate         Retr
[  5][TX-C]   0.00-60.00  sec   323 MBytes  5.38 MBytes/sec  1155             sender
[  5][TX-C]   0.00-60.18  sec   320 MBytes  5.32 MBytes/sec                  receiver
[  7][RX-C]   0.00-60.00  sec   185 MBytes  3.09 MBytes/sec  1790             sender
[  7][RX-C]   0.00-60.18  sec   182 MBytes  3.03 MBytes/sec                  receiver

iperf Done."
yDHZA2Cp,Tabelas controle de despesas,NillGolv,MySQL,Saturday 6th of April 2024 05:18:00 PM CDT,"// ------- Tabela Usuários -------
CREATE TABLE IF NOT EXISTS `usuarios`(
	`id` int NOT NULL AUTO_INCREMENT,
	`nome` varchar(30) COLLATE utf8mb4_general_ci NOT NULL,
	`sobrenome` varchar(150) COLLATE utf8mb4_general_ci NOT NULL,
	`email` varchar(220) COLLATE utf8mb4_general_ci NOT NULL,
	`senha` varchar(60) COLLATE utf8mb4_general_ci NOT NULL,
	`image` varchar(220) COLLATE utf8mb4_general_ci NOT NULL,
	PRIMARY KEY (`id`)
) ENGINE = INNODB CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;

// ------- Tabela controle de despesas -------
CREATE TABLE IF NOT EXISTS `controles_despesas`(
	`id` int NOT NULL AUTO_INCREMENT,
	`descricao` varchar(255) COLLATE utf8mb4_general_ci NOT NULL,
	`valor` double(6,2) NOT NULL,
	`tipo` ENUM('E', 'S') NOT NULL,
	`despesa` ENUM('F', 'V') NOT NULL,
	`categoria_id` int  NOT NULL,
	PRIMARY KEY (`id`)
) ENGINE = INNODB CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;

// ------- Tabela categorias -------
CREATE TABLE IF NOT EXISTS `categorias`(
	`id` int NOT NULL AUTO_INCREMENT,
	`nome` varchar(255) COLLATE utf8mb4_general_ci NOT NULL,
	PRIMARY KEY (`id`)
) ENGINE = INNODB CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;


// --- Explicando aqui estes dois campos, como está na tabela, vai salvar somente as iniciais.
// tipo(E = Entrada, S = Saída)
// despesa(F = Fixa, V = Variada)

"
txMbYXr3,webinar-for-loops-2024-04-06,jspill,Python,Saturday 6th of April 2024 05:08:34 PM CDT,"# # 2024 Apr 06
# # WEBINAR: For Loops
#
# # We use loops to repeat actions
# a WHILE loop... is an IF that repeats as long as the loop condition remains True

# FOR LOOPS are used for repeating actions for every element in a container (list, dict, tuple, str)

# Basic syntax of a for loop
# for ___ in __someContainer__:

# # LIST
myList = [""Agent Scully"", ""Agent Mulder"", ""Walter Skinner"", ""CSM"", ""Mr. X""]
# for item in myList:
#     print(item)
#
# # TUPLE
# myTuple = (""Gilligan"", ""Castaway002"", ""red"", ""crew"")
# for item in myTuple:
#     print(item)
#
# # STR
# myString = ""It was the best of times.""
# for char in myString:
#     print(char)

# # DICT
# myDict = {
#     key: value,
#     key: value,
#     key: value
# }
# myDict[key] # get the value for that key
# myDict[key] = value # assigns value to that key

bestOfXF = {
    ""1x00"": ""Pilot"",
    ""2x10"": ""Red Museum"",
    ""2x14"": ""Die Hand Die Verletzt"",
    ""3x04"": ""Clyde Bruckman's Final Repose"",
    ""3x12"": ""War of the Coprophages"",
    ""3x20"": ""Jose Chung's From Outer Space"",
    ""4x05"": ""The Field Where I Died"",
    ""5x05"": ""The Post Modern Prometheus"",
    ""5x17"": ""All Souls""
}
# for key in bestOfXF:
#     # ""Check out Episode ___ or '___'""
#     print(f""Check out Episode {key} or '{bestOfXF[key]}'."")

# looping a known number of times
# RANGE
# range(start=0, stop, step=1)
# for num in range(5): # [0, 1, 2, 3, 4]
#     print(num)

# if we're interested in the INDEX, we can loop over the RANGE of the LENGTH
for i in range(0, len(myList), 1):
    print(f""{i}: {myList[i]}"")

# another way to loop focused on the INDEX is using ENUMERATE
# for i, item in enumerate(myList):
#     print(f""{i}--> {item}"")
"
7WnxR8Gu,Untitled,Mysoft,FreeBasic,Saturday 6th of April 2024 05:06:20 PM CDT,"function Escaping( sStr as string ) as string
  dim as string sResult
  dim as integer iPos=1
  do
    var iFound = instr(iPos,sStr,""\"")
    if iFound=0 then return sResult + mid(sStr,iPos)
    sResult += mid(sStr,iPos,iFound-iPos)
    iPos = iFound+2
    select case sStr[iPos-2]
    case asc(""r""),asc(""R""): sResult += !""\r""
    case asc(""n""),asc(""N""): sResult += !""\n""
    case else : sResult += ""\"": iPos -= 1
    end select
  loop
end function

print Escaping(""Hello\nWorld\n   OK?\rhi,"")
sleep
"
Sj1gijKx,Remove Recursive Keep Count,ivandrofly,C#,Saturday 6th of April 2024 04:37:26 PM CDT,"        public static string RemoveRecursiveChar(string input, char ch, int keepCount)
        {
            var len = input.Length;
            var chars = new char[len];
            var writeIndex = 0;
            var charCount = 0;
            for (var j = 0; j < len; j++)
            {
                if (input[j] != ch)
                {
                    chars[writeIndex++] = input[j];
                    charCount = 0;
                }
                else if (charCount + 1 <= keepCount)
                {
                    chars[writeIndex++] = ch;
                    charCount++;
                }
            }

            return new string(chars, 0, writeIndex);
        }"
m95PwxQf,Python version of the GRUB2 Music Maker,EvilSupahFly,Python,Saturday 6th of April 2024 04:17:12 PM CDT,"# grub2_music_maker.py

import sys

def midi_to_notes(file_name):
    with open(file_name, ""rb"") as file:
        midi_data = file.read()

    notes = []
    for i in range(len(midi_data)):
        notes.append(str(midi_data[i]))

    return "" "".join(notes)

def play_notes(notes):
    for note in notes.split():
        sys.stdout.write(""\x07"")  # Beep through the PC speaker
        sys.stdout.flush()
        time.sleep(0.1)

def save_to_grub(notes):
    with open(""/etc/default/grub"", ""r"") as file:
        lines = file.readlines()
    
    for i in range(len(lines)):
        if ""GRUB_INIT_TUNE="" in lines[i]:
            lines[i] = ""GRUB_INIT_TUNE=\"""" + notes + ""\""\n""
    
    with open(""/etc/default/grub"", ""w"") as file:
        file.writelines(lines)

if __name__ == ""__main__"":
    file_name = sys.argv[1]
    notes = midi_to_notes(file_name)
    
    choice = input(""Do you want to play the notes (p) or save them to GRUB (g)? "")
    
    if choice == ""p"":
        play_notes(notes)
    elif choice == ""g"":
        save_to_grub(notes)
        print(""Notes saved to GRUB. Please run 'sudo update-grub' to apply changes."")
    else:
        print(""Invalid choice."")

"
sDMzaSge,"Convert MIDI to text, update GRUB2 with song",EvilSupahFly,C++,Saturday 6th of April 2024 04:12:58 PM CDT,"# grub2_music_maker.cpp - takes a MIDI file as input, converts it to text notes, and writes it to GRUB_INIT_TUNE in /etc/default/grub -- V1.0

#include <iostream>
#include <fstream>
#include <vector>

int main(int argc, char *argv[]) {
    if (argc < 2) {
        std::cout << ""Usage: "" << argv[0] << "" <input MIDI file>"" << std::endl;
        return 1;
    }

    std::ifstream midiFile(argv[1], std::ios::binary);
    if (!midiFile.is_open()) {
        std::cerr << ""Error opening MIDI file"" << std::endl;
        return 1;
    }

    // Read MIDI file and convert to plain text notes
    std::vector<char> notes;
    char note;
    while (midiFile.read(&note, 1)) {
        notes.push_back(note);
    }

    // Save notes to the GRUB2 bootloader
    std::ofstream grubFile(""/etc/default/grub"");
    if (!grubFile.is_open()) {
        std::cerr << ""Error opening GRUB file"" << std::endl;
        return 1;
    }

    grubFile << ""GRUB_INIT_TUNE=\"""";
    for (const char& n : notes) {
        grubFile << n;
    }
    grubFile << ""\"""" << std::endl;

    std::cout << ""MIDI file converted to plain text notes and saved to GRUB2 bootloader"" << std::endl;

    return 0;
}

"
UtittMrU,Data Module for Endurance&Range Calculator,Thomas_Lillieskold,Fortran,Saturday 6th of April 2024 04:09:36 PM CDT,"MODULE DATA 
  USE,INTRINSIC :: iso_fortran_env,only: real64
  IMPLICIT NONE

  REAL(kind=real64),PARAMETER :: Rendimiento_Pala = 0.87_real64
  REAL(kind=real64),PARAMETER :: SFC = 0.45_real64 *  (1.658_real64*10_real64**(-6.0_real64))  ![lbf/hp/hr]
  REAL(kind=real64),PARAMETER :: Peso_Despegue = 137293.0_real64 							   ![N]
  REAL(kind=real64),PARAMETER :: Superficie = 28 											   ![m²] 
  
  
  INTEGER, PARAMETER :: Numero_de_Segmentos = 3

  REAL(kind=real64), DIMENSION(Numero_de_Segmentos) :: Altitud
  REAL(kind=real64), DIMENSION(Numero_de_Segmentos) :: Velocidad_Equivalente
  REAL(kind=real64), DIMENSION(Numero_de_Segmentos) :: Distancia
  
  INTEGER, DIMENSION(Numero_de_Segmentos) :: Divisiones 
  

CONTAINS

  SUBROUTINE Asignacion_Parametros_Intervalos()
 
!LOS VALORES DE ALTITUD SE INGRESAN EN PIES [ft]
	Altitud(1) = 10000_real64
	Altitud(2) = 10000_real64
	Altitud(3) = 10000_real64
	
!LOS VALORES DE VELOCIDAD EQUIVALENTE SE INGRESAN EN NUDOS [kts]	
	Velocidad_Equivalente(1) = 249.9786177_real64
	Velocidad_Equivalente(2) = 249.9786177_real64
	Velocidad_Equivalente(3) = 249.9786177_real64
	
!LOS VALORES DE DISTANCIA POR INTERVALO SE INGRESAN EN KILOMETROS [Km]	
	Distancia(1) = 500.0_real64
	Distancia(2) = 1500.0_real64 
	Distancia(3) = 2500.0_real64 
	
!LOS VALORES DE DIVISIONES POR INTERVALO SE INGRESAN COMO NUMEROS ENTEROS [integer] 	
	Divisiones(1) = 100
	Divisiones(2) = 1000
	Divisiones(3) = 10000 
	
	END SUBROUTINE Asignacion_Parametros_Intervalos
	
	
	SUBROUTINE Polar (Coeficiente_Sustentacion,Coeficiente_Drag) 
		
		REAL(kind=real64), INTENT(IN) :: Coeficiente_Sustentacion
 		REAL(kind=real64), INTENT(OUT) :: Coeficiente_Drag
		
		Coeficiente_Drag = 0.02_real64 + 0.05_real64*Coeficiente_Sustentacion**2.0_real64 	
		
	END SUBROUTINE Polar	
	

END MODULE DATA "
iwa8fJG3,Above the Main Diagonal,NecheB,JavaScript,Saturday 6th of April 2024 04:01:20 PM CDT,"let number = Number(gets());
let sum = BigInt(0);
 
for (let i = 0; i < number-1; i++)
{
    for (let j = 1; j < number; j++)
    {
        if (i < j)
        {
        sum += BigInt(Math.pow(2, i + j));
        }
    }
}
 
print(sum);"
tmPs7N8f,Three Groups,NecheB,JavaScript,Saturday 6th of April 2024 04:00:42 PM CDT,"let array = gets().split(' ');
let firstGroup = [];
let secondGroup = [];
let thirdGroup = [];

for (let i = 0; i < array.length; i++) {
    
    if(array[i] % 3 === 0 ){
        firstGroup.push(array[i]);
    } else if (array[i] % 3 === 1){
        secondGroup.push(array[i]);
    } else {
        thirdGroup.push(array[i]);
    }
    
}

print(firstGroup.join(' '));
print(secondGroup.join(' '));
print(thirdGroup.join(' '));

// SECOND WAY

let array = gets().split(' ').map(Number);
let firstGroup = [];
let secondGroup = [];
let thirdGroup = [];

for (let i = 0; i < array.length; i++) {
    
    if(array[i] % 3 === 0 ){
        firstGroup.push(array[i]);
    } else if (array[i] % 3 === 1){
        secondGroup.push(array[i]);
    } else {
        thirdGroup.push(array[i]);
    }
    
}

if (firstGroup.length > 0){
    print(firstGroup.join(' '));    
}

if (secondGroup.length > 0){
    print(secondGroup.join(' '));
}

if (thirdGroup.length > 0){
    print(thirdGroup.join(' '));"
y01xAsSq,Symmetric Arrays,NecheB,JavaScript,Saturday 6th of April 2024 03:58:24 PM CDT,"let n = Number(gets());

for (let i = 0; i < n; i++) {
    let array = gets().split(' ').map(Number);
    let isSymmetric = true;

    for (let j = 0; j < array.length / 2; j++) {
        if (array[j] !== array[array.length - 1 - j]) {
            isSymmetric = false;
            break;
        }
    }

    if (isSymmetric === true){
        print('Yes');
    } else {
        print('No');
    }
}"
fE55h6Kh,css-04.24,nix_e,CSS,Saturday 6th of April 2024 03:50:28 PM CDT,"/* Require IBM Plex font */
body {
  background: #111111 !important;
  color: #AAAAAA !important;
  font-family: ""IBM Plex Mono Regular"" !important;
  font-size: 16px !important;
  background-position: center !important;
  font-weight: 400 !important;
}
:root.tomorrow blockquote>span.quote{
    color: #85b685 !important;
}
 
:root.tomorrow a, a:visited {
    color: #EDEDED !important;
    text-decoration: none !important;
}
 
:root.tomorrow div.boardTitle {
    font-weight: 450 !important;
    font-size: 34px !important;
}
 
:root.tomorrow .dialog {
    background: #171717 !important;
    color: #EDEDED !important;
    box-shadow: 0px 0px 10px #101010 !important;
    font-size: 16.6px !important;
}
 
:root.fixed:not(.gallery-open) #header-bar:not(:hover) {
    background: #171717 !important;
    box-shadow: 0px 2px #101010 !important;
}
 
#custom-board-list {
  font-family: ""IBM Plex Mono Regular"" !important;
  font-size: 16px !important;
}
 
#shortcuts {
  font-size: 16.8px !important;
}
   
:root.tomorrow .catalog-stats {
    color: #EDEDED !important;
}
 
:root.tomorrow div.post blockquote.postMessage {
    font-family: ""IBM Plex Mono Regular"" !important;
    font-size: 17px !important;
}
 
:root.tomorrow .catalog-thread.watched .catalog-thumb{
    border: 4px solid red !important;
}
 
:root.tomorrow.highlight-own .yourPost > .reply {
    border-left: 3px #EDEDED double !important;
}
 
:root.tomorrow.highlight-you .quotesYou > .reply {
    border-left: 3px #EDEDED dashed !important; 
}
 
:root.tomorrow .qphl{
    outline: 2px solid rgba(#8000ff, 0.2) !important;
}
 
:root.tomorrow .quotelink, .deadlink {
    color: #9d2e45 !important;
}
 
:root.tomorrow div.reply{
    background: #161616 !important;
    box-shadow: 0 0 15px #090909 !important;
    border-radius: 3px !important;
    padding-right: 5px !important;
    padding-left: 5px !important;
    margin-top: 11px !important;
    border: 1px solid #333333 !important;
}
:root.tomorrow .reply {
    width: 98.8% !important;
}
 
:root.tomorrow .fa-minus-square-o {
    display: none !important;
}
 
:root.tomorrow .show-reply-button {
    margin-left:270px !important;
}
 
:root.tomorrow .prettyprint{
    background: rgba(0,0,0,0.1) !important;
}
:root.tomorrow .catalog-post.catalog-post{
    background: #161616 !important;
    box-shadow: 0px 0px 15px #090909 !important;
    margin-top: 6px !important;
 
:root.tomorrow .thread {
    position: center !important;
    margin-bottom: 10px !important;
}
 
#overlay, #navlinks, :root.float #updater, :root.float #thread-stats, #qr {
    background: rgba(0,0,0,0.1) !important;
    backdrop-filter: blur(10px) !important;
    border-top: 1px #ADADAD solid !important
}
 
.fixed #header-bar {
    background: #202020 !important;
    border-top: 1px #ADADAD solid !important
} 
 
:root.tomorrow.catalog-hover-expand .catalog-container:hover > .post {
    background: rgba(10,10,10,10.255) !important;
    backdrop-filter: blur(10px) !important;
    border: 1px #ADADAD solid !important
}
 
:root.tomorrow .qr-link {
    background: rgba(20,20,20,20.255) !important;
    backdrop-filter: blur(10px) !important;
    border: 1px #ADADAD solid !important
}
 
:root.tomorrow #qr > form {
    width: 100% !important;
    color: #EDEDED !important;
    background: rgba(20,20,20,20.255) !importatnt;
}
 
:root.tomorrow a, a:visited {
    color: #ADADAD !important;
    text-decoration: none !important;
}
 
:root.tomorrw .unread-line {
    display: none !important;
}
 
:root.tomorrow .subject {
    color: #b685b6 !important;
}
 
#index-mode, #index-size, #index-sort, #styleSelector, .pages.cataloglink, .pagelist.json-index {
    color: #EDEDED !important;
    background: #181818 !important;
    font-size: 17px !important;
}
 
:root.tomorrow .postMessage {
    color: #dadada !important;
}
 
:root.tomorrow .quotelink.you.forwardlink {
    color: #982565 !important;
}
 
:root.tomorrow .quotelink.forwardlink {
    color: #982222 !important;
}
 
:root.tomorrow .quotelink.you {
    color: #982565 !important;
}
 
:root.tomorrow .subject {
    color: #979425 !important;
}
 
.tab-keybinds {
    margin: -4px !important;
}
 
.fileThumb {
    border: 20px solid #0000 !important;
}
 
.file {
    border-bottom: 20px solid #0000 !important;
}
 
.replylink {
    color: red !important;
}
 
/* FACK EMOJITARD */
.xae {
    display: none !important;
}"
U5j0vk3w,extremehub,ExtremeAntonis,Lua,Saturday 6th of April 2024 03:36:38 PM CDT,"--Discord: discord.com/invite/yWDJrpTjRP
loadstring(game:HttpGet(""https://raw.githubusercontent.com/ExtremeAntonis/extremehub/main/loader.lua""))()"
j68FVX7c,Minecraft Computer Craft View Visitor Log,zkb1325,Lua,Saturday 6th of April 2024 03:29:59 PM CDT,"--[[
    Pair with https://pastebin.com/ga0KRZ4f to view the logs

    Simple startup file
    
    if not peripheral.find(""playerDetector"") then
        term.setCursorPos(1, 1)
        term.write(""No player detector found"")
        return
    end
    
    if not peripheral.find(""monitor"") then
        term.setCursorPos(1, 1)
        term.write(""No monitor found to display logs"")
        return
    end
    
    shell.openTab(""lookUp.lua"")
    shell.openTab(""visitorLog.lua"")
]]
Monitor = peripheral.find(""monitor"")
term.clear()

function EnterInput()
    term.setCursorPos(1, 1)
    term.clearLine()
    term.write(""'list' to list logged names"")
    term.setCursorPos(1, 2)
    term.clearLine()
    term.write(""<playerName> to display logs of player"")
    term.setCursorPos(1, 3)
    term.clearLine()
    term.write(""Input: "")
    return read()
end

function GetLogs()
    local visitorFile = fs.open(""visitorLog.txt"", ""r"")
    local log = visitorFile.readAll()
    visitorFile.close()
    return textutils.unserialize(log)
end

function DisplayLogs(lookUpName)
    Monitor.clear()
    Monitor.setCursorPos(1, 1)
    Monitor.setTextColor(colors.white)
    Monitor.write(""Logs for "")
    Monitor.setCursorPos(10, 1)
    Monitor.setTextColor(colors.blue)
    Monitor.write(lookUpName)
    local visitorLogs = GetLogs()
    if not visitorLogs[lookUpName] then
        Monitor.setCursorPos(1, 2)
        Monitor.write(""No logs found"")
        return
    end

    local playersLogs = visitorLogs[lookUpName]
    for i,v in ipairs(Reverse(playersLogs)) do
        Monitor.setCursorPos(1, i+1)
        Monitor.setTextColor(colors.green)
        Monitor.write(v[1])
        
        Monitor.setCursorPos(24, i+1)
        Monitor.setTextColor(colors.white)
        Monitor.write("" | "")
        
        Monitor.setCursorPos(27, i+1)
        Monitor.setTextColor(colors.red)
        Monitor.write((v[2] or ""?""))
    end

end

function ListPlayers()
    local logs = GetLogs()
    term.setCursorPos(1, 5)
    term.clearLine()
    term.write(""There are logs for..."")
    local count = 0
    for i,v in pairs(logs) do
        term.setCursorPos(1, 6+count)
        term.clearLine()
        term.write(i)
        count = count+1
    end
end

function Reverse(table)
    for i = 1, #table/2, 1 do
        table[i], table[#table-i+1] = table[#table-i+1], table[i]
    end
    return table
end

while true do
    local search = EnterInput()
    if search == ""list"" or search == ""List"" then
        ListPlayers()
    else
        DisplayLogs(search)
    end
end"
9FadPUa9,Untitled,Iam_Sandeep,Python,Saturday 6th of April 2024 02:32:37 PM CDT,"@router.get('/worker/get_ack_from_worker', summary='Get acknowledgement from worker (yes/no/no-response for the task ')
# This function is called for every period interval
async def get_acknowledgement_from_worker(response:Worker_Acknowledgement_To_Task,user: dict = Depends(worker_resolver),task: dict = Depends(task_resolver)):
    pass"
S7JsxpAJ,PS99 Venox Hub Beta Script,quikzyYTbtw,Lua,Saturday 6th of April 2024 02:25:31 PM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/venoxw/venox-hub/main/fluent-ps99hub""))()

--made a new ps99 script hub adding more features in future updates!
--KEYLESS !
"
rFDghwgm,Untitled,poxipox,Lua,Saturday 6th of April 2024 02:05:44 PM CDT,"	add_mission = function(cid, mission) 
		print('lib add_mission mission :' .. mission)
		if getPlayerStorageValue(cid, glbMissionCfg.storage_add) ~= mission then
			if glbMissionCfg.mission[mission].kill then
				for monster, data in pairs(glbMissionCfg.mission[mission].kill) do
					-- print(glbMissionCfg.storage_mission+data.storage)
					setPlayerStorageValue(cid, glbMissionCfg.storage_mission+data.storage, 0) -- reset stroage mission (auto kill check
				end
			end

NA:

	add_mission = function(cid, mission) 
		print('lib add_mission mission :' .. mission)
		if getPlayerStorageValue(cid, glbMissionCfg.storage_add) ~= mission then
			if glbMissionCfg.mission[mission].kill then
				for monster, data in pairs(glbMissionCfg.mission[mission].kill) do
					-- print(glbMissionCfg.storage_mission+data.storage)
					setPlayerStorageValue(cid, glbMissionCfg.storage_mission+data.storage, 0) -- reset stroage mission (auto kill check
				end
			else
				setPlayerStorageValue(cid, glbMissionCfg.storage_mission+1, 0) -- RESET MISSION
			end"
BwhKHSGw,HorrorVale - Map update,SSTrihan,Ruby,Saturday 6th of April 2024 01:46:03 PM CDT,"#-------------------------------------------------------------------------------
# Don't remove this header!
#-------------------------------------------------------------------------------
# Custom Map System Script 
# by Trihan
# 
# Version : 1.2
#
# This script is commissioned by Batworks Software.
#-------------------------------------------------------------------------------
 
#-------------------------------------------------------------------------------
# Version History
#-------------------------------------------------------------------------------
# 1.2 - Added icons for fast travel, party swap, shop and save coffins
# 1.1 - Map name window position will now change if cursor overlaps it.
# 1.0 - Initial script.
#-------------------------------------------------------------------------------
 
#-------------------------------------------------------------------------------
# All pictures are located in the Graphics/Maps folder.
#
# To call the map scene, use the following script call
#
#     SceneManager.call(Scene_MapSystem)
#
# This script runs mostly automatically. All you need to configure is the
# graphic and offset for the cursor, the graphic for the player marker, and
# the regex pattern to use for map filenames.
#
# The filename by default needs to meet the following pattern:
# AreaXMap + name of map + _markerx_markery
#
# For example, Area1MapAbandonedShack_141_198.png
# This will mark the map as belonging to area 1, connect it to the map named
# AbandonedShack, and display the marker at (141, 198) on the screen.
#
# If you change the regex pattern, please ensure that (\d+) still appears in
# it somewhere, otherwise the script won't be able to determine areas.
#-------------------------------------------------------------------------------
module TLBMapSystem
#-------------------------------------------------------------------------------
#  Config 
 
   CursorIcon = ""fingerpointer""
   PlayerMarker = ""alicemarker""
   FastTravelMarker = ""bellmarker""
   PartySwapMarker = ""laylamarker""
   PartySwapSwitch = 506
   ShopMarker = ""jiangicon""
   RedCoffinMarker = ""coffinmarkerred""
   OrangeCoffinMarker = ""coffinmarkerorange""
   BlackCoffinMarker = ""coffinmarkerblack""
   CursorXOffset = 5
   CursorYOffset = 0
   IconXOffset = 10
   IconYOffset = 10
   MapRegex = /Area(\d+)Map.*/
 
#  ** End Config **
#
# WARNING: Editing anything beyond this point may result in the script no
# longer functioning as intended.
#-------------------------------------------------------------------------------
end
 
module Cache; def self.maps(filename); load_bitmap(""Graphics/Maps/"", filename); end; end
 
class Game_System
  attr_accessor :mapdata
  
  alias :tlb_mapsystem_initialize :initialize
  def initialize
    tlb_mapsystem_initialize
    create_map_data
  end
  
  def create_map_data
    @mapdata = {}
    regexpattern = TLBMapSystem::MapRegex
    files = Dir.entries(""Graphics/Maps"")
      .select { |file| file =~ regexpattern }
      .map { |file| File.basename(file, "".png"") }
    areas = []
    files.each { |file|
      area = file.scan(regexpattern)
      if area.size > 0 && !areas.include?(area[0][0])
        areas.push(area[0][0])
      end
    }
    areas.each { |area|
      regexpattern = Regexp.new(""Area#{area}Map(.*)"")
      @mapdata[area] = files
        .select { |file| file =~ regexpattern }
        .map { |file|
          data = file.scan(regexpattern)[0][0].split(""_"")
          {
            :name => data[0],
            :filename => file,
            :cursor_x => data[1].to_i,
            :cursor_y => data[2].to_i,
            :visited => false
          }
        }
    }
  end
  
  def get_visited_maps(area)
    if @mapdata[area]
      @mapdata[area].select { |map| map[:visited] }
    else
      []
    end
  end
  
  def visit_map(area, mapname)
    map = @mapdata[area].select { |map| map[:name] == mapname }
    if map.size > 0
      map[0][:visited] = true
    end
  end
end
 
class Game_Map
  alias :tlb_mapsystem_setup :setup
  def setup(map_id)
    tlb_mapsystem_setup(map_id)
    mapname = $data_mapinfos[map_id].name
    area = get_current_area
    if area
      $game_system.visit_map(area, mapname)
    end
  end
  
  def get_current_area
    area = self.note.scan(/<area: ?(\d+)/)
    if area.size > 0
      return area[0][0]
    else
      return nil
    end
  end
  
  def get_map(mapname)
    area = get_current_area
    if area
      map = $game_system.mapdata[area].select { |map| map[:name] == mapname }
      if map
        map[0]
      else
        nil
      end
    end
  end
  
  def get_current_map
    mapname = $data_mapinfos[@map_id].name
    get_map(mapname)
  end
  
  def get_directional_map(start_map, direction)
    map_match = $data_mapinfos.select{|key, value| value.name == start_map[:name]}.keys
    if map_match
      map_id = map_match.first
      map = nil
      if map_id
        mapfile = load_data(sprintf(""Data/Map%03d.rvdata2"", map_id))
        case direction
        when 2
          map = mapfile.note.scan(/<south: ?(.*)>/)
        when 4
          map = mapfile.note.scan(/<west: ?(.*)>/)
        when 6
          map = mapfile.note.scan(/<east: ?(.*)>/)
        when 8
          map = mapfile.note.scan(/<north: ?(.*)>/)
        else
          map = nil
        end
        if map && map.size > 0
          map_strings = map[0][0].split(""/"")
          map_strings.each{|string|
            map_obj = get_map(string)
            if map_obj[:visited]
              return map_obj
            end
          }
        else
          nil
        end
      end
    end
    nil
  end
  
  def get_south_map(start_map)
    get_directional_map(start_map, 2)
  end
  
  def get_west_map(start_map)
    get_directional_map(start_map, 4)
  end
  
  def get_east_map(start_map)
    get_directional_map(start_map, 6)
  end
 
  def get_north_map(start_map)
    get_directional_map(start_map, 8)
  end
end
 
class Window_MapLabel < Window_Base
  def initialize
    super(0, 0, Graphics.width, 120)
    @text = """"
    refresh
  end
  
  def set_text(text)
    @text = text
    refresh
  end
  
  def refresh
    create_contents
    draw_text(0, 0, 32, line_height, @text)
  end
end
 
class Window_Mystery < Window_Base
  def initialize
    super(0, 0, 100, fitting_height(1))
    self.width = text_size(""???"").width + standard_padding * 2
    create_contents
    self.x = Graphics.width / 2 - self.width / 2
    self.y = Graphics.height / 2 - self.height / 2
    self.opacity = 0
    draw_text(0, 0, 32, line_height, ""???"")
  end
end
 
class Scene_MapSystem < Scene_Base
  def start
    super
    create_background
    create_map
    @current_map = $game_map.get_current_map
    @selected_map = $game_map.get_current_map
    create_player_marker
    create_pointer
    create_label_window
    create_mystery_window
  end
  
  def terminate
    super
    dispose_background
    dispose_map
    dispose_player_marker
    dispose_pointer
  end
  
  def update
    super
  end
  
  def create_background
    @sprite = Sprite.new
    @sprite.bitmap = Cache.maps(""Mapbackground"")
    center_sprite(@sprite)
  end
  
  def create_map
    @map_icons = []
    maps = $game_system.get_visited_maps($game_map.get_current_area)
    if maps.size > 0
      @area_sprites = []
      maps.each { |map|
        map_match = $data_mapinfos.select{|key, value| value.name == map[:name]}.keys
        if map_match
          map_id = map_match.first
          if map_id
            mapfile = load_data(sprintf(""Data/Map%03d.rvdata2"", map_id))
            fasttravel = mapfile.note.scan(/<fasttravel: ?(\d+)>/)
            partyswap = mapfile.note.scan(/<partyswap>/)
            shop = mapfile.note.scan(/<shop>/)
            save = mapfile.note.scan(/<save: ?(\d)>/)
            if fasttravel && fasttravel.size > 0
              switch_id = fasttravel[0][0].to_i
              if $game_switches[switch_id]
                sprite = Sprite.new
                sprite.bitmap = Cache.maps(TLBMapSystem::FastTravelMarker)
                sprite.x = map[:cursor_x] - TLBMapSystem::IconXOffset
                sprite.y = map[:cursor_y] - TLBMapSystem::IconYOffset
                sprite.z += 100
                @map_icons.push(sprite)
              end
            end
            if partyswap && partyswap.size > 0
              switch_id = TLBMapSystem::PartySwapSwitch
              if $game_switches[switch_id]
                sprite = Sprite.new
                sprite.bitmap = Cache.maps(TLBMapSystem::PartySwapMarker)
                sprite.x = map[:cursor_x] + TLBMapSystem::IconXOffset
                sprite.y = map[:cursor_y] - TLBMapSystem::IconYOffset
                sprite.z += 100
                @map_icons.push(sprite)
              end
            end
            if shop && shop.size > 0
              sprite = Sprite.new
              sprite.bitmap = Cache.maps(TLBMapSystem::ShopMarker)
              sprite.x = map[:cursor_x] - TLBMapSystem::IconXOffset
              sprite.y = map[:cursor_y] + TLBMapSystem::IconYOffset
              sprite.z += 100
              @map_icons.push(sprite)
            end
            if save && save.size > 0
              save_type = save[0][0].to_i
              case save_type
              when 1
                bitmap = Cache.maps(TLBMapSystem::RedCoffinMarker)
              when 2
                bitmap = Cache.maps(TLBMapSystem::OrangeCoffinMarker)
              when 3
                bitmap = Cache.maps(TLBMapSystem::BlackCoffinMarker)
              else
                bitmap = Cache.maps(TLBMapSystem::RedCoffinMarker)
              end
              sprite = Sprite.new
              sprite.bitmap = bitmap
              sprite.x = map[:cursor_x] + TLBMapSystem::IconXOffset
              sprite.y = map[:cursor_y] + TLBMapSystem::IconYOffset
              sprite.z += 100
              @map_icons.push(sprite)
            end
          end
        end
        sprite = Sprite.new
        sprite.bitmap = Cache.maps(map[:filename])
        center_sprite(sprite)
        @area_sprites.push(sprite)
      }
    end
  end
  
  def create_player_marker
    @player_marker_sprite = Sprite.new
    @player_marker_sprite.bitmap = Cache.maps(TLBMapSystem::PlayerMarker)
    if @current_map
      x = @current_map[:cursor_x]
      y = @current_map[:cursor_y]
      @player_marker_sprite.x = x if x
      @player_marker_sprite.y = y if y
      @player_marker_sprite.z += 100
    end
  end
  
  def create_pointer
    @pointer_sprite = Sprite.new
    @pointer_sprite.bitmap = Cache.menus(TLBMapSystem::CursorIcon)
    if @selected_map
      x = @selected_map[:cursor_x] + TLBMapSystem::CursorXOffset
      y = @selected_map[:cursor_y] + TLBMapSystem::CursorYOffset
      @pointer_sprite.x = x if x
      @pointer_sprite.y = y if y
      @pointer_sprite.z += 200
    end
  end
  
  def create_label_window
    @label_window = Window_MapLabel.new
    if @selected_map
      refresh_label
    end
  end
  
  def create_mystery_window
    @mystery_window = Window_Mystery.new
    if @area_sprites && @area_sprites.size > 0
      @mystery_window.hide
    end
  end
  
  def refresh_label
    map_text = @selected_map[:name]
    @label_window.set_text(map_text)
    if @pointer_sprite.y < @label_window.height
      @label_window.y = Graphics.height - @label_window.height
    else
      @label_window.y = 0
    end
  end
  
  def update
    super
    if Input.trigger?(:B)
      return_scene
    end
    if @area_sprites && @area_sprites.size > 0
      if Input.trigger?(:DOWN)
        map = $game_map.get_south_map(@selected_map)
      end
      if Input.trigger?(:LEFT)
        map = $game_map.get_west_map(@selected_map)
      end
      if Input.trigger?(:RIGHT)
        map = $game_map.get_east_map(@selected_map)
      end
      if Input.trigger?(:UP)
        map = $game_map.get_north_map(@selected_map)
      end
    end
    if map
      x = map[:cursor_x] + TLBMapSystem::CursorXOffset
      y = map[:cursor_y] + TLBMapSystem::CursorYOffset
      @pointer_sprite.x = x if x
      @pointer_sprite.y = y if y
      @selected_map = map
      refresh_label
    end
    if Graphics.frame_count % 60 == 0 && @area_sprites
      current_sprite = @area_sprites.select { |sprite| sprite.bitmap == Cache.maps(@current_map[:filename]) }
      if current_sprite
        current_sprite[0].flash(Color.new(255, 255, 255, 255), 60)
      end
    end
    if @area_sprites
      @area_sprites.each {|sprite| sprite.update }
    end
  end
  
  def dispose_background
    @sprite.bitmap.dispose
    @sprite.dispose
  end
  
  def dispose_map
    if @area_sprites
      @area_sprites.each { |sprite|
        sprite.bitmap.dispose
        sprite.dispose
      }
    end
    if @map_icons
      @map_icons.each { |sprite|
        sprite.bitmap.dispose
        sprite.dispose
      }
    end
  end
  
  def dispose_player_marker
    @player_marker_sprite.bitmap.dispose
    @player_marker_sprite.dispose
  end
  
  def dispose_pointer
    @pointer_sprite.bitmap.dispose
    @pointer_sprite.dispose
  end
  
  def center_sprite(sprite)
    sprite.ox = sprite.bitmap.width / 2
    sprite.oy = sprite.bitmap.height / 2
    sprite.x = Graphics.width / 2
    sprite.y = Graphics.height / 2
  end
end"
D0sCJeLs,Untitled,SGov,Python,Saturday 6th of April 2024 01:10:14 PM CDT,"from discord.ui import Button, View

@client.event
async def on_interaction(inter):
    print(inter.message.id, inter.message.author.id)
    if inter.channel_id in CHANNELS and inter.message.author.id in BOTS:
        try:
            await inter.message.delete()
        except Exception as e:
            print(e)


async def send_btn():
    channel = client.get_channel(CHANNELS[0])
    btn = Button(label=""Проверено"", style=discord.ButtonStyle.danger)
    view = View()
    view.add_item(btn)
    try:
        await channel.send(""Hi"", view=view)
    except Exception as e:
        print(e)"
UnG8rvDC,SEDFGSHGS,gadungw71,PHP,Saturday 6th of April 2024 12:54:33 PM CDT,"•	https://github.com/Exhuma-2024-4K-HD1080P-FULL-KOREA
•	https://github.com/Exhuma-FULL-HD-KOREA-SUB
•	https://github.com/Exhuma-NEW-2024-FULL-4K-Korea-HD-1080P
•	https://github.com/2024-FULL-HD-THAISUB
•	https://github.com/Exhuma-2024-HDTHAI-SUB
•	https://www.artstation.com/artwork/JvNgEA
•	https://www.artstation.com/exhuma2024720phdko8/profile
•	https://www.artstation.com/artwork/VJOVg5
•	https://www.artstation.com/exhuma2024full4khd1080p7/profile
•	https://www.artstation.com/artwork/OGQVGv
•	https://www.artstation.com/exhumanew2024hdkr4k2/profile
•	https://www.artstation.com/artwork/490xa4
•	https://www.artstation.com/exhuma2024hdthai1/profile
•	https://www.artstation.com/artwork/WBZVlQ
•	https://www.artstation.com/exhumathaisub20244/profile
•	https://a2place.com/listing/kokomoan-688337
•	https://a2place.com/listing/httpsgithubcomexhuma-full-hd-korea-sub-688369
•	https://a2place.com/listing/ulahkendor-688392
•	https://a2place.com/listing/laejaerkotok-688408
•	https://a2place.com/listing/boslauk-688421
•	https://a2place.com/listing/wanciburit-688428
•	https://a2place.com/listing/httpswwwartstationcomexhuma2024full4khd1080p7profile-688434
•	https://a2place.com/listing/httpswwwartstationcomexhumanew2024hdkr4k2profile-688438
•	https://a2place.com/listing/httpswwwartstationcomartwork490xa4-688442
•	https://a2place.com/listing/httpswwwartstationcomexhumathaisub20244profile-688445
•	https://wandering.flarum.cloud/d/54142-sesdntrdyn
•	https://hiuderyy.hashnode.dev/dsfvsebt
•	https://click4r.com/posts/g/16300750/sdvsbrdntn
•	https://open.firstory.me/user/cluodkc0k0stu011w02bhga55
•	https://open.firstory.me/story/cluodkvd50stx011w6jhy2nqa
•	https://forum.mush.com.br/topic/209317/exhuma-%E0%B8%82-%E0%B8%94%E0%B8%A1-%E0%B8%99%E0%B8%82-%E0%B8%99%E0%B8%A1%E0%B8%B2%E0%B8%88%E0%B8%B2%E0%B8%81%E0%B8%AB%E0%B8%A5-%E0%B8%A1-2024-%E0%B8%9E%E0%B8%B2%E0%B8%81%E0%B8%A2-%E0%B9%84%E0%B8%97%E0%B8%A2
•	https://www.onfeetnation.com/profiles/blogs/lulungukeneh
•	https://demo.hedgedoc.org/s/34YssErko
•	https://rentry.co/dkni6bim
•	https://paste.ee/p/2wvcn
•	https://yamcode.com/sfdvdrbftn
•	https://start.me/w/qr6lYQ
•	https://telegra.ph/DYGHNYGMHUI-04-06
•	https://www.kooapp.com/koo/guest_P68S8O/90e0d4e9-8ee8-4819-8599-8b443bcc8705
•	https://www.kooapp.com/koo/guest_MA1A2G/8b779c27-e959-4b8d-9648-9bdd971f9681
•	https://muckrack.com/rachel-thomr/bio
•	http://aldenfamilydentistry.com/UserProfile/tabid/57/userId/723466/Default.aspx
•	https://www.fitlynk.com/1712425988F670758
"
DLhj9QTv,New-DiscordMessage.ps1,Combreal,PowerShell,Saturday 6th of April 2024 12:52:00 PM CDT,"<#
    .SYNOPSIS
    Automaticaly posts a message every 2h in a discord channel.

    .DESCRIPTION
    Discord saves the Run setting every time it stops, so maximize it before executing this.
    Set your discord executable path bellow.
    The current setup clicks on the first discord server and then click on the channel located at 157;1083 on a 2K monitor.
    Use this to get your cursor position if you need to tweak the positions : 
    [System.Windows.Forms.Cursor]::Position
#>

$cSource = @'
using System;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Windows.Forms;

public class Clicker
{
[StructLayout(LayoutKind.Sequential)]
struct INPUT
{ 
    public int        type; // 0 = INPUT_MOUSE,
                            // 1 = INPUT_KEYBOARD
                            // 2 = INPUT_HARDWARE
    public MOUSEINPUT mi;
}

[StructLayout(LayoutKind.Sequential)]
struct MOUSEINPUT
{
    public int    dx ;
    public int    dy ;
    public int    mouseData ;
    public int    dwFlags;
    public int    time;
    public IntPtr dwExtraInfo;
}

const int MOUSEEVENTF_MOVED      = 0x0001 ;
const int MOUSEEVENTF_LEFTDOWN   = 0x0002 ;
const int MOUSEEVENTF_LEFTUP     = 0x0004 ;
const int MOUSEEVENTF_RIGHTDOWN  = 0x0008 ;
const int MOUSEEVENTF_RIGHTUP    = 0x0010 ;
const int MOUSEEVENTF_MIDDLEDOWN = 0x0020 ;
const int MOUSEEVENTF_MIDDLEUP   = 0x0040 ;
const int MOUSEEVENTF_WHEEL      = 0x0080 ;
const int MOUSEEVENTF_XDOWN      = 0x0100 ;
const int MOUSEEVENTF_XUP        = 0x0200 ;
const int MOUSEEVENTF_ABSOLUTE   = 0x8000 ;

const int screen_length = 0x10000 ;

[System.Runtime.InteropServices.DllImport(""user32.dll"")]
extern static uint SendInput(uint nInputs, INPUT[] pInputs, int cbSize);

public static void LeftClickAtPoint(int x, int y)
{
    //Move the mouse
    INPUT[] input = new INPUT[3];
    input[0].mi.dx = x*(65535/System.Windows.Forms.Screen.PrimaryScreen.Bounds.Width);
    input[0].mi.dy = y*(65535/System.Windows.Forms.Screen.PrimaryScreen.Bounds.Height);
    input[0].mi.dwFlags = MOUSEEVENTF_MOVED | MOUSEEVENTF_ABSOLUTE;
    //Left mouse button down
    input[1].mi.dwFlags = MOUSEEVENTF_LEFTDOWN;
    //Left mouse button up
    input[2].mi.dwFlags = MOUSEEVENTF_LEFTUP;
    SendInput(3, input, Marshal.SizeOf(input[0]));
}

public static void RightClickAtPoint(int x, int y)
{
    //Move the mouse
    INPUT[] input = new INPUT[3];
    input[0].mi.dx = x*(65535/System.Windows.Forms.Screen.PrimaryScreen.Bounds.Width);
    input[0].mi.dy = y*(65535/System.Windows.Forms.Screen.PrimaryScreen.Bounds.Height);
    input[0].mi.dwFlags = MOUSEEVENTF_MOVED | MOUSEEVENTF_ABSOLUTE;
    //Left mouse button down
    input[1].mi.dwFlags = MOUSEEVENTF_RIGHTDOWN;
    //Left mouse button up
    input[2].mi.dwFlags = MOUSEEVENTF_RIGHTUP;
    SendInput(3, input, Marshal.SizeOf(input[0]));
}

}
'@

Add-Type -TypeDefinition $cSource -ReferencedAssemblies System.Windows.Forms,System.Drawing

$taskName = Split-Path -Path $MyInvocation.MyCommand.Definition -Leaf
$taskExists = Get-ScheduledTask | Where-Object {$_.TaskName -like $taskName }
 
If(-Not $taskExists) {
    $trigger = New-ScheduledTaskTrigger -Daily -At 01:00 
    $triggerBis = New-ScheduledTaskTrigger -Once -At 01:00 -RepetitionInterval (New-TimeSpan -Minutes 120) -RepetitionDuration (New-TimeSpan -Hours 22 -Minutes 55)
    $trigger.Repetition = $triggerBis.Repetition
    $action = New-ScheduledTaskAction -Execute ""PowerShell.exe"" -Argument $($MyInvocation.MyCommand.Definition)
    $task = Register-ScheduledTask -TaskName $taskName -Trigger $trigger -Action $action -RunLevel ""Highest"" –Force
}

$wshell = New-Object -ComObject wscript.shell
[bool]$stayInLoop = $true

$discordProcess = Start-Process -PassThru -FilePath ""C:\Users\myuser\AppData\Local\Discord\Update.exe"" -ArgumentList ""--processStart Discord.exe"" -WindowStyle Maximized
Start-Sleep -Seconds 5.5

While($stayInLoop) {
    $discordProcess = Get-Process -Name ""discord"" 2>$null
    Foreach ($discordChild in $discordProcess) {
        If ($wshell.AppActivate($discordChild.Id)) {
            $stayInLoop = $false
            Continue
        }
    }
    Start-Sleep -MilliSeconds 200
}

[Clicker]::LeftClickAtPoint(30,110)
Start-Sleep -Seconds 1
[Clicker]::LeftClickAtPoint(157,1083) 
Start-Sleep -Seconds 1
[System.Windows.Forms.SendKeys]::SendWait(""`""Java or Bedrock`"": **`""Java`""**,"")
Start-Sleep -Seconds 0.4
[System.Windows.Forms.SendKeys]::SendWait(""+{ENTER}"")
Start-Sleep -Seconds 0.4
[System.Windows.Forms.SendKeys]::SendWait(""`""Realm/Server/World`"": **`""Server`""**,"")
Start-Sleep -Seconds 0.4
[System.Windows.Forms.SendKeys]::SendWait(""+{ENTER}"")
Start-Sleep -Seconds 0.4
[System.Windows.Forms.SendKeys]::SendWait(""`""Maximum number of players`"": **9**,"")
Start-Sleep -Seconds 0.4
[System.Windows.Forms.SendKeys]::SendWait(""+{ENTER}"")
Start-Sleep -Seconds 0.4
[System.Windows.Forms.SendKeys]::SendWait(""`""Session Time in hours`"": **2**,"")
Start-Sleep -Seconds 0.4
[System.Windows.Forms.SendKeys]::SendWait(""+{ENTER}"")
Start-Sleep -Seconds 0.4
[System.Windows.Forms.SendKeys]::SendWait(""`""Gametypes`"": ["")
Start-Sleep -Seconds 0.4
[System.Windows.Forms.SendKeys]::SendWait(""+{ENTER}"")
Start-Sleep -Seconds 0.4
[System.Windows.Forms.SendKeys]::SendWait(""    **`""Hermitcraft`""**,"")
Start-Sleep -Seconds 0.4
[System.Windows.Forms.SendKeys]::SendWait(""+{ENTER}"")
Start-Sleep -Seconds 0.4
[System.Windows.Forms.SendKeys]::SendWait(""    **`""Hard`""**,"")
Start-Sleep -Seconds 0.4
[System.Windows.Forms.SendKeys]::SendWait(""+{ENTER}"")
Start-Sleep -Seconds 0.2
[System.Windows.Forms.SendKeys]::SendWait(""    **`""Vanilla`""**]"")
Start-Sleep -Seconds 0.4
[System.Windows.Forms.SendKeys]::SendWait(""+{ENTER}"")
Start-Sleep -Seconds 0.4
[System.Windows.Forms.SendKeys]::SendWait(""`""Language`"": **`""English`""**,"")
Start-Sleep -Seconds 0.4
[System.Windows.Forms.SendKeys]::SendWait(""+{ENTER}"")
Start-Sleep -Seconds 0.2
[System.Windows.Forms.SendKeys]::SendWait(""`""Time Zone`"": **`""Europe`""**,"")
Start-Sleep -Seconds 0.4
[System.Windows.Forms.SendKeys]::SendWait(""+{ENTER}"")
Start-Sleep -Seconds 0.4
[System.Windows.Forms.SendKeys]::SendWait(""`""Community`"": **`""Adult`""**"")
Start-Sleep -Seconds 0.5
[System.Windows.Forms.SendKeys]::SendWait('~')

Start-Sleep -Seconds 1
Stop-Process -Name ""Discord"""
8vfCNaLL,local max,SaNik74,C#,Saturday 6th of April 2024 12:50:50 PM CDT,"internal class Program
{
    static void Main(string[] args)
    {
        Random random = new Random();
        int minValueRandomNumber = 1;
        int maxValueRandomNumber = 10;
        int numberOfNumbers = 30;
        int[] numbersInLine = new int[numberOfNumbers];
 
        for (int i = 0; i < numberOfNumbers; i++)
        {
            numbersInLine[i] = random.Next(minValueRandomNumber, maxValueRandomNumber);
            Console.Write(numbersInLine[i] + "" "");
        }
 
        Console.WriteLine();
 
        if (numbersInLine[0] > numbersInLine[1])
        {
            Console.Write(numbersInLine[0] + "" "");
        }
 
        for (int i = 1; i < numbersInLine.Length - 1; i++)
        {
            if (numbersInLine[i] > numbersInLine[i - 1] && numbersInLine[i] > numbersInLine[i + 1])
            {
                Console.Write(numbersInLine[i] + "" "");
                i++;
            }
        }
 
        if (numbersInLine[numbersInLine.Length - 1] > numbersInLine[numbersInLine.Length - 2])
        {
            Console.Write(numbersInLine[numbersInLine.Length - 1]);
        }
    }
}"
DSvZCrtC,Windows Core Tool Setup,metalx1000,Batch,Saturday 6th of April 2024 12:44:31 PM CDT,"mkdir %temp%\bin
curl ""https://frippery.org/files/busybox/busybox.exe"" -o %temp%\bin\busybox.exe
set PATH=%PATH%;%temp%\bin
 
busybox --install -s -u %temp%\bin
 
wget ""https://github.com/junegunn/fzf/releases/download/0.49.0/fzf-0.49.0-windows_amd64.zip"" -O fzf.zip
unzip fzf.zip -d %temp%\bin
del fzf.zip"
Hispm2sM,Bin Card Base,fredrik_persson_,YAML,Saturday 6th of April 2024 12:40:22 PM CDT,"type: custom:button-card
icon: mdi:trash-can-outline
entity: input_boolean.dummy_door
name: |
  [[[
    return states[""sensor.garbage_collection""].state + ' dagar till soptämning'
  ]]]
tap_action:
  action: toggle
styles:
  grid:
    - grid-template-areas: '""i n""'
    - grid-template-columns: min-content max-content
    - column-gap: 1rem
  card:
    - padding: 1rem
  icon:
    - color: grey
    - width: 4rem
  name:
    - justify-self: start
state:
  - value: 'on'
    name: Take out the trash!
    styles:
      icon:
        - color: red
        - animation: flash 1s infinite alternate
extra_styles: |
  @keyframes flash {
  0% { color: grey; }
  100% { color: red; }
  }
"
tz5qT21Q,140.213.57.15-/sdcard/Premium/useragent_ig.py.py,OBF-XIn,Python,Saturday 6th of April 2024 12:14:03 PM CDT,"# useragent
import random

class Useragent:
    def __init__(self) -> None:
        pass
        
    def useragent_api(self):
        self.nexus = ['Galaxy Nexus', 'Nexus 10', 'Nexus 2', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 5', 'phone/Nexus 5', 'Nexus 5X', 'Nexus 6', 'Nexus 7', 'Nexus 9', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus Player', 'Nexus Player', 'Nexus S', 'Nexus S', 'Nexus S 4G', 'nexus S', 'Nexus S', 'Nexus s', 'Nexus S', 'Nexus S', 'Nexus S', 'Nexus S', 'Nexus S']
        self.micromax = ['Micromax 10', 'Micromax 1J', 'Micromax 86519', 'Micromax A064', 'Micromax_A064', 'Micromax A065', 'Micromax_A065', 'Micromax A066', 'Micromax_A066', 'Micromax A067', 'Micromax_A067', 'MICROMAX_A068', 'MICROMAX A068', 'Micromax A068', 'Micromax A069', 'Micromax_A069', 'Micromax A075', 'Micromax A082', 'Micromax_A082', 'Micromax A089', 'Micromax_A089', 'Micromax A091', 'Micromax A092', 'Micromax_A092', 'Micromax A093', 'Micromax_A093', 'Micromax A095', 'Micromax A096', 'Micromax_A101', 'Micromax A102', 'Micromax_A102', 'Micromax A104', 'Micromax a104', 'Micromax A105', 'Micromax_A105', 'Micromax A106', 'Micromax-A106', 'Micromax A108', 'Micromax_A109', 'Micromax A109', 'Micromax A110', 'Micromax_A110', 'Micromax A110Q', 'Micromax_A110Q', 'Micromax A111', 'Micromax A114', 'Micromax A114R', 'Micromax_A114R', 'Micromax A115', 'Micromax_A115', 'Micromax A116', 'Micromax_A116', 'Micromax A116i', 'Micromax_A116i', 'Micromax A117', 'Micromax_A117', 'Micromax A118R', 'Micromax A119', 'Micromax A120', 'Micromax A121', 'Micromax_A121', 'Micromax A15', 'Micromax A177', 'Micromax A190', 'Micromax_A190', 'Micromax A200', 'Micromax_A200', 'Micromax A21', 'Micromax A210', 'Micromax A24', 'Micromax_A24', 'Micromax A25 Smarty', 'Micromax A250', 'Micromax A255', 'Micromax_A255', 'Micromax A26', 'Micromax_A26', 'Micromax_A27', 'Micromax A27', 'Micromax_A28', 'Micromax A28/GRI40', 'Micromax A28', 'Micromax A290', 'Micromax A30', 'Micromax A300', 'Micromax A310', 'Micromax A311', 'Micromax A315', 'Micromax_A315', 'Micromax_A316', 'Micromax A316', 'Micromax_A34', 'Micromax A34', 'Micromax_A35', 'Micromax A35', 'Micromax A350', 'Micromax_A36', 'Micromax A36', 'Micromax_A37', 'Micromax A37', 'Micromax A37B', 'Micromax_A37B', 'Micromax A40', 'Micromax_A40', 'Micromax A46', 'Micromax_A46', 'Micromax A47', 'MicromaxA47', 'Micromax_A50', 'Micromax A50', 'Micromax A51', 'Micromax A52', 'Micromax A54', 'Micromax A56', 'Micromax_A57', 'Micromax A57', 'Micromax A58', 'Micromax_A58', 'Micromax A59', 'Micromax A60', 'Micromax A61', 'Micromax A62', 'Micromax_A62', 'Micromax A63', 'Micromax_A63', 'Micromax_A65', 'Micromax A65', 'Micromax_A66', 'Micromax A66', 'Micromax A67', 'Micromax A68', 'Micromax A69', 'Micromax_A69', 'Micromax_A70', 'Micromax A700', 'Micromax A71', 'Micromax_A71', 'Micromax A72', 'Micromax_A72', 'Micromax A73', 'Micromax_A74', 'Micromax A74', 'Micromax A75', 'Micromax_A76', 'Micromax A76', 'Micromax A77', 'Micromax A78', 'Micromax A79', 'en_us Micromax A80', 'Micromax A80', 'Micromax A82', 'Micromax_A82', 'Micromax A84', 'Micromax A85', 'Micromax A86', 'Micromax_A86', 'Micromax_A87', 'Micromax A87', 'Micromax A87 . Ninja 4.0', 'Micromax A88', 'Micromax_A88', 'Micromax A89', 'Micromax A90', 'Micromax A90s', 'MIcromax_A90s', 'Micromax A90S', 'Micromax A91', 'Micromax_A91', 'Micromax_A92', 'Micromax A92', 'MicromaxA93', 'Micromax A93', 'Micromax A94', 'Micromax_A94', 'Micromax A96', 'Micromax_A96', 'Micromax A97', 'Micromax_A99', 'Micromax A99', 'Micromax_AD3520', 'Micromax AD3520', 'Micromax AD3550', 'Micromax AD4500', 'Micromax_AD4500', 'Micromax AE90', 'Micromax AO5510', 'Micromax AQ5000', 'Micromax B4A', 'Micromax B5 Pro', 'B5Pro', 'Micromax_Bharat_5_Plus', 'Micromax Q402Plus', 'Micromax Q440', 'Micromax Bharat 5', 'Micromax Q4204', 'Micromax Bharat 5 Plus', 'Micromax Bharat 5 Pro', 'Micromax Bolt 3425', 'Micromax Bolt 2', 'Micromax Q402+', 'Micromax Q306', 'Micromax Q3001', 'Micromax Q301', 'Micromax Q303', 'Micromax Q324', 'Micromax Q326', 'Q327', 'Micromax Q327', 'Micromax Q3301', 'Micromax Q333', 'Micromax_Q333', 'Micromax Q338', 'Micromax Q346', 'Micromax Q354', 'Micromax Q357', 'Micromax Q383', 'Micromax_S302', 'Micromax S302', 'Micromax Q424', 'Micromax Q352', 'Micromax Q4101', 'Micromax C2A', 'Micromax C9', 'Micromax C1', 'Micromax C1A', 'Micromax C2APLS', 'Micromax Q4310', 'Micromax E4815', 'arm_64 Micromax E481', 'Micromax E481', 'Micromax E4816', 'Micromax Q462', 'Micromax Q463', 'Micromax E485', 'Micromax E484', 'Micromax AQ4501', 'Micromax AQ4502', 'A240', 'Micromax A240', 'Micromax Q391', 'Micromax E453', 'Micromax A107', 'Micromax HS2', 'Micromax HS1', 'Micromax_HS3', 'en Micromax_HS3', 'AQ5001', 'Micromax AQ5001', 'AQ5001 Canvas Power', 'Micromax Q392', 'Micromax Q465', 'Micromax Q461', 'Micromax Q350R', 'Micromax Q421', 'Micromax Q417', 'Micromax Q426', 'Micromax Q4260', 'Micromax E311', 'Micromax E352', 'Micromax E455', 'Micromax Q415', 'Micromax Q355', 'Micromax Q469', 'Micromax E451', 'Micromax E451', 'Micromax Q340', 'Micromax Q349', 'Micromax Q345', 'Micromax Q450', 'Micromax Q480', 'arm_64 Micromax Q480', 'Micromax Q380', 'Micromax Q3502', 'Micromax Q351', 'Micromax Q385', 'P70221', 'Micromax P681', 'MicromaxP802', 'Micromax Q427', 'Micromax_Q427', 'Micromax Q413', 'Micromax E313', 'Micromax D2', 'Micromax D200', 'Micromax_D200', 'Micromax D303', 'Micromax D304', 'Micromax_D304', 'Micromax D305', 'Micromax D306', 'Micromax D320', 'Micromax D321', 'Micromax D333', 'Micromax D340', 'Micromax D7517', 'Micromax DM5003', 'Micromax E353', 'Micromax E457', 'Micromax E458', 'Micromax E460', 'Micromax E471', 'Micromax E4817', 'Micromax E482', 'Micromax E483', 'Micromax E5018M', 'Micromax EG111', 'Micromax EG116', 'micromax F', 'micromax F189', 'Micromax F601', 'MicromaxF666', 'Micromax IN', 'Micromax E7533', 'Micromax E6523', 'IN_2b', 'IN_Note1', 'MICROMAX IN1', 'N8216', 'N8301', 'ione note', 'MICROMAX ione note', 'Micromax N4120', 'Micromax N8202', 'Micromax Ninja', 'Micromax Nitro', 'Micromax Note 1+', 'Micromax Note 5', 'Micromax Note3', 'Micromax NX', 'Micromax P001', 'Micromax P250(Funbook)', 'Micromax P255', 'Micromax P256', 'xx Micromax P275', 'Micromax_P275', 'Micromax P275', 'Micromax P280', 'Micromax P290', 'Micromax P310', 'Micromax P350', 'xx Micromax P350', 'Micromax P360', 'Micromax P362', 'Micromax P365', 'Micromax P410', 'Micromax P410i', 'Micromax_P410i', 'Micromax P420', 'Micromax P469', 'Micromax P470', 'MicromaxP480', 'Micromax P500(Funbook)', 'Micromax P560', 'Micromax P580', 'Micromax P580i', 'Micromax P600', 'Micromax P650', 'Micromax P650E', 'Micromax P660', 'Micromax P660', 'Micromax_P666', 'Micromax P666', 'MicromaxP680', 'Micromax P690', 'Micromax P701', 'MicromaxP702', 'Micromax P810', 'en Micromax Q300', 'Micromax_Q300', 'Micromax Q323', 'Micromax_Q323', 'Micromax Q325', 'Micromax_Q325', 'Micromax Q331', 'Micromax_Q331', 'Micromax Q332', 'Micromax_Q332', 'Micromax Q334', 'Micromax Q335', 'Micromax_Q335', 'Micromax Q336', 'Micromax_Q336', 'Micromax Q341', 'Micromax Q343', 'Micromax Q348', 'Micromax_Q353', 'en Micromax_Q353', 'Micromax_Q353P', 'Micromax Q3551', 'Micromax Q3555', 'Micromax Q361', 'Micromax Q370', 'Micromax_Q370', 'Micromax Q371', 'Micromax_Q371', 'Micromax Q375', 'Micromax_Q375', 'Micromax Q379', 'Micromax Q381', 'Micromax Q382', 'Micromax Q386', 'Micromax Q394', 'Micromax_Q394', 'Micromax Q395', 'Micromax Q397', 'Micromax Q398', 'arm Micromax Q398', 'Micromax Q400', 'Micromax_Q400', 'Micromax Q4002', 'en Micromax Q4002', 'Micromax Q401', 'Micromax Q402', 'Micromax Q402 Ultra', 'Micromax Q404', 'Micromax Q411', 'Micromax_Q411', 'Micromax Q412', 'Micromax Q414', 'Micromax Q416', 'Micromax Q419', 'Micromax Q4201', 'Micromax Q422', 'Micromax Q4220', 'Micromax Q423', 'Micromax Q428', 'Micromax_Q428', 'Micromax Q429', '720X1280 Micromax Q4309', 'Micromax Q4312', 'en_US Micromax Q437', 'Micromax Q440Plus', 'Micromax Q454', 'Micromax Q470', 'Micromax Q479', 'Micromax Q491', 'Micromax_Q491', 'Micromax Q502+', 'Micromax Q666', 'Micromax Q67', 'micromax Q68', 'micromax Q78', 'Micromax S300', 'Micromax_S300', 'Micromax S301', 'Micromax_S301', 'Micromax Q4311', 'Micromax Q4601', 'Micromax Q409A', 'Micromax Q409', 'Micromax Q452', 'Micromax Unite 3', 'Micromax Unite 2', 'Micromax Unite 2 A106', 'Micromax Q372', 'Micromax V89', 'Micromax Q4001', 'Micromax Q4202', 'Micromax Q4251', 'arm Micromax Q4251', 'Micromax W5509', 'Micromax X5098', 'Micromax-Xzoom A52', 'YU5530', 'YU5040', 'Micromax YU5900', 'YU5012', 'Micromax Z59']
        self.onpls = ['NE2213', 'NE2217', 'NE2215', 'NE2210', 'NE2210', 'CPH2423', 'CPH2411', 'CPH2417', 'CPH2413', 'CPH2415', 'CPH2449', 'CPH2487', 'ONE A2003', 'ONE A2003', 'ONE A2001', 'ONE A2005', 'ONEPLUS A3003', 'ONEPLUS A3000', 'ONEPLUS A3010', 'ONEPLUS A5000', 'ONEPLUS A5000', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A6003', 'ONEPLUS A6000', 'ONEPLUS A6010', 'ONEPLUS A6013', 'ONEPLUS A6010', 'GM1900', 'GM1901', 'GM1903', 'GM1917', 'GM1913', 'GM1911', 'GM1910', 'GM1915', 'GM1910', 'HD1901', 'HD1903', 'HD1900 Flow', 'HD1905', 'HD1900', 'HD1907', 'HD1911', 'HD1913', 'HD1910', 'GM1925', 'HD1925', 'GM1920', 'IN2013', 'IN2015', 'IN2010', 'IN2010', 'IN2017', 'IN2019', 'IN2023', 'IN2025', 'IN2020', 'OnePlus8Pro', 'KB2005', 'KB2001', 'KB2007', 'KB2003', 'KB2000', 'OnePlus 8T 5G', 'LE2115', 'LE2113', 'LE2111', 'LE2110', 'LE2120', 'LE2125', 'LE2123', 'LE2121', 'LE2127', 'OnePlus9Pro', 'LE2101', 'LE2100', 'MT2111', 'MT2110', 'ONEPLUS A19677', 'ONEPLUS A2345', 'Oneplus A31', 'Oneplus A3331', 'ONEPLUS A35904', 'ONEPLUS A37000', 'ONEPLUS A3EVB', 'ONEPLUS A62322', 'ONEPLUS A64794', 'ONEPLUS A65369', 'ONEPLUS A68333', 'ONEPLUS A70458', 'ONEPLUS A70791', 'ONEPLUS A78637', 'ONEPLUS A80828', 'ONEPLUS A83306', 'ONEPLUS A87046', 'ONEPLUS A90641', 'Oneplus A99831', 'PGKM10', 'PGKM10', 'PHK110', 'PHK110', 'PGP110', 'PGP110', 'PGZ110', 'ONEPLUS KB2023', 'OnePlus Nord', 'Oneplus Nord 2', 'DN2103', 'DN2101', 'CPH2399', 'CPH2401', 'AC2001', 'AC2003', 'IV2201', 'CPH2409', 'CPH2381', 'CPH2465', 'EB2103', 'EB2101', 'EB2101', 'BE2025', 'BE2026', 'BE2029', 'Nord N10 5G', 'BE2028', 'BE2013', 'BE2011', 'BE2012', 'CPH2459', 'GN2200', 'CPH2469', 'DE2118', 'DE2117', 'A0001', 'ONE E1001', 'ONE E1003', 'ONE E1001', 'ONE E1005']
        self.oppo = [""CPH1869"", ""CPH1929"",""CPH2107"", ""CPH2238"", ""CPH2389"",""CPH2401"", ""CPH2407"", ""CPH2413"", ""CPH2415"", ""CPH2417"", ""CPH2419"", ""CPH2455"", ""CPH2459"", ""CPH2461"", ""CPH2471"", ""CPH2473"", ""CPH2477"", ""CPH8893"", ""CPH2321"", ""CPH2341"", ""CPH2373"", ""CPH2083"", ""CPH2071"", ""CPH2077"", ""CPH2185"", ""CPH2179"", ""CPH2269"", ""CPH2421"", ""CPH2349"", ""CPH2271"", ""CPH1923"", ""CPH1925"", ""CPH1837"", ""CPH2015"", ""CPH2073"", ""CPH2081"", ""CPH2029"", ""CPH2031"", ""CPH2137"", ""CPH1605"", ""CPH1803"", ""CPH1853"", ""CPH1805"", ""CPH1809"", ""CPH1851"", ""CPH1931"", ""CPH1959"", ""CPH1933"", ""CPH1935"", ""CPH1943"", ""CPH2061"", ""CPH2069"", ""CPH2127"", ""CPH2131"", ""CPH2139"", ""CPH2135"", ""CPH2239"", ""CPH2195"", ""CPH2273"", ""CPH2325"", ""CPH2309"", ""CPH1701"", ""CPH2387"", ""CPH1909"", ""CPH1920"", ""CPH1912"", ""CPH1901"", ""CPH1903"", ""CPH1905"", ""CPH1717"", ""CPH1801"", ""CPH2067"", ""CPH2099"", ""CPH2161"", ""CPH2219"", ""CPH2197"", ""CPH2263"", ""CPH2375"", ""CPH2339"", ""CPH1715"", ""CPH2385"", ""CPH1729"", ""CPH1827"", ""CPH1938"", ""CPH1937"", ""CPH1939"", ""CPH1941"", ""CPH2001"", ""CPH2021"", ""CPH2059"", ""CPH2121"", ""CPH2123"", ""CPH2203"", ""CPH2333"", ""CPH2365"", ""CPH1913"", ""CPH1911"", ""CPH1915"", ""CPH1969"", ""CPH2209"", ""CPH1987"", ""CPH2095"", ""CPH2119"", ""CPH2285"", ""CPH2213"", ""CPH2223"", ""CPH2363"", ""CPH1609"", ""CPH1613"", ""CPH1723"", ""CPH1727"", ""CPH1725"", ""CPH1819"", ""CPH1821"", ""CPH1825"", ""CPH1881"", ""CPH1823"", ""CPH1871"", ""CPH1875"", ""CPH2023"", ""CPH2005"", ""CPH2025"", ""CPH2207"", ""CPH2173"", ""CPH2307"", ""CPH2305"", ""CPH2337"", ""CPH1955"", ""CPH1707"", ""CPH1719"", ""CPH1721"", ""CPH1835"", ""CPH1831"", ""CPH1833"", ""CPH1879"", ""CPH1893"", ""CPH1877"", ""CPH1607"", ""CPH1611"", ""CPH1917"", ""CPH1919"", ""CPH1907"", ""CPH1989"", ""CPH1945"", ""CPH1951"", ""CPH2043"", ""CPH2035"", ""CPH2037"", ""CPH2036"", ""CPH2009"", ""CPH2013"", ""CPH2113"", ""CPH2091"", ""CPH2125"", ""CPH2109"", ""CPH2089"", ""CPH2065"", ""CPH2159"", ""CPH2145"", ""CPH2205"", ""CPH2201"", ""CPH2199"", ""CPH2217"", ""CPH1921"", ""CPH2211"", ""CPH2235"", ""CPH2251"", ""CPH2249"", ""CPH2247"", ""CPH2237"", ""CPH2371"", ""CPH2293"", ""CPH2353"", ""CPH2343"", ""CPH2359"", ""CPH2357"", ""CPH2457"", ""CPH1983"", ""CPH1979""]
        self.vivo = ['vivo 1002T', 'Vivo 1605', 'vivo 1730', 'vivo 1809', 'vivo_1820', 'vivo 1835', 'vivo 1914', 'vivo 2010', 'vivo 2019', 'vivo 2019', 'vivo 2019', 'vivo 2023', 'vivo 2027', 'vivo 3969', 'VIVO 5', 'Vivo 6', 'Vivo 7 Pro', 'Vivo 8', 'Vivo 93K Prime', 'vivo A5 ', 'vivo a54', 'Vivo A54', 'vivo a57', 'Vivo A87', 'VIVO A94', 'VIVO AIR', 'VIVO C8818', 'vivo E1', 'vivo E3', 'vivo E3', 'vivo E5', 'Vivo EGO', 'V1962BA', 'vivo h5', 'V1824A', 'V1824A', 'V1824BA', 'V2217A', 'V2217A', 'V2218A', 'V2218A', 'V2218A', 'V2243A', 'V1955A', 'I1927', 'I1928', 'V2024A', 'V2025A', 'V2025A', 'V2049A', 'V2049A', 'I2009', 'I2012', 'I2012', 'V2136A', 'V2136A', 'V2141A', 'V2171A', 'I2017', 'V2172A', 'V2172A', 'I2022', 'I2019', 'I2019', 'I2201', 'V1914A', 'V1914A', 'V1981A', 'V2055A', 'V2118A', 'V2157A', 'V2157A', 'V2154A', 'V2196A', 'V2196A', 'V2199A', 'V2231A', 'V2238A', 'V1936AL', 'V1936A', 'V1922A', 'V1922A', 'V1922A ', 'V1916A', 'V2023A', 'V2023A', 'VIVO V2023A', 'V2065A', 'V2061A', 'V2061A', 'V2143A', 'V2106A', 'V2165A', 'V2165A', 'V2180GA', 'V1986A', 'V2012A', 'V2012A', 'V2073A', 'V2073A', 'I2011', 'V2148A', 'I2018', 'V1919A', 'V2131A', 'V2220A', 'I2202', 'I2206', 'I2203', 'I2202', 'I2127', 'I2202', 'I2208', 'I2208', 'I2126', 'I2126', 'I2126', 'V2164KA', 'V2164KA', 'VIVO IV', 'VIVO IV', 'VIVO IV', 'VIVO IV', 'Vivo J5', 'vivo 1805', 'vivo 1805', 'vivo NEX', 'V1923A', 'vivo 1912', 'V1923A', 'vivo 1912', 'vivo 1913', 'V1924A', 'V1924A', 'vivo 1913', 'V1950A', 'V1950A', 'vivo NEX A', 'vivo NEX A', 'vivo 1813', 'V1821A', 'V1821A', 'vivo NEX S', 'vivo NEX S', 'Vivo ONE', 'Vivo ONE', 'PA2170', 'vivo PD1628F_EX', 'vivo PD1709', 'vivo PD1709F_EX', 'vivo PD1709F_EX', 'vivo PD1728', 'vivo PD1728', 'vivo PD1832F_EX', 'vivo PD2046F_EX', 'vivo PD2050F_EX', 'vivo PD2055F_EX', 'vivo PD2059F_EX', 'Vivo S', 'V1831A', 'V1831A', 'VIVO S1', 'Vivo S1 Prime', 'V1832A', 'V1832T', 'V2121A', 'V2121A', 'V2130A', 'V2130A', 'Vivo S11', 'Vivo S11 ', 'vivo S11t', 'vivo S11t', 'vivo S11t', 'vivo S11t', 'vivo S12', 'V2162A', 'Vivo S13', 'V2203A', 'V2207A', 'V2190A', 'V2244A', 'vivo S1Pro', 'Vivo S20 ', 'Vivo S21 ', 'Vivo S31', 'Vivo S4', 'Vivo S40', 'Vivo S41 /MMB439M', 'V1932A', 'vivo S6', 'V1962A', 'vivo S6T', 'V2020CA', 'V2020A', 'Vivo S76', 'V2031EA', 'vivo S7i(t)', 'vivo S7i(t)', 'vivo S7i(t)', 'V2080A', 'vivo S7t', 'vivo_S7t', 'vivo S7t', 'S7t 5G', 'vivo S7w', 'vivo S8', 'vivo S9', 'vivo S9', 'vivo S9', 'V2072A', 'V2048A', 'vivo S9t', 'V2168', 'V2168', 'V2153', 'V2153', 'V2150', 'V2151', 'V2151', 'V2151', 'V2143', 'vivo TD1602_EX', 'vivo U1', 'vivo 1916', 'vivo 1916', 'vivo 1921', 'V1941A', 'V1941A', 'V1928A', 'vivo V1', 'vivo V1', 'vivo V10', 'Vivo V10', 'VIVO V11', 'Vivo V11', 'vivo 1804', 'vivo 1804', 'vivo 1806', 'vivo 1806', 'vivo v11pro', 'vivo 1819', 'vivo 1818', 'vivo 1818', 'vivo 1920', 'vivo 1919', 'vivo 1907', 'vivo 1907', 'vivo 1907_19', 'vivo 1910', 'vivo 1909', 'vivo 1910', 'vivo 1933', 'vivo 1933', 'vivo V1907', 'vivo v19neo', 'vivo V1Max', 'vivo V1Max', 'vivo V2', 'V2040', 'vivo 2018', 'vivo 2018', 'V2022', 'Vivo V20A', 'Vivo V20G', 'V2066', 'V2108', 'V2050', 'V2050', 'V2050', 'V2061', 'V2055', 'Vivo V21S', 'V2130', 'V2132A', 'V2116', 'V2115', 'V2116', 'V2116', 'V2126', 'V2126', 'V2228', 'V2228', 'V2158', 'V2158', 'V2202', 'V2202', 'V2201', 'V2246', 'V2230', 'V2230', 'V2237', 'vivo V3', 'vivo V3', 'vivo V3Max A', 'vivo V3Max L', 'vivo v30', 'vivo v31', 'vivo V3L', 'vivo V3L', 'vivo V3L', 'vivo V3L', 'vivo V3M A', 'vivo V3M A', 'vivo V3MA', 'vivo_V3Max', 'vivo v45', 'vivo 1601', 'vivo V5', 'vivo 1609', 'vivo 1611', 'Vivo V51', 'Vivo V54', 'vivo 1612', 'vivo 1713', 'vivo V5S A', 'vivo 1718', 'vivo 1716', 'vivo Y79A', 'vivo Y79A', 'V2166BA', 'Vivo V8', 'vivo 1723', 'vivo V9 mini', 'vivo 1851', 'VIVO V9Pro', 'vivo 1851', 'vivo 1727', 'Vivo X', 'V2178A', 'V2229A', 'V2170A', 'V2170A', 'vivo Xplay3S', 'vivo Xplay3S', 'vivo Xplay3S', 'vivo Xplay5A', 'vivo Xplay5A', 'vivo Xplay5A', 'vivo Xplay5S', 'vivo Xplay5S', 'vivo Xplay6', 'vivo Xplay6L', 'vivo Xplay6', 'vivo Xplay6', 'vivo X710L', 'vivo X710L', 'vivo X710L', 'vivo X710L', 'vivo X1', 'vivo X1', 'vivo X1', 'vivo X1', 'Vivo X11', 'vivo X1S', 'vivo X1S', 'vivo X1S', 'vivo X1St', 'vivo X1St', 'vivo X1St', 'vivo X1St', 'vivo X1St', 'vivo X1W', 'vivo X1w', 'VIVO X2', 'VIVO X2', 'VIVO_X2', 'vivo X20', 'vivo X20A', 'vivo X20Plus A', 'vivo 1720', 'vivo X20Plus UD', 'vivo X20Plus UD', 'vivo X21', 'vivo X21A', 'vivo X21UD A', 'vivo X21i', 'vivo X21i A', 'vivo X21i', 'vivo X21i A ', 'V1814A', 'V1814T', 'V1814T', 'V1814A', 'V1809A', 'V1809A', 'V1816A', 'V1809T', 'V1816T', 'V1829A', 'V1838A', 'V1838T', 'V1829T', 'V1836A', 'V1836A', 'V1836T', 'vivo X27Pro', 'V1938CT', 'V1938T', 'V1938T', 'vivo X3F', 'vivo X3F', 'vivo X3F', 'vivo X3L', 'vivo X3L', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S W', 'vivo X3S W', 'vivo X3S W', 'vivo X3S W', 'vivo X3t', 'vivo X3t', 'vivo X3t', 'vivo X3t', 'vivo X3V', 'vivo X3V', 'vivo X3V', 'vivo X3V', 'Vivo X40', 'vivo X5L', 'vivo X5', 'vivo X5L', 'vivo X5Pro D', 'vivo X5Pro L', 'vivo X5Pro V', 'vivo X5Pro D', 'vivo X5Pro D', 'V2001A', 'V2001A', 'vivo 2004', 'vivo 2005', 'vivo 2005', 'V1937', 'vivo 1937', 'V1937', 'V1937', 'vivo 2006', 'vivo 2006', 'V2005A', 'V2011A', 'X50 Pro+', 'V1930', 'V1930', 'vivo X510t', 'vivo X510t', 'vivo X510t', 'vivo X510t', 'vivo X510t', 'vivo X520L', 'vivo X5F', 'vivo X5M', 'vivo X5M', 'vivo X5M', 'vivo X5Max ', 'vivo X5Max L', 'vivo X5Max L', 'vivo X5Max S', 'vivo X5Max V', 'vivo X5S L', 'vivo X5S L', 'vivo X5V', 'vivo X5V', 'vivo X5V', 'vivo X6D', 'vivo X6A', 'vivo X6Plus D', 'vivo X6Plus A', 'vivo X6Plus L', 'vivo X6Plus D', 'vivo X6Plus A', 'vivo X6Plus D', 'vivo X6Plus L', 'V2046A', 'V2059A', 'V2046A', 'V2045', 'V2046', 'V2047A', 'V2056A', 'V2085A', 'vivo X6S A', 'vivo X6S A', 'vivo X6S A', 'vivo X6S A', 'vivo X6SPlus D', 'vivo X6SPlus D', 'vivo X6SPlus D', 'vivo X6SPlus D', 'vivo X6SPlus A', 'vivo X7L', 'vivo X7Plus', 'vivo X7Plus', 'V2133A', 'V2104', 'V2104', 'V2105', 'V2134A', 'V2105', 'V2145A', 'V2114', 'V2145A', 'vivo X710F', 'vivo X710F', 'vivo X710F', 'vivo X710F', 'V2144', 'V2183A', 'V2144', 'V2208', 'V2185A', 'V2145', 'V2185A', 'Vivo X83', 'vivo X9', 'vivo X9L', 'vivo X9', 'vivo X9', 'vivo X9Plus', 'vivo X9Plus L', 'V2241A', 'V2242A', 'V2242A', 'V2227A', 'vivo X9i', 'vivo X9i', 'vivo X9i', 'vivo X9s', 'vivo X9s L', 'vivo X9s Plus', 'vivo X9s Plus', 'vivo X9s Plus L', 'vivo X9s Plus', 'VIVO XL', 'vivo Xplay', 'vivo Xshot', 'vivo Xshot', 'vivo Xshot', 'vivo Xshot', 'V2203', 'V2221', 'Vivo y1', 'Vivo Y1', 'V2168A', 'V2168A', 'vivo 1906', 'V2028', 'vivo Y11t', 'vivo Y11t', 'vivo Y11t', 'vivo 1904', 'V2163A', 'V2102', 'V2102', 'vivo 2007', 'vivo 2007', 'Vivo Y12I Pro', 'V2026', 'V2042', 'V2033', 'V2039', 'V2069', 'V2026_21', 'vivo Y13L', 'vivo Y13', 'vivo Y13L', 'vivo Y13L', 'vivo Y13i', 'vivo_Y13i', 'vivo Y13iL', 'vivo Y13iL', 'vivo Y13T', 'vivo Y13T', 'vivo 1901', 'vivo Y15T', 'vivo Y15T', 'V2134', 'V2147', 'V2147', 'V2212', 'V2120', 'V2204', 'V2214', 'V2204', 'vivo 1902', 'vivo 1902_19', 'VIVO 1902', 'vivo Y17T', 'vivo Y17T', 'vivo_Y17T', 'vivo Y17T', 'vivo Y17W', 'vivo Y17W', 'vivo Y17W', 'vivo Y18L', 'vivo Y18L', 'vivo Y18L', 'vivo 1915', 'vivo Y19t', 'vivo Y19t', 'vivo Y19t', 'vivo Y19t', 'Vivo Y1i', 'vivo 2015', 'vivo 2015', 'V2029', 'V2027', 'V2043_21', 'V2101', 'V2070', 'V2054', 'V2052', 'V2037', 'V2032', 'V2038', 'V2038', 'V2129', 'V2129', 'V2111', 'V2149', 'V2140', 'V2140', 'V2152', 'V2152', 'V2110', 'V2110', 'V2131', 'V2135', 'V2207', 'vivo Y22iL', 'vivo Y22iL', 'V2206', 'V2206', 'vivo Y23L', 'vivo Y23L', 'vivo y23l', 'vivo Y23L', 'vivo Y23L', 'vivo Y23L', 'vivo 1613', 'vivo Y27', 'vivo Y27L', 'vivo Y27', 'vivo Y28', 'vivo Y28', 'vivo Y28L', 'vivo Y28L', 'vivo Y29L', 'vivo Y29L', 'vivo Y29L', 'V1901A', 'V1901A', 'V1901A', 'V1901T', 'V1930A', 'vivo 1938', 'V2034A', 'V2036A', 'V2099A', 'V2099A', 'V2160', 'V2160', 'V2160', 'V2066BA', 'V2066A', 'Y30g', 'Vivo Y30S', 'vivo Y31L', 'V2068', 'V2054A', 'V2068A', 'V2068', 'V2158A', 'Vivo Y32', 'V2180A', 'V2057', 'V2109', 'V2166A', 'V2166A', 'V2146', 'V2205', 'V2205', 'vivo Y37A', 'vivo Y37', 'V2044', 'vivo Y3t', 'vivo Y3t', 'vivo Y3t', 'vivo y41', 'vivo Y5 ', 'Vivo Y5', 'vivo 1935', 'VIVO Y50(2021)', 'V2023EA', 'Y50t', 'V2035', 'vivo Y51L', 'vivo Y51A', 'V2030', 'vivo 1707', 'V2031_21', 'vivo Y51t L', 'vivo Y51t L', 'vivo Y51t L', 'V2053', 'V2057A', 'vivo Y53', 'vivo 1606A', 'vivo Y53n', 'V2058', 'V2123A', 'V2069A', 'V2045A', 'V2045A', 'vivo Y55A', 'V2127', 'V2127', 'vivo 1603', 'vivo Y55n', 'vivo 1610', 'V2164A', 'V2164A', 'V1934A', 'V2006', 'vivo Y613', 'vivo Y613', 'vivo Y613F', 'vivo Y622', 'vivo Y622', 'vivo Y622', 'vivo Y622', 'vivo Y622', 'vivo Y623', 'vivo Y623', 'vivo Y627', 'vivo Y627', 'vivo Y627', 'vivo Y627', 'vivo Y628', 'vivo Y628', 'vivo 1719', 'vivo Y66', 'vivo Y66L', 'vivo Y66i A', 'vivo Y67', 'vivo Y67A', 'vivo Y67L', 'vivo Y685', 'vivo 1714', 'vivo Y69A', 'V2002A', 'V2002A', 'vivo Y71A', 'vivo 1724', 'vivo Y71A', 'vivo 1801', 'V2041', 'V2060', 'V2102A', 'V1731CA', 'vivo Y73', 'Vivo Y73 /MMB239M', 'V2059', 'V2031A', 'V2164PA', 'V2117', 'vivo Y75A', 'V2142', 'V2142', 'vivo Y75s', 'vivo Y75s', 'vivo Y75S', 'vivo Y75s', 'V2124', 'V2156A', 'V2219A', 'V2219A', 'V2169', 'V2169', 'V1913A', 'vivo 1808i', 'vivo 1803', 'vivo 1803', 'vivo 1812', 'vivo Y81S', 'V1732A', 'V1732T', 'vivo Y83A', 'vivo 1802', 'vivo Y83A', 'vivo Y83A', 'vivo 1726', 'Vivo Y83I', 'vivo Y85A', 'vivo Y85', 'Vivo Y85i', 'Vivo Y86', 'V1730EA', 'vivo v1730ea', 'vivo 1908', 'vivo 1823', 'vivo 1908_19', 'vivo 1817', 'vivo 1811', 'vivo Y913', 'vivo Y913', 'vivo Y91C', 'vivo 1820', 'vivo 1816', 'vivo Y923', 'vivo Y923', 'vivo Y927', 'vivo Y927', 'vivo Y928', 'vivo Y928', 'vivo Y928', 'vivo 1814', 'V1818A', 'V1818A', 'vivo 1814', 'vivo Y937', 'vivo Y937', 'vivo Y937', 'V1818CT', 'V1818CA', 'vivo 1807', 'vivo Y95', 'V1813A', 'V1813T', 'V1813A', 'vivo Y97', 'V1945A', 'V1801A0', 'vivo Z1', 'vivo 1918', 'vivo 1951', 'vivo 1951', 'VIVO Z1Pro', 'vivo 1918', 'vivo 1918 Flow', 'Vivo Z10', 'vivo Z1i', 'V1730DA', 'V1730DT', 'vivo Z1i', 'vivo_1951', 'vivo 1917', 'V1813BA', 'V1813BT', 'V1813BT', 'Vivo Z34', 'vivo Z3x', 'V1730GA', 'vivo Z3x', 'vivo Z3x', 'V1921A', 'V1911A', 'V1911A', 'V1911A', 'V1990A', 'V1990A', 'V1963A', 'V1963A']
        self.infinix = [""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B""]
        self.opp = random.choice([""OP4F97"", ""OP4BA5L1"", ""OP664D1"", ""OP5F11L1"", ""OP2A92"", ""OP8F17"", ""OP8F31"", ""OP4C9E1"", ""OP5B31"", ""OP4BA6L1"", ""OP2B87"", ""OP6F21"", ""OP6C8E1"", ""OP8F11"", ""OPPOA16"", ""OPPOA15"", ""OPPOA11"", ""OPPOA73"", ""OPPOA37"", ""OPPOA53"", ""OPPOA33"", ""OPPOA93"", ""OPPOA35"", ""OPPOA83"", ""OPPOA57"", ""OPPOA71"", ""OPPOA39"", ""OPPOA3"", ""OPPOA51"", ""OPPOA27"", ""OPPOA79""])
        self.trek = random.choice([""mt6769"", ""mt6768"", ""mt6767"", ""mt6765"", ""mt6763"", ""mt6757"", ""mt6755"", ""mt6753"", ""mt6739"", ""mt6737"", ""mt6735"", ""mt6595"", ""mt6582"", ""mt6572"", ""mt6571"", ""mt6570"", ""mt8563"", ""mt8167"", ""mt8163"", ""mt8135"", ""mt8127"", ""mt8125"", ""mt7623"", ""mt6797"", ""mt6592"", ""mt6590"", ""mt6580"", ""mt6573"", ""mt6575"", ""mt6260"", ""mt6236""])
        self.igversi = (""100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,79.0.0.21.101,78.0.0.11.104,77.0.0.20.113,76.0.0.15.395,75.0.0.23.99,74.0.0.21.99,73.0.0.22.185,72.0.0.21.98,71.0.0.18.102,70.0.0.22.98,69.0.0.30.95,68.0.0.11.99,67.0.0.25.100,66.0.0.11.101,65.0.0.12.86,64.0.0.14.96,63.0.0.17.94,62.0.0.19.93,61.0.0.19.86,60.1.0.17.79,59.0.0.23.76,58.0.0.12.73,57.0.0.9.80,56.0.0.13.78,55.0.0.12.79,54.0.0.14.82,53.0.0.13.84,52.0.0.8.83,51.0.0.20.85,50.1.0.43.119,271.1.0.21.84,131.0.0.23.11,130.0.0.31.12,128.0.0.26.12,126.0.0.25.12,125.0.0.20.12,124.0.0.17.47,123.0.0.21.11,122.0.0.29.23,120.0.0.29.11,119.0.0.33.14,118.0.0.28.12,117.0.0.28.12,115.0.0.26.11,114.0.0.38.12,113.0.0.39.12,112.0.0.29.12,111.1.0.25.15,110.0.0.16.11,109.0.0.18.12,108.0.0.23.11,107.0.0.27.12,106.0.0.24.11,105.0.0.18.11,104.0.0.21.11,103.1.0.15.11,102.0.0.20.11,101.0.0.15.12,100.0.0.17.12,99.0.0.32.182,98.0.0.15.119,97.0.0.32.119"").split(',')
        self.dix = random.choice(self.igversi)
        self.kode = random.choice(['188791643','177770724','192992577','180322810','195435560','196643820','196643821','188791637','192992576','196643799','196643801','196643803','195435546','194383411','197825254','197825260','197825079','171727793','197825112','197825012','197825234','179155086','192992563','197825268','166149669','192992565','198036424','197825223','183982969','199325909','199325886','199325890','199325911','197825118','127049003','197825169','197825216','197825127','200395960','179155096','199325907','200396014','188791669','197825133','170693926','200396005','171727780','201577064','201576758','201577192','201775949','201576944','201775970','143631574','126223520','201775951','167338518','144612598','170693940','201775813','200395971','201775744','201775946','202766609','145652094','202766591','202766602','203083142','179155088','202766608','199325884','180322802','202766603','195435547','165030894','201576967','201775904','194383424','197347903','202766610','185203693','201576898','204019468','187682682','204019456','201775901','204019471','204019454','204019458','202766601','204019452','173238721','204019466','148324036','202766581','158441904','201576903','205280538','205280529','201576813','173238729','141753096','205280531','163022072','201576887','163022088','141753091','148324051','205280528','154400383','205280537','201576818','157405371','205858383','201576811','165031093','187682684','145652090','206670917','185203686','192992561','183982986','206670927','150338061','183982962','127049016','175574603','155374054','205858247','135374896','206670920','169474958','206670926','160497905','161478672','192992578','206670929','131223243','206670916','142841919','187682681','171727795','151414277','206670922','160497915','207505137','165030898','208061741','208061688','208180365','208061674','197825052','147375133','208061744','196643798','208061725','122338247','157536430','208061728','209143963','208727155','209143726','205280539','209143903','209143970','181496409','208061739','209143957','210180522','210180512','209143881','209143712','180322805','210180521','195435561','210370119','210180523','210180493','175574596','210180510','210180480','210180513','210180517','176649504','177770663','210180479','211114117','210908379','206670921','211114134','183982943','211399345','211399342','211399332','201775962','211574187','211574249','210180519','167338559','185203649','124583960','211399337','211399335','197825163','166149717','211399336','212063371','211399329','209143954','210180482','168361634','212214017','209143867','211399341','211399340','212214027','195435510','122338243','139237670','152367502','212676872','212676898','212676875','212676895','212676901','209823384','212676869','196643822','212676878','213367980','213368005','212676886','213558743','209143913','212214039','158441917','174081672','213558750','201775966','188791681','185203705','143631575','161478664','214245350','161478663','212676881','213558770','214245346','138226752','214245221','214245182','214245206','214245218','214245354','214245295','214245199','214245304','214245280','214446313','214245187','214245288','214139002','202766605','214245319','214646783','158441914','215246048','195435544','208061677','215464400','128676146','215464389','215464385','215464390','215464398','182747397','215464393','216233197','201775791','216817344','215464395','216817286','185203642','164094529','216817305','215464401','162439029','215464382','216817280','216817331','214330969','216817299','216817357','217948981','217948980','217948956','217948959','217948968','216817296','217948952','217948982','216817269','219308759','219308726','182747387','219308721','219308754','219308763','176649435','183982982','219909486','127049038','219308730','221134012','221134032','221134009','221134037','194383426','221134029','221134005','221134018','145652093','225283632','165031108','225283625','224652582','139906580','225283628','225283624','226142579','225283634','225283631','226493211','225283623','185203672','156514151','218793478','225283621','227299063','225283627','227299064','227299021','227299027','227544546','227299041','227299060','227299012','228970707','228970705','227299005','228970687','228970683','228970694','228970710','228970689','160497904','195435540','129611419','229783842','230291708','228970681','148324047','230877709','231192211','230877674','230877705','230877678','211399328','209143896','230877713','194383428','230877689','221134002','231457747','208061721','230877671','230877668','232868027','232088496','185203706','232868005','232867964','232868001','232868015','232868031','232867959','232868009','164094526','232867941','234041364','182747399','232868024','232867949','234847239','234847238','234847234','162439040','234847229','234847230','181496427','234847240','232867993','195435558','232867967','232867997','234847227','235871830','221133998','236572344','236572377','153386780','236572337','236572349','236572372','234847226','236572383','237507050','238093993','238093948','238093954','238093999','238093982','239490565','239490555','238093946','238093966','239490563','239490550','239974660','240726416','239490568','240726484','240726452','239490551','239490548','240726426','240726476','240726491','240726471','241043882','241114613','236572331','241267273','240726407','241456456','241267278','241267269','241114619','241456445','241456451','242168941','242168928','242168931','242168939','242168925','240726436','242375239','144722090','242168935','242290370','157405369','242168933','242290355','242703240','242807362','242168923','242168943','242991209','243646252','243646269','242991200','243711120','243646267','243711093','243975802','243646263','243646248','243646255','244167578','128676156','194383413','243975835','244390417','244390338','245196084','245196061','240726392','245196055','243646273','245196082','245196063','245196070','245666450','245466705','245870319','245870301','245870347','245196087','246889064','246889072','246889073','246889074','246889065','247146500','246889063','245870262','247370962','247146481','246889068','246889062','247541884','247541831','247370955','247370942','247720736','247720751','248310216','248310220','248310208','247720744','248399342','248310210','247720747','248310206','248717751','248310212','248310221','248823392','248583561','248310205','248899028','248955251','248955247','249178904','248955244','249507608','249507582','249507588','249507585','248955240','249507607','249507592','249810008','249966137','249507610','249966081','249966100','249507599','249966140','249810004','123790722','250188776','249628096','250188788','250742103','250742113','250742102','250877984','250742105','250742111','251048681','250742107','250742115','251048695','251304696','251304682','251524431','251530710','251304689','251524420','251524409','251524390','250742101','251048673','252055918','252055945','251920416','252055944','252055925','252239038','252055936','252055915','252055948','252390568','252390583','252580134','252740497','252740485','252740490','253120615','253325372','253325384','253325385','253447816','253146263','253120607','253325374','253120598','253325371','253447808','253447809','253325378','253447814','253447807','253447811','253447817','253447813','181496411','253447806','255191971','255013798','255777478','255777471','255777474','255777472','255959637','255777477','255959614','255959635','256099199','256099204','150338064','256099153','256099205','256099156','255983744','256107300','255777470','126223536','256203326','256099190','256099151','256324061','256324047','256203339','256966628','256966589','256966626','256966590','124584015','257456576','256966593','257456590','256966629','256966587','256966592','257456586','257456539','259829115','259829104','259829113','260037038','259829105','259829109','260037030','260149625','259829103','260149621','260465044','259829116','260724710','179155058','261079769','261079761','261079768','261079762','261079771','261276939','157405370','135374885','261079765','261393056','261393062','261079760','181496406','182747360','261504698','261690888','261504706','169474957','262218766','262290715','262290774','262372432','262372425','262372431','262886993','262886995','262372426','262886987','261079764','262886986','262886988','262886990','262372433','262886996','263652962','264009049','264009019','264009030','264009021','264009023','264009052','264009024','261763534','174081651','169474965','232867942','264009013','255959606','264009028','267397344','267397322','267925737','267397343','267925708','267397327','267397321','267925714','267258517','267925705','268773287','267925733','268773233','267925702','268773286','159526770','268773239','268773272','269790795','269285030','269790805','269790803','269790792','268773227','269849047','270426177','270426174','271182277','269790789','271182270','268773290','271182266','271182276','269790798','271182279','271182265','271182267','269790807','271823819','272382110','272382111','272382106','272693584','272382095','272382093','272382098','272382100','272382103','273728833','273371577','273728832','273728798','273907093','273907111','273907108','238093987','273907112','273907103','274774869','274774891','274774908','273907087','274774904','274774875','274774914','275292626','276027938','276028040','276027963','276028037','276028020','276028017','274774862','276028013','249507580','276028029','273907098','277249238','277249248','277249249','276028033','277249250','277249226','275292623','277249214','277249242','277249237','277249240','278625447','278002558','278625420','278625431','278625423','117539687','278625416','278625444','277249213','278625451','279469964','279996068','279996060','279996067','279996058','280194220','279996065','279996063','279996061','279996059','280894196','273728787','271182262','281579032','281579023','276514494','281579021','281579027','281579033','268773274','283072590','281579025','283072571','282619332','283489774','283072587','283072567','281579031','283072580','283072574','284459213','284459224','179155089','256966583','284459214','283072585','284459218','284459223','284459225','285338607','275113919','284459221','284459212','284459215','285855793','285855800','285855803','285855791','285855802','285855804','285855795','286809973','287420974','287421023','287420968','287420979','287421017','287421005','287421019','287421012','277249241','288682406','287421026','288682405','288682397','288682407','261079772','288682398','288682401','288205409','289692198','287420997','289692186'])
        self.dpi_pxl = random.choice(['240dpi; 1760x792', '240dpi; 1920x864', '320dpi; 2400x1080', '400dpi; 3200x1440', '480dpi; 1080x1920', '320dpi; 900x1600', '320dpi; 720x1280', '240dpi; 540x960', '280dpi; 1920x1080', '240dpi; 160x900', '240dpi; 1280x720', '160dpi; 960x540','160dpi; 623x1280'])
        self.dpi = random.choice(['320dpi','640dpi','213dpi','480dpi','420dpi','240dpi','280dpi','160dpi','560dpi','540dpi','272dpi','360dpi','720dpi','270dpi','450dpi','600dpi','279dpi','210dpi','180dpi','510dpi','300dpi','454dpi','314dpi','288dpi','401dpi','153dpi','267dpi','345dpi','493dpi','340dpi','604dpi','465dpi','680dpi','256dpi','290dpi','432dpi','273dpi','120dpi','200dpi','367dpi','419dpi','306dpi','303dpi','411dpi','195dpi','518dpi','230dpi','384dpi','315dpi','293dpi','274dpi','235dpi'])
        self.pxl = random.choice(['720x1280','1440x2560','1440x2768','1280x720','1280x800','1080x1920','540x960','1080x2076','1080x2094','1080x2220','480x800','768x1024','1440x2792','1200x1920','720x1384','1920x1080','720x1369','800x1280','720x1440','1080x2058','600x1024','720x1396','2792x1440','1920x1200','2560x1440','1536x2048','720x1382','1080x2113','1080x2198','1080x2131','720x1423','1080x2069','720x1481','1080x2047','1080x2110','1080x2181','1080x2209','1080x2180','1080x2020','1080x2095','1440x2723','1080x2175','720x1365','1440x2699','1080x2218','2699x1440','1440x2907','1080x2257','720x1370','1080x2042','720x1372','1080x2200','1080x2186','720x1361','1080x2024','1080x2006','720x1402','1440x2831','720x1454','1080x2064','1440x2933','720x1411','720x1450','1440x2730','1080x2046','2094x1080','540x888','1440x2759','1080x2274','1080x2178','1440x2706','720x1356','720x1466','1440x2900','2560x1600','1080x2038','1600x2452','1080x2129','720x1422','720x1381','1080x2183','1080x2285','800x1216','1080x2216','1080x2168','1080x2119','1080x2128','1080x2273','2274x1080','1080x2162','1080x2164','2076x1080','1024x768','1080x2173','1440x2845','1080x2134','720x1379','1440x2838','1080x2139','2131x1080','1440x2744','1080x2192','720x1406','1440x2960','1080x2029','2042x1080','1080x2212','1406x720','1080x2288','2047x1080','1080x2051','720x1398','1280x736','1382x720','720x1353','1080x2050','1080x2028','1080x2256','2711x1440','2175x1080','1080x2281','2560x1492','1440x2923','1200x1845','1080x2189','1080x2002','1440x2711','2110x1080','960x540','1080x2033','2200x1080','720x1452','720x1480','1440x2735','720x1472','1080x2277','1080x2169','2874x1440','1600x2560','1080x2151','2218x1080','1080x2182','720x1468','1440x2898','1080x2011','1080x2201','720x1380','1080x2287','2069x1080','1200x1836','2046x1080','720x1439','2058x1080','2182x1080','720x1399','1080x2282','1440x2721','1080x2324','720x1432','1080x2165','1080x2150','1080x2156','1080x1872','1440x3048','1532x2560','720x1355','720x1390','720x1476','720x1410','1080x2032','720x1437','1440x2682','1440x2921','1080x2270','1080x2160','720x1446','1200x1848','1440x2874','1080x2309','1080x2174','1440x2867','1080x2060','1080x2196','1080x2401','1536x1922','1080x2280','1080x2123','720x1435','1440x2927','1080x2276','720x1448','720x1469','720x1344','1080x2187','540x937','1440x3028','1080x2184','1440x2718','1080x2326','840x1834','1440x2935','1440x2880','1440x2892','2048x2048','1080x2195','1080x2322','720x1419','987x1450','1080x2092','1440x3047','720x1358','1080x2136','720x1357','1080x2093','720x1477','1080x2312','1080x2361','720x1341','720x1507','1080x2172','720x1337','1080x2177','1080x2125','1440x2891','1600x2434','720x1394','1080x2159','720x1387','1080x2166','1080x2154','1080x2147','1440x2747','1080x2105','1440x2911','720x1473','1080x2055','1080x2265','720x1436','1080x2190','1600x2526','720x1373','720x1415','1080x2249','1080x2254','720x1455','1440x3040','1080x2149','720x1385','1440x3036','1080x2111','1440x2904','720x1442','720x1377','1080x2307','1080x2327','1080x2141','1080x2025','720x1430','720x1375','1080x2283','1440x2779','1080x2321','1080x2268','1440x2758','1752x2698','1080x2267','1200x1856','1440x2756','720x1464','1080x2234','1080x2171','1080x2155','720x1463','1080x2122','720x1467','1080x2264','720x1349','1440x2999','720x1458','1080x2015','720x1431','1242x2208','1080x2185','1080x2148','1080x2163','1440x2780','720x1445','1080x2146','1200x1916','720x1502','1200x1928','720x1506','720x1424','720x1465','720x1420','1080x2176','720x1521','1080x2315','1080x2400','720x1471','1080x2157','1600x2458','1080x2067','1080x2191','1080x2271','720x1407','800x1208','1080x2087','1080x2199','578x1028','720x1485','540x879','1080x2179','720x1555','810x1598','720x1378','1200x1897','720x1395','720x1459','900x1600','1080x2275','1440x2733'])
        self.samsung = [""SM-A205F"",""SM-J120H"",""SM-J120F"",""SM-J120M"",""SM-J111M"",""SM-J111F"",""SM-J110H"",""SM-J110G"",""SM-J110F"",""SM-J110M"",""SM-J105H"",""SM-J105Y"",""SM-J105B"",""SM-J106H"",""SM-J106F"",""SM-J106B"",""SM-J106M"",""SM-J200F"",""SM-J200M"",""SM-J200G"",""SM-J200H"",""SM-J200F"",""SM-J200GU"",""SM-J260M"",""SM-J260F"",""SM-J260MU"",""SM-J260F"",""SM-J260G"",""SM-J200BT"",""SM-G532G"",""SM-G532M"",""SM-G532MT""]
        self.cgsm = [""dream2qltesq"", ""beyond2q"", ""broadway"", ""dreamqltevzw"", ""b2q"", ""a7y18lte"", ""a50qlteue"", ""a42xqlte"", ""a7y18lte"", ""a40lte"", ""a6plte"", ""a52xqlteue"", ""a5y20qlteue"", ""a3xelte"", ""a42xqlteue"", ""a3xelte"", ""a41lte"", ""a72xlte"", ""dreamlte"", ""hero2qltevzw"", ""beyond0lte"", ""beyond2"", ""starlte"", ""a5y17lte"", ""a7xelte"", ""a71xqlteue"", ""dream2qlteue"", ""dreamqltespr"", ""a5y17lte"", ""beyond1qlteue"",""herolte"",""zerolte"",""hero2te""]
        self.realme = [""RMX3516"", ""RMX3371"", ""RMX3461"", ""RMX3286"", ""RMX3561"", ""RMX3388"", ""RMX3311"", ""RMX3142"", ""RMX2071"", ""RMX1805"", ""RMX1809"", ""RMX1801"", ""RMX1807"", ""RMX1803"", ""RMX1825"", ""RMX1821"", ""RMX1822"", ""RMX1833"", ""RMX1851"", ""RMX1853"", ""RMX1827"", ""RMX1911"", ""RMX1919"", ""RMX1927"", ""RMX1971"", ""RMX1973"", ""RMX2030"", ""RMX2032"", ""RMX1925"", ""RMX1929"", ""RMX2001"", ""RMX2061"", ""RMX2063"", ""RMX2040"", ""RMX2042"", ""RMX2002"", ""RMX2151"", ""RMX2163"", ""RMX2155"", ""RMX2170"", ""RMX2103"", ""RMX3085"", ""RMX3241"", ""RMX3081"", ""RMX3151"", ""RMX3381"", ""RMX3521"", ""RMX3474"", ""RMX3471"", ""RMX3472"", ""RMX3392"", ""RMX3393"", ""RMX3491"", ""RMX1811"", ""RMX2185"", ""RMX3231"", ""RMX2189"", ""RMX2180"", ""RMX2195"", ""RMX2101"", ""RMX1941"", ""RMX1945"", ""RMX3063"", ""RMX3061"", ""RMX3201"", ""RMX3203"", ""RMX3261"", ""RMX3263"", ""RMX3193"", ""RMX3191"", ""RMX3195"", ""RMX3197"", ""RMX3265"", ""RMX3268"", ""RMX3269"",""RMX2027"", ""RMX2020"", ""RMX2021"", ""RMX3581"", ""RMX3501"", ""RMX3503"", ""RMX3511"", ""RMX3310"", ""RMX3312"", ""RMX3551"", ""RMX3301"", ""RMX3300"", ""RMX2202"", ""RMX3363"", ""RMX3360"", ""RMX3366"", ""RMX3361"", ""RMX3031"", ""RMX3370"", ""RMX3357"", ""RMX3560"", ""RMX3562"", ""RMX3350"", ""RMX2193"", ""RMX2161"", ""RMX2050"", ""RMX2156"", ""RMX3242"", ""RMX3171"", ""RMX3430"", ""RMX3235"", ""RMX3506"", ""RMX2117"", ""RMX2173"", ""RMX3161"", ""RMX2205"", ""RMX3462"", ""RMX3478"", ""RMX3372"", ""RMX3574"", ""RMX1831"", ""RMX3121"", ""RMX3122"", ""RMX3125"", ""RMX3043"", ""RMX3042"", ""RMX3041"", ""RMX3092"", ""RMX3093"", ""RMX3571"", ""RMX3475"", ""RMX2200"", ""RMX2201"", ""RMX2111"", ""RMX2112"", ""RMX1901"", ""RMX1903"", ""RMX1992"", ""RMX1993"", ""RMX1991"", ""RMX1931"", ""RMX2142"", ""RMX2081"", ""RMX2085"", ""RMX2083"", ""RMX2086"", ""RMX2144"", ""RMX2051"", ""RMX2025"", ""RMX2075"", ""RMX2076"", ""RMX2072"", ""RMX2052"", ""RMX2176"", ""RMX2121"", ""RMX3115"", ""RMX1921""]
        self.xiaomi = [""2201116SI"", ""M2012K11AI"", ""22011119TI"", ""21091116UI"", ""M2102K1AC"", ""M2012K11I"", ""22041219I"", ""22041216I"", ""2203121C"", ""2106118C"", ""2201123G"", ""2203129G"", ""2201122G"", ""2201122C"", ""2206122SC"", ""22081212C"", ""2112123AG"", ""2112123AC"", ""2109119BC"", ""M2002J9G"", ""M2007J1SC"", ""M2007J17I"", ""M2102J2SC"", ""M2007J3SY"", ""M2007J17G"", ""M2007J3SG"", ""M2011K2G"", ""M2101K9AG "", ""M2101K9R"", ""2109119DG"", ""M2101K9G"", ""2109119DI"", ""M2012K11G"", ""M2102K1G"", ""21081111RG"", ""2107113SG"", ""21051182G"", ""M2105K81AC"", ""M2105K81C"", ""21061119DG"", ""21121119SG"", ""22011119UY"", ""21061119AG"", ""21061119AL"", ""22041219NY"", ""22041219G"", ""21061119BI"", ""220233L2G"", ""220233L2I"", ""220333QNY"", ""220333QAG"", ""M2004J7AC"", ""M2004J7BC"", ""M2004J19C"", ""M2006C3MII"", ""M2010J19SI"", ""M2006C3LG"", ""M2006C3LVG"", ""M2006C3MG"", ""M2006C3MT"", ""M2006C3MNG"", ""M2006C3LII"", ""M2010J19SL"", ""M2010J19SG"", ""M2010J19SY"", ""M2012K11AC"", ""M2012K10C"", ""M2012K11C"", ""22021211RC""]
        self.asus = ['ME171', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'ME371MG', 'K01N', 'K012', 'K00E', 'K019', 'K00Z', 'K00Z', 'K016', 'K016', 'K00G', 'K00G', 'K50IJ', 'ME172V', 'ME172V', 'ME172V', 'ME172V', 'K00F', 'K01E', 'K00R', 'K017', 'K013', 'K007', 'K01A', 'ASUS MeMO Pad 7', 'K015', 'K011', 'K00L', 'ME302C', 'ME302C', 'ME302C', 'AOSP on Duma', 'ME302KL', 'ME302KL', 'K00U', 'ME173X', 'ME173X', 'ME173X', 'ME173X', 'ASUS K00S', 'ME301T', 'ME301T', 'ME301T', 'PadFone', 'PadFone', 'PadFone 2', 'PadFone 2', 'PadFone T008', 'PadFone T008', 'PadFone T004', 'ASUS_T00E', 'PadFone T00C', 'Padfone t00c', 'PadFone T00C', 'ASUS_T00N', 'ASUS PadFone X', 'ASUS_T00T', 'ASUS_Z01QD', 'ZS600KL', 'ASUS_I001DE', 'ZS660KL', 'ASUS_I001DA', 'ASUS_I001DC', 'ZS660KL', 'ASUS_I003DD', 'ZS661KS', 'ASUS_I003DD', 'ZS661KS', 'ASUS_I005DA', 'ASUS_I005DC', 'ASUS_AI2201_C', 'ASUS_AI2201_D', 'ASUS_AI2201_F', 'ASUS_AI2203_D', 'ASUS_AI2203_C', 'ASUS_AI2203_B', 'ASUS TAB A8', 'Tinker Board', 'Tinker Board 2', 'Tinker Board S', 'TX201LA', 'TX201LA', 'K010', 'K018', 'K018', 'TF300T', 'ASUS Pad TF300T', 'K01B', 'K00C', 'K00C', 'ASUS XPad 10LTE', 'ASUS Z101', 'ASUS Z101 Prime', 'ASUS_Z008D', 'ASUS_Z00AD', 'Z00D', 'ASUS_Z00LD', 'ASUS_Z00ED', 'ASUS_Z00RD', 'ASUS ZenFone 2E', 'ASUS_Z012D', 'ZE520KL', 'ASUS_Z017D', 'ASUS_Z012DA', 'ASUS_Z017DA', 'ASUS_Z012S', 'ASUS_Z012DE', 'ASUS_Z01FD', 'ASUS_Z016S', 'ZS550KL', 'ASUS_Z01BD', 'ASUS_Z01BS', 'ZC551KL', 'ASUS_Z01BDB', 'ASUS_X00DDB', 'ASUS_X008D', 'ASUS_X00DDA', 'ZC553KL', 'ASUS_X008DB', 'ASUS_A001', 'ASUS_Z01HDA', 'ZE553KL', 'ASUS_X00LD', 'ASUS_Z01KDA', 'ASUS_Z01KS', 'ASUS_X00LDB', 'ASUS_T00I', 'ASUS_X00HD', 'ASUS_X00ID', 'ZC554KL', 'ASUS_X015D', 'ASUS_X015D', 'ASUS_Z01GS', 'ASUS_Z01GD', 'ASUS_X00LDA', 'ZD553KL', 'ASUS_Z01MD', 'ASUS_Z01MDA', 'ZD552KL', 'ASUS_X00QD', 'ASUS_X00QD', 'ASUS_T00J', 'ASUS_X00QSA', 'ZE620KL', 'ASUS_T00F', 'ASUS_T00F', 'ASUS_T00K', 'ASUS_X017DA', 'ASUS_T00P', 'ASUS_Z01RD', 'ASUS_Z01RD', 'Zenfone 5Z', 'ZS620KL', 'ASUS_T00G', 'ASUS_I01WD', 'ASUS_T00G', 'ASUS_Z002', 'ZS630KL', 'ASUS_I002D', 'ZS670KS', 'ZS671KS', 'ASUS_I006D', 'ASUS_I004D', 'ASUS_AI2202', 'ASUS_AI2202_B', 'ASUS_A002', 'ASUS_A002A', 'ASUS_Z007', 'ASUS_X00ADA', 'ASUS_X00BD', 'ASUS_X007D', 'ZB500KL', 'ASUS_Z00SD', 'ZB551KL', 'ASUS_L001', 'ZB500KG', 'ASUS_Z00VD', 'ASUS_X013DA', 'ASUS_X013D', 'ASUS_X014D', 'ASUS_X014D', 'ASUS_X013DB', 'G550KL', 'G550KL', 'G553KL', 'ASUS_Z00YD', 'ASUS_A007', 'ASUS_X00RD', 'G552KL', 'ASUS_Z010DD', 'ASUS_Z010DB', 'ASUS_Z010D', 'ASUS_Z010DA', 'ASUS_X00PD', 'ZB555KL', 'ASUS_X01AD', 'ZB633KL', 'ASUS_X018D', 'ASUS_X018DC', 'ASUS_X00TD', 'ASUS_X00TDB', 'ASUS_X00TDE', 'ZB602KL', 'ASUS_X01BDA', 'ASUS_A001D', 'ASUS_X002', 'ASUS_X003', 'ASUS_X003', 'ASUS_X550', 'ASUS_X00GD', 'ASUS_X005', 'ASUS_Z00UDB', 'ASUS_Z00UD', 'ASUS_A006', 'ASUS_A009', 'ASUS_Z00XS', 'P01T_1', 'P021', 'P00L', 'P00C', 'P028', 'P027', 'ASUS_P00I', 'P001', 'P008', 'ASUS_P00J', 'ASUS ZenWatch', 'ASUS ZenWatch 2']
        self.dvc = random.choice([""30/11"",""31/12"",""29/10""])
        return(random.choice([
            f'Instagram {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Asus; {str(random.choice(self.asus))}; {str(random.choice(self.asus))} qcom; in_ID; {self.kode})',
            f'Instagram {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Oneplus; {str(random.choice(self.onpls))}; {str(random.choice(self.onpls))} qcom; in_ID; {self.kode})',
            f'Instagram {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Nexus; {str(random.choice(self.nexus))}; {str(random.choice(self.nexus))} qcom; in_ID; {self.kode})',
            f'Instagram {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Vivo; {str(random.choice(self.vivo))}; {str(random.choice(self.vivo))} qcom; in_ID; {self.kode})',
            f'Instagram {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Oppo; {str(random.choice(self.oppo))}; {str(random.choice(self.oppo))} qcom; in_ID; {self.kode})',
            f'Instagram {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Realme; {str(random.choice(self.realme))}; {str(random.choice(self.realme))} qcom; in_ID; {self.kode})',
            f'Instagram {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Micromax; {str(random.choice(self.micromax))}; {str(random.choice(self.micromax))} qcom; in_ID; {self.kode})',
            f'Instagram {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Infinix; {str(random.choice(self.infinix))}; {str(random.choice(self.infinix))} qcom; in_ID; {self.kode})',
            f'Instagram {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Oppo; {str(random.choice(self.oppo))}; {str(random.choice(self.opp))} qcom; in_ID; {self.kode})',
            f'Instagram {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Samsung; {str(random.choice(self.samsung))}; {str(random.choice(self.samsung))} qcom; in_ID; {self.kode})'
           ])
       )
        
    def useragent_api_threads(self):
        self.nexus = ['Galaxy Nexus', 'Nexus 10', 'Nexus 2', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 5', 'phone/Nexus 5', 'Nexus 5X', 'Nexus 6', 'Nexus 7', 'Nexus 9', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus Player', 'Nexus Player', 'Nexus S', 'Nexus S', 'Nexus S 4G', 'nexus S', 'Nexus S', 'Nexus s', 'Nexus S', 'Nexus S', 'Nexus S', 'Nexus S', 'Nexus S']
        self.micromax = ['Micromax 10', 'Micromax 1J', 'Micromax 86519', 'Micromax A064', 'Micromax_A064', 'Micromax A065', 'Micromax_A065', 'Micromax A066', 'Micromax_A066', 'Micromax A067', 'Micromax_A067', 'MICROMAX_A068', 'MICROMAX A068', 'Micromax A068', 'Micromax A069', 'Micromax_A069', 'Micromax A075', 'Micromax A082', 'Micromax_A082', 'Micromax A089', 'Micromax_A089', 'Micromax A091', 'Micromax A092', 'Micromax_A092', 'Micromax A093', 'Micromax_A093', 'Micromax A095', 'Micromax A096', 'Micromax_A101', 'Micromax A102', 'Micromax_A102', 'Micromax A104', 'Micromax a104', 'Micromax A105', 'Micromax_A105', 'Micromax A106', 'Micromax-A106', 'Micromax A108', 'Micromax_A109', 'Micromax A109', 'Micromax A110', 'Micromax_A110', 'Micromax A110Q', 'Micromax_A110Q', 'Micromax A111', 'Micromax A114', 'Micromax A114R', 'Micromax_A114R', 'Micromax A115', 'Micromax_A115', 'Micromax A116', 'Micromax_A116', 'Micromax A116i', 'Micromax_A116i', 'Micromax A117', 'Micromax_A117', 'Micromax A118R', 'Micromax A119', 'Micromax A120', 'Micromax A121', 'Micromax_A121', 'Micromax A15', 'Micromax A177', 'Micromax A190', 'Micromax_A190', 'Micromax A200', 'Micromax_A200', 'Micromax A21', 'Micromax A210', 'Micromax A24', 'Micromax_A24', 'Micromax A25 Smarty', 'Micromax A250', 'Micromax A255', 'Micromax_A255', 'Micromax A26', 'Micromax_A26', 'Micromax_A27', 'Micromax A27', 'Micromax_A28', 'Micromax A28/GRI40', 'Micromax A28', 'Micromax A290', 'Micromax A30', 'Micromax A300', 'Micromax A310', 'Micromax A311', 'Micromax A315', 'Micromax_A315', 'Micromax_A316', 'Micromax A316', 'Micromax_A34', 'Micromax A34', 'Micromax_A35', 'Micromax A35', 'Micromax A350', 'Micromax_A36', 'Micromax A36', 'Micromax_A37', 'Micromax A37', 'Micromax A37B', 'Micromax_A37B', 'Micromax A40', 'Micromax_A40', 'Micromax A46', 'Micromax_A46', 'Micromax A47', 'MicromaxA47', 'Micromax_A50', 'Micromax A50', 'Micromax A51', 'Micromax A52', 'Micromax A54', 'Micromax A56', 'Micromax_A57', 'Micromax A57', 'Micromax A58', 'Micromax_A58', 'Micromax A59', 'Micromax A60', 'Micromax A61', 'Micromax A62', 'Micromax_A62', 'Micromax A63', 'Micromax_A63', 'Micromax_A65', 'Micromax A65', 'Micromax_A66', 'Micromax A66', 'Micromax A67', 'Micromax A68', 'Micromax A69', 'Micromax_A69', 'Micromax_A70', 'Micromax A700', 'Micromax A71', 'Micromax_A71', 'Micromax A72', 'Micromax_A72', 'Micromax A73', 'Micromax_A74', 'Micromax A74', 'Micromax A75', 'Micromax_A76', 'Micromax A76', 'Micromax A77', 'Micromax A78', 'Micromax A79', 'en_us Micromax A80', 'Micromax A80', 'Micromax A82', 'Micromax_A82', 'Micromax A84', 'Micromax A85', 'Micromax A86', 'Micromax_A86', 'Micromax_A87', 'Micromax A87', 'Micromax A87 . Ninja 4.0', 'Micromax A88', 'Micromax_A88', 'Micromax A89', 'Micromax A90', 'Micromax A90s', 'MIcromax_A90s', 'Micromax A90S', 'Micromax A91', 'Micromax_A91', 'Micromax_A92', 'Micromax A92', 'MicromaxA93', 'Micromax A93', 'Micromax A94', 'Micromax_A94', 'Micromax A96', 'Micromax_A96', 'Micromax A97', 'Micromax_A99', 'Micromax A99', 'Micromax_AD3520', 'Micromax AD3520', 'Micromax AD3550', 'Micromax AD4500', 'Micromax_AD4500', 'Micromax AE90', 'Micromax AO5510', 'Micromax AQ5000', 'Micromax B4A', 'Micromax B5 Pro', 'B5Pro', 'Micromax_Bharat_5_Plus', 'Micromax Q402Plus', 'Micromax Q440', 'Micromax Bharat 5', 'Micromax Q4204', 'Micromax Bharat 5 Plus', 'Micromax Bharat 5 Pro', 'Micromax Bolt 3425', 'Micromax Bolt 2', 'Micromax Q402+', 'Micromax Q306', 'Micromax Q3001', 'Micromax Q301', 'Micromax Q303', 'Micromax Q324', 'Micromax Q326', 'Q327', 'Micromax Q327', 'Micromax Q3301', 'Micromax Q333', 'Micromax_Q333', 'Micromax Q338', 'Micromax Q346', 'Micromax Q354', 'Micromax Q357', 'Micromax Q383', 'Micromax_S302', 'Micromax S302', 'Micromax Q424', 'Micromax Q352', 'Micromax Q4101', 'Micromax C2A', 'Micromax C9', 'Micromax C1', 'Micromax C1A', 'Micromax C2APLS', 'Micromax Q4310', 'Micromax E4815', 'arm_64 Micromax E481', 'Micromax E481', 'Micromax E4816', 'Micromax Q462', 'Micromax Q463', 'Micromax E485', 'Micromax E484', 'Micromax AQ4501', 'Micromax AQ4502', 'A240', 'Micromax A240', 'Micromax Q391', 'Micromax E453', 'Micromax A107', 'Micromax HS2', 'Micromax HS1', 'Micromax_HS3', 'en Micromax_HS3', 'AQ5001', 'Micromax AQ5001', 'AQ5001 Canvas Power', 'Micromax Q392', 'Micromax Q465', 'Micromax Q461', 'Micromax Q350R', 'Micromax Q421', 'Micromax Q417', 'Micromax Q426', 'Micromax Q4260', 'Micromax E311', 'Micromax E352', 'Micromax E455', 'Micromax Q415', 'Micromax Q355', 'Micromax Q469', 'Micromax E451', 'Micromax E451', 'Micromax Q340', 'Micromax Q349', 'Micromax Q345', 'Micromax Q450', 'Micromax Q480', 'arm_64 Micromax Q480', 'Micromax Q380', 'Micromax Q3502', 'Micromax Q351', 'Micromax Q385', 'P70221', 'Micromax P681', 'MicromaxP802', 'Micromax Q427', 'Micromax_Q427', 'Micromax Q413', 'Micromax E313', 'Micromax D2', 'Micromax D200', 'Micromax_D200', 'Micromax D303', 'Micromax D304', 'Micromax_D304', 'Micromax D305', 'Micromax D306', 'Micromax D320', 'Micromax D321', 'Micromax D333', 'Micromax D340', 'Micromax D7517', 'Micromax DM5003', 'Micromax E353', 'Micromax E457', 'Micromax E458', 'Micromax E460', 'Micromax E471', 'Micromax E4817', 'Micromax E482', 'Micromax E483', 'Micromax E5018M', 'Micromax EG111', 'Micromax EG116', 'micromax F', 'micromax F189', 'Micromax F601', 'MicromaxF666', 'Micromax IN', 'Micromax E7533', 'Micromax E6523', 'IN_2b', 'IN_Note1', 'MICROMAX IN1', 'N8216', 'N8301', 'ione note', 'MICROMAX ione note', 'Micromax N4120', 'Micromax N8202', 'Micromax Ninja', 'Micromax Nitro', 'Micromax Note 1+', 'Micromax Note 5', 'Micromax Note3', 'Micromax NX', 'Micromax P001', 'Micromax P250(Funbook)', 'Micromax P255', 'Micromax P256', 'xx Micromax P275', 'Micromax_P275', 'Micromax P275', 'Micromax P280', 'Micromax P290', 'Micromax P310', 'Micromax P350', 'xx Micromax P350', 'Micromax P360', 'Micromax P362', 'Micromax P365', 'Micromax P410', 'Micromax P410i', 'Micromax_P410i', 'Micromax P420', 'Micromax P469', 'Micromax P470', 'MicromaxP480', 'Micromax P500(Funbook)', 'Micromax P560', 'Micromax P580', 'Micromax P580i', 'Micromax P600', 'Micromax P650', 'Micromax P650E', 'Micromax P660', 'Micromax P660', 'Micromax_P666', 'Micromax P666', 'MicromaxP680', 'Micromax P690', 'Micromax P701', 'MicromaxP702', 'Micromax P810', 'en Micromax Q300', 'Micromax_Q300', 'Micromax Q323', 'Micromax_Q323', 'Micromax Q325', 'Micromax_Q325', 'Micromax Q331', 'Micromax_Q331', 'Micromax Q332', 'Micromax_Q332', 'Micromax Q334', 'Micromax Q335', 'Micromax_Q335', 'Micromax Q336', 'Micromax_Q336', 'Micromax Q341', 'Micromax Q343', 'Micromax Q348', 'Micromax_Q353', 'en Micromax_Q353', 'Micromax_Q353P', 'Micromax Q3551', 'Micromax Q3555', 'Micromax Q361', 'Micromax Q370', 'Micromax_Q370', 'Micromax Q371', 'Micromax_Q371', 'Micromax Q375', 'Micromax_Q375', 'Micromax Q379', 'Micromax Q381', 'Micromax Q382', 'Micromax Q386', 'Micromax Q394', 'Micromax_Q394', 'Micromax Q395', 'Micromax Q397', 'Micromax Q398', 'arm Micromax Q398', 'Micromax Q400', 'Micromax_Q400', 'Micromax Q4002', 'en Micromax Q4002', 'Micromax Q401', 'Micromax Q402', 'Micromax Q402 Ultra', 'Micromax Q404', 'Micromax Q411', 'Micromax_Q411', 'Micromax Q412', 'Micromax Q414', 'Micromax Q416', 'Micromax Q419', 'Micromax Q4201', 'Micromax Q422', 'Micromax Q4220', 'Micromax Q423', 'Micromax Q428', 'Micromax_Q428', 'Micromax Q429', '720X1280 Micromax Q4309', 'Micromax Q4312', 'en_US Micromax Q437', 'Micromax Q440Plus', 'Micromax Q454', 'Micromax Q470', 'Micromax Q479', 'Micromax Q491', 'Micromax_Q491', 'Micromax Q502+', 'Micromax Q666', 'Micromax Q67', 'micromax Q68', 'micromax Q78', 'Micromax S300', 'Micromax_S300', 'Micromax S301', 'Micromax_S301', 'Micromax Q4311', 'Micromax Q4601', 'Micromax Q409A', 'Micromax Q409', 'Micromax Q452', 'Micromax Unite 3', 'Micromax Unite 2', 'Micromax Unite 2 A106', 'Micromax Q372', 'Micromax V89', 'Micromax Q4001', 'Micromax Q4202', 'Micromax Q4251', 'arm Micromax Q4251', 'Micromax W5509', 'Micromax X5098', 'Micromax-Xzoom A52', 'YU5530', 'YU5040', 'Micromax YU5900', 'YU5012', 'Micromax Z59']
        self.onpls = ['NE2213', 'NE2217', 'NE2215', 'NE2210', 'NE2210', 'CPH2423', 'CPH2411', 'CPH2417', 'CPH2413', 'CPH2415', 'CPH2449', 'CPH2487', 'ONE A2003', 'ONE A2003', 'ONE A2001', 'ONE A2005', 'ONEPLUS A3003', 'ONEPLUS A3000', 'ONEPLUS A3010', 'ONEPLUS A5000', 'ONEPLUS A5000', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A6003', 'ONEPLUS A6000', 'ONEPLUS A6010', 'ONEPLUS A6013', 'ONEPLUS A6010', 'GM1900', 'GM1901', 'GM1903', 'GM1917', 'GM1913', 'GM1911', 'GM1910', 'GM1915', 'GM1910', 'HD1901', 'HD1903', 'HD1900 Flow', 'HD1905', 'HD1900', 'HD1907', 'HD1911', 'HD1913', 'HD1910', 'GM1925', 'HD1925', 'GM1920', 'IN2013', 'IN2015', 'IN2010', 'IN2010', 'IN2017', 'IN2019', 'IN2023', 'IN2025', 'IN2020', 'OnePlus8Pro', 'KB2005', 'KB2001', 'KB2007', 'KB2003', 'KB2000', 'OnePlus 8T 5G', 'LE2115', 'LE2113', 'LE2111', 'LE2110', 'LE2120', 'LE2125', 'LE2123', 'LE2121', 'LE2127', 'OnePlus9Pro', 'LE2101', 'LE2100', 'MT2111', 'MT2110', 'ONEPLUS A19677', 'ONEPLUS A2345', 'Oneplus A31', 'Oneplus A3331', 'ONEPLUS A35904', 'ONEPLUS A37000', 'ONEPLUS A3EVB', 'ONEPLUS A62322', 'ONEPLUS A64794', 'ONEPLUS A65369', 'ONEPLUS A68333', 'ONEPLUS A70458', 'ONEPLUS A70791', 'ONEPLUS A78637', 'ONEPLUS A80828', 'ONEPLUS A83306', 'ONEPLUS A87046', 'ONEPLUS A90641', 'Oneplus A99831', 'PGKM10', 'PGKM10', 'PHK110', 'PHK110', 'PGP110', 'PGP110', 'PGZ110', 'ONEPLUS KB2023', 'OnePlus Nord', 'Oneplus Nord 2', 'DN2103', 'DN2101', 'CPH2399', 'CPH2401', 'AC2001', 'AC2003', 'IV2201', 'CPH2409', 'CPH2381', 'CPH2465', 'EB2103', 'EB2101', 'EB2101', 'BE2025', 'BE2026', 'BE2029', 'Nord N10 5G', 'BE2028', 'BE2013', 'BE2011', 'BE2012', 'CPH2459', 'GN2200', 'CPH2469', 'DE2118', 'DE2117', 'A0001', 'ONE E1001', 'ONE E1003', 'ONE E1001', 'ONE E1005']
        self.oppo = [""CPH1869"", ""CPH1929"",""CPH2107"", ""CPH2238"", ""CPH2389"",""CPH2401"", ""CPH2407"", ""CPH2413"", ""CPH2415"", ""CPH2417"", ""CPH2419"", ""CPH2455"", ""CPH2459"", ""CPH2461"", ""CPH2471"", ""CPH2473"", ""CPH2477"", ""CPH8893"", ""CPH2321"", ""CPH2341"", ""CPH2373"", ""CPH2083"", ""CPH2071"", ""CPH2077"", ""CPH2185"", ""CPH2179"", ""CPH2269"", ""CPH2421"", ""CPH2349"", ""CPH2271"", ""CPH1923"", ""CPH1925"", ""CPH1837"", ""CPH2015"", ""CPH2073"", ""CPH2081"", ""CPH2029"", ""CPH2031"", ""CPH2137"", ""CPH1605"", ""CPH1803"", ""CPH1853"", ""CPH1805"", ""CPH1809"", ""CPH1851"", ""CPH1931"", ""CPH1959"", ""CPH1933"", ""CPH1935"", ""CPH1943"", ""CPH2061"", ""CPH2069"", ""CPH2127"", ""CPH2131"", ""CPH2139"", ""CPH2135"", ""CPH2239"", ""CPH2195"", ""CPH2273"", ""CPH2325"", ""CPH2309"", ""CPH1701"", ""CPH2387"", ""CPH1909"", ""CPH1920"", ""CPH1912"", ""CPH1901"", ""CPH1903"", ""CPH1905"", ""CPH1717"", ""CPH1801"", ""CPH2067"", ""CPH2099"", ""CPH2161"", ""CPH2219"", ""CPH2197"", ""CPH2263"", ""CPH2375"", ""CPH2339"", ""CPH1715"", ""CPH2385"", ""CPH1729"", ""CPH1827"", ""CPH1938"", ""CPH1937"", ""CPH1939"", ""CPH1941"", ""CPH2001"", ""CPH2021"", ""CPH2059"", ""CPH2121"", ""CPH2123"", ""CPH2203"", ""CPH2333"", ""CPH2365"", ""CPH1913"", ""CPH1911"", ""CPH1915"", ""CPH1969"", ""CPH2209"", ""CPH1987"", ""CPH2095"", ""CPH2119"", ""CPH2285"", ""CPH2213"", ""CPH2223"", ""CPH2363"", ""CPH1609"", ""CPH1613"", ""CPH1723"", ""CPH1727"", ""CPH1725"", ""CPH1819"", ""CPH1821"", ""CPH1825"", ""CPH1881"", ""CPH1823"", ""CPH1871"", ""CPH1875"", ""CPH2023"", ""CPH2005"", ""CPH2025"", ""CPH2207"", ""CPH2173"", ""CPH2307"", ""CPH2305"", ""CPH2337"", ""CPH1955"", ""CPH1707"", ""CPH1719"", ""CPH1721"", ""CPH1835"", ""CPH1831"", ""CPH1833"", ""CPH1879"", ""CPH1893"", ""CPH1877"", ""CPH1607"", ""CPH1611"", ""CPH1917"", ""CPH1919"", ""CPH1907"", ""CPH1989"", ""CPH1945"", ""CPH1951"", ""CPH2043"", ""CPH2035"", ""CPH2037"", ""CPH2036"", ""CPH2009"", ""CPH2013"", ""CPH2113"", ""CPH2091"", ""CPH2125"", ""CPH2109"", ""CPH2089"", ""CPH2065"", ""CPH2159"", ""CPH2145"", ""CPH2205"", ""CPH2201"", ""CPH2199"", ""CPH2217"", ""CPH1921"", ""CPH2211"", ""CPH2235"", ""CPH2251"", ""CPH2249"", ""CPH2247"", ""CPH2237"", ""CPH2371"", ""CPH2293"", ""CPH2353"", ""CPH2343"", ""CPH2359"", ""CPH2357"", ""CPH2457"", ""CPH1983"", ""CPH1979""]
        self.vivo = ['vivo 1002T', 'Vivo 1605', 'vivo 1730', 'vivo 1809', 'vivo_1820', 'vivo 1835', 'vivo 1914', 'vivo 2010', 'vivo 2019', 'vivo 2019', 'vivo 2019', 'vivo 2023', 'vivo 2027', 'vivo 3969', 'VIVO 5', 'Vivo 6', 'Vivo 7 Pro', 'Vivo 8', 'Vivo 93K Prime', 'vivo A5 ', 'vivo a54', 'Vivo A54', 'vivo a57', 'Vivo A87', 'VIVO A94', 'VIVO AIR', 'VIVO C8818', 'vivo E1', 'vivo E3', 'vivo E3', 'vivo E5', 'Vivo EGO', 'V1962BA', 'vivo h5', 'V1824A', 'V1824A', 'V1824BA', 'V2217A', 'V2217A', 'V2218A', 'V2218A', 'V2218A', 'V2243A', 'V1955A', 'I1927', 'I1928', 'V2024A', 'V2025A', 'V2025A', 'V2049A', 'V2049A', 'I2009', 'I2012', 'I2012', 'V2136A', 'V2136A', 'V2141A', 'V2171A', 'I2017', 'V2172A', 'V2172A', 'I2022', 'I2019', 'I2019', 'I2201', 'V1914A', 'V1914A', 'V1981A', 'V2055A', 'V2118A', 'V2157A', 'V2157A', 'V2154A', 'V2196A', 'V2196A', 'V2199A', 'V2231A', 'V2238A', 'V1936AL', 'V1936A', 'V1922A', 'V1922A', 'V1922A ', 'V1916A', 'V2023A', 'V2023A', 'VIVO V2023A', 'V2065A', 'V2061A', 'V2061A', 'V2143A', 'V2106A', 'V2165A', 'V2165A', 'V2180GA', 'V1986A', 'V2012A', 'V2012A', 'V2073A', 'V2073A', 'I2011', 'V2148A', 'I2018', 'V1919A', 'V2131A', 'V2220A', 'I2202', 'I2206', 'I2203', 'I2202', 'I2127', 'I2202', 'I2208', 'I2208', 'I2126', 'I2126', 'I2126', 'V2164KA', 'V2164KA', 'VIVO IV', 'VIVO IV', 'VIVO IV', 'VIVO IV', 'Vivo J5', 'vivo 1805', 'vivo 1805', 'vivo NEX', 'V1923A', 'vivo 1912', 'V1923A', 'vivo 1912', 'vivo 1913', 'V1924A', 'V1924A', 'vivo 1913', 'V1950A', 'V1950A', 'vivo NEX A', 'vivo NEX A', 'vivo 1813', 'V1821A', 'V1821A', 'vivo NEX S', 'vivo NEX S', 'Vivo ONE', 'Vivo ONE', 'PA2170', 'vivo PD1628F_EX', 'vivo PD1709', 'vivo PD1709F_EX', 'vivo PD1709F_EX', 'vivo PD1728', 'vivo PD1728', 'vivo PD1832F_EX', 'vivo PD2046F_EX', 'vivo PD2050F_EX', 'vivo PD2055F_EX', 'vivo PD2059F_EX', 'Vivo S', 'V1831A', 'V1831A', 'VIVO S1', 'Vivo S1 Prime', 'V1832A', 'V1832T', 'V2121A', 'V2121A', 'V2130A', 'V2130A', 'Vivo S11', 'Vivo S11 ', 'vivo S11t', 'vivo S11t', 'vivo S11t', 'vivo S11t', 'vivo S12', 'V2162A', 'Vivo S13', 'V2203A', 'V2207A', 'V2190A', 'V2244A', 'vivo S1Pro', 'Vivo S20 ', 'Vivo S21 ', 'Vivo S31', 'Vivo S4', 'Vivo S40', 'Vivo S41 /MMB439M', 'V1932A', 'vivo S6', 'V1962A', 'vivo S6T', 'V2020CA', 'V2020A', 'Vivo S76', 'V2031EA', 'vivo S7i(t)', 'vivo S7i(t)', 'vivo S7i(t)', 'V2080A', 'vivo S7t', 'vivo_S7t', 'vivo S7t', 'S7t 5G', 'vivo S7w', 'vivo S8', 'vivo S9', 'vivo S9', 'vivo S9', 'V2072A', 'V2048A', 'vivo S9t', 'V2168', 'V2168', 'V2153', 'V2153', 'V2150', 'V2151', 'V2151', 'V2151', 'V2143', 'vivo TD1602_EX', 'vivo U1', 'vivo 1916', 'vivo 1916', 'vivo 1921', 'V1941A', 'V1941A', 'V1928A', 'vivo V1', 'vivo V1', 'vivo V10', 'Vivo V10', 'VIVO V11', 'Vivo V11', 'vivo 1804', 'vivo 1804', 'vivo 1806', 'vivo 1806', 'vivo v11pro', 'vivo 1819', 'vivo 1818', 'vivo 1818', 'vivo 1920', 'vivo 1919', 'vivo 1907', 'vivo 1907', 'vivo 1907_19', 'vivo 1910', 'vivo 1909', 'vivo 1910', 'vivo 1933', 'vivo 1933', 'vivo V1907', 'vivo v19neo', 'vivo V1Max', 'vivo V1Max', 'vivo V2', 'V2040', 'vivo 2018', 'vivo 2018', 'V2022', 'Vivo V20A', 'Vivo V20G', 'V2066', 'V2108', 'V2050', 'V2050', 'V2050', 'V2061', 'V2055', 'Vivo V21S', 'V2130', 'V2132A', 'V2116', 'V2115', 'V2116', 'V2116', 'V2126', 'V2126', 'V2228', 'V2228', 'V2158', 'V2158', 'V2202', 'V2202', 'V2201', 'V2246', 'V2230', 'V2230', 'V2237', 'vivo V3', 'vivo V3', 'vivo V3Max A', 'vivo V3Max L', 'vivo v30', 'vivo v31', 'vivo V3L', 'vivo V3L', 'vivo V3L', 'vivo V3L', 'vivo V3M A', 'vivo V3M A', 'vivo V3MA', 'vivo_V3Max', 'vivo v45', 'vivo 1601', 'vivo V5', 'vivo 1609', 'vivo 1611', 'Vivo V51', 'Vivo V54', 'vivo 1612', 'vivo 1713', 'vivo V5S A', 'vivo 1718', 'vivo 1716', 'vivo Y79A', 'vivo Y79A', 'V2166BA', 'Vivo V8', 'vivo 1723', 'vivo V9 mini', 'vivo 1851', 'VIVO V9Pro', 'vivo 1851', 'vivo 1727', 'Vivo X', 'V2178A', 'V2229A', 'V2170A', 'V2170A', 'vivo Xplay3S', 'vivo Xplay3S', 'vivo Xplay3S', 'vivo Xplay5A', 'vivo Xplay5A', 'vivo Xplay5A', 'vivo Xplay5S', 'vivo Xplay5S', 'vivo Xplay6', 'vivo Xplay6L', 'vivo Xplay6', 'vivo Xplay6', 'vivo X710L', 'vivo X710L', 'vivo X710L', 'vivo X710L', 'vivo X1', 'vivo X1', 'vivo X1', 'vivo X1', 'Vivo X11', 'vivo X1S', 'vivo X1S', 'vivo X1S', 'vivo X1St', 'vivo X1St', 'vivo X1St', 'vivo X1St', 'vivo X1St', 'vivo X1W', 'vivo X1w', 'VIVO X2', 'VIVO X2', 'VIVO_X2', 'vivo X20', 'vivo X20A', 'vivo X20Plus A', 'vivo 1720', 'vivo X20Plus UD', 'vivo X20Plus UD', 'vivo X21', 'vivo X21A', 'vivo X21UD A', 'vivo X21i', 'vivo X21i A', 'vivo X21i', 'vivo X21i A ', 'V1814A', 'V1814T', 'V1814T', 'V1814A', 'V1809A', 'V1809A', 'V1816A', 'V1809T', 'V1816T', 'V1829A', 'V1838A', 'V1838T', 'V1829T', 'V1836A', 'V1836A', 'V1836T', 'vivo X27Pro', 'V1938CT', 'V1938T', 'V1938T', 'vivo X3F', 'vivo X3F', 'vivo X3F', 'vivo X3L', 'vivo X3L', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S W', 'vivo X3S W', 'vivo X3S W', 'vivo X3S W', 'vivo X3t', 'vivo X3t', 'vivo X3t', 'vivo X3t', 'vivo X3V', 'vivo X3V', 'vivo X3V', 'vivo X3V', 'Vivo X40', 'vivo X5L', 'vivo X5', 'vivo X5L', 'vivo X5Pro D', 'vivo X5Pro L', 'vivo X5Pro V', 'vivo X5Pro D', 'vivo X5Pro D', 'V2001A', 'V2001A', 'vivo 2004', 'vivo 2005', 'vivo 2005', 'V1937', 'vivo 1937', 'V1937', 'V1937', 'vivo 2006', 'vivo 2006', 'V2005A', 'V2011A', 'X50 Pro+', 'V1930', 'V1930', 'vivo X510t', 'vivo X510t', 'vivo X510t', 'vivo X510t', 'vivo X510t', 'vivo X520L', 'vivo X5F', 'vivo X5M', 'vivo X5M', 'vivo X5M', 'vivo X5Max ', 'vivo X5Max L', 'vivo X5Max L', 'vivo X5Max S', 'vivo X5Max V', 'vivo X5S L', 'vivo X5S L', 'vivo X5V', 'vivo X5V', 'vivo X5V', 'vivo X6D', 'vivo X6A', 'vivo X6Plus D', 'vivo X6Plus A', 'vivo X6Plus L', 'vivo X6Plus D', 'vivo X6Plus A', 'vivo X6Plus D', 'vivo X6Plus L', 'V2046A', 'V2059A', 'V2046A', 'V2045', 'V2046', 'V2047A', 'V2056A', 'V2085A', 'vivo X6S A', 'vivo X6S A', 'vivo X6S A', 'vivo X6S A', 'vivo X6SPlus D', 'vivo X6SPlus D', 'vivo X6SPlus D', 'vivo X6SPlus D', 'vivo X6SPlus A', 'vivo X7L', 'vivo X7Plus', 'vivo X7Plus', 'V2133A', 'V2104', 'V2104', 'V2105', 'V2134A', 'V2105', 'V2145A', 'V2114', 'V2145A', 'vivo X710F', 'vivo X710F', 'vivo X710F', 'vivo X710F', 'V2144', 'V2183A', 'V2144', 'V2208', 'V2185A', 'V2145', 'V2185A', 'Vivo X83', 'vivo X9', 'vivo X9L', 'vivo X9', 'vivo X9', 'vivo X9Plus', 'vivo X9Plus L', 'V2241A', 'V2242A', 'V2242A', 'V2227A', 'vivo X9i', 'vivo X9i', 'vivo X9i', 'vivo X9s', 'vivo X9s L', 'vivo X9s Plus', 'vivo X9s Plus', 'vivo X9s Plus L', 'vivo X9s Plus', 'VIVO XL', 'vivo Xplay', 'vivo Xshot', 'vivo Xshot', 'vivo Xshot', 'vivo Xshot', 'V2203', 'V2221', 'Vivo y1', 'Vivo Y1', 'V2168A', 'V2168A', 'vivo 1906', 'V2028', 'vivo Y11t', 'vivo Y11t', 'vivo Y11t', 'vivo 1904', 'V2163A', 'V2102', 'V2102', 'vivo 2007', 'vivo 2007', 'Vivo Y12I Pro', 'V2026', 'V2042', 'V2033', 'V2039', 'V2069', 'V2026_21', 'vivo Y13L', 'vivo Y13', 'vivo Y13L', 'vivo Y13L', 'vivo Y13i', 'vivo_Y13i', 'vivo Y13iL', 'vivo Y13iL', 'vivo Y13T', 'vivo Y13T', 'vivo 1901', 'vivo Y15T', 'vivo Y15T', 'V2134', 'V2147', 'V2147', 'V2212', 'V2120', 'V2204', 'V2214', 'V2204', 'vivo 1902', 'vivo 1902_19', 'VIVO 1902', 'vivo Y17T', 'vivo Y17T', 'vivo_Y17T', 'vivo Y17T', 'vivo Y17W', 'vivo Y17W', 'vivo Y17W', 'vivo Y18L', 'vivo Y18L', 'vivo Y18L', 'vivo 1915', 'vivo Y19t', 'vivo Y19t', 'vivo Y19t', 'vivo Y19t', 'Vivo Y1i', 'vivo 2015', 'vivo 2015', 'V2029', 'V2027', 'V2043_21', 'V2101', 'V2070', 'V2054', 'V2052', 'V2037', 'V2032', 'V2038', 'V2038', 'V2129', 'V2129', 'V2111', 'V2149', 'V2140', 'V2140', 'V2152', 'V2152', 'V2110', 'V2110', 'V2131', 'V2135', 'V2207', 'vivo Y22iL', 'vivo Y22iL', 'V2206', 'V2206', 'vivo Y23L', 'vivo Y23L', 'vivo y23l', 'vivo Y23L', 'vivo Y23L', 'vivo Y23L', 'vivo 1613', 'vivo Y27', 'vivo Y27L', 'vivo Y27', 'vivo Y28', 'vivo Y28', 'vivo Y28L', 'vivo Y28L', 'vivo Y29L', 'vivo Y29L', 'vivo Y29L', 'V1901A', 'V1901A', 'V1901A', 'V1901T', 'V1930A', 'vivo 1938', 'V2034A', 'V2036A', 'V2099A', 'V2099A', 'V2160', 'V2160', 'V2160', 'V2066BA', 'V2066A', 'Y30g', 'Vivo Y30S', 'vivo Y31L', 'V2068', 'V2054A', 'V2068A', 'V2068', 'V2158A', 'Vivo Y32', 'V2180A', 'V2057', 'V2109', 'V2166A', 'V2166A', 'V2146', 'V2205', 'V2205', 'vivo Y37A', 'vivo Y37', 'V2044', 'vivo Y3t', 'vivo Y3t', 'vivo Y3t', 'vivo y41', 'vivo Y5 ', 'Vivo Y5', 'vivo 1935', 'VIVO Y50(2021)', 'V2023EA', 'Y50t', 'V2035', 'vivo Y51L', 'vivo Y51A', 'V2030', 'vivo 1707', 'V2031_21', 'vivo Y51t L', 'vivo Y51t L', 'vivo Y51t L', 'V2053', 'V2057A', 'vivo Y53', 'vivo 1606A', 'vivo Y53n', 'V2058', 'V2123A', 'V2069A', 'V2045A', 'V2045A', 'vivo Y55A', 'V2127', 'V2127', 'vivo 1603', 'vivo Y55n', 'vivo 1610', 'V2164A', 'V2164A', 'V1934A', 'V2006', 'vivo Y613', 'vivo Y613', 'vivo Y613F', 'vivo Y622', 'vivo Y622', 'vivo Y622', 'vivo Y622', 'vivo Y622', 'vivo Y623', 'vivo Y623', 'vivo Y627', 'vivo Y627', 'vivo Y627', 'vivo Y627', 'vivo Y628', 'vivo Y628', 'vivo 1719', 'vivo Y66', 'vivo Y66L', 'vivo Y66i A', 'vivo Y67', 'vivo Y67A', 'vivo Y67L', 'vivo Y685', 'vivo 1714', 'vivo Y69A', 'V2002A', 'V2002A', 'vivo Y71A', 'vivo 1724', 'vivo Y71A', 'vivo 1801', 'V2041', 'V2060', 'V2102A', 'V1731CA', 'vivo Y73', 'Vivo Y73 /MMB239M', 'V2059', 'V2031A', 'V2164PA', 'V2117', 'vivo Y75A', 'V2142', 'V2142', 'vivo Y75s', 'vivo Y75s', 'vivo Y75S', 'vivo Y75s', 'V2124', 'V2156A', 'V2219A', 'V2219A', 'V2169', 'V2169', 'V1913A', 'vivo 1808i', 'vivo 1803', 'vivo 1803', 'vivo 1812', 'vivo Y81S', 'V1732A', 'V1732T', 'vivo Y83A', 'vivo 1802', 'vivo Y83A', 'vivo Y83A', 'vivo 1726', 'Vivo Y83I', 'vivo Y85A', 'vivo Y85', 'Vivo Y85i', 'Vivo Y86', 'V1730EA', 'vivo v1730ea', 'vivo 1908', 'vivo 1823', 'vivo 1908_19', 'vivo 1817', 'vivo 1811', 'vivo Y913', 'vivo Y913', 'vivo Y91C', 'vivo 1820', 'vivo 1816', 'vivo Y923', 'vivo Y923', 'vivo Y927', 'vivo Y927', 'vivo Y928', 'vivo Y928', 'vivo Y928', 'vivo 1814', 'V1818A', 'V1818A', 'vivo 1814', 'vivo Y937', 'vivo Y937', 'vivo Y937', 'V1818CT', 'V1818CA', 'vivo 1807', 'vivo Y95', 'V1813A', 'V1813T', 'V1813A', 'vivo Y97', 'V1945A', 'V1801A0', 'vivo Z1', 'vivo 1918', 'vivo 1951', 'vivo 1951', 'VIVO Z1Pro', 'vivo 1918', 'vivo 1918 Flow', 'Vivo Z10', 'vivo Z1i', 'V1730DA', 'V1730DT', 'vivo Z1i', 'vivo_1951', 'vivo 1917', 'V1813BA', 'V1813BT', 'V1813BT', 'Vivo Z34', 'vivo Z3x', 'V1730GA', 'vivo Z3x', 'vivo Z3x', 'V1921A', 'V1911A', 'V1911A', 'V1911A', 'V1990A', 'V1990A', 'V1963A', 'V1963A']
        self.infinix = [""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B""]
        self.opp = random.choice([""OP4F97"", ""OP4BA5L1"", ""OP664D1"", ""OP5F11L1"", ""OP2A92"", ""OP8F17"", ""OP8F31"", ""OP4C9E1"", ""OP5B31"", ""OP4BA6L1"", ""OP2B87"", ""OP6F21"", ""OP6C8E1"", ""OP8F11"", ""OPPOA16"", ""OPPOA15"", ""OPPOA11"", ""OPPOA73"", ""OPPOA37"", ""OPPOA53"", ""OPPOA33"", ""OPPOA93"", ""OPPOA35"", ""OPPOA83"", ""OPPOA57"", ""OPPOA71"", ""OPPOA39"", ""OPPOA3"", ""OPPOA51"", ""OPPOA27"", ""OPPOA79""])
        self.trek = random.choice([""mt6769"", ""mt6768"", ""mt6767"", ""mt6765"", ""mt6763"", ""mt6757"", ""mt6755"", ""mt6753"", ""mt6739"", ""mt6737"", ""mt6735"", ""mt6595"", ""mt6582"", ""mt6572"", ""mt6571"", ""mt6570"", ""mt8563"", ""mt8167"", ""mt8163"", ""mt8135"", ""mt8127"", ""mt8125"", ""mt7623"", ""mt6797"", ""mt6592"", ""mt6590"", ""mt6580"", ""mt6573"", ""mt6575"", ""mt6260"", ""mt6236""])
        self.igversi = (""100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,79.0.0.21.101,78.0.0.11.104,77.0.0.20.113,76.0.0.15.395,75.0.0.23.99,74.0.0.21.99,73.0.0.22.185,72.0.0.21.98,71.0.0.18.102,70.0.0.22.98,69.0.0.30.95,68.0.0.11.99,67.0.0.25.100,66.0.0.11.101,65.0.0.12.86,64.0.0.14.96,63.0.0.17.94,62.0.0.19.93,61.0.0.19.86,60.1.0.17.79,59.0.0.23.76,58.0.0.12.73,57.0.0.9.80,56.0.0.13.78,55.0.0.12.79,54.0.0.14.82,53.0.0.13.84,52.0.0.8.83,51.0.0.20.85,50.1.0.43.119,271.1.0.21.84,131.0.0.23.11,130.0.0.31.12,128.0.0.26.12,126.0.0.25.12,125.0.0.20.12,124.0.0.17.47,123.0.0.21.11,122.0.0.29.23,120.0.0.29.11,119.0.0.33.14,118.0.0.28.12,117.0.0.28.12,115.0.0.26.11,114.0.0.38.12,113.0.0.39.12,112.0.0.29.12,111.1.0.25.15,110.0.0.16.11,109.0.0.18.12,108.0.0.23.11,107.0.0.27.12,106.0.0.24.11,105.0.0.18.11,104.0.0.21.11,103.1.0.15.11,102.0.0.20.11,101.0.0.15.12,100.0.0.17.12,99.0.0.32.182,98.0.0.15.119,97.0.0.32.119"").split(',')
        self.dix = random.choice(self.igversi)
        self.kode = random.choice(['104766893','104766900','102221278','104766888','105842053','93117670','94080607','96794592','102221279','100986894','ru_RU','94080606','103516660','98288242','103516666','103516653','uk_UA','96794590','100986893','102221277','95414344','99640920','99640911','96794591','ru_UA','99640905','100986890','107092313','99640900','93117667','100521966','90841939','98288239','89867440','105842051','de_DE','96794584','105842050','en_US','pt_PT','109556223','107092318','en_GB','108357722','112021130','107092322','119104798','108357720','119104802','112021131','100986892','113249569','107104231','fr_FR','pt_BR','109556226','116756948','113249553','113249561','110937441','118342010','120662545','117539703','119875222','110937448','121451799','115994877','108357718','120662547','107608058','122206624','95414346','107092308','112021128','90841948','119875229','117539698','120662550','en_NZ','123103748','91882538','121451810','91882537','118342006','113948109','122338251','110937453','es_US','118342005','121451793','109556219','119875225','en_CA','109556220','117539695','115211358','91882539','119104795','89867442','94080603','164094539','175574628','185203690','188791648','188791674','187682694','188791643','177770724','192992577','180322810','195435560','196643820','196643821','188791637','192992576','196643799','196643801','196643803','195435546','194383411','197825254','197825260','197825079','171727793','197825112','197825012','197825234','179155086','192992563','197825268','166149669','192992565','198036424','197825223','183982969','199325909','199325886','199325890','199325911','197825118','127049003','197825169','197825216','197825127','200395960','179155096','199325907','200396014','188791669','197825133','170693926','200396005','171727780','201577064','201576758','201577192','201775949','201576944','201775970','143631574','126223520','201775951','167338518','144612598','170693940','201775813','200395971','201775744','201775946','202766609','145652094','202766591','202766602','203083142','179155088','202766608','199325884','180322802','202766603','195435547','165030894','201576967','201775904','194383424','197347903','202766610','185203693','201576898','204019468','187682682','204019456','201775901','204019471','204019454','204019458','202766601','204019452','173238721','204019466','148324036','202766581','158441904','201576903','205280538','205280529','201576813','173238729','141753096','205280531','163022072','201576887','163022088','141753091','148324051','205280528','154400383','205280537','201576818','157405371','205858383','201576811','165031093','187682684','145652090','206670917','185203686','192992561','183982986','206670927','150338061','183982962','127049016','175574603','155374054','205858247','135374896','206670920','169474958','206670926','160497905','161478672','192992578','206670929','131223243','206670916','142841919','187682681','171727795','151414277','206670922','160497915','207505137','165030898','208061741','208061688','208180365','208061674','197825052','147375133','208061744','196643798','208061725','122338247','157536430','208061728','209143963','208727155','209143726','205280539','209143903','209143970','181496409','208061739','209143957','210180522','210180512','209143881','209143712','180322805','210180521','195435561','210370119','210180523','210180493','175574596','210180510','210180480','210180513','210180517','176649504','177770663','210180479','211114117','210908379','206670921','211114134','183982943','211399345','211399342','211399332','201775962','211574187','211574249','210180519','167338559','185203649','124583960','211399337','211399335','197825163','166149717','211399336','212063371','211399329','209143954','210180482','168361634','212214017','209143867','211399341','211399340','212214027','195435510','122338243','139237670','152367502','212676872','212676898','212676875','212676895','212676901','209823384','212676869','196643822','212676878','213367980','213368005','212676886','213558743','209143913','212214039','158441917','174081672','213558750','201775966','188791681','185203705','143631575','161478664','214245350','161478663','212676881','213558770','214245346','138226752','214245221','214245182','214245206','214245218','214245354','214245295','214245199','214245304','214245280','214446313','214245187','214245288','214139002','202766605','214245319','214646783','158441914','215246048','195435544','208061677','215464400','128676146','215464389','215464385','215464390','215464398','182747397','215464393','216233197','201775791','216817344','215464395','216817286','185203642','164094529','216817305','215464401','162439029','215464382','216817280','216817331','214330969','216817299','216817357','217948981','217948980','217948956','217948959','217948968','216817296','217948952','217948982','216817269','219308759','219308726','182747387','219308721','219308754','219308763','176649435','183982982','219909486','127049038','219308730','221134012','221134032','221134009','221134037','194383426','221134029','221134005','221134018','145652093','225283632','165031108','225283625','224652582','139906580','225283628','225283624','226142579','225283634','225283631','226493211','225283623','185203672','156514151','218793478','225283621','227299063','225283627','227299064','227299021','227299027','227544546','227299041','227299060','227299012','228970707','228970705','227299005','228970687','228970683','228970694','228970710','228970689','160497904','195435540','129611419','229783842','230291708','228970681','148324047','230877709','231192211','230877674','230877705','230877678','211399328','209143896','230877713','194383428','230877689','221134002','231457747','208061721','230877671','230877668','232868027','232088496','185203706','232868005','232867964','232868001','232868015','232868031','232867959','232868009','164094526','232867941','234041364','182747399','232868024','232867949','234847239','234847238','234847234','162439040','234847229','234847230','181496427','234847240','232867993','195435558','232867967','232867997','234847227','235871830','221133998','236572344','236572377','153386780','236572337','236572349','236572372','234847226','236572383','237507050','238093993','238093948','238093954','238093999','238093982','239490565','239490555','238093946','238093966','239490563','239490550','239974660','240726416','239490568','240726484','240726452','239490551','239490548','240726426','240726476','240726491','240726471','241043882','241114613','236572331','241267273','240726407','241456456','241267278','241267269','241114619','241456445','241456451','242168941','242168928','242168931','242168939','242168925','240726436','242375239','144722090','242168935','242290370','157405369','242168933','242290355','242703240','242807362','242168923','242168943','242991209','243646252','243646269','242991200','243711120','243646267','243711093','243975802','243646263','243646248','243646255','244167578','128676156','194383413','243975835','244390417','244390338','245196084','245196061','240726392','245196055','243646273','245196082','245196063','245196070','245666450','245466705','245870319','245870301','245870347','245196087','246889064','246889072','246889073','246889074','246889065','247146500','246889063','245870262','247370962','247146481','246889068','246889062','247541884','247541831','247370955','247370942','247720736','247720751','248310216','248310220','248310208','247720744','248399342','248310210','247720747','248310206','248717751','248310212','248310221','248823392','248583561','248310205','248899028','248955251','248955247','249178904','248955244','249507608','249507582','249507588','249507585','248955240','249507607','249507592','249810008','249966137','249507610','249966081','249966100','249507599','249966140','249810004','123790722','250188776','249628096','250188788','250742103','250742113','250742102','250877984','250742105','250742111','251048681','250742107','250742115','251048695','251304696','251304682','251524431','251530710','251304689','251524420','251524409','251524390','250742101','251048673','252055918','252055945','251920416','252055944','252055925','252239038','252055936','252055915','252055948','252390568','252390583','252580134','252740497','252740485','252740490','253120615','253325372','253325384','253325385','253447816','253146263','253120607','253325374','253120598','253325371','253447808','253447809','253325378','253447814','253447807','253447811','253447817','253447813','181496411','253447806','255191971','255013798','255777478','255777471','255777474','255777472','255959637','255777477','255959614','255959635','256099199','256099204','150338064','256099153','256099205','256099156','255983744','256107300','255777470','126223536','256203326','256099190','256099151','256324061','256324047','256203339','256966628','256966589','256966626','256966590','124584015','257456576','256966593','257456590','256966629','256966587','256966592','257456586','257456539','259829115','259829104','259829113','260037038','259829105','259829109','260037030','260149625','259829103','260149621','260465044','259829116','260724710','179155058','261079769','261079761','261079768','261079762','261079771','261276939','157405370','135374885','261079765','261393056','261393062','261079760','181496406','182747360','261504698','261690888','261504706','169474957','262218766','262290715','262290774','262372432','262372425','262372431','262886993','262886995','262372426','262886987','261079764','262886986','262886988','262886990','262372433','262886996','263652962','264009049','264009019','264009030','264009021','264009023','264009052','264009024','261763534','174081651','169474965','232867942','264009013','255959606','264009028','267397344','267397322','267925737','267397343','267925708','267397327','267397321','267925714','267258517','267925705','268773287','267925733','268773233','267925702','268773286','159526770','268773239','268773272','269790795','269285030','269790805','269790803','269790792','268773227','269849047','270426177','270426174','271182277','269790789','271182270','268773290','271182266','271182276','269790798','271182279','271182265','271182267','269790807','271823819','272382110','272382111','272382106','272693584','272382095','272382093','272382098','272382100','272382103','273728833','273371577','273728832','273728798','273907093','273907111','273907108','238093987','273907112','273907103','274774869','274774891','274774908','273907087','274774904','274774875','274774914','275292626','276027938','276028040','276027963','276028037','276028020','276028017','274774862','276028013','249507580','276028029','273907098','277249238','277249248','277249249','276028033','277249250','277249226','275292623','277249214','277249242','277249237','277249240','278625447','278002558','278625420','278625431','278625423','117539687','278625416','278625444','277249213','278625451','279469964','279996068','279996060','279996067','279996058','280194220','279996065','279996063','279996061','279996059','280894196','273728787','271182262','281579032','281579023','276514494','281579021','281579027','281579033','268773274','283072590','281579025','283072571','282619332','283489774','283072587','283072567','281579031','283072580','283072574','284459213','284459224','179155089','256966583','284459214','283072585','284459218','284459223','284459225','285338607','275113919','284459221','284459212','284459215','285855793','285855800','285855803','285855791','285855802','285855804','285855795','286809973','287420974','287421023','287420968','287420979','287421017','287421005','287421019','287421012','277249241','288682406','287421026','288682405','288682397','288682407','261079772','288682398','288682401','288205409','289692198','287420997','289692186'])
        self.dpi_pxl = random.choice(['240dpi; 1760x792', '240dpi; 1920x864', '320dpi; 2400x1080', '400dpi; 3200x1440', '480dpi; 1080x1920', '320dpi; 900x1600', '320dpi; 720x1280', '240dpi; 540x960', '280dpi; 1920x1080', '240dpi; 160x900', '240dpi; 1280x720', '160dpi; 960x540','160dpi; 623x1280'])
        self.dpi = random.choice(['320dpi','640dpi','213dpi','480dpi','420dpi','240dpi','280dpi','160dpi','560dpi','540dpi','272dpi','360dpi','720dpi','270dpi','450dpi','600dpi','279dpi','210dpi','180dpi','510dpi','300dpi','454dpi','314dpi','288dpi','401dpi','153dpi','267dpi','345dpi','493dpi','340dpi','604dpi','465dpi','680dpi','256dpi','290dpi','432dpi','273dpi','120dpi','200dpi','367dpi','419dpi','306dpi','303dpi','411dpi','195dpi','518dpi','230dpi','384dpi','315dpi','293dpi','274dpi','235dpi'])
        self.pxl = random.choice(['720x1280','1440x2560','1440x2768','1280x720','1280x800','1080x1920','540x960','1080x2076','1080x2094','1080x2220','480x800','768x1024','1440x2792','1200x1920','720x1384','1920x1080','720x1369','800x1280','720x1440','1080x2058','600x1024','720x1396','2792x1440','1920x1200','2560x1440','1536x2048','720x1382','1080x2113','1080x2198','1080x2131','720x1423','1080x2069','720x1481','1080x2047','1080x2110','1080x2181','1080x2209','1080x2180','1080x2020','1080x2095','1440x2723','1080x2175','720x1365','1440x2699','1080x2218','2699x1440','1440x2907','1080x2257','720x1370','1080x2042','720x1372','1080x2200','1080x2186','720x1361','1080x2024','1080x2006','720x1402','1440x2831','720x1454','1080x2064','1440x2933','720x1411','720x1450','1440x2730','1080x2046','2094x1080','540x888','1440x2759','1080x2274','1080x2178','1440x2706','720x1356','720x1466','1440x2900','2560x1600','1080x2038','1600x2452','1080x2129','720x1422','720x1381','1080x2183','1080x2285','800x1216','1080x2216','1080x2168','1080x2119','1080x2128','1080x2273','2274x1080','1080x2162','1080x2164','2076x1080','1024x768','1080x2173','1440x2845','1080x2134','720x1379','1440x2838','1080x2139','2131x1080','1440x2744','1080x2192','720x1406','1440x2960','1080x2029','2042x1080','1080x2212','1406x720','1080x2288','2047x1080','1080x2051','720x1398','1280x736','1382x720','720x1353','1080x2050','1080x2028','1080x2256','2711x1440','2175x1080','1080x2281','2560x1492','1440x2923','1200x1845','1080x2189','1080x2002','1440x2711','2110x1080','960x540','1080x2033','2200x1080','720x1452','720x1480','1440x2735','720x1472','1080x2277','1080x2169','2874x1440','1600x2560','1080x2151','2218x1080','1080x2182','720x1468','1440x2898','1080x2011','1080x2201','720x1380','1080x2287','2069x1080','1200x1836','2046x1080','720x1439','2058x1080','2182x1080','720x1399','1080x2282','1440x2721','1080x2324','720x1432','1080x2165','1080x2150','1080x2156','1080x1872','1440x3048','1532x2560','720x1355','720x1390','720x1476','720x1410','1080x2032','720x1437','1440x2682','1440x2921','1080x2270','1080x2160','720x1446','1200x1848','1440x2874','1080x2309','1080x2174','1440x2867','1080x2060','1080x2196','1080x2401','1536x1922','1080x2280','1080x2123','720x1435','1440x2927','1080x2276','720x1448','720x1469','720x1344','1080x2187','540x937','1440x3028','1080x2184','1440x2718','1080x2326','840x1834','1440x2935','1440x2880','1440x2892','2048x2048','1080x2195','1080x2322','720x1419','987x1450','1080x2092','1440x3047','720x1358','1080x2136','720x1357','1080x2093','720x1477','1080x2312','1080x2361','720x1341','720x1507','1080x2172','720x1337','1080x2177','1080x2125','1440x2891','1600x2434','720x1394','1080x2159','720x1387','1080x2166','1080x2154','1080x2147','1440x2747','1080x2105','1440x2911','720x1473','1080x2055','1080x2265','720x1436','1080x2190','1600x2526','720x1373','720x1415','1080x2249','1080x2254','720x1455','1440x3040','1080x2149','720x1385','1440x3036','1080x2111','1440x2904','720x1442','720x1377','1080x2307','1080x2327','1080x2141','1080x2025','720x1430','720x1375','1080x2283','1440x2779','1080x2321','1080x2268','1440x2758','1752x2698','1080x2267','1200x1856','1440x2756','720x1464','1080x2234','1080x2171','1080x2155','720x1463','1080x2122','720x1467','1080x2264','720x1349','1440x2999','720x1458','1080x2015','720x1431','1242x2208','1080x2185','1080x2148','1080x2163','1440x2780','720x1445','1080x2146','1200x1916','720x1502','1200x1928','720x1506','720x1424','720x1465','720x1420','1080x2176','720x1521','1080x2315','1080x2400','720x1471','1080x2157','1600x2458','1080x2067','1080x2191','1080x2271','720x1407','800x1208','1080x2087','1080x2199','578x1028','720x1485','540x879','1080x2179','720x1555','810x1598','720x1378','1200x1897','720x1395','720x1459','900x1600','1080x2275','1440x2733'])
        self.samsung = [""SM-A205F"",""SM-J120H"",""SM-J120F"",""SM-J120M"",""SM-J111M"",""SM-J111F"",""SM-J110H"",""SM-J110G"",""SM-J110F"",""SM-J110M"",""SM-J105H"",""SM-J105Y"",""SM-J105B"",""SM-J106H"",""SM-J106F"",""SM-J106B"",""SM-J106M"",""SM-J200F"",""SM-J200M"",""SM-J200G"",""SM-J200H"",""SM-J200F"",""SM-J200GU"",""SM-J260M"",""SM-J260F"",""SM-J260MU"",""SM-J260F"",""SM-J260G"",""SM-J200BT"",""SM-G532G"",""SM-G532M"",""SM-G532MT""]
        self.cgsm = [""dream2qltesq"", ""beyond2q"", ""broadway"", ""dreamqltevzw"", ""b2q"", ""a7y18lte"", ""a50qlteue"", ""a42xqlte"", ""a7y18lte"", ""a40lte"", ""a6plte"", ""a52xqlteue"", ""a5y20qlteue"", ""a3xelte"", ""a42xqlteue"", ""a3xelte"", ""a41lte"", ""a72xlte"", ""dreamlte"", ""hero2qltevzw"", ""beyond0lte"", ""beyond2"", ""starlte"", ""a5y17lte"", ""a7xelte"", ""a71xqlteue"", ""dream2qlteue"", ""dreamqltespr"", ""a5y17lte"", ""beyond1qlteue"",""herolte"",""zerolte"",""hero2te""]
        self.realme = [""RMX3516"", ""RMX3371"", ""RMX3461"", ""RMX3286"", ""RMX3561"", ""RMX3388"", ""RMX3311"", ""RMX3142"", ""RMX2071"", ""RMX1805"", ""RMX1809"", ""RMX1801"", ""RMX1807"", ""RMX1803"", ""RMX1825"", ""RMX1821"", ""RMX1822"", ""RMX1833"", ""RMX1851"", ""RMX1853"", ""RMX1827"", ""RMX1911"", ""RMX1919"", ""RMX1927"", ""RMX1971"", ""RMX1973"", ""RMX2030"", ""RMX2032"", ""RMX1925"", ""RMX1929"", ""RMX2001"", ""RMX2061"", ""RMX2063"", ""RMX2040"", ""RMX2042"", ""RMX2002"", ""RMX2151"", ""RMX2163"", ""RMX2155"", ""RMX2170"", ""RMX2103"", ""RMX3085"", ""RMX3241"", ""RMX3081"", ""RMX3151"", ""RMX3381"", ""RMX3521"", ""RMX3474"", ""RMX3471"", ""RMX3472"", ""RMX3392"", ""RMX3393"", ""RMX3491"", ""RMX1811"", ""RMX2185"", ""RMX3231"", ""RMX2189"", ""RMX2180"", ""RMX2195"", ""RMX2101"", ""RMX1941"", ""RMX1945"", ""RMX3063"", ""RMX3061"", ""RMX3201"", ""RMX3203"", ""RMX3261"", ""RMX3263"", ""RMX3193"", ""RMX3191"", ""RMX3195"", ""RMX3197"", ""RMX3265"", ""RMX3268"", ""RMX3269"",""RMX2027"", ""RMX2020"", ""RMX2021"", ""RMX3581"", ""RMX3501"", ""RMX3503"", ""RMX3511"", ""RMX3310"", ""RMX3312"", ""RMX3551"", ""RMX3301"", ""RMX3300"", ""RMX2202"", ""RMX3363"", ""RMX3360"", ""RMX3366"", ""RMX3361"", ""RMX3031"", ""RMX3370"", ""RMX3357"", ""RMX3560"", ""RMX3562"", ""RMX3350"", ""RMX2193"", ""RMX2161"", ""RMX2050"", ""RMX2156"", ""RMX3242"", ""RMX3171"", ""RMX3430"", ""RMX3235"", ""RMX3506"", ""RMX2117"", ""RMX2173"", ""RMX3161"", ""RMX2205"", ""RMX3462"", ""RMX3478"", ""RMX3372"", ""RMX3574"", ""RMX1831"", ""RMX3121"", ""RMX3122"", ""RMX3125"", ""RMX3043"", ""RMX3042"", ""RMX3041"", ""RMX3092"", ""RMX3093"", ""RMX3571"", ""RMX3475"", ""RMX2200"", ""RMX2201"", ""RMX2111"", ""RMX2112"", ""RMX1901"", ""RMX1903"", ""RMX1992"", ""RMX1993"", ""RMX1991"", ""RMX1931"", ""RMX2142"", ""RMX2081"", ""RMX2085"", ""RMX2083"", ""RMX2086"", ""RMX2144"", ""RMX2051"", ""RMX2025"", ""RMX2075"", ""RMX2076"", ""RMX2072"", ""RMX2052"", ""RMX2176"", ""RMX2121"", ""RMX3115"", ""RMX1921""]
        self.xiaomi = [""2201116SI"", ""M2012K11AI"", ""22011119TI"", ""21091116UI"", ""M2102K1AC"", ""M2012K11I"", ""22041219I"", ""22041216I"", ""2203121C"", ""2106118C"", ""2201123G"", ""2203129G"", ""2201122G"", ""2201122C"", ""2206122SC"", ""22081212C"", ""2112123AG"", ""2112123AC"", ""2109119BC"", ""M2002J9G"", ""M2007J1SC"", ""M2007J17I"", ""M2102J2SC"", ""M2007J3SY"", ""M2007J17G"", ""M2007J3SG"", ""M2011K2G"", ""M2101K9AG "", ""M2101K9R"", ""2109119DG"", ""M2101K9G"", ""2109119DI"", ""M2012K11G"", ""M2102K1G"", ""21081111RG"", ""2107113SG"", ""21051182G"", ""M2105K81AC"", ""M2105K81C"", ""21061119DG"", ""21121119SG"", ""22011119UY"", ""21061119AG"", ""21061119AL"", ""22041219NY"", ""22041219G"", ""21061119BI"", ""220233L2G"", ""220233L2I"", ""220333QNY"", ""220333QAG"", ""M2004J7AC"", ""M2004J7BC"", ""M2004J19C"", ""M2006C3MII"", ""M2010J19SI"", ""M2006C3LG"", ""M2006C3LVG"", ""M2006C3MG"", ""M2006C3MT"", ""M2006C3MNG"", ""M2006C3LII"", ""M2010J19SL"", ""M2010J19SG"", ""M2010J19SY"", ""M2012K11AC"", ""M2012K10C"", ""M2012K11C"", ""22021211RC""]
        self.asus = ['ME171', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'ME371MG', 'K01N', 'K012', 'K00E', 'K019', 'K00Z', 'K00Z', 'K016', 'K016', 'K00G', 'K00G', 'K50IJ', 'ME172V', 'ME172V', 'ME172V', 'ME172V', 'K00F', 'K01E', 'K00R', 'K017', 'K013', 'K007', 'K01A', 'ASUS MeMO Pad 7', 'K015', 'K011', 'K00L', 'ME302C', 'ME302C', 'ME302C', 'AOSP on Duma', 'ME302KL', 'ME302KL', 'K00U', 'ME173X', 'ME173X', 'ME173X', 'ME173X', 'ASUS K00S', 'ME301T', 'ME301T', 'ME301T', 'PadFone', 'PadFone', 'PadFone 2', 'PadFone 2', 'PadFone T008', 'PadFone T008', 'PadFone T004', 'ASUS_T00E', 'PadFone T00C', 'Padfone t00c', 'PadFone T00C', 'ASUS_T00N', 'ASUS PadFone X', 'ASUS_T00T', 'ASUS_Z01QD', 'ZS600KL', 'ASUS_I001DE', 'ZS660KL', 'ASUS_I001DA', 'ASUS_I001DC', 'ZS660KL', 'ASUS_I003DD', 'ZS661KS', 'ASUS_I003DD', 'ZS661KS', 'ASUS_I005DA', 'ASUS_I005DC', 'ASUS_AI2201_C', 'ASUS_AI2201_D', 'ASUS_AI2201_F', 'ASUS_AI2203_D', 'ASUS_AI2203_C', 'ASUS_AI2203_B', 'ASUS TAB A8', 'Tinker Board', 'Tinker Board 2', 'Tinker Board S', 'TX201LA', 'TX201LA', 'K010', 'K018', 'K018', 'TF300T', 'ASUS Pad TF300T', 'K01B', 'K00C', 'K00C', 'ASUS XPad 10LTE', 'ASUS Z101', 'ASUS Z101 Prime', 'ASUS_Z008D', 'ASUS_Z00AD', 'Z00D', 'ASUS_Z00LD', 'ASUS_Z00ED', 'ASUS_Z00RD', 'ASUS ZenFone 2E', 'ASUS_Z012D', 'ZE520KL', 'ASUS_Z017D', 'ASUS_Z012DA', 'ASUS_Z017DA', 'ASUS_Z012S', 'ASUS_Z012DE', 'ASUS_Z01FD', 'ASUS_Z016S', 'ZS550KL', 'ASUS_Z01BD', 'ASUS_Z01BS', 'ZC551KL', 'ASUS_Z01BDB', 'ASUS_X00DDB', 'ASUS_X008D', 'ASUS_X00DDA', 'ZC553KL', 'ASUS_X008DB', 'ASUS_A001', 'ASUS_Z01HDA', 'ZE553KL', 'ASUS_X00LD', 'ASUS_Z01KDA', 'ASUS_Z01KS', 'ASUS_X00LDB', 'ASUS_T00I', 'ASUS_X00HD', 'ASUS_X00ID', 'ZC554KL', 'ASUS_X015D', 'ASUS_X015D', 'ASUS_Z01GS', 'ASUS_Z01GD', 'ASUS_X00LDA', 'ZD553KL', 'ASUS_Z01MD', 'ASUS_Z01MDA', 'ZD552KL', 'ASUS_X00QD', 'ASUS_X00QD', 'ASUS_T00J', 'ASUS_X00QSA', 'ZE620KL', 'ASUS_T00F', 'ASUS_T00F', 'ASUS_T00K', 'ASUS_X017DA', 'ASUS_T00P', 'ASUS_Z01RD', 'ASUS_Z01RD', 'Zenfone 5Z', 'ZS620KL', 'ASUS_T00G', 'ASUS_I01WD', 'ASUS_T00G', 'ASUS_Z002', 'ZS630KL', 'ASUS_I002D', 'ZS670KS', 'ZS671KS', 'ASUS_I006D', 'ASUS_I004D', 'ASUS_AI2202', 'ASUS_AI2202_B', 'ASUS_A002', 'ASUS_A002A', 'ASUS_Z007', 'ASUS_X00ADA', 'ASUS_X00BD', 'ASUS_X007D', 'ZB500KL', 'ASUS_Z00SD', 'ZB551KL', 'ASUS_L001', 'ZB500KG', 'ASUS_Z00VD', 'ASUS_X013DA', 'ASUS_X013D', 'ASUS_X014D', 'ASUS_X014D', 'ASUS_X013DB', 'G550KL', 'G550KL', 'G553KL', 'ASUS_Z00YD', 'ASUS_A007', 'ASUS_X00RD', 'G552KL', 'ASUS_Z010DD', 'ASUS_Z010DB', 'ASUS_Z010D', 'ASUS_Z010DA', 'ASUS_X00PD', 'ZB555KL', 'ASUS_X01AD', 'ZB633KL', 'ASUS_X018D', 'ASUS_X018DC', 'ASUS_X00TD', 'ASUS_X00TDB', 'ASUS_X00TDE', 'ZB602KL', 'ASUS_X01BDA', 'ASUS_A001D', 'ASUS_X002', 'ASUS_X003', 'ASUS_X003', 'ASUS_X550', 'ASUS_X00GD', 'ASUS_X005', 'ASUS_Z00UDB', 'ASUS_Z00UD', 'ASUS_A006', 'ASUS_A009', 'ASUS_Z00XS', 'P01T_1', 'P021', 'P00L', 'P00C', 'P028', 'P027', 'ASUS_P00I', 'P001', 'P008', 'ASUS_P00J', 'ASUS ZenWatch', 'ASUS ZenWatch 2']
        self.dvc = random.choice([""30/11"",""31/12"",""29/10""])
        return(random.choice([
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Asus; {str(random.choice(self.asus))}; {str(random.choice(self.asus))} qcom; in_ID; {self.kode})',
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Oneplus; {str(random.choice(self.onpls))}; {str(random.choice(self.onpls))} qcom; in_ID; {self.kode})',
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Nexus; {str(random.choice(self.nexus))}; {str(random.choice(self.nexus))} qcom; in_ID; {self.kode})',
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Vivo; {str(random.choice(self.vivo))}; {str(random.choice(self.vivo))} qcom; in_ID; {self.kode})',
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Oppo; {str(random.choice(self.oppo))}; {str(random.choice(self.oppo))} qcom; in_ID; {self.kode})',
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Realme; {str(random.choice(self.realme))}; {str(random.choice(self.realme))} qcom; in_ID; {self.kode})',
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Micromax; {str(random.choice(self.micromax))}; {str(random.choice(self.micromax))} qcom; in_ID; {self.kode})',
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Infinix; {str(random.choice(self.infinix))}; {str(random.choice(self.infinix))} qcom; in_ID; {self.kode})',
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Oppo; {str(random.choice(self.oppo))}; {str(random.choice(self.opp))} qcom; in_ID; {self.kode})',
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Samsung; {str(random.choice(self.samsung))}; {str(random.choice(self.samsung))} qcom; in_ID; {self.kode})'
           ])
       )
        
    def useragent_ajax(self):
        self.chrome = str(random.randint(114,124))
        return(random.choice([
            f'Mozilla/5.0 (Windows NT 10.0; {str(random.randint(1,9))}; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(random.randint(1,9))}.{str(random.randint(1,9))}.{str(random.randint(1,9))}.{str(random.randint(1,9))} Safari/537.36',
            f'Mozilla/5.0 (Windows NT 10.0; {str(random.randint(1,9))}; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(random.randint(1,9))}.{str(random.randint(1,9))}.{str(random.randint(1,9))}.{str(random.randint(1,9))} Safari/537.36',
            ])
        )
         

"
5mm5Ab3S,Desafio code for all,Jheimys,JavaScript,Saturday 6th of April 2024 11:25:42 AM CDT,"// import all the hacking tools and list of accounts purchased on the black market
var terminal = require('terminal');                                             // login, logout, printFile, getPassword, ....
var toolkit = require('hacker-toolkit');                                        
var accounts = require('blackmarket-accounts');

//console.log(accounts); 
//console.log(terminal)
//console.log(toolkit)

//-------  Variáveis --------------------
var rootPassword  = ''



//---------- Percorre o array e decodifica as senhas -----
var accountsList = accounts.map(item => (
    {
        ""username"": item.split(':')[0], 
        'password':  toolkit.rot13(item.split(':')[1])
        
    })
)

//console.log(accountsList)


//-------- Function brute-force --------------------

// bruteForce function needs a terminal to hack, a list of accounts,
// and a function to invoke when the it finds a valid account
// the function will be invoked with a valid username and password as arguments

// the list of accounts should be an array of account objects
// an account object is composed by a username and password property e.g:
// var account = {
//    username: 'mr',
//    password: 'robot'
// };

toolkit.bruteForce(terminal, accountsList, function(username, password) {
    //console.log('Oi eu sou a função que encontra o valor válido?',username, password);
    
    // login as a user
    var success = terminal.login(username, password);
    //console.log('SUCCESS ===>', success)
    
    if(success){
        // toolkit's spy function will watch the selected user
        // every time the user makes an action,
        // the third argument will be invoked with a description of the action as the argument
        // maybe the root user will do something useful for you to take advantage..
        
        toolkit.spy(terminal, 'root', (action) => {
            console.log('ACTION ==>', action)
            
            if(action.includes('password')){
                rootPassword = action.split(' ')[action.split(' ').length - 1]
                //console.log(rootPassword)
                
                terminal.logout()
                terminal.login('root', rootPassword)
                terminal.printFile('/var/logs/ecorp.txt');
            }
        });
    }
    
    
    
});
"
GXfm4FEh,Untitled,Mysoft,C++,Saturday 6th of April 2024 10:12:27 AM CDT,"//-static-libgcc -static-libstdc++ -lgcc

#include ""EncryptedString.h""
#include <windows.h>

#define ForEachModule(_Do) \
  _Do( 9,ntdll   ) \
  _Do(12,kernel32) \
  _Do( 9,gdi32   ) \
  _Do(10,user32  )
  
#define ForEachImport(_Do) \
  _Do(14,kernel32,GetProcAddress) \
  _Do(10,user32  ,LoadImageA    ) \
  _Do(10,gdi32   ,GetObjectA    )

#include ""LoadImports.h""

int main() {
    
	LoadImports();
		
	getchar();
	return 0;
}
"
8XPwLZdX,l2j Dressme Rusacis 3.6,tensador125,Java,Saturday 6th of April 2024 10:08:22 AM CDT,"### Eclipse Workspace Patch 1.0
#P aCis_gameserver
diff --git sql/characters_dressme_data.sql sql/characters_dressme_data.sql
new file mode 100644
index 0000000..24245a1
--- /dev/null
+++ sql/characters_dressme_data.sql
@@ -0,0 +1,40 @@
+/*
+Navicat MySQL Data Transfer
+
+Source Server         : localhost
+Source Server Version : 50505
+Source Host           : localhost:3306
+Source Database       : l2jlotus
+
+Target Server Type    : MYSQL
+Target Server Version : 50505
+File Encoding         : 65001
+
+Date: 2024-03-30 00:33:19
+*/
+
+SET FOREIGN_KEY_CHECKS=0;
+
+-- ----------------------------
+-- Table structure for `characters_dressme_data`
+-- ----------------------------
+DROP TABLE IF EXISTS `characters_dressme_data`;
+CREATE TABLE `characters_dressme_data` (
+  `obj_Id` decimal(11,0) NOT NULL DEFAULT 0,
+  `armor_skins` varchar(255) DEFAULT NULL,
+  `armor_skin_option` int(10) DEFAULT 0,
+  `weapon_skins` varchar(255) DEFAULT NULL,
+  `weapon_skin_option` int(10) DEFAULT 0,
+  `hair_skins` varchar(255) DEFAULT NULL,
+  `hair_skin_option` int(10) DEFAULT 0,
+  `face_skins` varchar(255) DEFAULT NULL,
+  `face_skin_option` int(10) DEFAULT 0,
+  PRIMARY KEY (`obj_Id`)
+) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
+
diff --git data/xml/dressme.xml data/xml/dressme.xml
new file mode 100644
index 0000000..9482715
--- /dev/null
+++ data/xml/dressme.xml
@@ -0,0 +1,18 @@
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<list>
+	<skin type=""armor""> <!-- Armors -->
+		<type id=""1"" name=""Draconic Armor"" chestId=""6379"" legsId=""0"" glovesId=""0"" feetId=""0"" priceId=""57"" priceCount=""100""/>
+		<type id=""2"" name=""Blue Wolf Leather Armor"" chestId=""2391"" legsId=""0"" glovesId=""0"" feetId=""0"" priceId=""57"" priceCount=""100""/>
+	</skin>
+	<skin type=""weapon""> <!-- Weapons -->
+		<type id=""1"" name=""Draconic Bow"" weaponId=""7575"" priceId=""57"" priceCount=""100""/>
+		<type id=""2"" name=""Arcana Mace"" weaponId=""6608""  priceId=""57"" priceCount=""100""/>
+		<type id=""3"" name=""Keshanberk*Keshanberk"" weaponId=""5704"" priceId=""57"" priceCount=""100""/>
+	</skin>
+	<skin type=""hair""> <!-- Hairs -->
+		<type id=""1"" name=""Cat Ear"" hairId=""6843"" priceId=""57"" priceCount=""100""/>
+	</skin>
+	<skin type=""face""> <!-- Faces -->
+		<type id=""1"" name=""Party Mask"" faceId=""5808"" priceId=""57"" priceCount=""100""/>
+	</skin>
+</list>
\ No newline at end of file
diff --git config/players.properties config/players.properties
index 023dcea..09e43a4 100644
--- config/players.properties
+++ config/players.properties
@@ -239,4 +239,17 @@
 
 
 # Give a Roulette item reward
-CustomItemRoulette = 57
\ No newline at end of file
+CustomItemRoulette = 57
+
+# DressMe system.
+AllowDressMeSystem = True
+
+# DressMe Command
+DressMeCommand = dressme
+
+# Only for premium account
+AllowDressMeForPremiumOnly = False
+
+
+# Players won't see the skins in Olympiad
+AllowDressMeInOly = True
\ No newline at end of file
diff --git java/Base/Skin/DressMeData.java java/Base/Skin/DressMeData.java
new file mode 100644
index 0000000..cdf1053
--- /dev/null
+++ java/Base/Skin/DressMeData.java
@@ -0,0 +1,216 @@
+package Base.Skin;
+
+import java.util.HashMap;
+import java.util.Map;
+import java.util.logging.Logger;
+
+import net.sf.l2j.commons.data.StatSet;
+
+import org.w3c.dom.Document;
+import org.w3c.dom.NamedNodeMap;
+import org.w3c.dom.Node;
+
+import Base.Xml.IXmlReader;
+
+
+
+public class DressMeData implements IXmlReader
+{
+	private static final Logger LOG = Logger.getLogger(DressMeData.class.getName());
+	
+	private final static Map<Integer, SkinPackage> _armorSkins = new HashMap<>();
+	private final static Map<Integer, SkinPackage> _weaponSkins = new HashMap<>();
+	private final static Map<Integer, SkinPackage> _hairSkins = new HashMap<>();
+	private final static Map<Integer, SkinPackage> _faceSkins = new HashMap<>();
+	private final static Map<Integer, SkinPackage> _shieldSkins = new HashMap<>();
+	
+	public DressMeData()
+	{
+		load();
+	}
+	
+	public void reload()
+	{
+		_armorSkins.clear();
+		_weaponSkins.clear();
+		_hairSkins.clear();
+		_faceSkins.clear();
+		_shieldSkins.clear();
+		
+		load();
+	}
+	
+	@Override
+	public void load()
+	{
+		parseDatapackFile(""./data/xml/dressme.xml"");
+		LOG.info(getClass().getSimpleName() + "": Loaded "" + _armorSkins.size() + "" armor skins"");
+		LOG.info(getClass().getSimpleName() + "": Loaded "" + _weaponSkins.size() + "" weapon skins"");
+		LOG.info(getClass().getSimpleName() + "": Loaded "" + _hairSkins.size() + "" hair skins"");
+		LOG.info(getClass().getSimpleName() + "": Loaded "" + _faceSkins.size() + "" face skins"");
+		LOG.info(getClass().getSimpleName() + "": Loaded "" + _shieldSkins.size() + "" shield skins"");
+	}
+	
+	@Override
+	public void parseDocument(Document doc)
+	{
+		for (Node list = doc.getFirstChild(); list != null; list = list.getNextSibling())
+		{
+			if (""list"".equalsIgnoreCase(list.getNodeName()))
+			{
+				for (Node skin = list.getFirstChild(); skin != null; skin = skin.getNextSibling())
+				{
+					if (""skin"".equalsIgnoreCase(skin.getNodeName()))
+					{
+						final NamedNodeMap attrs = skin.getAttributes();
+						
+						String type = parseString(attrs, ""type"");
+						
+						final StatSet set = new StatSet();
+						
+						for (Node typeN = skin.getFirstChild(); typeN != null; typeN = typeN.getNextSibling())
+						{
+							if (""type"".equalsIgnoreCase(typeN.getNodeName()))
+							{
+								final NamedNodeMap attrs2 = typeN.getAttributes();
+								
+								int id = parseInteger(attrs2, ""id"");
+								String name = parseString(attrs2, ""name"");
+								int weaponId = parseInteger(attrs2, ""weaponId"", 0);
+								int shieldId = parseInteger(attrs2, ""shieldId"", 0);
+								int chestId = parseInteger(attrs2, ""chestId"", 0);
+								int hairId = parseInteger(attrs2, ""hairId"", 0);
+								int faceId = parseInteger(attrs2, ""faceId"", 0);
+								int legsId = parseInteger(attrs2, ""legsId"", 0);
+								int glovesId = parseInteger(attrs2, ""glovesId"", 0);
+								int feetId = parseInteger(attrs2, ""feetId"", 0);
+								int priceId = parseInteger(attrs2, ""priceId"", 0);
+								int priceCount = parseInteger(attrs2, ""priceCount"", 0);
+								
+								set.set(""type"", type);
+								
+								set.set(""id"", id);
+								set.set(""name"", name);
+								set.set(""weaponId"", weaponId);
+								set.set(""shieldId"", shieldId);
+								set.set(""chestId"", chestId);
+								set.set(""hairId"", hairId);
+								set.set(""faceId"", faceId);
+								set.set(""legsId"", legsId);
+								set.set(""glovesId"", glovesId);
+								set.set(""feetId"", feetId);
+								set.set(""priceId"", priceId);
+								set.set(""priceCount"", priceCount);
+								
+								switch (type.toLowerCase())
+								{
+									case ""armor"":
+										_armorSkins.put(id, new SkinPackage(set));
+										break;
+									case ""weapon"":
+										_weaponSkins.put(id, new SkinPackage(set));
+										break;
+									case ""hair"":
+										_hairSkins.put(id, new SkinPackage(set));
+										break;
+									case ""face"":
+										_faceSkins.put(id, new SkinPackage(set));
+										break;
+									case ""shield"":
+										_shieldSkins.put(id, new SkinPackage(set));
+										break;
+								}
+							}
+						}
+					}
+				}
+			}
+		}
+		
+	}
+	
+	public SkinPackage getArmorSkinsPackage(int id)
+	{
+		if (!_armorSkins.containsKey(id))
+		{
+			return null;
+		}
+		
+		return _armorSkins.get(id);
+	}
+	
+	public Map<Integer, SkinPackage> getArmorSkinOptions()
+	{
+		return _armorSkins;
+	}
+	
+	public SkinPackage getWeaponSkinsPackage(int id)
+	{
+		if (!_weaponSkins.containsKey(id))
+		{
+			return null;
+		}
+		
+		return _weaponSkins.get(id);
+	}
+	
+	public Map<Integer, SkinPackage> getWeaponSkinOptions()
+	{
+		return _weaponSkins;
+	}
+	
+	public SkinPackage getHairSkinsPackage(int id)
+	{
+		if (!_hairSkins.containsKey(id))
+		{
+			return null;
+		}
+		
+		return _hairSkins.get(id);
+	}
+	
+	public Map<Integer, SkinPackage> getHairSkinOptions()
+	{
+		return _hairSkins;
+	}
+	
+	public SkinPackage getFaceSkinsPackage(int id)
+	{
+		if (!_faceSkins.containsKey(id))
+		{
+			return null;
+		}
+		
+		return _faceSkins.get(id);
+	}
+	
+	public Map<Integer, SkinPackage> getFaceSkinOptions()
+	{
+		return _faceSkins;
+	}
+	
+	public SkinPackage getShieldSkinsPackage(int id)
+	{
+		if (!_shieldSkins.containsKey(id))
+		{
+			return null;
+		}
+		
+		return _shieldSkins.get(id);
+	}
+	
+	public Map<Integer, SkinPackage> getShieldSkinOptions()
+	{
+		return _shieldSkins;
+	}
+	
+	public static DressMeData getInstance()
+	{
+		return SingletonHolder._instance;
+	}
+	
+	private static class SingletonHolder
+	{
+		protected static final DressMeData _instance = new DressMeData();
+	}
+}
\ No newline at end of file
diff --git java/Base/Skin/SkinPackage.java java/Base/Skin/SkinPackage.java
new file mode 100644
index 0000000..ff40f74
--- /dev/null
+++ java/Base/Skin/SkinPackage.java
@@ -0,0 +1,104 @@
+package Base.Skin;
+
+import net.sf.l2j.commons.data.StatSet;
+
+
+
+public class SkinPackage
+{
+	private String _type;
+	private String _name;
+	private int _id;
+	private int _weaponId;
+	private int _shieldId;
+	private int _chestId;
+	private int _hairId;
+	private int _faceId;
+	private int _legsId;
+	private int _glovesId;
+	private int _feetId;
+	private int _priceId;
+	private int _priceCount;
+	
+	public SkinPackage(StatSet set)
+	{
+		_type = set.getString(""type"", ""default"");
+		_name = set.getString(""name"", ""NoName"");
+		_id = set.getInteger(""id"", 0);
+		_weaponId = set.getInteger(""weaponId"", 0);
+		_shieldId = set.getInteger(""shieldId"", 0);
+		_chestId = set.getInteger(""chestId"", 0);
+		_hairId = set.getInteger(""hairId"", 0);
+		_faceId = set.getInteger(""faceId"", 0);
+		_legsId = set.getInteger(""legsId"", 0);
+		_glovesId = set.getInteger(""glovesId"", 0);
+		_feetId = set.getInteger(""feetId"", 0);
+		_priceId = set.getInteger(""priceId"", 0);
+		_priceCount = set.getInteger(""priceCount"", 0);
+	}
+	
+	public int getId()
+	{
+		return _id;
+	}
+	
+	public String getType()
+	{
+		return _type;
+	}
+	
+	public String getName()
+	{
+		return _name;
+	}
+	
+	public int getWeaponId()
+	{
+		return _weaponId;
+	}
+	
+	public int getShieldId()
+	{
+		return _shieldId;
+	}
+	
+	public int getChestId()
+	{
+		return _chestId;
+	}
+	
+	public int getHairId()
+	{
+		return _hairId;
+	}
+	
+	public int getFaceId()
+	{
+		return _faceId;
+	}
+	
+	public int getLegsId()
+	{
+		return _legsId;
+	}
+	
+	public int getGlovesId()
+	{
+		return _glovesId;
+	}
+	
+	public int getFeetId()
+	{
+		return _feetId;
+	}
+	
+	public int getPriceId()
+	{
+		return _priceId;
+	}
+	
+	public int getPriceCount()
+	{
+		return _priceCount;
+	}
+}
\ No newline at end of file
diff --git java/Base/Xml/IXmlReader.java java/Base/Xml/IXmlReader.java
new file mode 100644
index 0000000..044830c
--- /dev/null
+++ java/Base/Xml/IXmlReader.java
@@ -0,0 +1,577 @@
+
+package Base.Xml;
+
+import java.io.File;
+import java.io.FileFilter;
+import java.util.logging.Logger;
+
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.parsers.DocumentBuilderFactory;
+
+import net.sf.l2j.commons.data.StatSet;
+
+import net.sf.l2j.gameserver.GameServer;
+
+
+import org.w3c.dom.Document;
+import org.w3c.dom.NamedNodeMap;
+import org.w3c.dom.Node;
+import org.xml.sax.ErrorHandler;
+import org.xml.sax.SAXParseException;
+
+
+
+public interface IXmlReader
+{
+	static final Logger LOG = Logger.getLogger(GameServer.class.getName());
+	
+	static final String JAXP_SCHEMA_LANGUAGE = ""http://java.sun.com/xml/jaxp/properties/schemaLanguage"";
+	static final String W3C_XML_SCHEMA = ""http://www.w3.org/2001/XMLSchema"";
+	
+	static final XMLFilter XML_FILTER = new XMLFilter();
+	
+	public void load();
+	
+	default void parseDatapackFile(String path)
+	{
+		parseFile(new File(""."", path));
+	}
+	
+	default void parseFile(File f)
+	{
+		if (!getCurrentFileFilter().accept(f))
+		{
+			LOG.warning(""{}: Could not parse {} is not a file or it doesn't exist!"");
+			return;
+		}
+		
+		final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
+		dbf.setNamespaceAware(true);
+		dbf.setValidating(false);
+		dbf.setIgnoringComments(true);
+		
+		try
+		{
+			dbf.setAttribute(JAXP_SCHEMA_LANGUAGE, W3C_XML_SCHEMA);
+			final DocumentBuilder db = dbf.newDocumentBuilder();
+			db.setErrorHandler(new XMLErrorHandler());
+			parseDocument(db.parse(f), f);
+		}
+		catch (SAXParseException e)
+		{
+			LOG.warning(""{}: Could not parse file {} at line {}, column {}"");
+			return;
+		}
+		catch (Exception e)
+		{
+			LOG.warning(""{}: Could not parse file {}"");
+			return;
+		}
+	}
+	
+	default boolean parseDirectory(File file)
+	{
+		return parseDirectory(file, false);
+	}
+	
+	default boolean parseDirectory(String path)
+	{
+		return parseDirectory(new File(path), false);
+	}
+	
+	default boolean parseDirectory(String path, boolean recursive)
+	{
+		return parseDirectory(new File(path), recursive);
+	}
+	
+	default boolean parseDirectory(File dir, boolean recursive)
+	{
+		if (!dir.exists())
+		{
+			LOG.warning(""{}: Folder {} doesn't exist!"");
+			return false;
+		}
+		
+		final File[] files = dir.listFiles();
+		if (files != null)
+		{
+			for (File f : files)
+			{
+				if (recursive && f.isDirectory())
+				{
+					parseDirectory(f, recursive);
+				}
+				else if (getCurrentFileFilter().accept(f))
+				{
+					parseFile(f);
+				}
+			}
+		}
+		return true;
+	}
+	
+	default boolean parseDatapackDirectory(String path, boolean recursive)
+	{
+		return parseDirectory(new File(""."", path), recursive);
+	}
+	
+	default void parseDocument(Document doc, File f)
+	{
+		parseDocument(doc);
+	}
+	
+	default void parseDocument(Document doc)
+	{
+		LOG.warning(""{}: Parser not implemented!"");
+	}
+	
+	default Boolean parseBoolean(Node node, Boolean defaultValue)
+	{
+		return node != null ? Boolean.valueOf(node.getNodeValue()) : defaultValue;
+	}
+	
+	default Boolean parseBoolean(Node node)
+	{
+		return parseBoolean(node, null);
+	}
+	
+	default Boolean parseBoolean(NamedNodeMap attrs, String name)
+	{
+		return parseBoolean(attrs.getNamedItem(name));
+	}
+	
+	default Boolean parseBoolean(NamedNodeMap attrs, String name, Boolean defaultValue)
+	{
+		return parseBoolean(attrs.getNamedItem(name), defaultValue);
+	}
+	
+	default Byte parseByte(Node node, Byte defaultValue)
+	{
+		return node != null ? Byte.valueOf(node.getNodeValue()) : defaultValue;
+	}
+	
+	default StatSet parseAttributes(Node node)
+	{
+		final NamedNodeMap attrs = node.getAttributes();
+		final StatSet map = new StatSet();
+		for (int i = 0; i < attrs.getLength(); i++)
+		{
+			final Node att = attrs.item(i);
+			map.set(att.getNodeName(), att.getNodeValue());
+		}
+		return map;
+	}
+	
+	/**
+	 * Parses a byte value.
+	 * @param node the node to parse
+	 * @return if the node is not null, the value of the parsed node, otherwise null
+	 */
+	default Byte parseByte(Node node)
+	{
+		return parseByte(node, null);
+	}
+	
+	/**
+	 * Parses a byte value.
+	 * @param attrs the attributes
+	 * @param name the name of the attribute to parse
+	 * @return if the node is not null, the value of the parsed node, otherwise null
+	 */
+	default Byte parseByte(NamedNodeMap attrs, String name)
+	{
+		return parseByte(attrs.getNamedItem(name));
+	}
+	
+	/**
+	 * Parses a byte value.
+	 * @param attrs the attributes
+	 * @param name the name of the attribute to parse
+	 * @param defaultValue the default value
+	 * @return if the node is not null, the value of the parsed node, otherwise the default value
+	 */
+	default Byte parseByte(NamedNodeMap attrs, String name, Byte defaultValue)
+	{
+		return parseByte(attrs.getNamedItem(name), defaultValue);
+	}
+	
+	/**
+	 * Parses a short value.
+	 * @param node the node to parse
+	 * @param defaultValue the default value
+	 * @return if the node is not null, the value of the parsed node, otherwise the default value
+	 */
+	default Short parseShort(Node node, Short defaultValue)
+	{
+		return node != null ? Short.valueOf(node.getNodeValue()) : defaultValue;
+	}
+	
+	/**
+	 * Parses a short value.
+	 * @param node the node to parse
+	 * @return if the node is not null, the value of the parsed node, otherwise null
+	 */
+	default Short parseShort(Node node)
+	{
+		return parseShort(node, null);
+	}
+	
+	/**
+	 * Parses a short value.
+	 * @param attrs the attributes
+	 * @param name the name of the attribute to parse
+	 * @return if the node is not null, the value of the parsed node, otherwise null
+	 */
+	default Short parseShort(NamedNodeMap attrs, String name)
+	{
+		return parseShort(attrs.getNamedItem(name));
+	}
+	
+	/**
+	 * Parses a short value.
+	 * @param attrs the attributes
+	 * @param name the name of the attribute to parse
+	 * @param defaultValue the default value
+	 * @return if the node is not null, the value of the parsed node, otherwise the default value
+	 */
+	default Short parseShort(NamedNodeMap attrs, String name, Short defaultValue)
+	{
+		return parseShort(attrs.getNamedItem(name), defaultValue);
+	}
+	
+	/**
+	 * Parses an int value.
+	 * @param node the node to parse
+	 * @param defaultValue the default value
+	 * @return if the node is not null, the value of the parsed node, otherwise the default value
+	 */
+	default int parseInt(Node node, Integer defaultValue)
+	{
+		return node != null ? Integer.parseInt(node.getNodeValue()) : defaultValue;
+	}
+	
+	/**
+	 * Parses an int value.
+	 * @param node the node to parse
+	 * @return if the node is not null, the value of the parsed node, otherwise the default value
+	 */
+	default int parseInt(Node node)
+	{
+		return parseInt(node, -1);
+	}
+	
+	/**
+	 * Parses an integer value.
+	 * @param node the node to parse
+	 * @param defaultValue the default value
+	 * @return if the node is not null, the value of the parsed node, otherwise the default value
+	 */
+	default Integer parseInteger(Node node, Integer defaultValue)
+	{
+		return node != null ? Integer.valueOf(node.getNodeValue()) : defaultValue;
+	}
+	
+	/**
+	 * Parses an integer value.
+	 * @param node the node to parse
+	 * @return if the node is not null, the value of the parsed node, otherwise null
+	 */
+	default Integer parseInteger(Node node)
+	{
+		return parseInteger(node, null);
+	}
+	
+	/**
+	 * Parses an integer value.
+	 * @param attrs the attributes
+	 * @param name the name of the attribute to parse
+	 * @return if the node is not null, the value of the parsed node, otherwise null
+	 */
+	default Integer parseInteger(NamedNodeMap attrs, String name)
+	{
+		return parseInteger(attrs.getNamedItem(name));
+	}
+	
+	/**
+	 * Parses an integer value.
+	 * @param attrs the attributes
+	 * @param name the name of the attribute to parse
+	 * @param defaultValue the default value
+	 * @return if the node is not null, the value of the parsed node, otherwise the default value
+	 */
+	default Integer parseInteger(NamedNodeMap attrs, String name, Integer defaultValue)
+	{
+		return parseInteger(attrs.getNamedItem(name), defaultValue);
+	}
+	
+	/**
+	 * Parses a long value.
+	 * @param node the node to parse
+	 * @param defaultValue the default value
+	 * @return if the node is not null, the value of the parsed node, otherwise the default value
+	 */
+	default Long parseLong(Node node, Long defaultValue)
+	{
+		return node != null ? Long.valueOf(node.getNodeValue()) : defaultValue;
+	}
+	
+	/**
+	 * Parses a long value.
+	 * @param node the node to parse
+	 * @return if the node is not null, the value of the parsed node, otherwise null
+	 */
+	default Long parseLong(Node node)
+	{
+		return parseLong(node, null);
+	}
+	
+	/**
+	 * Parses a long value.
+	 * @param attrs the attributes
+	 * @param name the name of the attribute to parse
+	 * @return if the node is not null, the value of the parsed node, otherwise null
+	 */
+	default Long parseLong(NamedNodeMap attrs, String name)
+	{
+		return parseLong(attrs.getNamedItem(name));
+	}
+	
+	/**
+	 * Parses a long value.
+	 * @param attrs the attributes
+	 * @param name the name of the attribute to parse
+	 * @param defaultValue the default value
+	 * @return if the node is not null, the value of the parsed node, otherwise the default value
+	 */
+	default Long parseLong(NamedNodeMap attrs, String name, Long defaultValue)
+	{
+		return parseLong(attrs.getNamedItem(name), defaultValue);
+	}
+	
+	/**
+	 * Parses a float value.
+	 * @param node the node to parse
+	 * @param defaultValue the default value
+	 * @return if the node is not null, the value of the parsed node, otherwise the default value
+	 */
+	default Float parseFloat(Node node, Float defaultValue)
+	{
+		return node != null ? Float.valueOf(node.getNodeValue()) : defaultValue;
+	}
+	
+	/**
+	 * Parses a float value.
+	 * @param node the node to parse
+	 * @return if the node is not null, the value of the parsed node, otherwise null
+	 */
+	default Float parseFloat(Node node)
+	{
+		return parseFloat(node, null);
+	}
+	
+	/**
+	 * Parses a float value.
+	 * @param attrs the attributes
+	 * @param name the name of the attribute to parse
+	 * @return if the node is not null, the value of the parsed node, otherwise null
+	 */
+	default Float parseFloat(NamedNodeMap attrs, String name)
+	{
+		return parseFloat(attrs.getNamedItem(name));
+	}
+	
+	/**
+	 * Parses a float value.
+	 * @param attrs the attributes
+	 * @param name the name of the attribute to parse
+	 * @param defaultValue the default value
+	 * @return if the node is not null, the value of the parsed node, otherwise the default value
+	 */
+	default Float parseFloat(NamedNodeMap attrs, String name, Float defaultValue)
+	{
+		return parseFloat(attrs.getNamedItem(name), defaultValue);
+	}
+	
+	/**
+	 * Parses a double value.
+	 * @param node the node to parse
+	 * @param defaultValue the default value
+	 * @return if the node is not null, the value of the parsed node, otherwise the default value
+	 */
+	default Double parseDouble(Node node, Double defaultValue)
+	{
+		return node != null ? Double.valueOf(node.getNodeValue()) : defaultValue;
+	}
+	
+	/**
+	 * Parses a double value.
+	 * @param node the node to parse
+	 * @return if the node is not null, the value of the parsed node, otherwise null
+	 */
+	default Double parseDouble(Node node)
+	{
+		return parseDouble(node, null);
+	}
+	
+	/**
+	 * Parses a double value.
+	 * @param attrs the attributes
+	 * @param name the name of the attribute to parse
+	 * @return if the node is not null, the value of the parsed node, otherwise null
+	 */
+	default Double parseDouble(NamedNodeMap attrs, String name)
+	{
+		return parseDouble(attrs.getNamedItem(name));
+	}
+	
+	/**
+	 * Parses a double value.
+	 * @param attrs the attributes
+	 * @param name the name of the attribute to parse
+	 * @param defaultValue the default value
+	 * @return if the node is not null, the value of the parsed node, otherwise the default value
+	 */
+	default Double parseDouble(NamedNodeMap attrs, String name, Double defaultValue)
+	{
+		return parseDouble(attrs.getNamedItem(name), defaultValue);
+	}
+	
+	/**
+	 * Parses a string value.
+	 * @param node the node to parse
+	 * @param defaultValue the default value
+	 * @return if the node is not null, the value of the parsed node, otherwise the default value
+	 */
+	default String parseString(Node node, String defaultValue)
+	{
+		return node != null ? node.getNodeValue() : defaultValue;
+	}
+	
+	/**
+	 * Parses a string value.
+	 * @param node the node to parse
+	 * @return if the node is not null, the value of the parsed node, otherwise null
+	 */
+	default String parseString(Node node)
+	{
+		return parseString(node, null);
+	}
+	
+	/**
+	 * Parses a string value.
+	 * @param attrs the attributes
+	 * @param name the name of the attribute to parse
+	 * @return if the node is not null, the value of the parsed node, otherwise null
+	 */
+	default String parseString(NamedNodeMap attrs, String name)
+	{
+		return parseString(attrs.getNamedItem(name));
+	}
+	
+	/**
+	 * Parses a string value.
+	 * @param attrs the attributes
+	 * @param name the name of the attribute to parse
+	 * @param defaultValue the default value
+	 * @return if the node is not null, the value of the parsed node, otherwise the default value
+	 */
+	default String parseString(NamedNodeMap attrs, String name, String defaultValue)
+	{
+		return parseString(attrs.getNamedItem(name), defaultValue);
+	}
+	
+	/**
+	 * Parses an enumerated value.
+	 * @param <T> the enumerated type
+	 * @param node the node to parse
+	 * @param clazz the class of the enumerated
+	 * @param defaultValue the default value
+	 * @return if the node is not null and the node value is valid the parsed value, otherwise the default value
+	 */
+	default <T extends Enum<T>> T parseEnum(Node node, Class<T> clazz, T defaultValue)
+	{
+		if (node == null)
+		{
+			return defaultValue;
+		}
+		
+		try
+		{
+			return Enum.valueOf(clazz, node.getNodeValue());
+		}
+		catch (IllegalArgumentException e)
+		{
+			LOG.warning(""Invalid value specified for node: {} specified value: {} should be enum value of \""{}\"" using default value: {}"");
+			return defaultValue;
+		}
+	}
+	
+	/**
+	 * Parses an enumerated value.
+	 * @param <T> the enumerated type
+	 * @param node the node to parse
+	 * @param clazz the class of the enumerated
+	 * @return if the node is not null and the node value is valid the parsed value, otherwise null
+	 */
+	default <T extends Enum<T>> T parseEnum(Node node, Class<T> clazz)
+	{
+		return parseEnum(node, clazz, null);
+	}
+	
+	/**
+	 * Parses an enumerated value.
+	 * @param <T> the enumerated type
+	 * @param attrs the attributes
+	 * @param clazz the class of the enumerated
+	 * @param name the name of the attribute to parse
+	 * @return if the node is not null and the node value is valid the parsed value, otherwise null
+	 */
+	default <T extends Enum<T>> T parseEnum(NamedNodeMap attrs, Class<T> clazz, String name)
+	{
+		return parseEnum(attrs.getNamedItem(name), clazz);
+	}
+	
+	/**
+	 * Parses an enumerated value.
+	 * @param <T> the enumerated type
+	 * @param attrs the attributes
+	 * @param clazz the class of the enumerated
+	 * @param name the name of the attribute to parse
+	 * @param defaultValue the default value
+	 * @return if the node is not null and the node value is valid the parsed value, otherwise the default value
+	 */
+	default <T extends Enum<T>> T parseEnum(NamedNodeMap attrs, Class<T> clazz, String name, T defaultValue)
+	{
+		return parseEnum(attrs.getNamedItem(name), clazz, defaultValue);
+	}
+	
+	/**
+	 * Gets the current file filter.
+	 * @return the current file filter
+	 */
+	default FileFilter getCurrentFileFilter()
+	{
+		return XML_FILTER;
+	}
+	
+	static class XMLErrorHandler implements ErrorHandler
+	{
+		@Override
+		public void warning(SAXParseException e) throws SAXParseException
+		{
+			throw e;
+		}
+		
+		@Override
+		public void error(SAXParseException e) throws SAXParseException
+		{
+			throw e;
+		}
+		
+		@Override
+		public void fatalError(SAXParseException e) throws SAXParseException
+		{
+			throw e;
+		}
+	}
+}
diff --git java/Base/Xml/XMLFilter.java java/Base/Xml/XMLFilter.java
new file mode 100644
index 0000000..faa1805
--- /dev/null
+++ java/Base/Xml/XMLFilter.java
@@ -0,0 +1,17 @@
+package Base.Xml;
+
+import java.io.File;
+import java.io.FileFilter;
+
+public class XMLFilter implements FileFilter
+{
+	@Override
+	public boolean accept(File f)
+	{
+		if ((f == null) || !f.isFile())
+		{
+			return false;
+		}
+		return f.getName().toLowerCase().endsWith("".xml"");
+	}
+}
diff --git java/net/sf/l2j/Config.java java/net/sf/l2j/Config.java
index 740f51c..7a589d1 100644
--- java/net/sf/l2j/Config.java
+++ java/net/sf/l2j/Config.java
@@ -56,6 +56,11 @@
 	public static final String SIEGE_FILE = ""./config/siege.properties"";
 	public static final String HWID_FILE = ""./config/hwid.properties"";
 	
+	public static boolean ALLOW_DRESS_ME_SYSTEM;
+	public static String DRESS_ME_COMMAND;
+	public static boolean ALLOW_DRESS_ME_FOR_PREMIUM;
+	public static boolean ALLOW_DRESS_ME_IN_OLY;
+	
 	public static int CUSTOM_ITEM_ROULETTE;
 	
 	/** Annunce Pvp And Pk Kills */
@@ -1970,6 +1975,11 @@
 		
 		CUSTOM_ITEM_ROULETTE = players.getProperty(""CustomItemRoulette"", 0);
 		
+		ALLOW_DRESS_ME_SYSTEM = players.getProperty(""AllowDressMeSystem"", false);
+		DRESS_ME_COMMAND = players.getProperty(""DressMeCommand"", ""dressme"");
+		ALLOW_DRESS_ME_FOR_PREMIUM = players.getProperty(""AllowDressMeForPremiumOnly"", false);
+		ALLOW_DRESS_ME_IN_OLY = players.getProperty(""AllowDressMeInOly"", false);
+		
 		EFFECT_CANCELING = players.getProperty(""CancelLesserEffect"", true);
 		HP_REGEN_MULTIPLIER = players.getProperty(""HpRegenMultiplier"", 1.);
 		MP_REGEN_MULTIPLIER = players.getProperty(""MpRegenMultiplier"", 1.);
diff --git java/net/sf/l2j/gameserver/GameServer.java java/net/sf/l2j/gameserver/GameServer.java
index 1600d9a..d1211b7 100644
--- java/net/sf/l2j/gameserver/GameServer.java
+++ java/net/sf/l2j/gameserver/GameServer.java
@@ -118,6 +118,7 @@
 import Base.Data.IconTable;
 import Base.Data.XMLDocumentFactory;
 import Base.Roullete.RouletteData;
+import Base.Skin.DressMeData;
 import hwid.hwid;
 
 public class GameServer
@@ -314,6 +315,12 @@
 		RouletteData.getInstance();
 		IconTable.getInstance();
 		
+		if (Config.ALLOW_DRESS_ME_SYSTEM)
+		{
+			StringUtil.printSection(""Dress Me / Skins"");
+			DressMeData.getInstance();
+		}
+		
 		StringUtil.printSection(""Handlers"");
 		LOGGER.info(""Loaded {} admin command handlers."", AdminCommandHandler.getInstance().size());
 		LOGGER.info(""Loaded {} chat handlers."", ChatHandler.getInstance().size());
diff --git java/net/sf/l2j/gameserver/data/xml/ItemData.java java/net/sf/l2j/gameserver/data/xml/ItemData.java
index fb35d7c..abb8736 100644
--- java/net/sf/l2j/gameserver/data/xml/ItemData.java
+++ java/net/sf/l2j/gameserver/data/xml/ItemData.java
@@ -3,10 +3,13 @@
 import java.io.File;
 import java.util.HashMap;
 import java.util.Map;
+import java.util.logging.Level;
 
 import net.sf.l2j.commons.logging.CLogger;
 
+
 import net.sf.l2j.gameserver.data.DocumentItem;
+import net.sf.l2j.gameserver.model.item.instance.ItemInstance;
 import net.sf.l2j.gameserver.model.item.kind.Armor;
 import net.sf.l2j.gameserver.model.item.kind.EtcItem;
 import net.sf.l2j.gameserver.model.item.kind.Item;
@@ -101,6 +104,47 @@
 		return SingletonHolder.INSTANCE;
 	}
 	
+	
+	
+	
+	
+	public ItemInstance createDummyItem(final int itemId)
+	{
+		final Item item = getTemplate(itemId);
+		
+		if (item == null)
+		{
+			return null;
+		}
+		
+		ItemInstance temp = new ItemInstance(0, item);
+		
+		try
+		{
+			temp = new ItemInstance(0, itemId);
+		}
+		catch (final ArrayIndexOutOfBoundsException e)
+		{
+	
+				e.printStackTrace();
+			
+		}
+		
+		if (temp.getItem() == null)
+		{
+			LOGGER.warn(Level.WARNING, ""ItemTable: Item Template missing for Id: {}"" + "" "" + itemId);
+		}
+		
+		return temp;
+	}	
+	
+	
+	
+	
+	
+	
+	
+	
 	private static class SingletonHolder
 	{
 		protected static final ItemData INSTANCE = new ItemData();
diff --git java/net/sf/l2j/gameserver/handler/BypassHandler.java java/net/sf/l2j/gameserver/handler/BypassHandler.java
new file mode 100644
index 0000000..ad2fbd4
--- /dev/null
+++ java/net/sf/l2j/gameserver/handler/BypassHandler.java
@@ -0,0 +1,69 @@
+package net.sf.l2j.gameserver.handler;
+
+import java.util.HashMap;
+import java.util.Map;
+import java.util.logging.Logger;
+
+import net.sf.l2j.Config;
+
+
+
+/**
+ * @author Dwight
+ */
+public class BypassHandler
+{
+	private static Logger _log = Logger.getLogger(BypassHandler.class.getName());
+	private final Map<Integer, IBypassHandler> _datatable = new HashMap<>();
+	
+	public static BypassHandler getInstance()
+	{
+		return SingletonHolder._instance;
+	}
+	
+	private BypassHandler()
+	{
+		
+	
+		
+	}
+	
+	public void registerBypassHandler(IBypassHandler handler)
+	{
+		String[] ids = handler.getBypassHandlersList();
+		for (int i = 0; i < ids.length; i++)
+		{
+			if (Config.PACKET_HANDLER_DEBUG)
+			{
+				_log.fine(""Adding handler for command "" + ids[i]);
+			}
+			_datatable.put(ids[i].hashCode(), handler);
+		}
+	}
+	
+	public IBypassHandler getBypassHandler(String bypass)
+	{
+		String command = bypass;
+		
+		if (bypass.indexOf("" "") != -1)
+		{
+			command = bypass.substring(0, bypass.indexOf("" ""));
+		}
+		
+		if (Config.PACKET_HANDLER_DEBUG)
+		{
+			_log.fine(""getting handler for command: "" + command + "" -> "" + (_datatable.get(command.hashCode()) != null));
+		}
+		return _datatable.get(command.hashCode());
+	}
+	
+	public int size()
+	{
+		return _datatable.size();
+	}
+	
+	private static class SingletonHolder
+	{
+		protected static final BypassHandler _instance = new BypassHandler();
+	}
+}
diff --git java/net/sf/l2j/gameserver/handler/CustomBypassHandler.java java/net/sf/l2j/gameserver/handler/CustomBypassHandler.java
new file mode 100644
index 0000000..e07fdff
--- /dev/null
+++ java/net/sf/l2j/gameserver/handler/CustomBypassHandler.java
@@ -0,0 +1,70 @@
+
+package net.sf.l2j.gameserver.handler;
+
+import java.util.HashMap;
+import java.util.Map;
+
+import net.sf.l2j.gameserver.handler.voicedcommandhandlers.DressMe;
+import net.sf.l2j.gameserver.model.actor.Player;
+
+
+
+
+public class CustomBypassHandler
+{
+
+	
+	private static CustomBypassHandler _instance = null;
+	private final Map<String, ICustomByPassHandler> _handlers;
+	
+	private CustomBypassHandler()
+	{
+		_handlers = new HashMap<>();
+		
+		
+		registerCustomBypassHandler(new DressMe());
+	}
+	
+	public static CustomBypassHandler getInstance()
+	{
+		if (_instance == null)
+		{
+			_instance = new CustomBypassHandler();
+		}
+		
+		return _instance;
+	}
+	
+	public void registerCustomBypassHandler(final ICustomByPassHandler handler)
+	{
+		for (final String s : handler.getByPassCommands())
+		{
+			_handlers.put(s, handler);
+		}
+	}
+	
+	public void handleBypass(final Player player, final String command)
+	{
+		String cmd = """";
+		String params = """";
+		final int iPos = command.indexOf("" "");
+		if (iPos != -1)
+		{
+			cmd = command.substring(7, iPos);
+			params = command.substring(iPos + 1);
+		}
+		else
+		{
+			cmd = command.substring(7);
+		}
+		final ICustomByPassHandler ch = _handlers.get(cmd);
+		if (ch != null)
+		{
+			ch.handleCommand(cmd, player, params);
+		}
+		else
+		{
+
+		}
+	}
+}
\ No newline at end of file
diff --git java/net/sf/l2j/gameserver/handler/IBypassHandler.java java/net/sf/l2j/gameserver/handler/IBypassHandler.java
new file mode 100644
index 0000000..a942b63
--- /dev/null
+++ java/net/sf/l2j/gameserver/handler/IBypassHandler.java
@@ -0,0 +1,13 @@
+package net.sf.l2j.gameserver.handler;
+
+import net.sf.l2j.gameserver.model.actor.Player;
+
+/**
+ * @author Dwight
+ */
+public interface IBypassHandler
+{
+	public boolean handleBypass(String bypass, Player activeChar);
+	
+	public String[] getBypassHandlersList();
+}
diff --git java/net/sf/l2j/gameserver/handler/ICustomByPassHandler.java java/net/sf/l2j/gameserver/handler/ICustomByPassHandler.java
new file mode 100644
index 0000000..6b4c1b4
--- /dev/null
+++ java/net/sf/l2j/gameserver/handler/ICustomByPassHandler.java
@@ -0,0 +1,10 @@
+package net.sf.l2j.gameserver.handler;
+
+import net.sf.l2j.gameserver.model.actor.Player;
+
+public interface ICustomByPassHandler
+{
+	public String[] getByPassCommands();
+	
+	public void handleCommand(String command, Player player, String parameters);
+}
diff --git java/net/sf/l2j/gameserver/handler/voicedcommandhandlers/DressMe.java java/net/sf/l2j/gameserver/handler/voicedcommandhandlers/DressMe.java
new file mode 100644
index 0000000..1946b57
--- /dev/null
+++ java/net/sf/l2j/gameserver/handler/voicedcommandhandlers/DressMe.java
@@ -0,0 +1,106 @@
+package net.sf.l2j.gameserver.handler.voicedcommandhandlers;
+
+import java.text.SimpleDateFormat;
+import java.util.Date;
+
+import net.sf.l2j.Config;
+import net.sf.l2j.gameserver.data.HTMLData;
+import net.sf.l2j.gameserver.handler.ICustomByPassHandler;
+import net.sf.l2j.gameserver.handler.IVoicedCommandHandler;
+import net.sf.l2j.gameserver.model.actor.Player;
+import net.sf.l2j.gameserver.network.serverpackets.ExShowScreenMessage;
+import net.sf.l2j.gameserver.network.serverpackets.NpcHtmlMessage;
+import net.sf.l2j.gameserver.network.serverpackets.PlaySound;
+
+public class DressMe implements IVoicedCommandHandler, ICustomByPassHandler
+{
+	private static String[] _voicedCommands =
+	{
+		Config.DRESS_ME_COMMAND
+	};
+	
+	@Override
+	public boolean useVoicedCommand(String command, Player activeChar, String target)
+	{
+		
+		if (Config.ALLOW_DRESS_ME_FOR_PREMIUM && activeChar.getPremiumService() == 0)
+		{
+			activeChar.sendMessage(""You're not The Premium account."");
+			activeChar.sendPacket(new ExShowScreenMessage(""You're not The Premium account."", 1000));
+			activeChar.sendPacket(new PlaySound(""ItemSound3.sys_impossible""));
+			return false;
+		}
+		
+		if (!Config.ALLOW_DRESS_ME_SYSTEM)
+		{
+			
+			activeChar.sendMessage(""El Sistema de Skin Esta Desactivado."");
+			return false;
+		}
+		
+		if (command.startsWith(Config.DRESS_ME_COMMAND))
+		{
+			showHtm(activeChar);
+		}
+		
+		return true;
+	}
+	
+	private static void showHtm(Player player)
+	{
+		NpcHtmlMessage htm = new NpcHtmlMessage(1);
+		String text = HTMLData.getInstance().getHtm(player.getLocale(), ""html/dressme/index.htm"");
+		
+		htm.setHtml(text);
+		
+		{
+			htm.replace(""%time%"", sdf.format(new Date(System.currentTimeMillis())));
+			htm.replace(""%dat%"", (new SimpleDateFormat(""dd/MM/yyyy"")).format(new Date(System.currentTimeMillis())));
+			
+		}
+		
+		player.sendPacket(htm);
+	}
+	
+	static SimpleDateFormat sdf = new SimpleDateFormat(""HH:mm"");
+	
+	@Override
+	public String[] getVoicedCommandList()
+	{
+		return _voicedCommands;
+	}
+	
+	@Override
+	public String[] getByPassCommands()
+	{
+		return new String[]
+		{
+			""dressme_back""
+		};
+	}
+	
+	private enum CommandEnum
+	{
+		dressme_back,
+	}
+	
+	@Override
+	public void handleCommand(String command, Player player, String parameters)
+	{
+		CommandEnum comm = CommandEnum.valueOf(command);
+		
+		if (comm == null)
+		{
+			return;
+		}
+		
+		switch (comm)
+		{
+			case dressme_back:
+			{
+				showHtm(player);
+			}
+				break;
+		}
+	}
+}
\ No newline at end of file
diff --git java/net/sf/l2j/gameserver/model/CharSelectSlot.java java/net/sf/l2j/gameserver/model/CharSelectSlot.java
index 5e84997..0e316bf 100644
--- java/net/sf/l2j/gameserver/model/CharSelectSlot.java
+++ java/net/sf/l2j/gameserver/model/CharSelectSlot.java
@@ -49,6 +49,11 @@
 	private int _z = 0;
 	private int _accessLevel = 0;
 	
+	private int _armorSkinOption = 0;
+	private int _weaponSkinOption = 0;
+	private int _hairSkinOption = 0;
+	private int _faceSkinOption = 0;
+	
 	public CharSelectSlot(int objectId, String name)
 	{
 		_objectId = objectId;
@@ -368,4 +373,45 @@
 		}
 		return paperdoll;
 	}
+	
+	public void setArmorSkinOption(int armorSkinOption)
+	{
+		_armorSkinOption = armorSkinOption;
+	}
+	
+	public int getArmorSkinOption()
+	{
+		return _armorSkinOption;
+	}
+	
+	public void setWeaponSkinOption(int armorSkinOption)
+	{
+		_weaponSkinOption = armorSkinOption;
+	}
+	
+	public int getWeaponSkinOption()
+	{
+		return _weaponSkinOption;
+	}
+	
+	public void setHairSkinOption(int hairSkinOption)
+	{
+		_hairSkinOption = hairSkinOption;
+	}
+	
+	public int getHairSkinOption()
+	{
+		return _hairSkinOption;
+	}
+	
+	public void setFaceSkinOption(int faceSkinOption)
+	{
+		_faceSkinOption = faceSkinOption;
+	}
+	
+	public int getFaceSkinOption()
+	{
+		return _faceSkinOption;
+	}
+	
 }
\ No newline at end of file
diff --git java/net/sf/l2j/gameserver/model/actor/Player.java java/net/sf/l2j/gameserver/model/actor/Player.java
index 670a9d4..9769f20 100644
--- java/net/sf/l2j/gameserver/model/actor/Player.java
+++ java/net/sf/l2j/gameserver/model/actor/Player.java
@@ -15,6 +15,7 @@
 import java.util.Set;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ConcurrentSkipListMap;
+import java.util.concurrent.CopyOnWriteArrayList;
 import java.util.concurrent.Future;
 import java.util.concurrent.ScheduledFuture;
 import java.util.concurrent.atomic.AtomicInteger;
@@ -185,6 +186,7 @@
 import net.sf.l2j.gameserver.network.serverpackets.ExPCCafePointInfo;
 import net.sf.l2j.gameserver.network.serverpackets.ExServerPrimitive;
 import net.sf.l2j.gameserver.network.serverpackets.ExSetCompassZoneCode;
+import net.sf.l2j.gameserver.network.serverpackets.ExShowScreenMessage;
 import net.sf.l2j.gameserver.network.serverpackets.ExStorageMaxCount;
 import net.sf.l2j.gameserver.network.serverpackets.HennaInfo;
 import net.sf.l2j.gameserver.network.serverpackets.InventoryUpdate;
@@ -196,6 +198,7 @@
 import net.sf.l2j.gameserver.network.serverpackets.ObserverEnd;
 import net.sf.l2j.gameserver.network.serverpackets.ObserverStart;
 import net.sf.l2j.gameserver.network.serverpackets.PartySmallWindowUpdate;
+import net.sf.l2j.gameserver.network.serverpackets.PlaySound;
 import net.sf.l2j.gameserver.network.serverpackets.PledgeShowMemberListDelete;
 import net.sf.l2j.gameserver.network.serverpackets.PledgeShowMemberListUpdate;
 import net.sf.l2j.gameserver.network.serverpackets.PrivateStoreListBuy;
@@ -246,12 +249,32 @@
 import net.sf.l2j.gameserver.taskmanager.ShadowItemTaskManager;
 import net.sf.l2j.gameserver.taskmanager.WaterTaskManager;
 
+import Base.Skin.DressMeData;
+
 /**
  * This class represents a player in the world.<br>
  * There is always a client-thread connected to this (except if a player-store is activated upon logout).
  */
 public final class Player extends Playable
 {
+	
+	private int _armorSkinOption = 0;
+	private int _weaponSkinOption = 0;
+	private int _hairSkinOption = 0;
+	private int _faceSkinOption = 0;
+	private int _shieldSkinOption = 0;
+	
+	private boolean isTryingSkin = false;
+	private boolean isTryingSkinPremium = false;
+	private List<Integer> _armorSkins = new CopyOnWriteArrayList<>();
+	private List<Integer> _weaponSkins = new CopyOnWriteArrayList<>();
+	private List<Integer> _hairSkins = new CopyOnWriteArrayList<>();
+	private List<Integer> _faceSkins = new CopyOnWriteArrayList<>();
+	private List<Integer> _shieldSkins = new CopyOnWriteArrayList<>();
+	
+	private static final String INSERT_OR_UPDATE_CHARACTER_DRESSME_DATA = ""INSERT INTO characters_dressme_data (obj_Id, armor_skins, armor_skin_option, weapon_skins, weapon_skin_option, hair_skins, hair_skin_option, face_skins, face_skin_option) VALUES (?,?,?,?,?,?,?,?,?) "" + ""ON DUPLICATE KEY UPDATE obj_Id=?, armor_skins=?, armor_skin_option=?, weapon_skins=?, weapon_skin_option=?, hair_skins=?, hair_skin_option=?, face_skins=?, face_skin_option=?, shield_skins=?, shield_skin_option=?"";
+	private static final String RESTORE_CHARACTER_DRESSME_DATA = ""SELECT obj_Id, armor_skins, armor_skin_option, weapon_skins, weapon_skin_option, hair_skins, hair_skin_option, face_skins, face_skin_option, shield_skins, shield_skin_option FROM characters_dressme_data WHERE obj_id=?"";
+	
 	private static final String RESTORE_SKILLS_FOR_CHAR = ""SELECT skill_id,skill_level FROM character_skills WHERE char_obj_id=? AND class_index=?"";
 	private static final String RESTORE_SKILLS_FOR_CHAR_ALT_SUBCLASS = ""SELECT skill_id,skill_level FROM character_skills WHERE char_obj_id=?"";
 	private static final String ADD_OR_UPDATE_SKILL = ""INSERT INTO character_skills (char_obj_id,skill_id,skill_level,class_index) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE skill_level=VALUES(skill_level)"";
@@ -1291,6 +1314,22 @@
 		if (item.getItem() instanceof Weapon)
 			item.unChargeAllShots();
 		
+		if (getWeaponSkinOption() > 0 && DressMeData.getInstance().getWeaponSkinsPackage(getWeaponSkinOption()) != null)
+		{
+			sendMessage(""At first you must to remove a skin of weapon."");
+			sendPacket(new ExShowScreenMessage(""At first you must to remove a skin of weapon."", 2000));
+			sendPacket(new PlaySound(""ItemSound3.sys_impossible""));
+			return;
+		}
+		
+		if (getShieldSkinOption() > 0 && DressMeData.getInstance().getShieldSkinsPackage(getShieldSkinOption()) != null)
+		{
+			sendMessage(""At first you must to remove a skin of weapon."");
+			sendPacket(new ExShowScreenMessage(""At first you must to remove a skin of weapon."", 2000));
+			sendPacket(new PlaySound(""ItemSound3.sys_impossible""));
+			return;
+		}
+		
 		if (isEquipped)
 		{
 			if (item.getEnchantLevel() > 0)
@@ -2924,7 +2963,7 @@
 				
 				if (Config.ANNOUNCE_KILL)
 					World.toAllOnlinePlayers(SystemMessage.getSystemMessage(SystemMessageId.S1_S2).addString(Config.ANNOUNCE_PVP_MSG.replace(""$killer"", getName()).replace(""$target"", targetPlayer.getName())).addZoneName(targetPlayer.getPosition()));
-			
+				
 				if (Config.ALLOW_PVP_REWARD)
 				{
 					for (int[] item : Config.PVP_REWARD_ITEM)
@@ -4302,7 +4341,7 @@
 					player.refreshWeightPenalty();
 					player.refreshExpertisePenalty();
 					player.refreshHennaList();
-					
+					player.restoreDressMeData();
 					player.setOnlineStatus(true, false);
 					player.setRunning(true);
 					player.setStanding(true);
@@ -4425,6 +4464,11 @@
 	{
 		_cachedData.store();
 		
+		if (!isTryingSkin() || !isTryingSkinPremium())
+		{
+			storeDressMeData();
+		}
+		
 		storeCharBase();
 		storeCharSub();
 		storeEffect(storeActiveEffects);
@@ -7800,7 +7844,6 @@
 		sendPacket(ActionFailed.STATIC_PACKET);
 	}
 	
-	
 	public void tryOpenPrivateBuffStore()
 	{
 		if (canOpenPrivateStore(true))
@@ -8043,18 +8086,447 @@
 	{
 		if (getClient() == null)
 			return _hwid;
-
+		
 		_hwid = getClient().getHWID();
 		return _hwid;
 	}
 	
 	private boolean _skinView;
 	
-	public void setDisableSkinView(boolean comm) {
+	public void setDisableSkinView(boolean comm)
+	{
 		_skinView = comm;
 	}
 	
-	public boolean isDisableSkinView() {
+	public boolean isDisableSkinView()
+	{
 		return _skinView;
 	}
+	
+	private synchronized void storeDressMeData()
+	{
+		
+		try (Connection con = ConnectionPool.getConnection();
+			PreparedStatement statement = con.prepareStatement(INSERT_OR_UPDATE_CHARACTER_DRESSME_DATA))
+		{
+			
+			statement.setInt(1, getObjectId());
+			if (_armorSkins.isEmpty())
+			{
+				statement.setString(2, """");
+			}
+			else
+			{
+				String s = """";
+				for (int i : _armorSkins)
+				{
+					s += String.valueOf(i) + "","";
+				}
+				statement.setString(2, s);
+			}
+			statement.setInt(3, getArmorSkinOption());
+			
+			if (_weaponSkins.isEmpty())
+			{
+				statement.setString(4, """");
+			}
+			else
+			{
+				String s = """";
+				for (int i : _weaponSkins)
+				{
+					s += String.valueOf(i) + "","";
+				}
+				statement.setString(4, s);
+			}
+			statement.setInt(5, getWeaponSkinOption());
+			
+			if (_hairSkins.isEmpty())
+			{
+				statement.setString(6, """");
+			}
+			else
+			{
+				String s = """";
+				for (int i : _hairSkins)
+				{
+					s += String.valueOf(i) + "","";
+				}
+				statement.setString(6, s);
+			}
+			statement.setInt(7, getHairSkinOption());
+			
+			if (_faceSkins.isEmpty())
+			{
+				statement.setString(8, """");
+			}
+			else
+			{
+				String s = """";
+				for (int i : _faceSkins)
+				{
+					s += String.valueOf(i) + "","";
+				}
+				statement.setString(8, s);
+			}
+			statement.setInt(9, getFaceSkinOption());
+			
+			if (_shieldSkins.isEmpty())
+			{
+				statement.setString(10, """");
+			}
+			else
+			{
+				String s = """";
+				for (int i : _shieldSkins)
+				{
+					s += String.valueOf(i) + "","";
+				}
+				statement.setString(10, s);
+			}
+			statement.setInt(11, getShieldSkinOption());
+			
+			// second part
+			
+			statement.setInt(10, getObjectId());
+			if (_armorSkins.isEmpty())
+			{
+				statement.setString(11, """");
+			}
+			else
+			{
+				String s = """";
+				for (int i : _armorSkins)
+				{
+					s += String.valueOf(i) + "","";
+				}
+				statement.setString(11, s);
+			}
+			statement.setInt(12, getArmorSkinOption());
+			
+			if (_weaponSkins.isEmpty())
+			{
+				statement.setString(13, """");
+			}
+			else
+			{
+				String s = """";
+				for (int i : _weaponSkins)
+				{
+					s += String.valueOf(i) + "","";
+				}
+				statement.setString(13, s);
+			}
+			statement.setInt(14, getWeaponSkinOption());
+			
+			if (_hairSkins.isEmpty())
+			{
+				statement.setString(15, """");
+			}
+			else
+			{
+				String s = """";
+				for (int i : _hairSkins)
+				{
+					s += String.valueOf(i) + "","";
+				}
+				statement.setString(15, s);
+			}
+			statement.setInt(16, getHairSkinOption());
+			
+			if (_faceSkins.isEmpty())
+			{
+				statement.setString(17, """");
+			}
+			else
+			{
+				String s = """";
+				for (int i : _faceSkins)
+				{
+					s += String.valueOf(i) + "","";
+				}
+				statement.setString(17, s);
+			}
+			statement.setInt(18, getFaceSkinOption());
+			
+			if (_shieldSkins.isEmpty())
+			{
+				statement.setString(19, """");
+			}
+			else
+			{
+				String s = """";
+				for (int i : _shieldSkins)
+				{
+					s += String.valueOf(i) + "","";
+				}
+				statement.setString(19, s);
+			}
+			statement.setInt(20, getShieldSkinOption());
+			
+			statement.execute();
+			
+		}
+		catch (Exception e)
+		{
+			
+			LOGGER.warn(""Could not store storeDressMeData():"");
+			e.printStackTrace();
+			
+		}
+		
+	}
+	
+	private void restoreDressMeData()
+	{
+		try (Connection con = ConnectionPool.getConnection();
+			PreparedStatement statement = con.prepareStatement(RESTORE_CHARACTER_DRESSME_DATA))
+		{
+			
+			statement.setInt(1, getObjectId()); // Establecer el parámetro objectId
+			
+			try (ResultSet rset = statement.executeQuery())
+			{
+				while (rset.next())
+				{
+					String armorskinIds = rset.getString(""armor_skins"");
+					if (armorskinIds != null && armorskinIds.length() > 0)
+					{
+						for (String s : armorskinIds.split("",""))
+						{
+							if (s == null)
+							{
+								continue;
+							}
+							buyArmorSkin(Integer.parseInt(s));
+						}
+					}
+					setArmorSkinOption(rset.getInt(""armor_skin_option""));
+					
+					String weaponskinIds = rset.getString(""weapon_skins"");
+					if (weaponskinIds != null && weaponskinIds.length() > 0)
+					{
+						for (String s : weaponskinIds.split("",""))
+						{
+							if (s == null)
+							{
+								continue;
+							}
+							buyWeaponSkin(Integer.parseInt(s));
+						}
+					}
+					setWeaponSkinOption(rset.getInt(""weapon_skin_option""));
+					
+					String hairskinIds = rset.getString(""hair_skins"");
+					if (hairskinIds != null && hairskinIds.length() > 0)
+					{
+						for (String s : hairskinIds.split("",""))
+						{
+							if (s == null)
+							{
+								continue;
+							}
+							buyHairSkin(Integer.parseInt(s));
+						}
+					}
+					setHairSkinOption(rset.getInt(""hair_skin_option""));
+					
+					String faceskinIds = rset.getString(""face_skins"");
+					if (faceskinIds != null && faceskinIds.length() > 0)
+					{
+						for (String s : faceskinIds.split("",""))
+						{
+							if (s == null)
+							{
+								continue;
+							}
+							buyFaceSkin(Integer.parseInt(s));
+						}
+					}
+					setFaceSkinOption(rset.getInt(""face_skin_option""));
+					
+					String shieldkinIds = rset.getString(""shield_skins"");
+					if (shieldkinIds != null && shieldkinIds.length() > 0)
+					{
+						for (String s : shieldkinIds.split("",""))
+						{
+							if (s == null)
+							{
+								continue;
+							}
+							buyShieldSkin(Integer.parseInt(s));
+						}
+					}
+					setShieldSkinOption(rset.getInt(""shield_skin_option""));
+				}
+			}
+		}
+		catch (Exception e)
+		{
+			LOGGER.warn(""Could not restore char data:"");
+			e.printStackTrace();
+		}
+	}
+	
+	// Dress Me
+	public boolean isTryingSkin()
+	{
+		return isTryingSkin;
+	}
+	
+	public void setIsTryingSkin(boolean b)
+	{
+		isTryingSkin = b;
+	}
+	
+	public boolean isTryingSkinPremium()
+	{
+		return isTryingSkinPremium;
+	}
+	
+	public void setIsTryingSkinPremium(boolean b)
+	{
+		isTryingSkinPremium = b;
+	}
+	
+	public boolean hasArmorSkin(int skin)
+	{
+		return _armorSkins.contains(skin);
+	}
+	
+	public boolean hasWeaponSkin(int skin)
+	{
+		return _weaponSkins.contains(skin);
+	}
+	
+	public boolean hasHairSkin(int skin)
+	{
+		return _hairSkins.contains(skin);
+	}
+	
+	public boolean hasFaceSkin(int skin)
+	{
+		return _faceSkins.contains(skin);
+	}
+	
+	public boolean hasShieldSkin(int skin)
+	{
+		return _shieldSkins.contains(skin);
+	}
+	
+	public boolean hasEquippedArmorSkin(String skin)
+	{
+		return String.valueOf(_armorSkinOption).contains(String.valueOf(skin));
+	}
+	
+	public boolean hasEquippedWeaponSkin(String skin)
+	{
+		return String.valueOf(_weaponSkinOption).contains(String.valueOf(skin));
+	}
+	
+	public boolean hasEquippedHairSkin(String skin)
+	{
+		return String.valueOf(_hairSkinOption).contains(String.valueOf(skin));
+	}
+	
+	public boolean hasEquippedFaceSkin(String skin)
+	{
+		return String.valueOf(_faceSkinOption).contains(String.valueOf(skin));
+	}
+	
+	public boolean hasEquippedShieldSkin(String skin)
+	{
+		return String.valueOf(_shieldSkinOption).contains(String.valueOf(skin));
+	}
+	
+	public void buyArmorSkin(int id)
+	{
+		if (!_armorSkins.contains(id))
+		{
+			_armorSkins.add(id);
+		}
+	}
+	
+	public void buyWeaponSkin(int id)
+	{
+		if (!_weaponSkins.contains(id))
+		{
+			_weaponSkins.add(id);
+		}
+	}
+	
+	public void buyHairSkin(int id)
+	{
+		if (!_hairSkins.contains(id))
+		{
+			_hairSkins.add(id);
+		}
+	}
+	
+	public void buyFaceSkin(int id)
+	{
+		if (!_faceSkins.contains(id))
+		{
+			_faceSkins.add(id);
+		}
+	}
+	
+	public void buyShieldSkin(int id)
+	{
+		if (!_shieldSkins.contains(id))
+		{
+			_shieldSkins.add(id);
+		}
+	}
+	
+	public void setArmorSkinOption(int armorSkinOption)
+	{
+		_armorSkinOption = armorSkinOption;
+	}
+	
+	public int getArmorSkinOption()
+	{
+		return _armorSkinOption;
+	}
+	
+	public void setWeaponSkinOption(int weaponSkinOption)
+	{
+		_weaponSkinOption = weaponSkinOption;
+	}
+	
+	public int getWeaponSkinOption()
+	{
+		return _weaponSkinOption;
+	}
+	
+	public void setHairSkinOption(int hairSkinOption)
+	{
+		_hairSkinOption = hairSkinOption;
+	}
+	
+	public int getHairSkinOption()
+	{
+		return _hairSkinOption;
+	}
+	
+	public void setFaceSkinOption(int faceSkinOption)
+	{
+		_faceSkinOption = faceSkinOption;
+	}
+	
+	public int getFaceSkinOption()
+	{
+		return _faceSkinOption;
+	}
+	
+	public void setShieldSkinOption(int shieldSkinOption)
+	{
+		_shieldSkinOption = shieldSkinOption;
+	}
+	
+	public int getShieldSkinOption()
+	{
+		return _shieldSkinOption;
+	}
+	
 }
\ No newline at end of file
diff --git java/net/sf/l2j/gameserver/network/clientpackets/EnterWorld.java java/net/sf/l2j/gameserver/network/clientpackets/EnterWorld.java
index c99ef59..57bdbe0 100644
--- java/net/sf/l2j/gameserver/network/clientpackets/EnterWorld.java
+++ java/net/sf/l2j/gameserver/network/clientpackets/EnterWorld.java
@@ -1,10 +1,14 @@
 package net.sf.l2j.gameserver.network.clientpackets;
 
+import java.sql.Connection;
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
 import java.text.SimpleDateFormat;
 import java.util.Date;
 import java.util.Map;
 import java.util.Map.Entry;
 
+import net.sf.l2j.commons.pool.ConnectionPool;
 import net.sf.l2j.commons.pool.ThreadPool;
 
 import net.sf.l2j.Config;
@@ -125,6 +129,13 @@
 		player.updateEffectIcons();
 		player.sendPacket(new EtcStatusUpdate(player));
 		
+		if (Config.ALLOW_DRESS_ME_SYSTEM)
+		
+		{
+			
+			checkskin(player, player.getObjectId(), player.getArmorSkinOption(), player.getWeaponSkinOption(), player.getHairSkinOption(), player.getFaceSkinOption(), player.getShieldSkinOption());
+		}
+		
 		// Clan checks.
 		final Clan clan = player.getClan();
 		if (clan != null)
@@ -370,6 +381,60 @@
 		player.sendMessage(player.getSysString(10_046, df.format(dt)));
 	}
 	
+	private static void checkskin(Player player, final int objectId, int armorid, int weaponid, int hairid, int faceid, int shieldid)
+	{
+		try (Connection con = ConnectionPool.getConnection();
+			PreparedStatement statement = con.prepareStatement(""SELECT obj_Id, armor_skins, armor_skin_option, weapon_skins, weapon_skin_option, hair_skins, hair_skin_option, face_skins, face_skin_option FROM characters_dressme_data WHERE obj_Id=?""))
+		{
+			
+			statement.setInt(1, objectId);
+			try (ResultSet chardata = statement.executeQuery())
+			{
+				if (chardata.next())
+				{
+					// Comprobación de skin de armadura
+					String armorSkins = chardata.getString(""armor_skins"");
+					if (!armorSkins.contains(String.valueOf(armorid)))
+					{
+						armorid = 0; // Si el skin de armadura no está en la lista, establece a 0
+					}
+					
+					// Comprobación de skin de arma
+					String weaponSkins = chardata.getString(""weapon_skins"");
+					if (!weaponSkins.contains(String.valueOf(weaponid)))
+					{
+						weaponid = 0; // Si el skin de arma no está en la lista, establece a 0
+					}
+					
+					// Comprobación de skin de cabello
+					String hairSkins = chardata.getString(""hair_skins"");
+					if (!hairSkins.contains(String.valueOf(hairid)))
+					{
+						hairid = 0; // Si el skin de cabello no está en la lista, establece a 0
+					}
+					
+					// Comprobación de skin de cara
+					String faceSkins = chardata.getString(""face_skins"");
+					if (!faceSkins.contains(String.valueOf(faceid)))
+					{
+						faceid = 0; // Si el skin de cara no está en la lista, establece a 0
+					}
+					
+					// Aplicar las opciones de skin al jugador
+					player.setArmorSkinOption(armorid);
+					player.setWeaponSkinOption(weaponid);
+					player.setHairSkinOption(hairid);
+					player.setFaceSkinOption(faceid);
+					player.setShieldSkinOption(shieldid);
+				}
+			}
+		}
+		catch (final Exception e)
+		{
+			e.printStackTrace();
+		}
+	}
+	
 	@Override
 	protected boolean triggersOnActionRequest()
 	{
diff --git java/net/sf/l2j/gameserver/network/clientpackets/RequestBypassToServer.java java/net/sf/l2j/gameserver/network/clientpackets/RequestBypassToServer.java
index 3c744ac..0c7d755 100644
--- java/net/sf/l2j/gameserver/network/clientpackets/RequestBypassToServer.java
+++ java/net/sf/l2j/gameserver/network/clientpackets/RequestBypassToServer.java
@@ -1,20 +1,26 @@
 package net.sf.l2j.gameserver.network.clientpackets;
 
+import java.sql.Date;
 import java.text.DecimalFormat;
+import java.text.SimpleDateFormat;
 import java.util.Arrays;
 import java.util.Comparator;
+import java.util.List;
 import java.util.Map;
 import java.util.StringTokenizer;
 import java.util.logging.Logger;
 import java.util.stream.Collectors;
+import java.util.stream.Stream;
 
 import net.sf.l2j.commons.data.Pagination;
 import net.sf.l2j.commons.lang.StringUtil;
+import net.sf.l2j.commons.pool.ThreadPool;
 
 import net.sf.l2j.Config;
 import net.sf.l2j.gameserver.communitybbs.CommunityBoard;
 import net.sf.l2j.gameserver.communitybbs.CustomCommunityBoard;
 import net.sf.l2j.gameserver.data.DropCalc;
+import net.sf.l2j.gameserver.data.HTMLData;
+import net.sf.l2j.gameserver.handler.CustomBypassHandler;
 import net.sf.l2j.gameserver.data.manager.BotsPreventionManager;
 import net.sf.l2j.gameserver.data.manager.HeroManager;
 import net.sf.l2j.gameserver.data.manager.SpawnManager;
@@ -22,7 +28,9 @@
 import net.sf.l2j.gameserver.data.xml.ItemData;
 import net.sf.l2j.gameserver.enums.DropType;
 import net.sf.l2j.gameserver.enums.FloodProtector;
+import net.sf.l2j.gameserver.enums.ZoneId;
 import net.sf.l2j.gameserver.enums.actors.NpcSkillType;
+import net.sf.l2j.gameserver.enums.items.WeaponType;
 import net.sf.l2j.gameserver.enums.skills.ElementType;
 import net.sf.l2j.gameserver.enums.skills.SkillType;
 import net.sf.l2j.gameserver.handler.AdminCommandHandler;
@@ -40,18 +48,24 @@
 import net.sf.l2j.gameserver.model.actor.instance.OlympiadManagerNpc;
 import net.sf.l2j.gameserver.model.item.DropCategory;
 import net.sf.l2j.gameserver.model.item.DropData;
+import net.sf.l2j.gameserver.model.item.instance.ItemInstance;
 import net.sf.l2j.gameserver.model.item.kind.Item;
 import net.sf.l2j.gameserver.model.olympiad.OlympiadManager;
 import net.sf.l2j.gameserver.model.spawn.ASpawn;
 import net.sf.l2j.gameserver.network.SystemMessageId;
 import net.sf.l2j.gameserver.network.serverpackets.ActionFailed;
+import net.sf.l2j.gameserver.network.serverpackets.ExShowScreenMessage;
 import net.sf.l2j.gameserver.network.serverpackets.NpcHtmlMessage;
+import net.sf.l2j.gameserver.network.serverpackets.PlaySound;
 import net.sf.l2j.gameserver.scripting.QuestState;
 import net.sf.l2j.gameserver.skills.AbstractEffect;
 import net.sf.l2j.gameserver.skills.L2Skill;
 
+import Base.Data.IconTable;
 import Base.Roullete.RouletteData;
 import Base.Roullete.RouletteManager;
+import Base.Skin.DressMeData;
+import Base.Skin.SkinPackage;
 
 public final class RequestBypassToServer extends L2GameClientPacket
 {
@@ -135,6 +149,415 @@
 			new RouletteManager(player);
 		}
 		
		
+		else if (_command.startsWith(""custom_""))
+		{
+			
+			CustomBypassHandler.getInstance().handleBypass(player, _command);
+		}
+		
+		
+		else if (_command.startsWith(""dressme""))
+		{
+			if (!Config.ALLOW_DRESS_ME_IN_OLY && player.isInOlympiadMode())
+			{
+				player.sendMessage(""DressMe can't be used on The Olympiad game."");
+				return;
+			}
+			
+			StringTokenizer st = new StringTokenizer(_command, "" "");
+			st.nextToken();
+			if (!st.hasMoreTokens())
+			{
+				showDressMeMainPage(player);
+				return;
+			}
+			int page = Integer.parseInt(st.nextToken());
+			
+			if (!st.hasMoreTokens())
+			{
+				showDressMeMainPage(player);
+				return;
+			}
+			String next = st.nextToken();
+			if (next.startsWith(""skinlist""))
+			{
+				String type = st.nextToken();
+				showSkinList(player, type, page);
+			}
+			else if (next.startsWith(""myskinlist""))
+			{
+				
+				showMySkinList(player, page);
+			}
+			if (next.equals(""clean""))
+			{
+				String type = st.nextToken();
+				
+				if (player.isTryingSkin())
+				{
+					player.sendMessage(""You can't do this while trying a skin."");
+					player.sendPacket(new ExShowScreenMessage(""You can't do this while trying a skin."", 2000));
+					player.sendPacket(new PlaySound(""ItemSound3.sys_impossible""));
+					showDressMeMainPage(player);
+					return;
+				}
+				
+				switch (type.toLowerCase())
+				{
+					case ""armor"":
+						player.setArmorSkinOption(0);
+						break;
+					case ""weapon"":
+						player.setWeaponSkinOption(0);
+						break;
+					case ""hair"":
+						player.setHairSkinOption(0);
+						break;
+					case ""face"":
+						player.setFaceSkinOption(0);
+						break;
+					case ""shield"":
+						player.setShieldSkinOption(0);
+						break;
+				}
+				
+				player.broadcastUserInfo();
+				showMySkinList(player, page);
+			}
+			else if (next.startsWith(""buyskin""))
+			{
+				if (!st.hasMoreTokens())
+				{
+					showDressMeMainPage(player);
+					return;
+				}
+				
+				int skinId = Integer.parseInt(st.nextToken());
+				String type = st.nextToken();
+				int itemId = Integer.parseInt(st.nextToken());
+				if (!player.isInsideZone(ZoneId.TOWN))
+				{
+					
+					player.sendMessage(""Solo Puedes Comprar Skin En Ciudad."");
+					player.sendPacket(new ExShowScreenMessage(""Solo Puedes Comprar Skin En Ciudad."", 2000));
+					player.sendPacket(new PlaySound(""ItemSound3.sys_impossible""));
+					showSkinList(player, type, page);
+					return;
+				}
+				
+				SkinPackage sp = null;
+				
+				switch (type.toLowerCase())
+				{
+					case ""armor"":
+						sp = DressMeData.getInstance().getArmorSkinsPackage(skinId);
+						break;
+					case ""weapon"":
+						sp = DressMeData.getInstance().getWeaponSkinsPackage(skinId);
+						
+						if (player.getActiveWeaponItem() == null)
+						{
+							player.sendMessage(""You can't buy this skin without a weapon."");
+							player.sendPacket(new ExShowScreenMessage(""You can't buy this skin without a weapon."", 2000));
+							player.sendPacket(new PlaySound(""ItemSound3.sys_impossible""));
+							showSkinList(player, type, page);
+							return;
+						}
+						
+						ItemInstance skinWeapon = null;
+						if (ItemData.getInstance().getTemplate(itemId) != null)
+						{
+							skinWeapon = ItemData.getInstance().createDummyItem(itemId);
+							
+							if (!checkWeapons(player, skinWeapon, WeaponType.BOW, WeaponType.BOW) //
+								|| !checkWeapons(player, skinWeapon, WeaponType.SWORD, WeaponType.SWORD) //
+								|| !checkWeapons(player, skinWeapon, WeaponType.BLUNT, WeaponType.BLUNT) //
+								|| !checkWeapons(player, skinWeapon, WeaponType.DAGGER, WeaponType.DAGGER) //
+								|| !checkWeapons(player, skinWeapon, WeaponType.POLE, WeaponType.POLE) //
+								|| !checkWeapons(player, skinWeapon, WeaponType.DUAL, WeaponType.DUAL) //
+								|| !checkWeapons(player, skinWeapon, WeaponType.DUALFIST, WeaponType.DUALFIST) //
+								|| !checkWeapons(player, skinWeapon, WeaponType.BIGSWORD, WeaponType.BIGSWORD) //
+								|| !checkWeapons(player, skinWeapon, WeaponType.FIST, WeaponType.FIST) //
+								|| !checkWeapons(player, skinWeapon, WeaponType.BIGBLUNT, WeaponType.BIGBLUNT))
+							{
+								player.sendMessage(""This skin is not suitable for your weapon type."");
+								player.sendPacket(new ExShowScreenMessage(""This skin is not suitable for your weapon type."", 2000));
+								player.sendPacket(new PlaySound(""ItemSound3.sys_impossible""));
+								showSkinList(player, type, page);
+								return;
+							}
+						}
+						break;
+					case ""hair"":
+						sp = DressMeData.getInstance().getHairSkinsPackage(skinId);
+						break;
+					case ""face"":
+						sp = DressMeData.getInstance().getFaceSkinsPackage(skinId);
+						break;
+					case ""shield"":
+						sp = DressMeData.getInstance().getShieldSkinsPackage(skinId);
+						if (player.getActiveWeaponItem() == null)
+						{
+							player.sendMessage(""You can't buy this skin without a weapon."");
+							player.sendPacket(new ExShowScreenMessage(""You can't buy this skin without a weapon."", 2000));
+							player.sendPacket(new PlaySound(""ItemSound3.sys_impossible""));
+							showSkinList(player, type, page);
+							return;
+						}
+						
+						ItemInstance skinShield = null;
+						if (ItemData.getInstance().getTemplate(itemId) != null)
+						{
+							skinShield = ItemData.getInstance().createDummyItem(itemId);
+							
+							if (!checkWeapons(player, skinShield, WeaponType.BOW, WeaponType.BOW) //
+								|| !checkWeapons(player, skinShield, WeaponType.POLE, WeaponType.POLE) //
+								|| !checkWeapons(player, skinShield, WeaponType.DUAL, WeaponType.DUAL) //
+								|| !checkWeapons(player, skinShield, WeaponType.DUALFIST, WeaponType.DUALFIST) //
+								|| !checkWeapons(player, skinShield, WeaponType.BIGSWORD, WeaponType.BIGSWORD) //
+								|| !checkWeapons(player, skinShield, WeaponType.FIST, WeaponType.FIST) //
+								|| !checkWeapons(player, skinShield, WeaponType.BIGBLUNT, WeaponType.BIGBLUNT))
+							{
+								player.sendMessage(""This skin is not suitable for your weapon type."");
+								player.sendPacket(new ExShowScreenMessage(""This skin is not suitable for your weapon type."", 2000));
+								player.sendPacket(new PlaySound(""ItemSound3.sys_impossible""));
+								showSkinList(player, type, page);
+								return;
+							}
+						}
+						break;
+				}
+				
+				if (sp == null)
+				{
+					player.sendMessage(""There is no such skin."");
+					player.sendPacket(new ExShowScreenMessage(""There is no such skin."", 2000));
+					player.sendPacket(new PlaySound(""ItemSound3.sys_impossible""));
+					showSkinList(player, type, page);
+					return;
+				}
+				
+				if (player.destroyItemByItemId(sp.getPriceId(), sp.getPriceCount(), true))
+				{
+					player.sendMessage(""You have successfully purchased "" + sp.getName() + "" skin."");
+					player.sendPacket(new ExShowScreenMessage(""You have successfully purchased "" + sp.getName() + "" skin."", 2000));
+					
+					switch (type.toLowerCase())
+					{
+						case ""armor"":
+							player.buyArmorSkin(skinId);
+							player.setArmorSkinOption(skinId);
+							break;
+						case ""weapon"":
+							player.buyWeaponSkin(skinId);
+							player.setWeaponSkinOption(skinId);
+							break;
+						case ""hair"":
+							player.buyHairSkin(skinId);
+							player.setHairSkinOption(skinId);
+							break;
+						case ""face"":
+							player.buyFaceSkin(skinId);
+							player.setFaceSkinOption(skinId);
+							break;
+						case ""shield"":
+							player.buyShieldSkin(skinId);
+							player.setShieldSkinOption(skinId);
+							break;
+					}
+					
+					player.broadcastUserInfo();
+				}
+				showSkinList(player, type, page);
+			}
+			else if (next.startsWith(""tryskin""))
+			{
+				
+				int skinId = Integer.parseInt(st.nextToken());
+				
+				String type = st.nextToken();
+				
+				if (player.isTryingSkin())
+				{
+					player.sendMessage(""You are already trying a skin."");
+					player.sendPacket(new ExShowScreenMessage(""You are already trying a skin."", 2000));
+					player.sendPacket(new PlaySound(""ItemSound3.sys_impossible""));
+					showSkinList(player, type, page);
+					return;
+				}
+				
+				player.setIsTryingSkin(true);
+				
+				int oldArmorSkinId = player.getArmorSkinOption();
+				int oldWeaponSkinId = player.getWeaponSkinOption();
+				int oldHairSkinId = player.getHairSkinOption();
+				int oldFaceSkinId = player.getFaceSkinOption();
+				int oldShieldSkinId = player.getShieldSkinOption();
+				
+				switch (type.toLowerCase())
+				{
+					case ""armor"":
+						player.setArmorSkinOption(skinId);
+						break;
+					case ""weapon"":
+						player.setWeaponSkinOption(skinId);
+						break;
+					case ""hair"":
+						player.setHairSkinOption(skinId);
+						break;
+					case ""face"":
+						player.setFaceSkinOption(skinId);
+						break;
+					case ""shield"":
+						
+						player.setShieldSkinOption(skinId);
+						
+						break;
+				}
+				
+				player.broadcastUserInfo();
+				showSkinList(player, type, page);
+				
+				ThreadPool.schedule(() ->
+				{
+					switch (type.toLowerCase())
+					{
+						case ""armor"":
+							player.setArmorSkinOption(oldArmorSkinId);
+							break;
+						case ""weapon"":
+							player.setWeaponSkinOption(oldWeaponSkinId);
+							break;
+						case ""hair"":
+							player.setHairSkinOption(oldHairSkinId);
+							break;
+						case ""face"":
+							player.setFaceSkinOption(oldFaceSkinId);
+							break;
+						case ""shield"":
+							player.setShieldSkinOption(oldShieldSkinId);
+							break;
+					}
+					
+					player.broadcastUserInfo();
+					player.setIsTryingSkin(false);
+				}, 5000);
+			}
+			else if (next.startsWith(""setskin""))
+			{
+				int id = Integer.parseInt(st.nextToken());
+				String type = st.nextToken();
+				int itemId = Integer.parseInt(st.nextToken());
+				
+				if (player.isTryingSkin())
+				{
+					player.sendMessage(""You can't do this while trying skins."");
+					player.sendPacket(new ExShowScreenMessage(""You can't do this while trying skins."", 2000));
+					player.sendPacket(new PlaySound(""ItemSound3.sys_impossible""));
+					showMySkinList(player, page);
+					return;
+				}
+				if (!player.isInsideZone(ZoneId.TOWN))
+				{
+					
+					player.sendMessage(""Solo Puedes Equiparte La Skin En Ciudad."");
+					player.sendPacket(new ExShowScreenMessage(""Solo Puedes Equiparte La Skin En Ciudad."", 2000));
+					player.sendPacket(new PlaySound(""ItemSound3.sys_impossible""));
+					showSkinList(player, type, page);
+					return;
+				}
+				
+				if (type.toLowerCase().contains(""armor"") && player.hasEquippedArmorSkin(String.valueOf(id)) || type.toLowerCase().contains(""weapon"") && player.hasEquippedWeaponSkin(String.valueOf(id)) || type.toLowerCase().contains(""hair"") && player.hasEquippedHairSkin(String.valueOf(id)) || type.toLowerCase().contains(""face"") && player.hasEquippedFaceSkin(String.valueOf(id)))
+				{
+					player.sendMessage(""You are already equipped this skin."");
+					player.sendPacket(new ExShowScreenMessage(""You are already equipped this skin."", 2000));
+					player.sendPacket(new PlaySound(""ItemSound3.sys_impossible""));
+					showMySkinList(player, page);
+					return;
+				}
+				
+				switch (type.toLowerCase())
+				{
+					case ""armor"":
+						player.setArmorSkinOption(id);
+						break;
+					case ""weapon"":
+						if (player.getActiveWeaponItem() == null)
+						{
+							player.sendMessage(""You can't use this skin without a weapon."");
+							player.sendPacket(new ExShowScreenMessage(""You can't use this skin without a weapon."", 2000));
+							player.sendPacket(new PlaySound(""ItemSound3.sys_impossible""));
+							showMySkinList(player, page);
+							return;
+						}
+						
+						ItemInstance skinWeapon = null;
+						if (ItemData.getInstance().getTemplate(itemId) != null)
+						{
+							skinWeapon = ItemData.getInstance().createDummyItem(itemId);
+							
+							if (!checkWeapons(player, skinWeapon, WeaponType.BOW, WeaponType.BOW) //
+								|| !checkWeapons(player, skinWeapon, WeaponType.SWORD, WeaponType.SWORD) //
+								|| !checkWeapons(player, skinWeapon, WeaponType.BLUNT, WeaponType.BLUNT) //
+								|| !checkWeapons(player, skinWeapon, WeaponType.DAGGER, WeaponType.DAGGER) //
+								|| !checkWeapons(player, skinWeapon, WeaponType.POLE, WeaponType.POLE) //
+								|| !checkWeapons(player, skinWeapon, WeaponType.DUAL, WeaponType.DUAL) //
+								|| !checkWeapons(player, skinWeapon, WeaponType.DUALFIST, WeaponType.DUALFIST) //
+								|| !checkWeapons(player, skinWeapon, WeaponType.BIGSWORD, WeaponType.BIGSWORD) //
+								|| !checkWeapons(player, skinWeapon, WeaponType.FIST, WeaponType.FIST) //
+								|| !checkWeapons(player, skinWeapon, WeaponType.BIGBLUNT, WeaponType.BIGBLUNT))
+							{
+								player.sendMessage(""This skin is not suitable for your weapon type."");
+								player.sendPacket(new ExShowScreenMessage(""This skin is not suitable for your weapon type."", 2000));
+								player.sendPacket(new PlaySound(""ItemSound3.sys_impossible""));
+								showMySkinList(player, page);
+								return;
+							}
+							
+							player.setWeaponSkinOption(id);
+						}
+						break;
+					case ""hair"":
+						player.setHairSkinOption(id);
+						break;
+					case ""face"":
+						player.setFaceSkinOption(id);
+						break;
+					case ""shield"":
+						if (player.getActiveWeaponItem() == null)
+						{
+							player.sendMessage(""You can't use this skin without a weapon."");
+							player.sendPacket(new ExShowScreenMessage(""You can't use this skin without a weapon."", 2000));
+							player.sendPacket(new PlaySound(""ItemSound3.sys_impossible""));
+							showMySkinList(player, page);
+							return;
+						}
+						
+						ItemInstance skinShield = null;
+						if (ItemData.getInstance().getTemplate(itemId) != null)
+						{
+							skinShield = ItemData.getInstance().createDummyItem(itemId);
+							
+							if (!checkWeapons(player, skinShield, WeaponType.BOW, WeaponType.BOW) //
+								|| !checkWeapons(player, skinShield, WeaponType.POLE, WeaponType.POLE) //
+								|| !checkWeapons(player, skinShield, WeaponType.DUAL, WeaponType.DUAL) //
+								|| !checkWeapons(player, skinShield, WeaponType.DUALFIST, WeaponType.DUALFIST) //
+								|| !checkWeapons(player, skinShield, WeaponType.BIGSWORD, WeaponType.BIGSWORD) //
+								|| !checkWeapons(player, skinShield, WeaponType.FIST, WeaponType.FIST) //
+								|| !checkWeapons(player, skinShield, WeaponType.BIGBLUNT, WeaponType.BIGBLUNT))
+							{
+								player.sendMessage(""This skin is not suitable for your weapon type."");
+								player.sendPacket(new ExShowScreenMessage(""This skin is not suitable for your weapon type."", 2000));
+								player.sendPacket(new PlaySound(""ItemSound3.sys_impossible""));
+								showMySkinList(player, page);
+								return;
+							}
+							
+							player.setShieldSkinOption(id);
+						}
+						
+						break;
+				}
+				
+				player.broadcastUserInfo();
+				showMySkinList(player, page);
+			}
+			
+		}
+		
 		else if (_command.startsWith(""player_help ""))
 		{
 			final String path = _command.substring(12);
@@ -627,4 +1050,261 @@
 		}
 	}
 	
+	public static String getItemNameById(int itemId)
+	{
+		Item item = ItemData.getInstance().getTemplate(itemId);
+		
+		String itemName = ""NoName"";
+		
+		if (itemId != 0)
+		{
+			itemName = item.getName();
+		}
+		
+		return itemName;
+	}
+	
+	public static void showDressMeMainPage(Player player)
+	{
+		NpcHtmlMessage htm = new NpcHtmlMessage(1);
+		String text = HTMLData.getInstance().getHtm(player.getLocale(), ""html/dressme/index.htm"");
+		
+		htm.setHtml(text);
+		
+		{
+			htm.replace(""%time%"", sdf.format(new Date(System.currentTimeMillis())));
+			htm.replace(""%dat%"", (new SimpleDateFormat(""dd/MM/yyyy"")).format(new Date(System.currentTimeMillis())));
+			
+		}
+		
+		player.sendPacket(htm);
+	}
+	
+	static SimpleDateFormat sdf = new SimpleDateFormat(""HH:mm"");
+	
+	private static void showSkinList(Player player, String type, int page)
+	{
+		NpcHtmlMessage html = new NpcHtmlMessage(1);
+		
+		html.setFile(player.getLocale(), ""html/dressme/allskins.htm"");
+		
+		html.replace(""%time%"", sdf.format(new Date(System.currentTimeMillis())));
+		html.replace(""%dat%"", (new SimpleDateFormat(""dd/MM/yyyy"")).format(new Date(System.currentTimeMillis())));
+		
+		final int ITEMS_PER_PAGE = 8;
+		
+		int myPage = 1;
+		int i = 0;
+		int shown = 0;
+		boolean hasMore = false;
+		int itemId = 0;
+		
+		final StringBuilder sb = new StringBuilder();
+		
+		List<SkinPackage> tempList = null;
+		switch (type.toLowerCase())
+		{
+			case ""armor"":
+				tempList = DressMeData.getInstance().getArmorSkinOptions().values().stream().filter(s -> !player.hasArmorSkin(s.getId())).collect(Collectors.toList());
+				break;
+			case ""weapon"":
+				tempList = DressMeData.getInstance().getWeaponSkinOptions().values().stream().filter(s -> !player.hasWeaponSkin(s.getId())).collect(Collectors.toList());
+				break;
+			case ""hair"":
+				tempList = DressMeData.getInstance().getHairSkinOptions().values().stream().filter(s -> !player.hasHairSkin(s.getId())).collect(Collectors.toList());
+				break;
+			case ""face"":
+				tempList = DressMeData.getInstance().getFaceSkinOptions().values().stream().filter(s -> !player.hasFaceSkin(s.getId())).collect(Collectors.toList());
+				break;
+			case ""shield"":
+				tempList = DressMeData.getInstance().getShieldSkinOptions().values().stream().filter(s -> !player.hasShieldSkin(s.getId())).collect(Collectors.toList());
+				break;
+		}
+		
+		if (tempList != null && !tempList.isEmpty())
+		{
+			for (SkinPackage sp : tempList)
+			{
+				if (sp == null)
+				{
+					continue;
+				}
+				
+				if (shown == ITEMS_PER_PAGE)
+				{
+					hasMore = true;
+					break;
+				}
+				
+				if (myPage != page)
+				{
+					i++;
+					if (i == ITEMS_PER_PAGE)
+					{
+						myPage++;
+						i = 0;
+					}
+					continue;
+				}
+				
+				if (shown == ITEMS_PER_PAGE)
+				{
+					hasMore = true;
+					break;
+				}
+				
+				switch (type.toLowerCase())
+				{
+					case ""armor"":
+						itemId = sp.getChestId();
+						break;
+					case ""weapon"":
+						itemId = sp.getWeaponId();
+						break;
+					case ""hair"":
+						itemId = sp.getHairId();
+						break;
+					case ""face"":
+						itemId = sp.getFaceId();
+						break;
+					case ""shield"":
+						itemId = sp.getShieldId();
+						break;
+				}
+				
+				sb.append(""<table border=0 cellspacing=0 cellpadding=2 height=36><tr>"");
+				sb.append(""<td width=32 align=center>"" + ""<button width=32 height=32 back="" + IconTable.getIcon(itemId) + "" fore="" + IconTable.getIcon(itemId) + "">"" + ""</td>"");
+				sb.append(""<td width=124>"" + sp.getName() + ""<br1> <font color=999999>Price:</font> <font color=339966>"" + getItemNameById(sp.getPriceId()) + ""</font> (<font color=LEVEL>"" + sp.getPriceCount() + ""</font>)</td>"");
+				sb.append(""<td align=center width=65>"" + ""<button value=\""Buy\"" action=\""bypass -h dressme "" + page + "" buyskin  "" + sp.getId() + "" "" + type + "" "" + itemId + ""\"" width=65 height=19 back=L2UI_ch3.smallbutton2_over fore=L2UI_ch3.smallbutton2>"" + ""</td>"");
+				sb.append(""<td align=center width=65>"" + ""<button value=\""Try\"" action=\""bypass -h dressme "" + page + "" tryskin  "" + sp.getId() + "" "" + type + ""\"" width=65 height=19 back=L2UI_ch3.smallbutton2_over fore=L2UI_ch3.smallbutton2>"" + ""</td>"");
+				
+				sb.append(""</tr></table>"");
+				sb.append(""<img src=\""L2UI.Squaregray\"" width=\""300\"" height=\""1\"">"");
+				shown++;
+			}
+		}
+		
+		sb.append(""<table width=300><tr>"");
+		sb.append(""<td align=center width=70>"" + (page > 1 ? ""<button value=\""< PREV\"" action=\""bypass -h dressme "" + (page - 1) + "" skinlist "" + type + ""\"" width=65 height=19 back=L2UI_ch3.smallbutton2_over fore=L2UI_ch3.smallbutton2>"" : """") + ""</td>"");
+		sb.append(""<td align=center width=140>Page: "" + page + ""</td>"");
+		sb.append(""<td align=center width=70>"" + (hasMore ? ""<button value=\""NEXT >\"" action=\""bypass -h dressme "" + (page + 1) + "" skinlist "" + type + ""\"" width=65 height=19 back=L2UI_ch3.smallbutton2_over fore=L2UI_ch3.smallbutton2>"" : """") + ""</td>"");
+		sb.append(""</tr></table>"");
+		
+		html.replace(""%showList%"", sb.toString());
+		player.sendPacket(html);
+	}
+	
+	private static void showMySkinList(Player player, int page)
+	{
+		NpcHtmlMessage html = new NpcHtmlMessage(1);
+		html.setFile(player.getLocale(), ""html/dressme/myskins.htm"");
+		
+		html.replace(""%time%"", sdf.format(new Date(System.currentTimeMillis())));
+		html.replace(""%dat%"", (new SimpleDateFormat(""dd/MM/yyyy"")).format(new Date(System.currentTimeMillis())));
+		
+		final int ITEMS_PER_PAGE = 8;
+		int itemId = 0;
+		
+		int myPage = 1;
+		int i = 0;
+		int shown = 0;
+		boolean hasMore = false;
+		
+		final StringBuilder sb = new StringBuilder();
+		
+		List<SkinPackage> armors = DressMeData.getInstance().getArmorSkinOptions().values().stream().filter(s -> player.hasArmorSkin(s.getId())).collect(Collectors.toList());
+		List<SkinPackage> weapons = DressMeData.getInstance().getWeaponSkinOptions().values().stream().filter(s -> player.hasWeaponSkin(s.getId())).collect(Collectors.toList());
+		List<SkinPackage> hairs = DressMeData.getInstance().getHairSkinOptions().values().stream().filter(s -> player.hasHairSkin(s.getId())).collect(Collectors.toList());
+		List<SkinPackage> faces = DressMeData.getInstance().getFaceSkinOptions().values().stream().filter(s -> player.hasFaceSkin(s.getId())).collect(Collectors.toList());
+		List<SkinPackage> shield = DressMeData.getInstance().getShieldSkinOptions().values().stream().filter(s -> player.hasShieldSkin(s.getId())).collect(Collectors.toList());
+		
+		List<SkinPackage> list = Stream.concat(armors.stream(), weapons.stream()).collect(Collectors.toList());
+		shield.stream().collect(Collectors.toList());
+		List<SkinPackage> list2 = Stream.concat(hairs.stream(), shield.stream()).collect(Collectors.toList());
+		List<SkinPackage> list3 = faces.stream().collect(Collectors.toList());
+		
+		List<SkinPackage> allLists = Stream.concat(list.stream(), Stream.concat(list2.stream(), list3.stream())).collect(Collectors.toList());
+		
+		if (!allLists.isEmpty())
+		{
+			for (SkinPackage sp : allLists)
+			{
+				if (sp == null)
+				{
+					continue;
+				}
+				
+				if (shown == ITEMS_PER_PAGE)
+				{
+					hasMore = true;
+					break;
+				}
+				
+				if (myPage != page)
+				{
+					i++;
+					if (i == ITEMS_PER_PAGE)
+					{
+						myPage++;
+						i = 0;
+					}
+					continue;
+				}
+				
+				if (shown == ITEMS_PER_PAGE)
+				{
+					hasMore = true;
+					break;
+				}
+				
+				switch (sp.getType().toLowerCase())
+				{
+					case ""armor"":
+						itemId = sp.getChestId();
+						break;
+					case ""weapon"":
+						itemId = sp.getWeaponId();
+						break;
+					case ""hair"":
+						itemId = sp.getHairId();
+						break;
+					case ""face"":
+						itemId = sp.getFaceId();
+						break;
+					case ""shield"":
+						itemId = sp.getShieldId();
+						break;
+				}
+				
+				sb.append(""<table border=0 cellspacing=0 cellpadding=2 height=36><tr>"");
+				sb.append(""<td width=32 align=center>"" + ""<button width=32 height=32 back="" + IconTable.getIcon(itemId) + "" fore="" + IconTable.getIcon(itemId) + "">"" + ""</td>"");
+				sb.append(""<td width=124>"" + sp.getName() + ""</td>"");
+				sb.append(""<td align=center width=65>"" + ""<button value=\""Equip\"" action=\""bypass -h dressme "" + page + "" setskin "" + sp.getId() + "" "" + sp.getType() + "" "" + itemId + ""\"" width=65 height=19 back=L2UI_ch3.smallbutton2_over fore=L2UI_ch3.smallbutton2>"" + ""</td>"");
+				sb.append(""<td align=center width=65>"" + ""<button value=\""Remove\"" action=\""bypass -h dressme "" + page + "" clean "" + sp.getType() + ""\"" width=65 height=19 back=L2UI_ch3.smallbutton2_over fore=L2UI_ch3.smallbutton2>"" + ""</td>"");
+				sb.append(""</tr></table>"");
+				sb.append(""<img src=\""L2UI.Squaregray\"" width=\""300\"" height=\""1\"">"");
+				shown++;
+			}
+		}
+		
+		sb.append(""<table width=300><tr>"");
+		sb.append(""<td align=center width=70>"" + (page > 1 ? ""<button value=\""< PREV\"" action=\""bypass -h dressme "" + (page - 1) + "" myskinlist\"" width=65 height=19 back=L2UI_ch3.smallbutton2_over fore=L2UI_ch3.smallbutton2>"" : """") + ""</td>"");
+		sb.append(""<td align=center width=140>Page: "" + page + ""</td>"");
+		sb.append(""<td align=center width=70>"" + (hasMore ? ""<button value=\""NEXT >\"" action=\""bypass -h dressme "" + (page + 1) + "" myskinlist\"" width=65 height=19 back=L2UI_ch3.smallbutton2_over fore=L2UI_ch3.smallbutton2>"" : """") + ""</td>"");
+		sb.append(""</tr></table>"");
+		
+		html.replace(""%showList%"", sb.toString());
+		player.sendPacket(html);
+	}
+	
+	public static boolean checkWeapons(Player player, ItemInstance skin, WeaponType weapon1, WeaponType weapon2)
+	{
+		if (player.getActiveWeaponItem().getItemType() == weapon1 && skin.getItem().getItemType() != weapon2)
+		{
+			return false;
+		}
+		
+		return true;
+	}
+	
 }
\ No newline at end of file
diff --git java/net/sf/l2j/gameserver/network/serverpackets/CharInfo.java java/net/sf/l2j/gameserver/network/serverpackets/CharInfo.java
index 8fbcb8c..9a3550b 100644
--- java/net/sf/l2j/gameserver/network/serverpackets/CharInfo.java
+++ java/net/sf/l2j/gameserver/network/serverpackets/CharInfo.java
@@ -10,6 +10,9 @@
 import net.sf.l2j.gameserver.model.actor.Summon;
 import net.sf.l2j.gameserver.model.actor.instance.Cubic;
 
+import Base.Skin.DressMeData;
+import Base.Skin.SkinPackage;
+
 public class CharInfo extends L2GameServerPacket
 {
 	private final Player _player;
@@ -45,16 +48,83 @@
 		
 		writeD(_player.getInventory().getItemIdFrom(Paperdoll.HAIRALL));
 		writeD(_player.getInventory().getItemIdFrom(Paperdoll.HEAD));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.RHAND));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.LHAND));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.GLOVES));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.CHEST));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.LEGS));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.FEET));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.CLOAK));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.RHAND));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.HAIR));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.FACE));
+	       if (Config.ALLOW_DRESS_ME_SYSTEM)
+	       {
+	           if (_player.getWeaponSkinOption() > 0 && getWeaponOption(_player.getWeaponSkinOption()) != null)
+	           {
+	               writeD(getWeaponOption(_player.getWeaponSkinOption()).getWeaponId() != 0 ? getWeaponOption(_player.getWeaponSkinOption()).getWeaponId() : _player.getInventory().getItemIdFrom(Paperdoll.RHAND));
+	           }
+	           else
+	           {
+	               writeD(_player.getInventory().getItemIdFrom(Paperdoll.RHAND));
+	           }
+	           
+	           if (_player.getShieldSkinOption() > 0 && getShieldOption(_player.getShieldSkinOption()) != null)
+	           {
+	               writeD(getShieldOption(_player.getShieldSkinOption()).getShieldId() != 0 ? getShieldOption(_player.getShieldSkinOption()).getShieldId() : _player.getInventory().getItemIdFrom(Paperdoll.LHAND));
+	           }
+	           else
+	           {
+	               writeD(_player.getInventory().getItemIdFrom(Paperdoll.LHAND));
+	           }
+	           
+	           if (_player.getArmorSkinOption() > 0 && getArmorOption(_player.getArmorSkinOption()) != null)
+	           {
+	               writeD(getArmorOption(_player.getArmorSkinOption()).getGlovesId() != 0 ? getArmorOption(_player.getArmorSkinOption()).getGlovesId() : _player.getInventory().getItemIdFrom(Paperdoll.GLOVES));
+	               writeD(getArmorOption(_player.getArmorSkinOption()).getChestId() != 0 ? getArmorOption(_player.getArmorSkinOption()).getChestId() : _player.getInventory().getItemIdFrom(Paperdoll.CHEST));
+	               writeD(getArmorOption(_player.getArmorSkinOption()).getLegsId() != 0 ? getArmorOption(_player.getArmorSkinOption()).getLegsId() : _player.getInventory().getItemIdFrom(Paperdoll.LEGS));
+	               writeD(getArmorOption(_player.getArmorSkinOption()).getFeetId() != 0 ? getArmorOption(_player.getArmorSkinOption()).getFeetId() : _player.getInventory().getItemIdFrom(Paperdoll.FEET));
+	           }
+	           else
+	           {
+	               writeD(_player.getInventory().getItemIdFrom(Paperdoll.GLOVES));
+	               writeD(_player.getInventory().getItemIdFrom(Paperdoll.CHEST));
+	               writeD(_player.getInventory().getItemIdFrom(Paperdoll.LEGS));
+	               writeD(_player.getInventory().getItemIdFrom(Paperdoll.FEET));
+	           }
+	           
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.CLOAK));
+	           
+	           if (_player.getWeaponSkinOption() > 0 && getWeaponOption(_player.getWeaponSkinOption()) != null)
+	           {
+	               writeD(getWeaponOption(_player.getWeaponSkinOption()).getWeaponId() != 0 ? getWeaponOption(_player.getWeaponSkinOption()).getWeaponId() : _player.getInventory().getItemIdFrom(Paperdoll.RHAND));
+	           }
+	           else
+	           {
+	               writeD(_player.getInventory().getItemIdFrom(Paperdoll.RHAND));
+	           }
+	           
+	           if (_player.getHairSkinOption() > 0 && getHairOption(_player.getHairSkinOption()) != null)
+	           {
+	               writeD(getHairOption(_player.getHairSkinOption()).getHairId() != 0 ? getHairOption(_player.getHairSkinOption()).getHairId() : _player.getInventory().getItemIdFrom(Paperdoll.HAIR));
+	           }
+	           else
+	           {
+	               writeD(_player.getInventory().getItemIdFrom(Paperdoll.HAIR));
+	           }
+	           
+	           if (_player.getFaceSkinOption() > 0 && getFaceOption(_player.getFaceSkinOption()) != null)
+	           {
+	               writeD(getFaceOption(_player.getFaceSkinOption()).getFaceId() != 0 ? getFaceOption(_player.getFaceSkinOption()).getFaceId() : _player.getInventory().getItemIdFrom(Paperdoll.FACE));
+	           }
+	           else
+	           {
+	               writeD(_player.getInventory().getItemIdFrom(Paperdoll.FACE));
+	           }
+	           
+	       }
+	       else {
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.RHAND));
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.LHAND));
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.GLOVES));
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.CHEST));
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.LEGS));
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.FEET));
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.CLOAK));
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.RHAND));
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.HAIR));
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.FACE));
+	       }
 		
 		writeH(0x00);
 		writeH(0x00);
@@ -161,4 +231,30 @@
 		writeD(_player.getAppearance().getTitleColor());
 		writeD(CursedWeaponManager.getInstance().getCurrentStage(_player.getCursedWeaponEquippedId()));
 	}
+	
+	   public SkinPackage getArmorOption(int option)
+	   {
+	      return (DressMeData.getInstance().getArmorSkinsPackage(option));
+	   }
+
+	   public SkinPackage getWeaponOption(int option)
+	   {
+	      return DressMeData.getInstance().getWeaponSkinsPackage(option);
+	   }
+
+	   public SkinPackage getHairOption(int option)
+	   {
+	      return DressMeData.getInstance().getHairSkinsPackage(option);
+	   }
+
+	   public SkinPackage getFaceOption(int option)
+	   {
+	      return DressMeData.getInstance().getFaceSkinsPackage(option);
+	   }
+
+	   public SkinPackage getShieldOption(int option)
+	   {
+	      return DressMeData.getInstance().getShieldSkinsPackage(option);
+	   }	
+	
 }
\ No newline at end of file
diff --git java/net/sf/l2j/gameserver/network/serverpackets/CharSelectInfo.java java/net/sf/l2j/gameserver/network/serverpackets/CharSelectInfo.java
index ce21f4e..9713494 100644
--- java/net/sf/l2j/gameserver/network/serverpackets/CharSelectInfo.java
+++ java/net/sf/l2j/gameserver/network/serverpackets/CharSelectInfo.java
@@ -8,12 +8,16 @@
 
 import net.sf.l2j.commons.pool.ConnectionPool;
 
+import net.sf.l2j.Config;
 import net.sf.l2j.gameserver.data.sql.ClanTable;
 import net.sf.l2j.gameserver.enums.Paperdoll;
 import net.sf.l2j.gameserver.model.CharSelectSlot;
 import net.sf.l2j.gameserver.model.pledge.Clan;
 import net.sf.l2j.gameserver.network.GameClient;
 
+import Base.Skin.DressMeData;
+import Base.Skin.SkinPackage;
+
 public class CharSelectInfo extends L2GameServerPacket
 {
 	private static final String SELECT_INFOS = ""SELECT obj_Id, char_name, level, maxHp, curHp, maxMp, curMp, face, hairStyle, hairColor, sex, heading, x, y, z, exp, sp, karma, pvpkills, pkkills, clanid, race, classid, deletetime, title, accesslevel, lastAccess, base_class FROM characters WHERE account_name=?"";
@@ -111,16 +115,76 @@
 			writeD(slot.getPaperdollObjectId(Paperdoll.RFINGER));
 			writeD(slot.getPaperdollObjectId(Paperdoll.LFINGER));
 			writeD(slot.getPaperdollObjectId(Paperdoll.HEAD));
-			writeD(slot.getPaperdollObjectId(Paperdoll.RHAND));
-			writeD(slot.getPaperdollObjectId(Paperdoll.LHAND));
-			writeD(slot.getPaperdollObjectId(Paperdoll.GLOVES));
-			writeD(slot.getPaperdollObjectId(Paperdoll.CHEST));
-			writeD(slot.getPaperdollObjectId(Paperdoll.LEGS));
-			writeD(slot.getPaperdollObjectId(Paperdoll.FEET));
-			writeD(slot.getPaperdollObjectId(Paperdoll.CLOAK));
-			writeD(slot.getPaperdollObjectId(Paperdoll.RHAND));
-			writeD(slot.getPaperdollObjectId(Paperdoll.HAIR));
-			writeD(slot.getPaperdollObjectId(Paperdoll.FACE));
+			if (Config.ALLOW_DRESS_ME_SYSTEM)
+			{
+				if (slot.getWeaponSkinOption() > 0 && getWeaponOption(slot.getWeaponSkinOption()) != null)
+				{
+					writeD(getWeaponOption(slot.getWeaponSkinOption()).getWeaponId() != 0 ? getWeaponOption(slot.getWeaponSkinOption()).getWeaponId() : slot.getPaperdollObjectId(Paperdoll.RHAND));
+				}
+				else
+				{
+					writeD(slot.getPaperdollObjectId(Paperdoll.RHAND));
+				}
+				
+				writeD(slot.getPaperdollObjectId(Paperdoll.LHAND));
+				
+				if (slot.getArmorSkinOption() > 0 && getArmorOption(slot.getArmorSkinOption()) != null)
+				{
+					writeD(getArmorOption(slot.getArmorSkinOption()).getGlovesId() != 0 ? getArmorOption(slot.getArmorSkinOption()).getGlovesId() : slot.getPaperdollObjectId(Paperdoll.GLOVES));
+					writeD(getArmorOption(slot.getArmorSkinOption()).getChestId() != 0 ? getArmorOption(slot.getArmorSkinOption()).getChestId() : slot.getPaperdollObjectId(Paperdoll.CHEST));
+					writeD(getArmorOption(slot.getArmorSkinOption()).getLegsId() != 0 ? getArmorOption(slot.getArmorSkinOption()).getLegsId() : slot.getPaperdollObjectId(Paperdoll.LEGS));
+					writeD(getArmorOption(slot.getArmorSkinOption()).getFeetId() != 0 ? getArmorOption(slot.getArmorSkinOption()).getFeetId() : slot.getPaperdollObjectId(Paperdoll.FEET));
+				}
+				else
+				{
+					writeD(slot.getPaperdollObjectId(Paperdoll.GLOVES));
+					writeD(slot.getPaperdollObjectId(Paperdoll.CHEST));
+					writeD(slot.getPaperdollObjectId(Paperdoll.LEGS));
+					writeD(slot.getPaperdollObjectId(Paperdoll.FEET));
+				}
+				
+				writeD(slot.getPaperdollObjectId(Paperdoll.CLOAK));
+				
+				if (slot.getWeaponSkinOption() > 0 && getWeaponOption(slot.getWeaponSkinOption()) != null)
+				{
+					writeD(getWeaponOption(slot.getWeaponSkinOption()).getWeaponId() != 0 ? getWeaponOption(slot.getWeaponSkinOption()).getWeaponId() : slot.getPaperdollObjectId(Paperdoll.RHAND));
+				}
+				else
+				{
+					writeD(slot.getPaperdollObjectId(Paperdoll.RHAND));
+				}
+				
+				if (slot.getHairSkinOption() > 0 && getHairOption(slot.getHairSkinOption()) != null)
+				{
+					writeD(getHairOption(slot.getHairSkinOption()).getHairId() != 0 ? getHairOption(slot.getHairSkinOption()).getHairId() : slot.getPaperdollObjectId(Paperdoll.HAIR));
+				}
+				else
+				{
+					writeD(slot.getPaperdollObjectId(Paperdoll.HAIR));
+				}
+				
+				if (slot.getFaceSkinOption() > 0 && getFaceOption(slot.getFaceSkinOption()) != null)
+				{
+					writeD(getFaceOption(slot.getFaceSkinOption()).getFaceId() != 0 ? getFaceOption(slot.getFaceSkinOption()).getFaceId() : slot.getPaperdollObjectId(Paperdoll.FACE));
+				}
+				else
+				{
+					writeD(slot.getPaperdollObjectId(Paperdoll.FACE));
+				}
+			}
+			else
+			{
+				writeD(slot.getPaperdollObjectId(Paperdoll.RHAND));
+				writeD(slot.getPaperdollObjectId(Paperdoll.LHAND));
+				writeD(slot.getPaperdollObjectId(Paperdoll.GLOVES));
+				writeD(slot.getPaperdollObjectId(Paperdoll.CHEST));
+				writeD(slot.getPaperdollObjectId(Paperdoll.LEGS));
+				writeD(slot.getPaperdollObjectId(Paperdoll.FEET));
+				writeD(slot.getPaperdollObjectId(Paperdoll.CLOAK));
+				writeD(slot.getPaperdollObjectId(Paperdoll.RHAND));
+				writeD(slot.getPaperdollObjectId(Paperdoll.HAIR));
+				writeD(slot.getPaperdollObjectId(Paperdoll.FACE));
+			}
 			
 			writeD(slot.getPaperdollItemId(Paperdoll.HAIRALL));
 			writeD(slot.getPaperdollItemId(Paperdoll.REAR));
@@ -129,16 +193,76 @@
 			writeD(slot.getPaperdollItemId(Paperdoll.RFINGER));
 			writeD(slot.getPaperdollItemId(Paperdoll.LFINGER));
 			writeD(slot.getPaperdollItemId(Paperdoll.HEAD));
-			writeD(slot.getPaperdollItemId(Paperdoll.RHAND));
-			writeD(slot.getPaperdollItemId(Paperdoll.LHAND));
-			writeD(slot.getPaperdollItemId(Paperdoll.GLOVES));
-			writeD(slot.getPaperdollItemId(Paperdoll.CHEST));
-			writeD(slot.getPaperdollItemId(Paperdoll.LEGS));
-			writeD(slot.getPaperdollItemId(Paperdoll.FEET));
-			writeD(slot.getPaperdollItemId(Paperdoll.CLOAK));
-			writeD(slot.getPaperdollItemId(Paperdoll.RHAND));
-			writeD(slot.getPaperdollItemId(Paperdoll.HAIR));
-			writeD(slot.getPaperdollItemId(Paperdoll.FACE));
+			if (Config.ALLOW_DRESS_ME_SYSTEM)
+			{
+				if (slot.getWeaponSkinOption() > 0 && getWeaponOption(slot.getWeaponSkinOption()) != null)
+				{
+					writeD(getWeaponOption(slot.getWeaponSkinOption()).getWeaponId() != 0 ? getWeaponOption(slot.getWeaponSkinOption()).getWeaponId() : slot.getPaperdollItemId(Paperdoll.RHAND));
+				}
+				else
+				{
+					writeD(slot.getPaperdollItemId(Paperdoll.RHAND));
+				}
+				
+				writeD(slot.getPaperdollItemId(Paperdoll.LHAND));
+				
+				if (slot.getArmorSkinOption() > 0 && getArmorOption(slot.getArmorSkinOption()) != null)
+				{
+					writeD(getArmorOption(slot.getArmorSkinOption()).getGlovesId() != 0 ? getArmorOption(slot.getArmorSkinOption()).getGlovesId() : slot.getPaperdollItemId(Paperdoll.GLOVES));
+					writeD(getArmorOption(slot.getArmorSkinOption()).getChestId() != 0 ? getArmorOption(slot.getArmorSkinOption()).getChestId() : slot.getPaperdollItemId(Paperdoll.CHEST));
+					writeD(getArmorOption(slot.getArmorSkinOption()).getLegsId() != 0 ? getArmorOption(slot.getArmorSkinOption()).getLegsId() : slot.getPaperdollItemId(Paperdoll.LEGS));
+					writeD(getArmorOption(slot.getArmorSkinOption()).getFeetId() != 0 ? getArmorOption(slot.getArmorSkinOption()).getFeetId() : slot.getPaperdollItemId(Paperdoll.FEET));
+				}
+				else
+				{
+					writeD(slot.getPaperdollItemId(Paperdoll.GLOVES));
+					writeD(slot.getPaperdollItemId(Paperdoll.CHEST));
+					writeD(slot.getPaperdollItemId(Paperdoll.LEGS));
+					writeD(slot.getPaperdollItemId(Paperdoll.FEET));
+				}
+				
+				writeD(slot.getPaperdollItemId(Paperdoll.CLOAK));
+				
+				if (slot.getWeaponSkinOption() > 0 && getWeaponOption(slot.getWeaponSkinOption()) != null)
+				{
+					writeD(getWeaponOption(slot.getWeaponSkinOption()).getWeaponId() != 0 ? getWeaponOption(slot.getWeaponSkinOption()).getWeaponId() : slot.getPaperdollItemId(Paperdoll.RHAND));
+				}
+				else
+				{
+					writeD(slot.getPaperdollItemId(Paperdoll.RHAND));
+				}
+				
+				if (slot.getHairSkinOption() > 0 && getHairOption(slot.getHairSkinOption()) != null)
+				{
+					writeD(getHairOption(slot.getHairSkinOption()).getHairId() != 0 ? getHairOption(slot.getHairSkinOption()).getHairId() : slot.getPaperdollItemId(Paperdoll.HAIR));
+				}
+				else
+				{
+					writeD(slot.getPaperdollItemId(Paperdoll.HAIR));
+				}
+				
+				if (slot.getFaceSkinOption() > 0 && getFaceOption(slot.getFaceSkinOption()) != null)
+				{
+					writeD(getFaceOption(slot.getFaceSkinOption()).getFaceId() != 0 ? getFaceOption(slot.getFaceSkinOption()).getFaceId() : slot.getPaperdollItemId(Paperdoll.FACE));
+				}
+				else
+				{
+					writeD(slot.getPaperdollItemId(Paperdoll.FACE));
+				}
+			}
+			else
+			{
+				writeD(slot.getPaperdollItemId(Paperdoll.RHAND));
+				writeD(slot.getPaperdollItemId(Paperdoll.LHAND));
+				writeD(slot.getPaperdollItemId(Paperdoll.GLOVES));
+				writeD(slot.getPaperdollItemId(Paperdoll.CHEST));
+				writeD(slot.getPaperdollItemId(Paperdoll.LEGS));
+				writeD(slot.getPaperdollItemId(Paperdoll.FEET));
+				writeD(slot.getPaperdollItemId(Paperdoll.CLOAK));
+				writeD(slot.getPaperdollItemId(Paperdoll.RHAND));
+				writeD(slot.getPaperdollItemId(Paperdoll.HAIR));
+				writeD(slot.getPaperdollItemId(Paperdoll.FACE));
+			}
 			
 			writeD(slot.getHairStyle());
 			writeD(slot.getHairColor());
@@ -235,6 +359,7 @@
 					}
 					
 					slot.setClassId(activeClassId);
+					loadCharacterDressMeInfo(slot, objectId);
 					
 					// Get the augmentation for equipped weapon.
 					final int weaponObjId = slot.getPaperdollObjectId(Paperdoll.RHAND);
@@ -273,4 +398,49 @@
 		
 		return new CharSelectSlot[0];
 	}
+	
+	private static void loadCharacterDressMeInfo(final CharSelectSlot charInfopackage, final int objectId)
+	{
+		try (Connection con = ConnectionPool.getConnection();
+			PreparedStatement statement = con.prepareStatement(""SELECT obj_Id, armor_skins, armor_skin_option, weapon_skins, weapon_skin_option, hair_skins, hair_skin_option, face_skins, face_skin_option FROM characters_dressme_data WHERE obj_id=?""))
+		{
+			
+			statement.setInt(1, objectId);
+			try (ResultSet chardata = statement.executeQuery())
+			{
+				if (chardata.next())
+				{
+					charInfopackage.setArmorSkinOption(chardata.getInt(""armor_skin_option""));
+					charInfopackage.setWeaponSkinOption(chardata.getInt(""weapon_skin_option""));
+					charInfopackage.setHairSkinOption(chardata.getInt(""hair_skin_option""));
+					charInfopackage.setFaceSkinOption(chardata.getInt(""face_skin_option""));
+				}
+			}
+		}
+		catch (final Exception e)
+		{
+			e.printStackTrace();
+		}
+	}
+	
+	public SkinPackage getArmorOption(int option)
+	{
+		return (DressMeData.getInstance().getArmorSkinsPackage(option));
+	}
+	
+	public SkinPackage getWeaponOption(int option)
+	{
+		return DressMeData.getInstance().getWeaponSkinsPackage(option);
+	}
+	
+	public SkinPackage getHairOption(int option)
+	{
+		return DressMeData.getInstance().getHairSkinsPackage(option);
+	}
+	
+	public SkinPackage getFaceOption(int option)
+	{
+		return DressMeData.getInstance().getFaceSkinsPackage(option);
+	}
+	
 }
\ No newline at end of file
diff --git java/net/sf/l2j/gameserver/network/serverpackets/UserInfo.java java/net/sf/l2j/gameserver/network/serverpackets/UserInfo.java
index 4468bde..636be18 100644
--- java/net/sf/l2j/gameserver/network/serverpackets/UserInfo.java
+++ java/net/sf/l2j/gameserver/network/serverpackets/UserInfo.java
@@ -9,6 +9,9 @@
 import net.sf.l2j.gameserver.model.actor.Summon;
 import net.sf.l2j.gameserver.model.actor.instance.Cubic;
 
+import Base.Skin.DressMeData;
+import Base.Skin.SkinPackage;
+
 public class UserInfo extends L2GameServerPacket
 {
 	private final Player _player;
@@ -61,16 +64,83 @@
 		writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.RFINGER));
 		writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.LFINGER));
 		writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.HEAD));
-		writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.RHAND));
-		writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.LHAND));
-		writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.GLOVES));
-		writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.CHEST));
-		writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.LEGS));
-		writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.FEET));
-		writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.CLOAK));
-		writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.RHAND));
-		writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.HAIR));
-		writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.FACE));
+	      if (Config.ALLOW_DRESS_ME_SYSTEM)
+	      {
+	          if (_player.getWeaponSkinOption() > 0 && getWeaponOption(_player.getWeaponSkinOption()) != null)
+	          {
+	              writeD(getWeaponOption(_player.getWeaponSkinOption()).getWeaponId() != 0 ? getWeaponOption(_player.getWeaponSkinOption()).getWeaponId() : _player.getInventory().getItemObjectIdFrom(Paperdoll.RHAND));
+	          }
+	          else
+	          {
+	              writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.RHAND));
+	          }
+	          
+	          if (_player.getShieldSkinOption() > 0 && getShieldOption(_player.getShieldSkinOption()) != null)
+	          {
+	              writeD(getShieldOption(_player.getShieldSkinOption()).getShieldId() != 0 ? getShieldOption(_player.getShieldSkinOption()).getShieldId() : _player.getInventory().getItemObjectIdFrom(Paperdoll.LHAND));
+	          }
+	          else
+	          {
+	              writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.LHAND));
+	          }
+	          
+	          if (_player.getArmorSkinOption() > 0 && getArmorOption(_player.getArmorSkinOption()) != null)
+	          {
+	              writeD(getArmorOption(_player.getArmorSkinOption()).getGlovesId() != 0 ? getArmorOption(_player.getArmorSkinOption()).getGlovesId() : _player.getInventory().getItemObjectIdFrom(Paperdoll.GLOVES));
+	              writeD(getArmorOption(_player.getArmorSkinOption()).getChestId() != 0 ? getArmorOption(_player.getArmorSkinOption()).getChestId() : _player.getInventory().getItemObjectIdFrom(Paperdoll.CHEST));
+	              writeD(getArmorOption(_player.getArmorSkinOption()).getLegsId() != 0 ? getArmorOption(_player.getArmorSkinOption()).getLegsId() : _player.getInventory().getItemObjectIdFrom(Paperdoll.LEGS));
+	              writeD(getArmorOption(_player.getArmorSkinOption()).getFeetId() != 0 ? getArmorOption(_player.getArmorSkinOption()).getFeetId() : _player.getInventory().getItemObjectIdFrom(Paperdoll.FEET));
+	          }
+	          else
+	          {
+	              writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.GLOVES));
+	              writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.CHEST));
+	              writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.LEGS));
+	              writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.FEET));
+	          }
+	          
+	          writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.CLOAK));
+	          
+	          if (_player.getWeaponSkinOption() > 0 && getWeaponOption(_player.getWeaponSkinOption()) != null)
+	          {
+	              writeD(getWeaponOption(_player.getWeaponSkinOption()).getWeaponId() != 0 ? getWeaponOption(_player.getWeaponSkinOption()).getWeaponId() : _player.getInventory().getItemObjectIdFrom(Paperdoll.RHAND));
+	          }
+	          else
+	          {
+	              writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.RHAND));
+	          }
+	          
+	          if (_player.getHairSkinOption() > 0 && getHairOption(_player.getHairSkinOption()) != null)
+	          {
+	              writeD(getHairOption(_player.getHairSkinOption()).getHairId() != 0 ? getHairOption(_player.getHairSkinOption()).getHairId() : _player.getInventory().getItemObjectIdFrom(Paperdoll.HAIR));
+	          }
+	          else
+	          {
+	              writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.HAIR));
+	          }
+	          
+	          if (_player.getFaceSkinOption() > 0 && getFaceOption(_player.getFaceSkinOption()) != null)
+	          {
+	              writeD(getFaceOption(_player.getFaceSkinOption()).getFaceId() != 0 ? getFaceOption(_player.getFaceSkinOption()).getFaceId() : _player.getInventory().getItemObjectIdFrom(Paperdoll.FACE));
+	          }
+	          else
+	          {
+	              writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.FACE));
+	          }
+	          
+	      }
+	      else {
+	          writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.RHAND));
+	          writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.LHAND));
+	          writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.GLOVES));
+	          writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.CHEST));
+	          writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.LEGS));
+	          writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.FEET));
+	          writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.CLOAK));
+	          writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.RHAND));
+	          writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.HAIR));
+	          writeD(_player.getInventory().getItemObjectIdFrom(Paperdoll.FACE));
+	      }
 		
 		writeD(_player.getInventory().getItemIdFrom(Paperdoll.HAIRALL));
 		writeD(_player.getInventory().getItemIdFrom(Paperdoll.REAR));
@@ -79,16 +149,83 @@
 		writeD(_player.getInventory().getItemIdFrom(Paperdoll.RFINGER));
 		writeD(_player.getInventory().getItemIdFrom(Paperdoll.LFINGER));
 		writeD(_player.getInventory().getItemIdFrom(Paperdoll.HEAD));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.RHAND));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.LHAND));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.GLOVES));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.CHEST));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.LEGS));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.FEET));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.CLOAK));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.RHAND));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.HAIR));
-		writeD(_player.getInventory().getItemIdFrom(Paperdoll.FACE));
+	       if (Config.ALLOW_DRESS_ME_SYSTEM)
+	       {
+	           if (_player.getWeaponSkinOption() > 0 && getWeaponOption(_player.getWeaponSkinOption()) != null)
+	           {
+	               writeD(getWeaponOption(_player.getWeaponSkinOption()).getWeaponId() != 0 ? getWeaponOption(_player.getWeaponSkinOption()).getWeaponId() : _player.getInventory().getItemIdFrom(Paperdoll.RHAND));
+	           }
+	           else
+	           {
+	               writeD(_player.getInventory().getItemIdFrom(Paperdoll.RHAND));
+	           }
+	           
+	           if (_player.getShieldSkinOption() > 0 && getShieldOption(_player.getShieldSkinOption()) != null)
+	           {
+	               writeD(getShieldOption(_player.getShieldSkinOption()).getShieldId() != 0 ? getShieldOption(_player.getShieldSkinOption()).getShieldId() : _player.getInventory().getItemIdFrom(Paperdoll.LHAND));
+	           }
+	           else
+	           {
+	               writeD(_player.getInventory().getItemIdFrom(Paperdoll.LHAND));
+	           }
+	           
+	           if (_player.getArmorSkinOption() > 0 && getArmorOption(_player.getArmorSkinOption()) != null)
+	           {
+	               writeD(getArmorOption(_player.getArmorSkinOption()).getGlovesId() != 0 ? getArmorOption(_player.getArmorSkinOption()).getGlovesId() : _player.getInventory().getItemIdFrom(Paperdoll.GLOVES));
+	               writeD(getArmorOption(_player.getArmorSkinOption()).getChestId() != 0 ? getArmorOption(_player.getArmorSkinOption()).getChestId() : _player.getInventory().getItemIdFrom(Paperdoll.CHEST));
+	               writeD(getArmorOption(_player.getArmorSkinOption()).getLegsId() != 0 ? getArmorOption(_player.getArmorSkinOption()).getLegsId() : _player.getInventory().getItemIdFrom(Paperdoll.LEGS));
+	               writeD(getArmorOption(_player.getArmorSkinOption()).getFeetId() != 0 ? getArmorOption(_player.getArmorSkinOption()).getFeetId() : _player.getInventory().getItemIdFrom(Paperdoll.FEET));
+	           }
+	           else
+	           {
+	               writeD(_player.getInventory().getItemIdFrom(Paperdoll.GLOVES));
+	               writeD(_player.getInventory().getItemIdFrom(Paperdoll.CHEST));
+	               writeD(_player.getInventory().getItemIdFrom(Paperdoll.LEGS));
+	               writeD(_player.getInventory().getItemIdFrom(Paperdoll.FEET));
+	           }
+	           
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.CLOAK));
+	           
+	           if (_player.getWeaponSkinOption() > 0 && getWeaponOption(_player.getWeaponSkinOption()) != null)
+	           {
+	               writeD(getWeaponOption(_player.getWeaponSkinOption()).getWeaponId() != 0 ? getWeaponOption(_player.getWeaponSkinOption()).getWeaponId() : _player.getInventory().getItemIdFrom(Paperdoll.RHAND));
+	           }
+	           else
+	           {
+	               writeD(_player.getInventory().getItemIdFrom(Paperdoll.RHAND));
+	           }
+	           
+	           if (_player.getHairSkinOption() > 0 && getHairOption(_player.getHairSkinOption()) != null)
+	           {
+	               writeD(getHairOption(_player.getHairSkinOption()).getHairId() != 0 ? getHairOption(_player.getHairSkinOption()).getHairId() : _player.getInventory().getItemIdFrom(Paperdoll.HAIR));
+	           }
+	           else
+	           {
+	               writeD(_player.getInventory().getItemIdFrom(Paperdoll.HAIR));
+	           }
+	           
+	           if (_player.getFaceSkinOption() > 0 && getFaceOption(_player.getFaceSkinOption()) != null)
+	           {
+	               writeD(getFaceOption(_player.getFaceSkinOption()).getFaceId() != 0 ? getFaceOption(_player.getFaceSkinOption()).getFaceId() : _player.getInventory().getItemIdFrom(Paperdoll.FACE));
+	           }
+	           else
+	           {
+	               writeD(_player.getInventory().getItemIdFrom(Paperdoll.FACE));
+	           }
+	           
+	       }
+	       else {
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.RHAND));
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.LHAND));
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.GLOVES));
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.CHEST));
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.LEGS));
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.FEET));
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.CLOAK));
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.RHAND));
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.HAIR));
+	           writeD(_player.getInventory().getItemIdFrom(Paperdoll.FACE));
+	       }
 		
 		writeH(0x00);
 		writeH(0x00);
@@ -212,4 +349,28 @@
 		writeD(_player.getAppearance().getTitleColor());
 		writeD(CursedWeaponManager.getInstance().getCurrentStage(_player.getCursedWeaponEquippedId()));
 	}
+    public SkinPackage getArmorOption(int option)
+    {
+        return (DressMeData.getInstance().getArmorSkinsPackage(option));
+    }
+    
+    public SkinPackage getWeaponOption(int option)
+    {
+        return DressMeData.getInstance().getWeaponSkinsPackage(option);
+    }
+    
+    public SkinPackage getHairOption(int option)
+    {
+        return DressMeData.getInstance().getHairSkinsPackage(option);
+    }
+    
+    public SkinPackage getFaceOption(int option)
+    {
+        return DressMeData.getInstance().getFaceSkinsPackage(option);
+    }
+    
+    public SkinPackage getShieldOption(int option)
+    {
+        return DressMeData.getInstance().getShieldSkinsPackage(option);
+    }
 }
\ No newline at end of file
diff --git server/gameserver/data/html/dressme/allskins.htm server/gameserver/data/html/dressme/allskins.htm
new file mode 100644
index 0000000..c865d6a
--- /dev/null
+++ server/gameserver/data/html/dressme/allskins.htm
@@ -0,0 +1,20 @@
+<html>
+<body>
+<img src=""L2UI.Squaregray"" width=""300"" height=""1"">
+<table width=300 border=0 cellspacing=0 cellpadding=1 bgcolor=000000 height=15>
+<tr>
+<td width=36 align=center></td>
+<td width=120 align=left>Name</td>
+<td width=65 align=left>Actions</td>
+</tr>
+</table>
+<img src=""L2UI.Squaregray"" width=""300"" height=""1"">
+
+%showList%
+
+<center>
+<button value=""Back"" action=""bypass -h custom_dressme_back"" width=65 height=19 back=""L2UI_ch3.smallbutton2_over"" fore=""L2UI_ch3.smallbutton2"">
+</center>
+
+</body>
+</html>
\ No newline at end of file
diff --git server/gameserver/data/html/dressme/index.htm server/gameserver/data/html/dressme/index.htm
new file mode 100644
index 0000000..f03dd39
--- /dev/null
+++ server/gameserver/data/html/dressme/index.htm
@@ -0,0 +1,26 @@
+<html>
+<title>Skins Shop</title>
+<body>
+<br>
+<center>Skins:</center>
+
+<table width=300>
+<tr>
+<td align=center><button value=""Armor buy/try"" action=""bypass -h dressme 1 skinlist armor"" width=134 height=19 back=""L2UI_ch3.BigButton3_over"" fore=""L2UI_ch3.BigButton3""></td>
+</tr>
+<tr>
+<td align=center><button value=""Weapon buy/try"" action=""bypass -h dressme 1 skinlist weapon"" width=134 height=19 back=""L2UI_ch3.BigButton3_over"" fore=""L2UI_ch3.BigButton3""></td>
+</tr>
+<tr>
+<td align=center><button value=""Hair buy/try"" action=""bypass -h dressme 1 skinlist hair"" width=134 height=19 back=""L2UI_ch3.BigButton3_over"" fore=""L2UI_ch3.BigButton3""></td>
+</tr>
+<tr>
+<td align=center><button value=""Face buy/try"" action=""bypass -h dressme 1 skinlist face"" width=134 height=19 back=""L2UI_ch3.BigButton3_over"" fore=""L2UI_ch3.BigButton3""></td>
+</tr>
+<tr>
+<td align=center><button value=""Shield buy/try"" action=""bypass -h dressme 1 skinlist shield"" width=134 height=19 back=""L2UI_ch3.BigButton3_over"" fore=""L2UI_ch3.BigButton3""></td>
+</tr>
+<tr>
+<td align=center><button value=""My skins"" action=""bypass -h dressme 1 myskinlist"" width=134 height=19 back=""L2UI_ch3.BigButton3_over"" fore=""L2UI_ch3.BigButton3""></td>
+</tr>
+</table>
diff --git server/gameserver/data/html/dressme/myskins.htm server/gameserver/data/html/dressme/myskins.htm
new file mode 100644
index 0000000..2547f1e
--- /dev/null
+++ server/gameserver/data/html/dressme/myskins.htm
@@ -0,0 +1,21 @@
+<html>
+<body>
+<img src=""L2UI.Squaregray"" width=""300"" height=""1"">
+<table border=0 cellspacing=0 cellpadding=2 bgcolor=000000 height=20>
+<tr>
+<td width=32 align=center></td>
+<td width=203 align=left>Name</td>
+<td width=65 align=left>Actions</td>
+</tr>
+</table>
+<img src=""L2UI.Squaregray"" width=""300"" height=""1"">
+
+%showList%
+
+<br>
+<br>
+<center>
+<button value=""Back"" action=""bypass -h custom_dressme_back"" width=65 height=19 back=""L2UI_ch3.Btn1_normalOn"" fore=""L2UI_ch3.Btn1_normal"">
+</center>
+</body>
+</html>
\ No newline at end of file
diff --git server/gameserver/data/xml/dressme.xml server/gameserver/data/xml/dressme.xml
new file mode 100644
index 0000000..cd823a3
--- /dev/null
+++ server/gameserver/data/xml/dressme.xml
@@ -0,0 +1,22 @@
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<list>
+	<skin type=""armor""> <!-- Armors -->
+		<type id=""1"" name=""Draconic Armor"" chestId=""6379"" legsId=""0"" glovesId=""6380"" feetId=""6381"" priceId=""57"" priceCount=""100""/>
+		<type id=""2"" name=""Blue Wolf Leather Armor"" chestId=""2391"" legsId=""0"" glovesId=""0"" feetId=""0"" priceId=""57"" priceCount=""100""/>
+	</skin>
+	<skin type=""weapon""> <!-- Weapons -->
+		<type id=""1"" name=""Draconic Bow"" weaponId=""7575"" priceId=""57"" priceCount=""100""/>
+		<type id=""2"" name=""Arcana Mace"" weaponId=""6608""  priceId=""57"" priceCount=""100""/>
+		<type id=""3"" name=""Keshanberk*Keshanberk"" weaponId=""5704"" priceId=""57"" priceCount=""100""/>
+	</skin>
+	<skin type=""hair""> <!-- Hairs -->
+		<type id=""1"" name=""Cat Ear"" hairId=""6843"" priceId=""57"" priceCount=""100""/>
+	</skin>
+	<skin type=""face""> <!-- Faces -->
+		<type id=""1"" name=""Party Mask"" faceId=""5808"" priceId=""57"" priceCount=""100""/>
+	</skin>
+	<skin type=""shield""> <!-- Shields -->
+		<type id=""1"" name=""Shield of Night"" shieldId=""2498"" priceId=""57"" priceCount=""100""/>
+		<type id=""2"" name=""Imperial Shield"" shieldId=""6377"" priceId=""57"" priceCount=""100""/>
+	</skin>
+</list>
\ No newline at end of file
"
MxqXFfBE,фенвик get,nq1s788,C++,Saturday 6th of April 2024 10:06:04 AM CDT,"#include<iostream>

using namespace std;

vector<int> t;

int get_p(int x) {
    int answ = 0;
    for (; x >= 0; x = (x & (x + 1)) - 1) 
        answ += t[x];
    return answ;
}

int get(int l, int r) {
    return get_p(r) - get_p(l - 1);
}

int main() {
    int n;
    cin >> n;
    vector<int> a(n);
    for (auto& e : a) cin >> e;
    t.assign(n, 0);
    return 0;
}"
b1ndBUuP,https://api4.thetvdb.com/v4/series/352408/episodes/default/eng,filebot,JSON,Saturday 6th of April 2024 09:57:50 AM CDT,"{
   ""status"":""success"",
   ""data"":{
      ""id"":352408,
      ""name"":""転生したらスライムだった件"",
      ""slug"":""that-time-i-got-reincarnated-as-a-slime"",
      ""image"":""https://artworks.thetvdb.com/banners/posters/5bb2b28057ade.jpg"",
      ""nameTranslations"":[
         ""deu"",
         ""eng"",
         ""fra"",
         ""ita"",
         ""jpn"",
         ""kor"",
         ""pol"",
         ""por"",
         ""rus"",
         ""spa"",
         ""zho"",
         ""zhtw"",
         ""pt"",
         ""ukr""
      ],
      ""overviewTranslations"":[
         ""deu"",
         ""eng"",
         ""fra"",
         ""ita"",
         ""jpn"",
         ""kor"",
         ""pol"",
         ""por"",
         ""rus"",
         ""spa"",
         ""zho"",
         ""zhtw"",
         ""pt"",
         ""ukr""
      ],
      ""aliases"":[
         {
            ""language"":""jpn"",
            ""name"":""転生したらスライムだった件 (2020)""
         },
         {
            ""language"":""jpn"",
            ""name"":""転生したらスライムだった件 第2期""
         },
         {
            ""language"":""jpn"",
            ""name"":""転生したらスライムだった件 第2期 第1部""
         },
         {
            ""language"":""fra"",
            ""name"":""TenSura""
         },
         {
            ""language"":""fra"",
            ""name"":""That Time I Got Reincarnated as a Slime""
         },
         {
            ""language"":""fra"",
            ""name"":""Tensei Shitara Slime Datta Ken""
         },
         {
            ""language"":""spa"",
            ""name"":""Aquella vez que me convertí en Slime""
         },
         {
            ""language"":""eng"",
            ""name"":""Slime Isekai""
         },
         {
            ""language"":""eng"",
            ""name"":""TenSura""
         },
         {
            ""language"":""eng"",
            ""name"":""Tensei Slime""
         },
         {
            ""language"":""eng"",
            ""name"":""Tensei Shitara Slime Datta Ken""
         },
         {
            ""language"":""eng"",
            ""name"":""My Reincarnation as a Slime""
         },
         {
            ""language"":""eng"",
            ""name"":""Regarding Reincarnated to Slime""
         },
         {
            ""language"":""ita"",
            ""name"":""Mi sono reincarnato in uno slime""
         },
         {
            ""language"":""ita"",
            ""name"":""Vita da slime""
         },
         {
            ""language"":""ukr"",
            ""name"":""Коли я переродився слизом""
         },
         {
            ""language"":""ukr"",
            ""name"":""Про моє переродження в слиз""
         },
         {
            ""language"":""ukr"",
            ""name"":""Pro moe pererodzhennya v slyz""
         },
         {
            ""language"":""ukr"",
            ""name"":""Koly ya pererodyvsya slyzom""
         },
         {
            ""language"":""ukr"",
            ""name"":""Moe pererodzhennya v Slyz""
         }
      ],
      ""firstAired"":""2018-10-02"",
      ""lastAired"":""2024-09-13"",
      ""nextAired"":""2024-04-12"",
      ""score"":282089,
      ""status"":{
         ""id"":1,
         ""name"":""Continuing"",
         ""recordType"":""series"",
         ""keepUpdated"":true
      },
      ""originalCountry"":""jpn"",
      ""originalLanguage"":""jpn"",
      ""defaultSeasonType"":1,
      ""isOrderRandomized"":false,
      ""lastUpdated"":""2024-04-06 14:28:38"",
      ""averageRuntime"":24,
      ""episodes"":[
         {
            ""id"":7104556,
            ""seriesId"":352408,
            ""name"":""Tales: Veldora's Journal"",
            ""aired"":""2019-03-26"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""After being taken into Rimuru's body, Ifrit awakens to find the Storm Dragon Veldora standing before him. Veldora calls Ifrit to where he is, delighted to find a new conversation partner. Thus the two of them begin to watch over Rimuru's actions from within him and recaps events of the season while in a discussion with Veldora as they play Shogi."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/7104556.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":1,
            ""seasonNumber"":0,
            ""lastUpdated"":""2024-03-30 17:10:39"",
            ""finaleType"":""season"",
            ""airsAfterSeason"":1,
            ""year"":""2019""
         },
         {
            ""id"":7205861,
            ""seriesId"":352408,
            ""name"":""The Tragedy of M?"",
            ""aired"":""2019-07-09"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""One day, when Shuna and Shion are fighting over Rimuru's squishy slime body as usual, Rimuru comes up with the idea to make a cushion in the shape of his slime form. He travels around Tempest to see if his friends know of any good materials he can use, and he learns that a special type of sand found along a lake shore in the forest is exactly what he's looking for. So he sets out to collect some sand... but a monster is waiting for him by the lake!"",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/7205861.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":2,
            ""seasonNumber"":0,
            ""lastUpdated"":""2024-03-30 16:36:38"",
            ""finaleType"":null,
            ""airsAfterSeason"":1,
            ""year"":""2019""
         },
         {
            ""id"":7205862,
            ""seriesId"":352408,
            ""name"":""Hey! Butts!"",
            ""aired"":""2019-12-04"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Being physically incapable of sleeping, Rimuru takes an experimental sleeping pill Vesta invented, and dreams about his attempt to make Sumo Wrestling Tempest's national sport."",
            ""overviewTranslations"":null,
            ""image"":""/banners/series/352408/episodes/7205862.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":3,
            ""seasonNumber"":0,
            ""lastUpdated"":""2024-03-30 16:37:03"",
            ""finaleType"":null,
            ""airsAfterSeason"":1,
            ""year"":""2019""
         },
         {
            ""id"":7651072,
            ""seriesId"":352408,
            ""name"":""Extra: Rimuru's Glamorous Life as a Teacher, Part 1"",
            ""aired"":""2020-03-07"",
            ""runtime"":25,
            ""nameTranslations"":null,
            ""overview"":""Rimuru, who is teaching Shizu's students as a substitute at the Kingdom of Ingrassia's Freedom Academy, takes part in an orientation in actual field combat in the school's annual outdoor training event. Transfixed by the prize he gets if he wins, he accepts a challenge by the teacher Jeff. However, an enemy appears before the students..."",
            ""overviewTranslations"":null,
            ""image"":""/banners/series/352408/episodes/5e7d60149b599.jpg"",
            ""imageType"":11,
            ""isMovie"":1,
            ""seasons"":null,
            ""number"":4,
            ""seasonNumber"":0,
            ""lastUpdated"":""2024-03-31 16:53:13"",
            ""finaleType"":null,
            ""airsAfterSeason"":1,
            ""year"":""2020"",
            ""linkedMovie"":344921
         },
         {
            ""id"":7733387,
            ""seriesId"":352408,
            ""name"":""Extra: Rimuru's Glamorous Life as a Teacher, Part 2"",
            ""aired"":""2020-07-09"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Rimuru, now a teacher at the Freedom Academy in the Kingdom of Ingrassia, has become involved in the school's outdoor training event with his class. The outdoor training event is an annual competition in which the students of each class guard the teachers on a journey to a nearby town. Rimuru is assigned to Class A, while his own students in Class S escort the young Tiss-sensei. All the students are eager to show how much their daily training has paid off, but the situation turns around when they're attacked by thieves!"",
            ""overviewTranslations"":null,
            ""image"":""/banners/series/352408/episodes/5f06c238d81d1.jpg"",
            ""imageType"":11,
            ""isMovie"":1,
            ""seasons"":null,
            ""number"":5,
            ""seasonNumber"":0,
            ""lastUpdated"":""2023-04-27 17:32:33"",
            ""finaleType"":null,
            ""airsAfterSeason"":1,
            ""year"":""2020"",
            ""linkedMovie"":344922
         },
         {
            ""id"":7733391,
            ""seriesId"":352408,
            ""name"":""Extra: Rimuru's Glamorous Life as a Teacher, Part 3"",
            ""aired"":""2020-11-27"",
            ""runtime"":23,
            ""nameTranslations"":null,
            ""overview"":""Rimuru and the Class S students have made it through the first exercise of the Freedom Academy's annual outdoor training event. Class S has arrived first at the destination, the mansion of Count Guratol, and now they're ready to begin the second exercise, a cave exploration... but awaiting them there are thieves who hope to kidnap the students and make a fortune returning them for ransom money. Just when it seems like Rimuru's students have fought them off thanks to the skills he taught them, they realize a monster is lurking among the thieves!"",
            ""overviewTranslations"":null,
            ""image"":""/banners/series/352408/episodes/5fc1807bd3847.jpg"",
            ""imageType"":11,
            ""isMovie"":1,
            ""seasons"":null,
            ""number"":6,
            ""seasonNumber"":0,
            ""lastUpdated"":""2023-04-27 17:38:29"",
            ""finaleType"":null,
            ""airsAfterSeason"":1,
            ""year"":""2020"",
            ""linkedMovie"":344923
         },
         {
            ""id"":8122688,
            ""seriesId"":352408,
            ""name"":""Digression: Hinata Sakaguchi"",
            ""aired"":""2021-01-05"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""A merchant from the east brings Hinata Sakaguchi a new book. In it she finds surprising information about the Jura Tempest Federation, a nation of monsters. As a former student of Shizu's, what goes through Hinata's mind upon learning about the existence of Rimuru? This special episode gives some hints as to what's coming in the new arc, as well as a look back at Rimuru's exploits thus far."",
            ""overviewTranslations"":null,
            ""image"":""/banners/series/352408/episodes/5ffab5eb01544.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":7,
            ""seasonNumber"":0,
            ""lastUpdated"":""2024-03-30 17:08:42"",
            ""finaleType"":null,
            ""airsBeforeSeason"":2,
            ""airsBeforeEpisode"":1,
            ""year"":""2021""
         },
         {
            ""id"":8517725,
            ""seriesId"":352408,
            ""name"":""Tales: Veldora's Journal 2"",
            ""aired"":""2021-06-29"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""The deadly encounter with Hinata, the attack from the Kingdom of Falmuth, and the newly born Demon Lord... Veldora and Ifrit have been watching these events unfold from within Rimuru's Stomach. Two years have passed since Rimuru and Veldora first met in the cave, and their promise is about to be fulfilled. \r\nThe two of them leisurely look back on the past years of Tempest, and are frightened by \""something\""."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/8517725/screencap/60ded9c67ab06.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":8,
            ""seasonNumber"":0,
            ""lastUpdated"":""2024-03-30 16:35:13"",
            ""finaleType"":""season"",
            ""airsBeforeSeason"":2,
            ""airsBeforeEpisode"":13,
            ""year"":""2021""
         },
         {
            ""id"":9684709,
            ""seriesId"":352408,
            ""name"":""Coleus' Dream, part 1"",
            ""aired"":""2022-11-25"",
            ""runtime"":108,
            ""nameTranslations"":null,
            ""overview"":""The story centers on a new country named Raja, located to the west of Tempest. Rimuru and his companions get involved in a long-running conspiracy that swirls around a girl with a mysterious power. Rimuru and his commander Benimaru also encounter another ogre survivor named Hiiro, who used to hold Benimaru in high regard.  An incredible adventure packed with new characters begins. The power of bonds will be put to the test!"",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/9684709/screencap/645131336e97d.jpg"",
            ""imageType"":11,
            ""isMovie"":1,
            ""seasons"":null,
            ""number"":9,
            ""seasonNumber"":0,
            ""lastUpdated"":""2024-01-02 09:02:29"",
            ""finaleType"":null,
            ""airsAfterSeason"":2,
            ""year"":""2022"",
            ""linkedMovie"":333167
         },
         {
            ""id"":9684710,
            ""seriesId"":352408,
            ""name"":""Coleus' Dream, part 2"",
            ""aired"":""2023-11-01"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Yuuki asks Rimuru to investigate the Kingdom of Coleus, where a battle for succession has pitted the kingdom's two princes against each other. Rimuru launches a covert operation to sneak into Coleus and find out what's driving this conflict."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/9684710/screencap/654144fb0b929.jpg"",
            ""imageType"":11,
            ""isMovie"":1,
            ""seasons"":null,
            ""number"":10,
            ""seasonNumber"":0,
            ""lastUpdated"":""2024-02-29 17:49:56"",
            ""finaleType"":null,
            ""airsBeforeSeason"":2,
            ""airsBeforeEpisode"":1,
            ""year"":""2023"",
            ""linkedMovie"":344989
         },
         {
            ""id"":9684711,
            ""seriesId"":352408,
            ""name"":""Coleus' Dream, part 3"",
            ""aired"":""2023-11-01"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Aslan visits Rimuru to thank him for saving his sister, Zenobia. They discuss her illness and Souther's behavior, and begin to suspect that the court physician, Gustav, is behind both. Rimuru dons yet another disguise to investigate further."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/9684711/screencap/6541452b700a3.jpg"",
            ""imageType"":11,
            ""isMovie"":1,
            ""seasons"":null,
            ""number"":11,
            ""seasonNumber"":0,
            ""lastUpdated"":""2024-02-29 17:51:27"",
            ""finaleType"":null,
            ""airsBeforeSeason"":2,
            ""airsBeforeEpisode"":1,
            ""year"":""2023"",
            ""linkedMovie"":344990
         },
         {
            ""id"":9754331,
            ""seriesId"":352408,
            ""name"":""Visions of Coleus: Purple and Roses"",
            ""aired"":""2023-11-01"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Rimuru confirms that it was Gustav who cursed Zenobia with illness. It turns out he and his accomplice, Carl, are Archdemons plotting to manifest their god using Zenobia as a vessel. Can Rimuru stop them before the Kingdom of Coleus is lost?"",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/9754331/screencap/65414583646af.jpg"",
            ""imageType"":11,
            ""isMovie"":1,
            ""seasons"":null,
            ""number"":12,
            ""seasonNumber"":0,
            ""lastUpdated"":""2024-02-29 17:51:54"",
            ""finaleType"":null,
            ""airsBeforeSeason"":2,
            ""airsBeforeEpisode"":1,
            ""year"":""2023"",
            ""linkedMovie"":344987
         },
         {
            ""id"":9990274,
            ""seriesId"":352408,
            ""name"":""Digression: Diablo's Journal"",
            ""aired"":""2024-03-30"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""After defeating Clayman at Walpurgis, Rimuru officially became a Demon Lord and a member of Octagram. Meanwhile Diablo awaits Rimuru's return in Tempest, and is anxious to learn about his master's activities as soon as possible. A look back at Walpurgis."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/9990274/screencap/6606f7c3832e2.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":13,
            ""seasonNumber"":0,
            ""lastUpdated"":""2024-04-05 23:11:41"",
            ""finaleType"":null,
            ""airsBeforeSeason"":3,
            ""airsBeforeEpisode"":1,
            ""year"":""2024""
         },
         {
            ""id"":6814223,
            ""seriesId"":352408,
            ""name"":""The Storm Dragon, Veldora"",
            ""aired"":""2018-10-02"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Mikami Satoru, a businessman, is stabbed by a criminal on the street and killed. When he regains consciousness in the darkness, he finds that he's been reincarnated as a slime! With nothing better to do, he spends his time devouring all the rare herbs and precious ores he comes across. As he does, he encounters the Storm Dragon Veldora, who was sealed in this cave 300 years ago by a hero's \""Unlimited Imprisonment\"" skill. He's frightened at first, but as they talk, he becomes friends with the long-isolated Veldora."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6814223.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":1,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:53:16"",
            ""finaleType"":null,
            ""year"":""2018""
         },
         {
            ""id"":6843176,
            ""seriesId"":352408,
            ""name"":""Meeting the Goblins"",
            ""aired"":""2018-10-09"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""The slime Mikami and the Storm Dragon Veldora decide to give each other names. Veldora gives the slime Mikami the name \""Rimuru,\"" and Rimuru comes up with a family name for both of them: \""Tempest.\"" Then Rimuru uses his Predator skill to take Veldora into his body and analyze the \""Unlimited Imprisonment\"" seal in hopes of breaking it... but this action sends a shock through the nations surrounding the Great Forest of Jura. With Veldora gone, there's a chance that the larger nations could become bold and invade the smaller provinces. With no knowledge of this, Rimuru leaves the cave and meets some Goblins."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6843176.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":2,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:53:56"",
            ""finaleType"":null,
            ""year"":""2018""
         },
         {
            ""id"":6843178,
            ""seriesId"":352408,
            ""name"":""Battle at the Goblin Village"",
            ""aired"":""2018-10-16"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""After leaving the cave, Rimuru encounters a village of Goblins under attack by a clan of Direwolves. Caught in the heat of the moment, Rimuru agrees to help the Goblins in their battle. That night, the Direwolves arrive to try to take over as the new rulers of the Great Forest of Jura!"",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6843178.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":3,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:54:20"",
            ""finaleType"":null,
            ""year"":""2018""
         },
         {
            ""id"":6843179,
            ""seriesId"":352408,
            ""name"":""In the Kingdom of the Dwarves"",
            ""aired"":""2018-10-23"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Rimuru and his companions visit the Dwarven Kingdom, the Armed Nation of Dwargon, in search of some artisans to help the Goblins learn to supply their own food, shelter, and clothing. However, a skirmish just outside the city gate lands Rimuru and Gobta in a prison cell. Then there's a report of an Armorsaurus in the nearby mines!"",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6843179.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":4,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:54:40"",
            ""finaleType"":null,
            ""year"":""2018""
         },
         {
            ""id"":6843180,
            ""seriesId"":352408,
            ""name"":""Hero King, Gazel Dwargo"",
            ""aired"":""2018-10-30"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Thanks to Rimuru's skill, Kaijin was able to finish all the longswords and deliver them to the king, so the two of them celebrate by heading to a bar staffed by lots of elf girls. One of them reads Rimuru's fortune for fun, and sees an image in her crystal ball of someone she believes Rimuru is destined to be with. As everyone wonders who this person could be, Vesta shows up and starts to hassle Rimuru..."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6843180.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":5,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:54:58"",
            ""finaleType"":null,
            ""year"":""2018""
         },
         {
            ""id"":6843181,
            ""seriesId"":352408,
            ""name"":""Shizu"",
            ""aired"":""2018-11-06"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""One day, in the midst of the improvements on the Goblin Village with the help of Kaijin and the dwarves, Rimuru meets a trio of adventurers from the Guild who've been temporarily joined by a masked woman named Shizu. Shizu turns out to be the person Rimuru is destined to be with, as his fortune said. Shizu also came to this world from Japan, but unlike him, she was summoned here many years ago. So Rimuru uses his Thought Communication skill to show Shizu what Japan looks like today."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6843181.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":6,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:55:44"",
            ""finaleType"":null,
            ""year"":""2018""
         },
         {
            ""id"":6843182,
            ""seriesId"":352408,
            ""name"":""Conqueror of Flames"",
            ""aired"":""2018-11-13"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""The Demon Lord Leon Cromwell summoned Shizu out of Tokyo as it burned during in the air raids, then forced the high-ranked spirit Ifrit to possess her. After taking over Shizu's body, Ifrit begins to rampage."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6843182.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":7,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:56:00"",
            ""finaleType"":null,
            ""year"":""2018""
         },
         {
            ""id"":6843183,
            ""seriesId"":352408,
            ""name"":""Inherited Will"",
            ""aired"":""2018-11-20"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""When Shizu was still with Demon Lord Leon, it was a Hero who rescued her. That Hero was Shizu's inspiration to help as many people as she could for many years. She even worked as a teacher for children who'd come from other worlds. And now, as her time comes to an end, Shizu asks Rimuru for one last favor..."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6843183.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":8,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:56:16"",
            ""finaleType"":null,
            ""year"":""2018""
         },
         {
            ""id"":6843184,
            ""seriesId"":352408,
            ""name"":""Attack of the Ogres"",
            ""aired"":""2018-11-27"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Rimuru and the Goblins' village is developing nicely. The Dwarves are building all kinds of houses and furniture, and the local Goblin Lords have appointed Rigurd as the Goblin King. As Rimuru watches everything come together, he decides to return to the cave and test the skills he received from Shizu. While there, he receives a request for help from Ranga through Thought Communication, and he rushes back to find his friends facing six Ogres. One of them orders Rimuru to \""reveal his true identity.\"" What is going on in the Great Forest of Jura?"",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6843184.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":9,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:56:29"",
            ""finaleType"":null,
            ""year"":""2018""
         },
         {
            ""id"":6843185,
            ""seriesId"":352408,
            ""name"":""The Orc Lord"",
            ""aired"":""2018-12-04"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Six Ogres are all that remain of their clan after an attack by an Orc army. They say that the Orcs were traveling with a mysterious majin who wore plate mail and a clown mask. Rimuru proposes that the Ogres join his ranks, and they accept on the condition that they will get to take down the one leading the Orcs, so Rimuru gives all six of them names. Meanwhile, the Orcs begin to invade the marshlands surrounding Lake Siss that are inhabited by the Lizardmen. So the Lizardman chieftan gives his son, Gabiru, an order..."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6843185.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":10,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:56:39"",
            ""finaleType"":null,
            ""year"":""2018""
         },
         {
            ""id"":6843186,
            ""seriesId"":352408,
            ""name"":""Gabiru is Here!"",
            ""aired"":""2018-12-11"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Rimuru's village has gained Benimaru and the other five Ogres as its newest allies. Soon after, the Lizardman Gabiru visits the village, having heard rumors about it. Gabiru has been visiting Goblin villages throughout the Great Forest of Jura to enlist their aid in fighting off the Orc army. When he faces Ranga with an attitude of provocation, Ranga tells him that if he can defeat Gobta, they'll hear what he has to say..."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6843186.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":11,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:56:54"",
            ""finaleType"":null,
            ""year"":""2018""
         },
         {
            ""id"":6843187,
            ""seriesId"":352408,
            ""name"":""The Gears Spin Out of Control"",
            ""aired"":""2018-12-18"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""The Orc army, led by the Orc Lord, continues its conquest throughout the Great Forest of Jura. The crisis has spurred Treyni of the Dryads, the caretakers of the forest, to take action. She has had her eye on Rimuru after noticing his rise to prominence in the forest, and she wants Rimuru to defeat the Orc Lord."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6843187.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":12,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:57:05"",
            ""finaleType"":null,
            ""year"":""2018""
         },
         {
            ""id"":6932357,
            ""seriesId"":352408,
            ""name"":""The Great Clash"",
            ""aired"":""2018-12-25"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Rimuru and his Goblin riders set out for the marshlands to finalize their alliance with the Lizardmen. On the way, they save a Lizardman who'd been attacked by the Orcs. The victim turns out to be Gabiru's younger sister, who reveals that Gabiru led an insurrection and left to fight the Orc Lord without waiting for the alliance. She also pleads with Rimuru to save Gabiru and the rest of her clan. Meanwhile, Gabiru faces the massive Orc army and is shocked when he witnesses the power of their unique skill, Starved."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6932357.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":13,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:57:14"",
            ""finaleType"":null,
            ""year"":""2018""
         },
         {
            ""id"":6932358,
            ""seriesId"":352408,
            ""name"":""The One Who Devours All"",
            ""aired"":""2019-01-08"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""The majin Gelmud makes his appearance at last. His true goal was to evolve the Orc Lord into the Orc Disaster, a Demon Lord, and have him reign over the Forest of Jura. Upon learning this, the Orc Lord takes action..."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6932358.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":14,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:57:26"",
            ""finaleType"":null,
            ""year"":""2019""
         },
         {
            ""id"":6932359,
            ""seriesId"":352408,
            ""name"":""The Jura Forest Alliance"",
            ""aired"":""2019-01-15"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Post-war arrangements following the battle with the Orcs have begun. At the meeting, Rimuru reveals that he made a promise with the Orc Disaster, Geld, to take all of the Orcs' sins upon himself. When the Ogres and Lizardmen hear this..."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6932359.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":15,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:57:39"",
            ""finaleType"":null,
            ""year"":""2019""
         },
         {
            ""id"":6932361,
            ""seriesId"":352408,
            ""name"":""Demon Lord Milim Attacks"",
            ""aired"":""2019-01-22"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""The Jura Tempest Federation, with Rimuru as its leader, has formed an alliance with the Armed Nation of Dwargon. Just as Rimuru thinks there are only peaceful days ahead, he senses an enormous mass of magical power heading straight for his location at an incredible speed. When the smoke from its collision with the ground clears, standing in its place is a humanoid figure. She is the Demon Mord Milim, the one and only Dragonoid and the one bearing the nickname \""Destroyer.\"" Ranga, Benimaru, and the others who face her are quickly overwhelmed by her power."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6932361.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":16,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:58:25"",
            ""finaleType"":null,
            ""year"":""2019""
         },
         {
            ""id"":6932362,
            ""seriesId"":352408,
            ""name"":""The Gathering"",
            ""aired"":""2019-01-29"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""The Demon Lord Carrion has sent one of his Three Beastketeers, Phobio, on a raid of Rimuru's city. However, Phobio is quickly defeated when Milim meets his attack with her own. Rimuru and his subordinates then ask Phobio why he has come to their town."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6932362.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":17,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:58:34"",
            ""finaleType"":null,
            ""year"":""2019""
         },
         {
            ""id"":6932364,
            ""seriesId"":352408,
            ""name"":""Evil Creeps Closer"",
            ""aired"":""2019-02-05"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Phobio can't restrain his anger toward Milim. He finds himself faced with Footman and Tear, two masked members of the Moderate Harlequin Alliance, who suggest that he become a Demon Lord to take revenge on Milim. They tell him that he can accomplish this using the power of Charybdis. Meanwhile, the Jura Tempest Federation sends Youm out on a journey to make the world believe he was the champion who defeated the Orc Lord."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6932364.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":18,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:58:46"",
            ""finaleType"":null,
            ""year"":""2019""
         },
         {
            ""id"":6945225,
            ""seriesId"":352408,
            ""name"":""Charybdis"",
            ""aired"":""2019-02-12"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Its seal removed, the calamity-class monster Charybdis and its Medalodon minions advance on the capital city of Rimuru. The Jura Tempest Federation combines all its forces under Rimuru to intercept the attack. King Gazel even sends 100 of his Pegasus Knights to aid in the battle. But Charybdis's extra skills Magic Jamming and Ultraspeed Regeneration make it a formidable foe. So Rimuru unleashes his new skill, Gluttony..."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6945225.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":19,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:58:55"",
            ""finaleType"":null,
            ""year"":""2019""
         },
         {
            ""id"":6945226,
            ""seriesId"":352408,
            ""name"":""Yuuki Kagurazaka"",
            ""aired"":""2019-02-19"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""The threat of Charybdis has gone. That night, Rimuru has a dream in which he sees Shizu teaching children at her school in the Kingdom of Ingrassia—a dream showing Shizu's lingering regret. To see her wishes through, Rimuru leaves the Jura Tempest Federation and heads for the capital of the Kingdom of Ingrassia. His first goal is to meet with the Grandmaster of the Guild, Yuuki Kagurazaka, who happens to be a Summon and a former student of Shizu's."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6945226.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":20,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:59:26"",
            ""finaleType"":null,
            ""year"":""2019""
         },
         {
            ""id"":6945227,
            ""seriesId"":352408,
            ""name"":""Shizu-san's Students"",
            ""aired"":""2019-02-26"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Rimuru becomes the new teacher for Shizu's students. However, having been summoned into this world against their will and facing shortened lifespans as a result, the children's feelings are complicated, and they're reluctant to accept Rimuru. So Rimuru proposes a series of mock battles with each of them to ascertain their abilities and allow them to let off steam."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6945227.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":21,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:59:41"",
            ""finaleType"":null,
            ""year"":""2019""
         },
         {
            ""id"":6945228,
            ""seriesId"":352408,
            ""name"":""Conquering the Labyrinth"",
            ""aired"":""2019-03-05"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Rimuru tries to think of a way to save the children of Freedom Academy who are fated to die. The idea he comes up with is to have superior spirits inhabit each of them, as Shizu had, so their lives won't end prematurely. Determined to whatever it takes to save them, Rimuru leads the children to the Dwelling of Spirits, where superior spirits can be found. But as they make their way further inside, a Golem made of magisteel and controlled by the fairy Ramiris stands in their path."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6945228.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":22,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 16:59:53"",
            ""finaleType"":null,
            ""year"":""2019""
         },
         {
            ""id"":6945229,
            ""seriesId"":352408,
            ""name"":""Saved Souls"",
            ""aired"":""2019-03-12"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Rimuru and the children reach the deepest level of the Dwelling of Spirits, where they stand on a pedestal bathed in light to summon superior spirits. Will their summoning be successful? Amidst the uncertainty, the first to attempt the summoning is Gale, followed by Alice, Kenya, Ryota, and finally Chloe. But instead of a spirit, Chloe's summoning brings forth an unknown spiritual form with an immense amount of energy. Just what is this spiritual being? Ramiris seems to sense something about it..."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6945229.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":23,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 17:00:05"",
            ""finaleType"":null,
            ""year"":""2019""
         },
         {
            ""id"":6945230,
            ""seriesId"":352408,
            ""name"":""Black and the Mask"",
            ""aired"":""2019-03-19"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""This story takes place before Rimuru's reincarnation. Shizu, also known as the Conqueror of Flames, responds to an urgent request calling her to the Kingdom of Filtwood. When she reaches the castle, many adventurers are already there. What request could have demanded such a huge gathering? It turns out a demon has been revived, and the adventurers have been called to subjugate it. It is said that more than ten of the most skilled adventurers have already been killed by this demon. But there is more to this request than meets the eye..."",
            ""overviewTranslations"":null,
            ""image"":""/banners/episodes/352408/6945230.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":24,
            ""seasonNumber"":1,
            ""lastUpdated"":""2024-03-30 17:00:14"",
            ""finaleType"":""season"",
            ""year"":""2019""
         },
         {
            ""id"":7496338,
            ""seriesId"":352408,
            ""name"":""Rimuru's Busy Life"",
            ""aired"":""2021-01-12"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Rimuru sends a delegation led by Benimaru to the Animal Kingdom of Eurazania, ruled by the Demon Lord Carrion, also known as the Beastmaster, to establish diplomatic relations after becoming indebted to him in the battle against Charybdis. A delegation from Eurazania is set to arrive in Tempest around the same time, but the Animal Kingdom is a very warlike nation, and Shion is enraged when one of the delegates, Suphia of the Three Beastketeers, makes a belittling remark toward Rimuru. The goal was a friendly relationship, but it takes no time at all for a fight to break out..."",
            ""overviewTranslations"":null,
            ""image"":""/banners/series/352408/episodes/5ffd63f3c46a7.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":1,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 17:52:20"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8109439,
            ""seriesId"":352408,
            ""name"":""Trade with the Animal Kingdom"",
            ""aired"":""2021-01-19"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Despite the initial conflict, Eurazania and Tempest have deemed each other to be worthy of establishing friendly relations, and diplomacy between them officially begins. Tempest agrees to share its industrial techniques in return for Eurazania's agricultural techniques, and Rimuru decides to use the apple brandy produced as a result of this exchange to seek friendly relations with the Armed Nation of Dwargon next. He's accompanied by Shuna and Shion along with the former residents of Dwargon, Kaijin and the three Dwarf brothers, who are welcomed back to their home nation as state guests."",
            ""overviewTranslations"":null,
            ""image"":""/banners/series/352408/episodes/60058eeb7a88b.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":2,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 17:53:02"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8109440,
            ""seriesId"":352408,
            ""name"":""Paradise, Once More"",
            ""aired"":""2021-01-26"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Rimuru completes the two very important duties of a discussion with King Dwargon and a public speech announcing the two nations' friendship to the people. Now it's time to head out for a little fun at the paradise he promised Gobta... while making sure Shuna and Shion don't notice."",
            ""overviewTranslations"":null,
            ""image"":""/banners/series/352408/episodes/600ee153899da.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":3,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 17:53:44"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8118086,
            ""seriesId"":352408,
            ""name"":""The Scheming Kingdom of Falmuth"",
            ""aired"":""2021-02-02"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Tempest is preparing a feast in celebration of Rimuru's return home. Then a newcomer, the majin Myulan, arrives to scope out Tempest on the Demon Lord Clayman's orders, having joined up with Youm's crew as their military advisor in order to enter the nation. Upon arriving, she's surprised to see what a strong nation it is, but continues to talk with its citizens to learn more. Meanwhile, the king of Falmuth, who sees Tempest as a nuisance, conspires with the Western Holy Church in a plot to invade the monster nation."",
            ""overviewTranslations"":null,
            ""image"":""/banners/series/352408/episodes/60183921abe7f.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":4,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 17:54:25"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8150833,
            ""seriesId"":352408,
            ""name"":""Prelude to the Disaster"",
            ""aired"":""2021-02-09"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Following Clayman's orders, Myulan ignores the words of Youm and Grucius, both of whom have fallen in love with her, and activates the Anti-Magic Area spell. At the same time, Reyheim also activates Prison Field. The double barrier prevents Shion and the other fighters of Tempest from fighting as well as usual, and they end up at a disadvantage in their fights with three Otherworlders. Benimaru tries to contact Rimuru, who still hasn't returned, but he can't even get in touch with him due to the barriers."",
            ""overviewTranslations"":null,
            ""image"":""/banners/series/352408/episodes/60216b05c10e5.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":5,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 17:56:44"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8150834,
            ""seriesId"":352408,
            ""name"":""The Beauty Makes Her Move"",
            ""aired"":""2021-02-16"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""At the same time as the attack on Tempest, Rimuru is also under attack. With one look, Rimuru realizes that his assailant is one of Shizu's former students, an Otherworlder, and the woman then introduces herself as the strongest of the Holy Knights, Hinata Sakaguchi. Rimuru is backed into a corner when her Holy Field seals most of his magic. At the same time, Shion and Hakurou, whose magic has been sealed by a similar barrier, are backed into a corner by Shogo and Kyoya."",
            ""overviewTranslations"":null,
            ""image"":""/banners/series/352408/episodes/602b69169d9f6.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":6,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 17:57:30"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8150835,
            ""seriesId"":352408,
            ""name"":""Despair"",
            ""aired"":""2021-02-23"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Rimuru faced grave danger in his battle with Hinata, but he managed to escape in the nick of time by using a doppelganger to take the damage while he rushed back to Tempest. Upon arrival, he found the city in a tragic state, engulfed by blood and smoke. Benimaru tries to capture Myulan, the top suspect behind this disaster, but Youm and Grucius stand in his way. Swallowing his rage and grief, Rimuru realizes who their true enemy is and calmly questions Myulan instead of punishing her."",
            ""overviewTranslations"":null,
            ""image"":""/banners/series/352408/episodes/6033f56054fe3.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":7,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 17:58:25"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8150836,
            ""seriesId"":352408,
            ""name"":""Hope"",
            ""aired"":""2021-03-02"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Rimuru learns about Clayman and the schemes of the Kingdom of Falmuth, but no matter how hard he wishes for it, his fallen comrades and their peaceful lifestyle will never return. He's just about to give up when Eren tells him of a fairy tale that might offer a glimmer of hope. The probability of success is about 3%... but if Rimuru can manage to become a Demon Lord by taking in the souls of 10,000 humans as nourishment, he just might have a chance at bringing his comrades back to life. As Falmuth's army of 20,000 men marches toward Tempest, Rimuru takes hold of that hope and decides to become a Demon Lord."",
            ""overviewTranslations"":null,
            ""image"":""/banners/series/352408/episodes/603d120abb8a2.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":8,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 17:59:07"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8236025,
            ""seriesId"":352408,
            ""name"":""Putting Everything on the Line"",
            ""aired"":""2021-03-09"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""In order to come to terms with his own negligence and revive Shion, Gobzo, and his other fallen comrades, Rimuru reveals that he used to be a human. But his allies think nothing of it and accept him regardless, as if it's the natural thing to do. Filled with gratitude for the warm, accepting environment he's in, Rimuru turns his focus to the army from Falmuth. He entrusts Benimaru and the others to destroy the devices that are generating the enemy's Prison Field while Rimuru himself sets out to attack the advancing army and use them as nourishment to become a Demon Lord."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/8236025/screencap/604725805cf3b.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":9,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 17:59:53"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8236026,
            ""seriesId"":352408,
            ""name"":""Megiddo"",
            ""aired"":""2021-03-16"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""The battle for revenge has begun. Benimaru and his trusted companions carry out their respective missions, while Hakurou and his party face Shogo and Kyoya once again. And Rimuru's fury rains down upon the army from Falmuth."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/8236026/screencap/604f8132f2ce3.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":10,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 18:00:49"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8236027,
            ""seriesId"":352408,
            ""name"":""Birth of a Demon Lord"",
            ""aired"":""2021-03-23"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Rimuru succeeds in collecting enough souls to carry out his plan to evolve, and the Harvest Festival begins. But he's suddenly overcome by intense sleepiness at the same time, so he summons a demon to stop Razen, the one target who escaped alive. Then, upon returning to Tempest after successfully becoming a Demon Lord, Rimuru sets about attempting to revive Shion and the rest of the fallen. Through Raphael, the evolved form of Great Sage, the Secret Arts of Spirit Resurrection and Revival of the Dead are activated..."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/8236027/screencap/6058e453390f3.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":11,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 18:01:33"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8236028,
            ""seriesId"":352408,
            ""name"":""The One Unleashed"",
            ""aired"":""2021-03-30"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Shion and the rest of the fallen are revived, Diablo has joined the team... It seems as if all is going smoothly, but Rimuru then receives a report that Milim has declared war and Eurazania has been destroyed, and there's still the matter of the Western Holy Church's hostility toward monsters, even with Falmuth out of the picture. But at the same time, Raphael informs him that the Appraisal of Unlimited Imprisonment has been completed. At last, two years after Rimuru's reincarnation into this world, he can finally fulfill the first promise he made here: to free Veldora."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/8236028/screencap/6061962da6b06.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":12,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 18:02:15"",
            ""finaleType"":""midseason"",
            ""year"":""2021""
         },
         {
            ""id"":8336715,
            ""seriesId"":352408,
            ""name"":""The Visitors"",
            ""aired"":""2021-07-06"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""After saving his city and inhabitants, Rimuru brings back a very important figure to the people of the Great Forest of Jura. The end of the war between Falmuth and Tempest leads to the next step: reorganizing forces and treaties."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/8336715/screencap/60e4723b8c2b0.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":13,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-03-30 17:04:45"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8336714,
            ""seriesId"":352408,
            ""name"":""A Meeting of Humans and Monsters"",
            ""aired"":""2021-07-13"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Although unforeseen, Rimuru opens a meeting with great leaders from various nations to discuss the steps that will follow the birth of a new Demon Lord."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/8336714/screencap/60edc4b34ca47.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":14,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 17:46:10"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8336716,
            ""seriesId"":352408,
            ""name"":""Ramiris's Warning"",
            ""aired"":""2021-07-20"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""After certain unforeseen events, the conference between monsters and humans continues and the leaders of the nations involved will know the steps that will follow the birth of a new Demon Lord and the return of the Dragon of the Windstorm."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/8336716/screencap/60f6ef2e23602.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":15,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 17:46:39"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8336717,
            ""seriesId"":352408,
            ""name"":""The Congress Dances"",
            ""aired"":""2021-07-27"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Ramiris finally exposes the dire news about Tempest's future, about which he came to warn Rimuru. The confusion is soon resolved, but the situation can be dangerous for other reasons. Everyone then comes together to try to predict Clayman's plans."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/8336717/screencap/610030ec083bf.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":16,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 17:47:12"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8336718,
            ""seriesId"":352408,
            ""name"":""The Eve of Battle"",
            ""aired"":""2021-08-03"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""The announcement of the upcoming event that will bring together several Demon Lords serves as part of the plan to face Clayman. But before that, Rimuru must find a way to save the people of Eurazania, who have become the target of a diabolical plot by Clayman."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/8336718/screencap/61095d64b444b.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":17,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 17:47:39"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8336719,
            ""seriesId"":352408,
            ""name"":""The Demon Lords"",
            ""aired"":""2021-08-10"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""After sending his troops towards Eurazania, Rimuru needs to prepare for the Walpurgis, the great gathering of Demon Lords - and also for the confrontation with Clayman for what he has been doing."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/8336719/screencap/61129533d7666.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":18,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-03-30 17:06:18"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8336720,
            ""seriesId"":352408,
            ""name"":""The Signal to Begin the Banquet"",
            ""aired"":""2021-08-17"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Benimaru is in command of the troops that will face Clayman's army, which invaded the Animal Kingdom. If everything goes according to plan, achieving victory is just a matter of time."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/8336720/screencap/611be123dbaa6.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":19,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 17:48:27"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8336721,
            ""seriesId"":352408,
            ""name"":""On This Land Where It All Happened"",
            ""aired"":""2021-08-24"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Gabiru and the Three Beast Warriors battle Clayman's forces until they encounter formidable opponents. Benimaru will have to take action."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/8336721/screencap/612523ec9db8d.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":20,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 17:49:11"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8432231,
            ""seriesId"":352408,
            ""name"":""Adalman, the Index Finger"",
            ""aired"":""2021-08-31"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""On the other side of the front, Shuna, Souei and Hakurou must face Adalman, one of Clayman's most powerful subjects."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/8432231/screencap/612e5972e2383.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":21,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-03-30 17:06:53"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8432232,
            ""seriesId"":352408,
            ""name"":""Demon Lords' Banquet ~Walpurgis~"",
            ""aired"":""2021-09-07"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""The long-awaited feast of the Demon Lords begins, and Clayman serves the first course: a hate-filled, accusation-filled speech to put Rimuru against the wall."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/8432232/screencap/61379b2bdd2e6.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":22,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 17:49:55"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8432233,
            ""seriesId"":352408,
            ""name"":""Returning from the Brink"",
            ""aired"":""2021-09-14"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Veldora's sudden appearance surprises Rimuru, but this saves him from Milim's attacks. It's time to try to end the battle against Clayman."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/8432233/screencap/6140cf843575f.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":23,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-04-05 17:50:16"",
            ""finaleType"":null,
            ""year"":""2021""
         },
         {
            ""id"":8432234,
            ""seriesId"":352408,
            ""name"":""Octagram"",
            ""aired"":""2021-09-21"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""Clayman awakened as a true demon lord. The fight between Rimuru and the puppet master continues, but the difference in strength is very evident. The battle and its aftermath bring profound changes to the Ten Demon Lords."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/8432234/screencap/6149f441aa422.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":24,
            ""seasonNumber"":2,
            ""lastUpdated"":""2024-03-31 13:07:07"",
            ""finaleType"":""season"",
            ""year"":""2021""
         },
         {
            ""id"":10414027,
            ""seriesId"":352408,
            ""name"":""Demons and Strategies"",
            ""aired"":""2024-04-05"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":""While Rimuru is at the Walpurgis banquet, Diablo goes to the kingdom of Farmus with Yômu and the prisoners in order to take control of the country. Threats, lies and manipulation... The demon will stop at nothing to achieve his ends."",
            ""overviewTranslations"":null,
            ""image"":""/banners/v4/episode/10414027/screencap/661028d7107cc.jpg"",
            ""imageType"":11,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":1,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 14:28:36"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383071,
            ""seriesId"":352408,
            ""name"":""The Saint's Intentions"",
            ""aired"":""2024-04-12"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":2,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-05 16:32:29"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383072,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-04-19"",
            ""runtime"":24,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":3,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-05 16:31:33"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383073,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-04-26"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":4,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:03"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383096,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-05-03"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":5,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:30"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383097,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-05-10"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":6,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:32"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383098,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-05-17"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":7,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:34"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383099,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-05-24"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":8,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:37"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383078,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-05-31"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":9,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:06"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383101,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-06-07"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":10,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:38"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383080,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-06-14"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":11,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:08"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383103,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-06-21"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":12,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:41"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383082,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-06-28"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":13,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:10"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383105,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-07-05"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":14,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:43"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383084,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-07-12"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":15,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:12"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383107,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-07-19"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":16,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:45"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383086,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-07-26"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":17,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:15"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383109,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-08-02"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":18,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:48"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383088,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-08-09"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":19,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:17"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383089,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-08-16"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":20,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:20"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383090,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-08-23"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":21,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:22"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383091,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-08-30"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":22,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:24"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10383092,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-09-06"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":23,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:27"",
            ""finaleType"":null,
            ""year"":""2024""
         },
         {
            ""id"":10403221,
            ""seriesId"":352408,
            ""name"":null,
            ""aired"":""2024-09-13"",
            ""runtime"":null,
            ""nameTranslations"":null,
            ""overview"":null,
            ""overviewTranslations"":null,
            ""image"":null,
            ""imageType"":null,
            ""isMovie"":0,
            ""seasons"":null,
            ""number"":24,
            ""seasonNumber"":3,
            ""lastUpdated"":""2024-04-06 13:23:50"",
            ""finaleType"":""series"",
            ""year"":""2024""
         }
      ],
      ""overview"":""サラリーマン三上悟は通り魔に刺され死亡し、気がつくと異世界に転生していた。\r\nただし、その姿はスライムだった！\r\nリムルという新しいスライム人生を得て、さまざまな種族がうごめくこの世界に放り出され、\r\n「種族問わず楽しく暮らせる国作り」を目指すことになるーー！"",
      ""year"":""2018""
   },
   ""links"":{
      ""prev"":null,
      ""self"":""https://api4.thetvdb.com/v4/series/352408/episodes/default/eng?page=0"",
      ""next"":null,
      ""total_items"":85,
      ""page_size"":500
   }
}"
s7AAtWbM,Aluminum Joinery,Nenogzar,Python,Saturday 6th of April 2024 09:41:42 AM CDT,"def change_price(br, type):
    prices = {
        '90X130': {'count': [30, 60], 'discount': [0.95, 0.92], 'price_per_unit': 110},
        '100X150': {'count': [40, 80], 'discount': [0.94, 0.90], 'price_per_unit': 140},
        '130X180': {'count': [20, 50], 'discount': [0.93, 0.88], 'price_per_unit': 190},
        '200X300': {'count': [20, 50], 'discount': [0.91, 0.86], 'price_per_unit': 250}
    }

    if type in prices:
        price = prices[type]['price_per_unit'] * br
        count_range = prices[type]['count']
        discount_rates = prices[type]['discount']

        if count_range[0] <= br < count_range[1]:
            price *= discount_rates[0]
        elif br >= count_range[1]:
            price *= discount_rates[1]

        return price


br_joinery, type_joinery, type_delivery = int(input()), input(), input()
if br_joinery <= 10:
    print(""Invalid order"")
else:
    price = change_price(br_joinery, type_joinery)

    if price is not None:
        if type_delivery == ""With delivery"":
            price += 60
            if br_joinery >= 99:
                price *= 0.96
        print(f""{price:.2f} BGN"")"
Ztdt2fXe,"string, vector",LEGEND2004,C++,Saturday 6th of April 2024 09:36:23 AM CDT,"#pragma GCC optimize(""O3"")
#include <bits/stdc++.h>
using namespace std;

#define int long long
#define double long double
#define pb push_back
#define endl '\n'
#define fastio ios_base::sync_with_stdio(0); cin.tie(0)


signed main()
{
    fastio;/*
    string s;
    cin >> s;
    int n = 0;
    for(auto i : s){
        n = n * 10 + i - '0';
    }
    cout << n;*/

    /*
    int n;
    cin >> n;
    string s = """";
    while(n){
        s += n % 10 + '0';
        n /= 10;
    }
    reverse(s.begin() , s.end());
    cout << s;*/
/*
    string s;
    cin >> s;
    for(char& i : s)
        i = toupper(i);

    cout << s;*/

    // abcDEF
    // ABCDEF
    /*
    char c;
    cin >> c; // a
    cout << (++c); // b
    */

    vector<array<int , 3> > v;
    v.pb({1 , 2 , 3});
    v.pb({3 , 5 , 7});/*
    for(int i = 0; i < v.size(); i++){
        cout << v[i][0] << "" "" << v[i][1];
        cout << "" "" << v[i][2] << '\n';
    }*/

    for(auto i : v){
        cout << i[0] << "" "" << i[1];
        cout << "" "" << i[2] << ""\n"";
    }




}
"
GLG65UCa,Coding Style,Mr-Nightmare1,Lua,Saturday 6th of April 2024 09:10:53 AM CDT,"--

local Players = game:GetService(""Players"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")

--

local Remotes = ReplicatedStorage:WaitForChild(""Remotes"")
local ClaimPlot_event: RemoteEvent = Remotes:WaitForChild(""ClaimPlot"")

--

local Plots = workspace:WaitForChild(""Plots"")

----

local function makeVisible(p: Part?): ()
	--
	
	if p:IsA(""Part"") then
		--
		p.Transparency = 0
		p.CanCollide = true
	elseif p:IsA(""Model"") then

		for __, d: BasePart? in next, p:GetDescendants() do
			if not (d:IsA(""BasePart"")) then continue end
			--

			d.Transparency = 0
			d.CanCollide = true -----
		end
	end
end

--
local function buySomething(plr: Player, toBuy: Part, ownedVal: BoolValue, dataNumber: number): ()
	--
	
	local ls = plr.leaderstats
	local money = ls.Money
	local income = ls.Income
	local req = toBuy.Price.Value
	if money.Value >= req then
		--
		
		money.Value -= req
		ownedVal.Value = true
		income.Value += toBuy.IncomeBonus.Value
		toBuy.Transparency = 1
		
		local linked = toBuy.Linked.Value
		makeVisible(linked)
		
		--
		
		local val = Instance.new(""StringValue"")
		val.Name = toBuy.Name
		val.Parent = plr.TYCOON_DATA:GetChildren()[dataNumber]
		
		return
	end
end

--
local function claimPlot(plr: Player, plotModel: Model?): ()
	
	--
	ClaimPlot_event:FireClient(plr, plotModel)
end

ClaimPlot_event.OnServerEvent:Connect(function(plr: Player, plotModel, dataNumber: number)
	
	local Important = plotModel:WaitForChild(""Important"")
	if Important.ClaimPart.Owner.Value ~= """" and Important.ClaimPart.Owner.Value ~= plr.Name then 
		--
		return
	end
	
	--
	local PlotClaimed = plr.PlotClaimed
	if PlotClaimed.Value ~= nil then
		
		local oldPlot = PlotClaimed.Value
		local oldImportant = oldPlot.Important
		local oldClaimPart = oldImportant.ClaimPart
		oldClaimPart.Owner.Value = """"
		oldClaimPart.Color = Color3.fromRGB(163, 162, 165)
		
		local ls = plr:WaitForChild(""leaderstats"")
		ls.Income.Value = 10
		ls.leaderstats.Money.Value = 0
		
		for _, k in next, oldPlot.PurchasePlatforms:GetChildren() do
			--
			
			k.Owned.Value = false
			k.Transparency = 1
			k.CanCollide = false
		end
		
		for _, k in next, oldPlot.BaseStructure:GetChildren() do
			--
			
			if k:IsA(""Part"") then
				k.Transparency = 1
				k.CanCollide = false
			elseif k:IsA(""Model"") then
				--
				
				for __, d in next, k:GetChildren() do
					--
					if not (d:IsA(""Part"")) then continue end
					d.Transparency = 1
					d.CanCollide = false
				end
			end
		end
	end

	--
	print(""Claiming plot!"")
	local BaseStructure = plotModel.BaseStructure
	local PurchasePlatforms = plotModel:WaitForChild(""PurchasePlatforms"")
	local claimPart = Important.ClaimPart
	claimPart.Owner.Value = plr.Name
	claimPart.CanCollide = false
	claimPart.Color = Color3.fromRGB(0, 0, 0)
	
	plr.PlotClaimed.Value = plotModel
	
	--
	local TYCOON_DATA = plr.TYCOON_DATA:GetChildren()[dataNumber]
	for _, val: StringValue in next, TYCOON_DATA:GetChildren() do
		--
		
		if not val:IsA(""StringValue"") then continue end
		
		local purchaser = PurchasePlatforms:FindFirstChild(val.Name)
		local corresponding = BaseStructure:FindFirstChild(val.Name)
		if corresponding and purchaser then
			--
			
			plr.leaderstats.Income.Value += purchaser.IncomeBonus.Value
			purchaser.Owned.Value = true
			
			makeVisible(corresponding)
		end
	end
	
	--
	for _, purchaser: Part in next, PurchasePlatforms:GetChildren() do
		--
		
		local purchaserOwned = purchaser:WaitForChild(""Owned"")
		if purchaserOwned.Value == true then continue end
		--
		purchaser.Transparency = 0
		
		local db, cd = false, .25
		local c: RBXScriptConnection = purchaser.Touched:Connect(function(hit: BasePart)
			--
			if not db and purchaserOwned.Value == false then
				db = true
				--
				
				local char = hit.Parent
				local playerThatTouched = Players:GetPlayerFromCharacter(char)
				if playerThatTouched then
					--

					if playerThatTouched == plr then -- Buy, literally.
						--
						
						buySomething(plr, purchaser, purchaserOwned, dataNumber)
					end
				end
				
				task.wait(cd)
				db = not db
			end
			
		end)
	end
end)

--

for _, plot: Model in next, Plots:GetChildren() do
	
	--
	plot = plot:WaitForChild(""Important"")
	local claimPart = plot:WaitForChild(""ClaimPart"")
	local Owner = claimPart:WaitForChild(""Owner"")
	
	local db, cd = false, .25
	local cT: RBXScriptConnection = claimPart.Touched:Connect(function(hit: BasePart?)
		if not db then
			db = true
			
			--
			local char = hit.Parent
			local player = Players:GetPlayerFromCharacter(char)
			if char and player then

				--
				if Owner.Value == """" then

					--
					claimPlot(player, plot.Parent) --
				else
					--
					
				end
			end
			
			task.wait(cd)
			db = not db
		end
	end)
end"
SuUTV6ei,Untitled,dimombo,Python,Saturday 6th of April 2024 09:09:16 AM CDT,"import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder

def train_and_plot_tic_tac_toe_accuracy(file_path):

    data = pd.read_csv(file_path, header=None)

    X = data.iloc[:, :-1]
    y = data.iloc[:, -1]


    X = X.apply(LabelEncoder().fit_transform)
    y = LabelEncoder().fit_transform(y)

    test_ratios = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]
    test_accuracies = []
    train_accuracies = []

    for test_ratio in test_ratios:

        X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_ratio, random_state=42)
        
        model = MultinomialNB()
        model.fit(X_train, y_train)
        
        y_test_pred = model.predict(X_test)
        test_accuracy = accuracy_score(y_test, y_test_pred)
        test_accuracies.append(test_accuracy)

        y_train_pred = model.predict(X_train)
        train_accuracy = accuracy_score(y_train, y_train_pred)
        train_accuracies.append(train_accuracy)
    
    plt.figure(figsize=(10, 6))
    plt.plot(test_ratios, train_accuracies, marker='o', label='Точность на обучающей выборке')
    plt.plot(test_ratios, test_accuracies, marker='s', label='Точность на тестовой выборке')
    plt.title('Зависимость точности от доли тестовой выборки (крестики-нолики)')
    plt.xlabel('Доля тестовой выборки')
    plt.ylabel('Точность')
    plt.legend()
    plt.grid(True)
    plt.show()

train_and_plot_tic_tac_toe_accuracy('tic_tac_toe.txt')
"
ZsuzhREz,邀您一起看：云口令,xiaomianao666,JavaScript,Saturday 6th of April 2024 08:57:56 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥云口令@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5LqR5Y+j5LukXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImh0dHBzOi8veGlhb21pYW5hby5sYW56b3VtLmNvbS9pUnNoRDFyZjY0cWZcXFwiLFxcbmRlc2M6XFxcIjEwMCUmJmZsb2F0XFxcIixcXG5leHRyYTp7Y2FuQmFjazogdHJ1ZX1cXG59XSk7XCIsXCJncm91cFwiOlwiXCJ9IiwidGl0bGUiOiLkupHlj6Pku6QifQ==
Zrgtx12s,Untitled,dereksir,Bash,Saturday 6th of April 2024 08:27:36 AM CDT,"<!DOCTYPE html>
<head>
	<title>Visual Studio Reviews 2024: Details, Pricing, &amp; Features | G2</title>
	<!--
	...
	-->
</head>"
5C75RsLy,Untitled,dereksir,Java,Saturday 6th of April 2024 08:23:50 AM CDT,"package com.example;

// import the required classes
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.net.http.HttpResponse.BodyHandlers; 

public class Main {
    public static void main(String[] args) {
        // create an instance of HttpClient
        HttpClient client = HttpClient.newHttpClient();
        // build request using the Request Builder
        HttpRequest request = HttpRequest.newBuilder()
            .uri(URI.create(""https://api.zenrows.com/v1/?apikey=<YOUR_ZENROWS_API_KEY>&url=https%3A%2F%2Fwww.g2.com%2Fproducts%2Fvisual-studio%2Freviews&js_render=true&premium_proxy=true""))
            .build();
        // send request asynchronously and print response to the console
        client.sendAsync(request, BodyHandlers.ofString()) 
            .thenApply(HttpResponse::body)
            .thenAccept(System.out::println)
            .join();
    }
}"
pKwFM8cf,KlasaProgram2,cuniszkiewicz,C#,Saturday 6th of April 2024 08:23:13 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace OOP_1N122L_GiP3D1
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Kapibara kapibara = new Kapibara();
            int wybor;
            kapibara.Imie = ""Stefan"";
            kapibara.Wiek = 3;
            kapibara.kolor = ""różowy"";
            kapibara.plec = ""samiec"";
            kapibara.waga = 10;

            do
            {
                Console.Clear();
                Console.WriteLine(""0 - Koniec"");
                Console.WriteLine(""1 - Przedstaw kabibarę"");
                Console.WriteLine(""2 - Nakarm kabibarę"");
                Console.WriteLine(""3 - Pogłaszcz kabibarę"");
                Console.WriteLine(""4 - Zabaw kabibarę"");
                Console.WriteLine(""5 - Zmień dane kapibary"");
                Console.WriteLine(""6 - Temperatura kapibary""  );
                Console.Write(""Twój wybór: "");
                wybor = int.Parse(Console.ReadLine());
                Console.Clear();
                switch (wybor)
                {
                    case 0:
                        Console.WriteLine(""\n\n\n\n\n\n\t\t\t\t\tDziękuję za skorzystanie z programu!"");
                        System.Threading.Thread.Sleep(1000);
                        break;
                    case 1:
                        kapibara.PrzedstawSie();
                        Console.ReadKey();
                        break;
                    case 2:
                        kapibara.Nakarm();
                        Console.ReadKey();
                        break;
                    case 3:
                        kapibara.Poglaszcz();
                        Console.ReadKey();
                        break;
                    case 4:
                        kapibara.PobawSie();
                        Console.ReadKey();
                        break;
                    case 5:
                        Console.Write(""Imię: "");
                        kapibara.Imie = Console.ReadLine();
                        Console.Write(""Wiek: "");
                        kapibara.Wiek = int.Parse(Console.ReadLine());
                        Console.Write(""Kolor: "");
                        kapibara.kolor = Console.ReadLine();
                        Console.Write(""Płeć: "");
                        kapibara.plec = Console.ReadLine();
                        Console.Write(""Waga: "");
                        kapibara.waga = double.Parse(Console.ReadLine());
                        break;
                    case 6:
                        kapibara.TemperaturaC = 37;
                        Console.WriteLine($""Temperatura kapibary to {kapibara.TemperaturaC}C"");
                        Console.WriteLine($""Temperatura kapibary to {kapibara.TemperaturaK}K"");
                        kapibara.TemperaturaK = 310;
                        Console.WriteLine($""Temperatura kapibary to {kapibara.TemperaturaC}C"");
                        Console.WriteLine($""Temperatura kapibary to {kapibara.TemperaturaK}K"");
                        Console.ReadKey();
                        break;
                    default:
                        Console.WriteLine(""\n\n\n\n\n\n\t\t\t\tWybrano niewłaściwą opcję z menu!"");
                        System.Threading.Thread.Sleep(1000);
                        break;
                }  
            } while (wybor != 0);
        }
    }
    //https://pastebin.com/ZLSjnitj
}
"
35dZHXGX,Untitled,dereksir,Java,Saturday 6th of April 2024 08:19:24 AM CDT,https://api.zenrows.com/v1/?apikey=<YOUR_ZENROWS_API_KEY>&url=https%3A%2F%2Fwww.g2.com%2Fproducts%2Fvisual-studio%2Freviews&js_render=true&premium_proxy=true
U7dqYTh2,pastebin.ai - #1 pastebin.com alternative,xxsa,PHP,Saturday 6th of April 2024 07:59:47 AM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.x
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
...."
