id,title,username,language,date,content
eGt9FzRG,grado sto bil pameten,VMaksimoski008,C++,Sunday 4th of February 2024 11:54:30 AM CDT,"#include <bits/stdc++.h>
 
#define pb push_back
#define eb emplace_back
#define sz(x) (int)x.size()
#define all(x) x.begin(), x.end()
#define uniq(x) x.erase(unique(all(x)), x.end())
#define rall(x) x.rbegin(), x.rend()
//#define int long long
 
using namespace std;
 
using ll = long long;
using ull = unsigned long long;
using ld = long double;
using pii = pair<int, int>;
using pll = pair<ll, ll>;
 
const int mod = 1e9 + 7;
const int LOG = 20;
const int maxn = 1e5 + 5;
const double eps = 1e-9;
 
void setIO() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
}
 
struct SegTree {
    int n;
    vector<vector<ll> > tree;
 
    SegTree(int _n) {
        n = _n;
        tree.resize(2, vector<ll>(4*n+5));
    }
 
    void update(int u, int tl, int tr, int pos, int val, int id) {
        if(tl == tr) {
            tree[id][u] = val;
        } else {
            int tm = (tl + tr) / 2;
            if(pos <= tm)
                update(2*u, tl, tm, pos, val, id);
            else
                update(2*u+1, tm+1, tr, pos, val, id);
            tree[id][u] = tree[id][2*u] + tree[id][2*u+1]; 
        }
    }
 
    ll query(int u, int tl, int tr, int l, int r, int id) {
        if(tl > tr || tl > r || l > tr) return 0;
        if(l <= tl && tr <= r) return tree[id][u];
        int tm = (tl + tr) / 2;
        return (query(2*u, tl, tm, l, r, id)
        + query(2*u+1, tm+1, tr, l, r, id)) % mod;
    }
 
    ll query(int t, int l, int r) {
        return query(1, 0, n-1, l, r, t);
    }
 
    void update(int t, int pos, int val) {
        update(1, 0, n-1, pos, val, t);
    }
};
 
int32_t main() {
    setIO();
 
    ll d[2];
    int n;
    cin >> d[0] >> d[1] >> n;
 
    vector<ll> v(n+1);
    vector<int> log_dp(n+2);
    v[0] = -1e18;
    for(int i=1; i<=n; i++) cin >> v[i];
 
    log_dp[1] = 0;
    for(int i=2; i<=n+1; i++) log_dp[i] = log_dp[i/2] + 1;
 
    vector<vector<ll> > table(n+2, vector<ll>(LOG, 1e18));
    for(int i=1; i<=n; i++) table[i][0] = v[i] - v[i-1];
 
    for(int j=1; j<LOG; j++)
        for(int i=0; i+(1<<j)-1<=n; i++)
            table[i][j] = min(table[i][j-1], table[i+(1<<(j-1))][j-1]);
 
    auto sparseQuery = [&](int l, int r) {
        if(l > r) return ll(1e18);
        int len = r-l+1;
        int k = log_dp[len];
        return min(table[l][k], table[r-(1<<k)+1][k]);
    };
 
    ll dp[n+1][2];
    SegTree tree(n+1);
    memset(dp, 0, sizeof(dp));
    dp[0][0] = 1, dp[0][1] = 1;
    tree.update(0, 0, 1);
    tree.update(1, 0, 1);
 
    vector<int> l(2);
    for(int i=1; i<=n; i++) {
        while(l[0]+1 < i && v[i] - v[l[0]+1] >= d[0]) l[0]++;
        while(l[1]+1 < i && v[i] - v[l[1]+1] >= d[1]) l[1]++;
        // cout << ""P: "" << l[0] << "" - "" << i << '\n';
        // cout << ""B: "" << l[1] << "" - "" << i << '\n';
 
        // cout << ""POSITION: "" << i << '\n';
         
        for(int j=0; j<2; j++) {
            int pos = i;
            int lp=0, rp=l[j];
 
            while(lp <= rp) {
                int mid = (lp + rp) / 2;
 
                if(mid+2 > i) pos = mid, rp = mid - 1;
                else if(sparseQuery(mid+2, i-1) >= d[1-j]) pos = mid, rp = mid - 1;
                else lp = mid + 1;
            }
 
            // if(j == 0)
            //     cout << ""P: "" << pos << "" "" << l[j] << '\n';
            // else
            //     cout << ""B: "" << pos << "" "" << l[j] << '\n';
 
            dp[i][j] = tree.query(j, pos, l[j]);
        }
 
        tree.update(0, i, dp[i][0]);
        tree.update(1, i, dp[i][1]);
        // cout << ""dp["" << i << ""]["" << 0 << ""]: "" << dp[i][0] << '\n';
        // cout << ""dp["" << i << ""]["" << 1 << ""]: "" << dp[i][1] << '\n';
    }
 
    cout << (dp[n][0] + dp[n][1]) % mod << '\n';
    return 0;
}"
JTPznpbL,cssfoundry,Zendarino,CSS,Sunday 4th of February 2024 11:45:14 AM CDT,"* {
  box-sizing: border-box;
}

/* Set a background color */
body {
  background-color: #474e5d;
  font-family: Helvetica, sans-serif;
}

/* The actual timeline (the vertical ruler) */
.timeline {
  position: relative;
  max-width: 1200px;
  margin: 0 auto;
}

/* The actual timeline (the vertical ruler) */
.timeline::after {
  content: '';
  position: absolute;
  width: 6px;
  background-color: white;
  top: 0;
  bottom: 0;
  left: 50%;
  margin-left: -3px;
}

/* Container around content */
.container {
  padding: 10px 40px;
  position: relative;
  background-color: inherit;
  width: 50%;
}

/* The circles on the timeline */
.container::after {
  content: '';
  position: absolute;
  width: 25px;
  height: 25px;
  right: -17px;
  background-color: white;
  border: 4px solid #FF9F55;
  top: 15px;
  border-radius: 50%;
  z-index: 1;
}

/* Place the container to the left */
.left {
  left: 0;
}

/* Place the container to the right */
.right {
  left: 50%;
}

/* Add arrows to the left container (pointing right) */
.left::before {
  content: "" "";
  height: 0;
  position: absolute;
  top: 22px;
  width: 0;
  z-index: 1;
  right: 30px;
  border: medium solid white;
  border-width: 10px 0 10px 10px;
  border-color: transparent transparent transparent white;
}

/* Add arrows to the right container (pointing left) */
.right::before {
  content: "" "";
  height: 0;
  position: absolute;
  top: 22px;
  width: 0;
  z-index: 1;
  left: 30px;
  border: medium solid white;
  border-width: 10px 10px 10px 0;
  border-color: transparent white transparent transparent;
}

/* Fix the circle for containers on the right side */
.right::after {
  left: -16px;
}

/* The actual content */
.content {
  padding: 20px 30px;
  background-color: white;
  position: relative;
  border-radius: 6px;
}

/* Media queries - Responsive timeline on screens less than 600px wide */
@media screen and (max-width: 600px) {
/* Place the timelime to the left */
  .timeline::after {
    left: 31px;
  }

/* Full-width containers */
  .container {
    width: 100%;
    padding-left: 70px;
    padding-right: 25px;
  }

/* Make sure that all arrows are pointing leftwards */
  .container::before {
    left: 60px;
    border: medium solid white;
    border-width: 10px 10px 10px 0;
    border-color: transparent white transparent transparent;
  }

/* Make sure all circles are at the same spot */
  .left::after, .right::after {
    left: 15px;
  }

/* Make all right containers behave like the left ones */
  .right {
    left: 0%;
  }
}"
a8725Znu,Nightlight Script,Liver_zMods,Lua,Sunday 4th of February 2024 11:43:21 AM CDT,"loadstring(game:HttpGet(""https://abre.ai/lm-nightlight""))();"
m0mTv8cj,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Sunday 4th of February 2024 11:36:28 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_211229.pdf
 
Working as of
04 February 2024"
7G6LXvxm,savetodevice.lua,TIMAS_Bro,Lua,Sunday 4th of February 2024 11:17:55 AM CDT,"local _, files = os.pullEvent(""file_transfer"")
for _, file in ipairs(files.getFiles()) do
  local size = file.seek(""end"")
  file.seek(""set"", 0)
  local f = fs.open(""songs/"" .. file.getName(), ""w"")
  f.write(file.readAll())
  f.close()
  print(""Sucessfully wrote song to device. Play with 'play \"""" .. file.getName() .. ""\""'."")
end"
RD8aDxy8,Disable/Enable Razr automatic download of Synapse,SHADOWOPS,PowerShell,Sunday 4th of February 2024 11:10:21 AM CDT,"# Check for elevated privileges
if (-not ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] ""Administrator"")) {
    Write-Error ""This script must be run as an Administrator. Please run it again with elevated privileges.""
    exit
}

param(
    [Parameter(Mandatory=$true)]
    [ValidateSet(""Enable"",""Disable"")]
    [string]$Action
)

function Backup-Registry {
    $backupFile = ""HKLM_SOFTWARE_Policies_Microsoft_Windows_DeviceInstall_Settings.reg""
    reg export ""HKLM\SOFTWARE\Policies\Microsoft\Windows\DeviceInstall\Settings"" $backupFile
    Write-Host ""Registry backup created: $backupFile""
}

function Set-DeviceInstallPolicy {
    param([string]$Action)
    
    Backup-Registry
    
    $path = ""HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceInstall\Settings""
    $disableSystemUpdateAccessValue = if ($Action -eq ""Disable"") { 1 } else { 0 }
    $disableDeviceMetadataRetrievalValue = if ($Action -eq ""Disable"") { 1 } else { 0 }
    
    New-ItemProperty -Path $path -Name ""DisableSystemUpdateAccess"" -Value $disableSystemUpdateAccessValue -PropertyType DWord -Force | Out-Null
    New-ItemProperty -Path $path -Name ""DisableDeviceMetadataRetrieval"" -Value $disableDeviceMetadataRetrievalValue -PropertyType DWord -Force | Out-Null
    
    if ($Action -eq ""Disable"") {
        Write-Host ""Automatic downloading of manufacturer apps and custom icons is now disabled.""
    } else {
        Write-Host ""Automatic downloading of manufacturer apps and custom icons is now enabled.""
    }
}

# Execute the function with the provided action
Set-DeviceInstallPolicy -Action $Action"
YzRjyhab,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Sunday 4th of February 2024 11:06:40 AM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://claim-netdrop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://claim-netdrop.netlify.app/

147510"
yphvULS8,xss.js,JackSparrow1337,JavaScript,Sunday 4th of February 2024 11:06:10 AM CDT,alert('Wizer');
gb19yZkh,yardGreening,zarkoto223,JavaScript,Sunday 4th of February 2024 11:03:41 AM CDT,"function a(input){

    let quadM=input[0];

    let price=(quadM*7.61)-(quadM*7.61)*0.18;
    let discount=(quadM*7.61)*0.18;



    console.log('The final price is: '+price+' lv.')
    console.log('The discount is: '+discount+ ' lv.')
}"
RuMVLHKY,Nigerian scammers [4-2-2/2024],bombaires,AIMMS,Sunday 4th of February 2024 11:00:57 AM CDT,"<a href=""mailto:hamzayusuf001@outlook.com"">hamzayusuf001@outlook.com</a>
<a href=""mailto:clarkdhldeliveryservice2011@hotmail.com"">clarkdhldeliveryservice2011@hotmail.com</a>
<a href=""mailto:frankgregoryclark@gmail.com"">frankgregoryclark@gmail.com</a>
<a href=""mailto:f.r.a.nkgr.e.go.ry.c.lark@gmail.com"">f.r.a.nkgr.e.go.ry.c.lark@gmail.com</a>
<a href=""mailto:f.rank.gre.go.ry.c.la.rk@gmail.com"">f.rank.gre.go.ry.c.la.rk@gmail.com</a>
<a href=""mailto:frank.g.re.g.o.ryc.l.ark@gmail.com"">frank.g.re.g.o.ryc.l.ark@gmail.com</a>
<a href=""mailto:fra.n.k.gre.go.ryc.la.r.k@gmail.com"">fra.n.k.gre.go.ryc.la.r.k@gmail.com</a>
<a href=""mailto:fra.nkgr.e.g.o.r.y.clar.k@gmail.com"">fra.nkgr.e.g.o.r.y.clar.k@gmail.com</a>
<a href=""mailto:fr.a.nk.g.reg.o.r.ycl.a.r.k@gmail.com"">fr.a.nk.g.reg.o.r.ycl.a.r.k@gmail.com</a>
<a href=""mailto:frankgr.egor.ycla.r.k@gmail.com"">frankgr.egor.ycla.r.k@gmail.com</a>
<a href=""mailto:fr.an.k.g.reg.oryc.lark@gmail.com"">fr.an.k.g.reg.oryc.lark@gmail.com</a>
<a href=""mailto:fran.kgr.eg.o.r.y.cla.r.k@gmail.com"">fran.kgr.eg.o.r.y.cla.r.k@gmail.com</a>
<a href=""mailto:f.ran.kgr.eg.or.y.cl.ark@gmail.com"">f.ran.kgr.eg.or.y.cl.ark@gmail.com</a>
<a href=""mailto:fr.ank.g.re.go.r.y.cl.ar.k@gmail.com"">fr.ank.g.re.go.r.y.cl.ar.k@gmail.com</a>
<a href=""mailto:frankgre.go.ryc.lar.k@gmail.com"">frankgre.go.ryc.lar.k@gmail.com</a>
<a href=""mailto:f.r.an.k.gregor.y.cl.ar.k@gmail.com"">f.r.an.k.gregor.y.cl.ar.k@gmail.com</a>
<a href=""mailto:f.r.an.k.g.regorycla.r.k@gmail.com"">f.r.an.k.g.regorycla.r.k@gmail.com</a>
<a href=""mailto:f.r.a.n.k.gr.eg.or.ycl.a.rk@gmail.com"">f.r.a.n.k.gr.eg.or.ycl.a.rk@gmail.com</a>
<a href=""mailto:f.ran.kg.r.e.g.or.y.c.l.a.r.k@gmail.com"">f.ran.kg.r.e.g.or.y.c.l.a.r.k@gmail.com</a>
<a href=""mailto:fr.an.kg.reg.o.r.y.clark@gmail.com"">fr.an.kg.reg.o.r.y.clark@gmail.com</a>
<a href=""mailto:f.r.ank.gr.ego.r.yc.l.ar.k@gmail.com"">f.r.ank.gr.ego.r.yc.l.ar.k@gmail.com</a>
<a href=""mailto:fr.ankg.r.e.gor.ycl.ark@gmail.com"">fr.ankg.r.e.gor.ycl.ark@gmail.com</a>
<a href=""mailto:fr.a.n.k.gre.go.ry.cl.a.r.k@gmail.com"">fr.a.n.k.gre.go.ry.cl.a.r.k@gmail.com</a>
<a href=""mailto:fr.a.nkg.r.e.g.or.yc.la.r.k@gmail.com"">fr.a.nkg.r.e.g.or.yc.la.r.k@gmail.com</a>
<a href=""mailto:fra.nk.g.regory.c.lar.k@gmail.com"">fra.nk.g.regory.c.lar.k@gmail.com</a>
<a href=""mailto:f.r.ankgr.e.gor.y.c.la.rk@gmail.com"">f.r.ankgr.e.gor.y.c.la.rk@gmail.com</a>
<a href=""mailto:f.ra.nkg.reg.or.y.clar.k@gmail.com"">f.ra.nkg.reg.or.y.clar.k@gmail.com</a>
<a href=""mailto:f.r.ankg.re.gor.y.c.lar.k@gmail.com"">f.r.ankg.re.gor.y.c.lar.k@gmail.com</a>
<a href=""mailto:frankgr.e.gory.cl.a.r.k@gmail.com"">frankgr.e.gory.cl.a.r.k@gmail.com</a>
<a href=""mailto:f.ra.n.k.g.rego.r.yclark@gmail.com"">f.ra.n.k.g.rego.r.yclark@gmail.com</a>
<a href=""mailto:fr.an.k.g.regory.c.lar.k@gmail.com"">fr.an.k.g.regory.c.lar.k@gmail.com</a>
<a href=""mailto:f.r.ankg.r.eg.o.ry.c.lark@gmail.com"">f.r.ankg.r.eg.o.ry.c.lark@gmail.com</a>
<a href=""mailto:f.rank.greg.or.y.cl.ar.k@gmail.com"">f.rank.greg.or.y.cl.ar.k@gmail.com</a>
<a href=""mailto:fr.ankgr.ego.ry.c.la.rk@gmail.com"">fr.ankgr.ego.ry.c.la.rk@gmail.com</a>
<a href=""mailto:f.r.a.n.kg.reg.o.rycla.r.k@gmail.com"">f.r.a.n.kg.reg.o.rycla.r.k@gmail.com</a>
<a href=""mailto:frank.gr.e.g.o.rycl.a.rk@gmail.com"">frank.gr.e.g.o.rycl.a.rk@gmail.com</a>
<a href=""mailto:fra.n.kgr.e.g.o.ry.c.l.a.r.k@gmail.com"">fra.n.kgr.e.g.o.ry.c.l.a.r.k@gmail.com</a>
<a href=""mailto:f.r.an.k.g.re.g.o.r.yc.l.ar.k@gmail.com"">f.r.an.k.g.re.g.o.r.yc.l.ar.k@gmail.com</a>
<a href=""mailto:f.rankgr.e.gor.y.cla.r.k@gmail.com"">f.rankgr.e.gor.y.cla.r.k@gmail.com</a>
<a href=""mailto:f.r.a.n.k.g.r.e.g.or.y.c.l.a.r.k@gmail.com"">f.r.a.n.k.g.r.e.g.or.y.c.l.a.r.k@gmail.com</a>
<a href=""mailto:f.ran.k.grego.r.y.clar.k@gmail.com"">f.ran.k.grego.r.y.clar.k@gmail.com</a>
<a href=""mailto:fr.a.n.kg.reg.o.ry.c.lar.k@gmail.com"">fr.a.n.kg.reg.o.ry.c.lar.k@gmail.com</a>
<a href=""mailto:f.r.a.n.kgrego.ryclark@gmail.com"">f.r.a.n.kgrego.ryclark@gmail.com</a>
<a href=""mailto:fra.nkgre.gor.ycl.a.rk@gmail.com"">fra.nkgre.gor.ycl.a.rk@gmail.com</a>
<a href=""mailto:fra.nkgr.egor.yclark@gmail.com"">fra.nkgr.egor.yclark@gmail.com</a>
<a href=""mailto:fr.a.n.k.g.r.egor.yc.la.r.k@gmail.com"">fr.a.n.k.g.r.egor.yc.la.r.k@gmail.com</a>
<a href=""mailto:fr.a.n.k.g.r.e.gor.y.c.lark@gmail.com"">fr.a.n.k.g.r.e.gor.y.c.lark@gmail.com</a>
<a href=""mailto:fr.a.nkg.r.e.go.r.yc.l.ark@gmail.com"">fr.a.nkg.r.e.go.r.yc.l.ark@gmail.com</a>
<a href=""mailto:f.r.a.nk.g.regor.yclar.k@gmail.com"">f.r.a.nk.g.regor.yclar.k@gmail.com</a>
<a href=""mailto:f.r.a.nkgr.eg.orycla.r.k@gmail.com"">f.r.a.nkgr.eg.orycla.r.k@gmail.com</a>
<a href=""mailto:f.ra.nkgre.gor.yc.la.rk@gmail.com"">f.ra.nkgre.gor.yc.la.rk@gmail.com</a>
<a href=""mailto:fra.n.kgr.egor.yc.l.ar.k@gmail.com"">fra.n.kgr.egor.yc.l.ar.k@gmail.com</a>
<a href=""mailto:fran.kg.rego.r.y.c.lark@gmail.com"">fran.kg.rego.r.y.c.lark@gmail.com</a>
<a href=""mailto:frank.greg.o.r.ycl.ar.k@gmail.com"">frank.greg.o.r.ycl.ar.k@gmail.com</a>
<a href=""mailto:f.rank.gre.g.o.rycl.a.r.k@gmail.com"">f.rank.gre.g.o.rycl.a.r.k@gmail.com</a>
<a href=""mailto:fr.a.nk.gr.e.go.rycl.ar.k@gmail.com"">fr.a.nk.gr.e.go.rycl.ar.k@gmail.com</a>
<a href=""mailto:fran.k.gr.e.go.r.y.c.l.a.r.k@gmail.com"">fran.k.gr.e.go.r.y.c.l.a.r.k@gmail.com</a>
<a href=""mailto:fra.n.k.grego.ry.cl.a.r.k@gmail.com"">fra.n.k.grego.ry.cl.a.r.k@gmail.com</a>
<a href=""mailto:f.r.ank.greg.o.ry.c.lark@gmail.com"">f.r.ank.greg.o.ry.c.lark@gmail.com</a>
<a href=""mailto:fran.kg.r.ego.r.ycl.a.r.k@gmail.com"">fran.kg.r.ego.r.ycl.a.r.k@gmail.com</a>
<a href=""mailto:fr.an.k.gre.g.o.r.y.c.la.rk@gmail.com"">fr.an.k.gre.g.o.r.y.c.la.rk@gmail.com</a>
<a href=""mailto:f.r.a.n.kg.re.g.o.ry.c.l.ar.k@gmail.com"">f.r.a.n.kg.re.g.o.ry.c.l.ar.k@gmail.com</a>
<a href=""mailto:f.r.a.n.kgr.ego.r.y.cl.a.rk@gmail.com"">f.r.a.n.kgr.ego.r.y.cl.a.rk@gmail.com</a>
<a href=""mailto:fra.n.kgreg.oryc.la.rk@gmail.com"">fra.n.kgreg.oryc.la.rk@gmail.com</a>
<a href=""mailto:f.ran.kg.r.e.g.o.ry.c.l.ark@gmail.com"">f.ran.kg.r.e.g.o.ry.c.l.ark@gmail.com</a>
<a href=""mailto:f.ra.n.k.g.r.egory.clar.k@gmail.com"">f.ra.n.k.g.r.egory.clar.k@gmail.com</a>
<a href=""mailto:f.r.a.nk.greg.ory.cl.ark@gmail.com"">f.r.a.nk.greg.ory.cl.ark@gmail.com</a>
<a href=""mailto:fr.a.n.k.gre.gory.c.l.ark@gmail.com"">fr.a.n.k.gre.gory.c.l.ark@gmail.com</a>
<a href=""mailto:f.ra.n.kgr.eg.or.y.c.la.r.k@gmail.com"">f.ra.n.kgr.eg.or.y.c.la.r.k@gmail.com</a>
<a href=""mailto:f.rank.g.re.g.o.ry.c.l.ark@gmail.com"">f.rank.g.re.g.o.ry.c.l.ark@gmail.com</a>
<a href=""mailto:fr.a.n.k.g.r.ego.r.yc.l.a.rk@gmail.com"">fr.a.n.k.g.r.ego.r.yc.l.a.rk@gmail.com</a>
<a href=""mailto:frankgreg.or.yclar.k@gmail.com"">frankgreg.or.yclar.k@gmail.com</a>
<a href=""mailto:frank.g.reg.orycl.a.rk@gmail.com"">frank.g.reg.orycl.a.rk@gmail.com</a>
<a href=""mailto:fr.a.nk.grego.r.y.c.l.a.rk@gmail.com"">fr.a.nk.grego.r.y.c.l.a.rk@gmail.com</a>
<a href=""mailto:fr.ankg.regorycl.ark@gmail.com"">fr.ankg.regorycl.ark@gmail.com</a>
<a href=""mailto:f.r.ank.gregoryclark@gmail.com"">f.r.ank.gregoryclark@gmail.com</a>
<a href=""mailto:f.ran.k.g.re.g.ory.c.l.ar.k@gmail.com"">f.ran.k.g.re.g.ory.c.l.ar.k@gmail.com</a>
<a href=""mailto:fra.nkg.re.g.o.r.yclark@gmail.com"">fra.nkg.re.g.o.r.yclark@gmail.com</a>
<a href=""mailto:fra.nkgr.e.go.r.yclark@gmail.com"">fra.nkgr.e.go.r.yclark@gmail.com</a>
<a href=""mailto:f.r.ank.g.re.go.r.y.clar.k@gmail.com"">f.r.ank.g.re.go.r.y.clar.k@gmail.com</a>
<a href=""mailto:fr.an.kg.r.eg.or.y.cl.ar.k@gmail.com"">fr.an.kg.r.eg.or.y.cl.ar.k@gmail.com</a>
<a href=""mailto:fr.ank.gr.ego.ryclar.k@gmail.com"">fr.ank.gr.ego.ryclar.k@gmail.com</a>
<a href=""mailto:f.ra.nkg.re.gor.yc.l.ark@gmail.com"">f.ra.nkg.re.gor.yc.l.ark@gmail.com</a>
<a href=""mailto:f.ra.n.kgre.g.o.rycl.a.r.k@gmail.com"">f.ra.n.kgre.g.o.rycl.a.r.k@gmail.com</a>
<a href=""mailto:fr.an.k.g.re.g.o.r.y.cl.a.rk@gmail.com"">fr.an.k.g.re.g.o.r.y.cl.a.rk@gmail.com</a>
<a href=""mailto:fran.k.grego.r.yc.l.ark@gmail.com"">fran.k.grego.r.yc.l.ark@gmail.com</a>
<a href=""mailto:fr.ank.gr.egor.yc.l.ar.k@gmail.com"">fr.ank.gr.egor.yc.l.ar.k@gmail.com</a>
<a href=""mailto:fr.a.n.k.gre.g.or.ycl.ar.k@gmail.com"">fr.a.n.k.gre.g.or.ycl.ar.k@gmail.com</a>
<a href=""mailto:f.rank.gre.g.or.y.c.la.rk@gmail.com"">f.rank.gre.g.or.y.c.la.rk@gmail.com</a>
<a href=""mailto:f.r.an.k.g.r.e.gory.cla.rk@gmail.com"">f.r.an.k.g.r.e.gory.cla.rk@gmail.com</a>
<a href=""mailto:f.r.a.nkgre.go.r.y.c.la.rk@gmail.com"">f.r.a.nkgre.go.r.y.c.la.rk@gmail.com</a>
<a href=""mailto:fran.kgreg.o.ryc.l.ar.k@gmail.com"">fran.kgreg.o.ryc.l.ar.k@gmail.com</a>
<a href=""mailto:fra.n.k.g.re.g.oryc.l.ar.k@gmail.com"">fra.n.k.g.re.g.oryc.l.ar.k@gmail.com</a>
<a href=""mailto:fr.ank.g.reg.oryc.l.a.rk@gmail.com"">fr.ank.g.reg.oryc.l.a.rk@gmail.com</a>
<a href=""mailto:fra.n.k.g.r.egory.cla.rk@gmail.com"">fra.n.k.g.r.egory.cla.rk@gmail.com</a>
<a href=""mailto:f.r.a.nk.gre.go.rycl.a.r.k@gmail.com"">f.r.a.nk.gre.go.rycl.a.r.k@gmail.com</a>
<a href=""mailto:f.r.a.nk.g.r.e.go.rycl.a.rk@gmail.com"">f.r.a.nk.g.r.e.go.rycl.a.rk@gmail.com</a>
<a href=""mailto:frankgr.egory.c.l.ar.k@gmail.com"">frankgr.egory.c.l.ar.k@gmail.com</a>
<a href=""mailto:f.r.ankg.reg.oryc.l.a.r.k@gmail.com"">f.r.ankg.reg.oryc.l.a.r.k@gmail.com</a>
<a href=""mailto:f.r.an.kgrego.ryc.la.rk@gmail.com"">f.r.an.kgrego.ryc.la.rk@gmail.com</a>
<a href=""mailto:fr.an.kgr.e.g.or.y.c.lar.k@gmail.com"">fr.an.kgr.e.g.or.y.c.lar.k@gmail.com</a>
<a href=""mailto:fra.nk.g.reg.ory.c.lar.k@gmail.com"">fra.nk.g.reg.ory.c.lar.k@gmail.com</a>
<a href=""mailto:f.rankgre.g.oryc.l.ark@gmail.com"">f.rankgre.g.oryc.l.ark@gmail.com</a>
<a href=""mailto:f.ra.n.k.g.reg.o.r.yclar.k@gmail.com"">f.ra.n.k.g.reg.o.r.yclar.k@gmail.com</a>
<a href=""mailto:fra.nkg.reg.orycl.a.r.k@gmail.com"">fra.nkg.reg.orycl.a.r.k@gmail.com</a>
<a href=""mailto:f.r.a.nkg.re.g.o.ry.cla.r.k@gmail.com"">f.r.a.nkg.re.g.o.ry.cla.r.k@gmail.com</a>
<a href=""mailto:fr.a.nkg.r.eg.o.r.ycla.r.k@gmail.com"">fr.a.nkg.r.eg.o.r.ycla.r.k@gmail.com</a>
<a href=""mailto:f.ra.nkg.regor.yclar.k@gmail.com"">f.ra.nkg.regor.yclar.k@gmail.com</a>
<a href=""mailto:fran.kg.r.eg.o.ryc.l.ar.k@gmail.com"">fran.kg.r.eg.o.ryc.l.ar.k@gmail.com</a>
<a href=""mailto:f.r.a.nkgr.ego.ry.c.lark@gmail.com"">f.r.a.nkgr.ego.ry.c.lark@gmail.com</a>
<a href=""mailto:frank.g.regor.yc.lar.k@gmail.com"">frank.g.regor.yc.lar.k@gmail.com</a>
<a href=""mailto:fr.a.n.k.g.reg.o.r.yclar.k@gmail.com"">fr.a.n.k.g.reg.o.r.yclar.k@gmail.com</a>
<a href=""mailto:f.ran.kg.re.g.o.ry.c.lark@gmail.com"">f.ran.kg.re.g.o.ry.c.lark@gmail.com</a>
<a href=""mailto:f.ra.nkg.r.e.g.o.rycl.a.r.k@gmail.com"">f.ra.nkg.r.e.g.o.rycl.a.r.k@gmail.com</a>
<a href=""mailto:f.ra.n.kgre.goryc.la.rk@gmail.com"">f.ra.n.kgre.goryc.la.rk@gmail.com</a>
<a href=""mailto:f.r.an.kg.r.egory.c.l.ark@gmail.com"">f.r.an.kg.r.egory.c.l.ark@gmail.com</a>
<a href=""mailto:f.ran.kgr.ego.ry.cl.ar.k@gmail.com"">f.ran.kgr.ego.ry.cl.ar.k@gmail.com</a>
<a href=""mailto:f.ran.k.gr.e.gor.y.c.la.r.k@gmail.com"">f.ran.k.gr.e.gor.y.c.la.r.k@gmail.com</a>
<a href=""mailto:f.rankgregor.y.c.lar.k@gmail.com"">f.rankgregor.y.c.lar.k@gmail.com</a>
<a href=""mailto:fra.nkg.re.gory.c.l.a.r.k@gmail.com"">fra.nkg.re.gory.c.l.a.r.k@gmail.com</a>
<a href=""mailto:f.r.a.n.kg.r.e.gor.y.c.lar.k@gmail.com"">f.r.a.n.kg.r.e.gor.y.c.lar.k@gmail.com</a>
<a href=""mailto:fran.kg.r.eg.ory.clark@gmail.com"">fran.kg.r.eg.ory.clark@gmail.com</a>
<a href=""mailto:fra.nk.g.r.e.g.or.ycla.rk@gmail.com"">fra.nk.g.r.e.g.or.ycla.rk@gmail.com</a>
<a href=""mailto:f.r.a.nkgr.ego.ryc.lar.k@gmail.com"">f.r.a.nkgr.ego.ryc.lar.k@gmail.com</a>
<a href=""mailto:fra.n.kgre.go.ry.clar.k@gmail.com"">fra.n.kgre.go.ry.clar.k@gmail.com</a>
<a href=""mailto:f.rank.g.r.eg.or.yc.l.a.r.k@gmail.com"">f.rank.g.r.eg.or.yc.l.a.r.k@gmail.com</a>
<a href=""mailto:f.ran.kg.reg.o.r.y.c.la.r.k@gmail.com"">f.ran.kg.reg.o.r.y.c.la.r.k@gmail.com</a>
<a href=""mailto:fr.a.n.k.g.re.go.ry.cla.rk@gmail.com"">fr.a.n.k.g.re.go.ry.cla.rk@gmail.com</a>
<a href=""mailto:f.r.a.nk.g.reg.o.r.ycl.ar.k@gmail.com"">f.r.a.nk.g.reg.o.r.ycl.ar.k@gmail.com</a>
<a href=""mailto:fr.a.nkgr.eg.o.rycl.a.r.k@gmail.com"">fr.a.nkgr.eg.o.rycl.a.r.k@gmail.com</a>
<a href=""mailto:f.rankgr.e.goryc.la.rk@gmail.com"">f.rankgr.e.goryc.la.rk@gmail.com</a>
<a href=""mailto:fr.ank.g.r.eg.orycl.a.rk@gmail.com"">fr.ank.g.r.eg.orycl.a.rk@gmail.com</a>
<a href=""mailto:fra.nk.gr.e.g.or.y.cl.a.r.k@gmail.com"">fra.nk.gr.e.g.or.y.cl.a.r.k@gmail.com</a>
<a href=""mailto:frank.g.re.go.r.ycla.rk@gmail.com"">frank.g.re.go.r.ycla.rk@gmail.com</a>
<a href=""mailto:f.r.ank.gre.go.ry.c.lark@gmail.com"">f.r.ank.gre.go.ry.c.lark@gmail.com</a>
<a href=""mailto:f.ra.n.kgre.gory.c.lar.k@gmail.com"">f.ra.n.kgre.gory.c.lar.k@gmail.com</a>
<a href=""mailto:frank.g.r.eg.o.r.y.clark@gmail.com"">frank.g.r.eg.o.r.y.clark@gmail.com</a>
<a href=""mailto:f.rankg.r.ego.ryc.la.r.k@gmail.com"">f.rankg.r.ego.ryc.la.r.k@gmail.com</a>
<a href=""mailto:fra.nkgregor.y.cl.a.rk@gmail.com"">fra.nkgregor.y.cl.a.rk@gmail.com</a>
<a href=""mailto:fra.n.k.gre.go.r.yc.lark@gmail.com"">fra.n.k.gre.go.r.yc.lark@gmail.com</a>
<a href=""mailto:fra.n.k.g.r.eg.o.r.y.cla.r.k@gmail.com"">fra.n.k.g.r.eg.o.r.y.cla.r.k@gmail.com</a>
<a href=""mailto:fr.ank.gr.e.g.ory.cl.a.rk@gmail.com"">fr.ank.gr.e.g.ory.cl.a.rk@gmail.com</a>
<a href=""mailto:fr.an.kg.re.g.or.y.cla.rk@gmail.com"">fr.an.kg.re.g.or.y.cla.rk@gmail.com</a>
<a href=""mailto:f.rank.gr.eg.o.r.ycl.ark@gmail.com"">f.rank.gr.eg.o.r.ycl.ark@gmail.com</a>
<a href=""mailto:f.rank.g.r.eg.o.ryc.lark@gmail.com"">f.rank.g.r.eg.o.ryc.lark@gmail.com</a>
<a href=""mailto:fra.nk.g.re.go.r.yc.l.ark@gmail.com"">fra.nk.g.re.go.r.yc.l.ark@gmail.com</a>
<a href=""mailto:fran.k.g.rego.ryclar.k@gmail.com"">fran.k.g.rego.ryclar.k@gmail.com</a>
<a href=""mailto:f.r.a.nk.g.re.g.orycl.ar.k@gmail.com"">f.r.a.nk.g.re.g.orycl.ar.k@gmail.com</a>
<a href=""mailto:f.ran.kgr.e.go.ryc.l.ar.k@gmail.com"">f.ran.kgr.e.go.ryc.l.ar.k@gmail.com</a>
<a href=""mailto:fr.a.nkg.r.eg.or.y.c.l.ark@gmail.com"">fr.a.nkg.r.eg.or.y.c.l.ark@gmail.com</a>
<a href=""mailto:fr.a.n.k.g.reg.o.r.ycl.ark@gmail.com"">fr.a.n.k.g.reg.o.r.ycl.ark@gmail.com</a>
<a href=""mailto:fra.n.k.g.regoryc.l.a.rk@gmail.com"">fra.n.k.g.regoryc.l.a.rk@gmail.com</a>
<a href=""mailto:f.r.a.nkgr.eg.or.y.cl.ar.k@gmail.com"">f.r.a.nkgr.eg.or.y.cl.ar.k@gmail.com</a>
<a href=""mailto:fr.ankg.r.eg.ory.c.la.rk@gmail.com"">fr.ankg.r.eg.ory.c.la.rk@gmail.com</a>
<a href=""mailto:f.ran.k.gr.e.gorycl.ar.k@gmail.com"">f.ran.k.gr.e.gorycl.ar.k@gmail.com</a>
<a href=""mailto:f.rank.g.r.e.gor.y.cl.ark@gmail.com"">f.rank.g.r.e.gor.y.cl.ark@gmail.com</a>
<a href=""mailto:fra.nk.gre.goryc.lark@gmail.com"">fra.nk.gre.goryc.lark@gmail.com</a>
<a href=""mailto:f.ra.n.k.g.regoryc.l.a.rk@gmail.com"">f.ra.n.k.g.regoryc.l.a.rk@gmail.com</a>
<a href=""mailto:f.r.ank.gr.e.go.r.y.cl.ar.k@gmail.com"">f.r.ank.gr.e.go.r.y.cl.ar.k@gmail.com</a>
<a href=""mailto:frank.g.reg.or.y.clark@gmail.com"">frank.g.reg.or.y.clark@gmail.com</a>
<a href=""mailto:f.r.an.k.g.r.eg.or.y.cl.a.rk@gmail.com"">f.r.an.k.g.r.eg.or.y.cl.a.rk@gmail.com</a>
<a href=""mailto:fr.a.n.kg.reg.o.ry.clark@gmail.com"">fr.a.n.kg.reg.o.ry.clark@gmail.com</a>
<a href=""mailto:fr.a.n.kg.rego.rycl.a.r.k@gmail.com"">fr.a.n.kg.rego.rycl.a.r.k@gmail.com</a>
<a href=""mailto:f.ra.nk.g.r.e.gory.cl.ar.k@gmail.com"">f.ra.nk.g.r.e.gory.cl.ar.k@gmail.com</a>
<a href=""mailto:fra.nkg.r.e.go.ry.c.l.ar.k@gmail.com"">fra.nkg.r.e.go.ry.c.l.ar.k@gmail.com</a>
<a href=""mailto:frank.g.r.e.g.ory.c.la.r.k@gmail.com"">frank.g.r.e.g.ory.c.la.r.k@gmail.com</a>
<a href=""mailto:frankg.r.e.gor.y.c.l.a.rk@gmail.com"">frankg.r.e.gor.y.c.l.a.rk@gmail.com</a>
<a href=""mailto:f.ra.nkg.r.e.g.o.r.y.cl.ar.k@gmail.com"">f.ra.nkg.r.e.g.o.r.y.cl.ar.k@gmail.com</a>
<a href=""mailto:fra.nkg.r.e.g.o.ry.c.la.r.k@gmail.com"">fra.nkg.r.e.g.o.ry.c.la.r.k@gmail.com</a>
<a href=""mailto:f.r.ankgr.egor.yc.l.a.r.k@gmail.com"">f.r.ankgr.egor.yc.l.a.r.k@gmail.com</a>
<a href=""mailto:f.r.an.kgr.e.g.or.y.cl.ar.k@gmail.com"">f.r.an.kgr.e.g.or.y.cl.ar.k@gmail.com</a>
<a href=""mailto:fra.n.kgre.gor.ycl.ark@gmail.com"">fra.n.kgre.gor.ycl.ark@gmail.com</a>
<a href=""mailto:fra.nkgreg.o.rycl.ar.k@gmail.com"">fra.nkgreg.o.rycl.ar.k@gmail.com</a>
<a href=""mailto:f.r.ankgr.e.go.r.ycl.ark@gmail.com"">f.r.ankgr.e.go.r.ycl.ark@gmail.com</a>
<a href=""mailto:f.ran.kgre.g.ory.cl.a.r.k@gmail.com"">f.ran.kgre.g.ory.cl.a.r.k@gmail.com</a>
<a href=""mailto:fr.a.nk.g.re.g.ory.cl.a.rk@gmail.com"">fr.a.nk.g.re.g.ory.cl.a.rk@gmail.com</a>
<a href=""mailto:fr.ankgrego.r.yc.l.a.r.k@gmail.com"">fr.ankgrego.r.yc.l.a.r.k@gmail.com</a>
<a href=""mailto:fra.n.kg.re.gory.cl.a.rk@gmail.com"">fra.n.kg.re.gory.cl.a.rk@gmail.com</a>
<a href=""mailto:f.ra.nk.gr.e.g.o.r.ycl.ark@gmail.com"">f.ra.nk.gr.e.g.o.r.ycl.ark@gmail.com</a>
<a href=""mailto:f.ran.kgr.e.gor.yc.l.ar.k@gmail.com"">f.ran.kgr.e.gor.yc.l.ar.k@gmail.com</a>
<a href=""mailto:fran.kg.re.g.o.r.y.c.lar.k@gmail.com"">fran.kg.re.g.o.r.y.c.lar.k@gmail.com</a>
<a href=""mailto:f.r.ank.gregor.ycla.r.k@gmail.com"">f.r.ank.gregor.ycla.r.k@gmail.com</a>
<a href=""mailto:f.rank.g.regory.cl.ark@gmail.com"">f.rank.g.regory.cl.ark@gmail.com</a>
<a href=""mailto:fr.an.kgr.e.go.ry.c.l.ark@gmail.com"">fr.an.kgr.e.go.ry.c.l.ark@gmail.com</a>
<a href=""mailto:fran.kg.r.eg.or.yc.lark@gmail.com"">fran.kg.r.eg.or.yc.lark@gmail.com</a>
<a href=""mailto:f.rank.gre.g.orycl.a.r.k@gmail.com"">f.rank.gre.g.orycl.a.r.k@gmail.com</a>
<a href=""mailto:fr.ank.g.r.egory.c.l.ark@gmail.com"">fr.ank.g.r.egory.c.l.ark@gmail.com</a>
<a href=""mailto:f.ran.kg.re.gory.cl.a.rk@gmail.com"">f.ran.kg.re.gory.cl.a.rk@gmail.com</a>
<a href=""mailto:f.rank.gre.g.o.ry.c.la.rk@gmail.com"">f.rank.gre.g.o.ry.c.la.rk@gmail.com</a>
<a href=""mailto:f.ra.nkgr.eg.ory.c.l.a.r.k@gmail.com"">f.ra.nkgr.eg.ory.c.l.a.r.k@gmail.com</a>
<a href=""mailto:f.ra.nkgregory.clark@gmail.com"">f.ra.nkgregory.clark@gmail.com</a>
<a href=""mailto:f.ra.n.kg.rego.r.y.c.l.a.rk@gmail.com"">f.ra.n.kg.rego.r.y.c.l.a.rk@gmail.com</a>
<a href=""mailto:fra.n.k.gre.gory.cl.ark@gmail.com"">fra.n.k.gre.gory.cl.ark@gmail.com</a>
<a href=""mailto:fr.an.k.grego.r.y.cla.r.k@gmail.com"">fr.an.k.grego.r.y.cla.r.k@gmail.com</a>
<a href=""mailto:fra.nkg.re.go.ryclar.k@gmail.com"">fra.nkg.re.go.ryclar.k@gmail.com</a>
<a href=""mailto:f.rankgr.eg.orycl.a.r.k@gmail.com"">f.rankgr.eg.orycl.a.r.k@gmail.com</a>
<a href=""mailto:fra.n.k.gre.g.or.y.cla.r.k@gmail.com"">fra.n.k.gre.g.or.y.cla.r.k@gmail.com</a>
<a href=""mailto:frank.gr.eg.o.rycl.ar.k@gmail.com"">frank.gr.eg.o.rycl.ar.k@gmail.com</a>
<a href=""mailto:f.r.a.n.kgreg.or.y.c.l.a.r.k@gmail.com"">f.r.a.n.kgreg.or.y.c.l.a.r.k@gmail.com</a>
<a href=""mailto:fra.nk.g.reg.or.yclar.k@gmail.com"">fra.nk.g.reg.or.yclar.k@gmail.com</a>
<a href=""mailto:fr.a.nk.gregor.y.cl.ar.k@gmail.com"">fr.a.nk.gregor.y.cl.ar.k@gmail.com</a>
<a href=""mailto:fra.n.kgr.eg.o.ry.cla.r.k@gmail.com"">fra.n.kgr.eg.o.ry.cla.r.k@gmail.com</a>
<a href=""mailto:fr.ankg.reg.o.r.y.clark@gmail.com"">fr.ankg.reg.o.r.y.clark@gmail.com</a>
<a href=""mailto:frankgc@goldwindcouriers.com"">frankgc@goldwindcouriers.com</a>
<a href=""mailto:imfclearance02@gmail.com"">imfclearance02@gmail.com</a>
<a href=""mailto:imf.c.l.e.a.ran.ce.02@gmail.com"">imf.c.l.e.a.ran.ce.02@gmail.com</a>
<a href=""mailto:i.mf.clea.ra.n.c.e.0.2@gmail.com"">i.mf.clea.ra.n.c.e.0.2@gmail.com</a>
<a href=""mailto:imfcl.e.ar.an.ce02@gmail.com"">imfcl.e.ar.an.ce02@gmail.com</a>
<a href=""mailto:imf.c.l.e.a.r.anc.e.0.2@gmail.com"">imf.c.l.e.a.r.anc.e.0.2@gmail.com</a>
<a href=""mailto:i.m.f.c.l.e.ar.a.n.ce.02@gmail.com"">i.m.f.c.l.e.ar.a.n.ce.02@gmail.com</a>
<a href=""mailto:imfcle.aran.ce.02@gmail.com"">imfcle.aran.ce.02@gmail.com</a>
<a href=""mailto:i.mf.c.lear.a.n.ce.02@gmail.com"">i.mf.c.lear.a.n.ce.02@gmail.com</a>
<a href=""mailto:imf.c.l.ea.r.ance0.2@gmail.com"">imf.c.l.ea.r.ance0.2@gmail.com</a>
<a href=""mailto:i.m.fcle.aranc.e.02@gmail.com"">i.m.fcle.aranc.e.02@gmail.com</a>
<a href=""mailto:i.mfc.l.ea.ran.ce.0.2@gmail.com"">i.mfc.l.ea.ran.ce.0.2@gmail.com</a>
<a href=""mailto:imf.c.lea.r.an.c.e02@gmail.com"">imf.c.lea.r.an.c.e02@gmail.com</a>
<a href=""mailto:imf.c.l.e.ar.anc.e02@gmail.com"">imf.c.l.e.ar.anc.e02@gmail.com</a>
<a href=""mailto:i.mf.cl.ea.r.anc.e.0.2@gmail.com"">i.mf.cl.ea.r.anc.e.0.2@gmail.com</a>
<a href=""mailto:im.fc.le.a.r.a.n.c.e.02@gmail.com"">im.fc.le.a.r.a.n.c.e.02@gmail.com</a>
<a href=""mailto:i.mf.c.l.e.aran.c.e.0.2@gmail.com"">i.mf.c.l.e.aran.c.e.0.2@gmail.com</a>
<a href=""mailto:im.fcl.e.ar.a.n.ce.02@gmail.com"">im.fcl.e.ar.a.n.ce.02@gmail.com</a>
<a href=""mailto:imf.c.le.ar.a.n.ce.02@gmail.com"">imf.c.le.ar.a.n.ce.02@gmail.com</a>
<a href=""mailto:i.mfcle.ar.a.n.c.e.0.2@gmail.com"">i.mfcle.ar.a.n.c.e.0.2@gmail.com</a>
<a href=""mailto:imf.c.le.ar.a.n.c.e.02@gmail.com"">imf.c.le.ar.a.n.c.e.02@gmail.com</a>
<a href=""mailto:imf.cle.ar.a.n.c.e0.2@gmail.com"">imf.cle.ar.a.n.c.e0.2@gmail.com</a>
<a href=""mailto:imf.cl.ear.a.nce02@gmail.com"">imf.cl.ear.a.nce02@gmail.com</a>
<a href=""mailto:imf.c.l.e.ar.ance.0.2@gmail.com"">imf.c.l.e.ar.ance.0.2@gmail.com</a>
<a href=""mailto:im.fcl.eara.nce0.2@gmail.com"">im.fcl.eara.nce0.2@gmail.com</a>
<a href=""mailto:im.f.clea.ra.n.c.e.02@gmail.com"">im.f.clea.ra.n.c.e.02@gmail.com</a>
<a href=""mailto:i.m.f.cle.a.rance0.2@gmail.com"">i.m.f.cle.a.rance0.2@gmail.com</a>
<a href=""mailto:imf.c.l.e.ar.an.ce.02@gmail.com"">imf.c.l.e.ar.an.ce.02@gmail.com</a>
<a href=""mailto:i.m.f.cle.a.r.a.n.c.e02@gmail.com"">i.m.f.cle.a.r.a.n.c.e02@gmail.com</a>
<a href=""mailto:i.m.f.c.lea.r.a.nc.e.0.2@gmail.com"">i.m.f.c.lea.r.a.nc.e.0.2@gmail.com</a>
<a href=""mailto:i.mf.cl.e.a.ra.nce02@gmail.com"">i.mf.cl.e.a.ra.nce02@gmail.com</a>
<a href=""mailto:im.f.c.l.earan.c.e0.2@gmail.com"">im.f.c.l.earan.c.e0.2@gmail.com</a>
<a href=""mailto:im.fc.l.e.ar.an.ce.0.2@gmail.com"">im.fc.l.e.ar.an.ce.0.2@gmail.com</a>
<a href=""mailto:imfclear.anc.e0.2@gmail.com"">imfclear.anc.e0.2@gmail.com</a>
<a href=""mailto:im.f.cl.e.ar.a.nce02@gmail.com"">im.f.cl.e.ar.a.nce02@gmail.com</a>
<a href=""mailto:imf.cle.a.r.a.nce.02@gmail.com"">imf.cle.a.r.a.nce.02@gmail.com</a>
<a href=""mailto:im.fcle.ara.nc.e.02@gmail.com"">im.fcle.ara.nc.e.02@gmail.com</a>
<a href=""mailto:im.fc.lea.r.ance.0.2@gmail.com"">im.fc.lea.r.ance.0.2@gmail.com</a>
<a href=""mailto:i.mf.c.l.e.ara.n.ce02@gmail.com"">i.mf.c.l.e.ara.n.ce02@gmail.com</a>
<a href=""mailto:im.fc.l.ea.r.an.c.e.02@gmail.com"">im.fc.l.ea.r.an.c.e.02@gmail.com</a>
<a href=""mailto:i.m.f.c.l.ea.ra.n.c.e.0.2@gmail.com"">i.m.f.c.l.ea.ra.n.c.e.0.2@gmail.com</a>
<a href=""mailto:im.fcle.ar.anc.e.0.2@gmail.com"">im.fcle.ar.anc.e.0.2@gmail.com</a>
<a href=""mailto:imf.clea.r.a.nc.e0.2@gmail.com"">imf.clea.r.a.nc.e0.2@gmail.com</a>
<a href=""mailto:i.mfcle.a.ra.n.c.e.0.2@gmail.com"">i.mfcle.a.ra.n.c.e.0.2@gmail.com</a>
<a href=""mailto:im.fcle.a.ran.ce02@gmail.com"">im.fcle.a.ran.ce02@gmail.com</a>
<a href=""mailto:i.m.f.clearance02@gmail.com"">i.m.f.clearance02@gmail.com</a>
<a href=""mailto:i.m.f.c.l.e.a.r.an.c.e.0.2@gmail.com"">i.m.f.c.l.e.a.r.an.c.e.0.2@gmail.com</a>
<a href=""mailto:i.m.f.c.lea.r.ance.0.2@gmail.com"">i.m.f.c.lea.r.ance.0.2@gmail.com</a>
<a href=""mailto:i.m.fc.le.a.ra.nce02@gmail.com"">i.m.fc.le.a.ra.nce02@gmail.com</a>
<a href=""mailto:imfcl.ea.rance02@gmail.com"">imfcl.ea.rance02@gmail.com</a>
<a href=""mailto:i.mfc.lea.r.an.c.e02@gmail.com"">i.mfc.lea.r.an.c.e02@gmail.com</a>
<a href=""mailto:i.m.fcl.ear.ance.0.2@gmail.com"">i.m.fcl.ear.ance.0.2@gmail.com</a>
<a href=""mailto:im.f.cle.ara.nce.02@gmail.com"">im.f.cle.ara.nce.02@gmail.com</a>
<a href=""mailto:i.mf.cle.a.r.a.n.ce.0.2@gmail.com"">i.mf.cle.a.r.a.n.ce.0.2@gmail.com</a>
<a href=""mailto:imf.clearan.c.e.0.2@gmail.com"">imf.clearan.c.e.0.2@gmail.com</a>
<a href=""mailto:i.mf.clea.ranc.e.0.2@gmail.com"">i.mf.clea.ranc.e.0.2@gmail.com</a>
<a href=""mailto:im.f.cl.e.ara.nce.0.2@gmail.com"">im.f.cl.e.ara.nce.0.2@gmail.com</a>
<a href=""mailto:imfc.le.a.r.an.c.e.02@gmail.com"">imfc.le.a.r.an.c.e.02@gmail.com</a>
<a href=""mailto:imf.cle.a.r.anc.e02@gmail.com"">imf.cle.a.r.anc.e02@gmail.com</a>
<a href=""mailto:im.f.cl.e.ar.anc.e02@gmail.com"">im.f.cl.e.ar.anc.e02@gmail.com</a>
<a href=""mailto:i.m.f.c.l.ear.an.ce0.2@gmail.com"">i.m.f.c.l.ear.an.ce0.2@gmail.com</a>
<a href=""mailto:imf.c.l.e.ar.anc.e.0.2@gmail.com"">imf.c.l.e.ar.anc.e.0.2@gmail.com</a>
<a href=""mailto:imfcle.ar.a.nce02@gmail.com"">imfcle.ar.a.nce02@gmail.com</a>
<a href=""mailto:imf.cle.ar.a.n.ce.0.2@gmail.com"">imf.cle.ar.a.n.ce.0.2@gmail.com</a>
<a href=""mailto:imfclear.an.ce.02@gmail.com"">imfclear.an.ce.02@gmail.com</a>
<a href=""mailto:imfcl.ea.rance0.2@gmail.com"">imfcl.ea.rance0.2@gmail.com</a>
<a href=""mailto:imfc.le.ara.nce.02@gmail.com"">imfc.le.ara.nce.02@gmail.com</a>
<a href=""mailto:im.f.c.l.ea.ra.nc.e.0.2@gmail.com"">im.f.c.l.ea.ra.nc.e.0.2@gmail.com</a>
<a href=""mailto:imf.c.l.ea.r.anc.e.0.2@gmail.com"">imf.c.l.ea.r.anc.e.0.2@gmail.com</a>
<a href=""mailto:i.m.fc.l.ear.a.n.ce.02@gmail.com"">i.m.fc.l.ear.a.n.ce.02@gmail.com</a>
<a href=""mailto:imfc.lea.r.ance.0.2@gmail.com"">imfc.lea.r.ance.0.2@gmail.com</a>
<a href=""mailto:imfc.l.e.a.r.a.n.ce0.2@gmail.com"">imfc.l.e.a.r.a.n.ce0.2@gmail.com</a>
<a href=""mailto:imf.c.le.a.ranc.e02@gmail.com"">imf.c.le.a.ranc.e02@gmail.com</a>
<a href=""mailto:im.f.c.leara.nc.e.0.2@gmail.com"">im.f.c.leara.nc.e.0.2@gmail.com</a>
<a href=""mailto:i.m.f.c.le.a.ra.n.c.e02@gmail.com"">i.m.f.c.le.a.ra.n.c.e02@gmail.com</a>
<a href=""mailto:i.m.f.c.le.ar.ance.0.2@gmail.com"">i.m.f.c.le.ar.ance.0.2@gmail.com</a>
<a href=""mailto:i.mf.clea.ra.nce.02@gmail.com"">i.mf.clea.ra.nce.02@gmail.com</a>
<a href=""mailto:imfc.le.ara.nc.e.02@gmail.com"">imfc.le.ara.nc.e.02@gmail.com</a>
<a href=""mailto:i.mf.c.l.e.ar.ance.02@gmail.com"">i.mf.c.l.e.ar.ance.02@gmail.com</a>
<a href=""mailto:imf.cl.ear.anc.e.0.2@gmail.com"">imf.cl.ear.anc.e.0.2@gmail.com</a>
<a href=""mailto:i.mf.cle.a.r.an.ce0.2@gmail.com"">i.mf.cle.a.r.an.ce0.2@gmail.com</a>
<a href=""mailto:i.m.f.cl.ear.an.c.e02@gmail.com"">i.m.f.cl.ear.an.c.e02@gmail.com</a>
<a href=""mailto:imf.cle.a.ra.n.ce.02@gmail.com"">imf.cle.a.ra.n.ce.02@gmail.com</a>
<a href=""mailto:i.mfc.lea.r.an.ce.02@gmail.com"">i.mfc.lea.r.an.ce.02@gmail.com</a>
<a href=""mailto:i.mf.cl.e.a.r.a.nc.e.02@gmail.com"">i.mf.cl.e.a.r.a.nc.e.02@gmail.com</a>
<a href=""mailto:i.m.fc.le.ara.n.c.e.02@gmail.com"">i.m.fc.le.ara.n.c.e.02@gmail.com</a>
<a href=""mailto:i.m.fcl.eara.nc.e.02@gmail.com"">i.m.fcl.eara.nc.e.02@gmail.com</a>
<a href=""mailto:i.m.fclea.r.a.nc.e.02@gmail.com"">i.m.fclea.r.a.nc.e.02@gmail.com</a>
<a href=""mailto:imf.cl.ear.a.n.ce.0.2@gmail.com"">imf.cl.ear.a.n.ce.0.2@gmail.com</a>
<a href=""mailto:i.mfc.l.ea.r.an.ce02@gmail.com"">i.mfc.l.ea.r.an.ce02@gmail.com</a>
<a href=""mailto:imf.cl.ea.r.anc.e.0.2@gmail.com"">imf.cl.ea.r.anc.e.0.2@gmail.com</a>
<a href=""mailto:imfc.l.ear.a.n.ce.0.2@gmail.com"">imfc.l.ear.a.n.ce.0.2@gmail.com</a>
<a href=""mailto:i.mf.cl.e.a.r.anc.e0.2@gmail.com"">i.mf.cl.e.a.r.anc.e0.2@gmail.com</a>
<a href=""mailto:i.m.f.cl.e.a.r.a.n.c.e.0.2@gmail.com"">i.m.f.cl.e.a.r.a.n.c.e.0.2@gmail.com</a>
<a href=""mailto:i.mfcl.ea.ra.n.c.e.0.2@gmail.com"">i.mfcl.ea.ra.n.c.e.0.2@gmail.com</a>
<a href=""mailto:imf.c.lea.r.an.ce.02@gmail.com"">imf.c.lea.r.an.ce.02@gmail.com</a>
<a href=""mailto:i.mfcle.a.ra.nce02@gmail.com"">i.mfcle.a.ra.nce02@gmail.com</a>
<a href=""mailto:i.m.fcl.e.a.ran.c.e02@gmail.com"">i.m.fcl.e.a.ran.c.e02@gmail.com</a>
<a href=""mailto:im.f.c.lea.ranc.e0.2@gmail.com"">im.f.c.lea.ranc.e0.2@gmail.com</a>
<a href=""mailto:i.mfc.l.ea.ra.n.ce0.2@gmail.com"">i.mfc.l.ea.ra.n.ce0.2@gmail.com</a>
<a href=""mailto:im.fcl.ea.r.anc.e02@gmail.com"">im.fcl.ea.r.anc.e02@gmail.com</a>
<a href=""mailto:im.f.cle.a.r.a.nc.e0.2@gmail.com"">im.f.cle.a.r.a.nc.e0.2@gmail.com</a>
<a href=""mailto:imfc.l.eara.nc.e0.2@gmail.com"">imfc.l.eara.nc.e0.2@gmail.com</a>
<a href=""mailto:im.fcl.e.a.ran.ce.0.2@gmail.com"">im.fcl.e.a.ran.ce.0.2@gmail.com</a>
<a href=""mailto:i.m.f.cl.e.a.ran.c.e.0.2@gmail.com"">i.m.f.cl.e.a.ran.c.e.0.2@gmail.com</a>
<a href=""mailto:i.m.fc.leara.nc.e.0.2@gmail.com"">i.m.fc.leara.nc.e.0.2@gmail.com</a>
<a href=""mailto:im.f.c.l.e.a.r.an.c.e0.2@gmail.com"">im.f.c.l.e.a.r.an.c.e0.2@gmail.com</a>
<a href=""mailto:imf.c.lear.a.n.c.e0.2@gmail.com"">imf.c.lear.a.n.c.e0.2@gmail.com</a>
<a href=""mailto:i.m.fcl.ea.ra.n.ce0.2@gmail.com"">i.m.fcl.ea.ra.n.ce0.2@gmail.com</a>
<a href=""mailto:imfcl.eara.nc.e02@gmail.com"">imfcl.eara.nc.e02@gmail.com</a>
<a href=""mailto:i.m.fc.l.earan.c.e0.2@gmail.com"">i.m.fc.l.earan.c.e0.2@gmail.com</a>
<a href=""mailto:im.f.cl.ea.r.a.n.c.e.02@gmail.com"">im.f.cl.ea.r.a.n.c.e.02@gmail.com</a>
<a href=""mailto:i.m.f.c.le.a.ra.nce.0.2@gmail.com"">i.m.f.c.le.a.ra.nce.0.2@gmail.com</a>
<a href=""mailto:i.m.fc.le.a.r.a.n.c.e.0.2@gmail.com"">i.m.fc.le.a.r.a.n.c.e.0.2@gmail.com</a>
<a href=""mailto:im.fclea.r.an.c.e.02@gmail.com"">im.fclea.r.an.c.e.02@gmail.com</a>
<a href=""mailto:i.mf.cl.ea.ran.ce0.2@gmail.com"">i.mf.cl.ea.ran.ce0.2@gmail.com</a>
<a href=""mailto:imf.cle.ar.an.ce0.2@gmail.com"">imf.cle.ar.an.ce0.2@gmail.com</a>
<a href=""mailto:i.m.f.c.l.ea.r.a.n.c.e.02@gmail.com"">i.m.f.c.l.ea.r.a.n.c.e.02@gmail.com</a>
<a href=""mailto:im.fcl.ea.ran.ce.0.2@gmail.com"">im.fcl.ea.ran.ce.0.2@gmail.com</a>
<a href=""mailto:i.m.fc.l.e.a.ra.n.c.e.02@gmail.com"">i.m.fc.l.e.a.ra.n.c.e.02@gmail.com</a>
<a href=""mailto:i.m.f.c.l.e.ar.ance.02@gmail.com"">i.m.f.c.l.e.ar.ance.02@gmail.com</a>
<a href=""mailto:im.f.c.lea.r.an.ce02@gmail.com"">im.f.c.lea.r.an.ce02@gmail.com</a>
<a href=""mailto:im.f.cl.e.a.r.an.c.e.0.2@gmail.com"">im.f.cl.e.a.r.an.c.e.0.2@gmail.com</a>
<a href=""mailto:i.mfc.l.ea.r.ance02@gmail.com"">i.mfc.l.ea.r.ance02@gmail.com</a>
<a href=""mailto:i.m.fcl.ea.ra.nce0.2@gmail.com"">i.m.fcl.ea.ra.nce0.2@gmail.com</a>
<a href=""mailto:im.f.cle.ar.ance.02@gmail.com"">im.f.cle.ar.ance.02@gmail.com</a>
<a href=""mailto:i.m.fc.l.e.a.r.an.ce.0.2@gmail.com"">i.m.fc.l.e.a.r.an.ce.0.2@gmail.com</a>
<a href=""mailto:imf.c.l.e.a.r.an.ce02@gmail.com"">imf.c.l.e.a.r.an.ce02@gmail.com</a>
<a href=""mailto:im.f.cl.ea.r.a.n.c.e02@gmail.com"">im.f.cl.ea.r.a.n.c.e02@gmail.com</a>
<a href=""mailto:im.fcl.e.ar.a.nc.e.0.2@gmail.com"">im.fcl.e.ar.a.nc.e.0.2@gmail.com</a>
<a href=""mailto:i.mfc.leara.nc.e.02@gmail.com"">i.mfc.leara.nc.e.02@gmail.com</a>
<a href=""mailto:imf.cle.a.r.a.n.c.e.02@gmail.com"">imf.cle.a.r.a.n.c.e.02@gmail.com</a>
<a href=""mailto:imfc.l.e.ar.anc.e.02@gmail.com"">imfc.l.e.ar.anc.e.02@gmail.com</a>
<a href=""mailto:im.f.cl.e.a.ra.n.c.e.02@gmail.com"">im.f.cl.e.a.ra.n.c.e.02@gmail.com</a>
<a href=""mailto:i.m.fcl.ear.ance.02@gmail.com"">i.m.fcl.ear.ance.02@gmail.com</a>
<a href=""mailto:i.mfc.lea.ran.ce.0.2@gmail.com"">i.mfc.lea.ran.ce.0.2@gmail.com</a>
<a href=""mailto:im.f.clea.ran.c.e.0.2@gmail.com"">im.f.clea.ran.c.e.0.2@gmail.com</a>
<a href=""mailto:im.f.c.le.a.r.a.n.ce.0.2@gmail.com"">im.f.c.le.a.r.a.n.ce.0.2@gmail.com</a>
<a href=""mailto:i.m.fc.l.eara.nce.02@gmail.com"">i.m.fc.l.eara.nce.02@gmail.com</a>
<a href=""mailto:i.mf.cl.ea.r.a.n.c.e.0.2@gmail.com"">i.mf.cl.ea.r.a.n.c.e.0.2@gmail.com</a>
<a href=""mailto:imfc.l.e.a.r.ance.02@gmail.com"">imfc.l.e.a.r.ance.02@gmail.com</a>
<a href=""mailto:im.fc.lea.ran.c.e02@gmail.com"">im.fc.lea.ran.c.e02@gmail.com</a>
<a href=""mailto:imf.cl.e.a.r.a.nc.e0.2@gmail.com"">imf.cl.e.a.r.a.nc.e0.2@gmail.com</a>
<a href=""mailto:i.m.fcle.aran.c.e02@gmail.com"">i.m.fcle.aran.c.e02@gmail.com</a>
<a href=""mailto:im.fc.le.ara.n.c.e.0.2@gmail.com"">im.fc.le.ara.n.c.e.0.2@gmail.com</a>
<a href=""mailto:imf.cl.eara.n.c.e.02@gmail.com"">imf.cl.eara.n.c.e.02@gmail.com</a>
<a href=""mailto:i.mf.c.le.ara.n.ce.02@gmail.com"">i.mf.c.le.ara.n.ce.02@gmail.com</a>
<a href=""mailto:im.fc.l.e.a.r.a.nce02@gmail.com"">im.fc.l.e.a.r.a.nce02@gmail.com</a>
<a href=""mailto:i.mf.cl.ea.ra.nc.e.02@gmail.com"">i.mf.cl.ea.ra.nc.e.02@gmail.com</a>
<a href=""mailto:im.f.cl.ea.r.a.n.ce.02@gmail.com"">im.f.cl.ea.r.a.n.ce.02@gmail.com</a>
<a href=""mailto:i.m.f.c.l.ea.ran.ce0.2@gmail.com"">i.m.f.c.l.ea.ran.ce0.2@gmail.com</a>
<a href=""mailto:im.f.c.le.ara.nc.e.02@gmail.com"">im.f.c.le.ara.nc.e.02@gmail.com</a>
<a href=""mailto:im.f.c.le.ar.a.nce.02@gmail.com"">im.f.c.le.ar.a.nce.02@gmail.com</a>
<a href=""mailto:i.m.fcl.ea.ra.n.ce02@gmail.com"">i.m.fcl.ea.ra.n.ce02@gmail.com</a>
<a href=""mailto:imfcle.aranc.e.02@gmail.com"">imfcle.aranc.e.02@gmail.com</a>
<a href=""mailto:i.m.f.cle.aranc.e.02@gmail.com"">i.m.f.cle.aranc.e.02@gmail.com</a>
<a href=""mailto:i.m.f.cl.e.a.ra.n.ce.0.2@gmail.com"">i.m.f.cl.e.a.ra.n.ce.0.2@gmail.com</a>
<a href=""mailto:im.fcl.e.a.ra.nc.e0.2@gmail.com"">im.fcl.e.a.ra.nc.e0.2@gmail.com</a>
<a href=""mailto:i.mf.c.le.a.ranc.e0.2@gmail.com"">i.mf.c.le.a.ranc.e0.2@gmail.com</a>
<a href=""mailto:i.mfcle.a.r.an.ce.0.2@gmail.com"">i.mfcle.a.r.an.ce.0.2@gmail.com</a>
<a href=""mailto:i.mf.cl.e.aran.ce.02@gmail.com"">i.mf.cl.e.aran.ce.02@gmail.com</a>
<a href=""mailto:i.m.f.cl.ea.ra.nc.e02@gmail.com"">i.m.f.cl.ea.ra.nc.e02@gmail.com</a>
<a href=""mailto:i.m.fcle.aran.ce.0.2@gmail.com"">i.m.fcle.aran.ce.0.2@gmail.com</a>
<a href=""mailto:im.f.c.le.ara.nce.02@gmail.com"">im.f.c.le.ara.nce.02@gmail.com</a>
<a href=""mailto:i.m.f.clear.a.nc.e0.2@gmail.com"">i.m.f.clear.a.nc.e0.2@gmail.com</a>
<a href=""mailto:imfc.l.ear.ance02@gmail.com"">imfc.l.ear.ance02@gmail.com</a>
<a href=""mailto:i.m.f.cl.e.aran.c.e0.2@gmail.com"">i.m.f.cl.e.aran.c.e0.2@gmail.com</a>
<a href=""mailto:imfc.l.ear.a.nce.02@gmail.com"">imfc.l.ear.a.nce.02@gmail.com</a>
<a href=""mailto:i.m.f.cl.ea.ra.nc.e.02@gmail.com"">i.m.f.cl.ea.ra.nc.e.02@gmail.com</a>
<a href=""mailto:i.mf.c.l.eara.nc.e.02@gmail.com"">i.mf.c.l.eara.nc.e.02@gmail.com</a>
<a href=""mailto:i.mf.c.lea.ran.c.e.02@gmail.com"">i.mf.c.lea.ran.c.e.02@gmail.com</a>
<a href=""mailto:i.m.f.c.leara.nce0.2@gmail.com"">i.m.f.c.leara.nce0.2@gmail.com</a>
<a href=""mailto:imfc.le.ara.n.ce.0.2@gmail.com"">imfc.le.ara.n.ce.0.2@gmail.com</a>
<a href=""mailto:i.m.fclear.an.ce.02@gmail.com"">i.m.fclear.an.ce.02@gmail.com</a>
<a href=""mailto:im.fcle.a.ra.nce.0.2@gmail.com"">im.fcle.a.ra.nce.0.2@gmail.com</a>
<a href=""mailto:i.mfcle.a.ran.c.e0.2@gmail.com"">i.mfcle.a.ran.c.e0.2@gmail.com</a>
<a href=""mailto:imf.c.lear.a.n.ce.02@gmail.com"">imf.c.lear.a.n.ce.02@gmail.com</a>
<a href=""mailto:im.fc.l.e.a.r.a.nce.02@gmail.com"">im.fc.l.e.a.r.a.nce.02@gmail.com</a>
<a href=""mailto:i.m.fc.lea.ranc.e.0.2@gmail.com"">i.m.fc.lea.ranc.e.0.2@gmail.com</a>
<a href=""mailto:i.m.f.c.le.ar.a.nce.0.2@gmail.com"">i.m.f.c.le.ar.a.nce.0.2@gmail.com</a>
<a href=""mailto:im.f.c.le.a.r.a.n.c.e02@gmail.com"">im.f.c.le.a.r.a.n.c.e02@gmail.com</a>
<a href=""mailto:imfc.l.e.a.r.an.ce0.2@gmail.com"">imfc.l.e.a.r.an.ce0.2@gmail.com</a>
<a href=""mailto:i.m.fclea.r.anc.e02@gmail.com"">i.m.fclea.r.anc.e02@gmail.com</a>
<a href=""mailto:im.f.cl.ea.r.an.c.e02@gmail.com"">im.f.cl.ea.r.an.c.e02@gmail.com</a>
<a href=""mailto:imf.c.leara.nc.e.0.2@gmail.com"">imf.c.leara.nc.e.0.2@gmail.com</a>
<a href=""mailto:i.m.f.clea.ra.n.ce.0.2@gmail.com"">i.m.f.clea.ra.n.ce.0.2@gmail.com</a>
<a href=""mailto:imf.c.le.a.r.an.c.e02@gmail.com"">imf.c.le.a.r.an.c.e02@gmail.com</a>
<a href=""mailto:imfc.lea.r.an.ce.02@gmail.com"">imfc.lea.r.an.ce.02@gmail.com</a>
<a href=""mailto:i.m.fc.l.ea.r.a.n.c.e.0.2@gmail.com"">i.m.fc.l.ea.r.a.n.c.e.0.2@gmail.com</a>
<a href=""mailto:i.mfc.le.aran.c.e.02@gmail.com"">i.mfc.le.aran.c.e.02@gmail.com</a>
<a href=""mailto:i.mf.cl.earance.02@gmail.com"">i.mf.cl.earance.02@gmail.com</a>
<a href=""mailto:imf.c.le.aran.ce.0.2@gmail.com"">imf.c.le.aran.ce.0.2@gmail.com</a>
<a href=""mailto:i.mf.c.le.aran.c.e.0.2@gmail.com"">i.mf.c.le.aran.c.e.0.2@gmail.com</a>
<a href=""mailto:i.m.fc.l.e.a.r.anc.e.02@gmail.com"">i.m.fc.l.e.a.r.anc.e.02@gmail.com</a>
<a href=""mailto:imf.cl.ear.ance0.2@gmail.com"">imf.cl.ear.ance0.2@gmail.com</a>
<a href=""mailto:i.mf.cl.earanc.e.02@gmail.com"">i.mf.cl.earanc.e.02@gmail.com</a>
<a href=""mailto:i.mf.c.l.ea.r.an.c.e.0.2@gmail.com"">i.mf.c.l.ea.r.an.c.e.0.2@gmail.com</a>
<a href=""mailto:im.fcle.ara.n.ce.0.2@gmail.com"">im.fcle.ara.n.ce.0.2@gmail.com</a>
<a href=""mailto:im.fc.l.e.aran.c.e.02@gmail.com"">im.fc.l.e.aran.c.e.02@gmail.com</a>
<a href=""mailto:im.fc.l.ear.an.ce.02@gmail.com"">im.fc.l.ear.an.ce.02@gmail.com</a>
<a href=""mailto:i.m.fc.le.ar.a.n.c.e02@gmail.com"">i.m.fc.le.ar.a.n.c.e02@gmail.com</a>
<a href=""mailto:imfc.le.a.r.an.ce0.2@gmail.com"">imfc.le.a.r.an.ce0.2@gmail.com</a>"
s8b5yyJ6,Nigerian scammers [4-2-1/2024],bombaires,AIMMS,Sunday 4th of February 2024 10:38:51 AM CDT,"<a href=""mailto:upsdeliveryservice2000@gmail.com"">upsdeliveryservice2000@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+26298@gmail.com"">upsdeliveryservice2000+26298@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+30250@gmail.com"">upsdeliveryservice2000+30250@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+1844@gmail.com"">upsdeliveryservice2000+1844@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+23847@gmail.com"">upsdeliveryservice2000+23847@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+24676@gmail.com"">upsdeliveryservice2000+24676@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+12842@gmail.com"">upsdeliveryservice2000+12842@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+3846@gmail.com"">upsdeliveryservice2000+3846@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+24596@gmail.com"">upsdeliveryservice2000+24596@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+6490@gmail.com"">upsdeliveryservice2000+6490@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+8844@gmail.com"">upsdeliveryservice2000+8844@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+16270@gmail.com"">upsdeliveryservice2000+16270@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+20674@gmail.com"">upsdeliveryservice2000+20674@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+27212@gmail.com"">upsdeliveryservice2000+27212@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+1235@gmail.com"">upsdeliveryservice2000+1235@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+9226@gmail.com"">upsdeliveryservice2000+9226@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+25874@gmail.com"">upsdeliveryservice2000+25874@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+27856@gmail.com"">upsdeliveryservice2000+27856@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+8132@gmail.com"">upsdeliveryservice2000+8132@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+26885@gmail.com"">upsdeliveryservice2000+26885@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+14908@gmail.com"">upsdeliveryservice2000+14908@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+28868@gmail.com"">upsdeliveryservice2000+28868@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+24174@gmail.com"">upsdeliveryservice2000+24174@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+21599@gmail.com"">upsdeliveryservice2000+21599@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+7115@gmail.com"">upsdeliveryservice2000+7115@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+19019@gmail.com"">upsdeliveryservice2000+19019@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+10818@gmail.com"">upsdeliveryservice2000+10818@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+24463@gmail.com"">upsdeliveryservice2000+24463@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+1155@gmail.com"">upsdeliveryservice2000+1155@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+11372@gmail.com"">upsdeliveryservice2000+11372@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+14980@gmail.com"">upsdeliveryservice2000+14980@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+3450@gmail.com"">upsdeliveryservice2000+3450@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+21884@gmail.com"">upsdeliveryservice2000+21884@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+1068@gmail.com"">upsdeliveryservice2000+1068@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+12035@gmail.com"">upsdeliveryservice2000+12035@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+23686@gmail.com"">upsdeliveryservice2000+23686@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+30915@gmail.com"">upsdeliveryservice2000+30915@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+8161@gmail.com"">upsdeliveryservice2000+8161@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+699@gmail.com"">upsdeliveryservice2000+699@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+32011@gmail.com"">upsdeliveryservice2000+32011@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+6788@gmail.com"">upsdeliveryservice2000+6788@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+2926@gmail.com"">upsdeliveryservice2000+2926@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+9980@gmail.com"">upsdeliveryservice2000+9980@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+28705@gmail.com"">upsdeliveryservice2000+28705@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+30380@gmail.com"">upsdeliveryservice2000+30380@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+7108@gmail.com"">upsdeliveryservice2000+7108@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+13071@gmail.com"">upsdeliveryservice2000+13071@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+7424@gmail.com"">upsdeliveryservice2000+7424@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+18226@gmail.com"">upsdeliveryservice2000+18226@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+18896@gmail.com"">upsdeliveryservice2000+18896@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+18831@gmail.com"">upsdeliveryservice2000+18831@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+7506@gmail.com"">upsdeliveryservice2000+7506@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+4502@gmail.com"">upsdeliveryservice2000+4502@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+13951@gmail.com"">upsdeliveryservice2000+13951@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+30416@gmail.com"">upsdeliveryservice2000+30416@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+18713@gmail.com"">upsdeliveryservice2000+18713@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+2480@gmail.com"">upsdeliveryservice2000+2480@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+28881@gmail.com"">upsdeliveryservice2000+28881@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+27852@gmail.com"">upsdeliveryservice2000+27852@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+4259@gmail.com"">upsdeliveryservice2000+4259@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+21184@gmail.com"">upsdeliveryservice2000+21184@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+14129@gmail.com"">upsdeliveryservice2000+14129@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+4393@gmail.com"">upsdeliveryservice2000+4393@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+8524@gmail.com"">upsdeliveryservice2000+8524@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+19640@gmail.com"">upsdeliveryservice2000+19640@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+11421@gmail.com"">upsdeliveryservice2000+11421@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+29182@gmail.com"">upsdeliveryservice2000+29182@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+9156@gmail.com"">upsdeliveryservice2000+9156@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+31326@gmail.com"">upsdeliveryservice2000+31326@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+22857@gmail.com"">upsdeliveryservice2000+22857@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+1993@gmail.com"">upsdeliveryservice2000+1993@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+5478@gmail.com"">upsdeliveryservice2000+5478@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+4055@gmail.com"">upsdeliveryservice2000+4055@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+32417@gmail.com"">upsdeliveryservice2000+32417@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+31947@gmail.com"">upsdeliveryservice2000+31947@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+18721@gmail.com"">upsdeliveryservice2000+18721@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+28557@gmail.com"">upsdeliveryservice2000+28557@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+12132@gmail.com"">upsdeliveryservice2000+12132@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+2132@gmail.com"">upsdeliveryservice2000+2132@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+32201@gmail.com"">upsdeliveryservice2000+32201@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+22964@gmail.com"">upsdeliveryservice2000+22964@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+25592@gmail.com"">upsdeliveryservice2000+25592@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+10665@gmail.com"">upsdeliveryservice2000+10665@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+14861@gmail.com"">upsdeliveryservice2000+14861@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+3914@gmail.com"">upsdeliveryservice2000+3914@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+30794@gmail.com"">upsdeliveryservice2000+30794@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+5007@gmail.com"">upsdeliveryservice2000+5007@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+9275@gmail.com"">upsdeliveryservice2000+9275@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+30109@gmail.com"">upsdeliveryservice2000+30109@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+10895@gmail.com"">upsdeliveryservice2000+10895@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+11764@gmail.com"">upsdeliveryservice2000+11764@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+10691@gmail.com"">upsdeliveryservice2000+10691@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+3128@gmail.com"">upsdeliveryservice2000+3128@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+12901@gmail.com"">upsdeliveryservice2000+12901@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+14788@gmail.com"">upsdeliveryservice2000+14788@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+24339@gmail.com"">upsdeliveryservice2000+24339@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+21224@gmail.com"">upsdeliveryservice2000+21224@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+1536@gmail.com"">upsdeliveryservice2000+1536@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+1377@gmail.com"">upsdeliveryservice2000+1377@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+3261@gmail.com"">upsdeliveryservice2000+3261@gmail.com</a>
<a href=""mailto:upsdeliveryservice2000+7795@gmail.com"">upsdeliveryservice2000+7795@gmail.com</a>"
hGEhHMxd,Installed Applications,Kaushik_Kalesh,C#,Sunday 4th of February 2024 10:33:12 AM CDT,"private void GetInstalledAppsFromDirectory(string directoryPath, List<ApplicationInfo> apps, bool is64Bit)
{
    if (Directory.Exists(directoryPath))
    {
        foreach (string directory in Directory.GetDirectories(directoryPath))
        {
            DirectoryInfo directoryInfo = new DirectoryInfo(directory);
            string appName = directoryInfo.Name;
			// assuming the largest .exe file is the target application, but apparenlty it's not the case
            FileInfo exe = directoryInfo.GetFiles()
                .OrderByDescending(f => f.Length)                        
                .FirstOrDefault(e => e.Extension == "".exe"");

            if (exe != null)
            {
                string exePath = Path.Combine(directory, exe.Name);
                apps.Add(new ApplicationInfo { Name = appName, FullPath = exePath });
            }
        }
    }
}"
Cu7tu6m7,Untitled,240596448,SQL,Sunday 4th of February 2024 10:24:51 AM CDT,"14:35.270014-1,SDBL,3,process=rphost,p:processName=test2,OSThread=22940,t:clientID=296878,t:applicationName=1CV8C,t:computerName=Srv1C,t:connectID=220790,SessionID=5,Usr=DefUser,AppID=1CV8C,DBMS=DBMSSQL,DataBase=localhost\test2,Trans=0,Sdbl=SCHEMA SET GLOBAL,Rows=0
14:35.270017-2,SDBL,3,process=rphost,p:processName=test2,OSThread=22940,t:clientID=296878,t:applicationName=1CV8C,t:computerName=Srv1C,t:connectID=220790,SessionID=5,Usr=DefUser,AppID=1CV8C,DBMS=DBMSSQL,DataBase=localhost\test2,Trans=0,Sdbl=schema get local,Rows=0
14:35.270023-1,DBMSSQL,5,process=rphost,p:processName=test2,OSThread=22940,t:clientID=296878,t:applicationName=1CV8C,t:computerName=Srv1C,t:connectID=220790,SessionID=5,Usr=DefUser,AppID=1CV8C,DBMS=DBMSSQL,DataBase=localhost\test2,Trans=0,Func=lookupTmpTable,Context=Система.ПолучитьПредставленияСсылок
14:35.286000-15976,DBMSSQL,5,process=rphost,p:processName=test2,OSThread=22940,t:clientID=296878,t:applicationName=1CV8C,t:computerName=Srv1C,t:connectID=220790,SessionID=5,Usr=DefUser,AppID=1CV8C,DBMS=DBMSSQL,DataBase=localhost\test2,Trans=0,Func=quickInsert,tableName=#tt1,RowsAffected=1000,Context=Система.ПолучитьПредставленияСсылок
14:35.286004-1,DBMSSQL,5,process=rphost,p:processName=test2,OSThread=22940,t:clientID=296878,t:applicationName=1CV8C,t:computerName=Srv1C,t:connectID=220790,SessionID=5,Usr=DefUser,AppID=1CV8C,DBMS=DBMSSQL,DataBase=localhost\test2,Trans=0,dbpid=53,Sql='SELECT
T1._IDRRef,
T1._Fld39RRef,
T1._Fld40RRef,
T1._Number
FROM dbo._Document37 T1
WHERE T1._IDRRef IN
(SELECT
T2._INVALUELISTRRef AS INVALUELISTRRef
FROM #tt1 T2 WITH(NOLOCK)
WHERE T2._INVALUELISTRRef IS NOT NULL)
ORDER BY T1._IDRRef',Rows=1000,RowsAffected=-1,Context=Система.ПолучитьПредставленияСсылок
14:35.286007-1,DBMSSQL,6,process=rphost,p:processName=test2,OSThread=22940,t:clientID=296878,t:applicationName=1CV8C,t:computerName=Srv1C,t:connectID=220790,SessionID=5,Usr=DefUser,AppID=1CV8C,DBMS=DBMSSQL,DataBase=localhost\test2,Trans=0,dbpid=53,Sql=TRUNCATE TABLE #tt1,Context=Система.ПолучитьПредставленияСсылок
14:35.286008-3,DBMSSQL,5,process=rphost,p:processName=test2,OSThread=22940,t:clientID=296878,t:applicationName=1CV8C,t:computerName=Srv1C,t:connectID=220790,SessionID=5,Usr=DefUser,AppID=1CV8C,DBMS=DBMSSQL,DataBase=localhost\test2,Trans=0,Func=returnTmpTable,Context=Система.ПолучитьПредставленияСсылок
14:35.286009-15988,SDBL,4,process=rphost,p:processName=test2,OSThread=22940,t:clientID=296878,t:applicationName=1CV8C,t:computerName=Srv1C,t:connectID=220790,SessionID=5,Usr=DefUser,AppID=1CV8C,DBMS=DBMSSQL,DataBase=localhost\test2,Trans=0,Func=HoldConnection,Context=Система.ПолучитьПредставленияСсылок
14:35.286010-15990,SDBL,3,process=rphost,p:processName=test2,OSThread=22940,t:clientID=296878,t:applicationName=1CV8C,t:computerName=Srv1C,t:connectID=220790,SessionID=5,Usr=DefUser,AppID=1CV8C,DBMS=DBMSSQL,DataBase=localhost\test2,Trans=0,Sdbl='SELECT ALLOWED
ID, Fld39, Fld40, Number
FROM Document37
WHERE ID IN(37:8d9800155d357f0411eec371f8b64261, 37:8d9800155d357f0411eec371fec0a113, 37:8d9800155d357f0411eec371fec0a114, 37:8d9800155d357f0411eec371fec0a115, 37:8d9800155d357f0411eec371fec0a116, 37:8d9800155d357f0411eec371fec0a117, XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 1000 штук
37:8d9800155d357f0411eec3723dddeff6, 37:8d9800155d357f0411eec3723dddeff7, 37:8d9800155d357f0411eec3723dddeff8, 37:8d9800155d357f0411eec3723dddeff9, 37:8d9800155d357f0411eec3723dddeffa, 37:8d9800155d357f0411eec3723dddeffb, 37:8d9800155d357f0411eec3723dddeffc, 37:8d9800155d357f0411eec3723dddeffd, 37:8d9800155d357f0411eec3723dddeffe, 37:8d9800155d357f0411eec3723dddefff, 37:8d9800155d357f0411eec3723dddf000, 37:8d9800155d357f0411eec3723dddf001, 37:8d9800155d357f0411eec3723dddf002, 37:8d9800155d357f0411eec3723dddf003, 37:8d9800155d357f0411eec3723dddf004, 37:8d9800155d357f0411eec3723dddf005, 37:8d9800155d357f0411eec3723dddf006, 37:8d9800155d357f0411eec3723dddf007, 37:8d9800155d357f0411eec3723dddf008, 37:8d9800155d357f0411eec3723dddf009, 37:8d9800155d357f0411eec3723dddf00a, 37:8d9800155d357f0411eec3723dddf00b, 37:8d9800155d357f0411eec3723dddf00c, 37:8d9800155d357f0411eec3723dddf00d)
ORDER BY ID',Rows=1,Context=Система.ПолучитьПредставленияСсылок"
8KkkEG4e,glitch fixed snowybot 3144,coinwalk,JavaScript,Sunday 4th of February 2024 10:22:02 AM CDT,"var original = parseFloat(document.getElementById('pct_balance').value);
var blast = 0.00001;
var tens = (blast*10);
var bilance = original;
var sevens = (blast*6.9);
var eights = (blast*7.9);
var nob = (blast*3);
var surigret = blast;
var forky = 0;
var bob = original;
var havot = original;
var telf = original;
var mighty = blast;
var inpoo = parseFloat(surigret);
var idios = (bilance-bob);
var frock = (blast*2);
var vimited = (idios/5);
var freak = Math.floor(vimited/blast);
var mighty = (freak*frock); 
var frog = false; 
var bear = true;
var smith = 0;
var joey = blast;
var oopsie = 0;
var freman = Number(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
 
function dobet() {
console.time();
bilance = parseFloat(document.getElementById('pct_balance').value);
joey = Number(document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText);
freman = Number(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
if ((surigret!=joey)&&(freman>smith)){
oopsie = oopsie+1;
}else{
smith = parseFloat(freman);
}
if ((bilance>(((Math.floor(bilance/tens))*tens)+sevens))&&(bilance<(((Math.floor(bilance/tens))*tens)+eights))&&(bilance!=forky)){
     forky = parseFloat(bilance);
     surigret = surigret*2;
} 
if (bilance>telf){
telf = parseFloat(bilance);
}
if (((surigret*4)>=(blast*24))&&(bilance<telf)&&(bilance>bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    inpoo = parseFloat(surigret);
    idios = (bob-bilance);
    vimited = (idios/5);
    freak = Math.floor(vimited/blast);
    mighty = (inpoo-(freak*frock));
    forky = 0;
    if (mighty<blast){
        mighty = blast;
        }
    surigret = mighty;  
    telf = parseFloat(bilance);
}
if (((surigret*4)>=(blast*24))&&(bilance<telf)&&(bilance<bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    mighty = blast;
    surigret = mighty;  
    telf = parseFloat(bilance);
}
if (((surigret*4)>=(blast*24))&&(bilance>=telf)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    forky = 0;
    surigret = blast;
    telf = parseFloat(bilance);
}
    if (bilance>=(original*7)) {
    console.log(""winner winner chicken dinner"");
    return;
}
if (oopsie>=2){
console.log(""hacker found"");
console.timeEnd();
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(surigret);
$('#a_lo').click();
setTimeout(() => dobet(), 1000);
} 
dobet();
"
SRCwraE7,Untitled,iconoclasthero,Bash,Sunday 4th of February 2024 10:14:18 AM CDT,"$ sudo gdb jamesdsp 15674
[sudo] password for bvargo: 
GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1
Copyright (C) 2022 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type ""show copying"" and ""show warranty"" for details.
This GDB was configured as ""x86_64-linux-gnu"".
Type ""show configuration"" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type ""help"".
Type ""apropos word"" to search for commands related to ""word""...
Reading symbols from jamesdsp...
(No debugging symbols found in jamesdsp)
Attaching to program: /usr/bin/jamesdsp, process 15674
Reading symbols from /lib/x86_64-linux-gnu/libxcb.so.1...
(No debugging symbols found in /lib/x86_64-linux-gnu/libxcb.so.1)
Reading symbols from /lib/x86_64-linux-gnu/libarchive.so.13...
(No debugging symbols found in /lib/x86_64-linux-gnu/libarchive.so.13)
Reading symbols from /lib/x86_64-linux-gnu/libglibmm-2.4.so.1...
(No debugging symbols found in /lib/x86_64-linux-gnu/libglibmm-2.4.so.1)
Reading symbols from /lib/x86_64-linux-gnu/libglib-2.0.so.0...
(No debugging symbols found in /lib/x86_64-linux-gnu/libglib-2.0.so.0)
Reading symbols from /lib/x86_64-linux-gnu/libsigc-2.0.so.0...
(No debugging symbols found in /lib/x86_64-linux-gnu/libsigc-2.0.so.0)
Reading symbols from /lib/x86_64-linux-gnu/libpipewire-0.3.so.0...
(No debugging symbols found in /lib/x86_64-linux-gnu/libpipewire-0.3.so.0)
Reading symbols from /lib/x86_64-linux-gnu/libQt6SvgWidgets.so.6...
(No debugging symbols found in /lib/x86_64-linux-gnu/libQt6SvgWidgets.so.6)
Reading symbols from /lib/x86_64-linux-gnu/libQt6Widgets.so.6...
(No debugging symbols found in /lib/x86_64-linux-gnu/libQt6Widgets.so.6)
Reading symbols from /lib/x86_64-linux-gnu/libQt6Gui.so.6...
(No debugging symbols found in /lib/x86_64-linux-gnu/libQt6Gui.so.6)
Reading symbols from /lib/x86_64-linux-gnu/libQt6Network.so.6...
(No debugging symbols found in /lib/x86_64-linux-gnu/libQt6Network.so.6)
Reading symbols from /lib/x86_64-linux-gnu/libQt6DBus.so.6...
(No debugging symbols found in /lib/x86_64-linux-gnu/libQt6DBus.so.6)
Reading symbols from /lib/x86_64-linux-gnu/libQt6Core.so.6...
(No debugging symbols found in /lib/x86_64-linux-gnu/libQt6Core.so.6)
Reading symbols from /lib/x86_64-linux-gnu/libstdc++.so.6...
(No debugging symbols found in /lib/x86_64-linux-gnu/libstdc++.so.6)
Reading symbols from /lib/x86_64-linux-gnu/libm.so.6...
Reading symbols from /usr/lib/debug/.build-id/a8/8ef0199bd5e742ebd0c359edf5cb2be0ec08b5.debug...
Reading symbols from /lib/x86_64-linux-gnu/libgcc_s.so.1...
(No debugging symbols found in /lib/x86_64-linux-gnu/libgcc_s.so.1)
Reading symbols from /lib/x86_64-linux-gnu/libc.so.6...
Reading symbols from /usr/lib/debug/.build-id/c2/89da5071a3399de893d2af81d6a30c62646e1e.debug...
Reading symbols from /lib64/ld-linux-x86-64.so.2...
Reading symbols from /usr/lib/debug/.build-id/15/921ea631d9f36502d20459c43e5c85b7d6ab76.debug...
Reading symbols from /lib/x86_64-linux-gnu/libXau.so.6...
(No debugging symbols found in /lib/x86_64-linux-gnu/libXau.so.6)
Reading symbols from /lib/x86_64-linux-gnu/libXdmcp.so.6...
(No debugging symbols found in /lib/x86_64-linux-gnu/libXdmcp.so.6)
Reading symbols from /lib/x86_64-linux-gnu/libnettle.so.8...
(No debugging symbols found in /lib/x86_64-linux-gnu/libnettle.so.8)
Reading symbols from /lib/x86_64-linux-gnu/libacl.so.1...
(No debugging symbols found in /lib/x86_64-linux-gnu/libacl.so.1)
Reading symbols from /lib/x86_64-linux-gnu/liblzma.so.5...
(No debugging symbols found in /lib/x86_64-linux-gnu/liblzma.so.5)
Reading symbols from /lib/x86_64-linux-gnu/libzstd.so.1...
(No debugging symbols found in /lib/x86_64-linux-gnu/libzstd.so.1)
Reading symbols from /lib/x86_64-linux-gnu/liblz4.so.1...
(No debugging symbols found in /lib/x86_64-linux-gnu/liblz4.so.1)
Reading symbols from /lib/x86_64-linux-gnu/libbz2.so.1.0...
(No debugging symbols found in /lib/x86_64-linux-gnu/libbz2.so.1.0)
Reading symbols from /lib/x86_64-linux-gnu/libz.so.1...
(No debugging symbols found in /lib/x86_64-linux-gnu/libz.so.1)
Reading symbols from /lib/x86_64-linux-gnu/libxml2.so.2...
(No debugging symbols found in /lib/x86_64-linux-gnu/libxml2.so.2)
Reading symbols from /lib/x86_64-linux-gnu/libgobject-2.0.so.0...
(No debugging symbols found in /lib/x86_64-linux-gnu/libgobject-2.0.so.0)
Reading symbols from /lib/x86_64-linux-gnu/libgmodule-2.0.so.0...
(No debugging symbols found in /lib/x86_64-linux-gnu/libgmodule-2.0.so.0)
Reading symbols from /lib/x86_64-linux-gnu/libpcre.so.3...
(No debugging symbols found in /lib/x86_64-linux-gnu/libpcre.so.3)
Reading symbols from /lib/x86_64-linux-gnu/libQt6Svg.so.6...
(No debugging symbols found in /lib/x86_64-linux-gnu/libQt6Svg.so.6)
Reading symbols from /lib/x86_64-linux-gnu/libEGL.so.1...
(No debugging symbols found in /lib/x86_64-linux-gnu/libEGL.so.1)
Reading symbols from /lib/x86_64-linux-gnu/libfontconfig.so.1...
(No debugging symbols found in /lib/x86_64-linux-gnu/libfontconfig.so.1)
Reading symbols from /lib/x86_64-linux-gnu/libX11.so.6...
(No debugging symbols found in /lib/x86_64-linux-gnu/libX11.so.6)
Reading symbols from /lib/x86_64-linux-gnu/libxkbcommon.so.0...
(No debugging symbols found in /lib/x86_64-linux-gnu/libxkbcommon.so.0)
Reading symbols from /lib/x86_64-linux-gnu/libGLX.so.0...
(No debugging symbols found in /lib/x86_64-linux-gnu/libGLX.so.0)
Reading symbols from /lib/x86_64-linux-gnu/libOpenGL.so.0...
(No debugging symbols found in /lib/x86_64-linux-gnu/libOpenGL.so.0)
Reading symbols from /lib/x86_64-linux-gnu/libpng16.so.16...
(No debugging symbols found in /lib/x86_64-linux-gnu/libpng16.so.16)
Reading symbols from /lib/x86_64-linux-gnu/libharfbuzz.so.0...
(No debugging symbols found in /lib/x86_64-linux-gnu/libharfbuzz.so.0)
Reading symbols from /lib/x86_64-linux-gnu/libmd4c.so.0...
(No debugging symbols found in /lib/x86_64-linux-gnu/libmd4c.so.0)
Reading symbols from /lib/x86_64-linux-gnu/libfreetype.so.6...
(No debugging symbols found in /lib/x86_64-linux-gnu/libfreetype.so.6)
Reading symbols from /lib/x86_64-linux-gnu/libgssapi_krb5.so.2...
(No debugging symbols found in /lib/x86_64-linux-gnu/libgssapi_krb5.so.2)
Reading symbols from /lib/x86_64-linux-gnu/libbrotlidec.so.1...
(No debugging symbols found in /lib/x86_64-linux-gnu/libbrotlidec.so.1)
Reading symbols from /lib/x86_64-linux-gnu/libproxy.so.1...
(No debugging symbols found in /lib/x86_64-linux-gnu/libproxy.so.1)
Reading symbols from /lib/x86_64-linux-gnu/libdbus-1.so.3...
(No debugging symbols found in /lib/x86_64-linux-gnu/libdbus-1.so.3)
Reading symbols from /lib/x86_64-linux-gnu/libicui18n.so.70...
(No debugging symbols found in /lib/x86_64-linux-gnu/libicui18n.so.70)
Reading symbols from /lib/x86_64-linux-gnu/libicuuc.so.70...
(No debugging symbols found in /lib/x86_64-linux-gnu/libicuuc.so.70)
Reading symbols from /lib/x86_64-linux-gnu/libdouble-conversion.so.3...
(No debugging symbols found in /lib/x86_64-linux-gnu/libdouble-conversion.so.3)
Reading symbols from /lib/x86_64-linux-gnu/libb2.so.1...
(No debugging symbols found in /lib/x86_64-linux-gnu/libb2.so.1)
Reading symbols from /lib/x86_64-linux-gnu/libpcre2-16.so.0...
(No debugging symbols found in /lib/x86_64-linux-gnu/libpcre2-16.so.0)
Reading symbols from /lib/x86_64-linux-gnu/libbsd.so.0...
(No debugging symbols found in /lib/x86_64-linux-gnu/libbsd.so.0)
Reading symbols from /lib/x86_64-linux-gnu/libffi.so.8...
(No debugging symbols found in /lib/x86_64-linux-gnu/libffi.so.8)
Reading symbols from /lib/x86_64-linux-gnu/libGL.so.1...
(No debugging symbols found in /lib/x86_64-linux-gnu/libGL.so.1)
Reading symbols from /lib/x86_64-linux-gnu/libGLdispatch.so.0...
(No debugging symbols found in /lib/x86_64-linux-gnu/libGLdispatch.so.0)
Reading symbols from /lib/x86_64-linux-gnu/libexpat.so.1...
(No debugging symbols found in /lib/x86_64-linux-gnu/libexpat.so.1)
Reading symbols from /lib/x86_64-linux-gnu/libuuid.so.1...
(No debugging symbols found in /lib/x86_64-linux-gnu/libuuid.so.1)
Reading symbols from /lib/x86_64-linux-gnu/libgraphite2.so.3...
(No debugging symbols found in /lib/x86_64-linux-gnu/libgraphite2.so.3)
Reading symbols from /lib/x86_64-linux-gnu/libkrb5.so.3...
(No debugging symbols found in /lib/x86_64-linux-gnu/libkrb5.so.3)
Reading symbols from /lib/x86_64-linux-gnu/libk5crypto.so.3...
(No debugging symbols found in /lib/x86_64-linux-gnu/libk5crypto.so.3)
Reading symbols from /lib/x86_64-linux-gnu/libcom_err.so.2...
(No debugging symbols found in /lib/x86_64-linux-gnu/libcom_err.so.2)
Reading symbols from /lib/x86_64-linux-gnu/libkrb5support.so.0...
(No debugging symbols found in /lib/x86_64-linux-gnu/libkrb5support.so.0)
Reading symbols from /lib/x86_64-linux-gnu/libbrotlicommon.so.1...
(No debugging symbols found in /lib/x86_64-linux-gnu/libbrotlicommon.so.1)
Reading symbols from /lib/x86_64-linux-gnu/libsystemd.so.0...
(No debugging symbols found in /lib/x86_64-linux-gnu/libsystemd.so.0)
Reading symbols from /lib/x86_64-linux-gnu/libicudata.so.70...
(No debugging symbols found in /lib/x86_64-linux-gnu/libicudata.so.70)
Reading symbols from /lib/x86_64-linux-gnu/libgomp.so.1...
(No debugging symbols found in /lib/x86_64-linux-gnu/libgomp.so.1)
Reading symbols from /lib/x86_64-linux-gnu/libmd.so.0...
(No debugging symbols found in /lib/x86_64-linux-gnu/libmd.so.0)
Reading symbols from /lib/x86_64-linux-gnu/libkeyutils.so.1...
(No debugging symbols found in /lib/x86_64-linux-gnu/libkeyutils.so.1)
Reading symbols from /lib/x86_64-linux-gnu/libresolv.so.2...
Reading symbols from /usr/lib/debug/.build-id/41/77015ccbe670995ed128899633b71e6ca397ef.debug...
Reading symbols from /lib/x86_64-linux-gnu/libcap.so.2...
(No debugging symbols found in /lib/x86_64-linux-gnu/libcap.so.2)
Reading symbols from /lib/x86_64-linux-gnu/libgcrypt.so.20...
(No debugging symbols found in /lib/x86_64-linux-gnu/libgcrypt.so.20)
Reading symbols from /lib/x86_64-linux-gnu/libgpg-error.so.0...
(No debugging symbols found in /lib/x86_64-linux-gnu/libgpg-error.so.0)
[Thread debugging using libthread_db enabled]
Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".
0x00007f776dce578a in __GI___clock_nanosleep (clock_id=clock_id@entry=0, flags=flags@entry=0, req=req@entry=0x562167147540, rem=rem@entry=0x562167147540) at ../sysdeps/unix/sysv/linux/clock_nanosleep.c:78
78	../sysdeps/unix/sysv/linux/clock_nanosleep.c: No such file or directory.
"
XCadNnf1,Test gui,SOU1LESSSIMREAL,Lua,Sunday 4th of February 2024 10:14:15 AM CDT,"local Library = loadstring(game:HttpGet(""https://pastebin.com/raw/vff1bQ9F))()
local Window = Library.CreateLib(""Test Gui"", ""Ocean"")

local Tab1 = Window:NewTab(""Main"")
local Tab1Section = Tab1:NewSection(""Main"")

Tab1Section:NewButton(""JN GUI"", ""Executes a GUI Made for JN HH GAMING"", function()
    loadstring(game:HttpGet('https://pastebin.com/raw/RaFx8Rv3'))()
end)
end)
end)
end)
end)

Tab1Section:NewTextBox(""Local Player"", ""Nothing Here"", function(txt)
	print(txt)
end)

Tab1Section:NewSlider(""Walkspeed"", ""Changes Player Walkspeed"", 500, 0, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)"
RzecVjwQ,use exactly 1 or 10x  or 100x of 0.01 not less or more snowybot 1000,coinwalk,JavaScript,Sunday 4th of February 2024 09:39:23 AM CDT,"var original = parseFloat(document.getElementById('pct_balance').value);
var blast = 0.00001;
var tens = (blast*10);
var bilance = original;
var sevens = (blast*6.9);
var eights = (blast*7.9);
var nob = (blast*3);
var surigret = blast;
var forky = 0;
var bob = original;
var havot = original;
var telf = original;
var mighty = blast;
var inpoo = parseFloat(surigret);
var idios = (bilance-bob);
var frock = (blast*2);
var vimited = (idios/5);
var freak = Math.floor(vimited/blast);
var mighty = (freak*frock); 
var frog = false; 
var bear = true;
var smith = 0;
var joey = blast;
var oopsie = 0;
var freman = Number(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
 
function dobet() {
bilance = parseFloat(document.getElementById('pct_balance').value);
joey = Number(document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText);
freman = Number(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
if ((surigret!=joey)&&(freman>smith)){
oopsie = oopsie+1;
}else{
smith = parseFloat(freman);
}
if ((bilance>(((Math.floor(bilance/tens))*tens)+sevens))&&(bilance<(((Math.floor(bilance/tens))*tens)+eights))&&(bilance!=forky)){
     forky = parseFloat(bilance);
     surigret = surigret*2;
} 
if (bilance>telf){
telf = parseFloat(bilance);
}
if (((surigret*4)>=(blast*24))&&(bilance<telf)&&(bilance>bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    inpoo = parseFloat(surigret);
    idios = (bob-bilance);
    vimited = (idios/5);
    freak = Math.floor(vimited/blast);
    mighty = (inpoo-(freak*frock));
    forky = 0;
    if (mighty<blast){
        mighty = blast;
        }
    surigret = mighty;  
    telf = parseFloat(bilance);
}
if (((surigret*4)>=(blast*24))&&(bilance<telf)&&(bilance<bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    mighty = blast;
    surigret = mighty;  
    telf = parseFloat(bilance);
}
if (((surigret*4)>=(blast*24))&&(bilance>=telf)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    forky = 0;
    surigret = blast;
    telf = parseFloat(bilance);
}
    if (bilance>=(original*7)) {
    console.log(""winner winner chicken dinner"");
    return;
}
if (oopsie>=2){
console.log(""hacker found"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(surigret);
$('#a_lo').click();
setTimeout(() => dobet(), 1000);
} 
dobet();
"
zrWjsvJQ,use exactly 1 or 10x  or 100x of 0.01 not less or more snowybot 1000,coinwalk,JavaScript,Sunday 4th of February 2024 09:36:10 AM CDT,"var original = parseFloat(document.getElementById('pct_balance').value);
var blast = 0.00001;
var tens = (blast*10);
var bilance = original;
var sevens = (blast*6.9);
var eights = (blast*7.9);
var nob = (blast*3);
var surigret = blast;
var forky = 0;
var bob = original;
var havot = original;
var telf = original;
var mighty = blast;
var inpoo = parseFloat(surigret);
var idios = (bilance-bob);
var frock = (blast*2);
var vimited = (idios/5);
var freak = Math.floor(vimited/blast);
var mighty = (freak*frock); 
var frog = false; 
var bear = true;
var smith = 0;
var joey = blast;
var oopsie = 0;
var freman = Number(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
 
function dobet() {
bilance = parseFloat(document.getElementById('pct_balance').value);
joey = Number(document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText);
freman = Number(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
if ((surigret!=joey)&&(freman>smith)){
oopsie = oopsie+1;
}else{
smith = parseFloat(freman);
}
if ((bilance>(((Math.floor(bilance/tens))*tens)+sevens))&&(bilance<(((Math.floor(bilance/tens))*tens)+eights))&&(bilance!=forky)){
     forky = parseFloat(bilance);
     surigret = surigret*2;
} 
if (bilance>telf){
telf = parseFloat(bilance);
}
if (((surigret*4)>=(blast*100))&&(bilance<telf)&&(bilance>bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    inpoo = parseFloat(surigret);
    idios = (bob-bilance);
    vimited = (idios/5);
    freak = Math.floor(vimited/blast);
    mighty = (inpoo-(freak*frock));
    forky = 0;
    if (mighty<blast){
        mighty = blast;
        }
    surigret = mighty;  
    telf = parseFloat(bilance);
}
if (((surigret*4)>=(blast*100))&&(bilance<telf)&&(bilance<bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    mighty = blast;
    surigret = mighty;  
    telf = parseFloat(bilance);
}
if (((surigret*4)>=(blast*100))&&(bilance>=telf)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    forky = 0;
    surigret = blast;
    telf = parseFloat(bilance);
}
    if (bilance>=(original*7)) {
    console.log(""winner winner chicken dinner"");
    return;
}
if (oopsie>=2){
console.log(""hacker found"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(surigret);
$('#a_lo').click();
setTimeout(() => dobet(), 1000);
} 
dobet();
"
VkWtHr9T,Fusion Reactor program for MineOS,TheHunterManX,Lua,Sunday 4th of February 2024 09:24:09 AM CDT,"local text = require(""Text"")
local number = require(""Number"")
local event = require(""Event"")
local screen = require(""Screen"")
local GUI = require(""GUI"")
local component = require(""component"")
local r = component.nc_fusion_reactor
local redstone = component.redstone

local Blue = 0x0000EE
local Red = 0xEE0000
local Green = 0x00EE00
local ButtonGreen = 0x6DB752
local Yellow = 0xEEEE00
local White = 0xEEEEEE
local Black = 0x111111
local DarkGreen = 0x006400
local YellowGreen = 0x9ACD32

local Decouple = false
local tank_controllers = {}

for address in component.list('tank_controller') do
  table.insert(tank_controllers, component.proxy(address))
end

local fueluncap = false
local Initiate = false
local Emergency = false
local Status = {""Off"", ""Off"", ""Off"", ""Off""}

local GetFuel = function()
local a = r.getFirstFusionFuel()
	for w in a:gmatch(""%w+"") do
		a = w
		break
	end
local b = r.getSecondFusionFuel()
	for w in b:gmatch(""%w+"") do
		b = w
		break
	end
	return a,b
end

local GetFuelAmount = function(name, uncapped)
	local amount = 0
	local capacity = 0
	local FuelTank = false
	local uncapped = uncapped or false
	for _, a in ipairs(tank_controllers) do
		for i = 0, 5 do 
			if type(a.getFluidInTank(i)[1]) == ""table"" then
				local e = 0
				local f = 0
				FuelTank = false
				for c, d in pairs(a.getFluidInTank(i)[1]) do
					if c == ""name"" then
						if d == name then
							FuelTank = true
						end
					elseif c == ""amount"" then
						e = d
					elseif c == ""capacity"" then
						f = d
					end
				end
				if FuelTank then
					amount = amount + e
					capacity = capacity + f
					FuelTank = false
					e = 0
					f = 0
				end
			end
		end
	end
	if uncapped == false then
		if capacity > 1000000 then
			capacity = 1000000
		end
	end
	return amount, capacity
end

local GetFuelProcent = function(amount, capacity, uncapped)
	local uncapped = uncapped or false
	if uncapped then
		if amount > 0 then
			return amount / capacity * 100
		else
			return 0
		end
	else
		if amount > 0 and capacity <= 1000000 then
			return amount / capacity * 100
		elseif amount > 0 and capacity > 1000000 then
			return amount / 1000000 * 100
		else
			return 0
		end
	end
end

local Heat = function()
	if r.getTemperature() > 0 then
		local a = r.getTemperature()/1000000
		local b = r.getFusionComboHeatVariable()
		return a / b * 100
	else
		return 0
	end
end

local HeatReal = function()
	return r.getTemperature()
end
local Power = function()
	if r.getEnergyStored() > 0 then
		local a = r.getEnergyStored() / r.getMaxEnergyStored() * 100
		return a
	else
		return 0
	end
end
local Eff = function()
	return r.getEfficiency()
end
local Activate = function()
	r.activate()
end
local Deactivate = function()
	r.deactivate()
end
local GetSize = function()
	return r.getToroidSize()
end
local GetProblem = function()
	return r.getProblem()
end

local ErrorLength = 0

local ErrorType = 0

local function printError(ErrorType)
	if ErrorLength > 0 and ErrorType == 0 then
		GUI.label(1, 40, screen.getWidth(), 1, Red, ""ERROR""):draw()
		GUI.label(1, 41, screen.getWidth(), 1, Red, GetProblem()):draw()
		ErrorLength = ErrorLength - 1
	elseif ErrorLength > 0 then
		GUI.label(1, 40, screen.getWidth(), 1, Red, ""ERROR""):draw()
		if ErrorType == 1 then
			GUI.label(1, 41, screen.getWidth(), 1, Red, ""The system was tripped and shut down!                   ""):draw()
		end
		ErrorLength = ErrorLength - 1
	end
	if ErrorLength == 0 then
		ErrorType = 0
		GUI.label(1, 40, screen.getWidth(), 1, Red, ""         ""):draw()
		GUI.label(1, 41, screen.getWidth(), 1, Red, ""                                                        ""):draw()
	end
end

local function draw()

	GUI.label(1, 3, screen.getWidth(), 1, White, ""Reactor Status""):draw()
	if Status[1] == ""Off"" then
		GUI.label(1, 4, screen.getWidth(), 1, White, Status[1] .. ""                         ""):draw()
	elseif Status[1] == ""Starting"" then
		GUI.label(1, 4, screen.getWidth(), 1, Green, ""Starting..."" .. ""                     ""):draw()
	elseif Status[1] == ""Active"" then
		GUI.label(1, 4, screen.getWidth(), 1, Green, ""Active"" .. ""                          ""):draw()
	end
	
	
	GUI.label(1, 6, screen.getWidth(), 1, White, ""Reactor Heat""):draw()
	if r.getFusionComboHeatVariable() > 0 then
		GUI.progressBar(2, 7, screen.getWidth(), Green, White, White, Heat(), false):draw()
		GUI.label(1, 8, screen.getWidth(), 1, White, HeatReal() .. ""                            ""):draw()
	else
		GUI.progressBar(2, 7, screen.getWidth(), Green, White, White, 0, false):draw()
		GUI.label(1, 8, screen.getWidth(), 1, White, ""Unknown Fusion!"" .. ""                     ""):draw()
	end
	
	GUI.label(1, 10, screen.getWidth(), 1, White, ""Power Output""):draw()
	if Power() >= 100 then
		GUI.progressBar(2, 11, screen.getWidth(), Green, White, White, Power(), false):draw()
		GUI.label(1, 12, screen.getWidth(), 1, Red, ""Max"" .. ""                             ""):draw()
	elseif Power() > 90 then
		GUI.progressBar(2, 11, screen.getWidth(), Green, White, White, Power(), false):draw()
		GUI.label(1, 12, screen.getWidth(), 1, Yellow, ""Nearing Max"" .. ""                  ""):draw()
	else
		GUI.progressBar(2, 11, screen.getWidth(), Red, White, White, Power(), false):draw()
		GUI.label(1, 12, screen.getWidth(), 1, Green, ""Normal"" .. ""                        ""):draw()
	end
	
	GUI.label(1, 14, screen.getWidth(), 1, White, ""Efficiency""):draw()
	if Eff() > 90 then
		GUI.progressBar(2, 15, screen.getWidth(), Green, White, White, Eff(), false):draw()
		GUI.label(1, 16, screen.getWidth(), 1, Green, Eff() .. ""                     ""):draw()
	elseif Power() >= 80 then
		GUI.progressBar(2, 15, screen.getWidth(), YellowGreen, White, White, Eff(), false):draw()
		GUI.label(1, 16, screen.getWidth(), 1, YellowGreen, Eff() .. ""               ""):draw()
	elseif Power() >= 60 then
		GUI.progressBar(2, 15, screen.getWidth(), Yellow, White, White, Eff(), false):draw()
		GUI.label(1, 16, screen.getWidth(), 1, Yellow, Eff() .. ""                    ""):draw()
	else
		GUI.progressBar(2, 15, screen.getWidth(), Red, White, White, Eff(), false):draw()
		GUI.label(1, 16, screen.getWidth(), 1, Red, Eff() .. ""                       ""):draw()
	end
		
	if next(tank_controllers) ~= nil and Decouple == false then
		local fuela, fuelb = GetFuel()
			
		if fuela ~= ""Empty"" and fuelb ~= ""Empty"" then
			
			--Draw Fuel 1 amount
			local fuelamount, fuelcap = GetFuelAmount(fuela, fueluncap)
			local fuelaprocent = GetFuelProcent(fuelamount, fuelcap, fueluncap)
			GUI.label(1, 18, screen.getWidth(), 1, Green, fuela .. ""                                                  ""):draw()
			if fuelaprocent > 90 then
			GUI.progressBar(2, 19, screen.getWidth(), Green, White, White, fuelaprocent, false):draw()
			GUI.label(1, 20, screen.getWidth(), 1, Green, fuelamount .. ""/"" .. fuelcap .. ""                                                  ""):draw()
			elseif fuelaprocent >= 80 then
				GUI.progressBar(2, 19, screen.getWidth(), YellowGreen, White, White, fuelaprocent, false):draw()
			GUI.label(1, 20, screen.getWidth(), 1, Green, fuelamount .. ""/"" .. fuelcap .. ""                                                  ""):draw()
			elseif fuelaprocent >= 60 then
				GUI.progressBar(2, 19, screen.getWidth(), Yellow, White, White, fuelaprocent, false):draw()
			GUI.label(1, 20, screen.getWidth(), 1, Green, fuelamount .. ""/"" .. fuelcap .. ""                                                  ""):draw()
			else
				GUI.progressBar(2, 19, screen.getWidth(), Red, White, White, fuelaprocent, false):draw()
			GUI.label(1, 20, screen.getWidth(), 1, Green, fuelamount .. ""/"" .. fuelcap .. ""                                                  ""):draw()
			end
			
			--Draw Fuel 2 amount
			local fuelamount, fuelcap = GetFuelAmount(fuelb, fueluncap)
			local fuelbprocent = GetFuelProcent(fuelamount, fuelcap, fueluncap)
			GUI.label(1, 22, screen.getWidth(), 1, Green, fuelb .. ""                                                  ""):draw()
			if fuelbprocent > 90 then
			GUI.progressBar(2, 23, screen.getWidth(), Green, White, White, fuelbprocent, false):draw()
			GUI.label(1, 24, screen.getWidth(), 1, Green, fuelamount .. ""/"" .. fuelcap .. ""                                                  ""):draw()
			elseif fuelbprocent >= 80 then
				GUI.progressBar(2, 23, screen.getWidth(), YellowGreen, White, White, fuelbprocent, false):draw()
			GUI.label(1, 24, screen.getWidth(), 1, Green, fuelamount .. ""/"" .. fuelcap .. ""                                                  ""):draw()
			elseif fuelbprocent >= 60 then
				GUI.progressBar(2, 23, screen.getWidth(), Yellow, White, White, fuelbprocent, false):draw()
			GUI.label(1, 24, screen.getWidth(), 1, Green, fuelamount .. ""/"" .. fuelcap .. ""                                                  ""):draw()
			else
				GUI.progressBar(2, 23, screen.getWidth(), Red, White, White, fuelbprocent, false):draw()
			GUI.label(1, 24, screen.getWidth(), 1, Green, fuelamount .. ""/"" .. fuelcap .. ""                                                  ""):draw()
			end
		else
			GUI.label(1, 18, screen.getWidth(), 1, Yellow, ""Insert Fuels First                                                  ""):draw()
			GUI.progressBar(2, 23, screen.getWidth(), Green, White, White, 0, false):draw()
			GUI.label(1, 20, screen.getWidth(), 1, White, ""                                                  ""):draw()
			GUI.label(1, 22, screen.getWidth(), 1, Yellow, ""Insert Fuels First                                                  ""):draw()
			GUI.progressBar(2, 23, screen.getWidth(), Yellow, White, White, 0, false):draw()
			GUI.label(1, 24, screen.getWidth(), 1, White, ""                                                  ""):draw()
		end
	else
		GUI.label(1, 18, screen.getWidth(), 1, Yellow, ""Attach Tanks (Optional)                                                  ""):draw()
		GUI.progressBar(2, 23, screen.getWidth(), Green, White, White, 0, false):draw()
		GUI.label(1, 20, screen.getWidth(), 1, White, ""                                                  ""):draw()
		GUI.label(1, 22, screen.getWidth(), 1, Yellow, ""Attach Tanks (Optional)                                                  ""):draw()
		GUI.progressBar(2, 23, screen.getWidth(), Yellow, White, White, 0, false):draw()
		GUI.label(1, 24, screen.getWidth(), 1, White, ""                                                  ""):draw()
	end
	
	--Initiate Start
	GUI.button(1, 30, 30, 3, ButtonGreen, White, ButtonGreen, White, ""Initiate Reactor""):draw()
	
	--Emergency Power Off button (TRIP)
	if Emergency then
		GUI.button(1, 35, 30, 3, Red, White, Red, White, ""TRIP: Enabled""):draw()
	else
		GUI.button(1, 35, 30, 3, Red, White, Red, White, ""TRIP: Disabled""):draw()
	end
	
	--Uncap Fuel Max
	if fueluncap then
		GUI.button(50, 30, 30, 3, DarkGreen, White, DarkGreen, White, ""Cap max fuel""):draw()
	else
		GUI.button(50, 30, 30, 3, ButtonGreen, White, ButtonGreen, White, ""Uncap max fuel""):draw()
	end
	
	--Read External Tanks
	if Decouple then
		GUI.button(100, 30, 30, 3, DarkGreen, Yellow, DarkGreen, Yellow, ""Reattach all tanks to UI""):draw()
	else
		GUI.button(100, 30, 30, 3, ButtonGreen, Yellow, ButtonGreen, Yellow, ""Deattach all tanks to UI""):draw()
	end
	
	--Exit Program
	GUI.button(100, 35, 30, 3, Red, Yellow, Red, Yellow, ""Exit Program""):draw()
	
	--If any errors have happened, it will be displayed here
	printError(ErrorType)
	
	screen.update()
end
local function setReactorState()
	if Status[1] == ""Starting"" then
		Activate(r)
		if r.isHotEnough() then
			Status[1] = ""Active""
		end
	elseif Status[1] == ""Active"" then
		if Eff() < 99.9 then
			Activate(r)
		elseif Eff() >= 99.9 then
			Deactivate(r)
		end
		if Emergency then
			for _, v in pairs(component.redstone.getInput()) do
				if v > 0 then
					Status[1] = ""Off""
					ErrorLength = 20
					ErrorType = 1
					Deactivate(r)
				end
			end
		end
	else
		Deactivate(r)
	end
end
local function startReactor()
	if not GetProblem(r) == ""No Problem"" then
		ErrorLength = 20
		return
	elseif Status[1] == ""Starting"" or Status[1] == ""Active"" then
		return
	else
		Status[1] = ""Starting""
	end
end

local function mainLoop()
	while true do
		setReactorState()
		tank_controllers = {}
		
		if Decouple == false then
			for address in component.list('tank_controller') do
			  table.insert(tank_controllers, component.proxy(address))
			end
		end
		draw()

		local e = {event.pull(1)}
		--Scroll
		if e[1] == ""touch"" then
		
			--touch start button
			if e[3] >= 1 and e[3] <= 30 and e[4] >= 30 and e[4] <= 33 then
				startReactor()
				
			--touch TRIP button
			elseif e[3] >= 1 and e[3] <= 30 and e[4] >= 35 and e[4] <= 38 then
				Emergency = not Emergency
				
			--touch Decouple button
			elseif e[3] >= 100 and e[3] <= 130 and e[4] >= 30 and e[4] <= 33 then
				Decouple = not Decouple
				
				if Decouple then
					tank_controllers = {}
				else
					tank_controllers = {}
					for address in component.list('tank_controller') do
						table.insert(tank_controllers, component.proxy(address))
					end
				end
				
			--touch Uncap button
			elseif e[3] >= 50 and e[3] <= 80 and e[4] >= 30 and e[4] <= 33 then
				fueluncap = not fueluncap
				
			--touch Exit button
			elseif e[3] >= 100 and e[3] <= 130 and e[4] >= 35 and e[4] <= 38 then
				return
			end
		end
	end
end

screen.clear(0x0, 0.3)
mainLoop()"
TT6VYSvQ,Premium,PapiGemezs,PHP,Sunday 4th of February 2024 08:57:37 AM CDT,"{
   ""Premium"": [
      {
         ""version"": 2.1
      }
   ]
}"
Lwy7mVhX,Untitled,MangoBros,Python,Sunday 4th of February 2024 08:39:20 AM CDT,"def encrypt(word, cipher):
    return "" "".join(cipher.get(char, char) for char in word)
    return encrypted_word

def decrypt(word, cipher):
    reverse_cipher = {v: k for k, v in cipher.items()}
#I am stuck in this line of code. i dunno what to do. Whatever code i try, its giving me my original word, or its taking my exclamatory mark in the cipher variable and encrypting it again.
    return decrypted_word


def main():
   word = str(input(""Enter a word: ""))
   choice = int(input(""Enter 1 to encrypt or 2 to decrypt: ""))
        
   cipher = {'a': '?-', 'b-': '??-', 'c': '???-', 'd': '????-', 'e': '?????-', 'f': '!-', 'g': '!!-','h': '!!!-', 'i': '!!!!-', 'j': '!!!!!-', 'k': '?!-', 'l': '??!-', 'm': '???!-', 'n': '????!-','o': '?????!-',
              'p': '!?-', 'q': '!!?-', 'r': '!!!?-', 's': '!!!!?-', 't': '!!!!!?-', 'u': '?!!-','v': '??!!-', 'w': '???!!-', 'x': '????!!-', 'y': '?????!!-', 'z': '!??-', '(': '!!??-', ')': '!!!???-','""':'!!!??-','=':'?!?-',
              '!':'!?!-','>':'!!??!-','<':'??!!?-'}
    
   if choice == 1:
            result = encrypt(word, cipher)
            print(""Encrypted word:"", result)
   elif choice == 2:
            result = decrypt(word, cipher)
            print(""Decrypted word:"", result)
   else:
            print(""Invalid choice. Please enter 1 for encryption or 2 for decryption."")

if __name__ == ""__main__"":
    main()
"
MUvhApAP,Custom NavigationViewItem Content,Kaushik_Kalesh,XML,Sunday 4th of February 2024 08:27:37 AM CDT,"  	<NavigationView x:Name=""TestNavigationView"" PaneDisplayMode=""LeftMinimal"" IsSettingsVisible=""False"" IsBackButtonVisible=""Collapsed"" DataContext=""{Binding}"">
        <NavigationView.MenuItemTemplate>
            <DataTemplate>
                <StackPanel Orientation=""Horizontal"">
                    <TextBlock Text=""{Binding Name}"" />
                    <Button Content=""btn"" />
                </StackPanel>
            </DataTemplate>
        </NavigationView.MenuItemTemplate>
    </NavigationView>"
324cMuwE,sleep > 0,chemelli74,Python,Sunday 4th of February 2024 08:24:35 AM CDT,"""""""Support for Comelit SimpleHome.""""""
import asyncio
import functools
from abc import abstractmethod
from dataclasses import dataclass
from datetime import datetime
from http.cookies import SimpleCookie
from typing import Any

import aiohttp
import pint
from yarl import URL

from .const import (
    _LOGGER,
    ALARM_AREA_STATUS,
    ALARM_AREAS,
    ALARM_ZONE_STATUS,
    ALARM_ZONES,
    BRIDGE,
    CLIMATE,
    COVER,
    IRRIGATION,
    LIGHT,
    OTHER,
    SCENARIO,
    SLEEP_BETWEEN_BRIDGE_CALLS,
    SLEEP_BETWEEN_VEDO_CALLS,
    STATE_COVER,
    STATE_ON,
    VEDO,
    WATT,
    AlarmAreaState,
    AlarmZoneState,
)
from .exceptions import CannotAuthenticate, CannotConnect, CannotRetrieveData


@dataclass
class ComelitSerialBridgeObject:
    """"""Comelit SimpleHome Serial bridge class.""""""

    index: int
    name: str
    status: int
    human_status: str
    type: str
    val: int | dict[Any, Any]  # Temperature or Humidity (CLIMATE)
    protected: int
    zone: str
    power: float
    power_unit: str = WATT


@dataclass
class ComelitVedoAreaObject:
    """"""Comelit SimpleHome VEDO area class.""""""

    index: int
    name: str
    p1: bool
    p2: bool
    ready: bool
    armed: bool
    alarm: bool
    alarm_memory: bool
    sabotage: bool
    anomaly: bool
    in_time: bool
    out_time: bool
    human_status: AlarmAreaState


@dataclass
class ComelitVedoZoneObject:
    """"""Comelit SimpleHome VEDO zone class.""""""

    index: int
    name: str
    status_api: str
    status: int
    human_status: AlarmZoneState


class ComelitCommonApi:
    """"""Common API calls for Comelit SimpleHome devices.""""""

    def __init__(self, host: str, port: int, pin: int) -> None:
        """"""Initialize the session.""""""
        self.host = f""{host}:{port}""
        self.device_pin = pin
        self.base_url = f""http://{host}:{port}""
        self._headers = {
            ""User-Agent"": ""Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0"",
            ""Accept-Language"": ""en-GB,en;q=0.5"",
            ""X-Requested-With"": ""XMLHttpRequest"",
            ""Connection"": ""keep-alive"",
        }
        self._session: aiohttp.ClientSession

    async def _get_page_result(
        self, page: str, reply_json: bool = True
    ) -> tuple[int, dict[str, Any]]:
        """"""Return status and data from a GET query.""""""
        _LOGGER.debug(""GET page %s [%s]"", page, self.host)
        timestamp = datetime.now().strftime(""%Y-%m-%d %H:%M:%S"")
        url = f""{self.base_url}{page}&_={timestamp}""
        try:
            response = await self._session.get(
                url,
                headers=self._headers,
                timeout=10,
            )
        except (asyncio.TimeoutError, aiohttp.ClientConnectorError) as exc:
            raise CannotConnect(""Connection error during GET"") from exc

        _LOGGER.debug(""GET response %s [%s]"", await response.text(), self.host)

        if response.status != 200:
            raise CannotRetrieveData(f""GET response status {response.status}"")

        if not reply_json:
            _LOGGER.debug(""GET response is empty [%s]"", self.host)
            return response.status, {}

        return response.status, await response.json()

    async def _post_page_result(
        self, page: str, payload: dict[str, Any]
    ) -> SimpleCookie:
        """"""Return status and data from a POST query.""""""
        _LOGGER.debug(""POST page %s [%s]"", page, self.host)
        url = f""{self.base_url}{page}""
        try:
            response = await self._session.post(
                url,
                data=payload,
                headers=self._headers,
                timeout=10,
            )
        except (asyncio.TimeoutError, aiohttp.ClientConnectorError) as exc:
            raise CannotConnect(""Connection error during POST"") from exc

        _LOGGER.debug(""POST response %s [%s]"", await response.text(), self.host)

        if response.status != 200:
            raise CannotRetrieveData(f""POST response status {response.status}"")

        return response.cookies

    async def _is_session_active(self) -> bool:
        """"""Check if aiohttp session is still active.""""""
        if not hasattr(self, ""_session"") or self._session.closed:
            return False

        return True

    async def _check_logged_in(self, host_type: str) -> bool:
        """"""Check if login is active.""""""

        reply_status, reply_json = await self._get_page_result(""/login.json"")

        _LOGGER.debug(""%s login reply: %s"", host_type, reply_json)
        if host_type == BRIDGE:
            logged = reply_json[""domus""] != ""000000000000""
        else:
            logged = reply_json[""logged""] == 1

        return logged

    async def _sleep_between_call(self, seconds: float) -> None:
        """"""Sleep between one call and the next one.""""""
        _LOGGER.debug(""Sleeping for %s seconds before next call"", seconds)
        await asyncio.sleep(seconds)

    @abstractmethod
    async def login(self) -> bool:
        """"""Login to Comelit device.""""""

    async def _login(self, payload: dict[str, Any], host_type: str) -> bool:
        """"""Login into Comelit device.""""""
        _LOGGER.debug(""Logging into host %s [%s]"", self.host, host_type)

        if not await self._is_session_active():
            _LOGGER.debug(""Creating HTTP ClientSession"")
            jar = aiohttp.CookieJar(unsafe=True)
            connector = aiohttp.TCPConnector(force_close=True)
            self._session = aiohttp.ClientSession(cookie_jar=jar, connector=connector)

        if await self._check_logged_in(host_type):
            return True

        cookies = await self._post_page_result(""/login.cgi"", payload)
        _LOGGER.debug(""Cookies for host %s: %s"", self.host, cookies)

        if not cookies:
            _LOGGER.warning(
                ""Authentication failed for host %s [%s]: no cookies received"",
                self.host,
                host_type,
            )
            raise CannotAuthenticate

        self._session.cookie_jar.update_cookies(cookies, URL(self.base_url))

        return await self._check_logged_in(host_type)

    async def logout(self) -> None:
        """"""Comelit Simple Home logout.""""""
        if await self._is_session_active():
            payload = {""logout"": 1}
            await self._post_page_result(""/login.cgi"", payload)
            self._session.cookie_jar.clear()

    async def close(self) -> None:
        """"""Comelit Simple Home close session.""""""
        if await self._is_session_active():
            await self._session.close()


class ComeliteSerialBridgeApi(ComelitCommonApi):
    """"""Queries Comelit SimpleHome Serial bridge.""""""

    def __init__(self, host: str, port: int, bridge_pin: int) -> None:
        """"""Initialize the session.""""""
        super().__init__(host, port, bridge_pin)
        self._devices: dict[str, dict[int, ComelitSerialBridgeObject]] = {}
        self._last_clima_command: datetime = datetime.now()

    async def _translate_device_status(self, dev_type: str, dev_status: int) -> str:
        """"""Makes status human readable.""""""

        if dev_type == COVER:
            return STATE_COVER[dev_status]

        return ""on"" if dev_status == STATE_ON else ""off""

    async def set_clima_status(self, index: int, action: str, temp: float = 0) -> bool:
        """"""Set clima status.

        action:
            auto, man, on, off, set

        """"""

        last_call_elapsed = round(
            (datetime.now() - self._last_clima_command).total_seconds(), 2
        )
        if 0 < last_call_elapsed < SLEEP_BETWEEN_BRIDGE_CALLS:
            _LOGGER.debug(
                ""Climate calls needs to be queued (%ss) for proper execution"",
                last_call_elapsed,
            )
            await self._sleep_between_call(
                SLEEP_BETWEEN_BRIDGE_CALLS - last_call_elapsed
            )

        reply_status = await self._get_page_result(
            f""/user/action.cgi?clima={index}&thermo={action}&val={int(temp*10)}"", False
        )
        self._last_clima_command = datetime.now()

        return reply_status == 200

    async def set_device_status(
        self, device_type: str, index: int, action: int
    ) -> bool:
        """"""Set device action.

        action:
            0 = off/close
            1 = on/open

        """"""
        reply_status = await self._get_page_result(
            f""/user/action.cgi?type={device_type}&num{action}={index}"", False
        )
        return reply_status == 200

    async def get_device_status(self, device_type: str, index: int) -> int:
        """"""Get device status.""""""
        reply_status, reply_json = await self._get_page_result(
            f""/user/icon_status.json?type={device_type}""
        )
        _LOGGER.debug(
            ""Device %s[%s] status: %s"", device_type, index, reply_json[""status""][index]
        )
        return reply_json[""status""][index]

    async def login(self) -> bool:
        """"""Login to Serial Bridge device.""""""
        payload = {""dom"": self.device_pin}
        return await self._login(payload, BRIDGE)

    async def get_all_devices(self) -> dict[str, dict[int, ComelitSerialBridgeObject]]:
        """"""Get all connected devices.""""""

        _LOGGER.debug(""Getting all devices for host %s"", self.host)

        loop = asyncio.get_running_loop()
        ureg = await loop.run_in_executor(
            None, functools.partial(pint.UnitRegistry, cache_folder="":auto:"")
        )
        ureg.default_format = ""~""

        for dev_type in (CLIMATE, COVER, LIGHT, IRRIGATION, OTHER, SCENARIO):
            reply_status, reply_json = await self._get_page_result(
                f""/user/icon_desc.json?type={dev_type}""
            )
            _LOGGER.debug(
                ""List of devices of type %s: %s"",
                dev_type,
                reply_json,
            )
            reply_counter_json: dict[str, Any] = {}
            if dev_type == OTHER and reply_json[""num""] > 0:
                reply_status, reply_counter_json = await self._get_page_result(
                    ""/user/counter.json""
                )
            devices = {}
            for i in range(reply_json[""num""]):
                # Guard against ""scenario"", that has 32 devices even if none is configured
                if reply_json[""desc""][i] == """":
                    continue
                status = reply_json[""status""][i]
                power = 0.0
                if instant_values := reply_counter_json.get(""instant""):
                    instant = ureg(instant_values[i])
                    if not instant.dimensionless:
                        power = ureg.convert(
                            instant.magnitude, str(instant.units), WATT
                        )
                dev_info = ComelitSerialBridgeObject(
                    index=i,
                    name=reply_json[""desc""][i],
                    status=status,
                    human_status=await self._translate_device_status(dev_type, status),
                    type=dev_type,
                    val=reply_json[""val""][i],
                    protected=reply_json[""protected""][i],
                    zone=reply_json[""env_desc""][reply_json[""env""][i]]
                    if not dev_type == SCENARIO
                    else """",
                    power=power,
                )
                devices.update({i: dev_info})
            self._devices.update({dev_type: devices})

        return self._devices


class ComelitVedoApi(ComelitCommonApi):
    """"""Queries Comelit SimpleHome VEDO alarm.""""""

    _json_data: list[dict[Any, Any]] = [{}, {}, {}, {}, {}]

    async def _translate_zone_status(
        self, zone: ComelitVedoZoneObject
    ) -> AlarmZoneState:
        """"""Translate ZONE status.""""""

        for status in ALARM_ZONE_STATUS:
            if zone.status & status != 0:
                return ALARM_ZONE_STATUS[status]

        return AlarmZoneState.REST

    async def _translate_area_status(
        self, area: ComelitVedoAreaObject
    ) -> AlarmAreaState:
        """"""Translate AREA status.""""""

        for field in ALARM_AREA_STATUS:
            if getattr(area, field):
                return ALARM_AREA_STATUS[field]

        return AlarmAreaState.DISARMED

    async def _create_area_object(
        self, json_area_desc: dict[str, Any], json_area_stat: dict[str, Any], index: int
    ) -> ComelitVedoAreaObject:
        """"""Get area status.""""""

        area = ComelitVedoAreaObject(
            index=index,
            name=json_area_desc[""description""][index],
            p1=json_area_desc[""p1_pres""][index],
            p2=json_area_desc[""p2_pres""][index],
            ready=json_area_stat[""ready""][index],
            armed=json_area_stat[""armed""][index],
            alarm=json_area_stat[""alarm""][index],
            alarm_memory=json_area_stat[""alarm_memory""][index],
            sabotage=json_area_stat[""sabotage""][index],
            anomaly=json_area_stat[""anomaly""][index],
            in_time=json_area_stat[""in_time""][index],
            out_time=json_area_stat[""out_time""][index],
            human_status=AlarmAreaState.UNKNOWN,
        )
        area.human_status = await self._translate_area_status(area)
        _LOGGER.debug(area)
        return area

    async def _create_zone_object(
        self, json_zone_desc: dict[str, Any], json_zone_stat: dict[str, Any], index: int
    ) -> ComelitVedoZoneObject:
        """"""Create zone object.""""""

        status_api = json_zone_stat[""status""].split("","")[index]

        zone = ComelitVedoZoneObject(
            index=index,
            name=json_zone_desc[""description""][index],
            status=int(status_api, 16),
            status_api=status_api,
            human_status=AlarmZoneState.UNKNOWN,
        )
        zone.human_status = await self._translate_zone_status(zone)
        _LOGGER.debug(zone)
        return zone

    async def _async_get_page_data(
        self, desc: str, page: str, present_check: str | int | None = None
    ) -> tuple[bool, dict[str, Any]]:
        """"""Return status and data from a specific GET query.""""""
        reply_status, reply_json = await self._get_page_result(page)
        _LOGGER.debug(""Alarm %s: %s"", desc, reply_json)
        present = present_check in reply_json[""present""] if ""_desc"" in page else True
        return (reply_json[""logged""] and present), reply_json

    async def set_zone_status(
        self, index: int, action: str, force: bool = False
    ) -> bool:
        """"""Set zone action.

        action:
            tot = enable
            dis = disable

        index:
            32 = all zones
             n = specific zone

        force:
            False = don't force action
            True  = force action

        """"""

        reply_status = await self._get_page_result(
            f""/action.cgi?vedo=1&{action}={index}&force={int(force)}"", False
        )
        return reply_status == 200

    async def login(self) -> bool:
        """"""Login to VEDO system.""""""
        payload = {""code"": self.device_pin}
        return await self._login(payload, VEDO)

    async def get_area_status(
        self, area: ComelitVedoAreaObject
    ) -> ComelitVedoAreaObject:
        """"""Get AREA status.""""""

        reply_status, reply_json_area_stat = await self._async_get_page_data(
            ""AREA statistics"", ""/user/area_stat.json""
        )
        description = {""description"": area.name, ""p1_pres"": area.p1, ""p2_pres"": area.p2}

        return await self._create_area_object(
            description, reply_json_area_stat, area.index
        )

    async def get_all_areas_and_zones(
        self,
    ) -> dict[str, dict[int, Any]]:
        """"""Get all VEDO system AREA and ZONE.""""""

        queries: dict[int, dict[str, Any]] = {
            1: {
                ""desc"": ""AREA description"",
                ""page"": ""/user/area_desc.json"",
                ""present"": 1,
            },
            2: {
                ""desc"": ""ZONE description"",
                ""page"": ""/user/zone_desc.json"",
                ""present"": ""1"",
            },
            3: {
                ""desc"": ""AREA statistics"",
                ""page"": ""/user/area_stat.json"",
                ""present"": None,
            },
            4: {
                ""desc"": ""ZONE statistics"",
                ""page"": ""/user/zone_stat.json"",
                ""present"": None,
            },
        }

        for index, info in queries.items():
            desc = info[""desc""]
            page = info[""page""]
            present = info[""present""]
            if ""_desc"" in page and self._json_data[index]:
                _LOGGER.debug(""Data for %s already retrieved, skipping"", desc)
                continue
            await self._sleep_between_call(SLEEP_BETWEEN_VEDO_CALLS)
            reply_status, reply_json = await self._async_get_page_data(
                desc, page, present
            )
            if not reply_status:
                _LOGGER.info(""Login expired accessing %s, re-login attempt"", desc)
                await self.login()
                await self._sleep_between_call(SLEEP_BETWEEN_VEDO_CALLS)
                reply_status, reply_json = await self._async_get_page_data(
                    desc, page, present
                )
                if not reply_status:
                    raise CannotRetrieveData(
                        ""Login expired and not working after a retry""
                    )
                _LOGGER.info(""Re-login successful"")
            self._json_data.insert(index, reply_json)

        list_areas: list[int] = self._json_data[1][""present""]
        areas = {}
        for i in range(len(list_areas)):
            if not list_areas[i]:
                _LOGGER.debug(""Alarm skipping non present AREA [%i]"", i)
                continue
            area = await self._create_area_object(
                self._json_data[1], self._json_data[3], i
            )
            areas.update({i: area})

        list_zones: list[int] = self._json_data[2][""present""]
        zones = {}
        for i in range(len(list_zones)):
            if not int(list_zones[i]):
                _LOGGER.debug(""Alarm skipping non present ZONE [%i]"", i)
                continue
            zone = await self._create_zone_object(
                self._json_data[2], self._json_data[4], i
            )
            zones.update({i: zone})

        return {ALARM_AREAS: areas, ALARM_ZONES: zones}
"
PSxCdZNC,Test Class Python,AdminArchon,Python,Sunday 4th of February 2024 07:51:14 AM CDT,"from random import choice, randint

class Personnage:
    def __init__(self) -> None:
        self.FOR=0
        self.feminin = """"
        self.race = """"
        self.sous_race = """"
        self.classe=""""
        self.age = 0
        self.taille = 0
        self.poids = 0
        self.ArmurePossible = []

class Humain(Personnage):
    def __init__(self):       
        super().__init__()
        self.feminin = ""e""
        self.race = ""Humain""
        self.FOR+=5000
              
class Magicien(Personnage):
    def __init__(self):
        #Rien ecrire ici, acces impossible
        super().__init__()
        self.FOR+=8230     

#def creer_personnage():
#    race_aleatoire = choice([Humain])
#    metier_aleatoire = choice([Magicien])
#    personnage = race_aleatoire()
#    personnage.__class__ = metier_aleatoire  
#    return personnage

def creer_race():
    race_aleatoire = choice([Humain])
    race = race_aleatoire()
    return race

def creer_metier():
    metier_aleatoire = choice([Magicien])
    metier = metier_aleatoire()
    return metier

# Création du personnage
race = creer_race()
print(race.FOR) #objet sur humain
metier = creer_metier()
print(metier.FOR) #objet sur Magicien
jeanKevin = Personnage() #objet sur Personnage
print(f""jean kev = {jeanKevin.FOR}"") # vaut 0 car FOR de personnage = 0

#Personnage1 = creer_personnage()

#print(f""{Personnage1.race}{Personnage1.classes} est un {Personnage1.__class__.__name__}"")
"
GyE6agb1,projectsCreation,zarkoto223,JavaScript,Sunday 4th of February 2024 07:47:26 AM CDT,"function a(input){

let name=input[0];
let projectNum=input[1];

console.log('The architect '+name+' will need '+projectNum*3+' hours to complete '+projectNum+' project/s.')"
bY87EnQk,api.py optimized rounding,chemelli74,Python,Sunday 4th of February 2024 07:41:59 AM CDT,"""""""Support for Comelit SimpleHome.""""""
import asyncio
import functools
from abc import abstractmethod
from dataclasses import dataclass
from datetime import datetime
from http.cookies import SimpleCookie
from typing import Any

import aiohttp
import pint
from yarl import URL

from .const import (
    _LOGGER,
    ALARM_AREA_STATUS,
    ALARM_AREAS,
    ALARM_ZONE_STATUS,
    ALARM_ZONES,
    BRIDGE,
    CLIMATE,
    COVER,
    IRRIGATION,
    LIGHT,
    OTHER,
    SCENARIO,
    SLEEP_BETWEEN_BRIDGE_CALLS,
    SLEEP_BETWEEN_VEDO_CALLS,
    STATE_COVER,
    STATE_ON,
    VEDO,
    WATT,
    AlarmAreaState,
    AlarmZoneState,
)
from .exceptions import CannotAuthenticate, CannotConnect, CannotRetrieveData


@dataclass
class ComelitSerialBridgeObject:
    """"""Comelit SimpleHome Serial bridge class.""""""

    index: int
    name: str
    status: int
    human_status: str
    type: str
    val: int | dict[Any, Any]  # Temperature or Humidity (CLIMATE)
    protected: int
    zone: str
    power: float
    power_unit: str = WATT


@dataclass
class ComelitVedoAreaObject:
    """"""Comelit SimpleHome VEDO area class.""""""

    index: int
    name: str
    p1: bool
    p2: bool
    ready: bool
    armed: bool
    alarm: bool
    alarm_memory: bool
    sabotage: bool
    anomaly: bool
    in_time: bool
    out_time: bool
    human_status: AlarmAreaState


@dataclass
class ComelitVedoZoneObject:
    """"""Comelit SimpleHome VEDO zone class.""""""

    index: int
    name: str
    status_api: str
    status: int
    human_status: AlarmZoneState


class ComelitCommonApi:
    """"""Common API calls for Comelit SimpleHome devices.""""""

    def __init__(self, host: str, port: int, pin: int) -> None:
        """"""Initialize the session.""""""
        self.host = f""{host}:{port}""
        self.device_pin = pin
        self.base_url = f""http://{host}:{port}""
        self._headers = {
            ""User-Agent"": ""Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0"",
            ""Accept-Language"": ""en-GB,en;q=0.5"",
            ""X-Requested-With"": ""XMLHttpRequest"",
            ""Connection"": ""keep-alive"",
        }
        self._session: aiohttp.ClientSession

    async def _get_page_result(
        self, page: str, reply_json: bool = True
    ) -> tuple[int, dict[str, Any]]:
        """"""Return status and data from a GET query.""""""
        _LOGGER.debug(""GET page %s [%s]"", page, self.host)
        timestamp = datetime.now().strftime(""%Y-%m-%d %H:%M:%S"")
        url = f""{self.base_url}{page}&_={timestamp}""
        try:
            response = await self._session.get(
                url,
                headers=self._headers,
                timeout=10,
            )
        except (asyncio.TimeoutError, aiohttp.ClientConnectorError) as exc:
            raise CannotConnect(""Connection error during GET"") from exc

        _LOGGER.debug(""GET response %s [%s]"", await response.text(), self.host)

        if response.status != 200:
            raise CannotRetrieveData(f""GET response status {response.status}"")

        if not reply_json:
            _LOGGER.debug(""GET response is empty [%s]"", self.host)
            return response.status, {}

        return response.status, await response.json()

    async def _post_page_result(
        self, page: str, payload: dict[str, Any]
    ) -> SimpleCookie:
        """"""Return status and data from a POST query.""""""
        _LOGGER.debug(""POST page %s [%s]"", page, self.host)
        url = f""{self.base_url}{page}""
        try:
            response = await self._session.post(
                url,
                data=payload,
                headers=self._headers,
                timeout=10,
            )
        except (asyncio.TimeoutError, aiohttp.ClientConnectorError) as exc:
            raise CannotConnect(""Connection error during POST"") from exc

        _LOGGER.debug(""POST response %s [%s]"", await response.text(), self.host)

        if response.status != 200:
            raise CannotRetrieveData(f""POST response status {response.status}"")

        return response.cookies

    async def _is_session_active(self) -> bool:
        """"""Check if aiohttp session is still active.""""""
        if not hasattr(self, ""_session"") or self._session.closed:
            return False

        return True

    async def _check_logged_in(self, host_type: str) -> bool:
        """"""Check if login is active.""""""

        reply_status, reply_json = await self._get_page_result(""/login.json"")

        _LOGGER.debug(""%s login reply: %s"", host_type, reply_json)
        if host_type == BRIDGE:
            logged = reply_json[""domus""] != ""000000000000""
        else:
            logged = reply_json[""logged""] == 1

        return logged

    async def _sleep_between_call(self, seconds: float) -> None:
        """"""Sleep between one call and the next one.""""""
        _LOGGER.debug(""Sleeping for %s seconds before next call"", seconds)
        await asyncio.sleep(seconds)

    @abstractmethod
    async def login(self) -> bool:
        """"""Login to Comelit device.""""""

    async def _login(self, payload: dict[str, Any], host_type: str) -> bool:
        """"""Login into Comelit device.""""""
        _LOGGER.debug(""Logging into host %s [%s]"", self.host, host_type)

        if not await self._is_session_active():
            _LOGGER.debug(""Creating HTTP ClientSession"")
            jar = aiohttp.CookieJar(unsafe=True)
            connector = aiohttp.TCPConnector(force_close=True)
            self._session = aiohttp.ClientSession(cookie_jar=jar, connector=connector)

        if await self._check_logged_in(host_type):
            return True

        cookies = await self._post_page_result(""/login.cgi"", payload)
        _LOGGER.debug(""Cookies for host %s: %s"", self.host, cookies)

        if not cookies:
            _LOGGER.warning(
                ""Authentication failed for host %s [%s]: no cookies received"",
                self.host,
                host_type,
            )
            raise CannotAuthenticate

        self._session.cookie_jar.update_cookies(cookies, URL(self.base_url))

        return await self._check_logged_in(host_type)

    async def logout(self) -> None:
        """"""Comelit Simple Home logout.""""""
        if await self._is_session_active():
            payload = {""logout"": 1}
            await self._post_page_result(""/login.cgi"", payload)
            self._session.cookie_jar.clear()

    async def close(self) -> None:
        """"""Comelit Simple Home close session.""""""
        if await self._is_session_active():
            await self._session.close()


class ComeliteSerialBridgeApi(ComelitCommonApi):
    """"""Queries Comelit SimpleHome Serial bridge.""""""

    def __init__(self, host: str, port: int, bridge_pin: int) -> None:
        """"""Initialize the session.""""""
        super().__init__(host, port, bridge_pin)
        self._devices: dict[str, dict[int, ComelitSerialBridgeObject]] = {}
        self._last_clima_command: datetime | None = None

    async def _translate_device_status(self, dev_type: str, dev_status: int) -> str:
        """"""Makes status human readable.""""""

        if dev_type == COVER:
            return STATE_COVER[dev_status]

        return ""on"" if dev_status == STATE_ON else ""off""

    async def set_clima_status(self, index: int, action: str, temp: float = 0) -> bool:
        """"""Set clima status.

        action:
            auto, man, on, off, set

        """"""
        if (
            self._last_clima_command
            and (
                last_call_elapsed := round(
                    (datetime.now() - self._last_clima_command).total_seconds(), 2
                )
            )
            <= SLEEP_BETWEEN_BRIDGE_CALLS
        ):
            _LOGGER.debug(
                ""Climate calls needs to be queued (%ss) for proper execution"",
                last_call_elapsed,
            )
            await self._sleep_between_call(
                SLEEP_BETWEEN_BRIDGE_CALLS - last_call_elapsed
            )

        reply_status = await self._get_page_result(
            f""/user/action.cgi?clima={index}&thermo={action}&val={int(temp*10)}"", False
        )
        self._last_clima_command = datetime.now()

        return reply_status == 200

    async def set_device_status(
        self, device_type: str, index: int, action: int
    ) -> bool:
        """"""Set device action.

        action:
            0 = off/close
            1 = on/open

        """"""
        reply_status = await self._get_page_result(
            f""/user/action.cgi?type={device_type}&num{action}={index}"", False
        )
        return reply_status == 200

    async def get_device_status(self, device_type: str, index: int) -> int:
        """"""Get device status.""""""
        reply_status, reply_json = await self._get_page_result(
            f""/user/icon_status.json?type={device_type}""
        )
        _LOGGER.debug(
            ""Device %s[%s] status: %s"", device_type, index, reply_json[""status""][index]
        )
        return reply_json[""status""][index]

    async def login(self) -> bool:
        """"""Login to Serial Bridge device.""""""
        payload = {""dom"": self.device_pin}
        return await self._login(payload, BRIDGE)

    async def get_all_devices(self) -> dict[str, dict[int, ComelitSerialBridgeObject]]:
        """"""Get all connected devices.""""""

        _LOGGER.debug(""Getting all devices for host %s"", self.host)

        loop = asyncio.get_running_loop()
        ureg = await loop.run_in_executor(
            None, functools.partial(pint.UnitRegistry, cache_folder="":auto:"")
        )
        ureg.default_format = ""~""

        for dev_type in (CLIMATE, COVER, LIGHT, IRRIGATION, OTHER, SCENARIO):
            reply_status, reply_json = await self._get_page_result(
                f""/user/icon_desc.json?type={dev_type}""
            )
            _LOGGER.debug(
                ""List of devices of type %s: %s"",
                dev_type,
                reply_json,
            )
            reply_counter_json: dict[str, Any] = {}
            if dev_type == OTHER and reply_json[""num""] > 0:
                reply_status, reply_counter_json = await self._get_page_result(
                    ""/user/counter.json""
                )
            devices = {}
            for i in range(reply_json[""num""]):
                # Guard against ""scenario"", that has 32 devices even if none is configured
                if reply_json[""desc""][i] == """":
                    continue
                status = reply_json[""status""][i]
                power = 0.0
                if instant_values := reply_counter_json.get(""instant""):
                    instant = ureg(instant_values[i])
                    if not instant.dimensionless:
                        power = ureg.convert(
                            instant.magnitude, str(instant.units), WATT
                        )
                dev_info = ComelitSerialBridgeObject(
                    index=i,
                    name=reply_json[""desc""][i],
                    status=status,
                    human_status=await self._translate_device_status(dev_type, status),
                    type=dev_type,
                    val=reply_json[""val""][i],
                    protected=reply_json[""protected""][i],
                    zone=reply_json[""env_desc""][reply_json[""env""][i]]
                    if not dev_type == SCENARIO
                    else """",
                    power=power,
                )
                devices.update({i: dev_info})
            self._devices.update({dev_type: devices})

        return self._devices


class ComelitVedoApi(ComelitCommonApi):
    """"""Queries Comelit SimpleHome VEDO alarm.""""""

    _json_data: list[dict[Any, Any]] = [{}, {}, {}, {}, {}]

    async def _translate_zone_status(
        self, zone: ComelitVedoZoneObject
    ) -> AlarmZoneState:
        """"""Translate ZONE status.""""""

        for status in ALARM_ZONE_STATUS:
            if zone.status & status != 0:
                return ALARM_ZONE_STATUS[status]

        return AlarmZoneState.REST

    async def _translate_area_status(
        self, area: ComelitVedoAreaObject
    ) -> AlarmAreaState:
        """"""Translate AREA status.""""""

        for field in ALARM_AREA_STATUS:
            if getattr(area, field):
                return ALARM_AREA_STATUS[field]

        return AlarmAreaState.DISARMED

    async def _create_area_object(
        self, json_area_desc: dict[str, Any], json_area_stat: dict[str, Any], index: int
    ) -> ComelitVedoAreaObject:
        """"""Get area status.""""""

        area = ComelitVedoAreaObject(
            index=index,
            name=json_area_desc[""description""][index],
            p1=json_area_desc[""p1_pres""][index],
            p2=json_area_desc[""p2_pres""][index],
            ready=json_area_stat[""ready""][index],
            armed=json_area_stat[""armed""][index],
            alarm=json_area_stat[""alarm""][index],
            alarm_memory=json_area_stat[""alarm_memory""][index],
            sabotage=json_area_stat[""sabotage""][index],
            anomaly=json_area_stat[""anomaly""][index],
            in_time=json_area_stat[""in_time""][index],
            out_time=json_area_stat[""out_time""][index],
            human_status=AlarmAreaState.UNKNOWN,
        )
        area.human_status = await self._translate_area_status(area)
        _LOGGER.debug(area)
        return area

    async def _create_zone_object(
        self, json_zone_desc: dict[str, Any], json_zone_stat: dict[str, Any], index: int
    ) -> ComelitVedoZoneObject:
        """"""Create zone object.""""""

        status_api = json_zone_stat[""status""].split("","")[index]

        zone = ComelitVedoZoneObject(
            index=index,
            name=json_zone_desc[""description""][index],
            status=int(status_api, 16),
            status_api=status_api,
            human_status=AlarmZoneState.UNKNOWN,
        )
        zone.human_status = await self._translate_zone_status(zone)
        _LOGGER.debug(zone)
        return zone

    async def _async_get_page_data(
        self, desc: str, page: str, present_check: str | int | None = None
    ) -> tuple[bool, dict[str, Any]]:
        """"""Return status and data from a specific GET query.""""""
        reply_status, reply_json = await self._get_page_result(page)
        _LOGGER.debug(""Alarm %s: %s"", desc, reply_json)
        present = present_check in reply_json[""present""] if ""_desc"" in page else True
        return (reply_json[""logged""] and present), reply_json

    async def set_zone_status(
        self, index: int, action: str, force: bool = False
    ) -> bool:
        """"""Set zone action.

        action:
            tot = enable
            dis = disable

        index:
            32 = all zones
             n = specific zone

        force:
            False = don't force action
            True  = force action

        """"""

        reply_status = await self._get_page_result(
            f""/action.cgi?vedo=1&{action}={index}&force={int(force)}"", False
        )
        return reply_status == 200

    async def login(self) -> bool:
        """"""Login to VEDO system.""""""
        payload = {""code"": self.device_pin}
        return await self._login(payload, VEDO)

    async def get_area_status(
        self, area: ComelitVedoAreaObject
    ) -> ComelitVedoAreaObject:
        """"""Get AREA status.""""""

        reply_status, reply_json_area_stat = await self._async_get_page_data(
            ""AREA statistics"", ""/user/area_stat.json""
        )
        description = {""description"": area.name, ""p1_pres"": area.p1, ""p2_pres"": area.p2}

        return await self._create_area_object(
            description, reply_json_area_stat, area.index
        )

    async def get_all_areas_and_zones(
        self,
    ) -> dict[str, dict[int, Any]]:
        """"""Get all VEDO system AREA and ZONE.""""""

        queries: dict[int, dict[str, Any]] = {
            1: {
                ""desc"": ""AREA description"",
                ""page"": ""/user/area_desc.json"",
                ""present"": 1,
            },
            2: {
                ""desc"": ""ZONE description"",
                ""page"": ""/user/zone_desc.json"",
                ""present"": ""1"",
            },
            3: {
                ""desc"": ""AREA statistics"",
                ""page"": ""/user/area_stat.json"",
                ""present"": None,
            },
            4: {
                ""desc"": ""ZONE statistics"",
                ""page"": ""/user/zone_stat.json"",
                ""present"": None,
            },
        }

        for index, info in queries.items():
            desc = info[""desc""]
            page = info[""page""]
            present = info[""present""]
            if ""_desc"" in page and self._json_data[index]:
                _LOGGER.debug(""Data for %s already retrieved, skipping"", desc)
                continue
            await self._sleep_between_call(SLEEP_BETWEEN_VEDO_CALLS)
            reply_status, reply_json = await self._async_get_page_data(
                desc, page, present
            )
            if not reply_status:
                _LOGGER.info(""Login expired accessing %s, re-login attempt"", desc)
                await self.login()
                await self._sleep_between_call(SLEEP_BETWEEN_VEDO_CALLS)
                reply_status, reply_json = await self._async_get_page_data(
                    desc, page, present
                )
                if not reply_status:
                    raise CannotRetrieveData(
                        ""Login expired and not working after a retry""
                    )
                _LOGGER.info(""Re-login successful"")
            self._json_data.insert(index, reply_json)

        list_areas: list[int] = self._json_data[1][""present""]
        areas = {}
        for i in range(len(list_areas)):
            if not list_areas[i]:
                _LOGGER.debug(""Alarm skipping non present AREA [%i]"", i)
                continue
            area = await self._create_area_object(
                self._json_data[1], self._json_data[3], i
            )
            areas.update({i: area})

        list_zones: list[int] = self._json_data[2][""present""]
        zones = {}
        for i in range(len(list_zones)):
            if not int(list_zones[i]):
                _LOGGER.debug(""Alarm skipping non present ZONE [%i]"", i)
                continue
            zone = await self._create_zone_object(
                self._json_data[2], self._json_data[4], i
            )
            zones.update({i: zone})

        return {ALARM_AREAS: areas, ALARM_ZONES: zones}
"
bbUwz9D6,snowybot 7777,coinwalk,JavaScript,Sunday 4th of February 2024 06:47:12 AM CDT,"var original = parseFloat(document.getElementById('pct_balance').value);
var blast = Number((original/1000).toFixed(8));
var tens = (blast*10);
var bilance = original;
var sevens = (blast*6.9);
var eights = (blast*7.9);
var nob = (blast*3);
var surigret = blast;
var forky = 0;
var bob = original;
var telf = original;
var mighty = blast;
var inpoo = parseFloat(surigret);
var idios = (bilance-bob);
var frock = (blast*2);
var vimited = (idios/5);
var freak = Math.floor(vimited/blast);
var mighty = (freak*frock);  
 
function dobet() {
    bilance = parseFloat(document.getElementById('pct_balance').value);
if ((bilance>(((Math.floor(bilance/tens))*tens)+sevens))&&(bilance<(((Math.floor(bilance/tens))*tens)+eights))&&(bilance!=forky)){
     forky = parseFloat(bilance);
     surigret = surigret*2;
} 
if (bilance>telf){
telf = parseFloat(bilance);
}
if (((surigret*4)>=(blast*32))&&(bilance<telf)&&(bilance>bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    inpoo = parseFloat(surigret);
    idios = (bob-bilance);
    vimited = (idios/5);
    freak = Math.floor(vimited/blast);
    mighty = (inpoo-(freak*frock));
    forky = 0;
    if (mighty<blast){
        mighty = blast;
        }
    surigret = mighty;  
    telf = parseFloat(bilance);
}
if (((surigret*4)>=(blast*32))&&(bilance<telf)&&(bilance<bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    mighty = blast;
    surigret = mighty;  
    telf = parseFloat(bilance);
}
if (((surigret*4)>=(blast*32))&&(bilance>=telf)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    forky = 0;
    surigret = blast;
    telf = parseFloat(bilance);
}
    if (bilance>=(original*7)) {
    console.log(""winner winner chicken dinner"");
    return;
}
    $('#pct_chance').val(49.5);
    $('#pct_bet').val(((surigret*1).toFixed(8)));
    $('#a_lo').click();
    setTimeout(() => dobet(), 350);
}
 
dobet();
"
iSB3tRmt,laodnotes.cpp,marusworld,C++,Sunday 4th of February 2024 06:28:29 AM CDT,"bool SSCLoader::LoadNoteDataFromSimfile( const RString & cachePath, Steps &out )
{
	LOG->Trace( ""Loading notes from %s"", cachePath.c_str() );
	
	MsdFile msd;
	if (!msd.ReadFile(cachePath, true))
	{
		LOG->UserLog(""Unable to load any notes from"",
			     cachePath,
			     ""for this reason: %s"",
			     msd.GetError().c_str());
		return false;
	}
	
	bool tryingSteps = false;
	float storedVersion = 0;
	const unsigned values = msd.GetNumValues();
	
	for (unsigned i = 0; i < values; i++)
	{
		const MsdFile::value_t &params = msd.GetValue(i);
		RString valueName = params[0];
		valueName.MakeUpper();
		RString matcher = params[1]; // mainly for debugging.
		Trim(matcher);

		load_note_data_handler_map_t::iterator handler=
			parser_helper.load_note_data_handlers.find(valueName);
		if(handler != parser_helper.load_note_data_handlers.end())
		{
			if(tryingSteps)
			{
				switch(handler->second)
				{
					case LNDID_version:
						// Note that version is in both switches.  Formerly, it was
						// checked before the tryingSteps condition. -Kyz
						storedVersion = std::stof(matcher);
						break;
					case LNDID_stepstype:
						if(out.m_StepsType != GAMEMAN->StringToStepsType(matcher))
						{ tryingSteps = false; }
						break;
					case LNDID_chartname:
						if(storedVersion >= VERSION_CHART_NAME_TAG &&
							out.GetChartName() != matcher)
						{ tryingSteps = false; }
						break;
					case LNDID_description:
						if(storedVersion < VERSION_CHART_NAME_TAG)
						{
							if(out.GetChartName() != matcher)
							{ tryingSteps = false; }
						}
						else if(out.GetDescription() != matcher)
						{ tryingSteps = false; }
						break;
					case LNDID_difficulty:
						// Accept any difficulty if it's an edit because LoadEditFromMsd
						// forces edits onto Edit difficulty even if they have a difficulty
						// tag. -Kyz
						if(out.GetDifficulty() != StringToDifficulty(matcher) &&
							!(out.GetDifficulty() == Difficulty_Edit &&
								GetExtension(cachePath).MakeLower() == ""edit"")
						{ tryingSteps = false; }
						break;
					case LNDID_meter:
						if(out.GetMeter() != StringToInt(matcher))
						{ tryingSteps = false; }
						break;
					case LNDID_credit:
						if(out.GetCredit() != matcher)
						{ tryingSteps = false; }
						break;
					case LNDID_notes:
					case LNDID_notes2:
						out.SetSMNoteData(matcher);
						out.TidyUpData();
						return true;
					default:
						break;
				}
			}
			else
			{
				switch(handler->second)
				{
					case LNDID_version:
						// Note that version is in both switches.  Formerly, it was
						// checked before the tryingSteps condition. -Kyz
						storedVersion = std::stof(matcher);
						break;
					case LNDID_notedata:
						tryingSteps = true;
						break;
					default:
						break;
				}
			}
		}
		else
		{
			// Silently ignore unrecognized tags, as was done before. -Kyz
		}
	}
	return false;
}
"
eRcvuvFn,snowybot 7777,coinwalk,JavaScript,Sunday 4th of February 2024 06:24:37 AM CDT,"var original = parseFloat(document.getElementById('pct_balance').value);
var blast = Number((original/1000).toFixed(8));
var tens = (blast*10);
var bilance = original;
var sevens = (blast*6.9);
var eights = (blast*7.9);
var nob = (blast*3);
var surigret = blast;
var forky = 0;
var bob = original;
var telf = original;
var mighty = blast;
var inpoo = parseFloat(surigret);
var idios = (bilance-bob);
var frock = (blast*2);
var vimited = (idios/5);
var freak = Math.floor(vimited/blast);
var mighty = (freak*frock);  
 
function dobet() {
    bilance = parseFloat(document.getElementById('pct_balance').value);
if ((bilance>(((Math.floor(bilance/tens))*tens)+sevens))&&(bilance<(((Math.floor(bilance/tens))*tens)+eights))&&(bilance!=forky)){
     forky = parseFloat(bilance);
     surigret = surigret*2;
} 
if (bilance>telf){
telf = parseFloat(bilance);
}
if ((original<=(surigret*200))&&(bilance<telf)&&(bilance>bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    inpoo = parseFloat(surigret);
    idios = (bob-bilance);
    vimited = (idios/5);
    freak = Math.floor(vimited/blast);
    mighty = (inpoo-(freak*frock));
    forky = 0;
    if (mighty<blast){
        mighty = blast;
        }
    surigret = mighty;  
    telf = parseFloat(bilance);
}
if ((original<=(surigret*200))&&(bilance<telf)&&(bilance<bob)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    mighty = blast;
    surigret = mighty;  
    telf = parseFloat(bilance);
}
if ((original<=(surigret*200))&&(bilance>=telf)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    forky = 0;
    surigret = blast;
    telf = parseFloat(bilance);
}
    if (bilance>=(original*7)) {
    console.log(""winner winner chicken dinner"");
    return;
}
    $('#pct_chance').val(49.5);
    $('#pct_bet').val(((surigret*1).toFixed(8)));
    $('#a_lo').click();
    setTimeout(() => dobet(), 350);
}
 
dobet();
"
hxBBdTnF,"rock, paper and scissors",sriyanto,Python,Sunday 4th of February 2024 06:18:09 AM CDT,"import random

def get_user_choice():
    # Get user input for their choice, ensure it's valid
    user_choice = input(""Enter your choice (Rock, Paper, or Scissors): "").capitalize()
    while user_choice not in [""Rock"", ""Paper"", ""Scissors""]:
        print(""Invalid choice. Please choose Rock, Paper, or Scissors."")
        user_choice = input(""Enter your choice (Rock, Paper, or Scissors): "").capitalize()
    return user_choice

def get_computer_choice():
    # Generate a random choice for the computer
    choices = [""Rock"", ""Paper"", ""Scissors""]
    return random.choice(choices)

def determine_winner(user_choice, computer_choice):
    # Determine the winner based on the game rules
    if user_choice == computer_choice:
        return ""It's a tie!"", 0
    elif (user_choice == ""Rock"" and computer_choice == ""Scissors"") or \
         (user_choice == ""Paper"" and computer_choice == ""Rock"") or \
         (user_choice == ""Scissors"" and computer_choice == ""Paper""):
        return ""You win!"", 1
    else:
        return ""Computer wins!"", -1

def main():
    # Main function to execute the game
    print(""Welcome to Rock, Paper, Scissors!"")

    user_score = 0
    computer_score = 0
    rounds = 0
    
    while True:
        user_choice = get_user_choice()
        computer_choice = get_computer_choice()

        print(f""You chose {user_choice}."")
        print(f""Computer chose {computer_choice}."")

        result, score_change = determine_winner(user_choice, computer_choice)
        print(result)

        user_score += score_change
        computer_score -= score_change
        rounds += 1

        print(f""Score after {rounds} rounds: You {user_score} - {computer_score} Computer"")

        play_again = input(""Do you want to play again? (yes/no): "").lower()
        if play_again != ""yes"":
            print(""Thanks for playing! Final score:"")
            print(f""You: {user_score} - Computer: {computer_score}"")
            break

if __name__ == ""__main__"":
    main()
"
aJ8jLU1U,Haskell: Parsec problem,leokostarev,Haskell,Sunday 4th of February 2024 06:06:52 AM CDT,"{-# LANGUAGE InstanceSigs #-}

module Forth (ForthError (..), ForthState, evalText, toList, emptyState) where

import Data.Char (isDigit, isLetter)
import Data.Functor (($>))
import Data.Map (Map, empty, insert)
import Data.Text (Text, pack, toLower)
import Text.Parsec
import Text.Parsec.Text (Parser)
import Prelude hiding (drop)

data ForthError
  = DivisionByZero
  | StackUnderflow
  | InvalidWord
  | UnknownWord Text
  deriving (Show, Eq)

data Command = Command
  { runCommand :: ForthState -> Either ForthError ForthState,
    name :: String
  }

instance Show Command where
  show :: Command -> String
  show cmd = ""<command "" ++ name cmd ++ "" >""

data ForthState = ForthState [Int] (Map String Command)

emptyState :: ForthState
emptyState = ForthState [] empty

evalText :: Text -> ForthState -> Either ForthError ForthState
evalText text' stack = undefined
  where
    text = toLower text'

    cmds = parse parseForthS ""useless.log"" text

toList :: ForthState -> [Int]
toList (ForthState xs _) = xs

parseForthS :: Parser [Command]
parseForthS = spaces *> (parseForth `sepEndBy` spaces)

parseForth :: Parser Command
parseForth =
  try (push <$> many1 (satisfy isDigit))
    <|> try (char '+' $> Command add ""add"")
    <|> try (char '-' $> Command sub ""sub"")
    <|> try (char '*' $> Command mul ""mul"")
    <|> try (char '/' $> Command di ""div"")
    <|> try (string ""dup"" $> Command dup ""dup"")
    <|> try (string ""drop"" $> Command drop ""drop"")
    <|> try (string ""swap"" $> Command swap ""swap"")
    <|> try (string ""over"" $> Command over ""over"")
    <|> try
      ( between
          (char ':' <* spaces)
          (char ';')
          ( liftA2
              define
              -- identifier
              (many1 $ satisfy isLetter)
              -- expressions
              parseForthS
          )
      )
    <|> (noop <$> many1 (satisfy (/= ' ')))
  where
    push x = Command body ""push""
      where
        body (ForthState s m) = Right $ ForthState (read x : s) m

    add (ForthState (x : y : xs) m) = Right $ ForthState (y + x : xs) m
    add _ = Left StackUnderflow

    sub (ForthState (x : y : xs) m) = Right $ ForthState (y - x : xs) m
    sub _ = Left StackUnderflow

    mul (ForthState (x : y : xs) m) = Right $ ForthState (y * x : xs) m
    mul _ = Left StackUnderflow

    di (ForthState (x : y : xs) m)
      | x /= 0 = Right $ ForthState ((y `div` x) : xs) m -- TODO: may be broken
      | otherwise = Left DivisionByZero
    di _ = Left StackUnderflow

    dup (ForthState (x : xs) m) = Right $ ForthState (x : x : xs) m
    dup _ = Left StackUnderflow

    drop (ForthState (_ : xs) m) = Right $ ForthState xs m
    drop _ = Left StackUnderflow

    swap (ForthState (x : y : xs) m) = Right $ ForthState (y : x : xs) m
    swap _ = Left StackUnderflow

    over (ForthState (x : y : xs) m) = Right $ ForthState (y : x : y : xs) m
    over _ = Left StackUnderflow

    define :: String -> [Command] -> Command
    define w expressinos = Command (\(ForthState xs m) -> Right $ ForthState xs $ insert w body m) ""define-command""
      where
        body = Command eff ""define-body""
        eff fs = foldl app (Right fs) expressinos
        app :: Either ForthError ForthState -> Command -> Either ForthError ForthState
        app (Right fs@(ForthState _ _)) cmd = runCommand cmd fs
        app (Left fe) _ = Left fe

    noop x = Command (\_ -> Left $ UnknownWord $ pack x) ""noop"""
3aywpkMP,"HA climate, no sleep",chemelli74,Python,Sunday 4th of February 2024 06:03:40 AM CDT,"""""""Support for climates.""""""
from __future__ import annotations

from enum import StrEnum
from typing import Any

from aiocomelit import ComelitSerialBridgeObject
from aiocomelit.const import CLIMATE

from homeassistant.components.climate import (
    ClimateEntity,
    ClimateEntityFeature,
    HVACAction,
    HVACMode,
    UnitOfTemperature,
)
from homeassistant.config_entries import ConfigEntry
from homeassistant.const import ATTR_TEMPERATURE, PRECISION_TENTHS
from homeassistant.core import HomeAssistant
from homeassistant.helpers.entity_platform import AddEntitiesCallback
from homeassistant.helpers.update_coordinator import CoordinatorEntity

from .const import DOMAIN
from .coordinator import ComelitSerialBridge


class ClimaMode(StrEnum):
    """"""Serial Bridge clima modes.""""""

    AUTO = ""A""
    OFF = ""O""
    LOWER = ""L""
    UPPER = ""U""


class ClimaAction(StrEnum):
    """"""Serial Bridge clima actions.""""""

    OFF = ""off""
    ON = ""on""
    MANUAL = ""man""
    SET = ""set""
    AUTO = ""auto""


API_STATUS: dict[str, dict[str, Any]] = {
    ClimaMode.OFF: {
        ""action"": ""off"",
        ""hvac_mode"": HVACMode.OFF,
        ""hvac_action"": HVACAction.OFF,
    },
    ClimaMode.LOWER: {
        ""action"": ""lower"",
        ""hvac_mode"": HVACMode.COOL,
        ""hvac_action"": HVACAction.COOLING,
    },
    ClimaMode.UPPER: {
        ""action"": ""upper"",
        ""hvac_mode"": HVACMode.HEAT,
        ""hvac_action"": HVACAction.HEATING,
    },
}

MODE_TO_ACTION: dict[HVACMode, ClimaAction] = {
    HVACMode.OFF: ClimaAction.OFF,
    HVACMode.AUTO: ClimaAction.AUTO,
    HVACMode.COOL: ClimaAction.MANUAL,
    HVACMode.HEAT: ClimaAction.MANUAL,
}


async def async_setup_entry(
    hass: HomeAssistant,
    config_entry: ConfigEntry,
    async_add_entities: AddEntitiesCallback,
) -> None:
    """"""Set up Comelit climates.""""""

    coordinator: ComelitSerialBridge = hass.data[DOMAIN][config_entry.entry_id]

    async_add_entities(
        ComelitClimateEntity(coordinator, device, config_entry.entry_id)
        for device in coordinator.data[CLIMATE].values()
    )


class ComelitClimateEntity(CoordinatorEntity[ComelitSerialBridge], ClimateEntity):
    """"""Climate device.""""""

    _attr_hvac_modes = [HVACMode.AUTO, HVACMode.COOL, HVACMode.HEAT, HVACMode.OFF]
    _attr_max_temp = 30
    _attr_min_temp = 5
    _attr_supported_features = ClimateEntityFeature.TARGET_TEMPERATURE
    _attr_target_temperature_step = PRECISION_TENTHS
    _attr_temperature_unit = UnitOfTemperature.CELSIUS
    _attr_has_entity_name = True
    _attr_name = None

    def __init__(
        self,
        coordinator: ComelitSerialBridge,
        device: ComelitSerialBridgeObject,
        config_entry_entry_id: str,
    ) -> None:
        """"""Init light entity.""""""
        self._api = coordinator.api
        self._device = device
        super().__init__(coordinator)
        # Use config_entry.entry_id as base for unique_id
        # because no serial number or mac is available
        self._attr_unique_id = f""{config_entry_entry_id}-{device.index}""
        self._attr_device_info = coordinator.platform_device_info(device, device.type)

    @property
    def _clima(self) -> list[Any]:
        """"""Return clima device data.""""""
        # CLIMATE has a 2 item tuple:
        # - first  for Clima
        # - second for Humidifier
        return self.coordinator.data[CLIMATE][self._device.index].val[0]

    @property
    def _api_mode(self) -> str:
        """"""Return device mode.""""""
        # Values from API: ""O"", ""L"", ""U""
        return self._clima[2]

    @property
    def _api_active(self) -> bool:
        ""Return device active/idle.""
        return self._clima[1]

    @property
    def _api_automatic(self) -> bool:
        """"""Return device in automatic/manual mode.""""""
        return self._clima[3] == ClimaMode.AUTO

    @property
    def target_temperature(self) -> float:
        """"""Set target temperature.""""""
        return self._clima[4] / 10

    @property
    def current_temperature(self) -> float:
        """"""Return current temperature.""""""
        return self._clima[0] / 10

    @property
    def hvac_mode(self) -> HVACMode | None:
        """"""HVAC current mode.""""""

        if self._api_mode == ClimaMode.OFF:
            return HVACMode.OFF

        if self._api_automatic:
            return HVACMode.AUTO

        if self._api_mode in API_STATUS:
            return API_STATUS[self._api_mode][""hvac_mode""]

        return None

    @property
    def hvac_action(self) -> HVACAction | None:
        """"""HVAC current action.""""""

        if self._api_mode == ClimaMode.OFF:
            return HVACAction.OFF

        if not self._api_active:
            return HVACAction.IDLE

        if self._api_mode in API_STATUS:
            return API_STATUS[self._api_mode][""hvac_action""]

        return None

    async def async_set_temperature(self, **kwargs: Any) -> None:
        """"""Set new target temperature.""""""
        if (
            target_temp := kwargs.get(ATTR_TEMPERATURE)
        ) is None or self.hvac_mode == HVACMode.OFF:
            return

        await self.coordinator.api.set_clima_status(
            self._device.index, ClimaAction.MANUAL
        )
        await self.coordinator.api.set_clima_status(
            self._device.index, ClimaAction.SET, target_temp
        )

    async def async_set_hvac_mode(self, hvac_mode: HVACMode) -> None:
        """"""Set hvac mode.""""""

        if hvac_mode != HVACMode.OFF:
            await self.coordinator.api.set_clima_status(
                self._device.index, ClimaAction.ON
            )
        await self.coordinator.api.set_clima_status(
            self._device.index, MODE_TO_ACTION[hvac_mode]
        )
"
exWFCwXQ,data830,TestGuy1,JSON,Sunday 4th of February 2024 06:00:10 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'ae0d37a653d0d12685151f51aa3dd16caf17d789c71093d52b13713c50b89606be9c61f4aa88896a444de36ba8295a54aa7ec7b0c7ed112802b8f25f42c678bbd31df563481c6d8f0ab8bd454b28ae7ad4dd6942227682b4be5d1de9e0b7eb7f03a81afd517f4ddf35a6108b7d11d897957bec54c617123f00cd6bf459b820b9',
  otherdata: [
    '28c5410bb179dd156722cac37bd2ef9e',
    '15306ab04475e38124cb8c234b588408',
    '0226becc6a12efb3faa2dcf970b81906',
    '0fbbdc676df1a0ea756e5eae349e277a',
    'a455d0ad8181036515b5827870574e76',
    '34ed589e009eca89cbeef76083893ffc',
    '19ceca6dbebc85663624caf33a13e541',
    '39f211dab12f649d62b6fe741761843a'
  ]
}"
5ytpz66S,FreePie_TrackIr_to_Mouse_yaw_pitch.py,lethak,Python,Sunday 4th of February 2024 05:55:59 AM CDT,"#Use one:one profile in TrackIR
#Tweak Head Track sensitivity using ""multiply = X""          Insert to toggle on/off 


#__Change these variables to customize your experience__
if starting:
    enabledHT = False            # Set to True or False depending on if you want the headtracking to begin immediately 
    multiply = 4               # Speed of head tracking

#__Change these button to remap the toggle keys__
toggleHT = keyboard.getPressed(Key.Insert)    #Toggle Head Tracking


#=========================================================#
def update():
    yaw = trackIR.yaw
    pitch = trackIR.pitch
    zoom = -trackIR.z
    lean = trackIR.x


    deltaYaw = filters.delta(yaw)
    deltaPitch = filters.delta(pitch)
    deltaLean = filters.delta(lean)   

    #__Head Look Section__
    if (enabledHT):
        mouse.deltaX = deltaYaw*multiply    
        mouse.deltaY = -deltaPitch*multiply

#__xxx Don't touch xxx__
if starting:      
    trackIR.update += update    

if toggleHT:
	enabledHT = not enabledHT
	if(enabledHT):
   		speech.say(""tracking to mouse"")
  	else:
  		speech.say(""off"")"
wuXSJwVq,aiocomelit - const.py,chemelli74,Python,Sunday 4th of February 2024 05:34:11 AM CDT,"""""""Constants for Comelit Simple Home.""""""
import logging
from enum import Enum

_LOGGER = logging.getLogger(__package__)

# Host types
BRIDGE = ""Serial bridge""
VEDO = ""Vedo system""

# Device types
CLIMATE = ""clima""
COVER = ""shutter""
IRRIGATION = ""irrigation""
LIGHT = ""light""
OTHER = ""other""
SCENARIO = ""scenario""

# Statuses
STATE_COVER: list[str] = [""stopped"", ""opening"", ""closing""]
STATE_OFF = 0
STATE_ON = 1


# Alarm specific
class AlarmAreaState(Enum):
    ANOMALY = ""anomaly""
    ARMED = ""armed""
    DISARMED = ""disarmed""
    ENTRY_DELAY = ""entry_delay""
    EXIT_DELAY = ""exit_delay""
    SABOTAGE = ""sabotage""
    TRIGGERED = ""triggered""
    UNKNOWN = ""unknown""


class AlarmZoneState(Enum):
    ALARM = ""alarm""
    ARMED = ""armed""
    OPEN = ""open""
    EXCLUDED = ""excluded""
    FAULTY = ""faulty""
    INHIBITED = ""inhibited""
    ISOLATED = ""isolated""
    REST = ""rest""
    SABOTATED = ""sabotated""
    UNAVAILABLE = ""unavailable""
    UNKNOWN = ""unknown""


ALARM_DISABLE = ""dis""
ALARM_ENABLE = ""tot""
ALARM_AREAS = ""alarm_areas""
ALARM_AREA_STATUS: dict[str, AlarmAreaState] = {
    ""out_time"": AlarmAreaState.EXIT_DELAY,
    ""in_time"": AlarmAreaState.ENTRY_DELAY,
    ""anomaly"": AlarmAreaState.ANOMALY,
    ""sabotage"": AlarmAreaState.SABOTAGE,
    ""alarm"": AlarmAreaState.TRIGGERED,
    ""armed"": AlarmAreaState.ARMED,
    ""ready"": AlarmAreaState.DISARMED,
}
ALARM_ZONES = ""alarm_zones""
ALARM_ZONE_STATUS: dict[int, AlarmZoneState] = {
    # Alarm state needs to be checked first
    # because is reported as OPEN + ALARM + ARMED [51]
    2: AlarmZoneState.ALARM,
    0: AlarmZoneState.REST,
    1: AlarmZoneState.OPEN,
    4: AlarmZoneState.FAULTY,
    8: AlarmZoneState.SABOTATED,
    32: AlarmZoneState.ARMED,
    128: AlarmZoneState.EXCLUDED,
    256: AlarmZoneState.ISOLATED,
    512: AlarmZoneState.UNAVAILABLE,
    32768: AlarmZoneState.INHIBITED,
}

# Min wait time between http calls
SLEEP_BETWEEN_BRIDGE_CALLS = 1.5
SLEEP_BETWEEN_VEDO_CALLS = 0.25

# DEFAULT POWER UNIT
WATT = ""W""
"
VcwmhLz9,aiocomelit - api.py with SLEEP,chemelli74,Python,Sunday 4th of February 2024 05:32:41 AM CDT,"""""""Support for Comelit SimpleHome.""""""
import asyncio
import functools
from abc import abstractmethod
from dataclasses import dataclass
from datetime import datetime
from http.cookies import SimpleCookie
from typing import Any

import aiohttp
import pint
from yarl import URL

from .const import (
    _LOGGER,
    ALARM_AREA_STATUS,
    ALARM_AREAS,
    ALARM_ZONE_STATUS,
    ALARM_ZONES,
    BRIDGE,
    CLIMATE,
    COVER,
    IRRIGATION,
    LIGHT,
    OTHER,
    SCENARIO,
    SLEEP_BETWEEN_BRIDGE_CALLS,
    SLEEP_BETWEEN_VEDO_CALLS,
    STATE_COVER,
    STATE_ON,
    VEDO,
    WATT,
    AlarmAreaState,
    AlarmZoneState,
)
from .exceptions import CannotAuthenticate, CannotConnect, CannotRetrieveData


@dataclass
class ComelitSerialBridgeObject:
    """"""Comelit SimpleHome Serial bridge class.""""""

    index: int
    name: str
    status: int
    human_status: str
    type: str
    val: int | dict[Any, Any]  # Temperature or Humidity (CLIMATE)
    protected: int
    zone: str
    power: float
    power_unit: str = WATT


@dataclass
class ComelitVedoAreaObject:
    """"""Comelit SimpleHome VEDO area class.""""""

    index: int
    name: str
    p1: bool
    p2: bool
    ready: bool
    armed: bool
    alarm: bool
    alarm_memory: bool
    sabotage: bool
    anomaly: bool
    in_time: bool
    out_time: bool
    human_status: AlarmAreaState


@dataclass
class ComelitVedoZoneObject:
    """"""Comelit SimpleHome VEDO zone class.""""""

    index: int
    name: str
    status_api: str
    status: int
    human_status: AlarmZoneState


class ComelitCommonApi:
    """"""Common API calls for Comelit SimpleHome devices.""""""

    def __init__(self, host: str, port: int, pin: int) -> None:
        """"""Initialize the session.""""""
        self.host = f""{host}:{port}""
        self.device_pin = pin
        self.base_url = f""http://{host}:{port}""
        self._headers = {
            ""User-Agent"": ""Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0"",
            ""Accept-Language"": ""en-GB,en;q=0.5"",
            ""X-Requested-With"": ""XMLHttpRequest"",
            ""Connection"": ""keep-alive"",
        }
        self._session: aiohttp.ClientSession

    async def _get_page_result(
        self, page: str, reply_json: bool = True
    ) -> tuple[int, dict[str, Any]]:
        """"""Return status and data from a GET query.""""""
        _LOGGER.debug(""GET page %s [%s]"", page, self.host)
        timestamp = datetime.now().strftime(""%Y-%m-%d %H:%M:%S"")
        url = f""{self.base_url}{page}&_={timestamp}""
        try:
            response = await self._session.get(
                url,
                headers=self._headers,
                timeout=10,
            )
        except (asyncio.TimeoutError, aiohttp.ClientConnectorError) as exc:
            raise CannotConnect(""Connection error during GET"") from exc

        _LOGGER.debug(""GET response %s [%s]"", await response.text(), self.host)

        if response.status != 200:
            raise CannotRetrieveData(f""GET response status {response.status}"")

        if not reply_json:
            _LOGGER.debug(""GET response is empty [%s]"", self.host)
            return response.status, {}

        return response.status, await response.json()

    async def _post_page_result(
        self, page: str, payload: dict[str, Any]
    ) -> SimpleCookie:
        """"""Return status and data from a POST query.""""""
        _LOGGER.debug(""POST page %s [%s]"", page, self.host)
        url = f""{self.base_url}{page}""
        try:
            response = await self._session.post(
                url,
                data=payload,
                headers=self._headers,
                timeout=10,
            )
        except (asyncio.TimeoutError, aiohttp.ClientConnectorError) as exc:
            raise CannotConnect(""Connection error during POST"") from exc

        _LOGGER.debug(""POST response %s [%s]"", await response.text(), self.host)

        if response.status != 200:
            raise CannotRetrieveData(f""POST response status {response.status}"")

        return response.cookies

    async def _is_session_active(self) -> bool:
        """"""Check if aiohttp session is still active.""""""
        if not hasattr(self, ""_session"") or self._session.closed:
            return False

        return True

    async def _check_logged_in(self, host_type: str) -> bool:
        """"""Check if login is active.""""""

        reply_status, reply_json = await self._get_page_result(""/login.json"")

        _LOGGER.debug(""%s login reply: %s"", host_type, reply_json)
        if host_type == BRIDGE:
            logged = reply_json[""domus""] != ""000000000000""
        else:
            logged = reply_json[""logged""] == 1

        return logged

    async def _sleep_between_call(self, seconds: float) -> None:
        """"""Sleep between one call and the next one.""""""
        _LOGGER.debug(""Sleeping for %s seconds before next call"", seconds)
        await asyncio.sleep(seconds)

    @abstractmethod
    async def login(self) -> bool:
        """"""Login to Comelit device.""""""

    async def _login(self, payload: dict[str, Any], host_type: str) -> bool:
        """"""Login into Comelit device.""""""
        _LOGGER.debug(""Logging into host %s [%s]"", self.host, host_type)

        if not await self._is_session_active():
            _LOGGER.debug(""Creating HTTP ClientSession"")
            jar = aiohttp.CookieJar(unsafe=True)
            connector = aiohttp.TCPConnector(force_close=True)
            self._session = aiohttp.ClientSession(cookie_jar=jar, connector=connector)

        if await self._check_logged_in(host_type):
            return True

        cookies = await self._post_page_result(""/login.cgi"", payload)
        _LOGGER.debug(""Cookies for host %s: %s"", self.host, cookies)

        if not cookies:
            _LOGGER.warning(
                ""Authentication failed for host %s [%s]: no cookies received"",
                self.host,
                host_type,
            )
            raise CannotAuthenticate

        self._session.cookie_jar.update_cookies(cookies, URL(self.base_url))

        return await self._check_logged_in(host_type)

    async def logout(self) -> None:
        """"""Comelit Simple Home logout.""""""
        if await self._is_session_active():
            payload = {""logout"": 1}
            await self._post_page_result(""/login.cgi"", payload)
            self._session.cookie_jar.clear()

    async def close(self) -> None:
        """"""Comelit Simple Home close session.""""""
        if await self._is_session_active():
            await self._session.close()


class ComeliteSerialBridgeApi(ComelitCommonApi):
    """"""Queries Comelit SimpleHome Serial bridge.""""""

    def __init__(self, host: str, port: int, bridge_pin: int) -> None:
        """"""Initialize the session.""""""
        super().__init__(host, port, bridge_pin)
        self._devices: dict[str, dict[int, ComelitSerialBridgeObject]] = {}
        self._last_clima_command: datetime | None = None

    async def _translate_device_status(self, dev_type: str, dev_status: int) -> str:
        """"""Makes status human readable.""""""

        if dev_type == COVER:
            return STATE_COVER[dev_status]

        return ""on"" if dev_status == STATE_ON else ""off""

    async def set_clima_status(self, index: int, action: str, temp: float = 0) -> bool:
        """"""Set clima status.

        action:
            auto, man, on, off, set

        """"""
        if (
            self._last_clima_command
            and (
                last_call_elapsed := (
                    datetime.now() - self._last_clima_command
                ).total_seconds()
            )
            < SLEEP_BETWEEN_BRIDGE_CALLS
        ):
            _LOGGER.debug(
                ""Climate calls needs to be queued (%ss) for proper execution"",
                last_call_elapsed,
            )
            await self._sleep_between_call(
                SLEEP_BETWEEN_BRIDGE_CALLS - last_call_elapsed
            )

        reply_status = await self._get_page_result(
            f""/user/action.cgi?clima={index}&thermo={action}&val={int(temp*10)}"", False
        )
        self._last_clima_command = datetime.now()

        return reply_status == 200

    async def set_device_status(
        self, device_type: str, index: int, action: int
    ) -> bool:
        """"""Set device action.

        action:
            0 = off/close
            1 = on/open

        """"""
        reply_status = await self._get_page_result(
            f""/user/action.cgi?type={device_type}&num{action}={index}"", False
        )
        return reply_status == 200

    async def get_device_status(self, device_type: str, index: int) -> int:
        """"""Get device status.""""""
        reply_status, reply_json = await self._get_page_result(
            f""/user/icon_status.json?type={device_type}""
        )
        _LOGGER.debug(
            ""Device %s[%s] status: %s"", device_type, index, reply_json[""status""][index]
        )
        return reply_json[""status""][index]

    async def login(self) -> bool:
        """"""Login to Serial Bridge device.""""""
        payload = {""dom"": self.device_pin}
        return await self._login(payload, BRIDGE)

    async def get_all_devices(self) -> dict[str, dict[int, ComelitSerialBridgeObject]]:
        """"""Get all connected devices.""""""

        _LOGGER.debug(""Getting all devices for host %s"", self.host)

        loop = asyncio.get_running_loop()
        ureg = await loop.run_in_executor(
            None, functools.partial(pint.UnitRegistry, cache_folder="":auto:"")
        )
        ureg.default_format = ""~""

        for dev_type in (CLIMATE, COVER, LIGHT, IRRIGATION, OTHER, SCENARIO):
            reply_status, reply_json = await self._get_page_result(
                f""/user/icon_desc.json?type={dev_type}""
            )
            _LOGGER.debug(
                ""List of devices of type %s: %s"",
                dev_type,
                reply_json,
            )
            reply_counter_json: dict[str, Any] = {}
            if dev_type == OTHER and reply_json[""num""] > 0:
                reply_status, reply_counter_json = await self._get_page_result(
                    ""/user/counter.json""
                )
            devices = {}
            for i in range(reply_json[""num""]):
                # Guard against ""scenario"", that has 32 devices even if none is configured
                if reply_json[""desc""][i] == """":
                    continue
                status = reply_json[""status""][i]
                power = 0.0
                if instant_values := reply_counter_json.get(""instant""):
                    instant = ureg(instant_values[i])
                    if not instant.dimensionless:
                        power = ureg.convert(
                            instant.magnitude, str(instant.units), WATT
                        )
                dev_info = ComelitSerialBridgeObject(
                    index=i,
                    name=reply_json[""desc""][i],
                    status=status,
                    human_status=await self._translate_device_status(dev_type, status),
                    type=dev_type,
                    val=reply_json[""val""][i],
                    protected=reply_json[""protected""][i],
                    zone=reply_json[""env_desc""][reply_json[""env""][i]]
                    if not dev_type == SCENARIO
                    else """",
                    power=power,
                )
                devices.update({i: dev_info})
            self._devices.update({dev_type: devices})

        return self._devices


class ComelitVedoApi(ComelitCommonApi):
    """"""Queries Comelit SimpleHome VEDO alarm.""""""

    _json_data: list[dict[Any, Any]] = [{}, {}, {}, {}, {}]

    async def _translate_zone_status(
        self, zone: ComelitVedoZoneObject
    ) -> AlarmZoneState:
        """"""Translate ZONE status.""""""

        for status in ALARM_ZONE_STATUS:
            if zone.status & status != 0:
                return ALARM_ZONE_STATUS[status]

        return AlarmZoneState.REST

    async def _translate_area_status(
        self, area: ComelitVedoAreaObject
    ) -> AlarmAreaState:
        """"""Translate AREA status.""""""

        for field in ALARM_AREA_STATUS:
            if getattr(area, field):
                return ALARM_AREA_STATUS[field]

        return AlarmAreaState.DISARMED

    async def _create_area_object(
        self, json_area_desc: dict[str, Any], json_area_stat: dict[str, Any], index: int
    ) -> ComelitVedoAreaObject:
        """"""Get area status.""""""

        area = ComelitVedoAreaObject(
            index=index,
            name=json_area_desc[""description""][index],
            p1=json_area_desc[""p1_pres""][index],
            p2=json_area_desc[""p2_pres""][index],
            ready=json_area_stat[""ready""][index],
            armed=json_area_stat[""armed""][index],
            alarm=json_area_stat[""alarm""][index],
            alarm_memory=json_area_stat[""alarm_memory""][index],
            sabotage=json_area_stat[""sabotage""][index],
            anomaly=json_area_stat[""anomaly""][index],
            in_time=json_area_stat[""in_time""][index],
            out_time=json_area_stat[""out_time""][index],
            human_status=AlarmAreaState.UNKNOWN,
        )
        area.human_status = await self._translate_area_status(area)
        _LOGGER.debug(area)
        return area

    async def _create_zone_object(
        self, json_zone_desc: dict[str, Any], json_zone_stat: dict[str, Any], index: int
    ) -> ComelitVedoZoneObject:
        """"""Create zone object.""""""

        status_api = json_zone_stat[""status""].split("","")[index]

        zone = ComelitVedoZoneObject(
            index=index,
            name=json_zone_desc[""description""][index],
            status=int(status_api, 16),
            status_api=status_api,
            human_status=AlarmZoneState.UNKNOWN,
        )
        zone.human_status = await self._translate_zone_status(zone)
        _LOGGER.debug(zone)
        return zone

    async def _async_get_page_data(
        self, desc: str, page: str, present_check: str | int | None = None
    ) -> tuple[bool, dict[str, Any]]:
        """"""Return status and data from a specific GET query.""""""
        reply_status, reply_json = await self._get_page_result(page)
        _LOGGER.debug(""Alarm %s: %s"", desc, reply_json)
        present = present_check in reply_json[""present""] if ""_desc"" in page else True
        return (reply_json[""logged""] and present), reply_json

    async def set_zone_status(
        self, index: int, action: str, force: bool = False
    ) -> bool:
        """"""Set zone action.

        action:
            tot = enable
            dis = disable

        index:
            32 = all zones
             n = specific zone

        force:
            False = don't force action
            True  = force action

        """"""

        reply_status = await self._get_page_result(
            f""/action.cgi?vedo=1&{action}={index}&force={int(force)}"", False
        )
        return reply_status == 200

    async def login(self) -> bool:
        """"""Login to VEDO system.""""""
        payload = {""code"": self.device_pin}
        return await self._login(payload, VEDO)

    async def get_area_status(
        self, area: ComelitVedoAreaObject
    ) -> ComelitVedoAreaObject:
        """"""Get AREA status.""""""

        reply_status, reply_json_area_stat = await self._async_get_page_data(
            ""AREA statistics"", ""/user/area_stat.json""
        )
        description = {""description"": area.name, ""p1_pres"": area.p1, ""p2_pres"": area.p2}

        return await self._create_area_object(
            description, reply_json_area_stat, area.index
        )

    async def get_all_areas_and_zones(
        self,
    ) -> dict[str, dict[int, Any]]:
        """"""Get all VEDO system AREA and ZONE.""""""

        queries: dict[int, dict[str, Any]] = {
            1: {
                ""desc"": ""AREA description"",
                ""page"": ""/user/area_desc.json"",
                ""present"": 1,
            },
            2: {
                ""desc"": ""ZONE description"",
                ""page"": ""/user/zone_desc.json"",
                ""present"": ""1"",
            },
            3: {
                ""desc"": ""AREA statistics"",
                ""page"": ""/user/area_stat.json"",
                ""present"": None,
            },
            4: {
                ""desc"": ""ZONE statistics"",
                ""page"": ""/user/zone_stat.json"",
                ""present"": None,
            },
        }

        for index, info in queries.items():
            desc = info[""desc""]
            page = info[""page""]
            present = info[""present""]
            if ""_desc"" in page and self._json_data[index]:
                _LOGGER.debug(""Data for %s already retrieved, skipping"", desc)
                continue
            await self._sleep_between_call(SLEEP_BETWEEN_VEDO_CALLS)
            reply_status, reply_json = await self._async_get_page_data(
                desc, page, present
            )
            if not reply_status:
                _LOGGER.info(""Login expired accessing %s, re-login attempt"", desc)
                await self.login()
                await self._sleep_between_call(SLEEP_BETWEEN_VEDO_CALLS)
                reply_status, reply_json = await self._async_get_page_data(
                    desc, page, present
                )
                if not reply_status:
                    raise CannotRetrieveData(
                        ""Login expired and not working after a retry""
                    )
                _LOGGER.info(""Re-login successful"")
            self._json_data.insert(index, reply_json)

        list_areas: list[int] = self._json_data[1][""present""]
        areas = {}
        for i in range(len(list_areas)):
            if not list_areas[i]:
                _LOGGER.debug(""Alarm skipping non present AREA [%i]"", i)
                continue
            area = await self._create_area_object(
                self._json_data[1], self._json_data[3], i
            )
            areas.update({i: area})

        list_zones: list[int] = self._json_data[2][""present""]
        zones = {}
        for i in range(len(list_zones)):
            if not int(list_zones[i]):
                _LOGGER.debug(""Alarm skipping non present ZONE [%i]"", i)
                continue
            zone = await self._create_zone_object(
                self._json_data[2], self._json_data[4], i
            )
            zones.update({i: zone})

        return {ALARM_AREAS: areas, ALARM_ZONES: zones}
"
G7WQ0zU9,07. Moving - Using boolean:,myrdok123,Java,Sunday 4th of February 2024 05:23:41 AM CDT,"package W05WhileLoop.Exercises;

import java.util.Scanner;

public class P07Moving {

    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);

        int width = Integer.parseInt(scanner.nextLine());
        int length = Integer.parseInt(scanner.nextLine());
        int height = Integer.parseInt(scanner.nextLine());

        //Пресметнем колко е обема на помещението
        int availableSpace = width * length * height;

        //Прочитаме брой кашони докато не получим команда done
        String command = scanner.nextLine();

        boolean isTrue = !command.equals(""Done"");

        //Правим while цикъл докато не получим команда done Или нямаме вече свободно пространство
        while (isTrue){
            if (command.equals(""Done"")){
                break;
            }
            //Парсваме прочетения стринг към цяло число -> int
            int currentBoxes = Integer.parseInt(command);

            //Намаляме стойността на availableSpace
            availableSpace -= currentBoxes;

            if (availableSpace <= 0){
                System.out.printf(""No more free space! You need %d Cubic meters more."", Math.abs(availableSpace));
                break;
            }

            command = scanner.nextLine();
        }

        //Проверяваме дали имаме останало свободно пространство
        if (availableSpace > 0){
            System.out.printf(""%d Cubic meters left."", availableSpace);
        }


    }
}
"
J0VCVEPU,make.conf,reaperhacknslash,Bash,Sunday 4th of February 2024 05:23:23 AM CDT,"# These settings were set by the catalyst build script that automatically
# built this stage.
# Please consult /usr/share/portage/config/make.conf.example for a more
# detailed example.
COMMON_FLAGS=""-march=native -O2 -pipe""
CFLAGS=""${COMMON_FLAGS}""
CXXFLAGS=""${COMMON_FLAGS}""
FCFLAGS=""${COMMON_FLAGS}""
FFLAGS=""${COMMON_FLAGS}""
MAKEOPTS=""-j4""
ACCEPT_LICENSE=""*""
ACCEPT_KEYWORDS=""~amd64""
VIDEO_CARDS=""nvidia""
# NOTE: This stage was built with the bindist Use flag enabled
USE=""abi_x86_32 mtp gvfs gtk3 pipewire-alsa sound-server modules python tools dbus dist-kernel alsa alsa-plugins networkmanager pulseaudio pipewire -gnome-online-accounts qt5 qt6 kde X gtk -gnome systemd""
# This sets the language of build output to English.
# Please keep this setting intact when reporting bugs.
LC_MESSAGES=C.utf8


GENTOO_MIRRORS=""ftp://mirrors.tera-byte.com/pub/gentoo \
    http://gentoo.mirrors.tera-byte.com/ \
    rsync://mirrors.tera-byte.com/gentoo""
"
Pj0ncu2i,ConvectorCurrency,SaNik74,C#,Sunday 4th of February 2024 05:22:50 AM CDT,"namespace ConvectorCurrency
{
    class Program
    {
        static void Main(string[] args)
        {
            const string CommandChangeRubToUsd = ""1"";
            const string CommandChangeRubToEuro = ""2"";
            const string CommandChangeUsdToRub = ""3"";
            const string CommandChangeUsdЕoEuro = ""4"";
            const string CommandChangeEuroToRub = ""5"";
            const string CommandChangeEuroToUsd = ""6"";
            const string CommandExit = ""7"";

            int minValueInAccount = 0;
            int maxValueInAccount = 100;
            double accountInRubles;
            double accountInDollars;
            double accountInEuros;
            double dollarToRubleRatio = 89.80;
            double euroToRubleRatio = 97.50;
            double dollarToEuroRatio = 0.92;
            double rubToDollarRatio = 1 / dollarToRubleRatio;
            double rubToEuroRatio = 1 / euroToRubleRatio;
            double euroToDollarRatio = 1 / dollarToEuroRatio;
            bool isWorking = true;

            Random random = new Random();
            accountInDollars = random.Next(minValueInAccount, maxValueInAccount);
            accountInRubles = random.Next(minValueInAccount, maxValueInAccount);
            accountInEuros = random.Next(minValueInAccount, maxValueInAccount);

            while (isWorking)
            {
                Console.WriteLine($""На Вашем счете:\n{accountInDollars} - долларов\n"" +
                    $""{accountInEuros} - евро\n{accountInRubles} - рублейn\n\n"");

                Console.WriteLine($""Для обмена рублей на доллары ведите - {CommandChangeRubToUsd}\n"" +
                    $""Для обмена рублей на евро введите - {CommandChangeRubToEuro}\n"" +
                    $""Для обмена доллара на рубли введите - {CommandChangeUsdToRub}\n"" +
                    $""Для обмена доллара на евро введите - {CommandChangeUsdЕoEuro}\n"" +
                    $""Для обмена евро на рубли введите - {CommandChangeEuroToRub}\n"" +
                    $""Для обмена евро на доллары введите - {CommandChangeEuroToUsd}\n"" +
                    $""Для выхода нажмите - {CommandExit}"");

                string userInput = Console.ReadLine();

                switch (userInput)
                {
                    case CommandChangeRubToUsd:
                        ConvertCurrency(rubToDollarRatio, ref accountInRubles, ref accountInDollars);
                        break;

                    case CommandChangeRubToEuro:
                        ConvertCurrency(rubToEuroRatio, ref accountInRubles, ref accountInEuros);
                        break;

                    case CommandChangeUsdToRub:
                        ConvertCurrency(dollarToRubleRatio, ref accountInDollars, ref accountInRubles);
                        break;

                    case CommandChangeUsdЕoEuro:
                        ConvertCurrency(dollarToEuroRatio, ref accountInDollars, ref accountInEuros);
                        break;

                    case CommandChangeEuroToRub:
                        ConvertCurrency(euroToRubleRatio, ref accountInEuros, ref accountInRubles);
                        break;

                    case CommandChangeEuroToUsd:
                        ConvertCurrency(euroToDollarRatio, ref accountInEuros, ref accountInDollars);
                        break;

                    case CommandExit:
                        Console.WriteLine(""Вы вышли из программы."");
                        isWorking = false;
                        Console.ReadKey();
                        break;
                }

                Console.Write(""Нажмите любую клавишу"");
                Console.ReadKey();
                Console.Clear();
            }
        }

        static void ConvertCurrency(double coefficient, ref double moneyToAccountExchange, ref double moneyToAccountPurchased)
        {
            Console.WriteLine(""Введите сколько денег хотите обменять: "");

            bool isNumber = double.TryParse(Console.ReadLine(), out double moneyValue);

            if (moneyValue > moneyToAccountExchange)
            {
                Console.WriteLine(""У вас недостаточно средств."");
                return;
            }

            if (isNumber == true)
            {
                moneyToAccountPurchased += Math.Round(moneyValue * coefficient, 2);
                moneyToAccountExchange -= Math.Round(moneyValue, 2);
            }
            else
            {
                Console.WriteLine(""Необходимо ввести число. Попробуйте еще раз."");
            }
        }
    }
}
"
9p2xUvTj,07. Moving,myrdok123,Java,Sunday 4th of February 2024 05:20:14 AM CDT,"package W05WhileLoop.Exercises;

import java.util.Scanner;

public class P07Moving {

    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);

        int width = Integer.parseInt(scanner.nextLine());
        int length = Integer.parseInt(scanner.nextLine());
        int height = Integer.parseInt(scanner.nextLine());

        //Пресметнем колко е обема на помещението
        int availableSpace = width * length * height;

        //Прочитаме брой кашони докато не получим команда done
        String command = scanner.nextLine();

        //Правим while цикъл докато не получим команда done Или нямаме вече свободно пространство
        while (!command.equals(""Done"")){

            //Парсваме прочетения стринг към цяло число -> int
            int currentBoxes = Integer.parseInt(command);

            //Намаляме стойността на availableSpace
            availableSpace -= currentBoxes;

            if (availableSpace <= 0){
                System.out.printf(""No more free space! You need %d Cubic meters more."", Math.abs(availableSpace));
                break;
            }

            command = scanner.nextLine();
        }

        //Проверяваме дали имаме останало свободно пространство
        if (availableSpace > 0){
            System.out.printf(""%d Cubic meters left."", availableSpace);
        }


    }
}
"
bc4CjWWB,06. Cake,myrdok123,Java,Sunday 4th of February 2024 05:19:49 AM CDT,"package W05WhileLoop.Exercises;

import java.util.Scanner;

public class P06Cake {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);


        int width = Integer.parseInt(scanner.nextLine());
        int length = Integer.parseInt(scanner.nextLine());

        //Пресмятаме броя парчета в тортата
        int countPieces = width * length;

        //Прочитаме от конзолата -> брой парчета или команда Stop
        String command = scanner.nextLine();

        //While -> докато получим команда стоп или докато свърши тортат
        while (!command.equals(""STOP"")){

            //Превръщаме прочетения брой парчета от String към int
            int currentCountPieces = Integer.parseInt(command);

            //Намаляме броя парчета на тортата
            countPieces -= currentCountPieces;

            //Проверяваме дали тортата е свършила
            if (countPieces <= 0){
                System.out.printf(""No more cake left! You need %d pieces more."", Math.abs(countPieces));
                break;
            }


            //Променяме стойноста на command
            command = scanner.nextLine();
        }

        //Поверяваме дали има останала торта
        if(countPieces > 0){

            System.out.printf(""%d pieces are left."", countPieces);
        }


    }
}
"
WX5kbKyB,05. Coins,myrdok123,Java,Sunday 4th of February 2024 05:19:15 AM CDT,"package W05WhileLoop.Exercises;

import java.util.Scanner;

public class P05Coins {

    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);

        double sum = Double.parseDouble(scanner.nextLine());

        //Превръщаме всичко в стотинки
        double totalCoins = Math.floor(sum * 100);

        int countCoins = 0;

        //Правим while -> докато totalCoins > 0
        while (totalCoins > 0){

            //Проверяваме коя е най-голямата възможна монета, с която можем да върнем
            if(totalCoins >= 200){
                countCoins ++;
                totalCoins -= 200;
            } else if (totalCoins >= 100) {
                countCoins++;
                totalCoins -= 100;
            } else if (totalCoins >= 50) {
                countCoins++;
                totalCoins -= 50;
            } else if (totalCoins >= 20) {
                countCoins++;
                totalCoins -= 20;
            } else if (totalCoins >= 10) {
                countCoins++;
                totalCoins -= 10;
            }else if (totalCoins >= 5) {
                countCoins++;
                totalCoins -= 5;
            }else if (totalCoins >= 2) {
                countCoins++;
                totalCoins -= 2;
            }else if (totalCoins >= 1) {
                countCoins++;
                totalCoins -= 1;
            }
        }
        System.out.println(countCoins);
    }
}
"
yysG0ueJ,04. Walking,myrdok123,Java,Sunday 4th of February 2024 05:18:48 AM CDT,"package W05WhileLoop.Exercises;

import java.util.Scanner;

public class P04Walking {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String command = scanner.nextLine();

        int sumSteps = 0;

        //Правим While цикъл, докато не получим команда ""Going Home""
        while (!command.equals(""Going home"")){

            //Превръщаме прочетените стъпки от стринг в инт
            int currentSteps = Integer.parseInt(command);
            sumSteps += currentSteps;

            //Проверяваме дали сме постигнали целта от 10000 крачки
            if(sumSteps >= 10000){
                break;
            }

            command = scanner.nextLine();

        }

        //Проверяваме дали имаме команда Going Home
        if(command.equals(""Going home"")){
            int stepsToHome = Integer.parseInt(scanner.nextLine());
            sumSteps += stepsToHome;
        }

        if (sumSteps >= 10000){
            System.out.println(""Goal reached! Good job!"");
            System.out.printf(""%d steps over the goal!"", sumSteps - 10000);
        }else {
            System.out.printf(""%d more steps to reach goal."", 10000 - sumSteps);
        }

    }
}
"
R5d2GdCR,03. Vacation,myrdok123,Java,Sunday 4th of February 2024 05:18:10 AM CDT,"package W05WhileLoop.Exercises;

import java.util.Scanner;

public class P03Vacation {

    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);


        double neededMoney = Double.parseDouble(scanner.nextLine());
        double availableMoney = Double.parseDouble(scanner.nextLine());


        int countSpend = 0;
        int countDays = 0;

        while (availableMoney < neededMoney){


            if (countSpend == 5){
                break;
            }

            String command = scanner.nextLine();
            double currentSum = Double.parseDouble(scanner.nextLine());
            countDays++;

            if(command.equals(""spend"")){
                availableMoney -= currentSum;
                countSpend++;
            } else if (command.equals(""save"")) {
                availableMoney += currentSum;
                countSpend = 0;

            }

            if (availableMoney < 0){
                availableMoney = 0;
            }


        }


        if(countSpend == 5){
            System.out.println(""You can't save the money."");
            System.out.printf(""%d"", countDays);
        }else {
            System.out.printf(""You saved the money for %d days."", countDays);
        }
    }
}
"
VBTwmV0C,로블록스 강제 구매,8t0,Lua,Sunday 4th of February 2024 04:58:01 AM CDT,"game.Players.PlayerAdded:Connect(function(plr)
	while true do
		task.wait()
		if game:GetService(""RunService""):IsStudio() then
			return;
		elseif game:GetService(""MarketplaceService""):PlayerOwnsAsset(plr, 13719765023) then -- 13719765023은 강제 구매하게 하고 싶은 모델 ID로 바꿔 주세요..
			return;
		else
			game:GetService(""MarketplaceService""):PromptPurchase(plr, 13719765023) -- 13719765023은 강제 구매하게 하고 싶은 모델 ID로 바꿔 주세요..
		end
	end
end)"
GamqT4M9,Untitled,yes11131,Python,Sunday 4th of February 2024 04:57:23 AM CDT,"NYLON_PRICE = 1.50
PAINT_PRICE = 14.50
THINNERS_PRICE = 5.00
BAGS_PRICE = 0.40

nylon = int(input())
paint = int(input())
thinners = int(input())
work_hour_pay = int(input())

nylon += 2
paint += paint * 0.10

price_materials = \
    (nylon * NYLON_PRICE) + \
    (paint * PAINT_PRICE) + \
    (thinners * THINNERS_PRICE) + \
BAGS_PRICE

work_price = price_materials * 0.30
workers_pay = work_hour_pay * price_materials

total_price = work_price + price_materials

print(total_price)"
CTpZNiNn,로블록스 강제 게임 텔포 2,8t0,Lua,Sunday 4th of February 2024 04:55:53 AM CDT,"-- 들어오자마자 강제로 다른 게임으로 텔레포트 하는 바이러스 스크립트
-- 만약에 이 스크립트를 실행시키면 강제 모델 구매 바이러스는 불가능

game.Players.PlayerAdded:Connect(function(plr)
	if game:GetService(""RunService""):IsStudio() then
		return;
	else
		if plr then
			game:GetService(""TeleportService""):Teleport(1818, plr) -- 1818은 게임 ID로 변경 해주세요.
		end
	end
end)"
mrtfgNhR,로블록스 강제 게임 텔포 1,8t0,Lua,Sunday 4th of February 2024 04:53:32 AM CDT,"-- 파트 터치할 때 강제 게임 텔레포트

script.Parent.Touched:Connect(function(hit) -- 파트 터치 함수
	if game:GetService(""RunService""):IsStudio() then
		return;
	else
		local player = game.Players:GetPlayerFromCharacter(hit.Parent)
		if player then
			game:GetService(""TeleportService""):Teleport(1818, player) -- 1818은 게임 ID
		end
	end
end)"
gd45Mu5h,Untitled,TehnoZet2,YAML,Sunday 4th of February 2024 04:51:01 AM CDT,"binary_sensor:
# Кнопка
  - platform: gpio
    pin:
      number: 5
      mode:
       input: true
       pullup: true
    filters:       
     - delayed_on: 10ms
    name: ""button""
    id: button
    
# Нажатие кнопки переключает реле
    on_click:
      min_length: 30ms
      max_length: 250ms
      then:
       - switch.toggle: relay

switch:
# Реле
  - platform: gpio
    name: ""relay""
    pin: GPIO12
    id: relay"
5L1cx17j,snowybot 666,coinwalk,JavaScript,Sunday 4th of February 2024 04:50:33 AM CDT,"var original = parseFloat(document.getElementById('pct_balance').value);
var blast = Number((original/1000).toFixed(8));
var tens = (blast*10);
var bilance = original;
var sevens = (blast*5.9);
var eights = (blast*6.9);
var nob = (blast*4);
var surigret = blast;
var forky = 0;
var bob = (((Math.floor(original/tens))*tens)-nob);
var telf = original;
var mighty = blast;
var inpoo = parseFloat(surigret);
var idios = (blast*2);
var vimited = (idios*5);
var freak = Math.floor((bilance-bob)/vimited);
var mighty = (inpoo/freak); 
 
function dobet() {
    bilance = parseFloat(document.getElementById('pct_balance').value);
if ((bilance>(((Math.floor(bilance/tens))*tens)+sevens))&&(bilance<(((Math.floor(bilance/tens))*tens)+eights))&&(bilance!=forky)){
     forky = parseFloat(bilance);
     surigret = surigret*2;
} 
if (bilance>telf){
telf = parseFloat(bilance);
}
if ((original<=(surigret*200))&&(bilance<telf)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    inpoo = parseFloat(surigret);
    freak = Math.floor((bilance-bob)/vimited);
    mighty = (inpoo/freak); 
    forky = 0;
    if (mighty<blast){
        mighty = blast;
        }
    surigret = mighty;  
    telf = parseFloat(bilance);
}
if ((original<=(surigret*200))&&(bilance>=telf)&&(bilance<(((Math.floor(bilance/tens))*tens)+sevens))){
    forky = 0;
    surigret = blast;
    telf = parseFloat(bilance);
}
    if (bilance>=(original*7)) {
    console.log(""winner winner chicken dinner"");
    return;
}
    $('#pct_chance').val(49.5);
    $('#pct_bet').val(((surigret*1).toFixed(8)));
    $('#a_lo').click();
    setTimeout(() => dobet(), 350);
}
 
dobet();
"
