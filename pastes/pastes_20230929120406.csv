id,title,username,language,date,content
9Ly2jBa6,Untitled,vladislav_larionov,RPM Spec,Friday 29th of September 2023 06:45:37 AM CDT,"%define __provides_exclude_from ^%{_datadir}/%{name}/lib/.*$
%define __requires_exclude ^(libjpeg.so.62|libtiff.so.5|libwebp.so.7|libopencv_core.so.407|libopencv_imgcodecs.so.407|libopencv_imgproc.so.407|libjpeg.so.62.*)$

Name:       ru.auroraos.OpenCVUsage

Summary:    Application template to add and use the OpenCV library
Version:    0.1
Release:    1
Group:      Qt/Qt
License:    BSD-3-Clause
URL:        https://auroraos.ru
Source0:    %{name}-%{version}.tar.bz2

Requires:   sailfishsilica-qt5 >= 0.10.9
BuildRequires:  pkgconfig(auroraapp)
BuildRequires:  pkgconfig(Qt5Core)
BuildRequires:  pkgconfig(Qt5Qml)
BuildRequires:  pkgconfig(Qt5Quick)
BuildRequires:  desktop-file-utils


%description
Application template to add and use the OpenCV library

%prep
%setup -q -n %{name}-%{version}

%build

mkdir -p $RPM_BUILD_DIR/opencv/build
mkdir -p $RPM_BUILD_DIR/opencv/installed_files

%cmake -B$RPM_BUILD_DIR/opencv/build \
    -H%{_sourcedir}/../opencv/opencv \
    -S%{_sourcedir}/../opencv/opencv \
    -DCMAKE_CXX_COMPILER=/usr/bin/g++ \
    -DCMAKE_MAKE_PROGRAM=/usr/bin/make \
    -DBUILD_TESTS=OFF \
    -DBUILD_PERF_TESTS=OFF \
    -DBUILD_LIST=core,imgcodecs \
    -DWITH_EIGEN=ON \
    -DWITH_VULKAN=ON \
    -DWITH_V4L=OFF \
    -DWITH_FFMPEG=OFF \
    -DWITH_GSTREAMER=OFF \
    -DWITH_MSMF=OFF \
    -DWITH_DSHOW=OFF \
    -DWITH_AVFOUNDATION=OFF \
    -DVIDEOIO_ENABLE_PLUGINS=OFF \
    -DHIGHGUI_ENABLE_PLUGINS=OFF \
    -DWITH_PROTOBUF=OFF \
    -DBUILD_PROTOBUF=OFF \
    -DOPENCV_DNN_OPENCL=OFF \
    -DBUILD_JAVA=OFF \
    -DBUILD_FAT_JAVA_LIB=OFF \
    -DENABLE_PYLINT=OFF \
    -DENABLE_FLAKE8=OFF \
    -DBUILD_opencv_python2=OFF \
    -DBUILD_opencv_python3=OFF \
    -DWITH_CAROTENE=OFF \
    -DCMAKE_INSTALL_PREFIX:PATH=$RPM_BUILD_DIR/opencv/installed_files;

%make_build -C $RPM_BUILD_DIR/opencv/build -j install

cd $RPM_BUILD_DIR

%qmake5

%make_build

%install
rm -rf %{buildroot}

%make_install

%qmake5_install

desktop-file-install --delete-original         --dir %{buildroot}%{_datadir}/applications                %{buildroot}%{_datadir}/applications/*.desktop


%files
%defattr(-,root,root,-)
%{_bindir}
%defattr(644,root,root,-)
%{_datadir}/%{name}
%{_datadir}/applications/%{name}.desktop
%{_datadir}/icons/hicolor/*/apps/%{name}.png
"
jj5ddWnZ,Untitled,Arch_of_Triumph,C++,Friday 29th of September 2023 06:37:10 AM CDT,"// problem E
#include <bits/stdc++.h>
using namespace std;


const int N = 1e5 + 7;

int last[N], n;
vector <int> a;
bool yes;

void fill_last(vector<int> &v) {
    for (int i = 0; i < (int)v.size(); i++)
        last[v[i]] = i;
}

void check(int x) {
    vector <int> b;
    for (int i = 0; i < n; i++) {
        if (a[i] != x)
            b.push_back(a[i]);
    }
    fill_last(b);

    bool ok = 1;
    for (int i = 0; i < (int)b.size() - 1; i++) {
        if (b[i] != b[i + 1] && last[b[i]] != i) 
            ok = 0;
    }

    if (ok)
        yes = true;
}

int main() {
    cin >> n;

    a.resize(n);
    for (int i = 0; i < n; i++) 
        cin >> a[i];

    fill_last(a);
    for (int i = 0; i < n - 1; i++) {
        if (a[i] != a[i + 1] && last[a[i]] != i) { // a[i] is bad
            check(a[i]);
            check(a[i + 1]);
            break;
        }
    }
    check(a[0]);

    if (yes) 
        cout << ""Arch of Triumph"";
    else 
        cout << ""NO"";
}
"
hjJHSFrn,Untitled,Arch_of_Triumph,C++,Friday 29th of September 2023 06:36:48 AM CDT,"// prolem F
#include <bits/stdc++.h>

using namespace std;

int n, a[100010], L[100010], R[100010];

int main() {
    cin >> n;

    long long sum = 0;
    for (int i = 1; i <= n; i++) {
        cin >> a[i];
        sum += a[i];
        if (L[a[i]] == 0) { // первое вхождение числа a[i]
            L[a[i]] = i;
        }
        R[a[i]] = i; // последнее вхождение числа a[i]
    }

    for (int j = 1; j <= n; j++) {
        if ((sum + 1) % (a[j] + 1) != 0) 
            continue;
        int x = (sum + 1) / (a[j] + 1) - 1;
        if (x > 0 && x <= 100000 && L[x] != 0 && L[x] != R[a[j]]) {
            if (L[x] < R[a[j]])
                cout << L[x] << ' ' << R[a[j]];
            else 
                cout << R[a[j]] << ' ' << L[x];
            return 0;
        }
    }

    cout << -1;
}"
b9nCVLBm,Untitled,Green_hydrocarbonate,C++,Friday 29th of September 2023 06:13:32 AM CDT,"{
""type"": ""FeatureCollection"",
""crs"": { ""type"": ""name"", ""properties"": { ""name"": ""urn:ogc:def:crs:OGC:1.3:CRS84"" } },
""features"": [
{ ""type"": ""Feature"", ""properties"": { ""id"": ""ak16994521"", ""mag"": 2.3, ""time"": 1507425650893, ""felt"": null, ""tsunami"": 0 }, ""geometry"": { ""type"": ""Point"", ""coordinates"": [ -151.5129, 63.1016, 0.0 ] } },
{ ""type"": ""Feature"", ""properties"": { ""id"": ""ak16994519"", ""mag"": 1.7, ""time"": 1507425289659, ""felt"": null, ""tsunami"": 0 }, ""geometry"": { ""type"": ""Point"", ""coordinates"": [ -150.4048, 63.1224, 105.5 ] } },
{ ""type"": ""Feature"", ""properties"": { ""id"": ""ak16994517"", ""mag"": 1.6, ""time"": 1507424832518, ""felt"": null, ""tsunami"": 0 }, ""geometry"": { ""type"": ""Point"", ""coordinates"": [ -151.3597, 63.0781, 0.0 ] } },
{ ""type"": ""Feature"", ""properties"": { ""id"": ""ci38021336"", ""mag"": 1.42, ""time"": 1507423898710, ""felt"": null, ""tsunami"": 0 }, ""geometry"": { ""type"": ""Point"", ""coordinates"": [ -118.497, 34.299667, 7.64 ] } },
{ ""type"": ""Feature"", ""properties"": { ""id"": ""us2000b2nn"", ""mag"": 4.2, ""time"": 1507422626990, ""felt"": null, ""tsunami"": 0 }, ""geometry"": { ""type"": ""Point"", ""coordinates"": [ -87.6901, 12.0623, 46.41 ] } },
{ ""type"": ""Feature"", ""properties"": { ""id"": ""ak16994510"", ""mag"": 1.6, ""time"": 1507422449194, ""felt"": null, ""tsunami"": 0 }, ""geometry"": { ""type"": ""Point"", ""coordinates"": [ -151.5053, 63.0719, 0.0 ] } },
{ ""type"": ""Feature"", ""properties"": { ""id"": ""us2000b2nb"", ""mag"": 4.6, ""time"": 1507420784440, ""felt"": null, ""tsunami"": 0 }, ""geometry"": { ""type"": ""Point"", ""coordinates"": [ -178.4576, -20.2873, 614.26 ] } },
{ ""type"": ""Feature"", ""properties"": { ""id"": ""ak16994298"", ""mag"": 2.4, ""time"": 1507419370097, ""felt"": null, ""tsunami"": 0 }, ""geometry"": { ""type"": ""Point"", ""coordinates"": [ -148.789, 63.1725, 7.5 ] } }
]
}"
TppQEFUt,Display vendor registration date on vendor-list table,wclovers,PHP,Friday 29th of September 2023 06:10:58 AM CDT,"add_filter( 'wcfm_vendors_additonal_data_hidden', '__return_false' );

add_filter( 'wcfm_vendors_additional_info_column_label', function( $label ) {
    return __( 'Registraton Date', 'wc-frontend-manager' );
} );

add_filter( 'wcfm_vendors_additonal_data', function( $data, $vendor_id ) {
    $data_value = get_user_meta( $vendor_id, 'wcfm_register_on', true );
    if ( $data_value ) {
        $registration_date = date( wc_date_format(), $data_value );
        if ($registration_date) {
            return $registration_date;
        }
    }
    return $data;
}, 10, 2 );"
8F0ya9V9,HW 2_9_2,rukvir,C#,Friday 29th of September 2023 06:10:09 AM CDT,"using System;

namespace HomeWork
{
    class Program
    {
        static void Main(string[] args)
        {
            int numberN = 0;
            int counter = 0;
            int startRangeN = 1;
            int endRangeN = 28;
            int startRangeNumN = 100;
            int endRangeNumN = 1000;

           Random randomN = new Random();
           numberN = randomN.Next(startRangeN, endRangeN);

            Console.WriteLine($""Узнаем кол-во трехзначных натуральных чисел, "" +
                $""которые кратны числу N = {numberN}."");
            for (int i = startRangeNumN; i <= endRangeNumN; i += numberN)
            {
                if (i >= startRangeNumN)
                {
                    counter++;
                }
            }
            Console.WriteLine($""Кол-во чисел кратных числу N = {counter}."");
        }
    }
}"
LFjzwRE2,data710,TestGuy1,JSON,Friday 29th of September 2023 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '0ed645a43a4dc530af506c270ffa951afcbed06eb754012f3f0da64689eb45aeb7c4d0838e9eeb48d31f1c7635880d7f7b910ebf064c5694c5f8ad5d033e79b45478d021ab810dcd8bf396d82917caf550c525a862215c2cf7c56060c205aa29defa181137c68a044c46dd8b4b16c3a29efb28f19693febda684881eaed159f1',
  otherdata: [
    'd9bc8e71b42f731741076284a26ee6ed',
    'b948b4ae2822fb7779818114ebda4ed9',
    'a07f3dfef541520174f34022d9ef31b6',
    '46afd521829f1f3d4627b6e1c411bda0',
    '1666d1e08a529eccab321b4ce56490c0',
    '032b4f2dfa63d891b5d61bf9acbb4a70',
    '83d7327d7e6eb150c10c69ae4eb12d5b',
    '308d917a3f6f0e6ac24160cb8d7cc863'
  ]
}"
AUYvUVkT,10. Wizard View,horozov86,Python,Friday 29th of September 2023 05:58:56 AM CDT,"CREATE VIEW view_wizard_deposits_with_expiration_date_before_1983_08_17
AS
SELECT
    CONCAT(first_name, ' ', last_name) AS wizard_name,
    deposit_start_date AS start_date,
    deposit_expiration_date AS expiration_date,
    deposit_amount AS amount
FROM
    wizard_deposits
WHERE
    deposit_expiration_date <= '1983-08-17'
GROUP BY
    wizard_name,
    deposit_start_date,
    deposit_expiration_date,
    deposit_amount
ORDER BY
    deposit_expiration_date;"
4bzxfNgf,Turtle Lumberjack,Fusion1227,Lua,Friday 29th of September 2023 05:58:17 AM CDT,"----| config |----------------------------------------------------------------------


local checkInterval = 30 -- how long (in seconds) to wait between runs
local runCost = 32 -- how much fuel is required to make the turtle do everything one time
local slotEnum = {fuel = 1, saplings = 2}
local treesPerRun = 4
local treeSpacing = 5


----| functions |----------------------------------------------------------------------


function getSaplings()
	turtle.select(slotEnum.saplings)

	-- get saplings from chest if the turtle needs more
	if turtle.getItemCount(slotEnum.saplings) < treesPerRun then
		local success = turtle.suckUp()
		if not success then return false end
	end

	-- verify the turtle has enough saplings for a run
	if turtle.getItemCount(slotEnum.saplings) < treesPerRun then return false end
	return true
end


function goLeft()
	turtle.turnLeft()
	local distance = (treesPerRun - 1) * treeSpacing
	for i = 1, distance do
		tryGoForward()
	end
	turtle.turnRight()
end


function goRight()
	turtle.turnRight()
	for i = 1, treeSpacing do
		tryGoForward()
	end
	turtle.turnLeft()
end


function refuel(initFuelLevel)
	-- return if the turtle already has enough fuel
	local fuelLevel = turtle.getFuelLevel()
	if fuelLevel >= runCost then return true end

	-- turtle does not have enough fuel; verify that the turtle has fuel to use
	turtle.select(slotEnum.fuel)
	if turtle.getItemCount(slotEnum.fuel) < runCost then
		local success = turtle.suckDown()
		if not success then return false end
	end

	-- keep refuelling until the turtle has enough
	while fuelLevel < runCost do
		local success = turtle.refuel(1)
		if not success then break end
		fuelLevel = turtle.getFuelLevel()
	end

	-- determine if the turtle refueled sufficiently
	local hasEnoughFuel = fuelLevel >= runCost
	return hasEnoughFuel
end


function run()
	turtle.select(slotEnum.saplings)

	-- move forward
	turtle.forward()

	-- go to each tree space
	for treeNum = 1, treesPerRun do
		if turtle.detect() then -- something is in this space
			if turtle.compare() == false then -- the thing isn't a sapling; presumably it's wood from a grown tree, so chop it
				turtle.dig()
			end
		else -- space is empty, so place a sapling
			turtle.place()
		end

		if treeNum < 4 then
			goRight()
		else
			goLeft() -- goes back to the first tree
		end
	end

	-- move backward into starting position
	turtle.back()
end


function tryGoForward()
	while not turtle.forward() do
		if turtle.detect() then
			turtle.dig()
		elseif turtle.attack() then
		else sleep( 0.5 )
		end
	end
end


----| main |----------------------------------------------------------------------


while true do
	-- make sure the turtle has enough fuel for a run
	local hasEnoughFuel = refuel()
	if not hasEnoughFuel then 
		print(""Not enough fuel! Stopping"") 
		return
	end

	-- do the run
	getSaplings()
	run()

	-- wait for the next cycle
	sleep(checkInterval)
end"
7JP9vcKq,mpv_get_mouse_coord_v02,constantin-net,Lua,Friday 29th of September 2023 05:05:56 AM CDT,"capture = {}
local gp
if mp.get_property == nil then
    gp = mp.property_get
else
    gp = mp.get_property
end
function capture.handler()
    local c = capture
    local osd_w, osd_h = mp.get_osd_size()
    local x, y = mp.get_mouse_pos()
    local rw = mp.get_property(""width"")
    local rh = mp.get_property(""height"")
    local ml = mp.get_property(""osd-dimensions/ml"")
    local mt = mp.get_property(""osd-dimensions/mt"")
    x = ( x - ml ) * rw / ( osd_w - 2 * ml )
    y = ( y - mt ) * rh / ( osd_h - 2 * mt )
    if c.trig then
        mp.commandv(""show-text"", string.format(""coord 2 x=%d ; y=%d"" , x, y))
        local f = assert(io.open(""/tmp/webm_crop2"", ""w""))
        f:write(string.format(""%d:%d"", x, y))
        f:close()
        c.trig = nil
    else
        mp.commandv(""show-text"", string.format(""coord 1 x=%d ; y=%d"" , x, y))
        local f = assert(io.open(""/tmp/webm_crop1"", ""w""))
        f:write(string.format(""%d:%d"", x, y))
        f:close()
        c.trig = 1
    end
end
mp.add_forced_key_binding(""F9"", capture.handler)
if bindings_enabled then toggle_bindings(true, true) end
"
h9FVY4iN,Untitled,onzulin,Kotlin,Friday 29th of September 2023 05:04:41 AM CDT,"private fun setSizeBoard() {
        //configurar el tamaño del tablero
        //metodo deprecado
        val displayMetrics = windowManager.defaultDisplay
        val size = Point()
        //método deprecado
        display.getSize(size)
        val width = size.x

        val width_dp = (width / resources.displayMetrics.density)

        var lateralMarginDP = 0
        val width_cell = (width_dp - lateralMarginDP)/8
        val height_cell = width_cell

        //val screenWidthPx = displayMetrics.widthPixels
        /*val cellsPerRow = 8
        val cellWidthDp = screenWidthPx / cellsPerRow / displayMetrics.density
        val cellHeightDp = cellWidthDp // Mismo tamaño para alto y ancho*/

        var nombre : String = """"
        var iv: ImageView
        for (i in 0..7) {
           when (i) {
               0 -> nombre = ""A""
               1 -> nombre = ""B""
               2 -> nombre = ""C""
               3 -> nombre = ""D""
               4 -> nombre = ""E""
               5 -> nombre = ""F""
               6 -> nombre = ""G""
               7 -> nombre = ""H""
           }

            for (j in 1..8) {
                iv = findViewById(resources.getIdentifier(""$nombre$j"",""id"",packageName))
                //altura y anchura de la pantalla / 8 casillas del tablero
                iv.layoutParams.height = width_cell.toInt()
                iv.layoutParams.width = height_cell.toInt()
            }
        }
    }"
sNsK9wck,mpv_mp4cut_v02,constantin-net,Bash,Friday 29th of September 2023 05:00:12 AM CDT,"#!/bin/bash
 
height=""""
length=""""
start_time=""""
aparam=""""

if [[ -z ""$1"" ]]; then
    printf ""usage: video [audio [output [height]]]\n""
    exit
fi

#audio
if [[ -n ""$2"" ]]; then
    if [[  ""$2"" == ""no"" ]]; then
        aparam=""-an""
    else
        internal_alang=$(echo ""$2"" | sed s/[^0-9]//g)
        let ""selected_alang=$internal_alang-1""
        aparam=""-map 0:v:0 -map 0:a:$selected_alang -acodec copy""
    fi
else
    aparam=""-acodec copy""
fi

#output
if [[ -n ""$3"" ]]; then
    output_path=""$3""
else
    output_path=""$HOME"";
fi

#height
if [[ -n ""$4"" ]]; then
    height=""-vf scale=trunc(oh*a/2)*2:$4""
else
    height=""""
fi

if [[ -n `ls /tmp/webm_start` ]]; then
    start_time_var=`cat /tmp/webm_start`
    start_time=""-ss $start_time_var""
else
    start_time=""-ss 0"";
fi

if [[ -n `ls /tmp/webm_end` ]]; then
    length_var=$(echo ""`cat /tmp/webm_end` - $start_time_var"" | bc)
    length=""-t $length_var""
else
    length=""""
fi

ffmpeg $start_time $length -i ""$1"" -vcodec copy $aparam -f mp4 $height -sn -cpu-used 2 -threads 2 $output_path/""$1 s $start_time_var l $length_var"".mp4
sleep 1
exit
"
JHn80fSU,for hellraizer cause i did it manual 100fold,coinwalk,JavaScript,Friday 29th of September 2023 04:46:10 AM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/8000).toFixed(8));
var blert = nudle;
var taget = (smmly*2000);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
var sinch = smmly;
 
 
 
function get(){
console.clear();
nemo = document.getElementById('pct_balance').value;
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+(bpop+nudle)))&&(nemo!=circuit)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if (((nemo-blert)<=(sysch-(bogs*7)))&&((nemo-blert)<(((Math.floor((nemo-blert)/bogs))*bogs)+bpop))) {
    blert = nudle;
    circuit = 0;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=sinch)&&(blert<(bogs*7))){
    sinch = parseFloat(nemo);
}
if ((blert>=(bogs*7))&&(nemo>=sinch)&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) {
    blert = nudle;
    circuit = 0;
    sinch = parseFloat(nemo);
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
distj = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(distj);
$('#a_lo').click();
var dog = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1);
}
get();"
xSdeEPAp,Untitled,tuomasvaltanen,Python,Friday 29th of September 2023 04:18:19 AM CDT,"# lecture 3, 29.9.2023, Conditional statements
print(""Welcome!"")

# NEW FILE

age = 19

# conditional statement -> is age under 20?
# if it is -> run the print-code
# if not, skip all the code inside the if-statement
if age < 20:
    print(""You are less than 20 years old."")
    print(""This is also printed, if age is less than 20"")
    print(""There's no limit on how much code is inside a conditional statement."")

print(""This is printed, no matter the case (not inside the if-statement)"")

# NEW FILE

# ask user for the age
age = input(""How old are you?\n"")
age = int(age)

# if age is less than 20 -> print text
# else (in other case) -> print something else
# else is basically the opposite of if age < 20 at this point
# => 20 years old or more
if age < 20:
    print(""You're under 20 years old"")
else:
    print(""You're something else (basically 20 years old or more)"")

# NEW FILE

# ask user for the age
age = input(""How old are you?\n"")
age = int(age)

# if age is less than 20 -> print text
# else (in other case) -> print something else
# else is basically the opposite of if age < 20 at this point
# => 20 years old or more
if age < 20:
    print(""You're under 20 years old"")
elif age < 30:
    print(""You're under 30 years old"")
elif age < 40:
    print(""You're under 40 years old"")
else:
    print(""Your age is something else."")

print(""Thank you for using the application!"")

# NEW FILE

# ask user for the age and month
age = input(""How old are you?\n"")
age = int(age)

month = input(""Provide month (number):\n"")
month = int(month)

# if age is less than 20 -> print text
# else (in other case) -> print something else
# else is basically the opposite of if age < 20 at this point
# => 20 years old or more
if age < 20:
    print(""You're under 20 years old"")
elif age < 30:
    print(""You're under 30 years old"")
elif age < 40:
    print(""You're under 40 years old"")
else:
    print(""Your age is something else."")

# different if-statement, always checked separately
# of the if-statement above
if month == 7:
    print(""Sorry, we're on vacation."")
    print(""Shop open again in August."")


print(""Thank you for using the application!"")

# NEW FILE

# ask user the price in float format
price = input(""Give the price:\n"")
price = float(price)

age = input(""How old are you?\n"")
age = int(age)

# modify price based on age
if age < 18:
    # if user under 18 -> discount to price 10%
    price = price * 0.9
else:
    # if not under 18 -> no discount, add postage
    price = price + 4.95

print(f""Total sum: {price} €"")

# NEW FILE

# ask user for the age
age = input(""How old are you?\n"")
age = int(age)

if age < 30:
    print(""Less than 30 years old."")

# if possible, use this format most of the time
# less than equal to
# no need to do something age < 30 or age == 30: etc.
if age <= 30:
    print(""Less than or equal to 30 years old."")

if age > 30:
    print(""More than 30 years old."")

# this is rarely need, usually we want to compare
# to ranges instead of actual number values
# sometimes needed, for example if product_id == 0
# => a missing product in a webshop
if age == 30:
    print(""You're exactly 30 years old"")

# this is the opposite of == .... not EXACTLY 30 years old
if age != 30:
    print(""You're not exactly 30 years old"")

# NEW FILE

# ask one number from user
# remember to always convert your input into int/float
# comparing to text value creates strange bugs
number1 = input(""Give a number:\n"")
number1 = int(number1)

number2 = 234

# if one of these numbers is still in text-format
# (no int/float used), this can be very buggy
if number1 > number2:
    print(""The first number is bigger!"")
else:
    print(""The second number is bigger!"")

# NEW FILE

# ask user for a sales code
sales_code = input(""Give your potential sales code:\n"")

# this is our current sales code accepted for a discount
# this season (a web shop for example)
current_code = ""WINTER23""

# let's see if the user's sales code is valid or not
# usually text is compared only with == or !=
# banana < firetruck wouldn't make any sense...
if sales_code == current_code:
    print(""Discount to price, - 20%!"")
else:
    print(""Normal price."")

# NEW FILE

# ask for user input
drink = input(""What would like to drink?\n"")

# if-elif -> react to different user responses
# else -> drink not founc
if drink == ""milk"":
    print(""Price of milk: 1€"")
elif drink == ""coffee"":
    print(""One pack of coffee: 6.5€"")
elif drink == ""water"":
    print(""Free, use the tap water."")
else:
    print(""Product not found."")

# NEW FILE

# let's make a simple two-path application
# ask user if they are student or not

choice = input(""Are you a student or not? (s/o)\n"")

# if student
if choice == 's':
    print(""This code only considers students"")
    print(""e.g. calculate some kind of special price etc."")
elif choice == 'o':
    # if other user
    print(""Calculate price for other customers"")
else:
    print(""Incorrect selection. Please restart the program."")

# NEW FILE

# ask user for a number
number = input(""Give a number:\n"")
number = int(number)

# when we divide by two, if remainder is exactly == 0
if number % 2 == 0:
    print(""Even number!"")
else:
    print(""Odd number!"")

# NEW FILE

number = input(""Give a number:\n"")
number = int(number)

# is number either 0, or 0-30
if number >= 0 and number < 30:
    print(""Number is between 0 - 30"")

# is number less than 0, or more than 30
if number < 0 or number >= 30:
    print(""Number is less than 0, or 30 or over."")

# NEW FILE

number = input(""Give a number:\n"")
number = int(number)

# a preferred shorthand for 0 - 30
# compare to mathematics
if 0 <= number < 30:
    print(""Number is between 0 - 30"")

# is number less than 0, or more than 30
if number < 0 or number >= 30:
    print(""Number is less than 0, or 30 or over."")

# NEW FILE
year = int(input(""Give a year (2000-2012):\n""))

# easy to compare a bunch of ranged values
# always double-check all the comparisons
# and try your code with test values
# ESPECIALLY on the boundary values
# example: 2000, 2004, 2008, 2012
if 2000 <= year < 2004:
    print(""2000-2004"")
elif 2004 <= year < 2008:
    print(""2004-2008"")
elif 2008 <= year <= 2012:
    print(""2008-2012"")
else:
    print(""Incorrect year"")

# NEW FILE

# some variables
# you could ask these from user as well

age = 20
city = ""Helsinki""
student = True

# also possible to combine many variables if needed
# typically ""less is more"" is the way to go
if age >= 18 and city == ""Rovaniemi"" and student == True:
    print(""An adult student from Rovaniemi"")
else:
    print(""Something else."")

# NEW FILE

age = 20
city = ""Helsinki""

# first filter out users that are 18 or more
if age >= 18:
    # this part of code only considers adult users
    print(""Adult!"")

    if city == ""Rovaniemi"":
        print(""Adult health care in address Test Street 12."")

    if city == ""Helsinki"":
        print(""Adult health care in address Experiment Plaza 35."")
        print(""Easiest to arrive by tram or bus."")

else:
    # under 18 users get this response instead
    # all of the if-statements above, will be ignored
    print(""For persons under 18 years old, consult your school health care."")

# NEW FILE

# ask user for price
price = input(""Price in EUR?\n"")
price = float(price)

# give starting value to discount to prevent variable scope errors
discount = 0

# if price is over 300€ -> discount of 50€
if price > 300:
    discount = 50
else:
    # if price 300€ or less -> +10€ postage added
    price = price + 10

# calculate final price including everything
total = price - discount

print(f""Total sum: {total}€"")

# NEW FILE

# variables, could be asked from user

# humidity 0-100%
humidity = 92
temperature = -5
raining = False

if humidity > 80:
    raining = True

# subzero temperatures, not actually rain anymore
if temperature < 0:
    raining = False

# THIS PART COULD POTENTIALLY HAVE HUNDREDS OF LINES OF CODE
# SWITCHING THE RAINING BOOLEAN IN DIFFERENT POSITIONS

# final decision
if raining:
    print(""It's raining outside!"")
else:
    print(""It's not raining at the moment."")

# NEW FILE

# ask the dtails from user
status = input(""Student or adult? (s/a)\n"")
price = input(""Original ticket price?:\n"")
price = float(price)

# s == student
# a == adult
if status == 's':
    # student get 50% discount
    price = price * 0.5
elif status == 'a':
    # only add service fee
    # if price is less than 100€
    if price < 100:
        price = price + 2.5

print(f""Final price: {price} €"")"
pYrJ8FxZ,Untitled,pasholnahuy,JSON,Friday 29th of September 2023 04:13:11 AM CDT,"#include <algorithm>
#include <chrono>
#include <cmath>
#include <iostream>
#include <random>
#include <vector>
#include <unordered_set>

using namespace std;

int s;

void check(unordered_set<int>& candidates, unordered_set<int>& compsub, unordered_set<int>& not_c, vector<vector<int>>& graph) {
    if (compsub.size() >= s){
        cout << ""YES"";
        exit(0);
    }
    bool cont = false;
    for (auto el: not_c){
        bool flag = false;
        for (auto c: candidates){
            if (!graph[c][el]){
                flag = true;
                break;
            }
        }
        if (!flag){
            cont = true;
            break;
        }
    }
    while (!candidates.empty() && !cont){
        auto v = *candidates.begin();
        compsub.insert(v);
        unordered_set<int> new_candidates;
        unordered_set<int> new_not_c;
        for (auto el: candidates){
            if (!graph[el][v] && v != el){
                new_candidates.insert(el);
            }
        }
        for (auto el: not_c){
            if (!graph[el][v] && v != el){
                new_not_c.insert(el);
            }
        }
        if (!new_candidates.empty()){
            check(new_candidates, compsub, new_not_c, graph);
        }
        candidates.erase(v);
        not_c.insert(v);
        compsub.erase(v);
    }

}

int main() {
    int v, k;
    cin >> v >> k;
    s = k;
    int e;
    cin >> e;
    unordered_set<int> candidates;
    unordered_set<int> compsub;
    unordered_set<int> not_c;
    vector<vector<int>> graph(v, vector<int>(v, true));
    for (int i = 0; i < v; ++i){
        candidates.insert(i);
    }
    for (int i = 0; i < e; ++i) {
        int v1, v2;
        cin >> v1 >> v2, --v1, --v2;
        graph[v1][v2] = false;
        graph[v2][v1] = false;
    }
    check(candidates, compsub, not_c, graph);
    cout << ""NO"";
    return 0;

}"
wGxzTjzg,Turtle Miner,Fusion1227,Lua,Friday 29th of September 2023 04:06:42 AM CDT,"---- Introduction
-- This is a Lua script written for the Mining Turtle, which is included in a mod ComputerCraft (www.computercraft.info) created for Minecraft (minecraft.net).
-- The script makes the turtle mine shafts in parallel lines until it runs out of fuel.
-- Version: 2.4


---- Constants
local SHAFT_LENGTH = 20 -- The length of a shaft mined
local GO_LEFT = false -- Create shafts to the left or right
local START_SHAFT = 0 -- Which shaft to begin from
local BLOCKS_BETWEEN = 2 -- How far apart shafts should be


---- Functions
local function tryGoForward()
	while not turtle.forward() do
		if turtle.detect() then
			turtle.dig()
		elseif turtle.attack() then
		else sleep( 0.5 )
		end
	end
end
local function tryGoUp()
	while not turtle.up() do
		if turtle.detectUp() then
			turtle.digUp()
		elseif turtle.attackUp() then
		else sleep( 0.5 )
		end
	end
end
local function tryGoDown()
	while not turtle.down() do
		if turtle.detectDown() then
			turtle.digDown()
		elseif turtle.attackDown() then
		else sleep( 0.5 )
		end
	end
end
local function tryDigUp()
	while turtle.detectUp() do
		turtle.digUp()
	end
end
local function unload()
	for n=1,16 do
		local nCount = turtle.getItemCount(n)
		if nCount > 0 then
			turtle.select(n)
			turtle.dropDown()
		end
	end
	turtle.select(1)
end


---- Main
local shaftsMined = START_SHAFT

while true do
	
	-- Calculate fuel needed
	local fuelNeeded = (shaftsMined * (BLOCKS_BETWEEN+1) * 2) + (SHAFT_LENGTH * 4) + (2 * 6)
	--   (getting to the shaft) + (through the shaft) + (ups and downs)
	
	-- Refuel
	print(""Refueling. Fuel needed: "", fuelNeeded)
	if turtle.getFuelLevel() < fuelNeeded then
		turtle.turnLeft()
		turtle.turnLeft()
		while turtle.getFuelLevel() < fuelNeeded do
			if not turtle.suck(1) then
				print(""Not enough fuel detected! Stopping"")
				turtle.turnRight()
				turtle.turnRight()
				return
			end
			turtle.refuel()
		end
		turtle.turnRight()
		turtle.turnRight()
	end

	-- Go to shaft
	print(""Starting next shaft: "", shaftsMined)
	if shaftsMined > 0 then
		if GO_LEFT then turtle.turnLeft()
		else turtle.turnRight() end

		for n=1,(shaftsMined*(BLOCKS_BETWEEN+1)) do
			tryGoForward()
			tryDigUp()
		end

		if GO_LEFT then turtle.turnRight()
		else turtle.turnLeft() end
	end

	-- Dig shaft
	for n=1,2 do
		
		for n=1,SHAFT_LENGTH do
			tryGoForward()
			tryDigUp()
		end

		turtle.turnLeft()
		turtle.turnLeft()

		tryGoUp()
		tryGoUp()

		for n=1,SHAFT_LENGTH do
			tryDigUp()
			tryGoForward()
		end

		turtle.turnRight()
		turtle.turnRight()
		
		if n ~= 2 then
			tryGoUp()
			tryGoUp()
		end
	end

	for n=1,6 do
		tryGoDown()
	end

	-- Go to chests
	if shaftsMined > 0 then
		if GO_LEFT then turtle.turnRight()
		else turtle.turnLeft() end
		
		for n=1,(shaftsMined*(BLOCKS_BETWEEN+1)) do
			tryGoForward()
		end
		
		if GO_LEFT then turtle.turnLeft()
		else turtle.turnRight() end
	end

	-- Finish
	print(""Finished. Unloading"")
	unload()
	shaftsMined = shaftsMined + 1

	-- Repeat
end"
vjfPEB1E,Count the number of possible triangle,jayati,C++,Friday 29th of September 2023 04:00:28 AM CDT,"//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution
{
    public:
    //Function to count the number of possible triangles.
    int findNumberOfTriangles(int arr[], int n)
    {
       
    
 
    sort(arr, arr+n);
 
    int count = 0;
 
    for (int i = n - 1; i >= 1; i--) {
        int l = 0, r = i - 1;
        while (l < r) {
            if (arr[l] + arr[r] > arr[i]) {
 
                // If it is possible with a[l], a[r]
                // and a[i] then it is also possible
                // with a[l+1]..a[r-1], a[r] and a[i]
                count += r - l;
 
                // checking for more possible solutions
                r--;
            }
            else
 
                // if not possible check for
                // higher values of arr[l]
                l++;
        }
    }
    return count;
    }
};


//{ Driver Code Starts.

int main()
{
    int T;
    cin>>T;
    while(T--)
    {
        int n;
        cin>>n;
        int arr[n];
        for(int i=0; i<n; i++)
            cin>>arr[i];
        Solution ob;
        cout<<ob.findNumberOfTriangles(arr,n) <<endl;
    }
    return 0;
}
// } Driver Code Ends"
bZnVdFk5,Transform String,jayati,C++,Friday 29th of September 2023 03:49:57 AM CDT,"//{ Driver Code Starts
#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;


// } Driver Code Ends
class Solution
{
    public:
    int transform (string A, string B)
    {
        //code here.
        int n=A.length();
        int m=B.length();
        if(n!=m)
        {
            return -1;
        }
        else
        {
            unordered_map<char,int> mp;
           
            for(int i=0;i<n;i++)
            {
                mp[A[i]]++;
            }
            for(int i=0;i<n;i++)
            {
                mp[B[i]]--;
            }
            
            for(auto u:mp)
            {
                if(u.second!=0)
                {
                    return -1;
                }
            }
            
             int i=n-1,j=m-1;
               int c=0;
               while(i>=0 && j>=0)
               {
                   if(A[i]==B[j])
                   {
                       i--;
                       j--;
                   }
                   else
                   {
                       c++;
                       i--;
                   }
               }
               return c;
            
        }
    }
};


//{ Driver Code Starts.

int main () 
{
    int t; cin >> t;
    while (t--)
    {
        string A, B; 
        cin >> A >> B;
        Solution ob;
        cout <<ob.transform (A, B) << endl;
    }
}
// } Driver Code Ends"
K21aDCA8,f32 stereo voice callback example,Kitomas,C,Friday 29th of September 2023 03:39:37 AM CDT,"unsigned currentSample=0;
void user_callback(void* userdata, void* _stream, int size, SDL_bool hasInput){
  if(userdata == NULL){ exit_early: memset(_stream,0,size); return; }

  kit_acodecPCM* pcm = userdata;
  Uint64 numSamples = pcm->numSamples;
  kit_acodecPCM_F32S* src = pcm->f32s;

  if(pcm->format != AUDIO_F32) goto exit_early;
  if(pcm->channels != 2) goto exit_early;
  if(currentSample >= numSamples) goto exit_early;

  memset(_stream,0,size);
  kit_acodecPCM_F32S* dst=_stream; int len=size/(2*4);
  for(int i=0; i<len; ++i){
    dst[i] = src[currentSample];
    dst[i].l *= 0.7;
    dst[i].r *= 0.7;
    if((++currentSample)>=numSamples){ currentSample=-1; break; }
  }
}"
D5gQmtDj,kit_sdl2_acodecWAV.c as of 2023-9-28,Kitomas,C,Friday 29th of September 2023 03:38:05 AM CDT,"#include ""../include/kit_sdl2/kit_acodec.h""
#include ""../_private/include/_kit_privmacro.h""




#define _WAVE_FORMAT_PCM 0x0001
#define _WAVE_FORMAT_IEEE_FLOAT 0x0003
#define _WAVE_FORMAT_EXTENSIBLE 0xFFFE
enum _kit_acodecWAV_ids {
  wid_RIFF = 0x46464952, //=""RIFF""
  wid_WAVE = 0x45564157, //=""WAVE""
  wid_fmt  = 0x20746D66, //=""fmt ""
  wid_fact = 0x74636166, //=""fact"" (ignored when reading; numSamples is already calculated)
  //(might need to include PEAK when writing,
   //if programs refuse to read float sample wavs without it)
  //wid_PEAK = 0x4B414550, //=""PEAK"" (ignored when reading; no info useful to me)
  wid_data = 0x61746164, //=""data""
};




#define _PEAKPOS_SIZE      (sizeof(_kit_acodecWAVPeakPos))
#define _PEAK_SIZE         (sizeof(_kit_acodecWAVSubchunk_PEAK))
#define _FMTEX_SIZE        (sizeof(_kit_acodecWAVSubchunk_fmtEx))
#define _FMT_SIZE          (sizeof(_kit_acodecWAVSubchunk_fmt))
#define _CHUNK_HEADER_SIZE (sizeof(Uint32)+sizeof(Uint32))



typedef struct _kit_acodecWAVPeakPos {
  float     value; //value of peak (-1.0 -> 1.0)
  Uint32 position; //sample frame of peak
} _kit_acodecWAVPeakPos;
typedef struct _kit_acodecWAVSubchunk_PEAK {
  Uint32                version; //version of the PEAK subchunk
  Uint32              timeStamp; //seconds since 1970-1-1
  //_kit_acodecWAVPeakPos peak[1/*(# of channels)*/]; //peak info array
} _kit_acodecWAVSubchunk_PEAK;



typedef struct _kit_acodecWAVSubchunk_fmtEx {
  Uint16        format; //1 for pcm, 3 for float (anything else is unsupported)
  Uint16      channels; //number of interleaved channels; L&R for stereo (2)
  Uint32    sampleRate; //number of samples per second, in hertz
  Uint32      byteRate; //=blockAlign*sampleRate
  Uint16    blockAlign; //=(channels*bitsPerSample)/8
  Uint16 bitsPerSample;
  //the actual (Ex)tension part
  Uint16      ext_size; //size of the extension (= 0 or 22)
  Uint16     validBits; //actual number of bits used (must be <= bitsPerSample)
  Uint32   channelMask; //speaker bitmask
  union {
    Uint16    format; //1 for pcm, 3 for float (same as the other .format)
    char  GUID_s[16];
    Uint64 GUID_n[2];
  } /*----------*/ sub; //guid, including data format code
} _kit_acodecWAVSubchunk_fmtEx;



typedef struct _kit_acodecWAVSubchunk_fmt {
  Uint16        format; //1 for pcm, 3 for float (anything else is unsupported)
  Uint16      channels; //number of interleaved channels; L&R for stereo (2)
  Uint32    sampleRate; //number of samples per second, in hertz
  Uint32      byteRate; //=blockAlign*sampleRate
  Uint16    blockAlign; //=(channels*bitsPerSample)/8
  Uint16 bitsPerSample;
} _kit_acodecWAVSubchunk_fmt;



typedef struct _kit_acodecWAVSubchunk {
  Uint32   id;
  Uint32 size;
  union {
    Uint32                      waveID; //part of wave header chunk
    _kit_acodecWAVSubchunk_fmt     fmt; //contains most relevant stream info
    _kit_acodecWAVSubchunk_fmtEx fmtEx; //fmt, where format = _WAVE_FORMAT_EXTENSIBLE
    Uint32                sampleLength; //only element of ""fact"" subchunk
    _kit_acodecWAVSubchunk_PEAK   PEAK; //contains info about amplitude peaks
    Uint8                      data[1]; //only element of ""data"" subchunk
  };
} _kit_acodecWAVSubchunk;




static inline int _kit_acodecWAVLoad_fmt(kit_acodecPCM* pcm, _kit_acodecWAVSubchunk* subchunk){
   //format
  Uint16 bitsPerSample = subchunk->fmtEx.bitsPerSample;
  _IF_SDLERR((bitsPerSample%8)!=0,;,""(bitsPerSample%%8)!=0"")
  Uint16 format=subchunk->fmtEx.format;
  switch(format){
  case _WAVE_FORMAT_PCM: _format_pcm: //format 0x0001
    if(     bitsPerSample== 8) pcm->format = AUDIO_U8 ;
    else if(bitsPerSample==16) pcm->format = AUDIO_S16;
    else if(bitsPerSample==32) pcm->format = AUDIO_S32;
    else _IS_SDLERR(;,""PCM && bitsPerSample!=<8,16,32>"")
    break;
  case _WAVE_FORMAT_IEEE_FLOAT: _format_float: //format 0x0003
    _IF_SDLERR(bitsPerSample!=32,;,""float && bitsPerSample!=32"")
    pcm->format = AUDIO_F32;
    break;
  case _WAVE_FORMAT_EXTENSIBLE: //format 0xFFFE
    _IF_SDLERR(subchunk->size<18,;,""extensible && fmt size<18"")
    _IF_SDLERR(subchunk->fmtEx.ext_size<22,;,""extension size<22"")
    format=subchunk->fmtEx.sub.format; //instead of subchunk->fmtEx.format
    if(format == _WAVE_FORMAT_PCM) goto _format_pcm;
    if(format == _WAVE_FORMAT_IEEE_FLOAT) goto _format_float;
    SDL_FALLTHROUGH; //go to default when format is not recognized
  default: _IS_SDLERR(;,""unknown format 0x%04X"",subchunk->fmtEx.format) }

   //channels
  _IF_SDLERR(!subchunk->fmtEx.channels,;,""channels=0"")
  _IF_SDLERR(subchunk->fmtEx.channels>2,;,""channels>2"")
  pcm->channels = subchunk->fmtEx.channels;

   //sampleRate
  _IF_SDLERR(subchunk->fmtEx.sampleRate<1000,;,""sampleRate<1kHz"")
  _IF_SDLERR(subchunk->fmtEx.sampleRate>384000,;,""sampleRate>384kHz"")
  pcm->sampleRate = subchunk->fmtEx.sampleRate;

   //byteRate
  Uint16 bytesPerSample = bitsPerSample/8;
  Uint32 correctByteRate = bytesPerSample*pcm->sampleRate*pcm->channels;
  _IF_SDLERR(subchunk->fmtEx.byteRate!=correctByteRate,;,""incorrect byteRate"")
  pcm->bitRate = subchunk->fmtEx.byteRate*8;

  /*!err*/ return  0;
  _error_: return -1;
}



kit_acodecPCM* kit_acodecWAVRead(const char* filePath){
  kit_acodecPCM* pcm = NULL;
  void* fileDataStart = NULL;
  SDL_bool success = SDL_FALSE;
  size_t fileSize = kit_coreFileReadBin(filePath,&fileDataStart,0);
  _IF_SDLERR(!fileSize,;,""!file"")
  _IF_SDLERR(fileSize<44,;,""fileSize<44"")
  void* fileDataEnd = fileDataStart+fileSize;


  //allocate memory for pcm struct, before setting constant values
  void* data = fileDataStart;
  _IF_GOTO_ERROR(kit_coreRealloc(&pcm,0,sizeof(kit_acodecPCM)),;)
  _IF_SDLERR(pcm==NULL,;,""!pcm"")
   //these members specifically are constants, and shouldn't be touched
  pcm->magic      = KPCM_MAGIC; //=""kPCM"" (no terminator)
  pcm->headerSize = sizeof(kit_acodecPCM);


  //verify wave header
  _kit_acodecWAVSubchunk* subchunk = data;
  _IF_SDLERR(subchunk->id!=wid_RIFF,;,""chunk ID!=\""RIFF\"""")
  _IF_SDLERR(subchunk->size!=(fileSize-8),;,""chunkSize!=(fileSize-8)"")
  _IF_SDLERR(subchunk->waveID!=wid_WAVE,;,""waveID!=\""WAVE\"""")
  data += _CHUNK_HEADER_SIZE;
  data += sizeof(Uint32);
  _IF_SDLERR(data>=fileDataEnd,;,""buffer overflow"") //just in case


  //process subchunks
  SDL_bool has_fmt  = SDL_FALSE;
  SDL_bool has_data = SDL_FALSE;
  while(data < fileDataEnd){
    subchunk = data;
    switch(subchunk->id){
    case wid_fmt:; //contains most pcm info
      _IF_GOTO_ERROR(_kit_acodecWAVLoad_fmt(pcm,subchunk),;)
      has_fmt = SDL_TRUE; break;

    case wid_data:; //contains sample data (contiguous with pcm struct itself)
      _IF_GOTO_ERROR(kit_coreRealloc(&pcm, NO_MEMSET,sizeof(kit_acodecPCM)+subchunk->size),;)
      _IF_SDLERR(pcm==NULL,;,""!pcm->data"")
      pcm->data = (void*)pcm+sizeof(kit_acodecPCM);
      kit_coreMemcpy(pcm->data, subchunk->data, subchunk->size);
      pcm->dataSize = subchunk->size;
      has_data = SDL_TRUE; break;

    default:; //other subchunks are ignored
    }
    data += _CHUNK_HEADER_SIZE;
    data += subchunk->size;
  }


  _IF_SDLERR(!has_fmt,;,""fmt subchunk not found"")
  _IF_SDLERR(!has_data,;,""data subchunk not found"")
  //calculate numSamples
  pcm->numSamples  = pcm->dataSize;
  pcm->numSamples /= SDL_AUDIO_BITSIZE(pcm->format)/8;
  pcm->numSamples /= pcm->channels;

  pcm->loopEnd = pcm->numSamples; //now, if loopCount>0, the whole thing is looped

  success = SDL_TRUE;
  _error_:
  if(fileDataStart != NULL) SDL_free(fileDataStart);
  if(pcm!=NULL && !success){
    SDL_free(pcm);
    pcm = NULL;
  }
  return pcm;
}




#define _INCREASE_FILEDATA(_amount) { \
  fileDataSize += (_amount); \
  _IF_GOTO_ERROR(kit_coreRealloc(&fileDataStart, NO_MEMSET,fileDataSize),;) \
  data = fileDataStart+offset; }
#define _INCREASE_OFFSET(_amount) { data+=(_amount); offset+=(_amount); }
int kit_acodecWAVWrite(kit_acodecPCM* pcm, const char* filePath){
  _kit_acodecWAVSubchunk_fmt fmt; //fmt subchunk (not fmtEx)
  _kit_acodecWAVSubchunk* subchunk;

  void *data = NULL,  *fileDataStart = NULL;
  size_t offset = 0,  fileDataSize = 0;

  _IF_SDLERR(pcm==NULL,;,""!pcm"")
  _IF_SDLERR(filePath==NULL,;,""!filePath"")
  _IF_SDLERR(pcm->data==NULL,;,""!pcm->data"")


  //verify some pcm struct info
   //grab stuff from pcm struct
  Uint64 dataSize      = pcm->dataSize;
  Uint16 channels      = pcm->channels;
  Uint32 sampleRate    = pcm->sampleRate;
  Uint16 bitsPerSample = SDL_AUDIO_BITSIZE(pcm->format);
  Uint16 blockAlign    = (channels*bitsPerSample)/8;
  Uint32 byteRate      = blockAlign*sampleRate;
  Uint32 numSamples    = dataSize/blockAlign;
   //then audit the retrieved values
  _IF_SDLERR(dataSize>0xffffffff,;,""pcm->dataSize>4GiB"")
  _IF_SDLERR(channels==0,;,""pcm->channels=0"")
  _IF_SDLERR(sampleRate==0,;,""pcm->sampleRate=0"")
  _IF_SDLERR(bitsPerSample==0,;,""bitsPerSample==0"")
    _IF_SDLERR(bitsPerSample%8,;,""bitsPerSample%%8)!=0"")
  _IF_SDLERR(pcm->bitRate!=(byteRate*8),;,""pcm->bitRate is incorrect"")
  _IF_SDLERR(pcm->numSamples!=numSamples,;,""pcm->numSamples is incorrect"")
  _IF_SDLERR(pcm->data!=((void*)pcm)+sizeof(kit_acodecPCM),;,""pcm->data is incorrect"")


  //fill in fmt struct
  switch(pcm->format){
  case AUDIO_U8 : SDL_FALLTHROUGH;
  case AUDIO_S16: SDL_FALLTHROUGH;
  case AUDIO_S32: fmt.format = _WAVE_FORMAT_PCM;        break;
  case AUDIO_F32: fmt.format = _WAVE_FORMAT_IEEE_FLOAT; break;
  default: _IS_SDLERR(;,""unknown pcm format 0x%04X"",pcm->format) }
  fmt.channels      = channels;
  fmt.sampleRate    = sampleRate;
  fmt.bitsPerSample = bitsPerSample;
  fmt.blockAlign    = blockAlign;
  fmt.byteRate      = byteRate;


  //wave header
  _INCREASE_FILEDATA(_CHUNK_HEADER_SIZE + sizeof(Uint32))
  subchunk = data;
  subchunk->id     = wid_RIFF; //=""RIFF""
  //subchunk->size = <file size - 8; done later>;
  subchunk->waveID = wid_WAVE; //=""WAVE""
  _INCREASE_OFFSET(_CHUNK_HEADER_SIZE + sizeof(Uint32))


  //fmt subchunk
  _INCREASE_FILEDATA(_CHUNK_HEADER_SIZE + _FMT_SIZE)
  subchunk = data;
  subchunk->id   = wid_fmt;   //=""fmt ""
  subchunk->size = _FMT_SIZE; //=16
  subchunk->fmt  = fmt;
  _INCREASE_OFFSET(_CHUNK_HEADER_SIZE + _FMT_SIZE)


  //fact subchunk
  _INCREASE_FILEDATA(_CHUNK_HEADER_SIZE + sizeof(Uint32))
  subchunk = data;
  subchunk->id           = wid_fact;
  subchunk->size         = sizeof(Uint32);
  subchunk->sampleLength = numSamples;
  _INCREASE_OFFSET(_CHUNK_HEADER_SIZE + sizeof(Uint32))


  //data subchunk
  _INCREASE_FILEDATA(_CHUNK_HEADER_SIZE + dataSize + (dataSize%2))
  subchunk = data;
  subchunk->id   = wid_data;
  subchunk->size = dataSize;
  kit_coreMemcpy(subchunk->data, pcm->data, dataSize);
  _INCREASE_OFFSET(_CHUNK_HEADER_SIZE + dataSize)
  if(dataSize%2){ //if dataSize is odd, insert a padding byte
    *(Uint8*)data = 0; //data should be pointing to the very last byte
    _INCREASE_OFFSET(sizeof(Uint8))
  }


  //correct wave header's chunk size, before writing to file
  subchunk = fileDataStart;
  subchunk->size = offset-_CHUNK_HEADER_SIZE;
  _IF_GOTO_ERROR(kit_coreFileWriteBin(filePath, fileDataStart, offset, 0),;)


  return 0;
  _error_:
  if(fileDataStart != NULL) SDL_free(fileDataStart);
  return -1;
}
"
kcM19qMR,Untitled,xidharth,JavaScript,Friday 29th of September 2023 03:37:13 AM CDT,"      'style/comma-style': ['error', 'last'],
      ""quotes"": [""error"", ""double""],
      'style/quotes': ['error', 'double', { allowTemplateLiterals: true, avoidEscape: true }],
    'style/semi': ['error', 'always'],
        ""node/prefer-global/buffer"": OFF,
        ""node/prefer-global/process"": OFF,"
5JtTKwDG,kit_sdl2_acodec.c as of 2023-9-28,Kitomas,C,Friday 29th of September 2023 03:37:08 AM CDT,"#include ""../include/kit_sdl2/kit_acodec.h""
#include ""../_private/include/_kit_privmacro.h""




#if defined(_KIT_ACODEC_DEBUG) || defined(_KIT_ALL_DEBUG)
const SDL_bool kit_acodecIsDebug=SDL_TRUE;
#else
const SDL_bool kit_acodecIsDebug=SDL_FALSE;
#endif




enum _kit_acodecMagicNums {
  mag_kPCM = 0x4D43506B, //=""kPCM"" (.kpm)
  mag_kFDM = 0x4D44466B, //=""kFDM"" (.kfd)
  mag_RIFF = 0x46464952, //=""RIFF"" (.wav)
};




kit_acodecPCM* kit_acodecLoadAudio(const char* filePath, SDL_AudioFormat format,
                                   Uint32 sampleRate, SDL_bool linearInterpolation)
{
  kit_acodecPCM* pcmIn = NULL;
  kit_acodecPCM* pcmOut = NULL;
  SDL_bool success = SDL_FALSE;
  _IF_SDLERR(filePath==NULL,;,""!filePath"")
  linearInterpolation &= 1;


  size_t fileSize = kit_coreFileSize(filePath);
  _IF_SDLERR(fileSize<4,;,""fileSize<4"")

  Uint32 magic;
  FILE* file = fopen(filePath, ""wb"");
  _IF_SDLERR(file==NULL,;,""!fopen"")
  size_t bytesRead = fread(&magic,1,sizeof(Uint32),file);
  _IF_SDLERR(bytesRead<4,fclose(file),""bytesRead<4"")
  _IF_SDLERR(fclose(file),;,""!fclose"")


  switch(magic){
  case mag_kPCM: pcmIn = kit_acodecPCMRead(filePath); break;
  case mag_kFDM: pcmIn = kit_acodecFDMRead(filePath); break;
  case mag_RIFF: pcmIn = kit_acodecWAVRead(filePath); break;
  default: _IS_SDLERR(;,""unknown format 0x%04X \""%.4s\"""",magic,(char*)&magic) }
  _IF_GOTO_ERROR(pcmIn==NULL,;)


  //convert data type only if new format > 0
  if(format > 0){
    pcmOut = kit_acodecPCMConvertFormat(pcmIn, format);
    kit_acodecPCMDestroy(&pcmIn);
    _IF_GOTO_ERROR(pcmOut==NULL,;)
  }


  //resample only if sampleRate is > 0
  if(sampleRate > 0){
    //(swap output with input only if data type was previously converted)
    if(format > 0) pcmIn = pcmOut;
    pcmOut = kit_acodecPCMResample(pcmIn, sampleRate, linearInterpolation);
    kit_acodecPCMDestroy(&pcmIn);
    _IF_GOTO_ERROR(pcmOut==NULL,;)
  }


  success = SDL_TRUE;
  _error_:
  if(!success){
    kit_acodecPCMDestroy(&pcmIn);
    kit_acodecPCMDestroy(&pcmOut);
  }
  return pcmOut;
}
"
dw9kZkuZ,kit_sdl2_acodecPCM.c as of 2023-9-28,Kitomas,C,Friday 29th of September 2023 03:36:00 AM CDT,"#include ""../include/kit_sdl2/kit_acodec.h""
#include ""../_private/include/_kit_privmacro.h""




int kit_acodecPCMDestroy(kit_acodecPCM** pcm_p){
  _IF_SDLERR(pcm_p==NULL,;,""!pcm_p"")
  kit_acodecPCM* pcm = *pcm_p;
  _IF_GOTO(pcm==NULL,_noerr_,;) //exit early if already destroyed

  SDL_free(pcm); //yep, that's it!
  *pcm_p = NULL;

  _noerr_: return  0;
  _error_: return -1;
}



kit_acodecPCM* kit_acodecPCMCreate(SDL_AudioFormat format, Uint16 channels,
                                   Uint32 sampleRate, Uint64 numSamples)
{
  kit_acodecPCM* pcm = NULL; int failed = 0;
  Uint8 bitsPerSample = SDL_AUDIO_BITSIZE(format);
  _IF_SDLERR(bitsPerSample==0,;,""bitsPerSample=0"")
  _IF_SDLERR(channels==0,;,""channels=0"")
  _IF_SDLERR(sampleRate==0,;,""sampleRate=0"")
  //(numSamples being 0 is technically allowed)


  _IF_GOTO_ERROR(kit_coreRealloc(&pcm, 0,sizeof(kit_acodecPCM)),;)
  pcm->magic        = KPCM_MAGIC;
  pcm->format       = format;
  pcm->headerSize   = sizeof(kit_acodecPCM);
  pcm->loopStart    = 0;
  pcm->loopEnd      = numSamples;
  pcm->numSamples   = numSamples;
  pcm->sampleRate   = sampleRate;
  pcm->loopCount    = 0; //play once without looping
  pcm->channels     = channels;
  pcm->bitRemainder = bitsPerSample%8;
  pcm->userflags    = 0;
  pcm->uservalue    = 0;
  pcm->userdata     = NULL;
  pcm->data         = NULL;
   //stuff that requires previous values
  pcm->bitRate  = bitsPerSample*channels*sampleRate;
  pcm->dataSize = (bitsPerSample*channels*numSamples)/8;
  if(pcm->bitRemainder) ++pcm->dataSize; //offsets integer division truncation

  failed = kit_coreRealloc(&pcm,sizeof(kit_acodecPCM),
                                sizeof(kit_acodecPCM)+pcm->dataSize);


  _error_:
  if(pcm!=NULL && failed){
    SDL_free(pcm);
    pcm = NULL;
  }
  return pcm;
}



kit_acodecPCM* kit_acodecPCMCopy(kit_acodecPCM* pcm){
  kit_acodecPCM* pcmOut = NULL;
  SDL_bool success = SDL_FALSE;
  _IF_SDLERR(pcm==NULL,;,""!pcm"")


  size_t totalSize = pcm->headerSize + pcm->dataSize;

  pcmOut = SDL_malloc(totalSize);
  _IF_SDLERR(pcmOut==NULL,;,""!pcmOut"")
  kit_coreMemcpy(pcmOut, pcm, totalSize);
  pcmOut->data = (void*)pcmOut + pcmOut->headerSize;


  success = SDL_TRUE;
  _error_:
  if(!success) kit_acodecPCMDestroy(&pcmOut);
  return pcmOut;
}




kit_acodecPCM* kit_acodecPCMRead(const char* filePath){
  kit_acodecPCM* pcm = NULL;
  SDL_bool success = SDL_FALSE;
  _IF_SDLERR(filePath==NULL,;,""!filePath"")


  _IF_GOTO_ERROR(!kit_coreFileReadBin(filePath, &pcm, 0),;)
  _IF_SDLERR(pcm->magic!=KPCM_MAGIC,;,""pcm->magic!=\""kPCM\"""")
  pcm->data = (void*)pcm + pcm->headerSize;


  success = SDL_TRUE;
  _error_:
  if(!success) kit_acodecPCMDestroy(&pcm);
  return pcm;
}



int kit_acodecPCMWrite(kit_acodecPCM* pcm, const char* filePath){
  _IF_SDLERR(filePath==NULL,;,""!filePath"")
  _IF_SDLERR(pcm==NULL,;,""!pcm"")


  //set pointers to 0 before writing
  void* userdata = pcm->userdata;
  void*     data = pcm->data;
  pcm->userdata = 0,  pcm->data = 0;


  //calculate size before writing to file
  size_t totalSize = pcm->headerSize + pcm->dataSize;
  _IF_GOTO_ERROR(kit_coreFileWriteBin(filePath, pcm, totalSize, 0),;)


  //restore pointers before returning
  pcm->userdata = userdata,  pcm->data = data;


  /*!err*/ return  0;
  _error_: return -1;
}




int kit_acodecPCMSetNumSamples(kit_acodecPCM** pcm_p, Uint64 numSamples){
  _IF_SDLERR(pcm_p==NULL,;,""!pcm_p"")
  kit_acodecPCM* pcm = *pcm_p;
  _IF_SDLERR(pcm==NULL,;,""!*pcm_p"")


  kit_acodecPCM _pcm = *pcm;
  Uint8 bitsPerSample = SDL_AUDIO_BITSIZE(_pcm.format);
  _pcm.numSamples   = numSamples;
  _pcm.dataSize     = (bitsPerSample*_pcm.channels*numSamples)/8;
  if(_pcm.bitRemainder) ++_pcm.dataSize; //offsets integer division truncation


  size_t oldSize = pcm->headerSize + pcm->dataSize;
  size_t newSize = _pcm.headerSize + _pcm.dataSize;
  _IF_GOTO_ERROR(kit_coreRealloc(&pcm, oldSize,newSize),;)


  *pcm = _pcm;
  pcm->data = (void*)pcm + pcm->headerSize;
  *pcm_p = pcm; //apply changes only if realloc succeeded

  /*!err*/ return  0;
  _error_: return -1;
}



kit_acodecPCM* kit_acodecPCMConvertStereo(kit_acodecPCM* pcm, SDL_bool toStereo){
  kit_acodecPCM* pcmOut = NULL;
  SDL_bool success = SDL_FALSE;
  _IF_SDLERR(pcm==NULL,;,""!pcm"")
  _IF_SDLERR(pcm->channels==0,;,""pcm->channels=0"")
  _IF_SDLERR(pcm->channels>2,;,""pcm->channels>2"")

  SDL_AudioFormat format = pcm->format;
  Uint64      numSamples = pcm->numSamples;
  Uint32      sampleRate = pcm->sampleRate;
  Uint16      channelsIn = pcm->channels;
  Uint16     channelsOut = 1+toStereo;
  if(channelsIn == channelsOut) return kit_acodecPCMCopy(pcm);


  pcmOut = kit_acodecPCMCreate(format, channelsOut, sampleRate, numSamples);
  _IF_GOTO_ERROR(pcmOut==NULL,;)
  kit_acodecPCMSamples in  = { .data = pcm->data    };
  kit_acodecPCMSamples out = { .data = pcmOut->data };


  if(toStereo){
    #define _TO_STEREO(_type)  out._type[i].l = out._type[i].r
    switch(format){
    case AUDIO_U8 : for(Uint64 i=0; i<numSamples; ++i){ _TO_STEREO(u_8s) = in.u_8[i]; } break;
    case AUDIO_S16: for(Uint64 i=0; i<numSamples; ++i){ _TO_STEREO(i16s) = in.i16[i]; } break;
    case AUDIO_S32: for(Uint64 i=0; i<numSamples; ++i){ _TO_STEREO(i32s) = in.i32[i]; } break;
    case AUDIO_F32: for(Uint64 i=0; i<numSamples; ++i){ _TO_STEREO(f32s) = in.f32[i]; } break;
    default: _IS_SDLERR(;,""unknown format 0x%04X"",format) }

  } else { //to mono
    #define _FROM_STEREO(_type)  (in._type[i].l + in._type[i].r) * 0.5f
    switch(format){
    case AUDIO_U8 : for(Uint64 i=0; i<numSamples; ++i){ out.u_8[i] = _FROM_STEREO(u_8s); } break;
    case AUDIO_S16: for(Uint64 i=0; i<numSamples; ++i){ out.i16[i] = _FROM_STEREO(i16s); } break;
    case AUDIO_S32: for(Uint64 i=0; i<numSamples; ++i){ out.i32[i] = _FROM_STEREO(i32s); } break;
    case AUDIO_F32: for(Uint64 i=0; i<numSamples; ++i){ out.f32[i] = _FROM_STEREO(f32s); } break;
    default: _IS_SDLERR(;,""unknown format 0x%04X"",format) }

  }


  success = SDL_TRUE;
  _error_:
  if(!success) kit_acodecPCMDestroy(&pcmOut);
  return pcmOut;
}



kit_acodecPCM* kit_acodecPCMConvertFormat(kit_acodecPCM* pcm, SDL_AudioFormat format){
  kit_acodecPCM* pcmOut = NULL;
  float* f32_buffer = NULL;
  SDL_bool success = SDL_FALSE;
  _IF_SDLERR(pcm==NULL,;,""!pcm"")
  if(pcm->format == format) return kit_acodecPCMCopy(pcm);


  Uint64 numSamples = pcm->numSamples;
  Uint32 sampleRate = pcm->sampleRate;
  Uint16 channels   = pcm->channels;
  Uint64 numSamplesRaw = numSamples*channels;
  size_t f32_buffer_size = numSamplesRaw*sizeof(float);


  //input will be converted to f32 as an intermediate format...
  f32_buffer = SDL_malloc(f32_buffer_size);
  _IF_SDLERR(f32_buffer==NULL,;,""!malloc"")

  float sample;
  Uint8*  u_8_samples;  Sint16* i16_samples;
  Sint32* i32_samples;  float*  f32_samples;
  switch(pcm->format){
  case AUDIO_U8 : u_8_samples = pcm->u_8;
  for(Uint64 i=0; i<numSamplesRaw; ++i){
    sample = (float)(u_8_samples[i]-0x80) * invi_8;
    f32_buffer[i] = (sample>=-1.0f) ? sample : -1.0f;
  } break;

  case AUDIO_S16: i16_samples = pcm->i16;
  for(Uint64 i=0; i<numSamplesRaw; ++i){
    sample = (float)i16_samples[i] * invi16;
    f32_buffer[i] = (sample>=-1.0f) ? sample : -1.0f;
  } break;

  case AUDIO_S32: i32_samples = pcm->i32;
  for(Uint64 i=0; i<numSamplesRaw; ++i){
    sample = (float)i32_samples[i] * invi32;
    f32_buffer[i] = (sample>=-1.0f) ? sample : -1.0f;
  } break;

  case AUDIO_F32: f32_samples = pcm->f32;
  for(Uint64 i=0; i<numSamplesRaw; ++i){
    sample = f32_samples[i];
    f32_buffer[i] = CLAMP(sample, -1.0f,1.0f);
  } break;

  default: _IS_SDLERR(;,""input format=0x%04X"",pcm->format) }


  //...before being converted from f32 to the output format
  pcmOut = kit_acodecPCMCreate(format, channels, sampleRate, numSamples);
  _IF_GOTO_ERROR(pcmOut==NULL,;)

  switch(format){
  case AUDIO_U8 : u_8_samples = pcmOut->u_8;
  for(Uint64 i=0; i<numSamplesRaw; ++i){
    u_8_samples[i] = f32_samples[i]*I_8_MAX + 0x80;
  } break;

  case AUDIO_S16: i16_samples = pcmOut->i16;
  for(Uint64 i=0; i<numSamplesRaw; ++i){
    i16_samples[i] = f32_samples[i]*I16_MAX;
  } break;

  case AUDIO_S32: i32_samples = pcmOut->i32;
  for(Uint64 i=0; i<numSamplesRaw; ++i){
    i32_samples[i] = f32_samples[i]*I32_MAX;
  } break;

  //lol
  case AUDIO_F32: kit_coreMemcpy(pcmOut->f32, f32_buffer, f32_buffer_size); break;

  default: _IS_SDLERR(;,""output format=0x%04X"",format) }


  success = SDL_TRUE;
  _error_:
  if(!success) kit_acodecPCMDestroy(&pcmOut);
  if(f32_buffer != NULL) SDL_free(f32_buffer);
  return pcmOut;
}



//linear interpolation
static inline int _kit_acodecPCMResampleLinear(kit_acodecPCM* pcmIn, kit_acodecPCM* pcmOut,
                                               double ratio, Uint16 channels, Uint64 numSamplesRaw)
{
  #define _SIMLERP(_v0,_v1, _t) ( (_v0) + (_t)*((_v1)-(_v0)) )
  double src_pos = 0; //source position, in sample frames
  double pos_mod; // = src_pos % 1
  Uint64 pos_int;

  switch(pcmOut->format){
  /*
  case AUDIO_U8 :; Uint8*  u_8_src = pcmIn->u_8,  *u_8_dst = pcmOut->u_8;
    Uint8 u_8_smp0, u_8_smp1;
  case AUDIO_S16:; Sint16* i16_src = pcmIn->i16,  *i16_dst = pcmOut->i16;
    Sint32 i16_smp0, i16_smp1;
  case AUDIO_S32:; Sint32* i32_src = pcmIn->i32,  *i32_dst = pcmOut->i32;
    Sint32 i32_smp0, i32_smp1;
  */
  case AUDIO_F32:; float*  f32_src = pcmIn->f32,  *f32_dst = pcmOut->f32;
    for(Uint64 s=0; s<numSamplesRaw; s+=channels){
      pos_int = src_pos;
      pos_mod = src_pos-pos_int;
      pos_int *= channels;
      for(Uint32 c=0; c<channels; ++c){
        float f32_smp0 = f32_src[pos_int + c];
        float f32_smp1 = f32_src[pos_int + c + channels];
        f32_dst[s+c] = _SIMLERP(f32_smp0,f32_smp1, pos_mod);
      }
      src_pos += ratio;
    } break;

  default: _IS_SDLERR(;,""unknown format 0x%04X"",pcmOut->format)
  }

  /*!err*/ return  0;
  _error_: return -1;
}
//nearest neighbor interpolation
static inline int _kit_acodecPCMResampleNearest(kit_acodecPCM* pcmIn, kit_acodecPCM* pcmOut,
                                                double ratio, Uint16 channels, Uint64 numSamplesRaw)
{
  double src_pos = 0; //source position, in sample frames
  Uint64 pos_int;

  switch(pcmOut->format){
  case AUDIO_U8 :; Uint8* u_8_src = pcmIn->u_8,  *u_8_dst = pcmOut->u_8;
    for(Uint64 s=0; s<numSamplesRaw; s+=channels){
      pos_int = src_pos+0.5; pos_int *= channels;
      for(Uint32 c=0; c<channels; ++c)
        u_8_dst[s + c] = u_8_src[pos_int + c];
      src_pos += ratio;
    } break;

  case AUDIO_S16:; Sint16* i16_src = pcmIn->i16,  *i16_dst = pcmOut->i16;
    for(Uint64 s=0; s<numSamplesRaw; s+=channels){
      pos_int = src_pos+0.5;  pos_int *= channels;
      for(Uint32 c=0; c<channels; ++c)
        i16_dst[s + c] = i16_src[pos_int + c];
      src_pos += ratio;
    } break;

  case AUDIO_S32:; Sint32* i32_src = pcmIn->i32,  *i32_dst = pcmOut->i32;
    for(Uint64 s=0; s<numSamplesRaw; s+=channels){
      pos_int = src_pos+0.5;  pos_int *= channels;
      for(Uint32 c=0; c<channels; ++c)
        i32_dst[s + c] = i32_src[pos_int + c];
      src_pos += ratio;
    } break;

  case AUDIO_F32:; float* f32_src = pcmIn->f32,  *f32_dst = pcmOut->f32;
    for(Uint64 s=0; s<numSamplesRaw; s+=channels){
      pos_int = src_pos+0.5;  pos_int *= channels;
      for(Uint32 c=0; c<channels; ++c)
        f32_dst[s + c] = f32_src[pos_int + c];
      src_pos += ratio;
    } break;

  default: _IS_SDLERR(;,""unknown format 0x%04X"",pcmOut->format)
  }

  /*!err*/ return  0;
  _error_: return -1;
}
kit_acodecPCM* kit_acodecPCMResample(kit_acodecPCM* pcm, Uint32 sampleRate,
                                     SDL_bool linearInterpolation)
{
  kit_acodecPCM* pcmOut = NULL;
  SDL_bool success = SDL_FALSE;
  _IF_SDLERR(pcm==NULL,;,""!pcm"")
  _IF_SDLERR(pcm->sampleRate==0,;,""pcm->sampleRate=0"")
  _IF_SDLERR(sampleRate==0,;,""sampleRate=0"")
  linearInterpolation &= 1;


  SDL_AudioFormat   format = pcm->format;
  Uint16          channels = pcm->channels;
  double             ratio = (double)pcm->sampleRate/sampleRate;
  Uint64        numSamples = pcm->numSamples*ratio;
  Uint64     numSamplesRaw = numSamples*channels;

  pcmOut = kit_acodecPCMCreate(format, channels, sampleRate, numSamples);
  _IF_GOTO_ERROR(pcmOut==NULL,;)
  pcmOut->loopStart = pcm->loopStart;
  pcmOut->loopEnd   = pcm->loopEnd;
  pcmOut->loopCount = pcm->loopCount;
  pcmOut->userflags = pcm->userflags;
  pcmOut->uservalue = pcm->uservalue;
  pcmOut->userdata  = pcm->userdata;


  if(linearInterpolation){
    _IF_GOTO_ERROR(_kit_acodecPCMResampleLinear(pcm,pcmOut, ratio,
                                                channels,numSamplesRaw),;)
  } else { //otherwise, use nearest neighbor interpolation
    _IF_GOTO_ERROR(_kit_acodecPCMResampleNearest(pcm,pcmOut, ratio,
                                                 channels,numSamplesRaw),;)
  }


  success = SDL_TRUE;
  _error_:
  if(!success) kit_acodecPCMDestroy(&pcmOut);
  return pcmOut;
}
"
ZiTDxNFv,kit_acodec.h as of 2023-9-28,Kitomas,C,Friday 29th of September 2023 03:34:51 AM CDT,"/**
 * \file kit_acodec.h
 * \brief Header file for KIT SDL2's Audio Codec module
 */
#ifndef _KIT_ACODEC_H
#define _KIT_ACODEC_H
#ifndef _KIT_SDL2_ACODEC_H
#define _KIT_SDL2_ACODEC_H
//todo: add acodecQOARead at some point


#include ""./kit_core.h"" //includes SDL2/SDL.h

#ifdef __cplusplus
extern ""C"" {
#endif




/* ++++++++++++++++++++ */
/* +kit_sdl2_acodecPCM+ */
/* ++++++++++++++++++++ */

//using the extension "".kpm"" is preferred
 //when saving kit_acodecPCM to a file
#define KPCM_MAGIC (0x4D43506B) //= ""kPCM""



/**
 * \brief Stereo Uint8 samples
 */
typedef struct kit_acodecPCM_U_8S {
  Uint8 l; ///< \brief Left audio channel
  Uint8 r; ///< \brief Right audio channel
} kit_acodecPCM_U_8S;

/**
 * \brief Stereo Sint16 samples
 */
typedef struct kit_acodecPCM_I16S {
  Sint16 l; ///< \brief Left audio channel
  Sint16 r; ///< \brief Right audio channel
} kit_acodecPCM_I16S;

/**
 * \brief Stereo Sint32 samples
 */
typedef struct kit_acodecPCM_I32S {
  Sint32 l; ///< \brief Left audio channel
  Sint32 r; ///< \brief Right audio channel
} kit_acodecPCM_I32S;

/**
 * \brief Stereo float samples
 */
typedef struct kit_acodecPCM_F32S {
  float l; ///< \brief Left audio channel
  float r; ///< \brief Right audio channel
} kit_acodecPCM_F32S;


/**
 * \brief A union of supported sample formats
 */
typedef union kit_acodecPCMSamples {
  void*  data; ///< \brief Generic pointer
  Uint8*  u_8; ///< \brief Mono Uint8 Samples
  Sint16* i16; ///< \brief Mono Sint16 Samples
  Sint32* i32; ///< \brief Mono Sint32 Samples
  float*  f32; ///< \brief Mono float Samples
  kit_acodecPCM_U_8S* u_8s; ///< \brief Stereo Uint8 samples
  kit_acodecPCM_I16S* i16s; ///< \brief Stereo Sint16 samples
  kit_acodecPCM_I32S* i32s; ///< \brief Stereo Sint32 samples
  kit_acodecPCM_F32S* f32s; ///< \brief Stereo float samples
} kit_acodecPCMSamples;


/**
 * \brief The struct that contains info about a PCM audio stream. \n
 *        When saved as a file (usually as "".kpm""), the header's size will be 72 (0x48).
 */
typedef struct kit_acodecPCM {
  Uint32           magic; ///< \brief (0x00) = 0x4D43506B = ""kPCM"" (no null terminator)
  SDL_AudioFormat format; ///< \brief (0x04) The data format of the stream
  Uint16      headerSize; ///< \brief (0x06) = sizeof(kit_acodecPCM)
  Uint64        dataSize; ///< \brief (0x08) The size of the PCM buffer, in bytes
  Uint64       loopStart; ///< \brief (0x10) Which sample to loop back to
  Uint64         loopEnd; ///< \brief (0x18) Which sample to restart the loop on
  Uint64      numSamples; ///< \brief (0x20) The number of sample frames in the stream
  Uint32      sampleRate; ///< \brief (0x28) The stream's sample rate, in Hz
  Uint32         bitRate; ///< \brief (0x2C) The audio's bit rate per second
  Uint16       loopCount; ///< \brief (0x30) # of times to loop audio (65535 for infinite loop)
  Uint16        channels; ///< \brief (0x32) # of interlaced channels in the stream (L&R for stereo)
  Uint8     bitRemainder; ///< \brief (0x34) = bitsPerSample%8
  Uint8        userflags; ///< \brief (0x35) User-defined (is just padding otherwise)
  Uint16       uservalue; ///< \brief (0x36) User-defined (is just padding otherwise)
  //while userdata and data are technically included in a .kpm file,
   //they should appear as 0 within that file
  void*         userdata; ///< \brief (0x38) User-defined pointer
  union {
    void*  data; ///< \brief = (void*)pcm_struct_pointer + pcm_struct_pointer->headerSize
    Uint8*  u_8; ///< \brief Mono Uint8 Samples
    Sint16* i16; ///< \brief Mono Sint16 Samples
    Sint32* i32; ///< \brief Mono Sint32 Samples
    float*  f32; ///< \brief Mono float Samples
    kit_acodecPCM_U_8S* u_8s; ///< \brief Stereo Uint8 samples
    kit_acodecPCM_I16S* i16s; ///< \brief Stereo Sint16 samples
    kit_acodecPCM_I32S* i32s; ///< \brief Stereo Sint32 samples
    kit_acodecPCM_F32S* f32s; ///< \brief Stereo float samples
  }; ///< \brief (0x40) Sample data (PCM data should be contiguous with the struct itself)
} kit_acodecPCM;



/**
 * Destroy a kit_acodecPCM stream
 * \param[in,out] pcm_p A pointer to the kit_acodecPCM* to be destroyed (before being set to NULL)
 * \return 0 on success, or -1 on error (call SDL_GetError() for more info)
 *
 * \sa kit_acodecPCMCreate
 * \sa kit_acodecPCMCopy
 */
extern int kit_acodecPCMDestroy(kit_acodecPCM** pcm_p);

/**
 * Destroy a kit_acodecPCM stream
 * \param[in] format The data type of the stream
 * \param[in] channels The number of interlaced channels in the stream
 * \param[in] sampleRate The desired sample rate, in hertz
 * \param[in] numSamples The number of sample frames in the stream
 * \return A pointer to the newly-created pcm stream, or NULL on error (call SDL_GetError() for more info)
 *
 * \sa kit_acodecPCMDestroy
 * \sa kit_acodecPCMCopy
 */
extern kit_acodecPCM* kit_acodecPCMCreate(SDL_AudioFormat format, Uint16 channels,
                                          Uint32 sampleRate, Uint64 numSamples);

/**
 * Create a duplicate of a kit_acodecPCM stream
 * \param[in] pcm A pointer to the kit_acodecPCM stream to be copied
 * \return A pointer to a newly-copied kit_acodecPCM stream,
 *         or NULL on error (call SDL_GetError() for more info)
 *
 * \sa kit_acodecPCMDestroy
 * \sa kit_acodecPCMCreate
 */
extern kit_acodecPCM* kit_acodecPCMCopy(kit_acodecPCM* pcm);


/**
 * Read kit_acodecPCM data from a pcm file (usually with a "".kpm"" file extension)
 * \param[in] filePath The name of the file to read from
 * \return A pointer to a kit_acodecPCM struct that contains the audio data,
 *         or NULL on error (call SDL_GetError() for more info)
 *
 * \sa kit_acodecPCMWrite
 */
extern kit_acodecPCM* kit_acodecPCMRead(const char* filePath);

/**
 * Save kit_acodecPCM data to a pcm file (usually with a "".kpm"" file extension)
 * \param[in] pcm A pointer to a kit_acodecPCM struct that contains the audio data
 * \param[in] filePath The name of the file to write to
 * \return 0 on success, or -1 on error (call SDL_GetError() for more info)
 *
 * \sa kit_acodecPCMRead
 */
extern int kit_acodecPCMWrite(kit_acodecPCM* pcm, const char* filePath);


/**
 * Change the number of sample frames in a kit_acodecPCM stream
 * \param[in,out] pcm_p A pointer to the kit_acodecPCM* to be resized
 * \param[in] numSamples The amount of sample frames to resize the stream to
 * \return 0 on success, or -1 on error (call SDL_GetError() for more info)
 */
extern int kit_acodecPCMSetNumSamples(kit_acodecPCM** pcm_p, Uint64 numSamples);

/**
 * Create a copy of a kit_acodecPCM stream, converted to either mono or stereo
 * \param[in] pcm A pointer to the input kit_acodecPCM stream
 * \param[in] toStereo Whether to convert to stereo, or convert to mono
 * \return A pointer to a kit_acodecPCM struct that contains the converted stream,
 *         or NULL on error (call SDL_GetError() for more info)
 *
 * \remark Accepted formats are AUDIO_U8, AUDIO_S16, AUDIO_S32, and AUDIO_F32. \n
 * \remark (Trying to use a stream with > 2 channels is not allowed!)
 */
extern kit_acodecPCM* kit_acodecPCMConvertStereo(kit_acodecPCM* pcm, SDL_bool toStereo);

/**
 * Create a copy of a kit_acodecPCM stream, under a new sample format
 * \param[in] pcm A pointer to the input kit_acodecPCM stream
 * \param[in] format The sample format to convert to
 * \return A pointer to a kit_acodecPCM struct that contains the converted stream,
 *         or NULL on error (call SDL_GetError() for more info)
 *
 * \remark Accepted formats are AUDIO_U8, AUDIO_S16, AUDIO_S32, and AUDIO_F32.
 * \remark (Also, conversions from AUDIO_S32 will have a quantization error of up to 64!)
 */
extern kit_acodecPCM* kit_acodecPCMConvertFormat(kit_acodecPCM* pcm, SDL_AudioFormat format);

/**
 * Create a copy of a kit_acodecPCM stream, under a new sample rate
 * \param[in] pcm A pointer to the input kit_acodecPCM stream
 * \param[in] sampleRate The sample rate to convert to
 * \param[in] linearInterpolation A boolean of whether to use linear interpolation
 *            during sample rate conversion (nearest-neighbor is used otherwise)
 * \return A pointer to a kit_acodecPCM struct that contains the converted stream,
 *         or NULL on error (call SDL_GetError() for more info)
 *
 * \remark Accepted formats are AUDIO_U8, AUDIO_S16, AUDIO_S32, and AUDIO_F32.
 */
extern kit_acodecPCM* kit_acodecPCMResample(kit_acodecPCM* pcm, Uint32 sampleRate,
                                            SDL_bool linearInterpolation);

/* -------------------- */
/* -kit_sdl2_acodecPCM- */
/* -------------------- */




/* ++++++++++++++++++++ */
/* +kit_sdl2_acodecWAV+ */
/* ++++++++++++++++++++ */

/**
 * Load kit_acodecPCM data from a "".wav"" file
 * \param[in] filePath The name of the wav file to load
 * \return A pointer to a kit_acodecPCM struct that contains the audio data,
 *         or NULL on error (call SDL_GetError() for more info)
 *
 * \remark Supported sample formats are: Uint8, Sint16, Sint32, and float
 * \sa kit_acodecPCM
 * \sa kit_acodecWAVWrite
 */
extern kit_acodecPCM* kit_acodecWAVRead(const char* filePath);

/**
 * Save kit_acodecPCM data to a "".wav"" file
 * \param[in] pcm A pointer to a kit_acodecPCM struct that contains the audio data
 * \param[in] filePath The name of the wav file to write to
 * \return 0 on success, or -1 on failure; call SDL_GetError() for details
 *
 * \sa kit_acodecPCM
 * \sa kit_acodecWAVRead
 */
extern int kit_acodecWAVWrite(kit_acodecPCM* pcm, const char* filePath);

/* -------------------- */
/* -kit_sdl2_acodecWAV- */
/* -------------------- */




/* ++++++++++++++++++++ */
/* +kit_sdl2_acodecFDM+ */
/* ++++++++++++++++++++ */

#define FDM_MAGIC_NUMBER 0x4D44466B
typedef struct kit_acodecFDMHeader { //("".kfd"")
  union {
    char      s[4]; //=""kFDM""
    Uint32       n; //=0x4D44466B
  } /*-----*/ magic;
  Uint16 headerSize; //headerSize includes headerSize itself, and magic
  Uint16       type; //type 0 = static delta, static history
  Uint64   dataSize;
  Uint64 numSamples;
  Uint64  loopStart;
  Uint64    loopEnd;
  float       delta; //% of change, relative to HALF range; 0.0 -> 2.0
  Uint8   loopCount; //255 (-1) for inf. loop
  Uint8   remainder; //=numSamples%8
  Uint8  historyLen; //number of samples in filter; 0 -> 63
  Uint8    channels;
} kit_acodecFDMHeader;



extern kit_acodecPCM* kit_acodecFDMRead(const char* filePath);

extern int kit_acodecFDMWrite(const char* fileName, kit_acodecPCM* pcm,
                              Uint8 historyLen, Uint8 iterations);

/* -------------------- */
/* -kit_sdl2_acodecFDM- */
/* -------------------- */




/* +++++++++++++++++ */
/* +kit_sdl2_acodec+ */
/* +++++++++++++++++ */

extern const SDL_bool kit_acodecIsDebug;



/**
 * Load kit_acodecPCM data from a valid audio file
 * \param[in] filePath The name of the file to load from
 * \param[in] format The target data type to convert to (0 to keep original data type)
 * \param[in] sampleRate The target sample rate to resample to (0 to keep original sample rate)
 * \param[in] linearInterpolation 'Use linear interpolation if resampling?' (nearest-neighbor otherwise)
 * \return A pointer to a kit_acodecPCM struct that contains the audio data,
 *         or NULL on error (call SDL_GetError() for more info)
 *
 * \remark Supported file formats are: ""kPCM"" (.kpm), ""kFDM"" (.kfd), and ""WAVE"" (.wav)
 */
extern kit_acodecPCM* kit_acodecLoadAudio(const char* filePath, SDL_AudioFormat format,
                                          Uint32 sampleRate, SDL_bool linearInterpolation);

/* ----------------- */
/* -kit_sdl2_acodec- */
/* ----------------- */




#ifdef __cplusplus
}
#endif

#endif /* _KIT_SDL2_ACODEC_H */
#endif /* _KIT_ACODEC_H */
"
Sjuqdrzz,Lo,angeluni,Python,Friday 29th of September 2023 03:31:18 AM CDT,"usuarios = {
    ""usuario1"": ""token123"",
    ""usuario2"": ""token456"",
    # Adicione mais usuários e tokens conforme necessário
}
"
1qZeJKaG,Guessing game,Benkex,Python,Friday 29th of September 2023 02:55:49 AM CDT,"print ( 'Welcome to the guessing game!' )

print ( 'Guess a number between 1 and 100!' )

from random import randint

number = randint(1, 100)

# print ( number )

while True:
    answer = input( ""Guess: "" )
    answer = int ( answer )
    
    if number < answer:
        print( ""lower"" )
    elif number > answer:
        print( ""higher"" )
    else:
        print( ""You win!"" )
        break
    
    "
FYwCV9i7,7.6.15,myloyo,C#,Friday 29th of September 2023 02:42:20 AM CDT,"using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace myloyorrr
{
    internal class Program
    {
        static void In( int[,] a)
        {
            

            for (int i = 0; i < a.GetLength(0); i++)
            {
                string []s = Console.ReadLine().Split();

                for (int j = 0; j < a.GetLength(1); j++)
                {
                    a[i,j] = int.Parse(s[j]);
                    
                }

            }
        }
        
        static void delstr(int[,]a, int i, int n, int m)
        {
            
             for (int x = i; x < n- 1; x++)
                 for (int j = 0; j < m; j++)
                     a[x, j] = a[x + 1, j];
            
        }
        static void delsb(int[,] a, int j, int n, int m)
        {
            for (int x = 0; x < n; x++)
                for (int y = j; y < m-1; y++)
                    a[x, y] = a[x, y+1];
        }

        static void Out(int[,] a, int n,  int m)
        {
            for (int i = 0; i < n; i++)
            {
               for(int j = 0; j < m; j++)
                {
                    Console.Write(a[i,j]+"" "");
                }
               Console.WriteLine();
            }
        }

        static void Main()
        {
            int[,] a;
            int n = int.Parse(Console.ReadLine());
            int m = int.Parse(Console.ReadLine());
            a = new int[n, m];
            In(a);

            for(int i = 0; i < n; i++)   // проверка строк
            {
                bool f = true;
                for(int j = 0; j < m; j++)
                {
                    if (a[i,j] != 0)
                    {
                        f = false;
                        break;
                    }
                }
                if (f == true)
                {
                    delstr(a, i, n, m);
                    n--;
                }
            }

            for (int j = 0; j < m; j++) // проверка столбцов
            {
                bool f = true;
                for (int i = 0; i < n; i++)
                {
                    if (a[i, j] != 0)
                    {
                        f = false;
                        break;
                    }
                }
                if (f == true)
                {
                    delsb(a, j, n, m);
                    m--;
                }
            }

            Out(a, n, m);
        }
    }
}"
zm4NwTu0,multiply matrix or add,shivamisone,Java,Friday 29th of September 2023 02:37:10 AM CDT,"import java.util.Scanner;

public class multiadd {
    public static void main(String[] args) {
        int r;
        Scanner sc = new Scanner(System.in);
        System.out.println(""enter row:"");
        r = sc.nextInt();
        int[][] a = new int[r][r];
        int[][] a1 = new int[r][r];
        System.out.println(""enter values for matrix1:"");
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < r; j++) {
                a[i][j] = sc.nextInt();
            }
        }
        System.out.println(""enter values for matrix2:"");
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < r; j++) {
                a1[i][j] = sc.nextInt();
            }
        }
        System.out.println(""enter 1 for multiply \n 2 for add"");
        int choice = sc.nextInt();
        int[][] m = new int[r][r];
        switch (choice) {
            case 1:
                for (int i = 0; i < r; i++) {
                    for (int j = 0; j < r; j++) {
                        m[i][j] = 0;
                        for (int k = 0; k < r; k++) {
                            m[i][j] += (a[i][k] * a1[k][j]);
                        }
                    }
                }
                for (int i = 0; i < r; i++) {
                    for (int j = 0; j < r; j++) {
                        System.out.print(m[i][j] + "" "");
                    }
                    System.out.println("""");
                }
                System.out.println(""transpose of multuiplied matrix:"");
                for (int i = 0; i < r; i++) {
                    for (int j = 0; j < r; j++) {
                        System.out.print(m[j][i] + "" "");
                    }
                    System.out.println("""");
                }
                break;
            case 2:
                for (int i = 0; i < r; i++) {
                    for (int j = 0; j < r; j++) {
                        m[i][j] = a[i][j] + a1[i][j];

                    }
                }
                for (int i = 0; i < r; i++) {
                    for (int j = 0; j < r; j++) {
                        System.out.print(m[i][j] + "" "");
                    }
                    System.out.println("""");
                }
            default:
                break;
        }
        sc.close();

    }
}
"
jVHbacAr,install php and it's most used modules,mandos1945,Bash,Friday 29th of September 2023 02:29:52 AM CDT,sudo apt install php7.3-fpm php7.3-bcmath php7.3-curl php7.3-decimal php7.3-gd php7.3-intl php7.3-json php7.3-mbstring php7.3-mcrypt php7.3-mysql php7.3-xml php7.3-xmlrpc php7.3-xsl php7.3-yaml php7.3-zip
7vd35zJ2,Untitled,clandast,Python,Friday 29th of September 2023 02:23:41 AM CDT,"class StartWithData(Start):
    def __init__(
        self,
        text: Text,
        id: str,
        state: State,
        data_keys: List[str],
        data: Data = None,
        on_click: Optional[OnClick] = None,
        mode: StartMode = StartMode.NORMAL,
        when: WhenCondition = None,
    ):
        super().__init__(
            text=text, on_click=self._on_click, id=id, when=when, state=state
        )
        self.text = text
        self.start_data = data or {}
        self.user_on_click = on_click
        self.state = state
        self.mode = mode
        self.data_keys = data_keys

    async def _on_click(
        self, callback: CallbackQuery, button: Button, manager: DialogManager
    ):
        if self.user_on_click:
            await self.user_on_click(callback, self, manager)
        start_data = {}
        for key in self.data_keys:
            value = manager.dialog_data.get(key)
            if not value and manager.start_data:
                value = manager.start_data.get(key)
            if not value:
                raise ValueError(f""Key {key} not found in dialog_data or start_data"")

            start_data[key] = value
        await manager.start(self.state, start_data, self.mode)
"
naNP3wnf,Mad,Unknown_No_1,PHP,Friday 29th of September 2023 02:23:39 AM CDT,NewModComingSoonByMadGamerTG
SpcfJkfi,AOC2021Day14.py,bob_f,Python,Friday 29th of September 2023 02:10:57 AM CDT,"template = ''
pairRules = {}

def getPuzzleData():
    template = ''
    pairRules = {}

    with open('AdventOfCode2021Day14.txt') as INFILE:
        lines = INFILE.read().split('\n')

    template = lines[0]

    for line in range(2, len(lines)):
        lineElems = lines[line].split(' -> ')
        pairRules[lineElems[0]] = lineElems[1]

    return template, pairRules

#
# Main program
#

template, pairRules = getPuzzleData()        
print(f'{template=}')
print(f'{pairRules=}')"
8HnChPr2,Userselect -> stringselect,tomtomvader298,JavaScript,Friday 29th of September 2023 02:08:41 AM CDT,"const { SlashCommandBuilder, EmbedBuilder, ActionRowBuilder, UserSelectMenuBuilder, ButtonBuilder, ButtonStyle, StringSelectMenuBuilder, StringSelectMenuOptionBuilder, PermissionFlagsBits } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('profile-cosmetics')
        .setDescription('Display The Following: Avatar, Avatar + Decoration, Banner')
        .setDMPermission(false)
        .setDefaultMemberPermissions(PermissionFlagsBits.SendMessages),

    async execute(interaction) {

        let replied = false;
        await interaction.deferReply();

        const avatarDecorationBannerOption = new ActionRowBuilder()
            .addComponents(
                new StringSelectMenuBuilder()
                    .setCustomId('select')
                    .setPlaceholder('Select A Cosmetic')
                    .addOptions(
                        new StringSelectMenuOptionBuilder()
                            .setLabel('Avatar')
                            .setDescription('Preview Yours Or A Friends Avatar')
                            .setValue('avatar')
                            .setEmoji('👤'),
                        new StringSelectMenuOptionBuilder()
                            .setLabel('Avatar & Decoration')
                            .setDescription('This Feature Is Not Yet Implemented')
                            .setValue('avatar_decoration')
                            .setEmoji('👤'),
                        new StringSelectMenuOptionBuilder()
                            .setLabel('Banner')
                            .setDescription('Preview Yours Or A Friends Banner')
                            .setValue('banner')
                            .setEmoji('🟪')
                    )
            );

        const selectAUser = new UserSelectMenuBuilder({
            custom_id: 'select_user',
            placeholder: 'Select A User (Optional)',
            max_values: 1,
        });
        const userSelected = new ActionRowBuilder().addComponents(selectAUser);

        let user = interaction.user;
        if (interaction.selectedOptions && interaction.selectedOptions.length > 0) {
           user = interaction.selectedOptions[0].user;
        } else {
            user = interaction.user;
        }

        const message = await interaction.editReply({
            content: 'Select A User & Option:',
            components: [userSelected, avatarDecorationBannerOption]
        });
        const filter = i => ['select','select_user'].includes(i.customId) && i.user.id === interaction.user.id;
        const collector = message.createMessageComponentCollector({ filter, time: 300000 });

        collector.on('collect', async collectedInteraction => {
            switch (collectedInteraction.customId) {
                case 'select':
                case 'select_user':
                    const value = collectedInteraction.values[0];
                    if (value === 'avatar') {

                        let avatarEmbed = new EmbedBuilder()
                            .setColor(""#2F3136"")
                            .setTitle(`${user.globalName ?? user.username}'s avatar:`)
                            .setImage(`${user.displayAvatarURL({ dynamic: true })}`)
                            .setFooter({ text: `Wow Such A Cool Avatar` })
                        let link = new ActionRowBuilder()
                            .addComponents(
                                new ButtonBuilder()
                                    .setURL(`${user.displayAvatarURL()}`)
                                    .setLabel('Want A Copy Of This Avatar For Yourself?')
                                    .setStyle(ButtonStyle.Link)
                                    .setEmoji('👤')
                                    .setDisabled(false),
                            )

                        await collectedInteraction.update({ content: null, embeds: [avatarEmbed], components: [avatarDecorationBannerOption, link], files: [] });

                    } else if (value === 'avatar_decoration') {

                        const avatarDecorationEmbed = new EmbedBuilder()
                            .setTitle(`${user.globalName ?? user.username}'s Avatar With Decoration`)
                            .setDescription(`This Feature Is Still In Development By Discord, It Is Undocumented This Is A Placeholder`)
                            .setColor(""#2F3136"")
                            .setFooter({ text: 'Filtered Out Developer Commands, Base Commands' });

                        await collectedInteraction.update({ content: null, embeds: [avatarDecorationEmbed], components: [avatarDecorationBannerOption], files: [] });

                    } else if (value === 'banner') {
                        await user.fetch();
                        if (user.bot) {
                            return collectedInteraction.update({ content: '# Discord Bots Cannot Have Banners!', files: [] })
                        }

                        const noBanner = new EmbedBuilder()
                            .setColor(""#2F3136"")
                            .setDescription(""# The Requested User Does Not Have A Active Nitro (9.99) Subscription So They Do Not Have A Custom Profile Banner.\n# Or The Selected User Has 9.99 Nitro But Wishes Not To Have A Banner"")
                            .setImage('attachment://nothing.png');

                        if (!user.banner) {
                            return collectedInteraction.update({ content: null, embeds: [noBanner], files: [{ attachment: './nobanner.png', name: 'nothing.png' }] });
                        }
                        const userBannerEmbed = new Discord.EmbedBuilder()
                            .setAuthor({
                                name: `${user.username}'s Banner`,
                                iconURL: user.avatarURL({ dynamic: true }),
                            })
                            .setImage(
                                user.bannerURL({ dynamic: true, format: ""png"", size: 4096 })
                            );
                        let link = new ActionRowBuilder()
                            .addComponents(
                                new ButtonBuilder()
                                    .setURL(`${user.bannerURL()}`)
                                    .setLabel('Want A Copy Of This Banner For Yourself?')
                                    .setStyle(ButtonStyle.Link)
                                    .setEmoji('👤')
                                    .setDisabled(false),
                            )

                        await collectedInteraction.update({ content: null, embeds: [userBannerEmbed], components: [avatarDecorationBannerOption, link], files: [] });
                    }
                    break;
            }
        });
    }
}

"
8BLFC45T,Макс и хранение слов,pasholnahuy,C++,Friday 29th of September 2023 01:28:07 AM CDT,"#include <iostream>
#include <algorithm>
#include <unordered_map>

using namespace std;

class Trie{
    struct Node {
        unordered_map<char, Node> next;
        int isTerminal = 0;
        bool visited = false;
    }
            root;

public:
    int symb_cnt = 0;
    void Insert(const string& s) {
        Node* cur = &root;
        for (auto c: s) {
            cur = &cur->next[c];
            if (!cur->visited){
                ++symb_cnt;
                cur->visited = true;
            }
        }
        ++cur->isTerminal;
    }


};

int main() {
    int n;
    cin >> n;
    Trie trie;
    int summ = 0;
    for (int i = 0; i < n; ++i){
        string s;
        cin >> s;
        summ += s.size();
        trie.Insert(s);
    }
    cout << summ - trie.symb_cnt;
    return 0;
};"
aLDcV3Bi,Exclude page from WP search,dubajicpredrag,PHP,Friday 29th of September 2023 01:15:25 AM CDT,"function exclude_page_from_search_results($query) {
    if (is_search() && $query->is_main_query()) {
        // Replace 45 with the ID of the page you want to exclude
        $exclude_page_id = 45;

        // Exclude the specific page from search results
        $query->set('post__not_in', array($exclude_page_id));
    }
}

add_action('pre_get_posts', 'exclude_page_from_search_results');"
58KAEfBr,Nigerian scammers [29-9-1/2023],bombaires,HTML,Friday 29th of September 2023 12:58:30 AM CDT,"<a href=""mailto:ubabankplcng36@gmail.com"">ubabankplcng36@gmail.com</a>
<a href=""mailto:u.baban.kp.lc.n.g3.6@gmail.com"">u.baban.kp.lc.n.g3.6@gmail.com</a>
<a href=""mailto:u.ba.ba.n.kplc.ng.3.6@gmail.com"">u.ba.ba.n.kplc.ng.3.6@gmail.com</a>
<a href=""mailto:uba.b.an.k.p.lc.n.g3.6@gmail.com"">uba.b.an.k.p.lc.n.g3.6@gmail.com</a>
<a href=""mailto:u.b.ab.a.n.k.plcng.36@gmail.com"">u.b.ab.a.n.k.plcng.36@gmail.com</a>
<a href=""mailto:u.ba.b.a.n.k.pl.c.ng36@gmail.com"">u.ba.b.a.n.k.pl.c.ng36@gmail.com</a>
<a href=""mailto:uba.b.a.n.kplcng3.6@gmail.com"">uba.b.a.n.kplcng3.6@gmail.com</a>
<a href=""mailto:u.b.abank.pl.c.n.g.36@gmail.com"">u.b.abank.pl.c.n.g.36@gmail.com</a>
<a href=""mailto:u.ba.bankplcn.g36@gmail.com"">u.ba.bankplcn.g36@gmail.com</a>
<a href=""mailto:ub.a.b.a.nkpl.c.n.g3.6@gmail.com"">ub.a.b.a.nkpl.c.n.g3.6@gmail.com</a>
<a href=""mailto:uba.ban.k.p.lcng.3.6@gmail.com"">uba.ban.k.p.lcng.3.6@gmail.com</a>
<a href=""mailto:uba.ban.kp.lcn.g.3.6@gmail.com"">uba.ban.kp.lcn.g.3.6@gmail.com</a>
<a href=""mailto:ubaba.n.kp.lc.ng.36@gmail.com"">ubaba.n.kp.lc.ng.36@gmail.com</a>
<a href=""mailto:ub.ab.an.k.p.lcn.g.3.6@gmail.com"">ub.ab.an.k.p.lcn.g.3.6@gmail.com</a>
<a href=""mailto:uba.ban.k.plcn.g.36@gmail.com"">uba.ban.k.plcn.g.36@gmail.com</a>
<a href=""mailto:ub.a.b.a.nkp.l.cn.g.36@gmail.com"">ub.a.b.a.nkp.l.cn.g.36@gmail.com</a>
<a href=""mailto:u.ba.ba.nkp.lc.n.g3.6@gmail.com"">u.ba.ba.nkp.lc.n.g3.6@gmail.com</a>
<a href=""mailto:u.b.aba.n.k.p.lc.ng36@gmail.com"">u.b.aba.n.k.p.lc.ng36@gmail.com</a>
<a href=""mailto:u.bab.a.n.kpl.c.n.g36@gmail.com"">u.bab.a.n.kpl.c.n.g36@gmail.com</a>
<a href=""mailto:ub.aban.k.p.lcn.g36@gmail.com"">ub.aban.k.p.lcn.g36@gmail.com</a>
<a href=""mailto:ub.aban.kpl.cn.g.3.6@gmail.com"">ub.aban.kpl.cn.g.3.6@gmail.com</a>
<a href=""mailto:u.ba.b.an.k.p.l.c.ng.3.6@gmail.com"">u.ba.b.an.k.p.l.c.ng.3.6@gmail.com</a>
<a href=""mailto:u.baba.n.kpl.cng36@gmail.com"">u.baba.n.kpl.cng36@gmail.com</a>
<a href=""mailto:ub.ab.a.nk.plcng.36@gmail.com"">ub.ab.a.nk.plcng.36@gmail.com</a>
<a href=""mailto:u.b.a.b.a.n.k.plc.ng3.6@gmail.com"">u.b.a.b.a.n.k.plc.ng3.6@gmail.com</a>
<a href=""mailto:ub.a.b.a.n.k.pl.cng36@gmail.com"">ub.a.b.a.n.k.pl.cng36@gmail.com</a>
<a href=""mailto:ubab.a.n.k.plcn.g.3.6@gmail.com"">ubab.a.n.k.plcn.g.3.6@gmail.com</a>
<a href=""mailto:uba.b.a.n.k.p.l.cn.g3.6@gmail.com"">uba.b.a.n.k.p.l.cn.g3.6@gmail.com</a>
<a href=""mailto:ub.a.b.an.kplc.ng36@gmail.com"">ub.a.b.an.kplc.ng36@gmail.com</a>
<a href=""mailto:u.b.a.b.a.n.k.p.l.c.ng.3.6@gmail.com"">u.b.a.b.a.n.k.p.l.c.ng.3.6@gmail.com</a>
<a href=""mailto:ub.ab.ankp.lc.ng.36@gmail.com"">ub.ab.ankp.lc.ng.36@gmail.com</a>
<a href=""mailto:ub.a.ba.n.kp.lcn.g.36@gmail.com"">ub.a.ba.n.kp.lcn.g.36@gmail.com</a>
<a href=""mailto:u.b.ab.a.n.k.plcn.g3.6@gmail.com"">u.b.ab.a.n.k.plcn.g3.6@gmail.com</a>
<a href=""mailto:u.b.a.b.a.nk.plc.ng.36@gmail.com"">u.b.a.b.a.nk.plc.ng.36@gmail.com</a>
<a href=""mailto:u.baba.n.k.p.lc.ng.36@gmail.com"">u.baba.n.k.p.lc.ng.36@gmail.com</a>
<a href=""mailto:uba.ba.n.k.p.l.cng.3.6@gmail.com"">uba.ba.n.k.p.l.cng.3.6@gmail.com</a>
<a href=""mailto:ubaba.nkpl.cn.g.3.6@gmail.com"">ubaba.nkpl.cn.g.3.6@gmail.com</a>
<a href=""mailto:u.ba.ban.k.pl.cn.g36@gmail.com"">u.ba.ban.k.pl.cn.g36@gmail.com</a>
<a href=""mailto:u.ba.ban.k.plcn.g.36@gmail.com"">u.ba.ban.k.plcn.g.36@gmail.com</a>
<a href=""mailto:u.b.ab.a.nkplcng3.6@gmail.com"">u.b.ab.a.nkplcng3.6@gmail.com</a>
<a href=""mailto:ub.ab.ankplcn.g.36@gmail.com"">ub.ab.ankplcn.g.36@gmail.com</a>
<a href=""mailto:ub.ab.a.nkp.lcng36@gmail.com"">ub.ab.a.nkp.lcng36@gmail.com</a>
<a href=""mailto:ub.aba.nkpl.c.n.g3.6@gmail.com"">ub.aba.nkpl.c.n.g3.6@gmail.com</a>
<a href=""mailto:ub.ab.ank.pl.c.ng.3.6@gmail.com"">ub.ab.ank.pl.c.ng.3.6@gmail.com</a>
<a href=""mailto:u.b.a.b.a.nkpl.cng36@gmail.com"">u.b.a.b.a.nkpl.cng36@gmail.com</a>
<a href=""mailto:ubab.an.k.plcn.g36@gmail.com"">ubab.an.k.plcn.g36@gmail.com</a>
<a href=""mailto:u.ba.ban.kp.lc.n.g.3.6@gmail.com"">u.ba.ban.kp.lc.n.g.3.6@gmail.com</a>
<a href=""mailto:uba.b.an.k.plc.n.g36@gmail.com"">uba.b.an.k.plc.n.g36@gmail.com</a>
<a href=""mailto:u.bab.ank.plc.ng.36@gmail.com"">u.bab.ank.plc.ng.36@gmail.com</a>
<a href=""mailto:uba.ba.n.k.pl.cn.g.36@gmail.com"">uba.ba.n.k.pl.cn.g.36@gmail.com</a>
<a href=""mailto:u.b.a.b.a.nkpl.c.n.g.3.6@gmail.com"">u.b.a.b.a.nkpl.c.n.g.3.6@gmail.com</a>
<a href=""mailto:ub.aban.k.p.l.cng36@gmail.com"">ub.aban.k.p.l.cng36@gmail.com</a>
<a href=""mailto:u.ba.bankp.lc.n.g36@gmail.com"">u.ba.bankp.lc.n.g36@gmail.com</a>
<a href=""mailto:u.bab.a.n.k.pl.cn.g3.6@gmail.com"">u.bab.a.n.k.pl.cn.g3.6@gmail.com</a>
<a href=""mailto:ub.a.ba.nk.p.l.cn.g36@gmail.com"">ub.a.ba.nk.p.l.cn.g36@gmail.com</a>
<a href=""mailto:u.bab.a.n.kplcng3.6@gmail.com"">u.bab.a.n.kplcng3.6@gmail.com</a>
<a href=""mailto:uba.ba.nkp.lc.ng.36@gmail.com"">uba.ba.nkp.lc.ng.36@gmail.com</a>
<a href=""mailto:u.b.a.ban.k.plc.ng.36@gmail.com"">u.b.a.ban.k.plc.ng.36@gmail.com</a>
<a href=""mailto:u.bab.a.n.kplc.ng36@gmail.com"">u.bab.a.n.kplc.ng36@gmail.com</a>
<a href=""mailto:u.b.a.b.a.nkp.l.c.n.g.3.6@gmail.com"">u.b.a.b.a.nkp.l.c.n.g.3.6@gmail.com</a>
<a href=""mailto:u.b.abank.p.lcn.g.3.6@gmail.com"">u.b.abank.p.lcn.g.3.6@gmail.com</a>
<a href=""mailto:u.ba.b.a.n.kp.l.c.ng.3.6@gmail.com"">u.ba.b.a.n.kp.l.c.ng.3.6@gmail.com</a>
<a href=""mailto:u.b.a.ba.nk.pl.cn.g36@gmail.com"">u.b.a.ba.nk.pl.cn.g36@gmail.com</a>
<a href=""mailto:u.ba.bankplcng3.6@gmail.com"">u.ba.bankplcng3.6@gmail.com</a>
<a href=""mailto:u.ba.b.a.n.kp.l.c.ng36@gmail.com"">u.ba.b.a.n.kp.l.c.ng36@gmail.com</a>
<a href=""mailto:ub.ab.an.kp.l.cn.g3.6@gmail.com"">ub.ab.an.kp.l.cn.g3.6@gmail.com</a>
<a href=""mailto:u.ba.ban.kp.lc.n.g3.6@gmail.com"">u.ba.ban.kp.lc.n.g3.6@gmail.com</a>
<a href=""mailto:ubab.a.n.kp.l.c.ng36@gmail.com"">ubab.a.n.kp.l.c.ng36@gmail.com</a>
<a href=""mailto:u.ba.b.ankpl.c.n.g.36@gmail.com"">u.ba.b.ankpl.c.n.g.36@gmail.com</a>
<a href=""mailto:u.baba.n.k.p.lcng36@gmail.com"">u.baba.n.k.p.lcng36@gmail.com</a>
<a href=""mailto:ubaba.nk.p.lc.n.g36@gmail.com"">ubaba.nk.p.lc.n.g36@gmail.com</a>
<a href=""mailto:ub.a.ba.n.k.p.lcn.g36@gmail.com"">ub.a.ba.n.k.p.lcn.g36@gmail.com</a>
<a href=""mailto:ubaba.n.k.p.l.c.ng.36@gmail.com"">ubaba.n.k.p.l.c.ng.36@gmail.com</a>
<a href=""mailto:ub.a.b.ankp.l.cn.g3.6@gmail.com"">ub.a.b.ankp.l.cn.g3.6@gmail.com</a>
<a href=""mailto:u.ba.b.ankpl.c.ng.36@gmail.com"">u.ba.b.ankpl.c.ng.36@gmail.com</a>
<a href=""mailto:u.bab.a.n.k.p.l.c.n.g.3.6@gmail.com"">u.bab.a.n.k.p.l.c.n.g.3.6@gmail.com</a>
<a href=""mailto:uba.b.an.k.plcng.36@gmail.com"">uba.b.an.k.plcng.36@gmail.com</a>
<a href=""mailto:u.ba.b.ank.p.lcn.g3.6@gmail.com"">u.ba.b.ank.p.lcn.g3.6@gmail.com</a>
<a href=""mailto:ubab.a.n.k.pl.c.ng.3.6@gmail.com"">ubab.a.n.k.pl.c.ng.3.6@gmail.com</a>
<a href=""mailto:u.b.ab.an.k.plcn.g.36@gmail.com"">u.b.ab.an.k.plcn.g.36@gmail.com</a>
<a href=""mailto:u.ba.ba.nkplc.n.g36@gmail.com"">u.ba.ba.nkplc.n.g36@gmail.com</a>
<a href=""mailto:u.bab.a.nkp.l.c.ng36@gmail.com"">u.bab.a.nkp.l.c.ng36@gmail.com</a>
<a href=""mailto:uba.b.a.nkpl.cn.g36@gmail.com"">uba.b.a.nkpl.cn.g36@gmail.com</a>
<a href=""mailto:ubaba.n.k.plcn.g36@gmail.com"">ubaba.n.k.plcn.g36@gmail.com</a>
<a href=""mailto:u.bab.a.n.k.pl.c.ng3.6@gmail.com"">u.bab.a.n.k.pl.c.ng3.6@gmail.com</a>
<a href=""mailto:ubaba.nkp.lcng.3.6@gmail.com"">ubaba.nkp.lcng.3.6@gmail.com</a>
<a href=""mailto:u.ba.bank.pl.c.ng36@gmail.com"">u.ba.bank.pl.c.ng36@gmail.com</a>
<a href=""mailto:u.ba.b.a.nk.plcng.36@gmail.com"">u.ba.b.a.nk.plcng.36@gmail.com</a>
<a href=""mailto:ubab.ankp.lc.ng.3.6@gmail.com"">ubab.ankp.lc.ng.3.6@gmail.com</a>
<a href=""mailto:u.b.a.b.an.kp.lc.ng3.6@gmail.com"">u.b.a.b.an.kp.lc.ng3.6@gmail.com</a>
<a href=""mailto:u.baban.kpl.cng.3.6@gmail.com"">u.baban.kpl.cng.3.6@gmail.com</a>
<a href=""mailto:ubab.a.nk.plc.ng36@gmail.com"">ubab.a.nk.plc.ng36@gmail.com</a>
<a href=""mailto:ubabank.pl.c.n.g36@gmail.com"">ubabank.pl.c.n.g36@gmail.com</a>
<a href=""mailto:ubab.a.nkp.l.c.ng.36@gmail.com"">ubab.a.nkp.l.c.ng.36@gmail.com</a>
<a href=""mailto:u.b.a.bankp.lcn.g.3.6@gmail.com"">u.b.a.bankp.lcn.g.3.6@gmail.com</a>
<a href=""mailto:u.bab.a.nk.plcng.36@gmail.com"">u.bab.a.nk.plcng.36@gmail.com</a>
<a href=""mailto:u.b.aba.nk.p.l.cn.g36@gmail.com"">u.b.aba.nk.p.l.cn.g36@gmail.com</a>
<a href=""mailto:uba.ban.k.pl.cng.36@gmail.com"">uba.ban.k.pl.cng.36@gmail.com</a>
<a href=""mailto:u.b.a.b.a.n.k.plcng36@gmail.com"">u.b.a.b.a.n.k.plcng36@gmail.com</a>
<a href=""mailto:ubab.a.n.k.p.lc.ng3.6@gmail.com"">ubab.a.n.k.p.lc.ng3.6@gmail.com</a>
<a href=""mailto:ub.ab.an.k.p.l.cng36@gmail.com"">ub.ab.an.k.p.l.cng36@gmail.com</a>
<a href=""mailto:u.b.a.b.a.nk.p.l.c.ng3.6@gmail.com"">u.b.a.b.a.nk.p.l.c.ng3.6@gmail.com</a>
<a href=""mailto:u.ba.ba.nkp.lc.ng.36@gmail.com"">u.ba.ba.nkp.lc.ng.36@gmail.com</a>
<a href=""mailto:u.ba.b.a.nkp.lc.ng36@gmail.com"">u.ba.b.a.nkp.lc.ng36@gmail.com</a>
<a href=""mailto:u.ba.b.a.n.k.pl.c.n.g3.6@gmail.com"">u.ba.b.a.n.k.pl.c.n.g3.6@gmail.com</a>
<a href=""mailto:u.bab.a.n.kpl.cn.g.36@gmail.com"">u.bab.a.n.kpl.cn.g.36@gmail.com</a>
<a href=""mailto:u.b.a.b.a.nkpl.c.ng.3.6@gmail.com"">u.b.a.b.a.nkpl.c.ng.3.6@gmail.com</a>
<a href=""mailto:ub.a.b.ank.pl.c.ng.3.6@gmail.com"">ub.a.b.ank.pl.c.ng.3.6@gmail.com</a>
<a href=""mailto:u.b.a.ban.kp.l.cng.36@gmail.com"">u.b.a.ban.kp.l.cng.36@gmail.com</a>
<a href=""mailto:ubabank.p.lc.ng36@gmail.com"">ubabank.p.lc.ng36@gmail.com</a>
<a href=""mailto:u.b.a.ba.n.kplcng3.6@gmail.com"">u.b.a.ba.n.kplcng3.6@gmail.com</a>
<a href=""mailto:u.babank.p.lc.ng3.6@gmail.com"">u.babank.p.lc.ng3.6@gmail.com</a>
<a href=""mailto:u.ba.b.an.k.pl.cng.3.6@gmail.com"">u.ba.b.an.k.pl.cng.3.6@gmail.com</a>
<a href=""mailto:uba.ban.kpl.cng.36@gmail.com"">uba.ban.kpl.cng.36@gmail.com</a>
<a href=""mailto:u.ba.b.ankplc.n.g3.6@gmail.com"">u.ba.b.ankplc.n.g3.6@gmail.com</a>
<a href=""mailto:u.b.a.ba.nk.plcng.3.6@gmail.com"">u.b.a.ba.nk.plcng.3.6@gmail.com</a>
<a href=""mailto:ub.ab.an.kpl.c.n.g.36@gmail.com"">ub.ab.an.kpl.c.n.g.36@gmail.com</a>
<a href=""mailto:u.bab.ankp.l.c.ng.36@gmail.com"">u.bab.ankp.l.c.ng.36@gmail.com</a>
<a href=""mailto:u.ba.ba.nkpl.cn.g.3.6@gmail.com"">u.ba.ba.nkpl.cn.g.3.6@gmail.com</a>
<a href=""mailto:uba.b.a.n.k.p.l.c.n.g36@gmail.com"">uba.b.a.n.k.p.l.c.n.g36@gmail.com</a>
<a href=""mailto:uba.b.an.kp.lcn.g.3.6@gmail.com"">uba.b.an.kp.lcn.g.3.6@gmail.com</a>
<a href=""mailto:ubab.a.n.k.p.l.c.ng.36@gmail.com"">ubab.a.n.k.p.l.c.ng.36@gmail.com</a>
<a href=""mailto:u.ba.b.a.nkp.l.c.ng3.6@gmail.com"">u.ba.b.a.nkp.l.c.ng3.6@gmail.com</a>
<a href=""mailto:ub.ab.an.kplcng.3.6@gmail.com"">ub.ab.an.kplcng.3.6@gmail.com</a>
<a href=""mailto:u.b.ab.ankp.lcng3.6@gmail.com"">u.b.ab.ankp.lcng3.6@gmail.com</a>
<a href=""mailto:u.ba.ba.nkp.l.c.ng3.6@gmail.com"">u.ba.ba.nkp.l.c.ng3.6@gmail.com</a>
<a href=""mailto:ub.a.bank.p.l.c.n.g3.6@gmail.com"">ub.a.bank.p.l.c.n.g3.6@gmail.com</a>
<a href=""mailto:u.ba.ban.k.p.lc.ng.36@gmail.com"">u.ba.ban.k.p.lc.ng.36@gmail.com</a>
<a href=""mailto:u.b.a.ban.kp.l.cn.g.36@gmail.com"">u.b.a.ban.kp.l.cn.g.36@gmail.com</a>
<a href=""mailto:uba.bank.p.l.c.n.g3.6@gmail.com"">uba.bank.p.l.c.n.g3.6@gmail.com</a>
<a href=""mailto:u.bab.a.nk.p.lc.n.g3.6@gmail.com"">u.bab.a.nk.p.lc.n.g3.6@gmail.com</a>
<a href=""mailto:ubaban.k.plcn.g36@gmail.com"">ubaban.k.plcn.g36@gmail.com</a>
<a href=""mailto:ub.a.ba.n.k.p.lc.ng.3.6@gmail.com"">ub.a.ba.n.k.p.lc.ng.3.6@gmail.com</a>
<a href=""mailto:u.ba.b.ank.plcn.g36@gmail.com"">u.ba.b.ank.plcn.g36@gmail.com</a>
<a href=""mailto:ub.ab.ankp.l.cng36@gmail.com"">ub.ab.ankp.l.cng36@gmail.com</a>
<a href=""mailto:ubaba.n.k.p.lc.n.g.36@gmail.com"">ubaba.n.k.p.lc.n.g.36@gmail.com</a>
<a href=""mailto:ubabank.p.lcng.3.6@gmail.com"">ubabank.p.lcng.3.6@gmail.com</a>
<a href=""mailto:ub.a.ba.nkplc.ng.3.6@gmail.com"">ub.a.ba.nkplc.ng.3.6@gmail.com</a>
<a href=""mailto:u.b.ab.a.n.kpl.cn.g.3.6@gmail.com"">u.b.ab.a.n.kpl.cn.g.3.6@gmail.com</a>
<a href=""mailto:uba.b.a.nk.p.lcng3.6@gmail.com"">uba.b.a.nk.p.lcng3.6@gmail.com</a>
<a href=""mailto:ub.a.ba.n.kplcng.36@gmail.com"">ub.a.ba.n.kplcng.36@gmail.com</a>
<a href=""mailto:uba.b.ankp.l.c.ng36@gmail.com"">uba.b.ankp.l.c.ng36@gmail.com</a>
<a href=""mailto:u.bab.a.n.k.pl.cn.g.3.6@gmail.com"">u.bab.a.n.k.pl.cn.g.3.6@gmail.com</a>
<a href=""mailto:ubab.a.nkp.l.c.n.g3.6@gmail.com"">ubab.a.nkp.l.c.n.g3.6@gmail.com</a>
<a href=""mailto:uba.b.a.nk.p.l.c.ng.36@gmail.com"">uba.b.a.nk.p.l.c.ng.36@gmail.com</a>
<a href=""mailto:ubaban.kp.l.cn.g.36@gmail.com"">ubaban.kp.l.cn.g.36@gmail.com</a>
<a href=""mailto:ubaba.n.k.plcng3.6@gmail.com"">ubaba.n.k.plcng3.6@gmail.com</a>
<a href=""mailto:u.baban.kp.l.c.n.g36@gmail.com"">u.baban.kp.l.c.n.g36@gmail.com</a>
<a href=""mailto:u.b.a.b.a.nk.p.lc.n.g3.6@gmail.com"">u.b.a.b.a.nk.p.lc.n.g3.6@gmail.com</a>
<a href=""mailto:ub.abank.p.l.cng.36@gmail.com"">ub.abank.p.l.cng.36@gmail.com</a>
<a href=""mailto:u.b.a.b.ankpl.cn.g3.6@gmail.com"">u.b.a.b.ankpl.cn.g3.6@gmail.com</a>
<a href=""mailto:ub.abankplcn.g.3.6@gmail.com"">ub.abankplcn.g.3.6@gmail.com</a>
<a href=""mailto:ubaba.n.k.p.lcn.g.3.6@gmail.com"">ubaba.n.k.p.lcn.g.3.6@gmail.com</a>
<a href=""mailto:ub.a.b.a.nk.pl.c.ng.3.6@gmail.com"">ub.a.b.a.nk.pl.c.ng.3.6@gmail.com</a>
<a href=""mailto:u.ba.b.a.n.kplcng36@gmail.com"">u.ba.b.a.n.kplcng36@gmail.com</a>
<a href=""mailto:ub.a.b.an.k.plcn.g.36@gmail.com"">ub.a.b.an.k.plcn.g.36@gmail.com</a>
<a href=""mailto:ubab.ankplcn.g3.6@gmail.com"">ubab.ankplcn.g3.6@gmail.com</a>
<a href=""mailto:uba.b.a.n.k.p.l.cng.3.6@gmail.com"">uba.b.a.n.k.p.l.cng.3.6@gmail.com</a>
<a href=""mailto:u.b.a.b.a.n.kp.l.cng36@gmail.com"">u.b.a.b.a.n.kp.l.cng36@gmail.com</a>
<a href=""mailto:ubab.a.nk.p.l.cng.3.6@gmail.com"">ubab.a.nk.p.l.cng.3.6@gmail.com</a>
<a href=""mailto:ubaban.kp.lcn.g36@gmail.com"">ubaban.kp.lcn.g36@gmail.com</a>
<a href=""mailto:u.b.aba.n.k.plc.n.g36@gmail.com"">u.b.aba.n.k.plc.n.g36@gmail.com</a>
<a href=""mailto:u.b.aba.nkpl.cng36@gmail.com"">u.b.aba.nkpl.cng36@gmail.com</a>
<a href=""mailto:uba.ban.kp.l.cn.g.3.6@gmail.com"">uba.ban.kp.l.cn.g.3.6@gmail.com</a>
<a href=""mailto:u.b.ab.an.k.plcn.g3.6@gmail.com"">u.b.ab.an.k.plcn.g3.6@gmail.com</a>
<a href=""mailto:u.ba.ban.k.p.lc.ng3.6@gmail.com"">u.ba.ban.k.p.lc.ng3.6@gmail.com</a>
<a href=""mailto:ub.ab.a.n.k.plc.ng.36@gmail.com"">ub.ab.a.n.k.plc.ng.36@gmail.com</a>
<a href=""mailto:ub.a.b.a.nkpl.c.ng3.6@gmail.com"">ub.a.b.a.nkpl.c.ng3.6@gmail.com</a>
<a href=""mailto:ub.ab.an.kp.l.cn.g.36@gmail.com"">ub.ab.an.kp.l.cn.g.36@gmail.com</a>
<a href=""mailto:uba.ba.n.kp.l.c.ng36@gmail.com"">uba.ba.n.kp.l.c.ng36@gmail.com</a>
<a href=""mailto:u.bab.a.nk.p.l.c.n.g3.6@gmail.com"">u.bab.a.nk.p.l.c.n.g3.6@gmail.com</a>
<a href=""mailto:u.ba.ba.n.kpl.cn.g.36@gmail.com"">u.ba.ba.n.kpl.cn.g.36@gmail.com</a>
<a href=""mailto:u.b.a.bank.pl.cn.g.36@gmail.com"">u.b.a.bank.pl.cn.g.36@gmail.com</a>
<a href=""mailto:ub.a.ba.n.k.pl.cn.g.3.6@gmail.com"">ub.a.ba.n.k.pl.cn.g.3.6@gmail.com</a>
<a href=""mailto:ub.ab.ankplc.n.g3.6@gmail.com"">ub.ab.ankplc.n.g3.6@gmail.com</a>
<a href=""mailto:u.b.a.b.a.n.kpl.cn.g3.6@gmail.com"">u.b.a.b.a.n.kpl.cn.g3.6@gmail.com</a>
<a href=""mailto:uba.b.an.k.p.lcng.3.6@gmail.com"">uba.b.an.k.p.lcng.3.6@gmail.com</a>
<a href=""mailto:u.b.ab.a.nkpl.cng.3.6@gmail.com"">u.b.ab.a.nkpl.cng.3.6@gmail.com</a>
<a href=""mailto:ubab.a.n.k.p.lc.n.g36@gmail.com"">ubab.a.n.k.p.lc.n.g36@gmail.com</a>
<a href=""mailto:u.b.ab.a.nkplcn.g.3.6@gmail.com"">u.b.ab.a.nkplcn.g.3.6@gmail.com</a>
<a href=""mailto:u.baba.nkp.lcng3.6@gmail.com"">u.baba.nkp.lcng3.6@gmail.com</a>
<a href=""mailto:u.b.ab.a.nkp.l.c.ng.3.6@gmail.com"">u.b.ab.a.nkp.l.c.ng.3.6@gmail.com</a>
<a href=""mailto:u.b.a.ba.nk.plc.ng.36@gmail.com"">u.b.a.ba.nk.plc.ng.36@gmail.com</a>
<a href=""mailto:uba.bank.p.lcng.36@gmail.com"">uba.bank.p.lcng.36@gmail.com</a>
<a href=""mailto:ub.a.bankpl.c.ng.36@gmail.com"">ub.a.bankpl.c.ng.36@gmail.com</a>
<a href=""mailto:u.b.ab.a.n.k.plcn.g.36@gmail.com"">u.b.ab.a.n.k.plcn.g.36@gmail.com</a>
<a href=""mailto:uba.b.ank.p.lc.ng3.6@gmail.com"">uba.b.ank.p.lc.ng3.6@gmail.com</a>
<a href=""mailto:uba.ban.k.plc.n.g.36@gmail.com"">uba.ban.k.plc.n.g.36@gmail.com</a>
<a href=""mailto:ub.a.ba.n.k.plcng.36@gmail.com"">ub.a.ba.n.k.plcng.36@gmail.com</a>
<a href=""mailto:uba.bank.plc.ng36@gmail.com"">uba.bank.plc.ng36@gmail.com</a>
<a href=""mailto:u.b.aba.n.k.p.l.cn.g36@gmail.com"">u.b.aba.n.k.p.l.cn.g36@gmail.com</a>
<a href=""mailto:u.bab.an.k.plcn.g36@gmail.com"">u.bab.an.k.plcn.g36@gmail.com</a>
<a href=""mailto:uba.b.a.nk.plcng.36@gmail.com"">uba.b.a.nk.plcng.36@gmail.com</a>
<a href=""mailto:u.b.a.b.ank.p.lcng.36@gmail.com"">u.b.a.b.ank.p.lcng.36@gmail.com</a>
<a href=""mailto:u.b.a.ba.n.k.p.l.cng3.6@gmail.com"">u.b.a.ba.n.k.p.l.cng3.6@gmail.com</a>
<a href=""mailto:u.b.ab.a.nkpl.c.ng3.6@gmail.com"">u.b.ab.a.nkpl.c.ng3.6@gmail.com</a>
<a href=""mailto:u.b.a.ba.n.k.p.lcng.3.6@gmail.com"">u.b.a.ba.n.k.p.lcng.3.6@gmail.com</a>
<a href=""mailto:ubab.ank.plcn.g.36@gmail.com"">ubab.ank.plcn.g.36@gmail.com</a>
<a href=""mailto:u.babank.plcng3.6@gmail.com"">u.babank.plcng3.6@gmail.com</a>
<a href=""mailto:u.ba.b.an.k.p.lc.ng3.6@gmail.com"">u.ba.b.an.k.p.lc.ng3.6@gmail.com</a>
<a href=""mailto:u.b.a.ban.k.pl.cng36@gmail.com"">u.b.a.ban.k.pl.cng36@gmail.com</a>
<a href=""mailto:kelly62chael@gmail.com"">kelly62chael@gmail.com</a>
<a href=""mailto:kell.y6.2.c.ha.e.l@gmail.com"">kell.y6.2.c.ha.e.l@gmail.com</a>
<a href=""mailto:k.el.ly.6.2c.h.a.el@gmail.com"">k.el.ly.6.2c.h.a.el@gmail.com</a>
<a href=""mailto:kel.ly.62.ch.a.e.l@gmail.com"">kel.ly.62.ch.a.e.l@gmail.com</a>
<a href=""mailto:k.e.l.ly.62cha.el@gmail.com"">k.e.l.ly.62cha.el@gmail.com</a>
<a href=""mailto:kell.y.6.2.c.hael@gmail.com"">kell.y.6.2.c.hael@gmail.com</a>
<a href=""mailto:k.ell.y6.2.ch.ae.l@gmail.com"">k.ell.y6.2.ch.ae.l@gmail.com</a>
<a href=""mailto:kelly.62.cha.e.l@gmail.com"">kelly.62.cha.e.l@gmail.com</a>
<a href=""mailto:ke.l.ly.6.2cha.el@gmail.com"">ke.l.ly.6.2cha.el@gmail.com</a>
<a href=""mailto:k.e.l.l.y.62c.hae.l@gmail.com"">k.e.l.l.y.62c.hae.l@gmail.com</a>
<a href=""mailto:k.el.l.y.6.2.c.h.ae.l@gmail.com"">k.el.l.y.6.2.c.h.ae.l@gmail.com</a>
<a href=""mailto:kel.ly.62.c.h.a.el@gmail.com"">kel.ly.62.c.h.a.el@gmail.com</a>
<a href=""mailto:k.e.lly6.2.c.h.ael@gmail.com"">k.e.lly6.2.c.h.ael@gmail.com</a>
<a href=""mailto:ke.l.ly6.2.cha.el@gmail.com"">ke.l.ly6.2.cha.el@gmail.com</a>
<a href=""mailto:k.el.ly.6.2.chae.l@gmail.com"">k.el.ly.6.2.chae.l@gmail.com</a>
<a href=""mailto:k.e.lly.6.2ch.a.e.l@gmail.com"">k.e.lly.6.2ch.a.e.l@gmail.com</a>
<a href=""mailto:kel.ly62c.h.a.el@gmail.com"">kel.ly62c.h.a.el@gmail.com</a>
<a href=""mailto:k.e.ll.y.62chael@gmail.com"">k.e.ll.y.62chael@gmail.com</a>
<a href=""mailto:k.e.l.ly62.ch.a.el@gmail.com"">k.e.l.ly62.ch.a.el@gmail.com</a>
<a href=""mailto:kell.y.62.chae.l@gmail.com"">kell.y.62.chae.l@gmail.com</a>
<a href=""mailto:kelly62c.ha.e.l@gmail.com"">kelly62c.ha.e.l@gmail.com</a>
<a href=""mailto:k.el.ly62c.h.a.e.l@gmail.com"">k.el.ly62c.h.a.e.l@gmail.com</a>
<a href=""mailto:k.e.lly.6.2c.h.a.e.l@gmail.com"">k.e.lly.6.2c.h.a.e.l@gmail.com</a>
<a href=""mailto:ke.ll.y.6.2.c.ha.e.l@gmail.com"">ke.ll.y.6.2.c.ha.e.l@gmail.com</a>
<a href=""mailto:ke.l.ly.62chael@gmail.com"">ke.l.ly.62chael@gmail.com</a>
<a href=""mailto:ke.ll.y62.c.hae.l@gmail.com"">ke.ll.y62.c.hae.l@gmail.com</a>
<a href=""mailto:k.e.l.ly.62chael@gmail.com"">k.e.l.ly.62chael@gmail.com</a>
<a href=""mailto:k.e.ll.y62c.h.ae.l@gmail.com"">k.e.ll.y62c.h.ae.l@gmail.com</a>
<a href=""mailto:k.el.ly62.chael@gmail.com"">k.el.ly62.chael@gmail.com</a>
<a href=""mailto:k.el.ly.6.2c.ha.e.l@gmail.com"">k.el.ly.6.2c.ha.e.l@gmail.com</a>
<a href=""mailto:k.elly62.chael@gmail.com"">k.elly62.chael@gmail.com</a>
<a href=""mailto:k.e.l.ly.62c.ha.e.l@gmail.com"">k.e.l.ly.62c.ha.e.l@gmail.com</a>
<a href=""mailto:k.el.ly62c.h.ael@gmail.com"">k.el.ly62c.h.ael@gmail.com</a>
<a href=""mailto:kelly6.2.c.h.ae.l@gmail.com"">kelly6.2.c.h.ae.l@gmail.com</a>
<a href=""mailto:k.el.ly.6.2ch.a.el@gmail.com"">k.el.ly.6.2ch.a.el@gmail.com</a>
<a href=""mailto:k.e.lly6.2.cha.el@gmail.com"">k.e.lly6.2.cha.el@gmail.com</a>
<a href=""mailto:k.el.l.y.6.2.c.ha.el@gmail.com"">k.el.l.y.6.2.c.ha.el@gmail.com</a>
<a href=""mailto:ke.l.ly.62.c.ha.el@gmail.com"">ke.l.ly.62.c.ha.el@gmail.com</a>
<a href=""mailto:kel.l.y62.ch.a.e.l@gmail.com"">kel.l.y62.ch.a.e.l@gmail.com</a>
<a href=""mailto:ke.l.l.y.62.cha.e.l@gmail.com"">ke.l.l.y.62.cha.e.l@gmail.com</a>
<a href=""mailto:k.ell.y62.cha.e.l@gmail.com"">k.ell.y62.cha.e.l@gmail.com</a>
<a href=""mailto:k.elly.6.2.c.ha.e.l@gmail.com"">k.elly.6.2.c.ha.e.l@gmail.com</a>
<a href=""mailto:ke.lly62.c.h.ae.l@gmail.com"">ke.lly62.c.h.ae.l@gmail.com</a>
<a href=""mailto:k.ell.y.6.2c.h.a.e.l@gmail.com"">k.ell.y.6.2c.h.a.e.l@gmail.com</a>
<a href=""mailto:k.e.l.l.y62.c.ha.el@gmail.com"">k.e.l.l.y62.c.ha.el@gmail.com</a>
<a href=""mailto:ke.l.ly6.2.c.h.a.el@gmail.com"">ke.l.ly6.2.c.h.a.el@gmail.com</a>
<a href=""mailto:k.el.ly62.c.h.a.e.l@gmail.com"">k.el.ly62.c.h.a.e.l@gmail.com</a>
<a href=""mailto:ke.l.l.y6.2c.h.a.e.l@gmail.com"">ke.l.l.y6.2c.h.a.e.l@gmail.com</a>
<a href=""mailto:k.el.ly.62.c.hae.l@gmail.com"">k.el.ly.62.c.hae.l@gmail.com</a>
<a href=""mailto:ke.l.l.y.62ch.a.el@gmail.com"">ke.l.l.y.62ch.a.el@gmail.com</a>
<a href=""mailto:k.e.l.ly.62ch.ae.l@gmail.com"">k.e.l.ly.62ch.ae.l@gmail.com</a>
<a href=""mailto:ke.l.ly.62.ch.ael@gmail.com"">ke.l.ly.62.ch.ael@gmail.com</a>
<a href=""mailto:ke.lly62.c.ha.el@gmail.com"">ke.lly62.c.ha.el@gmail.com</a>
<a href=""mailto:k.el.ly6.2c.ha.el@gmail.com"">k.el.ly6.2c.ha.el@gmail.com</a>
<a href=""mailto:k.e.ll.y6.2.cha.e.l@gmail.com"">k.e.ll.y6.2.cha.e.l@gmail.com</a>
<a href=""mailto:kelly6.2c.h.ae.l@gmail.com"">kelly6.2c.h.ae.l@gmail.com</a>
<a href=""mailto:k.e.l.ly.62cha.e.l@gmail.com"">k.e.l.ly.62cha.e.l@gmail.com</a>
<a href=""mailto:k.e.lly.62.c.h.ae.l@gmail.com"">k.e.lly.62.c.h.ae.l@gmail.com</a>
<a href=""mailto:kelly62.c.h.ael@gmail.com"">kelly62.c.h.ael@gmail.com</a>
<a href=""mailto:k.ell.y.62c.h.a.e.l@gmail.com"">k.ell.y.62c.h.a.e.l@gmail.com</a>
<a href=""mailto:k.ell.y62.c.h.a.e.l@gmail.com"">k.ell.y62.c.h.a.e.l@gmail.com</a>
<a href=""mailto:ke.l.ly.62.cha.el@gmail.com"">ke.l.ly.62.cha.el@gmail.com</a>
<a href=""mailto:ke.lly.62.cha.el@gmail.com"">ke.lly.62.cha.el@gmail.com</a>
<a href=""mailto:k.e.ll.y6.2.c.h.ae.l@gmail.com"">k.e.ll.y6.2.c.h.ae.l@gmail.com</a>
<a href=""mailto:k.el.l.y.62.ch.a.e.l@gmail.com"">k.el.l.y.62.ch.a.e.l@gmail.com</a>
<a href=""mailto:k.ell.y6.2c.h.ael@gmail.com"">k.ell.y6.2c.h.ael@gmail.com</a>
<a href=""mailto:ke.ll.y.62c.ha.el@gmail.com"">ke.ll.y.62c.ha.el@gmail.com</a>
<a href=""mailto:k.el.ly.6.2.cha.e.l@gmail.com"">k.el.ly.6.2.cha.e.l@gmail.com</a>
<a href=""mailto:ke.l.ly.6.2.ch.ae.l@gmail.com"">ke.l.ly.6.2.ch.ae.l@gmail.com</a>
<a href=""mailto:ke.l.ly.6.2c.h.ael@gmail.com"">ke.l.ly.6.2c.h.ael@gmail.com</a>
<a href=""mailto:ke.l.ly.62.cha.e.l@gmail.com"">ke.l.ly.62.cha.e.l@gmail.com</a>
<a href=""mailto:kell.y62.c.ha.e.l@gmail.com"">kell.y62.c.ha.e.l@gmail.com</a>
<a href=""mailto:k.elly.62cha.el@gmail.com"">k.elly.62cha.el@gmail.com</a>
<a href=""mailto:k.e.lly6.2c.ha.e.l@gmail.com"">k.e.lly6.2c.ha.e.l@gmail.com</a>
<a href=""mailto:ke.ll.y.6.2.c.h.a.el@gmail.com"">ke.ll.y.6.2.c.h.a.el@gmail.com</a>
<a href=""mailto:k.e.ll.y.62.c.h.a.el@gmail.com"">k.e.ll.y.62.c.h.a.el@gmail.com</a>
<a href=""mailto:k.el.ly6.2.c.hae.l@gmail.com"">k.el.ly6.2.c.hae.l@gmail.com</a>
<a href=""mailto:k.el.l.y6.2.c.h.a.el@gmail.com"">k.el.l.y6.2.c.h.a.el@gmail.com</a>
<a href=""mailto:ke.ll.y.62.c.h.ae.l@gmail.com"">ke.ll.y.62.c.h.ae.l@gmail.com</a>
<a href=""mailto:kelly.6.2.c.hael@gmail.com"">kelly.6.2.c.hael@gmail.com</a>
<a href=""mailto:k.ell.y.6.2chae.l@gmail.com"">k.ell.y.6.2chae.l@gmail.com</a>
<a href=""mailto:k.e.lly.62.c.h.ael@gmail.com"">k.e.lly.62.c.h.ael@gmail.com</a>
<a href=""mailto:ke.l.l.y.6.2cha.e.l@gmail.com"">ke.l.l.y.6.2cha.e.l@gmail.com</a>
<a href=""mailto:k.e.l.l.y.62ch.a.el@gmail.com"">k.e.l.l.y.62ch.a.el@gmail.com</a>
<a href=""mailto:k.e.l.l.y.6.2c.hae.l@gmail.com"">k.e.l.l.y.6.2c.hae.l@gmail.com</a>
<a href=""mailto:k.ell.y6.2c.ha.el@gmail.com"">k.ell.y6.2c.ha.el@gmail.com</a>
<a href=""mailto:k.e.l.ly62c.h.a.e.l@gmail.com"">k.e.l.ly62c.h.a.e.l@gmail.com</a>
<a href=""mailto:kel.ly.6.2.ch.a.e.l@gmail.com"">kel.ly.6.2.ch.a.e.l@gmail.com</a>
<a href=""mailto:k.el.ly.6.2.c.h.ae.l@gmail.com"">k.el.ly.6.2.c.h.ae.l@gmail.com</a>
<a href=""mailto:ke.lly.62ch.a.e.l@gmail.com"">ke.lly.62ch.a.e.l@gmail.com</a>
<a href=""mailto:k.e.lly.6.2c.h.a.el@gmail.com"">k.e.lly.6.2c.h.a.el@gmail.com</a>
<a href=""mailto:k.elly62c.h.ael@gmail.com"">k.elly62c.h.ael@gmail.com</a>
<a href=""mailto:k.e.l.ly6.2.chae.l@gmail.com"">k.e.l.ly6.2.chae.l@gmail.com</a>
<a href=""mailto:kel.ly62.c.h.a.el@gmail.com"">kel.ly62.c.h.a.el@gmail.com</a>
<a href=""mailto:k.el.l.y6.2.c.h.ae.l@gmail.com"">k.el.l.y6.2.c.h.ae.l@gmail.com</a>
<a href=""mailto:k.el.l.y6.2chae.l@gmail.com"">k.el.l.y6.2chae.l@gmail.com</a>
<a href=""mailto:kel.l.y.6.2.c.ha.e.l@gmail.com"">kel.l.y.6.2.c.ha.e.l@gmail.com</a>
<a href=""mailto:k.e.l.l.y.6.2.c.h.a.e.l@gmail.com"">k.e.l.l.y.6.2.c.h.a.e.l@gmail.com</a>
<a href=""mailto:kelly.62ch.a.e.l@gmail.com"">kelly.62ch.a.e.l@gmail.com</a>
<a href=""mailto:k.el.l.y6.2c.hae.l@gmail.com"">k.el.l.y6.2c.hae.l@gmail.com</a>
<a href=""mailto:ke.ll.y.6.2ch.ael@gmail.com"">ke.ll.y.6.2ch.ael@gmail.com</a>
<a href=""mailto:k.el.ly6.2c.ha.e.l@gmail.com"">k.el.ly6.2c.ha.e.l@gmail.com</a>
<a href=""mailto:k.e.ll.y.6.2c.h.ae.l@gmail.com"">k.e.ll.y.6.2c.h.ae.l@gmail.com</a>
<a href=""mailto:k.e.lly.62.c.hael@gmail.com"">k.e.lly.62.c.hael@gmail.com</a>
<a href=""mailto:k.e.l.l.y.62c.h.ae.l@gmail.com"">k.e.l.l.y.62c.h.ae.l@gmail.com</a>
<a href=""mailto:kel.ly62.ch.a.el@gmail.com"">kel.ly62.ch.a.el@gmail.com</a>
<a href=""mailto:k.el.l.y6.2ch.ael@gmail.com"">k.el.l.y6.2ch.ael@gmail.com</a>
<a href=""mailto:kel.l.y.62c.ha.e.l@gmail.com"">kel.l.y.62c.ha.e.l@gmail.com</a>
<a href=""mailto:ke.l.ly62.c.h.ae.l@gmail.com"">ke.l.ly62.c.h.ae.l@gmail.com</a>
<a href=""mailto:k.el.ly.6.2.c.ha.e.l@gmail.com"">k.el.ly.6.2.c.ha.e.l@gmail.com</a>
<a href=""mailto:kel.ly.6.2.c.h.a.e.l@gmail.com"">kel.ly.6.2.c.h.a.e.l@gmail.com</a>
<a href=""mailto:k.e.l.ly62ch.ael@gmail.com"">k.e.l.ly62ch.ael@gmail.com</a>
<a href=""mailto:ke.lly.62cha.e.l@gmail.com"">ke.lly.62cha.e.l@gmail.com</a>
<a href=""mailto:k.elly62c.ha.el@gmail.com"">k.elly62c.ha.el@gmail.com</a>
<a href=""mailto:k.el.ly6.2ch.ae.l@gmail.com"">k.el.ly6.2ch.ae.l@gmail.com</a>
<a href=""mailto:k.el.l.y.6.2.c.hael@gmail.com"">k.el.l.y.6.2.c.hael@gmail.com</a>
<a href=""mailto:k.e.lly6.2.c.h.a.el@gmail.com"">k.e.lly6.2.c.h.a.el@gmail.com</a>
<a href=""mailto:kel.ly62.chael@gmail.com"">kel.ly62.chael@gmail.com</a>
<a href=""mailto:k.e.lly.62ch.ael@gmail.com"">k.e.lly.62ch.ael@gmail.com</a>
<a href=""mailto:kel.l.y62c.h.ae.l@gmail.com"">kel.l.y62c.h.ae.l@gmail.com</a>
<a href=""mailto:ke.lly6.2.c.ha.e.l@gmail.com"">ke.lly6.2.c.ha.e.l@gmail.com</a>
<a href=""mailto:k.ell.y6.2.chael@gmail.com"">k.ell.y6.2.chael@gmail.com</a>
<a href=""mailto:kelly6.2c.hae.l@gmail.com"">kelly6.2c.hae.l@gmail.com</a>
<a href=""mailto:k.el.ly6.2.c.ha.el@gmail.com"">k.el.ly6.2.c.ha.el@gmail.com</a>
<a href=""mailto:kel.ly.62c.hael@gmail.com"">kel.ly.62c.hael@gmail.com</a>
<a href=""mailto:k.elly6.2c.ha.e.l@gmail.com"">k.elly6.2c.ha.e.l@gmail.com</a>
<a href=""mailto:kell.y.6.2.chae.l@gmail.com"">kell.y.6.2.chae.l@gmail.com</a>
<a href=""mailto:k.el.l.y.6.2cha.el@gmail.com"">k.el.l.y.6.2cha.el@gmail.com</a>
<a href=""mailto:k.e.lly6.2chael@gmail.com"">k.e.lly6.2chael@gmail.com</a>
<a href=""mailto:kell.y62ch.ael@gmail.com"">kell.y62ch.ael@gmail.com</a>
<a href=""mailto:k.el.l.y6.2.ch.ael@gmail.com"">k.el.l.y6.2.ch.ael@gmail.com</a>
<a href=""mailto:k.el.ly62.c.h.ae.l@gmail.com"">k.el.ly62.c.h.ae.l@gmail.com</a>
<a href=""mailto:kell.y62chae.l@gmail.com"">kell.y62chae.l@gmail.com</a>
<a href=""mailto:k.e.l.l.y.6.2ch.a.el@gmail.com"">k.e.l.l.y.6.2ch.a.el@gmail.com</a>
<a href=""mailto:k.ell.y6.2cha.el@gmail.com"">k.ell.y6.2cha.el@gmail.com</a>
<a href=""mailto:ke.l.ly.62.ch.ae.l@gmail.com"">ke.l.ly.62.ch.ae.l@gmail.com</a>
<a href=""mailto:ke.l.ly6.2ch.a.el@gmail.com"">ke.l.ly6.2ch.a.el@gmail.com</a>
<a href=""mailto:kel.l.y.62c.h.a.el@gmail.com"">kel.l.y.62c.h.a.el@gmail.com</a>
<a href=""mailto:k.e.lly.62c.h.a.el@gmail.com"">k.e.lly.62c.h.a.el@gmail.com</a>
<a href=""mailto:k.e.l.ly6.2c.h.a.e.l@gmail.com"">k.e.l.ly6.2c.h.a.e.l@gmail.com</a>
<a href=""mailto:ke.lly62c.hael@gmail.com"">ke.lly62c.hael@gmail.com</a>
<a href=""mailto:k.e.l.ly.6.2ch.ael@gmail.com"">k.e.l.ly.6.2ch.ael@gmail.com</a>
<a href=""mailto:k.e.l.ly6.2.c.hael@gmail.com"">k.e.l.ly6.2.c.hael@gmail.com</a>
<a href=""mailto:k.e.ll.y62.chae.l@gmail.com"">k.e.ll.y62.chae.l@gmail.com</a>
<a href=""mailto:ke.l.l.y62.c.h.a.e.l@gmail.com"">ke.l.l.y62.c.h.a.e.l@gmail.com</a>
<a href=""mailto:k.el.ly62cha.el@gmail.com"">k.el.ly62cha.el@gmail.com</a>
<a href=""mailto:ke.l.l.y6.2.ch.ael@gmail.com"">ke.l.l.y6.2.ch.ael@gmail.com</a>
<a href=""mailto:k.el.ly.6.2.c.h.ael@gmail.com"">k.el.ly.6.2.c.h.ael@gmail.com</a>
<a href=""mailto:k.e.l.ly62.c.hae.l@gmail.com"">k.e.l.ly62.c.hae.l@gmail.com</a>
<a href=""mailto:ke.lly6.2.c.h.a.e.l@gmail.com"">ke.lly6.2.c.h.a.e.l@gmail.com</a>
<a href=""mailto:k.el.l.y.62.chae.l@gmail.com"">k.el.l.y.62.chae.l@gmail.com</a>
<a href=""mailto:ke.l.ly62c.h.a.el@gmail.com"">ke.l.ly62c.h.a.el@gmail.com</a>
<a href=""mailto:ke.l.ly.6.2.c.h.ael@gmail.com"">ke.l.ly.6.2.c.h.ael@gmail.com</a>
<a href=""mailto:kel.ly.6.2.c.ha.e.l@gmail.com"">kel.ly.6.2.c.ha.e.l@gmail.com</a>
<a href=""mailto:ke.lly.6.2ch.ael@gmail.com"">ke.lly.6.2ch.ael@gmail.com</a>
<a href=""mailto:ke.l.l.y.62.c.ha.el@gmail.com"">ke.l.l.y.62.c.ha.el@gmail.com</a>
<a href=""mailto:ke.ll.y.6.2.ch.ael@gmail.com"">ke.ll.y.6.2.ch.ael@gmail.com</a>
<a href=""mailto:k.e.l.ly.6.2ch.ae.l@gmail.com"">k.e.l.ly.6.2ch.ae.l@gmail.com</a>
<a href=""mailto:ke.lly.62chae.l@gmail.com"">ke.lly.62chae.l@gmail.com</a>
<a href=""mailto:kel.l.y.6.2ch.ael@gmail.com"">kel.l.y.6.2ch.ael@gmail.com</a>
<a href=""mailto:k.el.l.y62c.h.a.el@gmail.com"">k.el.l.y62c.h.a.el@gmail.com</a>
<a href=""mailto:k.ell.y.62c.ha.el@gmail.com"">k.ell.y.62c.ha.el@gmail.com</a>
<a href=""mailto:ke.ll.y6.2.c.hael@gmail.com"">ke.ll.y6.2.c.hael@gmail.com</a>
<a href=""mailto:k.e.l.l.y62c.hael@gmail.com"">k.e.l.l.y62c.hael@gmail.com</a>
<a href=""mailto:kelly.6.2.cha.e.l@gmail.com"">kelly.6.2.cha.e.l@gmail.com</a>
<a href=""mailto:kell.y.62c.hael@gmail.com"">kell.y.62c.hael@gmail.com</a>
<a href=""mailto:ke.lly62ch.a.e.l@gmail.com"">ke.lly62ch.a.e.l@gmail.com</a>
<a href=""mailto:kel.ly.62c.ha.e.l@gmail.com"">kel.ly.62c.ha.e.l@gmail.com</a>
<a href=""mailto:k.e.l.l.y.6.2.ch.ae.l@gmail.com"">k.e.l.l.y.6.2.ch.ae.l@gmail.com</a>
<a href=""mailto:ke.l.l.y6.2ch.a.e.l@gmail.com"">ke.l.l.y6.2ch.a.e.l@gmail.com</a>
<a href=""mailto:kell.y.6.2chae.l@gmail.com"">kell.y.6.2chae.l@gmail.com</a>
<a href=""mailto:ke.lly.6.2chael@gmail.com"">ke.lly.6.2chael@gmail.com</a>
<a href=""mailto:ke.lly.62.chae.l@gmail.com"">ke.lly.62.chae.l@gmail.com</a>
<a href=""mailto:k.e.l.ly.6.2chae.l@gmail.com"">k.e.l.ly.6.2chae.l@gmail.com</a>
<a href=""mailto:k.e.lly.6.2c.hael@gmail.com"">k.e.lly.6.2c.hael@gmail.com</a>
<a href=""mailto:k.e.lly62ch.ae.l@gmail.com"">k.e.lly62ch.ae.l@gmail.com</a>
<a href=""mailto:kel.l.y6.2c.ha.e.l@gmail.com"">kel.l.y6.2c.ha.e.l@gmail.com</a>
<a href=""mailto:ke.lly.6.2ch.a.e.l@gmail.com"">ke.lly.6.2ch.a.e.l@gmail.com</a>
<a href=""mailto:k.e.l.l.y62ch.a.el@gmail.com"">k.e.l.l.y62ch.a.el@gmail.com</a>
<a href=""mailto:ke.l.l.y6.2.ch.a.el@gmail.com"">ke.l.l.y6.2.ch.a.el@gmail.com</a>
<a href=""mailto:ke.ll.y6.2.ch.ae.l@gmail.com"">ke.ll.y6.2.ch.ae.l@gmail.com</a>
<a href=""mailto:k.elly6.2c.ha.el@gmail.com"">k.elly6.2c.ha.el@gmail.com</a>
<a href=""mailto:k.e.l.ly62.cha.e.l@gmail.com"">k.e.l.ly62.cha.e.l@gmail.com</a>
<a href=""mailto:k.el.ly6.2.c.h.a.el@gmail.com"">k.el.ly6.2.c.h.a.el@gmail.com</a>
<a href=""mailto:k.elly6.2.ch.a.e.l@gmail.com"">k.elly6.2.ch.a.e.l@gmail.com</a>
<a href=""mailto:ke.l.ly6.2.c.h.a.e.l@gmail.com"">ke.l.ly6.2.c.h.a.e.l@gmail.com</a>
<a href=""mailto:k.el.l.y.6.2ch.ae.l@gmail.com"">k.el.l.y.6.2ch.ae.l@gmail.com</a>
<a href=""mailto:ke.l.l.y6.2c.h.ael@gmail.com"">ke.l.l.y6.2c.h.ael@gmail.com</a>
<a href=""mailto:k.el.l.y62.c.hae.l@gmail.com"">k.el.l.y62.c.hae.l@gmail.com</a>
<a href=""mailto:ke.l.l.y.6.2.c.h.a.e.l@gmail.com"">ke.l.l.y.6.2.c.h.a.e.l@gmail.com</a>
<a href=""mailto:kell.y6.2c.h.a.e.l@gmail.com"">kell.y6.2c.h.a.e.l@gmail.com</a>
<a href=""mailto:kel.ly.6.2.c.h.ael@gmail.com"">kel.ly.6.2.c.h.ael@gmail.com</a>
<a href=""mailto:kel.l.y62.c.ha.e.l@gmail.com"">kel.l.y62.c.ha.e.l@gmail.com</a>
<a href=""mailto:k.el.l.y62c.h.ael@gmail.com"">k.el.l.y62c.h.ael@gmail.com</a>
<a href=""mailto:ke.l.ly62.c.h.a.e.l@gmail.com"">ke.l.ly62.c.h.a.e.l@gmail.com</a>
<a href=""mailto:k.e.l.l.y.6.2.c.h.ael@gmail.com"">k.e.l.l.y.6.2.c.h.ael@gmail.com</a>
<a href=""mailto:kelly.6.2cha.e.l@gmail.com"">kelly.6.2cha.e.l@gmail.com</a>
<a href=""mailto:ke.l.l.y.6.2ch.a.el@gmail.com"">ke.l.l.y.6.2ch.a.el@gmail.com</a>
<a href=""mailto:k.e.ll.y.6.2c.hae.l@gmail.com"">k.e.ll.y.6.2c.hae.l@gmail.com</a>
<a href=""mailto:ke.l.ly.6.2chael@gmail.com"">ke.l.ly.6.2chael@gmail.com</a>
<a href=""mailto:k.e.l.ly62chae.l@gmail.com"">k.e.l.ly62chae.l@gmail.com</a>
<a href=""mailto:nawwaffaruq22@gmail.com"">nawwaffaruq22@gmail.com</a>
<a href=""mailto:na.wwaffa.ru.q22@gmail.com"">na.wwaffa.ru.q22@gmail.com</a>
<a href=""mailto:naww.a.ffa.ru.q.22@gmail.com"">naww.a.ffa.ru.q.22@gmail.com</a>
<a href=""mailto:n.aw.w.affa.r.uq.22@gmail.com"">n.aw.w.affa.r.uq.22@gmail.com</a>
<a href=""mailto:n.aw.w.a.f.f.aruq22@gmail.com"">n.aw.w.a.f.f.aruq22@gmail.com</a>
<a href=""mailto:na.w.w.af.f.aruq.2.2@gmail.com"">na.w.w.af.f.aruq.2.2@gmail.com</a>
<a href=""mailto:n.aw.w.a.ff.a.r.u.q2.2@gmail.com"">n.aw.w.a.ff.a.r.u.q2.2@gmail.com</a>
<a href=""mailto:nawwaff.ar.u.q.2.2@gmail.com"">nawwaff.ar.u.q.2.2@gmail.com</a>
<a href=""mailto:n.awwaffar.uq.2.2@gmail.com"">n.awwaffar.uq.2.2@gmail.com</a>
<a href=""mailto:naw.w.af.f.a.r.uq.22@gmail.com"">naw.w.af.f.a.r.uq.22@gmail.com</a>
<a href=""mailto:n.a.w.wa.ff.a.r.u.q.2.2@gmail.com"">n.a.w.wa.ff.a.r.u.q.2.2@gmail.com</a>
<a href=""mailto:n.aw.wa.f.f.ar.u.q.22@gmail.com"">n.aw.wa.f.f.ar.u.q.22@gmail.com</a>
<a href=""mailto:n.a.ww.a.ffa.ru.q2.2@gmail.com"">n.a.ww.a.ffa.ru.q2.2@gmail.com</a>
<a href=""mailto:na.w.wa.ff.aru.q.2.2@gmail.com"">na.w.wa.ff.aru.q.2.2@gmail.com</a>
<a href=""mailto:n.a.ww.aff.aruq2.2@gmail.com"">n.a.ww.aff.aruq2.2@gmail.com</a>
<a href=""mailto:na.w.w.a.f.faruq.2.2@gmail.com"">na.w.w.a.f.faruq.2.2@gmail.com</a>
<a href=""mailto:na.wwa.ff.ar.uq22@gmail.com"">na.wwa.ff.ar.uq22@gmail.com</a>
<a href=""mailto:naw.wa.ffa.ru.q2.2@gmail.com"">naw.wa.ffa.ru.q2.2@gmail.com</a>
<a href=""mailto:nawwaff.ar.uq22@gmail.com"">nawwaff.ar.uq22@gmail.com</a>
<a href=""mailto:naw.waffa.r.uq2.2@gmail.com"">naw.waffa.r.uq2.2@gmail.com</a>
<a href=""mailto:naww.a.f.fa.r.uq.22@gmail.com"">naww.a.f.fa.r.uq.22@gmail.com</a>
<a href=""mailto:naww.af.fa.r.uq.22@gmail.com"">naww.af.fa.r.uq.22@gmail.com</a>
<a href=""mailto:na.ww.af.faru.q.22@gmail.com"">na.ww.af.faru.q.22@gmail.com</a>
<a href=""mailto:naww.a.ff.ar.uq2.2@gmail.com"">naww.a.ff.ar.uq2.2@gmail.com</a>
<a href=""mailto:naw.waf.f.ar.uq.2.2@gmail.com"">naw.waf.f.ar.uq.2.2@gmail.com</a>
<a href=""mailto:naw.wa.ff.aruq.22@gmail.com"">naw.wa.ff.aruq.22@gmail.com</a>
<a href=""mailto:naw.waf.fa.ru.q2.2@gmail.com"">naw.waf.fa.ru.q2.2@gmail.com</a>
<a href=""mailto:n.aw.w.a.ff.a.r.u.q22@gmail.com"">n.aw.w.a.ff.a.r.u.q22@gmail.com</a>
<a href=""mailto:n.aww.a.f.fa.r.u.q.2.2@gmail.com"">n.aww.a.f.fa.r.u.q.2.2@gmail.com</a>
<a href=""mailto:n.aw.waff.a.ru.q22@gmail.com"">n.aw.waff.a.ru.q22@gmail.com</a>
<a href=""mailto:naw.w.af.f.a.r.uq2.2@gmail.com"">naw.w.af.f.a.r.uq2.2@gmail.com</a>
<a href=""mailto:na.w.w.af.far.u.q22@gmail.com"">na.w.w.af.far.u.q22@gmail.com</a>
<a href=""mailto:na.w.waffa.ruq.22@gmail.com"">na.w.waffa.ruq.22@gmail.com</a>
<a href=""mailto:n.awwa.f.fa.ru.q.2.2@gmail.com"">n.awwa.f.fa.ru.q.2.2@gmail.com</a>
<a href=""mailto:n.aw.waff.a.r.u.q2.2@gmail.com"">n.aw.waff.a.r.u.q2.2@gmail.com</a>
<a href=""mailto:n.a.wwa.f.f.a.r.uq.2.2@gmail.com"">n.a.wwa.f.f.a.r.uq.2.2@gmail.com</a>
<a href=""mailto:naw.w.affaruq22@gmail.com"">naw.w.affaruq22@gmail.com</a>
<a href=""mailto:n.a.ww.a.ff.aruq.22@gmail.com"">n.a.ww.a.ff.aruq.22@gmail.com</a>
<a href=""mailto:na.ww.aff.ar.uq.22@gmail.com"">na.ww.aff.ar.uq.22@gmail.com</a>
<a href=""mailto:na.ww.a.f.faru.q.2.2@gmail.com"">na.ww.a.f.faru.q.2.2@gmail.com</a>
<a href=""mailto:n.a.wwa.ffar.uq.22@gmail.com"">n.a.wwa.ffar.uq.22@gmail.com</a>
<a href=""mailto:n.awwaffa.ru.q22@gmail.com"">n.awwaffa.ru.q22@gmail.com</a>
<a href=""mailto:na.w.wa.ffar.uq22@gmail.com"">na.w.wa.ffar.uq22@gmail.com</a>
<a href=""mailto:n.a.w.waf.f.ar.uq.2.2@gmail.com"">n.a.w.waf.f.ar.uq.2.2@gmail.com</a>
<a href=""mailto:n.a.ww.affa.r.uq.22@gmail.com"">n.a.ww.affa.r.uq.22@gmail.com</a>
<a href=""mailto:nawwaff.ar.u.q22@gmail.com"">nawwaff.ar.u.q22@gmail.com</a>
<a href=""mailto:naww.af.f.a.ru.q22@gmail.com"">naww.af.f.a.ru.q22@gmail.com</a>
<a href=""mailto:n.a.wwaf.fa.ru.q.22@gmail.com"">n.a.wwaf.fa.ru.q.22@gmail.com</a>
<a href=""mailto:na.ww.affar.u.q.22@gmail.com"">na.ww.affar.u.q.22@gmail.com</a>
<a href=""mailto:n.aww.affaruq22@gmail.com"">n.aww.affaruq22@gmail.com</a>
<a href=""mailto:na.wwa.f.f.a.r.uq.22@gmail.com"">na.wwa.f.f.a.r.uq.22@gmail.com</a>
<a href=""mailto:naww.a.ff.aru.q.2.2@gmail.com"">naww.a.ff.aru.q.2.2@gmail.com</a>
<a href=""mailto:na.wwa.ffa.r.u.q.22@gmail.com"">na.wwa.ffa.r.u.q.22@gmail.com</a>
<a href=""mailto:naw.w.a.f.f.aruq.22@gmail.com"">naw.w.a.f.f.aruq.22@gmail.com</a>
<a href=""mailto:n.awwaff.ar.uq2.2@gmail.com"">n.awwaff.ar.uq2.2@gmail.com</a>
<a href=""mailto:n.awwaff.a.ruq2.2@gmail.com"">n.awwaff.a.ruq2.2@gmail.com</a>
<a href=""mailto:n.awwa.ff.a.ru.q22@gmail.com"">n.awwa.ff.a.ru.q22@gmail.com</a>
<a href=""mailto:naww.affaruq.22@gmail.com"">naww.affaruq.22@gmail.com</a>
<a href=""mailto:n.a.ww.a.ffa.ru.q22@gmail.com"">n.a.ww.a.ffa.ru.q22@gmail.com</a>
<a href=""mailto:n.awwa.f.far.uq2.2@gmail.com"">n.awwa.f.far.uq2.2@gmail.com</a>
<a href=""mailto:na.wwaff.ar.u.q.22@gmail.com"">na.wwaff.ar.u.q.22@gmail.com</a>
<a href=""mailto:na.ww.a.ffa.r.u.q.2.2@gmail.com"">na.ww.a.ffa.r.u.q.2.2@gmail.com</a>
<a href=""mailto:naw.wa.f.f.ar.u.q.22@gmail.com"">naw.wa.f.f.ar.u.q.22@gmail.com</a>
<a href=""mailto:na.w.w.a.ffa.ruq.22@gmail.com"">na.w.w.a.ffa.ruq.22@gmail.com</a>
<a href=""mailto:n.awwa.f.fa.r.uq.2.2@gmail.com"">n.awwa.f.fa.r.uq.2.2@gmail.com</a>
<a href=""mailto:n.awwaf.f.aruq2.2@gmail.com"">n.awwaf.f.aruq2.2@gmail.com</a>
<a href=""mailto:nawwa.f.fa.r.uq2.2@gmail.com"">nawwa.f.fa.r.uq2.2@gmail.com</a>
<a href=""mailto:n.aw.w.a.f.far.u.q.22@gmail.com"">n.aw.w.a.f.far.u.q.22@gmail.com</a>
<a href=""mailto:na.w.w.affar.uq2.2@gmail.com"">na.w.w.affar.uq2.2@gmail.com</a>
<a href=""mailto:n.aw.w.a.f.f.a.r.uq.22@gmail.com"">n.aw.w.a.f.f.a.r.uq.22@gmail.com</a>
<a href=""mailto:naw.w.a.f.f.a.r.uq2.2@gmail.com"">naw.w.a.f.f.a.r.uq2.2@gmail.com</a>
<a href=""mailto:n.a.w.waffa.ru.q22@gmail.com"">n.a.w.waffa.ru.q22@gmail.com</a>
<a href=""mailto:naw.waf.f.a.r.uq.22@gmail.com"">naw.waf.f.a.r.uq.22@gmail.com</a>
<a href=""mailto:n.aww.af.f.a.r.u.q22@gmail.com"">n.aww.af.f.a.r.u.q22@gmail.com</a>
<a href=""mailto:naw.wa.ff.aru.q2.2@gmail.com"">naw.wa.ff.aru.q2.2@gmail.com</a>
<a href=""mailto:nawwaff.a.r.u.q22@gmail.com"">nawwaff.a.r.u.q22@gmail.com</a>
<a href=""mailto:n.a.wwa.f.fa.ru.q2.2@gmail.com"">n.a.wwa.f.fa.ru.q2.2@gmail.com</a>
<a href=""mailto:n.aw.waf.far.uq22@gmail.com"">n.aw.waf.far.uq22@gmail.com</a>
<a href=""mailto:n.a.w.w.a.ffa.ru.q.2.2@gmail.com"">n.a.w.w.a.ffa.ru.q.2.2@gmail.com</a>
<a href=""mailto:n.a.ww.a.ff.ar.uq2.2@gmail.com"">n.a.ww.a.ff.ar.uq2.2@gmail.com</a>
<a href=""mailto:n.awwa.f.f.a.r.u.q.2.2@gmail.com"">n.awwa.f.f.a.r.u.q.2.2@gmail.com</a>
<a href=""mailto:n.a.ww.a.ffa.r.u.q22@gmail.com"">n.a.ww.a.ffa.r.u.q22@gmail.com</a>
<a href=""mailto:n.awwaf.f.a.r.u.q.2.2@gmail.com"">n.awwaf.f.a.r.u.q.2.2@gmail.com</a>
<a href=""mailto:n.a.w.w.a.f.fa.r.uq22@gmail.com"">n.a.w.w.a.f.fa.r.uq22@gmail.com</a>
<a href=""mailto:naww.af.f.a.ru.q2.2@gmail.com"">naww.af.f.a.ru.q2.2@gmail.com</a>
<a href=""mailto:n.a.ww.a.f.faruq22@gmail.com"">n.a.ww.a.f.faruq22@gmail.com</a>
<a href=""mailto:n.aw.wa.ff.a.ru.q2.2@gmail.com"">n.aw.wa.ff.a.ru.q2.2@gmail.com</a>
<a href=""mailto:n.a.w.w.a.ffa.ru.q.22@gmail.com"">n.a.w.w.a.ffa.ru.q.22@gmail.com</a>
<a href=""mailto:n.aw.w.aff.aruq.22@gmail.com"">n.aw.w.aff.aruq.22@gmail.com</a>
<a href=""mailto:naw.w.af.faru.q.2.2@gmail.com"">naw.w.af.faru.q.2.2@gmail.com</a>
<a href=""mailto:n.aw.w.affar.uq2.2@gmail.com"">n.aw.w.affar.uq2.2@gmail.com</a>
<a href=""mailto:n.a.ww.a.ffaruq22@gmail.com"">n.a.ww.a.ffaruq22@gmail.com</a>
<a href=""mailto:na.wwaf.fa.ruq22@gmail.com"">na.wwaf.fa.ruq22@gmail.com</a>
<a href=""mailto:n.a.w.w.af.f.aru.q.2.2@gmail.com"">n.a.w.w.af.f.aru.q.2.2@gmail.com</a>
<a href=""mailto:nawwa.ff.a.ru.q22@gmail.com"">nawwa.ff.a.ru.q22@gmail.com</a>
<a href=""mailto:naw.w.aff.a.ru.q.22@gmail.com"">naw.w.aff.a.ru.q.22@gmail.com</a>
<a href=""mailto:n.aw.w.affa.r.uq22@gmail.com"">n.aw.w.affa.r.uq22@gmail.com</a>
<a href=""mailto:n.aw.w.aff.aruq2.2@gmail.com"">n.aw.w.aff.aruq2.2@gmail.com</a>
<a href=""mailto:n.a.w.waf.f.aruq2.2@gmail.com"">n.a.w.waf.f.aruq2.2@gmail.com</a>
<a href=""mailto:nawwa.ffa.r.u.q2.2@gmail.com"">nawwa.ffa.r.u.q2.2@gmail.com</a>
<a href=""mailto:na.ww.aff.aruq22@gmail.com"">na.ww.aff.aruq22@gmail.com</a>
<a href=""mailto:naww.aff.a.r.uq2.2@gmail.com"">naww.aff.a.r.uq2.2@gmail.com</a>
<a href=""mailto:n.aww.a.ff.ar.uq2.2@gmail.com"">n.aww.a.ff.ar.uq2.2@gmail.com</a>
<a href=""mailto:naww.a.f.far.u.q.22@gmail.com"">naww.a.f.far.u.q.22@gmail.com</a>
<a href=""mailto:nawwaff.aruq2.2@gmail.com"">nawwaff.aruq2.2@gmail.com</a>
<a href=""mailto:naw.wa.ff.ar.uq2.2@gmail.com"">naw.wa.ff.ar.uq2.2@gmail.com</a>
<a href=""mailto:naww.aff.a.ru.q22@gmail.com"">naww.aff.a.ru.q22@gmail.com</a>
<a href=""mailto:na.w.w.af.faruq.22@gmail.com"">na.w.w.af.faruq.22@gmail.com</a>
<a href=""mailto:n.a.w.wa.ff.a.ru.q.2.2@gmail.com"">n.a.w.wa.ff.a.ru.q.2.2@gmail.com</a>
<a href=""mailto:n.aw.wa.f.fa.ru.q2.2@gmail.com"">n.aw.wa.f.fa.ru.q2.2@gmail.com</a>
<a href=""mailto:nawwaff.a.r.uq.22@gmail.com"">nawwaff.a.r.uq.22@gmail.com</a>
<a href=""mailto:n.aww.af.fa.r.u.q.22@gmail.com"">n.aww.af.fa.r.u.q.22@gmail.com</a>
<a href=""mailto:n.awwa.ff.a.r.uq2.2@gmail.com"">n.awwa.ff.a.r.uq2.2@gmail.com</a>
<a href=""mailto:n.a.wwaf.f.a.ru.q.2.2@gmail.com"">n.a.wwaf.f.a.ru.q.2.2@gmail.com</a>
<a href=""mailto:n.awwaf.f.a.r.u.q.22@gmail.com"">n.awwaf.f.a.r.u.q.22@gmail.com</a>
<a href=""mailto:n.aw.w.af.faru.q22@gmail.com"">n.aw.w.af.faru.q22@gmail.com</a>
<a href=""mailto:n.awwaff.a.r.uq.2.2@gmail.com"">n.awwaff.a.r.uq.2.2@gmail.com</a>
<a href=""mailto:n.a.w.w.a.f.f.aru.q2.2@gmail.com"">n.a.w.w.a.f.f.aru.q2.2@gmail.com</a>
<a href=""mailto:naw.wa.ffar.uq2.2@gmail.com"">naw.wa.ffar.uq2.2@gmail.com</a>
<a href=""mailto:n.a.w.w.a.ffa.r.uq.22@gmail.com"">n.a.w.w.a.ffa.r.uq.22@gmail.com</a>
<a href=""mailto:nawwaffaruq.2.2@gmail.com"">nawwaffaruq.2.2@gmail.com</a>
<a href=""mailto:naww.af.f.ar.u.q.22@gmail.com"">naww.af.f.ar.u.q.22@gmail.com</a>
<a href=""mailto:n.aww.a.f.f.aru.q2.2@gmail.com"">n.aww.a.f.f.aru.q2.2@gmail.com</a>
<a href=""mailto:n.a.w.waffa.ruq22@gmail.com"">n.a.w.waffa.ruq22@gmail.com</a>
<a href=""mailto:na.ww.a.ff.a.ruq2.2@gmail.com"">na.ww.a.ff.a.ruq2.2@gmail.com</a>
<a href=""mailto:n.a.wwaffaruq.22@gmail.com"">n.a.wwaffaruq.22@gmail.com</a>
<a href=""mailto:n.a.w.waff.a.r.uq.22@gmail.com"">n.a.w.waff.a.r.uq.22@gmail.com</a>
<a href=""mailto:na.w.wa.f.fa.ruq.2.2@gmail.com"">na.w.wa.f.fa.ruq.2.2@gmail.com</a>
<a href=""mailto:na.wwaffa.r.u.q.22@gmail.com"">na.wwaffa.r.u.q.22@gmail.com</a>
<a href=""mailto:naww.affa.ruq2.2@gmail.com"">naww.affa.ruq2.2@gmail.com</a>
<a href=""mailto:na.wwa.f.f.ar.u.q22@gmail.com"">na.wwa.f.f.ar.u.q22@gmail.com</a>
<a href=""mailto:na.w.wa.f.f.aru.q.22@gmail.com"">na.w.wa.f.f.aru.q.22@gmail.com</a>
<a href=""mailto:n.aww.a.f.f.ar.uq.22@gmail.com"">n.aww.a.f.f.ar.uq.22@gmail.com</a>
<a href=""mailto:naw.w.af.faru.q22@gmail.com"">naw.w.af.faru.q22@gmail.com</a>
<a href=""mailto:n.aww.a.f.fa.r.u.q2.2@gmail.com"">n.aww.a.f.fa.r.u.q2.2@gmail.com</a>
<a href=""mailto:n.a.ww.a.f.far.u.q.2.2@gmail.com"">n.a.ww.a.f.far.u.q.2.2@gmail.com</a>
<a href=""mailto:naww.aff.a.ruq.2.2@gmail.com"">naww.aff.a.ruq.2.2@gmail.com</a>
<a href=""mailto:naw.waf.f.a.r.u.q.22@gmail.com"">naw.waf.f.a.r.u.q.22@gmail.com</a>
<a href=""mailto:na.wwaf.faru.q.2.2@gmail.com"">na.wwaf.faru.q.2.2@gmail.com</a>
<a href=""mailto:n.awwa.f.f.ar.uq2.2@gmail.com"">n.awwa.f.f.ar.uq2.2@gmail.com</a>
<a href=""mailto:n.aw.w.a.ff.ar.u.q22@gmail.com"">n.aw.w.a.ff.ar.u.q22@gmail.com</a>
<a href=""mailto:n.a.w.wa.ff.a.r.uq22@gmail.com"">n.a.w.wa.ff.a.r.uq22@gmail.com</a>
<a href=""mailto:n.a.wwa.f.fa.r.u.q22@gmail.com"">n.a.wwa.f.fa.r.u.q22@gmail.com</a>
<a href=""mailto:n.a.ww.a.f.fa.ruq2.2@gmail.com"">n.a.ww.a.f.fa.ruq2.2@gmail.com</a>
<a href=""mailto:n.a.ww.affaru.q.22@gmail.com"">n.a.ww.affaru.q.22@gmail.com</a>
<a href=""mailto:n.a.w.w.af.f.a.r.uq22@gmail.com"">n.a.w.w.af.f.a.r.uq22@gmail.com</a>
<a href=""mailto:naw.w.af.fa.ru.q.22@gmail.com"">naw.w.af.fa.ru.q.22@gmail.com</a>
<a href=""mailto:n.a.w.wa.ffa.ruq.22@gmail.com"">n.a.w.wa.ffa.ruq.22@gmail.com</a>
<a href=""mailto:n.aww.a.f.fa.r.uq22@gmail.com"">n.aww.a.f.fa.r.uq22@gmail.com</a>
<a href=""mailto:na.ww.a.f.fa.ru.q22@gmail.com"">na.ww.a.f.fa.ru.q22@gmail.com</a>
<a href=""mailto:n.awwaffa.ruq22@gmail.com"">n.awwaffa.ruq22@gmail.com</a>
<a href=""mailto:na.w.w.affa.ru.q22@gmail.com"">na.w.w.affa.ru.q22@gmail.com</a>
<a href=""mailto:na.ww.a.ff.a.r.uq.22@gmail.com"">na.ww.a.ff.a.r.uq.22@gmail.com</a>
<a href=""mailto:naw.w.a.f.f.ar.uq.22@gmail.com"">naw.w.a.f.f.ar.uq.22@gmail.com</a>
<a href=""mailto:n.aw.w.aff.a.r.uq2.2@gmail.com"">n.aw.w.aff.a.r.uq2.2@gmail.com</a>
<a href=""mailto:nawwaf.far.uq22@gmail.com"">nawwaf.far.uq22@gmail.com</a>
<a href=""mailto:naw.w.af.f.aruq.22@gmail.com"">naw.w.af.f.aruq.22@gmail.com</a>
<a href=""mailto:na.w.w.aff.a.ruq.22@gmail.com"">na.w.w.aff.a.ruq.22@gmail.com</a>
<a href=""mailto:n.a.w.wa.f.fa.ru.q.2.2@gmail.com"">n.a.w.wa.f.fa.ru.q.2.2@gmail.com</a>
<a href=""mailto:n.awwa.ffa.ruq22@gmail.com"">n.awwa.ffa.ruq22@gmail.com</a>
<a href=""mailto:n.a.ww.af.fa.r.uq.22@gmail.com"">n.a.ww.af.fa.r.uq.22@gmail.com</a>
<a href=""mailto:n.a.wwa.ff.aruq.22@gmail.com"">n.a.wwa.ff.aruq.22@gmail.com</a>
<a href=""mailto:naw.wa.f.f.a.r.uq22@gmail.com"">naw.wa.f.f.a.r.uq22@gmail.com</a>
<a href=""mailto:n.awwaf.fa.ru.q2.2@gmail.com"">n.awwaf.fa.ru.q2.2@gmail.com</a>
<a href=""mailto:naww.a.f.f.ar.u.q.2.2@gmail.com"">naww.a.f.f.ar.u.q.2.2@gmail.com</a>
<a href=""mailto:naww.aff.a.r.u.q.2.2@gmail.com"">naww.aff.a.r.u.q.2.2@gmail.com</a>
<a href=""mailto:na.wwaff.a.r.u.q.2.2@gmail.com"">na.wwaff.a.r.u.q.2.2@gmail.com</a>
<a href=""mailto:nawwaf.faruq.2.2@gmail.com"">nawwaf.faruq.2.2@gmail.com</a>
<a href=""mailto:na.ww.a.f.fa.r.uq.2.2@gmail.com"">na.ww.a.f.fa.r.uq.2.2@gmail.com</a>
<a href=""mailto:na.w.waf.f.a.ruq22@gmail.com"">na.w.waf.f.a.ruq22@gmail.com</a>
<a href=""mailto:na.ww.aff.aru.q.22@gmail.com"">na.ww.aff.aru.q.22@gmail.com</a>
<a href=""mailto:naw.w.aff.ar.uq.2.2@gmail.com"">naw.w.aff.ar.uq.2.2@gmail.com</a>
<a href=""mailto:n.aw.wa.f.fa.r.u.q2.2@gmail.com"">n.aw.wa.f.fa.r.u.q2.2@gmail.com</a>
<a href=""mailto:na.wwa.ff.a.ruq.22@gmail.com"">na.wwa.ff.a.ruq.22@gmail.com</a>
<a href=""mailto:n.aw.w.aff.ar.uq2.2@gmail.com"">n.aw.w.aff.ar.uq2.2@gmail.com</a>
<a href=""mailto:naw.wa.ffa.r.u.q2.2@gmail.com"">naw.wa.ffa.r.u.q2.2@gmail.com</a>
<a href=""mailto:naw.waff.a.r.uq2.2@gmail.com"">naw.waff.a.r.uq2.2@gmail.com</a>
<a href=""mailto:na.w.w.a.ff.ar.u.q2.2@gmail.com"">na.w.w.a.ff.ar.u.q2.2@gmail.com</a>
<a href=""mailto:n.awwa.ffaruq.22@gmail.com"">n.awwa.ffaruq.22@gmail.com</a>
<a href=""mailto:na.w.w.affaruq22@gmail.com"">na.w.w.affaruq22@gmail.com</a>
<a href=""mailto:n.a.w.w.a.ffa.ruq.2.2@gmail.com"">n.a.w.w.a.ffa.ruq.2.2@gmail.com</a>
<a href=""mailto:n.aw.wa.f.f.a.r.uq2.2@gmail.com"">n.aw.wa.f.f.a.r.uq2.2@gmail.com</a>
<a href=""mailto:n.a.wwaf.fa.ru.q.2.2@gmail.com"">n.a.wwaf.fa.ru.q.2.2@gmail.com</a>
<a href=""mailto:n.aw.w.a.ffar.uq2.2@gmail.com"">n.aw.w.a.ffar.uq2.2@gmail.com</a>
<a href=""mailto:n.aww.aff.a.ruq22@gmail.com"">n.aww.aff.a.ruq22@gmail.com</a>
<a href=""mailto:n.a.w.w.af.f.ar.uq22@gmail.com"">n.a.w.w.af.f.ar.uq22@gmail.com</a>
<a href=""mailto:na.w.w.aff.a.r.u.q.22@gmail.com"">na.w.w.aff.a.r.u.q.22@gmail.com</a>
<a href=""mailto:na.w.wa.ffaru.q.22@gmail.com"">na.w.wa.ffaru.q.22@gmail.com</a>
<a href=""mailto:naww.a.ffaru.q.2.2@gmail.com"">naww.a.ffaru.q.2.2@gmail.com</a>
<a href=""mailto:na.w.waffaru.q.2.2@gmail.com"">na.w.waffaru.q.2.2@gmail.com</a>
<a href=""mailto:na.ww.a.f.f.aru.q.2.2@gmail.com"">na.ww.a.f.f.aru.q.2.2@gmail.com</a>
<a href=""mailto:na.w.w.affa.r.uq2.2@gmail.com"">na.w.w.affa.r.uq2.2@gmail.com</a>
<a href=""mailto:n.aw.wa.f.f.a.r.uq22@gmail.com"">n.aw.wa.f.f.a.r.uq22@gmail.com</a>
<a href=""mailto:nawwa.ff.a.r.u.q22@gmail.com"">nawwa.ff.a.r.u.q22@gmail.com</a>
<a href=""mailto:n.a.wwaff.a.r.u.q.22@gmail.com"">n.a.wwaff.a.r.u.q.22@gmail.com</a>
<a href=""mailto:naww.a.f.f.a.r.u.q.2.2@gmail.com"">naww.a.f.f.a.r.u.q.2.2@gmail.com</a>
<a href=""mailto:nawwaffa.r.uq22@gmail.com"">nawwaffa.r.uq22@gmail.com</a>
<a href=""mailto:n.a.w.wa.f.f.ar.u.q2.2@gmail.com"">n.a.w.wa.f.f.ar.u.q2.2@gmail.com</a>
<a href=""mailto:na.ww.a.f.f.a.r.u.q.22@gmail.com"">na.ww.a.f.f.a.r.u.q.22@gmail.com</a>
<a href=""mailto:n.aw.w.aff.a.r.u.q22@gmail.com"">n.aw.w.aff.a.r.u.q22@gmail.com</a>
<a href=""mailto:na.w.w.a.ffa.ruq2.2@gmail.com"">na.w.w.a.ffa.ruq2.2@gmail.com</a>
<a href=""mailto:8323581630@vtext.com"">8323581630@vtext.com</a>
<a href=""mailto:kelly64chael@gmail.com"">kelly64chael@gmail.com</a>
<a href=""mailto:ke.lly6.4.chae.l@gmail.com"">ke.lly6.4.chae.l@gmail.com</a>
<a href=""mailto:kelly64ch.a.e.l@gmail.com"">kelly64ch.a.e.l@gmail.com</a>
<a href=""mailto:k.ell.y6.4.c.hael@gmail.com"">k.ell.y6.4.c.hael@gmail.com</a>
<a href=""mailto:ke.lly.6.4.cha.el@gmail.com"">ke.lly.6.4.cha.el@gmail.com</a>
<a href=""mailto:ke.l.ly.6.4.ch.a.el@gmail.com"">ke.l.ly.6.4.ch.a.el@gmail.com</a>
<a href=""mailto:k.e.l.ly6.4.chae.l@gmail.com"">k.e.l.ly6.4.chae.l@gmail.com</a>
<a href=""mailto:kelly.6.4.c.ha.e.l@gmail.com"">kelly.6.4.c.ha.e.l@gmail.com</a>
<a href=""mailto:k.elly6.4ch.ael@gmail.com"">k.elly6.4ch.ael@gmail.com</a>
<a href=""mailto:k.ell.y6.4ch.ae.l@gmail.com"">k.ell.y6.4ch.ae.l@gmail.com</a>
<a href=""mailto:ke.ll.y6.4c.ha.el@gmail.com"">ke.ll.y6.4c.ha.el@gmail.com</a>
<a href=""mailto:kel.l.y.64c.h.a.e.l@gmail.com"">kel.l.y.64c.h.a.e.l@gmail.com</a>
<a href=""mailto:ke.l.ly.64.ch.a.el@gmail.com"">ke.l.ly.64.ch.a.el@gmail.com</a>
<a href=""mailto:k.elly64c.ha.el@gmail.com"">k.elly64c.ha.el@gmail.com</a>
<a href=""mailto:k.el.l.y64c.hae.l@gmail.com"">k.el.l.y64c.hae.l@gmail.com</a>
<a href=""mailto:k.el.ly.64cha.e.l@gmail.com"">k.el.ly.64cha.e.l@gmail.com</a>
<a href=""mailto:k.e.l.l.y64.c.hae.l@gmail.com"">k.e.l.l.y64.c.hae.l@gmail.com</a>
<a href=""mailto:k.e.ll.y.64c.hae.l@gmail.com"">k.e.ll.y.64c.hae.l@gmail.com</a>
<a href=""mailto:k.e.lly64.c.hae.l@gmail.com"">k.e.lly64.c.hae.l@gmail.com</a>
<a href=""mailto:k.e.l.ly64ch.a.e.l@gmail.com"">k.e.l.ly64ch.a.e.l@gmail.com</a>
<a href=""mailto:kelly.64ch.ae.l@gmail.com"">kelly.64ch.ae.l@gmail.com</a>
<a href=""mailto:ke.l.l.y.6.4ch.ael@gmail.com"">ke.l.l.y.6.4ch.ael@gmail.com</a>
<a href=""mailto:k.e.l.l.y.6.4.cha.e.l@gmail.com"">k.e.l.l.y.6.4.cha.e.l@gmail.com</a>
<a href=""mailto:k.el.ly.6.4cha.el@gmail.com"">k.el.ly.6.4cha.el@gmail.com</a>
<a href=""mailto:kel.ly.64c.hae.l@gmail.com"">kel.ly.64c.hae.l@gmail.com</a>
<a href=""mailto:kelly6.4cha.e.l@gmail.com"">kelly6.4cha.e.l@gmail.com</a>
<a href=""mailto:k.elly.64c.ha.e.l@gmail.com"">k.elly.64c.ha.e.l@gmail.com</a>
<a href=""mailto:k.elly.6.4ch.a.e.l@gmail.com"">k.elly.6.4ch.a.e.l@gmail.com</a>
<a href=""mailto:k.ell.y.6.4.c.hael@gmail.com"">k.ell.y.6.4.c.hael@gmail.com</a>
<a href=""mailto:k.e.lly64.ch.a.e.l@gmail.com"">k.e.lly64.ch.a.e.l@gmail.com</a>
<a href=""mailto:kelly.64c.hael@gmail.com"">kelly.64c.hael@gmail.com</a>
<a href=""mailto:k.el.ly6.4.ch.a.el@gmail.com"">k.el.ly6.4.ch.a.el@gmail.com</a>
<a href=""mailto:ke.ll.y.64cha.el@gmail.com"">ke.ll.y.64cha.el@gmail.com</a>
<a href=""mailto:k.e.l.ly.64chael@gmail.com"">k.e.l.ly.64chael@gmail.com</a>
<a href=""mailto:k.e.lly.6.4.chael@gmail.com"">k.e.lly.6.4.chael@gmail.com</a>
<a href=""mailto:ke.l.l.y6.4ch.a.e.l@gmail.com"">ke.l.l.y6.4ch.a.e.l@gmail.com</a>
<a href=""mailto:kel.ly.6.4chael@gmail.com"">kel.ly.6.4chael@gmail.com</a>
<a href=""mailto:ke.lly6.4.c.ha.el@gmail.com"">ke.lly6.4.c.ha.el@gmail.com</a>
<a href=""mailto:ke.ll.y64ch.ae.l@gmail.com"">ke.ll.y64ch.ae.l@gmail.com</a>
<a href=""mailto:kel.l.y.64c.h.ae.l@gmail.com"">kel.l.y.64c.h.ae.l@gmail.com</a>
<a href=""mailto:k.elly6.4c.ha.el@gmail.com"">k.elly6.4c.ha.el@gmail.com</a>
<a href=""mailto:k.e.ll.y.64.cha.e.l@gmail.com"">k.e.ll.y.64.cha.e.l@gmail.com</a>
<a href=""mailto:k.el.ly64ch.a.el@gmail.com"">k.el.ly64ch.a.el@gmail.com</a>
<a href=""mailto:kell.y6.4.ch.ae.l@gmail.com"">kell.y6.4.ch.ae.l@gmail.com</a>
<a href=""mailto:k.ell.y6.4.ch.a.e.l@gmail.com"">k.ell.y6.4.ch.a.e.l@gmail.com</a>
<a href=""mailto:kel.l.y64.ch.ael@gmail.com"">kel.l.y64.ch.ael@gmail.com</a>
<a href=""mailto:ke.l.ly6.4ch.ael@gmail.com"">ke.l.ly6.4ch.ael@gmail.com</a>
<a href=""mailto:k.e.l.l.y.6.4.cha.el@gmail.com"">k.e.l.l.y.6.4.cha.el@gmail.com</a>
<a href=""mailto:k.e.l.ly6.4.c.h.ae.l@gmail.com"">k.e.l.ly6.4.c.h.ae.l@gmail.com</a>
<a href=""mailto:ke.l.ly6.4.c.ha.el@gmail.com"">ke.l.ly6.4.c.ha.el@gmail.com</a>
<a href=""mailto:k.el.ly.64.c.h.a.e.l@gmail.com"">k.el.ly.64.c.h.a.e.l@gmail.com</a>
<a href=""mailto:k.e.lly.6.4cha.e.l@gmail.com"">k.e.lly.6.4cha.e.l@gmail.com</a>
<a href=""mailto:k.e.l.ly.64.c.h.a.el@gmail.com"">k.e.l.ly.64.c.h.a.el@gmail.com</a>
<a href=""mailto:k.el.l.y.6.4c.h.a.el@gmail.com"">k.el.l.y.6.4c.h.a.el@gmail.com</a>
<a href=""mailto:kell.y64c.h.ae.l@gmail.com"">kell.y64c.h.ae.l@gmail.com</a>
<a href=""mailto:k.el.ly6.4cha.e.l@gmail.com"">k.el.ly6.4cha.e.l@gmail.com</a>
<a href=""mailto:ke.ll.y64.c.h.a.e.l@gmail.com"">ke.ll.y64.c.h.a.e.l@gmail.com</a>
<a href=""mailto:kell.y.6.4.ch.ae.l@gmail.com"">kell.y.6.4.ch.ae.l@gmail.com</a>
<a href=""mailto:ke.lly6.4c.ha.el@gmail.com"">ke.lly6.4c.ha.el@gmail.com</a>
<a href=""mailto:kel.l.y.64.c.h.a.e.l@gmail.com"">kel.l.y.64.c.h.a.e.l@gmail.com</a>
<a href=""mailto:kelly64c.ha.el@gmail.com"">kelly64c.ha.el@gmail.com</a>
<a href=""mailto:k.el.ly6.4c.h.ae.l@gmail.com"">k.el.ly6.4c.h.ae.l@gmail.com</a>
<a href=""mailto:ke.ll.y64c.hae.l@gmail.com"">ke.ll.y64c.hae.l@gmail.com</a>
<a href=""mailto:k.e.ll.y64c.h.a.el@gmail.com"">k.e.ll.y64c.h.a.el@gmail.com</a>
<a href=""mailto:ke.ll.y6.4.c.ha.el@gmail.com"">ke.ll.y6.4.c.ha.el@gmail.com</a>
<a href=""mailto:k.e.ll.y64.chael@gmail.com"">k.e.ll.y64.chael@gmail.com</a>
<a href=""mailto:k.el.l.y6.4.c.h.ae.l@gmail.com"">k.el.l.y6.4.c.h.ae.l@gmail.com</a>
<a href=""mailto:k.elly6.4.c.hae.l@gmail.com"">k.elly6.4.c.hae.l@gmail.com</a>
<a href=""mailto:k.el.ly6.4.cha.e.l@gmail.com"">k.el.ly6.4.cha.e.l@gmail.com</a>
<a href=""mailto:k.el.ly.6.4c.h.ae.l@gmail.com"">k.el.ly.6.4c.h.ae.l@gmail.com</a>
<a href=""mailto:k.e.l.l.y.6.4.ch.ae.l@gmail.com"">k.e.l.l.y.6.4.ch.ae.l@gmail.com</a>
<a href=""mailto:k.el.l.y.64cha.el@gmail.com"">k.el.l.y.64cha.el@gmail.com</a>
<a href=""mailto:kel.l.y6.4chael@gmail.com"">kel.l.y6.4chael@gmail.com</a>
<a href=""mailto:kel.ly.64.ch.a.el@gmail.com"">kel.ly.64.ch.a.el@gmail.com</a>
<a href=""mailto:kel.ly6.4c.h.a.e.l@gmail.com"">kel.ly6.4c.h.a.e.l@gmail.com</a>
<a href=""mailto:kel.l.y64c.h.ae.l@gmail.com"">kel.l.y64c.h.ae.l@gmail.com</a>
<a href=""mailto:k.el.ly64ch.ael@gmail.com"">k.el.ly64ch.ael@gmail.com</a>
<a href=""mailto:k.elly.6.4c.h.a.e.l@gmail.com"">k.elly.6.4c.h.a.e.l@gmail.com</a>
<a href=""mailto:ke.ll.y.64c.ha.el@gmail.com"">ke.ll.y.64c.ha.el@gmail.com</a>
<a href=""mailto:ke.lly64.ch.ae.l@gmail.com"">ke.lly64.ch.ae.l@gmail.com</a>
<a href=""mailto:ke.lly64.c.h.ae.l@gmail.com"">ke.lly64.c.h.ae.l@gmail.com</a>
<a href=""mailto:k.e.l.ly6.4ch.ae.l@gmail.com"">k.e.l.ly6.4ch.ae.l@gmail.com</a>
<a href=""mailto:k.el.l.y.64c.hael@gmail.com"">k.el.l.y.64c.hael@gmail.com</a>
<a href=""mailto:kel.l.y.64.chae.l@gmail.com"">kel.l.y.64.chae.l@gmail.com</a>
<a href=""mailto:ke.l.l.y.6.4.cha.e.l@gmail.com"">ke.l.l.y.6.4.cha.e.l@gmail.com</a>
<a href=""mailto:k.e.l.l.y.6.4ch.a.e.l@gmail.com"">k.e.l.l.y.6.4ch.a.e.l@gmail.com</a>
<a href=""mailto:k.e.lly64.cha.e.l@gmail.com"">k.e.lly64.cha.e.l@gmail.com</a>
<a href=""mailto:ke.l.ly.64.chae.l@gmail.com"">ke.l.ly.64.chae.l@gmail.com</a>
<a href=""mailto:k.el.ly6.4ch.a.el@gmail.com"">k.el.ly6.4ch.a.el@gmail.com</a>
<a href=""mailto:k.el.ly64c.ha.el@gmail.com"">k.el.ly64c.ha.el@gmail.com</a>
<a href=""mailto:k.elly64.ch.ael@gmail.com"">k.elly64.ch.ael@gmail.com</a>
<a href=""mailto:kel.ly64chae.l@gmail.com"">kel.ly64chae.l@gmail.com</a>
<a href=""mailto:k.el.l.y6.4c.ha.el@gmail.com"">k.el.l.y6.4c.ha.el@gmail.com</a>
<a href=""mailto:ke.ll.y.6.4.c.h.a.el@gmail.com"">ke.ll.y.6.4.c.h.a.el@gmail.com</a>
<a href=""mailto:kel.l.y6.4c.h.a.e.l@gmail.com"">kel.l.y6.4c.h.a.e.l@gmail.com</a>
<a href=""mailto:k.e.lly64.c.h.a.e.l@gmail.com"">k.e.lly64.c.h.a.e.l@gmail.com</a>
<a href=""mailto:ke.l.ly64.ch.a.e.l@gmail.com"">ke.l.ly64.ch.a.e.l@gmail.com</a>
<a href=""mailto:ke.l.ly.6.4ch.ae.l@gmail.com"">ke.l.ly.6.4ch.ae.l@gmail.com</a>
<a href=""mailto:kel.ly.6.4.c.h.a.el@gmail.com"">kel.ly.6.4.c.h.a.el@gmail.com</a>
<a href=""mailto:k.elly64.c.h.ael@gmail.com"">k.elly64.c.h.ael@gmail.com</a>
<a href=""mailto:k.e.ll.y64c.h.ae.l@gmail.com"">k.e.ll.y64c.h.ae.l@gmail.com</a>
<a href=""mailto:ke.ll.y64cha.e.l@gmail.com"">ke.ll.y64cha.e.l@gmail.com</a>
<a href=""mailto:kell.y.6.4.c.hae.l@gmail.com"">kell.y.6.4.c.hae.l@gmail.com</a>
<a href=""mailto:kell.y64c.hael@gmail.com"">kell.y64c.hael@gmail.com</a>
<a href=""mailto:kelly.6.4.chae.l@gmail.com"">kelly.6.4.chae.l@gmail.com</a>
<a href=""mailto:ke.lly.64.ch.a.el@gmail.com"">ke.lly.64.ch.a.el@gmail.com</a>
<a href=""mailto:ke.l.ly64.ch.a.el@gmail.com"">ke.l.ly64.ch.a.el@gmail.com</a>
<a href=""mailto:kell.y.6.4ch.ae.l@gmail.com"">kell.y.6.4ch.ae.l@gmail.com</a>
<a href=""mailto:ke.l.ly.64cha.el@gmail.com"">ke.l.ly.64cha.el@gmail.com</a>
<a href=""mailto:ke.ll.y6.4ch.ael@gmail.com"">ke.ll.y6.4ch.ael@gmail.com</a>
<a href=""mailto:k.e.ll.y64ch.ael@gmail.com"">k.e.ll.y64ch.ael@gmail.com</a>
<a href=""mailto:k.e.lly.64c.ha.e.l@gmail.com"">k.e.lly.64c.ha.e.l@gmail.com</a>
<a href=""mailto:k.e.ll.y6.4c.h.ae.l@gmail.com"">k.e.ll.y6.4c.h.ae.l@gmail.com</a>
<a href=""mailto:k.e.ll.y.64.cha.el@gmail.com"">k.e.ll.y.64.cha.el@gmail.com</a>
<a href=""mailto:k.elly6.4ch.a.el@gmail.com"">k.elly6.4ch.a.el@gmail.com</a>
<a href=""mailto:k.ell.y64.c.h.ael@gmail.com"">k.ell.y64.c.h.ael@gmail.com</a>
<a href=""mailto:ke.lly.64.ch.a.e.l@gmail.com"">ke.lly.64.ch.a.e.l@gmail.com</a>
<a href=""mailto:k.e.ll.y.6.4.ch.a.e.l@gmail.com"">k.e.ll.y.6.4.ch.a.e.l@gmail.com</a>
<a href=""mailto:ke.l.ly64.c.ha.e.l@gmail.com"">ke.l.ly64.c.ha.e.l@gmail.com</a>
<a href=""mailto:ke.ll.y64.c.h.a.el@gmail.com"">ke.ll.y64.c.h.a.el@gmail.com</a>
<a href=""mailto:ke.l.ly6.4.c.ha.e.l@gmail.com"">ke.l.ly6.4.c.ha.e.l@gmail.com</a>
<a href=""mailto:k.el.ly.6.4chael@gmail.com"">k.el.ly.6.4chael@gmail.com</a>
<a href=""mailto:k.e.l.ly64.c.hael@gmail.com"">k.e.l.ly64.c.hael@gmail.com</a>
<a href=""mailto:k.el.ly.64chae.l@gmail.com"">k.el.ly.64chae.l@gmail.com</a>
<a href=""mailto:k.el.ly.6.4c.h.a.e.l@gmail.com"">k.el.ly.6.4c.h.a.e.l@gmail.com</a>
<a href=""mailto:k.el.ly.6.4.c.ha.el@gmail.com"">k.el.ly.6.4.c.ha.el@gmail.com</a>
<a href=""mailto:k.el.l.y.6.4c.h.a.e.l@gmail.com"">k.el.l.y.6.4c.h.a.e.l@gmail.com</a>
<a href=""mailto:k.elly.64chael@gmail.com"">k.elly.64chael@gmail.com</a>
<a href=""mailto:k.e.l.ly6.4.c.h.a.e.l@gmail.com"">k.e.l.ly6.4.c.h.a.e.l@gmail.com</a>
<a href=""mailto:k.el.l.y.64c.h.ael@gmail.com"">k.el.l.y.64c.h.ael@gmail.com</a>
<a href=""mailto:ke.l.l.y6.4c.h.a.el@gmail.com"">ke.l.l.y6.4c.h.a.el@gmail.com</a>
<a href=""mailto:k.e.lly64ch.a.e.l@gmail.com"">k.e.lly64ch.a.e.l@gmail.com</a>
<a href=""mailto:kell.y.6.4chae.l@gmail.com"">kell.y.6.4chae.l@gmail.com</a>
<a href=""mailto:ke.l.l.y.6.4cha.e.l@gmail.com"">ke.l.l.y.6.4cha.e.l@gmail.com</a>
<a href=""mailto:kell.y64c.h.a.el@gmail.com"">kell.y64c.h.a.el@gmail.com</a>
<a href=""mailto:kell.y64cha.el@gmail.com"">kell.y64cha.el@gmail.com</a>
<a href=""mailto:ke.l.ly64.c.hael@gmail.com"">ke.l.ly64.c.hael@gmail.com</a>
<a href=""mailto:kel.ly.64.c.h.ael@gmail.com"">kel.ly.64.c.h.ael@gmail.com</a>
<a href=""mailto:kelly.64.ch.ael@gmail.com"">kelly.64.ch.ael@gmail.com</a>
<a href=""mailto:k.el.ly6.4c.hae.l@gmail.com"">k.el.ly6.4c.hae.l@gmail.com</a>
<a href=""mailto:k.e.ll.y.6.4ch.ael@gmail.com"">k.e.ll.y.6.4ch.ael@gmail.com</a>
<a href=""mailto:ke.l.ly.64ch.a.e.l@gmail.com"">ke.l.ly.64ch.a.e.l@gmail.com</a>
<a href=""mailto:k.elly64.c.h.ae.l@gmail.com"">k.elly64.c.h.ae.l@gmail.com</a>
<a href=""mailto:kelly6.4.ch.ael@gmail.com"">kelly6.4.ch.ael@gmail.com</a>
<a href=""mailto:kel.ly.6.4ch.a.e.l@gmail.com"">kel.ly.6.4ch.a.e.l@gmail.com</a>
<a href=""mailto:kel.ly6.4.c.hael@gmail.com"">kel.ly6.4.c.hael@gmail.com</a>
<a href=""mailto:kell.y6.4.cha.e.l@gmail.com"">kell.y6.4.cha.e.l@gmail.com</a>
<a href=""mailto:k.ell.y.6.4.c.h.a.el@gmail.com"">k.ell.y.6.4.c.h.a.el@gmail.com</a>
<a href=""mailto:k.ell.y6.4.ch.ae.l@gmail.com"">k.ell.y6.4.ch.ae.l@gmail.com</a>
<a href=""mailto:k.ell.y6.4.c.ha.e.l@gmail.com"">k.ell.y6.4.c.ha.e.l@gmail.com</a>
<a href=""mailto:ke.l.ly.64c.ha.el@gmail.com"">ke.l.ly.64c.ha.el@gmail.com</a>
<a href=""mailto:k.el.ly.6.4chae.l@gmail.com"">k.el.ly.6.4chae.l@gmail.com</a>
<a href=""mailto:ke.l.ly.64.c.h.a.el@gmail.com"">ke.l.ly.64.c.h.a.el@gmail.com</a>
<a href=""mailto:k.e.l.ly6.4chae.l@gmail.com"">k.e.l.ly6.4chae.l@gmail.com</a>
<a href=""mailto:k.e.l.ly.64.ch.a.e.l@gmail.com"">k.e.l.ly.64.ch.a.e.l@gmail.com</a>
<a href=""mailto:ke.l.l.y.6.4.c.h.a.e.l@gmail.com"">ke.l.l.y.6.4.c.h.a.e.l@gmail.com</a>
<a href=""mailto:kelly6.4.c.h.a.e.l@gmail.com"">kelly6.4.c.h.a.e.l@gmail.com</a>
<a href=""mailto:k.e.ll.y64.ch.ae.l@gmail.com"">k.e.ll.y64.ch.ae.l@gmail.com</a>
<a href=""mailto:k.e.l.l.y6.4.c.hael@gmail.com"">k.e.l.l.y6.4.c.hael@gmail.com</a>
<a href=""mailto:k.el.ly64.c.h.a.el@gmail.com"">k.el.ly64.c.h.a.el@gmail.com</a>
<a href=""mailto:kel.l.y64.ch.a.el@gmail.com"">kel.l.y64.ch.a.el@gmail.com</a>
<a href=""mailto:ke.ll.y64.chael@gmail.com"">ke.ll.y64.chael@gmail.com</a>
<a href=""mailto:k.e.l.l.y.64ch.ae.l@gmail.com"">k.e.l.l.y.64ch.ae.l@gmail.com</a>
<a href=""mailto:ke.l.l.y.6.4chae.l@gmail.com"">ke.l.l.y.6.4chae.l@gmail.com</a>
<a href=""mailto:k.elly64ch.a.el@gmail.com"">k.elly64ch.a.el@gmail.com</a>
<a href=""mailto:k.e.l.ly64.cha.e.l@gmail.com"">k.e.l.ly64.cha.e.l@gmail.com</a>
<a href=""mailto:k.el.l.y64.cha.e.l@gmail.com"">k.el.l.y64.cha.e.l@gmail.com</a>
<a href=""mailto:ke.ll.y.64ch.a.el@gmail.com"">ke.ll.y.64ch.a.el@gmail.com</a>
<a href=""mailto:kell.y6.4c.h.a.e.l@gmail.com"">kell.y6.4c.h.a.e.l@gmail.com</a>
<a href=""mailto:ke.lly64.cha.e.l@gmail.com"">ke.lly64.cha.e.l@gmail.com</a>
<a href=""mailto:kell.y64c.hae.l@gmail.com"">kell.y64c.hae.l@gmail.com</a>
<a href=""mailto:k.ell.y.6.4c.ha.e.l@gmail.com"">k.ell.y.6.4c.ha.e.l@gmail.com</a>
<a href=""mailto:ke.l.l.y64.c.h.a.el@gmail.com"">ke.l.l.y64.c.h.a.el@gmail.com</a>
<a href=""mailto:k.e.ll.y6.4.chael@gmail.com"">k.e.ll.y6.4.chael@gmail.com</a>
<a href=""mailto:kelly6.4ch.ae.l@gmail.com"">kelly6.4ch.ae.l@gmail.com</a>
<a href=""mailto:k.el.ly6.4c.h.ael@gmail.com"">k.el.ly6.4c.h.ael@gmail.com</a>
<a href=""mailto:kell.y64.chael@gmail.com"">kell.y64.chael@gmail.com</a>
<a href=""mailto:kel.ly64.c.h.ael@gmail.com"">kel.ly64.c.h.ael@gmail.com</a>
<a href=""mailto:k.elly.6.4ch.ae.l@gmail.com"">k.elly.6.4ch.ae.l@gmail.com</a>
<a href=""mailto:ke.l.ly64.c.h.ael@gmail.com"">ke.l.ly64.c.h.ael@gmail.com</a>
<a href=""mailto:k.elly64.c.hael@gmail.com"">k.elly64.c.hael@gmail.com</a>
<a href=""mailto:k.e.lly6.4.ch.a.e.l@gmail.com"">k.e.lly6.4.ch.a.e.l@gmail.com</a>
<a href=""mailto:k.elly6.4c.h.ael@gmail.com"">k.elly6.4c.h.ael@gmail.com</a>
<a href=""mailto:k.e.ll.y.6.4c.hael@gmail.com"">k.e.ll.y.6.4c.hael@gmail.com</a>
<a href=""mailto:k.el.l.y64ch.ae.l@gmail.com"">k.el.l.y64ch.ae.l@gmail.com</a>
<a href=""mailto:kelly6.4chael@gmail.com"">kelly6.4chael@gmail.com</a>
<a href=""mailto:ke.lly6.4.c.h.a.el@gmail.com"">ke.lly6.4.c.h.a.el@gmail.com</a>
<a href=""mailto:k.e.ll.y.6.4.ch.ael@gmail.com"">k.e.ll.y.6.4.ch.ael@gmail.com</a>
<a href=""mailto:k.ell.y64.cha.el@gmail.com"">k.ell.y64.cha.el@gmail.com</a>
<a href=""mailto:k.ell.y.6.4.c.hae.l@gmail.com"">k.ell.y.6.4.c.hae.l@gmail.com</a>
<a href=""mailto:ke.l.l.y.64c.h.a.e.l@gmail.com"">ke.l.l.y.64c.h.a.e.l@gmail.com</a>
<a href=""mailto:ke.ll.y.64.ch.ae.l@gmail.com"">ke.ll.y.64.ch.ae.l@gmail.com</a>
<a href=""mailto:kel.ly.64.ch.a.e.l@gmail.com"">kel.ly.64.ch.a.e.l@gmail.com</a>
<a href=""mailto:k.el.ly.64.c.h.a.el@gmail.com"">k.el.ly.64.c.h.a.el@gmail.com</a>
<a href=""mailto:ke.l.l.y64.ch.ae.l@gmail.com"">ke.l.l.y64.ch.ae.l@gmail.com</a>
<a href=""mailto:ke.l.ly6.4cha.el@gmail.com"">ke.l.ly6.4cha.el@gmail.com</a>
<a href=""mailto:k.e.l.ly.6.4c.ha.el@gmail.com"">k.e.l.ly.6.4c.ha.el@gmail.com</a>
<a href=""mailto:kell.y.6.4.c.h.ael@gmail.com"">kell.y.6.4.c.h.ael@gmail.com</a>
<a href=""mailto:k.e.ll.y.64.c.hael@gmail.com"">k.e.ll.y.64.c.hael@gmail.com</a>
<a href=""mailto:ke.lly6.4.ch.a.el@gmail.com"">ke.lly6.4.ch.a.el@gmail.com</a>
<a href=""mailto:ke.l.l.y6.4.ch.ae.l@gmail.com"">ke.l.l.y6.4.ch.ae.l@gmail.com</a>"
Xn9ByAZN,Nery,Rnery,Bash,Friday 29th of September 2023 12:48:02 AM CDT,"#!/usr/bin/env bash

ptf_dir=""/opt/ptf""

# Se tá logado como root
verificar_usuario() {
  if [ ""$EUID"" -ne 0 ]; then
    echo ""Este script deve ser executado como root.""
    exit 1
  fi
}

# Se o diretório do PTF existe
verificar_diretorio() {
  if [ ! -d ""$ptf_dir"" ]; then
    echo ""O Pentest Framework (PTF) não parece estar instalado.""
    exit 1
  fi
}

# Confirmação da desinstalação
desinstalar() {
  read -p ""Tem certeza de que deseja desinstalar o PTF? (y/n): "" confirm
  if [ ""$confirm"" != ""y"" ]; then
    echo ""Desinstalação cancelada.""
    exit 0
  fi

  rm -rf ""$ptf_dir""
}

# A remoção foi bem-sucedida?
verificar_remocao() {
  if [ $? -eq 0 ]; then
    echo ""O PTF foi desinstalado com sucesso.""
  else
    echo ""Ocorreu um erro durante a desinstalação do PTF.""
  fi

  exit 0
}

verificar_usuario
verificar_diretorio
desinstalar
verificar_remocao
"
huu0vn3a,freebitco.in,coinwalk,JavaScript,Thursday 28th of September 2023 11:52:26 PM CDT,"var smmly = parseFloat(document.getElementById('balance').innerHTML);
var nudle = Number((0.00000001).toFixed(8));
var blert = nudle;
var taget = 1.0;
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var junky = smmly;
var bear = true;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;

 function getR(minz, maxz) {
  minz = Math.ceil(minz);
  maxz = Math.floor(maxz);
  return Math.floor(Math.random() * (maxz - minz + 1)) + minz;
}
 
function makeid(length) {
    var result = '';
    var cha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    var chaLength = cha.length;
    for ( var ion = 0; ion < length; ion++ ){
      result += cha.charAt(Math.floor(Math.random() *
 chaLength));
   }
   return result;
}
 
function bogus(){
nemo = document.getElementById('balance').innerHTML;
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+(bpop+nudle)))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+(bpop+nudle)))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) {
    blert = nudle;
    fatt = 1;
    circuit = 0;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
return blert;
}

var myseed;
 
function get() {
var xol = getR(1,3);
if (xol==1) {
myseed = (makeid(5));
}
if (xol==2) {
myseed = (makeid(7));
}
if (xol==3) {
myseed = (makeid(9));
}
var xox = document.getElementById('balance').innerHTML;
var zuggbe = bogus();
if ((xox==junky)&&(bear)){
document.getElementById('next_client_seed').value = myseed;
document.getElementById('double_your_btc_win_chance').value = 47.50;
document.getElementById('double_your_btc_payout_multiplier').value = 2.00;
parseFloat(document.getElementById('double_your_btc_stake').value = zuggbe);
parseFloat(document.getElementById('win_amount').innerHTML = zuggbe);
document.getElementById('double_your_btc_bet_lo_button').click();
bear = false;
}
if ((xox!=junky)&&(!bear)){
junky = parseFloat(xox);
bear = true;
}
if (xox>=taget) {
return;
}
setTimeout(() => get(), 1);
}
get();"
HUfcB1Uk,snowybot jd,coinwalk,JavaScript,Thursday 28th of September 2023 11:51:00 PM CDT,please don't play at just-dice.com its a scam site my lawyer told me so
vty1YLV8,snowybot jd,coinwalk,JavaScript,Thursday 28th of September 2023 11:49:31 PM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/144000).toFixed(8));
var blert = nudle;
var taget = (smmly*2000);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
 
 
 
function get(){
console.clear();
nemo = document.getElementById('pct_balance').value;
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+(bpop+nudle)))&&(nemo!=circuit)&&(nemo>sysch)) {
	blert = blert*2;
    	circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+(bpop+nudle)))&&(nemo!=circuit)&&(nemo<sysch)) {
	blert = blert*2;
	fatt = 0;
    	circuit = parseFloat(nemo);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) {
    	blert = nudle;
    	fatt = 1;
    	circuit = 0;
    	lol = true;
    	sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
distj = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(distj);
$('#a_lo').click();
var dog = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1);
}
get();"
KCeAY8t1,Analisador SOL,EduPsEudo,Python,Thursday 28th of September 2023 10:18:35 PM CDT,"import re
import webbrowser
import time
  
# Definindo caminho do chrome
chrome_path=""C:\Program Files\Google\Chrome\Application\chrome.exe""
webbrowser.register('chrome', None,webbrowser.BackgroundBrowser(chrome_path))

# dicionário para mapear os nomes dos tokens com as expressões regulares
regex_tokens = {
    'LOOP': r'loop',
    'BROWSER': r'chrome|firefox|edge|safari',
    'LINK': r'https?://[^\s]+',
    # 'TEMPO': r'\d+',
    'TEMPO': r'15_min|20_min|1_hora|1_dia|2_dias|sem_limite',
    'ESPACO': r'\s+',
    'VEZES': r'1|2|3|4|5',
    'PV': r';'
}

def lexer(codigo):
  # lista para armazenar os tokens
  tokens = []
  
  # enquanto houver código para analisar
  while codigo:
    # variável para indicar se algum token foi reconhecido
    match = False
    # para cada nome e expressão regular de token
    for nome, regex in regex_tokens.items():
      # tenta encontrar um padrão no início da string
      resultado = re.match(regex, codigo)
      # se encontrou
      if resultado:
        # extrai o texto que corresponde ao token
        lexema = resultado.group()
        # adiciona uma tupla com o nome e o lexema à lista de tokens
        tokens.append((nome, lexema))
        # remove o lexema do código
        codigo = codigo[len(lexema):]
        # marca que houve um reconhecimento
        match = True
        # sai do loop interno
        break
    # se não houve reconhecimento
    if not match:
      # lança uma exceção com a parte inválida do código
      raise Exception(f'Caractere inválido: {codigo[0]}')
  # retorna a lista de tokens
  return tokens

class NoComando:
  # construtor da classe
    def __init__(self, browser, link, tempo):
    # atributos da classe
        self.browser = browser
        self.link = link
        self.tempo = tempo
    def __str__(self) -> str:
        return self.browser + "","" + self.link + "","" + self.tempo

def reconhece(tokens, lookahead, tipo):
    print(f'lh: {lookahead}')
    # print(tokens[lookahead])
    # print(tipo)
    return True if tokens[lookahead][0] == tipo and lookahead < len(tokens) else False

def parser(tokens):
  # verifica se a lista de tokens tem o tamanho esperado (5)
    
    lookahead = 0
    # aux = len(tokens)

    browser = -1
    link = -1
    tempo = -1

    if reconhece(tokens, lookahead, 'LOOP') and reconhece(tokens, lookahead + 1, 'ESPACO'):
        lookahead += 2
        print('inicio')
        if reconhece(tokens, lookahead, 'VEZES'):
            lookahead += 1
            print('vezes')
            if reconhece(tokens, lookahead, 'ESPACO'):
                lookahead += 1
                print('espaco')
                if reconhece(tokens, lookahead, 'BROWSER'):
                    browser = lookahead
                    lookahead += 1
                    if reconhece(tokens, lookahead, 'ESPACO'):
                        lookahead += 1
                        if reconhece(tokens, lookahead, 'LINK'):
                            link = lookahead
                            lookahead += 1
                            if reconhece(tokens, lookahead, 'ESPACO'):
                                lookahead += 1
                                if reconhece(tokens, lookahead, 'TEMPO'):
                                    tempo = lookahead
                                    lookahead += 1
                                    if reconhece(tokens, lookahead, 'PV'):
                                        # print(f'browser: {tokens[""BROWSER""][1]}')
                                        no = NoComando(tokens[browser][1], tokens[link][1], tokens[tempo][1])
                                        print(no)
                                        return no                         # Checar depois se é um EOF ou \n, ao invés de terminar aqui
    print('Sintaxe inválida')
    return False

    ########################

def executar(arvore):
  # extrai os atributos do nó da árvore
  browser = arvore.browser
  print(f'Browser: {browser}')
  link = arvore.link
  print(f'Link: {link}')
  tempo = int(arvore.tempo)
  print(f'Tempo: {tempo}')
  # abre o navegador com o link especificado
  webbrowser.get(browser).open(link)
  # espera o tempo especificado em segundos
  time.sleep(tempo)
  # fecha o navegador
  webbrowser.get(browser).close()

# lê uma string do usuário
codigo = input('Digite um comando: ')
# chama o lexer para gerar os tokens
tokens = lexer(codigo)
# chama o parser para gerar a árvore sintática
arvore = parser(tokens)
# chama a função para executar o comando

print(f'Tokens: {tokens}')
print(f'Arvore: {arvore}')

# executar(arvore)

# chrome https://www.youtube.com/ 15_min
# loop 2 chrome https://www.youtube.com/ 15_min;

"
ny2zEMut,compliments,akuheish,JSON,Thursday 28th of September 2023 10:05:37 PM CDT,"[`you have a good sense of humor`,`you have a great smile`,`you have beautiful brown eyes`,`you are uplifting and fun`,`you look fabulous today`,`you have a great positive attitude`,`you understand me better than others`,`i am happy to be with you`,`you are cute when you laugh`,`you are my best friend`,`i enjoy chatting with you`,`i admire your kindness`,`your smile brightens my day`,`i appreciate that you go to the store for us`.`i appreciate that we are still together`,`i love you`]"
05sHLyXs,trial snowybot emanual,coinwalk,JavaScript,Thursday 28th of September 2023 09:40:09 PM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/8000).toFixed(8));
var blert = nudle;
var taget = (smmly*2000);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1000;
var lol = true
var synch = ((Math.floor(smmly/bogs))*bogs);
var distj = ((blert*1).toFixed(8));
var nemo = parseFloat(document.getElementById('pct_balance').value);
 
 
 
function get(){
console.clear();
nemo = document.getElementById('pct_balance').value;
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+(bpop+nudle)))&&(nemo!=circuit)&&(nemo<(sysch+(bogs*3)))) {
	blert = blert*2;
    	circuit = parseFloat(nemo);
}
if ((nemo>(sysch+(bogs*2)))&&(nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+(bpop+nudle)))) {
	blert = nudle*2;
	fatt = 1;
	lol = false; 
	circuit = parseFloat(nemo);
	sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo<(sysch-bogs))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) {
	blert = nudle;
    	fatt = 1000;
    	circuit = 0;
    	lol = true;
    	sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) {
    	blert = nudle;
    	fatt = 1000;
    	circuit = 0;
    	lol = true;
    	sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
distj = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(distj);
$('#a_lo').click();
var dog = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1);
}
get();"
ckYqYfXi,fbtc,coinwalk,JavaScript,Thursday 28th of September 2023 09:30:15 PM CDT,"var smmly = parseFloat(document.getElementById('balance').innerHTML);
var nudle = Number((0.00000001).toFixed(8));
var blert = nudle;
var taget = 1.0;
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1000;
var lol = true
var synch = ((Math.floor(smmly/bogs))*bogs);
var junky = smmly;
var bear = true;
var distj = ((blert*1).toFixed(8));
var nemo = parseFloat(document.getElementById('balance').innerHTML);

 
function bogus(){
nemo = document.getElementById('balance').innerHTML;
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+(bpop+nudle)))&&(nemo!=circuit)&&(nemo<(sysch+(bogs*3)))) {
	blert = blert*2;
    	circuit = parseFloat(nemo);
}
if ((nemo>(sysch+(bogs*2)))&&(nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+(bpop+nudle)))) {
	blert = nudle*2;
	fatt = 1;
	lol = false; 
	circuit = parseFloat(nemo);
	sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo<(sysch-bogs))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) {
	blert = nudle;
    	fatt = 1000;
    	circuit = 0;
    	lol = true;
    	sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) {
    	blert = nudle;
    	fatt = 1000;
    	circuit = 0;
    	lol = true;
    	sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
return blert;
}

 
function get() {
var xox = document.getElementById('balance').innerHTML;
var zuggbe = bogus();
if ((xox==junky)&&(bear)){
document.getElementById('double_your_btc_win_chance').value = 47.50;
document.getElementById('double_your_btc_payout_multiplier').value = 2.00;
parseFloat(document.getElementById('double_your_btc_stake').value = zuggbe);
parseFloat(document.getElementById('win_amount').innerHTML = zuggbe);
document.getElementById('double_your_btc_bet_lo_button').click();
bear = false;
}
if ((xox!=junky)&&(!bear)){
junky = parseFloat(xox);
bear = true;
}
if (xox>=taget) {
return;
}
setTimeout(() => get(), 1);
}
get();"
tNDx56Kd,Terminal blue,anaodia7,CSS,Thursday 28th of September 2023 09:20:25 PM CDT,"/*Usar por cima do Yotsuba Blue*/

body {
	background: #000000;
	color: #40e0d0;
	font-family: sans-serif;
	font-size: 12px;
}
h1 {
	font-size: 20pt;
	text-align: center;
	letter-spacing: 0px;
}
div.title, h1 {
	color: #40e0d0;
	font-family: sans-serif;
}
div.title p {
	font-size: 10px;
}
a:link, a:visited, .intro a.email span.name {
	color: #40e0d0;
	text-decoration: underline;
	font-family: sans-serif;
}
a:link:hover, a:visited:hover {
	color: #40e0d0;
	font-family: sans-serif;
	text-decoration: underline overline;
}
a.post_no {
	color:#40e0d0;
	text-decoration: none;
}
a.post_no:hover {
	color: #40e0d0;
	text-decoration: underline overline;
}
div.post.reply {
	background: #000000;
	border: 1px dashed;
	border-color:#40e0d0;
}
div.post.reply.highlighted {
	background: transparent;
	border: #40e0d0 1px dotted;
	border-color:#40e0d0;
}
div.post.reply div.body a:link, div.post.reply div.body a:visited {
	color:#40e0d0;
}
div.post.reply div.body a:link:hover, div.post.reply div.body a:visited:hover {
	color:#40e0d0;
}
.intro span.subject {
	font-size: 12px;
	font-family: sans-serif;
	color: #446655;
	font-weight: 800;
}
.intro span.name {
	color: #40e0d0;
	font-weight: 800;
}
.intro a.capcode, p.intro a.nametag {
	color: #40e0d0;
	margin-left: 0;
}
.intro a.email, p.intro a.email span.name, p.intro a.email:hover, p.intro a.email:hover span.name {
	color: #40e0d0;
}
input[type=""text""], textarea, select {
	background: #000000;
	color: #40e0d0;
	border: 1px dashed;
	border-color:#40e0d0;
	padding-left: 5px;
	padding-right: -5px;
	font-family: sans-serif;
	font-size: 10pt;
}
input[type=""password""] {
	background: #000000;
	color: #40e0d0;
	border: 1px dashed;
	border-color:#40e0d0;
}

form table tr th {
	background: #000000;
	color: #40e0d0;
	font-weight: 800;
	text-align: left;
	padding: 0;
	border: #40e0d0 1px dashed;
	border-color:#40e0d0;
}
div.banner {
	background: #00AA00;
	color: #FFFFFF;
	text-align: center;
	width: 250px;
	padding: 4px;
	padding-left: 12px;
	padding-right: 12px;
	margin-left: auto;
	margin-right: auto;
	font-size: 12px;
}
input[type=""submit""] {
	background: #000000;
	border: 1px dashed;
	border-color:#40e0d0;
	color: #40e0d0;
}
input[type=""submit""]:hover {
	background: #000000;
	border: 1px dashed;
	border-color:#40e0d0;
	color: #40e0d0;
}
p.fileinfo a:hover {
	text-decoration: underline;
}
span.trip {
	color:#40e0d0;
}
div.pages {
	color:#40e0d0;
	background: #000000;
	border: 1px dashed;
	border-color:#40e0d0;
	font-family: sans-serif;
	font-size: 10pt;
}
div.pages a.selected {
	color: #40e0d0;
}
hr {
	height: 1px;
	border: 1px dashed;
	border-color:#40e0d0;
}
div.boardlist {
	color: #40e0d0;
}
div.ban {
	border: transparent 0px dashed;
	border-color:#40e0d0;
}
div.ban h2 {
	background: transparent;
	color: #40e0d0;
	font-size: 12px;
}
table.modlog tr th {
	background: #000000;
	color: #40e0d0;
}

.desktop-style div.boardlist:nth-child(1) {
  background-color: black;
  border-bottom: #40e0d0 1px dashed;
}
.desktop-style div.boardlist:nth-child(1):hover, .desktop-style div.boardlist:nth-child(1).cb-menu {
  background-color: black;
}

.desktop-style .sub {
  background: none;
}

a.quick-reply-btn{
  visibility: hidden !important;
visibility: collapse !important;
}
 
textarea#body{
   width: 295px;
   height: 92px;
}
 
.dropzone-wrap{
  width: 295px !important;
}

#options_div, #alert_div, div.pages, .theme-catalog div.grid-size-small{
  background: #000;
  border: 1px dotted #40e0d0;
}

.options_tab_icon{
  color: #40e0d0;
}"
3UBnLw8e,Cake 2.0 ~vichan,anaodia7,CSS,Thursday 28th of September 2023 09:04:54 PM CDT,"/*Usar por cima do Yotsuba Blue*/

body{
  cursor: url(https://i.ibb.co/g9hqyyp/cake-cur.png), default !important;
}

body{  
  background: #f2e1d6;
  background-image: url(https://i.ibb.co/94bf0PM/cake-bg2.png), url(https://i.ibb.co/6rSGWpJ/cake-bg.jpg);
  background-blend-mode: normal, overlay;
  background-repeat: no-repeat, repeat;
  background-attachment: fixed, scroll;
  background-position: right bottom;
  background-size: 328px 328px, auto;
}

div.post.reply, #options_div, #alert_div, div.pages, .theme-catalog div.grid-size-small{
  background: #fafbe7;
  border: 1px solid #008582;
}

.boardlist{
  background: #fafbe7 !important;
}

a{
  color: #ce006a;
}

a:hover{
  color: #000;
}

div.post.reply.highlighted{
  border: 2px dotted darkred;
  background: #fafbe7;
}
 
span.quote{
  color: green !important;
  font-weight: bold !important;
  text-shadow: 1px 1px 1px rgba(167,170,168,.6);
}
 
h1, h2, h3, div.ban h2{
  color: #663E11;
  text-shadow: 1px 1px 1px rgba(167,170,168,.6);
    font: bolder 28px Tahoma,sans-serif;
    letter-spacing: -2px;
    text-align: center;
    margin: 0;
}
 
header div.subtitle{
  color: #663E11;
}
 
form table tr th{
  background: #2d303e !important;
  color: gold;
  text-shadow: 1px 1px 1px rgba(167,170,168,.6);
  border: 1px solid gold;
}

"
Vurs4tHU,PDF downloader  V1,nitestryker,Python,Thursday 28th of September 2023 09:00:04 PM CDT,"# /usr/bin/python
# Copyright 2023 nitestryker <nitestryker@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# ""Software""), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
__version__ = '1.0.0' # current version


import requests
from internetdownloadmanager import Downloader

def download_pdf(url, path):
    # Create an instance of Downloader
    downloader = Downloader(worker=25, part_size=1000000, resumable=True)

    # Download the PDF file
    downloader.download(url=url, path=path)

def search_and_download(query, num_results, base_url, output_dir):
    # Perform the Google search using the query
    search_url = f""https://www.google.com/search?q={query}""
    response = requests.get(search_url)
    search_results = response.text

    # Keep track of the number of downloaded PDFs
    downloaded_count = 0

    # Extract and download PDF links
    start_index = 0
    while downloaded_count < num_results:
        start_link = search_results.find('<a href=""/url?q=', start_index)
        end_link = search_results.find('&amp;', start_link + 1)

        if start_link == -1 or end_link == -1:
            break

        url = search_results[start_link + 16: end_link]
        if url.endswith('.pdf') and base_url in url:
            filename = url.split(""/"")[-1]
            output_path = f""{output_dir}/{filename}""
            print(f""Downloading: {url}"")
            download_pdf(url, output_path)
            downloaded_count += 1
            print(""Download complete!"")

        start_index = end_link

#### EXAMPLE ########
# Set the query, number of results to retrieve, base URL, and output directory
query = 'filetype:pdf python'
num_results = 10
base_url = ""https://wwww.google.com""
output_dir = ""pdfs""

# Call the search_and_download function
search_and_download(query, num_results, base_url, output_dir)
"
gPyPSmU3,ClaseHilo,LEANDRONIEVA,Java,Thursday 28th of September 2023 08:38:53 PM CDT,"import java.util.Random;

public class Hilo extends Thread{
	 
	private int root;
	private double inicio;
	private double fin;
	private double tiempo;
	private int indice;
	
	public Hilo(int i) {
		this.indice = i;
	}
	public void run() {
		Random random = new Random();
		inicio = System.currentTimeMillis(); 
		root = random.nextInt(1,20);
		System.out.println(SumRootN(root));			
		
		fin = System.currentTimeMillis();
		tiempo = fin-inicio;
		
		System.out.println(""Tiempo transcurrido con concurrencia de hilo ""+indice+"": ""+tiempo);		
	}
	
	public static double SumRootN(int root) {
        double result = 0;
        for (int i = 0; i < 10000000; i++) {
            result += Math.exp(Math.log(i) / root);
        }
        return result;
    }
}"
YSUm1ifQ,Punto3Tp4PC,LEANDRONIEVA,Java,Thursday 28th of September 2023 08:38:08 PM CDT,"import java.util.Random;

public class Punto3 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		Random random = new Random();
		int root;
		double inicio = System.currentTimeMillis();
		double fin;
		double tiempo;
		for (int i = 1; i <= 20; i++) {
			root = random.nextInt(1,20);
			System.out.println(SumRootN(root));
		}
		fin = System.currentTimeMillis();
		tiempo = fin-inicio;
		System.out.println(""Tiempo transcurrido sin concurrencia: ""+tiempo);
		
		
		for (int i = 1; i <= 20; i++) {
			Hilo hilo = new Hilo(i);
			
			hilo.start();
		}
	}
	public static double SumRootN(int root) {
        double result = 0;
        for (int i = 0; i < 10000000; i++) {
            result += Math.exp(Math.log(i) / root);
        }
        return result;
    }
	
}
"
LtrENRFY,Day 13,HarrJ,Java,Thursday 28th of September 2023 08:22:21 PM CDT,"public class Day13A {
    public static void main(String[] args) {
        AnimalInfo callAnimalInfo = new AnimalInfo(""Dog"", ""mammal"", ""omnivore"");//lalagay nyo sa loob ng animal Info;

        callAnimalInfo.printAnimalInfo();
        System.out.println();
        // same class pero iniba ang laman ng mga variables nya
        callAnimalInfo.animalName = ""Geckos"";
        callAnimalInfo.animalClass = ""reptile"";
        callAnimalInfo.foodHabit = ""insectivore"";

        callAnimalInfo.printAnimalInfo();
        
    }
}

class AnimalInfo {
    String animalName;//dog
    String animalClass;//mammal
    String foodHabit;//onmivore

    AnimalInfo(String aName, String aClass, String aHabit) {
        animalName = aName;
        animalClass = aClass;
        foodHabit = aHabit;
    }

    public void printAnimalInfo() {
        System.out.printf(""%s is a %s and its an %s"",animalName,animalClass,foodHabit);
    }
}

//----------------------------------------------------

public class Day13B {
    public static void main(String[] args) {
        Dog callDog = new Dog();
        callDog.printAll();
    }
}

class Mammal {
    public void mammalPrint() {
        System.out.println(""This animal is a Mammal"");
    }
}

class Dog extends Mammal {
    public void dogInfo() {
        System.out.println(""Dogs are mans best friend."");
    }

    public void printAll() {
        dogInfo();
        mammalPrint();
    }
}


//----------------------------------------------------


public class Day13E extends Sum{
    public static void main(String[] args) {
        Day13E callMe = new Day13E();
        double num1 = Math.random() * 50;
        double num2 = Math.random() * 50;
        double num3 = Math.random() * 50;
        double[] numArray = new double[7];
        double numResult;

        for (int i = 0; i < numArray.length; i++) {
            numArray[i]  = Math.random() * 50;
        }

        numResult = callMe.getSum(num1, num2);
        System.out.printf(""%.2f + %.2f = %.2f %n"",num1,num2,numResult);
        // numResult = callMe.getSum(numResult, num3);
        // numResult = num1 + num2 + num3;
        numResult = callMe.getSum(num1, num2, num3);
        System.out.printf(""%.2f + %.2f + %.2f = %.2f %n"",num1,num2,num3,numResult);
    }
}

class Sum {
    public double getSum(double num1, double num2) {
        double numResult = 0;
        numResult = num1 + num2;
        return numResult;
    }

    public double getSum(double num1, double num2, double num3) {
        double numResult = 0;
        numResult = num1 + num2 + num3;
        return numResult;
    }

    public double getSum(double[] numArray) {
        double numResult = 0;

        return numResult;
    }
}"
