id,title,username,language,date,content
ikSqUdZY,G2A.com Free Gift Card Guide Mar 2024,ounnuo,GetText,Monday 4th of March 2024 12:03:04 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_890286.pdf

Working as of:
04 March 2024"
bXA8hJE7,tvindo.txt,Hakutaka,GetText,Monday 4th of March 2024 11:54:39 AM CDT,"memek
dcc115484faee5174358e158fb6e8d840e2d4abcc954b7e4019959ba525b8e91"
fyvq2zre,Struct3,Filage,C++,Monday 4th of March 2024 11:49:20 AM CDT,"#include <iostream>
#include <string>

using namespace std;

struct Student {
	string name;
	string secondname;
	string surname;
	int age;
	int course;
	int grade[3];
};

void inputStudent(Student &student) {
	cout << ""Введите имя студента: "";
	cin >> student.name;
	cout << ""Введите фамилию студента: "";
	cin >> student.secondname;
	cout << ""Введите отчество студента: "";
	cin >> student.surname;
	cout << ""Введите возраст студента: "";
	cin >> student.age;
	cout << ""Введите курс студента: "";
	cin >> student.course;
	cout << ""Введите оценки студента по трем предметам студента: "";
	for (int i = 0; i < 3; i++)
		cin >> student.grade[i];
}

void outputStudent(Student &student){
	cout << ""ФИО: "" << student.name << "" "" << student.secondname << "" "" << student.surname;
	cout << ""Возраст: "" << student.age;
	cout << ""Курс: "" << student.course;
	cout << ""Оценки: "";
	for (int i = 0; i < 3; i++)
		cout << student.grade[i] << "" "";
}

float avarageGrade(Student student[], int course, int subject, int size) {
	float sum = 0, count = 0;
	for (int i = 0; i < size; i++) {
		if (student[i].course == course) {
			sum += student[i].grade[subject - 1];
			count++;
		}
	}
	if (count > 0) {
		return sum / count;
	}
	else {
		return 0;
	}
}

int main() {
	setlocale(LC_ALL, ""Rus"");
	int size, course, subject;
	float average;
	cout << ""Введите количество студентов: "";
	cin >> size;
	Student student[100];
	for (int i = 0; i < size; i++) {
		cout << ""Введите данные о "" << i + 1 << "" студенте: \n"";
		inputStudent(student[i]);
	}
	cout << ""Итоговая информация о всех студентах: \n"";
	for (int i = 0; i < size; i++) {
		cout << i + 1 << "" студент \n"";
		outputStudent(student[i]);
	}
	cout << ""\nВведите курс, на котором надо определить средний балл успеваемости: "";
	cin >> course;
	cout << ""Введите номер предмета от 1 до 3, на котором надо определить средний балл успеваемости: "";
	cin >> subject;
	average = avarageGrade(student, course, subject, size);
	cout << ""Средний балл студентов "" << course << "" курса по предмету "" << subject << "" равен "" << average;
}"
VHi8NBKd,Struct2,Filage,C++,Monday 4th of March 2024 11:48:57 AM CDT,"#include <iostream>

using namespace std;

struct complex {
	float re;
	float im;
};

complex read() {
    complex c;
    cout << ""Введите действительную часть: "";
    cin >> c.re;
    cout << ""Введите мнимую часть: "";
    cin >> c.im;
    return c;
}


void print(complex c) {
    cout << ""Действиетельная часть комплексного числа "" << c.re << "" и мнимамая "" << c.im << ""i"";
}

complex add(complex a, complex b) {
    complex result;
    result.re = a.re + b.re;
    result.im = a.im + b.im;
    return result;
}

int main() {
	setlocale(LC_ALL, ""Rus"");
    complex num1, num2, sum;
    cout << ""Введите первое комплексное число:"" << endl;
    num1 = read();
    cout << ""Введите второе комплексное число:"" << endl;
    num2 = read();
    cout << ""Сумма комплексных чисел:"" << endl;
    sum = add(num1, num2);
    print(sum);
}"
SamAyPW8,Struct1,Filage,C++,Monday 4th of March 2024 11:48:35 AM CDT,"#include <iostream>

using namespace std;

struct Price {
	int rubles;
	int coins;
};

struct Time {
	int hours;
	int minutes;
	int seconds;
};

struct Date {
	int day;
	int month;
	int year;
};

struct Address {
	int index; 
	string town;
	string street;
	int house;
	int apartment;
};

struct Student {
	string lastName;
	int recordBookNumber;
	int examGrade;
};

struct Exam {
	string subject;
	int groupNumber;
	Date examDate;
	Student students[25];
};

int main() {
	setlocale(LC_ALL, ""Rus"");
	Price itemPrice = { 52, 99 };
	struct Price* price_ptr = &itemPrice;
	cout << ""Цена: "" << price_ptr->rubles << "" рублей "" << itemPrice.coins << "" копеек"" << endl;

	Time currentTime = { 10, 30, 45 };
	cout << ""Текущее время: "" << currentTime.hours << "":"" << currentTime.minutes << "":"" << currentTime.seconds << endl;

	Date currentDate = { 7, 2, 2024 };
	cout << ""Текущая дата: "" << currentDate.day << ""."" << currentDate.month << ""."" << currentDate.year << endl;

	Address currentAddress = { 123456, ""Москва"", ""Ленина"", 10, 5 };
	cout << ""Адрес: "" << currentAddress.index << "", "" << currentAddress.town << "", "" << currentAddress.street
		 << "", д."" << currentAddress.house << "", кв."" << currentAddress.apartment << endl;

	Student students[25] = { {""Петров"", 1, 90}, {""Сидоров"", 2, 75}, {""Соколов"", 3, 99 }, {""Михайлов"", 4, 98 }, {""Новиков"", 5, 97 }, {""Федоров"", 6, 94 }, {""Морозов"", 7, 93 },
							 {""Алексеев"", 8, 90 }, {""Козлов"", 9, 99 }, {""Степанов"", 10, 88 }, {""Орлов"", 11, 36 }, {""Андреев"", 12, 81 }, {""Макаров"", 13, 67 }, {""Никитин"", 14, 22 },
							 {""Захаров"", 15, 94 }, {""Романов"", 16, 78 }, {""Чернов"", 17, 55 }, {""Григорьев"", 18, 41 }, {""Поляков"", 19, 63 }, {""Кудрявцев"", 20, 73 }, {""Калинин"", 21, 45 },
							 {""Максимов"", 22, 60 }, {""Лазарев"", 23, 27 }, {""Ефимов"", 24, 52 }, {""Беляев"", 25, 1 } };
	Exam exam1 = { ""Математика"", 1, {15, 2, 2024}};
	for (int i = 0; i < 25; ++i) {
		exam1.students[i] = students[i];
	}
	cout << ""Экзамен по "" << exam1.subject << "" для группы "" << exam1.groupNumber << "" состоится ""
		 << exam1.examDate.day << ""."" << exam1.examDate.month << ""."" << exam1.examDate.year << "". \nСписок студентов и оценок:""
		 << endl;
	for (int i = 0; i < 25; ++i) {
		cout << ""Студент: "" << exam1.students[i].lastName << "", номер зачетной книжки: "" << exam1.students[i].recordBookNumber << "", оценка: "" << exam1.students[i].examGrade << endl;
	}
}"
LyQiiaRu,DynamicArr4,Filage,C++,Monday 4th of March 2024 11:48:02 AM CDT,"#include <iostream>
#include <string>

using namespace std;

void takeText(int sizeArr, string* str_arr) {
	for (int i = 0; i < sizeArr; i++) {
		cin >> str_arr[i];
	}
}

int findTheLetter(int sizeArr, string* str_arr) {
	int count = 0;
	for (int i = 0; i < sizeArr && str_arr[i] != "".""; i++) {
		int sizik = size(str_arr[i]);
		int j = 0;
		while (j < sizik) {
			if (str_arr[i][j] == 'u')
				count++;
			j++;
		}
	}
	return count;
}

int main() {
	setlocale(LC_ALL, ""Russian"");
	int sizeArr;
	cout << ""Введите из сколька слов будет состоять ваш текст, включая знаки препинания: "";
	cin >> sizeArr;
	string* str_arr = new string[sizeArr];
	takeText(sizeArr, str_arr);
	int count = findTheLetter(sizeArr, str_arr);
	if (count != 0)
		cout << ""Количество букв u в первом предложении: "" << count;
	else 
		cout << ""В первом предложении букв u нет"";
	delete[] str_arr;
}
"
EpWem7vx,Untitled,ShavermaYT,JavaScript,Monday 4th of March 2024 11:48:01 AM CDT,"const { Client, Intents } = require('discord.js');
const openai = require('openai');
const { DISCORD_BOT_TOKEN, OPENAI_API_KEY } = require('C:/Users/Rotix/Desktop/Ugadayka2.0/ewv/src/chatbot/REo/config.json');

// Устанавливаем ключ OpenAI
openai.apiKey = OPENAI_API_KEY;
const openaiINSTANCE = new OpenAI();
// Создаем клиента Discord с указанием намерений
const client = new Client({
    intents: [Intents.FLAGS.GUILDS, Intents.FLAGS.GUILD_MESSAGES],
});

// Функция для отправки запроса к OpenAI и получения ответа
async function askOpenAI(prompt) {
    try {
        const response = await openaiINSTANCE.chat.completions.create({
          messages: [{ role: ""user"", content: prompt }],
          model: ""text-davinci-003"",
          temperature: 0.7,
          maxTokens: 100
        });
        return response.data.choices[0].text.trim();
    } catch (error) {
        console.error('OpenAI error:', error);
        return 'Извините, произошла ошибка при обработке вашего запроса.';
    }
}
// Событие готовности бота
client.once('ready', async () => {
    console.log('Бот готов!');
    const response = await askOpenAI('ТЕСТ');
    console.log(response);
});
// Событие при получении сообщения
client.on('messageCreate', async message => {
    // Проверяем, что сообщение не отправлено самим ботом и содержит упоминание бота
    if (!message.author.bot) {
        // Получаем текст сообщения без упоминания бота
        const prompt = message.content.replace(`<@!${client.user.id}>`, '').trim();

        // Запрашиваем ответ у OpenAI
        const response = await askOpenAI(prompt);

        // Отправляем ответ обратно на сервер Discord
        message.channel.send(response.choices[0]);
    }
});

// Вход в систему бота
client.login(DISCORD_BOT_TOKEN);"
N9UrxNDZ,DynamicArr3,Filage,C++,Monday 4th of March 2024 11:47:28 AM CDT,"#include <iostream>

using namespace std;

void inputArray(int n, int* car, string what) {
	cout << ""Введите цены за "" << what << "" :\n"";
	for (int i = 0; i < n; i++) {
		cout << i + 1 << what << "" = "";
		cin >> car[i];
	}
}

int averageSmth(int* car, int size, string what) {
	int average = 0;
	for (int i = 0; i < size; i++)
		average += car[i];
	average /= size;
	cout << ""Средняя цена марок "" << what << "": "" << average << endl;
	return average;
}

int main() {
	setlocale(LC_ALL, ""Russian"");
	int average_cars = 0, average_moto = 0, n, m;
	cout << ""Введите количество машин : "";
	cin >> n;
	int* car = new int[n];
	inputArray(n, car, "" машина "");
	cout << ""Введите количество мотоциклов : "";
	cin >> m;
	int* moto = new int[m];
	inputArray(m, moto, "" мотоцикл "");
	average_cars = averageSmth(car, n, ""машин"");
	average_moto = averageSmth(moto, m, ""мотоциклов"");
	if (average_cars / average_moto > 3)
		cout << ""\nВерно"";
	else
		cout << ""\nНеверно"";
	delete[] car;
	delete[] moto;
}
"
C9KTRLz1,DynamicArr2,Filage,C++,Monday 4th of March 2024 11:46:46 AM CDT,"#include <iostream>

using namespace std;

void sizeArray(int& height, int& length) {
	cout << ""Введите количество строк в двумерном массиве: "";
	cin >> height;
	cout << ""Введите количество столбцов в двумерном массиве: "";
	cin >> length;
}

void inputArrayElements(int height, int length, int** arr) {
	cout << ""Введите элементы массива: \n"";
	for (int i = 0; i < height; i++) {
		for (int j = 0; j < length; j++) {
			cout << ""arr["" << i + 1 << ""]["" << j + 1 << ""] = "";
			cin >> arr[i][j];
		}
	}
}

void outputArrayElements(int height, int length, int** arr) {
	for (int i = 0; i < height; i++) {
		for (int j = 0; j < length; j++) {
			cout << arr[i][j] << "" "";
		}
		cout << endl;
	}
}

void findSum(int height, int length, int** arr, int* sum) {
	int count = 0;
	int flag;
	for (int i = 0; i < height; i++) {
		int j = 0;
		flag = 1;
		while ((flag == 1) && (j < length)) {
			if (arr[i][j] < 0) {
				for (int k = 0; k < length; k++)
					sum[count] += arr[i][k];
				cout << ""Сумма элементов в строке "" << i + 1 << "" равна "" << sum[count] << endl;
				count++;
				flag = 0;
			}
			j++;
		}
	}
}

int main() {
	setlocale(LC_ALL, ""Russian"");
	int length = 0 , height = 0, count;
	sizeArray(height, length);
	int* sum = new int[height];
	for (int i = 0; i < height; i++)
		sum[i] = 0;
	int** arr = new int* [height];
	for (int i = 0; i < height; i++) {
		arr[i] = new int[length];
	}
	inputArrayElements(height, length, arr);
	outputArrayElements(height, length, arr);
	findSum(height, length, arr, sum);
	for (int i = 0; i < height; i++)
		delete[] arr[i];
	delete[] arr;
}
"
ATgKWaP2,DynamicArr1,Filage,C++,Monday 4th of March 2024 11:45:45 AM CDT,"#include <iostream>

using namespace std;

int sizeArray() {
	int n;
	cout << ""Введите размер массива: "";
	cin >> n;
	return n;
}

void inputArray(int size, int* arr) {
	cout << ""Введите элементы массива: \n"";
	for (int i = 0; i < size; i++) {
		cout << ""arr["" << i << ""] = "";
		cin >> *(arr + i);
	}
}

void findNegative(int& k, int* arr, int& size, int& count) {
	int i = 0;
	while (k < 0 && i < size) {
		if (arr[i] < 0)
			k = i;
		i++;
	}
	while (count < 0 && i < size) {
		if (arr[i] < 0)
			count = i;
		i++;
	}
}

void outputNegative(int k, int count, int* arr) {
	int sum = 0;
;	if ((k + 1 > count) || (k == count)) {
		cout << ""В данном массиве меньше двух отрицательных элементов"";
	}
	else {
		cout << ""Сумма элементов массива, расположенных между первым и вторым отрицательными элементами: "";
		for (int j = k + 1; j < count; j++) {
			sum += arr[j];
		}
		cout << sum;
	}
}

int main() {
	setlocale(LC_ALL, ""Russian"");
	int n, count = -1, k = -1;
	n = sizeArray();
	int* arr = new int[n];
	inputArray(n, arr);
	findNegative(k, arr, n, count);
	outputNegative(k, count, arr);
	delete[] arr;
}"
NggSuUKb,Untitled,Max_the_Coder,Python,Monday 4th of March 2024 10:59:17 AM CDT,"# google_api_project/training_spreadsheets.py
from googleapiclient import discovery
from google.oauth2.service_account import Credentials


SCOPES = [
         'https://www.googleapis.com/auth/spreadsheets',
         'https://www.googleapis.com/auth/drive',
]


CREDENTIALS_FILE = '... .json'


def auth():
    # Создаём экземпляр класса Credentials.
    credentials = Credentials.from_service_account_file(
                  filename=CREDENTIALS_FILE, scopes=SCOPES)
    # Создаём экземпляр класса Resource.
    service = discovery.build('sheets', 'v4', credentials=credentials)
    return service, credentials


def create_spreadsheet(service):
    # Тело spreadsheet
    spreadsheet_body = {
         # Свойства документа
        'properties': {
            'title': 'Бюджет путешествий',
            'locale': 'ru_RU'
        },
        # Свойства листов документа
        'sheets': [{
            'properties': {
                'sheetType': 'GRID',
                'sheetId': 0,
                'title': 'Отпуск 2077',
                'gridProperties': {
                    'rowCount': 100,
                    'columnCount': 100
                }
             }
         }]
    }
    request = service.spreadsheets().create(body=spreadsheet_body)
    response = request.execute()
    spreadsheet_id = response['spreadsheetId'] 
    print('https://docs.google.com/spreadsheets/d/' + spreadsheet_id)

    return spreadsheet_id 


service, credentials = auth()
spreadsheetId = create_spreadsheet(service) 

def set_user_permissions(spreadsheet_id, credentials):
    permissions_body={'type': 'user', # Тип учётных данных.
                      'role': 'writer', # Права доступа для учётной записи.
                      'emailAddress': '...'} # Ваш личный гугл-аккаунт.
    
    # Создаётся экземпляр класса Resource для Google Drive API.
    drive_service = discovery.build('drive', 'v3', credentials=credentials)
    
    # Формируется и сразу выполняется запрос на выдачу прав вашему аккаунту.
    drive_service.permissions().create(
        fileId=spreadsheet_id,
        body=permissions_body,
        fields='id'
    ).execute()


set_user_permissions(spreadsheetId, credentials)"
GS7qBRZE,isEmpty(),Aldin_SXR,Java,Monday 4th of March 2024 10:44:33 AM CDT,"/* Check if the stack is empty */
public boolean isEmpty() {
    return size == 0;
}"
j4PGHSvu,Untitled,Max_the_Coder,Python,Monday 4th of March 2024 10:43:30 AM CDT,"# google_api_project/training_spreadsheets.py
from googleapiclient import discovery
from google.oauth2.service_account import Credentials

from dotenv import load_dotenv
import os

SCOPES = [
         'https://www.googleapis.com/auth/spreadsheets',
         'https://www.googleapis.com/auth/drive',
] 

load_dotenv()
EMAIL = os.environ['EMAIL']

CREDENTIALS_FILE = 'файл_credential`ов.json'


def auth():
    # Создаём экземпляр класса Credentials.
    credentials = Credentials.from_service_account_file(
                  filename=CREDENTIALS_FILE, scopes=SCOPES)
    # Создаём экземпляр класса Resource.
    service = discovery.build('sheets', 'v4', credentials=credentials)
    return service, credentials


def create_spreadsheet(service):
    # Тело spreadsheet
    spreadsheet_body = {
         # Свойства документа
        'properties': {
            'title': 'Бюджет путешествий',
            'locale': 'ru_RU'
        },
        # Свойства листов документа
        'sheets': [{
            'properties': {
                'sheetType': 'GRID',
                'sheetId': 0,
                'title': 'Отпуск 2077',
                'gridProperties': {
                    'rowCount': 100,
                    'columnCount': 100
                }
             }
         }]
    }
    request = service.spreadsheets().create(body=spreadsheet_body)
    response = request.execute()
    spreadsheet_id = response['spreadsheetId'] 
    print('https://docs.google.com/spreadsheets/d/' + spreadsheet_id)

    return spreadsheet_id 


service, credentials = auth()
spreadsheetId = create_spreadsheet(service) 

def set_user_permissions(spreadsheet_id, credentials):
    permissions_body={'type': 'user', # Тип учётных данных.
                      'role': 'writer', # Права доступа для учётной записи.
                      'emailAddress': EMAIL} # Ваш личный гугл-аккаунт.
    
    # Создаётся экземпляр класса Resource для Google Drive API.
    drive_service = discovery.build('drive', 'v3', credentials=credentials)
    
    # Формируется и сразу выполняется запрос на выдачу прав вашему аккаунту.
    drive_service.permissions().create(
        fileId=spreadsheet_id,
        body=permissions_body,
        fields='id'
    ).execute()


set_user_permissions(spreadsheetId, credentials)"
jpdAM4nV,queue main(),Aldin_SXR,Java,Monday 4th of March 2024 10:42:51 AM CDT,"public static void main(String[] args) {
    /* Queue demo */
    Queue<Integer> queue = new Queue<>();

    queue.enqueue(1);
    queue.enqueue(2);
    queue.enqueue(3);

    System.out.println(""Queue demo: "");
    System.out.println(""peek: "" + queue.peek());
    System.out.println(queue.dequeue());
    System.out.println(queue.dequeue());
    System.out.println(queue.dequeue());
    queue.enqueue(4);

    System.out.println(""queue size: "" + queue.size());
}"
C6hdk41M,Untitled,h1n0t0r1,Python,Monday 4th of March 2024 10:42:36 AM CDT,"# Read user input

students_count = int(input())

# Logic

top_students = 0
between_4_5 = 0
between_3_4 = 0
fail = 0
grade_sum = 0

for i in range(students_count):
    grade = float(input())
    if grade >= 5:
        top_students += 1
    elif grade >= 4:
        between_4_5 += 1
    elif grade >= 3:
        between_3_4 += 1
    else:
        fail += 1
    grade_sum += grade
# Print output
print(f'Top students: {top_students / students_count * 100:.2f}%')
print(f'Between 4.00 and 4.99: {between_4_5 / students_count * 100:.2f}%')
print(f'Between 3.00 and 3.99: {between_3_4 / students_count * 100:.2f}%')
print(f'Fail: {fail / students_count * 100:.2f}%')
print(f'Average: {grade_sum / students_count:.2f}')"
3jiCpxpK,Queue.java,Aldin_SXR,Java,Monday 4th of March 2024 10:42:22 AM CDT,"public class Queue<Data> {
    private Node<Data> head = null;
    private Node<Data> tail = null;
    private int size = 0;

    /* Return the current size of the queue */
    public int size() {
        return size;
    }

    /* Check if the queue is empty */
    public boolean isEmpty() {
        return size == 0;
    }

    /* Add new item to the back of the queue */
    public void enqueue(Data item) {
        Node<Data> newNode = new Node<>();	    // 1
        newNode.data = item;					// 1
        if (isEmpty()) {						// 2
            head = tail = newNode;				// 2
        } else {
            tail.next = newNode;				// 3
            tail = newNode;						// 4
        }
        size++;									// 5
    }

    /* Removes an item from the front of the queue, and returns its data */
    public Data dequeue() {
        if (isEmpty()) {												// 1
            throw new NoSuchElementException(""Queue is empty!"");		// 1
        }

        Data data = head.data;											// 2
        head = head.next;												// 3
        size--;															// 4

        if (isEmpty()) {											    // 5
            tail = null;												// 5
        }

        return data;													// 6
    }

    /* Reads an item at the front of the queue, without removing it */
    public Data peek() {
        if (isEmpty()) {												// 1
            throw new NoSuchElementException(""Queue is empty!"");		// 1
        }

        return head.data;											    // 2
    }
}
"
Mf0UgXW0,queue peek(),Aldin_SXR,Java,Monday 4th of March 2024 10:41:24 AM CDT,"/* Reads an item at the front of the queue, without removing it */
public Data peek() {
    if (isEmpty()) {												// 1
        throw new NoSuchElementException(""Queue is empty!"");		// 1
    }

    return head.data;											    // 2
}"
WaZmxWYP,dequeue(),Aldin_SXR,Java,Monday 4th of March 2024 10:40:35 AM CDT,"/* Removes an item from the front of the queue, and returns its data */
public Data dequeue() {
    if (isEmpty()) {												// 1
        throw new NoSuchElementException(""Queue is empty!"");		// 1
    }

    Data data = head.data;											// 2
    head = head.next;												// 3
    size--;															// 4

    if (isEmpty()) {											    // 5
        tail = null;												// 5
    }

    return data;													// 6
}"
VAUbU6kM,Untitled,dllbridge,C,Monday 4th of March 2024 10:40:27 AM CDT,"
/*
#ifdef   _MSC_VER //****************************************    For Microsoft Compiler    **********************************
#ifdef   _GNUC_  //********************************************    For GCC Compiler    ***********************************
#ifdef  _TINYC_   //********************************************    For TCC Compiler    **********************************
*/




#include   <stdio.h>


int add(int n1, int n2);


////////////////////////////////////////////////////////
int main()
{
	
    int n = add(2, 38);   
	printf(""n = %d\n"", n); 
	 	  
return 0;
}
                         





#ifdef   _MSC_VER
////////////////////////////////////////////////////
int add(int n1, int n2)
{

    __asm
	{
       mov eax,  n1
       mov ebx,  n2
       add eax, ebx
       

	}


}
#endif



#ifdef   __GNUC__
////////////////////////////////////////////////////
int add(int n1, int n2)
{

    __asm__
	(
       "" mov eax,  %0  ;""
       "" mov ebx,  %1  ;""
       "" add eax, ebx  ;""
       "" mov  %0, eax  ;""       
       ::
	   ""m""(n1),
	   ""m""(n2)	   
	   :""%eax"",
	    ""%ebx""		
	);


return n1;
}

#endif



"
fnRv0pa6,enqueue(),Aldin_SXR,Java,Monday 4th of March 2024 10:39:47 AM CDT,"/* Add new item to the back of the queue */
public void enqueue(Data item) {
    Node<Data> newNode = new Node<>();	    // 1
    newNode.data = item;					// 1
    if (isEmpty()) {						// 2
        head = tail = newNode;				// 2
    } else {
        tail.next = newNode;				// 3
        tail = newNode;						// 4
    }
    size++;									// 5
}"
UZWhbHZV,Review Pastes.io [Pastebin Alternative],xxsa,PHP,Monday 4th of March 2024 10:39:39 AM CDT,"https://pastes.io - Paste Tool - Pastebin Alternative Free

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes"
EHKbymak,Stack.java,Aldin_SXR,Java,Monday 4th of March 2024 10:39:14 AM CDT,"public class Stack<Data> {
    private Node<Data> top = null;
    private int size = 0;


    /* Push an item onto the stack */
    public void push(Data item) {
        Node<Data> newNode = new Node<>();      // 1
        newNode.data = item; 				    // 1
        newNode.next = top; 				    // 2
        top = newNode; 						    // 3
        size++;								    // 4
    }

    /* Check if the stack is empty */
    public boolean isEmpty() {
        return size == 0;
    }

    /* Remove the top item from the stack, and return its data */
    public Data pop() {
        if (isEmpty()) {													// 1
            throw new NoSuchElementException(""The stack is empty."");		// 1
        }																	// 1
        Data item = top.data; 												// 2
        top = top.next; 													// 3
        size--;															    // 4
        return item; 														// 5
    }

    /* Return the current size of the stack */
    public int size() {
        return size;
    }

    /* Reads an item at the top of the stack, without removing it */
    public Data peek() {
        if (isEmpty()) {												// 1
            throw new NoSuchElementException(""Stack is empty!"");		// 1
        }

        return top.data;											    // 2
    }
}"
7tv4w6vR,peek(),Aldin_SXR,Java,Monday 4th of March 2024 10:38:02 AM CDT,"/* Reads an item at the top of the stack, without removing it */
public Data peek() {
    if (isEmpty()) {												// 1
        throw new NoSuchElementException(""Stack is empty!"");		// 1
    }

    return top.data;											    // 2
}"
3M1imCN0,pop(),Aldin_SXR,Java,Monday 4th of March 2024 10:37:18 AM CDT,"/* Remove the top item from the stack, and return its data */
public Data pop() {
    if (isEmpty()) {													// 1
        throw new NoSuchElementException(""The stack is empty."");		// 1
    }																	// 1
    Data item = top.data; 												// 2
    top = top.next; 													// 3
    size--;															    // 4
    return item; 														// 5
}"
xQC8iYPR,push(),Aldin_SXR,Java,Monday 4th of March 2024 10:36:43 AM CDT,"/* Push an item onto the stack */
public void push(Data item) {
    Node<Data> newNode = new Node<>();      // 1
    newNode.data = item; 				    // 1
    newNode.next = top; 				    // 2
    top = newNode; 						    // 3
    size++;								    // 4
}"
6ACY594V,Untitled,Mario_Hristov,C,Monday 4th of March 2024 10:33:35 AM CDT,"#include <stdio.h>

int main()
{
    float w, h;
    printf(""Въведете широчината на залата в метри: "");
    scanf(""%f"", &w);
    printf(""Въведете дължината на залата в метри: \n"");
    scanf(""%f"", &h);
    float room_area = w * h;
    float work_place = 0.7 * 1.2;
    float hallway = 1 * (w > h ? w : h);
    float actual_area = (room_area - 3 * work_place) - hallway;
    float number_of_workplaces = actual_area / work_place;
    printf(""Брой работни места в залата: %.0f"", number_of_workplaces);
}"
uhK5d4hu,dockercomposev1,G0nz0uk,YAML,Monday 4th of March 2024 10:28:27 AM CDT,"version: '3'
services:
  grafana:
    container_name: grafana
    image: ""grafana/grafana:latest""
    volumes:
      - grafana-etc:/etc/grafana:ro
      - grafana-lib:/var/lib/grafana
      - grafana-log:/var/log/grafana
#      - /usr/share/csv:/etc/grafana/csv
#      - /etc/certs:/etc/certs:ro
    env_file:
    - ./config.env
    ports:
    - 3000:3000
    depends_on:
    - influxdb
    restart: always
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - prometheus-etc:/etc/prometheus/
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.external-url=http://alertmanager:9093'
    expose:
      - 9090
    ports:
      - 9090:9090
    links:
      - node-exporter:node-exporter
    networks:
      - monitoring

  snmp-exporter:
    image: quay.io/prometheus/snmp-exporter
    ports:
      - 9116:9116
      - 116:116/udp
    volumes:
      - snmp-exporter-etc:/etc/snmp-exporter/
    restart: always
    command: --config.file=/etc/snmp-exporter/snmp.yml
    networks:
    - monitoring

networks:
  monitoring:
    driver: bridge

volumes:
  grafana-etc:
    external: true
  grafana-lib:
    external: true
  grafana-log:
    external: true
  prometheus-etc:
    external: true
  prometheus-data:
    external: true
  snmp-exporter-etc:
    external: true
"
N2YYMkSi,stack main(),Aldin_SXR,Java,Monday 4th of March 2024 10:27:41 AM CDT,"public static void main(String[] args) {
    /* Stack demo */
    Stack<Integer> stack = new Stack<>();

    stack.push(2);
    stack.push(8);
    stack.push(5);

    System.out.println(""Stack demo: "");
    System.out.println(""peek: "" + stack.peek());
    System.out.println(stack.pop());
    System.out.println(stack.pop());
    System.out.println(stack.pop());

    stack.push(10);
    System.out.println(""stack size: "" + stack.size());
}"
ZzYfznDp,Python-Requirements.txt,Najeebsk,Python,Monday 4th of March 2024 10:07:45 AM CDT,"https://pypi.org/
python -m pip3 install --upgrade pip
==========================
python -m pip3 install --upgrade pip
pyinstaller IMAGES-SEARCH.py --onefile --noconsole

pyinstaller --onefile --noconsole --add-data ""your_image.png;."" --icon=""your_icon.ico"" your_script.py

pyinstaller --onefile --noconsole --icon=1.png Run2.py

auto-py-to-exe
pip install --upgrade pip
pip uninstall <packagename>
pip install <packagename>
pipenv uninstall --all
---------------------------------------------------------------------------------
C:\users\najeeb\appdata\local\programs\python\python37-32\python.exe -m pip install --upgrade pip
pip install auto-py-to-exe==2.42.0
pip install beautifulsoup4==4.12.3
pip install bottle==0.12.25
bottle-websocket==0.2.9
certifi==2024.2.2
cffi==1.15.1
chardet==4.0.0
charset-normalizer==3.3.2
pip install colorama==0.4.4
crayons==0.4.0
cryptography==42.0.4
customtkinter==5.2.2
cycler==0.11.0
darkdetect==0.8.0
decorator==4.4.2
EasyProcess==0.3
Eel==0.16.0
entrypoint2==0.2.4
fonttools==4.38.0
future==0.18.3
gevent==22.10.2
gevent-websocket==0.10.1
greenlet==3.0.3
h11==0.14.0
idna==2.10
imageio==2.31.2
imageio-ffmpeg==0.4.9
importlib-metadata==6.7.0
keyboard==0.13.5
kiwisolver==1.4.5
matplotlib==3.5.3
MouseInfo==0.1.3
pip install moviepy==1.0.3
mss==6.1.0
multipledispatch==1.0.0
numpy==1.21.6
opencv-python==4.9.0.80
packaging==23.2
pandas==1.3.5
pefile==2023.2.7
piexif==1.1.3
Pillow==9.5.0
proglog==0.1.10
pyasn1==0.5.1
---------------------------------
PyAutoGUI==0.9.54    NOT
---------------------------------
pycparser==2.21
pycryptodome==3.20.0
pyDes==2.0.1
pyfiglet==0.8.post1
PyGetWindow==0.0.9
pyinstaller==5.13.2
pyinstaller-hooks-contrib==2024.0
PyMsgBox==1.0.9
pyparsing==3.1.1
pyperclip==1.8.2
PyRect==0.2.0
pyscreenshot==3.0
PyScreeze==0.1.30
pystray==0.19.5
pytesseract==0.3.10
python-dateutil==2.8.2
python-magic==0.4.27
pytube==15.0.0
pytweening==1.0.7
pytz==2024.1
pywin32==301
pywin32-ctypes==0.2.2
requests==2.25.1
requests3==0.0.0
rsa==4.9
setuptools==47.1.0
six==1.16.0
soupsieve==2.4.1
stegano==0.9.9
subprocess.run==0.0.8
tk==0.1.0
tqdm==4.66.2
typing_extensions==4.7.1
urljoin2==1.0.13
urllib3==1.26.18
Wand==0.6.13
wget==3.2
whichcraft==0.6.1
youtube-download-cli==0.0.0.3
pip install youtube_dl
pip install yt-dlp
pip install yt-cli-dl
you-get
zipp==3.15.0
zope.event==5.0
zope.interface==6.1

                                   "
vpQDSa4n,Untitled,KoctrX,JavaScript,Monday 4th of March 2024 09:44:22 AM CDT,"{""event"":""blog-kit-generate-blogs"",""payload"":{""blog_topic"":""Maximizing Tiny Living: Ingenious Small-Space Decorating Tips"",""suggestion"":[{""title"":""Avoid self-defeating words like “can't” or “try”"",""description"":null},{""title"":""Emphasize Achievements"",""description"":null}],""describe_your_blog"":""Maximizing Tiny Living: Ingenious Small-Space Decorating Tips"",""keywords"":[""""],""numberOfBlogs"":4,""addons"":[{""title"":""Ethical SEO Practices"",""description"":""Outline ethical SEO practices and strategies, including what practices should be pursued and which manipulative or 'black-hat' techniques to avoid. Emphasize the importance of aligning with search engine guidelines for sustainable, long-term success."",""key"":""ethical_seo_practices""},{""title"":""Short description"",""description"":""Compose a brief description for the generated content that succinctly summarizes its key points. The description should be clear and informative, providing a quick understanding of the content's subject while adhering to a 150-160 character length to align with SEO best practices."",""key"":""short_description""},{""title"":""AI-Powered Topic Discovery"",""description"":""Use AI analysis to uncover and list potential topics that align with the content's subject matter. The topics should be relevant, trending, or have untapped potential according to current search queries and user interest, offering opportunities for future content expansion."",""key"":""ai-powered_topic_discovery""},{""title"":""Subject Headline "",""description"":""Craft three SEO-optimized subject headlines for the generated content that are engaging and reflect the content's main theme. Each headline should vary in structure to provide options, include targeted keywords to enhance search visibility, and be under 60 characters to meet standard SEO guidelines."",""key"":""subject_headline_""},{""title"":""Page Title"",""description"":""Generate an SEO-compliant page title that concisely conveys the essence of the content. The title should incorporate the primary keyword, be limited to 50-60 characters, and structured to capture the attention of users while adhering to search engine optimization standards."",""key"":""page_title""},{""title"":""Image Title"",""description"":""Provide a descriptive image title/tag that corresponds with the content's theme. Use relevant keywords that accurately describe the image, supporting both user understanding and image search optimization."",""key"":""image_title""},{""title"":""Predictive Performance Analytics"",""description"":""Present a predictive performance analysis of the content based on existing SEO metrics. Use available data to forecast potential traffic, user engagement, and ranking performance, providing actionable insights for content optimization."",""key"":""predictive_performance_analytics""},{""title"":""Schema Genie"",""description"":""Create a detailed schema markup for the content, ensuring it is structured in a way that search engines can parse easily and accurately. Include relevant attributes such as 'name,' 'articleBody,' and 'datePublished' to enhance content visibility and rich results performance."",""key"":""schema_genie""},{""title"":""Load Speed Analyst"",""description"":""Analyze the content's page load speed factors, offering a breakdown of elements that influence performance. Provide recommendations for optimization to ensure the content loads efficiently, contributing positively to both user experience and SEO ranking."",""key"":""load_speed_analyst""},{""title"":""Backlink Opportunities"",""description"":""Identify potential backlink opportunities for the current content piece by analyzing relevant domains with authority and content alignment. Highlight websites, blogs, and forums that would complement the content and provide value through possible backlinks. Summarize the top opportunities and suggest a strategy for outreach."",""key"":""backlink_opportunities""},{""title"":""SEO Audit & Action Plan"",""description"":""Conduct a comprehensive SEO audit of the specified content and digital presence. Identify strengths, weaknesses, and areas for improvement, including on-page, off-page, and technical SEO factors. Create a prioritized action plan with clear steps and recommendations to enhance overall SEO performance."",""key"":""seo_audit_&_action_plan""},{""title"":""Image SEO Enhancer"",""description"":""Review and suggest improvements for the current image assets associated with the content. Include recommendations for file naming, alt text, captions, and file size optimization to boost image visibility in search results. Provide actionable steps for enhancing the images' SEO relevance and performance"",""key"":""image_seo_enhancer""},{""title"":""Keyword Density Checker"",""description"":""Analyze the given content to determine the keyword density percentage. Identify the primary and secondary keywords and calculate their frequency relative to the total word count, ensuring they align with SEO best practices for keyword density. Provide a concise report with suggestions for optimal keyword distribution without keyword stuffing."",""key"":""keyword_density_checker""},{""title"":""Video SEO Toolkit"",""description"":""Present a comprehensive toolkit for optimizing video content for SEO. Address video titles, descriptions, tags, and transcript inclusion for better search engine discoverability. Offer guidance on video hosting best practices and how to structure surrounding content for maximum impact on SEO."",""key"":""video_seo_toolkit""},{""title"":""Keyword/# Suggestions"",""description"":""Generate a list of relevant keywords and hashtags that align with the current content's topic and audience search intent. Include tips for keyword placement and usage, as well as hashtag strategies for social media engagement, ensuring they are effective for SEO and audience connection."",""key"":""keyword/#_suggestions""},{""title"":""Semantic SEO Enhancer"",""description"":""Evaluate the content for semantic SEO optimization, focusing on context, related terms, and content structure. Provide suggestions for including related keywords, synonyms, and topical phrases to create more meaningful associations for search engines and improve content depth"",""key"":""semantic_seo_enhancer""},{""title"":""Image SEO Framework"",""description"":""Outline a framework for optimizing images within the content for better search performance. Include guidelines for file naming, alt attributes with descriptive and targeted keywords, image compression, and responsive image setup for various devices."",""key"":""image_seo_framework""},{""title"":""Trendy Seasonal Keywords"",""description"":""Identify trending seasonal keywords that can be leveraged in the content for timely relevance. Take into account current events, industry trends, and seasonal search queries to recommend high-impact keywords for immediate content optimization."",""key"":""trendy_seasonal_keywords""},{""title"":""Predictive Performance Analysis"",""description"":""Produce a predictive performance analysis report for the provided content. Assess current SEO metrics, including traffic, keywords, and backlinks, to forecast potential ranking and engagement outcomes. Offer insights and actionable recommendations to optimize the content's future performance."",""key"":""predictive_performance_analysis""},{""title"":""E-A-T Scorecard"",""description"":""Produce an E-A-T (Expertise, Authoritativeness, Trustworthiness) scorecard to evaluate the content's credibility factors per Google's guidelines. Assess the author's expertise, the content's authoritative sources, and trust signals that could impact its perceived reliability by users and search engines."",""key"":""e-a-t_scorecard""},{""title"":""Mobile Organization Checklist"",""description"":""Create a checklist detailing critical elements for optimizing content for mobile devices. Address responsive design, touch-friendly interfaces, and page load speeds. Ensure all recommendations fall in line with best practices for mobile SEO and user experience."",""key"":""mobile_organization_checklist""},{""title"":""Meta Description"",""description"":""Create a meta description for the provided content that succinctly summarizes the main points while enticing readers to click through. The description should be between 150-160 characters, incorporate targeted keywords, and accurately reflect the content to enhance click-through rates and align with SEO best practices."",""key"":""meta_description""},{""title"":""Competitor SEO Spy"",""description"":""Conduct a comprehensive SEO analysis of competitors' websites. Provide a detailed breakdown of their keyword usage, backlink strategy, content formatting, and SERP positioning. Summarize key findings and outline strategic opportunities that could be adapted to improve the user's competitive edge in SEO."",""key"":""competitor_seo_spy""},{""title"":""Keyword/# Suggestion"",""description"":""Create a list of primary and secondary keywords related to the given topic, including potential hashtags for social media engagement. The suggestions should be based on current search trends, keyword competition, and relevance to the content's subject matter. The goal is to aid in content optimization and increase online visibility."",""key"":""keyword/#_suggestion""}],""minAmountWords"":500},""id"":""b017c927-e5db-4134-9ae1-dd0caa02c721""}"
ht2HE1GA,redstion_base_item_maker,Zeehao,Lua,Monday 4th of March 2024 09:24:59 AM CDT,"local redstone = require(""component"").redstone
local transposer = require(""component"").transposer
local sides = require(""sides"")
local ic = require(""inventory_controller"")

local JobService = require(""craft_job"").JobService
local loggers = require(""logger"")

os.execute(""rm /autorun.lua"")
os.execute(""cp /home/time_base_item_maker_back.lua /home/autorun.lua"")

local function init (service) 
    local slot = ic.find_first_item_slot(transposer, sides.top)
    local item_info = ic.get_inventory_item_info(transposer, sides.top,slot)
    service.db_key = item_info.label
    service.name = item_info.label .. "" (Auto)""
end

local function begin ()
    local left = redstone.getOutput(sides.left)
    local right = redstone.getOutput(sides.right)
    local front = redstone.getOutput(sides.front)
    local back = redstone.getOutput(sides.back)

    local top = redstone.getInput(sides.top)

    local signal = 0
    if left ~= 0 then
        signal = left
    elseif right ~= 0 then
        signal = right
    elseif front ~= 0 then
        signal = front
    elseif back ~= 0 then
        signal = back
    end

    return math.floor(signal+0.5), top > 0
end

local function after ()
    redstone.setOutput(sides.top, 0)
end

local function craft ()
    redstone.setOutput(sides.top, 15)
end

local service = JobService:new(
    """",
    """",
    ""Reston Base Crafting (Auto)"",
    init,
    craft,
    begin,
    after
)

loggers.disable(""kv_p_database_client"")

service:init(true)

service:listen_auto()"
nrKpbkMr,SFBTDBNFYNMY,gadungw71,PHP,Monday 4th of March 2024 09:23:20 AM CDT,"•	https://znscql9213.expandcart.com/index.php?route=product/product&product_id=373
•	https://lmjbqe3835.expandcart.com/index.php?route=product/product&product_id=373
•	https://lmjbqe3835.expandcart.com/index.php?route=product/product&product_id=374
•	https://github.com/Xem-phim-Kung-Fu-Panda-4-2024-Vietnam
•	https://erqpss3283.expandcart.com/index.php?route=product/product&product_id=373
•	https://erqpss3283.expandcart.com/index.php?route=product/product&product_id=374
•	https://www.taskade.com/p/full-hd-xem-phim-kung-fu-panda-4-2024-vietsub-4-k-01HR3XJADJ9FPYZSS0D8S25YGP
•	https://wbpsgt4217.expandcart.com/index.php?route=product/product&product_id=373
•	https://github.com/Xem-PHIM-Hanh-Tinh-Cat-Ph-n-Hai-Vietsub
•	https://vdlutz0735.expandcart.com/index.php?route=product/product&product_id=373
•	https://www.taskade.com/p/full-hd-phim-hanh-tinh-cat-phan-hai-2024-xem-vietsub-01HR43HZAQQ2YANFHCGYT6YXBD
•	https://github.com/Xem-Phim-Mai-2024-Vietsub-4k
•	https://www.taskade.com/p/full-hd-xem-phim-mai-2024-vietsub-high-quality-01HR4686H53MJ879VJX22QXYC4
•	https://www.taskade.com/p/xem-phim-kung-fu-panda-4-thuyet-minh-2024-vietsub-thuyet-minh-01HR46QJTFYJCH6PPNXQV8ZG9V
•	https://github.com/Xem-phim-Kung-Fu-Panda-4-FULL-Vietsub
•	https://www.taskade.com/p/xem-phim-kung-fu-panda-4-2024-thuyet-minh-vietnam-full-hd-01HR479DX98YWCJECSTGDAJS4K
•	https://tinhte.vn/thread/2024.3767650/
•	https://qecrch7807.expandcart.com/index.php?route=product/product&product_id=373
•	https://www.taskade.com/p/hd-2024-01HR4NFG6BEGKSGM9834Y8AKBQ
•	https://github.com/Phim-Mai-2024-Vietsub-FULL-HD
•	https://vk.com/@blurayhd1080p-2024-hdbd1080phd
•	https://vk.com/@-218218730-to-the-hashira-training-2024
•	https://m.facebook.com/media/set/?set=a.122139666524084494
•	https://www.taskade.com/p/2024-01HR4R2QTRDZ5S2JASNGYZQD6X
•	https://m.facebook.com/media/set/?set=a.377853565189025
•	https://vviaek1370.expandcart.com/index.php?route=product/product&product_id=373
•	https://vviaek1370.expandcart.com/index.php?route=product/product&product_id=374
•	https://demo.hedgedoc.org/s/FeyIMpqqH
•	https://medium.com/@cohiyuvehij27/%E9%94%BB%E5%88%80%E6%9D%91%E7%AF%87%E6%9C%80%E5%90%8E%E4%B8%80%E9%9B%86-%E6%9F%B1%E8%AE%AD%E7%BB%83%E7%AF%87%E7%AC%AC%E4%B8%80%E9%9B%86-%E7%B7%9A%E4%B8%8A%E7%9C%8B%E5%B0%8F%E9%B4%A8%E5%AE%8C%E6%95%B4%E7%89%88-2024-hd-cf56af5e4f4f
•	https://open.firstory.me/story/cltd2g5m500j401yo4u3dhvpu
•	https://paiza.io/projects/yJCKHQz60JsQ4DlscyBuUA
•	https://pastelink.net/2atwr5pv
•	https://glot.io/snippets/gtznjn0vld
•	https://rentry.co/5ib6fz2m
•	https://paste.ec/paste/qpwHf06C#H32IlGLabcn9ccYe5FVxok-2Tvg3GX7VRw+SuPiDWDN
•	https://tempaste.com/U6a1BzEMEH9
•	https://telegra.ph/MACUNN-03-04
•	https://yamcode.com/sdbdbtf-67
"
TeLyjcxY,zadacha 15,Mario_Hristov,C,Monday 4th of March 2024 09:22:39 AM CDT,"#include <stdio.h>

int main()
{
    float N, W, L, M, O;
    printf(""Дължина на страна на площадката: "");
    scanf(""%f"", &N);
    printf(""Широчина на една плочка: "");
    scanf(""%f"", &W);
    printf(""Дължина на една плочка: "");
    scanf(""%f"", &L);
    printf(""Широчина на пейката: "");
    scanf(""%f"", &M);
    printf(""Дължина на пейката: "");
    scanf(""%f"", &O);
    float tile_time_placing = 0.2; // in minutes
    // to find how much tiles needed and the required time
    float land_area = N * N;
    float bench_area = M * O;
    float area_without_bench = land_area - bench_area;
    float tile_area = W * L;
    float tiles_needed = area_without_bench / tile_area;
    float time_needed = tiles_needed * 0.2;
    printf(""Броя на нужните плочки за покриване на площадката са: %.2f \n"", tiles_needed);
    printf(""Нужното време за поставянето им е: %.2f минути"", time_needed);
}"
uKqcmgAR,Untitled,Ionian_Caster,C,Monday 4th of March 2024 08:57:34 AM CDT,"#include <stdio.h>

int printRec(int val) {
    if (val > 20) return;
    printf(""%d "", val);
    printRec(val + 1);
}

int main(void) {
    printRec(1);
    return 0;
}
"
TpFqRTut,Notepad++ Z80 ASM syntax highlighting config file,wallyweek,XML,Monday 4th of March 2024 08:53:41 AM CDT,"<NotepadPlus>
    <UserLang name=""Assembly Z80"" ext=""asm"" udlVersion=""2.1"">
        <Settings>
            <Global caseIgnored=""yes"" allowFoldOfComments=""no"" foldCompact=""no"" forcePureLC=""0"" decimalSeparator=""0""/>
            <Prefix Keywords1=""no"" Keywords2=""no"" Keywords3=""no"" Keywords4=""no"" Keywords5=""no"" Keywords6=""no"" Keywords7=""no"" Keywords8=""no""/>
        </Settings>
        <KeywordLists>
            <Keywords name=""Comments"">00; 01 02 03 04</Keywords>
            <Keywords name=""Numbers, prefix1""/>
            <Keywords name=""Numbers, prefix2""># $ %</Keywords>
            <Keywords name=""Numbers, extras1"">A B C D E F a b c d  e f</Keywords>
            <Keywords name=""Numbers, extras2""/>
            <Keywords name=""Numbers, suffix1""/>
            <Keywords name=""Numbers, suffix2""/>
            <Keywords name=""Numbers, range""/>
            <Keywords name=""Operators1"">% &amp; ( ) * , / : \ ^ + =</Keywords>
            <Keywords name=""Operators2""/>
            <Keywords name=""Folders in code1, open""/>
            <Keywords name=""Folders in code1, middle""/>
            <Keywords name=""Folders in code1, close""/>
            <Keywords name=""Folders in code2, open""/>
            <Keywords name=""Folders in code2, middle""/>
            <Keywords name=""Folders in code2, close""/>
            <Keywords name=""Folders in comment, open""/>
            <Keywords name=""Folders in comment, middle""/>
            <Keywords name=""Folders in comment, close""/>
            <Keywords name=""Keywords1"">adc add and bit call ccf cp cpd cpdr cpi cpir cpl daa dec di djnz ei ex exx halt im in inc ind indr ini inir jp jr ld ldd lddr ldi ldir neg nop or otdr otir out outd outi pop push res ret reti retn rl rla rlc rlca rld rr rra rrc rrca rrd rst sbc scf set sla sll sra srl sub xor</Keywords>
            <Keywords name=""Keywords2"">alias align break case db defb defs defw ds dw else end endif endm endr ends equ error expand if ifdef ifndef incbin include list macro message messg noexpand nolist org processor repeat rept rorg seg segu set switch unalias unset warning</Keywords>
            <Keywords name=""Keywords3"">a af  b bc c d de e h hl i ix ixh ixl iy iyh iyl l r sp m nc nz p pe pm po z</Keywords>
            <Keywords name=""Keywords4""/>
            <Keywords name=""Keywords5""/>
            <Keywords name=""Keywords6""/>
            <Keywords name=""Keywords7""/>
            <Keywords name=""Keywords8""/>
            <Keywords name=""Delimiters"">00' 01 02' 03"" 04 05"" 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23</Keywords>
        </KeywordLists>
        <Styles>
            <WordsStyle name=""DEFAULT"" fgColor=""00FF00"" bgColor=""000000"" fontName="""" fontStyle=""0"" nesting=""0""/>
            <WordsStyle name=""COMMENTS"" fgColor=""000000"" bgColor=""FFFFFF"" fontName="""" fontStyle=""0"" nesting=""256""/>
            <WordsStyle name=""LINE COMMENTS"" fgColor=""FF0000"" bgColor=""000000"" fontName="""" fontStyle=""2"" nesting=""512""/>
            <WordsStyle name=""NUMBERS"" fgColor=""0080C0"" bgColor=""000000"" fontName="""" fontStyle=""0"" nesting=""0""/>
            <WordsStyle name=""KEYWORDS1"" fgColor=""FFFFFF"" bgColor=""000000"" fontName="""" fontStyle=""1"" nesting=""0""/>
            <WordsStyle name=""KEYWORDS2"" fgColor=""00FFFF"" bgColor=""000000"" fontName="""" fontStyle=""1"" nesting=""0""/>
            <WordsStyle name=""KEYWORDS3"" fgColor=""FF80FF"" bgColor=""000000"" fontName="""" fontStyle=""0"" nesting=""0""/>
            <WordsStyle name=""KEYWORDS4"" fgColor=""800080"" bgColor=""000000"" fontName="""" fontStyle=""0"" nesting=""0""/>
            <WordsStyle name=""KEYWORDS5"" fgColor=""000000"" bgColor=""FFFFFF"" fontName="""" fontStyle=""0"" nesting=""0""/>
            <WordsStyle name=""KEYWORDS6"" fgColor=""000000"" bgColor=""FFFFFF"" fontName="""" fontStyle=""0"" nesting=""0""/>
            <WordsStyle name=""KEYWORDS7"" fgColor=""000000"" bgColor=""FFFFFF"" fontName="""" fontStyle=""0"" nesting=""0""/>
            <WordsStyle name=""KEYWORDS8"" fgColor=""000000"" bgColor=""FFFFFF"" fontName="""" fontStyle=""0"" nesting=""0""/>
            <WordsStyle name=""OPERATORS"" fgColor=""FF8040"" bgColor=""000000"" fontName="""" fontStyle=""0"" nesting=""0""/>
            <WordsStyle name=""FOLDER IN CODE1"" fgColor=""000000"" bgColor=""FFFFFF"" fontName="""" fontStyle=""0"" nesting=""0""/>
            <WordsStyle name=""FOLDER IN CODE2"" fgColor=""000000"" bgColor=""FFFFFF"" fontName="""" fontStyle=""0"" nesting=""0""/>
            <WordsStyle name=""FOLDER IN COMMENT"" fgColor=""000000"" bgColor=""FFFFFF"" fontName="""" fontStyle=""0"" nesting=""0""/>
            <WordsStyle name=""DELIMITERS1"" fgColor=""FFFF80"" bgColor=""000000"" fontName="""" fontStyle=""0"" nesting=""0""/>
            <WordsStyle name=""DELIMITERS2"" fgColor=""FFFF80"" bgColor=""000000"" fontName="""" fontStyle=""0"" nesting=""0""/>
            <WordsStyle name=""DELIMITERS3"" fgColor=""000000"" bgColor=""FFFFFF"" fontName="""" fontStyle=""0"" nesting=""0""/>
            <WordsStyle name=""DELIMITERS4"" fgColor=""000000"" bgColor=""FFFFFF"" fontName="""" fontStyle=""0"" nesting=""0""/>
            <WordsStyle name=""DELIMITERS5"" fgColor=""000000"" bgColor=""FFFFFF"" fontName="""" fontStyle=""0"" nesting=""0""/>
            <WordsStyle name=""DELIMITERS6"" fgColor=""000000"" bgColor=""FFFFFF"" fontName="""" fontStyle=""0"" nesting=""0""/>
            <WordsStyle name=""DELIMITERS7"" fgColor=""000000"" bgColor=""FFFFFF"" fontName="""" fontStyle=""0"" nesting=""0""/>
            <WordsStyle name=""DELIMITERS8"" fgColor=""000000"" bgColor=""FFFFFF"" fontName="""" fontStyle=""0"" nesting=""0""/>
        </Styles>
    </UserLang>
</NotepadPlus>"
5MM9xuWT,Untitled,Josif_tepe,C++,Monday 4th of March 2024 08:52:10 AM CDT,"#include <iostream>


using namespace std;


int main()
{
    int a,b;
    int suma =0;
    cin>>a>>b;
    if(b == 1) {
        cout << a / 100 << endl;
    }
    else if(b == 2) {
        cout << (a / 10) % 10 << endl;
    }
    else if(b == 3) {
        cout <<a % 10 << endl;
    }
    else {
        
        
        for(int i =1;i<=b-3;i++){
            int posledna_cifra = a%10;
            int vtora_cifra = (a/10)%10;
            int prva_cifra = a/100;
            suma=posledna_cifra+vtora_cifra+prva_cifra;
            int c=suma%10;
            a*=10;
            a+=c;
            a%=1000;
            
            
        }
        cout<<a%10<<endl;
    }
    return 0;
}
"
nSH3hx0M,suporte-cristiano-jdev-mentoria-loja-virtual,tadeuespindola,PostgreSQL,Monday 4th of March 2024 08:39:18 AM CDT,"INSERT INTO public.pessoa_fisica(
	id, email, nome, telefone, cpf, data_nascimento, tipo_pessoa)
	VALUES (2, 'admin@admin.com', 'ADMIN', '61986473912', '12345678912', '1985-09-16', 'FISICA');

INSERT INTO public.usuario(
	id, data_atual_senha, login, senha, pessoa_id)
	VALUES (1, '2024-03-04', 'admin', '$2a$10$sz9qASIqypU6WuZuxIVm0e72afJUyaXc9QWZt.enq8sUrRAQgH9Ny', 2);

INSERT INTO public.acesso(
	id, descricao)
	VALUES (1, 'ROLE_ADMIN');

INSERT INTO public.usuarios_acesso(
	usuario_id, acesso_id)
	VALUES (1, 1);"
cighAc8H,CatalogueManager,TaylorsRus,Lua,Monday 4th of March 2024 08:32:50 AM CDT,"local CatalogueManager = {}

local MarketplaceService = game:GetService(""MarketplaceService"")
local InputService = game:GetService(""UserInputService"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local SoundService = game:GetService(""SoundService"")
local InsertService = game:GetService(""InsertService"")

local Player = game:GetService(""Players"").LocalPlayer
local Mouse = Player:GetMouse()
local Camera = workspace.CurrentCamera

local PlayerGui = Player:WaitForChild(""PlayerGui"")
local AccessoryHold = ReplicatedStorage:WaitForChild(""AccessoryHold"")
local Config = ReplicatedStorage:WaitForChild(""Config"")
local Events = ReplicatedStorage:WaitForChild(""Events"")

local ProductData = require(Config:WaitForChild(""Product""))

local RequestData = Events:WaitForChild(""RequestData"")
local SendRequest = Events:WaitForChild(""SendRequest"")

local CatalogueGui = PlayerGui:WaitForChild(""CatalogueGui"")
local MainFrame = CatalogueGui:WaitForChild(""MainFrame"")

local ScrollingFrame = MainFrame:WaitForChild(""ScrollingFrame"")
local SearchRibbon = MainFrame:WaitForChild(""SearchRibbon"")
local TabsRibbon = MainFrame:WaitForChild(""TabsRibbon"")
local TextBox = SearchRibbon:WaitForChild(""TextBox"")

local Designer = workspace:WaitForChild(""Designer"")
local Avatar = Designer:WaitForChild(""Avatar"")

local Humanoid, HumRP = Avatar:WaitForChild(""Humanoid""), 
	Avatar:WaitForChild(""HumanoidRootPart"")

local ItemAssociations = {
	Head = {
		""Hat"",
		""Hair"",
		""Face"",
		""Neck"",
		""Eyebrow"",
		""Eyelash""
	},
	Torso = {
		""Neck"",
		""Shoulder"",
		""Front"",
		""Back"",
		""Waist"",
		""TShirt"",
		""Shirt"",
		""Pants"",
		""Jacket"",
		""Sweater"",
		""Unknown"",
	},
	Arms = {
		""TShirt"",
		""Shirt"",
		""Jacket"",
		""Sweater"",
	},
	Legs = {
		""Waist"",
		""Pants"",
		""Shorts"",
		""LeftShoe"",
		""RightShoe"",
		""DressSkirt""
	}
}

local CatalogueData = {}
local CatalogueConnections = {
	--[[ View = {
			Cell = {
				Base = {
					--// Connections on the cell itself
					ConnectionName = RbxScriptSignal
				}, 
				Any other keys will be separate objects within the cell, which 
				will also have a table of connections.
				
				ex; Try = {
					MouseButton1Click = RbxScriptSignal
				}
			}
		}]]
}
--// Scale values, not offset.
local HORIZONTAL_GAP = .247
local VERTICAL_GAP = .359 

local CELL_BASE_TRANSPARENCY = .5
local CELL_HOVER_TRANSPARENCY = .4
local CELL_ACTIVATED_TRANSPARENCY = .25

--// Both values are percentage based on ViewportSize
local MOUSE_PORTION_X_OFFSET = .4
local MOUSE_PORTION_X_SIZE = 50
local MOUSE_PORTION_Y_SIZE = 90

local AVATAR_ROTATION_SPEED = .5

local EQUIP_COLOR = Color3.fromRGB(49, 43, 162)
local TAKE_OFF_COLOR = Color3.fromRGB(150, 44, 44)

local FirstItem = true
local MouseInScreenPortion = false
local MouseHoldingScreenPortion = false

local LastMousePosition = 0
local InitialClick = true

local function VisualizeScreenPortion(PortionWidth, PortionHeight, PortionPosition)
	local ScreenGui = Instance.new(""ScreenGui"")
	local PortionFrame = Instance.new(""Frame"")
	
	ScreenGui.Name = ""ScreenPortionDEBUG""
	ScreenGui.IgnoreGuiInset = true
	
	PortionFrame.Position = UDim2.new(0, PortionPosition.X, 0, PortionPosition.Y)
	PortionFrame.Size = UDim2.new(0, PortionWidth, 0, PortionHeight)
	PortionFrame.BackgroundTransparency = .75
	
	PortionFrame.Parent = ScreenGui
	ScreenGui.Parent = PlayerGui
end

local function ScaleToOffset(X, Y, ParentFrame)
	local ViewportSize = Camera.ViewportSize

	X = ParentFrame ~= nil and X * ParentFrame.AbsoluteSize.X
		or X * ViewportSize.X
	Y = ParentFrame ~= nil and Y * ParentFrame.AbsoluteSize.Y
		or Y * ViewportSize.Y
	return X, Y
end

local function OffsetToScale(X, Y, ParentFrame)
	local ViewportSize = Camera.ViewportSize
	
	X = ParentFrame ~= nil and X / ParentFrame.AbsoluteSize.X
		or X / ViewportSize.X
	Y = ParentFrame ~= nil and Y / ParentFrame.AbsoluteSize.Y
		or Y / ViewportSize.Y
	return X, Y
end

local function CompareIndicies(A, B)
	local NameA = CatalogueData[A].Name:lower()
	local NameB = CatalogueData[B].Name:lower()

	return NameA < NameB
end

local function GetConvertedGeometryOfGuiObject(GuiObject, Geometry, Type)
	local ConvertFunction = Type == ""Offset"" and ScaleToOffset
		or Type == ""Scale"" and OffsetToScale
	
	local InitialGeometry = GuiObject[Geometry]
	local InitialX, InitialY = InitialGeometry.X[Type], InitialGeometry.Y[Type]
	if Type == ""Offset"" then
		InitialX, InitialY = InitialX / 1000, InitialY / 1000
	end
	
	local NewX, NewY = ConvertFunction(InitialX, InitialY, GuiObject.Parent)
	local NewGeometry = Type == ""Offset"" and UDim2.new(0, NewX, 0, NewY) or 
			Type == ""Scale"" and UDim2.new(NewX, 0, NewY, 0)
	return NewGeometry
end

local function ConvertCatalogueToOffset()
	for _,View in ipairs(ScrollingFrame:GetChildren()) do
		for _,Gui in ipairs(View:GetDescendants()) do
			--// We look for GuiButton and Frame so we don't have cutoff at the bottom for the details of the cell.
			if not Gui:IsA(""GuiButton"") and not Gui:IsA(""Frame"") then
				continue
			end

			local Details = Gui:FindFirstChild(""Details"")
			local GuiSize, GuiPosition = Gui.Size, Gui.Position

			local NewSize = GetConvertedGeometryOfGuiObject(Gui, ""Size"", ""Offset"")
			local NewPosition = GetConvertedGeometryOfGuiObject(Gui, ""Position"", ""Offset"") 
			
			warn(`NewSize: {NewSize}, NewPosition: {NewPosition}`)
			if NewSize ~= UDim2.new(0, 0, 0, 0) then
				Gui.Size = NewSize
			end
			if NewPosition ~= UDim2.new(0, 0, 0, 0) then
				Gui.Position = NewPosition 
			end
			
			if not Details then
				continue
			end
			for _,Label in ipairs(Details:GetChildren()) do
				NewSize = GetConvertedGeometryOfGuiObject(Gui, ""Size"", ""Scale"")
				NewPosition = GetConvertedGeometryOfGuiObject(Gui, ""Position"", ""Scale"")
				
				if NewSize ~= UDim2.new(0, 0, 0, 0) then
					Gui.Size = NewSize
				end
				Gui.Position = NewPosition
			end
		end
	end
	--// Repeat for the details of the frame, after the parent has been scaled
end

local function SortCatalogueAlpabetically()
	local SortedCatalogue = {}
	local CatalogueIndicies = {}

	for Index,_ in ipairs(CatalogueData) do
		CatalogueIndicies[Index] = Index
	end
	table.sort(CatalogueIndicies, CompareIndicies)

	for _,Index in ipairs(CatalogueIndicies) do
		table.insert(SortedCatalogue, CatalogueData[Index])
	end
	CatalogueData = {}

	for _,Data in ipairs(SortedCatalogue) do
		table.insert(CatalogueData, Data)
	end
end

local function EnableCorrectViewFrame(Tab)
	local SearchFrame = ScrollingFrame:FindFirstChild(""Search"")
	local ViewFrame, EnabledLine = nil
	if Tab ~= nil then
		ViewFrame =	ScrollingFrame:FindFirstChild(Tab.Name) 
		Tab.EnabledLine.BackgroundTransparency = 0

		if SearchFrame then
			SearchFrame:Destroy()
		end
	else
		ViewFrame = SearchFrame
	end
	
	for _,OtherViewFrame in ipairs(ScrollingFrame:GetChildren()) do
		if not OtherViewFrame:IsA(""Frame"") or OtherViewFrame == ViewFrame or OtherViewFrame.Name == ""Search"" then
			continue
		end
		local OtherEnabledLine = TabsRibbon[OtherViewFrame.Name].EnabledLine

		OtherEnabledLine.BackgroundTransparency = 1
		OtherViewFrame.Visible = false
	end

	if ViewFrame and not ViewFrame.Visible then
		ViewFrame.Visible = true
	end
end

local function EquipAsset(Try)
	local Cell = Try.Parent
	local AssetId = Cell:GetAttribute(""AssetId"")

	for _,AssetData in ipairs(CatalogueData) do
		local Id = AssetData.AssetId		
		if Id == AssetId then
			SendRequest:FireServer(""AddAccessoryToDesigner"", AssetId)
		end
	end
	
	Try.BackgroundColor3 = TAKE_OFF_COLOR
	Try.Text = ""Take Off""
end

local function DeEquipAsset(Try)
	local Cell = Try.Parent
	local Accessories = Humanoid:GetAccessories()
	local AssetId = Cell:GetAttribute(""AssetId"")
	
	for _,Accessory in Accessories do
		if Accessory:GetAttribute(""AssetId"") ~= AssetId then
			continue
		end	 
		Accessory:Destroy()
	end
	
	Try.BackgroundColor3 = EQUIP_COLOR
	Try.Text = ""Try On""
end

local function BuyMouseButton1Click(Buy)
	local Cell = Buy.Parent
	local AssetId = Cell:GetAttribute(""AssetId"")
	
	SendRequest:FireServer(""PromptPurchase"", AssetId)
end

local function TryMouseButton1Click(Try)
	local Cell = Try.Parent
	local AssetId = Cell:GetAttribute(""AssetId"")

	local AssetEquipped = Cell:GetAttribute(""Equipped"")
	local ResultingFunction = not AssetEquipped and EquipAsset
		or DeEquipAsset
	
	ResultingFunction(Try)	
	Cell:SetAttribute(""Equipped"", not AssetEquipped)
end


local function HideAllCellButtons(View)
	for _,Cell in ipairs(View:GetChildren()) do
		for _,Button in ipairs(Cell:GetChildren()) do
			if not Button:IsA(""GuiButton"") then
				continue
			end

			Button.Visible = false
		end
	end
end

local function CellMouseEntered(Cell)
	local Sound = _G.GetSound(""Hover"")
	Sound.Parent = SoundService
	Sound:Destroy()

	Cell.BackgroundTransparency = CELL_HOVER_TRANSPARENCY
end

local function CellMouseLeft(Cell)
	Cell.BackgroundTransparency = CELL_BASE_TRANSPARENCY
end

local function CellMouse1Click(Cell)
	local Click = _G.GetSound(""Click"")
	local View = Cell.Parent
	local Buy, Try = Cell.Buy, Cell.Try

	local Activated = nil

	--// First, we disable all cells Buy and Try buttons.
	HideAllCellButtons(View)

	--// Then, we can enable our cells Buy and Try buttons.
	print(""CellMouse1Click ran."")
	for _,Button in ipairs({Buy, Try}) do
		Activated = Button.Visible
		print(not Activated)
		Button.Visible = not Activated
	end

	local NewCellTransparency = Activated and CELL_ACTIVATED_TRANSPARENCY or CELL_BASE_TRANSPARENCY
	Cell.BackgroundTransparency = NewCellTransparency
	Click.Parent = SoundService
	Click:Destroy()
end

local function CellButtonMouse1Click(Button)
	local Cell = Button.Parent
	local Buy, Try = Cell.Buy, Cell.Try

	local Click = _G.GetSound(""Click"")
	
	local Function = Button.Name == ""Buy"" and BuyMouseButton1Click
		or TryMouseButton1Click
	
	Function(Button)

	Buy.Visible, Try.Visible = false, false
	Cell.BackgroundTransparency = CELL_BASE_TRANSPARENCY
	Click.Parent = SoundService
	Click:Destroy()
end

local function EstablishCellConnections(Cell)
	local View = Cell.Parent
	local Try, Buy = Cell:WaitForChild(""Try""),
		Cell:WaitForChild(""Buy"")

	local ViewConnections = CatalogueConnections[View.Name]
		ViewConnections.Base = {}
		ViewConnections.Try = {}
		ViewConnections.Buy = {}
		
	local BaseConnections = ViewConnections.Base
	local TryConnections, BuyConnections = ViewConnections.Try, ViewConnections.Buy

	BaseConnections.MouseEnter = Cell.MouseEnter:Connect(function()
		CellMouseEntered(Cell)
	end)
	BaseConnections.MouseLeave = Cell.MouseLeave:Connect(function()
		CellMouseLeft(Cell)
	end)
	BaseConnections.Mouse1Click = Cell.MouseButton1Click:Connect(function()
		CellMouse1Click(Cell)
	end)
	
	for _,Button in ipairs({Try, Buy}) do
		ViewConnections[Button.Name].Mouse1Click = Button.MouseButton1Click:Connect(function()
			CellButtonMouse1Click(Button)
		end)
	end
end

local function EstablishTabConnections(Tab)
	Tab.MouseEnter:Connect(function()
		local Sound = _G.GetSound(""Hover"")
		Sound.Parent = SoundService
		Sound:Destroy()

		Tab.ImageTransparency = .35
	end)
	Tab.MouseLeave:Connect(function()
		Tab.ImageTransparency = 0
	end)	
	Tab.MouseButton1Click:Connect(function()
		if Tab:GetAttribute(""Enabled"") then
			return
		end

		local Sound = _G.GetSound(""Click"")
		Sound.Parent = SoundService
		Sound:Destroy()

		Tab:SetAttribute(""Enabled"", true)
		for _,OtherTab in ipairs(TabsRibbon:GetChildren()) do
			if OtherTab == Tab then
				continue
			end
			Tab:SetAttribute(""Enabled"", false)
		end
		EnableCorrectViewFrame(Tab)
	end)
end


local function EstablishViewConnections(View)
	CatalogueConnections[View.Name] = {}
	local ViewConnections = CatalogueConnections[View.Name] 
	for _,Cell in ipairs(View:GetChildren()) do

		ViewConnections[Cell.Name] = {}
		ViewConnections.Base = {}
		ViewConnections.Try = {}
		ViewConnections.Buy = {}

		EstablishCellConnections(Cell)		
	end
end

local function CreateCatalogueCell(View)
	local ViewFrame = ScrollingFrame[View.Name]
	local FirstItem = ViewFrame:GetAttribute(""FirstItem"")

	local Column, Row = ViewFrame:GetAttribute(""Column""),
		ViewFrame:GetAttribute(""Row"")
	local PreviousCellName = ""Cell""..tostring(Row)..""-""..(tostring(Column))

	local NewColumn = Column < 4 and Column + 1 or 1
	local NewRow = NewColumn == 1 and Row + 1 or Row
	local NewCellName = ""Cell""..tostring(NewRow)..""-""..tostring(NewColumn)

	local PreviousCell = ViewFrame[PreviousCellName]
	local NewCell = PreviousCell:Clone()
	if NewCell.Name:match(""-(.)"") == ""4"" then
		NewCell = ViewFrame[""Cell""..tostring(Row)..""-1""]:Clone()
	end

	local CurrentPosition = NewCell.Position
	CurrentPosition = UDim2.fromScale(OffsetToScale(CurrentPosition.X.Offset, CurrentPosition.Y.Offset, ScrollingFrame))

	local NewPosition = NewRow == Row and UDim2.new(CurrentPosition.X.Scale + HORIZONTAL_GAP, 0, CurrentPosition.Y.Scale, 0)
		or UDim2.new(CurrentPosition.X.Scale, 0, CurrentPosition.Y.Scale + VERTICAL_GAP, 0)
	NewPosition = UDim2.fromOffset(ScaleToOffset(NewPosition.X.Scale, NewPosition.Y.Scale, ScrollingFrame)) 

	if FirstItem then
		NewPosition = CurrentPosition
		NewCellName = ""Cell1-1""
		NewColumn, NewRow = 1, 1

		ViewFrame:SetAttribute(""FirstItem"", false)
		PreviousCell:Destroy()
	end

	NewCell.Name = NewCellName
	NewCell.Position = NewPosition
	NewCell.Parent = ViewFrame	

	ViewFrame:SetAttribute(""Column"", NewColumn)	
	ViewFrame:SetAttribute(""Row"", NewRow)

	return NewCell
end

--// Try and implement the search function into this functionality.
local function CreateCatalogueView(View)
	local ViewFrame = ScrollingFrame[View.Name]
	
	for _,AssetData in ipairs(CatalogueData) do
		local AssetId, AssetName = AssetData.AssetId, AssetData.Name	
		local Accessory = AssetData.Accessory
		if Accessory == nil then
			continue
		end

		local AccessoryType = Accessory.AccessoryType
		local CorrectAssetType = View.Name == ""All"" and true 
			or table.find(ItemAssociations[View.Name], AccessoryType.Name)
		if not CorrectAssetType then
			continue
		end		

		local Name, Price = AssetData.Name, AssetData.PriceInRobux

		local Cell = CreateCatalogueCell(View)
		local Details = Cell.Details
		local NameLabel, PriceLabel = Details.Label, Details.Price		

		Cell.Image = `rbxthumb://type=Asset&id={AssetId}&w=420&h=420`
		Cell:SetAttribute(""AssetId"", AssetId)
		Cell:SetAttribute(""Name"", Name)

		NameLabel.Text, PriceLabel.Text = Name, tostring(Price)
	end
	EstablishViewConnections(ViewFrame)
	--ConvertCatalogueToOffset()
end

local function LoadAllAccessories()
	for _,AssetData in ipairs(CatalogueData) do
		local AssetId = AssetData.AssetId

		local AccessoryLoaded = RequestData:InvokeServer(""LoadAccessory"", AssetId)
		if not AccessoryLoaded then
			continue
		end

		local Accessory = AccessoryHold:FindFirstChildOfClass(""Accessory"")
		local AccessoryType = Accessory.AccessoryType
		if AccessoryType == nil then
			continue
		end

		AssetData.Accessory = Accessory
		Accessory.Parent = nil
	end
end

local function LoadCatalogueData()
	for _,AssetId in ipairs(ProductData) do
		table.insert(CatalogueData, MarketplaceService:GetProductInfo(AssetId))
	end
	SortCatalogueAlpabetically()
	LoadAllAccessories()
end

local function RemoveCellsFromSearchResult(View, Result)	
	for _,Cell in ipairs(View:GetChildren()) do
		local AssetName = string.lower(Cell:GetAttribute(""Name"") or """")
		local NameContainsSearch = string.find(AssetName, Result)

		if not NameContainsSearch then
			Cell:Destroy()
		else
			Cell.Position = UDim2.new(0, 0, 0, 0)
		end
	end 
end

local function PositionBunchedCells(View)
	local PreviousCell = nil

	for _,Cell in ipairs(View:GetChildren()) do
		local Row, Column = View:GetAttribute(""Row"") or 1,
			View:GetAttribute(""Column"") or 1
		local NewColumn = (Column + 1 <= 4 and Column + 1) or 1
		if PreviousCell == nil then
			NewColumn = 1
		end
		local NewRow = (NewColumn == 1 and Row + 1) or Row

		local CurrentPosition = PreviousCell and PreviousCell.Position or Cell.Position
		CurrentPosition = UDim2.fromScale(OffsetToScale(CurrentPosition.X.Offset, CurrentPosition.Y.Offset, ScrollingFrame))

		local NewPosition = NewRow == Row and UDim2.new(CurrentPosition.X.Scale + HORIZONTAL_GAP, 0, CurrentPosition.Y.Scale, 0)
			or UDim2.new(0, 0, CurrentPosition.Y.Scale + VERTICAL_GAP, 0)
		NewPosition = UDim2.fromOffset(ScaleToOffset(NewPosition.X.Scale, NewPosition.Y.Scale, ScrollingFrame)) 

		if PreviousCell == nil then
			NewPosition = UDim2.new(0, 0, 0, 0)
		end

		Cell.Name = ""Cell""..Row..""-""..Column
		Cell.Position = NewPosition

		View:SetAttribute(""Row"", NewRow)
		View:SetAttribute(""Column"", NewColumn)
		PreviousCell = Cell
	end

	--ConvertCatalogueToOffset()
end

local function ValidateSearchResults()
	local Result = TextBox.Text
	Result = string.lower(Result)

	local OldView = ScrollingFrame:FindFirstChild(""Search"")
	if OldView then
		OldView:Destroy()
	end
	
	if Result == """" then
		EnableCorrectViewFrame(""All"")
		return
	end
	
	local NewView = ScrollingFrame.All:Clone()	 	
	NewView.Name = ""Search""
	NewView.Parent = ScrollingFrame
	NewView:SetAttribute(""Row"", 1)
	NewView:SetAttribute(""Column"", 1)

	RemoveCellsFromSearchResult(NewView, Result)	
	PositionBunchedCells(NewView)
	EnableCorrectViewFrame()

	for _,ViewFrame in ipairs(ScrollingFrame:GetChildren()) do
		if ViewFrame == NewView then
			continue
		end
		ViewFrame.Visible = false
	end
end

local function PlayRadioMusic(Radio)
	local Playlist = _G.GetSound(""Music"")
	local DistortionEffect = Instance.new(""DistortionSoundEffect"")
		DistortionEffect.Level = .4
		
	task.spawn(function()
		while true do task.wait()
			local SongValues = _G.ArrayFromDictionary(Playlist)
			
			for Name, Song in Playlist do
				local RandomIndex = math.random(1, #SongValues)
				local RandomSong = SongValues[RandomIndex]
				
				if Song ~= RandomSong then
					continue
				end
				
				table.remove(SongValues, RandomIndex)
				Song.PlayOnRemove = false
				Song.Volume = 1
				Song.Parent = Radio
				Song:Play()
				
				warn(`Now playing: {Name}`)
				Song.Ended:Wait()
				Song:Destroy()
			end
		end
	end)
end

local function IsMouseInScreenPortion()
	local MousePosition = InputService:GetMouseLocation()
	local ViewportSize = Camera.ViewportSize
	local ScreenWidth, ScreenHeight = ViewportSize.X, ViewportSize.Y

	local PortionWidth = ScreenWidth * MOUSE_PORTION_X_SIZE / 100
	local PortionHeight = ScreenHeight * MOUSE_PORTION_Y_SIZE / 100

	local PortionXStart = ScreenWidth - PortionWidth - (ScreenWidth * MOUSE_PORTION_X_OFFSET / 100)
	local PortionYStart = (ScreenHeight - PortionHeight) / 2
	local PortionYEnd = ScreenHeight - PortionYStart

	local PortionPosition = Vector2.new(PortionXStart, PortionYStart)
	return (
		MousePosition.X >= PortionXStart and MousePosition.X <= ScreenWidth and
			MousePosition.Y >= PortionYStart and MousePosition.Y <= PortionYEnd
	)
end


local function MouseEnteredScreenPortion()
	local IsMouseInScreenPortion = IsMouseInScreenPortion()
	local StateChanged = (IsMouseInScreenPortion and not MouseInScreenPortion)
		or (not IsMouseInScreenPortion and MouseInScreenPortion)	
	if not StateChanged then
		return
	end	

	MouseInScreenPortion = IsMouseInScreenPortion
	if not MouseInScreenPortion then
		MouseHoldingScreenPortion = false
	end
end

local function RotateAvatar()
	local MousePosition = InputService:GetMouseLocation().X

	if InitialClick then
		InitialClick = false
		LastMousePosition = MousePosition
		return
	end
	
	local MouseDelta = MousePosition - (LastMousePosition or MousePosition)
	local RotationAngle = math.rad(MouseDelta * AVATAR_ROTATION_SPEED)

	Avatar:SetPrimaryPartCFrame(HumRP.CFrame * CFrame.Angles(0, RotationAngle, 0))
	LastMousePosition = MousePosition
end

local function OnMouseMove()
	MouseEnteredScreenPortion()
	
	if (MouseInScreenPortion and MouseHoldingScreenPortion) then
		RotateAvatar()
	end
end

local function EstablishMouseConnections()
	Mouse.Move:Connect(OnMouseMove)
	
	for _,InputState in ipairs({""InputBegan"", ""InputEnded""}) do
		InputService[InputState]:Connect(function(Input)
			local IsMouse1Input = Input.UserInputType == Enum.UserInputType.MouseButton1
			local MouseDown = InputState == ""InputBegan"" and true or false
			if not IsMouse1Input or (not MouseInScreenPortion) then
				return
			end
			
			MouseHoldingScreenPortion = MouseDown
			if not MouseDown then
				InitialClick = true
			end
		end)
	end
end

local function InitCatalogue()
	local Scene = workspace:WaitForChild(""Designer"")
	local CameraPart = Scene:WaitForChild(""Camera"")
	local RadioPart = Scene:WaitForChild(""Radio"")

	Camera.CFrame = CameraPart.CFrame
	EstablishMouseConnections()
	PlayRadioMusic(RadioPart)

	LoadCatalogueData()	
	for _,Tab in ipairs(TabsRibbon:GetChildren()) do
		if not Tab:IsA(""GuiButton"") then
			continue
		end	
		CreateCatalogueView(Tab)
		EstablishTabConnections(Tab)
	end
	EnableCorrectViewFrame(TabsRibbon.All)
	
	CatalogueGui.Enabled = true
end

function CatalogueManager.Initialize()
	TextBox:GetPropertyChangedSignal(""Text""):Connect(ValidateSearchResults)
	InitCatalogue()
end

return CatalogueManager

"
2HHrDFWx,Untitled,Josif_tepe,C++,Monday 4th of March 2024 08:28:48 AM CDT,"#include <iostream>
using namespace std;


int main() {
    char c1, c2, c3, c4;
    cin >> c1 >> c2 >> c3 >> c4;
    int najmala_suma = 0, najgolema_suma = 0;
    if(isdigit(c1)) {
        int broj = c1 - '0';
        najmala_suma += broj;
        najgolema_suma += broj;
    }
    else if(c1 == 'P') {
        najmala_suma += 1;
        najgolema_suma += 1;
    }
    else {
        najmala_suma += 2;
        najgolema_suma += 5;
    }
    
    if(isdigit(c2)) {
        int broj = c2 - '0';
        najmala_suma += broj;
        najgolema_suma += broj;
    }
    else if(c2 == 'P') {
        najmala_suma += 1;
        najgolema_suma += 1;
    }
    else {
        najmala_suma += 2;
        najgolema_suma += 5;
    }
    if(isdigit(c3)) {
        int broj = c3 - '0';
        najmala_suma += broj;
        najgolema_suma += broj;
    }
    else if(c3 == 'P') {
        najmala_suma += 1;
        najgolema_suma += 1;
    }
    else {
        najmala_suma += 2;
        najgolema_suma += 5;
    }
    if(isdigit(c4)) {
        int broj = c4 - '0';
        najmala_suma += broj;
        najgolema_suma += broj;
    }
    else if(c4 == 'P') {
        najmala_suma += 1;
        najgolema_suma += 1;
    }
    else {
        najmala_suma += 2;
        najgolema_suma += 5;
    }
    cout << najmala_suma << endl;
    cout << najgolema_suma << endl;
    
    return 0;
}
"
6S3ij5ij,Untitled,Sreekar_0125,C++,Monday 4th of March 2024 08:27:11 AM CDT,"#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <bits/stdc++.h>
using namespace std;
const int N = 1e5 + 5;
vector<int> graph[N];
int n;

vector<bool> vis(N, 0);

vector<int> bfs(int start, int dir)
{
    vector<int> dist(n + 1, 0);
    queue<int> q;
    q.push(start);
    vis[start] = 1;
    while(!q.empty())
    {
        int node = q.front();
        q.pop();
        for(auto i : graph[node])
        {
            if(dir==1 && i <node)continue;
            if(dir==-1 && i>node)continue;
            if(!vis[i])
            {
                dist[i] = 1 + dist[node];
                vis[i] = 1;
                q.push(i);
            }
            
        }
    }
    return dist;
}

void dbg(vector<int> &v)
{
    for(auto i : v)
    {
        cerr << i << ' ';
    }
    cerr << endl;
}

int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
    int x, y;
    cin >> n >> x >> y;
    
    for(int i = 1; i <= n - 1; i++)
    {
        graph[i].push_back(i + 1);
        graph[i + 1].push_back(i);
    }
    
    graph[x].push_back(y);
    graph[y].push_back(x);
    
    vector<int> distx = bfs(x, 1);
    for(int i = 1; i <= n; i++) vis[i] = false;
    
    vector<int> disty = bfs(y, -1);
    
    vector<int>frex(n+1, 0), frey(n+1, 0);
    
    dbg(distx);
    dbg(disty);
    
    for(int i = 1; i<=n; i++){
        
        frex[distx[i]]++;
        frey[disty[i]]++;
        
    }
    
    dbg(frex);
    dbg(frey);
    
    vector<int> ans(n+1,0);
    
    for(int i = 1; i<=n; i++){
        
           ans[i] += (max(0,(x-i)) + max(0,(n-y-i+1)) + max(0, (y-x+1-i)))*2;
        
    }
    dbg(ans);
    
    frex[1]--; frey[1]--;
    
    ans[1] += (frex[1] + frey[1]);
    
    cout<<ans[1]<<"" "";
    
    for(int i = 2; i<=n; i++){
        
        ans[i] += (frex[i-1]*(max(0,x-1)) + frey[i-1]*(max(0,n-y)));
        cout<<ans[i]<<"" "";
    }
    
    
    
    cout<<'\n';
    // for(int i = 1; i <= n; i++)
    // {
    //     cerr << dist[i] << "" \n""[i == n];
    // }
    return 0;
}
"
sxSj2anJ,Untitled,Josif_tepe,C++,Monday 4th of March 2024 08:15:56 AM CDT,"#include <iostream>


using namespace std;


int main()
{
   int a,b;
   cin>>a>>b;
   int suma=0;
   for(int i=1;i<=a;i++){
    suma+=b*i;


  }
   cout<<suma<<endl;
    return 0;
}"
d0T5PAbb,sysop_zad1,pan7nikt,Bash,Monday 4th of March 2024 08:06:03 AM CDT,"#!/bin/bash -l
#echo ""${PS1@P} amogus""; i moze byc jescze -v
#also change TTY id as prompt shows that
#run the command that do not require root as a regular user
clear
echo ""${PS1@P} /home/nazwauzytkownika/./sysop_vm_check-2024 indeks"";
sudo /home/nazwauzytkownika/./sysop_vm_check-2024 indeks;
 
sleep 5;
 
echo ""${PS1@P} cat /root/anaconda-ks.cfg"";
sudo cat /root/anaconda-ks.cfg;
 
echo ""${PS1@P} lscpu"";
lscpu;
 
sleep 5;
 
echo ""${PS1@P} lsmem"";
lsmem;
 
sleep 5;
 
echo ""${PS1@P} lsblk"";
lsblk;
 
sleep 5;
 
echo ""${PS1@P} parted -l"";
sudo parted -l;
 
sleep 5;
 
echo ""${PS1@P} vgdisplay fedora"";
sudo vgdisplay fedora;
 
sleep 5;
 
echo ""${PS1@P} df -hT"";
df -hT;
 
#Tutaj trzeba bedzie jeszcze wykonac:
#stat -f /<mountpoint>
 
#echo ""${PS2@P}"";
"
MwsS3cC3,equalPairsForLoopMoreExersicesSoftUni,zarkoto223,JavaScript,Monday 4th of March 2024 07:23:36 AM CDT,"function equalPairs(input) {
    let num = Number(input[0]);
    let maxDifference = 0;

    for (let i = 1; i <= num * 2; i += 2) {
        let first = Number(input[i]);
        let second = Number(input[i + 1]);
        let coupleValue = first + second;
        
        if (i > 1) {
            let coupleDifference = Math.abs(coupleValue - coupleOld);
            if (coupleDifference > maxDifference) {
                maxDifference = coupleDifference;
            }
        }
        
        coupleOld = coupleValue;
    }
    
    if (maxDifference === 0) {
        console.log(`Yes, value=${coupleOld}`);
    } else {
        console.log(`No, maxdiff=${maxDifference}`);
    }
}"
zB6Jq0pG,style.css,bluebyt,INI file,Monday 4th of March 2024 07:15:52 AM CDT,"@define-color color_bg #2e3440;
@define-color color_bg_dark #292e39;
@define-color color_border #424242;
@define-color color_border_active #b48ead;
@define-color color_text #aec0d5;
@define-color color_urgent #8f0a0a;

.container {
  font-family: Roboto Mono SemiBold;
  font-weight: bold;
  font-size: 20px;
}

#cava {
  font-family: renogare;
}

.clock {
  font-size: 10px;
  font-weight: normal;
  padding: 0px 10px 0px 10px;
  background: linear-gradient(45deg, rgb(235,203,139) 0%, rgb(208,135,112) 50%, rgb(180, 142, 173) 100%);
  background-size: 300% 300%;
  animation: gradient 2s ease infinite;
  text-shadow: 0px 0px 5px rgba(0, 0, 0, 0.377);
  box-shadow: rgba(0, 0, 0, 0.288) 2px 2px 5px 2px;
  border-radius: 16px;
  margin: 10px 10px 10px 10px;
  font-family: Roboto Mono SemiBold;
}

.clock_date {
  font-family: Roboto Mono SemiBold;
  font-weight: normal;
  font-size: 18px;
  color: rgb(94,129,172);
}


.background {
  background-color: rgba(0, 0, 0, 0)
}

/* base */
.sysinfo .item,
.script,
.tray {
  padding: 0px 10px;
  margin-top: 10px;
  margin-bottom: 10px;
  margin-right: 10px;
  border-radius: 15px;
  background: #88c0d0;
  color: #516079;
  box-shadow: rgba(0, 0, 0, 0.116) 2px 2px 5px 2px;
}

.pacman,
.wlogout {
  padding: 0px 10px;
  margin-top: 10px;
  margin-bottom: 10px;
  margin-right: 10px;
  border-radius: 15px;
  background: #a3be8c;
  color: #516079;
  font-size: 24px;
  box-shadow: rgba(0, 0, 0, 0.116) 2px 2px 5px 2px;
}

.scale,
.internet,
.script {
  transition: all 0.5s cubic-bezier(0.5, 1, 0.89, 1);
  margin-top: 10px;
  margin-bottom: 10px;
  margin-right: 10px;
  padding-right: 20px;
  padding-left: 20px;
  padding-bottom: 3px;
  box-shadow: rgba(0, 0, 0, 0.288) 2px 2px 5px 2px;
  text-shadow: 0px 0px 5px rgba(0, 0, 0, 0.377);
  border-radius: 15px;
  background: rgb(202, 158, 230);
  background: linear-gradient(45deg, rgba(202, 158, 230, 1) 0%, rgba(245, 194, 231, 1) 43%, rgba(180, 190, 254, 1) 80%, rgba(137, 180, 250, 1) 100%);
  background-size: 300% 300%;
  animation: gradient 5s ease infinite;
  color: #fff;
}


scale trough {
  border-radius: 16px;
  background-color: #E7D4CB;
  box-shadow: 0 2px 3px 2px rgba(00, 00, 00, 0.4);
  min-height: 10px;
  min-width: 70px;
  margin: 0px 5px 10px 10px;
}

scale value {
  color: #77a5bf;
  font-size: 0px;
}

scale trough highlight {
  background-image: linear-gradient(to right, #afcee0 30%, #92B6F4 50%, #77a5bf 100%);
  border-radius: 10px;
  background-color: #afcee0;
}

.focused {
  color: rgb(84, 111, 175);
  font-size: 20px;
  padding: 0px 10px 0px 10px;
  margin: 10px 10px 10px 0px;
  background: rgb(238, 190, 190);
  background: linear-gradient(45deg, rgb(244, 219, 214) 0%, rgb(223, 221, 238) 43%, rgb(245, 208, 225) 100%);
  background-size: 300% 300%;
  animation: gradient 2s ease infinite;
  border-radius: 16px;
}


/* cpu */
.sysinfo .item:nth-child(1) {
  background: rgb(180, 190, 254);
  background: linear-gradient(52deg, rgba(180, 190, 254, 1) 0%, rgba(137, 220, 235, 1) 32%, rgba(137, 180, 250, 1) 72%, rgba(166, 227, 161, 1) 100%);
  background-size: 300% 300%;
  animation: gradient 20s ease infinite;
  text-shadow: 0px 0px 5px rgba(0, 0, 0, 0.377);
  /* background-color: #b4befe; */
  color: #fff;
}

.music,
.clock {
  margin-top: 10px;
  margin-bottom: 10px;
  margin-right: 10px;
  padding-right: 20px;
  padding-left: 20px;
  padding-bottom: 3px;
  box-shadow: rgba(0, 0, 0, 0.288) 2px 2px 5px 2px;
  text-shadow: 0px 0px 5px rgba(0, 0, 0, 0.377);
  border: none;
  border-radius: 15px;
  font-size: 24px;
  background: rgb(202, 158, 230);
  background: linear-gradient(45deg, rgba(202, 158, 230, 1) 0%, rgba(245, 194, 231, 1) 43%, rgba(180, 190, 254, 1) 80%, rgba(137, 180, 250, 1) 100%);
  background-size: 300% 300%;
  animation: gradient 10s ease infinite;
  color: #fff;
}

/* -- music -- */

.music .contents


.popup-music

.tray {
  color: rgb(84, 111, 175);
  font-size: 15px;
  padding: 0px 10px 0px 10px;
  margin: 10px 10px 10px 0px;
  background: rgb(238, 190, 190);
  background: linear-gradient(45deg, rgb(244, 219, 214) 0%, rgb(223, 221, 238) 43%, rgb(245, 208, 225) 100%);
  background-size: 300% 300%;
  animation: gradient 5s ease infinite;
  border-radius: 16px;
}

.tray>.passive {
  -gtk-icon-effect: dim;
}

.tray>.needs-attention {
  -gtk-icon-effect: highlight;
  background-color: #eb4d4b;
}

.workspaces {
  font-family: Renogare;
  font-weight: normal;
  font-size: 25px;
  font-weight: normal;
  margin: 10px 0px 0px 20px;
  border-radius: 16px;
}

.workspaces .item {
  box-shadow: rgba(0, 0, 0, 0.116) 2px 2px 5px 2px;
  border: unset;
  background: #fff;
  border-radius: 15px;
  margin: 10px 10px 15px 0px;
  padding: 5px 20px 5px 20px;
  color: #cba6f7;
}

.workspaces .item.focused {
  border: unset;
  font-size: 25px;
  transition: all 0.5s cubic-bezier(0.5, 1, 0.89, 1);
  box-shadow: rgba(0, 0, 0, 0.288) 2px 2px 5px 2px;
  text-shadow: 0 0 5px rgba(0, 0, 0, 0.377);
  padding: 5px 10px 5px 10px;
  border-radius: 16px;
  margin: 10px 10px 15px 0px;
  background: rgb(202, 158, 230);
  background: linear-gradient(45deg, rgba(202, 158, 230, 1) 0%, rgba(245, 194, 231, 1) 43%, rgba(180, 190, 254, 1) 80%, rgba(137, 180, 250, 1) 100%);
  background-size: 300% 300%;
  animation: gradient 10s ease infinite;
  color: #fff;
}


@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }

  50% {
    background-position: 100% 50%;
  }

  100% {
    background-position: 0% 50%;
  }
}


tooltip.background {
  background-color: rgba(00, 00, 00, 0.5);
  font-size: 18px;
  border-radius: 10px;
  color: #FDFDFD;
}

tooltip * {
  padding: 4px;
  background-color: transparent;
  color: white;
}

.host tooltip {
  background-color: rgba(255, 00, 00, 0.5);
}

.popup-clock {
  font-weight: bolder;
  background: rgb(36, 39, 58);
  border-radius: 10px;
}

.popup-clock .calendar-clock {
    color: #d8dee9;
    font-size: 2.5em;
    padding-bottom: 0.1em;
}

.popup-clock .calendar {
    background-color: #2e3440;
    color: @color_text;
    border-radius: 10px;
}

.popup-clock .calendar .header {
    padding-top: 1em;
    border-top: 1px solid @color_border;
    font-size: 1.5em;
}"
RsMpq5h3,config.corn,bluebyt,INI file,Monday 4th of March 2024 07:12:58 AM CDT,"let {
    $tray = { type = ""tray"" }
  $clock = {
    type = ""clock""
    format = ""%a, %H:%M:%S""
   // format = ""%d/%m/%Y %H:%M""
  }
   
    $window = {
      type = ""focused""
      show_icon = false
      show_title = true
      icon_size = 24
      icon_theme = """"
      truncate.mode = ""end""
      truncate.max_length = 25
    }

    
    $SysInfo = { 
    type = ""sys_info""
    interval.memory = 30
    interval.cpu = 1
    interval.temps = 3
    interval.disks = 300
    interval.networks = 3
      
     format = [
      "" {temp_c:coretemp-Package-id-0}°C ""
      "" {disk_free:/}GB ""
      "" {memory_percent}% ""
      "" {cpu_percent}% ""
    ]
    
    }

    $cava = {
        transition_type = ""slide_end""
        transition_duration = 750
        name = ""cava""
        type = ""script""
        mode = ""watch""
        cmd = ""/home/bluebyt/.config/ironbar/scripts/cava""
   }
  

   $mpris = {
        type = ""music""
        player_type = ""mpris""

        on_click_middle = ""playerctl play-pause""
        on_scroll_up = ""playerctl volume +5""
        on_scroll_down = ""playerctl volume -5""

    }

    $mpd_local = { type = ""music"" player_type = ""mpd"" music_dir = ""/home/bluebyt/Music"" truncate.mode = ""end"" truncate.max_length = 100 }
    $mpd_server = { type = ""music"" player_type = ""mpd"" host = ""127.0.0.1:6600"" truncate = ""end"" }

    $volume = {
        transition_type = ""slide_end""
        transition_duration = 350
        type = ""custom""
        bar = [ 
            {
                type = ""slider""
                class = ""scale""
                length = 100
                max = 100
                on_change = ""!wpctl set-volume @DEFAULT_SINK@ $0%""
                on_scroll_down = ""wpctl set-volume @DEFAULT_SINK@ 2%-""
                on_scroll_up = ""wpctl set-volume @DEFAULT_SINK@ 2%+""
                on_click_right = ""pavucontrol""
                value = ""100:/home/bluebyt/.config/ironbar/scripts/volume""
                tooltip = ""{{/home/bluebyt/.config/ironbar/scripts/volume}}%""
            }
        ]
    }

    $workspace = {
        type = ""workspaces""
        sort = ""alphanumeric""
        on_scroll_up = ""hyprctl dispatch workspace -1""
        on_scroll_down = ""hyprctl dispatch workspace +1""
    }
    $wlogout = {
        type = ""custom""
        bar = [ 
            {
                type = ""button""
                name = ""wlogout""
                class = ""wlogout""
                label = """"
                on_click = ""!~/.config/ironbar/scripts/wlogout""
            }
        ]
    }
    
    $pacman = {
        type = ""custom""
        bar = [ 
            {
                type = ""label""
                name = ""pacman""
                class = ""pacman""
                label = "" {{90000:checkupdates | wc -l}} packages""
                
            }
        ]
    }
    
    
    
    $start = [ $mpd_local]
    $center = [ $window ]
    $end = [ $volume $pacman $SysInfo $clock $wlogout]
}
in {
        position = ""top""
        start = $start
        center = $center
        end = $end
}"
NT60V82J,Classement [Premier League] (Soccer Point),AhmadXploit,Dart,Monday 4th of March 2024 07:10:52 AM CDT,"[
	{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""club"": ""Liverpool"",
      ""win"": ""19"",
      ""draw"": ""6"",
      ""lose"": ""2"",
      ""points"": ""63""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""club"": ""Man City"",
      ""win"": ""19"",
      ""draw"": ""5"",
      ""lose"": ""3"",
      ""points"": ""62""
    }
]"
zumFphwu,Untitled,h1n0t0r1,Python,Monday 4th of March 2024 07:05:31 AM CDT,"# Read Input
club_profit = float(input())
total = 0
# Logic
for i in range(1000000):
    cocktail = input()
    if cocktail == 'Party!':
        print(f'We need {club_profit - total:.2f} leva more.')
        break  # Exit the loop
    qty = int(input())
    price = len(cocktail) * qty
    if price % 2 != 0:  # check for discount
        price *= 0.75
    total += price
    if total >= club_profit:
        print('Target acquired.')
        break

# Print Output

print(f'Club income - {total:.2f} leva.')
"
33SCkHyy,Top Score [Premier League] (Soccer Point),AhmadXploit,Dart,Monday 4th of March 2024 07:05:29 AM CDT,"[
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234285/Soccer%20Point/Premier%20League/mu_mb8kn8.png"",
      ""player"": ""Jude Bellingham"",
      ""goal"": ""16""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234285/Soccer%20Point/Premier%20League/mu_mb8kn8.png"",
      ""player"": ""Borja Mayoral"",
      ""goal"": ""16""
    }
]"
BLy2Htxq,Untitled,h1n0t0r1,Python,Monday 4th of March 2024 07:02:47 AM CDT,"# Read Input
club_profit = float(input())
total = 0
# Logic
while total < club_profit:
    cocktail = input()
    if cocktail == 'Party!':
        break  # Exit the loop
    qty = int(input())
    price = len(cocktail) * qty
    if price % 2 != 0:  # check for discount
        price *= 0.75
    total += price

# Print Output
if total < club_profit:
    print(f'We need {club_profit - total:.2f} leva more.')
else:
    print('Target acquired.')

print(f'Club income - {total:.2f} leva.')
"
6GSXhafU,Untitled,folliejester,HTML 5,Monday 4th of March 2024 06:46:50 AM CDT,"<!DOCTYPE html>
<html>
<head>
  <title>Proj2</title>
</head>
<body>
  <script src=""https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.8.3/angular.min.js""></script>
  <center>
  <div ng-app=""Calculator"" ng-controller=""Controller as viewmodel"">
    <h1>Calculator</h1>
    <button ng-click=""viewmodel.calculate()"">Calculate</button>
    <p>1) Addition: <b>{{ viewmodel.addition }}</b></p>
    <p>2) Subtraction: <b>{{ viewmodel.substraction }}</b></p>
    <p>3) Multiplication: <b>{{ viewmodel.multiplication }}</b></p>
    <p>4) Division: <b>{{ viewmodel.division }}</b></p>
    <p>5) Modular Division: <b>{{ viewmodel.modulardivision }}</b></p>
  </div>
</center>
  <script>
    angular.module('Calculator', []);
    angular.module('Calculator').controller('Controller', function() 
    {
      var viewmodel = this;
      viewmodel.values = [2.1, 1.5, 3.7, 1.1, 1.6];
      viewmodel.calculate = function() 
      {
        viewmodel.addition = viewmodel.values.reduce(function(sum, n)
        { 
            return sum + n;
        }, 0).toFixed(2);
        viewmodel.substraction = viewmodel.values.reduce(function(sub, n) 
        {
            return sub - n; 
        }).toFixed(2);
        viewmodel.multiplication = viewmodel.values.reduce(function(mul, n) 
        { 
            return mul * n; 
        }, 1).toFixed(2);
        viewmodel.division = viewmodel.values.reduce(function(div, n) 
        { 
            return div / n; 
        }).toFixed(2);
        viewmodel.modulardivision = viewmodel.values.reduce(function(mod, n) 
        { 
            return mod % n; 
        }).toFixed(2);
      };
    });
  </script>
</body>
</html>
"
