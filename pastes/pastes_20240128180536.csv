id,title,username,language,date,content
ax2H95hb,Nigerian scammers [28-1-2/2024],bombaires,AIMMS,Sunday 28th of January 2024 11:56:31 AM CDT,"<a href=""mailto:justicechambers@mail.ee"">justicechambers@mail.ee</a>
<a href=""mailto:logisticshumanitarian@diplomats.com"">logisticshumanitarian@diplomats.com</a>
<a href=""mailto:kachikwudremmanuel@gmail.com"">kachikwudremmanuel@gmail.com</a>
<a href=""mailto:ka.ch.i.k.wu.dre.m.manue.l@gmail.com"">ka.ch.i.k.wu.dre.m.manue.l@gmail.com</a>
<a href=""mailto:kach.ik.w.u.dr.emman.uel@gmail.com"">kach.ik.w.u.dr.emman.uel@gmail.com</a>
<a href=""mailto:k.ac.h.ik.wudremm.anuel@gmail.com"">k.ac.h.ik.wudremm.anuel@gmail.com</a>
<a href=""mailto:kach.ik.wud.r.emm.anu.e.l@gmail.com"">kach.ik.wud.r.emm.anu.e.l@gmail.com</a>
<a href=""mailto:k.achi.k.w.u.d.re.m.ma.n.u.el@gmail.com"">k.achi.k.w.u.d.re.m.ma.n.u.el@gmail.com</a>
<a href=""mailto:k.a.c.hi.kw.u.dr.em.manu.e.l@gmail.com"">k.a.c.hi.kw.u.dr.em.manu.e.l@gmail.com</a>
<a href=""mailto:k.a.c.hi.k.w.u.dre.mm.a.nu.el@gmail.com"">k.a.c.hi.k.w.u.dre.mm.a.nu.el@gmail.com</a>
<a href=""mailto:k.ach.ikwu.d.r.e.m.manu.e.l@gmail.com"">k.ach.ikwu.d.r.e.m.manu.e.l@gmail.com</a>
<a href=""mailto:ka.c.h.ik.w.udr.emm.an.u.el@gmail.com"">ka.c.h.ik.w.udr.emm.an.u.el@gmail.com</a>
<a href=""mailto:k.a.c.hi.k.wudr.e.mma.nu.e.l@gmail.com"">k.a.c.hi.k.wudr.e.mma.nu.e.l@gmail.com</a>
<a href=""mailto:k.ac.hi.k.wu.d.rem.ma.n.u.el@gmail.com"">k.ac.hi.k.wu.d.rem.ma.n.u.el@gmail.com</a>
<a href=""mailto:k.a.c.hikw.udr.emma.n.u.el@gmail.com"">k.a.c.hikw.udr.emma.n.u.el@gmail.com</a>
<a href=""mailto:k.a.c.h.ikw.ud.rem.m.anu.e.l@gmail.com"">k.a.c.h.ikw.ud.rem.m.anu.e.l@gmail.com</a>
<a href=""mailto:k.a.c.hi.kw.u.d.r.em.ma.nu.el@gmail.com"">k.a.c.hi.kw.u.d.r.em.ma.nu.el@gmail.com</a>
<a href=""mailto:k.a.c.h.i.kwu.d.r.e.mman.uel@gmail.com"">k.a.c.h.i.kwu.d.r.e.mman.uel@gmail.com</a>
<a href=""mailto:kac.h.i.kwudre.mm.a.n.u.el@gmail.com"">kac.h.i.kwudre.mm.a.n.u.el@gmail.com</a>
<a href=""mailto:ka.c.h.ikwu.d.r.e.mma.nuel@gmail.com"">ka.c.h.ikwu.d.r.e.mma.nuel@gmail.com</a>
<a href=""mailto:kachik.w.ud.remm.an.uel@gmail.com"">kachik.w.ud.remm.an.uel@gmail.com</a>
<a href=""mailto:ka.c.h.i.k.wud.r.emm.anu.el@gmail.com"">ka.c.h.i.k.wud.r.emm.anu.el@gmail.com</a>
<a href=""mailto:k.a.c.hik.w.udr.e.mm.a.nue.l@gmail.com"">k.a.c.hik.w.udr.e.mm.a.nue.l@gmail.com</a>
<a href=""mailto:k.a.c.hi.kw.u.d.rem.m.a.n.uel@gmail.com"">k.a.c.hi.kw.u.d.rem.m.a.n.uel@gmail.com</a>
<a href=""mailto:k.achik.wudre.m.m.an.u.e.l@gmail.com"">k.achik.wudre.m.m.an.u.e.l@gmail.com</a>
<a href=""mailto:kach.ikw.ud.r.emm.a.n.ue.l@gmail.com"">kach.ikw.ud.r.emm.a.n.ue.l@gmail.com</a>
<a href=""mailto:kac.hi.kw.udr.e.mmanuel@gmail.com"">kac.hi.kw.udr.e.mmanuel@gmail.com</a>
<a href=""mailto:k.a.c.hik.w.u.dr.e.m.m.a.nuel@gmail.com"">k.a.c.hik.w.u.dr.e.m.m.a.nuel@gmail.com</a>
<a href=""mailto:k.ac.h.ikw.ud.r.em.ma.n.u.el@gmail.com"">k.ac.h.ikw.ud.r.em.ma.n.u.el@gmail.com</a>
<a href=""mailto:k.achik.w.u.drem.m.a.n.u.el@gmail.com"">k.achik.w.u.drem.m.a.n.u.el@gmail.com</a>
<a href=""mailto:kach.i.k.w.ud.r.e.mmanu.e.l@gmail.com"">kach.i.k.w.ud.r.e.mmanu.e.l@gmail.com</a>
<a href=""mailto:kac.h.ik.w.u.d.re.mm.anuel@gmail.com"">kac.h.ik.w.u.d.re.mm.anuel@gmail.com</a>
<a href=""mailto:k.a.c.h.ikw.u.dremm.a.n.u.e.l@gmail.com"">k.a.c.h.ikw.u.dremm.a.n.u.e.l@gmail.com</a>
<a href=""mailto:k.ac.hikw.u.dr.emman.u.el@gmail.com"">k.ac.hikw.u.dr.emman.u.el@gmail.com</a>
<a href=""mailto:kac.hi.kw.ud.re.mm.anuel@gmail.com"">kac.hi.kw.ud.re.mm.anuel@gmail.com</a>
<a href=""mailto:kac.hi.kw.u.drem.man.u.el@gmail.com"">kac.hi.kw.u.drem.man.u.el@gmail.com</a>
<a href=""mailto:k.ac.hikw.u.d.re.mma.nu.el@gmail.com"">k.ac.hikw.u.d.re.mma.nu.el@gmail.com</a>
<a href=""mailto:kach.i.k.w.udr.em.m.an.uel@gmail.com"">kach.i.k.w.udr.em.m.an.uel@gmail.com</a>
<a href=""mailto:ka.c.h.ik.wu.dr.e.m.ma.nue.l@gmail.com"">ka.c.h.ik.wu.dr.e.m.ma.nue.l@gmail.com</a>
<a href=""mailto:k.a.c.hik.wud.rem.ma.n.uel@gmail.com"">k.a.c.hik.wud.rem.ma.n.uel@gmail.com</a>
<a href=""mailto:k.a.c.h.ikwu.dremman.ue.l@gmail.com"">k.a.c.h.ikwu.dremman.ue.l@gmail.com</a>
<a href=""mailto:kac.hik.w.ud.rem.ma.nue.l@gmail.com"">kac.hik.w.ud.rem.ma.nue.l@gmail.com</a>
<a href=""mailto:kac.h.i.k.wudre.m.manu.e.l@gmail.com"">kac.h.i.k.wudre.m.manu.e.l@gmail.com</a>
<a href=""mailto:ka.ch.ikwud.r.e.mm.an.ue.l@gmail.com"">ka.ch.ikwud.r.e.mm.an.ue.l@gmail.com</a>
<a href=""mailto:k.a.c.hi.kw.ud.r.emm.an.ue.l@gmail.com"">k.a.c.hi.kw.ud.r.emm.an.ue.l@gmail.com</a>
<a href=""mailto:kach.ik.wu.d.r.em.m.anue.l@gmail.com"">kach.ik.wu.d.r.em.m.anue.l@gmail.com</a>
<a href=""mailto:kac.hikw.ud.re.m.m.anuel@gmail.com"">kac.hikw.ud.re.m.m.anuel@gmail.com</a>
<a href=""mailto:k.ach.i.kw.u.drem.m.a.n.u.el@gmail.com"">k.ach.i.kw.u.drem.m.a.n.u.el@gmail.com</a>
<a href=""mailto:kac.h.i.k.wu.dr.emm.anu.el@gmail.com"">kac.h.i.k.wu.dr.emm.anu.el@gmail.com</a>
<a href=""mailto:ka.c.h.ik.w.udremman.u.el@gmail.com"">ka.c.h.ik.w.udremman.u.el@gmail.com</a>
<a href=""mailto:ka.ch.ik.wudremmanuel@gmail.com"">ka.ch.ik.wudremmanuel@gmail.com</a>
<a href=""mailto:kac.hik.wu.d.re.mma.nu.e.l@gmail.com"">kac.hik.wu.d.re.mma.nu.e.l@gmail.com</a>
<a href=""mailto:k.a.chi.k.w.u.d.r.emm.a.n.uel@gmail.com"">k.a.chi.k.w.u.d.r.emm.a.n.uel@gmail.com</a>
<a href=""mailto:ka.ch.ikw.ud.r.emma.nu.el@gmail.com"">ka.ch.ikw.ud.r.emma.nu.el@gmail.com</a>
<a href=""mailto:kachik.wu.dr.e.m.m.an.uel@gmail.com"">kachik.wu.dr.e.m.m.an.uel@gmail.com</a>
<a href=""mailto:k.ac.hik.wud.rem.man.u.e.l@gmail.com"">k.ac.hik.wud.rem.man.u.e.l@gmail.com</a>
<a href=""mailto:k.a.chi.k.wu.dre.m.ma.nu.el@gmail.com"">k.a.chi.k.wu.dre.m.ma.nu.el@gmail.com</a>
<a href=""mailto:k.ac.hikw.u.dr.e.m.m.anue.l@gmail.com"">k.ac.hikw.u.dr.e.m.m.anue.l@gmail.com</a>
<a href=""mailto:kachik.wudr.e.m.ma.n.ue.l@gmail.com"">kachik.wudr.e.m.ma.n.ue.l@gmail.com</a>
<a href=""mailto:k.a.chik.w.ud.rem.man.uel@gmail.com"">k.a.chik.w.ud.rem.man.uel@gmail.com</a>
<a href=""mailto:k.a.chik.w.udremmanu.e.l@gmail.com"">k.a.chik.w.udremmanu.e.l@gmail.com</a>
<a href=""mailto:k.a.c.hi.k.wu.d.r.em.manu.el@gmail.com"">k.a.c.hi.k.wu.d.r.em.manu.el@gmail.com</a>
<a href=""mailto:kac.h.ikw.ud.r.emman.u.e.l@gmail.com"">kac.h.ikw.ud.r.emman.u.e.l@gmail.com</a>
<a href=""mailto:k.ac.h.ikw.u.d.r.emm.anu.el@gmail.com"">k.ac.h.ikw.u.d.r.emm.anu.el@gmail.com</a>
<a href=""mailto:k.ac.hi.k.wu.d.rem.m.a.nue.l@gmail.com"">k.ac.hi.k.wu.d.rem.m.a.nue.l@gmail.com</a>
<a href=""mailto:ka.c.h.ik.wud.r.emm.a.nu.el@gmail.com"">ka.c.h.ik.wud.r.emm.a.nu.el@gmail.com</a>
<a href=""mailto:k.a.chik.w.udr.emmanuel@gmail.com"">k.a.chik.w.udr.emmanuel@gmail.com</a>
<a href=""mailto:kac.hi.k.wud.re.mma.n.u.e.l@gmail.com"">kac.hi.k.wud.re.mma.n.u.e.l@gmail.com</a>
<a href=""mailto:ka.ch.i.kw.u.d.r.emmanue.l@gmail.com"">ka.ch.i.kw.u.d.r.emmanue.l@gmail.com</a>
<a href=""mailto:ka.ch.i.kwudre.mma.nu.e.l@gmail.com"">ka.ch.i.kwudre.mma.nu.e.l@gmail.com</a>
<a href=""mailto:k.ac.hi.k.wud.r.e.m.ma.n.u.el@gmail.com"">k.ac.hi.k.wud.r.e.m.ma.n.u.el@gmail.com</a>
<a href=""mailto:kac.h.i.k.wu.d.rem.ma.nu.el@gmail.com"">kac.h.i.k.wu.d.rem.ma.nu.el@gmail.com</a>
<a href=""mailto:k.a.ch.i.kwu.drem.m.a.n.uel@gmail.com"">k.a.ch.i.kwu.drem.m.a.n.uel@gmail.com</a>
<a href=""mailto:kachik.wu.dr.e.mmanu.e.l@gmail.com"">kachik.wu.dr.e.mmanu.e.l@gmail.com</a>
<a href=""mailto:k.a.ch.ik.wu.d.rem.ma.nuel@gmail.com"">k.a.ch.ik.wu.d.rem.ma.nuel@gmail.com</a>
<a href=""mailto:k.a.c.hi.k.wu.d.remman.ue.l@gmail.com"">k.a.c.hi.k.wu.d.remman.ue.l@gmail.com</a>
<a href=""mailto:ka.chikwudr.em.ma.nue.l@gmail.com"">ka.chikwudr.em.ma.nue.l@gmail.com</a>
<a href=""mailto:ka.ch.i.k.wu.d.r.e.mmanu.el@gmail.com"">ka.ch.i.k.wu.d.r.e.mmanu.el@gmail.com</a>
<a href=""mailto:ka.c.hi.k.w.u.dr.em.m.a.n.ue.l@gmail.com"">ka.c.hi.k.w.u.dr.em.m.a.n.ue.l@gmail.com</a>
<a href=""mailto:kac.hi.kwu.d.remm.an.u.e.l@gmail.com"">kac.hi.kwu.d.remm.an.u.e.l@gmail.com</a>
<a href=""mailto:kach.ik.wud.rem.m.a.n.u.e.l@gmail.com"">kach.ik.wud.rem.m.a.n.u.e.l@gmail.com</a>
<a href=""mailto:kac.hik.wudr.emma.n.u.e.l@gmail.com"">kac.hik.wudr.emma.n.u.e.l@gmail.com</a>
<a href=""mailto:k.ac.hi.k.w.ud.rem.m.an.ue.l@gmail.com"">k.ac.hi.k.w.ud.rem.m.an.ue.l@gmail.com</a>
<a href=""mailto:kachi.kwud.rem.ma.n.ue.l@gmail.com"">kachi.kwud.rem.ma.n.ue.l@gmail.com</a>
<a href=""mailto:k.ac.h.i.kwu.d.remman.uel@gmail.com"">k.ac.h.i.kwu.d.remman.uel@gmail.com</a>
<a href=""mailto:k.ac.h.ik.wud.r.em.m.a.nue.l@gmail.com"">k.ac.h.ik.wud.r.em.m.a.nue.l@gmail.com</a>
<a href=""mailto:kach.ik.wu.d.re.m.m.a.nu.el@gmail.com"">kach.ik.wu.d.re.m.m.a.nu.el@gmail.com</a>
<a href=""mailto:k.a.chi.kw.udr.emm.an.uel@gmail.com"">k.a.chi.kw.udr.emm.an.uel@gmail.com</a>
<a href=""mailto:ka.c.h.i.k.w.ud.r.em.m.a.nu.el@gmail.com"">ka.c.h.i.k.w.ud.r.em.m.a.nu.el@gmail.com</a>
<a href=""mailto:kachi.k.wudr.e.m.m.a.nu.e.l@gmail.com"">kachi.k.wudr.e.m.m.a.nu.e.l@gmail.com</a>
<a href=""mailto:k.ac.hik.wu.dre.mman.uel@gmail.com"">k.ac.hik.wu.dre.mman.uel@gmail.com</a>
<a href=""mailto:k.a.ch.ik.wudrem.m.an.u.e.l@gmail.com"">k.a.ch.ik.wudrem.m.an.u.e.l@gmail.com</a>
<a href=""mailto:k.ach.ik.wu.d.r.e.mma.nue.l@gmail.com"">k.ach.ik.wu.d.r.e.mma.nue.l@gmail.com</a>
<a href=""mailto:k.a.chik.wu.drem.m.a.n.uel@gmail.com"">k.a.chik.wu.drem.m.a.n.uel@gmail.com</a>
<a href=""mailto:ka.c.hikw.u.d.re.m.man.u.el@gmail.com"">ka.c.hikw.u.d.re.m.man.u.el@gmail.com</a>
<a href=""mailto:kachikwu.dr.em.man.u.e.l@gmail.com"">kachikwu.dr.em.man.u.e.l@gmail.com</a>
<a href=""mailto:k.ac.hi.kwu.drem.ma.nue.l@gmail.com"">k.ac.hi.kwu.drem.ma.nue.l@gmail.com</a>
<a href=""mailto:k.a.c.hik.w.udr.em.m.a.n.ue.l@gmail.com"">k.a.c.hik.w.udr.em.m.a.n.ue.l@gmail.com</a>
<a href=""mailto:kac.h.i.k.w.u.dre.mma.n.u.el@gmail.com"">kac.h.i.k.w.u.dre.mma.n.u.el@gmail.com</a>
<a href=""mailto:k.a.chikwudrem.m.a.n.uel@gmail.com"">k.a.chikwudrem.m.a.n.uel@gmail.com</a>
<a href=""mailto:kachi.k.wu.d.rem.m.anue.l@gmail.com"">kachi.k.wu.d.rem.m.anue.l@gmail.com</a>
<a href=""mailto:k.a.ch.i.k.wudr.e.m.m.anu.el@gmail.com"">k.a.ch.i.k.wudr.e.m.m.anu.el@gmail.com</a>
<a href=""mailto:k.ach.ik.wu.dr.e.mma.n.u.e.l@gmail.com"">k.ach.ik.wu.dr.e.mma.n.u.e.l@gmail.com</a>
<a href=""mailto:ka.c.hi.k.wud.r.emmanu.el@gmail.com"">ka.c.hi.k.wud.r.emmanu.el@gmail.com</a>
<a href=""mailto:kac.h.ik.wud.r.e.m.man.uel@gmail.com"">kac.h.ik.wud.r.e.m.man.uel@gmail.com</a>
<a href=""mailto:k.ach.i.k.w.u.d.r.em.m.an.u.e.l@gmail.com"">k.ach.i.k.w.u.d.r.em.m.an.u.e.l@gmail.com</a>
<a href=""mailto:ka.c.h.ik.w.u.d.r.emm.a.n.u.el@gmail.com"">ka.c.h.ik.w.u.d.r.emm.a.n.u.el@gmail.com</a>
<a href=""mailto:k.ach.ik.w.u.d.r.emm.anuel@gmail.com"">k.ach.ik.w.u.d.r.emm.anuel@gmail.com</a>
<a href=""mailto:kac.h.i.kw.udre.m.ma.n.uel@gmail.com"">kac.h.i.kw.udre.m.ma.n.uel@gmail.com</a>
<a href=""mailto:k.a.c.h.ikwu.dr.em.m.anuel@gmail.com"">k.a.c.h.ikwu.dr.em.m.anuel@gmail.com</a>
<a href=""mailto:k.ac.h.i.kw.ud.rem.m.a.n.ue.l@gmail.com"">k.ac.h.i.kw.ud.rem.m.a.n.ue.l@gmail.com</a>
<a href=""mailto:ka.c.h.ikw.u.d.re.m.manu.e.l@gmail.com"">ka.c.h.ikw.u.d.re.m.manu.e.l@gmail.com</a>
<a href=""mailto:k.ac.h.ik.w.u.dre.mm.anue.l@gmail.com"">k.ac.h.ik.w.u.dre.mm.anue.l@gmail.com</a>
<a href=""mailto:ka.chik.wu.d.remm.a.n.u.e.l@gmail.com"">ka.chik.wu.d.remm.a.n.u.e.l@gmail.com</a>
<a href=""mailto:kach.ikwu.d.rem.ma.n.uel@gmail.com"">kach.ikwu.d.rem.ma.n.uel@gmail.com</a>
<a href=""mailto:k.a.chik.w.u.dr.em.manu.el@gmail.com"">k.a.chik.w.u.dr.em.manu.el@gmail.com</a>
<a href=""mailto:k.a.chi.k.w.udr.em.m.a.n.u.e.l@gmail.com"">k.a.chi.k.w.udr.em.m.a.n.u.e.l@gmail.com</a>
<a href=""mailto:k.ach.ikw.ud.remma.n.u.e.l@gmail.com"">k.ach.ikw.ud.remma.n.u.e.l@gmail.com</a>
<a href=""mailto:kach.ik.w.u.d.remm.anuel@gmail.com"">kach.ik.w.u.d.remm.anuel@gmail.com</a>
<a href=""mailto:k.achik.w.u.d.rem.m.anu.el@gmail.com"">k.achik.w.u.d.rem.m.anu.el@gmail.com</a>
<a href=""mailto:k.achi.k.w.ud.re.mman.uel@gmail.com"">k.achi.k.w.ud.re.mman.uel@gmail.com</a>
<a href=""mailto:kachi.kwu.dr.e.m.ma.nu.el@gmail.com"">kachi.kwu.dr.e.m.ma.nu.el@gmail.com</a>
<a href=""mailto:k.a.c.h.ik.w.u.d.remm.a.nu.el@gmail.com"">k.a.c.h.ik.w.u.d.remm.a.nu.el@gmail.com</a>
<a href=""mailto:k.a.chi.k.w.ud.r.emma.n.ue.l@gmail.com"">k.a.chi.k.w.ud.r.emma.n.ue.l@gmail.com</a>
<a href=""mailto:ka.c.hi.k.wu.d.re.m.m.anue.l@gmail.com"">ka.c.hi.k.wu.d.re.m.m.anue.l@gmail.com</a>
<a href=""mailto:kach.ikw.u.d.remm.a.nu.e.l@gmail.com"">kach.ikw.u.d.remm.a.nu.e.l@gmail.com</a>
<a href=""mailto:k.a.chi.kwu.drem.m.an.ue.l@gmail.com"">k.a.chi.kwu.drem.m.an.ue.l@gmail.com</a>
<a href=""mailto:ka.ch.ik.w.udre.m.m.an.u.el@gmail.com"">ka.ch.ik.w.udre.m.m.an.u.el@gmail.com</a>
<a href=""mailto:k.ach.i.k.wu.dremmanu.e.l@gmail.com"">k.ach.i.k.wu.dremmanu.e.l@gmail.com</a>
<a href=""mailto:k.a.c.h.i.kw.udr.emm.a.n.uel@gmail.com"">k.a.c.h.i.kw.udr.emm.a.n.uel@gmail.com</a>
<a href=""mailto:ka.chikwu.dre.mman.uel@gmail.com"">ka.chikwu.dre.mman.uel@gmail.com</a>
<a href=""mailto:k.a.chi.kw.ud.rem.man.uel@gmail.com"">k.a.chi.kw.ud.rem.man.uel@gmail.com</a>
<a href=""mailto:ka.chi.kw.ud.r.e.m.m.an.ue.l@gmail.com"">ka.chi.kw.ud.r.e.m.m.an.ue.l@gmail.com</a>
<a href=""mailto:ka.ch.i.kw.udre.mm.a.nue.l@gmail.com"">ka.ch.i.kw.udre.mm.a.nue.l@gmail.com</a>
<a href=""mailto:ka.c.hikw.u.d.r.e.mma.nu.e.l@gmail.com"">ka.c.hikw.u.d.r.e.mma.nu.e.l@gmail.com</a>
<a href=""mailto:kac.hi.k.wud.remman.uel@gmail.com"">kac.hi.k.wud.remman.uel@gmail.com</a>
<a href=""mailto:k.a.ch.ik.w.u.d.r.em.manu.e.l@gmail.com"">k.a.ch.ik.w.u.d.r.em.manu.e.l@gmail.com</a>
<a href=""mailto:k.a.c.h.ik.w.ud.r.e.mmanu.el@gmail.com"">k.a.c.h.ik.w.ud.r.e.mmanu.el@gmail.com</a>
<a href=""mailto:ka.c.hi.k.w.u.dre.mma.n.u.el@gmail.com"">ka.c.hi.k.w.u.dre.mma.n.u.el@gmail.com</a>
<a href=""mailto:ka.c.h.ik.wu.dr.e.m.m.a.n.ue.l@gmail.com"">ka.c.h.ik.wu.dr.e.m.m.a.n.ue.l@gmail.com</a>
<a href=""mailto:k.achikw.u.drem.m.a.n.uel@gmail.com"">k.achikw.u.drem.m.a.n.uel@gmail.com</a>
<a href=""mailto:kach.ikw.u.dre.mm.a.nuel@gmail.com"">kach.ikw.u.dre.mm.a.nuel@gmail.com</a>
<a href=""mailto:ka.ch.ik.w.u.d.remm.a.n.u.el@gmail.com"">ka.ch.ik.w.u.d.remm.a.n.u.el@gmail.com</a>
<a href=""mailto:ka.c.h.i.kwud.r.e.mm.an.u.el@gmail.com"">ka.c.h.i.kwud.r.e.mm.an.u.el@gmail.com</a>
<a href=""mailto:kach.ikwu.d.r.emm.a.nu.e.l@gmail.com"">kach.ikwu.d.r.emm.a.nu.e.l@gmail.com</a>
<a href=""mailto:ka.ch.i.kwu.drem.man.u.el@gmail.com"">ka.ch.i.kwu.drem.man.u.el@gmail.com</a>
<a href=""mailto:k.ach.ik.w.u.d.re.m.m.a.nu.el@gmail.com"">k.ach.ik.w.u.d.re.m.m.a.nu.el@gmail.com</a>
<a href=""mailto:k.a.c.hikwudremm.an.u.e.l@gmail.com"">k.a.c.hikwudremm.an.u.e.l@gmail.com</a>
<a href=""mailto:kachik.wud.r.e.mman.uel@gmail.com"">kachik.wud.r.e.mman.uel@gmail.com</a>
<a href=""mailto:kac.hikwu.d.remm.an.u.e.l@gmail.com"">kac.hikwu.d.remm.an.u.e.l@gmail.com</a>
<a href=""mailto:k.ac.hikwu.dr.e.mman.ue.l@gmail.com"">k.ac.hikwu.dr.e.mman.ue.l@gmail.com</a>
<a href=""mailto:kachik.wud.re.m.man.uel@gmail.com"">kachik.wud.re.m.man.uel@gmail.com</a>
<a href=""mailto:kac.hik.w.udr.e.mm.a.n.uel@gmail.com"">kac.hik.w.udr.e.mm.a.n.uel@gmail.com</a>
<a href=""mailto:k.ac.h.ikwu.dr.em.man.uel@gmail.com"">k.ac.h.ikwu.dr.em.man.uel@gmail.com</a>
<a href=""mailto:ka.chi.k.w.ud.r.e.m.ma.n.uel@gmail.com"">ka.chi.k.w.ud.r.e.m.ma.n.uel@gmail.com</a>
<a href=""mailto:kachi.k.wu.dr.em.m.a.nue.l@gmail.com"">kachi.k.wu.dr.em.m.a.nue.l@gmail.com</a>
<a href=""mailto:k.achi.k.w.u.d.r.emm.a.nu.e.l@gmail.com"">k.achi.k.w.u.d.r.emm.a.nu.e.l@gmail.com</a>
<a href=""mailto:k.achi.kw.udremm.an.ue.l@gmail.com"">k.achi.kw.udremm.an.ue.l@gmail.com</a>
<a href=""mailto:kac.h.i.kwudr.emm.anuel@gmail.com"">kac.h.i.kwudr.emm.anuel@gmail.com</a>
<a href=""mailto:kac.h.ik.w.udr.e.m.man.u.e.l@gmail.com"">kac.h.ik.w.udr.e.m.man.u.e.l@gmail.com</a>
<a href=""mailto:k.a.chi.kw.udr.e.mm.an.ue.l@gmail.com"">k.a.chi.kw.udr.e.mm.an.ue.l@gmail.com</a>
<a href=""mailto:k.a.ch.i.k.w.ud.rem.m.a.nue.l@gmail.com"">k.a.ch.i.k.w.ud.rem.m.a.nue.l@gmail.com</a>
<a href=""mailto:k.a.c.hi.k.wu.dr.emm.a.n.u.el@gmail.com"">k.a.c.hi.k.wu.dr.emm.a.n.u.el@gmail.com</a>
<a href=""mailto:ka.chik.wud.remm.a.n.uel@gmail.com"">ka.chik.wud.remm.a.n.uel@gmail.com</a>
<a href=""mailto:k.a.chikwud.r.em.ma.nue.l@gmail.com"">k.a.chikwud.r.em.ma.nue.l@gmail.com</a>
<a href=""mailto:ka.c.hik.wudrem.man.u.el@gmail.com"">ka.c.hik.wudrem.man.u.el@gmail.com</a>
<a href=""mailto:ka.chik.wu.d.r.em.ma.n.ue.l@gmail.com"">ka.chik.wu.d.r.em.ma.n.ue.l@gmail.com</a>
<a href=""mailto:ka.c.h.i.kw.udr.e.mmanu.e.l@gmail.com"">ka.c.h.i.kw.udr.e.mmanu.e.l@gmail.com</a>
<a href=""mailto:k.ac.hikwu.dr.em.ma.n.ue.l@gmail.com"">k.ac.hikwu.dr.em.ma.n.ue.l@gmail.com</a>
<a href=""mailto:kac.h.ik.w.u.dre.mm.a.n.uel@gmail.com"">kac.h.ik.w.u.dre.mm.a.n.uel@gmail.com</a>
<a href=""mailto:kac.hik.w.u.dr.emm.a.n.u.el@gmail.com"">kac.hik.w.u.dr.emm.a.n.u.el@gmail.com</a>
<a href=""mailto:ka.c.hikw.ud.r.e.m.man.ue.l@gmail.com"">ka.c.hikw.ud.r.e.m.man.ue.l@gmail.com</a>
<a href=""mailto:k.a.c.h.i.kwu.dr.emman.u.el@gmail.com"">k.a.c.h.i.kwu.dr.emman.u.el@gmail.com</a>
<a href=""mailto:k.a.c.h.ikwudre.m.manu.el@gmail.com"">k.a.c.h.ikwudre.m.manu.el@gmail.com</a>
<a href=""mailto:ka.ch.i.kwu.drem.m.a.nu.el@gmail.com"">ka.ch.i.kwu.drem.m.a.nu.el@gmail.com</a>
<a href=""mailto:kachik.w.u.dr.emma.nue.l@gmail.com"">kachik.w.u.dr.emma.nue.l@gmail.com</a>
<a href=""mailto:ka.c.hikw.u.d.re.mma.nuel@gmail.com"">ka.c.hikw.u.d.re.mma.nuel@gmail.com</a>
<a href=""mailto:ka.c.h.i.kwu.d.re.m.ma.nu.el@gmail.com"">ka.c.h.i.kwu.d.re.m.ma.nu.el@gmail.com</a>
<a href=""mailto:ka.ch.i.k.wu.dr.em.manuel@gmail.com"">ka.ch.i.k.wu.dr.em.manuel@gmail.com</a>
<a href=""mailto:k.a.c.hi.kw.ud.r.em.ma.n.uel@gmail.com"">k.a.c.hi.kw.ud.r.em.ma.n.uel@gmail.com</a>
<a href=""mailto:k.a.c.h.i.k.wud.remm.anu.el@gmail.com"">k.a.c.h.i.k.wud.remm.anu.el@gmail.com</a>
<a href=""mailto:kachi.kwu.dr.emm.an.ue.l@gmail.com"">kachi.kwu.dr.emm.an.ue.l@gmail.com</a>
<a href=""mailto:ka.chi.kw.ud.re.mm.a.n.uel@gmail.com"">ka.chi.kw.ud.re.mm.a.n.uel@gmail.com</a>
<a href=""mailto:k.a.ch.i.k.wudr.emm.a.nu.el@gmail.com"">k.a.ch.i.k.wudr.emm.a.nu.el@gmail.com</a>
<a href=""mailto:k.a.c.h.ik.wu.d.re.mma.nuel@gmail.com"">k.a.c.h.ik.wu.d.re.mma.nuel@gmail.com</a>
<a href=""mailto:k.ac.hi.kw.u.d.rem.ma.nu.e.l@gmail.com"">k.ac.hi.kw.u.d.rem.ma.nu.e.l@gmail.com</a>
<a href=""mailto:k.a.ch.i.kwud.r.em.ma.n.ue.l@gmail.com"">k.a.ch.i.kwud.r.em.ma.n.ue.l@gmail.com</a>
<a href=""mailto:k.a.c.hi.kwu.dre.m.m.an.u.e.l@gmail.com"">k.a.c.hi.kwu.dre.m.m.an.u.e.l@gmail.com</a>
<a href=""mailto:ka.chi.k.w.udr.emm.anuel@gmail.com"">ka.chi.k.w.udr.emm.anuel@gmail.com</a>
<a href=""mailto:kac.h.ikwu.d.re.m.ma.n.uel@gmail.com"">kac.h.ikwu.d.re.m.ma.n.uel@gmail.com</a>
<a href=""mailto:k.a.ch.i.k.w.u.d.re.mm.anue.l@gmail.com"">k.a.ch.i.k.w.u.d.re.mm.anue.l@gmail.com</a>
<a href=""mailto:k.a.c.h.i.kw.u.dre.m.m.anu.e.l@gmail.com"">k.a.c.h.i.kw.u.dre.m.m.anu.e.l@gmail.com</a>
<a href=""mailto:k.a.chik.w.ud.r.e.mman.ue.l@gmail.com"">k.a.chik.w.ud.r.e.mman.ue.l@gmail.com</a>
<a href=""mailto:k.ac.hi.k.wu.dre.m.ma.n.uel@gmail.com"">k.ac.hi.k.wu.dre.m.ma.n.uel@gmail.com</a>
<a href=""mailto:k.a.c.hi.kw.u.d.rem.manue.l@gmail.com"">k.a.c.hi.kw.u.d.rem.manue.l@gmail.com</a>
<a href=""mailto:k.ac.hik.w.ud.r.e.mma.nue.l@gmail.com"">k.ac.hik.w.ud.r.e.mma.nue.l@gmail.com</a>
<a href=""mailto:kach.i.k.wu.d.re.mm.a.nuel@gmail.com"">kach.i.k.wu.d.re.mm.a.nuel@gmail.com</a>
<a href=""mailto:ka.c.h.i.kw.u.d.re.m.m.an.u.el@gmail.com"">ka.c.h.i.kw.u.d.re.m.m.an.u.el@gmail.com</a>
<a href=""mailto:ka.c.hik.w.u.d.re.mm.a.n.u.e.l@gmail.com"">ka.c.hik.w.u.d.re.mm.a.n.u.e.l@gmail.com</a>
<a href=""mailto:k.a.ch.i.k.w.u.dr.e.mm.a.n.uel@gmail.com"">k.a.ch.i.k.w.u.dr.e.mm.a.n.uel@gmail.com</a>
<a href=""mailto:k.a.c.h.ik.w.u.d.rem.m.an.uel@gmail.com"">k.a.c.h.ik.w.u.d.rem.m.an.uel@gmail.com</a>
<a href=""mailto:ka.c.h.i.k.wu.d.re.mma.n.ue.l@gmail.com"">ka.c.h.i.k.wu.d.re.mma.n.ue.l@gmail.com</a>
<a href=""mailto:kac.h.i.k.w.u.d.rem.ma.nuel@gmail.com"">kac.h.i.k.w.u.d.rem.ma.nuel@gmail.com</a>
"
cTNQtCtK,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Sunday 28th of January 2024 11:50:58 AM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://netdrop-claim.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://netdrop-claim.netlify.app/

428479"
QAFyu9fq,Convert image to Blender Python Code,metalx1000,Bash,Sunday 28th of January 2024 11:47:07 AM CDT,"#!/bin/bash
###################################################################### 
#Copyright (C) 2024  Kris Occhipinti
#https://filmsbykris.com

#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation version 3 of the License.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
###################################################################### 

[[ $1 ]] || exit
[[ -f ""$1"" ]] || exit

convert ""$1"" text:- |grep -v '^#'|awk '{print $1,$4}'|sed 's/: srgba(/,/g'|tr -d ')'|while read line
do 
  line=""$(echo $line|sed 's/: black/,0,0,0,1/g')""
  pos=""$(echo $line|cut -d\, -f1,2)""
  if [[ ""$line"" != *""none""* ]]
  then
  r=""$(echo $line|cut -d\, -f3)""
  r=""$(echo ""scale=6; $r/255""| bc -l)""
  g=""$(echo $line|cut -d\, -f4)""
  g=""$(echo ""scale=6; $g/255""| bc -l)""
  b=""$(echo $line|cut -d\, -f5)""
  b=""$(echo ""scale=6; $b/255""| bc -l)""
  color=""$r,$g,$b""
  name=""Material.$RANDOM.$RANDOM""
    echo ""
bpy.ops.mesh.primitive_cube_add(enter_editmode=False, align='WORLD', location=($pos, 0), scale=(.5, .5, .5))
mat = bpy.data.materials.new('$name')
mat.use_nodes = True
bpy.data.materials['$name'].node_tree.nodes['Principled BSDF'].inputs[0].default_value = ($color, 1)
bpy.context.object.active_material = mat""

  fi

done
"
geV8v1cv,cannonball,nmh07000,Java,Sunday 28th of January 2024 11:31:01 AM CDT,"import java.util.*;
import java.io.*;
public class cannonball {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        
        int n = Integer.parseInt(st.nextToken());
        int start = Integer.parseInt(st.nextToken())-1;
        int curLevel = 1;
        int curLoc = 0;
        int count = 0;
        
        Location[] locs = new Location[n];
        for(int i=0; i<n; i++) {
            st = new StringTokenizer(br.readLine());
            locs[i] = new Location();
            locs[i].type = Integer.parseInt(st.nextToken());
            locs[i].value = Integer.parseInt(st.nextToken());
        }
        
        String[] types = new String[n];
        for(int i=0; i<n; i++) {
            if(locs[i].type == 0) {
                types[i] = ""pad"";
            }
            else if(locs[i].type == 1) {
                types[i] = ""target"";
            }
        }
        
        curLoc = start;
        if(types[start] == ""target"" && locs[start].value == 1) {
            count++;
            types[start] = """";
            
        }
        while(true) {
            if(locs[curLoc].value <= Math.abs(curLevel) && types[curLoc] == ""target"") {
                types[curLoc] = """";
                count++;
            }
            else if(types[curLoc] == ""pad"") {
                if(curLevel > 0) {
                    curLevel += locs[curLoc].value;
                }
                else {
                    curLevel -= locs[curLoc].value;
                }
                
                curLevel *= (-1);
            }
            curLoc+= curLevel;
            if(curLoc > n-1 || curLoc < 0) {break;}
            
        }
        
        System.out.println(count);
    }
    
    static class Location {
        int type;
        int value;
    }
}"
hKphZj0s,zad.6,ppiso,PHP,Sunday 28th of January 2024 11:27:00 AM CDT,"//parzyste od do
<?php
function print_even_numbers($a, $b) {
    if ($a > $b) {
        $temp = $a;
        $a = $b;
        $b = $temp;
    }
    for ($i = $a; $i <= $b; $i++) {
        if ($i % 2 == 0) {
            echo $i . "" "";
        }
    }
}
print_even_numbers(2,10)
?>"
pUp5tyaM,zad.5,ppiso,PHP,Sunday 28th of January 2024 11:25:01 AM CDT,"//trojka pitagorejska
<?php
function czy_pitagorejska($a, $b, $c) {
    $a = pow($a, 2);
    $b = pow($b, 2);
    $c = pow($c, 2);

    if ($a + $b == $c || $a + $c == $b || $b + $c == $a) {
        echo ""To jest trójka pitagorejska"";
    } else {
        echo ""To nie jest trójka pitagorejska"";
    }
}
czy_pitagorejska(3,4,5)
?>"
9keJqDxn,zad.4,ppiso,PHP,Sunday 28th of January 2024 11:24:41 AM CDT,"//fibonacci2
<?php
function fibonacci($n) {
    $a = 0;
    $b = 1;
    $result = ""$a, $b"";
    for ($i = 2; $i < $n; $i++) {
        $c = $a + $b;
        $a = $b;
        $b = $c;
        $result .= "", $c"";
    }
    echo ""Wynik: $result"";
}
fibonacci(4)
?>"
FLK0n7gH,zad.3,ppiso,PHP,Sunday 28th of January 2024 11:24:19 AM CDT,"//fibonacci 1
<?php
function fibonacci($n) {
    if ($n == 0) {
        echo ""0"";
    } elseif ($n == 1) {
        echo ""1"";
    } else {
        $a = 0;
        $b = 1;
        for ($i = 2; $i <= $n; $i++) {
            $c = $a + $b;
            $a = $b;
            $b = $c;
        }
        echo $b;
    }
}
fibonacci(8)
?>"
52R5AfKw,zad.2,ppiso,PHP,Sunday 28th of January 2024 11:23:58 AM CDT,"//potegi
<?php
function power($x, $n) {
    $result = 1;
    for ($i = 0; $i < $n; $i++) {
        $result *= $x;
    }
    echo ""Wynik: $result"";
}
power(2,3)
?>"
cTpnLUiS,zad.1,ppiso,PHP,Sunday 28th of January 2024 11:23:34 AM CDT,"//max z dwoch
<?php
function max_z_dwoch($a, $b) {
    if ($a > $b) {
        echo ""Większa liczba to $a."";
    } else {
        echo ""Większa liczba to $b."";
    }
}
max_z_dwoch(1,2)
?>"
eCDyUKKc,ReverseHyphenString.JS,c-mcbride,JavaScript,Sunday 28th of January 2024 11:20:05 AM CDT,"//Write a function reverseHyphenString(string) that takes in a hyphenated string and returns a the hyphenated string reversed.
//Added here because ""reverse a string"" is a classic interview question

//Time complexity: O(n)
//Space complexity: O(n)
function reverseHyphenString(string){
    let choppedString = string.split(""-"") //Split the array at the hyphen
    let reversedString = []

    //Iterate backwards through the orignal word and add it to the reversed Array
    for(let i = choppedString.length - 1; i >= 0; i--){
        reversedString.push(choppedString[i])
    }
    reversedString = reversedString.join(""-"") //Join with a hyphen inserted. Thanks JS
    return reversedString;
}

console.log(reverseHyphenString(""Go-to-the-store"")) // => ""store-the-to-Go"""
7BURzLX6,G2A.com Free Gift Card Guide Jan 2024,ounnuo,GetText,Sunday 28th of January 2024 11:09:27 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/19Hbtao1NkH151RIhoWLJ9mhp8TPYzmdb/view?usp=g2a_refund_exploit_768014.pdf
 
Working as of
28 January 2024"
6n4ZGHD7,Blender Python Create Cube and add Material,metalx1000,Python,Sunday 28th of January 2024 11:06:43 AM CDT,"bpy.ops.mesh.primitive_cube_add(enter_editmode=False, align='WORLD', location=(9,15, 0), scale=(.5, .5, .5))
mat = bpy.data.materials.new('material_TEST1')
mat.use_nodes = True
bpy.data.materials[""material_TEST1""].node_tree.nodes[""Principled BSDF""].inputs[0].default_value = (0.4601, 0.228801, 0.450716, 1)
bpy.context.object.active_material = mat

"
wRx2Ext4,Libit Devchat+ (tampermonkey),DaRedJumper,JavaScript,Sunday 28th of January 2024 10:51:30 AM CDT,"// ==UserScript==
// @name         Libit Devchat+
// @namespace    http://tampermonkey.net/
// @version      2024-01-27
// @description  try to take over the world!
// @author       DaxCodes
// @match        https://devchat.libit.xyz/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=libit.xyz
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    var newstyle = document.createElement(""style"")
    newstyle.textContent = `
    @keyframes rainbow{
    0%{color: red;}
    20%{color: orange;}
    40%{color: yellow;}
    60%{color: lime;}
    80%{color: blue;}
    90%{color: purple;}
    100%{color: red;}
    }
    p{
    animation-name: rainbow;
    animation-duration: 3.5s;
    animation-iteration-count: infinite;
    }
    `
    document.head.appendChild(newstyle);
    document.getElementById(""message"").style.backgroundColor = ""#080808"";
    document.body.style.backgroundColor = ""#161616"";
    var inputs = document.getElementsByTagName(""input"");
    var images = document.getElementsByTagName(""img"");
    var divs = document.getElementsByTagName(""div"");
    for(var divsss = 0; divsss < divs.length; divsss++){
        //do something to each image like
        divs[divsss].style.backgroundColor = ""#070707"";
    }
    setTimeout(function(){
        for(var iss = 0; iss < inputs.length; iss++){
            //do something to each input like
            if (inputs[iss].placeholder != ""Message""){
                inputs[iss].remove()
            }
        }
        for(var isss = 0; isss < images.length; isss++){
            //do something to each image like
            if (images[isss].src.includes(""grabify.link"")){
                images[isss].remove()
            }
        }
    }, 450)
    
})();"
EM46k3pa,for buck snowybot yo bro fixed it,coinwalk,JavaScript,Sunday 28th of January 2024 10:14:57 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var divideby = 100;
var bolux = 14;
var base = Number((oldestbal/divideby).toFixed(8));
var jove = parseFloat(document.getElementById('pct_balance').value);
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 6.9;
var downer = 2.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var shocking = ((Math.floor(oldestbal/tens))*tens);
var troll = 1;


function get(){
bellance = document.getElementById('pct_balance').value;
beatle = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var good = ((bellance-jove).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	troll = 0;
	fart = parseFloat(bellance);
}
if ((bellance>=(shocking+(tens*troll)))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    oldestbal = parseFloat(bellance);
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor(bellance/tens))*tens);
	shocking = ((Math.floor(bellance/tens))*tens);
}
if (((oldestbal-(base*bolux))-(bellance+(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor(bellance/tens))*tens);
	shocking = ((Math.floor(bellance/tens))*tens);
}
if ((bellance<=(oldestbal-(base*bolux)))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    oldestbal = parseFloat(bellance);
    botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor(bellance/tens))*tens);
	shocking = ((Math.floor(bellance/tens))*tens);
}
if (bellance>=(jove*24)) {
	console.log(""winner winner chicken dinner"");
	return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 1);
}
get();
"
prQ383yt,Untitled,Derga,C++,Sunday 28th of January 2024 10:14:01 AM CDT,"#include <algorithm>
#include <iostream>
#include <numeric>
#include <set>
#include <tuple>
#include <vector>

using namespace std;

struct Skill {
    int in_development;
    int in_managment;
};

struct DifferenceId {
    int difference; //skill in development - skill in managment
    int id;
};

bool operator<(const DifferenceId& lhs, const DifferenceId& rhs) {
    if (lhs.difference != rhs.difference) return lhs.difference > rhs.difference;
    return lhs.id < rhs.id;
}

vector<Skill> GetSkills() {
    int ppc; //project participants count
    cin >> ppc;
    vector<Skill> skills(ppc);
    for (Skill& skill : skills) {
        cin >> skill.in_development;
    }
    for (Skill& skill : skills) {
        cin >> skill.in_managment;
    }
    return skills;
}

void GetSkillImprovement(vector<Skill>& skills, int id) {
    int skill_type, skill_improvement;
    cin >> skill_type >> skill_improvement;

    //if (participant_number > skills.size()) throw logic_error(""wrong participant number"");
    Skill& participant_skill = skills[id - 1];

    if (skill_type == 1) participant_skill.in_development += skill_improvement;
    else if (skill_type == 2) participant_skill.in_managment += skill_improvement;
    //else throw logic_error(""wrong skill type"");
}

void GetSkillImprovement(vector<Skill>& skills) {
    int participant_number, skill_type, skill_improvement;
    cin >> participant_number >> skill_type >> skill_improvement;

    //if (participant_number > skills.size()) throw logic_error(""wrong participant number"");
    Skill& participant_skill = skills[participant_number - 1];

    if (skill_type == 1) participant_skill.in_development += skill_improvement;
    else if (skill_type == 2) participant_skill.in_managment += skill_improvement;
    //else throw logic_error(""wrong skill type"");
}

DifferenceId GetDifferenceId(vector<Skill>& skills, int id) {
    return { skills[id - 1].in_development - skills[id - 1].in_managment, id};
};

int GetCurrentTotalBenefitOfAllParticipants(const vector<Skill>& skills) {
    vector<Skill> skills_copy = skills;
    sort(skills_copy.begin(), skills_copy.end(), [](const Skill& lhs, const Skill& rhs) {
        return (lhs.in_development - lhs.in_managment) > (rhs.in_development - rhs.in_managment);
    });

    int benefit_of_developers = accumulate(skills_copy.begin(), skills_copy.begin() + skills_copy.size() / 2,
        0, [](int sum, const Skill& skill) {
        return sum + skill.in_development;
    });

    int benefit_of_managers = accumulate(skills_copy.begin() + skills_copy.size() / 2, skills_copy.end(),
        0, [](int sum, const Skill& skill) {
        return sum + skill.in_managment;
    });

    return benefit_of_developers + benefit_of_managers;
}

//O(m * n * log(n)), O(certificates_count * ppc * log(ppc))
int NaiveSolution(vector<Skill>& skills) {
    GetSkillImprovement(skills);
    return GetCurrentTotalBenefitOfAllParticipants(skills);
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);

    vector<Skill> skills = GetSkills();
    vector<Skill> skills_copy = skills;

    set<DifferenceId> developers;
    set<DifferenceId> managers;
    for (int i = 0; i < skills.size(); ++i) {
        DifferenceId difference_id = GetDifferenceId(skills, i + 1);
        developers.insert(difference_id);
        managers.insert(difference_id);
    }
    for (int i = 0; i < skills.size() / 2; ++i) {
        developers.erase(prev(developers.end()));
        managers.erase(managers.begin());
    }

    int developers_benefit = 0;
    for (const auto&[_, id] : developers) {
        developers_benefit += skills[id - 1].in_development;
    }
    
    int managers_benefit = 0;
    for (const auto& [_, id] : managers) {
        managers_benefit += skills[id - 1].in_managment;
    }

    int certificates_count;
    cin >> certificates_count;
    for (int i = 0; i < certificates_count; ++i) {
        int id; //id - participant id
        cin >> id;

        DifferenceId old_diference_id = GetDifferenceId(skills, id);
        GetSkillImprovement(skills, id);
        DifferenceId new_diference_id = GetDifferenceId(skills, id);
        
        if (developers.count(old_diference_id)) {
            developers.erase(old_diference_id);
            developers_benefit -= skills[old_diference_id.id - 1].in_development;
        } else {
            managers.erase(old_diference_id);
            managers_benefit -= skills[old_diference_id.id - 1].in_managment;
        }

        developers.insert(new_diference_id);
        developers_benefit += skills[new_diference_id.id - 1].in_development;
       
        managers.insert(new_diference_id);
        managers_benefit += skills[new_diference_id.id - 1].in_managment;

        if (developers.rbegin()->difference < managers.begin()->difference) {
            if (developers.size() < managers.size()) {
                developers_benefit -= skills[prev(developers.end())->id - 1].in_development;
                developers.erase(prev(developers.end()));
                
                developers.insert(*managers.begin());
                developers_benefit += skills[managers.begin()->id - 1].in_development;

                managers_benefit -= skills[managers.begin()->id - 1].in_managment;
                managers.erase(managers.begin());
            } else {
                managers_benefit -= skills[managers.begin()->id - 1].in_managment;
                managers.erase(managers.begin());

                managers.insert(*prev(developers.end()));
                managers_benefit += skills[prev(developers.end())->id - 1].in_managment;

                developers_benefit -= skills[prev(developers.end())->id - 1].in_development;
                developers.erase(prev(developers.end()));
            }
        } else {
            if (developers.size() > managers.size()) {
                developers_benefit -= skills[prev(developers.end())->id - 1].in_development;
                developers.erase(prev(developers.end()));
            } else {
                managers_benefit -= skills[managers.begin()->id - 1].in_managment;
                managers.erase(managers.begin());
            }
        }


        cout << developers_benefit + managers_benefit << '\n';
    }
}

/*
test1
4
7 15 3 4
10 10 0 6
3
1 1 4
4 1 6
2 2 10

34
35
43
*/






int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);

    vector<Skill> skills = GetSkills();
    int certificates_count;
    cin >> certificates_count;
    for (int i = 0; i < certificates_count; ++i) {
        cout << NaiveSolution(skills) << '\n';
    }
}
"
2VFW0AQ8,Untitled,LukeSavefrogs,JavaScript,Sunday 28th of January 2024 10:05:54 AM CDT,"class Brick {
  constructor(x, y, color="""", width=120, height=60) {
    this.x = x;
    this.y = y;
    this.color = color;
    this.width = width;
    this.height = height;
  }
  
  draw() {
    brick.beginPath();
    brick.rect(this.x, this.y, this.width, this.height);
    brick.fillStyle = this.color;
    brick.fill();
  }
}

class BrickLine {
  constructor(bricks, color="""") {
    this.bricks = bricks;
    
    if (color != """") {
      this.bricks.forEach(brick => brick.color = color);
    }
  }
  
  draw() {
    this.bricks.forEach(brick => brick.draw());
  }
}

class BrickWall {
  constructor(lines) {
    this.lines = lines;
  }
  
  draw() {
    this.lines.forEach(line => line.draw());
  }
}



const wall = new BrickWall([
  new BrickLine([
    new Brick(10, 100),
    new Brick(140, 100),
    new Brick(270, 100),
    new Brick(400, 100)
  ], ""yellow""),
  new BrickLine([
    new Brick(10, 170),
    new Brick(140, 170),
    new Brick(270, 170),
    new Brick(400, 170)
  ], ""green""),
  new BrickLine([
    new Brick(10, 240),
    new Brick(140, 240),
    new Brick(270, 240),
    new Brick(400, 240)
  ], ""orange""),
  new BrickLine([
    new Brick(10, 310),
    new Brick(140, 310),
    new Brick(270, 310),
    new Brick(400, 310)
  ], ""red"")
]);"
7yA5HdaG,snowy emanual completed,coinwalk,JavaScript,Sunday 28th of January 2024 10:04:11 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var divideby = 240;
var bolux = 24;
var base = Number((oldestbal/divideby).toFixed(8));
var jove = parseFloat(document.getElementById('pct_balance').value);
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 6.9;
var downer = 2.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var shocking = ((Math.floor(oldestbal/tens))*tens);
var troll = 1;


function get(){
bellance = document.getElementById('pct_balance').value;
beatle = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var good = ((bellance-jove).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	troll = 0;
	fart = parseFloat(bellance);
}
if ((bellance>=(shocking+(tens*troll)))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    oldestbal = parseFloat(bellance);
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor(bellance/tens))*tens);
	shocking = ((Math.floor(bellance/tens))*tens);
}
if (((oldestbal-(base*bolux))-(bellance-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor(bellance/tens))*tens);
	shocking = ((Math.floor(bellance/tens))*tens);
}
if (bellance<=(oldestbal-(base*bolux))){
    oldestbal = parseFloat(bellance);
    botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor(bellance/tens))*tens);
	shocking = ((Math.floor(bellance/tens))*tens);
}
if (bellance>=(jove*24)) {
	console.log(""winner winner chicken dinner"");
	return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 1);
}
get();
"
gz4FVXsJ,snowy emanual completed,coinwalk,JavaScript,Sunday 28th of January 2024 09:59:02 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var divideby = 240;
var bolux = 24;
var base = Number((oldestbal/divideby).toFixed(8));
var jove = parseFloat(document.getElementById('pct_balance').value);
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 6.9;
var downer = 2.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var shocking = ((Math.floor(oldestbal/tens))*tens);
var troll = 1;


function get(){
bellance = document.getElementById('pct_balance').value;
beatle = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var good = ((bellance-jove).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if ((bellance>=(shocking+(base*40)))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    oldestbal = parseFloat(bellance);
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor(bellance/tens))*tens);
	shocking = ((Math.floor(bellance/tens))*tens);
}
if (((oldestbal-(base*bolux))-(bellance-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor(bellance/tens))*tens);
	shocking = ((Math.floor(bellance/tens))*tens);
}
if (bellance<=(oldestbal-(base*bolux))){
    oldestbal = parseFloat(bellance);
    botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor(bellance/tens))*tens);
	shocking = ((Math.floor(bellance/tens))*tens);
}
if (bellance>=(jove*24)) {
	console.log(""winner winner chicken dinner"");
	return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 1);
}
get();
"
iqtys1Vf,PowerShell Coding,Justman10000,PowerShell,Sunday 28th of January 2024 09:55:11 AM CDT,"# Below is all the code to do certain things
# Note that placeholders are used here and this is a guide! Do NOT use this as a script (it will not work)!
# Note also that this is a guide for PowerShell, so ONLY for Microsoft Windows

# Reload PATH entries
$Env:Path = [System.Environment]::GetEnvironmentVariable(""Path"",""Machine"") + "";"" + [System.Environment]::GetEnvironmentVariable(""Path"",""User"")"
NcCFUEca,MD_MAX72xx_font.cpp,Shaniyakov,Arduino,Sunday 28th of January 2024 09:54:41 AM CDT,"/*
MD_MAX72xx - Library for using a MAX7219/7221 LED matrix controller

See header file for comments

This file contains methods that work with the fonts and characters defined in the library

Copyright (C) 2012-14 Marco Colli. All rights reserved.

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 */
#ifdef ARDUINO 
#include <Arduino.h>
#endif
#include ""MD_MAX72xx.h""
#include ""MD_MAX72xx_lib.h""

/**
 * \file
 * \brief Implements font definition and methods
 */
#ifndef USE_NEW_FONT
#define USE_NEW_FONT 1
#endif

#if USE_LOCAL_FONT
// Local font handling functions if the option is enabled

void MD_MAX72XX::setFontInfoDefault(void)
// Set the defaults for the info block compatible with version 0 of the file
{
  _fontInfo.version = 0;
  _fontInfo.height = 8;
  _fontInfo.widthMax = 0;
  _fontInfo.firstASCII = 0;
  _fontInfo.lastASCII = 255;
  _fontInfo.dataOffset = 0;
}

void MD_MAX72XX::loadFontInfo(void)
{
  uint8_t c;
  uint16_t offset = 0;
  
  setFontInfoDefault();

  if (_fontData != nullptr)
  {
    PRINTS(""\nLoading font info"");
    // Read the first character. If this is not the file type indicator
    // then we have a version 0 file and the defaults are ok, otherwise 
    // read the font info from the data table. 
    c = pgm_read_byte(_fontData + offset++);
    if (c == FONT_FILE_INDICATOR)
    {
      c = pgm_read_byte(_fontData + offset++);  // read the version number
      switch (c)
      {
        case 2:
          _fontInfo.firstASCII = (pgm_read_byte(_fontData + offset++) << 8);
          _fontInfo.firstASCII += pgm_read_byte(_fontData + offset++);
          _fontInfo.lastASCII = (pgm_read_byte(_fontData + offset++) << 8);
          _fontInfo.lastASCII += pgm_read_byte(_fontData + offset++);
          _fontInfo.height = pgm_read_byte(_fontData + offset++);
          break;

        case 1:
          _fontInfo.firstASCII = pgm_read_byte(_fontData + offset++);
          _fontInfo.lastASCII  = pgm_read_byte(_fontData + offset++);
          _fontInfo.height     = pgm_read_byte(_fontData + offset++);
          break;
        
        case 0:
        default:
          // nothing to do, use the library defaults
          break;
      }
      _fontInfo.dataOffset = offset;
    }
    PRINT("" F: "", _fontInfo.firstASCII);
    PRINT("" L: "", _fontInfo.lastASCII);
    PRINT("" H: "", _fontInfo.height);

    // these always set
    _fontInfo.widthMax = getFontWidth();
  }
}

uint8_t MD_MAX72XX::getFontWidth(void)
{
  uint8_t   max = 0;
  uint8_t   charWidth;
  uint32_t  offset = _fontInfo.dataOffset;

  PRINTS(""\nFinding max font width"");
  if (_fontData != nullptr)
  {
    for (uint16_t i = _fontInfo.firstASCII; i <= _fontInfo.lastASCII; i++)
    {
      charWidth = pgm_read_byte(_fontData + offset);
      /*
      PRINT(""\nASCII '"", i);
      PRINT(""' offset "", offset);
      PRINT(""' width "", charWidth);
      */
      if (charWidth > max)
      {
        max = charWidth;
        PRINT("":"", max);
      }
      offset += charWidth;  // skip character data
      offset++; // skip to size byte
    }
  }
  PRINT("" max "", max);

  return(max);
}

int32_t MD_MAX72XX::getFontCharOffset(uint16_t c)
{
  int32_t  offset = _fontInfo.dataOffset;

  PRINT(""\nfontOffset ASCII "", c);

  if (c < _fontInfo.firstASCII || c > _fontInfo.lastASCII)
    offset = -1;
  else
  {
    for (uint16_t i=_fontInfo.firstASCII; i<c; i++)
    {
      PRINTS(""."");
      offset += pgm_read_byte(_fontData+offset);
      offset++; // skip size byte we used above
    }

    PRINT("" searched offset "", offset);
  }
  return(offset);
}

bool MD_MAX72XX::setFont(fontType_t *f)
{
  if (f != _fontData) // we actually have a change to process
  {
    _fontData = (f == nullptr ? _sysfont : f);
    loadFontInfo();
  }

  return(true);
}

uint8_t MD_MAX72XX::getChar(uint16_t c, uint8_t size, uint8_t *buf)
{
  PRINT(""\ngetChar: '"", (char)c);
  PRINT(""' ASC "", c);
  PRINT("" - bufsize "", size);

  if (buf == nullptr)
    return(0);

  int32_t offset = getFontCharOffset(c);
  if (offset == -1)
  {
    memset(buf, 0, size);
    size = 0;
  }
  else
  {
    size = min(size, pgm_read_byte(_fontData+offset));

    offset++; // skip the size byte

    for (uint8_t i=0; i<size; i++)
      *buf++ = pgm_read_byte(_fontData+offset+i);
  }
  
  return(size);
}

uint8_t MD_MAX72XX::setChar(uint16_t col, uint16_t c)
{
  PRINT(""\nsetChar: '"", c);
  PRINT(""' column "", col);
  boolean b = _updateEnabled;
  uint8_t size;

  int32_t offset = getFontCharOffset(c);
  if (offset == -1)
    return(0);

  size = pgm_read_byte(_fontData+offset);

  offset++; // skip the size byte

  _updateEnabled = false;
  for (int8_t i=0; i<size; i++)
  {
    uint8_t colData = pgm_read_byte(_fontData+offset+i);
    setColumn(col--, colData);
  }
  _updateEnabled = b;

  if (_updateEnabled) flushBufferAll();

  return(size);
}
// Standard font - variable spacing
MD_MAX72XX::fontType_t PROGMEM _sysfont[] =
{
#if USE_NEW_FONT
  'F', 2, 0, 0, 0, 255, 8,
  0,		// 0 - 'Empty Cell'
  5, 62, 91, 79, 91, 62,		// 1 - 'Sad Smiley'
  5, 62, 107, 79, 107, 62,		// 2 - 'Happy Smiley'
  5, 28, 62, 124, 62, 28,		// 3 - 'Heart'
  5, 24, 60, 126, 60, 24,		// 4 - 'Diamond'
  5, 28, 87, 125, 87, 28,		// 5 - 'Clubs'
  5, 28, 94, 127, 94, 28,		// 6 - 'Spades'
  4, 0, 24, 60, 24,		// 7 - 'Bullet Point'
  5, 255, 231, 195, 231, 255,		// 8 - 'Rev Bullet Point'
  4, 0, 24, 36, 24,		// 9 - 'Hollow Bullet Point'
  5, 255, 231, 219, 231, 255,		// 10 - 'Rev Hollow BP'
  5, 48, 72, 58, 6, 14,		// 11 - 'Male'
  5, 38, 41, 121, 41, 38,		// 12 - 'Female'
  1, 0,		// 13 - 'Music Note 1'
  5, 64, 127, 5, 37, 63,		// 14 - 'Music Note 2'
  5, 90, 60, 231, 60, 90,		// 15 - 'Snowflake'
  5, 127, 62, 28, 28, 8,		// 16 - 'Right Pointer'
  5, 8, 28, 28, 62, 127,		// 17 - 'Left Pointer'
  5, 20, 34, 127, 34, 20,		// 18 - 'UpDown Arrows'
  5, 255, 255, 255, 255, 255,		// 19 - 'Full Block'
  5, 240, 240, 240, 240, 240,		// 20 - 'Half Block Bottom'
  3, 255, 255, 255,		// 21 - 'Half Block LHS'
  5, 0, 0, 0, 255, 255,		// 22 - 'Half Block RHS'
  5, 15, 15, 15, 15, 15,		// 23 - 'Half Block Top'
  5, 8, 4, 126, 4, 8,		// 24 - 'Up Arrow'
  5, 16, 32, 126, 32, 16,		// 25 - 'Down Arrow'
  5, 8, 8, 42, 28, 8,		// 26 - 'Right Arrow'
  5, 8, 28, 42, 8, 8,		// 27 - 'Left Arrow'
  5, 170, 0, 85, 0, 170,		// 28 - '30% shading'
  5, 170, 85, 170, 85, 170,		// 29 - '50% shading'
  5, 48, 56, 62, 56, 48,		// 30 - 'Up Pointer'
  5, 6, 14, 62, 14, 6,		// 31 - 'Down Pointer'
  2, 0, 0, 		// 32 - 'Space'
  1, 95,		// 33 - '!'
  3, 7, 0, 7,		// 34 - '""""'
  5, 20, 127, 20, 127, 20,		// 35 - '#'
  5, 68, 74, 255, 74, 50,		// 36 - '$'
  5, 99, 19, 8, 100, 99,		// 37 - '%'
  5, 54, 73, 73, 54, 72,		// 38 - '&'
  1, 7,		// 39 - '''
  3, 62, 65, 65,		// 40 - '('
  3, 65, 65, 62,		// 41 - ')'
  5, 8, 42, 28, 42, 8,		// 42 - '*'
  5, 8, 8, 62, 8, 8,		// 43 - '+'
  2, 96, 224,		// 44 - ','
  4, 8, 8, 8, 8,		// 45 - '-'
  2, 96, 96,		// 46 - '.'
  5, 96, 16, 8, 4, 3,		// 47 - '/'
  5, 62, 81, 73, 69, 62,		// 48 - '0'
  3, 4, 2, 127,		// 49 - '1'
//  3, 66, 127, 64,		// 49 - serifed '1'
  5, 113, 73, 73, 73, 70,		// 50 - '2'
  5, 65, 73, 73, 73, 54,		// 51 - '3'
  5, 15, 8, 8, 8, 127,		// 52 - '4'
  5, 79, 73, 73, 73, 49,		// 53 - '5'
  5, 62, 73, 73, 73, 48,		// 54 - '6'
  5, 3, 1, 1, 1, 127,		// 55 - '7'
//  5, 1, 1, 121, 5, 3,		// 55 - european style '7'
  5, 54, 73, 73, 73, 54,		// 56 - '8'
  5, 6, 73, 73, 73, 62,		// 57 - '9'
  2, 108, 108,		// 58 - ':'
  2, 108, 236,		// 59 - ';'
  3, 8, 20, 34,		// 60 - '<'
  4, 20, 20, 20, 20,		// 61 - '='
  0,		// 62 - '>'
  5, 1, 89, 9, 9, 6,		// 63 - '?'
  5, 62, 65, 93, 89, 78,		// 64 - '@'
  5, 126, 9, 9, 9, 126,		// 65 - 'A'
  5, 127, 73, 73, 73, 54,		// 66 - 'B'
  5, 62, 65, 65, 65, 65,		// 67 - 'C'
  5, 127, 65, 65, 65, 62,		// 68 - 'D'
  5, 127, 73, 73, 73, 65,		// 69 - 'E'
  5, 127, 9, 9, 9, 1,		// 70 - 'F'
  5, 62, 65, 65, 73, 121,		// 71 - 'G'
  5, 127, 8, 8, 8, 127,		// 72 - 'H'
  3, 65, 127, 65,		// 73 - 'I'
  5, 48, 65, 65, 65, 63,		// 74 - 'J'
  5, 127, 8, 20, 34, 65,		// 75 - 'K'
  5, 127, 64, 64, 64, 64,		// 76 - 'L'
  5, 127, 2, 12, 2, 127,		// 77 - 'M'
  5, 127, 4, 8, 16, 127,		// 78 - 'N'
  5, 62, 65, 65, 65, 62,		// 79 - 'O'
  5, 127, 9, 9, 9, 6,		// 80 - 'P'
  5, 62, 65, 65, 97, 126,		// 81 - 'Q'
  5, 127, 9, 25, 41, 70,		// 82 - 'R'
  5, 70, 73, 73, 73, 49,		// 83 - 'S'
  5, 1, 1, 127, 1, 1,		// 84 - 'T'
  5, 63, 64, 64, 64, 63,		// 85 - 'U'
  5, 31, 32, 64, 32, 31,		// 86 - 'V'
  5, 63, 64, 56, 64, 63,		// 87 - 'W'
  5, 99, 20, 8, 20, 99,		// 88 - 'X'
  5, 3, 4, 120, 4, 3,		// 89 - 'Y'
  5, 97, 81, 73, 69, 67,		// 90 - 'Z'
  3, 127, 65, 65,		// 91 - '['
  5, 3, 4, 8, 16, 96,		// 92 - '\'
  3, 65, 65, 127,		// 93 - ']'
  5, 4, 2, 1, 2, 4,		// 94 - '^'
  4, 128, 128, 128, 128,		// 95 - '_'
  3, 1, 2, 4,		// 96 - '`'
  4, 56, 68, 68, 124,		// 97 - 'a'
  4, 127, 68, 68, 56,		// 98 - 'b'
  4, 56, 68, 68, 68,		// 99 - 'c'
  4, 56, 68, 68, 127,		// 100 - 'd'
  4, 56, 84, 84, 88,		// 101 - 'e'
  4, 4, 126, 5, 1,		// 102 - 'f'
  4, 24, 164, 164, 124,		// 103 - 'g'
  4, 127, 4, 4, 120,		// 104 - 'h'
  1, 125,		// 105 - 'i'
  3, 132, 133, 124,		// 106 - 'j'
  4, 127, 16, 40, 68,		// 107 - 'k'
  1, 127,		// 108 - 'l'
  5, 124, 4, 120, 4, 120,		// 109 - 'm'
  4, 124, 4, 4, 120,		// 110 - 'n'
  4, 56, 68, 68, 56,		// 111 - 'o'
  4, 252, 36, 36, 24,		// 112 - 'p'
  4, 24, 36, 36, 252,		// 113 - 'q'
  4, 124, 4, 4, 8,		// 114 - 'r'
  4, 88, 84, 84, 52,		// 115 - 's'
  3, 4, 127, 4,		// 116 - 't'
  4, 60, 64, 64, 124,		// 117 - 'u'
  4, 28, 32, 64, 124,		// 118 - 'v'
  5, 60, 64, 48, 64, 60,		// 119 - 'w'
  4, 108, 16, 16, 108,		// 120 - 'x'
  4, 28, 160, 160, 124,		// 121 - 'y'
  4, 100, 84, 84, 76,		// 122 - 'z'
  4, 8, 54, 65, 65,		// 123 - '{'
  1, 127,		// 124 - '|'
  4, 65, 65, 54, 8,		// 125 - '}'
  4, 2, 1, 2, 1,		// 126 - '~'
  5, 127, 65, 65, 65, 127,		// 127 - 'Hollow Block'
  5, 62, 85, 85, 85, 65,		// 128 - 'Euro symbol'
  5, 56, 68, 68, 56, 68,		// 129 - 'Alpha'
  5, 124, 42, 42, 62, 20,		// 130 - 'Beta'
  5, 126, 2, 2, 6, 6,		// 131 - 'Gamma'
  5, 2, 126, 2, 126, 2,		// 132 - 'Pi'
  5, 99, 85, 73, 65, 99,		// 133 - 'Sigma'
  5, 56, 68, 68, 60, 4,		// 134 - 'Theta'
  5, 64, 126, 32, 30, 32,		// 135 - 'mu'
  5, 6, 2, 126, 2, 2,		// 136 - 'Tau'
  8, 99, 19, 8, 100, 99, 0, 96, 96,		// 137 - 'Percent 00'
  5, 42, 42, 42, 42, 42,		// 138 - '3 Bar Equals'
  3, 81, 74, 68,		// 139 - '>='
  3, 68, 74, 81,		// 140 - '<='
  5, 0, 0, 255, 1, 3,		// 141 - 'Top of Integral'
  3, 224, 128, 255,		// 142 - 'Bot of Integral'
  5, 54, 18, 54, 36, 54,		// 143 - 'Wavy ='
	6, 108, 124, 24, 48, 124, 108, 	// 144א
	6, 108, 108, 108, 124, 124, 96,	// 145ב
	5, 108, 108, 28, 124, 112,	// 146ג
	5, 12, 12, 124, 124, 12,	// 147ד
	5, 108, 108, 12, 124, 120, 	// 148ה
	3, 12, 124, 120,	// 149ו
	5, 12, 124, 120, 24, 48,	// 150ז
	5, 12, 124, 124, 12, 124,	// 151ח
	6, 124, 124, 64, 88, 76, 124,	// 152ט
	2, 12, 12, 	// 153י
	5, 12, 12, 12, 252, 248, 	// 154ך
	5, 108, 108, 108, 108, 120, 	// 155כ
	5, 7, 103, 100, 52, 28,	// 156ל
	6, 12, 124, 124, 76, 124, 120, 	// 157ם
	6, 116, 120, 12, 76, 124, 120, 	// 158מ
	3, 12, 252, 252,	// 159ן
	5, 96, 108, 108, 124, 120, 	// 160נ
	6, 12, 60, 124, 76, 124, 56,	// 161ס
	6, 96, 108, 124, 96, 124, 60,	// 162ע
	5, 60, 60, 12, 252, 248, 	// 163ף
	5, 92, 84, 68, 124, 120,	// 164פ
	5, 12, 252, 240, 12, 12,	// 165ץ
	6, 76, 92, 88, 112, 124, 108,	// 166צ
	5, 236, 236, 12, 60, 56, 	// 167ק
	5, 12, 12, 12, 124, 120,	// 168ר
	7, 60, 96, 108, 124, 96, 108, 60, 	// 169ש
	7, 76, 124, 124, 12, 12, 124, 120,	// 170ת
  5, 8, 20, 42, 20, 34,		// 171 - '« Left-pointing double angle quotation mark'
  4, 8, 8, 8, 24,		// 172 - '¬ Not sign'
  3, 8, 8, 8,		// 173 - ' Soft hyphen'
  7, 126, 129, 189, 149, 169, 129, 126,		// 174 - '® Registered sign'
  5, 1, 1, 1, 1, 1,		// 175 - '¯ macron'
  3, 2, 5, 2,		// 176 - '° Degree symbol'
  3, 36, 46, 36,		// 177 - '± Plus-minus sign'
  3, 25, 21, 18,		// 178 - '² Superscript two'
  3, 21, 21, 10,		// 179 - '³ Superscript three'
  2, 2, 1,		// 180 - '´ Acute accent'
  4, 248, 32, 64, 120,		// 181 - 'µ Micro sign'
  5, 6, 9, 127, 1, 127,		// 182 - 'Pilcrow sign'
  2, 24, 24,		// 183 - '· Middle dot'
  4, 0, 128, 160, 192,		// 184 - '¸ Cedilla'
  3, 18, 31, 16,		// 185 - '¹ Superscript one'
  3, 38, 41, 38,		// 186 - 'º Masculine ordinal indicator'
  5, 34, 20, 42, 20, 8,		// 187 - '» Right-pointing double angle quotation mark'
  8, 64, 47, 16, 8, 4, 30, 17, 124,		// 188 - '¼ Vulgar fraction one quarter'
  8, 64, 47, 16, 8, 4, 98, 85, 76,		// 189 - '½ Vulgar fraction one half'
  9, 21, 85, 63, 16, 8, 4, 30, 17, 124,		// 190 - '¾ Vulgar fraction three quarters'
  5, 48, 72, 72, 77, 64,		// 191 - '¿ Inverted Question Mark'
  5, 120, 21, 22, 20, 120,		// 192 - 'À Latin Capital Letter A with grave'
  5, 120, 20, 22, 21, 120,		// 193 - 'Á Latin Capital letter A with acute'
  5, 122, 21, 20, 21, 122,		// 194 - 'Â Latin Capital letter A with circumflex'
  5, 120, 22, 21, 22, 121,		// 195 - 'Ã Latin Capital letter A with tilde'
  5, 120, 21, 20, 21, 120,		// 196 - 'Ä Latin Capital letter A with diaeresis'
  5, 120, 20, 21, 20, 120,		// 197 - 'Å Latin Capital letter A with ring above'
  7, 126, 9, 9, 127, 73, 73, 65,		// 198 - 'Æ Latin Capital letter Æ'
  5, 158, 161, 97, 33, 33,		// 199 - 'Ç Latin Capital letter C with cedilla'
  5, 124, 84, 85, 70, 68,		// 200 - 'È Latin Capital letter E with grave'
  5, 124, 84, 86, 69, 68,		// 201 - 'É Latin Capital letter E with acute'
  5, 126, 85, 84, 69, 70,		// 202 - 'Ê Latin Capital letter E with circumflex'
  5, 124, 85, 84, 69, 68,		// 203 - 'Ë Latin Capital letter E with diaeresis'
  3, 69, 126, 68,		// 204 - 'Ì Latin Capital letter I with grave'
  3, 68, 126, 69,		// 205 - 'Í Latin Capital letter I with acute'
  3, 70, 125, 70,		// 206 - 'Î Latin Capital letter I with circumflex'
  3, 69, 124, 69,		// 207 - 'Ï Latin Capital letter I with diaeresis'
  5, 8, 127, 73, 65, 62,		// 208 - 'Ð Latin Capital letter Eth'
  5, 124, 10, 17, 34, 125,		// 209 - 'Ñ Latin Capital letter N with tilde'
  5, 56, 68, 69, 70, 56,		// 210 - 'Ò Latin Capital letter O with grave'
  5, 56, 68, 70, 69, 56,		// 211 - 'Ó Latin Capital letter O with acute'
  5, 58, 69, 68, 69, 58,		// 212 - 'Ô Latin Capital letter O with circumflex'
  5, 56, 70, 69, 70, 57,		// 213 - 'Õ Latin Capital letter O with tilde'
  5, 56, 69, 68, 69, 56,		// 214 - 'Ö Latin Capital letter O with diaeresis'
  0,		// 215 - '× Multiplication sign'
  5, 124, 98, 90, 70, 62,		// 216 - 'Ø Latin Capital letter O with stroke'
  5, 60, 64, 65, 66, 60,		// 217 - 'Ù Latin Capital letter U with grave'
  5, 60, 64, 66, 65, 60,		// 218 - 'Ú Latin Capital letter U with acute'
  5, 60, 66, 65, 66, 60,		// 219 - 'Û Latin Capital Letter U with circumflex'
  5, 60, 65, 64, 65, 60,		// 220 - 'Ü Latin Capital Letter U with diaeresis'
  5, 2, 4, 122, 5, 2,		// 221 - 'Ý Latin Capital Letter Y with acute'
  4, 63, 18, 18, 12,		// 222 - 'Þ Latin Capital Letter Thorn'
  5, 126, 73, 73, 78, 48,		// 223 - 'ß Latin Small Letter sharp S'
  4, 56, 69, 70, 124,		// 224 - 'à Latin Small Letter A with grave'
  4, 56, 68, 70, 125,		// 225 - 'á Latin Small Letter A with acute'
  4, 56, 70, 69, 126,		// 226 - 'â Latin Small Letter A with circumflex'
  4, 58, 69, 70, 125,		// 227 - 'ã Latin Small Letter A with tilde'
  4, 56, 69, 68, 125,		// 228 - 'ä Latin Small Letter A with diaeresis'
  4, 48, 74, 77, 122,		// 229 - 'å Latin Small Letter A with ring above'
  7, 32, 84, 84, 56, 84, 84, 88,		// 230 - 'æ Latin Small Letter Æ'
  4, 156, 162, 98, 34,		// 231 - 'ç Latin Small Letter C with cedilla'
  4, 56, 85, 86, 88,		// 232 - 'è Latin Small Letter E with grave'
  4, 56, 84, 86, 89,		// 233 - 'é Latin Small Letter E with acute'
  4, 56, 86, 85, 90,		// 234 - 'ê Latin Small Letter E with circumflex'
  4, 56, 85, 84, 89,		// 235 - 'ë Latin Small Letter E with diaeresis'
  2, 1, 122,		// 236 - 'ì Latin Small Letter I with grave'
  2, 122, 1,		// 237 - 'í Latin Small Letter I with acute'
  3, 2, 121, 2,		// 238 - 'î Latin Small Letter I with circumflex'
  3, 2, 120, 2,		// 239 - 'ï Latin Small Letter I with diaeresis'
  4, 48, 75, 75, 60,		// 240 - 'ð Latin Small Letter Eth'
  4, 122, 9, 10, 113,		// 241 - 'ñ Latin Small Letter N with tilde'
  4, 48, 73, 74, 48,		// 242 - 'ò Latin Small Letter O with grave'
  4, 48, 72, 74, 49,		// 243 - 'ó Latin Small Letter O with acute'
  4, 48, 74, 73, 50,		// 244 - 'ô Latin Small Letter O with circumflex'
  4, 50, 73, 74, 49,		// 245 - 'õ Latin Small Letter O with tilde'
  4, 57, 68, 68, 57,		// 246 - 'ö Latin Small Letter O with diaeresis'
  5, 8, 8, 42, 8, 8,		// 247 - '÷ Division sign'
  4, 56, 84, 76, 56,		// 248 - 'ø Latin Small Letter O with stroke'
  4, 56, 65, 66, 120,		// 249 - 'ù Latin Small Letter U with grave'
  4, 56, 64, 66, 121,		// 250 - 'ú Latin Small Letter U with acute'
  4, 56, 66, 65, 122,		// 251 - 'û Latin Small Letter U with circumflex'
  4, 58, 64, 64, 122,		// 252 - 'ü Latin Small Letter U with diaeresis'
  4, 24, 160, 162, 121,		// 253 - 'ý Latin Small Letter Y with acute'
  4, 252, 40, 40, 16,		// 254 - 'þ Latin Small Letter Thorn'
  4, 26, 160, 160, 122,		// 255 - 'ÿ Latin Small Letter Y with diaeresis'
#else
  'F', 1, 0, 255, 8,
  0,  // 0 - 'Empty Cell'
  5, 0x3e, 0x5b, 0x4f, 0x5b, 0x3e,  // 1 - 'Sad Smiley'
  5, 0x3e, 0x6b, 0x4f, 0x6b, 0x3e,  // 2 - 'Happy Smiley'
  5, 0x1c, 0x3e, 0x7c, 0x3e, 0x1c,  // 3 - 'Heart'
  5, 0x18, 0x3c, 0x7e, 0x3c, 0x18,  // 4 - 'Diamond'
  5, 0x1c, 0x57, 0x7d, 0x57, 0x1c,  // 5 - 'Clubs'
  5, 0x1c, 0x5e, 0x7f, 0x5e, 0x1c,  // 6 - 'Spades'
  4, 0x00, 0x18, 0x3c, 0x18,  // 7 - 'Bullet Point'
  5, 0xff, 0xe7, 0xc3, 0xe7, 0xff,  // 8 - 'Rev Bullet Point'
  4, 0x00, 0x18, 0x24, 0x18,  // 9 - 'Hollow Bullet Point'
  5, 0xff, 0xe7, 0xdb, 0xe7, 0xff,  // 10 - 'Rev Hollow BP'
  5, 0x30, 0x48, 0x3a, 0x06, 0x0e,  // 11 - 'Male'
  5, 0x26, 0x29, 0x79, 0x29, 0x26,  // 12 - 'Female'
  5, 0x40, 0x7f, 0x05, 0x05, 0x07,  // 13 - 'Music Note 1'
  5, 0x40, 0x7f, 0x05, 0x25, 0x3f,  // 14 - 'Music Note 2'
  5, 0x5a, 0x3c, 0xe7, 0x3c, 0x5a,  // 15 - 'Snowflake'
  5, 0x7f, 0x3e, 0x1c, 0x1c, 0x08,  // 16 - 'Right Pointer'
  5, 0x08, 0x1c, 0x1c, 0x3e, 0x7f,  // 17 - 'Left Pointer'
  5, 0x14, 0x22, 0x7f, 0x22, 0x14,  // 18 - 'UpDown Arrows'
  5, 0x5f, 0x5f, 0x00, 0x5f, 0x5f,  // 19 - 'Double Exclamation'
  5, 0x06, 0x09, 0x7f, 0x01, 0x7f,  // 20 - 'Paragraph Mark'
  4, 0x66, 0x89, 0x95, 0x6a,  // 21 - 'Section Mark'
  5, 0x60, 0x60, 0x60, 0x60, 0x60,  // 22 - 'Double Underline'
  5, 0x94, 0xa2, 0xff, 0xa2, 0x94,  // 23 - 'UpDown Underlined'
  5, 0x08, 0x04, 0x7e, 0x04, 0x08,  // 24 - 'Up Arrow'
  5, 0x10, 0x20, 0x7e, 0x20, 0x10,  // 25 - 'Down Arrow'
  5, 0x08, 0x08, 0x2a, 0x1c, 0x08,  // 26 - 'Right Arrow'
  5, 0x08, 0x1c, 0x2a, 0x08, 0x08,  // 27 - 'Left Arrow'
  5, 0x1e, 0x10, 0x10, 0x10, 0x10,  // 28 - 'Angled'
  5, 0x0c, 0x1e, 0x0c, 0x1e, 0x0c,  // 29 - 'Squashed #'
  5, 0x30, 0x38, 0x3e, 0x38, 0x30,  // 30 - 'Up Pointer'
  5, 0x06, 0x0e, 0x3e, 0x0e, 0x06,  // 31 - 'Down Pointer'
  2, 0x00, 0x00,  // 32 - 'Space'
  1, 0x5f,  // 33 - '!'
  3, 0x07, 0x00, 0x07,  // 34 - '""'
  5, 0x14, 0x7f, 0x14, 0x7f, 0x14,  // 35 - '#'
  5, 0x24, 0x2a, 0x7f, 0x2a, 0x12,  // 36 - '$'
  5, 0x23, 0x13, 0x08, 0x64, 0x62,  // 37 - '%'
  5, 0x36, 0x49, 0x56, 0x20, 0x50,  // 38 - '&'
  3, 0x08, 0x07, 0x03,  // 39 - '''
  3, 0x1c, 0x22, 0x41,  // 40 - '('
  3, 0x41, 0x22, 0x1c,  // 41 - ')'
  5, 0x2a, 0x1c, 0x7f, 0x1c, 0x2a,  // 42 - '*'
  5, 0x08, 0x08, 0x3e, 0x08, 0x08,  // 43 - '+'
  3, 0x80, 0x70, 0x30,  // 44 - ','
  5, 0x08, 0x08, 0x08, 0x08, 0x08,  // 45 - '-'
  2, 0x60, 0x60,  // 46 - '.'
  5, 0x20, 0x10, 0x08, 0x04, 0x02,  // 47 - '/'
  5, 0x3e, 0x51, 0x49, 0x45, 0x3e,  // 48 - '0'
  3, 0x42, 0x7f, 0x40,  // 49 - '1'
  5, 0x72, 0x49, 0x49, 0x49, 0x46,  // 50 - '2'
  5, 0x21, 0x41, 0x49, 0x4d, 0x33,  // 51 - '3'
  5, 0x18, 0x14, 0x12, 0x7f, 0x10,  // 52 - '4'
  5, 0x27, 0x45, 0x45, 0x45, 0x39,  // 53 - '5'
  5, 0x3c, 0x4a, 0x49, 0x49, 0x31,  // 54 - '6'
  5, 0x41, 0x21, 0x11, 0x09, 0x07,  // 55 - '7'
  5, 0x36, 0x49, 0x49, 0x49, 0x36,  // 56 - '8'
  5, 0x46, 0x49, 0x49, 0x29, 0x1e,  // 57 - '9'
  1, 0x14,  // 58 - ':'
  2, 0x80, 0x68,  // 59 - ';'
  4, 0x08, 0x14, 0x22, 0x41,  // 60 - '<'
  5, 0x14, 0x14, 0x14, 0x14, 0x14,  // 61 - '='
  4, 0x41, 0x22, 0x14, 0x08,  // 62 - '>'
  5, 0x02, 0x01, 0x59, 0x09, 0x06,  // 63 - '?'
  5, 0x3e, 0x41, 0x5d, 0x59, 0x4e,  // 64 - '@'
  5, 0x7c, 0x12, 0x11, 0x12, 0x7c,  // 65 - 'A'
  5, 0x7f, 0x49, 0x49, 0x49, 0x36,  // 66 - 'B'
  5, 0x3e, 0x41, 0x41, 0x41, 0x22,  // 67 - 'C'
  5, 0x7f, 0x41, 0x41, 0x41, 0x3e,  // 68 - 'D'
  5, 0x7f, 0x49, 0x49, 0x49, 0x41,  // 69 - 'E'
  5, 0x7f, 0x09, 0x09, 0x09, 0x01,  // 70 - 'F'
  5, 0x3e, 0x41, 0x41, 0x51, 0x73,  // 71 - 'G'
  5, 0x7f, 0x08, 0x08, 0x08, 0x7f,  // 72 - 'H'
  3, 0x41, 0x7f, 0x41,  // 73 - 'I'
  5, 0x20, 0x40, 0x41, 0x3f, 0x01,  // 74 - 'J'
  5, 0x7f, 0x08, 0x14, 0x22, 0x41,  // 75 - 'K'
  5, 0x7f, 0x40, 0x40, 0x40, 0x40,  // 76 - 'L'
  5, 0x7f, 0x02, 0x1c, 0x02, 0x7f,  // 77 - 'M'
  5, 0x7f, 0x04, 0x08, 0x10, 0x7f,  // 78 - 'N'
  5, 0x3e, 0x41, 0x41, 0x41, 0x3e,  // 79 - 'O'
  5, 0x7f, 0x09, 0x09, 0x09, 0x06,  // 80 - 'P'
  5, 0x3e, 0x41, 0x51, 0x21, 0x5e,  // 81 - 'Q'
  5, 0x7f, 0x09, 0x19, 0x29, 0x46,  // 82 - 'R'
  5, 0x26, 0x49, 0x49, 0x49, 0x32,  // 83 - 'S'
  5, 0x03, 0x01, 0x7f, 0x01, 0x03,  // 84 - 'T'
  5, 0x3f, 0x40, 0x40, 0x40, 0x3f,  // 85 - 'U'
  5, 0x1f, 0x20, 0x40, 0x20, 0x1f,  // 86 - 'V'
  5, 0x3f, 0x40, 0x38, 0x40, 0x3f,  // 87 - 'W'
  5, 0x63, 0x14, 0x08, 0x14, 0x63,  // 88 - 'X'
  5, 0x03, 0x04, 0x78, 0x04, 0x03,  // 89 - 'Y'
  5, 0x61, 0x59, 0x49, 0x4d, 0x43,  // 90 - 'Z'
  3, 0x7f, 0x41, 0x41,  // 91 - '['
  5, 0x02, 0x04, 0x08, 0x10, 0x20,  // 92 - '\'
  3, 0x41, 0x41, 0x7f,  // 93 - ']'
  5, 0x04, 0x02, 0x01, 0x02, 0x04,  // 94 - '^'
  5, 0x40, 0x40, 0x40, 0x40, 0x40,  // 95 - '_'
  3, 0x03, 0x07, 0x08,  // 96 - '`'
  5, 0x20, 0x54, 0x54, 0x78, 0x40,  // 97 - 'a'
  5, 0x7f, 0x28, 0x44, 0x44, 0x38,  // 98 - 'b'
  5, 0x38, 0x44, 0x44, 0x44, 0x28,  // 99 - 'c'
  5, 0x38, 0x44, 0x44, 0x28, 0x7f,  // 100 - 'd'
  5, 0x38, 0x54, 0x54, 0x54, 0x18,  // 101 - 'e'
  4, 0x08, 0x7e, 0x09, 0x02,  // 102 - 'f'
  5, 0x18, 0xa4, 0xa4, 0x9c, 0x78,  // 103 - 'g'
  5, 0x7f, 0x08, 0x04, 0x04, 0x78,  // 104 - 'h'
  3, 0x44, 0x7d, 0x40,  // 105 - 'i'
  4, 0x40, 0x80, 0x80, 0x7a,  // 106 - 'j'
  4, 0x7f, 0x10, 0x28, 0x44,  // 107 - 'k'
  3, 0x41, 0x7f, 0x40,  // 108 - 'l'
  5, 0x7c, 0x04, 0x78, 0x04, 0x78,  // 109 - 'm'
  5, 0x7c, 0x08, 0x04, 0x04, 0x78,  // 110 - 'n'
  5, 0x38, 0x44, 0x44, 0x44, 0x38,  // 111 - 'o'
  5, 0xfc, 0x18, 0x24, 0x24, 0x18,  // 112 - 'p'
  5, 0x18, 0x24, 0x24, 0x18, 0xfc,  // 113 - 'q'
  5, 0x7c, 0x08, 0x04, 0x04, 0x08,  // 114 - 'r'
  5, 0x48, 0x54, 0x54, 0x54, 0x24,  // 115 - 's'
  4, 0x04, 0x3f, 0x44, 0x24,  // 116 - 't'
  5, 0x3c, 0x40, 0x40, 0x20, 0x7c,  // 117 - 'u'
  5, 0x1c, 0x20, 0x40, 0x20, 0x1c,  // 118 - 'v'
  5, 0x3c, 0x40, 0x30, 0x40, 0x3c,  // 119 - 'w'
  5, 0x44, 0x28, 0x10, 0x28, 0x44,  // 120 - 'x'
  5, 0x4c, 0x90, 0x90, 0x90, 0x7c,  // 121 - 'y'
  5, 0x44, 0x64, 0x54, 0x4c, 0x44,  // 122 - 'z'
  3, 0x08, 0x36, 0x41,  // 123 - '{'
  1, 0x77,  // 124 - '|'
  3, 0x41, 0x36, 0x08,  // 125 - '}'
  5, 0x02, 0x01, 0x02, 0x04, 0x02,  // 126 - '~'
  5, 0x3c, 0x26, 0x23, 0x26, 0x3c,  // 127 - 'Hollow Up Arrow'
  5, 0x1e, 0xa1, 0xa1, 0x61, 0x12,  // 128 - 'C sedilla'
  5, 0x38, 0x42, 0x40, 0x22, 0x78,  // 129 - 'u umlaut'
  5, 0x38, 0x54, 0x54, 0x55, 0x59,  // 130 - 'e acute'
  5, 0x21, 0x55, 0x55, 0x79, 0x41,  // 131 - 'a accent'
  5, 0x21, 0x54, 0x54, 0x78, 0x41,  // 132 - 'a umlaut'
  5, 0x21, 0x55, 0x54, 0x78, 0x40,  // 133 - 'a grave'
  5, 0x20, 0x54, 0x55, 0x79, 0x40,  // 134 - 'a acute'
  5, 0x18, 0x3c, 0xa4, 0xe4, 0x24,  // 135 - 'c sedilla'
  5, 0x39, 0x55, 0x55, 0x55, 0x59,  // 136 - 'e accent'
  5, 0x38, 0x55, 0x54, 0x55, 0x58,  // 137 - 'e umlaut'
  5, 0x39, 0x55, 0x54, 0x54, 0x58,  // 138 - 'e grave'
  3, 0x45, 0x7c, 0x41,  // 139 - 'i umlaut'
  4, 0x02, 0x45, 0x7d, 0x42,  // 140 - 'i hat'
  4, 0x01, 0x45, 0x7c, 0x40,  // 141 - 'i grave'
  5, 0xf0, 0x29, 0x24, 0x29, 0xf0,  // 142 - 'A umlaut'
  5, 0xf0, 0x28, 0x25, 0x28, 0xf0,  // 143 - 'A dot'
  4, 0x7c, 0x54, 0x55, 0x45,  // 144 - 'E grave'
  7, 0x20, 0x54, 0x54, 0x7c, 0x54, 0x54, 0x08,  // 145 - 'ae'
  6, 0x7c, 0x0a, 0x09, 0x7f, 0x49, 0x49,  // 146 - 'AE'
  5, 0x32, 0x49, 0x49, 0x49, 0x32,  // 147 - 'o hat'
  5, 0x30, 0x4a, 0x48, 0x4a, 0x30,  // 148 - 'o umlaut'
  5, 0x32, 0x4a, 0x48, 0x48, 0x30,  // 149 - 'o grave'
  5, 0x3a, 0x41, 0x41, 0x21, 0x7a,  // 150 - 'u hat'
  5, 0x3a, 0x42, 0x40, 0x20, 0x78,  // 151 - 'u grave'
  4, 0x9d, 0xa0, 0xa0, 0x7d,  // 152 - 'y umlaut'
  5, 0x38, 0x45, 0x44, 0x45, 0x38,  // 153 - 'O umlaut'
  5, 0x3c, 0x41, 0x40, 0x41, 0x3c,  // 154 - 'U umlaut'
  5, 0x3c, 0x24, 0xff, 0x24, 0x24,  // 155 - 'Cents'
  5, 0x48, 0x7e, 0x49, 0x43, 0x66,  // 156 - 'Pounds'
  5, 0x2b, 0x2f, 0xfc, 0x2f, 0x2b,  // 157 - 'Yen'
  5, 0xff, 0x09, 0x29, 0xf6, 0x20,  // 158 - 'R +'
  5, 0xc0, 0x88, 0x7e, 0x09, 0x03,  // 159 - 'f notation'
  5, 0x20, 0x54, 0x54, 0x79, 0x41,  // 160 - 'a acute'
  3, 0x44, 0x7d, 0x41,  // 161 - 'i acute'
  5, 0x30, 0x48, 0x48, 0x4a, 0x32,  // 162 - 'o acute'
  5, 0x38, 0x40, 0x40, 0x22, 0x7a,  // 163 - 'u acute'
  4, 0x7a, 0x0a, 0x0a, 0x72,  // 164 - 'n accent'
  5, 0x7d, 0x0d, 0x19, 0x31, 0x7d,  // 165 - 'N accent'
  5, 0x26, 0x29, 0x29, 0x2f, 0x28,  // 166
  5, 0x26, 0x29, 0x29, 0x29, 0x26,  // 167
  5, 0x30, 0x48, 0x4d, 0x40, 0x20,  // 168 - 'Inverted ?'
  5, 0x38, 0x08, 0x08, 0x08, 0x08,  // 169 - 'LH top corner'
  5, 0x08, 0x08, 0x08, 0x08, 0x38,  // 170 - 'RH top corner'
  5, 0x2f, 0x10, 0xc8, 0xac, 0xba,  // 171 - '1/2'
  5, 0x2f, 0x10, 0x28, 0x34, 0xfa,  // 172 - '1/4'
  1, 0x7b,  // 173 - '| split'
  5, 0x08, 0x14, 0x2a, 0x14, 0x22,  // 174 - '<<'
  5, 0x22, 0x14, 0x2a, 0x14, 0x08,  // 175 - '>>'
  5, 0xaa, 0x00, 0x55, 0x00, 0xaa,  // 176 - '30% shading'
  5, 0xaa, 0x55, 0xaa, 0x55, 0xaa,  // 177 - '50% shading'
  5, 0x00, 0x00, 0x00, 0x00, 0xff,  // 178 - 'Right side'
  5, 0x10, 0x10, 0x10, 0x10, 0xff,  // 179 - 'Right T'
  5, 0x14, 0x14, 0x14, 0x14, 0xff,  // 180 - 'Right T double H'
  5, 0x10, 0x10, 0xff, 0x00, 0xff,  // 181 - 'Right T double V'
  5, 0x10, 0x10, 0xf0, 0x10, 0xf0,  // 182 - 'Top Right double V'
  5, 0x14, 0x14, 0x14, 0x14, 0xfc,  // 183 - 'Top Right double H'
  5, 0x14, 0x14, 0xf7, 0x00, 0xff,  // 184 - 'Right T double all'
  5, 0x00, 0x00, 0xff, 0x00, 0xff,  // 185 - 'Right side double'
  5, 0x14, 0x14, 0xf4, 0x04, 0xfc,  // 186 - 'Top Right double'
  5, 0x14, 0x14, 0x17, 0x10, 0x1f,  // 187 - 'Bot Right double'
  5, 0x10, 0x10, 0x1f, 0x10, 0x1f,  // 188 - 'Bot Right double V'
  5, 0x14, 0x14, 0x14, 0x14, 0x1f,  // 189 - 'Bot Right double H'
  5, 0x10, 0x10, 0x10, 0x10, 0xf0,  // 190 - 'Top Right'
  5, 0x00, 0x00, 0x00, 0x1f, 0x10,  // 191 - 'Bot Left'
  5, 0x10, 0x10, 0x10, 0x1f, 0x10,  // 192 - 'Bot T'
  5, 0x10, 0x10, 0x10, 0xf0, 0x10,  // 193 - 'Top T'
  5, 0x00, 0x00, 0x00, 0xff, 0x10,  // 194 - 'Left T'
  5, 0x10, 0x10, 0x10, 0x10, 0x10,  // 195 - 'Top side'
  5, 0x10, 0x10, 0x10, 0xff, 0x10,  // 196 - 'Center +'
  5, 0x00, 0x00, 0x00, 0xff, 0x14,  // 197 - 'Left side double H'
  5, 0x00, 0x00, 0xff, 0x00, 0xff,  // 198 - 'Left side double'
  5, 0x00, 0x00, 0x1f, 0x10, 0x17,  // 199 - 'Bot Left double V'
  5, 0x00, 0x00, 0xfc, 0x04, 0xf4,  // 200 - 'Top Left double V'
  5, 0x14, 0x14, 0x17, 0x10, 0x17,  // 201 - 'Bot T double'
  5, 0x14, 0x14, 0xf4, 0x04, 0xf4,  // 202 - 'Top T double'
  5, 0x00, 0x00, 0xff, 0x00, 0xf7,  // 203 - 'Left Side double spl'
  5, 0x14, 0x14, 0x14, 0x14, 0x14,  // 204 - 'Center double'
  5, 0x14, 0x14, 0xf7, 0x00, 0xf7,  // 205 - 'Center + double'
  5, 0x14, 0x14, 0x14, 0x17, 0x14,  // 206 - 'Bot T double H'
  5, 0x10, 0x10, 0x1f, 0x10, 0x1f,  // 207 - 'Bot Right double V'
  5, 0x14, 0x14, 0x14, 0xf4, 0x14,  // 208 - 'Top T double H'
  5, 0x10, 0x10, 0xf0, 0x10, 0xf0,  // 209 - 'Top Right double V'
  5, 0x00, 0x00, 0x1f, 0x10, 0x1f,  // 210 - 'Bot Left double V'
  5, 0x00, 0x00, 0x00, 0x1f, 0x14,  // 211 - 'Bot Right double H'
  5, 0x00, 0x00, 0x00, 0xfc, 0x14,  // 212 - 'Top Right double H'
  5, 0x00, 0x00, 0xf0, 0x10, 0xf0,  // 213 - 'Top Right double V'
  5, 0x10, 0x10, 0xff, 0x10, 0xff,  // 214 - 'Center + double V'
  5, 0x14, 0x14, 0x14, 0xff, 0x14,  // 215 - 'Center + double H'
  5, 0x10, 0x10, 0x10, 0x10, 0x1f,  // 216 - 'Bot Right'
  5, 0x00, 0x00, 0x00, 0xf0, 0x10,  // 217 - 'Top Left'
  5, 0xff, 0xff, 0xff, 0xff, 0xff,  // 218 - 'Full Block'
  5, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0,  // 219 - 'Half Block Bottom'
  3, 0xff, 0xff, 0xff,  // 220 - 'Half Block LHS'
  5, 0x00, 0x00, 0x00, 0xff, 0xff,  // 221 - 'Half Block RHS'
  5, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f,  // 222 - 'Half Block Top'
  5, 0x38, 0x44, 0x44, 0x38, 0x44,  // 223 - 'Alpha'
  5, 0x7c, 0x2a, 0x2a, 0x3e, 0x14,  // 224 - 'Beta'
  5, 0x7e, 0x02, 0x02, 0x06, 0x06,  // 225 - 'Gamma'
  5, 0x02, 0x7e, 0x02, 0x7e, 0x02,  // 226 - 'Pi'
  5, 0x63, 0x55, 0x49, 0x41, 0x63,  // 227 - 'Sigma'
  5, 0x38, 0x44, 0x44, 0x3c, 0x04,  // 228 - 'Theta'
  5, 0x40, 0x7e, 0x20, 0x1e, 0x20,  // 229 - 'mu'
  5, 0x06, 0x02, 0x7e, 0x02, 0x02,  // 230 - 'Tau'
  5, 0x99, 0xa5, 0xe7, 0xa5, 0x99,  // 231
  5, 0x1c, 0x2a, 0x49, 0x2a, 0x1c,  // 232
  5, 0x4c, 0x72, 0x01, 0x72, 0x4c,  // 233
  5, 0x30, 0x4a, 0x4d, 0x4d, 0x30,  // 234
  5, 0x30, 0x48, 0x78, 0x48, 0x30,  // 235
  5, 0xbc, 0x62, 0x5a, 0x46, 0x3d,  // 236 - 'Zero Slashed'
  4, 0x3e, 0x49, 0x49, 0x49,  // 237
  5, 0x7e, 0x01, 0x01, 0x01, 0x7e,  // 238
  5, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a,  // 239 - '3 Bar Equals'
  5, 0x44, 0x44, 0x5f, 0x44, 0x44,  // 240 - '+/-'
  5, 0x40, 0x51, 0x4a, 0x44, 0x40,  // 241 - '>='
  5, 0x40, 0x44, 0x4a, 0x51, 0x40,  // 242 - '<='
  5, 0x00, 0x00, 0xff, 0x01, 0x03,  // 243 - 'Top of Integral'
  3, 0xe0, 0x80, 0xff,  // 244 - 'Bot of Integral'
  5, 0x08, 0x08, 0x6b, 0x6b, 0x08,  // 245 - 'Divide'
  5, 0x36, 0x12, 0x36, 0x24, 0x36,  // 246 - 'Wavy ='
  5, 0x06, 0x0f, 0x09, 0x0f, 0x06,  // 247 - 'Degree'
  4, 0x00, 0x00, 0x18, 0x18,  // 248 - 'Math Product'
  4, 0x00, 0x00, 0x10, 0x10,  // 249 - 'Short Dash'
  5, 0x30, 0x40, 0xff, 0x01, 0x01,  // 250 - 'Square Root'
  5, 0x00, 0x1f, 0x01, 0x01, 0x1e,  // 251 - 'Superscript n'
  5, 0x00, 0x19, 0x1d, 0x17, 0x12,  // 252 - 'Superscript 2'
  5, 0x00, 0x3c, 0x3c, 0x3c, 0x3c,  // 253 - 'Centered Square'
  5, 0xff, 0x81, 0x81, 0x81, 0xff,  // 254 - 'Full Frame'
  5, 0xff, 0xff, 0xff, 0xff, 0xff,  // 255 - 'Full Block'
#endif
};

#endif //USE_LOCAL_FONT

"
cfUVKYMP,snowies snowybot from god,coinwalk,JavaScript,Sunday 28th of January 2024 09:54:17 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var divideby = 240;
var bolux = 24;
var base = Number((oldestbal/divideby).toFixed(8));
var jove = parseFloat(document.getElementById('pct_balance').value);
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 6.9;
var downer = 2.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var shocking = ((Math.floor(oldestbal/tens))*tens);
var troll = 1;


function get(){
bellance = document.getElementById('pct_balance').value;
beatle = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var good = ((bellance-jove).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if ((bellance>=(shocking+(base*40)))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor(bellance/tens))*tens);
	shocking = ((Math.floor(bellance/tens))*tens);
}
if (((oldestbal-(base*bolux))-(bellance-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor(bellance/tens))*tens);
	shocking = ((Math.floor(bellance/tens))*tens);
}
if (bellance<=(oldestbal-(base*bolux))){
    oldestbal = parseFloat(bellance);
    botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor(bellance/tens))*tens);
	shocking = ((Math.floor(bellance/tens))*tens);
}
if (bellance>=(jove*24)) {
	console.log(""winner winner chicken dinner"");
	return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 1);
}
get();
"
S4iTWniY,parola.ino,Shaniyakov,Arduino,Sunday 28th of January 2024 09:52:35 AM CDT,"// Use the Parola library to scroll text on the display
//
// Demonstrates the use of the scrolling function to display text received
// from the serial interface
//
// User can enter text on the serial monitor and this will display as a
// scrolling message on the display.
// Speed for the display is controlled by a pot on SPEED_IN analog in.
// Scrolling direction is controlled by a switch on DIRECTION_SET digital in.
// Invert ON/OFF is set by a switch on INVERT_SET digital in.
//
// UISwitch library can be found at https://github.com/MajicDesigns/MD_UISwitch
// MD_MAX72XX library can be found at https://github.com/MajicDesigns/MD_MAX72XX
//
 
#include <MD_Parola.h>
#include <MD_MAX72xx.h>
#include <SPI.h>
 
// set to 1 if we are implementing the user interface pot, switch, etc
#define USE_UI_CONTROL 0
 
#if USE_UI_CONTROL
#include <MD_UISwitch.h>
#endif
 
// Turn on debug statements to the serial output
#define DEBUG 0
 
#if DEBUG
#define PRINT(s, x) { Serial.print(F(s)); Serial.print(x); }
#define PRINTS(x) Serial.print(F(x))
#define PRINTX(x) Serial.println(x, HEX)
#else
#define PRINT(s, x)
#define PRINTS(x)
#define PRINTX(x)
#endif
 
// Define the number of devices we have in the chain and the hardware interface
// NOTE: These pin numbers will probably not work with your hardware and may
// need to be adapted
#define HARDWARE_TYPE MD_MAX72XX::FC16_HW
#define MAX_DEVICES 7
#define CLK_PIN   13
#define DATA_PIN  11
#define CS_PIN    10
 
// HARDWARE SPI
MD_Parola P = MD_Parola(HARDWARE_TYPE, CS_PIN, MAX_DEVICES);
// SOFTWARE SPI
//MD_Parola P = MD_Parola(HARDWARE_TYPE, DATA_PIN, CLK_PIN, CS_PIN, MAX_DEVICES);
 
// Scrolling parameters
#if USE_UI_CONTROL
const uint8_t SPEED_IN = A5;
const uint8_t DIRECTION_SET = 8;  // change the effect
const uint8_t INVERT_SET = 9;     // change the invert
 
const uint8_t SPEED_DEADBAND = 5;
#endif // USE_UI_CONTROL
 
uint8_t scrollSpeed = 50;    // default frame delay value
textEffect_t scrollEffect = PA_SCROLL_RIGHT;
textPosition_t scrollAlign = PA_LEFT;
uint16_t scrollPause = 1; // in milliseconds
 
// Global message buffers shared by Serial and Scrolling functions
#define BUF_SIZE 75
char curMessage[BUF_SIZE] = { """" };
char newMessage[BUF_SIZE] = { ""typing..."" };
bool newMessageAvailable = true;
 
#if USE_UI_CONTROL
 
MD_UISwitch_Digital uiDirection(DIRECTION_SET);
MD_UISwitch_Digital uiInvert(INVERT_SET);
 
void doUI(void)
{
  // set the speed if it has changed
  {
    int16_t speed = map(analogRead(SPEED_IN), 0, 1023, 10, 150);
 
    if ((speed >= ((int16_t)P.getSpeed() + SPEED_DEADBAND)) ||
      (speed <= ((int16_t)P.getSpeed() - SPEED_DEADBAND)))
    {
      P.setSpeed(speed);
      scrollSpeed = speed;
      PRINT(""\nChanged speed to "", P.getSpeed());
    }
  }
 
  if (uiDirection.read() == MD_UISwitch::KEY_PRESS) // SCROLL DIRECTION
  {
    PRINTS(""\nChanging scroll direction"");
    scrollEffect = (scrollEffect == PA_SCROLL_LEFT ? PA_SCROLL_RIGHT : PA_SCROLL_LEFT);
    P.setTextEffect(scrollEffect, scrollEffect);
    P.displayClear();
    P.displayReset();
  }
 
  if (uiInvert.read() == MD_UISwitch::KEY_PRESS)  // INVERT MODE
  {
    PRINTS(""\nChanging invert mode"");
    P.setInvert(!P.getInvert());
  }
}
#endif // USE_UI_CONTROL
 
      char* reverse(char *str)
      {
        size_t len = strlen(str);
        size_t i=0;
        while (len > i)
        {char tmp = str[--len];
        str[len] = str[i];
        str[i++] = tmp;
        }
        return str;
      }
     
void readSerial(void)
{
  static char *cp = newMessage;
 
  while (Serial.available())
  {
    *cp = (char)Serial.read();
    if ((*cp == '\n') || (cp - newMessage >= BUF_SIZE-2)) // end of message character or full buffer
    {
      *cp = '\0'; // end the string
      // restart the index for next filling spree and flag we have a message waiting
      cp = newMessage;
      newMessageAvailable = true;
 
      reverse(cp);
    }
    else  // move char pointer to next position
      cp++;
  }
}
 
void setup()
{
  Serial.begin(9600);
  Serial.print(""\n[Parola Scrolling Display]\nType a message for the scrolling display\nEnd message line with a newline"");
 
#if USE_UI_CONTROL
  uiDirection.begin();
  uiInvert.begin();
  pinMode(SPEED_IN, INPUT);
 
  doUI();
#endif // USE_UI_CONTROL
 
  P.begin();
  P.displayText(curMessage, scrollAlign, scrollSpeed, scrollPause, scrollEffect, scrollEffect);
}
 
void loop()
{
#if USE_UI_CONTROL
  doUI();
#endif // USE_UI_CONTROL
 
  if (P.displayAnimate())
  {
    if (newMessageAvailable)
    {
      strcpy(curMessage, newMessage);
      newMessageAvailable = false;
    }
    P.displayReset();
  }
  readSerial();
}"
PGVHnWqs,c#_xml_to_treeview,kijato,C#,Sunday 28th of January 2024 09:51:18 AM CDT,"using System;
using System.IO;
using System.Windows.Forms;
using System.Drawing;
using System.Xml;


namespace XmlToTreeview
{
    public class Form1 : Form
    {
		
		TreeView treeView1 = new TreeView();
        Boolean expanded = true;

        public static void Main(string[] args)
        {
            try
            {
                Application.Run(new Form1());
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }

        }

        /*
		https://ourcodeworld.com/articles/read/913/how-to-render-a-xml-file-string-into-a-treeview-component-in-winforms-with-csharp
        https://stackoverflow.com/questions/8503521/populating-treeview-from-xml
        https://stackoverflow.com/questions/28491166/parse-xml-to-treeview-list
        http://www.thescarms.com/dotnet/XMLTreeview.aspx
        */

        public Form1()
        {
 			Size = new Size(300,600);
			
			Controls.Add(treeView1);
			treeView1.Dock = DockStyle.Fill;
			treeView1.NodeMouseDoubleClick += new TreeNodeMouseClickEventHandler(TreeView1NodeMouseDoubleClick);

            XmlDocument xmldoc = new XmlDocument();
            XmlNode xmlnode ;
            FileStream fs = new FileStream(@""xml_to_treeview.xml"", FileMode.Open, FileAccess.Read);
            xmldoc.Load(fs);
            xmlnode = xmldoc.ChildNodes[1];
            treeView1.Nodes.Clear();
            treeView1.Nodes.Add(new TreeNode(xmldoc.DocumentElement.Name));
            AddNode(xmlnode, treeView1.Nodes[treeView1.Nodes.Count-1]);

        }

        private void AddNode(XmlNode inXmlNode, TreeNode inTreeNode)
        {
            
            if (inXmlNode.HasChildNodes || inXmlNode.InnerText.Trim().Equals(""""))
            {

                foreach (XmlNode xxNode in inXmlNode.ChildNodes)
                {
                    inTreeNode.Nodes.Add(new TreeNode(xxNode.Name));
                    /*if (xxNode.Attributes != null)
                    {
                        foreach (XmlAttribute attrib in xxNode.Attributes)
                        {
                            inTreeNode.Nodes.Add(new TreeNode(""[ "" + attrib.Name + ""= "" + attrib.Value + "" ]""));
                        }
                    }*/
                    AddNode(xxNode, inTreeNode.Nodes[inTreeNode.Nodes.Count-1]);
                }

            }
            else
            {
                inTreeNode.Text = ""'""+inXmlNode.InnerText.ToString()+""'"";
            }
			
			if ( inXmlNode.Attributes != null )
			{
				foreach ( XmlAttribute attrib in inXmlNode.Attributes )
				{
					inTreeNode.Nodes.Add(new TreeNode(""[ ""+attrib.Name+""= ""+attrib.Value+"" ]""));
				}
			}
			
        }
		
		
		private void TreeView1NodeMouseDoubleClick(object sender, TreeNodeMouseClickEventArgs e)
		{
			treeView1.BeginUpdate();
            if (expanded)
            {
                treeView1.CollapseAll();
                expanded = false;
            }
            else
            {
                treeView1.ExpandAll();
                expanded = true;
            }
			treeView1.EndUpdate();
		}		
		
    }
}
"
f08vcmwq,for the hacker snowybot,coinwalk,JavaScript,Sunday 28th of January 2024 09:51:15 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var divideby = 240;
var bolux = 24;
var base = Number((oldestbal/divideby).toFixed(8));
var jove = parseFloat(document.getElementById('pct_balance').value);
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 6.9;
var downer = 2.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var shocking = ((Math.floor(oldestbal/tens))*tens);
var troll = 1;


function get(){
bellance = document.getElementById('pct_balance').value;
beatle = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var good = ((bellance-jove).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if ((bellance>=(shocking+(base*40)))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	shocking = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (((oldestbal-(base*bolux))-(bellance-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	shocking = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (bellance<=(oldestbal-(base*bolux))){
    oldestbal = parseFloat(bellance);
    botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	shocking = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (bellance>=(jove*24)) {
	console.log(""winner winner chicken dinner"");
	return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 1);
}
get();
"
prBsfULC,monster snowybot,coinwalk,JavaScript,Sunday 28th of January 2024 09:43:15 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var divideby = 240;
var bolux = 24;
var base = Number((oldestbal/divideby).toFixed(8));
var jove = parseFloat(document.getElementById('pct_balance').value);
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 6.9;
var downer = 2.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var dude = ((Math.floor(oldestbal/tens))*tens);
var troll = 1;


function get(){
bellance = document.getElementById('pct_balance').value;
beatle = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var good = ((bellance-jove).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if ((bellance>=(dude+(tens*4)))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	dude = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (((oldestbal-(base*bolux))-(bellance-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	dude = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (bellance<=(oldestbal-(base*bolux))){
    oldestbal = parseFloat(bellance);
    botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	dude = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (bellance>=(jove*24)) {
	console.log(""winner winner chicken dinner"");
	return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 1);
}
get();
"
5KXEd969,for buck snowybot yo bro,coinwalk,JavaScript,Sunday 28th of January 2024 09:27:29 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var divideby = 1000;
var base = Number((oldestbal/divideby).toFixed(8));
var jove = parseFloat(document.getElementById('pct_balance').value);
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 6.9;
var downer = 2.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var dude = ((Math.floor(oldestbal/tens))*tens);
var troll = 1;


function get(){
bellance = document.getElementById('pct_balance').value;
beatle = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var good = ((bellance-jove).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if ((bellance>=(dude+(tens*4)))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	dude = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (((oldestbal-(base*14))-(bellance-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	dude = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (bellance<=(oldestbal-(base*14))){
    oldestbal = parseFloat(bellance);
    base = Number(((parseFloat(bellance))/divideby).toFixed(8));
	tens = (base*10);
	sevens = (base*6.9);
	eights = (base*7.9);
    botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	dude = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (bellance>=(jove*24)) {
	console.log(""winner winner chicken dinner"");
	return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 1);
}
get();
"
XggvUei7,Nettoyage Windows,ugo22g,Bash,Sunday 28th of January 2024 09:24:47 AM CDT,":: Ce script effectue diverses opérations de nettoyage sur le PC

:: Désactive l'hibernation (peut libérer de l'espace disque)
powercfg -h off

:: Vide le cache de Windows Update
del /q /s /f %windir%\SoftwareDistribution\Download

:: Nettoie les fichiers temporaires
del /q /s /f %temp%\*

:: Vide la corbeille
rd /s /q %systemdrive%\$Recycle.bin

:: Lance le nettoyage du disque
cleanmgr /d C /sagerun:1

:: Optimise les performances du disque
defrag C: /O

echo Nettoyage terminé. Appuyez sur une touche pour fermer cette fenêtre.
pause >nul"
nWGXeK5T,for the hacker snowybot,coinwalk,JavaScript,Sunday 28th of January 2024 09:21:41 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((oldestbal/114).toFixed(8));
var jove = parseFloat(document.getElementById('pct_balance').value);
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 6.9;
var downer = 2.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var bob = oldestbal;
var boobed = oldestbal;
var troll = 1;


function get(){
bellance = document.getElementById('pct_balance').value;
beatle = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var good = ((bellance-jove).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if ((bellance>=(bob+(tens*4)))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	bob = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (((oldestbal-(base*14))-(bellance-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	bob = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (bellance<=(oldestbal-(base*14))){
    oldestbal = parseFloat(bellance);
    base = Number(((parseFloat(bellance))/114).toFixed(8));
	tens = (base*10);
	sevens = (base*6.9);
	eights = (base*7.9);
    botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	bob = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (bellance>=(jove*24)) {
	console.log(""winner winner chicken dinner"");
	return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 1);
}
get();
"
8Hq9t700,Untitled,Suslick,C#,Sunday 28th of January 2024 09:21:37 AM CDT,"    class Program
    {
        static void Main(string[] args)
        {
            const string AddDossiser = ""1"";
            const string ShowAllDossiser = ""2"";
            const string RemoveDossiser = ""3"";
            const string Exit = ""4"";

            Dictionary<string, string> dossiers = new Dictionary<string, string>();
            bool isExit = true;

            while (isExit)
            {
                Console.ResetColor();
                Console.WriteLine(""1) Добавить досье \n"" +
                    ""2) Вывести все досье \n"" +
                    ""3) Удалить досье \n"" +
                    ""4) Выход"");
                string input = Console.ReadLine();
                Console.ForegroundColor = ConsoleColor.Green;

                switch (input)
                {
                    case AddDossiser:
                        AddDossier(dossiers);
                        break;

                    case ShowAllDossiser:
                        ShowAllDossier(dossiers);
                        break;

                    case RemoveDossiser:
                        RemoveDossier(dossiers);
                        break;

                    case Exit:
                        isExit = false;
                        break;

                    default:
                        Console.WriteLine(""Неверный код"");
                        break;
                }

                Console.WriteLine("""");
            }

            Console.ReadLine();
        }

        private static void AddDossier(Dictionary<string, string> dossiers)
        {
            Console.WriteLine(""Введите ФИО."");
            string fullname = Console.ReadLine();

            if (dossiers.Keys.Contains(fullname))
            {
                Console.WriteLine(""Такой сотрудник уже есть в базе"");
            }
            else
            {
                Console.WriteLine(""Введите Должность"");
                string post = Console.ReadLine();

                dossiers.Add(fullname, post);

                Console.WriteLine(""Успешно!"");
            }
        }

        private static void ShowAllDossier(Dictionary<string,string> dossiers)
        {
            foreach (var item in dossiers)
            {
                Console.WriteLine($""{item.Key} - {item.Value}"");
            }
        }

        private static void RemoveDossier(Dictionary<string, string> dossiers)
        {
            Console.WriteLine(""Введите ФИО сотрудника"");
            string input = Console.ReadLine();

            if (dossiers.Keys.Contains(input))
            {
                dossiers.Remove(input);

                Console.WriteLine(""Успешно!"");

                return;
            }

            Console.WriteLine(""Неверная ФИО"");
        }
    }"
20DXCgjd,java-multiset-implementation,i_love_rao_khushboo,Java,Sunday 28th of January 2024 09:11:31 AM CDT,"static class Multiset<E> {
        private NavigableMap<E, Integer> map;
        int totalElements;

        public Multiset() {
            map = new TreeMap<>();
            totalElements = 0;
        }

        public void add(E element) {
            map.put(element, map.getOrDefault(element, 0) + 1);
            totalElements += 1;
        }

        public void remove(E element) {
            int count = map.getOrDefault(element, 0);
            if(count > 0) {
                map.put(element, count - 1);
                count -= 1;
                if(count == 0) {
                    map.remove(element);
                }
                totalElements -= 1;
            }
        }

        public int count(E element) {
            return map.getOrDefault(element, 0);
        }

        public int size() {
            return totalElements;
        }

        public boolean isEmpty() {
            return map.isEmpty();
        }

        public E firstEntry() {
            Map.Entry<E, Integer> entry = map.firstEntry();
            return entry.getKey();
        }

        public E lastEntry() {
            Map.Entry<E, Integer> entry = map.lastEntry();
            return entry.getKey();
        }
    }"
uxRmQ6q6,2023 Fall CP3 企鵝國的游泳大賽 AC Code,penguin71630,C++,Sunday 28th of January 2024 09:07:35 AM CDT,"#include <bits/stdc++.h>

#define fastio ios_base::sync_with_stdio(false); cin.tie(0);
#define endl '\n'

#define mp(a, b) make_pair(a, b)
#define F first
#define S second

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;
const int maxc = 1e5 + 1;
const int maxn = 8e4 + 1;
const int sqmx = 285 + 1;


int n, q, B;
vector<int> a;
vector<pii> sa;
ll table[sqmx][sqmx];
ll cnt[sqmx][maxc], cal[sqmx][maxc];


inline ll qrycnt(int la, int ra, int lb, int rb) {
    if (la > ra || lb > rb) return 0;
    return cnt[ra][rb] - (
        (la ? cnt[la-1][rb] : 0) +
        (lb ? cnt[ra][lb-1] : 0) -
        (la && lb ? cnt[la-1][lb-1] : 0)
    );
}

inline ll qrycal(int la, int ra, int lb, int rb) {
    if (la > ra || lb > rb) return 0;
    return cal[ra][rb] - (
        (la ? cal[la-1][rb] : 0) +
        (lb ? cal[ra][lb-1] : 0) -
        (la && lb ? cal[la-1][lb-1] : 0)
    );
}


inline ll qryss(int li, int ri, int lj, int rj, bool skip =true) {

    // small block to small block

    int bi = li/B, bj = lj/B;
    int sti = bi*B, stj = bj*B;
    int endi = min((bi+1)*B, n), endj = min((bj+1)*B, n);  // [st, end)
    ll sum = 0, ret = 0;

    int nj = endj - stj;
    if (skip) {
        for (int j = stj; j < endj; j++) {
            if (lj <= sa[j].S && sa[j].S <= rj) continue;
            nj--;
        }
    }

    int cntj = 0;
    for (int i = sti, j = stj; i < endi; i++) {
        while (j < endj && sa[j].F <= sa[i].F) {
            if (lj <= sa[j].S && sa[j].S <= rj) sum += sa[j].F, cntj++;
            j++;
        }
        if (li <= sa[i].S && sa[i].S <= ri) ret += sum + (ll)sa[i].F * (nj - cntj);
    }

    return ret;
}

inline ll qrybb(int la, int ra, int lb, int rb) {

    // big block to big block

    if (la > ra || lb > rb) return 0;
    return table[ra][rb] - (
        (la ? table[la-1][rb] : 0) +
        (lb ? table[ra][lb-1] : 0) -
        (la && lb ? table[la-1][lb-1] : 0)
    );
}

inline ll qrysb(int ls, int rs, int lb, int rb) {
    
    // small block to big block

    if (lb > rb) return 0;
    
    ll ret = 0;
    for (int i = ls; i <= rs; i++) {
        ll x = a[i];
        ret += qrycal(lb, rb, 1, x);
        ret += x * qrycnt(lb, rb, x+1, maxc-1);
    }

    return ret;
}


void init() {
    cin >> n >> q;
    B = (int)sqrt(n);
    a.clear(); a.resize(n);
    for (auto& i : a) cin >> i;

    sa.clear(); sa.resize(n);
    for (int i = 0; i < n; i++) sa[i] = mp(a[i], i);
    for (int i = 0; i <= (n-1)/B; i++) {
        int li = i*B, ri = min((i+1)*B, n);
        sort(sa.begin() + li, sa.begin() + ri);
    }

    for (int i = 0; i <= (n-1)/B; i++) {
        for (int j = i; j <= (n-1)/B; j++) {
            int li = i*B, ri = min((i+1)*B-1, n-1);
            int lj = j*B, rj = min((j+1)*B-1, n-1);
            table[i][j] = table[j][i] = qryss(li, ri, lj, rj, false);
        }
    }

    for (int i = 0; i < n; i++) {
        cnt[i/B][a[i]]++;
        cal[i/B][a[i]] += a[i];
    }

    for (int i = 0; i <= (n-1)/B; i++) {
        for (int j = 0; j <= (n-1)/B; j++) {
            table[i][j] += (
                (i ? table[i-1][j] : 0) +
                (j ? table[i][j-1] : 0) -
                (i && j ? table[i-1][j-1] : 0)
            );
        }
    }

    for (int i = 0; i <= (n-1)/B; i++) {
        for (int j = 1; j < maxc; j++) {
            cnt[i][j] += (
                (i ? cnt[i-1][j] : 0) +
                (j ? cnt[i][j-1] : 0) -
                (i && j ? cnt[i-1][j-1] : 0)
            );
            cal[i][j] += (
                (i ? cal[i-1][j] : 0) +
                (j ? cal[i][j-1] : 0) -
                (i && j ? cal[i-1][j-1] : 0)
            );
        }
    }
}


void solve() {

    while (q--) {

        int l1, r1, l2, r2;
        cin >> l1 >> r1 >> l2 >> r2;
        l1--, r1--, l2--, r2--;
        ll ans = 0;

        if (l1/B == r1/B && l2/B == r2/B) {
            ans += qryss(l1, r1, l2, r2);
            cout << ans << endl;
            continue;
        }
 
        if (l1/B == r1/B) {
            ans += qryss(l1, r1, l2, (l2/B+1)*B-1);
            ans += qryss(l1, r1, (r2/B)*B, r2);
            ans += qrysb(l1, r1, l2/B+1, r2/B-1);
            cout << ans << endl;
            continue;
        }
 
        if (l2/B == r2/B) {
            ans += qryss(l2, r2, l1, (l1/B+1)*B-1);
            ans += qryss(l2, r2, (r1/B)*B, r1);
            ans += qrysb(l2, r2, l1/B+1, r1/B-1);
            cout << ans << endl;
            continue;
        }
 
        int la = (l1/B+1), ra = (r1/B-1);
        int lb = (l2/B+1), rb = (r2/B-1);

        ans += qrybb(la, ra, lb, rb);
        ans += qryss(l1, la*B-1, l2, lb*B-1);
        ans += qryss(l1, la*B-1, r2/B*B, r2);
        ans += qryss(r1/B*B, r1, l2, lb*B-1);
        ans += qryss(r1/B*B, r1, r2/B*B, r2);
        ans += qrysb(l1, la*B-1, lb, rb);
        ans += qrysb(r1/B*B, r1, lb, rb);
        ans += qrysb(l2, lb*B-1, la, ra);
        ans += qrysb(r2/B*B, r2, la, ra);
        
        cout << ans << endl;
    
    }

}


int main() {
    fastio
    
    init();
    solve();
 
    return 0;
}"
1EQLZfSR,тпс от serafim7,mrWhiskasss,Lua,Sunday 28th of January 2024 09:07:00 AM CDT,"-- pastebin run 1EQLZfSR
local timeConstant = 1 -- обновление тпс

local admins = {""mrWhiskass""}  -- заприватить пк

local computer = require(""computer"")
local event = require(""event"")
local fs = require('filesystem')
local com = require('component')
local gpu = com.gpu

local leftX = 5
local topY = 14
local realTimeOld = 0
local realTimeNew = 0
local realTimeDiff = 0
local w, h = gpu.getResolution()

for i = 1,#admins do
  computer.addUser(admins[i])
  admins[admins[i]] = true
end

local function time()
  io.open('/tmp/clock.dt','w'):write(''):close()
  return(fs.lastModified(""/tmp/clock.dt""))
end

local TPS = {}
local avgTPS = 0
for tSlot = 1,10 do
  TPS[tSlot] = 0
end

local function getColor(tps)
  local H, rP, gP, bP, X = tps*12-120, 0, 0, 0, 0
  if H<0 then H=0 end
  X = (1-math.abs((H/60)%2-1))
  if H<60 then
    rP = 1
    gP = X
    bP = 0
  elseif H<120 then
    rP = X
    gP = 1
    bP = 0  
  elseif H<180 then
    rP = 0
    gP = 1
    bP = X  
  elseif H<240 then
    rP = 0
    gP = X
    bP = 1  
  elseif H<300 then
    rP = X
    gP = 0
    bP = 1
  else
    rP = 1
    gP = 0
    bP = X
  end
  return(math.floor((rP)*255)*65536+math.floor((gP)*255)*256+math.floor((bP)*255))
end

local function histoPlot(tabVal,leftX, topY,step)
  local height = math.floor(tabVal[step]/2)+1
  if height>11 then height=11 end
  gpu.setBackground(0xB4B4B4)
  gpu.fill(3*step+leftX-2, topY-2, 2, 13,"" "")
  gpu.fill(leftX-1,topY+10,33,1,"" "")
  gpu.setBackground(getColor(tabVal[step]))
  gpu.fill(3*step+leftX-2, topY-height+10, 2, height,"" "")
  gpu.setBackground(0x0064FF)
  gpu.fill(leftX+step*3-2,topY+10,2,1,"" "")
  gpu.setBackground(0x000000)
end

function event.shouldInterrupt() return false end

gpu.setResolution(38, 25)
gpu.setBackground(0x000000)
os.execute(""cls"")
gpu.setForeground(0xFF9200)
gpu.set(12,3,""[ TPS сервера ]"")
gpu.setBackground(0xB4B4B4)
gpu.setForeground(0xFFFFFF)
gpu.fill(leftX-1,topY-2,33,13,"" "")
for i = 1,#TPS do
  local height = math.floor(TPS[i]/2)+1
  gpu.setBackground(getColor(TPS[i]))
  gpu.fill(3*i+leftX-2, topY-height+10, 2, height,"" "")
end
gpu.setBackground(0x000000)
gpu.set(8,6,""Текущий 00.0000 тик/сек"")
gpu.set(8,9,""Средний 00.0000 тик/сек"")
gpu.set(18,11,""T/s"")
gpu.set(1,12,""20"")
gpu.set(1,17,""10"")
gpu.set(1,22,"" 0"")
gpu.setForeground(0x00FFFF)
while true do
  for tSlot = 1,10 do
    realTimeOld = time()
    local e = {event.pull(timeConstant,""key_down"")}
    if admins[e[5]] and e[4] == 29 then
      gpu.setResolution(80,25)
      gpu.setBackground(0x000000)
      gpu.setForeground(0xffffff)
      os.execute(""cls"")
      os.exit()
    end
    realTimeNew = time()
    realTimeDiff = realTimeNew-realTimeOld
    TPS[tSlot] = 20000*timeConstant/realTimeDiff
    if TPS[tSlot] > 20 then
      TPS[tSlot] = 20.0000
    end
    gpu.set(16,6,string.sub(tostring(TPS[tSlot]).."".0000"",1,7))
    avgTPS = (TPS[1]+TPS[2]+TPS[3]+TPS[4]+TPS[5]+TPS[6]+TPS[7]+TPS[8]+TPS[9]+TPS[10])/10
    gpu.set(16,9,string.sub(tostring(avgTPS).."".0000"",1,7))
    histoPlot(TPS,leftX,topY,tSlot)
  end
end"
zuyhQ75w,snowies snowybot from god,coinwalk,JavaScript,Sunday 28th of January 2024 09:05:52 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var dividedby = 1000;
var base = Number((oldestbal/dividedby).toFixed(8));
var jove = parseFloat(document.getElementById('pct_balance').value);
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 6.9;
var downer = 2.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var bob = oldestbal;
var boobed = oldestbal;
var troll = 0;


function get(){
bellance = document.getElementById('pct_balance').value;
beatle = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var good = ((bellance-jove).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	troll = troll+1;
	bob = parseFloat(bellance);
	fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if ((bellance<=(bob-(botplus*2)))&&(troll>=1)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	bob = parseFloat(bellance);
}
if ((bellance>=(bob+(botplus)))&&(troll>=2)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	bob = parseFloat(bellance);
}
if (((oldestbal-(base*14))-(bellance-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	bob = parseFloat(bellance);
}
if (bellance<=(oldestbal-(base*14))){
    oldestbal = parseFloat(bellance);
    base = Number(((parseFloat(bellance))/dividedby).toFixed(8));
	tens = (base*10);
	sevens = (base*6.9);
	eights = (base*7.9);
    botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	bob = parseFloat(bellance);
}
if (bellance>=(jove*24)) {
	console.log(""winner winner chicken dinner"");
	return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 1);
}
get();
"
eNnDUQ2g,snowies snowybot from god,coinwalk,JavaScript,Sunday 28th of January 2024 09:01:40 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((oldestbal/114).toFixed(8));
var jove = parseFloat(document.getElementById('pct_balance').value);
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 6.9;
var downer = 2.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var bob = oldestbal;
var boobed = oldestbal;
var troll = 0;


function get(){
bellance = document.getElementById('pct_balance').value;
beatle = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var good = ((bellance-jove).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	troll = troll+1;
	bob = parseFloat(bellance);
	fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if ((bellance<=(bob-(botplus*2)))&&(troll>=1)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	bob = parseFloat(bellance);
}
if ((bellance>=(bob+(botplus)))&&(troll>=2)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	bob = parseFloat(bellance);
}
if (((oldestbal-(base*14))-(bellance-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	bob = parseFloat(bellance);
}
if (bellance<=(oldestbal-(base*14))){
    oldestbal = parseFloat(bellance);
    base = Number(((parseFloat(bellance))/114).toFixed(8));
	tens = (base*10);
	sevens = (base*6.9);
	eights = (base*7.9);
    botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	bob = parseFloat(bellance);
}
if (bellance>=(jove*24)) {
	console.log(""winner winner chicken dinner"");
	return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 1000);
}
get();
"
R6BY7fbX,07. Fill the Matrix,Spocoman,C++,Sunday 28th of January 2024 08:54:23 AM CDT,"#include <iostream>
#include <string>
#include <vector>

using namespace std;

int main() {
    string line;
    getline(cin, line);

    int n = stoi(line.substr(0, line.find(',')));
    string method = line.substr(line.size() - 1);

    vector<vector<int>> matrix;

    for (size_t i = 0; i < n; i++) {
        matrix.push_back(vector<int>(n));
    }

    int counter = 1;

    for (int c = 0; c < n; c++) {
        if (c % 2 == 1 && method == ""B"") {
            for (int r = n - 1; r >= 0; r--) {
                matrix[r][c] = counter++;
            }
        }
        else {
            for (int r = 0; r < n; r++) {
                matrix[r][c] = counter++;
            }
        }
    }


    for (int r = 0; r < n; r++) {
        for (int c = 0; c < n; c++) {
            cout << matrix[r][c] << ' ';
        }
        cout << endl;
    }

    return 0;
}"
gzwrfMdW,snowies snowybot from god,coinwalk,JavaScript,Sunday 28th of January 2024 08:51:41 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((oldestbal/114).toFixed(8));
var jove = parseFloat(document.getElementById('pct_balance').value);
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 6.9;
var downer = 2.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var bob = oldestbal;
var boobed = oldestbal;
var troll = 1;


function get(){
bellance = document.getElementById('pct_balance').value;
beatle = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var good = ((bellance-oldestbal).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	troll = 0;
	fart = parseFloat(bellance);
}
if ((bellance>=(bob+(tens*troll)))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	bob = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (((oldestbal-(base*14))-(bellance-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	bob = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (bellance<=(oldestbal-(base*14))){
    oldestbal = parseFloat(bellance);
    base = Number(((parseFloat(bellance))/114).toFixed(8));
	tens = (base*10);
	sevens = (base*6.9);
	eights = (base*7.9);
    botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 1;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	bob = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (bellance>=(jove*24)) {
	console.log(""winner winner chicken dinner"");
	return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 1000);
}
get();
"
Fpcmzs7V,Untitled,Suslick,C#,Sunday 28th of January 2024 08:43:41 AM CDT,"    class Program
    {
        static void Main(string[] args)
        {
            const string sumCommand = ""sum"";
            const string exitCommand = ""exit"";

            List<int> arrayNumbers = new List<int>();
            string userInput;
            bool isRunning = true;

            while (isRunning == true)
            {
                Console.Write(""Введите команду: "");
                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case sumCommand:
                        Summary(arrayNumbers);
                        break;
                    
                    case exitCommand:
                        isRunning = false;
                        break;

                    default:
                        AddNumber(arrayNumbers,userInput);
                        break;
                }
            }
        }

        private static void AddNumber(List<int> arrayNumbers, string userInput)
        {
            if (int.TryParse(userInput, out int userNumber))
            {
                arrayNumbers.Add(userNumber);

                Console.WriteLine(""Введено число "" + userNumber);
            }
            else
            {
                Console.WriteLine(""Неверный ввод команды!"");
            }
        }

        private static void Summary(List<int> arrayNumbers)
        {
            int sum = 0;

            foreach (var number in arrayNumbers)
                sum += number;

            Console.WriteLine(sum);
        }
    }"
dZCmz9Mp,News Jan28 24,Newscaster_Ned,Email,Sunday 28th of January 2024 08:40:13 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

W‎e‎l‎l‎ ‎I‎ ‎h‎a‎v‎e‎n‎'‎t‎ ‎e‎v‎e‎n‎ ‎s‎h‎o‎w‎e‎r‎e‎d‎ ‎o‎r‎ ‎s‎h‎a‎v‎e‎d‎ ‎y‎e‎t‎,‎ ‎a‎n‎d‎ ‎a‎l‎l‎ ‎I‎ ‎h‎a‎v‎e‎ ‎o‎n‎ ‎i‎s‎ ‎a‎ ‎s‎p‎o‎r‎t‎ ‎c‎o‎a‎t‎ ‎a‎n‎d‎ ‎t‎i‎e‎.‎ ‎B‎u‎t‎ ‎w‎h‎a‎t‎e‎v‎e‎r‎,‎ ‎h‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎

E‎x‎-‎S‎t‎a‎r‎b‎u‎c‎k‎s‎ ‎W‎o‎r‎k‎e‎r‎ ‎C‎l‎a‎i‎m‎s‎ ‎H‎e‎ ‎W‎a‎s‎ ‎W‎r‎o‎n‎g‎f‎u‎l‎l‎y‎ ‎F‎i‎r‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎T‎h‎w‎a‎r‎t‎i‎n‎g‎ ‎R‎o‎b‎b‎e‎r‎y‎
'‎B‎a‎y‎w‎a‎t‎c‎h‎'‎ ‎S‎t‎a‎r‎ ‎N‎i‎c‎o‎l‎e‎ ‎E‎g‎g‎e‎r‎t‎ ‎N‎o‎w‎ ‎R‎e‎g‎r‎e‎t‎s‎ ‎G‎e‎t‎t‎i‎n‎g‎ ‎I‎m‎p‎l‎a‎n‎t‎s‎ ‎a‎t‎ ‎1‎8‎
U‎k‎r‎a‎i‎n‎i‎a‎n‎ ‎O‎f‎f‎i‎c‎i‎a‎l‎s‎ ‎C‎h‎a‎r‎g‎e‎d‎ ‎W‎i‎t‎h‎ ‎S‎t‎e‎a‎l‎i‎n‎g‎ ‎$‎4‎0‎ ‎M‎i‎l‎l‎i‎o‎n‎ ‎F‎r‎o‎m‎ ‎W‎e‎a‎p‎o‎n‎s‎ ‎B‎u‎d‎g‎e‎t‎
T‎w‎o‎ ‎M‎a‎s‎k‎e‎d‎ ‎A‎t‎t‎a‎c‎k‎e‎r‎s‎ ‎K‎i‎l‎l‎ ‎M‎a‎n‎ ‎D‎u‎r‎i‎n‎g‎ ‎A‎s‎s‎a‎u‎l‎t‎ ‎o‎n‎ ‎C‎h‎u‎r‎c‎h‎ ‎i‎n‎ ‎I‎s‎t‎a‎n‎b‎u‎l‎
J‎a‎y‎ ‎L‎e‎n‎o‎ ‎F‎i‎l‎e‎s‎ ‎f‎o‎r‎ ‎C‎o‎n‎s‎e‎r‎v‎a‎t‎o‎r‎s‎h‎i‎p‎ ‎o‎f‎ ‎H‎i‎s‎ ‎W‎i‎f‎e‎'‎s‎ ‎E‎s‎t‎a‎t‎e‎
W‎a‎t‎c‎h‎:‎ ‎C‎l‎i‎m‎a‎t‎e‎ ‎A‎c‎t‎i‎v‎i‎s‎t‎s‎ ‎H‎u‎r‎l‎ ‎S‎o‎u‎p‎ ‎a‎t‎ ‎M‎o‎n‎a‎ ‎L‎i‎s‎a‎ ‎P‎a‎i‎n‎t‎i‎n‎g‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
W‎e‎a‎p‎o‎n‎i‎z‎a‎t‎i‎o‎n‎

1‎5‎ ‎F‎a‎c‎t‎s‎ ‎A‎b‎o‎u‎t‎ ‎E‎.‎ ‎J‎e‎a‎n‎ ‎C‎a‎r‎r‎o‎l‎l‎’‎s‎ ‎A‎l‎l‎e‎g‎a‎t‎i‎o‎n‎s‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎T‎r‎u‎m‎p‎ ‎t‎h‎e‎ ‎M‎e‎d‎i‎a‎ ‎D‎o‎n‎’‎t‎ ‎W‎a‎n‎t‎ ‎Y‎o‎u‎ ‎t‎o‎ ‎K‎n‎o‎w‎

R‎e‎a‎d‎ ‎t‎h‎e‎ ‎E‎v‎i‎d‎e‎n‎c‎e‎ ‎M‎e‎d‎i‎a‎ ‎a‎n‎d‎ ‎C‎o‎u‎r‎t‎s‎ ‎I‎g‎n‎o‎r‎e‎d‎
E‎.‎ ‎J‎e‎a‎n‎ ‎C‎a‎r‎r‎o‎l‎l‎
E‎.‎ ‎J‎e‎a‎n‎ ‎C‎a‎r‎r‎o‎l‎l‎’‎s‎ ‎s‎e‎c‎o‎n‎d‎ ‎d‎e‎f‎a‎m‎a‎t‎i‎o‎n‎ ‎l‎a‎w‎s‎u‎i‎t‎ ‎c‎l‎o‎s‎e‎d‎ ‎o‎n‎ ‎F‎r‎i‎d‎a‎y‎ ‎a‎s‎ ‎a‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎j‎u‎r‎y‎ ‎d‎e‎t‎e‎r‎m‎i‎n‎e‎d‎ ‎t‎h‎a‎t‎ ‎f‎o‎r‎m‎e‎r‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎o‎w‎e‎s‎ ‎h‎e‎r‎ ‎$‎8‎3‎.‎3‎ ‎m‎i‎l‎l‎i‎o‎n‎ ‎f‎o‎r‎ ‎d‎e‎f‎a‎m‎i‎n‎g‎ ‎h‎e‎r‎ ‎i‎n‎ ‎2‎0‎1‎9‎.‎ ‎H‎o‎w‎e‎v‎e‎r‎,‎ ‎w‎h‎a‎t‎ ‎h‎a‎s‎ ‎c‎o‎n‎t‎i‎n‎u‎a‎l‎l‎y‎ ‎f‎a‎l‎l‎e‎n‎ ‎u‎n‎d‎e‎r‎ ‎t‎h‎e‎ ‎r‎a‎d‎a‎r‎ ‎i‎s‎ ‎t‎h‎e‎ ‎f‎a‎c‎t‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎s‎e‎r‎i‎o‎u‎s‎ ‎c‎o‎n‎c‎e‎r‎n‎s‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎w‎o‎m‎a‎n‎’‎s‎ ‎e‎n‎t‎i‎r‎e‎ ‎s‎t‎o‎r‎y‎.‎ ‎Y‎e‎t‎,‎ ‎s‎h‎e‎ ‎w‎a‎s‎ ‎a‎w‎a‎r‎d‎e‎d‎ ‎t‎e‎n‎s‎ ‎o‎f‎ ‎m‎i‎l‎l‎i‎o‎n‎s‎ ‎o‎f‎ ‎d‎o‎l‎l‎a‎r‎s‎.‎

W‎a‎t‎c‎h‎:‎ ‎C‎l‎i‎m‎a‎t‎e‎ ‎A‎c‎t‎i‎v‎i‎s‎t‎s‎ ‎H‎u‎r‎l‎ ‎S‎o‎u‎p‎ ‎a‎t‎ ‎M‎o‎n‎a‎ ‎L‎i‎s‎a‎ ‎P‎a‎i‎n‎t‎i‎n‎g‎
W‎a‎t‎c‎h‎:‎ ‎C‎l‎i‎m‎a‎t‎e‎ ‎A‎c‎t‎i‎v‎i‎s‎t‎s‎ ‎H‎u‎r‎l‎ ‎S‎o‎u‎p‎ ‎a‎t‎ ‎M‎o‎n‎a‎ ‎L‎i‎s‎a‎ ‎P‎a‎i‎n‎t‎i‎n‎g‎
5‎7‎
A‎u‎t‎h‎o‎r‎ ‎E‎.‎ ‎J‎e‎a‎n‎ ‎C‎a‎r‎r‎o‎l‎l‎ ‎a‎r‎r‎i‎v‎e‎s‎ ‎t‎o‎ ‎f‎e‎d‎e‎r‎a‎l‎ ‎c‎o‎u‎r‎t‎ ‎i‎n‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎,‎ ‎U‎S‎,‎ ‎o‎n‎ ‎T‎u‎e‎s‎d‎a‎y‎,‎ ‎A‎p‎r‎i‎l‎ ‎2‎5‎,‎ ‎2‎0‎2‎3‎.‎ ‎T‎h‎e‎ ‎t‎r‎i‎a‎l‎ ‎o‎f‎ ‎a‎ ‎c‎i‎v‎i‎l‎ ‎s‎u‎i‎t‎ ‎b‎y‎ ‎C‎a‎r‎r‎o‎l‎l‎,‎ ‎w‎h‎o‎ ‎c‎l‎a‎i‎m‎s‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎r‎a‎p‎e‎d‎ ‎h‎e‎r‎ ‎i‎n‎ ‎t‎h‎e‎ ‎1‎9‎9‎0‎s‎,‎ ‎i‎s‎ ‎s‎e‎t‎ ‎t‎o‎ ‎s‎t‎a‎r‎t‎ ‎t‎o‎d‎a‎y‎.‎ ‎P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎r‎:‎ ‎S‎t‎e‎p‎h‎a‎n‎i‎e‎ ‎K‎e‎i‎t‎h‎/‎B‎l‎o‎o‎m‎b‎e‎r‎g‎ ‎v‎i‎a‎ ‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎
J‎u‎r‎y‎ ‎O‎r‎d‎e‎r‎s‎ ‎T‎r‎u‎m‎p‎ ‎t‎o‎ ‎P‎a‎y‎ ‎$‎8‎3‎.‎3‎ ‎M‎i‎l‎l‎i‎o‎n‎ ‎i‎n‎ ‎E‎.‎ ‎J‎e‎a‎n‎ ‎C‎a‎r‎r‎o‎l‎l‎ ‎D‎e‎f‎a‎m‎a‎t‎i‎o‎n‎ ‎C‎a‎s‎e‎
1‎7‎,‎0‎3‎3‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎‘‎D‎e‎f‎e‎a‎t‎ ‎M‎A‎G‎A‎’‎:‎ ‎M‎e‎e‎t‎ ‎R‎a‎d‎i‎c‎a‎l‎ ‎L‎e‎f‎t‎i‎s‎t‎s‎ ‎H‎e‎l‎l‎b‎e‎n‎t‎ ‎o‎n‎ ‎S‎t‎o‎p‎p‎i‎n‎g‎ ‎T‎r‎u‎m‎p‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎‘‎D‎e‎f‎e‎a‎t‎ ‎M‎A‎G‎A‎’‎:‎ ‎M‎e‎e‎t‎ ‎R‎a‎d‎i‎c‎a‎l‎ ‎L‎e‎f‎t‎i‎s‎t‎s‎ ‎H‎e‎l‎l‎b‎e‎n‎t‎ ‎o‎n‎ ‎S‎t‎o‎p‎p‎i‎n‎g‎ ‎T‎r‎u‎m‎p‎
1‎5‎,‎4‎9‎8‎
P‎l‎a‎n‎n‎e‎d‎ ‎P‎a‎r‎e‎n‎t‎h‎o‎o‎d‎ ‎T‎a‎r‎g‎e‎t‎s‎ ‎Y‎o‎u‎t‎h‎ ‎i‎n‎ ‎V‎i‎d‎e‎o‎ ‎A‎b‎o‎u‎t‎ ‎V‎i‎r‎g‎i‎n‎i‎t‎y‎
P‎l‎a‎n‎n‎e‎d‎ ‎P‎a‎r‎e‎n‎t‎h‎o‎o‎d‎ ‎T‎a‎r‎g‎e‎t‎s‎ ‎Y‎o‎u‎t‎h‎ ‎i‎n‎ ‎V‎i‎d‎e‎o‎ ‎A‎b‎o‎u‎t‎ ‎V‎i‎r‎g‎i‎n‎i‎t‎y‎
8‎3‎1‎
T‎r‎u‎m‎p‎ ‎C‎a‎m‎p‎a‎i‎g‎n‎ ‎B‎a‎s‎h‎e‎s‎ ‎F‎o‎x‎ ‎N‎e‎w‎s‎ ‎f‎o‎r‎ ‎F‎a‎l‎s‎e‎ ‎R‎e‎p‎o‎r‎t‎ ‎A‎b‎o‎u‎t‎ ‎R‎F‎K‎
T‎r‎u‎m‎p‎ ‎C‎a‎m‎p‎a‎i‎g‎n‎ ‎B‎a‎s‎h‎e‎s‎ ‎F‎o‎x‎ ‎N‎e‎w‎s‎ ‎f‎o‎r‎ ‎F‎a‎l‎s‎e‎ ‎R‎e‎p‎o‎r‎t‎ ‎A‎b‎o‎u‎t‎ ‎R‎F‎K‎
7‎5‎
L‎e‎f‎t‎-‎w‎i‎n‎g‎ ‎M‎e‎d‎i‎a‎ ‎C‎o‎l‎l‎a‎p‎s‎e‎ ‎M‎a‎r‎c‎h‎e‎s‎ ‎O‎n‎ ‎-‎ ‎V‎i‎c‎e‎,‎ ‎B‎u‎z‎z‎F‎e‎e‎d‎ ‎S‎e‎l‎l‎ ‎O‎f‎f‎ ‎P‎a‎r‎t‎s‎
L‎e‎f‎t‎-‎w‎i‎n‎g‎ ‎M‎e‎d‎i‎a‎ ‎C‎o‎l‎l‎a‎p‎s‎e‎ ‎M‎a‎r‎c‎h‎e‎s‎ ‎O‎n‎ ‎-‎ ‎V‎i‎c‎e‎,‎ ‎B‎u‎z‎z‎F‎e‎e‎d‎ ‎S‎e‎l‎l‎ ‎O‎f‎f‎ ‎P‎a‎r‎t‎s‎
2‎,‎9‎8‎8‎
U‎.‎N‎.‎ ‎C‎h‎i‎e‎f‎ ‎G‎u‎t‎e‎r‎r‎e‎s‎ ‎C‎r‎i‎e‎s‎ ‎P‎o‎o‎r‎:‎ ‎P‎l‎e‎a‎d‎s‎ ‎w‎i‎t‎h‎ ‎W‎o‎r‎l‎d‎ ‎t‎o‎ ‎K‎e‎e‎p‎ ‎F‎u‎n‎d‎i‎n‎g‎ ‎U‎N‎R‎W‎A‎
U‎.‎N‎.‎ ‎C‎h‎i‎e‎f‎ ‎G‎u‎t‎e‎r‎r‎e‎s‎ ‎C‎r‎i‎e‎s‎ ‎P‎o‎o‎r‎:‎ ‎P‎l‎e‎a‎d‎s‎ ‎w‎i‎t‎h‎ ‎W‎o‎r‎l‎d‎ ‎t‎o‎ ‎K‎e‎e‎p‎ ‎F‎u‎n‎d‎i‎n‎g‎ ‎U‎N‎R‎W‎A‎
8‎2‎
U‎k‎r‎a‎i‎n‎i‎a‎n‎ ‎O‎f‎f‎i‎c‎i‎a‎l‎s‎ ‎C‎h‎a‎r‎g‎e‎d‎ ‎W‎i‎t‎h‎ ‎S‎t‎e‎a‎l‎i‎n‎g‎ ‎$‎4‎0‎ ‎M‎i‎l‎l‎i‎o‎n‎ ‎F‎r‎o‎m‎ ‎W‎e‎a‎p‎o‎n‎s‎ ‎B‎u‎d‎g‎e‎t‎
U‎k‎r‎a‎i‎n‎i‎a‎n‎ ‎O‎f‎f‎i‎c‎i‎a‎l‎s‎ ‎C‎h‎a‎r‎g‎e‎d‎ ‎W‎i‎t‎h‎ ‎S‎t‎e‎a‎l‎i‎n‎g‎ ‎$‎4‎0‎ ‎M‎i‎l‎l‎i‎o‎n‎ ‎F‎r‎o‎m‎ ‎W‎e‎a‎p‎o‎n‎s‎ ‎B‎u‎d‎g‎e‎t‎
3‎9‎
U‎k‎r‎a‎i‎n‎e‎ ‎C‎l‎a‎i‎m‎s‎ ‎N‎o‎ ‎E‎v‎i‎d‎e‎n‎c‎e‎ ‎I‎t‎ ‎S‎h‎o‎t‎ ‎D‎o‎w‎n‎ ‎P‎l‎a‎n‎e‎ ‎C‎a‎r‎r‎y‎i‎n‎g‎ ‎O‎w‎n‎ ‎P‎O‎W‎s‎
U‎k‎r‎a‎i‎n‎e‎ ‎C‎l‎a‎i‎m‎s‎ ‎N‎o‎ ‎E‎v‎i‎d‎e‎n‎c‎e‎ ‎I‎t‎ ‎S‎h‎o‎t‎ ‎D‎o‎w‎n‎ ‎P‎l‎a‎n‎e‎ ‎C‎a‎r‎r‎y‎i‎n‎g‎ ‎O‎w‎n‎ ‎P‎O‎W‎s‎
8‎3‎6‎
1‎5‎ ‎F‎a‎c‎t‎s‎ ‎A‎b‎o‎u‎t‎ ‎E‎.‎ ‎J‎e‎a‎n‎ ‎C‎a‎r‎r‎o‎l‎l‎'‎s‎ ‎C‎a‎s‎e‎ ‎t‎h‎e‎ ‎M‎e‎d‎i‎a‎ ‎D‎o‎n‎'‎t‎ ‎W‎a‎n‎t‎ ‎Y‎o‎u‎ ‎t‎o‎ ‎K‎n‎o‎w‎
1‎5‎ ‎F‎a‎c‎t‎s‎ ‎A‎b‎o‎u‎t‎ ‎E‎.‎ ‎J‎e‎a‎n‎ ‎C‎a‎r‎r‎o‎l‎l‎'‎s‎ ‎C‎a‎s‎e‎ ‎t‎h‎e‎ ‎M‎e‎d‎i‎a‎ ‎D‎o‎n‎'‎t‎ ‎W‎a‎n‎t‎ ‎Y‎o‎u‎ ‎t‎o‎ ‎K‎n‎o‎w‎

S‎p‎e‎a‎r‎c‎h‎u‎c‎k‎e‎r‎ ‎G‎e‎t‎s‎ ‎6‎5‎ ‎Y‎e‎a‎r‎s‎ ‎A‎f‎t‎e‎r‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎u‎p‎ ‎S‎t‎a‎r‎t‎s‎ ‎R‎i‎g‎h‎t‎ ‎H‎e‎r‎e‎ ‎C‎h‎a‎r‎t‎e‎r‎ ‎S‎c‎h‎o‎o‎l‎.‎

I‎ ‎h‎o‎p‎e‎ ‎t‎h‎e‎ ‎s‎c‎h‎o‎o‎l‎ ‎w‎a‎s‎ ‎s‎u‎p‎p‎o‎s‎e‎d‎ ‎t‎o‎ ‎t‎e‎a‎c‎h‎ ‎h‎i‎m‎ ‎h‎o‎w‎ ‎t‎o‎ ‎l‎i‎v‎e‎ ‎l‎i‎f‎e‎ ‎i‎n‎ ‎p‎r‎i‎s‎o‎n‎.‎


C‎i‎n‎c‎i‎n‎n‎a‎t‎i‎ ‎F‎i‎r‎e‎m‎o‎n‎k‎e‎y‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎M‎u‎r‎d‎e‎r‎-‎f‎o‎r‎-‎H‎i‎r‎e‎ ‎P‎l‎o‎t‎s‎ ‎i‎n‎ ‎2‎0‎2‎1‎.‎


D‎o‎t‎h‎a‎n‎ ‎G‎r‎o‎i‎d‎ ‎G‎e‎t‎s‎ ‎S‎e‎c‎o‎n‎d‎ ‎M‎u‎r‎d‎e‎r‎ ‎C‎h‎a‎r‎g‎e‎ ‎A‎d‎d‎e‎d‎.‎


C‎h‎i‎m‎p‎o‎u‎t‎ ‎E‎r‎u‎p‎t‎s‎ ‎a‎t‎ ‎D‎o‎u‎g‎l‎a‎s‎ ‎C‎o‎u‎n‎t‎y‎ ‎C‎o‎u‎r‎t‎h‎o‎u‎s‎e‎ ‎A‎f‎t‎e‎r‎ ‎N‎e‎g‎r‎o‎ ‎G‎e‎t‎s‎ ‎C‎o‎n‎v‎i‎c‎t‎e‎d‎ ‎o‎f‎ ‎F‎a‎t‎a‎l‎l‎y‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎T‎e‎e‎n‎.‎


S‎i‎l‎v‎e‎r‎b‎a‎c‎k‎ ‎E‎n‎d‎s‎ ‎i‎t‎ ‎A‎f‎t‎e‎r‎ ‎G‎u‎n‎n‎i‎n‎g‎ ‎D‎o‎w‎n‎ ‎8‎ ‎P‎e‎o‎p‎l‎e‎ ‎i‎n‎ ‎J‎o‎i‎l‎e‎t‎.‎


O‎k‎l‎a‎h‎o‎m‎a‎ ‎D‎A‎ ‎S‎e‎e‎k‎s‎ ‎D‎e‎a‎t‎h‎ ‎P‎e‎n‎a‎l‎t‎y‎ ‎f‎o‎r‎ ‎O‎r‎a‎n‎g‎u‎t‎a‎n‎ ‎W‎h‎o‎ ‎K‎i‎l‎l‎e‎d‎ ‎H‎i‎s‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎E‎x‎-‎G‎f‎.‎ ‎


2‎ ‎N‎i‎g‎f‎o‎r‎m‎e‎s‎ ‎U‎n‎d‎e‎r‎ ‎I‎n‎v‎e‎s‎t‎i‎g‎a‎t‎i‎o‎n‎ ‎b‎y‎ ‎A‎T‎F‎ ‎A‎f‎t‎e‎r‎ ‎M‎a‎n‎ ‎W‎a‎s‎ ‎K‎i‎l‎l‎e‎d‎ ‎I‎n‎s‎i‎d‎e‎ ‎S‎U‎V‎ ‎i‎n‎ ‎N‎o‎r‎t‎h‎ ‎M‎i‎n‎n‎e‎a‎p‎o‎l‎i‎s‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎M‎a‎y‎b‎e‎ ‎t‎h‎e‎ ‎w‎e‎a‎t‎h‎e‎r‎e‎d‎ ‎f‎i‎r‎i‎n‎g‎ ‎t‎a‎r‎g‎e‎t‎s‎ ‎w‎i‎l‎l‎ ‎c‎h‎e‎e‎r‎ ‎y‎o‎u‎ ‎u‎p‎.‎

S‎u‎n‎ ‎2‎8‎ ‎|‎ ‎D‎a‎y‎
6‎4‎°‎
2‎%‎
N‎
8‎
 ‎
m‎p‎h‎
P‎l‎e‎n‎t‎i‎f‎u‎l‎ ‎s‎u‎n‎s‎h‎i‎n‎e‎.‎ ‎H‎i‎g‎h‎ ‎6‎4‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
6‎0‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
5‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎2‎2‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
6‎:‎0‎3‎ ‎p‎m‎
S‎u‎n‎ ‎2‎8‎ ‎|‎ ‎N‎i‎g‎h‎t‎
3‎7‎°‎
6‎%‎
S‎W‎
3‎
 ‎
m‎p‎h‎
A‎ ‎c‎l‎e‎a‎r‎ ‎s‎k‎y‎.‎ ‎L‎o‎w‎ ‎3‎7‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎l‎i‎g‎h‎t‎ ‎a‎n‎d‎ ‎v‎a‎r‎i‎a‎b‎l‎e‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎2‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
8‎:‎5‎1‎ ‎p‎m‎
W‎a‎n‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
9‎:‎1‎5‎ ‎a‎m‎
M‎o‎n‎ ‎2‎9‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎9‎°‎
/‎4‎1‎°‎
6‎%‎
S‎W‎ ‎8‎ ‎m‎p‎h‎
T‎u‎e‎ ‎3‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎8‎°‎
/‎4‎2‎°‎
5‎%‎
W‎S‎W‎ ‎6‎ ‎m‎p‎h‎
W‎e‎d‎ ‎3‎1‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎7‎°‎
/‎4‎7‎°‎
6‎%‎
N‎N‎E‎ ‎4‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎6‎°‎
/‎5‎1‎°‎
8‎%‎
S‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎2‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎0‎°‎
/‎5‎7‎°‎
2‎0‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎3‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
6‎5‎°‎
/‎4‎7‎°‎
7‎5‎%‎
S‎W‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎0‎°‎
/‎4‎0‎°‎
1‎5‎%‎
N‎W‎ ‎1‎5‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎5‎
S‎u‎n‎n‎y‎
5‎7‎°‎
/‎3‎7‎°‎
4‎%‎
N‎N‎W‎ ‎1‎2‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
5‎9‎°‎
/‎4‎2‎°‎
4‎%‎
N‎E‎ ‎8‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎7‎
C‎l‎o‎u‎d‎y‎
6‎2‎°‎
/‎5‎1‎°‎
2‎4‎%‎
S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎8‎
S‎h‎o‎w‎e‎r‎s‎
6‎8‎°‎
/‎5‎3‎°‎
5‎7‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎9‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎8‎°‎
/‎5‎0‎°‎
4‎5‎%‎
W‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎0‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎7‎°‎
/‎4‎7‎°‎
4‎3‎%‎
N‎ ‎9‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎1‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎5‎°‎
/‎4‎6‎°‎
3‎8‎%‎
N‎ ‎1‎0‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎D‎r‎.‎ ‎N‎i‎g‎g‎e‎r‎ ‎P‎e‎n‎i‎s‎.‎ 👨🏿‍🔬

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

P‎a‎y‎t‎o‎n‎ ‎G‎e‎n‎d‎r‎o‎n‎
A‎ ‎f‎e‎w‎ ‎t‎h‎r‎e‎e‎ ‎l‎e‎t‎t‎e‎r‎ ‎a‎g‎e‎n‎c‎i‎e‎s‎ ‎d‎e‎c‎i‎d‎e‎d‎ ‎t‎h‎e‎ ‎J‎e‎w‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎ ‎o‎f‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎w‎a‎s‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎a‎ ‎l‎i‎t‎t‎l‎e‎ ‎t‎o‎o‎ ‎p‎r‎o‎-‎w‎h‎i‎t‎e‎ ‎a‎n‎d‎ ‎p‎r‎o‎-‎g‎u‎n‎ ‎f‎o‎r‎ ‎i‎t‎s‎ ‎o‎w‎n‎ ‎g‎o‎o‎d‎.‎ ‎E‎n‎t‎e‎r‎ ‎P‎a‎y‎t‎o‎n‎ ‎G‎e‎n‎d‎r‎o‎n‎,‎ ‎a‎l‎i‎a‎s‎ ‎j‎i‎m‎b‎o‎b‎o‎i‎i‎i‎,‎ ‎t‎h‎e‎ ‎z‎o‎o‎m‎e‎r‎ ‎f‎e‎d‎e‎r‎a‎l‎ ‎a‎s‎s‎e‎t‎ ‎p‎e‎r‎p‎e‎t‎r‎a‎t‎o‎r‎ ‎o‎f‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎r‎e‎c‎e‎n‎t‎ ‎e‎n‎ ‎v‎o‎g‎u‎e‎ ‎/‎p‎o‎l‎/‎ ‎t‎y‎p‎e‎ ‎s‎h‎o‎o‎t‎i‎n‎g‎ ‎a‎n‎d‎ ‎e‎v‎e‎n‎ ‎w‎o‎r‎s‎e‎,‎ ‎a‎ ‎d‎i‎r‎t‎y‎ ‎f‎u‎r‎f‎a‎g‎.‎ ‎P‎a‎y‎t‎o‎n‎ ‎i‎s‎ ‎o‎n‎e‎ ‎o‎f‎ ‎A‎u‎s‎s‎i‎e‎ ‎p‎h‎e‎n‎o‎m‎e‎n‎o‎n‎ ‎B‎r‎e‎n‎t‎o‎n‎ ‎T‎a‎r‎r‎a‎n‎t‎'‎s‎ ‎d‎i‎s‎c‎i‎p‎l‎e‎s‎.‎ ‎L‎a‎c‎k‎i‎n‎g‎ ‎o‎r‎i‎g‎i‎n‎a‎l‎i‎t‎y‎ ‎l‎i‎k‎e‎ ‎e‎v‎e‎r‎y‎ ‎c‎u‎m‎s‎k‎i‎n‎ ‎b‎e‎f‎o‎r‎e‎ ‎h‎i‎m‎,‎ ‎P‎a‎y‎t‎o‎n‎,‎ ‎i‎n‎s‎t‎e‎a‎d‎ ‎o‎f‎ ‎t‎a‎r‎g‎e‎t‎i‎n‎g‎ ‎t‎h‎e‎ ‎r‎e‎a‎l‎ ‎o‎n‎e‎s‎ ‎i‎n‎ ‎p‎o‎w‎e‎r‎,‎ ‎o‎r‎ ‎p‎e‎o‎p‎l‎e‎ ‎w‎h‎o‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎d‎e‎s‎e‎r‎v‎e‎ ‎i‎t‎,‎ ‎d‎e‎c‎i‎d‎e‎d‎ ‎t‎o‎ ‎s‎h‎o‎o‎t‎ ‎u‎p‎ ‎a‎ ‎l‎o‎w‎-‎r‎e‎n‎t‎ ‎s‎u‎p‎e‎r‎m‎a‎r‎k‎e‎t‎ ‎f‎u‎l‎l‎ ‎o‎f‎ ‎o‎l‎d‎ ‎l‎a‎d‎i‎e‎s‎ ‎a‎n‎d‎ ‎n‎e‎g‎r‎o‎s‎ ‎s‎h‎o‎p‎p‎i‎n‎g‎ ‎f‎o‎r‎ ‎s‎a‎t‎u‎r‎a‎t‎e‎d‎ ‎f‎a‎t‎ ‎f‎i‎l‎l‎e‎d‎ ‎g‎o‎y‎s‎l‎o‎p‎.‎ ‎P‎a‎y‎t‎o‎n‎ ‎m‎a‎n‎a‎g‎e‎d‎ ‎t‎o‎ ‎b‎e‎a‎t‎ ‎R‎a‎n‎d‎y‎ ‎S‎t‎a‎i‎r‎'‎s‎ ‎s‎u‎p‎e‎r‎ ‎m‎a‎r‎k‎e‎t‎ ‎r‎a‎m‎p‎a‎g‎e‎ ‎a‎t‎ ‎t‎h‎e‎ ‎v‎e‎r‎y‎ ‎l‎e‎a‎s‎t‎.‎

(‎(‎ ‎H‎E‎L‎L‎O‎ ‎F‎E‎L‎L‎O‎W‎ ‎W‎H‎I‎T‎E‎ ‎S‎U‎P‎R‎E‎M‎A‎C‎I‎S‎T‎S‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎S‎p‎a‎c‎e‎ ‎S‎h‎u‎t‎t‎l‎e‎ ‎C‎h‎a‎l‎l‎e‎n‎g‎e‎r‎ ‎d‎i‎s‎a‎s‎t‎e‎r‎ ‎w‎a‎s‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎f‎a‎t‎a‎l‎ ‎a‎c‎c‎i‎d‎e‎n‎t‎ ‎t‎o‎ ‎a‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎s‎p‎a‎c‎e‎c‎r‎a‎f‎t‎ ‎i‎n‎ ‎f‎l‎i‎g‎h‎t‎.‎ ‎O‎n‎ ‎J‎a‎n‎u‎a‎r‎y‎ ‎2‎8‎,‎ ‎1‎9‎8‎6‎,‎ ‎t‎h‎e‎ ‎S‎p‎a‎c‎e‎ ‎S‎h‎u‎t‎t‎l‎e‎ ‎C‎h‎a‎l‎l‎e‎n‎g‎e‎r‎ ‎b‎r‎o‎k‎e‎ ‎a‎p‎a‎r‎t‎ ‎7‎3‎ ‎s‎e‎c‎o‎n‎d‎s‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎ ‎f‎l‎i‎g‎h‎t‎ ‎o‎f‎ ‎m‎i‎s‎s‎i‎o‎n‎ ‎S‎T‎S‎-‎5‎1‎-‎L‎,‎ ‎k‎i‎l‎l‎i‎n‎g‎ ‎a‎l‎l‎ ‎s‎e‎v‎e‎n‎ ‎c‎r‎e‎w‎ ‎m‎e‎m‎b‎e‎r‎s‎ ‎a‎b‎o‎a‎r‎d‎.‎ ‎I‎t‎ ‎d‎i‎s‎i‎n‎t‎e‎g‎r‎a‎t‎e‎d‎ ‎4‎6‎,‎0‎0‎0‎ ‎f‎e‎e‎t‎ ‎(‎1‎4‎ ‎k‎m‎)‎ ‎a‎b‎o‎v‎e‎ ‎t‎h‎e‎ ‎A‎t‎l‎a‎n‎t‎i‎c‎ ‎O‎c‎e‎a‎n‎,‎ ‎o‎f‎f‎ ‎t‎h‎e‎ ‎c‎o‎a‎s‎t‎ ‎o‎f‎ ‎C‎a‎p‎e‎ ‎C‎a‎n‎a‎v‎e‎r‎a‎l‎,‎ ‎F‎l‎o‎r‎i‎d‎a‎,‎ ‎a‎t‎ ‎1‎1‎:‎3‎9‎ ‎a‎.‎m‎.‎ ‎E‎S‎T‎ ‎(‎1‎6‎:‎3‎9‎ ‎U‎T‎C‎)‎.‎ ‎T‎h‎e‎ ‎c‎r‎e‎w‎ ‎a‎r‎e‎ ‎s‎e‎e‎n‎ ‎h‎e‎r‎e‎ ‎i‎n‎ ‎t‎h‎e‎i‎r‎ ‎o‎f‎f‎i‎c‎i‎a‎l‎ ‎p‎o‎r‎t‎r‎a‎i‎t‎ ‎o‎n‎ ‎N‎o‎v‎e‎m‎b‎e‎r‎ ‎1‎5‎,‎ ‎1‎9‎8‎5‎.‎ ‎I‎n‎ ‎t‎h‎e‎ ‎b‎a‎c‎k‎ ‎r‎o‎w‎ ‎f‎r‎o‎m‎ ‎l‎e‎f‎t‎ ‎t‎o‎ ‎r‎i‎g‎h‎t‎:‎ ‎E‎l‎l‎i‎s‎o‎n‎ ‎O‎n‎i‎z‎u‎k‎a‎,‎ ‎C‎h‎r‎i‎s‎t‎a‎ ‎M‎c‎A‎u‎l‎i‎f‎f‎e‎,‎ ‎G‎r‎e‎g‎o‎r‎y‎ ‎J‎a‎r‎v‎i‎s‎,‎ ‎a‎n‎d‎ ‎J‎u‎d‎i‎t‎h‎ ‎R‎e‎s‎n‎i‎k‎.‎ ‎I‎n‎ ‎t‎h‎e‎ ‎f‎r‎o‎n‎t‎ ‎r‎o‎w‎ ‎f‎r‎o‎m‎ ‎l‎e‎f‎t‎ ‎t‎o‎ ‎r‎i‎g‎h‎t‎:‎ ‎M‎i‎c‎h‎a‎e‎l‎ ‎J‎.‎ ‎S‎m‎i‎t‎h‎,‎ ‎D‎i‎c‎k‎ ‎S‎c‎o‎b‎e‎e‎,‎ ‎a‎n‎d‎ ‎R‎o‎n‎a‎l‎d‎ ‎M‎c‎N‎a‎i‎r‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎N‎A‎S‎A‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎m‎a‎k‎e‎ ‎a‎ ‎c‎o‎m‎p‎u‎t‎e‎r‎ ‎s‎i‎m‎u‎l‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎J‎a‎n‎u‎a‎r‎y‎ ‎6‎t‎h‎ ‎C‎a‎p‎i‎t‎o‎l‎ ‎B‎r‎e‎a‎k‎-‎i‎n‎.‎.‎.‎ ‎W‎h‎a‎t‎?‎ ‎I‎'‎v‎e‎ ‎d‎o‎n‎e‎ ‎c‎o‎m‎p‎u‎t‎e‎r‎ ‎s‎i‎m‎u‎l‎a‎t‎i‎o‎n‎s‎ ‎o‎f‎ ‎a‎l‎l‎ ‎t‎h‎e‎ ‎B‎L‎M‎ ‎p‎r‎o‎t‎e‎s‎t‎s‎,‎ ‎s‎o‎ ‎I‎ ‎f‎i‎g‎u‎r‎e‎d‎ ‎I‎'‎d‎ ‎b‎e‎ ‎f‎a‎i‎r‎ ‎a‎n‎d‎ ‎d‎o‎ ‎a‎ ‎s‎i‎m‎u‎l‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎f‎e‎w‎ ‎t‎i‎m‎e‎s‎ ‎w‎h‎i‎t‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎c‎h‎i‎m‎p‎o‎u‎t‎.‎"
zdvPrDX6,for the hacker snowybot,coinwalk,JavaScript,Sunday 28th of January 2024 08:39:37 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((oldestbal/114).toFixed(8));
var jove = parseFloat(document.getElementById('pct_balance').value);
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 6.9;
var downer = 2.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var bob = oldestbal;
var boobed = oldestbal;
var troll = 0;


function get(){
bellance = document.getElementById('pct_balance').value;
beatle = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var good = ((bellance-oldestbal).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	troll = troll+1;
	bob = parseFloat(bellance);
	fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if ((bellance<=(bob-(botplus*2)))&&(troll>=1)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	bob = parseFloat(bellance);
}
if ((bellance>=(bob+(botplus)))&&(troll>=2)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	bob = parseFloat(bellance);
}
if (((oldestbal-(base*14))-(bellance-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	bob = parseFloat(bellance);
}
if (bellance<=(oldestbal-(base*14))){
    oldestbal = parseFloat(bellance);
    base = Number(((parseFloat(bellance))/114).toFixed(8));
	tens = (base*10);
	sevens = (base*6.9);
	eights = (base*7.9);
    botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
	bob = parseFloat(bellance);
}
if (bellance>=(jove*24)) {
	console.log(""winner winner chicken dinner"");
	return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 1000);
}
get();
"
gmChqW5P,for the hacker snowybot,coinwalk,JavaScript,Sunday 28th of January 2024 08:28:59 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((0.00001).toFixed(8));
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 6.9;
var downer = 2.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var bob = oldestbal;
var boobed = oldestbal;
var troll = 0;


function get(){
bellance = document.getElementById('pct_balance').value;
beatle = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var good = ((bellance-oldestbal).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	troll = troll+1;
	bob = parseFloat(bellance);
	fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if ((bellance<=(bob-(botplus*2)))&&(troll>=1)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor(bellance/tens))*tens);
	bob = parseFloat(bellance);
}
if ((bellance>=(bob+(botplus)))&&(troll>=2)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor(bellance/tens))*tens);
	bob = parseFloat(bellance);
}
if (((oldestbal-(base*100))-(bellance-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor(bellance/tens))*tens);
	bob = parseFloat(bellance);
}
if (bellance<=(oldestbal-(base*100))){
console.log(""you didnt win"");
return
}
if (bellance>=(oldestbal*2.4)) {
	console.log(""winner winner chicken dinner"");
	return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 1000);
}
get();
"
0fPzZdxR,Untitled,Suslick,C#,Sunday 28th of January 2024 08:27:14 AM CDT,"        static void Main(string[] args)
        {
            int account = 0;
            Queue<int> coastPurchases = new Queue<int>();

            CreateQueue(coastPurchases,5);

            while (coastPurchases.Count > 0) 
            { 
                Console.WriteLine(""Ваш счёт: "" + account);  
                Console.WriteLine(""Слелющие клиенты Клиенты:"");
                Console.WriteLine(string.Join("" "", coastPurchases));

                account += coastPurchases.Dequeue();
                
                Console.WriteLine(""Нажмите любую клавишу, чтобы принять следующего клиета"");
                Console.ReadKey();
                Console.Clear();
            }

            Console.WriteLine(""Итог:"" + account);
            Console.ReadKey();
        }

        private static void CreateQueue(Queue<int> coastPurchases, int countQueue)
        {
            Random random = new Random();

            int maxNumber = 500;
            int minNumber = 200;

            for (int i = 0; i < countQueue; i++)
            {
                int randomNumber = random.Next(minNumber, maxNumber + 1);

                coastPurchases.Enqueue(randomNumber);
            }
        }
    }"
dV6v5wDB,C#_3_shift_array's_values,Legiomax,C#,Sunday 28th of January 2024 08:21:36 AM CDT,"using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace C_Ijun
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();

            int lowRangeArray = 4;
            int highRangeArray = 8;
            int lowRangeRandom = 0;
            int highRangeRandom = 10;
            int leftBorderIndex = 0;
            int shiftLeftCount;
            int tempVariableNum;
            bool isNotShiftingArray = false;

            int rangeArray = random.Next(lowRangeArray, highRangeArray);
            int[] numbers = new int[rangeArray];

            for (int i = 0; i < rangeArray; i++)
            {
                numbers[i] = random.Next(lowRangeRandom, highRangeRandom);
            }

            Console.WriteLine(""Исходная матрица:"");

            for (int i = 0; i < rangeArray; i++)
            {
                Console.Write(numbers[i] + "" "");
            }

            Console.Write(""\nВведите число, на которое сдвинуть массив чисел влево - "");
            shiftLeftCount = Convert.ToInt32(Console.ReadLine());

            if (shiftLeftCount > Convert.ToInt32(isNotShiftingArray) 
                && shiftLeftCount % rangeArray != Convert.ToInt32(isNotShiftingArray))
            {
                shiftLeftCount = shiftLeftCount % rangeArray;

                for (int i = 0; i < shiftLeftCount; i++)
                {
                    tempVariableNum = numbers[leftBorderIndex];

                    for (int j = 0; j < rangeArray - 1; j++)
                    {
                        numbers[j] = numbers[j + 1];
                    }

                    numbers[rangeArray - 1] = tempVariableNum;
                }
            }
            
            Console.WriteLine(""\nСдвинутая матрица:"");

            for (int i = 0; i < rangeArray; i++)
            {
                Console.Write(numbers[i] + "" "");
            }

            Console.ReadKey();
        }
    }
}
"
5m4xCMEd,06. Reverse Matrix Diagonals,Spocoman,C++,Sunday 28th of January 2024 08:10:18 AM CDT,"#include <iostream>
#include <vector>

using namespace std;

int main() {
    int row, col, n;
    cin >> row >> col;

    vector<vector<int>> matrix;

    for (int i = 0; i < row; i++) {
        vector<int> currentRow;
        for (int j = 0; j < col; j++) {
            cin >> n;
            currentRow.push_back(n);
        }
        matrix.push_back(currentRow);
    }

    for (int i = col - 1; i >= 0; i--) {
        int r = row;
        for (int j = i; j < col; j++) {
            cout << matrix[--r][j] << ' ';
            if (r == 0) {
                break;
            }
        }
        cout << endl;
    }

    for (int i = row - 2; i >= 0; i--) {
        int r = i;
        for (int j = 0; j < col; j++) {
            cout << matrix[r--][j] << ' ';
            if (r == -1) {
                break;
            }
        }
        cout << endl;
    }

    return 0;
}"
zahVVxs8,for the hacker snowybot,coinwalk,JavaScript,Sunday 28th of January 2024 07:51:39 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((oldestbal/114).toFixed(8));
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 6.9;
var downer = 2.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var bob = oldestbal;
var boobed = oldestbal;
var troll = 0;


function get(){
bellance = document.getElementById('pct_balance').value;
beatle = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var good = ((bellance-oldestbal).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	troll = troll+1;
	bob = parseFloat(bellance);
	fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if ((bellance<=(bob-(botplus*2)))&&(troll>=1)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor(bellance/tens))*tens);
	bob = parseFloat(bellance);
}
if ((bellance>=(bob+(botplus)))&&(troll>=2)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor(bellance/tens))*tens);
	bob = parseFloat(bellance);
}
if (((bellance-(base*100))<=(botplus*2))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor(bellance/tens))*tens);
	bob = parseFloat(bellance);
}
if (bellance<=(base*100)){
console.log(""you didnt win"");
return
}
if (bellance>=(oldestbal*2.4)) {
	console.log(""winner winner chicken dinner"");
	return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 1000);
}
get();
"
rX9xMGxz,SGCStargateDialer.lua,Wa1rus,Lua,Sunday 28th of January 2024 07:47:07 AM CDT,"interface = peripheral.find(""crystal_interface"")

function dial(address)
    local addressLength = #address
    
    if addressLength == 8 then
        interface.setChevronConfiguration({0, 1, 2, 3, 4, 6, 7, 8, 5})
    elseif addressLength == 9 then
        interface.setChevronConfiguration({0, 1, 2, 3, 4, 5, 6, 7, 8})
    end
   
    local start = interface.getChevronsEngaged() + 1
   
    for chevron = start,addressLength,1
    do
        local symbol = address[chevron]
        
        if chevron % 2 == 0 then
            interface.rotateClockwise(symbol)
        else
            interface.rotateAntiClockwise(symbol)
        end
        
        while(not interface.isCurrentSymbol(symbol))
        do
            sleep(0)
        end
		
        interface.endRotation();
        
        sleep(1)
        interface.openChevron()
		        
        sleep(0.5)
        if chevron < addressLength then
            interface.encodeChevron()
        end
		
        sleep(0.5)
        interface.closeChevron()
        sleep(1)
    end 
end

abydosAddress = {26, 6, 14, 31, 11, 29, 0}
chulakAddress = {8, 1, 22, 14, 36, 19, 0}
lanteaAddress = {18, 20, 1, 15, 14, 7, 19, 0}
abandonedCityAddress = {28, 20, 11, 23, 36, 24, 0}
netherAddress = {27, 23, 4, 34, 12, 28, 0}
cavumTenebraeAddress = {18, 7, 3, 36, 25, 15, 0}
endAddress = {13, 24, 2, 19, 3, 30, 0}


while true do
print(""GATE DIALER PROGRAM"")
print(""WARNING: Placeholder Interface\n"")
print(""Type a number and press enter\n"")
print(""Waiting for input:"")

print(""1 = Abydos"")
print(""2 = Chulak"")
print(""3 = Lantea"")
print(""4 = Cavum Tenebrae (Extremely dangerous)"")
print(""5 = Nether"")
print(""6 = End"")
print(""7 = Abandoned City (Laggy Don't go here)"")

input = tonumber(io.read())
sleep(0)

if input == 1 then
    dial(abydosAddress)
elseif input == 2 then
    dial(chulakAddress)
elseif input == 3 then
    dial(lanteaAddress)
elseif input == 4 then
    dial(cavumTenebraeAddress)
elseif input == 5 then
    dial(netherAddress)
elseif input == 6 then
    dial(endAddress)
-- elseif input == 7 then
--     dial(abandonedCityAddress)

else
    print(""Invalid input"")
end

term.clear()
term.setCursorPos(1,1)
end"
unM6a2Cq,Untitled,Suslick,C#,Sunday 28th of January 2024 07:33:34 AM CDT,"    class Program
    {
        static void Main(string[] args)
        {
            int arrayLengthOne = 6;
            int arrayLengthTwo = 4;

            string[] arrayNumberOne = new string[arrayLengthOne];
            string[] arrayNumberTwo = new string[arrayLengthTwo];

            FillNumbers(arrayNumberOne);
            FillNumbers(arrayNumberTwo);

            Print(arrayNumberOne);
            Print(arrayNumberTwo);

            List<int> newArray = new List<int>();

            JoinArray(newArray, arrayNumberOne);
            JoinArray(newArray, arrayNumberTwo);

            Console.WriteLine(string.Join("" "", newArray));

            Console.ReadKey();
        }

        private static void FillNumbers(string[] array, int maxNumber = 6, int minNumber = 0)
        {
            Random random = new Random(DateTime.Now.Millisecond);
            int randomNumber;

            for (int i = 0; i < array.Length; i++)
            {
                randomNumber = random.Next(minNumber, maxNumber + 1);
                array[i] = randomNumber.ToString();
            }
        }

        private static void Print(string[] arrayNumber)
        {
            Console.WriteLine(String.Join("" "", arrayNumber));
        }

        private static void JoinArray(List<int> newArray, string[] array) 
        {
            for (int i = 0; i < array.Length; i++)
            {
                int number = int.Parse(array[i]);

                if (!newArray.Contains(number))
                    newArray.Add(number);
            }
        }
    }"
Rci8B2tJ,for the hacker snowybot,coinwalk,JavaScript,Sunday 28th of January 2024 07:25:44 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((oldestbal/14).toFixed(8));
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 6.9;
var downer = 2.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var bob = oldestbal;
var boobed = oldestbal;
var troll = 0;


function get(){
bellance = document.getElementById('pct_balance').value;
beatle = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var good = ((bellance-oldestbal).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	troll = troll+1;
	bob = parseFloat(bellance);
	fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
	botplus = botplus*2;
	upper = 4.9;
	downer = 4.9;
	fart = parseFloat(bellance);
}
if ((bellance<=(bob-(botplus*2)))&&(troll>=1)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor(bellance/tens))*tens);
	bob = parseFloat(bellance);
}
if ((bellance>=(bob+(botplus)))&&(troll>=2)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor(bellance/tens))*tens);
	bob = parseFloat(bellance);
}
if ((bellance<=(botplus*2))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
	botplus = base;
	upper = 6.9;
	downer = 2.9;
	troll = 0;
	fart = ((Math.floor(bellance/tens))*tens);
	bob = parseFloat(bellance);
}
if (bellance>=(oldestbal*2.4)) {
	console.log(""winner winner chicken dinner"");
	return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 1000);
}
get();
"
UcLuANcj,for the hacker snowybot,coinwalk,JavaScript,Sunday 28th of January 2024 07:23:12 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((oldestbal/14).toFixed(8));
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 6.9;
var downer = 2.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var bob = oldestbal;
var boobed = oldestbal;
var troll = 0;


function get(){
bellance = document.getElementById('pct_balance').value;
beatle = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var good = ((bellance-oldestbal).toFixed(8));
console.log(""profit"");
console.log(good);
	if (bellance>(fart+(botplus*upper))){
		botplus = botplus*2;
		upper = 4.9;
		downer = 4.9;
		troll = troll+1;
		bob = parseFloat(bellance);
		fart = parseFloat(bellance);
	}
	if (bellance<(fart-(botplus*downer))){
		botplus = botplus*2;
		upper = 4.9;
		downer = 4.9;
		fart = parseFloat(bellance);
	}
	if ((bellance<=(bob-(botplus*2)))&&(troll>=1)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
		botplus = base;
		upper = 6.9;
		downer = 2.9;
		troll = 0;
		fart = ((Math.floor(bellance/tens))*tens);
		bob = parseFloat(bellance);
	}
	if ((bellance>=(bob+(botplus)))&&(troll>=2)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
		botplus = base;
		upper = 6.9;
		downer = 2.9;
		troll = 0;
		fart = ((Math.floor(bellance/tens))*tens);
		bob = parseFloat(bellance);
	}
	if ((bellance<=(botplus*2))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
		botplus = base;
		upper = 6.9;
		downer = 2.9;
		troll = 0;
		fart = ((Math.floor(bellance/tens))*tens);
		bob = parseFloat(bellance);
	}
	if (bellance>=(oldestbal*2.4)) {
	console.log(""winner winner chicken dinner"");
	return;
	}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 1000);
	}
get();
"
whFRdCMU,Untitled,skaram,C++,Sunday 28th of January 2024 07:22:15 AM CDT,"#include <bits/stdc++.h>

#ifndef Local
#define debug(...) 1337
#define endl '\n'
#endif

using namespace std;

#define int long long

typedef long long ll;
typedef long double ld;

#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()

template<typename T, typename U>
bool smin(T &a, U b) {
        if (a > b) {
                a = b;
                return true;
        }
        return false;
}

template<typename T, typename U>
bool smax(T &a, U b) {
        if (a < b) {
                a = b;
                return true;
        }
        return false;
}

const int maxn = 1e4 + 100;
vector <pair<int, int>> g[maxn];

int a, b;

const int inf = 1e15;

struct dsu {
        struct comp {
                int p, a = inf, b = inf;
                vector<int> v;
        } c[maxn];

        int p[maxn];

        dsu() {
                for (int i = 1; i < maxn; ++i)
                        p[i] = i, c[i].v = {i};
        }

        int find(int v) {
                return p[v] == v ? v : p[v] = find(p[v]);
        }

        int merge(int v, int u) {
                v = find(v), u = find(u);
                if (v == u)
                        return 0;
                if (u == a)
                        swap(v, u);
                if (u == b) {
                        if (v == a)
                                return 2;
                        swap(v, u);
                }
                if (v != a && v != b && sz(c[v].v) < sz(c[u].v))
                        swap(v, u);
                p[u] = v;
                for (int &i: c[u].v)
                        c[v].v.emplace_back(i);
                if (v == a) {
                        for (int &i: c[u].v)
                                for (auto &[j, w]: g[i])
                                        smin(c[find(j)].a, w);
                } else if (v == b) {
                        for (int &i: c[u].v)
                                for (auto &[j, w]: g[i])
                                        smin(c[find(j)].b, w);
                }
                smin(c[v].a, c[u].a);
                smin(c[v].b, c[u].b);
                c[u].v = {};
                return 1;
        }
};

void solve() {
        int n, m;
        cin >> n >> m;
        vector <tuple<int, int, int>> edges;
        int ans = inf;
        for (int i = 0, v, u, w; i < m; ++i) {
                cin >> v >> u >> w;
                g[v].emplace_back(u, w);
                g[u].emplace_back(v, w);
                edges.emplace_back(w, v, u);
        }
        cin >> a >> b;
        sort(all(edges));
        dsu dsu;
        for (int i = 1; i <= n; ++i) {
                int ta = (i == a ? 0 : inf), tb = (i == b ? 0 : inf);
                for (auto& [j, w] : g[i]) {
                        if (j == a)
                                smin(ta, w);
                        if (j == b)
                                smin(tb, w);
                }
                dsu.c[i].a = ta, dsu.c[i].b = tb;
                smin(ans, ta + tb);
        }
        for (auto& [w, v, u] : edges) {
                int f = dsu.merge(v, u);
                if (!f)
                        continue;
                if (f == 2) {
                        smin(ans, 3 * w);
                        break;
                }
                for (int i = 1; i < maxn; ++i) {
                        if (sz(dsu.c[i].v) && i != a && i != b) {
                                smin(ans, w * (1 + (i == a) + (i == b)) + dsu.c[i].a + dsu.c[i].b);
                        }
                }
        }
        cout << ans << endl;
}

signed main() {
        ios::sync_with_stdio(false), cin.tie(nullptr);

        int tt = 1;
//        cin >> tt;
        while (tt--)
                solve();

        return 0;
}"
