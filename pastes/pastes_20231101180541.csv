id,title,username,language,date,content
47BM4e7F,Info_Youtube_GoogleVideo.html,Thunder-Menu,HTML,Wednesday 1st of November 2023 12:55:07 PM CDT,"<!DOCTYPE html>
<html lang=""fr"">

<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Informations de flux vidéo YouTube et Détection de plateforme</title>
</head>

<body>

<h2 id=""platformLabel"">Enregistrement Vidéo et Audio</h2>

<input type=""text"" id=""youtubeUrl"" placeholder=""Entrez l'URL de la vidéo YouTube"">
<button onclick=""fetchHtmlContent()"">Obtenir le contenu HTML</button>
<button onclick=""saveHtmlContentToFile()"">Sauvegarder le contenu HTML</button>
<button onclick=""loadHtmlContentFromFile()"">Charger le contenu HTML depuis un fichier</button>
<h3>Contenu HTML:</h3>
<textarea id=""htmlOutput"" rows=""10"" cols=""50""></textarea>
<br>
<button onclick=""extractVideoInfo()"">Extraire les informations de flux vidéo</button>
<button onclick=""visitStreamUrl()"">Visiter l'URL</button> <!-- Bouton ajouté ici -->
<br>
<h3>Informations de flux vidéo:</h3>
<textarea id=""videoInfoOutput"" rows=""10"" cols=""50""></textarea>
<select id=""qualityDropdown""></select>

<script>
    let userAgent = navigator.userAgent || navigator.vendor || window.opera;

    if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {
        document.getElementById('platformLabel').innerText = ""Enregistrement Vidéo et Audio pour iPhone/iPad/iPod"";
    } else if (/android/i.test(userAgent)) {
        document.getElementById('platformLabel').innerText = ""Enregistrement Vidéo et Audio pour Android"";
    } else if (/Windows/.test(userAgent) && ('ontouchstart' in window || navigator.maxTouchPoints)) {
        document.getElementById('platformLabel').innerText = ""Enregistrement Vidéo et Audio pour Windows (Tactile)"";
    } else {
        document.getElementById('platformLabel').innerText = ""Enregistrement Vidéo et Audio pour autres plateformes"";
    }

    class StreamInfo {
        constructor() {
            this.Url = """";
            this.MimeType = """";
            this.Quality = """";
            this.Itag = 0;
            this.ContentLength = 0;
            this.Width = 0;
            this.Height = 0;
            this.Fps = 0;
        }
    }

    let downloadedHtmlContent = """";

    async function fetchHtmlContent() {
        const youtubeUrl = document.getElementById(""youtubeUrl"").value;
        downloadedHtmlContent = await downloadHtml(youtubeUrl);
        document.getElementById(""htmlOutput"").textContent = downloadedHtmlContent;
    }

    async function downloadHtml(url) {
        const corsProxy = ""https://cors-anywhere.herokuapp.com/"";
        const response = await fetch(corsProxy + url, {
            headers: {
                ""X-Requested-With"": ""XMLHttpRequest""
            }
        });
        if (!response.ok) {
            throw new Error('Erreur lors de la tentative de récupération du contenu.');
        }
        return await response.text();
    }

    function extractVideoInfo() {
        const streamInfos = getVideoStreamInfos(downloadedHtmlContent);
        const videoInfoOutput = document.getElementById(""videoInfoOutput"");
        const qualityDropdown = document.getElementById(""qualityDropdown"");
        videoInfoOutput.textContent = '';
        qualityDropdown.innerHTML = '';
        if (streamInfos && streamInfos.length > 0) {
            streamInfos.forEach(streamInfo => {
                const info = `Itag: ${streamInfo.Itag}\nURL: ${streamInfo.Url}\nMimeType: ${streamInfo.MimeType}\nQuality: ${streamInfo.Quality}\nWidth: ${streamInfo.Width}\nHeight: ${streamInfo.Height}\nContentLength: ${streamInfo.ContentLength}\nFps: ${streamInfo.Fps}\n\n`;
                videoInfoOutput.textContent += info;
                const option = document.createElement(""option"");
                option.value = streamInfo.Url;
                option.textContent = streamInfo.Quality;
                qualityDropdown.appendChild(option);
            });
        } else {
            videoInfoOutput.textContent = ""Aucune information de flux vidéo trouvée ou impossible de récupérer les données."";
        }
    }

    function getVideoStreamInfos(htmlContent) {
        const regex = /ytInitialPlayerResponse\s*=\s*({.*?});/;
        const match = htmlContent.match(regex);
        if (!match) {
            console.error('Impossible de trouver les informations de flux vidéo.');
            return [];
        }
        const json = JSON.parse(match[1]);
        const formats = json.streamingData && json.streamingData.formats;
        if (!formats) return [];
        return formats.map(format => {
            const streamInfo = new StreamInfo();
            streamInfo.Itag = format.itag;
            streamInfo.Url = format.url;
            streamInfo.MimeType = format.mimeType;
            streamInfo.Quality = format.qualityLabel || '';
            streamInfo.Width = format.width;
            streamInfo.Height = format.height;
            streamInfo.ContentLength = parseInt(format.contentLength) || 0;
            streamInfo.Fps = format.fps;
            return streamInfo;
        });
    }

    async function saveHtmlContentToFile() {
        try {
            const fileHandle = await window.showSaveFilePicker();
            const writable = await fileHandle.createWritable();
            await writable.write(downloadedHtmlContent);
            await writable.close();
            alert('Contenu HTML sauvegardé!');
        } catch (err) {
            console.error('Erreur lors de la sauvegarde du fichier:', err);
        }
    }

    async function loadHtmlContentFromFile() {
        try {
            const [fileHandle] = await window.showOpenFilePicker();
            const file = await fileHandle.getFile();
            const content = await file.text();
            document.getElementById(""htmlOutput"").textContent = content;
            downloadedHtmlContent = content;
        } catch (err) {
            console.error('Erreur lors de la lecture du fichier:', err);
        }
    }
    // Fonction ajoutée pour ouvrir l'URL du flux vidéo sélectionné
    function visitStreamUrl() {
        const selectedUrl = document.getElementById(""qualityDropdown"").value;
        if (selectedUrl) {
            window.open(selectedUrl, '_blank');
        } else {
            alert(""Veuillez extraire les informations de flux vidéo d'abord et sélectionner une qualité."");
        }
    }
</script>

<footer>
    <a href=""https://cors-anywhere.herokuapp.com/corsdemo"" target=""_blank"">Accédez à CORS Anywhere</a>
</footer>

</body>

</html>"
V8ZfsuQs,Untitled,jayankaghosh,JSON,Wednesday 1st of November 2023 12:50:52 PM CDT,"{""companyInfo"":{""name"":""Codilar Technologies Private Limited"",""alternateNames"":null,""location"":""Bangalore, Karnataka, India"",""website"":""http://www.codilar.com"",""phone"":""8884900505"",""heroImageUrl"":""https://d38k06t7m3x001.cloudfront.net/partnerdirectory/5662/backgroundImage-1642430438223"",""logoUrl"":""https://d38k06t7m3x001.cloudfront.net/partnerdirectory/5662/logo-1643799949745"",""level"":""Bronze"",""certifiedEmployees"":23,""credentials"":40,""certifications"":27,""specializations"":0,""shortDescription"":""Codilar is a digital commerce agency specializing in Magento and Progressive Web Apps (PWA). We build high-performing and extremely user-friendly shops for merchants that help them to skyrocket their conversions and revenue."",""longDescription"":""<p>Codilar was a dream that was visualized by 4, and has infected over 160+ hearts in the five years since we started! We always knew that there is more to e-commerce than just code, and that is exactly what we set out in search of! Back in 2012, there was hardly any expertise in Magento in the country, and we focused our attention on 100% quality and mastery of the platform. Today, we are still on the journey of disrupting status quo, and making e-commerce accessible. We are a team of 160+, mage-blooded and bold. Meet us https://www.codilar.com/about-us/ Capabilities: Magento PWA Pimcore Native &amp; Hybrid Mobile Apps Conversion Rate Optimization eCommerce SEO</p>"",""listingId"":""ed5ba03a-203b-11ed-b02c-0e9068926235"",""accentColor"":""#FF0000"",""contactUsHeader"":""Send a message"",""primaryContactName"":null,""primaryContactEmail"":null,""primaryContactPhone"":null,""crmId"":null,""status"":null,""type"":null,""globalParentName"":null,""globalParentId"":null},""addresses"":[{""name"":""Bangalore"",""address1"":""#703, 30th Main Road, BTM 2nd Stage"",""address2"":""Karnataka, Bangalore"",""city"":""Bangalore"",""state"":""Karnataka"",""country"":""India"",""countryId"":""in"",""regionId"":""asia-pacific"",""postalCode"":""560076"",""isHeadquarter"":true},{""name"":""Singapore"",""address1"":""Codilar Digital Pte Ltd  68 Circular Road, #02-01, 049422, Singapore"",""address2"":""Singapore"",""city"":""Singapore"",""state"":null,""country"":""Singapore"",""countryId"":""sg"",""regionId"":""asia-pacific"",""postalCode"":""049422"",""isHeadquarter"":false},{""name"":""UAE"",""address1"":""DTECH, Technohub Building, Dubai Silicon Oasis Authority, United Arab Emirates"",""address2"":""Dubai"",""city"":""Dubai"",""state"":null,""country"":""United Arab Emirates"",""countryId"":""ae"",""regionId"":""middle-east-africa"",""postalCode"":""000000"",""isHeadquarter"":false}],""industries"":[""Automotive"",""B2B High Tech"",""Consumer Packaged Goods"",""Education"",""Financial Services / Insurance"",""Government / Public Sector"",""Healthcare & Life Sciences"",""Manufacturing & Distribution"",""Media, Entertainment & Telecom"",""Other (HR / IT / Legal / etc.)"",""Retail"",""Travel & Hospitality""],""services"":[{""id"":""28d9191d-203c-11ed-b02c-0e9068926235"",""name"":""Application Development"",""website"":null,""description"":""Magento-based e-commerce solutions design and development to maintenance and support. We have the best fit service offerings for the existing or new e-commerce needs of your business!""},{""id"":""28d9197a-203c-11ed-b02c-0e9068926235"",""name"":""Application Hosting"",""website"":null,""description"":""Helps in deploying the application on a suitable server and ensures support.""},{""id"":""28d919d5-203c-11ed-b02c-0e9068926235"",""name"":""Creative Design / Media Optimization"",""website"":null,""description"":""Create stunning yet relatable customer experiences which ensure that the end result is coherent with the brand identity and positioning.""},{""id"":""28d91a3e-203c-11ed-b02c-0e9068926235"",""name"":""eCommerce Solutions / Platform"",""website"":null,""description"":""We create robust Magento-based storefronts for businesses, allowing them to take the market by a storm!""},{""id"":""28d91a9c-203c-11ed-b02c-0e9068926235"",""name"":""Mobile Strategy / Platform"",""website"":null,""description"":""Customers seek unique, exceptionally functional and simple to navigate mobile solutions and we help businesses to deliver their customers an engaging mobile experience.""},{""id"":""28d91af8-203c-11ed-b02c-0e9068926235"",""name"":""Personalization"",""website"":null,""description"":""Creating an experience that keeps the customers bound on your e-commerce site.""},{""id"":""28d91b55-203c-11ed-b02c-0e9068926235"",""name"":""Search Marketing & Optimization"",""website"":null,""description"":""Helps the customer in improving the business outcomes through the desired optimization.""},{""id"":""28d91bb2-203c-11ed-b02c-0e9068926235"",""name"":""Web Experience Design & Management"",""website"":null,""description"":""We believe that the web storefront is the soul of a business! This is why we dedicate a major part of our designing strategy to thorough research and data implementation to produce a truly user-centric experience.""}],""resources"":{""Video"":[{""id"":""19e697a0-203c-11ed-b02c-0e9068926235"",""name"":""Zwende and Codilar - Client Success Story"",""link"":""https://www.youtube.com/watch?v=vTW90FvLQq4"",""type"":""Video"",""description"":""Innu Nevatia is a co-founder of Zwende (https://www.zwende.com) which is an online platform that enables real-time customization and personalization of hand-crafted products.\\n\\nWe provided potential Magento solutions to Zwende that perfectly matched their requirements.\\n\\nHere are a few lines from Innu Nevatia:\\n\\n“I would absolutely recommend Codilar to anybody who is looking at a Magento focused solution. I think Codilar is one of the best partners to work with.“\\n\\n\\nWe at Codilar Technologies..."",""crmRecordId"":null,""year"":null,""directoryId"":""ed5ba03a-203b-11ed-b02c-0e9068926235""},{""id"":""19e69816-203c-11ed-b02c-0e9068926235"",""name"":""Campus Sutra and Codilar - Client Success Story"",""link"":""https://www.youtube.com/watch?v=HXzEYJj_Es0"",""type"":""Video"",""description"":""Aditya Agarwal is a co-founder of Campus Sutra which is an online merchandise company. It is a 6-year old company that made 1.6 crore in the first year and is expected to make 160 crores this year.\\n\\nCodilar has been the technology partner for Campus Sutra from the early days of the company.\\n\\nWe have been powering Campus Sutra's Magento platform from their early days, helping them scale from 5 orders to 1000 orders per day.\\n\\nHere are a few lines from Aditya Agarwal:\\n\\n“I remember one incident..."",""crmRecordId"":null,""year"":null,""directoryId"":""ed5ba03a-203b-11ed-b02c-0e9068926235""},{""id"":""19e69882-203c-11ed-b02c-0e9068926235"",""name"":""Kalyan Jewellers (Candere) and Codilar - Client Success Story"",""link"":""https://www.youtube.com/watch?v=45dtD6kKV_U"",""type"":""Video"",""description"":""Rupesh Jain, CEO of Candere by Kalyan Jewellers, explains the challenges they faced in scaling up their technology stack and how Codilar became their trusted partner."",""crmRecordId"":null,""year"":null,""directoryId"":""ed5ba03a-203b-11ed-b02c-0e9068926235""}]},""accreditedSolutions"":[],""expertise"":[{""name"":""Analytics"",""totalCertifications"":1,""globalSpecialization"":false,""regions"":[{""name"":""APAC"",""specialized"":false,""roles"":[{""name"":""Sales - Professional"",""certifiedEmployees"":1}]}]},{""name"":""Audience Manager"",""totalCertifications"":1,""globalSpecialization"":false,""regions"":[{""name"":""APAC"",""specialized"":false,""roles"":[{""name"":""Sales - Professional"",""certifiedEmployees"":1}]}]},{""name"":""Commerce"",""totalCertifications"":26,""globalSpecialization"":false,""regions"":[{""name"":""APAC"",""specialized"":false,""roles"":[{""name"":""Business Practitioner - Expert"",""certifiedEmployees"":1},{""name"":""Business Practitioner - Professional"",""certifiedEmployees"":1},{""name"":""Developer - Expert"",""certifiedEmployees"":4},{""name"":""Developer - Professional"",""certifiedEmployees"":19},{""name"":""Sales - Professional"",""certifiedEmployees"":1}]}]},{""name"":""Customer Journey Analytics"",""totalCertifications"":1,""globalSpecialization"":false,""regions"":[{""name"":""APAC"",""specialized"":false,""roles"":[{""name"":""Sales - Professional"",""certifiedEmployees"":1}]}]},{""name"":""Experience Manager - Assets"",""totalCertifications"":1,""globalSpecialization"":false,""regions"":[{""name"":""APAC"",""specialized"":false,""roles"":[{""name"":""Sales - Professional"",""certifiedEmployees"":1}]}]},{""name"":""Experience Manager - Sites"",""totalCertifications"":4,""globalSpecialization"":false,""regions"":[{""name"":""APAC"",""specialized"":false,""roles"":[{""name"":""Business Practitioner - Professional"",""certifiedEmployees"":1},{""name"":""Developer - Professional"",""certifiedEmployees"":1},{""name"":""Front-End Developer - Professional"",""certifiedEmployees"":1},{""name"":""Sales - Professional"",""certifiedEmployees"":1}]}]},{""name"":""Experience Platform"",""totalCertifications"":1,""globalSpecialization"":false,""regions"":[{""name"":""APAC"",""specialized"":false,""roles"":[{""name"":""Sales - Professional"",""certifiedEmployees"":1}]}]},{""name"":""Journey Optimizer"",""totalCertifications"":1,""globalSpecialization"":false,""regions"":[{""name"":""APAC"",""specialized"":false,""roles"":[{""name"":""Sales - Professional"",""certifiedEmployees"":1}]}]},{""name"":""Real-Time CDP"",""totalCertifications"":2,""globalSpecialization"":false,""regions"":[{""name"":""APAC"",""specialized"":false,""roles"":[{""name"":""Sales - Professional"",""certifiedEmployees"":2}]}]},{""name"":""Target"",""totalCertifications"":1,""globalSpecialization"":false,""regions"":[{""name"":""APAC"",""specialized"":false,""roles"":[{""name"":""Sales - Professional"",""certifiedEmployees"":1}]}]},{""name"":""Workfront"",""totalCertifications"":1,""globalSpecialization"":false,""regions"":[{""name"":""APAC"",""specialized"":false,""roles"":[{""name"":""Developer - Professional"",""certifiedEmployees"":1}]}]}],""deployments"":{},""totalCustomerDeploymentCount"":0}"
y8M0YGz6,Counter,iamareverie,JavaScript,Wednesday 1st of November 2023 12:31:49 PM CDT,"<script>
    import Vue from 'vue';
    import VueToast from 'vue-toast-notification';
    import 'vue-toast-notification/dist/theme-sugar.css';
    
    Vue.use(VueToast);
    let userInput, checkHashTag, result;
    
    export default {
        data() {
            return {
                form_input: '',
                caption_length: 0,
                caption_truncation: 0,
                hash_tag: 0,
            }
        },
        methods: {
            zconvert: function(event) {
                this.checkText();
            },
            checkText: function(event) {
                userInput = this.form_input;
                // console.log(userInput.split(""\u2028""));
                let charLength = userInput.length;
                
                this.caption_length = charLength;
                this.caption_truncation = charLength;

                checkHashTag = checkHashtag(userInput);
                this.hash_tag = checkHashTag;

                result = insertInvisibleSpace(userInput);
                this.form_input = result;
            },
            clear_text: function(event) {
                this.form_input = '';
                this.caption_length = 0;
                this.caption_truncation = 0;
                this.hash_tag = 0;
            },
            copy_text: function(event) {
                if(this.form_input != '') {
                    const element = this.$refs.form_input;
                    element.select();
                    element.setSelectionRange(0, 99999);
                    document.execCommand('copy');
                    Vue.$toast.open({
                        message: 'Text has been copied to clipboard.',
                        type: 'success',
                        position: 'bottom-right',
                        dismissible: true,
                    });
                }
                else {
                    Vue.$toast.open({
                        message: 'No text available.',
                        type: 'warning',
                        position: 'bottom-right',
                        dismissible: true,
                    });
                }
            },
        },
    }
    
    function insertInvisibleSpace(form_input) {
        while(form_input.indexOf(""\n\n"") != -1) {
            // form_input = form_input.replace(""\n\n"", ""\nã…¤\n"");
            // form_input = form_input.replace(""\n\n"", ""\n \n"");
            form_input = form_input.replace(""\n\n"", ""⠀\n"");
            // form_input = form_input.replace(""\n\n"", ""â£"");
            // form_input = form_input.replace(""/\u2800/g"","""").replace(""/\n/g"", ""⠀\n"");
            // form_input = form_input.split(""\u2028"").join(""\n"");
            // form_input = form_input.replace(/\n/g,' ');
        }
        return form_input;
    }

    function checkHashtag(form_input) {
        let string = form_input; 
        let result = string.match(/#/g);
        
        if (result === null){
            return ""0"";
        }
        return result.length;
    }
</script>"
0mkP8PAy,Nigerian scammers [1-11-2/2023],bombaires,AIMMS,Wednesday 1st of November 2023 12:23:11 PM CDT,"<a href=""mailto:marj.1rte.es@gmail.com"">marj.1rte.es@gmail.com</a>
<a href=""mailto:marj..1.rte..e.s@gmail.com"">marj..1.rte..e.s@gmail.com</a>
<a href=""mailto:marj...1.rte.e.s@gmail.com"">marj...1.rte.e.s@gmail.com</a>
<a href=""mailto:m.a.r.j...1rt.e..e.s@gmail.com"">m.a.r.j...1rt.e..e.s@gmail.com</a>
<a href=""mailto:m.a.r.j.1.rt.e..es@gmail.com"">m.a.r.j.1.rt.e..es@gmail.com</a>
<a href=""mailto:m.ar.j.1.rt.e..es@gmail.com"">m.ar.j.1.rt.e..es@gmail.com</a>
<a href=""mailto:m.ar.j.1rte..e.s@gmail.com"">m.ar.j.1rte..e.s@gmail.com</a>
<a href=""mailto:marj..1.rte...es@gmail.com"">marj..1.rte...es@gmail.com</a>
<a href=""mailto:m.ar.j...1.r.te.es@gmail.com"">m.ar.j...1.r.te.es@gmail.com</a>
<a href=""mailto:mar.j...1r.te..e.s@gmail.com"">mar.j...1r.te..e.s@gmail.com</a>
<a href=""mailto:m.arj..1rt.e..e.s@gmail.com"">m.arj..1rt.e..e.s@gmail.com</a>
<a href=""mailto:m.ar.j.1rt.e.es@gmail.com"">m.ar.j.1rt.e.es@gmail.com</a>
<a href=""mailto:mar.j..1.r.te.e.s@gmail.com"">mar.j..1.r.te.e.s@gmail.com</a>
<a href=""mailto:ma.rj..1.r.t.e..e.s@gmail.com"">ma.rj..1.r.t.e..e.s@gmail.com</a>
<a href=""mailto:ma.rj..1.rt.e..e.s@gmail.com"">ma.rj..1.rt.e..e.s@gmail.com</a>
<a href=""mailto:marj...1.r.te.es@gmail.com"">marj...1.r.te.es@gmail.com</a>
<a href=""mailto:m.a.r.j.1r.te...es@gmail.com"">m.a.r.j.1r.te...es@gmail.com</a>
<a href=""mailto:m.arj..1rt.e..es@gmail.com"">m.arj..1rt.e..es@gmail.com</a>
<a href=""mailto:marj..1rt.e...es@gmail.com"">marj..1rt.e...es@gmail.com</a>
<a href=""mailto:mar.j..1r.te.es@gmail.com"">mar.j..1r.te.es@gmail.com</a>
<a href=""mailto:m.ar.j..1.r.te...e.s@gmail.com"">m.ar.j..1.r.te...e.s@gmail.com</a>
<a href=""mailto:marj..1.r.te..e.s@gmail.com"">marj..1.r.te..e.s@gmail.com</a>
<a href=""mailto:m.a.r.j...1.r.te..e.s@gmail.com"">m.a.r.j...1.r.te..e.s@gmail.com</a>
<a href=""mailto:mar.j.1r.t.e..e.s@gmail.com"">mar.j.1r.t.e..e.s@gmail.com</a>
<a href=""mailto:ma.rj..1.r.te...es@gmail.com"">ma.rj..1.r.te...es@gmail.com</a>
<a href=""mailto:ma.r.j.1r.t.e..e.s@gmail.com"">ma.r.j.1r.t.e..e.s@gmail.com</a>
<a href=""mailto:marj..1r.te..es@gmail.com"">marj..1r.te..es@gmail.com</a>
<a href=""mailto:m.ar.j...1rt.e.e.s@gmail.com"">m.ar.j...1rt.e.e.s@gmail.com</a>
<a href=""mailto:m.ar.j.1rte...e.s@gmail.com"">m.ar.j.1rte...e.s@gmail.com</a>
<a href=""mailto:m.a.rj.1.r.te...e.s@gmail.com"">m.a.rj.1.r.te...e.s@gmail.com</a>
<a href=""mailto:ma.rj.1.r.te...es@gmail.com"">ma.rj.1.r.te...es@gmail.com</a>
<a href=""mailto:m.a.rj...1.rt.e...e.s@gmail.com"">m.a.rj...1.rt.e...e.s@gmail.com</a>
<a href=""mailto:mar.j..1rte..e.s@gmail.com"">mar.j..1rte..e.s@gmail.com</a>
<a href=""mailto:m.arj...1.r.t.e.es@gmail.com"">m.arj...1.r.t.e.es@gmail.com</a>
<a href=""mailto:mar.j..1.rte..es@gmail.com"">mar.j..1.rte..es@gmail.com</a>
<a href=""mailto:mar.j.1r.t.e.es@gmail.com"">mar.j.1r.t.e.es@gmail.com</a>
<a href=""mailto:m.ar.j...1.rt.e.e.s@gmail.com"">m.ar.j...1.rt.e.e.s@gmail.com</a>
<a href=""mailto:m.ar.j..1rt.e..es@gmail.com"">m.ar.j..1rt.e..es@gmail.com</a>
<a href=""mailto:ma.r.j.1rte..es@gmail.com"">ma.r.j.1rte..es@gmail.com</a>
<a href=""mailto:m.a.rj.1.rt.e..es@gmail.com"">m.a.rj.1.rt.e..es@gmail.com</a>
<a href=""mailto:m.arj..1rt.e..e.s@gmail.com"">m.arj..1rt.e..e.s@gmail.com</a>
<a href=""mailto:mar.j..1r.te.es@gmail.com"">mar.j..1r.te.es@gmail.com</a>
<a href=""mailto:ma.r.j..1r.te..e.s@gmail.com"">ma.r.j..1r.te..e.s@gmail.com</a>
<a href=""mailto:m.a.r.j.1rt.e.es@gmail.com"">m.a.r.j.1rt.e.es@gmail.com</a>
<a href=""mailto:ma.rj..1r.t.e...es@gmail.com"">ma.rj..1r.t.e...es@gmail.com</a>
<a href=""mailto:m.arj...1r.t.e...e.s@gmail.com"">m.arj...1r.t.e...e.s@gmail.com</a>
<a href=""mailto:mar.j.1.rt.e...es@gmail.com"">mar.j.1.rt.e...es@gmail.com</a>
<a href=""mailto:marj...1.r.te.e.s@gmail.com"">marj...1.r.te.e.s@gmail.com</a>
<a href=""mailto:m.a.r.j...1.rte.es@gmail.com"">m.a.r.j...1.rte.es@gmail.com</a>
<a href=""mailto:marj..1.rt.e.e.s@gmail.com"">marj..1.rt.e.e.s@gmail.com</a>
<a href=""mailto:m.ar.j..1rte.e.s@gmail.com"">m.ar.j..1rte.e.s@gmail.com</a>
<a href=""mailto:m.ar.j..1.r.t.e...e.s@gmail.com"">m.ar.j..1.r.t.e...e.s@gmail.com</a>
<a href=""mailto:m.a.rj..1rte.es@gmail.com"">m.a.rj..1rte.es@gmail.com</a>
<a href=""mailto:m.a.rj.1r.te..es@gmail.com"">m.a.rj.1r.te..es@gmail.com</a>
<a href=""mailto:marj..1r.t.e...e.s@gmail.com"">marj..1r.t.e...e.s@gmail.com</a>
<a href=""mailto:marj..1.rte...es@gmail.com"">marj..1.rte...es@gmail.com</a>
<a href=""mailto:ma.rj.1.r.t.e..e.s@gmail.com"">ma.rj.1.r.t.e..e.s@gmail.com</a>
<a href=""mailto:mar.j..1.r.t.e..es@gmail.com"">mar.j..1.r.t.e..es@gmail.com</a>
<a href=""mailto:m.a.r.j...1.r.te...es@gmail.com"">m.a.r.j...1.r.te...es@gmail.com</a>
<a href=""mailto:ma.rj..1rte..es@gmail.com"">ma.rj..1rte..es@gmail.com</a>
<a href=""mailto:ma.rj...1.r.te..e.s@gmail.com"">ma.rj...1.r.te..e.s@gmail.com</a>
<a href=""mailto:m.arj.1.r.te.e.s@gmail.com"">m.arj.1.r.te.e.s@gmail.com</a>
<a href=""mailto:marj..1.r.t.e...e.s@gmail.com"">marj..1.r.t.e...e.s@gmail.com</a>
<a href=""mailto:m.a.r.j.1rte.e.s@gmail.com"">m.a.r.j.1rte.e.s@gmail.com</a>
<a href=""mailto:mar.j.1.rte..es@gmail.com"">mar.j.1.rte..es@gmail.com</a>
<a href=""mailto:m.ar.j...1rt.e..es@gmail.com"">m.ar.j...1rt.e..es@gmail.com</a>
<a href=""mailto:m.a.rj.1.r.t.e.es@gmail.com"">m.a.rj.1.r.t.e.es@gmail.com</a>
<a href=""mailto:ma.r.j..1rte..e.s@gmail.com"">ma.r.j..1rte..e.s@gmail.com</a>
<a href=""mailto:m.a.rj.1.r.t.e...e.s@gmail.com"">m.a.rj.1.r.t.e...e.s@gmail.com</a>
<a href=""mailto:mar.j...1.rt.e.es@gmail.com"">mar.j...1.rt.e.es@gmail.com</a>
<a href=""mailto:m.ar.j.1.r.te.es@gmail.com"">m.ar.j.1.r.te.es@gmail.com</a>
<a href=""mailto:marj...1r.t.e...e.s@gmail.com"">marj...1r.t.e...e.s@gmail.com</a>
<a href=""mailto:m.a.rj.1rt.e...es@gmail.com"">m.a.rj.1rt.e...es@gmail.com</a>
<a href=""mailto:m.a.rj..1.r.te..es@gmail.com"">m.a.rj..1.r.te..es@gmail.com</a>
<a href=""mailto:m.a.r.j..1.rt.e..e.s@gmail.com"">m.a.r.j..1.rt.e..e.s@gmail.com</a>
<a href=""mailto:m.ar.j.1r.te..es@gmail.com"">m.ar.j.1r.te..es@gmail.com</a>
<a href=""mailto:m.a.rj.1.r.te..es@gmail.com"">m.a.rj.1.r.te..es@gmail.com</a>
<a href=""mailto:ma.r.j.1.r.te...es@gmail.com"">ma.r.j.1.r.te...es@gmail.com</a>
<a href=""mailto:m.ar.j..1r.t.e...es@gmail.com"">m.ar.j..1r.t.e...es@gmail.com</a>
<a href=""mailto:ma.rj...1r.te..es@gmail.com"">ma.rj...1r.te..es@gmail.com</a>
<a href=""mailto:mar.j.1.rte...es@gmail.com"">mar.j.1.rte...es@gmail.com</a>
<a href=""mailto:m.arj...1rt.e..e.s@gmail.com"">m.arj...1rt.e..e.s@gmail.com</a>
<a href=""mailto:m.ar.j..1r.t.e..es@gmail.com"">m.ar.j..1r.t.e..es@gmail.com</a>
<a href=""mailto:marj...1r.te.e.s@gmail.com"">marj...1r.te.e.s@gmail.com</a>
<a href=""mailto:marj.1r.t.e.e.s@gmail.com"">marj.1r.t.e.e.s@gmail.com</a>
<a href=""mailto:marj...1.rt.e..es@gmail.com"">marj...1.rt.e..es@gmail.com</a>
<a href=""mailto:m.ar.j.1.rt.e..e.s@gmail.com"">m.ar.j.1.rt.e..e.s@gmail.com</a>
<a href=""mailto:ma.r.j...1.rte..e.s@gmail.com"">ma.r.j...1.rte..e.s@gmail.com</a>
<a href=""mailto:m.ar.j..1r.te.e.s@gmail.com"">m.ar.j..1r.te.e.s@gmail.com</a>
<a href=""mailto:m.arj..1r.t.e..e.s@gmail.com"">m.arj..1r.t.e..e.s@gmail.com</a>
<a href=""mailto:m.a.r.j..1.r.te...e.s@gmail.com"">m.a.r.j..1.r.te...e.s@gmail.com</a>
<a href=""mailto:mar.j..1.r.te...es@gmail.com"">mar.j..1.r.te...es@gmail.com</a>
<a href=""mailto:m.arj.1r.te..e.s@gmail.com"">m.arj.1r.te..e.s@gmail.com</a>
<a href=""mailto:marj...1rte.es@gmail.com"">marj...1rte.es@gmail.com</a>
<a href=""mailto:ma.rj...1.r.te.es@gmail.com"">ma.rj...1.r.te.es@gmail.com</a>
<a href=""mailto:marj..1.r.t.e..e.s@gmail.com"">marj..1.r.t.e..e.s@gmail.com</a>
<a href=""mailto:m.arj...1r.t.e..es@gmail.com"">m.arj...1r.t.e..es@gmail.com</a>
<a href=""mailto:ma.r.j...1r.te...e.s@gmail.com"">ma.r.j...1r.te...e.s@gmail.com</a>
<a href=""mailto:marj..1r.t.e..e.s@gmail.com"">marj..1r.t.e..e.s@gmail.com</a>
<a href=""mailto:m.arj.1rte.es@gmail.com"">m.arj.1rte.es@gmail.com</a>
<a href=""mailto:mar.j..1.r.te...e.s@gmail.com"">mar.j..1.r.te...e.s@gmail.com</a>
<a href=""mailto:m.a.rj..1.r.t.e..es@gmail.com"">m.a.rj..1.r.t.e..es@gmail.com</a>
<a href=""mailto:m.a.r.j.1.rt.e..e.s@gmail.com"">m.a.r.j.1.rt.e..e.s@gmail.com</a>
<a href=""mailto:ma.r.j.1rt.e...es@gmail.com"">ma.r.j.1rt.e...es@gmail.com</a>
<a href=""mailto:m.ar.j..1r.te.es@gmail.com"">m.ar.j..1r.te.es@gmail.com</a>
<a href=""mailto:marj..1r.t.e..e.s@gmail.com"">marj..1r.t.e..e.s@gmail.com</a>
<a href=""mailto:m.a.r.j...1r.t.e..es@gmail.com"">m.a.r.j...1r.t.e..es@gmail.com</a>
<a href=""mailto:mar.j..1r.t.e..e.s@gmail.com"">mar.j..1r.t.e..e.s@gmail.com</a>
<a href=""mailto:ma.r.j..1.rte..e.s@gmail.com"">ma.r.j..1.rte..e.s@gmail.com</a>
<a href=""mailto:m.arj..1.r.t.e..es@gmail.com"">m.arj..1.r.t.e..es@gmail.com</a>
<a href=""mailto:marj..1.rt.e...es@gmail.com"">marj..1.rt.e...es@gmail.com</a>
<a href=""mailto:ma.r.j..1.rt.e..e.s@gmail.com"">ma.r.j..1.rt.e..e.s@gmail.com</a>
<a href=""mailto:m.a.r.j.1r.t.e...es@gmail.com"">m.a.r.j.1r.t.e...es@gmail.com</a>
<a href=""mailto:marj..1r.te...e.s@gmail.com"">marj..1r.te...e.s@gmail.com</a>
<a href=""mailto:ma.r.j..1rt.e.es@gmail.com"">ma.r.j..1rt.e.es@gmail.com</a>
<a href=""mailto:m.a.r.j...1.r.t.e..e.s@gmail.com"">m.a.r.j...1.r.t.e..e.s@gmail.com</a>
<a href=""mailto:m.arj.1.rte...e.s@gmail.com"">m.arj.1.rte...e.s@gmail.com</a>
<a href=""mailto:m.arj...1.r.t.e...es@gmail.com"">m.arj...1.r.t.e...es@gmail.com</a>
<a href=""mailto:mar.j..1.r.t.e.e.s@gmail.com"">mar.j..1.r.t.e.e.s@gmail.com</a>
<a href=""mailto:m.a.r.j..1rt.e...e.s@gmail.com"">m.a.r.j..1rt.e...e.s@gmail.com</a>
<a href=""mailto:m.a.r.j..1.r.te..e.s@gmail.com"">m.a.r.j..1.r.te..e.s@gmail.com</a>
<a href=""mailto:mar.j..1.r.te..e.s@gmail.com"">mar.j..1.r.te..e.s@gmail.com</a>
<a href=""mailto:ma.rj...1rte.e.s@gmail.com"">ma.rj...1rte.e.s@gmail.com</a>
<a href=""mailto:ma.r.j...1.r.t.e...e.s@gmail.com"">ma.r.j...1.r.t.e...e.s@gmail.com</a>
<a href=""mailto:m.a.rj...1.rte...e.s@gmail.com"">m.a.rj...1.rte...e.s@gmail.com</a>
<a href=""mailto:ma.r.j.1.r.t.e..e.s@gmail.com"">ma.r.j.1.r.t.e..e.s@gmail.com</a>
<a href=""mailto:ma.rj..1rt.e.es@gmail.com"">ma.rj..1rt.e.es@gmail.com</a>
<a href=""mailto:ma.rj..1.r.t.e..es@gmail.com"">ma.rj..1.r.t.e..es@gmail.com</a>
<a href=""mailto:m.a.rj..1.rt.e.e.s@gmail.com"">m.a.rj..1.rt.e.e.s@gmail.com</a>
<a href=""mailto:ma.r.j...1.r.t.e..es@gmail.com"">ma.r.j...1.r.t.e..es@gmail.com</a>
<a href=""mailto:m.a.r.j..1.rte..es@gmail.com"">m.a.r.j..1.rte..es@gmail.com</a>
<a href=""mailto:mar.j..1rte.e.s@gmail.com"">mar.j..1rte.e.s@gmail.com</a>
<a href=""mailto:m.a.rj..1.r.te..e.s@gmail.com"">m.a.rj..1.r.te..e.s@gmail.com</a>
<a href=""mailto:m.a.rj..1.r.t.e..e.s@gmail.com"">m.a.rj..1.r.t.e..e.s@gmail.com</a>
<a href=""mailto:m.ar.j...1.r.t.e..e.s@gmail.com"">m.ar.j...1.r.t.e..e.s@gmail.com</a>
<a href=""mailto:ma.rj...1r.te..es@gmail.com"">ma.rj...1r.te..es@gmail.com</a>
<a href=""mailto:m.arj.1r.t.e...es@gmail.com"">m.arj.1r.t.e...es@gmail.com</a>
<a href=""mailto:m.a.rj.1.rt.e...es@gmail.com"">m.a.rj.1.rt.e...es@gmail.com</a>
<a href=""mailto:m.a.rj...1rt.e..es@gmail.com"">m.a.rj...1rt.e..es@gmail.com</a>
<a href=""mailto:m.a.r.j..1.r.t.e.es@gmail.com"">m.a.r.j..1.r.t.e.es@gmail.com</a>
<a href=""mailto:mar.j.1.r.t.e..es@gmail.com"">mar.j.1.r.t.e..es@gmail.com</a>
<a href=""mailto:m.ar.j...1.r.te...e.s@gmail.com"">m.ar.j...1.r.te...e.s@gmail.com</a>
<a href=""mailto:ma.r.j.1.rt.e.es@gmail.com"">ma.r.j.1.rt.e.es@gmail.com</a>
<a href=""mailto:marj..1r.t.e..es@gmail.com"">marj..1r.t.e..es@gmail.com</a>
<a href=""mailto:m.ar.j..1.rt.e.es@gmail.com"">m.ar.j..1.rt.e.es@gmail.com</a>
<a href=""mailto:ma.r.j..1.r.te..es@gmail.com"">ma.r.j..1.r.te..es@gmail.com</a>
<a href=""mailto:m.ar.j..1rte.es@gmail.com"">m.ar.j..1rte.es@gmail.com</a>
<a href=""mailto:ma.rj..1r.te..es@gmail.com"">ma.rj..1r.te..es@gmail.com</a>
<a href=""mailto:m.arj..1.r.te..es@gmail.com"">m.arj..1.r.te..es@gmail.com</a>
<a href=""mailto:ma.r.j..1.rt.e.es@gmail.com"">ma.r.j..1.rt.e.es@gmail.com</a>
<a href=""mailto:m.ar.j..1r.te..e.s@gmail.com"">m.ar.j..1r.te..e.s@gmail.com</a>
<a href=""mailto:m.a.rj..1.rt.e...e.s@gmail.com"">m.a.rj..1.rt.e...e.s@gmail.com</a>
<a href=""mailto:ma.rj..1rte.e.s@gmail.com"">ma.rj..1rte.e.s@gmail.com</a>
<a href=""mailto:ma.rj...1.rt.e.e.s@gmail.com"">ma.rj...1.rt.e.e.s@gmail.com</a>
<a href=""mailto:ma.r.j..1r.t.e...es@gmail.com"">ma.r.j..1r.t.e...es@gmail.com</a>
<a href=""mailto:m.a.r.j.1rt.e..e.s@gmail.com"">m.a.r.j.1rt.e..e.s@gmail.com</a>
<a href=""mailto:ma.r.j..1.r.t.e.e.s@gmail.com"">ma.r.j..1.r.t.e.e.s@gmail.com</a>
<a href=""mailto:ma.r.j..1.r.t.e..es@gmail.com"">ma.r.j..1.r.t.e..es@gmail.com</a>
<a href=""mailto:ma.r.j...1rt.e...es@gmail.com"">ma.r.j...1rt.e...es@gmail.com</a>
<a href=""mailto:m.a.r.j...1rt.e..es@gmail.com"">m.a.r.j...1rt.e..es@gmail.com</a>
<a href=""mailto:m.ar.j..1.r.te..es@gmail.com"">m.ar.j..1.r.te..es@gmail.com</a>
<a href=""mailto:m.arj..1r.te..es@gmail.com"">m.arj..1r.te..es@gmail.com</a>
<a href=""mailto:ma.rj...1r.t.e.es@gmail.com"">ma.rj...1r.t.e.es@gmail.com</a>
<a href=""mailto:mar.j..1.r.te..e.s@gmail.com"">mar.j..1.r.te..e.s@gmail.com</a>
<a href=""mailto:ma.rj...1r.t.e...e.s@gmail.com"">ma.rj...1r.t.e...e.s@gmail.com</a>
<a href=""mailto:m.arj..1.r.te...es@gmail.com"">m.arj..1.r.te...es@gmail.com</a>
<a href=""mailto:ma.r.j..1.rt.e...e.s@gmail.com"">ma.r.j..1.rt.e...e.s@gmail.com</a>
<a href=""mailto:m.a.r.j.1rte..e.s@gmail.com"">m.a.r.j.1rte..e.s@gmail.com</a>
<a href=""mailto:m.a.r.j..1rt.e..es@gmail.com"">m.a.r.j..1rt.e..es@gmail.com</a>
<a href=""mailto:marj..1.r.t.e..es@gmail.com"">marj..1.r.t.e..es@gmail.com</a>
<a href=""mailto:m.arj..1.rte...es@gmail.com"">m.arj..1.rte...es@gmail.com</a>
<a href=""mailto:m.ar.j..1.rte..es@gmail.com"">m.ar.j..1.rte..es@gmail.com</a>
<a href=""mailto:m.ar.j..1.rt.e.es@gmail.com"">m.ar.j..1.rt.e.es@gmail.com</a>
<a href=""mailto:m.arj..1.r.t.e.e.s@gmail.com"">m.arj..1.r.t.e.e.s@gmail.com</a>
<a href=""mailto:m.a.rj..1.r.te..es@gmail.com"">m.a.rj..1.r.te..es@gmail.com</a>
<a href=""mailto:m.ar.j..1.r.te...es@gmail.com"">m.ar.j..1.r.te...es@gmail.com</a>
<a href=""mailto:m.arj..1rte..es@gmail.com"">m.arj..1rte..es@gmail.com</a>
<a href=""mailto:mar.j..1r.t.e..es@gmail.com"">mar.j..1r.t.e..es@gmail.com</a>
<a href=""mailto:m.ar.j.1r.t.e...es@gmail.com"">m.ar.j.1r.t.e...es@gmail.com</a>
<a href=""mailto:m.arj..1.rt.e..es@gmail.com"">m.arj..1.rt.e..es@gmail.com</a>
<a href=""mailto:m.a.r.j..1.r.te..es@gmail.com"">m.a.r.j..1.r.te..es@gmail.com</a>
<a href=""mailto:m.a.r.j.1rt.e...e.s@gmail.com"">m.a.r.j.1rt.e...e.s@gmail.com</a>
<a href=""mailto:m.a.rj..1.r.t.e..es@gmail.com"">m.a.rj..1.r.t.e..es@gmail.com</a>
<a href=""mailto:m.arj...1r.te.es@gmail.com"">m.arj...1r.te.es@gmail.com</a>
<a href=""mailto:m.arj.1.rt.e..e.s@gmail.com"">m.arj.1.rt.e..e.s@gmail.com</a>
<a href=""mailto:marj..1rte.e.s@gmail.com"">marj..1rte.e.s@gmail.com</a>
<a href=""mailto:ma.r.j...1.r.t.e.es@gmail.com"">ma.r.j...1.r.t.e.es@gmail.com</a>
<a href=""mailto:m.a.rj.1r.t.e..es@gmail.com"">m.a.rj.1r.t.e..es@gmail.com</a>
<a href=""mailto:marj.1r.t.e..es@gmail.com"">marj.1r.t.e..es@gmail.com</a>
<a href=""mailto:m.arj..1rte.es@gmail.com"">m.arj..1rte.es@gmail.com</a>
<a href=""mailto:mar.j..1.r.t.e..e.s@gmail.com"">mar.j..1.r.t.e..e.s@gmail.com</a>
<a href=""mailto:m.ar.j..1.r.t.e..e.s@gmail.com"">m.ar.j..1.r.t.e..e.s@gmail.com</a>
<a href=""mailto:m.arj..1.rt.e..es@gmail.com"">m.arj..1.rt.e..es@gmail.com</a>
<a href=""mailto:m.arj..1r.te...e.s@gmail.com"">m.arj..1r.te...e.s@gmail.com</a>
<a href=""mailto:ma.rj.1rte..es@gmail.com"">ma.rj.1rte..es@gmail.com</a>
<a href=""mailto:m.arj.1rt.e..e.s@gmail.com"">m.arj.1rt.e..e.s@gmail.com</a>
<a href=""mailto:ma.r.j..1.r.t.e..es@gmail.com"">ma.r.j..1.r.t.e..es@gmail.com</a>
<a href=""mailto:mar.j..1.rte...es@gmail.com"">mar.j..1.rte...es@gmail.com</a>
<a href=""mailto:m.ar.j...1.r.te.e.s@gmail.com"">m.ar.j...1.r.te.e.s@gmail.com</a>
<a href=""mailto:ma.rj...1r.te.es@gmail.com"">ma.rj...1r.te.es@gmail.com</a>
<a href=""mailto:m.arj..1r.te.e.s@gmail.com"">m.arj..1r.te.e.s@gmail.com</a>
<a href=""mailto:dhlc283@gmail.com"">dhlc283@gmail.com</a>
<a href=""mailto:dh.lc.2.8.3@gmail.com"">dh.lc.2.8.3@gmail.com</a>
<a href=""mailto:d.hl.c2.83@gmail.com"">d.hl.c2.83@gmail.com</a>
<a href=""mailto:dhl.c.2.83@gmail.com"">dhl.c.2.83@gmail.com</a>
<a href=""mailto:dhlc.283@gmail.com"">dhlc.283@gmail.com</a>
<a href=""mailto:dhl.c.28.3@gmail.com"">dhl.c.28.3@gmail.com</a>
<a href=""mailto:d.h.l.c283@gmail.com"">d.h.l.c283@gmail.com</a>
<a href=""mailto:d.h.l.c28.3@gmail.com"">d.h.l.c28.3@gmail.com</a>
<a href=""mailto:d.h.lc.2.83@gmail.com"">d.h.lc.2.83@gmail.com</a>
<a href=""mailto:dh.lc2.83@gmail.com"">dh.lc2.83@gmail.com</a>
<a href=""mailto:d.h.l.c2.8.3@gmail.com"">d.h.l.c2.8.3@gmail.com</a>
<a href=""mailto:dhl.c.2.8.3@gmail.com"">dhl.c.2.8.3@gmail.com</a>
<a href=""mailto:dhlc.28.3@gmail.com"">dhlc.28.3@gmail.com</a>
<a href=""mailto:d.hl.c283@gmail.com"">d.hl.c283@gmail.com</a>
<a href=""mailto:d.h.l.c.283@gmail.com"">d.h.l.c.283@gmail.com</a>
<a href=""mailto:d.hlc28.3@gmail.com"">d.hlc28.3@gmail.com</a>
<a href=""mailto:d.hl.c.283@gmail.com"">d.hl.c.283@gmail.com</a>
<a href=""mailto:dhlc2.83@gmail.com"">dhlc2.83@gmail.com</a>
<a href=""mailto:dh.l.c.2.83@gmail.com"">dh.l.c.2.83@gmail.com</a>
<a href=""mailto:d.hl.c.2.83@gmail.com"">d.hl.c.2.83@gmail.com</a>
<a href=""mailto:dh.l.c.2.8.3@gmail.com"">dh.l.c.2.8.3@gmail.com</a>
<a href=""mailto:dhl.c2.8.3@gmail.com"">dhl.c2.8.3@gmail.com</a>
<a href=""mailto:dhl.c.283@gmail.com"">dhl.c.283@gmail.com</a>
<a href=""mailto:d.h.lc.283@gmail.com"">d.h.lc.283@gmail.com</a>
<a href=""mailto:d.hlc283@gmail.com"">d.hlc283@gmail.com</a>
<a href=""mailto:dhlc28.3@gmail.com"">dhlc28.3@gmail.com</a>
<a href=""mailto:dhlc.2.8.3@gmail.com"">dhlc.2.8.3@gmail.com</a>
<a href=""mailto:d.h.lc.2.8.3@gmail.com"">d.h.lc.2.8.3@gmail.com</a>
<a href=""mailto:dh.lc.28.3@gmail.com"">dh.lc.28.3@gmail.com</a>
<a href=""mailto:dh.lc.283@gmail.com"">dh.lc.283@gmail.com</a>
<a href=""mailto:d.hlc.2.8.3@gmail.com"">d.hlc.2.8.3@gmail.com</a>
<a href=""mailto:dhl.c283@gmail.com"">dhl.c283@gmail.com</a>
<a href=""mailto:dh.l.c2.8.3@gmail.com"">dh.l.c2.8.3@gmail.com</a>
<a href=""mailto:d.hlc2.83@gmail.com"">d.hlc2.83@gmail.com</a>
<a href=""mailto:dhlc283@gmail.com"">dhlc283@gmail.com</a>
<a href=""mailto:d.hlc.2.83@gmail.com"">d.hlc.2.83@gmail.com</a>
<a href=""mailto:d.h.lc28.3@gmail.com"">d.h.lc28.3@gmail.com</a>
<a href=""mailto:dh.lc.2.83@gmail.com"">dh.lc.2.83@gmail.com</a>
<a href=""mailto:dh.l.c2.83@gmail.com"">dh.l.c2.83@gmail.com</a>
<a href=""mailto:d.h.lc2.83@gmail.com"">d.h.lc2.83@gmail.com</a>
<a href=""mailto:d.hl.c.28.3@gmail.com"">d.hl.c.28.3@gmail.com</a>
<a href=""mailto:dh.lc2.8.3@gmail.com"">dh.lc2.8.3@gmail.com</a>
<a href=""mailto:d.hl.c.2.8.3@gmail.com"">d.hl.c.2.8.3@gmail.com</a>
<a href=""mailto:d.hl.c28.3@gmail.com"">d.hl.c28.3@gmail.com</a>
<a href=""mailto:dh.l.c.28.3@gmail.com"">dh.l.c.28.3@gmail.com</a>
<a href=""mailto:dhl.c28.3@gmail.com"">dhl.c28.3@gmail.com</a>
<a href=""mailto:dh.l.c28.3@gmail.com"">dh.l.c28.3@gmail.com</a>
<a href=""mailto:d.h.lc.28.3@gmail.com"">d.h.lc.28.3@gmail.com</a>
<a href=""mailto:d.h.lc2.8.3@gmail.com"">d.h.lc2.8.3@gmail.com</a>
<a href=""mailto:d.hl.c2.8.3@gmail.com"">d.hl.c2.8.3@gmail.com</a>
<a href=""mailto:dhlc2.8.3@gmail.com"">dhlc2.8.3@gmail.com</a>
<a href=""mailto:dh.l.c.283@gmail.com"">dh.l.c.283@gmail.com</a>
<a href=""mailto:d.h.lc283@gmail.com"">d.h.lc283@gmail.com</a>
<a href=""mailto:dh.lc28.3@gmail.com"">dh.lc28.3@gmail.com</a>
<a href=""mailto:dhlc.2.83@gmail.com"">dhlc.2.83@gmail.com</a>
<a href=""mailto:dh.lc283@gmail.com"">dh.lc283@gmail.com</a>
<a href=""mailto:d.h.l.c2.83@gmail.com"">d.h.l.c2.83@gmail.com</a>
<a href=""mailto:d.h.l.c.2.83@gmail.com"">d.h.l.c.2.83@gmail.com</a>
<a href=""mailto:d.h.l.c.2.8.3@gmail.com"">d.h.l.c.2.8.3@gmail.com</a>
<a href=""mailto:dh.l.c283@gmail.com"">dh.l.c283@gmail.com</a>
<a href=""mailto:d.h.l.c.28.3@gmail.com"">d.h.l.c.28.3@gmail.com</a>
<a href=""mailto:dhl.c2.83@gmail.com"">dhl.c2.83@gmail.com</a>
<a href=""mailto:d.hlc.283@gmail.com"">d.hlc.283@gmail.com</a>
<a href=""mailto:d.hlc2.8.3@gmail.com"">d.hlc2.8.3@gmail.com</a>
<a href=""mailto:d.hlc.28.3@gmail.com"">d.hlc.28.3@gmail.com</a>
<a href=""mailto:missdnbrown@gmail.com"">missdnbrown@gmail.com</a>
<a href=""mailto:m.i.s.sdnb.r.own@gmail.com"">m.i.s.sdnb.r.own@gmail.com</a>
<a href=""mailto:m.is.s.d.nb.rown@gmail.com"">m.is.s.d.nb.rown@gmail.com</a>
<a href=""mailto:m.i.ss.dn.b.r.o.w.n@gmail.com"">m.i.ss.dn.b.r.o.w.n@gmail.com</a>
<a href=""mailto:mis.sdnbrown@gmail.com"">mis.sdnbrown@gmail.com</a>
<a href=""mailto:mis.s.d.nb.r.o.wn@gmail.com"">mis.s.d.nb.r.o.wn@gmail.com</a>
<a href=""mailto:m.i.s.s.dnbrown@gmail.com"">m.i.s.s.dnbrown@gmail.com</a>
<a href=""mailto:missd.n.br.o.w.n@gmail.com"">missd.n.br.o.w.n@gmail.com</a>
<a href=""mailto:mi.s.sd.nbr.ow.n@gmail.com"">mi.s.sd.nbr.ow.n@gmail.com</a>
<a href=""mailto:m.issd.nb.ro.wn@gmail.com"">m.issd.nb.ro.wn@gmail.com</a>
<a href=""mailto:m.i.s.s.dnbro.wn@gmail.com"">m.i.s.s.dnbro.wn@gmail.com</a>
<a href=""mailto:m.is.sdnbr.o.w.n@gmail.com"">m.is.sdnbr.o.w.n@gmail.com</a>
<a href=""mailto:mi.ssd.nbr.own@gmail.com"">mi.ssd.nbr.own@gmail.com</a>
<a href=""mailto:miss.dnb.r.own@gmail.com"">miss.dnb.r.own@gmail.com</a>
<a href=""mailto:mi.s.s.d.nb.rown@gmail.com"">mi.s.s.d.nb.rown@gmail.com</a>
<a href=""mailto:mi.ss.dnbrow.n@gmail.com"">mi.ss.dnbrow.n@gmail.com</a>
<a href=""mailto:m.i.ssdn.b.r.ow.n@gmail.com"">m.i.ssdn.b.r.ow.n@gmail.com</a>
<a href=""mailto:m.i.ss.dn.b.r.own@gmail.com"">m.i.ss.dn.b.r.own@gmail.com</a>
<a href=""mailto:mis.s.d.nb.r.ow.n@gmail.com"">mis.s.d.nb.r.ow.n@gmail.com</a>
<a href=""mailto:mi.s.sdn.b.r.o.wn@gmail.com"">mi.s.sdn.b.r.o.wn@gmail.com</a>
<a href=""mailto:missdn.brow.n@gmail.com"">missdn.brow.n@gmail.com</a>
<a href=""mailto:m.issd.nb.r.o.wn@gmail.com"">m.issd.nb.r.o.wn@gmail.com</a>
<a href=""mailto:missdn.b.rown@gmail.com"">missdn.b.rown@gmail.com</a>
<a href=""mailto:mi.s.s.dn.b.ro.w.n@gmail.com"">mi.s.s.dn.b.ro.w.n@gmail.com</a>
<a href=""mailto:mis.s.dn.br.own@gmail.com"">mis.s.dn.br.own@gmail.com</a>
<a href=""mailto:miss.dn.br.o.wn@gmail.com"">miss.dn.br.o.wn@gmail.com</a>
<a href=""mailto:mi.ss.d.nb.r.o.w.n@gmail.com"">mi.ss.d.nb.r.o.w.n@gmail.com</a>
<a href=""mailto:m.issdnb.r.ow.n@gmail.com"">m.issdnb.r.ow.n@gmail.com</a>
<a href=""mailto:mi.s.sdn.brown@gmail.com"">mi.s.sdn.brown@gmail.com</a>
<a href=""mailto:m.iss.dnb.r.o.w.n@gmail.com"">m.iss.dnb.r.o.w.n@gmail.com</a>
<a href=""mailto:m.i.s.sdn.br.ow.n@gmail.com"">m.i.s.sdn.br.ow.n@gmail.com</a>
<a href=""mailto:m.i.s.s.d.n.b.r.ow.n@gmail.com"">m.i.s.s.d.n.b.r.ow.n@gmail.com</a>
<a href=""mailto:missdn.b.r.ow.n@gmail.com"">missdn.b.r.ow.n@gmail.com</a>
<a href=""mailto:m.issd.nb.ro.w.n@gmail.com"">m.issd.nb.ro.w.n@gmail.com</a>
<a href=""mailto:mis.s.dn.br.ow.n@gmail.com"">mis.s.dn.br.ow.n@gmail.com</a>
<a href=""mailto:m.i.ssd.nbrow.n@gmail.com"">m.i.ssd.nbrow.n@gmail.com</a>
<a href=""mailto:m.issd.n.b.ro.wn@gmail.com"">m.issd.n.b.ro.wn@gmail.com</a>
<a href=""mailto:m.is.sdn.bro.wn@gmail.com"">m.is.sdn.bro.wn@gmail.com</a>
<a href=""mailto:mi.ss.d.nbrow.n@gmail.com"">mi.ss.d.nbrow.n@gmail.com</a>
<a href=""mailto:mi.ssd.n.b.rown@gmail.com"">mi.ssd.n.b.rown@gmail.com</a>
<a href=""mailto:m.is.s.d.nbrow.n@gmail.com"">m.is.s.d.nbrow.n@gmail.com</a>
<a href=""mailto:m.i.ssdnb.r.o.w.n@gmail.com"">m.i.ssdnb.r.o.w.n@gmail.com</a>
<a href=""mailto:m.issdn.br.o.wn@gmail.com"">m.issdn.br.o.wn@gmail.com</a>
<a href=""mailto:mis.s.dnbrow.n@gmail.com"">mis.s.dnbrow.n@gmail.com</a>
<a href=""mailto:miss.dn.b.row.n@gmail.com"">miss.dn.b.row.n@gmail.com</a>
<a href=""mailto:m.is.s.dnbr.ow.n@gmail.com"">m.is.s.dnbr.ow.n@gmail.com</a>
<a href=""mailto:m.issd.n.b.row.n@gmail.com"">m.issd.n.b.row.n@gmail.com</a>
<a href=""mailto:mi.ssdnb.ro.w.n@gmail.com"">mi.ssdnb.ro.w.n@gmail.com</a>
<a href=""mailto:m.i.ssd.n.br.own@gmail.com"">m.i.ssd.n.br.own@gmail.com</a>
<a href=""mailto:mi.s.sd.n.b.ro.w.n@gmail.com"">mi.s.sd.n.b.ro.w.n@gmail.com</a>
<a href=""mailto:mi.s.sd.n.b.r.own@gmail.com"">mi.s.sd.n.b.r.own@gmail.com</a>
<a href=""mailto:m.issdnbro.w.n@gmail.com"">m.issdnbro.w.n@gmail.com</a>
<a href=""mailto:miss.dn.br.ow.n@gmail.com"">miss.dn.br.ow.n@gmail.com</a>
<a href=""mailto:miss.d.n.br.own@gmail.com"">miss.d.n.br.own@gmail.com</a>
<a href=""mailto:m.is.sdn.brown@gmail.com"">m.is.sdn.brown@gmail.com</a>
<a href=""mailto:mis.sdn.bro.w.n@gmail.com"">mis.sdn.bro.w.n@gmail.com</a>
<a href=""mailto:missdnbrow.n@gmail.com"">missdnbrow.n@gmail.com</a>
<a href=""mailto:m.is.sdn.br.own@gmail.com"">m.is.sdn.br.own@gmail.com</a>
<a href=""mailto:m.i.ss.d.n.bro.w.n@gmail.com"">m.i.ss.d.n.bro.w.n@gmail.com</a>
<a href=""mailto:missdnbr.o.wn@gmail.com"">missdnbr.o.wn@gmail.com</a>
<a href=""mailto:miss.dn.b.rown@gmail.com"">miss.dn.b.rown@gmail.com</a>
<a href=""mailto:mis.sd.n.b.r.o.wn@gmail.com"">mis.sd.n.b.r.o.wn@gmail.com</a>
<a href=""mailto:m.i.s.sd.n.b.row.n@gmail.com"">m.i.s.sd.n.b.row.n@gmail.com</a>
<a href=""mailto:mi.ssd.nb.r.o.w.n@gmail.com"">mi.ssd.nb.r.o.w.n@gmail.com</a>
<a href=""mailto:m.iss.dn.b.r.o.w.n@gmail.com"">m.iss.dn.b.r.o.w.n@gmail.com</a>
<a href=""mailto:m.i.s.s.dnb.ro.w.n@gmail.com"">m.i.s.s.dnb.ro.w.n@gmail.com</a>
<a href=""mailto:miss.dnb.ro.wn@gmail.com"">miss.dnb.ro.wn@gmail.com</a>
<a href=""mailto:mi.ss.dnb.r.o.w.n@gmail.com"">mi.ss.dnb.r.o.w.n@gmail.com</a>
<a href=""mailto:mi.s.sdnb.r.own@gmail.com"">mi.s.sdnb.r.own@gmail.com</a>
<a href=""mailto:m.is.s.d.n.br.o.w.n@gmail.com"">m.is.s.d.n.br.o.w.n@gmail.com</a>
<a href=""mailto:m.iss.d.nbr.o.wn@gmail.com"">m.iss.d.nbr.o.wn@gmail.com</a>
<a href=""mailto:mi.ss.d.n.b.ro.wn@gmail.com"">mi.ss.d.n.b.ro.wn@gmail.com</a>
<a href=""mailto:m.i.s.sdn.b.ro.w.n@gmail.com"">m.i.s.sdn.b.ro.w.n@gmail.com</a>
<a href=""mailto:mis.s.d.n.b.r.ow.n@gmail.com"">mis.s.d.n.b.r.ow.n@gmail.com</a>
<a href=""mailto:mis.s.d.nbr.o.wn@gmail.com"">mis.s.d.nbr.o.wn@gmail.com</a>
<a href=""mailto:m.i.ssd.n.br.o.wn@gmail.com"">m.i.ssd.n.br.o.wn@gmail.com</a>
<a href=""mailto:mis.s.d.n.brow.n@gmail.com"">mis.s.d.n.brow.n@gmail.com</a>
<a href=""mailto:miss.d.nb.ro.wn@gmail.com"">miss.d.nb.ro.wn@gmail.com</a>
<a href=""mailto:mis.s.dnbr.ow.n@gmail.com"">mis.s.dnbr.ow.n@gmail.com</a>
<a href=""mailto:mis.sdnbro.wn@gmail.com"">mis.sdnbro.wn@gmail.com</a>
<a href=""mailto:mi.ssdnbro.wn@gmail.com"">mi.ssdnbro.wn@gmail.com</a>
<a href=""mailto:mis.sdnb.r.o.w.n@gmail.com"">mis.sdnb.r.o.w.n@gmail.com</a>
<a href=""mailto:mi.ssd.nbr.o.w.n@gmail.com"">mi.ssd.nbr.o.w.n@gmail.com</a>
<a href=""mailto:m.i.ss.dnb.ro.w.n@gmail.com"">m.i.ss.dnb.ro.w.n@gmail.com</a>
<a href=""mailto:m.issd.n.b.r.o.w.n@gmail.com"">m.issd.n.b.r.o.w.n@gmail.com</a>
<a href=""mailto:mi.s.sd.n.b.r.o.wn@gmail.com"">mi.s.sd.n.b.r.o.wn@gmail.com</a>
<a href=""mailto:m.i.ss.dnb.r.own@gmail.com"">m.i.ss.dnb.r.own@gmail.com</a>
<a href=""mailto:mi.s.s.d.nb.r.ow.n@gmail.com"">mi.s.s.d.nb.r.ow.n@gmail.com</a>
<a href=""mailto:mi.s.sdn.br.own@gmail.com"">mi.s.sdn.br.own@gmail.com</a>
<a href=""mailto:m.is.s.dn.br.o.wn@gmail.com"">m.is.s.dn.br.o.wn@gmail.com</a>
<a href=""mailto:miss.dnb.r.o.w.n@gmail.com"">miss.dnb.r.o.w.n@gmail.com</a>
<a href=""mailto:mi.s.s.d.nb.ro.w.n@gmail.com"">mi.s.s.d.nb.ro.w.n@gmail.com</a>
<a href=""mailto:m.i.ssd.n.brow.n@gmail.com"">m.i.ssd.n.brow.n@gmail.com</a>
<a href=""mailto:mi.ss.dnb.r.ow.n@gmail.com"">mi.ss.dnb.r.ow.n@gmail.com</a>
<a href=""mailto:miss.d.nbro.wn@gmail.com"">miss.d.nbro.wn@gmail.com</a>
<a href=""mailto:m.issd.n.b.ro.w.n@gmail.com"">m.issd.n.b.ro.w.n@gmail.com</a>
<a href=""mailto:miss.dnbrown@gmail.com"">miss.dnbrown@gmail.com</a>
<a href=""mailto:m.iss.dn.bro.w.n@gmail.com"">m.iss.dn.bro.w.n@gmail.com</a>
<a href=""mailto:m.i.s.sdnb.r.o.w.n@gmail.com"">m.i.s.sdnb.r.o.w.n@gmail.com</a>
<a href=""mailto:missd.n.br.o.wn@gmail.com"">missd.n.br.o.wn@gmail.com</a>
<a href=""mailto:mi.ssd.n.b.r.o.w.n@gmail.com"">mi.ssd.n.b.r.o.w.n@gmail.com</a>
<a href=""mailto:m.is.s.d.n.bro.wn@gmail.com"">m.is.s.d.n.bro.wn@gmail.com</a>
<a href=""mailto:m.is.sd.n.b.r.own@gmail.com"">m.is.sd.n.b.r.own@gmail.com</a>
<a href=""mailto:m.i.s.sd.nb.r.ow.n@gmail.com"">m.i.s.sd.nb.r.ow.n@gmail.com</a>
<a href=""mailto:m.i.s.sd.nb.rown@gmail.com"">m.i.s.sd.nb.rown@gmail.com</a>
<a href=""mailto:m.i.ssd.n.bro.w.n@gmail.com"">m.i.ssd.n.bro.w.n@gmail.com</a>
<a href=""mailto:mi.s.sdn.b.ro.wn@gmail.com"">mi.s.sdn.b.ro.wn@gmail.com</a>
<a href=""mailto:m.iss.d.n.b.ro.wn@gmail.com"">m.iss.d.n.b.ro.wn@gmail.com</a>
<a href=""mailto:mis.sdn.b.r.o.w.n@gmail.com"">mis.sdn.b.r.o.w.n@gmail.com</a>
<a href=""mailto:mi.s.s.d.n.b.r.ow.n@gmail.com"">mi.s.s.d.n.b.r.ow.n@gmail.com</a>
<a href=""mailto:m.i.ssd.nb.r.own@gmail.com"">m.i.ssd.nb.r.own@gmail.com</a>
<a href=""mailto:mi.ss.d.n.br.ow.n@gmail.com"">mi.ss.d.n.br.ow.n@gmail.com</a>
<a href=""mailto:m.iss.dn.b.r.own@gmail.com"">m.iss.dn.b.r.own@gmail.com</a>
<a href=""mailto:m.is.sdn.b.r.own@gmail.com"">m.is.sdn.b.r.own@gmail.com</a>
<a href=""mailto:m.is.sd.nbr.own@gmail.com"">m.is.sd.nbr.own@gmail.com</a>
<a href=""mailto:mi.ssdn.b.r.ow.n@gmail.com"">mi.ssdn.b.r.ow.n@gmail.com</a>
<a href=""mailto:mi.ss.dn.br.own@gmail.com"">mi.ss.dn.br.own@gmail.com</a>
<a href=""mailto:mi.ss.dnb.ro.wn@gmail.com"">mi.ss.dnb.ro.wn@gmail.com</a>
<a href=""mailto:m.is.sdnb.r.ow.n@gmail.com"">m.is.sdnb.r.ow.n@gmail.com</a>
<a href=""mailto:m.is.sd.n.br.ow.n@gmail.com"">m.is.sd.n.br.ow.n@gmail.com</a>
<a href=""mailto:mis.s.dn.brown@gmail.com"">mis.s.dn.brown@gmail.com</a>
<a href=""mailto:m.is.s.d.nbr.own@gmail.com"">m.is.s.d.nbr.own@gmail.com</a>
<a href=""mailto:mi.s.s.d.nbrow.n@gmail.com"">mi.s.s.d.nbrow.n@gmail.com</a>
<a href=""mailto:m.i.s.sdnbrown@gmail.com"">m.i.s.sdnbrown@gmail.com</a>
<a href=""mailto:mi.s.s.dnbro.wn@gmail.com"">mi.s.s.dnbro.wn@gmail.com</a>
<a href=""mailto:miss.dnbr.o.w.n@gmail.com"">miss.dnbr.o.w.n@gmail.com</a>
<a href=""mailto:m.i.ssdn.b.r.own@gmail.com"">m.i.ssdn.b.r.own@gmail.com</a>
<a href=""mailto:mi.ss.dn.brow.n@gmail.com"">mi.ss.dn.brow.n@gmail.com</a>
<a href=""mailto:m.iss.dnb.r.ow.n@gmail.com"">m.iss.dnb.r.ow.n@gmail.com</a>
<a href=""mailto:m.i.ss.d.nb.r.own@gmail.com"">m.i.ss.d.nb.r.own@gmail.com</a>
<a href=""mailto:mi.ss.dn.brown@gmail.com"">mi.ss.dn.brown@gmail.com</a>
<a href=""mailto:m.issdnb.r.own@gmail.com"">m.issdnb.r.own@gmail.com</a>
<a href=""mailto:miss.dnb.r.ow.n@gmail.com"">miss.dnb.r.ow.n@gmail.com</a>
<a href=""mailto:m.i.s.s.d.nbr.ow.n@gmail.com"">m.i.s.s.d.nbr.ow.n@gmail.com</a>
<a href=""mailto:mis.sd.n.b.r.ow.n@gmail.com"">mis.sd.n.b.r.ow.n@gmail.com</a>
<a href=""mailto:m.i.ssd.n.b.r.o.wn@gmail.com"">m.i.ssd.n.b.r.o.wn@gmail.com</a>
<a href=""mailto:m.is.sd.nb.r.o.w.n@gmail.com"">m.is.sd.nb.r.o.w.n@gmail.com</a>
<a href=""mailto:m.iss.d.n.brow.n@gmail.com"">m.iss.d.n.brow.n@gmail.com</a>
<a href=""mailto:mi.s.s.dn.bro.w.n@gmail.com"">mi.s.s.dn.bro.w.n@gmail.com</a>
<a href=""mailto:missdn.b.r.own@gmail.com"">missdn.b.r.own@gmail.com</a>
<a href=""mailto:m.i.ssd.n.b.r.o.w.n@gmail.com"">m.i.ssd.n.b.r.o.w.n@gmail.com</a>
<a href=""mailto:mi.ssdn.brow.n@gmail.com"">mi.ssdn.brow.n@gmail.com</a>
<a href=""mailto:mi.ssd.n.br.own@gmail.com"">mi.ssd.n.br.own@gmail.com</a>
<a href=""mailto:mi.ss.dnbro.wn@gmail.com"">mi.ss.dnbro.wn@gmail.com</a>
<a href=""mailto:m.i.s.sdnb.r.ow.n@gmail.com"">m.i.s.sdnb.r.ow.n@gmail.com</a>
<a href=""mailto:mis.s.dnbro.wn@gmail.com"">mis.s.dnbro.wn@gmail.com</a>
<a href=""mailto:m.i.s.s.dn.b.r.ow.n@gmail.com"">m.i.s.s.dn.b.r.ow.n@gmail.com</a>
<a href=""mailto:mis.s.dnb.ro.wn@gmail.com"">mis.s.dnb.ro.wn@gmail.com</a>
<a href=""mailto:mi.s.s.d.nb.ro.wn@gmail.com"">mi.s.s.d.nb.ro.wn@gmail.com</a>
<a href=""mailto:m.i.ss.d.nbr.own@gmail.com"">m.i.ss.d.nbr.own@gmail.com</a>
<a href=""mailto:m.i.s.s.dnb.r.o.wn@gmail.com"">m.i.s.s.dnb.r.o.wn@gmail.com</a>
<a href=""mailto:m.is.s.d.nb.ro.w.n@gmail.com"">m.is.s.d.nb.ro.w.n@gmail.com</a>
<a href=""mailto:mis.sd.n.br.ow.n@gmail.com"">mis.sd.n.br.ow.n@gmail.com</a>
<a href=""mailto:mi.s.sd.nb.rown@gmail.com"">mi.s.sd.nb.rown@gmail.com</a>
<a href=""mailto:m.iss.d.n.br.o.wn@gmail.com"">m.iss.d.n.br.o.wn@gmail.com</a>
<a href=""mailto:m.iss.d.n.b.rown@gmail.com"">m.iss.d.n.b.rown@gmail.com</a>
<a href=""mailto:mis.sd.nb.row.n@gmail.com"">mis.sd.nb.row.n@gmail.com</a>
<a href=""mailto:m.i.ss.d.nbro.wn@gmail.com"">m.i.ss.d.nbro.wn@gmail.com</a>
<a href=""mailto:mi.s.s.d.nbro.wn@gmail.com"">mi.s.s.d.nbro.wn@gmail.com</a>
<a href=""mailto:m.i.s.s.dn.b.row.n@gmail.com"">m.i.s.s.dn.b.row.n@gmail.com</a>
<a href=""mailto:m.i.ss.dnbr.own@gmail.com"">m.i.ss.dnbr.own@gmail.com</a>
<a href=""mailto:mis.sd.n.brown@gmail.com"">mis.sd.n.brown@gmail.com</a>
<a href=""mailto:m.i.s.sd.nbro.w.n@gmail.com"">m.i.s.sd.nbro.w.n@gmail.com</a>
<a href=""mailto:mi.s.s.dnb.r.o.wn@gmail.com"">mi.s.s.dnb.r.o.wn@gmail.com</a>
<a href=""mailto:m.iss.dn.br.own@gmail.com"">m.iss.dn.br.own@gmail.com</a>
<a href=""mailto:m.i.s.sd.n.b.ro.w.n@gmail.com"">m.i.s.sd.n.b.ro.w.n@gmail.com</a>
<a href=""mailto:m.is.sd.nb.row.n@gmail.com"">m.is.sd.nb.row.n@gmail.com</a>
<a href=""mailto:mis.sd.nbrown@gmail.com"">mis.sd.nbrown@gmail.com</a>
<a href=""mailto:mi.ssdn.b.ro.w.n@gmail.com"">mi.ssdn.b.ro.w.n@gmail.com</a>
<a href=""mailto:mi.s.sd.n.bro.wn@gmail.com"">mi.s.sd.n.bro.wn@gmail.com</a>
<a href=""mailto:mi.s.s.dn.bro.wn@gmail.com"">mi.s.s.dn.bro.wn@gmail.com</a>
<a href=""mailto:m.iss.d.nb.row.n@gmail.com"">m.iss.d.nb.row.n@gmail.com</a>
<a href=""mailto:mi.ss.d.n.b.r.ow.n@gmail.com"">mi.ss.d.n.b.r.ow.n@gmail.com</a>
<a href=""mailto:m.i.ssd.n.b.ro.wn@gmail.com"">m.i.ssd.n.b.ro.wn@gmail.com</a>
<a href=""mailto:m.is.sdnbrow.n@gmail.com"">m.is.sdnbrow.n@gmail.com</a>
<a href=""mailto:m.i.ss.dn.b.ro.w.n@gmail.com"">m.i.ss.dn.b.ro.w.n@gmail.com</a>
<a href=""mailto:mi.ssdn.bro.w.n@gmail.com"">mi.ssdn.bro.w.n@gmail.com</a>
<a href=""mailto:m.i.ss.d.n.br.o.wn@gmail.com"">m.i.ss.d.n.br.o.wn@gmail.com</a>
<a href=""mailto:m.i.s.s.d.nb.r.o.wn@gmail.com"">m.i.s.s.d.nb.r.o.wn@gmail.com</a>
<a href=""mailto:mis.sd.nb.ro.w.n@gmail.com"">mis.sd.nb.ro.w.n@gmail.com</a>
<a href=""mailto:mis.sd.n.br.own@gmail.com"">mis.sd.n.br.own@gmail.com</a>
<a href=""mailto:m.issd.n.b.r.ow.n@gmail.com"">m.issd.n.b.r.ow.n@gmail.com</a>
<a href=""mailto:m.i.s.sd.nb.ro.w.n@gmail.com"">m.i.s.sd.nb.ro.w.n@gmail.com</a>
<a href=""mailto:mi.s.s.dnbro.w.n@gmail.com"">mi.s.s.dnbro.w.n@gmail.com</a>
<a href=""mailto:mis.s.d.n.bro.w.n@gmail.com"">mis.s.d.n.bro.w.n@gmail.com</a>
<a href=""mailto:mi.ss.dnbr.ow.n@gmail.com"">mi.ss.dnbr.ow.n@gmail.com</a>
<a href=""mailto:m.iss.d.nbrow.n@gmail.com"">m.iss.d.nbrow.n@gmail.com</a>
<a href=""mailto:m.i.ss.dnb.rown@gmail.com"">m.i.ss.dnb.rown@gmail.com</a>
<a href=""mailto:m.i.s.s.d.nbro.w.n@gmail.com"">m.i.s.s.d.nbro.w.n@gmail.com</a>
<a href=""mailto:m.is.s.dnbr.o.wn@gmail.com"">m.is.s.dnbr.o.wn@gmail.com</a>
<a href=""mailto:m.is.sd.n.b.r.ow.n@gmail.com"">m.is.sd.n.b.r.ow.n@gmail.com</a>
<a href=""mailto:mi.ssdn.br.ow.n@gmail.com"">mi.ssdn.br.ow.n@gmail.com</a>
<a href=""mailto:mis.sd.n.brow.n@gmail.com"">mis.sd.n.brow.n@gmail.com</a>
<a href=""mailto:mi.s.s.d.n.brow.n@gmail.com"">mi.s.s.d.n.brow.n@gmail.com</a>
<a href=""mailto:missdn.bro.w.n@gmail.com"">missdn.bro.w.n@gmail.com</a>
<a href=""mailto:mi.s.sd.nbrown@gmail.com"">mi.s.sd.nbrown@gmail.com</a>
<a href=""mailto:miss.dn.b.ro.wn@gmail.com"">miss.dn.b.ro.wn@gmail.com</a>
<a href=""mailto:m.i.s.sd.nb.ro.wn@gmail.com"">m.i.s.sd.nb.ro.wn@gmail.com</a>
<a href=""mailto:m.is.sdnbrown@gmail.com"">m.is.sdnbrown@gmail.com</a>
<a href=""mailto:miss.dn.b.r.ow.n@gmail.com"">miss.dn.b.r.ow.n@gmail.com</a>
<a href=""mailto:mi.ssd.nbrown@gmail.com"">mi.ssd.nbrown@gmail.com</a>
<a href=""mailto:missdonnab180@gmail.com"">missdonnab180@gmail.com</a>
<a href=""mailto:m.is.s.d.o.nn.a.b.1.8.0@gmail.com"">m.is.s.d.o.nn.a.b.1.8.0@gmail.com</a>
<a href=""mailto:m.i.ss.donn.a.b180@gmail.com"">m.i.ss.donn.a.b180@gmail.com</a>
<a href=""mailto:mi.ssd.onnab1.8.0@gmail.com"">mi.ssd.onnab1.8.0@gmail.com</a>
<a href=""mailto:mi.ss.do.nnab1.80@gmail.com"">mi.ss.do.nnab1.80@gmail.com</a>
<a href=""mailto:mi.s.sd.on.n.a.b.1.80@gmail.com"">mi.s.sd.on.n.a.b.1.80@gmail.com</a>
<a href=""mailto:m.i.s.s.do.n.n.a.b.180@gmail.com"">m.i.s.s.do.n.n.a.b.180@gmail.com</a>
<a href=""mailto:m.is.s.d.onnab.1.80@gmail.com"">m.is.s.d.onnab.1.80@gmail.com</a>
<a href=""mailto:m.is.sdo.n.na.b18.0@gmail.com"">m.is.sdo.n.na.b18.0@gmail.com</a>
<a href=""mailto:missdo.n.n.ab180@gmail.com"">missdo.n.n.ab180@gmail.com</a>
<a href=""mailto:miss.do.n.n.ab.1.8.0@gmail.com"">miss.do.n.n.ab.1.8.0@gmail.com</a>
<a href=""mailto:m.is.sdon.n.a.b1.8.0@gmail.com"">m.is.sdon.n.a.b1.8.0@gmail.com</a>
<a href=""mailto:m.i.ss.donn.ab18.0@gmail.com"">m.i.ss.donn.ab18.0@gmail.com</a>
<a href=""mailto:m.i.s.sd.onnab18.0@gmail.com"">m.i.s.sd.onnab18.0@gmail.com</a>
<a href=""mailto:mi.s.sdonn.a.b.18.0@gmail.com"">mi.s.sdonn.a.b.18.0@gmail.com</a>
<a href=""mailto:mi.s.s.do.n.na.b.18.0@gmail.com"">mi.s.s.do.n.na.b.18.0@gmail.com</a>
<a href=""mailto:m.i.s.s.donnab18.0@gmail.com"">m.i.s.s.donnab18.0@gmail.com</a>
<a href=""mailto:m.is.sdonnab.180@gmail.com"">m.is.sdonnab.180@gmail.com</a>
<a href=""mailto:mi.ss.d.onnab.1.8.0@gmail.com"">mi.ss.d.onnab.1.8.0@gmail.com</a>
<a href=""mailto:miss.d.o.n.n.a.b.180@gmail.com"">miss.d.o.n.n.a.b.180@gmail.com</a>
<a href=""mailto:mi.ssd.o.nn.a.b.18.0@gmail.com"">mi.ssd.o.nn.a.b.18.0@gmail.com</a>
<a href=""mailto:m.i.s.sdon.n.ab.18.0@gmail.com"">m.i.s.sdon.n.ab.18.0@gmail.com</a>
<a href=""mailto:missdo.n.n.a.b1.80@gmail.com"">missdo.n.n.a.b1.80@gmail.com</a>
<a href=""mailto:m.i.s.s.do.n.nab1.80@gmail.com"">m.i.s.s.do.n.nab1.80@gmail.com</a>
<a href=""mailto:mi.ss.do.nn.a.b1.80@gmail.com"">mi.ss.do.nn.a.b1.80@gmail.com</a>
<a href=""mailto:m.issd.onnab18.0@gmail.com"">m.issd.onnab18.0@gmail.com</a>
<a href=""mailto:mi.ss.d.onn.a.b1.80@gmail.com"">mi.ss.d.onn.a.b1.80@gmail.com</a>
<a href=""mailto:mi.s.sd.o.nnab1.8.0@gmail.com"">mi.s.sd.o.nnab1.8.0@gmail.com</a>
<a href=""mailto:m.i.s.s.donna.b1.80@gmail.com"">m.i.s.s.donna.b1.80@gmail.com</a>
<a href=""mailto:m.is.s.d.on.n.ab1.8.0@gmail.com"">m.is.s.d.on.n.ab1.8.0@gmail.com</a>
<a href=""mailto:m.is.s.d.o.n.n.a.b180@gmail.com"">m.is.s.d.o.n.n.a.b180@gmail.com</a>
<a href=""mailto:m.i.ss.d.onna.b.1.80@gmail.com"">m.i.ss.d.onna.b.1.80@gmail.com</a>
<a href=""mailto:m.i.s.s.d.o.nna.b.18.0@gmail.com"">m.i.s.s.d.o.nna.b.18.0@gmail.com</a>
<a href=""mailto:mi.s.sdo.n.na.b180@gmail.com"">mi.s.sdo.n.na.b180@gmail.com</a>
<a href=""mailto:missdo.n.na.b.180@gmail.com"">missdo.n.na.b.180@gmail.com</a>
<a href=""mailto:m.i.s.sdon.n.a.b18.0@gmail.com"">m.i.s.sdon.n.a.b18.0@gmail.com</a>
<a href=""mailto:m.i.ss.do.n.nab.180@gmail.com"">m.i.ss.do.n.nab.180@gmail.com</a>
<a href=""mailto:m.issdo.nn.ab180@gmail.com"">m.issdo.nn.ab180@gmail.com</a>
<a href=""mailto:mis.sdo.nna.b.18.0@gmail.com"">mis.sdo.nna.b.18.0@gmail.com</a>
<a href=""mailto:mi.s.sd.onna.b18.0@gmail.com"">mi.s.sd.onna.b18.0@gmail.com</a>
<a href=""mailto:m.i.s.sd.o.nn.ab.1.8.0@gmail.com"">m.i.s.sd.o.nn.ab.1.8.0@gmail.com</a>
<a href=""mailto:missd.onna.b.180@gmail.com"">missd.onna.b.180@gmail.com</a>
<a href=""mailto:mis.s.d.on.na.b.180@gmail.com"">mis.s.d.on.na.b.180@gmail.com</a>
<a href=""mailto:m.iss.donn.a.b.18.0@gmail.com"">m.iss.donn.a.b.18.0@gmail.com</a>
<a href=""mailto:mis.sd.o.nna.b.1.80@gmail.com"">mis.sd.o.nna.b.1.80@gmail.com</a>
<a href=""mailto:m.i.ssd.onn.ab.1.8.0@gmail.com"">m.i.ssd.onn.ab.1.8.0@gmail.com</a>
<a href=""mailto:mis.sd.onna.b.180@gmail.com"">mis.sd.onna.b.180@gmail.com</a>
<a href=""mailto:mi.s.sd.o.nn.ab.180@gmail.com"">mi.s.sd.o.nn.ab.180@gmail.com</a>
<a href=""mailto:m.i.ss.d.on.n.ab.18.0@gmail.com"">m.i.ss.d.on.n.ab.18.0@gmail.com</a>
<a href=""mailto:m.i.ss.do.n.n.ab18.0@gmail.com"">m.i.ss.do.n.n.ab18.0@gmail.com</a>
<a href=""mailto:mis.sd.onna.b180@gmail.com"">mis.sd.onna.b180@gmail.com</a>
<a href=""mailto:missd.o.nnab1.80@gmail.com"">missd.o.nnab1.80@gmail.com</a>
<a href=""mailto:m.i.ss.d.onn.ab.18.0@gmail.com"">m.i.ss.d.onn.ab.18.0@gmail.com</a>
<a href=""mailto:m.i.s.s.d.on.n.ab.18.0@gmail.com"">m.i.s.s.d.on.n.ab.18.0@gmail.com</a>
<a href=""mailto:mi.s.sd.on.na.b.1.8.0@gmail.com"">mi.s.sd.on.na.b.1.8.0@gmail.com</a>
<a href=""mailto:m.i.ssdo.n.n.a.b1.80@gmail.com"">m.i.ssdo.n.n.a.b1.80@gmail.com</a>
<a href=""mailto:missdo.nn.ab.1.80@gmail.com"">missdo.nn.ab.1.80@gmail.com</a>
<a href=""mailto:m.i.s.sd.o.n.n.ab.1.80@gmail.com"">m.i.s.sd.o.n.n.ab.1.80@gmail.com</a>
<a href=""mailto:m.iss.do.n.na.b1.8.0@gmail.com"">m.iss.do.n.na.b1.8.0@gmail.com</a>
<a href=""mailto:mis.sd.on.n.ab1.80@gmail.com"">mis.sd.on.n.ab1.80@gmail.com</a>
<a href=""mailto:m.i.ss.don.n.a.b1.80@gmail.com"">m.i.ss.don.n.a.b1.80@gmail.com</a>
<a href=""mailto:mi.ss.d.o.nna.b1.80@gmail.com"">mi.ss.d.o.nna.b1.80@gmail.com</a>
<a href=""mailto:miss.don.na.b1.8.0@gmail.com"">miss.don.na.b1.8.0@gmail.com</a>
<a href=""mailto:m.i.s.s.d.onn.a.b.1.8.0@gmail.com"">m.i.s.s.d.onn.a.b.1.8.0@gmail.com</a>
<a href=""mailto:m.is.sd.on.n.ab1.80@gmail.com"">m.is.sd.on.n.ab1.80@gmail.com</a>
<a href=""mailto:mi.ssdon.nab.18.0@gmail.com"">mi.ssdon.nab.18.0@gmail.com</a>
<a href=""mailto:m.is.sdo.n.n.a.b.180@gmail.com"">m.is.sdo.n.n.a.b.180@gmail.com</a>
<a href=""mailto:mi.ss.don.na.b.180@gmail.com"">mi.ss.don.na.b.180@gmail.com</a>
<a href=""mailto:m.i.s.sd.onn.ab1.8.0@gmail.com"">m.i.s.sd.onn.ab1.8.0@gmail.com</a>
<a href=""mailto:mis.sd.onnab.1.80@gmail.com"">mis.sd.onnab.1.80@gmail.com</a>
<a href=""mailto:m.i.ss.don.n.a.b1.8.0@gmail.com"">m.i.ss.don.n.a.b1.8.0@gmail.com</a>
<a href=""mailto:m.iss.d.o.n.n.ab.1.8.0@gmail.com"">m.iss.d.o.n.n.ab.1.8.0@gmail.com</a>
<a href=""mailto:mis.sdonn.a.b.1.8.0@gmail.com"">mis.sdonn.a.b.1.8.0@gmail.com</a>
<a href=""mailto:m.iss.do.n.nab.1.8.0@gmail.com"">m.iss.do.n.nab.1.8.0@gmail.com</a>
<a href=""mailto:mis.s.d.o.n.n.ab.18.0@gmail.com"">mis.s.d.o.n.n.ab.18.0@gmail.com</a>
<a href=""mailto:m.iss.d.onn.ab180@gmail.com"">m.iss.d.onn.ab180@gmail.com</a>
<a href=""mailto:m.is.s.d.on.nab1.80@gmail.com"">m.is.s.d.on.nab1.80@gmail.com</a>
<a href=""mailto:m.issdo.n.n.a.b18.0@gmail.com"">m.issdo.n.n.a.b18.0@gmail.com</a>
<a href=""mailto:mi.s.s.d.on.nab180@gmail.com"">mi.s.s.d.on.nab180@gmail.com</a>
<a href=""mailto:m.i.ssd.o.n.n.a.b.180@gmail.com"">m.i.ssd.o.n.n.a.b.180@gmail.com</a>
<a href=""mailto:m.i.s.s.d.onna.b.18.0@gmail.com"">m.i.s.s.d.onna.b.18.0@gmail.com</a>
<a href=""mailto:m.i.s.s.donnab.1.80@gmail.com"">m.i.s.s.donnab.1.80@gmail.com</a>
<a href=""mailto:miss.do.n.nab180@gmail.com"">miss.do.n.nab180@gmail.com</a>
<a href=""mailto:m.iss.d.o.n.n.a.b.1.8.0@gmail.com"">m.iss.d.o.n.n.a.b.1.8.0@gmail.com</a>
<a href=""mailto:mis.sd.onn.a.b.180@gmail.com"">mis.sd.onn.a.b.180@gmail.com</a>
<a href=""mailto:m.i.s.sd.o.n.n.ab.180@gmail.com"">m.i.s.sd.o.n.n.ab.180@gmail.com</a>
<a href=""mailto:mi.ssd.onn.a.b1.80@gmail.com"">mi.ssd.onn.a.b1.80@gmail.com</a>
<a href=""mailto:mi.s.s.do.nna.b1.8.0@gmail.com"">mi.s.s.do.nna.b1.8.0@gmail.com</a>
<a href=""mailto:m.issdon.n.ab.1.8.0@gmail.com"">m.issdon.n.ab.1.8.0@gmail.com</a>
<a href=""mailto:mis.s.d.o.n.n.a.b1.80@gmail.com"">mis.s.d.o.n.n.a.b1.80@gmail.com</a>
<a href=""mailto:mis.sdon.n.a.b.180@gmail.com"">mis.sdon.n.a.b.180@gmail.com</a>
<a href=""mailto:m.i.s.sd.on.n.ab.1.80@gmail.com"">m.i.s.sd.on.n.ab.1.80@gmail.com</a>
<a href=""mailto:miss.do.nn.ab1.8.0@gmail.com"">miss.do.nn.ab1.8.0@gmail.com</a>
<a href=""mailto:m.is.sdo.nna.b1.8.0@gmail.com"">m.is.sdo.nna.b1.8.0@gmail.com</a>
<a href=""mailto:m.is.s.d.on.nab180@gmail.com"">m.is.s.d.on.nab180@gmail.com</a>
<a href=""mailto:m.i.ssdon.n.ab18.0@gmail.com"">m.i.ssdon.n.ab18.0@gmail.com</a>
<a href=""mailto:mis.sdon.n.ab18.0@gmail.com"">mis.sdon.n.ab18.0@gmail.com</a>
<a href=""mailto:m.is.sd.o.n.nab1.8.0@gmail.com"">m.is.sd.o.n.nab1.8.0@gmail.com</a>
<a href=""mailto:mi.ss.d.o.n.na.b1.8.0@gmail.com"">mi.ss.d.o.n.na.b1.8.0@gmail.com</a>
<a href=""mailto:m.is.sd.o.n.n.a.b18.0@gmail.com"">m.is.sd.o.n.n.a.b18.0@gmail.com</a>
<a href=""mailto:m.i.s.s.donn.ab180@gmail.com"">m.i.s.s.donn.ab180@gmail.com</a>
<a href=""mailto:m.is.s.donna.b.18.0@gmail.com"">m.is.s.donna.b.18.0@gmail.com</a>
<a href=""mailto:m.issd.o.n.n.ab.1.8.0@gmail.com"">m.issd.o.n.n.ab.1.8.0@gmail.com</a>
<a href=""mailto:missd.on.n.a.b18.0@gmail.com"">missd.on.n.a.b18.0@gmail.com</a>
<a href=""mailto:m.i.ssdo.n.n.ab.1.80@gmail.com"">m.i.ssdo.n.n.ab.1.80@gmail.com</a>
<a href=""mailto:mi.s.sdo.nn.ab.180@gmail.com"">mi.s.sdo.nn.ab.180@gmail.com</a>
<a href=""mailto:m.is.sdon.n.ab18.0@gmail.com"">m.is.sdon.n.ab18.0@gmail.com</a>
<a href=""mailto:m.is.sdo.nn.a.b1.80@gmail.com"">m.is.sdo.nn.a.b1.80@gmail.com</a>
<a href=""mailto:mis.sd.on.n.ab1.8.0@gmail.com"">mis.sd.on.n.ab1.8.0@gmail.com</a>
<a href=""mailto:mi.s.sdon.nab.1.8.0@gmail.com"">mi.s.sdon.nab.1.8.0@gmail.com</a>
<a href=""mailto:mi.ssd.o.n.n.ab1.80@gmail.com"">mi.ssd.o.n.n.ab1.80@gmail.com</a>
<a href=""mailto:m.is.s.don.n.ab.180@gmail.com"">m.is.s.don.n.ab.180@gmail.com</a>
<a href=""mailto:missdo.n.nab1.80@gmail.com"">missdo.n.nab1.80@gmail.com</a>
<a href=""mailto:m.i.s.sd.on.n.a.b1.80@gmail.com"">m.i.s.sd.on.n.a.b1.80@gmail.com</a>
<a href=""mailto:m.is.s.d.on.nab.18.0@gmail.com"">m.is.s.d.on.nab.18.0@gmail.com</a>
<a href=""mailto:mi.s.sd.o.nnab18.0@gmail.com"">mi.s.sd.o.nnab18.0@gmail.com</a>
<a href=""mailto:mi.s.sd.onna.b.1.80@gmail.com"">mi.s.sd.onna.b.1.80@gmail.com</a>
<a href=""mailto:mi.ss.d.o.nna.b.180@gmail.com"">mi.ss.d.o.nna.b.180@gmail.com</a>
<a href=""mailto:mi.s.s.don.n.ab.18.0@gmail.com"">mi.s.s.don.n.ab.18.0@gmail.com</a>
<a href=""mailto:m.i.ss.do.n.n.a.b.1.8.0@gmail.com"">m.i.ss.do.n.n.a.b.1.8.0@gmail.com</a>
<a href=""mailto:mi.ss.d.onn.ab.18.0@gmail.com"">mi.ss.d.onn.ab.18.0@gmail.com</a>
<a href=""mailto:mi.s.s.d.onn.a.b.1.8.0@gmail.com"">mi.s.s.d.onn.a.b.1.8.0@gmail.com</a>
<a href=""mailto:m.issd.o.nnab.18.0@gmail.com"">m.issd.o.nnab.18.0@gmail.com</a>
<a href=""mailto:m.i.s.sd.on.nab1.8.0@gmail.com"">m.i.s.sd.on.nab1.8.0@gmail.com</a>
<a href=""mailto:missdo.n.na.b18.0@gmail.com"">missdo.n.na.b18.0@gmail.com</a>
<a href=""mailto:m.i.s.s.d.o.nn.ab18.0@gmail.com"">m.i.s.s.d.o.nn.ab18.0@gmail.com</a>
<a href=""mailto:m.issdo.nnab.1.80@gmail.com"">m.issdo.nnab.1.80@gmail.com</a>
<a href=""mailto:mis.sd.on.n.a.b.1.80@gmail.com"">mis.sd.on.n.a.b.1.80@gmail.com</a>
<a href=""mailto:mis.sd.o.nn.ab.180@gmail.com"">mis.sd.o.nn.ab.180@gmail.com</a>
<a href=""mailto:m.i.ssdonn.ab180@gmail.com"">m.i.ssdonn.ab180@gmail.com</a>
<a href=""mailto:mis.s.d.on.nab.1.8.0@gmail.com"">mis.s.d.on.nab.1.8.0@gmail.com</a>
<a href=""mailto:mi.ssd.o.n.n.ab.180@gmail.com"">mi.ssd.o.n.n.ab.180@gmail.com</a>
<a href=""mailto:m.i.s.s.d.onn.a.b1.8.0@gmail.com"">m.i.s.s.d.onn.a.b1.8.0@gmail.com</a>
<a href=""mailto:m.issd.o.nn.a.b18.0@gmail.com"">m.issd.o.nn.a.b18.0@gmail.com</a>
<a href=""mailto:mis.s.d.o.n.na.b.1.8.0@gmail.com"">mis.s.d.o.n.na.b.1.8.0@gmail.com</a>
<a href=""mailto:m.i.s.s.don.na.b.180@gmail.com"">m.i.s.s.don.na.b.180@gmail.com</a>
<a href=""mailto:m.i.ssd.on.na.b.1.8.0@gmail.com"">m.i.ssd.on.na.b.1.8.0@gmail.com</a>
<a href=""mailto:miss.donna.b18.0@gmail.com"">miss.donna.b18.0@gmail.com</a>
<a href=""mailto:mis.sdon.n.ab.1.8.0@gmail.com"">mis.sdon.n.ab.1.8.0@gmail.com</a>
<a href=""mailto:m.i.s.s.donna.b.180@gmail.com"">m.i.s.s.donna.b.180@gmail.com</a>
<a href=""mailto:m.i.s.s.don.nab1.8.0@gmail.com"">m.i.s.s.don.nab1.8.0@gmail.com</a>
<a href=""mailto:mi.s.sd.o.n.na.b1.8.0@gmail.com"">mi.s.sd.o.n.na.b1.8.0@gmail.com</a>
<a href=""mailto:mi.ss.d.o.nnab.1.8.0@gmail.com"">mi.ss.d.o.nnab.1.8.0@gmail.com</a>
<a href=""mailto:mis.sdonn.ab.1.80@gmail.com"">mis.sdonn.ab.1.80@gmail.com</a>
<a href=""mailto:mi.s.s.d.onnab18.0@gmail.com"">mi.s.s.d.onnab18.0@gmail.com</a>
<a href=""mailto:mis.s.d.o.n.n.ab.1.8.0@gmail.com"">mis.s.d.o.n.n.ab.1.8.0@gmail.com</a>
<a href=""mailto:mi.ssdon.n.ab.18.0@gmail.com"">mi.ssdon.n.ab.18.0@gmail.com</a>
<a href=""mailto:m.is.s.do.n.n.ab.1.80@gmail.com"">m.is.s.do.n.n.ab.1.80@gmail.com</a>
<a href=""mailto:m.is.sdo.n.n.ab1.8.0@gmail.com"">m.is.sdo.n.n.ab1.8.0@gmail.com</a>
<a href=""mailto:m.i.s.sd.on.nab1.80@gmail.com"">m.i.s.sd.on.nab1.80@gmail.com</a>
<a href=""mailto:mi.s.sdo.nna.b180@gmail.com"">mi.s.sdo.nna.b180@gmail.com</a>
<a href=""mailto:m.issd.o.n.na.b18.0@gmail.com"">m.issd.o.n.na.b18.0@gmail.com</a>
<a href=""mailto:mis.s.d.on.n.a.b.1.80@gmail.com"">mis.s.d.on.n.a.b.1.80@gmail.com</a>
<a href=""mailto:mis.s.d.o.nn.ab18.0@gmail.com"">mis.s.d.o.nn.ab18.0@gmail.com</a>
<a href=""mailto:miss.do.nn.a.b.180@gmail.com"">miss.do.nn.a.b.180@gmail.com</a>
<a href=""mailto:m.issd.o.nnab18.0@gmail.com"">m.issd.o.nnab18.0@gmail.com</a>
<a href=""mailto:m.i.s.s.d.onna.b18.0@gmail.com"">m.i.s.s.d.onna.b18.0@gmail.com</a>
<a href=""mailto:m.issd.onnab1.8.0@gmail.com"">m.issd.onnab1.8.0@gmail.com</a>
<a href=""mailto:m.i.s.sdon.nab1.80@gmail.com"">m.i.s.sdon.nab1.80@gmail.com</a>
<a href=""mailto:m.i.ss.don.n.ab180@gmail.com"">m.i.ss.don.n.ab180@gmail.com</a>
<a href=""mailto:m.is.sd.o.nna.b.18.0@gmail.com"">m.is.sd.o.nna.b.18.0@gmail.com</a>
<a href=""mailto:mi.ss.donna.b1.8.0@gmail.com"">mi.ss.donna.b1.8.0@gmail.com</a>
<a href=""mailto:m.i.ssdo.nnab.1.80@gmail.com"">m.i.ssdo.nnab.1.80@gmail.com</a>
<a href=""mailto:mi.s.s.donnab.180@gmail.com"">mi.s.s.donnab.180@gmail.com</a>
<a href=""mailto:m.i.s.sd.o.n.n.a.b1.8.0@gmail.com"">m.i.s.sd.o.n.n.a.b1.8.0@gmail.com</a>
<a href=""mailto:m.is.s.d.o.n.na.b1.8.0@gmail.com"">m.is.s.d.o.n.na.b1.8.0@gmail.com</a>
<a href=""mailto:mi.ss.d.onnab.18.0@gmail.com"">mi.ss.d.onnab.18.0@gmail.com</a>
<a href=""mailto:mi.ssdo.nn.ab.1.8.0@gmail.com"">mi.ssdo.nn.ab.1.8.0@gmail.com</a>
<a href=""mailto:m.i.s.sd.o.nna.b.1.8.0@gmail.com"">m.i.s.sd.o.nna.b.1.8.0@gmail.com</a>
<a href=""mailto:m.iss.do.nna.b.18.0@gmail.com"">m.iss.do.nna.b.18.0@gmail.com</a>
<a href=""mailto:m.i.ssdo.n.na.b1.8.0@gmail.com"">m.i.ssdo.n.na.b1.8.0@gmail.com</a>
<a href=""mailto:mi.s.s.d.o.nna.b.1.80@gmail.com"">mi.s.s.d.o.nna.b.1.80@gmail.com</a>
<a href=""mailto:mi.ssdo.n.na.b1.80@gmail.com"">mi.ssdo.n.na.b1.80@gmail.com</a>
<a href=""mailto:miss.do.n.n.ab.180@gmail.com"">miss.do.n.n.ab.180@gmail.com</a>
<a href=""mailto:mi.ssd.on.na.b1.8.0@gmail.com"">mi.ssd.on.na.b1.8.0@gmail.com</a>
<a href=""mailto:miss.d.on.n.a.b180@gmail.com"">miss.d.on.n.a.b180@gmail.com</a>
<a href=""mailto:m.i.ssdonna.b.180@gmail.com"">m.i.ssdonna.b.180@gmail.com</a>
<a href=""mailto:miss.do.n.n.a.b1.80@gmail.com"">miss.do.n.n.a.b1.80@gmail.com</a>
<a href=""mailto:m.iss.d.o.n.n.a.b1.8.0@gmail.com"">m.iss.d.o.n.n.a.b1.8.0@gmail.com</a>
<a href=""mailto:m.iss.d.on.nab18.0@gmail.com"">m.iss.d.on.nab18.0@gmail.com</a>
<a href=""mailto:m.iss.do.n.na.b.18.0@gmail.com"">m.iss.do.n.na.b.18.0@gmail.com</a>
<a href=""mailto:m.i.ssdo.n.n.a.b.1.80@gmail.com"">m.i.ssdo.n.n.a.b.1.80@gmail.com</a>
<a href=""mailto:m.issd.o.nn.ab.180@gmail.com"">m.issd.o.nn.ab.180@gmail.com</a>
<a href=""mailto:m.is.s.do.n.na.b1.8.0@gmail.com"">m.is.s.do.n.na.b1.8.0@gmail.com</a>
<a href=""mailto:m.is.s.do.nna.b1.80@gmail.com"">m.is.s.do.nna.b1.80@gmail.com</a>
<a href=""mailto:mi.ssdo.n.na.b1.8.0@gmail.com"">mi.ssdo.n.na.b1.8.0@gmail.com</a>
<a href=""mailto:mi.s.sd.on.n.ab180@gmail.com"">mi.s.sd.on.n.ab180@gmail.com</a>
<a href=""mailto:miss.d.o.n.na.b.1.80@gmail.com"">miss.d.o.n.na.b.1.80@gmail.com</a>
<a href=""mailto:m.is.sdo.n.n.a.b18.0@gmail.com"">m.is.sdo.n.n.a.b18.0@gmail.com</a>
<a href=""mailto:miss.d.on.n.ab18.0@gmail.com"">miss.d.on.n.ab18.0@gmail.com</a>
<a href=""mailto:mi.ss.d.o.nna.b18.0@gmail.com"">mi.ss.d.o.nna.b18.0@gmail.com</a>
<a href=""mailto:missd.onnab.1.8.0@gmail.com"">missd.onnab.1.8.0@gmail.com</a>
<a href=""mailto:mi.ss.do.n.na.b180@gmail.com"">mi.ss.do.n.na.b180@gmail.com</a>
<a href=""mailto:missd.o.nn.a.b1.80@gmail.com"">missd.o.nn.a.b1.80@gmail.com</a>
<a href=""mailto:m.is.s.d.on.na.b18.0@gmail.com"">m.is.s.d.on.na.b18.0@gmail.com</a>
<a href=""mailto:miss.d.onnab18.0@gmail.com"">miss.d.onnab18.0@gmail.com</a>
<a href=""mailto:m.is.sdo.n.na.b.180@gmail.com"">m.is.sdo.n.na.b.180@gmail.com</a>
<a href=""mailto:m.i.s.s.donn.a.b180@gmail.com"">m.i.s.s.donn.a.b180@gmail.com</a>
<a href=""mailto:mi.ssd.onn.ab.18.0@gmail.com"">mi.ssd.onn.ab.18.0@gmail.com</a>
<a href=""mailto:m.i.ssd.on.n.ab.1.8.0@gmail.com"">m.i.ssd.on.n.ab.1.8.0@gmail.com</a>
<a href=""mailto:miss.d.on.n.ab.1.8.0@gmail.com"">miss.d.on.n.ab.1.8.0@gmail.com</a>
<a href=""mailto:missdonnabrownlov14@gmail.com"">missdonnabrownlov14@gmail.com</a>
<a href=""mailto:m.i.s.s.do.n.nab.rown.l.o.v1.4@gmail.com"">m.i.s.s.do.n.nab.rown.l.o.v1.4@gmail.com</a>
<a href=""mailto:mi.s.s.do.nn.a.br.own.lo.v1.4@gmail.com"">mi.s.s.do.nn.a.br.own.lo.v1.4@gmail.com</a>
<a href=""mailto:m.issd.on.na.br.ow.nl.o.v14@gmail.com"">m.issd.on.na.br.ow.nl.o.v14@gmail.com</a>
<a href=""mailto:m.is.s.donna.b.row.nl.o.v14@gmail.com"">m.is.s.donna.b.row.nl.o.v14@gmail.com</a>
<a href=""mailto:mi.s.sdon.n.abrown.l.ov.14@gmail.com"">mi.s.sdon.n.abrown.l.ov.14@gmail.com</a>
<a href=""mailto:m.is.sd.on.n.a.bro.w.n.lov14@gmail.com"">m.is.sd.on.n.a.bro.w.n.lov14@gmail.com</a>
<a href=""mailto:mi.s.sd.o.nn.a.bro.wn.l.o.v14@gmail.com"">mi.s.sd.o.nn.a.bro.wn.l.o.v14@gmail.com</a>
<a href=""mailto:mi.s.sdo.n.nabr.o.wn.l.ov14@gmail.com"">mi.s.sdo.n.nabr.o.wn.l.ov14@gmail.com</a>
<a href=""mailto:m.is.sd.o.nna.br.o.w.n.l.o.v1.4@gmail.com"">m.is.sd.o.nna.br.o.w.n.l.o.v1.4@gmail.com</a>
<a href=""mailto:mis.sd.o.n.n.ab.r.ow.n.l.ov.1.4@gmail.com"">mis.sd.o.n.n.ab.r.ow.n.l.ov.1.4@gmail.com</a>
<a href=""mailto:mi.s.s.don.na.brownl.ov14@gmail.com"">mi.s.s.don.na.brownl.ov14@gmail.com</a>
<a href=""mailto:m.i.ssd.on.nab.rownl.o.v.14@gmail.com"">m.i.ssd.on.nab.rownl.o.v.14@gmail.com</a>
<a href=""mailto:m.is.s.d.o.nn.a.br.o.w.n.lov1.4@gmail.com"">m.is.s.d.o.nn.a.br.o.w.n.lov1.4@gmail.com</a>
<a href=""mailto:miss.don.n.abr.o.w.n.lo.v14@gmail.com"">miss.don.n.abr.o.w.n.lo.v14@gmail.com</a>
<a href=""mailto:m.iss.do.nna.br.ow.nl.ov.14@gmail.com"">m.iss.do.nna.br.ow.nl.ov.14@gmail.com</a>
<a href=""mailto:m.i.s.sd.o.nnabr.o.w.n.l.ov1.4@gmail.com"">m.i.s.sd.o.nnabr.o.w.n.l.ov1.4@gmail.com</a>
<a href=""mailto:m.i.ssd.o.n.n.a.b.r.o.w.nl.ov.14@gmail.com"">m.i.ssd.o.n.n.a.b.r.o.w.nl.ov.14@gmail.com</a>
<a href=""mailto:mi.ss.d.o.nn.a.b.r.own.lo.v.1.4@gmail.com"">mi.ss.d.o.nn.a.b.r.own.lo.v.1.4@gmail.com</a>
<a href=""mailto:mis.sdonna.brown.l.o.v1.4@gmail.com"">mis.sdonna.brown.l.o.v1.4@gmail.com</a>
<a href=""mailto:mi.ss.donna.b.r.ownl.o.v14@gmail.com"">mi.ss.donna.b.r.ownl.o.v14@gmail.com</a>
<a href=""mailto:m.i.ssd.o.n.nab.r.own.lov.1.4@gmail.com"">m.i.ssd.o.n.nab.r.own.lov.1.4@gmail.com</a>
<a href=""mailto:m.i.s.s.do.n.na.b.r.ow.n.l.o.v1.4@gmail.com"">m.i.s.s.do.n.na.b.r.ow.n.l.o.v1.4@gmail.com</a>
<a href=""mailto:mi.ss.donna.br.ow.nl.o.v14@gmail.com"">mi.ss.donna.br.ow.nl.o.v14@gmail.com</a>
<a href=""mailto:m.iss.do.n.n.ab.row.n.lo.v1.4@gmail.com"">m.iss.do.n.n.ab.row.n.lo.v1.4@gmail.com</a>
<a href=""mailto:m.iss.do.nnab.r.ow.n.lo.v14@gmail.com"">m.iss.do.nnab.r.ow.n.lo.v14@gmail.com</a>
<a href=""mailto:m.is.sdon.na.b.row.nlov1.4@gmail.com"">m.is.sdon.na.b.row.nlov1.4@gmail.com</a>
<a href=""mailto:m.i.ssd.o.n.nab.row.nl.ov1.4@gmail.com"">m.i.ssd.o.n.nab.row.nl.ov1.4@gmail.com</a>
<a href=""mailto:mi.s.sdo.nnabrownl.o.v14@gmail.com"">mi.s.sdo.nnabrownl.o.v14@gmail.com</a>
<a href=""mailto:mis.s.do.n.n.ab.r.o.w.nlov14@gmail.com"">mis.s.do.n.n.ab.r.o.w.nlov14@gmail.com</a>
<a href=""mailto:m.issdon.n.a.brow.nl.ov.1.4@gmail.com"">m.issdon.n.a.brow.nl.ov.1.4@gmail.com</a>
<a href=""mailto:m.iss.d.o.n.nab.ro.wn.lo.v1.4@gmail.com"">m.iss.d.o.n.nab.ro.wn.lo.v1.4@gmail.com</a>
<a href=""mailto:m.i.ssdo.n.na.b.r.o.w.n.lov.1.4@gmail.com"">m.i.ssdo.n.na.b.r.o.w.n.lov.1.4@gmail.com</a>
<a href=""mailto:m.is.s.don.n.ab.ro.w.n.l.ov14@gmail.com"">m.is.s.don.n.ab.ro.w.n.l.ov14@gmail.com</a>
<a href=""mailto:m.issdo.nn.abro.wnl.ov.14@gmail.com"">m.issdo.nn.abro.wnl.ov.14@gmail.com</a>
<a href=""mailto:m.iss.d.o.nn.abr.ow.n.l.ov14@gmail.com"">m.iss.d.o.nn.abr.ow.n.l.ov14@gmail.com</a>
<a href=""mailto:mi.s.s.donnabrow.nl.o.v14@gmail.com"">mi.s.s.donnabrow.nl.o.v14@gmail.com</a>
<a href=""mailto:mi.s.s.d.o.nn.a.brow.n.lov.14@gmail.com"">mi.s.s.d.o.nn.a.brow.n.lov.14@gmail.com</a>
<a href=""mailto:mi.s.s.don.n.abro.w.n.lov.14@gmail.com"">mi.s.s.don.n.abro.w.n.lov.14@gmail.com</a>
<a href=""mailto:mi.ss.d.o.n.na.b.rownlo.v.1.4@gmail.com"">mi.ss.d.o.n.na.b.rownlo.v.1.4@gmail.com</a>
<a href=""mailto:miss.d.o.nn.abro.w.nlo.v.14@gmail.com"">miss.d.o.nn.abro.w.nlo.v.14@gmail.com</a>
<a href=""mailto:missd.onn.ab.r.ow.n.l.o.v1.4@gmail.com"">missd.onn.ab.r.ow.n.l.o.v1.4@gmail.com</a>
<a href=""mailto:m.i.ssdo.n.n.a.b.ro.w.n.lov14@gmail.com"">m.i.ssdo.n.n.a.b.ro.w.n.lov14@gmail.com</a>
<a href=""mailto:m.is.sd.on.n.a.br.ow.nl.ov.1.4@gmail.com"">m.is.sd.on.n.a.br.ow.nl.ov.1.4@gmail.com</a>
<a href=""mailto:m.i.ss.d.o.n.n.a.b.r.o.wnl.ov.1.4@gmail.com"">m.i.ss.d.o.n.n.a.b.r.o.wnl.ov.1.4@gmail.com</a>
<a href=""mailto:mi.s.sd.onn.abro.wnl.ov14@gmail.com"">mi.s.sd.onn.abro.wnl.ov14@gmail.com</a>
<a href=""mailto:mi.s.sdo.nn.a.b.r.o.wn.l.ov1.4@gmail.com"">mi.s.sdo.nn.a.b.r.o.wn.l.ov1.4@gmail.com</a>
<a href=""mailto:mi.s.s.d.o.n.nabro.wn.l.o.v14@gmail.com"">mi.s.s.d.o.n.nabro.wn.l.o.v14@gmail.com</a>
<a href=""mailto:m.i.s.s.do.n.na.bro.w.nlo.v.1.4@gmail.com"">m.i.s.s.do.n.na.bro.w.nlo.v.1.4@gmail.com</a>
<a href=""mailto:mis.sd.o.n.na.b.ro.w.nl.o.v.1.4@gmail.com"">mis.sd.o.n.na.b.ro.w.nl.o.v.1.4@gmail.com</a>
<a href=""mailto:m.iss.don.n.a.brown.lo.v.1.4@gmail.com"">m.iss.don.n.a.brown.lo.v.1.4@gmail.com</a>
<a href=""mailto:mis.sd.o.nn.ab.ro.wnlo.v.14@gmail.com"">mis.sd.o.nn.ab.ro.wnlo.v.14@gmail.com</a>
<a href=""mailto:m.i.ssd.o.nnab.ro.w.nlo.v.1.4@gmail.com"">m.i.ssd.o.nnab.ro.w.nlo.v.1.4@gmail.com</a>
<a href=""mailto:m.is.sd.o.nn.ab.ro.wn.lov.14@gmail.com"">m.is.sd.o.nn.ab.ro.wn.lov.14@gmail.com</a>
<a href=""mailto:mis.sd.on.n.a.br.o.wnl.ov.1.4@gmail.com"">mis.sd.on.n.a.br.o.wnl.ov.1.4@gmail.com</a>
<a href=""mailto:m.i.s.s.d.o.nn.abr.o.wn.lo.v14@gmail.com"">m.i.s.s.d.o.nn.abr.o.wn.lo.v14@gmail.com</a>
<a href=""mailto:m.is.s.do.n.na.b.r.o.w.nlo.v1.4@gmail.com"">m.is.s.do.n.na.b.r.o.w.nlo.v1.4@gmail.com</a>
<a href=""mailto:mi.ssd.o.n.nabrow.nlo.v.14@gmail.com"">mi.ssd.o.n.nabrow.nlo.v.14@gmail.com</a>
<a href=""mailto:m.i.s.s.d.onnab.r.ownl.ov14@gmail.com"">m.i.s.s.d.onnab.r.ownl.ov14@gmail.com</a>
<a href=""mailto:mis.sdon.na.br.o.w.nlo.v14@gmail.com"">mis.sdon.na.br.o.w.nlo.v14@gmail.com</a>
<a href=""mailto:mi.ss.donn.a.brown.l.o.v.14@gmail.com"">mi.ss.donn.a.brown.l.o.v.14@gmail.com</a>
<a href=""mailto:m.is.s.do.n.nab.r.o.w.nlov.14@gmail.com"">m.is.s.do.n.nab.r.o.w.nlov.14@gmail.com</a>
<a href=""mailto:m.i.ssd.o.nn.abrownlo.v1.4@gmail.com"">m.i.ssd.o.nn.abrownlo.v1.4@gmail.com</a>
<a href=""mailto:missd.o.n.na.b.r.ow.n.l.o.v1.4@gmail.com"">missd.o.n.na.b.r.ow.n.l.o.v1.4@gmail.com</a>
<a href=""mailto:mis.sd.o.nn.ab.r.o.w.nlov.1.4@gmail.com"">mis.sd.o.nn.ab.r.o.w.nlov.1.4@gmail.com</a>
<a href=""mailto:m.i.ss.d.o.n.n.a.b.ro.wn.lo.v.1.4@gmail.com"">m.i.ss.d.o.n.n.a.b.ro.wn.lo.v.1.4@gmail.com</a>
<a href=""mailto:mi.s.sdo.n.nab.r.o.w.n.lo.v1.4@gmail.com"">mi.s.sdo.n.nab.r.o.w.n.lo.v1.4@gmail.com</a>
<a href=""mailto:m.is.s.don.na.b.r.own.l.ov.1.4@gmail.com"">m.is.s.don.na.b.r.own.l.ov.1.4@gmail.com</a>
<a href=""mailto:mi.ssdonn.abrow.n.l.ov14@gmail.com"">mi.ssdonn.abrow.n.l.ov14@gmail.com</a>
<a href=""mailto:m.i.ss.don.na.b.r.ow.n.lov.14@gmail.com"">m.i.ss.don.na.b.r.ow.n.lov.14@gmail.com</a>
<a href=""mailto:m.issd.on.na.b.r.ow.n.l.o.v.1.4@gmail.com"">m.issd.on.na.b.r.ow.n.l.o.v.1.4@gmail.com</a>
<a href=""mailto:mis.s.d.onna.brow.nlov.1.4@gmail.com"">mis.s.d.onna.brow.nlov.1.4@gmail.com</a>
<a href=""mailto:mi.ss.d.on.n.ab.r.own.l.o.v.14@gmail.com"">mi.ss.d.on.n.ab.r.own.l.o.v.14@gmail.com</a>
<a href=""mailto:mi.s.s.don.n.abro.wn.lo.v1.4@gmail.com"">mi.s.s.don.n.abro.wn.lo.v1.4@gmail.com</a>
<a href=""mailto:m.iss.d.onnab.r.ow.nlov.1.4@gmail.com"">m.iss.d.onnab.r.ow.nlov.1.4@gmail.com</a>
<a href=""mailto:mis.sdo.n.n.a.bro.wn.l.ov.1.4@gmail.com"">mis.sdo.n.n.a.bro.wn.l.ov.1.4@gmail.com</a>
<a href=""mailto:m.iss.donn.abr.own.lov14@gmail.com"">m.iss.donn.abr.own.lov14@gmail.com</a>
<a href=""mailto:mi.s.s.d.o.nna.brownl.o.v1.4@gmail.com"">mi.s.s.d.o.nna.brownl.o.v1.4@gmail.com</a>
<a href=""mailto:missd.onn.a.bro.w.n.l.ov.14@gmail.com"">missd.onn.a.bro.w.n.l.ov.14@gmail.com</a>
<a href=""mailto:m.iss.don.na.b.ro.w.n.lov.14@gmail.com"">m.iss.don.na.b.ro.w.n.lov.14@gmail.com</a>
<a href=""mailto:m.i.s.s.do.nna.b.r.ow.n.lo.v.1.4@gmail.com"">m.i.s.s.do.nna.b.r.ow.n.lo.v.1.4@gmail.com</a>
<a href=""mailto:mis.sdonn.a.br.o.wn.l.o.v.14@gmail.com"">mis.sdonn.a.br.o.wn.l.o.v.14@gmail.com</a>
<a href=""mailto:m.issd.o.nn.a.bro.wnlov14@gmail.com"">m.issd.o.nn.a.bro.wnlov14@gmail.com</a>
<a href=""mailto:missd.onn.a.b.r.o.w.n.lo.v1.4@gmail.com"">missd.onn.a.b.r.o.w.n.lo.v1.4@gmail.com</a>
<a href=""mailto:mi.ss.do.n.n.a.b.ro.wn.lov.1.4@gmail.com"">mi.ss.do.n.n.a.b.ro.wn.lov.1.4@gmail.com</a>
<a href=""mailto:m.i.s.s.do.n.nabr.ow.nlov.14@gmail.com"">m.i.s.s.do.n.nabr.ow.nlov.14@gmail.com</a>
<a href=""mailto:mis.s.d.onnab.r.ow.n.lo.v.1.4@gmail.com"">mis.s.d.onnab.r.ow.n.lo.v.1.4@gmail.com</a>
<a href=""mailto:mi.ss.d.o.n.na.br.ownl.o.v.14@gmail.com"">mi.ss.d.o.n.na.br.ownl.o.v.14@gmail.com</a>
<a href=""mailto:mi.ss.don.nab.ro.w.nl.o.v1.4@gmail.com"">mi.ss.don.nab.ro.w.nl.o.v1.4@gmail.com</a>
<a href=""mailto:mi.s.sd.on.n.ab.r.o.wnlov.1.4@gmail.com"">mi.s.sd.on.n.ab.r.o.wnlov.1.4@gmail.com</a>
<a href=""mailto:m.i.s.sdo.nn.a.brownlo.v1.4@gmail.com"">m.i.s.sdo.nn.a.brownlo.v1.4@gmail.com</a>
<a href=""mailto:m.i.ss.d.o.n.na.br.ownl.o.v.1.4@gmail.com"">m.i.ss.d.o.n.na.br.ownl.o.v.1.4@gmail.com</a>
<a href=""mailto:m.iss.don.n.abrow.n.lov.14@gmail.com"">m.iss.don.n.abrow.n.lov.14@gmail.com</a>
<a href=""mailto:m.issd.on.n.abrow.nlov.1.4@gmail.com"">m.issd.on.n.abrow.nlov.1.4@gmail.com</a>
<a href=""mailto:m.is.sd.on.n.a.b.ro.w.nlo.v1.4@gmail.com"">m.is.sd.on.n.a.b.ro.w.nlo.v1.4@gmail.com</a>
<a href=""mailto:mi.s.sd.onna.b.row.n.l.ov1.4@gmail.com"">mi.s.sd.onna.b.row.n.l.ov1.4@gmail.com</a>
<a href=""mailto:m.is.sd.o.n.nabro.w.n.lo.v1.4@gmail.com"">m.is.sd.o.n.nabro.w.n.lo.v1.4@gmail.com</a>
<a href=""mailto:m.i.ssdo.nna.b.row.n.lo.v1.4@gmail.com"">m.i.ssdo.nna.b.row.n.lo.v1.4@gmail.com</a>
<a href=""mailto:m.i.s.sd.o.n.n.a.b.ro.w.nlo.v14@gmail.com"">m.i.s.sd.o.n.n.a.b.ro.w.nlo.v14@gmail.com</a>
<a href=""mailto:m.issdo.nn.abr.ow.n.l.ov.14@gmail.com"">m.issdo.nn.abr.ow.n.l.ov.14@gmail.com</a>
<a href=""mailto:m.i.ss.donnabr.o.w.nl.ov.1.4@gmail.com"">m.i.ss.donnabr.o.w.nl.ov.1.4@gmail.com</a>
<a href=""mailto:m.i.ssd.onna.br.o.wn.l.ov.1.4@gmail.com"">m.i.ssd.onna.br.o.wn.l.ov.1.4@gmail.com</a>
<a href=""mailto:m.i.ssdon.nabr.own.l.o.v1.4@gmail.com"">m.i.ssdon.nabr.own.l.o.v1.4@gmail.com</a>
<a href=""mailto:m.is.s.d.o.nnab.ro.w.n.lo.v.1.4@gmail.com"">m.is.s.d.o.nnab.ro.w.n.lo.v.1.4@gmail.com</a>
<a href=""mailto:mi.ssdon.na.br.ow.n.l.o.v14@gmail.com"">mi.ssdon.na.br.ow.n.l.o.v14@gmail.com</a>
<a href=""mailto:m.is.s.do.n.n.a.b.r.own.l.ov.1.4@gmail.com"">m.is.s.do.n.n.a.b.r.own.l.ov.1.4@gmail.com</a>
<a href=""mailto:m.i.s.s.don.nabr.o.wnl.ov14@gmail.com"">m.i.s.s.don.nabr.o.wnl.ov14@gmail.com</a>
<a href=""mailto:mis.sdo.n.n.abro.w.nlo.v1.4@gmail.com"">mis.sdo.n.n.abro.w.nlo.v1.4@gmail.com</a>
<a href=""mailto:m.is.sdon.na.br.o.w.n.l.o.v14@gmail.com"">m.is.sdon.na.br.o.w.n.l.o.v14@gmail.com</a>
<a href=""mailto:mis.s.d.o.n.na.brow.nlo.v14@gmail.com"">mis.s.d.o.n.na.brow.nlo.v14@gmail.com</a>
<a href=""mailto:m.iss.do.nnabr.o.w.n.l.o.v1.4@gmail.com"">m.iss.do.nnabr.o.w.n.l.o.v1.4@gmail.com</a>
<a href=""mailto:m.i.ssdo.nn.ab.r.ow.n.lov14@gmail.com"">m.i.ssdo.nn.ab.r.ow.n.lov14@gmail.com</a>
<a href=""mailto:missdonnab.ro.wnlov.1.4@gmail.com"">missdonnab.ro.wnlov.1.4@gmail.com</a>
<a href=""mailto:mi.ss.donn.ab.row.nl.o.v.14@gmail.com"">mi.ss.donn.ab.row.nl.o.v.14@gmail.com</a>
<a href=""mailto:mi.s.sd.on.n.ab.r.ow.nlov1.4@gmail.com"">mi.s.sd.on.n.ab.r.ow.nlov1.4@gmail.com</a>
<a href=""mailto:m.i.s.s.d.o.n.n.abr.o.wnlov1.4@gmail.com"">m.i.s.s.d.o.n.n.abr.o.wnlov1.4@gmail.com</a>
<a href=""mailto:mi.s.s.d.o.n.n.abro.w.n.lo.v.1.4@gmail.com"">mi.s.s.d.o.n.n.abro.w.n.lo.v.1.4@gmail.com</a>
<a href=""mailto:missdo.n.nabro.wn.lov.14@gmail.com"">missdo.n.nabro.wn.lov.14@gmail.com</a>
<a href=""mailto:mis.s.donna.b.r.own.l.ov1.4@gmail.com"">mis.s.donna.b.r.own.l.ov1.4@gmail.com</a>
<a href=""mailto:mi.s.sd.on.na.b.r.o.wnlo.v.14@gmail.com"">mi.s.sd.on.na.b.r.o.wnlo.v.14@gmail.com</a>
<a href=""mailto:mi.s.s.donnabr.own.l.ov.1.4@gmail.com"">mi.s.s.donnabr.own.l.ov.1.4@gmail.com</a>
<a href=""mailto:m.i.ss.d.onnab.r.ow.n.l.ov14@gmail.com"">m.i.ss.d.onnab.r.ow.n.l.ov14@gmail.com</a>
<a href=""mailto:m.issd.o.nn.a.b.ro.wnlov.1.4@gmail.com"">m.issd.o.nn.a.b.ro.wnlov.1.4@gmail.com</a>
<a href=""mailto:mi.s.s.d.o.nnabr.ow.nl.o.v14@gmail.com"">mi.s.s.d.o.nnabr.ow.nl.o.v14@gmail.com</a>
<a href=""mailto:missdo.n.n.abro.wnl.ov.14@gmail.com"">missdo.n.n.abro.wnl.ov.14@gmail.com</a>
<a href=""mailto:mi.s.sd.o.nna.b.row.n.lo.v.14@gmail.com"">mi.s.sd.o.nna.b.row.n.lo.v.14@gmail.com</a>
<a href=""mailto:m.issd.o.n.n.a.b.row.n.l.o.v.1.4@gmail.com"">m.issd.o.n.n.a.b.row.n.l.o.v.1.4@gmail.com</a>
<a href=""mailto:m.i.s.sdon.n.ab.rown.l.o.v1.4@gmail.com"">m.i.s.sdon.n.ab.rown.l.o.v1.4@gmail.com</a>
<a href=""mailto:missdonn.abr.o.w.nl.ov1.4@gmail.com"">missdonn.abr.o.w.nl.ov1.4@gmail.com</a>
<a href=""mailto:mi.ss.do.n.na.br.o.wnlo.v14@gmail.com"">mi.ss.do.n.na.br.o.wnlo.v14@gmail.com</a>
<a href=""mailto:m.i.s.sd.on.n.a.bro.wnlov.1.4@gmail.com"">m.i.s.sd.on.n.a.bro.wnlov.1.4@gmail.com</a>
<a href=""mailto:mi.s.sdo.n.n.a.brow.nlo.v14@gmail.com"">mi.s.sdo.n.n.a.brow.nlo.v14@gmail.com</a>
<a href=""mailto:mi.ss.do.n.n.a.bro.w.n.lo.v.14@gmail.com"">mi.ss.do.n.n.a.bro.w.n.lo.v.14@gmail.com</a>
<a href=""mailto:mi.s.s.do.nn.a.b.ro.wnlo.v.14@gmail.com"">mi.s.s.do.nn.a.b.ro.wnlo.v.14@gmail.com</a>
<a href=""mailto:m.is.sdonn.a.b.ro.wnlo.v.14@gmail.com"">m.is.sdonn.a.b.ro.wnlo.v.14@gmail.com</a>
<a href=""mailto:m.issd.onn.ab.r.o.wn.lo.v14@gmail.com"">m.issd.onn.ab.r.o.wn.lo.v14@gmail.com</a>
<a href=""mailto:m.i.s.sdo.n.n.a.b.ro.wn.lo.v.1.4@gmail.com"">m.i.s.sdo.n.n.a.b.ro.wn.lo.v.1.4@gmail.com</a>
<a href=""mailto:mi.s.s.do.n.na.br.o.wn.lov.14@gmail.com"">mi.s.s.do.n.na.br.o.wn.lov.14@gmail.com</a>
<a href=""mailto:mi.s.s.d.onn.a.bro.w.nl.ov.1.4@gmail.com"">mi.s.s.d.onn.a.bro.w.nl.ov.1.4@gmail.com</a>
<a href=""mailto:m.issdon.n.abrow.nlo.v.14@gmail.com"">m.issdon.n.abrow.nlo.v.14@gmail.com</a>
<a href=""mailto:m.is.s.d.o.nna.brownl.ov1.4@gmail.com"">m.is.s.d.o.nna.brownl.ov1.4@gmail.com</a>
<a href=""mailto:mis.s.don.n.a.b.r.o.wn.lov.14@gmail.com"">mis.s.don.n.a.b.r.o.wn.lov.14@gmail.com</a>
<a href=""mailto:mi.s.sd.on.na.b.row.nl.ov.14@gmail.com"">mi.s.sd.on.na.b.row.nl.ov.14@gmail.com</a>
<a href=""mailto:m.issd.o.nn.a.b.r.o.w.n.lov.1.4@gmail.com"">m.issd.o.nn.a.b.r.o.w.n.lov.1.4@gmail.com</a>
<a href=""mailto:m.i.ss.d.o.nnabr.ow.n.lo.v14@gmail.com"">m.i.ss.d.o.nnabr.ow.n.lo.v14@gmail.com</a>
<a href=""mailto:m.is.s.do.nnab.r.o.wnlov.1.4@gmail.com"">m.is.s.do.nnab.r.o.wnlov.1.4@gmail.com</a>
<a href=""mailto:m.i.s.s.do.nn.a.br.o.w.n.lov1.4@gmail.com"">m.i.s.s.do.nn.a.br.o.w.n.lov1.4@gmail.com</a>
<a href=""mailto:m.i.ss.donnabr.ow.n.lo.v.14@gmail.com"">m.i.ss.donnabr.ow.n.lo.v.14@gmail.com</a>
<a href=""mailto:mi.s.sd.on.na.br.ow.nl.ov14@gmail.com"">mi.s.sd.on.na.br.ow.nl.ov14@gmail.com</a>
<a href=""mailto:miss.d.o.n.n.ab.r.own.l.o.v1.4@gmail.com"">miss.d.o.n.n.ab.r.own.l.o.v1.4@gmail.com</a>
<a href=""mailto:mi.ssd.o.n.n.a.b.row.n.l.o.v.14@gmail.com"">mi.ssd.o.n.n.a.b.row.n.l.o.v.14@gmail.com</a>
<a href=""mailto:m.i.ss.do.nnabr.o.w.nlov1.4@gmail.com"">m.i.ss.do.nnabr.o.w.nlov1.4@gmail.com</a>
<a href=""mailto:m.iss.do.nn.ab.rownlov14@gmail.com"">m.iss.do.nn.ab.rownlov14@gmail.com</a>
<a href=""mailto:m.is.s.d.o.nn.ab.row.n.l.ov1.4@gmail.com"">m.is.s.d.o.nn.ab.row.n.l.ov1.4@gmail.com</a>
<a href=""mailto:m.i.s.sd.o.nn.abr.o.w.nl.o.v.14@gmail.com"">m.i.s.sd.o.nn.abr.o.w.nl.o.v.14@gmail.com</a>
<a href=""mailto:m.i.ss.donn.a.br.own.l.o.v.14@gmail.com"">m.i.ss.donn.a.br.own.l.o.v.14@gmail.com</a>
<a href=""mailto:miss.d.o.n.nabr.o.wn.lo.v14@gmail.com"">miss.d.o.n.nabr.o.wn.lo.v14@gmail.com</a>
<a href=""mailto:m.is.sd.o.n.nabr.o.wn.lov.14@gmail.com"">m.is.sd.o.n.nabr.o.wn.lov.14@gmail.com</a>
<a href=""mailto:m.is.sdon.n.ab.ro.wnl.ov1.4@gmail.com"">m.is.sdon.n.ab.ro.wnl.ov1.4@gmail.com</a>
<a href=""mailto:mi.s.sdon.nabr.o.wn.l.ov.1.4@gmail.com"">mi.s.sdon.nabr.o.wn.l.ov.1.4@gmail.com</a>
<a href=""mailto:m.i.s.s.do.n.n.ab.r.o.wnl.o.v14@gmail.com"">m.i.s.s.do.n.n.ab.r.o.wnl.o.v14@gmail.com</a>
<a href=""mailto:m.is.sd.on.n.a.b.rownlov.14@gmail.com"">m.is.sd.on.n.a.b.rownlov.14@gmail.com</a>
<a href=""mailto:m.i.s.sdo.nn.a.b.row.nl.ov1.4@gmail.com"">m.i.s.sdo.nn.a.b.row.nl.ov1.4@gmail.com</a>
<a href=""mailto:m.i.s.s.d.o.n.nab.r.o.wn.l.ov1.4@gmail.com"">m.i.s.s.d.o.n.nab.r.o.wn.l.ov1.4@gmail.com</a>
<a href=""mailto:m.i.s.s.d.on.nabr.o.w.nlo.v.1.4@gmail.com"">m.i.s.s.d.on.nabr.o.w.nlo.v.1.4@gmail.com</a>
<a href=""mailto:mis.s.do.n.na.b.row.nl.o.v1.4@gmail.com"">mis.s.do.n.na.b.row.nl.o.v1.4@gmail.com</a>
<a href=""mailto:m.is.sd.o.nnabr.ow.n.lov14@gmail.com"">m.is.sd.o.nnabr.ow.n.lov14@gmail.com</a>
<a href=""mailto:mis.s.don.n.a.b.r.own.lo.v1.4@gmail.com"">mis.s.don.n.a.b.r.own.lo.v1.4@gmail.com</a>
<a href=""mailto:missdon.n.a.b.r.o.wn.lo.v14@gmail.com"">missdon.n.a.b.r.o.wn.lo.v14@gmail.com</a>
<a href=""mailto:m.is.sd.o.n.n.abr.o.wnlo.v1.4@gmail.com"">m.is.sd.o.n.n.abr.o.wnlo.v1.4@gmail.com</a>
<a href=""mailto:mi.ss.don.n.ab.r.o.w.nl.o.v14@gmail.com"">mi.ss.don.n.ab.r.o.w.nl.o.v14@gmail.com</a>
<a href=""mailto:m.issd.o.nn.a.brow.nl.ov1.4@gmail.com"">m.issd.o.nn.a.brow.nl.ov1.4@gmail.com</a>
<a href=""mailto:m.is.s.do.nn.ab.row.n.lo.v1.4@gmail.com"">m.is.s.do.nn.ab.row.n.lo.v1.4@gmail.com</a>
<a href=""mailto:mis.s.d.o.n.nab.r.o.wnl.ov.1.4@gmail.com"">mis.s.d.o.n.nab.r.o.wnl.ov.1.4@gmail.com</a>
<a href=""mailto:m.iss.don.n.a.brow.nlov1.4@gmail.com"">m.iss.don.n.a.brow.nlov1.4@gmail.com</a>
<a href=""mailto:m.i.ss.d.on.n.abrown.lov14@gmail.com"">m.i.ss.d.on.n.abrown.lov14@gmail.com</a>
<a href=""mailto:m.iss.donna.b.rown.lo.v.14@gmail.com"">m.iss.donna.b.rown.lo.v.14@gmail.com</a>
<a href=""mailto:mi.s.sdon.n.abr.o.wnlov14@gmail.com"">mi.s.sdon.n.abr.o.wnlov14@gmail.com</a>
<a href=""mailto:missd.onn.ab.rownlo.v.14@gmail.com"">missd.onn.ab.rownlo.v.14@gmail.com</a>
<a href=""mailto:m.is.s.d.o.n.na.b.r.own.lo.v1.4@gmail.com"">m.is.s.d.o.n.na.b.r.own.lo.v1.4@gmail.com</a>
<a href=""mailto:m.i.ss.d.o.n.na.b.ro.wnl.o.v.14@gmail.com"">m.i.ss.d.o.n.na.b.ro.wnl.o.v.14@gmail.com</a>
<a href=""mailto:mis.s.d.onn.abr.ow.n.lov.1.4@gmail.com"">mis.s.d.onn.abr.ow.n.lov.1.4@gmail.com</a>
<a href=""mailto:mi.s.s.do.n.nab.r.o.w.nlov1.4@gmail.com"">mi.s.s.do.n.nab.r.o.w.nlov1.4@gmail.com</a>
<a href=""mailto:m.is.sd.on.nabr.own.lov.1.4@gmail.com"">m.is.sd.on.nabr.own.lov.1.4@gmail.com</a>
<a href=""mailto:m.issdonnab.ro.wnl.o.v1.4@gmail.com"">m.issdonnab.ro.wnl.o.v1.4@gmail.com</a>
<a href=""mailto:m.i.s.s.d.o.nnab.rown.lo.v1.4@gmail.com"">m.i.s.s.d.o.nnab.rown.lo.v1.4@gmail.com</a>
<a href=""mailto:m.i.ss.d.on.n.a.brow.nlo.v1.4@gmail.com"">m.i.ss.d.on.n.a.brow.nlo.v1.4@gmail.com</a>
<a href=""mailto:m.i.s.sd.on.nab.r.ow.n.lo.v.1.4@gmail.com"">m.i.s.sd.on.nab.r.ow.n.lo.v.1.4@gmail.com</a>
<a href=""mailto:mi.s.sdonnabro.w.nlo.v.1.4@gmail.com"">mi.s.sdonnabro.w.nlo.v.1.4@gmail.com</a>
<a href=""mailto:missdon.na.br.o.w.n.lo.v.14@gmail.com"">missdon.na.br.o.w.n.lo.v.14@gmail.com</a>
<a href=""mailto:m.i.s.sdonn.a.bro.w.n.lov.14@gmail.com"">m.i.s.sdonn.a.bro.w.n.lov.14@gmail.com</a>
<a href=""mailto:m.i.ss.d.o.n.na.brownl.o.v14@gmail.com"">m.i.ss.d.o.n.na.brownl.o.v14@gmail.com</a>
<a href=""mailto:m.iss.d.onnabr.ownl.ov.14@gmail.com"">m.iss.d.onnabr.ownl.ov.14@gmail.com</a>
<a href=""mailto:mis.s.donn.abrow.nlo.v.14@gmail.com"">mis.s.donn.abrow.nlo.v.14@gmail.com</a>
<a href=""mailto:missd.on.n.ab.ro.w.n.lo.v.14@gmail.com"">missd.on.n.ab.ro.w.n.lo.v.14@gmail.com</a>
<a href=""mailto:m.is.sdo.n.na.b.r.o.w.n.lov.14@gmail.com"">m.is.sdo.n.na.b.r.o.w.n.lov.14@gmail.com</a>
<a href=""mailto:mis.s.don.n.a.b.r.o.w.n.lo.v1.4@gmail.com"">mis.s.don.n.a.b.r.o.w.n.lo.v1.4@gmail.com</a>
<a href=""mailto:m.i.ss.donn.abr.o.wnlov.1.4@gmail.com"">m.i.ss.donn.abr.o.wnlov.1.4@gmail.com</a>
<a href=""mailto:mi.ssdo.n.n.abr.ow.nl.ov.1.4@gmail.com"">mi.ssdo.n.n.abr.ow.nl.ov.1.4@gmail.com</a>
<a href=""mailto:mi.ss.d.on.nab.ro.w.n.l.ov.14@gmail.com"">mi.ss.d.on.nab.ro.w.n.l.ov.14@gmail.com</a>
<a href=""mailto:mi.s.sd.o.n.n.a.brownlov.1.4@gmail.com"">mi.s.sd.o.n.n.a.brownlov.1.4@gmail.com</a>
<a href=""mailto:missdonnahistory@gmail.com"">missdonnahistory@gmail.com</a>
<a href=""mailto:m.i.ss.d.o.nnahis.t.ory@gmail.com"">m.i.ss.d.o.nnahis.t.ory@gmail.com</a>
<a href=""mailto:mi.s.s.do.nn.ah.i.s.t.o.ry@gmail.com"">mi.s.s.do.nn.ah.i.s.t.o.ry@gmail.com</a>
<a href=""mailto:mi.s.s.donna.h.i.stor.y@gmail.com"">mi.s.s.donna.h.i.stor.y@gmail.com</a>
<a href=""mailto:mi.s.sd.onn.a.hist.o.ry@gmail.com"">mi.s.sd.onn.a.hist.o.ry@gmail.com</a>
<a href=""mailto:m.issd.o.nnah.i.s.t.o.r.y@gmail.com"">m.issd.o.nnah.i.s.t.o.r.y@gmail.com</a>
<a href=""mailto:mi.ssd.onnahistor.y@gmail.com"">mi.ssd.onnahistor.y@gmail.com</a>
<a href=""mailto:m.iss.don.nah.ist.ory@gmail.com"">m.iss.don.nah.ist.ory@gmail.com</a>
<a href=""mailto:mis.sd.o.n.n.ahi.s.tory@gmail.com"">mis.sd.o.n.n.ahi.s.tory@gmail.com</a>
<a href=""mailto:mi.ssd.o.n.n.a.histo.r.y@gmail.com"">mi.ssd.o.n.n.a.histo.r.y@gmail.com</a>
<a href=""mailto:m.issd.o.n.nah.i.s.t.ory@gmail.com"">m.issd.o.n.nah.i.s.t.ory@gmail.com</a>
<a href=""mailto:mi.s.sd.o.nn.ah.is.t.o.r.y@gmail.com"">mi.s.sd.o.nn.ah.is.t.o.r.y@gmail.com</a>
<a href=""mailto:mis.s.d.o.nna.h.i.sto.r.y@gmail.com"">mis.s.d.o.nna.h.i.sto.r.y@gmail.com</a>
<a href=""mailto:m.issdo.n.n.a.h.ist.o.ry@gmail.com"">m.issdo.n.n.a.h.ist.o.ry@gmail.com</a>
<a href=""mailto:mis.sd.o.nn.a.h.ist.o.ry@gmail.com"">mis.sd.o.nn.a.h.ist.o.ry@gmail.com</a>
<a href=""mailto:miss.d.o.nn.ahi.story@gmail.com"">miss.d.o.nn.ahi.story@gmail.com</a>
<a href=""mailto:mi.ss.don.n.ahist.o.r.y@gmail.com"">mi.ss.don.n.ahist.o.r.y@gmail.com</a>
<a href=""mailto:m.i.ss.do.nn.a.h.is.t.o.r.y@gmail.com"">m.i.ss.do.nn.a.h.is.t.o.r.y@gmail.com</a>
<a href=""mailto:m.i.s.sdon.n.a.h.i.story@gmail.com"">m.i.s.sdon.n.a.h.i.story@gmail.com</a>
<a href=""mailto:m.i.s.sdon.n.a.hist.or.y@gmail.com"">m.i.s.sdon.n.a.hist.or.y@gmail.com</a>
<a href=""mailto:m.is.sdo.nnahi.sto.ry@gmail.com"">m.is.sdo.nnahi.sto.ry@gmail.com</a>
<a href=""mailto:m.i.s.sdo.nn.a.hi.s.tory@gmail.com"">m.i.s.sdo.nn.a.hi.s.tory@gmail.com</a>
<a href=""mailto:mi.s.sd.onnahi.st.o.r.y@gmail.com"">mi.s.sd.onnahi.st.o.r.y@gmail.com</a>
<a href=""mailto:m.is.sd.o.nnah.i.s.t.ory@gmail.com"">m.is.sd.o.nnah.i.s.t.ory@gmail.com</a>
<a href=""mailto:mi.s.s.donn.ah.isto.r.y@gmail.com"">mi.s.s.donn.ah.isto.r.y@gmail.com</a>
<a href=""mailto:m.i.ssd.onna.hist.o.ry@gmail.com"">m.i.ssd.onna.hist.o.ry@gmail.com</a>
<a href=""mailto:m.iss.d.o.nna.h.isto.r.y@gmail.com"">m.iss.d.o.nna.h.isto.r.y@gmail.com</a>
<a href=""mailto:mis.sd.o.n.n.a.hi.stor.y@gmail.com"">mis.sd.o.n.n.a.hi.stor.y@gmail.com</a>
<a href=""mailto:mi.ssd.o.n.n.a.h.i.s.to.r.y@gmail.com"">mi.ssd.o.n.n.a.h.i.s.to.r.y@gmail.com</a>
<a href=""mailto:missd.on.nahi.story@gmail.com"">missd.on.nahi.story@gmail.com</a>
<a href=""mailto:m.issdonn.a.his.to.ry@gmail.com"">m.issdonn.a.his.to.ry@gmail.com</a>
<a href=""mailto:mi.ss.don.nah.i.story@gmail.com"">mi.ss.don.nah.i.story@gmail.com</a>
<a href=""mailto:m.i.s.s.d.o.nn.a.his.tor.y@gmail.com"">m.i.s.s.d.o.nn.a.his.tor.y@gmail.com</a>
<a href=""mailto:mi.ssdo.nn.ah.ist.or.y@gmail.com"">mi.ssdo.nn.ah.ist.or.y@gmail.com</a>
<a href=""mailto:m.is.sd.o.n.nah.i.story@gmail.com"">m.is.sd.o.n.nah.i.story@gmail.com</a>
<a href=""mailto:mi.ss.donn.a.h.i.st.ory@gmail.com"">mi.ss.donn.a.h.i.st.ory@gmail.com</a>
<a href=""mailto:m.iss.do.nna.h.i.s.to.ry@gmail.com"">m.iss.do.nna.h.i.s.to.ry@gmail.com</a>
<a href=""mailto:m.i.s.s.don.n.ahi.s.t.o.ry@gmail.com"">m.i.s.s.don.n.ahi.s.t.o.ry@gmail.com</a>
<a href=""mailto:m.iss.d.on.n.ah.i.s.tor.y@gmail.com"">m.iss.d.on.n.ah.i.s.tor.y@gmail.com</a>
<a href=""mailto:m.i.s.sd.o.nna.h.i.st.ory@gmail.com"">m.i.s.sd.o.nna.h.i.st.ory@gmail.com</a>
<a href=""mailto:m.i.s.sd.o.nnah.i.s.t.or.y@gmail.com"">m.i.s.sd.o.nnah.i.s.t.or.y@gmail.com</a>
<a href=""mailto:mi.s.sd.o.nnahis.t.or.y@gmail.com"">mi.s.sd.o.nnahis.t.or.y@gmail.com</a>
<a href=""mailto:m.i.ssdonn.a.hist.o.ry@gmail.com"">m.i.ssdonn.a.hist.o.ry@gmail.com</a>
<a href=""mailto:m.i.s.sdon.n.ahis.tory@gmail.com"">m.i.s.sdon.n.ahis.tory@gmail.com</a>
<a href=""mailto:mi.s.s.don.nahis.t.o.ry@gmail.com"">mi.s.s.don.nahis.t.o.ry@gmail.com</a>
<a href=""mailto:mis.s.do.nn.ah.i.st.or.y@gmail.com"">mis.s.do.nn.ah.i.st.or.y@gmail.com</a>
<a href=""mailto:m.i.ssd.on.n.a.h.i.st.o.ry@gmail.com"">m.i.ssd.on.n.a.h.i.st.o.ry@gmail.com</a>
<a href=""mailto:m.issd.on.n.a.h.ist.ory@gmail.com"">m.issd.on.n.a.h.ist.ory@gmail.com</a>
<a href=""mailto:m.i.ssd.onna.h.is.tory@gmail.com"">m.i.ssd.onna.h.is.tory@gmail.com</a>
<a href=""mailto:missd.o.n.n.a.his.t.o.ry@gmail.com"">missd.o.n.n.a.his.t.o.ry@gmail.com</a>
<a href=""mailto:m.issdonnah.ist.or.y@gmail.com"">m.issdonnah.ist.or.y@gmail.com</a>
<a href=""mailto:mis.s.d.o.n.nahist.ory@gmail.com"">mis.s.d.o.n.nahist.ory@gmail.com</a>
<a href=""mailto:mi.s.s.d.onn.ah.is.tor.y@gmail.com"">mi.s.s.d.onn.ah.is.tor.y@gmail.com</a>
<a href=""mailto:m.i.s.sdonna.hi.st.o.ry@gmail.com"">m.i.s.sdonna.hi.st.o.ry@gmail.com</a>
<a href=""mailto:m.is.s.do.n.n.a.hist.o.ry@gmail.com"">m.is.s.do.n.n.a.hist.o.ry@gmail.com</a>
<a href=""mailto:m.is.sdonnah.isto.r.y@gmail.com"">m.is.sdonnah.isto.r.y@gmail.com</a>
<a href=""mailto:m.issdonna.h.i.sto.ry@gmail.com"">m.issdonna.h.i.sto.ry@gmail.com</a>
<a href=""mailto:m.iss.do.n.nahi.s.t.ory@gmail.com"">m.iss.do.n.nahi.s.t.ory@gmail.com</a>
<a href=""mailto:mis.s.donna.his.t.o.ry@gmail.com"">mis.s.donna.his.t.o.ry@gmail.com</a>
<a href=""mailto:m.i.ssd.o.nna.hi.s.t.o.ry@gmail.com"">m.i.ssd.o.nna.hi.s.t.o.ry@gmail.com</a>
<a href=""mailto:mi.ss.donn.a.his.tory@gmail.com"">mi.ss.donn.a.his.tory@gmail.com</a>
<a href=""mailto:mi.ssdo.nn.a.histo.r.y@gmail.com"">mi.ssdo.nn.a.histo.r.y@gmail.com</a>
<a href=""mailto:m.i.s.sdo.n.n.ahi.s.t.or.y@gmail.com"">m.i.s.sdo.n.n.ahi.s.t.or.y@gmail.com</a>
<a href=""mailto:m.issd.onn.a.h.is.to.r.y@gmail.com"">m.issd.onn.a.h.is.to.r.y@gmail.com</a>
<a href=""mailto:mi.s.sdo.nn.a.h.i.st.or.y@gmail.com"">mi.s.sdo.nn.a.h.i.st.or.y@gmail.com</a>
<a href=""mailto:miss.d.o.nnah.ist.ory@gmail.com"">miss.d.o.nnah.ist.ory@gmail.com</a>
<a href=""mailto:mi.s.s.don.na.h.is.t.o.ry@gmail.com"">mi.s.s.don.na.h.is.t.o.ry@gmail.com</a>
<a href=""mailto:m.i.s.sdo.n.n.a.h.isto.ry@gmail.com"">m.i.s.sdo.n.n.a.h.isto.ry@gmail.com</a>
<a href=""mailto:mis.s.d.o.nnahis.t.ory@gmail.com"">mis.s.d.o.nnahis.t.ory@gmail.com</a>
<a href=""mailto:m.issdonn.a.h.i.st.ory@gmail.com"">m.issdonn.a.h.i.st.ory@gmail.com</a>
<a href=""mailto:miss.d.on.n.a.h.is.t.o.ry@gmail.com"">miss.d.on.n.a.h.is.t.o.ry@gmail.com</a>
<a href=""mailto:m.issd.o.nn.ahist.o.r.y@gmail.com"">m.issd.o.nn.ahist.o.r.y@gmail.com</a>
<a href=""mailto:m.i.ssd.o.nna.h.is.to.r.y@gmail.com"">m.i.ssd.o.nna.h.is.to.r.y@gmail.com</a>
<a href=""mailto:miss.d.o.n.nahis.to.ry@gmail.com"">miss.d.o.n.nahis.to.ry@gmail.com</a>
<a href=""mailto:m.is.sd.on.na.hi.st.o.ry@gmail.com"">m.is.sd.on.na.hi.st.o.ry@gmail.com</a>
<a href=""mailto:m.iss.d.on.n.a.h.ist.o.r.y@gmail.com"">m.iss.d.on.n.a.h.ist.o.r.y@gmail.com</a>
<a href=""mailto:m.i.s.sd.o.nn.a.his.tory@gmail.com"">m.i.s.sd.o.nn.a.his.tory@gmail.com</a>
<a href=""mailto:m.issdo.n.n.ah.istory@gmail.com"">m.issdo.n.n.ah.istory@gmail.com</a>
<a href=""mailto:m.i.s.s.donn.ahi.st.or.y@gmail.com"">m.i.s.s.donn.ahi.st.or.y@gmail.com</a>
<a href=""mailto:m.is.s.do.nna.h.is.tor.y@gmail.com"">m.is.s.do.nna.h.is.tor.y@gmail.com</a>
<a href=""mailto:mis.sdo.n.n.a.h.i.s.t.ory@gmail.com"">mis.sdo.n.n.a.h.i.s.t.ory@gmail.com</a>
<a href=""mailto:m.is.s.d.onna.his.to.ry@gmail.com"">m.is.s.d.onna.his.to.ry@gmail.com</a>
<a href=""mailto:mi.s.sd.on.n.a.his.to.r.y@gmail.com"">mi.s.sd.on.n.a.his.to.r.y@gmail.com</a>
<a href=""mailto:mis.s.d.o.n.na.h.i.s.to.ry@gmail.com"">mis.s.d.o.n.na.h.i.s.to.ry@gmail.com</a>
<a href=""mailto:mi.ss.d.on.nahis.t.o.ry@gmail.com"">mi.ss.d.on.nahis.t.o.ry@gmail.com</a>
<a href=""mailto:mi.s.sd.on.n.a.histor.y@gmail.com"">mi.s.sd.on.n.a.histor.y@gmail.com</a>
<a href=""mailto:mi.ss.d.o.n.n.ahis.t.o.r.y@gmail.com"">mi.ss.d.o.n.n.ahis.t.o.r.y@gmail.com</a>
<a href=""mailto:m.i.ss.do.nna.h.i.s.tor.y@gmail.com"">m.i.ss.do.nna.h.i.s.tor.y@gmail.com</a>
<a href=""mailto:mis.s.don.nahi.s.tory@gmail.com"">mis.s.don.nahi.s.tory@gmail.com</a>
<a href=""mailto:m.i.ss.don.na.h.i.s.tory@gmail.com"">m.i.ss.don.na.h.i.s.tory@gmail.com</a>
<a href=""mailto:mi.s.s.d.onna.hist.o.ry@gmail.com"">mi.s.s.d.onna.hist.o.ry@gmail.com</a>
<a href=""mailto:mi.ssd.on.na.h.is.t.ory@gmail.com"">mi.ssd.on.na.h.is.t.ory@gmail.com</a>
<a href=""mailto:m.issd.o.nn.ah.istory@gmail.com"">m.issd.o.nn.ah.istory@gmail.com</a>
<a href=""mailto:mi.s.sd.o.nnah.i.s.to.r.y@gmail.com"">mi.s.sd.o.nnah.i.s.to.r.y@gmail.com</a>
<a href=""mailto:m.i.ss.do.nna.his.tory@gmail.com"">m.i.ss.do.nna.his.tory@gmail.com</a>
<a href=""mailto:mi.ssdo.n.n.ahis.t.or.y@gmail.com"">mi.ssdo.n.n.ahis.t.or.y@gmail.com</a>
<a href=""mailto:m.issd.on.na.h.i.s.t.o.ry@gmail.com"">m.issd.on.na.h.i.s.t.o.ry@gmail.com</a>
<a href=""mailto:m.is.sdonna.h.istor.y@gmail.com"">m.is.sdonna.h.istor.y@gmail.com</a>
<a href=""mailto:mi.s.sdonn.ah.i.stor.y@gmail.com"">mi.s.sdonn.ah.i.stor.y@gmail.com</a>
<a href=""mailto:mi.s.sdonn.a.h.is.tory@gmail.com"">mi.s.sdonn.a.h.is.tory@gmail.com</a>
<a href=""mailto:m.issd.o.nn.a.h.ist.or.y@gmail.com"">m.issd.o.nn.a.h.ist.or.y@gmail.com</a>
<a href=""mailto:mi.s.s.d.o.nnah.i.stor.y@gmail.com"">mi.s.s.d.o.nnah.i.stor.y@gmail.com</a>
<a href=""mailto:m.i.ss.do.n.n.ah.i.st.o.ry@gmail.com"">m.i.ss.do.n.n.ah.i.st.o.ry@gmail.com</a>
<a href=""mailto:m.iss.donn.ahi.s.t.o.r.y@gmail.com"">m.iss.donn.ahi.s.t.o.r.y@gmail.com</a>
<a href=""mailto:m.i.s.sdon.n.ah.i.st.o.r.y@gmail.com"">m.i.s.sdon.n.ah.i.st.o.r.y@gmail.com</a>
<a href=""mailto:m.i.s.s.do.nn.a.hist.or.y@gmail.com"">m.i.s.s.do.nn.a.hist.or.y@gmail.com</a>
<a href=""mailto:m.is.sdonna.h.is.t.o.ry@gmail.com"">m.is.sdonna.h.is.t.o.ry@gmail.com</a>
<a href=""mailto:m.i.ss.do.n.nah.i.s.to.ry@gmail.com"">m.i.ss.do.n.nah.i.s.to.ry@gmail.com</a>
<a href=""mailto:m.is.sdon.na.h.is.tory@gmail.com"">m.is.sdon.na.h.is.tory@gmail.com</a>
<a href=""mailto:mi.s.s.donnah.is.t.o.ry@gmail.com"">mi.s.s.donnah.is.t.o.ry@gmail.com</a>
<a href=""mailto:mi.s.sd.on.na.h.is.t.o.r.y@gmail.com"">mi.s.sd.on.na.h.is.t.o.r.y@gmail.com</a>
<a href=""mailto:mis.sdonn.a.hi.st.o.ry@gmail.com"">mis.sdonn.a.hi.st.o.ry@gmail.com</a>
<a href=""mailto:m.issdo.n.n.a.h.is.tor.y@gmail.com"">m.issdo.n.n.a.h.is.tor.y@gmail.com</a>
<a href=""mailto:miss.don.nahi.st.or.y@gmail.com"">miss.don.nahi.st.or.y@gmail.com</a>
<a href=""mailto:m.is.sd.o.nna.hi.stor.y@gmail.com"">m.is.sd.o.nna.hi.stor.y@gmail.com</a>
<a href=""mailto:mi.s.s.don.n.a.h.i.st.o.r.y@gmail.com"">mi.s.s.don.n.a.h.i.st.o.r.y@gmail.com</a>
<a href=""mailto:mis.sd.o.n.na.h.i.s.tory@gmail.com"">mis.sd.o.n.na.h.i.s.tory@gmail.com</a>
<a href=""mailto:m.i.s.s.d.o.nna.his.to.r.y@gmail.com"">m.i.s.s.d.o.nna.his.to.r.y@gmail.com</a>
<a href=""mailto:mi.s.s.donn.ah.i.story@gmail.com"">mi.s.s.donn.ah.i.story@gmail.com</a>
<a href=""mailto:m.i.ssdo.n.n.ahis.t.o.r.y@gmail.com"">m.i.ssdo.n.n.ahis.t.o.r.y@gmail.com</a>
<a href=""mailto:mi.ss.do.n.n.a.h.istor.y@gmail.com"">mi.ss.do.n.n.a.h.istor.y@gmail.com</a>
<a href=""mailto:m.i.s.sdo.nn.a.h.i.st.ory@gmail.com"">m.i.s.sdo.nn.a.h.i.st.ory@gmail.com</a>
<a href=""mailto:mi.s.s.d.onnahi.s.to.ry@gmail.com"">mi.s.s.d.onnahi.s.to.ry@gmail.com</a>
<a href=""mailto:m.i.ssd.o.n.nahi.s.t.o.r.y@gmail.com"">m.i.ssd.o.n.nahi.s.t.o.r.y@gmail.com</a>
<a href=""mailto:m.iss.do.n.n.a.h.i.s.to.r.y@gmail.com"">m.iss.do.n.n.a.h.i.s.to.r.y@gmail.com</a>
<a href=""mailto:mis.s.donnahi.st.ory@gmail.com"">mis.s.donnahi.st.ory@gmail.com</a>
<a href=""mailto:missd.onn.ah.i.s.t.o.r.y@gmail.com"">missd.onn.ah.i.s.t.o.r.y@gmail.com</a>
<a href=""mailto:m.i.s.sd.onna.hi.st.or.y@gmail.com"">m.i.s.sd.onna.hi.st.or.y@gmail.com</a>
<a href=""mailto:missd.onnah.i.st.o.ry@gmail.com"">missd.onnah.i.st.o.ry@gmail.com</a>
<a href=""mailto:miss.d.o.nnah.i.st.ory@gmail.com"">miss.d.o.nnah.i.st.ory@gmail.com</a>
<a href=""mailto:m.is.sdonna.hi.sto.ry@gmail.com"">m.is.sdonna.hi.sto.ry@gmail.com</a>
<a href=""mailto:mis.s.d.onn.a.hi.st.or.y@gmail.com"">mis.s.d.onn.a.hi.st.or.y@gmail.com</a>
<a href=""mailto:mi.ss.don.na.h.i.s.t.or.y@gmail.com"">mi.ss.don.na.h.i.s.t.or.y@gmail.com</a>
<a href=""mailto:m.iss.d.o.nn.a.hi.s.tor.y@gmail.com"">m.iss.d.o.nn.a.hi.s.tor.y@gmail.com</a>
<a href=""mailto:m.i.ssd.onn.ahis.to.ry@gmail.com"">m.i.ssd.onn.ahis.to.ry@gmail.com</a>
<a href=""mailto:m.i.s.sdonnahist.ory@gmail.com"">m.i.s.sdonnahist.ory@gmail.com</a>
<a href=""mailto:mi.s.s.d.o.n.na.his.t.or.y@gmail.com"">mi.s.s.d.o.n.na.his.t.or.y@gmail.com</a>
<a href=""mailto:mi.s.s.donnah.is.tory@gmail.com"">mi.s.s.donnah.is.tory@gmail.com</a>
<a href=""mailto:mi.s.s.d.o.n.nahis.to.ry@gmail.com"">mi.s.s.d.o.n.nahis.to.ry@gmail.com</a>
<a href=""mailto:mis.sd.onn.a.h.i.st.o.r.y@gmail.com"">mis.sd.onn.a.h.i.st.o.r.y@gmail.com</a>
<a href=""mailto:m.i.s.s.d.o.n.nahi.st.o.r.y@gmail.com"">m.i.s.s.d.o.n.nahi.st.o.r.y@gmail.com</a>
<a href=""mailto:m.iss.do.n.na.hi.s.t.or.y@gmail.com"">m.iss.do.n.na.hi.s.t.or.y@gmail.com</a>
<a href=""mailto:m.iss.do.nn.ah.i.st.o.ry@gmail.com"">m.iss.do.nn.ah.i.st.o.ry@gmail.com</a>
<a href=""mailto:m.is.sd.o.n.na.his.tory@gmail.com"">m.is.sd.o.n.na.his.tory@gmail.com</a>
<a href=""mailto:miss.d.o.n.na.h.is.t.o.ry@gmail.com"">miss.d.o.n.na.h.is.t.o.ry@gmail.com</a>
<a href=""mailto:mi.s.s.do.nna.hist.o.ry@gmail.com"">mi.s.s.do.nna.hist.o.ry@gmail.com</a>
<a href=""mailto:m.i.ssdo.nn.a.hi.s.t.o.ry@gmail.com"">m.i.ssdo.nn.a.hi.s.t.o.ry@gmail.com</a>
<a href=""mailto:m.issdo.nna.h.istory@gmail.com"">m.issdo.nna.h.istory@gmail.com</a>
<a href=""mailto:m.i.s.sd.onn.ahis.tory@gmail.com"">m.i.s.sd.onn.ahis.tory@gmail.com</a>
<a href=""mailto:miss.d.on.n.ah.is.t.o.ry@gmail.com"">miss.d.on.n.ah.is.t.o.ry@gmail.com</a>
<a href=""mailto:mi.ssd.on.nahistory@gmail.com"">mi.ssd.on.nahistory@gmail.com</a>
<a href=""mailto:m.i.ssdo.n.na.hist.o.r.y@gmail.com"">m.i.ssdo.n.na.hist.o.r.y@gmail.com</a>
<a href=""mailto:mis.s.do.n.n.ahisto.r.y@gmail.com"">mis.s.do.n.n.ahisto.r.y@gmail.com</a>
<a href=""mailto:m.i.ssd.onna.h.i.s.to.ry@gmail.com"">m.i.ssd.onna.h.i.s.to.ry@gmail.com</a>
<a href=""mailto:m.issdo.n.n.ah.i.st.ory@gmail.com"">m.issdo.n.n.ah.i.st.ory@gmail.com</a>
<a href=""mailto:m.i.s.sdonnah.i.s.to.r.y@gmail.com"">m.i.s.sdonnah.i.s.to.r.y@gmail.com</a>
<a href=""mailto:mi.s.sdo.n.n.ah.i.s.t.or.y@gmail.com"">mi.s.sdo.n.n.ah.i.s.t.or.y@gmail.com</a>
<a href=""mailto:missdonna.hi.s.tory@gmail.com"">missdonna.hi.s.tory@gmail.com</a>
<a href=""mailto:m.i.s.sdonn.a.hi.s.t.o.r.y@gmail.com"">m.i.s.sdonn.a.hi.s.t.o.r.y@gmail.com</a>
<a href=""mailto:m.i.ssd.o.n.nahi.s.to.ry@gmail.com"">m.i.ssd.o.n.nahi.s.to.ry@gmail.com</a>
<a href=""mailto:mi.ss.d.o.nnahi.st.ory@gmail.com"">mi.ss.d.o.nnahi.st.ory@gmail.com</a>
<a href=""mailto:mis.sd.o.nn.ahis.tory@gmail.com"">mis.sd.o.nn.ahis.tory@gmail.com</a>
<a href=""mailto:m.i.ssd.o.nn.ah.i.s.tor.y@gmail.com"">m.i.ssd.o.nn.ah.i.s.tor.y@gmail.com</a>
<a href=""mailto:m.i.ssdo.n.nah.i.st.ory@gmail.com"">m.i.ssdo.n.nah.i.st.ory@gmail.com</a>
<a href=""mailto:mis.s.d.on.n.ah.i.s.to.ry@gmail.com"">mis.s.d.on.n.ah.i.s.to.ry@gmail.com</a>
<a href=""mailto:m.issdo.n.nahi.s.tor.y@gmail.com"">m.issdo.n.nahi.s.tor.y@gmail.com</a>
<a href=""mailto:m.issdon.n.ah.is.to.ry@gmail.com"">m.issdon.n.ah.is.to.ry@gmail.com</a>
<a href=""mailto:m.issdo.nn.a.h.i.s.tory@gmail.com"">m.issdo.nn.a.h.i.s.tory@gmail.com</a>
<a href=""mailto:m.i.ss.d.o.n.n.a.hi.st.or.y@gmail.com"">m.i.ss.d.o.n.n.a.hi.st.or.y@gmail.com</a>
<a href=""mailto:mi.s.s.d.onn.a.h.is.tory@gmail.com"">mi.s.s.d.onn.a.h.is.tory@gmail.com</a>
<a href=""mailto:mis.sdo.n.n.ah.istor.y@gmail.com"">mis.sdo.n.n.ah.istor.y@gmail.com</a>
<a href=""mailto:m.i.ssd.onna.h.i.st.ory@gmail.com"">m.i.ssd.onna.h.i.st.ory@gmail.com</a>
<a href=""mailto:m.is.s.d.o.nnah.i.s.tory@gmail.com"">m.is.s.d.o.nnah.i.s.tory@gmail.com</a>
<a href=""mailto:miss.do.n.na.h.is.to.r.y@gmail.com"">miss.do.n.na.h.is.to.r.y@gmail.com</a>
<a href=""mailto:miss.don.n.a.h.i.stor.y@gmail.com"">miss.don.n.a.h.i.stor.y@gmail.com</a>
<a href=""mailto:mi.s.sdonn.a.h.i.s.to.r.y@gmail.com"">mi.s.sdonn.a.h.i.s.to.r.y@gmail.com</a>
<a href=""mailto:m.issd.o.nn.ah.i.s.to.ry@gmail.com"">m.issd.o.nn.ah.i.s.to.ry@gmail.com</a>
<a href=""mailto:m.i.s.s.d.onn.ahistor.y@gmail.com"">m.i.s.s.d.onn.ahistor.y@gmail.com</a>
<a href=""mailto:mi.s.sdonna.h.i.st.o.r.y@gmail.com"">mi.s.sdonna.h.i.st.o.r.y@gmail.com</a>
<a href=""mailto:mi.ss.d.onn.ah.istor.y@gmail.com"">mi.ss.d.onn.ah.istor.y@gmail.com</a>
<a href=""mailto:m.iss.don.n.a.h.is.t.or.y@gmail.com"">m.iss.don.n.a.h.is.t.or.y@gmail.com</a>
<a href=""mailto:m.i.s.sd.onnahisto.ry@gmail.com"">m.i.s.sd.onnahisto.ry@gmail.com</a>
<a href=""mailto:m.i.s.sd.onn.a.hi.s.to.r.y@gmail.com"">m.i.s.sd.onn.a.hi.s.to.r.y@gmail.com</a>
<a href=""mailto:m.is.s.do.nnah.is.tory@gmail.com"">m.is.s.do.nnah.is.tory@gmail.com</a>
<a href=""mailto:m.iss.don.na.h.is.t.o.ry@gmail.com"">m.iss.don.na.h.is.t.o.ry@gmail.com</a>
<a href=""mailto:mi.s.sd.o.nn.ahis.tory@gmail.com"">mi.s.sd.o.nn.ahis.tory@gmail.com</a>
<a href=""mailto:m.i.ssd.on.na.h.i.story@gmail.com"">m.i.ssd.on.na.h.i.story@gmail.com</a>
<a href=""mailto:m.is.s.d.o.n.n.ahi.st.o.r.y@gmail.com"">m.is.s.d.o.n.n.ahi.st.o.r.y@gmail.com</a>
<a href=""mailto:mis.sd.o.n.n.a.h.is.tor.y@gmail.com"">mis.sd.o.n.n.a.h.is.tor.y@gmail.com</a>
<a href=""mailto:m.iss.d.onn.ah.isto.r.y@gmail.com"">m.iss.d.onn.ah.isto.r.y@gmail.com</a>
<a href=""mailto:missdo.nn.a.hi.st.o.r.y@gmail.com"">missdo.nn.a.hi.st.o.r.y@gmail.com</a>
<a href=""mailto:mi.ss.do.nn.a.h.i.s.t.o.r.y@gmail.com"">mi.ss.do.nn.a.h.i.s.t.o.r.y@gmail.com</a>
<a href=""mailto:m.i.s.sdo.n.na.his.to.ry@gmail.com"">m.i.s.sdo.n.na.his.to.ry@gmail.com</a>
<a href=""mailto:miss.d.o.n.n.ahi.stor.y@gmail.com"">miss.d.o.n.n.ahi.stor.y@gmail.com</a>
<a href=""mailto:m.is.s.d.o.n.na.h.i.s.t.or.y@gmail.com"">m.is.s.d.o.n.na.h.i.s.t.or.y@gmail.com</a>
<a href=""mailto:miss.d.o.n.na.his.t.ory@gmail.com"">miss.d.o.n.na.his.t.ory@gmail.com</a>
<a href=""mailto:m.i.ss.donnahi.st.ory@gmail.com"">m.i.ss.donnahi.st.ory@gmail.com</a>
<a href=""mailto:m.i.ssdo.n.n.a.hi.sto.r.y@gmail.com"">m.i.ssdo.n.n.a.hi.sto.r.y@gmail.com</a>
<a href=""mailto:m.is.s.donnahisto.r.y@gmail.com"">m.is.s.donnahisto.r.y@gmail.com</a>
<a href=""mailto:miss.don.nahis.to.r.y@gmail.com"">miss.don.nahis.to.r.y@gmail.com</a>
<a href=""mailto:m.i.ssdon.n.a.h.isto.ry@gmail.com"">m.i.ssdon.n.a.h.isto.ry@gmail.com</a>
<a href=""mailto:missdonnahistory@gmail.com"">missdonnahistory@gmail.com</a>
<a href=""mailto:m.i.ss.d.o.nnahis.t.ory@gmail.com"">m.i.ss.d.o.nnahis.t.ory@gmail.com</a>
<a href=""mailto:mi.s.s.do.nn.ah.i.s.t.o.ry@gmail.com"">mi.s.s.do.nn.ah.i.s.t.o.ry@gmail.com</a>
<a href=""mailto:mi.s.s.donna.h.i.stor.y@gmail.com"">mi.s.s.donna.h.i.stor.y@gmail.com</a>
<a href=""mailto:mi.s.sd.onn.a.hist.o.ry@gmail.com"">mi.s.sd.onn.a.hist.o.ry@gmail.com</a>
<a href=""mailto:m.issd.o.nnah.i.s.t.o.r.y@gmail.com"">m.issd.o.nnah.i.s.t.o.r.y@gmail.com</a>
<a href=""mailto:mi.ssd.onnahistor.y@gmail.com"">mi.ssd.onnahistor.y@gmail.com</a>
<a href=""mailto:m.iss.don.nah.ist.ory@gmail.com"">m.iss.don.nah.ist.ory@gmail.com</a>
<a href=""mailto:mis.sd.o.n.n.ahi.s.tory@gmail.com"">mis.sd.o.n.n.ahi.s.tory@gmail.com</a>
<a href=""mailto:mi.ssd.o.n.n.a.histo.r.y@gmail.com"">mi.ssd.o.n.n.a.histo.r.y@gmail.com</a>
<a href=""mailto:m.issd.o.n.nah.i.s.t.ory@gmail.com"">m.issd.o.n.nah.i.s.t.ory@gmail.com</a>
<a href=""mailto:mi.s.sd.o.nn.ah.is.t.o.r.y@gmail.com"">mi.s.sd.o.nn.ah.is.t.o.r.y@gmail.com</a>
<a href=""mailto:mis.s.d.o.nna.h.i.sto.r.y@gmail.com"">mis.s.d.o.nna.h.i.sto.r.y@gmail.com</a>
<a href=""mailto:m.issdo.n.n.a.h.ist.o.ry@gmail.com"">m.issdo.n.n.a.h.ist.o.ry@gmail.com</a>
<a href=""mailto:mis.sd.o.nn.a.h.ist.o.ry@gmail.com"">mis.sd.o.nn.a.h.ist.o.ry@gmail.com</a>
<a href=""mailto:miss.d.o.nn.ahi.story@gmail.com"">miss.d.o.nn.ahi.story@gmail.com</a>
<a href=""mailto:mi.ss.don.n.ahist.o.r.y@gmail.com"">mi.ss.don.n.ahist.o.r.y@gmail.com</a>
<a href=""mailto:m.i.ss.do.nn.a.h.is.t.o.r.y@gmail.com"">m.i.ss.do.nn.a.h.is.t.o.r.y@gmail.com</a>
<a href=""mailto:m.i.s.sdon.n.a.h.i.story@gmail.com"">m.i.s.sdon.n.a.h.i.story@gmail.com</a>
<a href=""mailto:m.i.s.sdon.n.a.hist.or.y@gmail.com"">m.i.s.sdon.n.a.hist.or.y@gmail.com</a>
<a href=""mailto:m.is.sdo.nnahi.sto.ry@gmail.com"">m.is.sdo.nnahi.sto.ry@gmail.com</a>
<a href=""mailto:m.i.s.sdo.nn.a.hi.s.tory@gmail.com"">m.i.s.sdo.nn.a.hi.s.tory@gmail.com</a>
<a href=""mailto:mi.s.sd.onnahi.st.o.r.y@gmail.com"">mi.s.sd.onnahi.st.o.r.y@gmail.com</a>
<a href=""mailto:m.is.sd.o.nnah.i.s.t.ory@gmail.com"">m.is.sd.o.nnah.i.s.t.ory@gmail.com</a>
<a href=""mailto:mi.s.s.donn.ah.isto.r.y@gmail.com"">mi.s.s.donn.ah.isto.r.y@gmail.com</a>
<a href=""mailto:m.i.ssd.onna.hist.o.ry@gmail.com"">m.i.ssd.onna.hist.o.ry@gmail.com</a>
<a href=""mailto:m.iss.d.o.nna.h.isto.r.y@gmail.com"">m.iss.d.o.nna.h.isto.r.y@gmail.com</a>
<a href=""mailto:mis.sd.o.n.n.a.hi.stor.y@gmail.com"">mis.sd.o.n.n.a.hi.stor.y@gmail.com</a>
<a href=""mailto:mi.ssd.o.n.n.a.h.i.s.to.r.y@gmail.com"">mi.ssd.o.n.n.a.h.i.s.to.r.y@gmail.com</a>
<a href=""mailto:missd.on.nahi.story@gmail.com"">missd.on.nahi.story@gmail.com</a>
<a href=""mailto:m.issdonn.a.his.to.ry@gmail.com"">m.issdonn.a.his.to.ry@gmail.com</a>
<a href=""mailto:mi.ss.don.nah.i.story@gmail.com"">mi.ss.don.nah.i.story@gmail.com</a>
<a href=""mailto:m.i.s.s.d.o.nn.a.his.tor.y@gmail.com"">m.i.s.s.d.o.nn.a.his.tor.y@gmail.com</a>
<a href=""mailto:mi.ssdo.nn.ah.ist.or.y@gmail.com"">mi.ssdo.nn.ah.ist.or.y@gmail.com</a>
<a href=""mailto:m.is.sd.o.n.nah.i.story@gmail.com"">m.is.sd.o.n.nah.i.story@gmail.com</a>
<a href=""mailto:mi.ss.donn.a.h.i.st.ory@gmail.com"">mi.ss.donn.a.h.i.st.ory@gmail.com</a>
<a href=""mailto:m.iss.do.nna.h.i.s.to.ry@gmail.com"">m.iss.do.nna.h.i.s.to.ry@gmail.com</a>
<a href=""mailto:m.i.s.s.don.n.ahi.s.t.o.ry@gmail.com"">m.i.s.s.don.n.ahi.s.t.o.ry@gmail.com</a>
<a href=""mailto:m.iss.d.on.n.ah.i.s.tor.y@gmail.com"">m.iss.d.on.n.ah.i.s.tor.y@gmail.com</a>
<a href=""mailto:m.i.s.sd.o.nna.h.i.st.ory@gmail.com"">m.i.s.sd.o.nna.h.i.st.ory@gmail.com</a>
<a href=""mailto:m.i.s.sd.o.nnah.i.s.t.or.y@gmail.com"">m.i.s.sd.o.nnah.i.s.t.or.y@gmail.com</a>
<a href=""mailto:mi.s.sd.o.nnahis.t.or.y@gmail.com"">mi.s.sd.o.nnahis.t.or.y@gmail.com</a>
<a href=""mailto:m.i.ssdonn.a.hist.o.ry@gmail.com"">m.i.ssdonn.a.hist.o.ry@gmail.com</a>
<a href=""mailto:m.i.s.sdon.n.ahis.tory@gmail.com"">m.i.s.sdon.n.ahis.tory@gmail.com</a>
<a href=""mailto:mi.s.s.don.nahis.t.o.ry@gmail.com"">mi.s.s.don.nahis.t.o.ry@gmail.com</a>
<a href=""mailto:mis.s.do.nn.ah.i.st.or.y@gmail.com"">mis.s.do.nn.ah.i.st.or.y@gmail.com</a>
<a href=""mailto:m.i.ssd.on.n.a.h.i.st.o.ry@gmail.com"">m.i.ssd.on.n.a.h.i.st.o.ry@gmail.com</a>
<a href=""mailto:m.issd.on.n.a.h.ist.ory@gmail.com"">m.issd.on.n.a.h.ist.ory@gmail.com</a>
<a href=""mailto:m.i.ssd.onna.h.is.tory@gmail.com"">m.i.ssd.onna.h.is.tory@gmail.com</a>
<a href=""mailto:missd.o.n.n.a.his.t.o.ry@gmail.com"">missd.o.n.n.a.his.t.o.ry@gmail.com</a>
<a href=""mailto:m.issdonnah.ist.or.y@gmail.com"">m.issdonnah.ist.or.y@gmail.com</a>
<a href=""mailto:mis.s.d.o.n.nahist.ory@gmail.com"">mis.s.d.o.n.nahist.ory@gmail.com</a>
<a href=""mailto:mi.s.s.d.onn.ah.is.tor.y@gmail.com"">mi.s.s.d.onn.ah.is.tor.y@gmail.com</a>
<a href=""mailto:m.i.s.sdonna.hi.st.o.ry@gmail.com"">m.i.s.sdonna.hi.st.o.ry@gmail.com</a>
<a href=""mailto:m.is.s.do.n.n.a.hist.o.ry@gmail.com"">m.is.s.do.n.n.a.hist.o.ry@gmail.com</a>
<a href=""mailto:m.is.sdonnah.isto.r.y@gmail.com"">m.is.sdonnah.isto.r.y@gmail.com</a>
<a href=""mailto:m.issdonna.h.i.sto.ry@gmail.com"">m.issdonna.h.i.sto.ry@gmail.com</a>
<a href=""mailto:m.iss.do.n.nahi.s.t.ory@gmail.com"">m.iss.do.n.nahi.s.t.ory@gmail.com</a>
<a href=""mailto:mis.s.donna.his.t.o.ry@gmail.com"">mis.s.donna.his.t.o.ry@gmail.com</a>
<a href=""mailto:m.i.ssd.o.nna.hi.s.t.o.ry@gmail.com"">m.i.ssd.o.nna.hi.s.t.o.ry@gmail.com</a>
<a href=""mailto:mi.ss.donn.a.his.tory@gmail.com"">mi.ss.donn.a.his.tory@gmail.com</a>
<a href=""mailto:mi.ssdo.nn.a.histo.r.y@gmail.com"">mi.ssdo.nn.a.histo.r.y@gmail.com</a>
<a href=""mailto:m.i.s.sdo.n.n.ahi.s.t.or.y@gmail.com"">m.i.s.sdo.n.n.ahi.s.t.or.y@gmail.com</a>
<a href=""mailto:m.issd.onn.a.h.is.to.r.y@gmail.com"">m.issd.onn.a.h.is.to.r.y@gmail.com</a>
<a href=""mailto:mi.s.sdo.nn.a.h.i.st.or.y@gmail.com"">mi.s.sdo.nn.a.h.i.st.or.y@gmail.com</a>
<a href=""mailto:miss.d.o.nnah.ist.ory@gmail.com"">miss.d.o.nnah.ist.ory@gmail.com</a>
<a href=""mailto:mi.s.s.don.na.h.is.t.o.ry@gmail.com"">mi.s.s.don.na.h.is.t.o.ry@gmail.com</a>
<a href=""mailto:m.i.s.sdo.n.n.a.h.isto.ry@gmail.com"">m.i.s.sdo.n.n.a.h.isto.ry@gmail.com</a>
<a href=""mailto:mis.s.d.o.nnahis.t.ory@gmail.com"">mis.s.d.o.nnahis.t.ory@gmail.com</a>
<a href=""mailto:m.issdonn.a.h.i.st.ory@gmail.com"">m.issdonn.a.h.i.st.ory@gmail.com</a>
<a href=""mailto:miss.d.on.n.a.h.is.t.o.ry@gmail.com"">miss.d.on.n.a.h.is.t.o.ry@gmail.com</a>
<a href=""mailto:m.issd.o.nn.ahist.o.r.y@gmail.com"">m.issd.o.nn.ahist.o.r.y@gmail.com</a>
<a href=""mailto:m.i.ssd.o.nna.h.is.to.r.y@gmail.com"">m.i.ssd.o.nna.h.is.to.r.y@gmail.com</a>
<a href=""mailto:miss.d.o.n.nahis.to.ry@gmail.com"">miss.d.o.n.nahis.to.ry@gmail.com</a>
<a href=""mailto:m.is.sd.on.na.hi.st.o.ry@gmail.com"">m.is.sd.on.na.hi.st.o.ry@gmail.com</a>
<a href=""mailto:m.iss.d.on.n.a.h.ist.o.r.y@gmail.com"">m.iss.d.on.n.a.h.ist.o.r.y@gmail.com</a>
<a href=""mailto:m.i.s.sd.o.nn.a.his.tory@gmail.com"">m.i.s.sd.o.nn.a.his.tory@gmail.com</a>
<a href=""mailto:m.issdo.n.n.ah.istory@gmail.com"">m.issdo.n.n.ah.istory@gmail.com</a>
<a href=""mailto:m.i.s.s.donn.ahi.st.or.y@gmail.com"">m.i.s.s.donn.ahi.st.or.y@gmail.com</a>
<a href=""mailto:m.is.s.do.nna.h.is.tor.y@gmail.com"">m.is.s.do.nna.h.is.tor.y@gmail.com</a>
<a href=""mailto:mis.sdo.n.n.a.h.i.s.t.ory@gmail.com"">mis.sdo.n.n.a.h.i.s.t.ory@gmail.com</a>
<a href=""mailto:m.is.s.d.onna.his.to.ry@gmail.com"">m.is.s.d.onna.his.to.ry@gmail.com</a>
<a href=""mailto:mi.s.sd.on.n.a.his.to.r.y@gmail.com"">mi.s.sd.on.n.a.his.to.r.y@gmail.com</a>
<a href=""mailto:mis.s.d.o.n.na.h.i.s.to.ry@gmail.com"">mis.s.d.o.n.na.h.i.s.to.ry@gmail.com</a>
<a href=""mailto:mi.ss.d.on.nahis.t.o.ry@gmail.com"">mi.ss.d.on.nahis.t.o.ry@gmail.com</a>
<a href=""mailto:mi.s.sd.on.n.a.histor.y@gmail.com"">mi.s.sd.on.n.a.histor.y@gmail.com</a>
<a href=""mailto:mi.ss.d.o.n.n.ahis.t.o.r.y@gmail.com"">mi.ss.d.o.n.n.ahis.t.o.r.y@gmail.com</a>
<a href=""mailto:m.i.ss.do.nna.h.i.s.tor.y@gmail.com"">m.i.ss.do.nna.h.i.s.tor.y@gmail.com</a>
<a href=""mailto:mis.s.don.nahi.s.tory@gmail.com"">mis.s.don.nahi.s.tory@gmail.com</a>
<a href=""mailto:m.i.ss.don.na.h.i.s.tory@gmail.com"">m.i.ss.don.na.h.i.s.tory@gmail.com</a>
<a href=""mailto:mi.s.s.d.onna.hist.o.ry@gmail.com"">mi.s.s.d.onna.hist.o.ry@gmail.com</a>
<a href=""mailto:mi.ssd.on.na.h.is.t.ory@gmail.com"">mi.ssd.on.na.h.is.t.ory@gmail.com</a>
<a href=""mailto:m.issd.o.nn.ah.istory@gmail.com"">m.issd.o.nn.ah.istory@gmail.com</a>
<a href=""mailto:mi.s.sd.o.nnah.i.s.to.r.y@gmail.com"">mi.s.sd.o.nnah.i.s.to.r.y@gmail.com</a>
<a href=""mailto:m.i.ss.do.nna.his.tory@gmail.com"">m.i.ss.do.nna.his.tory@gmail.com</a>
<a href=""mailto:mi.ssdo.n.n.ahis.t.or.y@gmail.com"">mi.ssdo.n.n.ahis.t.or.y@gmail.com</a>
<a href=""mailto:m.issd.on.na.h.i.s.t.o.ry@gmail.com"">m.issd.on.na.h.i.s.t.o.ry@gmail.com</a>
<a href=""mailto:m.is.sdonna.h.istor.y@gmail.com"">m.is.sdonna.h.istor.y@gmail.com</a>
<a href=""mailto:mi.s.sdonn.ah.i.stor.y@gmail.com"">mi.s.sdonn.ah.i.stor.y@gmail.com</a>
<a href=""mailto:mi.s.sdonn.a.h.is.tory@gmail.com"">mi.s.sdonn.a.h.is.tory@gmail.com</a>
<a href=""mailto:m.issd.o.nn.a.h.ist.or.y@gmail.com"">m.issd.o.nn.a.h.ist.or.y@gmail.com</a>
<a href=""mailto:mi.s.s.d.o.nnah.i.stor.y@gmail.com"">mi.s.s.d.o.nnah.i.stor.y@gmail.com</a>
<a href=""mailto:m.i.ss.do.n.n.ah.i.st.o.ry@gmail.com"">m.i.ss.do.n.n.ah.i.st.o.ry@gmail.com</a>
<a href=""mailto:m.iss.donn.ahi.s.t.o.r.y@gmail.com"">m.iss.donn.ahi.s.t.o.r.y@gmail.com</a>
<a href=""mailto:m.i.s.sdon.n.ah.i.st.o.r.y@gmail.com"">m.i.s.sdon.n.ah.i.st.o.r.y@gmail.com</a>
<a href=""mailto:m.i.s.s.do.nn.a.hist.or.y@gmail.com"">m.i.s.s.do.nn.a.hist.or.y@gmail.com</a>
<a href=""mailto:m.is.sdonna.h.is.t.o.ry@gmail.com"">m.is.sdonna.h.is.t.o.ry@gmail.com</a>
<a href=""mailto:m.i.ss.do.n.nah.i.s.to.ry@gmail.com"">m.i.ss.do.n.nah.i.s.to.ry@gmail.com</a>
<a href=""mailto:m.is.sdon.na.h.is.tory@gmail.com"">m.is.sdon.na.h.is.tory@gmail.com</a>
<a href=""mailto:mi.s.s.donnah.is.t.o.ry@gmail.com"">mi.s.s.donnah.is.t.o.ry@gmail.com</a>
<a href=""mailto:mi.s.sd.on.na.h.is.t.o.r.y@gmail.com"">mi.s.sd.on.na.h.is.t.o.r.y@gmail.com</a>
<a href=""mailto:mis.sdonn.a.hi.st.o.ry@gmail.com"">mis.sdonn.a.hi.st.o.ry@gmail.com</a>
<a href=""mailto:m.issdo.n.n.a.h.is.tor.y@gmail.com"">m.issdo.n.n.a.h.is.tor.y@gmail.com</a>
<a href=""mailto:miss.don.nahi.st.or.y@gmail.com"">miss.don.nahi.st.or.y@gmail.com</a>
<a href=""mailto:m.is.sd.o.nna.hi.stor.y@gmail.com"">m.is.sd.o.nna.hi.stor.y@gmail.com</a>
<a href=""mailto:mi.s.s.don.n.a.h.i.st.o.r.y@gmail.com"">mi.s.s.don.n.a.h.i.st.o.r.y@gmail.com</a>
<a href=""mailto:mis.sd.o.n.na.h.i.s.tory@gmail.com"">mis.sd.o.n.na.h.i.s.tory@gmail.com</a>
<a href=""mailto:m.i.s.s.d.o.nna.his.to.r.y@gmail.com"">m.i.s.s.d.o.nna.his.to.r.y@gmail.com</a>
<a href=""mailto:mi.s.s.donn.ah.i.story@gmail.com"">mi.s.s.donn.ah.i.story@gmail.com</a>
<a href=""mailto:m.i.ssdo.n.n.ahis.t.o.r.y@gmail.com"">m.i.ssdo.n.n.ahis.t.o.r.y@gmail.com</a>
<a href=""mailto:mi.ss.do.n.n.a.h.istor.y@gmail.com"">mi.ss.do.n.n.a.h.istor.y@gmail.com</a>
<a href=""mailto:m.i.s.sdo.nn.a.h.i.st.ory@gmail.com"">m.i.s.sdo.nn.a.h.i.st.ory@gmail.com</a>
<a href=""mailto:mi.s.s.d.onnahi.s.to.ry@gmail.com"">mi.s.s.d.onnahi.s.to.ry@gmail.com</a>
<a href=""mailto:m.i.ssd.o.n.nahi.s.t.o.r.y@gmail.com"">m.i.ssd.o.n.nahi.s.t.o.r.y@gmail.com</a>
<a href=""mailto:m.iss.do.n.n.a.h.i.s.to.r.y@gmail.com"">m.iss.do.n.n.a.h.i.s.to.r.y@gmail.com</a>
<a href=""mailto:mis.s.donnahi.st.ory@gmail.com"">mis.s.donnahi.st.ory@gmail.com</a>
<a href=""mailto:missd.onn.ah.i.s.t.o.r.y@gmail.com"">missd.onn.ah.i.s.t.o.r.y@gmail.com</a>
<a href=""mailto:m.i.s.sd.onna.hi.st.or.y@gmail.com"">m.i.s.sd.onna.hi.st.or.y@gmail.com</a>
<a href=""mailto:missd.onnah.i.st.o.ry@gmail.com"">missd.onnah.i.st.o.ry@gmail.com</a>
<a href=""mailto:miss.d.o.nnah.i.st.ory@gmail.com"">miss.d.o.nnah.i.st.ory@gmail.com</a>
<a href=""mailto:m.is.sdonna.hi.sto.ry@gmail.com"">m.is.sdonna.hi.sto.ry@gmail.com</a>
<a href=""mailto:mis.s.d.onn.a.hi.st.or.y@gmail.com"">mis.s.d.onn.a.hi.st.or.y@gmail.com</a>
<a href=""mailto:mi.ss.don.na.h.i.s.t.or.y@gmail.com"">mi.ss.don.na.h.i.s.t.or.y@gmail.com</a>
<a href=""mailto:m.iss.d.o.nn.a.hi.s.tor.y@gmail.com"">m.iss.d.o.nn.a.hi.s.tor.y@gmail.com</a>
<a href=""mailto:m.i.ssd.onn.ahis.to.ry@gmail.com"">m.i.ssd.onn.ahis.to.ry@gmail.com</a>
<a href=""mailto:m.i.s.sdonnahist.ory@gmail.com"">m.i.s.sdonnahist.ory@gmail.com</a>
<a href=""mailto:mi.s.s.d.o.n.na.his.t.or.y@gmail.com"">mi.s.s.d.o.n.na.his.t.or.y@gmail.com</a>
<a href=""mailto:mi.s.s.donnah.is.tory@gmail.com"">mi.s.s.donnah.is.tory@gmail.com</a>
<a href=""mailto:mi.s.s.d.o.n.nahis.to.ry@gmail.com"">mi.s.s.d.o.n.nahis.to.ry@gmail.com</a>
<a href=""mailto:mis.sd.onn.a.h.i.st.o.r.y@gmail.com"">mis.sd.onn.a.h.i.st.o.r.y@gmail.com</a>
<a href=""mailto:m.i.s.s.d.o.n.nahi.st.o.r.y@gmail.com"">m.i.s.s.d.o.n.nahi.st.o.r.y@gmail.com</a>
<a href=""mailto:m.iss.do.n.na.hi.s.t.or.y@gmail.com"">m.iss.do.n.na.hi.s.t.or.y@gmail.com</a>
<a href=""mailto:m.iss.do.nn.ah.i.st.o.ry@gmail.com"">m.iss.do.nn.ah.i.st.o.ry@gmail.com</a>
<a href=""mailto:m.is.sd.o.n.na.his.tory@gmail.com"">m.is.sd.o.n.na.his.tory@gmail.com</a>
<a href=""mailto:miss.d.o.n.na.h.is.t.o.ry@gmail.com"">miss.d.o.n.na.h.is.t.o.ry@gmail.com</a>
<a href=""mailto:mi.s.s.do.nna.hist.o.ry@gmail.com"">mi.s.s.do.nna.hist.o.ry@gmail.com</a>
<a href=""mailto:m.i.ssdo.nn.a.hi.s.t.o.ry@gmail.com"">m.i.ssdo.nn.a.hi.s.t.o.ry@gmail.com</a>
<a href=""mailto:m.issdo.nna.h.istory@gmail.com"">m.issdo.nna.h.istory@gmail.com</a>
<a href=""mailto:m.i.s.sd.onn.ahis.tory@gmail.com"">m.i.s.sd.onn.ahis.tory@gmail.com</a>
<a href=""mailto:miss.d.on.n.ah.is.t.o.ry@gmail.com"">miss.d.on.n.ah.is.t.o.ry@gmail.com</a>
<a href=""mailto:mi.ssd.on.nahistory@gmail.com"">mi.ssd.on.nahistory@gmail.com</a>
<a href=""mailto:m.i.ssdo.n.na.hist.o.r.y@gmail.com"">m.i.ssdo.n.na.hist.o.r.y@gmail.com</a>
<a href=""mailto:mis.s.do.n.n.ahisto.r.y@gmail.com"">mis.s.do.n.n.ahisto.r.y@gmail.com</a>
<a href=""mailto:m.i.ssd.onna.h.i.s.to.ry@gmail.com"">m.i.ssd.onna.h.i.s.to.ry@gmail.com</a>
<a href=""mailto:m.issdo.n.n.ah.i.st.ory@gmail.com"">m.issdo.n.n.ah.i.st.ory@gmail.com</a>
<a href=""mailto:m.i.s.sdonnah.i.s.to.r.y@gmail.com"">m.i.s.sdonnah.i.s.to.r.y@gmail.com</a>
<a href=""mailto:mi.s.sdo.n.n.ah.i.s.t.or.y@gmail.com"">mi.s.sdo.n.n.ah.i.s.t.or.y@gmail.com</a>
<a href=""mailto:missdonna.hi.s.tory@gmail.com"">missdonna.hi.s.tory@gmail.com</a>
<a href=""mailto:m.i.s.sdonn.a.hi.s.t.o.r.y@gmail.com"">m.i.s.sdonn.a.hi.s.t.o.r.y@gmail.com</a>
<a href=""mailto:m.i.ssd.o.n.nahi.s.to.ry@gmail.com"">m.i.ssd.o.n.nahi.s.to.ry@gmail.com</a>
<a href=""mailto:mi.ss.d.o.nnahi.st.ory@gmail.com"">mi.ss.d.o.nnahi.st.ory@gmail.com</a>
<a href=""mailto:mis.sd.o.nn.ahis.tory@gmail.com"">mis.sd.o.nn.ahis.tory@gmail.com</a>
<a href=""mailto:m.i.ssd.o.nn.ah.i.s.tor.y@gmail.com"">m.i.ssd.o.nn.ah.i.s.tor.y@gmail.com</a>
<a href=""mailto:m.i.ssdo.n.nah.i.st.ory@gmail.com"">m.i.ssdo.n.nah.i.st.ory@gmail.com</a>
<a href=""mailto:mis.s.d.on.n.ah.i.s.to.ry@gmail.com"">mis.s.d.on.n.ah.i.s.to.ry@gmail.com</a>
<a href=""mailto:m.issdo.n.nahi.s.tor.y@gmail.com"">m.issdo.n.nahi.s.tor.y@gmail.com</a>
<a href=""mailto:m.issdon.n.ah.is.to.ry@gmail.com"">m.issdon.n.ah.is.to.ry@gmail.com</a>
<a href=""mailto:m.issdo.nn.a.h.i.s.tory@gmail.com"">m.issdo.nn.a.h.i.s.tory@gmail.com</a>
<a href=""mailto:m.i.ss.d.o.n.n.a.hi.st.or.y@gmail.com"">m.i.ss.d.o.n.n.a.hi.st.or.y@gmail.com</a>
<a href=""mailto:mi.s.s.d.onn.a.h.is.tory@gmail.com"">mi.s.s.d.onn.a.h.is.tory@gmail.com</a>
<a href=""mailto:mis.sdo.n.n.ah.istor.y@gmail.com"">mis.sdo.n.n.ah.istor.y@gmail.com</a>
<a href=""mailto:m.i.ssd.onna.h.i.st.ory@gmail.com"">m.i.ssd.onna.h.i.st.ory@gmail.com</a>
<a href=""mailto:m.is.s.d.o.nnah.i.s.tory@gmail.com"">m.is.s.d.o.nnah.i.s.tory@gmail.com</a>
<a href=""mailto:miss.do.n.na.h.is.to.r.y@gmail.com"">miss.do.n.na.h.is.to.r.y@gmail.com</a>
<a href=""mailto:miss.don.n.a.h.i.stor.y@gmail.com"">miss.don.n.a.h.i.stor.y@gmail.com</a>
<a href=""mailto:mi.s.sdonn.a.h.i.s.to.r.y@gmail.com"">mi.s.sdonn.a.h.i.s.to.r.y@gmail.com</a>
<a href=""mailto:m.issd.o.nn.ah.i.s.to.ry@gmail.com"">m.issd.o.nn.ah.i.s.to.ry@gmail.com</a>
<a href=""mailto:m.i.s.s.d.onn.ahistor.y@gmail.com"">m.i.s.s.d.onn.ahistor.y@gmail.com</a>
<a href=""mailto:mi.s.sdonna.h.i.st.o.r.y@gmail.com"">mi.s.sdonna.h.i.st.o.r.y@gmail.com</a>
<a href=""mailto:mi.ss.d.onn.ah.istor.y@gmail.com"">mi.ss.d.onn.ah.istor.y@gmail.com</a>
<a href=""mailto:m.iss.don.n.a.h.is.t.or.y@gmail.com"">m.iss.don.n.a.h.is.t.or.y@gmail.com</a>
<a href=""mailto:m.i.s.sd.onnahisto.ry@gmail.com"">m.i.s.sd.onnahisto.ry@gmail.com</a>
<a href=""mailto:m.i.s.sd.onn.a.hi.s.to.r.y@gmail.com"">m.i.s.sd.onn.a.hi.s.to.r.y@gmail.com</a>
<a href=""mailto:m.is.s.do.nnah.is.tory@gmail.com"">m.is.s.do.nnah.is.tory@gmail.com</a>
<a href=""mailto:m.iss.don.na.h.is.t.o.ry@gmail.com"">m.iss.don.na.h.is.t.o.ry@gmail.com</a>
<a href=""mailto:mi.s.sd.o.nn.ahis.tory@gmail.com"">mi.s.sd.o.nn.ahis.tory@gmail.com</a>
<a href=""mailto:m.i.ssd.on.na.h.i.story@gmail.com"">m.i.ssd.on.na.h.i.story@gmail.com</a>
<a href=""mailto:m.is.s.d.o.n.n.ahi.st.o.r.y@gmail.com"">m.is.s.d.o.n.n.ahi.st.o.r.y@gmail.com</a>
<a href=""mailto:mis.sd.o.n.n.a.h.is.tor.y@gmail.com"">mis.sd.o.n.n.a.h.is.tor.y@gmail.com</a>
<a href=""mailto:m.iss.d.onn.ah.isto.r.y@gmail.com"">m.iss.d.onn.ah.isto.r.y@gmail.com</a>
<a href=""mailto:missdo.nn.a.hi.st.o.r.y@gmail.com"">missdo.nn.a.hi.st.o.r.y@gmail.com</a>
<a href=""mailto:mi.ss.do.nn.a.h.i.s.t.o.r.y@gmail.com"">mi.ss.do.nn.a.h.i.s.t.o.r.y@gmail.com</a>
<a href=""mailto:m.i.s.sdo.n.na.his.to.ry@gmail.com"">m.i.s.sdo.n.na.his.to.ry@gmail.com</a>
<a href=""mailto:miss.d.o.n.n.ahi.stor.y@gmail.com"">miss.d.o.n.n.ahi.stor.y@gmail.com</a>
<a href=""mailto:m.is.s.d.o.n.na.h.i.s.t.or.y@gmail.com"">m.is.s.d.o.n.na.h.i.s.t.or.y@gmail.com</a>
<a href=""mailto:miss.d.o.n.na.his.t.ory@gmail.com"">miss.d.o.n.na.his.t.ory@gmail.com</a>
<a href=""mailto:m.i.ss.donnahi.st.ory@gmail.com"">m.i.ss.donnahi.st.ory@gmail.com</a>
<a href=""mailto:m.i.ssdo.n.n.a.hi.sto.r.y@gmail.com"">m.i.ssdo.n.n.a.hi.sto.r.y@gmail.com</a>
<a href=""mailto:m.is.s.donnahisto.r.y@gmail.com"">m.is.s.donnahisto.r.y@gmail.com</a>
<a href=""mailto:miss.don.nahis.to.r.y@gmail.com"">miss.don.nahis.to.r.y@gmail.com</a>
<a href=""mailto:m.i.ssdon.n.a.h.isto.ry@gmail.com"">m.i.ssdon.n.a.h.isto.ry@gmail.com</a>
<a href=""mailto:missdonnabrow001@hotmail.com"">missdonnabrow001@hotmail.com</a>"
epVAYPDe,mostfrequentnumber-v1.c,i8yes,C,Wednesday 1st of November 2023 12:22:53 PM CDT,"#include <stdio.h>

int main(void) {
    int curr_num, prev_num, count = 0;
    int most_freq_num, most_freq_count = 0;
    int len, i = 0;

    // Brief summary of the program's function
    printf(""[I2P-Lab] Program which finds the most frequent consecutive number\n"");

    // Get amount of numbers from the user
    printf(""Input the amount of numbers you want: "");
    scanf(""%d"", &len);
    printf(""Input your numbers:\n"");

    // Main loop
    count = 1;
    for (i = 0; i < len; i++) {
        scanf(""%d"", &curr_num);
        if (curr_num == prev_num) {
            count++;
            if (count > most_freq_count) {
                most_freq_num = curr_num;
                most_freq_count = count;
            }
        } else {
            count = 1;
            prev_num = curr_num;
        }
    }

    printf(""Most frequent consecutive number is: %d\n"", most_freq_num);
    printf(""The number has been typed %d times consecutively"", most_freq_count);
}
"
Yg1TFj11,BTC Wallet Credentials have been reset,castlclass_20,GetText,Wednesday 1st of November 2023 12:21:26 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
taginestg:H9pz49 on 212.224.93.130
You can connect via SSH .
Regards"
wrmb7Afy,Retorno Formulário,hercioneto,PHP,Wednesday 1st of November 2023 12:13:07 PM CDT,"<!DOCTYPE html>
<!--
Salvar como calcular.php
    -->
<html lang=""pt-br"">
<head> 
    <meta charset=""utf-8"">
    <title>Cálculo</title>
</head>
<body>
    <h1>Calculando INFORMAÇÕES</h1>
<?php
if ($_SERVER[""REQUEST_METHOD""] == ""POST"") {
    $veiculo = $_POST[""veiculo""];
    $distancia = $_POST[""distancia""];
    $tempo = $_POST[""tempo""];

    $velocidadeMedia = $distancia/$tempo;

}
?>
<h2><?php 
echo ""O $veiculo percorreu $distancia Km em $tempo horas <br>"";
?></h2>
<h3>Velocidade média: <?php echo $velocidadeMedia; ?> Km/h</h3>
</body>
</html>
"
28iVTNLK,Exemplo Formulário,hercioneto,HTML,Wednesday 1st of November 2023 12:12:48 PM CDT,"<!DOCTYPE html>
<!--
Salvar como calculo.html
	-->
<html lang=""pt-br"">
<head> 
	<meta charset=""utf-8"">
	<title>Entrada de dados</title>
</head>
<body>
	Preencha o formulário:
	<form action=""calcular.php"" method=""post"">
        <label for=""nome"">Veículo:</label>
        <input type=""text"" id=""veiculo"" name=""veiculo"" required><br><br>

        <label for=""nome"">Distância:</label>
        <input type=""text"" id=""distancia"" name=""distancia"" required>(em km)<br><br>


        <label for=""nome"">Tempo:</label>
        <input type=""text"" id=""tempo"" name=""tempo"" required>(em horas)<br><br>

        <input type=""submit"" value=""Enviar"">
	</form>
</body>
</body>
</html>
"
9X2cUPHi,Untitled,cepxuozab,C++,Wednesday 1st of November 2023 12:07:06 PM CDT,"$ cmake ..
-- Building for: Ninja
-- The C compiler identification is GNU 13.2.0
-- The CXX compiler identification is GNU 13.2.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: C:/msys64/mingw64/bin/cc.exe - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: C:/msys64/mingw64/bin/c++.exe - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done (1.7s)
-- Generating done (0.0s)
-- Build files have been written to: C:/Users/Dell/Downloads/Telegram Desktop/ch
ange_main/build

Dell@HOME-PC MINGW64 ~/Downloads/Telegram Desktop/change_main/build
$ cmake --build .
[3/3] Linking CXX executable helloworld.exe
FAILED: helloworld.exe
cmd.exe /C ""cmd.exe /C ""cd /D ""C:\Users\Dell\Downloads\Telegram Desktop\change_m
ain\build\CMakeFiles\helloworld.dir"" && pwd && objcopy --redefine-sym _main=_stu
dent_main student_main.cpp.o student_main_alt.cpp.o && cp student_main_alt.cpp.o
 student_main.cpp.o && cd ""C:\Users\Dell\Downloads\Telegram Desktop\change_main\
build"""" && C:\msys64\mingw64\bin\c++.exe   CMakeFiles/helloworld.dir/student_mai
n.cpp.obj CMakeFiles/helloworld.dir/prac_main.cpp.obj -o helloworld.exe -Wl,--ou
t-implib,libhelloworld.dll.a -Wl,--major-image-version,0,--minor-image-version,0
  -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lc
omdlg32 -ladvapi32 && cd .""
/c/Users/Dell/Downloads/Telegram Desktop/change_main/build/CMakeFiles/helloworld
.dir
objcopy: 'student_main.cpp.o': No such file
ninja: build stopped: subcommand failed.
"
dgSriLQY,Untitled,damienhampton,TypeScript,Wednesday 1st of November 2023 11:53:04 AM CDT,"class MyTestApp implements TwitterTestInterface {
  async createAuthenticatedUsers(
    username: string
  ): Promise<TestResponse<TestSession>> {
    const user = await myApp.register(username, password);
    const session = await myApp.authenticate(user.id, password);
    return {
      success: true,
      data: session,
    };
  }

  async getFeed(token: TwitterToken): Promise<TestResponse<TwitterFeed>> {
    const feed = await myApp.getFeed(token);
    return {
      success: true,
      data: feed,
    };
  }

  async postMessage(
    token: TwitterToken,
    message: Message
  ): Promise<TestResponse<null>> {
    await myApp.postMessage(token, message);
    return {
      success: true,
    };
  }

  async subscribe(
    token: TwitterToken,
    username: TwitterUsername
  ): Promise<TestResponse<null>> {
    await myApp.subscribe(token, username);
    return {
      success: true,
    };
  }
}"
YUK5PrmG,Zip Softuni Python OOP Project,bAngelov,Python,Wednesday 1st of November 2023 11:42:51 AM CDT,"import os

def zip_current_project():
	'''Place this file in the folder containing your project directory and run it.\n
            A project zip will be created, excluding __pycache__ directory, which occupies space.\n
            Suitable for Windows 10/11 and Unix based systems, supporting tar'''
    os.system(f""tar --exclude __pycache__ -acvf project.zip project"")

if __name__ == ""__main__"":
    zip_current_project()"
eNq9GYje,Untitled,Ciuccio78,JSON,Wednesday 1st of November 2023 11:37:35 AM CDT,http://justwi.top:8080/get.php?username=561683306086086&password=2168&type=m3u_plus&output=ts
WWzmz8ZB,Untitled,damienhampton,TypeScript,Wednesday 1st of November 2023 11:34:16 AM CDT,"import { expect } from ""chai"";

export type TwitterUsername = string;
export type UserId = string;

export type TwitterToken = string;

export type TestSession = {
  token: TwitterToken;
  username: TwitterUsername;
  userId: UserId;
};

export type TestResponse<A> = {
  success: boolean;
  data?: A;
  error?: Error;
};

export type FeedEntry = {
  message: string;
};

export type TwitterFeed = {
  entries: FeedEntry[];
};

export type Message = string;

export interface TwitterTestInterface {
  createAuthenticatedUsers(
    username: string
  ): Promise<TestResponse<TestSession>>;
  subscribe(
    token: TwitterToken,
    username: TwitterUsername
  ): Promise<TestResponse<null>>;
  postMessage(
    token: TwitterToken,
    message: Message
  ): Promise<TestResponse<null>>;
  getFeed(token: TwitterToken): Promise<TestResponse<TwitterFeed>>;
}

function runTest(testApplication: TwitterTestInterface, numUsers: number) {
  describe(""twitter-clone"", async () => {
    context(`given ${numUsers} users`, async () => {
      const userSessions: TestSession[] = (
        await Promise.all(
          range(numUsers).map((ii) =>
            testApplication.createAuthenticatedUsers(`username-${ii}`)
          )
        )
      )
        .filter((response) => response.success && response.data)
        .map((response) => response.data as TestSession);

      context(""and each user is subscribed to the rest"", async () => {
        await Promise.all(
          userSessions.map((session) =>
            userSessions.map(({ username }) =>
              testApplication.subscribe(session.token, username)
            )
          )
        );

        context(""and each user posts one message"", async () => {
          await Promise.all(
            userSessions.map((session) =>
              testApplication.postMessage(
                session.token,
                `Message by user ${session.username}`
              )
            )
          );

          it(`should return a feed for each user with ${
            numUsers - 1
          } entries`, async () => {
            await Promise.all(
              userSessions.map(async (session) => {
                const response = await testApplication.getFeed(session.token);

                expect(response.data?.entries.length).to.equal(numUsers - 1);
              })
            );
          });
        });
      });
    });
  });
}

const range = (n: number) =>
  Array(n)
    .fill(0)
    .map((_, ii) => ii);
"
T4XX7J81,Untitled,kwest87,C#,Wednesday 1st of November 2023 11:31:29 AM CDT,"[StartCode]
using System;

namespace ConsoleApp27
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int attempt = 3;
            string password = ""777"";
            string input;

            while (attempt>0)
            {
                Console.WriteLine($""Введите пароль , попыток осталось : {attempt}"");
                Console.Write(""ПАРОЛЬ : "");
                input = Console.ReadLine();

                if(password == input)
                {
                    Console.WriteLine(""Секретные данные"");
                    Console.ReadKey();
                    continue;
                }
                else
                {
                    Console.WriteLine(""Пароль не верный"");
                    attempt--;
                    Console.ReadKey();
                }
            }
        }
    }
}
[EndCode]"
Wgc1PxYT,id,MrKey2b,Lua,Wednesday 1st of November 2023 11:31:29 AM CDT,"local peripheralList = peripheral.getNames()
for _, name in ipairs(peripheralList) do
	print(name)
end"
LkFHGvv8,sonarqube Docker,huezohuezo1990,YAML,Wednesday 1st of November 2023 11:30:07 AM CDT,"version: ""3""
services:
  sonarqube:
    image: sonarqube:community
    hostname: sonarqube
    restart: always
    container_name: sonarqube
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - ""8182:9000""
    deploy:
      resources:
        limits:
          cpus: ""1""
          memory: 2048M
  db:
    image: postgres:13
    hostname: postgresql
    restart: always
    container_name: postgresql
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    deploy:
      resources:
        limits:
          cpus: ""1""
          memory: 2048M
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:

"
Mgvqi7qe,Untitled,tulen_pod_soysom,C++,Wednesday 1st of November 2023 11:28:03 AM CDT,"#pragma once
#include <vector>
#include <boost/numeric/odeint.hpp>
//#include ""../myodeint/boost/numeric/odeint.hpp""

static constexpr double PI = 3.14159265358979323;

struct well_function
{
	double width = 1;
	double u0 = 1;

	double A = 1, sigma = 0.1, mean = 0;
	
	double operator() (double x)
	{
		if (x > -width / 2.0 && x < width / 2.0)
		return -u0 + A/sqrt(2*PI*sigma) * exp(-(x-mean)*(x - mean) / (2*sigma*sigma));
		else return 0;
	}

	well_function(double width, double u0, double A, double sigma, double mean) : width(width), u0(u0), A(A), sigma(sigma), mean(mean) {}

	double left_bound() { return -width / 2.0; }
	double right_bound() { return width / 2.0; }
};

struct phase_integrator
{
	double& E;
	well_function& well_f;

	void operator () (double& phase, double& d_phase_dx, double x)
	{
		d_phase_dx = (well_f(x) - E) * pow(cos(phase), 2) - pow(sin(phase), 2);
	}
};

struct wave_function_value : public std::array<double,2>
{
	double& r() { return (*this)[0]; }
	double& phase() { return (*this)[1]; }
};

struct radial_integrator
{
	double& E;
	well_function& well_f;

	void operator () (wave_function_value& phi, wave_function_value& d_phi_dx, double x)
	{
		d_phi_dx.r() = (1 + well_f(x) - E) * phi.r() * cos(phi.phase()) * sin(phi.phase());
		d_phi_dx.phase() = (well_f(x) - E) * pow(cos(phi.phase()), 2) - pow(sin(phi.phase()), 2);
	}
};

template<typename T = double>
std::pair<T, T> divide_by_two_method(std::function<T(T)> f, T left, T right, T epsilon, T compare_to)
{
	T c;
	do
	{
		c = (right + left) / 2.0;
		if ((f(c) - compare_to) * (f(left) - compare_to) < 0)
		{
			right = c;
		}
		else
		{
			left = c;
		}
	} while (abs(right - left) >= epsilon);
	return { f(c),c };
}

class Program
{
public:
	well_function well_f;

	std::vector<double> phase_E;
	std::vector<double> Ek;
	std::vector<double> appropriate_phases;

	size_t chosen_k = 0;
	std::vector<wave_function_value> wave_function;

	double E_loop_size = 2048;
	double x_step = 0.01;

	double R = 3.0;

	void evaluate_ek()
	{
		phase_E.resize(E_loop_size);

		boost::numeric::odeint::runge_kutta4<double> stepper;
		for (int i = 0; i < E_loop_size; i++)
		{
			double E = -well_f.u0 + i / (double)E_loop_size * well_f.u0;
			double phase = PI / 2.0;

			boost::numeric::odeint::integrate_const(
				stepper,
				phase_integrator{ E,well_f },
				phase,
				well_f.left_bound() - R,
				well_f.right_bound() + R,
				x_step
			);
			phase_E[i] = phase;
		}

		double phase_min, phase_max;
		int k_min, k_max;
		phase_min = *std::min_element(phase_E.begin(), phase_E.end());
		phase_max = *std::max_element(phase_E.begin(), phase_E.end());


		k_min = 0;
		k_max = floor((-2 * phase_min / PI - 1) / 2.0);
		k_max = k_max > 0 ? k_max : 0;

		Ek.resize(k_max - k_min);

		appropriate_phases.resize(k_max - k_min);
		for (size_t i = k_min; i < k_max; i++)
		{
			appropriate_phases[i] = (2 * i + 1) / 2.0 * (-PI);
		}

		for (size_t i = 0; i < Ek.size(); i++)
		{
			double appropriate_phase = (2 * i + 1) / 2.0 * (-PI);

			Ek[i] = divide_by_two_method<double>(
				[&](double E)
				{
					double phase = PI / 2.0;
					boost::numeric::odeint::integrate_const(
						stepper,
						phase_integrator{ E,well_f },
						phase,
						well_f.left_bound() - R,
						well_f.right_bound() + R,
						x_step
					);
					return phase;
				},
				-well_f.u0,
				0,
				1e-5,
				appropriate_phase
			).second;
		}
	}

	void evaluate_wave_function()
	{
		wave_function.clear();
		
		wave_function_value start_value;
		start_value.r() = 1.0; 
		start_value.phase() = PI / 2.0;

		wave_function.push_back(start_value);

		boost::numeric::odeint::runge_kutta4<wave_function_value> stepper;
		boost::numeric::odeint::integrate_const(
			stepper,
			radial_integrator{ Ek[chosen_k],well_f },
			start_value,
			well_f.left_bound() - R,
			well_f.right_bound() + R,
			x_step,
			[&](const wave_function_value& phi, double x) { wave_function.push_back(phi);}
		);

		auto norm = sqrt(std::accumulate(wave_function.begin(), wave_function.end(),0.0, [&](auto& a, auto& b) {return a + b.r() * b.r() * x_step; })); 
		for (auto& i : wave_function) {i.r() *=well_f.u0 / norm;}
	}

	Program() : well_f(1,1,1,1,0){}
};


"
pZAssB7i,Graphs(3 sem.),anticlown,C++,Wednesday 1st of November 2023 11:27:21 AM CDT,"//1. в заголовках создать два файла - Paths.h и Graph.h, закинуть в них код
//2. создать исходные файлы Paths.cpp и Graph.cpp, закинуть в них код
//3. создать файл GraphLab.cpp, закинуть в него код. Это файл с main
// лаба готова :)

														/* Paths.h file start */

#pragma once
#include <vector>

class Paths
{
public:
	struct DistancePoint
	{
		int m_point;
		int m_distancePrev;
	};

	struct Path
	{
		std::vector<DistancePoint> m_points;
		int m_length;
	};

private:
	std::vector<Path> m_paths;

public:
	static void printPath(const Path& path);

	Paths(const Paths& paths);

	Paths();

	const Paths& operator=(const Paths& paths);

	Path& operator[](const int index);

	void addPath(const Path& path);

	void clear();

	int getLength();

	void insertInFront(const int pathIndex, const DistancePoint& distancePoint);

	void sort();

	void printPaths();

};

												/* Paths.h file end */


												/* Graph.h file start */

#pragma once
#include <vector>
#include <algorithm>
#include ""Paths.h""
#define INFINITY_GRAPH INT_MAX

class Graph
{
private:
	std::vector<std::vector<int>> m_adjacencyMatrix;

	//Recursive function which returns all paths from point v to point x
	Paths findPathPrivate(const std::vector<std::vector<int>>& a, std::vector<bool>& visited, int n, int v, int x, int currentPathLength, Paths& paths, Paths::Path& currentPath);

	//Returns minimum distance from all unvisited vertices to current
	int minDist(const std::vector<int>& dist, const std::vector<bool>& tSet);

public:
	//Initialize adjacency matrix from parameter with 0(MACHINE INFINITY)
	static void initGraph(std::vector<std::vector<int>>& adjacencyMatrix);

	//Constructor copy adjacency matrix from parameter to class field
	Graph(const std::vector<std::vector<int>>& adjacencyMatrix);

	//This function calls recursive function findPathPrivate, but prepare all parameters to simplify usage for developer
	Paths findAllPaths(const int startPoint, const int finishPoint);

	//Function finds shortest path between two points
	Paths::Path findShortestPath(const int startPoint, const int finishPoint);

	//Function finds longest path between two points
	Paths::Path findLongestPath(const int startPoint, const int finishPoint);

	//Finds graph center
	int findCenter();

	//Prints adjacency matrix, that represents graph
	void print_adjacencyMatrix();
};

													/* Graph.h file end */


													/* Paths.cpp file start */

#include ""Paths.h""

void Paths::printPath(const Path& path)
{
	if (path.m_points.size())
	{
		printf(""<%d>"", path.m_points[0].m_point + 1);
		for (int j = 1; j < path.m_points.size(); ++j)
			printf(""  (%d)->  <%d>"", path.m_points[j].m_distancePrev, path.m_points[j].m_point + 1);
		printf(""  Количество точек: %d, Длина: %d"", (int)path.m_points.size(), path.m_length);
		printf(""\n"");
	}
}

Paths::Paths(const Paths& paths)
{
	this->m_paths = paths.m_paths;
}

Paths::Paths()
{
	m_paths.resize(0);
}

const Paths& Paths::operator=(const Paths& paths)
{
	this->m_paths = paths.m_paths;
	return *this;
}

Paths::Path& Paths::operator[](const int index)
{
	return m_paths[index];
}

void Paths::addPath(const Path& path)
{
	m_paths.push_back(path);
}

void Paths::clear()
{
	m_paths.resize(0);
}

int Paths::getLength()
{
	return m_paths.size();
}

void Paths::insertInFront(const int pathIndex, const DistancePoint& distancePoint)
{
	m_paths[pathIndex].m_points.insert(m_paths[pathIndex].m_points.begin(), distancePoint);
}

void Paths::sort()
{
	for (int i = 1; i < m_paths.size(); ++i)
		for (int j = 0; j < m_paths.size() - i; ++j)
			if (m_paths[j].m_length > m_paths[j + 1].m_length)
			{
				Path temp = m_paths[j];
				m_paths[j] = m_paths[j + 1];
				m_paths[j + 1] = temp;
			}
}

void Paths::printPaths()
{
	int i{ 1 };
	for (const Path& path : m_paths)
	{
		printf(""Path #%d: "", i);
		this->printPath(path);
		++i;
	}
}

													/* Paths.cpp file end */

													/* Graph.cpp file start */

#include ""Graph.h""

Paths Graph::findPathPrivate(const std::vector<std::vector<int>>& a, std::vector<bool>& visited, int n, int v, int x, int currentPathLength, Paths& paths, Paths::Path& currentPath)
{
	//static Paths paths;
	//static Paths::Path currentPath;
	if (v == x) {
		currentPath.m_length = currentPathLength;
		paths.addPath(currentPath);
		return paths;
	}

	visited[v] = true;
	for (int i = 0; i < n; ++i)
		if (/*a[v][i]*/ a[v][i] != INFINITY_GRAPH && !visited[i])
		{
			currentPath.m_points.push_back({i, a[v][i]});
			currentPathLength += a[v][i];
			findPathPrivate(a, visited, n, i, x, currentPathLength, paths, currentPath);
			currentPath.m_points.pop_back();
			currentPathLength -= a[v][i];
		}
	visited[v] = false;
	return paths;
}

int Graph::minDist(const std::vector<int>& dist, const std::vector<bool>& tSet)
{

	int min = INT_MAX, index{ 0 };

	for (int i = 0; i < m_adjacencyMatrix.size(); ++i)
	{
		if (tSet[i] == false && dist[i] <= min)
		{
			min = dist[i];
			index = i;
		}

	}

	return index;
}

void Graph::initGraph(std::vector<std::vector<int>>& adjacencyMatrix)
{
	for (int i = 0; i < adjacencyMatrix.size(); ++i)
	{
		std::fill(adjacencyMatrix[i].begin(), adjacencyMatrix[i].end(), INFINITY_GRAPH);
		adjacencyMatrix[i][i] = 0;
	}
}

Graph::Graph(const std::vector<std::vector<int>>& adjacencyMatrix)
{
	m_adjacencyMatrix = adjacencyMatrix;
}

Paths Graph::findAllPaths(const int startPoint, const int finishPoint)
{
	std::vector<bool> visited{};
	visited.resize(m_adjacencyMatrix.size());
	Paths paths;
	Paths::Path currentPath;
	paths = this->findPathPrivate(m_adjacencyMatrix, visited, visited.size(), startPoint, finishPoint, 0, paths, currentPath);
	for (int i = 0; i < paths.getLength(); ++i)
		paths.insertInFront(i, { startPoint, 0});
	paths.sort();
	return paths;
}

Paths::Path Graph::findShortestPath(const int startPoint, const int finishPoint)
{
	std::vector<int> dist; // integer array to calculate minimum distance for each node.  
	dist.resize(m_adjacencyMatrix.size());
	std::fill(dist.begin(), dist.end(), /*INT_MAX*/INFINITY_GRAPH);
	std::vector<bool> tSet;// boolean array to mark visted/unvisted for each node.
	tSet.resize(m_adjacencyMatrix.size());
	std::fill(tSet.begin(), tSet.end(), false);

	dist[startPoint] = 0;

	for (int i = 0; i < dist.size(); ++i)
	{
		int m = minDist(dist, tSet); // vertex not yet included.
		tSet[m] = true;// m with minimum distance included in Tset.
		for (int i = 0; i < dist.size(); ++i)
		{
			// Updating the minimum distance for the particular node.
			if (!tSet[i] && /*m_adjacencyMatrix[m][i]*/ m_adjacencyMatrix[m][i] != INFINITY_GRAPH && dist[m] != /*INT_MAX*/INFINITY_GRAPH && dist[m] + m_adjacencyMatrix[m][i] < dist[i])
				dist[i] = dist[m] + m_adjacencyMatrix[m][i];
		}
	}

	Paths::Path path;
	if (dist[finishPoint] != /*INT_MAX*/INFINITY_GRAPH)
	{
		int current{ finishPoint };
		while (current != startPoint)
			for (int i = 0; i < m_adjacencyMatrix.size(); ++i)
				if (dist[current] - m_adjacencyMatrix[i][current] == dist[i] && m_adjacencyMatrix[i][current] != 0)
				{
					path.m_points.push_back({ current, m_adjacencyMatrix[i][current] });
					current = i;
					break;
				}
		path.m_points.push_back({ startPoint, 0 });
		path.m_length = dist[finishPoint];
		reverse(path.m_points.begin(), path.m_points.end());
	}
	return path;
}

Paths::Path Graph::findLongestPath(const int startPoint, const int finishPoint)
{
	Paths paths = findAllPaths(startPoint, finishPoint);
	if (paths.getLength())
		return paths[paths.getLength() - 1];
	return Paths::Path();
}

int Graph::findCenter()
{
	std::vector<std::vector<int>> m_adjacencyMatrixCopy{ m_adjacencyMatrix };
	//Floyd algorithm
	for (int k = 0; k < m_adjacencyMatrixCopy.size(); ++k)
		for (int i = 0; i < m_adjacencyMatrixCopy.size(); ++i)
			for (int j = 0; j < m_adjacencyMatrixCopy.size(); ++j)
				if (m_adjacencyMatrixCopy[i][k] != INFINITY_GRAPH && m_adjacencyMatrixCopy[k][j] != INFINITY_GRAPH)
					m_adjacencyMatrixCopy[i][j] = std::min(m_adjacencyMatrixCopy[i][j], m_adjacencyMatrixCopy[i][k] + m_adjacencyMatrixCopy[k][j]);

	//Find eccentricitys
	std::vector<int> eccentricitys;
	for (int i = 0; i < m_adjacencyMatrixCopy.size(); ++i)
	{
		int max{ 0 };
		for (int j = 0; j < m_adjacencyMatrixCopy.size(); ++j)
			if (m_adjacencyMatrixCopy[j][i] > max)
				max = m_adjacencyMatrixCopy[j][i];
		eccentricitys.push_back(max);
	}

	//Return lowest eccentricity
	//return *std::min_element(eccentricitys.begin(), eccentricitys.end());
	int minIndex{ 0 };
	for (int i = 1; i < eccentricitys.size(); ++i)
		if (eccentricitys[i] < eccentricitys[minIndex])
			minIndex = i;
	return minIndex;
}

void Graph::print_adjacencyMatrix()
{
	for (int i = 0; i < m_adjacencyMatrix.size(); ++i)
	{
		for (int j = 0; j < m_adjacencyMatrix.size(); ++j)
		{
			if (m_adjacencyMatrix[i][j] == INFINITY_GRAPH)
				printf(""%7s"", "" inf"");
			else
				printf("" %5d "", m_adjacencyMatrix[i][j]);
		}
		printf(""\n"");
	}
}

													/* Graph.cpp file end */

													/* GraphLab.cpp(main) file start */

#include <iostream>
#include ""Graph.h""
#include ""Paths.h""

void createGraph1(std::vector<std::vector<int>>& mtrx1)
{
    const int verticesNum{ 5 };
    mtrx1.resize(verticesNum);
    for (int i = 0; i < verticesNum; ++i)
        mtrx1[i].resize(verticesNum);
    Graph::initGraph(mtrx1);
    mtrx1[0][1] = 10;
    mtrx1[0][3] = 30;
    mtrx1[0][4] = 100;
    mtrx1[1][2] = 50;
    mtrx1[2][4] = 10;
    mtrx1[3][2] = 20;
    mtrx1[3][4] = 60;
}

void createGraph2(std::vector<std::vector<int>>& mtrx2)
{
    const int verticesNum{ 7 };
    mtrx2.resize(verticesNum);
    for (int i = 0; i < verticesNum; ++i)
        mtrx2[i].resize(verticesNum);
    Graph::initGraph(mtrx2);
    
    
    mtrx2[0][1] = 10;
    mtrx2[1][2] = 1;
    mtrx2[1][4] = 10;
    mtrx2[2][5] = 2;
    mtrx2[3][0] = 10;
    mtrx2[3][1] = 10;
    mtrx2[3][2] = 10;
    mtrx2[4][6] = 4;
    mtrx2[5][4] = 3;
    mtrx2[5][3] = 10;
    mtrx2[6][5] = 10;
}

void createGraph3(std::vector<std::vector<int>>& mtrx3)
{
    const int verticesNum{ 5 };
    mtrx3.resize(verticesNum);
    for (int i = 0; i < verticesNum; ++i)
        mtrx3[i].resize(verticesNum);
    Graph::initGraph(mtrx3);


    mtrx3[0][1] = 1;
    mtrx3[1][2] = 2;
    mtrx3[3][1] = 1;
    mtrx3[3][2] = 3;
    mtrx3[4][3] = 5;
    mtrx3[2][4] = 4;
    mtrx3[2][3] = 2;
}

int main()
{
    setlocale(LC_ALL, ""Russian"");
    int mtrxNum{ 0 };
    std::cout << ""Введите номер графа для загрузки(доступно 3): "";
    std::cin >> mtrxNum;
    std::vector<std::vector<int>> mtrx;
    switch (mtrxNum)
    {
    case 1:
        createGraph1(mtrx);
        break;
    case 2:
        createGraph2(mtrx);
        break;
    case 3:
        createGraph3(mtrx);
        break;
    default:
        exit(0);
    }
    
    Graph graph{ mtrx };

    int start{ 0 };
    int finish{ 0 };
    std::cout << ""Введите начальную точку: "";
    std::cin >> start;
    std::cout << ""Введите конечную точку: "";
    std::cin >> finish;
    --start;
    --finish;

    printf(""Матрица смежности графа:\n"");
    graph.print_adjacencyMatrix();

    Paths paths;

    paths = graph.findAllPaths(start, finish);
    if (paths.getLength())
    {
        printf(""\n\n\n"");
        printf(""Все пути в графе от точки %d до точки %d по возрастанию длины:\n"", start + 1, finish + 1);
        paths.printPaths();
        printf(""\n\n"");


        printf(""\n"");
        Paths::Path path;

        printf(""Кратчайший путь: "");
        path = graph.findShortestPath(start, finish);
        Paths::printPath(path);

        printf(""\n"");
        printf(""Длиннейший путь: "");
        path = graph.findLongestPath(start, finish);
        Paths::printPath(path);
    }
    else
        printf(""\nВершина %d недостижима из вершины %d"", finish + 1, start + 1);

    printf(""\n"");
    printf(""\nЦентр графа: %d\n"",graph.findCenter() + 1);
}

														/* GraphLab main file end */


"
u7mVpjDi,KT_Struct_Files_2,Savenok,C,Wednesday 1st of November 2023 11:00:49 AM CDT,"#define _CRT_SECURE_NO_WARNINGS 

#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

typedef struct Students 
{
	int numOfGroup;
	char surName[20];
	int exam1;
    int exam2;
    int exam3;
    int exam4;
    int exam5;
}students_t;

int sizeOfStructure = 0;

void sortByGroup(struct Students students[])
{
    struct Students temp;
    for (int i = 0; i < sizeOfStructure - 1; i++) {
        for (int j = 0; j < sizeOfStructure - i - 1; j++) {
            if (students[j].numOfGroup > students[j + 1].numOfGroup) {
                temp = students[j];
                students[j] = students[j + 1];
                students[j + 1] = temp;
            }
        }
    }
}

void getSizeFromFile()
{
    FILE* inputFile;
    bool canOpenFile = true;
    if (fopen_s(&inputFile, ""Students.txt"", ""r"") != 0)
    {
        perror(""Error of opening Students.txt!"");
        canOpenFile = false;
    }
    if (canOpenFile)
    {
        char line[50];
        if (fgets(line, sizeof(line), inputFile) != NULL)
        {
            sscanf(line, ""%d"", &sizeOfStructure);
        }
        fclose(inputFile);
    }
}

void getStructFromFile(students_t students[])
{
    FILE* inputFile;
    bool canOpenFile = true;
    if (fopen_s(&inputFile, ""Students.txt"", ""r"") != 0)
    {
        perror(""Error of opening Students.txt!"");
        canOpenFile = false;
    }
    if (canOpenFile)
    {
        char line[50];
        if (fgets(line, sizeof(line), inputFile) != NULL) {}
        for (int i = 0; i < sizeOfStructure; i++)
        {
            if (fgets(line, sizeof(line), inputFile) != NULL)
            {
                sscanf(line, ""%d %s %ld %ld %ld %ld %ld"", &students[i].numOfGroup, students[i].surName, 
                    &students[i].exam1, &students[i].exam2, &students[i].exam3, &students[i].exam4, &students[i].exam5);
            }
        }
        fclose(inputFile);
    }
}

double calculateAverageMark(struct Students students[], int numOfRecord)
{
    return (students[numOfRecord].exam1 + students[numOfRecord].exam2 + students[numOfRecord].exam3 + students[numOfRecord].exam4 + students[numOfRecord].exam5) / 5.0;
}

void outputStruct(struct Students students[])
{
    printf(""List of students:\n"");
    double averageMark = 0;
    for (int i = 0; i < sizeOfStructure; i++)
    {
        printf(""%d %d %s %ld %ld %ld %ld %ld\n"", i + 1, students[i].numOfGroup, students[i].surName,
            students[i].exam1, students[i].exam2, students[i].exam3, students[i].exam4, students[i].exam5);
        averageMark = calculateAverageMark(students, i);
        printf(""Average mark of %s is %f\n"", students[i].surName, averageMark);
    }
}

int getChoice()
{
    int num = 0;
    scanf(""%d"", &num);
    return num;
}

int chooseRecord() 
{
    int numOfRecord = 0;
    printf(""Choose num of record:\n"");
    scanf(""%d"", &numOfRecord);
    return numOfRecord - 1;
}

void correctRecord(struct Students students[])
{
    int numOfRecord = chooseRecord();
    printf(""Change record:\n"");
    scanf(""%d %s %ld %ld %ld %ld %ld"", &students[numOfRecord].numOfGroup, &students[numOfRecord].surName,
        &students[numOfRecord].exam1, &students[numOfRecord].exam2, &students[numOfRecord].exam3, &students[numOfRecord].exam4, &students[numOfRecord].exam5);
}

void deleteRecord(struct Students students[])
{
    int numOfRecord = chooseRecord();
    printf(""Deleting of record...\n"");
    for (int i = numOfRecord; i < sizeOfStructure; i++)
    {
        students[i] = students[i + 1];
    }
    sizeOfStructure--;
}

void addRecord(struct Students students[])
{
    printf(""Add new record's data:\n"");
    sizeOfStructure++;
    students_t* students_temp = (students_t*)malloc(sizeof(students_t) * sizeOfStructure);
    students_temp = students;
    scanf(""%d %s %ld %ld %ld %ld %ld"", &students_temp[sizeOfStructure - 1].numOfGroup, &students_temp[sizeOfStructure - 1].surName,
        &students_temp[sizeOfStructure - 1].exam1, &students_temp[sizeOfStructure - 1].exam2, &students_temp[sizeOfStructure - 1].exam3, &students_temp[sizeOfStructure - 1].exam4, &students_temp[sizeOfStructure - 1].exam5);
    students = (students_t*)malloc(sizeof(students_t) * sizeOfStructure);
    students = students_temp;
    sortByGroup(students);
}

void outputStructToFile(struct Students students[])
{
    FILE* outputFile;
    bool canOpenFile = true;
    if (fopen_s(&outputFile, ""students.txt"", ""w"") != 0)
    {
        perror(""Error of opening Students.txt!"");
        canOpenFile = false;
    }
    if (canOpenFile)
    {
        fprintf(outputFile, ""%d\n"", sizeOfStructure);
        for (int i = 0; i < sizeOfStructure; i++)
        {
            fprintf(outputFile, ""%d %s %ld %ld %ld %ld %ld"", students[i].numOfGroup, students[i].surName,
                students[i].exam1, students[i].exam2, students[i].exam3, students[i].exam4, students[i].exam5);
        }
        fclose(outputFile);
        printf(""Data was succesfully output to file!"");
    }
}

void chooseAction(struct Students students[])
{
    int choice = 0;
    do
    {
        printf(""\nFor correcting input 1, for deleting - 2, for adding - 3, for output struct - 4, for output to file - 5.\n"");
        printf(""For exit press 0...\n"");
        choice = getChoice();
        switch (choice)
        {
        case 1:
        {
            correctRecord(students);
            break;
        }
        case 2:
        {
            deleteRecord(students);
            break;
        }
        case 3:
        {
            addRecord(students);
            break;
        }
        case 4:
        {
            outputStruct(students);
            break;
        }
        case 5:
        {
            outputStructToFile(students);
            break;
        }
        default:
            break;
        }
    } while (choice != 0);
}

int main()
{
    getSizeFromFile();
    students_t* students = (students_t*)malloc(sizeof(students_t) * sizeOfStructure);
    getStructFromFile(&students);
    sortByGroup(&students);
    outputStruct(&students);
    chooseAction(&students);
    free(students);
	return 0;
}"
XCh1KGFz,Untitled,kwest87,C#,Wednesday 1st of November 2023 10:55:47 AM CDT,"[StartCode]
using System;

namespace ConsoleApp26
{
    internal class Program
    {
        static void Main(string[] args)
        {
            char edging;
            string name;
            Console.Write(""Введите ваше имя : "");
            name = Console.ReadLine();
            Console.Write(""Введите символ : "");
            edging = Convert.ToChar(Console.ReadLine());

            for (int i = 0; i <= name.Length; i++)
            {
                Console.Write(edging);
            }

            Console.WriteLine(edging);
            Console.WriteLine(edging+name+edging);
            Console.Write(edging);

            for (int i = 0; i <= name.Length; i++)
            {
                Console.Write(edging);
            }
        }
    }
}
[EndCode]"
025KiCam,tv 11-2023 task,spidersam,JSON,Wednesday 1st of November 2023 10:33:17 AM CDT,"[
  {
    ""name"": ""ZooTv-live-01-11-2023.mp4"",
    ""url"": ""https://hello.freeconference.com/drive_files/download/51bc274f-01ad-476b-9d29-ebdd29d23a46.mp4"",
    ""imageUrl"": ""https://i.imgur.com/O8HhNCcm.jpg""
  },
  {
    ""name"": ""ZooTv-01-11-2023.mp4"",
    ""url"": """",
    ""imageUrl"": ""https://i.imgur.com/O8HhNCcm.jpg""
  },
  {
    ""name"": ""ZooTv-live-02-11-2023.mp4"",
    ""url"": """",
    ""imageUrl"": ""https://i.imgur.com/O8HhNCcm.jpg""
  },
  {
    ""name"": ""ZooTv-02-11-2023.mp4"",
    ""url"": """",
    ""imageUrl"": ""https://i.imgur.com/O8HhNCcm.jpg""
  },
  {
    ""name"": ""ZooTv-live-03-11-2023.mp4"",
    ""url"": """",
    ""imageUrl"": ""https://i.imgur.com/O8HhNCcm.jpg""
  },
  {
    ""name"": ""ZooTv-03-11-2023.mp4"",
    ""url"": """",
    ""imageUrl"": ""https://i.imgur.com/O8HhNCcm.jpg""
  }
]"
Yb9fcBHj,Binary Tree + Counting the leaves (Pre-order traversal),BlackWolfy,C++,Wednesday 1st of November 2023 10:10:30 AM CDT,"#include <iostream>

struct TreeNode {
    int data;           //node value
    TreeNode* left;     //pointer to left child
    TreeNode* right;    //pointer to right child

    TreeNode(int value) {   //constructor for initializing a node
        data = value;
        left = nullptr;
        right = nullptr;
    }
};
//insert nodes into tree
void insert(TreeNode*& root, int value) {
    if (root == nullptr) {
        root = new TreeNode(value);
    }
    else if (value < root->data) {
        insert(root->left, value);
    }
    else {
        insert(root->right, value);
    }
}
//Pre-order traversal - you start at the root node and then you visit the left subtree first and then the right
void printPreOrder(TreeNode* root) {
    if (root != nullptr) {
        std::cout << root->data << "" "";
        printPreOrder(root->left);
        printPreOrder(root->right);
    }
}
// Function to count the number of leaf nodes in the tree
int countLeaves(TreeNode* root) {
    if (root == nullptr) {
        return 0; //The tree is empty
    }
    else if (root->left == nullptr && root->right == nullptr) {
        return 1; //Only root node in tree
    }
    else {
        //Count leaf nodes in the left and right subtrees
        int leftLeaves = countLeaves(root->left);
        int rightLeaves = countLeaves(root->right);
        return leftLeaves + rightLeaves;
    }
}
int main()
{
    TreeNode* root = nullptr;
    int n;
    std::cout << ""Enter the number of nodes you will insert: "";
    std::cin >> n;
    for (int i = 0; i < n; i++) {
        int value;
        std::cout << ""Enter a value: "";
        std::cin >> value;
        insert(root, value);
    }
    printPreOrder(root);
    std::cout << ""Count of the number of leaves: "";
    int leafCount = countLeaves(root);
}"
VUqFnQG5,requirements_fic,Bobita,SystemVerilog,Wednesday 1st of November 2023 10:10:00 AM CDT,"
- procesor in verilog care sa execute cod de assembly
- parser for assemmbly.
- codul assembly se foloseste pentru testare. "
QsMjQC6e,final redemption,fsoc131y,Java,Wednesday 1st of November 2023 10:01:15 AM CDT,"SWING
1. CheckBox:
import javax.swing.*;
import java.awt.event.*;

class CheckBox {
    JFrame f;
    JLabel label;
    JCheckBox checkbox1, checkbox2;
    JList<String> list1, list2; // Define JList components

    CheckBox() {
        f = new JFrame(""CheckBox Demo"");
        label = new JLabel();
        label.setHorizontalAlignment(JLabel.CENTER);
        label.setSize(400, 100);
        checkbox1 = new JCheckBox(""C++"");
        checkbox1.setBounds(150, 100, 50, 50);
        checkbox2 = new JCheckBox(""Java"");
        checkbox2.setBounds(150, 150, 50, 50);
        f.add(checkbox1);
        f.add(checkbox2);
        f.add(label);

        checkbox1.addItemListener(new ItemListenerDemo(this));
        checkbox2.addItemListener(new ItemListenerDemo(this));

        f.setSize(400, 400);
        f.setLayout(null);
        f.setVisible(true);
    }

    public static void main(String args[]) {
        new CheckBox();
    }
}

class ItemListenerDemo implements ItemListener {
    CheckBox cbd;

    ItemListenerDemo(CheckBox cbd) {
        this.cbd = cbd;
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        String data = """";
        if (cbd.list1.getSelectedIndex() != -1) {
            data = ""Programming language Selected: "" + cbd.list1.getSelectedValue();
            cbd.label.setText(data);
        }
        if (cbd.list2.getSelectedIndex() != -1) {
            data += "", Framework Selected: "";
            for (Object frame : cbd.list2.getSelectedValuesList()) {
                data += frame + "" "";
            }
        }
        cbd.label.setText(data);
    }
}

2. Border Layout:
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class BorderLayoutDemo {
    JFrame f;
    JButton b1;
    JButton b2;
    JButton b3;
    JButton b4;
    JLabel jl;

    public BorderLayoutDemo() {
        f = new JFrame();

        // Creating buttons
        b1 = new JButton(""NORTH"");
        b2 = new JButton(""SOUTH"");
        b3 = new JButton(""EAST"");
        b4 = new JButton(""WEST"");
        jl = new JLabel(""Label@CENTER"");

        f.add(b1, BorderLayout.NORTH);
        f.add(b2, BorderLayout.SOUTH);
        f.add(b3, BorderLayout.EAST);
        f.add(b4, BorderLayout.WEST);
        f.add(jl, BorderLayout.CENTER);

        b1.addActionListener(new MyActionListener(this));
        b2.addActionListener(new MyActionListener(this));
        b3.addActionListener(new MyActionListener(this));
        b4.addActionListener(new MyActionListener(this));

        f.setSize(300, 300);
        f.setVisible(true);
    }

    public static void main(String[] args) {
        new BorderLayoutDemo();
    }
}

class MyActionListener implements ActionListener {
    BorderLayoutDemo bld;

    MyActionListener(BorderLayoutDemo bld) {
        this.bld = bld;
    }

    public void actionPerformed(ActionEvent ae) {
        bld.jl.setText(ae.getActionCommand());
    }
}

3. Card Layout:
import java.awt.*;    
import javax.swing.*;    
    
class CardLayoutDemo extends JFrame
{    
javax.swing.JButton b1;  
JButton b2;   
JButton b3;  
JButton b4;  
Container c;
CardLayout cl;
CardLayoutDemo()  
{            
    b1 = new javax.swing.JButton(""NORTH""); 
    b2 = new JButton(""SOUTH"");   
    b3 = new JButton(""EAST""); 
    b4 = new JButton(""WEST"");

    c = getContentPane();
    cl = new CardLayout(40,30);
    c.setLayout(cl);

    c.add(b1);     
    c.add(b2);      
    c.add(b3);      
    c.add(b4);     

    b1.addActionListener(new MyActionListener(this));
    b2.addActionListener(new MyActionListener(this));
    b3.addActionListener(new MyActionListener(this));
    b4.addActionListener(new MyActionListener(this));
            
    setSize(300, 300);    
    setVisible(true);    
}    
public static void main(String[] args) {    
    new CardLayoutDemo();    
}    
}    

class MyActionListener implements java.awt.event.ActionListener {
  CardLayoutDemo cld;
  MyActionListener(CardLayoutDemo cld){
     this.cld = cld;
  }
  public void actionPerformed(java.awt.event.ActionEvent ae){
    cld.cl.next(cld.c);
  }
}

4. Box Layout:
import javax.swing.*;    
    
class BoxLayoutDemo extends JFrame
{    
javax.swing.JButton b1;  
JButton b2;   
JButton b3;  
JButton b4;  
JLabel jl;
BoxLayoutDemo()  
{            
    b1 = new javax.swing.JButton(""NORTH""); 
    b2 = new JButton(""SOUTH"");   
    b3 = new JButton(""EAST""); 
    b4 = new JButton(""WEST"");
    jl = new JLabel(""LABEL@CENTRE"");

    add(b1);     
    add(b2);      
    add(b3);      
    add(b4);     
    add(jl); 

    setLayout (new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

    b1.addActionListener(new MyActionListener(this));
    b2.addActionListener(new MyActionListener(this));
    b3.addActionListener(new MyActionListener(this));
    b4.addActionListener(new MyActionListener(this));
            
    setSize(300, 300);    
    setVisible(true);    
}    
public static void main(String[] args) {    
    new BoxLayoutDemo();    
}    
}    

class MyActionListener implements java.awt.event.ActionListener {
  BoxLayoutDemo bld;
  MyActionListener(BoxLayoutDemo bld){
     this.bld = bld;
  }
  public void actionPerformed(java.awt.event.ActionEvent ae){
    bld.jl.setText(ae.getActionCommand());
  }
}

-------------------------------------------------------------------------------------------------------------
2. Multilevel Inheritance:
// Base class representing a product
class Product {
    private String name;
    private double price;
 
    public Product(String name, double price) {
        this.name = name;
        this.price = price;
    }
 
    public String getName() {
        return name;
    }
 
    public double getPrice() {
        return price;
    }
 
    public void displayProductInfo() {
        System.out.println(""Product: "" + name);
        System.out.println(""Price: $"" + price);
    }
}
 
// Subclass representing electronic products
class Electronics extends Product {
    private String brand;
 
    public Electronics(String name, double price, String brand) {
        super(name, price);
        this.brand = brand;
    }
 
    public String getBrand() {
        return brand;
    }
 
    @Override
    public void displayProductInfo() {
        super.displayProductInfo();
        System.out.println(""Brand: "" + brand);
    }
}
 
// Subclass representing laptops
class Laptop extends Electronics {
    private String processor;
 
    public Laptop(String name, double price, String brand, String processor) {
        super(name, price, brand);
        this.processor = processor;
    }
 
    public String getProcessor() {
        return processor;
    }
 
    @Override
    public void displayProductInfo() {
        super.displayProductInfo();
        System.out.println(""Processor: "" + processor);
    }
}
 
public class Multi {
    public static void main(String[] args) {
        // Create a Laptop object
        Laptop laptop = new Laptop(""Dell XPS 13"", 1299.99, ""Dell"", ""Intel Core i7"");
 
        // Display product information
        laptop.displayProductInfo();
    }
}
------------
3. Exception Handling:
import java.util.Scanner;

class InvalidCreditCardException extends Exception {
    public InvalidCreditCardException(String message) {
        super(message);
    }
}

public class CCValidate {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print(""Enter your 16-digit credit card number: "");
        String creditCardNumber = scanner.nextLine();

        try {
            if (isValidCreditCard(creditCardNumber)) {
                System.out.println(""Credit card is valid."");
            } else {
                System.out.println(""Credit card is invalid."");
            }
        } catch (InvalidCreditCardException e) {
            System.out.println(""Invalid Credit Card: "" + e.getMessage());
        }

        scanner.close();
    }

    public static boolean isValidCreditCard(String cardNumber) throws InvalidCreditCardException {
        if (cardNumber == null || cardNumber.length() != 16) {
            throw new InvalidCreditCardException(""Credit card number must be exactly 16 digits long."");
        }

        return true;
    }
}
-------------
4. Multi-threading:
class MultithreadingDemo extends Thread {
    public void run() {
        try {
            // Displaying the thread name that is running
            System.out.println(
                ""Thread "" + Thread.currentThread().getName()
                + "" is running"");
        } catch (Exception e) {
            // Throwing an exception
            System.out.println(""Exception is caught"");
        }
    }
}

public class exp7 {
    public static void main(String[] args) {
        int n = 8; // Number of threads
        for (int i = 0; i < n; i++) {
            MultithreadingDemo object = new MultithreadingDemo();
            object.start(); // Note the lowercase 'start' method
        }
    }
}
--------------------
5. Interfaces:
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

// Define the Product interface
interface Product {
    String getName();
    double getPrice();
}

// Implement the Product interface for Electronics
class Electronics implements Product {
    private String name;
    private double price;

    public Electronics(String name, double price) {
        this.name = name;
        this.price = price;
    }

    @Override
    public String getName() {
        return name;
    }

    @Override
    public double getPrice() {
        return price;
    }
}

// Implement the Product interface for Clothing
class Clothing implements Product {
    private String name;
    private double price;

    public Clothing(String name, double price) {
        this.name = name;
        this.price = price;
    }

    @Override
    public String getName() {
        return name;
    }

    @Override
    public double getPrice() {
        return price;
    }
}

public class Interface {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        List<Product> shoppingCart = new ArrayList<>();

        while (true) {
            System.out.println(""Select a product category:"");
            System.out.println(""1. Electronics"");
            System.out.println(""2. Clothing"");
            System.out.println(""3. Checkout"");

            int choice = scanner.nextInt();

            if (choice == 1) {
                System.out.print(""Enter electronics name: "");
                String name = scanner.next();
                System.out.print(""Enter price: "");
                double price = scanner.nextDouble();
                shoppingCart.add(new Electronics(name, price));
            } else if (choice == 2) {
                System.out.print(""Enter clothing name: "");
                String name = scanner.next();
                System.out.print(""Enter price: "");
                double price = scanner.nextDouble();
                shoppingCart.add(new Clothing(name, price));
            } else if (choice == 3) {
                break;
            } else {
                System.out.println(""Invalid choice. Please select 1, 2, or 3."");
            }
        }

        double totalCost = calculateTotalCost(shoppingCart);
        System.out.println(""Total cost of items in the shopping cart: $"" + totalCost);

        scanner.close();
    }

    public static double calculateTotalCost(List<Product> shoppingCart) {
        double totalCost = 0.0;
        for (Product item : shoppingCart) {
            totalCost += item.getPrice();
        }
        return totalCost;
    }
}
-------------
6. Multiple Array:
import java.util.Scanner;

public class ECommerceDemo {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int maxSize = 100;
        String[] productNames = new String[maxSize];
        double[] productPrices = new double[maxSize];
        int[] productQuantities = new int[maxSize];
        int cartSize = 0;

        while (true) {
            System.out.println(""E-commerce Management System"");
            System.out.println(""1. Add Product to Cart"");
            System.out.println(""2. View Cart"");
            System.out.println(""3. Calculate Total Cost"");
            System.out.println(""4. Exit"");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character

            switch (choice) {
                case 1:
                    System.out.print(""Enter Product Name: "");
                    String productName = scanner.nextLine();
                    System.out.print(""Enter Product Price: $"");
                    double productPrice = scanner.nextDouble();
                    System.out.print(""Enter Quantity: "");
                    int quantity = scanner.nextInt();

                    productNames[cartSize] = productName;
                    productPrices[cartSize] = productPrice;
                    productQuantities[cartSize] = quantity;
                    cartSize++;
                    break;
                case 2:
                    System.out.println(""Your Shopping Cart:"");
                    for (int i = 0; i < cartSize; i++) {
                        System.out.println(
                            productNames[i] + "" - $"" + productPrices[i] + "" x "" + productQuantities[i]
                        );
                    }
                    break;
                case 3:
                    double totalCost = 0.0;
                    for (int i = 0; i < cartSize; i++) {
                        totalCost += productPrices[i] * productQuantities[i];
                    }
                    System.out.println(""Total Cost: $"" + totalCost);
                    break;
                case 4:
                    System.out.println(""Thank you for using our e-commerce system."");
                    scanner.close();
                    System.exit(0);
                default:
                    System.out.println(""Invalid choice. Please select a valid option."");
                    break;
            }
        }
    }
}
--------------------------------------------------------------------------------------------------------------
Packages:
//packages
//Main.java
import ecommerce.Product;
import ecommerce.Order;
import ecommerce.ShoppingCart;
 
import java.util.Scanner;
 
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ShoppingCart cart = new ShoppingCart();
 
        while (true) {
            System.out.print(""Enter product ID (0 to finish): "");
            int productId = scanner.nextInt();
            if (productId == 0) {
                break;
            }
 
            System.out.print(""Enter product name: "");
            scanner.nextLine(); // Consume the newline character
            String productName = scanner.nextLine();
 
            System.out.print(""Enter product price: "");
            double productPrice = scanner.nextDouble();
 
            System.out.print(""Enter quantity: "");
            int quantity = scanner.nextInt();
 
            Product product = new Product(productId, productName, productPrice);
            cart.addProduct(product, quantity);
        }
 
        // Display the contents of the shopping cart
        System.out.println(""Shopping Cart Contents:"");
        cart.displayCart();
 
        // Create an order from the shopping cart
        Order order = new Order(cart);
 
        // Display the order details
        System.out.println(""\nOrder Details:"");
        order.displayOrder();
 
        scanner. Close();
    }
}
 
//ecommerce/Product.java
package ecommerce;
 
public class Product {
    private int id;
    private String name;
    private double price;
 
    public Product(int id, String name, double price) {
        this.id = id;
        this.name = name;
        this.price = price;
    }
 
    // Getters and setters for id, name, and price
    public String toString() {
        return name + "" (ID: "" + id + "", Price: Rs. "" + price + "")"";
    }
}
 
//ecommerce/Order.java
package ecommerce;
 
import java.util.Date;
 
public class Order {
    private ShoppingCart cart;
    private Date orderDate;
 
    public Order(ShoppingCart cart) {
        this.cart = cart;
        this.orderDate = new Date();
    }
 
    public void displayOrder() {
        System.out.print(""Order Date: "" + orderDate);
        System.out.println(""\n"");
        System.out.println(""Order Items:"");
        cart.displayCart();
    }
}
 
//ecommerce/ShoppingCart.java
package ecommerce;
 
import java.util.HashMap;
import java.util.Map;
 
public class ShoppingCart {
    private Map<Product, Integer> items;
 
    public ShoppingCart() {
        items = new HashMap<>();
    }
 
    public void addProduct(Product product, int quantity) {
        items.put(product, quantity);
    }
 
    public void displayCart() {
        for (Map.Entry<Product, Integer> entry : items.entrySet()) {
            Product product = entry.getKey();
            int quantity = entry.getValue();
            System.out.println(product + "" x"" + quantity);
        }
    }
}
--------------------------------------------------------------------------------------------------------------------------
MASTER-----!!!!!
import java.awt.event.*;
import javax.swing.*;
import java.util.Scanner;

// Base class representing a product
class Product {
    private String name;
    private double price;

    public Product(String name, double price) {
        this.name = name;
        this.price = price;
    }

    public String getName() {
        return name;
    }

    public double getPrice() {
        return price;
    }

    public void displayProductInfo() {
        System.out.println(""Product: "" + name);
        System.out.println(""Price: $"" + price);
    }
}

// Subclass representing electronic products
class Electronics extends Product {
    private String brand;

    public Electronics(String name, double price, String brand) {
        super(name, price);
        this.brand = brand;
    }

    public String getBrand() {
        return brand;
    }

    @Override
    public void displayProductInfo() {
        super.displayProductInfo();
        System.out.println(""Brand: "" + brand);
    }
}

// Subclass representing laptops
class Laptop extends Electronics {
    private String processor;

    public Laptop(String name, double price, String brand, String processor) {
        super(name, price, brand);
        this.processor = processor;
    }

    public String getProcessor() {
        return processor;
    }

    @Override
    public void displayProductInfo() {
        super.displayProductInfo();
        System.out.println(""Processor: "" + processor);
    }
}

class InvalidCreditCardException extends Exception {
    public InvalidCreditCardException(String message) {
        super(message);
    }
}

class CCValidate {
    public static boolean isValidCreditCard(String cardNumber) throws InvalidCreditCardException {
        if (cardNumber == null || cardNumber.length() != 16) {
            throw new InvalidCreditCardException(""Credit card number must be exactly 16 digits long."");
        }
        return true;
    }
}

class MultithreadingDemo extends Thread {
    public void run() {
        try {
            System.out.println(
                ""Thread "" + Thread.currentThread().getName() + "" is running""
            );
        } catch (Exception e) {
            System.out.println(""Exception is caught"");
        }
    }
}

// Define the Product interface
interface ProductInterface {
    String getName();
    double getPrice();
}

// Implement the Product interface for Electronics
class ElectronicsInterface implements ProductInterface {
    private String name;
    private double price;

    public ElectronicsInterface(String name, double price) {
        this.name = name;
        this.price = price;
    }

    @Override
    public String getName() {
        return name;
    }

    @Override
    public double getPrice() {
        return price;
    }
}

// Implement the Product interface for Clothing
class ClothingInterface implements ProductInterface {
    private String name;
    private double price;

    public ClothingInterface(String name, double price) {
        this.name = name;
        this.price = price;
    }

    @Override
    public String getName() {
        return name;
    }

    @Override
    public double getPrice() {
        return price;
    }
}

public class Master {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int maxSize = 100;
        String[] productNames = new String[maxSize];
        double[] productPrices = new double[maxSize];
        int[] productQuantities = new int[maxSize];
        int cartSize = 0;

        JFrame f = new JFrame(""CheckBox Demo"");
        JLabel label = new JLabel();
        label.setHorizontalAlignment(JLabel.CENTER);
        label.setSize(400, 100);
        JCheckBox checkbox1 = new JCheckBox(""C++"");
        checkbox1.setBounds(150, 100, 50, 50);
        JCheckBox checkbox2 = new JCheckBox(""Java"");
        checkbox2.setBounds(150, 150, 50, 50);
        f.add(checkbox1);
        f.add(checkbox2);
        f.add(label);

        checkbox1.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent e) {
                if (checkbox1.isSelected()) {
                    label.setText(""Programming language Selected: C++"");
                }
            }
        });

        checkbox2.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent e) {
                if (checkbox2.isSelected()) {
                    label.setText(""Programming language Selected: Java"");
                }
            }
        });

        f.setSize(400, 400);
        f.setLayout(null);
        f.setVisible(true);

        while (true) {
            System.out.println(""E-commerce Management System"");
            System.out.println(""1. Add Product to Cart"");
            System.out.println(""2. View Cart"");
            System.out.println(""3. Calculate Total Cost"");
            System.out.println(""4. Exit"");

            int choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1:
                    System.out.print(""Enter Product Name: "");
                    String productName = scanner.nextLine();
                    System.out.print(""Enter Product Price: $"");
                    double productPrice = scanner.nextDouble();
                    System.out.print(""Enter Quantity: "");
                    int quantity = scanner.nextInt();

                    productNames[cartSize] = productName;
                    productPrices[cartSize] = productPrice;
                    productQuantities[cartSize] = quantity;
                    cartSize++;
                    break;
                case 2:
                    System.out.println(""Your Shopping Cart:"");
                    for (int i = 0; i < cartSize; i++) {
                        System.out.println(
                            productNames[i] + "" - $"" + productPrices[i] + "" x "" + productQuantities[i]
                        );
                    }
                    break;
                case 3:
                    double totalCost = 0.0;
                    for (int i = 0; i < cartSize; i++) {
                        totalCost += productPrices[i] * productQuantities[i];
                    }
                    System.out.println(""Total Cost: $"" + totalCost);
                    break;
                case 4:
                    System.out.println(""Thank you for using our e-commerce system."");
                    scanner.close();
                    System.exit(0);
                default:
                    System.out.println(""Invalid choice. Please select a valid option."");
                    break;
            }
        }
    }
}"
YN0kAJCN,Untitled,Will1022,MySQL,Wednesday 1st of November 2023 09:51:12 AM CDT,"INSERT INTO `player_vehicles` (`id`, `license`, `citizenid`, `vehicle`, `hash`, `mods`, `plate`, `fakeplate`, `garage`, `fuel`, `engine`, `body`, `state`, `depotprice`, `drivingdistance`, `status`, `balance`, `paymentamount`, `paymentsleft`, `financetime`, `type`, `job`) VALUES (11, 'license:f8065ba5dea1c7fb856b9f137e0c4fe5c4be02e9', 'WYF10264', 'evo10', '1944777953', '{""modRoof"":-1,""oilLevel"":4.76596940834568,""tankHealth"":4000.2369900714818,""model"":1944777953,""modHorns"":-1,""modRightFender"":-1,""modFrontWheels"":206,""headlightColor"":255,""modCustomTiresR"":false,""modSeats"":-1,""engineHealth"":997.6762628136975,""modTrimA"":-1,""modDial"":-1,""modArmor"":-1,""xenonColor"":255,""modDashboard"":-1,""modKit17"":-1,""modAPlate"":-1,""modTurbo"":false,""interiorColor"":0,""modSteeringWheel"":-1,""modEngineBlock"":-1,""neonEnabled"":[1,1,1,1],""modSpeakers"":-1,""modXenon"":1,""modOrnaments"":-1,""modArchCover"":-1,""modKit19"":-1,""modSpoilers"":-1,""modDoorSpeaker"":-1,""dashboardColor"":0,""modKit47"":-1,""color2"":148,""modSuspension"":3,""doorStatus"":{""1"":false,""2"":false,""3"":false,""4"":false,""5"":false,""0"":false},""modRearBumper"":-1,""tireHealth"":{""1"":1000.0,""2"":1000.0,""3"":1000.0,""0"":1000.0},""modAerials"":-1,""modAirFilter"":-1,""modBrakes"":-1,""neonColor"":[0,255,140],""windowStatus"":{""1"":true,""2"":true,""3"":true,""4"":true,""5"":true,""6"":true,""7"":true,""0"":true},""dirtLevel"":0.0,""modVanityPlate"":-1,""modFrame"":-1,""modStruts"":-1,""modWindows"":-1,""tireBurstState"":{""1"":false,""2"":false,""3"":false,""4"":false,""5"":false,""0"":false},""pearlescentColor"":5,""modTank"":-1,""modHydrolic"":-1,""bodyHealth"":999.2649192831461,""modGrille"":-1,""wheelSize"":0.70572245121002,""wheelWidth"":0.63469725847244,""modTransmission"":-1,""tyreSmokeColor"":[255,255,255],""wheels"":11,""modTrimB"":-1,""modPlateHolder"":-1,""modCustomTiresF"":false,""fuelLevel"":50.04267878762973,""modSideSkirt"":-1,""windowTint"":3,""liveryRoof"":-1,""plateIndex"":1,""modTrunk"":-1,""tireBurstCompletely"":{""1"":false,""2"":false,""3"":false,""4"":false,""5"":false,""0"":false},""extras"":{""1"":false,""5"":true,""3"":true,""2"":true},""modExhaust"":-1,""modKit21"":-1,""color1"":120,""modEngine"":-1,""modFender"":-1,""modHood"":-1,""wheelColor"":149,""modLivery"":-1,""modBackWheels"":-1,""modFrontBumper"":-1,""plate"":""8HY488VY"",""modKit49"":-1,""modSmokeEnabled"":false,""modShifterLeavers"":-1}', '8HY488VY', NULL, 'pillboxgarage', 50, 998, 1000, 1, 0, 350310, NULL, 0, 0, 0, 0, 'car', 'civ');
"
ndqwvmr4,school management,HKSinha5100,Python,Wednesday 1st of November 2023 09:49:32 AM CDT,"import mysql.connector as a

con=a.connect (host='localhost', user='root', database='test', passwd='rema')

def Addst (): 
    n=input (""Student name:"") 
    cl=input (""Class:"")
    r=int (input (""Roll no:"") )
    a=input (""Address:"")
    ph=input (""Phone:"")
    data= (n,cl,r,a,ph)
    sql='insert into student values (ts, s, ts, ts, ts)'
    c = con.cursor ()
    c.execute (sql,data)
    con.commit ()
    print (""Data entered successfully"")
    print ("""")
    main()
def RemoveSt ():
    cl=input (""Class:"")
    r=int (input (""Roll no: ""))
    data= (cl,r)
    sql='delete from student where class=ts and roll=%s'
    c=con.cursor ()
    c.execute (sql, data)
    con.commit ()
    print (""Data Updated"")
    print ("""")
    main ()
def Displayst () :
    cl=input (""Class:"")
    data= (cl,) 
    sql='select * from student where class=ts'
    c=con.cursor ()
    c.execute (sql, data)
    d=c.fetchall ()
    for i in d:
    	print (""Name:"",i [0])
    	print (""Class: "" ,i[1])
    	print (""Roll no:"",i [2])
    	print (""Address:"",i[3])
    	print (""Phone : "",i[4] )
    	print ("""")
    	print ("""")
    main ()
def AddT () :
    tcode=int (input (""TCode: ""))
    n=input (""Teacher name:"")
    s=int (input (""Salary: ""))
    a=input(""Address :"")
    ph=input (""Phone: "")
    data= (tcode,n,s,a,ph)
    sql='insert into teacher values (ts, ts, ts,ts,ts)
    c=con.cursor ()
    c.execute (sql, data)
    con.comnit ()
    print (""Data entered successfully"")
    print ("" "")
    main ()
def RemoveT ():
    n=input (""Teacher:"")
    tcode=int (input (""Tcode:""))
    data= (n, tcode)
    sql=' delete from teacher where name=$s and tcode=ts'
    c=Con.cursor()
    c.execute (sql, data)
    con.commit ()
    print (""Data Updated"")
    print ("""")
    main()
def UpdateSal ():
    n=input (""Teacher: "")
    tcode=int (input (""Tcode:""))
    salary=int (input (""Salary:""))
    data= (n, tcode)
    sql='update teacher set salary=ts where name=ts and tcode=ts'
    c=con.cursor ()
    c.execute (sql, data)
    con.commit ()
    print (""Data Update"")
    print ("" "")
    main ()
def DisplayT () :
    sql='select * from teacher'
    c=con. cursor ()
    C.execute (sql)
    d=c. fetchall ()
    for i in d:
        print (""Tcode:"", i(0])
        print (""Name:"",i[1])
        print (""Salary: "",i[2])
        print (""Address: "",i [3])
        print (""Phone: "",i(4] )
        print ("" "")
     print ("" "")
     main ()

def ClAttd () :
    d=input (""Class :"")
    clt=input (""Class teacher:"")
    t=int (input (""Class strenght:""))
    d=input (""Date:"")
    ab=int (input (""No of absentees: ""))
    data= (d, clt, t,d, ab)
    sql='insert into ClAttendance values (%s,ts, ts, ts, ts)
    c=Con. cursor ()
    c.execute (sql, data)
    con.commit ()
    print (""Data entered successfully"")
    print ("""")
    main ()
def DisplayClAttd () :
    sql='select * from ClAttendance'
    CHCon. cursor ()
    c.execute (sql)
    d=c. fetchall ()
    for i in d:
        print (""Class:"", i [0])
        print (""Class teacher:"",i(1])
        print (""Total St:"",i(2])
        print (""Date:"",i (3])
        print (""Absentees: "",i [4])
        print ("""")
    print ("" "")
    main ()
def TAttd () :
    n=input (""Name:"")
    d=input (""Date:"")
    a=input (""Attendance:"")
    data= (n,d, a)
    sql='insert into tattendance values (%s, ts, %s)
    c=con.cursor()
    C.execute (sql, data)
    con.commit ()
    print (""Data entered successfully"")
    print ("""")
    main ()
def DisplayTAttd () :
    sql='select * from tattendance
    cHcon. cursor ()
    c.execute (sql)
    d=c.fetchall ()
    for i in d:
        print (""Name:"",i[0])
        print (""Date:"",i[1])
        print (""Attendance:"",i (2])
        print ("""")
    print ("""")
    main ()
def UpdateFees ():
    cl=input (""Class :"")
    m=input (""Monthly :"")
    b=input (""BusFee: "")
    sc=input (""ScFee:"")
    te=input (""TechFee: "")
    t=input (""Total:"")
    data= (cl,)
    sql='update FeeStructure set monthly=ts, BusFee=ts, ScFee=ts,
    TechFee=ts, Total=%s
    c.execute (sql, data)
    con.commit ()
    print (""Data Updated"")
    print ("""")
    main ()
def DisplayFees ():
    sql='select * from FeeStructure'
    c=con. cursor ()
    c.execute (sql)
    d=c.fetchall ()
    for i in d:
        print (""Class : "",i[0])
        print (""Monthly:"",i [1] )
        print (""BusFee: "",i[2])
        print (""ScFee: "",i[3] )
        print (""TechFee:"",i[4])
        print (""Total:"",i[5] )
        print ("""")
    print ("""")
    main ()
def AddBook () :
    bid=int (input (""Book id: ""))
    t=input (""Title: "")
    a=input (""Author:"")
    p=input (""Publisher:"")
    g=input (""Genre :"")
    data= (bid, t,a,P g)
    sql='insert into library values (%s, %s, ts, ts, ts)'
    CHCon.cursor ()
    c.execute (sql,data)con.commit ()print (""Data entered successfully"" )print ("""")main ()
def RemoveB ():
    t=input (""Title:"")
    bid=int (input (""Book id:""))
    data=(t,bid)
    sql=' delete from library where t=ts and bid=ts'
    C=Con. cursor )
    c.execute (sql,data)
    con.commit ()
    print (""Data Updated"")
    print (n '')
    main ()
def DisplayB () :
    sql='select * from library'
    c=con.cursor ()
    c.execute (sql)
    d=c.fetchall ()
    for i in d:
        print (""Bid: "",i [O])
        print (""Title:"", i[1])
        print (""Author: "",i(2])
        print (""Publisher:"",i[3] )
        print ("" Genre:"",i[4])
        print ("""")
    print ("""")
    main ()
def main () :
    ch='y""
    while ch in ('y', 'Y']:
        print (""Pitts Modern School"")
        print (""1.Student"")
        print (""2.Teacher"")
        print (""3.C1Attendance"")
        print (""4. TAttendance"")
        print (""5. FeeStructure"")
        print (""6.Library"")
        table=int (input (""enter table no:""))
        print ("""")
        if table==1:
            op='y'
            while op in ('y', 'Y']:
                print (""1.Add student"")
                print (""2.Remove student"")
                print (""3. Display st detail"")
                task=int (input (""enter task no :""))
                if task==1:
                    AddSt ()
                elif task=-2:
                    RemoveSt ()
                elif task==3:
                    DisplaySt ()
                else:
                    op='y'
                    while op in ['y','Y']:
                        print (""1.Teacher attendance"")
                        print (""2 .Display TAttd details"")
                        task=int (input (""enter task no:""))
                        if task==l:
                            TAttd ()
                        elif task==2:
                            DisplayTAttd ()
                        else:
                            print (""Enter Valid Choice!!"")
                op=input (""Continue in this table (y/n):"")
                elif table==5:
                op='y'
                while op in ('y', 'Y']:
                    print (""1.Update Fees"")
                    print (""2.Display Fees details"")
                    task=int (input (""enter task no:""))
                    if task==1:
                        UpdateFees ()
                    elif task==2:
                        DisplayFees ()
                    else:
                        op='y'
                        print (""Enter Valid Choice!!"")
                        op=input (""Continue in this table (y/n) :"")
                elif tabl e==6 :
                    while op in ['y', 'Y']:
                        print (""1.Add Book "")
                        print (""2.Remove Book"")
                        print (""3.Display Book"")
                        task=int (input (""enter task no:""))
                        if task==1:
                            AddBook ()
                        elif task=-2 :
                            RemoveB ()
                        elif task==3:
                            DisplayB ()
                        else:
                            print (""Enter Valid Choice!!"")
                            op=input (""Continue in this table (y/n) :"")
                            print (""ENTER VALID CHOICE!!!"")
                            ch=input (""Do you want to continue (y/n):"")
"
EvKV9BqU,Binary Tree (Pre-order traversal),BlackWolfy,C++,Wednesday 1st of November 2023 09:34:16 AM CDT,"#include <iostream>

struct TreeNode {
    int data;           //node value
    TreeNode* left;     //pointer to left child
    TreeNode* right;    //pointer to right child

    TreeNode(int value) {   //constructor for initializing a node
        data = value;
        left = nullptr;
        right = nullptr;
    }
};
//insert nodes into tree
void insert(TreeNode*& root, int value) {
    if (root == nullptr) {
        root = new TreeNode(value);
    }
    else if (value < root->data) {
        insert(root->left, value);
    }
    else {
        insert(root->right, value);
    }
}
//Pre-order traversal - you start at the root node and then you visit the left subtree first and then the right
void printPreOrder(TreeNode* root) {
    if (root != nullptr) {
        std::cout << root->data << "" "";
        printPreOrder(root->left);
        printPreOrder(root->right);
    }
}
int main()
{
    TreeNode* root = nullptr;
    int n;
    std::cout << ""Enter the number of nodes you will insert: "";
    std::cin >> n;
    for (int i = 0; i < n; i++) {
        int value;
        std::cout << ""Enter a value: "";
        std::cin >> value;
        insert(root, value);
    }
    printPreOrder(root);
}"
zC61cq2f,News Nov1 23,Newscaster_Ned,Email,Wednesday 1st of November 2023 09:22:02 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

N‎e‎w‎s‎c‎a‎s‎t‎e‎r‎ ‎N‎e‎d‎ ‎h‎e‎r‎e‎.‎ ‎H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎

R‎e‎d‎ ‎L‎i‎g‎h‎t‎ ‎D‎i‎s‎t‎r‎i‎c‎t‎ ‎E‎r‎u‎p‎t‎s‎ ‎i‎n‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎w‎i‎t‎h‎ ‎I‎n‎f‎l‎u‎x‎ ‎o‎f‎ ‎V‎e‎n‎e‎z‎u‎e‎l‎a‎n‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎P‎r‎o‎s‎t‎i‎t‎u‎t‎e‎s‎
O‎f‎f‎e‎r‎i‎n‎g‎ ‎m‎o‎n‎e‎y‎ ‎t‎o‎ ‎a‎ ‎s‎t‎r‎e‎e‎t‎ ‎p‎r‎o‎s‎t‎i‎t‎u‎t‎e‎ ‎-‎ ‎s‎t‎o‎c‎k‎ ‎p‎h‎o‎t‎o‎
A‎ ‎w‎h‎o‎l‎e‎ ‎n‎e‎w‎ ‎r‎e‎d‎ ‎l‎i‎g‎h‎t‎ ‎d‎i‎s‎t‎r‎i‎c‎t‎ ‎h‎a‎s‎ ‎e‎r‎u‎p‎t‎e‎d‎ ‎i‎n‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎C‎i‎t‎y‎ ‎w‎i‎t‎h‎ ‎a‎ ‎m‎a‎s‎s‎ ‎i‎n‎f‎l‎u‎x‎ ‎o‎f‎ ‎V‎e‎n‎e‎z‎u‎e‎l‎a‎n‎ ‎m‎i‎g‎r‎a‎n‎t‎ ‎w‎o‎m‎e‎n‎ ‎w‎o‎r‎k‎i‎n‎g‎ ‎a‎s‎ ‎p‎r‎o‎s‎t‎i‎t‎u‎t‎e‎s‎.‎ ‎

A‎ ‎s‎a‎f‎e‎ ‎i‎s‎ ‎o‎n‎ ‎d‎i‎s‎p‎l‎a‎y‎ ‎a‎t‎ ‎W‎a‎r‎m‎a‎n‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎ ‎O‎c‎t‎o‎b‎e‎r‎ ‎1‎3‎,‎ ‎2‎0‎0‎8‎ ‎i‎n‎ ‎S‎a‎n‎ ‎F‎r‎a‎n‎c‎i‎s‎c‎o‎,‎ ‎C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎.‎ ‎A‎s‎ ‎b‎a‎n‎k‎s‎ ‎a‎c‎r‎o‎s‎s‎ ‎t‎h‎e‎ ‎U‎.‎S‎.‎ ‎f‎a‎i‎l‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎e‎c‎o‎n‎o‎m‎y‎ ‎f‎a‎l‎t‎e‎r‎s‎,‎ ‎s‎a‎l‎e‎s‎ ‎o‎f‎ ‎s‎a‎f‎e‎s‎ ‎a‎r‎e‎ ‎s‎u‎r‎g‎i‎n‎g‎ ‎a‎s‎ ‎p‎e‎o‎p‎l‎e‎ ‎l‎o‎o‎k‎ ‎f‎o‎r‎ ‎a‎n‎ ‎a‎l‎t‎e‎r‎n‎a‎t‎i‎v‎e‎ ‎p‎l‎a‎c‎e‎ ‎t‎o‎ ‎k‎e‎e‎p‎ ‎t‎h‎e‎i‎r‎ ‎m‎o‎n‎e‎y‎ ‎a‎n‎d‎ ‎v‎a‎l‎u‎a‎b‎l‎e‎s‎.‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎J‎u‎s‎t‎i‎n‎ ‎S‎u‎l‎l‎i‎v‎a‎n‎/‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎)‎
B‎a‎n‎k‎s‎ ‎C‎l‎o‎s‎i‎n‎g‎ ‎A‎c‎r‎o‎s‎s‎ ‎S‎a‎n‎ ‎F‎r‎a‎n‎c‎i‎s‎c‎o‎ ‎A‎r‎e‎a‎,‎ ‎O‎f‎t‎e‎n‎ ‎W‎i‎t‎h‎o‎u‎t‎ ‎W‎a‎r‎n‎i‎n‎g‎
9‎5‎
F‎a‎r‎a‎g‎e‎:‎ ‎'‎H‎a‎m‎a‎s‎ ‎S‎y‎m‎p‎a‎t‎h‎i‎s‎e‎r‎s‎'‎ ‎W‎i‎l‎l‎ ‎I‎n‎f‎i‎l‎t‎r‎a‎t‎e‎ ‎a‎s‎ ‎R‎e‎f‎u‎g‎e‎e‎s‎ ‎t‎o‎ ‎T‎h‎e‎ ‎W‎e‎s‎t‎
F‎a‎r‎a‎g‎e‎:‎ ‎'‎H‎a‎m‎a‎s‎ ‎S‎y‎m‎p‎a‎t‎h‎i‎s‎e‎r‎s‎'‎ ‎W‎i‎l‎l‎ ‎I‎n‎f‎i‎l‎t‎r‎a‎t‎e‎ ‎a‎s‎ ‎R‎e‎f‎u‎g‎e‎e‎s‎ ‎t‎o‎ ‎T‎h‎e‎ ‎W‎e‎s‎t‎
1‎5‎6‎
R‎e‎d‎ ‎L‎i‎g‎h‎t‎ ‎D‎i‎s‎t‎r‎i‎c‎t‎ ‎E‎r‎u‎p‎t‎s‎ ‎i‎n‎ ‎N‎Y‎C‎ ‎w‎i‎t‎h‎ ‎I‎n‎f‎l‎u‎x‎ ‎o‎f‎ ‎V‎e‎n‎e‎z‎u‎e‎l‎a‎n‎ ‎P‎r‎o‎s‎t‎i‎t‎u‎t‎e‎s‎
R‎e‎d‎ ‎L‎i‎g‎h‎t‎ ‎D‎i‎s‎t‎r‎i‎c‎t‎ ‎E‎r‎u‎p‎t‎s‎ ‎i‎n‎ ‎N‎Y‎C‎ ‎w‎i‎t‎h‎ ‎I‎n‎f‎l‎u‎x‎ ‎o‎f‎ ‎V‎e‎n‎e‎z‎u‎e‎l‎a‎n‎ ‎P‎r‎o‎s‎t‎i‎t‎u‎t‎e‎s‎
7‎9‎9‎
M‎a‎y‎o‎r‎ ‎E‎r‎i‎c‎ ‎A‎d‎a‎m‎s‎ ‎W‎a‎r‎n‎s‎ ‎A‎g‎a‎i‎n‎:‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎I‎m‎m‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎i‎s‎ ‎'‎D‎e‎v‎a‎s‎t‎a‎t‎i‎n‎g‎'‎ ‎N‎Y‎C‎
M‎a‎y‎o‎r‎ ‎E‎r‎i‎c‎ ‎A‎d‎a‎m‎s‎ ‎W‎a‎r‎n‎s‎ ‎A‎g‎a‎i‎n‎:‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎I‎m‎m‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎i‎s‎ ‎'‎D‎e‎v‎a‎s‎t‎a‎t‎i‎n‎g‎'‎ ‎N‎Y‎C‎
1‎,‎4‎4‎3‎
I‎r‎a‎n‎-‎B‎a‎c‎k‎e‎d‎ ‎H‎o‎u‎t‎h‎i‎s‎ ‎'‎D‎e‎c‎l‎a‎r‎e‎ ‎W‎a‎r‎'‎ ‎o‎n‎ ‎I‎s‎r‎a‎e‎l‎ ‎A‎f‎t‎e‎r‎ ‎A‎l‎l‎e‎g‎e‎d‎ ‎S‎a‎u‎d‎i‎ ‎K‎i‎l‎l‎i‎n‎g‎s‎
I‎r‎a‎n‎-‎B‎a‎c‎k‎e‎d‎ ‎H‎o‎u‎t‎h‎i‎s‎ ‎'‎D‎e‎c‎l‎a‎r‎e‎ ‎W‎a‎r‎'‎ ‎o‎n‎ ‎I‎s‎r‎a‎e‎l‎ ‎A‎f‎t‎e‎r‎ ‎A‎l‎l‎e‎g‎e‎d‎ ‎S‎a‎u‎d‎i‎ ‎K‎i‎l‎l‎i‎n‎g‎s‎
7‎,‎9‎7‎0‎
C‎O‎ ‎S‎e‎c‎S‎t‎a‎t‎e‎ ‎G‎r‎i‎s‎w‎o‎l‎d‎:‎ ‎'‎R‎e‎a‎l‎ ‎Q‎u‎e‎s‎t‎i‎o‎n‎s‎'‎ ‎I‎f‎ ‎C‎o‎n‎s‎t‎i‎t‎u‎t‎i‎o‎n‎ ‎D‎i‎s‎q‎u‎a‎l‎i‎f‎i‎e‎s‎ ‎T‎r‎u‎m‎p‎
C‎O‎ ‎S‎e‎c‎S‎t‎a‎t‎e‎ ‎G‎r‎i‎s‎w‎o‎l‎d‎:‎ ‎'‎R‎e‎a‎l‎ ‎Q‎u‎e‎s‎t‎i‎o‎n‎s‎'‎ ‎I‎f‎ ‎C‎o‎n‎s‎t‎i‎t‎u‎t‎i‎o‎n‎ ‎D‎i‎s‎q‎u‎a‎l‎i‎f‎i‎e‎s‎ ‎T‎r‎u‎m‎p‎
6‎,‎2‎9‎4‎
H‎u‎n‎d‎r‎e‎d‎s‎ ‎o‎f‎ ‎A‎n‎t‎i‎-‎I‎s‎r‎a‎e‎l‎ ‎A‎c‎t‎i‎v‎i‎s‎t‎s‎ ‎O‎c‎c‎u‎p‎y‎ ‎L‎o‎n‎d‎o‎n‎'‎s‎ ‎L‎i‎v‎e‎r‎p‎o‎o‎l‎ ‎S‎t‎r‎e‎e‎t‎ ‎S‎t‎a‎t‎i‎o‎n‎
H‎u‎n‎d‎r‎e‎d‎s‎ ‎o‎f‎ ‎A‎n‎t‎i‎-‎I‎s‎r‎a‎e‎l‎ ‎A‎c‎t‎i‎v‎i‎s‎t‎s‎ ‎O‎c‎c‎u‎p‎y‎ ‎L‎o‎n‎d‎o‎n‎'‎s‎ ‎L‎i‎v‎e‎r‎p‎o‎o‎l‎ ‎S‎t‎r‎e‎e‎t‎ ‎S‎t‎a‎t‎i‎o‎n‎
1‎1‎3‎
M‎a‎y‎o‎r‎k‎a‎s‎ ‎W‎i‎l‎l‎ ‎N‎o‎t‎ ‎C‎o‎m‎m‎i‎t‎ ‎t‎o‎ ‎D‎e‎p‎o‎r‎t‎i‎n‎g‎ ‎P‎r‎o‎-‎H‎a‎m‎a‎s‎ ‎F‎o‎r‎e‎i‎g‎n‎ ‎S‎t‎u‎d‎e‎n‎t‎s‎ ‎f‎r‎o‎m‎ ‎U‎.‎S‎.‎
M‎a‎y‎o‎r‎k‎a‎s‎ ‎W‎i‎l‎l‎ ‎N‎o‎t‎ ‎C‎o‎m‎m‎i‎t‎ ‎t‎o‎ ‎D‎e‎p‎o‎r‎t‎i‎n‎g‎ ‎P‎r‎o‎-‎H‎a‎m‎a‎s‎ ‎F‎o‎r‎e‎i‎g‎n‎ ‎S‎t‎u‎d‎e‎n‎t‎s‎ ‎f‎r‎o‎m‎ ‎U‎.‎S‎.‎
7‎5‎1‎
D‎e‎m‎s‎ ‎'‎S‎t‎e‎a‎l‎'‎ ‎C‎u‎r‎t‎a‎i‎n‎:‎ ‎T‎r‎u‎m‎p‎ ‎T‎e‎a‎m‎ ‎A‎r‎r‎i‎v‎e‎s‎ ‎i‎n‎ ‎C‎O‎ ‎t‎o‎ ‎F‎i‎g‎h‎t‎
D‎e‎m‎s‎ ‎'‎S‎t‎e‎a‎l‎'‎ ‎C‎u‎r‎t‎a‎i‎n‎:‎ ‎T‎r‎u‎m‎p‎ ‎T‎e‎a‎m‎ ‎A‎r‎r‎i‎v‎e‎s‎ ‎i‎n‎ ‎C‎O‎ ‎t‎o‎ ‎F‎i‎g‎h‎t‎
8‎,‎1‎1‎7‎
A‎n‎t‎o‎n‎y‎ ‎B‎l‎i‎n‎k‎e‎n‎ ‎D‎r‎e‎s‎s‎e‎s‎ ‎S‎o‎n‎ ‎a‎s‎ ‎V‎o‎l‎o‎d‎y‎m‎y‎r‎ ‎Z‎e‎l‎e‎n‎s‎k‎y‎ ‎f‎o‎r‎ ‎H‎a‎l‎l‎o‎w‎e‎e‎n‎
A‎n‎t‎o‎n‎y‎ ‎B‎l‎i‎n‎k‎e‎n‎ ‎D‎r‎e‎s‎s‎e‎s‎ ‎S‎o‎n‎ ‎a‎s‎ ‎V‎o‎l‎o‎d‎y‎m‎y‎r‎ ‎Z‎e‎l‎e‎n‎s‎k‎y‎ ‎f‎o‎r‎ ‎H‎a‎l‎l‎o‎w‎e‎e‎n‎

C‎o‎p‎s‎ ‎U‎s‎e‎ ‎D‎N‎A‎ ‎T‎e‎c‎h‎n‎o‎l‎o‎g‎y‎ ‎t‎o‎ ‎C‎r‎e‎a‎t‎e‎ ‎D‎i‎g‎i‎t‎a‎l‎ ‎I‎m‎a‎g‎e‎ ‎o‎f‎ ‎P‎r‎e‎h‎i‎s‎t‎o‎r‎i‎c‎ ‎A‎p‎e‎ ‎W‎h‎o‎ ‎K‎i‎l‎l‎e‎d‎ ‎W‎h‎i‎t‎e‎ ‎W‎o‎m‎a‎n‎ ‎i‎n‎ ‎S‎o‎u‎t‎h‎ ‎S‎a‎l‎t‎ ‎L‎a‎k‎e‎ ‎C‎i‎t‎y‎.‎

J‎u‎s‎t‎ ‎l‎e‎t‎t‎i‎n‎g‎ ‎y‎o‎u‎ ‎k‎n‎o‎w‎,‎ ‎t‎h‎e‎y‎ ‎i‎n‎c‎r‎e‎a‎s‎e‎d‎ ‎t‎h‎e‎ ‎r‎e‎w‎a‎r‎d‎ ‎t‎o‎ ‎$‎2‎5‎K‎.‎


M‎o‎n‎k‎e‎y‎m‎a‎n‎ ‎a‎n‎d‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎i‎n‎ ‎A‎l‎e‎x‎a‎n‎d‎r‎i‎a‎ ‎H‎e‎a‎t‎h‎ ‎f‎o‎r‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎W‎h‎i‎t‎e‎ ‎S‎t‎e‎p‎d‎a‎d‎.‎


H‎a‎r‎r‎i‎s‎b‎u‎r‎g‎:‎ ‎N‎e‎g‎r‎o‎ ‎S‎p‎r‎a‎y‎s‎ ‎B‎o‎i‎l‎i‎n‎g‎ ‎W‎a‎t‎e‎r‎ ‎o‎n‎ ‎M‎a‎n‎ ‎w‎i‎t‎h‎ ‎C‎e‎r‎e‎b‎r‎a‎l‎ ‎P‎a‎l‎s‎y‎.‎


N‎e‎g‎r‎o‎ ‎P‎i‎m‎p‎ ‎G‎e‎t‎s‎ ‎4‎7‎2‎ ‎Y‎e‎a‎r‎s‎ ‎f‎o‎r‎ ‎C‎h‎i‎l‎d‎ ‎S‎e‎x‎ ‎T‎r‎a‎f‎f‎i‎c‎k‎i‎n‎g‎.‎

.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
S‎u‎n‎n‎y‎
6‎1‎°‎
/‎3‎3‎°‎
1‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎1‎ ‎|‎ ‎D‎a‎y‎
6‎1‎°‎
1‎%‎
N‎N‎E‎
1‎0‎
 ‎
m‎p‎h‎
S‎u‎n‎n‎y‎.‎ ‎H‎i‎g‎h‎ ‎6‎1‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
4‎7‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
6‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎4‎3‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
6‎:‎4‎3‎ ‎p‎m‎
W‎e‎d‎ ‎0‎1‎ ‎|‎ ‎N‎i‎g‎h‎t‎
3‎3‎°‎
4‎%‎
E‎N‎E‎
4‎
 ‎
m‎p‎h‎
A‎ ‎c‎l‎e‎a‎r‎ ‎s‎k‎y‎.‎ ‎S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎f‎r‎o‎s‎t‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎ ‎L‎o‎w‎ ‎3‎3‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎l‎i‎g‎h‎t‎ ‎a‎n‎d‎ ‎v‎a‎r‎i‎a‎b‎l‎e‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
7‎5‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
9‎:‎4‎6‎ ‎p‎m‎
W‎a‎n‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
1‎1‎:‎4‎6‎ ‎a‎m‎
T‎h‎u‎ ‎0‎2‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎6‎°‎
/‎4‎8‎°‎
4‎%‎
E‎S‎E‎ ‎5‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎6‎°‎
/‎5‎5‎°‎
5‎%‎
S‎E‎ ‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎0‎°‎
/‎6‎0‎°‎
9‎%‎
S‎S‎E‎ ‎8‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎5‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎1‎°‎
/‎6‎3‎°‎
1‎9‎%‎
S‎ ‎8‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎5‎°‎
/‎6‎3‎°‎
8‎%‎
S‎S‎W‎ ‎1‎4‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎7‎
S‎u‎n‎n‎y‎
8‎5‎°‎
/‎6‎1‎°‎
7‎%‎
S‎W‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎8‎
S‎u‎n‎n‎y‎
8‎6‎°‎
/‎6‎0‎°‎
6‎%‎
S‎S‎W‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎7‎°‎
/‎5‎9‎°‎
4‎%‎
N‎N‎E‎ ‎1‎3‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎0‎°‎
/‎5‎4‎°‎
9‎%‎
N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎1‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎1‎°‎
/‎5‎7‎°‎
3‎9‎%‎
E‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎6‎°‎
/‎6‎1‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎3‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎4‎°‎
/‎5‎9‎°‎
4‎8‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎4‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
6‎7‎°‎
/‎5‎3‎°‎
3‎9‎%‎
N‎N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎5‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎9‎°‎
/‎5‎4‎°‎
3‎9‎%‎
E‎ ‎1‎0‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎H‎o‎l‎i‎d‎a‎y‎ ‎S‎h‎o‎p‎p‎i‎n‎g‎.‎ 👃🏻✡︎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

G‎r‎a‎y‎k‎a‎t‎
G‎r‎a‎y‎k‎a‎t‎ ‎i‎s‎ ‎t‎h‎e‎ ‎o‎n‎l‎i‎n‎e‎ ‎h‎a‎n‎d‎l‎e‎ ‎o‎f‎ ‎a‎n‎ ‎a‎u‎t‎i‎s‎t‎i‎c‎ ‎3‎5‎-‎y‎e‎a‎r‎-‎o‎l‎d‎ ‎m‎a‎n‎c‎h‎i‎l‎d‎ ‎f‎r‎o‎m‎ ‎N‎e‎w‎ ‎Z‎e‎a‎l‎a‎n‎d‎ ‎w‎h‎o‎ ‎w‎a‎n‎d‎e‎r‎e‎d‎ ‎i‎n‎t‎o‎ ‎E‎n‎c‎y‎c‎l‎o‎p‎æ‎d‎i‎a‎ ‎D‎r‎a‎m‎a‎t‎i‎c‎a‎'‎s‎ ‎D‎i‎s‎c‎o‎r‎d‎ ‎s‎e‎r‎v‎e‎r‎ ‎s‎o‎m‎e‎t‎i‎m‎e‎ ‎l‎a‎s‎t‎ ‎t‎h‎u‎r‎s‎d‎a‎y‎ ‎a‎n‎d‎ ‎q‎u‎i‎c‎k‎l‎y‎ ‎p‎r‎o‎v‎e‎d‎ ‎h‎i‎m‎s‎e‎l‎f‎ ‎t‎o‎ ‎b‎e‎ ‎a‎ ‎m‎a‎s‎s‎i‎v‎e‎ ‎l‎o‎l‎c‎o‎w‎.‎ ‎W‎h‎e‎n‎ ‎n‎o‎t‎ ‎s‎c‎r‎e‎a‎m‎i‎n‎g‎ ‎i‎n‎ ‎A‎L‎L‎ ‎C‎A‎P‎S‎ ‎a‎b‎o‎u‎t‎ ‎N‎I‎G‎G‎E‎R‎S‎ ‎o‎n‎ ‎E‎D‎ ‎P‎i‎s‎s‎c‎o‎r‎d‎,‎ ‎G‎a‎y‎k‎a‎t‎ ‎c‎a‎n‎ ‎t‎y‎p‎i‎c‎a‎l‎l‎y‎ ‎b‎e‎ ‎f‎o‎u‎n‎d‎ ‎p‎l‎a‎y‎i‎n‎g‎ ‎G‎e‎n‎s‎h‎i‎n‎ ‎I‎m‎p‎a‎c‎t‎ ‎o‎r‎ ‎C‎S‎:‎G‎O‎ ‎-‎ ‎t‎h‎e‎ ‎l‎a‎t‎t‎e‎r‎ ‎o‎f‎ ‎w‎h‎i‎c‎h‎ ‎h‎e‎ ‎h‎a‎s‎ ‎i‎n‎v‎e‎s‎t‎e‎d‎ ‎a‎ ‎w‎h‎o‎p‎p‎i‎n‎g‎ ‎3‎,‎4‎8‎1‎ ‎h‎o‎u‎r‎s‎ ‎o‎f‎ ‎h‎i‎s‎ ‎m‎i‎s‎e‎r‎a‎b‎l‎e‎ ‎a‎n‎d‎ ‎w‎o‎r‎t‎h‎l‎e‎s‎s‎ ‎l‎i‎f‎e‎ ‎i‎n‎t‎o‎.‎

(‎(‎ ‎N‎I‎G‎G‎E‎R‎ ‎A‎D‎M‎I‎N‎ ‎A‎B‎U‎S‎E‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎A‎l‎r‎i‎g‎h‎t‎ ‎t‎i‎m‎e‎ ‎t‎o‎ ‎s‎e‎e‎ ‎w‎h‎a‎t‎ ‎t‎h‎o‎s‎e‎ ‎q‎u‎e‎e‎r‎s‎ ‎a‎r‎e‎ ‎u‎p‎ ‎t‎o‎.‎ ‎#‎L‎R‎H‎:‎

<‎@‎s‎t‎r‎a‎t‎u‎m‎>‎ ‎r‎e‎m‎e‎m‎b‎e‎r‎ ‎l‎i‎k‎e‎ ‎a‎ ‎m‎o‎n‎t‎h‎ ‎a‎g‎o‎
[‎0‎8‎:‎1‎5‎]‎ ‎<‎@‎s‎t‎r‎a‎t‎u‎m‎>‎ ‎w‎h‎e‎n‎ ‎t‎h‎e‎ ‎e‎n‎t‎i‎r‎e‎ ‎w‎e‎s‎t‎e‎r‎n‎ ‎l‎i‎b‎ ‎w‎o‎r‎l‎d‎ ‎w‎a‎s‎ ‎t‎r‎y‎i‎n‎g‎ ‎t‎o‎ ‎j‎u‎s‎t‎i‎f‎y‎ ‎a‎ ‎s‎t‎a‎n‎d‎i‎n‎g‎ ‎o‎v‎a‎t‎i‎o‎n‎ ‎f‎o‎r‎ ‎a‎ ‎f‎u‎c‎k‎i‎n‎ ‎n‎a‎z‎i‎ ‎a‎s‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎n‎o‎t‎ ‎a‎n‎t‎i‎-‎s‎e‎m‎i‎t‎i‎c‎,‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎o‎m‎g‎ ‎t‎h‎e‎ ‎n‎u‎a‎n‎c‎e‎ ‎a‎n‎d‎ ‎c‎o‎n‎t‎e‎x‎t‎
[‎0‎8‎:‎1‎5‎]‎ ‎<‎@‎s‎t‎r‎a‎t‎u‎m‎>‎ ‎a‎n‎d‎ ‎n‎o‎w‎ ‎w‎e‎ ‎h‎a‎v‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎w‎h‎o‎ ‎a‎r‎e‎ ‎a‎n‎t‎i‎-‎w‎a‎r‎ ‎p‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎b‎e‎i‎n‎g‎ ‎c‎a‎l‎l‎e‎d‎ ‎a‎n‎t‎i‎-‎s‎e‎m‎i‎t‎i‎c‎
[‎0‎8‎:‎1‎5‎]‎ ‎<‎@‎s‎t‎r‎a‎t‎u‎m‎>‎ ‎f‎o‎r‎ ‎c‎a‎l‎l‎i‎n‎g‎ ‎f‎o‎r‎ ‎a‎ ‎c‎e‎a‎s‎e‎f‎i‎r‎e‎ ‎-‎ ‎b‎e‎i‎n‎g‎ ‎c‎a‎l‎l‎e‎d‎ ‎t‎h‎a‎t‎ ‎b‎y‎ ‎t‎h‎e‎ ‎s‎a‎m‎e‎ ‎p‎e‎o‎p‎e‎l‎ ‎w‎h‎o‎ ‎a‎p‎p‎l‎a‎u‎d‎e‎d‎ ‎a‎ ‎n‎a‎z‎i‎
‎0‎3‎[‎0‎8‎:‎1‎7‎]‎ ‎*‎ ‎l‎u‎l‎d‎a‎n‎g‎s‎ ‎(‎~‎f‎n‎9‎j‎5‎8‎c‎7‎q‎@‎2‎0‎0‎1‎:‎4‎1‎d‎0‎:‎8‎0‎0‎:‎4‎a‎1‎4‎:‎9‎c‎d‎:‎2‎9‎0‎:‎f‎:‎2‎0‎3‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎L‎R‎H‎
[‎0‎8‎:‎3‎2‎]‎ ‎<‎@‎s‎t‎r‎a‎t‎u‎m‎>‎ ‎""‎D‎o‎i‎n‎g‎ ‎a‎n‎ ‎“‎A‎l‎w‎a‎y‎s‎ ‎S‎u‎n‎n‎y‎ ‎i‎n‎ ‎P‎h‎i‎l‎a‎d‎e‎l‎p‎h‎i‎a‎”‎ ‎r‎e‎w‎a‎t‎c‎h‎ ‎a‎n‎d‎ ‎I‎ ‎t‎o‎t‎a‎l‎l‎y‎ ‎f‎o‎r‎g‎o‎t‎ ‎t‎h‎e‎r‎e‎’‎s‎ ‎a‎ ‎w‎h‎o‎l‎e‎ ‎a‎s‎s‎ ‎e‎p‎i‎s‎o‎d‎e‎ ‎c‎a‎l‎l‎e‎d‎ ‎T‎h‎e‎ ‎G‎a‎n‎g‎ ‎G‎o‎e‎s‎ ‎J‎i‎h‎a‎d‎ ‎w‎h‎e‎r‎e‎ ‎a‎n‎ ‎I‎s‎r‎a‎e‎l‎i‎ ‎m‎o‎v‎e‎s‎ ‎n‎e‎x‎t‎ ‎d‎o‎o‎r‎ ‎a‎n‎d‎ ‎t‎r‎i‎e‎s‎ ‎t‎o‎ ‎a‎n‎n‎e‎x‎ ‎P‎a‎d‎d‎y‎’‎s‎ ‎P‎u‎b‎.‎
[‎0‎8‎:‎3‎2‎]‎ ‎<‎@‎s‎t‎r‎a‎t‎u‎m‎>‎ ‎h‎t‎t‎p‎s‎:‎/‎/‎t‎w‎i‎t‎t‎e‎r‎.‎c‎o‎m‎/‎m‎a‎t‎t‎l‎i‎e‎b‎/‎s‎t‎a‎t‎u‎s‎/‎1‎2‎9‎7‎6‎2‎6‎9‎6‎1‎3‎9‎3‎4‎8‎7‎8‎7‎2‎
[‎0‎8‎:‎3‎2‎]‎ ‎<‎@‎s‎t‎r‎a‎t‎u‎m‎>‎ ‎h‎e‎y‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎k‎i‎n‎d‎a‎ ‎a‎m‎u‎s‎i‎n‎g‎
[‎0‎8‎:‎3‎5‎]‎ ‎<‎@‎s‎t‎r‎a‎t‎u‎m‎>‎ ‎P‎h‎a‎r‎m‎a‎c‎i‎s‎t‎s‎ ‎a‎n‎d‎ ‎t‎e‎c‎h‎n‎i‎c‎i‎a‎n‎s‎ ‎a‎t‎ ‎W‎a‎l‎g‎r‎e‎e‎n‎s‎,‎ ‎C‎V‎S‎,‎ ‎a‎n‎d‎ ‎R‎i‎t‎e‎ ‎A‎i‎d‎ ‎a‎r‎e‎ ‎w‎a‎l‎k‎i‎n‎g‎ ‎o‎f‎f‎ ‎t‎h‎e‎ ‎j‎o‎b‎ ‎t‎h‎i‎s‎ ‎w‎e‎e‎k‎ ‎t‎o‎ ‎p‎r‎o‎t‎e‎s‎t‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎f‎f‎i‎n‎g‎ ‎a‎n‎d‎ ‎o‎v‎e‎r‎w‎o‎r‎k‎.‎ ‎ ‎‎S‎o‎m‎e‎ ‎a‎r‎e‎ ‎c‎a‎l‎l‎i‎n‎g‎ ‎i‎t‎ ‎""‎P‎h‎a‎r‎m‎a‎g‎e‎d‎d‎o‎n‎.‎""‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

A‎l‎l‎ ‎S‎a‎i‎n‎t‎s‎'‎ ‎D‎a‎y‎,‎ ‎a‎l‎s‎o‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎A‎l‎l‎ ‎H‎a‎l‎l‎o‎w‎s‎'‎ ‎D‎a‎y‎ ‎o‎r‎ ‎H‎a‎l‎l‎o‎w‎m‎a‎s‎,‎ ‎i‎s‎ ‎a‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎ ‎s‎o‎l‎e‎m‎n‎i‎t‎y‎ ‎c‎e‎l‎e‎b‎r‎a‎t‎e‎d‎ ‎i‎n‎ ‎h‎o‎n‎o‎u‎r‎ ‎o‎f‎ ‎a‎l‎l‎ ‎t‎h‎e‎ ‎s‎a‎i‎n‎t‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎c‎h‎u‎r‎c‎h‎,‎ ‎w‎h‎e‎t‎h‎e‎r‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎k‎n‎o‎w‎n‎ ‎o‎r‎ ‎u‎n‎k‎n‎o‎w‎n‎.‎ ‎I‎n‎ ‎t‎h‎e‎ ‎9‎t‎h‎ ‎c‎e‎n‎t‎u‎r‎y‎,‎ ‎s‎o‎m‎e‎ ‎c‎h‎u‎r‎c‎h‎e‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎B‎r‎i‎t‎i‎s‎h‎ ‎I‎s‎l‎e‎s‎ ‎b‎e‎g‎a‎n‎ ‎h‎o‎l‎d‎i‎n‎g‎ ‎t‎h‎e‎ ‎c‎o‎m‎m‎e‎m‎o‎r‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎a‎l‎l‎ ‎s‎a‎i‎n‎t‎s‎ ‎o‎n‎ ‎1‎ ‎N‎o‎v‎e‎m‎b‎e‎r‎,‎ ‎a‎n‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎9‎t‎h‎ ‎c‎e‎n‎t‎u‎r‎y‎ ‎t‎h‎i‎s‎ ‎w‎a‎s‎ ‎e‎x‎t‎e‎n‎d‎e‎d‎ ‎t‎o‎ ‎t‎h‎e‎ ‎w‎h‎o‎l‎e‎ ‎C‎a‎t‎h‎o‎l‎i‎c‎ ‎c‎h‎u‎r‎c‎h‎ ‎b‎y‎ ‎P‎o‎p‎e‎ ‎G‎r‎e‎g‎o‎r‎y‎ ‎I‎V‎.‎ ‎I‎n‎ ‎W‎e‎s‎t‎e‎r‎n‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎i‎t‎y‎,‎ ‎i‎t‎ ‎i‎s‎ ‎s‎t‎i‎l‎l‎ ‎c‎e‎l‎e‎b‎r‎a‎t‎e‎d‎ ‎o‎n‎ ‎1‎ ‎N‎o‎v‎e‎m‎b‎e‎r‎ ‎b‎y‎ ‎t‎h‎e‎ ‎R‎o‎m‎a‎n‎ ‎C‎a‎t‎h‎o‎l‎i‎c‎ ‎C‎h‎u‎r‎c‎h‎ ‎a‎s‎ ‎w‎e‎l‎l‎ ‎a‎s‎ ‎m‎a‎n‎y‎ ‎P‎r‎o‎t‎e‎s‎t‎a‎n‎t‎ ‎c‎h‎u‎r‎c‎h‎e‎s‎,‎ ‎a‎s‎ ‎t‎h‎e‎ ‎L‎u‎t‎h‎e‎r‎a‎n‎,‎ ‎A‎n‎g‎l‎i‎c‎a‎n‎,‎ ‎a‎n‎d‎ ‎M‎e‎t‎h‎o‎d‎i‎s‎t‎ ‎t‎r‎a‎d‎i‎t‎i‎o‎n‎s‎.‎ ‎T‎h‎i‎s‎ ‎v‎i‎e‎w‎ ‎o‎f‎ ‎t‎h‎e‎ ‎H‎o‎l‎y‎ ‎C‎r‎o‎s‎s‎ ‎C‎e‎m‎e‎t‎e‎r‎y‎ ‎i‎n‎ ‎G‎n‎i‎e‎z‎n‎o‎,‎ ‎P‎o‎l‎a‎n‎d‎,‎ ‎s‎h‎o‎w‎s‎ ‎c‎a‎n‎d‎l‎e‎s‎ ‎a‎n‎d‎ ‎f‎l‎o‎w‎e‎r‎s‎ ‎p‎l‎a‎c‎e‎d‎ ‎t‎o‎ ‎h‎o‎n‎o‎u‎r‎ ‎d‎e‎c‎e‎a‎s‎e‎d‎ ‎r‎e‎l‎a‎t‎i‎v‎e‎s‎ ‎o‎n‎ ‎A‎l‎l‎ ‎S‎a‎i‎n‎t‎s‎'‎ ‎D‎a‎y‎.‎ ‎I‎t‎ ‎i‎s‎ ‎o‎b‎s‎e‎r‎v‎e‎d‎ ‎a‎s‎ ‎a‎ ‎p‎u‎b‎l‎i‎c‎ ‎a‎n‎d‎ ‎b‎a‎n‎k‎ ‎h‎o‎l‎i‎d‎a‎y‎ ‎i‎n‎ ‎P‎o‎l‎a‎n‎d‎,‎ ‎t‎h‎e‎ ‎f‎o‎l‎l‎o‎w‎i‎n‎g‎ ‎d‎a‎y‎ ‎a‎l‎s‎o‎ ‎b‎e‎i‎n‎g‎ ‎c‎o‎m‎m‎e‎m‎o‎r‎a‎t‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎a‎s‎ ‎Z‎a‎d‎u‎s‎z‎k‎i‎ ‎(‎A‎l‎l‎ ‎S‎o‎u‎l‎s‎'‎ ‎D‎a‎y‎)‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎D‎i‎e‎g‎o‎ ‎D‎e‎l‎s‎o‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
 ‎
B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎t‎w‎i‎s‎t‎ ‎s‎o‎m‎e‎ ‎J‎e‎w‎s‎ ‎a‎n‎d‎ ‎t‎u‎r‎n‎ ‎t‎h‎e‎m‎ ‎i‎n‎t‎o‎ ‎b‎a‎g‎e‎l‎s‎.‎"
yFznWTBa,МАТФАК ИМИМФИ,hpnq,C++,Wednesday 1st of November 2023 08:58:48 AM CDT,"#include ""bits/stdc++.h""
//speed coding

#define loop(i, x, n) for (int i = x; i < n; i++)

using namespace std;


int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
#ifdef DEBUG
    freopen(""text.txt"", ""r"", stdin);
#endif
// 7
    const int n = 5;
    double b[n];
    loop(i, 0, n) cin >> b[i];
    int j = 0;
    loop(i, 0, n){
        if(b[i] == 0){
            swap(b[i], b[j]);
            j++;
        }
    }
    for(auto i : b){
        cout << i << "" "";
    }
    cout << ""\n"";
// max(1, 2, 3)
    int a1, a2, a3;
    cin >> a1 >> a2 >> a3;
    cout << (a1 > a2 ?( a1 > a3 ? a1 : a3 ):( a2 > a3 ? a2 : a3));

    return 0;
}
"
pV4CtwUM,global_db,MrKey2b,Lua,Wednesday 1st of November 2023 08:43:58 AM CDT,"local global_map = {
    motor_list = {
        ""Motor120v"",
        ""Motor240v"",
        ""Motor480v"",
        ""Motor960v""
    },

    rf_limits = {
        Motor120v={0}, -- 
        Motor240v={0}, -- 
        Motor480v={100000}, -- 100KFE/T {85 KJ} | 1,7 MW | 3541 A
        Motor960v={200000} -- 200KFE/T {170 KJ} | 3,4 MW | 3541 A
    },

    energy_detector_number = {
        Motor120v={0},
        Motor240v={1},
        Motor480v={2},
        Motor960v={3}
    },

    battery_number = {
        lithiumbatterybox_1={1},
        lithiumbatterybox_2={2},
        lithiumbatterybox_3={3},
        lithiumbatterybox_4={4},
        lithiumbatterybox_5={5},
        lithiumbatterybox_6={6},
        lithiumbatterybox_7={7},
        lithiumbatterybox_8={8},
        lithiumbatterybox_9={9},
        lithiumbatterybox_10={10},
        lithiumbatterybox_11={11},
        lithiumbatterybox_12={12},
        lithiumbatterybox_13={13},
        lithiumbatterybox_14={14},
        lithiumbatterybox_15={15},
        lithiumbatterybox_16={16}
    }

    pc_id = {
        Motor120v={0},
        Motor240v={1},
        Motor480v={2},
        Motor960v={3},
        ComputerServerEDF={4}
    },

    pc_id_function = {
        edf={0,1,2,3,4}
    },
}
return global_map"
4SxCAfQA,Constructed Binary Tree(Pre-order traversal),BlackWolfy,C++,Wednesday 1st of November 2023 08:37:46 AM CDT,"#include <iostream>

struct TreeNode {
    int data;           //node value
    TreeNode* left;     //pointer to left child
    TreeNode* right;    //pointer to right child
    
    TreeNode(int value) {   //constructor for initializing a node
        data = value;
        left = nullptr;
        right = nullptr;
    }
};
//Pre-order traversal - you start at the root node and then you visit the left subtree first and then the right
void printPreOrder(TreeNode* root) {
    if (root != nullptr) {
        std::cout << root->data << "" "";
        printPreOrder(root->left);
        printPreOrder(root->right);
    }
}
int main()
{
    TreeNode* root = new TreeNode(1);
    root->left = new TreeNode(3);
    root->right = new TreeNode(4);
    root->left->left = new TreeNode(5);
    root->left->right = new TreeNode(8);

    printPreOrder(root);
}
//          1
//         / \
//        3   4
//       / \
//      5   8"
nNqctXc3,startup,MrKey2b,Lua,Wednesday 1st of November 2023 08:37:19 AM CDT,"-- Program MRKEY2B EDF CC

function update_pastebin()
    -- PASTEBIN --
    local startup_link = ""nNqctXc3""
    local config_link = """"
    local utils_link = """"
    local global_db_link = ""pV4CtwUM""

    -- CHECK DEPENDENCY FILES --
    if fs.exists(""startup"") then
        fs.delete(""startup"")
    end

    if fs.exists(""config"") then
        fs.delete(""config"")
    end

    if fs.exists(""utils"") then
        fs.delete(""utils"")
    end

    if fs.exists(""global_db"") then
        fs.delete(""global_db"")
    end
    -- GET PASTEBIN --
    shell.run(""pastebin get ""..startup_link.."" startup"")
    --shell.run(""pastebin get ""..config_link.."" config"")
    --shell.run(""pastebin get ""..utils_link.."" utils"")
    shell.run(""pastebin get ""..global_db_link.."" global_db"")
end

-- IMPORT DEPS --
function update_import()
    config = require(""config"")
--    utils = require(""utils"")
end

update_pastebin()
update_import()"
xL0t7xqY,CarrotFarm,Kohjin,Lua,Wednesday 1st of November 2023 08:34:07 AM CDT,"runProgram = true
ticks = 0
iterationTicks = 0
settings = {
    [""CarrotSlot""] = 1,
    [""BonemealSlot""] = 2
}

function harvest()
    local success, data = turtle.inspect()
    if success then
        if data.name == ""minecraft:carrots"" then
            print(""Harvesting carrots..."")
            turtle.dig()
            print(""Collecting carrots..."")
            turtle.suck()
        else
            print(""ERROR: Block infront of turtle aren't carrots! Block: "" .. data.name)
            runProgram = false
        end
    else
        print(""No crop planted infront of turtle!"")
    end  
end

function fetchCarrots()
    for i=1, 16 do
        turtle.select(i)
        local data = turtle.getItemDetail()
        if data then
            if data.name == ""minecraft:carrot"" then
                turtle.select(settings.CarrotSlot)
                turtle.drop()
                turtle.select(i)
                turtle.transferTo(settings.CarrotSlot)
                turtle.suck()
                turtle.select(settings.CarrotSlot)
                local data = turtle.getItemDetail()
                if data.name ~= ""minecraft:carrot"" then
                    print(""Unable to fix! Carrots found in slot ["" .. i .. ""] but couldn't be transferred!"")
                end
                break
            end
        end
    end

    turtle.select(settings.CarrotSlot)
    local data = turtle.getItemDetail()
    if data then
        if data.name == ""minecraft:carrot"" then
            print(""Successfully fixed!"")
            return true
        else
            print(""Unable to fix!"")
            return false
        end
    else 
        print(""Unable to fix!"")
            return false
    end
end

function fetchBonemeal()
    for i=1, 16 do
        turtle.select(i)
        local data = turtle.getItemDetail()
        if data then
            if data.name == ""minecraft:dye"" then
                turtle.select(settings.BonemealSlot)
                turtle.drop()
                turtle.select(i)
                turtle.transferTo(settings.BonemealSlot)
                turtle.suck()
                turtle.select(settings.BonemealSlot)
                local data = turtle.getItemDetail()
                if data.name ~= ""minecraft:dye"" then
                    print(""Unable to fix! Carrots found in slot ["" .. i .. ""] but couldn't be transferred!"")
                end
                break
            end
        end
    end

    turtle.select(settings.BonemealSlot)
    local data = turtle.getItemDetail()
    if data then
        if data.name == ""minecraft:dye"" then
            print(""Successfully fixed!"")
            return true
        else
            print(""Unable to fix!"")
            return false
        end
    else 
        print(""Unable to fix!"")
            return false
    end
end

function plant()
    turtle.select(settings.CarrotSlot)
    local data = turtle.getItemDetail()
    if data then
        if data.name == ""minecraft:carrot"" then
            turtle.place()
            print(""Planting carrots..."")
        else
            print(""Slot "" .. settings.CarrotSlot .. "" doesn't contain any carrots!"")
            print(""Trying to fix..."")
            local success = fetchCarrots()
            if not success then
                runProgram = false
            end
        end
    else
        print(""Slot "" .. settings.CarrotSlot .. "" doesn't contain anything!"")
        print(""Trying to fix..."")
        local success = fetchCarrots()
        if not success then
            runProgram = false
        end
    end
end

function grow()
    turtle.select(settings.BonemealSlot)
    local data = turtle.getItemDetail()
    if data then
        if data.name == ""minecraft:dye"" then
            turtle.place()
            print(""Growing carrots..."")
        else
            print(""Slot "" .. settings.BonemealSlot .. "" doesn't contain any bonemeal!"")
            print(""Trying to fix..."")
            local success = fetchBonemeal()
            if not success then
                runProgram = false
            end
        end
    else
        print(""Slot "" .. settings.BonemealSlot .. "" doesn't contain anything!"")
        print(""Trying to fix..."")
        local success = fetchBonemeal()
        if not success then
            runProgram = false
        end
    end
end

function store()
    for i=1, 16 do
        if i ~= settings.BonemealSlot and i ~= settings.CarrotSlot then
            turtle.select(i)
            local data = turtle.getItemDetail()
            if data then
                if data.name == ""minecraft:dye"" then
                    turtle.turnLeft()
                    turtle.drop()
                    turtle.turnRight()
                end
                if data.name == ""minecraft:carrot"" then
                    turtle.turnRight()
                    turtle.drop()
                    turtle.turnLeft()
                end
            end
        end
    end
end

function resupply()
    local resupplyBonemeal = false
    local resupplyCarrots = false
    local amountOfBonemeal = turtle.getItemCount(settings.BonemealSlot)
    if amountOfBonemeal < 64 then
        turtle.turnLeft()
        turtle.select(settings.BonemealSlot)
        turtle.suck(64 - amountOfBonemeal)
        turtle.turnRight()
    end

    local amountOfCarrots = turtle.getItemCount(settings.CarrotSlot)
    if amountOfCarrots < 64 then
        turtle.turnRight()
        turtle.select(settings.CarrotSlot)
        turtle.suck(64 - amountOfCarrots)
        turtle.turnLeft()
    end

    if turtle.getItemCount(settings.BonemealSlot) == 64 then
        resupplyBonemeal = true
    end
    if turtle.getItemCount(settings.CarrotSlot) == 64 then
        resupplyCarrots = true
    end

    if resupplyBonemeal and resupplyCarrots then
        return true
    else
        return false
    end
    
end

while runProgram do 
    print(""ITER: "" .. iterationTicks .. "" | OVER: "" .. ticks)
    if iterationTicks > 16 then
        print(""Storing Items..."")
        store()

        print(""Resupplying..."")
        local success = resupply()
        if success then
            print(""Resupplied successfully!"")
        else
            print(""Unable to resupply!"")
        end
        iterationTicks = 0
    end

    harvest()
    plant()
    for i=0, 4 do
        grow()
    end

    ticks = ticks + 1
    iterationTicks = iterationTicks + 1 
end"
rhZpAWDi,MOK layout Pahawh Hmong,dksetiavan,YAML,Wednesday 1st of November 2023 08:28:47 AM CDT,"{
""title"":""Pahawh Hmong"",
""onScreen"":{
""main"":[
""[MC:𖭑][MC:𖭒][MC:𖭓][MC:𖭔][MC:𖭕][MC:𖭖][MC:𖭗][MC:𖭘][MC:𖭙][MC:𖭐]"",
""[MC:𖬱][MC:𖬊][MC:𖬒][MC:𖬘][MC:𖬄][MC:𖬧][MC:𖬥][MC:𖬪][MC:𖬣][MC:𖬮]"",
""[MC:𖬖][MC:𖬌][MC:𖬐][MC:𖬀][MC:𖬲][MC:𖬰][MC:𖬜][MC:𖬝][MC:𖬞][MC:𖬚]"",
""[SHIFT][MC:𖬆][MC:𖬎][MC:𖬈][MC:𖬂][MC:𖬔][MC:𖬬][MC:𖬦][DEL]"",
""[TOOL][ALTGR:[MC:𖬹]][SPACE][][][SYM:[MC:𖭄]][ENTER]""
],

""shifted"":[
""[MC:𖬸][MC:𖬴][MC:𖭀][MC:𖭁][MC:𖬻][MC:𖬳][MC:𖬺][MC:𖭂][MC:𖭃][MC:𖬷]"",
""0[MC:𖬋][MC:𖬓][MC:𖬙][MC:𖬅][MC:𖬨][MC:𖬫][MC:𖬯][MC:𖬠][MC:𖬪]"",
""[MC:𖬗][MC:𖬍][MC:𖬑][MC:𖬁][MC:𖬵][MC:𖬶][MC:𖬢][MC:𖬡][MC:𖬩][MC:𖬛]"",
""[SHIFT][MC:𖬇][MC:𖬏][MC:𖬉][MC:𖬃][MC:𖬕][MC:𖬤][MC:𖬭][DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],

""num"":[
""[MC:𖭑][MC:𖭒][MC:𖭓] [MC:𖭛][MC:𖭜]"",
""[MC:𖭔][MC:𖭕][MC:𖭖] [MC:𖭝][MC:𖭞]"",
""[MC:𖭗][MC:𖭘][MC:𖭙] [MC:𖭟][MC:𖭠]"",
""[Lock][MC:𖭐][SPACE][][MC:𖭡][DEL][Enter]""
],

""sym"":[
""[MC:𖬼][MC:𖬽][MC:𖬾][MC:𖬿][MC:𖭅][MC:𖭣][MC:𖭤][MC:𖭥][MC:𖭦][MC:𖭧][MC:𖭨][MC:𖭩][MC:𖭪]"",
""[MC:𖭫][MC:𖭬][MC:𖭭][MC:𖭮][MC:𖭯][MC:𖭰][MC:𖭱][MC:𖭲][MC:𖭳][MC:𖭴][MC:𖭵][MC:𖭶][MC:𖭷]"",
""[MC:𖭽][MC:𖭾][MC:𖭿][MC:𖮀][MC:𖮁][MC:𖮂][MC:𖮃][MC:𖮄][MC:𖮅][MC:𖮆][MC:𖮇][MC:𖮈]"",
""[SHIFT][MC:𖮉][MC:𖮊][MC:𖮋][MC:𖮌][MC:𖮍][MC:𖮎][MC:𖮏][DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
],

""symShifted"":[
""£¥€$^&*()№√"",
""~`{}%_-=|+§÷"",
""@[]#/\'ʺ«»—‐"",
""[SHIFT]…<>!;:? ‹›±–[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
],

""altGr"":[
""1234567890"",
""qwertyuiop"",
""asdfghjkl"",
""[SHIFT]zxcvbnm[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]
}
}
    
"
C67w5jFN,Crypto,ZakenChannel,C++,Wednesday 1st of November 2023 07:49:55 AM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <Windows.h>
using namespace std;


// Функция для вычеркивания строки и столбца из матрицы

vector<vector<int>> removeRowAndColumn(const vector<vector<int>>& matrix, int row, int column) {
    int n = matrix.size();
    vector<vector<int>> result(n - 1, vector<int>(n - 1));

    for (int i = 0, newRow = 0; i < n; i++) {
        if (i == row) continue;

        for (int j = 0, newColumn = 0; j < n; j++) {
            if (j == column) continue;

            result[newRow][newColumn] = matrix[i][j];
            newColumn++;
        }
        newRow++;
    }

    return result;
}

// Функция для перемножения матриц

vector<int> multiplyRowByMatrix(vector<int>& row, vector<vector<int>>& matrix) {
    int numRows = matrix.size();
    int numCols = matrix[0].size();

    // Проверка на возможность перемножения
    if (row.size() != numCols) {
        cout << ""Нельзя перемножить: размерность строки не совпадает с числом столбцов в матрице."" << endl;
        return {};
    }

    vector<int> result(numRows, 0);

    for (int i = 0; i < numRows; i++) {
        for (int j = 0; j < numCols; j++) {
            result[i] += row[j] * matrix[i][j];
        }
    }

    return result;
}

// Функция для нахождения определителя матрицы
int determinant(const vector<vector<int>>& matrix) {
    int n = matrix.size();

    if (n == 1) {
        return matrix[0][0];
    }

    if (n == 2) {
        return matrix[0][0] * matrix[1][1] - matrix[0][1] * matrix[1][0];
    }

    int det = 0;
    for (int i = 0; i < n; i++) {
        vector<vector<int>> submatrix(n - 1, vector<int>(n - 1));

        for (int j = 1; j < n; j++) {
            for (int k = 0; k < n; k++) {
                if (k < i) {
                    submatrix[j - 1][k] = matrix[j][k];
                }
                else if (k > i) {
                    submatrix[j - 1][k - 1] = matrix[j][k];
                }
            }
        }

        int sign = (i % 2 == 0) ? 1 : -1;
        det += sign * matrix[0][i] * determinant(submatrix);
    }

    return det;
}

// Функция для нахождения d, x и y по определителю матрицы и длине алфавита

int extendedGCDFromDeterminant(int determinant, int alphabetSize, int& d, int& x, int& y) {
    int a = alphabetSize;
    int b = determinant;

    int x0 = 1, x1 = 0;
    int y0 = 0, y1 = 1;

    while (b) {
        int q = a / b;
        int temp = a;
        a = b;
        b = temp % b;

        int tempX = x0;
        x0 = x1;
        x1 = tempX - q * x1;

        int tempY = y0;
        y0 = y1;
        y1 = tempY - q * y1;
    }

    d = a;
    y = x0;
    x = y0;
    return x;
}

// Функция для нахождения матрицы алгебраических дополнений
vector<vector<int>> cofactorMatrix(const vector<vector<int>>& matrix) {
    int n = matrix.size();
    vector<vector<int>> cofactors(n, vector<int>(n));

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            int sign = ((i + j) % 2 == 0) ? 1 : -1;
            cofactors[i][j] = sign * determinant(removeRowAndColumn(matrix, i, j));
        }
    }

    return cofactors;
}
// Транспонирование матрицы
vector<vector<int>> transposeMatrix(const vector<vector<int>>& matrix) {
    int rows = matrix.size();
    int cols = matrix[0].size();

    vector<vector<int>> transposed(cols, vector<int>(rows));

    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            transposed[j][i] = matrix[i][j];
        }
    }

    return transposed;
}



int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    string alph = ""АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ"", word;
    vector<int> a;
    vector<vector<int>> key = {
        {1, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 1, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 1, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 1},
        {0, 0, 1, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 1, 0},
        {0, 1, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 1, 0, 0, 0}
    };
    

    cout << ""Введите слово для шифрования (на русском языке): "";
    cin >> word;



    // зашифровка сообщения

    for (int i = 0; i < word.size(); i++) {
        for (int j = 0; j < alph.size(); j++) {
            if (word[i] == alph[j]) a.push_back(j);
        }
    }

    if (a.size() < 9) {
        while (a.size() < 8) {
            a.push_back(33);
        }
    }

    vector<int> resultOfEncryptByNumbers = multiplyRowByMatrix(a, key);
    string resultOfEncryptByAlph;
    
    for (int i = 0; i < word.size(); i++) {
        for (int j = 0; j < alph.size(); j++) {
            if ((resultOfEncryptByNumbers[i] % 34) == j) resultOfEncryptByAlph.push_back(alph[j]);
        }
    }
    cout << ""Зашифрованное сообщение: "";
    for (int i = 0; i < resultOfEncryptByAlph.size(); i++) {
        cout << resultOfEncryptByAlph[i];
    }



    // расшифровка сообщения

    int x, y, d, reverseElement;
    int determinate = determinant(key);
    int extendedGCD = extendedGCDFromDeterminant(determinate, 34, d, x, y);

    if (determinate < 0 and extendedGCD > 0) reverseElement = x;
    else if (determinate > 0 and x < 0) reverseElement = x + 34;
    else if (determinate > 0 and x > 0) reverseElement = x;
    else reverseElement = -x;

    vector<vector<int>> cofactors = cofactorMatrix(key);
    for (int i = 0; i < cofactors.size(); i++) {
        for (int j = 0; j < cofactors[i].size(); j++) {
            cofactors[i][j] %= 34;
            cofactors[i][j] *= reverseElement;
            cofactors[i][j] %= 34;
        }
    }

    cofactors = transposeMatrix(cofactors);

    string encryptAlphs;
    vector<int> encryptNumbers;

    encryptNumbers = multiplyRowByMatrix(resultOfEncryptByNumbers, cofactors);

    for (int i = 0; i < encryptNumbers.size(); i++) {
        for (int j = 0; j < alph.size(); j++) {
            if ((encryptNumbers[i] % 34) == j) encryptAlphs.push_back(alph[j]);
        }
    }
    cout << endl << ""Расшифрованное сообщение: "" << encryptAlphs;
}"
0AYZ2i7a,AllPlatform_Recorder.html,Thunder-Menu,HTML,Wednesday 1st of November 2023 07:32:15 AM CDT,"<!DOCTYPE html>
<html lang=""fr"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Enregistrement Vidéo et Audio</title>
    <style>
        /* Ajoutez du style CSS au besoin */
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            padding: 20px;
        }
        #videoContainer {
            width: 640px; /* Largeur initiale du lecteur vidéo */
        }
    </style>
</head>
<body>
<h1 id=""platformLabel"">Enregistrement Vidéo et Audio</h1>
<div id=""videoContainer"">
    <video id=""videoRecorder"" playsinline controls></video>
</div>
<label for=""formatSelect"">Format de la vidéo :</label>
<select id=""formatSelect"">
    <option value=""video/webm"">WebM</option>
    <option value=""video/mp4"">MP4</option>
    <option value=""video/quicktime"">MOV</option>
    <option value=""video/3gpp"">3GP</option>
</select>
<label for=""cameraSelect"">Caméra :</label>
<select id=""cameraSelect"">
    <option value=""environment"">Caméra Arrière</option>
    <option value=""user"">Caméra Frontale</option>
</select>
<label for=""fileName"">Nom du fichier :</label>
<input type=""text"" id=""fileName"" value=""enregistrement"">
<button id=""startRecord"">Démarrer l'enregistrement</button>
<button id=""stopRecord"" disabled>Arrêter l'enregistrement</button>

<script>
let videoRecorder;
let mediaStream;
let mediaRecorder;
let recordedChunks = [];
let startButton = document.getElementById('startRecord');
let stopButton = document.getElementById('stopRecord');
let platformLabel = document.getElementById('platformLabel');
let formatSelect = document.getElementById('formatSelect');
let cameraSelect = document.getElementById('cameraSelect');
let fileNameInput = document.getElementById('fileName');

startButton.addEventListener('click', startRecording);
stopButton.addEventListener('click', stopRecording);

// Détection de la plate-forme et du navigateur
let userAgent = navigator.userAgent || navigator.vendor || window.opera;
if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {
    platformLabel.innerText = ""Enregistrement Vidéo et Audio pour iPhone/iPad/iPod"";
} else if (/android/i.test(userAgent)) {
    platformLabel.innerText = ""Enregistrement Vidéo et Audio pour Android"";
} else if (/Windows/.test(userAgent) && ('ontouchstart' in window || navigator.maxTouchPoints)) {
    platformLabel.innerText = ""Enregistrement Vidéo et Audio pour Windows (Tactile)"";
} else {
    platformLabel.innerText = ""Enregistrement Vidéo et Audio pour autres plateformes"";
}

function startRecording() {
    const selectedCameraMode = cameraSelect.value;
    const constraints = {
        video: { facingMode: selectedCameraMode },
        audio: true,
    };

    navigator.mediaDevices
        .getUserMedia(constraints)
        .then((stream) => {
            mediaStream = stream;
            videoRecorder = document.getElementById('videoRecorder');
            videoRecorder.srcObject = stream;

            mediaRecorder = new MediaRecorder(stream);
            mediaRecorder.ondataavailable = handleDataAvailable;

            recordedChunks = [];
            mediaRecorder.start();
            startButton.disabled = true;
            stopButton.disabled = false;
        })
        .catch((error) => {
            console.error('Erreur lors de l\'accès à la caméra et au microphone :', error);
        });
}

function stopRecording() {
    if (mediaRecorder) {
        mediaRecorder.stop();
    }

    startButton.disabled = false;
    stopButton.disabled = true;
}

function handleDataAvailable(event) {
    if (event.data.size > 0) {
        recordedChunks.push(event.data);
    }
    if (mediaRecorder.state === 'inactive') {
        const blob = new Blob(recordedChunks, { type: formatSelect.value });

        const fileName = fileNameInput.value || 'enregistrement';
        const url = URL.createObjectURL(blob);
        videoRecorder.src = url;
        videoRecorder.controls = true;

        // Créer un lien pour télécharger la vidéo
        const a = document.createElement('a');
        a.href = url;
        a.download = `${fileName}.${formatSelect.value.split('/')[1]}`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
    }
}
</script>
</body>
</html>
"
JYjLFByY,Untitled,NotGeorge,MySQL,Wednesday 1st of November 2023 07:10:35 AM CDT,"SELECT
    cpe.entity_id AS product_id,
    cpe.sku,
    ea.attribute_code,
    CASE
        WHEN ea.backend_type = 'varchar' THEN cev.value
        WHEN ea.backend_type = 'int' THEN cei.value
        WHEN ea.backend_type = 'decimal' THEN ced.value
        WHEN ea.backend_type = 'text' THEN cet.value
        WHEN ea.backend_type = 'datetime' THEN cedt.value
        ELSE NULL
    END AS attribute_value
FROM
    catalog_product_entity AS cpe
LEFT JOIN eav_attribute AS ea
    ON ea.entity_type_id = (SELECT entity_type_id FROM eav_entity_type WHERE entity_type_code = 'catalog_product')
LEFT JOIN catalog_product_entity_varchar AS cev
    ON cpe.entity_id = cev.row_id
    AND ea.attribute_id = cev.attribute_id
    AND cev.store_id = 0 -- Replace with the desired store ID
LEFT JOIN catalog_product_entity_int AS cei
    ON cpe.entity_id = cei.row_id
    AND ea.attribute_id = cei.attribute_id
    AND cei.store_id = 0 -- Replace with the desired store ID
LEFT JOIN catalog_product_entity_decimal AS ced
    ON cpe.entity_id = ced.row_id
    AND ea.attribute_id = ced.attribute_id
    AND ced.store_id = 0 -- Replace with the desired store ID
LEFT JOIN catalog_product_entity_text AS cet
    ON cpe.entity_id = cet.row_id
    AND ea.attribute_id = cet.attribute_id
    AND cet.store_id = 0 -- Replace with the desired store ID
LEFT JOIN catalog_product_entity_datetime AS cedt
    ON cpe.entity_id = cedt.row_id
    AND ea.attribute_id = cedt.attribute_id
    AND cedt.store_id = 0 -- Replace with the desired store ID
WHERE cpe.type_id = 'simple';"
iE6h8FuS,Файлы + Структуры,anticlown,C,Wednesday 1st of November 2023 07:07:46 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <string.h>
#include <malloc.h>

/* формат файла: 
13
251001 Арефин Владислав 19
251001 Асепков Данила 18
251002 Барановский Артём 19
251001 Демидовец Степан 20
251002 Елькин Матвей 19
251003 Заяц Александра 19
251003 Иванникова Анна 18
251004 Иванов Андрей 18
251004 Калитько Дмитрий 19
251003 Карась Андрей 19
251002 Кирлица Дарья 20
251004 Кротюк Иван 18
251005 Крутько Андрей 19
*/

/* student struct start */
typedef struct {
    int group;
    char surname[20];
    char name[20];
    int age;
} student;

student* getStudentList(char* filePath) {
    FILE* file;
    file = fopen(filePath, ""r"");

    int size;
    fscanf(file, ""%d"", &size);

    student* list = (student*)malloc(size * sizeof(student));
    for (int i = 0; i < size; i++)
    {
        fscanf(file, ""%d"", &list[i].group);
        fscanf(file, ""%s"", &list[i].surname);
        fscanf(file, ""%s"", &list[i].name);
        fscanf(file, ""%d"", &list[i].age);
    }
    fclose(file);
    return list;
}

student* findOldestStudents(int size, student* list) {
    const int groupNumbers[4] = {251001, 251002, 251003, 251004};
    const int numOfGroups = 4;
    student* oldestStudents = (student*)malloc(numOfGroups * sizeof(student)); 
    int tempMaxAge;
    for (int i = 0; i < numOfGroups; i++)
    {   
        tempMaxAge = -1;
        for (int j = 0; j < size; j++)
        {
            if (list[j].group == groupNumbers[i] && list[j].age > tempMaxAge)
            {
                oldestStudents[i].group = list[j].group;
                strcpy(oldestStudents[i].surname, list[j].surname);
                strcpy(oldestStudents[i].name, list[j].name);
                oldestStudents[i].age = list[j].age;
            }
        }
    }
    return oldestStudents;
}
/* student struct end */

/* file funcs/procs start */
char* getPathToFile() {
    static char filePath[20];
    printf(""\nВведите путь к файлу: "");
    gets_s(filePath, 20);
    return filePath;
}

int getSize(char filePath[20]) {
    FILE* file;
    file = fopen(filePath, ""r"");
    int temp;
    fscanf(file, ""%d"", &temp);
    fclose(file);
    return temp;
}

void endWork(char* filePath, int size, student* list) {
    FILE* file = fopen(filePath, ""w"");
    fprintf(file, ""Кол-во групп: %d\n"", size);
    for (int i = 0; i < size; i++)
    {
        fprintf(file, ""%d "", list[i].group);
        fprintf(file, ""%s "", &list[i].surname);
        fprintf(file, ""%s "", &list[i].name);
        fprintf(file, ""%d\n"", list[i].age);
    }
    fclose(file);

    printf(""\n\t\t\t\t\t\tРабота с файлом успешно закончена.\n"");
}
/* file funcs/procs end */

/* print procs start */
void printTaskInfo() {
    printf(""\tЗадание 23: Данная программа получает файл, содержащий списки групп студентов.\n"");
    printf(""\t\tИз списков формируется новый список, содержащий данные студентов, имеющих наибольший возраст."");
}

void printStudnetList(int size, student* list) {
    printf(""\n\tКоличество студентов: %d\n"", size);
    printf(""\tВывод списка всех студентов:\n"");
    for (int i = 0; i < size; i++)
    {
        printf(""%d. Группа %d - %s %s - %d лет;\n"", i + 1, list[i].group, list[i].surname, list[i].name, list[i].age);
    }
}

void printOldestList(int size, student* oldestList) {
    printf(""\n\tВывод списка студентов, \n  имеющих наибольший возраст(по группам):\n"");
    for (int i = 0; i < size; i++)
    {
        printf(""%d. Группа %d - %s %s - %d лет;\n"", i + 1, oldestList[i].group, oldestList[i].surname, oldestList[i].name, oldestList[i].age);
    }
}
/* print procs end */

int main()
{
    setlocale(LC_ALL, ""Rus"");
    
    printTaskInfo();

    printf(""\n\n\t\t\t\t\tНеобходим файл ввода для считывания информации...\n"");
    char* inputPath = getPathToFile();
    int size = getSize(inputPath);

    student* list = getStudentList(inputPath);
    printStudnetList(size, list);

    const int numOfGroups = 4;
    student* oldestList = findOldestStudents(size, list);
    printOldestList(numOfGroups, oldestList);

    printf(""\n\n\t\t\t\t\tНеобходим файл вывода для записи информации...\n"");
    char* outputPath = getPathToFile();
    endWork(outputPath, numOfGroups, oldestList);
    return 0;
}"
t05vBUu5,data739,TestGuy1,JSON,Wednesday 1st of November 2023 07:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'e49ea32938122460775ba284401539643fe00fccff2f369d3a01baa2434774fccab59b961ad5e637ce7acf136e55de2487ac5fc849acb9031dfe6dcca4780c3de7770fd6fa1b10a7487e910d54104e9e4278ac83da483d14264e7849079a6ddf47d64ae2ec9729e02a1c7ba71efa9bddc82cacbf8959a3231c1d1559d0877644',
  otherdata: [
    '2da02ede531951b8557d6dfbb82d18cd',
    '365ad97420a7d91dbc731633eb01bdbf',
    '37e58b79051c6acf82244264d2ef7c3f',
    'e04a5550767c52af53d6bc2c24aff64c',
    '623387d759944766813c3dd12df6d2ac',
    '288814562648402baf2b7c5d75dfa58f',
    '37858f2117a40cc948d98067a302b8aa',
    '2bbf511e4ce00493feca6e9c9436b04f'
  ]
}"
mwcgqSha,Completed Classes exercise,umbongodrink,Python,Wednesday 1st of November 2023 06:51:29 AM CDT,"from datetime import datetime as dt

class Person:

    def __init__(self, name, date_of_birth, friends=None):
        self.name = name
        self.date_of_birth = date_of_birth
        self.friends = friends if friends else []

    def __str__(self):
        number_of_friends = len(self.friends)
        return f'My name is: {self.name}, my DOB is: {self.date_of_birth}, and I have {number_of_friends} friends.'
    
    def true_dob(self):
        self.person_iso_date = dt.fromisoformat(self.date_of_birth)
        return f'{self.person_iso_date}'
    
    def __gt__(self, other_person):
        self.person_iso_date = dt.fromisoformat(self.date_of_birth)
        if self.person_iso_date > other_person.person_iso_date:
            return True
        else:
            return False
        
    def add_friend(self, other_person):
        self.friends.append(other_person.name)
        other_person.friends.append(self.name)
        return f""{self.name}'s friends are now {self.friends}; and likewise {other_person.name}'s friends include {self.name}."""
cTuXq1Dn,conv.py,Abhisek92,Python,Wednesday 1st of November 2023 06:33:18 AM CDT,"import numpy as np
import torch
import torch.nn as nn
import torch.nn.functional as F
from train_utils import batchify_data, run_epoch, train_model, Flatten
import utils_multiMNIST as U
path_to_data_dir = '../Datasets/'
use_mini_dataset = True

batch_size = 64
nb_classes = 10
nb_epoch = 15
num_classes = 10
img_rows, img_cols = 42, 28 # input image dimensions


class CNN(nn.Module):
    def __init__(self, input_dimension):
        super(CNN, self).__init__()
        self.linear1 = nn.Linear(input_dimension, 64)
        self.linear2 = nn.Linear(64, 64)
        self.linear_first_digit = nn.Linear(64, 10)
        self.linear_second_digit = nn.Linear(64, 10)

        self.encoder = nn.Sequential(
              nn.Conv2d(1, 8, (3, 3)),
              nn.ReLU(),
              nn.MaxPool2d((2, 2)),
              nn.Conv2d(8, 16, (3, 3)),
              nn.ReLU(),
              nn.MaxPool2d((2, 2)),
              Flatten(),
              nn.Linear(720, 128),
              nn.Dropout(0.5),
        )

        self.first_digit_classifier = nn.Linear(128,10)
        self.second_digit_classifier = nn.Linear(128,10)

    def forward(self, x):
        out = self.encoder(x)
        out_first_digit = self.first_digit_classifier(out)
        out_second_digit = self.second_digit_classifier(out)
        return out_first_digit, out_second_digit


def main():
    X_train, y_train, X_test, y_test = U.get_data(path_to_data_dir, use_mini_dataset)

    # Split into train and dev
    dev_split_index = int(9 * len(X_train) / 10)
    X_dev = X_train[dev_split_index:]
    y_dev = [y_train[0][dev_split_index:], y_train[1][dev_split_index:]]
    X_train = X_train[:dev_split_index]
    y_train = [y_train[0][:dev_split_index], y_train[1][:dev_split_index]]

    permutation = np.array([i for i in range(len(X_train))])
    np.random.shuffle(permutation)
    X_train = [X_train[i] for i in permutation]
    y_train = [[y_train[0][i] for i in permutation], [y_train[1][i] for i in permutation]]

    # Split dataset into batches
    train_batches = batchify_data(X_train, y_train, batch_size)
    dev_batches = batchify_data(X_dev, y_dev, batch_size)
    test_batches = batchify_data(X_test, y_test, batch_size)

    # Load model
    input_dimension = img_rows * img_cols
    model = CNN(input_dimension)

    # Train
    train_model(train_batches, dev_batches, model)

    ## Evaluate the model on test data
    loss, acc = run_epoch(test_batches, model.eval(), None)
    print('Test loss1: {:.6f}  accuracy1: {:.6f}  loss2: {:.6f}   accuracy2: {:.6f}'.format(loss[0], acc[0], loss[1], acc[1]))

if __name__ == '__main__':
    # Specify seed for deterministic behavior, then shuffle. Do not change seed for official submissions to edx
    np.random.seed(12321)  # for reproducibility
    torch.manual_seed(12321)  # for reproducibility
    main()
"
2Bz1jaRs,mlp.py,Abhisek92,Python,Wednesday 1st of November 2023 06:30:11 AM CDT,"import numpy as np
import torch
import torch.nn as nn
import torch.nn.functional as F
from train_utils import batchify_data, run_epoch, train_model, Flatten
import utils_multiMNIST as U
path_to_data_dir = '../Datasets/'
use_mini_dataset = True

batch_size = 64
nb_classes = 10
nb_epoch = 30
num_classes = 10
img_rows, img_cols = 42, 28 # input image dimensions

class MLP(nn.Module):
    def __init__(self, input_dimension):
        super(MLP, self).__init__()
        self.flatten = Flatten()

        H = 64
        self.linear1 = nn.Linear(input_dimension, H)
        self.linear_out1 = nn.Linear(H, num_classes)
        self.linear_out2 = nn.Linear(num_classes, num_classes)

    def forward(self, x):
        xf = self.flatten(x)  # need to flatten to use linear layers

        xf_out = F.relu(self.linear1(xf))
        out_first_digit = self.linear_out1(xf_out)
        out_second_digit = self.linear_out2(out_first_digit)

        return out_first_digit, out_second_digit



def main():
    X_train, y_train, X_test, y_test = U.get_data(path_to_data_dir, use_mini_dataset)

    # Split into train and dev
    dev_split_index = int(9 * len(X_train) / 10)
    X_dev = X_train[dev_split_index:]
    y_dev = [y_train[0][dev_split_index:], y_train[1][dev_split_index:]]
    X_train = X_train[:dev_split_index]
    y_train = [y_train[0][:dev_split_index], y_train[1][:dev_split_index]]

    permutation = np.array([i for i in range(len(X_train))])
    np.random.shuffle(permutation)
    X_train = [X_train[i] for i in permutation]
    y_train = [[y_train[0][i] for i in permutation], [y_train[1][i] for i in permutation]]

    # Split dataset into batches
    train_batches = batchify_data(X_train, y_train, batch_size)
    dev_batches = batchify_data(X_dev, y_dev, batch_size)
    test_batches = batchify_data(X_test, y_test, batch_size)

    # Load model
    input_dimension = img_rows * img_cols
    model = MLP(input_dimension)

    # Train
    train_model(train_batches, dev_batches, model)

    ## Evaluate the model on test data
    loss, acc = run_epoch(test_batches, model.eval(), None)
    print('Test loss1: {:.6f}  accuracy1: {:.6f}  loss2: {:.6f}   accuracy2: {:.6f}'.format(loss[0], acc[0], loss[1], acc[1]))

if __name__ == '__main__':
    # Specify seed for deterministic behavior, then shuffle. Do not change seed for official submissions to edx
    np.random.seed(12321)  # for reproducibility
    torch.manual_seed(12321)  # for reproducibility
    main()"
mxUx9EEr,Телега грузовая (Dwarven City),Dreamlight_MCSkill,Lua,Wednesday 1st of November 2023 06:29:01 AM CDT,"{
  label = ""Грузовая телега"",
  shapes = {
    { 2,0,8,4,1,14,texture = ""sky_drive:wood/wood_2"" },
    { 2,1,6,4,2,8,texture = ""sky_drive:wood/wood_2"" },
    { 2,1,14,4,2,16,texture = ""sky_drive:wood/wood_2"" },
    { 2,2,5,4,3,6,texture = ""sky_drive:wood/wood_2"" },
    { 2,2,8,4,4,9,texture = ""sky_drive:wood/wood_2"" },
    { 2,2,13,4,4,14,texture = ""sky_drive:wood/wood_2"" },
    { 2,3,4,4,5,5,texture = ""sky_drive:wood/wood_2"" },
    { 2,4,9,4,6,10,texture = ""sky_drive:wood/wood_2"" },
    { 2,4,12,4,6,13,texture = ""sky_drive:wood/wood_2"" },
    { 2,5,3,4,11,4,texture = ""sky_drive:wood/wood_2"" },
    { 2,5,5,4,6,7,texture = ""sky_drive:wood/wood_2"" },
    { 2,5,15,4,6,16,texture = ""sky_drive:wood/wood_2"" },
    { 1,6,10,5,7,12,texture = ""sky_drive:wood/wood_2"" },
    { 2,6,7,4,7,9,texture = ""sky_drive:wood/wood_2"" },
    { 2,6,13,4,7,15,texture = ""sky_drive:wood/wood_2"" },
    { 9,6,10,16,7,12,texture = ""log_oak"" },
    { 0,7,10,1,8,11,texture = ""customnpcs:placeholder_1"", tint = 0xffff00 },
    { 0,7,11,16,9,12,texture = ""sky_drive:iron/iron_0"" },
    { 1,7,9,5,9,10,texture = ""sky_drive:wood/wood_2"" },
    { 1,7,10,16,9,12,texture = ""sky_drive:iron/iron_0"" },
    { 1,7,12,5,9,13,texture = ""sky_drive:wood/wood_2"" },
    { 6,7,2,16,8,7,texture = ""sky_drive:wood/wood_2"" },
    { 9,7,9,16,13,10,texture = ""log_oak"" },
    { 9,7,12,16,13,13,texture = ""log_oak"" },
    { 0,8,10,16,9,12,texture = ""sky_drive:iron/iron_0"" },
    { 6,8,2,7,12,7,texture = ""sky_drive:wood/wood_2"" },
    { 7,8,2,15,11,3,texture = ""planks_oak"" },
    { 7,8,5,16,12,7,texture = ""sky_drive:wood/wood_2"" },
    { 15,8,2,16,12,3,texture = ""sky_drive:wood/wood_2"" },
    { 1,9,10,5,10,12,texture = ""sky_drive:wood/wood_2"" },
    { 2,9,7,4,10,9,texture = ""sky_drive:wood/wood_2"" },
    { 2,9,13,4,10,15,texture = ""sky_drive:wood/wood_2"" },
    { 9,9,8,16,13,14,texture = ""log_oak"" },
    { 10,9,1,12,10,2,texture = ""customnpcs:placeholder_1"", tint = 0xffff00 },
    { 2,10,5,4,11,7,texture = ""sky_drive:wood/wood_2"" },
    { 2,10,9,4,12,10,texture = ""sky_drive:wood/wood_2"" },
    { 2,10,12,4,12,13,texture = ""sky_drive:wood/wood_2"" },
    { 2,10,15,4,11,16,texture = ""sky_drive:wood/wood_2"" },
    { 9,10,7,16,13,15,texture = ""log_oak"" },
    { 14,10,15,16,13,16,texture = ""log_oak"" },
    { 2,11,4,4,13,5,texture = ""sky_drive:wood/wood_2"" },
    { 7,11,2,16,12,3,texture = ""sky_drive:wood/wood_2"" },
    { 12,11,15,16,13,16,texture = ""log_oak"" },
    { 2,12,8,4,14,9,texture = ""sky_drive:wood/wood_2"" },
    { 2,12,13,4,14,14,texture = ""sky_drive:wood/wood_2"" },
    { 4,12,2,5,16,3,texture = ""sky_drive:iron/iron_0"" },
    { 5,12,1,16,13,2,texture = ""log_oak"" },
    { 5,12,2,6,13,3,texture = ""sky_drive:iron/iron_0"" },
    { 5,12,3,16,13,16,texture = ""log_oak"" },
    { 6,12,0,16,13,16,texture = ""log_oak"" },
    { 2,13,5,4,14,6,texture = ""sky_drive:wood/wood_2"" },
    { 5,13,2,7,16,16,texture = ""log_oak"" },
    { 6,13,1,7,16,16,texture = ""log_oak"" },
    { 7,13,1,16,16,2,texture = ""log_oak"" },
    { 7,13,2,16,14,16,texture = ""planks_oak"" },
    { 2,14,6,4,15,8,texture = ""sky_drive:wood/wood_2"" },
    { 2,14,14,4,15,16,texture = ""sky_drive:wood/wood_2"" },
    { 6,14,0,7,16,1,texture = ""wool_colored_white"" },
    { 7,14,7,15,16,11,texture = ""sky_drive:wood/wood_0"" },
    { 8,14,6,14,16,12,texture = ""sky_drive:wood/wood_0"" },
    { 9,14,5,13,16,13,texture = ""sky_drive:wood/wood_0"" },
    { 2,15,8,4,16,14,texture = ""sky_drive:wood/wood_2"" },
    { 4,15,1,6,16,2,texture = ""wool_colored_white"" },
    { 5,15,0,6,16,2,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 2,2,0,4,3,1,texture = ""sky_drive:wood/wood_2"" },
    { 2,3,1,4,5,2,texture = ""sky_drive:wood/wood_2"" },
    { 2,5,0,4,6,1,texture = ""sky_drive:wood/wood_2"" },
    { 2,5,2,4,11,3,texture = ""sky_drive:wood/wood_2"" },
    { 2,10,0,4,11,1,texture = ""sky_drive:wood/wood_2"" },
    { 14,10,0,16,13,16,texture = ""log_oak"" },
    { 2,11,1,4,13,2,texture = ""sky_drive:wood/wood_2"" },
    { 12,11,0,16,13,16,texture = ""log_oak"" },
    { 4,12,1,16,13,16,texture = ""log_oak"" },
    { 5,12,0,16,13,16,texture = ""log_oak"" },
    { 2,13,0,4,14,1,texture = ""sky_drive:wood/wood_2"" },
    { 4,13,5,5,16,6,texture = ""sky_drive:iron/iron_0"" },
    { 5,13,0,7,16,16,texture = ""log_oak"" },
    { 7,13,0,16,14,16,texture = ""planks_oak"" },
    { 7,14,1,15,16,9,texture = ""sky_drive:box/box_4"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 2,0,8,4,1,14,texture = ""sky_drive:wood/wood_2"" },
    { 2,1,6,4,2,8,texture = ""sky_drive:wood/wood_2"" },
    { 2,1,14,4,2,16,texture = ""sky_drive:wood/wood_2"" },
    { 2,2,5,4,3,6,texture = ""sky_drive:wood/wood_2"" },
    { 2,2,8,4,4,9,texture = ""sky_drive:wood/wood_2"" },
    { 2,2,13,4,4,14,texture = ""sky_drive:wood/wood_2"" },
    { 2,3,4,4,5,5,texture = ""sky_drive:wood/wood_2"" },
    { 2,4,9,4,6,10,texture = ""sky_drive:wood/wood_2"" },
    { 2,4,12,4,6,13,texture = ""sky_drive:wood/wood_2"" },
    { 2,5,3,4,11,4,texture = ""sky_drive:wood/wood_2"" },
    { 2,5,5,4,6,7,texture = ""sky_drive:wood/wood_2"" },
    { 2,5,15,4,6,16,texture = ""sky_drive:wood/wood_2"" },
    { 1,6,10,5,7,12,texture = ""sky_drive:wood/wood_2"" },
    { 2,6,7,4,7,9,texture = ""sky_drive:wood/wood_2"" },
    { 2,6,13,4,7,15,texture = ""sky_drive:wood/wood_2"" },
    { 9,6,10,16,7,12,texture = ""log_oak"" },
    { 0,7,10,16,8,12,texture = ""sky_drive:iron/iron_0"" },
    { 1,7,9,5,9,10,texture = ""sky_drive:wood/wood_2"" },
    { 1,7,12,5,9,13,texture = ""sky_drive:wood/wood_2"" },
    { 9,7,9,16,16,10,texture = ""log_oak"" },
    { 9,7,12,16,16,13,texture = ""log_oak"" },
    { 14,7,13,16,16,14,texture = ""log_oak"" },
    { 15,7,14,16,9,16,texture = ""log_oak"" },
    { 0,8,10,16,9,11,texture = ""sky_drive:iron/iron_0"" },
    { 0,8,11,1,9,12,texture = ""customnpcs:placeholder_1"", tint = 0xffff00 },
    { 1,8,11,16,9,12,texture = ""sky_drive:iron/iron_0"" },
    { 1,9,10,5,10,12,texture = ""sky_drive:wood/wood_2"" },
    { 2,9,7,4,10,9,texture = ""sky_drive:wood/wood_2"" },
    { 2,9,13,4,10,15,texture = ""sky_drive:wood/wood_2"" },
    { 9,9,8,16,16,14,texture = ""log_oak"" },
    { 2,10,5,4,11,7,texture = ""sky_drive:wood/wood_2"" },
    { 2,10,9,4,12,10,texture = ""sky_drive:wood/wood_2"" },
    { 2,10,12,4,12,13,texture = ""sky_drive:wood/wood_2"" },
    { 2,10,15,4,11,16,texture = ""sky_drive:wood/wood_2"" },
    { 9,10,7,16,16,15,texture = ""log_oak"" },
    { 14,10,0,16,13,15,texture = ""log_oak"" },
    { 2,11,4,4,13,5,texture = ""sky_drive:wood/wood_2"" },
    { 12,11,0,16,13,15,texture = ""log_oak"" },
    { 2,12,8,4,14,9,texture = ""sky_drive:wood/wood_2"" },
    { 2,12,13,4,14,14,texture = ""sky_drive:wood/wood_2"" },
    { 4,12,0,16,13,6,texture = ""log_oak"" },
    { 5,12,6,16,16,16,texture = ""log_oak"" },
    { 2,13,5,4,14,6,texture = ""sky_drive:wood/wood_2"" },
    { 4,13,5,5,16,6,texture = ""sky_drive:iron/iron_0"" },
    { 5,13,0,7,16,16,texture = ""log_oak"" },
    { 7,13,0,16,14,5,texture = ""planks_oak"" },
    { 7,13,5,16,16,16,texture = ""log_oak"" },
    { 2,14,6,4,15,8,texture = ""sky_drive:wood/wood_2"" },
    { 2,14,14,4,15,16,texture = ""sky_drive:wood/wood_2"" },
    { 2,15,8,4,16,14,texture = ""sky_drive:wood/wood_2"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 2,2,0,4,3,1,texture = ""sky_drive:wood/wood_2"" },
    { 2,3,1,4,5,2,texture = ""sky_drive:wood/wood_2"" },
    { 15,4,11,16,6,16,texture = ""log_oak"" },
    { 2,5,0,4,6,1,texture = ""sky_drive:wood/wood_2"" },
    { 2,5,2,4,11,3,texture = ""sky_drive:wood/wood_2"" },
    { 15,5,7,16,6,16,texture = ""log_oak"" },
    { 15,6,2,16,8,7,texture = ""log_oak"" },
    { 15,6,7,16,7,11,texture = ""log_oak"" },
    { 15,7,0,16,8,7,texture = ""log_oak"" },
    { 15,8,0,16,9,2,texture = ""log_oak"" },
    { 2,10,0,4,11,1,texture = ""sky_drive:wood/wood_2"" },
    { 2,11,1,4,13,2,texture = ""sky_drive:wood/wood_2"" },
    { 5,12,0,16,16,3,texture = ""log_oak"" },
    { 6,12,3,16,16,4,texture = ""log_oak"" },
    { 2,13,0,4,14,1,texture = ""sky_drive:wood/wood_2"" },
    { 5,13,3,16,16,4,texture = ""log_oak"" },
    { 6,13,4,16,16,5,texture = ""log_oak"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 3,0,2,4,16,3,texture = ""wool_colored_white"" },
    { 4,0,1,6,16,2,texture = ""wool_colored_white"" },
    { 4,0,2,5,16,3,texture = ""sky_drive:iron/iron_0"" },
    { 4,0,3,5,16,4,texture = ""wool_colored_white"" },
    { 5,0,0,6,16,2,texture = ""wool_colored_white"" },
    { 5,0,2,7,3,16,texture = ""log_oak"" },
    { 6,0,0,7,16,1,texture = ""wool_colored_white"" },
    { 7,0,7,15,5,11,texture = ""sky_drive:wood/wood_0"" },
    { 8,0,6,14,5,12,texture = ""sky_drive:wood/wood_0"" },
    { 9,0,5,13,5,13,texture = ""sky_drive:wood/wood_0"" },
    { 3,1,1,6,16,2,texture = ""wool_colored_white"" },
    { 4,1,4,5,16,16,texture = ""wool_colored_white"" },
    { 3,3,3,6,16,4,texture = ""wool_colored_white"" },
    { 5,3,2,6,5,16,texture = ""wool_colored_white"" },
    { 6,3,1,8,16,2,texture = ""wool_colored_white"" },
    { 5,5,4,6,16,16,texture = ""wool_colored_white"" },
    { 7,5,7,8,7,11,texture = ""sky_drive:wood/wood_0"" },
    { 8,5,1,9,16,2,texture = ""wool_colored_white"" },
    { 8,5,6,9,7,7,texture = ""sky_drive:wood/wood_0"" },
    { 8,5,7,14,6,11,texture = ""planks_oak"" },
    { 8,5,11,9,7,12,texture = ""sky_drive:wood/wood_0"" },
    { 9,5,5,13,7,6,texture = ""sky_drive:wood/wood_0"" },
    { 9,5,6,13,6,12,texture = ""planks_oak"" },
    { 9,5,12,13,7,13,texture = ""sky_drive:wood/wood_0"" },
    { 13,5,6,14,7,7,texture = ""sky_drive:wood/wood_0"" },
    { 13,5,11,14,7,12,texture = ""sky_drive:wood/wood_0"" },
    { 14,5,7,15,7,11,texture = ""sky_drive:wood/wood_0"" },
    { 7,6,0,8,16,2,texture = ""wool_colored_white"" },
    { 9,8,1,10,16,2,texture = ""wool_colored_white"" },
    { 8,9,0,9,16,2,texture = ""wool_colored_white"" },
    { 10,12,1,11,16,2,texture = ""wool_colored_white"" },
    { 9,13,0,10,16,2,texture = ""wool_colored_white"" },
    { 11,15,1,12,16,2,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 3,0,5,4,16,6,texture = ""wool_colored_white"" },
    { 4,0,4,5,16,5,texture = ""wool_colored_white"" },
    { 4,0,5,5,16,6,texture = ""sky_drive:iron/iron_0"" },
    { 4,0,6,5,16,7,texture = ""wool_colored_white"" },
    { 5,0,0,7,3,16,texture = ""log_oak"" },
    { 7,0,1,15,5,9,texture = ""sky_drive:box/box_4"" },
    { 3,1,4,4,16,6,texture = ""wool_colored_white"" },
    { 4,1,0,5,16,5,texture = ""wool_colored_white"" },
    { 4,1,7,5,16,16,texture = ""wool_colored_white"" },
    { 3,3,6,6,16,7,texture = ""wool_colored_white"" },
    { 5,3,0,6,16,5,texture = ""wool_colored_white"" },
    { 5,3,5,6,5,16,texture = ""wool_colored_white"" },
    { 5,5,7,6,16,16,texture = ""wool_colored_white"" },
    { 7,5,1,8,6,9,texture = ""sky_drive:box/box_4"" },
    { 8,5,1,15,6,2,texture = ""sky_drive:box/box_4"" },
    { 8,5,2,14,6,8,texture = ""sky_drive:box/box_top_4"" },
    { 8,5,8,15,6,9,texture = ""sky_drive:box/box_4"" },
    { 14,5,2,15,6,9,texture = ""sky_drive:box/box_4"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 3,0,5,4,16,6,texture = ""wool_colored_white"" },
    { 4,0,4,5,16,5,texture = ""wool_colored_white"" },
    { 4,0,5,5,16,6,texture = ""sky_drive:iron/iron_0"" },
    { 5,0,0,7,2,16,texture = ""log_oak"" },
    { 7,0,5,16,2,16,texture = ""log_oak"" },
    { 3,1,4,4,16,6,texture = ""wool_colored_white"" },
    { 4,1,0,5,16,5,texture = ""wool_colored_white"" },
    { 4,1,6,5,16,7,texture = ""wool_colored_white"" },
    { 5,2,0,6,3,16,texture = ""log_oak"" },
    { 6,2,0,7,3,6,texture = ""log_oak"" },
    { 6,2,6,16,3,16,texture = ""planks_oak"" },
    { 7,2,5,16,3,6,texture = ""log_oak"" },
    { 3,3,6,5,16,7,texture = ""wool_colored_white"" },
    { 5,3,0,6,16,6,texture = ""wool_colored_white"" },
    { 6,3,5,9,16,6,texture = ""wool_colored_white"" },
    { 13,3,10,14,11,11,texture = ""sky_drive:iron/iron_0"" },
    { 13,3,11,14,5,12,texture = ""sky_drive:iron/iron_0"" },
    { 9,4,5,10,16,6,texture = ""wool_colored_white"" },
    { 13,4,12,14,5,16,texture = ""sky_drive:iron/iron_0"" },
    { 12,5,12,16,6,16,texture = ""planks_oak"" },
    { 10,6,5,11,16,6,texture = ""wool_colored_white"" },
    { 12,7,11,16,9,12,texture = ""planks_oak"" },
    { 11,9,5,12,16,6,texture = ""wool_colored_white"" },
    { 12,10,11,16,12,12,texture = ""planks_oak"" },
    { 14,10,10,16,11,11,texture = ""sky_drive:iron/iron_0"" },
    { 12,12,5,13,16,6,texture = ""wool_colored_white"" },
    { 13,14,5,14,16,6,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 5,0,0,16,2,4,texture = ""log_oak"" },
    { 6,0,4,16,2,5,texture = ""log_oak"" },
    { 12,0,5,16,1,6,texture = ""log_oak"" },
    { 12,1,6,16,2,7,texture = ""log_oak"" },
    { 5,2,0,6,3,4,texture = ""log_oak"" },
    { 6,2,0,16,3,3,texture = ""planks_oak"" },
    { 6,2,3,7,3,5,texture = ""log_oak"" },
    { 7,2,3,16,3,4,texture = ""planks_oak"" },
    { 7,2,4,11,3,5,texture = ""log_oak"" },
    { 11,2,4,12,3,5,texture = ""sky_drive:iron/iron_0"" },
    { 12,2,4,16,3,5,texture = ""log_oak"" },
    { 12,2,7,16,3,8,texture = ""log_oak"" },
    { 11,3,5,12,4,7,texture = ""sky_drive:iron/iron_0"" },
    { 12,3,8,16,4,9,texture = ""log_oak"" },
    { 12,4,7,13,5,9,texture = ""sky_drive:iron/iron_0"" },
    { 13,4,8,16,5,9,texture = ""log_oak"" },
    { 12,5,0,16,6,1,texture = ""planks_oak"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 3,0,1,12,1,2,texture = ""wool_colored_white"" },
    { 3,0,2,4,1,4,texture = ""wool_colored_white"" },
    { 4,0,2,5,1,3,texture = ""sky_drive:iron/iron_0"" },
    { 4,0,3,6,1,16,texture = ""wool_colored_white"" },
    { 6,0,0,11,2,2,texture = ""wool_colored_white"" },
    { 4,1,1,12,3,2,texture = ""wool_colored_white"" },
    { 4,1,2,5,3,4,texture = ""wool_colored_white"" },
    { 5,1,2,6,3,3,texture = ""sky_drive:iron/iron_0"" },
    { 5,1,3,7,3,16,texture = ""wool_colored_white"" },
    { 7,2,0,11,4,2,texture = ""wool_colored_white"" },
    { 12,2,1,13,9,2,texture = ""wool_colored_white"" },
    { 5,3,1,13,5,2,texture = ""wool_colored_white"" },
    { 5,3,2,6,5,4,texture = ""wool_colored_white"" },
    { 6,3,2,7,5,3,texture = ""sky_drive:iron/iron_0"" },
    { 6,3,3,8,5,16,texture = ""wool_colored_white"" },
    { 11,3,0,12,7,2,texture = ""wool_colored_white"" },
    { 8,4,0,12,5,2,texture = ""wool_colored_white"" },
    { 13,4,1,14,9,2,texture = ""wool_colored_white"" },
    { 6,5,1,16,6,2,texture = ""wool_colored_white"" },
    { 6,5,2,7,6,4,texture = ""wool_colored_white"" },
    { 7,5,2,8,6,3,texture = ""sky_drive:iron/iron_0"" },
    { 7,5,3,10,6,16,texture = ""wool_colored_white"" },
    { 9,5,0,13,6,2,texture = ""wool_colored_white"" },
    { 7,6,1,16,7,2,texture = ""wool_colored_white"" },
    { 7,6,2,8,7,4,texture = ""wool_colored_white"" },
    { 8,6,2,10,7,3,texture = ""sky_drive:iron/iron_0"" },
    { 8,6,3,16,7,16,texture = ""wool_colored_white"" },
    { 12,6,0,16,8,2,texture = ""wool_colored_white"" },
    { 8,7,1,16,8,2,texture = ""wool_colored_white"" },
    { 8,7,2,10,8,4,texture = ""wool_colored_white"" },
    { 10,7,2,16,8,3,texture = ""sky_drive:iron/iron_0"" },
    { 10,7,3,16,8,16,texture = ""wool_colored_white"" },
    { 10,8,1,16,9,4,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 3,0,4,4,1,7,texture = ""wool_colored_white"" },
    { 4,0,0,6,1,5,texture = ""wool_colored_white"" },
    { 4,0,5,5,1,6,texture = ""sky_drive:iron/iron_0"" },
    { 4,0,6,6,1,16,texture = ""wool_colored_white"" },
    { 4,1,4,5,3,7,texture = ""wool_colored_white"" },
    { 5,1,0,7,3,5,texture = ""wool_colored_white"" },
    { 5,1,5,6,3,6,texture = ""sky_drive:iron/iron_0"" },
    { 5,1,6,7,3,16,texture = ""wool_colored_white"" },
    { 5,3,4,6,5,7,texture = ""wool_colored_white"" },
    { 6,3,0,8,5,5,texture = ""wool_colored_white"" },
    { 6,3,5,7,5,6,texture = ""sky_drive:iron/iron_0"" },
    { 6,3,6,8,5,16,texture = ""wool_colored_white"" },
    { 6,5,4,10,6,5,texture = ""wool_colored_white"" },
    { 6,5,5,7,6,7,texture = ""wool_colored_white"" },
    { 7,5,0,10,6,5,texture = ""wool_colored_white"" },
    { 7,5,5,8,6,6,texture = ""sky_drive:iron/iron_0"" },
    { 7,5,6,10,6,16,texture = ""wool_colored_white"" },
    { 7,6,4,16,7,5,texture = ""wool_colored_white"" },
    { 7,6,5,8,7,7,texture = ""wool_colored_white"" },
    { 8,6,0,16,7,5,texture = ""wool_colored_white"" },
    { 8,6,5,10,7,6,texture = ""sky_drive:iron/iron_0"" },
    { 8,6,6,16,7,16,texture = ""wool_colored_white"" },
    { 8,7,4,16,8,5,texture = ""wool_colored_white"" },
    { 8,7,5,10,8,7,texture = ""wool_colored_white"" },
    { 10,7,0,16,8,5,texture = ""wool_colored_white"" },
    { 10,7,5,16,8,6,texture = ""sky_drive:iron/iron_0"" },
    { 10,7,6,16,8,16,texture = ""wool_colored_white"" },
    { 10,8,4,16,9,7,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 3,0,4,4,1,7,texture = ""wool_colored_white"" },
    { 4,0,0,6,1,5,texture = ""wool_colored_white"" },
    { 4,0,5,5,1,6,texture = ""sky_drive:iron/iron_0"" },
    { 4,0,6,5,3,7,texture = ""wool_colored_white"" },
    { 5,0,5,15,1,6,texture = ""wool_colored_white"" },
    { 4,1,4,5,3,7,texture = ""wool_colored_white"" },
    { 5,1,0,7,3,5,texture = ""wool_colored_white"" },
    { 5,1,5,6,3,6,texture = ""sky_drive:iron/iron_0"" },
    { 5,1,6,6,5,7,texture = ""wool_colored_white"" },
    { 6,1,5,15,3,6,texture = ""wool_colored_white"" },
    { 15,2,5,16,7,6,texture = ""wool_colored_white"" },
    { 5,3,4,6,5,7,texture = ""wool_colored_white"" },
    { 6,3,0,8,5,5,texture = ""wool_colored_white"" },
    { 6,3,5,7,5,6,texture = ""sky_drive:iron/iron_0"" },
    { 6,3,6,7,6,7,texture = ""wool_colored_white"" },
    { 7,3,5,16,5,6,texture = ""wool_colored_white"" },
    { 6,5,4,10,6,5,texture = ""wool_colored_white"" },
    { 6,5,5,7,6,7,texture = ""wool_colored_white"" },
    { 7,5,0,10,6,5,texture = ""wool_colored_white"" },
    { 7,5,5,8,6,6,texture = ""sky_drive:iron/iron_0"" },
    { 7,5,6,8,7,7,texture = ""wool_colored_white"" },
    { 8,5,5,16,6,6,texture = ""wool_colored_white"" },
    { 7,6,4,16,7,5,texture = ""wool_colored_white"" },
    { 7,6,5,8,7,7,texture = ""wool_colored_white"" },
    { 8,6,0,16,7,5,texture = ""wool_colored_white"" },
    { 8,6,5,10,7,6,texture = ""sky_drive:iron/iron_0"" },
    { 8,6,6,10,8,7,texture = ""wool_colored_white"" },
    { 10,6,5,16,7,6,texture = ""wool_colored_white"" },
    { 8,7,4,16,8,5,texture = ""wool_colored_white"" },
    { 8,7,5,10,8,7,texture = ""wool_colored_white"" },
    { 10,7,0,16,8,5,texture = ""wool_colored_white"" },
    { 10,7,5,16,8,6,texture = ""sky_drive:iron/iron_0"" },
    { 10,7,6,16,9,7,texture = ""wool_colored_white"" },
    { 10,8,4,16,9,7,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 12,0,8,14,1,14,texture = ""sky_drive:wood/wood_2"" },
    { 12,1,6,14,2,8,texture = ""sky_drive:wood/wood_2"" },
    { 12,1,14,14,2,16,texture = ""sky_drive:wood/wood_2"" },
    { 12,2,5,14,3,6,texture = ""sky_drive:wood/wood_2"" },
    { 12,2,8,14,4,9,texture = ""sky_drive:wood/wood_2"" },
    { 12,2,13,14,4,14,texture = ""sky_drive:wood/wood_2"" },
    { 12,3,4,14,5,5,texture = ""sky_drive:wood/wood_2"" },
    { 12,4,9,14,6,10,texture = ""sky_drive:wood/wood_2"" },
    { 12,4,12,14,6,13,texture = ""sky_drive:wood/wood_2"" },
    { 12,5,3,14,11,4,texture = ""sky_drive:wood/wood_2"" },
    { 12,5,5,14,6,7,texture = ""sky_drive:wood/wood_2"" },
    { 12,5,15,14,6,16,texture = ""sky_drive:wood/wood_2"" },
    { 0,6,10,7,7,12,texture = ""log_oak"" },
    { 11,6,10,15,7,12,texture = ""sky_drive:wood/wood_2"" },
    { 12,6,7,14,7,9,texture = ""sky_drive:wood/wood_2"" },
    { 12,6,13,14,7,15,texture = ""sky_drive:wood/wood_2"" },
    { 0,7,2,10,8,7,texture = ""sky_drive:wood/wood_2"" },
    { 0,7,9,7,13,10,texture = ""log_oak"" },
    { 0,7,10,15,9,12,texture = ""sky_drive:iron/iron_0"" },
    { 0,7,12,7,13,13,texture = ""log_oak"" },
    { 11,7,9,15,9,10,texture = ""sky_drive:wood/wood_2"" },
    { 11,7,12,15,9,13,texture = ""sky_drive:wood/wood_2"" },
    { 15,7,10,16,8,12,texture = ""sky_drive:iron/iron_0"" },
    { 0,8,2,1,12,3,texture = ""sky_drive:wood/wood_2"" },
    { 0,8,5,10,12,7,texture = ""sky_drive:wood/wood_2"" },
    { 1,8,2,9,11,3,texture = ""planks_oak"" },
    { 9,8,2,10,12,7,texture = ""sky_drive:wood/wood_2"" },
    { 15,8,10,16,9,11,texture = ""sky_drive:iron/iron_0"" },
    { 15,8,11,16,9,12,texture = ""customnpcs:placeholder_1"", tint = 0xffff00 },
    { 0,9,8,7,13,14,texture = ""log_oak"" },
    { 4,9,1,6,10,2,texture = ""customnpcs:placeholder_1"", tint = 0xffff00 },
    { 11,9,10,15,10,12,texture = ""sky_drive:wood/wood_2"" },
    { 12,9,7,14,10,9,texture = ""sky_drive:wood/wood_2"" },
    { 12,9,13,14,10,15,texture = ""sky_drive:wood/wood_2"" },
    { 0,10,7,7,13,15,texture = ""log_oak"" },
    { 0,10,15,2,13,16,texture = ""log_oak"" },
    { 12,10,5,14,11,7,texture = ""sky_drive:wood/wood_2"" },
    { 12,10,9,14,12,10,texture = ""sky_drive:wood/wood_2"" },
    { 12,10,12,14,12,13,texture = ""sky_drive:wood/wood_2"" },
    { 12,10,15,14,11,16,texture = ""sky_drive:wood/wood_2"" },
    { 1,11,2,10,12,3,texture = ""sky_drive:wood/wood_2"" },
    { 2,11,15,4,13,16,texture = ""log_oak"" },
    { 12,11,4,14,13,5,texture = ""sky_drive:wood/wood_2"" },
    { 0,12,0,10,13,16,texture = ""log_oak"" },
    { 10,12,1,11,13,2,texture = ""log_oak"" },
    { 10,12,2,12,13,3,texture = ""sky_drive:iron/iron_0"" },
    { 10,12,3,11,16,16,texture = ""log_oak"" },
    { 12,12,8,14,14,9,texture = ""sky_drive:wood/wood_2"" },
    { 12,12,13,14,14,14,texture = ""sky_drive:wood/wood_2"" },
    { 0,13,1,10,16,2,texture = ""log_oak"" },
    { 0,13,2,9,14,16,texture = ""planks_oak"" },
    { 9,13,2,11,16,16,texture = ""log_oak"" },
    { 11,13,2,12,16,3,texture = ""sky_drive:iron/iron_0"" },
    { 12,13,5,14,14,6,texture = ""sky_drive:wood/wood_2"" },
    { 1,14,3,9,16,11,texture = ""sky_drive:box/box_4"" },
    { 9,14,0,10,16,1,texture = ""wool_colored_white"" },
    { 12,14,6,14,15,8,texture = ""sky_drive:wood/wood_2"" },
    { 12,14,14,14,15,16,texture = ""sky_drive:wood/wood_2"" },
    { 10,15,0,11,16,2,texture = ""wool_colored_white"" },
    { 12,15,8,14,16,14,texture = ""sky_drive:wood/wood_2"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 12,2,0,14,3,1,texture = ""sky_drive:wood/wood_2"" },
    { 12,3,1,14,5,2,texture = ""sky_drive:wood/wood_2"" },
    { 12,5,0,14,6,1,texture = ""sky_drive:wood/wood_2"" },
    { 12,5,2,14,11,3,texture = ""sky_drive:wood/wood_2"" },
    { 0,10,0,2,13,16,texture = ""log_oak"" },
    { 12,10,0,14,11,1,texture = ""sky_drive:wood/wood_2"" },
    { 2,11,0,4,13,16,texture = ""log_oak"" },
    { 12,11,1,14,13,2,texture = ""sky_drive:wood/wood_2"" },
    { 4,12,0,11,13,16,texture = ""log_oak"" },
    { 11,12,1,12,13,16,texture = ""log_oak"" },
    { 0,13,0,9,14,16,texture = ""planks_oak"" },
    { 9,13,0,11,16,16,texture = ""log_oak"" },
    { 11,13,5,12,16,6,texture = ""sky_drive:iron/iron_0"" },
    { 12,13,0,14,14,1,texture = ""sky_drive:wood/wood_2"" },
    { 1,14,10,9,16,14,texture = ""sky_drive:wood/wood_0"" },
    { 2,14,9,8,16,15,texture = ""sky_drive:wood/wood_0"" },
    { 3,14,8,7,16,16,texture = ""sky_drive:wood/wood_0"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 12,0,8,14,1,14,texture = ""sky_drive:wood/wood_2"" },
    { 12,1,6,14,2,8,texture = ""sky_drive:wood/wood_2"" },
    { 12,1,14,14,2,16,texture = ""sky_drive:wood/wood_2"" },
    { 12,2,5,14,3,6,texture = ""sky_drive:wood/wood_2"" },
    { 12,2,8,14,4,9,texture = ""sky_drive:wood/wood_2"" },
    { 12,2,13,14,4,14,texture = ""sky_drive:wood/wood_2"" },
    { 12,3,4,14,5,5,texture = ""sky_drive:wood/wood_2"" },
    { 12,4,9,14,6,10,texture = ""sky_drive:wood/wood_2"" },
    { 12,4,12,14,6,13,texture = ""sky_drive:wood/wood_2"" },
    { 12,5,3,14,11,4,texture = ""sky_drive:wood/wood_2"" },
    { 12,5,5,14,6,7,texture = ""sky_drive:wood/wood_2"" },
    { 12,5,15,14,6,16,texture = ""sky_drive:wood/wood_2"" },
    { 0,6,10,7,7,12,texture = ""log_oak"" },
    { 11,6,10,15,7,12,texture = ""sky_drive:wood/wood_2"" },
    { 12,6,7,14,7,9,texture = ""sky_drive:wood/wood_2"" },
    { 12,6,13,14,7,15,texture = ""sky_drive:wood/wood_2"" },
    { 0,7,9,7,16,10,texture = ""log_oak"" },
    { 0,7,10,15,9,12,texture = ""sky_drive:iron/iron_0"" },
    { 0,7,12,7,16,13,texture = ""log_oak"" },
    { 0,7,13,2,16,14,texture = ""log_oak"" },
    { 0,7,14,1,9,16,texture = ""log_oak"" },
    { 11,7,9,15,9,10,texture = ""sky_drive:wood/wood_2"" },
    { 11,7,12,15,9,13,texture = ""sky_drive:wood/wood_2"" },
    { 15,7,10,16,8,11,texture = ""customnpcs:placeholder_1"", tint = 0xffff00 },
    { 15,7,11,16,9,12,texture = ""sky_drive:iron/iron_0"" },
    { 15,8,10,16,9,12,texture = ""sky_drive:iron/iron_0"" },
    { 0,9,8,7,16,14,texture = ""log_oak"" },
    { 11,9,10,15,10,12,texture = ""sky_drive:wood/wood_2"" },
    { 12,9,7,14,10,9,texture = ""sky_drive:wood/wood_2"" },
    { 12,9,13,14,10,15,texture = ""sky_drive:wood/wood_2"" },
    { 0,10,0,2,13,15,texture = ""log_oak"" },
    { 2,10,7,7,16,15,texture = ""log_oak"" },
    { 12,10,5,14,11,7,texture = ""sky_drive:wood/wood_2"" },
    { 12,10,9,14,12,10,texture = ""sky_drive:wood/wood_2"" },
    { 12,10,12,14,12,13,texture = ""sky_drive:wood/wood_2"" },
    { 12,10,15,14,11,16,texture = ""sky_drive:wood/wood_2"" },
    { 2,11,0,4,13,15,texture = ""log_oak"" },
    { 12,11,4,14,13,5,texture = ""sky_drive:wood/wood_2"" },
    { 0,12,15,11,16,16,texture = ""log_oak"" },
    { 4,12,0,11,13,16,texture = ""log_oak"" },
    { 11,12,0,12,13,6,texture = ""log_oak"" },
    { 12,12,8,14,14,9,texture = ""sky_drive:wood/wood_2"" },
    { 12,12,13,14,14,14,texture = ""sky_drive:wood/wood_2"" },
    { 0,13,0,9,14,5,texture = ""planks_oak"" },
    { 0,13,5,11,16,16,texture = ""log_oak"" },
    { 9,13,0,11,16,16,texture = ""log_oak"" },
    { 11,13,5,12,16,6,texture = ""sky_drive:iron/iron_0"" },
    { 12,13,5,14,14,6,texture = ""sky_drive:wood/wood_2"" },
    { 12,14,6,14,15,8,texture = ""sky_drive:wood/wood_2"" },
    { 12,14,14,14,15,16,texture = ""sky_drive:wood/wood_2"" },
    { 12,15,8,14,16,14,texture = ""sky_drive:wood/wood_2"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 12,2,0,14,3,1,texture = ""sky_drive:wood/wood_2"" },
    { 12,3,1,14,5,2,texture = ""sky_drive:wood/wood_2"" },
    { 0,4,11,1,6,16,texture = ""log_oak"" },
    { 0,5,7,1,6,16,texture = ""log_oak"" },
    { 12,5,0,14,6,1,texture = ""sky_drive:wood/wood_2"" },
    { 12,5,2,14,11,3,texture = ""sky_drive:wood/wood_2"" },
    { 0,6,2,1,8,7,texture = ""log_oak"" },
    { 0,6,7,1,7,11,texture = ""log_oak"" },
    { 0,7,0,1,8,7,texture = ""log_oak"" },
    { 0,8,0,1,9,2,texture = ""log_oak"" },
    { 12,10,0,14,11,1,texture = ""sky_drive:wood/wood_2"" },
    { 12,11,1,14,13,2,texture = ""sky_drive:wood/wood_2"" },
    { 0,12,0,10,16,4,texture = ""log_oak"" },
    { 10,12,0,11,16,3,texture = ""log_oak"" },
    { 0,13,4,10,16,5,texture = ""log_oak"" },
    { 10,13,3,11,16,4,texture = ""log_oak"" },
    { 12,13,0,14,14,1,texture = ""sky_drive:wood/wood_2"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 1,0,3,9,5,11,texture = ""sky_drive:box/box_4"" },
    { 9,0,0,11,16,1,texture = ""wool_colored_white"" },
    { 9,0,2,11,3,16,texture = ""log_oak"" },
    { 10,0,1,12,16,2,texture = ""wool_colored_white"" },
    { 11,0,2,12,16,3,texture = ""sky_drive:iron/iron_0"" },
    { 11,0,3,12,16,4,texture = ""wool_colored_white"" },
    { 12,0,2,13,16,3,texture = ""wool_colored_white"" },
    { 11,1,4,12,16,16,texture = ""wool_colored_white"" },
    { 12,1,1,13,16,3,texture = ""wool_colored_white"" },
    { 8,3,1,13,16,2,texture = ""wool_colored_white"" },
    { 10,3,2,11,5,16,texture = ""wool_colored_white"" },
    { 12,3,3,13,16,4,texture = ""wool_colored_white"" },
    { 1,5,3,2,6,11,texture = ""sky_drive:box/box_4"" },
    { 2,5,3,9,6,4,texture = ""sky_drive:box/box_4"" },
    { 2,5,4,8,6,10,texture = ""sky_drive:box/box2_top_1"" },
    { 2,5,10,9,6,11,texture = ""sky_drive:box/box_4"" },
    { 7,5,1,13,16,2,texture = ""wool_colored_white"" },
    { 8,5,4,9,6,11,texture = ""sky_drive:box/box_4"" },
    { 10,5,3,12,16,16,texture = ""wool_colored_white"" },
    { 8,6,0,11,16,2,texture = ""wool_colored_white"" },
    { 6,8,1,13,16,2,texture = ""wool_colored_white"" },
    { 7,9,0,11,16,2,texture = ""wool_colored_white"" },
    { 5,12,1,13,16,2,texture = ""wool_colored_white"" },
    { 6,13,0,11,16,2,texture = ""wool_colored_white"" },
    { 4,15,1,13,16,2,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 1,0,10,9,5,14,texture = ""sky_drive:wood/wood_0"" },
    { 2,0,9,8,5,15,texture = ""sky_drive:wood/wood_0"" },
    { 3,0,8,7,5,16,texture = ""sky_drive:wood/wood_0"" },
    { 9,0,0,11,3,16,texture = ""log_oak"" },
    { 11,0,4,12,16,5,texture = ""wool_colored_white"" },
    { 11,0,5,12,16,6,texture = ""sky_drive:iron/iron_0"" },
    { 11,0,6,12,16,7,texture = ""wool_colored_white"" },
    { 12,0,5,13,16,6,texture = ""wool_colored_white"" },
    { 11,1,0,12,16,5,texture = ""wool_colored_white"" },
    { 11,1,7,12,16,16,texture = ""wool_colored_white"" },
    { 12,1,4,13,16,6,texture = ""wool_colored_white"" },
    { 10,3,0,12,16,5,texture = ""wool_colored_white"" },
    { 10,3,5,11,5,16,texture = ""wool_colored_white"" },
    { 12,3,6,13,16,7,texture = ""wool_colored_white"" },
    { 1,5,10,2,7,14,texture = ""sky_drive:wood/wood_0"" },
    { 2,5,9,3,7,10,texture = ""sky_drive:wood/wood_0"" },
    { 2,5,10,8,6,14,texture = ""planks_oak"" },
    { 2,5,14,3,7,15,texture = ""sky_drive:wood/wood_0"" },
    { 3,5,8,7,7,9,texture = ""sky_drive:wood/wood_0"" },
    { 3,5,9,7,6,15,texture = ""planks_oak"" },
    { 3,5,15,7,7,16,texture = ""sky_drive:wood/wood_0"" },
    { 7,5,9,8,7,10,texture = ""sky_drive:wood/wood_0"" },
    { 7,5,14,8,7,15,texture = ""sky_drive:wood/wood_0"" },
    { 8,5,10,9,7,14,texture = ""sky_drive:wood/wood_0"" },
    { 10,5,6,12,16,16,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 0,0,5,11,2,16,texture = ""log_oak"" },
    { 9,0,0,11,2,16,texture = ""log_oak"" },
    { 11,0,4,12,16,5,texture = ""wool_colored_white"" },
    { 11,0,5,12,16,6,texture = ""sky_drive:iron/iron_0"" },
    { 12,0,5,13,16,6,texture = ""wool_colored_white"" },
    { 11,1,0,12,16,5,texture = ""wool_colored_white"" },
    { 11,1,6,12,16,7,texture = ""wool_colored_white"" },
    { 12,1,4,13,16,6,texture = ""wool_colored_white"" },
    { 0,2,5,11,3,6,texture = ""log_oak"" },
    { 0,2,6,10,3,16,texture = ""planks_oak"" },
    { 9,2,0,11,3,6,texture = ""log_oak"" },
    { 10,2,6,11,3,16,texture = ""log_oak"" },
    { 2,3,10,3,11,11,texture = ""sky_drive:iron/iron_0"" },
    { 2,3,11,3,5,12,texture = ""sky_drive:iron/iron_0"" },
    { 8,3,5,11,16,6,texture = ""wool_colored_white"" },
    { 10,3,0,12,16,5,texture = ""wool_colored_white"" },
    { 12,3,6,13,16,7,texture = ""wool_colored_white"" },
    { 2,4,12,3,5,16,texture = ""sky_drive:iron/iron_0"" },
    { 7,4,5,11,16,6,texture = ""wool_colored_white"" },
    { 0,5,12,4,6,16,texture = ""planks_oak"" },
    { 6,5,5,11,16,6,texture = ""wool_colored_white"" },
    { 5,6,5,11,16,6,texture = ""wool_colored_white"" },
    { 0,7,11,4,9,12,texture = ""planks_oak"" },
    { 4,9,5,11,16,6,texture = ""wool_colored_white"" },
    { 0,10,10,3,11,11,texture = ""sky_drive:iron/iron_0"" },
    { 0,10,11,4,12,12,texture = ""planks_oak"" },
    { 3,12,5,11,16,6,texture = ""wool_colored_white"" },
    { 2,14,5,11,16,6,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 0,0,0,10,2,5,texture = ""log_oak"" },
    { 0,0,5,4,1,6,texture = ""log_oak"" },
    { 10,0,0,11,3,4,texture = ""log_oak"" },
    { 0,1,6,4,2,7,texture = ""log_oak"" },
    { 0,2,0,9,3,4,texture = ""planks_oak"" },
    { 0,2,4,4,3,5,texture = ""log_oak"" },
    { 0,2,7,4,3,8,texture = ""log_oak"" },
    { 4,2,4,5,3,5,texture = ""sky_drive:iron/iron_0"" },
    { 5,2,4,10,3,5,texture = ""log_oak"" },
    { 9,2,0,10,3,3,texture = ""planks_oak"" },
    { 9,2,3,10,3,5,texture = ""log_oak"" },
    { 0,3,8,3,5,9,texture = ""log_oak"" },
    { 3,3,8,4,4,9,texture = ""log_oak"" },
    { 4,3,5,5,4,7,texture = ""sky_drive:iron/iron_0"" },
    { 3,4,7,4,5,9,texture = ""sky_drive:iron/iron_0"" },
    { 0,5,0,4,6,1,texture = ""planks_oak"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 4,0,1,6,9,2,texture = ""wool_colored_white"" },
    { 5,0,0,7,6,2,texture = ""wool_colored_white"" },
    { 7,0,0,10,2,2,texture = ""wool_colored_white"" },
    { 10,0,1,11,5,2,texture = ""wool_colored_white"" },
    { 10,0,3,11,3,16,texture = ""wool_colored_white"" },
    { 11,0,1,12,3,2,texture = ""wool_colored_white"" },
    { 11,0,2,12,1,3,texture = ""sky_drive:iron/iron_0"" },
    { 11,0,3,12,1,16,texture = ""wool_colored_white"" },
    { 12,0,1,13,1,4,texture = ""wool_colored_white"" },
    { 9,1,3,11,3,16,texture = ""wool_colored_white"" },
    { 10,1,2,11,3,3,texture = ""sky_drive:iron/iron_0"" },
    { 11,1,2,12,3,4,texture = ""wool_colored_white"" },
    { 3,2,1,6,9,2,texture = ""wool_colored_white"" },
    { 7,2,0,9,4,2,texture = ""wool_colored_white"" },
    { 9,2,1,10,6,2,texture = ""wool_colored_white"" },
    { 4,3,0,9,4,2,texture = ""wool_colored_white"" },
    { 8,3,3,10,5,16,texture = ""wool_colored_white"" },
    { 9,3,2,10,5,3,texture = ""sky_drive:iron/iron_0"" },
    { 10,3,2,11,5,4,texture = ""wool_colored_white"" },
    { 2,4,1,6,9,2,texture = ""wool_colored_white"" },
    { 4,4,0,8,5,2,texture = ""wool_colored_white"" },
    { 8,4,1,11,5,2,texture = ""wool_colored_white"" },
    { 0,5,1,6,9,2,texture = ""wool_colored_white"" },
    { 3,5,0,7,6,2,texture = ""wool_colored_white"" },
    { 6,5,3,8,7,16,texture = ""wool_colored_white"" },
    { 7,5,1,10,6,2,texture = ""wool_colored_white"" },
    { 8,5,2,9,6,3,texture = ""sky_drive:iron/iron_0"" },
    { 8,5,3,9,6,16,texture = ""wool_colored_white"" },
    { 9,5,2,10,6,4,texture = ""wool_colored_white"" },
    { 0,6,0,4,8,2,texture = ""wool_colored_white"" },
    { 0,6,3,6,8,16,texture = ""wool_colored_white"" },
    { 4,6,0,5,7,2,texture = ""wool_colored_white"" },
    { 6,6,1,8,8,2,texture = ""wool_colored_white"" },
    { 6,6,2,8,7,3,texture = ""sky_drive:iron/iron_0"" },
    { 8,6,1,9,7,4,texture = ""wool_colored_white"" },
    { 0,7,2,6,8,3,texture = ""sky_drive:iron/iron_0"" },
    { 6,7,2,8,8,4,texture = ""wool_colored_white"" },
    { 0,8,2,6,9,4,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 10,0,0,11,3,5,texture = ""wool_colored_white"" },
    { 10,0,6,11,3,16,texture = ""wool_colored_white"" },
    { 11,0,0,12,1,5,texture = ""wool_colored_white"" },
    { 11,0,5,12,1,6,texture = ""sky_drive:iron/iron_0"" },
    { 11,0,6,12,1,16,texture = ""wool_colored_white"" },
    { 12,0,4,13,1,7,texture = ""wool_colored_white"" },
    { 9,1,0,11,3,5,texture = ""wool_colored_white"" },
    { 9,1,6,11,3,16,texture = ""wool_colored_white"" },
    { 10,1,5,11,3,6,texture = ""sky_drive:iron/iron_0"" },
    { 11,1,4,12,3,7,texture = ""wool_colored_white"" },
    { 8,3,0,10,5,5,texture = ""wool_colored_white"" },
    { 8,3,6,10,5,16,texture = ""wool_colored_white"" },
    { 9,3,5,10,5,6,texture = ""sky_drive:iron/iron_0"" },
    { 10,3,4,11,5,7,texture = ""wool_colored_white"" },
    { 6,5,0,8,7,5,texture = ""wool_colored_white"" },
    { 6,5,6,8,7,16,texture = ""wool_colored_white"" },
    { 8,5,0,9,6,5,texture = ""wool_colored_white"" },
    { 8,5,5,9,6,6,texture = ""sky_drive:iron/iron_0"" },
    { 8,5,6,9,6,16,texture = ""wool_colored_white"" },
    { 9,5,4,10,6,7,texture = ""wool_colored_white"" },
    { 0,6,0,6,8,5,texture = ""wool_colored_white"" },
    { 0,6,6,6,8,16,texture = ""wool_colored_white"" },
    { 6,6,5,8,7,6,texture = ""sky_drive:iron/iron_0"" },
    { 8,6,4,9,7,7,texture = ""wool_colored_white"" },
    { 0,7,5,6,8,6,texture = ""sky_drive:iron/iron_0"" },
    { 6,7,4,8,8,7,texture = ""wool_colored_white"" },
    { 0,8,4,6,9,7,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 1,0,5,6,7,6,texture = ""wool_colored_white"" },
    { 6,0,5,8,6,6,texture = ""wool_colored_white"" },
    { 8,0,5,9,5,6,texture = ""wool_colored_white"" },
    { 9,0,5,10,3,6,texture = ""wool_colored_white"" },
    { 10,0,0,11,3,5,texture = ""wool_colored_white"" },
    { 10,0,5,11,1,6,texture = ""wool_colored_white"" },
    { 11,0,0,12,1,5,texture = ""wool_colored_white"" },
    { 11,0,5,12,1,6,texture = ""sky_drive:iron/iron_0"" },
    { 11,0,6,12,3,7,texture = ""wool_colored_white"" },
    { 12,0,4,13,1,7,texture = ""wool_colored_white"" },
    { 9,1,0,11,3,5,texture = ""wool_colored_white"" },
    { 10,1,5,11,3,6,texture = ""sky_drive:iron/iron_0"" },
    { 10,1,6,12,3,7,texture = ""wool_colored_white"" },
    { 11,1,4,12,3,7,texture = ""wool_colored_white"" },
    { 0,2,5,6,7,6,texture = ""wool_colored_white"" },
    { 8,3,0,10,5,5,texture = ""wool_colored_white"" },
    { 9,3,5,10,5,6,texture = ""sky_drive:iron/iron_0"" },
    { 9,3,6,11,5,7,texture = ""wool_colored_white"" },
    { 10,3,4,11,5,7,texture = ""wool_colored_white"" },
    { 6,5,0,8,7,5,texture = ""wool_colored_white"" },
    { 8,5,0,9,6,5,texture = ""wool_colored_white"" },
    { 8,5,5,9,6,6,texture = ""sky_drive:iron/iron_0"" },
    { 8,5,6,10,6,7,texture = ""wool_colored_white"" },
    { 9,5,4,10,6,7,texture = ""wool_colored_white"" },
    { 0,6,0,6,8,5,texture = ""wool_colored_white"" },
    { 6,6,5,8,7,6,texture = ""sky_drive:iron/iron_0"" },
    { 6,6,6,8,8,7,texture = ""wool_colored_white"" },
    { 8,6,4,9,7,7,texture = ""wool_colored_white"" },
    { 0,7,5,6,8,6,texture = ""sky_drive:iron/iron_0"" },
    { 0,7,6,6,9,7,texture = ""wool_colored_white"" },
    { 6,7,4,8,8,7,texture = ""wool_colored_white"" },
    { 0,8,4,6,9,7,texture = ""wool_colored_white"" },
  }
}"
VD0hWd8K,Untitled,squaredsausage,INI file,Wednesday 1st of November 2023 06:24:36 AM CDT,"********************
Game.ini delete this
*********************

[/Script/ShooterGame.ShooterGameMode]
BabyImprintingStatScaleMultiplier=1
BabyCuddleIntervalMultiplier=0.3
BabyCuddleGracePeriodMultiplier=1
BabyCuddleLoseImprintQualitySpeedMultiplier=1
PerLevelStatsMultiplier_DinoTamed[0]=0.0900000036
PerLevelStatsMultiplier_DinoTamed[1]=1
PerLevelStatsMultiplier_DinoTamed[2]=1
PerLevelStatsMultiplier_DinoTamed[3]=1
PerLevelStatsMultiplier_DinoTamed[4]=1
PerLevelStatsMultiplier_DinoTamed[5]=1
PerLevelStatsMultiplier_DinoTamed[6]=1
PerLevelStatsMultiplier_DinoTamed[7]=2
PerLevelStatsMultiplier_DinoTamed[8]=0.0700000003
PerLevelStatsMultiplier_DinoTamed[9]=1
PerLevelStatsMultiplier_DinoTamed[10]=1
PerLevelStatsMultiplier_DinoTamed_Add[0]=0.0399999991
PerLevelStatsMultiplier_DinoTamed_Add[1]=1
PerLevelStatsMultiplier_DinoTamed_Add[2]=1
PerLevelStatsMultiplier_DinoTamed_Add[3]=1
PerLevelStatsMultiplier_DinoTamed_Add[4]=1
PerLevelStatsMultiplier_DinoTamed_Add[5]=1
PerLevelStatsMultiplier_DinoTamed_Add[6]=1
PerLevelStatsMultiplier_DinoTamed_Add[7]=2
PerLevelStatsMultiplier_DinoTamed_Add[8]=0.0399999991
PerLevelStatsMultiplier_DinoTamed_Add[9]=2
PerLevelStatsMultiplier_DinoTamed_Add[10]=2
PerLevelStatsMultiplier_DinoTamed_Affinity[0]=0.189999998
PerLevelStatsMultiplier_DinoTamed_Affinity[1]=1
PerLevelStatsMultiplier_DinoTamed_Affinity[2]=1
PerLevelStatsMultiplier_DinoTamed_Affinity[3]=1
PerLevelStatsMultiplier_DinoTamed_Affinity[4]=1
PerLevelStatsMultiplier_DinoTamed_Affinity[5]=1
PerLevelStatsMultiplier_DinoTamed_Affinity[6]=1
PerLevelStatsMultiplier_DinoTamed_Affinity[7]=3
PerLevelStatsMultiplier_DinoTamed_Affinity[8]=0.189999998
PerLevelStatsMultiplier_DinoTamed_Affinity[9]=1
PerLevelStatsMultiplier_DinoTamed_Affinity[10]=1
PerLevelStatsMultiplier_DinoWild[0]=1
PerLevelStatsMultiplier_DinoWild[1]=1
PerLevelStatsMultiplier_DinoWild[2]=1
PerLevelStatsMultiplier_DinoWild[3]=1
PerLevelStatsMultiplier_DinoWild[4]=1
PerLevelStatsMultiplier_DinoWild[5]=1
PerLevelStatsMultiplier_DinoWild[6]=1
PerLevelStatsMultiplier_DinoWild[7]=1
PerLevelStatsMultiplier_DinoWild[8]=1
PerLevelStatsMultiplier_DinoWild[9]=1
PerLevelStatsMultiplier_DinoWild[10]=1
PerLevelStatsMultiplier_Player[0]=1
PerLevelStatsMultiplier_Player[1]=1
PerLevelStatsMultiplier_Player[2]=1
PerLevelStatsMultiplier_Player[3]=1
PerLevelStatsMultiplier_Player[4]=1
PerLevelStatsMultiplier_Player[5]=1
PerLevelStatsMultiplier_Player[6]=1
PerLevelStatsMultiplier_Player[7]=4
PerLevelStatsMultiplier_Player[8]=1
PerLevelStatsMultiplier_Player[9]=1
PerLevelStatsMultiplier_Player[10]=1
GlobalSpoilingTimeMultiplier=0.5
GlobalItemDecompositionTimeMultiplier=0.5
GlobalCorpseDecompositionTimeMultiplier=0.5
PvPZoneStructureDamageMultiplier=6
StructureDamageRepairCooldown=180
IncreasePvPRespawnIntervalCheckPeriod=300
IncreasePvPRespawnIntervalMultiplier=2
IncreasePvPRespawnIntervalBaseAmount=59.9999809
ResourceNoReplenishRadiusPlayers=1
ResourceNoReplenishRadiusStructures=1
CropGrowthSpeedMultiplier=5
LayEggIntervalMultiplier=0.5
PoopIntervalMultiplier=0.5
CropDecaySpeedMultiplier=0.1
MatingIntervalMultiplier=0.5
EggHatchSpeedMultiplier=20
BabyMatureSpeedMultiplier=5
BabyFoodConsumptionSpeedMultiplier=0.5
DinoTurretDamageMultiplier=1
DinoHarvestingDamageMultiplier=3.20000005
PlayerHarvestingDamageMultiplier=5
CustomRecipeEffectivenessMultiplier=1
CustomRecipeSkillMultiplier=1
AutoPvEStartTimeSeconds=0
AutoPvEStopTimeSeconds=0
KillXPMultiplier=2
HarvestXPMultiplier=2
CraftXPMultiplier=2
GenericXPMultiplier=2
SpecialXPMultiplier=2
FuelConsumptionIntervalMultiplier=3.0
PhotoModeRangeLimit=3000
bDisablePhotoMode=False
bIncreasePvPRespawnInterval=True
bAutoPvETimer=False
bAutoPvEUseSystemTime=False
bDisableFriendlyFire=True
bFlyerPlatformAllowUnalignedDinoBasing=False
bDisableLootCrates=False
bAllowCustomRecipes=True
bPassiveDefensesDamageRiderlessDinos=True
bPvEAllowTribeWar=True
bPvEAllowTribeWarCancel=True
MaxDifficulty=True
bUseSingleplayerSettings=True
bUseCorpseLocator=True
bShowCreativeMode=False
bHardLimitTurretsInRange=True
bDisableStructurePlacementCollision=False
bAllowPlatformSaddleMultiFloors=False
bAllowUnlimitedRespecs=True
bDisableDinoRiding=False
bDisableDinoTaming=False
OverrideMaxExperiencePointsPlayer=0
OverrideMaxExperiencePointsDino=0
MaxNumberOfPlayersInTribe=6
ExplorerNoteXPMultiplier=0.999989986
BossKillXPMultiplier=0.999989986
AlphaKillXPMultiplier=0.999989986
WildKillXPMultiplier=0.999989986
CaveKillXPMultiplier=0.999989986
TamedKillXPMultiplier=0.999989986
UnclaimedKillXPMultiplier=0.999989986
SupplyCrateLootQualityMultiplier=1
FishingLootQualityMultiplier=2
CraftingSkillBonusMultiplier=2
bAllowSpeedLeveling=False
bAllowFlyerSpeedLeveling=False
WildDinoCharacterFoodDrainMultiplier=2

ConfigOverrideItemMaxQuantity=(ItemClassString=""PrimalItemConsumable_RawMeat_C"",Quantity=(MaxItemQuantity=200,bIgnoreMultiplier=true))
ConfigOverrideItemMaxQuantity=(ItemClassString=""PrimalItemConsumable_CookedMeat_Jerky_C"",Quantity=(MaxItemQuantity=100,bIgnoreMultiplier=true))
ConfigOverrideItemMaxQuantity=(ItemClassString=""PrimalItemConsumable_RawPrimeMeat_C"",Quantity=(MaxItemQuantity=10,bIgnoreMultiplier=true))
ConfigOverrideItemMaxQuantity=(ItemClassString=""PrimalItemConsumable_CookedPrimeMeat_C"",Quantity=(MaxItemQuantity=100,bIgnoreMultiplier=true))
ConfigOverrideItemMaxQuantity=(ItemClassString=""PrimalItemConsumable_CookedPrimeMeat_Jerky_C"",Quantity=(MaxItemQuantity=100,bIgnoreMultiplier=true))
ConfigOverrideItemMaxQuantity=(ItemClassString=""PrimalItemResource_Polymer_Organic_C"",Quantity=(MaxItemQuantity=100,bIgnoreMultiplier=true))
ConfigOverrideItemMaxQuantity=(ItemClassString=""PrimalItemResource_CorruptedPolymer_C"",Quantity=(MaxItemQuantity=100,bIgnoreMultiplier=true))

[ShooterGameMode_TEMPOverrides]
bUseCorpseLocator=True

********************
Gameusersettings.ini (delete this)
********************

[ServerSettings]
ServerAdminPassword=MAKESURETOPUTSOMETHINGHERE!!!!!
ShowMapPlayerLocation=true
AllowThirdPersonPlayer=true
FastDecayUnsnappedCoreStructures=true
OverrideStructurePlatformPrevention=true
PreventOfflinePvP=true
AllowAnyoneBabyImprintCuddle=true
DisableImprintDinoBuff=true
PvPDinoDecay=true
PvPStructureDecay=true
OnlyAutoDestroyCoreStructures=true
ClampItemSpoilingTimes=false
ClampItemStats=false
AutoDestroyDecayedDinos=true
PreventTribeAlliances=true
ServerCrosshair=true
RCONEnabled=True
RCONPort=11010
PreventOfflinePvPInterval=800
OverrideOfficialDifficulty=5
TheMaxStructuresInRange=10500
StartTimeHour=-1
OxygenSwimSpeedStatMultiplier=2
StructurePreventResourceRadiusMultiplier=1
TribeNameChangeCooldown=15
PlatformSaddleBuildAreaBoundsMultiplier=1
AlwaysAllowStructurePickup=True
StructurePickupTimeAfterPlacement=30
StructurePickupHoldDuration=0.5
AllowHideDamageSourceFromLogs=true
RaidDinoCharacterFoodDrainMultiplier=1
PvEDinoDecayPeriodMultiplier=1
KickIdlePlayersPeriod=3600
PerPlatformMaxStructuresMultiplier=2
AutoSavePeriodMinutes=15
MaxTamedDinos=5000
ItemStackSizeMultiplier=10
RCONServerGameLogBuffer=600
AllowRaidDinoFeeding=true
EnableExtraStructurePreventionVolumes=true
ShowFloatingDamageText=true
ImplantSuicideCD=28800
PreventSpawnAnimations=false
CrossARKAllowForeignDinoDownloads=False
PreventDiseases=false
NonPermanentDiseases=true
TribeLogDestroyedEnemyStructures=false
PvEAllowStructuresAtSupplyDrops=false
UseOptimizedHarvestingHealth=false
AllowMultipleAttachedC4=false
AllowFlyingStaminaRecovery=false
AllowHitMarkers=true
PreventDownloadSurvivors=False
PreventDownloadItems=False
PreventDownloadDinos=False
PreventUploadSurvivors=False
PreventUploadItems=False
PreventUploadDinos=False
AllowCrateSpawnsOnTopOfStructures=false
EnableCryopodNerf=True
ServerPassword=
bJoinNotifications=true
bShowStatusNotificationMessages=True
ServerPVE=true
HarvestAmountMultiplier=3

[ScalabilityGroups]
sg.ResolutionQuality=100
sg.ViewDistanceQuality=3
sg.AntiAliasingQuality=3
sg.ShadowQuality=3
sg.GlobalIlluminationQuality=3
sg.ReflectionQuality=3
sg.PostProcessQuality=3
sg.TextureQuality=3
sg.EffectsQuality=3
sg.FoliageQuality=3
sg.ShadingQuality=3

[/Script/ShooterGame.ShooterGameUserSettings]
MasterAudioVolume=1.000000
MusicAudioVolume=0.800000
SFXAudioVolume=1.000000
VoiceAudioVolume=1.000000
SoundUIAudioVolume=1.000000
CharacterAudioVolume=1.000000
StructureTooltipMaxSpeedMultiply=0.000000
UIScaling=1.000000
UIQuickbarScaling=0.750000
CameraShakeScale=0.650000
bFirstPersonRiding=False
bThirdPersonPlayer=True
bShowStatusNotificationMessages=True
TrueSkyQuality=0.270000
FOVMultiplier=1.000000
GroundClutterDensity=1.000000
bFilmGrain=False
bMotionBlur=False
bUseGamepadSpeaker=True
bUseDFAO=False
bUseSSAO=True
bShowChatBox=True
bCameraViewBob=True
bInvertLookY=False
bFloatingNames=True
bChatBubbles=True
bHideServerInfo=False
bJoinNotifications=True
bDisableNameYourTamePopup=False
MinimalFloatingNameSetting=False
bCraftablesShowAllItems=False
bLocalInventoryItemsShowAllItems=False
bLocalInventoryCraftingShowAllItems=True
bRemoteInventoryItemsShowAllItems=False
bRemoteInventoryCraftingShowAllItems=False
bRemoteInventoryShowEngrams=True
bEnableFluidInteraction=True
LookLeftRightSensitivity=1.000000
LookUpDownSensitivity=1.000000
TPVCameraHorizontalOffsetFactor=0.000000
GraphicsQuality=3
ActiveLingeringWorldTiles=10
ClientNetQuality=3
TheGammaCorrection=0.500000
LastServerSearchType=0
LastServerSort=2
LastPVESearchType=-1
LastDLCTypeSearchType=-1
LastServerSortAsc=True
LastAutoFavorite=True
LastServerSearchHideFull=False
LastServerSearchProtected=False
LastPlatformSpecificServerSearch=False
HideItemTextOverlay=True
bQuickToggleItemNames=True
bDistanceFieldShadowing=True
bDisableShadows=False
LODScalar=1.000000
bToggleToTalk=False
HighQualityMaterials=True
HighQualitySurfaces=True
bTemperatureF=False
bDisableTorporEffect=False
bChatShowSteamName=False
bChatShowTribeName=True
bReverseTribeLogOrder=False
EmoteKeyBind1=0
EmoteKeyBind2=0
bNoBloodEffects=False
bLowQualityVFX=False
bSpectatorManualFloatingNames=False
bSuppressAdminIcon=False
bUseSimpleDistanceMovement=False
bHasSavedGame=False
bDisableMeleeCameraSwingAnims=False
bPreventInventoryOpeningSounds=False
bPreventBiomeWalls=False
bPreventHitMarkers=False
bPreventCrosshair=False
bPreventColorizedItemNames=False
bHighQualityLODs=False
bExtraLevelStreamingDistance=False
bEnableColorGrading=False
VSyncMode=1
DOFSettingInterpTime=0.000000
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastSessionCategoryJoined=-1
bDisableMenuTransitions=False
bEnableInventoryItemTooltips=True
bRemoteInventoryShowCraftables=False
bNoTooltipDelay=False
LocalItemSortType=0
LocalCraftingSortType=0
RemoteItemSortType=0
RemoteCraftingSortType=0
VersionMetaTag=1
ShowExplorerNoteSubtitles=False
DisableMenuMusic=True
DisableDefaultCharacterItems=False
DisableLoadScreenMusic=False
bRequestDefaultCharacterItemsOnce=False
bHasSeenGen2Intro=False
CinematicForNoteShouldReset=()
bHasSetupDifficultySP=False
bHasSetupVisualSettings=False
agreedToTerms=()
bHasRunAutoSettings=False
bHideFloatingPlayerNames=False
bHideGamepadItemSelectionModifier=False
bToggleExtendedHUDInfo=False
PlayActionWheelClickSound=True
PlayHUDRolloverSound=True
CompanionReactionVerbosity=3
EnableEnvironmentalReactions=True
EnableRespawnReactions=True
EnableDeathReactions=True
EnableSayHelloReactions=True
EnableEmoteReactions=True
EnableMovementSounds=True
DisableSubtitles=False
bEnableASACamera=True
ConsoleAccess=False
CompanionSubtitleVerbosityLevel=3
CompanionIsHiddenState=False
MaxAscensionLevel=0
bHostSessionHasBeenOpened=False
bForceTPVCameraOffset=False
bDisableTPVCameraInterpolation=False
bEnableHDROutput=False
bFPVClimbingGear=False
bFPVGlidingGear=False
CameraZoomPerDinoNameTag=()
CameraHeightPerDinoNameTag=()
PhotomodePresets_Camera=()
PhotomodePresets_Movement=()
PhotomodePresets_Splines=()
PhotomodePresets_PPs=()
PhotomodePresets_Targeting=()
PhotomodeLastUsedSettings=()
MaxLastDeathMark=5
bSaveLastDeathMark=True
bShowPingsOnMap=True
bShowDinosOnMap=True
bShowWaypointsOnMap=True
bShowPlayersOnMap=True
bShowBedsOnMap=True
AimAssistStrengthMultiplier=1.000000
bForceShowRadialWheelTexts=False
bHideStructurePlacementCrosshair=False
SavedMainMapZoom=1.000000
SavedOverlayMapZoom=1.000000
bMinimalUI=False
FloatingTooltipStructureMode=DEFAULT
FloatingTooltipDinoMode=DEFAULT
FloatingTooltipDroppedItemsMode=DEFAULT
FloatingTooltipPlayerMode=DEFAULT
TopNotificationMode=DEFAULT
ItemNotificationMode=MINIMAL
bMinimapOverlayUseLowOpacity=False
FilterTypeInventoryLocal=9
FilterTypeInventoryRemote=9
bUseGamepadAimAssist=RangeWeaponAlwaysOn
Gamma1=2.200000
Gamma2=3.000000
bDisableBloom=True
bDisableLightShafts=False
bUseLowQualityLevelStreaming=True
bUseDistanceFieldAmbientOcclusion=False
bPreventItemCraftingSounds=False
bHighQualityAnisotropicFiltering=False
AmbientSoundVolume=1.000000
bUseOldThirdPersonCameraTrace=False
bUseOldThirdPersonCameraOffset=False
bShowedGenesisDLCBackground=False
bShowedGenesis2DLCBackground=False
bHasStartedTheGameOnce=False
bViewedAnimatedSeriesTrailer=False
bViewedARK2Trailer=False
bShowRTSKeyBinds=True
bHasCompletedGen2=False
bShowInfoButtons=True
bDisablePaintings=False
StopExplorerNoteAudioOnClose=False
bVibration=True
bUIVibration=False
radialSelectionSpeed=0.650000
bDisableVirtualCursor=False
PreventDetailGraphics=False
GroundClutterRadius=0
HFSQuality=0
bMenuGyro=False
gyroSensitivity=0.500000
virtualCursorSensitivity=0.500000
BubbleParticlesMultiplier=1.000000
CrosshairScale=1.000000
CrosshairOpacity=1.000000
CrosshairColor=(R=1.000000,G=1.000000,B=1.000000,A=1.000000)
CrosshairColorPickerValue=(X=0.000000,Y=0.000000)
CrosshairColorOverEnemy=(R=0.000000,G=0.376471,B=1.000000,A=1.000000)
CrosshairColorPickerValueOverEnemy=(X=0.010000,Y=0.500000)
CrosshairColorOverAlly=(R=0.000000,G=1.000000,B=0.000000,A=1.000000)
CrosshairColorPickerValueOverAlly=(X=0.260000,Y=0.440000)
CrosshairColorHitmark=(R=1.000000,G=0.000000,B=0.000000,A=1.000000)
CrosshairColorPickerValueHitmark=(X=0.010000,Y=0.640000)
CurrentCameraModeIndex=2
CurrentDinoCameraModeIndex=1
bShowAmbientInsectsVFX=True
TextChatFilterType=0
VoiceChatFilterType=0
bAutomaticallyCreateWaypointOnTamingCreatures=True
bAutomaticallyCreatePOIOnDeath=True
bOCIOIsEnabled=True
OCIOAsset=/Game/ASA/Environment/Common/Color/OCIO_aces_v13_cg.OCIO_aces_v13_cg
OCIOColorSpace=0
OCIODisplayView=0
bUseVSync=False
bUseDynamicResolution=False
ResolutionSizeX=1280
ResolutionSizeY=720
LastUserConfirmedResolutionSizeX=1280
LastUserConfirmedResolutionSizeY=720
WindowPosX=-1
WindowPosY=-1
FullscreenMode=1
LastConfirmedFullscreenMode=1
PreferredFullscreenMode=1
Version=5
AudioQualityLevel=0
LastConfirmedAudioQualityLevel=0
FrameRateLimit=60.000000
DesiredScreenWidth=1280
DesiredScreenHeight=720
LastUserConfirmedDesiredScreenWidth=1280
LastUserConfirmedDesiredScreenHeight=720
LastRecommendedScreenWidth=-1.000000
LastRecommendedScreenHeight=-1.000000
LastCPUBenchmarkResult=-1.000000
LastGPUBenchmarkResult=-1.000000
LastGPUBenchmarkMultiplier=1.000000
bUseHDRDisplayOutput=False
HDRDisplayOutputNits=1000

[/Script/Engine.GameUserSettings]
bUseDesiredScreenHeight=False

[SessionSettings]
SessionName=[EU] Vanilla Ice 5x-2T-2XP-2x-Stats

[MessageOfTheDay]
Message=Welcome to this Premium Ark Server hosted by SquaredSausage 5x Harvesting 5x Crop Grow Speed 2x Faster Taming / Breeding 10x Raising + Mating  No friendly Fire 2x player stats  per level Full discord  - Proper shop coming soon - No Mods. NO BLOCKING CAVES PLEASE  discord.gg/PZeDzsVeZR
Duration=30

[/Script/Engine.GameSession]
MaxPlayers=26


"
tmaVDSZz,Untitled,kwest87,C#,Wednesday 1st of November 2023 06:17:09 AM CDT,"[StartCode]
using System;

namespace povtorenie
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string MenuSetPrfile = ""1"";
            const string MenuChangeName = ""2"";
            const string MenuChangePassword = ""3"";
            const string MenuShowProfile = ""4"";
            const string MenuSwapPasswordName = ""5"";
            const string MenuExit = ""6"";

            char passwordSymbol = '*';
            bool isWorks = true;
            string menuInput = """";
            string name = """";
            string password = """";
            string passwordInput;
            string temporaryInformatio;

            while (isWorks)
            {
                Console.WriteLine($""        Меню\n {MenuSetPrfile})Создать профиль.\n {MenuChangeName})Сменить имя.\n {MenuChangePassword})Сменить пароль."" +
                    $""\n {MenuShowProfile})Показать инфу.\n {MenuSwapPasswordName})Поменять местами пароль и имя.\n {MenuExit})Выход."");
                menuInput = Console.ReadLine();

                switch (menuInput)
                {
                    case MenuSetPrfile:
                        if (name == """")
                        {
                            Console.Write(""Укажите ваше имя :"");
                            name = Console.ReadLine();
                            Console.Write(""Придумайте пароль :"");
                            password = Console.ReadLine();
                        }
                        else
                        {
                            Console.WriteLine(""Профиль уже создан ."");
                            Console.ReadKey();
                        }
                        break;

                    case MenuChangeName:
                        if (name.Length > 0)
                        {
                            Console.Write(""Для смены никнейма подтвердите пароль : "");
                            passwordInput = Console.ReadLine();

                            if (passwordInput == password)
                            {
                                Console.Write(""Введите новое имя :"");
                                name = Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine(""Пароль не правильный."");
                                Console.ReadKey();
                            }
                        }
                        else
                        {
                            Console.WriteLine(""Профиль еще не создан."");
                            Console.ReadKey();
                        }
                        break;

                    case MenuChangePassword:
                        Console.Write(""Подтвердите ваш никнейм : "");
                        temporaryInformatio = Console.ReadLine();

                        if (temporaryInformatio == name)
                        {
                            Console.Write(""Укажите старый пароль : "");
                            temporaryInformatio = Console.ReadLine();

                            if (temporaryInformatio == password)
                            {
                                Console.Write(""Укажите новый пароль :"");
                                password = Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine(""Пароль не верный ."");
                                Console.ReadKey();
                            }
                        }
                        else
                        {
                            Console.WriteLine(""Такого никнейма нету ."");
                            Console.ReadKey();
                        }
                        break;

                    case MenuShowProfile:
                        if (name != """")
                        {
                            Console.WriteLine($"" Никнейм - {name}"");
                            Console.Write("" Пароль - "");

                            for (int i = 0; password.Length > i; i++)
                            {
                                Console.Write(passwordSymbol);
                            }

                            Console.ReadKey();
                        }
                        else
                        {
                            Console.WriteLine(""Профиль не создан ."");
                            Console.ReadKey();
                        }
                        break;

                    case MenuSwapPasswordName:
                        if (name != """")
                        {
                            temporaryInformatio = name;
                            name = password;
                            password = temporaryInformatio;
                            Console.WriteLine(""Никнейм и пароль поменяны местами ."");
                        }
                        else
                        {
                            Console.WriteLine(""Профиль не создан ."");
                            Console.ReadKey();
                        }
                        break;

                    case MenuExit:
                        isWorks = false;
                        break;
                }

                Console.Clear();
            }
        }
    }
}
[EndCode]"
BvKbepri,Untitled,kwest87,C#,Wednesday 1st of November 2023 05:23:57 AM CDT,"[StartCode]
using System;

namespace ConsoleApp25
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandExit = ""7"";
            const string CommandYuanToRuble = ""1"";
            const string CommandYuanToDollar = ""2"";
            const string CommandDollarToRuble = ""3"";
            const string CommandDollarToYuan = ""4"";
            const string CommandRubleToDollar = ""5"";
            const string CommandRubleToYuan = ""6"";

            int temporaryCurrency;
            float ruble = 500;
            float dollar = 500;
            float yuan = 500;
            float yuanToRuble = 0.25f;
            float yuanToDollar = 0.5f;
            float dollarToRuble = 0.5f;
            float dollarToYuan = 2;
            float rubleToDollar = 2;
            float rubleToYuan = 4;
            string menuInput;
            bool isWorks = true;

            while (isWorks)
            {
                Console.WriteLine($"" У вас на счету :\n РУБЛИ - {ruble}\n ДОЛЛАРЫ - {dollar}\n ЮАНИ - {yuan}"");
                Console.Write($""       Меню\n{CommandYuanToRuble})Юани в Рубли.\n{CommandYuanToDollar})Юани в Доллары.\n{CommandDollarToRuble})Доллары в рубли."" +
                    $""\n{CommandDollarToYuan})Доллары в юани.\n{CommandRubleToDollar})Рубли в доллары.\n{CommandRubleToYuan})Рубли в Юани.\n{CommandExit})Выход"" +
                    $""\n Укажите номер операции : "");
                menuInput = Console.ReadLine();

                switch (menuInput)
                {
                    case CommandYuanToRuble:
                        Console.Write(""Сколько юаней обменять в рубли :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (yuan >= temporaryCurrency)
                        {
                            yuan -= temporaryCurrency;
                            ruble += temporaryCurrency * yuanToRuble;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств для операции."");
                            Console.Read();
                        }
                        break;

                    case CommandYuanToDollar:
                        Console.Write(""Сколько юаней обменять на доллары :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (yuan >= temporaryCurrency)
                        {
                            yuan -= temporaryCurrency;
                            dollar += temporaryCurrency * yuanToDollar;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandDollarToRuble:
                        Console.Write(""Сколько долларов обменять на рубли :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (dollar >= temporaryCurrency)
                        {
                            dollar -= temporaryCurrency;
                            ruble += temporaryCurrency * dollarToRuble;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandDollarToYuan:
                        Console.Write(""Сколько долларов обменять на юани :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (dollar >= temporaryCurrency)
                        {
                            dollar -= temporaryCurrency;
                            yuan += temporaryCurrency * dollarToYuan;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandRubleToDollar:
                        Console.Write(""Сколько рублей обменять на доллары :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (ruble >= temporaryCurrency)
                        {
                            ruble -= temporaryCurrency;
                            dollar += temporaryCurrency * rubleToDollar;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandRubleToYuan:
                        Console.Write(""Сколько рублей обменять на юани :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (ruble >= temporaryCurrency)
                        {
                            ruble -= temporaryCurrency;
                            yuan += temporaryCurrency * rubleToYuan;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandExit:
                        Console.WriteLine();
                        isWorks = false;
                        break;
                }

                Console.Clear();
            }
        }
    }
}
[EndCode]"
J7WnpeVX,Untitled,kwest87,C#,Wednesday 1st of November 2023 05:22:35 AM CDT,"using System;

namespace ConsoleApp25
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandExit = ""7"";
            const string CommandYuanToRuble = ""1"";
            const string CommandYuanToDollar = ""2"";
            const string CommandDollarToRuble = ""3"";
            const string CommandDollarToYuan = ""4"";
            const string CommandRubleToDollar = ""5"";
            const string CommandRubleToYuan = ""6"";

            int temporaryCurrency;
            float ruble = 500;
            float dollar = 500;
            float yuan = 500;
            float yuanToRuble = 0.25f;
            float yuanToDollar = 0.5f;
            float dollarToRuble = 0.5f;
            float dollarToYuan = 2;
            float rubleToDollar = 2;
            float rubleToYuan = 4;
            string menuInput;
            bool isWorks = true;

            while (isWorks)
            {
                Console.WriteLine($"" У вас на счету :\n РУБЛИ - {ruble}\n ДОЛЛАРЫ - {dollar}\n ЮАНИ - {yuan}"");
                Console.Write($""       Меню\n{CommandYuanToRuble})Юани в Рубли.\n{CommandYuanToDollar})Юани в Доллары.\n{CommandDollarToRuble})Доллары в рубли."" +
                    $""\n{CommandDollarToYuan})Доллары в юани.\n{CommandRubleToDollar})Рубли в доллары.\n{CommandRubleToYuan})Рубли в Юани.\n{CommandExit})Выход"" +
                    $""\n Укажите номер операции : "");
                menuInput = Console.ReadLine();

                switch (menuInput)
                {
                    case CommandYuanToRuble:
                        Console.Write(""Сколько юаней обменять в рубли :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (yuan >= temporaryCurrency)
                        {
                            yuan -= temporaryCurrency;
                            ruble += temporaryCurrency * yuanToRuble;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств для операции."");
                            Console.Read();
                        }
                        break;

                    case CommandYuanToDollar:
                        Console.Write(""Сколько юаней обменять на доллары :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (yuan >= temporaryCurrency)
                        {
                            yuan -= temporaryCurrency;
                            dollar += temporaryCurrency * yuanToDollar;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandDollarToRuble:
                        Console.Write(""Сколько долларов обменять на рубли :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (dollar >= temporaryCurrency)
                        {
                            dollar -= temporaryCurrency;
                            ruble += temporaryCurrency * dollarToRuble;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandDollarToYuan:
                        Console.Write(""Сколько долларов обменять на юани :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (dollar >= temporaryCurrency)
                        {
                            dollar -= temporaryCurrency;
                            yuan += temporaryCurrency * dollarToYuan;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandRubleToDollar:
                        Console.Write(""Сколько рублей обменять на доллары :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (ruble >= temporaryCurrency)
                        {
                            ruble -= temporaryCurrency;
                            dollar += temporaryCurrency * rubleToDollar;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandRubleToYuan:
                        Console.Write(""Сколько рублей обменять на юани :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (ruble >= temporaryCurrency)
                        {
                            ruble -= temporaryCurrency;
                            yuan += temporaryCurrency * rubleToYuan;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandExit:
                        Console.WriteLine();
                        isWorks = false;
                        break;
                }

                Console.Clear();
            }
        }
    }
}
"
MJr6xavX,Zibro esp8266,stofakiller,JSON,Wednesday 1st of November 2023 05:10:43 AM CDT,"esphome:
  name: zibro-esp8266
  friendly_name: Zibro-esp8266
#  on_boot:
#    - input_number.current_temperature: 20

esp8266:
  board: esp01_1m
  restore_from_flash: True


# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

#mqtt:
#  broker: !secret mqtt_broker
#  username: !secret mqtt_usr
#  password: !secret mqtt_pwd
#  client_id: zibro


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  manual_ip:
    static_ip: 192.168.1.26
    gateway: 192.168.1.1
    dns1: 192.168.1.51
    subnet: 255.255.255.0

captive_portal:

web_server:
  port: 80

output:
  - platform: gpio
    pin: GPIO2
    id: zibro_save

  - platform: gpio
    pin: GPIO4
    id: zibro_plus

  - platform: gpio
    pin: GPIO0
    id: zibro_minus

switch:
  - platform: gpio
    pin: GPIO5
    id: zibro_on_off
    name: ""Zibro on off""

  - platform: gpio
    pin: GPIO15
    id: zibro_save_switch
    name: ""Zibro save switch""

binary_sensor:
  - platform: status
    name: ""Zibro status""

button:
  - platform: restart
    entity_category: ""config""
    name: ""Restart""

  - platform: output
    name: ""Zibro plus""
    output: zibro_plus
    duration: 250ms

  - platform: output
    name: ""Zibro minus""
    output: zibro_minus
    duration: 250ms

  - platform: output
    name: ""Zibro save""
    output: zibro_save
    duration: 250ms
    on_press:
      - switch.toggle: zibro_save_switch

sensor:
  - platform: homeassistant
    id: current_temperature
    entity_id: input_number.zibro_temp_state
#    attribute: current_temperature

number:
  - platform: template
    name: ""Zibro current temp""
    id: zibro_current_temp
    optimistic: true
    min_value: 15
    max_value: 26
    step: 1
    initial_value: 20"
ekJzRRDV,week5_whatif,KDT85,C,Wednesday 1st of November 2023 05:09:11 AM CDT,"/*
 * ================================================================
 * Author		:	Ki Talbot
 * Version		:	1
 * Copyright	:	Staffordshire University (c) 2023
 * Licence		:	See LICENSE in repository for more information
 * Description	:	What if - Servo control

					This template project sets the /Tc and /Za
					flags for MSVC++ compiler. The suppress
					warnings directive is included below but can
					alternatively be provided in the preprocessor
					settings.
 * ================================================================
 */


 /* Preprocessor Directives */
#define _CRT_SECURE_NO_WARNINGS

/* Macros */
#define TRUE 1
#define PULSE_WIDTH_MIN 0.5
#define PULSE_WIDTH_MAX 2.5
#define TARGET_ANGLE_MIN -90
#define TARGET_ANGLE_MAX 90
#define DUTY_CYCLE 50


/* Included Libraries */
#include <stdio.h>

/* Function Prototypes */
float angleToPulseWidth(float angle);
int dutyCyclePercent(float pulseWidth);




int main(void)
{
	/* Get target angle */
	float target = 0.0;
	int dutyCycle = 0;
	printf(""Enter a target angle between -90 to 90: "");
	scanf(""%f"", &target);
	if (target > TARGET_ANGLE_MAX|| target < TARGET_ANGLE_MIN)
	{
		printf(""Invalid input"");
		return 0;
	}
	target = angleToPulseWidth(target);
	dutyCycle = dutyCyclePercent(target);
	printf(""Pulse width is %.2f with a duty cycle of %d%% of 50Hz"", target, dutyCycle);
	return 0;
}

float angleToPulseWidth(float angle)
{
	float pulseWidth = 0.0;
	pulseWidth = (angle - TARGET_ANGLE_MIN) / (TARGET_ANGLE_MAX - TARGET_ANGLE_MIN) * (PULSE_WIDTH_MAX - PULSE_WIDTH_MIN) + PULSE_WIDTH_MIN;
	return pulseWidth;
}

int dutyCyclePercent(float pulseWidth)
{
	int dutyCycle = 0;
	dutyCycle = (pulseWidth - PULSE_WIDTH_MIN) / (PULSE_WIDTH_MAX - PULSE_WIDTH_MIN) * 100;
	return dutyCycle;
}"
MQJp00bA,Untitled,Otsukare-Sama,VisualBasic,Wednesday 1st of November 2023 05:08:58 AM CDT,"Function GetFirstLetters(rng As Range) As String
    Dim cellValue As String
    Dim delimiters As String
    Dim letter As String
    Dim i As Long
    Dim insideWord As Boolean

    delimiters = "" -“”(),.':""
    cellValue = rng.Value
    GetFirstLetters = """"
    insideWord = False

    For i = 1 To Len(cellValue)
        letter = Mid(cellValue, i, 1)
        If InStr(delimiters, letter) = 0 Then
            If Not insideWord Then
                GetFirstLetters = GetFirstLetters & letter
                insideWord = True
            End If
        Else
            insideWord = False
        End If
    Next i
End Function

' In questa versione del codice, impostiamo una variabile booleana insideWord per tener traccia se siamo all'interno di una parola. 
' La funzione quindi esaminerà ogni carattere nella cella di input e se il carattere non è un delimitatore e non siamo già all'interno di una parola, verrà aggiunto alla stringa di output. 
' Quando un delimitatore viene trovato, la variabile insideWord viene reimpostata su False per iniziare una nuova parola. 
' Ciò dovrebbe restituire solo la prima lettera di ogni parola, ignorando i caratteri non delimitatori tra di esse.
"
