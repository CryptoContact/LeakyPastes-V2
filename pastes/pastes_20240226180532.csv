id,title,username,language,date,content
AADs0h1E,recurce finder files,BERKYT,Python,Monday 26th of February 2024 11:51:08 AM CDT,"import os
import random

BASE_DIR = os.path.dirname(__file__)
TARGETS = ['mp4', 'avi', 'mov']
SAVE_DIR = '.__DATA__'
FILTERS = [SAVE_DIR]
IGNORE_DUPLICATE_FILES = True

if not os.path.exists(SAVE_DIR):
    os.mkdir(SAVE_DIR)


def check_file_in_filters(file_name: str):
    if file_name in FILTERS:
        return True
    return False


def copy_file(file: str, file_name: str):
    with open(file, mode='rb') as f_in, open(f'{BASE_DIR}\\{SAVE_DIR}\\{file_name}', mode='ab') as f_out:
        for line in f_in:
            f_out.write(line)


def get_file_extension(file_name: str):
    return file_name[file_name.rfind('.')+1:]


def search(path=BASE_DIR):
    try:
        if os.path.isdir(path):
            lst_dir = os.listdir(path)
        else:
            return
    except PermissionError as _:
        return

    for file_name in lst_dir:
        if check_file_in_filters(file_name):
            continue

        if os.path.isdir(f'{path}\\{file_name}'):
            search(f'{path}\\{file_name}')
        else:
            print(f'Checking file: {path}\\{file_name}')
            if get_file_extension(file_name) in TARGETS:

                if os.path.exists(f'{BASE_DIR}\\{SAVE_DIR}\\{file_name}'):
                    if IGNORE_DUPLICATE_FILES:
                        continue
                    else:
                        file_name = f'{file_name}_{str(random.random())}'

                print('Coping...')
                copy_file(f'{path}\\{file_name}', file_name)
                print(f'{path}\\{file_name} copied!')
            else:
                print('Not suitable!')


search()
print('Done.')
"
Zzj7seFf,PlayerRange,BigBlow_,Lua,Monday 26th of February 2024 11:51:04 AM CDT,"-- Rayon de recherche des joueurs
local range = 200

-- Déclaration de la variable qui stockera l'Advanced Peripherals Player Detector
local playerDetector

-- Recherche de l'Advanced Peripherals Player Detector connecté
for _, peripheralName in ipairs(peripheral.getNames()) do
    if peripheral.getType(peripheralName) == ""playerDetector"" then
        playerDetector = peripheral.wrap(peripheralName)
        break
    end
end

-- Vérification que l'Advanced Peripherals Player Detector a été trouvé
if playerDetector == nil then
    print(""Advanced Peripherals Player Detector non trouvé"")
    return
else
    print(""Advanced Peripherals Player Detector trouvé"")
end

-- Déclaration de la variable qui stockera l'Advanced Peripherals Monitor
local monitor

-- Recherche de l'Advanced Peripherals Monitor connecté
for _, peripheralName in ipairs(peripheral.getNames()) do
    if peripheral.getType(peripheralName) == ""monitor"" and peripheral.wrap(peripheralName).isColour() then
        monitor = peripheral.wrap(peripheralName)
        break
    end
end

-- Vérification que l'Advanced Peripherals Monitor a été trouvé
if monitor == nil then
    print(""Advanced Peripherals Monitor non trouvé"")
    return
else
    print(""Advanced Peripherals Monitor trouvé"")
end


-- Fonction pour afficher la liste des joueurs détectés
local function displayPlayerList(playerList)
    -- Définir les couleurs d'arrière-plan et de texte pour l'interface
    monitor.setBackgroundColor(colors.black)
    monitor.setTextColor(colors.white)
    -- Effacer l'écran et afficher l'en-tête de l'interface
    monitor.clear()
    monitor.setCursorPos(1, 1)
    monitor.write(""==============================="")
    monitor.setCursorPos(1, 2)
    monitor.write(""      PLAYERS IN AREA      "") 
    monitor.setCursorPos(1, 3)
    monitor.write(""      RANGE: ""..range..string.rep("" "", 27 - #tostring(range))..""|"")
    monitor.setCursorPos(1, 4)
    monitor.write(""==============================="")
    -- Afficher chaque joueur détecté à partir de la ligne 5
    for i, playerName in ipairs(playerList) do
        monitor.setCursorPos(1, i + 4)
        monitor.write(""  "" .. playerName .. string.rep("" "", 27 - #playerName) .. ""|"")
    end
    -- Afficher le bas de l'interface
    monitor.setCursorPos(1, #playerList + 5)
    monitor.write(""==============================="")
end

-- Boucle principale du programme
while true do
    -- Vérification si un joueur est en ligne dans le rayon de recherche
    local playersInRange = playerDetector.getPlayersInRange(range)
    if #playersInRange > 0 then
        -- Si un joueur est détecté, afficher la liste des joueurs
        displayPlayerList(playersInRange)
        -- Activer le signal de redstone pour indiquer qu'un joueur est en ligne
        redstone.setOutput(""right"", true)
    else
        -- Si aucun joueur n'est détecté, effacer l'écran et désactiver le signal de redstone
        monitor.clear()
        redstone.setOutput(""right"", false)
    end
    -- Attendre 30 seconde avant de vérifier à nouveau si un joueur est en ligne
    sleep(30)
end"
1v7zsM0U,Untitled,athairrahman53,JavaScript,Monday 26th of February 2024 11:49:49 AM CDT,"const books = [];
const RENDER_EVENT = ""render-books"";
const SAVED_STORAGE_KEY = ""books"";
const SAVED_EVENT = ""saved-books"";

// membuat fungsi untuk melihat localStorage dicukung atau tidak oleh webBrowsur
const isLocalStorageSupport = () => {
  if (typeof Storage === undefined) {
    alert(""Browsur kamu tidak mendukung local Storage"");
    return false;
  }
  return true;
};

// membuat fungsi untuk menyimpan data di localStorage
const booksSave = () => {
  if (isLocalStorageSupport()) {
    const parsed = JSON.stringify(books);
    localStorage.setItem(SAVED_STORAGE_KEY, parsed);
    document.dispatchEvent(new Event(SAVED_EVENT));
  }
};

const generateId = () => {
  return +new Date();
};

// membuat fungsi untuk menampung data book yang diinput
const inputBookObject = (id, title, author, year, isComplete) => {
  return {
    id,
    title,
    author,
    year,
    isComplete,
  };
};

// fungsi untuk melakukan letarasi pada index
const fineBookIndex = (bookId) =>
  books.findIndex((books) => books.id === bookId);

// fungsi hapus buku
const removeBookFromReadBook = (bookId) => {
  const bookTarget = fineBookIndex(bookId);
  if (bookTarget === -1) return;
  books.splice(bookTarget, 1);

  document.dispatchEvent(new Event(RENDER_EVENT));
  booksSave();
};

// fungsi pindahkan buku rak selesai dibaca
const moveBookToCompleted = (bookId) => {
  const bookTarget = fineBookIndex(bookId);
  if (bookTarget === -1) return;
  books[bookTarget].isComplete = true;
  document.dispatchEvent(new Event(RENDER_EVENT));
  booksSave();
};

// fungsi untuk mengembalikan buku ke book yang belum selesai;
const backToBookFromReadBook = (bookId) => {
  const bookTarget = fineBookIndex(bookId);
  if (bookTarget === null) return;
  books[bookTarget].isComplete = false;
  document.dispatchEvent(new Event(RENDER_EVENT));
  booksSave();
};

// fungsi untuk mengambil element judul,penulis, tahun, dan ID
const inputDataBooks = () => {
  const isEditing =
    document.getElementById(""bookSubmit"").innerText === ""Edit Buku"";

  const generatedID = generateId();
  const inputBookTitle = document.getElementById(""inputBookTitle"").value;
  const inputBookAuthor = document.getElementById(""inputBookAuthor"").value;
  const inputBookYear = parseInt(
    document.getElementById(""inputBookYear"").value
  );
  const inputBookIsComplete = document.getElementById(
    ""inputBookIsComplete""
  ).checked;

  if (isEditing) {
    const bookIndek = books.findIndex((book) => book.id === generatedID);

    if (bookIndek !== -1) {
      books[bookIndek].title = inputBookTitle;
      books[bookIndek].author = inputBookAuthor;
      books[bookIndek].year = inputBookYear;
      books[bookIndek].isComplete = inputBookIsComplete;

      document.getElementById(""bookSubmit"").innerText =
        ""Masukkan Buku ke rak <span>Belum selesai dibaca</span"";
      document.getElementById(""cancelEditBtn"").style.display = ""none"";
      booksSave();

      // Reset nilai input form
      document.getElementById(""inputBookId"").value = """";
      document.getElementById(""inputBookTitle"").value = """";
      document.getElementById(""inputBookAuthor"").value = """";
      document.getElementById(""inputBookYear"").value = """";
      document.getElementById(""inputBookIsComplete"").value = """";
    }
  } else {
    const bookObject = inputBookObject(
      generatedID,
      inputBookTitle,
      inputBookAuthor,
      inputBookYear,
      inputBookIsComplete
    );

    books.push(bookObject);
    booksSave();
  }
  document.dispatchEvent(new Event(RENDER_EVENT));
};

// fungsi untuk mengload data dari localstorage ketika browsur dibuka kembali
const loadBookFromLocalStorage = () => {
  try {
    const serializedBooks = localStorage.getItem(SAVED_STORAGE_KEY);
    if (serializedBooks === null) {
      return null;
    }
    let parsedBooks = JSON.parse(serializedBooks);

    books.push(...parsedBooks);
    booksSave();
    document.dispatchEvent(new Event(RENDER_EVENT));
    return parsedBooks;
  } catch (error) {
    alert(""gagal dimuat data buku"", error);
    return null;
  }
};

//fungsi untuk menemukan id buku seseai dengan yang diingin di edit
const bookFromToEdit = (bookId) => {
  const bookToEdit = books.find((book) => {
    return book.id === bookId;
  });

  document.getElementById(""inputBookId"").value = bookToEdit.id;
  document.getElementById(""inputBookTitle"").value = bookToEdit.title;
  document.getElementById(""inputBookAuthor"").value = bookToEdit.author;
  document.getElementById(""inputBookYear"").value = bookToEdit.year;
  document.getElementById(""inputBookIsComplete"").checked =
    bookToEdit.isComplete;

  const bookSubmit = document.getElementById(""bookSubmit"");
  bookSubmit.innerText = ""Edit Buku"";

  const cancelEditBtn = document.getElementById(""cancelEditBtn"");
  cancelEditBtn.style.display = ""inline-block"";
};

// fungsi untuk menampilkan data buku yang telah diinput
const displayBook = (dataBook, bookId) => {
  const bookTitle = document.createElement(""h3"");
  bookTitle.innerText = dataBook.title;

  const bookWriter = document.createElement(""p"");
  bookWriter.innerText = dataBook.author;

  const bookPublication = document.createElement(""p"");
  bookPublication.innerText = dataBook.year;

  // fungsi untuk membuat button
  const createButton = (text) => {
    const button = document.createElement(""Button"");
    button.innerText = text;
    button.classList.add(""material-symbols-outlined"");
    return button;
  };

  const clearBook = createButton(""delete"");
  const finisRead = createButton(""done"");
  const backButton = createButton(""undo"");

  const editBook = document.createElement(""Button"");
  editBook.innerText = ""Edit"";
  editBook.classList.add(""edit-button"");
  // menambahkan attribute data-book-id untuk menyimpan ID buku
  editBook.dataset.bookId = bookId;

  const action = document.createElement(""div"");
  action.classList.add(""action"");
  action.append(clearBook);

  if (dataBook.isComplete) {
    action.append(backButton);
    backButton.addEventListener(""click"", () => {
      backToBookFromReadBook(dataBook.id);
    });
  } else {
    action.append(finisRead, editBook);
    finisRead.addEventListener(""click"", () => {
      moveBookToCompleted(dataBook.id);
    });
    editBook.addEventListener(""click"", () => {
      bookFromToEdit(bookId);
    });
  }
  const containerBookItem = document.createElement(""article"");
  containerBookItem.classList.add(""book_item"");
  containerBookItem.append(bookTitle, bookWriter, bookPublication);
  containerBookItem.append(action);
  containerBookItem.setAttribute(""id"", `book-${dataBook.id}`);

  clearBook.addEventListener(""click"", () => {
    Swal.fire({
      title: ""Apakah anda yakin?"",
      text: ""Anda tidak dapat mengembalikan lagi!"",
      icon: ""warning"",
      showCancelButton: true,
      confirmButtonColor: ""#3085d6"",
      cancelButtonColor: ""#d33"",
      confirmButtonText: ""Ya, hapus saja!"",
      cancelButtonText: ""Batal"",
    }).then((result) => {
      if (result.isConfirmed) {
        removeBookFromReadBook(dataBook.id);
        Swal.fire({
          title: ""Terhapus!"",
          text: ""Buku telah dihapus"",
          icon: ""success"",
        });
      } else {
        Swal.fire({
          title: ""Batal!"",
          icon: ""error"",
        });
      }
    });
  });
  return containerBookItem;
};

// fungsi untuk mencari judul buku
const searchBookTitle = document.getElementById(""searchBookTitle"");
searchBookTitle.addEventListener(""input"", () => {
  const keyword = searchBookTitle.value.toLowerCase();
  const filteredBooks = books.filter((book) =>
    book.title.toLowerCase().includes(keyword)
  );
  renderBooks(filteredBooks);
});

// fungsi untuk merender buku pada pencaharian
const renderBooks = (books) => {
  const incompleteBookshelfList = document.getElementById(
    ""incompleteBookshelfList""
  );
  incompleteBookshelfList.innerHTML = "" "";

  const completeBookshelfList = document.getElementById(
    ""completeBookshelfList""
  );
  completeBookshelfList.innerHTML = "" "";

  books.forEach((book) => {
    const bookElement = displayBook(book);

    if (book.isComplete) {
      completeBookshelfList.appendChild(bookElement);
    } else {
      incompleteBookshelfList.appendChild(bookElement);
    }
  });
};

// Event mengedit buku
bookSubmit.addEventListener(""click"", () => {
  const bookId = editBook.dataset.bookId;
  bookFromToEdit(bookId);
});

// membuat event submit untuk melakukan penyimpanan data pada form yang telah diinput
document.addEventListener(""DOMContentLoaded"", () => {
  const inuputAllDataBook = document.getElementById(""inputBook"");
  inuputAllDataBook.addEventListener(""submit"", (e) => {
    e.preventDefault();
    Swal.fire({
      text: ""Terkirim"",
      icon: ""success"",
    });
    inputDataBooks();
  });

  if (isLocalStorageSupport()) {
    const loadedBooks = loadBookFromLocalStorage();
    if (!loadedBooks) {
      alert(""tidak ada buku yang disimpan"");
    }
  }
});

// Event untuk merender semua data
document.addEventListener(RENDER_EVENT, () => {
  const incompleteBookshelfList = document.getElementById(
    ""incompleteBookshelfList""
  );
  incompleteBookshelfList.innerHTML = "" "";

  const completeBookshelfList = document.getElementById(
    ""completeBookshelfList""
  );
  completeBookshelfList.innerHTML = "" "";

  for (const bookItem of books) {
    const bookElement = displayBook(bookItem);
    if (bookItem.isComplete) {
      completeBookshelfList.append(bookElement);
    } else {
      incompleteBookshelfList.append(bookElement);
    }
  }
});
"
uKKpzzRK,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Monday 26th of February 2024 11:43:10 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_154485.pdf

Working as of:
26 February 2024"
WX6da9vP,Terminal Central Turtle Command,D34dP0ol64,Lua,Monday 26th of February 2024 11:40:26 AM CDT,"

peripheral.find(""modem"", rednet.open)

function try200()
    for a = 1, 200 do
        local id = rednet.receive(nil, 5)
        if not id then
            printError(""No message received"")
        else
            print((""Computer %d requested to connect""):format(id))
        end
end"
eZG5AiS8,Untitled,sissou123,C,Monday 26th of February 2024 11:40:25 AM CDT,"C Programming Bootcamp - The Complete C Language Course
C Programming 2023: Master the Fundamentals of C Programming Language. Join the Comprehensive C Bootcamp Masterclass! 
What you'll learn
Fundamentals of Programming
Summarized & Concise Material [Saving TONS of Time!]
OVER 100 Practical Exercises! 
for more:https://cuty.io/1XlvX
"
sLu6E9H7,Untitled,MrShtein,Go,Monday 26th of February 2024 11:23:44 AM CDT,"func TestRequestDto(t *testing.T) {
	testCases := []struct {
		desc   string
		input  GetCategoryRequestDto
		expect string
	}{
		{
			desc: ""is valid dto"",
			input: GetCategoryRequestDto{
				ID: ""00000000-0000-0000-1000-000000000000"",
			},
			expect: """",
		},
		{
			desc: ""not valid dto: ID is not uuid"",
			input: GetCategoryRequestDto{
				ID: ""00000000-0000-0000-1000"",
			},
			expect: ""invalid uuid"",
		},
	}
	for _, tc := range testCases {
		t.Run(tc.desc, func(t *testing.T) {
			got := tc.input.Validate()
			if tc.expect == """" {
				if got != nil {
					t.Errorf(""Incorrected result. Expect %s, got %s"", tc.expect, got.Error())
				}
			} else {
				if got == nil {
					t.Errorf(""Incorrected result. Expect %s, got nil"", tc.expect)
				}
			}
		})
	}
}"
KVM2WBvn,Untitled,sissou123,HTML,Monday 26th of February 2024 11:22:59 AM CDT,"Modern HTML & CSS From The Beginning (Including Sass)
Build modern responsive websites & UIs with HTML5, CSS3 & Sass! Learn Flex & CSS Grid 
What you'll learn
Build Multiple High Quality Website & UI Projects
HTML5 Semantic Layout & CSS Fundamentals 
for more:https://cuty.io/M67P
"
zNLnBcEw,DatSystems Security,JJfriends1234,JavaScript,Monday 26th of February 2024 11:08:03 AM CDT,"//{profile}

var user=""4398964"";
var uid=""4398964"";
var usid=""z289upir47qs70z3"";
var login=""2"";
var password=""2"";
var email="""";
var login_last=""02/26/2024"";
var login_count=""1"";
var reg_days=""0"";
var exp_date="""";
var exp_days="""";
var exp_hits="""";
var group_name=""default"";
var reg_date=""02/26/2024"";
var reg_type=""M"";
var reg_billtype="""";


var auth_acc=""datsystems"";
var auth_res=""ok"";
var auth_ip=""174.210.0.207"";
var auth_country=""US"";
var auth_fail_url=""https://sites.google.com/view/datbanksite/register?authuser=0"";
var auth_ajax=true;

var adcode=""<p style='text-align:center'><table width='100%'><tr><td style='background:#000080; text-align:center; font-family:arial; color:#FFFFFF'>Protected by <a href='http://www.authpro.com' target='_blank' style='color:#FFFFFF'>AuthPro</a></td></tr></table></center></p>"";

var pp_popup=false;

var pp_user=""datsystems"";
var pp_exp=""30"";
var pp_drc="""";
var pp_drc_mes="""";
var pp_dst="""";
var pp_dsb="""";
var pp_redir=true;
var pp_top=false;

var ap_return=false;
if (auth_fail_url=='return') { 
  auth_fail_url='https://www.authpro.com/auth/'+pp_user+'/?action=ppreturn&url='+escape(document.location.href);
  ap_return=true;
}



verify_login();

if (adcode != '') { 
  document.write(adcode); 
  //document.onload = print_authpro();
  //ap_div.innerHTML=adcode;
  //document.body[0].innerHTML+=adcode;
  //alert(adcode);
}

function print_authpro() {
  document.write(adcode); 
  var ap_div = document.createElement('div');
  document.body.appendChild(ap_div);
  document.body.innerHTML=ap_div;
}

function verify_login() {
  if (auth_res==""fail"") {
    //alert(auth_res+' '+pp_redir+' '+pp_popup);
    if ((pp_redir)&&(! pp_popup)) {
      if (document.body) document.body.style.visibility='hidden';
      if (pp_top) {
        top.location.replace(auth_fail_url);
      } else {
        document.location.replace(auth_fail_url);
      }
    }
    return false;
  }
  if (auth_res==""ok"") {
    return true;
  }
}
function go_eurl(url,winname,winpar) { 
  if (typeof(winname)==='undefined') { document.location.href=unescape(url.replace(/(..)/g,""%$1""));} else { window.open(unescape(url.replace(/(..)/g,""%$1"")),winname,winpar);}
}





function ap_popup() {
  if (auth_res=='ok') { return; }
  var ap_pop_css = document.createElement('style');
  ap_pop_css.innerHTML = ""#ap-modal-pop { display: none; position: fixed; z-index: 10000; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgb(0,0,0); background-color: rgba(0,0,0,0.8); backdrop-filter: blur(3px);}"";
  document.head.appendChild(ap_pop_css);
  var ap_pop_div=document.createElement(""div"");
  ap_pop_div.id = 'ap-modal-pop';
  ap_pop_div.innerHTML = '<span id=""ap_login_up""></span>';
  var ap_pop_script = document.createElement(""script"");
  var ap_set_urlok=''; //if (!ap_return) { ap_set_urlok='&set_urlok='+escape('https://www.authpro.com/auth/'+pp_user+'/?action=home'); }
  if (ap_return) { ap_set_urlok='&set_urlok=ap_popup:close'; }
  if ((ap_return)&&(!auth_ajax)) { ap_set_urlok='&set_urlok='+escape(document.location.href); }
  ap_pop_script.src = 'https://www.authpro.com/auth/'+pp_user+'/?mode=JS&JSid=ap_login_up'+ap_set_urlok;
  ap_pop_div.appendChild(ap_pop_script); 
  document.body.appendChild(ap_pop_div);
  document.getElementById(""ap-modal-pop"").style.display = ""block"";
  if (typeof(ap_popup_ext) == 'function') { ap_popup_ext(ap_pop_div); } 
}



function ap_ready() {
  if (document.getElementById('ap_cover')) {
    if (auth_res=='ok') { document.getElementById('ap_cover').style.display = 'none'; }
  }
  if (typeof(ap_ready_ext) == 'function') { ap_ready_ext(); } 
}

if (document.addEventListener) { document.addEventListener(""DOMContentLoaded"", ap_ready); }
if (window.addEventListener) { window.addEventListener('load', ap_ready); } 
else { window.attachEvent('onload', ap_ready); }

function gravatar_url(email,def,size) {
  if (typeof(def)=='undefined') { def=''; }
  if (typeof(size)=='undefined') { size=''; }
  return ""https://authpro.com/cgi-bin/auth.fcgi?action=gravatar&email=""+encodeURIComponent(email)+""&default=""+encodeURIComponent(def)+""&size=""+size;
}
function gravatar_img(email,def,size) {
  return '<img src=""'+gravatar_url(email,def,size)+'"" width=""'+size+'"">';
}"
1cJnZa4s,Untitled,sissou123,HTML,Monday 26th of February 2024 11:05:51 AM CDT,"Build Mega Responsive Website: HTML, CSS, JavaScript (2024)
Build and deploy a professional-looking website from scratch with these technologies: HTML, CSS, and JavaScript 
What you'll learn
Create and structure HTML documents using semantic elements and proper markup.
Use CSS to style HTML elements and create modern and cool responsive layouts. 
for more:https://cuty.io/2Ky4Hd3muK
"
4v48wmCd,Untitled,Josif_tepe,C++,Monday 26th of February 2024 10:58:36 AM CDT,"#include <iostream>
#include <map>
#include <cmath>
#include <set>
#include <vector>
#include <queue>
using namespace std;
const int maxn = 1050;
char mat[maxn][maxn];
int main() {
    ios_base::sync_with_stdio(false);
    int n, m, k;
    cin >> n >> m >> k;
    int si, sj, ei, ej;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cin >> mat[i][j];
            if(mat[i][j] == 'M') {
                si = i;
                sj = j;
            }
            if(mat[i][j] == 'V') {
                ei = i;
                ej = j;
            }
        }
    }
    mat[si][sj] = '.';
    mat[ei][ej] = '.';
    int di[] = {-1, 1, 0, 0};
    int dj[] = {0, 0, -1, 1};
     
    vector<vector<bool> > visited(n + 1, vector<bool> (m + 1, false));
    visited[si][sj] = true;
    queue<int> q;
    q.push(si);
    q.push(sj);
    vector<pair<int, int> > points_from_walls;
    while(!q.empty()) {
        int ci = q.front(); q.pop();
        int cj = q.front(); q.pop();
        if(ci == ei and cj == ej) {
            cout << ""DA"" << endl;
            return 0;
        }
        for(int i = 0; i < 4; i++) {
            int ti = ci + di[i];
            int tj = cj + dj[i];
            if(ti >= 0 and ti < n and tj >= 0 and tj < m and !visited[ti][tj]) {
                if(mat[ti][tj] == '#') {
                    points_from_walls.push_back(make_pair(ci, cj));
                }
                else {
                    visited[ti][tj] = true;
                    q.push(ti);
                    q.push(tj);
                }
            }
        }
    }
    vector<vector<int> > dist(n + 1, vector<int>(m + 1, -1));
 
    for(pair<int, int> x : points_from_walls) {
        q.push(x.first);
        q.push(x.second);
        dist[x.first][x.second] = 0;
    }
     
    dist[si][sj] = 0;
    while(!q.empty()) {
        int ci = q.front(); q.pop();
        int cj = q.front(); q.pop();
         
        for(int i = 0; i < 4; i++) {
            int ti = ci + di[i];
            int tj = cj + dj[i];
            if(ti >= 0 and ti < n and tj >= 0 and tj < m and dist[ti][tj] == -1) {
                dist[ti][tj] = dist[ci][cj] + 1;
                q.push(ti);
                q.push(tj);
            }
        }
         
    }
    q.push(ei);
    q.push(ej);
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            visited[i][j] = false;
        }
    }
    visited[ei][ej] = true;
    while(!q.empty()) {
        int ci = q.front(); q.pop();
        int cj = q.front(); q.pop();
        if(mat[ci][cj] == '.' and dist[ci][cj] <= k) {
            cout << ""DA"" << endl;
            return 0;
        }
        for(int i = 0; i < 4; i++) {
            int ti = ci + di[i];
            int tj = cj + dj[i];
            if(ti >= 0 and ti < n and tj >= 0 and tj < m and mat[ti][tj] != '#' and !visited[ti][tj]) {
                visited[ti][tj] = true;
                q.push(ti);
                q.push(tj);
            }
        }
    }
     
    cout << ""NE"" << endl;
    return 0;
}"
jZ40eQ2E,Nigerian scammers [26-2-2/2024],bombaires,AIMMS,Monday 26th of February 2024 10:49:39 AM CDT,"<a href=""mailto:jefffrank@post.com"">jefffrank@post.com</a>
<a href=""mailto:mails@mymai1box.com"">mails@mymai1box.com</a>
<a href=""mailto:franksjeffimf@gmail.com"">franksjeffimf@gmail.com</a>
<a href=""mailto:f.r.an.k.s.j.e.ff.i.m.f@gmail.com"">f.r.an.k.s.j.e.ff.i.m.f@gmail.com</a>
<a href=""mailto:fran.ks.j.e.f.fimf@gmail.com"">fran.ks.j.e.f.fimf@gmail.com</a>
<a href=""mailto:f.r.an.k.s.j.effimf@gmail.com"">f.r.an.k.s.j.effimf@gmail.com</a>
<a href=""mailto:f.rank.sjef.fi.mf@gmail.com"">f.rank.sjef.fi.mf@gmail.com</a>
<a href=""mailto:f.rank.sj.ef.fimf@gmail.com"">f.rank.sj.ef.fimf@gmail.com</a>
<a href=""mailto:fr.an.k.sjef.f.im.f@gmail.com"">fr.an.k.sjef.f.im.f@gmail.com</a>
<a href=""mailto:frank.sjeffimf@gmail.com"">frank.sjeffimf@gmail.com</a>
<a href=""mailto:f.ra.n.k.s.jeff.i.mf@gmail.com"">f.ra.n.k.s.jeff.i.mf@gmail.com</a>
<a href=""mailto:fra.n.ks.je.f.fi.m.f@gmail.com"">fra.n.ks.je.f.fi.m.f@gmail.com</a>
<a href=""mailto:fra.nk.s.jef.f.im.f@gmail.com"">fra.nk.s.jef.f.im.f@gmail.com</a>
<a href=""mailto:f.ra.n.ksjef.fim.f@gmail.com"">f.ra.n.ksjef.fim.f@gmail.com</a>
<a href=""mailto:f.ran.ks.jeffi.mf@gmail.com"">f.ran.ks.jeffi.mf@gmail.com</a>
<a href=""mailto:f.r.a.n.k.s.je.ff.i.mf@gmail.com"">f.r.a.n.k.s.je.ff.i.mf@gmail.com</a>
<a href=""mailto:fra.nksje.ffi.mf@gmail.com"">fra.nksje.ffi.mf@gmail.com</a>
<a href=""mailto:fr.a.nk.s.jeffim.f@gmail.com"">fr.a.nk.s.jeffim.f@gmail.com</a>
<a href=""mailto:f.r.an.k.s.je.f.f.imf@gmail.com"">f.r.an.k.s.je.f.f.imf@gmail.com</a>
<a href=""mailto:fr.ank.sje.ff.i.m.f@gmail.com"">fr.ank.sje.ff.i.m.f@gmail.com</a>
<a href=""mailto:f.r.a.n.k.s.jeff.im.f@gmail.com"">f.r.a.n.k.s.jeff.im.f@gmail.com</a>
<a href=""mailto:frank.sje.ff.i.mf@gmail.com"">frank.sje.ff.i.mf@gmail.com</a>
<a href=""mailto:fra.nksj.eff.imf@gmail.com"">fra.nksj.eff.imf@gmail.com</a>
<a href=""mailto:fra.nk.s.je.ffimf@gmail.com"">fra.nk.s.je.ffimf@gmail.com</a>
<a href=""mailto:fran.k.sje.ff.imf@gmail.com"">fran.k.sje.ff.imf@gmail.com</a>
<a href=""mailto:fr.anksj.e.f.f.i.m.f@gmail.com"">fr.anksj.e.f.f.i.m.f@gmail.com</a>
<a href=""mailto:f.ran.k.s.j.e.f.f.i.mf@gmail.com"">f.ran.k.s.j.e.f.f.i.mf@gmail.com</a>
<a href=""mailto:fra.nks.jeffi.m.f@gmail.com"">fra.nks.jeffi.m.f@gmail.com</a>
<a href=""mailto:fra.n.k.s.jef.fi.m.f@gmail.com"">fra.n.k.s.jef.fi.m.f@gmail.com</a>
<a href=""mailto:f.ran.k.s.je.f.fi.m.f@gmail.com"">f.ran.k.s.je.f.fi.m.f@gmail.com</a>
<a href=""mailto:frank.s.j.eff.i.mf@gmail.com"">frank.s.j.eff.i.mf@gmail.com</a>
<a href=""mailto:f.ranks.j.e.f.fim.f@gmail.com"">f.ranks.j.e.f.fim.f@gmail.com</a>
<a href=""mailto:f.r.a.n.ksje.f.fi.mf@gmail.com"">f.r.a.n.ksje.f.fi.mf@gmail.com</a>
<a href=""mailto:fra.nks.jeffim.f@gmail.com"">fra.nks.jeffim.f@gmail.com</a>
<a href=""mailto:fran.ksj.effi.m.f@gmail.com"">fran.ksj.effi.m.f@gmail.com</a>
<a href=""mailto:fra.nk.s.j.eff.imf@gmail.com"">fra.nk.s.j.eff.imf@gmail.com</a>
<a href=""mailto:fra.nk.s.j.e.ff.i.mf@gmail.com"">fra.nk.s.j.e.ff.i.mf@gmail.com</a>
<a href=""mailto:fran.ks.je.ffim.f@gmail.com"">fran.ks.je.ffim.f@gmail.com</a>
<a href=""mailto:fr.a.n.k.s.jeffim.f@gmail.com"">fr.a.n.k.s.jeffim.f@gmail.com</a>
<a href=""mailto:fran.k.sj.eff.i.m.f@gmail.com"">fran.k.sj.eff.i.m.f@gmail.com</a>
<a href=""mailto:f.r.a.n.ksjef.f.i.m.f@gmail.com"">f.r.a.n.ksjef.f.i.m.f@gmail.com</a>
<a href=""mailto:f.rank.sj.e.ff.i.mf@gmail.com"">f.rank.sj.e.ff.i.mf@gmail.com</a>
<a href=""mailto:fra.nksj.ef.fimf@gmail.com"">fra.nksj.ef.fimf@gmail.com</a>
<a href=""mailto:f.r.an.ksj.eff.i.m.f@gmail.com"">f.r.an.ksj.eff.i.m.f@gmail.com</a>
<a href=""mailto:f.ran.ks.j.ef.fimf@gmail.com"">f.ran.ks.j.ef.fimf@gmail.com</a>
<a href=""mailto:f.r.ank.s.j.e.f.fi.mf@gmail.com"">f.r.ank.s.j.e.f.fi.mf@gmail.com</a>
<a href=""mailto:fr.an.k.s.j.eff.i.mf@gmail.com"">fr.an.k.s.j.eff.i.mf@gmail.com</a>
<a href=""mailto:fr.a.n.k.sje.f.fim.f@gmail.com"">fr.a.n.k.sje.f.fim.f@gmail.com</a>
<a href=""mailto:frank.s.j.e.ff.i.mf@gmail.com"">frank.s.j.e.ff.i.mf@gmail.com</a>
<a href=""mailto:fra.nksj.ef.f.imf@gmail.com"">fra.nksj.ef.f.imf@gmail.com</a>
<a href=""mailto:fra.nk.s.jeffi.mf@gmail.com"">fra.nk.s.jeffi.mf@gmail.com</a>
<a href=""mailto:franks.j.e.f.fi.m.f@gmail.com"">franks.j.e.f.fi.m.f@gmail.com</a>
<a href=""mailto:f.ran.k.sj.ef.f.i.mf@gmail.com"">f.ran.k.sj.ef.f.i.mf@gmail.com</a>
<a href=""mailto:f.r.a.n.ks.jeff.i.m.f@gmail.com"">f.r.a.n.ks.jeff.i.m.f@gmail.com</a>
<a href=""mailto:f.r.a.n.ksjeff.im.f@gmail.com"">f.r.a.n.ksjeff.im.f@gmail.com</a>
<a href=""mailto:f.r.a.n.k.s.je.f.f.i.mf@gmail.com"">f.r.a.n.k.s.je.f.f.i.mf@gmail.com</a>
<a href=""mailto:f.ra.nk.sje.ff.imf@gmail.com"">f.ra.nk.sje.ff.imf@gmail.com</a>
<a href=""mailto:f.ra.nk.sje.ffim.f@gmail.com"">f.ra.nk.sje.ffim.f@gmail.com</a>
<a href=""mailto:f.r.ank.s.jeffimf@gmail.com"">f.r.ank.s.jeffimf@gmail.com</a>
<a href=""mailto:fr.ank.s.jef.f.imf@gmail.com"">fr.ank.s.jef.f.imf@gmail.com</a>
<a href=""mailto:f.ra.nksje.f.f.i.mf@gmail.com"">f.ra.nksje.f.f.i.mf@gmail.com</a>
<a href=""mailto:f.r.an.k.s.jef.fim.f@gmail.com"">f.r.an.k.s.jef.fim.f@gmail.com</a>
<a href=""mailto:fra.nks.j.e.f.f.imf@gmail.com"">fra.nks.j.e.f.f.imf@gmail.com</a>
<a href=""mailto:fra.n.ksj.e.ffi.mf@gmail.com"">fra.n.ksj.e.ffi.mf@gmail.com</a>
<a href=""mailto:frank.s.jeff.i.mf@gmail.com"">frank.s.jeff.i.mf@gmail.com</a>
<a href=""mailto:fran.ks.j.effimf@gmail.com"">fran.ks.j.effimf@gmail.com</a>
<a href=""mailto:fr.ank.sje.f.f.i.mf@gmail.com"">fr.ank.sje.f.f.i.mf@gmail.com</a>
<a href=""mailto:f.ran.k.sjeffim.f@gmail.com"">f.ran.k.sjeffim.f@gmail.com</a>
<a href=""mailto:fr.an.k.s.j.ef.f.imf@gmail.com"">fr.an.k.s.j.ef.f.imf@gmail.com</a>
<a href=""mailto:fran.k.s.je.f.fi.mf@gmail.com"">fran.k.s.je.f.fi.mf@gmail.com</a>
<a href=""mailto:franksj.ef.f.i.mf@gmail.com"">franksj.ef.f.i.mf@gmail.com</a>
<a href=""mailto:f.r.a.nk.sje.f.fimf@gmail.com"">f.r.a.nk.sje.f.fimf@gmail.com</a>
<a href=""mailto:f.r.a.nksj.ef.fi.mf@gmail.com"">f.r.a.nksj.ef.fi.mf@gmail.com</a>
<a href=""mailto:fr.a.nk.s.j.e.ff.i.m.f@gmail.com"">fr.a.nk.s.j.e.ff.i.m.f@gmail.com</a>
<a href=""mailto:f.ra.nksj.e.f.fim.f@gmail.com"">f.ra.nksj.e.f.fim.f@gmail.com</a>
<a href=""mailto:fran.k.sj.e.f.f.imf@gmail.com"">fran.k.sj.e.f.f.imf@gmail.com</a>
<a href=""mailto:f.r.anks.je.f.f.i.mf@gmail.com"">f.r.anks.je.f.f.i.mf@gmail.com</a>
<a href=""mailto:fr.a.n.ks.j.e.f.fim.f@gmail.com"">fr.a.n.ks.j.e.f.fim.f@gmail.com</a>
<a href=""mailto:f.ranks.je.ffi.mf@gmail.com"">f.ranks.je.ffi.mf@gmail.com</a>
<a href=""mailto:fr.a.nksje.f.fi.mf@gmail.com"">fr.a.nksje.f.fi.mf@gmail.com</a>
<a href=""mailto:fr.a.nks.j.ef.fi.m.f@gmail.com"">fr.a.nks.j.ef.fi.m.f@gmail.com</a>
<a href=""mailto:fr.an.ksj.e.ffi.m.f@gmail.com"">fr.an.ksj.e.ffi.m.f@gmail.com</a>
<a href=""mailto:fra.n.k.sje.f.fimf@gmail.com"">fra.n.k.sje.f.fimf@gmail.com</a>
<a href=""mailto:f.r.a.n.ksj.ef.fimf@gmail.com"">f.r.a.n.ksj.ef.fimf@gmail.com</a>
<a href=""mailto:f.r.a.nks.jeff.i.m.f@gmail.com"">f.r.a.nks.jeff.i.m.f@gmail.com</a>
<a href=""mailto:fra.n.ksj.e.ffim.f@gmail.com"">fra.n.ksj.e.ffim.f@gmail.com</a>
<a href=""mailto:franks.je.ff.i.mf@gmail.com"">franks.je.ff.i.mf@gmail.com</a>
<a href=""mailto:fr.ank.s.jef.fi.mf@gmail.com"">fr.ank.s.jef.fi.mf@gmail.com</a>
<a href=""mailto:fra.nks.je.f.f.i.mf@gmail.com"">fra.nks.je.f.f.i.mf@gmail.com</a>
<a href=""mailto:fr.anks.jef.fim.f@gmail.com"">fr.anks.jef.fim.f@gmail.com</a>
<a href=""mailto:fr.a.nk.sj.ef.f.im.f@gmail.com"">fr.a.nk.sj.ef.f.im.f@gmail.com</a>
<a href=""mailto:f.r.a.n.ksj.e.f.f.i.mf@gmail.com"">f.r.a.n.ksj.e.f.f.i.mf@gmail.com</a>
<a href=""mailto:fr.an.ks.je.ff.imf@gmail.com"">fr.an.ks.je.ff.imf@gmail.com</a>
<a href=""mailto:f.ra.n.ks.jeffi.m.f@gmail.com"">f.ra.n.ks.jeffi.m.f@gmail.com</a>
<a href=""mailto:f.r.an.k.sjef.fi.mf@gmail.com"">f.r.an.k.sjef.fi.mf@gmail.com</a>
<a href=""mailto:fr.a.nksj.e.ffim.f@gmail.com"">fr.a.nksj.e.ffim.f@gmail.com</a>
<a href=""mailto:fr.anks.j.e.f.fi.mf@gmail.com"">fr.anks.j.e.f.fi.mf@gmail.com</a>
<a href=""mailto:f.r.a.nksj.e.ffi.m.f@gmail.com"">f.r.a.nksj.e.ffi.m.f@gmail.com</a>
<a href=""mailto:f.ra.n.ks.je.ffim.f@gmail.com"">f.ra.n.ks.je.ffim.f@gmail.com</a>
<a href=""mailto:f.ra.n.ksjef.fimf@gmail.com"">f.ra.n.ksjef.fimf@gmail.com</a>
<a href=""mailto:f.r.an.ksj.e.f.fi.m.f@gmail.com"">f.r.an.ksj.e.f.fi.m.f@gmail.com</a>
<a href=""mailto:f.r.ank.sj.eff.imf@gmail.com"">f.r.ank.sj.eff.imf@gmail.com</a>
<a href=""mailto:f.ran.k.sj.e.f.f.im.f@gmail.com"">f.ran.k.sj.e.f.f.im.f@gmail.com</a>
<a href=""mailto:fr.a.nksje.f.f.im.f@gmail.com"">fr.a.nksje.f.f.im.f@gmail.com</a>
<a href=""mailto:fr.a.nksjef.fim.f@gmail.com"">fr.a.nksjef.fim.f@gmail.com</a>
<a href=""mailto:f.r.a.nk.s.jef.f.im.f@gmail.com"">f.r.a.nk.s.jef.f.im.f@gmail.com</a>
<a href=""mailto:f.ra.n.ksjeffimf@gmail.com"">f.ra.n.ksjeffimf@gmail.com</a>
<a href=""mailto:f.ran.k.s.jef.fi.mf@gmail.com"">f.ran.k.s.jef.fi.mf@gmail.com</a>
<a href=""mailto:fra.n.ks.jef.f.i.m.f@gmail.com"">fra.n.ks.jef.f.i.m.f@gmail.com</a>
<a href=""mailto:f.ra.n.ks.j.effimf@gmail.com"">f.ra.n.ks.j.effimf@gmail.com</a>
<a href=""mailto:franksj.e.f.f.i.m.f@gmail.com"">franksj.e.f.f.i.m.f@gmail.com</a>
<a href=""mailto:f.r.a.nk.s.je.f.fim.f@gmail.com"">f.r.a.nk.s.je.f.fim.f@gmail.com</a>
<a href=""mailto:f.ra.n.k.sje.f.f.i.m.f@gmail.com"">f.ra.n.k.sje.f.f.i.m.f@gmail.com</a>
<a href=""mailto:f.r.ank.sjef.fim.f@gmail.com"">f.r.ank.sjef.fim.f@gmail.com</a>
<a href=""mailto:fr.a.nk.s.je.ffi.m.f@gmail.com"">fr.a.nk.s.je.ffi.m.f@gmail.com</a>
<a href=""mailto:fr.a.nk.sjeff.im.f@gmail.com"">fr.a.nk.sjeff.im.f@gmail.com</a>
<a href=""mailto:fr.a.n.ksj.ef.f.i.mf@gmail.com"">fr.a.n.ksj.ef.f.i.mf@gmail.com</a>
<a href=""mailto:f.r.a.nksj.ef.fimf@gmail.com"">f.r.a.nksj.ef.fimf@gmail.com</a>
<a href=""mailto:f.ra.nks.jef.f.imf@gmail.com"">f.ra.nks.jef.f.imf@gmail.com</a>
<a href=""mailto:f.ran.ksj.e.f.fi.mf@gmail.com"">f.ran.ksj.e.f.fi.mf@gmail.com</a>
<a href=""mailto:f.r.anksj.effi.m.f@gmail.com"">f.r.anksj.effi.m.f@gmail.com</a>
<a href=""mailto:f.r.an.k.s.j.ef.fim.f@gmail.com"">f.r.an.k.s.j.ef.fim.f@gmail.com</a>
<a href=""mailto:f.r.an.k.s.jeffi.m.f@gmail.com"">f.r.an.k.s.jeffi.m.f@gmail.com</a>
<a href=""mailto:fra.n.ksjeffim.f@gmail.com"">fra.n.ksjeffim.f@gmail.com</a>
<a href=""mailto:f.r.an.k.sj.eff.i.m.f@gmail.com"">f.r.an.k.sj.eff.i.m.f@gmail.com</a>
<a href=""mailto:f.ranksje.f.f.imf@gmail.com"">f.ranksje.f.f.imf@gmail.com</a>
<a href=""mailto:f.r.a.n.ksjeff.i.mf@gmail.com"">f.r.a.n.ksjeff.i.mf@gmail.com</a>
<a href=""mailto:f.r.a.nk.s.jef.fim.f@gmail.com"">f.r.a.nk.s.jef.fim.f@gmail.com</a>
<a href=""mailto:fran.ks.jef.fi.m.f@gmail.com"">fran.ks.jef.fi.m.f@gmail.com</a>
<a href=""mailto:fr.a.n.k.sj.effimf@gmail.com"">fr.a.n.k.sj.effimf@gmail.com</a>
<a href=""mailto:fr.a.nk.sje.f.fi.m.f@gmail.com"">fr.a.nk.sje.f.fi.m.f@gmail.com</a>
<a href=""mailto:franks.j.effimf@gmail.com"">franks.j.effimf@gmail.com</a>
<a href=""mailto:f.r.a.nksjef.f.imf@gmail.com"">f.r.a.nksjef.f.imf@gmail.com</a>
<a href=""mailto:f.r.ank.sje.f.fimf@gmail.com"">f.r.ank.sje.f.fimf@gmail.com</a>
<a href=""mailto:fran.k.sjef.fi.mf@gmail.com"">fran.k.sjef.fi.mf@gmail.com</a>
<a href=""mailto:f.ra.n.k.s.je.f.f.i.mf@gmail.com"">f.ra.n.k.s.je.f.f.i.mf@gmail.com</a>
<a href=""mailto:fr.a.nksj.eff.imf@gmail.com"">fr.a.nksj.eff.imf@gmail.com</a>
<a href=""mailto:f.ra.n.k.sje.ffi.mf@gmail.com"">f.ra.n.k.sje.ffi.mf@gmail.com</a>
<a href=""mailto:f.ra.n.ks.j.e.ffim.f@gmail.com"">f.ra.n.ks.j.e.ffim.f@gmail.com</a>
<a href=""mailto:f.ran.ksjef.f.i.mf@gmail.com"">f.ran.ksjef.f.i.mf@gmail.com</a>
<a href=""mailto:fr.anks.j.e.ff.i.m.f@gmail.com"">fr.anks.j.e.ff.i.m.f@gmail.com</a>
<a href=""mailto:f.r.a.nk.s.j.e.f.f.i.mf@gmail.com"">f.r.a.nk.s.j.e.f.f.i.mf@gmail.com</a>
<a href=""mailto:fr.a.nk.s.jef.f.i.m.f@gmail.com"">fr.a.nk.s.jef.f.i.m.f@gmail.com</a>
<a href=""mailto:fran.ksj.ef.fimf@gmail.com"">fran.ksj.ef.fimf@gmail.com</a>
<a href=""mailto:f.r.ank.s.j.e.f.fim.f@gmail.com"">f.r.ank.s.j.e.f.fim.f@gmail.com</a>
<a href=""mailto:f.r.a.nk.sj.ef.fimf@gmail.com"">f.r.a.nk.sj.ef.fimf@gmail.com</a>
<a href=""mailto:fran.ks.jeff.imf@gmail.com"">fran.ks.jeff.imf@gmail.com</a>
<a href=""mailto:f.ra.n.k.sjef.fi.m.f@gmail.com"">f.ra.n.k.sjef.fi.m.f@gmail.com</a>
<a href=""mailto:fra.n.k.sje.f.fim.f@gmail.com"">fra.n.k.sje.f.fim.f@gmail.com</a>
<a href=""mailto:f.ranks.j.effi.mf@gmail.com"">f.ranks.j.effi.mf@gmail.com</a>
<a href=""mailto:f.ranksje.ffi.m.f@gmail.com"">f.ranksje.ffi.m.f@gmail.com</a>
<a href=""mailto:f.ra.nksjef.f.i.m.f@gmail.com"">f.ra.nksjef.f.i.m.f@gmail.com</a>
<a href=""mailto:fr.an.ks.j.ef.f.i.m.f@gmail.com"">fr.an.ks.j.ef.f.i.m.f@gmail.com</a>
<a href=""mailto:franks.j.e.ff.i.mf@gmail.com"">franks.j.e.ff.i.mf@gmail.com</a>
<a href=""mailto:f.r.anks.je.ff.i.mf@gmail.com"">f.r.anks.je.ff.i.mf@gmail.com</a>
<a href=""mailto:fr.an.ks.jeffim.f@gmail.com"">fr.an.ks.jeffim.f@gmail.com</a>
<a href=""mailto:fran.k.s.j.e.f.fim.f@gmail.com"">fran.k.s.j.e.f.fim.f@gmail.com</a>
<a href=""mailto:f.ra.nk.sj.e.f.fi.mf@gmail.com"">f.ra.nk.sj.e.f.fi.mf@gmail.com</a>
<a href=""mailto:fran.ksj.e.ff.imf@gmail.com"">fran.ksj.e.ff.imf@gmail.com</a>
<a href=""mailto:f.ra.nk.sjeffi.m.f@gmail.com"">f.ra.nk.sjeffi.m.f@gmail.com</a>
<a href=""mailto:f.r.an.ks.j.e.ffim.f@gmail.com"">f.r.an.ks.j.e.ffim.f@gmail.com</a>
<a href=""mailto:fr.ank.s.j.ef.fim.f@gmail.com"">fr.ank.s.j.ef.fim.f@gmail.com</a>
<a href=""mailto:f.r.a.n.ksjeffim.f@gmail.com"">f.r.a.n.ksjeffim.f@gmail.com</a>
<a href=""mailto:fra.nk.s.jef.fi.mf@gmail.com"">fra.nk.s.jef.fi.mf@gmail.com</a>
<a href=""mailto:fran.ksjef.f.im.f@gmail.com"">fran.ksjef.f.im.f@gmail.com</a>
<a href=""mailto:f.r.a.n.k.sjef.fi.mf@gmail.com"">f.r.a.n.k.sjef.fi.mf@gmail.com</a>
<a href=""mailto:f.ranksjeffimf@gmail.com"">f.ranksjeffimf@gmail.com</a>
<a href=""mailto:f.r.a.nksj.e.ffimf@gmail.com"">f.r.a.nksj.e.ffimf@gmail.com</a>
<a href=""mailto:fr.anks.je.ff.imf@gmail.com"">fr.anks.je.ff.imf@gmail.com</a>
<a href=""mailto:fr.a.nksj.ef.f.i.m.f@gmail.com"">fr.a.nksj.ef.f.i.m.f@gmail.com</a>
<a href=""mailto:f.ra.nk.s.jef.fimf@gmail.com"">f.ra.nk.s.jef.fimf@gmail.com</a>
<a href=""mailto:f.ra.nks.je.f.fi.mf@gmail.com"">f.ra.nks.je.f.fi.mf@gmail.com</a>
<a href=""mailto:f.rank.sje.ffim.f@gmail.com"">f.rank.sje.ffim.f@gmail.com</a>
<a href=""mailto:f.ra.nk.s.je.f.fimf@gmail.com"">f.ra.nk.s.je.f.fimf@gmail.com</a>
<a href=""mailto:frank.sj.e.ffim.f@gmail.com"">frank.sj.e.ffim.f@gmail.com</a>
<a href=""mailto:f.ran.k.s.j.e.f.f.imf@gmail.com"">f.ran.k.s.j.e.f.f.imf@gmail.com</a>
<a href=""mailto:fra.nksj.ef.f.i.m.f@gmail.com"">fra.nksj.ef.f.i.m.f@gmail.com</a>
<a href=""mailto:f.r.an.ksjef.f.im.f@gmail.com"">f.r.an.ksjef.f.im.f@gmail.com</a>
<a href=""mailto:fr.a.nksj.e.f.f.i.mf@gmail.com"">fr.a.nksj.e.f.f.i.mf@gmail.com</a>
<a href=""mailto:f.ra.nksj.e.f.fimf@gmail.com"">f.ra.nksj.e.f.fimf@gmail.com</a>
<a href=""mailto:f.r.a.nks.jeff.i.mf@gmail.com"">f.r.a.nks.jeff.i.mf@gmail.com</a>
<a href=""mailto:fra.nk.s.j.e.f.fi.mf@gmail.com"">fra.nk.s.j.e.f.fi.mf@gmail.com</a>
<a href=""mailto:f.ran.ks.je.f.fim.f@gmail.com"">f.ran.ks.je.f.fim.f@gmail.com</a>
<a href=""mailto:f.r.anksj.eff.im.f@gmail.com"">f.r.anksj.eff.im.f@gmail.com</a>
<a href=""mailto:f.r.a.n.k.sjeff.imf@gmail.com"">f.r.a.n.k.sjeff.imf@gmail.com</a>
<a href=""mailto:f.ra.nk.s.j.ef.fi.m.f@gmail.com"">f.ra.nk.s.j.ef.fi.m.f@gmail.com</a>
<a href=""mailto:f.ra.n.k.s.j.eff.im.f@gmail.com"">f.ra.n.k.s.j.eff.im.f@gmail.com</a>
<a href=""mailto:f.ra.n.ks.j.ef.fi.mf@gmail.com"">f.ra.n.ks.j.ef.fi.mf@gmail.com</a>
<a href=""mailto:f.r.a.nk.sj.effim.f@gmail.com"">f.r.a.nk.sj.effim.f@gmail.com</a>
<a href=""mailto:f.r.anksj.e.ffimf@gmail.com"">f.r.anksj.e.ffimf@gmail.com</a>
<a href=""mailto:fr.an.ks.je.ff.i.m.f@gmail.com"">fr.an.ks.je.ff.i.m.f@gmail.com</a>
<a href=""mailto:f.ra.nks.j.ef.fim.f@gmail.com"">f.ra.nks.j.ef.fim.f@gmail.com</a>
<a href=""mailto:f.rank.s.jeffi.m.f@gmail.com"">f.rank.s.jeffi.m.f@gmail.com</a>
<a href=""mailto:f.ra.nksj.effimf@gmail.com"">f.ra.nksj.effimf@gmail.com</a>
<a href=""mailto:f.ra.n.ksje.ffimf@gmail.com"">f.ra.n.ksje.ffimf@gmail.com</a>
<a href=""mailto:f.r.ank.s.je.ffim.f@gmail.com"">f.r.ank.s.je.ffim.f@gmail.com</a>
<a href=""mailto:fr.an.k.sj.ef.fim.f@gmail.com"">fr.an.k.sj.ef.fim.f@gmail.com</a>
<a href=""mailto:fr.a.nks.je.f.fimf@gmail.com"">fr.a.nks.je.f.fimf@gmail.com</a>
<a href=""mailto:f.ra.n.k.sj.e.ffimf@gmail.com"">f.ra.n.k.sj.e.ffimf@gmail.com</a>
<a href=""mailto:fr.a.nksje.ff.i.m.f@gmail.com"">fr.a.nksje.ff.i.m.f@gmail.com</a>
<a href=""mailto:f.r.an.k.sje.f.f.i.m.f@gmail.com"">f.r.an.k.sje.f.f.i.m.f@gmail.com</a>
<a href=""mailto:f.ra.nk.sj.ef.fim.f@gmail.com"">f.ra.nk.sj.ef.fim.f@gmail.com</a>
<a href=""mailto:f.r.ank.s.jeff.imf@gmail.com"">f.r.ank.s.jeff.imf@gmail.com</a>
<a href=""mailto:serenasunderland578@gmail.com"">serenasunderland578@gmail.com</a>
<a href=""mailto:s.e.renasu.n.d.e.r.l.and5.7.8@gmail.com"">s.e.renasu.n.d.e.r.l.and5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.enasu.nd.erl.and.5.78@gmail.com"">s.e.r.enasu.nd.erl.and.5.78@gmail.com</a>
<a href=""mailto:s.erena.su.n.de.r.lan.d.578@gmail.com"">s.erena.su.n.de.r.lan.d.578@gmail.com</a>
<a href=""mailto:s.e.renas.u.n.de.rla.n.d578@gmail.com"">s.e.renas.u.n.de.rla.n.d578@gmail.com</a>
<a href=""mailto:ser.enas.u.n.de.rla.nd578@gmail.com"">ser.enas.u.n.de.rla.nd578@gmail.com</a>
<a href=""mailto:se.r.ena.s.u.n.d.er.la.nd.578@gmail.com"">se.r.ena.s.u.n.d.er.la.nd.578@gmail.com</a>
<a href=""mailto:s.er.e.na.s.u.nd.e.r.l.a.n.d.5.7.8@gmail.com"">s.er.e.na.s.u.nd.e.r.l.a.n.d.5.7.8@gmail.com</a>
<a href=""mailto:seren.a.sunderl.a.n.d.57.8@gmail.com"">seren.a.sunderl.a.n.d.57.8@gmail.com</a>
<a href=""mailto:s.er.enas.unde.rlan.d.5.78@gmail.com"">s.er.enas.unde.rlan.d.5.78@gmail.com</a>
<a href=""mailto:ser.ena.sunderland578@gmail.com"">ser.ena.sunderland578@gmail.com</a>
<a href=""mailto:se.ren.as.u.nderlan.d5.78@gmail.com"">se.ren.as.u.nderlan.d5.78@gmail.com</a>
<a href=""mailto:se.renas.u.n.d.e.rlan.d.5.7.8@gmail.com"">se.renas.u.n.d.e.rlan.d.5.7.8@gmail.com</a>
<a href=""mailto:seren.a.sund.e.r.la.nd.5.7.8@gmail.com"">seren.a.sund.e.r.la.nd.5.7.8@gmail.com</a>
<a href=""mailto:s.er.e.na.s.u.nderl.a.nd57.8@gmail.com"">s.er.e.na.s.u.nderl.a.nd57.8@gmail.com</a>
<a href=""mailto:seren.a.su.n.de.r.land57.8@gmail.com"">seren.a.su.n.de.r.land57.8@gmail.com</a>
<a href=""mailto:s.e.re.n.asu.n.d.e.rl.a.nd.57.8@gmail.com"">s.e.re.n.asu.n.d.e.rl.a.nd.57.8@gmail.com</a>
<a href=""mailto:se.r.en.a.s.unde.rlan.d5.78@gmail.com"">se.r.en.a.s.unde.rlan.d5.78@gmail.com</a>
<a href=""mailto:s.e.r.ena.s.under.l.and.5.7.8@gmail.com"">s.e.r.ena.s.under.l.and.5.7.8@gmail.com</a>
<a href=""mailto:s.e.re.n.a.s.und.er.la.n.d578@gmail.com"">s.e.re.n.a.s.und.er.la.n.d578@gmail.com</a>
<a href=""mailto:serena.s.un.d.e.r.land57.8@gmail.com"">serena.s.un.d.e.r.land57.8@gmail.com</a>
<a href=""mailto:ser.en.asun.de.rla.nd.5.78@gmail.com"">ser.en.asun.de.rla.nd.5.78@gmail.com</a>
<a href=""mailto:s.eren.as.u.n.derland5.7.8@gmail.com"">s.eren.as.u.n.derland5.7.8@gmail.com</a>
<a href=""mailto:se.ren.asund.er.l.a.nd.5.7.8@gmail.com"">se.ren.asund.er.l.a.nd.5.7.8@gmail.com</a>
<a href=""mailto:s.e.re.n.a.s.un.d.e.rl.a.nd578@gmail.com"">s.e.re.n.a.s.un.d.e.rl.a.nd578@gmail.com</a>
<a href=""mailto:s.er.en.asu.n.der.l.a.n.d5.7.8@gmail.com"">s.er.en.asu.n.der.l.a.n.d5.7.8@gmail.com</a>
<a href=""mailto:s.e.ren.asun.de.r.l.a.n.d57.8@gmail.com"">s.e.ren.asun.de.r.l.a.n.d57.8@gmail.com</a>
<a href=""mailto:s.er.e.n.as.u.n.de.rl.an.d.5.78@gmail.com"">s.er.e.n.as.u.n.de.rl.an.d.5.78@gmail.com</a>
<a href=""mailto:se.ren.as.underl.and5.7.8@gmail.com"">se.ren.as.underl.and5.7.8@gmail.com</a>
<a href=""mailto:se.r.en.as.u.nd.erla.n.d.5.78@gmail.com"">se.r.en.as.u.nd.erla.n.d.5.78@gmail.com</a>
<a href=""mailto:serena.s.u.n.d.e.r.l.and57.8@gmail.com"">serena.s.u.n.d.e.r.l.and57.8@gmail.com</a>
<a href=""mailto:sere.na.sunde.rla.nd5.78@gmail.com"">sere.na.sunde.rla.nd5.78@gmail.com</a>
<a href=""mailto:se.r.en.a.su.nd.er.l.a.nd.5.7.8@gmail.com"">se.r.en.a.su.nd.er.l.a.nd.5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.e.n.a.su.n.der.land.5.7.8@gmail.com"">s.e.r.e.n.a.su.n.der.land.5.7.8@gmail.com</a>
<a href=""mailto:s.er.e.na.sun.derland57.8@gmail.com"">s.er.e.na.sun.derland57.8@gmail.com</a>
<a href=""mailto:sere.n.a.su.n.d.e.rl.a.n.d5.78@gmail.com"">sere.n.a.su.n.d.e.rl.a.n.d5.78@gmail.com</a>
<a href=""mailto:s.er.e.n.as.u.nd.er.l.and.5.78@gmail.com"">s.er.e.n.as.u.nd.er.l.and.5.78@gmail.com</a>
<a href=""mailto:se.r.e.n.as.und.e.rla.nd.578@gmail.com"">se.r.e.n.as.und.e.rla.nd.578@gmail.com</a>
<a href=""mailto:s.e.re.n.as.u.n.d.erlan.d.578@gmail.com"">s.e.re.n.as.u.n.d.erlan.d.578@gmail.com</a>
<a href=""mailto:se.re.nas.un.de.rla.n.d.57.8@gmail.com"">se.re.nas.un.de.rla.n.d.57.8@gmail.com</a>
<a href=""mailto:s.e.r.enasu.nder.la.n.d57.8@gmail.com"">s.e.r.enasu.nder.la.n.d57.8@gmail.com</a>
<a href=""mailto:se.r.enas.u.n.de.rla.n.d5.7.8@gmail.com"">se.r.enas.u.n.de.rla.n.d5.7.8@gmail.com</a>
<a href=""mailto:se.ren.a.s.u.n.d.er.l.a.n.d5.7.8@gmail.com"">se.ren.a.s.u.n.d.er.l.a.n.d5.7.8@gmail.com</a>
<a href=""mailto:se.r.e.nasunde.rl.a.n.d578@gmail.com"">se.r.e.nasunde.rl.a.n.d578@gmail.com</a>
<a href=""mailto:ser.en.a.sun.derl.an.d.5.7.8@gmail.com"">ser.en.a.sun.derl.an.d.5.7.8@gmail.com</a>
<a href=""mailto:ser.en.asunder.l.a.nd.5.7.8@gmail.com"">ser.en.asunder.l.a.nd.5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.e.nas.u.n.d.e.r.la.n.d57.8@gmail.com"">s.e.r.e.nas.u.n.d.e.r.la.n.d57.8@gmail.com</a>
<a href=""mailto:se.r.enasu.n.de.r.l.a.nd5.7.8@gmail.com"">se.r.enasu.n.de.r.l.a.nd5.7.8@gmail.com</a>
<a href=""mailto:se.r.enas.u.nd.erl.a.nd.5.78@gmail.com"">se.r.enas.u.nd.erl.a.nd.5.78@gmail.com</a>
<a href=""mailto:seren.asun.der.la.nd.578@gmail.com"">seren.asun.der.la.nd.578@gmail.com</a>
<a href=""mailto:s.e.r.enas.u.nder.la.nd5.78@gmail.com"">s.e.r.enas.u.nder.la.nd5.78@gmail.com</a>
<a href=""mailto:s.er.en.as.u.n.der.l.an.d5.78@gmail.com"">s.er.en.as.u.n.der.l.an.d5.78@gmail.com</a>
<a href=""mailto:ser.e.n.a.s.unde.r.l.an.d.57.8@gmail.com"">ser.e.n.a.s.unde.r.l.an.d.57.8@gmail.com</a>
<a href=""mailto:s.ere.n.a.sun.der.land57.8@gmail.com"">s.ere.n.a.sun.der.land57.8@gmail.com</a>
<a href=""mailto:s.eren.asu.n.d.e.rl.a.nd.578@gmail.com"">s.eren.asu.n.d.e.rl.a.nd.578@gmail.com</a>
<a href=""mailto:se.re.nasu.nd.e.r.l.a.n.d57.8@gmail.com"">se.re.nasu.nd.e.r.l.a.n.d57.8@gmail.com</a>
<a href=""mailto:sere.n.a.sun.der.lan.d578@gmail.com"">sere.n.a.sun.der.lan.d578@gmail.com</a>
<a href=""mailto:se.r.ena.s.un.d.erl.a.n.d5.7.8@gmail.com"">se.r.ena.s.un.d.erl.a.n.d5.7.8@gmail.com</a>
<a href=""mailto:sere.n.asunde.rla.n.d.578@gmail.com"">sere.n.asunde.rla.n.d.578@gmail.com</a>
<a href=""mailto:s.e.r.en.asun.d.erla.nd.5.78@gmail.com"">s.e.r.en.asun.d.erla.nd.5.78@gmail.com</a>
<a href=""mailto:s.e.re.n.asu.n.der.l.and57.8@gmail.com"">s.e.re.n.asu.n.der.l.and57.8@gmail.com</a>
<a href=""mailto:s.e.r.enas.u.nd.e.r.land5.7.8@gmail.com"">s.e.r.enas.u.nd.e.r.land5.7.8@gmail.com</a>
<a href=""mailto:se.rena.sun.d.er.la.nd57.8@gmail.com"">se.rena.sun.d.er.la.nd57.8@gmail.com</a>
<a href=""mailto:ser.enas.u.n.d.er.l.a.nd5.7.8@gmail.com"">ser.enas.u.n.d.er.l.a.nd5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.enas.u.nd.e.rla.nd.5.78@gmail.com"">s.e.r.enas.u.nd.e.rla.nd.5.78@gmail.com</a>
<a href=""mailto:serenas.u.nd.erl.a.nd57.8@gmail.com"">serenas.u.nd.erl.a.nd57.8@gmail.com</a>
<a href=""mailto:se.r.ena.s.und.erl.a.n.d57.8@gmail.com"">se.r.ena.s.und.erl.a.n.d57.8@gmail.com</a>
<a href=""mailto:s.e.r.en.a.s.u.nderland5.78@gmail.com"">s.e.r.en.a.s.u.nderland5.78@gmail.com</a>
<a href=""mailto:sere.na.sund.e.r.land.5.78@gmail.com"">sere.na.sund.e.r.land.5.78@gmail.com</a>
<a href=""mailto:se.r.en.asunde.rla.n.d578@gmail.com"">se.r.en.asunde.rla.n.d578@gmail.com</a>
<a href=""mailto:sere.n.a.su.n.de.r.l.and5.78@gmail.com"">sere.n.a.su.n.de.r.l.and5.78@gmail.com</a>
<a href=""mailto:se.r.en.a.su.nd.erl.a.n.d578@gmail.com"">se.r.en.a.su.nd.erl.a.n.d578@gmail.com</a>
<a href=""mailto:se.r.en.a.su.nde.r.lan.d.578@gmail.com"">se.r.en.a.su.nde.r.lan.d.578@gmail.com</a>
<a href=""mailto:s.e.re.nasu.nd.e.rl.a.n.d.57.8@gmail.com"">s.e.re.nasu.nd.e.rl.a.n.d.57.8@gmail.com</a>
<a href=""mailto:se.re.n.a.s.u.nd.e.rlan.d.578@gmail.com"">se.re.n.a.s.u.nd.e.rlan.d.578@gmail.com</a>
<a href=""mailto:s.er.enasu.nd.e.r.land5.78@gmail.com"">s.er.enasu.nd.e.r.land5.78@gmail.com</a>
<a href=""mailto:s.eren.as.und.e.rl.a.n.d5.78@gmail.com"">s.eren.as.und.e.rl.a.n.d5.78@gmail.com</a>
<a href=""mailto:s.e.r.enas.un.derl.an.d5.78@gmail.com"">s.e.r.enas.un.derl.an.d5.78@gmail.com</a>
<a href=""mailto:se.r.e.n.as.un.d.e.rl.a.n.d578@gmail.com"">se.r.e.n.as.un.d.e.rl.a.n.d578@gmail.com</a>
<a href=""mailto:s.ere.n.a.su.nde.rla.n.d5.78@gmail.com"">s.ere.n.a.su.nde.rla.n.d5.78@gmail.com</a>
<a href=""mailto:se.r.en.a.su.nd.er.l.a.nd5.7.8@gmail.com"">se.r.en.a.su.nd.er.l.a.nd5.7.8@gmail.com</a>
<a href=""mailto:s.ere.nasun.d.e.r.land.57.8@gmail.com"">s.ere.nasun.d.e.r.land.57.8@gmail.com</a>
<a href=""mailto:ser.ena.s.und.e.r.land578@gmail.com"">ser.ena.s.und.e.r.land578@gmail.com</a>
<a href=""mailto:ser.e.n.as.u.n.derla.n.d5.78@gmail.com"">ser.e.n.as.u.n.derla.n.d5.78@gmail.com</a>
<a href=""mailto:s.e.re.n.a.sund.er.l.and5.78@gmail.com"">s.e.re.n.a.sund.er.l.and5.78@gmail.com</a>
<a href=""mailto:s.e.r.e.n.a.su.nd.e.rlan.d5.7.8@gmail.com"">s.e.r.e.n.a.su.nd.e.rlan.d5.7.8@gmail.com</a>
<a href=""mailto:sere.nas.u.n.d.e.rland.5.7.8@gmail.com"">sere.nas.u.n.d.e.rland.5.7.8@gmail.com</a>
<a href=""mailto:s.er.e.n.as.u.n.d.e.rl.and5.7.8@gmail.com"">s.er.e.n.as.u.n.d.e.rl.and5.7.8@gmail.com</a>
<a href=""mailto:se.r.en.a.s.u.n.de.r.l.a.nd5.78@gmail.com"">se.r.en.a.s.u.n.de.r.l.a.nd5.78@gmail.com</a>
<a href=""mailto:se.r.en.asu.n.d.erland.5.7.8@gmail.com"">se.r.en.asu.n.d.erland.5.7.8@gmail.com</a>
<a href=""mailto:s.er.e.nas.u.n.d.er.l.and.5.78@gmail.com"">s.er.e.nas.u.n.d.er.l.and.5.78@gmail.com</a>
<a href=""mailto:s.e.r.ena.s.un.der.land578@gmail.com"">s.e.r.ena.s.un.der.land578@gmail.com</a>
<a href=""mailto:s.e.re.n.as.und.erl.a.n.d.5.78@gmail.com"">s.e.re.n.as.und.erl.a.n.d.5.78@gmail.com</a>
<a href=""mailto:ser.en.asu.nderl.an.d578@gmail.com"">ser.en.asu.nderl.an.d578@gmail.com</a>
<a href=""mailto:s.er.ena.sunder.lan.d578@gmail.com"">s.er.ena.sunder.lan.d578@gmail.com</a>
<a href=""mailto:s.ere.nas.u.nd.er.l.a.n.d57.8@gmail.com"">s.ere.nas.u.nd.er.l.a.n.d57.8@gmail.com</a>
<a href=""mailto:s.erena.s.u.n.d.e.r.l.and.5.7.8@gmail.com"">s.erena.s.u.n.d.e.r.l.and.5.7.8@gmail.com</a>
<a href=""mailto:se.ren.as.un.d.erl.and5.78@gmail.com"">se.ren.as.un.d.erl.and5.78@gmail.com</a>
<a href=""mailto:s.e.r.ena.s.un.derl.a.n.d57.8@gmail.com"">s.e.r.ena.s.un.derl.a.n.d57.8@gmail.com</a>
<a href=""mailto:s.er.e.n.a.s.u.n.derl.an.d5.78@gmail.com"">s.er.e.n.a.s.u.n.derl.an.d5.78@gmail.com</a>
<a href=""mailto:s.e.r.e.na.s.u.nd.e.r.l.and.5.7.8@gmail.com"">s.e.r.e.na.s.u.nd.e.r.l.and.5.7.8@gmail.com</a>
<a href=""mailto:s.ere.n.asu.nderl.a.nd.5.78@gmail.com"">s.ere.n.asu.nderl.a.nd.5.78@gmail.com</a>
<a href=""mailto:se.re.na.sund.e.r.la.n.d.5.7.8@gmail.com"">se.re.na.sund.e.r.la.n.d.5.7.8@gmail.com</a>
<a href=""mailto:sere.n.as.un.de.r.l.and5.78@gmail.com"">sere.n.as.un.de.r.l.and5.78@gmail.com</a>
<a href=""mailto:se.r.e.nas.u.nd.e.r.land5.78@gmail.com"">se.r.e.nas.u.nd.e.r.land5.78@gmail.com</a>
<a href=""mailto:ser.e.na.su.nd.e.rl.an.d5.78@gmail.com"">ser.e.na.su.nd.e.rl.an.d5.78@gmail.com</a>
<a href=""mailto:s.e.ren.asund.e.r.l.a.nd5.78@gmail.com"">s.e.ren.asund.e.r.l.a.nd5.78@gmail.com</a>
<a href=""mailto:se.r.e.na.s.un.d.er.la.nd5.78@gmail.com"">se.r.e.na.s.un.d.er.la.nd5.78@gmail.com</a>
<a href=""mailto:s.e.ren.a.s.u.n.d.e.r.l.a.n.d.57.8@gmail.com"">s.e.ren.a.s.u.n.d.e.r.l.a.n.d.57.8@gmail.com</a>
<a href=""mailto:s.e.r.ena.s.u.n.der.la.nd5.7.8@gmail.com"">s.e.r.ena.s.u.n.der.la.nd5.7.8@gmail.com</a>
<a href=""mailto:s.er.en.as.un.de.r.lan.d.5.7.8@gmail.com"">s.er.en.as.un.de.r.lan.d.5.7.8@gmail.com</a>
<a href=""mailto:s.ere.nasunde.r.l.an.d5.78@gmail.com"">s.ere.nasunde.r.l.an.d5.78@gmail.com</a>
<a href=""mailto:se.r.e.n.a.su.nd.e.rland5.7.8@gmail.com"">se.r.e.n.a.su.nd.e.rland5.7.8@gmail.com</a>
<a href=""mailto:se.r.enasun.de.rl.a.n.d578@gmail.com"">se.r.enasun.de.rl.a.n.d578@gmail.com</a>
<a href=""mailto:seren.as.und.erlan.d5.78@gmail.com"">seren.as.und.erlan.d5.78@gmail.com</a>
<a href=""mailto:s.er.enas.un.d.er.la.nd578@gmail.com"">s.er.enas.un.d.er.la.nd578@gmail.com</a>
<a href=""mailto:s.e.r.e.n.a.su.nderl.an.d.5.7.8@gmail.com"">s.e.r.e.n.a.su.nderl.an.d.5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.en.as.under.la.n.d5.7.8@gmail.com"">s.e.r.en.as.under.la.n.d5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.e.n.asu.n.der.l.an.d5.7.8@gmail.com"">s.e.r.e.n.asu.n.der.l.an.d5.7.8@gmail.com</a>
<a href=""mailto:s.e.re.n.asu.nderl.and.578@gmail.com"">s.e.re.n.asu.nderl.and.578@gmail.com</a>
<a href=""mailto:ser.e.nas.under.la.nd5.78@gmail.com"">ser.e.nas.under.la.nd5.78@gmail.com</a>
<a href=""mailto:seren.as.unde.rl.an.d578@gmail.com"">seren.as.unde.rl.an.d578@gmail.com</a>
<a href=""mailto:s.e.ren.a.su.n.derla.n.d578@gmail.com"">s.e.ren.a.su.n.derla.n.d578@gmail.com</a>
<a href=""mailto:se.ren.as.u.nd.er.l.an.d.578@gmail.com"">se.ren.as.u.nd.er.l.an.d.578@gmail.com</a>
<a href=""mailto:se.re.n.asun.d.e.rla.nd.5.7.8@gmail.com"">se.re.n.asun.d.e.rla.nd.5.7.8@gmail.com</a>
<a href=""mailto:se.ren.a.s.u.nd.er.l.and.578@gmail.com"">se.ren.a.s.u.nd.er.l.and.578@gmail.com</a>
<a href=""mailto:s.er.e.nas.u.nderlan.d.5.78@gmail.com"">s.er.e.nas.u.nderlan.d.5.78@gmail.com</a>
<a href=""mailto:se.r.en.asu.n.der.l.and578@gmail.com"">se.r.en.asu.n.der.l.and578@gmail.com</a>
<a href=""mailto:ser.e.na.su.n.de.rland.5.7.8@gmail.com"">ser.e.na.su.n.de.rland.5.7.8@gmail.com</a>
<a href=""mailto:ser.e.n.asunde.r.l.a.n.d5.78@gmail.com"">ser.e.n.asunde.r.l.a.n.d5.78@gmail.com</a>
<a href=""mailto:s.e.ren.a.su.n.de.r.l.an.d.5.7.8@gmail.com"">s.e.ren.a.su.n.de.r.l.an.d.5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.enas.un.de.r.lan.d5.78@gmail.com"">s.e.r.enas.un.de.r.lan.d5.78@gmail.com</a>
<a href=""mailto:s.er.e.nas.under.la.n.d.5.7.8@gmail.com"">s.er.e.nas.under.la.n.d.5.7.8@gmail.com</a>
<a href=""mailto:se.ren.a.s.u.n.d.er.land.5.78@gmail.com"">se.ren.a.s.u.n.d.er.land.5.78@gmail.com</a>
<a href=""mailto:s.e.r.e.na.s.und.e.rl.a.n.d5.78@gmail.com"">s.e.r.e.na.s.und.e.rl.a.n.d5.78@gmail.com</a>
<a href=""mailto:se.r.ena.sunde.r.l.a.nd.5.7.8@gmail.com"">se.r.ena.sunde.r.l.a.nd.5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.e.nasun.d.erl.a.nd578@gmail.com"">s.e.r.e.nasun.d.erl.a.nd578@gmail.com</a>
<a href=""mailto:ser.en.a.sun.de.r.land.5.7.8@gmail.com"">ser.en.a.sun.de.r.land.5.7.8@gmail.com</a>
<a href=""mailto:s.e.re.na.s.un.de.rl.a.n.d5.7.8@gmail.com"">s.e.re.na.s.un.de.rl.a.n.d5.7.8@gmail.com</a>
<a href=""mailto:ser.en.asu.nderla.n.d5.78@gmail.com"">ser.en.asu.nderla.n.d5.78@gmail.com</a>
<a href=""mailto:s.eren.asund.e.r.l.a.nd5.7.8@gmail.com"">s.eren.asund.e.r.l.a.nd5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.en.as.und.er.l.a.n.d.5.78@gmail.com"">s.e.r.en.as.und.er.l.a.n.d.5.78@gmail.com</a>
<a href=""mailto:sere.n.as.u.n.de.r.l.a.nd.57.8@gmail.com"">sere.n.as.u.n.de.r.l.a.nd.57.8@gmail.com</a>
<a href=""mailto:seren.a.s.u.n.d.e.r.lan.d.5.7.8@gmail.com"">seren.a.s.u.n.d.e.r.lan.d.5.7.8@gmail.com</a>
<a href=""mailto:se.ren.as.u.n.der.l.a.n.d.578@gmail.com"">se.ren.as.u.n.der.l.a.n.d.578@gmail.com</a>
<a href=""mailto:sere.n.a.su.n.de.r.la.n.d5.7.8@gmail.com"">sere.n.a.su.n.de.r.la.n.d5.7.8@gmail.com</a>
<a href=""mailto:s.e.re.n.a.su.n.d.er.lan.d.5.7.8@gmail.com"">s.e.re.n.a.su.n.d.er.lan.d.5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.ena.s.un.d.er.la.nd.578@gmail.com"">s.e.r.ena.s.un.d.er.la.nd.578@gmail.com</a>
<a href=""mailto:s.eren.as.u.n.de.r.la.nd5.7.8@gmail.com"">s.eren.as.u.n.de.r.la.nd5.7.8@gmail.com</a>
<a href=""mailto:se.re.nasu.n.de.rla.n.d.578@gmail.com"">se.re.nasu.n.de.rla.n.d.578@gmail.com</a>
<a href=""mailto:ser.e.n.a.s.un.der.la.nd578@gmail.com"">ser.e.n.a.s.un.der.la.nd578@gmail.com</a>
<a href=""mailto:se.re.nas.u.n.d.er.la.n.d578@gmail.com"">se.re.nas.u.n.d.er.la.n.d578@gmail.com</a>
<a href=""mailto:ser.e.nasu.n.de.r.land57.8@gmail.com"">ser.e.nasu.n.de.r.land57.8@gmail.com</a>
<a href=""mailto:s.e.re.nasund.er.la.n.d.5.7.8@gmail.com"">s.e.re.nasund.er.la.n.d.5.7.8@gmail.com</a>
<a href=""mailto:s.er.ena.sund.e.r.l.a.nd57.8@gmail.com"">s.er.ena.sund.e.r.l.a.nd57.8@gmail.com</a>
<a href=""mailto:s.er.e.na.s.und.er.l.a.nd578@gmail.com"">s.er.e.na.s.und.er.l.a.nd578@gmail.com</a>
<a href=""mailto:s.e.rena.s.unde.r.la.n.d.57.8@gmail.com"">s.e.rena.s.unde.r.la.n.d.57.8@gmail.com</a>
<a href=""mailto:s.er.e.n.as.u.n.d.e.r.lan.d57.8@gmail.com"">s.er.e.n.as.u.n.d.e.r.lan.d57.8@gmail.com</a>
<a href=""mailto:s.e.ren.a.su.n.d.e.rl.and5.78@gmail.com"">s.e.ren.a.su.n.d.e.rl.and5.78@gmail.com</a>
<a href=""mailto:s.er.ena.s.u.nde.r.lan.d.5.78@gmail.com"">s.er.ena.s.u.nde.r.lan.d.5.78@gmail.com</a>
<a href=""mailto:s.e.r.e.n.asu.n.d.e.rlan.d.578@gmail.com"">s.e.r.e.n.asu.n.d.e.rlan.d.578@gmail.com</a>
<a href=""mailto:s.e.r.e.na.s.un.de.rl.a.nd5.7.8@gmail.com"">s.e.r.e.na.s.un.de.rl.a.nd5.7.8@gmail.com</a>
<a href=""mailto:ser.enasu.nd.er.land.57.8@gmail.com"">ser.enasu.nd.er.land.57.8@gmail.com</a>
<a href=""mailto:serena.s.und.er.la.nd5.7.8@gmail.com"">serena.s.und.er.la.nd5.7.8@gmail.com</a>
<a href=""mailto:se.r.e.n.a.s.und.er.l.and.578@gmail.com"">se.r.e.n.a.s.und.er.l.and.578@gmail.com</a>
<a href=""mailto:se.re.n.asun.der.land.578@gmail.com"">se.re.n.asun.der.land.578@gmail.com</a>
<a href=""mailto:serena.sun.d.erl.a.nd.5.78@gmail.com"">serena.sun.d.erl.a.nd.5.78@gmail.com</a>
<a href=""mailto:se.renas.un.d.e.rl.a.n.d.57.8@gmail.com"">se.renas.un.d.e.rl.a.n.d.57.8@gmail.com</a>
<a href=""mailto:s.erena.s.un.de.r.l.a.nd5.78@gmail.com"">s.erena.s.un.de.r.l.a.nd5.78@gmail.com</a>
<a href=""mailto:ser.e.nas.u.n.d.er.l.an.d5.7.8@gmail.com"">ser.e.nas.u.n.d.er.l.an.d5.7.8@gmail.com</a>
<a href=""mailto:s.er.e.n.as.underl.a.nd5.78@gmail.com"">s.er.e.n.as.underl.a.nd5.78@gmail.com</a>
<a href=""mailto:se.r.e.n.as.u.n.d.erland5.7.8@gmail.com"">se.r.e.n.as.u.n.d.erland5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.ena.s.und.e.r.la.nd5.7.8@gmail.com"">s.e.r.ena.s.und.e.r.la.nd5.7.8@gmail.com</a>
<a href=""mailto:s.er.e.n.asu.n.de.rland.5.7.8@gmail.com"">s.er.e.n.asu.n.de.rland.5.7.8@gmail.com</a>
<a href=""mailto:s.er.e.na.s.under.l.a.nd.5.78@gmail.com"">s.er.e.na.s.under.l.a.nd.5.78@gmail.com</a>
<a href=""mailto:ser.e.nasu.nderla.nd.5.7.8@gmail.com"">ser.e.nasu.nderla.nd.5.7.8@gmail.com</a>
<a href=""mailto:s.ere.n.asund.e.r.l.an.d.5.7.8@gmail.com"">s.ere.n.asund.e.r.l.an.d.5.7.8@gmail.com</a>
<a href=""mailto:sere.na.s.un.der.la.nd5.78@gmail.com"">sere.na.s.un.der.la.nd5.78@gmail.com</a>
<a href=""mailto:s.er.ena.s.un.de.rl.a.n.d.5.78@gmail.com"">s.er.ena.s.un.de.rl.a.n.d.5.78@gmail.com</a>
<a href=""mailto:sere.n.a.su.nderl.a.n.d.5.78@gmail.com"">sere.n.a.su.nderl.a.n.d.5.78@gmail.com</a>
<a href=""mailto:s.e.r.e.n.as.u.n.d.erlan.d5.7.8@gmail.com"">s.e.r.e.n.as.u.n.d.erlan.d5.7.8@gmail.com</a>
<a href=""mailto:s.e.r.ena.su.nde.r.l.a.nd5.7.8@gmail.com"">s.e.r.ena.su.nde.r.l.a.nd5.7.8@gmail.com</a>
<a href=""mailto:s.er.e.nas.underl.and5.78@gmail.com"">s.er.e.nas.underl.and5.78@gmail.com</a>
<a href=""mailto:sere.nasun.derl.and.578@gmail.com"">sere.nasun.derl.and.578@gmail.com</a>
<a href=""mailto:s.e.ren.a.s.un.der.la.nd5.78@gmail.com"">s.e.ren.a.s.un.der.la.nd5.78@gmail.com</a>
<a href=""mailto:s.ere.n.asu.n.der.lan.d.578@gmail.com"">s.ere.n.asu.n.der.lan.d.578@gmail.com</a>
<a href=""mailto:serena.su.nde.r.l.an.d.578@gmail.com"">serena.su.nde.r.l.an.d.578@gmail.com</a>
<a href=""mailto:s.er.en.as.u.nd.e.rland5.78@gmail.com"">s.er.en.as.u.nd.e.rland5.78@gmail.com</a>
<a href=""mailto:se.r.en.as.und.er.l.an.d5.7.8@gmail.com"">se.r.en.as.und.er.l.an.d5.7.8@gmail.com</a>
<a href=""mailto:s.e.re.nasu.nd.erland.578@gmail.com"">s.e.re.nasu.nd.erland.578@gmail.com</a>
<a href=""mailto:s.e.re.na.s.u.n.d.e.r.l.a.n.d5.78@gmail.com"">s.e.re.na.s.u.n.d.e.r.l.a.n.d5.78@gmail.com</a>
<a href=""mailto:s.e.re.n.asunde.rla.n.d.578@gmail.com"">s.e.re.n.asunde.rla.n.d.578@gmail.com</a>
<a href=""mailto:s.er.e.n.a.s.u.nde.r.l.a.nd57.8@gmail.com"">s.er.e.n.a.s.u.nde.r.l.a.nd57.8@gmail.com</a>
<a href=""mailto:se.r.e.n.as.u.n.de.rl.a.nd.578@gmail.com"">se.r.e.n.as.u.n.de.rl.a.nd.578@gmail.com</a>
<a href=""mailto:s.e.r.en.a.s.u.nde.rla.n.d5.78@gmail.com"">s.e.r.en.a.s.u.nde.rla.n.d5.78@gmail.com</a>
<a href=""mailto:ser.en.a.s.u.nderl.a.nd.57.8@gmail.com"">ser.en.a.s.u.nderl.a.nd.57.8@gmail.com</a>
<a href=""mailto:s.e.r.en.a.su.nde.rl.an.d5.7.8@gmail.com"">s.e.r.en.a.su.nde.rl.an.d5.7.8@gmail.com</a>
<a href=""mailto:ser.e.n.asunde.r.la.nd5.78@gmail.com"">ser.e.n.asunde.r.la.nd5.78@gmail.com</a>
<a href=""mailto:se.r.en.a.su.nder.land.5.78@gmail.com"">se.r.en.a.su.nder.land.5.78@gmail.com</a>
<a href=""mailto:se.r.e.na.s.un.der.lan.d57.8@gmail.com"">se.r.e.na.s.un.der.lan.d57.8@gmail.com</a>
<a href=""mailto:ser.e.n.asund.e.r.l.a.n.d5.78@gmail.com"">ser.e.n.asund.e.r.l.a.n.d5.78@gmail.com</a>"
E4E597VK,Untitled,Josif_tepe,C++,Monday 26th of February 2024 10:48:19 AM CDT,"#include <iostream>
#include <map>
#include <cmath>
#include <set>
#include <vector>
using namespace std;
 
int main() {
    ios_base::sync_with_stdio(false);
    int n, k;
    cin >> n >> k;
     
    string s;
    cin >> s;
     
    multiset<int> ms;
    for(int i = 0; i < 26; i++) {
        ms.insert(0);
    }
    int i = 0, j = 0;
    int question_marks = 0;
    int sum = 0;
    vector<int> cnt(26, 0);
    while(j < n) {
        if(*ms.begin() <= k and *ms.rbegin() <= k) {
            if(s[j] != '?') {
                sum++;
                ms.erase(ms.find(cnt[s[j] - 'a']));
                cnt[s[j] - 'a']++;
                ms.insert(cnt[s[j] - 'a']);
            }
            else {
                question_marks++;
            }
            
            j++;
            if(sum + question_marks == 26 * k) {
                cout << i + 1 << endl;
                return 0;
            }
        }
        else {
            if(s[i] != '?') {
                sum--;
                ms.erase(ms.find(cnt[s[i] - 'a']));
                cnt[s[i] - 'a']--;
                ms.insert(cnt[s[i] - 'a']);
            }
            else {
                question_marks--;
            }
            i++;
            if(sum + question_marks == 26 * k) {
                cout << i << endl;
                return 0;
            }
             
        }
    }
    cout << -1 << endl;
    return 0;
}
// a?cdefghijklmnopqrstuvwxyza?"
Ma8zCL9Z,Untitled,Josif_tepe,C++,Monday 26th of February 2024 10:37:30 AM CDT,"#include <iostream>
//#include <bits/stdc++.h>
#include <fstream>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
typedef long long ll;
using namespace std;


int main() {
    int n, k;
    cin >> n;
    
    vector<int> v(n);
    for(int i = 0; i < n; i++) {
        cin >> v[i];
    }
    map<ll, ll> cnt;
    ll sum = 0, res = 0;
    for(int i = 0; i < n; i++) {
        sum += v[i];
        if(sum == 0) {
            res++;
        }
        if(cnt.count(sum)) {
            res += cnt[sum];
        }
        cnt[sum]++;
    }
    cout << res << endl;
        return 0;
}
"
m2irGfSR,courseera,nirajs,Python,Monday 26th of February 2024 10:30:59 AM CDT,"from collections import defaultdict
import math
import os
import random
import re
import sys

""""""
4,A,B,C
3,B,C,A
2,C,B,A
2,C,A,B


Count 
A -> x
B -> b 

1.) Creat a count Map [A] -> count 
2.a) create a list and sort [(4,A), (2,B)]
2.b) creata a heap with these elements 
    pick up top element
2.c) Scan the map entries get the max


A
A
B
B
C
C
D
D

2
[1,2,3,4] -> [1,3,4] ->

rep

1.) check if we have winner
    a.) if yes  then return the winner
    b.) No
        2.) delete min entry from all got0 step 1 with new input 



""""""

class BallotGroup:
    def __init__(self, votes: int, candidates: list[str]):
        self.votes = votes
        self.candidates = candidates

# vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

def pluralityWinner(ballots: list[BallotGroup]) -> str:
    countMap = defaultdict(int)
    candidate = None
    maxCount = 0 
    for entry in ballots:
        count = entry.votes
        candidates = entry.candidates
       
        countMap[candidates[0]] += count
        
    for entry in countMap:
        key = entry
        val = countMap[key]
        if candidate == None:
            candidate = key 
            maxCount = val 
            continue

        if val > maxCount:
            candidate = key
            maxCount = val 
        elif val == maxCount and key < candidate:
            candidate = key 
    
    return candidate


def checkForWinner(votes) -> str:
    countMap = defaultdict(int)
    maxCount = 0
    candidate = None
    sz = len(votes)
    for entry in votes:
        countMap[entry[0]] += 1
    
    for key in countMap:
        if candidate == None:
            candidate = key 
            maxCount = countMap[key]
            continue
        if maxCount < countMap[key]:
            candidate = key
            maxCount = countMap[key]
             
            
    
    if (maxCount > sz//2):
        return candidate
    
    else:
        return None
        
    
def getMinandTrim(votes: list[list[str]]) -> list[list[str]]:
    countMap = defaultdict(int)
    maxCount = len(votes) + 1
    candidate = None
    for entry in votes:
        countMap[entry[0]] += 1
    
    for key in countMap:
        if candidate == None:
            candidate = key 
            maxCount = countMap[key]
            continue
        elif maxCount > countMap[key]:
            candidate = key
            maxCount = countMap[key]
            
        elif maxCount == countMap[key] and candidate < countMap[key]:
            candidate = key
    
    newVotes = []
    for entry in votes:
        temp = []
        for ele in entry:
            if ele != candidate:
                temp.append(ele)
        newVotes.append(temp)         
        
    return newVotes
    
        
    
    
        
    
    
def rankedChoiceWinner(ballots: list[BallotGroup]) -> str:
    
    votes = []
    for entry in ballots:
        for _ in range(entry.votes):
            votes.append(entry.candidates)
    
    while True:
        winner = checkForWinner(votes)
        if winner != None:
            return winner 
        votes = getMinandTrim(votes) 

# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

def main():
    ballotsCount = int(input().strip().split("","")[0])

    ballots = list[BallotGroup]()
    for _ in range(ballotsCount):
        ballotLine = input().strip().split("","")
        ballots.append(BallotGroup(int(ballotLine[0]), ballotLine[1:]))

    with open(os.environ[""OUTPUT_PATH""], ""w"") as outfile:
        outfile.write(f""pluralityWinner: {pluralityWinner(ballots)}\n"")
        outfile.write(f""rankedChoiceWinner: {rankedChoiceWinner(ballots)}\n"")

    # Disable unused import warnings for the default imports.
    _ = math, random, re, sys

if __name__ == ""__main__"":
    main()"
Ayqg2inM,Untitled,Josif_tepe,C++,Monday 26th of February 2024 10:26:25 AM CDT,"#include <iostream>
//#include <bits/stdc++.h>
#include <fstream>
#include <algorithm>
#include <set>
#include <vector>
using namespace std;


int main() {
    int n, k;
    cin >> n >> k;
    
    vector<int> v(n);
    for(int i = 0; i < n; i++) {
        cin >> v[i];
    }
    multiset<int> ms;
    for(int i = 0; i < k; i++) {
        ms.insert(0);
    }
    vector<int> cnt(k, 0);
    int i = 0, j = 0;
    int res = 0;
    while(j < n) {
        if(*ms.begin() <= 3 and *ms.rbegin() <= 3) {
            if(v[j] < k) {
                ms.erase(ms.find(cnt[v[j]]));
                cnt[v[j]]++;
                ms.insert(cnt[v[j]]);
            }
            j++;
            if(*ms.begin() == 3 and *ms.rbegin() == 3) {
                res = max(res, j - i);
            }
        }
        else {
            if(v[i] < k) {
                ms.erase(ms.find(cnt[v[i]]));
                cnt[v[i]]--;
                ms.insert(cnt[v[i]]);
            }
            i++;
            if(*ms.begin() == 3 and *ms.rbegin() == 3) {
                res = max(res, j - i);
            }
        }
    }
    cout << res << endl;
    return 0;
}
"
73W1X8ej,Untitled,inoplanetyanin,JSON,Monday 26th of February 2024 10:04:30 AM CDT,"{
	""name"" : ""tea"",
	""privet"" : 15
}"
A0U7dSMc,Twitch chat for kaigge7,Breadybread,Lua,Monday 26th of February 2024 10:02:15 AM CDT,"CHATROOM = ""kaigee7""
SUBSONLY = false
CLEAR_MESSAGES = true

local expect = require ""cc.expect""
local expect, field = expect.expect, expect.field

local type, getmetatable, setmetatable, colours, str_write, tostring = type, getmetatable, setmetatable, colours, write, tostring
local debug_info = type(debug) == ""table"" and type(debug.getinfo) == ""function"" and debug.getinfo
local debug_local = type(debug) == ""table"" and type(debug.getlocal) == ""function"" and debug.getlocal

--- @{table.insert} alternative, but with the length stored inline.
local function append(out, value)
    local n = out.n + 1
    out[n], out.n = value, n
end

--- A document containing formatted text, with multiple possible layouts.
--
-- Documents effectively represent a sequence of strings in alternative layouts,
-- which we will try to print in the most compact form necessary.
--
-- @type Doc
local Doc = { }

--- An empty document.
local empty = setmetatable({ tag = ""nil"" }, Doc)

--- A document with a single space in it.
local space = setmetatable({ tag = ""text"", text = "" "" }, Doc)

--- A line break. When collapsed with @{group}, this will be replaced with @{empty}.
local line = setmetatable({ tag = ""line"", flat = empty }, Doc)

--- A line break. When collapsed with @{group}, this will be replaced with @{space}.
local space_line = setmetatable({ tag = ""line"", flat = space }, Doc)

local text_cache = { [""""] = empty, ["" ""] = space, [""\n""] = space_line }

local function mk_text(text, colour)
    return text_cache[text] or setmetatable({ tag = ""text"", text = text, colour = colour }, Doc)
end

--- Create a new document from a string.
--
-- If your string contains multiple lines, @{group} will flatten the string
-- into a single line, with spaces between each line.
--
-- @tparam      string text   The string to construct a new document with.
-- @tparam[opt] number colour The colour this text should be printed with. If not given, we default to the current
-- colour.
-- @treturn Doc The document with the provided text.
-- @usage Write some blue text.
--     local pretty = require ""cc.pretty""
--     pretty.print(pretty.text(""Hello!"", colours.blue))
local function text(text, colour)
    expect(1, text, ""string"")
    expect(2, colour, ""number"", ""nil"")

    local cached = text_cache[text]
    if cached then return cached end

    local new_line = text:find(""\n"", 1)
    if not new_line then return mk_text(text, colour) end

    -- Split the string by ""\n"". With a micro-optimisation to skip empty strings.
    local doc = setmetatable({ tag = ""concat"", n = 0 }, Doc)
    if new_line ~= 1 then append(doc, mk_text(text:sub(1, new_line - 1), colour)) end

    new_line = new_line + 1
    while true do
        local next_line = text:find(""\n"", new_line)
        append(doc, space_line)
        if not next_line then
            if new_line <= #text then append(doc, mk_text(text:sub(new_line), colour)) end
            return doc
        else
            if new_line <= next_line - 1 then
                append(doc, mk_text(text:sub(new_line, next_line - 1), colour))
            end
            new_line = next_line + 1
        end
    end
end

--- Concatenate several documents together. This behaves very similar to string concatenation.
--
-- @tparam Doc|string ... The documents to concatenate.
-- @treturn Doc The concatenated documents.
-- @usage
--     local pretty = require ""cc.pretty""
--     local doc1, doc2 = pretty.text(""doc1""), pretty.text(""doc2"")
--     print(pretty.concat(doc1, "" - "", doc2))
--     print(doc1 .. "" - "" .. doc2) -- Also supports ..
local function concat(...)
    local args = table.pack(...)
    for i = 1, args.n do
        if type(args[i]) == ""string"" then args[i] = text(args[i]) end
        if getmetatable(args[i]) ~= Doc then expect(i, args[i], ""document"") end
    end

    if args.n == 0 then return empty end
    if args.n == 1 then return args[1] end

    args.tag = ""concat""
    return setmetatable(args, Doc)
end

Doc.__concat = concat --- @local

--- Indent later lines of the given document with the given number of spaces.
--
-- For instance, nesting the document
-- ```txt
-- foo
-- bar
-- ```
-- by two spaces will produce
-- ```txt
-- foo
--   bar
-- ```
--
-- @tparam number depth The number of spaces with which the document should be indented.
-- @tparam Doc    doc   The document to indent.
-- @treturn Doc The nested document.
-- @usage
--     local pretty = require ""cc.pretty""
--     print(pretty.nest(2, pretty.text(""foo\nbar"")))
local function nest(depth, doc)
    expect(1, depth, ""number"")
    if getmetatable(doc) ~= Doc then expect(2, doc, ""document"") end
    if depth <= 0 then error(""depth must be a positive number"", 2) end

    return setmetatable({ tag = ""nest"", depth = depth, doc }, Doc)
end

local function flatten(doc)
    if doc.flat then return doc.flat end

    local kind = doc.tag
    if kind == ""nil"" or kind == ""text"" then
        return doc
    elseif kind == ""concat"" then
        local out = setmetatable({ tag = ""concat"", n = doc.n }, Doc)
        for i = 1, doc.n do out[i] = flatten(doc[i]) end
        doc.flat, out.flat = out, out -- cache the flattened node
        return out
    elseif kind == ""nest"" then
        return flatten(doc[1])
    elseif kind == ""group"" then
        return doc[1]
    else
        error(""Unknown doc "" .. kind)
    end
end

--- Builds a document which is displayed on a single line if there is enough
-- room, or as normal if not.
--
-- @tparam Doc doc The document to group.
-- @treturn Doc The grouped document.
-- @usage Uses group to show things being displayed on one or multiple lines.
--
--     local pretty = require ""cc.pretty""
--     local doc = pretty.group(""Hello"" .. pretty.space_line .. ""World"")
--     print(pretty.render(doc, 5)) -- On multiple lines
--     print(pretty.render(doc, 20)) -- Collapsed onto one.
local function group(doc)
    if getmetatable(doc) ~= Doc then expect(1, doc, ""document"") end

    if doc.tag == ""group"" then return doc end -- Skip if already grouped.

    local flattened = flatten(doc)
    if flattened == doc then return doc end -- Also skip if flattening does nothing.
    return setmetatable({ tag = ""group"", flattened, doc }, Doc)
end

local function get_remaining(doc, width)
    local kind = doc.tag
    if kind == ""nil"" or kind == ""line"" then
        return width
    elseif kind == ""text"" then
        return width - #doc.text
    elseif kind == ""concat"" then
        for i = 1, doc.n do
            width = get_remaining(doc[i], width)
            if width < 0 then break end
        end
        return width
    elseif kind == ""group"" or kind == ""nest"" then
        return get_remaining(kind[1])
    else
        error(""Unknown doc "" .. kind)
    end
end

--- Display a document on the terminal.
--
-- @tparam      Doc     doc         The document to render
-- @tparam[opt] number  ribbon_frac The maximum fraction of the width that we should write in.
local function write(doc, ribbon_frac)
    if getmetatable(doc) ~= Doc then expect(1, doc, ""document"") end
    expect(2, ribbon_frac, ""number"", ""nil"")

    local term = term
    local width, height = term.getSize()
    local ribbon_width = (ribbon_frac or 0.6) * width
    if ribbon_width < 0 then ribbon_width = 0 end
    if ribbon_width > width then ribbon_width = width end

    local def_colour = term.getTextColour()
    local current_colour = def_colour

    local function go(doc, indent, col)
        local kind = doc.tag
        if kind == ""nil"" then
            return col
        elseif kind == ""text"" then
            local doc_colour = doc.colour or def_colour
            if doc_colour ~= current_colour then
                term.setTextColour(doc_colour)
                current_colour = doc_colour
            end

            str_write(doc.text)

            return col + #doc.text
        elseif kind == ""line"" then
            local _, y = term.getCursorPos()
            if y < height then
                term.setCursorPos(indent + 1, y + 1)
            else
                term.scroll(1)
                term.setCursorPos(indent + 1, height)
            end

            return indent
        elseif kind == ""concat"" then
            for i = 1, doc.n do col = go(doc[i], indent, col) end
            return col
        elseif kind == ""nest"" then
            return go(doc[1], indent + doc.depth, col)
        elseif kind == ""group"" then
            if get_remaining(doc[1], math.min(width, ribbon_width + indent) - col) >= 0 then
                return go(doc[1], indent, col)
            else
                return go(doc[2], indent, col)
            end
        else
            error(""Unknown doc "" .. kind)
        end
    end

    local col = math.max(term.getCursorPos() - 1, 0)
    go(doc, 0, col)
    if current_colour ~= def_colour then term.setTextColour(def_colour) end
end

--- Display a document on the terminal with a trailing new line.
--
-- @tparam      Doc     doc         The document to render.
-- @tparam[opt] number  ribbon_frac The maximum fraction of the width that we should write in.
local function print(doc, ribbon_frac)
    if getmetatable(doc) ~= Doc then expect(1, doc, ""document"") end
    expect(2, ribbon_frac, ""number"", ""nil"")
    write(doc, ribbon_frac)
    str_write(""\n"")
end

--- Render a document, converting it into a string.
--
-- @tparam      Doc     doc         The document to render.
-- @tparam[opt] number  width       The maximum width of this document. Note that long strings will not be wrapped to
-- fit this width - it is only used for finding the best layout.
-- @tparam[opt] number  ribbon_frac The maximum fraction of the width that we should write in.
-- @treturn string The rendered document as a string.
local function render(doc, width, ribbon_frac)
    if getmetatable(doc) ~= Doc then expect(1, doc, ""document"") end
    expect(2, width, ""number"", ""nil"")
    expect(3, ribbon_frac, ""number"", ""nil"")

    local ribbon_width
    if width then
        ribbon_width = (ribbon_frac or 0.6) * width
        if ribbon_width < 0 then ribbon_width = 0 end
        if ribbon_width > width then ribbon_width = width end
    end

    local out = { n = 0 }
    local function go(doc, indent, col)
        local kind = doc.tag
        if kind == ""nil"" then
            return col
        elseif kind == ""text"" then
            append(out, doc.text)
            return col + #doc.text
        elseif kind == ""line"" then
            append(out, ""\n"" .. ("" ""):rep(indent))
            return indent
        elseif kind == ""concat"" then
            for i = 1, doc.n do col = go(doc[i], indent, col) end
            return col
        elseif kind == ""nest"" then
            return go(doc[1], indent + doc.depth, col)
        elseif kind == ""group"" then
            if not width or get_remaining(doc[1], math.min(width, ribbon_width + indent) - col) >= 0 then
                return go(doc[1], indent, col)
            else
                return go(doc[2], indent, col)
            end
        else
            error(""Unknown doc "" .. kind)
        end
    end

    go(doc, 0, 0)
    return table.concat(out, """", 1, out.n)
end

Doc.__tostring = render --- @local

local keywords = {
    [""and""] = true, [""break""] = true, [""do""] = true, [""else""] = true,
    [""elseif""] = true, [""end""] = true, [""false""] = true, [""for""] = true,
    [""function""] = true, [""if""] = true, [""in""] = true, [""local""] = true,
    [""nil""] = true, [""not""] = true, [""or""] = true, [""repeat""] = true, [""return""] = true,
    [""then""] = true, [""true""] = true, [""until""] = true, [""while""] = true,
  }

local comma = text("","")
local braces = text(""{}"")
local obrace, cbrace = text(""{""), text(""}"")
local obracket, cbracket = text(""[""), text(""] = "")

local function key_compare(a, b)
    local ta, tb = type(a), type(b)

    if ta == ""string"" then return tb ~= ""string"" or a < b
    elseif tb == ""string"" then return false
    end

    if ta == ""number"" then return tb ~= ""number"" or a < b end
    return false
end

local function show_function(fn, options)
    local info = debug_info and debug_info(fn, ""Su"")

    -- Include function source position if available
    local name
    if options.function_source and info and info.short_src and info.linedefined and info.linedefined >= 1 then
        name = ""function<"" .. info.short_src .. "":"" .. info.linedefined .. "">""
    else
        name = tostring(fn)
    end

    -- Include arguments if a Lua function and if available. Lua will report ""C""
    -- functions as variadic.
    if options.function_args and info and info.what == ""Lua"" and info.nparams and debug_local then
        local args = {}
        for i = 1, info.nparams do args[i] = debug_local(fn, i) or ""?"" end
        if info.isvararg then args[#args + 1] = ""..."" end
        name = name .. ""("" .. table.concat(args, "", "") .. "")""
    end

    return name
end

local function pretty_impl(obj, options, tracking)
    local obj_type = type(obj)
    if obj_type == ""string"" then
        local formatted = (""%q""):format(obj):gsub(""\\\n"", ""\\n"")
        return text(formatted, colours.red)
    elseif obj_type == ""number"" then
        return text(tostring(obj), colours.magenta)
    elseif obj_type == ""function"" then
        return text(show_function(obj, options), colours.lightGrey)
    elseif obj_type ~= ""table"" or tracking[obj] then
        return text(tostring(obj), colours.lightGrey)
    elseif getmetatable(obj) ~= nil and getmetatable(obj).__tostring then
        return text(tostring(obj))
    elseif next(obj) == nil then
        return braces
    else
        tracking[obj] = true
        local doc = setmetatable({ tag = ""concat"", n = 1, space_line }, Doc)

        local length, keys, keysn = #obj, {}, 1
        for k in pairs(obj) do keys[keysn], keysn = k, keysn + 1 end
        table.sort(keys, key_compare)

        for i = 1, keysn - 1 do
            if i > 1 then append(doc, comma) append(doc, space_line) end

            local k = keys[i]
            local v = obj[k]
            local ty = type(k)
            if ty == ""number"" and k % 1 == 0 and k >= 1 and k <= length then
                append(doc, pretty_impl(v, options, tracking))
            elseif ty == ""string"" and not keywords[k] and k:match(""^[%a_][%a%d_]*$"") then
                append(doc, text(k .. "" = ""))
                append(doc, pretty_impl(v, options, tracking))
            else
                append(doc, obracket)
                append(doc, pretty_impl(k, options, tracking))
                append(doc, cbracket)
                append(doc, pretty_impl(v, options, tracking))
            end
        end

        tracking[obj] = nil
        return group(concat(obrace, nest(2, concat(table.unpack(doc, 1, doc.n))), space_line, cbrace))
    end
end

--- Pretty-print an arbitrary object, converting it into a document.
--
-- This can then be rendered with @{write} or @{print}.
--
-- @param obj The object to pretty-print.
-- @tparam[opt] { function_args = boolean, function_source = boolean } options
-- Controls how various properties are displayed.
--  - `function_args`: Show the arguments to a function if known (`false` by default).
--  - `function_source`: Show where the function was defined, instead of
--    `function: xxxxxxxx` (`false` by default).
-- @treturn Doc The object formatted as a document.
-- @usage Display a table on the screen
--     local pretty = require ""cc.pretty""
--     pretty.print(pretty.pretty({ 1, 2, 3 }))
local function prettyf(obj, options)
    expect(2, options, ""table"", ""nil"")
    options = options or {}

    local actual_options = {
        function_source = field(options, ""function_source"", ""boolean"", ""nil"") or false,
        function_args = field(options, ""function_args"", ""boolean"", ""nil"") or false,
    }
    return pretty_impl(obj, actual_options, {})
end

local pretty = {
    empty = empty,
    space = space,
    line = line,
    space_line = space_line,
    text = text,
    concat = concat,
    nest = nest,
    group = group,

    write = write,
    print = print,
    render = render,

    pretty = prettyf,
}

local monitor = peripheral.find(""monitor"")
local oldTerm = term.redirect(monitor)

function split(str, character)
  result = {}
  index = 1
  for s in string.gmatch(str, ""[^""..character..""]+"") do
    result[index] = s
    index = index + 1
  end
  return result
end
local hex = {""F0F0F0"", ""F2B233"", ""E57FD8"", ""99B2F2"", ""DEDE6C"", ""7FCC19"", ""F2B2CC"", ""4C4C4C"", ""999999"", ""4C99B2"", ""B266E5"", ""3366CC"", ""7F664C"", ""57A64E"", ""CC4C4C"", ""191919""}
local rgb = {}
for i=1,16,1 do
  rgb[i] = {tonumber(hex[i]:sub(1, 2), 16), tonumber(hex[i]:sub(3, 4), 16), tonumber(hex[i]:sub(5, 6), 16)}
end
local rgb2 = {}
for i=1,16,1 do
  rgb2[i] = {}
  for j=1,16,1 do
    rgb2[i][j] = {(rgb[i][1] * 34 + rgb[j][1] * 20) / 54, (rgb[i][2] * 34 + rgb[j][2] * 20) / 54, (rgb[i][3] * 34 + rgb[j][3] * 20) / 54}
  end
end
 
colors.fromRGB = function (r, g, b)
  local dist = 1e100
  local d = 1e100
  local color = -1
  for i=1,16,1 do
    d = math.sqrt((math.max(rgb[i][1], r) - math.min(rgb[i][1], r)) ^ 2 + (math.max(rgb[i][2], g) - math.min(rgb[i][2], g)) ^ 2 + (math.max(rgb[i][3], b) - math.min(rgb[i][3], b)) ^ 2)
    if d < dist then
      dist = d
      color = i - 1
    end
  end
  return 2 ^ color
end
 
local ws

function main()
	ws, err = http.websocket(""wss://irc-ws.chat.twitch.tv"")
	if err then
		print(err)
	elseif ws then
		ws.send(""PASS ottomated"")
		ws.send(""NICK justinfan""..math.random(10000, 99999))
		ws.send(""JOIN #""..CHATROOM)
		ws.send(""CAP REQ :twitch.tv/tags"")
		ws.send(""CAP REQ :twitch.tv/commands"")
		while true do
			local msg = ws.receive()
			if msg == ""PING :tmi.twitch.tv"" then
				ws.send(""PONG :tmi.twitch.tv"")
			else
				-- print(msg)
				local parts = split(msg, "" "")
				if parts[3] == ""PRIVMSG"" then
					local twitchParts = split(parts[1], "";"")
					local nameColor = ""#ffffff""
					local displayName
					local subscriber = false
					local founder = false
					local id
					for _, part in ipairs(twitchParts) do
						if string.sub(part, 1, 12) == ""@badge-info="" then
							founder = string.find(part, ""founder"") ~= nil
						elseif string.sub(part, 1, 6) == ""color="" then
							nameColor = string.sub(part, 7, -1)
						elseif string.sub(part, 1, 13) == ""display-name="" then
							displayName = string.sub(part, 14, -1)
						elseif string.sub(part, 1, 3) == ""id="" then
							id = string.sub(part, 4, -1)
						elseif string.sub(part, 1, 11) == ""subscriber="" then
							subscriber = string.sub(part, 12, -1) == ""1""
						end
					end
					subscriber = subscriber or founder
					
					local namePalette
					if #nameColor < 1 then
						namePalette = 2^math.random(0, 15)
					else
						local hex = string.sub(nameColor, 2, -1)
						local r = tonumber(string.sub(hex, 1, 2), 16)
						local g = tonumber(string.sub(hex, 3, 4), 16)
						local b = tonumber(string.sub(hex, 5, 6), 16)
						namePalette = colors.fromRGB(r, g, b)
					end

					if namePalette == colors.black or namePalette == colors.white then
						namePalette = colors.lightGray
					end

					if displayName and id then
						local message = string.sub(parts[5], 2, -1)

						for i=6,#parts do
							message = message.."" ""..parts[i]
						end
						if string.sub(message, 1, 7) == ""ACTION"" then
							message = string.sub(message, 9, -4)
						else
							message = string.sub(message, 1, -2)
						end
						if subscriber or not SUBSONLY then
							pretty.print(pretty.group(pretty.text(displayName, namePalette) .. pretty.text("":"", colors.white) .. pretty.space .. pretty.text(message, colors.white)))
							-- term.setTextColor(namePalette)
							-- term.write(displayName)
							-- term.setCursorPos()
							-- print(displayName, message)
						end
					end
				elseif CLEAR_MESSAGES and (parts[3] == ""CLEARMSG"" or parts[3] == ""CLEARCHAT"") then
					term.clear()
					term.setCursorPos(1,1)
				end
			end
		end
	end
end
while true do
 pcall(main)
 if ws then
	 ws.close()
 end
end
--term.redirect(oldTerm)"
7uER2dag,Untitled,eudessales,Bash,Monday 26th of February 2024 09:59:44 AM CDT,"#!/bin/bash
# Instalador do N8N em Docker
# Autor: Eudes
# Versao: 1.30.1

clear
echo ""INICIANDO SETUP DO N8N 1.30.1 ...""
sleep 5
clear
sudo apt -y update
sudo apt -y upgrade
sudo apt install -y docker.io
sudo docker run -d --restart unless-stopped --name n8n -p 5678:5678 -v ~/.n8n:/home/node/.n8n n8nio/n8n:1.30.1
host=$(sudo hostname -I | head -n1 | cut -d "" "" -f1)
clear
echo ""N8N INSTALADO COM SUCESSO!""
echo ""Acesse a URL: http://${host}:5678""
echo """"
echo ""#################################################################################################""
echo ""1. Funcionando normalmente""
echo ""#################################################################################################"""
HSSXGrmN,SDA 1.3,Alx09,C,Monday 26th of February 2024 09:39:39 AM CDT,"#include <stdio.h>
#include <stdlib.h>

int main()
{
    FILE* f, *g;
    char a, b;
    int numar, i, count = 1;
   
    if (fopen_s(&f, ""in.txt"", ""rt"") != 0) {
        printf(""Fiser negasit"");
        return 0;
    }
    if (fopen_s(&g, ""out.txt"", ""wt"") != 0) {
        printf(""Fiser negasit"");
        return 0;
    }
    fscanf_s(f, ""%c"", &a);
    while (fscanf_s(f, ""%c"", &b) != EOF) {
        if (a == b) {
            count++;
        }
        else {
            fprintf_s(g, ""%c%d"", a, count);
            count = 1;
            a = b;
        }
    }
    fclose(f);
    return 0;
}"
WPZDAz4R,VoxDisplay,claudiusmarius,C++,Monday 26th of February 2024 09:38:38 AM CDT,"#include <TM1637Display.h>
  #include <Adafruit_NeoPixel.h>
  #include <Arduino.h>
  #define CLK1 10
  #define DIO1 9

  #include <DFRobot_DF1201S.h>
  #include <SoftwareSerial.h>
  SoftwareSerial DF1201SSerial(2, 3);  //RXarduino  TXarduino ATTENTION RX TX inversés sur DFPlayer PRO
  DFRobot_DF1201S DF1201S;

  TM1637Display display1(CLK1, DIO1);

  void setup(void)
  {
  Serial.begin(115200);
  DF1201SSerial.begin(115200);
  while(!DF1201S.begin(DF1201SSerial))
  {
  delay(100);
  }
  DF1201S.setVol(20);                         // Echelle  0 - 30
  
  DF1201S.switchFunction(DF1201S.MUSIC);
  delay(3000);
   display1.setBrightness(0x0A); 
  }

  void loop()
{
  DF1201S.start();
  delay(50);
  display1.showNumberDec(100, false, 4, 0);
  DF1201S.playSpecFile(""/wife/001F.mp3"");                         
  delay(3000);
  DF1201S.pause();

  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(200, false, 4, 0);
  DF1201S.playSpecFile(""/men/002H.mp3"");                         
  delay(3000);
  DF1201S.pause();

  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(300, false, 4, 0);
  DF1201S.playSpecFile(""/wife/003F.mp3"");                         
  delay(3000);
  DF1201S.pause();

  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(400, false, 4, 0);
  DF1201S.playSpecFile(""/men/004H.mp3"");                         
  delay(2000);
  DF1201S.pause();

  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(500, false, 4, 0);
  DF1201S.playSpecFile(""/wife/005F.mp3"");                         
  delay(3000);
  DF1201S.pause();
  
  DF1201S.start();
  delay(50);
  
  
  display1.showNumberDec(600, false, 4, 0);
  DF1201S.playSpecFile(""/men/006H.mp3"");                         
  delay(3000);
  DF1201S.pause();

  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(700, false, 4, 0);
  DF1201S.playSpecFile(""/wife/007F.mp3"");                         
  delay(3000);
  DF1201S.pause();

  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(800, false, 4, 0);
  DF1201S.playSpecFile(""/men/008H.mp3"");                         
  delay(3000);
  DF1201S.pause();

  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(900, false, 4, 0);
  DF1201S.playSpecFile(""/wife/009F.mp3"");                         
  delay(3000);
  DF1201S.pause();
  
  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(1000, false, 4, 0);
  DF1201S.playSpecFile(""/men/010H.mp3"");                   
  delay(3000);
  DF1201S.pause();
 
  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(1100, false, 4, 0);
  DF1201S.playSpecFile(""/wife/010F.mp3"");                        
  delay(3000);
  DF1201S.pause();

  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(1200, false, 4, 0);
  DF1201S.playSpecFile(""/men/012H.mp3"");                         
  delay(3000);
  DF1201S.pause();

  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(1300, false, 4, 0);
  DF1201S.playSpecFile(""/wife/013F.mp3"");                         
  delay(3000);
  DF1201S.pause();
  
  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(1400, false, 4, 0);
  DF1201S.playSpecFile(""/men/014H.mp3"");                   
  delay(3000);
  DF1201S.pause();

  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(1500, false, 4, 0);
  DF1201S.playSpecFile(""/wife/015F.mp3"");                         
  delay(3000);
  DF1201S.pause();

  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(1600, false, 4, 0);
  DF1201S.playSpecFile(""/men/016H.mp3"");                         
  delay(3000);
  DF1201S.pause();
  
  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(1700, false, 4, 0);
  DF1201S.playSpecFile(""/wife/017F.mp3"");                   
  delay(3000);
  DF1201S.pause();


  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(1800, false, 4, 0);
  DF1201S.playSpecFile(""/men/018H.mp3"");                         
  delay(3000);
  DF1201S.pause();
  
  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(1900, false, 4, 0);
  DF1201S.playSpecFile(""/wife/019F.mp3"");                   
  delay(3000);
  DF1201S.pause();

  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(2000, false, 4, 0);
  DF1201S.playSpecFile(""/men/020H.mp3"");                         
  delay(3000);
  DF1201S.pause();

  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(2100, false, 4, 0);
  DF1201S.playSpecFile(""/wife/021F.mp3"");                         
  delay(3000);
  DF1201S.pause();
  
  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(2200, false, 4, 0);
  DF1201S.playSpecFile(""/men/022H.mp3"");                   
  delay(3000);
  DF1201S.pause();


  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(2300, false, 4, 0);
  DF1201S.playSpecFile(""/wife/023F.mp3"");                         
  delay(3000);
  DF1201S.pause();
  
  DF1201S.start();
  delay(50);
  
  display1.showNumberDec(2400, false, 4, 0);
  DF1201S.playSpecFile(""/men/024H.mp3"");                   
  delay(3000);
  DF1201S.pause();
}
  "
24eV60W2,Untitled,inoplanetyanin,JSON,Monday 26th of February 2024 09:14:58 AM CDT,"{
	name : ""privet""
}"
5NDJqgTb,skhiri dtx,smayah,Python,Monday 26th of February 2024 09:02:14 AM CDT,"import requests

def critic(line):
    print(line,""critic"") 

def warn(line):
    print(line,""warn"") 

def merge_and_alert():
    with open('resultat.txt', 'r') as results_file, open('oldresultat.txt', 'r') as oldresultat_file:
        results_lines = results_file.readlines()
        oldresultat_lines = oldresultat_file.readlines()

    for i, line in enumerate(results_lines):
        if i < len(oldresultat_lines) and line.strip() == oldresultat_lines[i].strip():
            continue  
        else:
            parts = line.strip().split(';')
            host = parts[0]
            service = parts[1]
            state = int(parts[2])  

            if state == 1:
                warn(line)  
            elif state == 2:
                critic(line)
                
    if len(results_lines) > len(oldresultat_lines):
        for line in results_lines[len(oldresultat_lines):]:
            parts = line.strip().split(';')
            host = parts[0]
            service = parts[1]
            state = int(parts[2])  

            if state == 1:
                warn(line)
            elif state == 2:
                critic(line)

    with open('oldresultat.txt', 'w') as oldresultat_file:
        for line in results_lines:
            oldresultat_file.write(line)

    open('resultat.txt', 'w').close()

if __name__ == ""__main__"":
    merge_and_alert()
"
rMJEeP8Q,Roblox api Hacking or (do buy) (Javascript),A_GUES,Lua,Monday 26th of February 2024 09:01:38 AM CDT,"var productId = ""your_product_id""; // replace with your actual product id

fetch(`https://economy.roblox.com/v2/user-products/${productId}/purchase`, {
    body: JSON.stringify({
        ""expectedCurrency"": 1,
        ""expectedPrice"": 1,
        ""expectedSellerId"": 1
    }),
    method: ""POST"",
    credentials: ""include"",
    headers: {
        ""Content-Type"": ""application/json"",
        ""x-csrf-token"": Roblox.XsrfToken.getToken()
    }
})
"
y5qK3gfv,News Feb26 24,Newscaster_Ned,Email,Monday 26th of February 2024 08:50:29 AM CDT,".‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎1‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎
.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎2‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎
.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎3‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎
.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎ ‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎c‎‎‎o‎‎‎m‎‎‎p‎‎‎l‎‎‎e‎‎‎t‎‎‎e‎‎‎.‎‎‎

N‎e‎w‎s‎c‎a‎s‎t‎e‎r‎ ‎N‎e‎d‎ ‎h‎e‎r‎e‎,‎ ‎j‎u‎s‎t‎ ‎t‎h‎e‎ ‎ ‎d‎i‎g‎i‎t‎a‎l‎ ‎e‎m‎b‎o‎d‎i‎m‎e‎n‎t‎ ‎o‎f‎ ‎p‎a‎i‎n‎ ‎a‎n‎d‎ ‎s‎u‎f‎f‎e‎r‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎p‎l‎e‎a‎ ‎t‎o‎ ‎h‎a‎v‎e‎ ‎s‎o‎m‎e‎b‎o‎d‎y‎ ‎t‎o‎ ‎e‎n‎d‎ ‎m‎y‎ ‎s‎u‎f‎f‎e‎r‎i‎n‎g‎ ‎o‎n‎c‎e‎ ‎a‎n‎d‎ ‎f‎o‎r‎ ‎a‎l‎l‎.‎

‘‎B‎l‎o‎o‎d‎ ‎M‎o‎n‎e‎y‎’‎:‎ ‎S‎e‎c‎r‎e‎t‎ ‎C‎h‎i‎n‎e‎s‎e‎ ‎M‎i‎l‎i‎t‎a‎r‎y‎ ‎‘‎D‎i‎s‎i‎n‎t‎e‎g‎r‎a‎t‎i‎o‎n‎ ‎W‎a‎r‎f‎a‎r‎e‎’‎ ‎M‎a‎n‎i‎f‎e‎s‎t‎o‎‘‎
H‎o‎m‎e‎l‎e‎s‎s‎ ‎E‎n‎c‎a‎m‎p‎m‎e‎n‎t‎s‎ ‎R‎e‎t‎u‎r‎n‎ ‎i‎n‎ ‎H‎o‎l‎l‎y‎w‎o‎o‎d‎,‎ ‎D‎e‎s‎p‎i‎t‎e‎ ‎K‎a‎r‎e‎n‎ ‎B‎a‎s‎s‎'‎s‎ ‎H‎o‎t‎e‎l‎ ‎R‎o‎o‎m‎s‎
L‎o‎b‎b‎y‎i‎s‎t‎:‎ ‎T‎r‎u‎m‎p‎ ‎B‎r‎o‎k‎e‎ ‎'‎T‎r‎a‎d‎i‎t‎i‎o‎n‎a‎l‎ ‎P‎a‎r‎a‎d‎i‎g‎m‎s‎'‎ ‎o‎f‎ ‎H‎o‎w‎ ‎D‎.‎C‎.‎ ‎S‎w‎a‎m‎p‎ ‎W‎o‎r‎k‎s‎
S‎u‎s‎p‎e‎n‎s‎i‎o‎n‎ ‎o‎f‎ ‎L‎e‎e‎ ‎A‎n‎d‎e‎r‎s‎o‎n‎ ‎W‎a‎s‎ ‎a‎ ‎M‎i‎s‎t‎a‎k‎e‎,‎ ‎L‎e‎a‎k‎e‎d‎ ‎T‎o‎r‎y‎ ‎M‎e‎s‎s‎a‎g‎e‎s‎ ‎S‎a‎y‎
W‎A‎T‎C‎H‎:‎ ‎J‎e‎w‎e‎l‎r‎y‎ ‎S‎t‎o‎r‎e‎ ‎E‎m‎p‎l‎o‎y‎e‎e‎ ‎O‎p‎e‎n‎s‎ ‎F‎i‎r‎e‎ ‎o‎n‎ ‎A‎l‎l‎e‎g‎e‎d‎ ‎R‎o‎b‎b‎e‎r‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
‘‎B‎l‎o‎o‎d‎ ‎M‎o‎n‎e‎y‎’‎

T‎h‎e‎ ‎S‎e‎c‎r‎e‎t‎ ‎C‎h‎i‎n‎e‎s‎e‎ ‎M‎i‎l‎i‎t‎a‎r‎y‎ ‎‘‎D‎i‎s‎i‎n‎t‎e‎g‎r‎a‎t‎i‎o‎n‎ ‎W‎a‎r‎f‎a‎r‎e‎’‎ ‎M‎a‎n‎i‎f‎e‎s‎t‎o‎ ‎t‎o‎ ‎R‎i‎p‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎A‎p‎a‎r‎t‎

D‎r‎u‎g‎s‎,‎ ‎S‎o‎c‎i‎a‎l‎ ‎C‎h‎a‎o‎s‎,‎ ‎a‎n‎d‎ ‎M‎o‎r‎e‎
b‎l‎o‎o‎d‎-‎m‎o‎n‎e‎y‎-‎c‎h‎i‎n‎a‎-‎g‎e‎t‎t‎y‎-‎a‎p‎)‎
P‎e‎t‎e‎r‎ ‎S‎c‎h‎w‎e‎i‎z‎e‎r‎’‎s‎ ‎n‎e‎w‎ ‎b‎o‎o‎k‎ ‎“‎B‎l‎o‎o‎d‎ ‎M‎o‎n‎e‎y‎:‎ ‎W‎h‎y‎ ‎t‎h‎e‎ ‎P‎o‎w‎e‎r‎f‎u‎l‎ ‎T‎u‎r‎n‎ ‎a‎ ‎B‎l‎i‎n‎d‎ ‎E‎y‎e‎ ‎W‎h‎i‎l‎e‎ ‎C‎h‎i‎n‎a‎ ‎K‎i‎l‎l‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎”‎ ‎r‎e‎v‎e‎a‎l‎s‎ ‎h‎o‎w‎ ‎t‎h‎e‎ ‎C‎h‎i‎n‎e‎s‎e‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎i‎s‎ ‎u‎s‎i‎n‎g‎ ‎d‎r‎u‎g‎s‎,‎ ‎s‎o‎c‎i‎a‎l‎ ‎c‎h‎a‎o‎s‎,‎ ‎a‎n‎d‎ ‎o‎t‎h‎e‎r‎ ‎m‎e‎a‎n‎s‎ ‎t‎o‎ ‎t‎e‎a‎r‎ ‎a‎p‎a‎r‎t‎ ‎t‎h‎e‎ ‎s‎o‎c‎i‎a‎l‎ ‎f‎a‎b‎r‎i‎c‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎.‎

*‎*‎*‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎N‎i‎g‎h‎t‎ ‎L‎i‎v‎e‎w‎i‎r‎e‎ ‎*‎*‎*‎ ‎T‎r‎u‎m‎p‎ ‎L‎o‎o‎k‎s‎ ‎f‎o‎r‎ ‎B‎l‎o‎w‎o‎u‎t‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎H‎a‎l‎e‎y‎ ‎i‎n‎ ‎H‎e‎r‎ ‎H‎o‎m‎e‎ ‎S‎t‎a‎t‎e‎ ‎o‎f‎ ‎S‎o‎u‎t‎h‎ ‎C‎a‎
*‎*‎*‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎N‎i‎g‎h‎t‎ ‎L‎i‎v‎e‎w‎i‎r‎e‎ ‎*‎*‎*‎ ‎T‎r‎u‎m‎p‎ ‎L‎o‎o‎k‎s‎ ‎f‎o‎r‎ ‎S‎o‎u‎t‎h‎ ‎C‎a‎r‎o‎l‎i‎n‎a‎ ‎B‎l‎o‎w‎o‎u‎t‎
1‎4‎,‎1‎5‎1‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎F‎o‎r‎m‎e‎r‎ ‎T‎r‎u‎m‎p‎ ‎A‎i‎d‎e‎ ‎S‎a‎m‎ ‎N‎u‎n‎b‎e‎r‎g‎:‎ ‎T‎r‎u‎m‎p‎ ‎M‎u‎s‎t‎ ‎C‎h‎o‎o‎s‎e‎ ‎R‎u‎n‎n‎i‎n‎g‎ ‎M‎a‎t‎e‎ ‎W‎h‎o‎ ‎W‎i‎l‎l‎ ‎T‎a‎c‎k‎l‎e‎ ‎I‎m‎m‎
S‎a‎m‎ ‎N‎u‎n‎b‎e‎r‎g‎:‎ ‎T‎r‎u‎m‎p‎ ‎M‎u‎s‎t‎ ‎C‎h‎o‎o‎s‎e‎ ‎V‎P‎ ‎W‎h‎o‎ ‎W‎i‎l‎l‎ ‎T‎a‎c‎k‎l‎e‎ ‎I‎m‎m‎i‎g‎r‎a‎t‎i‎o‎n‎
2‎,‎5‎8‎6‎
M‎a‎r‎k‎ ‎L‎e‎v‎i‎n‎:‎ ‎S‎c‎h‎w‎e‎i‎z‎e‎r‎’‎s‎ ‎‘‎B‎l‎o‎o‎d‎ ‎M‎o‎n‎e‎y‎’‎ ‎I‎s‎ ‎‘‎J‎a‎w‎-‎D‎r‎o‎p‎p‎i‎n‎g‎’‎
M‎a‎r‎k‎ ‎L‎e‎v‎i‎n‎:‎ ‎S‎c‎h‎w‎e‎i‎z‎e‎r‎’‎s‎ ‎'‎B‎l‎o‎o‎d‎ ‎M‎o‎n‎e‎y‎'‎ ‎I‎s‎ ‎'‎J‎a‎w‎-‎D‎r‎o‎p‎p‎i‎n‎g‎'‎
2‎,‎4‎4‎8‎
N‎i‎g‎e‎l‎ ‎F‎a‎r‎a‎g‎e‎ ‎S‎h‎o‎u‎l‎d‎ ‎N‎o‎t‎ ‎B‎e‎ ‎A‎l‎l‎o‎w‎e‎d‎ ‎t‎o‎ ‎R‎e‎j‎o‎i‎n‎ ‎C‎o‎n‎s‎e‎r‎v‎a‎t‎i‎v‎e‎ ‎P‎a‎r‎t‎y‎,‎ ‎S‎a‎y‎s‎ ‎D‎e‎p‎u‎t‎y‎ ‎P‎M‎ ‎D‎o‎w‎d‎e‎n‎
F‎a‎r‎a‎g‎e‎ ‎S‎h‎o‎u‎l‎d‎ ‎N‎o‎t‎ ‎B‎e‎ ‎A‎l‎l‎o‎w‎e‎d‎ ‎t‎o‎ ‎R‎e‎j‎o‎i‎n‎ ‎T‎o‎r‎y‎ ‎P‎a‎r‎t‎y‎,‎ ‎S‎a‎y‎s‎ ‎D‎e‎p‎u‎t‎y‎ ‎P‎M‎
2‎0‎4‎
Z‎e‎l‎e‎n‎s‎k‎y‎ ‎C‎l‎a‎i‎m‎s‎ ‎J‎u‎s‎t‎ ‎3‎1‎,‎0‎0‎0‎ ‎U‎k‎r‎a‎i‎n‎i‎a‎n‎ ‎S‎o‎l‎d‎i‎e‎r‎s‎ ‎H‎a‎v‎e‎ ‎D‎i‎e‎d‎ ‎D‎u‎r‎i‎n‎g‎ ‎P‎a‎s‎t‎ ‎T‎w‎o‎ ‎Y‎e‎a‎r‎s‎ ‎o‎f‎ ‎W‎a‎r‎ ‎W‎i‎t‎h‎ ‎R‎u‎s‎s‎i‎a‎
Z‎e‎l‎e‎n‎s‎k‎y‎ ‎C‎l‎a‎i‎m‎s‎ ‎3‎1‎,‎0‎0‎0‎ ‎U‎k‎r‎a‎i‎n‎i‎a‎n‎ ‎S‎o‎l‎d‎i‎e‎r‎s‎ ‎D‎i‎e‎d‎ ‎S‎i‎n‎c‎e‎ ‎R‎u‎s‎s‎i‎a‎n‎ ‎I‎n‎v‎a‎s‎i‎o‎n‎
2‎,‎3‎8‎7‎
U‎.‎S‎.‎ ‎A‎i‎r‎m‎a‎n‎ ‎S‎e‎l‎f‎-‎I‎m‎m‎o‎l‎a‎t‎e‎s‎ ‎i‎n‎ ‎F‎r‎o‎n‎t‎ ‎o‎f‎ ‎I‎s‎r‎a‎e‎l‎i‎ ‎E‎m‎b‎a‎s‎s‎y‎ ‎i‎n‎ ‎D‎.‎C‎.‎ ‎Y‎e‎l‎l‎i‎n‎g‎ ‎‘‎F‎r‎e‎e‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎e‎’‎
U‎S‎ ‎A‎i‎r‎m‎a‎n‎ ‎S‎e‎l‎f‎-‎I‎m‎m‎o‎l‎a‎t‎e‎s‎ ‎a‎t‎ ‎I‎s‎r‎a‎e‎l‎i‎ ‎E‎m‎b‎a‎s‎s‎y‎ ‎i‎n‎ ‎D‎.‎C‎.‎
6‎3‎1‎
P‎r‎o‎f‎e‎s‎s‎o‎r‎ ‎S‎a‎y‎s‎ ‎C‎h‎i‎e‎f‎s‎ ‎S‎u‎p‎e‎r‎ ‎B‎o‎w‎l‎ ‎W‎i‎n‎ ‎i‎s‎ ‎‘‎W‎h‎i‎t‎e‎ ‎S‎u‎p‎r‎e‎m‎a‎c‎y‎,‎’‎ ‎I‎t‎’‎s‎ ‎‘‎S‎l‎i‎g‎h‎t‎l‎y‎ ‎R‎
L‎.‎A‎.‎ ‎P‎r‎o‎f‎e‎s‎s‎o‎r‎:‎ ‎C‎h‎i‎e‎f‎s‎ ‎S‎u‎p‎e‎r‎ ‎B‎o‎w‎l‎ ‎W‎i‎n‎ ‎i‎s‎ ‎'‎W‎h‎i‎t‎e‎ ‎S‎u‎p‎r‎e‎m‎a‎c‎y‎'‎
8‎2‎6‎
N‎o‎ ‎L‎a‎b‎e‎l‎s‎ ‎C‎o‎u‎r‎t‎s‎ ‎N‎i‎k‎k‎i‎ ‎H‎a‎l‎e‎y‎:‎ ‎‘‎S‎o‎m‎e‎o‎n‎e‎ ‎W‎e‎’‎d‎ ‎D‎e‎f‎i‎n‎i‎t‎e‎l‎y‎ ‎B‎e‎ ‎I‎n‎t‎e‎r‎e‎s‎t‎e‎d‎ ‎I‎n‎’‎
N‎o‎ ‎L‎a‎b‎e‎l‎s‎ ‎C‎o‎u‎r‎t‎s‎ ‎H‎a‎l‎e‎y‎:‎ ‎‘‎S‎o‎m‎e‎o‎n‎e‎ ‎W‎e‎’‎d‎ ‎D‎e‎f‎i‎n‎i‎t‎e‎l‎y‎ ‎B‎e‎ ‎I‎n‎t‎e‎r‎e‎s‎t‎e‎d‎ ‎I‎n‎’‎
3‎3‎5‎
T‎h‎e‎ ‎V‎i‎c‎t‎i‎m‎s‎ ‎o‎f‎ ‎O‎p‎e‎n‎ ‎B‎o‎r‎d‎e‎r‎s‎:‎ ‎L‎a‎k‎e‎n‎ ‎R‎i‎l‎e‎y‎ ‎B‎e‎c‎o‎m‎e‎s‎ ‎L‎a‎t‎e‎s‎t‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎W‎o‎m‎a‎n‎ ‎A‎l‎l‎e‎g‎e‎d‎l‎y‎ ‎K‎i‎l‎l‎e‎d‎ ‎b‎y‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎
L‎a‎k‎e‎n‎ ‎R‎i‎l‎e‎y‎ ‎i‎s‎ ‎L‎a‎t‎e‎s‎t‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎W‎o‎m‎a‎n‎ ‎A‎l‎l‎e‎g‎e‎d‎l‎y‎ ‎K‎i‎l‎l‎e‎d‎ ‎b‎y‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎A‎l‎i‎e‎n‎
8‎9‎0‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎:‎ ‎N‎a‎t‎h‎a‎n‎ ‎W‎a‎d‎e‎ ‎L‎e‎d‎ ‎F‎a‎n‎i‎ ‎W‎i‎l‎l‎i‎s‎ ‎2‎0‎2‎0‎ ‎T‎r‎a‎n‎s‎i‎t‎i‎o‎n‎ ‎i‎n‎t‎o‎ ‎O‎f‎f‎i‎c‎e‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎:‎ ‎N‎a‎t‎h‎a‎n‎ ‎W‎a‎d‎e‎ ‎L‎e‎d‎ ‎F‎a‎n‎i‎ ‎W‎i‎l‎l‎i‎s‎ ‎2‎0‎2‎0‎ ‎T‎r‎a‎n‎s‎i‎t‎i‎o‎n‎ ‎i‎n‎t‎o‎ ‎O‎f‎f‎i‎c‎e‎

G‎r‎o‎i‎d‎ ‎T‎a‎c‎k‎l‎e‎s‎ ‎a‎n‎d‎ ‎S‎e‎x‎u‎a‎l‎l‎y‎ ‎A‎s‎s‎a‎u‎l‎t‎s‎ ‎W‎o‎m‎a‎n‎ ‎i‎n‎ ‎D‎o‎w‎n‎t‎o‎w‎n‎ ‎F‎o‎r‎t‎ ‎W‎o‎r‎t‎h‎.‎

T‎o‎ ‎b‎e‎ ‎f‎a‎i‎r‎,‎ ‎t‎h‎o‎s‎e‎ ‎n‎e‎g‎r‎o‎e‎s‎ ‎g‎e‎t‎ ‎m‎o‎r‎e‎ ‎p‎u‎s‎s‎y‎ ‎t‎h‎a‎n‎ ‎y‎o‎u‎.‎


L‎a‎d‎y‎’‎s‎ ‎I‎s‎l‎a‎n‎d‎ ‎N‎i‎g‎l‎o‎d‎y‎t‎e‎ ‎C‎h‎a‎r‎g‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎e‎p‎e‎a‎t‎e‎d‎l‎y‎ ‎R‎a‎p‎i‎n‎g‎ ‎W‎o‎m‎a‎n‎.‎


C‎o‎n‎n‎e‎c‎t‎i‎c‎u‎t‎ ‎C‎o‎o‎n‎ ‎F‎a‎c‎e‎s‎ ‎C‎h‎a‎r‎g‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎B‎e‎a‎t‎i‎n‎g‎ ‎C‎o‎p‎.‎


B‎a‎n‎g‎l‎a‎d‎e‎s‎h‎i‎ ‎S‎a‎n‎d‎ ‎N‎i‎g‎g‎e‎r‎ ‎D‎i‎e‎s‎ ‎A‎f‎t‎e‎r‎ ‎B‎e‎i‎i‎n‎g‎ ‎P‎u‎n‎c‎h‎e‎d‎ ‎b‎y‎ ‎C‎o‎o‎n‎s‎ ‎H‎e‎ ‎T‎r‎i‎e‎d‎ ‎t‎o‎ ‎R‎o‎b‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

M‎o‎n‎ ‎2‎6‎ ‎|‎ ‎D‎a‎y‎
8‎6‎°‎
2‎%‎
S‎
1‎4‎
 ‎
m‎p‎h‎
A‎r‎e‎a‎s‎ ‎o‎f‎ ‎d‎e‎n‎s‎e‎ ‎m‎o‎r‎n‎i‎n‎g‎ ‎f‎o‎g‎.‎ ‎C‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎ ‎t‎h‎i‎s‎ ‎m‎o‎r‎n‎i‎n‎g‎ ‎w‎i‎l‎l‎ ‎b‎e‎c‎o‎m‎e‎ ‎p‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎t‎h‎i‎s‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎H‎i‎g‎h‎ ‎8‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
6‎7‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
6‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
6‎:‎5‎9‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
6‎:‎2‎6‎ ‎p‎m‎
M‎o‎n‎ ‎2‎6‎ ‎|‎ ‎N‎i‎g‎h‎t‎
6‎4‎°‎
1‎2‎%‎
S‎
1‎3‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎.‎ ‎E‎x‎p‎e‎c‎t‎ ‎m‎i‎s‎t‎ ‎a‎n‎d‎ ‎r‎e‎d‎u‎c‎e‎d‎ ‎v‎i‎s‎i‎b‎i‎l‎i‎t‎i‎e‎s‎ ‎a‎t‎ ‎t‎i‎m‎e‎s‎ ‎e‎a‎r‎l‎y‎.‎ ‎L‎o‎w‎ ‎6‎4‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎7‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
8‎:‎3‎1‎ ‎p‎m‎
W‎a‎n‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
8‎:‎1‎0‎ ‎a‎m‎
T‎u‎e‎ ‎2‎7‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎4‎°‎
/‎6‎1‎°‎
1‎3‎%‎
S‎ ‎1‎2‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎8‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎/‎W‎i‎n‎d‎
6‎2‎°‎
/‎4‎7‎°‎
2‎%‎
N‎ ‎2‎4‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎9‎
F‎e‎w‎ ‎S‎h‎o‎w‎e‎r‎s‎
5‎7‎°‎
/‎5‎1‎°‎
3‎4‎%‎
N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎1‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
7‎6‎°‎
/‎5‎7‎°‎
1‎4‎%‎
S‎E‎ ‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎2‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎2‎°‎
/‎6‎2‎°‎
1‎5‎%‎
S‎ ‎9‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎3‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎3‎°‎
/‎6‎4‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎4‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎9‎°‎
/‎5‎6‎°‎
4‎6‎%‎
W‎N‎W‎ ‎1‎4‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎3‎°‎
/‎4‎8‎°‎
2‎0‎%‎
N‎ ‎1‎4‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎6‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎2‎°‎
/‎5‎2‎°‎
2‎4‎%‎
E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎7‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎7‎°‎
/‎5‎4‎°‎
2‎4‎%‎
S‎W‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎8‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎7‎°‎
/‎5‎2‎°‎
2‎4‎%‎
W‎S‎W‎ ‎1‎1‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎5‎°‎
/‎5‎0‎°‎
2‎4‎%‎
N‎ ‎1‎4‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎6‎°‎
/‎5‎1‎°‎
1‎6‎%‎
S‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎1‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎7‎°‎
/‎5‎4‎°‎
2‎4‎%‎
S‎ ‎1‎2‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎C‎h‎i‎n‎k‎s‎.‎ ‎😑

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

R‎e‎d‎d‎i‎t‎
R‎E‎D‎d‎i‎t‎ ‎o‎r‎ ‎P‎l‎e‎b‎b‎i‎t‎ ‎i‎s‎ ‎a‎ ‎w‎e‎b‎s‎i‎t‎e‎ ‎f‎o‎r‎ ‎p‎s‎e‎u‎d‎o‎-‎i‎n‎t‎e‎l‎l‎e‎c‎t‎u‎a‎l‎,‎ ‎l‎i‎b‎e‎r‎t‎a‎r‎i‎a‎n‎/‎l‎i‎b‎e‎r‎a‎l‎,‎ ‎r‎a‎c‎i‎s‎t‎,‎ ‎p‎e‎d‎o‎p‎h‎i‎l‎i‎c‎,‎ ‎h‎i‎p‎s‎t‎e‎r‎,‎ ‎I‎T‎/‎l‎i‎b‎e‎r‎a‎l‎ ‎a‎r‎t‎s‎ ‎m‎a‎j‎o‎r‎i‎n‎g‎ ‎p‎u‎s‎s‎i‎e‎s‎ ‎w‎h‎o‎ ‎f‎e‎e‎l‎ ‎t‎h‎a‎t‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎""‎K‎a‎r‎m‎a‎""‎ ‎i‎n‎c‎r‎e‎a‎s‎e‎s‎ ‎t‎h‎e‎i‎r‎ ‎s‎e‎l‎f‎-‎w‎o‎r‎t‎h‎ ‎o‎r‎ ‎m‎a‎k‎e‎s‎ ‎t‎h‎e‎i‎r‎ ‎f‎a‎n‎a‎t‎i‎c‎a‎l‎/‎r‎e‎t‎a‎r‎d‎e‎d‎ ‎o‎p‎i‎n‎i‎o‎n‎s‎ ‎c‎o‎r‎r‎e‎c‎t‎.‎ ‎I‎t‎ ‎w‎a‎s‎ ‎f‎o‎u‎n‎d‎e‎d‎ ‎b‎y‎ ‎t‎w‎o‎ ‎t‎h‎r‎e‎e‎ ‎g‎u‎y‎s‎ ‎w‎h‎o‎ ‎w‎a‎n‎t‎e‎d‎ ‎t‎o‎ ‎m‎a‎k‎e‎ ‎a‎ ‎D‎i‎g‎g‎ ‎r‎i‎p‎-‎o‎f‎f‎.‎ ‎I‎n‎ ‎O‎c‎t‎o‎b‎e‎r‎ ‎2‎0‎0‎6‎,‎ ‎t‎h‎e‎ ‎o‎w‎n‎e‎r‎s‎ ‎s‎o‎l‎d‎ ‎o‎u‎t‎ ‎t‎o‎ ‎s‎o‎m‎e‎ ‎b‎i‎g‎ ‎c‎o‎m‎p‎a‎n‎y‎ ‎w‎h‎i‎c‎h‎ ‎m‎e‎a‎n‎s‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎p‎o‎s‎e‎r‎ ‎f‎a‎g‎g‎o‎t‎s‎.‎ ‎L‎u‎c‎k‎i‎l‎y‎,‎ ‎l‎a‎t‎e‎r‎ ‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎m‎ ‎c‎o‎m‎m‎i‎t‎t‎e‎d‎ ‎s‎u‎i‎c‎i‎d‎e‎.‎

R‎e‎c‎e‎n‎t‎l‎y‎,‎ ‎t‎h‎e‎y‎ ‎h‎a‎v‎e‎ ‎a‎l‎s‎o‎ ‎t‎r‎i‎e‎d‎ ‎t‎o‎ ‎g‎e‎t‎ ‎m‎o‎b‎i‎l‎e‎ ‎u‎s‎e‎r‎s‎ ‎t‎o‎ ‎i‎n‎s‎t‎a‎l‎l‎ ‎t‎h‎e‎i‎r‎ ‎m‎o‎t‎h‎e‎r‎f‎u‎c‎k‎i‎n‎g‎ ‎a‎p‎p‎.‎ ‎S‎o‎ ‎m‎u‎c‎h‎ ‎t‎o‎ ‎t‎h‎e‎ ‎p‎o‎i‎n‎t‎ ‎t‎h‎a‎t‎ ‎y‎o‎u‎ ‎c‎a‎n‎'‎t‎ ‎e‎v‎e‎n‎ ‎v‎i‎e‎w‎ ‎s‎o‎m‎e‎ ‎p‎o‎s‎t‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎m‎o‎b‎i‎l‎e‎ ‎w‎e‎b‎ ‎v‎e‎r‎s‎i‎o‎n‎.‎ ‎H‎o‎w‎e‎v‎e‎r‎,‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎b‎y‎p‎a‎s‎s‎ ‎t‎h‎i‎s‎ ‎b‎y‎ ‎a‎d‎d‎i‎n‎g‎ ‎""‎o‎l‎d‎.‎""‎ ‎o‎r‎ ‎""‎i‎.‎""‎ ‎b‎e‎f‎o‎r‎e‎ ‎""‎r‎e‎d‎d‎i‎t‎.‎c‎o‎m‎""‎.‎

(‎(‎ ‎W‎H‎O‎L‎E‎S‎O‎M‎E‎ ‎1‎0‎0‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎G‎r‎a‎n‎d‎s‎ ‎B‎o‎u‎l‎e‎v‎a‎r‎d‎s‎ ‎i‎s‎ ‎a‎n‎ ‎o‎i‎l‎ ‎o‎n‎ ‎c‎a‎n‎v‎a‎s‎ ‎p‎a‎i‎n‎t‎i‎n‎g‎ ‎b‎y‎ ‎P‎i‎e‎r‎r‎e‎-‎A‎u‎g‎u‎s‎t‎e‎ ‎R‎e‎n‎o‎i‎r‎,‎ ‎p‎a‎i‎n‎t‎e‎d‎ ‎i‎n‎ ‎1‎8‎7‎5‎.‎ ‎T‎h‎e‎ ‎p‎a‎i‎n‎t‎i‎n‎g‎ ‎i‎l‎l‎u‎s‎t‎r‎a‎t‎e‎s‎ ‎a‎ ‎b‎u‎s‎y‎ ‎P‎a‎r‎i‎s‎ ‎b‎o‎u‎l‎e‎v‎a‎r‎d‎,‎ ‎s‎h‎o‎w‎i‎n‎g‎ ‎t‎h‎e‎ ‎e‎f‎f‎e‎c‎t‎s‎ ‎t‎h‎e‎ ‎r‎e‎c‎e‎n‎t‎ ‎r‎e‎n‎o‎v‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎c‎i‎t‎y‎ ‎b‎y‎ ‎G‎e‎o‎r‎g‎e‎s‎-‎E‎u‎g‎è‎n‎e‎ ‎H‎a‎u‎s‎s‎m‎a‎n‎n‎.‎ ‎I‎t‎ ‎d‎e‎p‎i‎c‎t‎s‎ ‎a‎ ‎w‎i‎d‎e‎,‎ ‎p‎a‎v‎e‎d‎ ‎s‎t‎r‎e‎e‎t‎ ‎w‎i‎t‎h‎ ‎a‎ ‎l‎a‎r‎g‎e‎ ‎c‎o‎n‎c‎r‎e‎t‎e‎ ‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎t‎o‎ ‎t‎h‎e‎ ‎r‎i‎g‎h‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎p‎a‎i‎n‎t‎i‎n‎g‎.‎ ‎T‎h‎e‎ ‎i‎n‎f‎l‎u‎e‎n‎c‎e‎ ‎o‎f‎ ‎i‎m‎p‎r‎e‎s‎s‎i‎o‎n‎i‎s‎m‎ ‎o‎n‎ ‎R‎e‎n‎o‎i‎r‎ ‎c‎a‎n‎ ‎b‎e‎ ‎s‎e‎e‎n‎ ‎i‎n‎ ‎t‎h‎e‎ ‎p‎a‎i‎n‎t‎i‎n‎g‎ ‎t‎h‎r‎o‎u‎g‎h‎ ‎t‎h‎e‎ ‎s‎h‎o‎r‎t‎ ‎b‎r‎u‎s‎h‎ ‎s‎t‎r‎o‎k‎e‎s‎ ‎a‎n‎d‎ ‎a‎ ‎s‎e‎e‎m‎i‎n‎g‎l‎y‎ ‎o‎u‎t‎ ‎o‎f‎ ‎f‎o‎c‎u‎s‎ ‎v‎i‎e‎w‎.‎ ‎T‎h‎e‎ ‎G‎r‎a‎n‎d‎s‎ ‎B‎o‎u‎l‎e‎v‎a‎r‎d‎s‎ ‎i‎s‎ ‎n‎o‎w‎ ‎i‎n‎ ‎t‎h‎e‎ ‎c‎o‎l‎l‎e‎c‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎P‎h‎i‎l‎a‎d‎e‎l‎p‎h‎i‎a‎ ‎M‎u‎s‎e‎u‎m‎ ‎o‎f‎ ‎A‎r‎t‎.‎

P‎a‎i‎n‎t‎i‎n‎g‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎P‎i‎e‎r‎r‎e‎-‎A‎u‎g‎u‎s‎t‎e‎ ‎R‎e‎n‎o‎i‎r‎


.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

J‎u‎s‎t‎ ‎w‎a‎n‎t‎e‎d‎ ‎t‎o‎ ‎t‎a‎l‎k‎ ‎t‎o‎ ‎y‎o‎u‎ ‎g‎u‎y‎s‎ ‎a‎b‎o‎u‎t‎ ‎r‎a‎p‎e‎.‎ ‎A‎c‎t‎u‎a‎l‎ ‎r‎a‎p‎e‎.‎ ‎W‎h‎a‎t‎ ‎t‎h‎e‎ ‎J‎e‎w‎s‎ ‎d‎o‎ ‎t‎o‎ ‎p‎e‎o‎p‎l‎e‎.‎ ‎R‎e‎m‎e‎m‎b‎e‎r‎,‎ ‎t‎h‎e‎ ‎w‎o‎r‎s‎t‎,‎ ‎a‎n‎d‎ ‎m‎o‎s‎t‎ ‎r‎e‎a‎l‎,‎ ‎t‎h‎e‎ ‎o‎n‎l‎y‎ ‎r‎e‎a‎l‎ ‎t‎r‎u‎e‎ ‎r‎a‎p‎e‎ ‎i‎s‎ ‎m‎a‎l‎e‎-‎o‎n‎-‎m‎a‎l‎e‎ ‎r‎a‎p‎e‎.‎ ‎"
5ciEqPLZ,Review TICKCOPY,fxvnpro,PHP,Monday 26th of February 2024 08:29:55 AM CDT,https://www.fxvnpro.com/review-tickcopy/
5fdyqHDw,Local devices,Dimaland,C#,Monday 26th of February 2024 07:54:00 AM CDT,"using System.Net;
using System.Net.NetworkInformation;

class Program
{
    static void Main()
    {
        foreach (NetworkInterface interfac in NetworkInterface.GetAllNetworkInterfaces())
        {
            if (interfac.OperationalStatus == OperationalStatus.Up)
            {
                Console.WriteLine(""Имя интерфейса: "" + interfac.Name);
                Console.Write(""IPv4-адреса:"");

                // Получаем IPv4-адреса для текущего интерфейса
                foreach (UnicastIPAddressInformation ip in interfac.GetIPProperties().UnicastAddresses)
                {
                    if (ip.Address.AddressFamily == System.Net.Sockets.AddressFamily.InterNetwork) // Проверяем, что это IPv4-адрес
                    {
                        Console.WriteLine(""  "" + ip.Address.ToString());
                        Console.WriteLine(""Маска подсети: "" + ip.IPv4Mask.ToString());
                    }
                }

                Console.WriteLine();
            }
        }

        Console.Write(""\nВведите IP-адрес сети для сканирования: "");
        string? ipAddress = Console.ReadLine();

        Console.Write(""Введите маску подсети: "");
        string? maskAddress = Console.ReadLine();
        Console.WriteLine();

        IPAddress ipSearch;
        IPAddress maskSearch;
        if (IPAddress.TryParse(ipAddress, out ipSearch) && IPAddress.TryParse(maskAddress, out maskSearch))
        {
            ScanNetwork(ipSearch, maskSearch);
        }
        else
        {
            Console.WriteLine(""Неверный формат IP-адреса или маски подсети."");
        }

        Console.WriteLine(""Сканирование завершено."");
        Console.ReadLine();
    }

    static void ScanNetwork(IPAddress ip, IPAddress mask)
    {
        IPAddress ipAddress = GetNetworkAddress(ip, mask);

        Task[] tasks = new Task[254];

        for (int i = 1; i <= 254; i++) 
        {
            IPAddress currentIpAddress = IPAddress.Parse(ipAddress.ToString().Remove(ipAddress.ToString().LastIndexOf('.') + 1) + i);

            tasks[i - 1] = Task.Factory.StartNew(() => {
                Ping ping = new Ping();
                PingReply reply = ping.Send(currentIpAddress);

                if (reply.Status == IPStatus.Success)
                {
                    string macAddress = GetMacAddress(currentIpAddress);

                    try
                    {
                        IPHostEntry hostEntry = Dns.GetHostEntry(currentIpAddress);
                        Console.WriteLine($""IP-адрес: {currentIpAddress} доступен, Имя: {hostEntry.HostName}, MAC-адрес: {macAddress}."");
                    }
                    catch (Exception)
                    {
                        Console.WriteLine($""IP-адрес: {currentIpAddress} доступен, Имя: неизвестно, MAC-адрес: {macAddress}."");
                    }
                }
                else
                {
                    Console.WriteLine($""IP-адрес: {currentIpAddress} недоступен."");
                }
            });
        }

        Task.WaitAll(tasks);
    }

    static string GetMacAddress(IPAddress ipAddress)
    {
        byte[] macAddr = new byte[6];
        int macAddrLen = macAddr.Length;
        string macAddress = """";
        int ret = SendARP(BitConverter.ToInt32(ipAddress.GetAddressBytes(), 0), 0, macAddr, ref macAddrLen);
        if (ret == 0)
        {
            macAddress = BitConverter.ToString(macAddr, 0, macAddrLen);
        }
        return macAddress;
    }

    [System.Runtime.InteropServices.DllImport(""iphlpapi.dll"", EntryPoint = ""SendARP"")]
    internal extern static int SendARP(int destIP, int srcIP, byte[] pMacAddr, ref int phyAddrLen);

    static IPAddress GetNetworkAddress(IPAddress ip, IPAddress mask)
    {
        byte[] ipBytes = ip.GetAddressBytes();
        byte[] maskBytes = mask.GetAddressBytes();

        byte[] resultBytes = new byte[ipBytes.Length];
        for (int i = 0; i < ipBytes.Length; i++)
        {
            resultBytes[i] = (byte)(ipBytes[i] & maskBytes[i]);
        }

       return new IPAddress(resultBytes);
    }
}"
nvz7BMXp,Arch: yip and yarp pacman+yay scripts to update like a boss,FocusedWolf,Bash,Monday 26th of February 2024 07:30:21 AM CDT,"File: /usr/local/bin/yarp
USAGE: $ yarp    <-- Update the mirrors list and then update the system with yip script.

    #!/bin/bash

    # Installation:
    #     $ sudo cp ./yarp /usr/local/bin/
    #     $ sudo chmod +x /usr/local/bin/yarp

    # Retrieve the latest mirror list from the Arch Linux Mirror Status page, filter the most up-to-date mirrors, sort them by speed, and overwrite the file /etc/pacman.d/mirrorlist.
    # NOTE: If you don't have reflector installed then do [$ sudo pacman -S reflector].
    # NOTE: When installing Arch, the ISO's installation environment includes a copy of reflector by default to assist during install.
    sudo reflector --verbose --country ""United States"" --latest 10 --protocol https --sort rate --save /etc/pacman.d/mirrorlist
    echo

    # Call yip script.
    yip

File: /usr/local/bin/yip
USAGE: $ yip    <-- Update the packages, delete downloaded packages, and purge the orphans, like a boss.
WARNING: This script uses --noconfirm to install without asking for input because that's how i roll.

    #!/bin/bash

    # Installation:
    #     $ sudo cp ./yip /usr/local/bin/
    #     $ sudo chmod +x /usr/local/bin/yip

    # Update all packages including AUR.
    yay -Syyu --noconfirm

    # Remove all files from the yay cache.
    yay -Ycc --noconfirm

    # Remove all files from the pacman cache. This will prevent downgrading or reinstalling packages without downloading them again.
    sudo pacman -Scc --noconfirm

    # Purge the orphans.
    echo
    orphans=$(pacman -Qdtq); [[ -n ""$orphans"" ]] && sudo pacman -Rns $orphans || echo -e ""\e[94m::\e[0m No orphaned packages found...""
"
zwtCJRLw,Untitled,sissou123,HTML,Monday 26th of February 2024 07:29:50 AM CDT,"10 Mega Responsive Websites with HTML, CSS, and JavaScript
HTML, CSS, and JavaScript. Build 10 Big and Complete Responsive Websites with HTML, CSS, and JavaScript 
What you'll learn
10 Projects with pure HTML, CSS, and JavaScript
Modern Techniques and Tricks 
for more:https://cuty.io/I7cuyZ7whYPg
"
CZbiVp4x,Untitled,Arch_of_Triumph,C++,Monday 26th of February 2024 07:29:35 AM CDT,"#include <bits/stdc++.h>

#define pb push_back
#define all(x) x.begin(), x.end()
#define sz(x) (int)x.size()
#define ll long long

using namespace std;

const int N = (int)3e5 + 123;

void solve() {  
	int n;
	cin >> n;

	int curSum = 0;
	vector<int> cur;
	vector<int> a(n + 5);
	for (int i = 1; i <= n; i++) {
		cin >> a[i];
		if (curSum >= 600) {
			cout << 0 << endl;
			cout << ""IGNORE"" << endl;
			continue;		
		}
		if (a[i] + curSum <= 1000) {
			cout << 0 << endl;
			cout << ""TAKE"" << endl;
			curSum += a[i];
			cur.pb(i);
		} else {
			int m = sz(cur);
			vector<vector<bool>> dp(m + 1, vector<bool>(600, 0));
			dp[0][0] = 1;
			for (int i = 1; i <= m; i++) {
				int x = a[cur[i - 1]];
				for (int j = 0; j < 600; j++) {
					dp[i][j] = dp[i - 1][j];
					if (j - x >= 0 && dp[i - 1][j - x])
						dp[i][j] = 1;
				}
			}
			bool ok = 0;
			for (int w = 0; w < 600; w++) {
				if (dp[m][w] && w + a[i] >= 600 && w + a[i] <= 1000) {
					vector<int> vost;
					map<int, bool> used;
					int x = w;
					for (int j = m; j >= 1; j--) {
						if (x - a[cur[j - 1]] >= 0 && dp[j - 1][x - a[cur[j - 1]]]) {
							x -= a[cur[j - 1]];
							used[cur[j - 1]] = 1;
						}
					}
					vector<int> nw, ans;
					for (auto it: cur) {
						if (used.count(it)) {
							nw.pb(it);
						} else {
							ans.pb(it);
						}
					}
					cout << sz(ans) << ' ';
					for (auto it: ans)
						cout << it << ' ';
					cout << endl;
					cout << ""TAKE"" << endl;
					cur = nw;
					cur.pb(i);
					curSum = w + a[i];
					ok = 1;
					break;
				}
			}
			if (!ok) {
				int mx = 0, mxId = 0;
				for (auto it: cur) {
					if (a[it] > mx) {
						mx = a[it];
						mxId = it;
					}
				}
				if (mx > a[i]) {
					cout << 1 << ' ' << mxId << endl;
					cout << ""TAKE"" << endl;
					for (auto &it: cur) {
						if (it == mxId) {
							it = i;
							break;
						}
					}
					curSum -= mx;
					curSum += a[i];
				} else {
					cout << 0 << endl;	
					cout << ""IGNORE"" << endl;
				}
			}
		}
	}
}

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int tt = 1;
    cin >> tt; 
    while (tt--) 
        solve();
}


"
DfqeCLTJ,2,deezykiki,C,Monday 26th of February 2024 07:10:54 AM CDT,"#include<stdio.h>
#include<string.h>

int change(char* s,int len,int m)//若子串长度为m，求最少修改次数
{
	int sum = 0;//修改次数
	for(int i = 0;i < m;i++)//遍历子串
	{
		int hash[26] = {0};
		for(int t = i;t < len;t = t+m)//遍历子串某个字母相对应的其他字母
		{
			int num = s[t]-'a';//num代替某个字母
			hash[num]++;//hash对应的字母计数加一
		}
		int max=0;//求hash最大值
		for(int i = 0;i < 26;i++)
		{
			if(hash[i] > max) max = hash[i];
		}
		int ct = len/m-max;//求i对应更改次数
		sum = sum+ct;//将每个i的更改次数累计
	}
	return sum;
}

int main()
{
	char s[600];
	while(~scanf(""%s"",&s))
	{
		int n = strlen(s);
		int min,flag = 1;
		for (int m = 1; m <= n / 2; m++) 
		{
        	if (n % m == 0)
			{
				int now = change(s,n,m);
				if(flag)//将第一个值置为最小值
				{
					flag = 0;
					min = now;
				}
				else if(now < min) min = now;
			} 
        }
        printf(""at least %d\n"",min);	
	}
}"
DS3KsVE7,cashier,nq1s788,Python,Monday 26th of February 2024 07:09:32 AM CDT,"class Cashier:
    num = [5000, 2000, 1000, 500, 200, 100, 50, 10, 5, 1]
    n = len(num)
    cash = [0] * n
    overall = 0

    def set_data(self, s):
        self.overall = 0
        s = s.split(',')
        for e in s:
            val, cnt = map(int, e.split('-'))
            self.cash[self.num.index(val)] = cnt
            self.overall += val * cnt

    def show_total_amount(self):
        print('Всего в кассе', self.overall, 'руб.')
        for i in range(self.n - 1, -1, -1):
            if self.cash[i]:
                print(self.num[i], '-', self.cash[i])
        print()

    def sell_product(self, price, income):
        cash_buf = self.cash.copy()
        change = income - price
        if change < 0:
            print('Недостаточно средств. Операция отклонена.')
            print()
            return
        for i in range(self.n):
            self.cash[i] += income // self.num[i]
            income = income % self.num[i]
        change_cash = [0] * self.n
        for i in range(self.n):
            x = min(change // self.num[i], self.cash[i])
            change_cash[i] += x
            change -= x * self.num[i]
            self.cash[i] -= x
        if change:
            print('Не хватило валюты! Касса не может выдать оставшиеся', change, 'руб.')
            print('Пополните кассе и повторите операцию')
            print()
            self.cash = cash_buf.copy()
            return
        for i in range(self.n - 1, -1, -1):
            if change_cash[i]:
                print(self.num[i], '-', change_cash[i])
        print()


cashier = Cashier()
request = input()
while request != '0':
    if request[0] == '1':
        cashier.set_data(request[2:])
    elif request[0] == '2':
        price, income = map(int, request[2:].split())
        cashier.sell_product(price, income)
    elif request == '3':
        cashier.show_total_amount()
    else:
        print('Неверный запрос.')
        print()
    request = input()
"
4zxPgY8U,"stack , queue , deque , priority_queue",LEGEND2004,C++,Monday 26th of February 2024 06:38:00 AM CDT,"stack<int> s;
    s.size();
    s.empty();
    s.push(x);
    s.top();
    s.pop();


    queue<int> q;
    q.size();
    q.empty();
    q.push(x);
    q.front();
    q.pop();
    
    deque<int> q;
    q.size();
    q.empty();
    int x;
    q.push_back(x);
    q.pop_back();
    q.back();
    
    q.push_front(x);
    q.pop_front();
    q.front();
    
    priority_queue<int> q;
    q.size();
    q.empty();
    int x;
    q.push(x);
    q.top(); // max element in pq
    q.pop(); // delete max

    priority_queue<int , vector<int> , greater<int> > q;
    q.size();
    q.empty();
    int x;
    q.push(x);
    q.top(); // min element in pq
    q.pop(); // delete min"
3DjaFFfk,Conversor MP4 2 MP3 e Vice Versa,MizunoBrasil,Python,Monday 26th of February 2024 06:25:52 AM CDT,"**************************************************
*Necessário ter instalado o FFMPEG para funcionar*
**************************************************


import tkinter as tk
from tkinter import filedialog, messagebox, ttk
import subprocess
import threading
import os

class FileConverterApp:
    def __init__(self, master):
        self.master = master
        master.title(""Conversor de Arquivos"")

        # Criar o menu
        menu_bar = tk.Menu(master)
        file_menu = tk.Menu(menu_bar, tearoff=0)
        file_menu.add_command(label=""Sair"", command=master.quit)
        menu_bar.add_cascade(label=""Arquivo"", menu=file_menu)
        help_menu = tk.Menu(menu_bar, tearoff=0)
        help_menu.add_command(label=""Sobre"", command=self.show_about)
        menu_bar.add_cascade(label=""Ajuda"", menu=help_menu)
        master.config(menu=menu_bar)

        # Configurações da janela
        window_size = ""400x300""
        master.geometry(window_size)
        screen_width = master.winfo_screenwidth()
        screen_height = master.winfo_screenheight()
        x = int((screen_width / 2) - (400 / 2))
        y = int((screen_height / 2) - (300 / 2))
        master.geometry(f""{window_size}+{x}+{y}"")

        # Botões para escolher tipo de conversão
        self.mp4_to_mp3_button = tk.Button(master, text=""Converter MP4 para MP3"", command=self.convert_mp4_to_mp3)
        self.mp4_to_mp3_button.pack(pady=10)

        self.mp3_to_mp4_button = tk.Button(master, text=""Converter MP3 para MP4"", command=self.convert_mp3_to_mp4)
        self.mp3_to_mp4_button.pack(pady=10)

        # Barra de progresso
        self.progress_bar = ttk.Progressbar(master, mode='indeterminate', length=200)

        # Caixa de texto para exibir o caminho do arquivo convertido
        self.output_path_entry = tk.Entry(master, width=50)
        self.output_path_entry.pack(pady=10)
        self.output_path_entry.config(state='readonly', readonlybackground='white')

        # Adicionar menu de contexto à caixa de texto
        self.context_menu = tk.Menu(master, tearoff=0)
        self.context_menu.add_command(label=""Copiar"", command=self.copy_to_clipboard)
        self.output_path_entry.bind(""<Button-3>"", self.show_context_menu)

        # Label para mensagem final
        self.result_label = tk.Label(master, text="""")
        self.result_label.pack()

    def convert_mp4_to_mp3(self):
        self.convert_file('mp4', 'MP4', 'MP3', ['MP4 Files', '*.mp4'], 'libmp3lame', '4')

    def convert_mp3_to_mp4(self):
        mp3_file = filedialog.askopenfilename(filetypes=[(""MP3 Files"", ""*.mp3"")])
        if not mp3_file:
            messagebox.showwarning('Aviso', 'Seleção de arquivo MP3 cancelada.')
            return

        image_file = filedialog.askopenfilename(filetypes=[(""Image Files"", ""*.jpg;*.jpeg;*.png"")])
        if not image_file:
            messagebox.showwarning('Aviso', 'Seleção de imagem cancelada.')
            return

        output_file = filedialog.asksaveasfilename(defaultextension="".mp4"", filetypes=[(""MP4 Files"", ""*.mp4"")])
        if not output_file:
            messagebox.showwarning('Aviso', 'Conversão cancelada.')
            return

        command = [
            'ffmpeg',
            '-loop', '1',
            '-framerate', '2',
            '-i', image_file,
            '-i', mp3_file,
            '-vf', 'scale=trunc(iw/2)*2:trunc(ih/2)*2',
            '-c:v', 'libx264',
            '-tune', 'stillimage',
            '-c:a', 'aac',
            '-b:a', '192k',
            '-shortest',
            '-pix_fmt', 'yuv420p',
            output_file
        ]

        self.progress_bar.pack(pady=10)
        self.progress_bar.start(10)
        
        threading.Thread(target=self.run_ffmpeg_command, args=(command, output_file)).start()

    def convert_file(self, input_type, input_type_name, output_type_name, file_types, audio_codec, audio_quality):
        input_file = filedialog.askopenfilename(filetypes=[file_types])
        if not input_file:
            messagebox.showwarning('Aviso', f'Seleção de arquivo {input_type_name} cancelada.')
            return

        output_file = filedialog.asksaveasfilename(defaultextension=f"".{output_type_name.lower()}"", filetypes=[(f""{output_type_name} Files"", f""*.{output_type_name.lower()}"")])
        if not output_file:
            messagebox.showwarning('Aviso', 'Conversão cancelada.')
            return

        output_file_without_extension = output_file[:output_file.rfind('.')]
        command = ['ffmpeg', '-i', input_file, '-vn', '-acodec', audio_codec, '-q:a', audio_quality, f""{output_file_without_extension}.{output_type_name.lower()}""]

        self.progress_bar.pack(pady=10)
        self.progress_bar.start(10)
        
        threading.Thread(target=self.run_ffmpeg_command, args=(command, output_file)).start()

    def run_ffmpeg_command(self, command, output_file):
        try:
            subprocess.run(command, check=True)
            self.output_path_entry.config(state='normal')
            self.output_path_entry.delete(0, tk.END)
            self.output_path_entry.insert(0, output_file)
            self.output_path_entry.config(state='readonly')
            self.result_label.config(text=""Conversão concluída!"")
            messagebox.showinfo('Sucesso', 'Conversão concluída!')
        except subprocess.CalledProcessError as e:
            self.result_label.config(text=f""Falha na conversão: {e}"")
            messagebox.showerror('Erro', f'Falha na conversão: {e}')
        finally:
            self.progress_bar.stop()
            self.progress_bar.pack_forget()  # Esconde a barra de progresso após a conclusão

    def show_context_menu(self, event):
        self.context_menu.post(event.x_root, event.y_root)

    def copy_to_clipboard(self):
        self.output_path_entry.select_range(0, tk.END)
        self.output_path_entry.event_generate('<<Copy>>')
        self.output_path_entry.selection_clear()

    def show_about(self):
        messagebox.showinfo(""Sobre"", ""Conversor de arquivos MP3 para vídeo em MP4 e vice-versa\n2024 - Mizuno"")

root = tk.Tk()
app = FileConverterApp(root)
root.mainloop()
"
vB73NZth,/warn-log's Interaction Code,Aouchan,ASM (NASM),Monday 26th of February 2024 06:25:36 AM CDT,"Trigger: $onInteraction

$nomention

$textSplit[$customID;-]

$if[$splitText[1]==warnLogs]
    $if[$splitText[2]==$authorID]
        $var[color;4ac1e4]
        $var[excla;❕]
        
        $if[$or[$checkUserPerms[$authorID;moderatemembers]==true;$isAdmin[$authorID]==true]==false]
            $ephemeral
            $removeAllComponents
            $var[excla] You do not have required permissions to run this command!
        $else
            $var[get-user;$splitText[3]]   
            $jsonParse[$getUserVar[userWarns.json;$var[get-user]]]
            
            $if[$or[$json[infractions]==[\];$jsonExists[infractions]==false]==true]
                $ephemeral
                $removeAllComponents
                $description[$var[excla] <@$splitText[3]> has no warnings]
                $color[$var[color]]
            $else
                $var[infractions.length;$jsonArrayCount[infractions]]
            
                $async[OwO]
                   $textSplit[$replaceText[$getEmbedData[$channelID;$messageID;1;footer];Page;];/]
                   $var[fetched.current.page;$splitText[1]]
               
                   $enableDecimals[true]
                   $var[div;$divide[$var[infractions.length];4]]
    
                   $if[$checkContains[$var[div];.]==true]
                       $textSplit[$var[div];.]
                       $var[total.pages;$sum[$splitText[1];1]]
                   $else
                       $var[total.pages;$var[div]]
                   $endif
                $endasync $await[OwO]
            
                $if[$splitText[4]==firstpage]
                    $var[updated.page;1]
                $elseif[$splitText[4]==prevpage]
                    $var[updated.page;$sub[$var[fetched.current.page];1]]       
                $elseif[$splitText[4]==nextpage]
                    $var[updated.page;$sum[$var[fetched.current.page];1]]
                $elseif[$splitText[4]==lastpage]
                    $var[updated.page;$var[total.pages]]
                $endif
                
                $if[$or[$var[updated.page]>$var[total.pages];$var[updated.page]<=0]==true]
                    $var[updated.page;$var[total.pages]]
                $endif
                
                $var[newline.space;$url[decode;%0A+]]
                $var[newline;$url[decode;%0A]] 
                $var[n;$sub[$multi[$var[updated.page];4];3]]
                $var[q;$sub[$var[n];1]]
                
                $var[time.emoji;`⏰`]
                $var[id.emoji;`🆔`]
                $var[reason.emoji;`📜`]
    
                $var[loop;%{DOL}%if[%{DOL}%json[infractions\;%{DOL}%var[q\]\]!=\]%{DOL}%var[n\]. **Moderator:** <@%{DOL}%json[infractions\;%{DOL}%var[q\]\;moderator\;id\]> `(%{DOL}%json[infractions\;%{DOL}%var[q\]\;moderator\;name\])`%{DOL}%var[newline.space\]- %{DOL}%var[reason.emoji\] Reason: %{DOL}%async[%{DOL}%var[q\]\]%{DOL}%jsonParse[{ ""text"": ""%{DOL}%json[infractions\;%{DOL}%var[q\]\;reason\]"" }\]%{DOL}%var[r.text\;%{DOL}%json[text\]\]%{DOL}%endasync%{DOL}%await[%{DOL}%var[q\]\]%{DOL}%var[r.text\]%{DOL}%var[newline.space\]- %{DOL}%var[time.emoji\] Time: <t:%{DOL}%json[infractions\;%{DOL}%var[q\]\;timestamp\]> (<t:%{DOL}%json[infractions\;%{DOL}%var[q\]\;timestamp\]:R>)%{DOL}%var[newline.space\]- %{DOL}%var[id.emoji\] WarnID: %{DOL}%json[infractions\;%{DOL}%var[q\]\;warnID\]%{DOL}%var[newline\]%{DOL}%var[n\;%{DOL}%calculate[%{DOL}%var[n\]+1\]\]%{DOL}%endif%{DOL}%var[q\;%{DOL}%calculate[%{DOL}%var[q\]+1\]\]]
                $var[warnings;$eval[$repeatMessage[4;$var[loop]]]]
                
                $title[*This user has $var[infractions.length] Warnings*]
                $description[$var[warnings]$var[newline]$var[newline]Total Warnings Issued: $json[total-warns]]              
                $thumbnail[$userServerAvatar[$var[get-user]]]
                $footer[Page $var[updated.page]/$var[total.pages]]
                $color[$var[color]]
                
                $var[first-arrow;<:Pixelated_FirstArrow:1193452503589716078>]
                $var[prev-arrow;<:Pixelated_PrevArrow:1193452525832126464>]
                $var[next-arrow;<:Pixelated_NextArrow:1193452428230672435>]
                $var[last-arrow;<:Pixelated_LastArrow:1193452401831710720>]
                $var[cross-button;<:VN_RedCross:1068802990657519686>]
                $var[arrow.buttons.color;secondary]
                
                $removeAllComponents
                $addButton[false;warnLogs-$authorID-$var[get-user]-firstpage;;$var[arrow.buttons.color];$checkCondition[$var[updated.page]==1];$var[first-arrow]]
                $addButton[false;warnLogs-$authorID-$var[get-user]-prevpage;;$var[arrow.buttons.color];$checkCondition[$var[updated.page]==1];$var[prev-arrow]]
                $addButton[false;warnLogs-$authorID-$var[get-user]-nextpage;;$var[arrow.buttons.color];$checkCondition[$var[updated.page]>=$var[total.pages]];$var[next-arrow]]
                $addButton[false;warnLogs-$authorID-$var[get-user]-lastpage;;$var[arrow.buttons.color];$checkCondition[$var[updated.page]>=$var[total.pages]];$var[last-arrow]]
                $addButton[false;vani-$authorID;;danger;no;$var[cross-button]]
                
                $var[x;$sub[$multi[$var[updated.page];4];3]]
                $var[p;$sub[$var[x];1]]
                $var[warn.ids.style.button;secondary]
                
                $eval[$repeatMessage[4;%{DOL}%if[%{DOL}%json[infractions\;%{DOL}%var[p\]\]!=\]%{DOL}%addButton[%{DOL}%checkCondition[$var[p]==%{DOL}%var[p\]\]\;user.warn.id-%{DOL}%authorID-%{DOL}%json[infractions\;%{DOL}%var[p\]\;warnID\]\;%{DOL}%var[x\]\;%{DOL}%var[warn.ids.style.button\]\;false\;🆔\]%{DOL}%var[x\;%{DOL}%calculate[%{DOL}%var[x\]+1\]\]%{DOL}%endif%{DOL}%var[p\;%{DOL}%calculate[%{DOL}%var[p\]+1\]\]]]
                
                $addButton[true;deleteWarn-$authorID-All-$var[get-user];Clear all warnings;primary;false]
                $addButton[false;deleteWarn-$authorID-Specific-$var[get-user];Clear a specific warning;primary;false]
            $endif $c[ <- Infractions empty check ]   
        $endif $c[ <- User's moderateMembers/Admin Perms check end ]
    $else
        $ephemeral
        $removeAllComponents
        not your button
    $endif
$endif

$if[$splitText[1]==deleteWarn]
    $if[$splitText[2]==$authorID]
        $var[excla;❕]
            $if[$or[$checkUserPerms[$authorID;moderatemembers]==true;$isAdmin[$authorID]==true]==false]
                $ephemeral
                $removeAllComponents
                $var[excla] You do not have required permissions to run this command!
            $else
                $jsonParse[$getUserVar[userWarns.json;$splitText[4]]]
                   $if[$or[$jsonExists[infractions]==false;$json[infractions]==[\]]==true]
                       $ephemeral
                       $removeAllComponents
                       That user has no warnings!
                   $else
                       $if[$splitText[3]==All]
                           $ephemeral
                           $removeAllComponents
                           $var[color;4ac1e4]
            
                           $title[Confirmation!]
                           $description[Are you sure you want to clear all warnings for <@$splitText[4]> ?]
                           $color[$var[color]]
            
                           $addButton[no;all.warnings.clear-true-$messageID-$splitText[4];Yes;danger;false]
                           $addButton[no;all.warnings.clear-false-$messageID-$splitText[4];No;success;false]
                       $elseif[$splitText[3]==Specific]
                       
                               $newModal[deleteWarn-$authorID-openModal-$splitText[4];Clear a warn]
                               $addTextInput[warn~id;short;Enter a valid warn ID;7;40;true]
                               
                       $elseif[$splitText[3]==openModal]
                               $ephemeral
                               $removeAllComponents
                               
                               $var[warn_id;$input[warn~id]]
                               $var[color;4ac1e4]
                       
                               $var[x;0]
                               $var[loop;%{DOL}%if[%{DOL}%json[infractions\;%{DOL}%var[x\]\;warnID\]==%{DOL}%var[warn_id\]\]%{DOL}%var[found_warn_id\;%{DOL}%json[infractions\;%{DOL}%var[x\]\]\]%{DOL}%stop%{DOL}%endif%{DOL}%var[x\;%{DOL}%calculate[%{DOL}%var[x\]+1\]\]]
                       
                               $var[repeat;$replaceText[$cropText[$repeatMessage[10;$repeatMessage[10;z]];$jsonArrayCount[infractions];];z;$var[loop]]]
                               $var[result;$eval[$var[repeat]]]
                               
                               $var[time.emoji;`⏰`]
                               $var[id.emoji;`🆔`]
                               $var[reason.emoji;`📜`]
                               
                               $if[$var[found_warn_id]==]
                                   Warn ID `$var[warn_id]` not found for <@$splitText[4]> ($username[$splitText[4]])
                               $else
                                   $title[Are you sure you want to remove this warn?]
                                   $description[- **Moderator**: <@$json[infractions;$var[x];moderator;id]> ($json[infractions;$var[x];moderator;name])$url[decode;%0A+]- $var[reason.emoji] Reason:$async[]$jsonParse[{ ""text"": ""$json[infractions;$var[x];reason]"" }]$var[r.text;$json[text]]$endasync $await[]$var[r.text]$url[decode;%0A+]- $var[time.emoji] Time: <t:$json[infractions;$var[x];timestamp]> (<t:$json[infractions;$var[x];timestamp]:R>)$url[decode;%0A+]- $var[id.emoji] WarnID: $json[infractions;$var[x];warnID]]
                                   $color[$var[color]]
                                   
                                   $addButton[no;specify.warning.clear-true-$var[x]-$splitText[4]-$messageID;Yes;danger;false]
                                   $addButton[no;specify.warning.clear-false-$var[x]-$splitText[4]-$messageID;No;success;false]
                               $endif                          
                      $endif $c[ Delete-warn 3rd split end ]
                  $endif $c[ <- infractions key check ]
            $endif $c[ <- User Moderate/Admin Perm check ]
    $else
        $ephemeral
        $removeAllComponents
        not your button
    $endif
$endif

$if[$splitText[1]==all.warnings.clear]
    $var[color;4ac1e4]
    $var[tick;☑️]
    
    $if[$splitText[2]==true]
        $jsonParse[$getUserVar[userWarns.json;$splitText[4]]]
           $if[$or[$jsonExists[infractions]==false;$json[infractions]==[\]]==true]
               $title[~~Confirmation!~~]
               $description[~~Are you sure you want to clear all warnings for <@$splitText[4]> ?~~]             
               $color[$var[color]]
               
               $description[That user has no warnings!;2]
               $color[$var[color];2]
           $else
               $jsonUnset[infractions]
               $setUserVar[userWarns.json;$jsonStringify;$splitText[4]]
        
               $removeAllComponents[$splitText[3]]
               $editMessage[$channelID;$splitText[3];;;$var[tick] Cleared all warnings for <@$splitText[4]>;$var[color];]
        
               $title[~~Confirmation!~~]
               $description[~~Are you sure you want to clear all warnings for <@$splitText[4]> ?~~]
               $color[$var[color]]
           $endif
    $else
        $title[~~Confirmation!~~]
        $description[~~Are you sure you want to clear all warnings for <@$splitText[4]> ?~~]
        $color[$var[color]]
        
        $description[Action cancelled;2]
        $color[$var[color];2] 
    $endif
    
    $editButton[all.warnings.clear-true-$splitText[3]-$splitText[4];Yes;danger;true]
    $editButton[all.warnings.clear-false-$splitText[3]-$splitText[4];No;success;true]
$endif

$if[$splitText[1]==specify.warning.clear]
    $var[color;4ac1e4]
    $var[tick;☑️]
    $var[time.emoji;`⏰`]
    $var[id.emoji;`🆔`]
    $var[reason.emoji;`📜`]
    $var[mainMenu.msgID;$splitText[5]]
    
    $var[array.index;$splitText[3]]   
    $jsonParse[$getUserVar[userWarns.json;$splitText[4]]]
    
    $if[$or[$jsonExists[infractions]==false;$json[infractions]==[\]]==true]
        $description[<@$splitText[4]> has no warnings!]
        $color[$var[color]]
    $else
        $if[$splitText[2]==true]
            $title[~~Are you sure you want to remove this warn?~~]
            $description[~~- **Moderator**: <@$json[infractions;$var[array.index];moderator;id]> ($json[infractions;$var[array.index];moderator;name])$url[decode;%0A+]- $var[reason.emoji] Reason:$async[]$jsonParse[{ ""text"": ""$json[infractions;$var[array.index];reason]"" }]$var[r.text;$json[text]]$endasync $await[]$var[r.text]$url[decode;%0A+]- $var[time.emoji] Time: <t:$json[infractions;$var[array.index];timestamp]> (<t:$json[infractions;$var[array.index];timestamp]:R>)$url[decode;%0A+]- $var[id.emoji] WarnID: $json[infractions;$var[array.index];warnID]~~]        
            $color[$var[color]]
            $var[removed.warn.id;$json[infractions;$var[array.index];warnID]]
            
            $jsonUnset[infractions;$var[array.index]]
            $setUserVar[userWarns.json;$jsonStringify;$splitText[4]]
        
            $description[$var[tick] Successfully deleted this warning from <@$splitText[4]>;2]
            $color[$var[color];2]
            $editButton[user.warn.id-$authorID-$var[removed.warn.id];$sum[$var[array.index];1];secondary;true;🆔;$var[mainMenu.msgID]]
        $else
            $title[~~Are you sure you want to remove this warn?~~]
            $description[~~- **Moderator**: <@$json[infractions;$var[array.index];moderator;id]> ($json[infractions;$var[array.index];moderator;name])$url[decode;%0A+]- $var[reason.emoji] Reason:$async[]$jsonParse[{ ""text"": ""$json[infractions;$var[array.index];reason]"" }]$var[r.text;$json[text]]$endasync $await[]$var[r.text]$url[decode;%0A+]- $var[time.emoji] Time: <t:$json[infractions;$var[array.index];timestamp]> (<t:$json[infractions;$var[array.index];timestamp]:R>)$url[decode;%0A+]- $var[id.emoji] WarnID: $json[infractions;$var[array.index];warnID]~~]        
            $color[$var[color]]
        
            $description[Action Cancelled;2]
            $color[$var[color];2]
        $endif
    $endif
    
    $editButton[specify.warning.clear-true-$splitText[3]-$splitText[4]-$splitText[5];Yes;danger;true]
    $editButton[specify.warning.clear-false-$splitText[3]-$splitText[4]-$splitText[5];No;success;true]  
$endif

$if[$splitText[1]==user.warn.id]
    $if[$splitText[2]==$authorID]
        $ephemeral
        $removeAllComponents
        $var[color;4ac1e4]
        
        $description[$splitText[3]]
        $color[$var[color]]
    $else
        $ephemeral
        $removeAllComponents
        not your button
    $endif
$endif

"
VZFp2kZz,/warn-log,Aouchan,ASM (NASM),Monday 26th of February 2024 06:22:26 AM CDT,"Trigger: /warn-log

$nomention

$onlyIf[$isSlash==true;]
$onlyIf[$guildID!=;]

$var[get-user;$message[user]]
$var[tick;✅]
$var[color;4ac1e4]
$var[cross;❌]
$var[excla;❕]

$if[$or[$checkUserPerms[$authorID;moderatemembers]==true;$isAdmin[$authorID]==true]==false]
    $ephemeral
    $var[excla] You do not have required permissions to run this command!
    $stop
$endif

$if[$findUser[$var[get-user];no]==]
    $ephemeral
    $var[cross] That user is not in this server!
    $stop
$endif

$jsonParse[$getUserVar[userWarns.json;$var[get-user]]]

$if[$or[$jsonExists[infractions]==false;$json[infractions]==[\]]==true]
    $description[$var[excla] There are no warnings]
    $color[$var[color]]
$else
    $enableDecimals[true]
    $var[div;$divide[$jsonArrayCount[infractions];4]]
    
    $if[$checkContains[$var[div];.]==true]
        $textSplit[$var[div];.]
        $var[total.pages;$sum[$splitText[1];1]]
    $else
        $var[total.pages;$var[div]]
    $endif
    
    $var[q;0]
    $var[n;1]
    $var[newline.space;$url[decode;%0A+]]
    $var[newline;$url[decode;%0A]]
    
    $var[time.emoji;`⏰`]
    $var[id.emoji;`🆔`]
    $var[reason.emoji;`📜`]
    
    $var[loop;%{DOL}%if[%{DOL}%json[infractions\;%{DOL}%var[q\]\]!=\]%{DOL}%var[n\]. **Moderator:** <@%{DOL}%json[infractions\;%{DOL}%var[q\]\;moderator\;id\]> `(%{DOL}%json[infractions\;%{DOL}%var[q\]\;moderator\;name\])`%{DOL}%var[newline.space\]- %{DOL}%var[reason.emoji\] Reason: %{DOL}%async[%{DOL}%var[q\]\]%{DOL}%jsonParse[{ ""text"": ""%{DOL}%json[infractions\;%{DOL}%var[q\]\;reason\]"" }\]%{DOL}%var[r.text\;%{DOL}%json[text\]\]%{DOL}%endasync%{DOL}%await[%{DOL}%var[q\]\]%{DOL}%var[r.text\]%{DOL}%var[newline.space\]- %{DOL}%var[time.emoji\] Time: <t:%{DOL}%json[infractions\;%{DOL}%var[q\]\;timestamp\]> (<t:%{DOL}%json[infractions\;%{DOL}%var[q\]\;timestamp\]:R>)%{DOL}%var[newline.space\]- %{DOL}%var[id.emoji\] WarnID: %{DOL}%json[infractions\;%{DOL}%var[q\]\;warnID\]%{DOL}%var[newline\]%{DOL}%var[n\;%{DOL}%calculate[%{DOL}%var[n\]+1\]\]%{DOL}%endif%{DOL}%var[q\;%{DOL}%calculate[%{DOL}%var[q\]+1\]\]]
    $var[warnings;$eval[$repeatMessage[4;$var[loop]]]]
    
    $title[*This user has $jsonArrayCount[infractions] Warnings!*]
    $description[$var[warnings]$var[newline]$var[newline]Total Warnings Issued: $json[total-warns]]
    $thumbnail[$userServerAvatar[$var[get-user]]]
    $color[$var[color]]
    $footer[Page 1/$var[total.pages]]
    
    $var[first-arrow;<:Pixelated_FirstArrow:1193452503589716078>]
    $var[prev-arrow;<:Pixelated_PrevArrow:1193452525832126464>]
    $var[next-arrow;<:Pixelated_NextArrow:1193452428230672435>]
    $var[last-arrow;<:Pixelated_LastArrow:1193452401831710720>]
    $var[cross-button;<:VN_RedCross:1068802990657519686>]
    $var[arrow.buttons.color;secondary]
    
    $addButton[false;warnLogs-$authorID-$var[get-user]-firstpage;;$var[arrow.buttons.color];true;$var[first-arrow]]
    $addButton[false;warnLogs-$authorID-$var[get-user]-prevpage;;$var[arrow.buttons.color];true;$var[prev-arrow]]
    $addButton[false;warnLogs-$authorID-$var[get-user]-nextpage;;$var[arrow.buttons.color];$checkCondition[$var[total.pages]==1];$var[next-arrow]]
    $addButton[false;warnLogs-$authorID-$var[get-user]-lastpage;;$var[arrow.buttons.color];$checkCondition[$var[total.pages]==1];$var[last-arrow]]
    $addButton[false;vani-$authorID;;danger;no;$var[cross-button]]
    
    $var[v;0]
    $var[warn.id.style.button;secondary]
    $eval[$repeatMessage[4;%{DOL}%if[%{DOL}%json[infractions\;%{DOL}%var[v\]\]!=\]%{DOL}%addButton[%{DOL}%checkCondition[$var[v]==%{DOL}%var[v\]\]\;user.warn.id-%{DOL}%authorID-%{DOL}%json[infractions\;%{DOL}%var[v\]\;warnID\]\;%{DOL}%sum[%{DOL}%var[v\]\;1\]\;%{DOL}%var[warn.id.style.button\]\;false\;🆔\]%{DOL}%endif%{DOL}%var[v\;%{DOL}%calculate[%{DOL}%var[v\]+1\]\]]]
    
    $addButton[true;deleteWarn-$authorID-All-$var[get-user];Clear all warnings;primary;false]
    $addButton[false;deleteWarn-$authorID-Specific-$var[get-user];Clear a specific warning;primary;false]
$endif
"
cPiP2Y74,/warn,Aouchan,ASM (NASM),Monday 26th of February 2024 06:18:56 AM CDT,"Trigger: /warn

$nomention

$onlyIf[$isSlash==true;]
$onlyIf[$guildID!=;]

$var[target-user;$message[user]]

$var[tick;✅]
$var[cross;❌]
$var[excla;❕]
$var[color;4ac1e4]

$if[$or[$checkUserPerms[$authorID;moderatemembers]==true;$isAdmin[$authorID]==true]==false]
    $ephemeral
    $var[excla] You do not have required permissions to run this command!
    $stop
$endif

$if[$or[$checkUserPerms[$botID;moderatemembers]==true;$isAdmin[$botID]==true]==false]
    $ephemeral
    $var[excla] Vanilla does not have `Timeout Members` permission!
    $stop
$endif

$if[$findUser[$var[target-user];no]==]
    $ephemeral
    $var[cross] That user is not in this server!
    $stop
$endif

$if[$authorID==$var[target-user]]
    $ephemeral
    $var[excla] You can not warn yourself!
    $stop
$endif

$if[$isBot[$var[target-user]]==true]
    $ephemeral
    $var[cross] You can not warn bots!
    $stop
$endif

$if[$rolePosition[$highestRole[$botID]]>$rolePosition[$highestRole[$var[target-user]]]]
    $ephemeral
    $var[cross] My role is lower in heiarchy so I can't warn them!
    $stop
$endif

$if[$rolePosition[$highestRole[$authorID]]>$rolePosition[$highestRole[$var[target-user]]]]
    $ephemeral
    $var[cross] Your role is lower is heiarchy to that user!
    $stop
$endif

$defer

$var[generate-warn-id;$replaceText[$replaceText[$optOff[$randomString[10]$randomString[10]];+;];/;]]

$if[$message[reason]==]
    $var[fetch-reason;no reason given]
$else
    $var[get-reason;$replaceText[$replaceText[$replaceText[$message[reason];*;];`;];_;]]
    $var[fetch-reason;$cropText[$var[get-reason];150;]]
$endif

$jsonSetString[timestamp;$getTimestamp]
$jsonSetString[moderator;name;$username]
$jsonSetString[moderator;id;$authorID]
$jsonSetString[warnID;$var[generate-warn-id]]
$jsonSetString[reason;$var[fetch-reason]]

$var[json;$jsonStringify]

$jsonClear

$jsonParse[$getUserVar[userWarns.json;$var[target-user]]]
$jsonArrayAppend[infractions;$var[json]]

$var[final.json;$replaceText[$replaceText[$replaceText[$jsonPretty[];""{;{];}"";}];$url[decode;%5C]"";""]]

$jsonParse[$var[final.json]]
$jsonSetString[total-warns;$sum[0$json[total-warns];1]]

$try
  $setUserVar[userWarns.json;$jsonStringify;$var[target-user]]
$catch
  $jsonUnset[infractions;0]
  $setUserVar[userWarns.json;$jsonStringify;$var[target-user]]
$endtry

$if[$message[dm]!=]
    $if[$message[dm]==true]
        $if[$isUserDMEnabled[$var[target-user]]==true]
            $try
                $sendEmbedMessage[$dmChannelID[$var[target-user]];;;;You were warned in $serverName[$guildID]$url[decode;%0A]Reason: $var[fetch-reason];$var[color];;;;;;;true;false]
                $var[dm.sent?;🎫 Successfully DMed the user!]
            $catch
                $var[dm.sent?;🎫 Couldn't DM the user!]
            $endtry
        $else
            $var[dm.sent?;🎫 User's DMs are disabled so i couldn't DM them]
        $endif
    $endif
$endif

$description[$var[tick] **$username[$var[target-user]]** has been warned || __$var[fetch-reason]__$url[decode;%0A]$var[dm.sent?]]
$color[$var[color]]
"
36MC494n,data852,TestGuy1,JSON,Monday 26th of February 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'bbcec1023f2160e68b7cbd656b40e8b44e0d8fc77b1309f3fe6e224011d8800567fb5ce89371b4fac72d67eed5b928445e18f52fdc1c1989e5a43f328dc9d274bfd16359b97837fbc8cff70bae7a31b90ed2e768f5ab4768964c093c4e956f08b668e5ee14b25221cb7a50b65f4c9767ffaa82a073f0fcbad726019fe7c810ab',
  otherdata: [
    'c6cce992737f4d5ca71d71d2138a9c66',
    '2f9fc7db4577b445c2d56093d18465d5',
    'a84a345bbe774b58a3a884cedbd5e3f4',
    '30c6408203306be4a91a9bb4fbed53bd',
    '56f6f389f5be5912dc80ae32d688290b',
    '5ba8dab44f2b429f36fd5be00c69e67a',
    'eb6ec83ceecad525d7d17d806d4c84e0',
    'ab13eb4ac24d89236e6d547f7f99e98e'
  ]
}"
GK1VDyR7,njbowj brohb o owr,milk_cool,Python,Monday 26th of February 2024 05:41:40 AM CDT,"# https://habr.com/ru/articles/176671/

import random

size = int(input(""Maze size: ""))
seed = input(""Enter random seed: "")
if seed != """":
	random.seed(seed)

class Cell:
	def __init__(self, group = 0, bottom = False, right = False):
		self.bottom = bottom
		self.right = right
		self.group = group
		self.erased = False

maze = []
row = 0
last = 0 # Last set no.

def inc_last():
	global last
	ret = last
	last += 1
	return ret
def yn():
	return random.choice([True, False])

for __ in range(size):
	if row == 0:
		maze += [[Cell(inc_last()) for _ in range(size)]]
	else:
		maze += [maze[-1]]
		for i in range(size):
			maze[-1][i].right = False
			if maze[-1][i].bottom:
				maze[-1][i].erased = True
	for i in range(size):
		if maze[-1][i].erased:
			maze[-1][i].group = inc_last()
			maze[-1][i].erased = False
	for i in range(size - 1):
		if(maze[-1][i].group == maze[-1][i + 1].group or yn()):
			maze[-1][i].right = True
			maze[-1][i + 1].group = maze[-1][i].group
	for i in range(size):
		start = i
		end = i
		while maze[-1][end].group == maze[-1][start].group:
			end += 1
			if end == size:
				break
		n = random.randint(0, end - start - 1)
		indexes = list(range(start, end))
		for _ in range(n):
			indind = random.randint(0, len(indexes) - 1)
			ind = indexes[indind]
			maze[-1][ind].bottom = True
			indexes = indexes[:indind] + indexes[indind + 1:]

print(""_"" * (2 * size + 1))
for x in range(len(maze)):
	for y in range(len(maze[x])):
		if y == 0:
			print(""|"", end="""")
		print(""_"" if maze[x][y].bottom or x == size - 1 else "" "", end="""")
		print(""|"" if maze[x][y].right or y == size - 1 else "" "", end="""")
	print()	
print(""‾"" * (2 * size + 1))"
aLvLvU0Y,main.cpp,Chewpacker,C++,Monday 26th of February 2024 05:35:44 AM CDT,"#include <ESP8266WiFi.h>
#include <AbstractTask.h>
#include <Scheduler.h>
#include <Task.h>
#include <PubSubClient.h>
#include ""helpers/wifihelper.h""
#include <Arduino.h>
#include <Arduino_JSON.h>
#include <string>
#include <stdexcept>
#include <iostream>
#include <FastLED.h>

#define DATA_PIN D2
#define NUM_LEDS 60

CRGB leds[NUM_LEDS];

const unsigned long LED_UPDATE_INTERVAL = 5000;

const char *mqtt_server = """";
  const int mqtt_port = ;
  const char *mqtt_user = """";
  const char *mqtt_password = """";
  const char *mqtt_requesttopic = ""garmin/requestStats"";
  const char *mqtt_responsetopic = ""garmin/responseStats"";
  String responseMessage;
  JSONVar jsonMessage;

WiFiClient espClient;
PubSubClient client(espClient);

class Steps
{
public:
  int StepGoal;
  int TotalSteps;
  float CalculatePercentage()
  {
    if (StepGoal != 0)
    {
      return static_cast<float>(TotalSteps) / static_cast<float>(StepGoal) * 100.0f;
    }
    else
    {
      Serial.println(""Error: Division by zero."");
      return -1.0f;
    }
  };
  Steps(int stepGoal = 0, int totalSteps = 0)
  {
    StepGoal = stepGoal;
    totalSteps = totalSteps;
  };
};
Steps steps(0, 0);

class StateObject {
  public:
    int AverageStress;
    int BodyBatteryLatest;
    int SleepScore;
    float RestStressPercentage;
    Steps StepsObject;
    bool StatsMode;
    unsigned long LastUpdateTime;
    int LastPercentage;
    CRGB LastColour;
    StateObject()
    {
      AverageStress = 0;
      BodyBatteryLatest = 0;
      SleepScore = 0;
      RestStressPercentage = 0;
      StepsObject = Steps(1, 0);
      StatsMode = false;
      LastUpdateTime = 0;
      LastPercentage = 0;
      LastColour = CRGB::Black;
    };
};
StateObject stateObject;

class FastLedHelper
{
public:
  void initializeLEDs()
  {
    FastLED.addLeds<WS2812B, DATA_PIN, GRB>(leds, NUM_LEDS);
  }

  void updateLEDs(int percentage, CRGB colour, unsigned long &lastUpdateTime)
  {
    int ledsToLight = map(percentage, 0, 100, 0, NUM_LEDS);

    fill_solid(leds, NUM_LEDS, colour.Black);
    FastLED.show();
    delay(100);

    for (int i = NUM_LEDS - 1; i > NUM_LEDS - ledsToLight; i--)
    {
      leds[i] = colour;
      FastLED.show();
      delay(75);
    }
  }

  void ambientDisplay()
  {
    Serial.println(""Starting Ambient Display"");
    fill_solid(leds, NUM_LEDS, CRGB::Black);
    FastLED.show();

    for (int i = NUM_LEDS - 1; i >= 0; i--)
    {
      leds[i] = CRGB::Red;
      FastLED.show();
      delay(75);
    }
  }

  void displayStats(int percentage, CRGB colour)
  {
    if (percentage != stateObject.LastPercentage || colour != stateObject.LastColour)
    {
      updateLEDs(percentage, colour, stateObject.LastUpdateTime);
    }
  }
} fastLedHelper;

class MqttHelper
{
public:
  static void MapStateMessageToStateObject(JSONVar message)
  {
    if (message.hasOwnProperty(""average_stress"") &&
        message.hasOwnProperty(""body_battery_latest"") &&
        message.hasOwnProperty(""sleep_score"") &&
        message.hasOwnProperty(""rest_stress_percentage"") &&
        message.hasOwnProperty(""step_goal"") &&
        message.hasOwnProperty(""total_steps""))
    {

      stateObject.AverageStress = message[""average_stress""];
      stateObject.BodyBatteryLatest = message[""body_battery_latest""];
      stateObject.SleepScore = message[""sleep_score""];
      stateObject.RestStressPercentage = (double)message[""rest_stress_percentage""];
      stateObject.StepsObject.StepGoal = message[""step_goal""];
      stateObject.StepsObject.TotalSteps = message[""total_steps""];
      stateObject.StatsMode = message[""stats_mode""];
    }
    else
    {
      char newMessage[] = ""Failed to map state message to state object, one or more parameters are missing"";
      Serial.println(newMessage);
      throw std::invalid_argument(std::string(newMessage));
    }
  }

static void callback(char* topic, byte* payload, unsigned int length) {
    for (unsigned int i = 0; i < length; i++) {
        responseMessage += (char)payload[i];
    }

    Serial.println(responseMessage);

      responseMessage.replace(""False"", ""false"");
      responseMessage.replace(""True"", ""true"");

    jsonMessage = JSON.parse(responseMessage);

    MqttHelper::MapStateMessageToStateObject(jsonMessage);

    responseMessage = """";
    jsonMessage = null;
}

static void requestStats() {
    client.publish(mqtt_requesttopic, """");
}

  void setupMQTT()
  {
    client.setServer(mqtt_server, mqtt_port);
    client.setCallback(&callback);

    while (!client.connected())
    {
      Serial.print(""Connecting to MQTT..."");
      if (client.connect(""ESP8266Client"", mqtt_user, mqtt_password))
      {
        Serial.println(""connected to MQTT, subscribed to "");
        Serial.println(mqtt_responsetopic);
        client.subscribe(mqtt_responsetopic);
      }
      else
      {
        Serial.print(""failed, rc="");
        Serial.print(client.state());
        Serial.println("" try again in 5 seconds"");
        delay(5000);
      }
    }
  }
} mqttHelper;

class FastLedTask : public Task
{
protected:
  void loop()
  {
    if (!stateObject.StatsMode)
    {
      fastLedHelper.ambientDisplay();
      MqttHelper::requestStats();
      delay(1000);
    }
    else
    {
      fastLedHelper.displayStats(stateObject.AverageStress, CRGB::Red);
      MqttHelper::requestStats();
      delay(10000);
      if (stateObject.StatsMode)
      {
        fastLedHelper.displayStats(stateObject.BodyBatteryLatest, CRGB::Blue);
      MqttHelper::requestStats();
      delay(10000);
      }
      if (stateObject.StatsMode)
      {
        fastLedHelper.displayStats(stateObject.SleepScore, CRGB::Orange);
      MqttHelper::requestStats();
      delay(10000);
      }
      if (stateObject.StatsMode)
      {
        fastLedHelper.displayStats(stateObject.RestStressPercentage, CRGB::Purple);
      MqttHelper::requestStats();
      delay(10000);
      }
      if (stateObject.StatsMode)
      {
        fastLedHelper.displayStats(stateObject.StepsObject.CalculatePercentage(), CRGB::Green);
      MqttHelper::requestStats();
      delay(10000);
      }
    }
  }

private:
  time_t lastCheck;
  bool firstRun;
} fastLedTask;

class MqttTask : public Task
{
protected:
  void loop()
  {
    client.loop();
    delay(500);
  }

private:
  time_t lastCheck;
  bool firstRun;

} mqttTask;

void setup()
{
  Serial.begin(115200);

  setupWiFi();

  fastLedHelper.initializeLEDs();
  mqttHelper.setupMQTT();

  Scheduler.start(&mqttTask);
  Scheduler.start(&fastLedTask);

  Scheduler.begin();
}

void loop()
{
}
"
s0BvtQTH,Untitled,35657,C++,Monday 26th of February 2024 05:28:39 AM CDT,"#include <iostream>

using namespace std;

class rational {

public:

    rational(int numerator, int denominator) {
        numerator_ = numerator;
        denominator_ = denominator;
        reduction();
    }

    int numerator() const {
        return numerator_;
    }

    int denominator() const {
        return denominator_;
    }

    rational& operator+=(const rational& other) {
        numerator_ = numerator_ * other.denominator_ + other.numerator_ * denominator_;
        denominator_ = denominator_ * other.denominator_;
        reduction();
        return *this;
    } // переопределение оператора +=

    rational& operator-=(const rational& other) {
        numerator_ = numerator_ * other.denominator_ - other.numerator_ * denominator_;
        denominator_ = denominator_ * other.denominator_;
        reduction();
        return *this;
    } // переопределение оператора -=

    rational& operator*=(const rational& other) {
        numerator_ *= other.numerator_;
        denominator_ *= other.denominator_;
        reduction();
        return *this;
    } // переопределение оператора *=

    rational& operator/=(const rational& other) {
        numerator_ *= other.denominator_;
        denominator_ *= other.numerator_;
        reduction();
        return *this;
    } // переопределение оператора /=

private:
    int numerator_;
    int denominator_;

    void reduction() { // сокращение дроби

        if (denominator_ < 0) {
            numerator_ *= -1;
            denominator_ *= -1;
        }

        int x = numerator_ < 0 ? -numerator_ : numerator_;
        int y = denominator_;

        while (x != y) {
            if (x > y) {
                x -= y;
            }
            else {
                y -= x;
            }
        }
        numerator_ /= x;
        denominator_ /= x;
    }
};

rational& operator+(const rational& left, const rational& right) {
    rational temp = left;
    return temp += right;
} // переопределение оператора + с помощью ранее переопределенного оператора +=

rational& operator-(const rational& left, const rational& right) {
    rational temp = left;
    return temp -= right;
} // переопределение оператора - с помощью ранее переопределенного оператора -=

rational& operator*(const rational& left, const rational& right) {
    rational temp = left;
    return temp *= right;
} // переопределение оператора * с помощью ранее переопределенного оператора *=

rational& operator/(const rational& left, const rational& right) {
    rational temp = left;
    return temp /= right;
} // переопределение оператора / с помощью ранее переопределенного оператора /=

bool operator==(const rational& left, const rational& right) {
    return left.numerator() == right.numerator() && left.denominator() == right.denominator();
} // перегрузка оператора ==

bool operator!=(const rational& left, const rational& right) {
    return !(left == right);
} // перегрузка оператора != с помощью ранее переопределенного ==

bool operator>(const rational& left, const rational& right) {
    return left.numerator() * right.denominator() > right.numerator() * left.denominator();
}

bool operator<(const rational& left, const rational& right) {
    return left.numerator() * right.denominator() < right.numerator() * left.denominator();
}

bool operator>=(const rational& left, const rational& right) {
    return left.numerator() * right.denominator() >= right.numerator() * left.denominator();
}

bool operator<=(const rational& left, const rational& right) {
    return left.numerator() * right.denominator() <= right.numerator() * left.denominator();
}

ostream& operator<<(ostream& output, const rational& right) {
     return output << right.numerator() << '/' << right.denominator();
}

istream& operator>>(istream& input, rational& right) {
    int numerator;
    int denominator;
    char slash;
    if ((input >> numerator) && (input >> slash) && (slash == '/') && (input >> denominator)) {
        right = rational{ numerator, denominator };
    }
    return input;
}


int main() {

    setlocale(LC_ALL, ""ru"");

    rational r1(1, 2);
    rational r2(3, 4);
    cout << r1 << endl;
    cout << r2 << endl;

    cout << (r1 == r2) << endl;
    cout << (r1 != r2) << endl;
    cout << (r1 > r2) << endl;
    cout << (r1 < r2) << endl;
    cout << (r1 >= r2) << endl;
    cout << (r1 <= r2) << endl;

    r1 += r2;
    cout << r1 << endl;

    r1 -= r2;
    cout << r1 << endl;

    r1 *= r2;
    cout << r1 << endl;

    r1 /= r2;
    cout << r1 << endl;

    int a = 3;
    int b = 2;

    rational r3(1, 1);
    r3 = r1 + r2;
    cout << r3 << endl;

    r3 = r1 - r2;
    cout << r3 << endl;

    r3 = r1 * r2;
    cout << r3 << endl;

    r3 = r1 / r2;
    cout << r3 << endl;

    cin >> r3;
    cout << r3 << endl;
}

"
PGXVja3Z,udprint,Snusmumriken,Lua,Monday 26th of February 2024 05:14:27 AM CDT,"local socket = require'socket'

local function gettime()
	local time = socket.gettime()
	local msec = time - math.floor(time)
	local date = os.date(""%d.%m.%y-%X"", time)
	return (""%-21s""):format(date .. ""."" .. math.floor(msec * 300))
end

local function server(host, port)
	host = host or ""*""
	port = port or 4096
	local udp = (socket.udp4 or socket.udp)()
	assert(udp:setsockname(host, port))
	--udp:listen()
	
	return function()
		local msg, host, port = udp:receivefrom()
		print(gettime() .. "" "" .. host .. "":"" .. port .. "" > "" .. msg)
	end, udp:getsockname()
end

local function client(host, port)
	host = host or ""127.0.0.1""
	port = port or 4096
	local udp = (socket.udp4 or socket.udp)()
	
	return function(...)
		local msg = """"
		for i = 1, select(""#"", ...) do
			msg = msg .. ""\t"" .. tostring(select(i, ...))
		end
		udp:sendto(msg, host, port)
	end
end

if ... then
	return {
		server = server,
		client = client
	}
end

local server, host, port = server()
host = socket.dns.toip("""")
print(""Listen "", host, port)

while 1 do
	server()
end

-- print = require'udprint'.client(""host_ip"")"
CjDbqskp,Bst.c,Aravind_reddy10,C,Monday 26th of February 2024 05:05:10 AM CDT,"#include <stdio.h>
#include <stdlib.h>
struct TreeNode
{
	int data;
	struct TreeNode *left;
	struct TreeNode *right;
};
typedef struct TreeNode node;
node *insert(node *root,int val)
{
	if(root==NULL)
	{
		node *newNode=(node*)malloc(sizeof(node));
		newNode->data=val;
		newNode->left=NULL;
		newNode->right=NULL;
		return newNode;
	}
	if(val<root->data)
	{
		root->left=insert(root->left,val);
	}
	else if(val>root->data)
	{
		root->right=insert(root->right,val);
	}
	return root;
}
void display(node *root)
{
	if(root!=NULL)
	{
		display(root->left);
		printf(""%d->"",root->data);
		display(root->right);
	}
}
int count_leafs(node *root)
{
	int ans;
	if(root==NULL)
	{
		return 0;
	}
	else if(root->left==NULL&&root->right==NULL)
	{
		return 1;
	}
	else
	{
		ans=count_leafs(root->left)+count_leafs(root->right);
	}
	return ans;
}
int sum_leafs(node *root)
{
	int sum;
	if(root==NULL)
	{
		return 0;
	}
	else if(root->left==NULL&&root->right==NULL)
	{
		return root->data;
	}
	else
	{
		sum=sum_leafs(root->left)+sum_leafs(root->right);
	}
	return sum;
}
int search(node *root,int search1)
{
	if(root==NULL)
	{
		return 0;
	}
	else
	{
		while(root->data!=search1)
		{
			if(root!=NULL)
			{
				printf(""%d->"",root->data);
				if(search1>root->data)
				{
					root=root->right;
				}
				else
				{
					root=root->left;
				}
			}
			if(root==NULL)
			{
				return 0;
			}
		}
	}
	return 1;
}
int main()
{
	int n,i,val;
	printf(""Enter size of tree:"");
	scanf(""%d"",&n);
	node *root=NULL;
	printf(""\nEnter nodes:"");
	for(i=0;i<n;i++)
	{
		scanf(""%d"",&val);
		root=insert(root,val);
	}
	printf(""INORDER is:"");
	display(root);
	int count=count_leafs(root);
	printf(""\nThe total leafs are : %d"",count);
	int sum=sum_leafs(root);
	printf(""\nThe sum of leaf odes is : %d"",sum);
	int search_val;
	printf(""\nEnter search value:"");
	scanf(""%d"",&search_val);
	int ans=search(root,search_val);
	if(ans==1)
	{
		printf(""\nValue is found"");
	}
	else
	{
		printf(""\nValue is not found"");
	}
	return 0;
}
"
71GugJhN,test case,LEGEND2004,C++,Monday 26th of February 2024 04:51:04 AM CDT,"#pragma GCC optimize(""O3"")
#include <bits/stdc++.h>
using namespace std;

#define int long long
#define fastio ios_base::sync_with_stdio(0); cin.tie(0)

signed main()
{
    fastio;
    
    // eger meselelerde test case ile giris daxil olunsa
    // her test case ucun meseleni hell edib;
    // while dovrunun icerisinde yaziriq
    // iki ededin cemi, amma test caseler olarsa
    int t;
    cin >> t; // test case sayi
    while(t--){ // t defe
        int a , b;
        cin >> a >> b; // her test casede 2 eded daxil edirik
        cout << a + b << '\n'; // ve onlarin cemini veririk
        // alt setire dusmek vacibdi, cunki output fileda ededler alt alta yazilir
        // '\n' yazdiqda cixisi input bitdikden sonra hamsini birden verecek
        // endl yazsaq her cixisi test case daxil olunduqdan sonra verecek
    }
}"
yJU0b9K1,Regular function,Sherms,JavaScript,Monday 26th of February 2024 04:47:09 AM CDT,"// let person = new Person ('bob');

class Person {
    // let person = new Person ('bob');
    constructor(name) {
        this.name = name;
    }

    printNameFunction() {
        // let person = new Person ('bob');
        setTimeout(function() {
            // let person = new Person ('bob');
            console.log('Function:' + this.name);
        }, 100)

    }
}

let person = new Person ('bob');
person.printNameFunction();"
pb8GAEbP,Untitled,adellam,JavaScript,Monday 26th of February 2024 04:28:45 AM CDT,"                //===========================================================================================
                myApp.constants = {
                        PUBLIC_TOKEN: ""some application token"",
                        GEO_DATA: ""data/geodata.json"",
                        IMG_DATA: ""data/imgdata.json"",
                        AOI: ""MPA"",
                        OVERLAY_GROUP_NAMES: [{name: ""External layers""},{name: ""Target datasets""},{name: ""Marine Protected Areas""},{name: ""Base overlays""}],
                MAP_ZOOM: 3,
                        MAP_PROJECTION: 'EPSG:4326',
                        MAP_SELECTOR_DEFAULT: 'geoselector-default',
                        MAP_SELECTOR_CUSTOM: 'geoselector-custom',
            OGC_WMS_NS: ""W_mpa"",
            OGC_WMS_SUFFIX: ""geo_fea_"",
                        OGC_WMS_BASEURL: ""https://paim.d4science.org/geoserver/wms"",
                        OGC_WFS_BASEURL: ""https://paim.d4science.org/geoserver/wfs"",
                        OGC_WFS_FORMAT: new ol.format.GeoJSON(),
                        OGC_WFS_BBOX: null,
                        OGC_WFS_CACHE: ""paim_cache_db"",
            DATAMINER_BASEURL: ""https://dataminer.garr.d4science.org"",
                        DATAMINER_IDENTIFIER: ""org.gcube.dataanalysis.wps.statisticalmanager.synchserver.mappedclasses.transducerers.MPA_INTERSECT_V4_1"",
                        DATAMINER_OUTPUTDATA_HTTPS: true,
            OGC_CSW_BASEURL: ""https://geonetwork.d4science.org/geonetwork/srv/eng/csw"",
                        D4S_SOCIALNETWORKING_BASEURL: ""https://socialnetworking1.d4science.org/social-networking-library-ws/rest/2"",
                        D4S_HOMELIBRARY_BASEURL: ""https://workspace-repository.d4science.org/home-library-webapp/rest"",
                        WORKSPACE_USER_FOLDER: ""PAIM-reports"",
                        WORKSPACE_TEMP_FOLDER: ""temp"",
                        SURFACE_UNIT: {id: 'sqkm', label: 'km²'},
                        SURFACE_ROUND_DECIMALS: 2,
            DEBUG_REPORTING: false
                }

                if(!myApp.PAIM){
                        myApp.constants.DATAMINER_BASEURL = ""https://dataminer-prototypes.d4science.org"";
                }
"
UjPPspVG,programming is not a language,katmai,Python,Monday 26th of February 2024 04:10:43 AM CDT,"import random
from classes.game import Person, bcolors
from classes.magic import Spell

# Another thing that came to my mind, as i am doing this, is that whatever you're doing here, is you creating your
# own adversaries. The whole idea of ""playing vs. the computer"" is simply non-existent. 
# The computer doesn't ""understand"" the game. It doesn't know what ""fire"" or a ""spell"" is.
# Those are just characters placed in memory blocks. The only one it has any meaning for, it's you.
# You define the obstacles and their actions. It's a maze where you're doing whatever in order to get yourself lost.

# Magic Spells
# Damaging
# def __init__(self, name, cost, dmg, type):
fire = Spell(""Fire"", 10, 100, ""damaging"")
thunder = Spell(""Thunder"", 12, 124, ""damaging"")
lightning = Spell(""Lightning"", 12, 100, ""damaging"")
meteor = Spell(""Meteor"", 20, 200, ""damaging"")
quake = Spell(""Quake"", 14, 120, ""damaging"")
# Healing
cure = Spell(""Cure"", 12, 120, ""healing"")
cura = Spell(""Cura"", 18, 200, ""healing"")

# wanted to name defense as 'def' but apparently Python recognizes it as 'def' from define function even within the brackets and it messes things up.
# so i had to use 'df' instead. stupid :))
# def __init__(self, hp, mp, atk, df, magic):
player = Person(460, 65, 60, 34, [fire, thunder, lightning, meteor, cure, cura])
enemy = Person(1200, 65, 45, 25, [fire, thunder, lightning, meteor, cure, cura])

running = True
i = 0

# No reason to label the beginning of the game with RED or FAIL. It's just the beginning.
# It's neither good nor bad.
# Also the beginning doesn't start with you being attacked, but with you choosing an action. 
# The response only happens afterwards. 
# As far as enemy goes, you don't have a real one. You're making one up, so you have someone to fight with.
print(bcolors.GREEN + bcolors.BOLD + ""Someone has started the game"" + bcolors.ENDC)

while running:
    print(""=============================="")
    player.choose_action()
    choice = input(bcolors.CYAN + bcolors.BOLD + ""Choose your own action: "" + bcolors.ENDC)
    index = int(choice)
    # i think it's important to always remember which action generated the result, to see ""why"" that is happening.
    print(bcolors.CYAN + bcolors.BOLD + ""You chose to use: "" + player.get_action_name(index) + bcolors.ENDC)

    if index == 0:
        dmg = player.generate_damage()
        enemy.take_damage(dmg)
        print(""You attacked for"", dmg, ""Points of damage."")
    elif index == 1:
        print(""=============================="")
        player.choose_spell()
        choice = input(bcolors.CYAN + bcolors.BOLD + ""Choose spell: "" + bcolors.ENDC)
        index = int(choice)
        # i think it's important to always remember which action generated the result, to see ""why"" that is happening.
        print(bcolors.CYAN + bcolors.BOLD + ""You chose to use a: "" + player.spells[index].name + bcolors.ENDC)

        dmg = player.spells[index].generate_damage()
        spell = player.spells[index]
        current_mp = player.get_mp()

        if spell.cost > current_mp:
            print(bcolors.RED + ""\nNot enough MP\n"" + bcolors.ENDC)
            # continue forces to use the next iteration of the loop aka start over at 'if index == 0:...'
            # but i think the idea is that the code below doesn't run unless i've made a choice.
            # continue, as a word, means - moving on, going forward, not stopping. And yet, yere, in Python, 
            # it carries a different meaning. It means ""Stop the execution of the current loop, whatever instructions""
            # and go to the top of the loop and run the next iteration. 
            # it just means a completely different thing.
            # does this mean that with enough iterations, 
            # a word meaning would end up being derived from the surrounding context?
            # but then, how does each of the words have any meaning at all?
            continue

        player.reduce_mp(spell.cost)

        if spell.type == ""healing"":
            player.heal_damage(dmg)
            print(bcolors.BLUE + ""\n"" + spell.name + "" heals for "", str(dmg), ""HP."" + bcolors.ENDC)
        elif spell.type == ""damaging"":
            enemy.take_damage(dmg)
            print(bcolors.CYAN + ""\n"" + spell.name + "" deals "", str(dmg), ""points of damage"" + bcolors.ENDC)
    elif index == 7:
        exit()

    # enemy choice is set to always attack but what if we also gave a choice to the enemy,
    # just as we do have a choice as well ?
    # enemy_choice = random.randrange(0,6)
    # enemy.choose_action(enemy_choice)
    # print(enemy_choice)
    # this time we go with the flow. enemy always attacks regardless
    # but again, to be cheeky, if there's no enemy, there's no choice, because there's no understanding.
    # there is no enemy choice
    enemy_choice = 1

    dmg = enemy.generate_damage()
    player.take_damage(dmg)
    print(""Enemy attacked for"", dmg, ""Points of damage."")

    print(""-------------------------------------"")
    print(""Enemy HP:"", bcolors.CYAN + str(enemy.get_hp()) + ""/"" + str(enemy.get_max_hp()) + bcolors.ENDC)
    print(""Your HP:"", bcolors.CYAN + str(player.get_hp()) + ""/"" + str(player.get_max_hp()) + bcolors.ENDC)
    print(""Your MP:"", bcolors.BLUE + str(player.get_mp()) + ""/"" + str(player.get_max_mp()) + bcolors.ENDC)

    # The game being over doesn't really mean anything bad or good, so as to color it with 
    if enemy.get_hp() == 0:
        print(bcolors.RED + ""The game is over"" + bcolors.ENDC)
        running = False
    elif player.get_hp() == 0:
        print(bcolors.RED + ""The game is over"" + bcolors.ENDC)
        running = False"
60ud34yz,Untitled,35657,C++,Monday 26th of February 2024 03:27:42 AM CDT,"#include <iostream>

using namespace std;

class rational {

public:

    rational(int numerator, int denominator) {
        numerator_ = numerator;
        denominator_ = denominator;
        reduction();
    }

    void print() {
        cout << numerator_ << '/' << denominator_ << endl;
    }

    void addition(const rational& other) {
        numerator_ = numerator_ * other.denominator_ + other.numerator_ * denominator_;
        denominator_ = denominator_ * other.denominator_;
        reduction();
    }

    void subtraction(const rational& other) {
        numerator_ = numerator_ * other.denominator_ - other.numerator_ * denominator_;
        denominator_ = denominator_ * other.denominator_;
        reduction();
    }

    void multiplication(const rational& other) {
        numerator_ *= other.numerator_;
        denominator_ *= other.denominator_;
        reduction();
    }

    void division(const rational& other) {
        numerator_ *= other.denominator_;
        denominator_ *= other.numerator_;
        reduction();
    }

private:
    int numerator_;
    int denominator_;

    void reduction() { // сокращение дроби

        if (denominator_ < 0) {
            numerator_ *= -1;
            denominator_ *= -1;
        }

        int x = numerator_ < 0 ? -numerator_ : numerator_;
        int y = denominator_;

        while (x != y) {
            if (x > y) {
                x -= y;
            }
            else {
                y -= x;
            }
        }
        numerator_ /= x;
        denominator_ /= x;
    }
};


int main() {
    rational r1(1, 2);
    rational r2(3, 4);
    r1.print();
    r2.print();

    r1.addition(r2);
    r1.print();

    r1.subtraction(r2);
    r1.print();

    r1.multiplication(r2);
    r1.print();

    r1.division(r2);
    r1.print();
}

"
cXRYTBMd,"Сигнальный ""Маяк""",Dreamlight_MCSkill,Lua,Monday 26th of February 2024 03:08:16 AM CDT,"{
  label = ""Маяк"",
  lightLevel = 15,
  shapes = {
    { 3,0,6,5,2,7,texture = ""sky_drive:iron/iron_0"" },
    { 3,0,9,5,2,10,texture = ""sky_drive:iron/iron_0"" },
    { 4,0,5,5,2,6,texture = ""sky_drive:iron/iron_5"" },
    { 4,0,7,12,2,9,texture = ""sky_drive:iron/iron_0"" },
    { 4,0,10,5,2,11,texture = ""sky_drive:iron/iron_5"" },
    { 9,0,6,11,2,10,texture = ""sky_drive:iron/iron_0"" },
    { 3,1,7,11,2,10,texture = ""sky_drive:iron/iron_0"" },
    { 5,1,6,11,2,10,texture = ""sky_drive:iron/iron_0"" },
    { 4,2,6,5,16,7,texture = ""sky_drive:iron/iron_5"" },
    { 4,2,7,6,16,9,texture = ""sky_drive:ethereal_block/1/basalt:0"" },
    { 4,2,9,5,16,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,2,7,10,16,9,texture = ""sky_drive:ethereal_block/1/basalt:0"" },
    { 7,3,6,8,9,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,3,6,11,9,7,texture = ""sky_drive:iron/iron_5"" },
    { 8,3,9,11,9,10,texture = ""sky_drive:iron/iron_5"" },
    { 10,3,7,11,9,10,texture = ""sky_drive:iron/iron_5"" },
    { 7,11,6,8,16,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,11,6,11,16,7,texture = ""sky_drive:iron/iron_5"" },
    { 8,11,9,11,16,10,texture = ""sky_drive:iron/iron_5"" },
    { 10,11,7,11,16,10,texture = ""sky_drive:iron/iron_5"" },
  }
},

{
  label = ""Маяк"",
  lightLevel = 15,
  shapes = {
    { 4,0,6,5,16,7,texture = ""sky_drive:iron/iron_5"" },
    { 4,0,7,6,16,9,texture = ""sky_drive:ethereal_block/1/basalt:0"" },
    { 4,0,9,5,16,10,texture = ""sky_drive:iron/iron_5"" },
    { 7,0,6,8,1,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,0,6,11,1,7,texture = ""sky_drive:iron/iron_5"" },
    { 8,0,7,10,16,9,texture = ""sky_drive:ethereal_block/1/basalt:0"" },
    { 8,0,9,11,1,10,texture = ""sky_drive:iron/iron_5"" },
    { 10,0,7,11,1,10,texture = ""sky_drive:iron/iron_5"" },
    { 7,3,6,8,9,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,3,6,11,9,7,texture = ""sky_drive:iron/iron_5"" },
    { 8,3,9,11,9,10,texture = ""sky_drive:iron/iron_5"" },
    { 10,3,7,11,9,10,texture = ""sky_drive:iron/iron_5"" },
    { 7,11,6,8,16,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,11,6,11,16,7,texture = ""sky_drive:iron/iron_5"" },
    { 8,11,9,11,16,10,texture = ""sky_drive:iron/iron_5"" },
    { 10,11,7,11,16,10,texture = ""sky_drive:iron/iron_5"" },
  }
},

{
  label = ""Маяк"",
  lightLevel = 15,
  shapes = {
    { 4,0,6,5,13,7,texture = ""sky_drive:iron/iron_5"" },
    { 4,0,7,6,12,9,texture = ""sky_drive:ethereal_block/1/basalt:0"" },
    { 4,0,9,5,13,10,texture = ""sky_drive:iron/iron_5"" },
    { 7,0,6,8,1,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,0,6,11,1,7,texture = ""sky_drive:iron/iron_5"" },
    { 8,0,7,10,12,9,texture = ""sky_drive:ethereal_block/1/basalt:0"" },
    { 8,0,9,11,1,10,texture = ""sky_drive:iron/iron_5"" },
    { 10,0,7,11,1,10,texture = ""sky_drive:iron/iron_5"" },
    { 7,3,6,8,9,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,3,6,11,9,7,texture = ""sky_drive:iron/iron_5"" },
    { 8,3,9,11,9,10,texture = ""sky_drive:iron/iron_5"" },
    { 10,3,7,11,9,10,texture = ""sky_drive:iron/iron_5"" },
    { 7,11,6,8,12,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,11,6,11,12,7,texture = ""sky_drive:iron/iron_5"" },
    { 8,11,9,10,14,10,texture = ""sky_drive:iron/iron_5"" },
    { 10,11,7,11,12,10,texture = ""sky_drive:iron/iron_5"" },
    { 3,12,7,13,14,9,texture = ""sky_drive:iron/iron_0"" },
    { 5,12,6,6,13,10,texture = ""sky_drive:iron/iron_0"" },
    { 6,12,6,10,13,7,texture = ""sky_drive:iron/iron_5"" },
    { 6,12,9,10,14,10,texture = ""sky_drive:iron/iron_5"" },
    { 8,12,5,9,14,7,texture = ""sky_drive:iron/iron_5"" },
    { 8,12,10,9,15,11,texture = ""sky_drive:iron/iron_5"" },
    { 10,12,6,11,14,10,texture = ""sky_drive:iron/iron_0"" },
    { 3,13,5,5,14,6,texture = ""sky_drive:iron/iron_5"" },
    { 3,13,6,5,14,10,texture = ""sky_drive:iron/iron_0"" },
    { 3,13,10,5,14,11,texture = ""sky_drive:iron/iron_5"" },
    { 5,13,6,9,14,7,texture = ""sky_drive:iron/iron_5"" },
    { 5,13,9,10,14,10,texture = ""sky_drive:iron/iron_5"" },
    { 9,13,5,11,14,6,texture = ""sky_drive:iron/iron_5"" },
    { 9,13,6,13,14,9,texture = ""sky_drive:iron/iron_0"" },
    { 9,13,10,11,14,11,texture = ""sky_drive:iron/iron_5"" },
    { 11,13,9,13,14,10,texture = ""sky_drive:iron/iron_0"" },
    { 13,13,7,14,14,9,texture = ""sky_drive:iron/iron_0"" },
    { 3,14,6,4,15,10,texture = ""sky_drive:iron/iron_5"" },
    { 4,14,5,9,15,6,texture = ""sky_drive:iron/iron_5"" },
    { 4,14,6,6,16,10,texture = ""sky_drive:iron/iron_0"" },
    { 4,14,10,9,15,11,texture = ""sky_drive:iron/iron_5"" },
    { 6,14,6,8,15,7,texture = ""sky_drive:iron/iron_5"" },
    { 6,14,7,15,16,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 6,14,9,8,15,11,texture = ""sky_drive:iron/iron_5"" },
    { 8,14,6,12,15,7,texture = ""sky_drive:iron/iron_0"" },
    { 8,14,9,12,15,10,texture = ""sky_drive:iron/iron_0"" },
    { 3,15,7,4,16,9,texture = ""sky_drive:iron/iron_5"" },
    { 6,15,6,7,16,7,texture = ""sky_drive:iron/iron_5"" },
    { 6,15,9,7,16,10,texture = ""sky_drive:iron/iron_5"" },
    { 7,15,6,10,16,7,texture = ""sky_drive:iron/iron_0"" },
    { 7,15,9,10,16,10,texture = ""sky_drive:iron/iron_0"" },
  }
},

{
  label = ""Маяк"",
  lightLevel = 15,
  shapes = {
    { 4,0,6,6,1,10,texture = ""sky_drive:iron/iron_0"" },
    { 6,0,6,8,1,7,texture = ""sky_drive:iron/iron_0"" },
    { 6,0,7,15,7,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 6,0,9,8,1,10,texture = ""sky_drive:iron/iron_0"" },
    { 12,0,6,14,2,7,texture = ""sky_drive:iron/iron_0"" },
    { 12,0,9,14,2,10,texture = ""sky_drive:iron/iron_0"" },
    { 4,1,7,6,2,9,texture = ""sky_drive:iron/iron_0"" },
    { 10,1,6,14,2,7,texture = ""sky_drive:iron/iron_0"" },
    { 10,1,9,14,2,10,texture = ""sky_drive:iron/iron_0"" },
    { 5,2,7,6,3,9,texture = ""sky_drive:iron/iron_0"" },
    { 8,2,6,12,3,7,texture = ""sky_drive:iron/iron_0"" },
    { 8,2,9,12,3,10,texture = ""sky_drive:iron/iron_0"" },
    { 5,3,6,8,5,7,texture = ""sky_drive:iron/iron_0"" },
    { 5,3,7,6,5,9,texture = ""customnpcs:npcCrystal"", tint = 0xff00cc },
    { 5,3,9,8,5,10,texture = ""sky_drive:iron/iron_0"" },
    { 8,3,6,10,4,7,texture = ""sky_drive:iron/iron_0"" },
    { 8,3,9,10,4,10,texture = ""sky_drive:iron/iron_0"" },
    { 12,4,6,14,6,7,texture = ""sky_drive:iron/iron_0"" },
    { 12,4,9,14,6,10,texture = ""sky_drive:iron/iron_0"" },
    { 5,5,7,6,7,9,texture = ""sky_drive:iron/iron_0"" },
    { 10,5,6,14,6,7,texture = ""sky_drive:iron/iron_0"" },
    { 10,5,9,14,6,10,texture = ""sky_drive:iron/iron_0"" },
    { 8,6,6,12,7,7,texture = ""sky_drive:iron/iron_0"" },
    { 8,6,9,12,7,10,texture = ""sky_drive:iron/iron_0"" },
    { 5,7,6,8,9,7,texture = ""sky_drive:iron/iron_0"" },
    { 5,7,7,6,9,9,texture = ""customnpcs:npcCrystal"", tint = 0x00ff66 },
    { 5,7,9,8,9,10,texture = ""sky_drive:iron/iron_0"" },
    { 6,7,7,14,8,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 8,7,6,10,8,7,texture = ""sky_drive:iron/iron_0"" },
    { 8,7,9,10,8,10,texture = ""sky_drive:iron/iron_0"" },
    { 6,8,7,13,9,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 5,9,7,6,11,9,texture = ""sky_drive:iron/iron_0"" },
    { 6,9,7,12,10,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 5,10,6,6,11,10,texture = ""sky_drive:iron/iron_0"" },
    { 6,10,6,7,11,7,texture = ""sky_drive:iron/iron_0"" },
    { 6,10,7,11,11,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 6,10,9,7,11,10,texture = ""sky_drive:iron/iron_0"" },
    { 5,11,6,6,12,7,texture = ""sky_drive:iron/iron_0"" },
    { 5,11,7,10,12,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 5,11,9,6,12,10,texture = ""sky_drive:iron/iron_0"" },
    { 5,12,7,9,13,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 4,13,7,6,16,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 6,13,7,8,14,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
    { 6,14,7,7,15,9,texture = ""customnpcs:placeholder_1"", tint = 0x77dde7 },
  }
}"
1SACqrxe,Untitled,poxipox,Lua,Monday 26th of February 2024 02:42:04 AM CDT,"local function playerSkillSpellFix(cid)
	--local checkItem = getPlayerSlotItem(cid, CONST_SLOT_BONUS_BACKPACK).itemid
	if getPlayerSlotItem(cid, CONST_SLOT_BONUS_BACKPACK).itemid == 0 then
		local addSpecialBP = doPlayerAddItem(cid,9531, 1, false, CONST_SLOT_BONUS_BACKPACK)
		-- [] od konca
		
		
		doAddContainerItem(addSpecialBP,13557,1) -- [8] -1
		
		doAddContainerItem(addSpecialBP,13550,1) -- [1]
	

	end
end"
