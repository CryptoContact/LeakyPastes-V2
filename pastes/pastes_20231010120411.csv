id,title,username,language,date,content
tisTgvmY,Untitled,Maxim_Borisov,Python,Tuesday 10th of October 2023 07:00:49 AM CDT,"23/10/10 14:54:59 ERROR Executor: Exception in task 0.0 in stage 0.0 (TID 0)/ 1]
org.apache.spark.api.python.PythonException: Traceback (most recent call last):
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/worker.py"", line 1247, in main
    process()
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/worker.py"", line 1237, in process
    out_iter = func(split_index, iterator)
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 5434, in pipeline_func
    return func(split, prev_func(split, iterator))
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 5434, in pipeline_func
    return func(split, prev_func(split, iterator))
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 840, in func
    return f(iterator)
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 3983, in combineLocally
    merger.mergeValues(iterator)
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/shuffle.py"", line 256, in mergeValues
    for k, v in iterator:
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/util.py"", line 83, in wrapper
    return f(*args, **kwargs)
  File ""/tmp/ipykernel_8875/6232910.py"", line 1, in <lambda>
IndexError: list index out of range

	at org.apache.spark.api.python.BasePythonRunner$ReaderIterator.handlePythonException(PythonRunner.scala:572)
	at org.apache.spark.api.python.PythonRunner$$anon$3.read(PythonRunner.scala:784)
	at org.apache.spark.api.python.PythonRunner$$anon$3.read(PythonRunner.scala:766)
	at org.apache.spark.api.python.BasePythonRunner$ReaderIterator.hasNext(PythonRunner.scala:525)
	at org.apache.spark.InterruptibleIterator.hasNext(InterruptibleIterator.scala:37)
	at scala.collection.Iterator$GroupedIterator.fill(Iterator.scala:1211)
	at scala.collection.Iterator$GroupedIterator.hasNext(Iterator.scala:1217)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:460)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:140)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:104)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:54)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
23/10/10 14:54:59 WARN TaskSetManager: Lost task 0.0 in stage 0.0 (TID 0) (10.0.2.15 executor driver): org.apache.spark.api.python.PythonException: Traceback (most recent call last):
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/worker.py"", line 1247, in main
    process()
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/worker.py"", line 1237, in process
    out_iter = func(split_index, iterator)
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 5434, in pipeline_func
    return func(split, prev_func(split, iterator))
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 5434, in pipeline_func
    return func(split, prev_func(split, iterator))
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 840, in func
    return f(iterator)
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 3983, in combineLocally
    merger.mergeValues(iterator)
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/shuffle.py"", line 256, in mergeValues
    for k, v in iterator:
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/util.py"", line 83, in wrapper
    return f(*args, **kwargs)
  File ""/tmp/ipykernel_8875/6232910.py"", line 1, in <lambda>
IndexError: list index out of range

	at org.apache.spark.api.python.BasePythonRunner$ReaderIterator.handlePythonException(PythonRunner.scala:572)
	at org.apache.spark.api.python.PythonRunner$$anon$3.read(PythonRunner.scala:784)
	at org.apache.spark.api.python.PythonRunner$$anon$3.read(PythonRunner.scala:766)
	at org.apache.spark.api.python.BasePythonRunner$ReaderIterator.hasNext(PythonRunner.scala:525)
	at org.apache.spark.InterruptibleIterator.hasNext(InterruptibleIterator.scala:37)
	at scala.collection.Iterator$GroupedIterator.fill(Iterator.scala:1211)
	at scala.collection.Iterator$GroupedIterator.hasNext(Iterator.scala:1217)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:460)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:140)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:104)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:54)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

23/10/10 14:54:59 ERROR TaskSetManager: Task 0 in stage 0.0 failed 1 times; aborting job
23/10/10 14:54:59 ERROR SparkHadoopWriter: Aborting job job_202310101454566360439998123298166_0008.
org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 1 times, most recent failure: Lost task 0.0 in stage 0.0 (TID 0) (10.0.2.15 executor driver): org.apache.spark.api.python.PythonException: Traceback (most recent call last):
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/worker.py"", line 1247, in main
    process()
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/worker.py"", line 1237, in process
    out_iter = func(split_index, iterator)
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 5434, in pipeline_func
    return func(split, prev_func(split, iterator))
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 5434, in pipeline_func
    return func(split, prev_func(split, iterator))
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 840, in func
    return f(iterator)
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 3983, in combineLocally
    merger.mergeValues(iterator)
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/shuffle.py"", line 256, in mergeValues
    for k, v in iterator:
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/util.py"", line 83, in wrapper
    return f(*args, **kwargs)
  File ""/tmp/ipykernel_8875/6232910.py"", line 1, in <lambda>
IndexError: list index out of range

	at org.apache.spark.api.python.BasePythonRunner$ReaderIterator.handlePythonException(PythonRunner.scala:572)
	at org.apache.spark.api.python.PythonRunner$$anon$3.read(PythonRunner.scala:784)
	at org.apache.spark.api.python.PythonRunner$$anon$3.read(PythonRunner.scala:766)
	at org.apache.spark.api.python.BasePythonRunner$ReaderIterator.hasNext(PythonRunner.scala:525)
	at org.apache.spark.InterruptibleIterator.hasNext(InterruptibleIterator.scala:37)
	at scala.collection.Iterator$GroupedIterator.fill(Iterator.scala:1211)
	at scala.collection.Iterator$GroupedIterator.hasNext(Iterator.scala:1217)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:460)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:140)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:104)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:54)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2451)
	at org.apache.spark.internal.io.SparkHadoopWriter$.write(SparkHadoopWriter.scala:83)
	at org.apache.spark.rdd.PairRDDFunctions.$anonfun$saveAsHadoopDataset$1(PairRDDFunctions.scala:1091)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.PairRDDFunctions.saveAsHadoopDataset(PairRDDFunctions.scala:1089)
	at org.apache.spark.rdd.PairRDDFunctions.$anonfun$saveAsHadoopFile$4(PairRDDFunctions.scala:1062)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.PairRDDFunctions.saveAsHadoopFile(PairRDDFunctions.scala:1027)
	at org.apache.spark.rdd.PairRDDFunctions.$anonfun$saveAsHadoopFile$3(PairRDDFunctions.scala:1009)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.PairRDDFunctions.saveAsHadoopFile(PairRDDFunctions.scala:1008)
	at org.apache.spark.rdd.PairRDDFunctions.$anonfun$saveAsHadoopFile$2(PairRDDFunctions.scala:965)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.PairRDDFunctions.saveAsHadoopFile(PairRDDFunctions.scala:963)
	at org.apache.spark.rdd.RDD.$anonfun$saveAsTextFile$2(RDD.scala:1620)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.saveAsTextFile(RDD.scala:1620)
	at org.apache.spark.rdd.RDD.$anonfun$saveAsTextFile$1(RDD.scala:1606)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.saveAsTextFile(RDD.scala:1606)
	at org.apache.spark.api.java.JavaRDDLike.saveAsTextFile(JavaRDDLike.scala:564)
	at org.apache.spark.api.java.JavaRDDLike.saveAsTextFile$(JavaRDDLike.scala:563)
	at org.apache.spark.api.java.AbstractJavaRDDLike.saveAsTextFile(JavaRDDLike.scala:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: org.apache.spark.api.python.PythonException: Traceback (most recent call last):
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/worker.py"", line 1247, in main
    process()
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/worker.py"", line 1237, in process
    out_iter = func(split_index, iterator)
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 5434, in pipeline_func
    return func(split, prev_func(split, iterator))
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 5434, in pipeline_func
    return func(split, prev_func(split, iterator))
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 840, in func
    return f(iterator)
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 3983, in combineLocally
    merger.mergeValues(iterator)
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/shuffle.py"", line 256, in mergeValues
    for k, v in iterator:
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/util.py"", line 83, in wrapper
    return f(*args, **kwargs)
  File ""/tmp/ipykernel_8875/6232910.py"", line 1, in <lambda>
IndexError: list index out of range

	at org.apache.spark.api.python.BasePythonRunner$ReaderIterator.handlePythonException(PythonRunner.scala:572)
	at org.apache.spark.api.python.PythonRunner$$anon$3.read(PythonRunner.scala:784)
	at org.apache.spark.api.python.PythonRunner$$anon$3.read(PythonRunner.scala:766)
	at org.apache.spark.api.python.BasePythonRunner$ReaderIterator.hasNext(PythonRunner.scala:525)
	at org.apache.spark.InterruptibleIterator.hasNext(InterruptibleIterator.scala:37)
	at scala.collection.Iterator$GroupedIterator.fill(Iterator.scala:1211)
	at scala.collection.Iterator$GroupedIterator.hasNext(Iterator.scala:1217)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:460)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:140)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:104)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:54)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	... 1 more

---------------------------------------------------------------------------
Py4JJavaError                             Traceback (most recent call last)
Cell In [7], line 1
----> 1 month_by_count_checkouts.saveAsTextFile(""result"")

File ~/.local/lib/python3.10/site-packages/pyspark/rdd.py:3425, in RDD.saveAsTextFile(self, path, compressionCodecClass)
   3423     keyed._jrdd.map(self.ctx._jvm.BytesToString()).saveAsTextFile(path, compressionCodec)
   3424 else:
-> 3425     keyed._jrdd.map(self.ctx._jvm.BytesToString()).saveAsTextFile(path)

File ~/.local/lib/python3.10/site-packages/py4j/java_gateway.py:1322, in JavaMember.__call__(self, *args)
   1316 command = proto.CALL_COMMAND_NAME +\
   1317     self.command_header +\
   1318     args_command +\
   1319     proto.END_COMMAND_PART
   1321 answer = self.gateway_client.send_command(command)
-> 1322 return_value = get_return_value(
   1323     answer, self.gateway_client, self.target_id, self.name)
   1325 for temp_arg in temp_args:
   1326     if hasattr(temp_arg, ""_detach""):

File ~/.local/lib/python3.10/site-packages/py4j/protocol.py:326, in get_return_value(answer, gateway_client, target_id, name)
    324 value = OUTPUT_CONVERTER[type](answer[2:], gateway_client)
    325 if answer[1] == REFERENCE_TYPE:
--> 326     raise Py4JJavaError(
    327         ""An error occurred while calling {0}{1}{2}.\n"".
    328         format(target_id, ""."", name), value)
    329 else:
    330     raise Py4JError(
    331         ""An error occurred while calling {0}{1}{2}. Trace:\n{3}\n"".
    332         format(target_id, ""."", name, value))

Py4JJavaError: An error occurred while calling o48.saveAsTextFile.
: org.apache.spark.SparkException: Job aborted.
	at org.apache.spark.internal.io.SparkHadoopWriter$.write(SparkHadoopWriter.scala:106)
	at org.apache.spark.rdd.PairRDDFunctions.$anonfun$saveAsHadoopDataset$1(PairRDDFunctions.scala:1091)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.PairRDDFunctions.saveAsHadoopDataset(PairRDDFunctions.scala:1089)
	at org.apache.spark.rdd.PairRDDFunctions.$anonfun$saveAsHadoopFile$4(PairRDDFunctions.scala:1062)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.PairRDDFunctions.saveAsHadoopFile(PairRDDFunctions.scala:1027)
	at org.apache.spark.rdd.PairRDDFunctions.$anonfun$saveAsHadoopFile$3(PairRDDFunctions.scala:1009)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.PairRDDFunctions.saveAsHadoopFile(PairRDDFunctions.scala:1008)
	at org.apache.spark.rdd.PairRDDFunctions.$anonfun$saveAsHadoopFile$2(PairRDDFunctions.scala:965)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.PairRDDFunctions.saveAsHadoopFile(PairRDDFunctions.scala:963)
	at org.apache.spark.rdd.RDD.$anonfun$saveAsTextFile$2(RDD.scala:1620)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.saveAsTextFile(RDD.scala:1620)
	at org.apache.spark.rdd.RDD.$anonfun$saveAsTextFile$1(RDD.scala:1606)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.saveAsTextFile(RDD.scala:1606)
	at org.apache.spark.api.java.JavaRDDLike.saveAsTextFile(JavaRDDLike.scala:564)
	at org.apache.spark.api.java.JavaRDDLike.saveAsTextFile$(JavaRDDLike.scala:563)
	at org.apache.spark.api.java.AbstractJavaRDDLike.saveAsTextFile(JavaRDDLike.scala:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 1 times, most recent failure: Lost task 0.0 in stage 0.0 (TID 0) (10.0.2.15 executor driver): org.apache.spark.api.python.PythonException: Traceback (most recent call last):
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/worker.py"", line 1247, in main
    process()
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/worker.py"", line 1237, in process
    out_iter = func(split_index, iterator)
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 5434, in pipeline_func
    return func(split, prev_func(split, iterator))
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 5434, in pipeline_func
    return func(split, prev_func(split, iterator))
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 840, in func
    return f(iterator)
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 3983, in combineLocally
    merger.mergeValues(iterator)
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/shuffle.py"", line 256, in mergeValues
    for k, v in iterator:
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/util.py"", line 83, in wrapper
    return f(*args, **kwargs)
  File ""/tmp/ipykernel_8875/6232910.py"", line 1, in <lambda>
IndexError: list index out of range

	at org.apache.spark.api.python.BasePythonRunner$ReaderIterator.handlePythonException(PythonRunner.scala:572)
	at org.apache.spark.api.python.PythonRunner$$anon$3.read(PythonRunner.scala:784)
	at org.apache.spark.api.python.PythonRunner$$anon$3.read(PythonRunner.scala:766)
	at org.apache.spark.api.python.BasePythonRunner$ReaderIterator.hasNext(PythonRunner.scala:525)
	at org.apache.spark.InterruptibleIterator.hasNext(InterruptibleIterator.scala:37)
	at scala.collection.Iterator$GroupedIterator.fill(Iterator.scala:1211)
	at scala.collection.Iterator$GroupedIterator.hasNext(Iterator.scala:1217)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:460)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:140)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:104)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:54)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2451)
	at org.apache.spark.internal.io.SparkHadoopWriter$.write(SparkHadoopWriter.scala:83)
	... 51 more
Caused by: org.apache.spark.api.python.PythonException: Traceback (most recent call last):
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/worker.py"", line 1247, in main
    process()
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/worker.py"", line 1237, in process
    out_iter = func(split_index, iterator)
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 5434, in pipeline_func
    return func(split, prev_func(split, iterator))
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 5434, in pipeline_func
    return func(split, prev_func(split, iterator))
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 840, in func
    return f(iterator)
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 3983, in combineLocally
    merger.mergeValues(iterator)
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/shuffle.py"", line 256, in mergeValues
    for k, v in iterator:
  File ""/home/student/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/util.py"", line 83, in wrapper
    return f(*args, **kwargs)
  File ""/tmp/ipykernel_8875/6232910.py"", line 1, in <lambda>
IndexError: list index out of range

	at org.apache.spark.api.python.BasePythonRunner$ReaderIterator.handlePythonException(PythonRunner.scala:572)
	at org.apache.spark.api.python.PythonRunner$$anon$3.read(PythonRunner.scala:784)
	at org.apache.spark.api.python.PythonRunner$$anon$3.read(PythonRunner.scala:766)
	at org.apache.spark.api.python.BasePythonRunner$ReaderIterator.hasNext(PythonRunner.scala:525)
	at org.apache.spark.InterruptibleIterator.hasNext(InterruptibleIterator.scala:37)
	at scala.collection.Iterator$GroupedIterator.fill(Iterator.scala:1211)
	at scala.collection.Iterator$GroupedIterator.hasNext(Iterator.scala:1217)
	at scala.collection.Iterator$$anon$10.hasNext(Iterator.scala:460)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:140)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:104)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:54)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.Thread"
TpjqgPRs,data721,TestGuy1,JSON,Tuesday 10th of October 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'a2d5e01a9ecf1b856789811c6b89523254faf99b8cb8a3c780a180e0f69bc8d68c89a1e04d1091c83d61f48c85b9567e19c238cbb934e7a0e6fb5bb879e52c1a0fcbef56e383433b7f45fd41f4c718c1116917dc6380e8d44c414014d9e20f6e7768b493319aa6520bcba94017131490c4779e3754a6dcaef7d306dbed812407',
  otherdata: [
    'c84df8f9c5f38ac48bee586f6633c64c',
    '0e19099b731265098e0c9d3c1ecdc4ac',
    '21531f8b13bb5fe62c9a411836b32990',
    '4aa454301a977700064cc80e8284477b',
    'fcd0237c9cd66f90270dce4652842479',
    '32b027966467f348cfb04ea0c40944d4',
    '56353b0a360b27742d6047e32922afb4',
    '4a2769d55303dec9c816c9aa5a165a26'
  ]
}"
gpDsQWTZ,Rotten Oranges,jayati,C++,Tuesday 10th of October 2023 05:07:15 AM CDT,"//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution 
{
    public:
    //Function to find minimum time required to rot all oranges. 
    int orangesRotting(vector<vector<int>>& grid) {
        // Code here
        int n = grid.size();
        int m = grid[0].size();
        queue<pair<pair<int,int>,int>> q;
        int vis[n][m];
        int cntfresh=0;
        for(int i=0;i<grid.size();i++)
        {
            for(int j=0;j<grid[0].size();j++)
            {
                if(grid[i][j]==2)
                {
                    q.push({{i,j},0});
                    vis[i][j]=2;
                }
                else 
                {
                    vis[i][j]=0;
                }
                if(grid[i][j]==1)
                {
                    cntfresh++;
                }
            }
        }
        int tm=0;
        int drow[] = {-1,0,1,0};
        int dcol[] = { 0,1,0,-1};
        int c=0;
        while(!q.empty())
        {
            int ni = q.front().first.first;
            int nj = q.front().first.second;
            int t = q.front().second;
            tm = max(tm,t);
            q.pop();
            
            for(int i=0;i<4;i++)
            {
                int row = ni+drow[i];
                int col = nj+dcol[i];
                if((row>=0 && row<n) && (col>=0 && col<m) && vis[row][col]==0 && grid[row][col]==1)
                {
                    q.push({{row,col},t+1});
                    vis[row][col]=2;
                    c++;
                }
            }
        }
        if(c!=cntfresh)
        {
            return -1;
        }
        return tm;
    }
};

//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int n, m;
		cin >> n >> m;
		vector<vector<int>>grid(n, vector<int>(m, -1));
		for(int i = 0; i < n; i++){
			for(int j = 0; j < m; j++){
				cin >> grid[i][j];
			}
		}
		Solution obj;
		int ans = obj.orangesRotting(grid);
		cout << ans << ""\n"";
	}
	return 0;
}
// } Driver Code Ends"
Kc2Nksej,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Tuesday 10th of October 2023 04:45:10 AM CDT,"Pasted at: 10/10/2023 10:45
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
sdE6e59a,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Tuesday 10th of October 2023 04:45:08 AM CDT,"Pasted at: 10/10/2023 10:45
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
1ViYr7z7,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 10th of October 2023 04:45:07 AM CDT,"Pasted at: 10/10/2023 10:45
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
KW248Txw,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Tuesday 10th of October 2023 04:45:06 AM CDT,"Pasted at: 10/10/2023 10:45
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
n2CvWUqn,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Tuesday 10th of October 2023 04:45:04 AM CDT,"Pasted at: 10/10/2023 10:45
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
SAGGQYgd,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Tuesday 10th of October 2023 04:45:02 AM CDT,"Pasted at: 10/10/2023 10:45
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
isFgREXJ,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 10th of October 2023 04:45:01 AM CDT,"Pasted at: 10/10/2023 10:45
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
bcgnhhRW,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 10th of October 2023 04:44:59 AM CDT,"Pasted at: 10/10/2023 10:44
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
jW8gM97e,Hashed Email With Exclude,wheresTheAnyKey,C,Tuesday 10th of October 2023 04:44:58 AM CDT,"Pasted at: 10/10/2023 10:44
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
xb2FFGKX,Hashed Email - Full,wheresTheAnyKey,C,Tuesday 10th of October 2023 04:44:56 AM CDT,"Pasted at: 10/10/2023 10:44
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
sd1F3mxq,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 10th of October 2023 04:44:55 AM CDT,"Pasted at: 10/10/2023 10:44
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
wNV8ruPx,Drag & Drop Uploader WooCommerce Pro - Override Upload Display,CodeDropz,PHP,Tuesday 10th of October 2023 04:29:11 AM CDT,"add_action('plugins_loaded', 'codedropz_upload_condition');

function codedropz_upload_condition(){
	
	$filter = get_option('show_in_dnd_file_upload_after');
	$codedropz = DNDMFU_WC_PRO_HOOKS::get_instance();
	
	// remove/unregister current hook
	remove_action( $filter, [ $codedropz, 'dndmfu_wc_display_file_upload' ], 500 );
	
	// Your categories condition here (ie: woocommerce_before_variations_form)
	add_action( 'woocommerce_before_variations_form', [ $codedropz, 'dndmfu_wc_display_file_upload' ], 500 );
}"
AmNXaMJ1,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Tuesday 10th of October 2023 03:58:05 AM CDT,"Pasted at: 10/10/2023 09:58
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
3V7xyTjX,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Tuesday 10th of October 2023 03:58:03 AM CDT,"Pasted at: 10/10/2023 09:58
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
JPahU4TT,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 10th of October 2023 03:58:02 AM CDT,"Pasted at: 10/10/2023 09:58
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
kSAy5fpE,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Tuesday 10th of October 2023 03:58:00 AM CDT,"Pasted at: 10/10/2023 09:58
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
ejtX0bEC,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Tuesday 10th of October 2023 03:57:59 AM CDT,"Pasted at: 10/10/2023 09:57
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
ugd1QDHk,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Tuesday 10th of October 2023 03:57:57 AM CDT,"Pasted at: 10/10/2023 09:57
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
7Gfnca6q,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 10th of October 2023 03:57:54 AM CDT,"Pasted at: 10/10/2023 09:57
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
rAmQDdzZ,Hashed Email With Exclude,wheresTheAnyKey,C,Tuesday 10th of October 2023 03:57:53 AM CDT,"Pasted at: 10/10/2023 09:57
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
SaDhawJn,Hashed Email - Full,wheresTheAnyKey,C,Tuesday 10th of October 2023 03:57:51 AM CDT,"Pasted at: 10/10/2023 09:57
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
Pm7tr5jd,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 10th of October 2023 03:57:50 AM CDT,"Pasted at: 10/10/2023 09:57
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
Lds5APit,First non-repeating character in a stream,jayati,C++,Tuesday 10th of October 2023 03:43:54 AM CDT,"//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
	public:
		string FirstNonRepeating(string A){
		    // Code here
		   queue<int> q;
		   q.push(A[0]);
		   unordered_map<char,int> m;
		   m[A[0]]++;
		   int i=1;
		   string ans="""";
		   ans+=A[0];
		   while(i<A.length())
		   {
		       m[A[i]]++;
		       q.push(A[i]);
		       while(m[q.front()]>1 && !q.empty())
		       {
		           q.pop();
		       }
		       if(!q.empty())
		       {
		           ans+=q.front();
		       }
		       else
		       {
		           ans+='#';
		       }
		       i++;
		   }
		   return ans;
		   
		}

};

//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		string A;
		cin >> A;
		Solution obj;
		string ans = obj.FirstNonRepeating(A);
		cout << ans << ""\n"";
	}
	return 0;
}
// } Driver Code Ends"
W8Zxx4z0,first non repeating character code failing on some test cases,jayati,C++,Tuesday 10th of October 2023 03:38:54 AM CDT,"//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
	public:
		string FirstNonRepeating(string A){
		    // Code here
		    deque<int> q;
		    unordered_map<char,int> m;
		    string ans="""";
		    for(int i=0;i<A.length();i++)
		    {
		        m[A[i]]++;
		        if(m[A[i]]>1)
		        {
		            if(!q.empty() && q.back()==A[i])
		            {
		                if(!q.empty())
		            {
		                 q.pop_back();
		            }
		           
		            if(q.empty())
		            {
		              ans+='#';
		            }
		            else
		            {
		                ans+=q.front();
		            }
		                
		            }
		            
		            else
		            {
		                 if(ans.size()>0 && ans[ans.length()-1]==A[i])
		                 {
		                     while(!q.empty() && m[q.front()]!=1)
    		                 {
		                       q.pop_front();
		                      }
		                     
		                 }
		                
		               
		               
		                
		               ans+=q.front(); 
		            }
		            
		           
		        }
		        else
		        {
		            q.push_back(A[i]);
		            if(A[i]==q.front())
		            {
		                ans+=A[i];
		            }
		            else
		            {
		                ans+=q.front();
		            }
		        }
		    }
		    return ans;
		}

};

//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		string A;
		cin >> A;
		Solution obj;
		string ans = obj.FirstNonRepeating(A);
		cout << ans << ""\n"";
	}
	return 0;
}
// } Driver Code Ends"
Ptf75UvS,Array linear search [C++],R3v3rs3r,C,Tuesday 10th of October 2023 03:25:17 AM CDT,"#include<iostream>
#include<conio.h>
using namespace std;

int main()
{
    int arr[10], i, num, index;
    cout<<""Enter 10 numbers:\n"";
    for(i=0; i<10; i++) {
        cin>>arr[i];
    }
    cout<<""\nEnter a number to search: "";
    cin>>num;
    for(i=0; i<10; i++)
    {
        if(arr[i]==num) {
        	cout<<""\nFound at index no. ""<<i;
            break;
        }
    }
    if(i==10) {
    	cout<<""\nElement not present in the array."";
    }
    getch();
    return 0;
}"
j1fWucwa,Untitled,Krumov,C#,Tuesday 10th of October 2023 03:20:13 AM CDT,"using System;

public class KnapsackProblem
{
    static int N = 8;
    static int M = 8;
    static int[] m = { 3, 7, 6, 1, 2, 4, 5, 5 };
    static int[] c = { 5, 3, 9, 1, 1, 2, 5, 2 };

    static int[,] dp = new int[N + 1, M + 1];

    static void Main()
    {
        CalculateKnapsack();
        PrintSelectedItems();
    }

    static void CalculateKnapsack()
    {
        for (int i = 1; i <= N; i++)
        {
            for (int w = 0; w <= M; w++)
            {
                if (m[i - 1] <= w)
                {
                    dp[i, w] = Math.Max(dp[i - 1, w], dp[i - 1, w - m[i - 1]] + c[i - 1]);
                }
                else
                {
                    dp[i, w] = dp[i - 1, w];
                }
            }
        }
    }

    static void PrintSelectedItems()
    {
        int maxProfit = dp[N, M];
        Console.WriteLine(""Maximum value: "" + maxProfit);

        Console.Write(""Selected items: "");
        int currentWeight = M;
        for (int i = N; i > 0 && maxProfit > 0; i--)
        {
            if (maxProfit != dp[i - 1, currentWeight])
            {
                Console.Write(i + "" "");
                maxProfit -= c[i - 1];
                currentWeight -= m[i - 1];
            }
        }
    }
}
"
F0zssxSb,Untitled,Sreekar_0125,Python,Tuesday 10th of October 2023 03:08:01 AM CDT,"import sys
import math
import random

# sys.stdin = open('.txt', 'r')
sys.stdout = open('input.txt', 'w')
sys.stderr = open('error.txt', 'w')

t = random.randint(1, 1)
print(t)
for _ in range(t):
    n = random.randint(1, 10)
    m = random.randint(1, 10)
    print(n, m)
    for i in range(n):
        for j in range(m):
            x = random.randint(0, 1)
            if j == m - 1:
                print(x)
            else:
                print(x, end=' ')
    q = random.randint(2, 2)
    print(q)
    done = 0
    lst = []
    lst = set(lst)
    while len(lst) < (2 * q):
        ok1 = False
        ok2 = False
        x11 = random.randint(1, n)
        y11 = random.randint(1, m)
        x21 = random.randint(1, n)
        y21 = random.randint(1, m)
        if x11 <= x21 and y11 <= y21:
            ok1 = True
        x12 = random.randint(1, n)
        y12 = random.randint(1, m)
        x22 = random.randint(1, n)
        y22 = random.randint(1, m)
        if x12 <= x22 and y12 <= y22:
            ok2 = True
        if ok1 and ok2:
            lst.add([x11, y11, x21, y21])
            lst.add([x12, y12, x22, y22])
            done += 1
    for i in lst:
        print(*i)"
cvecQsjb,Serpentine,raffing86,Python,Tuesday 10th of October 2023 03:00:03 AM CDT,"# -*- coding: utf-8 -*-

# Macro Begin: 
import FreeCAD
import gui_lines

Gui.runCommand('Std_DlgMacroRecord',0)
Gui.runCommand('Draft_Wire',0)
pl = FreeCAD.Placement()
pl.Rotation.Q = (0.0, 0.0, 3.061616997868383e-17, 1.0)
pl.Base = FreeCAD.Vector(0.0, 0.0, 0.0)
points = [FreeCAD.Vector(0.0, 0.0, 0.0), FreeCAD.Vector(10.0, 6.123233995736766e-16, 0.0), FreeCAD.Vector(10.0, 6.123233995736766e-16, 0.0), FreeCAD.Vector(10.0, 8.0, 0.0), FreeCAD.Vector(10.0, 8.0, 0.0), FreeCAD.Vector(1.0, 7.999999999999999, 0.0), FreeCAD.Vector(1.0, 7.999999999999999, 0.0), FreeCAD.Vector(1.0, 0.9999999999999991, 0.0), FreeCAD.Vector(1.0, 0.9999999999999991, 0.0), FreeCAD.Vector(9.0, 0.9999999999999996, 0.0), FreeCAD.Vector(9.0, 0.9999999999999996, 0.0), FreeCAD.Vector(9.0, 7.0, 0.0), FreeCAD.Vector(9.0, 7.0, 0.0), FreeCAD.Vector(2.0, 7.0, 0.0), FreeCAD.Vector(2.0, 2.0, 0.0), FreeCAD.Vector(2.0, 2.0, 0.0), FreeCAD.Vector(8.0, 2.0000000000000004, 0.0), FreeCAD.Vector(8.0, 6.0, 0.0), FreeCAD.Vector(3.0, 6.0, 0.0), FreeCAD.Vector(3.0, 3.0, 0.0)]
line = Draft.make_wire(points, placement=pl, closed=False, face=True, support=None)
# Gui.Selection.addSelection('Unnamed','Wire')
Draft.autogroup(line)
FreeCAD.ActiveDocument.recompute()
# Macro End: 
"
vTVb7bhn,Javascript for funksjonsnode man kan sette inn mellom Price Receiver-node og nettleie i Powersaver,mikalmo,JavaScript,Tuesday 10th of October 2023 02:57:15 AM CDT,"var input = msg.payload.priceData;

// Innslagspunkt for strømstøtte
var minimumPrice = 0.875;

// Kalkuler priser med strømstøtte
var pricesWithSubsidy = input.map(function (item) {
    var price = item.value;
    var priceWithSubsidy = price >= minimumPrice ? minimumPrice + 0.1 * (price - minimumPrice) : price;
    return {
        value: priceWithSubsidy,
        start: item.start
    };
});

msg.payload.priceData = pricesWithSubsidy;

return msg;"
ABehmA93,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Tuesday 10th of October 2023 02:54:38 AM CDT,"Pasted at: 10/10/2023 08:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
ep6GauhB,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Tuesday 10th of October 2023 02:54:36 AM CDT,"Pasted at: 10/10/2023 08:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
2ZQsNz7P,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 10th of October 2023 02:54:35 AM CDT,"Pasted at: 10/10/2023 08:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
dPvEq58t,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Tuesday 10th of October 2023 02:54:33 AM CDT,"Pasted at: 10/10/2023 08:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
xdXg0xb3,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Tuesday 10th of October 2023 02:54:32 AM CDT,"Pasted at: 10/10/2023 08:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
HXaAwNFG,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Tuesday 10th of October 2023 02:54:30 AM CDT,"Pasted at: 10/10/2023 08:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
bpE2rDxy,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 10th of October 2023 02:54:27 AM CDT,"Pasted at: 10/10/2023 08:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
7eK82XMV,Hashed Email With Exclude,wheresTheAnyKey,C,Tuesday 10th of October 2023 02:54:26 AM CDT,"Pasted at: 10/10/2023 08:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
ZfteqJik,Hashed Email - Full,wheresTheAnyKey,C,Tuesday 10th of October 2023 02:54:24 AM CDT,"Pasted at: 10/10/2023 08:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
iPjdCUgQ,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 10th of October 2023 02:54:23 AM CDT,"Pasted at: 10/10/2023 08:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
PyeucgWb,Radio on Debian 12,METALiST,Bash,Tuesday 10th of October 2023 02:53:27 AM CDT,"apt update && apt install -y cron mpd mpc

mkdir -m 775 $HOME/music

cat > /etc/mpd.conf << EOF
music_directory ""$HOME/music""
playlist_directory ""/var/lib/mpd/playlists""
db_file ""/var/lib/mpd/tag_cache""
log_file ""/var/log/mpd/mpd.log""
pid_file ""/run/mpd/pid""
state_file ""/var/lib/mpd/state""
sticker_file ""/var/lib/mpd/sticker.sql""

auto_update ""yes""

audio_output {
    type ""httpd""
    name ""httpd""
    encoder ""lame""
    port ""80""
    bitrate ""320""
    format ""48000:24:2""
    always_on ""yes""
}
EOF

systemctl enable mpd && systemctl restart mpd && mpc update

crontab -l | { cat; echo '*/1 * * * * if ! pgrep mpd > /dev/null 2>&1; then sh -c ""mpc random on; mpc repeat on; mpc clear; mpc ls | mpc add; mpc play"" > /dev/null 2>&1; fi'; } | crontab -"
YNeZxE4U,c_work,excellent940707,C,Tuesday 10th of October 2023 02:19:57 AM CDT,"#include <stdio.h>
using namespace std;

int main(){
     FILE *fout;
     fout = fopen(""C:/Users/yiwen/OneDrive/桌面/GPA.txt"", ""w"");
     //上述路徑跟檔名要修改成你自己的，不然程式會掛掉

     int grade, credit, cnt=0, grade_sum=0;
     printf(""請輸入成績和學分數\n"");
     while(scanf(""%d%d"",&grade, &credit)){
          if(grade==-1||credit==-1){
               break;
          }else if(grade>100||grade<0){
               printf(""資料錯誤，請重新輸入\n"");
               continue;
          }else{
               grade_sum += grade*credit;
               cnt += credit;
               fprintf(fout, ""%d %d\n"", grade, credit);
          }
     }

     if(cnt)grade_sum /= cnt;

     if(grade_sum<=100&&grade_sum>=90){
          fprintf(fout, ""%d GPA A"", grade_sum);
     }else if(grade_sum<90&&grade_sum>=80){
          fprintf(fout, ""%d GPA B"", grade_sum);
     }else if(grade_sum<80&&grade_sum>=70){
          fprintf(fout, ""%d GPA C"", grade_sum);
     }else if(grade_sum<70&&grade_sum>=60){
          fprintf(fout, ""%d GPA D"", grade_sum);
     }else{
          fprintf(fout, ""%d GPA F"", grade_sum);
     }

     fclose(fout);


    return 0;
}"
VPtHuwDZ,pylon dataparser.py,josefkyrian,Python,Tuesday 10th of October 2023 02:10:15 AM CDT,"import dateutil.parser
import re
import uuid
import hashlib


def isnumeric(val):
	try:
		float(val)
		return True
	except ValueError:
		return False
	#endtry
#enddef

def parseData_disp_pwr(line):
	# line format:
	# ID    Time               Vo(mV) Cu(mA) Tempr   BTlow   BThigh  BVlow    BVhigh   Base.St  Volt.St  Curr.St  Temp.St  Per%  Coul(mAH) Per%  Coul(mWH) B.V.St   B.T.St   U.V.St   U.T.St   UTlow    UThigh   UVlow    UVhigh   BTAvg   
	# 1     22-06-04 18:33:03  411986 0      40000   27000   29000   3431     3436     Idle     Normal   Normal   Normal   100%     36981 100%     14200320    Normal   Normal   Normal   Normal   27000    29000   102979   103022   27866
	# [
	# 	'1',
	# 	'22-06-04',
	# 	'18:33:03',
	# 	'411986',
	# 	'0',
	# 	'40000',
	# 	'27000',
	# 	'29000',
	# 	'3431',
	# 	'3436',
	# 	'Idle',
	# 	'Normal',
	# 	'Normal',
	# 	'Normal',
	# 	'100%',
	# 	'36981',
	# 	'100%',
	# 	'14200320',
	# 	'Normal',
	# 	'Normal',
	# 	'Normal',
	# 	'Normal',
	# 	'27000',
	# 	'29000',
	# 	'102979',
	# 	'103022',
	# 	'27866',
	# ]
	columnsDefList = [
		None,
		'timestamp_date',
		'timestamp_time',
		'voltage',
		'current',
		'temperature',
		'min_cell_temperature',
		'max_cell_temperature',
		'min_cell_voltage',
		'max_cell_voltage',
		'base_state_label',
		'voltage_state_label',
		'current_state_label',
		'temperature_state_label',
		'soc',
		'coulomb_ah',
		'coulomb_percent',
		'coulomb_kwh',
		'cell_voltage_state_label',
		'cell_temperature_state_label',
		'unit_voltage_state_label',
		'unit_temperature_state_label',
		'min_unit_temperature',
		'max_unit_temperature',
		'min_unit_voltage',
		'max_unit_voltage',
		'avg_cell_temperature',
	]
	columns = line.split()
	if (len(columns) < len(columnsDefList)):
		return None
	#endif
	columnValues = {}
	for columnIndex, columnName in enumerate(columnsDefList):
		if (columnName == None):
			continue
		#endif
		columnValues[columnName] = columns[columnIndex]
	#endfor

	columnValues['timestamp'] = dateutil.parser.parse('20%s %s' % (columnValues['timestamp_date'], columnValues['timestamp_time']))
	del columnValues['timestamp_date']
	del columnValues['timestamp_time']
	for columnName in [
		'voltage',
		'current',
		'temperature',
		'min_cell_temperature',
		'max_cell_temperature',
		'min_cell_voltage',
		'max_cell_voltage',
		'coulomb_ah',
		'min_unit_temperature',
		'max_unit_temperature',
		'min_unit_voltage',
		'max_unit_voltage',
		'avg_cell_temperature',
	]:
		columnValues[columnName] = float(columnValues[columnName]) / 1000
	#endfor
	columnValues['soc'] = float(columnValues['soc'].replace('%', ''))
	columnValues['coulomb_percent'] = float(columnValues['coulomb_percent'].replace('%', ''))
	columnValues['coulomb_kwh'] = float(columnValues['coulomb_kwh']) / 1000000

	return columnValues
#enddef

def parseData_stat(data):
	#print(data);return{}
	columnValues = {}

	for line in data.split(""\n""):
		line = line.strip()
		if (line):
			#print(line)
			if (':' in line):
				(key, value) = line.split("":"", 1)
				columnValues[key.strip()] = float(value.strip())
			#endif
		#endif
	#endfor

	return columnValues
#enddef

def parseData_sysinfo(data):
	#print(data);return{}

	columnValues = {}

	for line in data.split(""\n""):
		line = line.strip()
		if (line):
			#print(line)
			if (':' in line):
				(key, value) = line.split("":"", 1)
				value = value.strip().split()[0].strip()
				columnValues[key.strip()] = float(value) if isnumeric(value) else value
			#endif
		#endif
	#endfor

	return columnValues
#enddef

def parseData_bat(data):
	#print(data);return{}

	columnValues = {}
	batteries = []

	columnValues['uuid'] = str(uuid.uuid4())

	part = None
	for line in data.split(""\n""):
		line = line.strip()
		if (line):
			#print(line)
			if (part == None and ':' in line):
				part = 'values-with-colons'
			#endif
			if (part == 'values-with-colons'):
				if (':' in line):
					(key, value) = line.split("":"", 1)
					firstValue = value.strip().split()[0].strip()
					columnValues[key.strip()] = float(firstValue) if isnumeric(firstValue) else value.strip()
				elif (re.match('^Bat +Volt +Curr +Tempr.+', line)):
					part = 'batteries'
					continue
				#endif
			#endif
			if (part == 'batteries'):
				headerDef = 'Bat|Volt|Curr|Tempr|V.State|T.State|AH(%)|AH(mAH)|WH(%)|WH(mWH)|Bal'

				header = headerDef.split('|')
				#print(header)
				values = line.split()
				#print(values)
				#print(values)
				if len(values) == len(header):
					batteries.append(dict([(header[i], values[i]) for i, col in enumerate(header)]))
					batteries[-1][""parent_uuid""] = columnValues['uuid']
					batteries[-1][""AH(%)""] = batteries[-1][""AH(%)""].rstrip(""%"")
					batteries[-1][""WH(%)""] = batteries[-1][""WH(%)""].rstrip(""%"")
				else:
					part = 'end'
				#endif
			#endif
		#endif
	#endfor

	return {
		'columnValues':columnValues,
		'batteries':batteries,
	}
#enddef

def parseData_soh(data):
	#print(data);return{}

	columnValues = {}
	batteries = []

	columnValues['uuid'] = str(uuid.uuid4())

	part = None
	for line in data.split(""\n""):
		line = line.strip()
		if (line):
			#print(line)
			if (part == None \
			# and ':' in line
			):
				part = 'values-with-colons'
			#endif
			if (part == 'values-with-colons'):
				if (':' in line):
					(key, value) = line.split("":"", 1)
					firstValue = value.strip().split()[0].strip()
					columnValues[key.strip()] = float(firstValue) if isnumeric(firstValue) else value.strip()
				elif (re.match('^Battery +Voltage +SOHCount.+', line)):
					part = 'batteries'
					continue
				#endif
			#endif
			if (part == 'batteries'):
				headerDef = 'Battery|Voltage|SOHCount|SOHStatus'

				header = headerDef.split('|')
				#print(header)
				values = line.split()
				#print(values)
				#print(values)
				if len(values) == len(header):
					batteries.append(dict([(header[i], values[i]) for i, col in enumerate(header)]))
					batteries[-1][""parent_uuid""] = columnValues['uuid']
				else:
					part = 'end'
				#endif
			#endif
		#endif
	#endfor

	return {
		'columnValues':columnValues,
		'batteries':batteries,
	}
#enddef

def parseData_log(data):
	#print(data);return{}

	records = []

	columnValues = {}

	for line in data.split(""\n""):
		line = line.strip()
		if (line):
			#print(line)
			if (':' in line):
				(key, value) = line.split("":"", 1)
				key = key.strip()
				value = value.strip()
				if (key == ""Time""):
					value = dateutil.parser.parse('20%s' % value)
				#endif
				columnValues[key] = value
			#endif
		else:
			if (columnValues):
				records.append(columnValues)
			#endif
			columnValues = {}
		#endif
	#endfor
	if (columnValues):
		records.append(columnValues)
	#endif
	# pridat id jako kombinace casu a textu
	for record in records:
		record['uuid'] = hashlib.md5((""%s/%s"" % (record['Time'].timestamp(), record['Info'])).encode('utf-8')).hexdigest()
	#endfor

	return records
#enddef

def parseData_data_X(data):
	#print(data);return{}

	columnValues = {}
	batteries = []
	units = []

	part = None
	for line in data.split(""\n""):
		line = line.strip()
		if (line):
			#print(line)
			if (part == None and ':' in line):
				part = 'values-with-colons'
			#endif
			if (part == 'values-with-colons'):
				if (':' in line):
					(key, value) = line.split("":"", 1)
					key = key.strip()
					value = value.strip()
					firstValue = value.split()[0].strip()
					if (key == ""Time""):
						value = dateutil.parser.parse('20%s' % value)
					#endif
					columnValues[key] = float(firstValue) if isnumeric(firstValue) else value
				elif (re.match('^Battery +Volt +Tempr.+', line)):
					columnValues['uuid'] = hashlib.md5((""%s"" % (columnValues['Time'].timestamp(), )).encode('utf-8')).hexdigest()
					part = 'batteries'
					continue
				#endif
			#endif
			if (part == 'batteries'):
				headerDef = 'Battery|Volt|Tempr|Volt. State|Temp. State|Coulomb(%)'

				header = headerDef.split('|')
				#print(header)
				values = line.split()
				#print(values)
				#print(values)
				if len(values) == len(header):
					batteries.append(dict([(header[i], values[i]) for i, col in enumerate(header)]))
					batteries[-1][""parent_uuid""] = columnValues['uuid']
					batteries[-1][""Coulomb(%)""] = batteries[-1][""Coulomb(%)""].rstrip(""%"")
				elif (re.match('^Unit +Volt +Tempr +BTLow +BTHigh.+', line)):
					part = 'units'
					continue
				#endif
			#endif
			if (part == 'units'):
				headerDef = 'Unit|Volt|Tempr|BTLow|BTHigh|BVLow|BVHigh|Volt. State|Temp. State|Coulomb(%)'

				header = headerDef.split('|')
				#print(header)
				values = line.split()
				#print(values)
				#print(values)
				if len(values) == len(header):
					units.append(dict([(header[i], values[i]) for i, col in enumerate(header)]))
					units[-1][""parent_uuid""] = columnValues['uuid']
					units[-1][""Coulomb(%)""] = units[-1][""Coulomb(%)""].rstrip(""%"")
				else:
					part = 'end'
				#endif
			#endif
		#endif
	#endfor

	return {
		'columnValues':columnValues,
		'batteries':batteries,
		'units':units,
	}
#enddef

def parseData_data_event(data):
	return parseData_data_X(data)
#enddef

def parseData_data_history(data):
	return parseData_data_X(data)
#enddef

def parseData_data_misc(data):
	return parseData_data_X(data)
#enddef
"
BkXcVNFY,handbreak snowybot trial,coinwalk,JavaScript,Tuesday 10th of October 2023 02:04:51 AM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/100).toFixed(8));
var burp = nudie;
var taget =5000;
var bolux = (nudie*10);
var poopy = (nudie*6.5);
var sexual = 0;
var woman = ((Math.floor(smiley/bolux))*bolux);
var wiman = ((Math.floor(smiley/bolux))*bolux);
var fart = 1;
var jockey = ((burp*1).toFixed(8));
var bolance = parseFloat(document.getElementById('pct_balance').value);


 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance>woman)) {
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance<woman)) {
    burp = burp*2;
    fart = 0;
    sexual = parseFloat(bolance);
}
if ((bolance>=(woman+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    burp = nudie;
    fart = 1;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
if ((bolance<=(woman-(nudie*30)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    burp = nudie;
    fart = 1;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if (joe<=3){
joe = 3;
}
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1);
}
get();"
aKAwETTf,handbreak snowybot trial,coinwalk,JavaScript,Tuesday 10th of October 2023 02:03:13 AM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/100).toFixed(8));
var burp = nudie;
var taget =5000;
var bolux = (nudie*10);
var poopy = (nudie*6.5);
var sexual = 0;
var woman = ((Math.floor(smiley/bolux))*bolux);
var wiman = ((Math.floor(smiley/bolux))*bolux);
var fart = 1;
var jockey = ((burp*1).toFixed(8));
var bolance = parseFloat(document.getElementById('pct_balance').value);


 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance>woman)) {
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance<woman)) {
    burp = burp*2;
    fart = 0;
    sexual = parseFloat(bolance);
}
if ((bolance>=(woman+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    burp = nudie;
    fart = 1;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
if (bolance<=(woman-(nudie*30))){
    burp = nudie;
    fart = 1;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if (joe<=3){
joe = 3;
}
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1);
}
get();"
k9Tzcmwh,AfterService reset,NumbaWon,Bash,Tuesday 10th of October 2023 02:01:11 AM CDT,"                     USER        PID ACCESS COMMAND
/dev/snd/controlC0:  numbawon   3704 F.... wireplumber
/dev/snd/controlC1:  numbawon   3686 F.... pipewire
                     numbawon   3704 F.... wireplumber
/dev/snd/pcmC1D3p:   numbawon   3686 F...m pipewire
/dev/snd/seq:        numbawon   3686 F.... pipewire
Card #45
	Name: alsa_card.pci-0000_02_00.1
	Driver: alsa
	Owner Module: n/a
	Properties:
		api.acp.auto-port = ""false""
		api.acp.auto-profile = ""false""
		api.alsa.card = ""1""
		api.alsa.card.longname = ""HDA NVidia at 0xf4000000 irq 17""
		api.alsa.card.name = ""HDA NVidia""
		api.alsa.path = ""hw:1""
		api.alsa.use-acp = ""true""
		api.dbus.ReserveDevice1 = ""Audio1""
		device.api = ""alsa""
		device.bus = ""pci""
		device.bus_path = ""pci-0000:02:00.1""
		device.description = ""TU104 HD Audio Controller""
		device.enum.api = ""udev""
		device.icon_name = ""audio-card-analog-pci""
		device.name = ""alsa_card.pci-0000_02_00.1""
		device.nick = ""HDA NVidia""
		device.plugged.usec = ""6588231""
		device.product.id = ""0x10f8""
		device.product.name = ""TU104 HD Audio Controller""
		device.subsystem = ""sound""
		sysfs.path = ""/devices/pci0000:00/0000:00:02.0/0000:02:00.1/sound/card1""
		device.vendor.id = ""0x10de""
		device.vendor.name = ""NVIDIA Corporation""
		media.class = ""Audio/Device""
		factory.id = ""14""
		client.id = ""36""
		object.id = ""42""
		object.serial = ""45""
		object.path = ""alsa:pcm:1""
		alsa.card = ""1""
		alsa.card_name = ""HDA NVidia""
		alsa.long_card_name = ""HDA NVidia at 0xf4000000 irq 17""
		alsa.driver_name = ""snd_hda_intel""
		device.string = ""1""
	Profiles:
		off: Off (sinks: 0, sources: 0, priority: 0, available: yes)
		output:hdmi-stereo: Digital Stereo (HDMI) Output (sinks: 1, sources: 0, priority: 5900, available: yes)
		output:hdmi-stereo-extra1: Digital Stereo (HDMI 2) Output (sinks: 1, sources: 0, priority: 5700, available: no)
		output:hdmi-stereo-extra2: Digital Stereo (HDMI 3) Output (sinks: 1, sources: 0, priority: 5700, available: no)
		output:hdmi-stereo-extra3: Digital Stereo (HDMI 4) Output (sinks: 1, sources: 0, priority: 5700, available: no)
		output:hdmi-surround-extra1: Digital Surround 5.1 (HDMI 2) Output (sinks: 1, sources: 0, priority: 600, available: no)
		output:hdmi-surround71-extra1: Digital Surround 7.1 (HDMI 2) Output (sinks: 1, sources: 0, priority: 600, available: no)
		output:hdmi-surround-extra2: Digital Surround 5.1 (HDMI 3) Output (sinks: 1, sources: 0, priority: 600, available: no)
		output:hdmi-surround71-extra2: Digital Surround 7.1 (HDMI 3) Output (sinks: 1, sources: 0, priority: 600, available: no)
		output:hdmi-surround-extra3: Digital Surround 5.1 (HDMI 4) Output (sinks: 1, sources: 0, priority: 600, available: no)
		output:hdmi-surround71-extra3: Digital Surround 7.1 (HDMI 4) Output (sinks: 1, sources: 0, priority: 600, available: no)
		pro-audio: Pro Audio (sinks: 4, sources: 0, priority: 1, available: yes)
	Active Profile: output:hdmi-stereo
	Ports:
		hdmi-output-0: HDMI / DisplayPort (type: HDMI, priority: 5900, latency offset: 0 usec, availability group: Legacy 1, available)
			Properties:
				port.type = ""hdmi""
				port.availability-group = ""Legacy 1""
				device.icon_name = ""video-display""
				card.profile.port = ""0""
				device.product.name = ""LG TV
       ""
			Part of profile(s): output:hdmi-stereo
		hdmi-output-1: HDMI / DisplayPort 2 (type: HDMI, priority: 5800, latency offset: 0 usec, availability group: Legacy 2, not available)
			Properties:
				port.type = ""hdmi""
				port.availability-group = ""Legacy 2""
				device.icon_name = ""video-display""
				card.profile.port = ""1""
			Part of profile(s): output:hdmi-stereo-extra1, output:hdmi-surround-extra1, output:hdmi-surround71-extra1
		hdmi-output-2: HDMI / DisplayPort 3 (type: HDMI, priority: 5700, latency offset: 0 usec, availability group: Legacy 3, not available)
			Properties:
				port.type = ""hdmi""
				port.availability-group = ""Legacy 3""
				device.icon_name = ""video-display""
				card.profile.port = ""2""
			Part of profile(s): output:hdmi-stereo-extra2, output:hdmi-surround-extra2, output:hdmi-surround71-extra2
		hdmi-output-3: HDMI / DisplayPort 4 (type: HDMI, priority: 5600, latency offset: 0 usec, availability group: Legacy 4, not available)
			Properties:
				port.type = ""hdmi""
				port.availability-group = ""Legacy 4""
				device.icon_name = ""video-display""
				card.profile.port = ""3""
			Part of profile(s): output:hdmi-stereo-extra3, output:hdmi-surround-extra3, output:hdmi-surround71-extra3

Card #46
	Name: alsa_card.pci-0000_00_1b.0
	Driver: alsa
	Owner Module: n/a
	Properties:
		api.acp.auto-port = ""false""
		api.acp.auto-profile = ""false""
		api.alsa.card = ""0""
		api.alsa.card.longname = ""HDA Intel PCH at 0xf4130000 irq 36""
		api.alsa.card.name = ""HDA Intel PCH""
		api.alsa.path = ""hw:0""
		api.alsa.use-acp = ""true""
		api.dbus.ReserveDevice1 = ""Audio0""
		device.api = ""alsa""
		device.bus = ""pci""
		device.bus_path = ""pci-0000:00:1b.0""
		device.description = ""Built-in Audio""
		device.enum.api = ""udev""
		device.form_factor = ""internal""
		device.icon_name = ""audio-card-analog-pci""
		device.name = ""alsa_card.pci-0000_00_1b.0""
		device.nick = ""HDA Intel PCH""
		device.plugged.usec = ""3548765""
		device.product.id = ""0x8d20""
		device.product.name = ""C610/X99 series chipset HD Audio Controller""
		device.subsystem = ""sound""
		sysfs.path = ""/devices/pci0000:00/0000:00:1b.0/sound/card0""
		device.vendor.id = ""0x8086""
		device.vendor.name = ""Intel Corporation""
		media.class = ""Audio/Device""
		factory.id = ""14""
		client.id = ""36""
		object.id = ""43""
		object.serial = ""46""
		object.path = ""alsa:pcm:0""
		alsa.card = ""0""
		alsa.card_name = ""HDA Intel PCH""
		alsa.long_card_name = ""HDA Intel PCH at 0xf4130000 irq 36""
		alsa.driver_name = ""snd_hda_intel""
		device.string = ""0""
	Profiles:
		off: Off (sinks: 0, sources: 0, priority: 0, available: yes)
		output:analog-stereo+input:analog-stereo: Analog Stereo Duplex (sinks: 1, sources: 1, priority: 6565, available: yes)
		output:analog-stereo: Analog Stereo Output (sinks: 1, sources: 0, priority: 6500, available: yes)
		input:analog-stereo: Analog Stereo Input (sinks: 0, sources: 1, priority: 65, available: no)
		pro-audio: Pro Audio (sinks: 1, sources: 2, priority: 1, available: yes)
	Active Profile: output:analog-stereo+input:analog-stereo
	Ports:
		analog-input-front-mic: Front Microphone (type: Mic, priority: 8500, latency offset: 0 usec, availability group: Legacy 1, not available)
			Properties:
				port.type = ""mic""
				port.availability-group = ""Legacy 1""
				device.icon_name = ""audio-input-microphone""
				card.profile.port = ""0""
			Part of profile(s): input:analog-stereo, output:analog-stereo+input:analog-stereo
		analog-input-linein: Line In (type: Line, priority: 8100, latency offset: 0 usec, availability group: Legacy 2, not available)
			Properties:
				port.type = ""line""
				port.availability-group = ""Legacy 2""
				card.profile.port = ""1""
			Part of profile(s): input:analog-stereo, output:analog-stereo+input:analog-stereo
		analog-output-lineout: Line Out (type: Line, priority: 9000, latency offset: 0 usec, availability group: Legacy 3, not available)
			Properties:
				port.type = ""line""
				port.availability-group = ""Legacy 3""
				card.profile.port = ""2""
			Part of profile(s): output:analog-stereo, output:analog-stereo+input:analog-stereo
		analog-output-speaker: Speakers (type: Speaker, priority: 10000, latency offset: 0 usec, availability group: Legacy 4, availability unknown)
			Properties:
				port.type = ""speaker""
				port.availability-group = ""Legacy 4""
				device.icon_name = ""audio-speakers""
				card.profile.port = ""3""
			Part of profile(s): output:analog-stereo, output:analog-stereo+input:analog-stereo
		analog-output-headphones: Headphones (type: Headphones, priority: 9900, latency offset: 0 usec, availability group: Legacy 5, not available)
			Properties:
				port.type = ""headphones""
				port.availability-group = ""Legacy 5""
				device.icon_name = ""audio-headphones""
				card.profile.port = ""4""
			Part of profile(s): output:analog-stereo, output:analog-stereo+input:analog-stereo
Sink #51
	State: IDLE
	Name: alsa_output.pci-0000_02_00.1.hdmi-stereo
	Description: TU104 HD Audio Controller Digital Stereo (HDMI)
	Driver: PipeWire
	Sample Specification: s32le 2ch 48000Hz
	Channel Map: front-left,front-right
	Owner Module: 4294967295
	Mute: no
	Volume: front-left: 65536 / 100% / 0.00 dB,   front-right: 65536 / 100% / 0.00 dB
	       balance 0.00
	Base Volume: 65536 / 100% / 0.00 dB
	Monitor Source: alsa_output.pci-0000_02_00.1.hdmi-stereo.monitor
	Latency: 0 usec, configured 0 usec
	Flags: HARDWARE DECIBEL_VOLUME LATENCY SET_FORMATS
	Properties:
		alsa.card = ""1""
		alsa.card_name = ""HDA NVidia""
		alsa.class = ""generic""
		alsa.device = ""3""
		alsa.driver_name = ""snd_hda_intel""
		alsa.id = ""HDMI 0""
		alsa.long_card_name = ""HDA NVidia at 0xf4000000 irq 17""
		alsa.name = ""LG TV""
		alsa.resolution_bits = ""16""
		alsa.subclass = ""generic-mix""
		alsa.subdevice = ""0""
		alsa.subdevice_name = ""subdevice #0""
		api.alsa.card.longname = ""HDA NVidia at 0xf4000000 irq 17""
		api.alsa.card.name = ""HDA NVidia""
		api.alsa.path = ""hdmi:1""
		api.alsa.pcm.card = ""1""
		api.alsa.pcm.stream = ""playback""
		audio.channels = ""2""
		audio.position = ""FL,FR""
		card.profile.device = ""4""
		device.api = ""alsa""
		device.class = ""sound""
		device.id = ""42""
		device.profile.description = ""Digital Stereo (HDMI)""
		device.profile.name = ""hdmi-stereo""
		device.routes = ""1""
		factory.name = ""api.alsa.pcm.sink""
		media.class = ""Audio/Sink""
		device.description = ""TU104 HD Audio Controller""
		node.name = ""alsa_output.pci-0000_02_00.1.hdmi-stereo""
		node.nick = ""LG TV""
		node.pause-on-idle = ""false""
		object.path = ""alsa:pcm:1:hdmi:1:playback""
		priority.driver = ""696""
		priority.session = ""696""
		factory.id = ""18""
		clock.quantum-limit = ""8192""
		client.id = ""36""
		node.driver = ""true""
		factory.mode = ""merge""
		audio.adapt.follower = """"
		library.name = ""audioconvert/libspa-audioconvert""
		object.id = ""48""
		object.serial = ""51""
		node.max-latency = ""16384/48000""
		api.alsa.period-size = ""1024""
		api.alsa.period-num = ""32""
		api.alsa.headroom = ""0""
		api.acp.auto-port = ""false""
		api.acp.auto-profile = ""false""
		api.alsa.card = ""1""
		api.alsa.use-acp = ""true""
		api.dbus.ReserveDevice1 = ""Audio1""
		device.bus = ""pci""
		device.bus_path = ""pci-0000:02:00.1""
		device.enum.api = ""udev""
		device.icon_name = ""audio-card-analog-pci""
		device.name = ""alsa_card.pci-0000_02_00.1""
		device.nick = ""HDA NVidia""
		device.plugged.usec = ""6588231""
		device.product.id = ""0x10f8""
		device.product.name = ""TU104 HD Audio Controller""
		device.subsystem = ""sound""
		sysfs.path = ""/devices/pci0000:00/0000:00:02.0/0000:02:00.1/sound/card1""
		device.vendor.id = ""0x10de""
		device.vendor.name = ""NVIDIA Corporation""
		device.string = ""1""
	Ports:
		hdmi-output-0: HDMI / DisplayPort (type: HDMI, priority: 5900, availability group: Legacy 1, available)
	Active Port: hdmi-output-0
	Formats:
		pcm

Sink #52
	State: SUSPENDED
	Name: alsa_output.pci-0000_00_1b.0.analog-stereo
	Description: Built-in Audio Analog Stereo
	Driver: PipeWire
	Sample Specification: s32le 2ch 48000Hz
	Channel Map: front-left,front-right
	Owner Module: 4294967295
	Mute: no
	Volume: front-left: 36994 /  56% / -14.90 dB,   front-right: 36994 /  56% / -14.90 dB
	       balance 0.00
	Base Volume: 65536 / 100% / 0.00 dB
	Monitor Source: alsa_output.pci-0000_00_1b.0.analog-stereo.monitor
	Latency: 0 usec, configured 0 usec
	Flags: HARDWARE HW_MUTE_CTRL HW_VOLUME_CTRL DECIBEL_VOLUME LATENCY
	Properties:
		alsa.card = ""0""
		alsa.card_name = ""HDA Intel PCH""
		alsa.class = ""generic""
		alsa.device = ""0""
		alsa.driver_name = ""snd_hda_intel""
		alsa.id = ""ALC221 Analog""
		alsa.long_card_name = ""HDA Intel PCH at 0xf4130000 irq 36""
		alsa.name = ""ALC221 Analog""
		alsa.resolution_bits = ""16""
		alsa.subclass = ""generic-mix""
		alsa.subdevice = ""0""
		alsa.subdevice_name = ""subdevice #0""
		api.alsa.card.longname = ""HDA Intel PCH at 0xf4130000 irq 36""
		api.alsa.card.name = ""HDA Intel PCH""
		api.alsa.path = ""front:0""
		api.alsa.pcm.card = ""0""
		api.alsa.pcm.stream = ""playback""
		audio.channels = ""2""
		audio.position = ""FL,FR""
		card.profile.device = ""4""
		device.api = ""alsa""
		device.class = ""sound""
		device.id = ""43""
		device.profile.description = ""Analog Stereo""
		device.profile.name = ""analog-stereo""
		device.routes = ""3""
		factory.name = ""api.alsa.pcm.sink""
		media.class = ""Audio/Sink""
		device.description = ""Built-in Audio""
		node.name = ""alsa_output.pci-0000_00_1b.0.analog-stereo""
		node.nick = ""ALC221 Analog""
		node.pause-on-idle = ""false""
		object.path = ""alsa:pcm:0:front:0:playback""
		priority.driver = ""1009""
		priority.session = ""1009""
		factory.id = ""18""
		clock.quantum-limit = ""8192""
		client.id = ""36""
		node.driver = ""true""
		factory.mode = ""merge""
		audio.adapt.follower = """"
		library.name = ""audioconvert/libspa-audioconvert""
		object.id = ""32""
		object.serial = ""52""
		api.acp.auto-port = ""false""
		api.acp.auto-profile = ""false""
		api.alsa.card = ""0""
		api.alsa.use-acp = ""true""
		api.dbus.ReserveDevice1 = ""Audio0""
		device.bus = ""pci""
		device.bus_path = ""pci-0000:00:1b.0""
		device.enum.api = ""udev""
		device.form_factor = ""internal""
		device.icon_name = ""audio-card-analog-pci""
		device.name = ""alsa_card.pci-0000_00_1b.0""
		device.nick = ""HDA Intel PCH""
		device.plugged.usec = ""3548765""
		device.product.id = ""0x8d20""
		device.product.name = ""C610/X99 series chipset HD Audio Controller""
		device.subsystem = ""sound""
		sysfs.path = ""/devices/pci0000:00/0000:00:1b.0/sound/card0""
		device.vendor.id = ""0x8086""
		device.vendor.name = ""Intel Corporation""
		device.string = ""0""
	Ports:
		analog-output-lineout: Line Out (type: Line, priority: 9000, availability group: Legacy 3, not available)
		analog-output-speaker: Speakers (type: Speaker, priority: 10000, availability group: Legacy 4, availability unknown)
		analog-output-headphones: Headphones (type: Headphones, priority: 9900, availability group: Legacy 5, not available)
	Active Port: analog-output-speaker
	Formats:
		pcm"
xUeB9iG2,Maximum of minimum for every window size,jayati,C++,Tuesday 10th of October 2023 02:00:28 AM CDT,"//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends

class Solution
{
    public:
    vector <int> maxOfMin(int arr[], int n)
    {
        stack<int> s;
        vector<int> left(n), right(n);

        // Finding the nearest smaller element on the left
        for (int i = 0; i < n; i++) {
            while (!s.empty() && arr[s.top()] >= arr[i])
                s.pop();
            left[i] = (s.empty()) ? 0 : s.top() + 1;
            s.push(i);
        }
        for(int i=0;i<n;i++)
        {
            cout<<left[i]<<"" "";
        }
        cout<<endl;
        // Clearing the stack for the next round
        while (!s.empty()) 
        {
             s.pop();
        }
           

        // Finding the nearest smaller element on the right
        for (int i = n - 1; i >= 0; i--) {
            while (!s.empty() && arr[s.top()] >= arr[i])
                s.pop();
            right[i] = (s.empty()) ? n - 1 : s.top() - 1;
            s.push(i);
        }
        for(int i=0;i<n;i++)
        {
            cout<<right[i]<<"" "";
        }
        cout<<endl;        
        vector<int> result(n);

        for (int i = 0; i < n; i++) {
            int len = right[i] - left[i] + 1;
            result[len - 1] = max(result[len - 1], arr[i]);
        }

        // Filling in any gaps
        for (int i = n - 2; i >= 0; i--) {
            result[i] = max(result[i], result[i + 1]);
        }

        return result;
    }
};


//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;

    while (t--) {
        int n;
        cin >> n;
        int a[n];
        for (int i = 0; i < n; i++) cin >> a[i];
        Solution ob;
        vector <int> res = ob.maxOfMin(a, n);
        for (int i : res) cout << i << "" "";
        cout << endl;
    }
    return 0;
}

// } Driver Code Ends"
Z88gD9gg,Dummy Audio,NumbaWon,Bash,Tuesday 10th of October 2023 01:59:08 AM CDT,"                     USER        PID ACCESS COMMAND
/dev/snd/controlC0:  numbawon   2742 F.... wireplumber
/dev/snd/controlC1:  numbawon   2742 F.... wireplumber
/dev/snd/pcmC1D3p:   numbawon   2742 F...m wireplumber
/dev/snd/seq:        numbawon   2377 F.... pipewire
Card #280
	Name: alsa_card.pci-0000_02_00.1
	Driver: alsa
	Owner Module: n/a
	Properties:
		api.acp.auto-port = ""false""
		api.acp.auto-profile = ""false""
		api.alsa.card = ""1""
		api.alsa.card.longname = ""HDA NVidia at 0xf4000000 irq 17""
		api.alsa.card.name = ""HDA NVidia""
		api.alsa.path = ""hw:1""
		api.alsa.use-acp = ""true""
		api.dbus.ReserveDevice1 = ""Audio1""
		device.api = ""alsa""
		device.bus = ""pci""
		device.bus_path = ""pci-0000:02:00.1""
		device.description = ""TU104 HD Audio Controller""
		device.enum.api = ""udev""
		device.icon_name = ""audio-card-analog-pci""
		device.name = ""alsa_card.pci-0000_02_00.1""
		device.nick = ""HDA NVidia""
		device.plugged.usec = ""6588231""
		device.product.id = ""0x10f8""
		device.product.name = ""TU104 HD Audio Controller""
		device.subsystem = ""sound""
		sysfs.path = ""/devices/pci0000:00/0000:00:02.0/0000:02:00.1/sound/card1""
		device.vendor.id = ""0x10de""
		device.vendor.name = ""NVIDIA Corporation""
		media.class = ""Audio/Device""
		factory.id = ""14""
		client.id = ""34""
		object.id = ""51""
		object.serial = ""280""
		object.path = ""alsa:pcm:1""
		alsa.card = ""1""
		alsa.card_name = ""HDA NVidia""
		alsa.long_card_name = ""HDA NVidia at 0xf4000000 irq 17""
		alsa.driver_name = ""snd_hda_intel""
		device.string = ""1""
	Profiles:
		off: Off (sinks: 0, sources: 0, priority: 0, available: yes)
		output:hdmi-stereo-extra1: Digital Stereo (HDMI 2) Output (sinks: 1, sources: 0, priority: 5700, available: no)
		output:hdmi-stereo-extra2: Digital Stereo (HDMI 3) Output (sinks: 1, sources: 0, priority: 5700, available: no)
		output:hdmi-stereo-extra3: Digital Stereo (HDMI 4) Output (sinks: 1, sources: 0, priority: 5700, available: no)
		output:hdmi-surround-extra1: Digital Surround 5.1 (HDMI 2) Output (sinks: 1, sources: 0, priority: 600, available: no)
		output:hdmi-surround71-extra1: Digital Surround 7.1 (HDMI 2) Output (sinks: 1, sources: 0, priority: 600, available: no)
		output:hdmi-surround-extra2: Digital Surround 5.1 (HDMI 3) Output (sinks: 1, sources: 0, priority: 600, available: no)
		output:hdmi-surround71-extra2: Digital Surround 7.1 (HDMI 3) Output (sinks: 1, sources: 0, priority: 600, available: no)
		output:hdmi-surround-extra3: Digital Surround 5.1 (HDMI 4) Output (sinks: 1, sources: 0, priority: 600, available: no)
		output:hdmi-surround71-extra3: Digital Surround 7.1 (HDMI 4) Output (sinks: 1, sources: 0, priority: 600, available: no)
		pro-audio: Pro Audio (sinks: 4, sources: 0, priority: 1, available: yes)
	Active Profile: off
	Ports:
		hdmi-output-1: HDMI / DisplayPort 2 (type: HDMI, priority: 5800, latency offset: 0 usec, availability group: Legacy 1, not available)
			Properties:
				port.type = ""hdmi""
				port.availability-group = ""Legacy 1""
				device.icon_name = ""video-display""
				card.profile.port = ""0""
			Part of profile(s): output:hdmi-stereo-extra1, output:hdmi-surround-extra1, output:hdmi-surround71-extra1
		hdmi-output-2: HDMI / DisplayPort 3 (type: HDMI, priority: 5700, latency offset: 0 usec, availability group: Legacy 2, not available)
			Properties:
				port.type = ""hdmi""
				port.availability-group = ""Legacy 2""
				device.icon_name = ""video-display""
				card.profile.port = ""1""
			Part of profile(s): output:hdmi-stereo-extra2, output:hdmi-surround-extra2, output:hdmi-surround71-extra2
		hdmi-output-3: HDMI / DisplayPort 4 (type: HDMI, priority: 5600, latency offset: 0 usec, availability group: Legacy 3, not available)
			Properties:
				port.type = ""hdmi""
				port.availability-group = ""Legacy 3""
				device.icon_name = ""video-display""
				card.profile.port = ""2""
			Part of profile(s): output:hdmi-stereo-extra3, output:hdmi-surround-extra3, output:hdmi-surround71-extra3
Sink #295
	State: SUSPENDED
	Name: auto_null
	Description: Dummy Output
	Driver: PipeWire
	Sample Specification: float32le 2ch 48000Hz
	Channel Map: front-left,front-right
	Owner Module: 4294967295
	Mute: no
	Volume: front-left: 65536 / 100% / 0.00 dB,   front-right: 65536 / 100% / 0.00 dB
	       balance 0.00
	Base Volume: 65536 / 100% / 0.00 dB
	Monitor Source: auto_null.monitor
	Latency: 0 usec, configured 0 usec
	Flags: DECIBEL_VOLUME LATENCY
	Properties:
		node.name = ""auto_null""
		device.description = ""Dummy Output""
		audio.rate = ""48000""
		audio.channels = ""2""
		audio.position = ""FL,FR""
		media.class = ""Audio/Sink""
		factory.name = ""support.null-audio-sink""
		node.virtual = ""true""
		monitor.channel-volumes = ""true""
		factory.id = ""18""
		clock.quantum-limit = ""8192""
		client.id = ""31""
		node.driver = ""true""
		factory.mode = ""merge""
		audio.adapt.follower = """"
		library.name = ""audioconvert/libspa-audioconvert""
		object.id = ""63""
		object.serial = ""295""
	Formats:
		pcm"
